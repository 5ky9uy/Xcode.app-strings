mcpl
@pbhw
pbtb
pbiu
otua
rae2
yawa
ciov
bhev
eltb
ciov
@mcpl
________________
tUItUI
tUI tUI!tUI"tUI#tUI$tUI%tUI
tUI.tUI/tUI0tUI1tUI2tUI3tUI4tUI5tUI&tUI'tUI(tUI)tUI*tUI+tUI,tUI-tUI>tUI?tUI@tUIAtUIBtUICtUIDtUIEtUI6tUI7tUI8tUI9tUI:tUI;tUI<tUI=tUINtUIOtUIPtUIQtUIRtUIStUITtUIUtUIFtUIGtUIHtUIItUIJtUIKtUILtUIMtUI
qsvoypntwxum{rzl
HJ1?e;
$m)z
Fa!&J
%{*Y
KE'@
|?h3
[<Nl
vnzmw{xsyoutplrq
8Ank
-v;!
ia@IU
4cH;
$:]'
IOa3
I5K5
[>[v
hZZZhhhZ
zh|nz
zxzjh
">-0
rfN#
AAAA000BBBB1
F-{
^, nr
F{A^
2b9|
QLP$|
=:47
 iC
zDZ:j
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
uu!iPad3,6
$t<S%E
=!_&
Lscl)
L-_Y
U;jK
iPad3,5
0\^2
gH$&Ji
xW35Yz
7SU9
(DF*
oP<>Rq
`?+-Ab
@ Ark
U~Y3~
[X7P
Q-TH
dI]4#BB
|cAo7h^
$)=G
UuyE
(?,F
v'mSY
&XFL
8m@xL
Ja3O
D_a^
0/{.
14W,
n04n
K273
_Gpu
&n@L7
w<Fp
\t l
*8Np
Wd,Mi
Mk +t
^0GF
HV`+
)^R%
th01
:`0~|k
C*2 m
S<9D
iPhone3,3
"r#;8P
S|S@
nTX?O
E:`N+
%e0R
Mc@,
iXY%t):
mZ`Y
=fAa'C
E!].7[
BTaY
2n%k
Mhx1
y~94
?iPhone2,1
s"H5
A/=r
nf@B
:sGm
iPad3,2
d?;A
@UUX\*
><&2 
GxU/T
O;^n
\QXN
g/ty
O[$ss}
,%q.P
1lth
Ifv-j3
Gb4j
yo1@x
m;dW
7b3}
k:U0
Bi[;_8
9J#o
nj( i
hzbHi
-?xXQk
cE+Z
PN7BmP
>L|r
%uM!
2$cSGd
ixJ1na
im6<s
*`;Zcs)T
J<L1p
7hY-=
VB@l
:A@m
{RRI
iPad2,3
CiPad3,4
GcO2
f&xnP
'r+i
I>ac
4d85'
d&}/
HKY$6
v?MR
\U2R
a}r^-%
`il5[
k1%A
B$ ?
&eu}
QL|gl
Dp8n
k46z
iPad3,1
iPhone6,2
AppleTV3,1
!Ro~
FB[AH<
's_b
Z:=2
b@@U!
x1<V)
RO7C
=G'X
%O8<
_#[G
H\Wv
>HAvW
GBm|
#FJ?
'OD2
aRc"P
j^iPad2,4
pXEy
v$Yn<
eMX%
Du3&4
R##_
1E!W
KA^JM_
[in~
\#h7z
vcN-
oUyz
Ofg/&4=
XQCJ|ugn
kbpyOFT]
81#*
(!3:
_VDM{r`i
lew~HASZ
?6$-
+"09xqcj\UGN
KBPYoft}<5'.
,%7>
vdm[R@I
LEW^hasz;2 )
s,Gs
1{NW
Eww$
Vhd
N*<%
H,~'w
Ik/_&
I"}li
zLsx
ul%yh
iPad2,8
j]J0
 DLpLO
J49
8agK
iPad4,1
kIoU
|*`?
2[%li
Nn0:
0#9x[
$H,O
)Bs
9-aI
kqk^TLZ
G`40
!VrfVq
p5KG
`ejo`ejo`ejo`ejo^bgm^bgm^bgm^bgm]dip]dip]dip]dip_chn_chn_chn_chna
nWX[uP]\D[^ZJ
Cs32
Pc?U
KU?4
&il 
iPhone5,1
Rvm_}
7{wG?
<1ry
SOc^
YNe^
R$1b
-!=i/,
+\iPod5,1
l>f7
xWf{
=82E
?@KC
u['<gX
1Q&c
2R%}
"#$%&'()*+,-./01#(-"',1&+0%*/$).'*-0#&),/"%(+.1$")0'.%,#*1(/&-$+
'h.Sk
'X~(R
%Al:a
;\z|H
<*&5
=T4J
X%3D
U&t;
=er.
Y1'
xLL66
RB'iPad2,5
k.[yz
wsx!r&
;7f}
<Xb\
2u/"#`
E'fk3
*`^B
d/:Y
Blw}
H/$G
'oL|
'Xe!
JJw*
ih%w
9b|
iPhone3,2
IQks
,4tl
-5um
HPjr
8 `x
]E~f
9!ay
0(hp
1)iq
$<|d
AYc{
@Xbz
%=}e
uIrN
0Jv
`\]K
#0-,)
pFac#+
AppleTV3,2
t}}R
|,fD
nsbm
<^s0
Al#&
c[-  
Uk(0
z7u>
<`9ao
TWxqnWj
/1Ok
7xW^m
v]uqe
#~)}
tSgGNS
q5g6
-e\z
Z;Ur
L+G:7K
>~Hj
:]:t
!Pk)
I>}i*.
62WZ{
d9k;(
A9vjo<)
&5"=
<rA 
6)+`&'
x~pf
.wc 
~9guF
(^NsB
U-Ba
IRsHW<
Mr>w
GwcK
!Qy[G
K23L
0t:M
rt=j
4rQS
ho~|U=
!0bI/
{O7B!1,-*
ZMhC
k;vr
#oo(
~j0^]B
7,y0#7n
"d7w
nMxd
?B}"
na@>
'Jm>Y
eQix
E`1Mh
\TVwf
iPad2,7
z+^A
WXkb
7/02
Ot',
baXEN
~LKW
Q/,v
5W2l
jf45
83"y%
$tAXd
5vO.n
R.KK
 >*/
9]mC
0[/a`I
z26:
<_sL
++#]
kiCP9~
r`eL
>_c
,: MNLXY
[zMw
|um'b.e
n44Y
`|"\
xw#1
MQV6r
B3@j
N'~"
99.~
5Qc|
z6&h
x4daA
\ 84
0HW_MACHINE
b} 5d=-
OaRz_
GO)1
=_!3k
b)d/
'I~Q
x|+jJ
tK&=
8k%&
@tLsg
`wW?G
aE2t
-e1o
L:Fk
8]rv_
Q;F>V\
`Ta(Z
Y4R"
zL6H
QnXW
NDu}
Aiotr
c:CE
<KDKxV
giI2h
*O+\
BP5!
o0NU
n4__
/q{AR~r
mF(wD
ui3g
UD9M
&K+ov
I0DG
/O(g)
"3io
1Iv9
U'IUp
U$er;
^f~'
EGh[
%o~i
dXtA[6_
lhW{j
?Nrd
zuo8
Q,qb
a%*"
k"u
Y0}-U
+C^ae
!L_D
n8{K
V&~c
p~z'Z
i2tJ>=
x(5@
L9nZ
iPad2,2
Y,jA0=r
 $e9
oNvv
Nm@p9'
or#4
i]8(pq}
Pk943
W!=$%
g=]y
KxY&ll?
kpo+
Mb$=
OSxL
<-{wGP
HoWj
H7}U
`ou+
>=lp
Emxa
M@%M~
HmHCA
:}@A<Ma
.cBo
zh2g
~BB{I[$
E)nW
[.p;
rk>-
5Mm90
`I4_,
iupC
Bexz
3EgMkZ
tIJ'
cnfB
fX*g
z]'f
\R.1*
pk$&
]7:2
(%/)<}
refPR
Uq,L
8iPad4,2
u(KB
3Wpt
1AAz
?\'Kr&
yldW?&
Rlys
7xB?2
B<{&LA
vrDn
7rN_
U.%5a
Ov!si
{<~$
H w=
2#R
VGFD:
M*!H
#BMgt(, 
5&MC
#|4m
/ eD
cBTs!
UM>"o
G1dO
!:m;I
#SH-
@S @
={)0
r!&!U=
]z6Vo
nYx,
fQp$
gPq%
\ *9
DhzV
vZHd
FjxT
&NDW
R|ve
,Ht.s
#j2TS
w[Ie
"Fz }
-d<Z]
vFL_
YugK
6Rn4i
9p(NI
jsyj
#G{!|
,e=[\
yT0V
kGUy
fT^M
6Rn4i
9p(NI
]lfu
<Xd>c
3z"DC
hDVz
Ei{W
%^TG
jVQ
*Nr(u
%l4RU
zVDh
oCQ}
UykG
dHZv
l@R~
cO]q
vZHd
p\Nb
XtfJ
s\VE
!hT
Q}oC
Iew[
[weI
;ndw
>Zf<a
1x FA
O$.=
{2j
xTFj
cO]q
ZvdH
:eo|
5Qm7j
:s+MJ
Sxra
(Lp*w
'n6PW
"Fz }
-d<Z]
)Mq+v
&o7QV
mxra
(Lp*w
'n6PW
;_c9d
4}%CD
]qcO
jFTx
bN\p
.Jv,q
!h0VQ
vZHd
P|nB
[weI
/Kw-p
 i1WP
}QCo
P|nB
dHZv
Tjm
vZHd
Q}oC
ET25
n^TG
jVQ
S<6%
ZvdH
ET25
{WEi
aM_s
bt~m
$@|&{
+b:\[
Bn|P
"ICP
aM_s
s5?,
>Zf<a
1x FA
VzhD
DhzV
Mas_
-HBQ
;j@i
c^(X
_/c<
RIv[#
qa}]
'}+y4b
>v:ia
YN%w
f.P)G
8ZP\M#
Bc"~
`S56
EAc'
,m5~
liPad4,3
O#pJ
.jfq7^
|Cl+
|!C8<
-Vwq
6l1=
&5J9
t#32
n;pbB
,Xa|Bk
y)xe
:I%U
iZ%+
\PEc
{{ds
bZJU
%8)4
=W9+
&*fy
t#A?
DaAX
Lo@S
UQyP
WkO`1
sLT_P
pn@0oO
N){[
t]}$
iPod4,1
I'[F
vw=';
E'6T
Q;P,.
kv4BbJW
X'^
-n',
z}b_s
}~6s
D[z3
ei^9@
AVBEd)
6&n=
Ui2o:
mRGN<
iPad3,3
BP)/k=&lX
2`w1
[M{-
2Z\K
9N:B,
USzR.Wu
Bf}>
p_I%
n~nRXVt
S\[[^ZN
jTi"A
*}$^
dxMui
*<i<k
xw$UrZod
GkF$
wlu2
^j~K
/v<z
sUQM
F`M?
6m^
0{Jo
G0w@
bmXMGt
G"E&
@9IE
SQh`J
W-u0
M%(
]TsN
ys`f
/E;e
jUx^
%/(V
b)mT9
Z'wd
_Wnc
WK\2
iPhone6,1
MbM`N
-IeT
Or\+
mCzm
NxS(
b@RY
8:@,
U=xu3Q
79A&
_2{]
Xrq+
w3w!C
R}rj
x0v+L
iPhone5,3
8X8`3
ZBvc
iPad2,9
O>qi
#XD]`
2Qp.s
z#[I
?E88
:|R}s
vY`gL
xt(q
2Xp,
f!,v(
lz|bo.
XhJ&I
UrS0
R,]q
n{LP
NpO`
@IY2K
f4Q
-X%4.[y
z=[k
dbXQ
Hl[vf
%~|9
r9}
]x/{
T}+}B2?
C1>y
9.i3%
>]{
w<LWl
Y!:,
3yhXKM
w:@d
Ko$8
Itha
WEu7
xVak
0h;o
x<kL
j6a2{U
:9Lg
cuR:;
6H,9h~C$M1y
iPhone3,1
DLX-=8
ES.T3
!U+\1!
_Q*o
0JWN
Fz-=
\U00s
FD\d
zt@"+
o=L=
CeHp
S wu]
C~};
%WSl
3@d9
{@$]Z
zan4X
xce{
K#aE
Y+Av;
SbV3
gAppleTV2,1
edf.
QJj4
Ab1%
wNI2W
7#[1(
_U_S
kN5m1
E:v,}X
~JjSBl
)?A$
IGeiPad2,6
qCu'
QK=$
i*~v
9c.1\
;(7/#
cowh{
&0H]
qn#y
BaXO%
@_GKW
VD6J
"LF*
0]$R_
X`S^(Q
u]p#
ghr%
k]\>
XB7.N
<.\rG
o&,@
eiHJu0a
j7N85
f-e_
z"E[
K:>s
7WN;!v
rG%$
b;|d
i^f:
.WUX
*l]F
,b@9
2z);
gWk$1I2Jh'dT\
6"$W
.7A[
Y3v'@x
aWV4
RH=$D
Cz>T
%Xdj
D[P\
 +tk
GR*<
ASj}
KqCM
>%ie
armuy
YGf>
98n[
(Z4j
'=KR
i.!F
(2G^>
-,N{
Vl$o
#vI]
ig(Uo
]QIVE
$b)}
&n=u
3YNwe
sEDt
laRj
GU'[
!L5CN
3]W;
v~N!>
2tE#o
'83?
EZQ]
<=H|
B{?UF
xB9j
]7sJ
UYRMX
t@54
Dk'Ap6
;7<#
:%-w
OC[DW
!K\e+
4|/g
A~|]Q
5: w
w.O!S
)0F\
(VXd
CWQ=
`lgx
/MC=
mryu
v+ E
9ckt
]7sJ
UYRMX
t@54
$\~1
{0g
K5;d
|ck1
M(#~
}qze
5KE'
!0sk
3|K
GALN7
@c-;
9.DQ
TGq3F
\mv:
!>&*6
K&9yI
48 ?,
($hsB
j"q9
TB:/`
h.e1
AJ|o
 j`[
58:C
+!dE
=lGx
{d)s
,:BW
<4`#
Gy5.
ie}bq
}VkY'
NB]/
1Qjd{>
I,w|MtG
O`Ni
4%8#
gf~9)
_dNQ
|IBAx
XVp= 
M?]4
qJApIz
^P5x
wK!1
lWYF
DOLu
U[}0-
RiC\
jks4$
%TX:
=;S{
<Zj[c
k3L$
oP]m
59&T"\
|`Vd
,{e`Ct
MAWO
#h>G;4
yjJY
.jyYR
|dr~
i=GpS
!H*X
o\eT_d
m EK
SLBy
]`:*
\gtx
5[Us>
JAB{F
)<}P
9QxB
MTjo
RqF<h
JXxk/
K]?M
1!nv
FYWl
x5P^
zIpAJX
%(eCM#
mTW\
<,vK
PGA)
ERC9
0aBu
g>7kKX
eQ<M
sB%C
Jb$"
3A#fT
Whe|
E`,m
)'8}
g .K
d0J}^
M%6x
#gtT_
*&0(
Y \S
BGy`
!oU|
G9[)
8>xP
Y?Xi
b,ye
FtB^
D]cf
$*.S
tKF_
+3|l
."=O
UFf:3j
xOl=
&IN_H
^BY)b
ZBTX
!.R+}6
aVu7
tDu7
-S)[:6%
qAoH
wrPI6
]L5Z
P#hR
) Uu
_ob]
r<iu
W)K9
(.h@
I/Hy
VdRN
A$*
o*5;
Y<2u
-&1S!
06pX
Q7Pa
nwzE
-oL{
BNX@
,g1H4;
neEV
i09D
 &"_
?aoj
%yp)
A;/~
>8<A
;gn7
L|Ru
JOmt
e*pc
0'6Lb
>-ijs
F4V?
g\RM
zAJ{Bq
U[>s
hWZj
l4K#
{gQc
2>!S%[
nYz+
CPp,%|
G;h>
]r+[
!:'6
H[{p
eRq3
^FP\
%*V/y2
+1K%
T$}R
1g4H
{way
NVuB8l
L\|o+
.=u*E
^$Ji
&s7@`
-qx!
=jK
(.*W
0AM/
(.Fn
VjXE
!;A/
TQov
7yCj
<0&>
O6JE
sji->
cp*e
bL6'0
odL$"
DuE#
k+)C
ey~0
#EuD|
"$LdT
129i
!0-6
c<P
O|Et
'UJF
6slbY9
2?rTZ4
zC@K
+;a\
GPV>
J]L6
?nMz
h18dDW
pj^@1{
nU[D
tl#3
HCrKx
\R7z
?/~ma
GXrI
6+f@N
nWT_
%OM(
JYyi>
\DR^
'(T-{0
gPsk
4\#{
L2D6)%
tFpl
BIJs-
=S]{6EZ
To|p
Uh2"
7_YN
[a*Y
|\) 
s`d;
Q&7 
6*1w
xN!|
Gr<;'
$hO0
Jsp{=
^ Z(IEVm
'{r+
<ZIM
"$ ]
~N`G
x}_F9
M@e
tFC_
\EHw
|NxO*p
yL>!-
JF'U9
bYsl
Nt?L
iI<5
|(ReF
iqgk
iz o
hF<-:
y`c'4
qb8w
p^$5"
ax{?,PY
BYE
fTb~
^ V$;7
;[`nq4
DHW%
F}vG~M
)e$
~marI
?/uH
+f@N 
&nWT_
T.@c
Fy=Jj
ajiP
ONV,
wLfy
_S2@
czX]
bEk[
IBbq5
Hk\&r
poE~
%I;ZV
Y`ch
a9CtW
*n}]
eyb$
F 37h
X^Z'
HxVq
NKip
^s2#
Hi>.
adZC
%chkR
uN]Q0B8F
?#$j_
[+2M
fF1u 
oL"X
C,s;(
r=by
-PTR
,c9*L
Wwd #:
CYmr
]~I3
bB7>
jZk)
3M7E$(;
|A0N
UY8J&
}Fls
;^k`cZ
9"?.
J "b
o#gj
9wpl
+-Emf
*L|M
8;0v
:\l]e
;=U}M
D]Po
l^[G
dV`W2h
wgT&95
zY7M
sS$`
{jwl
g(L
O\| )p
bUv'
.TER
`YZQ
(%hN@.
1!{F
]JL$
&;vP^
~GDO
WHbY
3?)(
!~Fh
:-<+0,
m;Tb
{=65
@qA'
k`H &1
o/-G
a}z4
`/uf
5"3Ig
;(lov
iJ$^
`@7s
2;Nn
K8sI
X>-)v
F@D9
{g|:
4pcC
']jI
0~ye
C)+k
"$Ldo
#EuD
*n}]
a9CtW
F 37h
X^Z'
eyb$
~LzM(r
m}N<#/
^GJu
vDA]
\lD,*
tL}M+
6L{X
?&%arR
WQU(
I/<f)
3="g
_z6w
Px>8
iX?Y
yNWE
`kC+-:
KzJ,
jvq?
d$&L
p6=>
_xVf
!^Ge`
IWRqF<h
KXxk/
%Z}1
2.)gR
xCP\=O5K
(nef_
a%Rr
4L6X{
mvkz
q}nU
#3iT
7z\R<
:rKHC
czDA
P_#ZG
+3%)
txnv
YzM7c
ASs`$
=rtg
!0u[|
~:d}
^s2'
adZC
Lv_7
:*mut
B]wL
3.cEK
kRQZ$F
g?ErQ
,h{[
@&51n
^X\!
>"%k^
$bijS
tO\P1C9G
Ta/(4
Y`ch.
M3I;ZVE~
MTjo
9Q<}P
RMCx
%5_c
l!DJ
n]dU^e
 I+Y
A^tO
9)nvw
0-`FH
hQRYl
.jyY
e=GpS
B$73l
\Z^#
vq`w
h<FqR
/kxXS
$jmq
7QaP
60Xp{
%&-k
8#>/
cfXA
tDIv
=U*r
}Oye
E;M? ,
dt;#
G5*&
wEs$
WNC|
upNW
DWw+"{
i^},
%_NY
Sr%5
Eh)8
_|K1i
Uuf"
{l}z
/RVP
`?;(N
f)s`
3$5Oa
=.jip
=O-Dl*,
}L+M
Yfkr
qmhZ
Kn"c
')6s
aV`R
`/uf
5"3Ig
;(lov
nwzE
Ftqm
06pX1S!
Q7PaV
N|J}
]M~
o*5;
E#Du
$"dL
k*fC
zcnQ
{>!/
92iV
 .1t
fQgU
MzK,J
:H*Ck-+
Li%d
vjo]
^alu
'48Y+Q/
5wFv
%[!S2>-
|L}?
%k>"
wjSbi
9G1C\P
ocum
BaV,x
CHh{?
o9V`
8/>)2.
\2HR
vV!e;"]
S<cI
b-+8
R(Fe
"1y&I
:92t
;urn
H" `
)/God
(N~O
yIxS
`\nEY
9Br
$V7;
H2*+
bT0U
4(/aT
2?{7
.hc`Y
~EVZ;I3M
odUlq
VZE7A?
)Irj
$8m#
 ,M?E;
!cRb
&:o!
mfWns
TXG5C=
%&-k
^LUb
\7QaP
!60Xp{
$jmq
NHL1
&?<xkK
j[-
/UbA
/@GVA
\Oo3:c
qFe4
PH^R
+$X!w<
FUue2
Qlq)
^)<'
Xt2@
h3G4
L@j%d
Uv#E}
xDC 3
(Kou
eRjc
KVy\C.
`0<Z
aI-p
]|'%
k5l>
6nW:
>>;h
&w^"^
;n_c
Y8ff
JAAp
p>@"
awaC
I;"t
@HWb
7caB
<Qz#
\HL&
l5q,
,Go
:tN
Evls
%oZ:
sV_X
#2T]
#)^kS
C+A]
K>re
)hK`
eX6]
%&8/k
' Dn
]80qu@
d=R'LE
6Ww(N
935!
j!r4
Z\Ox
:Ey1
l||S
%&W
E?aEN
#{Yk
Cbo"
376V
Vj81
|)%'
^.B#
cbr^
,M."
zt+@
Uo#g
ljA1
KR]$
aDa9/
1d&7
(RoW
K|RHc
kOy~C7
r5N>
D|.'<
} '#
4@>]
MI+2
1{d:
uCJ\
VyB)g
r):e
AlO#9
w%/:
H\zf`
hoQP@
5a6V
?vk G
(]]
:[]z
l4s;DL
N$'b
)"zl
`BcZ
K"#A
KtCi
_jf@
?sP+4Y
.bT@
Y7h-
9.^n
FTFY
ptur
kch`
]C[K
$dMX
r]H:yw
33OW
B uv
"9C?
84w?0
V_)I
x9mq
;YtG
\?rZ
"dp7Z
(@Jg
{)a SQ
~E]BV=
^vvtv
O#K:D
:}s$
`V,m
YSN;
=XKk
j>,%
])=5
Fa!d
Zmxk
l"<r
R}oqz6
rNDGZ
/@#A
6vj!
XW>} 
]5hD%
V08 .
`yX9
2l8M
OQt}
uM*}
!W$4
h7=J
j.7k
:J<n
ls9
?HB,
jTv([
sb5+
JgW}
)I)a
LK784
tGNg\?
MB,1e:
TteQ|
J(>a
 u=^a
nt>x
ck#4
5R&V
e6-Y
VZX<
d:'t
aXqM
zg)z
5`B
S$4l
%C$x
FF.4>
xMC~P5
AH!(i0
X~hHp
;PUT
qQN&
f^21W
_[Pgn
k5kI
=n+
mhe.
;Q`L
G+x8
D2Nq
"Os=
wVEt
u?f|
W2<_
<[Y"D
l%X\
p$/&xo
I!Mp
-*H 
_gQ^
=1h[
tQq%
:Bk\
bXw
l{n>
j&`Y
uEx-
#|}O
7KX1O
cfB%
5_GG
UF9,^lA
e>uw
$:w/
>!X!
Z*]qrd
c/?'Ka
47XI
p1w4
VaaL
1g<B
x_l
n.fi
W''N
)@H"Q
U+m#
52[j
SvcD
eVPo
,{y
|hpv
=6!{
8TwB
,Q4=
Eo1-
<vDd
iWi3
ax#C 
;S|(
"e5H
_Xyxw 
kRNW
S^/1
|@<@
*y9"
GIAJ
,$7E
%T:
uME
vm?n
i."x
o87=
9J)}
Rh|rZ#
r[WD
/U0B
6cy"
UMD=}5
lH&kD0
C#; ;
uj[9
1FAm
I$ap
)=W9
yY\<
/`Y^
?$Ji
]rsl
e4Dh
\1&>
6^OM
`gJ/
.KNs
=g+WE
 }uE
vDp'
F9Mk
6b{3N
=2iS
X+tRp
_dPV
%7gn
LX-|
A<b>iD
+^pr
;$UB
=w3o
qGNR
f*8'Wd
_/Zqna
lg]z
~k[
ZGnsQm
CyNH
uY}c
E$@/
%=vf
9FK+A
h-oy
^7!MvO
~d5R
$/U1
@$PTHo
q4QY
)XeQ
y<nT
f_@i
V"}%
6;Kl
_~# 
VNg)
Y#-G
%Y53
s`0Q
@=>6
zUk4
<I~]
At2mi
xqP;P
I!n)
_gCB
+wW,
ThtN
h,o #
1mN9
UfKi}
uU`_]
lc)?D
{]@>
Cs&z;
u:Fc
-PO23
hy{S
,AU5
"M'J
tt"(
bI~!
+)g*
r),O
C$eS
Eyk4
%`]}
l:vk
#@(
<^}d
5F7t
0$aM
D!WA
&wnD
F<et
Aq3J
|nPd
X/WXpW
y>4o
!0^-Y
v@vM
^55 o{
g0WvV~
3F+C
X&2u
@&Doh^
y#&9Q[
oYHm
(#i5P
$-A?U
t<l@
DAQ
$XgE
rab'
;;Ix
k_B}
y\2X
6{$K
`B!)
Z ^H
li>,
gln5
0&*,
>k-{
EN6 
ceJ}k.
CVaK
Z`(+
 x\T
Kwb(3
d@r2L8
}v;RU
wJ4/<
>r(b
COdRk
Zy-2r
c|OdK
Rr{(*
9aYM
DYw+L!
o>KU
v_PTh
#^3n
yB8,
/{=N
fDH;
Mrh5
)&3)
E~^?
%gh|
%<xt
 ^.M
C#PR
#:fs
<YHe
\@~,
l=C`
$u)
<4(G
a:OAIB
dwiq
;>3Z
"r^*l
>nWQ
\8nT
\0;5
Zm5R
T00
SMN$
s.(D
us&#
#J#A
kc(`
kg"=
(^Z)
rQkhz
Rb@k
6iEX
/_[
Lq1Gd
UGx'}?
1L}w
#dH4
v}~}
lC^'
Zhn
:z[E
Zcm
%.RI
!a6(
<'U"
\>ck
KB7_
B)oG
e$sg
&'ST
4yn)L
e?|>MG
5^Tq
.+_@
L}fE
vLu-
 upO
&(~(
F1Ha
+{;f\
9Kc>
st&g
I,dz
/h\T
yQY6
v$Bl
j"?D[Z
:K;!
0?)m
T4,=|
m1NkE
GV3x
{ZL|
Ct*8
>q%(
hH J
8,+O
4jNs
YeE<!
o,%%
id)uA
PaK#x
3O5?
nAXZ_
WD:f
}y.}
1IS@
{8r)Jv
OV0n
8%d`
\.a0tV
(Pm`
{Do`
Md\K
K9R,
+ de
4CJX
bzO:
d'A]
:TY-
vNs)^6
ox:IG
2v]O
Evy:=
qkKf
#Sy 
QX`P`
Hn)0
,e,`$.
`N6?
+4$-
-i*J
{P/(
bh%C
+&*7\
WN<Y
*oo 
H9V%
Re#`
@}Q#
yx3u
kX<P
=a92
]xGYVR?
tr`r
_-)(
idI1
dT(yL
]QJ/u
]O/yl
Dylz
dJM/U
9D J
Zj^Vr
zYu`R!
Rp06*
d9P/
M& Z
K{.=
b83b
Ha_2
u-oO
pO9v
2\8m
9/F
"_k~
a?rH
Z0(<
c5Jj
wv(c
 (\@
r&Lh
}&;FU^
[\bX
m|Qs
tBq)
"{tK
<i)Q
$&z,
D?Le
2r&e
nG:X
k%la
{1;s
HU0v
TG>`|?
mB\6E:
IYf!1
)zrP
0L;0
Lb,
JTOOB
jgdy
la)?"
hikM
'n}^
qWx<
]z}H
?,DM
!3s9
A*Ep
+28j
7Z<:
v<_l^w
O9=:g
N7ik
bs=j
g#Ya
q/.C@W
~JT'
(sQE
1BF.I
l jq
[?%@sG
3i0Z
TomT
69TQ
DD[_
rdh~
+S)*
kZHm
]z{F
['u!
;>Ch
@X'f
8>PC
^zhm
>c^$
hZ[F
w9u{
']~~
GDH7Ln
6\,w
3>zN
eT:TB
utq
6lmG
[j0I
%uSg
G#jb
 %7l
"iE.Z
eD\b
m,,$ET
T)Nr|Q
0"K"
')t!_
Sv=
|^bB
J:?]`
R8&z
F6p;
&/Fr
@k~\
vKMw
j(cJ
\um-
l[d
+4(t
e4v'
n1&C
XxFZ 
rkSpz
1Eno
vEY9
@9 
Lx"_d6
UNk?}
Bm<A
 IG
ly:1
D02&
QT9S
[S*R
,iuc
.NuC
xwp!
=a%d
1-[=
Q4mt
aIP8
7pUZ
H'pJ`_
9*yi
[|@l
^,$g
V4Bf
c3GI
o1 0
fc#B
2?MU
1/h}
Q6^4
WkPS
aKcx
~(ME
H'#;
6LC"
xuC"
.LF@
)S\L
t4je|
0DU
ec!q
0Jbl
S"y*{Z
7)|z
WL?b
K  >cX
i^zn
r%BhZ]
.G8>V
/+%n
pDDN
l63G]x
9$ E
<t9s
18TA
ZMrP
lmA{
tw2
;2~
s.\m
&7j$
CjdC
\am\
.NuK
E_{O
#1K^
~?,XVq
'X',_
JBWT
|b,]wHT
y)?!qQ
vAhg
KH_|c0
k{tJC
rM=*Z5
F8z>>
/CZ,
Lm$0
.S}#
uhFf
cIU -
ae%G
xT,%
.m)G
aj<
v@Ck^8
OE!=g=
Vsh]~
+N$m
KF;:3
SD@+
hS2G
5]U"
X7t=
g]4'
oi$z
_sRc
F*9l
0:G)
T1Bye
c,EL
m4 /\z
,TP?T
J"3VbZ
z6{l
~KU{
}Rc2
+kfP
N6h7
2LpC
duu!
b({F
1@1F
(vx&
lNV@D
L}}vd
V"?>.
`k_'
RP&.
dp]'oZ%
kXE9c 
nYz
qbML
5Zc*
"7!j
TVg:
=T<|
m07y
7BzK
SIuxb
^NB4
szT-
T*18,
bcQ!
)QHg
MZM7e"
t_/a\'
Ju(g
3R>7
ek;U
swnA
N;^<
c658
XkDxp
xXoNP 
an&.I
e#~-
<`A(
?7w6
_N|Wn
Fx5T
]aN3
z1*8
;Eyd
L:21
I8q0
ttAM
Jg<V
c$!@
3@*E
ey/'
gQJj
B@/s
8g9`
_KJFw3
xapW
sd 3
E-@*=
xji 
AX;iI
x]Y?R
<ewY
%S>9
*fZH
Uq~;-
%u^t._&
h=NF
-u+g
pI1<
p{LaX
PHgWx
I~.7a
eA[<
,!BB
*h:M
|Q?/
,54*
z1H
Md|[
0Y0k
c2"9
"n7f
b#n^J[
'>Sm
Ehjh
;SA)u
|0\r
}'mM
E5>$
4Gt{
:dq]
DB|
l]t?
\ Is
ucT&
#ZQD
s>ZA
iE3V
"+H 
G#wn
F M@
%uNk
=[j-E
<89<
ui}
X3<lpK
a6^:IN
'@r=
GYDt
qyw_
w$y8
,UM
^gd.
>~Rg
X:jI
$|t[
F*M^
8(b/
_0s~
=fJ{
86.p
>qV7F
K'L[
xCG^
{ctu
.zB<
$#:3
d ic
4Dbf
T]T/
#O!
uv$n
$H|'
CN!a
<,9x
KR!%3
s|Ga
IE5'x=
p@WqA8
LK;^
njn" 
*]AX
neo>F
wS&^_
u\j$;
,p><
5F}?
;ly5
q~SY
Y:@0
fd%#
P-E:(
O^JCg&
omauG
>w,`
'Is
GP:0
J<*>
,9>L
sq*
EE!N
N@AW
|]5I
*d0+
SC&8
BQpxj)
bb[NJ
?l<H
&Zu(
EtHWt:
%Q)4
$*"e
tN)`
aB|d
d *]
c)41
[IX
8hH;&@0
q~rFY
QMYpy5
5F\ 
C>v$;
k\g&
O^(_~
Vha?
2cdo:(
8h%W
Z~.`
fBQT
|Uigt-
?{Tx
~6..
bu3~J
[pQ(s
S>PL
5z42
cC1P
3':U
"WOt
| ,F
zB.7
BlHs
uy9o
\:$0
^/5
Zg*W
_X}'w 
Fn4Gn
`SA3
;Sxw
X}n^P6
xN-]
E"n-
%@@8
i %,
4Qju
-g#%
,&x"
PZoFa
Il&E
NpA'
q0o"
3tR9
wL|__4
nz5?F
"O>V
tv;4
r+5S
`gPB
[h(E
]5&"
]+`?
=c =
kZ%_
^VUP
;>.Z
rD6.
4!Jc?
8|*_
erMYM
EAfom9
&o[p
3E.$
\pF7
{a<vs*
Bd^ ga
=[Q(
kbTJ
h`Hd
Y/CVhW
m0,o
!$P5Y
g9P/Or
^<2yv
:77)
b"v6
|_(u
R9lM
0oUH
2F}3
R_Kz
>-eE
+xnB
B Q3
[Psn
pfS]
{%3e
u67V
.<V.`
H)Tx
My0s
88fO
d9O.
4]D+
TDrb
bdAI
+>jw 
)rpp
{ZaP
MzRq
-cd2
UBW-
j'.K
:C%N
lz ,
ml1i
E9=:
Cd3]
\Aw>t9
Ew>^m
yYX0
8Jrn
[dOr
'GS/
{Wd'J
ba-$
Q-a!yU
(A`c
5&dq
OG=m
v;rX
x;Gu
;8gF
u*B]
73M}
swL:
%NIX
Y4Q,
Z-ge
oi_K
<PZ)
iIl`
BS{%
N)`}
=`O$E
)/=s
r.Fi
O vfg
++s6
}3jr
q  _
8@9T
_Fdg
MNW>
-Waw
r?F\
c3Bg
fS8#
0j=A
673&
AK'9
wE+>
/r'}
ROkMz7
Ky"-c
r|@{Z
}d9*
(W\1
x4]!
uY1TD
lorW
.K`=
HEm+y
Qs$(
hvF~
X{b# 
+kPT
oS~2G+
ve7R^
OW!T
`I2%
6p7G
0-9 
&/~l
UZ7R
ZiSY
8?j\
B${<
$u0w
!%T|
e2hEMJ
Csmy
mdE 
;]@B
AzVQ
wZez
(:)4
#?y-
G'X6
`HCb>
Ixx1P
+6=k
)$F{m
5,6 
CzLu
rK}D
)MI'
e}YW
To ~
1AQ*iW
*Zs[
a/)1k
+/Vq
HV,8)
.NE+
=cXw!`NG
u1ST
uOa^{
y\Fc,]"U
g2nx
IbJQ
-i@b+br{
^H-k
q]Y(
{5sh
f_prM
o\$GYr26=
PE+-
t2_d
a^2C/
fY5D(
~A-\0
yF*[7
_3`
TL!@V\
wrK-<
(XS?
NE`k
-AJod
u~[P
!MF6
zqT_3
GSRh
doOg
3MbFd
"0$L2uk
>?X@qAY
D`N cQ/
*UJ4
p=WL
ghUC
sdlA
m"A4
nWxG
WiN%
iPad2,1
&;\7QZV
BUp(
1]&
>6p)
`"&
iPhone4,2
zqYR
0h#;
dGo<
4?w
n=eF
]ED|
p{cH
sX@I
R/4<J
 A3/-
D6Q#H:]/
0B%W<N)[
4F!S8J-_
@2U'L>Y+
R G5^,K9
&T3A*X?M
"P7E.\;I
V$C1Z(O=
U2v(
G~H<
BG#j}
_D'>
R#Mrh^9U
&<m+
08Ea
579CEg
+6:>RV
)8@Hpx
%<L\
$?Q[
.Isu
(;=Oa
'BFj
&AKm
*579CEg
+6:>RV
)8@Hpx
%<L\
$?Q[
.Isu
(;=Oa
'BFj
&AKm
6JQ9
Wd2v
IYa\
[\Z;1]
iPad2,10
lDY=
end&q
W174)
P<{
D%^Gav
FW?KO
t8)W
(HW 
ziSv
FKU>
ue3C
=%Pm_MS
.h{l
|N(q
Bry=_
u{m(
5=)
iPhone5,2
DNxz
&M9Q
v'yCq"8
:SXw
1=Jx
7=SBa
S7}bj
6H_,
alloc
init
class
description
UTF8String
_storePath
dictionaryWithContentsOfFile:
date
_timeouts:expiringAfter:
stringByAppendingPathComponent:
_timeoutsExpiringAfter:
_saveTimeouts:
supportedVocabularyStringTypes
countByEnumeratingWithState:objects:count:
_af_normalizedKeyForKey:appBundleID:syncSlotName:
objectForKey:
initWithCapacity:
anchors
suspendDurationInSeconds
doubleValue
_af_isValid
aceId
_af_normalizedKey
dateByAddingTimeInterval:
setObject:forKey:
addObject:
timeoutsExpiringAfter:
allKeys
addObjectsFromArray:
addEntriesFromDictionary:
saveTimeouts:
allObjects
removeObjectsForKeys:
count
removeObjectsInArray:
containsObject:
enumerateKeysAndObjectsUsingBlock:
setDictionary:
copy
removeAllObjects
appIdentifyingInfo
bundleId
syncSlots
filterBlacklistedKeys:vocabSources:
setSyncSlots:
compare:
keysOfEntriesPassingTest:
dictionaryWithValuesForKeys:
isEqual:
writeToFile:atomically:
defaultManager
removeItemAtPath:error:
sharedInstance
checkIfAnyUserVocabularyIsBlacklistedForApp:completion:
checkPermissionToSyncSlot:forApp:completion:
filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:
filterBlacklistedKeys:appSources:
.cxx_destruct
_cachedTimeoutTable
_queue
hasOpenInterval
openInterval
numberWithDouble:
setTimeUntilOpen:
hasFirstByteReadInterval
firstByteReadInterval
setTimeUntilFirstByteRead:
hasAttemptCount
attemptCount
numberWithUnsignedInt:
setAttemptCount:
hasMetricsCount
metricsCount
setMetricsCount:
hasPingCount
pingCount
setPingCount:
numberWithInt:
hasPingMean
pingMean
setMeanPing:
hasUnacknowledgedPingCount
unacknowledgedPingCount
setUnacknowledgedPingCount:
hasSubflowCount
subflowCount
setSubflowCount:
hasConnectedSubflowCount
connectedSubflowCount
setConnectedSubflowCount:
hasPrimarySubflowIface
primarySubflowIface
setPrimarySubflowInterfaceName:
hasPrimarySubflowSwitchCount
primarySubflowSwitchCount
dictionaryWithObjects:forKeys:count:
setSubflowSwitchCounts:
hasConnectionMethodName
connectionMethodName
setConnectionMethod:
hasConnectionEdgeType
connectionEdgeType
setConnectionEdgeType:
hasConnectionEdgeIDName
connectionEdgeIDName
setConnectionEdgeID:
hasConnectionFallbackReason
connectionFallbackReason
setConnectionFallbackReason:
hasTuscanyConnectionDelay
tuscanyConnectionDelay
setConnectionDelay:
tcpInfoMetricsCount
tcpInfoMetricsAtIndex:
interfaceName
setTCPInfoMetricsByInterfaceName:
timeUntilOpen
setOpenInterval:
timeUntilFirstByteRead
setFirstByteReadInterval:
intValue
meanPing
setPingMean:
primarySubflowInterfaceName
setPrimarySubflowIface:
subflowSwitchCounts
objectForKeyedSubscript:
setPrimarySubflowSwitchCount:
tcpInfoMetricsByInterfaceName
addTcpInfoMetrics:
allValues
firstObject
connectionMethod
setConnectionMethodName:
connectionEdgeID
setConnectionEdgeIDName:
setHasConnectionFallbackReason:
connectionDelay
setTuscanyConnectionDelay:
_ad_metrics
_ad_setMetrics:
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
hasInterfaceName
hasRttCurrent
rttCurrent
hasRttSmoothed
rttSmoothed
hasRttVariance
rttVariance
hasRttBest
rttBest
hasTxPackets
txPackets
numberWithUnsignedLongLong:
hasTxBytes
txBytes
hasTxRetransmitBytes
txRetransmitBytes
hasTxUnacked
txUnacked
hasRxPackets
rxPackets
hasRxBytes
rxBytes
hasRxDuplicateBytes
rxDuplicateBytes
hasRxOooBytes
rxOooBytes
hasSndBandwidth
sndBandwidth
hasSynRetransmits
synRetransmits
initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:bytesSent:bytesRetransmitted:bytesUnacked:packetsReceived:bytesReceived:duplicateBytesReceived:outOfOrderBytesReceived:sendBandwidth:synRetransmits:
setInterfaceName:
unsignedIntValue
setRttCurrent:
setRttSmoothed:
setRttVariance:
setRttBest:
packetsSent
unsignedLongLongValue
setTxPackets:
bytesSent
setTxBytes:
bytesRetransmitted
setTxRetransmitBytes:
bytesUnacked
setTxUnacked:
packetsReceived
setRxPackets:
bytesReceived
setRxBytes:
duplicateBytesReceived
setRxDuplicateBytes:
outOfOrderBytesReceived
setRxOooBytes:
sendBandwidth
setSndBandwidth:
setSynRetransmits:
sharedAnalytics
logEventWithType:context:
sharedDaemon
configureForDaemon
processInfo
systemUptime
setDelegate:
dealloc
_daemonDidLaunch
mainRunLoop
_daemonWillShutdown
_proxyService
_peerLocationService
sharedCommandCenter
_sharedDataConnection
_sharedDataService
listenForSharedDataFromCloud
listenForRemoteRequestsFromCloud
initWithMachServiceName:
_setQueue:
resume
sharedService
beginEventsGrouping
preheatWithStyle:forOptions:completion:
acquireLocationInUseAssertionForReason:completion:
processIdentifier
setRemoteObjectInterface:
setExportedInterface:
initWithXPCConnection:
setExportedObject:
connectionDisconnected
removeDelegate:
clientDisconnected:
releaseLocationInUseAssertionForReason:
endEventsGrouping
setInvalidationHandler:
clientConnected:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
cancelSpeech
stopSpeechWithOptions:
startRecordedAudioDictationWithOptions:language:narrowband:
addRecordedSpeechSampleData:
updateSpeechOptions:
sendSpeechCorrectionInfo:forCorrectionContext:
preheat
preheatWithRecordDeviceIdentifier:
endSession
recordFailureMetricsForError:
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineDictationSupportForLanguage:completion:
interfaceWithProtocol:
remoteObjectProxy
initWithServiceDelegate:
queue
sanityCheckAutodownloadedAssetsForced:
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
deleteAccountWithIdentifier:
setActiveAccountIdentifier:
setAssistantEnabled:
setDictationEnabled:
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_startDeepSyncVerificationForKeys:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setOutputVoice:withCompletion:
setLanguage:withCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:completion:
createOfflineSpeechProfileWithLanguage:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithText:
startUIRequestWithSpeechAudioFileURL:
startRemoteRequest:onPeer:completion:
getPeerIdentifiers:
startAudioPlaybackRequest:completion:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
runAdaptationRecipeEvaluation:language:completion:
runLiveAdaptationRecipeEvaluationWithBaseURL:completion:
setDESRecordingAlwaysIsEnabled:completion:
setDESLotteryWinOverrideEnabled:completion:
disableDESWithCompletion:
setDESPolicyCDNOverride:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
initWithBytes:length:encoding:
initFileURLWithPath:isDirectory:
initWithURL:
bundlePath
bundleIdentifier
isEqualToString:
_bundleID:andPath:forPID:
deleteEverything
recordVocabulary:forIntentSlot:withValidationCompletion:
askToSyncSlot:
fetchSiriAuthorization:
requestSiriAuthorization:
fetchCurrentSiriLanguageCode:
verifyProcessCanDonateIntentWithName:completion:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
initWithBundleID:path:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
connectionConnected:
connectionDisconnected:
setInterruptionHandler:
setObserverConnection:
_clientListenerShouldAcceptNewConnection:
_settingsListenerShouldAcceptNewConnection:
_dictationListenerShouldAcceptNewConnection:
_managedStorageListenerShouldAcceptNewConnection:
_synapseSyncListenerShouldAcceptNewConnection:
_analyticsListenerShouldAcceptNewConnection:
_securityListenerShouldAcceptNewConnection:
_analyticsObservationListenerShouldAcceptNewConnection:
initWithUTF8String:
defaultCenter
postNotificationName:object:
initWithActivationEvent:
updateSharedDataFromPeerUseCache:completion:
sharedPreferences
assistantIsEnabled
_syncForReason:withCoalescing:
updateSpeechProfilesForReasons:
effectiveSettingsChanged
syncForReason:withCoalescing:
_enabledBitsChanged:
addObserver:selector:name:object:
listen
syncCoordinatorWithServiceName:
activeSyncSession
syncDidCompleteSending
syncDidComplete
pushSharedDataToPeer:
_setupSessionLanguage
_setupInternal
_setupIDSServices
_setupClientListener
_setupDictationListener
_setupExternalRequestListener
_setupClientLiteListener
_setupSettingsListener
_setupManagedStorageListener
_setupSynapseSyncListener
_setupAnalyticsListener
_setupContextListener
_setupSecurityListener
_setupAnalyticsObservationListener
_setupSyncListener
_registerForSyncNotifications
_setupTetherListener
_setupNotifyHandlers
_setupDistributedNotificationHandlers
_setupPairedSync
_setupCloudKit
prepareForShutdown
sharedDiagnostics
flush
setLanguageCodeIfNeeded
syncAnchorKeys:forceReset:reasons:
dictationIsEnabled
keepAlive
_syncCoalesced
processLaunchTime
processLaunchMachTime
listener:shouldAcceptNewConnection:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
shutdown
startUIRequest
startUISpeechRequest
scheduleDestroyJob
unscheduleDestroyJob
scheduleValidationRefreshForInterval:
scheduleUnlockedWork:
_analyticsListener
_analyticsObservationListener
_clientListener
_dictationListener
_settingsListener
_synapseSyncListener
_managedStorageListener
_securityListener
_syncListener
_externalRequestListener
_clientLiteListener
_siriTetherListener
_lastSyncRequested
_syncReasonsQueued
_syncActivityRegistered
_proxyRemote
_sharedDataRemote
_peerLocationManagerRemote
_unlockedWorkQueueIsSuspended
_unlockedWorkQueue
defrost
recordDefrostXPCMessageToProcessLaunchDuration:
dictionaryRepresentation
stringWithFormat:
dictionary
allocWithZone:
copyWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
objectAtIndex:
clearTcpInfoMetrics
tcpInfoMetricsType
setHasOpenInterval:
setHasFirstByteReadInterval:
setHasAttemptCount:
setHasMetricsCount:
setHasPingMean:
setHasPingCount:
setHasUnacknowledgedPingCount:
setHasRttCurrent:
setHasRttSmoothed:
setHasRttVariance:
setHasRttBest:
setHasTxPackets:
setHasTxBytes:
setHasTxRetransmitBytes:
setHasTxUnacked:
setHasRxPackets:
setHasRxBytes:
setHasRxDuplicateBytes:
setHasRxOooBytes:
setHasSndBandwidth:
setHasSynRetransmits:
setHasSubflowCount:
setHasConnectedSubflowCount:
setHasPrimarySubflowSwitchCount:
setHasTuscanyConnectionDelay:
tcpInfoMetrics
setTcpInfoMetrics:
_firstByteReadInterval
_openInterval
_pingMean
_rxBytes
_rxDuplicateBytes
_rxOooBytes
_rxPackets
_sndBandwidth
_tuscanyConnectionDelay
_txBytes
_txPackets
_txRetransmitBytes
_txUnacked
_attemptCount
_connectedSubflowCount
_connectionEdgeIDName
_connectionEdgeType
_connectionFallbackReason
_connectionMethodName
_metricsCount
_pingCount
_primarySubflowIface
_primarySubflowSwitchCount
_rttBest
_rttCurrent
_rttSmoothed
_rttVariance
_subflowCount
_synRetransmits
_tcpInfoMetrics
_unacknowledgedPingCount
_has
initWithServiceIdentifier:forRequests:requireConnectedPeer:
setDelegate:forRequestTypes:
initWithDelegate:
locationDataWasRecievedFromPeer
_ad_performForPeerLocationWithCompletion:
sendRequest:responseClass:completion:
peerLocationConnectionSuggestsClearingCachedLocation:
peerLocationConnection:didReceiveUnsolicitedLocation:
locationPeerDidChange
peerConnection:handlePBSubclass:completion:
peerConnection:peerAvailabilityDidChange:
peerLocationPolicySuggestsClearingCachedLocation:
getBestLocationWithCompletion:
_delegate
_peerConnection
_locationPolicy
ad_location
initWithServiceIdentifier:forRequests:
_sharedDataDidChange:
removeObserver:
_pushSharedDataToPeerFromNotification:completion:
hasPeer
userInfo
setPreviousLanguageCode:
setPreviousOutputVoice:
_sendData:
sendSharedData:toPeers:
_getDataWithCompletion:
_setDataFromSharedData:
sendRequest:responseClass:overrideRequireConnectedPeer:allowCloud:completion:
getSharedDataForPeer:
_ad_setData:
peerName
peerVersion
languageCode
setSiriEnabled:
_ad_requestInfo
setSuccess:
errorWithCode:
handleRemoteRequest:completion:
_ad_performWithSharedDataRemote:completion:
_getDataWithPBCompletion:
_startRemoteRequest:completion:
_data
domain
ad_isInAssistantErrorDomain
code
ad_isUnreachableError
ad_isUnrecoverablePeerError
ad_isStricterUnreachableError
ad_isRetryableConnectionError
ad_isAssistantNotReadyError
ad_isStricterRetryableConnectionError
ad_isRetryableSessionError
ad_isPeerConnectionError
ad_isPeerNotNearbyError
ad_isPeerRemoteError
currentRoute
inputs
portName
isEarpieceActiveNoiseCancelationEnabled
_fetchBTInfo
currentCarPlayExternalDevice
screenIDs
componentsJoinedByString:
modelName
deviceWithAddress:
vendorId
stringValue
productId
initWithDictation:fingerprintOnly:secureOfflineOnly:audioAlertStyle:recordSettings:endpointerModelVersion:usingCurrentDeviceWithRoute:audioDeviceID:audioSessionID:voiceTriggerEventInfo:activationAlertStartTimestamp:startRecordingTimestamp:firstBufferTimestamp:deviceIdentifier:includeBTInfo:
initWithDictation:codec:
isBluetooth
codecIsNarrowband
isDictation
isFingerprintOnly
isSecureOfflineOnly
audioAlertStyle
codec
source
route
deviceId
dspStatus
headsetAddress
headsetName
voiceTriggerEventInfo
activationAlertStartTimestamp
startRecordingTimestamp
audioSessionID
isEndAlertInfo
setIsEndAlertInfo:
firstBufferTimestamp
setFirstBufferTimestamp:
triggeredTwoShotBorealis
setTriggeredTwoShotBorealis:
endpointerModelVersion
_btDevice
_isDictation
_isFingerprintOnly
_isSecureOfflineOnly
_isEndAlertInfo
_triggeredTwoShotBorealis
_audioSessionID
_audioAlertStyle
_codec
_source
_route
_deviceId
_modelName
_dspStatus
_headsetAddress
_headsetName
_voiceTriggerEventInfo
_activationAlertStartTimestamp
_startRecordingTimestamp
_firstBufferTimestamp
_endpointerModelVersion
fileExistsAtPath:
_ad_timerRequestRepresentation
ad_aceResponseCommandGenericErrorRepresentation
_ad_timerResponseForResponse:
getSiriRequestForClientBoundAceCommand:completionHandler:
aceCommandForSiriResponse:responseError:forRequestCommand:
timer
_ad_setTimer:
setTimer:
_ad_timerWithState:
setState:
timerValue
setValue:
state
value
setTimerValue:
_ad_timer
numberWithBool:
genderString
initWithFormat:
siriEnabled
dictationEnabled
assistantId
setAssistantId:
speechId
setSpeechId:
sharedUserId
setSharedUserId:
previousLanguageCode
setLanguageCode:
previousOutputVoice
outputVoice
setOutputVoice:
hostname
setHostname:
cloudSyncEnabled
setCloudSyncEnabled:
shouldCensorSpeech
setShouldCensorSpeech:
_siriEnabled
_dictationEnabled
_cloudSyncEnabled
_shouldCensorSpeech
_assistantId
_speechId
_sharedUserId
_previousLanguageCode
_languageCode
_previousOutputVoice
_outputVoice
_hostname
initOnQueue:
start
sendCommand:errorHandler:
cancelWithCompletion:
delegate
setHandoffData:
handoffPayload
sessionHandoffData
link
requestWithActivityInfo:
getInfoForHandoffPayload:userInfo:wepageURL:
remoteRequestInfo
setRemoteRequestInfo:
completion
setCompletion:
_remoteRequestInfo
_completion
_samplesPerInterval
initWithServiceName:
setSampleRate:
appendAcousticData:sampleCount:
getSignature:
reset
_service
_needsConversion
length
initWithLength:
mutableBytes
bytes
setLength:
_convertPCMDataForFingerprinting:
acousticFingerprinter:hasFingerprint:duration:
setFingerprintInterval:
setASBD:
appendPCMData:
_asxConnection
_totalSampleCount
_nextFingerprintSampleNumber
_sourceASBD
_interval
_fingerprinterConverter
initWithServiceIdentifier:
invalidate
initWithMachServiceName:options:
doCommandForServicePath:className:infoDictionary:reply:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
dismissAssistant
getLockStateWithReply:
handleCommand:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
initWithServiceConnection:syncQueue:
_connection
remoteObjectProxyWithErrorHandler:
exportedObject
removeObject:
handleFailureInMethod:object:file:lineNumber:description:
encodedClassName
_bundleClassForDomain:commandName:
markIncomingCommand:
_removeTimer:
initWithTimeoutInterval:onQueue:timeoutHandler:
cancelIfNotAlreadyCanceled
_providerServiceWithErrorHandler:
markResponseForCommand:
initWithDictionary:context:
className
_addWatchdogTimer:
_providerServiceDelegate
setSyncChunkHandler:
uuid
clearSyncRequestWithUUID:
serviceConnectionTimedoutForSync
startTimerOnQueue:withTimeoutHandler:
setSyncRequest:forUUID:
syncRequestForUUID:
timedout
errorWithCode:description:underlyingError:
_syncClassForAnchorKey:
_providerService
addBarrierBlock:
stop
makeObjectsPerformSelector:
_stopTimersWithContinuation
openURL:completion:
isDeviceLocked
isTimeoutSuspended
initWithIdentifier:path:commandMap:anchorMap:clearingClass:maintenanceClass:queue:
sendClientBoundCommand:domain:reply:
sendBeginSyncWithInfo:chunkHandler:completion:
sendFetchSyncSnapshotForInfo:completion:
sendClearDomainObjects
preheatServiceBundle
runMaintenanceWorkWithCompletion:
_openURL:completion:
_getLockStateWithReply:
_handleCommand:completion:
_getTimeoutSuspendedWithReply:
identifier
_targetQueue
_syncQueue
_identifier
_path
_serviceLoaded
_stats
_commandMap
_anchorKeyClassMap
_domainObjectClearingClassName
_maintenanceClassName
_preheated
_watchdogTimers
invalidateTimer
removeObjectForKey:
syncChunkHandler
setPre:
setPost:
setToAdd:
setToRemove:
setValidity:
lastPathComponent
reportIssueForType:subType:context:processIdentifier:
_serviceConnection
_syncRequestsByUUID
_account
_pairedDevice
modelIdentifier
productName
productVersion
productBuildVersion
devices
isDefaultPairedDevice
isConnected
initWithService:
addDelegate:queue:
accounts
anyObject
setWithObject:
_sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:
_hasConnectedPeer
initWithDomain:code:userInfo:
data
initWithProtobufData:type:isResponse:
_destination
sendProtobuf:toDestinations:priority:options:identifier:error:
_wrappedSendFailureError:
isResponse
initWithData:
incomingResponseIdentifier
outgoingResponseIdentifier
expectsPeerResponse
type
_invokeCompletionForIdentifier:response:error:
_sendResponse:forRequestId:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
peerType
peerBuildVersion
serviceIdentifier
sendRequest:
sendRequest:fireAndForget:
sendRequest:responseClass:timeout:completion:
_requireConnectedPeer
_idsService
_completions
_responseClasses
_requestMapFunc
_classMapFunc
initOnQueue:withAccount:
setSharedUserIdentifier:
setConnectionMode:
setSessionType:
_setSessionId:
dormant
_startConnection
assistantSessionConnectionDidReset:
_setCurrentConnectionType:
setCanHandleRequest:
_clearSendBuffer
sessionIsActive
canHandleRequest
connectionMode
refId
_clearLimbo
_resetServerConnectionSynchronously:completion:
_informDelegateOfError:
errorCode
reason
ad_error
_assistantFailedForReason:error:
_refIdIsLimboId:
_removeLimboId:
_passObjectToDelegate:
version
_informDelegateCannotHandleRequest:
_saCommandFailed:
_saGetAssistantData:
_saAssistantLoaded:
_saAssistantNotReady:
_saSetConnectionHeader:
_saCommandIgnored:
sendCommand:opportunistically:
siriCore_invokeThunk
setAceId:
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
supportsSecureCoding
initWithDictionary:
properties
groupIdentifier
logEventWithType:contextProvider:
siriCore_logDiagnostics
assistantIdentifier
speechIdentifier
sharedUserIdentifier
lastAssistantDataAnchor
setLanguage:
_saConnectionType
setConnectionType:
_sendServerCommand:
_sendAssistantDataAndPendingCommandsIfNeeded:
assistantSessionWillStartConnection:
_requestForAssistantData
_sendLoadAssistant
assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:
handleCommand:
assistantSessionConnectionDidClose:
assistantSession:receivedError:isRetryableError:
_cachedAssistantData
anchor
setRefId:
_setPendingAssistantDataAnchor:
siriConnection:willStartWithConnectionType:
siriConnection:didOpenWithConnectionType:delay:
siriConnection:didReceiveAceObject:
siriConnectionDidClose:
siriConnection:didEncounterError:
initOnQueue:withAccount:andLanguageCode:andConnectionMode:andSharedUserIdentifier:
supportsSync
_startSession
barrier:
setHasActiveRequest:
_handleAceObject:
speechRecognized:
speechRecognitionError:
_shouldRetry
_sendAssistantDataChangedSinceAnchor:refId:
_serverConnection
_hasActiveRequest
_requestStartTime
_loadRetryStartTime
_sessionInitCommandId
_canHandleRequest
controlGroup
experimentGroups
mutableCopy
insertObject:atIndex:
allGroups
_getConfigurationsWithCompletion:
_getContextWithCompletion:
experimentIdentifier
setExperimentIdentifier:
synchronize
initWithExperimentsByConfigurationIdentifier:
sharedManager
fetchConfigurationsWithCompletion:
fetchContextWithCompletion:
_builtInConfigurationsByIdentifier
_currentContext
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
dataUsingEncoding:
salt
allocation
_serviceManager
allServices
initWithBlock:
invoke
runServiceMaintenanceWithCompletion:
_acousticIDHelper
startNewAcousticIDSessionWithRequestId:refId:
shouldSendFingerprintForDuration:
searchCommandForFingerprintData:withDuration:
_sendCommandToServer:
currentSession
_speechManager
context
_acousticId_startSessionForSpeechRequest:
_currentClient
adMusicWasDetected
_metrics_musicWasDetected
hasRelatedCommandForRefId:
sessionIsComplete
cancelSessionCommand
failCurrentSession
handleCommandFailed:
adAcousticIDRequestWillStart
acousticIdSearchSessionId
_startAcousticIDRequestWithDelegate:withOptions:context:
setFingerprintWasRecognized
_speechDelegateHasReceivedPartialResult
_metrics_partialResultAcousticIdTimerScheduled
_metrics_partialResultAcousticIdTimerFired
_speechDelegate
cancelSpeechForDelegate:
handleSearchCompleted:
handleRetrySearch:
stopFingerprintingForSuccess:
setSuppressStopAlert:
stopSpeechCaptureIfFingerprintingOnlyWithOptions:
adAcousticIDRequestDidFinishSuccessfully:
_acousticId_startSessionWithContext:
_acousticId_handleFingerprint:duration:
_acousticId_musicWasDetected
_acousticId_hasCommandForRefId:
_acousticId_speechCaptureCompleted
_acousticId_commandFailed:
_acousticId_sessionFailed
_acousticId_reset
_acousticId_clearPartialResultTimer
_saAIRequestSearch:completion:
_saAISearchCompleted:completion:
_saAIRetrySearch:completion:
acousticIDHelperDidStartSession:
acousticIDHelper:didCompleteSessionSuccessfully:
boolValue
_keychainValueForKey:
initWithData:encoding:
_setKeychainValue:forKey:completion:
unsignedIntegerValue
numberWithUnsignedInteger:
accountInfoForIdentifier:
setAccountInfo:forIdentifier:
activeAccountIdentifier
accountIdentifiers
statisticsRecordingEnabled
serverTimeoutInterval
countryCode
setCountryCode:
authenticationDisabled
ignoreLocationWiFiStatus
serverOverride
productTypePrefix
redirectForServerURLString:
setRedirect:forServerURLString:
lastKnownProxyStreamId
setLastKnownProxyStreamId:
lastSyncVerificationDate
setLastSyncVerificationDate:
metricsSenderDisabled
proxyConnectionDisabled
lastKnownAnalyticsStoreState
setLastKnownAnalyticsStoreState:
_needToPostLanguageNotification
_needToPostOutputLanguageNotification
_redirects
latitude
longitude
hasLocationData
contentAttributeSet
phoneNumbers
hasPhoneNumber
_loadVerificationKeys
startVerificationForKeys:
handleSyncChunk:
getVerificationResultsWithHandler:
_persistedVerificationKeysFilePath
dataWithContentsOfFile:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
finishDecoding
initWithArray:
archivedDataWithRootObject:
_saveVerificationKeys
currentVerificationID
_removeVerificationNeededForKey:
setVerificationNeededForKeys:
verificationKeys
startVerificationForKeys:requestID:
getVerificationResultsWithTargetQueue:handler:
_verificationID
_cachedVerificationKeys
_ioQueue
initWithListener:connection:
doClientWork:
_listener
handleNonInterruptingAceCommand:waitForResponse:withDelegate:completion:
handleRemoteCommand:isOneWay:completion:
adRequestWillReceiveCommand:
adRequestDidReceiveCommand:reply:
adRequestDidCompleteWithSuccess:error:
adRequestEncounteredIntermediateError:
_outstandingCommandGroup
_handler
initWithIdentifer:productType:buildVersion:name:
productType
buildVersion
locallyPairedPeerInfo
updateSharedInfoWithIdentifier:productType:buildVersion:
initWithIdentifer:
name
_productType
_buildVersion
_name
commandSucceeded
preheatWithOptions:
_sessionManager
preheatSessions
_locationManager
_preheatAllServices
_metrics_preheat
sharedController
_clockService
cancel
_context_reset
initWithDomainName:className:
initWithCommandType:requestTransformer:responseTransformer:requestHandler:
addService:
taskmasterForUIApplicationWithBundleIdentifier:
_registerDomainSignalServiceWithServiceManager:
_registerOTTServicesWithServiceManager:
_registerNanoServicesWithServiceManager:
setExtensionServiceDelegate:
serviceForDomain:command:
initWithoutHandlingCommands:
initWithSerialQueue:
initWithQueue:
_motionManager
startUpdatingMotionActivityOnQueue:
stopUpdatingMotionActivity
setNeedsToSendLocation:
_cancelSessionManager
_metrics_resetMetricsWithCurrentRequestId:
activeAccount
_sync_reset
_audioPlaybackService
setAudioPlaybackService:
setClientConfiguration:
_setCallIsLikely:
stopLocationUpdates
_metrics_recordNetworkSnapshotForEvent:
_setCurrentRequest:
_setLastRequest:
_replaceRequestDelegate:andCompletion:
beginUpdatingAssistantData
_cancelCurrentRequest
_clearRequestDelegateState
serviceIdentifierForRequestDelegate:
serviceForIdentifier:
reprioritizeService:
_requestWillStart
_replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:
isStopped
cancelSpeechCaptureSuppressingAlert:
sessionUUID
adSpeechRecordingDidFail:sessionUUID:
_clearSpeechDelegateState
adSpeechRecognitionDidFail:sessionUUID:
logRequestLaunchedApp
ad_languageModel
resetExternalResources
sendCommand:opportunistically:logEvent:
_sendCommandToServer:opportunistically:
_sendCommandToServer:opportunistically:completion:
_addCompletion:forCommandId:
_addOutstandingRequestId:
sendRawCommand:opportunistically:logEvent:
_sendRequestToServer:
initWithReason:
setErrorCode:
setRequestId:
endRetryableRequestForCommand:
adInvalidateCurrentUserActivity
setIsCarryDevice:
adTextToSpeechIsMuted
setTextToSpeechIsMuted:
_sendRetryableRequestToServer:
clientBoundCommands
_handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:
_replaceRequestDelegate:
_reallyHandleNewStartLocalRequest:
_replaceSpeechDelegateWhenReady:suppressAlert:withCompletion:
_handleNextCallbacksForReply:forCommand:forRequestId:
_resultObjectCache
commandsForReply:toCommand:missingReferences:
_handleCommand:
initWithMissingReferences:forRequestId:
setFulfillmentBlock:
addMissingReferencesContext:
setObjectIdentifiers:
hasBeenFulfilled
_saAddResultObjects:completion:
_currentRequest
logRequestCancelAfterSeconds:
clearResultObjectsForRequestId:
_requestDidEnd
_removeOutstandingRequestId:
ad_parentRequest
_sync_isSyncing
_isInCall
_shutdownAfterDelay:
_hasActiveClientOrSyncingOrInCall
sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:
_sync_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
_lockStateSetRestrictionsThunk
adviseSessionArbiterToContinueWithPreviousWinner:
_handleServiceReply:error:forCommand:
_hasOutstandingRequestId:
_sync_hasCommandForRefId:
_hasCompletionForCommandId:
requiresResponse
appId
setAppId:
callbacks
setCallbacks:
ad_requiresResponse
_processCallbacksForCommand:
delegateDidHandleCommand:
_handleServiceCommand:completion:
ad_willHaveReply
_invokeCompletionForCommand:
ad_hasCallbacks
_callIsLikely
callIsPossibleForRequestId:
ad_shouldIgnoreCallbacksOnReply
_handleNextCallbacksForReply:forCommand:
ad_sendReplyEvenIfCallbacksExist
_handleValidServiceReply:forCommand:
_sendCommandFailedForCommand:error:
_sendCommandFailedForCommand:reason:
_metrics_markEventForServiceCommand:inDomain:
_firstChanceServiceForCommand:
logEventWithType:context:contextNoCopy:
handleCommand:forDomain:reply:
aceObjectWithGenericCommand:context:
updateForCallIsLikelyDueToRequest:
updateForCallState:
_cancelCallKeepAlive
_scheduleCallKeepAlive
startObservingCallStateWithDelegate:
stopObservingCallStateWithCompletion:
_shutdownSessionWhenIdle
_setIsInCall:
_sync_continueIfConditionsMet
_refIdIsSpeechStart:
_endSpeechRequestForCommand:withError:suppressAlert:
_removeFirstChanceServiceForAceId:
_completeRequestForCurrentDelegate:error:
setObjects:
sessionRequestIdForRefId:
addResultObjects:sessionRequestId:
_handleBareRequestCompleted:
_sync_commandFailed:
_sync_commandIgnored:
_handleSendCommands:forRequestDelegate:completion:
commands
_startNonSpeechRequest:forDelegate:options:suppressAlert:prepareAudio:completion:
holdToTalkThresholdInMilliseconds
ignoreServerManualEndpointingThreshold
integerValue
setManualEndpointingThreshold:
adSetUserActivityInfo:webpageURL:
_handleNewStartLocalRequest:suppressCancelationAlertIfCapturingSpeech:
objects
resultObjects
_ad_setHandoffPayload:
startRemoteRequest:completion:
textToSpeechIsMuted
adServerRequestsTTSStateUnmuted:
processedAudioDuration
_acceptResultCandidate:featuresToLog:completion:
updateEndpointHintForDuration:completion:
resultId
setProcessedAudioDuration:
setResultId:
enforcePreviousEndpointHint
eager
noteSuccessOfRequest:inCar:
_languageModelForSpeechRequest:
adSpeechRecognized:usingSpeechModel:sessionUUID:
_handleSpeechRecognizedWithRefId:delegateBlock:
adPronunciationRecognized:usingSpeechModel:sessionUUID:
activationDeviceIdentifier
setActivationDeviceIdentifier:
useAutomaticEndpointing
setUseAutomaticEndpointing:
stopSpeechCaptureWithOptions:
_metrics_markBaselineTimeForSpeechRecognized
_metrics_markSpeechRecognized
_dictationSessionDidComplete
logSpeechRecognized
_informSpeechManagerOfRecognitionForElapsedTime:isFinal:completion:
af_bestTextInterpretation
tokens
lastObject
endTime
longLongValue
adSpeechRecognizedPartialResult:usingSpeechModel:
_handlePartialResultWithRefId:elapsedTime:delegateBlock:
_metrics_markPartialSpeechRecognition
updateOptionsAfterRecognitionForElapsedTime:isFinal:completion:
adSpeechRecognizedStructuredResult:usingSpeechModel:sessionUUID:
recognition
_metrics_recordFailureMetricsForError:
aggregator
speechResponseReceived
reasonDescription
adWaitingForAudioFile
setContext:
adSpeechRecordingDidEndWithSessionUUID:
adSpeechDidFindVoiceSearchPartialResult:
adSpeechDidFindVoiceSearchFinalResult:
_handleSuspendClientEndpointer:
audioProcessedMs
suspendDurationMs
suspendAutomaticEndpointingInRange:
endpointConfirmationTimestamp
setConfirmed:
setEndpointConfirmationTimestamp:
getLastStartpointTimestampAndCurrentTime:
ad_csEndpointFeatures
updateServerEndpointFeatures:
threshold
setEndpointerThreshold:
delay
setEndpointerDelayedTrigger:
object
_context_acknowledgeBulletinForObject:
updateLocationForCommand:completion:
_diagnosticsManager
updateLatencyDiagnosticConfiguration:completion:
dictationSessionDidComplete
_metrics_recordRequestStatisticsMetrics
hasResultObjectsForRequestId:
isLocallyRecognizingInDictationMode
_invokeAllCompletionsWithError:
_shouldRetryForError:
resetRetryManager
cancelSessions
_sessionDidFailWithError:
startRetry
isLocallyRecognizing
setRestrictionsToAdd:
_metrics_destroyAllMetricsIfNeeded
_sync_assistantLoadedSyncRequest:
_metrics_setConnectionPolicyId:routeId:connectionDelay:
_startObservingCallState
adSpeechRecognitionWillBeginRecognitionUpdateForTask:
_sendStartSpeechCommandWithSpeechManager:info:
_sendContextAndRestrictionsForSpeechRequestWithInfo:
dictationLanguage
dictationOptions
transcriptionMode
ad_startSpeechDictationWithAFDictationOptions:
currentLocale
localeIdentifier
setRegion:
setCensorSpeech:
applicationName
mainBundle
setApplicationName:
applicationVersion
objectForInfoDictionaryKey:
setApplicationVersion:
interactionId
setInteractionId:
pronunciationContext
setTokenOffset:
setDomainObjectPropertyIdentifier:
orthography
setOrthography:
ad_setParentRequest:
serverCommandId
setStructuredDictationType:
ad_setAFSpeechRequestOptions:
ad_setADRecordingInfo:
motionActivity
setMotionActivity:
motionConfidence
setMotionConfidence:
origin
audioSource
setIsDriving:
_sendEnableServerEndpointerCommandWithRefID:
_sendLocationIfNeededForRequest
needsToSendLocation
activationEventTime
_context_updateContextWithActivationEventTime:
_sendRestrictionsInPreparationForRequest
adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:sessionUUID:
_metrics_setRecordingWillStartTime:
adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:sessionUUID:
_metrics_setRecordingDidStartTime:withBluetooth:
ad_updateWithRecordingInfo:speechRequestOptions:
ad_isDifferentFromStartSpeech:
adSpeechRecordingDidChangeAVRecordRoute:sessionUUID:
usePrelisteningMode
setPackets:
setPacketNumber:
_sendSessionObject:opportunistically:
_metrics_endpointWasExtendedDueToMusicClassifier
_metrics_speechManagerDidFinish
setPacketCount:
ad_setAFEndpointMode:
ad_setCSEndpointerMetrics:
_speechCaptureCompleted
adSpeechRecordingDidCancelWithSessionUUID:
_sendCancelSpeechForCommand:
adAudioFileFinishedWriting:error:sessionUUID:
_metrics_markLocalSpeechStartedWithModelInfo:
secureOfflineOnly
_metrics_markLocalPartialSpeechRecognition
adSpeechRecordingDidRecognizeTokens:sessionUUID:
_metrics_markLocalEagerRecognitionCandidate:
serverBoundConfusionNetwork
UUID
UUIDString
aceRecognition
setRawRecognition:
phrases
utterances
enumerateObjectsUsingBlock:
_metrics_markLocalSpeechPackage
cancelLocalRecognitionIfActive
logLocalRecognitionWonForLanguage:
_handleLocalSpeechRecognitionForOfflineSupport:
adSpeechRecordingDidRecognizePhrases:sessionUUID:refId:
speechRecognized
setRecognition:
setSessionId:
_metrics_logSpeechRecognized:resultId:
_metrics_markLocalSpeechCompletedWithStatistics:
speechFailure
setReason:
speechError:
adSpeechRecordingDidDetectStartPointWithSessionUUID:
numberWithLong:
setEndpointTimestamp:
adSpeechRecordingPerformTwoShotPromptWithType:sessionUUID:completion:
bargeInOptions
adQuickStopWasHandledWithActions:
_stopMediaPlaybackWithContextID:completion:
adWantsToCacheImage:
adExtensionRequestWillStartForApplication:
adExtensionRequestFinishedForApplication:error:
adHandleIntent:inBackgroundAppWithBundleId:reply:
adAudioPlaybackRequestWillStart:
adAudioPlaybackRequestDidStart:
adAudioPlaybackRequestDidNotStart:error:
adAudioPlaybackRequestDidStop:error:
muteMode
preheatAndMakeQuiet:
prepareAudioSystemWithOptions:completion:
endSessionIfIdle
isValidForSiriSessionLanguage:
initWithLanguageCode:
_outputVoice_setOutputVoice:
postNotificationName:object:userInfo:
lockRestrictedCommands
firstUnlockRestrictedCommands
controlCenterLockRestrictedCommands
setRestrictions:
initWithThunk:
_reallyEndSessionForDelegate:
_ad_requestCommandWithRequestHelper:
text
_ad_requestOptions
adStartUIRequestWithText:completion:
startLocalRequest
handoffURLString
initWithString:
_reallyHandleNewStartRequest:
_contextManager
updateBackgroundContextIfNowPlayingInfoChanged
notifyState
speechRequestOptions
audioFileURL
_forceAudioSessionActiveWithCompletion:
_startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:
activationEvent
_metrics_setValuesForSpeechRequestOptions:
_dismissFiringAlarmsAndTimersWithCompletion:
cancelSpeechProfileUpdate
startSpeechCaptureForRequestWithOptions:sessionUUID:language:
audioFileType
homeButtonDownEventTime
_metrics_recordRequestMetric:withTimestamp:
_metrics_recordUIMetrics:
retrieveMetricsFromPreviousPunchout:
_startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:
playRecordingStartAlert
startAcousticIDCaptureWithOptions:sessionUUID:
startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:
languageCodeOverride
_clearContext
_context_setSTApplicationContext:
setDictationLanguage:
setDictationOptions:
startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startRecordedDictationCaptureWithSessionUUID:narrowband:
addRecordedDictationAudioSampleData:
_lastRequest
_sendRollbackCommandForCommand:
setSuppressAudioInterruptionEndedNotifications:
_updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:
_metrics_recordSpeechOptions:
ad_setAFSpeechCorrectionInfo:
ad_setAFCorrectionContext:
newAceObjectWithDictionary:context:
_startNonSpeechRequest:forDelegate:
initWithRequestDelegate:
_setFirstChanceService:forAceId:
removeService:
resetWinningState
_context_clearContext
clearDomainObjects
locales
_sendCommandToServer:completion:
objectsForIds:missingReferences:
dismissWithOptions:completion:
array
accountForIdentifier:
removeAndSave
_clearAccount
stopSendingAddressBookUpdates
needsDestruction
setNeedsDestruction:
save
deleteAllUserVocabularyFromAllAppsAsync
_metrics_destroyAllMetrics
resetSessionsAndMakeQuiet:
refreshValidationData
validationExpiration
timeIntervalSinceNow
_remoteRequestHelper
adRequestRequestedOpenURL:completion:
_remoteSpeechRequestHelper
setSpeechRequestOptions:withCompletion:
currentToken
_domainObjectCache
setDomainObject:forKey:
domainObjectForKey:
_sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:
_sync_setSyncDelegate:
_sync_startDeepSyncVerification
_sync_startDeepSyncVerificationForKeys:
_preheatWithStyle:forOptions:completion:
preheatServicesForDomain:
_forceAudioSessionInactive
bestSupportedLanguageCodeForLanguageCode:
_setLanguageCode:outputVoice:
_clearQueuedLanguageCode
_clearQueuedOutputVoice
_setLanguageCode:withCompletion:
_setLanguageCodeIfNeeded
_processQueuedLanguageCode
_processQueuedLanguageCodeAndOutputVoice
_processQueuedOutputVoice
_setLockState:showingLockScreen:
_setStarkRestriction:
_setCarDNDRestriction:
_setConfiguration:forClient:
_endSessionForDelegate:
_startRequest:withDelegate:
_handleRemoteRequest:completion:
_handleRemoteSpeechRequest:completion:
_prepareAudioSessionForDelegate:withOptions:
_startSpeechRequestWithDelegate:withOptions:sessionUUID:
_startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:
_startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
_cancelRequestForDelegate:
_rollbackRequestForDelegate:
_startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
_startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
_addRecordedSpeechSampleData:delegate:
_startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
_metrics_sendEngagementFeedback:voiceQueryIdentifier:
_removeDelegate:
_stopSpeechWithOptions:forDelegate:
_cancelSpeechForDelegate:
_updateSpeechOptions:forDelegate:
_setSuppressAudioInterruptionEndedNotifications:
_sendSpeechCorrectionInfo:forCorrectionContext:
_handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:
_context_rollbackClearContext
_context_setOverriddenApplicationContext:withContext:
_context_willSetApplicationContextWithRefId:
_context_setApplicationContext:
_context_setApplicationContextForApplicationInfos:withRefId:
_context_setAlertContextDirty
_prepareForPhoneCall
_telephonyRequestCompleted
_requestBarrier:
_metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:
_metrics_recordDefrostXPCMessageToProcessLaunchDuration:
_metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:
_fetchSupportedLanguagesWithCompletion:
fetchSupportedLanguagesWithCompletion:
_accounts
_deleteAccountWithIdentifier:
_activeAccountIdentifier
_setActiveAccountIdentifier:
_destroyActiveAccount
_refreshAssistantValidation
_rescheduleValidationRefresh
_managedStoreObjectForKey:
_setManagedStoreObject:forKey:
_context_fetchApplicationContextForApplicationInfos:completion:
_setUIService:
_startUpdatingMotionActivity
setHasClient:
handle
_stopUpdatingMotionActivity
_resetServices
clearResultObjectsForAllRequestIdsExcept:
_metrics_recordRequestIndifferentMetrics
_sync_syncIfNeeded
adRequestRequestedOpenApplicationWithBundleID:URL:completion:
adRequestRequestedDismissAssistant
_stopObservingCallStateWithCompletion:
cancelSynchronously
_getDeferredObjectsWithIdentifiers:completion:
outputAudioPowerUpdater
beginUpdate
createNewXPCWrapperWithCompletion:
endUpdate
_handleNonInterruptingAceCommand:waitForResponse:withDelegate:completion:
updateSpeechSynthesisRecord:
_adviseSessionArbiterToContinueWithPreviousWinner:
info
sharedQueue
assistantSessionManager:receivedCommand:
assistantSessionManager:receivedError:isRetryableError:
assistantSessionManager:shouldLogVisibleRequestFailureForError:
assistantSessionManagerSessionConnectionDidReset:
assistantSessionManagerSessionRemoteConnectionDidReset:
assistantSessionManagerShouldAttemptRetry:
assistantSessionManagerCommandsToRestoreStateOnNewConnection:
assistantSessionManager:didChangeRequestIdFrom:toId:
assistantSessionManagerDidCreateAssistant:
assistantSessionManagerDidDestroyAssistant:
assistantSessionManager:didLoadAssistantSyncRequested:
assistantSessionManager:didOpenConnectionWithPolicyId:routeId:connectionDelay:
assistantSessionManager:willRetryOnError:
assistantSessionManager:didObserverIntermediateError:
assistantSessionManagerRequestsObservingCallState:
speechManager:preheatWithRecordingInfo:
speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:sessionUUID:
speechManager:didStartRecordingWithInfo:sessionUUID:
speechManager:didUpdateRecordingWithInfo:sessionUUID:
speechManager:capturedPackets:atTimestamp:totalCount:
speechManager:capturedFingerprint:duration:
speechManagerDidDetectMusic:
speechManagerDidDelayEndpointForMusic:
speechManager:didUpdateInputAveragePower:peakPower:
speechManager:didUpdateOutputAveragePower:peakPower:
speechManager:didFinishWithTotalPackets:endpointMode:capturingMode:endpointerMetrics:sessionUUID:
speechManager:didCancelWithSessionUUID:
speechManager:didFailWithError:sessionUUID:
speechManager:didFinishWritingAudioFile:error:sessionUUID:
speechManager:didBeginLocalRecognitionWithModelInfo:sessionUUID:
speechManager:didRecognizeTokens:sessionUUID:
speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:
speechManager:didRecognizePackage:sessionUUID:
speechManager:recognitionUpdateWillBeginForTask:
speechManager:recognitionDidCompleteWithError:sessionUUID:statistics:
speechManager:didDetectStartpointAtTime:sessionUUID:
speechManager:didDetectEndpointAtTime:sessionUUID:
speechManager:performTwoShotPromptWithType:sessionUUID:completion:
speechManager:didRequestQuickStopWithSessionUUID:
speechManager:didRequestShutdownUIWithSessionUUID:
speechManager:didChangeRecordingState:
locationManager:wantsToSetRequestOrigin:
UIService:executeCommandHandler:
extensionService:wantsToCacheImage:
extensionService:extensionRequestWillStartForApplication:
extensionService:extensionRequestFinishedForApplication:error:
extensionService:handleIntent:inBackgroundAppWithBundleId:reply:
audioPlaybackService:willStartRequest:
audioPlaybackService:didStartRequest:
audioPlaybackService:didNotStartRequest:error:
audioPlaybackService:didStopRequest:error:
adCallStateChangedCallInProcess:
_hasOutstandingRequests
_cancelSessionIfIdle
_didLaunchAppForRequestWithIdentifier:
_fetchStarkDeviceLockedStateWithCompletion:
setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
_sendServiceCommand:completion:
_saRequestCompleted:completion:
_saCommandFailed:completion:
_saCommandIgnored:completion:
_saSendCommands:completion:
_saAssistantDestroyed:completion:
_saCancelSucceeded:completion:
_saRollbackSucceeded:completion:
_saSetClientData:completion:
_saSetHandoffPayload:completion:
_saStartLocalRequest:completion:
_saExecuteCallbacks:completion:
_saInitiateHandoffOnCompanion:completion:
_saSetDeviceTTSMuteState:completion:
_saSetVoiceTriggerEnabled:completion:
_saGetVoiceTriggerEnabled:completion:
_sasResultCandidate:completion:
_sasSpeechServerEndpointIdentified:completion:
_sasSpeechRecognized:completion:
_sasPronunciationRecognized:completion:
_sasSpeechPartialResult:completion:
_saStructuredDictationResult:completion:
_saStructuredDictationFailure:completion:
_sasSpeechFailure:completion:
_sasAbortSpeechRequest:completion:
_sasVoiceSearchPartialResult:completion:
_sasVoiceSearchFinalResult:completion:
_sasSuspendClientEndpointer:completion:
_sasConfirmEndpoint:completion:
_sasServerEndpointFeatures:completion:
_sasClientBoundConfusionNetwork:completion:
_saClientSetupInfo:completion:
_saAcknowledgeAlert:completion:
_saGetRequestOrigin:completion:
_saSetLatencyDiagnosticConfiguration:completion:
_saUnhandledObject:completion:
_setIsTimeoutSuspended:
_prepareForAppLaunchForRequest:
_firstChanceServiceChangeIdFrom:to:
setSyncDelegate:
startDeepSyncVerification
startDeepSyncVerificationForKeys:
forceAudioSessionActiveWithCompletion:
forceAudioSessionInactive
setLanguageCode:withCompletion:
setQueuedLanguageCode:
setQueuedLanguageCode:andQueuedOutputVoice:
setQueuedOutputVoice:
setLockState:showingLockScreen:
setIsStark:
setCarDNDActive:
setConfiguration:forClient:
endSessionForDelegate:
startRequest:withDelegate:
handleRemoteSpeechRequest:completion:
prepareAudioSessionForDelegate:withOptions:
startSpeechRequestWithDelegate:withOptions:
startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:
startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
startAcousticIDRequestWithDelegate:withOptions:context:
startSpeechRequestWithURL:isNarrowBand:withDelegate:
cancelRequestForDelegate:
rollbackRequestForDelegate:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
addRecordedSpeechSampleData:delegate:
startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
sendEngagementFeedback:voiceQueryIdentifier:
stopSpeechWithOptions:forDelegate:
updateSpeechOptions:forDelegate:
handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:
clearContext
rollbackClearContext
setOverriddenApplicationContext:withContext:
willSetApplicationContextWithRefId:
setApplicationContext:
setApplicationContextForApplicationInfos:withRefId:
setAlertContextDirty
prepareForPhoneCall
telephonyRequestCompleted
recordRequestMetric:withTimestamp:
requestBarrier:
sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:
fetchSupportedLanguages
fetchAccounts:
fetchActiveAccount:
fetchActiveAccountIdentifier:
destroyActiveAccount
refreshAssistantValidation
rescheduleValidationRefresh
fetchManagedStoreObjectForKey:completion:
fetchContextForApplicationInfo:completion:
openApplicationWithBundleID:URL:completion:
getDeferredObjectsWithIdentifiers:completion:
beginUpdateOutputAudioPowerForClient:completion:
endUpdateOutputAudioPowerForClient:
_broadcastCommand:
_listInstalledServicesWithCompletion:
_requestDelegate
_speechFileDelegate
_deviceIsLocked
_isInStarkMode
_isInCarDNDMode
_isTimeoutSuspended
_requestCompletion
_requestGroup
_uiService
_speechManagerIsRecording
_speechCompletion
_requestBarrier
_currentSpeechRequestOptions
_startSpeechCommand
_startingPronunciationRequest
_pronunciationContext
_speechDelegateHasReceivedSpeechRecognized
_sessionExperiencedError
_hasReceivedServerSpeechRecognitions
_currentSpeechRequestDismissedFiringAlarms
_currentSpeechRequestDismissedFiringTimers
_dismissalFiringAlarmsAndTimersGroup
_speechRecognitionGroup
_speechRequestGroup
_continuePendedRequestTimestamp
_droppedPackets
_outstandingRequestIds
_aceCompletionMap
_clientConfiguration
_deviceIsShowingLockScreen
_requestEffectiveStartTime
_restrictionsWereSetForRequest
_requestEndCompletion
_deferredRequestEndIdentifier
_firstChanceServices
_callObserver
_callTransactionUUID
_callTransaction
_hasQueuedLanguageCode
_queuedLanguageCode
_hasQueuedOutputVoice
_queuedOutputVoice
_requestStatistics
_offlineMetricsManager
_isSendingAnalyticsEventStreamsAndOfflineMetrics
_vtStateManagerAccessQueue
_accountStoreQueue
_serviceMaintenanceGroup
_lastClearContext
_syncManager
_syncDelegate
_outstandingAnchorsRequests
_outstandingSyncChunks
_outstandingSyncPromiseKeys
_outstandingSyncPromiseID
_needsToSendSyncFinished
_syncAnchorsRequestQueue
_outstandingSyncVerificationRequestID
_shouldPostSyncVerifyFinishedNotification
_needVerificationFullReport
_verificationHelper
_deepVerificationManager
_partialResultAcousticIDTimer
_hasSanityCheckedAutodownloadedAssets
ad_leadingSilence
ad_trailingSilence
ad_endTime
setRecordDeviceIdentifier:
expectedActivationEventTime
ad_aceResponseCommandRepresentationWithErrorCode:reason:
setIdentifier:
setLabel:
setGroup:
setPredefinedServer:
setAceHost:
setConnectionPolicy:
setConnectionPolicyDate:
setConnectionPolicyHostname:
setLocaleIdentifier:
setLastAssistantDataAnchor:
setValidationExpiration:
setPeerHostname:
setAssistantIdentifier:
_setKeychainValue:forKey:
setSpeechIdentifier:
setPeerAssistantIdentifier:
setPeerSpeechIdentifier:
_serverOverrideFromPreferences
hasSuffix:
rangeOfString:
_hostnameOverride
_hostnameQAOverride
autoupdatingCurrentLocale
_setKeychainValueSync:forKey:
_infoDictionaryForPreferences
setServerCertificateData:
setValidationData:
setLocalCryptoKeyData:
_removeKeychainValueForKey:
messageDictionary
serverCertificateData
validationData
setValidationDataSync:
localCryptoKeyData
clearAssistantData
label
group
predefinedServer
aceHost
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
connectionPolicyFailureCount
setConnectionPolicyFailureCount:
_sharedDataChanged
_peerAssistantIdentifier
_peerSpeechIdentifier
_peerHostname
_cachedHostname
_cachedServerCertificateData
_cachedValidataionData
_cachedLocalCryptoKeyData
_hasCachedHostnameQAOverride
_cachedHostnameQAOverride
_keychainQueue
_needsDestruction
_label
_assistantIdentifier
_speechIdentifier
_group
_predefinedServer
_aceHost
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_localeIdentifier
_lastAssistantDataAnchor
_validationExpiration
_connectionPolicyFailureCount
peerAssistantIdentifier
peerSpeechIdentifier
peerHostname
connectionPolicyWithDictionary:context:
saConnectionPolicy
timeToLive
connectionPolicyExpirationDate
connectionPolicyStatus
_cancelBestLocationTimer
setDesiredAccuracy:
ad_createSiriLocationManagerWithSetupBlock:
location
_executeBestLocationCompletionWithLocation:
_executeBestLocationCompletionWithLocationErrorWithCode:
startUpdatingLocation
ad_setLocation:
_startBestLocationTimer
_hasActiveBestLocationRequest
_startUpdatingLocation
stopUpdatingLocation
_executeBestLocationCompletionWithLocation:error:
_ad_performWithPeerLocationManagerRemote:completion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_getBestLocationWithCompletion:
_bestLocationTimer
_bestLocationCompletion
_ad_transformedShowActivityRequest
_ad_transformedSuccessResponse
activityDataType
activityView
_initWithDataType:view:
_handleNewConnection:
_xpcListener
_ADPBProxyRequestType
service
domains
commandsForDomain:
initWithObject:
hasEqualOrHigherPrecedenceThanServiceRecord:
insertBeforeItem:
insertAfterItem:
previousItem
nextItem
syncKeys
initWithService:precedence:
_addServiceWithRecord:
removeFromList
precedence
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
requiredInfoDictionaryKeys
pathExtension
infoDictionary
setValue:forKey:
initWithContentsOfFile:
_generatedBundleServicesCache
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_bundleServicesCache
initWithBundlePath:infoDictionary:
_addService:precedence:
_loadServicesIfNeeded
_serviceMap
_syncKeyMap
_removeService:
_reprioritizeService:
customVocabSyncInfo
serviceForSyncAnchorKey:
newServiceForSyncAnchorKey:
addServiceWithLowPrecedence:
allSyncAnchorKeys
allVocabSyncInfo
preheatBundleServices
_bundleServicesLoaded
_precedence
errorWithDomain:code:userInfo:
_ad_handleStopwatchRequestWithCompletionHandler:
handleSiriRequest:deliveryHandler:completionHandler:
_saveStats
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_statsDirectory
_serviceStatsPath
propertyListWithData:options:format:error:
_statsDict
_commandTimes
_statsForCommand:
timeIntervalSinceDate:
_serviceIdentifier
domainObjectCommitTypeForDomainNamed:
initWithDomainName:
taskmaster:didReceivePunchoutOutcome:
taskmaster:didLaunchApplicationForRequestWithId:
appLaunchHandler:didLaunchAppForRequestId:
initWithBase64EncodedString:options:
processDataMap:usingProcedure:completion:
decryptRouteUIDs:completion:
setDirectAction:
_init
updateLocalTCCInfoFromMirroredInfo
_tccUpdateQueue
_ignoreLocalUpdates
_pendingCommands
_addLimboId:
_shouldSendAssistantData
_sendPendingCommands
_addPendingCommand:
technology
sessionType
assistantSession:receivedCommand:
assistantSession:willRetryOnError:
assistantSession:cannotHandleRequest:
deleteRegisteredIdentifiers
sharedDataManager
addObserver:
requestAssistantDataUpdate
_waitingForAssistantData
dataAnchor
requestSync
assistantSession:didLoadAssistantSyncRequested:
_forceFastDormancy
_releaseDormancySuspension
_sendPendingDormantCommands
_setDormantWithStyle:
_probeSessionIfIdle
_pendDormantCommand:
siriCore_bufferingAllowedDuringActiveSession
_sendLimboCommand:
_cancelSynchronously:
_removeRequestForAssistantData
initWithTechnology:
_adSessionTypeFromString:
assistantDataManager:didUpdateAssistantData:
_setSessionOpened
_sendBuffer
_adSessionTypeString
_informDelegateWillRetryOnError:
_sendCommandFailedWithRefId:
_sendDestroyAssistant
doSendPreProcessing:
doSendPostProcessing:
_setAssistantDataAnchorIfNeeded:
eagerlyFetchAssistantData
beginRetryableRequest:
endRetryableRequestForCommandAceId:refId:
delegateDidHandleCommand:didRecognizeSpeech:
getConnectionMetrics:
prepareForRetry
retryNakedCommandsIfNeeded
cancelSessionRequest:
resetConnection
setDormant:
hasLoadedAssistant
sessionIsAttemptingTryOrRetry
sessionIsWaitingForAssistantData
sessionId
_currentConnectionType
queueResultObjects:
dequeueResultObjects
setOrUpdateUsefulnessScore:
hasResultObjects
usefulnessScore
hasUsefulnessScore
_connectionMode
_pendingAssistantDataAnchor
_limboIds
_state
_assistantDataRequested
_assistantDataRefId
_dormant
_dormantQueue
_sessionType
_sessionId
_resultObjectsQueue
_resultUsefulnessScore
_hasUsefulnessScore
_sharedUserIdentifier
_currentSpeechCaptureSource
initWithChannel:
initWithProvider:queue:frequency:delegate:
outputReferenceChannel
_fetchAssetsForLanaugeOrEnablementNotification:
_speechRecorder
releaseAudioSession
_interactiveLocalSpeechRecognizer
fetchAssetsForLanguage:completion:
initWithDelegate:instanceUUID:
writeDESRecord
_cleanUpDelegateInfo
_createNewXPCWrapper
_updateSpeechState:
_tellDelegateSpeechFailedWithError:
_tellDelegateSpeechCanceled
_tellDelegateSpeechFinishedWithPacketCount:endpointMode:endpointerMetrics:
endSpeechLog
setSpeechRequestOptions:
offlineLanguage
detectUtterances
originalAudioFileURL
modelOverrideURL
recognitionOverrides
startSpeechRecognitionWithLanguage:task:context:narrowband:detectUtterances:maximumRecognitionDuration:farField:secureOfflineOnly:censorSpeech:originalAudioFileURL:overrides:modelOverrideURL:didStartHandler:
_tellDelegateSpeechStartedWithRecordingInfo:
beginNewSpeechLogWithFormat:
_speechCodecError
_cancelRecordingWithError:suppressAlert:
_tellDelegateUpdateAudioInfo:
logVoiceRecordingEnd
finishAudio
_recordingStoppedWithError:endpointMode:totalPacketCount:endpointerMetrics:
appendSpeechPackets:
_tellDelegateAboutSpeechPackets:atTimestamp:count:
addAudioPacket:
_tellDelegateAboutFingerprint:duration:
_tellDelegateMusicWasDetected
_tellDelegateEndpointWasDelayedForMusic
_tellDelegateAudioFileDidFinish:error:
_tellDelegateSpeechStartpointWasDetectedAtTime:
_tellDelegateSpeechEndpointWasDetectedAtTime:
_tellDelegateToPerformTwoShotPromptWithType:completion:
_tellDelegateQuickStopWasRequested
_tellDelegateShutdownUIWasRequested
_tellDelegateAboutInputAveragePower:peak:
eagerlyInitializeAudioRecording
_updateCapturingStateWithOptions:
preheatSpeechRecognitionWithLanguage:
prepareSpeechCaptureWithError:
fetchAudioSessionID
_startFixedPriorityCaptureForMode:options:sessionUUID:
_startCaptureForMode:options:sessionUUID:
_badStateError
prepareForMode:
recordingInfoForPreheatWithEvent:
_tellDelegateSpeechShouldPreheatWithRecordingInfo:
_tellDelegateSpeechRecognitionUpdateWillBegin
acousticIdEnabled
setFingerprintingEnabled:
setAudioFileType:
audioFileHandle
setAudioFileHandle:
speechRecordingEventListeningEndpoint
setSpeechRecordingEventListeningEndpoint:
_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:
startSpeechCaptureWithWillStartHandler:error:
isInitialBringUp
logTimeToBeepWithDuration:
_speechCompressor
startCompressionNarrowband:
addAudioSampleData:
startPlaybackWithURL:narrowBand:dictation:completion:
cancelCurrentSpeechLog
_stopSpeechCaptureWithOptions:
suppressStopAlert
stopSpeechCaptureForEvent:suppressAlert:
setSuppressInterruptionEndedNotifications:
_releaseSession
setSpeechWasRecognizedForElapsedTime:isFinal:
forceSuccessAudioAlertOnStop
stringByReplacingOccurrencesOfString:withString:
speechProfileDataLastModifiedDataForLanguage:
updateSpeechProfileWithLanguage:completion:
localSpeechRecognizer:didRecognizeTokens:
localSpeechRecognizer:didProcessAudioDuration:
localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:
localSpeechRecognizer:didRecognizePackage:
localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:
speechCapturingDidStartRecordingSuccessfully:error:withInfo:
speechCapturingDidUpdateRecordingInfo:
speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:
speechCapturingDidRecordPCMAudioData:
speechCapturingWillStopRecording
speechCapturingDidStopRecordingWithError:endpointMode:totalPacketCount:endpointerMetrics:
speechCapturing:didReceiveFingerprint:duration:
speechCapturingDidDetectMusic:
speechCapturingDidDelayEndpointForMusic:
speechCapturing:didFinishWritingAudioFile:error:
speechCapturing:didDetectStartpointAtTime:
speechCapturing:didDetectEndpointAtTime:
speechCapturing:performTwoShotPromptWithType:completion:
speechCapturingDidRequestQuickStop:
speechCapturingDidRequestShutdownUI:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
isLocallyRecognizingInSiriMiniMode
resetLocalRecognizer
isCapturing
isDriving
inputAudioPowerUpdater
_localSpeechRecognizerTask
_speechState
_shouldTalkToDelegate
_capturingMode
_recordingError
_recordStartedCompletion
_recordStoppedCompletion
_speechLog
_currentCapturing
_playbackSimulator
_dictationLanguage
_dictationOptions
_context
_isDriving
_sessionUUID
_inputAudioPowerUpdater
_outputAudioPowerUpdater
_fetchSyncFlagsOnDisk
_setSyncNeededFlagsForKeys:
_clearSyncNeededFlagsForKeys:
contentsOfDirectoryAtPath:error:
hasPrefix:
substringFromIndex:
stringByAppendingString:
createFileAtPath:contents:attributes:
fetchKeysThatNeedToSync:
setSyncNeededFlagForKeys:
clearFlagsForKeys:
clearAllFlags
_cachedFlags
absoluteString
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
_listenForAudioRouteChanges
_updateAudioRouteOnMainThread
outputs
portType
_currentRouteIsHandsFree
_notifyObservers:
_audioRouteChanged:
removeObserver:name:object:
_muteStateChanged:
useDeviceSpeakerForTTS
_listenForMuteStateChanges
_stopListeningForMuteStateChanges
_stopListeningForAudioRouteChanges
_useDeviceSpeakerForTTSPreferenceChanged
addHandsFreeStateObserver:
removeHandsFreeStateObserver:
_observers
_useDeviceSpeakerForTTSPreference
_handsFreeLock
applicationStateForApplication:
sharedConnection
effectiveBoolValueForSetting:
effectiveRestrictedBoolValueForSetting:
standardUserDefaults
persistentDomainForName:
defaultWorkspace
openSensitiveURL:withOptions:
initWithBytes:length:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
adShouldSpeakStateDidChange:
initWithIdentifier:
intent
_updateCurrentIntent:
intentResponse
_updateCurrentUserActivityForType:intent:intentResponse:
userActivities
_addUserActivities:
userActivity
initWithActivityType:
initWithIntent:response:
numberWithInteger:
setIntentHandlingStatus:
donateInteractionWithCompletion:
_setInteraction:donate:
_intentsIdentifier
request
userActivityWithIdentifier:
updateWithState:
currentIntent
currentUserActivity
_userActivitiesByIdentifier
_transactionStatesCoveredByDonations
_request
_currentIntent
_currentUserActivity
initWithAudioDeviceID:
sharedSession
currentInputRoute
_inputRoute
deviceName
_isBluetooth
_deviceName
_uid
initWithSpeechCapturingMode:
isRecording
setSpeechCapturingMode:
bundleForClass:
URLForResource:withExtension:
_speechController
setAlertSoundFromURL:forType:
setRecordBufferDuration:
getRecordBufferDuration
_speechControllerWithError:
avvcContext
initializeRecordSessionWithContext:
endpointAnalyzer
setEndpointStyle:
setSynchronousCallbackEnabled:
setMeteringEnabled:
setEndpointMode:
setEndpointAnalyzerDelegate:
setDuckOthersOption:
_setDictationModeEnabled:
_updateRecordBufferDuration
resetAudioSession
getLPCMAudioStreamBasicDescription
recordSettings
prepareRecordWithSettings:error:
_resetSpeechController
_cancelExtendedEndpointTimer
stopRecording
_logFanState
_speechControllerDidStartRecording:successfully:error:
needsUpdateToPostVoiceMode
updateToPostVoiceMode
_setCurrentDeviceContext
_updateToPostVoiceIfNecessary
playAlertSoundForType:
limitedAudioLoggingEnabled
enumeratorAtPath:
nextObject
initWithType:fileHandle:priority:
initWithType:pathGenerator:priority:
fileLoggingIsEnabled
canGetPCMStream
_checkAudioLoggingLimits:
speechEvent
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
configureWithAudioStreamBasicDescription:
setStartWaitTime:
setEndWaitTime:
setInterspeechWaitTime:
_setEndpointStyle:
_stopRecordingWithReason:
canPrewarm
prewarmAudioSession
canPrepareWithoutInterruption
_prepareSpeechControllerWithError:
_setAlertsIfNeeded
_recordingInfoForEvent:audioAlertStyle:includeBTInfo:
_stopRecordingForEndpointReason:
setAutomaticEndpointingSuspensionEndTime:
_setSpeechCapturingMode:
recordRoute
shouldUseVoiceTriggerAnalyzerStyle
setMinimumDurationForEndpointer:
_clearEndpointHint
startRecordingSettings
timestamp
setDelay:
startRecordingWithSettings:error:
shouldExplicitlyPlayAlertOnStart
_playAudioAlert:
_scheduleExtendedEndpointTimer
beginTimestamp
endTimestamp
opaqueSessionID
updateAudioSessionID:
logEventWithType:machAbsoluteTime:context:
setSpeechRequestOptions:currentActivationInfo:
_setActivationInfo:
recordDeviceIdentifier
avvcNeedsReconfigForInfo:
setCurrentContext:error:
suppressInterruptionEndedNotifications
releaseAudioSession:
metrics
_logAudioMetrics:
_resetToDefaultAudioContext
initWithListenerEndpoint:
lastStartOfVoiceActivityTime
shouldPlayAlertIfNotPrelistening
processServerEndpointFeatures:
alertStartTime
secondsForHostTime:
_audioDeviceID
voiceTriggerInfo
_speechControllerDidStopRecording:forReason:errorCodeOverride:underlyingError:
_currentRecordingInfo
_logVoiceTriggerInfo:
speechCapturingMode
tapToSiriAudioPlaybackRequest
_startAudioPlaybackRequest:completion:
_setPendingContextIfNecessary
_setupAudioFileWritingForSpeechController:info:
startRecording:
_speechRecordingEventListener
handleSpeechRecordingEvent:
flushWithCompletion:
_speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:atHostTime:
logEventWithType:machAbsoluteTime:context:contextNoCopy:
_fingerprinter
appendAudioData:
_fakeTwoShotPromptType
_fakeTwoShotWithPromptType:atTime:
_speechControllerRequestsOperation:forReason:
additionalMetrics
_hardEndpointWasDetectedWithMetrics:atTime:
shouldTreatTimeoutAsHardEndpoint
_checkIfLastEndpointHintShouldBeAccepted
setSaveSamplesSeenInReset:
twoShotAudioPlaybackRequest
playRecordStartingAlertAndResetEndpointer
_handleFakeTwoShotPromptTimeoutWithUUID:
_handleFakeTwoShotPromptCallbackWithUUID:timestamp:duration:error:
_enforceEndpointHint
shouldAcceptEagerResultForDuration:resultsCompletionHandler:
updateEndpointerThreshold:
updateEndpointerDelayedTrigger:
_setAudioDuckingEnabled:
speechControllerRecordBufferAvailable:buffers:recordedAt:
speechControllerLPCMRecordBufferAvailable:buffer:
speechControllerDidDetectVoiceTriggerTwoShot:atTime:
speechControllerDidStartRecording:successfully:error:
speechControllerDidStopRecording:forReason:
speechControllerDidDetectStartpoint:
speechControllerDidDetectEndpoint:ofType:atTime:
speechControllerRecordHardwareConfigurationDidChange:toConfiguration:
speechControllerBeginRecordInterruption:
speechControllerBeginRecordInterruption:withContext:
speechControllerEndRecordInterruption:
speechControllerRequestsOperation:forReason:
endpointer:didDetectStartpointAtTime:
endpointer:didDetectHardEndpointAtTime:withMetrics:
_packetCount
_speechCapturingMode
_usingDictationAlerts
_extendedEndpointTimer
_endpointAnalyzer
_activationInfo
_pendingActivationInfo
_fingerprintingEnabled
_audioFileType
_needsAVVCLPCMCallbacks
_audioFileHandle
_audioFileWriter
_audioLogggingFileWriter
_startEvent
_recordingState
_didReceiveFirstBuffer
_didDetectStartpoint
_didDetectEndpoint
_didEnterTwoShotMode
_didFakeTwoShotWithAlert
_fakeTwoShotTTSPromptUUID
_serverDidRecognizeSpeech
_fingerprintWasRecognized
_serverDidEndpoint
_didTimeout
_wasCanceled
_suppressRecordingStoppedAlert
_useAutomaticEndpointing
_isRecordingUsingBTRoute
_twoShotStartTime
_forceSuccessAlertOnStop
_needsUpdateCurrentContext
_lastPrepareTimestamp
_recordingWillStartGroup
_recordDevice
_audioDuckingEnabled
_duckedDeviceID
_speechRecordingEventListenerConnection
_fakeTwoShotTTSPromptWatchdogTimer
_lastAudioRecordBufferStartTime
_lastAudioRecordBufferReceiptTime
_lastEndpointerMetrics
_lastEndpointHintDuration
_lastEndpointHintFeatures
_lastEndpointHintCompletion
_mostRecentSpeechSynthesisRecord
_currentClientConfiguration
_suppressInterruptionEndedNotifications
endpointerType
syncManager:finishedSyncForKeys:postNotification:
_postSyncFinishedNotification
_setCurrentAnchor:
removeLastObject
_setContinueBlock:
syncManager:chunkForSyncInfo:chunkInfo:
syncManagerIsPausingSync:
_currentAnchor
_waitUntilSafeToContinue
_setCurrentAnchorToNext
initWithAnchor:forcingReset:
setForVerification:
_syncFinishedForService:error:
_syncingService:withSyncInfo:receivedChunk:continueBlock:
beginSyncForInfo:chunkHandler:
_finishSync
appMetaData
_preferredSyncKeyOrder
_sortedAnchorsFromAnchors:
_setAnchorsToSync:
_continueSync
_invokeContinueBlockWithKeepGoingArgument:
isSyncing
cancelSyncForAnchor:
syncManagerDidResetInProgressSync:
serviceTimedoutForSync:
initWithServiceManager:queue:
prepareSyncWithAnchors:delegate:
addQueuedAnchors:
clearQueuedAnchors
queuedAnchors
continueSync
_forceResetOnNextSync
_setForceResetOnNextSync:
_continueBlock
getAnchorsRequest
setGetAnchorsRequest:
isVerifying
setIsVerifying:
_anchorsToSync
_queuedAnchorsByNormalizedKey
_syncedAnchors
_currentSyncService
_currentSyncID
_currentSyncShouldCancel
_timedoutServices
_isVerifying
_getAnchorsRequest
initWithObjects:
syncKeysForReason:
shouldSyncEverythingForReason:
shouldIncludeAllKnownSiriKitAnchorsForReason:
shouldSyncThirdPartyUserVocabularyForSyncKeys:
shouldSyncIntentPolicyForSyncKeys:
setWithObjects:
_whitelistedAppSourceSyncKeys
aceDictionary
setAceDictionary:
oldId
setOldId:
_aceDictionary
_oldId
setObject:forKeyedSubscript:
setDomainObject:withOldId:forKey:
oldIdForKey:
_cacheEntriesByAceKey
activationEventMachAbsoluteTime
_canUseZLL
hostTimeForSeconds:
_alertBehaviorForZLL:
_eventIsVoiceTrigger
isVibrationDisabledInAccessibility
vibratesForMuteMode:
isVibrationEnabledForVoiceOver
event
requiresBorealisConsumerCheck
canEnterTwoShot
useBorealisBuffer
usePrelistening
deviceIdentifier
machAbsoluteTime
_activationMode
_useBorealisBuffer
_usePrelistening
_speechEvent
_deviceIdentifier
_timestamp
_machAbsoluteTime
closeWithError:
stringByStandardizingPath
_insertEventRecords:error:
_fetchEventStreamUIDsWithError:
_fetchEventRecords:afterTimestamp:eventStreamUID:error:
_deleteEventRecordsBeforeOrEqualToTimestamp:eventStreamUID:error:
_fetchEventRecordsCreatedAfterDate:error:
fileExistsAtPath:isDirectory:
attributesOfItemAtPath:error:
_resetWithError:
initWithPath:dataProtectionClass:options:
openWithError:
performIntegrityCheckWithError:
initWithName:type:constraints:
initWithName:columns:constraints:
createTable:error:
dropIndexWithName:error:
initWithName:tableName:columnNames:options:
createIndex:error:
_preparedDatabaseWithError:
beginTransactionWithError:
subarrayWithRange:
removeObjectsInRange:
insertIntoTableWithName:valueMap:error:
commitTransactionWithError:
rollbackTransactionWithError:
isQueryCriterionWithColumnName:value:negation:
lessThanOrEqualToQueryCriterionWithColumnName:value:
andQueryCriterionWithSubcriteria:
deleteFromTableWithName:criterion:error:
timeIntervalSince1970
initWithColumnNames:mode:
selectValuesFromTableWithName:columnName:behavior:criterion:order:range:error:
siriCoreSQLiteValue_toString
greaterThanQueryCriterionWithColumnName:value:
initWithLimit:
selectValueMapsFromTableWithName:columnNames:behavior:criterion:order:range:error:
greaterThanOrEqualToQueryCriterionWithColumnName:value:
initWithPath:
insertEventRecords:completion:
fetchEventStreamUIDsWithCompletion:
fetchEventRecords:afterTimestamp:eventStreamUID:completion:
deleteEventRecordsBeforeOrEqualToTimestamp:eventStreamUID:completion:
fetchEventRecordsCreatedAfterDate:completion:
purgeWithCompletion:
resetWithCompletion:
_deleteEventRecordsCreatedBeforeDate:error:
path
_database
streamUID
null
contextData
contextDataType
dateCreated
siriCoreSQLiteValue_toNumber
siriCoreSQLiteValue_toData
dateWithTimeIntervalSince1970:
initWithType:timestamp:contextDataType:contextData:
initWithEvent:streamUID:dateCreated:
hashedRouteUIDs
hashedRouteUID
_ad_mediaRemoteOptions
_ad_encryptedRouteIDs
positionInMilliseconds
_ad_performWithReplyHandler:
repeatMode
shuffleMode
adjustmentInMilliseconds
scalingFactor
numberWithFloat:
nextItemCount
previousItemCount
fetchNowPlayingQueueWithLookahead:lookbehind:completion:
withContextManager:
implementsCommand:forDomain:
_commandsToIgnore
numberWithUnsignedLong:
sendMediaRemoteCommand:withOptions:completionHandler:
initWithErrorCode:
initWithName:
routeUID
connection
fetchAvailableRoutesWithCompletionHandler:
initWithEffectiveBundle:
registerAsLocationClient
_ad_transformedMapsRequest
showDirections
itemSource
placeData2
extSessionGuid
extSessionGuidCreatedTimestamp
_initWithPlaceData:extSessionGuid:extSessionGuidCreatedTimestamp:
detailType
setIsCurrentLocation:
setGeoResult:
itemDestination
setResultType:
directionsType
arrivalDate
departureDate
_initWithStartLocation:destinationLocation:directionsType:arrivalDate:departureDate:extSessionGuid:extSessionGuidCreatedTimestamp:
rawData
_initWithLocation:extSessionGuid:extSessionGuidCreatedTimestamp:
isSystemService
_handleCommandInAMOS:completion:
domainFromSADObject
usesManagedStorageForDomain:
_sendAMOSCommand:domain:toBundleWithIdentifier:completion:
expectedResponseClassName
newAceObjectWithGenericCommand:context:
commandFailed
commandIgnored
_amosSADomainObjectCreate:completion:
_handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:
identifiers
setIdentifiers:
_sendAMOSCommandToService:responseHandler:
_amosSADomainObjectRetrieve:completion:
setFields
addFields
removeFields
updateUsingSet:add:remove:
_updateObjectFromService:sadIdentifier:completion:
_amosSADomainObjectUpdate:completion:
_amosSADomainObjectCancel:completion:
isAMOSIdentifier
URLWithString:
_amosSADomainObjectDelete:completion:
_amosSADomainObjectCommit:completion:
_amosSADomainObjectPunchOut:completion:
_saDomainObjectCreate:completion:
_saDomainObjectRetrieve:completion:
_saDomainObjectUpdate:completion:
_saDomainObjectCancel:completion:
_saDomainObjectDelete:completion:
_saDomainObjectCommit:completion:
_saDomainObjectPunchOut:completion:
_ad_handleSettingsRequestWithCompletionHandler:
settings
setType:
createResponse
setSettings:
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
applyChanges
valueAfterUpdate
settingType
setAirplaneMode:
initWithName:reason:userInfo:
createResponseWithSettingChanges:
airplaneMode
numberWithUnsignedChar:
ad_shouldUseExtendedFlowTimeout
openSensitiveURL:
assistantLocalizedStringForKey:table:bundle:
isDeviceLockedWithPasscode
_clientFlowServiceHelperQueue
initWithServiceHelper:withConnectionName:
flowScriptHint
warmUpWithScriptHint:
warmUp
executeCommand:completion:
_clientFlowServiceQueue
domainItem
_dateFormatter
_nowString
fileSystemRepresentation
appendSpeechPacket:
containsString:
dataWithBytes:length:
buffersFromSpeechLogAtURL:isNarrowBand:
_logQueue
_filePath
logLocationSend
_ad_getAlarmRequestRepresentationWithCompletionHandler:
_ad_alarmResponseForResponse:
enabled
setEnabled:
frequency
setDaysOfWeek:
hour
setHourOfDay:
minute
setMinuteOfHour:
isEnabled
daysOfWeek
setFrequency:
hourOfDay
setHour:
minuteOfHour
setMinute:
_ad_alarm
_ad_setAlarm:
alarmIds
_ad_internalAlarmIdentifiers
setAlarms:
fetchAlarmsWithIdentifiers:completionHandler:
alarmToCreate
setAlarm:
alarmIdentifier
setAlarmId:
modifications
alarmId
_ad_updateWithModification:
alarmIdentifiers
setAlarmIds:
setOptions:
setCriteria:
results
setResults:
setAlarmIdentifiers:
addedFrequency
removedFrequency
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
wasInitalizedFromDictionaryRepresentation
_updateAutoDownloadedVoiceAssetsForOutputVoice
setLanguages:
VSSpeechGender
setGender:
VSSpeechFootprint
setFootprint:
setAutoDownloadedVoiceAssets:
releaseDormancySuspendAssertion:
cancelSynchronously:completion:
_retryManager
nakedObjectsToRetry
acquireDormancySuspendAssertion:
_startConnectionPreferringWWAN:skipPeer:skipPeerError:skipEdge:
logConnectionStart
_connectionURL
setPeerType:
setPeerVersion:
setPeerProviderClass:
setProductTypePrefix:
setDeviceIsInWalkaboutExperimentGroup:
setSiriConnectionUsesPeerManagedSync:
setUsesProxyConnection:
setUrl:
setSendPings:
_networkManager
enableWiFiTimeout
isWWAN
_recheckForWiFiTransition
clearNakedObjects
host
startMonitoringNetworkForHost:
getNetworkPerformanceFeed
_cancelConnectionPolicyBlacklisting
setImposePolicyBan:
setTimeout:
setPrefersWWAN:
setSkipPeer:
setSkipPeerError:
setSkipEdge:
_authenticationDisabled
_cachedValidationData
_cachedServerCertificate
_authenticator
_setCachedServerCertificate:
_eagerAuthDidComplete
prepareWithCertificateData:completion:
canUseWiFiDirectly
disableWiFiTimeout
diagnosticConnectionType
logConnectionOpenWithConnectionType:
policyId
isEdge
_adjustAceHeaderTimeout:
_connectionOpened
_siriConnection:didEncounterError:analysisInfo:
_resetServerConnection
_connectionErrorIsTimeout:
_generateAnalyticsContextWithError:
connectionType
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
updateConnectionDidDropAggdMetrics
updateConnectionDidFailAggdMetrics
aggregatorConnectionType
updateConnectionSetConnectionType:
_connectionErrorSuggestsConnectionPolicyReset:
_connectionErrorIsServiceUnavailable:
_scheduleConnectionPolicyBlacklisting
_connectionErrorIsRedirect:
assistantSessionShouldAttemptRetry:
_analyzeFailureWithAceConnectionAnalysisInfo:
_retryForFailedConnection:withType:onError:
_analyzeFailureWithNonRetriedAceConnectionAnalysisInfo:error:
retryRequestId
latestMappedRequestId
assistantSession:didChangeRequestIdFrom:toId:
setLatestMappedRequestId:
objectsToRetry
siriCore_supportsSendCompletions
siriCore_dispatchSendCompletionsWithResult:error:
setNeedsToRetryNakedObjects
shouldRetryOnConnectionFailure
authenticationAvailable
initWithTargetQueue:
initWithTimeIntervalSinceNow:
assistantSession:beginSessionRetryPreferringWWAN:
assistantSessionCommandsToRestoreStateOnNewConnection:
prefersWWAN
_reallyRetryPreferringWWAN:skipPeer:skipPeerError:skipEdge:
_createAssistant
_sendLoadAssistantWithAccount:validationData:
_continueAuthentication
_authenticationFailed
_sendGetSessionCertificateData
_continueAuthWithCertificateData:
requestData
_sendCreateSessionInfoRequestWithData:
_authDataToSign
signedDataForData:
sessionInfoDuration
_setCachedValidationData:withDuration:
_continueSessionInitWithValidationData:
setLastReceivedCommand:
_saGetSessionCertificateResponse:
_saCreateSessionInfoResponse:
_saSessionValidationFailed:
_saAssistantCreated:
_saAssistantDestroyed:
_saAssistantNotFound:
_saPing:
ad_shouldRetry
certificate
sessionInfo
validityDuration
setSessionInfo:duration:
_analyzeRetrySuccessWithAceConnectionAnalysisInfo:
getAnalysisInfo:
assistantSessionDidDestroyAssistant:
aceHostHeader
reconnectNow
appendSessionObjectToRequest:
setSessionInfoRequest:
setSessionValidationData:
setLinkedAssistantId:
setLinkedSpeechId:
barrierResultReturnedWithSuccess:
initWithThunk:barrier:
_connectionIsWWAN
assistantSessionShouldRestartConnectionOnWiFi:
forceFastDormancy
performRetrySuccessAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:
performAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:
performRequestAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:
assistantSessionShouldLogVisibleRequestFailure:forError:
_analyzeRequestFailureWithAceConnectionAnalysisInfo:
assistantSessionDidCreateAssistant:
logCreateAssistant
probeConnection
cellularInstant
cellularHistorical
wifiInstant
wifiHistorical
getQualityReport:
_getReportSymptomsBasedNetworkQualityMetrics:
setSymptomsBasedNetworkQuality:
networkManagerNonWWANDidBecomeAvailable:
networkManagerLostNonWWANConnectivity:
networkManagerNetworkUnreachable:
siriConnection:didOpenWithConnectionType:routeId:delay:
siriConnection:didEncounterError:analysisInfo:
_currentConnectionURL
_usingCachedCertificateData
_usingCachedValidationData
_forceValidationRefresh
_checkForWiFiTransitionOnRequestEnd
_prefersWWAN
_skipPeer
_skipPeerError
_hasCachedAuthDisabled
_cachedAuthDisabled
_peerType
_peerVersion
_productTypePrefix
_deviceIsInWalkaboutExperimentGroup
_siriConnectionUsesPeerManagedSync
_ignoreConnectionPolicySource
_ignoreConnectionPolicy
_skipEdge
_aceHeaderTimeout
_dormancySuspendAssertion
_isAttemptingRetry
_waitingForDelayedRetry
_requestEndTime
_lastRetryTimeOnQueue
_createSessionInfoRequestId
_badCachedCertRetryCounter
isNearby
_registerForRingerMuteStateNotifications
_ringerStateToken
_updateRingerMuteState:
_unregisterForRingerMuteStateNotifications
notificationWithName:object:
postNotification:
_muteMode
post
validity
toAdd
toRemove
_pre
_post
_validity
_toAdd
_toRemove
_abAssistantManager
meCard
sources
addressBookManagerDidUpdateData:meCards:sources:
getMeCardsAndSources:
meCardChanged
load
_descriptionWithIndent:
isFiring
alarmID
firedDate
dismissedDate
lastModifiedDate
aceObject
initWithAlarmID:isFiring:firedDate:dismissedDate:lastModifiedDate:aceObject:
encodeObject:forKey:
_isFiring
_alarmID
_firedDate
_dismissedDate
_lastModifiedDate
_aceObject
initWithBaseObject:
setAlarmID:
setIsFiring:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
setAceObject:
build
_baseObject
_builderFlags
builder
gender
footprint
isCustom
setIsBuiltInVoice:
contentVersion
setContentVersion:
masteredVersion
setMasteredVersion:
isBuiltInVoice
languages
isEqualToNumber:
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
genderForVSSpeechGender:
setLastKnownStreamId:
hasLastKnownStreamId
lastKnownStreamId
_lastKnownStreamId
_ad_handleAceDomainSignalRequestWithCompletionHandler:
_ad_preheatableServiceDomainForDomainSignalRequest
_ad_handleAceDomainSignalRequest:completionHandler:
_ad_preheatableDomain
appIdHints
_ad_likelyApplicationBundleIdentifiers
_ad_recordPreheatLaunchOf:
openApplication:options:withResult:
createResponseWithReplyCommand:
clientBoundCommand
requestTypeCode
responseClass
_clearOutstandingSearchIds
setAcousticIdSessionId:
setFingerprint:
setDuration:
_addOutstandingSearchId:
_removeOutstandingSearchForRefId:
minimumDurationForRetry
_currentSession
_outstandingSearches
_completed
_sessionIsComplete
_minumumFingerprintDuration
savedCustomVocabularyOverviewDictionary
initWithOptions:capacity:
_attachToSession
_detachFromSession
valueWithPointer:
_setBTDevice:
address
_enterDeviceGroup
_leaveDeviceGroup
_getBTDeviceWithAddress:completion:
_initWithAddress:queue:
_errorForBTResult:
_sessionAttached:result:
_sessionDetached:
_sessionTerminated:
_addDevice:
_removeDevice:
_session
_referenceHolder
_attachingToSession
_sessionSetupGroup
_devices
_clearState
_getDeviceId
connect:
disconnect:
_address
_deviceGroup
_device
_haveDeviceId
_vendorId
_productId
initWithRequest:replyCommand:
initWithClientBoundCommand:
_clientBoundCommand
_backgroundContextWithObjects:
_backgroundContextWithObject:
backgroundContextWithCachedObjects
navStatus
setNavStatus:
localSearchGetNavigationStatusCompleted
setLocalSearchGetNavigationStatusCompleted:
queueState
setQueueState:
appSubscriptions
setAppSubscriptions:
siriKitSettings
setSiriKitSettings:
errorIndicatorStatus
setErrorIndicatorStatus:
currentHome
setCurrentHome:
_navStatus
_localSearchGetNavigationStatusCompleted
_queueState
_appSubscriptions
_siriKitSettings
_errorIndicatorStatus
_currentHome
_registerForAudioSessionInterruptionNotification
addListener:
_shouldSpeak
_logShouldSpeakState:
_unregisterForAudioSessionInterruptionNotification
_unregisterForRingerStateNotification
_continuePendingSpeechRequestFromTimestamp:
removeListener:
_setRequestOptionsRequireTTS:
releaseAudioSessionOnRecordingCompletion
adClientConnection_enterRequestCommandGroup:
adClientConnection_leaveRequestCommandGroup
_serviceDelegateWithErrorHandler:
requestDidReceiveCommand:reply:
_handleRequestCompletedWithUUID:error:
_serviceDelegate
aceConnectionWillRetryOnError:
startUIRequestWithText:completion:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
getBulletinContext:
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
handleIntent:inBackgroundAppWithBundleId:reply:
requestRequestedDismissAssistant
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
_setServerForcedTTS:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidNotStart:error:
audioPlaybackRequestDidStop:error:
_updateShouldSpeak
_registerForRingerStateNotification
_handleAudioSessionInterruption:
audioSessionDidBeginInterruption
audioSessionDidEndInterruption:
_computeShouldSpeak
shouldSpeakChanged:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
speechRecordingDidChangeAVRecordRoute:
_speechRecordingDidFinish
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
speechRecognizedPartialResult:
speechRecordingDidFinishRecognitionUpdateWithError:
speechRecordingWillBeginRecognitionUpdateForTask:
speechRecordingDidRecognizePhrases:utterances:
speechRecognitionDidFail:
speechRecordingStartpointDetected
speechRecordingPerformTwoShotPromptWithType:reply:
_setADShouldSpeak:
audioSessionIDChanged:
_setRequestCompletion:
_updateSpeechRequestOptions:
fetchAudioStateWithCompletion:
_metrics_gatherAndSendSuccessMetrics
_metrics_recordCancellationMetrics
sharedCache
cacheableObjectForIdentifier:
serializeCacheableObjects:completion:
reportIssueForError:type:context:processIdentifier:
aceObjectWithDictionary:context:
addViews
arrayWithObject:
setViews:
audioStateAnnouncer:didChangeAudioStateFrom:to:
adSpeechRecognitionDidFinishUpdateWithError:
adSpeechRecordingDidRecognizePhrases:utterances:
adGetBulletinContext:
preheatWithStyle:forOptions:
boostedPreheatWithStyle:completion:
forceAudioSessionActive
setConfiguration:
willPresentUIWithReply:
didDismissUI
startRequestWithInfo:completion:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
continuePendingSpeechRequestWithId:fromTimestamp:
cancelRequest
rollbackRequest
requestStateUpdateWithReply:
performGenericAceCommand:interruptOutstandingRequest:reply:
recordUIMetrics:
recordSuccessMetrics
recordCancellationMetrics
getSerializedCachedObjectsWithIdentifiers:completion:
startAudioPlaybackRequest:reply:
beginUpdateOutputAudioPowerWithReply:
endUpdateOutputAudioPower
reportIssueForError:type:context:
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_broadcastCommandDictionary:
_fetchAppContextForApplicationInfo:reply:
_clearAssistantInfoForAccountIdentifier:
_barrierWithReply:
_requestBarrierWithReply:
_startSpeechWithURL:isNarrowBand:
_sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
adAceConnectionWillRetryOnError:
_xpcConnection
_requestOptions
_requestCommandGroup
_requestUUID
_pendingRequestId
_pendingRequestTimestamp
_pendingSpeechRequestContinue
_numberOfPresentedUIs
_presentedUIReply
_presentedUITransaction
_hasCachedADShouldSpeak
_cachedADShouldSpeak
_requestOptionsRequireTTS
_serverIsForcingTTS
_combinedShouldSpeakState
_isStark
_carDNDActive
_isConnected
runWithCompletion:
disableAssistantWhilePasscodeLocked
logEnabledState:
logPeriodicUsageIfNeeded
numOfWords
trailingSilenceDuration
eosLikelihood
pauseCounts
silenceProbability
taskName
processedAudioDurationMs
initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
appendData:
replaceBytesInRange:withBytes:length:
stopFingerprinting
setSpeechWasRecognizedForElapsedTime:
_audioConverter
_bufferedAudio
_packetIndex
_bytesConsumed
_mediaServicesWereLost:
_mediaServicesWereReset:
_fetchAudioSessionID
_updateAudioSessionID:
_currentAudioState
initWithListener:
_removeListenerProxiesWithListener:
listener
minusSet:
setAudioSessionID:
_didChangeAudioStateFrom:to:
removeAllListeners
_listenerProxies
_initWithRequest:
replyCommand
_replyCommand
_deleteLegacyOfflineMetricsFiles
_buildOfflineMetricsMap
offlineIdentifier
insertMetrics:withOfflineIdentifier:
deleteMetricsWithOfflineIdentifier:
setOfflineIdentifier:
fetchNextMetricsUsingBlock:
deleteAllMetrics
insertMetrics:
_map
_ad_transformedSendEmailRequest
email
recipientsTo
_personsForRecipients:
setToRecipients:
recipientsCc
setCcRecipients:
recipientsBcc
setBccRecipients:
receivingAddresses
setReceivingAddresses:
fromEmail
setSender:
subject
setSubject:
message
setMessageBody:
setMessageIdentifier:
_initWithMessage:
arrayWithCapacity:
setHandle:
setContactHandles:
displayText
setFullName:
language
voiceSearchTypeOptions
setSearchTypes:
voiceSearchHeaderFields
setHeaders:
voiceSearchQueryParameters
setQueryParameters:
fieldLabel
setFieldLabel:
fieldIdentifier
setFieldId:
interactionIdentifier
requestIdentifier
keyboardType
setKeyboardType:
postfixText
setPostfixText:
prefixText
setPrefixText:
selectedText
setSelectedText:
keyboardIdentifier
setKeyboardIdentifier:
returnKeyType
setKeyboardReturnKey:
setEnablePartialResults:
inlineItemList
setInlineItemList:
setVoiceTriggerEventInfo:
ad_deferredMetricsContext
alternativeSelectionCount
setAlternativeSelectCount:
characterModificationCount
setCharacterChangeCount:
correctedText
setCorrectionText:
setCorrectionSource:
setOrigin:
ad_setAFSpeechEvent:
setAudioSource:
setCodec:
setDeviceIdentifier:
setDeviceModel:
setDspStatus:
setHeadsetAddress:
setHeadsetName:
headsetId
utterance
deviceModel
setProductId:
setVendorId:
recordingInfo
setRingerSwitchOff:
setAlertType:
numberWithLongLong:
setButtonDowntime:
setActivationTime:
setZeroLatencyLaunch:
setActivationAudioAlertStartTime:
setActivationHapticAlertStartTime:
setRecordingInfo:
isEyesFree
setEyesFree:
useStreamingDictation
setWasLaunchedForRequest:
setClientModelVersion:
packets
packetNumber
setEndpoint:
featuresAtEndpoint
setFeaturesAtEndpoint:
serverFeatureLatencyDistribution
setServerFeatureLatencyDistribution:
totalAudioRecorded
setTotalAudioRecorded:
userFacingReasonTitle
userFacingReasonDescription
ad_shouldLogToMetrics
views
speakableText
setManagedStorageDomains:
_domainName
keepReportingNowPlayingTimingEventsHeuristically
_unregisterForBGUpdates
setBundleId:
setAppIdentifyingInfo:
_filteredApplicationInfosForLockedStark:
_appInfoWithBundleID:
pidRestrictedCenterNamed:
setTargetPID:
doesServerExist
sendMessageAndReceiveReplyName:userInfo:
setOrderedContext:
_getCurrentUserActivityOnQueue:completion:
setInternalGUID:
_isEligibleForUserActivityReminders
setIsEligibleForReminders:
externalMediaContentIdentifier
setEligibileFunctions:
setIsEligibleForDirections:
setIsEligibleForAppPunchout:
_fetchUserActivityWithUUID:completionHandler:
_currentUserActivityUUIDWithOptions:completionHandler:
sectionID
recordID
bulletinID
displayName
isAllDay
endDate
recencyDate
timeZone
caseInsensitiveCompare:
setApplicationId:
setDate:
setDateIsAllDay:
setEndDate:
setRecencyDate:
setTimeZoneId:
publisherBulletinID
setNotificationId:
alarmsByID
timersByID
isAudioMessage
dictionaryArrayWithAceObjectArray:
setOutgoing:
setDisplayText:
setData:
setObject:
setMsgRecipients:
_updateNavStatusWithCompletion:
_updateNowPlayingInfoWithCompletion:
_updateSiriKitSettingsWithCompletion:
_registerForBGUpdates
_getBackgroundContext:
_navStatusDidChange:
_siriKitSettingsDidChange:
_notePossiblePlayPausedStateChange:
_updateBackgroundContextIfNowPlayingInfoChanged:
currentNavigationState
setStatusValue:
contextManagerDidUpdateBackgroundContext:
_fetchNowPlayingQueueWithLookahead:lookbehind:completion:
_ad_mediaItemWithMRContentItemRef:
setNextItems:
setPreviousItems:
_ad_setNowPlayingInfo:
title
setPreviousListenedToItem:
setNextListeningToItem:
lastActivationStoppedNowPlayingApp
_ad_setAppPlaybackState:
_addNowPlayingItemInfoToQueue:group:
_addPlaybackStateToQueue:group:
setApplicationIdentifier:
_ad_validateAndFinalize
setListOfSiriKitEnabledDomains:
alertContextIsDirty
clearAlertContextDirtyState
setBackgroundContextDirty
backgroundContextIsDirty
clearBackgroundContextDirtyState
getAppContextForDeviceState:applicationInfos:completion:
getAlertContextWithBulletinsFetcher:clockSnapshotFetcher:completion:
markBulletinAsAcknolwedgedForDomainObject:
getDomainObjectFromMessageContext:completion:
getBackgroundContext:
_alertContextIsDirty
_bgContextIsDirty
_bgContextQueue
_registeredForContextUpdates
_bgContext
_ignoreNowPlayingUpdatesAfterTimestamp
_deviceProblemsRegistrationToken
_externalIdFromNowPlayingInfo:
_deviceIdFromNowPlayingInfo:
_ad_validatedNowPlayingInfo:schema:
setTitle:
setAlbum:
setArtist:
_mediaTypeFromNowPlayingInfo:
setMediaType:
_mediaItemIdURLFromNowPlayingInfo:
playbackInfo
setDurationMillis:
setPlaybackPositionMillis:
setPlaybackInfo:
album
artist
setListeningToItem:
setSource:
setCurrentItemSteerable:
nowPlayingQueuePosition
setIndex:
setQueueSize:
setPlaybackQueuePosition:
initWithDouble:
setPlaybackRate:
_ad_listeningToContainerFromNowPlayingInfo:
setCurrentListeningToContainer:
_ad_shuffleModeFromNowPlayingInfo:
setShuffleEnabled:
setAudioAndSubtitleLanguageOptions:
applicationIdentifier
listeningToItem
defaultTimeZone
setReleaseDate:
_ad_releaseInfoWithReleaseDate:
setPlays:
setReleaseInfo:
setEmailAddress:
setEmails:
setNumber:
setPhones:
setDateSent:
chatGuids
setChatIdentifier:
sender
setMsgSender:
setMessageType:
setHasGroupName:
effect
setEffect:
hasGroupName
setGroupName:
lastReadDate
setDateLastMessageReadInThread:
recipients
cnContactID
unifiedContactWithIdentifier:keysToFetch:error:
givenName
familyName
setFirstName:
setLastName:
messageID
messageType
setScheme:
setHost:
pathWithComponents:
setPath:
requestId
_clearRequestCommands
siriCore_isRetryable
_commandRefsOrIsCurrentRequest:
commandRefsRestartCommand:
setLastResponseId:
lastResponseId
siriCore_isRestartable
_canRestartRequest
_objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:
originalRequestId
_retryCount
_restartRequest
_requestObjects
_needsToRetryNakedObjects
_nakedObjects
_originalRequest
_latestMappedRequestId
_ad_handleShowNextEventRequestWithCompletionHandler:
_selectedCalendarsForEventStore:
CalDateForNow
currentCalendar
dateByAddingWeeks:inCalendar:
initWithStartDate:endDate:
startDate
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
compareStartDateWithEvent:
sortedArrayUsingSelector:
_shouldExcludeEvent:allowAllDayEvents:
_nextEventFromFilteredEvents:
ad_calendarErrorWithCode:
nanoCalendarLaunchURLForEvent:
CalIsBetweenStartDate:endDate:
indexesOfObjectsPassingTest:
lastIndex
duration
removeObjectsAtIndexes:
rangeWithStartDate:endDate:
midpoint
CalIsBeforeDate:
calendar
status
hasAttendees
organizer
isCurrentUser
selfParticipantStatus
shared
deselectedCalendarSyncHashes
calendarsForEntityType:
_calendarIDsForSyncHashes:inCalendars:
setWithCapacity:
calendarIdentifier
syncHash
indexOfObject:
objectAtIndexedSubscript:
launchURL
_timer
_timedout
_uuid
_syncChunkHandler
_metrics_isSystemIdle
_metrics_isAssistantOrDictationEnabled
hasActiveSessionForSendingMetrics
category
markBaselineTime
markAddViewsReceived
markLaunchApp
markPartialSpeechRecognition
startWaitingForSpeechResponse
markSpeechRecognized
hasSpeechRecognized
markRequestCompleted
requestDuration
logRequestCompletedWithDuration:
hasValidTimingsForCompletedRequest
_metrics_recordRequestStatisticsMetricsIncludingNearTrigger:
setConnectionMetrics:
_reallyCommitOrSaveMetrics:
remoteMetrics
setRecordingWillStartTime:
setIsFailure:
setFailureError:
setIsCancelled:
aceMetrics
requestIndifferentMetrics
suspendEventsStaging
store
resumeEventsStaging
_metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:
_metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:
_sendMetrics:requiresActiveSession:completion:
currentEventStreamUID
setCategory:
aa_primaryAppleAccount
aa_personID
setEventInformation:
setConnectionPolicyId:routeId:connectionDelay:
setOriginalCommandId:
markStartedRecordingWithSystemUptime:
setUsedBluetooth:
setMusicWasDetected
setPartialResultAcousticIdTimerScheduled
setPartialResultAcousticIdTimerFired
setEndpointWasExtendedDueToMusicClassifier
setUsedMotionUpGesture:
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
setUsedManualEndpointing:
setValuesForSpeechRequestOptions:
confidenceScore
interpretationIndices
interpretations
removeSpaceBefore
removeSpaceAfter
appendString:
routes
cname
componentsWithURL:resolvingAgainstBaseURL:
connectionId
initWithServiceIdentifier:delegate:listener:
_preheat
_registerForSleepNotification
_unregisterForSleepNotification
_closePeerConnection
_closeNetworkConnection
hasNearbyPeer
_establishPeerConnection
_establishNetworkConnectionToURL:connectionId:withPOP:
hasActiveConnection
isEstablishing
_doMetricsBookkeepingForPeerStreamsStart
close
setPeerStreamConnection:
_waitForPeerData
openConnectionForURL:withConnectionId:initialPayload:completion:
peerSupportsExtendedHeader
_peerConnectionFailure
_restartConnectionProviders
_peerReadStreamErrorOccurred:
_hasPeerConnection
_hasOrIsEsablishingNetworkConnection
_connectionMetricsWithCompletion:
isReady
_establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:
_networkConnectionProvider
setConnectByPOPMethod:
_doMetricsBookkeepingForNetworkStreamStart
supportsInitialPayload
_didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:
_networkConnectionFailure
_setupStaleNetworkTimerForProvider:
_networkConnectionDidOpen
_waitForNetworkData
_tryToWriteToNetworkConnection
_cancelStaleNetworkTimer
_fallbackWithSafetyNet
_peerConnectionReceivedData:
readData:
_tryToReadPeerStreamHeaderFromData:needsReconnect:
_tryToReadHTTPHeaderIntoMessage:fromData:isComplete:
_insertCompanionSpecificDataIntoHeader:
_prependHeader:toOutputBuffer:
writeData:completion:
_networkConnectionErrorOccurred:
_networkConnectionReceivedData:
_writeDataToPeer:
_writeDataToNetwork:
_prepareForSleep
updateConnectionMetrics:completion:
connectionProvider:receivedError:
peerStreamConnection:failedWithError:
peerStreamConnectionHasIncomingPeer:
peerStreamConnection:requestMetrics:
_peerConnectionDidEnd
_networkConnectionDidEnd
_powerChangedMessageType:notificationID:
_peerProvider
_networkOutputBuffer
_dataHasBeenWrittenToNetwork
_staleNetworkTimerSource
_buffer
_networkURL
_outgoingHTTPHeader
_networkConnectionSequenceNumber
_safetyNetBuffer
_ioConnect
_ioNotificationPortRef
_ioNotifier
_currentStartTime
_firstStartTime
_currentOpenTime
_firstByteReadTime
_startCount
_networkURLFromPeer
_connectionId
_connectByPOP
_speechLogDecodingError
reverseObjectEnumerator
arrayWithArray:
setSpeechWasRecognized
_playbackSource
_url
_connectByPOPMethod
isCanceled
getSocket:
setRemoteMetrics:
getRemoteMetrics:
getLocalMetrics:
getMetricsContext:
initListenerWithQueue:
setPolicyRoute:
headerData
shouldFallbackQuickly
isPeerConnectionError:
isPeerNotNearbyError:
isMultipath
shouldFallbackFromError:
_setupStaleConnectionTimer
_getNWConnectionWithInitialData:completion:
analysisInfo
_isListener
_missingReferenceFulfillmentContexts
missingReferences
_missingReferenceFulfillmentContextsByRequestId
_requestMap
_mutableResolvedIds
resolvedReferences
setHasBeenFulfilled:
fulfillmentBlock
_removeMissingReferenceContext:
_addObjects:forRequestId:sessionRequestId:
resultCallbackCode
commandReferences
_removeMissingRefContextsForRequestId:
allKeysForObject:
commandsForSuccessReplyToCommand:
_requestsWithPhoneCall
phoneSearchResults
hasArrayForPropertyForKey:
confirmed
set_mutableResolvedIds:
_hasBeenFulfilled
_requestId
_missingReferences
_fulfillmentBlock
inMemoryKnowledgeStore
_inMemoryKnowledgeStore
userDefaultsKnowledgeStore
defaultSynchedKnowledgeStore
defaultKnowledgeStore
knowledgeStoreWithName:
handleGetValuesForKeys:completion:
handleSetValuesForKeys:completion:
handleDeleteValueForKey:completion:
handleSetLinkedData:completion:
keys
storeName
storeType
knowledgeStoreWithName:type:error:
setKey:
setStoreType:
setStoreName:
setEntries:
valuesForKeys:completionHandler:
entries
setValue:forKey:completionHandler:
removeValueForKey:completionHandler:
sparqlQuery
setResult:
sparqlResultsForQuery:completionHandler:
linkedData
predicate
entityWithIdentifier:
linkTo:withPredicate:completionHandler:
handleGetLinkedData:completion:
elements
_ad_isExpectedElement
_ad_isSiri
layoutMonitor:didUpdateDisplayLayout:
layoutMonitor:didUpdateDisplayLayout:withContext:
setHandler:
isSpringBoardElement
layoutRole
_ad_SpringBoardElement
_af_analyticsContextDescription
responseCode
_ad_finalMetricsContextWithResponse:error:
appIdentifier
_handleGenericIntentRequest:deliveryHandler:completionHandler:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
diagnosticActions
requestWithURL:
verb
setHTTPMethod:
latencyDiagnosticReportDiagnosticReport
setUri:
setVerb:
setLatency:
dataTaskWithRequest:completionHandler:
latencyDiagnosticReport
setDiagnosticReports:
invalidateAndCancel
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_setNACContext:
_setRequestData:
_getSessionRequestForCertificate:completion:
_requestData
_setSessionInfo:
_signData:withSessionInfo:signedData:
_sessionInfo
_nacContext
_duration
_serviceCommandTypeWithDomainName:className:
qualifiedCommandName
isEqualToServiceCommandType:
domainName
domainObjectCreateTypeForDomainNamed:
domainObjectRetrieveTypeForDomainNamed:
domainObjectUpdateTypeForDomainNamed:
domainObjectDeleteTypeForDomainNamed:
domainObjectCancelTypeForDomainNamed:
_className
currentCallCount
_callStateChanged:
_isObserving
displayScale
_resetTimer
_cancelTimer
allowedTimelimit
setAllowedTimelimit:
_timerSource
_allowedTimelimit
bundleProxyForIdentifier:
bundleURL
_tccAccessInfoForAppID:
privacyPolicy
privacyCategory
authorizationStatusForBundleIdentifier:
redactionTarget
ad_filteredDictionaryWithAppID:
launchId
parameters
useCaseId
initWithAppIdentifier:intentString:utterance:info:
backgroundLaunch
_setLaunchToForeground:
_setOriginatingAceID:
initWithType:intent:intentResponse:userActivities:
_type
_intent
_intentResponse
_userActivities
_tearDownAlarms
_tearDownTimers
_beginUpdate
_setUpAlarms
_endUpdate
_fetchAlarmsWithCompletion:
_setUpTimers
_fetchTimersWithCompletion:
_fetchCurrentSnapshotWithCompletion:
_fetchSnapshotAtSystemUptime:completion:
_dismissWithOptions:completion:
enumerateObjectsWithOptions:usingBlock:
_dismissAlarmWithID:completion:
timerID
_dismissTimerWithID:completion:
_commitSnapshotForUpdatesAtSystemUptime:modificationDate:
initWithSystemUptime:modificationDate:alarmsByID:timersByID:
initWithKey:ascending:
sortUsingDescriptors:
clockService:didUpdateSnapshot:
_evictOutOfDateSnapshots
timeIntervalSinceReferenceDate
modificationDate
addIndex:
removeIndex:
handleFetchAlarmsFailureWithError:completion:
_removeAllAlarms
_addOrUpdateAlarms:
handleDismissAlarmFailureWithID:error:completion:
handleFetchTimersFailureWithError:completion:
_removeAllTimers
_addOrUpdateTimers:
handleDismissTimerFailureWithID:error:completion:
_removeAlarmsWithIDs:
_removeTimersWithIDs:
initialize
fetchCurrentSnapshotWithCompletion:
fetchSnapshotAtSystemUptime:completion:
handleFetchedAlarms:completion:
handleDismissedAlarmWithID:completion:
handleFetchedTimers:completion:
handleDismissedTimerWithID:completion:
alarmsAdded:
alarmsUpdated:
alarmsRemoved:
alarmFired:
firingAlarmDismissed:
stateResetForAlarms:
timersAdded:
timersUpdated:
timersRemoved:
timerFired:
firingTimerDismissed:
stateResetForTimers:
_snapshots
_currentUpdateDepth
_currentUpdateSystemUptime
_currentUpdateModificationDate
_alarmsByID
_timersByID
_ad_timerStoreErrorWithCode:
_createUnavailableError
getTimerWithCompletionHandler:
setTimer:completionHandler:
ad_siriTaskHandlerAceTranslationFailureError
ad_commandCausesPunchout
metricsContext
registerPunchoutIdentifier:metricsContext:handler:
_setRefId:
requestCommandAceType
_commandType
_requestTransformer
_responseTransformer
_requestHandler
ad_siriTaskHandlerErrorWithCode:
_stopHouseKeepingTimer
_beginEventsGrouping
_endEventsGrouping
_addConnection:
_removeConnection:
_suspendEventsStaging
_resumeEventsStaging
stageEvents:completion:
_stageEvents:
didObserveEvents:completion:
flushStagedEventsWithReply:
_startHouseKeepingTimer
unionSet:
_unstageEvents
_houseKeeperArrived
_processStagedEvents
observeWithCompletion:
stageEvent:
stageEvents:
_stageEvent:
_houseKeepingTimer
_stagedEvents
_connections
_depthOfEventsGrouping
_store
_streamUID
_observationCompletion
_observerConnection
_isSuspended
hexStringFromData:
uppercaseString
siriCore_serializedAceDataError:
siriCore_addSendCompletion:
siriCore_requestId
siriCore_setSessionRequestId:
siriCore_supportedByLocalSession
_thunkBlock
_barrierBlock
_barrierQueue
setService:
_checkBuddyState
_updateBuddyState
isPastBuddy
_isPastBuddy
_serialQueue
_addressBook
internalGUID
initWithAddressBookRecord:fromAddressBook:
addressBookRecordForAcePerson:
speechRecognitionTransactionState
audioFileIOTransactionState
codedLocation
initForWritingWithMutableData:
finishEncoding
setCodedLocation:
_setContext:forPID:
initWithCollector:pid:connection:
sendContext:
_pid
_collector
_getContextForAppInfo:completion:
_invokeAllCompletionsWithError
_invokeCompletionWithContext:forPID:
_addCompletion:forPID:
getContextForAppInfos:completion:
_hasCompletionForPID:
_completionsByPID
_errorWithCode:underylingError:
_updatePairedDeviceInfo
_requestStreamEstablishment
_initWithServiceIdentifier:listener:
weakObjectsHashTable
setStreamId:
_wakeUpMessageFailedWithError:
_close
_invokeSocketCompletionWithCurrentSocketOrError:
_initiateOpmitisticEagerStreamFetchRetry
_getSocketFromDevice
_streamPairInterruptedError
_wakeUpRemoteForStreamIdentifier:
_getSocketFromDeviceForStreamIdentifier:
_noDeviceError
_noNearbyPeerError
_deviceConnectionClosedErrorWithUnderlyingError:
initSocketWithDevice:options:completionHandler:queue:
_setPreferBTClassic:
_invokeMetricsCompletionWithMetrics:forIdentifier:
setLinkPreferences:
isCloudConnected
_failureMetricsContextDictionary
uniqueIDOverride
_handleResponseProtobuf:forIdentifier:
_ad_performWithPeerStreamConnection:context:
streamId
averageLocalRTT
localMessageState
deviceBlackedOut
_establishEagerStreamPair
sharedPeerStreamConnectionWithServiceIdentifier:listener:
addDelgate:
getSocketForConnection:completion:
closeForConnection:
setPreferBTClassic:
_handleWakeUpMessage:context:
_handleGetMetricsMessage:context:
_handleReestablishMessage:context:
_delegates
_currentPeerStreamConnection
_metricsResponses
_wakeupMessageIdentifier
_currentStreamIdentifier
_gettingDeviceSocket
_socketForConnectionHasBeenVended
_deviceConnection
_sockfd
_socketCompletion
_prefersBTClassic
_peerSupportsNamedStreams
_hasOutandingDeviceSharedDataFetch
_optimisticRetriesAreBlocked
_peerSupportsExtendedHeader
_lastNearbyDevicesChangedTimestamp
_lastIDSMessageSentTimestamp
_lastIDSMetricsContext
_lastIDSMessageSuccess
_sharedConnection
_vendedDeviceConnection
setSharedId:
setPreviousLangaugeCode:
setHasSiriEnabled:
hasSiriEnabled
hasSpeechId
hasLanguageCode
hasAssistantId
hasHostname
setActivityContinuationAllowed:
setHasActivityContinuationAllowed:
hasActivityContinuationAllowed
setHasDictationEnabled:
hasDictationEnabled
hasSharedId
hasPreviousLangaugeCode
hasPreviousOutputVoice
hasOutputVoice
setHasCloudSyncEnabled:
hasCloudSyncEnabled
setHasShouldCensorSpeech:
hasShouldCensorSpeech
activityContinuationAllowed
sharedId
previousLangaugeCode
_previousLangaugeCode
_sharedId
_activityContinuationAllowed
authorizationStatusForBundle:
_peerLocationConnection
_navStatusChanged:
_cancelLocationTimer
_locationAuthStatus
locationServicesEnabled
setPropertiesWithCLLocation:
desiredAccuracy
coordinate
isLocationShiftRequiredForCoordinate:
_locationShifter
horizontalAccuracy
altitude
verticalAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
setStatus:
_generateResponseForGetRequestOriginCommand:withStatus:completion:
stopMonitoringSignificantLocationChanges
_bestCachedLocation
_generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:
_generateLocationTimedOutResponseForGetRequestOriginCommand:completion:
_clearCompletionState
_stopMonitoringLocation
desiredCLAccuracy
_startMonitoringLocationWithDesiredAccuracy:
searchTimeout
_scheduleLocationTimerWithTimeout:
_shouldUseOneshotLocationRequest
maxAge
isOlderThanAge:
isWithinAccuracy:
requestLocation
_processUpdatedLocation:
_requestLocationWithBestAccuracy
_shouldSendLocationUpdate:fromLocation:forCommand:
_generateLocationDeniedResponseForGetRequestOriginCommand:completion:
_generateLocationUnknownResponseForGetRequestOriginCommand:completion:
_locationServicesIsEnabled
_generateLocationDisabledResponseForGetRequestOriginCommand:completion:
_locationUpdateIsCapableOfSucceeding
_generateLocationWiFiOffResponseForGetRequestOriginCommand:completion:
_requestLocationForGetRequestOrigin:completion:
_startMonitoringLocationForGetRequestOrigin:completion:
newAssertionForBundle:withReason:
raise:format:
getLocationIsRestricted:
_externalQueue
_needsToSendLocation
_isNavigating
_internalQueue
_lastLocationAuthorizationStatus
_lastLocationServicesIsEnabled
_requestOriginCommand
_locationTimerSource
_lastLocation
_locationInUseAssertion
_locationInUseAssertionRefCount
_lastPeerLocation
_updateCompletion
_greenTeaLogger
setHorizontalAccuracy:
setVerticalAccuracy:
setLatitude:
setLongitude:
setAltitude:
course
setDirection:
speed
setSpeed:
setAge:
_ad_transformedWorkoutRequest
workoutType
workoutCategory
workoutLocationType
workoutUserMode
workoutGoal
workoutGoalUnitType
inchUnit
meterUnit
footUnit
yardUnit
mileUnit
secondUnit
minuteUnit
hourUnit
jouleUnit
kilocalorieUnit
goalValue
quantityWithUnit:doubleValue:
isCompatibleWithUnit:
isOpenGoal
skipActivitySetup
_initWithType:location:goal:goalType:userMode:isOpenGoal:skipActivitySetup:
targetWorkoutState
workoutStateValue
_initWithState:
_allAnchorsFromRequest:andResponse:
_resetSyncVerification
setDeveloperMode:
applicationProxyForIdentifier:
clientIdentifier
_appMetaDataForAppProxy:clientIdentifier:syncSlots:
_intents_findAppsWithAnIntentsServiceExtension:
sharedDeviceConnection
fetchInstalledApplicationsForPairedDevice:completion:
_appMetaDataListFromVocabSources:appIdentifyingInfoList:
setSources:
setSyncReason:
setIncludeAllKnownAnchors:
setAppMetaDataList:
setWatchAppMetaDataList:
_addOutstandingAnchorsRequestId:
forceEagerDeserialization
_sync_isRequestBlockingSyncVerificatiion
setGeneration:
setCount:
arrayByAddingObject:
setAnchors:
fetchSyncSnapshotForInfo:handler:
_removeOustandingAnchorsRequestId:
_handleValidatedSyncGetAnchorsResponse:
current
_removeOutstandingSyncChunkId:
adSyncVerificationServerReport:
setClientIdentifier:
setAppMetaData:
serverVerify
setPerformInternalVerification:
setFetchSyncDebugInfo:
_emptyVerificationSyncAnchorForKey:appBundleID:syncSlotName:
checksums
clientVerifyResult
setChecksums:
adSyncVerificationPartialResult:
handleSyncChunkInfo:withSyncInfo:completion:
_sync_continueVerificationIfConditionsMet
appMetadata
setPreGen:
setPostGen:
aceObjectArrayWithDictionaryArray:baseClass:context:
_addOutstandingSyncChunkId:
_finishVerificationWithKeys:
isSubsetOfSet:
_sendSyncFinishedAndReferenceCurrentSyncPromise:
_prepareAndStartSyncVerification
_sync_isRequestBlockingSync
_syncChunkWindowFull
_cleanUpForFailureCommandWithRefId:
_hasOutstandingSyncChunkId:
_hasOutstandingAnchorsRequestId:
_hasOutstandingDeepVerificationRequestId:
_requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:
_fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:
clientVerify
_saSyncClientVerify:completion:
setKeys:
_saSyncSetDeepSyncVerificationNeeded:completion:
_saSyncGetAnchors:completion:
_saSyncGetAnchorsResponse:completion:
_saSyncChunk:completion:
_saSyncChunkDenied:completion:
_saSyncChunkAccepted:completion:
_saSyncFinished:completion:
_saSyncServerVerifyResponse:completion:
shortVersionString
setVersion:
bundleVersion
setBuildNumber:
applicationType
itemID
substringToIndex:
resultOptions
ad_transcriptionResultRequiresAddressBook
ad_transcriptionResultWithAddressBook:
ad_transcriptionResults
fullName
_ad_personContactHandlesWithAddressBook:
emails
emailAddress
personContactHandlesOfType:withLabels:
phones
number
resultData
placeResultType
forwardGeoProtobuf
contactId
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
setTimings:
providerStyle
connectionMethodHistory
removeObjectAtIndex:
firstTxByteDelay
carrierName
signalStrengthBars
rssi
wifiPhyMode
wifiChannelInfo
flowNetworkInterfaceType
symptomsBasedNetworkQuality
dataWithJSONObject:options:error:
setNextItem:
setPreviousItem:
_object
_previousItem
_nextItem
getCurrentFanInfo:
fanId
setFanId:
currentSpeed
setCurrentSpeed:
targetSpeed
setTargetSpeed:
_fanId
_currentSpeed
_targetSpeed
_ad_getMessagesRequestValueWithCompletionHandler:
_ad_replyCommandValue
smsIdentifier
_initWithDraftMessageIdentifier:
af_messageValue
_currentToken
_speechRequestOptions
setText:
setHandoffUrlString:
hasText
hasHandoffData
hasHandoffUrlString
handoffData
handoffUrlString
_handoffData
_handoffUrlString
_text
hasStreamId
_streamId
ad_OTTModelRepresentation
ad_OTTRequestRepresentation
_ad_getOTTRepresentationWithCompletionHandler:
channel
_initWithChannel:
_ad_OTTRequestRepresentation
_interfaceName
stringByAppendingFormat:
managedStorageDomains
setFirstUnlockRestrictedCommands:
setLockRestrictedCommands:
setControlCenterLockRestrictedCommands:
_managedStorageDomains
_firstUnlockRestrictedCommands
_lockRestrictedCommands
_controlCenterLockRestrictedCommands
_ad_handleAlarmRequestWithCompletionHandler:
alarm
setAlarmIdentifier:
addAlarm:completionHandler:
deleteAlarmsWithIdentifiers:completionHandler:
alarms
updateAlarms:completionHandler:
criteria
options
fetchAlarmsMeetingCriteria:searchOptions:completionHandler:
_sendAnalysisMessageForURL:ifaceIndex:bufSize:userVisibleFailure:wwanPerferred:successfulRetry:
appendFormat:
_subtypeContextStringFromContext:
initWithRequest:
startWithCompletion:
stop:
beginInterruption
endInterruption:
audioPlaybackSessionWillStart:
audioPlaybackSessionDidStart:
audioPlaybackSessionDidNotStart:error:
audioPlaybackSessionDidStop:error:
_stopAudioPlaybackRequest:immediately:
_stopAllAudioPlaybackRequests:
_handleInterruption:
_receivedMemoryPressureNotification
_activeSessionsByRequest
_reusableSessionsByRequest
_memoryPressureSource
_isValidRestrictionsDomainInfo:
_parseInfoDictionary:
_domains
_syncKeys
_clearsDomainObjectsClassName
_connectionNeedsContextCleared
setHasSuccess:
hasSuccess
success
_success
managerForBundleID:bundlePath:
_datastoreManager
_siriAuthorizationStatusForAppID:
writeLatestVocabularyItems:forIntentSlot:completion:
appBundleID
checkIfSyncSlot:isAllowedWithCompletion:
_triggerUserVocabularySyncAttributingApp:vocabType:
currentConnection
auditToken
_requestSiriAuthorization:auditToken:
_appBundleID
_appPath
decodeObjectOfClasses:forKey:
_systemUptime
_modificationDate
setSystemUptime:
setModificationDate:
setAlarmsByID:
setTimersByID:
_ad_handleTimerRequestWithCompletionHandler:
createResponseWithTimer:
_setAssistantIsEnabledLocal:
_setDictationIsEnabledLocal:
_updateSharedDataWithPairedPeerData:
getSharedDataFromPeerUseCache:completion:
_updateSharedDataWithCloudData:fromPeer:
setSharedDataObserver:withHandle:
setRemoteRequestObserver:withHandle:
sharedDataConnection:didUpdateSharedData:
ad_invokeErrorCompletion:withErrorCode:underlyingError:
ad_analyticsEndEventType
ad_afAnalyticsContext
ad_aceIntentProtobuf
ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:
ad_analyticsBeginEventType
ad_invokeErrorCompletion:forUnderlyingError:
setUserInfo:
typeName
_transactionForIntent:
userActivityIdentifier
ad_launchAppWithUserActivityIdentifier:forTransaction:completion:
facadeClass
backingStore
localizedDescription
beginExtensionRequestWithInputItems:completion:
_intents_matchSiriExtensionsForIntent:completion:
intentId
ad_launchAppWithIntent:forTransaction:completion:
ad_resolveAppForIntent:completion:
extensionInputItems
_extensionInputItems
setExtensionInputItems:
extensionServiceDelegate
_auxiliaryConnection
_extensionBundle
trimDataAgainstTCCForAuditToken:bundle:
sharedMonitorForDisplayType:
_plugIn
userElection
cancelTransactionDueToTimeout
startRequestForIntent:completion:
processData:usingProcedure:completion:
extensionContextHost:wantsToCacheImage:
commandHandleIntent:inBackgroundAppWithBundleId:reply:
_currentTransaction
_extensionServiceDelegate
intentSlotKeyPath
setTypeName:
setIntentSlotResolutionResult:
resolveIntentSlot:forIntent:completionBlock:
addCacheableObject:
loadImageDataAndSizeForImage:reply:
deserializeCacheItem:completion:
_intents_updateContainerWithCache:
confirmIntentCompleted
protobufMessage
setIntentResponse:
confirmIntent:withCompletion:
handleIntentCompleted
_shouldForwardIntentToApp
handleIntent:withCompletion:
handledIntent
appsList
valueForKey:
resolveAppForIntentResponse
setAppsList:
interaction
activityType
providers
isSystemProvider
destinationType
supportsAudioOnly
supportsEmergency
supportsVoicemail
supportsAudioAndVideo
openUserActivity:withApplicationProxy:options:completionHandler:
passthroughEndpointer:wasConfiguredWithASBD:frameRate:
configureWithASBD:andFrameRate:
passthroughEndpointer:didReceivePCMData:
getStatus:
endpointMode
startWaitTime
interspeechWaitTime
endWaitTime
configureWithSampleRate:andFrameRate:
forwardingTargetForSelector:
functionalEndpointer
setFunctionalEndpointer:
_functionalEndpointer
_systemDomains
showsInLockScreen
contentPreviewSetting
getSectionInfoWithCompletion:
_offlineIdentifiers
fileURLWithPath:
setResourceValue:forKey:error:
stringByDeletingPathExtension
_refId
_ad_handleAppLaunchCommandWithRequest:completion:
canOpenApplication:reason:
appIds
setAppToItsRestrictionsMap:
localizedName
appState
isValid
isLaunchProhibited
appTags
setLocalizedBundleDisplayName:
af_enumerateUserVisibleApplicationsWithBlock:
setFoundApps:
localizedStandardContainsString:
enumerateSubstringsInRange:options:usingBlock:
_ADPBLocationRequestType
speechRecordingDidBegin
notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:
af_speechPhrases
af_correctionContext
speechDidRecognizePhrases:usingSpeechModel:correctionContext:
speechRecognitionDidFinishWithError:
af_speechToken
speechDidRecognizeTokens:usingSpeechModel:
voiceSearchResults
recognitionText
stable
speechDidReceiveSearchResults:recognitionText:stable:final:
items
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
pronunciationData
ttsPronunciations
setPhonemeSuggestions:
speechDidFinishWritingAudioFile:error:
notifyAudioFileIOTransactionStoppedForReason:sessionUUID:
startSessionForReason:languageCode:options:speechRequestOptions:
_updateDictationOptions:
setDetectUtterances:
_dictationWillStartWithLanguageCode:options:speechOptions:
anonymousListener
endpoint
stopSessionForReason:
_localSpeechRecognizer
forceOfflineRecognition
taskHint
maximumRecognitionDuration
farField
speechDidProcessAudioDuration:
speechDidRecognizePackage:
localSpeechRecognizer:didRecognizePhrases:utterances:
continuePendingSpeechRequestFromTimestamp:
_usingLocalSpeechRecognizer
_waitingForSpeechRecognition
_waitingForStructuredResultsOrVoiceSearch
_waitingForAudioFile
_sessionTracker
_pendingSpeechRequestListener
_pendingSpeechRequestConnection
_disconnected
mostElevatedApplicationStateForPID:
initWithTimerID:isFiring:firedDate:dismissedDate:lastModifiedDate:aceObject:
_timerID
setTimerID:
updateMeters
averagePowerForChannel:
peakPowerForChannel:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
_channel
_languageCodeDidChange:
_sharedAssistantdIdentifierDidChange:
_unregisterForPossibleSessionDestroyingNotifications
_registerForPossibleSessionDestroyingNotifications
_startRemoteSession:
_canStartLocalSession
_startLocalSession:
_saConnectionMode
_startSessions:
_resetSessionsAndMakeQuiet:
_mapADRequestIdToSessionRequestId:forSession:
_ad_connectionModeFromEnabledState
addiTunesObserver
removeiTunesObserver
_cancelOtherSessionRequests:forRefId:
_logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:
_resetResultObjectsTimer
_resultObjectsHoldTime
_resultObjectsTimerFired:
_evaluateResultObjects
_startResultObjectsTimer
mutatingCommand
_keyForRequestId:forSession:
_resetWinningState
_purgeRequestMaps
_reverseMapSessionRequestIdToADRequestId:forSession:
_isDestructive:
_logCommandToMetrics:forSession:outbound:
_allowWhitelistedCommands:
_haveUsefulness:usefulnessScore:
_queueResultObject:forSession:
_hasAtleastOneActiveSessionBesides:
_logMetricsForSessionFailure:withError:
_pickDefaultWinnerWithDroppingSession:
beginSessionRetryPreferringWWAN:
_filterUnsupportedCommands:inGroup:onSession:
_convertEmbeddedRequestIds:originalCommand:session:
_sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:
connectionDidDrop
connectionDidFail
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:contextProvider:contextProvidingQueue:
_preferredSessionType
_mapAndSendSpeechFailure:toLocalSession:
_propagateCachedSpeechErrorToLocalSessions
_startObservingDistributedNotifications
_stopObservingDistributedNotifications
hasClient
_removeKeyFromProxyMaps:forSession:
_sharedUserIdentifierIsDirty
_isRegisteredForSessionDestroyingNotifications
_sessions
_callInProcess
_hasClient
_aggregator
_proxiedIdMap
_reverseProxiedIdMap
_sessionOriginatedCommandTable
_winningSessionId
_resultObjectsEvaluationTimer
_isQueuingResultsForDelayedEvaluation
_timerFiredOnce
_continueWithPreviousWinner
_lastSessionError
_savedSasSpeechRecognized
_savedSasSpeechRecognizedSubmitted
_savedSasSpeechFailure
_serverDrivenResultsHoldTime
_serverSpeechRecognitionArrived
userActivityForID:
setUserActivity:forID:
_userActivitiesStore
_addressBookRecord
initWithUUID:timestamp:languageCode:options:speechRequestOptions:
_setSpeechRecognitionTransactionState:
_setAudioFileIOTransactionState:
_options
_speechRecognitionTransactionState
_audioFileIOTransactionState
movieRestriction
tvRestriction
appRestriction
_ad_SADHash
_updateVoice:
_updateRestrictions:
_updateVoiceOverStatus:
_updateItunesStoreIdentifier:
sharedConfiguration
_onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:
_updateCallCapability:
_generateAssistantData
_locationRestrictionDidChange:
_currentLocaleDidChange:
_systemTimeZoneDidChange:
_outputVoiceDidChange:
_voiceAssetsUpdated:
_censorSpeechDidChange:
_supportsTelephonyCallsDidChange:
_storeFrontDidChange:
_countryCodeDidChange:
_httThresholdDidChange:
_notifyObserversOfSAD:
resetSystemTimeZone
systemTimeZone
setTwentyFourHourTimeDisplay:
_cachedRestrictions
setParentalRestrictions:
setAllowUserGeneratedContent:
setMediaPlayerExplicitContentDisallowed:
setMediaContentRatingRestrictions:
setUiScale:
setTtsVoice:
setMeCards:
setAbSources:
setDeviceColor:
setDeviceEnclosure:
setInRetailStoreDemoMode:
preferredLanguages
setPreferredLanguage:
setFullStorefrontId:
setDeviceCapabilities:
setTemperatureUnit:
setVoiceOver:
manualEndpointingThreshold
setHoldToTalkThresholdInMilliseconds:
setUserInterfaceIdiom:
objectsForKeys:notFoundMarker:
hexStringFromBytes:length:
setAnchor:
isMainThread
updateProvidersForCurrentCountry
effectiveValueForSetting:
setMovieRestriction:
setTvRestriction:
setAppRestriction:
setLanguageString:
setName:
setQuality:
setVoiceType:
getVoiceInfoForLanguageCode:footprint:gender:type:reply:
supportsTelephonyCalls
defaultStore
storeFrontIdentifier
currentDevice
loadStoreFrontWithCompletionHandler:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
contextCollector:didChangeDisplayScale:
_safeUpdateVoiceOverStatus
voiceOverIsActive
setVoiceOverIsActive:
_addressBookManager
_cachedMeCards
_cachedABSources
_cachedCensorSpeech
_cachedAllowUserGeneratedContent
_cachedInRetailStoreDemoMode
_cachedCountryCode
_receivedGeoCountryConfigurationResponse
_voiceTriggerEnabled
_cachedVoice
_initialFetchComplete
_cachedAllowsExplicitContent
_cachedContentRatingRestrictions
_cachedSupportsTelephonyCalls
_displayScaleMonitor
_watchIsInverted
_watchIsOnLeftWrist
_cachedStoreFrontId
_observingiTunesChanges
_cachedSAD
_voiceOverIsActive
isEqualToArray:
setHandoffURLString:
handoffRequestData
_ad_setPayloadOnRequestInfo:
setHandoffRequestData:
setUtterance:
directAction
correctedSpeech
correctedSpeechContext
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
previousUtterance
setPreviousUtterance:
utteranceSource
setUtteranceSource:
startRequest
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
_ad_voiceInfo
_ad_setVoiceInfo:
_ad_data
_ad_setRequestInfo:
startSpeechRecognitionWithLanguage:task:context:profile:narrowband:detectUtterances:censorSpeech:maximumRecognitionDuration:farField:overrides:modelOverrideURL:didStartHandler:
createSpeechProfileWithLanguage:JSONData:completion:
createSpeechProfileWithLanguage:existingProfile:userData:completion:
updateSpeechProfileWithLanguage:existingProfile:existingAssetPath:completion:
getOfflineDictationStatusIgnoringCache:withCompletion:
fetchUserDataForLanguage:completion:
runAdaptationRecipeEvaluation:localSpeechDESRecord:attachments:completion:
speechServiceDidRecognizeTokens:
speechServiceDidProcessAudioDuration:
speechServiceDidRecognizeRawEagerRecognitionCandidate:
speechServiceDidRecognizePackage:
speechServiceDidFinishRecognitionWithStatistics:error:
outstandingResponses
setOutstandingResponses:
responseType
setResponseType:
responses
setResponses:
timeoutTimer
setTimeoutTimer:
_responseType
_outstandingResponses
_responses
_timeoutTimer
peer
setPeer:
proto
setProto:
error
setError:
_peer
_proto
_error
initWithKeyOptions:valueOptions:capacity:
_peers
_sendProto:ofType:originalRequestId:toPeers:responseType:completion:
_destinationsForPeers:
_timedOutError
_handleMessageResponse:ofType:orError:fromID:handler:
_sendProto:ofType:toPeers:
_pointerToBlockMap
objectEnumerator
_sendProto:ofType:toPeers:responseType:completion:
_ad_performWithCloudService:fromPeer:completion:
_unexpectedMessageError
peers
_notifyObserversOfSharedData:fromPeer:
getSharedDataFromPeers:completion:
setSharedDataRequestObserver:withHandler:
_notifyObserversOfSharedDataRequestFromPeer:completion:
startRemoteRequest:onPeers:completion:
_notifyObserversOfRequestInfo:fromPeer:completion:
_sharedDataObservers
_sharedDataRequestObservers
_remoteRequestObservers
_ADPBDeviceRequestType
_sendContextPromiseForTypes:withAceId:
setPromiseTypes:
_setBackgroundContext
_setAlertContextWithActivationEventTime:
_setSyncContext
_sendContextPromiseForTypes:
_aceValue
_ensureBackgroundContextSentToServer
search
setIsNew:
setStart:
setEnd:
sectionSubtype
setVoiceMail:
_context_deviceState
orderedContext
setHasGender:
hasGender
genderAsString:
StringAsGender:
_gender
setEnabledLogging:
setActivationEventTime:expectedActivationEventTime:forEvent:
markLocalSpeechStarted
markLocalPartialSpeechRecognition
markLocalFinalSpeechRecognition
setLocalSpeechModelInfo:
localSpeechStartedDelaySinceRecordingStarted
localFinalSpeechRecognitionDelaySinceBaseline
recordingWillStartTime
usedBluetooth
aggressivelyPrewarmed
setAggressivelyPrewarmed:
enabledLogging
usedManualEndpointing
isFailure
failureError
isCancelled
setProcessLaunchTime:
usedMotionUpGesture
_baselineTime
_addViewsReceivedTimes
_launchAppTime
_requestCompletedTime
_partialRecognitionTimes
_speechRecognizedTime
_localPartialRecognitionTimes
_localSpeechStartedTime
_localFinalSpeechRecognition
_localSpeechModelInfo
_startedRecordingTime
_activationEventTime
_expectedActivationEventTime
_activationEvent
_requestTimestamps
_connectionPolicyId
_connectionRouteId
_connectionDelay
_recordingWillStartTime
_usedBluetooth
_aggressivelyPrewarmed
_enabledLogging
_isFailure
_failureError
_isCancelled
_usedMotionUpGesture
_musicWasDetected
_endpointWasExtendedDueToMusicClassifier
_partialResultAcousticIdTimerScheduled
_partialResultAcousticIdTimerFired
_useNonBlockingHaptics
_defrostXPCMessageToProcessLaunchDuration
_usedManualEndpointing
_homeButtonUpFromBeep
_processLaunchTime
timings
_updateTimings:withMetrics:keySuffix:
_defaultStoreSpecificKeyPrefixForName:
_defaultStoreSpecificKeyForName:key:
_storeWithName:
removeValueForKey:error:
initWithMatchType:value:negated:
removeValuesMatching:completionHandler:
_storeMap
_ad_settingsRequestRepresentation
_ad_aceSettingsResponseCommandRepresentationForSiriResponse:
_ad_settingType
_ad_aceSettingsGetBooleanResponseRepresentation
_ad_aceSettingsResponseRepresentationForSetValueCommand:
_ad_getSettingsRequestForHandler:completion:
_ad_setting
_setSettings:
dryRun
_setApplyChanges:
_initWithSettingType:
settingsAction
_ad_aceSettingBooleanEntityRepresentation
valueBeforeUpdate
setPreviousValue:
failOnSiriDisconnectWarnings
setSetting:
settingChanges
_accessibilityVibrationValue
_silentVibrationValue
_ringVibrationValue
_voiceOverVibrationValue
_fetchRingVibrationValue
_fetchSilentVibrationValue
_fetchAccessibilityVibrationValue
_fetchVoiceOverVibrationValue
handleVoiceOverValueChange
handleRingVibrationValueChange
handleSilentVibrationValueChange
handleAccessibilityVibrationValueChange
_voiceOverVibrationState
_ringVibrationState
_silentVibrationState
_accessiblityVibrationState
_beginSpeechRecognitionTransactionForReason:session:
_beginAudioFileIOTransactionForReason:session:
_addSession:
_startedOrStartingSession
_sessionWithUUID:
_endSpeechRecognitionTransactionForReason:session:
_endAudioFileIOTransactionForReason:session:
_sessionsByUUID
setAttributes:ofItemAtPath:error:
fileModificationDate
initWithComponentId:andBlockOnConfiguration:
_AWDTimestampTruncatedToHourPrecision
_currentTime
_setConnectionStartTime:
_submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:
_connectionStartTime
_durationInMillisecondsFromTime:toTime:
setErrorDomain:
_setVoiceRecordingStartTime:
_setVoiceRecordingEndTime:
_voiceRecordingStartTime
_setVoiceSendStartTime:
_setVoiceSendEndTime:
_voiceSendStartTime
metricValue
_voiceRecordingEndTime
setDurationFromVoiceRecordingEnd:
_voiceSendEndTime
setDurationFromVoiceSendEnd:
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_submitMetricWithIdentifier:generation:
setTimestamp:
getAWDTimestamp
logConnectionFailedWithError:connectionType:
logVoiceRecordingStart
logVoiceSendStart
logVoiceSendEnd
logNetworkAnalyzeRunWithResults:
isForUserRequest
setForUserRequest:
analyzedSuccessfulRetry
setAnalyzedSuccessfulRetry:
setWwanPreferred:
connectionInterface
setConnectionInterface:
sendBufferBytesRemaining
setSendBufferBytesRemaining:
knownURLLoadDuration
setKnownURLLoadDuration:
siriURLLoadDuration
setSiriURLLoadDuration:
siriSaltURLLoadDuration
setSiriSaltURLLoadDuration:
gatewayStatus
setGatewayStatus:
gatewayPingDuration
setGatewayPingDuration:
gatewayPingsSent
setGatewayPingsSent:
gatewayPingsDropped
setGatewayPingsDropped:
_forUserRequest
_analyzedSuccessfulRetry
_wwanPreferred
_connectionInterface
_sendBufferBytesRemaining
_knownURLLoadDuration
_siriURLLoadDuration
_siriSaltURLLoadDuration
_gatewayStatus
_gatewayPingDuration
_gatewayPingsSent
_gatewayPingsDropped
setInterface:
setIsUserRequest:
setAnalyzingSuccessfulRetry:
_durationInMillisecondsForDuration:
af_logDiagnostics
_startWithCompletion:
_stop:
_beginInterruption
_endInterruption:
isPlaying
_willStartWithCompletion:
itemURL
initWithContentsOfURL:error:
_didNotStartWithError:
numberOfLoops
setNumberOfLoops:
fadeInDuration
setVolume:
volume
prepareToPlay
play
_didStart
setVolume:fadeDuration:
fadeOutDuration
pause
_didStopWithError:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
_player
_isActive
bundleInfoValueForKey:PID:
initWithBytesNoCopy:length:freeWhenDone:
_appIdentifierfromConnection:
logAssistantEnabledSetTo:by:
logDictationEnabledSetTo:by:
addObserverForName:object:queue:usingBlock:
intersectSet:
initWithLanguageCode:gender:isCustom:
getLocalVoiceAssets:
setOfflineDictationProfileOverridePath:
setAudioFileURL:
recordsWithLanguage:error:
initWithBaseURL:
setDESPolicyCDNOverride:
setDESRecordingAlwaysIsEnabled:
setDESLotteryWinOverrideIsEnabled:
syncVerificationPartialResult:
syncVerificationServerReport:
_evaluationSession
_setMotionActivity:
setActivityHandler:
activity
_motionActivity
_motionActivityManager
_ad_alarmStoreErrorWithCode:
initWithCriteria:searchOptions:
searchOptions
_criteria
_searchOptions
matchesAlarm:
fetchAlarmsMatchingAnyOfQueries:completionHandler:
_af_preferredBundleID
_groupKeyForSyncInfo:domainObject:
groupChecksum
setDomainObjectClass:
setSyncAnchor:
syncAnchor
setIdentifierChecksum:
_checksums
_idCRCChecksums
hasCodedLocation
_codedLocation
_requestDataRemotely:
_ad_performWithSharedDataConnection:
_dataDidUpdate:
_savedAudioFilesDirectory
_initWithType:pathGenerator:xorFileHandle:priority:
fileDescriptor
defaultCStringEncoding
stringWithCString:encoding:
removeItemAtURL:error:
fileURLWithPath:isDirectory:
_generateTemporaryFileURL
_delete
initWithFileDescriptor:closeOnDealloc:
_audioFile
_asbd
_fileHandle
_underlyingError
startTime
silenceStartTime
ad_speechEndTime
_dispatchCallbackForProcessedData:error:completion:
_retrieveKeyAndSaltWithCompletion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
_procedureQueue
_callbackQueue
_inMemorySalt
v8@?0
SyncTimeouts.plist
-[ADSyncBlacklist checkPermissionToSyncSlot:forApp:completion:]_block_invoke
-[ADSyncBlacklist filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:]
v32@?0@"NSString"8@"NSArray"16^B24
B32@?0@"NSString"8@"NSDate"16^B24
primary
v32@?0@"NSString"8@"SiriCoreConnectionTCPInfoMetrics"16^B24
_ad_metrics
T@"SiriCoreConnectionMetrics",C,N,S_ad_setMetrics:
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithProtocolBufferProxy(_ADPBProxyTCPInfoMetrics *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADConnectionTCPInfoMetricsUtilities.m
<Unknown File>
Invalid parameter not satisfying: %@
protocolBufferProxy != nil
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithLegacyProtocolBufferProxy(_ADPBProxyGetMetricsResponse *__strong)
legacyProtocolBufferProxy != nil
default
_ADPBProxyTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong)
tcpInfoMetrics != nil
void ADConnectionTCPInfoMetricsConfigureLegacyProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong, _ADPBProxyGetMetricsResponse *__strong)
ADVoiceAssetsUpdatedNotification
ADDaemon
-[ADDaemon _setupInternal]
CFNETWORK_DIAGNOSTICS
CFNETWORK_DIAGNOSTICS_NO_SYSLOG
-[ADDaemon _proxyService]
-[ADDaemon _sharedDataService]
-[ADDaemon _peerLocationService]
-[ADDaemon _clientListenerShouldAcceptNewConnection:]
client connection connected
-[ADDaemon _clientListenerShouldAcceptNewConnection:]_block_invoke
client connection was invalidated
com.apple.assistant.request
com.apple.assistant.speech-request
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]_block_invoke
com.apple.imagent
com.apple.MobileSMS
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]_block_invoke_2
-[ADDaemon _securityListenerShouldAcceptNewConnection:]
-[ADDaemon _securityListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _securityListenerShouldAcceptNewConnection:]_block_invoke_2
com.apple.notifyd.matching
-[ADDaemon _setupNotifyHandlers]_block_invoke
com.apple.MobileAsset.VoiceServices.VoiceResources.new-asset-installed
com.apple.voiceservices.notification.voice-update
com.apple.voicetrigger.EarlyDetect
com.apple.siri.preheat.quiet
com.apple.nanoregistry.devicedidpair
Safety net
com.apple.proactive.PersonalizationPortrait.namedEntitiesDidChangeMeaningfully
portrait_changed
com.apple.proactive.PersonalizationPortrait.namedEntitiesInvalidated
portrait_invalidated
com.apple.managedconfiguration.effectivesettingschanged
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
-[ADDaemon _setupDistributedNotificationHandlers]_block_invoke
UserInfo
com.apple.assistant.sync
-[ADDaemon _setupSyncListener]_block_invoke
com.apple.pairedsync.siri
-[ADDaemon syncCoordinatorDidReceiveStartSyncCommand:]
siri.network.override
-[ADDaemon _daemonDidLaunch]
-[ADDaemon _daemonWillShutdown]
-[ADDaemon _syncCoalesced]
-[ADDaemon _syncForReason:withCoalescing:]
UnlockedWorkQueue
name
sync_now
_ADHandleNewSyncPeer_block_invoke
sync_reason
defrost
mach_time
PSYSyncCoordinator
/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
%@ %@
open_interval
first_byte_read_interval
attempt_count
metrics_count
ping_mean
ping_count
unacknowledged_ping_count
rtt_current
rtt_smoothed
rtt_variance
rtt_best
tx_packets
tx_bytes
tx_retransmit_bytes
tx_unacked
rx_packets
rx_bytes
rx_duplicate_bytes
rx_ooo_bytes
snd_bandwidth
syn_retransmits
subflow_count
connected_subflow_count
primary_subflow_iface
primary_subflow_switch_count
connectionMethodName
connectionEdgeIDName
connectionEdgeType
connectionFallbackReason
tuscanyConnectionDelay
tcp_info_metrics
hasOpenInterval
TB,N
openInterval
Td,N,V_openInterval
hasFirstByteReadInterval
firstByteReadInterval
Td,N,V_firstByteReadInterval
hasAttemptCount
attemptCount
TI,N,V_attemptCount
hasMetricsCount
metricsCount
TI,N,V_metricsCount
hasPingMean
pingMean
Td,N,V_pingMean
hasPingCount
pingCount
TI,N,V_pingCount
hasUnacknowledgedPingCount
unacknowledgedPingCount
TI,N,V_unacknowledgedPingCount
hasRttCurrent
rttCurrent
TI,N,V_rttCurrent
hasRttSmoothed
rttSmoothed
TI,N,V_rttSmoothed
hasRttVariance
rttVariance
TI,N,V_rttVariance
hasRttBest
rttBest
TI,N,V_rttBest
hasTxPackets
txPackets
TQ,N,V_txPackets
hasTxBytes
txBytes
TQ,N,V_txBytes
hasTxRetransmitBytes
txRetransmitBytes
TQ,N,V_txRetransmitBytes
hasTxUnacked
txUnacked
TQ,N,V_txUnacked
hasRxPackets
rxPackets
TQ,N,V_rxPackets
hasRxBytes
rxBytes
TQ,N,V_rxBytes
hasRxDuplicateBytes
rxDuplicateBytes
TQ,N,V_rxDuplicateBytes
hasRxOooBytes
rxOooBytes
TQ,N,V_rxOooBytes
hasSndBandwidth
sndBandwidth
TQ,N,V_sndBandwidth
hasSynRetransmits
synRetransmits
TI,N,V_synRetransmits
hasSubflowCount
subflowCount
TI,N,V_subflowCount
hasConnectedSubflowCount
connectedSubflowCount
TI,N,V_connectedSubflowCount
hasPrimarySubflowIface
TB,R,N
primarySubflowIface
T@"NSString",&,N,V_primarySubflowIface
hasPrimarySubflowSwitchCount
primarySubflowSwitchCount
TI,N,V_primarySubflowSwitchCount
hasConnectionMethodName
T@"NSString",&,N,V_connectionMethodName
hasConnectionEdgeIDName
T@"NSString",&,N,V_connectionEdgeIDName
hasConnectionEdgeType
T@"NSString",&,N,V_connectionEdgeType
hasConnectionFallbackReason
TI,N,V_connectionFallbackReason
hasTuscanyConnectionDelay
Td,N,V_tuscanyConnectionDelay
tcpInfoMetrics
T@"NSMutableArray",&,N,V_tcpInfoMetrics
ADPeerLocationConnection
v16@?0@"CLLocation"8
-[ADPeerLocationConnection getBestLocationWithCompletion:]_block_invoke
v24@?0@"PBCodable"8@"NSError"16
ADSharedDataRemote
-[ADSharedDataRemote effectiveSettingsChanged]_block_invoke
-[ADSharedDataRemote _pushSharedDataToPeerFromNotification:completion:]
v16@?0@"ADSharedData"8
-[ADSharedDataRemote _sharedDataDidChange:]
-[ADSharedDataRemote _getDataWithPBCompletion:]_block_invoke
-[ADSharedDataRemote _getDataWithPBCompletion:]_block_invoke_2
-[ADSharedDataRemote _setDataFromSharedData:]
v12@?0B8
-[_ADPBDeviceGetDataRequest(ADSharedDataRemote) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceStartRemoteRequest(ADSharedDataRemote) _ad_performWithSharedDataRemote:completion:]
-[ADRecordingInfo initWithDictation:fingerprintOnly:secureOfflineOnly:audioAlertStyle:recordSettings:endpointerModelVersion:usingCurrentDeviceWithRoute:audioDeviceID:audioSessionID:voiceTriggerEventInfo:activationAlertStartTimestamp:startRecordingTimestamp:firstBufferTimestamp:deviceIdentifier:includeBTInfo:]
isDictation
TB,R,N,V_isDictation
isFingerprintOnly
TB,R,N,V_isFingerprintOnly
isSecureOfflineOnly
TB,R,N,V_isSecureOfflineOnly
audioAlertStyle
Tq,R,N,V_audioAlertStyle
codec
T@"NSString",R,N,V_codec
codecIsNarrowband
source
T@"NSString",R,N,V_source
route
T@"NSString",R,N,V_route
deviceId
T@"NSString",R,N,V_deviceId
modelName
T@"NSString",R,N,V_modelName
dspStatus
T@"NSString",R,N,V_dspStatus
headsetAddress
T@"NSString",R,N,V_headsetAddress
headsetName
T@"NSString",R,N,V_headsetName
voiceTriggerEventInfo
T@"NSDictionary",R,N,V_voiceTriggerEventInfo
isBluetooth
vendorId
T@"NSString",R,N
productId
activationAlertStartTimestamp
Td,R,N,V_activationAlertStartTimestamp
startRecordingTimestamp
Td,R,N,V_startRecordingTimestamp
audioSessionID
TI,R,N,V_audioSessionID
isEndAlertInfo
TB,N,V_isEndAlertInfo
firstBufferTimestamp
Td,N,V_firstBufferTimestamp
triggeredTwoShotBorealis
TB,N,V_triggeredTwoShotBorealis
endpointerModelVersion
T@"NSString",R,N,V_endpointerModelVersion
/var/mobile/forceSiriPCMAudio
%@ enabled: %@ dictation: %@ assistant id: %@ speech id: %@ sharedUserId: %@ language: %@ prev language: %@ outputVoice: %@ %@ prev: outputVoice: %@ %@ hostname: %@ cloud sync enabled: %@ should censor speech: %@
siriEnabled
TB,N,V_siriEnabled
dictationEnabled
TB,N,V_dictationEnabled
assistantId
T@"NSString",C,N,V_assistantId
speechId
T@"NSString",C,N,V_speechId
sharedUserId
T@"NSString",C,N,V_sharedUserId
previousLanguageCode
T@"NSString",C,N,V_previousLanguageCode
languageCode
T@"NSString",C,N,V_languageCode
previousOutputVoice
T@"AFVoiceInfo",C,N,V_previousOutputVoice
outputVoice
T@"AFVoiceInfo",C,N,V_outputVoice
hostname
T@"NSString",C,N,V_hostname
cloudSyncEnabled
TB,N,V_cloudSyncEnabled
shouldCensorSpeech
TB,N,V_shouldCensorSpeech
delegate
T@"<ADSessionLocalConnectionDelegate>",W,N,V_delegate
Data
remoteRequestInfo
T@"AFRequestInfo",&,N,V_remoteRequestInfo
completion
T@?,C,N,V_completion
com.apple.siri.acousticsignature
ADAcousticFingerprinter
-[ADAcousticFingerprinter _service]_block_invoke
-[ADAcousticFingerprinter _service]_block_invoke_2
-[ADAcousticFingerprinter setASBD:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[ADAcousticFingerprinter _convertPCMDataForFingerprinting:]
-[ADAcousticFingerprinter appendPCMData:]_block_invoke
v16@?0@"NSData"8
T@"<ADAcousticFingerprinterDelegate>",W,N,V_delegate
ASXSampleRateFromInt
ADServiceConnectionSyncQueue
-[ADServiceConnection _connection]_block_invoke
-[ADServiceConnection _connection]_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADServiceConnection.m
Must have a path
Must have a command
path
class
commandName
-[ADServiceConnection sendClientBoundCommand:domain:reply:]
-[ADServiceConnection sendClientBoundCommand:domain:reply:]_block_invoke
-[ADServiceConnection sendClientBoundCommand:domain:reply:]_block_invoke_2
v16@?0@"NSError"8
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke_2
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]_block_invoke
v16@?0@"AFSyncSnapshot"8
v24@?0@"SABaseCommand"8@"NSError"16
identifier
T@"NSString",R,N,V_identifier
T@"<ADServiceConnectionDelegate>",W,N,V_delegate
-[ADServiceConnectionProviderServiceDelegate syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:]_block_invoke
stuck_sync_plugin
plugin_path
ADRemoteConnectionErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADPeerConnection.m
func
ADRemotePeerConnection
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]_block_invoke
-[ADPeerConnection _sendResponse:forRequestId:]
-[ADPeerConnection _sendResponse:forRequestId:]_block_invoke
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]_block_invoke
-[ADPeerConnection service:account:identifier:didSendWithSuccess:error:]
%@.%@
-[ADSessionLocalServer _startSession]
-[ADSessionLocalServer setHasActiveRequest:]
-[ADSessionLocalServer _saAssistantNotReady:]
Mini not ready
connectionMode
errorDomain
errorCode
aceId
refId
-[ADSessionLocalServer _assistantFailedForReason:error:]
-[ADSessionLocalServer _assistantFailedForReason:error:]_block_invoke
-[ADSessionLocalServer _saCommandFailed:]
-[ADSessionLocalServer _saAssistantLoaded:]
-[ADSessionLocalServer _handleAceObject:]
-[ADSessionLocalServer speechRecognized:]
-[ADSessionLocalServer speechRecognitionError:]
-[ADSessionLocalServer _sendServerCommand:]
-[ADSessionLocalServer _sendServerCommand:]_block_invoke
supportsSecureCoding
TB,R
groupIdentifier
classIdentifier
@"NSDictionary"8@?0
sessionType
local
-[ADSessionLocalServer siriConnection:didOpenWithConnectionType:delay:]
-[ADSessionLocalServer siriConnection:didReceiveAceObject:]
-[ADSessionLocalServer siriConnectionDidClose:]
-[ADSessionLocalServer siriConnection:didEncounterError:]
-[ADSessionLocalServer _sendAssistantDataChangedSinceAnchor:refId:]
allGroups
T@"NSArray",R,N
com.apple.assistant.experiment-manager
-[ADExperimentManager init]_block_invoke
v32@?0@"NSString"8@"AFExperimentConfiguration"16^B24
_ADExperimentManagerCreateExperiment
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]
v16@?0q8
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]_block_invoke
v12@?0i8
-[ADCommandCenter(AcousticId) _acousticId_handleFingerprint:duration:]
-[ADCommandCenter(AcousticId) _saAIRequestSearch:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]_block_invoke
-[ADCommandCenter(AcousticId) _saAIRetrySearch:completion:]
-[ADCommandCenter(AcousticId) acousticIDHelperDidStartSession:]
-[ADCommandCenter(AcousticId) acousticIDHelper:didCompleteSessionSuccessfully:]
ADPreferencesLanguageCodeDidChangeNotification
ADPreferencesOutputVoiceDidChangeNotification
ADPreferencesSharedUserIdentifierDidChangeNotification
ADPreferencesEnabledBitsDidChangeNotification
User Identifier
Accounts
Active Account
StatisticsEnabled
Idle Timeout
Authentication Disabled
Ignore Location WiFi Status
Server Override
Product Type Prefix
Server Redirect
Last Known Proxy Stream Id
Last Sync Verification Date
Experiment Identifier
Metrics Sender Disabled
Proxy Connection Disabled
Last Known Analytics Store State
DeepSyncVerificationKeys
ADSyncDeepVerificationManagerIOQueue
com.apple.siri.DeepSyncVerificationService
-[ADSyncDeepVerificationManager _service]_block_invoke
-[ADSyncDeepVerificationManager _loadVerificationKeys]
-[ADSyncDeepVerificationManager _saveVerificationKeys]_block_invoke
-[ADSyncDeepVerificationManager startVerificationForKeys:requestID:]
-[ADSyncDeepVerificationManager handleSyncChunk:]
v16@?0@"NSArray"8
-[ADClientLiteListener listener:shouldAcceptNewConnection:]
-[ADClientLite handleRemoteCommand:isOneWay:completion:]
v20@?0B8@"NSError"12
v16@?0@?<v@?>8
v16@?0@"SABaseCommand"8
-[ADClientLite adRequestDidReceiveCommand:reply:]_block_invoke
ADPeerInfo
%@ identifier: %@ productType: %@ buildVersion: %@ name: %@
productType
buildVersion
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_name
dictionaryRepresentation
T@"NSDictionary",R,C,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSiriRequestSucceededResponseTransformer.m
Request succeeded response transformer expected response of type %@, but got %@ instead; request command: %@
ADLanguageCodeKeepSame
ADCommandCenterQueue
-[ADCommandCenter _addCompletion:forCommandId:]
com.apple.TVLive
-[ADCommandCenter _cancelSessionIfIdle]
-[ADCommandCenter _clearRequestDelegateState]
-[ADCommandCenter _clearSpeechDelegateState]
-[ADCommandCenter _replaceRequestDelegate:andCompletion:]
-[ADCommandCenter _replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:]
-[ADCommandCenter _speechCaptureCompleted]
-[ADCommandCenter _didLaunchAppForRequestWithIdentifier:]
-[ADCommandCenter _refIdIsSpeechStart:]
-[ADCommandCenter _sendRollbackCommandForCommand:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:]_block_invoke
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:]_block_invoke_2
v24@?0@"<SAAceCommand>"8@"NSError"16
-[ADCommandCenter _cancelCurrentRequest]
-[ADCommandCenter _shutdownAfterDelay:]_block_invoke
-[ADCommandCenter _shutdownAfterDelay:]_block_invoke_2
-[ADCommandCenter _shutdownAfterDelay:]
-[ADCommandCenter _handleCommand:completion:]
T@"NSString",C,N
appId
callbacks
T@"NSArray",C,N
-[ADCommandCenter _processCallbacksForCommand:]
-[ADCommandCenter _handleValidServiceReply:forCommand:]
-[ADCommandCenter _handleServiceReply:error:forCommand:]
bad response
-[ADCommandCenter _handleServiceCommand:completion:]
-[ADCommandCenter _handleServiceCommand:completion:]_block_invoke
v24@?0@"SAGenericCommand"8@"NSError"16
-[ADCommandCenter _sendServiceCommand:completion:]_block_invoke
-[ADCommandCenter _sendServiceCommand:completion:]_block_invoke_2
com.apple.assistant.command-center.call
-[ADCommandCenter adCallStateChangedCallInProcess:]_block_invoke
-[ADCommandCenter _handleBareRequestCompleted:]
-[ADCommandCenter _handleBareRequestCompleted:]_block_invoke
-[ADCommandCenter _saRequestCompleted:completion:]
-[ADCommandCenter _saCommandFailed:completion:]
Speech not ready
-[ADCommandCenter _saCommandIgnored:completion:]
-[ADCommandCenter _saSetClientData:completion:]
-[ADCommandCenter _saSetHandoffPayload:completion:]
-[ADCommandCenter _saStartLocalRequest:completion:]
-[ADCommandCenter _saAddResultObjects:completion:]
-[ADCommandCenter _saExecuteCallbacks:completion:]
-[ADCommandCenter _saInitiateHandoffOnCompanion:completion:]
-[ADCommandCenter _saSetDeviceTTSMuteState:completion:]
-[ADCommandCenter _saSetVoiceTriggerEnabled:completion:]
Command not supported 
-[ADCommandCenter _saGetVoiceTriggerEnabled:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]
v20@?0B8@"NSArray"12
-[ADCommandCenter _acceptResultCandidate:featuresToLog:completion:]
features
-[ADCommandCenter _sasSpeechServerEndpointIdentified:completion:]
-[ADCommandCenter _sasSpeechRecognized:completion:]
-[ADCommandCenter _handleSpeechRecognizedWithRefId:delegateBlock:]_block_invoke
bestTextInterpretation
-[ADCommandCenter _sasSpeechPartialResult:completion:]
-[ADCommandCenter _handlePartialResultWithRefId:elapsedTime:delegateBlock:]_block_invoke
-[ADCommandCenter _saStructuredDictationResult:completion:]
-[ADCommandCenter _saStructuredDictationFailure:completion:]
-[ADCommandCenter _sasSpeechFailure:completion:]
-[ADCommandCenter _sasAbortSpeechRequest:completion:]
-[ADCommandCenter _sasVoiceSearchPartialResult:completion:]
-[ADCommandCenter _sasVoiceSearchFinalResult:completion:]
-[ADCommandCenter _sasSuspendClientEndpointer:completion:]
v24@?0d8d16
-[ADCommandCenter _sasConfirmEndpoint:completion:]
-[ADCommandCenter _sasServerEndpointFeatures:completion:]
-[ADCommandCenter _sasClientBoundConfusionNetwork:completion:]
-[ADCommandCenter _saClientSetupInfo:completion:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:]_block_invoke
-[ADCommandCenter _saAcknowledgeAlert:completion:]
-[ADCommandCenter _saGetRequestOrigin:completion:]
Failed getting request origin
v16@?0@"SASetRequestOrigin"8
Failed getting diagnostic report
v16@?0@"SADIAGLatencyDiagnosticReport"8
Unhandled Object
-[ADCommandCenter _sessionDidFailWithError:]
-[ADCommandCenter assistantSessionManager:receivedError:isRetryableError:]
-[ADCommandCenter assistantSessionManagerShouldAttemptRetry:]
-[ADCommandCenter assistantSessionManagerSessionConnectionDidReset:]
-[ADCommandCenter assistantSessionManagerSessionRemoteConnectionDidReset:]
-[ADCommandCenter assistantSessionManager:didChangeRequestIdFrom:toId:]
-[ADCommandCenter speechManager:recognitionUpdateWillBeginForTask:]
PhonemeTranscription
-[ADCommandCenter _sendStartSpeechCommandWithSpeechManager:info:]
-[ADCommandCenter _sendEnableServerEndpointerCommandWithRefID:]
-[ADCommandCenter _sendLocationIfNeededForRequest]
-[ADCommandCenter _sendLocationIfNeededForRequest]_block_invoke
-[ADCommandCenter _sendContextAndRestrictionsForSpeechRequestWithInfo:]
-[ADCommandCenter speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:sessionUUID:]
-[ADCommandCenter speechManager:didStartRecordingWithInfo:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:capturedPackets:atTimestamp:totalCount:]_block_invoke
-[ADCommandCenter speechManagerDidDetectMusic:]
-[ADCommandCenter speechManagerDidDelayEndpointForMusic:]
-[ADCommandCenter speechManager:didFinishWithTotalPackets:endpointMode:capturingMode:endpointerMetrics:sessionUUID:]
-[ADCommandCenter speechManager:didCancelWithSessionUUID:]
-[ADCommandCenter speechManager:didFailWithError:sessionUUID:]
-[ADCommandCenter speechManager:didFailWithError:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didFinishWritingAudioFile:error:sessionUUID:]
-[ADCommandCenter speechManager:didRecognizeTokens:sessionUUID:]_block_invoke
<REDACTED>
-[ADCommandCenter speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke_2
v32@?0@"AFSpeechPhrase"8Q16^B24
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke_3
v32@?0@"AFSpeechUtterance"8Q16^B24
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke_4
-[ADCommandCenter speechManager:recognitionDidCompleteWithError:sessionUUID:statistics:]_block_invoke
%@ is incapable of performing fake two shot prompt.
-[ADCommandCenter speechManager:didRequestQuickStopWithSessionUUID:]_block_invoke
SiriQuickStop
-[ADCommandCenter speechManager:didRequestQuickStopWithSessionUUID:]_block_invoke_2
-[ADCommandCenter speechManager:didChangeRecordingState:]_block_invoke
-[ADCommandCenter UIService:executeCommandHandler:]
-[ADCommandCenter UIService:executeCommandHandler:]_block_invoke
-[ADCommandCenter _preheatWithStyle:forOptions:completion:]
-[ADCommandCenter _forceAudioSessionActiveWithCompletion:]
-[ADCommandCenter _forceAudioSessionInactive]
-[ADCommandCenter _setLanguageCode:outputVoice:]
-[ADCommandCenter _setLockState:showingLockScreen:]
Locked
Unlocked
On Lock Screen
Not on lock screen
-[ADCommandCenter _lockStateSetRestrictionsThunk]_block_invoke
v16@?0@"AceObject"8
-[ADCommandCenter _setStarkRestriction:]
#CarPlay Add Stark Restriction
#CarPlay Remove Stark Restriction
-[ADCommandCenter _setCarDNDRestriction:]
#rhodes Add Car DND Restriction
#rhodes Remove Car DND Restriction
-[ADCommandCenter _prepareForAppLaunchForRequest:]_block_invoke
-[ADCommandCenter _setConfiguration:forClient:]
-[ADCommandCenter _endSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]_block_invoke
-[ADCommandCenter _prepareForPhoneCall]
-[ADCommandCenter _telephonyRequestCompleted]
-[ADCommandCenter _startRequest:withDelegate:]
-[ADCommandCenter _startNonSpeechRequest:forDelegate:options:suppressAlert:prepareAudio:completion:]
-[ADCommandCenter _prepareAudioSessionForDelegate:withOptions:]
v16@?0B8B12
v16@?0@"AFMetrics"8
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:]
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]
timestamp
prelistening
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]_block_invoke_2
v16@?0d8
-[ADCommandCenter _startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:]
-[ADCommandCenter _startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:]
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke_2
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:]
-[ADCommandCenter _startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:]
-[ADCommandCenter _addRecordedSpeechSampleData:delegate:]
-[ADCommandCenter _startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:]
-[ADCommandCenter _cancelRequestForDelegate:]
-[ADCommandCenter _rollbackRequestForDelegate:]
-[ADCommandCenter _setSuppressAudioInterruptionEndedNotifications:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]_block_invoke
-[ADCommandCenter _stopSpeechWithOptions:forDelegate:]
-[ADCommandCenter _cancelSpeechForDelegate:]
-[ADCommandCenter _sendSpeechCorrectionInfo:forCorrectionContext:]
-[ADCommandCenter _handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:]
-[ADCommandCenter _handleNonInterruptingAceCommand:waitForResponse:withDelegate:completion:]_block_invoke
-[ADCommandCenter _clearContext]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]_block_invoke
-[ADCommandCenter _getDeferredObjectsWithIdentifiers:completion:]_block_invoke
v16@?0Q8
-[ADCommandCenter _destroyActiveAccount]
-[ADCommandCenter _destroyActiveAccount]_block_invoke
-[ADCommandCenter _refreshAssistantValidation]
-[ADCommandCenter _rescheduleValidationRefresh]
-[ADCommandCenter _handleRemoteRequest:completion:]
-[ADCommandCenter _handleRemoteRequest:completion:]_block_invoke
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]_block_invoke
-[ADCommandCenter _setLanguageCode:withCompletion:]
-[ADCommandCenter _setLanguageCodeIfNeeded]
-[ADCommandCenter setQueuedLanguageCode:]
-[ADCommandCenter _processQueuedLanguageCode]
-[ADCommandCenter _clearQueuedLanguageCode]
-[ADCommandCenter setQueuedLanguageCode:andQueuedOutputVoice:]
-[ADCommandCenter _processQueuedLanguageCodeAndOutputVoice]
-[ADCommandCenter setQueuedOutputVoice:]
-[ADCommandCenter _processQueuedOutputVoice]
-[ADCommandCenter _clearQueuedOutputVoice]
-[ADCommandCenter startSpeechRequestWithDelegate:withOptions:]
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]
-[ADCommandCenter sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]
-[ADCommandCenter clientConnected:]_block_invoke
-[ADCommandCenter clientDisconnected:]_block_invoke
-[ADCommandCenter prepareForShutdown]_block_invoke
-[ADCommandCenter beginUpdateOutputAudioPowerForClient:completion:]
v16@?0@"AFXPCWrapper"8
-[ADCommandCenter endUpdateOutputAudioPowerForClient:]
-[ADCommandCenter _listInstalledServicesWithCompletion:]_block_invoke
_lastRequest
T@"SABaseCommand",&,N,S_setLastRequest:,V_lastRequest
_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_currentClient
T@"<ADCommandCenterClient>",R,N,V_currentClient
_requestDelegate
T@"<ADCommandCenterRequestDelegate>",R,N,V_requestDelegate
_speechDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechDelegate
_speechFileDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechFileDelegate
_speechDelegateHasReceivedPartialResult
TB,R,N,V_speechDelegateHasReceivedPartialResult
_currentRequest
T@"SABaseCommand",R,N,V_currentRequest
_deviceIsLocked
TB,R,N,V_deviceIsLocked
_isInStarkMode
TB,R,N,V_isInStarkMode
_isInCarDNDMode
TB,R,N,V_isInCarDNDMode
_speechManager
T@"ADSpeechManager",R,N
_isTimeoutSuspended
TB,N,S_setIsTimeoutSuspended:,V_isTimeoutSuspended
leadingSilence
trailingSilence
endTime
resultId
eager
_ADPreheatSpeechWithStyle
_ADPreheatSpeechManagerInBackgroundWithRecordDeviceIdentifier_block_invoke
_LogActivationDeltasForOptions
https://guzzoni.apple.com
Assistant Identifier
Speech Identifier
Label
Hostname
Group
Predefined Server
Ace Host
Connection Policy
Connection Policy Date
Connection Policy Hostname
Locale Identifier
Last Assistant Data Anchor
Server Certificate Data
Validation Data
Validation Expiration
Local Crypto Key Data
Peer Assistant Identifier
Peer Speech Identifier
Peer Hostname
Needs Destruction
Build Version
+[ADAccount accountForIdentifier:]
Predefined Servers
Default Server Override
B32@?0@8@16^B24
Deprecated Servers
-[ADAccount _hostnameOverride]
apple.com
apple.com:
-[ADAccount _hostnameQAOverride]
-[ADAccount save]
T@"NSString",C,N,V_identifier
label
T@"NSString",C,N,V_label
assistantIdentifier
T@"NSString",C,N,V_assistantIdentifier
speechIdentifier
T@"NSString",C,N,V_speechIdentifier
group
T@"NSString",C,N,V_group
predefinedServer
T@"NSString",C,N,V_predefinedServer
aceHost
T@"NSString",C,N,V_aceHost
connectionPolicy
T@"NSDictionary",C,N,V_connectionPolicy
connectionPolicyDate
T@"NSDate",C,N,V_connectionPolicyDate
connectionPolicyHostname
T@"NSString",C,N,V_connectionPolicyHostname
localeIdentifier
T@"NSString",C,N,V_localeIdentifier
lastAssistantDataAnchor
T@"NSString",C,N,V_lastAssistantDataAnchor
validationExpiration
T@"NSDate",C,N,V_validationExpiration
needsDestruction
TB,N,V_needsDestruction
connectionPolicyFailureCount
TQ,N,V_connectionPolicyFailureCount
peerAssistantIdentifier
peerSpeechIdentifier
peerHostname
com.apple.siri.location.Error
ADPeerLocationRemote
v16@?0@"CLLocationManager"8
-[ADPeerLocationRemote _startBestLocationTimer]
-[ADPeerLocationRemote _startBestLocationTimer]_block_invoke
-[ADPeerLocationRemote _cancelBestLocationTimer]
-[ADPeerLocationRemote _startUpdatingLocation]
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke
v24@?0@"_ADPBLocationSetPeerLocationRequest"8@"NSError"16
looking up best location on behalf of peer
-[ADPeerLocationRemote _executeBestLocationCompletionWithLocation:error:]
found best location on behalf of peer
-[ADPeerLocationRemote peerConnection:handlePBSubclass:completion:]
-[ADPeerLocationRemote locationManager:didUpdateLocations:]
-[ADPeerLocationRemote locationManager:didFailWithError:]
-[ADPeerLocationRemote locationManager:didChangeAuthorizationStatus:]
-[ADPeerLocationRemote locationManager:didChangeAuthorizationStatus:]_block_invoke
-[ADPeerLocationRemote locationManagerDidPauseLocationUpdates:]
-[ADPeerLocationRemote locationManagerDidResumeLocationUpdates:]
-[_ADPBLocationGetPeerLocationRequest(ADPeerLocationRemote) _ad_performWithPeerLocationManagerRemote:completion:]
-[ADSiriTetherListener listen]_block_invoke
-[ADSiriTetherListener _handleNewConnection:]
-[ADSiriTetherListener _handleNewConnection:]_block_invoke
com.apple.private.alloy.siri.proxy
assistantBundle
AssistantSyncAnchorKeys
Build
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADServiceManager.m
Shouldn't already have a service with identifier %@
-[ADServiceManager _removeService:]
-[ADServiceManager _reprioritizeService:]
-[ADServiceManager _generatedBundleServicesCache]
com.apple.siri.bundleservicecache.plist
-[ADServiceManager _bundleServicesCache]
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.siri.vocabularyupdates
<%@: Identifier: %@>
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleStopwatchRequestWithCompletionHandler:]
Response Time
Total Count
Library/Assistant/ServiceStatistics
-[ADServiceStatistics _statsDirectory]_block_invoke
%@.plist
-[ADServiceStatistics _statsDict]
-[ADServiceStatistics _saveStats]
-[ADServiceStatistics markIncomingCommand:]
-[ADServiceStatistics markResponseForCommand:]
serviceIdentifier
T@"NSString",R,N,V_serviceIdentifier
com.apple.private.NanoTimer
com.apple.NanoAlarm
com.apple.NanoSettings
com.apple.NanoMaps
com.apple.SessionTrackerApp
com.apple.ActivityMonitorApp
com.apple.NanoMail
-[ADCommandCenter(NanoServices) taskmaster:didReceivePunchoutOutcome:]_block_invoke
-[ADCommandCenter(NanoServices) taskmaster:didLaunchApplicationForRequestWithId:]
-[ADCommandCenter(NanoServices) appLaunchHandler:didLaunchAppForRequestId:]
-[ADSecurityService(MediaRemote) decryptRouteUIDs:completion:]
-[ADSecurityService(MediaRemote) decryptRouteUIDs:completion:]_block_invoke
-[ADSecurityService(MediaRemote) decryptRouteUIDs:completion:]_block_invoke_2
v32@?0@"NSString"8@"NSData"16^B24
v24@?0@"NSDictionary"8@"NSDictionary"16
-[ADExternalRequestListener listen]_block_invoke
_ADHandleNewExternalRequestPeer_block_invoke
com.apple.siri.sirikit.tcc.updater
-[ADSiriKitTCCObserver updateLocalTCCInfoFromMirroredInfo]_block_invoke
remote
-[ADSession _sendPendingCommands]
-[ADSession _sendLimboCommand:]
-[ADSession _sendServerCommand:]
-[ADSession _sendAssistantDataChangedSinceAnchor:refId:]
-[ADSession assistantDataManager:didUpdateAssistantData:]_block_invoke
-[ADSession _setAssistantDataAnchorIfNeeded:]
-[ADSession _sendPendingDormantCommands]
-[ADSession _setDormantWithStyle:]
dormant
active
-[ADSession preheatAndMakeQuiet:]
-[ADSession eagerlyFetchAssistantData]
-[ADSession refreshValidationData]
-[ADSession sendCommand:opportunistically:]
-[ADSession prepareForRetry]
-[ADSession cancelSessionRequest:]
queue
state
Tq,N,V_state
TB,N,V_dormant
T@"<ADSessionDelegate>",W,N,V_delegate
Ti,N,V_sessionType
T@"NSString",C,N,V_connectionMode
sharedUserIdentifier
T@"NSString",C,N,V_sharedUserIdentifier
initial
retryWaiting
connectionStarted
connectionOpened
openedDormant
authenticating
holding
createAssistant
loadAssistant
destroyAssistant
unknown
ADSpeechManagerRootQueue
ADSpeechManagerQueue
-[ADSpeechManager _speechRecorder]
-[ADSpeechManager _speechCompressor]
-[ADSpeechManager dictationSessionDidComplete]
-[ADSpeechManager dictationSessionDidComplete]_block_invoke
v24@?0@"NSString"8@"NSError"16
-[ADSpeechManager _fetchAssetsForLanaugeOrEnablementNotification:]_block_invoke_2
-[ADSpeechManager _interactiveLocalSpeechRecognizer]
-[ADSpeechManager cancelLocalRecognitionIfActive]_block_invoke
-[ADSpeechManager _cleanUpDelegateInfo]
-[ADSpeechManager _tellDelegateSpeechCanceled]
-[ADSpeechManager _tellDelegateSpeechFailedWithError:]
-[ADSpeechManager _tellDelegateSpeechFinishedWithPacketCount:endpointMode:endpointerMetrics:]
-[ADSpeechManager _tellDelegateSpeechShouldPreheatWithRecordingInfo:]
-[ADSpeechManager _tellDelegateSpeechRecognitionUpdateWillBegin]
-[ADSpeechManager _tellDelegateSpeechWillBeginWithTimestamp:isFromFile:]
-[ADSpeechManager _tellDelegateSpeechStartedWithRecordingInfo:]
-[ADSpeechManager _tellDelegateUpdateAudioInfo:]
-[ADSpeechManager _tellDelegateAboutSpeechPackets:atTimestamp:count:]
-[ADSpeechManager _tellDelegateAboutFingerprint:duration:]
-[ADSpeechManager _tellDelegateMusicWasDetected]
-[ADSpeechManager _tellDelegateEndpointWasDelayedForMusic]
-[ADSpeechManager _tellDelegateAboutInputAveragePower:peak:]
-[ADSpeechManager _recordingStoppedWithError:endpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke_2
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]
-[ADSpeechManager localSpeechRecognizer:didRecognizeTokens:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didProcessAudioDuration:]
-[ADSpeechManager localSpeechRecognizer:didRecognizePackage:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
-[ADSpeechManager preheatWithOptions:]_block_invoke
-[ADSpeechManager prepareAudioSystemWithOptions:completion:]
-[ADSpeechManager prepareAudioSystemWithOptions:completion:]_block_invoke
-[ADSpeechManager startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:]
-[ADSpeechManager _startCaptureForMode:options:sessionUUID:]
-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:]_block_invoke
-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke
-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke_2
-[ADSpeechManager _stopSpeechCaptureWithOptions:]
-[ADSpeechManager _stopSpeechCaptureWithOptions:]_block_invoke
-[ADSpeechManager endSession]_block_invoke
-[ADSpeechManager endSessionIfIdle]_block_invoke
-[ADSpeechManager updateSpeechProfilesForReasons:]
address_book
correction_profiles_change
assistant_tool
registered_applications_changed
-[ADSpeechManager updateSpeechProfilesForReasons:]_block_invoke
-[ADSpeechManager updateSpeechProfilesForReasons:]_block_invoke_2
v32@?0@"NSString"8@"NSString"16^B24
-[ADSpeechManager updateSpeechProfilesForReasons:]_block_invoke_3
v24@?0@"NSDictionary"8@"NSError"16
dictationLanguage
T@"NSString",C,N,V_dictationLanguage
dictationOptions
T@"AFDictationOptions",C,N,V_dictationOptions
context
T@,&,N,V_context
isDriving
TB,N,V_isDriving
sessionUUID
T@"NSString",R,C,N,V_sessionUUID
inputAudioPowerUpdater
T@"AFAudioPowerUpdater",R,N,V_inputAudioPowerUpdater
outputAudioPowerUpdater
T@"AFAudioPowerUpdater",R,N,V_outputAudioPowerUpdater
ADSpeechStateInitial
ADSpeechStateRecordingStarted
ADSpeechStateRecording
ADSpeechStateStopping
ADSpeechStateCanceling
ADSyncFlagManagerQueue
sync_flag
-[ADSyncFlagManager _setSyncNeededFlagsForKeys:]
ADShouldCensorSpeechDidChangeNotification
amos://%@
?committed=yes
-[ADTTSMutingObserver _updateAudioRouteOnMainThread]
-[ADTTSMutingObserver _audioRouteChanged:]
-[ADTTSMutingObserver _muteStateChanged:]
-[ADTTSMutingObserver _listenForAudioRouteChanges]
-[ADTTSMutingObserver _stopListeningForAudioRouteChanges]
-[ADTTSMutingObserver _listenForMuteStateChanges]
-[ADTTSMutingObserver _stopListeningForMuteStateChanges]
-[ADTTSMutingObserver _useDeviceSpeakerForTTSPreferenceChanged]
ADShowNetworkActivityIndicatorForApplicationIdentifier
ADHideNetworkActivityIndicatorForApplicationIdentifier
com.apple.assistant.sync_needed
AppleICUForce24HourTime
AppleICUForce12HourTime
%@#%@
com.apple.da
ExperimentGroup
walkabout
Siri Event
StoreDemoMode
com.apple.demo-settings
v24@?0@"NSArray"8@"NSError"16
kern.boottime
ADSystemGetBootTimeInMicroseconds_block_invoke
%@ {identifier = %@, currentIntent = %@, currentUserActivity = %@, userActivitiesIdentifiers = %@}
-[ADExtensionTransaction userActivityWithIdentifier:]
-[ADExtensionTransaction updateWithState:]
-[ADExtensionTransaction _updateCurrentIntent:]
-[ADExtensionTransaction _updateCurrentUserActivityForType:intent:intentResponse:]
-[ADExtensionTransaction _updateCurrentUserActivityForType:intent:intentResponse:]_block_invoke
-[ADExtensionTransaction _addUserActivities:]
currentIntent
T@"INIntent",R,C,N,V_currentIntent
request
T@"INCExtensionRequest",R,N,V_request
currentUserActivity
T@"NSUserActivity",R,C,N,V_currentUserActivity
-[ADAudioSession currentInputRoute]_block_invoke
v24@?0^v8Q16
deviceName
T@"NSString",R,C,N,V_deviceName
T@"NSString",R,C,N,V_uid
TB,R,N,V_isBluetooth
_AudioObjectGetScalarArray
v20@?0I8r^{AudioObjectPropertyAddress=III}12
_AudioDeviceRegisterForChangedNotification
v12@?0I8
_AudioObjectGetIntValue
v16@?0^v8
_AudioObjectGetCFTypeRef
-[ADSpeechRecorder _setAlertsIfNeeded]
dt-begin
dt-confirm
dt-cancel
-[ADSpeechRecorder _updateRecordBufferDuration]
-[ADSpeechRecorder _speechControllerWithError:]
-[ADSpeechRecorder _prepareSpeechControllerWithError:]
since we have no Voice Controller!
-[ADSpeechRecorder _stopRecordingWithReason:]
reason
%d.%d
 Forcing two shot mode to NO
-[ADSpeechRecorder _updateToPostVoiceIfNecessary]
-[ADSpeechRecorder _playAudioAlert:]
-[ADSpeechRecorder _checkAudioLoggingLimits:]
-[ADSpeechRecorder _setupAudioFileWritingForSpeechController:info:]
en-US
yyyy_MM_dd-HHmmss.SSS
%@/PCM-%@-%@.wav
@"NSString"8@?0
-[ADSpeechRecorder _stopRecordingForEndpointReason:]
-[ADSpeechRecorder eagerlyInitializeAudioRecording]
-[ADSpeechRecorder preheat]
-[ADSpeechRecorder recordingInfoForPreheatWithEvent:]
-[ADSpeechRecorder setUseAutomaticEndpointing:]
enabled
-[ADSpeechRecorder prepareForMode:]
-[ADSpeechRecorder startSpeechCaptureWithWillStartHandler:error:]
-[ADSpeechRecorder updateSpeechSynthesisRecord:]
-[ADSpeechRecorder _audioSessionID]
-[ADSpeechRecorder _setActivationInfo:]
-[ADSpeechRecorder _setCurrentDeviceContext]
-[ADSpeechRecorder _setPendingContextIfNecessary]
-[ADSpeechRecorder releaseAudioSession]
notify
suppress (keep others interrupted forever)
-[ADSpeechRecorder setSpeechWasRecognizedForElapsedTime:isFinal:]
-[ADSpeechRecorder setFingerprintWasRecognized]
-[ADSpeechRecorder stopSpeechCaptureForEvent:suppressAlert:]
-[ADSpeechRecorder cancelSpeechCaptureSuppressingAlert:]
-[ADSpeechRecorder forceSuccessAudioAlertOnStop]
-[ADSpeechRecorder _speechRecordingEventListener]_block_invoke
-[ADSpeechRecorder setClientConfiguration:]
-[ADSpeechRecorder playRecordingStartAlert]_block_invoke
-[ADSpeechRecorder _recordingInfoForEvent:audioAlertStyle:includeBTInfo:]
-[ADSpeechRecorder speechControllerDidStartRecording:successfully:error:]
-[ADSpeechRecorder speechControllerDidStartRecording:successfully:error:]_block_invoke
-[ADSpeechRecorder _speechControllerDidStartRecording:successfully:error:]
-[ADSpeechRecorder speechControllerDidStopRecording:forReason:]
-[ADSpeechRecorder speechControllerDidStopRecording:forReason:]_block_invoke
-[ADSpeechRecorder _speechControllerDidStopRecording:forReason:errorCodeOverride:underlyingError:]
AVVoice_RecordStoppedWithError
AVVoice_RecordStopped
v24@?0@"NSFileHandle"8@"NSError"16
-[ADSpeechRecorder _speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:atHostTime:]
-[ADSpeechRecorder speechControllerBeginRecordInterruption:withContext:]
-[ADSpeechRecorder speechControllerEndRecordInterruption:]
-[ADSpeechRecorder speechControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[ADSpeechRecorder speechControllerDidDetectVoiceTriggerTwoShot:atTime:]
-[ADSpeechRecorder speechControllerRequestsOperation:forReason:]
-[ADSpeechRecorder _speechControllerRequestsOperation:forReason:]
-[ADSpeechRecorder endpointer:didDetectStartpointAtTime:]
-[ADSpeechRecorder endpointer:didDetectStartpointAtTime:]_block_invoke
-[ADSpeechRecorder endpointer:didDetectHardEndpointAtTime:withMetrics:]
time
additionalMetrics
@"NSMutableDictionary"8@?0
-[ADSpeechRecorder endpointer:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[ADSpeechRecorder _hardEndpointWasDetectedWithMetrics:atTime:]
-[ADSpeechRecorder _fakeTwoShotWithPromptType:atTime:]
type
timedOut
v32@?0d8d16@"NSError"24
-[ADSpeechRecorder _handleFakeTwoShotPromptTimeoutWithUUID:]
-[ADSpeechRecorder _handleFakeTwoShotPromptCallbackWithUUID:timestamp:duration:error:]
-[ADSpeechRecorder updateEndpointHintForDuration:completion:]
-[ADSpeechRecorder _checkIfLastEndpointHintShouldBeAccepted]
-[ADSpeechRecorder _checkIfLastEndpointHintShouldBeAccepted]_block_invoke_2
-[ADSpeechRecorder _enforceEndpointHint]
-[ADSpeechRecorder acousticFingerprinter:hasFingerprint:duration:]
-[ADSpeechRecorder _startAudioPlaybackRequest:completion:]
-[ADSpeechRecorder _startAudioPlaybackRequest:completion:]_block_invoke
suppressInterruptionEndedNotifications
TB,N,V_suppressInterruptionEndedNotifications
Siri
Dictation
DictationSecureOfflineOnly
FingerprintOnly
-[ADSyncManager _finishSync]
-[ADSyncManager _syncingService:withSyncInfo:receivedChunk:continueBlock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSyncManager.m
Not expecting a sync chunk; already have a continue block
-[ADSyncManager _syncFinishedForService:error:]
-[ADSyncManager _continueSync]
-[ADSyncManager _continueSync]_block_invoke_2
v32@?0@"ADSyncChunkInfo"8@"NSError"16@?<v@?B>24
Already have a sync delegate, is sync still in progress?
-[ADSyncManager prepareSyncWithAnchors:delegate:]
-[ADSyncManager addQueuedAnchors:]
-[ADSyncManager continueSync]
-[ADSyncManager cancelSyncForAnchor:]
-[ADSyncManager reset]
-[ADSyncManager serviceTimedoutForSync:]
_currentAnchor
T@"SASyncAnchor",&,N,S_setCurrentAnchor:,V_currentAnchor
_continueBlock
T@?,C,N,S_setContinueBlock:,V_continueBlock
getAnchorsRequest
T@"SASyncGetAnchors",&,N,V_getAnchorsRequest
isVerifying
TB,N,V_isVerifying
_forceResetOnNextSync
TB,N,S_setForceResetOnNextSync:,V_forceResetOnNextSync
assistant_enabled
daily_sync
requested_by_assistantd
com.apple.assistant.sync_data_changed
aceDictionary
T@"NSDictionary",C,N,V_aceDictionary
oldId
T@"NSString",C,N,V_oldId
-[ADAudioActivationInfo avvcContext]
-[ADAudioActivationInfo startRecordingSettings]
speechEvent
Tq,R,N,V_speechEvent
useBorealisBuffer
TB,R,N,V_useBorealisBuffer
usePrelistening
TB,R,N,V_usePrelistening
Tq,R,N
deviceIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
Td,R,N,V_timestamp
machAbsoluteTime
TQ,R,N,V_machAbsoluteTime
speechCapturingMode
Tq,N,V_speechCapturingMode
events
stream_uid
context_data
context_data_type
date_created
TEXT
INTEGER
BLOB
REAL
events_index_stream_uid
events_index_timestamp
events_index_date_created
com.apple.assistant.analytics-store
-[ADAnalyticsStore purgeWithCompletion:]
-[ADAnalyticsStore purgeWithCompletion:]_block_invoke
-[ADAnalyticsStore resetWithCompletion:]
-[ADAnalyticsStore resetWithCompletion:]_block_invoke
-[ADAnalyticsStore _resetWithError:]
-[ADAnalyticsStore _preparedDatabaseWithError:]
retryCount
events_index_date_inserted
-[ADAnalyticsStore _insertEventRecords:error:]
-[ADAnalyticsStore _deleteEventRecordsBeforeOrEqualToTimestamp:eventStreamUID:error:]
-[ADAnalyticsStore _deleteEventRecordsCreatedBeforeDate:error:]
-[ADAnalyticsStore _fetchEventStreamUIDsWithError:]
-[ADAnalyticsStore _fetchEventRecords:afterTimestamp:eventStreamUID:error:]
-[ADAnalyticsStore _fetchEventRecordsCreatedAfterDate:error:]
T@"NSString",R,C,N,V_path
-[SANPPausePlayback(ADMediaRemote) _ad_performWithReplyHandler:]
-[SANPPausePlayback(ADMediaRemote) _ad_performWithReplyHandler:]_block_invoke
-[SANPStartPlayback(ADMediaRemote) _ad_performWithReplyHandler:]
-[SANPStopPlayback(ADMediaRemote) _ad_performWithReplyHandler:]
-[SANPStopPlayback(ADMediaRemote) _ad_performWithReplyHandler:]_block_invoke
-[SANPGetNowPlayingQueueDetails(ADMediaRemote) _ad_performWithReplyHandler:]
v16@?0@"ADContextManager"8
-[ADMediaRemoteService handleCommand:forDomain:reply:]
ADMediaRemoteSendCommandToEncryptedRoutesWithOptions
ADMediaRemoteSendCommandToEncryptedRoutesWithOptions_block_invoke
ADMediaRemoteSendCommandToEncryptedRoutesWithOptions_block_invoke_2
finished
failed
v16@?0@"NSDictionary"8
ADRouteConnectionsFromEncryptedRouteIDs
ADRouteConnectionsFromEncryptedRouteIDs_block_invoke
Siri-assistantd
ADRouteConnectionsFromEncryptedRouteIDs_block_invoke_2
-[ADCommandCenter(AMOS) _sendAMOSCommand:domain:toBundleWithIdentifier:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]_block_invoke
v28@?0B8@"<SAAceCommand>"12@"NSError"20
-[ADCommandCenter(AMOS) _sendAMOSCommandToService:responseHandler:]_block_invoke
Unexpected response from service
-[ADCommandCenter(AMOS) _amosSADomainObjectRetrieve:completion:]
v20@?0@"<SAServerBoundCommand>"8i16
-[ADCommandCenter(AMOS) _updateObjectFromService:sadIdentifier:completion:]_block_invoke
Error retrieving object from service
Failed to retrieve object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectUpdate:completion:]
-[ADCommandCenter(AMOS) _amosSADomainObjectDelete:completion:]
Failed to receive object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]
Object not found in amos
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]_block_invoke
-[ADCommandCenter(AMOS) _amosSADomainObjectPunchOut:completion:]
No plugin for command
-[ADCommandCenter(AMOS) _handleCommandInAMOS:completion:]
Tried to handle non AMOS command as AMOS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSettingsRequestHandler.m
-[AFSiriRequest(ADSettingsRequestHandler) _ad_handleSettingsRequestWithCompletionHandler:]
Unable to set setting with type "Unknown"
Unable to get setting with type "Unknown"
assistantd
-[ADClientFlowServiceHelper handleCommand:completion:]_block_invoke_2
Watch dog timedout for command %@
-[ADClientFlowServiceHelper openSensitiveURL:]
Client flow service helper
Client Flow Service Queue for %@
-[SACFAbstractClientCommand(ADClientFlowService) _ad_performWithReplyHandler:]_block_invoke_2
-[SABaseCommand(ADClientFlowService) _ad_performWithReplyHandler:]
Client flow service
-[ADClientFlowService handleCommand:forDomain:reply:]
ADSpeechLogQueue
yyyy_MM_dd-HHmmss
-[ADSpeechLog beginNewSpeechLogWithFormat:]_block_invoke
OPUS
%@/%@-%@.%@
-[ADSpeechLog cancelCurrentSpeechLog]_block_invoke
-[ADSpeechLog endSpeechLog]_block_invoke
Speex_NB
8000Hz
+[ADSpeechLog buffersFromSpeechLogAtURL:isNarrowBand:]
-[ADAlarmTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
siri-alarm-internal:
-[SAAlarmAlarmShow(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
v16@?0@"<ADAlarmStoring>"8
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
-[SAAlarmDelete(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
AFAlarmURLForAlarmIdentifier
-[ADCommandCenter(OutputVoice) _outputVoice_setOutputVoice:]
-[ADCommandCenter(OutputVoice) _updateAutoDownloadedVoiceAssetsForOutputVoice]
-[ADSessionRemoteServer retryNakedCommandsIfNeeded]
/ace
-[ADSessionRemoteServer _connectionURL]
-[ADSessionRemoteServer _serverConnection]
SiriCoreSiriConnection
-[ADSessionRemoteServer _startConnectionPreferringWWAN:skipPeer:skipPeerError:skipEdge:]
-[ADSessionRemoteServer siriConnection:willStartWithConnectionType:]
policyId
routeId
delay
connectionType
-[ADSessionRemoteServer siriConnection:didReceiveAceObject:]_block_invoke
-[ADSessionRemoteServer siriConnectionDidClose:]_block_invoke
-[ADSessionRemoteServer _siriConnection:didEncounterError:analysisInfo:]
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
-[ADSessionRemoteServer startRetry]
-[ADSessionRemoteServer resetRetryManager]
v32@?0@"<SiriCoreSessionObject>"8Q16^B24
-[ADSessionRemoteServer _informDelegateOfError:]
-[ADSessionRemoteServer _cachedValidationData]
-[ADSessionRemoteServer _setCachedValidationData:withDuration:]
9E5BD479-1D3E-400D-ADF7-ECB0A7DBFE06
-[ADSessionRemoteServer _reallyRetryPreferringWWAN:skipPeer:skipPeerError:skipEdge:]
newId
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]
-[ADSessionRemoteServer _continueSessionInitWithValidationData:]
-[ADSessionRemoteServer _continueAuthWithCertificateData:]_block_invoke
-[ADSessionRemoteServer _continueAuthentication]
-[ADSessionRemoteServer refreshValidationData]
-[ADSessionRemoteServer _startSession]
-[ADSessionRemoteServer _connectionOpened]
-[ADSessionRemoteServer _eagerAuthDidComplete]
-[ADSessionRemoteServer _saSessionValidationFailed:]
-[ADSessionRemoteServer _saGetSessionCertificateResponse:]
-[ADSessionRemoteServer _saCreateSessionInfoResponse:]
-[ADSessionRemoteServer _saAssistantCreated:]
-[ADSessionRemoteServer _saAssistantLoaded:]
v16@?0@"SiriCoreAceConnectionAnalysisInfo"8
-[ADSessionRemoteServer _saAssistantDestroyed:]
-[ADSessionRemoteServer _saAssistantNotFound:]
-[ADSessionRemoteServer _saAssistantNotReady:]
Assistant not ready
-[ADSessionRemoteServer _assistantFailedForReason:error:]
-[ADSessionRemoteServer _assistantFailedForReason:error:]_block_invoke
-[ADSessionRemoteServer _saCommandFailed:]
-[ADSessionRemoteServer _sendServerCommand:]
-[ADSessionRemoteServer _sendServerCommand:]_block_invoke
-[ADSessionRemoteServer _sendGetSessionCertificateData]
-[ADSessionRemoteServer _sendCreateSessionInfoRequestWithData:]
-[ADSessionRemoteServer _sendLoadAssistantWithAccount:validationData:]
v16@?0@"ADSessionBarrier"8
-[ADSessionRemoteServer networkManagerNonWWANDidBecomeAvailable:]_block_invoke
-[ADSessionRemoteServer networkManagerLostNonWWANConnectivity:]_block_invoke
-[ADSessionRemoteServer _recheckForWiFiTransition]
-[ADSessionRemoteServer _cancelConnectionPolicyBlacklisting]
-[ADSessionRemoteServer _scheduleConnectionPolicyBlacklisting]
-[ADSessionRemoteServer _scheduleConnectionPolicyBlacklisting]_block_invoke
-[ADSessionRemoteServer _createAssistant]
-[ADSessionRemoteServer _probeSessionIfIdle]
sessionState
underlyingErrorDomain
underlyingErrorCode
isConnectionPolicySuspended
Unavailable
Good
Unknown
CellularInstant
CellularHistorical
WiFiInstant
WiFiHistorical
v16@?0@"SiriCoreNetworkQualityReport"8
v16@?0@"SiriCoreConnectionMetrics"8
Paired Simulator Device
Paired Simulator
Paired Simulator Product Version
ADMuteModeDidChangeNotification
ADSystemMuteModeObserver
-[ADSystemMuteModeObserver _registerForRingerMuteStateNotifications]
com.apple.springboard.ringerstate
T@"NSString",C,N,V_pre
post
T@"NSString",C,N,V_post
validity
T@"NSString",C,N,V_validity
toAdd
T@"NSArray",&,N,V_toAdd
toRemove
T@"NSArray",&,N,V_toRemove
ABAssistantManager
-[ADAddressBookManager _abAssistantManager]
v24@?0@"NSArray"8@"NSArray"16
System/Library/Assistant/Plugins/AddressBook.assistantBundle
_LoadAddressBookBundle_block_invoke
ADAlarm.alarmID
ADAlarm.isFiring
ADAlarm.firedDate
ADAlarm.dismissedDate
ADAlarm.lastModifiedDate
ADAlarm.aceObject
%@ {%@}
alarmID = %@
isFiring = %@
firedDate = %@
dismissedDate = %@
lastModifiedDate = %@
aceObject = %@
alarmID
T@"NSUUID",R,C,N,V_alarmID
isFiring
TB,R,N,V_isFiring
firedDate
T@"NSDate",R,C,N,V_firedDate
dismissedDate
T@"NSDate",R,C,N,V_dismissedDate
lastModifiedDate
T@"NSDate",R,C,N,V_lastModifiedDate
aceObject
T@"SAAlarmObject",R,C,N,V_aceObject
last_known_stream_id
hasLastKnownStreamId
lastKnownStreamId
T@"NSString",&,N,V_lastKnownStreamId
-[AFSiriRequest(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequestWithCompletionHandler:]
-[SABaseClientBoundCommand(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequest:completionHandler:]
com.apple.NanoCalendar
-[ADAceDomainSignalRequestHandler handleSiriRequest:deliveryHandler:completionHandler:]
T@"<ADAcousticIDHelperDelegate>",W,N,V_delegate
com.apple.siri.SynapseSyncPlugin
BTResult
ADMobileBluetoothManager
-[ADMobileBluetoothManager _attachToSession]
-[ADMobileBluetoothManager _sessionAttached:result:]
-[ADMobileBluetoothManager _sessionDetached:]
-[ADMobileBluetoothManager _sessionTerminated:]
v16@?0^{BTDeviceImpl=}8
-[ADMobileBluetoothManager _getBTDeviceWithAddress:completion:]_block_invoke
-[ADMobileBluetoothDevice _getDeviceId]
address
TI,R,N
AcePassthroughSiriRequestClientBoundCommand
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADAcePassthroughSiriRequest.m
replyCommand
navStatus
T@"SANavStatus",&,N,V_navStatus
localSearchGetNavigationStatusCompleted
T@"SALocalSearchGetNavigationStatusCompleted",&,N,V_localSearchGetNavigationStatusCompleted
queueState
T@"SAMPQueueState",&,N,V_queueState
appSubscriptions
T@"SAAppSubscriptions",&,N,V_appSubscriptions
siriKitSettings
T@"SASiriKitSetting",&,N,V_siriKitSettings
errorIndicatorStatus
T@"SAErrorIndicatorStatus",&,N,V_errorIndicatorStatus
currentHome
T@"SAHACurrentHome",&,N,V_currentHome
ClientConnection
-[ADClientConnection initWithXPCConnection:]
-[ADClientConnection dealloc]
-[ADClientConnection adRequestWillReceiveCommand:]_block_invoke
v16@?0@"AceObject<SAAceCommand>"8
-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke
-[ADClientConnection _handleRequestCompletedWithUUID:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke_2
-[ADClientConnection adRequestEncounteredIntermediateError:]
-[ADClientConnection adStartUIRequestWithText:completion:]_block_invoke
-[ADClientConnection adRequestRequestedOpenApplicationWithBundleID:URL:completion:]_block_invoke
-[ADClientConnection adRequestRequestedOpenURL:completion:]_block_invoke
-[ADClientConnection adGetBulletinContext:]_block_invoke
-[ADClientConnection adTextToSpeechIsMuted]
-[ADClientConnection adWantsToCacheImage:]_block_invoke
-[ADClientConnection _registerForRingerStateNotification]
-[ADClientConnection _computeShouldSpeak]
-[ADClientConnection _updateShouldSpeak]
ClientConnection speechRecordingDidBegin
speechRecordingDidEnd
ClientConnection speechRecordingDidCancel
ClientConnection speechRecordingDidFail
-[ADClientConnection adSpeechRecordingDidFail:sessionUUID:]
-[ADClientConnection adSpeechRecognitionDidFail:sessionUUID:]
-[ADClientConnection adSpeechRecordingPerformTwoShotPromptWithType:sessionUUID:completion:]_block_invoke
-[ADClientConnection willPresentUIWithReply:]
com.apple.assistant.client-connection
-[ADClientConnection didDismissUI]
ClientConnection endSession
-[ADClientConnection _setRequestCompletion:]
ClientConnection startRecordingForPendingSpeechRequest
-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:completion:]_block_invoke_2
v16@?0@?<v@?d>8
-[ADClientConnection continuePendingSpeechRequestWithId:fromTimestamp:]
ClientConnection cancelRequest
v16@?0@"AFAudioState"8
v16@?0@"NSSet"8
Large Data Returned to sender
-[ADClientConnection _performCommandDictionary:forBundleIdentifier:reply:]_block_invoke
SA%@
-[ADClientConnection _performTaskCommandDictionary:forBundleIdentifier:reply:]_block_invoke
-[ADClientConnection _broadcastCommandDictionary:]
-[ADClientConnection _fetchAppContextForApplicationInfo:reply:]_block_invoke
-[ADClientConnection listener:shouldAcceptNewConnection:]
-[ADClientConnection _continuePendingSpeechRequestFromTimestamp:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestCommandGroup:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestCommandGroup:]_block_invoke
ADRegisterSyncNowActivity_block_invoke
com.apple.siri.xpc_activity.sync.now
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?>16
ADRegisterSyncNowActivity
_RegisterXPCActivity_block_invoke
_RegisterXPCActivity_block_invoke_2
com.apple.siri.xpc_activity.sync.daily
_RegisterPeerFetchActivity_block_invoke
com.apple.siri.xpc_activity.peer_fetch
_BackoffFromShortInterval
com.apple.siri.xpc_activity.refresh_validation
_RefreshValidationWithCompletion
_RegisterDestroyActivity_block_invoke_2
com.apple.siri.xpc_activity.destroy
com.apple.siri.xpc_activity.service_maintenance
_RegisterDESEvaluationActivity_block_invoke_2
_RegisterDESEvaluationActivity_block_invoke_3
com.apple.siri.xpc_activity.des_evaluation
com.apple.siri.xpc_activity.heartbeat
com.apple.siri.xpc_activity.metrics-sender
com.apple.siri.xpc_activity.sync.verification.daily
_ADValidationRefreshCriteriaForInterval
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSpeechCompressor.m
Already started compressor
AudioConverterNew failed: %x
AudioConverterSetProperty/kAudioConverterEncodeBitRate failed: %x
-[ADSpeechCompressor addAudioSampleData:]_block_invoke
Too many buffers
Cannot produce ASPD for PCM
-[ADSpeechCompressor addAudioSampleData:]
com.apple.assistant.audio-state-manager
-[ADAudioStateManager fetchAudioStateWithCompletion:]_block_invoke
-[ADAudioStateManager _mediaServicesWereLost:]
-[ADAudioStateManager _mediaServicesWereReset:]
-[ADAudioStateManager _fetchAudioSessionID]
-[ADAudioStateManager _updateAudioSessionID:]
-[ADAudioStateManager _didChangeAudioStateFrom:to:]
listener
T@"<ADAudioStateListening>",R,W,N,V_listener
AcePassthroughSiriResponseReplyCommand
com.apple.assistant.offline-metrics
SiriOfflineMetrics.plist
offlineSAMetrics.plist
SiriMetrics
-[ADOfflineMetricsManager insertMetrics:]
-[ADOfflineMetricsManager deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsManager fetchNextMetricsUsingBlock:]
v24@?0@"SAMetrics"8@"NSString"16
-[ADOfflineMetricsManager deleteAllMetrics]
%@ Recognition Text: "%@"
%@ Partial Recognition Text: "%@"
%@ key: %@
-[SASUpdateAudioInfo(ADSAExtensions) ad_updateWithRecordingInfo:speechRequestOptions:]
[%@ count:%tu total:%zd
  aceId: %@
  refId: %@]
%@ errorCode: %zd reason: %@
ad_parentRequest
T@"SABaseCommand",&,N,Sad_setParentRequest:
com.apple.siri.ManagedObjectService.
x-apple-sms:guid=
-[ADContextManager init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADContextManager.m
0 && "Please use the designated initializer."
BackgroundContextQueue
-[ADContextManager keepReportingNowPlayingTimingEventsHeuristically]
com.apple.Maps
ContextCollation
-[ADContextManager getAppContextForDeviceState:applicationInfos:completion:]_block_invoke_3
v24@?0@"SAUserActivity"8@"NSString"16
-[ADContextManager _getCurrentUserActivityOnQueue:completion:]_block_invoke
-[ADContextManager _getCurrentUserActivityOnQueue:completion:]_block_invoke_2
v24@?0@"NSUserActivity"8@"NSError"16
v32@?0@"NSUUID"8@"NSString"16@"NSError"24
-[ADContextManager getAlertContextWithBulletinsFetcher:clockSnapshotFetcher:completion:]_block_invoke_2
com.apple.reminders
x-apple-siri-notification://%@
v32@?0@"NSUUID"8@"ADAlarm"16^B24
v32@?0@"NSUUID"8@"ADTimer"16^B24
v16@?0@"ADClockSnapshot"8
-[ADContextManager markBulletinAsAcknolwedgedForDomainObject:]_block_invoke
-[ADContextManager getDomainObjectFromMessageContext:completion:]
-[ADContextManager getDomainObjectFromMessageContext:completion:]_block_invoke
v24@?0@"AceObject"8@"NSError"16
-[ADContextManager _fetchNowPlayingQueueWithLookahead:lookbehind:completion:]
-[ADContextManager _fetchNowPlayingQueueWithLookahead:lookbehind:completion:]_block_invoke
v24@?0^v8^{__CFError=}16
-[ADContextManager _addNowPlayingItemInfoToQueue:group:]
-[ADContextManager _addNowPlayingItemInfoToQueue:group:]_block_invoke
-[ADContextManager _addPlaybackStateToQueue:group:]
-[ADContextManager _addPlaybackStateToQueue:group:]_block_invoke
-[ADContextManager _updateNowPlayingInfoWithCompletion:]_block_invoke
v16@?0^{__CFString=}8
-[ADContextManager _notePossiblePlayPausedStateChange:]
-[ADContextManager _updateBackgroundContextIfNowPlayingInfoChanged:]
T@"<ADContextManagerDelegate>",W,N,V_delegate
-[SAMPQueueState(SiriMediaRemoteHelpers) _deviceIdFromNowPlayingInfo:]
store
external
device
-[SAMPQueueState(SiriMediaRemoteHelpers) _ad_validatedNowPlayingInfo:schema:]_block_invoke
v32@?0@"NSString"8#16^B24
-[SAMPQueueState(SiriMediaRemoteHelpers) _ad_listeningToContainerFromNowPlayingInfo:]
v32@?0@8@16^B24
-[SAMPQueueState(SiriMediaRemoteHelpers) _ad_setNowPlayingInfo:]
-[SAMPQueueState(SiriMediaRemoteHelpers) _ad_validateAndFinalize]
ADIMSPIQueue
ADAlertContextQueue
_ADPersonFromHandle
%@%lld
_LogNowPlayingInfo
kMRPlaybackStateUnknown
kMRPlaybackStatePlaying
kMRPlaybackStatePaused
kMRPlaybackStateStopped
kMRPlaybackStateInterrupted
<Unknown MRPlaybackState:%u>
x-sampmeditem
_AddSanitizedKeyAndValueToContainer
-[ADRetryManager beginRetryableRequest:]
-[ADRetryManager endRetryableRequestForCommand:]
-[ADRetryManager endRetryableRequestForCommandAceId:refId:]
-[ADRetryManager setLastReceivedCommand:]
-[ADRetryManager _objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:]
for full request
restart request
-[ADRetryManager objectsToRetry]
latestMappedRequestId
T@"NSString",C,N,V_latestMappedRequestId
No matching event was found
-[AFSiriRequest(ADShowNextEventRequestHandler) _ad_handleShowNextEventRequestWithCompletionHandler:]
v24@?0@"AFSiriResponse"8@"NSError"16
com.apple.mobilecal
B32@?0@"EKEvent"8Q16^B24
uuid
T@"NSUUID",R,N,V_uuid
timedout
TB,R,N,V_timedout
syncChunkHandler
T@?,C,N,V_syncChunkHandler
-[ADCommandCenter(Metrics) _reallyCommitOrSaveMetrics:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:completion:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _metrics_isAssistantOrDictationEnabled]
-[ADCommandCenter(Metrics) _metrics_isSystemIdle]
ModelInfo
unavailable
-[ADCommandCenter(Metrics) _metrics_markLocalEagerRecognitionCandidate:]
-[ADCommandCenter(Metrics) _metrics_gatherAndSendSuccessMetrics]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordRequestStatisticsMetricsIncludingNearTrigger:]
-[ADCommandCenter(Metrics) _metrics_recordFailureMetricsForError:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordCancellationMetrics]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordUIMetrics:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordRequestMetric:withTimestamp:]
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]_block_invoke
v16@?0@"SAMetrics"8
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:prioritizedEventStreamTimestamp:completion:]_block_invoke_6
EnabledServices
assistantIsEnabled
TRUE
FALSE
assistantOnLockscreen
dictationIsEnabled
recordedDate
accountID
SpotlightEngagementFeedback
Selected
LostFocus
Closed
Cleared
engagementInfo
-[ADCommandCenter(Metrics) _metrics_sendEngagementFeedback:voiceQueryIdentifier:]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetricsIfNeeded]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetrics]
snapshotEvent
ConfidenceMean
ConfidenceMax
ConfidenceMin
BestTranscription
-[ADAcePassthroughResponseTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
ADSiriConnectionRemoteErrorDomain
ADSiriConnectionRemote
-[ADSiriConnectionRemote init]
-[ADSiriConnectionRemote _establishPeerConnection]
-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke
-[ADSiriConnectionRemote _tryToReadPeerStreamHeaderFromData:needsReconnect:]
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
X-Companion-Type
X-Companion-Build
-[ADSiriConnectionRemote _fallbackWithSafetyNet]
-[ADSiriConnectionRemote _restartConnectionProviders]
-[ADSiriConnectionRemote _peerConnectionFailure]
-[ADSiriConnectionRemote _peerConnectionDidEnd]
-[ADSiriConnectionRemote peerStreamConnection:failedWithError:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]_block_invoke
establishing
have active
-[ADSiriConnectionRemote peerStreamConnection:requestMetrics:]_block_invoke
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSiriConnectionRemote.m
Programming error: network stream provider should support initial payload.
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke_2
-[ADSiriConnectionRemote _didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:]
-[ADSiriConnectionRemote _closeNetworkConnection]
-[ADSiriConnectionRemote _networkConnectionFailure]
-[ADSiriConnectionRemote _networkConnectionDidEnd]
-[ADSiriConnectionRemote _setupStaleNetworkTimerForProvider:]_block_invoke
-[ADSiriConnectionRemote connectionProvider:receivedError:]
-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke
-[ADSiriConnectionRemote _waitForPeerData]_block_invoke
v24@?0@"NSObject<OS_dispatch_data>"8@"NSError"16
-[ADSiriConnectionRemote _peerConnectionReceivedData:]
-[ADSiriConnectionRemote _peerReadStreamErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToPeer:]_block_invoke
-[ADSiriConnectionRemote _networkConnectionReceivedData:]
-[ADSiriConnectionRemote _networkConnectionDidOpen]
-[ADSiriConnectionRemote _networkConnectionErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToNetwork:]_block_invoke
-[ADSiriConnectionRemote _unregisterForSleepNotification]
-[ADSpeechPlaybackSimulator startPlaybackWithURL:narrowBand:dictation:completion:]
offlineIdentifier
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke_2
v20@?0i8@"NSError"12
Peer
com.apple.siri.nilRequestId
-[ADResultObjectCache _addObjects:forRequestId:sessionRequestId:]
-[ADResultObjectCache commandsForReply:toCommand:missingReferences:]
_mutableResolvedIds
T@"NSMutableSet",&,N,V_mutableResolvedIds
hasBeenFulfilled
TB,N,V_hasBeenFulfilled
requestId
T@"NSString",R,C,N,V_requestId
missingReferences
T@"NSArray",R,N,V_missingReferences
fulfillmentBlock
T@?,C,N,V_fulfillmentBlock
resolvedReferences
T@"NSSet",R,N
Invalid store type
Storage could not be initialized
Unhandled %@
-[ADKnowledgeService handleCommand:forDomain:reply:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]_block_invoke
v32@?0@"NSString"8Q16^B24
v24@?0@"NSError"8@"NSArray"16
-[ADKnowledgeService handleSetValuesForKeys:completion:]
entry with no key %@
-[ADKnowledgeService handleDeleteValueForKey:completion:]
-[ADKnowledgeService handleDeleteValueForKey:completion:]_block_invoke
-[ADKnowledgeService handleGetLinkedData:completion:]
-[ADKnowledgeService handleGetLinkedData:completion:]_block_invoke
-[ADKnowledgeService handleSetLinkedData:completion:]
-[ADKnowledgeService handleSetLinkedData:completion:]_block_invoke
CKKnowledgeStore
/System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
-[ADDisplayLayoutMonitorObserver layoutMonitor:didUpdateDisplayLayout:withContext:]
springBoardElement
TB,R,N,GisSpringBoardElement
layoutRole
-[STGenericIntentRequest(Metrics) _ad_finalMetricsContextWithResponse:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADGenericIntentService.m
[request isKindOfClass:[STGenericIntentRequest class]]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]_block_invoke
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
unspecified
requestBegin
requestEnd
postSpeechCapture
-[ADAuthenticator _getSessionRequestForCertificate:completion:]_block_invoke
-[ADAuthenticator _signData:withSessionInfo:signedData:]
-[ADAuthenticator _setNACContext:]
-[ADAuthenticator prepareWithCertificateData:completion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADAuthenticator.m
Shouldn't already have an NACContext
v28@?0i8^{NACContextOpaque_=}12@"NSData"20
Must have session info to get signed data
_requestData
T@"NSData",&,N,S_setRequestData:,V_requestData
_sessionInfo
T@"NSData",&,N,S_setSessionInfo:,V_sessionInfo
<%@: %p %@>
-[ADCallObserver startObservingCallStateWithDelegate:]
-[ADCallObserver startObservingCallStateWithDelegate:]_block_invoke
-[ADCallObserver stopObservingCallStateWithCompletion:]
T@"<ADDisplayScaleContextCollectorDelegate>",W,N,V_delegate
ADPeerLocationPolicy
T@"<ADPeerLocationPolicyDelegate>",W,N,V_delegate
allowedTimelimit
Td,N,V_allowedTimelimit
com.apple.mobileslideshow
-[SANodeIntent(ADGenericIntentRequestTransformer) ad_filteredDictionaryWithAppID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADGenericIntentRequestTransformer.m
[aceCommand isKindOfClass:[SAIntentGroupSupportedIntentResponse class]]
ADExtensionTransactionStateTypeUnknown
ADExtensionTransactionStateTypeBeforeSlotResolution
ADExtensionTransactionStateTypeConfirmIntentInProgress
ADExtensionTransactionStateTypeConfirmIntentCompleted
ADExtensionTransactionStateTypeHandleIntentInProgress
ADExtensionTransactionStateTypeHandleIntentCompleted
%@ {type = %zd (%@), intent = %@, intentResponse = %@, userActivities = %@}
Tq,R,N,V_type
intent
T@"INIntent",R,C,N,V_intent
intentResponse
T@"INIntentResponse",R,C,N,V_intentResponse
userActivities
T@"NSSet",R,C,N,V_userActivities
com.apple.assistant.clock-service
-[ADClockService fetchCurrentSnapshotWithCompletion:]
-[ADClockService fetchCurrentSnapshotWithCompletion:]_block_invoke_2
-[ADClockService fetchSnapshotAtSystemUptime:completion:]
-[ADClockService fetchSnapshotAtSystemUptime:completion:]_block_invoke_2
-[ADClockService dismissWithOptions:completion:]
-[ADClockService dismissWithOptions:completion:]_block_invoke_2
-[ADClockService invalidate]
-[ADClockService _fetchCurrentSnapshotWithCompletion:]
-[ADClockService _fetchSnapshotAtSystemUptime:completion:]
v32@?0@"ADClockSnapshot"8Q16^B24
-[ADClockService _dismissWithOptions:completion:]
-[ADClockService _dismissWithOptions:completion:]_block_invoke
-[ADClockService _dismissWithOptions:completion:]_block_invoke_2
-[ADClockService _beginUpdate]
-[ADClockService _endUpdate]
-[ADClockService _commitSnapshotForUpdatesAtSystemUptime:modificationDate:]
systemUptime
-[ADClockService _evictOutOfDateSnapshots]
-[ADClockService _setUpAlarms]
-[ADClockService _tearDownAlarms]
-[ADClockService _fetchAlarmsWithCompletion:]
-[ADClockService handleFetchedAlarms:completion:]
-[ADClockService handleFetchAlarmsFailureWithError:completion:]
-[ADClockService _dismissAlarmWithID:completion:]
-[ADClockService handleDismissedAlarmWithID:completion:]
-[ADClockService handleDismissAlarmFailureWithID:error:completion:]
-[ADClockService _addOrUpdateAlarms:]
-[ADClockService _removeAlarmsWithIDs:]
-[ADClockService _removeAllAlarms]
-[ADClockService _setUpTimers]
-[ADClockService _tearDownTimers]
-[ADClockService _fetchTimersWithCompletion:]
-[ADClockService handleFetchedTimers:completion:]
-[ADClockService handleFetchTimersFailureWithError:completion:]
-[ADClockService _dismissTimerWithID:completion:]
-[ADClockService handleDismissedTimerWithID:completion:]
-[ADClockService handleDismissTimerFailureWithID:error:completion:]
-[ADClockService _addOrUpdateTimers:]
-[ADClockService _removeTimersWithIDs:]
-[ADClockService _removeAllTimers]
-[ADClockService alarmsAdded:]
-[ADClockService alarmsUpdated:]
-[ADClockService alarmsRemoved:]
-[ADClockService alarmFired:]
-[ADClockService firingAlarmDismissed:]
-[ADClockService stateResetForAlarms:]
-[ADClockService timersAdded:]
-[ADClockService timersUpdated:]
-[ADClockService timersRemoved:]
-[ADClockService timerFired:]
-[ADClockService firingTimerDismissed:]
-[ADClockService stateResetForTimers:]
com.apple.siri.TimerStore
com.apple.siri.TaskServiceErrorDomain
SiriTaskService-%@
SiriTaskService-
-[ADSiriTaskService handleCommand:forDomain:reply:]
-[ADSiriTaskService handleCommand:forDomain:reply:]_block_invoke_2
-[ADSiriTaskService handleCommand:forDomain:reply:]_block_invoke_4
v16@?0@"AFSiriRequest"8
com.apple.assistant.analytics.service
SiriAnalytics.db
-[ADAnalyticsService beginEventsGrouping]
-[ADAnalyticsService endEventsGrouping]
-[ADAnalyticsService suspendEventsStaging]
-[ADAnalyticsService resumeEventsStaging]
-[ADAnalyticsService stageEvents:completion:]_block_invoke_2
-[ADAnalyticsService flushWithCompletion:]
-[ADAnalyticsService flushWithCompletion:]_block_invoke_2
-[ADAnalyticsService flushWithCompletion:]_block_invoke_3
-[ADAnalyticsService flushWithCompletion:]_block_invoke
-[ADAnalyticsService _processStagedEvents]
-[ADAnalyticsService _processStagedEvents]_block_invoke
-[ADAnalyticsService _beginEventsGrouping]
-[ADAnalyticsService _endEventsGrouping]
-[ADAnalyticsService _suspendEventsStaging]
-[ADAnalyticsService _resumeEventsStaging]
-[ADAnalyticsService _startHouseKeepingTimer]
-[ADAnalyticsService _stopHouseKeepingTimer]
-[ADAnalyticsService _houseKeeperArrived]
currentEventStreamUID
T@"NSString",R,C,N
_ADAnalyticsServiceCreateStreamUID
T@"NSString",C,N,VaceId
ADBuddyStateDidChangeNotification
Buddy Monitor Queue
-[ADBuddyMonitor init]
complete
running
-[ADBuddyMonitor _updateBuddyState]_block_invoke
-[ADAddressBook init]
com.apple.contact.people
B24@?0@"ADDictationSession"8^B16
v32@?0@"ADDictationSession"8Q16^B24
Location
-[ADPushContextReceiver sendContext:]
-[ADNotifyAndPushContextCollector _getContextForAppInfo:completion:]
Getting
-[ADNotifyAndPushContextCollector _invokeAllCompletionsWithError]
ADPeerStreamConnectionErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADPeerStreamConnection.m
ADPeerStreamConnection
ADPeerStreamConnectionFactory
-[ADSharedPeerStreamConnection _wakeUpRemoteForStreamIdentifier:]
-[ADSharedPeerStreamConnection _wakeUpMessageFailedWithError:]
-[ADSharedPeerStreamConnection _initiateOpmitisticEagerStreamFetchRetry]
-[ADSharedPeerStreamConnection _initiateOpmitisticEagerStreamFetchRetry]_block_invoke
-[ADSharedPeerStreamConnection getSocketForConnection:completion:]_block_invoke
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]_block_invoke
-[ADSharedPeerStreamConnection _invokeSocketCompletionWithCurrentSocketOrError:]
-[ADSharedPeerStreamConnection closeForConnection:]_block_invoke
-[ADSharedPeerStreamConnection _close]
-[ADSharedPeerStreamConnection getRemoteMetrics:]_block_invoke
-[ADSharedPeerStreamConnection getRemoteMetrics:]_block_invoke_2
-[ADSharedPeerStreamConnection _requestStreamEstablishment]
-[ADSharedPeerStreamConnection _setPreferBTClassic:]
has_device
nearby
connected
cloud_connected
last_nearby_status_change
preferring_bt_classic
time_since
success
last_ids_message_info
-[ADSharedPeerStreamConnection _updatePairedDeviceInfo]
-[ADSharedPeerStreamConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADSharedPeerStreamConnection _handleGetMetricsMessage:context:]_block_invoke
-[ADSharedPeerStreamConnection _handleReestablishMessage:context:]
-[ADSharedPeerStreamConnection _handleResponseProtobuf:forIdentifier:]
-[ADSharedPeerStreamConnection service:account:identifier:didSendWithSuccess:error:context:]
average_local_RTT
local_message_state
device_blacked_out
-[ADSharedPeerStreamConnection _establishEagerStreamPair]
-[ADSharedPeerStreamConnection service:nearbyDevicesChanged:]
-[ADSharedPeerStreamConnection service:devicesChanged:]
-[ADPeerStreamConnection getSocket:]_block_invoke
v28@?0@"IDSDeviceConnection"8i16@"NSError"20
-[ADPeerStreamConnection getLocalMetrics:]
-[PBCodable(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyWakeUpRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyGetMetricsRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyReestablishRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
IDSLocalMessageStateOthers
IDSLocalMessageStateWaitDequeue
IDSLocalMessageStateWaitAck
IDSLocalMessageStateAcked
siri_enabled
speech_id
language_code
assistant_id
activity_continuation_allowed
dictation_enabled
shared_id
previous_langauge_code
previous_output_voice
output_voice
cloud_sync_enabled
should_censor_speech
hasSiriEnabled
hasSpeechId
T@"NSString",&,N,V_speechId
hasLanguageCode
T@"NSString",&,N,V_languageCode
hasAssistantId
T@"NSString",&,N,V_assistantId
hasHostname
T@"NSString",&,N,V_hostname
hasActivityContinuationAllowed
activityContinuationAllowed
TB,N,V_activityContinuationAllowed
hasDictationEnabled
hasSharedId
sharedId
T@"NSString",&,N,V_sharedId
hasPreviousLangaugeCode
previousLangaugeCode
T@"NSString",&,N,V_previousLangaugeCode
hasPreviousOutputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_previousOutputVoice
hasOutputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_outputVoice
hasCloudSyncEnabled
hasShouldCensorSpeech
ADLocationRestrictionDidChangeNotification
ADLocationManager
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]
v32@?0{?=dd}8d24
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]_block_invoke
-[ADLocationManager _stopMonitoringLocation]
-[ADLocationManager _cancelLocationTimer]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]_block_invoke
-[ADLocationManager _startMonitoringLocationForGetRequestOrigin:completion:]
-[ADLocationManager _shouldSendLocationUpdate:fromLocation:forCommand:]
-[ADLocationManager _requestLocationWithBestAccuracy]
-[ADLocationManager _requestLocationWithBestAccuracy]_block_invoke
-[ADLocationManager _requestLocationForGetRequestOrigin:completion:]
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]
-[ADLocationManager peerLocationConnectionSuggestsClearingCachedLocation:]
-[ADLocationManager locationManager:didUpdateLocations:]
-[ADLocationManager locationManager:didFailWithError:]
-[ADLocationManager locationManager:didChangeAuthorizationStatus:]_block_invoke
-[ADLocationManager updateLocationForCommand:completion:]_block_invoke
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]_block_invoke
Assistant Daemon requires location to handle Siri & Dictation requests
-[ADLocationManager releaseLocationInUseAssertionForReason:]
%s: over-releasing location assertion due to %@
-[ADLocationManager releaseLocationInUseAssertionForReason:]_block_invoke
T@"<ADLocationManagerDelegate>",W,N,V_delegate
needsToSendLocation
TB,N,V_needsToSendLocation
ADSyncFinishedNotification
ADSyncVerificationFinishedNotification
ClientSideInitiatedSyncVerification
-[ADCommandCenter(Sync) _allAnchorsFromRequest:andResponse:]
-[ADCommandCenter(Sync) _handleValidatedSyncGetAnchorsResponse:]
-[ADCommandCenter(Sync) _appMetaDataListFromVocabSources:appIdentifyingInfoList:]
ADCommandCenterSyncAppSourcesFetching-%@
-[ADCommandCenter(Sync) _fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:]_block_invoke_2
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]
SyncAnchorsQueue
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]_block_invoke
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]_block_invoke_2
-[ADCommandCenter(Sync) _sendSyncFinishedAndReferenceCurrentSyncPromise:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]_block_invoke_4
-[ADCommandCenter(Sync) _saSyncGetAnchorsResponse:completion:]
-[ADCommandCenter(Sync) _saSyncChunk:completion:]
-[ADCommandCenter(Sync) _saSyncChunkDenied:completion:]
-[ADCommandCenter(Sync) _saSyncChunkAccepted:completion:]
-[ADCommandCenter(Sync) _saSyncFinished:completion:]
v16@?0@"SASyncDeepSyncVerificationResult"8
-[ADCommandCenter(Sync) _saSyncClientVerify:completion:]
-[ADCommandCenter(Sync) _saSyncServerVerifyResponse:completion:]
-[ADCommandCenter(Sync) _saSyncSetDeepSyncVerificationNeeded:completion:]
-[ADCommandCenter(Sync) _prepareAndStartSyncVerification]
-[ADCommandCenter(Sync) _finishVerificationWithKeys:]
Safety-net end-of-session sync
-[ADCommandCenter(Sync) _sync_syncIfNeeded]
-[ADCommandCenter(Sync) _sync_assistantLoadedSyncRequest:]
requested_by_server
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]_block_invoke
v24@?0@"NSMutableArray"8@"NSMutableArray"16
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]
-[ADCommandCenter(Sync) _sync_startDeepSyncVerification]
-[ADCommandCenter(Sync) _sync_startDeepSyncVerificationForKeys:]
System
-[SAStructuredDictationItem(StructuredDictation) ad_transcriptionResults]
Events
openTime
firstByteTime
meanPing
provider
packetsSent
bytesSent
bytesRetransmitted
bytesUnacked
packetsReceived
bytesReceived
duplicateBytesReceived
outOfOrderBytesReceived
sendBandwidth
primarySubflowInterfaceName
subflowSwitchCount
v32@?0@"NSString"8@"NSNumber"16^B24
ConnectionMethod
ConnectionFallbackFrom
ConnectionEdgeId
ConnectionEdgeType
NSPConnectionFallbackReason
TuscanyConnectionDelay
TuscanyFirstTxByteDelay
CarrierName
SignalStrengthBars
RSSI
WiFiPhyMode
WiFiChannelInfo
%@.%@.%@
InterfaceNetworkType
Symptoms
voiceTriggerInfo
_ADAnalyticsMetricsCreateTimingsAndEventInformationDictionaries
%@.%tu
SystemBootTime
StreamIdentifier
_ADAnalyticsMetricsGetEventInformationValue
object
T@,R,N,V_object
previousItem
T@"ADLinkedListItem",&,N,V_previousItem
nextItem
T@"ADLinkedListItem",&,N,V_nextItem
fanId
TQ,N,V_fanId
currentSpeed
Tq,N,V_currentSpeed
targetSpeed
Tq,N,V_targetSpeed
currentToken
T@"NSUUID",R,C,N,V_currentToken
speechRequestOptions
T@"AFSpeechRequestOptions",R,C,N,V_speechRequestOptions
T@?,R,C,N,V_completion
text
handoff_data
handoff_url_string
hasText
T@"NSString",&,N,V_text
hasHandoffData
handoffData
T@"NSData",&,N,V_handoffData
hasHandoffUrlString
handoffUrlString
T@"NSString",&,N,V_handoffUrlString
stream_id
hasStreamId
streamId
T@"NSString",&,N,V_streamId
-[SADomainObject(ADMessageTransformer) ad_OTTModelRepresentation]
-[SABaseClientBoundCommand(ADMessageTransformer) ad_OTTRequestRepresentation]
interface_name
hasInterfaceName
interfaceName
T@"NSString",&,N,V_interfaceName
ADServiceError
Domains
First Unlock Restricted Commands
Lock Restricted Commands
Control Center Lock Restricted Commands
Managed Storage Domains
Sync Keys
managedStorageDomains
T@"NSSet",C,N,V_managedStorageDomains
firstUnlockRestrictedCommands
T@"NSArray",C,N,V_firstUnlockRestrictedCommands
lockRestrictedCommands
T@"NSArray",C,N,V_lockRestrictedCommands
controlCenterLockRestrictedCommands
T@"NSArray",C,N,V_controlCenterLockRestrictedCommands
T@"<ADServiceDelegate>",W,N,V_delegate
-[AFSiriRequest(ADAlarmRequestHandler) _ad_handleAlarmRequestWithCompletionHandler:]
v24@?0@"STAlarm"8@"NSError"16
+[ADNetworkAnalyzer performAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:]
+[ADNetworkAnalyzer performRequestAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:]
+[ADNetworkAnalyzer performRetrySuccessAnalysisForURL:failedInterfaceIndex:sendBufferSize:wwanPreferred:]
com.apple.siri.analyzer
+[ADNetworkAnalyzer _sendAnalysisMessageForURL:ifaceIndex:bufSize:userVisibleFailure:wwanPerferred:successfulRetry:]_block_invoke
message
analyze
send buffer
interface
request failure
wwan preferred
successful retry
%@: %@, 
v32@?0@"NSString"8@"NSObject"16^B24
-[ADAudioPlaybackService _startAudioPlaybackRequest:completion:]
v32@?0@"AFAudioPlaybackRequest"8@"ADAudioPlaybackSession"16^B24
-[ADAudioPlaybackService _receivedMemoryPressureNotification]
-[ADAudioPlaybackService audioPlaybackSessionWillStart:]
-[ADAudioPlaybackService audioPlaybackSessionDidStart:]
-[ADAudioPlaybackService audioPlaybackSessionDidNotStart:error:]
-[ADAudioPlaybackService audioPlaybackSessionDidStop:error:]
-[ADAudioPlaybackService audioPlaybackSessionDidStop:error:]_block_invoke
AssistantDomains
AssistantFirstUnlockRestrictedDomains
AssistantLockRestrictedDomains
AssistantControlCenterLockRestrictedDomains
AssistantManagedStorageDomains
AssistantClearsDomainObjects
AssistantMaintenance
-[ADBundleService _parseInfoDictionary:]
v32@?0@"SAGenericCommand"8@"NSArray"16@"NSError"24
-[ADBundleService clearDomainObjects]
v24@?0@"ADSyncChunkInfo"8@?<v@?B>16
Path
Clears Domain Objects
hasSuccess
TB,N,V_success
-[ADIntentVocabularyUpdateConnection initWithBundleID:path:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke_2
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke
Synapse.%@#%@
-[ADIntentVocabularyUpdateConnection _triggerUserVocabularySyncAttributingApp:vocabType:]
com.apple.assistant.app_vocabulary
-[ADIntentVocabularyUpdateConnection askToSyncSlot:]_block_invoke
-[ADIntentVocabularyUpdateConnection deleteEverything]
-[ADIntentVocabularyUpdateConnection deleteEverything]_block_invoke
RESET
-[ADIntentVocabularyUpdateConnection requestSiriAuthorization:]
ADClockSnapshot.systemUptime
ADClockSnapshot.modificationDate
ADClockSnapshot.alarmsByID
ADClockSnapshot.timersByID
systemUptime = %@
modificationDate = %@
alarmsByID = %@
timersByID = %@
Td,R,N,V_systemUptime
modificationDate
T@"NSDate",R,C,N,V_modificationDate
alarmsByID
T@"NSDictionary",R,C,N,V_alarmsByID
timersByID
T@"NSDictionary",R,C,N,V_timersByID
com.apple.siri.uiservice.%p
-[ADUIService handleCommand:forDomain:reply:]_block_invoke
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleTimerRequestWithCompletionHandler:]
v24@?0@"STTimer"8@"NSError"16
v16@?0@"<ADTimerStoring>"8
ADSharedDataDidChangeNotification
ADSharedDataDidChangePreviousLanguageCodeKey
ADSharedDataDidChangePreviousOutputVoiceKey
-[ADCommandCenter(SharedDataClient) _updateSharedDataWithPairedPeerData:]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromPeerUseCache:completion:]
-[ADCommandCenter(SharedDataClient) sharedDataConnection:didUpdateSharedData:]
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]
v24@?0@"ADSharedData"8@"ADPeerInfo"16
-[ADCommandCenter(SharedDataClient) _updateSharedDataWithCloudData:fromPeer:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataWithCloudData:fromPeer:]_block_invoke
-[ADCommandCenter(SharedDataClient) listenForRemoteRequestsFromCloud]
-[ADCommandCenter(SharedDataClient) listenForRemoteRequestsFromCloud]_block_invoke
-[ADCommandCenter(SharedDataClient) listenForRemoteRequestsFromCloud]_block_invoke_2
v32@?0@"AFRequestInfo"8@"ADPeerInfo"16@?<v@?B>24
-[SABaseClientBoundCommand(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]
metricsContext
ExtensionService
ADExtensionServiceQueue
-[ADExtensionService handleCommand:forDomain:reply:]_block_invoke
-[ADExtensionService handleCommand:forDomain:reply:]_block_invoke_2
-[ADExtensionService handleCommand:forDomain:reply:]_block_invoke_3
v24@?0@"<NSCopying>"8@"NSError"16
%@-%@-%@
-[ADExtensionService handleCommand:forDomain:reply:]_block_invoke_5
-[ADExtensionService handleCommand:forDomain:reply:]_block_invoke_7
v32@?0@"NSExtension"8@"INExtensionContextHost"16@"NSError"24
v24@?0@"NSData"8@"NSError"16
-[ADExtensionService _transactionForIntent:]
extensionServiceDelegate
T@"<ADExtensionServiceDelegate>",W,N,V_extensionServiceDelegate
-[SAIntentGroupResolveIntentSlot(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]
IntentSlotResolutionResult
-[SAIntentGroupResolveIntentSlot(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke_2
no data
-[SAIntentGroupConfirmIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]
-[SAIntentGroupConfirmIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke_2
-[SAIntentGroupConfirmIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke_4
v24@?0@"INImage"8@"NSError"16
v16@?0@"<INCacheableObject>"8
-[SAIntentGroupConfirmIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke
v40@?0@"INIntentResponse"8@"NSData"16@"NSSet"24@"NSError"32
-[SAIntentGroupHandleIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]
-[SAIntentGroupHandleIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke
-[SAIntentGroupHandleIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke_3
v24@?0@"INIntentResponse"8@"NSSet"16
-[SAIntentGroupHandleIntent(ADExtensionService) ad_sendIntent:toRemote:forTransaction:onQueue:withDelegate:completion:]_block_invoke_2
v24@?0@"INIntentResponse"8@"NSError"16
-[SAIntentGroupLaunchAppWithIntent(ADExtensionService) ad_launchAppWithIntent:forTransaction:completion:]
-[SAIntentGroupLaunchAppWithUserActivity(ADExtensionService) ad_launchAppWithUserActivityIdentifier:forTransaction:completion:]
-[SAIntentGroupResolveAppForIntent(ADExtensionService) ad_resolveAppForIntent:completion:]
appIdentifyingInfo
bundleId
_launchAppWithCompletion
_launchAppWithCompletion_block_invoke
_LaunchCompletionHandlerCreate_block_invoke
_shouldLaunchInBackgroundForInteraction
v20@?0B8B12B16
_launchAppWithUserActivity
endpointMode
startWaitTime
interspeechWaitTime
endWaitTime
T@"<ADPassthroughEndpointerDelegate>",W,N,V_delegate
functionalEndpointer
T@"<Endpointer>",&,N,V_functionalEndpointer
SystemService
-[ADSystemService lockRestrictedCommands]
BBSectionLookupQueue
BBObserver
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
com.apple.siri.calendar.Error
-[ADOfflineMetricsMap fetchNextMetricsUsingBlock:]
-[ADOfflineMetricsMap insertMetrics:withOfflineIdentifier:]
-[ADOfflineMetricsMap deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsMap deleteAllMetrics]
-[ADOfflineMetricsMap _offlineIdentifiers]
_ADOfflineMetricsMapGetOfflineIdentifiers
plist
com.apple.siri.bksopenapplication.ErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSiriAppLaunchRequestHandler.m
[request isKindOfClass:[ADAcePassthroughSiriRequest class]]
v28@?0@"AFSiriResponse"8B16@"NSError"20
T@"<ADSiriAppLaunchRequestHandlerDelegate>",W,N,V_delegate
-[SAAppsGetRestrictedApps(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
hidden
v24@?0@"LSApplicationProxy"8^B16
-[SAAppsAppSearch(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
INAlternativeAppNames
INAlternativeAppName
com.apple.private.alloy.siri.location
DictationConnection
ADDictationConnection
Dictation speechRecordingDidBegin
Dictation speechRecordingDidEnd
Dictation speechRecordingDidCancel
dictation audio recording was cancelled
-[ADDictationConnection adSpeechRecordingDidCancelWithSessionUUID:]_block_invoke
Dictation speechRecordingDidFail
-[ADDictationConnection adSpeechRecordingDidFail:sessionUUID:]_block_invoke
dictation audio recording failed
dictation audio recording failed and an audio file is not being written
-[ADDictationConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
dictation speech was recognized remotely
dictation speech was recognized remotely and we're not waiting for structured results
voice search final result was returned
voice search final result result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecordingDidRecognizePhrases:sessionUUID:refId:]
dictation speech was recognized locally
dictation speech was recognized locally and we're not waiting for search results or structured results
dictation structured result was returned
dictation structured result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecognitionDidFail:sessionUUID:]
dictation speech recognition failed
audio file finished writing; file handle: %@; error: %@
dictation is starting
Person
Text
Dictation start
mode
-[ADDictationConnection _dictationWillStartWithLanguageCode:options:speechOptions:]
-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]_block_invoke
dictation is canceling
dictation is stopping
Dictation preheat
Dictation preheatWithRecordDeviceIdentifier
Dictation endSession
-[ADDictationConnection startRecordedAudioDictationWithOptions:language:narrowband:]
recorded audio dictation is starting
recorded audio dication is starting
-[ADDictationConnection _startDictationWithURL:isNarrowBand:language:options:]
Dictation startWithURL
file-based dictation is starting
-[ADDictationConnection _localSpeechRecognizer]
-[ADDictationConnection localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]
-[ADDictationConnection listener:shouldAcceptNewConnection:]
-[ADDictationConnection _continuePendingSpeechRequestFromTimestamp:]
CheckPrerecordedConnectionAccess
ADTimer.timerID
ADTimer.isFiring
ADTimer.firedDate
ADTimer.dismissedDate
ADTimer.lastModifiedDate
ADTimer.aceObject
timerID = %@
timerID
T@"NSUUID",R,C,N,V_timerID
T@"SATimerObject",R,C,N,V_aceObject
defaultSessionHasResults
timerFiredAndSomeSessionHadResults
sessionHasHigherUsefulnessScore
onlySessionHasResults
sessionCannotHandleRequest
arbiterReusedPreviousWinner
-[ADSessionManager _startSessions:]
-[ADSessionManager _startRemoteSession:]
-[ADSessionManager _startLocalSession:]
-[ADSessionManager _resetSessionsAndMakeQuiet:]
-[ADSessionManager endRetryableRequestForCommand:]
-[ADSessionManager _sharedAssistantdIdentifierDidChange:]
-[ADSessionManager _sharedAssistantdIdentifierDidChange:]_block_invoke
-[ADSessionManager _enabledBitsChanged:]
-[ADSessionManager _languageCodeDidChange:]
-[ADSessionManager _languageCodeDidChange:]_block_invoke
-[ADSessionManager _powerChangedMessageType:notificationID:]
will sleep
can sleep
-[ADSessionManager _unregisterForSleepNotification]
-[ADSessionManager _startObservingDistributedNotifications]
-[ADSessionManager _stopObservingDistributedNotifications]
-[ADSessionManager _evaluateResultObjects]
-[ADSessionManager _resultObjectsHoldTime]
-[ADSessionManager _resultObjectsTimerFired:]
-[ADSessionManager _queueResultObject:forSession:]
-[ADSessionManager _isDestructive:]
-[ADSessionManager _cancelOtherSessionRequests:forRefId:]
-[ADSessionManager _pickDefaultWinnerWithDroppingSession:]
-[ADSessionManager adviseSessionArbiterToContinueWithPreviousWinner:]
-[ADSessionManager assistantSessionWillStartConnection:]
-[ADSessionManager assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:]
-[ADSessionManager assistantSession:receivedCommand:]
Session Lost
-[ADSessionManager assistantSession:cannotHandleRequest:]
-[ADSessionManager assistantSession:receivedError:isRetryableError:]
-[ADSessionManager assistantSessionShouldLogVisibleRequestFailure:forError:]
-[ADSessionManager assistantSessionConnectionDidReset:]
-[ADSessionManager assistantSessionShouldAttemptRetry:]
-[ADSessionManager assistantSession:didChangeRequestIdFrom:toId:]
-[ADSessionManager assistantSessionDidCreateAssistant:]
-[ADSessionManager assistantSession:willRetryOnError:]
-[ADSessionManager assistantSession:beginSessionRetryPreferringWWAN:]
-[ADSessionManager _convertEmbeddedRequestIds:originalCommand:session:]
-[ADSessionManager handleCommand:]
-[ADSessionManager delegateDidHandleCommand:]
-[ADSessionManager _sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:]
originalRequestId
%@SessionProxyId
-[ADSessionManager setRequestId:]
-[ADSessionManager _hasAtleastOneActiveSessionBesides:]
-[ADSessionManager _canStartLocalSession]
-[ADSessionManager _removeKeyFromProxyMaps:forSession:]
-[ADSessionManager _resetWinningState]
remoteSessionScore
localSessionScore
-[ADSessionManager speechRecognized:]
T@"<ADSessionManagerDelegate>",W,N,V_delegate
-[ADDictationSession dealloc]
-[ADDictationSession _setSpeechRecognitionTransactionState:]
-[ADDictationSession _setAudioFileIOTransactionState:]
T@"NSString",R,C,N,V_uuid
TQ,R,N,V_timestamp
T@"NSString",R,C,N,V_languageCode
options
T@"AFDictationOptions",R,N,V_options
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
speechRecognitionTransactionState
Tq,R,N,V_speechRecognitionTransactionState
audioFileIOTransactionState
Tq,R,N,V_audioFileIOTransactionState
%@-%zd-%zd-%zd
ADAssistantDataManager
-[ADAssistantDataManager init]_block_invoke
-[ADAssistantDataManager requestAssistantDataUpdate]
-[ADAssistantDataManager profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
-[ADAssistantDataManager addressBookManagerDidUpdateData:meCards:sources:]_block_invoke
-[ADAssistantDataManager contextCollector:didChangeDisplayScale:]
-[ADAssistantDataManager _voiceAssetsUpdated:]
-[ADAssistantDataManager _currentLocaleDidChange:]
-[ADAssistantDataManager _locationRestrictionDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]_block_invoke_2
-[ADAssistantDataManager _systemTimeZoneDidChange:]
-[ADAssistantDataManager _outputVoiceDidChange:]
-[ADAssistantDataManager _supportsTelephonyCallsDidChange:]
-[ADAssistantDataManager _countryCodeDidChange:]
-[ADAssistantDataManager _httThresholdDidChange:]
-[ADAssistantDataManager _censorSpeechDidChange:]
-[ADAssistantDataManager _generateAssistantData]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADAssistantDataManager.m
called from non-main thread
-[ADAssistantDataManager _onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:]
-[ADAssistantDataManager _updateVoice:]
-[ADAssistantDataManager _updateVoice:]_block_invoke
-[ADAssistantDataManager _updateVoice:]_block_invoke_2
v16@?0@"VSVoiceAsset"8
-[ADAssistantDataManager _updateItunesStoreIdentifier:]_block_invoke
-[ADAssistantDataManager _updateVoiceOverStatus:]
addressBookManager
T@"ADAddressBookManager",R,N,G_addressBookManager,V_addressBookManager
voiceOverIsActive
TB,N,V_voiceOverIsActive
-[AFRequestInfo(SiriAce) _ad_requestCommandWithRequestHelper:]
-[AceObject(AFRequestInfo) _ad_setPayloadOnRequestInfo:]
_ad_voiceInfo
T@"AFVoiceInfo",&,N,S_ad_setVoiceInfo:
_ad_data
T@"ADSharedData",C,N,S_ad_setData:
_ad_requestInfo
T@"AFRequestInfo",C,N,S_ad_setRequestInfo:
outstandingResponses
Tq,N,V_outstandingResponses
responseType
TS,N,V_responseType
responses
T@"NSMutableDictionary",&,N,V_responses
timeoutTimer
T@"AFWatchdogTimer",&,N,V_timeoutTimer
peer
T@"ADPeerInfo",&,N,V_peer
proto
T@"PBCodable",&,N,V_proto
error
T@"NSError",&,N,V_error
ADPeerCloudService
com.apple.private.alloy.siri.icloud
-[ADPeerCloudService _init]_block_invoke
-[ADPeerCloudService _sendProto:ofType:originalRequestId:toPeers:responseType:completion:]
-[ADPeerCloudService sendSharedData:toPeers:]
-[ADPeerCloudService setSharedDataObserver:withHandle:]
-[ADPeerCloudService _notifyObserversOfSharedData:fromPeer:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]_block_invoke_2
v24@?0@"NSSet"8@"NSError"16
-[ADPeerCloudService _notifyObserversOfSharedDataRequestFromPeer:completion:]
-[ADPeerCloudService startRemoteRequest:onPeers:completion:]
-[ADPeerCloudService startRemoteRequest:onPeers:completion:]_block_invoke_2
-[ADPeerCloudService _notifyObserversOfRequestInfo:fromPeer:completion:]
-[ADPeerCloudService service:account:incomingUnhandledProtobuf:fromID:context:]
v28@?0@"PBCodable"8S16@"NSError"20
-[ADPeerCloudService _handleMessageResponse:ofType:orError:fromID:handler:]
-[ADPeerCloudService service:devicesChanged:]
-[PBCodable(ADSharedDataConnection) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceSetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceGetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceStartRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
com.apple.private.alloy.siri.device
-[ADCommandCenter(Context) _context_rollbackClearContext]
-[ADCommandCenter(Context) _context_clearContext]
-[ADCommandCenter(Context) _context_setAlertContextDirty]
-[ADCommandCenter(Context) _context_updateContextWithActivationEventTime:]
-[ADCommandCenter(Context) _setAlertContextWithActivationEventTime:]
v16@?0@?<v@?@"NSArray">8
v16@?0@?<v@?@"ADClockSnapshot">8
v16@?0@"SASetAlertContext"8
-[ADCommandCenter(Context) _setBackgroundContext]
v16@?0@"SASetBackgroundContext"8
-[ADCommandCenter(Context) _setSyncContext]
sync_promise
-[ADCommandCenter(Context) _context_setSTApplicationContext:]
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]
com.apple.mobilePhone
com.apple.ace.phone
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]_block_invoke
com.apple.SiriViewService
-[ADCommandCenter(Context) _context_willSetApplicationContextWithRefId:]
-[ADCommandCenter(Context) _context_setApplicationContext:]
-[ADCommandCenter(Context) _context_setApplicationContextForApplicationInfos:withRefId:]
v16@?0@"SASetApplicationContext"8
gender
hasGender
Ti,N,V_gender
UNKNOWN
MALE
FEMALE
(unknown: %i)
ProcessLaunchTime
ExpectedActivationTime
Load
BeepTime
DefrostToLaunchTime
StartedRecording
PartialRecognition
FinalRecognition
SpeechRecognized
RequestCompleted
LocalEventInfo
LocalSpeechStarted
LocalPartialRecognition
LocalFinalSpeechRecognition
LocalSpeechModelInfo
UsedBluetooth
AggressivelyPrewarmed
AddViewsReceived
EnabledLogging
LaunchApp
HomeButtonUpFromBeepTime
CutOffForHomeButtonUpFromBeepTime
UsedManualEndpointing
ConnectionPolicyID.
ConnectionRouteID.
ConnectionDelay
ConnectionOpenTime
ConnectionFirstByteTime
ConnectionAttemptCount
ConnectionMetricsCount
ConnectionMeanPing
ConnectionPingCount
ConnectionUnacknowledgedPingCount
Provider.
TCPRTTCurrent
TCPRTTSmoothed
TCPRTTVariance
TCPRTTBest
TCPPacketsSent
TCPBytesSent
TCPBytesRetransmitted
TCPBytesUnacked
TCPPacketsReceived
TCPBytesReceived
TCPDuplicateBytesReceived
TCPOOOBytesReceived
TCPSendBandwidth
TCPSynRetransmits
ConnectionMethod.
ConnectionEdgeId.
ConnectionFallbackFrom.
ConnectionEdgeType.
CarrierName.
MPTCPSubflowCount
MPTCPConnectedSubflowCount
MPTCPPrimarySubflowInterfaceName.
MPTCPSubflowSwitch.
IsFailure
FailureDomain.
UnderlyingFailureDomain.
IsCancelled
ClientTimestamp
MusicDetected
EndpointExtendedForMusic
PartialResultAcousticIdTimerScheduled
PartialResultAcousticIdTimer
SystemIsMuted
SiriRespectsSystemMute
MotionUpGestureUsed
com.apple.assistantd.request-statistics
-[ADRequestStatistics reset]
-[ADRequestStatistics markStartedRecordingWithSystemUptime:]
-[ADRequestStatistics recordRequestMetric:withTimestamp:]
%@.%zd
v32@?0@"NSNumber"8Q16^B24
use_nonblocking_haptic
com.apple.avfoundation.avvc
none
%@.%d
-[ADRequestStatistics metrics]
RequestIndifferent
recordingWillStartTime
T@"NSNumber",C,N,V_recordingWillStartTime
usedBluetooth
TB,N,V_usedBluetooth
aggressivelyPrewarmed
TB,N,V_aggressivelyPrewarmed
enabledLogging
T@"NSArray",C,N,V_enabledLogging
T@"NSString",C,N,V_requestId
homeButtonUpFromBeep
T@"NSNumber",&,N,V_homeButtonUpFromBeep
usedManualEndpointing
TB,N,V_usedManualEndpointing
isFailure
TB,N,V_isFailure
failureError
T@"NSError",C,N,V_failureError
isCancelled
TB,N,V_isCancelled
processLaunchTime
Td,N,V_processLaunchTime
usedMotionUpGesture
TB,N,V_usedMotionUpGesture
_NULL_STORE
-[ADManagedStorageConnection setKnowledgeStoreData:forKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection getKnowledgeStoreDataForKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection resetKnowledgeStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection resetKnowledgeStoreWithName:completion:]_block_invoke_2
_ADGlobalKnowledgeStoreQueue_block_invoke
CKGenericCondition
Unable to generate settings request representation for %@
-[AFGetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsGetBooleanResponseRepresentation]
-[AFSetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsResponseRepresentationForSetValueCommand:]
com.apple.assistant.vibration-manager
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
-[ADVibrationManager _fetchRingVibrationValue]
ring-vibrate
-[ADVibrationManager _fetchSilentVibrationValue]
silent-vibrate
-[ADVibrationManager _fetchAccessibilityVibrationValue]
-[ADVibrationManager _fetchVoiceOverVibrationValue]
-[ADVibrationManager handleVoiceOverValueChange]
-[ADVibrationManager handleRingVibrationValueChange]
-[ADVibrationManager handleSilentVibrationValueChange]
-[ADVibrationManager handleAccessibilityVibrationValueChange]
com.apple.springboard
mobile
_fetchVibrationState
com.apple.assistantd.dictation.session-controller
-[ADDictationSessionTracker startSessionForReason:languageCode:options:speechRequestOptions:]_block_invoke
-[ADDictationSessionTracker stopSessionForReason:]_block_invoke
-[ADDictationSessionTracker notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:]_block_invoke
-[ADDictationSessionTracker notifyAudioFileIOTransactionStoppedForReason:sessionUUID:]_block_invoke
-[ADDictationSessionTracker _addSession:]
Trying to retrieve the active session, but found %tu active sessions.
-[ADDictationSessionTracker _beginSpeechRecognitionTransactionForReason:session:]
Trying to begin a dictation transcription transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation transcription transaction (reason: %@), but the transaction state is %zd.
-[ADDictationSessionTracker _beginAudioFileIOTransactionForReason:session:]
Trying to begin a dictation audio file transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation audio file transaction (reason: %@), but the transaction state is %zd.
-[ADDictationSessionTracker _endSpeechRecognitionTransactionForReason:session:]
Trying to end a dictation transcription transaction (reason: %@), but the transaction state is stopped
-[ADDictationSessionTracker _endAudioFileIOTransactionForReason:session:]
Trying to end a dictation audio file transaction (reason: %@), but the transaction state is stopped
com.apple.homekit.name
com.apple.siri.applications
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.applications.nano
com.apple.siri.appIntentSupportPolicyAndVocab.nano
com.apple.geoservices.siri_data_changed
ADSetSyncNeededFlagForReason
locale_change
com.apple.siri.calendar.systemsetting
com.apple.assistant.sync_homekit_now
siri_kit_app_vocabulary
dynamite_token_change
com.apple.siri.client.state.DynamiteClientState
com.apple.siri.corrections
com.apple.maps
.siri_data_changed
isPlaceholder
ADSyncNotificationShouldBeFilteredForReason
isForcedUpdate
updated
removed
Correction:
B24@?0r*8@"NSObject<OS_xpc_object>"16
B24@?0Q8@"NSObject<OS_xpc_object>"16
CKPersistentStorageKeysAndValuesUpdated.
synched
CKPersistentStorageKeysRemoved.
AppleDatePreferencesChangedNotification
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
MPStoreClientTokenDidChangeNotification
com.apple.assistant.siri_settings_did_change
siri_settings_did_change
__ABDataBaseChangedByOtherProcessNotification
ABDatabaseChangedExternallyNotificationPriv
ABDistributedDatabaseChangedNotificationPriv
/var/mobile/Library/Assistant/sync_timestamp
/var/mobile/Library/Assistant/session_did_finish_timestamp
com.apple.assistant
Siri Global
 - %@
ADKeychainValueForAccountAndKey
ADKeychainRemoveValueForAccountAndKey
ADKeychainSetValueForAccountAndKey
Siri diagnostics queue
-[AFDiagnostics logConnectionStart]
@"AWDSiriServerConnectionStart"8@?0
-[AFDiagnostics logConnectionOpenWithConnectionType:]
-[AFDiagnostics logConnectionOpenWithConnectionType:]_block_invoke_2
@"AWDSiriServerConnectionOpen"8@?0
-[AFDiagnostics logConnectionFailedWithError:connectionType:]
@"AWDSiriServerConnectionFailed"8@?0
-[AFDiagnostics logVoiceRecordingStart]
@"AWDSiriVoiceRecordingStart"8@?0
-[AFDiagnostics logVoiceRecordingEnd]
-[AFDiagnostics logVoiceRecordingEnd]_block_invoke_2
@"AWDSiriVoiceRecordingEnd"8@?0
-[AFDiagnostics logVoiceSendStart]
@"AWDSiriVoiceSendStart"8@?0
-[AFDiagnostics logVoiceSendEnd]
-[AFDiagnostics logVoiceSendEnd]_block_invoke_2
@"AWDSiriVoiceSendEnd"8@?0
-[AFDiagnostics logNetworkAnalyzeRunWithResults:]
@"AWDSiriNetworkAnalyzerRun"8@?0
-[AFDiagnostics logSpeechRecognized]
-[AFDiagnostics logSpeechRecognized]_block_invoke_2
@"AWDSiriSpeechRecognized"8@?0
-[AFDiagnostics _submitMetricWithIdentifier:generation:]
-[AFDiagnostics _submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:]_block_invoke
@8@?0
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
serverConnection
T@"AWDServerConnection",R,N,G_serverConnection,V_serverConnection
connectionStartTime
T@"NSNumber",&,N,G_connectionStartTime,S_setConnectionStartTime:,V_connectionStartTime
voiceRecordingStartTime
T@"NSNumber",&,N,G_voiceRecordingStartTime,S_setVoiceRecordingStartTime:,V_voiceRecordingStartTime
voiceRecordingEndTime
T@"NSNumber",&,N,G_voiceRecordingEndTime,S_setVoiceRecordingEndTime:,V_voiceRecordingEndTime
voiceSendStartTime
T@"NSNumber",&,N,G_voiceSendStartTime,S_setVoiceSendStartTime:,V_voiceSendStartTime
voiceSendEndTime
T@"NSNumber",&,N,G_voiceSendEndTime,S_setVoiceSendEndTime:,V_voiceSendEndTime
forUserRequest
TB,N,GisForUserRequest,V_forUserRequest
analyzedSuccessfulRetry
TB,N,V_analyzedSuccessfulRetry
TB,N,V_wwanPreferred
connectionInterface
T@"NSNumber",C,N,V_connectionInterface
sendBufferBytesRemaining
T@"NSNumber",C,N,V_sendBufferBytesRemaining
knownURLLoadDuration
T@"NSNumber",C,N,V_knownURLLoadDuration
siriURLLoadDuration
T@"NSNumber",C,N,V_siriURLLoadDuration
siriSaltURLLoadDuration
T@"NSNumber",C,N,V_siriSaltURLLoadDuration
gatewayStatus
Tq,N,V_gatewayStatus
gatewayPingDuration
T@"NSNumber",C,N,V_gatewayPingDuration
gatewayPingsSent
T@"NSNumber",C,N,V_gatewayPingsSent
gatewayPingsDropped
T@"NSNumber",C,N,V_gatewayPingsDropped
%@ {request = %@, player = %@}
com.apple.assistantd.audio-playback-session
-[ADAudioPlaybackSession _startWithCompletion:]
Attempted to start audio playback session when it is already active.
Attempted to start audio playback session when AVAudioPlayer is already playing.
Failed to initialize AVAudioPlayer.
Failed to prepare to play AVAudioPlayer.
Failed to play AVAudioPlayer.
-[ADAudioPlaybackSession _stop:]
-[ADAudioPlaybackSession _stop:]_block_invoke
-[ADAudioPlaybackSession _beginInterruption]
-[ADAudioPlaybackSession _endInterruption:]
-[ADAudioPlaybackSession _willStartWithCompletion:]
-[ADAudioPlaybackSession _didStart]
-[ADAudioPlaybackSession _didNotStartWithError:]
-[ADAudioPlaybackSession _didStopWithError:]
-[ADAudioPlaybackSession audioPlayerDidFinishPlaying:successfully:]
-[ADAudioPlaybackSession audioPlayerDecodeErrorDidOccur:error:]
T@"AFAudioPlaybackRequest",R,C,N,V_request
T@"<ADAudioPlaybackSessionDelegate>",W,N,V_delegate
-[ADSettingsClient fetchSupportedLanguagesWithReply:]
v16@?0@"NSString"8
v16@?0@"AFPreferences"8
-[ADSettingsClient setDictationEnabled:]_block_invoke_2
-[ADSettingsClient _killDaemon]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]_block_invoke
v16@?0@"NSNotification"8
-[ADSettingsClient _setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:]_block_invoke
-[ADSettingsClient disableAndDeleteCloudSyncWithCompletion:]
language
ADSettingsClientRecipeEvalution
v16@?0@"AFExperimentContext"8
v16@?0@"CMActivity"8
_motionActivity
T@"CMActivity",C,N,S_setMotionActivity:,V_motionActivity
com.apple.siri.AlarmStore
%@-%@
-[ADSyncVerificationHelper handleSyncChunkInfo:withSyncInfo:completion:]
%lld
coded_location
hasCodedLocation
codedLocation
T@"NSData",&,N,V_codedLocation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADSharedDataConnection.m
ADSharedDataConnection
ADAudioFileWriterErrorDomain
ADAudioFileWriterExtAudioFileErrorDomain
SavedAudioFile
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileAssistantDaemons_Sim/MobileAssistantFramework-1610.3.1.1/ADAudioFileWriter.m
type != AFAudioFileTypeNone
AudioFileWriterQueue
-[ADAudioFileWriter _initWithType:pathGenerator:xorFileHandle:priority:]_block_invoke
-[ADAudioFileWriter _close]
-[ADAudioFileWriter _delete]
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]
AudioFile Already configured
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]_block_invoke
-[ADAudioFileWriter appendAudioData:]_block_invoke
-[ADAudioFileWriter flushWithCompletion:]_block_invoke
_AudioStreamBasicDescriptionForAFAudioFileType
com.apple.assistant.security.service.procedure
com.apple.assistant.security.service.callback
v32@?0@"NSData"8@"NSData"16@"NSError"24
IODeviceTree:/
IOPlatformSerialNumber
IOPlatformUUID
IOPower:/
Gq3489ugfi
Fyp98tpgj
kbjfrfpoJU
board-id
product-name
kern.osversion
kern.osrevision
IODeviceTree:/options
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:MLB
oycqAZloTNDm
abKPld1EcMni
IOEthernetInterface
IOPrimaryInterface
IOPropertyMatch
IOService
IOMACAddress
ADSyncBlacklist
SiriHelper
AFDictationService
NSObject
AFSettingsService
ADIntentPreferencesAndVocabularyUpdateService
INVocabularyUpdateService
AFManagedStorageService
ADDaemon
NSXPCListenerDelegate
PSYSyncCoordinatorDelegate
_ADPBDeviceGetDataRequest
NSCopying
_ADPBProxyGetMetricsResponse
ADPeerLocationConnection
ADPeerConnectionDelegate
ADPeerLocationPolicyDelegate
ADSharedDataRemote
ADSiriUtilities
ADRecordingInfo
ADTimerTransformer
ADAceRequestTransformer
ADAceResponseTransformer
ADSharedData
ADSessionLocalConnection
ADRemoteRequestHelper
ASXSignatureExtracting
ADAcousticFingerprinter
AFProviderService
AFProviderServiceDelegate
ADServiceConnection
ADServiceConnectionProviderServiceDelegate
ADPeerConnection
IDSServiceDelegate
AceObject
NSMutableCopying
NSSecureCoding
NSCoding
ADSessionLocalServer
ADSessionLocalConnectionDelegate
ADExtension
ADExperimentManager
ServiceMaintenance
AcousticId
ADPreferences
Punchouts
DeepSyncVerificationServiceProtocol
ADSyncDeepVerificationManager
ADClientLiteListener
ADClientLite
AFClientLiteRemoteCommandHandling
ADCommandCenterRequestDelegate
ADPeerInfo
ADSiriRequestSucceededResponseTransformer
SAClientBoundCommand
SAAceCommand
SAAceSerializable
SAAceReferable
SAServerBoundCommand
ADCommandCenter
ADSessionManagerDelegate
ADSpeechManagerDelegate
ADLocationManagerDelegate
ADUIServiceDelegate
ADExtensionServiceDelegate
ADAudioPlaybackServiceDelegate
ADCallObserverDelegate
ADAceResponseAdditions
ADAccount
SharedData
ConnectionPolicy
ADPeerLocationRemote
CLLocationManagerDelegate
ADHealthTransformer
ADSiriTetherListener
_ADPBProxy
ADServiceManager
ADServiceRecord
ADTimerRequestHandler
ADStopwatchRequestHandler
AFSiriRequestHandling
ADServiceStatistics
NanoServices
MediaRemote
ADExternalRequestListener
ADSiriKitTCCObserver
ADSession
ADAssistantDataManagerObserver
ADSpeechManager
SiriCoreLocalSpeechRecognizerDelegate
ADSpeechCapturingDelegate
AFAudioPowerUpdaterDelegate
ADSyncFlagManager
ADTTSMutingObserver
ADExtensionTransaction
ADAudioSession
ADAudioRoute
ADSpeechRecorder
ADAcousticFingerprinterDelegate
CSSpeechControllerDelegate
CSEndpointAnalyzerDelegate
ADSpeechCapturing
ADSyncManager
ADServiceDelegate
SyncKeys
SyncKeysPrivate
_ADDomainObjectCacheEntry
ADDomainObjectCache
ADAudioActivationInfo
ADAnalyticsStore
ADMediaRemote
ADMediaRemoteServiceCommand
ADMediaRemoteService
SiriDaemonAdditions
ADMapsTransformer
AMOS
ADSettingsRequestHandler
ADClientFlowServiceHelper
AFServiceHelper
ADClientFlowService
SADExtras
ADSADOCommand
SADomainObjectCommand
ADSpeechLog
ADGreenTeaLogger
ADAlarmTransformer
OutputVoice
ADSessionRemoteServer
SiriCoreNetworkManagerObserver
SiriCoreSiriConnectionDelegate
SimulatorIDSDevice
ADIDSSimulatorService
ADSystemMuteModeObserver
ADSyncChunkInfo
ADAddressBookManager
ABAssistantManagerDelegate
ADAlarm
ADAlarmBuilder
VSAdditions
_ADPBProxyReestablishRequest
ADAceDomainSignalRequestHandler
_ADPBProxyGetMetricsRequest
ADAcousticIDHelper
ADSynapseService
ADMobileBluetoothManager
ADMobileBluetoothDevice
ADBluetoothDevice
ADAcePassthroughSiriRequest
ADBackgroundContextCache
ADClientConnection
ADHandsFreeStateChangedObserver
ADAudioStateListening
ADCommandCenterClient
ADCommandCenterSpeechDelegate
AFClientService
ADClientConnectionSupport
CoreSpeechExtensions
ADSpeechCompressor
ADAudioStateManager
ADAudioStateAnnouncing
_ADAudioStateListenerProxy
ADAcePassthroughSiriResponse
ADOfflineMetricsManager
ADMailTransformer
ADSAExtensions
ADManagedObjectService
ADContextManager
SiriMediaRemoteHelpers
ADRetryManager
ADCalendarTransformer
ADShowNextEventRequestHandler
ADSyncRequest
Metrics
ADAcePassthroughResponseTransformer
ADSiriConnectionRemote
SiriCoreConnectionProviderDelegate
ADPeerStreamConnectionDelegate
ADSpeechPlaybackSimulator
ADOfflineMetrics
ADPeerConnectionProvider
ADResultObjectCache
ResultCallbacks
ADMissingReferencesContext
ADKnowledgeService
ADDisplayLayoutMonitorObserver
FBSDisplayLayoutObserver
SBSDisplayLayoutElement
ADGenericIntentService
ADGenericIntentRequestHandler
ADDiagnosticsManager
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
ADGenericIntentResponseTransformer
ADAuthenticator
ADServiceCommandType
ADCallObserver
ADDisplayScaleContextCollector
ADPeerLocationPolicy
ADGenericIntentRequestTransformer
ADExtensionTransactionState
ADClockService
AFInvalidating
ADTimerStore
ADUnavailableTimerStore
ADTimerStoring
ADSiriTaskService
ADAnalyticsService
AFAnalyticsObservationService
AFAnalyticsService
ADSessionBarrier
SiriCoreSessionObject
SiriCoreThunking
Daemon
ADBuddyMonitor
ADAddressBook
SiriAce
ADPushContextListener
ADPushContextReceiver
ADNotifyAndPushContextCollector
ADSharedPeerStreamConnection
ADPeerStreamConnection
_ADPBDeviceSetDataRequest
ADLocationManager
ADPeerLocationConnectionDelegate
AssistantExtensions
ADLocationExtensions
ADWorkoutTransformer
ADSiriContextServiceClient
Sync
ADBluetoothManager
StructuredDictation
ADLinkedListItem
ADFanInfoManager
ADFanInfo
ADMessagesTransformer
ADRemoteSpeechRequestHelper
_ADPBDeviceStartRemoteRequest
_ADPBProxyWakeUpRequest
ADMessageTransformer
ADOTTRequestTransformer
_ADPBProxyTCPInfoMetrics
ADService
ADAlarmRequestHandler
ADNetworkAnalyzer
ADSymptomsReporter
ADAudioPlaybackService
ADAudioPlaybackSessionDelegate
AFAudioPlaybackService
ADBundleService
ADServiceConnectionDelegate
_ADPBDeviceStartRemoteResponse
ADIntentVocabularyUpdateConnection
ADClockSnapshot
ADClockSnapshotBuilder
_ADPBLocationGetPeerLocationRequest
ADUIService
SharedDataClient
SharedDataRemote
ADExtensionService
INExtensionContextHostDelegate
ADExtensionServiceClientBoundCommandDelegate
ADPassthroughEndpointer
Endpointer
ADSystemService
ADCalendarError
ADOfflineMetricsMap
ADSiriAppLaunchRequestHandler
_ADPBLocation
ADHomeKitService
ADDictationConnection
ADTimer
ADTimerBuilder
ADAudioPowerCoreSpeechProvider
AFAudioPowerProviding
ADSessionManager
ADSessionDelegate
ADIntentsUserActivityManager
ADAddressBookRecord
ADDictationSession
_ADSADAdditions
ADAssistantDataManager
MCProfileConnectionObserver
ADDisplayScaleContextCollectorDelegate
ADAddressBookManagerDelegate
AFRequestInfo
AFSpeechService
AFSpeechServiceDelegate
ADCloudResponseHandler
ADPeerResponse
ADPeerCloudService
ADSharedDataConnection
_ADPBDevice
Context
ADClockServiceDelegate
_ADPBDeviceOutputVoiceInfo
ADRequestStatistics
ConnectionExtras
ADManagedStorageConnection
ADSettingsTransformer
ADVibrationManager
ADDictationSessionTracker
AFDiagnostics
AFDiagnosticsNetworkAnalyzerResults
AFDiagnosticsAdditions
AFAdditions
ADAudioPlaybackSession
AVAudioPlayerDelegate
ADSettingsClient
ADCommandCenterSyncDelegate
ADMotionManager
ADAlarmStore
ADAlarmQuery
AFAlarmMatching
ADUnavailableAlarmStore
ADAlarmStoring
ADSyncVerificationHelper
_ADPBLocationSetPeerLocationRequest
ADAudioFileWriter
Analytics
ADSecurityService
AFSecurityService
ADAcePassthroughRequestTransformer
%s No normalized key could be computed for %@ %@
%s Unable to stop synching anchors of type %{public}@, because the example anchor is malformed aceID=%@
%s Invalid sync anchor was rejected by server %@
%s Anchor was throttled until %@ %@
%s Enabling CFNetwork diagnostics
%s Starting Siri Connection Proxy
%s Starting Shared Data Service
%s Starting Peer Location Service
%s Preheating session on client connection
%s %@ Client Connection Connected (pid=%d])
%s %@ Client Connection Disconnected (pid=%d)
%s %@ Dictation Connection Connected (pid=%d])
%s %@ Dictation Connection Disconnected (pid=%d])
%s %@ Settings Connection Connected (pid=%d)
%s %@ Settings Connection Disconnected (pid=%d)
%s no '%@' entitlement for connection %{public}@
%s %@ Rejecting connection, because no kCFBundleIdentifierKey could be found for pid=%d but we expected it to be a .app bundle
%s assistantd accepted connection from app (pid=%d bundleID=%@) %@
%s Synapse Sync Connection Disconnected (pid=%d)
%s %@ Managed Storage Connection Connected (pid=%d)
%s %@ Managed Storage Connection Disconnected (pid=%d)
%s %@ Analytics Connection Connected (pid=%d])
%s Analytics Connection Invalidated (pid=%d)
%s Analytics Connection Interrupted (pid=%d)
%s %@ Analytics Observation Connection does not have required entitlements.
%s %@ Analytics Observation Connection Connected (pid=%d])
%s Analytics Observation Connection Invalidated (pid=%d)
%s Analytics Observation Connection Interrupted (pid=%d)
%s %@ Security Connection Connected (pid=%d])
%s Security Connection Invalidated (pid=%d)
%s Security Connection Interrupted (pid=%d)
%s Got xpc event for notification %s
%s Got xpc event for distributed notification %s
%s Notification payload: %s
%s Sync listener error %{public}s
%s Ignoring unexpected event type on sync listener
%s assistantd launched on %@
%s assistantd finished post launch setup
%s assistantd shutting down
%s Sync now activity already registered
%s Assistant is not enabled, ignoring sync notification
%s Sync requested recently; sync reasons enqueued: %@
%s Received sync now notification from UEA.
%s Received defrost XPC message
%s Process launched %fs after sending defrost XPC message.
%s Process launched before sending defrost XPC message.
%s Unexpected message on sync connection %s
%s Unexpected nameless message on sync connection
%s Sync peer shutting down due to %s
%s Ignoring unexpected type on sync connection
%s Unable to get best location from peer: %{public}@
%s Censor setting changed, pushing to peer.
%s Not pushing shared data because we have no peer
%s Already have Peer Data returning now!
%s Getting Peer Data from ADCommandCenter
%s Sending ADCC Peer Data now!
%s Forcing Siri to off because peer does not support language
%s No SACodec for settings %{public}@
%s ASXConnection Interrupted
%s ASXConnection Invalidated
%s Could not make Fingerprinter decoder: %{public}.4s
%s Error during conversion for fingerprinter %{public}.4s
%s Getting signature for duration %lf
%s Fingerprinter doesn't support rate %{public}ld
%s Assistant Service Connection Interrupted
%s Assistant Service Connection Invalidated
%s Time out disabled for plugin %@
%s Plugin timed out for message %{public}@ %{public}@
%s message timed out, ignoring provider service error %{public}@
%s Plugin failed for message %{public}@: %{public}@
%s message timed out, ignoring plugin reply %@
%s Bad plugin response %@
%s Plugin timed out for sync with info %@
%s Plugin already timed out for sync
%s %@ Sync failed for info %@: %@
%s %@ failed to fetch sync snapshot for info %@: %@
%s Ignoring sync chunks as we have no chunk handler. (pre=%@, post=%@, validity=%@, updates=%@, deletes=%@)
%s Sending Request %d
%s Error sending request %{public}@
%s Ignoring response with no requestId %@
%s Error sending response %{public}@
%s Received %@ type %d fromId %@ incoming %@ outgoing %@ expects response %@
%s Handing protobuf to delegate
%s Error for request id %@ %{public}@
%s Tried to handle protobuf but couldn't find class or had no delegate %@ %@
%s Don't know how to handle protobuf %@ %@
%s Message send with identifier %@ failed %{public}@
%s Holding off on session start because we're dormant
%s has active request %d
%s Mini not ready.
%s Failed loading/creating mini %@ elapsed time %lf
%s Retrying after mini failure
%s Mini failure (%{public}@).
%s Ignoring command failed for limbo id %@
%s Mini Loaded Version: %@
%s Mini Loaded refId does not match our saved assistant command
%s Waiting on a pending destruction, doing nothing
%s Handling ACE Object
%s Siri Mini received Speech Recognized
%s Siri Mini received Speech Failure: %@
%s Error sending command %@ %{public}@
%s Local session did open connection
%s Local session received Ace Object %@
%s Local session connection did close
%s Local session did encounter error %@
%s generated setAssistantData anchor %@ (previous anchor %@)
%s Assistant Data matches, not sending %@
%s %@ has no identifier.
%s %@ has no control group.
%s Unable to select  depolyment group based on allocation.
%s Service %@ still has safety block, timing out
%s Not sending SAAISearch because aidHelper said not to
%s Scheduling partial result acoustic ID timer
%s Canceling speech request because we have an acoustic identification but no partial results
%s %d
%s Connection to deep sync verification service dropped unexpectedly: %@
%s Failed to unarchive data: %@
%s Invalid data: %@
%s No deep verification keys persisted
%s Failed to remove verifications keys: %@
%s Failed to persist verification keys: %@
%s Failed to archive data for verification keys: %@
%s No keys to verify
%s Deep sync verification already in progress
%s Sync chunk is nil
%s No deep sync verification scheduled
%s Client with pid %{public}zd does not have entitlement %@
%s Rejecting ClientLite command because Siri is disabled
%s No client handler for command %@
%s Adding completion for %@
%s Command center is idle, canceling session
%s Clearing request delegate state
%s Clearing speech delegate state
%s Interrupting current request delegate
%s Informing session it's ok to send assistant data
%s Interrupting current recording speech delegate
%s Waiting for recording to finish
%s Invoking Speech Completion
%s Marking request did finish on app launch callback
%s StartSpeech msg id is %@
%s Ignoring command whose request %@ is not the current request
%s Handling command from result object cache %@
%s Missing command identifiers, asking for objects from the server
%s missing refs resolved
%s missing refs for %@ have already been fulfilled
%s GetResultObjects Response, trying to handle callbacks again.
%s Missing references still not fulfilled, failing
%s Failed getting result objects, error %@ request Id %@
%s Canceling current request
%s Logging Cancel for %d seconds
%s Invoking request completion on request cancelation
%s Start sending metrics for %f seconds before shutting down...
%s Done sending metrics before shutting down.
%s Delaying shutdown block for %f seconds...
%s Shutting down session now...
%s Still active. Ignoring session shutdown request
%s Ignoring command with unknown refId %@ aceId %@
%s Searching callbacks for phone call command
%s Found phone call command
%s Call is already likely not checking again
%s No phone call command found
%s Ignoring unnecessary success command %@
%s Handling bundle response %@
%s Ignoring bundle response with no refId
%s %@ %@ %@
%s Ignoring callbacks in reply
%s We're in a callback context, asking callback manager for next commands
%s Sending reply even though callbacks exist
%s Handling service error %{public}@ for command %@
%s Response nor error was given, assuming failure and generating error for command %@
%s No reply required for command
%s Using first chance service %@ instead of originally found service %@
%s Dispatching command to service %@
%s Service reply for %@ %@ %@
%s Couldn't find service for %@ %@
%s Dispatching out of band service command %@ to service %@
%s Reply for out of band command %@
%s Got call state changed; call is in process: %d
%s Failing speech request on request completed since we never got a speech recognized
%s Request completed for id %@: %@
%s CommandFailed for refId: %@ reason: %{public}@
%s SpeechCommand failed
%s CommandIgnored for refId %@
%s holdToTalkThresholdInMilliseconds: %@
%s ignoring server configured HTT threshold
%s ResultCandidate for a different request. Ignoring.
%s ResultCandidate is out of scope in accept. Ignoring.
%s Accepted this ResultCandidate aceId: %@ refId: %@ with resultId %@
%s ServerEndpoint for a different request. Ignoring.
%s SpeechRecognized for a different request. Ignoring.
%s isEager %d
%s Ignoring Recognition, SpeechRecognized has already been received
%s SpeechRecognized is no longer valid after updating speech options
%s Got SpeechPartialResult for something other than our current speech command. Ignoring.
%s Ignoring Partial, SpeechRecognized has already been received
%s Partial result is no longer valid after updating speech options
%s Failure for a different request. Ignoring.
%s Recognition failed, but we're waiting to write an audio file. Don't cancel recording
%s Abort for a different request. Ignoring.
%s Got VoiceSearchPartialResult for something other than our current speech command. Ignoring.
%s Got voiceSearchFinalResult for something other than our current speech command. Ignoring.
%s Got suspendClientEndpointer for something other than our current speech command. Ignoring.
%s Got confirmEndpointRequest for something other than our current speech command. Ignoring.
%s Got serverEndpointFeatures for something other than our current speech command. Ignoring.
%s Got confusionNetwork for something other than our current speech command. Ignoring.
%s Got clientSetupInfo for refId %@. Ignoring. 
%s %@ %@ %d
%s Clearing speech delegate in recording completion
%s Ignoring session error since we're in a callback context
%s Ignoring session error (%@) because the speech manager is doing local speech recognition in dictation mode
%s Propagating session error because the speech manager is not doing local speech recognition or is not in dictation mode
%s Telling session not to retry because local dictation is active
%s Session is changing our request identifier from %@ to %@. Should not be called.
%s starting person dictation request
%s starting location dictation request
%s Sending %@ with origin: %@ source: %@
%s Skipped enable server endpointer command because _currentSpeechRequestOptions.useAutomaticEndpointing == NO
%s Sent enable server endpointer command.
%s Location manager says we need to send location for this request
%s Location manager updated location
%s Fingerprint only request not sending start speech
%s Secure offline request not sending start speech
%s Recording Info didn't change, not sending update audio
%s Not sending audio packet to session because it has already failed and local recognition has taken over
%s Ignoring prelistening speech data from %lf. Threshold is %lf
%s Post XPC event to notifyd: %s
%s Ignoring partial local recognitions because server results have arrived
%s Sending raw recognition to server %@
%s Phrases=<REDACTED>
%s Phrase[%lu]=%@
%s Utterance[%lu]=%@
%s Not handling phraseRecognition because this is a phoneme transcription request
%s Ignoring and canceling final local recognition because server results have arrived
%s Deferring final local recognition results for %f seconds while waiting for the server
%s Ignoring final local recognition because the previous request has already finished
%s Ignoring final local recognition because the server won the race
%s Giving up on final server recognition because local won the race
%s Local speech recognition failed, and so did the session: %{public}@
%s Ignoring local speech recognition failure because the session is still active: %{public}@
%s QuickStop: bargedInOverMediaPlayback = %d, bargedInOverSiriRequest = %d, bargedInOverSiriVoiceOutput = %d, dismissedFiringAlarms = %d, dismissedFiringTimers = %d
%s QuickStop: Dismiss assistant because the activation of the current request dismissed firing alarms / timers.
%s QuickStop: Dismiss assistant because the current request barged-in over a Siri request / voice output and interrupted it.
%s QuickStop: Dismiss assistant because media playback is stopped.
%s QuickStop: Nothing was or can be quickly stopped, let the server handle it.
%s called with nil command handler; returning
%s speech recognition processing may be active; waiting to finish UI command handling until it completes
%s %@ %@
%s language code changed from %@ to %@
%s language code %@ is not supported for this device
%s no need to language code to %@ becasue it is already set to %@
%s Keeping language code the same
%s output voice %@ is not supported for language code %@ for this device
%s %@, %@
%s SetRestrictionsThunk Invoked
%s _deviceIsLocked=%d AFHasUnlockedSinceBoot=%d ADVoiceDialingDisabledWhileLocked=%d _deviceIsShowingLockScreen=%d ADControlCenterDisabledWhileLocked=%d _isInStarkMode=%d _isInCarDNDMode=%d
%s Stripping %@ Restriction for CarPlay
%s configuration = %@, client = %@
%s delaying session end because there is an active request
%s ending session immediately
%s %p, _speechDelegate %p, _requestDelegate %p
%s Ignoring request to end session. Current client is %p
%s Asking the speech delegate to end session
%s Looking up and sending the SARequestCompleted callback for %@
%s %@ Event %zd
%s Asking to play recording start alert on prelistening continue
%s Pronunciation Context: %@ refId %@
%s Skipping dictation fallback code because override %@ has been set for keyboard %@
%s Dictation override %{public}@ is not in our supported list.
%s Trying to rollback a request, but don't have one
%s We're not the current delegate, but we have a speech completion. Will try to update in completion
%s Ignoring update speech options from invalid delegate
%s Skipped enable server endpointer command because (_currentRequest.aceId = %@) and (_speechManager.context.aceId = %@) mismatched.
%s Ignoring stop speech from invalid delegate
%s Ignoring cancel speech from invalid delegate
%s Requested command conflicts with existing: %@
%s Ignoring invalid ace command %@
%s Handling generic send commands
%s Handling generic server bound command
%s Handling generic client bound command
%s Don't know how to handle generic ace command %@
%s Performing noninterrupting commands %@
%s Ignoring early return flag for non interrupting request
%s Sending fetch supported languages completion
%s Failed getting deferred objects
%s Error disabling fides: %{public}@
%s Successfully disabled DES
%s Ignoring reschedule refresh request because assistant isn't enabled
%s Failed to handle remote request in %lfs
%s Failed to handle remote speech request in %lfs
%s Ignoring attempt to set the language based on current system config, because we already have a language code saved.
%s No language code saved, but Assistant is enabled - saving language: %@
%s %@
%s Ignoring queued language code: %@
%s Ignoring queued output voice: %@
%s Skipped sending metrics to server because metrics sender is disabled.
%s Skipped sending metrics to server because the device has not been unlocked since boot.
%s %p
%s Client disconnected, sanity checking
%s Client disconnected and no phone call underway, syncing if needed
%s Canceling session for shutdown
%s client = %@
%s Services %@
%s Preheating speech manager
%s Current delta from expected activation: %lf activation: %lf
%s Migrating assistantIdentifier
%s Migrating speechIdentifier
%s Found Predefined Server '%@' = %@
%s Bad server override %@
%s Using Server Override %@
%s Saving account info %@
%s ADPeerLocationRemote best location timer firing
%s starting location updates
%s Sending unsolicited location: %{private}@
%s acquiring location-in-use assertion
%s %{private}@ %@
%s stopping location updates
%s has active request; calling completion
%s releasing location-in-use assertion
%s no active request
%s updated location %{private}@
%s %{public}@
%s authorized with active request; starting location updates
%s not authorized with active request; failing with error
%s %{public}s
%s Ignoring unexpected event
%s Client missing entitlement %@
%s Tether attached %p
%s Message!
%s Clearing tether %p
%s Couldn't create bundle at URL %{public}@
%s regenerating bundle service cache due to version mismatch %@ %@
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s Stopwatch handler asked to handle request %@, but didn't know how
%s Couldn't create stats dir %{public}@
%s Error reading stats plist for %{public}@ %{public}@
%s Error serializing plist data for service %{public}@ %{public}@
%s Trying to mark command start for nil command
%s No start time for command %@ for service %{public}@
%s Can't mark response for nil command for service %{public}@
%s called with nil punchoutOutcome.
%s Nothing to decrypt
%s Decrypting %ld route IDs
%s Could not make data from string %@
%s Could not make a string out of data for key %@
%s Decrypted %ld route IDs
%s External Request connection missing entitlement
%s External Request Listener Error: %{public}s
%s Ignoring unexpected event type on External Request Listener
%s Unexpected external request message type %{public}lld
%s External Request peer error: %s
%s Setting TCC info %d for bundle %@
%s Shouldn't reach this method
%s Unsupported language code %@, but sending SAD anyway
%s Got updated assistant data for session %d!
%s Sending pending commands after SAD update
%s Session is active, clearing limbo now.
%s Still waiting on SAD, postponing clearing limbo.
%s Not waiting on SAD, clearing limbo now.
%s Sending pending dormant commands now that the session is no longer dormant for session %d
%s Setting dormant state for session %d to %@
%s Pending command because session is dormant for %d
%s Waking up dormant session because inopportunistic command needs to be sent.
%s %@ created local speech recorder %@
%s %@ created speech compressor %@
%s Dictation session did complete, enabling asset fetch in subsequent requests if needed
%s Assets for %@ already exist at %@
%s Error fetching assets for %{public}@: %{public}@
%s Started fetching assets for %@
%s On assistant enabling tried to fetch offline models, got %@ into %@
%s %@ created speech recognizer %@
%s Canceling local recognition because servers results have arrived.
%s ADSpeechManager no longer talking to delegate
%s Speech finished dropping callback
%s %@ %zd %zd %@
%s Invoking recording stopped completion
%s Could not start local speech recognition for %{public}@: %{public}@
%s Local speech recognition started for %{public}@
%s Not starting local recognizer: language %@, task %@, dictation capable %@
%s Ignoring tokens from previous recognizer
%s Processed %.2f
%s Ignoring phrases from previous recognizer
%s Ignoring completion from previous recognizer
%s Speech recognition encountered error: %{public}@
%s Invalidating local speech recognizer for finish
%s Preheating speech recognizer with state = %d
%s Begin preparing audio system with options %@.
%s End preparing audio system with audio session ID %tu and error %@.
%s End preparing audio system with audio session ID %tu
%s secureOfflineOnly is %d
%s Asked to start recording when we're already in state %{public}@
%s Not using local speech recognition for Siri because the kill switch is on
%s Doing local speech recognition for Siri
%s Not using local speech recognition for mode %ld, dictation language %@, dictationCapable %@
%s Inserting will start on speech failure
%s Not using local speech recognition for recorded %@
%s Canceling speech capture
%s Recording started canceling in record start completion
%s Canceling speech capture in completion
%s Recording failed to start, ignoring cancel in completion
%s Asked to cancel when we're in state %@
%s Stopping speech capture
%s Recording started stopping in record start completion
%s Stopping speech capture in completion
%s Recording failed to start, ignoring stop in completion
%s Error: asked to stop when we're in state %{public}@
%s Started, waiting for did start to stop recording then release session
%s Recording failed to start releasing session in completion
%s Recording, stopping record to release session
%s Stopping, waiting for did stop to release session
%s Asking AVVoiceController to release its audio session now
%s and we're idle
%s but we're NOT idle
%s Skipping local speech profile update because device doesn't support it
%s Skipping offline profile update because speech recognition is active for task %@
%s Could not read installed languages: %@
%s No offline dictation language enabled for syncing
%s Siri language is not installed for offline support (%@ = %@), looking for a fallback...
%s No viable offline dictation language for profile update
%s Skipping user profile update for %@ because it was last updated too recently (%@) and the update reasons (%@) are not immediate
%s Continuing user profile update for %@ because it was not updated recently (%@)
%s Continuing user profile update for %@ because update reasons were immediate (%@)
%s Skipping offline profile update because speech recognition has started for task %@
%s Failed to create user speech profile: %{public}@
%s User profile updated
%s Failed to create the sync flag for %@ at %@
%s Checking if route is hands free %@
%s Audio route changed %@
%s Mute state changed %@
%s Listening for audio route changes
%s Stopping listening for audio route changes
%s Listening for mute state changes
%s Stopping listening for mute state changes
%s Use device speaker for TTS preference changed!
%s *** Turning on data spinny
%s *** Turning off data spinny
%s Failed getting kern.boottime MIB with sysctlnametomib() %s
%s Failed getting kern.boottime with sysctl() %s
%s Failed getting kern.boottime with sysctlbyname() %s
%s Found user activity %@ with identifier %@.
%s Unable to find user activity with identifier %@
%s state = %@
%s %zd (%@) is not an expected state type and therefore not handled.
%s _currentIntent = %@
%s intent = %@, intentResponse = %@
%s donated interaction = %@ with error = %@
%s _currentUserActivity = %@
%s _currentUserActivity.interaction = %@
%s Adding %tu user activities...
%s Added user activity %@ with identifier %@.
%s Input route changed
%s Failed getting audio property %{public}.4s %{public}d
%s Failed getting audio property size %{public}.4s %d{public}
%s Failed registering for property listener %{public}.4s %{public}d
%s Setting up recording alerts for dictation
%s Done setting recording alerts for dictation
%s Setting up recording alerts for Siri
%s Done setting recording alerts for Siri
%s Trying to set record buffer duration to %lf
%s Failed setting record buffer duration. Duration is %{public}lf
%s Initalizing speech controller with context %@
%s Error initializing voice controller with context %@ %{public}@
%s Done initializing voice controller
%s Preparing CSSpeechController
%s Error setting up CSSpeechController %{public}@
%s Done preparing CSSpeechController
%s reason event %d
%s Really stopping recording
%s Someone else has already asked to stop recording.%@
%s Sending stop recording immediately because CSSpeechController isn't recording
%s Updating to post voice mode
%s Playing alert %zd
%s Checked audio logging limits, count = %d -> %d
%s info = %@
%s Did not create _audioLogggingFileWriter because fileLoggingIsEnabled = %d, canGetPCMStream = %d.
%s Configure _audioFileWriter, _audioLogggingFileWriter with recordSettings = %@
%s Prewarming audio session in speech controller
%s Done prewarm audio session in speech controller
%s Preparing instead of preheating since we're not in the default mode
%s Set Use Automatic Endpointing %d
%s Preparing speech capture for %@
%s Using Bluetooth audio analyzer style
%s Using driving audio analyzer style
%s Using voice trigger audio analyzer style
%s Using default audio analyzer style
%s Setting delayed start delay %lf
%s Asking CSSpeechController to startRecording with settings %@
%s Done asking CSSpeechController to startRecording
%s Could not set up recording, returning error and resetting voice controller %{public}@
%s Updated speech synthesis record from %@ to %@.
%s Fetching audio session ID...
%s Done fetching audio session ID %tu
%s Pending context reconfig to because we're recording.
%s Updating new speech context
%s Error setting current context %@ %{public}@
%s releaseAudioSessionBehavior = %s
%s Resetting to default audio context on session end
%s %lf %lf
%s (event = %zd, suppressAlert = %d)
%s (suppressAlert = %d)
%s clientConfiguration = %@
%s %zd
%s alertStartTime = %llu
%s Got a speech start failure after we already got audio buffers?!
%s success = %d, error = %@
%s isTwoShot = %d
%s Sending speech did start to delegate %@
%s Resetting VoiceController on startRecording failure
%s Synthesizing a didStart callback, on missing didStart
%s _recordingState %zd
%s Ignoring unexpected didStop callback while in state %zd
%s Explicitly playing %@ alert
%s Not explicitly playing alert
%s Forcing post voice update on recording end
%s Starting new recording for two shot mode
%s Failed starting recording for two shot mode
%s (hostTime = %llu, firstBufferTimestamp = %f)
%s context = %@
%s %ld
%s opType = %tu, reason = %tu
%s Unknown CSRequestOperationType (opType = %tu).
%s Ignoring startpoint from stale CSEndpointAnalyzer
%s Ignoring hard endpoint from stale CSEndpointAnalyzer
%s Ignoring hard endpoint because (endpointTime = %f, firstBufferTimestamp = %f, mostRecentTTSEndTimestamp = %f, extendedSuppressDuration = %f).
%s Overridding timeout and start point on timeout
%s (promptType = %zd, time = %f)
%s Fake two shot TTS prompt watchdog timer already exist, canceling it and creating a new one.
%s Performing fake two shot TTS prompt (%@)...
%s You should never reach here!
%s Fake two shot TTS prompt timed out (%@).
%s Fake two shot TTS prompt timeout is not handled due to context mismatch (fakeTwoShotPromptUUID = %@, _fakeTwoShotPromptUUID = %@).
%s Fake two shot TTS prompt called back (timestamp = %f, duration = %f, error = %@)
%s Fake two shot TTS prompt callback is not handled due to context mismatch (fakeTwoShotPromptUUID = %@, _fakeTwoShotPromptUUID = %@).
%s No endpoint yet, waiting
%s %lf
%s Eager results accepted: %d. Duration: %lf last duration: %lf
%s Got an enforce message without a current completion. Ignoring
%s duration %lf
%s Starting audio playback request %@...
%s Failed audio playback request %@ due to error %@.
%s Stopped audio playback request %@.
%s %@, error: %@
%s anchorsToSync: %@
%s Forcing a reset on key %@
%s Ignoring sync chunk for service %@ that's not our current service %@
%s Ignoring sync chunk for ID %@ that's not our current ID %@
%s Sync manager couldn't find connection for anchor key %{public}@. Moving on.
%s Preparing sync with ID %@
%s Anchors in queue: %@
%s Sync Manager isn't waiting on a continue, ignoring request
%s Continuing sync
%s Canceling sync for anchor %@
%s Ignoring sync cancel for anchor %@. Current anchor is %@
%s In progress verification has been reset
%s In progress sync has been reset
%s Too many plugins have timed out for sync, reset and try later
%s Setting activationMode %.4s
%s Requesting historical buffer of duration %lf seconds
%s Purging data from analytics store (%@)...
%s Unable to get file size of analytics store (%@).
%s Unable to get file attributes of analytics store (%@).
%s Purged data from analytics store (%@)...
%s Failed to purge data from analytics store (%@) due to error %@.
%s Resetting analytics store (%@)...
%s Reset analytics store (%@).
%s Failed to close database (%@) due to %@.
%s Failed to remove database (%@) due to %@.
%s Failed to remove database at path %@ due to %@.
%s Failed to open analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to perform integrity check on analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to remove database (retry %tu out of %tu) at path %@ due to %@.
%s Failed to prepare analytics database after %tu retries due to %@.
%s Failed to create '%@' table with error %@
%s Failed to begin a database transaction due to error %@
%s Inserting %tu event records...
%s Failed to insert event %@ into %@ table due to error %@
%s Failed to commit a database transaction due to error %@
%s Inserted %tu event records.
%s Failed to delete database records due to error %@
%s Failed to select database records due to error %@
%s Sent MRMediaRemoteCommandPause, got %@ %@
%s reporting success
%s hashedRouteUIDs = %@
%s Sent MRMediaRemoteCommandStop, got %@ %@
%s Ignoring %@ with aceId %@ because there is no completion handler. This command should only read state, and have no effect.
%s %@ %@ was not handled
%s Got %@ statuses
%s status: %@
%s Waiting for all commands to be sent
%s All commands %s
%s Got %@
%s Could not decrypt routeUIDs %@
%s Calling -[MPAVRoutingController fetchAvailableRoutesWithCompletionHandler:]
%s Got %lu routes
%s for %@ encryptedRouteID=%@
%s Skipping %@ because its routeUID (%@) isn't on our list
%s grabbed connection %@ from route %@
%s No connection for route %@ encryptedRouteID %@!
%s No service connection for command %@ identifier %@
%s Can't route to system service for command %@ identifier %@
%s Found service %@ for command %@ in domain %@
%s Service does NOT use AMOS for command
%s Services uses AMOS, but wants to intercept command
%s Service uses AMOS for command
%s Couldn't send SADOCommand %@ to service %{public}@
%s Unexpected response from service. Expecting %{public}@, got %{public}@ error: %{public}@
%s Retrieve looking in amos for key %@
%s Retrieve going to bundle for remaining identifiers %@
%s Unexpected count of retrieved objects: %@
%s Successfully retrieved object from service %@
%s Updated retrieved object to %@
%s Failed to retrieve object from service. status: %{public}d
%s Updating store object %@
%s Going to bundle for object update
%s Removing object with identifier %@ old identifier %@ from amos
%s Object not found in AMOS %@
%s Committing %@ with oldId %@
%s Keeping committed object around %@
%s We don't know how to generically punch out to domain objects. A non-ui plugin needs to handle this.
%s Unsuccessfully tried to handle non AMOS command as AMOS %@
%s Settings handler asked to handle request %@, but didn't know how
%s #CFLOW Plugin timeout is disabled, ignoring watch dog timeout for %@...
%s Response received after watchdog timeout: response=%@ error=%@
%s Trying to open URL %@
%s Success opening URL? %@
%s Response received after watchdog timeout Response=%@
%s Already have a log open, ignoring
%s Couldn't open file %{public}@
%s error removing file at path %{public}@ %{public}@
%s Logged speech file at path %@
%s Error opening speech log at URL %{public}@ %{public}s
%s buffer not big enough
%s Read incorrect number of bytes
%s Got alarm response %@ for request %@
%s Unable to fetch alarms with identifiers %@: %{public}@
%s Searching for alarm %@ in order to do an update
%s Asking to delete alarms with identifiers %@
%s Failed constructing URL identifier for %@
%s output voice changed from %@ to %@
%s no need to change output voice to %@ because it is already set to %@
%s Not updating auto-downloaded voice assets because the platform doesn't support TTS
%s Retrying naked commands %@
%s Redirecting %@ to %@
%s peer type %@ peer version %@
%s Starting connection for skipEdge is %d
%s Account is being destroyed use default connection policy and clear our dns settings.
%s Connection policy expired at %@; ignoring it
%s Connection policy hostname %@ does not match account hostname %@; ignoring policy
%s No custom connection policy; using default
%s Connection policy has no expiration date; ignoring it
%s Connection policy has no hostname; ignoring it
%s No cached validation data beginning eager auth
%s connectionType=%@
%s Received object %@
%s Ignoring connection close since we have an incoming retry
%s Connection closed %@
%s Connection closed with active request, treating as error
%s %{public}@ %{public}@
%s Not using a predefined server.
%s Error suggests bad connection policy; reverting to factory policy.
%s Got redirect %@ for %@
%s Ignoring redirect %{public}@ for %{public}@
%s Setting latestMappedRequestId from %@ to %@ 
%s Retrying %zd objects on session failure
%s No request Id in RetryManager.
%s Resetting retry manager
%s Not retrying shouldRetry %d retryableError %d
%s Session data has expired %@
%s Validity is valid for %d seconds %@
%s Remapping retry manager from %@ to %@
%s creating rollback request
%s Retrying after %lf seconds, now %lf error %@
%s Assistant needs destruction, sending destroy
%s Exceeded bad cached cert retry attempts, failing authentication
%s Sending request for certificate data
%s Have cached certificate data, preparing
%s Authenticator is still preparing, let's wait
%s Authenticator is prepared, but we still need session info
%s Authenticator is ready
%s Setting cached authentication data with duration %lf
%s We have no pending commands holding
%s Not continuing with authentication as session is already active
%s Session has already authenticated. Resetting authenticator to do it again.
%s Starting Session
%s Skipping authentication. Disabled or on simulator
%s Using cached validation data
%s Connection opened
%s Connection not opened yet, waiting
%s We've already authenticated, reset the authenticator since it's not needed anymore.
%s Unexpected refid in validation failed, ignoring
%s SASessionValidationFailed %{public}@
%s No certificate data in response trying anyway %@
%s Old session info response ignored
%s Saving new validity info since we're not currently authenticating
%s Assistant created response ignored
%s Assistant Loaded Version: %@
%s Assistant Loaded refId does not match our saved assistant command
%s Assistant Destroyed
%s Restarting connection because destroy came in during active request
%s Couldn't find the requested assistant %@; creating a new one
%s Assistant not ready.
%s Failed loading/creating assistant %@ elapsed time %lf
%s Retrying after assistant failure
%s Assistant failure (%{public}@). Limit reached, returning error
%s assistantId: %@ speechId: %@ with language %@
%s WiFi became available and we're not on a request restarting connection
%s We're in a request, we'll check for a wifi transition afterward
%s Clearing flag to switch to WiFi on request end
%s Asking delegate if we should restart on wifi
%s Switching to WiFi on request end
%s Canceling Connection Policy Blacklisting timer
%s Scheduling Connection Policy blacklisting
%s Connection Policy blacklisting timeout fired.
%s assistantId: %@ speechId: %@
%s Probing the connection
%s Failed to register for ringer switch state change
%s Couldn't load manager class %{public}@
%s Loading AB Bundle at path %@
%s Loaded AB Bundle %@
%s ACE domain signal request handler asked to handle request %@, but didn't know how
%s Already attaching to session!
%s Failed attaching to bt session %zd
%s %p %d
%s Failed getting device address from string %zd
%s Failed getting device from address %zd
%s %p for address %@
%s Got Ids vendorId %d productId %d
%s Created new request command group (%@).
%s Failure sending ace command to client %{public}@
%s Invoking request completion with UUID %@...
%s Invoked request completion with UUID %@.
%s Ignored invoking request completion because UUID mismatched. (_requestUUID = %@, requestUUID = %@)
%s commandGroup exists, waiting until commandGroup is done...
%s commandGroup is done, handling request completed with UUID %@...
%s commandGroup does not exist, handling request completed with UUID %@...
%s Sending intermediate error %{public}@
%s failed with Error %{public}@
%s failed registering for ringer state token %{public}u
%s ADShouldSpeak: %d Request Wants TTS: %d Server Wants TTS: %d Stark Mode: %d Car DND: %d Combined: %d
%s Sending should speak update: %@ to current client %@
%s Sending recording failed %{public}@
%s Sending recognition failed %{public}@
%s (_numberOfPresentedUIs = %zd)
%s Invoking overlapping request completion with UUID %@...
%s Invoked overlapping request completion with UUID %@.
%s Set new request UUID as %@.
%s Shouldn't have a pending request, continuing and canceling it now.
%s Ignoring due to id mismatch %zd != %zd
%s returning bundle reply %@
%s Got Broadcast Command on connection %@ %@
%s Sending context to tool %@
%s Entered group %@ for command %@.
%s Left group %@ for command %@ (signal = %zd).
%s sync now xpc activity handled
%s sync now xpc activity registered
%s Failed setting activity state to continue
%s Failed setting activity state to done
%s setting new peer fetch interval on initial checkin
%s Backing off to new interval %lld from %lld
%s Assistant is now enabled, clearing destroy job
%s Skiping daily FiDES evaluation because D&U is not allowed
%s Skiping daily FiDES evaluation because neither Siri nor Dictation are enabled
%s Starting daily FiDES evaluation
%s Daily FiDES evaluation successful
%s Daily FiDES evaluation failed: %{public}@
%s Got asked for %u packets, have %u
%s [%02u of %02u] Opus packet with %u bytes
%s AudioConverter is sad: 0x%{public}xd
%s Sending %tu packets
%s fetchedAudioState = %@
%s notification = %@
%s audioSessionID = %tu
%s fromAudioState = %@, toAudioState = %@
%s metrics = %@
%s offlineIdentifier = %@
%s muteMode = %zd
%s SASRecordingInfo.ringerSwitchOff = %d
%s audioAlertStyle = %zd
%s SASRecordingInfo.alertType = %@
%s firstBufferTimestamp (baseline) = %f
%s homeButtonDownTimestamp = %f
%s SASRecordingInfo.buttonDowntime = %llu
%s startRecordingTimestamp = %f
%s SASRecordingInfo.activationTime = %llu
%s SASRecordingInfo.zeroLatencyLaunch = %d
%s activationAlertStartTimestamp = %f
%s SASRecordingInfo.activationAudioAlertStartTime = %llu
%s SASRecordingInfo.activationHapticAlertStartTime = %llu
%s Recording performance numbers on NowPlaying updates for %g seconds
%s Got activity for app context %@ %@
%s Error getting current user activity uuid %{public}@
%s Error getting current user activity from uuid %{public}@
%s Found %tu unread messages
%s Couldn't get a domain object representation for message %{public}@
%s Failure querying for unread messages
%s Invalid notification, not sent to server. applicationID %@, displayName %@, bulletinID %@, date %{public}@
%s Sending notification %@
%s Marking message as read %@
%s Marking audio message as played %@
%s Failure querying for unread messages while acknowledging message.
%s Couldn't get a domain object representation for message %@
%s Failure querying for message by URL.
%s Failed to create queue request.
%s Got MRPlaybackQueueRef %@
%s No NowPlaying client to get a playback queue from. This just means there is nothing playing right now. Ignoring non-error.
%s Error getting playback queue %@
%s group=%p Error getting NowPlaying queue %@
%s group=%p contentItems has %lu items
%s group=%p previous: %@
%s group=%p next: %@
%s group=%p no contentItems 
%s group=%p lastActivationStoppedNowPlayingApp=%d
%s group=%p MRMediaRemoteGetNowPlayingApplicationPlaybackState gave us state %@
%s group=%p Treating kMRPlaybackStateInterrupted as %@
%s group=%p Got ApplicationDisplayID %@
%s group=%p didChange=%d queueState ID=%@
%s Missing kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey in notification
%s Bad NowPlaying Info, kMRMediaRemoteNowPlayingInfoUniqueIdentifier gave unexpected item of class %@,  %@
%s Bad NowPlaying Info, expected %@ for key %@ but got %@
%s No container info
%s infoToNowOffset = %g
%s playbackRate = %@
%s adjusted infoToNowOffset = %g
%s calculatedElapsedTime = %g
%s NowPlaying reports we are playing, but we have no ApplicationDisplayID for who is playing
%s We have a NowPlaying listeningToItem but no ApplicationDisplayID for it %@
%s Error retrieving the person record with identifier %@: %@
%s group=%p got NowPlaying info with %@ keys:
%s %p         %@ -> %@:
%s Ignoring non-string key %@
%s Processing kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-dictionary value for kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
%s Unexpected non-string value of class %@ for key %@ -- attempting to convert to string
%s Could not make safe value for key %@
%s Interrupting outstanding request for new request
%s AceId of RestartRequest is %@ requestId is %@
%s object is %@ %@
%s Can restart request if %@
%s Retrying full request
%s Show next event handler asked to handle request %@, but didn't know how
%s No metrics to send.
%s Attempted to send metrics when system is busy.
%s Attempted to send metrics when Assistant and Dictation are disabled.
%s Attempted to send metrics when session is inactive and active session is a requirement.
%s Sending metrics (%@:%@)...
%s Sending metrics (%@)...
%s Sent metrics (%@:%@).
%s Sent metrics (%@).
%s Failed to send metrics (%@:%@).
%s Failed to send metrics (%@).
%s NO (!assistantIsEnabled && !dictationIsEnabled)
%s NO (callIsLikely == YES)
%s NO (isInCall == YES)
%s NO (hasCurrentRequest == YES)
%s NO (hasActiveClients == YES)
%s YES
%s Local eager candidate log context: %@
%s Trying to commit nil request statistics metrics!
%s Trying to commit nil interaction metrics!
%s %@ %lf
%s limit = %f, requiresUnlimitedPower = %d, requiresActiveSession = %d
%s Skipped sending metrics to server because it is already sending.
%s Skipped sending metrics to server because the session is not active.
%s Done sending metrics to server.
%s Begin sending offline metrics...
%s End sending offline metrics.
%s Begin sending analytics event streams...
%s End sending analytics event streams.
%s Skipped sending analytics event streams to server because time limit is reached.
%s Skipped sending offline metrics to server because time limit is reached.
%s Attempted to send offline metrics when time limit is reached.
%s Attempted to send offline metrics when system is busy.
%s Attempted to send offline metrics when Assistant and Dictation are disabled.
%s Attempted to send offline metrics when the device is on battery.
%s Fetching next offline metrics...
%s Fetched next offline metrics. (offlineIdentifier = %@, metrics = %@)
%s No next offline metrics was fetched.
%s Attempted to send analytics event stream when time limit is reached.
%s Attempted to send analytics event stream when system is busy.
%s Attempted to send analytics event stream when Assistant and Dictation are disabled.
%s Attempted to send analytics event stream when the device is on battery.
%s Fetching analytics event stream UIDs...
%s Fetched %tu analytics event stream UIDs %@
%s Using prioritized event stream UID %@
%s Using current event stream UID %@
%s Fetching 128 events from event stream with UID %@ after timestamp %llu
%s Fetched %tu analytics events from event stream with UID %@ and timestamp in range [%tu, %tu].
%s Converting %tu analytics events to Events metrics...
%s Converted %tu analytics events to Events metrics %@
%s Failed to delete %tu sent analytics events from event stream with UID %@ and timestamp in range [%tu, %tu] due to error %@.
%s No analytics events was fetched from event stream with UID %@.
%s Failed to fetch analytics events due to error %@
%s No analytics event stream UIDs was fetched.
%s Failed to fetch analytics event stream UIDs due to error %@
%s Sending engagement feedback "%@" for aceId %@
%s Unexpected response %@
%s _networkURL is set to nil
%s Already establishing peer streams!
%s Ignoring completion from stale provider
%s Error: %{public}@
%s Peer Provider open complete
%s Bad Peer Header
%s Read Peer Header %@ %@ %d
%s Peer wants to use POP, but NSP is not enabled
%s Already %@ peer streams
%s Already %@ network connection
%s %@ %@ %d %d
%s Falling back
%s Using fallback path, but creating new safety net
%s Will open stream with initial payload length %tu
%s opening %zd
%s open complete %zd
%s sequence number %zd doesn't match current %zd. Ignoring
%s Provider doesn't match our current provider. Ignoring
%s We no longer care about the streams we opened here
%s Stream opened with initial payload length %tu, networkOutputBuffer length %tu
%s NetworkOutputBuffer has been reset; initial payload set on this pair of streams is no longer valid
%s Waiting for peer header before restarting peer streams
%s Stale network timer firing
%s Closing potentially stale network streams
%s Network Provider
%s Peer Provider
%s Unexpected %@
%s read %tu bytes
%s error: %@
%s read peer header %@ pop %d reconnect %d
%s HTTP Header is complete
%s HTTP Header is not complete
%s Establishing network connection
%s Waiting for network connection
%s Wrote: %tu
%s zero length data
%s read: %tu
%s Error deregistering for power notifications %{public}d
%s Couldn't decode Speex / Opus buffers for speech log at URL %{public}@
%s Simulating immediate speech capture
%s Simulating buffered speech capture, speech packets sent every %f seconds
%s %d %@
%s Connection closed before opening
%s Got an invalid socket
%s Closing valid socket due to other error before setup complete
%s Setting refId to %@ from session request %@
%s Adding flowCommand %@
%s missingReferences %@
%s Error handling %@. %@
%s Key-value count mismatch %zd!=%zd
%s SKIP: unexpected value to set. Class=%@
%s %@:%@ %@ => %@
%s SKIP: invalid store for entry %@. %@
%s Layout changed to: %@
%s unknown response %@
%s Dispatching diagnostic request: %@
%s Could not complete %@: %@/%@
%s Completed %@: %@
%s Error during NACInit %{public}d
%s Got context %p from NACInit
%s Disposing request data failed %{public}d
%s NACKeyEstablishment error %d
%s NACSign error %{public}d
%s Error disposing validation data %{public}d
%s Error destroying NACContext %{public}d
%s Ignoring request to prepare state %d
%s Beginning eager NACInit
%s Not observing call state
%s Starting observing call state
%s Application %@ does not have access to %@, removing %@ from the intent node
%s Fetching current snapshot...
%s Fetched current snapshot %@.
%s Fetching snapshot at system uptime %f...
%s Fetched snapshot %@ at system uptime %f.
%s Dismissing firing alarms and timers...
%s Dismissing firing alarms...
%s Dismissing firing timers...
%s Dismissing with options %tu...
%s Dismissed firing alarms.
%s Dismissed firing timers.
%s No firing alarm was dismissed.
%s systemUptime = %f
%s No snapshot was tracked.
%s Found snapshot %@ at system uptime %f.
%s No snapshot found at system uptime %f.
%s options = %tu
%s Fetching alarms for dismissal...
%s Fetched alarms %@ for dismissal.
%s firingAlarmIDs = %@
%s Dismissing firing alarm with ID %@...
%s Dismissed firing alarm with ID %@.
%s Unable to dismiss the firing alarm with ID %@ due to error %@.
%s No alarm is firing, therefore no alarm will be dismissed.
%s Unable to fetch alarms for dismissal due to error %@.
%s Fetching timers for dismissal...
%s Fetched timers %@ for dismissal.
%s firingTimerIDs = %@
%s Dismissing firing timer with ID %@...
%s Dismissed firing timer with ID %@.
%s Unable to dismiss the firing timer with ID %@ due to error %@.
%s No timer is firing, therefore no timer will be dismissed.
%s Unable to fetch timers for dismissal due to error %@.
%s depth = %zd
%s Attempt to end update without a balanced begin update.
%s systemUptime = %f, modificationDate = %@
%s Commit new snapshot %@.
%s No change since last snapshot %@.
%s alarmID = %@
%s alarmID = %@, error = %@
%s alarms = %@
%s Rejected updating alarm %@ because the tracked alarm %@ is more recent.
%s alarmIDs = %@
%s error = %@
%s timerID = %@
%s timerID = %@, error = %@
%s timers = %@
%s Rejected updating timer %@ because the tracked timer %@ is more recent.
%s timerIDs = %@
%s %@ handling %@
%s No transformed requests returned from request transformer %@ for command %@
%s Got response %@ (error=%@) for command: %@, handled by service: %@
%s begin flush events
%s begin flush events (pid = %zd)
%s end flush events (pid = %zd)
%s end flush events
%s No events to unstage.
%s Saving %tu events to the analytics store...
%s Saved %tu events to the analytics store.
%s Failed to save %tu events to the analytics store due to error %@.
%s Grouping Depth: %zd -> %zd
%s Attempted to suspend events staging while already suspended.
%s Attempted to resume events staging while not suspended.
%s Start house keeping timer for %f seconds. (Grouping Depth: %zd)
%s Stop house keeping timer. (Grouping Depth: %zd)
%s Grouping Depth: %zd
%s Buddy is %@
%s Buddy is now %@
%s unable to obtain reference to Address Book: %{public}@
%s Got context for pid %zd
%s %s push context for %s %zd
%s Push context time out for pid %@
%s Optimistically trying eager fetch again on wake up timeout after socket success
%s Denying optimistic retry as we haven't vended socket since the last time.
%s Canceling optimistic socket fetch since we already have a _deviceConnection
%s Already have valid socket, returning immediately
%s Already getting device socket, waiting for completion
%s Asking for socket now
%s No Paired device returning immediately
%s no nearby device; returning immediately
%s got device connection completion for identifier %@ with error=%{public}@
%s got device connection completion for %@
%s device connection was closed while we were getting socket (expected %@; found %@); returning an error
%s Optimistically trying eager fetch again on socket success after wake up timeout
%s Not completing socket fetch since we have a new one outstanding
%s Ignoring close request since current streams have not been vended
%s Ignoring close request because connection %p did not open current stream %p
%s Wake up message failed %{public}@
%s Sending getRemoteMetrics request for id %@
%s Metrics response timed out
%s Reestablish message failed %{public}@
%s %@ %@ %@ %@
%s type = %d
%s Don't know how to make request for %d
%s Error sending metrics response %{public}@
%s Current Stream Identifier %@ Remote Stream Identifier %@
%s Eagerly getting device socket
%s Nearby device disappeared, closing cached streams
%s No completion, closing down.
%s No current IDS device connection
%s Performing shift from location: %{private}@
%s Using unshifted location because location shift failed due to error: %@
%s Stopping location monitoring
%s Canceling location timer
%s Scheduling location timer for %lf
%s Location timer firing
%s Starting location monitoring
%s Should send location for desired accuracy %lf %@
%s Asking for location from peer
%s Received location from peer: %{private}@
%s Received empty location response from peer
%s Requesting best location
%s %{private}@
%s CLAuthorizationStatus changed %d isEnabled %@
%s Location Services Disabled
%s Location Services Denied for assistant
%s Using cached location
%s No cached location, waiting for first update
%s Acquiring location-in-use assertion for reason: %@
%s creating location-in-use assertion
%s Releasing location-in-use assertion for reason: %@
%s nilling out reference to location-in-use assertion
%s Ignoring invalid anchor from server: %@
%s Queuing anchors from %@ because we are already syncing; active request: %@
%s Malformed app source - no clientIdentifier: %@
%s Error finding all Siri Extensions %{public}@
%s No paired watch found or unable to retrieve installed watch applications: %{public}@
%s Asking for anchor keys %@
%s Not forcing a reset since we're alreay in the middle of a sync. Wait and try again
%s Forcing a reset sync
%s Waiting for sync queue to start sync
%s Starting sync %@ for reasons %@
%s Resuming SyncAnchorsQueue
%s will reference promise %@: %d
%s Got snapshot for %@: %@
%s %@ isn't the get anchors response we were expecting. getAnchorsRequest:%@
%s Got server side sync data: %@
%s Server is done sending sync data
%s Sync Verification request %@ is enqueued; ignoring %@
%s Already verified sync data over the last 24 hours, ignoring
%s keys: %@
%s Sending checksums for keys: %@
%s Nothing to sync
%s Ignoring request to sync using unsupported language %@
%s Not syncing %@ because there's no sync plugin for it
%s Don't know how to create a transcription result for %@
%s Unable to build metrics out of no event records.
%s Dropped %tu events because no timings can be extracted from the events.
%s No OTT-model representation for %@
%s No OTT-request representation for %@
%s Alarm handler asked to handle request %@, but didn't know how
%s Ran an analysis very recently ignoring
%s Starting analysis for url %@
%s Starting analysis for request url %@
%s Starting analysis for retry success for url %@
%s analysis connection failure %{public}s
%s Reuse existing session %@ from reusable session pool.
%s Create new session %@.
%s Evict %tu sessions from reusable session pool.
%s Reusable session pool is already empty.
%s audioPlaybackSession = %@
%s audioPlaybackSession = %@, error = %@
%s Add successfully stopped session %@ to reusable session pool.
%s Malformed info plist value for key %{public}@ in bundle %{public}@
%s Deferring context clearing until we have a valid connection for %@
%s no bundleID!
%s got %@ items for %@ from %@
%s Vocabulary updates are disabled for %@, acting as-if there are no changes.
%s %{public}@ is not allowed to sync user vocabulary of type %{public}@
%s Posting sync notification for reason: %@
%s Ignoring attempt by %{public}@ to update %{public}@
%s Removed all local user-vocabulary for %{public}@
%s User-vocabulary updates are throttled for %{public}@ not pushing delete
%s Ignoring attempt by %{public}@ to request Siri authorization while not in the foreground
%s No request delegate to handle command
%s Timer handler asked to handle request %@, but didn't know how
%s Resetting sessions due to hostname change
%s Setting new language code from cloud data
%s Not setting language code due to previous mismatch
%s Request success %d
%s %@ delivered to the wrong service
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Error finding extension for prewarming: %@
%s Nil extension returned during prewarming.
%s Error on prewarm extension request: %@,  %@
%s Prewarmed extension: %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s Error reaching vendor remote %{public}@
%s Extension %@ is being debugged
%s Waiting indefinitely for intent: %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Pausing request timer %@
%s Resuming request timer %@
%s Extension exited unexpectedly
%s Intent handling already timed out, ignoring extension response %@
%s Using the current transaction %@ because the intent is nil.
%s Using the current transaction %@ because the intent identifier is nil.
%s Replacing the current transaction %@ because the intent identifier is %@.
%s intent.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s intentResponse.backingStore = %@
%s Error trying loading image for intent:%@ image:%@ %{public}@
%s Image caching timed out for intent:%@
%s Got error when vendor remote is trying to handle intent %@: %{public}@
%s Got error when application is trying to handle intent %@: %{public}@
%s No application id was found to handle intent %@
%s intent.backingStore = %@, transaction = %@
%s Couldn't find current user activity in transaction %@, creating a fallback one now...
%s userActivityIdentifier = %@, transaction = %@
%s intent = %@
%s appList = %@
%s applicationIdentifier = %@, userActivity = %@
%s Unable to launch the app due to missing application identifier.
%s containingAppProxy = %@
%s shouldLaunchInBackground = %d
%s Can't open user activity %@ for AppProxy %@, falling back to shallow app launch
%s launchOptions = %@
%s Failed to shallow launch %@
%s Shallow launched %@
%s Successfully launched %@ with NSUserActivity with activityType: %@ and userInfo: %@
%s Failed to launch %@ with error %@
%s timed out waiting on CKShouldShowPreviewOnLockscreen().
%s Unable to find offline metrics plist path at path %@.
%s Unable to read offline metrics plist file at path %@.
%s Unable to initialize offline metrics plist from file at path %@ due to error %@
%s Unexpected type of initialized offline metrics plist %@.
%s Unable to create SAMetrics object from offline metrics plist %@.
%s Unable to create directory at path %@ due to error %@.
%s Unable to remove file at path %@ due to error %@.
%s Offline metrics plist file already exists at path %@.
%s Unable to serialize offline metrics plist %@ due to error %@.
%s Unable to write to offline metrics plist %@ to path %@ due to error %@.
%s Unable to exclude offline metrics plist file at path %@ from backup due to error %@.
%s offlineIdentifiers += %@
%s Unable to remove metrics plist file at path %@ due to error %@.
%s offlineIdentifiers -= %@
%s Unable to remove directory at path %@ due to error %@.
%s offlineIdentifiers = %@
%s app (%@) can be launched - filtering
%s app (%@) can not be launched due to '%@' - bailing
%s Found %tu apps matching name %@: %@
%s Dictation transaction ended in cancel
%s Dictation transaction ended in remote recognition
%s Dictation transaction ended in local recognition
%s Utterance detection for live recognition not yet supported; disabling. <rdar://problem/23691545>
%s Called from outside of an XPC connection
%s Connection (%{public}@) requires entitlement for pre-recorded dictation
%s %@ raw eager candidate: %@
%s Connection (%{public}@) cannot use pre-recorded dictation; needs dictation prerecored entitlement or speech recognition entitlement
%s Connection (%{public}@) cannot use pre-recorded speech recognition; cannot start from the background
%s Resetting %@ session with Id %@
%s Started a network session with id %@, count = %tu
%s Started a local session
%s Starting sessions and make quiet: %d
%s shared user identifier changed to %@
%s language code changed to %@
%s Canceling connection due to power change notification %@
%s Observe iTunes library changes
%s Stop observing iTunes library changes
%s Command %@
%s Session %@ wins with reason %@ preferred %d
%s holdTime is %d
%s Restarting timer as there is no winning session yet
%s We have results from preferred session. Evaluate.
%s Started queueing result objects
%s Command is %@ and %d
%s Destructive command with no RefId. File bug.
%s Cannot remap to other sessions with refId %@
%s Out of band destructive commands with %@ refId
%s (refId %@) causing us to cancel other session request (refId %@)
%s Session %@ wins by default.
%s shouldContinue is %d
%s Session will start connection
%s Session did open connection with type %d
%s All sessions active now.
%s Dropping command not from winning session.
%s Sending CommandFailed as command required response.
%s Session %@ wins with command %@
%s Ignoring as the winner has been chosen already.
%s Session received error but other active sessions present. Ignoring error %@ %d
%s Session log visible request failure
%s Session %@ connection did reset
%s Session should attempt retry
%s Request Id is %@ and oldSessionRequestId is %@ newSessionRequestId is %@
%s Proxied map is %@ reverse Proxied map is %@
%s Session did create assistant
%s Session will retry on error
%s Session begin retry preferring WWAN
%s Setting RequestId to %@
%s Bounce back command is %@
%s Final speech recognition arrived
%s session %@ cannot handle request or has non null refId
%s command %@ filtered for session %@
%s not sending command %@ to session %@
%s command %@ does not belong to session %@
%s Request Id %@ for %@ session with Id %@ has proxied request Id %@
%s Previous winner session %@ reused for current request %@
%s Session %@ is active or is in active retry
%s Siri Mini cannot be started for connection mode %@ language %@
%s Siri Mini not enabled
%s Removing key %@
%s Removing matching request Id %@
%s Reset winning session Id %@
%s Siri Mini speech recognized called before sessions were set up
%s Filtering SpeechRecognized from Siri Mini as %@ is the winner
%s Will call xpc_transaction_end()
%s Did call xpc_transaction_end() with new XPC transaction count %zd
%s (oldState = %zd, newState = %zd)
%s Will call xpc_transaction_begin()
%s Did call xpc_transaction_begin() with new XPC transaction count %zd
%s will call xpc_transaction_begin()
%s Initial fetch took too long, timing out.
%s Manually requesting assistant data update
%s No actual change, ignoring me card change notification
%s Updating assistant data for me card change notification
%s Current store front has changed to %@; updating assistant data
%s Not generating assistant data because we don't have some necessary cached data
%s Generating assistant anchor values %@
%s Updating country configuration for assistant data
%s Retrieving best available voice asset for voice info %@...
%s Retrieved best available voice asset %@ for voice info %@.
%s Cached voice for assistant data updated from %@ to %@.
%s Cached voice for assistant data is still %@.
%s Unable to get store front identifier: %@
%s No store front identifier available
%s VoiceOver status changed, updating assistant data
%s Don't know how to make a request for this info %@ %@
%s Don't know how to set push off request paylaod
%s No place to send this
%s Failed sending message type %d %{public}@
%s %@ %{public}@
%s Type %d from %@. Incoming %@ Outgoing %@ Expects Response %d
%s Response class is %d doesn't match %d
%s Handling response of type %d
%s Completing request
%s %zd responses remaining
%s activationEventTime = %f
%s Dispatching phone search for overridden application context %@
%s Phone search reply for %@ %@ %@
%s Time from Activation(%zd) to recording was %3.3fs
%s UsefulUserResult (%{public}f) should happen after Baseline (%{public}f)
%s No baseline time set for successful request metrics
%s has %ld settings, but can only handle one. Dropping all but the first on the floor.
%s has %ld setting changes, but can only handle one. Dropping all but the first on the floor.
%s vibration state fetched from CFPreferences is NULL, using On as default value
%s sessionUUID = %@
%s Can not find an active session
%s Can not find an active session with UUID %@
%s Beginning dictation transcription XPC transaction because %@
%s Beginning dictation audio file XPC transaction because %@
%s Ending dictation transcription XPC transaction because %@
%s Ending dictation audio file XPC transaction because %@
%s Ignoring App notification for placeholders
%s Ignoring App notification for forced update
%s Ignoring CK notification because there's no correction profile change
%s User hasn't used Siri or dictation in the past %tu days, not syncing for %@
%s Couldn't find keychain value %@ for account %@ %{public}zd
%s Couldn't delete value %@ from keychain for account %@ %{public}zd
%s Couldn't update value %@ from keychain for account %@ %{public}zd
%s Received -logConnectionOpenWithConnectionType: with no corresponding -logConnectionStart. Unable to determine how long it took to open the connection.
%s Received -logVoiceRecordingEnd with no corresponding -logVoiceRecordingStart. Unable to determine how long voice recording lasted.
%s Received -logVoiceSendEnd with no corresponding -logVoiceSendStart. Unable to determine how long voice transfer lasted.
%s Received -logSpeechRecognized with no corresponding -logVoiceRecordingEnd. Unable to determine duration since voice recording completed.
%s Received -logSpeechRecognized with no corresponding -logVoiceSendEnd. Unable to determine duration since voice send completed.
%s Unable to submit AWD metric 0x%lx
%s Hot-ship metric 0x%lx does not respond to -setTimestamp:. Will not set timestamp.
%s request = %@
%s Ignored because the session is already active.
%s Ignored because the audio player is already playing.
%s Creating audio player...
%s Failed to create audio player due to error %@.
%s Created audio player %@.
%s Reusing audio player %@...
%s Preparing audio player %@ to play...
%s Failed to prepare audio player %@ to play.
%s Prepared audio player %@ to play.
%s Asking audio player %@ to play...
%s Failed to play audio player %@.
%s Started playing audio player %@.
%s request = %@, immediately = %d
%s Stopping audio player...
%s Ignored because there's no audio player to stop.
%s _request = %@
%s Ignored because there's no audio player to pause.
%s _request = %@, shouldResume = %d
%s Ignored because there's no audio player to resume playing.
%s request = %@, error = %@
%s Ignored because there's no audio player to destroy.
%s request = %@, player = %@, success = %d
%s request = %@, player = %@, error = %@
%s Settings is fetching supported languages
%s On dictation enabling tried to fetch offline models, got %@ into %@
%s Shutting down at the request of settings
%s Got sync command on connection %@
%s Got sync finished notification %@
%s Got sync verification finished notification %@
%s Sync Verification: domain objects in toRemove list for sync verification
%s with chunk info %@
%s Sync verification got domain object with no identifier %@
%s Error getting file path from provided file handle; will create our own path and handle
%s Failure disposing audio file %{public}d
%s Error removing item at URL %{public}@
%s Configuring with asbd %.4s
%s Creating audio file at URL %@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s No file url on flush
%s Failed opening fd for flushed audio file %{public}s
%s inASBD->mChannelsPerFrame = %tu
%s Error getting format info for type %{public}.4s %{public}.4s
@16@0:8
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@16@24
v32@0:8@16^{NSMutableDictionary=#}24
^{NSDictionary=#}24@0:8@16
^{NSDictionary=#}32@0:8^{NSDictionary=#}16@24
v24@0:8^{NSDictionary=#}16
v16@0:8
^{NSDictionary=#}
@"NSObject<OS_dispatch_queue>"
v24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv24@0:8@?16
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@32
Vv24@0:8@16
Vv36@0:8@16@24B32
Vv32@0:8@16@24
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv32@0:8@16@?24
Vv24@0:8@?<v@?>16
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv36@0:8@"AFDictationOptions"16@"NSString"24B32
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv24@0:8@"NSString"16
Vv24@0:8@"NSError"16
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv28@0:8@16B24
Vv20@0:8B16
Vv44@0:8@16B24@28@?36
v32@0:8B16B20@?24
Vv28@0:8B16@?20
Vv40@0:8@16@24@?32
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv24@0:8@"NSArray"16
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv32@0:8@"NSString"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv40@0:8@"NSString"16@"NSData"24@?<v@?@"NSData"@"NSError">32
Vv24@0:8@"NSURL"16
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSArray"@"NSArray">32
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv28@0:8B16@?<v@?@"NSError">20
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?B>32
v24@0:8@?16
v24@0:8@?<v@?q>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
d16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v36@0:8^@16^@24i32
v28@0:8@16B24
v24@0:8d16
@"NSXPCListener"
@"NSObject<OS_xpc_object>"
@"ADExternalRequestListener"
@"ADClientLiteListener"
@"ADSiriTetherListener"
@"NSMutableSet"
@"ADSiriConnectionRemote"
@"ADSharedDataRemote"
@"ADPeerLocationRemote"
@24@0:8^{_NSZone=}16
v20@0:8B16
v20@0:8I16
v24@0:8Q16
@24@0:8Q16
I16@0:8
@"NSString"
@"NSMutableArray"
{?="firstByteReadInterval"b1"openInterval"b1"pingMean"b1"rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"tuscanyConnectionDelay"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"attemptCount"b1"connectedSubflowCount"b1"connectionFallbackReason"b1"metricsCount"b1"pingCount"b1"primarySubflowSwitchCount"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"subflowCount"b1"synRetransmits"b1"unacknowledgedPingCount"b1}
v40@0:8@"ADPeerConnection"16@"PBCodable"24@?<v@?@"PBCodable"@"NSError">32
v28@0:8@"ADPeerConnection"16B24
v24@0:8@"ADPeerLocationPolicy"16
@24@0:8@16
@"<ADPeerLocationConnectionDelegate>"
@"ADPeerConnection"
@"ADPeerLocationPolicy"
@"ADSharedData"
@112@0:8B16B20B24q28@36@44@52I60I64@68d76d84d92@100B108
@28@0:8B16@20
q16@0:8
@"<ADBluetoothDevice>"
@"NSDictionary"
v32@0:8@"SABaseClientBoundCommand"16@?<v@?@"AFSiriRequest">24
@40@0:8@16@24@32
@"<SAAceCommand>"40@0:8@"AFSiriResponse"16@"NSError"24@"SABaseClientBoundCommand"32
@24@0:8q16
@"AFVoiceInfo"
@"<ADSessionLocalConnectionDelegate>"
v40@0:8@16^@24^@32
@?16@0:8
@"AFRequestInfo"
Vv20@0:8i16
Vv28@0:8@16i24
Vv28@0:8@"NSData"16i24
Vv24@0:8@?<v@?@"NSData">16
v24@0:8^{AudioStreamBasicDescription=dIIIIIIII}16
@"NSXPCConnection"
@"<ADAcousticFingerprinterDelegate>"
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{OpaqueAudioConverter=}
Vv56@0:8@16@24@32@40@?48
Vv48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSDictionary"@"NSArray"@"NSError">40
Vv56@0:8@"NSString"16@"NSString"24@"NSUUID"32@"AFSyncInfo"40@?<v@?>48
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"AFSyncSnapshot">40
Vv32@0:8@"NSString"16@"NSString"24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?>32
Vv72@0:8@16@24@32@40@48@56@?64
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv24@0:8@?<v@?B>16
Vv32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@72@0:8@16@24@32@40@48@56@64
@24@0:8@?16
@32@0:8@16@24
v40@0:8@16@?24@?32
@"ADServiceStatistics"
@"<ADServiceConnectionDelegate>"
@"ADServiceConnection"
@"NSMutableDictionary"
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v48@0:8@16@24@32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@36@0:8@16^?24B32
@32@0:8@16^?24
v40@0:8@16#24@?32
v48@0:8@16#24d32@?40
v48@0:8@16#24B32B36@?40
v64@0:8@16#24B32d36B44B48B52@?56
v32@0:8@16^?24
v40@0:8@16@24@32
@"IDSService"
@"<ADPeerConnectionDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@"NSDictionary"16
@32@0:8@"NSDictionary"16@"<AceContext>"24
@"NSMutableDictionary"16@0:8
v40@0:8@16@24d32
v32@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24
v40@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24d32
v32@0:8@"ADSessionLocalConnection"16@"AceObject"24
v24@0:8@"ADSessionLocalConnection"16
v32@0:8@"ADSessionLocalConnection"16@"NSError"24
@56@0:8@16@24@32@40@48
v28@0:8B16@?20
@"ADSessionLocalConnection"
^{__CFDictionary=}
@"AFExperimentContext"
v32@0:8@16d24
v24@0:8@"NSArray"16
v24@0:8@"SASyncChunk"16
v24@0:8@?<v@?@"NSArray">16
Vv36@0:8@16B24@?28
Vv36@0:8@"SABaseCommand"16B24@?<v@?B@"NSError">28
v28@0:8B16@20
v24@0:8@"AceObject<SAAceCommand>"16
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>">24
v28@0:8B16@"NSError"20
v24@0:8@"NSError"16
@"NSObject<OS_dispatch_group>"
@"<AFClientLiteClientCommandHandling>"
@48@0:8@16@24@32@40
v24@0:8@"NSString"16
@"NSArray"16@0:8
v36@0:8@16@24B32
v48@0:8@16@24@32d40
v32@0:8@"ADSessionManager"16@"AceObject<SAAceCommand>"24
v36@0:8@"ADSessionManager"16@"NSError"24B32
B32@0:8@"ADSessionManager"16@"NSError"24
v24@0:8@"ADSessionManager"16
B24@0:8@"ADSessionManager"16
@"NSArray"24@0:8@"ADSessionManager"16
v40@0:8@"ADSessionManager"16@"NSString"24@"NSString"32
v28@0:8@"ADSessionManager"16B24
v48@0:8@"ADSessionManager"16@"NSString"24@"NSString"32d40
v32@0:8@"ADSessionManager"16@"NSError"24
v52@0:8@16d24B32@36@44
v48@0:8@16@24d32q40
v32@0:8@16f24f28
v64@0:8@16q24q32q40@48@56
v40@0:8@16d24@32
v48@0:8@16q24@32@?40
v32@0:8@"ADSpeechManager"16@"ADRecordingInfo"24
v52@0:8@"ADSpeechManager"16d24B32@"AFXPCWrapper"36@"NSString"44
v40@0:8@"ADSpeechManager"16@"ADRecordingInfo"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSArray"24d32q40
v40@0:8@"ADSpeechManager"16@"NSData"24d32
v24@0:8@"ADSpeechManager"16
v32@0:8@"ADSpeechManager"16f24f28
v64@0:8@"ADSpeechManager"16q24q32q40@"CSEndpointerMetrics"48@"NSString"56
v32@0:8@"ADSpeechManager"16@"NSString"24
v40@0:8@"ADSpeechManager"16@"NSError"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSFileHandle"24@"NSError"32@"NSString"40
v40@0:8@"ADSpeechManager"16@"NSString"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"NSArray"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechRecognition"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechPackage"24@"NSString"32
v48@0:8@"ADSpeechManager"16@"NSError"24@"NSString"32@"NSDictionary"40
v40@0:8@"ADSpeechManager"16d24@"NSString"32
v48@0:8@"ADSpeechManager"16q24@"NSString"32@?<v@?dd@"NSError">40
v28@0:8@"ADSpeechManager"16B24
v32@0:8@"ADLocationManager"16@"SASetRequestOrigin"24
v32@0:8@"ADUIService"16@?<v@?>24
v48@0:8@16@24@32@?40
v32@0:8@"ADExtensionService"16@"INImage"24
v32@0:8@"ADExtensionService"16@"NSString"24
v40@0:8@"ADExtensionService"16@"NSString"24@"NSError"32
v48@0:8@"ADExtensionService"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v32@0:8@"ADAudioPlaybackService"16@"AFAudioPlaybackRequest"24
v40@0:8@"ADAudioPlaybackService"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@?16@24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v24@0:8B16B20
v40@0:8@16d24@?32
v36@0:8d16B24@?28
v40@0:8q16@24@?32
v56@0:8@16@24@32B40B44@?48
v44@0:8@16B24@28@?36
v64@0:8@16@24@32@40@48@?56
v60@0:8@16B24@28@36@44@52
v44@0:8@16@24B32@?36
v36@0:8@16B24@28
v32@0:8q16@24
v28@0:8B16B20B24
v44@0:8d16B24B28B32@?36
@"<ADCommandCenterClient>"
@"<ADCommandCenterRequestDelegate>"
@"<ADCommandCenterSpeechDelegate>"
@"ADUIService"
@"ADAccount"
@"ADSessionManager"
@"ADDiagnosticsManager"
@"ADSpeechManager"
@"ADServiceManager"
@"ADDomainObjectCache"
@"ADResultObjectCache"
@"ADLocationManager"
@"ADMotionManager"
@"ADRemoteRequestHelper"
@"ADRemoteSpeechRequestHelper"
@"ADAudioPlaybackService"
@"AFSpeechRequestOptions"
@"SASStartSpeech"
@"SABaseCommand"
@"SASPronunciationContext"
@"AFClientConfiguration"
@"ADCallObserver"
@"NSUUID"
@"NSObject<OS_os_transaction>"
@"ADClockService"
@"ADRequestStatistics"
@"ADOfflineMetricsManager"
@"ADContextManager"
@"SAClearContext"
@"ADSyncManager"
@"<ADCommandCenterSyncDelegate>"
@"ADSyncVerificationHelper"
@"ADSyncDeepVerificationManager"
@"ADAcousticIDHelper"
@"NSObject<OS_dispatch_source>"
@"ADSharedDataConnection"
@32@0:8q16@24
@"NSData"
@"NSDate"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8q16
@"CLLocationManager"
S16@0:8
v32@0:8@16q24
^{NSMutableDictionary=#}16@0:8
^{NSMutableDictionary=#}
@32@0:8@16q24
@"<ADService>"
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
i24@0:8@16
v32@0:8@"ADAssistantDataManager"16@"SASetAssistantData"24
i16@0:8
v20@0:8i16
@"SiriCoreConnectionType"
@"<ADSessionDelegate>"
@"SASetAssistantData"
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"NSArray"24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16d24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"AFSpeechRecognition"24
v32@0:8@"SiriCoreLocalSpeechRecognizer"16@"AFSpeechPackage"24
v40@0:8@"SiriCoreLocalSpeechRecognizer"16@"NSDictionary"24@"NSError"32
v36@0:8B16@20@28
v40@0:8@16d24q32
v48@0:8@16q24q32@40
v40@0:8@16q24@?32
v36@0:8B16@"NSError"20@"ADRecordingInfo"28
v24@0:8@"ADRecordingInfo"16
v40@0:8@"NSArray"16d24q32
v24@0:8@"NSData"16
v48@0:8@"NSError"16q24q32@"CSEndpointerMetrics"40
v40@0:8@"<ADSpeechCapturing>"16@"NSData"24d32
v24@0:8@"<ADSpeechCapturing>"16
v40@0:8@"<ADSpeechCapturing>"16@"NSFileHandle"24@"NSError"32
v32@0:8@"<ADSpeechCapturing>"16d24
v40@0:8@"<ADSpeechCapturing>"16q24@?<v@?dd@"NSError">32
v32@0:8@"AFAudioPowerUpdater"16f24f28
v40@0:8q16q24@32
v28@0:8d16B24
v24@0:8f16f20
v32@0:8q16@?24
v40@0:8q16@24@32
v40@0:8@16B24B28@32
v32@0:8{AFTimeRange=dd}16
v32@0:8d16@?24
@"SiriCoreLocalSpeechRecognizer"
@"NSError"
@"<ADSpeechManagerDelegate>"
@"ADSpeechLog"
@"<ADSpeechCapturing>"
@"ADSpeechRecorder"
@"ADSpeechPlaybackSimulator"
@"ADSpeechCompressor"
@"<AFAudioPlaybackService>"
@"AFDictationOptions"
@"AFAudioPowerUpdater"
^{__CFBag=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"INCExtensionRequest"
@"INIntent"
@"NSUserActivity"
@"ADAudioRoute"
@20@0:8I16
v40@0:8@"ADAcousticFingerprinter"16@"NSData"24d32
v40@0:8@16@24Q32
v40@0:8@16q24d32
v32@0:8Q16Q24
v40@0:8@"CSSpeechController"16@"NSArray"24Q32
v32@0:8@"CSSpeechController"16@"NSData"24
v32@0:8@"CSSpeechController"16d24
v36@0:8@"CSSpeechController"16B24@"NSError"28
v32@0:8@"CSSpeechController"16q24
v24@0:8@"CSSpeechController"16
v40@0:8@"CSSpeechController"16q24d32
v32@0:8@"CSSpeechController"16@"NSDictionary"24
v32@0:8@"<CSEndpointAnalyzer>"16d24
v40@0:8@"<CSEndpointAnalyzer>"16d24@"CSEndpointerMetrics"32
v28@0:8q16B24
@24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@"<ADSpeechCapturingDelegate>"16
v24@0:8@"AFSpeechRequestOptions"16
v24@0:8@?<v@?dd>16
v24@0:8@"CSServerEndpointFeatures"16
v32@0:8d16@?<v@?B@"NSArray">24
@24@0:8^@16
B24@0:8^@16
v20@0:8(?={?=SS}I)16
B32@0:8@?16^@24
@36@0:8q16q24B32
v32@0:8q16d24
v48@0:8@16d24d32@40
B32@0:8@16@?24
@"<ADSpeechCapturingDelegate>"
@"CSSpeechController"
@"<CSEndpointAnalyzer>"
@"ADAudioActivationInfo"
@"ADAcousticFingerprinter"
@"NSFileHandle"
@"ADAudioFileWriter"
@"AFWatchdogTimer"
@"CSEndpointerMetrics"
@"NSArray"
@"AFSpeechSynthesisRecord"
v24@0:8@"ADService"16
@"SASyncAnchor"
@"ADService"
@"<ADSyncManagerDelegate>"
@"SASyncGetAnchors"
@20@0:8B16
v48@0:8Q16Q24@32@?40
v40@0:8Q16@24@?32
B32@0:8@16^@24
B40@0:8Q16@24^@32
@48@0:8Q16Q24@32^@40
@32@0:8@16^@24
@"SiriCoreSQLiteDatabase"
v24@0:8@?<v@?@"<SAAceCommand>"@"NSError">16
B24@0:8@"NSURL"16
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSBundle"32
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@32@0:8@16^B24
@"NSDateFormatter"
v24@0:8@"SiriCoreNetworkManager"16
v32@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24
v48@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24@"NSString"32d40
v32@0:8@"<SiriCoreSiriConnection>"16@"AceObject"24
v24@0:8@"<SiriCoreSiriConnection>"16
v40@0:8@"<SiriCoreSiriConnection>"16@"NSError"24@"SiriCoreAceConnectionAnalysisInfo"32
v36@0:8B16B20@24B32
@"<SiriCoreSiriConnection>"
@"NSURL"
@"ADAuthenticator"
@"ADRetryManager"
@"<ABAssistantManager>"
@"<ADAddressBookManagerDelegate>"
@60@0:8@16B24@28@36@44@52
@"SAAlarmObject"
@"ADAlarm"
{_builderFlags="isDirty"b1"hasAlarmID"b1"hasIsFiring"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1"hasAceObject"b1}
q24@0:8q16
@32@0:8@16d24
B24@0:8d16
@"<ADAcousticIDHelperDelegate>"
@"SAAIStartSession"
@"SAAISearchCompleted"
^{NSDictionary=#}16@0:8
@20@0:8i16
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
^{BTSessionImpl=}16@0:8
^{BTSessionImpl=}
@"NSHashTable"
v24@0:8@?<v@?B@"NSError">16
v24@0:8^{BTDeviceImpl=}16
^{BTDeviceImpl=}
@"SABaseClientBoundCommand"
@"SANavStatus"
@"SALocalSearchGetNavigationStatusCompleted"
@"SAMPQueueState"
@"SAAppSubscriptions"
@"SASiriKitSetting"
@"SAErrorIndicatorStatus"
@"SAHACurrentHome"
v40@0:8@"<ADAudioStateAnnouncing>"16@"AFAudioState"24@"AFAudioState"32
v36@0:8@16I24@28
v32@0:8@"AFXPCWrapper"16@"NSString"24
v36@0:8@"NSString"16I24@"NSString"28
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSError"16@"NSString"24
v40@0:8@"SASSpeechRecognized"16@"NSString"24@"NSString"32
v32@0:8@"SASSpeechPartialResult"16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v40@0:8@"SAStructuredDictationResult"16@"NSString"24@"NSString"32
v40@0:8@"NSFileHandle"16@"NSError"24@"NSString"32
v40@0:8@"SASPronunciationRecognized"16@"NSString"24@"NSString"32
v24@0:8@"SASVoiceSearchPartialResult"16
v24@0:8@"SASVoiceSearchFinalResult"16
v40@0:8q16@"NSString"24@?<v@?dd@"NSError">32
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"NSDictionary"16@"NSURL"24
v24@0:8@"INImage"16
v32@0:8@"NSString"16@"NSError"24
v40@0:8@"INIntent"16@"NSString"24@?<v@?@"INIntentResponse"@"NSError">32
v24@0:8@"AFAudioPlaybackRequest"16
v32@0:8@"AFAudioPlaybackRequest"16@"NSError"24
Vv32@0:8q16@?24
Vv24@0:8B16B20
Vv40@0:8@16Q24@?32
Vv32@0:8Q16d24
Vv32@0:8@16d24
Vv40@0:8@16q24@32
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv32@0:8q16@?<v@?>24
Vv24@0:8@?<v@?I@"NSError">16
Vv24@0:8@"AFClientConfiguration"16
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSString"16@24
Vv32@0:8@"NSString"16d24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFXPCWrapper">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
@"NSMutableData"
v24@0:8@"<ADAudioStateListening>"16
@"AFAudioState"
@"<ADAudioStateListening>"
@"<SAAceCommand>"
@"ADOfflineMetricsMap"
v40@0:8@?16@?24@?32
v40@0:8q16q24@?32
@"<ADContextManagerDelegate>"
@"ADBackgroundContextCache"
@24@0:8^v16
v44@0:8@16@24B32@36
@"SARestartRequest"
@"SABaseCommand<SAServerBoundCommand>"
B28@0:8@16B24
v40@0:8d16B24B28@?32
v56@0:8d16B24B28@32Q40@?48
v32@0:8@"<SiriCoreConnectionProvider>"16@"NSError"24
v32@0:8@"ADPeerStreamConnection"16@"NSError"24
v24@0:8@"ADPeerStreamConnection"16
v32@0:8@"ADPeerStreamConnection"16@?<v@?@"SiriCoreConnectionMetrics">24
@40@0:8^{__CFHTTPMessage=}16@24^B32
v24@0:8^{__CFHTTPMessage=}16
@32@0:8^{__CFHTTPMessage=}16@24
v40@0:8@16@24B32B36
v48@0:8@16@24Q32@40
v28@0:8I16q20
@"ADPeerStreamConnection"
@"ADPeerConnectionProvider"
@"NSObject<OS_dispatch_data>"
@"<SiriCoreConnectionProvider>"
[4096C]
^{__CFHTTPMessage=}
^{IONotificationPort=}
@"<SiriCoreConnectionProviderDelegate>"
@40@0:8@16@24^@32
@"CKKnowledgeStore"
v32@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24
v40@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24@"FBSDisplayLayoutTransitionContext"32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
i40@0:8@16@24^@32
v24@0:8^{NACContextOpaque_=}16
^{NACContextOpaque_=}
@"<ADCallObserverDelegate>"
@"<ADDisplayScaleContextCollectorDelegate>"
@"<ADPeerLocationPolicyDelegate>"
@48@0:8q16@24@32@40
@"INIntentResponse"
@"NSSet"
v32@0:8Q16@?24
v32@0:8d16@24
@"<ADClockServiceDelegate>"
v24@0:8@?<v@?@"STTimer"@"NSError">16
v32@0:8@"STTimer"16@?<v@?@"NSError">24
@"ADServiceCommandType"
@"<ADAceRequestTransformer>"
@"<ADAceResponseTransformer>"
@"<AFSiriRequestHandling>"
Vv32@0:8@"NSArray"16@?<v@?>24
Vv24@0:8@"AFAnalyticsEvent"16
@"ADAnalyticsStore"
@"NSObject<OS_dispatch_data>"24@0:8^@16
v24@0:8@?<v@?q@"NSError">16
v32@0:8q16@"NSError"24
@32@0:8@?16@?24
@"<NSXPCListenerDelegate>"
@36@0:8@16i24@28
@"ADNotifyAndPushContextCollector"
B20@0:8i16
v28@0:8@?16i24
@28@0:8@16B24
@"IDSDeviceConnection"
@36@0:8@16@24B32
@"ADSharedPeerStreamConnection"
@"<ADPeerStreamConnectionDelegate>"
@"_ADPBDeviceOutputVoiceInfo"
{?="activityContinuationAllowed"b1"cloudSyncEnabled"b1"dictationEnabled"b1"shouldCensorSpeech"b1"siriEnabled"b1}
v32@0:8@"ADPeerLocationConnection"16@"CLLocation"24
v24@0:8@"ADPeerLocationConnection"16
B40@0:8@16@24@32
@"<ADLocationManagerDelegate>"
@"ADPeerLocationConnection"
@"SAGetRequestOrigin"
@"CLLocation"
@"CLInUseAssertion"
@"GEOLocationShifter"
@"ADGreenTeaLogger"
@32@0:8^{NSDictionary=#}16@24
v32@0:8^{NSDictionary=#}16@?24
v56@0:8@16@24@32B40B44@48
v44@0:8@16B24@28@36
@"ADLinkedListItem"
@32@0:8@16@?24
{?="rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"synRetransmits"b1}
@"NSArray"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
B24@0:8@"NSString"16
v40@0:8@"SABaseClientBoundCommand"16@"NSString"24@?<v@?@"<SAAceCommand>"@"NSError">32
v32@0:8@"AFSyncInfo"16@?<v@?@"ADSyncChunkInfo"@"NSError"@?<v@?B>>24
v32@0:8@"AFSyncInfo"16@?<v@?@"AFSyncSnapshot">24
v24@0:8@?<v@?>16
@"<ADServiceDelegate>"
v40@0:8@16i24@28B36
v48@0:8@16i24@28B36B40B44
v44@0:8@16q24@32i40
v44@0:8@16@24@32i40
v24@0:8@"ADAudioPlaybackSession"16
v32@0:8@"ADAudioPlaybackSession"16@"NSError"24
v32@0:8@"AFAudioPlaybackRequest"16@?<v@?@"NSError">24
v28@0:8@"AFAudioPlaybackRequest"16B24
@"<ADAudioPlaybackServiceDelegate>"
{?="success"b1}
@"_INVocabularyStoreManager"
@48@0:8d16@24@32@40
@24@0:8d16
@"ADClockSnapshot"
{_builderFlags="isDirty"b1"hasSystemUptime"b1"hasModificationDate"b1"hasAlarmsByID"b1"hasTimersByID"b1}
@"<ADUIServiceDelegate>"
v40@0:8@?16q24@32
v32@0:8@"INExtensionContextHost"16@"INImage"24
@"ADExtensionTransaction"
@"<ADExtensionServiceDelegate>"
i24@0:8^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}16
B28@0:8d16I24
B28@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24
@"<ADPassthroughEndpointerDelegate>"
@"<Endpointer>"
@"NSOrderedSet"
@"<ADSiriAppLaunchRequestHandlerDelegate>"
Vv24@0:8d16
@"<AFDictationServiceDelegate>"
@"ADDictationSessionTracker"
@"SATimerObject"
@"ADTimer"
{_builderFlags="isDirty"b1"hasTimerID"b1"hasIsFiring"b1"hasFiredDate"b1"hasDismissedDate"b1"hasLastModifiedDate"b1"hasAceObject"b1}
B32@0:8^f16^f24
v24@0:8@"ADSession"16
v32@0:8@"ADSession"16@"AceObject<SAAceCommand>"24
v36@0:8@"ADSession"16@"NSError"24B32
B32@0:8@"ADSession"16@"NSError"24
B24@0:8@"ADSession"16
@"NSArray"24@0:8@"ADSession"16
v40@0:8@"ADSession"16@"NSString"24@"NSString"32
v28@0:8@"ADSession"16B24
v48@0:8@"ADSession"16@"NSString"24@"NSString"32d40
v32@0:8@"ADSession"16@"NSError"24
v40@0:8@16B24B28B32B36
v32@0:8@16B24B28
v48@0:8@16@24q32q40
@"<ADSessionManagerDelegate>"
@"AFAggregator"
@"SASSpeechRecognized"
@"SASSpeechFailure"
@32@0:8^v16^v24
@32@0:8Q16@24
@56@0:8@16Q24@32@40@48
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8@"ADDisplayScaleContextCollector"16d24
v40@0:8@"ADAddressBookManager"16@"NSArray"24@"NSArray"32
@"SAVoice"
@"SAMediaContentRatingRestrictions"
@"ADDisplayScaleContextCollector"
@"ADAddressBookManager"
Vv96@0:8@16@24@32@40B48B52B56d60B68@72@80@?88
Vv96@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSData"40B48B52B56d60B68@"NSDictionary"72@"NSURL"80@?<v@?@"NSString"@"NSError">88
Vv48@0:8@"NSString"16@"NSData"24@"SiriCoreLocalSpeechUserData"32@?<v@?@"NSData"@"NSError">40
Vv48@0:8@"NSString"16@"NSData"24@"NSString"32@?<v@?@"NSData"@"NSString"@"NSError">40
Vv28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"SiriCoreLocalSpeechUserData">24
Vv48@0:8@"NSDictionary"16@"SiriCoreLocalSpeechDESRecord"24@"NSArray"32@?<v@?@"NSDictionary"@"NSData"@"NSError">40
Vv24@0:8@"AFSpeechRecognition"16
Vv24@0:8@"AFSpeechPackage"16
Vv32@0:8@"NSDictionary"16@"NSError"24
v20@0:8S16
@"ADPeerInfo"
@"PBCodable"
v36@0:8@16S24@28
v48@0:8@16S24@28S36@?40
v56@0:8@16S24@28@36S44@?48
v32@0:8@?16^v24
v52@0:8@16S24@28@36@44
@"NSMapTable"
v32@0:8@"ADClockService"16@"ADClockSnapshot"24
{?="gender"b1}
v40@0:8d16d24q32
@"NSNumber"
B24@0:8q16
Q32@0:8d16d24
v28@0:8I16@?20
v40@0:8I16I20Q24@?32
@"AWDServerConnection"
Q24@0:8@16
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@"AVAudioPlayer"
@"AFAudioPlaybackRequest"
@"<ADAudioPlaybackSessionDelegate>"
v24@0:8@"NSDictionary"16
@"SiriCoreDESEvaluationSession"
@"CMActivityManager"
@"CMActivity"
@"STAlarm"
v32@0:8@"STAlarm"16@?<v@?@"STAlarm"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"STAlarm"16q24@?<v@?@"NSArray"@"NSError">32
@"<ADSharedDataConnectionDelegate>"
@36@0:8q16@?24I32
@36@0:8q16@24I32
@44@0:8q16@?24@32I40
v24@0:8r^{AudioStreamBasicDescription=dIIIIIIII}16
^{OpaqueExtAudioFile=}
Vv40@0:8@16q24@?32
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1821501079</string>
<key>application-identifier</key>
<string>com.apple.assistant.assistantd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.BTServer.allowQuickRSSIRead</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.TimeAppServices.timerclient</key>
<true/>
<key>com.apple.assistant.cdm.client</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.assistant_service</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.CanRecordWithoutSessionActivation</key>
<true/>
<key>com.apple.coreaudio.allow-opus-codec</key>
<true/>
<key>com.apple.coreaudio.allow-speex-codec</key>
<true/>
<key>com.apple.coreaudio.i-am-siri</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.siri.profile</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.networking.multipath_extended</key>
<true/>
<key>com.apple.duet.appPreference.prediction</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.intents.intents-image-service</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
</array>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.siri.profile</key>
<string>com.apple.siri.profile2</string>
</dict>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.domain-extension</key>
<true/>
<key>com.apple.private.ids.link-preferences</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
</array>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.memorystatus</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.networkserviceproxy</key>
<true/>
<key>com.apple.private.subscriptionservice.internal</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceWillow</string>
<string>kTCCServiceReminders</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.MobileTimer.timerserver</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.siri.acousticsignature</key>
<true/>
<key>com.apple.siri.analyzer</key>
<true/>
<key>com.apple.siri.clientScripter</key>
<true/>
<key>com.apple.siri.client_lite</key>
<true/>
<key>com.apple.siri.embeddedspeech</key>
<true/>
<key>com.apple.siri.sync_deep_verification</key>
<true/>
<key>com.apple.siri.task.client</key>
<true/>
<key>com.apple.siriknowledged</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
</array>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.assistant</string>
</array>
</dict>
</plist>
0l?m
0l?n
0l?n
0l?o
