-maxmem
--maxmem
-debug
--debug
-shell
--shell
-copy
--copy
-recover
--recover
-huge
--huge
-noent
--noent
-noenc
--noenc
-nsclean
--nsclean
-nocdata
--nocdata
-nodict
--nodict
-version
--version
-noout
--noout
-output
--output
-htmlout
--htmlout
-nowrap
--nowrap
-html
--html
-xmlout
--xmlout
-nodefdtd
--nodefdtd
-loaddtd
--loaddtd
-dtdattr
--dtdattr
-valid
--valid
-postvalid
--postvalid
-dtdvalid
--dtdvalid
-dtdvalidfpi
--dtdvalidfpi
-dropdtd
--dropdtd
-insert
--insert
-quiet
--quiet
-timing
--timing
-auto
--auto
-repeat
--repeat
-push
--push
-pushsmall
--pushsmall
-push-structured-error-fatal-stop
--push-structured-error-fatal-stop
-memory
--memory
-testIO
--testIO
-xinclude
--xinclude
-noxincludenode
--noxincludenode
-nofixup-base-uris
--nofixup-base-uris
-compress
--compress
-nowarning
--nowarning
-pedantic
--pedantic
-debugent
--debugent
-c14n
--c14n
-c14n11
--c14n11
-exc-c14n
--exc-c14n
-catalogs
--catalogs
-nocatalogs
--nocatalogs
-encode
--encode
UTF-8
DVEnc
-noblanks
--noblanks
-format
--format
-pretty
--pretty
-stream
--stream
-walker
--walker
-pattern
--pattern
-sax1
--sax1
-sax-fatal-stop
--sax-fatal-stop
-sax
--sax
-chkregister
--chkregister
-relaxng
--relaxng
-schema
--schema
-schematron
--schematron
-nonet
--nonet
-nocompact
--nocompact
-load-trace
--load-trace
-path
--path
-xpath
--xpath
-oldxml10
--oldxml10
Unknown option %s
SGML_CATALOG_FILES
Variable $SGML_CATALOG_FILES not set
XMLLINT_INDENT
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
"http://www.w3.org/TR/REC-html40/loose.dtd">
<html><head><title>%s output</title></head>
<body bgcolor="#ffffff"><h1 align="center">%s output</h1>
Schematron schema %s failed to compile
Compiling the schemas
Relax-NG schema %s failed to compile
WXS schema %s failed to compile
Pattern %s failed to compile
Registration count off: %d
%d iterations
</body></html>
SAX.internalSubset(%s,
 %s,
 %s)
SAX.isStandalone()
SAX.hasInternalSubset()
SAX.hasExternalSubset()
SAX.resolveEntity(
, %s)
SAX.getEntity(%s)
(null)
SAX.entityDecl(%s, %d, %s, %s, %s)
SAX.notationDecl(%s, %s, %s)
SAX.attributeDecl(%s, %s, %d, %d, NULL, ...)
SAX.attributeDecl(%s, %s, %d, %d, %s, ...)
SAX.elementDecl(%s, %d, ...)
SAX.unparsedEntityDecl(%s, %s, %s, %s)
SAX.setDocumentLocator()
SAX.startDocument()
SAX.endDocument()
SAX.startElement(%s
, %s='
SAX.endElement(%s)
SAX.reference(%s)
SAX.characters(%s, %d)
SAX.ignorableWhitespace(%s, %d)
SAX.processingInstruction(%s, %s)
SAX.processingInstruction(%s, NULL)
SAX.comment(%s)
SAX.warning: 
SAX.error: 
SAX.fatalError: 
SAX.getParameterEntity(%s)
SAX.pcdata(%.20s, %d)
SAX.externalSubset(%s,
Usage : %s [options] XMLfiles ...
Parse the XML files and output the result of the parsing
--version : display the version of the XML library used
--debug : dump a debug tree of the in-memory document
--shell : run a navigating shell
--debugent : debug the entities defined in the document
--copy : used to test the internal copy implementation
--recover : output what was parsable on broken XML documents
--huge : remove any internal arbitrary parser limits
--noent : substitute entity references by their value
--noenc : ignore any encoding specified inside the document
--noout : don't output the result tree
--path 'paths': provide a set of paths for resources
--load-trace : print trace of all external entities loaded
--nonet : refuse to fetch DTDs or entities over network
--nocompact : do not generate compact text nodes
--htmlout : output results as HTML
--nowrap : do not put HTML doc wrapper
--valid : validate the document in addition to std well-formed check
--postvalid : do a posteriori validation, i.e after parsing
--dtdvalid URL : do a posteriori validation against a given DTD
--dtdvalidfpi FPI : same but name the DTD with a Public Identifier
--quiet : be quiet when succeeded
--timing : print some timings
--output file or -o file: save to a given file
--repeat : repeat 100 times, for timing or profiling
--insert : ad-hoc test for valid insertions
--compress : turn on gzip compression of output
--html : use the HTML parser
--xmlout : force to use the XML serializer when using --html
--nodefdtd : do not default HTML doctype
--push : use the push mode of the parser
--pushsmall : use the push mode of the parser using tiny increments
--push-structured-error-fatal-stop : call xmlStopParser() on fatal structured errors
--memory : parse from memory
--maxmem nbbytes : limits memory allocation to nbbytes bytes
--nowarning : do not emit warnings from parser/validator
--noblanks : drop (ignorable?) blanks spaces
--nocdata : replace cdata section with text nodes
--format : reformat/reindent the output
--encode encoding : output in the given encoding
--dropdtd : remove the DOCTYPE of the input docs
--pretty STYLE : pretty-print in a particular style
                 0 Do not pretty print
                 1 Format the XML content, as --format
                 2 Add whitespace inside tags, preserving content
--c14n : save in W3C canonical format v1.0 (with comments)
--c14n11 : save in W3C canonical format v1.1 (with comments)
--exc-c14n : save in W3C exclusive canonical format (with comments)
--nsclean : remove redundant namespace declarations
--testIO : test user I/O support
--catalogs : use SGML catalogs from $SGML_CATALOG_FILES
             otherwise XML Catalogs starting from 
         %s are activated by default
file:///etc/xml/catalog
--nocatalogs: deactivate all catalogs
--auto : generate a small doc on the fly
--xinclude : do XInclude processing
--noxincludenode : same but do not generate XInclude nodes
--nofixup-base-uris : do not fixup xml:base uris
--loaddtd : fetch external DTD
--dtdattr : loaddtd + populate the tree with inherited attributes 
--stream : use the streaming interface to process very large files
--walker : create a reader and walk though the resulting doc
--pattern pattern_value : test the pattern support
--chkregister : verify the node registration code
--relaxng schema : do RelaxNG validation against the schema
--schema schema : do validation against the WXS schema
--schematron schema : do validation against a schematron
--sax1: use the old SAX1 interfaces for processing
--sax: do not build a tree but work just at the SAX level
--sax-fatal-stop: call xmlStopParser() on fatal errors during SAX parsing
--oldxml10: use XML-1.0 parsing rules before the 5th edition
--xpath expr: evaluate the XPath expression, imply --noout
Libxml project home page: https://gitlab.gnome.org/GNOME/libxml2
Ran out of memory needs > %d bytes
%s: using libxml version %s
   compiled with: 
Threads 
Tree 
Output 
Push 
Reader 
Patterns 
Writer 
SAXv1 
FTP 
HTTP 
DTDValid 
HTML 
Legacy 
C14N 
Catalog 
XPath 
XPointer 
XInclude 
Iconv 
ICU 
ISO8859X 
Unicode 
Regexps 
Automata 
Expr 
Schemas 
Schematron 
Modules 
Debug 
MemDebug 
RunDebug 
Zlib 
Lzma 
MAX_PATHS reached: too many paths
Out of memory in xmllint:registerNode()
Loaded URL="%s" ID="%s"
failed to load external entity "%s"
 took %ld ms
file too large to mmap %s
mmap failure for file %s
xmlStreamPush() failure
XSD schema %s failed to compile
Parsing and validating
Parsing
Document %s does not validate
%s fails to validate
%s validates
%s : failed to parse
Unable to open %s
%d %d %s %d %d
Node %s matches pattern %s
xmlPatternMatch and xmlStreamPush disagree
  pattern %s node %s
xmlStreamPop() failure
user_data
%s validation generated an internal error
SAX generated a doc !
SAX.startElementNs(%s
, NULL
, %s
, '%s'
, %d
, xmlns
='%s'
, %d, %d
, %s:%s='
%.4s...', %d
SAX.endElementNs(%s
, NULL)
, '%s')
info
Xinclude processing
Copying
Freeing original
could not get valid list of elements
No element can be inserted under root
%d element types can be inserted under root:
failed to open %s
Saving
Can't write data
Failed to canonicalize
Failed to save
failed save to %s
Parsing DTD
Could not parse DTD %s
Couldn't allocate validation context
Document %s does not validate against %s
Validating against DTD
Validating
Freeing
<b>error</b>: 
</p>
%s:%d: 
Entity: line %d: 
<pre>
</pre>
<b>warning</b>: 
<b>validity error</b>: 
<b>validity warning</b>: 
Out of memory for XPath
XPath evaluation failure
XPath set is empty
XPath Object is uninitialized
XPath object of unexpected type
Document does not have a root element
walking through the doc
failed to walk through the doc
Failed to crate a reader from the document
-Infinity
Infinity
false
true
-maxmem
--maxmem
-debug
--debug
-shell
--shell
-copy
--copy
-recover
--recover
-huge
--huge
-noent
--noent
-noenc
--noenc
-nsclean
--nsclean
-nocdata
--nocdata
-nodict
--nodict
-version
--version
-noout
--noout
-output
--output
-htmlout
--htmlout
-nowrap
--nowrap
-html
--html
-xmlout
--xmlout
-nodefdtd
--nodefdtd
-loaddtd
--loaddtd
-dtdattr
--dtdattr
-valid
--valid
-postvalid
--postvalid
-dtdvalid
--dtdvalid
-dtdvalidfpi
--dtdvalidfpi
-dropdtd
--dropdtd
-insert
--insert
-quiet
--quiet
-timing
--timing
-auto
--auto
-repeat
--repeat
-push
--push
-pushsmall
--pushsmall
-push-structured-error-fatal-stop
--push-structured-error-fatal-stop
-memory
--memory
-testIO
--testIO
-xinclude
--xinclude
-noxincludenode
--noxincludenode
-nofixup-base-uris
--nofixup-base-uris
-compress
--compress
-nowarning
--nowarning
-pedantic
--pedantic
-debugent
--debugent
-c14n
--c14n
-c14n11
--c14n11
-exc-c14n
--exc-c14n
-catalogs
--catalogs
-nocatalogs
--nocatalogs
-encode
--encode
UTF-8
DVEnc
-noblanks
--noblanks
-format
--format
-pretty
--pretty
-stream
--stream
-walker
--walker
-pattern
--pattern
-sax1
--sax1
-sax-fatal-stop
--sax-fatal-stop
-sax
--sax
-chkregister
--chkregister
-relaxng
--relaxng
-schema
--schema
-schematron
--schematron
-nonet
--nonet
-nocompact
--nocompact
-load-trace
--load-trace
-path
--path
-xpath
--xpath
-oldxml10
--oldxml10
Unknown option %s
SGML_CATALOG_FILES
Variable $SGML_CATALOG_FILES not set
XMLLINT_INDENT
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
"http://www.w3.org/TR/REC-html40/loose.dtd">
<html><head><title>%s output</title></head>
<body bgcolor="#ffffff"><h1 align="center">%s output</h1>
Schematron schema %s failed to compile
Compiling the schemas
Relax-NG schema %s failed to compile
WXS schema %s failed to compile
Pattern %s failed to compile
Registration count off: %d
%d iterations
</body></html>
SAX.internalSubset(%s,
 %s,
 %s)
SAX.isStandalone()
SAX.hasInternalSubset()
SAX.hasExternalSubset()
SAX.resolveEntity(
, %s)
SAX.getEntity(%s)
(null)
SAX.entityDecl(%s, %d, %s, %s, %s)
SAX.notationDecl(%s, %s, %s)
SAX.attributeDecl(%s, %s, %d, %d, NULL, ...)
SAX.attributeDecl(%s, %s, %d, %d, %s, ...)
SAX.elementDecl(%s, %d, ...)
SAX.unparsedEntityDecl(%s, %s, %s, %s)
SAX.setDocumentLocator()
SAX.startDocument()
SAX.endDocument()
SAX.startElement(%s
, %s='
SAX.endElement(%s)
SAX.reference(%s)
SAX.characters(%s, %d)
SAX.ignorableWhitespace(%s, %d)
SAX.processingInstruction(%s, %s)
SAX.processingInstruction(%s, NULL)
SAX.comment(%s)
SAX.warning: 
SAX.error: 
SAX.fatalError: 
SAX.getParameterEntity(%s)
SAX.pcdata(%.20s, %d)
SAX.externalSubset(%s,
Usage : %s [options] XMLfiles ...
Parse the XML files and output the result of the parsing
--version : display the version of the XML library used
--debug : dump a debug tree of the in-memory document
--shell : run a navigating shell
--debugent : debug the entities defined in the document
--copy : used to test the internal copy implementation
--recover : output what was parsable on broken XML documents
--huge : remove any internal arbitrary parser limits
--noent : substitute entity references by their value
--noenc : ignore any encoding specified inside the document
--noout : don't output the result tree
--path 'paths': provide a set of paths for resources
--load-trace : print trace of all external entities loaded
--nonet : refuse to fetch DTDs or entities over network
--nocompact : do not generate compact text nodes
--htmlout : output results as HTML
--nowrap : do not put HTML doc wrapper
--valid : validate the document in addition to std well-formed check
--postvalid : do a posteriori validation, i.e after parsing
--dtdvalid URL : do a posteriori validation against a given DTD
--dtdvalidfpi FPI : same but name the DTD with a Public Identifier
--quiet : be quiet when succeeded
--timing : print some timings
--output file or -o file: save to a given file
--repeat : repeat 100 times, for timing or profiling
--insert : ad-hoc test for valid insertions
--compress : turn on gzip compression of output
--html : use the HTML parser
--xmlout : force to use the XML serializer when using --html
--nodefdtd : do not default HTML doctype
--push : use the push mode of the parser
--pushsmall : use the push mode of the parser using tiny increments
--push-structured-error-fatal-stop : call xmlStopParser() on fatal structured errors
--memory : parse from memory
--maxmem nbbytes : limits memory allocation to nbbytes bytes
--nowarning : do not emit warnings from parser/validator
--noblanks : drop (ignorable?) blanks spaces
--nocdata : replace cdata section with text nodes
--format : reformat/reindent the output
--encode encoding : output in the given encoding
--dropdtd : remove the DOCTYPE of the input docs
--pretty STYLE : pretty-print in a particular style
                 0 Do not pretty print
                 1 Format the XML content, as --format
                 2 Add whitespace inside tags, preserving content
--c14n : save in W3C canonical format v1.0 (with comments)
--c14n11 : save in W3C canonical format v1.1 (with comments)
--exc-c14n : save in W3C exclusive canonical format (with comments)
--nsclean : remove redundant namespace declarations
--testIO : test user I/O support
--catalogs : use SGML catalogs from $SGML_CATALOG_FILES
             otherwise XML Catalogs starting from 
         %s are activated by default
file:///etc/xml/catalog
--nocatalogs: deactivate all catalogs
--auto : generate a small doc on the fly
--xinclude : do XInclude processing
--noxincludenode : same but do not generate XInclude nodes
--nofixup-base-uris : do not fixup xml:base uris
--loaddtd : fetch external DTD
--dtdattr : loaddtd + populate the tree with inherited attributes 
--stream : use the streaming interface to process very large files
--walker : create a reader and walk though the resulting doc
--pattern pattern_value : test the pattern support
--chkregister : verify the node registration code
--relaxng schema : do RelaxNG validation against the schema
--schema schema : do validation against the WXS schema
--schematron schema : do validation against a schematron
--sax1: use the old SAX1 interfaces for processing
--sax: do not build a tree but work just at the SAX level
--sax-fatal-stop: call xmlStopParser() on fatal errors during SAX parsing
--oldxml10: use XML-1.0 parsing rules before the 5th edition
--xpath expr: evaluate the XPath expression, imply --noout
Libxml project home page: https://gitlab.gnome.org/GNOME/libxml2
Ran out of memory needs > %d bytes
%s: using libxml version %s
   compiled with: 
Threads 
Tree 
Output 
Push 
Reader 
Patterns 
Writer 
SAXv1 
FTP 
HTTP 
DTDValid 
HTML 
Legacy 
C14N 
Catalog 
XPath 
XPointer 
XInclude 
Iconv 
ICU 
ISO8859X 
Unicode 
Regexps 
Automata 
Expr 
Schemas 
Schematron 
Modules 
Debug 
MemDebug 
RunDebug 
Zlib 
Lzma 
MAX_PATHS reached: too many paths
Out of memory in xmllint:registerNode()
Loaded URL="%s" ID="%s"
failed to load external entity "%s"
 took %ld ms
file too large to mmap %s
mmap failure for file %s
xmlStreamPush() failure
XSD schema %s failed to compile
Parsing and validating
Parsing
Document %s does not validate
%s fails to validate
%s validates
%s : failed to parse
Unable to open %s
%d %d %s %d %d
Node %s matches pattern %s
xmlPatternMatch and xmlStreamPush disagree
  pattern %s node %s
xmlStreamPop() failure
user_data
%s validation generated an internal error
SAX generated a doc !
SAX.startElementNs(%s
, NULL
, %s
, '%s'
, %d
, xmlns
='%s'
, %d, %d
, %s:%s='
%.4s...', %d
SAX.endElementNs(%s
, NULL)
, '%s')
info
Xinclude processing
Copying
Freeing original
could not get valid list of elements
No element can be inserted under root
%d element types can be inserted under root:
failed to open %s
Saving
Can't write data
Failed to canonicalize
Failed to save
failed save to %s
Parsing DTD
Could not parse DTD %s
Couldn't allocate validation context
Document %s does not validate against %s
Validating against DTD
Validating
Freeing
<b>error</b>: 
</p>
%s:%d: 
Entity: line %d: 
<pre>
</pre>
<b>warning</b>: 
<b>validity error</b>: 
<b>validity warning</b>: 
Out of memory for XPath
XPath evaluation failure
XPath set is empty
XPath Object is uninitialized
XPath object of unexpected type
Document does not have a root element
walking through the doc
failed to walk through the doc
Failed to crate a reader from the document
-Infinity
Infinity
false
true
