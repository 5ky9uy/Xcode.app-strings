domain
since-version
ERROR: unable to zip large data of size ~%.3f GB
deflateInit2() failed: %s
deflate() failed: %s
0123456789abcdef
MSVHasher+Algorithms.h
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
Cannot append to unknown hasher algorithm
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
Cannot finalize unknown hasher algorithm
SBKSyncClamps
com.apple.amp
+[SBKStoreClampsController sharedClampsController]_block_invoke
SBKStoreClampsController.m
Unarchiving SBKStoreClampsController resulted in error:%@
Current Date = %@,
accountIdentifierCheckTimestamp = %@,
authenticationNeededTimestamp = %@,
userAcceptedSyncTimestamp = %@,
networkingBlockedUntil = %@,
backOffUntil= %@,
userCancelledSignInBackOffUntil = %@
SBKTransactionClamps
SBAccountIdentifierCheckTimestamp
SBKAuthenticationNeededTimestamp
SBKUserAcceptedSyncTimestamp
SBKNetworkingBlockedUntil
SBKUserCancelledSignInBackOffUntil
Version
SBKVersion
v16@?0@"NSMutableDictionary"8
-[SBKStoreClampsController saveToUserDefaults]_block_invoke
Archiving SBKStoreClampsController resulted in error:%@
kvsKey
kvsPayload
%@: key=%@, payload=%@
com.apple.SBKTransactionController
com.apple.SBKTransactionController.operationQueue
SBKTransactionFinishedBlock
SBKTransactionController
v16@?0@"MSVTaskAssertion"8
SBKTransactionController.m
No domain specified in transaction %@!
No url specified in transaction %@!
Delegate calls should be done on the main thread
transaction controllers with delegates can not use transaction finish blocks
User cancelled sign-in
User entered wrong credentials
rejected
put-ok
deleted-ok
peer-ops
puts
deletes
value
reason
conflicted
oversize
%@ response: syncAnchor = %@
put-oks(%@), delete-oks(%@), updatedKeys(%@) = %@
conflictedKeys(%@) = %@
deletedKeys(%@) = %@
B24@?0@"NSDictionary"8@"NSString"16
v40@?0@"NSMutableArray"8@"NSString"16@"NSString"24@?<B@?@"NSDictionary"@"NSString">32
SBKStoreErrorDomain
SBKStoreErrorUserInfoKeyCurrentStoreAccountName
SBKStoreErrorUserInfoKeyPreviousStoreAccountName
SBKStoreErrorUserInfoKeyRetrySeconds
<%@:%p> "%@"
SBKTransactionErorGeneric: An unknown server error occurred. (underlyingError = %@) 
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorStoreAccountLoggedOut
SBKStoreErrorStoreAccountMismatch
SBKStoreErrorCodeGeneric: An unspecified server-side error was encountered (underlyingError = %@).
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorCodeGeneric: Request Invalid: It's likely that there is something wrong with the request format (underlyingError = %@).
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorUserClamp
SBKStoreErrorServerClamp
SBKStoreErrorCodeUnknown
Error Code = %@ (%d)
SBKStoreErrorCodeGenericValidationError
SBKStoreErrorCodeGenericBookkeeperServiceError
SBKStoreErrorCodeAuthenticationError
SBKStoreErrorCodeNoStoreAccount
SBKStoreErrorCodeStoreAccountLoggedOut
SBKStoreErrorCodeStoreAccountMismatch
SBKStoreErrorCodeStoreAccountSessionExpired
SBKStoreErrorCodeStoreAccountUserCancelSignIn
SBKStoreErrorCodeStoreAccountUserCredentials
SBKStoreErrorCodeGeneric
SBKStoreErrorCodeValidation
SBKStoreErrorCodeAuthenticationClamp
SBKStoreErrorCodeServerClamp
SBKStoreErrorCodeUserClamp
SBKStoreErrorCodeNetworkingBlocked
SBKStoreErrorCodeKillSwitch
SBKStoreErrorCodeDisabled
SBKStoreErrorCodeKeyBagKillSwitch
SBKStoreErrorCodeKeyBagLoadFailure
SBKStoreErrorCodeMissingURL
SBKStoreErrorCodeMissingDomain
SBKStoreErrorCodeCancelled
SBKStoreErrorCodeDelegateCancelled
SBKStoreErrorCodeTimeout
Error Code = %lld
SBKTransactionURLOperation.m
Use +operationWithRequest:delegate:
<%@: %p> (PrimaryURL: %@)
version
conflict-detection
ordinal
none
delete
%lld
SBKSync.LastAccountIdentifier
SBKSync.LastAccountName
SBKSync.SyncFailureLastAccountIdentifier
SBKSync.SyncFailureLastAccountName
[client: payload-pair=%@, anchor=%@]
*unversioned*
[request: payload-pair=%@, anchor=%@]
%@ domain = %@, PUT: %@, %@, %@
%@-%@
Default
Sync
Store
SBKPreferencesDidChangeNotification
com.apple.storebookkeeper.defaultschange
_didRegister-
com.apple.storebookkeeper
test-item-identifier
itemIdentifier
timestamp
bookmarkTime
hasBeenPlayed
playCount
<SBKMetadata:%p, id=%-32s, bktm=%@, hbpl=%d, plct=%llu, timestamp=%@>
%llu
v32@?0@"NSString"8@16^B24
pver
bktm
hbpl
plct
tstm
%02llu:%02llu:%.2f
no timestamp
*** 1970 timestamp ***
*** (-) 1970 timestamp ***
*** 1904 timestamp ***
*** (-) 1904 timestamp ***
*** distant past timestamp ***
(%f) %@
storeItemAdamID
subscriptionStoreItemAdamID
podcastURL
podcastGUID
title
artist
albumTitle
hasBeenPalyed
bookmarkMetadataTimestamp
mediaEntityType
SBKUniversalPlaybackPositionStoreDidSynchronizeNotification
9223372036854775807
SBKUniversalPlaybackPositionStore.m
Invalid paramter.  no domain specified
SBKUniversalPlaybackPositionStore.queue
v16@?0@"NSNotification"8
v20@?0B8@"NSError"12
v24@?0@"SBKStoreURLBagContext"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
domain version lookup
-[SBKUniversalPlaybackPositionStore _onQueueLoadRemoteDomainVersionWithCompletionBlock:]
SBKUPPStore LookupDomainVersion
 ERROR = '%@'.
v32@?0@?<v@?>8@16@"NSError"24
v16@?0@"NSError"8
SBKUPPStore Synchronize
synchronize
v24@?0@"SBKStoreURLBagContext"8@?<v@?B@"NSError">16
PUT value
v24@?0B8B12@"NSError"16
GET value
SBKUPPStore Load Bag
AutoSyncRateInMinutes
%.2f seconds
%lld minutes, %lld seconds
%@ (%@ from now)
SBKPlaybackPositionSyncRequestHandler.m
invalid parameters - data source is required
invalid parameters - bagContext is required
invalid parameters - bagContext.domain is required
Invalid bag.  no domain specified
SBKPlaybackPositionSyncRequestHandler.queue
SBKPlaybackPositionSyncRequestHandler.syncOperationQueue
v16@?0@"<SBKUniversalPlaybackPositionMediaItem>"8
@"SBKUniversalPlaybackPositionMetadata"8@?0
you can not nest synchronization calls
i12@?0i8
completionConditionLock
syncRequestURL
kvs-sync
pullKeyValueRequestURL
kvs-get
pushKeyValueRequestURL
kvs-put
pullAllKeyValueRequestURL
kvs-getall
pushAllKeyValueRequestURL
kvs-putall
v32@?0@8@16^B24
com.apple.upp
com.apple.upp-extras
v24@?0@8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
key bag contents = 
v32@?0@"NSString"8@16@"NSError"24
%@.%@
v56@?0@"NSString"8@16@?<@@?@>24@"NSString"32@"NSString"40@"NSDictionary"48
@16@?0@8
v24@?0@"NSString"8@"NSString"16
domainDisabled
kvs-sync-disabled
pollingIntervalInSeconds
kvs-sync-polling-interval-secs
SBKStoreURLBagContext.m
Use +loadBagContextFromURLBag:domain:completionBlock:
%@(%@) = %@
%@ domain=%@, enabled=%d, requestURLs = 
[result: payload-pair=%@, anchor=%@]
%@ domain = %@, GET: key='%@', %@, %@
SBKRequestData.m
%lld-%@-%lld
SBKSyncTransaction.m
Invalid processor
????
SYNC: anchor=%@
, deletes=%@
, updates=%@
%@ domain = %@, %@
transactions using conflict detection must supply a conflict ordinal
v12@?0B8
%@ '%@'
SBKAsynchronousTask.m
must have a finish and expiration handler specified
SBKAsynchronousTask
com.apple.amp.StoreBookkeeper
v32@?0@8Q16^B24
, itemCount = %@
B24@?0B8B12@"NSError"16
com.apple.storebookkeeper.SBKSyncRequestHandler
v8@?0
@8@?0
SBKSyncRequestHandler.m
subclass must supply key-value pair by implementing the SBKSyncTransactionProcessing protocol
1.2.11
ERROR: deflateEnd() failed: %s
SBKZipDeflateMemoryOutputStream.m
stream is already closed.
64-bit buffer writes not supported.
subclass must implement
 %@ [%@] URL = %@, shouldAuthenticate = %d, arguments = %@, headers = %@, bodyData = %@ 
 %@ [%@]
SBKRequestBodyContentType-TextXML
SBKRequestBodyContentType-EncodeGzip
SBKRequest.m
Invalid bodyContentType requested for propertyList
v32@?0@"NSString"8@"NSString"16^B24
guid
gzip
Accept-Encoding
Content-Encoding
Content-Type
POST
application/x-plist
text/xml; charset=UTF-8
text/plain; charset=UTF-8
SBKBookkeeperRequestErrorDomain
status
 [%ld]: responseDictionary = %@, (%@)
Success
Unknown server initialization error
The request format was invalid, or referenced an invalid domain
An unspecified server-side error (type 1) was encountered
The request requires an authenticated weak-token
The request deniend (punted - server too busy)
The request denied (too many recent request)
Unknown status
An unspecified server-side error (type 2) was encountered
The client's user agent is not supported
The putAll had a version mismatch
The domain specified in the request is locked
%@ (status = %@)%@
 Please enable logging and file a bug.
SBKRequestHandler.m
SBKTransaction.m
Subclass must implement
domain-version
base-version
Unarchiving SBKStoreClampsController resulted in error:%@
Archiving SBKStoreClampsController resulted in error:%@
Reseting Clamps
Drop transaction: %@ -- Too soon since last authentication: %f [%fs]
[StoreBookkeeper] SBKStoreClampsController - will avoid presenting authentication for %02llu:%02llu:%2f
Drop transaction: %@ -- Interval since last request: %f [%fs]
Drop transaction: <%p> -- Networking BlockedUntil: %@
Drop transaction: <%p> -- AccountIdentifierCheck != 0
Drop transaction: <%p> -- BackOff until: %@ [%fs]
Drop transaction: <%p> -- userCancelledBackOff until: %@ [%fs]
Cancelling transaction: %@ -- isCurrentTransaction: %@
No Pending Transactions
Transaction In progress: %@
Processing Transaction: %@
Scheduling Transaction: %@
Holding transaction %@ (due to clamps) %.2f seconds
Unable to schedule (due to clamps %@) transaction %@.
Transaction Finished: %@
Transaction Failed: %@ -- Error: %@
Not using deserialized response because it is not a dictionary as expected!
Deserialized server response: %@
Deserialized server response produced response data: %@
Generic error indicated by response responseDictionary: %@
Validation error indicated by response responseDictionary: %@
Unknown error in response: %@
Not using deserialized responseDictionary because transactions have been cancelled!
Operation failedWithError: %@ -- inputError = %@
[StoreBookkeeper] %@.  Will suppress authentication dialogs for a while.
ERROR: server rejected %@ because the payload was too big.
[StoreBookkeeper] setting up an authentication context - will FORCE authentication!
WARNING: no data was provided for updated key %@, skipping just that item
Sync request payload (plist): %@
Doesn't matter what the DISD is set to since authentication is forced for transaction: %@
First Use Alert %@ [transaction = %@]
No longer logged in Use Alert %@ [transaction = %@]
AccountIdentifier mismatch: %@ vs %@ [transaction = %@]
SBKUniversalPlaybackPositionMetadata - keyValueStorePayload=nil
SBKUniversalPlaybackPositionMetadata - error deserializing data. error=%{public}@,
SBKUniversalPlaybackPositionMetadata - Unarchiving error: %@
SBKUniversalPlaybackPositionMetadata - encountered invalid data while unarchiving payload for itemIdentifier: %@
SBKUniversalPlaybackPositionMetadata - error serializing data. %{public}@ error=%{public}@,
starting synchronizing changes for resignActive
finished synchronizing changes for resignActive
%s - %@ already in progress.  pending our completion block to be notified when it completes.
%s - beginning %@...
_onQueueRunTaskWithName %@ - short circuiting. _accountForSyncing=nil
_onQueueSync - beginning %@ operation...
_onQueueSync - %@ completed. %@
_onQueueSync - synchronize already in progress.  pending our completion block to be notified when it completes.
_onQueueSync - synchronize operation beginning...
_onQueueSync - push value operation beginning...
_onQueueSync - pull value operation beginning...
_onQueueLoadBag - skipping bag load: _accountIdentifier=%@ [no valid account identifier]
_onQueueLoadBag - load bag already in progress.  pending our completion block to be notified when it completes.
_onQueueLoadBag - load bag completed.%@
_onQueueLoadBag - load bag operation beginning...
scheduled timer date already passed.  Firing immediately
scheduling next timer update at %@
suspending update timer
Skipping synchronize: synchronization already in progress
Beginning synchronization
ERROR: will skip syncing item with no sync metadataIdentifier: %@
Gathered local %lu items to sync from dataSource: %@
dataSource transaction context = %@
Performing sync with server using syncAnchor = %@
Sending merged items to server: %@
WARNING: sent resolved conflict to server, but still received conflicts in the response, saving those for next time...
Committing merged items with domainRevision: %@ to local database: %@
Finished synchronization
Handled items in response, will save %lld items locally and push back %lld conflict resolutions
keys to save to local db = %@
keys to push to cloud db = %@
transaction is being canceled.  error = %@
Detected account change.  Getting remote items since version 0 instead of %@
WARNING: Invalid response (%@).  Skipping...
[SBKAsynchronousTask] WARNING: task timed out: %@
Invoking expiration handler for %@, with cancelType = %d
beginTaskOperation %@
Invoking completion handler for %@, result = %@, error = %@
finished loading domain version: domainVersion = %@%@
will process response with responseDomainVersion = %@
ERROR: failed to serialize property list with error = %@
SBKPullValueRequest
SBKAdditions
SBKStoreClampsController
NSSecureCoding
NSCoding
SBKGenericKeyValuePair
NSObject
SBKTransactionController
SBKTransactionURLOperationDelegate
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
SBKSyncResponseData
SBKStoreError
SBKPrivate
SBKTransactionURLOperation
SBKSyncRequestData
SBKStoreAuthenticationController
SBKPushValueTransaction
SBKPreferences
SBKSimpleTransactionRequestHandler
SBKUniversalPlaybackPositionMetadata
NSCopying
SBKUniversalPlaybackPositionStore
SBKPlaybackPositionSyncRequestHandler
SBKTransactionControllerDelegate
SBKSyncTransactionProcessing
SBKStoreURLBagContext
NSMutableCopying
SBKMutableStoreURLBagContext
SBKPullValueTransaction
SBKPushValueResponse
SBKRequestData
SBKSyncResponse
SBKSyncTransaction
SBKSyncResponseDataKeyEnumerator
SBKAsynchronousTask
SBKLoadDomainVersionRequestHandler
SBKSyncRequestHandler
SBKZipDeflateMemoryOutputStream
SBKRequest
SBKResponse
SBKResponseStatus
SBKSyncRequest
SBKRequestHandler
SBKTransaction
SBKPullValueResponse
SBKPushValueRequest
T@"<SBKUniversalPlaybackPositionDataSource>",R,W,N,V_dataSource
ExtrasDomainIdentifier
T@"NSString",R,C,N,V_syncAnchor
SBKDataByDeflatingWithGZip
T@"SBKRequest",&,N,V_SBKRequest
SBKDataByInflatingWithGZip
T@,&,N,V_result
SBKRequest
Td,N,V_pollingIntervalInSeconds
SBKStringFromDigestData:
_action
T@"<SBKKeyValuePayloadPair>",R,N,V_clientItemPayloadPair
_domain
T@"<SBKKeyValuePayloadPair>",R,N,V_resultItemPayloadPair
_fatalSyncError
T@"<SBKTransactionControllerDelegate>",W,N,V_delegate
_itemIdentifier
T@"ISDataProvider",&,N,V_responseDataProvider
_method
T@"MSVTaskAssertion",&,N,V_taskAssertion
_onQueueSynchronizeWithAutosynchronizeMask:withCompletionBlock:
T@"NSArray",R,N,V_deletedKeys
_onQueue_isIdle
T@"NSArray",R,N,V_keysToUpdate
_pendingUserDefaultArchivedData
T@"NSArray",R,N,V_responseDeletedKeys
_responseStatus
T@"NSArray",R,N,V_successfullyDeletedKeys
_syncInProgress
T@"NSArray",R,N,V_updatedKeys
_timerIsStopped
T@"NSData",&,N,V_pendingUserDefaultArchivedData
accountIdentifierCheckTimestamp
T@"NSData",R,N,V_itemValuePayload
allKeys
T@"NSDate",&,N,V_dateToFireNextTimer
bodyContentType
T@"NSDictionary",R,N,V_responseDictionary
conflictDetectionOrdinalForKey:
T@"NSEnumerator",&,N,V_conflictedKeysEnumerator
containsObject:
T@"NSEnumerator",&,N,V_updatedKeysEnumerator
enabled
T@"NSError",&,N,V_fatalSyncError
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
T@"NSMutableArray",&,N,V_completions
isProxy
T@"NSMutableDictionary",&,N,V_responseOpEntiesByKey
itemKey
T@"NSNumber",R,N
newURLOperation
T@"NSOperationQueue",&,N,V_operationQueue
release
T@"NSString",C,D,N
saveAccountToLastSyncedDefaults
T@"NSString",C,N,V_domain
setBag:
T@"NSString",R,C
setCompletions:
T@"NSString",R,C,N,V_consoleDescription
setMaxConcurrentOperationCount:
T@"NSString",R,C,N,V_requestedKey
setTransaction:
T@"NSString",R,N,V_clientItemVersionAnchor
setWithObjects:
T@"NSString",R,N,V_conflictItemVersionAnchor
stringFromDate:
T@"NSString",R,N,V_itemKey
syncTransaction
T@"NSString",R,N,V_kvsKey
timeoutInterval
T@"NSString",R,N,V_resultDomainVersion
zstream
.cxx_destruct
T@"NSError",R,N
MIMEType
T@"NSURL",&,D,N
SBKDataByDeflatingWithNoZipHeader
T@"SSAccount",R
SBKDataByInflatingWithNoZipHeader
TB,N,V_canceled
SBKStringByMD5HashingString:
T#,R
_conflictedKeys
T@"<SBKKeyValuePayloadPair>",R,N,V_requestItemPayloadPair
_domainDisabled
T@"<SBKSyncTransactionProcessing>",W,N,V_transactionProcessor
_isRechedulable
T@"<SBKUniversalPlaybackPositionDataSource>",&,N,V_dataSource
_kvsKey
T@"MSVTaskAssertion",&,N,V_backgroundTaskAssertion
_onQueueRunNextPendingTaskBlock
T@"NSArray",R,N,V_conflictedKeys
_onQueue_addPendingTransaction:
T@"NSArray",R,N,V_keysToDelete
_operationQueue
T@"NSArray",R,N,V_responseConflictedKeys
_processNextKey
T@"NSArray",R,N,V_responseUpdatedKeys
_result
T@"NSArray",R,N,V_successfullyUpdatedKeys
_syncRequestURL
T@"NSData",&,N,V_bodyData
account
T@"NSData",R,N,V_conflictItemValuePayload
allHeaderFields
T@"NSData",R,N,V_kvsPayload
T@"NSDictionary",&,N,V_transactionClamps
completionBlock
T@"NSDictionary",R,N,V_responseHeaderFields
conflictItemKey
T@"NSEnumerator",&,N,V_deletedKeysEnumerator
dealloc
T@"NSError",&,N,V_error
finishedHandler
T@"NSError",R,N,V_error
isError
T@"NSMutableArray",&,N,V_pendingTransactions
isValid
T@"NSMutableDictionary",&,N,V_userInfo
lastFailedSyncAccountIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
numberWithBool:
T@"NSString",&,N,V_overrideSyncAnchor
removeObserver:
T@"NSString",C,N
setAutomaticSynchronizeOptions:
T@"NSString",C,N,V_itemIdentifier
setBool:forKey:
T@"NSString",R,C,N
setCurrentTask:
T@"NSString",R,C,N,V_domain
setPromptStyle:
T@"NSString",R,N,V_MIMEType
setValuesForKeysWithDictionary:
T@"NSString",R,N,V_conflictItemKey
shouldFileRadar
T@"NSString",R,N,V_domainVersion
success
T@"NSString",R,N,V_itemVersion
timeout
T@"NSString",R,N,V_requestItemVersionAnchor
userCancelledSignInBackOffUntil
T@"NSString",R,N,V_resultItemVersionAnchor
T@"NSTimer",&,N,V_timer
T@"NSURL",&,N,V_pullAllKeyValueRequestURL
T@"NSURL",&,N,V_pullKeyValueRequestURL
T@"NSURL",&,N,V_pushAllKeyValueRequestURL
T@"NSURL",&,N,V_pushKeyValueRequestURL
T@"NSURL",&,N,V_requestURL
T@"NSURL",&,N,V_syncRequestURL
T@"NSURL",R,N,V_requestURL
T@"NSURL",R,N,V_syncRequestURL
T@"SBKAsynchronousTask",&,N,V_bagLookupTask
T@"SBKAsynchronousTask",&,N,V_currentTask
T@"SBKAsynchronousTask",&,N,V_lookupDomainVersionTask
T@"SBKRequest",&,N,V_activeRequest
T@"SBKRequestHandler",&,N,V_currentTaskRequestHandler
T@"SBKResponseStatus",R,N,V_responseStatus
T@"SBKStoreAuthenticationController",&,N,V_authenticationController
T@"SBKStoreURLBagContext",R,N,V_bagContext
T@"SBKSyncResponseData",&,N,V_responseData
T@"SBKSyncResponseData",R,N,V_responseData
T@"SBKSyncResponseData",R,N,V_syncResponseData
T@"SBKSyncTransaction",&,N,V_transaction
T@"SBKSyncTransaction",R,N,V_transaction
T@"SBKTransaction",&,N,V_currentTransaction
T@"SBKTransaction",&,N,V_transaction
T@"SBKTransactionController",&,N,V_kvsController
T@"SBKTransactionController",R,N,V_transactionController
T@"SSAccount",R,N,V_account
T@"SSAccount",R,N,V_storeAccount
T@"SSURLBag",&,N,V_bag
T@,W,N,V_networkTypeObserver
T@?,C,N,V_completionBlock
T@?,C,N,V_expirationHandler
T@?,C,N,V_finishedHandler
TB,D,N
TB,N
TB,N,V_domainDisabled
TB,N,V_hasBeenPlayed
TB,N,V_includeDeviceGUID
TB,N,V_isResolvingError
TB,N,V_loadsRemoteItemCount
TB,N,V_resolvedConflictsNeedSyncToServer
TB,N,V_shouldAuthenticate
TB,N,V_shouldAuthenticateIfNecessary
TB,N,V_syncInProgress
TB,R
TB,R,N
TB,R,N,GisConcurrent,V_concurrent
TB,R,N,GisEnabled,V_enabled
TB,R,N,GisIdle
TB,R,N,V_canceled
TB,R,N,V_isError
TB,R,N,V_isPuntedError
TB,R,N,V_isRecoverable
TB,R,N,V_shouldFileRadar
TB,R,N,V_success
TQ,N
TQ,N,V_itemCount
TQ,N,V_playCount
TQ,R
TQ,R,N,V_responseCode
TQ,R,N,V_responseItemCount
Td,D,N
Td,N,V_accountIdentifierCheckTimestamp
Td,N,V_authenticationNeededTimestamp
Td,N,V_backOffUntil
Td,N,V_bookmarkTime
Td,N,V_networkingBlockedUntil
Td,N,V_nextUserCancelBackOffInterval
Td,N,V_timestamp
Td,N,V_userAcceptedSyncTimestamp
Td,N,V_userCancelledSignInBackOffUntil
Td,R,N
Td,R,N,V_retrySeconds
Ti,N,V_cancelType
Tq,N,V_conflictResolutionAttempts
Tq,N,V_method
Tq,R,N
Tq,R,N,V_conflictDetectionType
Tq,R,N,V_statusCode
Tq,R,N,V_type
UPPDomainIdentifier
URLBagForContext:
URLCache
URLCacheID
URLWithString:
UTF8String
_MIMEType
_SBKDataByDeflatingWithNoZipHeaderWithCompression:
_SBKDataByInflatingWithNoZipHeader
_SBKRequest
_account
_accountForSyncing
_accountIdentifier
_accountIdentifierCheckTimestamp
_accountsObserver
_activeRequest
_arguments
_authenticationController
_authenticationNeededTimestamp
_automaticSynchronizeOptions
_automaticallySynchronizeLocalChangesOnResignActive
_automaticallySynchronizeOnBecomeActive
_autorefreshInterval
_backOffUntil
_backgroundTaskAssertion
_bag
_bagContext
_bagLookupTask
_beginBackgroundTask
_bodyContentType
_bodyData
_bookmarkTime
_bufferingSize
_canScheduleTransactionBasedOfNetworkingBlocked:error:
_canScheduleTransactionBasedOnAccountIdentifierCheck:error:
_canScheduleTransactionBasedOnBackOff:error:
_canScheduleTransactionBasedOnType:error:
_canScheduleTransactionBasedOnUserCancelledSignIn:error:
_cancelType
_canceled
_clientItemPayloadPair
_clientItemVersionAnchor
_completionBlock
_completions
_concurrent
_conflictDetectionType
_conflictItemKey
_conflictItemValuePayload
_conflictItemVersionAnchor
_conflictResolutionAttempts
_conflictedKeysEnumerator
_consoleDescription
_contentEncodingTypeStringForBodyContentEncodingType:
_contentTypeStringForBodyContentType:
_currentKVSTransaction
_currentTask
_currentTaskRequestHandler
_currentTransaction
_dataSource
_dataSourceCancelTransaction
_dataSourceTransactionContext
_dateToFireNextTimer
_debugDescription
_defaultHeaderFields
_delegate
_delegateShouldScheduleTransaction:error:
_delegateTransactionDidCancel:withError:
_delegateTransactionDidFail:withError:
_delegateTransactionDidFinish:
_deletedKeys
_deletedKeysEnumerator
_deserializeResponseDictionary:response:
_domainVersion
_effectiveAutorefreshRate
_enabled
_endBackgroundTask
_enqueueStoreOperation:
_error
_expirationHandler
_findFirstValueInBag:keyEnumerator:valueTransformer:defaultValue:completionBlock:
_finishedHandler
_handlerQueue
_hasBeenPlayed
_hasLocalChangesToSync
_headers
_includeDeviceGUID
_init
_initWithDomain:syncRequestURL:domainDisabled:
_initialAutosyncInterval
_invalidateAssertion:
_invalidateTimer
_isActive
_isError
_isPuntedError
_isRecoverable
_isResolvingError
_itemCount
_itemKey
_itemValuePayload
_itemVersion
_keyForTransaction:
_keysToDelete
_keysToUpdate
_kvsController
_kvsPayload
_loadsRemoteItemCount
_lock
_lookupDomainVersionTask
_mergeConflictedItemFromSyncResponse:
_mergeMetadataItemsFromSyncResponse
_metadataItemsFromDataSource
_metadataItemsToCommitToDataSource
_metadataItemsToCommitToKVSStorage
_methodStringForMethod:
_needsConflictDetection
_networkTypeChangedNotification:
_networkTypeObserver
_networkingBlockedUntil
_nextUserCancelBackOffInterval
_onQueueFireExpirationHandlerIfNecesary
_onQueueLoadBagContextWithCompletionHandler:
_onQueueLoadRemoteDomainVersionWithCompletionBlock:
_onQueuePullMetadataItemWithItemIdentifier:completionBlock:
_onQueuePushMetadataItem:completionBlock:
_onQueueResumeTimer
_onQueueRunTaskWithName:taskCompletionHandler:runTaskBlock:
_onQueueScheduleTimer
_onQueueStartNewTimer
_onQueueStartNewTimerWithTimeIntervalSinceNow:
_onQueueStopTimer
_onQueueSuspendTimer
_onQueueSynchronizeImmediatelyWithCompletionHandler:
_onQueueUpdateTimerForActiveChanges
_onQueueUpdateTimerForAutomaticSyncOptionChanges
_onQueue_assertIsTransactionValid:error:
_onQueue_authenticationCanProcessTransaction:error:
_onQueue_beginBackgroundTask
_onQueue_canScheduleTransaction:error:
_onQueue_cancelAllPendingTransactions:
_onQueue_cancelTransaction:error:
_onQueue_clampsCanScheduleTransaction:error:
_onQueue_clampsController
_onQueue_clearTransactionResponseData
_onQueue_currentTransactionDidFinish
_onQueue_endBackgroundTask
_onQueue_isEnabledForTransaction:error:
_onQueue_performCancelErrorHandlingForError:
_onQueue_performDefaultErrorHandlingForError:
_onQueue_performRetryErrorHandlingForError:
_onQueue_processCurrentTransaction
_onQueue_processOperationOutput:operation:operationAuthenticated:
_onQueue_processPendingTransactions
_onQueue_resolveError:resolution:
_onQueue_scheduleTransaction:isRetry:
_onQueue_transactionDidCancel:withError:
_onQueue_transactionDidFail:withError:
_outputBuffer
_overrideResponseDomainVersion
_overrideSyncAnchor
_pendingTaskBlocks
_pendingTransactions
_playCount
_pollingIntervalInSeconds
_pollingLimitFromBag
_preferencesDidChange
_prefsObserver
_processDataInResponse:
_processDeletedKey:isDirty:
_processUpdatedKey:isConflict:isDirty:
_pullAllKeyValueRequestURL
_pullKeyValueRequestURL
_pushAllKeyValueRequestURL
_pushKeyValueRequestURL
_queue
_refreshTimerActive
_requestItemPayloadPair
_requestItemVersionAnchor
_requestURL
_requestedKey
_resolveConflictBetweenClientPayloadPair:andServerPayloadPair:
_resolveError:resolution:
_resolvedConflictsNeedSyncToServer
_responseCode
_responseConflictedKeys
_responseData
_responseDataByKey
_responseDataProvider
_responseDeletedKeys
_responseDictionary
_responseHeaderFields
_responseItemCount
_responseMetadataItemsMergedToCommitBackToKVSStorage
_responseMetadataItemsToCommitToDataSource
_responseOpEntiesByKey
_responseUpdatedKeys
_resultDomainVersion
_resultItemPayloadPair
_resultItemVersionAnchor
_retrySeconds
_rightNow
_sendFinishedBlockForTransaction:success:cancelled:error:handledAsFinishedBlock:
_serializableConflictDetectionOrdinalForKey:
_serializableConflictDetectionValue
_serializableDeleteItemPayloadDictionaryForKey:
_serializableUpdateItemPayloadDictionaryForKey:
_shouldAuthenticate
_shouldAuthenticateIfNecessary
_shouldFileRadar
_shouldStop
_signalKVSTransactionCompletion:
_signalKVSTransactionCompletion:withError:
_statusCode
_storeAccount
_storeOperationDidComplete:
_success
_successfullyDeletedKeys
_successfullyUpdatedKeys
_syncAnchor
_syncOperationQueue
_syncResponseData
_synchronize:
_synchronouslyRunKVSTransaction:
_taskAssertion
_taskInvalidationDisabled
_testableMetadataItem_1
_timeout
_timeoutTimer
_timer
_timerFired:
_timestamp
_transaction
_transactionClamps
_transactionController
_transactionProcessor
_type
_updateAutorefreshRateSettingAndRestartTimer:
_updateForStoreAccountsChange
_updateSettingsFromLoadedBagContext:
_updatedKeys
_updatedKeysEnumerator
_userAcceptedSyncTimestamp
_userCancelledSignInBackOffUntil
_userInfo
_validateTransactionProcessor:
absoluteString
acceptsGzipEncoding
accessTransactionClampsWithBlock:
accountDSID
accountName
accountWithUniqueIdentifier:
activeAccount
activeRequest
addObject:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperation:
addTaskCompletionBlock:
appendBytes:length:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
authenticationController
authenticationErrorsForTransaction:
authenticationNeededTimestamp
automaticSynchronizeOptions
automaticallySynchronizeLocalChangesOnResignActive
automaticallySynchronizeOnBecomeActive
autorelease
backOffForTimeInterval:
backOffUntil
backgroundTaskAssertion
bagContext
bagLookupTask
becomeActive
beginTaskOperation
beginTransactionWithItemsToSyncEnumerationBlock:
bodyContentEncodingType
bodyData
bookmarkTime
boolForKey:
boolValue
bytes
canScheduleTransaction:error:
cancel
cancelAllOperations
cancelAllTransactions
cancelAllTransactionsCancelCode:
cancelScheduledTransaction:
cancelType
cancelUniversalPlaybackPositionTransaction:
cancelWithError:
canceled
canonicalResponseForResponse:
checkForAvailabilityWithCompletionBlock:
clampsKey
class
clearAccountIdentifierCheckTimestamp
clearAuthenticationRequest
clearBackOff
clearLastSyncnedAccount
clearNetworkingBlocked
clearTimestampForTransaction:
clearTransactionResponseData
clearUserAcceptedSyncTimestamp
clearUserCancelledSignIn
clientItemPayloadPair
clientItemVersionAnchor
close
code
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
completions
componentsJoinedByString:
concurrent
conflictDetectionType
conflictItemValuePayload
conflictItemVersionAnchor
conflictResolutionAttempts
conflictedKeys
conflictedKeysEnumerator
conformsToProtocol:
consoleDescription
contextWithBagType:
copy
copyRequestProperties
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentKVSTransaction
currentStoreAccountName
currentTask
currentTaskRequestHandler
currentTransaction
data
dataByDeflatingData:
dataSource
dataSourceTransactionContext
dataWithPropertyList:format:options:error:
databasePath
date
dateToFireNextTimer
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodePropertyListForKey:
defaultCenter
defaultIdentityStore
defaultStore
deflatedData
delegate
delegateCancelledErrorWithTransaction:underlyingError:
deletedKeys
deletedKeysEnumerator
deprecated_setDataSource:
description
descriptionWithoutHeaderFields
deserializeResponseBodyWithTransaction:
deserializedResponseBodyWithTransaction:responseDictionary:response:
dictionary
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
distantFuture
distantPast
domain
domainDisabled
domainVersion
doubleValue
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endTaskOperation
enumerateKeysAndObjectsUsingBlock:
enumerateKeysInResponseForTransaction:completionBlock:
enumerateObjectsUsingBlock:
enumerateRequestURLBagKeysWithBlock:
enumerateValuesForProperties:usingBlock:
error
errorWithDomain:code:userInfo:
expirationHandler
fatalSyncError
finishDecoding
finishTaskOperationWithResult:error:
firstObject
floatValue
guid
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasAuthenticatedTooRecentlyForTransaction:error:
hasBeenPlayed
hasLocalChangesToSync
hasUserRecentlyAcceptedSync
hash
idle
includeDeviceGUID
init
initAsTestableItem
initForReadingFromData:error:
initWithAccount:
initWithBag:domain:
initWithBagContext:
initWithBagContext:accountIdentifier:
initWithBufferingSize:compressionType:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCapacity:
initWithCode:headerFields:responseDictionary:MIMEType:error:
initWithCoder:
initWithCondition:
initWithDataSource:bagContext:
initWithDataSource:bagContext:accountIdentifier:
initWithDomain:code:userInfo:
initWithDomain:dataSource:automaticSynchronizeOptions:accountIdentifier:isActive:
initWithDomain:requestURL:
initWithDomain:requestURL:forAccount:
initWithHandlerQueue:timeout:debugDescription:
initWithInitialUpdateDelay:
initWithKVSKey:kvsPayload:
initWithName:pid:subsystem:reason:flags:
initWithObjectsAndKeys:
initWithRequestURL:
initWithResponseData:
initWithStatus:isRecoverable:isError:consoleDescription:shouldFileRadar:
initWithStoreAccount:
initWithStoreBagContext:clientItemPayloadPair:clientItemVersionAnchor:
initWithStoreBagContext:requestedKey:clientItemPayloadPair:clientItemVersionAnchor:
initWithStoreBagContext:syncAnchor:keysToUpdate:keysToDelete:conflictDetectionType:
initWithSyncRequestURL:domain:syncAnchor:keysToUpdate:keysToDelete:conflictDetectionType:
initWithTransaction:
initWithTransaction:responseDictionary:response:
initWithURL:
initWithURLResponse:responseDictionary:
insertObject:atIndex:
integerValue
invalidate
invokeTaskCompletionBlocksWithBlock:
isAccountsChangedError
isAuthenticationError
isAuthenticationValidForTransaction:error:
isClampError
isConcurrent
isEnabled
isEqual:
isEqualToDate:
isEqualToString:
isGenericError
isIdle
isKindOfClass:
isMainThread
isMemberOfClass:
isNetworkingBlocked
isPuntedError
isRecoverable
isRecoverableError
isResolvingError
isSuccess
isTransactionCancelledError
isTransactionMissingInformationError
isUnsupportedClient
isValidationError
itemCount
itemIdentifier
itemValuePayload
itemVersion
keyValuePairForUpdatedKey:
keyValueStoreDisabledErrorWithTransaction:underlyingError:
keyValueStoreErrorWithCode:localizedDescription:transaction:underlyingError:
keyValueStoreItemIdentifierForItem:
keyValueStoreItemIdentifierForUniqueStoreID:itemTitle:albumName:itemArtistName:feedURL:feedGUID:
keyValueStorePayload
keysToDelete
keysToUpdate
killSwitchErrorWithTransaction:underlyingError:
kvsController
kvsKey
kvsPayload
kvsValueDescription
lastFailedSyncAccountName
lastPathComponent
lastSyncedAccountIdentifier
lastSyncedAccountName
lastSyncedDomainVersion
length
loadBagContextFromURLBag:domain:completionBlock:
loadBagContextWithCompletionBlock:
loadRemoteDomainVersionWithCompletionBlock:
loadValueForKey:completionBlock:
loadWithCompletionBlock:
loadsRemoteItemCount
localizedDescription
localizedStringForKey:value:table:
lock
lockWhenCondition:beforeDate:
longLongValue
lookupDomainVersionTask
mainBundle
mainQueue
metadataItemsToCommitToDataSource
metadataItemsToCommitToKVSStorage
metadataWithItemIdentifier:bookmarkTime:bookmarkTimestamp:hasBeenPlayed:playCount:
metadataWithItemIdentifier:keyValueStorePayload:
metadataWithItemIdentifier:keyValueStorePayload:failuresOkay:
metadataWithValuesFromDataSourceItem:
method
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
metricsLoadURLSessionDuration
musicLibraryForUserAccount:
mutableCopy
mutableCopyWithZone:
needsAuthentication
networkTypeObserver
networkingBlockedErrorWithTransaction:underlyingError:
networkingBlockedUntil
newKVSSyncTransactionWithUpdatedMetadataItemIdentifiers:processConflicts:
newRequest
newURLOperationWithDelegate:
nextObject
nextUserCancelBackOffInterval
noStoreAccountErrorWithTransaction:underlyingError:
numberWithDouble:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectEnumerator
objectForKey:
objectForKey:withDefaultValue:
objectForKeyedSubscript:
operation:credentialForAuthenticationChallenge:
operation:didAuthenticateWithDSID:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:dispositionForAuthenticationChallenge:
operation:failedWithError:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:sanitizedStringForString:
operation:shouldAuthenticateWithContext:responseHandler:
operation:shouldSetStoreFrontID:
operation:updatedProgress:
operation:willSendRequest:
operationFinished:
operationQueue
operationWillStart:
operationWithRequest:delegate:
operations
overrideSyncAnchor
pairWithKVSKey:kvsPayload:
payloadDataForUpdateResponseKey:
pendingTransactions
pendingUserDefaultArchivedData
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playCount
pollingIntervalInSeconds
postNotificationName:object:
postNotificationName:object:userInfo:
previousStoreAccountName
processDataInResponse:withCompletionHandler:
propertyListBodyWithTransaction:
propertyListWithData:options:format:error:
pullAllKeyValueRequestURL
pullKeyValueRequestURL
pullMetadataItemWithItemIdentifier:completionBlock:
pushAllKeyValueRequestURL
pushKeyValueRequestURL
pushMetadataItem:completionBlock:
queue
raise:format:
registerDefaultsIfKeyNotSet:registrationBlock:
removeAllObjects
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
requestError
requestForTransaction:
requestItemPayloadPair
requestItemVersionAnchor
requestProperties
requestURL
requestWithRequestURL:
requestedKey
reset
resignActive
resolvedConflictsNeedSyncToServer
respondsToSelector:
response
responseCode
responseConflictedKeys
responseData
responseDataForResponseKey:
responseDataProvider
responseDeletedKeys
responseDictionary
responseDomainVersion
responseHeaderFields
responseItemCount
responseOpEntiesByKey
responseStatus
responseStatusForStatusCodeNumber:
responseUpdatedKeys
responseWithCode:headerFields:responseDictionary:MIMEType:error:
responseWithResponse:
responseWithResponse:transaction:
responseWithURLResponse:responseDictionary:
result
resultDomainVersion
resultItemPayloadPair
resultItemVersionAnchor
retain
retainCount
retrySeconds
runWithCompletionHandler:
saveAccountToLastFailedSyncDefaults
saveToUserDefaults
scheduleTransaction:
scheduleTransaction:finishedBlock:
scheduleTransaction:withTransactionFinishedBlock:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
self
serializableRequestBodyPropertyList
serverClampErrorWithTransaction:retrySeconds:underlyingError:
setAccountIdentifierCheckTimestamp
setAccountIdentifierCheckTimestamp:
setActiveRequest:
setAllowsSilentAuthentication:
setAuthenticationContext:
setAuthenticationController:
setAuthenticationNeededTimestamp:
setAuthenticationRequest
setAutomaticallySynchronizeLocalChangesOnResignActive:
setAutomaticallySynchronizeOnBecomeActive:
setBackOffUntil:
setBackgroundTaskAssertion:
setBagLookupTask:
setBodyData:
setBodyDataWithPropertyList:
setBookmarkTime:
setCancelType:
setCanceled:
setCompletionBlock:
setConflictResolutionAttempts:
setConflictedKeysEnumerator:
setCurrentKVSTransaction:
setCurrentTaskRequestHandler:
setCurrentTransaction:
setDataProvider:
setDataSource:
setDataSourceTransactionContext:
setDateStyle:
setDateToFireNextTimer:
setDecodingFailurePolicy:
setDelegate:
setDeletedKeysEnumerator:
setDomain:
setDomainDisabled:
setEnabled:
setError:
setExpirationHandler:
setFatalSyncError:
setFinishedHandler:
setHTTPBody:
setHTTPMethod:
setHasBeenPlayed:
setHasLocalChangesToSync:
setIncludeDeviceGUID:
setInvalidationHandler:
setIsResolvingError:
setItemCount:
setItemIdentifier:
setKvsController:
setLoadsRemoteItemCount:
setLookupDomainVersionTask:
setMetadataItemsToCommitToDataSource:
setMetadataItemsToCommitToKVSStorage:
setMethod:
setName:
setNeedsAuthentication:
setNetworkTypeObserver:
setNetworkingBlocked
setNetworkingBlockedUntil:
setNextUserCancelBackOffInterval:
setObject:forKey:
setObject:forKeyedSubscript:
setOperationQueue:
setOverrideSyncAnchor:
setPendingTransactions:
setPendingUserDefaultArchivedData:
setPlayCount:
setPollingIntervalInSeconds:
setPullAllKeyValueRequestURL:
setPullKeyValueRequestURL:
setPushAllKeyValueRequestURL:
setPushKeyValueRequestURL:
setQueue:
setQueuePriority:
setRequestProperties:
setRequestURL:
setResolvedConflictsNeedSyncToServer:
setResponseData:
setResponseDataProvider:
setResponseDomainVersion:
setResponseOpEntiesByKey:
setResult:
setSBKRequest:
setShouldAuthenticate:
setShouldAuthenticateIfNecessary:
setShouldMessageMainThread:
setShouldPostFooterSectionChanged:
setShouldProcessDialogs:
setShouldTriggerDownloads:
setSyncInProgress:
setSyncRequestURL:
setTaskAssertion:
setTimeStyle:
setTimeoutInterval:
setTimer:
setTimestamp:
setTimestampForTransaction:
setTransactionClamps:
setTransactionContext:forKey:
setTransactionProcessor:
setUpdatedKeysEnumerator:
setUserAcceptedSyncTimestamp
setUserAcceptedSyncTimestamp:
setUserCancelledSignIn
setUserCancelledSignInBackOffUntil:
setUserInfo:
setValue:forArgument:
setValue:forHTTPHeaderField:
setValue:forHeaderField:
setValue:forKey:
setValue:forRequestParameter:
setWithArray:
sharedApplication
sharedClampsController
sharedInstance
shouldAuthenticate
shouldAuthenticateIfNecessary
shouldForceAuthenticationForTransaction:
standardUserDefaults
startTransactionWithSyncAnchor:keysToUpdate:keysToDelete:finishedBlock:
statusCode
storeAccount
storeAccountMismatchErrorWithPreviousStoreAccountName:currentStoreAccountName:transaction:underlyingError:
storeAccountSessionExpiredWithTransaction:underlyingError:
storeBookkeeperPreferences
storeGenericErrorWithTransaction:underlyingError:
storeLoggedOutErrorWithPreviousStoreAccountName:transaction:underlyingError:
storeValidationErrorWithTransaction:underlyingError:
string
stringByAppendingFormat:
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
successfullyDeletedKeys
successfullyUpdatedKeys
superclass
supportsSecureCoding
syncAnchor
syncInProgress
syncRequestURL
syncResponseData
synchronizeImmediatelyWithCompletionBlock:
synchronizeImmediatelyWithCompletionHandler:
synchronizeWithCompletionHandler:
taskAssertion
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timer
timestamp
transaction
transaction:conflictDetectionOrdinalForKey:
transaction:conflictDetectionTypeForTransactionDetectionType:
transaction:didProcessResponseData:
transaction:keyValuePairForUpdatedKey:
transaction:keysForTransactionForTransactionKeysToDelete:
transaction:keysForTransactionForTransactionKeysToUpdate:
transaction:processDeletedKey:isDirty:
transaction:processUpdatedKey:data:conflict:isDirty:
transaction:syncAnchorForTransactionSyncAnchor:
transaction:willProcessResponseData:
transactionCancelledErrorWithTransaction:code:underlyingError:
transactionCancelledErrorWithTransaction:underlyingError:
transactionClamps
transactionContextForKey:
transactionController
transactionController:shouldScheduleTransaction:
transactionController:transactionDidCancel:error:
transactionController:transactionDidFail:error:
transactionController:transactionDidFinish:
transactionMissingDomainErrorWithTransaction:underlyingError:
transactionMissingURLErrorWithTransaction:underlyingError:
transactionProcessor
transactionTimeoutErrorWithTransaction:underlyingError:
type
unarchivedObjectOfClass:fromData:error:
uniqueIdentifier
unknownErrorWithTransaction:underlyingError:
unlock
unlockWithCondition:
unsignedLongLongValue
updatedKeys
updatedKeysEnumerator
userAcceptedSyncTimestamp
userCancelledSignInErrorWithTransaction:underlyingError:
userClampErrorWithTransaction:retrySeconds:underlyingError:
userEnteredWrongCredentialsErrorWithTransaction:underlyingError:
userIdentitiesForManageableAccountsWithError:
userInfo
valueForKey:
writeBuffer:size:
zone
@24@0:8@16
@16@0:8
@24@0:8Q16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
v24@0:8@?16
B32@0:8@16^@24
v24@0:8d16
d16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@"NSData"
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSString"
v32@0:8@16@24
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
B40@0:8@16@24^@32
q32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCache"16@0:8
@"NSNumber"16@0:8
v40@0:8@16@24@?32
B32@0:8@16@24
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
v40@0:8@"ISStoreURLOperation"16@"SSAuthenticationContext"24@?<v@?@"SSAuthenticateResponse"@"NSError">32
B32@0:8@"ISStoreURLOperation"16@"NSString"24
@"SSAccount"16@0:8
@40@0:8@16@24@32
v20@0:8B16
v32@0:8@16@?24
v24@0:8q16
v28@0:8@16i24
v28@0:8@16B24
v32@0:8@16^@24
v36@0:8@16@24B32
B48@0:8@16B24B28@32^B40
q16@0:8
@"<SBKTransactionControllerDelegate>"
@"NSURL"
@"SSAccount"
@"SBKStoreAuthenticationController"
@"SBKTransaction"
@"NSOperationQueue"
@"NSMutableArray"
@"MSVTaskAssertion"
@"SBKSyncTransaction"
@"NSArray"
@"NSMutableDictionary"
@24@0:8^{_NSZone=}16
@48@0:8q16@24@32@40
@48@0:8@16@24@32@40
@40@0:8@16q24@32
@40@0:8@16d24@32
@"SBKRequest"
@"<SBKKeyValuePayloadPair>"
v28@0:8B16@20
@"SBKTransactionController"
@64@0:8q16@24@32@40@48@56
@52@0:8@16d24d32B40Q44
@36@0:8@16@24B32
v24@0:8Q16
@44@0:8@16@24Q32B40
@52@0:8@16@24Q32@40B48
@24@0:8d16
v32@0:8Q16@?24
v40@0:8@16@?24@?32
@"NSNumber"
@"<SBKUniversalPlaybackPositionDataSource>"
@"SBKAsynchronousTask"
@"SBKRequestHandler"
@"NSDate"
@"NSTimer"
B40@0:8@16@24@32
v40@0:8@16@24@32
B40@0:8@"SBKTransactionController"16@"SBKTransaction"24@"SBKStoreError"32
v40@0:8@"SBKTransactionController"16@"SBKTransaction"24@"SBKStoreError"32
v32@0:8@"SBKTransactionController"16@"SBKTransaction"24
B32@0:8@"SBKTransactionController"16@"SBKTransaction"24
v52@0:8@16@24@32B40^B44
v40@0:8@16@24^B32
q32@0:8@16q24
v32@0:8@"SBKSyncTransaction"16@"SBKSyncResponseData"24
v52@0:8@"SBKSyncTransaction"16@"NSString"24@"NSData"32B40^B44
v40@0:8@"SBKSyncTransaction"16@"NSString"24^B32
@"<SBKKeyValuePayloadPair>"32@0:8@"SBKSyncTransaction"16@"NSString"24
@"NSString"32@0:8@"SBKSyncTransaction"16@"NSString"24
@"NSArray"32@0:8@"SBKSyncTransaction"16@"NSArray"24
q32@0:8@"SBKSyncTransaction"16q24
@"NSNumber"32@0:8@"SBKSyncTransaction"16@"NSString"24
B24@0:8^@16
i24@0:8@16
@28@0:8@16B24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<SBKUniversalPlaybackPositionTransactionContext>"
@"NSError"
v56@0:8@16@24@?32@40@?48
@"SSURLBag"
@"SBKSyncResponseData"
@64@0:8@16@24@32@40@48q56
@56@0:8@16@24@32@40q48
@"<SBKSyncTransactionProcessing>"
v36@0:8@16B24^B28
v32@0:8@16^B24
@?16@0:8
@"NSEnumerator"
v20@0:8i16
i16@0:8
@"NSObject<OS_dispatch_source>"
v48@0:8@16@24@32@?40
@28@0:8i16Q20
B32@0:8r*16Q24
@"NSMutableData"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@24@0:8q16
@"ISDataProvider"
@56@0:8Q16@24@32@40@48
@"SBKResponseStatus"
@44@0:8q16B24B28@32B40
@"SBKStoreURLBagContext"
domain
since-version
ERROR: unable to zip large data of size ~%.3f GB
deflateInit2() failed: %s
deflate() failed: %s
0123456789abcdef
MSVHasher+Algorithms.h
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
Cannot append to unknown hasher algorithm
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
Cannot obtain digest from unknown hasher algorithm
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
Cannot finalize unknown hasher algorithm
SBKSyncClamps
com.apple.amp
+[SBKStoreClampsController sharedClampsController]_block_invoke
SBKStoreClampsController.m
Unarchiving SBKStoreClampsController resulted in error:%@
Current Date = %@,
accountIdentifierCheckTimestamp = %@,
authenticationNeededTimestamp = %@,
userAcceptedSyncTimestamp = %@,
networkingBlockedUntil = %@,
backOffUntil= %@,
userCancelledSignInBackOffUntil = %@
SBKTransactionClamps
SBAccountIdentifierCheckTimestamp
SBKAuthenticationNeededTimestamp
SBKUserAcceptedSyncTimestamp
SBKNetworkingBlockedUntil
SBKUserCancelledSignInBackOffUntil
Version
SBKVersion
v16@?0@"NSMutableDictionary"8
-[SBKStoreClampsController saveToUserDefaults]_block_invoke
Archiving SBKStoreClampsController resulted in error:%@
kvsKey
kvsPayload
%@: key=%@, payload=%@
com.apple.SBKTransactionController
com.apple.SBKTransactionController.operationQueue
SBKTransactionFinishedBlock
SBKTransactionController
v16@?0@"MSVTaskAssertion"8
SBKTransactionController.m
No domain specified in transaction %@!
No url specified in transaction %@!
Delegate calls should be done on the main thread
transaction controllers with delegates can not use transaction finish blocks
User cancelled sign-in
User entered wrong credentials
version
rejected
put-ok
deleted-ok
peer-ops
puts
deletes
value
reason
conflicted
oversize
%@ response: syncAnchor = %@
put-oks(%@), delete-oks(%@), updatedKeys(%@) = %@
conflictedKeys(%@) = %@
deletedKeys(%@) = %@
B24@?0@"NSDictionary"8@"NSString"16
v40@?0@"NSMutableArray"8@"NSString"16@"NSString"24@?<B@?@"NSDictionary"@"NSString">32
SBKStoreErrorDomain
SBKStoreErrorUserInfoKeyCurrentStoreAccountName
SBKStoreErrorUserInfoKeyPreviousStoreAccountName
SBKStoreErrorUserInfoKeyRetrySeconds
<%@:%p> "%@"
SBKTransactionErorGeneric: An unknown server error occurred. (underlyingError = %@) 
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorStoreAccountLoggedOut
SBKStoreErrorStoreAccountMismatch
SBKStoreErrorCodeGeneric: An unspecified server-side error was encountered (underlyingError = %@).
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorCodeGeneric: Request Invalid: It's likely that there is something wrong with the request format (underlyingError = %@).
*** Please file a radar against 'Purple StoreBookkeeper / 1.0'
*** - enable logging in Settings->Internal: iTunes Store->Verbose and iPod->Bookmark Syncing->Verbose
*** - reproduce, then run > 'ituneskvsTool -debug' and attach console and PurplePod output
SBKStoreErrorUserClamp
SBKStoreErrorServerClamp
SBKStoreErrorCodeUnknown
Error Code = %@ (%d)
SBKStoreErrorCodeGenericValidationError
SBKStoreErrorCodeGenericBookkeeperServiceError
SBKStoreErrorCodeAuthenticationError
SBKStoreErrorCodeNoStoreAccount
SBKStoreErrorCodeStoreAccountLoggedOut
SBKStoreErrorCodeStoreAccountMismatch
SBKStoreErrorCodeStoreAccountSessionExpired
SBKStoreErrorCodeStoreAccountUserCancelSignIn
SBKStoreErrorCodeStoreAccountUserCredentials
SBKStoreErrorCodeGeneric
SBKStoreErrorCodeValidation
SBKStoreErrorCodeAuthenticationClamp
SBKStoreErrorCodeServerClamp
SBKStoreErrorCodeUserClamp
SBKStoreErrorCodeNetworkingBlocked
SBKStoreErrorCodeKillSwitch
SBKStoreErrorCodeDisabled
SBKStoreErrorCodeKeyBagKillSwitch
SBKStoreErrorCodeKeyBagLoadFailure
SBKStoreErrorCodeMissingURL
SBKStoreErrorCodeMissingDomain
SBKStoreErrorCodeCancelled
SBKStoreErrorCodeDelegateCancelled
SBKStoreErrorCodeTimeout
Error Code = %lld
SBKTransactionURLOperation.m
Use +operationWithRequest:delegate:
<%@: %p> (PrimaryURL: %@)
conflict-detection
ordinal
none
delete
%lld
SBKSync.LastAccountIdentifier
SBKSync.LastAccountName
SBKSync.SyncFailureLastAccountIdentifier
SBKSync.SyncFailureLastAccountName
[client: payload-pair=%@, anchor=%@]
*unversioned*
[result: payload-pair=%@, anchor=%@]
[request: payload-pair=%@, anchor=%@]
%@ domain = %@, PUT: %@, %@, %@
%@-%@
com.apple.amp.StoreBookkeeper
Default
Sync
Store
SBKPreferencesDidChangeNotification
com.apple.storebookkeeper.defaultschange
_didRegister-
com.apple.storebookkeeper
test-item-identifier
itemIdentifier
timestamp
bookmarkTime
hasBeenPlayed
playCount
<SBKMetadata:%p, id=%-32s, bktm=%@, hbpl=%d, plct=%llu, timestamp=%@>
%llu
v32@?0@"NSString"8@16^B24
pver
bktm
hbpl
plct
tstm
%02llu:%02llu:%.2f
no timestamp
*** 1970 timestamp ***
*** (-) 1970 timestamp ***
*** 1904 timestamp ***
*** (-) 1904 timestamp ***
*** distant past timestamp ***
(%f) %@
storeItemAdamID
subscriptionStoreItemAdamID
podcastURL
podcastGUID
title
artist
albumTitle
hasBeenPalyed
bookmarkMetadataTimestamp
mediaEntityType
SBKUniversalPlaybackPositionStoreDidSynchronizeNotification
9223372036854775807
SBKUniversalPlaybackPositionStore.m
Invalid paramter.  no domain specified
SBKUniversalPlaybackPositionStore.queue
v16@?0@"NSNotification"8
v20@?0B8@"NSError"12
v24@?0@"SBKStoreURLBagContext"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
domain version lookup
-[SBKUniversalPlaybackPositionStore _onQueueLoadRemoteDomainVersionWithCompletionBlock:]
SBKUPPStore LookupDomainVersion
 ERROR = '%@'.
v32@?0@?<v@?>8@16@"NSError"24
v16@?0@"NSError"8
SBKUPPStore Synchronize
synchronize
v24@?0@"SBKStoreURLBagContext"8@?<v@?B@"NSError">16
PUT value
v24@?0B8B12@"NSError"16
GET value
SBKUPPStore Load Bag
AutoSyncRateInMinutes
%.2f seconds
%lld minutes, %lld seconds
%@ (%@ from now)
SBKPlaybackPositionSyncRequestHandler.m
invalid parameters - data source is required
invalid parameters - bagContext is required
invalid parameters - bagContext.domain is required
Invalid bag.  no domain specified
SBKPlaybackPositionSyncRequestHandler.queue
SBKPlaybackPositionSyncRequestHandler.syncOperationQueue
v16@?0@"<SBKUniversalPlaybackPositionMediaItem>"8
@"SBKUniversalPlaybackPositionMetadata"8@?0
you can not nest synchronization calls
i12@?0i8
completionConditionLock
syncRequestURL
kvs-sync
pullKeyValueRequestURL
kvs-get
pushKeyValueRequestURL
kvs-put
pullAllKeyValueRequestURL
kvs-getall
pushAllKeyValueRequestURL
kvs-putall
v32@?0@8@16^B24
com.apple.upp
com.apple.upp-extras
v24@?0@8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
key bag contents = 
v32@?0@"NSString"8@16@"NSError"24
%@.%@
v56@?0@"NSString"8@16@?<@@?@>24@"NSString"32@"NSString"40@"NSDictionary"48
@16@?0@8
v24@?0@"NSString"8@"NSString"16
domainDisabled
kvs-sync-disabled
pollingIntervalInSeconds
kvs-sync-polling-interval-secs
SBKStoreURLBagContext.m
Use +loadBagContextFromURLBag:domain:completionBlock:
%@(%@) = %@
%@ domain=%@, enabled=%d, requestURLs = 
%@ domain = %@, GET: key='%@', %@, %@
domain-version
SBKRequestData.m
Subclass must implement
%lld-%@-%lld
SBKSyncTransaction.m
Invalid processor
????
SYNC: anchor=%@
, deletes=%@
, updates=%@
%@ domain = %@, %@
transactions using conflict detection must supply a conflict ordinal
v12@?0B8
%@ '%@'
SBKAsynchronousTask.m
must have a finish and expiration handler specified
SBKAsynchronousTask
v32@?0@8Q16^B24
, itemCount = %@
B24@?0B8B12@"NSError"16
com.apple.storebookkeeper.SBKSyncRequestHandler
v8@?0
@8@?0
SBKSyncRequestHandler.m
subclass must supply key-value pair by implementing the SBKSyncTransactionProcessing protocol
1.2.11
ERROR: deflateEnd() failed: %s
SBKZipDeflateMemoryOutputStream.m
stream is already closed.
64-bit buffer writes not supported.
subclass must implement
 %@ [%@] URL = %@, shouldAuthenticate = %d, arguments = %@, headers = %@, bodyData = %@ 
 %@ [%@]
SBKRequestBodyContentType-TextXML
SBKRequestBodyContentType-EncodeGzip
SBKRequest.m
Invalid bodyContentType requested for propertyList
v32@?0@"NSString"8@"NSString"16^B24
guid
gzip
Accept-Encoding
Content-Encoding
Content-Type
POST
application/x-plist
text/xml; charset=UTF-8
text/plain; charset=UTF-8
SBKBookkeeperRequestErrorDomain
status
 [%ld]: responseDictionary = %@, (%@)
Success
Unknown server initialization error
The request format was invalid, or referenced an invalid domain
An unspecified server-side error (type 1) was encountered
The request requires an authenticated weak-token
The request deniend (punted - server too busy)
The request denied (too many recent request)
Unknown status
An unspecified server-side error (type 2) was encountered
The client's user agent is not supported
The putAll had a version mismatch
The domain specified in the request is locked
%@ (status = %@)%@
 Please enable logging and file a bug.
SBKRequestHandler.m
SBKTransaction.m
base-version
Unarchiving SBKStoreClampsController resulted in error:%@
Archiving SBKStoreClampsController resulted in error:%@
Reseting Clamps
Drop transaction: %@ -- Too soon since last authentication: %f [%fs]
[StoreBookkeeper] SBKStoreClampsController - will avoid presenting authentication for %02llu:%02llu:%2f
Drop transaction: %@ -- Interval since last request: %f [%fs]
Drop transaction: <%p> -- Networking BlockedUntil: %@
Drop transaction: <%p> -- AccountIdentifierCheck != 0
Drop transaction: <%p> -- BackOff until: %@ [%fs]
Drop transaction: <%p> -- userCancelledBackOff until: %@ [%fs]
Cancelling transaction: %@ -- isCurrentTransaction: %@
No Pending Transactions
Transaction In progress: %@
Processing Transaction: %@
Scheduling Transaction: %@
Holding transaction %@ (due to clamps) %.2f seconds
Unable to schedule (due to clamps %@) transaction %@.
Transaction Finished: %@
Transaction Failed: %@ -- Error: %@
Not using deserialized response because it is not a dictionary as expected!
Deserialized server response: %@
Deserialized server response produced response data: %@
Generic error indicated by response responseDictionary: %@
Validation error indicated by response responseDictionary: %@
Unknown error in response: %@
Not using deserialized responseDictionary because transactions have been cancelled!
Operation failedWithError: %@ -- inputError = %@
[StoreBookkeeper] %@.  Will suppress authentication dialogs for a while.
ERROR: server rejected %@ because the payload was too big.
[StoreBookkeeper] setting up an authentication context - will FORCE authentication!
WARNING: no data was provided for updated key %@, skipping just that item
Sync request payload (plist): %@
Doesn't matter what the DISD is set to since authentication is forced for transaction: %@
First Use Alert %@ [transaction = %@]
No longer logged in Use Alert %@ [transaction = %@]
AccountIdentifier mismatch: %@ vs %@ [transaction = %@]
SBKUniversalPlaybackPositionMetadata - keyValueStorePayload=nil
SBKUniversalPlaybackPositionMetadata - error deserializing data. error=%{public}@,
SBKUniversalPlaybackPositionMetadata - Unarchiving error: %@
SBKUniversalPlaybackPositionMetadata - encountered invalid data while unarchiving payload for itemIdentifier: %@
SBKUniversalPlaybackPositionMetadata - error serializing data. %{public}@ error=%{public}@,
starting synchronizing changes for resignActive
finished synchronizing changes for resignActive
%s - %@ already in progress.  pending our completion block to be notified when it completes.
%s - beginning %@...
_onQueueRunTaskWithName %@ - short circuiting. _accountForSyncing=nil
_onQueueSync - beginning %@ operation...
_onQueueSync - %@ completed. %@
_onQueueSync - synchronize already in progress.  pending our completion block to be notified when it completes.
_onQueueSync - synchronize operation beginning...
_onQueueSync - push value operation beginning...
_onQueueSync - pull value operation beginning...
_onQueueLoadBag - skipping bag load: _accountIdentifier=%@ [no valid account identifier]
_onQueueLoadBag - load bag already in progress.  pending our completion block to be notified when it completes.
_onQueueLoadBag - load bag completed.%@
_onQueueLoadBag - load bag operation beginning...
scheduled timer date already passed.  Firing immediately
scheduling next timer update at %@
suspending update timer
Skipping synchronize: synchronization already in progress
Beginning synchronization
ERROR: will skip syncing item with no sync metadataIdentifier: %@
Gathered local %lu items to sync from dataSource: %@
dataSource transaction context = %@
Performing sync with server using syncAnchor = %@
Sending merged items to server: %@
WARNING: sent resolved conflict to server, but still received conflicts in the response, saving those for next time...
Committing merged items with domainRevision: %@ to local database: %@
Finished synchronization
Handled items in response, will save %lld items locally and push back %lld conflict resolutions
keys to save to local db = %@
keys to push to cloud db = %@
transaction is being canceled.  error = %@
Detected account change.  Getting remote items since version 0 instead of %@
WARNING: Invalid response (%@).  Skipping...
[SBKAsynchronousTask] WARNING: task timed out: %@
Invoking expiration handler for %@, with cancelType = %d
beginTaskOperation %@
Invoking completion handler for %@, result = %@, error = %@
finished loading domain version: domainVersion = %@%@
will process response with responseDomainVersion = %@
ERROR: failed to serialize property list with error = %@
SBKPullValueRequest
SBKAdditions
SBKStoreClampsController
NSSecureCoding
NSCoding
SBKGenericKeyValuePair
NSObject
SBKTransactionController
SBKTransactionURLOperationDelegate
ISStoreURLOperationDelegate
ISURLOperationDelegate
ISOperationDelegate
SBKSyncResponseData
SBKStoreError
SBKPrivate
SBKTransactionURLOperation
SBKSyncRequestData
SBKStoreAuthenticationController
SBKPushValueTransaction
SBKPreferences
SBKSimpleTransactionRequestHandler
SBKUniversalPlaybackPositionMetadata
NSCopying
SBKUniversalPlaybackPositionStore
SBKPlaybackPositionSyncRequestHandler
SBKTransactionControllerDelegate
SBKSyncTransactionProcessing
SBKStoreURLBagContext
NSMutableCopying
SBKMutableStoreURLBagContext
SBKPullValueTransaction
SBKPushValueResponse
SBKRequestData
SBKSyncResponse
SBKSyncTransaction
SBKSyncResponseDataKeyEnumerator
SBKAsynchronousTask
SBKLoadDomainVersionRequestHandler
SBKSyncRequestHandler
SBKZipDeflateMemoryOutputStream
SBKRequest
SBKResponse
SBKResponseStatus
SBKSyncRequest
SBKRequestHandler
SBKTransaction
SBKPullValueResponse
SBKPushValueRequest
T@"<SBKUniversalPlaybackPositionDataSource>",R,W,N,V_dataSource
ExtrasDomainIdentifier
T@"NSString",R,C,N,V_syncAnchor
SBKDataByDeflatingWithGZip
T@"SBKRequest",&,N,V_SBKRequest
SBKDataByInflatingWithGZip
T@,&,N,V_result
SBKRequest
Td,N,V_pollingIntervalInSeconds
SBKStringFromDigestData:
_action
T@"<SBKKeyValuePayloadPair>",R,N,V_clientItemPayloadPair
_domain
T@"<SBKKeyValuePayloadPair>",R,N,V_resultItemPayloadPair
_fatalSyncError
T@"<SBKTransactionControllerDelegate>",W,N,V_delegate
_itemIdentifier
T@"ISDataProvider",&,N,V_responseDataProvider
_method
T@"MSVTaskAssertion",&,N,V_taskAssertion
_onQueueSynchronizeWithAutosynchronizeMask:withCompletionBlock:
T@"NSArray",R,N,V_deletedKeys
_onQueue_isIdle
T@"NSArray",R,N,V_keysToUpdate
_pendingUserDefaultArchivedData
T@"NSArray",R,N,V_responseDeletedKeys
_responseStatus
T@"NSArray",R,N,V_successfullyDeletedKeys
_syncInProgress
T@"NSArray",R,N,V_updatedKeys
_timerIsStopped
T@"NSData",&,N,V_pendingUserDefaultArchivedData
accountIdentifierCheckTimestamp
T@"NSData",R,N,V_itemValuePayload
allKeys
T@"NSDate",&,N,V_dateToFireNextTimer
bodyContentType
T@"NSDictionary",R,N,V_responseDictionary
conflictDetectionOrdinalForKey:
T@"NSEnumerator",&,N,V_conflictedKeysEnumerator
containsObject:
T@"NSEnumerator",&,N,V_updatedKeysEnumerator
enabled
T@"NSError",&,N,V_fatalSyncError
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
T@"NSMutableArray",&,N,V_completions
isProxy
T@"NSMutableDictionary",&,N,V_responseOpEntiesByKey
itemKey
T@"NSNumber",R,N
newURLOperation
T@"NSOperationQueue",&,N,V_operationQueue
release
T@"NSString",C,D,N
saveAccountToLastSyncedDefaults
T@"NSString",C,N,V_domain
setBag:
T@"NSString",R,C
setCompletions:
T@"NSString",R,C,N,V_consoleDescription
setMaxConcurrentOperationCount:
T@"NSString",R,C,N,V_requestedKey
setTransaction:
T@"NSString",R,N,V_clientItemVersionAnchor
setWithObjects:
T@"NSString",R,N,V_conflictItemVersionAnchor
stringFromDate:
T@"NSString",R,N,V_itemKey
syncTransaction
T@"NSString",R,N,V_kvsKey
timeoutInterval
T@"NSString",R,N,V_resultDomainVersion
zstream
.cxx_destruct
T@"NSError",R,N
MIMEType
T@"NSURL",&,D,N
SBKDataByDeflatingWithNoZipHeader
T@"SSAccount",R
SBKDataByInflatingWithNoZipHeader
TB,N,V_canceled
SBKStringByMD5HashingString:
T#,R
_conflictedKeys
T@"<SBKKeyValuePayloadPair>",R,N,V_requestItemPayloadPair
_domainDisabled
T@"<SBKSyncTransactionProcessing>",W,N,V_transactionProcessor
_isRechedulable
T@"<SBKUniversalPlaybackPositionDataSource>",&,N,V_dataSource
_kvsKey
T@"MSVTaskAssertion",&,N,V_backgroundTaskAssertion
_onQueueRunNextPendingTaskBlock
T@"NSArray",R,N,V_conflictedKeys
_onQueue_addPendingTransaction:
T@"NSArray",R,N,V_keysToDelete
_operationQueue
T@"NSArray",R,N,V_responseConflictedKeys
_processNextKey
T@"NSArray",R,N,V_responseUpdatedKeys
_result
T@"NSArray",R,N,V_successfullyUpdatedKeys
_syncRequestURL
T@"NSData",&,N,V_bodyData
account
T@"NSData",R,N,V_conflictItemValuePayload
allHeaderFields
T@"NSData",R,N,V_kvsPayload
T@"NSDictionary",&,N,V_transactionClamps
completionBlock
T@"NSDictionary",R,N,V_responseHeaderFields
conflictItemKey
T@"NSEnumerator",&,N,V_deletedKeysEnumerator
dealloc
T@"NSError",&,N,V_error
finishedHandler
T@"NSError",R,N,V_error
isError
T@"NSMutableArray",&,N,V_pendingTransactions
isValid
T@"NSMutableDictionary",&,N,V_userInfo
lastFailedSyncAccountIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
numberWithBool:
T@"NSString",&,N,V_overrideSyncAnchor
removeObserver:
T@"NSString",C,N
setAutomaticSynchronizeOptions:
T@"NSString",C,N,V_itemIdentifier
setBool:forKey:
T@"NSString",R,C,N
setCurrentTask:
T@"NSString",R,C,N,V_domain
setPromptStyle:
T@"NSString",R,N,V_MIMEType
setValuesForKeysWithDictionary:
T@"NSString",R,N,V_conflictItemKey
shouldFileRadar
T@"NSString",R,N,V_domainVersion
success
T@"NSString",R,N,V_itemVersion
timeout
T@"NSString",R,N,V_requestItemVersionAnchor
userCancelledSignInBackOffUntil
T@"NSString",R,N,V_resultItemVersionAnchor
T@"NSTimer",&,N,V_timer
T@"NSURL",&,N,V_pullAllKeyValueRequestURL
T@"NSURL",&,N,V_pullKeyValueRequestURL
T@"NSURL",&,N,V_pushAllKeyValueRequestURL
T@"NSURL",&,N,V_pushKeyValueRequestURL
T@"NSURL",&,N,V_requestURL
T@"NSURL",&,N,V_syncRequestURL
T@"NSURL",R,N,V_requestURL
T@"NSURL",R,N,V_syncRequestURL
T@"SBKAsynchronousTask",&,N,V_bagLookupTask
T@"SBKAsynchronousTask",&,N,V_currentTask
T@"SBKAsynchronousTask",&,N,V_lookupDomainVersionTask
T@"SBKRequest",&,N,V_activeRequest
T@"SBKRequestHandler",&,N,V_currentTaskRequestHandler
T@"SBKResponseStatus",R,N,V_responseStatus
T@"SBKStoreAuthenticationController",&,N,V_authenticationController
T@"SBKStoreURLBagContext",R,N,V_bagContext
T@"SBKSyncResponseData",&,N,V_responseData
T@"SBKSyncResponseData",R,N,V_responseData
T@"SBKSyncResponseData",R,N,V_syncResponseData
T@"SBKSyncTransaction",&,N,V_transaction
T@"SBKSyncTransaction",R,N,V_transaction
T@"SBKTransaction",&,N,V_currentTransaction
T@"SBKTransaction",&,N,V_transaction
T@"SBKTransactionController",&,N,V_kvsController
T@"SBKTransactionController",R,N,V_transactionController
T@"SSAccount",R,N,V_account
T@"SSAccount",R,N,V_storeAccount
T@"SSURLBag",&,N,V_bag
T@,W,N,V_networkTypeObserver
T@?,C,N,V_completionBlock
T@?,C,N,V_expirationHandler
T@?,C,N,V_finishedHandler
TB,D,N
TB,N
TB,N,V_domainDisabled
TB,N,V_hasBeenPlayed
TB,N,V_includeDeviceGUID
TB,N,V_isResolvingError
TB,N,V_loadsRemoteItemCount
TB,N,V_resolvedConflictsNeedSyncToServer
TB,N,V_shouldAuthenticate
TB,N,V_shouldAuthenticateIfNecessary
TB,N,V_syncInProgress
TB,R
TB,R,N
TB,R,N,GisConcurrent,V_concurrent
TB,R,N,GisEnabled,V_enabled
TB,R,N,GisIdle
TB,R,N,V_canceled
TB,R,N,V_isError
TB,R,N,V_isPuntedError
TB,R,N,V_isRecoverable
TB,R,N,V_shouldFileRadar
TB,R,N,V_success
TQ,N
TQ,N,V_itemCount
TQ,N,V_playCount
TQ,R
TQ,R,N,V_responseCode
TQ,R,N,V_responseItemCount
Td,D,N
Td,N,V_accountIdentifierCheckTimestamp
Td,N,V_authenticationNeededTimestamp
Td,N,V_backOffUntil
Td,N,V_bookmarkTime
Td,N,V_networkingBlockedUntil
Td,N,V_nextUserCancelBackOffInterval
Td,N,V_timestamp
Td,N,V_userAcceptedSyncTimestamp
Td,N,V_userCancelledSignInBackOffUntil
Td,R,N
Td,R,N,V_retrySeconds
Ti,N,V_cancelType
Tq,N,V_conflictResolutionAttempts
Tq,N,V_method
Tq,R,N
Tq,R,N,V_conflictDetectionType
Tq,R,N,V_statusCode
Tq,R,N,V_type
UPPDomainIdentifier
URLBagForContext:
URLCache
URLCacheID
URLWithString:
UTF8String
_MIMEType
_SBKDataByDeflatingWithNoZipHeaderWithCompression:
_SBKDataByInflatingWithNoZipHeader
_SBKRequest
_account
_accountForSyncing
_accountIdentifier
_accountIdentifierCheckTimestamp
_accountsObserver
_activeRequest
_arguments
_authenticationController
_authenticationNeededTimestamp
_automaticSynchronizeOptions
_automaticallySynchronizeLocalChangesOnResignActive
_automaticallySynchronizeOnBecomeActive
_autorefreshInterval
_backOffUntil
_backgroundTaskAssertion
_bag
_bagContext
_bagLookupTask
_beginBackgroundTask
_bodyContentType
_bodyData
_bookmarkTime
_bufferingSize
_canScheduleTransactionBasedOfNetworkingBlocked:error:
_canScheduleTransactionBasedOnAccountIdentifierCheck:error:
_canScheduleTransactionBasedOnBackOff:error:
_canScheduleTransactionBasedOnType:error:
_canScheduleTransactionBasedOnUserCancelledSignIn:error:
_cancelType
_canceled
_clientItemPayloadPair
_clientItemVersionAnchor
_completionBlock
_completions
_concurrent
_conflictDetectionType
_conflictItemKey
_conflictItemValuePayload
_conflictItemVersionAnchor
_conflictResolutionAttempts
_conflictedKeysEnumerator
_consoleDescription
_contentEncodingTypeStringForBodyContentEncodingType:
_contentTypeStringForBodyContentType:
_currentKVSTransaction
_currentTask
_currentTaskRequestHandler
_currentTransaction
_dataSource
_dataSourceCancelTransaction
_dataSourceTransactionContext
_dateToFireNextTimer
_debugDescription
_defaultHeaderFields
_delegate
_delegateShouldScheduleTransaction:error:
_delegateTransactionDidCancel:withError:
_delegateTransactionDidFail:withError:
_delegateTransactionDidFinish:
_deletedKeys
_deletedKeysEnumerator
_deserializeResponseDictionary:response:
_domainVersion
_effectiveAutorefreshRate
_enabled
_endBackgroundTask
_enqueueStoreOperation:
_error
_expirationHandler
_findFirstValueInBag:keyEnumerator:valueTransformer:defaultValue:completionBlock:
_finishedHandler
_handlerQueue
_hasBeenPlayed
_hasLocalChangesToSync
_headers
_includeDeviceGUID
_init
_initWithDomain:syncRequestURL:domainDisabled:
_initialAutosyncInterval
_invalidateAssertion:
_invalidateTimer
_isActive
_isError
_isPuntedError
_isRecoverable
_isResolvingError
_itemCount
_itemKey
_itemValuePayload
_itemVersion
_keyForTransaction:
_keysToDelete
_keysToUpdate
_kvsController
_kvsPayload
_loadsRemoteItemCount
_lock
_lookupDomainVersionTask
_mergeConflictedItemFromSyncResponse:
_mergeMetadataItemsFromSyncResponse
_metadataItemsFromDataSource
_metadataItemsToCommitToDataSource
_metadataItemsToCommitToKVSStorage
_methodStringForMethod:
_needsConflictDetection
_networkTypeChangedNotification:
_networkTypeObserver
_networkingBlockedUntil
_nextUserCancelBackOffInterval
_onQueueFireExpirationHandlerIfNecesary
_onQueueLoadBagContextWithCompletionHandler:
_onQueueLoadRemoteDomainVersionWithCompletionBlock:
_onQueuePullMetadataItemWithItemIdentifier:completionBlock:
_onQueuePushMetadataItem:completionBlock:
_onQueueResumeTimer
_onQueueRunTaskWithName:taskCompletionHandler:runTaskBlock:
_onQueueScheduleTimer
_onQueueStartNewTimer
_onQueueStartNewTimerWithTimeIntervalSinceNow:
_onQueueStopTimer
_onQueueSuspendTimer
_onQueueSynchronizeImmediatelyWithCompletionHandler:
_onQueueUpdateTimerForActiveChanges
_onQueueUpdateTimerForAutomaticSyncOptionChanges
_onQueue_assertIsTransactionValid:error:
_onQueue_authenticationCanProcessTransaction:error:
_onQueue_beginBackgroundTask
_onQueue_canScheduleTransaction:error:
_onQueue_cancelAllPendingTransactions:
_onQueue_cancelTransaction:error:
_onQueue_clampsCanScheduleTransaction:error:
_onQueue_clampsController
_onQueue_clearTransactionResponseData
_onQueue_currentTransactionDidFinish
_onQueue_endBackgroundTask
_onQueue_isEnabledForTransaction:error:
_onQueue_performCancelErrorHandlingForError:
_onQueue_performDefaultErrorHandlingForError:
_onQueue_performRetryErrorHandlingForError:
_onQueue_processCurrentTransaction
_onQueue_processOperationOutput:operation:operationAuthenticated:
_onQueue_processPendingTransactions
_onQueue_resolveError:resolution:
_onQueue_scheduleTransaction:isRetry:
_onQueue_transactionDidCancel:withError:
_onQueue_transactionDidFail:withError:
_outputBuffer
_overrideResponseDomainVersion
_overrideSyncAnchor
_pendingTaskBlocks
_pendingTransactions
_playCount
_pollingIntervalInSeconds
_pollingLimitFromBag
_preferencesDidChange
_prefsObserver
_processDataInResponse:
_processDeletedKey:isDirty:
_processUpdatedKey:isConflict:isDirty:
_pullAllKeyValueRequestURL
_pullKeyValueRequestURL
_pushAllKeyValueRequestURL
_pushKeyValueRequestURL
_queue
_refreshTimerActive
_requestItemPayloadPair
_requestItemVersionAnchor
_requestURL
_requestedKey
_resolveConflictBetweenClientPayloadPair:andServerPayloadPair:
_resolveError:resolution:
_resolvedConflictsNeedSyncToServer
_responseCode
_responseConflictedKeys
_responseData
_responseDataByKey
_responseDataProvider
_responseDeletedKeys
_responseDictionary
_responseHeaderFields
_responseItemCount
_responseMetadataItemsMergedToCommitBackToKVSStorage
_responseMetadataItemsToCommitToDataSource
_responseOpEntiesByKey
_responseUpdatedKeys
_resultDomainVersion
_resultItemPayloadPair
_resultItemVersionAnchor
_retrySeconds
_rightNow
_sendFinishedBlockForTransaction:success:cancelled:error:handledAsFinishedBlock:
_serializableConflictDetectionOrdinalForKey:
_serializableConflictDetectionValue
_serializableDeleteItemPayloadDictionaryForKey:
_serializableUpdateItemPayloadDictionaryForKey:
_shouldAuthenticate
_shouldAuthenticateIfNecessary
_shouldFileRadar
_shouldStop
_signalKVSTransactionCompletion:
_signalKVSTransactionCompletion:withError:
_statusCode
_storeAccount
_storeOperationDidComplete:
_success
_successfullyDeletedKeys
_successfullyUpdatedKeys
_syncAnchor
_syncOperationQueue
_syncResponseData
_synchronize:
_synchronouslyRunKVSTransaction:
_taskAssertion
_taskInvalidationDisabled
_testableMetadataItem_1
_timeout
_timeoutTimer
_timer
_timerFired:
_timestamp
_transaction
_transactionClamps
_transactionController
_transactionProcessor
_type
_updateAutorefreshRateSettingAndRestartTimer:
_updateForStoreAccountsChange
_updateSettingsFromLoadedBagContext:
_updatedKeys
_updatedKeysEnumerator
_userAcceptedSyncTimestamp
_userCancelledSignInBackOffUntil
_userInfo
_validateTransactionProcessor:
absoluteString
acceptsGzipEncoding
accessTransactionClampsWithBlock:
accountDSID
accountName
accountWithUniqueIdentifier:
activeAccount
activeRequest
addObject:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperation:
addTaskCompletionBlock:
appendBytes:length:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
authenticationController
authenticationErrorsForTransaction:
authenticationNeededTimestamp
automaticSynchronizeOptions
automaticallySynchronizeLocalChangesOnResignActive
automaticallySynchronizeOnBecomeActive
autorelease
backOffForTimeInterval:
backOffUntil
backgroundTaskAssertion
bagContext
bagLookupTask
becomeActive
beginTaskOperation
beginTransactionWithItemsToSyncEnumerationBlock:
bodyContentEncodingType
bodyData
bookmarkTime
boolForKey:
boolValue
bytes
canScheduleTransaction:error:
cancel
cancelAllOperations
cancelAllTransactions
cancelAllTransactionsCancelCode:
cancelScheduledTransaction:
cancelType
cancelUniversalPlaybackPositionTransaction:
cancelWithError:
canceled
canonicalResponseForResponse:
checkForAvailabilityWithCompletionBlock:
clampsKey
class
clearAccountIdentifierCheckTimestamp
clearAuthenticationRequest
clearBackOff
clearLastSyncnedAccount
clearNetworkingBlocked
clearTimestampForTransaction:
clearTransactionResponseData
clearUserAcceptedSyncTimestamp
clearUserCancelledSignIn
clientItemPayloadPair
clientItemVersionAnchor
close
code
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
completions
componentsJoinedByString:
concurrent
conflictDetectionType
conflictItemValuePayload
conflictItemVersionAnchor
conflictResolutionAttempts
conflictedKeys
conflictedKeysEnumerator
conformsToProtocol:
consoleDescription
contextWithBagType:
copy
copyRequestProperties
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentKVSTransaction
currentStoreAccountName
currentTask
currentTaskRequestHandler
currentTransaction
data
dataByDeflatingData:
dataSource
dataSourceTransactionContext
dataWithPropertyList:format:options:error:
databasePath
date
dateToFireNextTimer
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodePropertyListForKey:
defaultCenter
defaultIdentityStore
defaultStore
deflatedData
delegate
delegateCancelledErrorWithTransaction:underlyingError:
deletedKeys
deletedKeysEnumerator
deprecated_setDataSource:
description
descriptionWithoutHeaderFields
deserializeResponseBodyWithTransaction:
deserializedResponseBodyWithTransaction:responseDictionary:response:
dictionary
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
distantFuture
distantPast
domain
domainDisabled
domainVersion
doubleValue
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endTaskOperation
enumerateKeysAndObjectsUsingBlock:
enumerateKeysInResponseForTransaction:completionBlock:
enumerateObjectsUsingBlock:
enumerateRequestURLBagKeysWithBlock:
enumerateValuesForProperties:usingBlock:
error
errorWithDomain:code:userInfo:
expirationHandler
fatalSyncError
finishDecoding
finishTaskOperationWithResult:error:
firstObject
floatValue
guid
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasAuthenticatedTooRecentlyForTransaction:error:
hasBeenPlayed
hasLocalChangesToSync
hasUserRecentlyAcceptedSync
hash
idle
includeDeviceGUID
init
initAsTestableItem
initForReadingFromData:error:
initWithAccount:
initWithBag:domain:
initWithBagContext:
initWithBagContext:accountIdentifier:
initWithBufferingSize:compressionType:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCapacity:
initWithCode:headerFields:responseDictionary:MIMEType:error:
initWithCoder:
initWithCondition:
initWithDataSource:bagContext:
initWithDataSource:bagContext:accountIdentifier:
initWithDomain:code:userInfo:
initWithDomain:dataSource:automaticSynchronizeOptions:accountIdentifier:isActive:
initWithDomain:requestURL:
initWithDomain:requestURL:forAccount:
initWithHandlerQueue:timeout:debugDescription:
initWithInitialUpdateDelay:
initWithKVSKey:kvsPayload:
initWithName:pid:subsystem:reason:flags:
initWithObjectsAndKeys:
initWithRequestURL:
initWithResponseData:
initWithStatus:isRecoverable:isError:consoleDescription:shouldFileRadar:
initWithStoreAccount:
initWithStoreBagContext:clientItemPayloadPair:clientItemVersionAnchor:
initWithStoreBagContext:requestedKey:clientItemPayloadPair:clientItemVersionAnchor:
initWithStoreBagContext:syncAnchor:keysToUpdate:keysToDelete:conflictDetectionType:
initWithSyncRequestURL:domain:syncAnchor:keysToUpdate:keysToDelete:conflictDetectionType:
initWithTransaction:
initWithTransaction:responseDictionary:response:
initWithURL:
initWithURLResponse:responseDictionary:
insertObject:atIndex:
integerValue
invalidate
invokeTaskCompletionBlocksWithBlock:
isAccountsChangedError
isAuthenticationError
isAuthenticationValidForTransaction:error:
isClampError
isConcurrent
isEnabled
isEqual:
isEqualToDate:
isEqualToString:
isGenericError
isIdle
isKindOfClass:
isMainThread
isMemberOfClass:
isNetworkingBlocked
isPuntedError
isRecoverable
isRecoverableError
isResolvingError
isSuccess
isTransactionCancelledError
isTransactionMissingInformationError
isUnsupportedClient
isValidationError
itemCount
itemIdentifier
itemValuePayload
itemVersion
keyValuePairForUpdatedKey:
keyValueStoreDisabledErrorWithTransaction:underlyingError:
keyValueStoreErrorWithCode:localizedDescription:transaction:underlyingError:
keyValueStoreItemIdentifierForItem:
keyValueStoreItemIdentifierForUniqueStoreID:itemTitle:albumName:itemArtistName:feedURL:feedGUID:
keyValueStorePayload
keysToDelete
keysToUpdate
killSwitchErrorWithTransaction:underlyingError:
kvsController
kvsKey
kvsPayload
kvsValueDescription
lastFailedSyncAccountName
lastPathComponent
lastSyncedAccountIdentifier
lastSyncedAccountName
lastSyncedDomainVersion
length
loadBagContextFromURLBag:domain:completionBlock:
loadBagContextWithCompletionBlock:
loadRemoteDomainVersionWithCompletionBlock:
loadValueForKey:completionBlock:
loadWithCompletionBlock:
loadsRemoteItemCount
localizedDescription
localizedStringForKey:value:table:
lock
lockWhenCondition:beforeDate:
longLongValue
lookupDomainVersionTask
mainBundle
mainQueue
metadataItemsToCommitToDataSource
metadataItemsToCommitToKVSStorage
metadataWithItemIdentifier:bookmarkTime:bookmarkTimestamp:hasBeenPlayed:playCount:
metadataWithItemIdentifier:keyValueStorePayload:
metadataWithItemIdentifier:keyValueStorePayload:failuresOkay:
metadataWithValuesFromDataSourceItem:
method
metricsLoadURLSamplingPercentage
metricsLoadURLSamplingPercentageCachedResponses
metricsLoadURLSessionDuration
musicLibraryForUserAccount:
mutableCopy
mutableCopyWithZone:
needsAuthentication
networkTypeObserver
networkingBlockedErrorWithTransaction:underlyingError:
networkingBlockedUntil
newKVSSyncTransactionWithUpdatedMetadataItemIdentifiers:processConflicts:
newRequest
newURLOperationWithDelegate:
nextObject
nextUserCancelBackOffInterval
noStoreAccountErrorWithTransaction:underlyingError:
numberWithDouble:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
objectAtIndex:
objectEnumerator
objectForKey:
objectForKey:withDefaultValue:
objectForKeyedSubscript:
operation:credentialForAuthenticationChallenge:
operation:didAuthenticateWithDSID:
operation:didDiscoverContentLength:
operation:didReceiveResponse:
operation:dispositionForAuthenticationChallenge:
operation:failedWithError:
operation:finishedWithOutput:
operation:needNewBodyStream:
operation:processData:error:
operation:sanitizedStringForString:
operation:shouldAuthenticateWithContext:responseHandler:
operation:shouldSetStoreFrontID:
operation:updatedProgress:
operation:willSendRequest:
operationFinished:
operationQueue
operationWillStart:
operationWithRequest:delegate:
operations
overrideSyncAnchor
pairWithKVSKey:kvsPayload:
payloadDataForUpdateResponseKey:
pendingTransactions
pendingUserDefaultArchivedData
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playCount
pollingIntervalInSeconds
postNotificationName:object:
postNotificationName:object:userInfo:
previousStoreAccountName
processDataInResponse:withCompletionHandler:
propertyListBodyWithTransaction:
propertyListWithData:options:format:error:
pullAllKeyValueRequestURL
pullKeyValueRequestURL
pullMetadataItemWithItemIdentifier:completionBlock:
pushAllKeyValueRequestURL
pushKeyValueRequestURL
pushMetadataItem:completionBlock:
queue
raise:format:
registerDefaultsIfKeyNotSet:registrationBlock:
removeAllObjects
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
requestError
requestForTransaction:
requestItemPayloadPair
requestItemVersionAnchor
requestProperties
requestURL
requestWithRequestURL:
requestedKey
reset
resignActive
resolvedConflictsNeedSyncToServer
respondsToSelector:
response
responseCode
responseConflictedKeys
responseData
responseDataForResponseKey:
responseDataProvider
responseDeletedKeys
responseDictionary
responseDomainVersion
responseHeaderFields
responseItemCount
responseOpEntiesByKey
responseStatus
responseStatusForStatusCodeNumber:
responseUpdatedKeys
responseWithCode:headerFields:responseDictionary:MIMEType:error:
responseWithResponse:
responseWithResponse:transaction:
responseWithURLResponse:responseDictionary:
result
resultDomainVersion
resultItemPayloadPair
resultItemVersionAnchor
retain
retainCount
retrySeconds
runWithCompletionHandler:
saveAccountToLastFailedSyncDefaults
saveToUserDefaults
scheduleTransaction:
scheduleTransaction:finishedBlock:
scheduleTransaction:withTransactionFinishedBlock:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
self
serializableRequestBodyPropertyList
serverClampErrorWithTransaction:retrySeconds:underlyingError:
setAccountIdentifierCheckTimestamp
setAccountIdentifierCheckTimestamp:
setActiveRequest:
setAllowsSilentAuthentication:
setAuthenticationContext:
setAuthenticationController:
setAuthenticationNeededTimestamp:
setAuthenticationRequest
setAutomaticallySynchronizeLocalChangesOnResignActive:
setAutomaticallySynchronizeOnBecomeActive:
setBackOffUntil:
setBackgroundTaskAssertion:
setBagLookupTask:
setBodyData:
setBodyDataWithPropertyList:
setBookmarkTime:
setCancelType:
setCanceled:
setCompletionBlock:
setConflictResolutionAttempts:
setConflictedKeysEnumerator:
setCurrentKVSTransaction:
setCurrentTaskRequestHandler:
setCurrentTransaction:
setDataProvider:
setDataSource:
setDataSourceTransactionContext:
setDateStyle:
setDateToFireNextTimer:
setDecodingFailurePolicy:
setDelegate:
setDeletedKeysEnumerator:
setDomain:
setDomainDisabled:
setEnabled:
setError:
setExpirationHandler:
setFatalSyncError:
setFinishedHandler:
setHTTPBody:
setHTTPMethod:
setHasBeenPlayed:
setHasLocalChangesToSync:
setIncludeDeviceGUID:
setInvalidationHandler:
setIsResolvingError:
setItemCount:
setItemIdentifier:
setKvsController:
setLoadsRemoteItemCount:
setLookupDomainVersionTask:
setMetadataItemsToCommitToDataSource:
setMetadataItemsToCommitToKVSStorage:
setMethod:
setName:
setNeedsAuthentication:
setNetworkTypeObserver:
setNetworkingBlocked
setNetworkingBlockedUntil:
setNextUserCancelBackOffInterval:
setObject:forKey:
setObject:forKeyedSubscript:
setOperationQueue:
setOverrideSyncAnchor:
setPendingTransactions:
setPendingUserDefaultArchivedData:
setPlayCount:
setPollingIntervalInSeconds:
setPullAllKeyValueRequestURL:
setPullKeyValueRequestURL:
setPushAllKeyValueRequestURL:
setPushKeyValueRequestURL:
setQueue:
setQueuePriority:
setRequestProperties:
setRequestURL:
setResolvedConflictsNeedSyncToServer:
setResponseData:
setResponseDataProvider:
setResponseDomainVersion:
setResponseOpEntiesByKey:
setResult:
setSBKRequest:
setShouldAuthenticate:
setShouldAuthenticateIfNecessary:
setShouldMessageMainThread:
setShouldPostFooterSectionChanged:
setShouldProcessDialogs:
setShouldTriggerDownloads:
setSyncInProgress:
setSyncRequestURL:
setTaskAssertion:
setTimeStyle:
setTimeoutInterval:
setTimer:
setTimestamp:
setTimestampForTransaction:
setTransactionClamps:
setTransactionContext:forKey:
setTransactionProcessor:
setUpdatedKeysEnumerator:
setUserAcceptedSyncTimestamp
setUserAcceptedSyncTimestamp:
setUserCancelledSignIn
setUserCancelledSignInBackOffUntil:
setUserInfo:
setValue:forArgument:
setValue:forHTTPHeaderField:
setValue:forHeaderField:
setValue:forKey:
setValue:forRequestParameter:
setWithArray:
sharedApplication
sharedClampsController
sharedInstance
shouldAuthenticate
shouldAuthenticateIfNecessary
shouldForceAuthenticationForTransaction:
standardUserDefaults
startTransactionWithSyncAnchor:keysToUpdate:keysToDelete:finishedBlock:
statusCode
storeAccount
storeAccountMismatchErrorWithPreviousStoreAccountName:currentStoreAccountName:transaction:underlyingError:
storeAccountSessionExpiredWithTransaction:underlyingError:
storeBookkeeperPreferences
storeGenericErrorWithTransaction:underlyingError:
storeLoggedOutErrorWithPreviousStoreAccountName:transaction:underlyingError:
storeValidationErrorWithTransaction:underlyingError:
string
stringByAppendingFormat:
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
successfullyDeletedKeys
successfullyUpdatedKeys
superclass
supportsSecureCoding
syncAnchor
syncInProgress
syncRequestURL
syncResponseData
synchronizeImmediatelyWithCompletionBlock:
synchronizeImmediatelyWithCompletionHandler:
synchronizeWithCompletionHandler:
taskAssertion
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timer
timestamp
transaction
transaction:conflictDetectionOrdinalForKey:
transaction:conflictDetectionTypeForTransactionDetectionType:
transaction:didProcessResponseData:
transaction:keyValuePairForUpdatedKey:
transaction:keysForTransactionForTransactionKeysToDelete:
transaction:keysForTransactionForTransactionKeysToUpdate:
transaction:processDeletedKey:isDirty:
transaction:processUpdatedKey:data:conflict:isDirty:
transaction:syncAnchorForTransactionSyncAnchor:
transaction:willProcessResponseData:
transactionCancelledErrorWithTransaction:code:underlyingError:
transactionCancelledErrorWithTransaction:underlyingError:
transactionClamps
transactionContextForKey:
transactionController
transactionController:shouldScheduleTransaction:
transactionController:transactionDidCancel:error:
transactionController:transactionDidFail:error:
transactionController:transactionDidFinish:
transactionMissingDomainErrorWithTransaction:underlyingError:
transactionMissingURLErrorWithTransaction:underlyingError:
transactionProcessor
transactionTimeoutErrorWithTransaction:underlyingError:
type
unarchivedObjectOfClass:fromData:error:
uniqueIdentifier
unknownErrorWithTransaction:underlyingError:
unlock
unlockWithCondition:
unsignedLongLongValue
updatedKeys
updatedKeysEnumerator
userAcceptedSyncTimestamp
userCancelledSignInErrorWithTransaction:underlyingError:
userClampErrorWithTransaction:retrySeconds:underlyingError:
userEnteredWrongCredentialsErrorWithTransaction:underlyingError:
userIdentitiesForManageableAccountsWithError:
userInfo
valueForKey:
writeBuffer:size:
zone
@24@0:8@16
@16@0:8
@24@0:8Q16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
v24@0:8@?16
B32@0:8@16^@24
v24@0:8d16
d16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@"NSData"
@32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSString"
v32@0:8@16@24
v32@0:8@"ISOperation"16@"NSError"24
v32@0:8@"ISOperation"16@"SSOperationProgress"24
v24@0:8@"ISOperation"16
B40@0:8@16@24^@32
q32@0:8@16@24
v32@0:8@"ISURLOperation"16@"NSNumber"24
v32@0:8@"ISURLOperation"16@"NSURLResponse"24
v32@0:8@"ISURLOperation"16@24
@"NSInputStream"32@0:8@"ISURLOperation"16@"NSURLRequest"24
B40@0:8@"ISURLOperation"16@"NSMutableData"24^@32
v32@0:8@"ISURLOperation"16@"NSMutableURLRequest"24
@"NSString"32@0:8@"ISURLOperation"16@"NSString"24
q32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCredential"32@0:8@"ISURLOperation"16@"NSURLAuthenticationChallenge"24
@"NSURLCache"16@0:8
@"NSNumber"16@0:8
v40@0:8@16@24@?32
B32@0:8@16@24
v32@0:8@"ISStoreURLOperation"16@"NSNumber"24
v40@0:8@"ISStoreURLOperation"16@"SSAuthenticationContext"24@?<v@?@"SSAuthenticateResponse"@"NSError">32
B32@0:8@"ISStoreURLOperation"16@"NSString"24
@"SSAccount"16@0:8
@40@0:8@16@24@32
v20@0:8B16
v32@0:8@16@?24
v24@0:8q16
v28@0:8@16i24
v28@0:8@16B24
v32@0:8@16^@24
v36@0:8@16@24B32
B48@0:8@16B24B28@32^B40
q16@0:8
@"<SBKTransactionControllerDelegate>"
@"NSURL"
@"SSAccount"
@"SBKStoreAuthenticationController"
@"SBKTransaction"
@"NSOperationQueue"
@"NSMutableArray"
@"MSVTaskAssertion"
@"SBKSyncTransaction"
@"NSArray"
@"NSMutableDictionary"
@24@0:8^{_NSZone=}16
@48@0:8q16@24@32@40
@48@0:8@16@24@32@40
@40@0:8@16q24@32
@40@0:8@16d24@32
@"SBKRequest"
@"<SBKKeyValuePayloadPair>"
v28@0:8B16@20
@"SBKTransactionController"
@64@0:8q16@24@32@40@48@56
@52@0:8@16d24d32B40Q44
@36@0:8@16@24B32
v24@0:8Q16
@44@0:8@16@24Q32B40
@52@0:8@16@24Q32@40B48
@24@0:8d16
v32@0:8Q16@?24
v40@0:8@16@?24@?32
@"NSNumber"
@"<SBKUniversalPlaybackPositionDataSource>"
@"SBKAsynchronousTask"
@"SBKRequestHandler"
@"NSDate"
@"NSTimer"
B40@0:8@16@24@32
v40@0:8@16@24@32
B40@0:8@"SBKTransactionController"16@"SBKTransaction"24@"SBKStoreError"32
v40@0:8@"SBKTransactionController"16@"SBKTransaction"24@"SBKStoreError"32
v32@0:8@"SBKTransactionController"16@"SBKTransaction"24
B32@0:8@"SBKTransactionController"16@"SBKTransaction"24
v52@0:8@16@24@32B40^B44
v40@0:8@16@24^B32
q32@0:8@16q24
v32@0:8@"SBKSyncTransaction"16@"SBKSyncResponseData"24
v52@0:8@"SBKSyncTransaction"16@"NSString"24@"NSData"32B40^B44
v40@0:8@"SBKSyncTransaction"16@"NSString"24^B32
@"<SBKKeyValuePayloadPair>"32@0:8@"SBKSyncTransaction"16@"NSString"24
@"NSString"32@0:8@"SBKSyncTransaction"16@"NSString"24
@"NSArray"32@0:8@"SBKSyncTransaction"16@"NSArray"24
q32@0:8@"SBKSyncTransaction"16q24
@"NSNumber"32@0:8@"SBKSyncTransaction"16@"NSString"24
B24@0:8^@16
i24@0:8@16
@28@0:8@16B24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<SBKUniversalPlaybackPositionTransactionContext>"
@"NSError"
v56@0:8@16@24@?32@40@?48
@"SSURLBag"
@"SBKSyncResponseData"
@64@0:8@16@24@32@40@48q56
@56@0:8@16@24@32@40q48
@"<SBKSyncTransactionProcessing>"
v36@0:8@16B24^B28
v32@0:8@16^B24
@?16@0:8
@"NSEnumerator"
v20@0:8i16
i16@0:8
@"NSObject<OS_dispatch_source>"
v48@0:8@16@24@32@?40
@28@0:8i16Q20
B32@0:8r*16Q24
@"NSMutableData"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@24@0:8q16
@"ISDataProvider"
@56@0:8Q16@24@32@40@48
@"SBKResponseStatus"
@44@0:8q16B24B28@32B40
@"SBKStoreURLBagContext"
