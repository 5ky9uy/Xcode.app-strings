com.apple.SafariBookmarksSyncAgent.Push
v8@?0
com.apple.icloud-container.
CloudExtensions
CloudExtensionZoneSubscription
com.apple.SafariBookmarksSyncAgent.CloudExtensions.CloudExtensionStore.%@.%p.operationQueue
com.apple.SafariBookmarksSyncAgent.CloudExtensions.CloudExtensionStore.%@.%p.internalQueue
com.apple.SafariBookmarksSyncAgent.CloudExtensions.CloudExtensionStore.%@.%p.completionHandlerQueue
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSError"8
v24@?0@"CKSubscription"8@"NSError"16
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CKRecord"8@"NSError"16
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
B16@?0@"NSError"8
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
com.apple.private.safari.can-use-bookmarks-sync-agent
DebugHierarchyCheckerEnabled
LastDatabaseServerChangeToken.
CloudSettings
NewestLaunchedSafariBookmarksSyncAgentVersion
DebugForceMigrationFromSafariSyncControllerVersionKey
604.4
614.1.22
614.1.25.0.2
614.4.6
Bookmarks Sync Agent State
localMigrationState
@"NSDictionary"8@?0
com.apple.Safari.CloudBookmarks.SafariBookmarksSyncAgent.SafariSyncController.%@.%p._operationDispatchQueue
com.apple.Safari.CloudBookmarks.SafariBookmarksSyncAgent.%@.%p.operationQueue
com.apple.SafariBookmarksSyncAgent.ActivityCheckInQueue
com.apple.SafariBookmarksSyncAgent.CustomizationSyncQueue
v24@?0q8@"NSError"16
v16@?0q8
SafariSyncController determine encryption state of cloud settings container transaction
does
does not
v24@?0@"CKAccountInfo"8@"NSError"16
Safari
v24@?0@"WBSCloudBookmarksRemoteMigrationInfo"8@"NSError"16
v16@?0@"NSArray"8
SafariSyncController get CloudTabRemoteStore transaction
v16@?0@"CloudTabRemoteStore"8
SafariSyncController save Per-Site Setting transaction
v24@?0@"NSString"8@"NSError"16
v16@?0@"NSDictionary"8
v20@?0@"NSData"8B16
UndefinedDeviceClass
DeviceClassNumber
iPhone
iPad
default
v16@?0@"NSTimer"8
SafariSyncController delete Safari background image transaction
SafariSyncController perform per site setting sync transaction
v20@?0@"NSSet"8B16
SafariSyncController perform customization sync transaction
SafariSyncController save extension states transaction
SafariSyncController save extension device transaction
SafariSyncController get extension states transaction
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
SafariSyncController delete extension devices transaction
SafariSyncController delete extension states database transaction
@"NSDictionary"16@?0@"WBTabGroup"8
0.0.0
Sync Delay Timer After Push Notification Transaction
v24@?0@"SafariSyncController"8@"CKRecordZoneID"16
v44@?0@"WBSRetryableCKFetchDatabaseChangesOperation"8@"SafariSyncController"16@"CKServerChangeToken"24B32@"NSError"36
Push Notification Database Changes Check
SafariSyncController network connectivity XPC activity check in transaction
SafariSyncController perform bookmark sync transaction
SafariSyncController fetch remote migration state transaction
v32@?0q8@"NSString"16@"NSError"24
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?BB>16
Cloud Tabs Notification Transaction
data
isLightAppearance
SafariSyncController update Safari's local settings transaction
SafariSyncController delete Safari's local background image transaction
SafariSyncController saving Safari's Page Zoom sync data to disk
v16@?0B8B12
v16@?0@"NSObject<OS_xpc_object>"8
CloudKit Subscription Request
v24@?0Q8@"NSError"16
B32@?0Q8@"CKSubscription"16@"NSError"24
v12@?0B8
SafariSyncController perform tab groups sync transaction
SafariSyncController immediate tab groups sync
ckShortDescription
User Did Update Database
Received Push Notification
Account Added
Zone Creation
Account Modified
Local Client Finished Syncing
PCS Identities Changed
The attempted operation requires an entitlement
Manatee is currently unavailable on the current account.
com.apple.SafariBookmarksSyncAgent.XPC.BookmarkSyncNetworkConnectivity
com.apple.SafariBookmarksSyncAgent.XPC.InitialManateeCloudTabFetchRetry
Bookmarks
CloudKit Tabs
Tab Groups Private Database
Tab Groups Shared Database
Customization Sync
Extension State Sync
com.apple.SafariBookmarksSyncAgent.XPC.ZoneSubscriptionRegistration
com.apple.SafariBookmarksSyncAgent.XPC.PeriodicRemoteMigrationStateObserver
com.apple.SafariBookmarksSyncAgent.migration
com.apple.SafariBookmarksSyncAgent.XPC.TabGroupSyncNetworkConnectivity
<None>
Update Remote
Update Local
Update Local Parent Or Position
Delete Local
Undelete Local
<%@>
B16@?0@"CloudBookmarkItemConfiguration"8
+[CloudBookmark cloudBookmarkWithRecordName:inDatabase:databaseAccessor:updater:]
+[CloudBookmark cloudBookmarkForReparentedItemWithRecordName:inDatabase:databaseAccessor:updater:]
+[CloudBookmark cloudBookmarkToMigrateItemWithRecordName:inDatabase:databaseAccessor:updater:]
Deleted
+[CloudBookmark cloudBookmarkWithAddedRecord:configuration:inDatabase:databaseAccessor:updater:]
ParentAndPosition
-[CloudBookmark _initWithChange:databaseAccessor:updater:]
ParentFolder
Position
MinimumAPIVersion
v32@?0@"NSString"8@"NSURL"16^B24
v32@?0@"NSString"8@16^B24
v24@?0@"NSString"8@16
v32@?0@"NSString"8@"WBSPair"16^B24
v32@?0@"NSString"8@"WBSCRDTGeneration"16^B24
Folder
Bookmark
Move
Modify
Delete
CKBAItemTypeBookmark
CKBAItemTypeFolder
<Unknown CKBABookmarkType %ld>
CKBAFolderTypeRegular
CKBAFolderTypeFavorites
CKBAFolderTypeBookmarksMenu
CKBAFolderTypeReadingList
CKBAFolderTypeTabGroupScopedBookmark
<Unknown CKBAFolderType %ld>
cloudBookmarkAccountIdentityDidChange
cloudBookmarkAccountPropertiesDidChange
ccom.apple.Safari.CloudBookmarks.CloudExtensionSyncCoordinator.extensionStateSavingQueue
com.apple.Safari.CloudBookmarks.CloudExtensionSyncCoordinator.extensionStateFetchingQueue
Cloud Extension State Saving
Cloud Extension Device Deleting
Cloud Extension State Fetching
v16@?0@"CloudExtensionDevice"8
v16@?0@"NSData"8
v16@?0@"CKRecordID"8
v32@?0@"CKServerChangeToken"8@"NSData"16@"NSError"24
v12@?0i8
@"NSDictionary"16@?0@"CloudExtensionDevice"8
CloudExtensions.db
Bookmarks-Backup-for-31802262
http
TitleAndIdentityHash
TitleURLAndIdentityHash
TabGroupTabParticipantPresence
Participant
TabGroupTab
Lock
UserTabGroupPresence
UserPresence_
com.apple.Safari.CloudBookmarks.CloudTabGroupPresenceUpdater.%@.%p._processUpdateQueue
v24@?0@"CKRecordID"8@"NSError"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v28@?0@"CKRecord"8B16@"NSError"20
com.apple.Safari.CloudBookmarks.CloudBookmarkDatabaseHandler.%@.%p.imageSavingQueue
Asset temporary or destination URL was not available.
CloudBookmarksOverrideDeviceIdentifier
CloudSettingsZoneSubscription
com.apple.SafariBookmarksSyncAgent.CloudSettings.CloudSettingStore.%@.%p.operationQueue
com.apple.SafariBookmarksSyncAgent.CloudSettings.CloudSettingStore.%@.%p.internalQueue
com.apple.SafariBookmarksSyncAgent.CloudSettings.CloudSettingStore.%@.%p.completionHandlerQueue
Cloud Settings Encryption Info Fetching
v24@?0@"CKRecordZone"8@"NSError"16
31742989
32414244
v32@?0@"NSString"8@"NSString"16^B24
q24@?0@"NSString"8@"NSString"16
q24@?0@"WBSCRDTPosition"8@"WBSCRDTPosition"16
CloudExtensionDevice
CloudExtensionState
com.apple.Safari.CloudBookmarks
Errors
v32@?0@8@"NSError"16^B24
_generation
_deviceIdentifier
SyncRequirements
MinimumSyncAPIVersion
EncryptionInfo
KeyID
MigrationState
MigratorDeviceIdentifier
metadata_device_type
DeviceOSType
DeviceOSVersion
DeviceOSBuild
DeviceOSVersionNumber
DeviceSoftwareBundleId
DeviceSoftwareVersion
Tab Collection Maintenance
com.apple.SafariBookmarksSyncAgent.%@.%p
Tab Collection Maintenance Transaction
com.apple.SafariBookmarksSyncAgent.XPC.TabCollectionMaintenance
Migration coordinator
CloudBookmarksDebugDelayInSecondsBeforeStealingRightToMigrate
v24@?0@"NSError"8@?<v@?>16
DestinationDevice
TabURL
TabUUID
DestinationDeviceUUID
LastModified
DictionaryType
CloseTabRequest
<%@: %p; tabURL = "%@"; tabUUID = "%@"; destination device uuid = "%@";
BookmarkList
BookmarkLeaf
TabGroup
TabGroupScopedBookmarkList
TabGroupScopedBookmarkLeaf
IdentityHash
PreviewTextAndHasUserDefinedPreviewText
Title
DateAdded
DateLastViewed
ImageURL
PreviewText
HasUserDefinedPreviewText
B16@?0@"CKRecord"8
IsSelectedFavoritesFolder
LastSelectedTab
BackgroundImage
IsPinned
@"NSString"16@?0@"NSString"8
Cloud Settings Data Fetching
Cloud Settings Data Saving
Cloud Settings Data Deletion
Cloud Settings Background Image Saving
customizationSyncServerToken
settingsSyncAccountHash
@"CKRecord"32@?0@"CKRecord"8@"CKRecord"16@"NSError"24
cloudBookmarkDidDetectBug
bugIDs
CloudBookmarkStoreErrorDomain
Cloud Bookmark Migration State Check
ZoneSubscription
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.%@.%p.internalQueue
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.%@.%p.completionHandlerQueue
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.%@.%p.operationQueue
Cloud Bookmark Migration From DAV
Cloud Bookmark Subscription Request
Tab Groups Subscription Request
v24@?0@"WBSHashGenerator"8@"NSError"16
v48@?0@"WBSRetryableCKModifyRecordZonesOperation"8@"CloudBookmarkStore"16@"NSArray"24@"NSArray"32@"NSError"40
v32@?0@"WBSRetryableCKModifyRecordsOperation"8@"CloudBookmarkStore"16@"NSError"24
v48@?0@"WBSRetryableCKModifyRecordsOperation"8@"CloudBookmarkStore"16@"NSArray"24@"NSArray"32@"NSError"40
v32@?0@"CloudBookmarkStore"8@"CKRecordZoneID"16@"NSError"24
@"CKRecordID"16@?0@"CKRecordZoneID"8
v40@?0@"CloudBookmarkStore"8@"CKRecord"16@"CKRecordID"24@"NSError"32
v40@?0@"WBSRetryableCKFetchRecordsOperation"8@"CloudBookmarkStore"16@"NSDictionary"24@"NSError"32
v24@?0@"CloudBookmarkStore"8@"CKRecordZoneID"16
v44@?0@"WBSRetryableCKFetchDatabaseChangesOperation"8@"CloudBookmarkStore"16@"CKServerChangeToken"24B32@"NSError"36
v40@?0@"CloudBookmarkStore"8@"CKRecordID"16@"CKRecord"24@"NSError"32
v32@?0@"CloudBookmarkStore"8@"CKRecordID"16@"NSString"24
v52@?0@"CloudBookmarkStore"8@"CKRecordZoneID"16@"CKServerChangeToken"24@"NSData"32B40@"NSError"44
v32@?0@"WBSRetryableCKFetchRecordZoneChangesOperation"8@"CloudBookmarkStore"16@"NSError"24
v16@?0@"WBSRetryableCKModifyRecordsOperation"8
@"CKRecordID"32@?0@"CKRecord"8Q16^B24
v32@?0@"CloudBookmarkStore"8@"CKRecordID"16@"NSError"24
v40@?0@"CloudBookmarkStore"8@"NSURL"16@"CKShareMetadata"24@"NSError"32
v32@?0@"WBSRetryableCKFetchShareMetadataOperation"8@"CloudBookmarkStore"16@"NSError"24
v40@?0@"CloudBookmarkStore"8@"CKUserIdentityLookupInfo"16@"CKShareParticipant"24@"NSError"32
B16@?0@"CKShareParticipant"8
v24@?0@"CKShare"8@"NSError"16
v32@?0@"WBSRetryableCKFetchShareParticipantsOperation"8@"CloudBookmarkStore"16@"NSError"24
v40@?0@"CloudBookmarkStore"8@"CKShareMetadata"16@"CKShare"24@"NSError"32
v32@?0@"WBSRetryableCKAcceptSharesOperation"8@"CloudBookmarkStore"16@"NSError"24
v16@?0@"WBSRetryableCKFetchSubscriptionsOperation"8
v40@?0@"WBSRetryableCKFetchSubscriptionsOperation"8@"CloudBookmarkStore"16@"NSDictionary"24@"NSError"32
v16@?0@"WBSRetryableCKModifySubscriptionsOperation"8
v48@?0@"WBSRetryableCKModifySubscriptionsOperation"8@"CloudBookmarkStore"16@"NSArray"24@"NSArray"32@"NSError"40
v40@?0@"WBSRetryableCKFetchRecordZonesOperation"8@"CloudBookmarkStore"16@"NSDictionary"24@"NSError"32
v24@?0@"NSArray"8@"NSError"16
@"CKRecordID"16@?0@"NSString"8
@"NSString"24@?0@"CKRecordID"8^B16
metadata_zone
MigrationStateEncodedRecordData
TabGroupMigrationStateEncodedRecordData
ComposedIdentifier
ContainingAppAdamID
DisplayName
Enabled
EnabledByUserGesture
OwningDevice
IOSAppBundleIdentifier
IOSExtensionBundleIdentifier
MacOSAppBundleIdentifier
MacOSExtensionBundleIdentifier
v32@?0@"NSString"8@"NSDictionary"16^B24
<%@: %p; composedIdentifier = "%@"; containingAppAdamID = "%@"; displayName = "%@"; lastModifiedDate = "%@"; owning device uuid = "%@"; isEnabled = %d; wasEnabledByUserGesture = %d>
Sync coordinator
com.apple.Safari.CloudBookmarks.CloudBookmarkSyncCoordinator.%@.%p.imageSavingQueue
v20@?0q8B16
v16@?0@"WBSCloudBookmarksRemoteMigrationInfo"8
@"CloudBookmark"16@?0^B8
record
@"CKRecord"32@?0@"CKRecord"8@"CKRecord"16q24
32548082
Asset temporary url or destination URL was not available.
v32@?0@"NSSet"8@"NSSet"16@"NSError"24
v24@?0@"NSSet"8@"NSError"16
Subtitle
SymbolName
ExtraAttributes
Metadata
Children
@"CloudTabGroupSyncEvent"16@?0@"NSDictionary"8
%@ - %@
dictionaryRepresentation
v16@?0@"CloudTabSyncCoordinator"8
v16@?0B8i12
v24@?0@"NSArray"8@"NSArray"16
CloudTabs.db
Sync migration coordinator
(null)
deviceIdentifier
hasAccountHash
changes
localBookmarks
domain
code
description
remoteMigrationStateError
remoteMigrationState
migratorDeviceIdentifier
AwaitingMigration
InProgress
Finished
Unknown
changeType
itemType
serverID
modifiedAttributes
hasSyncData
hasCKRecord
hasPosition
hasTitleGeneration
count
addCount
deleteCount
moveCount
modifyCount
summary
details
bookmarksCount
foldersCount
title
children
isFavorites
IsTabGroup
isTabGroup
folderType
bookmarkType
Regular
Favorites
ReadingList
BookmarksMenu
TabGroupFavorites
CloudTabs
CloudTabsZoneSubscription
com.apple.Safari.CloudBookmarks.CloudTabRemoteStore.%@.%p.operationQueue
TabGroupSyncDebuggerEnabled
TabGroupSyncDebugger.plist
Change Tag
Record ID
Record Type
Library/Safari
Sync Up
icloud.and.arrow.up
Sync Down
icloud.and.arrow.down
Auxiliary Record Deletion
bolt.horizontal.icloud
square.on.square
square.text.square
folder
bookmark
person.crop.circle
record.circle
@"NSDictionary"16@?0@"CloudTabGroupSyncEvent"8
Fetch Zone Changes
square.and.arrow.down
Last Server Change Token
Zone ID
v32@?0@"CKRecordZoneID"8@"CKFetchRecordZoneChangesConfiguration"16^B24
Send Batch
paperplane
Save Record
Delete Record
trash.circle
Fetched Record
B16@?0@"CloudTabGroupSyncEvent"8
Sync Manager
TabGroupsPrivateDatabaseSubscription
TabGroupsSharedDatabaseSubscription
TabGroupsZoneSubscription
v32@?0@"CKRecordID"8@"CKShare"16@"NSError"24
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
com.apple.SafariBookmarksSyncAgent.%@.%p._tabCollectionQueue
Cloud Tab Groups Sync (%@)
Cloud Tab Groups Migration
Only container %@ is supported, received share metadata from container %@
Cloud Tab Groups Accept Shared Tab Group
v32@?0q8@"CKShare"16@"NSError"24
Cloud Tab Groups Setup Shared Tab Group
Cloud Tab Groups Update Tab Group Presence
Cloud Tab Groups Accept Share
com.apple.Safari.CloudBookmarks.CloudExtensionSQLiteStore
DELETE FROM cloud_extension_devices WHERE device_uuid = ?
DELETE FROM cloud_extension_states WHERE record_name = ?
CREATE TABLE cloud_extension_devices (device_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,device_name TEXT,last_modified REAL NOT NULL,new_tab_page_composed_identifier TEXT,new_tab_page_set_by_user_gesture BOOLEAN DEFAULT 0,new_tab_page_last_modified REAL NOT NULL)
CREATE TABLE cloud_extension_states (record_name TEXT PRIMARY KEY NOT NULL,composed_identifier TEXT NOT NULL,system_fields BLOB NOT NULL,owning_device_uuid TEXT NOT NULL,containing_app_adam_id TEXT,display_name TEXT NOT NULL,is_enabled BOOLEAN DEFAULT 0,was_enabled_by_user_gesture BOOLEAN DEFAULT 0,ios_app_bundle_identifier TEXT,ios_extension_bundle_identifier TEXT,mac_app_bundle_identifier TEXT,mac_extension_bundle_identifier TEXT,last_modified REAL NOT NULL,FOREIGN KEY(owning_device_uuid) REFERENCES cloud_extension_devices(device_uuid) ON DELETE CASCADE)
CREATE INDEX cloud_extension_states__owning_device_uuid ON cloud_extension_states (owning_device_uuid)
CREATE TABLE metadata (key TEXT NOT NULL UNIQUE, value)
DROP TABLE IF EXISTS cloud_extension_devices
DROP TABLE IF EXISTS cloud_extension_states
DROP TABLE IF EXISTS metadata
SELECT device_uuid, system_fields, device_name, last_modified, new_tab_page_composed_identifier, new_tab_page_set_by_user_gesture, new_tab_page_last_modified FROM cloud_extension_devices
SELECT system_fields, device_name, last_modified, new_tab_page_composed_identifier, new_tab_page_set_by_user_gesture, new_tab_page_last_modified FROM cloud_extension_devices WHERE device_uuid = ?
INSERT INTO cloud_extension_devices (device_uuid, system_fields, device_name, last_modified, new_tab_page_composed_identifier, new_tab_page_set_by_user_gesture, new_tab_page_last_modified)VALUES (?, ?, ?, ?, ?, ?, ?)ON CONFLICT(device_uuid) DO UPDATE SET device_uuid = ?1, system_fields = ?2, device_name = ?3, last_modified = ?4, new_tab_page_composed_identifier = ?5, new_tab_page_set_by_user_gesture = ?6, new_tab_page_last_modified = ?7
SELECT composed_identifier, system_fields, containing_app_adam_id, display_name, is_enabled, was_enabled_by_user_gesture, ios_app_bundle_identifier, ios_extension_bundle_identifier, mac_app_bundle_identifier, mac_extension_bundle_identifier, last_modified, record_name FROM cloud_extension_states WHERE owning_device_uuid = ?
INSERT OR REPLACE INTO cloud_extension_states (record_name, composed_identifier, system_fields, owning_device_uuid, containing_app_adam_id, display_name, is_enabled, was_enabled_by_user_gesture, ios_app_bundle_identifier, ios_extension_bundle_identifier, mac_app_bundle_identifier, mac_extension_bundle_identifier, last_modified)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
v24@?0@"NSString"8@"NSString"16
Migration state lock arbiter property
DeviceName
NewTabPageComposedIdentifier
NewTabPageLastModified
NewTabPageSetByUserGesture
<%@: %p; name = "%@"; uuid = %@; lastModified = %@; composedIdentifierForNewTabPage = "%@"; newTabPageSetByUserGesture = %@; lastModifiedDateForNewTabPage = %@;  cloudExtensionStates = (
    %@
    
B32@?0@"CloudExtensionState"8Q16^B24
IsShowingReader
ReaderScrollPositionPageIndex
OwningSceneID
pageIndex
ReaderScrollPosition
UUID
<%@: %p; title = "%@"; url = "%@"; uuid = "%@"; owning device uuid = "%@"; owning sceneID = "%@"; position = %@; isShowingReader = %d; readerScrollPositionPageIndex = %@; isPinned = %d>
server_change_token
Library/Safari/
PRAGMA foreign_keys = ON
db-lock
db-shm
db-wal
PRAGMA user_version = %d
SELECT value FROM metadata WHERE key = ?
UPDATE metadata SET value = ? WHERE key = ?
INSERT INTO metadata (key, value) VALUES (?, ?)
DELETE FROM metadata WHERE key = ?
VACUUM
PRAGMA user_version
HasDuplicateDeviceName
IsEphemeralDevice
Capabilities
Tabs
CloudKitBookmarkSyncing
Device
B32@?0@"CloudTab"8Q16^B24
<%@: %p; name = "%@"; uuid = %@; lastModified = %@; hasDuplicateName = %d; isEphemeralDevice = %d; tabs = (
    %@
wbsCloudTabDictionaryRepresentation
CloudTabDevice
CloudTab
CloudTabCloseRequest
use_manatee_container
com.apple.Safari.CloudBookmarks.CloudTabSQLiteStore
DELETE FROM cloud_tab_devices WHERE device_uuid = ?
DELETE FROM cloud_tabs WHERE tab_uuid = ?
DELETE FROM cloud_tab_close_requests WHERE close_request_uuid = ?
CREATE TABLE cloud_tab_devices (device_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,device_name TEXT,has_duplicate_device_name BOOLEAN DEFAULT 0,is_ephemeral_device BOOLEAN DEFAULT 0,last_modified REAL NOT NULL)
CREATE TABLE cloud_tabs (tab_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,device_uuid TEXT NOT NULL,position BLOB NOT NULL,title TEXT,url TEXT NOT NULL,is_showing_reader BOOLEAN DEFAULT 0,is_pinned BOOLEAN DEFAULT 0,reader_scroll_position_page_index INTEGER,scene_id TEXT,FOREIGN KEY(device_uuid) REFERENCES cloud_tab_devices(device_uuid) ON DELETE CASCADE)
CREATE INDEX cloud_tabs__device_uuid ON cloud_tabs (device_uuid)
CREATE TABLE cloud_tab_close_requests (close_request_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,destination_device_uuid TEXT NOT NULL,url TEXT NOT NULL,tab_uuid TEXT NOT NULL,FOREIGN KEY(destination_device_uuid) REFERENCES cloud_tab_devices(device_uuid) ON DELETE CASCADE)
DROP TABLE IF EXISTS cloud_tab_devices
DROP TABLE IF EXISTS cloud_tabs
DROP TABLE IF EXISTS cloud_tab_close_requests
SELECT device_uuid, system_fields, device_name, has_duplicate_device_name, is_ephemeral_device, last_modified FROM cloud_tab_devices
SELECT system_fields, device_name, has_duplicate_device_name, is_ephemeral_device, last_modified FROM cloud_tab_devices WHERE device_uuid = ?
INSERT INTO cloud_tab_devices (device_uuid, system_fields, device_name, has_duplicate_device_name, is_ephemeral_device, last_modified)VALUES (?, ?, ?, ?, ?, ?)ON CONFLICT(device_uuid) DO UPDATE SET device_uuid = ?1, system_fields = ?2, device_name = ?3, has_duplicate_device_name = ?4, is_ephemeral_device = ?5, last_modified = ?6
SELECT tab_uuid, system_fields, position, title, url, is_pinned, is_showing_reader, reader_scroll_position_page_index, scene_id FROM cloud_tabs WHERE device_uuid = ?
q24@?0@"CloudTab"8@"CloudTab"16
INSERT OR REPLACE INTO cloud_tabs (tab_uuid, system_fields, device_uuid, position, title, url, is_showing_reader, is_pinned, reader_scroll_position_page_index, scene_id)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SELECT close_request_uuid, system_fields, destination_device_uuid, url, tab_uuid FROM cloud_tab_close_requests
INSERT OR REPLACE INTO cloud_tab_close_requests (close_request_uuid, system_fields, destination_device_uuid, url, tab_uuid)VALUES (?, ?, ?, ?, ?)
Cloud Tab Data Fetching
Cloud Tab Data Saving
Cloud Tab Close Requests Saving
Cloud Tab Close Requests Deleting
Cloud Tab Devices Deleting
Cloud Tab Zone Deleting
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.tabSavingQueue
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.tabFetchingQueue
v16@?0@"CloudTabDevice"8
DAV-
com.apple.CloudKitBookmarks.CyclerCloudBookmarksAssistant
https://fake-dav-id-for-testing/
Migration failed
Unable to acquire database lock
@"WBSPair"32@?0@"NSString"8@"WBSPair"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
change
B24@?0@"CKRecord"8^B16
B24@?0@"CKRecordID"8^B16
TabGroupTabParticipantStatus
TabReadStatus_
ReadStatus
TabGroupParticipantPosition
TabGroupPosition_
TabGroupPosition
LastKnownMinimumVersionsInCircleCacheDate
LastKnownMinimumSafariVersionInCircle
LastKnownMinimumIOSVersionInCircle
LastKnownMinimumMacOSVersionInCircle
encounteredUnknownOSVersionInCircle
16.0
13.0
com.apple.SafariSyncService.%@.%p._internalQueue
com.apple.SafariSyncService.%@.%p._assetSavingQueue
Ignoring sync request because a sync request is already pending
Ignoring sync request for %@ changes because a pre-sync up request is already running
local
remote
Ignoring sync request for remote changes because a pre-sync down request is already running
v32@?0q8@"WebBookmarkCollection"16@"NSError"24
@"WBBookmarkDatabaseSyncData"16@?0@"WBBookmarkDatabaseSyncData"8
v32@?0@"CKRecordZone"8@"WBSHashGenerator"16@"NSError"24
@"CKRecord"12@?0i8
B8@?0
@"WBBookmarkSyncData"16@?0@"WBBookmarkSyncData"8
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
99999999
9999999
@"NSString"32@?0@"CKRecordZoneID"8Q16^B24
v24@?0@"CKRecordZoneID"8@"NSError"16
@32@?0@"CKRecordID"8@"NSMutableSet"16^B24
recordID
recordID.ckShortDescription
v32@?0@"CKRecordID"8@"NSMutableSet"16^B24
B24@?0@"CKShareParticipant"8^B16
@"WBBookmarkSyncData"24@?0@"WebBookmark"8@"WBBookmarkSyncData"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16^B24
v32@?0@"CKServerChangeToken"8@"NSArray"16@"NSError"24
@"CKFetchRecordZoneChangesConfiguration"32@?0@"CKRecordZoneID"8Q16^B24
v48@?0@"CKServerChangeToken"8@"NSArray"16@"NSArray"24@"NSArray"32@"NSError"40
v16@?0@"WebBookmark"8
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
@"NSString"32@?0@"CKRecordZoneID"8@"NSError"16^B24
Asset destination URL was not available.
Sync Coordinator Saving Assets
record.ckShortDescription
v16@?0@"SWCollaborationHighlight"8
v24@?0@"SWCollaborationHighlight"8@"NSError"16
v40@?0@"CloudRemoteStore"8@"CKRecordID"16@"CKRecord"24@"NSError"32
v32@?0@"CloudRemoteStore"8@"CKRecordID"16@"NSString"24
v52@?0@"CloudRemoteStore"8@"CKRecordZoneID"16@"CKServerChangeToken"24@"NSData"32B40@"NSError"44
v32@?0@"WBSRetryableCKFetchRecordZoneChangesOperation"8@"CloudRemoteStore"16@"NSError"24
com.apple.SafariShared
CloudBookmarks
DiagnosticExtension
KeyedArchiver
SiriLink
T@"CKContainer",R,N,V_container
JSONObjectWithData:options:error:
T@"NSSet",R,C,N
T#,R,N,V_rootJSONObjectType
T@"NSString",R,C,N,V_recordType
T@"<CloudBookmarkDatabaseLockArbiterDelegate>",W,N,V_delegate
TB,N,V_disabled
T@"<CloudBookmarkSyncMigrationSaveHandlerDelegate>",W,N,V_delegate
TB,R,N,GwasEnabledByUserGesture
T@"<CloudBookmarkUpdater>",R,W,N,V_updater
Tq,N,Ssafari_setMigrationState:
T@"<CloudSettingSyncCoordinatorDelegate>",W,N,V_delegate
T@"<CloudTabGroupSyncCoordinatorDelegate>",W,N,V_delegate
_action
T@"<CloudTabLocalStore>",R,N,V_cloudTabLocalStore
_cachedSharedPresenceRecordName
T@"<CloudTabLocalStoreDelegate>",W,N,V_delegate
_changesDictionaryFromDatabase:
T@"<WBSBookmarkDBAccess>",R,N
_cloudTabsContainerManateeState
T@"ACAccount",R,N
_dequeueNextCloudBookmarkToSave
T@"CKContainer",R,N
_errorWithCode:
T@"CKOperationConfiguration",R,V_operationConfiguration
_extensionStore
T@"CKRecord",R,N,V_encryptionRecord
_fetchedDevices
T@"CKRecord",R,N,V_record
_initWithReparentedItem:configuration:databaseAccessor:updater:
T@"CKRecordZoneID",R,C,N
_isDatabaseOpen
T@"CKRecordZoneID",R,N,V_bookmarksRecordZoneID
_migrationDidCompleteWithError:
T@"CKReference",R,N
_namesOfRecordsSavedToTheServer
T@"CloudBookmarkAccountPropertiesStore",R,N,V_accountPropertiesStore
_operationQueue
T@"CloudBookmarkItemConfiguration",R,N
_processMonitor
T@"CloudBookmarkStore",R,N,V_bookmarkStore
_record
T@"CloudBookmarkSyncMigrationPositionGenerator",R,N,V_parentGenerator
_saveReparentedBookmarksHandler
T@"CloudTabRemoteStore",R,N,V_cloudRemoteStore
_stateCollector
T@"NSArray",C,N,V_itemConfigurations
_tabSyncArbiter
T@"NSArray",R,C,N
_updatedRecords
T@"NSArray",R,C,N,V_cloudBookmarkItemConfigurations
_vacuum
T@"NSData",C,N,V_clientChangeTokenData
_zoneID
T@"NSDate",&,N,V_endDate
account
T@"NSDate",R,N
address
T@"NSDictionary",R,C,N,V_parentRecordNamesToMovedChildRecordNames
beginSyncingWithOperationGroup:isLocalChange:completionHandler:
T@"NSError",&,V__cloudTabStoreError
canParseRecord:
T@"NSObject<OS_dispatch_queue>",&,N,V__databaseQueue
changes
T@"NSOrderedSet",R,C,N,V_identityHashKeys
cloudSettingsSyncEngineAccessor
T@"NSSet",R,C,N,V_deletedRecordNames
composedIdentifierForNewTabPage
T@"NSSet",R,C,N,V_keysWithoutGenerations
dealloc
T@"NSSet",R,C,N,V_movedRecordNames
deleteRecordWithID:inDatabase:operationGroup:completionHandler:
T@"NSSet",R,C,N,V_primaryCKRecordKeysToClear
didNotSaveRecordsAfterMigration
T@"NSSet",R,C,N,V_updatedRecords
encryptedValues
T@"NSString",&,N,Ssafari_setMigratorDeviceIdentifier:
ephemeralDevice
T@"NSString",C,N,V_subtitle
extraAttributes
T@"NSString",C,N,V_title
fileURL
T@"NSString",R,C,N
initWithZoneID:
T@"NSString",R,C,N,V_recordZoneSubscriptionID
isProxy
T@"NSString",R,N
isValid
T@"WBCollectionConfiguration",R,N,V_configuration
migrationRecord
T@"WBSCRDTPosition",R,C,N
needsSyncUpdate
T@"WBSSQLiteDatabase",&,N,V__database
numberWithBool:
T@,R,N,V_changeToken
parentGenerator
TB,N,GisSyncing,V_syncing
recordIDForTab:
TB,R,N
referenceAction
TB,R,N,GisDatabaseOpen,V_databaseOpen
release
TB,R,N,GisEnabled
safari_cloudExtensionsContainer
TB,R,N,GisPinned
safari_errorByAddingCloudKitPrivacyPreservingUserInfoForItemID:
TB,R,N,Gsafari_isCloudExtensionDeviceRecord
safari_folderTypeForRecordName:
TB,R,N,Gsafari_isCloudTabCloseRequestRecord
safari_isSyncRequirementsRecord
TB,R,N,Gsafari_isEncryptionInfoRecord
safari_onlyCloudKitPartialError
TB,R,N,Gsafari_isSyncRequirementsRecord
TB,R,N,V_usesManateeContainer
setAccountHash:
TQ,N,Ssafari_setMinimumAPIVersion:
setExpirationAfterTimeInterval:
TQ,R
setFetchRecordsCompletionBlock:
Tq,N
setPreviewText:
Tq,R,N
setShareRecord:
Tq,R,N,V_itemType
setWithObjects:
Tr^v,R,N
setXpcActivity:
URLByAppendingPathExtension:
stringByAppendingPathComponent:
URLByDeletingPathExtension
syncCoordinator:didFetchRecord:
UTF8String
syncDataForKey:
UUIDString
updateFromCloudExtensionDevice:
__cloudTabStoreError
updatedRecordsInPrivateDatabase
__isBeingTornDown
.cxx_destruct
T@"NSDictionary",C,N,V_metadata
T#,R
T@"NSString",R,C,N,V_recordName
T@"<CloudBookmarkDatabaseCoordinating>",R,N,V_databaseCoordinator
T@"WBChangeRecord",R,N,V_change
T@"<CloudBookmarkStoreLocalStorage>",R,N,V_threadUnsafeLocalStorage
TB,R,N,Gsafari_isCloudTabRecord
T@"<CloudBookmarkSyncMigrationSyncDownHandlerDelegate>",W,N,V_delegate
TQ,R,N,V_action
T@"<CloudExtensionSQLiteStoreDelegate>",W,N,V_delegate
Tr^v,R,N,V_item
T@"<CloudTabGroupMaintenanceActivityDelegate>",W,N,V_delegate
__databaseQueue
T@"<CloudTabGroupSyncManagerDelegate>",W,N,V_delegate
_bookmarkEncryptionInfoRecordID
T@"<CloudTabLocalStoreDelegate>",W,N
_change
T@"<CloudTabSyncArbiterDelegate>",W,N,V_delegate
_clearRetryHandlerIsCancelling:
T@"<WBSBookmarkDBAccess>",R,N,V_databaseAccessor
_deleteLegacySectionIdentifiers
T@"ACAccountStore",R,N,V_accountStore
_detectedBugIDs
T@"CKDatabase",R,N
_events
T@"CKOperationGroup",&,N,V_defaultOperationGroup
_fetchExtensionStatesCompletion
T@"CKRecord",R,N,V_migrationRecord
_identityHashKeysToTransformers
T@"CKRecord",R,N,V_topBookmarkRecord
_insertBookmarkWithRecordName:intoExistingFolderWithRecordName:
T@"CKRecordZoneID",R,N
_localStoreShim
T@"CKRecordZoneID",R,N,V_recordZoneID
_modifiedStates
T@"CKServerChangeToken",&,N,V_serverChangeToken
_numberOfMigrationRetryAttempts
T@"CloudBookmarkAttributeValueTransformer",R,N
_processChanges
T@"CloudBookmarkItemConfiguration",R,N,V_configuration
_pushConnection
T@"CloudBookmarkStore",R,N,V_store
_rootRecordName
T@"CloudSettingStore",R,N,V_settingStore
_sendNotificationForSyncResult:
T@"NSArray",C,N,V_cloudExtensionStates
_stringForRemoteMigrationState:
T@"NSArray",C,N,V_tabs
_unsavedChanges
T@"NSArray",R,C,N,V_changes
_updatedRecordsInSharedDatabase
T@"NSData",C,N
_valueTransformerForTitleAndURL
T@"NSDate",&,N,V_beginDate
acceptShareForShareMetadata:inOperationGroup:completionHandler:
T@"NSDate",R,C,N
addParticipant:
T@"NSDictionary",R,C,N
allKeys
T@"NSError",&,V__cloudExtensionStoreError
bookmarkWithID:
T@"NSNumber",R,N
changedRowCount
T@"NSOperationQueue",R,N
cloudBookmarkItemConfigurations
T@"NSSet",R,C,N,V_deletedRecordIDs
cloudTabGroupSyncCoordinator:didUpdateShareForTabGroupWithUUID:
T@"NSSet",R,C,N,V_deletedRecordZoneIDs
containsObject:
T@"NSSet",R,C,N,V_knownKeys
deleteCloudExtensionRecords:inOperationGroup:completionHandler:
T@"NSSet",R,C,N,V_primaryCKRecordGenerationKeysToClear
deviceIdentifierForCloudKitWithCollectionType:generateIfNeeded:
T@"NSSet",R,C,N,V_primaryCKRecordKeysToSave
enabled
T@"NSSet",R,N,V_objectClasses
endDate
T@"NSString",C,N,V_rootRecordName
execute
T@"NSString",C,N,V_symbolName
fetchRemoteMigrationInfoInOperationGroup:withCompletionHandler:
T@"NSString",R,C
initFolderWithParentID:subtype:deviceIdentifier:collectionType:
T@"NSString",R,C,N,V_parentRecordName
isEmpty
T@"NSString",R,C,N,V_secondaryRecordZoneNamePrefix
isShowingReader
T@"WBCollectionConfiguration",R,C,N,V_collectionConfiguration
T@"WBSCRDTPosition",C,N
migrationStateEncodedRecordData
T@"WBSHashGenerator",R,N
T@"WebBookmarkCollection",R,N,V_collection
options
T@?,R,C,N,V_recordTestBlock
recordChangeTag
TB,N,V_threadUnsafeIncludesMigrationRecordInSaveBatch
recordTestBlock
TB,R,N,GisDatabaseOpen
refresh
TB,R,N,GisDataclassEnabled
safari_SHA1Hash
TB,R,N,GisEphemeralDevice
safari_descriptionWithoutSpaces
TB,R,N,GisShowingReader
safari_filterObjectsUsingBlock:
TB,R,N,Gsafari_isCloudExtensionStateRecord
safari_isCloudKitErrorWithCode:
TB,R,N,Gsafari_isCloudTabDeviceRecord
safari_migratorDeviceIdentifier
TB,R,N,Gsafari_isMigrationStateRecord
safari_recordNameForFolderType:
TB,R,N,GwasNewTabPageSetByUserGesture
setAcceptSharesCompletionBlock:
TB,V__isBeingTornDown
setDidReceiveNonRetryableError:
TQ,N,Ssafari_setMinimumSyncAPIVersion:
setExtraAttributesValue:forKey:
TQ,R,N
setLog:
Tq,N,Ssafari_setState:
setRecordWithIDWasDeletedBlock:
Tq,R,N,V_itemSubtype
setUpBookmarksRecordZoneInOperationGroup:withCompletionHandler:
Tq,R,N,V_type
setXPCActivity:
Tr^v,R,N,V_databaseRef
shouldScheduleDiscretionarySync
URLByDeletingLastPathComponent
subtype
URLWithString:
syncCoordinatorDidFinishSyncUp:
UUID
syncing
__cloudExtensionStoreError
updateLocalItem
__database
updater
_acceptShareForShareMetadata:inCollection:operationGroup:completionHandler:
_acceptShareForShareMetadata:inOperationGroup:completionHandler:
_acceptShareForURL:invitationTokenData:inOperationGroup:completionHandler:
_accountPropertiesStore
_accountStore
_acquireLockToSetPresenceInTabWithRecordID:inOperationGroup:isRetry:completionHandler:
_acquireLockUsingPrivatePresenceRecord:toSetPresenceInTabWithRecordID:previousPrivatePresenceRecord:inOperationGroup:isRetry:completionHandler:
_activityCheckInQueue
_addAuxiliaryRecord:forUnknownRecordWithID:operationGroup:
_addDependenciesForModifyRecordsOperation:operationQueue:
_addModifyRecordsOperations:inOperationGroup:operationQueue:
_appleAccountSecurityState
_applyPendingReferences:
_archivedDataForPerSiteSettingDictionaryInDictionary:
_assetSavingQueue
_attemptCloudExtensionsSyncForPushNotification
_attemptCloudSettingsSyncForTrigger:
_attemptCloudTabsSyncForPushNotification
_attemptLocalMigrationBeforeTryingToBecomeResponsibleForMigrationInOperationGroup:externalCompletionHandler:
_attemptLocalMigrationInCollection:operationGroup:completionHandler:
_attemptSyncAndFallBackToMigrationIfPossibleForTrigger:
_attemptSyncForChangedZonesSharingContainer:
_attemptTabGroupsSyncForManager:withTrigger:
_attributeKeysToGenerationKeys
_attributeKeysToTransformers
_auxiliaryRecordIDsToDelete
_auxiliaryRecordKeyForRecordType:
_batchItemForDeleteChange:inCollection:operationGroup:
_becameResponsibleForMigrationInOperationGroup:externalCompletionHandler:
_beginDate
_beginDeletingAuxiliaryRecordsInCollection:operationGroup:completionHandler:
_beginFetchingExtensionStates
_beginFetchingTabs
_beginMigrationAsPrimaryMigrator:inOperationGroup:
_beginMigrationFromDAVInOperationGroup:
_beginMigrationFromDAVInOperationGroupInternal:
_beginMigrationWithOperationGroup:completionHandler:
_beginSavingMigratedRecordsForRootBookmarkID:destinationRecordZoneID:inCollection:operationGroup:completionHandler:
_beginSavingMigrationTombstonesForRootBookmarkID:destinationRecordZoneID:inCollection:operationGroup:completionHandler:
_beginSharingTabGroupWithUUID:inOperationGroup:completionHandler:
_beginSyncingInOperationGroup:completionHandlers:
_beginSyncingWithOperationGroup:completionHandler:
_beginSyncingWithOperationGroupForFetching:operationGroupForSaving:completionHandlers:
_bookmarkForRemoteRecord:isNewBookmark:
_bookmarkStore
_bookmarkStoreDidFinishSetUp
_bookmarkSyncCoordinator
_bookmarksByVerifyingAndReparentingUnrootedBookmarksRememberOriginalParents:getLastValidPositionInRootFolder:
_bookmarksLog
_bookmarksOperationQueue
_bookmarksRecordZoneID
_cacheUserRecordIDIfNeededInOperationGroup:withCompletionHandler:
_cachedPrivatePresenceRecord
_cachedRemoteStateForAnalytics
_cachedUserRecordID
_canApplyValue:withGeneration:toAttribute:updater:
_canCloseCloudExtensionStoreDatabase
_canCloseCloudTabStoreDatabase
_canHandleCKRecordZoneWithID:
_canUseDiscretionarySync
_cancelBackgroundImageSaveDelayTimer
_cancelPushNotificationSyncDelayTimer
_cancelSyncTimer
_changeToken
_changedRecordsForCloudExtensionDevice:
_changedRecordsForCloudTabDevice:
_changes
_checkInXPCActivityWithIdentifier:criteria:registerIfNeeded:performBlock:
_checkMigrationStateOnInternalQueueInRecord:error:
_checkPrivatePresenceLockValidityWithRecord:toUpdatePresenceInTabWithRecordID:inOperationGroup:completionHandler:
_childEvents
_childRecordNamesInParentServerSyncId:
_childRecordNamesToParentRecordNames
_cleanUpAndCallCompletionHandlersWithError:
_cleanUpAndCallCompletionHandlersWithError:inOperationGroup:
_clearCachedCloudSettingsRecordZoneIfNecessaryForError:
_clearPerSiteSettingsSyncData
_clearUnknownRecordIDsToPendingAuxiliaryRecordSetsInOperationGroup:
_clientChangeTokenData
_closeDatabase
_closeRequestSaveState
_closeRequestToSave
_cloudBookmarkForRecord:isNewBookmark:
_cloudBookmarkItemConfigurations
_cloudBookmarkStore
_cloudBookmarksStoreContainer
_cloudExtensionDevicesDictionaryFromCloudExtensionDevices:
_cloudExtensionLocalStore
_cloudExtensionStateFromRow:deviceUUIDString:
_cloudExtensionStates
_cloudExtensionStatesDictionaryFromCloudExtensionDevices:
_cloudExtensionStore
_cloudExtensionStoreError
_cloudExtensionsOperationQueue
_cloudExtensionsRecordZone
_cloudExtensionsRecordZoneID
_cloudKitRecordNameForBookmarkDAVServerSyncId:
_cloudKitSubscriptionRegistrationIsInProgress
_cloudKitSubscriptionRegistrationTimer
_cloudRemoteStore
_cloudSettingsContainer
_cloudSettingsOperationQueue
_cloudSettingsRecordZone
_cloudTabFromRow:deviceUUIDString:
_cloudTabLocalStore
_cloudTabStore
_cloudTabStoreError
_cloudTabsContainer
_cloudTabsContainerManateeObserver
_cloudTabsOperationQueue
_cloudTabsRecordZoneID
_collectDiagnosticsDataWithRemoteMigrationInfo:remoteMigrationInfoError:completionHandler:
_collection
_collectionConfiguration
_commonInitWithTabUUIDString:owningDeviceUUIDString:owningSceneID:position:title:urlString:isPinned:isShowingReader:readerScrollPositionPageIndex:encodedSystemFieldsData:cloudTabsRecordZoneID:
_completionHandler
_completionHandlerQueue
_completionHandlersForCurrentDeviceFetchRequest
_completionHandlersForNextDeviceFetchRequest
_computeMinimumSyncAPIVersionForRecord:withBookmark:inCollection:
_configuration
_configurationForBookmark:
_configurationForRecord:
_container
_containerManateeObserver
_containersCheckedForDatabaseChanges
_continueDeleting
_continueFetchingExtensionStates
_continueFetchingSettingsWithCompletionHandler:
_continueFetchingTabs
_continueSavingCloseRequest
_continueSavingExtensionStates
_continueSavingTabsForCurrentDevice
_continueSyncingAfterSyncDown:
_continueSyncingAfterSyncingDown:inOperationGroup:
_convertItem:
_converter
_createBookmarkWithConfiguration:record:inCollection:operationGroup:
_createBuiltInFolderWithRecordNameIfNeeded:
_createCloudExtensionsRecordZoneInOperationGroup:withRetryManager:completionHandler:
_createCloudSettingsRecordZoneInOperationGroup:withRetryManager:completionHandler:
_createCloudTabsRecordZoneInOperationGroup:withRetryManager:completionHandler:
_createCollectionWithConfiguration:
_createEncryptionRecordForRecordZoneWithID:inOperationGroup:completionHandler:
_createFreshDatabaseSchema
_createLegacyPlaceholderForSharedTabGroup:inCollection:operationGroup:completionHandler:
_createNewPerSiteCloudKitRecordWithDictionaryRepresentation:precomputedRecordName:
_createOperationGroupWithName:
_createParentFolderReferenceWithRecordName:updater:
_createRecordIDWithName:updater:
_createRecordWithRecordName:updater:
_createServerSyncIDForItem:
_createSharedPresenceRecordWithTabRecordID:currentPrivatePresenceRecord:inOperationGroup:isRetry:completionHandler:
_currentChildRecordNames
_currentDeleteOperationGroup
_currentFetchOperationGroup
_currentManateeState
_currentRetryCompletionHandler
_currentSchemaVersion
_currentSyncDownEvent
_currentSyncUpEvent
_customizationSyncQueue
_cyclerAssistant
_database
_databaseAccessor
_databaseAtURL:failedToDeleteWithError:
_databaseAtURL:failedToOpenWithError:
_databaseAtURL:hasIncorrectSchemaVersion:
_databaseCoordinator
_databaseForRecord:
_databaseLockArbiter
_databaseLockCount
_databaseOpen
_databaseQueue
_databaseRef
_databaseURL
_databaseWillBeClosed
_databaseWillBeDeleted
_databaseWillBeOpened
_databaseWillBeRecreated
_dataclassEnabled
_dateToForceSyncAfterPushNotification
_dateToUseDiscrectionarySync
_decodedSyncDataInData:
_defaultOperationGroup
_defaultSubtitle
_defaultTransformer
_defaults
_delayBeforeSavingBackgroundImageTimer
_delayBeforeSyncingAfterPushNotificationTimer
_delayBetweenRetryAttempts
_delegate
_deleteCloseRequestsOperationGroup
_deleteCloudTabsZoneWithCompletionHandler:
_deleteCompletion
_deleteDatabaseAndRestartFetch
_deleteDatabaseFileAtURL:reopenDatabase:
_deleteDevicesOperationGroup
_deleteError
_deleteExtensionDevicesError
_deleteNextBatchOfAuxiliaryRecordsInCollection:operationGroup:completionHandler:
_deleteObsoleteExtensionStateRecordsFromCloudKit
_deleteObsoleteTabRecordsFromCloudKit
_deletePresenceForParticipantID:inTabGroupWithRecordName:collection:operationGroup:
_deletePrivateRecordZoneIDs:collection:operationGroup:completionHandler:
_deletePrivateTabGroupZonesInOperationGroup:completionHandler:
_deleteRecordsFromCloudKit
_deleteRecordsWithNames:inOperationGroup:completionHandler:
_deleteSettingsOperationGroup
_deleteSharedTabGroupZonesInOperationGroup:completionHandler:
_deleteState
_deleteTabGroupZonesInOperationGroup:completionHandler:
_deleteTemporaryParentFolder
_deletedBookmarkRecordNames
_deletedRecordIDs
_deletedRecordIDsInPrivateDatabase
_deletedRecordIDsInSharedDatabase
_deletedRecordNames
_deletedRecordZoneIDs
_deletedRecordZoneIDsInPrivateDatabase
_deletedRecordZoneIDsInSharedDatabase
_deletingDatabaseCount
_descriptionForErrorCode:
_destinationRecordZoneID
_determineCloudTabSyncCoordinatorWithCompletion:
_determineCourseOfActionFromLocalStateInOperationGroup:completionHandler:
_determineCourseOfActionFromLocalStateInOperationGroup:externalCompletionHandler:
_determiningSyncCoordinator
_deviceClass
_deviceToDeviceEncryptionEnabled
_deviceToSave
_didCheckAgentVersionOnDatabaseLock
_didCompleteSyncDownAfterExpiredChangeTokenError
_didCompleteSyncDownAfterExpiredChangeTokenErrorWithCollection:operationGroup:
_didDeleteRecordWithName:
_didDetectPossibleBug:
_didFailSavingWithError:
_didFailToSyncWithError:didOpenDatabase:
_didFailToSyncWithError:inCollection:operationGroup:completionHandler:
_didFailToSyncWithError:inOperationGroup:
_didFetchBookmarkRecord:collection:operationGroup:
_didFetchModifiedRecord:
_didFetchRecord:inCollection:operationGroup:shouldGenerateUpdatedRecord:
_didFinishMigrationWithError:
_didFinishSavingRecordsWithNames:
_didFinishSyncDownInCollection:operationGroup:isSuccessful:
_didFinishSyncDownInOperationGroup:
_didFinishSyncingReceivingRecordNames:error:
_didFinishSyncingWithResult:error:completionHandler:
_didLoadLastKnownMinimumIOSVersion:minimumMacOSVersion:encounteredUnknownOS:inOperationGroup:
_didReceiveIncomingMessageWithNotification:pushTopic:subscriptionID:
_didReceiveSyncRequestWhileSyncing
_didRegisterCloudKitSubscriptions:timer:lastError:completionHandler:
_didResetSyncData
_didRetrieveHashGenerators:
_didSaveLocalRecords
_didSaveRecordsLocally
_didScheduleSync
_disabled
_dispatchPresenceUpdatesIfNeededForTabGroupsWithRecordNames:inCollection:
_dispatchPresenceUpdatesIfNeededForTabsWithRecordNames:inCollection:
_encryptionRecord
_endDate
_existingBookmarkForRemoteRecord:
_existingPositionForRecordWithName:getIsFolder:
_expiredChangeTokenHandler
_extensionsSyncCoordinator
_failedToDeleteMetadataValueWithKey:error:
_failedToEnableForeignKeysWithError:
_failedToEnableSecureDeleteWithError:
_failedToEnableWALWithError:
_failedToExcludeDatabaseFromBackupWithError:
_failedToInsertMetadataValueWithKey:error:
_failedToSetSchemaVersion:withError:
_failedToUpdateMetadataValueWithKey:error:
_fetchChangedRecordZonesSinceServerChangeToken:inDatabase:collection:operationGroup:completionHandler:
_fetchChangesFromCloudKitCreatingCloudExtensionsZoneIfMissing:
_fetchChangesFromCloudKitCreatingCloudTabsZoneIfMissing:
_fetchDevices
_fetchDevicesCompletion
_fetchError
_fetchExtensionStatesOperationGroup
_fetchOperationType
_fetchRecordsOnInternalQueueWithRetryManager:serverChangeToken:recordChangedBlock:recordWithIDWasDeletedBlock:inOperationGroup:completionHandler:
_fetchRecordsOnInternalQueueWithServerChangeToken:recordChangedBlock:recordWithIDWasDeletedBlock:inOperationGroup:completionHandler:
_fetchRecordsToRefreshInCollection:operationGroup:completionHandler:
_fetchRemoteMigrationInfoInOperationGroup:completionHandler:
_fetchRemoteMigrationStateWithXPCActivity:qualityOfService:completionHandler:
_fetchSettingsOperationGroup
_fetchState
_fetchSyncedCloudTabDevicesAndCloseRequestsWithCompletionHandler:
_fetchTabsOperationGroup
_fetchUpdatedZonesInPushNotificationForContainer:
_fetchUserIdentityInOperationGroup:withCompletionHandler:
_fetchedCloseRequests
_fetchedPerSiteSettings
_fetchedSettingsDictionary
_fetchingQueue
_fetchingQueueSuspended
_finishSyncing
_finishedDeletingRecords
_finishedFetching
_finishedSavingCloseRequest
_finishedSavingDevice
_finishedSavingExtensionStates
_folderRecordQueue
_generateAndSaveRecordsInOperationGroup:
_generateAndSaveRemainingRecordsInOperationGroup:
_generateIdentityHashUsingUpdater:
_generatePositionsForChildRecordNames:withStartingPosition:
_generateRecordPositions
_getPerSiteSettingRecordNameWithDictionaryRepresentation:completionHandler:
_getServerChangeTokenFromSQLiteStore
_getShouldCreateLegacyPlaceholderForSharedTabGroupInCollection:operationGroup:completionHandler:
_handleDeletedRecordZoneIDs:inCollection:
_handleDeletedShareRecordWithID:inCollection:operationGroup:
_handleDeletedTabGroupParticipantPositionRecord:inCollection:
_handleDeletedTabParticipantStatusRecord:inCollection:
_handleDeletedTabPresenceRecord:inCollection:operationGroup:
_handleExpiredChangeTokenError:collection:operationGroup:completionHandler:
_handleExpiredChangeTokenError:completionHandler:
_handleFailureToBecomeResponsibleForMigrationDueToConflictInCollection:operationGroup:completionHandler:
_handleFailureToBecomeResponsibleForMigrationDueToConflictInOperationGroup:externalCompletionHandler:
_handleICloudKeychainResetInCollection:operationGroup:completionHandler:
_handleManateeErrorIfNeeded:completionHandler:
_handlePendingAuxiliaryRecordsIfNeededForMainRecordID:inCollection:operationGroup:
_handlePreemptionInOperationGroup:externalCompletionHandler:
_handleSevereSQLiteErrorWhileFetching:
_handleSevereSQLiteErrorWhileMergingExistingDevice:
_handleUpdatedShareRecord:inCollection:operationGroup:
_handleUpdatedTabGroupParticipantPositionRecord:inCollection:operationGroup:
_handleUpdatedTabParticipantStatusRecord:inCollection:operationGroup:
_handleUpdatedTabPresenceRecord:inCollection:operationGroup:
_hasEntitlementForSensitiveOperation
_hasSavedBookmarksLocally
_hasTemporaryParentFolder
_hasValidDeviceIdentifier
_hashGeneratorForRecord:
_hierarchyCheckTimer
_hierarchyCheckTimer:
_hierarchyCheckerDidFail
_highlightCenter
_identifierForSensitiveString:
_identityHashKeys
_ignoreOngoingCloudKitSubscriptionRegistrationResult
_initWithAddedRecord:configuration:forItem:databaseAccessor:updater:
_initWithCKRecord:
_initWithChange:databaseAccessor:updater:
_initWithComposedIdentifier:owningDeviceUUIDString:lastModifiedDate:containingAppAdamID:displayName:isEnabled:wasEnabledByUserGesture:iosAppBundleIdentifier:iosExtensionBundleIdentifier:macAppBundleIdentifier:macExtensionBundleIdentifier:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
_initWithConfiguration:deleteChange:databaseAccessor:updater:
_initWithDeviceUUIDString:deviceName:hasDuplicateName:lastModified:isEphemeralDevice:encodedSystemFieldsData:cloudTabsRecordZoneID:
_initWithDeviceUUIDString:deviceName:lastModifiedDate:newTabPageComposedIdentifier:newTabPageSetByUserGesture:newTabPageLastModifiedDate:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
_initWithItem:configuration:databaseAccessor:
_initWithItem:configuration:syncData:databaseAccessor:
_initWithItemToMigrate:configuration:databaseAccessor:updater:
_initWithTabUUIDString:owningDeviceUUIDString:owningSceneID:position:title:urlString:isPinned:isShowingReader:readerScrollPositionPageIndex:encodedSystemFieldsData:cloudTabsRecordZoneID:
_initWithTabUUIDString:tabURLString:destinationDeviceUUIDString:closeRequestUUIDString:encodedSystemFieldsData:cloudTabsRecordZoneID:
_insertBookmark:intoFolderWithRecordName:
_internalQueue
_invalidateHierarchyCheckTimer
_isBeingTornDown
_isCustomizationSyncing
_isDataclassEnabled
_isDeletingDatabase
_isDeviceToDeviceEncryptionEnabled
_isExpiredChangeTokenError:
_isMigrating
_isPerformingInitialSyncUp
_isRefetchingAfterDeletingDatabase
_isSavingMigrationTombstoneRecords
_isSavingReparentedRecords
_isSyncOperationPending
_isSynchronizing
_isSyncing
_isUnrecoverableCloudKitWriteError:
_isWaitingForPCSIdentityUpdate
_item
_itemConfigurations
_itemSubtype
_itemType
_items
_keysWithoutGenerations
_knownKeys
_knownKeysToSaveForRecord:withConfiguration:
_lastKnownMinimumOSVersionInCircleRequiresLegacyPlaceholderForSharedTabGroup
_lastKnownMinimumVersionsCachedDate
_lastKnownPositionInRoot
_lastKnownPositionOfLastItemInRootFolder
_lastScheduledUpdateBlock
_lastScheduledUpdateLock
_lastSuccessfulCloudKitSubscriptions
_lastValidPositionInRootFolder
_loadAttributesForKnownKeysIntoEmptyItemUsingRemoteRecord:updater:
_loadCloseRequests
_loadDeviceWithUUIDString:
_loadDevices
_loadDevicesAndStatesFromSQLiteStore
_loadDevicesAndTabsFromSQLiteStore
_loadExtensionStatesForDevice:
_loadTabsForDevice:
_localBookmarksDictionaryFromDatabase:
_localDatabaseContainsItemWithRecordName:getParentRecordName:
_localStoreShimForManateeContainer
_log
_maintenanceActivity
_manateeErrorCode:
_manateeStateNeedsUpdate
_maximumNumberOfRetryAttempts
_mergeDeviceIntoDeviceFromSQLiteStoreIfNecessary
_mergedRecordWithLocalRecord:remoteRecord:saveError:collection:operationGroup:
_metadata
_metadataDataValueForKey:
_metadataInt64ValueForKey:
_migrateFromDAVInOperationGroup:completionHandler:
_migrateToCurrentSchemaVersionIfNeeded
_migratedRecordForBookmarkID:inCollection:destinationRecordZoneID:
_migrationConverter
_migrationCoordinator
_migrationLocalRecordIDQueue
_migrationRecord
_migrationStateRecordID
_migrationTombstoneRecordForBookmarkID:inCollection:destinationRecordZoneID:operationGroup:
_misplacedBuiltInFolderRecordNames
_modifiedCloseRequests
_modifiedDevices
_modifiedOrLocalIdentityHashWithUpdater:
_modifiedOrLocalParentReferenceWithUpdater:
_modifiedTabs
_modifyExistingPerSiteCloudKitRecordWithData:dictionaryRepresentation:
_modifyRecords:andDeleteRecordIDs:inDatabase:operationGroup:previouslySavedRecords:previouslyDeletedRecords:mergeHandler:completionHandler:
_movedBookmarkManager
_movedBookmarkRecordNames
_movedRecordNames
_mutableBookmarkLeafRecords
_mutableBookmarkListRecords
_mutableDeletedBookmarkRecords
_namesOfDeletedRecords
_namesOfLocalRecordsToDelete
_namesOfRecordsExpectedOnSyncDown
_namesOfRecordsMissingFromPreviousSyncDown
_namesOfRemainingRecordsToSave
_needsAccountHashCheck
_needsDatabaseFetchOperationForContainer:
_needsDataclassEnabledCheck
_needsSync
_nextBatchItemAfterChangeToken:inCollection:operationGroup:
_nextChangeID
_nextCloudBookmarkToSave
_nextEarliestScheduleTime
_nextMigrationRecordBatchInCollection:operationGroup:recordBuilderBlock:
_nextRecordBatchGetRecordNamesToCloudBookmarks:withCloudBookmarkAllocationBlock:
_nextRecordBatchToSave
_notifyDelegateAboutIgnoredRecordZoneIDsIfNeeded:operationGroup:
_numberOfFailedCloudKitSubscriptionRegistrationAttempts
_numberOfRetries
_numberOfRetryAttempts
_objectClasses
_observers
_openDatabase:deleteDatabaseFileOnError:
_operationConfiguration
_operationDispatchQueue
_operationGroupForFetching
_operationGroupForSaving
_operationToDeleteCloudExtensionRecordIDs:completionHandler:
_operationToDeleteCloudTabRecordIDs:completionHandler:
_parentGenerator
_parentRecordName
_parentRecordNamesToMovedChildRecordNames
_parentRecordNamesWithMovedChildren
_pcsIdentitiesChangedNotification:
_pcsIdentitiesDidChangeNotification:
_pendingReferenceManager
_pendingReferences
_perSitePreferencesStore
_perSiteSettingsDeviceIdentifier
_performBookmarkSyncForTrigger:inOperationGroup:completionHandler:
_performHiearchyCheck
_performMergingSyncDownInOperationGroup:
_performMigrationAsPrimaryDevice:inOperationGroup:externalCompletionHandler:
_performPostZoneMigrationSyncDownForRecordZoneID:shareRecord:inCollection:operationGroup:completionHandler:
_performSettingsSyncForTrigger:inOperationGroup:completionHandler:
_performSharedPresenceInTabHeartbeatUpdateIfNeededWithRecordID:inOperationGroup:completionHandler:
_performSyncDown
_performSyncDownAfterProcessingChangesInCollection:operationGroup:completionHandler:
_performSyncDownForRecordZoneIDs:perRecordZoneConfigurations:inDatabase:collection:operationGroup:completionHandler:
_performSyncDownInCollection:operationGroup:completionHandler:
_performSyncDownInOperationGroup:
_performSyncDownInOperationGroup:withRetryManager:
_performSyncDownWithCompletionHandler:
_performSyncDownWithLastServerChangeToken:completionHandler:
_performTabGroupSyncForManager:withTrigger:completionHandler:
_periodicallyObservingRemoteMigrationState
_positionAfterPosition:
_positionAfterPosition:owningDeviceUUIDString:
_positionGenerator
_positionOfBookmarkWithRecordNameForFolderSorting:
_postCollaborationChangeEventWithBookmark:inCollection:operationGroup:
_postCollaborationDeleteEventWithBookmark:inCollection:operationGroup:
_postCollaborationRenameEventWithBookmark:inCollection:operationGroup:
_postHighlightWithBookmark:collection:operationGroup:completionHandler:
_postNoticeForHighlightEvent:
_prepareBookmarksRecordZoneCreatingIfNeeded:inOperationGroup:withCompletionHandler:
_prepareBookmarksRecordZoneInOperationGroup:withCompletionHandler:
_prepareBookmarksRecordZoneInvalidatingCachedZone:createIfNeeded:inOperationGroup:withCompletionHandler:
_prepareBookmarksRecordZoneOnInternalQueueAfterExternalCompletionHandlersHaveBeenStashedInvalidatingCachedZone:createIfNeeded:inOperationGroup:withCompletionHandler:
_prepareForSyncDownInOperationGroup:
_prepareForSyncingWithOperationGroup:completionHandler:
_prepareRecordsForMigration
_primaryAppleAccountSecurityLevel
_primaryCKRecordGenerationKeysToClear
_primaryCKRecordKeysToClear
_primaryCKRecordKeysToSave
_privatePresenceRecordID
_processLocalTabOperation:completionHandler:
_processSavedRecord:forBookmark:inCollection:operationGroup:
_processUpdateQueue
_pushTopicForContainer:
_pushTopics
_queue
_readServerChangeTokenFromUserDefaults
_readStatusRecordForBookmark:syncData:configuration:changeType:inCollection:
_rebuildUndeletedBookmark:
_recordByMergingRemoteRecord:intoCloudBookmark:
_recordByMergingRemoteRecord:withLocalRecord:recordNamesToCloudBookmarks:saveError:
_recordForBookmark:inCollection:changeType:
_recordForBookmark:syncData:configuration:changeType:inCollection:
_recordIDsFromDeviceOrTabUUIDStrings:
_recordIDsFromRecordNames:
_recordIDsToDelete
_recordIDsToRefresh
_recordName
_recordNameEnumerator
_recordNameOfAncestorToReparentForRecordName:verifiedRecordNames:
_recordNameOfAncestorToReparentInLoop:
_recordNameOfLastRecordInRoot
_recordNamesOfStatesToDelete
_recordNamesToChildFolderRecordNames
_recordNamesToChildRecordNames
_recordNamesToDelete
_recordNamesToGeneratePositionsForInRecordNames:inParentRecordName:getFolderRecordNames:getLastValidPosition:
_recordNamesToPositions
_recordTestBlock
_recordType
_recordZoneID
_recordZoneIDForBookmark:inCollection:
_recordZoneIDsToHashGenerators
_recordZoneIDsToPendingServerChangeTokens
_recordZoneSubscriptionID
_recordsToSave
_recursivelyCancelDependentOperations:operationQueue:
_recursivelyUpdateChildrenOrderWithParentServerID:depth:
_registerCloudKitSubscriptionsXPCActivityRegisteringIfNeeded:ignoreOnGoingRegistration:resetSubscriptions:qualityOfService:delay:
_registerPeriodicRemoteMigrationStateObserverXPCActivityRegisteringIfNeeded:
_registerRemainingCloudKitSubscriptions:withLastSuccessfulSubscriptions:inOperationGroup:withCompletionHandler:
_releaseLockForPrivatePresenceRecord:inOperationGroup:completionHandler:
_remainingCloudKitSubscriptionsToRegister
_remoteStore
_remotelyModifiedAssetAttributes
_remotelyModifiedAttributes
_removeBookmarkWithServerID:inCollection:
_removeDeletedRecordsFromSQLiteStore
_removeUserSpecificKeysInTabGroupRecord:forBookmark:configuration:inCollection:
_reorderChildrenOfFolderWithServerSyncId:
_reorderChildrenOfTopBookmarkFolderGetLastPosition:
_reorderedBySyncPositionBookmarkFolderServerIDs
_reparentAndSaveUnrootedBookmarks
_reparentAndSaveUnrootedBookmarksInOperationGroup:
_reparentBuiltInFolderIfNeeded
_replaceSharedPresenceRecordWithTabRecordID:currentPrivatePresenceRecord:previousPrivatePresenceRecord:inOperationGroup:isRetry:completionHandler:
_resetDatabaseSchema
_resetSyncData
_resetSyncDataInCollection:operationGroup:
_resetToIdleAfterMigrationFailureInOperationGroup:externalCompletionHandler:
_resultByMergingMinimumAPIVersionWithRecord:
_resultByMergingParentAndPositionWithRecord:usingUpdater:
_resultByMergingStateWithRecord:shouldContinueMerge:
_resumeFetchingQueue
_resumeSavingQueue
_retryFetchChangesFromCloudKitIfPossibleAfterCreatingCloudExtensionsZoneCompletedWithError:
_retryFetchChangesFromCloudKitIfPossibleAfterCreatingCloudTabsZoneCompletedWithError:
_retryIntervalToRegisterCloudKitSubscriptionsWithNumberOfFailedAttempts:lastCKError:
_retryTimer
_rootJSONObjectType
_runSyncingWithCollection:inOperationGroup:completionHandler:
_runTabGroupSyncUsingXPCActivityForManager:tigger:
_runTabGroupsSyncForManager:withTrigger:completionHandler:
_safariUserDefaults
_safari_deviceIdentifierKeyForKey:
_safari_generationKeyForKey:
_safari_isOrContainsCloudKitErrorOfCodes:checkInternalErrorCode:
_saveAssetAtURL:toURL:operationGroup:completionHandler:
_saveAssetsForBookmarkIfPresent:onRecord:withConfiguration:inCollection:operationGroup:
_saveBackgroundImageOperationGroup
_saveBookmarksRecordBatch:inOperationGroup:clientChangeTokenData:previouslySavedRecords:previouslyDeletedRecordIDs:mergeHandler:completionHandler:
_saveBookmarksZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveCloseRequest:
_saveCloseRequestCompletion
_saveCloseRequestError
_saveCloseRequestToCloudKit
_saveCloseRequestsOperationGroup
_saveCloudBackgroundImageWithURL:isLightAppearance:successCompletionHandler:
_saveCloudExtensionDevice:shouldUpdateExtensionStatesWhenSavingDevice:completionHandler:
_saveCloudExtensionsRecordBatch:inOperationGroup:completionHandler:
_saveCloudExtensionsRecordBatch:previouslySavedRecords:previouslyDeletedRecordIDs:retryManager:inOperationGroup:completionHandler:
_saveCloudExtensionsZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveCloudPerSiteSettingsWithMacZoomPreferences:successCompletionHandler:
_saveCloudSettingsBatchWithDictionaryRepresentation:successCompletionHandler:
_saveCloudSettingsRecords:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
_saveCloudSettingsRecords:retryManager:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
_saveCloudSettingsZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveCloudTabsRecordBatch:inOperationGroup:completionHandler:
_saveCloudTabsRecordBatch:previouslySavedRecords:previouslyDeletedRecordIDs:retryManager:inOperationGroup:completionHandler:
_saveCloudTabsZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveDevice:
_saveDeviceToCloudKit
_saveExtensionState:
_saveExtensionStateOperationGroup
_saveExtensionStatesCompletion
_saveExtensionStatesError
_saveModifiedRecordsToSQLiteStore
_saveNextBatchInCollection:operationGroup:completionHandler:
_saveNextChangedRecordBatch
_saveNextMigrationRecordBatchInCollection:operationGroup:usingRecordBuilderBlock:completionHandler:
_saveNextRecordBatchCreatingCloudExtensionsZoneIfMissing:
_saveNextRecordBatchCreatingCloudTabsZoneIfMissing:
_saveNextReparentedRecordBatch
_saveOrLoadRecord:inOperationGroup:withCompletionHandler:
_savePerSiteCloudKitRecordsToDisk:
_saveRecord:forBookmark:inCollection:
_saveRecordBatch:inOperationGroup:recordNamesToCloudBookmarks:
_saveRecordBatch:recordNamesToCloudBookmarks:successCompletionHandler:
_saveRecordZoneServerChangeTokensInCollection:operationGroup:ifSuccessful:
_saveRecordZoneSubscriptionForZoneID:subscriptionID:inOperationGroup:operationQueue:completionHandler:
_saveRecordZoneSubscriptionInOperationGroup:operationQueue:completionHandler:
_saveServerChangeToken:
_saveSettingsOperationGroup
_saveState
_saveTab:
_saveTabGroupsPrivateDatabaseSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveTabGroupsSharedDatabaseSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveTabsCompletion
_saveTabsError
_saveTabsOperationGroup
_saveUpdatedRecords:deletedRecordIDs:inDatabase:collection:operationGroup:completionHandler:
_savingQueue
_savingQueueSuspended
_scheduleHierarchyCheckTimer
_scheduleInitialManateeCloudTabFetchRetryXPCActivityRegisteringIfNeeded:
_scheduleMigrationRetryIfNeededInOperationGroup:completionHandler:
_scheduleMigrationRetryIfNeededInOperationGroup:externalCompletionHandler:
_scheduleOperation:inOperationGroup:operationQueue:
_scheduleRetryIfAbleWithOperationGroupForFetching:operationGroupForSaving:completionHandlers:
_scheduleSyncIfNeeded
_secondaryRecordZoneNamePrefix
_secondaryZoneNamesToRecordZoneIDs
_sendDetectedBugNotificationIfNeeded
_sensitiveStringIdentifiers
_serverChangeToken
_serverIDForBookmarkCreateIfNeeded:inCollection:
_serverSyncIDTypeForServerSyncID:
_setCloudExtensionStatesFromDictionaryRepresentation:cloudExtensionsRecordZoneID:
_setDatabaseSchemaVersion:
_setMetadataDataValue:forKey:
_setMetadataInt64Value:forKey:
_setNeedsAccountHashCheck
_setNeedsAccountPropertiesUpdate
_setPositionDictionaryRepresentation:inParentWithRecordID:forBookmark:inCollection:operationGroup:
_setServerChangeTokenInSQLiteStore
_setTabsFromWBSCloudTabDictionaryRepresentations:cloudTabsRecordZoneID:
_setUpEncryptionInfoInOperationGroup:withCompletionHandler:
_setUpEncryptionInfoInOperationGroup:withRetryManager:completionHandler:
_setUpPushConnection
_setUpRecordZoneIDsToPendingServerChangeTokens
_setUpRecordZoneInOperationGroup:withCompletionHandler:
_setUpRetryTimerToSetPresenceInTabWithRecordID:inOperationGroup:completionHandler:
_setUpSharingInRecordZoneWithID:collection:operationGroup:completionHandler:
_setUpSyncAgentInterfaceOnConnection:
_setUpTabGroupZoneForTabGroup:inCollection:operationGroup:completionHandler:
_setUpUnknownRecordIDsToPendingAuxiliaryRecordSetsInOperationGroup:
_settingStore
_settingsStore
_settingsSyncCoordinator
_settingsSyncEngine
_shareType
_sharedPresenceRecordDatabaseForTabRecordZone:
_sharedPresenceRecordNameForUserRecordID:
_sharedTabGroupsObserver
_shouldContinueSyncOperation
_shouldDeleteDatabaseForError:
_shouldPerformInitialSyncDown
_shouldPerformMigrationAfterUpgradingBookmarksDatabaseFromSafariVersion:
_shouldSync
_shouldUpdateExtensionStatesWhenSavingDevice
_sizeOfRecordUpdateBatch:
_sortedRecordNamesWithChildIDs:getLastPosition:
_sourceRecordIDsForRecordsMovedBetweenZones
_store
_stringForBookmarkType:
_stringForFolderType:
_subtitle
_suspendFetchingQueue
_suspendSavingQueue
_symbolName
_syncCoordinator
_syncCoordinatorDeterminationCompletionBlocks
_syncData
_syncDebugger
_syncDownHandler
_syncManagerWithStoreOwner:
_syncMigrationCoordinator
_syncObservers
_syncObserversToProxyObservers
_syncPhase
_syncRequirementsRecordID
_syncResultForError:
_syncing
_syncingCompletionHandlers
_tabCollection
_tabCollectionQueue
_tabCollectionSyncTimer
_tabGroupParticipantPositionRecordForBookmark:syncData:configuration:changeType:inCollection:
_tabGroupPresenceUpdater
_tabGroupRecordNamesWithPendingPresenceUpdate
_tabGroupSyncManager
_tabGroupsLog
_tabRecordIDFromTabUUID:inTabCollection:
_tabRecordNamesWithPendingPresenceUpdate
_tabSaveState
_tabs
_threadUnsafeBookmarkHashGenerator
_threadUnsafeBookmarksRecordZone
_threadUnsafeCurrentUserRecordID
_threadUnsafeDatabase
_threadUnsafeHashGenerator
_threadUnsafeIncludesMigrationRecordInSaveBatch
_threadUnsafeLocalStorage
_threadUnsafeMigrationStateRecord
_threadUnsafePrepareRecordZoneCompletionHandlers
_threadUnsafeSyncRequirementsRecord
_throttledScheduledUpdateTimer
_title
_topBookmarkFolderRequiresReordering
_topBookmarkRecord
_topic:matchesPushTopicForContainer:
_transactionForTimerToDelaySyncing
_transformedModifiedOrLocalValueForKey:isEncrypted:
_transitionCloudTabSyncCoordinatorToManateeState:completion:
_transitionToMigrationState:
_traverseBookmarksInDatabase:parentFolderID:bookmarksCount:foldersCount:details:
_tryToBecomeResponsibleForMigrationInCollection:operationGroup:completionHandler:
_tryToBecomeResponsibleForMigrationInOperationGroup:externalCompletionHandler:
_tryToBecomeResponsibleForMigrationWithRetryManager:inCollection:operationGroup:completionHandler:
_tryToBecomeResponsibleForMigrationWithRetryManager:inOperationGroup:externalCompletionHandler:
_tryToResumePendingRemoteMigrationFromMigrationInfo:inCollection:operationGroup:completionHandler:
_tryToResumePendingRemoteMigrationFromMigrationInfo:inOperationGroup:externalCompletionHandler:
_type
_unknownRecordIDsToPendingAuxiliaryRecordSets
_unsavedBookmarkFromLastBatch
_unsavedProcessedBookmark
_unsavedRecordFromLastBatch
_unsavedReparentedRecordNames
_updateAccountHashIfNeeded
_updateBookmark:inCollection:withRecord:configuration:
_updateBookmarkCollectionBookmark:inCollection:withRecord:configuration:
_updateBookmarkCollectionFolder:inCollection:withRecord:configuration:
_updateBookmarkWithRecord:
_updateCloudBookmarksSyncCoordinatorAfterUserAccountChange:
_updateCloudExtensionStatesFromStates:
_updateCloudExtensionsSyncCoordinatorAfterUserAccountChange:
_updateCloudSettingsSyncCoordinatorAfterUserAccountChange:
_updateCloudTabsSyncCoordinatorAfterUserAccountChange:
_updateDatabaseContainsCKShareRecordIfNeededInCollection:
_updateDevicePropertiesFromCloudExtensionDevice:
_updateGenerationsForAttributeKeys:withDeviceIdentifier:
_updateGenerationsForChange:withDeviceIdentifier:
_updateLocalBookmarkWithCKRecord:
_updatePresenceInTabIfNeededWithRecordID:inOperationGroup:isRetry:completionHandler:
_updateRecordParentAndPositionWithUpdater:
_updateRecordWithChange:updater:
_updateRecordWithMissingAttributesWithUpdater:
_updateRecordWithModifiedAttributes:updater:
_updateSQLiteStoreFromCloudKitAfterDeletingRecords
_updateSQLiteStoreFromCloudKitAfterSavingCloseRequest
_updateSQLiteStoreFromCloudKitAfterSavingExtensionState
_updateSQLiteStoreFromCloudKitAfterSavingTabs
_updateSQLiteStoreFromCloudKitCompletion
_updateSQLiteStoreFromCloudKitInOperationGroup:withCompletionHandler:
_updateTabCollectionBookmark:inCollection:withRecord:configuration:
_updateTabCollectionFolder:inCollection:withRecord:configuration:
_updateTabGroupsSyncCoordinatorAfterUserAccountChange:
_updateTabsFromCloudTabs:
_updatedContainerForPushTopic:
_updatedRecordsInPrivateDatabase
_updater
_userAccountDidChange:
_userDidUpdateBookmarkDatabase
_usesManateeContainer
_usesOpportunisticPushTopic
_uuidStringsOfTabsToDelete
_vacuumFailedWithError:
_valueForKey:ofType:fromRecord:withConfiguration:
_valueTransformerForComposedIdentifierDisplayNameAndAdamID
_valueTransformerForDeviceName
_valueTransformerForTabURL
_verifyHierarchyIntegrityInDatabase:
_verifySyncDataForItem:recordName:expectingSyncData:expectingCloudKitData:
_xpcListener
_zoneLogName
aa_altDSID
aa_primaryAppleAccount
absoluteString
acceptCloudKitShareWithMetadata:inOperationGroup:completionHandler:
acceptShareForURL:invitationTokenData:completionHandler:
acceptShareForURL:invitationTokenData:inOperationGroup:completionHandler:
acceptanceStatus
accountHash
accountInfoWithCompletionHandler:
accountPropertiesStore
accountStore
action
activeParticipantsDidUpdateInTabGroupWithUUID:
activeParticipantsDidUpdateInTabWithUUID:
addChildEvent:
addDeletedRecordID:
addDependency:
addEntriesFromDictionary:
addItem:
addItem:underFolderWithServerId:database:
addMovedBookmark:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOperation:
addParticipantsWithEmailAddresses:toShareInRecordZoneWithID:inOperationGroup:completionHandler:
addRecord:
addSyncObserver:
allObjects
allRecordIDs
allSyncingAttributesForBookmark:
allValues
allocWithZone:
allowsReverseTransformation
anyObject
appendEvent:
applicationBundleIdentifierOverrideForPushTopicGeneration
applyAllPendingReferencesWithUpdater:
applyPendingReferences:toItemWithRecordName:inDatabase:databaseAccessor:updater:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
attributeForKeyRequiresGeneration:
attributeRequiresEncryption
attributesMarkedAsModified:
authKitAccountWithAltDSID:
autorelease
auxiliaryRecordForKey:
auxiliaryRecordIDs
auxiliaryRecordIDsToDelete
backgroundImageAppearanceIsLight
backgroundImageExists
backgroundImageGeneration
beginDate
beginFolderMigrationInOperationGroup:completionHandler:
beginInitialSyncUpWithCompletionHandler:
beginMergingChangesWithDatabase:
beginMigratingAsPrimaryMigrator:inOperationGroup:willBeginMigrationHandler:withCompletionHandler:
beginMigrationFromDAV
beginMigrationInOperationGroup:completionHandler:
beginMigrationWithOperationGroup:completionHandler:
beginSavingReparentedBookmarksInOperationGroup:withRecordNames:lastKnownPositionInRoot:completionHandler:
beginSharingTabGroupWithUUID:completionHandler:
beginSharingTabGroupWithUUID:inOperationGroup:completionHandler:
beginSyncDownInOperationGroup:completionHandler:
beginSyncDownInOperationGroup:keepingRecordsMarkedAsDeletedLocally:completionHandler:
beginSyncingForTrigger:isLocalChange:completionHandler:
beginSyncingWithCompletionHandler:
beginSyncingWithOperationGroupForFetching:operationGroupForSaving:completionHandler:
bindData:atParameterIndex:
bindDouble:atParameterIndex:
bindInt64:atParameterIndex:
bindInt:atParameterIndex:
bindString:atParameterIndex:
bookmark
bookmarkConfiguration
bookmarkDatabaseAccessor
bookmarkFolderConfigurationWithType:
bookmarkHashGenerator
bookmarkIDForServerID:excludeDeletedBookmarks:
bookmarkIDWithSpecialID:
bookmarkLeafRecords
bookmarkListRecords
bookmarkStore
bookmarkType
bookmarkTypeForChange:
bookmarkTypeWithBookmark:
bookmarkWithServerID:excludeDeletedBookmarks:
bookmarkWithUUID:
bookmarksByVerifyingAndReparentingUnrootedBookmarksGetLastValidPositionInRootFolder:
bookmarksRecordZoneID
boolAtIndex:
boolForKey:
boolValue
canParseBookmark:
canParseChange:usingDatabaseAccessor:
canParseItem:usingDatabaseAccessor:
canParseRecordType:
canSaveIdentityHashAttributesInDictionary:
cancel
change
changeIsDAVMoveChange:
changeIsMoveChange:
changeToken
changeType
changeTypeForChange:
changedKeys
childEvents
childFolderRecordNamesForRecordName:
childRecordNamesForRecordName:
ckBookmarkSyncFinishedWithResult:error:
ckShortDescription
class
clearAllCKRecords
clearAllGenerationsExceptState
clearAllLastServerChangeTokens
clearAllReadingListArchives
clearAllSyncData
clearAllSyncDataWithDatabase:
clearCachedCloudSettingsRecordZone
clearCachedRecordZone
clearChangesForChangeRecords:lastSyncedRecordGeneration:
clearChangesWithChangeToken:database:
clearLocalDataIncludingMigrationState:completionHandler:
clearModifiedAttributes
clearReadingListArchiveWithUUID:
clearServerChangeToken
clearSyncDataAfterICloudKeychainReset
clearlAllLocalBookmarksForAutomatedTestingWithDatabase:
clientChangeTokenData
close
closeDatabase:shouldSave:
closeDatabaseAndSave:
closeDatabaseWithCompletionHandler:
cloudBookmarkConfigurations
cloudBookmarkForReparentedItemWithRecordName:inDatabase:databaseAccessor:updater:
cloudBookmarkItemConfigurationForRecord:
cloudBookmarkSyncMigrationSaveHandler:didDeleteBookmarkWithRecordName:
cloudBookmarkSyncMigrationSaveHandler:didMoveBookmark:
cloudBookmarkSyncMigrationSaveHandler:shouldApplyReference:withGeneration:toAttribute:inRecordWithName:
cloudBookmarkSyncMigrationSaveHandler:shouldSaveBookmark:
cloudBookmarkSyncMigrationSyncDownHandler:didDeleteBookmarkWithRecordName:
cloudBookmarkSyncMigrationSyncDownHandler:didMoveBookmark:
cloudBookmarkSyncMigrationSyncDownHandler:shouldApplyReference:withGeneration:toAttribute:inRecordWithName:
cloudBookmarkToMigrateItemWithRecordName:inDatabase:databaseAccessor:updater:
cloudBookmarkWithAddedRecord:configuration:inDatabase:databaseAccessor:updater:
cloudBookmarkWithChange:databaseAccessor:updater:
cloudBookmarkWithRecordName:inDatabase:databaseAccessor:updater:
cloudExtensionDeviceWithCKRecord:
cloudExtensionDeviceWithDeviceUUIDString:deviceName:lastModifiedDate:newTabPageComposedIdentifier:newTabPageSetByUserGesture:newTabPageLastModifiedDate:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
cloudExtensionDeviceWithDictionaryRepresentation:extensionSettingsDictionaryForDevice:cloudExtensionsRecordZoneID:
cloudExtensionSQLiteStoreStore:hadSevereError:
cloudExtensionStateWithCKRecord:
cloudExtensionStateWithComposedIdentifier:owningDeviceUUIDString:lastModifiedDate:containingAppAdamID:displayName:isEnabled:wasEnabledByUserGesture:iosAppBundleIdentifier:iosExtensionBundleIdentifier:macAppBundleIdentifier:macExtensionBundleIdentifier:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
cloudExtensionStateWithDictionaryRepresentation:composedIdentifier:owningDeviceUUIDString:cloudExtensionsRecordZoneID:
cloudExtensionStates
cloudExtensionStatesFromStatesDictionaryRepresentation:owningDeviceUUIDString:cloudExtensionsRecordZoneID:
cloudExtensionsRecordZoneID
cloudRemoteStore
cloudSettingSyncCoordinator:didDeleteRemoteRecordWithID:
cloudSettingSyncCoordinator:didReceiveRemoteCloudSettingsUpdateWithRecord:
cloudSettingSyncCoordinator:setPageZoomSyncData:forRecordName:completionHandler:
cloudSettingSyncCoordinator:storeRemoteCloudSettingsUpdateWithRecord:
cloudSettingsRecordZoneID
cloudTabCloseRequestWithCKRecord:
cloudTabCloseRequestWithTabUUIDString:tabURLString:destinationDeviceUUIDString:closeRequestUUIDString:encodedSystemFieldsData:cloudTabsRecordZoneID:
cloudTabCloseRequestWithWBSCloudTabCloseRequestDictionaryRepresentation:closeRequestUUIDString:cloudTabsRecordZoneID:
cloudTabDeviceWithCKRecord:
cloudTabDeviceWithDeviceUUIDString:deviceName:hasDuplicateName:isEphemeralDevice:lastModified:encodedSystemFieldsData:cloudTabsRecordZoneID:
cloudTabDeviceWithDictionaryRepresentation:deviceUUIDString:cloudTabsRecordZoneID:
cloudTabGroupConfigurations
cloudTabGroupSyncCoordinator:activeParticipantsDidUpdateInTabGroupWithUUID:
cloudTabGroupSyncCoordinator:activeParticipantsDidUpdateInTabWithUUID:
cloudTabGroupSyncCoordinator:didAddTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didChangeBackgroundImageInTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didChangeScopedFavoritesInSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didFetchRecentlyAcceptedSharedTabGroupWithUUID:acceptedShareDate:
cloudTabGroupSyncCoordinator:didNavigateInTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didReceiveChangesForUnhandledRecordZoneIDs:
cloudTabGroupSyncCoordinator:didRemoveTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:participants:didJoinSharedTabGroupWithUUID:
cloudTabGroupSyncCoordinator:participants:didLeaveSharedTabGroupWithUUID:
cloudTabGroupSyncManager:didFindChangesToRecordZonesWithIDs:
cloudTabGroupSyncManagerPCSIdentitiesDidChange:
cloudTabLocalStore
cloudTabLocalStore:hadSevereError:
cloudTabLocalStoreDidOpen:
cloudTabSyncArbiterDidChangeCloudKitContainer:
cloudTabSyncArbiterPCSIdentitiesDidChange:
cloudTabWithCKRecord:
cloudTabWithTabUUIDString:owningDeviceUUIDString:owningSceneID:position:title:urlString:isPinned:isShowingReader:readerScrollPositionPageIndex:encodedSystemFieldsData:cloudTabsRecordZoneID:
cloudTabWithWBSCloudTabDictionaryRepresentation:owningDeviceUUIDString:position:cloudTabsRecordZoneID:
cloudTabsRecordZoneID
code
collectAllRecordNames
collectDiagnosticsDataWithCompletionHandler:
collection
collectionConfiguration
collectionType
compare:
compare:options:
componentsJoinedByString:
composedIdentifier
configuration
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
container
containerIdentifier
containingAppAdamID
convertRecordsForMigration
copy
copyAccountHashWithDatabase:
copyAttributesWithItem:
copyChangeTokenWithDatabase:
copyChangedItemWithChange:
copyChangesWithDatabase:changeToken:
copyDeletedBookmarkSyncDataWithChange:
copyDeviceIdentifier
copyFirstServerIdInFolderWithServerId:database:
copyItemAtURL:toURL:error:
copyItemWithLocalID:database:
copyItemWithServerId:database:
copyLastServerIdInFolderWithServerId:database:
copyLocalIDsInFolderWithLocalID:database:
copyModifiedAttributesWithChange:
copyParentServerIdWithItem:
copySaveURLForAssetWithKey:item:
copyServerIdInFolderAfterServerId:database:
copyServerIdInFolderBeforeServerId:database:
copyServerIdWithChange:
copyServerIdWithItem:
copyServerIdsInFolderWithServerId:database:
copySyncDataWithItem:
copySyncKeyWithItem:
copyValueForKey:item:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAuxiliaryRecordDeletionEvent
createBookmarkWithType:database:
createCloudExtensionsRecordZoneInOperationGroup:completionHandler:
createCloudSettingsRecordZoneInOperationGroup:completionHandler:
createCloudTabsRecordZoneInOperationGroup:completionHandler:
createDatabase
createDatabaseWithoutLock
createFolderWithType:database:
createLegacyPlaceholderTabGroupBookmarksForSharedTabGroup:
createMigrationFromDAVOperationGroupWithXPCActivity:
createMigrationStateCheckOperationGroupWithXPCActivity:qualityOfService:
createOperationGroupWithName:qualityOfService:xpcActivity:
createOperationGroupWithName:useLargerExpectedSendSize:
createRecordZoneAndEncryptionInfoWithZoneName:inOperationGroup:completionHandler:
createSubscriptionRequestOperationGroupWithQualityOfService:xpcActivity:
createSyncDownEvent
createSyncUpEvent
currentConnection
currentTabServerIDPresenceForParticipant:getTabGroupServerID:
currentTabServerIDPresenceForParticipant:inTabGroupWithServerID:
currentUserParticipant
data
dataAtIndex:
dataForKey:
dataUsingEncoding:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
database:hadSevereError:
databaseAccessor
databaseCoordinator
databaseLockArbiterDidAcquireDatabaseLock:
databaseOpen
databasePath
databasePathForConfiguration:
databaseRef
databaseSyncData
databaseSyncDataInDatabase:databaseAccessor:
databaseURLForFilename:
dataclassEnabled
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultDatabaseURL
defaultManager
defaultOperationGroup
defaultTransformer
delegate
deleteBackgroundImageDirectory
deleteBackgroundImageFromCloudKitWithCompletionHandler:
deleteBookmark:leaveTombstone:
deleteBookmarksRecordBatch:inOperationGroup:clientChangeTokenData:completionHandler:
deleteBookmarksZoneInOperationGroup:completionHandler:
deleteCloudExtensionDevicesWithUUIDStrings:completionHandler:
deleteCloudExtensionStatesDatabaseWithCompletionHandler:
deleteCloudSettingsRecords:inOperationGroup:completionHandler:
deleteCloudSettingsZoneInOperationGroup:completion:
deleteCloudTabCloseRequestsWithUUIDStrings:completionHandler:
deleteCloudTabRecords:inOperationGroup:completionHandler:
deleteCloudTabsZoneInOperationGroup:completionHandler:
deleteCloudTabsZoneWithCompletionHandler:
deleteDatabaseAndSyncDataForAccountChange
deleteDatabaseWithCompletionHandler:
deleteDevicesWithUUIDStrings:completionHandler:
deletePerSiteSettingsSyncData
deleteRecordZonesWithIDs:inOperationGroup:perRecordZoneDeleteBlock:completionHandler:
deleteRecords:completionHandler:
deleteRecordsWithIDs:inDatabase:operationGroup:completionHandler:
deleteRecordsWithPrimaryKeys:completionHandler:
deleteSubscriptionWithID:inDatabase:operationGroup:withCompletionHandler:
deletedRecordIDs
deletedRecordIDsInPrivateDatabase
deletedRecordIDsInSharedDatabase
deletedRecordNames
deletedRecordZoneIDs
deletedRecordZoneIDsInPrivateDatabase
dependencies
description
descriptor
destinationDevice
destinationDeviceUUIDString
determineManateeStateWithCompletion:
deviceCount
deviceIdentifier
deviceIdentifierForPositionGenerator:
deviceName
deviceUUIDString
dictionary
dictionaryRepresentation
dictionaryRepresentationForRecord:withCoordinator:
dictionaryWithObjects:forKeys:count:
didAddTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeBackgroundImageInSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeScopedFavoritesInSharedTabGroupWithUUID:byParticipantWithRecordID:
didDeleteBookmarkWithRecordName:
didDeleteRemoteRecordWithID:
didFailToMigrateToCKBookmarksAsPrimaryMigrator:error:
didFetchRecentlyAcceptedSharedTabGroupWithUUID:acceptedShareDate:
didLocallyMoveBookmarkWithRecordName:
didNavigateInTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didReceiveIncomingMessageForSubscriptionID:withPushTopic:userInfo:
didReceiveLocalNotificationWithPushTopic:
didReceivePushNotificationWithTopic:userInfo:
didReceiveRecordWithNameFromServer:
didReceiveRemoteCloudSettingsUpdateWithRecord:
didRemoveTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didStartMigratingToCKBookmarksAsPrimaryMigrator:localState:remoteState:
didSuccessfullyMigrateToCKBookmarksAsPrimaryMigrator:
disabled
displayName
domain
doubleAtIndex:
doubleForKey:
doubleValue
duplicateHash
emailAddress
enableWAL:
enabledByUserGesture
encodeObject:forKey:
encodedBookmarkSyncData
encodedData
encryptedPositionAttributeValueTransformer
encryptionInfoRecordWithZone:
encryptionRecord
endowmentNamespaces
enumerateDescendantsOfBookmark:usingBlock:
enumerateKeysAndObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
expirationDate
fetch
fetchAllBookmarkRecordsWithCompletionHandler:
fetchBookmarkRecordsWithNames:withCompletionHandler:
fetchBookmarksRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchBookmarksZoneSubscriptionStatusCreatingZoneIfNeeded:inOperationGroup:withCompletionHandler:
fetchCachedRemoteMigrationInfoWithCompletionHandler:
fetchChangesSinceServerChangeToken:inDatabase:operationGroup:completionHandler:
fetchCloudExtensionsRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchCloudExtensionsZoneSubscriptionInOperationGroup:completionHandler:
fetchCloudSettingsChangesImmediately
fetchCloudSettingsRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchCloudSettingsZoneSubscriptionInOperationGroup:withCompletionHandler:
fetchCloudTabDevicesAndCloseRequests
fetchCloudTabsRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchCloudTabsZoneSubscriptionInOperationGroup:withCompletionHandler:
fetchDevicesWithCompletionHandler:
fetchEncryptionInfoWithCompletionHandler:
fetchEncryptionRecordsForZonesWithIDs:inDatabase:operationGroup:completionHandler:
fetchMetadataZoneRecordsInOperationGroup:withRecordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchMetadataZoneRecordsWithRecordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchMinimumSyncAPIVersionInOperationGroup:withCompletionHandler:
fetchNumberOfDevicesInSyncCircleInOperationGroup:completion:
fetchNumberOfDevicesInSyncCircleWithCompletionHandler:
fetchPrivateDatabaseSubscriptionStatusInOperationGroup:withCompletionHandler:
fetchRecordWithID:inDatabase:operationGroup:completionHandler:
fetchRecordZoneChangesInZonesWithIDs:perZoneConfigurations:inDatabase:operationGroup:recordWasChangedBlock:recordWithIDWasDeletedBlock:recordZoneFetchCompletionBlock:completionHandler:
fetchRecordsWithIDs:inDatabase:operationGroup:perRecordCompletionBlock:completionHandler:
fetchRemoteMigrationStateWithCompletionHandler:
fetchShareMetadataWithURL:invitationTokenData:inOperationGroup:completionHandler:
fetchShareRecordForRecordZoneWithID:inDatabase:operationGroup:completionHandler:
fetchSharedDatabaseSubscriptionStatusInOperationGroup:withCompletionHandler:
fetchSubscriptionWithID:inDatabase:operationGroup:withCompletionHandler:
fetchSyncedCloudTabDevicesAndCloseRequestsWithCompletionHandler:
fetchTabGroupEntitiesWithCompletion:
fetchUserIdentityInOperationGroup:withCompletionHandler:
fetchUserRecordIDWithCompletionHandler:
fieldForAttribute:
fields
fileExistsAtPath:isDirectory:
fileURLWithPath:isDirectory:
finishDecoding
finishMergingChangesWithDatabase:
fire
first
firstObject
fixRecoveredBookmarksIfNeeded
folderType
folderTypeForChange:
folderTypeWithFolder:
forwardingTargetForSelector:
generateDAVServerIDsForExistingBookmarksWithCompletionHandler:
generateEncryptedHashStringWithComponents:completionHandler:
generateHashStringWithComponents:
generateHashWithComponents:
generateIdentityHashWithComponents:
generatePositionBeforeFirstRecordInParentWithServerID:
generatePositionsForChildRecordNamesGroupedByParentFolders:
generateSyncPositionForBookmark:
generation
generationForKey:
generationKeyForField:
generationKeyForKey:
getAllPreferenceInformationForPreference:completionHandler:
getAppleAccountSecurityStateWithCompletion:
getCachedDevicesWithCompletionHandler:
getCloudExtensionStatesWithCompletionHandler:
getCloudSettingsContainerManateeStateWithCompletionHandler:
getCloudTabContainerManateeStateWithCompletionHandler:
getCloudTabDevicesWithCompletionHandler:
getCloudTabRemoteStoreWithCompletionHandler:
getCollaborationHighlightForURL:completionHandler:
getDeletedCloudKitSyncDataForRecordName:completionHandler:
getServerChangeTokenDataWithCompletionHandler:
getSyncDataForPreference:completionHandler:
getSyncDataForPreference:domain:completionHandler:
getUseManateeContainerForSyncingWithCompletionHandler:
handle
handlesRecordChangesToRecordZoneWithID:
hasDuplicateName
hasEntitlementForSensitiveOperationInCloudTabGroupSyncManager:
hasGenerationForKey:
hasPrefix:
hasSuffix:
hasUnappliedReferences
hasUndeletedRemovedBookmarks
hasUnverifiedMovedBookmarks
hash
hashGenerator
identifier
identityHashComponentsForRecord:
identityHashKeys
inMemoryDatabaseURL
includesMigrationRecordInSaveBatch
incrementGenerationForKey:withDeviceIdentifier:
incrementedGenerationWithDeviceIdentifier:
indexOfObject:
indexOfObject:inSortedRange:options:usingComparator:
indexOfObjectPassingTest:
init
initFolderWithParentID:collectionType:
initForReadingFromData:error:
initReadingListBookmarkWithTitle:address:previewText:
initRequiringSecureCoding:
initWithAccountStore:
initWithAccountStore:cloudExtensionStore:cloudExtensionSQLiteStore:
initWithAccountStore:collection:
initWithAccountStore:databaseCoordinator:
initWithBookmarkStore:
initWithBookmarkStore:collectionConfiguration:accountStore:
initWithBookmarkStore:database:databaseAccessor:accountPropertiesStore:
initWithBookmarkStore:databaseAccessor:migrationCoordinator:
initWithBookmarkStore:databaseAccessor:syncMigrationCoordinator:
initWithBookmarkStore:databaseCoordinator:accountStore:
initWithCKRecordZoneID:
initWithCKRecordZoneID:action:
initWithChange:deletedRecordZoneIDs:
initWithChange:deletedRecordZoneIDs:deletedRecordIDs:
initWithChange:deletedRecordZoneIDs:updatedRecords:deletedRecordIDs:
initWithChange:updatedRecords:
initWithChange:updatedRecords:deletedRecordIDs:
initWithCloudBookmarkStore:
initWithCloudRemoteStore:localStore:accountStore:
initWithCloudTabLocalStore:
initWithCollection:
initWithCollectionType:
initWithCollectionType:storeOwner:
initWithConfiguration:
initWithConfiguration:container:accountStore:
initWithConfiguration:container:accountStore:maintenanceActivity:
initWithConfiguration:openDatabase:
initWithContainer:
initWithContainerIdentifier:appleAccountInformationProvider:
initWithData:encoding:
initWithDatabase:databaseAccessor:
initWithDatabase:databaseAccessor:updater:
initWithDatabase:query:
initWithDatabase:query:error:
initWithDatabaseAccessor:
initWithDatabaseAccessor:database:
initWithDatabaseURL:
initWithDatabaseURL:cloudExtensionsRecordZoneID:
initWithDatabaseURL:cloudTabsRecordZoneID:
initWithDatabaseURL:databaseQueueLabel:
initWithDelegate:
initWithDeviceIdentifier:generation:
initWithDictionaryRepresentation:
initWithEncryptionInfoRecord:
initWithEnvironmentName:namedDelegatePort:queue:
initWithFileURL:
initWithFirst:second:
initWithHighlight:type:
initWithItemType:itemSubtype:recordType:knownKeys:identityHashKeys:keysWithoutGenerations:primaryCKRecordKeysToClear:primaryCKRecordKeysToSave:customAttributeGenerationKeys:attributeValueTransformers:identityHashValueTransformers:forRecordsPassingTest:
initWithKey:keyID:
initWithLog:
initWithMachServiceName:
initWithMigrationState:migratorDeviceIdentifier:serverModificationDate:
initWithObjectClass:
initWithObjectClasses:
initWithOwner:handlingQueue:
initWithParentPositionGenerator:
initWithRecord:action:
initWithRecordID:action:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordType:zoneID:
initWithRecordZoneID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithRootJSONObjectType:
initWithSet:
initWithSettingStore:accountStore:
initWithSharingInvitationData:shareURL:
initWithSubscriptionID:
initWithSubscriptionIDs:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithTabCollection:
initWithTitle:address:collectionType:
initWithTitle:address:parentID:subtype:deviceIdentifier:collectionType:
initWithType:container:localStorage:
initWithURL:queue:
initWithUUIDString:deviceOrCloseRequestDictionary:
initWithUserDefaults:type:
initWithZoneID:subscriptionID:
initWithZoneName:ownerName:
insertObject:atIndex:
int64AtIndex:
intAtIndex:
intValue
integerValue
interfaceWithProtocol:
intersectSet:
intersectsSet:
invalidate
invalidateCachedDataclassEnabledness
iosAppBundleIdentifier
iosExtensionBundleIdentifier
isCancelled
isCustomizationSyncEnabled
isDatabaseOpen
isDataclassEnabled
isDeleted
isDeletedRecordName:
isDeletingRecordZone
isDeviceToDeviceEncryptionEnabledForCloudTabGroupSyncManager:
isDuplicateOfBookmark:
isEmptyValue:
isEnabled
isEnabledForDataclass:
isEphemeralDevice
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToOrderedSet:
isEqualToSet:
isEqualToString:
isExpired
isFolder
isFull
isIdentityHashKey:
isInserted
isInternalInstall
isKindOfClass:
isMainThread
isMemberOfClass:
isPerSiteSettingSyncEnabled
isPinned
isPreferenceSyncable:
isReadableFileAtPath:
isReadingListFolder
isReadingListItem
isRunning
isSecondaryRecordZoneID:
isSelectedFavoritesFolder
isStartPageSettingSyncEnabled
isSyncEnabled
isSyncing
isValidJSONObject:
item
itemConfigurations
itemErrorFromError:forID:
itemSubtype
itemType
itemTypeForChange:
itemTypeWithItem:
itemWithServerIDIsFolder:
jsonArrayTransformer
jsonDictionaryTransformer
keyID
keysWithoutGenerations
knownKeys
lastErrorMessage
lastModified
lastModifiedDate
lastModifiedDateForNewTabPage
lastModifiedUserRecordID
lastObject
lastPathComponent
lastPrivateDatabaseServerChangeToken
lastReadGeneration
lastSelectedChildID
lastServerChangeTokenForRecordZoneID:
lastSharedDatabaseServerChangeToken
lastSyncedRecordGeneration
length
listener:shouldAcceptNewConnection:
loadCloudExtensionDataWithCompletionHandler:
loadCloudExtensionDeviceWithUUIDString:includeCloudExtensionStates:completionHandler:
loadCloudTabDataWithCompletionHandler:
loadCloudTabDeviceWithUUIDString:completionHandler:
localCloudKitMigrationState:
localMigrationState
localRecordGeneration
localStorage
localTimeZone
localizedDescription
localizedStandardCompare:
lockForClient:
lockSync
lookupInfo
lookupInfosWithEmails:
macAppBundleIdentifier
macExtensionBundleIdentifier
mainBundle
markAttributesAsModified:
markChildrenInFolderAsRead:
markSpecial:
metadata
migrateToCloudKitWithCompletionHandler:
migrationState
migrationStateKey
migratorDeviceIdentifier
minimumAPIVersion
minimumSyncAPIVersion
minusSet:
modificationDate
modifiedAttributeMask
modifiedAttributes
modifiedOrLocalValueForKey:
modifiedSyncingAttributesForBookmark:
modifyRecords:andDeleteRecordIDs:inDatabase:operationGroup:mergeHandler:completionHandler:
modifyRecords:inDatabase:operationGroup:mergeHandler:completionHandler:
monitorWithConfiguration:
moveBookmark:toFolderWithID:orderIndex:
moveBookmarksIntoPlace
movePresenceForParticipantToTabWithUUID:
movedRecordNames
mutableCopy
name
namesOfLocalRecordsToDelete
newTabPageSetByUserGesture
nextChangeAfterLocalRecordGeneration:
nextChangeID
nextChangeIDForPositionInPositionGenerator:
nextObject
notificationFromRemoteNotificationDictionary:
notifyForSaveOfAssetWithKey:item:
null
numberOfDeletedBookmarks
numberOfMovedBookmarks
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectClasses
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
observeRemoteMigrationStateForSecondaryMigration
openDatabase
openDatabase:
openDatabaseIfNecessary
openWithAccessType:error:
operationConfiguration
operations
orderIndexOfBookmark:withSyncPosition:inFolderWithID:
orderedSet
orderedSetWithArray:
orderedSetWithObject:
owningDevice
owningDeviceUUIDString
owningSceneID
parentID
parentRecordName
parentRecordNamesToMovedChildRecordNames
participants
participants:didJoinSharedTabGroupWithUUID:
participants:didLeaveSharedTabGroupWithUUID:
path
pcsIdentitiesDidChangeForCloudSettingSyncCoordinator:
performDatabaseUpdatesWithTransaction:secureDelete:
performDeduplicationWithDatabase:mode:
performHierarchyCheck
performInitialSyncDown
performMaintenance
performMaintenanceOnDatabase:afterVersion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistEvents
pinned
position
positionAttributeValueTransformer
positionBetweenPosition:andPosition:withDeviceIdentifier:changeID:
positionDictionaryRepresentation
positionForBookmarkWithRecordName:
positionForCloudBookmarkWithRecordName:
positionForItemWithRecordName:inDatabase:databaseAccessor:
positionForRecordName:
positionFromContentsOfData:
positionGenerator:positionForRecordName:
positionGenerator:recordNameOfBookmarksAfterRecordWithName:
positionGenerator:recordNameOfBookmarksBeforeRecordWithName:
positionTabAfterPosition:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
predicateMatchingBundleIdentifier:
previousServerChangeToken
primaryCKRecordGenerationKeysToClear
primaryCKRecordKeysToClear
primaryCKRecordKeysToSave
privacyPreservingDescription
privateCloudDatabase
processChanges
processIdentifier
propertyListWithData:options:format:error:
readerScrollPositionDictionary
readerScrollPositionPageIndex
readingListItemConfiguration
record
recordID
recordIDForParentSyncServerID:
recordIDsToRefresh
recordName
recordNameEnumerator
recordType
recordZoneID
recordZoneIDsToHashGenerators
recordZoneSubscriptionID
registerActivity
registerForPushNotificationsIfNeeded
registerMigrationXPCActivity:
registerSyncObserver:
registeredStateCollectorWithLogLabel:payloadProvider:
remoteObjectProxyWithErrorHandler:
removeAllCloudKitRecordsWithCompletionHandler:
removeAllObjects
removeAllSyncData
removeItemAtURL:error:
removeItemWithServerId:database:
removeLocalItemsForDeletedRecordNames
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInRange:
removeObserver:name:object:
removeParticipant:
removeParticipantsWithEmailAddresses:fromShareInRecordZoneWithID:inOperationGroup:completionHandler:
removePreferenceValueWithRecordName:completionHandler:
removePresenceForParticipant:inTabGroupWithServerID:
removeSyncObserver:
removeTombstoneWithRecordName:completionHandler:
removeUnusedPresenceRecords
reorderAllBookmarksUsingSyncPosition
reportErrorWithCode:statement:error:
requestUUIDString
reset
resetDeviceIdentifier
resetDeviceIdentifierForCloudKitWithCollectionType:
resetToDAVDatabaseWithCompletionHandler:
resetToNonMigratedStateInOperationGroup:completionHandler:
respondsToSelector:
resultFromMergingRecord:usingUpdater:
resultFromMergingRecord:usingUpdater:isLocalUpdateOnly:
resume
retain
retainCount
reverseTransformedValue:
reverseTransformedValueOrNull:
rootJSONObjectType
rootRecordName
rootRecordNameForSecondaryRecordZoneID:
safariTabCollectionConfiguration
safari_arrayByGroupingIntoArraysWithMaxCount:
safari_arrayForKey:
safari_bookmarksRecordZoneID
safari_boolForKey:
safari_browserDefaults
safari_cloudBookmarksContainer
safari_cloudBookmarksDefaults
safari_cloudExtensionDeviceRecord
safari_cloudExtensionStateRecord
safari_cloudKitPartialErrorForItemID:
safari_cloudSettingsContainer
safari_cloudTabCloseRequestRecord
safari_cloudTabDeviceRecord
safari_cloudTabRecord
safari_cloudTabsContainer
safari_containsCloudKitMissingZoneErrorForRecordZoneID:
safari_dataByCompressingData
safari_dataByDecompressingData
safari_dateForKey:
safari_defaultPositionUsingValueTransformer:
safari_deviceOSBuild
safari_deviceOSKind
safari_deviceOSVersion
safari_deviceOSVersionNumber
safari_deviceSoftwareBundleID
safari_deviceSoftwareVersion
safari_dictionaryByMappingObjectsAsKeysToObjectsUsingBlock:
safari_dictionaryByMappingObjectsToKeysUsingBlock:
safari_dictionaryForKey:
safari_encodedRecordData
safari_encodedSystemFieldsData
safari_encryptedValues
safari_encryptionInfoRecord
safari_ensureDirectoryExists:
safari_errorFromErrors:
safari_errorWithCloudBookmarksCode:userInfo:
safari_errorWithDomain:code:privacyPreservingDescription:
safari_firstObjectPassingTest:
safari_generationForKey:
safari_hasAtLeastOneChangedField
safari_hasOrContainsErrorWithCloudKitErrorCode:
safari_initWithEncodedRecordData:
safari_isAtomicWriteError
safari_isCloudExtensionDeviceRecord
safari_isCloudExtensionStateRecord
safari_isCloudKitBatchTooLargeError
safari_isCloudKitExpiredChangeTokenError
safari_isCloudKitInternalErrorWithCode:
safari_isCloudKitMissingZoneError
safari_isCloudKitNonExistentRecordError
safari_isCloudKitPartialFailureError
safari_isCloudKitWriteConflictError
safari_isCloudTabCloseRequestRecord
safari_isCloudTabDeviceRecord
safari_isCloudTabRecord
safari_isCouldNotOpenDatabaseError
safari_isEncryptionInfoRecord
safari_isInCloudBookmarksErrorDomain
safari_isInCloudKitErrorDomain
safari_isInPrivateDatabase
safari_isMetadataDevice
safari_isMigrationStateRecord
safari_isMigrationStateRecordChangedError
safari_isOrContainsCloudKitMissingManateeIdentityError
safari_isOrContainsCloudKitMissingZoneError
safari_isTabGroupSecondaryRecordZoneID
safari_isUnrecoverableCloudKitError
safari_isUserDeletedZoneError
safari_isVersionStringBetweenVersionString:andVersionString:
safari_isVersionStringGreaterThanVersionString:
safari_logDescription
safari_mapAndFilterKeysAndObjectsUsingBlock:
safari_mapAndFilterKeysUsingBlock:
safari_mapAndFilterObjectsUsingBlock:
safari_mapObjectsUsingBlock:
safari_matchesErrorDomain:andCode:
safari_matchesErrorDomainsAndCodes:
safari_migrationState
safari_migrationStateRecord
safari_minimumAPIVersion
safari_minimumSyncAPIVersion
safari_minimumUsingComparator:
safari_normalizedVersion
safari_numberForKey:
safari_operationGroupWithName:qualityOfService:xpcActivity:
safari_positionDictionaryRepresentationUsingValueTransformer:
safari_primaryAppleAccount
safari_privacyPreservingDescription
safari_recordName
safari_removeFileAtURL:error:
safari_safariApplicationPlatformBundleIdentifier
safari_setDefaultPosition:usingValueTransformer:
safari_setGeneration:forKey:
safari_setMigrationState:
safari_setMigratorDeviceIdentifier:
safari_setMinimumAPIVersion:
safari_setMinimumSyncAPIVersion:
safari_setObject:
safari_setPositionDictionaryRepresentation:usingValueTransformer:
safari_setState:
safari_startPageBackgroundImageFileURL
safari_startPageBackgroundImageFileURLForIdentifier:
safari_state
safari_stringByNormalizingVersionString
safari_stringForKey:
safari_substringFromPrefix:
safari_syncRequirementsRecord
safari_tabGroupRootRecordName
safari_tabGroupSecondaryRecordZoneIDWithRootRecordName:
safari_tabGroupsRecordZoneID
saveAssetAtURL:toURL:completionHandler:
saveAssetsIfNeededWithUpdater:
saveBackupOfDatabase:withName:
saveBookmark:
saveBookmark:incrementGenerations:
saveBookmarksRecordBatch:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
saveBookmarksZoneSubscriptionInOperationGroup:withCompletionHandler:
saveCloudExtensionDevices:extensionStates:completionHandler:
saveCloudExtensionsRecordBatch:createCloudExtensionsZoneIfMissing:inOperationGroup:completionHandler:
saveCloudExtensionsZoneSubscriptionInOperationGroup:completionHandler:
saveCloudPerSiteSettingWithDictionaryRepresentation:successCompletionHandler:
saveCloudSettingWithDictionaryRepresentation:successCompletionHandler:
saveCloudSettingsRecords:createCloudSettingsZoneIfMissing:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
saveCloudSettingsZoneSubscriptionInOperationGroup:withCompletionHandler:
saveCloudTabCloseRequestWithDictionaryRepresentation:closeRequestUUIDString:completionHandler:
saveCloudTabDevices:tabs:closeRequests:completionHandler:
saveCloudTabsRecordBatch:createCloudTabsZoneIfMissing:inOperationGroup:completionHandler:
saveCloudTabsZoneSubscriptionInOperationGroup:withCompletionHandler:
saveDatabase:
saveExtensionDeviceWithDictionaryRepresentation:completionHandler:
saveExtensionStatesWithDictionaryRepresentation:forDevice:completionHandler:
saveImageRecord:successCompletionHandler:
saveOrLoadRecord:inDatabase:operationGroup:completionHandler:
savePerSiteRecords:completionHandler:
savePerSiteSettingCloudKitRecordToDisk:completionHandler:
savePrivateDatabaseSubscriptionInOperationGroup:withCompletionHandler:
saveRecords:successCompletionHandler:
saveSharedDatabaseSubscriptionInOperationGroup:withCompletionHandler:
saveSubscription:inDatabase:operationGroup:withCompletionHandler:
saveTabsForCurrentDeviceWithDictionaryRepresentation:deviceUUIDString:completionHandler:
scheduleCloudBackgroundImageSaveWithURL:isLightAppearance:successCompletionHandler:
scheduleRetryIfNeededForError:usingBlock:
scheduleSyncIfNeeded
scheduledTimerWithTimeInterval:repeats:block:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheme
second
secondaryRecordZoneIDWithRootRecordName:
secondaryRecordZoneNamePrefix
secondaryZoneNameForBookmark:
securityLevelForAccount:
self
sendSyncDidFinishNotificationWithResult:
serverChangeToken
serverID
serverIDsInFolderWithServerID:
serverIDsInFolderWithServerID:excludeDeletedBookmarks:
serverModificationDate
setAccountHash:database:
setAddress:
setAtomic:
setAutomaticallyRetryNetworkFailures:
setAuxiliaryRecord:forKey:
setAuxiliaryRecordIDsToDelete:
setBeginDate:
setChildrenOrder:forFolderWithServerId:database:
setClientChangeTokenData:
setCloudExtensionStates:
setConfiguration:
setConfigurationsByRecordZoneID:
setContainer:
setContainsCKShareRecord:
setDatabase:
setDateAdded:
setDateLastViewed:
setDefaultConfiguration:
setDefaultOperationGroup:
setDelegate:
setDeletedBookmarkSyncData:change:
setDeviceIdentifier:
setDidExceedRetryTimeout:
setDidNotSaveRecordsAfterMigration:
setDisabled:
setDiscretionaryNetworkBehavior:
setEnabledTopics:ignoredTopics:opportunisticTopics:
setEndDate:
setEndowmentNamespaces:
setExpectedReceiveSize:
setExpectedSendSize:
setExportedInterface:
setExportedObject:
setFetchAllChanges:
setFetchDatabaseChangesCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
setFetchRecordZonesCompletionBlock:
setFetchShareMetadataCompletionBlock:
setFetchShareParticipantsCompletionBlock:
setFetchSubscriptionCompletionBlock:
setGeneration:
setGeneration:forKey:
setGroup:
setHandler:
setHashGenerator:forRecordZoneID:
setIncludesMigrationRecordInSaveBatch:
setItemConfigurations:
setLastPrivateDatabaseServerChangeToken:
setLastReadGeneration:
setLastSelectedChildID:
setLastServerChangeToken:forRecordZoneID:
setLastSharedDatabaseServerChangeToken:
setLastSyncedRecordGeneration:
setLocalCloudKitMigrationState:database:
setLocalMigrationState:
setLocalMigrationState:generateDeviceIdentifierIfNeeded:
setMetadata:
setMigrationState:
setMigrationStateEncodedRecordData:
setMinimumAPIVersion:
setMinimumSyncAPIVersion:
setMinimumSyncAPIVersion:completionHandler:
setModifiedAttributeMask:
setModifiedAttributes:item:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setName:
setNeedsAccountHashCheck
setNeedsDataclassEnabledCheck
setNotificationInfo:
setObject:forKey:
setObject:forKeyedSubscript:
setOwnerDidDeallocateBlock:
setPageZoomSyncData:forRecordName:completionHandler:
setParentRecordID:
setParticipantSelfRemovalBehavior:
setPerRecordCompletionBlock:
setPerRecordDeleteBlock:
setPerRecordSaveBlock:
setPerRecordZoneDeleteBlock:
setPerShareCompletionBlock:
setPerShareMetadataBlock:
setPerShareParticipantCompletionBlock:
setPermission:
setPinned:title:address:
setPosition:
setPositionDictionaryRepresentation:
setPredicates:
setPresenceInTabWithServerID:tabGroupWithServerID:forParticipant:
setPresenceToTabWithRecordID:inOperationGroup:completionHandler:
setPreviousServerChangeToken:
setQualityOfService:
setReadingListIconURL:
setRecord:
setRecordChangedBlock:
setRecordIDs:
setRecordIDsToDelete:
setRecordWasChangedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneIDs:
setRecordZoneIDsToDelete:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock:
setRecordZoneWithIDWasPurgedBlock:
setRecordZonesToSave:
setRecordsToSave:
setRemoteMigrationState:deviceIdentifier:inOperationGroup:completionHandler:
setResourceValue:forKey:error:
setRole:
setRootRecordName:
setSelectedFavoritesFolder:
setServerChangeToken:
setServerChangeTokenData:completionHandler:
setServerID:
setServerID:forBookmark:
setServerId:item:
setShareInvitationTokensByShareURL:
setShareMetadatas:
setShareURLs:
setShouldSendContentAvailable:
setState:
setStateChangeObserver:
setStateDescriptor:
setStoreOwner:
setSubscriptionIDs:
setSubscriptionIDsToDelete:
setSubscriptionsToSave:
setSubtitle:
setSymbolName:
setSyncData:forKey:
setSyncData:item:
setSyncKey:item:
setSyncPosition:
setSyncPosition:incrementGeneration:
setSyncState:
setSyncing:
setSystemSharingUIDidSaveShareBlock:
setSystemSharingUIDidStopSharingBlock:
setTabs:
setTimeout:
setTimeoutIntervalForRequest:
setTitle:
setTrackChanges:
setUnderlyingQueue:
setUpBookmarksRecordZoneCreatingIfNeeded:inOperationGroup:withCompletionHandler:
setUpSharingForRecordZoneWithID:inOperationGroup:completionHandler:
setUpdateHandler:
setUseManateeContainerForSyncing:completionHandler:
setUserIdentityLookupInfos:
setUsesOpportunisticPushTopic:
setValues:
setWantsNewInvitationToken:
setWithArray:
setWithObject:
set_cloudExtensionStoreError:
set_cloudTabStoreError:
set_database:
set_databaseQueue:
set_isBeingTornDown:
settingStore
share
shareDidUpdateForTabGroupWithUUID:
shareRecord
sharedCloudDatabase
sharedInstance
sharedLogger
shouldApplyReference:withGeneration:toAttribute:inRecordWithName:
shouldUpdatePresence
showingReader
size
sortUsingComparator:
sortedArrayUsingSelector:
standardUserDefaults
startCoordinatingMigrationInOperationGroup:completionHandler:
startMigrationIfNeeded
state
statement
staticSyncablePerSiteSettings
store
storeOwner
stringAtIndex:
stringByAppendingString:
stringForKey:
stringFromDate:timeZone:formatOptions:
stringWithFormat:
strongToStrongObjectsMapTable
subarrayWithRange:
subscriptionID
subtitle
superclass
supportsDeviceToDeviceEncryption
symbolName
symbolNameForRecordType:
syncCoordinator:didBeginSyncDownWithConfigurations:
syncCoordinator:didSendRecordBatch:deletedRecordIDBatch:
syncCoordinatorDidBeginDeletingAuxiliaryRecords:
syncCoordinatorDidBeginSyncUp:
syncCoordinatorDidFinishDeletingAuxiliaryRecords:
syncCoordinatorDidFinishSyncDown:
syncDataForBookmark:
syncDataWithContentsOfData:
syncDownSafariPerSiteSettingsSyncWithCompletion:
syncDownSafariSettingsSyncWithCompletion:
syncPosition
syncSetString:forKey:
syncSettingsUpDictionary
syncState
syncStringForKey:
syncUpSafariPerSiteSettingsSyncWithCompletion:
syncUpSafariSettingsSyncWithCompletion:
syncableBookmarksIDsInFolderWithBookmarkID:
tabGroupBookmarkConfiguration
tabGroupBookmarkFolderConfiguration
tabGroupConfiguration
tabGroupDatabaseAccessorWithStoreOwner:
tabGroupMaintenanceActivityDidFinish:
tabGroupTabConfiguration
tabGroups
tabSyncArbiter:containerUsingManatee:
tabURLString
tabUUIDString
tabWithUUID:
tabs
tearDown
timeIntervalSinceNow
timeIntervalSinceReferenceDate
title
topBookmarkRecord
topic
transformedValue:
transformedValueClass
transformedValueOrNull:
transformerForRecord:
triggerImmediateBackgroundImageSaveIfApplicable
triggerSafariTabGroupSync
type
unableToSilentlyMigrateToCKBookmarksWithReason:
unarchivedObjectOfClass:fromData:error:
uncopiedDataAtIndex:
unionSet:
unlockForClient:
unlockSync
unregisterSyncObserver:
unsignedIntegerValue
updateAccountHash:
updateAccountHashIfNeeded
updateContainsCKShareRecord
updateDatabaseSyncDataUsingBlock:
updateFromCloudExtensionDeviceWithoutUpdatingExtensionStates:
updateFromCloudExtensionState:
updateFromCloudTab:previousTabPosition:
updateFromCloudTabDevice:
updatePushTopicSubscriptions
updateSelectedFavoritesFolderWithBookmarkID:wasFavoritesFolder:isFavoritesFolder:
updateSyncDataForBookmark:usingBlock:
updateSyncDataForBookmarkWithRecordName:excludeDeletedBookmarks:usingBlock:
updateSyncDataGenerationsWithChange:databaseAccessor:updater:
updatedRecords
updatedRecordsInSharedDatabase
urlString
userAccountChanged
userAccountDidChange:
userDidAcceptCloudKitShareWithMetadata:completionHandler:
userDidUpdateBookmarkDatabase
userDidUpdateCloudTabGroupSyncManagerDatabase:
userIdentity
userInfo
userRecordID
username
usesManateeContainer
uuid
value
valueForEntitlement:
valueForKey:
valueForKeyPath:
valueTransformerForAttributeKey:
valueTransformerForAttributeKey:record:
valueTransformerForIdentityHashKey:
verifyAndReparentUnrootedBookmarksRememberingOriginalParents
verifyIdentityHashInBookmarkRecord:configuration:
wasEnabledByUserGesture
wasNewTabPageSetByUserGesture
wb_databaseOpenError
wb_lockError
wbsCloudTabCloseRequestDictionaryRepresentation
wbsCloudTabDeviceDictionary
wbsCloudTabDictionaryRepresentation
weakObjectsHashTable
writeToDatabase:databaseAccessor:
writeToURL:options:error:
zone
zoneID
Not updating push topic
Updating push topic subscriptions with sync enabled = %d
Using opportunistic push topic
Using normal push topic
Set up push connection
Failed to instantiate CloudKit extensions database
Fetching CloudExtensions zone subscription
Failed to fetch CloudExtensions zone subscription by ID with error: %{public}@
Successfully fetched CloudExtensions zone subscription
Saving CloudExtensions zone subscription
Bailing out from saving CloudExtensions zone subscription due to deallocation
Saving CloudExtensions zone subscription failed because of missing zone, attempting to create zone
Aborting save of CloudExtensions zone subscription because zone couldn't be created
Saving CloudExtensions zone subscription after creating zone
Saving record batch of size: %lu
Attempting to create CloudExtensions zone before retrying save
Retrying save after creating CloudExtensionsZone
No records to delete.
Deleting %lu records.
Grouping delete requests for %lu objects into %lu batches
Deleting records failed: %{public}@
Fetching record changes with server change token %{public}@.
Fetching all records.
Saving record batch with %lu records
Failed to save record due to unrecoverable error: %{public}@
Received batch too large error for an individual record change; bailing out
Failed to save record due to unexpected error: %{public}@
Failed to save record due to unexpected error outside the CKErrorDomain: %{public}@
Failed to save record due to CloudKit error which could not be handled: %{public}@
Batch record save operation completed but failed to save records due to unrecoverable error: %{public}@
Batch record save operation completed but bailing out from batch save due to previously cancelling the request
Batch record save operation completed but server rejected the smallest batch we can send; bailing out
All attempts at re-batching record save failed
Attempting to re-batch record save
Batch record save operation completed but we need to re-batch
Modify records operation failed due to deallocation with error %{public}@
Attempting to retry batch save request
Record batch save retry limit exceeded
Record changed: %@
Record of type %{public}@ deleted: <%@>
Bailing out from record fetch due to deallocation with error %{public}@
Record fetch retry limit exceeded
Fetch record changes failed: %{public}@
Fetch records from record zone operation completed for CloudExtensions record zone
Fetch record zone changes operation failed: %{public}@
Enqueuing request to fetch records from CloudExtensions record zone
Enqueuing %lu modify records operations
Creating CloudExtensions zone
Failed to create CloudExtensions zone with error: %{public}@
Bailing out of creating CloudExtensions zone due to deallocation
Retrying creation of CloudExtensions zone
Waiting to retry creation of CloudExtensions zone
Zone creation retry limit exceeded
Successfully created CloudExtensions zone
Attempting to save zone subscription for CloudExtensions zone
Error occurred deleting records, canceling dependent operations: %{public}@
Finished %@
Received PCS change notification with state %{public}@
Ignoring PCS state change notification because it is the same as the current state %ld
Updating PCS state in response to PCS change notification with state %{public}@
Received a push notification
Ignoring push notification because notification is nil
Ignoring push notification because sync is disabled
User account changed
Received account Added notification
Received account Modified notification
Received account Deleted notification
Failed to determine encryption state of cloud settings container because container isn't available
Failed to determine encryption state of cloud settings container: %{public}@
Cloud settings container %{public}@ support encryption
Not triggering sync since migration is in progress
*** Starting CloudKit bookmark sync for trigger: %{public}@
Transmitted Internet Records
*** CloudKit bookmark sync failed with result <%{public}@>: %{public}@
*** CloudKit bookmark sync finished with result: %{public}@
Attempting migration from DAV to CloudKit since we got back an explicit 'zone deleted' error
Sending notification of Bookmarks sync result: %ld
Fetching remote migration state
Simulating fetch of 'Unknown' migration state because Safari sync is disabled
Failed to fetch remote migration state: %{public}@
Fetched remote migration state: %ld
Asked to migrate, but bailing because migration is suppressed by the cycler
Bailing out from migration since migration was already in progress
Failed to generate Per-Site Settings record name with error: %{public}@
Failed to generate a CKRecord with the sync data for preference: %{sensitive, mask.hash}@ and domain: %{sensitive, mask.hash}@
Failed to archive dictionary[WBSCloudPerSiteSettingValue] NSDictionary: %{public}@
*** Per site settings initial fetch failed with result <%ld>: %{public}@
*** Per Site settings initial fetch finished with result: %ld
Failed to load permissions from preferences database for %{private}@
Safari's per-site settings have been updated in CloudKit
*** Cloud settings initial fetch failed with result <%ld>: %{public}@
*** Cloud settings initial fetch finished with result: %ld
Beginning to fetch %lu tab group entities for focus
Mapping tab group UUID %{public}@ to title %{sensitive, mask.hash}@
Connection to bookmarks sync agent by %d was denied: Missing entitlement
Ignoring push notification %{public}@ because it does not match any known push topic
Push notification %{public}@ comes from a container that is used by multiple sync coordinators
Attempting to sync Bookmarks in response to a subscription push notification
Attempting to sync Cloud Settings in response to a subscription push notification
Attempting to sync Tab Groups in response to a subscription push notification
Attempting to sync Cloud Tabs in response to a subscription push notification
Ignoring push notification %{public}@ because it does not match any known subscription
Reached maximum delay before forcing a sync after a push notification
Ignoring attempt at checking database changes since a request is already running - container: %{public}@
Beginning fetch database change operation for container with identifier: %{public}@, server change token: %{public}@
recordZoneChangedBlock for zone ID: %{public}@
Bookmarks zone changed
Tab Groups zone changed
Cloud Tabs zone changed
Cloud Settings zone changed
Cloud Extensions zone changed
recordZoneChangedBlock did not handle zone ID: %{public}@
Failed to fetch database changes for container: %{public}@ with error: %{public}@
Did finish fetching database change operations for container with identifier: %{public}@, new server change token: %{public}@
Attempting to sync Bookmarks in response to a push notification after checking container zones
Attempting to sync Tab Groups in response to a push notification after checking container zones
Attempting to sync CloudKit Tabs in response to a push notification after checking container zones
Attempting to sync settings in response to a push notification after checking container zones
Attempting to sync extension state in response to a push notification after checking container zones
Fetching Bookmarks zone subscription status failed with error: <%{public}@>.
Bookmarks zone subscription already exists
Saving Bookmarks zone subscription failed with error: <%{public}@>.
Saving Bookmarks zone subscription succeeded
Fetching CloudTabs zone subscription status failed with error: <%{public}@>.
CloudTabs zone subscription already exists
Saving CloudTabs zone subscription failed with error: <%{public}@>.
Saving CloudTabs zone subscription succeeded
Ignoring request to sync/migrate because migration is in progress
Ignoring request to sync/migrate because sync is in progress
Will attempt sync/migration in response to trigger: %{public}@
Fetching remote migration state since we tried syncing while not locally migrated
Did receive Cloud Tabs update notification
Notifying Safari of iCloud Tabs changes in response to a push notification
Retrying initial CloudTab fetch
Finished initial CloudTab fetch with error %{public}@
Fetching CloudSettings zone subscription failed due to deallocation
Fetching CloudSettings zone subscription status failed with error: <%{public}@>.
CloudSettings zone subscription already exists
Saving CloudSettings zone subscription failed due to deallocation
Saving CloudSettings zone subscription failed with error: <%{public}@>.
Saving CloudSettings zone subscription succeeded
Ignoring request to sync because sync is in progress
Safari Settings syncing is disabled. Cloud settings sync aborted
*** Starting Cloud settings sync for trigger: %{public}@
*** Cloud settings sync failed with result <%ld>: %{public}@
*** Cloud settings sync finished with result: %ld
Notifying Safari of extension state changes in response to a push notification
Fetching CloudExtensions zone subscription failed due to deallocation
Fetching CloudExtensions zone subscription status failed with error: <%{public}@>.
CloudExtensions zone subscription already exists
Saving CloudExtensions zone subscription failed due to deallocation
Saving CloudExtensions zone subscription failed with error: <%{public}@>.
Saving CloudExtensions zone subscription succeeded
Received container change callback. Registering for a new zone subscription
*** Migration to CloudKit started
Checking In xpc activity with identifier %{public}s
Checked In xpc activity with identifier %{public}s
An activity with identifier %{public}s is already scheduled
No prior %{public}s activity was found. Registering a new one
No prior %{public}s activity was found and registration is not requested
Every CloudKit subscription registration succeeded or we were already subscribed
Failed to register for subscriptions to these services: %{public}@
No need to register for CloudKit subscriptions because a registration is in progress
Registering for CloudKit subscriptions xpc activity. Register if needed: %d, ignore ongoing registration: %d delay: %lld, last successful registrations: %{public}@, remaining subscriptions to register: %{public}@
Attempting to save %{public}@ subscriptions
Not attempting to register CloudKit subscriptions because syncing is not available for account: %{private}@
Attempting to register CloudKit subscriptions for account: %{private}@
Registering %{public}@ subscription succeeded or we were already subscribed
Registering %{public}@ subscription failed with error: <%{public}@>
Checking remote migration state for a chance to migrate as a secondary device
Remote migration state is set to finished; determining if secondary device migration can proceed
Attempting to migrate as secondary device
Not proceeding with migration because there is already an ongoing migration
Not proceeding with migration because this device was the primary migrator
No device has migrated yet; continuing to periodically check the remote migration state
Unsupported remote migration state returned; stopping the periodic remote migration check
Registering migration XPC activity
CloudKit bookmarks migration activity is running
Attempting to migrate to CloudKit
*** Migration to CloudKit finished with status: %d
Fetching TabGroups private database subscription status failed with error: <%{public}@>.
TabGroups database private subscription already exists
Saving TabGroups private database subscription failed with error: <%{public}@>.
Saving TabGroups private database subscription succeeded
Fetching TabGroups shared database subscription status failed with error: <%{public}@>.
TabGroups shared database subscription already exists
Saving TabGroups shared database subscription failed with error: <%{public}@>.
Saving TabGroups shared database subscription succeeded
Ignoring request to sync TabGroups because sync is in progress
Scheduling a discretionary tab groups sync
Scheduling an immediate tab groups sync
Retry tab groups sync because running outside of XPC activity failed.
Will attempt tab group sync in response to trigger: %{public}@
Ignoring request to sync TabGroups for manager %{public}@ with trigger %{public}@ because the database does not exist yet
CloudTabGroupSyncManager did find changes for zoneIDs: %{public}@
Attempting to sync CloudKit Tabs in response to CloudTabGroupSyncManager detecting changes in CloudTabs record zone
Did detect an issue while syncing related to <rdar://%{public}@>
Did detect an issue while syncing with no corresponding bug IDs
Attempted to post detected syncing bug notification without bug IDs
Posting detected syncing bug notification with bug IDs: <rdar://%{public}@>
Hierarchy check failed, please run sysdiagnose
Asking the position for the root record makes no sense
Unknown item with record name: %{public}@
Item with record name does not have sync data: %{public}@
%{public}s Unknown item type
Creating CloudBookmark to update locally with record name: %{public}@
Unknown item for reparenting with record name: %{public}@
%{public}s Unknown item type %{public}@
Attempting to migrate record with name %{public}@ that does not exist in the local database.
%{public}s Unknown item type %ld
Delete change %{private}@ to update does not have a valid record
Could not decode sync data in deleted change %{private}@ to update with record name: %{public}@.
No record object found in decoded sync data of deleted change %{private}@ to update with record name: %{public}@.
Updating state generation of deleted record with name: %{public}@, generation: %{public}@
Unknown type %ld for change %{private}@
Cannot find configuration for change with type %{public}@ for bookmark %{public}@
Change of type %{public}@ for bookmark %{public}@ of type %{public}@ given without an associated item
Expecting CKBAItemTypeBookmark type for local item %p, but got %ld
Expecting CKBAItemTypeBookmark type for local item %{private}@, but got %ld
Expecting %{public}@ type for local bookmark item %p, but got %ld
Expecting %{public}@ type for local bookmark item %{private}@, but got %ld
Expecting CKBAItemTypeFolder type for local item %p, but got %ld
Expecting CKBAItemTypeFolder type for local item %{private}@, but got %ld
Expecting %{public}@ folder type for local folder item %p, but got %ld
Expecting %{public}@ folder type for local folder item %{private}@, but got %ld
%{public}s Unknown CKRecord type %{public}@
Updating references for the root record makes no sense
Could not find item with record name %{public}@ in database to apply pending references %{public}@
Cannot find configuration for item with record name: %{public}@ to apply pending references %{public}@
Local record with record name %{public}@ to reparent does not have a CKRecord stored in its sync data %{public}@
Reparenting record with record name: %{public}@
%{public}s Unknown item type for record name %{public}@
Delete change of type %{public}@ given without a Server ID
Assigning new record with record name %{public}@ to locally modified item, this could create an empty record on the server
Assigning new record with record name %{public}@ to locally added item
Deleted bookmark change %{private}@ does not have a valid record name.
Ignoring Delete Change object for built-in record with name: %{public}@.
Deleted bookmark change with record name %{public}@ does not have a CKRecord attached to it
Preparing record with name %{public}@ to mark as deleted on the server with generation: %{public}@
Encountered an item with no record name; ignoring it
CKRecord %{private}@ with invalid record name was received; ignoring it
Creating %{public}@ record with name %{public}@ to add locally with parent: %{public}@ and position: %{public}@
Creating %{public}@ record with name %{public}@ to add locally with parent: %{public}@
Remote record is missing generation for its parent and position fields
Local record to migrate %p has an invalid record name even though it should have one at this point
Local record to migrate %{private}@ has an invalid record name even though it should have one at this point
Creating %{public}@ to complement saved record with name: %{public}@
Migrated record %{public}@ known to the server has no position!
Creating %{public}@ to migrate record unknown to the server with name: %{public}@
Preparing %{public}@ record with name: %{public}@ for change of type %{public}@ to save to the server with updated keys: <%{public}@>
Attributes <%{public}@> are not included in the set of modified attributes to update the CKRecord despite being used to update the generation
Attributes <%{public}@> are included in the set of modified attributes to update the CKRecord despite not being used to update the generation
Trying to read the value for a key on a record that was deleted locally. Record name: <%{public}@>, key: %{public}@.
Trying to read the value for a key even though the key was not modified locally in record. Record name: <%{public}@>, key: %{public}@.
Trying to read the transformed value for a key on a record that was deleted locally. Record name: <%{public}@>, key: %{public}@.
Trying to read the transformed value for a key even though the key was not modified locally in record. Record name: <%{public}@>, key: %{public}@.
Trying to read the value of ParentFolder on a record whose parent was not updated locally. Record name: <%{public}@>.
Trying to read the value of ParentFolder on a record that was deleted locally. Record name: <%{public}@>.
Trying to read the value of IdentityHash on a record whose Title or URL was not updated locally. Record name: <%{public}@>.
Trying to read the value of IdentityHash on a record that was deleted locally. Record name: <%{public}@>.
Saving record with name %{public}@ locally
Loading known keys <%{public}@> from remote record with name: %{public}@
Update generations of record %{public}@ with change of type %{public}@, updated keys <%{public}@>
Attributes <%{public}@> no longer need update despite those changes from a previous update not being validated
Record name: %{public}@, setting parent: %{public}@, generation: %{public}@, position: %{public}@
Non-built-in record with name %{public}@ does not have a position
Updating locally modified attributes <%{public}@>
%{public}@ attribute should have been saved during primary migration but has no generation locally.
Cannot save identity hash attributes since the local record is incomplete.
Did apply reference %{public}@ generation: %{public}@ to attribute %{public}@ of record name: %{public}@
Will merge local and remote records. Record name: %{public}@
Did finish merging local and remote records with record name: %{public}@ due to state changes. Result: %{public}@
Parent and position were updated locally but were not saved to the server
Merging local and remote record fields.
No merging needed for key: %@ with local generation: %@, remote generation: %@
Attribute <%{public}@> expected to be saved to the server has an empty generation
Copy remote value into local record for key: %{public}@ with local generation: %{public}@, remote generation: %{public}@
Copy local value into remote record for key: %{public}@ with local generation: %{public}@, remote generation: %{public}@
Attribute %{public}@ was updated locally but was not saved to the server
Update IdentityHash on remote record.
Update local and remote generations.
Did finish merging local and remote records with record name: %{public}@. Result: %{public}@
Merging parent and position for record Name: %{public}@, local and remote generations are equal: %{public}@
Merging parent and position into local record for record Name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Merging parent and position into remote record for record Name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Did finish merging local and remote records with record name: %{public}@. Local record will be deleted because its minimum API version %ld is higher than the API version %ld supported by this client.
Merging minimum API version for record name: %{public}@, local and remote generations are equal: %{public}@
Local and remote minimum API versions differ, even though generations are the same. Record name: %{public}@.
Merging minimum API version into local record for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Merging minimum API version into remote record for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Local and remote state generations are equal even though their states are different. Local Deleted: %ld, generation: %{public}@, Remote Deleted %ld, generation: %{public}@
Server previously told us the record was deleted, now it is undeleted. Mark the record %{public}@ as moved and continue merging: local generation: %{public}@, remote generation: %{public}@
Local record needs to be undeleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Local record needs to be deleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Remote record needs to be deleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Remote record needs to be undeleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Both local and remote records are deleted but remote record state generation needs to be updated for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Both remote and local records are deleted and remote generation does not need to be updated for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Local and remote records are not deleted and have equal generations: %{public}@.
Updating local state generation for record Name: %{public}@, local state generation: %{public}@, remote state generation: %{public}@
Updating remote state generation for record Name: %{public}@, local state generation: %{public}@, remote state generation: %{public}@
BAChange %{private}@ is neither a folder change or a bookmark change
Failed to get extensions database URL, falling back to in-memory database
User account changed for extension syncing
Deleting the CloudExtensions database
Saving extension state for the current device to CloudKit
Could not create device for saving extension states from dictionary %{private}@
Saving current device excluding extension states to CloudKit
Could not create device for saving from dictionary %{private}@
Stopping save of extension state for current device
Merging device with existing device in SQLite database, if necessary
Severe SQLite store error occurred while merging device with existing device: %{public}@
Merging device and extension states into existing device from SQLite database
Merging device into existing device from SQLite database
No existing device found in SQLite database
Saving device to CloudKit
Done saving device to CloudKit
Saving extension state record batch of size: %lu
Did fail to save extension state record batch with error: %{public}@
Finished saving extension state record batch
Deleting obsolete extension state records from CloudKit
No obsolete extension state records need to be deleted from CloudKit
Failed to delete obsolete extension state records with error: %{public}@
Done deleting obsolete extension state records from CloudKit
Updating SQLite store from CloudKit after saving extension state
Updating SQLite store from CloudKit after saving extension state failed with error: %{public}@
Done updating SQLite store from CloudKit after saving extension state
Finished saving extension states for the current device to CloudKit
Fetching extension state data from CloudKit
Stopping fetch of extension states
Deleting database and restarting fetch
Reading server change token from SQLite
Finished reading server change token from the SQLite database
Severe SQLite store error occurred while reading server change token: %{public}@
Failed to read from server change token data: %{public}@
Failed to decode server change token with exception: %{public}@
Found server change token data in the SQLite database
Found server change token data in the SQLite database, but couldn't unarchive it
Found server change token data in the SQLite database, but couldn't unarchive it, even after deleting the database
No server change token found in the SQLite database
Fetching changes from CloudKit
Failed to fetch changes with error: %{public}@
Attempting to create CloudExtensions zone before retrying fetch
Finished fetching changes from CloudKit
Fetching changes from CloudKit again after creating CloudExtensions zone
Failed to create CloudExtensions zone when fetching changes with error: %{public}@
No records to delete from SQLite
Removing %lu deleted records from SQLite
Severe SQLite store error occurred while deleting records: %{public}@
Finished removing deleted records from SQLite
No modified devices or extension states to save to SQLite
Saving %lu device records and %lu extension state records to SQLite
Severe SQLite store error occurred while saving records: %{public}@
Failed to save modified device and extension state records to the SQLite database with error: %d
Finished saving modified device and extension state records to the SQLite database
Saving server change token to SQLite
Failed to archive server change token: %{public}@
Severe SQLite store error occurred while saving server change token: %{public}@
Failed to save server change token to SQLite with error: %d
Done saving server change token to SQLite
Skipping loading devices and extension states from SQLite
Loading devices and extension states from SQLite
Severe SQLite store error occurred while loading records: %{public}@
Finished loading devices and extension states from SQLite
Finished fetching extension data from CloudKit
Fetched an invalid extension device record from CloudKit
Fetched an invalid extension state record from CloudKit
Fetched an unrecognized record from CloudKit of type %{public}@
Deleting extension devices from CloudKit
No extension devices to delete
Stopping deletion of extension device records
Deleting extension device records from CloudKit
Failed to delete extension device records with error: %{public}@
Done deleting extension device records from CloudKit
Updating SQLite store from CloudKit after deleting extension device records
Updating SQLite store from CloudKit after deleting extension devices failed with error: %{public}@
Done updating SQLite store from CloudKit after deleting extension device records
Finished deleting extension device records from CloudKit
Severe SQLite store error: %{public}@
Extension syncing not available because user is not signed in
Extension syncing not available because Safari's dataclass isn't enabled
Could not create extension state dictionary when getting extension states from CloudExtensionState %{private}@
Migration state: %ld, expect DAV IDs: %d, expect CloudKit IDs for all records: %d, expect parsable sync data: %d
Checking record with local ID: %{public}@, server ID: %{public}@, item type: %ld, subtype: %ld
Record does not have a server ID even though we expect all records to have one!
Record has a BookmarkDAV ID even though no record should have one!
Record has a CloudKit ID even though no record should have one!
Regular folder has built-in record name: %{public}@, shouldn't!
Built-in folder with type %ld, has invalid record name: %{public}@, expecting: %{public}@
Record has sync key even though migration began.
Item contains sync data even though it should not!
Record has ID %{public}@ but has no sync data!
Item contains sync data that cannot be parsed as CloudKit sync data!
CKRecord in item has a different record name %{public}@ from record name of the item: %{public}@
Record type %{public}@ of CKRecord in item does not match the expected BookmarkLeaf type.
Record type %{public}@ of CKRecord in item does not match the expected BookmarkList type.
CKRecord in item was never saved to the server despite being saved locally.
Sync data has no position stored despite its CKRecord being saved locally.
Sync data has no generation for its parent and position despite having saved sync data.
Sync data has no generation for its folder title and identity hash despite having saved sync data.
Sync data has no generation for its folder title, URL, and identity hash despite having saved sync data.
Checking account hash
Storing account hash
Account hash matches
Needs dataclass enabled check
Needs account hash check
 Successfully updated presence to tabRecordID: %{public}@, %{public}@
 Failed to update presence to tabRecordID: %{public}@, %{public}@
 Cancelling updating presence to tabRecordID: %{public}@, %{public}@
 Starting updating presence to tabRecordID: %{public}@, %{public}@
UserRecordID is already cached
Successfully cached UserRecordID
Could not cache UserRecordID, the user has probably not interacted with the server or it is not possible to communicate with the serve, giving up, error: %{public}@
Could not fetch current private presence record with error: %{public}@
Presence update not needed because the old and new presence are both nil
Private presence record is missing, create it
Presence record is still locked after retry; giving up
Will fetch shared presence for heartbeat update for tabRecordID: %{public}@
Could not fetch current shared presence record with error: %{public}@
Failed to prolong lifetime of shared presence record for tabRecordID: %{public}@, error: %{public}@
Did prolong lifetime of shared presence record for tabRecordID: %{public}@
Failed to prolong lifetime of shared presence record for tabRecordID: %{public}@ because it was updated before we could save it
Attempting to acquire update presence lock with ID: %{public}@
Did acquire lock to update presence
Could not update presence record with error: %{public}@
Failed to acquire the lock again after a retry, the presence record was changed after we got the previous copy, give up.
Failed to acquire the lock again, the presence record was changed after we got the previous copy, try again later.
The presence lock is too old, we are going to try to steal it.
No previous presence record to delete
Deleting previous presence record with ID: %{public}@ to tab: %{public}@
Failed to delete previous presence record with ID: %{public}@, error: %{public}@
Did delete old presence record with ID %{public}@
No need to create a new shared presence record
Did successfully create shared presence record.
Shared presence record already exists, it must have been added somewhere else. Attempt to release the lock.
Failed to create shared presence record, error: %{public}@
Releasing update presence lock with ID: %{public}@
Did successfully release lock private presence record.
Lock private presence record was modified while updating presence, the lock was probably taken away from this device.
Failed to release lock private presence record, error: %{public}@
JSON data could not be decompressed.
JSON data could not be parsed
Unexpected JSON root type, expecting: %{public}@ instead got: %{public}@
Could not save asset with url %{sensitive, mask.hash}@ error: %{public}@
Failed to read from cloud bookmark transformed value data: %{public}@
Failed to decode encrypted data with exception: %{public}@
Cannot verify identity hash of CKRecord with name %{public}@ because its minimumAPIVersion %ld is more recent than the version %ld of the client.
Valid identity hash for remote record with name: %{public}@, key: %{public}@, keyID: %{public}@, identityHash: %{public}@, components: %{private}@
Identity hash is invalid for remote record with name: %{public}@, key: %{public}@, keyID: %{public}@, identity hash actual: %{public}@, expected: %{public}@
Identity hash is invalid for remote record with name: %{public}@, key: %{public}@, keyID: %{public}@, identity hash actual: %{public}@, expected: %{public}@, components: %{private}@
Failed to instantiate CloudKit settings database!
Record changed: %{private}@
Record of type %{public}@ deleted: <%{public}@>
Fetch records from record zone operation completed for record zone %{public}@
Enqueuing request to fetch records from record zone %{public}@
Number of device in sync circle is 0
Saving CloudSettings zone subscription
Bailing out from saving CloudSettings zone subscription due to deallocation
Saving CloudSettings zone subscription failed because of missing zone, attempting to create zone
Aborting save of CloudSettings zone subscription because zone couldn't be created
Saving CloudSettings zone subscription after creating zone
Attempting to save zone subscription for zone: %{public}@
Saving CloudSettings record
Attempting to create CloudSettings zone before retrying save operation
Retrying save operation after creating CloudSettingsZone
Will save merged record
Will retry save with updated batch after error: %{public}@
Retrying save operation
Received batch too large error for an individual record change, bailing out
Attempting to retry save request
Record save retry limit exceeded
Error occurred when deleting records: %{public}@
Clearing cached CloudSettings record zone
Deleting CloudSettings zone
Fetching CloudSettings zone subscription
Failed to fetch CloudSettings zone subscription by ID with error: %{public}@
Successfully fetched CloudSettings zone subscription
Creating CloudSettings zone
Failed to create CloudSettings zone with error: %{public}@
Bailing out of creating CloudSettings zone due to deallocation
Retrying creation of CloudSettings zone
Waiting to retry creation of CloudSettings zone
Successfully created CloudSettings zone
Failed to set up CloudSettings encryption info with error: %{public}@
Successfully set up CloudSettings encryption info
Attempting to save/load record
Successfully saved/loaded record
Failed to save/load record with error: %{public}@
Creating encryption record
Attempting to save/load encryption record
Failed to save/load encryption record due to unrecoverable error: %{public}@
Failed to save/load encryption record due to unexpected and unrecoverable write error: %{public}@
Record zone disappeared while setting up encryption information; bailing
Bailing out from encryption record setup due to deallocation
Encryption record retrieval retry limit exceeded
Moving record %{public}@ into parent record %{public}@
Missing parent record name for bookmark with name %{public}@. Reparenting to root.
Marking record name %{public}@ as moved locally
Attempted to delete built-in record with name: %{public}@, ignoring
Marking record name %{public}@ as deleted
Could not insert record with name %{public}@ in root folder!
Built-in bookmark folder with record name: %{public}@ was moved to parent with record name: %{public}@ instead of root
Could not insert record with name %{public}@ in built-in folder %{public}@!
Could not insert record with name %{public}@ in temporary folder!
Trying to move existing record with name %{public}@ into parent folder %{public}@ but the record does not exist locally!
Creating built-in folder with record name: %{public}@
The temporary folder contains %ld records that were not marked as deleted or moved to their final location. Record names: %{public}@
Record with name %{public}@ does not have a parent even though it was checked right before
Failed to insert %{public}@ into the root folder and for some reason the parent folder does not exist or creates a cycle!
Did finish checking hierarchy consistency, will move remaining records into their final location
Will move record %{public}@ into parent %{public}@
Could not move %{public}@ into folder %{public}@ even though all cycles and broken hierarchies should have been detected and fixed beforehand. Moving to the root.
Failed to insert %{public}@ into the root folder after failing to insert it into %{public}@, apparently there is no hierarchy to speak of.
Already verified parent chain fo record with name %{public}@
Checking parent chain of record with name %{public}@
Moved bookmark with record name %{public}@ was actually not saved to the database!
Parent %{public}@ was deleted, reparenting %{public}@
Loop detected, reparenting %{public}@ in list %{public}@
Parent %{public}@ is not in the database, reparenting %{public}@
Beginning reorder of all bookmarks in local storage based on CloudKit sync data
Unexpectedly found cycle in bookmarks hierarchy since %{public}@ has already been sorted among %lu folders sorted so far
Stopping recursing updating children order at %{public}@ since depth has exceeded limit
Reordering children of %{public}@
Recursing to update order for %lu children of %{public}@
No children of bookmark %{public}@ to recurse on
Child bookmark ID unexpectedly equal to parent server ID %{public}@
Fixing order in local storage based on CloudKit positions
Record name %@, position: %@
Reordering children of root folder
Did finish reordering children of root folder
No children to reorder in folder with Server Sync ID: %@
Reordering children of record with Server Sync ID: %{public}@
Did finish reordering children of record with Server Sync ID: %{public}@
Removing %lu local items that were deleted on the server
Migration state value in server record is of type %{public}@ when NSNumber was expected
Migration state server record value (%{public}@) does not match expected state values
Checked in %{public}@ activity
No prior %{public}@ activity was found. Registering a new one
Running %{public}@ activity
Failed to set the activity state to 'Continue'. Deferring %{public}@ activity
Database for manager %lu doesn't exist. Deferring %{public}@ activity
Failed to acquire the sync lock. Deferring %{public}@ activity
Performing %{public}@ activity
Failed to get a valid device identifier to start coordinating migration.
Not migrating because Safari sync is disabled
Cannot read local migration state for migration due to invalid device identifier.
Not migrating because we've already migrated
Will attempt secondary migration
Will attempt primary migration
Failed to acquire lock on the database to read the migration state
Determining eligibility for local-only migration
Cannot determine eligibility for local-only migration due to invalid device identifier.
Bailing out from secondary migration without fetching remote migration info because Safari sync is disabled
Bailing out from secondary migration eligibility determination due to deallocation
Bailing out from secondary migration because Safari sync is disabled
Received an error fetching remote migration state: %{public}@; will attempt to become responsible for migration
Not eligible for local-only migration; will attempt to become responsible for migration
Remote migration pending; will decide whether we are responsible for resuming migration or should preempt the migrator
Performing local-only migration
Attempting to become responsible for migration by pushing state to the server
Cannot become responsible for migration due to invalid device identifier.
Bailing out from primary migration eligibility determination due to deallocation
Failed to become responsible for migration due to unrecoverable error: %{public}@
Failed to become responsible for migration due to CloudKit write error: %{public}@
Record zone unexpectedly deleted or missing; bailing out of primary migration
Migration coordinator retry limit exceeded
Pushed migration state successfully; assuming we are now responsible for migration
Bailing out from primary migration because Safari sync is disabled
Unable to lock backing store; bailing out from primary migration
Failed to push migration state because some other device modified it first; aborting
Cannot resume pending remote migration due to invalid device identifier
Received a migrationInfo with nil device identifier; will continue evaluating eligibility to steal right to migrate
Migration record indicates that we are the migrating device; attempting to resume migration
Not stealing right to migrate since no last modification date was stored in the migration record
Not stealing right to migrate since migration state was updated recently by another device
Deleting existing record zone in preparation for stealing right to migrate
Something went wrong deleting the existing record zone; bailing out: %{public}@
Stealing right to migrate due to migration timeout
Exceeded maximum migration retry limit
Scheduling migration retry
Starting PRIMARY migration
Starting SECONDARY migration
Migration failed with error %{public}@; resetting local and remote migration state
Migration succeeded
Unable to set remote migration state to %lu due to error: %{public}@; resetting local migration state, will attempt retry
Migration coordinator transitioning from state %zd to state %zd
User account changed for iCloud Settings
iCloud Settings syncing not available because user is not signed in
iCloud Settings syncing not available because Safari's dataclass isn't enabled
Sync coordinator will begin syncing
Already synchronizing; ignoring request to sync
Discontinuing sync because account hash differed
Discontinuing sync because Safari sync is disabled or the user is not signed in
Beginning synchronization
Failed to set up Settings Record Zone with error: %{public}@
Stopping fetch of settings
Have not performed a sync down yet; doing so now
Error received while syncing down: %{public}@
Sync coordinator finished sync down
Failed to decode customization sync server change token: %{public}@
Failed to serialize customization sync server change token: %{public}@
Attempting to create CloudSettings zone before retrying fetch
Fetching changes from CloudKit again after creating CloudSettings zone
Failed to create CloudSettings zone when fetching changes with error: %{public}@
Received unsynced Keychain error, but we're already waiting for PCS identities to change.
Received unsynced Keychain error. Observing notification to start fetching Safari settings when PCS identities change
Performing initial StarSky sync down of Safari's settings.
Change token is expired; trying a full sync down.
Sync coordinator failed to sync settings with error: %{public}@
Retrying sync after receiving synchronization request during synchronization
Not retrying sync after receiving synchronization request during sync since previous sync failed
Syncing done, calling completion handler
Ignoring PCS identity change notification because Customization Sync is not waiting for an identity update
Retrying sync after receiving expected PCS identity change notification.
Saving Safari's background image for the current device to CloudKit
Did fail to save the background image with error: %{public}@
Saving setting for the current device to CloudKit
Did fail to save record with error: %{public}@
Saving Per-Site settings for the current device to CloudKit
When merging the Per-Site Setting's value, local and remote generations are equal: %{public}@
When merging the Per-Site Setting's value, the merge occured in favor of the remote record. Saving the remote record in the database and updating Safari.
Save with record name %{public}@ in WBSPerSitePreferencesSQLiteStore did finish with success: %{public}@
Clearing cached Per-Site Settings sync data
Clearing cached Per-Site Settings sync data in WBSPerSitePreferencesSQLiteStore did finish with success: %{public}@
Deleting settings from CloudKit
Did fail to delete record with error: %{public}@
Clearing cached CloudSettings server change token
*** Failed to instantiate CloudKit database!
Fetching user identity
Returning cached user identity
Failed to fetch user identity due to missing zone: %{public}@
Attempting to fetch user record ID
Failed to fetch user record ID with error: %{public}@
Successfully fetched user record ID
Clearing cached record zone
Saving record batch with %zu records and %zu deletes
Bailing out from saving record batch due to deallocation
Failed to save record batch due to missing zone: %{public}@
Failed to save an individual record because the batch was too large and this one exceeded the limit.
Save error needs merge %{public}@ but no server record is present
Failed to delete an individual record ID because the batch was too large and this one exceeded the limit.
Failed to delete record ID due to CloudKit error which could not be handled: %{public}@
Batch record save operation completed but now retrying updated batch
Failed to save %zu out of %zu records due to batch size limit, try the remaining records again.
Failed to find participant for e-mail address: %{sensitive, mask.hash}@, error: %{public}@
Found participant for e-mail address: %{sensitive, mask.hash}@
Could not find any participant to add to the share, error: %{public}@
Could not fetch zone-wide share record for zone %{public}@, error: %{public}@
Bailing out from fetching subscription due to deallocation
Failed to fetch database subscription by ID %{public}@ with error: %{public}@
Successfully fetched database subscription
Bailing out from modifying subscription due to deallocation
Fetching Bookmarks zone subscription
Bailing out from fetching Bookmarks zone subscription due to deallocation
Failed to fetch Bookmarks zone subscription status due to missing zone: %{public}@
Fetching Bookmarks zone subscription by ID
Failed to fetch Bookmarks zone subscription by ID with error: %{public}@
Successfully fetched Bookmarks zone subscription
Saving Bookmarks zone subscription
Bailing out from saving Bookmarks zone subscription due to deallocation
Failed to save Bookmarks zone subscription due to missing zone: %{public}@
Fetching record changes for Bookmarks zone
Bailing out fetching record changes due to deallocation
Failed to fetch record changes due to missing zone: %{public}@
Deleting record batch of size: %lu
Attempting to delete bookmark zone
Bookmark zone deletion failed with error: %{public}@
Successfully deleted bookmark zone
Preparing bookmarks record zone, invalidateCachedZone: %d, createIfNeeded: %d
Cached record zone already present; nothing to do
Fetching record zone anew from CloudKit
No existing record zone found
Will attempt to set up zone from scratch
Bailing out without setting up zone
Failed to fetch minimum sync API version when setting up record zone; bailing
*** Minimum sync API version is too new (%lu, our current version is %lu)
Creating speculative encryption record
Successfully setup EncryptionInfo record
Failed to retrieve record with ID %{public}@, error: %{public}@
Server already has a record with ID %{public}@, use it instead
Failed to setup record with ID %{public}@ due to unexpected and unrecoverable write error: %{public}@
Failed to setup record with ID %{public}@ due to unrecoverable error: %{public}@
Record zone disappeared while setting up record with ID %{public}@; bailing
Failed to set up record with ID: %{public}@, error: %{public}@
Did successfully delete records with IDs %{public}@
Failed to delete records with IDs %{public}@, error: %{public}@
Failing save of record batch since migration record disappeared
Will attempt to resave migration record due to recoverable error
Failed to save migration record: %{public}@
Batch record save operation completed but failed to save migration record at end of batch save
Attempting to fetch encryption record from CloudKit
Encryption record fetch failed: %{public}@, returning cached  encryption record
Encryption record fetch failed: %{public}@
Starting fetch of remote migration state
Fetch remote migration state failed <%{public}@>.
Fetch migration state failed <%{public}@>.
Failed to set remote migration state due to missing zone: %{public}@
Completed operation to try to set remote migration state to %ld
Failed to set remote migration state to <%li>: %{public}@
Enqueuing request to set remote migration state to %ld
Minimum sync API version fetch operation completed
Fetch minimum sync API version failed <%{public}@>.
Failed to set minimum sync API version due to failure to set up record zone: %{public}@
Completed operation to try to set minimum sync API version to %ld
Failed to set minimum sync API version to <%li>: %{public}@
Enqueuing request to set minimum sync API version to %ld
Attempting to save new record zone
Failed to set up new record zone: %{public}@
Successfully set up new record zone
Someone deleted the migration record during migration with error: %{public}@
Migrator device identifier changed
Migrator device identifier changed from %@ to %@
Migration state changed from %ld to %ld
Internal-only -fetchAllBookmarkRecordsWithCompletionHandler: called!
Unable to create CloudExtensionState from dictionary: %{private}@
Attempting to start synchronization
Discontinuing sync because a retry has already been scheduled
Discontinuing sync because user is not signed in
Could not create BADatabase to synchronize
Device identifier is empty
Trying to open database after another client already did
Reading migration state %lu
Discontinuing sync since local migration has not yet completed, migration state: %lu
Discontinuing sync since local migration state cannot be read
Database sync data is unreadable, reset all sync data and attempt a migration again
Discontinuing sync because bookmarks Safari sync is disabled
Failed to set up Bookmarks Record Zone with error: %{public}@
Failed to fetch (or received invalid) remote migration state record with error: %{public}@
Scheduling retry #%d in %.1fs.
Discontinuing sync after attempting maximum number of retries
*** Resetting sync data
Bookmark Store setup done, opening database and processing changes
Failed to open database after finishing sync coordinator setup
Records were not saved locally, attempt merging to generate Add changes
Opening database to reorder of all bookmarks in local storage based on CloudKit sync data
Failed to open database to reorder bookmarks in local storage
Finished reordering bookmarks in local storage
Finish syncing
Sync coordinator failed to sync bookmarks with error: %{public}@
Database is unlocked despite having unlocked it before entering this method
Number of processed changes %lu, locally moved records: %lu, change token: %{public}@
Performing hierarchy check for moved records, number of moved records: %lu, number of deleted records: %lu
Using unsaved bookmark from last batch with record name: %{public}@
Setting unsaved bookmark with name %{public}@ because the batch is full
Not adding bookmark to batch with record name %{public}@ because it already exists in the batch
Discontinuing sync because bookmarks dataclass was disabled during sync
Done saving all record changes
Record %{public}@ was deleted remotely
Did fail to save record batch with error: %{public}@
Performing sync down with last server change token: %{public}@
Did finish fetching records between server change token: %{public}@ and server change token: %{public}@
None of the %ld records sent to be saved to the server were received on sync down. Missing records: %{public}@
Did not receive %ld records on sync down out of the %ld records sent to be saved. Missing records: %{public}@
Did receive %ld records in current sync down that were supposed to be retrieved in the previous one. Received records: %{public}@
Successfully completed full sync down after expired change token error
Record %@ was not seen during sync down after expired change token error; marking it for deletion
Record %@ has MinimumAPIVersion %lu and will be deleted locally
Merging record %{public}@ with result %{public}@ indicates that the remote record needs update despite being in sync down phase. The record should have been saved to the server before.
Record %@ does not exist locally and is deleted remotely
Has unsaved changes; saving next batch.
Unrooted moved bookmarks are present; will reparent
Error while copying asset. Error description: %@
Sync migration converter beginning migration
Saving bookmarks
Sync migration converter finished migration and sync down
Begin performing sync down while merging records
Did fail to perform merging sync down with error: %{public}@
Did finish merging sync down, temporarily reparent and sort records in case we have cycles or unrooted records in the hierarchy
Did finish reparenting, perform deduplication keeping records with sync data
Did finish deduplication keeping records with sync data, begin converting and saving remaining records
Failed to convert local records with error: %{public}@
Did finish converting and saving remaining records
Perform post-migration sync down
Failed to sync down after migration: %{public}@
Zone deleted during migration conversion; bailing
Bailing from sync down due to deallocation with error %{public}@
Sync migration converter retry limit exceeded
None of the %ld records saved to the server were retrieved on sync down. Missing records: %{public}@
Did finish post-migration sync down
Performing post-migration moved records verification
No records need to be reparented
Did fail to reparent unrooted bookmarks after migration with error: %{public}@
Did finish reparenting unrooted records
Failed to get iCloud Tabs database URL, falling back to in-memory database
Received PCS change notification with state %ld
Determining CloudTab sync coordinator in response to PCS change notification with state %ld
Determined PCS state to be %ld
Instantiating sync coordinator using PCS state %ld
Failed to read whether to use PCS cloud container for syncing with sqlite error code %d
CloudTabs database has PCS container sync properties
CloudTabs database has normal container sync properties
Database should not be reset because it's using the correct container
CloudTabs database needs to reset because sync properties are not compatible with PCS state %ld
Finished resetting CloudTabs database
Ignoring PCS identity change notification because CloudTabs is not waiting for an identity update
Received expected PCS identity change notification
Informing delegate of a PCS identity change
Received PCS unavailable error from CloudKit. Marking PCS state needs updating
Received unrecoverable PCS error %ld from CloudKit. Deleting the CloudTabs zone and creating a new one
Received unsynced Keychain error. Observing notification to start fetching CloudTabs when PCS identities change
Performing a fetch to fulfill request from %ld outstanding callers
Fetching local migration state from database (isMigrating: %d)
Setting local migration state in database to %ld (isMigrating: %d)
Sync migration coordinator starting PRIMARY migration
Sync migration coordinator starting SECONDARY migration
Sync migration coordinator failed due to migration unexpectedly being in progress
Database was already open by another client, could not open database
Begin performing first deduplication
Did finish performing first deduplication
Starting migration conversion as primaryMigrator = %d
Migration conversion failed with error: %{public}@
Migration conversion succeeded
Sync migration coordinator did fail to migrate with error: %{public}@
Sync migration coordinator did finish migrating.
Sync migration post-processing handler called
Did finish migration, perform last deduplication
Did finish last deduplication
Failed to fetch remote migration state with error: %{public}@
Failed to serialize bookmarks JSON with error: %{public}@
Change for item with server ID %{private}@ is neither bookmark nor folder.
Fetching CloudTabs zone subscription
Failed to fetch CloudTabs zone subscription by ID with error: %{public}@
Successfully fetched CloudTabs zone subscription
Saving CloudTabs zone subscription
Bailing out from saving CloudTabs zone subscription due to deallocation
Saving CloudTabs zone subscription failed because of missing zone, attempting to create zone
Aborting save of CloudTabs zone subscription because zone couldn't be created
Saving CloudTabs zone subscription after creating zone
Attempting to create CloudTabs zone before retrying save
Retrying save after creating CloudTabsZone
Deleting CloudTabs zone
Failed ot delete CloudTabs zone with error: %{public}@
Successfully deleted CloudTabs zone
Creating CloudTabs zone
Failed to create CloudTabs zone with error: %{public}@
Bailing out of creating CloudTabs zone due to deallocation
Retrying creation of CloudTabs zone
Waiting to retry creation of CloudTabs zone
Successfully created CloudTabs zone
Error serializing sync events plist data: %{public}@
Error reading sync events plist data: %{public}@
Beginning conversion of folder contents
Did fail to migrate record hierarchy with error: %{public}@
Did finish migrating folder contents
Record %{public}@ has no position and needs saving in folder %{public}@
Found record %{public}@ with position %{public}@ after record %{public}@ with position %{public}@, folder %{public}@ should have been sorted before!
Found record with name %{public}@ after %ld records which do not have a position defined yet
Batch of size %lu with %lu records is full for %@
No more records to save.
Merging record %{public}@ with result %{public}@ indicates that the local record needs to be undeleted during migration. Migration never attempts to delete remote records before the last de-duplication phase.
Failed to delete legacy Tab Groups subscription with error: %@
 Starting TabGroups sync for manager %{public}@ with trigger: %{public}@
 TabGroups sync failed for manager %{public}@ with result <Aborted>
 Starting TabGroups sync for manager %{public}@ with %{public}@
Received unsynced Keychain error. Observing notification to start syncing Tab Groups when PCS identities change.
 TabGroups sync failed for manager %{public}@ with result <%{public}@>: %{public}@, %{public}@
 TabGroups sync finished for manager %{public}@ with result: %{public}@, %{public}@
Ignoring PCS identity change notification because Safari Tab Groups Sync is not waiting for an identity update
Received expected PCS identity change notification. Syncing Tab Groups.
 Starting TabGroups migration for manager %{public}@ with %{public}@
 TabGroups migration failed for manager %{public}@ with result <%{public}@>: %{public}@, %{public}@
 TabGroups migration finished for manager %{public}@ with result: %{public}@, %{public}@
Sending notification of tab group sync result: %{public}zu
Not scheduling a sync being syncing is not enabled for this platform
Not scheduling a sync being we are currently migrating
Not scheduling a sync because entitlement is missing
Not scheduling a sync because manatee is not available
Ignoring CKShareMetadata because it is not part of the Tab Groups container: %{public}@
* Will accept share with zone %{public}@, metadata %@, %{public}@
* Failed to accept share with zone %{public}@, metadata %@, error: %{public}@, %{public}@
* Did accept share with zone %{public}@, metadata %@, %{public}@
* Will begin sharing tab group with UUID: %{public}@, with %{public}@
* Did successfully begin sharing tab group with UUID: %{public}@, in shared zone: %{public}@, %{public}@
* Failed to begin sharing tab group with UUID: %{public}@, result: %{public}@, error: %{public}@, %{public}@
Skipping updating user's presence because Safari syncing is not enabled
Skipping updating user's presence since there are no shared tab groups in the user's database
Will update user's presence to tab
Could not find tab for UUID: %{public}@
Tab with UUID %{public}@ and recordID %{public}@ is not in a shared tab group, ignoring
Will begin accepting share
Processing local tab operation
Failed to acquire local tab collection lock
Failed to open local tab database
Scheduling a tab group sync operation
Saving reparented records
Saving reparented records with record names: %@
Did fail to save reparented records with error: %{public}@
Did finish saving reparented records
Sync down handler starting sync, keep records marked as deleted locally = %d
Sync down handler did fail sync down with with error: %{public}@
Sync down handler did succcessfully sync down
Sync down handler fetching record changes from server change token: %{public}@
Canceling migration sync-down because Safari sync is disabled
Zone deleted during migration sync-down; bailing
Bailing out from sync down due to deallocation with error %{public}@
Sync down handler retry limit exceeded
Merging record %{public}@ with result %{public}@ indicates that the remote record needs update despite being in sync down phase. The record should have been saved to the server during migration.
Record %{public}@ does not locally exist and cannot be saved locally because of its minimum API version
Record %{public}@ does not exist locally and is deleted remotely
Writing locally record %{public}@ despite the record not existing locally and being deleted remotely for merging
Failed to delete device or extension state: %{public}@ (%d)
Failed to create the cloud_extension_devices table: %{public}@ (%d)
Failed to create the cloud_extension_states table: %{public}@ (%d)
Failed to create the index for cloud_extension_states table: %{public}@ (%d)
Failed to create the metadata table: %{public}@ (%d)
Failed to execute query when resetting database schema: %{public}@ (%d)
Opening iCloud Extensions SQLite database
Failed to open iCloud Extensions store at %{private}@: %{public}@
Failed to exclude CloudExtensions.db from backup: %{public}@
Failed to enable WAL on CloudExtensions.db: %{public}@
Failed to enable foreign keys on iCloud Extensions store: %{public}@ (%d)
Failed to enable secure delete on iCloud Extensions store: %{public}@ (%d)
iCloud Extensions store schema version (%d) does not match our supported schema version (%d) in store at %{public}@.
Closing iCloud Extensions SQLite database
Removing iCloud Extensions store file
Failed to remove iCloud Extensions store file at %{private}@: %{public}@
Recreating iCloud Extensions store file after removing it
Failed to set the database schema version to %d: %{public}@ (%d)
Failed to update metadata value %{public}@: %{public}@ (%d)
Failed to insert metadata value %{public}@: %{public}@ (%d)
Failed to delete metadata value for key %{public}@: %{public}@ (%d)
Failed to vacuum database: %{public}@ (%d)
Found a device without a UUID in the database.
Found a device without system fields in the database.
Failed to insert or replace device: %{public}@ (%d)
Found an extension state without a composedIdentifier in the database.
Found an extension state without system fields in the database.
Failed to insert or replace extension state: %{public}@ (%d)
Processing %lu changes with changeToken: %@
Add change %{public}@ was provided without a corresponding changed item.
Move change %{public}@ was provided without a corresponding changed item.
Moved item %{public}@ for change %{public}@ did not have a record ID.
Attempted to delete built-in record with name: %{public}@, ignoring.
Attempting to check database open state from a background thread
Attempting to retrieve the database from a background thread
Attempting to retrieve the backing store lock from a background thread
%{public}@ attempting to lock backing store
%{public}@ backing store was already locked
%{public}@ successfully locked backing store
%{public}@ failed to lock backing store
Attempting to unlock the backing store from a background thread
Trying to unlock the database despite the database being already unlocked
%{public}@ did not unlock backing store due to outstanding lock requests
%{public}@ is unlocking the database even though the database is still open
%{public}@ unlocked backing store
Attempting to retrieve the migration state from a background thread
Fetching local migration state from database (isDatabaseLocked: %d, isDatabaseOpen: %d)
Fetched local migration state %ld from database
Attempting to set the migration state from a background thread
Setting local migration state in database to %ld (isDatabaseLocked: %d, isDatabaseOpen: %d)
Attempting to open the database from a background thread
Attempted to open the database without acquiring the lock first.
Attempted to open the database even though it is already open.
Will open the database
Attempting to close the database from a background thread
Attempted to close the database without acquiring the lock first (shouldSave: %d
Attempted to close the database without opening it first (shouldSave: %d
Did close database, did save %d
Failed to delete device, tab, or close request: %{public}@ (%d)
Failed to create the cloud_tab_devices table: %{public}@ (%d)
Failed to create the cloud_tabs table: %{public}@ (%d)
Failed to create the index for cloud_tabs table: %{public}@ (%d)
Failed to create the cloud_tab_close_requests table: %{public}@ (%d)
Opening iCloud Tabs SQLite database
Failed to open iCloud Tabs store at %{private}@: %{public}@
Failed to exclude CloudTabs.db from backup: %{public}@
Failed to enable WAL on CloudTabs.db: %{public}@
Failed to enable foreign keys on iCloud Tabs store: %{public}@ (%d)
Failed to enable secure delete on iCloud Tabs store: %{public}@ (%d)
iCloud Tabs store schema version (%d) does not match our supported schema version (%d) in store at %{public}@.
Closing iCloud Tabs SQLite database
Removing iCloud Tabs store file
Failed to remove iCloud Tabs store file at %{private}@: %{public}@
Recreating iCloud Tabs store file after removing it
Found a tab without a UUID in the database.
Found a tab without system fields in the database.
Found a tab without a position dictionary in the database.
Couldn't create a tab's position from the position dictionary in the database.
Found a tab without a URL in the database.
Failed to insert or replace tab: %{public}@ (%d)
Found a close request without a request UUID in the database.
Found a close request without system fields in the database.
Found a close request without a destination device UUID in the database.
Found a close request without a tab URL in the database.
Found a close request without a tab UUID in the database.
Failed to create a CloudTabCloseRequest from the database.
Failed to insert or replace close request: %{public}@ (%d)
Deleting the iCloud Tabs database
User account changed for iCloud Tabs
iCloud Tab syncing not available because user is not signed in
iCloud Tab syncing not available because Safari's dataclass isn't enabled
Saving tabs for the current device to CloudKit
No iCloud Tab device found to save
Stopping save of tabs for current device
Merging device with existing device in SQLite database
Saving iCloud Tab record batch of size: %lu
Did fail to save iCloud Tab record batch with error: %{public}@
Finished saving iCloud Tab record batch
Deleting obsolete tab records from CloudKit
No obsolete tab records need to be deleted from CloudKit
Failed to delete obsolete tab records with error: %{public}@
Done deleting obsolete tab record from CloudKit
Updating SQLite store from CloudKit after saving tabs
Updating SQLite store from CloudKit after saving tabs failed with error: %{public}@
Done updating SQLite store from CloudKit after saving tabs
Finished saving tabs for the current device to CloudKit
Saving close request to CloudKit
No close request found to save
Stopping save of close requests
Did fail to save iCloud Tab record batch with close requests with error: %{public}@
Successfully saved close request to CloudKit
Updating SQLite store from CloudKit after saving close request
Updating SQLite store from CloudKit after saving close request failed with error: %{public}@
Done updating SQLite store from CloudKit after saving close request
Finished saving close request to CloudKit
Fetching iCloud Tab data from CloudKit
Stopping fetch of tabs
Attempting to create CloudTabs zone before retrying fetch
Fetching changes from CloudKit again after creating CloudTabs zone
Failed to create CloudTabs zone when fetching changes with error: %{public}@
No modified devices, tab records, or close requests to save to SQLite
Saving %lu device records, %lu tab records, and %lu close requests to SQLite
Failed to save modified device, tab, and close request records to the SQLite database with error: %d
Finished saving modified device, tab, and close request records to the SQLite database
Skipping loading devices, tabs, and close requests from SQLite
Loading devices, tabs, and close requests from SQLite
Finished loading devices, tabs, and close requests from SQLite
Finished fetching iCloud Tab data from CloudKit
Fetched an invalid iCloud Tab device record from CloudKit
Fetched an invalid iCloud Tab tab record from CloudKit
Fetched an invalid iCloud Tab close request record from CloudKit
Deleting devices from CloudKit
No devices to delete
Deleting close requests from CloudKit
No close requests to delete
Stopping deletion of records
Deleting records from CloudKit
Failed to delete records with error: %{public}@
Done deleting records from CloudKit
Updating SQLite store from CloudKit after deleting records
Updating SQLite store from CloudKit after deleting records failed with error: %{public}@
Done updating SQLite store from CloudKit after deleting records
Finished deleting records from CloudKit
Sync coordinator received a message to delete the CloudTabs zone
Sync coordinator successfully deleted CloudTabs zone and local database
Prepare records for migration
Number of records prepared for migration: %ld
Convert built-in record with recordName %{public}@ for migration
Record of type %ld has built-in record name %{public}@ despite not being a built-in folder, generating a new record name
Convert new local record with created recordName %{public}@ for migration
Already converted record with recordName %{public}@ for migration
Convert Bookmark DAV record with recordName %{public}@ for migration
Trying to generate DAV server ID for bookmark with local ID %{public}@, but that bookmark doesn't exist
Received nil set of child local IDs for folder with local ID %{public}@ while generating DAV server IDs
Clearing referenced record with generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Did find referenced record: %{public}@ generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Could not find referenced record: %{public}@ generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Overriding previous referenced record : %{public}@ generation: %{public}@ with referenced record: %{public}@ generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Cannot apply reference: %{public}@ with generation: %{public}@ to attribute %{public}@ of record name: %{public}@ because the item is missing locally.
No references to apply
Sync coordinator will begin syncing with %{public}@
Beginning synchronization with %{public}@
Sync coordinator begins setting up local store with %{public}@
Could not allocate collection with %{public}@
Sync coordinator did finish setting up local store with %{public}@
Discontinuing sync because user is not signed in with %{public}@
Discontinuing sync because device identifier is empty with %{public}@
Discontinuing sync because account hash differed with %{public}@
Discontinuing sync because bookmarks Safari sync is disabled with %{public}@
Failed to set up Bookmarks Record Zone with error: %{public}@ with %{public}@
Determining course of action from local migration state with %{public}@
Could not allocate collection to start migration with %{public}@
Discontinuing migration because user is not signed in with %{public}@
Discontinuing migration because Safari syncing is not enabled with %{public}@
Discontinuing migration because device identifier is empty with %{public}@
Not migrating because we've already migrated with %{public}@
Will attempt secondary migration with %{public}@
Failed to read the local migration state with %{public}@
Received an error fetching remote migration state: %{public}@; will attempt to become responsible for migration with %{public}@
Remote migration state requires migration with %{public}@
Remote migration pending; will device whether we are responsible for resuming migration or should preempt migrator with %{public}@
Perform local-only migration with %{public}@
Deleting existing record zone in preparation for stealing right to migrate with %{public}@
Something went wrong deleting the existing record zone; bailing out: %{public}@ with %{public}@
Stealing right to migrate due to migration timeout with %{public}@
Bailing out from primary migration eligibility determination due to deallocation with %{public}@
Failed to become responsible for migration due to unrecoverable error: %{public}@ with %{public}@
Failed to become responsible for migration due to CloudKit write error: %{public}@ with %{public}@
Record zone unexpectedly deleted or missing; bailing out of primary migration with %{public}@
Migration coordinator retry limit exceeded with %{public}@
Received a migrationInfo with nil device identifier; will continue evaluating eligibility to steal right to migrate with %{public}@
Migration record indicates that we are the migrating device; attempting to resume migration with %{public}@
Not stealing right to migrate since no last modification date was stored in the migration record with %{public}@
Not stealing right to migrate since migration state was updated recently by another device with %{public}@
Failed to push migration state because some other device modified it first; aborting with %{public}@
Exceeded maximum migration retry limit with %{public}@
No associated records for UUID %{public}@ with %{public}@
Bookmark with UUID %{public}@ does not represent a sharable tab group, actual type: %{public}@ with %{public}@
Sync coordinator will begin sharing tab group %{public}@ with record name: %{public}@ with %{public}@
Did finish checking whether to create a legacy tab group, should create placeholder: %{public}@ with %{public}@
Could not set up shared tab group zone with error: %{public}@ with %{public}@
Did finish setting up shared secondary tab group zone, with result: %{public}@ with %{public}@
Discontinuing sync because bookmarks dataclass was disabled during sync with %{public}@
Did finish saving migration tombstones and checking whether to create a legacy tab group but we do not need to create the placeholder with %{public}@
Will begin creating legacy placeholder tab group with %{public}@
Did fail to create legacy placeholder tab group with error: %{public}@ with %{public}@
Did successfully create legacy placeholder tab group with %{public}@
Will begin saving migration tombstones to the default zone with %{public}@
Failed to save migration tombstones to the default zone error: %{public}@ with %{public}@
Did finish saving migration tombstones to the default zone with %{public}@
Will begin saving records to the new zone %{public}@ with %{public}@
Did fail to save records to the new zone %{public}@ with %{public}@
Did finish saving records to the new zone %{public}@ with %{public}@
Will save CKShare record to the new zone %{public}@ with %{public}@
CloudTabGroupSyncCoordinator got deallocated while migrating the share with %{public}@
Failed to save CKShare record to the new zone %{public}@, error: %{public}@ with %{public}@
Did save CKShare record to the new zone %{public}@ with %{public}@
Perfoming sync down of the new zone %{public}@ with %{public}@
Failed sync down records for new zone %{public}@, error: %{public}@ with %{public}@
Did finish sync down of the new zone %{public}@ with %{public}@
Saving record with ID: %{public}@, data: %{sensitive}@ with %{public}@
Record with ID %{public}@ is already in a tab group specific zone and does not need to be moved with %{public}@
Record with ID %{public}@ is neither in the default zone to become a tombstone nor in the destination zone %{public}@ with %{public}@
Attempting to accept share for shareURL %{sensitive, hash.mask}@ with %{public}@
Did fetch share metadata for shareURL %{sensitive, hash.mask}@, %{sensitive, mask.hash}@ with %{public}@
Failed to fetch CKShareMetadata record for URL %{sensitive, mask.hash}@ with %{public}@
Attempted to accept share in zoneID: %{public}@ even though it was created by this user, syncing down the zone instead with %{public}@
Did fail to perform sync down of zone %{public}@ shared by this user; error: %{public}@ with %{public}@
Successfully performed sync down for zone %{public}@ shared by this user with %{public}@
Will begin accepting share with zoneID: %{public}@ for shareURL: %{sensitive, mask.hash}@ with %{public}@
Successfully accepted share with zoneID %{public}@ for shareURL: %{sensitive, mask.hash}@ with %{public}@
Will perform sync down of zone %{public}@ with %{public}@
Did fail to perform sync down of zone %{public}@ for shareURL %{sensitive, mask.hash}@ with %{public}@
Root tab group record is missing in the shared tab group zone after sync down probably because the MinimumAPIVersion is not supported in zone %{public}@ for shareURL %{sensitive, mask.hash}@ with %{public}@
Successfully performed sync down for zone %{public}@ of shareURL %{sensitive, mask.hash}@ with %{public}@
Failed to fetch accept share with zoneID %{public}@ for metadata %{sensitive, mask.hash}@; error: %{public}@ with %{public}@
Will load last known minimum OS version in circle cache with %{public}@
Cache for last known minimum OS version in circle is still valid. Should create placeholder tab: %@ with %{public}@
Cache for last known minimum OS versions in circle is no longer valid; fetching metadata with %{public}@
A device with an older iOS version is still in the circle, require shared tab groups with %{public}@
A device with an older macOS version is still in the circle, require shared tab groups with %{public}@
A device with an unknown OS version is still in the circle, require shared tab groups with %{public}@
Did update last known minimum OS versions in circle with %{public}@
Will begin building next updated records batch with %{public}@
Ignoring change lacking record with token %zu with %{public}@
Adding record with name: %{public}@ to batch, data: %{sensitive}@ with %{public}@
Done saving all record changes with %{public}@
Failed to delete recordZoneID batch with error: %{public}@ with %{public}@
Done deleting recordZoneID batch with %{public}@
Failed to save record batch with error: %{public}@ with %{public}@
Done saving record batch, posting highlights to Messages with %{public}@
Did successfully save record with ID %{public}@ associated with bookmark with serverID %{public}@ with %{public}@
Record of type %{public}@ is part of a save batch but its type is not handled as bookmark record or as an auxiliary record with %{public}@
Did successfully mark record with ID %{public}@ as deleted in source zone for destination record with ID %{public}@ with %{public}@
Record with ID %{public}@ does not match associated bookmark with serverID %{public}@ (recordID: %{public}@) even though it is not a record moving to a different zone; ignoring with %{public}@
Done saving record batches, clearing changes during or before generation %{public}zu with %{public}@
There are %ld source records for records moved between zones that which did not save properly, record IDs: %{public}@ with %{public}@
Deleting recordZoneID batch of size: %zu with %{public}@
Failed to delete zone with ID: %{public}@, error: %{public}@ with %{public}@
Failed to delete record zone ID batch with error: %{public}@ with %{public}@
Saving record batch of size: %zu, number of deleted records: %zu to database: %{public}@ with %{public}@
Resolving merge conflict for record with name: %{public}@ with %{public}@
Did fail to save record batch with error: %{public}@ with %{public}@
Will begin fetching records to refresh with %{public}@
No recordIDs left to refresh with %{public}@
Will refresh %zu records in private database and %zu in shared database with %{public}@
Did successfully refresh record with ID %{public}@ with %{public}@
Record with ID %{public}@ requested for refresh does not exist in the remote database with %{public}@
Could not refresh record with ID %{public}@ because of error %{public}@ with %{public}@
Failed to refresh records with error: %{public}@ with %{public}@
Failed to refresh %zd recordIDs: %{public}@ with %{public}@
Done refreshing records with %{public}@
No auxiliary records to delete with %{public}@
Will begin deleting deleted auxiliary records with %{public}@
Did fail to delete auxiliary records with error %{public}@,  %{public}@
Sync coordinator did finish deleting auxiliary records with %{public}@
Will begin building next batch of deleted auxiliary records with %{public}@
Failed to delete record batch in private database with error: %{public}@ with %{public}@
Failed to delete record batch in shared database with error: %{public}@ with %{public}@
Done deleting auxiliary record batches, clearing records in sync data with %{public}@
Did fetch record with name: %{public}@, data: %{sensitive}@ with %{public}@
Ignoring record with ID %{public}@ because its type %{public}@ is unknown with %{public}@
Ignoring record of type %{public}@ with ID %{public}@, because it is a placeholder record with %{public}@
Ignoring record of type %{public}@ with ID %{public}@, because it is a child record of a placeholder with ID %{public}@ with %{public}@
Record with ID %{public}@ uses a more recent API version (%zu), then supported (%zu) with %{public}@
Ignoring unknown record with ID %{public}@ because of its state %zu with %{public}@
Bookmark with server ID %{public}@ uses a more recent API version (%zu), then supported (%zu) with %{public}@
Fetched scoped bookmark list with unprefixed record name: %{public}@. Marking for deletion with %{public}@
Ignoring received migration tombstone with recordID %{public}@ for local record with ID %{public}@ with %{public}@
Ignoring remote record with ID %{public}@ because it does not match local recordID %{public}@ for server_id %{public}@ even though it is not a migration tombstone, actual state: %zd with %{public}@
Bookmark with server ID %{public}@ is deleted with %{public}@
Bookmark with server ID %{public}@ is not inserted with %{public}@
Scoped bookmark changes should have a valid tab group with %{public}@
Shared tab group changes should have a valid parent bookmark with %{public}@
Parent bookmark with server ID %{public}@ not found, moving to recovered bookmarks with %{public}@
Setting up _unknownRecordIDsToPendingAuxiliaryRecordSets with %{public}@
_unknownRecordIDsToPendingAuxiliaryRecordSets is already set up with content %{public}@ with %{public}@
Clearing _unknownRecordIDsToPendingAuxiliaryRecordSets with %{public}@
Found auxiliary records that do not have any associated main records with %{public}@
Unknown recordID %{public}@ has %zd pending auxiliary records with IDs: %{public}@ with %{public}@
Auxiliary record %{public}@ does not have an associated main recordID with %{public}@
Adding pending auxiliary record with ID %{public}@ for unknown associated recordID: %{public}@ with %{public}@
Did find %zd pending auxiliary records for associated main recordID: %{public}@ with %{public}@
Handling pending auxiliary record %{public}@ for recordID: %{public}@ with %{public}@
Updating share record for zone: %{public}@ with %{public}@
Deleting share record for tab group: %{public}@ with %{public}@
Did receive presence record with ID %{public}@ for participant: %{public}@, tabRecordName: %{public}@, isExpired: %d with %{public}@
Did receive presence record deletion with ID %{public}@ with %{public}@
Will prepare for sync down with %{public}@
Did finish sync down successfully %{public}@ with %{public}@
Saving server change token for recordZoneID: %{public}@, token: %{public}@ with %{public}@
Will begin sync down with %{public}@
Error received while syncing down: %{public}@ with %{public}@
Sync coordinator finished sync down with %{public}@
Performing sync down with last server change token in private database: %{public}@ with %{public}@
Performing sync down with last server change token in shared database: %{public}@ with %{public}@
Primary record zone has disappeared, we need to migrate again with %{public}@
Found %lu zones deleted in database %{public}@, deleting local records with %{public}@
Found no zones to update in database %{public}@ with %{public}@
Found %lu zones with IDs %{public}@ updated in database %{public}@, fetching records with %{public}@
Performing sync down for record zone IDs %{public}@ in database: %{public}@, configurations: %{public}@ with %{public}@
Failed to finish fetching record with ID %{public}@, error: %{public}@ with %{public}@
Did receive record delete for record %{public}@, type: %{public}@ with %{public}@
Did finish receiving record changes from zone %{public}@ with %{public}@
Failed to sync down records with error: %{public}@, per record zone errors: %{public}@ with %{public}@
Did finish sync down for record zone IDs %{public}@, configurations: %{public}@ with %{public}@
Change token is expired; trying a full sync down with %{public}@
Successfully completed full sync down after expired change token error with %{public}@
Record %{public}@ was not seen during sync down after expired change token error; marking it for deletion with %{public}@
Failed to save asset with error: %{public}@ with %{public}@
Error while copying asset. Error description: %{public}@ with %{public}@
Sync coordinator failed to sync bookmarks with error: %{public}@ with %{public}@
Record with ID %{public}@ is changing zone with new recordID: %{public}@ with %{public}@
Setting up batch item for update of record with type %{public}@ with ID: %{public}@ with %{public}@
Will update %lu records with IDs: %{public}@ with %{public}@
Will delete %lu records with IDs: %{public}@ with %{public}@
Handling deletion of record of type %{public}@ with ID: %{public}@ with %{public}@
Deleting %lu auxiliary records with IDs: %{public}@ with %{public}@
Deleting shared private zone with ID %{public}@ with %{public}@
Leaving share by deleting CKShare in shared zone with ID %{public}@ with %{public}@
Record with ID %{public}@ is in a zone that will be removed with %{public}@
Marking record as Deleted with ID: %{public}@ with %{public}@
Record %{public}@ was deleted remotely with %{public}@
Record %{public}@ was changed remotely with %{public}@
Record with ID %{public}@ locally moved to a different zone was modified by another device, don't attempt to delete it anymore with %{public}@
No remote record detected for local record %{public}@, skipping merge with %{public}@
Creating new bookmark with %{public}@
=== Resetting sync data with %{public}@
Handling an iCloud Keychain reset with %{public}@
Will begin deleting private tab groups with %{public}@
Could not retrieve private zones to delete, error: %{public}@ with %{public}@
No private zones to delete with %{public}@
Failed to delete private zones, error: %{public}@ with %{public}@
Will begin leaving shared tab groups with %{public}@
Could not retrieve shared zones to leave, error: %{public}@ with %{public}@
No shared zones to leave with %{public}@
Successfully left shared zones with IDs: %{public}@ with %{public}@
Failed to delete shared zones, error: %{public}@ with %{public}@
Will notify delegate that changes for some record zones were ignored with IDs: %{public}@ with %{public}@
Failure to get a collaboration highlight with error %{public}@ for the CKShare: %{public}@ %{private}@ with %{public}@
Fetch record zone changes operation completed for record zone %{public}@
SafariBookmarksSyncAgent
APSConnectionDelegate
NSObject
CloudExtensionStore
SafariSyncControllerConnectionHandling
WBSSafariBookmarksSyncAgentProtocol
WBSCyclerCloudBookmarksAssistant
WBTabGroupSyncAgentProtocol
WBSSafariSyncServiceProtocol
SafariSyncController
CloudBookmarkDatabaseLockArbiterDelegate
CloudTabSyncArbiterDelegate
NSXPCListenerDelegate
CloudTabGroupSyncManagerDelegate
CloudSettingSyncCoordinatorDelegate
AppleAccountInformationProvider
WBSAppleAccountInformationProviding
CloudTabGroupExpiredChangeTokenHandler
CloudBookmark
SafariBookmarksSyncExtras
CloudTabGroupBatchItem
CloudExtensionSyncCoordinator
CloudExtensionSQLiteStoreDelegate
CloudBookmarkDebugHierarchyChecker
CloudBookmarkAccountPropertiesStore
CloudTabGroupPresenceUpdater
CloudBookmarkCompressedJSONValueTransformer
CloudBookmarkDatabaseHandler
CloudBookmarkUpdater
CloudBookmarkCKReferenceValueTransformer
CloudBookmarkEncryptedObjectValueTransformer
CloudBookmarkWBSHashGeneratorExtras
CloudSettingStore
CloudBookmarkMovedBookmarkManager
CloudSettingsSyncEngineAccessProvider
CloudBookmarkAttributeValueTransformer
CloudExtensionsExtras
CloudBookmarksExtras
CloudBookmarksFetchResult
CloudTabGroupMaintenanceActivity
CloudBookmarksMigrationCoordinator
CloudBookmarkExpiredChangeTokenHandler
CloudTabCloseRequest
NSCopying
CloudBookmarkDatabaseAccessProvider
CloudBookmarkItemConfiguration
CloudSettingSyncCoordinator
CloudBookmarkStore
CloudBookmarkStoreUserDefaultsStorage
CloudBookmarkStoreLocalStorage
CloudExtensionState
CloudTabGroupAccountPropertiesStore
CloudBookmarkSyncCoordinator
WBSCRDTPositionGeneratorDelegate
CloudBookmarkSyncMigrationConverter
CloudBookmarkSyncMigrationSaveHandlerDelegate
CloudBookmarkSyncMigrationSyncDownHandlerDelegate
CloudTabGroupSyncEvent
CloudBookmarkCKOperationGroupExtras
CloudTabSyncArbiter
CloudTabSyncProtocol
CloudTabLocalStoreShim
CloudTabLocalStore
CloudTabLocalStoreDelegate
CloudBookmarkSyncMigrationCoordinator
CloudBookmarksDiagnostics
CloudBookmarkCKAssetValueTransformer
CloudTabRemoteStore
CloudTabGroupSyncDebugger
CloudTabGroupSyncCoordinatorObserving
CloudBookmarkSyncMigrationFolderContentConverter
CloudBookmarkSyncMigrationPositionGenerator
_CloudBookmarkSyncMigrationPositionGeneratorEnumerator
CloudBookmarkSyncMigrationSaveHandler
CloudTabGroupSyncManager
CloudTabGroupSyncCoordinatorDelegate
CloudTabGroupMaintenanceActivityDelegate
CloudBookmarkSyncMigrationSaveReparentedBookmarksHandler
CloudBookmarkSyncMigrationSyncDownHandler
CloudExtensionSQLiteStore
WBSSQLiteDatabaseDelegate
CloudBookmarkChangeProcessor
CloudBookmarkDatabaseLockArbiter
CloudBookmarkDatabaseCoordinating
CloudBookmarkWindowsCompatibleStringValueTransformer
CloudBookmarkWindowsCompatibleURLValueTransformer
CloudBookmarkURLIdentityHashValueTransformer
CloudExtensionDevice
CloudTab
CloudKitSQLiteStore
CloudTabDevice
CloudTabsExtras
CloudTabSQLiteStore
CloudTabSyncCoordinator
CloudBookmarkSyncMigrationHierarchyConverter
CyclerCloudBookmarksAssistant
CloudBookmarkPendingReferenceManager
CloudTabGroupBatch
CloudTabGroupSyncCoordinator
CloudRemoteStore
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v20@0:8B16
v16@0:8
@"APSConnection"
@24@0:8@16
v32@0:8@16@?24
v44@0:8@16B24@28@?36
v40@0:8@16@24@?32
v56@0:8@16@24@?32@?40@?48
v64@0:8@16@24@32@40@48@?56
v56@0:8@16@?24@?32@40@?48
v64@0:8@16@24@?32@?40@48@?56
@32@0:8@16@?24
@"CKDatabase"
@"CKRecordZone"
@"NSOperationQueue"
@"NSObject<OS_dispatch_queue>"
@"CKContainer"
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@?<v@?@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8q16
v36@0:8@16B24@?28
v24@0:8@?<v@?q@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSData">16
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"NSError">16
v24@0:8@?<v@?B>16
v32@0:8@"NSDictionary"16@?<v@?>24
v36@0:8@"NSURL"16B24@?<v@?>28
v24@0:8@?<v@?>16
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSArray"@"NSError">16
v24@0:8@"<WBTabGroupSyncAgentSyncObserver>"16
v32@0:8@"CKShareMetadata"16@?<v@?@"CKShare"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"NSURL"16@"NSData"24@?<v@?@"CKShare"@"NSError">32
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v24@0:8@"CloudBookmarkDatabaseLockArbiter"16
@28@0:8@16B24
@"CKContainer"28@0:8@"CloudTabSyncArbiter"16B24
v24@0:8@"CloudTabSyncArbiter"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@"CloudTabGroupSyncManager"16
v24@0:8@"CloudTabGroupSyncManager"16
v32@0:8@"CloudTabGroupSyncManager"16@"NSSet"24
v48@0:8@16@24@32@?40
v32@0:8@"CloudSettingSyncCoordinator"16@"CKRecord"24
v32@0:8@"CloudSettingSyncCoordinator"16@"CKRecordID"24
v24@0:8@"CloudSettingSyncCoordinator"16
v48@0:8@"CloudSettingSyncCoordinator"16@"NSData"24@"NSString"32@?<v@?B>40
@24@0:8q16
v40@0:8q16@24@?32
v40@0:8@16q24@?32
@32@0:8@16@24
v44@0:8r*16@24B32@?36
d32@0:8q16@24
v48@0:8Q16@24@32@?40
v48@0:8B16B20Q24q32q40
v48@0:8Q16Q24@32@?40
v32@0:8@16q24
@"ACAccountStore"
@"<WBSBookmarkDBAccess>"
@"CloudBookmarkStore"
@"NSXPCListener"
@"NSTimer"
@"NSDate"
@"NSObject<OS_os_transaction>"
@"WBSDiagnosticStateCollector"
@"CloudBookmarkDatabaseLockArbiter"
@"CloudBookmarkSyncMigrationCoordinator"
@"CloudBookmarksMigrationCoordinator"
@"CloudBookmarkSyncCoordinator"
@"NSObject<OS_dispatch_source>"
@"CyclerCloudBookmarksAssistant"
@"NSMutableSet"
@"NSUserDefaults"
@"CloudTabSyncArbiter"
@"CloudSettingStore"
@"CloudSettingSyncCoordinator"
@"<WBSSettingsSyncEngineAccess>"
@"NSMutableDictionary"
@"NSString"
@"NSMutableArray"
@"CloudExtensionStore"
@"CloudExtensionSyncCoordinator"
@"CloudTabGroupSyncManager"
@"WBSCloudKitContainerManateeObserver"
@"WBTabCollection"
v24@0:8@?<v@?q>16
q16@0:8
@"WebBookmarkCollection"
@40@0:8@16^v24@32
@48@0:8@16^v24@32@40
v40@0:8^v16@24@32
@40@0:8^v16@24@32
@56@0:8@16@24^v32@40@48
v56@0:8@16@24^v32@40@48
@48@0:8^v16@24@32@40
@48@0:8r^v16@24@32@40
B32@0:8^v16@24
@32@0:8@16^B24
v32@0:8^v16@24
B48@0:8@16@24@32@40
Q32@0:8@16@24
Q36@0:8@16@24B32
Q24@0:8@16
Q32@0:8@16^B24
r^v16@0:8
@"WBBookmarkSyncData"
@"CloudBookmarkItemConfiguration"
@"CKRecord"
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@"WBChangeRecord"
@"NSSet"
v32@0:8@"CloudExtensionSQLiteStore"16@"NSError"24
@"CloudExtensionSQLiteStore"
@"CKOperationGroup"
@"CloudExtensionDevice"
@"NSArray"
@"NSError"
@"CKServerChangeToken"
q24@0:8@16
B24@0:8^v16
B40@0:8^v16@24B32B36
@"<CloudBookmarkDatabaseCoordinating>"
v44@0:8@16@24B32@?36
v60@0:8@16@24@32@40B48@?52
v52@0:8@16@24@32B40@?44
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKRecordID"
@24@0:8#16
@"NSData"24@0:8@"NSArray"16
@"WBSCRDTPosition"24@0:8@"NSString"16
B48@0:8@"CKReference"16@"WBSCRDTGeneration"24@"NSString"32@"NSString"40
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
@"CKRecordZoneID"16@0:8
@"NSArray"16@0:8
@"CloudBookmarkAccountPropertiesStore"
@32@0:8@16Q24
@"CKRecordZoneID"
v56@0:8@16@24@32@40@?48
v60@0:8@16B24@28@36@?44@?52
v56@0:8@16@24@32@?40@?48
v64@0:8@16@24@32@40@?48@?56
@"WBSHashGenerator"
@32@0:8^v16@24
@28@0:8B16^@20
@24@0:8^@16
B32@0:8@16^@24
v28@0:8@16i24
@32@0:8@16^@24
v24@0:8^@16
B24@0:8q16
B28@0:8@16B24
@32@0:8q16@24
v24@0:8Q16
@"NSData"
@"WBCollectionConfiguration"
@"<CloudTabGroupMaintenanceActivityDelegate>"
d16@0:8
v36@0:8B16@20@?28
@32@0:8@16^v24
@24@0:8Q16
@64@0:8@16@24@32@40@48@56
@24@0:8^{_NSZone=}16
@112@0:8q16q24@32@40@48@56@64@72@80@88@96@?104
@?16@0:8
@"NSDictionary"
@"NSOrderedSet"
v28@0:8B16@20
@"<CloudSettingSyncCoordinatorDelegate>"
@40@0:8q16@24@32
@32@0:8@16q24
v48@0:8@16@24@?32@?40
v80@0:8@16@24@32@40@?48@?56@?64@?72
v80@0:8@16@24@32@40@48@56@?64@?72
v40@0:8B16B20@24@?32
v72@0:8@16@24@32@40@48@?56@?64
v40@0:8@?16@?24@?32
v48@0:8@16@?24@?32@?40
v48@0:8q16@24@32@?40
v32@0:8Q16@?24
@"NSObject<OS_os_log>"
@"<CloudBookmarkStoreLocalStorage>"
@"NSData"16@0:8
v24@0:8@"NSData"16
@112@0:8@16@24@32@40@48B56B60@64@72@80@88@96@104
@"NSString"24@0:8@"WBSCRDTPositionGenerator"16
q24@0:8@"WBSCRDTPositionGenerator"16
@"WBSCRDTPosition"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@"NSString"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@32@0:8^@16@?24
@"CloudBookmark"
@"WBSCRDTPosition"
@"CloudBookmarkMovedBookmarkManager"
@"CloudBookmarkPendingReferenceManager"
@"WBSCRDTPositionGenerator"
@"CloudBookmarkExpiredChangeTokenHandler"
B56@0:8@16@24@32@40@48
v32@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"CloudBookmark"24
v32@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"NSString"24
B32@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"CloudBookmark"24
B56@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"CKReference"24@"WBSCRDTGeneration"32@"NSString"40@"NSString"48
v32@0:8@"CloudBookmarkSyncMigrationSyncDownHandler"16@"CloudBookmark"24
v32@0:8@"CloudBookmarkSyncMigrationSyncDownHandler"16@"NSString"24
B56@0:8@"CloudBookmarkSyncMigrationSyncDownHandler"16@"CKReference"24@"WBSCRDTGeneration"32@"NSString"40@"NSString"48
@"CloudBookmarkSyncMigrationFolderContentConverter"
@"CloudBookmarkSyncMigrationSyncDownHandler"
@"CloudBookmarkSyncMigrationSaveReparentedBookmarksHandler"
@40@0:8@16q24@32
v32@0:8q16@?24
@"CloudTabSQLiteStore"
@"CloudTabRemoteStore"
@"CloudTabSyncCoordinator"
@"CloudTabLocalStoreShim"
@"<CloudTabSyncArbiterDelegate>"
v24@0:8@?<v@?@"NSArray"@"NSArray">16
v32@0:8@"NSString"16@?<v@?@"CloudTabDevice">24
v32@0:8@"NSArray"16@?<v@?i>24
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?i>40
v32@0:8@"NSData"16@?<v@?i>24
v24@0:8@?<v@?Bi>16
v28@0:8B16@?<v@?i>20
@"<CloudTabLocalStoreDelegate>"16@0:8
v24@0:8@"<CloudTabLocalStoreDelegate>"16
v24@0:8@"<CloudTabLocalStore>"16
v32@0:8@"<CloudTabLocalStore>"16@"NSError"24
@"<CloudTabLocalStoreDelegate>"
@"<CloudTabLocalStore>"
v44@0:8B16@20@?28@?36
@"CloudBookmarkSyncMigrationConverter"
@24@0:8^v16
v56@0:8^v16@24^q32^q40@48
v24@0:8@"CloudTabGroupSyncCoordinator"16
v32@0:8@"CloudTabGroupSyncCoordinator"16@"NSDictionary"24
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSArray"24@"NSArray"32
v32@0:8@"CloudTabGroupSyncCoordinator"16@"CKRecord"24
@"CloudTabGroupSyncEvent"
@"CloudBookmarkSyncMigrationPositionGenerator"
@"NSEnumerator"
@48@0:8@16@24^@32^@40
@48@0:8@16@24@32q40
@"<CloudBookmarkSyncMigrationSaveHandlerDelegate>"
v56@0:8@16@24@32@40@48
v32@0:8@"CloudTabGroupSyncCoordinator"16@"NSSet"24
v32@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSSet"24@"NSString"32
v56@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24@"NSString"32@"NSString"40@"CKRecordID"48
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24@"CKRecordID"32
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24@"NSDate"32
v24@0:8@"CloudTabGroupMaintenanceActivity"16
v32@0:8@?16@?24
@"CloudTabGroupMaintenanceActivity"
@"CloudTabGroupSyncCoordinator"
@"CloudTabGroupPresenceUpdater"
@"NSMapTable"
@"CKSystemSharingUIObserver"
@"CloudTabGroupSyncDebugger"
@"RBSProcessMonitor"
@"<CloudTabGroupSyncManagerDelegate>"
@"<CloudBookmarkSyncMigrationSyncDownHandlerDelegate>"
v32@0:8@"WBSSQLiteDatabase"16@"NSError"24
i16@0:8
v20@0:8i16
v24@0:8i16i20
i24@0:8@16
@"<CloudExtensionSQLiteStoreDelegate>"
@"<CloudBookmarkUpdater>"
B24@0:8@"NSString"16
@"<WBSBookmarkDBAccess>"16@0:8
@"<CloudBookmarkDatabaseLockArbiterDelegate>"
@76@0:8@16@24@32@40B48@52@60@68
@96@0:8@16@24@32@40@48@56B64B68@72@80@88
v96@0:8@16@24@32@40@48@56B64B68@72@80@88
@32@0:8@16r*24
i20@0:8i16
i32@0:8q16@24
i32@0:8@16@24
@"NSURL"
@"WBSSQLiteDatabase"
@64@0:8@16@24B32B36@40@48@56
@64@0:8@16@24B32@36B44@48@56
@"CloudTabDevice"
@"CloudTabCloseRequest"
v24@0:8^v16
v52@0:8i16@20@28@36@?44
@40@0:8@16@24@?32
@44@0:8i16@20@28@36
@36@0:8i16@20@28
v44@0:8@16@24B32@36
@44@0:8@16@24@32B40
v36@0:8@16@24B32
B40@0:8@16@24@32
@48@0:8@16#24@32@40
@36@0:8@16@24i32
@52@0:8@16@24@32i40@44
Q40@0:8@16@24@32
@56@0:8@16@24q32@40@48
@"CloudTabGroupAccountPropertiesStore"
@"CloudTabGroupExpiredChangeTokenHandler"
@"NSHashTable"
@"SWHighlightCenter"
@"<CloudTabGroupSyncCoordinatorDelegate>"
@"CKOperationConfiguration"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mobilesafari</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.application-identifier</key>
<string>com.apple.Safari</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.SafariShared.CloudTabs</key>
<string>com.apple.SafariShared.CloudTabs</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.container-required</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mobilesafarishared</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>SafariBookmarksSyncAgent</string>
</array>
</dict>
</plist>
O00
application-identifier
com.apple.mobilesafari0
aps-connection-initiate
aps-environment
production04 com.apple.application-identifier
com.apple.Safari0>0com.apple.developer.icloud-container-environment
Production01#com.apple.developer.icloud-services0
CloudKit0H4com.apple.private.MobileGestalt.AllowedProtectedKeys0
UniqueDeviceID0+&com.apple.private.accounts.allaccounts
0.)com.apple.private.aps-connection-initiate
0*%com.apple.private.cloudkit.masquerade
5com.apple.private.cloudkit.serviceNameForContainerMap
F0D com.apple.SafariShared.CloudTabs com.apple.SafariShared.CloudTabs0.)com.apple.private.cloudkit.setEnvironment
0-(com.apple.private.cloudkit.systemService
0G-com.apple.private.security.container-required
com.apple.mobilesafari0.)com.apple.private.security.storage.Safari
com.apple.private.tcc.allow0
kTCCServiceLiverpool0)$com.apple.runningboard.process-state
0[9com.apple.security.exception.shared-preference.read-write0
com.apple.mobilesafarishared0
platform-application
seatbelt-profiles0
SafariBookmarksSyncAgent
!$'*
u"A$
b@M:::
 $'*-
com.apple.SafariBookmarksSyncAgent.Push
v8@?0
com.apple.icloud-container.
CloudExtensions
CloudExtensionZoneSubscription
com.apple.SafariBookmarksSyncAgent.CloudExtensions.CloudExtensionStore.%@.%p.operationQueue
com.apple.SafariBookmarksSyncAgent.CloudExtensions.CloudExtensionStore.%@.%p.internalQueue
com.apple.SafariBookmarksSyncAgent.CloudExtensions.CloudExtensionStore.%@.%p.completionHandlerQueue
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSError"8
v24@?0@"CKSubscription"8@"NSError"16
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"CKRecord"8@"NSError"16
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
B16@?0@"NSError"8
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
com.apple.private.safari.can-use-bookmarks-sync-agent
DebugHierarchyCheckerEnabled
LastDatabaseServerChangeToken.
CloudSettings
NewestLaunchedSafariBookmarksSyncAgentVersion
DebugForceMigrationFromSafariSyncControllerVersionKey
604.4
614.1.22
614.1.25.0.2
614.4.6
Bookmarks Sync Agent State
localMigrationState
@"NSDictionary"8@?0
com.apple.Safari.CloudBookmarks.SafariBookmarksSyncAgent.SafariSyncController.%@.%p._operationDispatchQueue
com.apple.Safari.CloudBookmarks.SafariBookmarksSyncAgent.%@.%p.operationQueue
com.apple.SafariBookmarksSyncAgent.ActivityCheckInQueue
com.apple.SafariBookmarksSyncAgent.CustomizationSyncQueue
v24@?0q8@"NSError"16
v16@?0q8
SafariSyncController determine encryption state of cloud settings container transaction
does
does not
v24@?0@"CKAccountInfo"8@"NSError"16
Safari
v24@?0@"WBSCloudBookmarksRemoteMigrationInfo"8@"NSError"16
v16@?0@"NSArray"8
SafariSyncController get CloudTabRemoteStore transaction
v16@?0@"CloudTabRemoteStore"8
SafariSyncController save Per-Site Setting transaction
v24@?0@"NSString"8@"NSError"16
v16@?0@"NSDictionary"8
v20@?0@"NSData"8B16
UndefinedDeviceClass
DeviceClassNumber
iPhone
iPad
default
v16@?0@"NSTimer"8
SafariSyncController delete Safari background image transaction
SafariSyncController perform per site setting sync transaction
v20@?0@"NSSet"8B16
SafariSyncController perform customization sync transaction
SafariSyncController save extension states transaction
SafariSyncController save extension device transaction
SafariSyncController get extension states transaction
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
SafariSyncController delete extension devices transaction
SafariSyncController delete extension states database transaction
@"NSDictionary"16@?0@"WBTabGroup"8
0.0.0
Sync Delay Timer After Push Notification Transaction
v24@?0@"SafariSyncController"8@"CKRecordZoneID"16
v44@?0@"WBSRetryableCKFetchDatabaseChangesOperation"8@"SafariSyncController"16@"CKServerChangeToken"24B32@"NSError"36
Push Notification Database Changes Check
SafariSyncController network connectivity XPC activity check in transaction
SafariSyncController perform bookmark sync transaction
SafariSyncController fetch remote migration state transaction
v32@?0q8@"NSString"16@"NSError"24
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?BB>16
Cloud Tabs Notification Transaction
data
isLightAppearance
SafariSyncController update Safari's local settings transaction
SafariSyncController delete Safari's local background image transaction
SafariSyncController saving Safari's Page Zoom sync data to disk
v16@?0B8B12
v16@?0@"NSObject<OS_xpc_object>"8
CloudKit Subscription Request
v24@?0Q8@"NSError"16
B32@?0Q8@"CKSubscription"16@"NSError"24
v12@?0B8
SafariSyncController perform tab groups sync transaction
SafariSyncController immediate tab groups sync
ckShortDescription
User Did Update Database
Received Push Notification
Account Added
Zone Creation
Account Modified
Local Client Finished Syncing
PCS Identities Changed
The attempted operation requires an entitlement
Manatee is currently unavailable on the current account.
com.apple.SafariBookmarksSyncAgent.XPC.BookmarkSyncNetworkConnectivity
com.apple.SafariBookmarksSyncAgent.XPC.InitialManateeCloudTabFetchRetry
Bookmarks
CloudKit Tabs
Tab Groups Private Database
Tab Groups Shared Database
Customization Sync
Extension State Sync
com.apple.SafariBookmarksSyncAgent.XPC.ZoneSubscriptionRegistration
com.apple.SafariBookmarksSyncAgent.XPC.PeriodicRemoteMigrationStateObserver
com.apple.SafariBookmarksSyncAgent.migration
com.apple.SafariBookmarksSyncAgent.XPC.TabGroupSyncNetworkConnectivity
<None>
Update Remote
Update Local
Update Local Parent Or Position
Delete Local
Undelete Local
<%@>
B16@?0@"CloudBookmarkItemConfiguration"8
+[CloudBookmark cloudBookmarkWithRecordName:inDatabase:databaseAccessor:updater:]
+[CloudBookmark cloudBookmarkForReparentedItemWithRecordName:inDatabase:databaseAccessor:updater:]
+[CloudBookmark cloudBookmarkToMigrateItemWithRecordName:inDatabase:databaseAccessor:updater:]
Deleted
+[CloudBookmark cloudBookmarkWithAddedRecord:configuration:inDatabase:databaseAccessor:updater:]
ParentAndPosition
-[CloudBookmark _initWithChange:databaseAccessor:updater:]
ParentFolder
Position
MinimumAPIVersion
v32@?0@"NSString"8@"NSURL"16^B24
v32@?0@"NSString"8@16^B24
v24@?0@"NSString"8@16
v32@?0@"NSString"8@"WBSPair"16^B24
v32@?0@"NSString"8@"WBSCRDTGeneration"16^B24
Folder
Bookmark
Move
Modify
Delete
CKBAItemTypeBookmark
CKBAItemTypeFolder
<Unknown CKBABookmarkType %ld>
CKBAFolderTypeRegular
CKBAFolderTypeFavorites
CKBAFolderTypeBookmarksMenu
CKBAFolderTypeReadingList
CKBAFolderTypeTabGroupScopedBookmark
<Unknown CKBAFolderType %ld>
cloudBookmarkAccountIdentityDidChange
cloudBookmarkAccountPropertiesDidChange
ccom.apple.Safari.CloudBookmarks.CloudExtensionSyncCoordinator.extensionStateSavingQueue
com.apple.Safari.CloudBookmarks.CloudExtensionSyncCoordinator.extensionStateFetchingQueue
Cloud Extension State Saving
Cloud Extension Device Deleting
Cloud Extension State Fetching
v16@?0@"CloudExtensionDevice"8
v16@?0@"NSData"8
v16@?0@"CKRecordID"8
v32@?0@"CKServerChangeToken"8@"NSData"16@"NSError"24
v12@?0i8
@"NSDictionary"16@?0@"CloudExtensionDevice"8
CloudExtensions.db
Bookmarks-Backup-for-31802262
http
TitleAndIdentityHash
TitleURLAndIdentityHash
TabGroupTabParticipantPresence
Participant
TabGroupTab
Lock
UserTabGroupPresence
UserPresence_
com.apple.Safari.CloudBookmarks.CloudTabGroupPresenceUpdater.%@.%p._processUpdateQueue
v24@?0@"CKRecordID"8@"NSError"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v28@?0@"CKRecord"8B16@"NSError"20
com.apple.Safari.CloudBookmarks.CloudBookmarkDatabaseHandler.%@.%p.imageSavingQueue
Asset temporary or destination URL was not available.
CloudBookmarksOverrideDeviceIdentifier
CloudSettingsZoneSubscription
com.apple.SafariBookmarksSyncAgent.CloudSettings.CloudSettingStore.%@.%p.operationQueue
com.apple.SafariBookmarksSyncAgent.CloudSettings.CloudSettingStore.%@.%p.internalQueue
com.apple.SafariBookmarksSyncAgent.CloudSettings.CloudSettingStore.%@.%p.completionHandlerQueue
Cloud Settings Encryption Info Fetching
v24@?0@"CKRecordZone"8@"NSError"16
31742989
32414244
v32@?0@"NSString"8@"NSString"16^B24
q24@?0@"NSString"8@"NSString"16
q24@?0@"WBSCRDTPosition"8@"WBSCRDTPosition"16
CloudExtensionDevice
CloudExtensionState
com.apple.Safari.CloudBookmarks
Errors
v32@?0@8@"NSError"16^B24
_generation
_deviceIdentifier
SyncRequirements
MinimumSyncAPIVersion
EncryptionInfo
KeyID
MigrationState
MigratorDeviceIdentifier
metadata_device_type
DeviceOSType
DeviceOSVersion
DeviceOSBuild
DeviceOSVersionNumber
DeviceSoftwareBundleId
DeviceSoftwareVersion
Tab Collection Maintenance
com.apple.SafariBookmarksSyncAgent.%@.%p
Tab Collection Maintenance Transaction
com.apple.SafariBookmarksSyncAgent.XPC.TabCollectionMaintenance
Migration coordinator
CloudBookmarksDebugDelayInSecondsBeforeStealingRightToMigrate
v24@?0@"NSError"8@?<v@?>16
DestinationDevice
TabURL
TabUUID
DestinationDeviceUUID
LastModified
DictionaryType
CloseTabRequest
<%@: %p; tabURL = "%@"; tabUUID = "%@"; destination device uuid = "%@";
BookmarkList
BookmarkLeaf
TabGroup
TabGroupScopedBookmarkList
TabGroupScopedBookmarkLeaf
IdentityHash
PreviewTextAndHasUserDefinedPreviewText
Title
DateAdded
DateLastViewed
ImageURL
PreviewText
HasUserDefinedPreviewText
B16@?0@"CKRecord"8
IsSelectedFavoritesFolder
LastSelectedTab
BackgroundImage
IsPinned
@"NSString"16@?0@"NSString"8
Cloud Settings Data Fetching
Cloud Settings Data Saving
Cloud Settings Data Deletion
Cloud Settings Background Image Saving
customizationSyncServerToken
settingsSyncAccountHash
@"CKRecord"32@?0@"CKRecord"8@"CKRecord"16@"NSError"24
cloudBookmarkDidDetectBug
bugIDs
CloudBookmarkStoreErrorDomain
Cloud Bookmark Migration State Check
ZoneSubscription
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.%@.%p.internalQueue
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.%@.%p.completionHandlerQueue
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.%@.%p.operationQueue
Cloud Bookmark Migration From DAV
Cloud Bookmark Subscription Request
Tab Groups Subscription Request
v24@?0@"WBSHashGenerator"8@"NSError"16
v48@?0@"WBSRetryableCKModifyRecordZonesOperation"8@"CloudBookmarkStore"16@"NSArray"24@"NSArray"32@"NSError"40
v32@?0@"WBSRetryableCKModifyRecordsOperation"8@"CloudBookmarkStore"16@"NSError"24
v48@?0@"WBSRetryableCKModifyRecordsOperation"8@"CloudBookmarkStore"16@"NSArray"24@"NSArray"32@"NSError"40
v32@?0@"CloudBookmarkStore"8@"CKRecordZoneID"16@"NSError"24
@"CKRecordID"16@?0@"CKRecordZoneID"8
v40@?0@"CloudBookmarkStore"8@"CKRecord"16@"CKRecordID"24@"NSError"32
v40@?0@"WBSRetryableCKFetchRecordsOperation"8@"CloudBookmarkStore"16@"NSDictionary"24@"NSError"32
v24@?0@"CloudBookmarkStore"8@"CKRecordZoneID"16
v44@?0@"WBSRetryableCKFetchDatabaseChangesOperation"8@"CloudBookmarkStore"16@"CKServerChangeToken"24B32@"NSError"36
v40@?0@"CloudBookmarkStore"8@"CKRecordID"16@"CKRecord"24@"NSError"32
v32@?0@"CloudBookmarkStore"8@"CKRecordID"16@"NSString"24
v52@?0@"CloudBookmarkStore"8@"CKRecordZoneID"16@"CKServerChangeToken"24@"NSData"32B40@"NSError"44
v32@?0@"WBSRetryableCKFetchRecordZoneChangesOperation"8@"CloudBookmarkStore"16@"NSError"24
v16@?0@"WBSRetryableCKModifyRecordsOperation"8
@"CKRecordID"32@?0@"CKRecord"8Q16^B24
v32@?0@"CloudBookmarkStore"8@"CKRecordID"16@"NSError"24
v40@?0@"CloudBookmarkStore"8@"NSURL"16@"CKShareMetadata"24@"NSError"32
v32@?0@"WBSRetryableCKFetchShareMetadataOperation"8@"CloudBookmarkStore"16@"NSError"24
v40@?0@"CloudBookmarkStore"8@"CKUserIdentityLookupInfo"16@"CKShareParticipant"24@"NSError"32
B16@?0@"CKShareParticipant"8
v24@?0@"CKShare"8@"NSError"16
v32@?0@"WBSRetryableCKFetchShareParticipantsOperation"8@"CloudBookmarkStore"16@"NSError"24
v40@?0@"CloudBookmarkStore"8@"CKShareMetadata"16@"CKShare"24@"NSError"32
v32@?0@"WBSRetryableCKAcceptSharesOperation"8@"CloudBookmarkStore"16@"NSError"24
v16@?0@"WBSRetryableCKFetchSubscriptionsOperation"8
v40@?0@"WBSRetryableCKFetchSubscriptionsOperation"8@"CloudBookmarkStore"16@"NSDictionary"24@"NSError"32
v16@?0@"WBSRetryableCKModifySubscriptionsOperation"8
v48@?0@"WBSRetryableCKModifySubscriptionsOperation"8@"CloudBookmarkStore"16@"NSArray"24@"NSArray"32@"NSError"40
v40@?0@"WBSRetryableCKFetchRecordZonesOperation"8@"CloudBookmarkStore"16@"NSDictionary"24@"NSError"32
v24@?0@"NSArray"8@"NSError"16
@"CKRecordID"16@?0@"NSString"8
@"NSString"24@?0@"CKRecordID"8^B16
metadata_zone
MigrationStateEncodedRecordData
TabGroupMigrationStateEncodedRecordData
ComposedIdentifier
ContainingAppAdamID
DisplayName
Enabled
EnabledByUserGesture
OwningDevice
IOSAppBundleIdentifier
IOSExtensionBundleIdentifier
MacOSAppBundleIdentifier
MacOSExtensionBundleIdentifier
v32@?0@"NSString"8@"NSDictionary"16^B24
<%@: %p; composedIdentifier = "%@"; containingAppAdamID = "%@"; displayName = "%@"; lastModifiedDate = "%@"; owning device uuid = "%@"; isEnabled = %d; wasEnabledByUserGesture = %d>
Sync coordinator
com.apple.Safari.CloudBookmarks.CloudBookmarkSyncCoordinator.%@.%p.imageSavingQueue
v20@?0q8B16
v16@?0@"WBSCloudBookmarksRemoteMigrationInfo"8
@"CloudBookmark"16@?0^B8
record
@"CKRecord"32@?0@"CKRecord"8@"CKRecord"16q24
32548082
Asset temporary url or destination URL was not available.
v32@?0@"NSSet"8@"NSSet"16@"NSError"24
v24@?0@"NSSet"8@"NSError"16
Subtitle
SymbolName
ExtraAttributes
Metadata
Children
@"CloudTabGroupSyncEvent"16@?0@"NSDictionary"8
%@ - %@
dictionaryRepresentation
v16@?0@"CloudTabSyncCoordinator"8
v16@?0B8i12
v24@?0@"NSArray"8@"NSArray"16
CloudTabs.db
Sync migration coordinator
(null)
deviceIdentifier
hasAccountHash
changes
localBookmarks
domain
code
description
remoteMigrationStateError
remoteMigrationState
migratorDeviceIdentifier
AwaitingMigration
InProgress
Finished
Unknown
changeType
itemType
serverID
modifiedAttributes
hasSyncData
hasCKRecord
hasPosition
hasTitleGeneration
count
addCount
deleteCount
moveCount
modifyCount
summary
details
bookmarksCount
foldersCount
title
children
isFavorites
IsTabGroup
isTabGroup
folderType
bookmarkType
Regular
Favorites
ReadingList
BookmarksMenu
TabGroupFavorites
CloudTabs
CloudTabsZoneSubscription
com.apple.Safari.CloudBookmarks.CloudTabRemoteStore.%@.%p.operationQueue
TabGroupSyncDebuggerEnabled
TabGroupSyncDebugger.plist
Change Tag
Record ID
Record Type
Library/Safari
Sync Up
icloud.and.arrow.up
Sync Down
icloud.and.arrow.down
Auxiliary Record Deletion
bolt.horizontal.icloud
square.on.square
square.text.square
folder
bookmark
person.crop.circle
record.circle
@"NSDictionary"16@?0@"CloudTabGroupSyncEvent"8
Fetch Zone Changes
square.and.arrow.down
Last Server Change Token
Zone ID
v32@?0@"CKRecordZoneID"8@"CKFetchRecordZoneChangesConfiguration"16^B24
Send Batch
paperplane
Save Record
Delete Record
trash.circle
Fetched Record
B16@?0@"CloudTabGroupSyncEvent"8
Sync Manager
TabGroupsPrivateDatabaseSubscription
TabGroupsSharedDatabaseSubscription
TabGroupsZoneSubscription
v32@?0@"CKRecordID"8@"CKShare"16@"NSError"24
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
com.apple.SafariBookmarksSyncAgent.%@.%p._tabCollectionQueue
Cloud Tab Groups Sync (%@)
Cloud Tab Groups Migration
Only container %@ is supported, received share metadata from container %@
Cloud Tab Groups Accept Shared Tab Group
v32@?0q8@"CKShare"16@"NSError"24
Cloud Tab Groups Setup Shared Tab Group
Cloud Tab Groups Update Tab Group Presence
Cloud Tab Groups Accept Share
com.apple.Safari.CloudBookmarks.CloudExtensionSQLiteStore
DELETE FROM cloud_extension_devices WHERE device_uuid = ?
DELETE FROM cloud_extension_states WHERE record_name = ?
CREATE TABLE cloud_extension_devices (device_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,device_name TEXT,last_modified REAL NOT NULL,new_tab_page_composed_identifier TEXT,new_tab_page_set_by_user_gesture BOOLEAN DEFAULT 0,new_tab_page_last_modified REAL NOT NULL)
CREATE TABLE cloud_extension_states (record_name TEXT PRIMARY KEY NOT NULL,composed_identifier TEXT NOT NULL,system_fields BLOB NOT NULL,owning_device_uuid TEXT NOT NULL,containing_app_adam_id TEXT,display_name TEXT NOT NULL,is_enabled BOOLEAN DEFAULT 0,was_enabled_by_user_gesture BOOLEAN DEFAULT 0,ios_app_bundle_identifier TEXT,ios_extension_bundle_identifier TEXT,mac_app_bundle_identifier TEXT,mac_extension_bundle_identifier TEXT,last_modified REAL NOT NULL,FOREIGN KEY(owning_device_uuid) REFERENCES cloud_extension_devices(device_uuid) ON DELETE CASCADE)
CREATE INDEX cloud_extension_states__owning_device_uuid ON cloud_extension_states (owning_device_uuid)
CREATE TABLE metadata (key TEXT NOT NULL UNIQUE, value)
DROP TABLE IF EXISTS cloud_extension_devices
DROP TABLE IF EXISTS cloud_extension_states
DROP TABLE IF EXISTS metadata
SELECT device_uuid, system_fields, device_name, last_modified, new_tab_page_composed_identifier, new_tab_page_set_by_user_gesture, new_tab_page_last_modified FROM cloud_extension_devices
SELECT system_fields, device_name, last_modified, new_tab_page_composed_identifier, new_tab_page_set_by_user_gesture, new_tab_page_last_modified FROM cloud_extension_devices WHERE device_uuid = ?
INSERT INTO cloud_extension_devices (device_uuid, system_fields, device_name, last_modified, new_tab_page_composed_identifier, new_tab_page_set_by_user_gesture, new_tab_page_last_modified)VALUES (?, ?, ?, ?, ?, ?, ?)ON CONFLICT(device_uuid) DO UPDATE SET device_uuid = ?1, system_fields = ?2, device_name = ?3, last_modified = ?4, new_tab_page_composed_identifier = ?5, new_tab_page_set_by_user_gesture = ?6, new_tab_page_last_modified = ?7
SELECT composed_identifier, system_fields, containing_app_adam_id, display_name, is_enabled, was_enabled_by_user_gesture, ios_app_bundle_identifier, ios_extension_bundle_identifier, mac_app_bundle_identifier, mac_extension_bundle_identifier, last_modified, record_name FROM cloud_extension_states WHERE owning_device_uuid = ?
INSERT OR REPLACE INTO cloud_extension_states (record_name, composed_identifier, system_fields, owning_device_uuid, containing_app_adam_id, display_name, is_enabled, was_enabled_by_user_gesture, ios_app_bundle_identifier, ios_extension_bundle_identifier, mac_app_bundle_identifier, mac_extension_bundle_identifier, last_modified)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
v24@?0@"NSString"8@"NSString"16
Migration state lock arbiter property
DeviceName
NewTabPageComposedIdentifier
NewTabPageLastModified
NewTabPageSetByUserGesture
<%@: %p; name = "%@"; uuid = %@; lastModified = %@; composedIdentifierForNewTabPage = "%@"; newTabPageSetByUserGesture = %@; lastModifiedDateForNewTabPage = %@;  cloudExtensionStates = (
    %@
    
B32@?0@"CloudExtensionState"8Q16^B24
IsShowingReader
ReaderScrollPositionPageIndex
OwningSceneID
pageIndex
ReaderScrollPosition
UUID
<%@: %p; title = "%@"; url = "%@"; uuid = "%@"; owning device uuid = "%@"; owning sceneID = "%@"; position = %@; isShowingReader = %d; readerScrollPositionPageIndex = %@; isPinned = %d>
server_change_token
Library/Safari/
PRAGMA foreign_keys = ON
db-lock
db-shm
db-wal
PRAGMA user_version = %d
SELECT value FROM metadata WHERE key = ?
UPDATE metadata SET value = ? WHERE key = ?
INSERT INTO metadata (key, value) VALUES (?, ?)
DELETE FROM metadata WHERE key = ?
VACUUM
PRAGMA user_version
HasDuplicateDeviceName
IsEphemeralDevice
Capabilities
Tabs
CloudKitBookmarkSyncing
Device
B32@?0@"CloudTab"8Q16^B24
<%@: %p; name = "%@"; uuid = %@; lastModified = %@; hasDuplicateName = %d; isEphemeralDevice = %d; tabs = (
    %@
wbsCloudTabDictionaryRepresentation
CloudTabDevice
CloudTab
CloudTabCloseRequest
use_manatee_container
com.apple.Safari.CloudBookmarks.CloudTabSQLiteStore
DELETE FROM cloud_tab_devices WHERE device_uuid = ?
DELETE FROM cloud_tabs WHERE tab_uuid = ?
DELETE FROM cloud_tab_close_requests WHERE close_request_uuid = ?
CREATE TABLE cloud_tab_devices (device_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,device_name TEXT,has_duplicate_device_name BOOLEAN DEFAULT 0,is_ephemeral_device BOOLEAN DEFAULT 0,last_modified REAL NOT NULL)
CREATE TABLE cloud_tabs (tab_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,device_uuid TEXT NOT NULL,position BLOB NOT NULL,title TEXT,url TEXT NOT NULL,is_showing_reader BOOLEAN DEFAULT 0,is_pinned BOOLEAN DEFAULT 0,reader_scroll_position_page_index INTEGER,scene_id TEXT,FOREIGN KEY(device_uuid) REFERENCES cloud_tab_devices(device_uuid) ON DELETE CASCADE)
CREATE INDEX cloud_tabs__device_uuid ON cloud_tabs (device_uuid)
CREATE TABLE cloud_tab_close_requests (close_request_uuid TEXT PRIMARY KEY NOT NULL,system_fields BLOB NOT NULL,destination_device_uuid TEXT NOT NULL,url TEXT NOT NULL,tab_uuid TEXT NOT NULL,FOREIGN KEY(destination_device_uuid) REFERENCES cloud_tab_devices(device_uuid) ON DELETE CASCADE)
DROP TABLE IF EXISTS cloud_tab_devices
DROP TABLE IF EXISTS cloud_tabs
DROP TABLE IF EXISTS cloud_tab_close_requests
SELECT device_uuid, system_fields, device_name, has_duplicate_device_name, is_ephemeral_device, last_modified FROM cloud_tab_devices
SELECT system_fields, device_name, has_duplicate_device_name, is_ephemeral_device, last_modified FROM cloud_tab_devices WHERE device_uuid = ?
INSERT INTO cloud_tab_devices (device_uuid, system_fields, device_name, has_duplicate_device_name, is_ephemeral_device, last_modified)VALUES (?, ?, ?, ?, ?, ?)ON CONFLICT(device_uuid) DO UPDATE SET device_uuid = ?1, system_fields = ?2, device_name = ?3, has_duplicate_device_name = ?4, is_ephemeral_device = ?5, last_modified = ?6
SELECT tab_uuid, system_fields, position, title, url, is_pinned, is_showing_reader, reader_scroll_position_page_index, scene_id FROM cloud_tabs WHERE device_uuid = ?
q24@?0@"CloudTab"8@"CloudTab"16
INSERT OR REPLACE INTO cloud_tabs (tab_uuid, system_fields, device_uuid, position, title, url, is_showing_reader, is_pinned, reader_scroll_position_page_index, scene_id)VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SELECT close_request_uuid, system_fields, destination_device_uuid, url, tab_uuid FROM cloud_tab_close_requests
INSERT OR REPLACE INTO cloud_tab_close_requests (close_request_uuid, system_fields, destination_device_uuid, url, tab_uuid)VALUES (?, ?, ?, ?, ?)
Cloud Tab Data Fetching
Cloud Tab Data Saving
Cloud Tab Close Requests Saving
Cloud Tab Close Requests Deleting
Cloud Tab Devices Deleting
Cloud Tab Zone Deleting
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.tabSavingQueue
com.apple.Safari.CloudBookmarks.CloudBookmarkStore.tabFetchingQueue
v16@?0@"CloudTabDevice"8
DAV-
com.apple.CloudKitBookmarks.CyclerCloudBookmarksAssistant
https://fake-dav-id-for-testing/
Migration failed
Unable to acquire database lock
@"WBSPair"32@?0@"NSString"8@"WBSPair"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
change
B24@?0@"CKRecord"8^B16
B24@?0@"CKRecordID"8^B16
TabGroupTabParticipantStatus
TabReadStatus_
ReadStatus
TabGroupParticipantPosition
TabGroupPosition_
TabGroupPosition
LastKnownMinimumVersionsInCircleCacheDate
LastKnownMinimumSafariVersionInCircle
LastKnownMinimumIOSVersionInCircle
LastKnownMinimumMacOSVersionInCircle
encounteredUnknownOSVersionInCircle
16.0
13.0
com.apple.SafariSyncService.%@.%p._internalQueue
com.apple.SafariSyncService.%@.%p._assetSavingQueue
Ignoring sync request because a sync request is already pending
Ignoring sync request for %@ changes because a pre-sync up request is already running
local
remote
Ignoring sync request for remote changes because a pre-sync down request is already running
v32@?0q8@"WebBookmarkCollection"16@"NSError"24
@"WBBookmarkDatabaseSyncData"16@?0@"WBBookmarkDatabaseSyncData"8
v32@?0@"CKRecordZone"8@"WBSHashGenerator"16@"NSError"24
@"CKRecord"12@?0i8
B8@?0
@"WBBookmarkSyncData"16@?0@"WBBookmarkSyncData"8
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
99999999
9999999
@"NSString"32@?0@"CKRecordZoneID"8Q16^B24
v24@?0@"CKRecordZoneID"8@"NSError"16
@32@?0@"CKRecordID"8@"NSMutableSet"16^B24
recordID
recordID.ckShortDescription
v32@?0@"CKRecordID"8@"NSMutableSet"16^B24
B24@?0@"CKShareParticipant"8^B16
@"WBBookmarkSyncData"24@?0@"WebBookmark"8@"WBBookmarkSyncData"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16^B24
v32@?0@"CKServerChangeToken"8@"NSArray"16@"NSError"24
@"CKFetchRecordZoneChangesConfiguration"32@?0@"CKRecordZoneID"8Q16^B24
v48@?0@"CKServerChangeToken"8@"NSArray"16@"NSArray"24@"NSArray"32@"NSError"40
v16@?0@"WebBookmark"8
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
@"NSString"32@?0@"CKRecordZoneID"8@"NSError"16^B24
Asset destination URL was not available.
Sync Coordinator Saving Assets
record.ckShortDescription
v16@?0@"SWCollaborationHighlight"8
v24@?0@"SWCollaborationHighlight"8@"NSError"16
v40@?0@"CloudRemoteStore"8@"CKRecordID"16@"CKRecord"24@"NSError"32
v32@?0@"CloudRemoteStore"8@"CKRecordID"16@"NSString"24
v52@?0@"CloudRemoteStore"8@"CKRecordZoneID"16@"CKServerChangeToken"24@"NSData"32B40@"NSError"44
v32@?0@"WBSRetryableCKFetchRecordZoneChangesOperation"8@"CloudRemoteStore"16@"NSError"24
com.apple.SafariShared
CloudBookmarks
DiagnosticExtension
KeyedArchiver
SiriLink
T@"CKContainer",R,N,V_container
JSONObjectWithData:options:error:
T@"NSSet",R,C,N
T#,R,N,V_rootJSONObjectType
T@"NSString",R,C,N,V_recordType
T@"<CloudBookmarkDatabaseLockArbiterDelegate>",W,N,V_delegate
TB,N,V_disabled
T@"<CloudBookmarkSyncMigrationSaveHandlerDelegate>",W,N,V_delegate
TB,R,N,GwasEnabledByUserGesture
T@"<CloudBookmarkUpdater>",R,W,N,V_updater
Tq,N,Ssafari_setMigrationState:
T@"<CloudSettingSyncCoordinatorDelegate>",W,N,V_delegate
T@"<CloudTabGroupSyncCoordinatorDelegate>",W,N,V_delegate
_action
T@"<CloudTabLocalStore>",R,N,V_cloudTabLocalStore
_cachedSharedPresenceRecordName
T@"<CloudTabLocalStoreDelegate>",W,N,V_delegate
_changesDictionaryFromDatabase:
T@"<WBSBookmarkDBAccess>",R,N
_cloudTabsContainerManateeState
T@"ACAccount",R,N
_dequeueNextCloudBookmarkToSave
T@"CKContainer",R,N
_errorWithCode:
T@"CKOperationConfiguration",R,V_operationConfiguration
_extensionStore
T@"CKRecord",R,N,V_encryptionRecord
_fetchedDevices
T@"CKRecord",R,N,V_record
_initWithReparentedItem:configuration:databaseAccessor:updater:
T@"CKRecordZoneID",R,C,N
_isDatabaseOpen
T@"CKRecordZoneID",R,N,V_bookmarksRecordZoneID
_migrationDidCompleteWithError:
T@"CKReference",R,N
_namesOfRecordsSavedToTheServer
T@"CloudBookmarkAccountPropertiesStore",R,N,V_accountPropertiesStore
_operationQueue
T@"CloudBookmarkItemConfiguration",R,N
_processMonitor
T@"CloudBookmarkStore",R,N,V_bookmarkStore
_record
T@"CloudBookmarkSyncMigrationPositionGenerator",R,N,V_parentGenerator
_saveReparentedBookmarksHandler
T@"CloudTabRemoteStore",R,N,V_cloudRemoteStore
_stateCollector
T@"NSArray",C,N,V_itemConfigurations
_tabSyncArbiter
T@"NSArray",R,C,N
_updatedRecords
T@"NSArray",R,C,N,V_cloudBookmarkItemConfigurations
_vacuum
T@"NSData",C,N,V_clientChangeTokenData
_zoneID
T@"NSDate",&,N,V_endDate
account
T@"NSDate",R,N
address
T@"NSDictionary",R,C,N,V_parentRecordNamesToMovedChildRecordNames
beginSyncingWithOperationGroup:isLocalChange:completionHandler:
T@"NSError",&,V__cloudTabStoreError
canParseRecord:
T@"NSObject<OS_dispatch_queue>",&,N,V__databaseQueue
changes
T@"NSOrderedSet",R,C,N,V_identityHashKeys
cloudSettingsSyncEngineAccessor
T@"NSSet",R,C,N,V_deletedRecordNames
composedIdentifierForNewTabPage
T@"NSSet",R,C,N,V_keysWithoutGenerations
dealloc
T@"NSSet",R,C,N,V_movedRecordNames
deleteRecordWithID:inDatabase:operationGroup:completionHandler:
T@"NSSet",R,C,N,V_primaryCKRecordKeysToClear
didNotSaveRecordsAfterMigration
T@"NSSet",R,C,N,V_updatedRecords
encryptedValues
T@"NSString",&,N,Ssafari_setMigratorDeviceIdentifier:
ephemeralDevice
T@"NSString",C,N,V_subtitle
extraAttributes
T@"NSString",C,N,V_title
fileURL
T@"NSString",R,C,N
initWithZoneID:
T@"NSString",R,C,N,V_recordZoneSubscriptionID
isProxy
T@"NSString",R,N
isValid
T@"WBCollectionConfiguration",R,N,V_configuration
migrationRecord
T@"WBSCRDTPosition",R,C,N
needsSyncUpdate
T@"WBSSQLiteDatabase",&,N,V__database
numberWithBool:
T@,R,N,V_changeToken
parentGenerator
TB,N,GisSyncing,V_syncing
recordIDForTab:
TB,R,N
referenceAction
TB,R,N,GisDatabaseOpen,V_databaseOpen
release
TB,R,N,GisEnabled
safari_cloudExtensionsContainer
TB,R,N,GisPinned
safari_errorByAddingCloudKitPrivacyPreservingUserInfoForItemID:
TB,R,N,Gsafari_isCloudExtensionDeviceRecord
safari_folderTypeForRecordName:
TB,R,N,Gsafari_isCloudTabCloseRequestRecord
safari_isSyncRequirementsRecord
TB,R,N,Gsafari_isEncryptionInfoRecord
safari_onlyCloudKitPartialError
TB,R,N,Gsafari_isSyncRequirementsRecord
TB,R,N,V_usesManateeContainer
setAccountHash:
TQ,N,Ssafari_setMinimumAPIVersion:
setExpirationAfterTimeInterval:
TQ,R
setFetchRecordsCompletionBlock:
Tq,N
setPreviewText:
Tq,R,N
setShareRecord:
Tq,R,N,V_itemType
setWithObjects:
Tr^v,R,N
setXpcActivity:
URLByAppendingPathExtension:
stringByAppendingPathComponent:
URLByDeletingPathExtension
syncCoordinator:didFetchRecord:
UTF8String
syncDataForKey:
UUIDString
updateFromCloudExtensionDevice:
__cloudTabStoreError
updatedRecordsInPrivateDatabase
__isBeingTornDown
.cxx_destruct
T@"NSDictionary",C,N,V_metadata
T#,R
T@"NSString",R,C,N,V_recordName
T@"<CloudBookmarkDatabaseCoordinating>",R,N,V_databaseCoordinator
T@"WBChangeRecord",R,N,V_change
T@"<CloudBookmarkStoreLocalStorage>",R,N,V_threadUnsafeLocalStorage
TB,R,N,Gsafari_isCloudTabRecord
T@"<CloudBookmarkSyncMigrationSyncDownHandlerDelegate>",W,N,V_delegate
TQ,R,N,V_action
T@"<CloudExtensionSQLiteStoreDelegate>",W,N,V_delegate
Tr^v,R,N,V_item
T@"<CloudTabGroupMaintenanceActivityDelegate>",W,N,V_delegate
__databaseQueue
T@"<CloudTabGroupSyncManagerDelegate>",W,N,V_delegate
_bookmarkEncryptionInfoRecordID
T@"<CloudTabLocalStoreDelegate>",W,N
_change
T@"<CloudTabSyncArbiterDelegate>",W,N,V_delegate
_clearRetryHandlerIsCancelling:
T@"<WBSBookmarkDBAccess>",R,N,V_databaseAccessor
_deleteLegacySectionIdentifiers
T@"ACAccountStore",R,N,V_accountStore
_detectedBugIDs
T@"CKDatabase",R,N
_events
T@"CKOperationGroup",&,N,V_defaultOperationGroup
_fetchExtensionStatesCompletion
T@"CKRecord",R,N,V_migrationRecord
_identityHashKeysToTransformers
T@"CKRecord",R,N,V_topBookmarkRecord
_insertBookmarkWithRecordName:intoExistingFolderWithRecordName:
T@"CKRecordZoneID",R,N
_localStoreShim
T@"CKRecordZoneID",R,N,V_recordZoneID
_modifiedStates
T@"CKServerChangeToken",&,N,V_serverChangeToken
_numberOfMigrationRetryAttempts
T@"CloudBookmarkAttributeValueTransformer",R,N
_processChanges
T@"CloudBookmarkItemConfiguration",R,N,V_configuration
_pushConnection
T@"CloudBookmarkStore",R,N,V_store
_rootRecordName
T@"CloudSettingStore",R,N,V_settingStore
_sendNotificationForSyncResult:
T@"NSArray",C,N,V_cloudExtensionStates
_stringForRemoteMigrationState:
T@"NSArray",C,N,V_tabs
_unsavedChanges
T@"NSArray",R,C,N,V_changes
_updatedRecordsInSharedDatabase
T@"NSData",C,N
_valueTransformerForTitleAndURL
T@"NSDate",&,N,V_beginDate
acceptShareForShareMetadata:inOperationGroup:completionHandler:
T@"NSDate",R,C,N
addParticipant:
T@"NSDictionary",R,C,N
allKeys
T@"NSError",&,V__cloudExtensionStoreError
bookmarkWithID:
T@"NSNumber",R,N
changedRowCount
T@"NSOperationQueue",R,N
cloudBookmarkItemConfigurations
T@"NSSet",R,C,N,V_deletedRecordIDs
cloudTabGroupSyncCoordinator:didUpdateShareForTabGroupWithUUID:
T@"NSSet",R,C,N,V_deletedRecordZoneIDs
containsObject:
T@"NSSet",R,C,N,V_knownKeys
deleteCloudExtensionRecords:inOperationGroup:completionHandler:
T@"NSSet",R,C,N,V_primaryCKRecordGenerationKeysToClear
deviceIdentifierForCloudKitWithCollectionType:generateIfNeeded:
T@"NSSet",R,C,N,V_primaryCKRecordKeysToSave
enabled
T@"NSSet",R,N,V_objectClasses
endDate
T@"NSString",C,N,V_rootRecordName
execute
T@"NSString",C,N,V_symbolName
fetchRemoteMigrationInfoInOperationGroup:withCompletionHandler:
T@"NSString",R,C
initFolderWithParentID:subtype:deviceIdentifier:collectionType:
T@"NSString",R,C,N,V_parentRecordName
isEmpty
T@"NSString",R,C,N,V_secondaryRecordZoneNamePrefix
isShowingReader
T@"WBCollectionConfiguration",R,C,N,V_collectionConfiguration
T@"WBSCRDTPosition",C,N
migrationStateEncodedRecordData
T@"WBSHashGenerator",R,N
T@"WebBookmarkCollection",R,N,V_collection
options
T@?,R,C,N,V_recordTestBlock
recordChangeTag
TB,N,V_threadUnsafeIncludesMigrationRecordInSaveBatch
recordTestBlock
TB,R,N,GisDatabaseOpen
refresh
TB,R,N,GisDataclassEnabled
safari_SHA1Hash
TB,R,N,GisEphemeralDevice
safari_descriptionWithoutSpaces
TB,R,N,GisShowingReader
safari_filterObjectsUsingBlock:
TB,R,N,Gsafari_isCloudExtensionStateRecord
safari_isCloudKitErrorWithCode:
TB,R,N,Gsafari_isCloudTabDeviceRecord
safari_migratorDeviceIdentifier
TB,R,N,Gsafari_isMigrationStateRecord
safari_recordNameForFolderType:
TB,R,N,GwasNewTabPageSetByUserGesture
setAcceptSharesCompletionBlock:
TB,V__isBeingTornDown
setDidReceiveNonRetryableError:
TQ,N,Ssafari_setMinimumSyncAPIVersion:
setExtraAttributesValue:forKey:
TQ,R,N
setLog:
Tq,N,Ssafari_setState:
setRecordWithIDWasDeletedBlock:
Tq,R,N,V_itemSubtype
setUpBookmarksRecordZoneInOperationGroup:withCompletionHandler:
Tq,R,N,V_type
setXPCActivity:
Tr^v,R,N,V_databaseRef
shouldScheduleDiscretionarySync
URLByDeletingLastPathComponent
subtype
URLWithString:
syncCoordinatorDidFinishSyncUp:
UUID
syncing
__cloudExtensionStoreError
updateLocalItem
__database
updater
_acceptShareForShareMetadata:inCollection:operationGroup:completionHandler:
_acceptShareForShareMetadata:inOperationGroup:completionHandler:
_acceptShareForURL:invitationTokenData:inOperationGroup:completionHandler:
_accountPropertiesStore
_accountStore
_acquireLockToSetPresenceInTabWithRecordID:inOperationGroup:isRetry:completionHandler:
_acquireLockUsingPrivatePresenceRecord:toSetPresenceInTabWithRecordID:previousPrivatePresenceRecord:inOperationGroup:isRetry:completionHandler:
_activityCheckInQueue
_addAuxiliaryRecord:forUnknownRecordWithID:operationGroup:
_addDependenciesForModifyRecordsOperation:operationQueue:
_addModifyRecordsOperations:inOperationGroup:operationQueue:
_appleAccountSecurityState
_applyPendingReferences:
_archivedDataForPerSiteSettingDictionaryInDictionary:
_assetSavingQueue
_attemptCloudExtensionsSyncForPushNotification
_attemptCloudSettingsSyncForTrigger:
_attemptCloudTabsSyncForPushNotification
_attemptLocalMigrationBeforeTryingToBecomeResponsibleForMigrationInOperationGroup:externalCompletionHandler:
_attemptLocalMigrationInCollection:operationGroup:completionHandler:
_attemptSyncAndFallBackToMigrationIfPossibleForTrigger:
_attemptSyncForChangedZonesSharingContainer:
_attemptTabGroupsSyncForManager:withTrigger:
_attributeKeysToGenerationKeys
_attributeKeysToTransformers
_auxiliaryRecordIDsToDelete
_auxiliaryRecordKeyForRecordType:
_batchItemForDeleteChange:inCollection:operationGroup:
_becameResponsibleForMigrationInOperationGroup:externalCompletionHandler:
_beginDate
_beginDeletingAuxiliaryRecordsInCollection:operationGroup:completionHandler:
_beginFetchingExtensionStates
_beginFetchingTabs
_beginMigrationAsPrimaryMigrator:inOperationGroup:
_beginMigrationFromDAVInOperationGroup:
_beginMigrationFromDAVInOperationGroupInternal:
_beginMigrationWithOperationGroup:completionHandler:
_beginSavingMigratedRecordsForRootBookmarkID:destinationRecordZoneID:inCollection:operationGroup:completionHandler:
_beginSavingMigrationTombstonesForRootBookmarkID:destinationRecordZoneID:inCollection:operationGroup:completionHandler:
_beginSharingTabGroupWithUUID:inOperationGroup:completionHandler:
_beginSyncingInOperationGroup:completionHandlers:
_beginSyncingWithOperationGroup:completionHandler:
_beginSyncingWithOperationGroupForFetching:operationGroupForSaving:completionHandlers:
_bookmarkForRemoteRecord:isNewBookmark:
_bookmarkStore
_bookmarkStoreDidFinishSetUp
_bookmarkSyncCoordinator
_bookmarksByVerifyingAndReparentingUnrootedBookmarksRememberOriginalParents:getLastValidPositionInRootFolder:
_bookmarksLog
_bookmarksOperationQueue
_bookmarksRecordZoneID
_cacheUserRecordIDIfNeededInOperationGroup:withCompletionHandler:
_cachedPrivatePresenceRecord
_cachedRemoteStateForAnalytics
_cachedUserRecordID
_canApplyValue:withGeneration:toAttribute:updater:
_canCloseCloudExtensionStoreDatabase
_canCloseCloudTabStoreDatabase
_canHandleCKRecordZoneWithID:
_canUseDiscretionarySync
_cancelBackgroundImageSaveDelayTimer
_cancelPushNotificationSyncDelayTimer
_cancelSyncTimer
_changeToken
_changedRecordsForCloudExtensionDevice:
_changedRecordsForCloudTabDevice:
_changes
_checkInXPCActivityWithIdentifier:criteria:registerIfNeeded:performBlock:
_checkMigrationStateOnInternalQueueInRecord:error:
_checkPrivatePresenceLockValidityWithRecord:toUpdatePresenceInTabWithRecordID:inOperationGroup:completionHandler:
_childEvents
_childRecordNamesInParentServerSyncId:
_childRecordNamesToParentRecordNames
_cleanUpAndCallCompletionHandlersWithError:
_cleanUpAndCallCompletionHandlersWithError:inOperationGroup:
_clearCachedCloudSettingsRecordZoneIfNecessaryForError:
_clearPerSiteSettingsSyncData
_clearUnknownRecordIDsToPendingAuxiliaryRecordSetsInOperationGroup:
_clientChangeTokenData
_closeDatabase
_closeRequestSaveState
_closeRequestToSave
_cloudBookmarkForRecord:isNewBookmark:
_cloudBookmarkItemConfigurations
_cloudBookmarkStore
_cloudBookmarksStoreContainer
_cloudExtensionDevicesDictionaryFromCloudExtensionDevices:
_cloudExtensionLocalStore
_cloudExtensionStateFromRow:deviceUUIDString:
_cloudExtensionStates
_cloudExtensionStatesDictionaryFromCloudExtensionDevices:
_cloudExtensionStore
_cloudExtensionStoreError
_cloudExtensionsOperationQueue
_cloudExtensionsRecordZone
_cloudExtensionsRecordZoneID
_cloudKitRecordNameForBookmarkDAVServerSyncId:
_cloudKitSubscriptionRegistrationIsInProgress
_cloudKitSubscriptionRegistrationTimer
_cloudRemoteStore
_cloudSettingsContainer
_cloudSettingsOperationQueue
_cloudSettingsRecordZone
_cloudTabFromRow:deviceUUIDString:
_cloudTabLocalStore
_cloudTabStore
_cloudTabStoreError
_cloudTabsContainer
_cloudTabsContainerManateeObserver
_cloudTabsOperationQueue
_cloudTabsRecordZoneID
_collectDiagnosticsDataWithRemoteMigrationInfo:remoteMigrationInfoError:completionHandler:
_collection
_collectionConfiguration
_commonInitWithTabUUIDString:owningDeviceUUIDString:owningSceneID:position:title:urlString:isPinned:isShowingReader:readerScrollPositionPageIndex:encodedSystemFieldsData:cloudTabsRecordZoneID:
_completionHandler
_completionHandlerQueue
_completionHandlersForCurrentDeviceFetchRequest
_completionHandlersForNextDeviceFetchRequest
_computeMinimumSyncAPIVersionForRecord:withBookmark:inCollection:
_configuration
_configurationForBookmark:
_configurationForRecord:
_container
_containerManateeObserver
_containersCheckedForDatabaseChanges
_continueDeleting
_continueFetchingExtensionStates
_continueFetchingSettingsWithCompletionHandler:
_continueFetchingTabs
_continueSavingCloseRequest
_continueSavingExtensionStates
_continueSavingTabsForCurrentDevice
_continueSyncingAfterSyncDown:
_continueSyncingAfterSyncingDown:inOperationGroup:
_convertItem:
_converter
_createBookmarkWithConfiguration:record:inCollection:operationGroup:
_createBuiltInFolderWithRecordNameIfNeeded:
_createCloudExtensionsRecordZoneInOperationGroup:withRetryManager:completionHandler:
_createCloudSettingsRecordZoneInOperationGroup:withRetryManager:completionHandler:
_createCloudTabsRecordZoneInOperationGroup:withRetryManager:completionHandler:
_createCollectionWithConfiguration:
_createEncryptionRecordForRecordZoneWithID:inOperationGroup:completionHandler:
_createFreshDatabaseSchema
_createLegacyPlaceholderForSharedTabGroup:inCollection:operationGroup:completionHandler:
_createNewPerSiteCloudKitRecordWithDictionaryRepresentation:precomputedRecordName:
_createOperationGroupWithName:
_createParentFolderReferenceWithRecordName:updater:
_createRecordIDWithName:updater:
_createRecordWithRecordName:updater:
_createServerSyncIDForItem:
_createSharedPresenceRecordWithTabRecordID:currentPrivatePresenceRecord:inOperationGroup:isRetry:completionHandler:
_currentChildRecordNames
_currentDeleteOperationGroup
_currentFetchOperationGroup
_currentManateeState
_currentRetryCompletionHandler
_currentSchemaVersion
_currentSyncDownEvent
_currentSyncUpEvent
_customizationSyncQueue
_cyclerAssistant
_database
_databaseAccessor
_databaseAtURL:failedToDeleteWithError:
_databaseAtURL:failedToOpenWithError:
_databaseAtURL:hasIncorrectSchemaVersion:
_databaseCoordinator
_databaseForRecord:
_databaseLockArbiter
_databaseLockCount
_databaseOpen
_databaseQueue
_databaseRef
_databaseURL
_databaseWillBeClosed
_databaseWillBeDeleted
_databaseWillBeOpened
_databaseWillBeRecreated
_dataclassEnabled
_dateToForceSyncAfterPushNotification
_dateToUseDiscrectionarySync
_decodedSyncDataInData:
_defaultOperationGroup
_defaultSubtitle
_defaultTransformer
_defaults
_delayBeforeSavingBackgroundImageTimer
_delayBeforeSyncingAfterPushNotificationTimer
_delayBetweenRetryAttempts
_delegate
_deleteCloseRequestsOperationGroup
_deleteCloudTabsZoneWithCompletionHandler:
_deleteCompletion
_deleteDatabaseAndRestartFetch
_deleteDatabaseFileAtURL:reopenDatabase:
_deleteDevicesOperationGroup
_deleteError
_deleteExtensionDevicesError
_deleteNextBatchOfAuxiliaryRecordsInCollection:operationGroup:completionHandler:
_deleteObsoleteExtensionStateRecordsFromCloudKit
_deleteObsoleteTabRecordsFromCloudKit
_deletePresenceForParticipantID:inTabGroupWithRecordName:collection:operationGroup:
_deletePrivateRecordZoneIDs:collection:operationGroup:completionHandler:
_deletePrivateTabGroupZonesInOperationGroup:completionHandler:
_deleteRecordsFromCloudKit
_deleteRecordsWithNames:inOperationGroup:completionHandler:
_deleteSettingsOperationGroup
_deleteSharedTabGroupZonesInOperationGroup:completionHandler:
_deleteState
_deleteTabGroupZonesInOperationGroup:completionHandler:
_deleteTemporaryParentFolder
_deletedBookmarkRecordNames
_deletedRecordIDs
_deletedRecordIDsInPrivateDatabase
_deletedRecordIDsInSharedDatabase
_deletedRecordNames
_deletedRecordZoneIDs
_deletedRecordZoneIDsInPrivateDatabase
_deletedRecordZoneIDsInSharedDatabase
_deletingDatabaseCount
_descriptionForErrorCode:
_destinationRecordZoneID
_determineCloudTabSyncCoordinatorWithCompletion:
_determineCourseOfActionFromLocalStateInOperationGroup:completionHandler:
_determineCourseOfActionFromLocalStateInOperationGroup:externalCompletionHandler:
_determiningSyncCoordinator
_deviceClass
_deviceToDeviceEncryptionEnabled
_deviceToSave
_didCheckAgentVersionOnDatabaseLock
_didCompleteSyncDownAfterExpiredChangeTokenError
_didCompleteSyncDownAfterExpiredChangeTokenErrorWithCollection:operationGroup:
_didDeleteRecordWithName:
_didDetectPossibleBug:
_didFailSavingWithError:
_didFailToSyncWithError:didOpenDatabase:
_didFailToSyncWithError:inCollection:operationGroup:completionHandler:
_didFailToSyncWithError:inOperationGroup:
_didFetchBookmarkRecord:collection:operationGroup:
_didFetchModifiedRecord:
_didFetchRecord:inCollection:operationGroup:shouldGenerateUpdatedRecord:
_didFinishMigrationWithError:
_didFinishSavingRecordsWithNames:
_didFinishSyncDownInCollection:operationGroup:isSuccessful:
_didFinishSyncDownInOperationGroup:
_didFinishSyncingReceivingRecordNames:error:
_didFinishSyncingWithResult:error:completionHandler:
_didLoadLastKnownMinimumIOSVersion:minimumMacOSVersion:encounteredUnknownOS:inOperationGroup:
_didReceiveIncomingMessageWithNotification:pushTopic:subscriptionID:
_didReceiveSyncRequestWhileSyncing
_didRegisterCloudKitSubscriptions:timer:lastError:completionHandler:
_didResetSyncData
_didRetrieveHashGenerators:
_didSaveLocalRecords
_didSaveRecordsLocally
_didScheduleSync
_disabled
_dispatchPresenceUpdatesIfNeededForTabGroupsWithRecordNames:inCollection:
_dispatchPresenceUpdatesIfNeededForTabsWithRecordNames:inCollection:
_encryptionRecord
_endDate
_existingBookmarkForRemoteRecord:
_existingPositionForRecordWithName:getIsFolder:
_expiredChangeTokenHandler
_extensionsSyncCoordinator
_failedToDeleteMetadataValueWithKey:error:
_failedToEnableForeignKeysWithError:
_failedToEnableSecureDeleteWithError:
_failedToEnableWALWithError:
_failedToExcludeDatabaseFromBackupWithError:
_failedToInsertMetadataValueWithKey:error:
_failedToSetSchemaVersion:withError:
_failedToUpdateMetadataValueWithKey:error:
_fetchChangedRecordZonesSinceServerChangeToken:inDatabase:collection:operationGroup:completionHandler:
_fetchChangesFromCloudKitCreatingCloudExtensionsZoneIfMissing:
_fetchChangesFromCloudKitCreatingCloudTabsZoneIfMissing:
_fetchDevices
_fetchDevicesCompletion
_fetchError
_fetchExtensionStatesOperationGroup
_fetchOperationType
_fetchRecordsOnInternalQueueWithRetryManager:serverChangeToken:recordChangedBlock:recordWithIDWasDeletedBlock:inOperationGroup:completionHandler:
_fetchRecordsOnInternalQueueWithServerChangeToken:recordChangedBlock:recordWithIDWasDeletedBlock:inOperationGroup:completionHandler:
_fetchRecordsToRefreshInCollection:operationGroup:completionHandler:
_fetchRemoteMigrationInfoInOperationGroup:completionHandler:
_fetchRemoteMigrationStateWithXPCActivity:qualityOfService:completionHandler:
_fetchSettingsOperationGroup
_fetchState
_fetchSyncedCloudTabDevicesAndCloseRequestsWithCompletionHandler:
_fetchTabsOperationGroup
_fetchUpdatedZonesInPushNotificationForContainer:
_fetchUserIdentityInOperationGroup:withCompletionHandler:
_fetchedCloseRequests
_fetchedPerSiteSettings
_fetchedSettingsDictionary
_fetchingQueue
_fetchingQueueSuspended
_finishSyncing
_finishedDeletingRecords
_finishedFetching
_finishedSavingCloseRequest
_finishedSavingDevice
_finishedSavingExtensionStates
_folderRecordQueue
_generateAndSaveRecordsInOperationGroup:
_generateAndSaveRemainingRecordsInOperationGroup:
_generateIdentityHashUsingUpdater:
_generatePositionsForChildRecordNames:withStartingPosition:
_generateRecordPositions
_getPerSiteSettingRecordNameWithDictionaryRepresentation:completionHandler:
_getServerChangeTokenFromSQLiteStore
_getShouldCreateLegacyPlaceholderForSharedTabGroupInCollection:operationGroup:completionHandler:
_handleDeletedRecordZoneIDs:inCollection:
_handleDeletedShareRecordWithID:inCollection:operationGroup:
_handleDeletedTabGroupParticipantPositionRecord:inCollection:
_handleDeletedTabParticipantStatusRecord:inCollection:
_handleDeletedTabPresenceRecord:inCollection:operationGroup:
_handleExpiredChangeTokenError:collection:operationGroup:completionHandler:
_handleExpiredChangeTokenError:completionHandler:
_handleFailureToBecomeResponsibleForMigrationDueToConflictInCollection:operationGroup:completionHandler:
_handleFailureToBecomeResponsibleForMigrationDueToConflictInOperationGroup:externalCompletionHandler:
_handleICloudKeychainResetInCollection:operationGroup:completionHandler:
_handleManateeErrorIfNeeded:completionHandler:
_handlePendingAuxiliaryRecordsIfNeededForMainRecordID:inCollection:operationGroup:
_handlePreemptionInOperationGroup:externalCompletionHandler:
_handleSevereSQLiteErrorWhileFetching:
_handleSevereSQLiteErrorWhileMergingExistingDevice:
_handleUpdatedShareRecord:inCollection:operationGroup:
_handleUpdatedTabGroupParticipantPositionRecord:inCollection:operationGroup:
_handleUpdatedTabParticipantStatusRecord:inCollection:operationGroup:
_handleUpdatedTabPresenceRecord:inCollection:operationGroup:
_hasEntitlementForSensitiveOperation
_hasSavedBookmarksLocally
_hasTemporaryParentFolder
_hasValidDeviceIdentifier
_hashGeneratorForRecord:
_hierarchyCheckTimer
_hierarchyCheckTimer:
_hierarchyCheckerDidFail
_highlightCenter
_identifierForSensitiveString:
_identityHashKeys
_ignoreOngoingCloudKitSubscriptionRegistrationResult
_initWithAddedRecord:configuration:forItem:databaseAccessor:updater:
_initWithCKRecord:
_initWithChange:databaseAccessor:updater:
_initWithComposedIdentifier:owningDeviceUUIDString:lastModifiedDate:containingAppAdamID:displayName:isEnabled:wasEnabledByUserGesture:iosAppBundleIdentifier:iosExtensionBundleIdentifier:macAppBundleIdentifier:macExtensionBundleIdentifier:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
_initWithConfiguration:deleteChange:databaseAccessor:updater:
_initWithDeviceUUIDString:deviceName:hasDuplicateName:lastModified:isEphemeralDevice:encodedSystemFieldsData:cloudTabsRecordZoneID:
_initWithDeviceUUIDString:deviceName:lastModifiedDate:newTabPageComposedIdentifier:newTabPageSetByUserGesture:newTabPageLastModifiedDate:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
_initWithItem:configuration:databaseAccessor:
_initWithItem:configuration:syncData:databaseAccessor:
_initWithItemToMigrate:configuration:databaseAccessor:updater:
_initWithTabUUIDString:owningDeviceUUIDString:owningSceneID:position:title:urlString:isPinned:isShowingReader:readerScrollPositionPageIndex:encodedSystemFieldsData:cloudTabsRecordZoneID:
_initWithTabUUIDString:tabURLString:destinationDeviceUUIDString:closeRequestUUIDString:encodedSystemFieldsData:cloudTabsRecordZoneID:
_insertBookmark:intoFolderWithRecordName:
_internalQueue
_invalidateHierarchyCheckTimer
_isBeingTornDown
_isCustomizationSyncing
_isDataclassEnabled
_isDeletingDatabase
_isDeviceToDeviceEncryptionEnabled
_isExpiredChangeTokenError:
_isMigrating
_isPerformingInitialSyncUp
_isRefetchingAfterDeletingDatabase
_isSavingMigrationTombstoneRecords
_isSavingReparentedRecords
_isSyncOperationPending
_isSynchronizing
_isSyncing
_isUnrecoverableCloudKitWriteError:
_isWaitingForPCSIdentityUpdate
_item
_itemConfigurations
_itemSubtype
_itemType
_items
_keysWithoutGenerations
_knownKeys
_knownKeysToSaveForRecord:withConfiguration:
_lastKnownMinimumOSVersionInCircleRequiresLegacyPlaceholderForSharedTabGroup
_lastKnownMinimumVersionsCachedDate
_lastKnownPositionInRoot
_lastKnownPositionOfLastItemInRootFolder
_lastScheduledUpdateBlock
_lastScheduledUpdateLock
_lastSuccessfulCloudKitSubscriptions
_lastValidPositionInRootFolder
_loadAttributesForKnownKeysIntoEmptyItemUsingRemoteRecord:updater:
_loadCloseRequests
_loadDeviceWithUUIDString:
_loadDevices
_loadDevicesAndStatesFromSQLiteStore
_loadDevicesAndTabsFromSQLiteStore
_loadExtensionStatesForDevice:
_loadTabsForDevice:
_localBookmarksDictionaryFromDatabase:
_localDatabaseContainsItemWithRecordName:getParentRecordName:
_localStoreShimForManateeContainer
_log
_maintenanceActivity
_manateeErrorCode:
_manateeStateNeedsUpdate
_maximumNumberOfRetryAttempts
_mergeDeviceIntoDeviceFromSQLiteStoreIfNecessary
_mergedRecordWithLocalRecord:remoteRecord:saveError:collection:operationGroup:
_metadata
_metadataDataValueForKey:
_metadataInt64ValueForKey:
_migrateFromDAVInOperationGroup:completionHandler:
_migrateToCurrentSchemaVersionIfNeeded
_migratedRecordForBookmarkID:inCollection:destinationRecordZoneID:
_migrationConverter
_migrationCoordinator
_migrationLocalRecordIDQueue
_migrationRecord
_migrationStateRecordID
_migrationTombstoneRecordForBookmarkID:inCollection:destinationRecordZoneID:operationGroup:
_misplacedBuiltInFolderRecordNames
_modifiedCloseRequests
_modifiedDevices
_modifiedOrLocalIdentityHashWithUpdater:
_modifiedOrLocalParentReferenceWithUpdater:
_modifiedTabs
_modifyExistingPerSiteCloudKitRecordWithData:dictionaryRepresentation:
_modifyRecords:andDeleteRecordIDs:inDatabase:operationGroup:previouslySavedRecords:previouslyDeletedRecords:mergeHandler:completionHandler:
_movedBookmarkManager
_movedBookmarkRecordNames
_movedRecordNames
_mutableBookmarkLeafRecords
_mutableBookmarkListRecords
_mutableDeletedBookmarkRecords
_namesOfDeletedRecords
_namesOfLocalRecordsToDelete
_namesOfRecordsExpectedOnSyncDown
_namesOfRecordsMissingFromPreviousSyncDown
_namesOfRemainingRecordsToSave
_needsAccountHashCheck
_needsDatabaseFetchOperationForContainer:
_needsDataclassEnabledCheck
_needsSync
_nextBatchItemAfterChangeToken:inCollection:operationGroup:
_nextChangeID
_nextCloudBookmarkToSave
_nextEarliestScheduleTime
_nextMigrationRecordBatchInCollection:operationGroup:recordBuilderBlock:
_nextRecordBatchGetRecordNamesToCloudBookmarks:withCloudBookmarkAllocationBlock:
_nextRecordBatchToSave
_notifyDelegateAboutIgnoredRecordZoneIDsIfNeeded:operationGroup:
_numberOfFailedCloudKitSubscriptionRegistrationAttempts
_numberOfRetries
_numberOfRetryAttempts
_objectClasses
_observers
_openDatabase:deleteDatabaseFileOnError:
_operationConfiguration
_operationDispatchQueue
_operationGroupForFetching
_operationGroupForSaving
_operationToDeleteCloudExtensionRecordIDs:completionHandler:
_operationToDeleteCloudTabRecordIDs:completionHandler:
_parentGenerator
_parentRecordName
_parentRecordNamesToMovedChildRecordNames
_parentRecordNamesWithMovedChildren
_pcsIdentitiesChangedNotification:
_pcsIdentitiesDidChangeNotification:
_pendingReferenceManager
_pendingReferences
_perSitePreferencesStore
_perSiteSettingsDeviceIdentifier
_performBookmarkSyncForTrigger:inOperationGroup:completionHandler:
_performHiearchyCheck
_performMergingSyncDownInOperationGroup:
_performMigrationAsPrimaryDevice:inOperationGroup:externalCompletionHandler:
_performPostZoneMigrationSyncDownForRecordZoneID:shareRecord:inCollection:operationGroup:completionHandler:
_performSettingsSyncForTrigger:inOperationGroup:completionHandler:
_performSharedPresenceInTabHeartbeatUpdateIfNeededWithRecordID:inOperationGroup:completionHandler:
_performSyncDown
_performSyncDownAfterProcessingChangesInCollection:operationGroup:completionHandler:
_performSyncDownForRecordZoneIDs:perRecordZoneConfigurations:inDatabase:collection:operationGroup:completionHandler:
_performSyncDownInCollection:operationGroup:completionHandler:
_performSyncDownInOperationGroup:
_performSyncDownInOperationGroup:withRetryManager:
_performSyncDownWithCompletionHandler:
_performSyncDownWithLastServerChangeToken:completionHandler:
_performTabGroupSyncForManager:withTrigger:completionHandler:
_periodicallyObservingRemoteMigrationState
_positionAfterPosition:
_positionAfterPosition:owningDeviceUUIDString:
_positionGenerator
_positionOfBookmarkWithRecordNameForFolderSorting:
_postCollaborationChangeEventWithBookmark:inCollection:operationGroup:
_postCollaborationDeleteEventWithBookmark:inCollection:operationGroup:
_postCollaborationRenameEventWithBookmark:inCollection:operationGroup:
_postHighlightWithBookmark:collection:operationGroup:completionHandler:
_postNoticeForHighlightEvent:
_prepareBookmarksRecordZoneCreatingIfNeeded:inOperationGroup:withCompletionHandler:
_prepareBookmarksRecordZoneInOperationGroup:withCompletionHandler:
_prepareBookmarksRecordZoneInvalidatingCachedZone:createIfNeeded:inOperationGroup:withCompletionHandler:
_prepareBookmarksRecordZoneOnInternalQueueAfterExternalCompletionHandlersHaveBeenStashedInvalidatingCachedZone:createIfNeeded:inOperationGroup:withCompletionHandler:
_prepareForSyncDownInOperationGroup:
_prepareForSyncingWithOperationGroup:completionHandler:
_prepareRecordsForMigration
_primaryAppleAccountSecurityLevel
_primaryCKRecordGenerationKeysToClear
_primaryCKRecordKeysToClear
_primaryCKRecordKeysToSave
_privatePresenceRecordID
_processLocalTabOperation:completionHandler:
_processSavedRecord:forBookmark:inCollection:operationGroup:
_processUpdateQueue
_pushTopicForContainer:
_pushTopics
_queue
_readServerChangeTokenFromUserDefaults
_readStatusRecordForBookmark:syncData:configuration:changeType:inCollection:
_rebuildUndeletedBookmark:
_recordByMergingRemoteRecord:intoCloudBookmark:
_recordByMergingRemoteRecord:withLocalRecord:recordNamesToCloudBookmarks:saveError:
_recordForBookmark:inCollection:changeType:
_recordForBookmark:syncData:configuration:changeType:inCollection:
_recordIDsFromDeviceOrTabUUIDStrings:
_recordIDsFromRecordNames:
_recordIDsToDelete
_recordIDsToRefresh
_recordName
_recordNameEnumerator
_recordNameOfAncestorToReparentForRecordName:verifiedRecordNames:
_recordNameOfAncestorToReparentInLoop:
_recordNameOfLastRecordInRoot
_recordNamesOfStatesToDelete
_recordNamesToChildFolderRecordNames
_recordNamesToChildRecordNames
_recordNamesToDelete
_recordNamesToGeneratePositionsForInRecordNames:inParentRecordName:getFolderRecordNames:getLastValidPosition:
_recordNamesToPositions
_recordTestBlock
_recordType
_recordZoneID
_recordZoneIDForBookmark:inCollection:
_recordZoneIDsToHashGenerators
_recordZoneIDsToPendingServerChangeTokens
_recordZoneSubscriptionID
_recordsToSave
_recursivelyCancelDependentOperations:operationQueue:
_recursivelyUpdateChildrenOrderWithParentServerID:depth:
_registerCloudKitSubscriptionsXPCActivityRegisteringIfNeeded:ignoreOnGoingRegistration:resetSubscriptions:qualityOfService:delay:
_registerPeriodicRemoteMigrationStateObserverXPCActivityRegisteringIfNeeded:
_registerRemainingCloudKitSubscriptions:withLastSuccessfulSubscriptions:inOperationGroup:withCompletionHandler:
_releaseLockForPrivatePresenceRecord:inOperationGroup:completionHandler:
_remainingCloudKitSubscriptionsToRegister
_remoteStore
_remotelyModifiedAssetAttributes
_remotelyModifiedAttributes
_removeBookmarkWithServerID:inCollection:
_removeDeletedRecordsFromSQLiteStore
_removeUserSpecificKeysInTabGroupRecord:forBookmark:configuration:inCollection:
_reorderChildrenOfFolderWithServerSyncId:
_reorderChildrenOfTopBookmarkFolderGetLastPosition:
_reorderedBySyncPositionBookmarkFolderServerIDs
_reparentAndSaveUnrootedBookmarks
_reparentAndSaveUnrootedBookmarksInOperationGroup:
_reparentBuiltInFolderIfNeeded
_replaceSharedPresenceRecordWithTabRecordID:currentPrivatePresenceRecord:previousPrivatePresenceRecord:inOperationGroup:isRetry:completionHandler:
_resetDatabaseSchema
_resetSyncData
_resetSyncDataInCollection:operationGroup:
_resetToIdleAfterMigrationFailureInOperationGroup:externalCompletionHandler:
_resultByMergingMinimumAPIVersionWithRecord:
_resultByMergingParentAndPositionWithRecord:usingUpdater:
_resultByMergingStateWithRecord:shouldContinueMerge:
_resumeFetchingQueue
_resumeSavingQueue
_retryFetchChangesFromCloudKitIfPossibleAfterCreatingCloudExtensionsZoneCompletedWithError:
_retryFetchChangesFromCloudKitIfPossibleAfterCreatingCloudTabsZoneCompletedWithError:
_retryIntervalToRegisterCloudKitSubscriptionsWithNumberOfFailedAttempts:lastCKError:
_retryTimer
_rootJSONObjectType
_runSyncingWithCollection:inOperationGroup:completionHandler:
_runTabGroupSyncUsingXPCActivityForManager:tigger:
_runTabGroupsSyncForManager:withTrigger:completionHandler:
_safariUserDefaults
_safari_deviceIdentifierKeyForKey:
_safari_generationKeyForKey:
_safari_isOrContainsCloudKitErrorOfCodes:checkInternalErrorCode:
_saveAssetAtURL:toURL:operationGroup:completionHandler:
_saveAssetsForBookmarkIfPresent:onRecord:withConfiguration:inCollection:operationGroup:
_saveBackgroundImageOperationGroup
_saveBookmarksRecordBatch:inOperationGroup:clientChangeTokenData:previouslySavedRecords:previouslyDeletedRecordIDs:mergeHandler:completionHandler:
_saveBookmarksZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveCloseRequest:
_saveCloseRequestCompletion
_saveCloseRequestError
_saveCloseRequestToCloudKit
_saveCloseRequestsOperationGroup
_saveCloudBackgroundImageWithURL:isLightAppearance:successCompletionHandler:
_saveCloudExtensionDevice:shouldUpdateExtensionStatesWhenSavingDevice:completionHandler:
_saveCloudExtensionsRecordBatch:inOperationGroup:completionHandler:
_saveCloudExtensionsRecordBatch:previouslySavedRecords:previouslyDeletedRecordIDs:retryManager:inOperationGroup:completionHandler:
_saveCloudExtensionsZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveCloudPerSiteSettingsWithMacZoomPreferences:successCompletionHandler:
_saveCloudSettingsBatchWithDictionaryRepresentation:successCompletionHandler:
_saveCloudSettingsRecords:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
_saveCloudSettingsRecords:retryManager:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
_saveCloudSettingsZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveCloudTabsRecordBatch:inOperationGroup:completionHandler:
_saveCloudTabsRecordBatch:previouslySavedRecords:previouslyDeletedRecordIDs:retryManager:inOperationGroup:completionHandler:
_saveCloudTabsZoneSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveDevice:
_saveDeviceToCloudKit
_saveExtensionState:
_saveExtensionStateOperationGroup
_saveExtensionStatesCompletion
_saveExtensionStatesError
_saveModifiedRecordsToSQLiteStore
_saveNextBatchInCollection:operationGroup:completionHandler:
_saveNextChangedRecordBatch
_saveNextMigrationRecordBatchInCollection:operationGroup:usingRecordBuilderBlock:completionHandler:
_saveNextRecordBatchCreatingCloudExtensionsZoneIfMissing:
_saveNextRecordBatchCreatingCloudTabsZoneIfMissing:
_saveNextReparentedRecordBatch
_saveOrLoadRecord:inOperationGroup:withCompletionHandler:
_savePerSiteCloudKitRecordsToDisk:
_saveRecord:forBookmark:inCollection:
_saveRecordBatch:inOperationGroup:recordNamesToCloudBookmarks:
_saveRecordBatch:recordNamesToCloudBookmarks:successCompletionHandler:
_saveRecordZoneServerChangeTokensInCollection:operationGroup:ifSuccessful:
_saveRecordZoneSubscriptionForZoneID:subscriptionID:inOperationGroup:operationQueue:completionHandler:
_saveRecordZoneSubscriptionInOperationGroup:operationQueue:completionHandler:
_saveServerChangeToken:
_saveSettingsOperationGroup
_saveState
_saveTab:
_saveTabGroupsPrivateDatabaseSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveTabGroupsSharedDatabaseSubscriptionIfNeededInOperationGroup:withCompletionHandler:
_saveTabsCompletion
_saveTabsError
_saveTabsOperationGroup
_saveUpdatedRecords:deletedRecordIDs:inDatabase:collection:operationGroup:completionHandler:
_savingQueue
_savingQueueSuspended
_scheduleHierarchyCheckTimer
_scheduleInitialManateeCloudTabFetchRetryXPCActivityRegisteringIfNeeded:
_scheduleMigrationRetryIfNeededInOperationGroup:completionHandler:
_scheduleMigrationRetryIfNeededInOperationGroup:externalCompletionHandler:
_scheduleOperation:inOperationGroup:operationQueue:
_scheduleRetryIfAbleWithOperationGroupForFetching:operationGroupForSaving:completionHandlers:
_scheduleSyncIfNeeded
_secondaryRecordZoneNamePrefix
_secondaryZoneNamesToRecordZoneIDs
_sendDetectedBugNotificationIfNeeded
_sensitiveStringIdentifiers
_serverChangeToken
_serverIDForBookmarkCreateIfNeeded:inCollection:
_serverSyncIDTypeForServerSyncID:
_setCloudExtensionStatesFromDictionaryRepresentation:cloudExtensionsRecordZoneID:
_setDatabaseSchemaVersion:
_setMetadataDataValue:forKey:
_setMetadataInt64Value:forKey:
_setNeedsAccountHashCheck
_setNeedsAccountPropertiesUpdate
_setPositionDictionaryRepresentation:inParentWithRecordID:forBookmark:inCollection:operationGroup:
_setServerChangeTokenInSQLiteStore
_setTabsFromWBSCloudTabDictionaryRepresentations:cloudTabsRecordZoneID:
_setUpEncryptionInfoInOperationGroup:withCompletionHandler:
_setUpEncryptionInfoInOperationGroup:withRetryManager:completionHandler:
_setUpPushConnection
_setUpRecordZoneIDsToPendingServerChangeTokens
_setUpRecordZoneInOperationGroup:withCompletionHandler:
_setUpRetryTimerToSetPresenceInTabWithRecordID:inOperationGroup:completionHandler:
_setUpSharingInRecordZoneWithID:collection:operationGroup:completionHandler:
_setUpSyncAgentInterfaceOnConnection:
_setUpTabGroupZoneForTabGroup:inCollection:operationGroup:completionHandler:
_setUpUnknownRecordIDsToPendingAuxiliaryRecordSetsInOperationGroup:
_settingStore
_settingsStore
_settingsSyncCoordinator
_settingsSyncEngine
_shareType
_sharedPresenceRecordDatabaseForTabRecordZone:
_sharedPresenceRecordNameForUserRecordID:
_sharedTabGroupsObserver
_shouldContinueSyncOperation
_shouldDeleteDatabaseForError:
_shouldPerformInitialSyncDown
_shouldPerformMigrationAfterUpgradingBookmarksDatabaseFromSafariVersion:
_shouldSync
_shouldUpdateExtensionStatesWhenSavingDevice
_sizeOfRecordUpdateBatch:
_sortedRecordNamesWithChildIDs:getLastPosition:
_sourceRecordIDsForRecordsMovedBetweenZones
_store
_stringForBookmarkType:
_stringForFolderType:
_subtitle
_suspendFetchingQueue
_suspendSavingQueue
_symbolName
_syncCoordinator
_syncCoordinatorDeterminationCompletionBlocks
_syncData
_syncDebugger
_syncDownHandler
_syncManagerWithStoreOwner:
_syncMigrationCoordinator
_syncObservers
_syncObserversToProxyObservers
_syncPhase
_syncRequirementsRecordID
_syncResultForError:
_syncing
_syncingCompletionHandlers
_tabCollection
_tabCollectionQueue
_tabCollectionSyncTimer
_tabGroupParticipantPositionRecordForBookmark:syncData:configuration:changeType:inCollection:
_tabGroupPresenceUpdater
_tabGroupRecordNamesWithPendingPresenceUpdate
_tabGroupSyncManager
_tabGroupsLog
_tabRecordIDFromTabUUID:inTabCollection:
_tabRecordNamesWithPendingPresenceUpdate
_tabSaveState
_tabs
_threadUnsafeBookmarkHashGenerator
_threadUnsafeBookmarksRecordZone
_threadUnsafeCurrentUserRecordID
_threadUnsafeDatabase
_threadUnsafeHashGenerator
_threadUnsafeIncludesMigrationRecordInSaveBatch
_threadUnsafeLocalStorage
_threadUnsafeMigrationStateRecord
_threadUnsafePrepareRecordZoneCompletionHandlers
_threadUnsafeSyncRequirementsRecord
_throttledScheduledUpdateTimer
_title
_topBookmarkFolderRequiresReordering
_topBookmarkRecord
_topic:matchesPushTopicForContainer:
_transactionForTimerToDelaySyncing
_transformedModifiedOrLocalValueForKey:isEncrypted:
_transitionCloudTabSyncCoordinatorToManateeState:completion:
_transitionToMigrationState:
_traverseBookmarksInDatabase:parentFolderID:bookmarksCount:foldersCount:details:
_tryToBecomeResponsibleForMigrationInCollection:operationGroup:completionHandler:
_tryToBecomeResponsibleForMigrationInOperationGroup:externalCompletionHandler:
_tryToBecomeResponsibleForMigrationWithRetryManager:inCollection:operationGroup:completionHandler:
_tryToBecomeResponsibleForMigrationWithRetryManager:inOperationGroup:externalCompletionHandler:
_tryToResumePendingRemoteMigrationFromMigrationInfo:inCollection:operationGroup:completionHandler:
_tryToResumePendingRemoteMigrationFromMigrationInfo:inOperationGroup:externalCompletionHandler:
_type
_unknownRecordIDsToPendingAuxiliaryRecordSets
_unsavedBookmarkFromLastBatch
_unsavedProcessedBookmark
_unsavedRecordFromLastBatch
_unsavedReparentedRecordNames
_updateAccountHashIfNeeded
_updateBookmark:inCollection:withRecord:configuration:
_updateBookmarkCollectionBookmark:inCollection:withRecord:configuration:
_updateBookmarkCollectionFolder:inCollection:withRecord:configuration:
_updateBookmarkWithRecord:
_updateCloudBookmarksSyncCoordinatorAfterUserAccountChange:
_updateCloudExtensionStatesFromStates:
_updateCloudExtensionsSyncCoordinatorAfterUserAccountChange:
_updateCloudSettingsSyncCoordinatorAfterUserAccountChange:
_updateCloudTabsSyncCoordinatorAfterUserAccountChange:
_updateDatabaseContainsCKShareRecordIfNeededInCollection:
_updateDevicePropertiesFromCloudExtensionDevice:
_updateGenerationsForAttributeKeys:withDeviceIdentifier:
_updateGenerationsForChange:withDeviceIdentifier:
_updateLocalBookmarkWithCKRecord:
_updatePresenceInTabIfNeededWithRecordID:inOperationGroup:isRetry:completionHandler:
_updateRecordParentAndPositionWithUpdater:
_updateRecordWithChange:updater:
_updateRecordWithMissingAttributesWithUpdater:
_updateRecordWithModifiedAttributes:updater:
_updateSQLiteStoreFromCloudKitAfterDeletingRecords
_updateSQLiteStoreFromCloudKitAfterSavingCloseRequest
_updateSQLiteStoreFromCloudKitAfterSavingExtensionState
_updateSQLiteStoreFromCloudKitAfterSavingTabs
_updateSQLiteStoreFromCloudKitCompletion
_updateSQLiteStoreFromCloudKitInOperationGroup:withCompletionHandler:
_updateTabCollectionBookmark:inCollection:withRecord:configuration:
_updateTabCollectionFolder:inCollection:withRecord:configuration:
_updateTabGroupsSyncCoordinatorAfterUserAccountChange:
_updateTabsFromCloudTabs:
_updatedContainerForPushTopic:
_updatedRecordsInPrivateDatabase
_updater
_userAccountDidChange:
_userDidUpdateBookmarkDatabase
_usesManateeContainer
_usesOpportunisticPushTopic
_uuidStringsOfTabsToDelete
_vacuumFailedWithError:
_valueForKey:ofType:fromRecord:withConfiguration:
_valueTransformerForComposedIdentifierDisplayNameAndAdamID
_valueTransformerForDeviceName
_valueTransformerForTabURL
_verifyHierarchyIntegrityInDatabase:
_verifySyncDataForItem:recordName:expectingSyncData:expectingCloudKitData:
_xpcListener
_zoneLogName
aa_altDSID
aa_primaryAppleAccount
absoluteString
acceptCloudKitShareWithMetadata:inOperationGroup:completionHandler:
acceptShareForURL:invitationTokenData:completionHandler:
acceptShareForURL:invitationTokenData:inOperationGroup:completionHandler:
acceptanceStatus
accountHash
accountInfoWithCompletionHandler:
accountPropertiesStore
accountStore
action
activeParticipantsDidUpdateInTabGroupWithUUID:
activeParticipantsDidUpdateInTabWithUUID:
addChildEvent:
addDeletedRecordID:
addDependency:
addEntriesFromDictionary:
addItem:
addItem:underFolderWithServerId:database:
addMovedBookmark:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOperation:
addParticipantsWithEmailAddresses:toShareInRecordZoneWithID:inOperationGroup:completionHandler:
addRecord:
addSyncObserver:
allObjects
allRecordIDs
allSyncingAttributesForBookmark:
allValues
allocWithZone:
allowsReverseTransformation
anyObject
appendEvent:
applicationBundleIdentifierOverrideForPushTopicGeneration
applyAllPendingReferencesWithUpdater:
applyPendingReferences:toItemWithRecordName:inDatabase:databaseAccessor:updater:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
attributeForKeyRequiresGeneration:
attributeRequiresEncryption
attributesMarkedAsModified:
authKitAccountWithAltDSID:
autorelease
auxiliaryRecordForKey:
auxiliaryRecordIDs
auxiliaryRecordIDsToDelete
backgroundImageAppearanceIsLight
backgroundImageExists
backgroundImageGeneration
beginDate
beginFolderMigrationInOperationGroup:completionHandler:
beginInitialSyncUpWithCompletionHandler:
beginMergingChangesWithDatabase:
beginMigratingAsPrimaryMigrator:inOperationGroup:willBeginMigrationHandler:withCompletionHandler:
beginMigrationFromDAV
beginMigrationInOperationGroup:completionHandler:
beginMigrationWithOperationGroup:completionHandler:
beginSavingReparentedBookmarksInOperationGroup:withRecordNames:lastKnownPositionInRoot:completionHandler:
beginSharingTabGroupWithUUID:completionHandler:
beginSharingTabGroupWithUUID:inOperationGroup:completionHandler:
beginSyncDownInOperationGroup:completionHandler:
beginSyncDownInOperationGroup:keepingRecordsMarkedAsDeletedLocally:completionHandler:
beginSyncingForTrigger:isLocalChange:completionHandler:
beginSyncingWithCompletionHandler:
beginSyncingWithOperationGroupForFetching:operationGroupForSaving:completionHandler:
bindData:atParameterIndex:
bindDouble:atParameterIndex:
bindInt64:atParameterIndex:
bindInt:atParameterIndex:
bindString:atParameterIndex:
bookmark
bookmarkConfiguration
bookmarkDatabaseAccessor
bookmarkFolderConfigurationWithType:
bookmarkHashGenerator
bookmarkIDForServerID:excludeDeletedBookmarks:
bookmarkIDWithSpecialID:
bookmarkLeafRecords
bookmarkListRecords
bookmarkStore
bookmarkType
bookmarkTypeForChange:
bookmarkTypeWithBookmark:
bookmarkWithServerID:excludeDeletedBookmarks:
bookmarkWithUUID:
bookmarksByVerifyingAndReparentingUnrootedBookmarksGetLastValidPositionInRootFolder:
bookmarksRecordZoneID
boolAtIndex:
boolForKey:
boolValue
canParseBookmark:
canParseChange:usingDatabaseAccessor:
canParseItem:usingDatabaseAccessor:
canParseRecordType:
canSaveIdentityHashAttributesInDictionary:
cancel
change
changeIsDAVMoveChange:
changeIsMoveChange:
changeToken
changeType
changeTypeForChange:
changedKeys
childEvents
childFolderRecordNamesForRecordName:
childRecordNamesForRecordName:
ckBookmarkSyncFinishedWithResult:error:
ckShortDescription
class
clearAllCKRecords
clearAllGenerationsExceptState
clearAllLastServerChangeTokens
clearAllReadingListArchives
clearAllSyncData
clearAllSyncDataWithDatabase:
clearCachedCloudSettingsRecordZone
clearCachedRecordZone
clearChangesForChangeRecords:lastSyncedRecordGeneration:
clearChangesWithChangeToken:database:
clearLocalDataIncludingMigrationState:completionHandler:
clearModifiedAttributes
clearReadingListArchiveWithUUID:
clearServerChangeToken
clearSyncDataAfterICloudKeychainReset
clearlAllLocalBookmarksForAutomatedTestingWithDatabase:
clientChangeTokenData
close
closeDatabase:shouldSave:
closeDatabaseAndSave:
closeDatabaseWithCompletionHandler:
cloudBookmarkConfigurations
cloudBookmarkForReparentedItemWithRecordName:inDatabase:databaseAccessor:updater:
cloudBookmarkItemConfigurationForRecord:
cloudBookmarkSyncMigrationSaveHandler:didDeleteBookmarkWithRecordName:
cloudBookmarkSyncMigrationSaveHandler:didMoveBookmark:
cloudBookmarkSyncMigrationSaveHandler:shouldApplyReference:withGeneration:toAttribute:inRecordWithName:
cloudBookmarkSyncMigrationSaveHandler:shouldSaveBookmark:
cloudBookmarkSyncMigrationSyncDownHandler:didDeleteBookmarkWithRecordName:
cloudBookmarkSyncMigrationSyncDownHandler:didMoveBookmark:
cloudBookmarkSyncMigrationSyncDownHandler:shouldApplyReference:withGeneration:toAttribute:inRecordWithName:
cloudBookmarkToMigrateItemWithRecordName:inDatabase:databaseAccessor:updater:
cloudBookmarkWithAddedRecord:configuration:inDatabase:databaseAccessor:updater:
cloudBookmarkWithChange:databaseAccessor:updater:
cloudBookmarkWithRecordName:inDatabase:databaseAccessor:updater:
cloudExtensionDeviceWithCKRecord:
cloudExtensionDeviceWithDeviceUUIDString:deviceName:lastModifiedDate:newTabPageComposedIdentifier:newTabPageSetByUserGesture:newTabPageLastModifiedDate:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
cloudExtensionDeviceWithDictionaryRepresentation:extensionSettingsDictionaryForDevice:cloudExtensionsRecordZoneID:
cloudExtensionSQLiteStoreStore:hadSevereError:
cloudExtensionStateWithCKRecord:
cloudExtensionStateWithComposedIdentifier:owningDeviceUUIDString:lastModifiedDate:containingAppAdamID:displayName:isEnabled:wasEnabledByUserGesture:iosAppBundleIdentifier:iosExtensionBundleIdentifier:macAppBundleIdentifier:macExtensionBundleIdentifier:encodedSystemFieldsData:cloudExtensionsRecordZoneID:
cloudExtensionStateWithDictionaryRepresentation:composedIdentifier:owningDeviceUUIDString:cloudExtensionsRecordZoneID:
cloudExtensionStates
cloudExtensionStatesFromStatesDictionaryRepresentation:owningDeviceUUIDString:cloudExtensionsRecordZoneID:
cloudExtensionsRecordZoneID
cloudRemoteStore
cloudSettingSyncCoordinator:didDeleteRemoteRecordWithID:
cloudSettingSyncCoordinator:didReceiveRemoteCloudSettingsUpdateWithRecord:
cloudSettingSyncCoordinator:setPageZoomSyncData:forRecordName:completionHandler:
cloudSettingSyncCoordinator:storeRemoteCloudSettingsUpdateWithRecord:
cloudSettingsRecordZoneID
cloudTabCloseRequestWithCKRecord:
cloudTabCloseRequestWithTabUUIDString:tabURLString:destinationDeviceUUIDString:closeRequestUUIDString:encodedSystemFieldsData:cloudTabsRecordZoneID:
cloudTabCloseRequestWithWBSCloudTabCloseRequestDictionaryRepresentation:closeRequestUUIDString:cloudTabsRecordZoneID:
cloudTabDeviceWithCKRecord:
cloudTabDeviceWithDeviceUUIDString:deviceName:hasDuplicateName:isEphemeralDevice:lastModified:encodedSystemFieldsData:cloudTabsRecordZoneID:
cloudTabDeviceWithDictionaryRepresentation:deviceUUIDString:cloudTabsRecordZoneID:
cloudTabGroupConfigurations
cloudTabGroupSyncCoordinator:activeParticipantsDidUpdateInTabGroupWithUUID:
cloudTabGroupSyncCoordinator:activeParticipantsDidUpdateInTabWithUUID:
cloudTabGroupSyncCoordinator:didAddTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didChangeBackgroundImageInTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didChangeScopedFavoritesInSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didFetchRecentlyAcceptedSharedTabGroupWithUUID:acceptedShareDate:
cloudTabGroupSyncCoordinator:didNavigateInTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:didReceiveChangesForUnhandledRecordZoneIDs:
cloudTabGroupSyncCoordinator:didRemoveTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
cloudTabGroupSyncCoordinator:participants:didJoinSharedTabGroupWithUUID:
cloudTabGroupSyncCoordinator:participants:didLeaveSharedTabGroupWithUUID:
cloudTabGroupSyncManager:didFindChangesToRecordZonesWithIDs:
cloudTabGroupSyncManagerPCSIdentitiesDidChange:
cloudTabLocalStore
cloudTabLocalStore:hadSevereError:
cloudTabLocalStoreDidOpen:
cloudTabSyncArbiterDidChangeCloudKitContainer:
cloudTabSyncArbiterPCSIdentitiesDidChange:
cloudTabWithCKRecord:
cloudTabWithTabUUIDString:owningDeviceUUIDString:owningSceneID:position:title:urlString:isPinned:isShowingReader:readerScrollPositionPageIndex:encodedSystemFieldsData:cloudTabsRecordZoneID:
cloudTabWithWBSCloudTabDictionaryRepresentation:owningDeviceUUIDString:position:cloudTabsRecordZoneID:
cloudTabsRecordZoneID
code
collectAllRecordNames
collectDiagnosticsDataWithCompletionHandler:
collection
collectionConfiguration
collectionType
compare:
compare:options:
componentsJoinedByString:
composedIdentifier
configuration
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
container
containerIdentifier
containingAppAdamID
convertRecordsForMigration
copy
copyAccountHashWithDatabase:
copyAttributesWithItem:
copyChangeTokenWithDatabase:
copyChangedItemWithChange:
copyChangesWithDatabase:changeToken:
copyDeletedBookmarkSyncDataWithChange:
copyDeviceIdentifier
copyFirstServerIdInFolderWithServerId:database:
copyItemAtURL:toURL:error:
copyItemWithLocalID:database:
copyItemWithServerId:database:
copyLastServerIdInFolderWithServerId:database:
copyLocalIDsInFolderWithLocalID:database:
copyModifiedAttributesWithChange:
copyParentServerIdWithItem:
copySaveURLForAssetWithKey:item:
copyServerIdInFolderAfterServerId:database:
copyServerIdInFolderBeforeServerId:database:
copyServerIdWithChange:
copyServerIdWithItem:
copyServerIdsInFolderWithServerId:database:
copySyncDataWithItem:
copySyncKeyWithItem:
copyValueForKey:item:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAuxiliaryRecordDeletionEvent
createBookmarkWithType:database:
createCloudExtensionsRecordZoneInOperationGroup:completionHandler:
createCloudSettingsRecordZoneInOperationGroup:completionHandler:
createCloudTabsRecordZoneInOperationGroup:completionHandler:
createDatabase
createDatabaseWithoutLock
createFolderWithType:database:
createLegacyPlaceholderTabGroupBookmarksForSharedTabGroup:
createMigrationFromDAVOperationGroupWithXPCActivity:
createMigrationStateCheckOperationGroupWithXPCActivity:qualityOfService:
createOperationGroupWithName:qualityOfService:xpcActivity:
createOperationGroupWithName:useLargerExpectedSendSize:
createRecordZoneAndEncryptionInfoWithZoneName:inOperationGroup:completionHandler:
createSubscriptionRequestOperationGroupWithQualityOfService:xpcActivity:
createSyncDownEvent
createSyncUpEvent
currentConnection
currentTabServerIDPresenceForParticipant:getTabGroupServerID:
currentTabServerIDPresenceForParticipant:inTabGroupWithServerID:
currentUserParticipant
data
dataAtIndex:
dataForKey:
dataUsingEncoding:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
database:hadSevereError:
databaseAccessor
databaseCoordinator
databaseLockArbiterDidAcquireDatabaseLock:
databaseOpen
databasePath
databasePathForConfiguration:
databaseRef
databaseSyncData
databaseSyncDataInDatabase:databaseAccessor:
databaseURLForFilename:
dataclassEnabled
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultDatabaseURL
defaultManager
defaultOperationGroup
defaultTransformer
delegate
deleteBackgroundImageDirectory
deleteBackgroundImageFromCloudKitWithCompletionHandler:
deleteBookmark:leaveTombstone:
deleteBookmarksRecordBatch:inOperationGroup:clientChangeTokenData:completionHandler:
deleteBookmarksZoneInOperationGroup:completionHandler:
deleteCloudExtensionDevicesWithUUIDStrings:completionHandler:
deleteCloudExtensionStatesDatabaseWithCompletionHandler:
deleteCloudSettingsRecords:inOperationGroup:completionHandler:
deleteCloudSettingsZoneInOperationGroup:completion:
deleteCloudTabCloseRequestsWithUUIDStrings:completionHandler:
deleteCloudTabRecords:inOperationGroup:completionHandler:
deleteCloudTabsZoneInOperationGroup:completionHandler:
deleteCloudTabsZoneWithCompletionHandler:
deleteDatabaseAndSyncDataForAccountChange
deleteDatabaseWithCompletionHandler:
deleteDevicesWithUUIDStrings:completionHandler:
deletePerSiteSettingsSyncData
deleteRecordZonesWithIDs:inOperationGroup:perRecordZoneDeleteBlock:completionHandler:
deleteRecords:completionHandler:
deleteRecordsWithIDs:inDatabase:operationGroup:completionHandler:
deleteRecordsWithPrimaryKeys:completionHandler:
deleteSubscriptionWithID:inDatabase:operationGroup:withCompletionHandler:
deletedRecordIDs
deletedRecordIDsInPrivateDatabase
deletedRecordIDsInSharedDatabase
deletedRecordNames
deletedRecordZoneIDs
deletedRecordZoneIDsInPrivateDatabase
dependencies
description
descriptor
destinationDevice
destinationDeviceUUIDString
determineManateeStateWithCompletion:
deviceCount
deviceIdentifier
deviceIdentifierForPositionGenerator:
deviceName
deviceUUIDString
dictionary
dictionaryRepresentation
dictionaryRepresentationForRecord:withCoordinator:
dictionaryWithObjects:forKeys:count:
didAddTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeBackgroundImageInSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeScopedFavoritesInSharedTabGroupWithUUID:byParticipantWithRecordID:
didDeleteBookmarkWithRecordName:
didDeleteRemoteRecordWithID:
didFailToMigrateToCKBookmarksAsPrimaryMigrator:error:
didFetchRecentlyAcceptedSharedTabGroupWithUUID:acceptedShareDate:
didLocallyMoveBookmarkWithRecordName:
didNavigateInTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didReceiveIncomingMessageForSubscriptionID:withPushTopic:userInfo:
didReceiveLocalNotificationWithPushTopic:
didReceivePushNotificationWithTopic:userInfo:
didReceiveRecordWithNameFromServer:
didReceiveRemoteCloudSettingsUpdateWithRecord:
didRemoveTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didStartMigratingToCKBookmarksAsPrimaryMigrator:localState:remoteState:
didSuccessfullyMigrateToCKBookmarksAsPrimaryMigrator:
disabled
displayName
domain
doubleAtIndex:
doubleForKey:
doubleValue
duplicateHash
emailAddress
enableWAL:
enabledByUserGesture
encodeObject:forKey:
encodedBookmarkSyncData
encodedData
encryptedPositionAttributeValueTransformer
encryptionInfoRecordWithZone:
encryptionRecord
endowmentNamespaces
enumerateDescendantsOfBookmark:usingBlock:
enumerateKeysAndObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
expirationDate
fetch
fetchAllBookmarkRecordsWithCompletionHandler:
fetchBookmarkRecordsWithNames:withCompletionHandler:
fetchBookmarksRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchBookmarksZoneSubscriptionStatusCreatingZoneIfNeeded:inOperationGroup:withCompletionHandler:
fetchCachedRemoteMigrationInfoWithCompletionHandler:
fetchChangesSinceServerChangeToken:inDatabase:operationGroup:completionHandler:
fetchCloudExtensionsRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchCloudExtensionsZoneSubscriptionInOperationGroup:completionHandler:
fetchCloudSettingsChangesImmediately
fetchCloudSettingsRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchCloudSettingsZoneSubscriptionInOperationGroup:withCompletionHandler:
fetchCloudTabDevicesAndCloseRequests
fetchCloudTabsRecordChangesSinceServerChangeToken:inOperationGroup:recordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchCloudTabsZoneSubscriptionInOperationGroup:withCompletionHandler:
fetchDevicesWithCompletionHandler:
fetchEncryptionInfoWithCompletionHandler:
fetchEncryptionRecordsForZonesWithIDs:inDatabase:operationGroup:completionHandler:
fetchMetadataZoneRecordsInOperationGroup:withRecordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchMetadataZoneRecordsWithRecordChangedBlock:recordWithIDWasDeletedBlock:completionHandler:
fetchMinimumSyncAPIVersionInOperationGroup:withCompletionHandler:
fetchNumberOfDevicesInSyncCircleInOperationGroup:completion:
fetchNumberOfDevicesInSyncCircleWithCompletionHandler:
fetchPrivateDatabaseSubscriptionStatusInOperationGroup:withCompletionHandler:
fetchRecordWithID:inDatabase:operationGroup:completionHandler:
fetchRecordZoneChangesInZonesWithIDs:perZoneConfigurations:inDatabase:operationGroup:recordWasChangedBlock:recordWithIDWasDeletedBlock:recordZoneFetchCompletionBlock:completionHandler:
fetchRecordsWithIDs:inDatabase:operationGroup:perRecordCompletionBlock:completionHandler:
fetchRemoteMigrationStateWithCompletionHandler:
fetchShareMetadataWithURL:invitationTokenData:inOperationGroup:completionHandler:
fetchShareRecordForRecordZoneWithID:inDatabase:operationGroup:completionHandler:
fetchSharedDatabaseSubscriptionStatusInOperationGroup:withCompletionHandler:
fetchSubscriptionWithID:inDatabase:operationGroup:withCompletionHandler:
fetchSyncedCloudTabDevicesAndCloseRequestsWithCompletionHandler:
fetchTabGroupEntitiesWithCompletion:
fetchUserIdentityInOperationGroup:withCompletionHandler:
fetchUserRecordIDWithCompletionHandler:
fieldForAttribute:
fields
fileExistsAtPath:isDirectory:
fileURLWithPath:isDirectory:
finishDecoding
finishMergingChangesWithDatabase:
fire
first
firstObject
fixRecoveredBookmarksIfNeeded
folderType
folderTypeForChange:
folderTypeWithFolder:
forwardingTargetForSelector:
generateDAVServerIDsForExistingBookmarksWithCompletionHandler:
generateEncryptedHashStringWithComponents:completionHandler:
generateHashStringWithComponents:
generateHashWithComponents:
generateIdentityHashWithComponents:
generatePositionBeforeFirstRecordInParentWithServerID:
generatePositionsForChildRecordNamesGroupedByParentFolders:
generateSyncPositionForBookmark:
generation
generationForKey:
generationKeyForField:
generationKeyForKey:
getAllPreferenceInformationForPreference:completionHandler:
getAppleAccountSecurityStateWithCompletion:
getCachedDevicesWithCompletionHandler:
getCloudExtensionStatesWithCompletionHandler:
getCloudSettingsContainerManateeStateWithCompletionHandler:
getCloudTabContainerManateeStateWithCompletionHandler:
getCloudTabDevicesWithCompletionHandler:
getCloudTabRemoteStoreWithCompletionHandler:
getCollaborationHighlightForURL:completionHandler:
getDeletedCloudKitSyncDataForRecordName:completionHandler:
getServerChangeTokenDataWithCompletionHandler:
getSyncDataForPreference:completionHandler:
getSyncDataForPreference:domain:completionHandler:
getUseManateeContainerForSyncingWithCompletionHandler:
handle
handlesRecordChangesToRecordZoneWithID:
hasDuplicateName
hasEntitlementForSensitiveOperationInCloudTabGroupSyncManager:
hasGenerationForKey:
hasPrefix:
hasSuffix:
hasUnappliedReferences
hasUndeletedRemovedBookmarks
hasUnverifiedMovedBookmarks
hash
hashGenerator
identifier
identityHashComponentsForRecord:
identityHashKeys
inMemoryDatabaseURL
includesMigrationRecordInSaveBatch
incrementGenerationForKey:withDeviceIdentifier:
incrementedGenerationWithDeviceIdentifier:
indexOfObject:
indexOfObject:inSortedRange:options:usingComparator:
indexOfObjectPassingTest:
init
initFolderWithParentID:collectionType:
initForReadingFromData:error:
initReadingListBookmarkWithTitle:address:previewText:
initRequiringSecureCoding:
initWithAccountStore:
initWithAccountStore:cloudExtensionStore:cloudExtensionSQLiteStore:
initWithAccountStore:collection:
initWithAccountStore:databaseCoordinator:
initWithBookmarkStore:
initWithBookmarkStore:collectionConfiguration:accountStore:
initWithBookmarkStore:database:databaseAccessor:accountPropertiesStore:
initWithBookmarkStore:databaseAccessor:migrationCoordinator:
initWithBookmarkStore:databaseAccessor:syncMigrationCoordinator:
initWithBookmarkStore:databaseCoordinator:accountStore:
initWithCKRecordZoneID:
initWithCKRecordZoneID:action:
initWithChange:deletedRecordZoneIDs:
initWithChange:deletedRecordZoneIDs:deletedRecordIDs:
initWithChange:deletedRecordZoneIDs:updatedRecords:deletedRecordIDs:
initWithChange:updatedRecords:
initWithChange:updatedRecords:deletedRecordIDs:
initWithCloudBookmarkStore:
initWithCloudRemoteStore:localStore:accountStore:
initWithCloudTabLocalStore:
initWithCollection:
initWithCollectionType:
initWithCollectionType:storeOwner:
initWithConfiguration:
initWithConfiguration:container:accountStore:
initWithConfiguration:container:accountStore:maintenanceActivity:
initWithConfiguration:openDatabase:
initWithContainer:
initWithContainerIdentifier:appleAccountInformationProvider:
initWithData:encoding:
initWithDatabase:databaseAccessor:
initWithDatabase:databaseAccessor:updater:
initWithDatabase:query:
initWithDatabase:query:error:
initWithDatabaseAccessor:
initWithDatabaseAccessor:database:
initWithDatabaseURL:
initWithDatabaseURL:cloudExtensionsRecordZoneID:
initWithDatabaseURL:cloudTabsRecordZoneID:
initWithDatabaseURL:databaseQueueLabel:
initWithDelegate:
initWithDeviceIdentifier:generation:
initWithDictionaryRepresentation:
initWithEncryptionInfoRecord:
initWithEnvironmentName:namedDelegatePort:queue:
initWithFileURL:
initWithFirst:second:
initWithHighlight:type:
initWithItemType:itemSubtype:recordType:knownKeys:identityHashKeys:keysWithoutGenerations:primaryCKRecordKeysToClear:primaryCKRecordKeysToSave:customAttributeGenerationKeys:attributeValueTransformers:identityHashValueTransformers:forRecordsPassingTest:
initWithKey:keyID:
initWithLog:
initWithMachServiceName:
initWithMigrationState:migratorDeviceIdentifier:serverModificationDate:
initWithObjectClass:
initWithObjectClasses:
initWithOwner:handlingQueue:
initWithParentPositionGenerator:
initWithRecord:action:
initWithRecordID:action:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordType:zoneID:
initWithRecordZoneID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithRootJSONObjectType:
initWithSet:
initWithSettingStore:accountStore:
initWithSharingInvitationData:shareURL:
initWithSubscriptionID:
initWithSubscriptionIDs:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithTabCollection:
initWithTitle:address:collectionType:
initWithTitle:address:parentID:subtype:deviceIdentifier:collectionType:
initWithType:container:localStorage:
initWithURL:queue:
initWithUUIDString:deviceOrCloseRequestDictionary:
initWithUserDefaults:type:
initWithZoneID:subscriptionID:
initWithZoneName:ownerName:
insertObject:atIndex:
int64AtIndex:
intAtIndex:
intValue
integerValue
interfaceWithProtocol:
intersectSet:
intersectsSet:
invalidate
invalidateCachedDataclassEnabledness
iosAppBundleIdentifier
iosExtensionBundleIdentifier
isCancelled
isCustomizationSyncEnabled
isDatabaseOpen
isDataclassEnabled
isDeleted
isDeletedRecordName:
isDeletingRecordZone
isDeviceToDeviceEncryptionEnabledForCloudTabGroupSyncManager:
isDuplicateOfBookmark:
isEmptyValue:
isEnabled
isEnabledForDataclass:
isEphemeralDevice
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToOrderedSet:
isEqualToSet:
isEqualToString:
isExpired
isFolder
isFull
isIdentityHashKey:
isInserted
isInternalInstall
isKindOfClass:
isMainThread
isMemberOfClass:
isPerSiteSettingSyncEnabled
isPinned
isPreferenceSyncable:
isReadableFileAtPath:
isReadingListFolder
isReadingListItem
isRunning
isSecondaryRecordZoneID:
isSelectedFavoritesFolder
isStartPageSettingSyncEnabled
isSyncEnabled
isSyncing
isValidJSONObject:
item
itemConfigurations
itemErrorFromError:forID:
itemSubtype
itemType
itemTypeForChange:
itemTypeWithItem:
itemWithServerIDIsFolder:
jsonArrayTransformer
jsonDictionaryTransformer
keyID
keysWithoutGenerations
knownKeys
lastErrorMessage
lastModified
lastModifiedDate
lastModifiedDateForNewTabPage
lastModifiedUserRecordID
lastObject
lastPathComponent
lastPrivateDatabaseServerChangeToken
lastReadGeneration
lastSelectedChildID
lastServerChangeTokenForRecordZoneID:
lastSharedDatabaseServerChangeToken
lastSyncedRecordGeneration
length
listener:shouldAcceptNewConnection:
loadCloudExtensionDataWithCompletionHandler:
loadCloudExtensionDeviceWithUUIDString:includeCloudExtensionStates:completionHandler:
loadCloudTabDataWithCompletionHandler:
loadCloudTabDeviceWithUUIDString:completionHandler:
localCloudKitMigrationState:
localMigrationState
localRecordGeneration
localStorage
localTimeZone
localizedDescription
localizedStandardCompare:
lockForClient:
lockSync
lookupInfo
lookupInfosWithEmails:
macAppBundleIdentifier
macExtensionBundleIdentifier
mainBundle
markAttributesAsModified:
markChildrenInFolderAsRead:
markSpecial:
metadata
migrateToCloudKitWithCompletionHandler:
migrationState
migrationStateKey
migratorDeviceIdentifier
minimumAPIVersion
minimumSyncAPIVersion
minusSet:
modificationDate
modifiedAttributeMask
modifiedAttributes
modifiedOrLocalValueForKey:
modifiedSyncingAttributesForBookmark:
modifyRecords:andDeleteRecordIDs:inDatabase:operationGroup:mergeHandler:completionHandler:
modifyRecords:inDatabase:operationGroup:mergeHandler:completionHandler:
monitorWithConfiguration:
moveBookmark:toFolderWithID:orderIndex:
moveBookmarksIntoPlace
movePresenceForParticipantToTabWithUUID:
movedRecordNames
mutableCopy
name
namesOfLocalRecordsToDelete
newTabPageSetByUserGesture
nextChangeAfterLocalRecordGeneration:
nextChangeID
nextChangeIDForPositionInPositionGenerator:
nextObject
notificationFromRemoteNotificationDictionary:
notifyForSaveOfAssetWithKey:item:
null
numberOfDeletedBookmarks
numberOfMovedBookmarks
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectClasses
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
observeRemoteMigrationStateForSecondaryMigration
openDatabase
openDatabase:
openDatabaseIfNecessary
openWithAccessType:error:
operationConfiguration
operations
orderIndexOfBookmark:withSyncPosition:inFolderWithID:
orderedSet
orderedSetWithArray:
orderedSetWithObject:
owningDevice
owningDeviceUUIDString
owningSceneID
parentID
parentRecordName
parentRecordNamesToMovedChildRecordNames
participants
participants:didJoinSharedTabGroupWithUUID:
participants:didLeaveSharedTabGroupWithUUID:
path
pcsIdentitiesDidChangeForCloudSettingSyncCoordinator:
performDatabaseUpdatesWithTransaction:secureDelete:
performDeduplicationWithDatabase:mode:
performHierarchyCheck
performInitialSyncDown
performMaintenance
performMaintenanceOnDatabase:afterVersion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistEvents
pinned
position
positionAttributeValueTransformer
positionBetweenPosition:andPosition:withDeviceIdentifier:changeID:
positionDictionaryRepresentation
positionForBookmarkWithRecordName:
positionForCloudBookmarkWithRecordName:
positionForItemWithRecordName:inDatabase:databaseAccessor:
positionForRecordName:
positionFromContentsOfData:
positionGenerator:positionForRecordName:
positionGenerator:recordNameOfBookmarksAfterRecordWithName:
positionGenerator:recordNameOfBookmarksBeforeRecordWithName:
positionTabAfterPosition:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
predicateMatchingBundleIdentifier:
previousServerChangeToken
primaryCKRecordGenerationKeysToClear
primaryCKRecordKeysToClear
primaryCKRecordKeysToSave
privacyPreservingDescription
privateCloudDatabase
processChanges
processIdentifier
propertyListWithData:options:format:error:
readerScrollPositionDictionary
readerScrollPositionPageIndex
readingListItemConfiguration
record
recordID
recordIDForParentSyncServerID:
recordIDsToRefresh
recordName
recordNameEnumerator
recordType
recordZoneID
recordZoneIDsToHashGenerators
recordZoneSubscriptionID
registerActivity
registerForPushNotificationsIfNeeded
registerMigrationXPCActivity:
registerSyncObserver:
registeredStateCollectorWithLogLabel:payloadProvider:
remoteObjectProxyWithErrorHandler:
removeAllCloudKitRecordsWithCompletionHandler:
removeAllObjects
removeAllSyncData
removeItemAtURL:error:
removeItemWithServerId:database:
removeLocalItemsForDeletedRecordNames
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsInRange:
removeObserver:name:object:
removeParticipant:
removeParticipantsWithEmailAddresses:fromShareInRecordZoneWithID:inOperationGroup:completionHandler:
removePreferenceValueWithRecordName:completionHandler:
removePresenceForParticipant:inTabGroupWithServerID:
removeSyncObserver:
removeTombstoneWithRecordName:completionHandler:
removeUnusedPresenceRecords
reorderAllBookmarksUsingSyncPosition
reportErrorWithCode:statement:error:
requestUUIDString
reset
resetDeviceIdentifier
resetDeviceIdentifierForCloudKitWithCollectionType:
resetToDAVDatabaseWithCompletionHandler:
resetToNonMigratedStateInOperationGroup:completionHandler:
respondsToSelector:
resultFromMergingRecord:usingUpdater:
resultFromMergingRecord:usingUpdater:isLocalUpdateOnly:
resume
retain
retainCount
reverseTransformedValue:
reverseTransformedValueOrNull:
rootJSONObjectType
rootRecordName
rootRecordNameForSecondaryRecordZoneID:
safariTabCollectionConfiguration
safari_arrayByGroupingIntoArraysWithMaxCount:
safari_arrayForKey:
safari_bookmarksRecordZoneID
safari_boolForKey:
safari_browserDefaults
safari_cloudBookmarksContainer
safari_cloudBookmarksDefaults
safari_cloudExtensionDeviceRecord
safari_cloudExtensionStateRecord
safari_cloudKitPartialErrorForItemID:
safari_cloudSettingsContainer
safari_cloudTabCloseRequestRecord
safari_cloudTabDeviceRecord
safari_cloudTabRecord
safari_cloudTabsContainer
safari_containsCloudKitMissingZoneErrorForRecordZoneID:
safari_dataByCompressingData
safari_dataByDecompressingData
safari_dateForKey:
safari_defaultPositionUsingValueTransformer:
safari_deviceOSBuild
safari_deviceOSKind
safari_deviceOSVersion
safari_deviceOSVersionNumber
safari_deviceSoftwareBundleID
safari_deviceSoftwareVersion
safari_dictionaryByMappingObjectsAsKeysToObjectsUsingBlock:
safari_dictionaryByMappingObjectsToKeysUsingBlock:
safari_dictionaryForKey:
safari_encodedRecordData
safari_encodedSystemFieldsData
safari_encryptedValues
safari_encryptionInfoRecord
safari_ensureDirectoryExists:
safari_errorFromErrors:
safari_errorWithCloudBookmarksCode:userInfo:
safari_errorWithDomain:code:privacyPreservingDescription:
safari_firstObjectPassingTest:
safari_generationForKey:
safari_hasAtLeastOneChangedField
safari_hasOrContainsErrorWithCloudKitErrorCode:
safari_initWithEncodedRecordData:
safari_isAtomicWriteError
safari_isCloudExtensionDeviceRecord
safari_isCloudExtensionStateRecord
safari_isCloudKitBatchTooLargeError
safari_isCloudKitExpiredChangeTokenError
safari_isCloudKitInternalErrorWithCode:
safari_isCloudKitMissingZoneError
safari_isCloudKitNonExistentRecordError
safari_isCloudKitPartialFailureError
safari_isCloudKitWriteConflictError
safari_isCloudTabCloseRequestRecord
safari_isCloudTabDeviceRecord
safari_isCloudTabRecord
safari_isCouldNotOpenDatabaseError
safari_isEncryptionInfoRecord
safari_isInCloudBookmarksErrorDomain
safari_isInCloudKitErrorDomain
safari_isInPrivateDatabase
safari_isMetadataDevice
safari_isMigrationStateRecord
safari_isMigrationStateRecordChangedError
safari_isOrContainsCloudKitMissingManateeIdentityError
safari_isOrContainsCloudKitMissingZoneError
safari_isTabGroupSecondaryRecordZoneID
safari_isUnrecoverableCloudKitError
safari_isUserDeletedZoneError
safari_isVersionStringBetweenVersionString:andVersionString:
safari_isVersionStringGreaterThanVersionString:
safari_logDescription
safari_mapAndFilterKeysAndObjectsUsingBlock:
safari_mapAndFilterKeysUsingBlock:
safari_mapAndFilterObjectsUsingBlock:
safari_mapObjectsUsingBlock:
safari_matchesErrorDomain:andCode:
safari_matchesErrorDomainsAndCodes:
safari_migrationState
safari_migrationStateRecord
safari_minimumAPIVersion
safari_minimumSyncAPIVersion
safari_minimumUsingComparator:
safari_normalizedVersion
safari_numberForKey:
safari_operationGroupWithName:qualityOfService:xpcActivity:
safari_positionDictionaryRepresentationUsingValueTransformer:
safari_primaryAppleAccount
safari_privacyPreservingDescription
safari_recordName
safari_removeFileAtURL:error:
safari_safariApplicationPlatformBundleIdentifier
safari_setDefaultPosition:usingValueTransformer:
safari_setGeneration:forKey:
safari_setMigrationState:
safari_setMigratorDeviceIdentifier:
safari_setMinimumAPIVersion:
safari_setMinimumSyncAPIVersion:
safari_setObject:
safari_setPositionDictionaryRepresentation:usingValueTransformer:
safari_setState:
safari_startPageBackgroundImageFileURL
safari_startPageBackgroundImageFileURLForIdentifier:
safari_state
safari_stringByNormalizingVersionString
safari_stringForKey:
safari_substringFromPrefix:
safari_syncRequirementsRecord
safari_tabGroupRootRecordName
safari_tabGroupSecondaryRecordZoneIDWithRootRecordName:
safari_tabGroupsRecordZoneID
saveAssetAtURL:toURL:completionHandler:
saveAssetsIfNeededWithUpdater:
saveBackupOfDatabase:withName:
saveBookmark:
saveBookmark:incrementGenerations:
saveBookmarksRecordBatch:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
saveBookmarksZoneSubscriptionInOperationGroup:withCompletionHandler:
saveCloudExtensionDevices:extensionStates:completionHandler:
saveCloudExtensionsRecordBatch:createCloudExtensionsZoneIfMissing:inOperationGroup:completionHandler:
saveCloudExtensionsZoneSubscriptionInOperationGroup:completionHandler:
saveCloudPerSiteSettingWithDictionaryRepresentation:successCompletionHandler:
saveCloudSettingWithDictionaryRepresentation:successCompletionHandler:
saveCloudSettingsRecords:createCloudSettingsZoneIfMissing:inOperationGroup:clientChangeTokenData:mergeHandler:completionHandler:
saveCloudSettingsZoneSubscriptionInOperationGroup:withCompletionHandler:
saveCloudTabCloseRequestWithDictionaryRepresentation:closeRequestUUIDString:completionHandler:
saveCloudTabDevices:tabs:closeRequests:completionHandler:
saveCloudTabsRecordBatch:createCloudTabsZoneIfMissing:inOperationGroup:completionHandler:
saveCloudTabsZoneSubscriptionInOperationGroup:withCompletionHandler:
saveDatabase:
saveExtensionDeviceWithDictionaryRepresentation:completionHandler:
saveExtensionStatesWithDictionaryRepresentation:forDevice:completionHandler:
saveImageRecord:successCompletionHandler:
saveOrLoadRecord:inDatabase:operationGroup:completionHandler:
savePerSiteRecords:completionHandler:
savePerSiteSettingCloudKitRecordToDisk:completionHandler:
savePrivateDatabaseSubscriptionInOperationGroup:withCompletionHandler:
saveRecords:successCompletionHandler:
saveSharedDatabaseSubscriptionInOperationGroup:withCompletionHandler:
saveSubscription:inDatabase:operationGroup:withCompletionHandler:
saveTabsForCurrentDeviceWithDictionaryRepresentation:deviceUUIDString:completionHandler:
scheduleCloudBackgroundImageSaveWithURL:isLightAppearance:successCompletionHandler:
scheduleRetryIfNeededForError:usingBlock:
scheduleSyncIfNeeded
scheduledTimerWithTimeInterval:repeats:block:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheme
second
secondaryRecordZoneIDWithRootRecordName:
secondaryRecordZoneNamePrefix
secondaryZoneNameForBookmark:
securityLevelForAccount:
self
sendSyncDidFinishNotificationWithResult:
serverChangeToken
serverID
serverIDsInFolderWithServerID:
serverIDsInFolderWithServerID:excludeDeletedBookmarks:
serverModificationDate
setAccountHash:database:
setAddress:
setAtomic:
setAutomaticallyRetryNetworkFailures:
setAuxiliaryRecord:forKey:
setAuxiliaryRecordIDsToDelete:
setBeginDate:
setChildrenOrder:forFolderWithServerId:database:
setClientChangeTokenData:
setCloudExtensionStates:
setConfiguration:
setConfigurationsByRecordZoneID:
setContainer:
setContainsCKShareRecord:
setDatabase:
setDateAdded:
setDateLastViewed:
setDefaultConfiguration:
setDefaultOperationGroup:
setDelegate:
setDeletedBookmarkSyncData:change:
setDeviceIdentifier:
setDidExceedRetryTimeout:
setDidNotSaveRecordsAfterMigration:
setDisabled:
setDiscretionaryNetworkBehavior:
setEnabledTopics:ignoredTopics:opportunisticTopics:
setEndDate:
setEndowmentNamespaces:
setExpectedReceiveSize:
setExpectedSendSize:
setExportedInterface:
setExportedObject:
setFetchAllChanges:
setFetchDatabaseChangesCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
setFetchRecordZonesCompletionBlock:
setFetchShareMetadataCompletionBlock:
setFetchShareParticipantsCompletionBlock:
setFetchSubscriptionCompletionBlock:
setGeneration:
setGeneration:forKey:
setGroup:
setHandler:
setHashGenerator:forRecordZoneID:
setIncludesMigrationRecordInSaveBatch:
setItemConfigurations:
setLastPrivateDatabaseServerChangeToken:
setLastReadGeneration:
setLastSelectedChildID:
setLastServerChangeToken:forRecordZoneID:
setLastSharedDatabaseServerChangeToken:
setLastSyncedRecordGeneration:
setLocalCloudKitMigrationState:database:
setLocalMigrationState:
setLocalMigrationState:generateDeviceIdentifierIfNeeded:
setMetadata:
setMigrationState:
setMigrationStateEncodedRecordData:
setMinimumAPIVersion:
setMinimumSyncAPIVersion:
setMinimumSyncAPIVersion:completionHandler:
setModifiedAttributeMask:
setModifiedAttributes:item:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setName:
setNeedsAccountHashCheck
setNeedsDataclassEnabledCheck
setNotificationInfo:
setObject:forKey:
setObject:forKeyedSubscript:
setOwnerDidDeallocateBlock:
setPageZoomSyncData:forRecordName:completionHandler:
setParentRecordID:
setParticipantSelfRemovalBehavior:
setPerRecordCompletionBlock:
setPerRecordDeleteBlock:
setPerRecordSaveBlock:
setPerRecordZoneDeleteBlock:
setPerShareCompletionBlock:
setPerShareMetadataBlock:
setPerShareParticipantCompletionBlock:
setPermission:
setPinned:title:address:
setPosition:
setPositionDictionaryRepresentation:
setPredicates:
setPresenceInTabWithServerID:tabGroupWithServerID:forParticipant:
setPresenceToTabWithRecordID:inOperationGroup:completionHandler:
setPreviousServerChangeToken:
setQualityOfService:
setReadingListIconURL:
setRecord:
setRecordChangedBlock:
setRecordIDs:
setRecordIDsToDelete:
setRecordWasChangedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneIDs:
setRecordZoneIDsToDelete:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock:
setRecordZoneWithIDWasPurgedBlock:
setRecordZonesToSave:
setRecordsToSave:
setRemoteMigrationState:deviceIdentifier:inOperationGroup:completionHandler:
setResourceValue:forKey:error:
setRole:
setRootRecordName:
setSelectedFavoritesFolder:
setServerChangeToken:
setServerChangeTokenData:completionHandler:
setServerID:
setServerID:forBookmark:
setServerId:item:
setShareInvitationTokensByShareURL:
setShareMetadatas:
setShareURLs:
setShouldSendContentAvailable:
setState:
setStateChangeObserver:
setStateDescriptor:
setStoreOwner:
setSubscriptionIDs:
setSubscriptionIDsToDelete:
setSubscriptionsToSave:
setSubtitle:
setSymbolName:
setSyncData:forKey:
setSyncData:item:
setSyncKey:item:
setSyncPosition:
setSyncPosition:incrementGeneration:
setSyncState:
setSyncing:
setSystemSharingUIDidSaveShareBlock:
setSystemSharingUIDidStopSharingBlock:
setTabs:
setTimeout:
setTimeoutIntervalForRequest:
setTitle:
setTrackChanges:
setUnderlyingQueue:
setUpBookmarksRecordZoneCreatingIfNeeded:inOperationGroup:withCompletionHandler:
setUpSharingForRecordZoneWithID:inOperationGroup:completionHandler:
setUpdateHandler:
setUseManateeContainerForSyncing:completionHandler:
setUserIdentityLookupInfos:
setUsesOpportunisticPushTopic:
setValues:
setWantsNewInvitationToken:
setWithArray:
setWithObject:
set_cloudExtensionStoreError:
set_cloudTabStoreError:
set_database:
set_databaseQueue:
set_isBeingTornDown:
settingStore
share
shareDidUpdateForTabGroupWithUUID:
shareRecord
sharedCloudDatabase
sharedInstance
sharedLogger
shouldApplyReference:withGeneration:toAttribute:inRecordWithName:
shouldUpdatePresence
showingReader
size
sortUsingComparator:
sortedArrayUsingSelector:
standardUserDefaults
startCoordinatingMigrationInOperationGroup:completionHandler:
startMigrationIfNeeded
state
statement
staticSyncablePerSiteSettings
store
storeOwner
stringAtIndex:
stringByAppendingString:
stringForKey:
stringFromDate:timeZone:formatOptions:
stringWithFormat:
strongToStrongObjectsMapTable
subarrayWithRange:
subscriptionID
subtitle
superclass
supportsDeviceToDeviceEncryption
symbolName
symbolNameForRecordType:
syncCoordinator:didBeginSyncDownWithConfigurations:
syncCoordinator:didSendRecordBatch:deletedRecordIDBatch:
syncCoordinatorDidBeginDeletingAuxiliaryRecords:
syncCoordinatorDidBeginSyncUp:
syncCoordinatorDidFinishDeletingAuxiliaryRecords:
syncCoordinatorDidFinishSyncDown:
syncDataForBookmark:
syncDataWithContentsOfData:
syncDownSafariPerSiteSettingsSyncWithCompletion:
syncDownSafariSettingsSyncWithCompletion:
syncPosition
syncSetString:forKey:
syncSettingsUpDictionary
syncState
syncStringForKey:
syncUpSafariPerSiteSettingsSyncWithCompletion:
syncUpSafariSettingsSyncWithCompletion:
syncableBookmarksIDsInFolderWithBookmarkID:
tabGroupBookmarkConfiguration
tabGroupBookmarkFolderConfiguration
tabGroupConfiguration
tabGroupDatabaseAccessorWithStoreOwner:
tabGroupMaintenanceActivityDidFinish:
tabGroupTabConfiguration
tabGroups
tabSyncArbiter:containerUsingManatee:
tabURLString
tabUUIDString
tabWithUUID:
tabs
tearDown
timeIntervalSinceNow
timeIntervalSinceReferenceDate
title
topBookmarkRecord
topic
transformedValue:
transformedValueClass
transformedValueOrNull:
transformerForRecord:
triggerImmediateBackgroundImageSaveIfApplicable
triggerSafariTabGroupSync
type
unableToSilentlyMigrateToCKBookmarksWithReason:
unarchivedObjectOfClass:fromData:error:
uncopiedDataAtIndex:
unionSet:
unlockForClient:
unlockSync
unregisterSyncObserver:
unsignedIntegerValue
updateAccountHash:
updateAccountHashIfNeeded
updateContainsCKShareRecord
updateDatabaseSyncDataUsingBlock:
updateFromCloudExtensionDeviceWithoutUpdatingExtensionStates:
updateFromCloudExtensionState:
updateFromCloudTab:previousTabPosition:
updateFromCloudTabDevice:
updatePushTopicSubscriptions
updateSelectedFavoritesFolderWithBookmarkID:wasFavoritesFolder:isFavoritesFolder:
updateSyncDataForBookmark:usingBlock:
updateSyncDataForBookmarkWithRecordName:excludeDeletedBookmarks:usingBlock:
updateSyncDataGenerationsWithChange:databaseAccessor:updater:
updatedRecords
updatedRecordsInSharedDatabase
urlString
userAccountChanged
userAccountDidChange:
userDidAcceptCloudKitShareWithMetadata:completionHandler:
userDidUpdateBookmarkDatabase
userDidUpdateCloudTabGroupSyncManagerDatabase:
userIdentity
userInfo
userRecordID
username
usesManateeContainer
uuid
value
valueForEntitlement:
valueForKey:
valueForKeyPath:
valueTransformerForAttributeKey:
valueTransformerForAttributeKey:record:
valueTransformerForIdentityHashKey:
verifyAndReparentUnrootedBookmarksRememberingOriginalParents
verifyIdentityHashInBookmarkRecord:configuration:
wasEnabledByUserGesture
wasNewTabPageSetByUserGesture
wb_databaseOpenError
wb_lockError
wbsCloudTabCloseRequestDictionaryRepresentation
wbsCloudTabDeviceDictionary
wbsCloudTabDictionaryRepresentation
weakObjectsHashTable
writeToDatabase:databaseAccessor:
writeToURL:options:error:
zone
zoneID
Not updating push topic
Updating push topic subscriptions with sync enabled = %d
Using opportunistic push topic
Using normal push topic
Set up push connection
Failed to instantiate CloudKit extensions database
Fetching CloudExtensions zone subscription
Failed to fetch CloudExtensions zone subscription by ID with error: %{public}@
Successfully fetched CloudExtensions zone subscription
Saving CloudExtensions zone subscription
Bailing out from saving CloudExtensions zone subscription due to deallocation
Saving CloudExtensions zone subscription failed because of missing zone, attempting to create zone
Aborting save of CloudExtensions zone subscription because zone couldn't be created
Saving CloudExtensions zone subscription after creating zone
Saving record batch of size: %lu
Attempting to create CloudExtensions zone before retrying save
Retrying save after creating CloudExtensionsZone
No records to delete.
Deleting %lu records.
Grouping delete requests for %lu objects into %lu batches
Deleting records failed: %{public}@
Fetching record changes with server change token %{public}@.
Fetching all records.
Saving record batch with %lu records
Failed to save record due to unrecoverable error: %{public}@
Received batch too large error for an individual record change; bailing out
Failed to save record due to unexpected error: %{public}@
Failed to save record due to unexpected error outside the CKErrorDomain: %{public}@
Failed to save record due to CloudKit error which could not be handled: %{public}@
Batch record save operation completed but failed to save records due to unrecoverable error: %{public}@
Batch record save operation completed but bailing out from batch save due to previously cancelling the request
Batch record save operation completed but server rejected the smallest batch we can send; bailing out
All attempts at re-batching record save failed
Attempting to re-batch record save
Batch record save operation completed but we need to re-batch
Modify records operation failed due to deallocation with error %{public}@
Attempting to retry batch save request
Record batch save retry limit exceeded
Record changed: %@
Record of type %{public}@ deleted: <%@>
Bailing out from record fetch due to deallocation with error %{public}@
Record fetch retry limit exceeded
Fetch record changes failed: %{public}@
Fetch records from record zone operation completed for CloudExtensions record zone
Fetch record zone changes operation failed: %{public}@
Enqueuing request to fetch records from CloudExtensions record zone
Enqueuing %lu modify records operations
Creating CloudExtensions zone
Failed to create CloudExtensions zone with error: %{public}@
Bailing out of creating CloudExtensions zone due to deallocation
Retrying creation of CloudExtensions zone
Waiting to retry creation of CloudExtensions zone
Zone creation retry limit exceeded
Successfully created CloudExtensions zone
Attempting to save zone subscription for CloudExtensions zone
Error occurred deleting records, canceling dependent operations: %{public}@
Finished %@
Received PCS change notification with state %{public}@
Ignoring PCS state change notification because it is the same as the current state %ld
Updating PCS state in response to PCS change notification with state %{public}@
Received a push notification
Ignoring push notification because notification is nil
Ignoring push notification because sync is disabled
User account changed
Received account Added notification
Received account Modified notification
Received account Deleted notification
Failed to determine encryption state of cloud settings container because container isn't available
Failed to determine encryption state of cloud settings container: %{public}@
Cloud settings container %{public}@ support encryption
Not triggering sync since migration is in progress
*** Starting CloudKit bookmark sync for trigger: %{public}@
Transmitted Internet Records
*** CloudKit bookmark sync failed with result <%{public}@>: %{public}@
*** CloudKit bookmark sync finished with result: %{public}@
Attempting migration from DAV to CloudKit since we got back an explicit 'zone deleted' error
Sending notification of Bookmarks sync result: %ld
Fetching remote migration state
Simulating fetch of 'Unknown' migration state because Safari sync is disabled
Failed to fetch remote migration state: %{public}@
Fetched remote migration state: %ld
Asked to migrate, but bailing because migration is suppressed by the cycler
Bailing out from migration since migration was already in progress
Failed to generate Per-Site Settings record name with error: %{public}@
Failed to generate a CKRecord with the sync data for preference: %{sensitive, mask.hash}@ and domain: %{sensitive, mask.hash}@
Failed to archive dictionary[WBSCloudPerSiteSettingValue] NSDictionary: %{public}@
*** Per site settings initial fetch failed with result <%ld>: %{public}@
*** Per Site settings initial fetch finished with result: %ld
Failed to load permissions from preferences database for %{private}@
Safari's per-site settings have been updated in CloudKit
*** Cloud settings initial fetch failed with result <%ld>: %{public}@
*** Cloud settings initial fetch finished with result: %ld
Beginning to fetch %lu tab group entities for focus
Mapping tab group UUID %{public}@ to title %{sensitive, mask.hash}@
Connection to bookmarks sync agent by %d was denied: Missing entitlement
Ignoring push notification %{public}@ because it does not match any known push topic
Push notification %{public}@ comes from a container that is used by multiple sync coordinators
Attempting to sync Bookmarks in response to a subscription push notification
Attempting to sync Cloud Settings in response to a subscription push notification
Attempting to sync Tab Groups in response to a subscription push notification
Attempting to sync Cloud Tabs in response to a subscription push notification
Ignoring push notification %{public}@ because it does not match any known subscription
Reached maximum delay before forcing a sync after a push notification
Ignoring attempt at checking database changes since a request is already running - container: %{public}@
Beginning fetch database change operation for container with identifier: %{public}@, server change token: %{public}@
recordZoneChangedBlock for zone ID: %{public}@
Bookmarks zone changed
Tab Groups zone changed
Cloud Tabs zone changed
Cloud Settings zone changed
Cloud Extensions zone changed
recordZoneChangedBlock did not handle zone ID: %{public}@
Failed to fetch database changes for container: %{public}@ with error: %{public}@
Did finish fetching database change operations for container with identifier: %{public}@, new server change token: %{public}@
Attempting to sync Bookmarks in response to a push notification after checking container zones
Attempting to sync Tab Groups in response to a push notification after checking container zones
Attempting to sync CloudKit Tabs in response to a push notification after checking container zones
Attempting to sync settings in response to a push notification after checking container zones
Attempting to sync extension state in response to a push notification after checking container zones
Fetching Bookmarks zone subscription status failed with error: <%{public}@>.
Bookmarks zone subscription already exists
Saving Bookmarks zone subscription failed with error: <%{public}@>.
Saving Bookmarks zone subscription succeeded
Fetching CloudTabs zone subscription status failed with error: <%{public}@>.
CloudTabs zone subscription already exists
Saving CloudTabs zone subscription failed with error: <%{public}@>.
Saving CloudTabs zone subscription succeeded
Ignoring request to sync/migrate because migration is in progress
Ignoring request to sync/migrate because sync is in progress
Will attempt sync/migration in response to trigger: %{public}@
Fetching remote migration state since we tried syncing while not locally migrated
Did receive Cloud Tabs update notification
Notifying Safari of iCloud Tabs changes in response to a push notification
Retrying initial CloudTab fetch
Finished initial CloudTab fetch with error %{public}@
Fetching CloudSettings zone subscription failed due to deallocation
Fetching CloudSettings zone subscription status failed with error: <%{public}@>.
CloudSettings zone subscription already exists
Saving CloudSettings zone subscription failed due to deallocation
Saving CloudSettings zone subscription failed with error: <%{public}@>.
Saving CloudSettings zone subscription succeeded
Ignoring request to sync because sync is in progress
Safari Settings syncing is disabled. Cloud settings sync aborted
*** Starting Cloud settings sync for trigger: %{public}@
*** Cloud settings sync failed with result <%ld>: %{public}@
*** Cloud settings sync finished with result: %ld
Notifying Safari of extension state changes in response to a push notification
Fetching CloudExtensions zone subscription failed due to deallocation
Fetching CloudExtensions zone subscription status failed with error: <%{public}@>.
CloudExtensions zone subscription already exists
Saving CloudExtensions zone subscription failed due to deallocation
Saving CloudExtensions zone subscription failed with error: <%{public}@>.
Saving CloudExtensions zone subscription succeeded
Received container change callback. Registering for a new zone subscription
*** Migration to CloudKit started
Checking In xpc activity with identifier %{public}s
Checked In xpc activity with identifier %{public}s
An activity with identifier %{public}s is already scheduled
No prior %{public}s activity was found. Registering a new one
No prior %{public}s activity was found and registration is not requested
Every CloudKit subscription registration succeeded or we were already subscribed
Failed to register for subscriptions to these services: %{public}@
No need to register for CloudKit subscriptions because a registration is in progress
Registering for CloudKit subscriptions xpc activity. Register if needed: %d, ignore ongoing registration: %d delay: %lld, last successful registrations: %{public}@, remaining subscriptions to register: %{public}@
Attempting to save %{public}@ subscriptions
Not attempting to register CloudKit subscriptions because syncing is not available for account: %{private}@
Attempting to register CloudKit subscriptions for account: %{private}@
Registering %{public}@ subscription succeeded or we were already subscribed
Registering %{public}@ subscription failed with error: <%{public}@>
Checking remote migration state for a chance to migrate as a secondary device
Remote migration state is set to finished; determining if secondary device migration can proceed
Attempting to migrate as secondary device
Not proceeding with migration because there is already an ongoing migration
Not proceeding with migration because this device was the primary migrator
No device has migrated yet; continuing to periodically check the remote migration state
Unsupported remote migration state returned; stopping the periodic remote migration check
Registering migration XPC activity
CloudKit bookmarks migration activity is running
Attempting to migrate to CloudKit
*** Migration to CloudKit finished with status: %d
Fetching TabGroups private database subscription status failed with error: <%{public}@>.
TabGroups database private subscription already exists
Saving TabGroups private database subscription failed with error: <%{public}@>.
Saving TabGroups private database subscription succeeded
Fetching TabGroups shared database subscription status failed with error: <%{public}@>.
TabGroups shared database subscription already exists
Saving TabGroups shared database subscription failed with error: <%{public}@>.
Saving TabGroups shared database subscription succeeded
Ignoring request to sync TabGroups because sync is in progress
Scheduling a discretionary tab groups sync
Scheduling an immediate tab groups sync
Retry tab groups sync because running outside of XPC activity failed.
Will attempt tab group sync in response to trigger: %{public}@
Ignoring request to sync TabGroups for manager %{public}@ with trigger %{public}@ because the database does not exist yet
CloudTabGroupSyncManager did find changes for zoneIDs: %{public}@
Attempting to sync CloudKit Tabs in response to CloudTabGroupSyncManager detecting changes in CloudTabs record zone
Did detect an issue while syncing related to <rdar://%{public}@>
Did detect an issue while syncing with no corresponding bug IDs
Attempted to post detected syncing bug notification without bug IDs
Posting detected syncing bug notification with bug IDs: <rdar://%{public}@>
Hierarchy check failed, please run sysdiagnose
Asking the position for the root record makes no sense
Unknown item with record name: %{public}@
Item with record name does not have sync data: %{public}@
%{public}s Unknown item type
Creating CloudBookmark to update locally with record name: %{public}@
Unknown item for reparenting with record name: %{public}@
%{public}s Unknown item type %{public}@
Attempting to migrate record with name %{public}@ that does not exist in the local database.
%{public}s Unknown item type %ld
Delete change %{private}@ to update does not have a valid record
Could not decode sync data in deleted change %{private}@ to update with record name: %{public}@.
No record object found in decoded sync data of deleted change %{private}@ to update with record name: %{public}@.
Updating state generation of deleted record with name: %{public}@, generation: %{public}@
Unknown type %ld for change %{private}@
Cannot find configuration for change with type %{public}@ for bookmark %{public}@
Change of type %{public}@ for bookmark %{public}@ of type %{public}@ given without an associated item
Expecting CKBAItemTypeBookmark type for local item %p, but got %ld
Expecting CKBAItemTypeBookmark type for local item %{private}@, but got %ld
Expecting %{public}@ type for local bookmark item %p, but got %ld
Expecting %{public}@ type for local bookmark item %{private}@, but got %ld
Expecting CKBAItemTypeFolder type for local item %p, but got %ld
Expecting CKBAItemTypeFolder type for local item %{private}@, but got %ld
Expecting %{public}@ folder type for local folder item %p, but got %ld
Expecting %{public}@ folder type for local folder item %{private}@, but got %ld
%{public}s Unknown CKRecord type %{public}@
Updating references for the root record makes no sense
Could not find item with record name %{public}@ in database to apply pending references %{public}@
Cannot find configuration for item with record name: %{public}@ to apply pending references %{public}@
Local record with record name %{public}@ to reparent does not have a CKRecord stored in its sync data %{public}@
Reparenting record with record name: %{public}@
%{public}s Unknown item type for record name %{public}@
Delete change of type %{public}@ given without a Server ID
Assigning new record with record name %{public}@ to locally modified item, this could create an empty record on the server
Assigning new record with record name %{public}@ to locally added item
Deleted bookmark change %{private}@ does not have a valid record name.
Ignoring Delete Change object for built-in record with name: %{public}@.
Deleted bookmark change with record name %{public}@ does not have a CKRecord attached to it
Preparing record with name %{public}@ to mark as deleted on the server with generation: %{public}@
Encountered an item with no record name; ignoring it
CKRecord %{private}@ with invalid record name was received; ignoring it
Creating %{public}@ record with name %{public}@ to add locally with parent: %{public}@ and position: %{public}@
Creating %{public}@ record with name %{public}@ to add locally with parent: %{public}@
Remote record is missing generation for its parent and position fields
Local record to migrate %p has an invalid record name even though it should have one at this point
Local record to migrate %{private}@ has an invalid record name even though it should have one at this point
Creating %{public}@ to complement saved record with name: %{public}@
Migrated record %{public}@ known to the server has no position!
Creating %{public}@ to migrate record unknown to the server with name: %{public}@
Preparing %{public}@ record with name: %{public}@ for change of type %{public}@ to save to the server with updated keys: <%{public}@>
Attributes <%{public}@> are not included in the set of modified attributes to update the CKRecord despite being used to update the generation
Attributes <%{public}@> are included in the set of modified attributes to update the CKRecord despite not being used to update the generation
Trying to read the value for a key on a record that was deleted locally. Record name: <%{public}@>, key: %{public}@.
Trying to read the value for a key even though the key was not modified locally in record. Record name: <%{public}@>, key: %{public}@.
Trying to read the transformed value for a key on a record that was deleted locally. Record name: <%{public}@>, key: %{public}@.
Trying to read the transformed value for a key even though the key was not modified locally in record. Record name: <%{public}@>, key: %{public}@.
Trying to read the value of ParentFolder on a record whose parent was not updated locally. Record name: <%{public}@>.
Trying to read the value of ParentFolder on a record that was deleted locally. Record name: <%{public}@>.
Trying to read the value of IdentityHash on a record whose Title or URL was not updated locally. Record name: <%{public}@>.
Trying to read the value of IdentityHash on a record that was deleted locally. Record name: <%{public}@>.
Saving record with name %{public}@ locally
Loading known keys <%{public}@> from remote record with name: %{public}@
Update generations of record %{public}@ with change of type %{public}@, updated keys <%{public}@>
Attributes <%{public}@> no longer need update despite those changes from a previous update not being validated
Record name: %{public}@, setting parent: %{public}@, generation: %{public}@, position: %{public}@
Non-built-in record with name %{public}@ does not have a position
Updating locally modified attributes <%{public}@>
%{public}@ attribute should have been saved during primary migration but has no generation locally.
Cannot save identity hash attributes since the local record is incomplete.
Did apply reference %{public}@ generation: %{public}@ to attribute %{public}@ of record name: %{public}@
Will merge local and remote records. Record name: %{public}@
Did finish merging local and remote records with record name: %{public}@ due to state changes. Result: %{public}@
Parent and position were updated locally but were not saved to the server
Merging local and remote record fields.
No merging needed for key: %@ with local generation: %@, remote generation: %@
Attribute <%{public}@> expected to be saved to the server has an empty generation
Copy remote value into local record for key: %{public}@ with local generation: %{public}@, remote generation: %{public}@
Copy local value into remote record for key: %{public}@ with local generation: %{public}@, remote generation: %{public}@
Attribute %{public}@ was updated locally but was not saved to the server
Update IdentityHash on remote record.
Update local and remote generations.
Did finish merging local and remote records with record name: %{public}@. Result: %{public}@
Merging parent and position for record Name: %{public}@, local and remote generations are equal: %{public}@
Merging parent and position into local record for record Name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Merging parent and position into remote record for record Name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Did finish merging local and remote records with record name: %{public}@. Local record will be deleted because its minimum API version %ld is higher than the API version %ld supported by this client.
Merging minimum API version for record name: %{public}@, local and remote generations are equal: %{public}@
Local and remote minimum API versions differ, even though generations are the same. Record name: %{public}@.
Merging minimum API version into local record for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Merging minimum API version into remote record for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Local and remote state generations are equal even though their states are different. Local Deleted: %ld, generation: %{public}@, Remote Deleted %ld, generation: %{public}@
Server previously told us the record was deleted, now it is undeleted. Mark the record %{public}@ as moved and continue merging: local generation: %{public}@, remote generation: %{public}@
Local record needs to be undeleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Local record needs to be deleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Remote record needs to be deleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Remote record needs to be undeleted for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Both local and remote records are deleted but remote record state generation needs to be updated for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Both remote and local records are deleted and remote generation does not need to be updated for record name: %{public}@, local generation: %{public}@, remote generation: %{public}@
Local and remote records are not deleted and have equal generations: %{public}@.
Updating local state generation for record Name: %{public}@, local state generation: %{public}@, remote state generation: %{public}@
Updating remote state generation for record Name: %{public}@, local state generation: %{public}@, remote state generation: %{public}@
BAChange %{private}@ is neither a folder change or a bookmark change
Failed to get extensions database URL, falling back to in-memory database
User account changed for extension syncing
Deleting the CloudExtensions database
Saving extension state for the current device to CloudKit
Could not create device for saving extension states from dictionary %{private}@
Saving current device excluding extension states to CloudKit
Could not create device for saving from dictionary %{private}@
Stopping save of extension state for current device
Merging device with existing device in SQLite database, if necessary
Severe SQLite store error occurred while merging device with existing device: %{public}@
Merging device and extension states into existing device from SQLite database
Merging device into existing device from SQLite database
No existing device found in SQLite database
Saving device to CloudKit
Done saving device to CloudKit
Saving extension state record batch of size: %lu
Did fail to save extension state record batch with error: %{public}@
Finished saving extension state record batch
Deleting obsolete extension state records from CloudKit
No obsolete extension state records need to be deleted from CloudKit
Failed to delete obsolete extension state records with error: %{public}@
Done deleting obsolete extension state records from CloudKit
Updating SQLite store from CloudKit after saving extension state
Updating SQLite store from CloudKit after saving extension state failed with error: %{public}@
Done updating SQLite store from CloudKit after saving extension state
Finished saving extension states for the current device to CloudKit
Fetching extension state data from CloudKit
Stopping fetch of extension states
Deleting database and restarting fetch
Reading server change token from SQLite
Finished reading server change token from the SQLite database
Severe SQLite store error occurred while reading server change token: %{public}@
Failed to read from server change token data: %{public}@
Failed to decode server change token with exception: %{public}@
Found server change token data in the SQLite database
Found server change token data in the SQLite database, but couldn't unarchive it
Found server change token data in the SQLite database, but couldn't unarchive it, even after deleting the database
No server change token found in the SQLite database
Fetching changes from CloudKit
Failed to fetch changes with error: %{public}@
Attempting to create CloudExtensions zone before retrying fetch
Finished fetching changes from CloudKit
Fetching changes from CloudKit again after creating CloudExtensions zone
Failed to create CloudExtensions zone when fetching changes with error: %{public}@
No records to delete from SQLite
Removing %lu deleted records from SQLite
Severe SQLite store error occurred while deleting records: %{public}@
Finished removing deleted records from SQLite
No modified devices or extension states to save to SQLite
Saving %lu device records and %lu extension state records to SQLite
Severe SQLite store error occurred while saving records: %{public}@
Failed to save modified device and extension state records to the SQLite database with error: %d
Finished saving modified device and extension state records to the SQLite database
Saving server change token to SQLite
Failed to archive server change token: %{public}@
Severe SQLite store error occurred while saving server change token: %{public}@
Failed to save server change token to SQLite with error: %d
Done saving server change token to SQLite
Skipping loading devices and extension states from SQLite
Loading devices and extension states from SQLite
Severe SQLite store error occurred while loading records: %{public}@
Finished loading devices and extension states from SQLite
Finished fetching extension data from CloudKit
Fetched an invalid extension device record from CloudKit
Fetched an invalid extension state record from CloudKit
Fetched an unrecognized record from CloudKit of type %{public}@
Deleting extension devices from CloudKit
No extension devices to delete
Stopping deletion of extension device records
Deleting extension device records from CloudKit
Failed to delete extension device records with error: %{public}@
Done deleting extension device records from CloudKit
Updating SQLite store from CloudKit after deleting extension device records
Updating SQLite store from CloudKit after deleting extension devices failed with error: %{public}@
Done updating SQLite store from CloudKit after deleting extension device records
Finished deleting extension device records from CloudKit
Severe SQLite store error: %{public}@
Extension syncing not available because user is not signed in
Extension syncing not available because Safari's dataclass isn't enabled
Could not create extension state dictionary when getting extension states from CloudExtensionState %{private}@
Migration state: %ld, expect DAV IDs: %d, expect CloudKit IDs for all records: %d, expect parsable sync data: %d
Checking record with local ID: %{public}@, server ID: %{public}@, item type: %ld, subtype: %ld
Record does not have a server ID even though we expect all records to have one!
Record has a BookmarkDAV ID even though no record should have one!
Record has a CloudKit ID even though no record should have one!
Regular folder has built-in record name: %{public}@, shouldn't!
Built-in folder with type %ld, has invalid record name: %{public}@, expecting: %{public}@
Record has sync key even though migration began.
Item contains sync data even though it should not!
Record has ID %{public}@ but has no sync data!
Item contains sync data that cannot be parsed as CloudKit sync data!
CKRecord in item has a different record name %{public}@ from record name of the item: %{public}@
Record type %{public}@ of CKRecord in item does not match the expected BookmarkLeaf type.
Record type %{public}@ of CKRecord in item does not match the expected BookmarkList type.
CKRecord in item was never saved to the server despite being saved locally.
Sync data has no position stored despite its CKRecord being saved locally.
Sync data has no generation for its parent and position despite having saved sync data.
Sync data has no generation for its folder title and identity hash despite having saved sync data.
Sync data has no generation for its folder title, URL, and identity hash despite having saved sync data.
Checking account hash
Storing account hash
Account hash matches
Needs dataclass enabled check
Needs account hash check
 Successfully updated presence to tabRecordID: %{public}@, %{public}@
 Failed to update presence to tabRecordID: %{public}@, %{public}@
 Cancelling updating presence to tabRecordID: %{public}@, %{public}@
 Starting updating presence to tabRecordID: %{public}@, %{public}@
UserRecordID is already cached
Successfully cached UserRecordID
Could not cache UserRecordID, the user has probably not interacted with the server or it is not possible to communicate with the serve, giving up, error: %{public}@
Could not fetch current private presence record with error: %{public}@
Presence update not needed because the old and new presence are both nil
Private presence record is missing, create it
Presence record is still locked after retry; giving up
Will fetch shared presence for heartbeat update for tabRecordID: %{public}@
Could not fetch current shared presence record with error: %{public}@
Failed to prolong lifetime of shared presence record for tabRecordID: %{public}@, error: %{public}@
Did prolong lifetime of shared presence record for tabRecordID: %{public}@
Failed to prolong lifetime of shared presence record for tabRecordID: %{public}@ because it was updated before we could save it
Attempting to acquire update presence lock with ID: %{public}@
Did acquire lock to update presence
Could not update presence record with error: %{public}@
Failed to acquire the lock again after a retry, the presence record was changed after we got the previous copy, give up.
Failed to acquire the lock again, the presence record was changed after we got the previous copy, try again later.
The presence lock is too old, we are going to try to steal it.
No previous presence record to delete
Deleting previous presence record with ID: %{public}@ to tab: %{public}@
Failed to delete previous presence record with ID: %{public}@, error: %{public}@
Did delete old presence record with ID %{public}@
No need to create a new shared presence record
Did successfully create shared presence record.
Shared presence record already exists, it must have been added somewhere else. Attempt to release the lock.
Failed to create shared presence record, error: %{public}@
Releasing update presence lock with ID: %{public}@
Did successfully release lock private presence record.
Lock private presence record was modified while updating presence, the lock was probably taken away from this device.
Failed to release lock private presence record, error: %{public}@
JSON data could not be decompressed.
JSON data could not be parsed
Unexpected JSON root type, expecting: %{public}@ instead got: %{public}@
Could not save asset with url %{sensitive, mask.hash}@ error: %{public}@
Failed to read from cloud bookmark transformed value data: %{public}@
Failed to decode encrypted data with exception: %{public}@
Cannot verify identity hash of CKRecord with name %{public}@ because its minimumAPIVersion %ld is more recent than the version %ld of the client.
Valid identity hash for remote record with name: %{public}@, key: %{public}@, keyID: %{public}@, identityHash: %{public}@, components: %{private}@
Identity hash is invalid for remote record with name: %{public}@, key: %{public}@, keyID: %{public}@, identity hash actual: %{public}@, expected: %{public}@
Identity hash is invalid for remote record with name: %{public}@, key: %{public}@, keyID: %{public}@, identity hash actual: %{public}@, expected: %{public}@, components: %{private}@
Failed to instantiate CloudKit settings database!
Record changed: %{private}@
Record of type %{public}@ deleted: <%{public}@>
Fetch records from record zone operation completed for record zone %{public}@
Enqueuing request to fetch records from record zone %{public}@
Number of device in sync circle is 0
Saving CloudSettings zone subscription
Bailing out from saving CloudSettings zone subscription due to deallocation
Saving CloudSettings zone subscription failed because of missing zone, attempting to create zone
Aborting save of CloudSettings zone subscription because zone couldn't be created
Saving CloudSettings zone subscription after creating zone
Attempting to save zone subscription for zone: %{public}@
Saving CloudSettings record
Attempting to create CloudSettings zone before retrying save operation
Retrying save operation after creating CloudSettingsZone
Will save merged record
Will retry save with updated batch after error: %{public}@
Retrying save operation
Received batch too large error for an individual record change, bailing out
Attempting to retry save request
Record save retry limit exceeded
Error occurred when deleting records: %{public}@
Clearing cached CloudSettings record zone
Deleting CloudSettings zone
Fetching CloudSettings zone subscription
Failed to fetch CloudSettings zone subscription by ID with error: %{public}@
Successfully fetched CloudSettings zone subscription
Creating CloudSettings zone
Failed to create CloudSettings zone with error: %{public}@
Bailing out of creating CloudSettings zone due to deallocation
Retrying creation of CloudSettings zone
Waiting to retry creation of CloudSettings zone
Successfully created CloudSettings zone
Failed to set up CloudSettings encryption info with error: %{public}@
Successfully set up CloudSettings encryption info
Attempting to save/load record
Successfully saved/loaded record
Failed to save/load record with error: %{public}@
Creating encryption record
Attempting to save/load encryption record
Failed to save/load encryption record due to unrecoverable error: %{public}@
Failed to save/load encryption record due to unexpected and unrecoverable write error: %{public}@
Record zone disappeared while setting up encryption information; bailing
Bailing out from encryption record setup due to deallocation
Encryption record retrieval retry limit exceeded
Moving record %{public}@ into parent record %{public}@
Missing parent record name for bookmark with name %{public}@. Reparenting to root.
Marking record name %{public}@ as moved locally
Attempted to delete built-in record with name: %{public}@, ignoring
Marking record name %{public}@ as deleted
Could not insert record with name %{public}@ in root folder!
Built-in bookmark folder with record name: %{public}@ was moved to parent with record name: %{public}@ instead of root
Could not insert record with name %{public}@ in built-in folder %{public}@!
Could not insert record with name %{public}@ in temporary folder!
Trying to move existing record with name %{public}@ into parent folder %{public}@ but the record does not exist locally!
Creating built-in folder with record name: %{public}@
The temporary folder contains %ld records that were not marked as deleted or moved to their final location. Record names: %{public}@
Record with name %{public}@ does not have a parent even though it was checked right before
Failed to insert %{public}@ into the root folder and for some reason the parent folder does not exist or creates a cycle!
Did finish checking hierarchy consistency, will move remaining records into their final location
Will move record %{public}@ into parent %{public}@
Could not move %{public}@ into folder %{public}@ even though all cycles and broken hierarchies should have been detected and fixed beforehand. Moving to the root.
Failed to insert %{public}@ into the root folder after failing to insert it into %{public}@, apparently there is no hierarchy to speak of.
Already verified parent chain fo record with name %{public}@
Checking parent chain of record with name %{public}@
Moved bookmark with record name %{public}@ was actually not saved to the database!
Parent %{public}@ was deleted, reparenting %{public}@
Loop detected, reparenting %{public}@ in list %{public}@
Parent %{public}@ is not in the database, reparenting %{public}@
Beginning reorder of all bookmarks in local storage based on CloudKit sync data
Unexpectedly found cycle in bookmarks hierarchy since %{public}@ has already been sorted among %lu folders sorted so far
Stopping recursing updating children order at %{public}@ since depth has exceeded limit
Reordering children of %{public}@
Recursing to update order for %lu children of %{public}@
No children of bookmark %{public}@ to recurse on
Child bookmark ID unexpectedly equal to parent server ID %{public}@
Fixing order in local storage based on CloudKit positions
Record name %@, position: %@
Reordering children of root folder
Did finish reordering children of root folder
No children to reorder in folder with Server Sync ID: %@
Reordering children of record with Server Sync ID: %{public}@
Did finish reordering children of record with Server Sync ID: %{public}@
Removing %lu local items that were deleted on the server
Migration state value in server record is of type %{public}@ when NSNumber was expected
Migration state server record value (%{public}@) does not match expected state values
Checked in %{public}@ activity
No prior %{public}@ activity was found. Registering a new one
Running %{public}@ activity
Failed to set the activity state to 'Continue'. Deferring %{public}@ activity
Database for manager %lu doesn't exist. Deferring %{public}@ activity
Failed to acquire the sync lock. Deferring %{public}@ activity
Performing %{public}@ activity
Failed to get a valid device identifier to start coordinating migration.
Not migrating because Safari sync is disabled
Cannot read local migration state for migration due to invalid device identifier.
Not migrating because we've already migrated
Will attempt secondary migration
Will attempt primary migration
Failed to acquire lock on the database to read the migration state
Determining eligibility for local-only migration
Cannot determine eligibility for local-only migration due to invalid device identifier.
Bailing out from secondary migration without fetching remote migration info because Safari sync is disabled
Bailing out from secondary migration eligibility determination due to deallocation
Bailing out from secondary migration because Safari sync is disabled
Received an error fetching remote migration state: %{public}@; will attempt to become responsible for migration
Not eligible for local-only migration; will attempt to become responsible for migration
Remote migration pending; will decide whether we are responsible for resuming migration or should preempt the migrator
Performing local-only migration
Attempting to become responsible for migration by pushing state to the server
Cannot become responsible for migration due to invalid device identifier.
Bailing out from primary migration eligibility determination due to deallocation
Failed to become responsible for migration due to unrecoverable error: %{public}@
Failed to become responsible for migration due to CloudKit write error: %{public}@
Record zone unexpectedly deleted or missing; bailing out of primary migration
Migration coordinator retry limit exceeded
Pushed migration state successfully; assuming we are now responsible for migration
Bailing out from primary migration because Safari sync is disabled
Unable to lock backing store; bailing out from primary migration
Failed to push migration state because some other device modified it first; aborting
Cannot resume pending remote migration due to invalid device identifier
Received a migrationInfo with nil device identifier; will continue evaluating eligibility to steal right to migrate
Migration record indicates that we are the migrating device; attempting to resume migration
Not stealing right to migrate since no last modification date was stored in the migration record
Not stealing right to migrate since migration state was updated recently by another device
Deleting existing record zone in preparation for stealing right to migrate
Something went wrong deleting the existing record zone; bailing out: %{public}@
Stealing right to migrate due to migration timeout
Exceeded maximum migration retry limit
Scheduling migration retry
Starting PRIMARY migration
Starting SECONDARY migration
Migration failed with error %{public}@; resetting local and remote migration state
Migration succeeded
Unable to set remote migration state to %lu due to error: %{public}@; resetting local migration state, will attempt retry
Migration coordinator transitioning from state %zd to state %zd
User account changed for iCloud Settings
iCloud Settings syncing not available because user is not signed in
iCloud Settings syncing not available because Safari's dataclass isn't enabled
Sync coordinator will begin syncing
Already synchronizing; ignoring request to sync
Discontinuing sync because account hash differed
Discontinuing sync because Safari sync is disabled or the user is not signed in
Beginning synchronization
Failed to set up Settings Record Zone with error: %{public}@
Stopping fetch of settings
Have not performed a sync down yet; doing so now
Error received while syncing down: %{public}@
Sync coordinator finished sync down
Failed to decode customization sync server change token: %{public}@
Failed to serialize customization sync server change token: %{public}@
Attempting to create CloudSettings zone before retrying fetch
Fetching changes from CloudKit again after creating CloudSettings zone
Failed to create CloudSettings zone when fetching changes with error: %{public}@
Received unsynced Keychain error, but we're already waiting for PCS identities to change.
Received unsynced Keychain error. Observing notification to start fetching Safari settings when PCS identities change
Performing initial StarSky sync down of Safari's settings.
Change token is expired; trying a full sync down.
Sync coordinator failed to sync settings with error: %{public}@
Retrying sync after receiving synchronization request during synchronization
Not retrying sync after receiving synchronization request during sync since previous sync failed
Syncing done, calling completion handler
Ignoring PCS identity change notification because Customization Sync is not waiting for an identity update
Retrying sync after receiving expected PCS identity change notification.
Saving Safari's background image for the current device to CloudKit
Did fail to save the background image with error: %{public}@
Saving setting for the current device to CloudKit
Did fail to save record with error: %{public}@
Saving Per-Site settings for the current device to CloudKit
When merging the Per-Site Setting's value, local and remote generations are equal: %{public}@
When merging the Per-Site Setting's value, the merge occured in favor of the remote record. Saving the remote record in the database and updating Safari.
Save with record name %{public}@ in WBSPerSitePreferencesSQLiteStore did finish with success: %{public}@
Clearing cached Per-Site Settings sync data
Clearing cached Per-Site Settings sync data in WBSPerSitePreferencesSQLiteStore did finish with success: %{public}@
Deleting settings from CloudKit
Did fail to delete record with error: %{public}@
Clearing cached CloudSettings server change token
*** Failed to instantiate CloudKit database!
Fetching user identity
Returning cached user identity
Failed to fetch user identity due to missing zone: %{public}@
Attempting to fetch user record ID
Failed to fetch user record ID with error: %{public}@
Successfully fetched user record ID
Clearing cached record zone
Saving record batch with %zu records and %zu deletes
Bailing out from saving record batch due to deallocation
Failed to save record batch due to missing zone: %{public}@
Failed to save an individual record because the batch was too large and this one exceeded the limit.
Save error needs merge %{public}@ but no server record is present
Failed to delete an individual record ID because the batch was too large and this one exceeded the limit.
Failed to delete record ID due to CloudKit error which could not be handled: %{public}@
Batch record save operation completed but now retrying updated batch
Failed to save %zu out of %zu records due to batch size limit, try the remaining records again.
Failed to find participant for e-mail address: %{sensitive, mask.hash}@, error: %{public}@
Found participant for e-mail address: %{sensitive, mask.hash}@
Could not find any participant to add to the share, error: %{public}@
Could not fetch zone-wide share record for zone %{public}@, error: %{public}@
Bailing out from fetching subscription due to deallocation
Failed to fetch database subscription by ID %{public}@ with error: %{public}@
Successfully fetched database subscription
Bailing out from modifying subscription due to deallocation
Fetching Bookmarks zone subscription
Bailing out from fetching Bookmarks zone subscription due to deallocation
Failed to fetch Bookmarks zone subscription status due to missing zone: %{public}@
Fetching Bookmarks zone subscription by ID
Failed to fetch Bookmarks zone subscription by ID with error: %{public}@
Successfully fetched Bookmarks zone subscription
Saving Bookmarks zone subscription
Bailing out from saving Bookmarks zone subscription due to deallocation
Failed to save Bookmarks zone subscription due to missing zone: %{public}@
Fetching record changes for Bookmarks zone
Bailing out fetching record changes due to deallocation
Failed to fetch record changes due to missing zone: %{public}@
Deleting record batch of size: %lu
Attempting to delete bookmark zone
Bookmark zone deletion failed with error: %{public}@
Successfully deleted bookmark zone
Preparing bookmarks record zone, invalidateCachedZone: %d, createIfNeeded: %d
Cached record zone already present; nothing to do
Fetching record zone anew from CloudKit
No existing record zone found
Will attempt to set up zone from scratch
Bailing out without setting up zone
Failed to fetch minimum sync API version when setting up record zone; bailing
*** Minimum sync API version is too new (%lu, our current version is %lu)
Creating speculative encryption record
Successfully setup EncryptionInfo record
Failed to retrieve record with ID %{public}@, error: %{public}@
Server already has a record with ID %{public}@, use it instead
Failed to setup record with ID %{public}@ due to unexpected and unrecoverable write error: %{public}@
Failed to setup record with ID %{public}@ due to unrecoverable error: %{public}@
Record zone disappeared while setting up record with ID %{public}@; bailing
Failed to set up record with ID: %{public}@, error: %{public}@
Did successfully delete records with IDs %{public}@
Failed to delete records with IDs %{public}@, error: %{public}@
Failing save of record batch since migration record disappeared
Will attempt to resave migration record due to recoverable error
Failed to save migration record: %{public}@
Batch record save operation completed but failed to save migration record at end of batch save
Attempting to fetch encryption record from CloudKit
Encryption record fetch failed: %{public}@, returning cached  encryption record
Encryption record fetch failed: %{public}@
Starting fetch of remote migration state
Fetch remote migration state failed <%{public}@>.
Fetch migration state failed <%{public}@>.
Failed to set remote migration state due to missing zone: %{public}@
Completed operation to try to set remote migration state to %ld
Failed to set remote migration state to <%li>: %{public}@
Enqueuing request to set remote migration state to %ld
Minimum sync API version fetch operation completed
Fetch minimum sync API version failed <%{public}@>.
Failed to set minimum sync API version due to failure to set up record zone: %{public}@
Completed operation to try to set minimum sync API version to %ld
Failed to set minimum sync API version to <%li>: %{public}@
Enqueuing request to set minimum sync API version to %ld
Attempting to save new record zone
Failed to set up new record zone: %{public}@
Successfully set up new record zone
Someone deleted the migration record during migration with error: %{public}@
Migrator device identifier changed
Migrator device identifier changed from %@ to %@
Migration state changed from %ld to %ld
Internal-only -fetchAllBookmarkRecordsWithCompletionHandler: called!
Unable to create CloudExtensionState from dictionary: %{private}@
Attempting to start synchronization
Discontinuing sync because a retry has already been scheduled
Discontinuing sync because user is not signed in
Could not create BADatabase to synchronize
Device identifier is empty
Trying to open database after another client already did
Reading migration state %lu
Discontinuing sync since local migration has not yet completed, migration state: %lu
Discontinuing sync since local migration state cannot be read
Database sync data is unreadable, reset all sync data and attempt a migration again
Discontinuing sync because bookmarks Safari sync is disabled
Failed to set up Bookmarks Record Zone with error: %{public}@
Failed to fetch (or received invalid) remote migration state record with error: %{public}@
Scheduling retry #%d in %.1fs.
Discontinuing sync after attempting maximum number of retries
*** Resetting sync data
Bookmark Store setup done, opening database and processing changes
Failed to open database after finishing sync coordinator setup
Records were not saved locally, attempt merging to generate Add changes
Opening database to reorder of all bookmarks in local storage based on CloudKit sync data
Failed to open database to reorder bookmarks in local storage
Finished reordering bookmarks in local storage
Finish syncing
Sync coordinator failed to sync bookmarks with error: %{public}@
Database is unlocked despite having unlocked it before entering this method
Number of processed changes %lu, locally moved records: %lu, change token: %{public}@
Performing hierarchy check for moved records, number of moved records: %lu, number of deleted records: %lu
Using unsaved bookmark from last batch with record name: %{public}@
Setting unsaved bookmark with name %{public}@ because the batch is full
Not adding bookmark to batch with record name %{public}@ because it already exists in the batch
Discontinuing sync because bookmarks dataclass was disabled during sync
Done saving all record changes
Record %{public}@ was deleted remotely
Did fail to save record batch with error: %{public}@
Performing sync down with last server change token: %{public}@
Did finish fetching records between server change token: %{public}@ and server change token: %{public}@
None of the %ld records sent to be saved to the server were received on sync down. Missing records: %{public}@
Did not receive %ld records on sync down out of the %ld records sent to be saved. Missing records: %{public}@
Did receive %ld records in current sync down that were supposed to be retrieved in the previous one. Received records: %{public}@
Successfully completed full sync down after expired change token error
Record %@ was not seen during sync down after expired change token error; marking it for deletion
Record %@ has MinimumAPIVersion %lu and will be deleted locally
Merging record %{public}@ with result %{public}@ indicates that the remote record needs update despite being in sync down phase. The record should have been saved to the server before.
Record %@ does not exist locally and is deleted remotely
Has unsaved changes; saving next batch.
Unrooted moved bookmarks are present; will reparent
Error while copying asset. Error description: %@
Sync migration converter beginning migration
Saving bookmarks
Sync migration converter finished migration and sync down
Begin performing sync down while merging records
Did fail to perform merging sync down with error: %{public}@
Did finish merging sync down, temporarily reparent and sort records in case we have cycles or unrooted records in the hierarchy
Did finish reparenting, perform deduplication keeping records with sync data
Did finish deduplication keeping records with sync data, begin converting and saving remaining records
Failed to convert local records with error: %{public}@
Did finish converting and saving remaining records
Perform post-migration sync down
Failed to sync down after migration: %{public}@
Zone deleted during migration conversion; bailing
Bailing from sync down due to deallocation with error %{public}@
Sync migration converter retry limit exceeded
None of the %ld records saved to the server were retrieved on sync down. Missing records: %{public}@
Did finish post-migration sync down
Performing post-migration moved records verification
No records need to be reparented
Did fail to reparent unrooted bookmarks after migration with error: %{public}@
Did finish reparenting unrooted records
Failed to get iCloud Tabs database URL, falling back to in-memory database
Received PCS change notification with state %ld
Determining CloudTab sync coordinator in response to PCS change notification with state %ld
Determined PCS state to be %ld
Instantiating sync coordinator using PCS state %ld
Failed to read whether to use PCS cloud container for syncing with sqlite error code %d
CloudTabs database has PCS container sync properties
CloudTabs database has normal container sync properties
Database should not be reset because it's using the correct container
CloudTabs database needs to reset because sync properties are not compatible with PCS state %ld
Finished resetting CloudTabs database
Ignoring PCS identity change notification because CloudTabs is not waiting for an identity update
Received expected PCS identity change notification
Informing delegate of a PCS identity change
Received PCS unavailable error from CloudKit. Marking PCS state needs updating
Received unrecoverable PCS error %ld from CloudKit. Deleting the CloudTabs zone and creating a new one
Received unsynced Keychain error. Observing notification to start fetching CloudTabs when PCS identities change
Performing a fetch to fulfill request from %ld outstanding callers
Fetching local migration state from database (isMigrating: %d)
Setting local migration state in database to %ld (isMigrating: %d)
Sync migration coordinator starting PRIMARY migration
Sync migration coordinator starting SECONDARY migration
Sync migration coordinator failed due to migration unexpectedly being in progress
Database was already open by another client, could not open database
Begin performing first deduplication
Did finish performing first deduplication
Starting migration conversion as primaryMigrator = %d
Migration conversion failed with error: %{public}@
Migration conversion succeeded
Sync migration coordinator did fail to migrate with error: %{public}@
Sync migration coordinator did finish migrating.
Sync migration post-processing handler called
Did finish migration, perform last deduplication
Did finish last deduplication
Failed to fetch remote migration state with error: %{public}@
Failed to serialize bookmarks JSON with error: %{public}@
Change for item with server ID %{private}@ is neither bookmark nor folder.
Fetching CloudTabs zone subscription
Failed to fetch CloudTabs zone subscription by ID with error: %{public}@
Successfully fetched CloudTabs zone subscription
Saving CloudTabs zone subscription
Bailing out from saving CloudTabs zone subscription due to deallocation
Saving CloudTabs zone subscription failed because of missing zone, attempting to create zone
Aborting save of CloudTabs zone subscription because zone couldn't be created
Saving CloudTabs zone subscription after creating zone
Attempting to create CloudTabs zone before retrying save
Retrying save after creating CloudTabsZone
Deleting CloudTabs zone
Failed ot delete CloudTabs zone with error: %{public}@
Successfully deleted CloudTabs zone
Creating CloudTabs zone
Failed to create CloudTabs zone with error: %{public}@
Bailing out of creating CloudTabs zone due to deallocation
Retrying creation of CloudTabs zone
Waiting to retry creation of CloudTabs zone
Successfully created CloudTabs zone
Error serializing sync events plist data: %{public}@
Error reading sync events plist data: %{public}@
Beginning conversion of folder contents
Did fail to migrate record hierarchy with error: %{public}@
Did finish migrating folder contents
Record %{public}@ has no position and needs saving in folder %{public}@
Found record %{public}@ with position %{public}@ after record %{public}@ with position %{public}@, folder %{public}@ should have been sorted before!
Found record with name %{public}@ after %ld records which do not have a position defined yet
Batch of size %lu with %lu records is full for %@
No more records to save.
Merging record %{public}@ with result %{public}@ indicates that the local record needs to be undeleted during migration. Migration never attempts to delete remote records before the last de-duplication phase.
Failed to delete legacy Tab Groups subscription with error: %@
 Starting TabGroups sync for manager %{public}@ with trigger: %{public}@
 TabGroups sync failed for manager %{public}@ with result <Aborted>
 Starting TabGroups sync for manager %{public}@ with %{public}@
Received unsynced Keychain error. Observing notification to start syncing Tab Groups when PCS identities change.
 TabGroups sync failed for manager %{public}@ with result <%{public}@>: %{public}@, %{public}@
 TabGroups sync finished for manager %{public}@ with result: %{public}@, %{public}@
Ignoring PCS identity change notification because Safari Tab Groups Sync is not waiting for an identity update
Received expected PCS identity change notification. Syncing Tab Groups.
 Starting TabGroups migration for manager %{public}@ with %{public}@
 TabGroups migration failed for manager %{public}@ with result <%{public}@>: %{public}@, %{public}@
 TabGroups migration finished for manager %{public}@ with result: %{public}@, %{public}@
Sending notification of tab group sync result: %{public}zu
Not scheduling a sync being syncing is not enabled for this platform
Not scheduling a sync being we are currently migrating
Not scheduling a sync because entitlement is missing
Not scheduling a sync because manatee is not available
Ignoring CKShareMetadata because it is not part of the Tab Groups container: %{public}@
* Will accept share with zone %{public}@, metadata %@, %{public}@
* Failed to accept share with zone %{public}@, metadata %@, error: %{public}@, %{public}@
* Did accept share with zone %{public}@, metadata %@, %{public}@
* Will begin sharing tab group with UUID: %{public}@, with %{public}@
* Did successfully begin sharing tab group with UUID: %{public}@, in shared zone: %{public}@, %{public}@
* Failed to begin sharing tab group with UUID: %{public}@, result: %{public}@, error: %{public}@, %{public}@
Skipping updating user's presence because Safari syncing is not enabled
Skipping updating user's presence since there are no shared tab groups in the user's database
Will update user's presence to tab
Could not find tab for UUID: %{public}@
Tab with UUID %{public}@ and recordID %{public}@ is not in a shared tab group, ignoring
Will begin accepting share
Processing local tab operation
Failed to acquire local tab collection lock
Failed to open local tab database
Scheduling a tab group sync operation
Saving reparented records
Saving reparented records with record names: %@
Did fail to save reparented records with error: %{public}@
Did finish saving reparented records
Sync down handler starting sync, keep records marked as deleted locally = %d
Sync down handler did fail sync down with with error: %{public}@
Sync down handler did succcessfully sync down
Sync down handler fetching record changes from server change token: %{public}@
Canceling migration sync-down because Safari sync is disabled
Zone deleted during migration sync-down; bailing
Bailing out from sync down due to deallocation with error %{public}@
Sync down handler retry limit exceeded
Merging record %{public}@ with result %{public}@ indicates that the remote record needs update despite being in sync down phase. The record should have been saved to the server during migration.
Record %{public}@ does not locally exist and cannot be saved locally because of its minimum API version
Record %{public}@ does not exist locally and is deleted remotely
Writing locally record %{public}@ despite the record not existing locally and being deleted remotely for merging
Failed to delete device or extension state: %{public}@ (%d)
Failed to create the cloud_extension_devices table: %{public}@ (%d)
Failed to create the cloud_extension_states table: %{public}@ (%d)
Failed to create the index for cloud_extension_states table: %{public}@ (%d)
Failed to create the metadata table: %{public}@ (%d)
Failed to execute query when resetting database schema: %{public}@ (%d)
Opening iCloud Extensions SQLite database
Failed to open iCloud Extensions store at %{private}@: %{public}@
Failed to exclude CloudExtensions.db from backup: %{public}@
Failed to enable WAL on CloudExtensions.db: %{public}@
Failed to enable foreign keys on iCloud Extensions store: %{public}@ (%d)
Failed to enable secure delete on iCloud Extensions store: %{public}@ (%d)
iCloud Extensions store schema version (%d) does not match our supported schema version (%d) in store at %{public}@.
Closing iCloud Extensions SQLite database
Removing iCloud Extensions store file
Failed to remove iCloud Extensions store file at %{private}@: %{public}@
Recreating iCloud Extensions store file after removing it
Failed to set the database schema version to %d: %{public}@ (%d)
Failed to update metadata value %{public}@: %{public}@ (%d)
Failed to insert metadata value %{public}@: %{public}@ (%d)
Failed to delete metadata value for key %{public}@: %{public}@ (%d)
Failed to vacuum database: %{public}@ (%d)
Found a device without a UUID in the database.
Found a device without system fields in the database.
Failed to insert or replace device: %{public}@ (%d)
Found an extension state without a composedIdentifier in the database.
Found an extension state without system fields in the database.
Failed to insert or replace extension state: %{public}@ (%d)
Processing %lu changes with changeToken: %@
Add change %{public}@ was provided without a corresponding changed item.
Move change %{public}@ was provided without a corresponding changed item.
Moved item %{public}@ for change %{public}@ did not have a record ID.
Attempted to delete built-in record with name: %{public}@, ignoring.
Attempting to check database open state from a background thread
Attempting to retrieve the database from a background thread
Attempting to retrieve the backing store lock from a background thread
%{public}@ attempting to lock backing store
%{public}@ backing store was already locked
%{public}@ successfully locked backing store
%{public}@ failed to lock backing store
Attempting to unlock the backing store from a background thread
Trying to unlock the database despite the database being already unlocked
%{public}@ did not unlock backing store due to outstanding lock requests
%{public}@ is unlocking the database even though the database is still open
%{public}@ unlocked backing store
Attempting to retrieve the migration state from a background thread
Fetching local migration state from database (isDatabaseLocked: %d, isDatabaseOpen: %d)
Fetched local migration state %ld from database
Attempting to set the migration state from a background thread
Setting local migration state in database to %ld (isDatabaseLocked: %d, isDatabaseOpen: %d)
Attempting to open the database from a background thread
Attempted to open the database without acquiring the lock first.
Attempted to open the database even though it is already open.
Will open the database
Attempting to close the database from a background thread
Attempted to close the database without acquiring the lock first (shouldSave: %d
Attempted to close the database without opening it first (shouldSave: %d
Did close database, did save %d
Failed to delete device, tab, or close request: %{public}@ (%d)
Failed to create the cloud_tab_devices table: %{public}@ (%d)
Failed to create the cloud_tabs table: %{public}@ (%d)
Failed to create the index for cloud_tabs table: %{public}@ (%d)
Failed to create the cloud_tab_close_requests table: %{public}@ (%d)
Opening iCloud Tabs SQLite database
Failed to open iCloud Tabs store at %{private}@: %{public}@
Failed to exclude CloudTabs.db from backup: %{public}@
Failed to enable WAL on CloudTabs.db: %{public}@
Failed to enable foreign keys on iCloud Tabs store: %{public}@ (%d)
Failed to enable secure delete on iCloud Tabs store: %{public}@ (%d)
iCloud Tabs store schema version (%d) does not match our supported schema version (%d) in store at %{public}@.
Closing iCloud Tabs SQLite database
Removing iCloud Tabs store file
Failed to remove iCloud Tabs store file at %{private}@: %{public}@
Recreating iCloud Tabs store file after removing it
Found a tab without a UUID in the database.
Found a tab without system fields in the database.
Found a tab without a position dictionary in the database.
Couldn't create a tab's position from the position dictionary in the database.
Found a tab without a URL in the database.
Failed to insert or replace tab: %{public}@ (%d)
Found a close request without a request UUID in the database.
Found a close request without system fields in the database.
Found a close request without a destination device UUID in the database.
Found a close request without a tab URL in the database.
Found a close request without a tab UUID in the database.
Failed to create a CloudTabCloseRequest from the database.
Failed to insert or replace close request: %{public}@ (%d)
Deleting the iCloud Tabs database
User account changed for iCloud Tabs
iCloud Tab syncing not available because user is not signed in
iCloud Tab syncing not available because Safari's dataclass isn't enabled
Saving tabs for the current device to CloudKit
No iCloud Tab device found to save
Stopping save of tabs for current device
Merging device with existing device in SQLite database
Saving iCloud Tab record batch of size: %lu
Did fail to save iCloud Tab record batch with error: %{public}@
Finished saving iCloud Tab record batch
Deleting obsolete tab records from CloudKit
No obsolete tab records need to be deleted from CloudKit
Failed to delete obsolete tab records with error: %{public}@
Done deleting obsolete tab record from CloudKit
Updating SQLite store from CloudKit after saving tabs
Updating SQLite store from CloudKit after saving tabs failed with error: %{public}@
Done updating SQLite store from CloudKit after saving tabs
Finished saving tabs for the current device to CloudKit
Saving close request to CloudKit
No close request found to save
Stopping save of close requests
Did fail to save iCloud Tab record batch with close requests with error: %{public}@
Successfully saved close request to CloudKit
Updating SQLite store from CloudKit after saving close request
Updating SQLite store from CloudKit after saving close request failed with error: %{public}@
Done updating SQLite store from CloudKit after saving close request
Finished saving close request to CloudKit
Fetching iCloud Tab data from CloudKit
Stopping fetch of tabs
Attempting to create CloudTabs zone before retrying fetch
Fetching changes from CloudKit again after creating CloudTabs zone
Failed to create CloudTabs zone when fetching changes with error: %{public}@
No modified devices, tab records, or close requests to save to SQLite
Saving %lu device records, %lu tab records, and %lu close requests to SQLite
Failed to save modified device, tab, and close request records to the SQLite database with error: %d
Finished saving modified device, tab, and close request records to the SQLite database
Skipping loading devices, tabs, and close requests from SQLite
Loading devices, tabs, and close requests from SQLite
Finished loading devices, tabs, and close requests from SQLite
Finished fetching iCloud Tab data from CloudKit
Fetched an invalid iCloud Tab device record from CloudKit
Fetched an invalid iCloud Tab tab record from CloudKit
Fetched an invalid iCloud Tab close request record from CloudKit
Deleting devices from CloudKit
No devices to delete
Deleting close requests from CloudKit
No close requests to delete
Stopping deletion of records
Deleting records from CloudKit
Failed to delete records with error: %{public}@
Done deleting records from CloudKit
Updating SQLite store from CloudKit after deleting records
Updating SQLite store from CloudKit after deleting records failed with error: %{public}@
Done updating SQLite store from CloudKit after deleting records
Finished deleting records from CloudKit
Sync coordinator received a message to delete the CloudTabs zone
Sync coordinator successfully deleted CloudTabs zone and local database
Prepare records for migration
Number of records prepared for migration: %ld
Convert built-in record with recordName %{public}@ for migration
Record of type %ld has built-in record name %{public}@ despite not being a built-in folder, generating a new record name
Convert new local record with created recordName %{public}@ for migration
Already converted record with recordName %{public}@ for migration
Convert Bookmark DAV record with recordName %{public}@ for migration
Trying to generate DAV server ID for bookmark with local ID %{public}@, but that bookmark doesn't exist
Received nil set of child local IDs for folder with local ID %{public}@ while generating DAV server IDs
Clearing referenced record with generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Did find referenced record: %{public}@ generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Could not find referenced record: %{public}@ generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Overriding previous referenced record : %{public}@ generation: %{public}@ with referenced record: %{public}@ generation: %{public}@ for attribute: %{public}@ in record: %{public}@
Cannot apply reference: %{public}@ with generation: %{public}@ to attribute %{public}@ of record name: %{public}@ because the item is missing locally.
No references to apply
Sync coordinator will begin syncing with %{public}@
Beginning synchronization with %{public}@
Sync coordinator begins setting up local store with %{public}@
Could not allocate collection with %{public}@
Sync coordinator did finish setting up local store with %{public}@
Discontinuing sync because user is not signed in with %{public}@
Discontinuing sync because device identifier is empty with %{public}@
Discontinuing sync because account hash differed with %{public}@
Discontinuing sync because bookmarks Safari sync is disabled with %{public}@
Failed to set up Bookmarks Record Zone with error: %{public}@ with %{public}@
Determining course of action from local migration state with %{public}@
Could not allocate collection to start migration with %{public}@
Discontinuing migration because user is not signed in with %{public}@
Discontinuing migration because Safari syncing is not enabled with %{public}@
Discontinuing migration because device identifier is empty with %{public}@
Not migrating because we've already migrated with %{public}@
Will attempt secondary migration with %{public}@
Failed to read the local migration state with %{public}@
Received an error fetching remote migration state: %{public}@; will attempt to become responsible for migration with %{public}@
Remote migration state requires migration with %{public}@
Remote migration pending; will device whether we are responsible for resuming migration or should preempt migrator with %{public}@
Perform local-only migration with %{public}@
Deleting existing record zone in preparation for stealing right to migrate with %{public}@
Something went wrong deleting the existing record zone; bailing out: %{public}@ with %{public}@
Stealing right to migrate due to migration timeout with %{public}@
Bailing out from primary migration eligibility determination due to deallocation with %{public}@
Failed to become responsible for migration due to unrecoverable error: %{public}@ with %{public}@
Failed to become responsible for migration due to CloudKit write error: %{public}@ with %{public}@
Record zone unexpectedly deleted or missing; bailing out of primary migration with %{public}@
Migration coordinator retry limit exceeded with %{public}@
Received a migrationInfo with nil device identifier; will continue evaluating eligibility to steal right to migrate with %{public}@
Migration record indicates that we are the migrating device; attempting to resume migration with %{public}@
Not stealing right to migrate since no last modification date was stored in the migration record with %{public}@
Not stealing right to migrate since migration state was updated recently by another device with %{public}@
Failed to push migration state because some other device modified it first; aborting with %{public}@
Exceeded maximum migration retry limit with %{public}@
No associated records for UUID %{public}@ with %{public}@
Bookmark with UUID %{public}@ does not represent a sharable tab group, actual type: %{public}@ with %{public}@
Sync coordinator will begin sharing tab group %{public}@ with record name: %{public}@ with %{public}@
Did finish checking whether to create a legacy tab group, should create placeholder: %{public}@ with %{public}@
Could not set up shared tab group zone with error: %{public}@ with %{public}@
Did finish setting up shared secondary tab group zone, with result: %{public}@ with %{public}@
Discontinuing sync because bookmarks dataclass was disabled during sync with %{public}@
Did finish saving migration tombstones and checking whether to create a legacy tab group but we do not need to create the placeholder with %{public}@
Will begin creating legacy placeholder tab group with %{public}@
Did fail to create legacy placeholder tab group with error: %{public}@ with %{public}@
Did successfully create legacy placeholder tab group with %{public}@
Will begin saving migration tombstones to the default zone with %{public}@
Failed to save migration tombstones to the default zone error: %{public}@ with %{public}@
Did finish saving migration tombstones to the default zone with %{public}@
Will begin saving records to the new zone %{public}@ with %{public}@
Did fail to save records to the new zone %{public}@ with %{public}@
Did finish saving records to the new zone %{public}@ with %{public}@
Will save CKShare record to the new zone %{public}@ with %{public}@
CloudTabGroupSyncCoordinator got deallocated while migrating the share with %{public}@
Failed to save CKShare record to the new zone %{public}@, error: %{public}@ with %{public}@
Did save CKShare record to the new zone %{public}@ with %{public}@
Perfoming sync down of the new zone %{public}@ with %{public}@
Failed sync down records for new zone %{public}@, error: %{public}@ with %{public}@
Did finish sync down of the new zone %{public}@ with %{public}@
Saving record with ID: %{public}@, data: %{sensitive}@ with %{public}@
Record with ID %{public}@ is already in a tab group specific zone and does not need to be moved with %{public}@
Record with ID %{public}@ is neither in the default zone to become a tombstone nor in the destination zone %{public}@ with %{public}@
Attempting to accept share for shareURL %{sensitive, hash.mask}@ with %{public}@
Did fetch share metadata for shareURL %{sensitive, hash.mask}@, %{sensitive, mask.hash}@ with %{public}@
Failed to fetch CKShareMetadata record for URL %{sensitive, mask.hash}@ with %{public}@
Attempted to accept share in zoneID: %{public}@ even though it was created by this user, syncing down the zone instead with %{public}@
Did fail to perform sync down of zone %{public}@ shared by this user; error: %{public}@ with %{public}@
Successfully performed sync down for zone %{public}@ shared by this user with %{public}@
Will begin accepting share with zoneID: %{public}@ for shareURL: %{sensitive, mask.hash}@ with %{public}@
Successfully accepted share with zoneID %{public}@ for shareURL: %{sensitive, mask.hash}@ with %{public}@
Will perform sync down of zone %{public}@ with %{public}@
Did fail to perform sync down of zone %{public}@ for shareURL %{sensitive, mask.hash}@ with %{public}@
Root tab group record is missing in the shared tab group zone after sync down probably because the MinimumAPIVersion is not supported in zone %{public}@ for shareURL %{sensitive, mask.hash}@ with %{public}@
Successfully performed sync down for zone %{public}@ of shareURL %{sensitive, mask.hash}@ with %{public}@
Failed to fetch accept share with zoneID %{public}@ for metadata %{sensitive, mask.hash}@; error: %{public}@ with %{public}@
Will load last known minimum OS version in circle cache with %{public}@
Cache for last known minimum OS version in circle is still valid. Should create placeholder tab: %@ with %{public}@
Cache for last known minimum OS versions in circle is no longer valid; fetching metadata with %{public}@
A device with an older iOS version is still in the circle, require shared tab groups with %{public}@
A device with an older macOS version is still in the circle, require shared tab groups with %{public}@
A device with an unknown OS version is still in the circle, require shared tab groups with %{public}@
Did update last known minimum OS versions in circle with %{public}@
Will begin building next updated records batch with %{public}@
Ignoring change lacking record with token %zu with %{public}@
Adding record with name: %{public}@ to batch, data: %{sensitive}@ with %{public}@
Done saving all record changes with %{public}@
Failed to delete recordZoneID batch with error: %{public}@ with %{public}@
Done deleting recordZoneID batch with %{public}@
Failed to save record batch with error: %{public}@ with %{public}@
Done saving record batch, posting highlights to Messages with %{public}@
Did successfully save record with ID %{public}@ associated with bookmark with serverID %{public}@ with %{public}@
Record of type %{public}@ is part of a save batch but its type is not handled as bookmark record or as an auxiliary record with %{public}@
Did successfully mark record with ID %{public}@ as deleted in source zone for destination record with ID %{public}@ with %{public}@
Record with ID %{public}@ does not match associated bookmark with serverID %{public}@ (recordID: %{public}@) even though it is not a record moving to a different zone; ignoring with %{public}@
Done saving record batches, clearing changes during or before generation %{public}zu with %{public}@
There are %ld source records for records moved between zones that which did not save properly, record IDs: %{public}@ with %{public}@
Deleting recordZoneID batch of size: %zu with %{public}@
Failed to delete zone with ID: %{public}@, error: %{public}@ with %{public}@
Failed to delete record zone ID batch with error: %{public}@ with %{public}@
Saving record batch of size: %zu, number of deleted records: %zu to database: %{public}@ with %{public}@
Resolving merge conflict for record with name: %{public}@ with %{public}@
Did fail to save record batch with error: %{public}@ with %{public}@
Will begin fetching records to refresh with %{public}@
No recordIDs left to refresh with %{public}@
Will refresh %zu records in private database and %zu in shared database with %{public}@
Did successfully refresh record with ID %{public}@ with %{public}@
Record with ID %{public}@ requested for refresh does not exist in the remote database with %{public}@
Could not refresh record with ID %{public}@ because of error %{public}@ with %{public}@
Failed to refresh records with error: %{public}@ with %{public}@
Failed to refresh %zd recordIDs: %{public}@ with %{public}@
Done refreshing records with %{public}@
No auxiliary records to delete with %{public}@
Will begin deleting deleted auxiliary records with %{public}@
Did fail to delete auxiliary records with error %{public}@,  %{public}@
Sync coordinator did finish deleting auxiliary records with %{public}@
Will begin building next batch of deleted auxiliary records with %{public}@
Failed to delete record batch in private database with error: %{public}@ with %{public}@
Failed to delete record batch in shared database with error: %{public}@ with %{public}@
Done deleting auxiliary record batches, clearing records in sync data with %{public}@
Did fetch record with name: %{public}@, data: %{sensitive}@ with %{public}@
Ignoring record with ID %{public}@ because its type %{public}@ is unknown with %{public}@
Ignoring record of type %{public}@ with ID %{public}@, because it is a placeholder record with %{public}@
Ignoring record of type %{public}@ with ID %{public}@, because it is a child record of a placeholder with ID %{public}@ with %{public}@
Record with ID %{public}@ uses a more recent API version (%zu), then supported (%zu) with %{public}@
Ignoring unknown record with ID %{public}@ because of its state %zu with %{public}@
Bookmark with server ID %{public}@ uses a more recent API version (%zu), then supported (%zu) with %{public}@
Fetched scoped bookmark list with unprefixed record name: %{public}@. Marking for deletion with %{public}@
Ignoring received migration tombstone with recordID %{public}@ for local record with ID %{public}@ with %{public}@
Ignoring remote record with ID %{public}@ because it does not match local recordID %{public}@ for server_id %{public}@ even though it is not a migration tombstone, actual state: %zd with %{public}@
Bookmark with server ID %{public}@ is deleted with %{public}@
Bookmark with server ID %{public}@ is not inserted with %{public}@
Scoped bookmark changes should have a valid tab group with %{public}@
Shared tab group changes should have a valid parent bookmark with %{public}@
Parent bookmark with server ID %{public}@ not found, moving to recovered bookmarks with %{public}@
Setting up _unknownRecordIDsToPendingAuxiliaryRecordSets with %{public}@
_unknownRecordIDsToPendingAuxiliaryRecordSets is already set up with content %{public}@ with %{public}@
Clearing _unknownRecordIDsToPendingAuxiliaryRecordSets with %{public}@
Found auxiliary records that do not have any associated main records with %{public}@
Unknown recordID %{public}@ has %zd pending auxiliary records with IDs: %{public}@ with %{public}@
Auxiliary record %{public}@ does not have an associated main recordID with %{public}@
Adding pending auxiliary record with ID %{public}@ for unknown associated recordID: %{public}@ with %{public}@
Did find %zd pending auxiliary records for associated main recordID: %{public}@ with %{public}@
Handling pending auxiliary record %{public}@ for recordID: %{public}@ with %{public}@
Updating share record for zone: %{public}@ with %{public}@
Deleting share record for tab group: %{public}@ with %{public}@
Did receive presence record with ID %{public}@ for participant: %{public}@, tabRecordName: %{public}@, isExpired: %d with %{public}@
Did receive presence record deletion with ID %{public}@ with %{public}@
Will prepare for sync down with %{public}@
Did finish sync down successfully %{public}@ with %{public}@
Saving server change token for recordZoneID: %{public}@, token: %{public}@ with %{public}@
Will begin sync down with %{public}@
Error received while syncing down: %{public}@ with %{public}@
Sync coordinator finished sync down with %{public}@
Performing sync down with last server change token in private database: %{public}@ with %{public}@
Performing sync down with last server change token in shared database: %{public}@ with %{public}@
Primary record zone has disappeared, we need to migrate again with %{public}@
Found %lu zones deleted in database %{public}@, deleting local records with %{public}@
Found no zones to update in database %{public}@ with %{public}@
Found %lu zones with IDs %{public}@ updated in database %{public}@, fetching records with %{public}@
Performing sync down for record zone IDs %{public}@ in database: %{public}@, configurations: %{public}@ with %{public}@
Failed to finish fetching record with ID %{public}@, error: %{public}@ with %{public}@
Did receive record delete for record %{public}@, type: %{public}@ with %{public}@
Did finish receiving record changes from zone %{public}@ with %{public}@
Failed to sync down records with error: %{public}@, per record zone errors: %{public}@ with %{public}@
Did finish sync down for record zone IDs %{public}@, configurations: %{public}@ with %{public}@
Change token is expired; trying a full sync down with %{public}@
Successfully completed full sync down after expired change token error with %{public}@
Record %{public}@ was not seen during sync down after expired change token error; marking it for deletion with %{public}@
Failed to save asset with error: %{public}@ with %{public}@
Error while copying asset. Error description: %{public}@ with %{public}@
Sync coordinator failed to sync bookmarks with error: %{public}@ with %{public}@
Record with ID %{public}@ is changing zone with new recordID: %{public}@ with %{public}@
Setting up batch item for update of record with type %{public}@ with ID: %{public}@ with %{public}@
Will update %lu records with IDs: %{public}@ with %{public}@
Will delete %lu records with IDs: %{public}@ with %{public}@
Handling deletion of record of type %{public}@ with ID: %{public}@ with %{public}@
Deleting %lu auxiliary records with IDs: %{public}@ with %{public}@
Deleting shared private zone with ID %{public}@ with %{public}@
Leaving share by deleting CKShare in shared zone with ID %{public}@ with %{public}@
Record with ID %{public}@ is in a zone that will be removed with %{public}@
Marking record as Deleted with ID: %{public}@ with %{public}@
Record %{public}@ was deleted remotely with %{public}@
Record %{public}@ was changed remotely with %{public}@
Record with ID %{public}@ locally moved to a different zone was modified by another device, don't attempt to delete it anymore with %{public}@
No remote record detected for local record %{public}@, skipping merge with %{public}@
Creating new bookmark with %{public}@
=== Resetting sync data with %{public}@
Handling an iCloud Keychain reset with %{public}@
Will begin deleting private tab groups with %{public}@
Could not retrieve private zones to delete, error: %{public}@ with %{public}@
No private zones to delete with %{public}@
Failed to delete private zones, error: %{public}@ with %{public}@
Will begin leaving shared tab groups with %{public}@
Could not retrieve shared zones to leave, error: %{public}@ with %{public}@
No shared zones to leave with %{public}@
Successfully left shared zones with IDs: %{public}@ with %{public}@
Failed to delete shared zones, error: %{public}@ with %{public}@
Will notify delegate that changes for some record zones were ignored with IDs: %{public}@ with %{public}@
Failure to get a collaboration highlight with error %{public}@ for the CKShare: %{public}@ %{private}@ with %{public}@
Fetch record zone changes operation completed for record zone %{public}@
SafariBookmarksSyncAgent
APSConnectionDelegate
NSObject
CloudExtensionStore
SafariSyncControllerConnectionHandling
WBSSafariBookmarksSyncAgentProtocol
WBSCyclerCloudBookmarksAssistant
WBTabGroupSyncAgentProtocol
WBSSafariSyncServiceProtocol
SafariSyncController
CloudBookmarkDatabaseLockArbiterDelegate
CloudTabSyncArbiterDelegate
NSXPCListenerDelegate
CloudTabGroupSyncManagerDelegate
CloudSettingSyncCoordinatorDelegate
AppleAccountInformationProvider
WBSAppleAccountInformationProviding
CloudTabGroupExpiredChangeTokenHandler
CloudBookmark
SafariBookmarksSyncExtras
CloudTabGroupBatchItem
CloudExtensionSyncCoordinator
CloudExtensionSQLiteStoreDelegate
CloudBookmarkDebugHierarchyChecker
CloudBookmarkAccountPropertiesStore
CloudTabGroupPresenceUpdater
CloudBookmarkCompressedJSONValueTransformer
CloudBookmarkDatabaseHandler
CloudBookmarkUpdater
CloudBookmarkCKReferenceValueTransformer
CloudBookmarkEncryptedObjectValueTransformer
CloudBookmarkWBSHashGeneratorExtras
CloudSettingStore
CloudBookmarkMovedBookmarkManager
CloudSettingsSyncEngineAccessProvider
CloudBookmarkAttributeValueTransformer
CloudExtensionsExtras
CloudBookmarksExtras
CloudBookmarksFetchResult
CloudTabGroupMaintenanceActivity
CloudBookmarksMigrationCoordinator
CloudBookmarkExpiredChangeTokenHandler
CloudTabCloseRequest
NSCopying
CloudBookmarkDatabaseAccessProvider
CloudBookmarkItemConfiguration
CloudSettingSyncCoordinator
CloudBookmarkStore
CloudBookmarkStoreUserDefaultsStorage
CloudBookmarkStoreLocalStorage
CloudExtensionState
CloudTabGroupAccountPropertiesStore
CloudBookmarkSyncCoordinator
WBSCRDTPositionGeneratorDelegate
CloudBookmarkSyncMigrationConverter
CloudBookmarkSyncMigrationSaveHandlerDelegate
CloudBookmarkSyncMigrationSyncDownHandlerDelegate
CloudTabGroupSyncEvent
CloudBookmarkCKOperationGroupExtras
CloudTabSyncArbiter
CloudTabSyncProtocol
CloudTabLocalStoreShim
CloudTabLocalStore
CloudTabLocalStoreDelegate
CloudBookmarkSyncMigrationCoordinator
CloudBookmarksDiagnostics
CloudBookmarkCKAssetValueTransformer
CloudTabRemoteStore
CloudTabGroupSyncDebugger
CloudTabGroupSyncCoordinatorObserving
CloudBookmarkSyncMigrationFolderContentConverter
CloudBookmarkSyncMigrationPositionGenerator
_CloudBookmarkSyncMigrationPositionGeneratorEnumerator
CloudBookmarkSyncMigrationSaveHandler
CloudTabGroupSyncManager
CloudTabGroupSyncCoordinatorDelegate
CloudTabGroupMaintenanceActivityDelegate
CloudBookmarkSyncMigrationSaveReparentedBookmarksHandler
CloudBookmarkSyncMigrationSyncDownHandler
CloudExtensionSQLiteStore
WBSSQLiteDatabaseDelegate
CloudBookmarkChangeProcessor
CloudBookmarkDatabaseLockArbiter
CloudBookmarkDatabaseCoordinating
CloudBookmarkWindowsCompatibleStringValueTransformer
CloudBookmarkWindowsCompatibleURLValueTransformer
CloudBookmarkURLIdentityHashValueTransformer
CloudExtensionDevice
CloudTab
CloudKitSQLiteStore
CloudTabDevice
CloudTabsExtras
CloudTabSQLiteStore
CloudTabSyncCoordinator
CloudBookmarkSyncMigrationHierarchyConverter
CyclerCloudBookmarksAssistant
CloudBookmarkPendingReferenceManager
CloudTabGroupBatch
CloudTabGroupSyncCoordinator
CloudRemoteStore
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v20@0:8B16
v16@0:8
@"APSConnection"
@24@0:8@16
v32@0:8@16@?24
v44@0:8@16B24@28@?36
v40@0:8@16@24@?32
v56@0:8@16@24@?32@?40@?48
v64@0:8@16@24@32@40@48@?56
v56@0:8@16@?24@?32@40@?48
v64@0:8@16@24@?32@?40@48@?56
@32@0:8@16@?24
@"CKDatabase"
@"CKRecordZone"
@"NSOperationQueue"
@"NSObject<OS_dispatch_queue>"
@"CKContainer"
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@?<v@?@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8q16
v36@0:8@16B24@?28
v24@0:8@?<v@?q@"NSString"@"NSError">16
v24@0:8@?<v@?@"NSData">16
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"NSError">16
v24@0:8@?<v@?B>16
v32@0:8@"NSDictionary"16@?<v@?>24
v36@0:8@"NSURL"16B24@?<v@?>28
v24@0:8@?<v@?>16
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSArray"@"NSError">16
v24@0:8@"<WBTabGroupSyncAgentSyncObserver>"16
v32@0:8@"CKShareMetadata"16@?<v@?@"CKShare"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"NSURL"16@"NSData"24@?<v@?@"CKShare"@"NSError">32
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v24@0:8@"CloudBookmarkDatabaseLockArbiter"16
@28@0:8@16B24
@"CKContainer"28@0:8@"CloudTabSyncArbiter"16B24
v24@0:8@"CloudTabSyncArbiter"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@"CloudTabGroupSyncManager"16
v24@0:8@"CloudTabGroupSyncManager"16
v32@0:8@"CloudTabGroupSyncManager"16@"NSSet"24
v48@0:8@16@24@32@?40
v32@0:8@"CloudSettingSyncCoordinator"16@"CKRecord"24
v32@0:8@"CloudSettingSyncCoordinator"16@"CKRecordID"24
v24@0:8@"CloudSettingSyncCoordinator"16
v48@0:8@"CloudSettingSyncCoordinator"16@"NSData"24@"NSString"32@?<v@?B>40
@24@0:8q16
v40@0:8q16@24@?32
v40@0:8@16q24@?32
@32@0:8@16@24
v44@0:8r*16@24B32@?36
d32@0:8q16@24
v48@0:8Q16@24@32@?40
v48@0:8B16B20Q24q32q40
v48@0:8Q16Q24@32@?40
v32@0:8@16q24
@"ACAccountStore"
@"<WBSBookmarkDBAccess>"
@"CloudBookmarkStore"
@"NSXPCListener"
@"NSTimer"
@"NSDate"
@"NSObject<OS_os_transaction>"
@"WBSDiagnosticStateCollector"
@"CloudBookmarkDatabaseLockArbiter"
@"CloudBookmarkSyncMigrationCoordinator"
@"CloudBookmarksMigrationCoordinator"
@"CloudBookmarkSyncCoordinator"
@"NSObject<OS_dispatch_source>"
@"CyclerCloudBookmarksAssistant"
@"NSMutableSet"
@"NSUserDefaults"
@"CloudTabSyncArbiter"
@"CloudSettingStore"
@"CloudSettingSyncCoordinator"
@"<WBSSettingsSyncEngineAccess>"
@"NSMutableDictionary"
@"NSString"
@"NSMutableArray"
@"CloudExtensionStore"
@"CloudExtensionSyncCoordinator"
@"CloudTabGroupSyncManager"
@"WBSCloudKitContainerManateeObserver"
@"WBTabCollection"
v24@0:8@?<v@?q>16
q16@0:8
@"WebBookmarkCollection"
@40@0:8@16^v24@32
@48@0:8@16^v24@32@40
v40@0:8^v16@24@32
@40@0:8^v16@24@32
@56@0:8@16@24^v32@40@48
v56@0:8@16@24^v32@40@48
@48@0:8^v16@24@32@40
@48@0:8r^v16@24@32@40
B32@0:8^v16@24
@32@0:8@16^B24
v32@0:8^v16@24
B48@0:8@16@24@32@40
Q32@0:8@16@24
Q36@0:8@16@24B32
Q24@0:8@16
Q32@0:8@16^B24
r^v16@0:8
@"WBBookmarkSyncData"
@"CloudBookmarkItemConfiguration"
@"CKRecord"
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@"WBChangeRecord"
@"NSSet"
v32@0:8@"CloudExtensionSQLiteStore"16@"NSError"24
@"CloudExtensionSQLiteStore"
@"CKOperationGroup"
@"CloudExtensionDevice"
@"NSArray"
@"NSError"
@"CKServerChangeToken"
q24@0:8@16
B24@0:8^v16
B40@0:8^v16@24B32B36
@"<CloudBookmarkDatabaseCoordinating>"
v44@0:8@16@24B32@?36
v60@0:8@16@24@32@40B48@?52
v52@0:8@16@24@32B40@?44
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKRecordID"
@24@0:8#16
@"NSData"24@0:8@"NSArray"16
@"WBSCRDTPosition"24@0:8@"NSString"16
B48@0:8@"CKReference"16@"WBSCRDTGeneration"24@"NSString"32@"NSString"40
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
@"CKRecordZoneID"16@0:8
@"NSArray"16@0:8
@"CloudBookmarkAccountPropertiesStore"
@32@0:8@16Q24
@"CKRecordZoneID"
v56@0:8@16@24@32@40@?48
v60@0:8@16B24@28@36@?44@?52
v56@0:8@16@24@32@?40@?48
v64@0:8@16@24@32@40@?48@?56
@"WBSHashGenerator"
@32@0:8^v16@24
@28@0:8B16^@20
@24@0:8^@16
B32@0:8@16^@24
v28@0:8@16i24
@32@0:8@16^@24
v24@0:8^@16
B24@0:8q16
B28@0:8@16B24
@32@0:8q16@24
v24@0:8Q16
@"NSData"
@"WBCollectionConfiguration"
@"<CloudTabGroupMaintenanceActivityDelegate>"
d16@0:8
v36@0:8B16@20@?28
@32@0:8@16^v24
@24@0:8Q16
@64@0:8@16@24@32@40@48@56
@24@0:8^{_NSZone=}16
@112@0:8q16q24@32@40@48@56@64@72@80@88@96@?104
@?16@0:8
@"NSDictionary"
@"NSOrderedSet"
v28@0:8B16@20
@"<CloudSettingSyncCoordinatorDelegate>"
@40@0:8q16@24@32
@32@0:8@16q24
v48@0:8@16@24@?32@?40
v80@0:8@16@24@32@40@?48@?56@?64@?72
v80@0:8@16@24@32@40@48@56@?64@?72
v40@0:8B16B20@24@?32
v72@0:8@16@24@32@40@48@?56@?64
v40@0:8@?16@?24@?32
v48@0:8@16@?24@?32@?40
v48@0:8q16@24@32@?40
v32@0:8Q16@?24
@"NSObject<OS_os_log>"
@"<CloudBookmarkStoreLocalStorage>"
@"NSData"16@0:8
v24@0:8@"NSData"16
@112@0:8@16@24@32@40@48B56B60@64@72@80@88@96@104
@"NSString"24@0:8@"WBSCRDTPositionGenerator"16
q24@0:8@"WBSCRDTPositionGenerator"16
@"WBSCRDTPosition"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@"NSString"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@32@0:8^@16@?24
@"CloudBookmark"
@"WBSCRDTPosition"
@"CloudBookmarkMovedBookmarkManager"
@"CloudBookmarkPendingReferenceManager"
@"WBSCRDTPositionGenerator"
@"CloudBookmarkExpiredChangeTokenHandler"
B56@0:8@16@24@32@40@48
v32@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"CloudBookmark"24
v32@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"NSString"24
B32@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"CloudBookmark"24
B56@0:8@"CloudBookmarkSyncMigrationSaveHandler"16@"CKReference"24@"WBSCRDTGeneration"32@"NSString"40@"NSString"48
v32@0:8@"CloudBookmarkSyncMigrationSyncDownHandler"16@"CloudBookmark"24
v32@0:8@"CloudBookmarkSyncMigrationSyncDownHandler"16@"NSString"24
B56@0:8@"CloudBookmarkSyncMigrationSyncDownHandler"16@"CKReference"24@"WBSCRDTGeneration"32@"NSString"40@"NSString"48
@"CloudBookmarkSyncMigrationFolderContentConverter"
@"CloudBookmarkSyncMigrationSyncDownHandler"
@"CloudBookmarkSyncMigrationSaveReparentedBookmarksHandler"
@40@0:8@16q24@32
v32@0:8q16@?24
@"CloudTabSQLiteStore"
@"CloudTabRemoteStore"
@"CloudTabSyncCoordinator"
@"CloudTabLocalStoreShim"
@"<CloudTabSyncArbiterDelegate>"
v24@0:8@?<v@?@"NSArray"@"NSArray">16
v32@0:8@"NSString"16@?<v@?@"CloudTabDevice">24
v32@0:8@"NSArray"16@?<v@?i>24
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?i>40
v32@0:8@"NSData"16@?<v@?i>24
v24@0:8@?<v@?Bi>16
v28@0:8B16@?<v@?i>20
@"<CloudTabLocalStoreDelegate>"16@0:8
v24@0:8@"<CloudTabLocalStoreDelegate>"16
v24@0:8@"<CloudTabLocalStore>"16
v32@0:8@"<CloudTabLocalStore>"16@"NSError"24
@"<CloudTabLocalStoreDelegate>"
@"<CloudTabLocalStore>"
v44@0:8B16@20@?28@?36
@"CloudBookmarkSyncMigrationConverter"
@24@0:8^v16
v56@0:8^v16@24^q32^q40@48
v24@0:8@"CloudTabGroupSyncCoordinator"16
v32@0:8@"CloudTabGroupSyncCoordinator"16@"NSDictionary"24
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSArray"24@"NSArray"32
v32@0:8@"CloudTabGroupSyncCoordinator"16@"CKRecord"24
@"CloudTabGroupSyncEvent"
@"CloudBookmarkSyncMigrationPositionGenerator"
@"NSEnumerator"
@48@0:8@16@24^@32^@40
@48@0:8@16@24@32q40
@"<CloudBookmarkSyncMigrationSaveHandlerDelegate>"
v56@0:8@16@24@32@40@48
v32@0:8@"CloudTabGroupSyncCoordinator"16@"NSSet"24
v32@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSSet"24@"NSString"32
v56@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24@"NSString"32@"NSString"40@"CKRecordID"48
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24@"CKRecordID"32
v40@0:8@"CloudTabGroupSyncCoordinator"16@"NSString"24@"NSDate"32
v24@0:8@"CloudTabGroupMaintenanceActivity"16
v32@0:8@?16@?24
@"CloudTabGroupMaintenanceActivity"
@"CloudTabGroupSyncCoordinator"
@"CloudTabGroupPresenceUpdater"
@"NSMapTable"
@"CKSystemSharingUIObserver"
@"CloudTabGroupSyncDebugger"
@"RBSProcessMonitor"
@"<CloudTabGroupSyncManagerDelegate>"
@"<CloudBookmarkSyncMigrationSyncDownHandlerDelegate>"
v32@0:8@"WBSSQLiteDatabase"16@"NSError"24
i16@0:8
v20@0:8i16
v24@0:8i16i20
i24@0:8@16
@"<CloudExtensionSQLiteStoreDelegate>"
@"<CloudBookmarkUpdater>"
B24@0:8@"NSString"16
@"<WBSBookmarkDBAccess>"16@0:8
@"<CloudBookmarkDatabaseLockArbiterDelegate>"
@76@0:8@16@24@32@40B48@52@60@68
@96@0:8@16@24@32@40@48@56B64B68@72@80@88
v96@0:8@16@24@32@40@48@56B64B68@72@80@88
@32@0:8@16r*24
i20@0:8i16
i32@0:8q16@24
i32@0:8@16@24
@"NSURL"
@"WBSSQLiteDatabase"
@64@0:8@16@24B32B36@40@48@56
@64@0:8@16@24B32@36B44@48@56
@"CloudTabDevice"
@"CloudTabCloseRequest"
v24@0:8^v16
v52@0:8i16@20@28@36@?44
@40@0:8@16@24@?32
@44@0:8i16@20@28@36
@36@0:8i16@20@28
v44@0:8@16@24B32@36
@44@0:8@16@24@32B40
v36@0:8@16@24B32
B40@0:8@16@24@32
@48@0:8@16#24@32@40
@36@0:8@16@24i32
@52@0:8@16@24@32i40@44
Q40@0:8@16@24@32
@56@0:8@16@24q32@40@48
@"CloudTabGroupAccountPropertiesStore"
@"CloudTabGroupExpiredChangeTokenHandler"
@"NSHashTable"
@"SWHighlightCenter"
@"<CloudTabGroupSyncCoordinatorDelegate>"
@"CKOperationConfiguration"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mobilesafari</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.application-identifier</key>
<string>com.apple.Safari</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.SafariShared.CloudTabs</key>
<string>com.apple.SafariShared.CloudTabs</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.container-required</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mobilesafarishared</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>SafariBookmarksSyncAgent</string>
</array>
</dict>
</plist>
O00
application-identifier
com.apple.mobilesafari0
aps-connection-initiate
aps-environment
production04 com.apple.application-identifier
com.apple.Safari0>0com.apple.developer.icloud-container-environment
Production01#com.apple.developer.icloud-services0
CloudKit0H4com.apple.private.MobileGestalt.AllowedProtectedKeys0
UniqueDeviceID0+&com.apple.private.accounts.allaccounts
0.)com.apple.private.aps-connection-initiate
0*%com.apple.private.cloudkit.masquerade
5com.apple.private.cloudkit.serviceNameForContainerMap
F0D com.apple.SafariShared.CloudTabs com.apple.SafariShared.CloudTabs0.)com.apple.private.cloudkit.setEnvironment
0-(com.apple.private.cloudkit.systemService
0G-com.apple.private.security.container-required
com.apple.mobilesafari0.)com.apple.private.security.storage.Safari
com.apple.private.tcc.allow0
kTCCServiceLiverpool0)$com.apple.runningboard.process-state
0[9com.apple.security.exception.shared-preference.read-write0
com.apple.mobilesafarishared0
platform-application
seatbelt-profiles0
SafariBookmarksSyncAgent
