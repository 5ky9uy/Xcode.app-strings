SSVCADBToTTSPreTransitionOffset
.cxx_destruct
SSVLKFSTTSMappingInputRangeHigh
CSAdBlockerAssetDownloadMonitor:didInstallNewAsset:assetProviderType:
SSVNoiseTTSMappingInputRangeLow
CSAlarmMonitor:didReceiveAlarmChanged:
T@"CSAudioInjectionXPCListener",&,N,V_audioInjectionXpcListener
CSAssetController:didDownloadNewAssetForType:
T@"CSAudioStreamProvidingProxy",&,N,V_audioStreamProvidingProxy
CSAudioRouteChangeMonitor:didReceiveAudioRouteChangeEvent:
T@"CSPolicy",&,N,V_enablePolicy
CSAudioServerCrashMonitorDidReceiveServerRestart:
T@"CSTrialAssetDownloadMonitor",&,N,V_trialAssetDownloadMonitor
CSBluetoothWirelessSplitterMonitor:didReceiveSplitterStateChange:shouldDisableSpeakerVerificationInSplitterMode:
T@"NSArray",&,N,V_requiredNodes
CSEventMonitorDidReceiveEvent:
T@"NSHashTable",&,N,V_observers
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
T@"NSMapTable",&,N,V_nodesCache
CSMyriadSelfTriggerCoordinator:didGenerateMyriadPHashForSelfTrigger:
T@"NSString",&,N,V_overridePath
CSPhoneCallStateMonitor:didRecievePhoneCallStateChange:
T@"NSString",R,N,V_assetVersion
CSRemoteAssetManagerDidDownloadNewAsset:
T@"NSString",R,N,V_debugLogPath
CSSiriEnabledMonitor:didReceiveEnabled:
T@"NSUUID",&,N,V_turnIdentifier
CSSoftwareUpdateCheckingMonitor:didReceiveStateChanged:
TB,N,V_canProcessCurrentRequest
CSSpeakerRecognitionAssetMetaUpdateMonitor:didReceiveNewSpeakerRecognitionAssetMetaData:
TB,N,V_epResult
CSSpringboardStartMonitor:didReceiveStarted:
TB,N,V_permanentOffsetIsEnabled
CSTimerMonitor:didReceiveTimerChanged:
TQ,N,V_audioPacketDeliveryCount
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
TQ,N,V_dataBufferPositionNDEAPI
CSVoiceTriggerFirstPassMetricsWithFirstPassInfoGeneratedTime:firstPassInfoProcessedTime:
TQ,N,V_voiceTriggerFireMachTime
CSVoiceTriggerXPCServiceProxy:bypassPhraseSpotter:
Td,N,V_lastEndpointHintDuration
CSVolumeMonitor:didReceiveAlarmVolumeChanged:
_activationInfo
CSXPCClient:didDisconnect:
_allowVocabList
JSONObjectWithData:options:error:
_attendingState
RTModelWithFallbackLanguage:
_audioProviders
SSVCADBToTTSMaximumOutput
_bufferDuration
SSVCADBToTTSPostTransitionDC
_calculateNumberOfVoicingFrames
SSVCADBToTTSPostTransitionOffset
_circularBuffer
SSVCADBToTTSTransitionPoint
_clampedSFLatencyMsForClientLag
SSVCADefaultMusicStrength
_closeAudioFile
SSVCADefaultSpeechStrength
_createDirectoryIfDoesNotExist:
SSVCADeviceDefaultASVOffMinTTSVolume
_device
SSVCADeviceDefaultMicSensitivityOffset
_deviceMapTable
SSVCADeviceSimpleASVOffMinTTSVolume
_encoderBitRate
SSVCADeviceSimpleMaxTTSVolume
_endpointerType
SSVCADeviceSimpleMicSensitivityOffset
_fetchRecognizerLanguageWithSiriLanguage:UILanguage:taskString:
SSVCADeviceSimpleMinTargetDB
_gestureManager
SSVCADeviceSimpleOutputMinTargetDB
_historicalBufferRequestStreams
SSVCADeviceSimplePreTriggerSilenceSampleCount
_hostTimeBuffer
SSVCADistanceModelConfidenceThreshold
_initWithFirstPassInfoGeneratedTime:firstPassInfoProcessedTime:
SSVCADistanceResultsBufferSize
_interleavedABL
SSVCADspCoefsCount
_isRemoteDevice
SSVCAExponentialDistanceHistoryDegradationFactor
_isSiriClientConsideredAsRecord
SSVCAListenPollingIntervalAtStartInSeconds
_isSpeechDetectionDevicePresent
SSVCAMaxTTSSystemVolume
_lastInputFeats
SSVCAMaximumLinearSoundLevel
_logLRNNFailMsg
SSVCAMinimumDistanceUpdateWaitPeriodSeconds
_needsBoost12dB
SSVCAMusicHistoricalSamplesInSeconds
_notifyObserver:isSpeakerMuted:
SSVCANoiseActivityCountThreshold
_notifyXPCDisconnectionToProxy:
SSVCANoiseActivityThreshold
_phoneCallState
SSVCASignalToSigmoidMusicDilationFactorDeviceDefault
_recordingToken
SSVCASignalToSigmoidMusicHOffsetDeviceDefault
_rtsTriggerInfo
SSVCASignalToSigmoidMusicSteepnessDeviceDefault
_secondPassAudioStreamStartTime
SSVCASignalToSigmoidMusicVOffsetDeviceDefault
_setLocalSpeechRecognizerState:
SSVCASignalToSigmoidMusicVSpreadDeviceDefault
_shadowMicScore
SSVCASignalToSigmoidNoiseDilationFactor
_shouldRunMitigationForContext:
SSVCASignalToSigmoidNoiseSteepness
_signalEstimate
SSVCASignalToSigmoidNoiseVSpread
_sourceStringFromPreheatSource:
SSVCASignalToSigmoidSpeechHOffset
_startStampleId
SSVCASignalToSigmoidSpeechVOffset
_stopMonitoring
SSVCASmartSiriVolumeSyncedMetricLogsToRetain
_streamHandleId
SSVCASpeakerDistanceFarBoostFactor
_turnIdentifier
SSVCASpeakerDistanceNearBoostFactor
_userIntentTime
SSVCAUserIntentPermanentOffsetFactorLowerBound
_volumeEstimate
SSVCAUserIntentValidForSeconds
activateAudioSessionWithReason:dynamicAttribute:bundleID:error:
SSVCAUserIntentVolumeIncreaseFactor
addAudioPacket:
SSVCAVoiceTriggerInitialSilenceDurationSeconds
alertPlaybackFinishTimeoutToken
SSVDefaultDistanceChannelCount
analyzedSamples
SSVDefaultNoiseChannelCount
applicationName
SSVEnergyBufferSize
asrNode
SSVLKFSLowerPercentile
audioChunkToEndFrom:channelIdx:
SSVLKFSTTSMappingInputRangeLow
audioFileWriter
SSVLKFSTimeConstant
audioStreamType
SSVNoiseLevelChannelBitset
baseDir
SSVNoiseMicSensitivityOffset
buildPhoneticMatchWithLanguage:saveIntermediateFsts:completion:
SSVNoiseTTSMappingInputRangeHigh
completionBlock
SSVNoiseTTSMappingOutputRangeLow
connectedDevice
SSVNoiseUpperPercentile
containsString:
SSVParameterDirectionary
SSVTTSVolumeUpperLimitDB
currentOEPAsset
SSVUserOffsetInputRangeLow
dataWithLength:
SSVUserOffsetOutputRangeLow
deviceIsInSleep
T@"<CSADCompanionServiceProvider>",W,N,V_adCompanionServiceProvider
enabled
T@"<CSAttSiriSessionStateDelegate>",R,W,N,V_delegate
T@"<CSAudioAlertProvidingDelegate>",W,N,V_alertDelegate
firstAudioSampleSensorTimestamp
T@"<CSAudioConverterDelegate>",W,V_delegate
firstPktLatency
T@"<CSAudioFileWriter>",&,N,V_leadingUtteranceLogger
getBTLocalDeviceWithCompletion:
T@"<CSAudioMeterProviding>",W,N,V_audioMeterProvider
getBytes:range:
T@"<CSAudioPreprocessorDelegate>",W,N,V_delegate
initForSidekick
T@"<CSAudioServerCrashEventProvidingDelegate>",W,N,V_crashEventDelegate
initWithFormat:
T@"<CSAudioSessionInfoProviding>",W,N,V_audioSessionInfoProvider
initWithMasterAudioStream:name:
T@"<CSAudioSessionProvidingDelegate>",W,N,V_audioSessionProvidingDelegate
initWithString:
T@"<CSAudioStreamProviding>",&,N,V_audioStreamProvider
injectionCompletionNotifyBlocks
T@"<CSAudioStreamProviding>",W,N,V_streamProvider
interpretations
T@"<CSAudioStreamProvidingDelegate>",W,N,V_delegate
isActiveSession
T@"<CSConnectionServiceDelegate>",W,N,V_delegate
isBluetoothAudioDeviceConnected
T@"<CSEndpointAnalyzerDelegate>",W,N,V_delegate
isFirstUnlocked
T@"<CSEndpointAnalyzerDelegate>",W,N,Vdelegate
isNarrowBandWithStreamHandleId:
T@"<CSEndpointAnalyzerImpl>",&,N,V_nnvadEndpointer
isProxy
T@"<CSEndpointAnalyzerImplDelegate>",W,N
isRecordContextHearstDoubleTap:
T@"<CSEndpointAnalyzerImplDelegate>",W,N,V_implDelegate
isRequestFromSpokenNotification
T@"<CSFlexKeywordSpotterDelegate>",W,N,Vdelegate
isUIButtonPress
T@"<CSOpportuneSpeakListenerDelegate>",W,N,V_delegate
kSSVCAUserIntentValidForSeconds
T@"<CSRemoteRecordClientDelegate>",W,N,V_delegate
keywordDetectorDidDetectKeyword
T@"<CSSecondPassProgressProviding>",W,N,V_builtInSeconPassProgressProvider
localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:
T@"<CSSmartSiriVolumeProcessor>",&,N,V_smartSiriVolume
lowercaseString
T@"<CSStateMachineDelegate>",W,N,V_delegate
metrics
T@"<CSVoiceTriggerAssetChangeDelegate>",W,N,V_delegate
mitigationModelDefaultAFTMScore
T@"<CSVoiceTriggerDelegate>",W,N,V_delegate
newWithBuilder:
T@"<CSXPCClientDelegate>",W,N,V_delegate
notifyObserver:
T@"AFNotifyObserver",&,N,V_siriStateObserver
numberWithBool:
T@"CESRXPCActivity",&,N,V_cesrXPCActvity
opaqueSessionID
T@"CSActivationEvent",&,N,V_pendingActivationEvent
osdNode
T@"CSAsset",&,N,V_asset
outputs
T@"CSAsset",&,N,V_currentHEPAsset
packets
T@"CSAsset",&,N,V_mitigationAsset
phrases
T@"CSAsset",&,N,V_vtAsset
preheat
T@"CSAssetManager",&,N,V_assetManager
protocolVersion
T@"CSAttSiriAsrNode",&,N,V_asrNode
registerPeriodicPreheatActivity
T@"CSAttSiriCachedEndpointInfo",&,N,V_cachedEndpointerInfo
rejectionMHUUID
T@"CSAttSiriController",&,N,V_attSiriController
remoteDeviceUID
T@"CSAttSiriController",W,N,V_attSiriController
removeReceiver:
T@"CSAttSiriEndpointerNode",W,N,SregisterEndpointerNode:,V_endpointerNode
reportMicUsage:
T@"CSAttSiriFlexKwdNode",&,N,V_flexKwdNode
T@"CSAttSiriNLDAClassifierNode",W,N,SregisterNLDAClassifierNode:,V_nldaClassifierNode
secondPassAssetLoadCompleteTime
T@"CSAttSiriOSDNode",W,N,SregisterOSDNode:,V_osdNode
sessionDelegate
T@"CSAttSiriRequestContext",&,N,V_context
setAccessibleEndpointerEnabled:
T@"CSAttSiriSSRNode",&,N,V_ssrNode
setAllowListWordCountThreshold:
T@"CSAttSiriSpeechDetectionNode",&,N,V_speechDetectionNode
setAlwaysOnVoiceTriggerEnabled:
T@"CSAttSiriUresNode",W,N,SregisterUresNode:,V_uresNode
setAudioBuffer:
T@"CSAudioAlertProvidingProxy",&,N,V_audioAlertProvidingProxy
setAudioStream:
T@"CSAudioCircularBuffer",&,N,V_circularBuffer
setBuiltInVoiceTriggerMetaData:
T@"CSAudioConverter",&,N,V_encoder
setCanActivate:
T@"CSAudioInjectionDevice",&,N,V_bundleTvRemote
setConnections:
T@"CSAudioInjectionEngine",&,N,V_audioInjectionEngine
setDidActivate:
T@"CSAudioInjectionEngine",W,N,V_injectionEngine
setEndWaitTime:
T@"CSAudioMeterProvidingProxy",&,N,V_audioMeterProvidingProxy
setFlexKwdNode:
T@"CSAudioProcessWaitingBuffer",&,N,V_audioWaitingBuffer
setInputOrigin:
T@"CSAudioRecordContext",&,N,V_context
setIsAttending:
T@"CSAudioRecordContext",&,N,V_latestContext
setIsListening:
T@"CSAudioRecordContext",&,N,V_recordCtx
setIsStreaming:
T@"CSAudioRecordDeviceIndicator",&,N,V_recordDeviceIndicator
setLocalDevice:
T@"CSAudioRecorder",&,N,V_audioRecorder
setNumChannels:
T@"CSAudioSampleRateConverter",&,N,V_upsampler
setOsdAnalyzer:
T@"CSAudioSessionProvidingProxy",&,N,V_audioSessionProvidingProxy
setPayloadData:
T@"CSAudioStartStreamOption",&,N,V_siriClientAudioStartStreamOption
setRecordQueue:
T@"CSAudioStream",&,N,V_siriClientStream
setSecondChanceHotTillMachTime:
T@"CSAudioStreamHolding",&,N,V_audioStreamHolding
setServerFeaturesWarmupLatency:
T@"CSAudioTapProvider",&,N,V_audioTapProvider
setSsrListener:
T@"CSAudioZeroCounter",&,N,V_zeroCounter
setStreamState:
T@"CSBeepCanceller",&,N,V_beepCanceller
setSupportsSSR:
T@"CSConnectionListener",&,N,V_attSiriSvcListener
setTransitions:
T@"CSConnectionListener",&,N,V_localSRBridgeListener
setUseCustomizedRecordSettings:
T@"CSConnectionListener",&,N,V_rcProcessingListener
setUserSpeakingStartedTimeInMs:
T@"CSCoreSpeechServicesListener",&,N,V_corespeechServiceListener
setXpcListener:
T@"CSEndpointDelayReporter",&,N,V_endpointDelayReporter
setupConnection
T@"CSEndpointerMetrics",&,N,V_endPointerMetrics
sharedUserInfos
T@"CSFallbackAudioSessionReleaseProvider",&,N,V_fallbackAudioSessionReleaseProvider
siriSessionUUID
T@"CSFirstUnlockMonitor",&,N,V_firstUnlockMonitor
splitterEnabled
T@"CSGibraltarVoiceTriggerHandler",&,N,V_gibraltarVoiceTriggerHandler
startMonitoring
T@"CSKeywordAnalyzerNDEAPI",&,N,V_keywordAnalyzer
stopAudioStream
T@"CSManualDuckingHandler",&,N,V_manualDuckingHandler
streams
T@"CSOSTransaction",&,N,V_asrResultDeliveryTransaction
stringByAppendingPathExtension:
T@"CSOSTransaction",&,N,V_osTransaction
supportRemoteDarwinVoiceTrigger
T@"CSOpportuneSpeakListnerTestService",&,N,V_opportuneSpeakListnerTestService
trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:
T@"CSPlainAudioFileWriter",&,N,V_audioFileWriter
T@"CSPreMyriadVoiceTriggerMetaData",&,N,V_builtInVoiceTriggerMetaData
updateEndpointerDelayedTrigger:
T@"CSSPGEndpointAnalyzer",&,N,V_spgEndpointAnalyzer
wakeGestureManager:didUpdateWakeGesture:orientation:detectedAt:
.cxx_construct
SSVCAHistoricalVolumeBufferSize
CSActivationXPCConnectionReceivedClientError:clientError:client:
SSVLKFSTTSMappingOutputRangeLow
CSAdBlockerMetaUpdateMonitor:didReceiveNewAdBlockerAssetMetaData:
T@"CSAsset",&,N
CSAlwaysOnProcessorStateMonitor:didReceiveStateChange:
T@"CSAudioMetricProvidingProxy",&,N,V_audioMetricProvidingProxy
CSAssetManagerDidDownloadNewAsset:
T@"CSLanguageCodeUpdateMonitor",&,N,V_languageCodeUpdateMonitor
CSAudioServerCrashMonitorDidReceiveServerCrash:
T@"CSSiriClientBehaviorMonitor",&,N,V_siriClientBehaviorMonitor
CSAutomaticVolumeEnabledMonitor:didReceiveEnabled:
T@"NSArray",&,N
CSBuiltinSpeakerStateMonitor:didReceiveBuiltinSpeakerStateChange:
T@"NSArray",R,N
CSFirstUnlockMonitor:didReceiveFirstUnlock:
T@"NSHashTable",&,N,V_receivers
CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:
T@"NSObject<OS_xpc_object>",R,N
CSNetworkAvailabilityMonitor:didReceiveNetworkAvailabilityChanged:
T@"NSString",R,C,N,V_deviceName
CSPhraseSpotterEnabledMonitor:didReceiveEnabled:
T@"NSString",R,N,V_buildVersion
CSSiriAssertionMonitor:didReceiveEnabled:
T@"NSUUID",&,N,V_recordingToken
CSSiriRestrictionOnLockScreenMonitor:didReceiveRestrictionChanged:
TB,N,V_cachedMitigationDecision
CSSpeakerRecognitionAssetDownloadMonitor:didInstallNewAsset:assetProviderType:
TB,N,V_didReceiveServerFeatures
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
TB,N,V_makeStandaloneMitigation
CSSystemUserActivityMonitor:activeStateChanged:
TB,N,V_requiresHistoricalBuffer
CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:
TQ,N,V_currentRequestSampleRate
CSVoiceTriggerEnabledMonitor:didReceiveEnabled:
TQ,N,V_lastForwardedSampleCount
CSVoiceTriggerXPCConnectionReceivedClientError:clientError:client:
Td,N,V_RMSScore
CSVoiceTriggerXPCServiceProxy:bypassRaiseToSpeak:
Tf,N,V_currentMaximumBufferSize
CSVolumeMonitor:didReceiveMusicVolumeChanged:
_allowAdBlockerAssetDownloading
CSXPCConnectionReceivedClientError:clientError:client:
_assertionState
RMSScore
_audioFeedTimer
SSVCAAnnouncementStatusFetchTimeoutMs
_audioSessionInfoProvidingProxy
SSVCADBToTTSMinimumOutput
_bundleTvRemote
SSVCADBToTTSPostTransitionMultiplier
_cesrXPCActvity
SSVCADBToTTSPreTransitionMultiplier
_circularBufferStartSampleCount
SSVCADecibelToLinearLogBase
_clearPendingRemoraVoiceTrigger
SSVCADefaultOutputTTSVolume
_convertDB2Mag:
SSVCADefaultZeroFloatingPointValue
_defaultOutASBD
SSVCADeviceDefaultMaxTTSVolume
_deviceCategory
SSVCADeviceDefaultMinTTSVolume
_digest
SSVCADeviceSimpleDBToSystemVolSlope
_endpointerNode
SSVCADeviceSimpleMaxTargetDB
_exportedObject
SSVCADeviceSimpleMinTTSVolume
SSVCADeviceSimpleOutputMaxTargetDB
_handleDeactivateAudioSessionRequestMessage:messageBody:client:
SSVCADeviceSimpleOutputSlope
_holdAttSiriTransactionIfNeeded
SSVCADistanceInputBufferDurationSeconds
_inASBD
SSVCADistanceResultSampleCountTolerance
_inputRecordingNumberOfChannels
SSVCADropInCallAnnouncementMinTTSVolume
_isHearstRouted
SSVCADspNumStages
_isSiri
SSVCALinearToDecibelConstantMultiplier
_isSpeakerMuted
SSVCAMaxFrameSize
_isTemporaryPairedNotInContacts
SSVCAMaximumCompensatedSpeechLevelNearField
_localSpeechRecognitionListener
SSVCAMinTTSSystemVolume
_mediaIsPlaying
SSVCAMinimumLinearSoundLevel
_noiseTTSMappingOutputRangeHigh
SSVCAMusicResultsBufferSize
_notifyObserver:withRestricted:
SSVCANoiseActivityHistoricalSampleCount
_numFalseWakeUp
SSVCANoiseResultsBufferSize
_processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:
SSVCASignalToSigmoidMusicDilationFactorDeviceSimple
_reqSrc
SSVCASignalToSigmoidMusicHOffsetDeviceSimple
_secondPassAudioStreamReadyTime
SSVCASignalToSigmoidMusicSteepnessDeviceSimple
_sendReply:client:result:error:
SSVCASignalToSigmoidMusicVOffsetDeviceSimple
_setupSpeakerRecognitionForProfiles:WithVTEventInfo:WithLocale:
SSVCASignalToSigmoidMusicVSpreadDeviceSimple
_shouldCheckNetworkAvailability
SSVCASignalToSigmoidNoiseHOffset
_shouldStopProcessASROnEndpoint
SSVCASignalToSigmoidNoiseVOffset
_source
SSVCASignalToSigmoidSpeechDilationFactor
_startObservingAudioRouteChange
SSVCASignalToSigmoidSpeechSteepness
_stateToString:
SSVCASignalToSigmoidSpeechVSpread
_stopProcessing
SSVCASmartSiriVolumeUnsyncedMetricLogsToRetain
_streamProvider
SSVCASpeakerDistanceMidBoostFactor
_updateAssetWithCurrentLanguage
SSVCAUserIntentPermanentOffsetFactorDelta
_userIntentType
SSVCAUserIntentPermanentOffsetFactorUpperBound
_xpcClientQueue
SSVCAUserIntentVolumeDecreaseFactor
activateEndTime
SSVCAVoiceTriggerBasedTTSValidForSeconds
address
SSVCAVolumeHalfLifeSeconds
allKeys
SSVDefaultLKFSChannelCount
apQueue
SSVDistanceChannelBitset
arrayWithArray:
SSVLKFSChannelBitset
assetQueryQueue
SSVLKFSMicSensitivityOffset
audioDeviceInfo
SSVLKFSTTSMappingOutputRangeHigh
audioProviderWithContext:error:
SSVLKFSUpperPercentile
base64EncodedStringWithOptions:
SSVNoiseLowerPercentile
bestEnd
SSVNoiseMicSensitivityOffsetDeviceSimple
clientSilenceFeaturesAvailable:
SSVNoiseTTSMappingOutputRangeHigh
connect
SSVNoiseTimeConstant
containsObject:
SSVNoiseWeight
context
SSVTTSVolumeLowerLimitDB
currentHEPAsset
SSVUserOffsetInputRangeHigh
dataForChannel:
SSVUserOffsetOutputRangeHigh
dealloc
T#,R
didDetectSpeech
T@"<CSActivateXPCConnectionDelegate>",W,N,V_delegate
encoder
T@"<CSAudioAlertProviding>",W,N,V_audioAlertProvider
endTime
T@"<CSAudioAlertProvidingDelegate>",W,N,V_audioAlertProvidingDelegate
firstPassSource
T@"<CSAudioFileReaderDelegate>",W,N,V_delegate
frameDurationMs
T@"<CSAudioInjectionEngineDelegate>",W,N,V_delegate
getBoolForKey:category:default:
T@"<CSAudioMetricProviding>",W,N,V_audioMetricProvider
hearstConnected
T@"<CSAudioProviderDelegate>",W,N,V_providerDelegate
initWithDouble:
T@"<CSAudioSessionEventProvidingDelegate>",W,N,V_sessionEventDelegate
initWithLength:
T@"<CSAudioSessionProviding>",&,N,V_audioSessionProvider
initWithSamplingRate:withAsset:
T@"<CSAudioSessionProvidingDelegate>",W,N,V_sessionDelegate
injectAudio:withScaleFactor:outASBD:playbackStarted:completion:
T@"<CSAudioStreamProviding>",W,N,SsetAudioStreamProvidingForProxy:,V_audioStreamProviding
injectionEngine
T@"<CSAudioStreamProvidingDelegate>",W,N,V_audioStreamProvidingDelegate
isActiveRequest
T@"<CSBiometricMatchMonitorDelegate>",W,N,V_delegate
isAlwaysOnVoiceTriggerAvailable
T@"<CSEndpointAnalyzerDelegate>",W,N
isFinal
T@"<CSEndpointAnalyzerDelegate>",W,N,V_endpointerDelegate
isNNVAD
T@"<CSEndpointAnalyzerImpl>",&,N,V_hybridEndpointer
isPluginContext
T@"<CSEndpointAnalyzerImpl>",W,N,V_activeEndpointer
isReady
T@"<CSEndpointAnalyzerImplDelegate>",W,N,V_endpointerImplDelegate
isRecordContextHomeButtonPress:
T@"<CSEndpointAnalyzerImplDelegate>",W,N,VimplDelegate
isSoftwareUpdateCheckingRunning
T@"<CSMyriadSelfTriggerCoordinatorDelegate>",W,N,V_delegate
jarvisConnected
T@"<CSPhraseNDEAPIScorerDelegate>",W,N,V_delegate
keywordAnalyzer
T@"<CSSPGEndpointAnalyzerDelegate>",W,N,V_delegate
lastSampleCount
T@"<CSSecondPassProgressProviding>",W,N,V_remoraSecondPassProgressProvider
localSpeechRecognizerTaskString
T@"<CSSpeechManagerDelegate>",W,N,V_clientController
machServiceName
T@"<CSTriggerInfoProviding>",W,N,V_triggerInfoProviding
mitigationAsset
T@"<CSVoiceTriggerAwareZeroFilterDelegate>",W,N,V_delegate
monitor
T@"<CSVoiceTriggerXPCConnectionDelegate>",W,N,V_delegate
nnvadEndpointer
T@"<CSXPCConnectionDelegate>",W,N,V_delegate
numOfValidTrailingSpeechPackets
T@"AVVoiceTriggerClient",&,N,V_alwaysOnProcessorController
numberWithLong:
T@"CSADPPreventStandbyAssertion",&,N,V_adpAssertion
osdMode
T@"CSActivationXPCListener",&,N,V_activationXpcListener
outASBD
T@"CSAsset",&,N,V_currentAsset
overrideEnabled
T@"CSAsset",&,N,V_currentOEPAsset
pendingRemoraVoiceTriggerResult
T@"CSAsset",&,N,V_prefetchedAsset
prefetchedAsset
T@"CSAsset",&,V_cachedAsset
prevStageOutput
T@"CSAttSiriAFTMNode",&,N,V_aFTMNode
recordEventUUID
T@"CSAttSiriAudioSrcNode",&,N,V_audioSrcNode
registerPostBuildInstallService
T@"CSAttSiriConnectionManager",&,N,V_attSiriConnectionManager
release
T@"CSAttSiriController",W,N
removeObserver:
T@"CSAttSiriEndpointerNode",&,N,V_endpointerNode
reportMHEndpointerAccessibleContextEventWithThresholdType:MhId:
T@"CSAttSiriEndpointerNode",W,N,V_endpointerNode
results
T@"CSAttSiriNLDAClassifierNode",&,N,V_nldaClassifierNode
runRecognitionWithResultStream:
T@"CSAttSiriOSDNode",&,N,V_osdNode
selectedChannel
T@"CSAttSiriRCHandler",&,N,V_rcHandler
T@"CSAttSiriRequestContext",C,N,V_ctx
setAccessoryId:
T@"CSAttSiriSSRNode",W,N,SregisterSSRNode:,V_ssrNode
setAlwaysOnProcessorController:
T@"CSAttSiriUresNode",&,N,V_uresNode
setAudioAlertProvidingDelegate:
T@"CSAttSiriUresNode",W,N,V_uresNode
setAudioFormat:
T@"CSAudioCircularBuffer",&,N,V_audioLoggingBuffer
setBuiltInAudioInjectionEngine:
T@"CSAudioCircularBuffer",R,N,V_circularBuffer
setCachedAsset:
T@"CSAudioInjectionDevice",&,N,V_builtInDevice
setCircularBufferStartHostTime:
T@"CSAudioInjectionDevice",W,N,V_connectedDevice
setCtx:
T@"CSAudioInjectionEngine",&,N,V_builtInAudioInjectionEngine
setDidAddAudio:
T@"CSAudioInjectionFileOption",&,N,V_fileOption
setFirstSpeechFrameAudioTsInMs:
T@"CSAudioPreprocessor",&,N,V_audioPreprocessor
setHasReported:
T@"CSAudioRecordContext",&,N,V_audioRecordContext
setIsAttachingBluetoothSession:
T@"CSAudioRecordContext",&,N,V_lastAudioRecorderContext
setIsConnected:
T@"CSAudioRecordContext",&,N,V_recordContext
setIsRecording:
T@"CSAudioRecordContext",R,N,V_recordContext
setLastEndpointEagerResultTime:
T@"CSAudioRecordDeviceInfo",R,C,N,V_recordDeviceInfo
setLpcmIsFloat:
T@"CSAudioRouteChangeMonitor",&,N,V_audioRouteChangeMonitor
setOpportuneSpeakListeningType:
T@"CSAudioSessionInfoProvidingProxy",&,N,V_audioSessionInfoProvidingProxy
setPauseCounts:
T@"CSAudioStartStreamOption",&,N,SsetStartStreamOption:,V_startStreamOption
setPresetLocalSpeechRecognizer:
T@"CSAudioStream",&,N,V_audioStream
setScaleFactor:
T@"CSAudioStream",W,N,V_primaryStream
setSelfTriggerEnabledAccessory:
T@"CSAudioStreamRequest",&,N,V_streamRequest
setServerState:
T@"CSAudioTimeConverter",&,N,V_audioTimeConverter
setStartRecordingWatchDogToken:
T@"CSAudioZeroFilter",&,N,V_zeroFilter
setSupportDoAP:
T@"CSBenchmarkXPCListener",&,N,V_benchmarkXpcListener
setTargetQueue:
T@"CSConnectionListener",&,N,V_endpointerListener
setTriggerMode:
T@"CSConnectionListener",&,N,V_localSpeechRecognitionListener
setUserSpeakingStartedHostTime:
T@"CSConnectionListener",&,N,V_ssrListener
setWithObjects:
T@"CSDarwinVoiceTriggerHandlerPool",&,N,V_darwinVoiceTriggerHandlerPool
setZeroCounter:
T@"CSEndpointLatencyInfo",&,N,V_endpointLatencyInfo
sharedAnalytics
T@"CSEndpointerProxy",&,N,V_proxy
siriInputSource
T@"CSFallbackAudioSessionReleaseProvidingProxy",&,N,V_fallbackAudioSessionProvidingProxy
smartSiriVolume
T@"CSFlexKeywordSpotter",&,N,V_kwdSpotter
ssrNode
T@"CSKeywordAnalyzerNDAPI",&,N,V_keywordAnalyzer
startWithContext:audioStreamId:
T@"CSKeywordAnalyzerNDEAPI",&,N,V_keywordAnalyzerNDEAPI
stopWithReason:
T@"CSMicUsageReporter",&,N,V_micUsageReporter
stringByAppendingPathComponent:
T@"CSOSTransaction",&,N,V_attSiriTransaction
stringFromDate:
T@"CSOSTransaction",&,N,V_recordingTransaction
timeStampString
T@"CSPhoneCallStateMonitor",&,N,V_phoneCallStateMonitor
triggerMachTime
T@"CSPostBuildInstallService",&,N,V_postBuildInstallService
updateDeviceId:
T@"CSPreventSystemSleepPowerAssertion",&,N,V_preventSystemSleepPowerAssertion
vtAsset
T@"CSServerEndpointFeatures",&,N,V_lastKnownServerEPFeatures
T@"CSShadowMicScoreCreator",&,N,V_shadowMicScoreCreator
T@"CSSiriAssertionMonitor",&,N,V_assertionMonitor
T@"CSSiriEnabledMonitor",&,N,V_siriEnabledMonitor
T@"CSSmartSiriVolumeManager",&,N,V_ssvManager
T@"CSSpeechManager",&,N,V_speechManager
T@"CSSpeechModelTrainingXPCManager",&,N,V_speechModelTrainingXpcManager
T@"CSSyncKeywordAnalyzerQuasar",&,N,V_vtSecondPassAnalyzer
T@"CSTrialAssetDownloadMonitor",&,N,V_monitor
T@"CSTrialAssetDownloadMonitor",&,N,V_trialAssetMonitor
T@"CSTrialAssetDownloadMonitor",&,N,V_trialDownloadMonitor
T@"CSTrialAssetManager",&,N,V_trialAssetManager
T@"CSVoiceIdXPCListener",&,N,V_voiceIdXpcListener
T@"CSVoiceTriggerAssetDownloadMonitor",&,N,V_voiceTriggerAssetDownloadMonitor
T@"CSVoiceTriggerAwareZeroFilter",&,N,V_zeroFilter
T@"CSVoiceTriggerFirstPassMetrics",R,N,V_firstpassMetrics
T@"CSVoiceTriggerXPCListener",&,N,V_voiceTriggerXpcListener
T@"CSXPCActivity",&,N,V_csXPCActivity
T@"CSXPCConnection",W,N,V_xpcConnection
T@"CSXPCListener",&,N,V_xpcListener
T@"CoreEmbeddedSpeechRecognizer",&,N,V_interactiveLocalSpeechRecognizer
T@"CoreEmbeddedSpeechRecognizer",&,N,V_presetLocalSpeechRecognizer
T@"EARCaesuraSilencePosteriorGenerator",&,N,V_caesuraSPG
T@"EARSyncPSRAudioProcessor",&,N,V_psrAudioProcessor
T@"LBLocalSpeechRecognitionSettings",&,N,V_speechRecognitionSettings
T@"NSArray",&,N,V_allowVocabList
T@"NSArray",&,N,V_connectedDeviceAddresses
T@"NSArray",&,N,V_featuresAtEndpoint
T@"NSArray",&,N,V_lastEndpointHintFeatures
T@"NSArray",&,N,V_pairedDeviceAddresses
T@"NSArray",&,N,V_ssrAssets
T@"NSArray",&,N,V_supportedInputOrigins
T@"NSArray",&,N,V_thresholds
T@"NSArray",C,N,V_pauseCounts
T@"NSArray",R,C,N,V_playbackDeviceTypeList
T@"NSData",&,N,V_payloadData
T@"NSData",C
T@"NSData",R,N,V_certificate
T@"NSData",R,N,V_digest
T@"NSData",R,N,V_modelData
T@"NSData",R,N,V_signature
T@"NSDate",&,N,V_firstAudioPacketTimestamp
T@"NSDate",&,N,V_lastServerFeatureTimestamp
T@"NSDictionary",&,N,V_additionalMetrics
T@"NSDictionary",&,N,V_asrDatapackInstallationStatus
T@"NSDictionary",&,N,V_csAssetsDictionary
T@"NSDictionary",&,N,V_pendingBuiltInVoiceTriggerResult
T@"NSDictionary",&,N,V_pendingRemoraVoiceTriggerResult
T@"NSDictionary",&,N,V_serverFeatureLatencyDistribution
T@"NSDictionary",&,N,V_speakerRecognitionScores
T@"NSDictionary",&,N,V_taskThresholdMap
T@"NSDictionary",&,N,V_thresholdsMap
T@"NSDictionary",&,N,V_voiceTriggerEventInfo
T@"NSDictionary",C,N,V_rtsTriggerInfo
T@"NSDictionary",R,N
T@"NSDictionary",R,N,V_activationInfo
T@"NSDictionary",R,N,V_firstPassTriggerInfo
T@"NSHashTable",&,N,V_alertPlaybackFinishWaitingStreams
T@"NSHashTable",&,N,V_audioSessionInfoObservers
T@"NSHashTable",&,N,V_historicalBufferRequestStreams
T@"NSHashTable",&,N,V_startPendingOnStoppingStreams
T@"NSHashTable",&,N,V_startPendingStreams
T@"NSHashTable",&,N,V_stopPendingStreams
T@"NSHashTable",&,N,V_streams
T@"NSHashTable",R,N,V_tandemStreams
T@"NSMapTable",&,N,V_delegates
T@"NSMutableArray",&,N,V_alertPlaybackFinishWaitingCompletions
T@"NSMutableArray",&,N,V_clientConnections
T@"NSMutableArray",&,N,V_connectedDevices
T@"NSMutableArray",&,N,V_connections
T@"NSMutableArray",&,N,V_hostTimeBuffer
T@"NSMutableArray",&,N,V_injectionAudioFileList
T@"NSMutableArray",&,N,V_injectionCompletionNotifyBlocks
T@"NSMutableArray",&,N,V_injectionStartNotifyBlocks
T@"NSMutableArray",&,N,V_pendingStartCompletions
T@"NSMutableArray",&,N,V_pendingStopCompletions
T@"NSMutableArray",&,N,V_remoteVADAlignBuffer
T@"NSMutableArray",&,N,V_rmsSamplesForEntireAudio
T@"NSMutableArray",&,N,V_serverFeatureLatencies
T@"NSMutableArray",&,N,V_streamHolders
T@"NSMutableArray",&,N,V_trailingPktLatencies
T@"NSMutableArray",&,N,V_trailingPktSpeechLatencies
T@"NSMutableData",&,N,V_audioBuffer
T@"NSMutableData",&,N,V_dataBufferNDEAPI
T@"NSMutableDictionary",&,N,V_accessoryVoiceTriggerMetaDataByDeviceId
T@"NSMutableDictionary",&,N,V_audioInjectionEngines
T@"NSMutableDictionary",&,N,V_audioProviders
T@"NSMutableDictionary",&,N,V_cachedScoresForLogging
T@"NSMutableDictionary",&,N,V_decodersForTV
T@"NSMutableDictionary",&,N,V_eventToStateTransitions
T@"NSMutableDictionary",&,N,V_falseWakePhraseDictionary
T@"NSMutableDictionary",&,N,V_inUseServices
T@"NSMutableDictionary",&,N,V_mitigationDecisions
T@"NSMutableDictionary",&,N,V_observers
T@"NSMutableDictionary",&,N,V_startPendingOnStoppingStreamToCompletionDict
T@"NSMutableDictionary",&,N,V_transitions
T@"NSMutableDictionary",&,V_cachedEndpointAssets
T@"NSMutableDictionary",R,N,V_shouldResetAdsDictionary
T@"NSMutableSet",&,N,V_activationAssertions
T@"NSMutableSet",&,N,V_remoteAccessoryStreamIdSet
T@"NSNumber",R,N,V_firstPassInfoGeneratedTime
T@"NSNumber",R,N,V_firstPassInfoProcessedTime
T@"NSObject<OS_dispatch_group>",&,N,V_bluetoothSessionSetupGroup
T@"NSObject<OS_dispatch_group>",&,N,V_recordingWillStartGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_alignBufferQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_apQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetQueryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetsMigrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_endpointLatencyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hybridClassifierQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_localSpeechRecognizerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_loggingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_modelExeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_osdQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serverFeaturesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionInfoQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_streamHandleQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_targetQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_voiceControllerCreationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_xpcClientQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_xpcReplyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_targetQueue
T@"NSObject<OS_dispatch_source>",&,N,V_audioFeedTimer
T@"NSObject<OS_dispatch_source>",&,N,V_audioPacketWatchdog
T@"NSObject<OS_dispatch_source>",&,N,V_clearLoggingFileTimer
T@"NSObject<OS_dispatch_source>",&,N,V_listenPollingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_signalSource
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@"NSObject<OS_xpc_object>",&,N,V_connection
T@"NSObject<OS_xpc_object>",&,N,V_listener
T@"NSObject<OS_xpc_object>",&,N,V_xpcConnection
T@"NSSet",&,N,V_sharedUserIdsSet
T@"NSString",&,N
T@"NSString",&,N,V_accessoryId
T@"NSString",&,N,V_atvRemoteDeviceID
T@"NSString",&,N,V_audioProviderUUID
T@"NSString",&,N,V_configFile
T@"NSString",&,N,V_detectedToken
T@"NSString",&,N,V_deviceId
T@"NSString",&,N,V_endpointerModelVersion
T@"NSString",&,N,V_language
T@"NSString",&,N,V_lastCommunicatedPeer
T@"NSString",&,N,V_leadingUtteranceAudioFile
T@"NSString",&,N,V_localSpeechRecognizerTaskString
T@"NSString",&,N,V_machServiceName
T@"NSString",&,N,V_mhId
T@"NSString",&,N,V_name
T@"NSString",&,N,V_pendingRecordingStopUUID
T@"NSString",&,N,V_pendingRemoraVoiceTriggerDeviceId
T@"NSString",&,N,V_recordEventUUID
T@"NSString",&,N,V_requestId
T@"NSString",&,N,V_requestMHUUID
T@"NSString",&,N,V_siriSessionUUID
T@"NSString",&,N,V_taskName
T@"NSString",&,N,V_voiceIdentificationBatchId
T@"NSString",&,N,V_voiceTriggerBatchId
T@"NSString",&,N,VmhId
T@"NSString",C,N,V_address
T@"NSString",C,N,V_deviceId
T@"NSString",C,N,V_taskName
T@"NSString",N,V_configFile
T@"NSString",R,C
T@"NSString",R,C,N,V_destination
T@"NSString",R,C,N,V_playbackRoute
T@"NSString",R,C,N,V_remoteDeviceProductIdentifier
T@"NSString",R,C,N,V_remoteDeviceUIDString
T@"NSString",R,C,N,V_route
T@"NSString",R,C,N,V_source
T@"NSString",R,C,N,V_uid
T@"NSString",R,N
T@"NSString",R,N,V_UUID
T@"NSString",R,N,V_audioProviderUUID
T@"NSString",R,N,V_bestToken
T@"NSString",R,N,V_deviceID
T@"NSString",R,N,V_deviceId
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_deviceProductType
T@"NSString",R,N,V_deviceProductVersion
T@"NSString",R,N,V_modelHash
T@"NSString",R,N,V_modelLocale
T@"NSString",R,N,V_productIdentifier
T@"NSString",R,N,V_siriSessionUUID
T@"NSURL",R,N,V_audioURL
T@"NSUUID",&,N,V_alertPlaybackFinishTimeoutToken
T@"NSUUID",&,N,V_startRecordingWatchDogToken
T@"NSUUID",&,N,V_stopRecordingWatchDogToken
T@"NSUUID",&,N,V_token
T@"NSUUID",&,N,V_uuid
T@"NSUUID",&,V_streamingUUID
T@"NSUUID",R,C,N,V_remoteDeviceUID
T@"NSUUID",R,N,V_deviceUID
T@"NSUUID",R,N,V_rejectionMHUUID
T@"NSXPCListener",&,N,V_servicesListener
T@"OSDAnalyzer",&,N,V_osdAnalyzer
T@"OSDFeatures",&,N,V_lastKnownOSDFeatures
T@"OSDFeatures",&,N,V_osdFeaturesAtEndpoint
T@"SLBertClassifier",&,N,V_bertModel
T@"SLBertClassifier",&,N,V_odldModelAnalyzer
T@"SLBertClassifierResult",&,N,V_cachedResult
T@"SLODLDProcessor",&,N,V_odldProcessor
T@"SLProgressiveCheckerAnalyzer",&,N,V_acousticAnalyzer
T@"SLProgressiveCheckerResult",&,N,V_latestResult
T@"SLUresMitigator",&,N,V_mitigator
T@"SLUresMitigatorIpFeats",&,N,V_lastInputFeats
T@"SSRSpeakerRecognitionController",&,N,V_ssrController
T@"SSRVoiceProfile",&,N,V_ccProfile
T@"SSRVoiceProfileManager",&,N,V_voiceProfileManager
T@"_EAREndpointer",&,N,V_hybridClassifier
T@"_EARSpeechRecognitionAudioBuffer",&,N,V_recognizerBuffer
T@"_EARSpeechRecognizer",&,N,V_recognizer
T@?,C,N,V_completion
T@?,C,N,V_completionBlock
T@?,C,N,V_pendingBuiltInVoiceTriggerCompletionBlk
T@?,C,N,V_pendingCompletion
T@?,C,N,V_pendingRemoraVoiceTriggerCompletionBlk
TB,N
TB,N,SsetScheduledFutureSample:,V_scheduledFutureSample
TB,N,V_accessibleEndpointerEnabled
TB,N,V_allowAdBlockerAssetDownloading
TB,N,V_allowEndpointAssetDownloading
TB,N,V_allowLanguageDetectorAssetDownloading
TB,N,V_allowSpeakerRecognitionAssetDownloading
TB,N,V_allowVoiceTriggerAccessoryAssetDownloading
TB,N,V_allowVoiceTriggerAssetDownloading
TB,N,V_audioSystemRecovering
TB,N,V_canActivate
TB,N,V_currentSessionShouldDuckOnBuiltInSpeaker
TB,N,V_didActivate
TB,N,V_didAddAudio
TB,N,V_didCommunicateEndpoint
TB,N,V_didDetectSpeech
TB,N,V_didDetectedEndpoint
TB,N,V_didReportEndpointDelay
TB,N,V_didSetScaleFactor
TB,N,V_didTimestampFirstAudioPacket
TB,N,V_didTrigger
TB,N,V_disableBoostForDoAP
TB,N,V_disableEndpointer
TB,N,V_disableLocalSpeechRecognizer
TB,N,V_disablePrewarmLocalAsrAtStartRecording
TB,N,V_enableAlwaysOnVoiceTrigger
TB,N,V_enabled
TB,N,V_hasReceivedNDEAPIResult
TB,N,V_hasReported
TB,N,V_isASRFeatureFromServer
TB,N,V_isActiveRequest
TB,N,V_isActiveSession
TB,N,V_isAnalyzeMode
TB,N,V_isAnchorTimeBuffered
TB,N,V_isAttachingBluetoothSession
TB,N,V_isAttending
TB,N,V_isConnected
TB,N,V_isFileLoggingEnabled
TB,N,V_isForwarding
TB,N,V_isHearstRouted
TB,N,V_isListenPollingStarting
TB,N,V_isListening
TB,N,V_isNNVAD
TB,N,V_isOpportuneSpeakListening
TB,N,V_isPhraseSpotterBypassed
TB,N,V_isRaiseToSpeakBypassed
TB,N,V_isReady
TB,N,V_isRecording
TB,N,V_isRequestTimeout
TB,N,V_isSecondPassRunning
TB,N,V_isShadowModeEnabled
TB,N,V_isSiri
TB,N,V_isSiriClientConsideredAsRecord
TB,N,V_isSpeakerMuted
TB,N,V_isSpeaking
TB,N,V_isStreaming
TB,N,V_isTemporaryPairedNotInContacts
TB,N,V_isWeakStream
TB,N,V_lpcmIsFloat
TB,N,V_needsBoost12dB
TB,N,V_overrideEnabled
TB,N,V_recordingDidStop
TB,N,V_requestHistoricalAudioDataSampleCount
TB,N,V_requestHistoricalAudioDataWithHostTime
TB,N,V_requireSingleChannelLookup
TB,N,V_saveSamplesSeenInReset
TB,N,V_sessionInProgress
TB,N,V_shouldCleanupVoiceProfile
TB,N,V_shouldProcessAudio
TB,N,V_shouldStopProcessASROnEndpoint
TB,N,V_shouldUpdateMitigationResult
TB,N,V_skipAlertBehavior
TB,N,V_speechEndpointDetected
TB,N,V_speechHasAcceptedResultCandidate
TB,N,V_splitterEnabled
TB,N,V_supportDoAP
TB,N,V_supportsSSR
TB,N,V_supportsSpeechRecognitionOnDevice
TB,N,V_useCustomizedRecordSettings
TB,N,V_useDefaultServerFeaturesOnClientLag
TB,N,V_useLegacyPath
TB,N,V_useOpportunisticZLL
TB,N,V_voiceTriggerEnabled
TB,N,V_waitingForAlertFinish
TB,R
TB,R,N
TB,R,N,V_disableEndpointer
TB,R,N,V_isBluetooth
TB,R,N,V_isRemoteDevice
TB,R,N,V_isSecondChanceRun
TB,R,N,V_shouldUseRemoteRecorder
TB,R,N,VcanProcessCurrentRequest
TB,V_isMediaPlayingNow
TB,V_streaming
TC,N,V_hasReceivedEarlyDetectNDEAPIResult
TC,N,V_signalFractional
TI,N,V_activeChannel
TI,N,V_encoderBitRate
TI,N,V_inputRecordingNumberOfChannels
TI,N,V_lpcmBitDepth
TI,N,V_numberOfChannels
TI,N,V_selectedChannel
TI,R,N
TQ,N
TQ,N,GgetAudioSessionState,V_audioSessionState
TQ,N,V_activateEndTime
TQ,N,V_activateStartTime
TQ,N,V_activeChannel
TQ,N,V_allFramesInferenceLatency
TQ,N,V_allowListWordCountThreshold
TQ,N,V_anchorMachAbsTime
TQ,N,V_attendingState
TQ,N,V_audioSampleCountToSkip
TQ,N,V_audioStreamHandleId
TQ,N,V_audioStreamId
TQ,N,V_bestEarlyDetectSample
TQ,N,V_bestEndDetectSample
TQ,N,V_bestStartDetectSample
TQ,N,V_builtInSpeakerState
TQ,N,V_circularBufferStartHostTime
TQ,N,V_circularBufferStartSampleCount
TQ,N,V_clientType
TQ,N,V_countOfConsecutiveBoron
TQ,N,V_deactivateEndTime
TQ,N,V_deactivateStartTime
TQ,N,V_decoderProcessedSampleCountForTV
TQ,N,V_dismissalTimestamp
TQ,N,V_eagerResultId
TQ,N,V_endpointBufferHostTime
TQ,N,V_estimatedStartHostTime
TQ,N,V_extraDelayFrequency
TQ,N,V_firstAudioStartSampleCount
TQ,N,V_firstPartialResultTime
TQ,N,V_lastAggTimeFalseWakeUp
TQ,N,V_lastDetectedVoiceTriggerBeginSampleCount
TQ,N,V_lastEndpointEagerResultTime
TQ,N,V_lastKnownConsecutiveBoronStartSampleCount
TQ,N,V_lastSampleCount
TQ,N,V_latestPluginStreamId
TQ,N,V_localSpeechRecognizerState
TQ,N,V_numFalseWakeUp
TQ,N,V_numOfAudioPackets
TQ,N,V_numOfChunksReceived
TQ,N,V_numOfConsecutiveBoronActivationThreshold
TQ,N,V_numOfValidTrailingPackets
TQ,N,V_numOfValidTrailingSpeechPackets
TQ,N,V_numSamplesProcessed
TQ,N,V_numSamplesProcessedBeforeAnchorTime
TQ,N,V_numberOfVoicingFrames
TQ,N,V_opportuneSpeakListeningType
TQ,N,V_osdMode
TQ,N,V_pendingBuiltInVoiceTriggerDetectedTime
TQ,N,V_pendingRemoraVoiceTriggerDetectedTime
TQ,N,V_phoneCallState
TQ,N,V_recordingStartTime
TQ,N,V_remoteVADAlignCount
TQ,N,V_reqSrc
TQ,N,V_runningSampleCount
TQ,N,V_secondChanceHotTillMachTime
TQ,N,V_secondPassAssetLoadCompleteTime
TQ,N,V_secondPassAssetLoadStartTime
TQ,N,V_secondPassAssetQueryCompleteTime
TQ,N,V_secondPassAssetQueryStartTime
TQ,N,V_secondPassAudioStreamReadyTime
TQ,N,V_secondPassAudioStreamStartTime
TQ,N,V_secondPassCheckerModelKeywordDetectionEndTime
TQ,N,V_secondPassCheckerModelKeywordDetectionStartTime
TQ,N,V_secondPassFirstAudioPacketReceptionTime
TQ,N,V_secondPassLastAudioPacketReceptionTime
TQ,N,V_serverState
TQ,N,V_startDetectionTime
TQ,N,V_startRecordingHostTime
TQ,N,V_startRecordingSampleCount
TQ,N,V_stopRecordingHostTime
TQ,N,V_streamClientType
TQ,N,V_streamState
TQ,N,V_supportedRecordType
TQ,N,V_triggerAbsStartSampleId
TQ,N,V_triggerMachTime
TQ,N,V_triggerNotifiedMachTime
TQ,N,V_userIntentType
TQ,N,V_userIntentValidForSeconds
TQ,N,V_userSpeakingEndedHostTime
TQ,N,V_userSpeakingStartedHostTime
TQ,N,V_voiceTriggerSampleCount
TQ,N,V_vtEndInSampleCount
TQ,N,V_wakeGestureTimestamp
TQ,N,V_xpcClientType
TQ,N,VactiveChannel
TQ,R
TQ,R,N
TQ,R,N,V_audioStreamHandleId
TQ,R,N,V_deviceCategory
TQ,R,N,V_firstPassSource
TQ,R,N,V_hosttime
TQ,R,N,V_lastForwardedSampleCount
TQ,R,N,V_numOfAVVCRecordingClients
TQ,R,N,V_protocolVersion
TQ,R,N,V_startSampleCount
TQ,R,N,V_streamHandleId
TQ,R,N,V_type
T^{AudioBufferList=I[1{AudioBuffer=II^v}]},N,V_pNonInterleavedABL
T^{BTLocalDeviceImpl=},N,V_localDevice
T^{BTSessionImpl=},N,V_bluetoothSession
T^{OpaqueAudioConverter=},N,V_deinterleaver
T^{OpaqueExtAudioFile=},N,V_fFile
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},N,V_fp
Td,N
Td,N,V_automaticEndpointingSuspensionEndTime
Td,N,V_bufferDuration
Td,N,V_clampedSFLatencyMsForClientLag
Td,N,V_clientLagThresholdMs
Td,N,V_delay
Td,N,V_detectedEndpointTime
Td,N,V_elapsedTimeWithNoSpeech
Td,N,V_endWaitTime
Td,N,V_endpointStartTimeInSec
Td,N,V_endpointTime
Td,N,V_endpointTimeInMs
Td,N,V_eosLikelihood
Td,N,V_firstAudioSampleSensorTimestamp
Td,N,V_firstPktLatency
Td,N,V_firstSpeechFrameAudioTsInMs
Td,N,V_firstWordDuration
Td,N,V_frameDurationMs
Td,N,V_hepAudioOriginInMs
Td,N,V_interspeechWaitTime
Td,N,V_lastKnowServerFeaturesLatency
Td,N,V_lastReportedEndpointTimeMs
Td,N,V_lastSilencePosterior
Td,N,V_leadingSilenceDuration
Td,N,V_localSpeechRecognizerDeliverAudioDuration
Td,N,V_minimumDurationForEndpointer
Td,N,V_processedAudioInSeconds
Td,N,V_sampleRate
Td,N,V_serverFeaturesWarmupLatency
Td,N,V_shadowMicScore
Td,N,V_silencePosterior
Td,N,V_speechVoiceLevel
Td,N,V_startWaitTime
Td,N,V_totalAudioRecorded
Td,N,V_trailingSilenceDurationAtEndpoint
Td,N,V_userSpeakingEndedTimeInMs
Td,N,V_userSpeakingStartedTimeInMs
Td,N,V_vtExtraAudioAtStartInMs
Td,N,VautomaticEndpointingSuspensionEndTime
Td,N,Vdelay
Td,N,VminimumDurationForEndpointer
Td,N,VstartWaitTime
Td,R,N
Td,R,N,V_assertionTimeoutInterval
Td,R,N,V_droppedPrediction
Td,R,N,V_droppingPrediction
Td,R,N,V_timestamp
Td,R,N,VlastEndOfVoiceActivityTime
Td,R,N,VlastStartOfVoiceActivityTime
Tf,N,V_didStartDelayInSeconds
Tf,N,V_endpointThreshold
Tf,N,V_firstPassMyriadGoodnessScore
Tf,N,V_lastEndpointPosterior
Tf,N,V_latestVolume
Tf,N,V_permanentOffsetFactor
Tf,N,V_sampleRate
Tf,N,V_scaleFactor
Tf,N,V_threshold
Tf,N,V_userIntentVolume
Tf,R,N
Tf,R,N,V_kwdScore
Tf,R,N,V_maxFingerprintBufferSize
Tf,R,N,V_scaleFactor
Tf,R,N,V_shadowMicScoreThresholdForVAD
Tf,R,N,V_vadScore
Tf,R,N,V_volumeEstimate
Ti,N,V_numChannels
Ti,N,V_remoteVADSPGRatio
Ti,N,V_systemUserActivityNotificationToken
Ti,R,N
Tq,N
Tq,N,V_audioFormat
Tq,N,V_audioStreamType
Tq,N,V_clearLoggingFileTimerCount
Tq,N,V_currReqFirstSampleId
Tq,N,V_currentState
Tq,N,V_endpointMode
Tq,N,V_endpointStyle
Tq,N,V_endpointerOperationMode
Tq,N,V_endpointerType
Tq,N,V_errorAlertBehavior
Tq,N,V_inferenceTimeSpan
Tq,N,V_initialState
Tq,N,V_lastEndpointHintRCId
Tq,N,V_latestVolumeTime
Tq,N,V_listenPollingTimerCount
Tq,N,V_numberOfTotalFramesETFT
Tq,N,V_processedAudioDurationInMilliseconds
Tq,N,V_startAlertBehavior
Tq,N,V_stopAlertBehavior
Tq,N,V_totalNumberSamples
Tq,N,V_trailingSilenceDuration
Tq,N,V_userActivityStatus
Tq,N,V_userIntentTime
Tq,N,V_wordCount
Tq,N,VendpointStyle
Tq,R,N
Tq,R,N,V_currentState
Tq,R,N,V_deviceType
Tq,R,N,V_endSampleId
Tq,R,N,V_startStampleId
Ts,N,V_signalEstimate
T{AudioStreamBasicDescription=dIIIIIIII},N,V_outASBD
UILanguage
URLByAppendingPathComponent:
URLByDeletingPathExtension
URLWithString:
URLsForDirectory:inDomains:
UTF8String
UUID
UUIDString
_LKFSChannelBitset
_LKFSLowerPercentile
_LKFSMicSensitivityOffset
_LKFSTTSMappingInputRangeHigh
_LKFSTTSMappingInputRangeLow
_LKFSTTSMappingOutputRangeHigh
_LKFSTTSMappingOutputRangeLow
_LKFSTimeConstant
_LKFSUpperPercentile
_RMSScore
_TTSVolumeLowerLimitDB
_TTSVolumeUpperLimitDB
_UUID
_aFTMNode
_accessibleEndpointerEnabled
_accessoryId
_accessoryVoiceTriggerEvents
_accessoryVoiceTriggerMetaDataByDeviceId
_acousticAnalyzer
_acquireAssertionForType:withTimeout:assertionId:details:
_acquirePreventSystemSleepAssertionWithTimeout:
_activateAudioSessionWithReason:error:
_activateEndTime
_activateStartTime
_activationAssertions
_activationTypeString
_activationXpcListener
_activeChannel
_activeEndpointer
_adCompanionServiceProvider
_adaptiveSiriVolumeDictionary
_addAssetManagerEnabledConditions
_addAudio:
_addConditionsForIOSAOP
_addConditionsForIOSBargeIn
_addContinousAudioFingerprintEnabledConditions
_addDisabledConditions
_addListeningEnabledConditions
_addRemoteVADSignal:
_addSmartSiriVolumeEnabledConditions
_addVoiceTriggerAOPModeEnabledConditions
_addVoiceTriggerEnabledConditions
_additionalMetrics
_address
_adjustEndpointStartTimeWithVoiceTriggerEvent:
_adpAssertion
_alarmFiringState
_alarmSoundIsFiring
_alarmVolume
_alarmVolumeLevel
_alertBehaviorTypeFromAVVCOberrideType:
_alertDelegate
_alertPlaybackFinishTimeoutToken
_alertPlaybackFinishWaitingCompletions
_alertPlaybackFinishWaitingStreams
_alignBufferQueue
_allFramesInferenceLatency
_allowEndpointAssetDownloading
_allowLanguageDetectorAssetDownloading
_allowListWordCountThreshold
_allowSpeakerRecognitionAssetDownloading
_allowVoiceTriggerAccessoryAssetDownloading
_allowVoiceTriggerAssetDownloading
_alwaysOnProcessorController
_anchorMachAbsTime
_apQueue
_asbd
_asrDatapackInstallationStatus
_asrNode
_asrResultDeliveryTransaction
_assertionMonitor
_assertionTimeoutInterval
_asset
_assetManager
_assetQueryForAssetType:
_assetQueryQueue
_assetVersion
_assetsMigrationQueue
_asssetMetaUpdatedKey
_attSiriConnectionManager
_attSiriController
_attSiriSvcListener
_attSiriTransaction
_attachBluetoothSession
_atvRemoteDeviceID
_audioAlertProvider
_audioAlertProvidingDelegate
_audioAlertProvidingProxy
_audioBuffer
_audioBufferPool
_audioChunkFrom:to:
_audioChunkFrom:to:channelIdx:
_audioFile
_audioFilePathIndex
_audioFileReader
_audioFileWriter
_audioFormat
_audioInjectionEngine
_audioInjectionEngines
_audioInjectionXpcListener
_audioIsFromRemoteAccessory:
_audioLength
_audioLogDirectory
_audioLoggingBuffer
_audioMeterProvider
_audioMeterProvidingProxy
_audioMetricProvider
_audioMetricProvidingProxy
_audioPacketDeliveryCount
_audioPacketWatchdog
_audioPreprocessor
_audioProviderUUID
_audioRecordContext
_audioRecorder
_audioRecorderDidStartRecordingSuccessfully:streamHandleID:error:
_audioRecorderDidStopRecordingForReason:streamHandleID:
_audioRouteChangeMonitor
_audioRouteChanged:
_audioSampleCountToSkip
_audioSessionInfoObservers
_audioSessionInfoProvider
_audioSessionProvider
_audioSessionProvidingDelegate
_audioSessionProvidingProxy
_audioSessionState
_audioSrcNode
_audioStream
_audioStreamHandleId
_audioStreamHolding
_audioStreamId
_audioStreamProvider
_audioStreamProviding
_audioStreamProvidingDelegate
_audioStreamProvidingProxy
_audioStreamType
_audioStreamWithRequest:streamName:error:
_audioSystemRecovering
_audioTapProvider
_audioTimeConverter
_audioURL
_audioWaitingBuffer
_automaticEndpointingSuspensionEndTime
_availabilityChanged
_avvcAlertOverrideType:
_beepCanceller
_benchmarkXpcListener
_bertModel
_bestEarlyDetectSample
_bestEndDetectSample
_bestStartDetectSample
_bestToken
_bluetoothSession
_bluetoothSessionSetupGroup
_bufferedLPCM
_buildVersion
_builtInAudioInjectionEngine
_builtInDevice
_builtInSeconPassProgressProvider
_builtInSpeakerState
_builtInVoiceTriggerEvent
_builtInVoiceTriggerMetaData
_cachedAsset
_cachedEndpointAssets
_cachedEndpointerInfo
_cachedMitigationDecision
_cachedResult
_cachedScoresForLogging
_caesuraSPG
_calculateRMSWithFrameData:
_calculateSpeechVoicingLevel
_canActivate
_canFetchRemoteAsset:
_canProcessCurrentRequest
_canSetContext
_cancelAudioPacketWatchDog
_ccProfile
_certificate
_checkCanUseVoiceTriggerDuringCallEnabled
_checkFirstUnlocked
_checkNewAssetAvailablity
_checkNewAssetAvailablityForEndpoint
_checkPhraseSpotterEnabled
_checkSiriRestrictedOnLockScreen
_checkSoftwareUpdateCheckingState
_checkSpringBoardStarted
_checkVoiceTriggerEnabled
_circularBufferStartHostTime
_cleanUpMobileAssetV1Directory
_clearAudioProcessWaitingBufferIfNeeded
_clearDidStartRecordingDelegateWatchDog
_clearDidStopRecordingDelegateWatchDog
_clearEndpointHint
_clearLoggingFileTimer
_clearLoggingFileTimerCount
_clearPendingBuiltInVoiceTrigger
_clientConnections
_clientController
_clientLagThresholdMs
_clientType
_combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:
_compatibilityVersion
_compensateChannelDataIfNeeded:receivedNumChannels:
_completion
_completionBlock
_compressFilesInDirectory:matchingPredicate:compressedFileAvailable:
_compressFilesInDirectory:matchingPredicate:sortedByCreationDate:compressedFileAvailable:
_configFile
_configureAudioConverter:
_connectPluginDevice:
_connectedDevice
_connectedDeviceAddresses
_connectedDevices
_connection
_connections
_context
_convertAudioCapacity
_convertBufferedLPCM:allowPartial:timestamp:arrivalTimestampToAudioRecorder:
_convertDeactivateOption:
_convertPacketCount
_coreSpeechDaemonKeepAlived
_corespeechServiceListener
_countOfConsecutiveBoron
_crashEventDelegate
_createCircularBufferIfNeededWithNumChannel:playbackRoute:
_createClearLoggingFileTimer
_createDeInterleaverIfNeeded
_createMitigatorModelWithConfig:
_createModelAndRunInferenceForRcId:withCompletion:
_createPeriodicalDownloadTimer
_createResultDict
_createSampleRateConverterWithInASBD:outASBD:
_createSpeechDetectionVADIfNeeded
_createXPCClientConnection
_csAssetsDictionary
_csXPCActivity
_cs_initWithXPCObject:
_cs_isHashTableEmpty
_cs_xpcObject
_ctx
_currReqFirstSampleId
_currentAsset
_currentHEPAsset
_currentLanguageCode
_currentMaximumBufferSize
_currentOEPAsset
_currentRequestSampleRate
_currentSessionShouldDuckOnBuiltInSpeaker
_currentState
_daemonDidLaunch
_daemonWillShutdown
_darwinVoiceTriggerHandlerPool
_dataBufferNDEAPI
_dataBufferPositionNDEAPI
_deactivateAudioSession:error:
_deactivateEndTime
_deactivateStartTime
_debugLogPath
_decodeError:
_decodeJsonFromFile:
_decoderProcessedSampleCountForTV
_decodersForTV
_defaultDownloadOptions
_defaults
_deinterleaveBufferIfNeeded:
_deinterleaver
_delay
_delegate
_delegates
_deliverHistoricalAudioToStreamsWithRemoteVAD:
_deliverPostprocessAudioChunk:toStream:lastForwardedSampleCount:
_deregisterAudioSessionNotifications
_destination
_destroyVoiceController
_detachBluetoothSession
_detectedEndpointTime
_detectedToken
_deviceID
_deviceId
_deviceName
_deviceProductType
_deviceProductVersion
_deviceSpecificDBToLinearVolumeMappingCSSSVDeviceSimple:
_deviceSpecificLinearVolumeToDBMappingCSSSVDeviceSimple:
_deviceType
_deviceUID
_didActivate
_didAddAudio
_didCommunicateEndpoint
_didDetectSpeech
_didDetectedEndpoint
_didInstalledNewAdBlockerAsset
_didInstalledNewAsset
_didInstalledNewVoiceTriggerAsset
_didPlayStartAlertSoundForSiri:audioStream:
_didReceiveAOPListeningStateChange:
_didReceiveAVVCRecordingClientNumberChange:
_didReceiveAutomaticVolumeToggled:
_didReceiveBuiltinSpeakerStateChangeNotification:
_didReceiveCanUseVoiceTriggerDuringCallSettingChangedInQueue:
_didReceiveDaemonStateChanged:
_didReceiveFinishStartAlertPlaybackAt:
_didReceiveFirstUnlock:
_didReceiveFirstUnlockInQueue:
_didReceiveLanguageCodeUpdate
_didReceiveLanguageCodeUpdate:
_didReceiveMediaserverNotification:
_didReceiveNewAdBlockerAssetMetaData
_didReceiveNewSpeechEndpointAssetMetaData
_didReceiveNewVoiceTriggerAssetMetaData
_didReceivePhraseSpotterSettingChangedInQueue:
_didReceiveRestrictionChanged:
_didReceiveRestrictionChangedInQueue:
_didReceiveSelfTriggerChanged:
_didReceiveServerFeatures
_didReceiveSiriSettingChanged:
_didReceiveSleepGesture
_didReceiveSoftwareUpdateCheckingStateChanged:
_didReceiveSoftwareUpdateCheckingStateChangedInQueue:
_didReceiveSpeakerMuteStateChangeNotification:
_didReceiveSpeakerRecognitionAssetMetaData
_didReceiveSpringboardStarted:
_didReceiveSpringboardStartedInQueue:
_didReceiveVoiceTriggerSettingChanged:
_didReceiveVoiceTriggerSettingChangedInQueue:
_didReceiveWakeGesture
_didReceiveWirelessSplitterStateChange
_didReceivedNetworkAvailabilityChangedNotification:
_didReportEndpointDelay
_didSetScaleFactor
_didStartDelayInSeconds
_didTimestampFirstAudioPacket
_didTrigger
_disableBoostForDoAP
_disableEndpointer
_disableLocalSpeechRecognizer
_disablePrewarmLocalAsrAtStartRecording
_disconnect
_dismissalTimestamp
_downloadAsset:withComplete:
_downloadAssetCatalogForAssetType:complete:
_downloadTimer
_downloadTimerCount
_downloadingOption
_droppedPrediction
_droppingPrediction
_eagerResultId
_elapsedTimeWithNoSpeech
_emitEndpointDetectedEventWithEndpointTimeMs:endpointBufferHostTime:endpointerFeatures:endpointerDecisionLagInNs:extraDelayMs:endpointScore:asrFeatureLatencies:
_emitMHEndpointLatencyInfo:withRequestMHUUID:
_enableAlwaysOnVoiceTrigger
_enableCoreSpeechDaemonKeepAlive
_enablePolicy
_enabled
_encoder
_endPointerMetrics
_endSampleId
_endWaitTime
_endpointBufferHostTime
_endpointDelayReporter
_endpointLatencyInfo
_endpointLatencyQueue
_endpointMode
_endpointStartTimeInSec
_endpointStyle
_endpointThreshold
_endpointTime
_endpointTimeInMs
_endpointerDelegate
_endpointerImplDelegate
_endpointerListener
_endpointerModelVersion
_endpointerOperationMode
_energyBufferSize
_enforceEndpointHintWithRequestId:rcId:shouldAccept:featuresToLog:
_eosLikelihood
_epResult
_errorAlertBehavior
_estimatedStartHostTime
_estimatedTTSVolume:lowerLimit:upperLimit:TTSmappingInputRangeLow:TTSmappingInputRangeHigh:TTSmappingOutputRangeLow:TTSmappingOutputRangeHigh:
_eventToStateTransitions
_exportedInterface
_extraDelayFrequency
_fFile
_fallbackAudioSessionProvidingProxy
_fallbackAudioSessionReleaseProvider
_falseWakePhraseDictionary
_featuresAtEndpoint
_fetchAssertionMonitor
_fetchAudioDecoderForTV:
_fetchCurrentMetrics
_fetchEndpointMobileAssetWithLanguage:
_fetchHearstConnectionState
_fetchHearstRoutedState
_fetchHistoricalAudioAndForwardToStream:remoteVAD:
_fetchInputOriginWithRecordContext:
_fetchJarvisConnectionState
_fetchMitigationAssets
_fetchMitigationConfig
_fetchRemoteAssetOfType:withLanguage:completion:
_fetchRemoteAssetOfType:withLanguage:query:completion:
_fetchRemoteMetaData
_fetchRemoteRecordClientWithDeviceId:streamHandleId:
_fetchRequiredAssets
_fetchSiriInputSourceOutOfBandState
_fetchSpeakerStateActiveInfo
_fetchSpeakerStateMutedInfo
_fetchSystemUserActivityState
_fetchVoiceTriggerAssets
_fileOption
_findLatestInstalledAsset:
_firstAudioPacketTimestamp
_firstAudioSampleSensorTimestamp
_firstAudioStartSampleCount
_firstPartialResultTime
_firstPassInfoGeneratedTime
_firstPassInfoProcessedTime
_firstPassMyriadGoodnessScore
_firstPassSource
_firstPassTriggerInfo
_firstPktLatency
_firstSpeechFrameAudioTsInMs
_firstUnlockMonitor
_firstUnlockNotified
_firstUnlocked
_firstWordDuration
_firstpassMetrics
_flexKwdNode
_floatBuffer
_footprint
_forceBuildGraph:
_forwardAudioChunk:toStream:
_forwardAudioChunkForTV:toStream:
_frameDurationMs
_getAddressWithBTDevice:
_getAsrInputoriginFromContext:
_getAudioProvideWithContext:streamClientType:
_getAudioRecorderWithError:
_getCSHybridEndpointerConfigForAsset:
_getConnectedBluetoothDeviceAddressesFromLocalDevice:
_getContentsOfDirectory:
_getCurrentHEPAsset
_getDeviceSimpleOutputLinearVolumeFordBFSValue:
_getDeviceSimpledBFSForOutputLinearVolume:
_getDevicedBFSForInputLinearVolume:
_getFakeEndpointAsset
_getFirstTokenDurationFromSpeechPackage:
_getFloatBufferData:
_getHighestRemoraFirstPassGoodnessScore:
_getHomeUserIdForSharedSiriId:withCompletion:
_getInputoriginFromRecordType:
_getLeadingSilenceDurationFromSpeechPackage:
_getModelPathFromInstallationStatusString:
_getMusicVolumeDBCSSSVDeviceDefault:
_getMusicVolumeDBCSSSVDeviceSimple:
_getNumberFromASVDictionaryForKey:category:default:
_getOEPVersionFromPath:
_getOrCreateAudioLogDirectory
_getProcessedAudioDurationFromSpeechPackage:
_getRecordSettingsWithRequest:
_getUserOffsetFromMusicVolumeDB:
_getUserSpeakingEndedTimeFromSpeechPackage:
_getVoiceTriggerAssetFromAssetManager:
_getVoiceTriggerAssetFromAssetManagerWithLocale:completion:
_getVoiceTriggerAssetIfNeeded:
_getWirelessSplitterInfoFromLocalDevice:
_gibraltarVoiceTriggerHandler
_handleAFTMResults:
_handleActivateEventMesssage:client:
_handleAlertProvidingDelegateDidFinishAlertPlayback:
_handleAlertProvidingDelegateMessageBody:
_handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:
_handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:
_handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:
_handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:
_handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:
_handleAudioDeviceInfo:messageBody:client:
_handleAudioProvidingMessage:messageBody:client:
_handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:
_handleAudioStreamPrepareMessage:messageBody:client:
_handleAudioStreamRequestMessage:messageBody:client:
_handleAudioSystemFailure
_handleCallActiveDidChangeNotification:
_handleClearLoggingFileTimer
_handleClientError:client:
_handleClientEvent:
_handleClientMessage:client:
_handleDidAudioStartWithResult:error:
_handleDidRecognizedFinalSpeechPackage:requestId:metadata:
_handleDidRecognizedSpeechPackageForEagerRecognitionCandidate:requestId:rcId:metadata:
_handleDidStartAudioStreamWithResult:error:
_handleDidStop
_handleDidStopAudioStreamWithReason:
_handleDidStopStreamUnexpectly
_handleEnablePolicyEvent:
_handleEnableVoiceTriggerWithSiriAssertionRequest:
_handleEndpointVoiceTriggerAsset:completion:
_handleInterruption:
_handleIsNarrowband:messageBody:client:
_handleIsRecordingMessage:messageBody:client:
_handleListenerDisconnectedError:
_handleListenerError:
_handleListenerEvent:
_handleListenerMessage:
_handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:
_handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:
_handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:
_handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:
_handleNewRemoteConnection:
_handlePhraseSpotterBypassRequest:
_handlePingPongMessage:client:
_handlePlaybackRouteMessage:messageBody:client:
_handleRaiseToSpeakBypassRequest:
_handleRecordDeviceInfo:messageBody:client:
_handleRecordRouteMessage:messageBody:client:
_handleRecordSettings:messageBody:client:
_handleServiceConnectionLostIfNeeded
_handleSessionIDRequestMessage:messageBody:client:
_handleSessionInfoProvidingDelegateInterruptionNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:
_handleSessionInfoProvidingDelegateMessageBody:
_handleSessionInfoProvidingDelegateRouteChangeNotification:
_handleSessionProvidingDelegateBeginInterruption:
_handleSessionProvidingDelegateBeginInterruptionWithContext:
_handleSessionProvidingDelegateDidChangeContext:
_handleSessionProvidingDelegateDidSetAudioSession:
_handleSessionProvidingDelegateEndInterruption:
_handleSessionProvidingDelegateMessageBody:
_handleSessionProvidingDelegateStreamHandleIdInvalidation:
_handleSessionProvidingDelegateWillSetAudioSession:
_handleSessionProvidingRequestTypeActivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeDuckAudioDevice:messageBody:client:
_handleSessionProvidingRequestTypeDuckDefaultOutputAudioDevice:messageBody:client:
_handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:
_handleSessionProvidingRequestTypeEnableSmartRoutingConsideration:messageBody:client:
_handleSessionProvidingRequestTypePrewarmMessage:client:
_handleSessionProvidingRequestTypeReportDynamicActivityAttribute:messageBody:client:
_handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:
_handleSetCurrentConextMessage:messageBody:client:
_handleSetXPCClientTypeMessage:messageBody:client:
_handleShouldAcceptEagerResultWithRequestId:rcId:duration:shouldAccept:featuresToLog:
_handleStartAudioStreamMessage:messageBody:client:
_handleStartProcessingWithRecordContext:completion:
_handleStopAudioStreamMessage:messageBody:client:
_handleStopDeliverLocalSpeechRecognition
_handleStopProcessing
_handleStopSpeechRecognitionTaskIfNeeded:
_handleStreamProvidingDelegateChunkAvailable:
_handleStreamProvidingDelegateChunkForTVAvailable:
_handleStreamProvidingDelegateDidStopUnexpectly:
_handleStreamProvidingDelegateHardwareConfigChange:
_handleStreamProvidingDelegateMessageBody:
_handleSupportsDuckingWithStreamHandleID:messageBody:client:
_handleVoiceTriggerAssetWithCompletion:
_handleVoiceTriggerInfoMessage:messageBody:client:
_handleVoiceTriggerStatsFetchEvent:client:
_handleVoiceTriggerXPCServiceMessage:client:
_handleVoiceTriggeredSiriSessionCancelled
_handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:streamHandleId:
_handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:streamHandleId:
_hasConnectedAVCall
_hasDeviceTemporaryPairedNotInContacts
_hasLocalPendingTwoShot
_hasPendingActivationForType:
_hasReceivedEarlyDetectNDEAPIResult
_hasReceivedNDEAPIResult
_hasReported
_hasSetAlertDictionary
_hepAudioOriginInMs
_hidCallbackQueue
_holdRecordingExceptionIfNeeded:
_holdRecordingTransactionIfNeeded
_holdTransactionForNldaProcessing
_holdTransactionForUresProcessing
_hosttime
_hybridClassifier
_hybridClassifierQueue
_hybridEndpointer
_implDelegate
_inUseServices
_inferenceTimeSpan
_init
_initialState
_injectionAudioFileList
_injectionCompletionNotifyBlocks
_injectionEngine
_injectionStartNotifyBlocks
_inputRoute
_installedAssetOfType:query:withLanguage:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_interactiveLocalSpeechRecognizer
_interspeechWaitTime
_invalidateLocalSpeechRecognizer:
_isASRFeatureFromServer
_isActiveRequest
_isActiveSession
_isAnalyzeMode
_isAnchorTimeBuffered
_isAttachingBluetoothSession
_isAttending
_isAutomaticVolumeEnabled
_isBluetooth
_isBuiltInDeviceFromDeviceId:
_isCommandControlStreaming
_isConnected
_isDuckingOnSpeakerOutputSupportedWithCurrentRoute
_isEnabled
_isFileLoggingEnabled
_isForwarding
_isHearstConnected
_isHearstRoutedAndWithNoPhoneCall
_isHubRequest
_isInPhoneCallStateWithHSPhoneCallCapableRoute
_isJarvisConnected
_isListenPollingStarting
_isListening
_isListeningEnabled
_isMediaPlayingNow
_isNNVAD
_isNarrowBand:
_isOSDIncludedInAsset:
_isOpportuneSpeakListening
_isPhraseSpotterBypassed
_isPhraseSpotterEnabled
_isRaiseToSpeakBypassed
_isReady
_isReadyToUse
_isRecording
_isRemoraSecondPassRunning
_isRequestTimeout
_isRestricted
_isRetryRecommendedWithResult:
_isSecondChanceRun
_isSecondPassRunning
_isShadowModeEnabled
_isSiriEnabled
_isSiriInputSourceOutOfBand
_isSoftwareUpdateCheckingRunning
_isSpeaking
_isSpeechRecognizerTaskSupported:
_isSpringBoardStarted
_isStartSampleCountMarked
_isStreaming
_isVoiceTriggerEnabled
_isVoiceTriggerEvent:
_isWeakStream
_keywordAnalyzer
_keywordAnalyzerNDEAPI
_kwdScore
_kwdSpotter
_language
_languageCodeUpdateMonitor
_lastAggTimeFalseWakeUp
_lastArrivalTimestampToAudioRecorder
_lastAudioRecorderContext
_lastCommunicatedPeer
_lastDetectedVoiceTriggerBeginSampleCount
_lastEndpointEagerResultTime
_lastEndpointHintCompletion
_lastEndpointHintDuration
_lastEndpointHintFeatures
_lastEndpointHintRCId
_lastEndpointPosterior
_lastForwardedSampleCount
_lastKnowServerFeaturesLatency
_lastKnownConsecutiveBoronStartSampleCount
_lastKnownOSDFeatures
_lastKnownServerEPFeatures
_lastReportedEndpointTimeMs
_lastSampleCount
_lastServerFeatureTimestamp
_lastSilencePosterior
_lastTimestamp
_lastUpdatedAssetType
_latestContext
_latestPluginStreamId
_latestResult
_latestVolume
_latestVolumeTime
_leadingSilenceDuration
_leadingUtteranceAudioFile
_leadingUtteranceLogger
_listenPollingTimer
_listenPollingTimerCount
_listener
_loadAndSetupEndpointerAssetIfNecessary
_localDevice
_localSRBridgeListener
_localSpeechRecognizerDeliverAudioDuration
_localSpeechRecognizerQueue
_localSpeechRecognizerState
_localSpeechRecognizerTaskString
_logAFTMEndMsgWithScore:analyzedSamples:
_logAFTMStartMsg:taskType:
_logFinalMitigationDecisionToSelf:
_logLatticeRNNResults:
_logMHOdldFalseTriggerMitigationScores:withOdldScores:withOdldScoreThreshold:withSuccess:
_logResourceNotAvailableErrorIfNeeded:
_logResultToVTDirectory
_logSpeakerFalseTriggerMitigationScore:withSpeakerMatchScore:withSpeakerScoreThreshold:withAudioDuration:withSuccess:
_logURESEndMessageWithScore:threshold:assetVersion:
_logURESFailureMsgInput:
_logURESResultsForInput:withOutput:
_loggingQueue
_lpcmBitDepth
_lpcmIsFloat
_machServiceName
_makeStandaloneMitigation
_makeTimestampedAudioLogFilenameWithPrefix:suffix:
_manualDuckingHandler
_mapInputOriginFromAssetToCSAudioRecordType:
_mapScoresToSharedSiriId:
_markTimeToFirstWordMetric
_maxFingerprintBufferSize
_mediaserverdDidRestart
_mhId
_micUsageReporter
_minimumDurationForEndpointer
_mitigationAsset
_mitigationDecisions
_mitigator
_modelData
_modelExeQueue
_modelHash
_modelLocale
_monitor
_multimodalEndpointerEnabled
_musicVolumeDB
_musicVolumeLevel
_name
_needResetAudioInjectionIndex:
_nldaClassifierNode
_nnvadEndpointer
_nodesCache
_noiseLevelChannelBitset
_noiseLowerPercentile
_noiseMicSensitivityOffset
_noiseMicSensitivityOffsetDeviceSimple
_noiseTTSMappingInputRangeHigh
_noiseTTSMappingInputRangeLow
_noiseTTSMappingOutputRangeLow
_noiseTimeConstant
_noiseUpperPercentile
_noiseWeight
_notePossiblePlayPausedStateChange:
_notificationKey
_notifyActivationEvent:completion:
_notifyAssetsUpdate
_notifyHearstConnectionState:
_notifyHearstRoutedState:
_notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:
_notifyJarvisConnectionState:
_notifyObserver:
_notifyObserver:mediaIsPlayingState:
_notifyObserver:splitterState:shouldDisableSpeakerVerificationInSplitterMode:
_notifyObserver:withBuiltinSpeakerState:
_notifyObserver:withDaemonState:
_notifyObserver:withEnabled:
_notifyObserver:withLanguageCode:
_notifyObserver:withMediaserverState:
_notifyObserver:withNetworkAvailability:
_notifyObserver:withSoftwareUpdateCheckingRunning:
_notifyObserver:withStarted:
_notifyObserver:withUnlocked:
_notifySiriInputSourceOutOfBandState:
_notifyStopCommandControl
_notifyStopOpportuneSpeakWithDelay:
_notifyToken
_notifyXPCDisconnectionToProxies
_nowString
_numChannels
_numOfAVVCRecordingClients
_numOfAudioPackets
_numOfChunksReceived
_numOfConsecutiveBoronActivationThreshold
_numOfValidTrailingPackets
_numOfValidTrailingSpeechPackets
_numSamplesProcessed
_numSamplesProcessedBeforeAnchorTime
_numberOfChannels
_numberOfTotalFramesETFT
_numberOfVoicingFrames
_observers
_odldModelAnalyzer
_odldProcessor
_onAudioPacketWatchdogFire
_opportuneSpeakListeningType
_opportuneSpeakListnerTestService
_opusConverter
_opusDecoders
_opusOutASBD
_osTransaction
_osdAnalyzer
_osdFeaturesAtEndpoint
_osdMode
_osdNode
_osdQueue
_outASBD
_outASBDWithNumChannels:
_outBufferScaleFactor
_outPacketSizeInSec
_outputRoute
_overrideEnabled
_overridePath
_pNonInterleavedABL
_pairedDeviceAddresses
_pauseCounts
_pauseSSVProcessing
_payloadData
_pendingActivationEvent
_pendingBuiltInVoiceTriggerCompletionBlk
_pendingBuiltInVoiceTriggerDetectedTime
_pendingBuiltInVoiceTriggerResult
_pendingCompletion
_pendingRecordingStopUUID
_pendingRemoraVoiceTriggerCompletionBlk
_pendingRemoraVoiceTriggerDetectedTime
_pendingRemoraVoiceTriggerDeviceId
_pendingRemoraVoiceTriggerResult
_pendingStartCompletions
_pendingStopCompletions
_pendingTwoShotVTToken
_performPostBuildInstallWithCompletion:
_permanentOffsetFactor
_permanentOffsetIsEnabled
_phoneCallStateMonitor
_phraseSpotterEnabledDidChange
_playbackDeviceTypeList
_playbackRoute
_popRemoteVADSignal
_postBuildInstallService
_postEpilogueAudioStream
_preEpilogueAudioStream
_prefetchedAsset
_preheatWithLanguage:preheatSource:
_preheatWithLanguage:preheatSource:shouldDownloadMissingAsset:
_prepareAudioStream:request:completion:
_prepareAudioStreamSync:request:error:
_prepareSoundLevelBufferFromSamples:soundType:
_presetLocalSpeechRecognizer
_preventSystemSleepAssertionId
_preventSystemSleepPowerAssertion
_preventUserIdleSystemSleepAssertionId
_primaryStream
_processAudioBuffer:audioStreamHandleId:arrivalTimestampToAudioRecorder:
_processAudioBuffer:remoteVAD:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
_processAudioChain:audioStreamHandleId:remoteVAD:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
_processAudioChunk:
_processAudioChunk:soundType:
_processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processGradingDataFetchCommandWithRequest:fromSenderID:withReply:
_processParallelRecordingCommandWithRequest:fromSenderID:withReply:
_processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processSpeakerRecognitionResult:
_processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:
_processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:
_processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:
_processedAudioDurationInMilliseconds
_processedAudioInSeconds
_processedSampleCount
_productIdentifier
_protocolVersion
_providerDelegate
_proxy
_proxyObject
_psrAudioProcessor
_queryShouldAcceptEagerResultForDuration:requestId:rcId:
_queue
_rcHandler
_rcProcessingListener
_readAllowListVocabFromFile:
_readAudioBufferAndFeed
_readParametersFromHEPAsset:
_receiveParallelRecordingFromPeerId:recordingInfo:withReply:
_receiveVoiceGradingDataFromPeerId:requestInfo:withReply:
_receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:
_receivedHearstRoutedEvent:
_receivedNewAssetUpdate:
_receivers
_recognizer
_recognizerBuffer
_reconfigureRequiredNodes:enforceAttendingAudioNode:
_recordBasePacketsPerSecond
_recordContext
_recordCtx
_recordDeviceIndicator
_recordDeviceInfo
_recordEventUUID
_recordQueue
_recordStateQueue
_recordingDidStop
_recordingStartTime
_recordingTransaction
_recordingWillStartGroup
_refreshSpeakerRecognitionAssets
_registerAudioRouteChangeNotification
_registerAudioSessionNotifications
_registerInterruptionNotification
_reinitializeSmartSiriVolumeWithAsset:
_rejectionMHUUID
_releaseAssertionForAssertionId:details:
_releaseAttSiriTransactionIfNeeded
_releaseNldaProcessingTransaction
_releaseRecordingTransactionIfNeeded
_releaseRecordingTransactionIfNeededWithToken:
_releaseUresProcessingTransaction
_remoraSecondPassProgressProvider
_remoteAccessoryStreamIdSet
_remoteDeviceProductIdentifier
_remoteDeviceUID
_remoteDeviceUIDString
_remoteInterface
_remoteRecordClient
_remoteVADAlignBuffer
_remoteVADAlignCount
_remoteVADSPGRatio
_reportHardEndpointToXPCClientWithTime:endpointerMetrics:
_reportMetrics
_reportResultToAnalytics
_reportUEIUserSpeakingContext
_reportsDynamicActivityAttribute:bundleId:
_requestHistoricalAudioDataSampleCount
_requestHistoricalAudioDataWithHostTime
_requestId
_requestMHUUID
_requireSingleChannelLookup
_requiredNodes
_requiresHistoricalBuffer
_reset
_resetAlignBuffer
_resetCircularBufferStartTime
_resetLocalSpeechRecognizerParameters
_resetStartAnalyzeTime
_resumeSSVProcessing
_rmsSamplesForEntireAudio
_route
_runAssetQuery:completion:
_runningSampleCount
_sampleRate
_sampleRateConverter
_samplesFed
_saveRecordingBufferFrom:to:toURL:
_saveSamplesSeenInReset
_scaleFactor
_scaleInputWithInRangeOutRange:minIn:maxIn:minOut:maxOut:
_schduleDidStartRecordingDelegateWatchDogWithToken:
_scheduleAlertFinishTimeout:
_scheduleAudioPacketWatchDog
_scheduleDidStartRecordingDelegateWatchDog
_scheduleDidStopRecordingDelegateWatchDog
_scheduleDidStopRecordingDelegateWatchDog:
_scheduleRecordingTransactionReleaseTimer
_scheduledFutureSample
_secondChanceHotTillMachTime
_secondPassAssetLoadCompleteTime
_secondPassAssetLoadStartTime
_secondPassAssetQueryCompleteTime
_secondPassAssetQueryStartTime
_secondPassCheckerModelKeywordDetectionEndTime
_secondPassCheckerModelKeywordDetectionStartTime
_secondPassFirstAudioPacketReceptionTime
_secondPassLastAudioPacketReceptionTime
_selectedChannel
_sendAcousticGradingDataToPeerId:
_sendCoreSpeechGradingDataToPeerId:
_sendCoreSpeechMagusGradingDataToPeerId:
_sendDelegateMessageToClient:
_sendGeckoSpeechLogsToPeerId:
_sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:
_sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:withCompletion:
_sendMessage:connection:completion:
_sendMessageAsync:completion:
_sendReplyMessageWithResult:error:event:client:
_sendReplyMessageWithResult:event:client:
_sendVoiceProfile:toPeerId:
_sendVoiceProfileUpdateTriggerToPeerId:forLocale:
_sendVoiceTriggerGradingDataToPeerId:
_sendXPCClientType
_serverFeatureLatencies
_serverFeatureLatencyDistribution
_serverFeaturesQueue
_serverFeaturesWarmupLatency
_serverState
_serviceProxyWithErrorHandler:
_servicesListener
_servicesListenerShouldAcceptNewConnection:
_sessionAttached:result:
_sessionDelegate
_sessionDetached:
_sessionEventDelegate
_sessionInProgress
_sessionInfoQueue
_sessionTerminated:
_setAllowMixableAudioWhileRecording:
_setAsset:
_setAsset:forTask:
_setDefaultParameters
_setLatestRecordContext:
_setMaximumBufferSizeFromInUseServices
_setRecordingStartTimeWithStartStreamOption:audioRecordContext:voiceTriggerInfo:
_setStartAnalyzeTime:
_setUpLocalDevice
_setupAttSiriServiceListener
_setupAudioInjectionEngineWithAudioURL:
_setupAudioSrcNodeWithSiriClientStream:
_setupDistnoteHandlers
_setupEndpointListener
_setupLeadingUtteranceLogger
_setupLocalSpeechRecognitionListener
_setupNNVADEndpointer
_setupNotifyHandlers
_setupRCProcessingListener
_setupRecognizerStateForMagusAsrNode
_setupSSRControllerWithAudioContext:withVoiceTriggerEventInfo:
_setupSSRListener
_sha1:
_sha256:
_shadowMicScoreCreator
_shadowMicScoreThresholdForVAD
_sharedUserIdsSet
_shouldApplyAllowListOverride:
_shouldCleanupVoiceProfile
_shouldDisableLocalSpeechRecognizerWithOption:audioRecordContext:
_shouldDisableSpeakerVerificationInSplitterMode
_shouldDuckOnBuiltInSpeaker
_shouldHandleMitigationDecision:
_shouldHandleStartPendingOnStopping:withStopReason:
_shouldInjectAudio
_shouldLogResourceNotAvailableError
_shouldPauseLKFSProcess
_shouldPauseSSVProcess
_shouldProcessAudio
_shouldReportBoron
_shouldResetAdsDictionary
_shouldRunMitigationForRcId:forTask:
_shouldStopRecording
_shouldUpdateMitigationResult
_shouldUseLegacyPath:
_shouldUsePhaticWithRecordContext
_shouldUseRemoteBuiltInMic:
_shouldUseRemoteRecorder
_signalFractional
_signalSource
_signature
_silencePosterior
_siriClientAudioStartStreamOption
_siriClientBehaviorMonitor
_siriClientStream
_siriEnabledMonitor
_siriSessionUUID
_siriStateObserver
_skipAlertBehavior
_smartSiriVolume
_smartSiriVolumeLKFS
_smartSiriVolumeNoiseLevel
_smtConnection
_softwareUpdateCheckingState
_spIdSiriDebugGradingDataRootDirectory
_spIdSiriDebugTrainedUsersFilePathForLocale:
_spIdSiriDebugVTDataDirectory
_spIdSiriDebugVoiceProfileCacheDirectoryForProfile:locale:
_spIdSiriDebugVoiceProfileRootDirectoryForProfile:locale:
_spIdSiriDebugVoiceProfileStoreRootDirectory
_spIdSiriDebugVoiceProfileStoreRootDirectoryForLocale:
_speakerRecognitionAudioLogsGradingDir
_speakerRecognitionScores
_speechDetectionNode
_speechEndpointDetected
_speechHasAcceptedResultCandidate
_speechManager
_speechModelTrainingXpcManager
_speechRecognitionSettings
_speechVoiceLevel
_spgEndpointAnalyzer
_splitterDeviceList
_splitterEnabled
_splitterState
_ssrAssets
_ssrController
_ssrListener
_ssrNode
_ssvEnablePolicy
_ssvManager
_startActivation
_startAlertBehavior
_startAnalyzeSampleCount
_startAudioFeedingTimer
_startAudioStream:option:completion:
_startAudioStreamForAudioInjectionWithAVVCContext:
_startClearLoggingFilesTimer
_startDeliverLocalSpeechRecognitionResultsWithRequestId:
_startDetectionTime
_startDownloadingAsset:progress:completion:
_startListenPolling
_startListenPollingWithInterval:completion:
_startListenWithCompletion:
_startLocalSpeechRecognizerIfNeeded
_startMonitoring
_startMonitoringWithQueue:
_startObservingAVCallActiveChange
_startObservingOtherAppRecordingState
_startObservingSpeechDetectionVADPresence
_startObservingSystemControllerLifecycle
_startPendingOnStoppingStreamToCompletionDict
_startPendingOnStoppingStreams
_startPendingStreams
_startPeriodicalDownload
_startRecordingHostTime
_startRecordingSampleCount
_startRecordingWatchDogToken
_startRequestWithCompletion:
_startRequestWithContext:withVtei:completion:
_startRequestWithContext:withVtei:withVTAssets:taskType:completion:
_startSampleCount
_startStreamOption
_startWaitTime
_stateNotificationQueue
_stateSerialQueue
_stopAlertBehavior
_stopAudioStream:option:completion:
_stopListening
_stopPendingStreams
_stopPeriodicalDownload
_stopPreviousRecognitionTaskIfNeededWithNewRequestId:
_stopRecordingHostTime
_stopRecordingWatchDogToken
_stopTrackingRemoteAccessoryStreamId:
_storeMitigationDecision:forRCId:
_streamClientType
_streamHandleQueue
_streamHolders
_streamRequest
_streamState
_streamStateName:
_streaming
_streamingUUID
_streams
_subscribeEventMonitors
_supportAVSystemVolumeFetch
_supportDoAP
_supportedInputOrigins
_supportedRecordType
_supportsSSR
_supportsSpeechRecognitionOnDevice
_switchToListeningMode
_switchToRecordingMode
_systemControllerDied:
_systemUserActivityNotificationToken
_tandemStreams
_targetQueue
_taskName
_taskThresholdMap
_tearDownBuildGraph:
_tearDownLocalDevice
_tearDownSpeechDetectionVADIfNeeded
_threshold
_thresholds
_thresholdsMap
_timeoutInterval
_timer
_timerFiringState
_timerSoundIsFiring
_timestamp
_token
_totalAudioRecorded
_totalNumberSamples
_trackRemoteAccessoryStreamIdIfNeeded:
_trailingPktLatencies
_trailingPktSpeechLatencies
_trailingSilenceDuration
_trailingSilenceDurationAtEndpoint
_transitions
_trialAssetDownloadMonitor
_trialAssetManager
_trialAssetMonitor
_trialDownloadMonitor
_triggerAbsStartSampleId
_triggerInfoProviding
_triggerMachTime
_triggerNotifiedMachTime
_type
_uid
_updateAccessibleEndpointerThresholdIfNeed
_updateAssetWithCurrentLanguageForAssetType:
_updateAssetWithLanguage:
_updateAssetWithLanguage:assetType:
_updateEndpointerDelayedTriggerByMhId:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_updateLanguageCodeForRemoteVTEIResult:
_updateOEPAssetsWithLanguage:
_updateRemoteDeviceIdFromAVVCIfNeeded
_updateSignalsFrom:to:
_updateSupportedInputOrigins
_upsampler
_uresNode
_url
_useCustomizedRecordSettings
_useDefaultServerFeaturesOnClientLag
_useLegacyPath
_useOpportunisticZLL
_userActivityStatus
_userIntentValidForSeconds
_userIntentVolume
_userOffsetInputRangeHigh
_userOffsetInputRangeLow
_userOffsetOutputRangeHigh
_userOffsetOutputRangeLow
_userSpeakingEndedHostTime
_userSpeakingEndedTimeInMs
_userSpeakingStartedHostTime
_userSpeakingStartedTimeInMs
_uuid
_vadScore
_version
_voiceController
_voiceControllerCreationQueue
_voiceControllerWithError:
_voiceIdXpcListener
_voiceIdentificationBatchId
_voiceProfileManager
_voiceTriggerAssetDownloadMonitor
_voiceTriggerBatchId
_voiceTriggerDuringCallEnabledDidChange
_voiceTriggerEnabled
_voiceTriggerEventInfo
_voiceTriggerFireMachTime
_voiceTriggerSampleCount
_voiceTriggerXpcListener
_vtAsset
_vtEndInSampleCount
_vtExtraAudioAtStartInMs
_vtSecondPassAnalyzer
_waitingForAlertFinish
_waitingForDidStart
_wakeGestureTimestamp
_wordCount
_workQueue
_xpcClientType
_xpcConnection
_xpcListener
_xpcReplyQueue
_zeroCounter
_zeroFilter
aFTMNode
absoluteHostTimeToContinuousHostTime:
acceptEagerResultWithFeatures:featuresToLog:
accessibleEndpointerEnabled
accessibleEndpointerThreshold
accessoryId
accessorySiriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:forAccessory:
accessorySiriClientBehaviorMonitor:didStopStream:reason:withEventUUID:forAccessory:
accessorySiriClientBehaviorMonitor:willStartStreamWithContext:option:forAccessory:
accessorySiriClientBehaviorMonitor:willStopStream:reason:forAccessory:
accessoryVoiceTriggerMetaDataByDeviceId
acousticAnalyzer
acousticFTMScores
acousticSLResultForContext:completion:
acquireAssertion
acquireAssertionForActiveUser
acquireAssertionForIdleUser
activateAudioSessionForStream:isPrewarm:error:
activateAudioSessionForStream:isPrewarm:recordMode:error:
activateAudioSessionWithReason:streamHandleId:error:
activateConnection
activateStartTime
activationAssertions
activationDeviceUID
activationEventNotificationHandler:event:completion:
activationInfo
activationMetadata
activationMode
activationXpcListener
activeAudioRouteDidChange:
activeChannel
activeEndpointer
adBlockerAssetDecoderWithVersion:
adCompanionServiceProvider
addAudio:
addAudio:numSamples:
addAudioChunk:
addAudioSamples:count:
addConditions:
addDataToBuffer:
addDeviceIntoSplitterDeviceList:
addEntriesFromDictionary:
addKeyValuePair:with:
addKeyValuePairForQuery:assetType:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forAssetType:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
addPktInfoWithTimestamp:arrivalTimestamp:currentMachTime:
addReceiver:
addSamples:numSamples:
addSamples:numSamples:atHostTime:
addSamples:timestamp:arrivalTimestampToAudioRecorder:
addTransitionFrom:to:for:
addTransitionFromAnyStateTo:for:
addUtterances:toProfile:withContext:withCompletion:
addVTAcceptEntryAndSubmit:
addVTRejectEntry:truncateData:
additionalMetrics
adpAssertion
alarmState
alarmVolume
alertDelegate
alertPlaybackFinishWaitingCompletions
alertPlaybackFinishWaitingStreams
alertStartTime
alignBufferQueue
allDeviceDisconnected
allFramesInferenceLatency
allInstalledAssetsOfType:language:
allValues
allowAdBlockerAssetDownloading
allowEndpointAssetDownloading
allowExtendedRingBufferSize
allowKeywordsFile
allowLanguageDetectorAssetDownloading
allowListWordCountThreshold
allowSpeakerRecognitionAssetDownloading
allowSuddenTermination
allowVocabList
allowVoiceTriggerAccessoryAssetDownloading
allowVoiceTriggerAssetDownloading
alwaysOnProcessorController
alwaysOnVoiceTriggerEnabled
analyzer:hasFinalResult:
analyzer:hasPartialResult:
anchorMachAbsTime
announceCallsEnabled
appDomain
appendAudioData:
appendBytes:length:
appendData:
appendFormat:
appendString:
applyLowerAndUpperBoundsToVolume:
applyLowerAndUpperBoundsToVolumeOffset:
applyNegative20dBGainToFloatBuffer:
applyNegative20dBGainToShortBuffer:
applyNegative32dBGainToFloatBuffer:
applyNegative32dBGainToShortBuffer:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
arrivalHostTimeToAudioRecorder
asrDatapackInstallationStatus
asrResultDeliveryTransaction
assertionMonitor
assertionTimeoutInterval
asset
assetChangeMonitorDidDetectAssetChange:
assetForAssetType:resourcePath:configVersion:
assetForAssetType:resourcePath:configVersion:assetProvider:
assetForCurrentLanguageOfType:
assetForCurrentLanguageOfType:completion:
assetManager
assetManagerEnabledPolicy
assetOfType:language:
assetOfType:language:compatibilityVersion:completion:
assetOfType:language:completion:
assetOfType:providerType:language:completion:
assetProvider
assetServerUrl
assetStatus:
assetVersion
assetsMigrationQueue
assistantAudioFileLogDirectory
attSiriAttendingFailed
attSiriAttendingTimeoutTriggered
attSiriAudioSrcNodeDidStartRecording:successfully:error:
attSiriAudioSrcNodeDidStop:
attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:
attSiriConnectionManager
attSiriController
attSiriDidDetectAttendingTrigger:
attSiriNode:classifierScore:detailedResult:
attSiriNode:didDetectEndOfSpeechAt:
attSiriNode:didDetectHardEndpointAtTime:withMetrics:
attSiriNode:didDetectSpeechWithTriggerInfo:
attSiriNode:didDetectStartOfSpeechAt:
attSiriNode:didDetectStartpointAtTime:
attSiriNode:didMitigate:withScore:taskType:
attSiriNode:didUpdateAnchorMachAbsTime:numSamplesProcessedBeforeAnchorTime:isAnchorTimeBuffered:
attSiriNode:didUpdateAttentionState:
attSiriNode:didUpdateFirstAudioPacketTimestamp:firstAudioSampleSensorTimestamp:firstAudioStartSampleCount:
attSiriNode:didUpdateOSDFeatures:withFrameDurationMs:
attSiriNode:didUpdateWithSpeakerInfo:
attSiriNode:ssrFinishedProcessingWithSpeakerInfo:
attSiriNode:triggerReportedFromFlxKwdSpotter:
attSiriNodeDidNotDetectSpeechWithTimeout
attSiriStateMonitor:didRecieveAttSiriStateChange:
attSiriSvcListener
attSiriTransaction
attSiriUresNode:withUresScore:
attachDevice:
attachProgressCallBack:
attachTandemStream:toPrimaryStream:completion:
attachToMasterStreamWithCompletion:
attachToPrimaryStreamWithCompletion:
attendingState
attributes
atvRemoteDeviceID
audioAlertProvider
audioAlertProvidingDelegate
audioAlertProvidingDidFinishAlertPlayback:ofType:error:
audioAlertProvidingProxy
audioBuffer
audioChunkFrom:to:
audioChunkFrom:to:channelIdx:
audioChunkToEndFrom:
audioConverterBitrate
audioConverterDidConvertPackets:packets:durationInSec:timestamp:arrivalTimestampToAudioRecorder:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
audioDeviceInfoWithStreamHandleId:recordDeviceIndicator:
audioEngineAudioChunkForTvAvailable:audioChunk:
audioEngineBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:
audioEngineDidStartRecord:audioStreamHandleId:successfully:error:
audioEngineDidStopRecord:audioStreamHandleId:reason:
audioFeedTimer
audioFileReaderBufferAvailable:buffer:atTime:
audioFileReaderDidStartRecording:successfully:error:
audioFileReaderDidStopRecording:forReason:
audioFingerprintProvider
audioFormat
audioInjectionEnabled
audioInjectionEngine
audioInjectionEngines
audioInjectionFilePath
audioInjectionXpcListener
audioLoggingBuffer
audioMeterProvider
audioMeterProvidingProxy
audioMetric
audioMetricProvider
audioMetricProvidingProxy
audioPacketDeliveryCount
audioPacketWatchdog
audioPortSubtypeAsString:
audioPreprocessor
audioPreprocessor:hasAvailableBuffer:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
audioProviderInvalidated:streamHandleId:
audioProviderUUID
audioProviderWithStreamID:
audioProviderWithUUID:
audioProviders
audioRecordContext
audioRecorder
audioRecorder:didSetAudioSessionActive:
audioRecorder:willSetAudioSessionActive:
audioRecorderBeginRecordInterruption:
audioRecorderBeginRecordInterruption:withContext:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
audioRecorderBuiltInAudioStreamInvalidated:error:
audioRecorderDidFinishAlertPlayback:ofType:error:
audioRecorderDidStartRecord:audioStreamHandleId:successfully:error:
audioRecorderDidStopRecord:audioStreamHandleId:reason:
audioRecorderDisconnected:
audioRecorderEndRecordInterruption:
audioRecorderLostMediaserverd:
audioRecorderRecordHardwareConfigurationDidChange:toConfiguration:
audioRecorderStreamHandleIdInvalidated:
audioRecorderWillBeDestroyed:
audioRecorderWithQueue:error:
audioRouteChangeMonitor
audioSampleCountToSkip
audioServerCrashEventProvidingLostMediaserverd
audioSessionEventProvidingDidSetAudioSessionActive:
audioSessionEventProvidingWillSetAudioSessionActive:
audioSessionIdForDeviceId:
audioSessionInfoObservers
audioSessionInfoProvider
audioSessionInfoProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
audioSessionInfoProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionInfoProvidingProxy
audioSessionProvider
audioSessionProvider:didChangeContext:
audioSessionProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionProvider:didSetAudioSessionActive:
audioSessionProvider:providerInvalidated:
audioSessionProvider:willSetAudioSessionActive:
audioSessionProviderBeginInterruption:
audioSessionProviderBeginInterruption:withContext:
audioSessionProviderEndInterruption:
audioSessionProvidingDelegate
audioSessionProvidingProxy
audioSessionState
audioSrcNode
audioStartSampleCount
audioStream
audioStreamHandleId
audioStreamHolding
audioStreamId
audioStreamProvider
audioStreamProvider:audioBufferAvailable:
audioStreamProvider:audioBufferAvailable:lastForwardedSampleCount:
audioStreamProvider:audioChunkForTVAvailable:
audioStreamProvider:didHardwareConfigurationChange:
audioStreamProvider:didStopStreamUnexpectly:
audioStreamProviding
audioStreamProvidingDelegate
audioStreamProvidingProxy
audioStreamWithRequest:streamName:completion:
audioStreamWithRequest:streamName:error:
audioSystemRecovering
audioTapProvider
audioTimeConverter
audioURL
audioWaitingBuffer
automaticEndpointingSuspensionEndTime
autorelease
averagePowerForChannel:
avvcAlertBehavior
avvcContext
avvcContextSettings
avvcStartRecordSettingsWithAudioStreamHandleId:
batteryState
beepCanceller
beepCancellerDidCancelSamples:buffer:timestamp:
beginAnnounceMessageException:reason:
benchmarkXpcListener
bertModel
bestEarlyDetectSample
bestEndDetectSample
bestScore
bestStart
bestStartDetectSample
bestToken
bluetoothSession
bluetoothSessionSetupGroup
boolValue
boronScore
bufferDuration
bufferLength
buildVersion
builtInAudioInjectionEngine
builtInDevice
builtInMicVoiceTriggerEvent:hostTime:
builtInRTModelDictionary
builtInSeconPassProgressProvider
builtInSpeakerState
builtInVoiceTriggerMetaData
bundleTvRemote
bypassSamples
bypassSpeakerIdForMitigation
bytes
bytesDataSize
cacheSharedUserInfos:
cachedAsset
cachedEndpointAssets
cachedEndpointerInfo
cachedMitigationDecision
cachedResult
cachedScoresForLogging
caesuraSPG
calculateShadowMicScore
canActivate
canBePurged
canProcessCurrentRequest
cancelAudioStreamHold
cancelAudioStreamHold:
cancelBeepFromSamples:timestamp:
cancelDownloadSync
cancelRecognition
cancelTimer
carPlayAuxStreamSupportDidChange:
carPlayConnected
carPlayIsConnectedDidChange:
ccProfile
certificate
cesrXPCActvity
channelForProcessedInput
channels
checkConsecutiveBoronSignalWithAudioChunk:
checkFirstUnlocked
checkerThresholds
chunkForChannel:
circularBuffer
circularBufferInputRecordingDuration
circularBufferNumInputChannel
circularBufferStartHostTime
circularBufferStartSampleCount
clampedSFLatencyMsForClientLag
class
classifyUserIdentityFor:withScores:withAsset:
clearLoggingFileTimer
clearLoggingFileTimerCount
clearTriggerCount:
clientConnections
clientController
clientForAudioProviding
clientForAudioSessionInfoProviding
clientForFallbackAudioSessionReleaseProviding
clientForMacOSDuckAudioDevice
clientForSmartSiriVolumeProviding
clientLagThresholdMs
clientSilenceFramesCountMs
clientSilenceProbability
clientType
close
code
commandControlBehaviorMonitor:didStartStreamWithContext:successfully:option:
commandControlBehaviorMonitor:didStopStream:
commandControlBehaviorMonitor:willStartStreamWithContext:option:
commandControlBehaviorMonitor:willStopStream:
companionSyncVoiceTriggerUtterancesEnabled
compare:
compareScoresDesc:
completion
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
confidence
configFile
configVersion
configureAlertBehavior:
configureAlertBehavior:audioStreamHandleId:
configureAttendingState:
conformsToProtocol:
connectDevice:
connectDeviceWithUUID:completion:
connectedDeviceAddresses
connectedDevices
connection
connections
contConvConfigFile
contConvThresholds
containsCategory:
containsMultiUserThresholds
containsSpeakerRecognitionCategory
containsValueForKey:
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contextForBuiltInVoiceTrigger
contextForHearstVoiceTriggerWithDeviceId:
contextForOpportuneSpeakerListener
contextForOpportuneSpeakerListenerWithCall
contextForRemoraVoiceTriggerWithDeviceId:
continuousAudioFingerprintEnabledPolicy
continuousListening
convertSampleRateOfBuffer:
convertToFloatLPCMBufFromShortLPCMBuf:
convertToShortLPCMBufFromFloatLPCMBuf:
converterForAudioStreamId:
copy
copyBufferWithNumSamplesCopiedIn:
copySamplesFrom:to:
copySamplesFrom:to:channelIdx:
copyWithZone:
copybufferFrom:to:
coreSpeechDaemonStateMonitor:didReceiveStateChanged:
corespeechServiceListener
count
countByEnumeratingWithState:objects:count:
countOfConsecutiveBoron
crashEventDelegate
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:withAccessoryID:
createAudioFileWriterForOSDWithInputFormat:outputFormat:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioInjectionDeviceWithType:deviceName:deviceID:productID:completion:
createAudioStreamMessageWithRequest:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createPrepareAudioStreamMessageWithRequest:
createRTModelWithLocale:
createSharedAudioSession
createSmartSiriVolumeListener
createStartAudioStreamMessageWithOption:
createStopAudioStreamMessage
csAssetsDictionary
csAudioProcessingQueuePriority
csXPCActivity
currReqFirstSampleId
currentAsset
currentBuiltinSpeakerState
currentContext
currentDarwinHostState
currentInputDeviceUIDArray
currentInputRoute
currentLanguageCode
currentMaximumBufferSize
currentOutputRoute
currentPowerSource
currentPowerState
currentRawPowerState
currentRequestSampleRate
currentRoute
currentSessionShouldDuckOnBuiltInSpeaker
currentShadowMicScore
currentState
darwinVoiceTriggerHandlerPool
data
dataBufferNDEAPI
dataBufferPositionNDEAPI
dataUsingEncoding:
dataWithBytes:length:
dataWithCapacity:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithJSONObject:options:error:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
date
dateAdded
daysBeforeRemovingLogFiles
deactivateAudioSession:error:
deactivateAudioSession:streamHandleId:error:
deactivateAudioSessionForStream:withOptions:error:
deactivateAudioSessionWithOptions:
deactivateEndTime
deactivateForReason:options:context:completion:
deactivateSiriActivationConnectionWithReason:withOptions:withContext:
deactivateStartTime
debugDescription
debugLogPath
decisionStage
decodeBoolForKey:
decodeIntegerForKey:
decodeJson:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decoderProcessedSampleCountForTV
decodersForTV
decreaseSiriVolumeBasedOnUserIntent
defaultCenter
defaultContinousFingerprintBufferDuration
defaultController
defaultConverter
defaultFactory
defaultFallbackModelIfNil:
defaultInjectionProvider
defaultManager
defaultOutputAudioDeviceID
defaultProtocolInfo
defaultRequestWithContext:
defaultServerEndpointFeatures
deinterleaver
delay
delegate
delegates
deleteAllVoiceProfilesForAppDomain:
deleteUserVoiceProfile:
deliverEagerPackage
description
destination
detailedResult
detectUtterances
detectedEndpointTime
detectedToken
device:serviceMask:serviceEventType:serviceSpecificEvent:result:
deviceBuildVersion
deviceCategory
deviceConnectedWithUUID:
deviceDisconnectedWithUUID:
deviceID
deviceId
deviceIdentifier
deviceName
deviceProductType
deviceProductVersion
deviceType
deviceUID
dictationUIInteractionId
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didActivate
didAddAudio
didCommunicateEndpoint
didDetectHardEndpointAtTime:withMetrics:
didDetectKeywordWithResult:
didDetectSpeechActivity
didDetectStartpointAtTime:
didDetectedEndpoint
didEndpointWithFeatures:audioTimestamp:featuresToLog:endpointPosterior:extraDelayMs:
didFinishSpeakerRecognition:
didIgnoreEvent:from:
didLaunch
didMitigate
didPlayEndpointBeep
didReceiveAlarmChanged:
didReceiveAlarmVolumeChanged:
didReceiveMusicVolumeChanged:
didReceiveServerFeatures
didReceiveSpeakerRecognitionScoreCard:
didReceiveTimerChanged:
didReportEndpointDelay
didSetScaleFactor
didStartDelayInSeconds
didTTSVolumeChangeForReason:
didTimestampFirstAudioPacket
didTransitFrom:to:by:
didTrigger
digest
disableAssertionReceived
disableBoostForDoAP
disableEndpointer
disableLocalSpeechRecognitionForRequestId:
disableLocalSpeechRecognizer
disablePrewarmLocalAsrAtStartRecording
disallowSuddenTermiation
disconnect
disconnectDevice:
disconnectDeviceWithUUID:completion:
dismissalTimestamp
dispatchStateChangedFrom:to:
distributionDictionary:
domain
domainProb
doubleValue
downsampler
droppedPrediction
droppingPrediction
duckAudioDeviceWithDeviceID:duckedLevel:rampDuration:
duckDefaultOutputAudioDeviceWithDuckedLevel:rampDuration:
duckOthersOption
eagerResultId
effectiveBoolValueForSetting:
elapsedTimeWithNoSpeech
enableAlwaysOnVoiceTrigger
enableAssertionReceived
enableAutoPunctuation
enableEmojiRecognition
enableMiniDucking:
enablePolicy
enableSmartRoutingConsideration:
enableSmartRoutingConsiderationForStream:enable:
enableSmartRoutingConsiderationForStream:enable:error:
enableSpeakerStateListening:completionBlock:
enableVoiceCommands
enableVoiceTrigger:withAssertion:timestamp:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encoderBitRate
endAnnounceMessageException:reason:
endAudio
endAudioAndFetchAnyTrailingZerosPacket:
endOfSentenceLikelihood
endPointAnalyzerType
endPointerMetrics
endSampleId
endWaitTime
endpointBufferHostTime
endpointDelayReporter
endpointLatencyInfo
endpointLatencyQueue
endpointMode
endpointModeFromEndpointMetrics:
endpointStartTimeInSec
endpointStyle
endpointThreshold
endpointTime
endpointTimeInMs
endpointType
endpointer:detectedTwoShotAtTime:
endpointer:didDetectHardEndpointAtTime:withMetrics:
endpointer:didDetectStartpointAtTime:
endpointer:reportEndpointBufferHostTime:firstBufferHostTime:
endpointerAssetManagerDidUpdateAsset:
endpointerAssetManagerDidUpdateOSDAsset:
endpointerDelegate
endpointerImplDelegate
endpointerListener
endpointerModelVersion
endpointerNode
endpointerOperationMode
endpointerType
engineWithDeviceType:streamHandleId:
enter
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObservers:
enumerateObserversInQueue:
eosLikelihood
epResult
error
errorAlertBehavior
errorWithDomain:code:userInfo:
estimateSoundLevelbySoundType:
estimatedStartHostTime
estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:
estimatedUserSpeakingEndedHostTime
estimatedUserSpeakingStartedHostTime
eventToStateTransitions
expectedTimeRemaining
expressionForConstantValue:
expressionForFunction:arguments:
expressionValueWithObject:context:
extraDelayFrequency
extractArchiveFromDirectory:toDir:
fFile
fakeEndpointAssetPath
fakeMitigationAssetPath
fakeVoiceTriggerAssetPath
fallBackAssetResourcePath
fallbackAudioSessionProvidingProxy
fallbackAudioSessionReleaseProvider
fallbackDeactivateAudioSession:error:
falseWakePhraseDictionary
featuresAtEndpoint
fetchAudioFromCircularBuffer
fetchCurrentEndpointerOperationMode
fetchCurrentState
fetchDeviceUUIDStringFromUID:
fetchFallbackAudioSessionReleaseProvider
fetchHypotheticalRouteType
fetchInitSystemVolumes
fetchIsEnabled
fetchLastKnownConsecutiveBoronStartSampleCount
fetchRemoteMetaOfType:
fetchRemoteMetaOfType:allowRetry:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
fetchRichDeviceUIDStringFromUUID:
fetchVoiceTriggerHeartBeatMetrics
fetchVoiceTriggerInfoWithAudioContext:triggerInfoProviding:resultVoiceTriggerInfo:resultRTSTriggerInfo:
fetchVoiceTriggerStats
fetchVolumeFromAVSystemControllerForAudioCategory:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileLoggingIsEnabled
fileOption
fileURLWithPath:
fileURLWithPath:isDirectory:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
filteredArrayUsingPredicate:
filteredAssetsForAssets:assetType:language:
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
filteredVoiceProfileArray:
finishAudio
firstAudioPacketTimestamp
firstAudioStartSampleCount
firstObject
firstPartialResultTime
firstPartyCall
firstPassDebuggingEnabled
firstPassInfoGeneratedTime
firstPassInfoProcessedTime
firstPassMyriadGoodnessScore
firstPassTriggerInfo
firstSpeechFrameAudioTsInMs
firstUnlockMonitor
firstWordDuration
firstpassMetrics
flexKwdConfigFile
flexKwdNode
flexKwdThresholdFile
floatValue
flush
forceMitigateForHybridSDSD
forceVoiceTriggerAPMode
gainCompensatedChunk
geckoAudioLogDirectory
generateAudioWithTexts:language:completion:
generateConfusionPairsWithUUID:parameters:language:task:samplingRate:recognizedTokens:recognizedText:correctedText:selectedAlternatives:completion:
generateEmptyPHash:writeFile:
generatePHashFromVoiceTriggerInfo:writeFile:
gestureMonitorDidReceiveSleepGesture:
gestureMonitorDidReceiveWakeGesture:
getASVUserIntent:
getAccmulatedProcessingTime
getAdBlockerAssetTypeString
getAdBlockerCurrentCompatibilityVersion
getAnalyzedResultsFromAudioChunk:
getAssetTypeForNamespace:
getAssetTypeStringForType:
getAttendingState
getAudioSessionState
getAveragePowerForStream:forChannel:
getBestAnalyzedResultsFromAudioChunk:
getBestSampleCountWithOption:
getBiometricMatchResultForTriggerTimeStamp:
getCSAssetOfType:
getCacheDirectoryForAppDomain:
getCategoryKeyWithRecordCtx:
getConnectedBluetoothDeviceAddressesWithCompletion:
getCoreSpeechServiceConnection
getCoreSpeechXPCConnection
getCurrentEndpointerAsset
getCurrentOSDAsset
getCurrentOSDFeatures
getCurrentSessionState
getCurrentStreamState:
getCurrentVoiceTriggerLocaleWithEndpointId:completion:
getElapsedTimeNoSpeechWithReply:
getEndPointAnalyzerTypeWithReply:
getEndpointAssetCurrentCompatibilityVersion
getEndpointAssetTypeString
getEndpointerModelVersionWithReply:
getFirstPassRunningMode
getFirstPassRunningMode:
getFixedHighPrioritySerialQueueWithLabel:priority:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFrameDurationMs
getHearstConnected:
getHearstRouted:
getHomeUserIdForSharedUserId:completion:
getHostClockFrequency
getIdleUserPreventSleepAssertionAcquitionDate
getInstalledAssetofType:forLocale:completion:
getJarvisConnected:
getLanguageDetectorAssetTypeString
getLanguageDetectorCurrentCompatibilityVersion
getLastBiometricMatchEvent:atTime:
getLastMitigationResult
getLastResult
getLatestSuperVector
getLatestUresFeaturesWithCompletion:
getLeadingUtteranceLogger
getLocalUrl
getMachTimeAdjustedVoiceTriggerEventInfoForDeviceUUID:
getMitigationAssetWithEndpointId:completion:
getMitigationDecisionForRCId:
getMitigationDecisionForRCIdWithCompletion:completion:
getNodeOfType:
getNumElementInBitset:
getNumberForKey:category:default:
getPeakPowerForStream:forChannel:
getProcessedAudioDurationMs
getRecordDeviceInfoForStream:
getRecordSettingsForStream:
getResourceValue:forKey:error:
getResultsFromFlushedAudio
getSSVDeviceType
getSerialQueue:qualityOfService:
getSerialQueue:withQualityOfService:andTargetQueue:
getSharedUserIdWithHighestVoiceIdScore:
getSiriInputSourceOutOfBand:
getSiriLanguageWithEndpointId:fallbackLanguage:
getSiriLanguageWithFallback:
getSpeakerRecognitionAssetTypeString
getSpeakerRecognitionCurrentCompatibilityVersion
getStringForKey:category:default:
getTestResponse:
getThreshold
getTranscriptionForSpeechPackage:
getTrialIdsForAssetType:withCompletion:
getTriggerCount:
getTriggerMode
getUresInputFeatures
getUsesAutomaticEndpointing
getValueForKey:category:
getVoiceTriggerAssetCurrentCompatibilityVersion
getVoiceTriggerAssetTypeString
getVoiceTriggerAssetWithEndpointId:completion:
getVoiceTriggerCurrentCompatibilityVersion
getVolumeForTTSType:withContext:reply:
getVolumeForTTSType:withOverrideMediaVolume:WithRequestTime:
getWirelessSplitterInfoWithCompletion:
getZeroStatisticsFromBuffer:entireSamples:
gibraltarVoiceTriggerHandler
hadSignalsFrom:to:
handleAttendingAudioStopUnexpectly
handleAudioStopUnexpectly
handleOtherAppRecordingStateChange:
handlePendingBuiltInVoiceTriggerIfNeeded
handlePendingRemoraVoiceTriggerIfNeeded
handleSiriRequest:deliveryHandler:completionHandler:
handleSpeechDetectionVADPresentChange:
handleVoiceTriggerWithActivationInfo:
handleXPCMessage:messageBody:client:
handleXPCMessage:messageBody:client:audioStreamHandleId:
hasConnectedAVCall
hasDarwinDeviceConnected
hasDarwinDeviceHandleVoiceTrigger
hasPendingTwoShotBeep
hasReceivedEarlyDetectNDEAPIResult
hasReceivedNDEAPIResult
hasRemoteBuiltInMic
hasReported
hash
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
hearstRTModelLocaleMap
hearstRTModelWithMajorVersion:minorVersion:locale:
hearstRouted
hepAudioOriginInMs
historicalBufferRequestStreams
holdAudioStreamWithDescription:timeout:
holdAudioStreamWithTimeout:
homeId
horsemanDeviceType
hostTime
hostTimeBuffer
hostTimeFromSampleCount:
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
hostTimeToSeconds:
hostTimeToTimeInterval:
hosttime
hybridClassifier
hybridClassifierQueue
hybridEndpointer
implDelegate
inUseServices
increaseSiriVolumeBasedOnUserIntent
inferenceTime
inferenceTimeSpan
init
initTandemWithOption:
initTandemWithRequest:
initWithAVVCRecordDeviceInfo:
initWithAnalyzeMode
initWithAppBundleIdentifier:
initWithArray:
initWithAssertionMonitor:
initWithAsset:assetConfig:firstPassSource:activeChannel:siriLanguage:shouldEnableShadowMicScore:
initWithAssetManager:withTrialAssetManager:withTrialDownloadMonitor:withLanguageCodeUpdateMonitor:withAssetOverrideFlag:withOverrideAssetPath:
initWithAttSiriController:
initWithAttSiriController:localSpeechRecognizer:isFileLoggingEnabled:
initWithAttSiriController:supportsAttentiveSiri:supportsSpeechRecognitionOnDevice:supportsSSR:
initWithAudioDeviceID:
initWithAudioRecorder:
initWithAudioStreamHandleId:audioStreamType:audioRecordContext:audioRecorder:
initWithAudioStreamHandleId:audioStreamType:audioRecordContext:audioRecorder:phoneCallStateMonitor:
initWithAudioStreamProvider:streamName:streamRequest:
initWithAudioURL:withScaleFactor:outASBD:
initWithBackingStoreCapacity:minimalNumberOfBackingStores:maximumNumberOfBackingStores:backingStoreIdleTimeout:
initWithBlob:
initWithBool:
initWithBytes:length:
initWithCapacity:
initWithCoder:
initWithConfig:error:
initWithConfig:error:locale:
initWithConfig:withDelegate:error:
initWithConfigFile:
initWithConfigFile:configRoot:sampleRate:delegate:queue:
initWithConfigFile:error:
initWithConfigFile:sampleRate:context:queue:delegate:
initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:
initWithConfiguration:
initWithConfiguration:modelVersion:
initWithConnection:
initWithContext:error:
initWithContext:withDelegate:error:
initWithCrashMonitor:
initWithData:
initWithData:hash:locale:
initWithData:hash:locale:digest:signature:certificate:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
initWithDelegate:
initWithDelegate:instanceUUID:
initWithDescription:
initWithDescription:timeout:
initWithDeviceId:audioStreamHandleId:
initWithDeviceType:deviceName:deviceID:productID:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDisableEndpointer:
initWithDomain:code:userInfo:
initWithDownloadOption:
initWithDroppingPrediction:droppedPrediction:timestamp:
initWithDuckOthers:duckToLevel:mixWithOthers:
initWithEndpointThreshold:
initWithEndpointerNode:osdNode:ssrNode:asrNode:uresNode:flexKwdNode:needsSSRNode:aFtmNode:speechDetectionNode:speechManager:siriEnabledMonitor:siriClientBehaviorMonitor:rcHandler:supportsAcousticProgressiveChecker:supportsUnderstandingOnDevice:requireASROnDevice:supportsHybridUnderstandingOnDevice:
initWithEndpointerNode:uresNode:
initWithError:
initWithFirstPassSource:deviceId:audioProviderUUID:firstPassInfo:rejectionMHUUID:isSecondChanceRun:firstpassMetrics:
initWithHash:locale:
initWithInASBD:outASBD:
initWithInitialState:
initWithInstanceContext:
initWithLanguage:assetType:
initWithLanguage:requestIdentifier:dictationUIInteractionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:codec:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:continuousListening:shouldHandleCapitalization:isSpeechAPIRequest:maximumRecognitionDuration:endpointStart:inputOrigin:location:jitGrammar:deliverEagerPackage:disableDeliveringAsrFeatures:enableEmojiRecognition:enableAutoPunctuation:enableVoiceCommands:sharedUserInfos:prefixText:postfixText:selectedText:powerContext:recognitionStart:
initWithLongLong:
initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:
initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:queue:
initWithMachServiceName:
initWithMachServiceName:options:
initWithMessage:makeAppFrontmost:
initWithMode:deviceUID:
initWithName:clientQueue:
initWithName:options:queue:delegate:
initWithNumChannels:recordingDuration:samplingRate:
initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:
initWithObjectsAndKeys:
initWithOverrideOption:reason:
initWithPattern:options:error:
initWithProtocolVersion:buildVersion:deviceProductVersion:deviceProductType:deviceCategory:
initWithQueue:error:
initWithRMSScore:lastSampleCount:
initWithRecordContext:deviceId:shouldUseRemoteRecorder:streamHandleId:
initWithRecordDeviceInfo:playbackRoute:playbackDeviceTypeList:
initWithRequestMHUUID:
initWithRequestMHUUID:turnIdentifier:
initWithRequestSource:
initWithRoute:isRemoteDevice:remoteDeviceUID:remoteDeviceProductIdentifier:
initWithRoute:isRemoteDevice:remoteDeviceUID:remoteDeviceProductIdentifier:remoteDeviceUIDString:
initWithSampleRate:withNumberOfChannels:
initWithSamplingRate:asset:
initWithScore:assetVersion:extractedFeats:
initWithServiceName:
initWithServicePort:
initWithSilenceFramesCountMs:silenceProbability:silenceDurationMs:processedAudioMs:
initWithSiriSessionUUID:
initWithSpeechManager:audioStreamProvider:streamName:streamRequest:
initWithStoredInformationAndAsset:
initWithStreamHandleId:
initWithStreamHandleId:withInputRecordingNumberOfChannels:
initWithStreamID:atStartHostTime:
initWithStreamID:settings:bufferDuration:
initWithSuiteName:
initWithTargetQueue:
initWithTaskDeliverer:
initWithTimeOut:
initWithTimeout:
initWithToken:sampleRate:numChannels:
initWithToken:score:startSampleID:endSampleId:
initWithTotalAudioRecorded:endpointBufferHostTime:featuresAtEndpoint:endpointerType:serverFeatureLatencyDistribution:additionalMetrics:trailingSilenceDurationAtEndpoint:
initWithType:
initWithType:deviceId:activationInfo:hosttime:
initWithType:deviceId:activationInfo:vadScore:hosttime:
initWithURL:
initWithURL:inputFormat:outputFormat:
initWithUTF8String:
initWithUUIDString:
initWithUnsignedLongLong:
initWithVoiceRecognitionContext:error:
initWithVoiceRetrainingContext:error:
initWithVoiceTriggerAssetDownloadMonitor:languageCodeUpdateMonitor:firstUnlockMonitor:trialAssetDownloadMonitor:assetManager:trialAssetManager:
initWithVoiceTriggerEventsCoordinator:
initWithVolumeEstimate:debugLogFile:
initWithWindowStartTime:
initWithWordCount:trailingSilenceDuration:endOfSentenceLikelihood:pauseCounts:silencePosterior:clientSilenceFramesCountMs:clientSilenceProbability:silencePosteriorNF:serverFeaturesLatency:
initWithWordCount:trailingSilenceDuration:endOfSentenceLikelihood:pauseCounts:silencePosterior:clientSilenceFramesCountMs:clientSilenceProbability:silencePosteriorNF:serverFeaturesLatency:eagerResultEndTime:
initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
initWithWordCount:trailingSilenceFrames:endOfSilenceLikelihood:pauseCounts:silencePosterior:taskName:
initWithXPCConnection:
initWithXPCObject:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
initialState
initialize
initializeAlarmState
initializeMediaPlayingState
initializeTimerState
injectAudio:
injectAudio:toDeviceWithUUID:withScaleFactor:completion:
injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:
injectAudio:withScaleFactor:playbackStarted:completion:
injectionAudioFileList
injectionStartNotifyBlocks
inputOrigin
inputRecordingBufferDuration
inputRecordingDuration
inputRecordingDurationInSecs
inputRecordingDurationInSecsExtended
inputRecordingIsFloat
inputRecordingNumberOfChannels
inputRecordingSampleBitDepth
inputRecordingSampleByteDepth
inputRecordingSampleRate
inputRecordingSampleRateNarrowBand
installedAssetForCurrentLanguageOfType:
installedAssetForCurrentLanguageOfType:completion:
installedAssetOfType:language:
installedAssetOfType:language:completion:
installedAssetOfType:withLanguage:
installedAssetOfType:withLanguage:completion:
installedVoiceTriggerAssetForLanguageCode:completion:
intValue
integerValue
interactiveLocalSpeechRecognizer
interfaceWithProtocol:
interspeechWaitTime
invalidate
isASRFeatureFromServer
isAdBlockerAudioLoggingEnabled
isAirpodsConnected
isAlertBehaviorOverridedBeep
isAnalyzeMode
isAnchorTimeBuffered
isAttachingBluetoothSession
isAttending
isAttendingForDictation
isAttentiveSiriAudioLoggingEnabled
isAttentiveSiriEnabled
isAvailable
isBluetooth
isBluetoothVehicleOutput
isBuiltInVoiceTriggered
isBuiltinSpeakerMuted
isBultInVoiceTriggerEvent:
isCSAssetInstalled
isConnected
isDarwinOS
isDarwinVoiceTriggered
isDefaultInputBuiltInMic
isDefaultOutputBultInSpeaker
isDictation
isDownloading
isDuckingSupportedOnCurrentRouteWithStreamHandleID:error:
isDuckingSupportedOnPickedRouteForStream:error:
isEarlyDetect
isEnabled
isEndpointAssetBypassTrialEnabled
isEndpointAssetOverridingEnabled
isEndpointEnhancedLoggingEnabled
isEqual:
isEqualAsset:
isEqualToNumber:
isEqualToString:
isFileLoggingEnabled
isForwarding
isHFPWithRecordRoute:
isHSVoiceTrigger:
isHeadlessDeviceDataCollectionModeEnabled
isHeadphoneDeviceWithRecordRoute:playbackRoute:
isHearstDoubleTapTriggered
isHearstRouted
isHearstVoiceTriggered
isHomePressed
isIOSDeviceSupportingBargeIn
isInternalWithoutProfile
isJarvisVoiceTriggered
isKindOfClass:
isLatestCompareTo:
isListenPollingStarting
isListening
isLocalVoiceTriggerAvailable
isMediaPlayingNow
isMemberOfClass:
isMitigationAssetOverridingEnabled
isModelBenchmarkingEnabled
isNarrowBand
isOpportuneSpeakListening
isOtherNonEligibleAppRecording
isP2PTransferEnabled
isPhraseSpotterBypassed
isPluginDevice
isPremium
isPresent
isPrimaryVoiceTriggerDeviceWithUUID:
isRTSTriggered
isRaiseToSpeakBypassed
isReceivedTimeInterval:matchCurrentTimeInterval:
isRecordContextAutoPrompt:
isRecordContextBuiltInVoiceTrigger:
isRecordContextDarwinVoiceTrigger:
isRecordContextHearstVoiceTrigger:
isRecordContextJarvisButtonPress:
isRecordContextJarvisVoiceTrigger:
isRecordContextRaiseToSpeak:
isRecordContextRemoraVoiceTrigger:
isRecordContextSpeakerIdTrainingTrigger:
isRecordContextVoiceTrigger:
isRecording
isRecordingWithRecordDeviceIndicator:
isRemoraButtonPress
isRemoraVoiceTriggerEvent:
isRemoraVoiceTriggered
isRemoteDarwinConnectedWithUUID:
isRemoteDarwinWithDeviceId:
isRemoteDevice
isRemoteDeviceDarwin
isRemoteDeviceGibraltar
isRequestDuringActiveCall
isRequestTimeout
isRestricted
isScreenLocked
isSecondChanceRun
isSecondPassRunning
isSelfTriggerEnabledAccessory
isSessionCurrentlyActivated
isShadowModeEnabled
isSiri
isSiriClientConsideredAsRecord
isSpeakerMuted
isSpeakerRecognitionAvailable
isSpeaking
isSpringboardStarted
isStarkTriggered
isStreaming
isTemporaryPairedNotInContacts
isTriggerHandheld
isUpsamplingSourceAudio
isUserActive
isValidRecordContext:
isVoiceTriggerAssetOverridingEnabled
isVoiceTriggerInfoAvailableLocally:
isVoiceTriggered
isWakeGestureAvailable
isWatchRTSTriggered
isWeakStream
isiOSButtonPress
iterateBitset:block:
jarvisRTModelLocaleMap
jarvisVoiceTriggerEvent:activationInfo:hostTime:
jitGrammar
kSSVCAUserIntentPermanentOffsetFactorDelta
kSSVCAUserIntentPermanentOffsetFactorLowerBound
kSSVCAUserIntentPermanentOffsetFactorUpperBound
kSSVCAUserIntentVolumeDecreaseFactor
kSSVCAUserIntentVolumeIncreaseFactor
kSSVCA_DEVICE_DEFAULT_MAX_TTS_VOLUME
kSSVCA_DEVICE_DEFAULT_MIN_TTS_VOLUME
kSSVCA_DEVICE_SIMPLE_MAX_TTS_VOLUME
kSSVCA_DEVICE_SIMPLE_MIN_TTS_VOLUME
keepAliveDirectory
keepAlivePath
keysOfEntriesPassingTest:
keysSortedByValueUsingComparator:
keywordAnalyzerNDEAPI
keywordAnalyzerNDEAPI:hasResultAvailable:forChannel:
keywordDetectorNDAPIConfigFilePath
keywordDetectorQuasarConfigFilePath
kwdScore
kwdSpotter
language
languageCode
languageCodeDarwin
languageCodeUpdateMonitor
lastAggTimeFalseWakeUp
lastAudioRecorderContext
lastCommunicatedPeer
lastDetectedVoiceTriggerBeginSampleCount
lastEndOfVoiceActivityTime
lastEndpointEagerResultTime
lastEndpointHintDuration
lastEndpointHintFeatures
lastEndpointHintRCId
lastEndpointPosterior
lastForwardedSampleCount
lastHash
lastInputFeats
lastKnowServerFeaturesLatency
lastKnownConsecutiveBoronStartSampleCount
lastKnownOSDFeatures
lastKnownServerEPFeatures
lastObject
lastPathComponent
lastReportedEndpointTimeMs
lastServerFeatureTimestamp
lastSilencePosterior
lastStartOfVoiceActivityTime
latestContext
latestHearstRTModelForLocale:
latestPluginStreamId
latestResult
latestVolume
latestVolumeTime
latticeMitigatorResult
launchSiriDebugAppWithMessage:
leadingSilenceDuration
leadingUtteranceAudioFile
leadingUtteranceLogger
leave
length
listen
listenPollingTimer
listenPollingTimerCount
listener
listener:shouldAcceptNewConnection:
listeningEnabledCompletionBlock:
localDevice
localDevice:event:result:
localDeviceProtocolInfo
localSRBridgeListener
localSpeechRecognitionListener
localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:
localSpeechRecognizer:didProcessAudioDuration:
localSpeechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
localSpeechRecognizer:didProduceLoggablePackage:
localSpeechRecognizer:didRecognizeFinalResultCandidatePackage:
localSpeechRecognizer:didRecognizePackage:
localSpeechRecognizer:didRecognizePackage:withMetadata:
localSpeechRecognizer:didRecognizeTokens:
localSpeechRecognizer:didRecognizeTokens:withMetadata:
localSpeechRecognizer:didSelectRecognitionModelWithModelProperties:
localSpeechRecognizerDeliverAudioDuration
localSpeechRecognizerQueue
localSpeechRecognizerState
localSpeechServiceDidCompletionRecognitionWithStatistics:requestId:endpointMode:error:
localSpeechServiceDidReceivedEagerRecognitionCandidateWithRequestId:rcId:speechPackage:duration:
localSpeechServiceDidReceivedEagerRecognitionCandidateWithRequestId:rcId:speechPackage:duration:metadata:
localSpeechServiceDidReceivedEagerResultWithRequestId:rcId:shouldAccept:mitigationSignal:featuresToLog:
localSpeechServiceDidReceivedFinalResultCandidateWithRequestId:speechPackage:
localSpeechServiceDidReceivedFinalResultWithRequestId:speechPackage:
localSpeechServiceDidReceivedFinalResultWithRequestId:speechPackage:metadata:
localSpeechServiceDidReceivedPartialResultWithRequestId:language:tokens:
localSpeechServiceDidReceivedPartialResultWithRequestId:language:tokens:metadata:
localSpeechServiceDidReceivedVoiceIdScoreCard:
locale
localeMapWithName:
localeWithLocaleIdentifier:
localizedDescription
localizedRecoverySuggestion
location
logAOPFirstPassTriggerWakeupLatency:
logAnchorMachAbsTime:numSamplesProcessedBeforeAnchorTime:isAnchorTimeBuffered:
logEventWithType:context:
logEventWithType:machAbsoluteTime:context:
logFalseWakeUp:withPhrase:
logFeaturesWithEvent:locale:
logHybridEndpointFeaturesWithEvent:locale:
logMHOdldFalseTriggerMitigationScores:
logMitigationFeatures:forTask:withModelOutput:forMHRequestId:
logSecondPassResult:eventInfo:triggerAPWakeUp:
logSiriLaunchCompletedWithVoiceTriggerEventInfo:
logSiriLaunchStartedWithVoiceTriggerEventInfo:
logSpeakerFalseTriggerMitigationScore:
logTriggerLengthSampleCountStatistics:withFirstPassDeterministicTriggerLengthSampleCount:
loggingFilePathWithDirectory:token:postfix:
loggingQueue
longLongValue
lpcmASBD
lpcmBitDepth
lpcmFloatASBD
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
lpcmInterleavedASBD
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedWithRemoteVADASBD
lpcmIsFloat
lpcmMonoInterleavedASBD
lpcmNarrowBandASBD
lpcmNonInterleavedASBD
lpcmNonInterleavedWithRemoteVADASBD
machXPCConnection:hasEntitlement:
mainRunLoop
makeStandaloneMitigation
manualDuckingHandler
mapTableWithStrongToStrongObjects
maxAllowedEnrollmentUtterances
maxFingerprintBufferSize
maximumRecognitionDuration
mediaPlayingState
mediaPlayingStateWithCompletion:
mediaserverdLaunchedEvent:
mhId
mhLogDirectory
micUsageReporter
minimumDurationForEndpointer
mitigationConfigFileForCategory:
mitigationDecisions
mitigatonConfigFile
mitigator
modelData
modelExeQueue
modelHash
modelLocale
modelRoot
moveItemAtPath:toPath:error:
multiUserConfidentScoreThreshold
multiUserDeltaScoreThreshold
multiUserHighScoreThreshold
multiUserLowScoreThreshold
musicVolume
musicVolumeWithCompletion:
mutableBytes
mutableCopy
myriadHashFilePath
name
narrowBandOpusConverter
needsBoost12dB
newVoiceProfileWithLocale:withAppDomain:
newlineCharacterSet
nldaClassifierNode
nldaConfigFile
nldaConfigFileForCategory:
nldaMetaInfo
noAlertOption
nodesCache
notifyActivationEvent:completion:
notifyActivationEvent:deviceId:activationInfo:completion:
notifyActivationEventSynchronously:completion:
notifyBluetoothDeviceVoiceTrigger:deviceId:completion:
notifyBluetoothDeviceVoiceTriggerPrewarm:deviceId:completion:
notifyBuiltInVoiceTrigger:myriadPHash:completion:
notifyBuiltInVoiceTriggerPrewarm:completion:
notifyCallbackWithOption:
notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:
notifyCarPlayVoiceTriggerPrewarm:deviceId:completion:
notifyClientsWithBlock:
notifyDaemonStateChanged:
notifyDarwinVoiceTrigger:deviceId:myriadPHash:myriadLateActivationExpirationTime:completion:
notifyDarwinVoiceTriggerPrewarmWithCompletion:
notifyDidStartStreamWithContext:audioProviderUUID:successfully:option:
notifyDidStartStreamWithContext:successfully:option:
notifyDidStartStreamWithContext:successfully:option:withEventUUID:
notifyDidStartStreamWithContext:successfully:option:withEventUUID:forAccessory:
notifyDidStopStream:
notifyDidStopStream:reason:withEventUUID:forAccessory:
notifyDidStopStream:withEventUUID:
notifyFetchedSiriClientAudioStream:successfully:
notifyHashlessTrigger:
notifyImplicitTrainingUtteranceAvailable:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:assetToUse:withCompletion:
notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:
notifyInEarMyriadTrigger
notifyNewVoiceTriggerAssetMetaDataUpdated
notifyObserver:didChangeStateFrom:to:
notifyObserver:didReceiveNotificationWithToken:
notifyObservers:endpointId:
notifyPreparedSiriClientAudioStream:successfully:
notifyProviderContextChanged
notifyReleaseAudioSession
notifyRemoraVoiceTrigger:myriadPHash:deviceId:completion:
notifyRemoraVoiceTriggerPrewarm:deviceId:completion:
notifyServiceConnectionLost
notifySiriLanguageCodeChanged:
notifySiriSessionStateChange:
notifySiriSessionStateTTSOngoing:
notifyVoiceTriggerAssetChanged
notifyVoiceTriggerDisabledWithDeviceUUID:
notifyVoiceTriggerEnabledWithDeviceUUID:
notifyVoiceTriggeredSiriSessionCancelled
notifyWakeKeywordSpokenBluetoothDevice:deviceId:
notifyWakeKeywordSpokenCarPlay:deviceId:
notifyWakeKeywordSpokenInBuiltInMic:
notifyWakeKeywordSpokenRemora:deviceId:
notifyWillStartStreamWithContext:audioProviderUUID:option:
notifyWillStartStreamWithContext:option:
notifyWillStartStreamWithContext:option:forAccessory:
notifyWillStopStream:
notifyWillStopStream:reason:
notifyWillStopStream:reason:forAccessory:
numChannels
numFalseWakeUp
numInputChannels
numOfAVVCRecordingClients
numOfAudioPackets
numOfChunksReceived
numOfConsecutiveBoronActivationThreshold
numOfValidTrailingPackets
numSamples
numSamplesProcessed
numSamplesProcessedBeforeAnchorTime
numberOfChannels
numberOfTotalFramesETFT
numberOfVoicingFrames
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
observers
odldModelAnalyzer
odldProcessor
odldScore
oneBestTokenList
oneBestTranscript
opportuneSpeakBehaviorMonitor:didStartStreamWithContext:audioProviderUUID:successfully:option:
opportuneSpeakBehaviorMonitor:didStopStream:
opportuneSpeakBehaviorMonitor:willStartStreamWithContext:audioProviderUUID:option:
opportuneSpeakBehaviorMonitor:willStopStream:
opportuneSpeakEventMonitor:didStreamStateChanged:
opportuneSpeakListener:didStopUnexpectly:
opportuneSpeakListener:hasRemoteVADAvailable:
opportuneSpeakListener:hasVADAvailable:
opportuneSpeakListener:hasVADAvailable:withHostTime:
opportuneSpeakListenerBypassEnabled
opportuneSpeakListeningType
opportuneSpeakListnerTestService
opportuneSpeakingFileLoggingIsEnabled
opusASBD
opusConverter
opusNarrowBandASBD
osTransaction
osdAnalyzer
osdAnalyzer:didDetectEndOfSpeechAt:
osdAnalyzer:didDetectStartOfSpeechAt:
osdAnalyzer:didUpdateOSDFeatures:
osdFeaturesAtEndpoint
osdQueue
overrideModelPath
overridePath
pHash:length:
pNonInterleavedABL
packetDescriptionCount
packetDescriptions
pairedDeviceAddresses
path
pathExtension
pause
pauseCounts
pauseLocalSpeechRecognitionForRequestId:
pauseRecognition
payloadData
peakPowerForChannel:
pendingActivationEvent
pendingBuiltInVoiceTriggerCompletionBlk
pendingBuiltInVoiceTriggerDetectedTime
pendingBuiltInVoiceTriggerResult
pendingCompletion
pendingRecordingStopUUID
pendingRemoraVoiceTriggerCompletionBlk
pendingRemoraVoiceTriggerDetectedTime
pendingRemoraVoiceTriggerDeviceId
pendingSecondPassTriggerWasClearedForClient:deviceId:
pendingStartCompletions
pendingStopCompletions
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTransitionForEvent:
permanentOffsetFactor
permanentOffsetIsEnabled
phoneCallState
phoneCallStateMonitor
phraseSpotterEnabled
pickTopScoringProfileIdFromScores:
pickableRoutesDidChange:
pickedRoute
pingpong:
pingpong:completion:
platformSupportsImplicitUttAddition
playAlertSoundForType:
playAlertSoundForType:overrideMode:
playAlertSoundForType:recordDevideIndicator:
playRecordStartingAlertAndResetEndpointer
playRecordStartingAlertAndResetEndpointerFromStream:
playbackDeviceTypeList
playbackRoute
postBuildInstallService
postfixText
powerContext
powerLogSiriConfigWithVoiceTriggerEnabled:withLanguage:withModelVersion:
powerLoggingCurrentAssetConfigVersion
powerLoggingCurrentLanguage
powerWithNumFalseWakeup:withDuration:withPhraseDict:
predicateWithBlock:
preferredExternalRouteDidChange:
prefixText
preheatLocalSpeechRecognitionWithLanguage:source:
preheatSpeechRecognitionWithAssetConfig:preheatSource:modelOverrideURL:
preheatWithLanguage:shouldDownloadMissingAsset:
prepareAudioProviderWithContext:clientType:error:
prepareAudioStream:request:completion:
prepareAudioStreamRecord:recordDeviceIndicator:error:
prepareAudioStreamSync:request:error:
prepareAudioStreamSyncWithRequest:error:
prepareAudioStreamWithRequest:completion:
prepareRecordForStream:error:
prepareRecording:
prepareSoundLevelBufferFromSamples:soundType:firedVoiceTriggerEvent:triggerStartTimeSampleOffset:triggerEndTimeSampleOffset:
prepareToStartSpeechRequestWithStartStreamOption:audioRecordContext:voiceTriggerInfo:
presetLocalSpeechRecognizer
preventSystemSleepPowerAssertion
prewarmAudioSessionWithError:
prewarmAudioSessionWithStreamHandleId:error:
primaryInputDevice
primaryInputDeviceUUIDWithCompletion:
primaryStream
processASRFeatures:fromServer:
processASRFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:fromServer:
processAudio:withNumberOfSamples:
processAudioBytes:withNumberOfSamples:
processAudioChunk:
processAudioChunk:activeChannel:
processAudioSamplesAsynchronously:
processBuffer:atTime:
processBuffer:atTime:arrivalTimestampToAudioRecorder:
processFirstAudioPacketTimestamp:firstAudioSampleSensorTimestamp:
processIdentifier
processInfo
processInputFeats:completion:
processInputText:
processInputUtterance:
processOSDFeatures:withFrameDurationMs:
processRCWithId:duration:lrnnScore:lrnnThreshold:taskId:forceAccept:completionHandler:
processRemoteCommandWithPayload:fromPeer:withReply:
processResultCandidate:forRCId:forTask:completion:
processSampleCount:hostTime:
processServerEndpointFeatures:
processServerFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
processSpeechPackage:
processSpeechPackageAsync:
processSpeechPackageSync:
processTaskString:
processedAudioDurationInMilliseconds
processedAudioInSeconds
processedAudioMs
productIdentifier
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileID
profileId
progCheckerConfigFile
progCheckerShadowMode
programmableAudioInjectionEnabled
propertyDictForDarwin
providerDelegate
provisionedVoiceProfilesForAppDomain:withLocale:
provisionedVoiceProfilesForLocale:
proxy
pruningExplicitUttThresholdPSR
pruningExplicitUttThresholdSAT
pruningNumRetentionUtterance
pruningThresholdPSR
pruningThresholdSAT
psrAudioProcessor
psrCombinationWeight
purgeSync
queryMetaData:
queryMetaDataSync
queryParams
queue
raiseToSpeakDetected:
rangeOfFirstMatchInString:options:range:
rawRecognition
rcHandler
rcProcessingListener
readAudioChunksFrom:block:
readSamplesFromChannelIdx:
readSpeakerIdScoreOverrrideConfig
receiveOpportuneSpeakListenerStart
receiveOpportuneSpeakListenerStop
receivers
recognition
recognitionOverrides
recognizer
recognizerBuffer
recordContext
recordContextString:
recordCtx
recordDeviceIndicator
recordDeviceInfo
recordDeviceInfoWithStreamHandleId:recordDeviceIndicator:
recordQueue
recordRoute
recordRouteWithRecordDeviceIndicator:
recordSettings
recordSettingsWithStreamHandleId:
recordTypeString:
recordingDidStop
recordingSampleRateWithStreamHandleId:
recordingStartTime
recordingStoppedForReason:
recordingToken
recordingTransaction
recordingWillStartGroup
registerANECompilationActivity
registerAssetDelegate:assetType:
registerEndpointerNode:
registerNLDAClassifierNode:
registerOSDNode:
registerObserver:
registerSSRNode:
registerSiriClientProxy:
registerSpeechController:
registerUresNode:
registerXPCActivities
releasePreventSystemSleepAssertion
remoraRTModelLocaleMap
remoraRTModelWithMajorVersion:minorVersion:locale:
remoraSecondPassProgressProvider
remoraVoiceTriggerEvent:activationInfo:hostTime:
remoraVoiceTriggerEvent:hostTime:
remoteAccessoryStreamIdSet
remoteDarwinVoiceTriggerEnabledPolicy
remoteDeviceProductIdentifier
remoteDeviceUIDString
remoteGradingDataDirectory
remoteMicVADEvent:vadScore:hostTime:
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
remoteObjectProxy
remoteP2pLogDirectory
remoteProductIdentifier
remoteRecordConnectionDisconnected:
remoteRecordDidStartRecordingWithStreamHandleId:error:
remoteRecordDidStopRecordingWithWithStreamHandleId:error:
remoteRecordLPCMBufferAvailable:streamHandleId:
remoteRecordTwoShotDetectedAtTime:
remoteVAD
remoteVADAlignBuffer
remoteVADAlignCount
remoteVADDuration
remoteVADSPGRatio
remoteVoiceActivityAvailable
remoteVoiceActivityVAD
remoteVoiceActivityVADBuffer
removeAllObjects
removeItemAtPath:error:
removeLogFilesOlderThanNDays:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:forAssetType:
removeObserver:name:object:
removeOpportunisticAudioLoggingOlderThanNDays:
removeRemoteP2PLogFilesOlderThanNDays:
replaceBytesInRange:withBytes:
replaceBytesInRange:withBytes:length:
replaceMatchesInString:options:range:withTemplate:
report
reportDigitalZerosWithAudioZeroRun:
reportEndpointDelayIfNeed
reportMetricsForSiriRequestWithUUID:
reportServerEndpointWithMhId:
reportsDynamicActivityAttribute:bundleId:
reportsDynamicActivityAttributeAsync:bundleId:
reportsDynamicActivityAttributeSync:bundleId:
reqSrc
requestForLpcmRecordSettingsWithContext:
requestForOpusRecordSettingsWithContext:
requestForSpeexRecordSettingsWithContext:
requestHistoricalAudioDataSampleCount
requestHistoricalAudioDataWithHostTime
requestId
requestMHUUID
requestSupportedWithSamplingRate:
requestUpdatedSATAudio
requestUpdatedSATAudio:
requireSingleChannelLookup
requiredNodes
requiresHistoricalBuffer
reset
resetCacheAndCompileAllAssets
resetDuckSettings
resetDucking
resetForNewRequest
resetForNewRequestWithRecordContext:endpointerSettings:voiceTriggerInfo:
resetForNewRequestWithRecordContext:endpointerSettings:voiceTriggerInfo:osdMode:
resetForNewRequestWithRecordContext:voiceTriggerInfo:
resetForNewRequestWithSampleRate:recordContext:
resetForNewRequestWithSampleRate:recordContext:recordOption:voiceTriggerInfo:
resetForVoiceTriggerTwoShotWithSampleRate:
resetWithSampleRate:
resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:
resourcePath
respondsToSelector:
resultType
resume
resumeConnection
resumeLocalRecognitionWithRequestId:prefixText:postfixText:selectedText:
resumeRecognitionWithPrefixText:postfixText:selectedText:
retain
retainCount
returnTypes:
rmsSamplesForEntireAudio
rootQueueWithFixedPriority:
route
rtModelLocaleMapWithModelType:
rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:
rtsTriggerInfo
runAudioInjectionOnly:completion:
runLstmPhsModelWithConfig:withUrl:withConfigRoot:completion:
runMitigationForRCId:withScore:threshold:task:completion:
runNovDetectorWithConfig:configRoot:withUrl:completion:
runODLDModelWithConfig:locale:inputText:completion:
runOSDAnalyzerWithConfig:withUrl:completion:
runVTSecondPassModelWithConfig:locale:withUrl:completion:
runningSampleCount
sampleCount
sampleCountFromHostTime:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
sampleRate
samplesFed
satImplicitProfileDeltaThreshold
satImplicitProfileThreshold
satImplicitTrainingEnabled
satScoreThreshold
satScoreThresholdForPhId:
satVTImplicitThreshold
saveAudioChunck:toURL:
saveRecordingBufferFrom:to:toURL:
saveRecordingBufferToEndFrom:toURL:
saveSamplesSeenInReset
scaleFactor
scheduledFutureSample
score
secondChanceHotTillMachTime
secondPassAssetLoadStartTime
secondPassAssetQueryCompleteTime
secondPassAssetQueryStartTime
secondPassAudioStreamReadyTime
secondPassAudioStreamStartTime
secondPassCheckerModelKeywordDetectionEndTime
secondPassCheckerModelKeywordDetectionStartTime
secondPassDidStartForClient:deviceId:withFirstPassEstimate:
secondPassDidStopForClient:deviceId:
secondPassFirstAudioPacketReceptionTime
secondPassLastAudioPacketReceptionTime
secondsToHostTime:
secureOfflineOnly
selectedText
self
selfTriggerDetector:didDetectSelfTrigger:
sendAcousticGradingDataToNearbyPeer
sendCoreSpeechGradingDataToNearbyPeer
sendGeckoSpeechLogsToCompanion
sendMessageAndReplySync:error:
sendMessageAsync:completion:
sendMessageToClient:
sendMessageWithPayload:toPeer:withReply:
sendSpeechCorrectionInfo:interactionIdentifier:
sendVTNearMissGradingDataToCompanion
sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:
serverFeatureLatencies
serverFeatureLatencyDistribution
serverFeaturesLatency
serverFeaturesQueue
serverFeaturesWarmupLatency
serverState
servicesListener
sessionEventDelegate
sessionForContext:error:
sessionInProgress
sessionInfoQueue
setAFTMNode:
setASRModelRootDirectory:
setASVUserIntent:
setAVVCAlertBehavior:
setAccessoryVoiceTriggerMetaDataByDeviceId:
setAcousticAnalyzer:
setAcousticFTMScores:
setActivateEndTime:
setActivateStartTime:
setActivationAssertions:
setActivationExpirationTime:
setActivationMode:
setActivationSource:
setActivationXpcListener:
setActive:error:
setActive:withOptions:error:
setActiveChannel:
setActiveEndpointer:
setAdCompanionServiceProvider:
setAdditionalMetrics:
setAddress:
setAdpAssertion:
setAlertDelegate:
setAlertPlaybackFinishTimeoutToken:
setAlertPlaybackFinishWaitingCompletions:
setAlertPlaybackFinishWaitingStreams:
setAlertSoundFromURL:forType:
setAlertSoundFromURL:forType:force:
setAlignBufferQueue:
setAllFramesInferenceLatency:
setAllProcessorsAsNil
setAllowAdBlockerAssetDownloading:
setAllowEndpointAssetDownloading:
setAllowLanguageDetectorAssetDownloading:
setAllowMixableAudioWhileRecording:error:
setAllowSpeakerRecognitionAssetDownloading:
setAllowVocabList:
setAllowVoiceTriggerAccessoryAssetDownloading:
setAllowVoiceTriggerAssetDownloading:
setAllowsCellularAccess:
setAnchorMachAbsTime:
setAnnounceCallsEnabled:
setAnnounceCallsEnabled:withStreamHandleID:
setAnnounceCallsEnabledForStream:enable:
setApQueue:
setAsrDatapackInstallationStatus:
setAsrNode:
setAsrResultDeliveryTransaction:
setAssertionMonitor:
setAsset:
setAssetDownloadingOption:
setAssetManager:
setAssetQueryQueue:
setAssetsMigrationQueue:
setAttSiriConnectionManager:
setAttSiriController:
setAttSiriSvcListener:
setAttSiriTransaction:
setAttendingState:
setAttributes:ofItemAtPath:error:
setAtvRemoteDeviceID:
setAudioAlertDelegate:
setAudioAlertProvider:
setAudioAlertProvidingProxy:
setAudioFeedTimer:
setAudioFileWriter:
setAudioInjectionEngine:
setAudioInjectionEngines:
setAudioInjectionXpcListener:
setAudioLoggingBuffer:
setAudioMeterProvider:
setAudioMeterProvidingProxy:
setAudioMetricProvider:
setAudioMetricProvidingProxy:
setAudioPacketDeliveryCount:
setAudioPacketWatchdog:
setAudioPreprocessor:
setAudioProviderDelegate:
setAudioProviderUUID:
setAudioProviders:
setAudioRecordContext:
setAudioRecorder:
setAudioRouteChangeMonitor:
setAudioSampleCountToSkip:
setAudioServerCrashEventDelegate:
setAudioSessionDelegate:
setAudioSessionEventDelegate:
setAudioSessionInfoObservers:
setAudioSessionInfoProvider:
setAudioSessionInfoProvidingProxy:
setAudioSessionProvider:
setAudioSessionProvidingDelegate:
setAudioSessionProvidingProxy:
setAudioSessionState:
setAudioSrcNode:
setAudioStreamHandleId:
setAudioStreamHolding:
setAudioStreamId:
setAudioStreamProvider:
setAudioStreamProvidingDelegate:
setAudioStreamProvidingForProxy:
setAudioStreamProvidingProxy:
setAudioStreamType:
setAudioSystemRecovering:
setAudioTapProvider:
setAudioTimeConverter:
setAudioWaitingBuffer:
setAutomaticEndpointingSuspensionEndTime:
setAvgPower:
setBeepCanceller:
setBenchmarkXpcListener:
setBertModel:
setBestEarlyDetectSample:
setBestEndDetectSample:
setBestStartDetectSample:
setBluetoothSession:
setBluetoothSessionSetupGroup:
setBoronScore:
setBufferDuration:
setBuiltInDevice:
setBuiltInSeconPassProgressProvider:
setBuiltInSpeakerState:
setBundleTvRemote:
setBypassSamples:
setCachedEndpointAssets:
setCachedEndpointerInfo:
setCachedMitigationDecision:
setCachedResult:
setCachedScoresForLogging:
setCaesuraSPG:
setCallback:
setCanProcessCurrentRequest:
setCanUseLocalCacheServer:
setCcProfile:
setCesrXPCActvity:
setCircularBuffer:
setCircularBufferStartSampleCount:
setClampedSFLatencyMsForClientLag:
setClasses:forSelector:argumentIndex:ofReply:
setClearLoggingFileTimer:
setClearLoggingFileTimerCount:
setClientConnections:
setClientController:
setClientLagThresholdMs:
setClientType:
setCompletion:
setCompletionBlock:
setConfigFile:
setConnectedDevice:
setConnectedDeviceAddresses:
setConnectedDevices:
setConnection:
setContext:
setContext:completion:
setContext:streamType:error:
setContextForStream:forStream:error:
setCorespeechServiceListener:
setCountOfConsecutiveBoron:
setCrashEventDelegate:
setCsAssetsDictionary:
setCsXPCActivity:
setCurrReqFirstSampleId:
setCurrentAsset:
setCurrentAttributionKey:andApp:
setCurrentContext:error:
setCurrentContext:streamHandleId:error:
setCurrentHEPAsset:
setCurrentMaximumBufferSize:
setCurrentOEPAsset:
setCurrentRequestSampleRate:
setCurrentSessionShouldDuckOnBuiltInSpeaker:
setCurrentState:
setDarwinVoiceTriggerHandlerPool:
setDataBufferNDEAPI:
setDataBufferPositionNDEAPI:
setDateFormat:
setDeactivateEndTime:
setDeactivateStartTime:
setDecisionStage:
setDecoderProcessedSampleCountForTV:
setDecodersForTV:
setDeinterleaver:
setDelay:
setDelayInterstitialSounds:level:completion:
setDelegate:
setDelegate:forType:
setDelegates:
setDetectedEndpointTime:
setDetectedToken:
setDeviceId:
setDidCommunicateEndpoint:
setDidDetectSpeech:
setDidDetectSpeechActivity:
setDidDetectedEndpoint:
setDidReceiveServerFeatures:
setDidReportEndpointDelay:
setDidSetScaleFactor:
setDidStartDelayInSeconds:
setDidTimestampFirstAudioPacket:
setDidTrigger:
setDisableBoostForDoAP:
setDisableEndpointer:
setDisableLocalSpeechRecognizer:
setDisablePrewarmLocalAsrAtStartRecording:
setDiscretionary:
setDismissalTimestamp:
setDuckMixWithOthersForStream:duckOthers:duckToLevelInDB:mixWithOthers:
setDuckOthersForStream:withSettings:error:
setDuckOthersOption:
setDuckOverride:
setDuckToLevelDB:error:
setEagerResultId:
setElapsedTimeWithNoSpeech:
setEnable:
setEnableAlwaysOnVoiceTrigger:
setEnablePolicy:
setEnabled:
setEncoder:
setEncoderBitRate:
setEndPointerMetrics:
setEndpointBufferHostTime:
setEndpointDelayReporter:
setEndpointLatencyInfo:
setEndpointLatencyQueue:
setEndpointMode:
setEndpointStartTimeInSec:
setEndpointStyle:
setEndpointThreshold:
setEndpointTime:
setEndpointTimeInMs:
setEndpointerDelegate:
setEndpointerFeatureEoS:
setEndpointerImplDelegate:
setEndpointerListener:
setEndpointerModelVersion:
setEndpointerNode:
setEndpointerOperationMode:
setEndpointerType:
setEosLikelihood:
setEpResult:
setErrorAlertBehavior:
setEstimatedStartHostTime:
setEventToStateTransitions:
setExportedInterface:
setExportedObject:
setExtraDelayFrequency:
setFFile:
setFallbackAudioSessionProvidingProxy:
setFallbackAudioSessionReleaseProvider:
setFalseWakePhraseDictionary:
setFeaturesAtEndpoint:
setFileOption:
setFirstAudioPacketTimestamp:
setFirstAudioSampleSensorTimestamp:
setFirstAudioStartSampleCount:
setFirstPartialResultTime:
setFirstPassMyriadGoodnessScore:
setFirstPktLatency:
setFirstUnlockMonitor:
setFirstWordDuration:
setFp:
setFrameDurationMs:
setGibraltarVoiceTriggerHandler:
setHasReceivedEarlyDetectNDEAPIResult:
setHasReceivedNDEAPIResult:
setHepAudioOriginInMs:
setHistoricalBufferRequestStreams:
setHostTimeBuffer:
setHybridClassifier:
setHybridClassifierQueue:
setHybridEndpointer:
setIAmTheAssistant:error:
setIdleUserPreventSleepAssertionAcquitionDate:
setImplDelegate:
setInUseServices:
setInferenceTimeSpan:
setInitialContext:
setInitialState:
setInjectionAudioFileList:
setInjectionCompletionNotifyBlocks:
setInjectionEngine:
setInjectionStartNotifyBlocks:
setInputOriginWithAudioRecordContext:boronScore:
setInputRecordingNumberOfChannels:
setInteractiveLocalSpeechRecognizer:
setInterruptionHandler:
setInterspeechWaitTime:
setInvalidationHandler:
setIsASRFeatureFromServer:
setIsActiveRequest:
setIsActiveSession:
setIsAirpodsConnected:
setIsAnalyzeMode:
setIsAnchorTimeBuffered:
setIsBlur:
setIsFileLoggingEnabled:
setIsForwarding:
setIsHearstRouted:
setIsListenPollingStarting:
setIsMediaPlayingNow:
setIsNNVAD:
setIsOpportuneSpeakListening:
setIsPhraseSpotterBypassed:
setIsRaiseToSpeakBypassed:
setIsReady:
setIsRequestTimeout:
setIsSecondPassRunning:
setIsShadowModeEnabled:
setIsSiri:
setIsSiriClientConsideredAsRecord:
setIsSpeakerMuted:
setIsSpeaking:
setIsTemporaryPairedNotInContacts:
setIsWeakStream:
setKeywordAnalyzer:
setKeywordAnalyzerNDEAPI:
setKwdSpotter:
setLanguage:
setLanguageCodeUpdateMonitor:
setLastAggTimeFalseWakeUp:
setLastAudioRecorderContext:
setLastCommunicatedPeer:
setLastDetectedVoiceTriggerBeginSampleCount:
setLastEndpointHintDuration:
setLastEndpointHintFeatures:
setLastEndpointHintRCId:
setLastEndpointPosterior:
setLastForwardedSampleCount:
setLastHash:
setLastInputFeats:
setLastKnowServerFeaturesLatency:
setLastKnownConsecutiveBoronStartSampleCount:
setLastKnownOSDFeatures:
setLastKnownServerEPFeatures:
setLastReportedEndpointTimeMs:
setLastSampleCount:
setLastServerFeatureTimestamp:
setLastSilencePosterior:
setLatestContext:
setLatestPluginStreamId:
setLatestRecordContext:streamType:
setLatestResult:
setLatestVolume:
setLatestVolumeTime:
setLeadingSilenceDuration:
setLeadingUtteranceAudioFile:
setLeadingUtteranceLogger:
setLength:
setListenPollingTimer:
setListenPollingTimerCount:
setListener:
setListenerDelegate:
setLocalSRBridgeListener:
setLocalSpeechRecognitionListener:
setLocalSpeechRecognizerDeliverAudioDuration:
setLocalSpeechRecognizerQueue:
setLocalSpeechRecognizerState:
setLocalSpeechRecognizerTaskString:
setLocale:
setLoggingQueue:
setLpcmBitDepth:
setMachServiceName:
setMakeStandaloneMitigation:
setManualDuckingHandler:
setMeteringEnabled:
setMhId:
setMicUsageReporter:
setMinimumDurationForEndpointer:
setMitigationAsset:
setMitigationDecisions:
setMitigator:
setModelExeQueue:
setMonitor:
setName:
setNeedsBoost12dB:
setNldaClassifierNode:
setNldaMetaInfo:
setNldaScore:
setNnvadEndpointer:
setNodesCache:
setNumFalseWakeUp:
setNumOfAudioPackets:
setNumOfChunksReceived:
setNumOfConsecutiveBoronActivationThreshold:
setNumOfValidTrailingPackets:
setNumOfValidTrailingSpeechPackets:
setNumSamplesProcessed:
setNumSamplesProcessedBeforeAnchorTime:
setNumberOfChannels:
setNumberOfTotalFramesETFT:
setNumberOfVoicingFrames:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObservers:
setOdldModelAnalyzer:
setOdldProcessor:
setOpportuneSpeakListnerTestService:
setOsTransaction:
setOsdFeaturesAtEndpoint:
setOsdMode:
setOsdNode:
setOsdQueue:
setOutASBD:
setOverrideEnabled:
setOverridePath:
setOverrideState:
setPNonInterleavedABL:
setPackets:
setPairedDeviceAddresses:
setPeakPower:
setPendingActivationEvent:
setPendingBuiltInVoiceTriggerCompletionBlk:
setPendingBuiltInVoiceTriggerDetectedTime:
setPendingBuiltInVoiceTriggerResult:
setPendingCompletion:
setPendingRecordingStopUUID:
setPendingRemoraVoiceTriggerCompletionBlk:
setPendingRemoraVoiceTriggerDetectedTime:
setPendingRemoraVoiceTriggerDeviceId:
setPendingRemoraVoiceTriggerResult:
setPendingStartCompletions:
setPendingStopCompletions:
setPerceptualAudioHash:
setPermanentOffsetFactor:
setPermanentOffsetIsEnabled:
setPermanentVolumeOffsetWithDirection:
setPhoneCallState:
setPhoneCallStateMonitor:
setPhraseSpotterBypassing:timeout:
setPostBuildInstallService:
setPrefetchedAsset:
setPrevStageOutput:
setPreventSystemSleepPowerAssertion:
setPrimaryStream:
setProcessedAudioDurationInMilliseconds:
setProcessedAudioInSeconds:
setProviderDelegate:
setProxy:
setPsrAudioProcessor:
setQueue:
setRMSScore:
setRaiseToSpeakBypassing:timeout:
setRcHandler:
setRcProcessingListener:
setReceivers:
setRecognizer:
setRecognizerBuffer:
setRecordBufferDuration:
setRecordContext:
setRecordCtx:
setRecordDelegate:
setRecordDeviceIndicator:
setRecordEventUUID:
setRecordMode:streamHandleId:error:
setRecordingDidStop:
setRecordingStartTime:
setRecordingToken:
setRecordingTransaction:
setRecordingWillStartGroup:
setRemoraSecondPassProgressProvider:
setRemoteAccessoryStreamIdSet:
setRemoteObjectInterface:
setRemoteVAD:
setRemoteVADAlignBuffer:
setRemoteVADAlignCount:
setRemoteVADSPGRatio:
setReqSrc:
setRequestHistoricalAudioDataSampleCount:
setRequestHistoricalAudioDataWithHostTime:
setRequestId:
setRequestMHUUID:
setRequireSingleChannelLookup:
setRequiredNodes:
setRequiresHistoricalBuffer:
setRmsSamplesForEntireAudio:
setRtsTriggerInfo:
setRunningSampleCount:
setSampleRate:
setSaveSamplesSeenInReset:
setScheduledFutureSample:
setSecondPassAssetLoadCompleteTime:
setSecondPassAssetLoadStartTime:
setSecondPassAssetQueryCompleteTime:
setSecondPassAssetQueryStartTime:
setSecondPassAudioStreamReadyTime:
setSecondPassAudioStreamStartTime:
setSecondPassCheckerModelKeywordDetectionEndTime:
setSecondPassCheckerModelKeywordDetectionStartTime:
setSecondPassFirstAudioPacketReceptionTime:
setSecondPassLastAudioPacketReceptionTime:
setSelectedChannel:
setServerCrashedBlock:
setServerFeatureLatencies:
setServerFeatureLatencyDistribution:
setServerFeaturesQueue:
setServerResetBlock:
setServicesListener:
setSessionDelegate:
setSessionEventDelegate:
setSessionInProgress:
setSessionInfoQueue:
setShadowMicScore:
setShadowMicScoreCreator:
setSharedUserIdsSet:
setShouldCleanupVoiceProfile:
setShouldProcessAudio:
setShouldStopProcessASROnEndpoint:
setShouldUpdateMitigationResult:
setSignalEstimate:
setSignalFractional:
setSignalSource:
setSilencePosterior:
setSiriClientAudioStartStreamOption:
setSiriClientBehaviorMonitor:
setSiriClientRecordStateChangedBlock:
setSiriClientStream:
setSiriEnabledMonitor:
setSiriLanguageCodeDarwin:
setSiriSessionUUID:
setSiriStateObserver:
setSkipAlert:
setSkipAlertBehavior:
setSmartSiriVolume:
setSmartSiriVolumeDirection:
setSmartSiriVolumePercentage:
setSpeakerIDScore:
setSpeakerMuteStateChangedBlock:
setSpeakerRecognitionScores:
setSpeakerStateChangedBlock:
setSpeechDetectionNode:
setSpeechEndpointDetected:
setSpeechHasAcceptedResultCandidate:
setSpeechManager:
setSpeechModelTrainingXpcManager:
setSpeechPackage:
setSpeechRecognitionSettings:
setSpeechRecognizedContext:withEndpointerMetrics:
setSpeechVoiceLevel:
setSpgEndpointAnalyzer:
setSplitterEnabled:
setSsrAssets:
setSsrController:
setSsrNode:
setSsvManager:
setStartAlert:
setStartAlertBehavior:
setStartDetectionTime:
setStartPendingOnStoppingStreamToCompletionDict:
setStartPendingOnStoppingStreams:
setStartPendingStreams:
setStartRecordingHostTime:
setStartRecordingSampleCount:
setStartStreamOption:
setStartWaitTime:
setStateNotificationQueue:
setStateSerialQueue:
setStopAlert:
setStopAlertBehavior:
setStopOnErrorAlert:
setStopPendingStreams:
setStopRecordingHostTime:
setStopRecordingWatchDogToken:
setStreamClientType:
setStreamHandleID:
setStreamHandleQueue:
setStreamHolders:
setStreamProvider:
setStreamRequest:
setStreaming:
setStreamingUUID:
setStreams:
setSupportedInputOrigins:
setSupportedRecordType:
setSupportsSpeechRecognitionOnDevice:
setSynchronousCallbackEnabled:
setSystemUserActivityNotificationToken:
setTaskName:
setTaskThresholdMap:
setThreshold:
setThresholds:
setThresholdsMap:
setTimeSinceLastQuery:
setTimeStamp:
setTimer:
setTimerForSecs:completionBlock:
setTimestamp:
setToken:
setTotalAudioRecorded:
setTotalNumberSamples:
setTrailingPktLatencies:
setTrailingPktSpeechLatencies:
setTrailingSilenceDuration:
setTrailingSilenceDurationAtEndpoint:
setTrialAssetDownloadMonitor:
setTrialAssetManager:
setTrialAssetMonitor:
setTrialDownloadMonitor:
setTriggerAbsStartSampleId:
setTriggerInfoProviding:
setTriggerMachTime:
setTriggerNotifiedMachTime:
setTurnIdentifier:
setUpsampler:
setUresNode:
setUseDefaultServerFeaturesOnClientLag:
setUseLegacyPath:
setUseOpportunisticZLL:
setUserActivityStatus:
setUserIntentTime:
setUserIntentType:
setUserIntentValidForSeconds:
setUserIntentVolume:
setUserSpeakingEndedHostTime:
setUserSpeakingEndedTimeInMs:
setUuid:
setValue:forKey:
setVoiceControllerCreationQueue:
setVoiceIdXpcListener:
setVoiceIdentificationBatchId:
setVoiceProfileManager:
setVoiceTriggerAssetDownloadMonitor:
setVoiceTriggerBatchId:
setVoiceTriggerEnabled:
setVoiceTriggerEventInfo:
setVoiceTriggerEverUsed
setVoiceTriggerFireMachTime:
setVoiceTriggerInfo:deviceId:
setVoiceTriggerSampleCount:
setVoiceTriggerXpcListener:
setVtAsset:
setVtEndInSampleCount:
setVtExtraAudioAtStartInMs:
setVtSecondPassAnalyzer:
setWaitingForAlertFinish:
setWakeGestureTimestamp:
setWithArray:
setWordCount:
setWorkQueue:
setXpcClientQueue:
setXpcClientType:
setXpcConnection:
setXpcReplyQueue:
setZeroFilter:
setupListeners
shadowMicScore
shadowMicScoreCreator
shadowMicScoreThreshold
shadowMicScoreThresholdForVAD
sharedAggregator
sharedConnection
sharedController
sharedDaemon
sharedHandler
sharedInstance
sharedLauncher
sharedLogger
sharedManager
sharedManagerForCoreSpeechDaemon
sharedMonitor
sharedNotifier
sharedPowerLogger
sharedPreferences
sharedService
sharedSession
sharedSiriId
sharedUserIdsSet
sharedVoiceTriggerClient
shouldAcceptEagerResultForDuration:resultsCompletionHandler:
shouldAudioMonitoringRecording
shouldCleanupVoiceProfile
shouldDeinterleaveAudioOnCS
shouldDisableSpeakerVerificationInSplitterMode
shouldHandleCapitalization
shouldProcessAudio
shouldResetAdsDictionary
shouldRunAsSecondChance
shouldRunSpkrIdForCategory:
shouldStopProcessASROnEndpoint
shouldStoreAudioOnDevice
shouldUpdateMitigationResult
shouldUseRemoteRecorder
shouldVoiceTriggerRun
shutdown
signalEstimate
signalFractional
signalSource
signature
silenceDurationEstimateAvailable:numEstimates:clientProcessedAudioMs:
silenceDurationMs
silenceFramesCountMs
silencePosterior
silenceProbability
silenceStartTime
siriClientAudioStartStreamOption
siriClientBehaviorMonitor
siriClientBehaviorMonitor:didChangedRecordState:withEventUUID:withContext:
siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:
siriClientBehaviorMonitor:didStopStream:withEventUUID:
siriClientBehaviorMonitor:fetchedSiriClientAudioStream:successfully:
siriClientBehaviorMonitor:preparedSiriClientAudioStream:successfully:
siriClientBehaviorMonitor:willStartStreamWithContext:option:
siriClientBehaviorMonitor:willStopStream:reason:
siriClientBehaviorMonitorReleasedAudioSession:
siriClientStream
siriClientsRecordingCompletionBlock:
siriEnabledMonitor
siriInCallPolicy
siriInputSourceOutOfBand
siriProfileId
siriRequestProcessingCompleted
siriStateObserver
skipAlert
skipAlertBehavior
smartSiriVolumeContextAwareEnabled
smartSiriVolumeEnablePolicy
smartSiriVolumeRunPolicy
smartSiriVolumeSoftVolumeEnabled
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
source
spaceCheck:
speakAudio:
speakAudio:withScaleFactor:outASBD:playbackStarted:completion:
speakAudio:withScaleFactor:playbackStarted:completion:
speakerIDScore
speakerRecognitionController:hasSpeakerInfo:
speakerRecognitionFinishedProcessing:withFinalSpeakerInfo:
speakerRecognitionScores
speakerStateActiveCompletionBlock:
speakerStateMutedCompletionBlock:
speechDetectionNode
speechEndpointDetected
speechHasAcceptedResultCandidate
speechManager
speechModelTrainingXpcManager
speechPackage
speechRecognitionSettings
speechRecognitionTask
speechRecognizer:didFinishRecognitionWithError:
speechRecognizer:didProcessAudioDuration:
speechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
speechRecognizer:didProduceLoggablePackage:
speechRecognizer:didRecognizeFinalResultCandidatePackage:
speechRecognizer:didRecognizeFinalResultPackage:
speechRecognizer:didRecognizeFinalResults:
speechRecognizer:didRecognizeFinalResults:tokenSausage:nBestChoices:
speechRecognizer:didRecognizePartialResult:
speechRecognizer:didRecognizePartialResultNbest:
speechRecognizer:didRecognizeRawEagerRecognitionCandidate:
speechRecognizer:didReportStatus:statusContext:
speechVoiceLevel
speexASBD
speexConverter
spgEndpointAnalyzer
spgEndpointAnalyzer:hasSilenceScoreEstimate:clientProcessedAudioTimeMS:
spgEndpointAnalyzerDidDetectEndpoint:
splitterDeviceList
splitterState
splitterState:
ssrAssets
ssrController
ssrListener
ssvManager
start
startAlert
startAlertBehavior
startAttendingWithContext:
startAudioStream:option:completion:
startAudioStreamWithOption:
startAudioStreamWithOption:completion:
startAudioStreamWithOption:recordDeviceIndicator:error:
startCatalogDownload:options:then:
startDeliverLocalSpeechRecognitionResultsWithSettings:
startDetectionTime
startDownload:then:
startHostTime
startKeywordSpottingWithCompletion:
startListenWithOption:completion:
startManager
startMissingAssetDownload
startNewRequestWithContext:
startObserving
startObservingSystemVolumes
startPendingOnStoppingStreamToCompletionDict
startPendingOnStoppingStreams
startPendingStreams
startRecordForStream:error:
startRecording
startRecordingHostTime
startRecordingSampleCount
startRecordingWatchDogToken
startRecordingWithOptions:error:
startRequestWithContext:withVtei:taskType:completion:
startRequestWithContext:withVtei:withVTAssets:taskType:completion:
startSampleCount
startSmartSiriVolume
startSpeechRecognitionWithParameters:didStartHandlerWithInfo:
startStampleId
startStreamOption
startTime
startWaitTime
startWakeGestureUpdates
startWithRecordContext:
startWithUUID:withMaximumBufferSize:
startXPCConnection
state
stateNotificationQueue
stateSerialQueue
stop
stopAlert
stopAlertBehavior
stopAttendingWithContext:
stopAudioStream:option:completion:
stopAudioStreamWithOption:completion:
stopAudioStreamWithRecordDeviceIndicator:error:
stopCountingZeroStatisticsWithReporter:
stopDeliverLocalSpeechRecognitionWithReason:requestId:
stopEndpointer
stopListenWithCompletion:
stopListenWithStateReset:completion:
stopOnErrorAlert
stopPendingStreams
stopRecordForStream:error:
stopRecording
stopRecording:
stopRecordingHostTime
stopRecordingWatchDogToken
stopWithUUID:
storeASVStateInformation
streamClientType
streamDescription
streamHandleID
streamHandleId
streamHandleQueue
streamHolders
streamID
streamProvider
streamRequest
streamState
streaming
streamingUUID
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringByStandardizingPath
stringFromClassificationCategory:
stringValue
stringWithCapacity:
stringWithContentsOfFile:encoding:error:
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
subChunkFrom:numSamples:
subChunkFrom:numSamples:forChannel:
submitAudioIssueReport:
submitEndpointerIssueReport:
subscribeEventMonitor:
substringToIndex:
substringWithRange:
superclass
supportAcousticProgressiveChecker
supportAdBlocker
supportAttentionLostAndGain
supportBeepCanceller:
supportBluetoothDeviceVoiceTrigger
supportCSTwoShotDecision
supportDoAP
supportHandsFree
supportHangUp
supportHearstVoiceTrigger
supportHomeKitAccessory
supportHybridEndpointer
supportJarvisVoiceTrigger
supportLanguageDetector
supportMphAssets
supportNonInterruptibleSiri
supportOpportunisticZLL
supportPhatic
supportPremiumAssets
supportRelayCall
supportRemoraVoiceTrigger
supportRingtoneA2DP
supportSmartVolume
supportZeroFilter:
supportedInputOrigins
supportedRecordType
supportsDictationOnDevice
supportsDuckingOnCurrentRouteWithError:
supportsDuckingOnSpeakerOutput
supportsHybridUnderstandingOnDevice
supportsSSR
supportsSecureCoding
supportsSpeakerRecognitionAssets
supportsSpeechRecognitionOnDevice
supportsUnderstandingOnDevice
synchronousRemoteObjectProxyWithErrorHandler:
systemControllerDied:
systemUpTime
systemUptime
systemUserActivityNotificationToken
systemUserActivityState
systemVolumeDidChange:
tandemStreams
targetQueue
taskName
taskString:
taskThresholdMap
teardownWithError:
temporaryDirectory
terminateProcessing
threshold
thresholds
thresholdsMap
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timeSinceLastQuery
timeStamp
timer
timerState
timestamp
toString
token
tokenName
tokens
totalAudioRecorded
totalExpected
totalNumberSamples
totalWritten
trailingPktLatencies
trailingPktSpeechLatencies
trailingSilenceDuration
trailingSilenceDurationAtEndpoint
trainGlobalNNLMwithFidesSessionURL:completion:
trainPersonalizedLMWithLanguage:configuration:asset:directory:completion:
trainPersonalizedLMWithLanguage:configuration:asset:fides:activity:completion:
trainPersonalizedLMWithLanguage:configuration:fides:activity:completion:
trainPersonalizedLMWithLanguage:configuration:fides:write:completion:
trainPersonalizedLMWithLanguage:directory:completion:
transitions
trialAssetDownloadMonitor
trialAssetManager
trialAssetMonitor
trialDownloadMonitor
triggerAbsStartSampleId
triggerInfoForContext:completion:
triggerInfoProviding
triggerModeStringDescription:
triggerNotifiedMachTime
triggerReportedFromFlxKwdSpotter:
triggerVoiceProfileCleanupWithCompletion:
triggerVoiceProfileRetrainingWithAsset:
turnIdentifier
type
unregisterObserver:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAudioStreamStartTimeInSampleCount:
updateCachedScoresForLogging:
updateEndpointerDelayedTriggerSwitch:
updateEndpointerThreshold:
updateEndpointerThresholdWithValue:
updateMeterForStream:
updateMeters
updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:
updateState:
updateVoiceProfile:withUserName:
updateWithLatestRecordContext:
upperCaseString:completion:
upperCaseString:withReply:
upsampler
uresNode
useCustomizedRecordSettings
useDefaultServerFeaturesOnClientLag
useLegacyPath
useOpportunisticZLL
useSpeakerRecognitionAsset
useSpeexForAudioInjection
userActivityStatus
userInfo
userIntentTime
userIntentType
userIntentValidForSeconds
userIntentVolume
userName
userSessionActivateMonitor:didReceivedUserSessionActiveHasChanged:
userSpeakingEndedHostTime
userSpeakingEndedTimeInMs
userSpeakingStartedHostTime
userSpeakingStartedTimeInMs
utteranceFileASBD
uuid
vadScore
valueForEntitlement:
valueForKey:
valueForKeyPath:
voiceControllerAudioCallback:forStream:buffer:
voiceControllerBeginRecordInterruption:
voiceControllerBeginRecordInterruption:withContext:
voiceControllerCreationQueue
voiceControllerDidDetectEndpoint:ofType:
voiceControllerDidDetectEndpoint:ofType:atTime:
voiceControllerDidDetectStartpoint:
voiceControllerDidFinishAlertPlayback:ofType:error:
voiceControllerDidFinishAlertPlayback:withSettings:error:
voiceControllerDidSetAudioSessionActive:isActivated:
voiceControllerDidStartRecording:forStream:successfully:error:
voiceControllerDidStartRecording:successfully:
voiceControllerDidStartRecording:successfully:error:
voiceControllerDidStopRecording:forReason:
voiceControllerDidStopRecording:forStream:forReason:
voiceControllerEncoderErrorDidOccur:error:
voiceControllerEndRecordInterruption:
voiceControllerLPCMAudioCallback:forStream:buffer:
voiceControllerLPCMRecordBufferAvailable:buffer:
voiceControllerMediaServicesWereLost:
voiceControllerMediaServicesWereReset:
voiceControllerRecordBufferAvailable:buffer:
voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:
voiceControllerStreamInvalidated:forStream:
voiceControllerWillSetAudioSessionActive:willActivate:
voiceControllerWirelessSplitterRouteAvailable:devices:
voiceIdXpcListener
voiceIdentificationBatchId
voiceProfileForId:
voiceProfileManager
voiceProfilePruningCookie
voiceTriggerAOPModeEnabledPolicy
voiceTriggerAssetDownloadMonitor
voiceTriggerAssetHandler:endpointId:didChangeCachedAsset:
voiceTriggerAudioLogDirectory
voiceTriggerBatchId
voiceTriggerDetectedOnAOP:
voiceTriggerDidDetectKeyword:deviceId:
voiceTriggerDidDetectKeyword:deviceId:completion:
voiceTriggerDidDetectKeyword:myriadHash:remoteTriggerType:remoteDeviceId:isTriggeredFromFullWake:completion:
voiceTriggerDidDetectNearMiss:deviceId:
voiceTriggerDidDetectSpeakerReject:
voiceTriggerDidRejected:deviceId:
voiceTriggerEnabled
voiceTriggerEventInfo
voiceTriggerFireMachTime
voiceTriggerGotSuperVector:
voiceTriggerInfo
voiceTriggerInfoWithRecordDeviceIndicator:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
voiceTriggerPhraseNDEAPIScorerDidDetectedKeyword:bestStartSampleCount:bestEndSampleCount:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:endpointId:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerSampleCount
voiceTriggerXpcListener
volumeEstimate
vtEndInSampleCount
vtExtraAudioAtStartInMs
vtSecondPassAnalyzer
waitWithTimeout:
waitingForAlertFinish
waitingForConnection:error:
wakeGestureManager:didUpdateWakeGesture:
wakeGestureManager:didUpdateWakeGesture:detectedAt:
wakeGestureManager:didUpdateWakeGesture:orientation:
wakeGestureManager:didUpdateWakeGesture:type:detectedAt:
wakeGestureTimestamp
wakeHostForVoiceTrigger
wasBuffered
weakObjectsHashTable
wearerDetectionConfig
willBeep
willBeepWithRecordRoute:playbackRoute:
willDestroy
wordCount
workQueue
writeDESRecord
writeToFile:atomically:
writeToFile:atomically:encoding:error:
writeToFile:options:error:
writeToURL:atomically:
xpcClientQueue
xpcClientType
xpcConnection
xpcConnection:hasEntitlement:
xpcExitClean
xpcListener
xpcObject
xpcReplyQueue
zeroCounter
zeroFilter
zeroFilter:zeroFilteredBufferAvailable:atHostTime:
zeroFilterApproxAbsSpeechThreshold
zeroFilterWindowSizeInMs
zone
CSMicUsageReporter
v8@?0
-[CSMicUsageReporter _reportsDynamicActivityAttribute:bundleId:]
CORESPEECH_DAEMON_ACCESS_AUDIO_FOR_DICTATION
CORESPEECH_DAEMON_ACCESS_AUDIO_FOR_SIRI
CORESPEECH_DAEMON_ACCESS_AUDIO_FOR_SIRI_AND_DICTATION
STDynamicActivityAttributionPublisher
Unable to find class %s
com.apple.siri.speechmodeltraining
com.apple.corespeech.speechmodeltraining.xpc
com.apple.speech.speechmodeltraining
SpeechModelTrainingClient
v24@?0@"NSString"8@"NSError"16
v16@?0@"NSError"8
v16@?0@"NSString"8
v24@?0@"NSDictionary"8@"NSError"16
Assistant/SpeechPersonalizedLM
Assistant/SpeechPersonalizedLM_Fides
Received Error %@
Input directory path(%@) does not match expected path
type
-[CSFallbackAudioSessionReleaseProvidingProxy handleXPCMessage:messageBody:client:]
option
-[CSFallbackAudioSessionReleaseProvidingProxy _handleDeactivateAudioSessionRequestMessage:messageBody:client:]
result
resultErrorDomain
resultErrorCode
com.apple.corespeech.powerassertion
PreventUserIdleSystemSleep
PreventSystemSleep
-[CSPreventSystemSleepPowerAssertion invalidate]
TimeoutActionRelease
-[CSPreventSystemSleepPowerAssertion _acquireAssertionForType:withTimeout:assertionId:details:]
AllowsDeviceRestart
-[CSPreventSystemSleepPowerAssertion _releaseAssertionForAssertionId:details:]
+[CSUserIdentityClassifier pickTopScoringProfileIdFromScores:]
+[CSUserIdentityClassifier classifyUserIdentityFor:withScores:withAsset:]
Confident
Known
Unknown
Unsure1
UnsureN
+[CSUserIdentityClassifier stringFromClassificationCategory:]
-[CSAudioStartStreamOption(AVVC) avvcStartRecordSettingsWithAudioStreamHandleId:]
triggerScore
configVersion
firstPassTriggerSource
languageCode
com.apple.corespeech.aopFirstPassTriggerWakeupLatency
latency
device
@"NSDictionary"8@?0
com.apple.corespeech.SecondPassWakeUp
unknown
modelVersion
firstPassSource
triggerAPWakeup
-[CSVoiceTriggerStatAggregator logFalseWakeUp:withPhrase:]
-[CSVoiceTriggerStatAggregator logTriggerLengthSampleCountStatistics:withFirstPassDeterministicTriggerLengthSampleCount:]
com.apple.exprAOPSecondPass
newTriggerLengthSampleCount
oldTriggerLengthSampleCount
sampleCountDelta
com.apple.corespeech.AudioZeroRun
duration
com.apple.corespeech.corespeechd.activation.xpc
v16@?0@"NSObject<OS_xpc_object>"8
-[CSActivationXPCClient dealloc]
-[CSActivationXPCClient _handleListenerEvent:]
-[CSActivationXPCClient _handleListenerError:]
-[CSActivationXPCClient notifyActivationEvent:completion:]
v20@?0B8@"NSError"12
event
B8@?0
-[CSSmartSiriVolumeRunPolicyHomePod _addSmartSiriVolumeEnabledConditions]_block_invoke
CSAttSiriRequestSourceKey
SiriFollowupforIdleAndQuiet
Dictation
LockScreenNotification
SpeechDetection
com.apple.corespeech.CSSystemUserActivityMonitor
-[CSSystemUserActivityMonitor _startMonitoringWithQueue:]_block_invoke
com.apple.system.powermanagement.useractivity
v12@?0i8
-[CSSystemUserActivityMonitor _fetchSystemUserActivityState]
v16@?0@8
-[CSAudioSampleRateConverter _createSampleRateConverterWithInASBD:outASBD:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSAudioSampleRateConverter convertSampleRateOfBuffer:]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _didReceiveSpeakerRecognitionAssetMetaData]
com.apple.MobileAsset.SpeakerRecognitionAssets.ma.cached-metadata-updated
Audio/Video
Alarm
CSVolumeMonitor queue
-[CSVolumeMonitor _startMonitoringWithQueue:]
-[CSVolumeMonitor fetchVolumeFromAVSystemControllerForAudioCategory:]_block_invoke
-[CSVolumeMonitor systemControllerDied:]
-[CSVolumeMonitor startObservingSystemVolumes]
-[CSVolumeMonitor _startObservingSystemControllerLifecycle]
CSFallbackAudioSessionReleaseProvider
-[CSFallbackAudioSessionReleaseProvider fallbackDeactivateAudioSession:error:]_block_invoke
-[CSFallbackAudioSessionReleaseProvider fallbackDeactivateAudioSession:error:]
-[CSAudioTapProvider init]
CSAudioTapProvider.mm
-[CSSpeakerRecognitionAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSSpeakerRecognitionAssetDownloadMonitor _stopMonitoring]
-[CSSpeakerRecognitionAssetDownloadMonitor _didInstalledNewAsset]
-[CSSpeakerRecognitionAssetDownloadMonitor trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
com.apple.MobileAsset.SpeakerRecognitionAssets.ma.new-asset-installed
{wordCount: %ld, trailingSilDuration: %ld, eosLikelihood: %f, pauseCounts: (%@), silencePosterior: %f, taskName: %@, processedAudioDurationInMilliseconds: %ld}
WordCount
TrailingSilDuration
EOSLikelihood
PauseCounts
SilencePosterior
ProcessedAudioDurationInMilliseconds
-[CSVoiceTriggerXPCServiceProxy enableVoiceTrigger:withAssertion:timestamp:]
voicetrigger assertion queue
-[CSVoiceTriggerXPCServiceProxy enableVoiceTrigger:withAssertion:timestamp:]_block_invoke
Enabled
Disabled
phrasespotter assertion queue
-[CSVoiceTriggerXPCServiceProxy setPhraseSpotterBypassing:timeout:]_block_invoke_2
bypassed
NOT bypassed
-[CSVoiceTriggerXPCServiceProxy setPhraseSpotterBypassing:timeout:]_block_invoke
raise-to-speak assertion queue
-[CSVoiceTriggerXPCServiceProxy setRaiseToSpeakBypassing:timeout:]_block_invoke_2
-[CSVoiceTriggerXPCServiceProxy setRaiseToSpeakBypassing:timeout:]_block_invoke
-[CSVoiceTriggerXPCServiceProxy notifyVoiceTriggeredSiriSessionCancelled]
-[CSVoiceTriggerXPCServiceProxy notifyServiceConnectionLost]
-[CSAttSiriAudioSessionStateClient initWithDelegate:]
SiriStateNotificationListener
com.apple.siri.client-state-changed
-[CSAttSiriAudioSessionStateClient notifyObserver:didReceiveNotificationWithToken:]
-[CSAttSiriAudioSessionStateClient notifyObserver:didChangeStateFrom:to:]
-[CSAttSiriAudioSessionStateClient dispatchStateChangedFrom:to:]
-[CSContinuousAudioFingerprintEnabledPolicyHomePod _addContinousAudioFingerprintEnabledConditions]_block_invoke
-[CSAudioStreamProvidingProxy setAudioStreamProvidingForProxy:]
-[CSAudioStreamProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioStreamProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleSupportsDuckingWithStreamHandleID:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleSetCurrentConextMessage:messageBody:client:]
context
audioStreamRequest
-[CSAudioStreamProvidingProxy _handleAudioStreamRequestMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleAudioStreamPrepareMessage:messageBody:client:]
startAudioStreamOption
-[CSAudioStreamProvidingProxy _handleStartAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleStopAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleVoiceTriggerInfoMessage:messageBody:client:]
voiceTriggerInfo
rtsTriggerInfo
-[CSAudioStreamProvidingProxy _handleIsRecordingMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleRecordRouteMessage:messageBody:client:]
recordRoute
-[CSAudioStreamProvidingProxy _handleRecordDeviceInfo:messageBody:client:]
recordDeviceInfo
-[CSAudioStreamProvidingProxy _handleAudioDeviceInfo:messageBody:client:]
audioDeviceInfo
-[CSAudioStreamProvidingProxy _handleRecordSettings:messageBody:client:]
recordSettings
-[CSAudioStreamProvidingProxy _handleIsNarrowband:messageBody:client:]
-[CSAudioStreamProvidingProxy _handlePlaybackRouteMessage:messageBody:client:]
playbackRoute
-[CSAudioStreamProvidingProxy audioStreamProvider:didStopStreamUnexpectly:]
stopReason
chunk
-[CSAudioStreamProvidingProxy audioStreamProvider:didHardwareConfigurationChange:]
hardwareConfig
body
-[CSAudioStreamProvidingProxy _setAllowMixableAudioWhileRecording:]
Token
BestScore
StartSampleId
EndSampleId
com.apple.flxkwd
-[CSFlexKeywordSpotter startKeywordSpottingWithCompletion:]_block_invoke_2
-[CSFlexKeywordSpotter startKeywordSpottingWithCompletion:]_block_invoke
Unexpected exception creating KeywordDetector
reason
Exception creating KeywordDetector: %s
v24@?0@"CSAsset"8@"NSError"16
-[CSFlexKeywordSpotter processAudioChunk:]_block_invoke
-[CSFlexKeywordSpotter speechRecognizer:didFinishRecognitionWithError:]
-[CSFlexKeywordSpotter speechRecognizer:didRecognizeFinalResults:]
Kwds: 
%@:%f:%f:%f
===WinningTok=%@, bestScore=%f===
-[CSFlexKeywordSpotter speechRecognizer:didRecognizePartialResultNbest:]_block_invoke
-[CSFlexKeywordSpotter speechRecognizer:didRecognizePartialResult:]
getThresholdsMapAt_block_invoke
-[CSAttSiriAttendingAudioSrcNode initWithAttSiriController:]
CSAttSiriAudioSrcNode Attending queue
-[CSAttSiriAttendingAudioSrcNode initWithSpeechManager:audioStreamProvider:streamName:streamRequest:]
CSAttSiriAudioSrcNode
-[CSAttSiriAttendingAudioSrcNode startAudioStreamWithOption:completion:]_block_invoke_2
CSAttSiriAttendingAudioSrcNode
-[CSAttSiriAttendingAudioSrcNode addReceiver:]_block_invoke
-[CSAttSiriAttendingAudioSrcNode dealloc]
-[CSAttSiriAttendingAudioSrcNode audioStreamProvider:didStopStreamUnexpectly:]_block_invoke
-[CSAttSiriAttendingAudioSrcNode _handleDidStop]
-[CSAudioFileLog _closeAudioFile]
-[CSAudioFileLog startRecording]_block_invoke
-input.wav
-[CSAudioFileLog appendAudioData:]_block_invoke
-[CSAudioFileLog stopRecording]_block_invoke
Logs/CrashReporter/CoreSpeech/audio/
-[CSAudioFileLog _getOrCreateAudioLogDirectory]
/tmp
en_US_POSIX
yyyyMMdd-HHmmss
%@/%@%@%@
CSAudioSessionInfoProvider
-[CSAudioSessionInfoProvider audioSessionIdForDeviceId:]
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]_block_invoke
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]_block_invoke
-[CSAudioSessionInfoProvider _registerInterruptionNotification]
-[CSAudioSessionInfoProvider _registerAudioRouteChangeNotification]
-[CSAudioSessionInfoProvider _handleInterruption:]_block_invoke
-[CSAudioSessionInfoProvider _audioRouteChanged:]_block_invoke
RouteChangeNotificationInfo
-[CSAudioSessionInfoProvider _deregisterAudioSessionNotifications]
ApplicationProcessor
Remora
CSPreMyriadCoordinator Queue
-[CSPreMyriadCoordinator _clearPendingRemoraVoiceTrigger]
-[CSPreMyriadCoordinator handlePendingRemoraVoiceTriggerIfNeeded]
-[CSPreMyriadCoordinator handlePendingRemoraVoiceTriggerIfNeeded]_block_invoke
-[CSPreMyriadCoordinator _clearPendingBuiltInVoiceTrigger]
-[CSPreMyriadCoordinator handlePendingBuiltInVoiceTriggerIfNeeded]
-[CSPreMyriadCoordinator handlePendingBuiltInVoiceTriggerIfNeeded]_block_invoke
v32@?0@"NSString"8@"CSPreMyriadVoiceTriggerMetaData"16^B24
-[CSPreMyriadCoordinator secondPassDidStopForClient:deviceId:]
-[CSPreMyriadCoordinator secondPassDidStartForClient:deviceId:withFirstPassEstimate:]
+[CSUtils(AttSiri) logMitigationFeatures:forTask:withModelOutput:forMHRequestId:]
%@-%@.json
Task
Transcript
DetailedModelResult
AcousticFTMScore
InputOrigin
osdSignal
timeSinceLastQuery
airpodsConnected
boronSignal
decisionStage
prevInputLevel
speakerIDScore
eosLikelihood
timestamp
RawASRRecogCandidate
LatticeRNNResult
NLDAMetaInfo
triggerEndMachTime
triggerFireMachTime
-[CSAttSiriEndpointerNode initWithAttSiriController:]
CSAttSiriEndpointerNode queue
CSAttSiriEndpointerNode Latency Queue
-[CSAttSiriEndpointerNode addReceiver:]_block_invoke
-[CSAttSiriEndpointerNode removeReceiver:]_block_invoke
-[CSAttSiriEndpointerNode resetForNewRequestWithSampleRate:recordContext:recordOption:voiceTriggerInfo:]_block_invoke_2
-[CSAttSiriEndpointerNode endpointer:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[CSAttSiriEndpointerNode _reportHardEndpointToXPCClientWithTime:endpointerMetrics:]
audioURL : %@, numberOfChannels : %lu, scaleFactor: %f
CSSmartSiriVolumeEnablePolicy queue
-[CSSmartSiriVolumeEnablePolicy _addSmartSiriVolumeEnabledConditions]_block_invoke
triggerEndSeconds
userIdentityClassification
userClassified
@distinctUnionOfObjects.sharedUserId
-[CSAttSiriSSRNode stop]_block_invoke
-[CSAttSiriSSRNode addReceiver:]_block_invoke
-[CSAttSiriSSRNode setPrefetchedAsset:]_block_invoke
B24@?0@"SSRVoiceProfile"8@"NSDictionary"16
-[CSAttSiriSSRNode filteredVoiceProfileArray:]
q24@?0@8@16
en-US
-[CSAttSiriSSRNode _setupSSRControllerWithAudioContext:withVoiceTriggerEventInfo:]
-[CSAttSiriSSRNode _setupLeadingUtteranceLogger]
-[CSAttSiriSSRNode _setupSpeakerRecognitionForProfiles:WithVTEventInfo:WithLocale:]
-[CSAttSiriSSRNode _refreshSpeakerRecognitionAssets]_block_invoke_2
-[CSAttSiriSSRNode _refreshSpeakerRecognitionAssets]_block_invoke
-[CSAttSiriSSRNode _refreshSpeakerRecognitionAssets]
-[CSAttSiriSSRNode startXPCConnection]
-[CSAttSiriSSRNode CSSpeakerRecognitionAssetDownloadMonitor:didInstallNewAsset:assetProviderType:]_block_invoke
-[CSAttSiriSSRNode speakerRecognitionController:hasSpeakerInfo:]_block_invoke
-[CSAttSiriSSRNode speakerRecognitionController:hasSpeakerInfo:]_block_invoke_2
-[CSAttSiriSSRNode speakerRecognitionController:hasSpeakerInfo:]
-[CSAttSiriSSRNode CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSAttSiriSSRNode speakerRecognitionFinishedProcessing:withFinalSpeakerInfo:]_block_invoke
-[CSAttSiriSSRNode _processSpeakerRecognitionResult:]
-[CSAttSiriSSRNode _mapScoresToSharedSiriId:]
-[CSAttSiriSSRNode _mapScoresToSharedSiriId:]_block_invoke
v32@?0@8@16^B24
valid_scores
invalid_scores
-[CSAttSiriSSRNode _stopProcessing]
-[CSAttSiriSSRNode _stopProcessing]_block_invoke
-[CSAttSiriSSRNode attSiriAudioSrcNodeDidStop:]_block_invoke
-[CSSiriRestrictionOnLockScreenMonitor _startMonitoringWithQueue:]
-[CSSiriRestrictionOnLockScreenMonitor _stopMonitoring]
-[CSSiriRestrictionOnLockScreenMonitor _checkSiriRestrictedOnLockScreen]
-[CSPostBuildInstallService registerPostBuildInstallService]
-[CSPostBuildInstallService registerPostBuildInstallService]_block_invoke
com.apple.cs.postinstall
-[CSContinuousAudioFingerprintEnabledPolicy _addContinousAudioFingerprintEnabledConditions]_block_invoke
-[CESRXPCActivity registerANECompilationActivity]
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?>16
_RegisterANECompilationActivity_block_invoke_2
com.apple.siri.xpc_activity.speech-ane-compilation
_RegisterXPCActivity_block_invoke
CSVoiceTriggerHandlerMacQueue
-[CSVoiceTriggerAssetHandlerMac _getVoiceTriggerAssetFromAssetManagerWithLocale:completion:]_block_invoke
-[CSVoiceTriggerAssetHandlerMac _getVoiceTriggerAssetFromAssetManagerWithLocale:completion:]_block_invoke_2
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablity]_block_invoke
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablityForEndpoint]_block_invoke_3
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablityForEndpoint]_block_invoke
-[CSVoiceTriggerAssetHandlerMac CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:]
-[CSVoiceTriggerAssetHandlerMac CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSVoiceTriggerAssetHandlerMac CSFirstUnlockMonitor:didReceiveFirstUnlock:]
-[CSVoiceTriggerAssetHandlerMac trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
CSAttSiriCCActivationNode queue
-[CSAttSiriSpeechDetectionNode addReceiver:]
-[CSAttSiriSpeechDetectionNode attSiriNode:didUpdateOSDFeatures:withFrameDurationMs:]_block_invoke
-[CSAttSiriSpeechDetectionNode _startActivation]
RequestContext
DetectedToken
TriggerMachTime
TriggerAbsStartSampleId
{attendingCtx: %@, detctedToken: %@, triggerMachTime=%llu, triggerStartSampleId=%llu}
[requestHistoricalAudioDataWithHostTime = %@]
[requestHistoricalAudioDataSampleCount = %@]
[useOpportunisticZLL = %@]
[startRecordingHostTime = %llu]
[startRecordingSampleCount = %llu]
[alertBehavior = %llu %llu %llu]
[skipAlertBehavior = %@]
[requireSingleChannelLookup = %@]
[selectedChannel = %u]
[estimatedStartHostTime = %llu
[disableEndpointer = %d]
[disableLocalSpeechRecognizer = %d]
[disablePrewarmLocalSpeechRecognizer = %d]
[disableBoostForDoAP = %d]
requestHistoricalAudioDataWithHostTime
requestHistoricalAudioDataSampleCount
startRecordingHostTime
startRecordingSampleCount
useOpportunisticZLL
startAlertBehavior
stopAlertBehavior
errorAlertBehavior
skipAlertBehavior
requireSingleChannelLookup
selectedChannel
estimatedStartHostTime
disableEndpointer
disableLocalSpeechRecognizer
disablePrewarmLocalSpeechRecognizer
disableBoostForDoAP
requestMHUUID
siriSessionUUID
com.apple.corespeech.corespeechservices
com.apple.corespeech.xpc
+[CSCoreSpeechServices installedVoiceTriggerAssetForLanguageCode:completion:]_block_invoke
CoreSpeechXPC service invalidated
v32@?0@"NSString"8@"NSString"16@"NSError"24
+[CSCoreSpeechServices fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]_block_invoke
+[CSCoreSpeechServices getCurrentVoiceTriggerLocaleWithEndpointId:completion:]
+[CSCoreSpeechServices getCurrentVoiceTriggerLocaleWithEndpointId:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:endpointId:downloadedModels:preinstalledModels:completion:]_block_invoke
v32@?0@"CSVoiceTriggerRTModel"8@"CSVoiceTriggerRTModel"16@"NSError"24
+[CSCoreSpeechServices voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
+[CSCoreSpeechServices requestUpdatedSATAudio]_block_invoke
v12@?0B8
+[CSCoreSpeechServices getFirstPassRunningMode]_block_invoke
v16@?0q8
VoiceTrigger Asset Change Monitor
com.apple.corespeech.voicetriggerassetchange
-[CSAudioServerCrashMonitor _startMonitoringWithQueue:]_block_invoke
-[CSAudioServerCrashMonitor _startMonitoringWithQueue:]
CSXPCClient Reply Queue
CSXPCClient connection Queue
-[CSXPCClient connect]_block_invoke
com.apple.corespeech.corespeechd.xpc
-[CSXPCClient _sendXPCClientType]
xpcClientType
-[CSXPCClient prepareAudioProviderWithContext:clientType:error:]
clientType
activateReason
dynamicAttribute
dictationRequestBundleId
deactivateOption
setDuckOthersOption
enableSmartRoutingConsideration
enableMiniDucking
alertType
forceSetAlert
soundPath
alertStartTime
-[CSXPCClient alertStartTime]_block_invoke
alertBehavior
setMeterEnable
channelNumber
power
-[CSXPCClient peakPowerForChannel:]_block_invoke
-[CSXPCClient averagePowerForChannel:]_block_invoke
-[CSXPCClient audioMetric]_block_invoke
audioMetric
-[CSXPCClient audioStreamWithRequest:streamName:error:]
v24@?0@"CSAudioStream"8@"NSError"16
-[CSXPCClient audioStreamWithRequest:streamName:completion:]
-[CSXPCClient audioStreamWithRequest:streamName:completion:]_block_invoke
-[CSXPCClient prepareAudioStreamSync:request:error:]
-[CSXPCClient prepareAudioStream:request:completion:]
v16@?0@"NSDictionary"8
-[CSXPCClient acousticSLResultForContext:completion:]
-[CSXPCClient acousticSLResultForContext:completion:]_block_invoke_2
acousticSLResult
-[CSXPCClient acousticSLResultForContext:completion:]_block_invoke
v24@?0@"NSDictionary"8@"NSDictionary"16
-[CSXPCClient triggerInfoForContext:completion:]
-[CSXPCClient audioStreamId]
-[CSXPCClient audioChunkFrom:to:]
-[CSXPCClient audioChunkFrom:to:channelIdx:]
-[CSXPCClient audioChunkToEndFrom:]
-[CSXPCClient audioChunkToEndFrom:channelIdx:]
-[CSXPCClient saveRecordingBufferFrom:to:toURL:]
-[CSXPCClient saveRecordingBufferToEndFrom:toURL:]
-[CSXPCClient holdAudioStreamWithDescription:timeout:]
-[CSXPCClient cancelAudioStreamHold:]
-[CSXPCClient isRecording]
-[CSXPCClient setAnnounceCallsEnabled:withStreamHandleID:]
-[CSXPCClient attachTandemStream:toPrimaryStream:completion:]
deviceID
sessionID
-[CSXPCClient audioSessionIdForDeviceId:]
sampleCount
-[CSXPCClient hostTimeFromSampleCount:]_block_invoke
replyHostTime
-[CSXPCClient hostTimeFromSampleCount:]
hostTime
-[CSXPCClient sampleCountFromHostTime:]_block_invoke
replySampleCount
-[CSXPCClient sampleCountFromHostTime:]
-[CSXPCClient _handleListenerEvent:]
-[CSXPCClient _handleListenerMessage:]
-[CSXPCClient _handleListenerError:]
-[CSXPCClient _handleAlertProvidingDelegateMessageBody:]
didFinishAlertPlayback
errorDomain
errorCode
-[CSXPCClient _handleSessionProvidingDelegateMessageBody:]
interruptionContext
-[CSXPCClient _handleSessionProvidingDelegateBeginInterruptionWithContext:]
willSetAudioSessionActive
didSetAudioSessionActive
streamHandleIdInvalidationflag
didChangeContextFlag
-[CSXPCClient _handleSessionInfoProvidingDelegateMessageBody:]
notificationInfo
-[CSXPCClient _handleSessionInfoProvidingDelegateInterruptionNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateRouteChangeNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:]
-[CSXPCClient _handleStreamProvidingDelegateMessageBody:]
CSOpportuneSpeakListnerTestService
com.apple.corespeech.opportunelistner.start
com.apple.corespeech.opportunelistner.stop
A945B95D-69F6-FC77-4FAE-91F50A039CD8
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStart]_block_invoke
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStop]_block_invoke
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasRemoteVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:didStopUnexpectly:]
CSTimerMonitor queue
-[CSTimerMonitor _startMonitoringWithQueue:]
-[CSTimerMonitor _stopMonitoring]
BluetoothA2DPOutput
BluetoothHFP
BluetoothLE
MicrophoneBuiltIn
Speaker
Headphones
MicrophoneWired
HDMIOutput
LineIn
USBAudio
ADAudioSessionPortOther
-[CSSiriAudioSession currentInputRoute]_block_invoke
v24@?0^v8Q16
-[CSSiriAudioSession currentOutputRoute]_block_invoke_3
_AudioObjectGetScalarArray
v20@?0I8r^{AudioObjectPropertyAddress=III}12
_AudioDeviceRegisterForChangedNotification
v16@?0^v8
_AudioObjectGetCFTypeRef
v12@?0I8
_AudioObjectGetIntValue
CSOpportuneSpeakEventMonitor
-[CSOpportuneSpeakEventMonitor isStreaming]
override-asset
-[CSAttSiriMitigationAssetHandler setCachedAsset:]_block_invoke
-[CSAttSiriMitigationAssetHandler _receivedNewAssetUpdate:]
-[CSAttSiriMitigationAssetHandler trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
kVTPreferencesPhraseSpotterEnabledDidChangeDarwinNotification
-[CSPhraseSpotterEnabledMonitor _checkPhraseSpotterEnabled]
-[CSPhraseSpotterEnabledMonitor _phraseSpotterEnabledDidChange]
CSVoiceTriggerAssetHandler
-[CSVoiceTriggerAssetHandler getVoiceTriggerAssetWithEndpointId:completion:]
CSVoiceTriggerAssetHandler.m
com.apple.siri.myriad.in.ear
+[CSMyriadNotifier notifyInEarMyriadTrigger]
com.apple.corespeech.benchmark.xpc
-[CSBenchmarkXPCListener listen]
-[CSBenchmarkXPCListener listener:shouldAcceptNewConnection:]
corespeech.benchmark.xpc
Liminal
progChecker.json
progressiveCheckerConfigFile
contionusConversationConfigFile
checkerConfig
validInputOrigins
thresholds
shadowMode
Unspecified
VoiceTrigger
ButtonPress
B32@?0@8@16^B24
v24@?0@8^B16
-[CSLanguageCodeUpdateMonitorImpl _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImpl _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImpl _didReceiveLanguageCodeUpdate]
CSVoiceTriggerXPCListener
com.apple.corespeech.voicetriggerservice
-[CSVoiceTriggerXPCListener listen]
-[CSVoiceTriggerXPCListener _handleListenerEvent:]
-[CSVoiceTriggerXPCListener _handleListenerError:]
-[CSVoiceTriggerXPCListener _handleNewRemoteConnection:]
voicetrigger.voicetriggerservice
-[CSVoiceTriggerXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
CSCoreSpeechServicesListener
-[CSCoreSpeechServicesListener listen]
-[CSCoreSpeechServicesListener _servicesListenerShouldAcceptNewConnection:]
corespeech.xpc
-[CSCoreSpeechServicesListener listener:shouldAcceptNewConnection:]
-[CSCoreSpeechServicesListener getTestResponse:]
Test
-[CSCoreSpeechServicesListener setDelayInterstitialSounds:level:completion:]
-[CSCoreSpeechServicesListener getTriggerCount:]
-[CSCoreSpeechServicesListener clearTriggerCount:]
-[CSCoreSpeechServicesListener getFirstPassRunningMode:]
-[CSAudioStreamHolding dealloc]
-[CSEndpointDelayReporter initWithRequestMHUUID:turnIdentifier:]
-[CSEndpointDelayReporter reset]
leadingSilence
trailingSilence
endTime
-[CSEndpointDelayReporter setSpeechRecognizedContext:withEndpointerMetrics:]
siriVolume.json
smartSiriVolume
noiseLevelChannelBitset
LKFSChannelBitset
DistanceChannelBitset
energyBufferSize
noiseLowerPercentile
noiseUpperPercentile
LKFSLowerPercentile
LKFSUpperPercentile
noiseTimeConstant
noiseMicSensitivityOffset
noiseMicSensitivityOffsetDeviceSimple
LKFSTimeConstant
LKFSMicSensitivityOffset
noiseTTSMappingInputRangeLow
noiseTTSMappingInputRangeHigh
noiseTTSMappingOutputRangeLow
noiseTTSMappingOutputRangeHigh
LKFSTTSMappingInputRangeLow
LKFSTTSMappingInputRangeHigh
LKFSTTSMappingOutputRangeLow
LKFSTTSMappingOutputRangeHigh
userOffsetInputRangeLow
userOffsetInputRangeHigh
userOffsetOutputRangeLow
userOffsetOutputRangeHigh
TTSVolumeLowerLimitDB
TTSVolumeUpperLimitDB
noiseWeight
SSVCAMaxFrameSize
SSVCAVoiceTriggerBasedTTSValidForSeconds
SSVCASmartSiriVolumeUnsyncedMetricLogsToRetain
SSVCASmartSiriVolumeSyncedMetricLogsToRetain
SSVCAVoiceTriggerInitialSilenceDurationSeconds
SSVCADistanceInputBufferDurationSeconds
SSVCAListenPollingIntervalAtStartInSeconds
SSVCADefaultZeroFloatingPointValue
SSVCAAnnouncementStatusFetchTimeoutMs
SSVCADefaultOutputTTSVolume
SSVCANoiseActivityCountThreshold
SSVCASpeakerDistanceFarBoostFactor
SSVCASpeakerDistanceMidBoostFactor
SSVCASpeakerDistanceNearBoostFactor
SSVCADistanceModelConfidenceThreshold
SSVCAMinimumLinearSoundLevel
SSVCAMaximumLinearSoundLevel
SSVCALinearToDecibelConstantMultiplier
SSVCADecibelToLinearLogBase
SSVCASignalToSigmoidNoiseDilationFactor
SSVCASignalToSigmoidMusicDilationFactorDeviceDefault
SSVCASignalToSigmoidMusicDilationFactorDeviceSimple
SSVCASignalToSigmoidMusicDilationFactorDeviceSimple2
SSVCASignalToSigmoidSpeechDilationFactor
SSVCASignalToSigmoidNoiseVSpread
SSVCASignalToSigmoidMusicVSpreadDeviceDefault
SSVCASignalToSigmoidMusicVSpreadDeviceSimple
SSVCASignalToSigmoidMusicVSpreadDeviceSimple2
SSVCASignalToSigmoidSpeechVSpread
SSVCASignalToSigmoidNoiseVOffset
SSVCASignalToSigmoidMusicVOffsetDeviceDefault
SSVCASignalToSigmoidMusicVOffsetDeviceSimple
SSVCASignalToSigmoidMusicVOffsetDeviceSimple2
SSVCASignalToSigmoidSpeechVOffset
SSVCASignalToSigmoidNoiseHOffset
SSVCASignalToSigmoidMusicHOffsetDeviceDefault
SSVCASignalToSigmoidMusicHOffsetDeviceSimple
SSVCASignalToSigmoidMusicHOffsetDeviceSimple2
SSVCASignalToSigmoidSpeechHOffset
SSVCASignalToSigmoidMusicSteepnessDeviceDefault
SSVCASignalToSigmoidMusicSteepnessDeviceSimple
SSVCASignalToSigmoidMusicSteepnessDeviceSimple2
SSVCASignalToSigmoidNoiseSteepness
SSVCASignalToSigmoidSpeechSteepness
SSVCADBToTTSMinimumOutput
SSVCADBToTTSMaximumOutput
SSVCADBToTTSTransitionPoint
SSVCADBToTTSPreTransitionOffset
SSVCADBToTTSPreTransitionMultiplier
SSVCADBToTTSPostTransitionOffset
SSVCADBToTTSPostTransitionDC
SSVCADBToTTSPostTransitionMultiplier
SSVCAMinimumDistanceUpdateWaitPeriodSeconds
SSVCANoiseActivityThreshold
SSVCANoiseResultsBufferSize
SSVCAMusicResultsBufferSize
SSVCADefaultSpeechStrength
SSVCADefaultMusicStrength
SSVCANoiseActivityHistoricalSampleCount
SSVCADspCoefsCount
SSVCADspNumStages
SSVCADistanceResultsBufferSize
SSVCAExponentialDistanceHistoryDegradationFactor
SSVCADistanceResultSampleCountTolerance
SSVCAMusicHistoricalSamplesInSeconds
SSVCADeviceSimpleOutputMinTargetDB
SSVCADeviceSimpleOutputMaxTargetDB
SSVCADeviceSimpleOutputSlope
SSVCADeviceSimple2OutputSlope
SSVCADeviceSimpleMinTargetDB
SSVCADeviceSimpleMaxTargetDB
SSVCADeviceSimpleDBToSystemVolSlope
SSVCADeviceSimpleMicSensitivityOffset
SSVCADeviceSimplePreTriggerSilenceSampleCount
SSVCADeviceSimple2OutputMinTargetDB
SSVCADeviceSimple2OutputMaxTargetDB
SSVCAMinTTSSystemVolume
SSVCAMaxTTSSystemVolume
SSVCAMinTTSSystemVolumeSimple2
SSVCAMaxTTSSystemVolumeSimple2
SSVCAUserIntentValidForSeconds
SSVCAUserIntentVolumeIncreaseFactor
SSVCAUserIntentVolumeDecreaseFactor
SSVCAUserIntentPermanentOffsetFactorDelta
SSVCAUserIntentPermanentOffsetFactorLowerBound
SSVCAUserIntentPermanentOffsetFactorUpperBound
SSVCADeviceSimpleMinTTSVolume
SSVCADeviceSimpleMaxTTSVolume
SSVCADeviceDefaultASVOffMinTTSVolume
SSVCADeviceSimpleASVOffMinTTSVolume
SSVCADeviceSimple2ASVOffMinTTSVolume
SSVCADeviceDefaultMicSensitivityOffset
SSVCAVolumeHalfLifeSeconds
SSVCAHistoricalVolumeBufferSize
SSVCAMaximumCompensatedSpeechLevelNearField
SSVCADeviceDefaultDropInCallAnnouncementMinTTSVolume
SSVCADeviceSimpleDropInCallAnnouncementMinTTSVolume
SSVCADeviceSimple2DropInCallAnnouncementMinTTSVolume
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicDilationFactorDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicVSpreadDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicVOffsetDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicHOffsetDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicSteepnessDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCADeviceSimpleASVOffMinTTSVolume]
-[CSAsset(SmartSiriVolume) _getNumberFromASVDictionaryForKey:category:default:]
com.apple.corespeech.audioinjection.xpc
-[CSAudioInjectionXPCListener listen]
-[CSAudioInjectionXPCListener listener:shouldAcceptNewConnection:]
corespeech.audioinjection.xpc
-[CSHostPowerStateMonitor currentPowerState]
CSHostPowerStateMonitor.m
-[CSHostPowerStateMonitor currentRawPowerState]
-[CSHostPowerStateMonitor _startMonitoringWithQueue:]
-[CSHostPowerStateMonitor _stopMonitoring]
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
CSAudioProvider
CSAudioProvider Stream Handle Queue
CSAudioProvider logging
-[CSAudioProvider dealloc]
-[CSAudioProvider setStreamState:]
-[CSAudioProvider setAudioRecorder:]_block_invoke
-[CSAudioProvider supportsDuckingOnCurrentRouteWithError:]
-[CSAudioProvider setCurrentContext:error:]
-[CSAudioProvider setCurrentContext:error:]_block_invoke
-[CSAudioProvider _audioStreamWithRequest:streamName:error:]
-[CSAudioProvider attachTandemStream:toPrimaryStream:completion:]_block_invoke_2
failed
successfully
-[CSAudioProvider attachTandemStream:toPrimaryStream:completion:]_block_invoke
-[CSAudioProvider _prepareAudioStreamSync:request:error:]
-[CSAudioProvider _createCircularBufferIfNeededWithNumChannel:playbackRoute:]
-[CSAudioProvider startAudioStream:option:completion:]
-[CSAudioProvider startAudioStream:option:completion:]_block_invoke
-[CSAudioProvider prepareAudioStreamSync:request:error:]
-[CSAudioProvider prepareAudioStream:request:completion:]
-[CSAudioProvider _startAudioStream:option:completion:]
-[CSAudioProvider _startAudioStream:option:completion:]_block_invoke
-[CSAudioProvider _startAudioStream:option:completion:]_block_invoke_2
-[CSAudioProvider _handleDidStartAudioStreamWithResult:error:]
-[CSAudioProvider _handleDidStopAudioStreamWithReason:]
-[CSAudioProvider _stopAudioStream:option:completion:]
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_3
CSAudioProvider.m
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_4
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_2
-[CSAudioProvider _saveRecordingBufferFrom:to:toURL:]_block_invoke
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke_2
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke
-[CSAudioProvider cancelAudioStreamHold:]
-[CSAudioProvider cancelAudioStreamHold:]_block_invoke
-[CSAudioProvider prewarmAudioSessionWithError:]
-[CSAudioProvider activateAudioSessionWithReason:dynamicAttribute:bundleID:error:]
-[CSAudioProvider _activateAudioSessionWithReason:error:]
-[CSAudioProvider _shouldDuckOnBuiltInSpeaker]
-[CSAudioProvider _isDuckingOnSpeakerOutputSupportedWithCurrentRoute]
-[CSAudioProvider deactivateAudioSession:error:]
-[CSAudioProvider _deactivateAudioSession:error:]
-[CSAudioProvider setDuckOthersOption:]
-[CSAudioProvider setAlertSoundFromURL:forType:force:]
-[CSAudioProvider playAlertSoundForType:]
-[CSAudioProvider playRecordStartingAlertAndResetEndpointer]
-[CSAudioProvider alertStartTime]
-[CSAudioProvider triggerInfoForContext:completion:]_block_invoke
-[CSAudioProvider _shouldStopRecording]
-[CSAudioProvider audioRecorderStreamHandleIdInvalidated:]
-[CSAudioProvider audioRecorderWillBeDestroyed:]_block_invoke
-[CSAudioProvider _fetchHistoricalAudioAndForwardToStream:remoteVAD:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]_block_invoke
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]_block_invoke_2
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]_block_invoke
-[CSAudioProvider audioRecorderBuiltInAudioStreamInvalidated:error:]_block_invoke
-[CSAudioProvider audioRecorderDisconnected:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSAudioProvider _handleAudioSystemFailure]
StreamInit
StreamPrepared
StreamStarting
StreamSteaming
StreamStopping
StreamStoppingWithScheduledStart
unknown(%tu)
com.apple.corespeech.recording
Recording transaction
-[CSAudioProvider _releaseRecordingTransactionIfNeeded]
%@-%@
-[CSAudioProvider _onAudioPacketWatchdogFire]
-[CSAudioProvider _scheduleDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _schduleDidStartRecordingDelegateWatchDogWithToken:]
-[CSAudioProvider _clearDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog:]
-[CSAudioProvider _clearDidStopRecordingDelegateWatchDog]
-[CSAudioProvider _updateRemoteDeviceIdFromAVVCIfNeeded]
com.apple.siri.SiriDebug.SpeakerVoiceGradingTrigger
com.apple.siri.SiriDebug.RemoteNearMissGradingTrigger
com.apple.siri.SiriDebug.VoiceProfileAddedTrigger
com.apple.siri.SiriDebug.VoiceProfileSyncTrigger
com.apple.siri.SiriDebug
+[CSSiriDebugConnection launchSiriDebugAppWithMessage:]_block_invoke
v24@?0@"AFSiriResponse"8@"NSError"16
set option : allowVoiceTriggerAssetsDownload ? %@;           allowEndpointAssetDownload ? %@;           allowLanguageDetectorAssetDownload ? %@;           allowAdBlockerAssetDownload ? %@;           allowSpeakerRecognitionAssetDownload ? %@
-[CSHomePodSettingsMonitor _stopMonitoring]
-[CSVoiceTriggerEnabledPolicyNonAOP _addVoiceTriggerEnabledConditions]_block_invoke
-[CSNNVADEndpointAnalyzer init]
-[CSNNVADEndpointAnalyzer preheat]
-[CSNNVADEndpointAnalyzer reset]
-[CSNNVADEndpointAnalyzer processAudioSamplesAsynchronously:]
-[CSNNVADEndpointAnalyzer recordingStoppedForReason:]
-[CSNNVADEndpointAnalyzer stopEndpointer]
-[CSNNVADEndpointAnalyzer resetForNewRequestWithSampleRate:recordContext:]
-[CSSpeechDetectionDevicePresentMonitor handleSpeechDetectionVADPresentChange:]
-[CSSpeechDetectionDevicePresentMonitor _systemControllerDied:]
rtblobs
adkblobs
blob
majorVersion
minorVersion
signature
cert
rtlocalemap
jarvislocalemap
adklocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:]
-[CSAsset(RTModel) localeMapWithName:]
%02x
-[CSGestureMonitor isTriggerHandheld]
CSAudioRouteChangeMonitorImpl queue
-[CSAudioRouteChangeMonitorImpl preferredExternalRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl pickableRoutesDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl carPlayAuxStreamSupportDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl carPlayIsConnectedDidChange:]
-[CSAudioRouteChangeMonitorImpl _startMonitoringWithQueue:]
-[CSAudioRouteChangeMonitorImpl _stopMonitoring]
-[CSAudioRouteChangeMonitorImpl _notifyHearstConnectionState:]
-[CSAudioRouteChangeMonitorImpl _notifyHearstRoutedState:]
-[CSAudioRouteChangeMonitorImpl _notifyJarvisConnectionState:]
-[CSAudioRouteChangeMonitorImpl _notifySiriInputSourceOutOfBandState:]
-[CSAudioRouteChangeMonitorImpl _systemControllerDied:]
Builtin Microphone
[Context = %ld]
[DeviceId = %@]
[Announced = %d]
[streamHandleId = %d]
[startHostTime = %llu]
[startAlert = %d]
[stopAlert = %d]
[stopOnErrorAlert = %d]
[skipAlert = %@]
-[CSAudioRecorder initWithQueue:error:]
-[CSAudioRecorder userSessionActivateMonitor:didReceivedUserSessionActiveHasChanged:]_block_invoke
-[CSAudioRecorder willDestroy]
-[CSAudioRecorder dealloc]
-[CSAudioRecorder _destroyVoiceController]
-[CSAudioRecorder _voiceControllerWithError:]_block_invoke
-[CSAudioRecorder _voiceControllerWithError:]
-[CSAudioRecorder setAnnounceCallsEnabled:withStreamHandleID:]
-[CSAudioRecorder setContext:completion:]
-[CSAudioRecorder setCurrentContext:streamHandleId:error:]
-[CSAudioRecorder prepareAudioStreamRecord:recordDeviceIndicator:error:]
-[CSAudioRecorder _startAudioStreamForAudioInjectionWithAVVCContext:]
-[CSAudioRecorder startAudioStreamWithOption:recordDeviceIndicator:error:]
-[CSAudioRecorder stopAudioStreamWithRecordDeviceIndicator:error:]
-[CSAudioRecorder isSessionCurrentlyActivated]
-[CSAudioRecorder recordDeviceInfoWithStreamHandleId:recordDeviceIndicator:]
%llu
-[CSAudioRecorder audioDeviceInfoWithStreamHandleId:recordDeviceIndicator:]
-[CSAudioRecorder recordingSampleRateWithStreamHandleId:]
-[CSAudioRecorder isNarrowBandWithStreamHandleId:]
-[CSAudioRecorder prewarmAudioSessionWithStreamHandleId:error:]
iPhone9,1
iPhone9,2
iPhone9,3
iPhone9,4
-[CSAudioRecorder setRecordMode:streamHandleId:error:]
-[CSAudioRecorder activateAudioSessionWithReason:streamHandleId:error:]
-[CSAudioRecorder deactivateAudioSession:error:]
-[CSAudioRecorder deactivateAudioSession:streamHandleId:error:]
+[CSAudioRecorder createSharedAudioSession]
-[CSAudioRecorder enableSmartRoutingConsiderationForStream:enable:]
-[CSAudioRecorder setDuckMixWithOthersForStream:duckOthers:duckToLevelInDB:mixWithOthers:]
+[CSAudioRecorder resetDuckSettings]
-[CSAudioRecorder enableMiniDucking:]
Enable
Disable
-[CSAudioRecorder configureAlertBehavior:audioStreamHandleId:]
isBluetoothConnected
-[CSAudioRecorder voiceTriggerInfoWithRecordDeviceIndicator:]
-[CSAudioRecorder isDuckingSupportedOnCurrentRouteWithStreamHandleID:error:]
is not
-[CSAudioRecorder _updateLanguageCodeForRemoteVTEIResult:]
useRemoteBuiltInMic
-[CSAudioRecorder _processAudioBuffer:audioStreamHandleId:arrivalTimestampToAudioRecorder:]
-[CSAudioRecorder _compensateChannelDataIfNeeded:receivedNumChannels:]
-[CSAudioRecorder _trackRemoteAccessoryStreamIdIfNeeded:]
-[CSAudioRecorder playRecordStartingAlertAndResetEndpointerFromStream:]
-[CSAudioRecorder playAlertSoundForType:recordDevideIndicator:]
-[CSAudioRecorder voiceControllerDidStartRecording:forStream:successfully:error:]
-[CSAudioRecorder voiceControllerAudioCallback:forStream:buffer:]
-[CSAudioRecorder voiceControllerDidStopRecording:forStream:forReason:]
-[CSAudioRecorder voiceControllerStreamInvalidated:forStream:]
-[CSAudioRecorder voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[CSAudioRecorder voiceControllerDidFinishAlertPlayback:ofType:error:]
-[CSAudioRecorder voiceControllerEncoderErrorDidOccur:error:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:withContext:]
-[CSAudioRecorder voiceControllerEndRecordInterruption:]
-[CSAudioRecorder voiceControllerWillSetAudioSessionActive:willActivate:]
-[CSAudioRecorder voiceControllerDidSetAudioSessionActive:isActivated:]
-[CSAudioRecorder voiceControllerMediaServicesWereLost:]
-[CSAudioRecorder voiceControllerMediaServicesWereReset:]
-[CSAudioRecorder _hasLocalPendingTwoShot]_block_invoke
-[CSAudioRecorder _getRecordSettingsWithRequest:]
-[CSAudioRecorder _fetchRemoteRecordClientWithDeviceId:streamHandleId:]
-[CSAudioTandemStream attachToPrimaryStreamWithCompletion:]
-[CSAudioTandemStream prepareAudioStreamSyncWithRequest:error:]
CSAudioTandemStream.m
-[CSAudioTandemStream prepareAudioStreamWithRequest:completion:]
-[CSAudioTandemStream startAudioStreamWithOption:completion:]
-[CSAudioTandemStream stopAudioStreamWithOption:completion:]
RemoteVAD Align Queue
-[CSOpportuneSpeakListener startListenWithOption:completion:]
-[CSOpportuneSpeakListener _startRequestWithCompletion:]_block_invoke
-[CSOpportuneSpeakListener _startRequestWithCompletion:]
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]_block_invoke
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]
-[CSOpportuneSpeakListener audioStreamProvider:audioBufferAvailable:]
-[CSOpportuneSpeakListener spgEndpointAnalyzer:hasSilenceScoreEstimate:clientProcessedAudioTimeMS:]
-[NSData(XPCObject) _cs_initWithXPCObject:]
-[CSSiriEnabledMonitor _startMonitoringWithQueue:]
-[CSSiriEnabledMonitor _stopMonitoring]
_AssistantPrefsChangedNotification
-[CSSmartSiriVolumeEnablePolicyHomePod _addSmartSiriVolumeEnabledConditions]_block_invoke
CSBluetoothManager Queue
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]_block_invoke
v16@?0^{BTLocalDeviceImpl=}8
-[CSBluetoothManager _getConnectedBluetoothDeviceAddressesFromLocalDevice:]
-[CSBluetoothManager _getAddressWithBTDevice:]
-[CSBluetoothManager _getWirelessSplitterInfoFromLocalDevice:]
-[CSBluetoothManager _detachBluetoothSession]
-[CSBluetoothManager _attachBluetoothSession]
CSBluetoothManager
-[CSBluetoothManager _sessionAttached:result:]
-[CSBluetoothManager _sessionDetached:]
-[CSBluetoothManager _sessionTerminated:]
-[CSBluetoothManager _setUpLocalDevice]
CSActivationXPCListener
-[CSActivationXPCListener listen]
-[CSActivationXPCListener _handleListenerEvent:]
-[CSActivationXPCListener _handleListenerError:]
-[CSActivationXPCListener _handleNewRemoteConnection:]
corespeechd.activation
-[CSActivationXPCListener CSActivationXPCConnectionReceivedClientError:clientError:client:]_block_invoke
CSBenchMarker Queue
-[CSModelBenchmarker init]
-[CSModelBenchmarker pingpong:completion:]
Model benchmark Queue
HS1_HS2
SiriX
enableTelemetry=YES
-[CSModelBenchmarker audioEngineDidStartRecord:audioStreamHandleId:successfully:error:]_block_invoke
each batch duration: %d
-[CSModelBenchmarker audioEngineDidStopRecord:audioStreamHandleId:reason:]_block_invoke
v16@?0Q8
-[CSModelBenchmarker _setupAudioInjectionEngineWithAudioURL:]_block_invoke
-[CSModelBenchmarker _setupAudioInjectionEngineWithAudioURL:]_block_invoke_2
subsample
stride
spid
Cannot parse to JSON
Cannot find the file
frontends
nnet-forward
strict-batch-size
nnet-forward-skip
skip-frames
+[CSRemoteDeviceProtocolInfo localDeviceProtocolInfo]
protocolVersion=%lu, deviceCategory=%lu, buildVersion=%@, deviceProductVersion=%@, deviceProductType=%@
protocolVersion
deviceCategory
buildVersion
deviceProductVersion
deviceProductType
-[CSAudioSessionInfoProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionInfoProvidingProxy _handleSessionIDRequestMessage:messageBody:client:]
+[CSConnectionListener(SmartSiriVolume) createSmartSiriVolumeListener]
com.apple.corespeech.corespeechd.ssv.service
+[CSConnectionListener(SmartSiriVolume) createSmartSiriVolumeListener]_block_invoke
com.apple.MobileAsset.VoiceTriggerAssetsMac
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController assetOfType:language:compatibilityVersion:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:query:withLanguage:completion:]_block_invoke
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]_block_invoke
v20@?0@"NSError"8B16
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.SpeechEndpointAssetsWatch
com.apple.MobileAsset.SpeechEndpointAssetsTV
com.apple.MobileAsset.LanguageDetectorAssets
com.apple.MobileAsset.AdBlockerAssets
com.apple.MobileAsset.SpeakerRecognitionAssets
Warmup
clientStartSampleCount
triggerEndSampleCount
extraSamplesAtStart
SearchOrMessaging
ExtraDelayMs
EndpointerDecisionLagMs
ClientLagThresholdMsKey
ClampedSFLatencyMsForClientLag
UseDefaultServerFeaturesOnClientLag
com.apple.cs.%@.stateserialqueue
com.apple.cs.%@.sepfQueue
-[CSHybridEndpointAnalyzer init]
com.apple.cs.%@.apQueue
com.apple.cs.%@.hybridClassifierfQueue
com.apple.cs.%@.osdQueue
-[CSHybridEndpointAnalyzer _loadAndSetupEndpointerAssetIfNecessary]
-[CSHybridEndpointAnalyzer processAudioSamplesAsynchronously:]
-[CSHybridEndpointAnalyzer processAudioSamplesAsynchronously:]_block_invoke
-[CSHybridEndpointAnalyzer updateEndpointerThreshold:]
-[CSHybridEndpointAnalyzer updateEndpointerDelayedTrigger:]
-[CSHybridEndpointAnalyzer processServerEndpointFeatures:]
-[CSHybridEndpointAnalyzer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke_2
-[CSHybridEndpointAnalyzer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]_block_invoke_2
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]_block_invoke
locale
endpointerModelVersion
wordCount
trailingSilenceDuration
serverFeaturesLatency
clientSilenceProbability
clientSilenceFramesCountMs
endpointResult
-[CSHybridEndpointAnalyzer logFeaturesWithEvent:locale:]_block_invoke
-[CSHybridEndpointAnalyzer handleVoiceTriggerWithActivationInfo:]_block_invoke
-[CSHybridEndpointAnalyzer recordingStoppedForReason:]
-[CSHybridEndpointAnalyzer stopEndpointer]
-[CSHybridEndpointAnalyzer resetForNewRequestWithSampleRate:recordContext:]
-[CSHybridEndpointAnalyzer resetForNewRequestWithSampleRate:recordContext:]_block_invoke
-[CSHybridEndpointAnalyzer _readParametersFromHEPAsset:]_block_invoke
-[CSHybridEndpointAnalyzer CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSHybridEndpointAnalyzer CSAssetManagerDidDownloadNewAsset:]
-[CSHybridEndpointAnalyzer CSFirstUnlockMonitor:didReceiveFirstUnlock:]
-[CSHybridEndpointAnalyzer _updateAssetWithLanguage:]_block_invoke
cs_hep_marsh.json
cs_hep.json
-[CSHybridEndpointAnalyzer _getCSHybridEndpointerConfigForAsset:]
voic
carplay
hearst
raisetospeak
auto
CSAudioInjectionXPC Queue
-[CSAudioInjectionXPC createAudioInjectionDeviceWithType:deviceName:deviceID:productID:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]_block_invoke
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:]_block_invoke
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:]_block_invoke_2
-[CSAudioInjectionXPC connectDeviceWithUUID:completion:]
-[CSAudioInjectionXPC disconnectDeviceWithUUID:completion:]
-[CSAudioInjectionXPC disconnectDeviceWithUUID:completion:]_block_invoke
-[CSAudioInjectionXPC primaryInputDeviceUUIDWithCompletion:]
-[NSNumber(XPCObject) _cs_initWithXPCObject:]
-[NSNumber(XPCObject) _cs_xpcObject]
CSActivationEventNotificationHandler Queue
-[CSActivationEventNotificationHandler setDelegate:forType:]_block_invoke
-[CSActivationEventNotificationHandler notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotificationHandler _notifyActivationEvent:completion:]
-[CSActivationEventNotificationHandler _notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotificationHandler _startMonitoring]
-[CSActivationEventNotificationHandler _stopMonitoring]
triggerStartSampleCount
isMediaPlaying
noiseLevelDB
musicLevelDB
musicPlaybackVolumeDB
alarmVolume
finalTTSVolume
isAlarmPlaying
isTimerPlaying
isLKFSProcessPaused
removeVoiceTriggerSamples
-[CSSmartSiriVolume initWithSamplingRate:asset:]
-[CSSmartSiriVolume startSmartSiriVolume]_block_invoke
RUNNING
PAUSED
v20@?0B8Q12
-[CSSmartSiriVolume _startListenPolling]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke_2
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]
-[CSSmartSiriVolume _stopListening]
-[CSSmartSiriVolume _stopListening]_block_invoke
-[CSSmartSiriVolume initializeMediaPlayingState]_block_invoke
playing
NOT playing
-[CSSmartSiriVolume initializeMediaPlayingState]
-[CSSmartSiriVolume initializeAlarmState]_block_invoke
firing
NOT firing
-[CSSmartSiriVolume initializeTimerState]_block_invoke
-[CSSmartSiriVolume _setAsset:]
-[CSSmartSiriVolume _processAudioChunk:soundType:]
-[CSSmartSiriVolume estimateSoundLevelbySoundType:]_block_invoke
-[CSSmartSiriVolume _pauseSSVProcessing]_block_invoke
-[CSSmartSiriVolume _resumeSSVProcessing]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:audioBufferAvailable:]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:didStopStreamUnexpectly:]
-[CSSmartSiriVolume didDetectKeywordWithResult:]
-[CSSmartSiriVolume didDetectKeywordWithResult:]_block_invoke
-[CSSmartSiriVolume estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:]_block_invoke
-[CSSmartSiriVolume _combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:]
-[CSSmartSiriVolume CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:]_block_invoke
-[CSSmartSiriVolume didReceiveAlarmChanged:]_block_invoke
-[CSSmartSiriVolume didReceiveTimerChanged:]_block_invoke
-[CSSmartSiriVolume CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSSmartSiriVolume siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSSmartSiriVolume _setStartAnalyzeTime:]
-[CSSmartSiriVolume getVolumeForTTSType:withOverrideMediaVolume:WithRequestTime:]
vector
CSAudioInjectionProvider
ATVRemoteInput
BuiltInMic
-[CSAudioInjectionProvider dealloc]
-[CSAudioInjectionProvider stop]
-[CSAudioInjectionProvider startAudioStreamWithOption:recordDeviceIndicator:error:]
-[CSAudioInjectionProvider stopAudioStreamWithRecordDeviceIndicator:error:]
BuiltInSpeaker
CSAttSiriStateMonitor queue
-[CSAttSiriStateMonitor updateState:]_block_invoke
+[CSUtils(Compression) extractArchiveFromDirectory:toDir:]
-[CSListeningEnabledPolicyWatch _addListeningEnabledConditions]_block_invoke
-[CSOtherAppRecordingStateMonitor handleOtherAppRecordingStateChange:]
-[CSOtherAppRecordingStateMonitor _systemControllerDied:]
CSHangUpEnabledMonitor queue
-[CSHangUpEnabledMonitor _checkCanUseVoiceTriggerDuringCallEnabled]
-[CSHangUpEnabledMonitor _voiceTriggerDuringCallEnabledDidChange]_block_invoke
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
+[CSUtils(LanguageCode) getSiriLanguageWithEndpointId:fallbackLanguage:]
Adaptive Siri Volume Disabled
-[CSAutomaticVolumeEnabledMonitor observeValueForKeyPath:ofObject:change:context:]_block_invoke
CSAudioFileReader Queue
-[CSAudioFileReader initWithURL:]
-[CSAudioFileReader prepareRecording:]
-[CSAudioFileReader startRecording]
-[CSAudioFileReader _readAudioBufferAndFeed]
-[CSAudioFileReader stopRecording]
accessible-extended
accessible-maximum
-[CSEndpointerProxy resetForNewRequestWithSampleRate:recordContext:recordOption:voiceTriggerInfo:]
-[CSEndpointerProxy resetForVoiceTriggerTwoShotWithSampleRate:]
-[CSEndpointerProxy preheat]
-[CSEndpointerProxy endpointer:didDetectStartpointAtTime:]
-[CSEndpointerProxy endpointer:didDetectHardEndpointAtTime:withMetrics:]
-[CSEndpointerProxy endpointer:detectedTwoShotAtTime:]
-[CSEndpointerProxy endpointerModelVersion]
-[CSEndpointerProxy updateEndpointerThreshold:]
-[CSEndpointerProxy logHybridEndpointFeaturesWithEvent:locale:]
com.apple.cs.%@.queue
-[CSAttSiriOSDNode addReceiver:]_block_invoke
-[CSAttSiriOSDNode removeReceiver:]_block_invoke
-[CSAttSiriOSDNode stop]_block_invoke
-[CSAttSiriOSDNode setPrefetchedAsset:]_block_invoke
-[CSAttSiriOSDNode attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:]_block_invoke
-[CSAttSiriOSDNode attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:]_block_invoke_2
-[CSAttSiriOSDNode checkConsecutiveBoronSignalWithAudioChunk:]
-[CSAttSiriOSDNode attSiriAudioSrcNodeDidStop:]_block_invoke
-[CSAttSiriOSDNode resetForNewRequestWithRecordContext:endpointerSettings:voiceTriggerInfo:osdMode:]_block_invoke
-[CSAttSiriOSDNode osdAnalyzer:didUpdateOSDFeatures:]
-[CSMyriadSelfTriggerCoordinator selfTriggerDetector:didDetectSelfTrigger:]
com.apple.siri.corespeech.selftrigger
SPG.nnet
version
CSEndpointerAssetManager queue
-[CSEndpointerAssetManager init]
-[CSEndpointerAssetManager checkFirstUnlocked]
-[CSEndpointerAssetManager CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]_block_invoke
-[CSEndpointerAssetManager CSAssetManagerDidDownloadNewAsset:]_block_invoke
-[CSEndpointerAssetManager CSFirstUnlockMonitor:didReceiveFirstUnlock:]_block_invoke
-[CSEndpointerAssetManager assetStatus:]
-[CSEndpointerAssetManager _getCurrentHEPAsset]
-[CSEndpointerAssetManager _updateOEPAssetsWithLanguage:]
-[CSEndpointerAssetManager _notifyAssetsUpdate]
-[CSEndpointerAssetManager _fetchEndpointMobileAssetWithLanguage:]
ModelInfo=
-[CSEndpointerAssetManager _getOEPVersionFromPath:]
-[CSEndpointerAssetManager _getFakeEndpointAsset]
CSAudioInjectionBuiltInEngine
-[CSAudioInjectionBuiltInEngine dealloc]
SampleCount
HostTime
-[CSAudioInjectionBuiltInEngine getBestSampleCountWithOption:]
-[CSAudioInjectionBuiltInEngine audioEngineBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:]_block_invoke
trigger-time
-[CSSpringboardStartMonitor _startMonitoringWithQueue:]
-[CSSpringboardStartMonitor _stopMonitoring]
-[CSSpringboardStartMonitor _checkSpringBoardStarted]
com.apple.springboard.finishedstartup
speakerRecognition
satThreshold
combinationWeight
implicitProfileThreshold
implicitProfileDeltaThreshold
implicitVTThreshold
pruningExplicitSATThreshold
pruningExplicitPSRThreshold
pruningSATThreshold
pruningPSRThreshold
numPruningRetentionUtt
maxEnrollmentUtterances
pruningCookie
configFileRecognizer
configFileNDAPI
voiceTriggerSecondPassAOP
implicit_training_enabled
multiUserHighScoreThreshold
multiUserLowScoreThreshold
multiUserConfidentScoreThreshold
multiUserDeltaScoreThreshold
useSpeakerRecognitionAsset
phrase
-[CSAsset(SpeakerRecognition) satScoreThresholdForPhId:]
recognizer.json
config.txt
-[CSAsset(SpeakerRecognition) containsMultiUserThresholds]
CSActivationEventNotifier
-[CSActivationEventNotifier notifyActivationEventSynchronously:completion:]
-[CSActivationEventNotifier notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotifier notifyActivationEvent:deviceId:activationInfo:completion:]_block_invoke
-[CSActivationEventNotifier _createXPCClientConnection]
CSAlarmMonitor queue
-[CSAlarmMonitor _startMonitoringWithQueue:]
-[CSAlarmMonitor _stopMonitoring]
-[CSGestureMonitorPhone _startMonitoringWithQueue:]
CMWakeGestureManager
-[CSSmartSiriVolumeServiceProxy init]
overrideMediaVolume
SSV Manager returned estimate as nil
-[CSSmartSiriVolumeServiceProxy getVolumeForTTSType:withContext:reply:]
SmartSiriVolume not supported on this device type. smartSiriVolume : %p
-[CSSmartSiriVolumeServiceProxy setSmartSiriVolumePercentage:]
-[CSSmartSiriVolumeServiceProxy setSmartSiriVolumeDirection:]
-[CSSmartSiriVolumeServiceProxy setPermanentVolumeOffsetWithDirection:]
CSAttSiriAudioSrcNode queue
-[CSAttSiriAudioSrcNode initWithMasterAudioStream:name:]
-[CSAttSiriAudioSrcNode addReceiver:]_block_invoke
-[CSAttSiriAudioSrcNode dealloc]
-[CSAttSiriAudioSrcNode audioStreamProvider:didStopStreamUnexpectly:]_block_invoke
-[CSAttSiriAudioSrcNode _handleDidStop]
-[CSAttSiriAudioSrcNode _fetchAudioDecoderForTV:]
+[CSPhoneCallStateMonitor sharedInstance]
CSPhoneCallStateMonitor.m
-[CSPhoneCallStateMonitor phoneCallState]
-[CSPhoneCallStateMonitor firstPartyCall]
-[CSFirstUnlockMonitor _stopMonitoring]
-[NSString(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0Q8@"NSObject<OS_xpc_object>"16
-[NSArray(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8Q16^B24
BuiltInMicrophoneDevice
CSVoiceTriggerEventInfoProvider Queue
-[CSVoiceTriggerEventInfoProvider fetchVoiceTriggerInfoWithAudioContext:triggerInfoProviding:resultVoiceTriggerInfo:resultRTSTriggerInfo:]_block_invoke
-[CSVoiceTriggerEventInfoProvider fetchVoiceTriggerInfoWithAudioContext:triggerInfoProviding:resultVoiceTriggerInfo:resultRTSTriggerInfo:]
route
isRemoteDevice
remoteDeviceUID
remoteDeviceProductIdentifier
remoteDeviceUIDString
%@ {route = %@, isRemoteDevice = %d, remoteDeviceUID = %@, remoteDeviceProductIdentifier = %@, remoteDeviceUIDString = %@}
CSCommandControlBehaviorMonitor
-[CSCommandControlBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStopStream:]_block_invoke
CSSmartSiriVolumeRunPolicy queue
-[CSSmartSiriVolumeRunPolicy _addSmartSiriVolumeEnabledConditions]_block_invoke
ApplicationProcessorWithRingtone
v16@?0@"AFSiriActivationResult"8
-[CSSiriLauncher notifyBuiltInVoiceTrigger:myriadPHash:completion:]_block_invoke
Trigger was during a ringtone
v16@?0@"<AFMyriadContextMutating>"8
-[CSSiriLauncher notifyWakeKeywordSpokenInBuiltInMic:]_block_invoke
-[CSSiriLauncher notifyCarPlayVoiceTriggerPrewarm:deviceId:completion:]_block_invoke
-[CSSiriLauncher notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:]_block_invoke
-[CSSiriLauncher notifyWakeKeywordSpokenCarPlay:deviceId:]_block_invoke
-[CSSiriLauncher notifyBluetoothDeviceVoiceTrigger:deviceId:completion:]_block_invoke
-[CSSiriLauncher notifyWakeKeywordSpokenBluetoothDevice:deviceId:]_block_invoke
-[CSSiriLauncher deactivateSiriActivationConnectionWithReason:withOptions:withContext:]_block_invoke
-[CSSiriLauncher notifyDarwinVoiceTrigger:deviceId:myriadPHash:myriadLateActivationExpirationTime:completion:]_block_invoke
-[CSAudioProcessWaitingBuffer initWithSiriSessionUUID:]
-[CSAudioProcessWaitingBuffer dealloc]
localSpeechRecognizerQueue Queue
-[CSAttSiriAsrNode stopWithReason:]
-[CSAttSiriAsrNode stopWithReason:]_block_invoke
-[CSAttSiriAsrNode _adjustEndpointStartTimeWithVoiceTriggerEvent:]
-[CSAttSiriAsrNode preheatLocalSpeechRecognitionWithLanguage:source:]_block_invoke
SRD ASR Result Delivery Transaction
-[CSAttSiriAsrNode startDeliverLocalSpeechRecognitionResultsWithSettings:]_block_invoke
-[CSAttSiriAsrNode _startDeliverLocalSpeechRecognitionResultsWithRequestId:]
-[CSAttSiriAsrNode stopDeliverLocalSpeechRecognitionWithReason:requestId:]
-[CSAttSiriAsrNode stopDeliverLocalSpeechRecognitionWithReason:requestId:]_block_invoke
-[CSAttSiriAsrNode disableLocalSpeechRecognitionForRequestId:]
-[CSAttSiriAsrNode disableLocalSpeechRecognitionForRequestId:]_block_invoke
-[CSAttSiriAsrNode pauseLocalSpeechRecognitionForRequestId:]
-[CSAttSiriAsrNode resumeLocalRecognitionWithRequestId:prefixText:postfixText:selectedText:]
-[CSAttSiriAsrNode attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:]_block_invoke
-[CSAttSiriAsrNode attSiriAudioSrcNodeDidStop:]_block_invoke
-[CSAttSiriAsrNode attSiriNode:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[CSAttSiriAsrNode _enforceEndpointHintWithRequestId:rcId:shouldAccept:featuresToLog:]
-[CSAttSiriAsrNode _enforceEndpointHintWithRequestId:rcId:shouldAccept:featuresToLog:]_block_invoke
-[CSAttSiriAsrNode start]
ASRNode Recording Transaction
-[CSAttSiriAsrNode start]_block_invoke
-[CSAttSiriAsrNode _preheatWithLanguage:preheatSource:]
-[CSAttSiriAsrNode prepareToStartSpeechRequestWithStartStreamOption:audioRecordContext:voiceTriggerInfo:]_block_invoke
-[CSAttSiriAsrNode _stopPreviousRecognitionTaskIfNeededWithNewRequestId:]
-[CSAttSiriAsrNode _shouldDisableLocalSpeechRecognizerWithOption:audioRecordContext:]
-[CSAttSiriAsrNode setMhId:]
-[CSAttSiriAsrNode _startLocalSpeechRecognizerIfNeeded]
localASR
-[CSAttSiriAsrNode _startLocalSpeechRecognizerIfNeeded]_block_invoke
v24@?0@"CESRModelProperties"8@"NSError"16
-[CSAttSiriAsrNode _processAudioChunk:]
-[CSAttSiriAsrNode _handleStopSpeechRecognitionTaskIfNeeded:]
-[CSAttSiriAsrNode _scheduleRecordingTransactionReleaseTimer]
-[CSAttSiriAsrNode _releaseRecordingTransactionIfNeededWithToken:]
-[CSAttSiriAsrNode _interactiveLocalSpeechRecognizer]
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizeTokens:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizeTokens:withMetadata:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didProcessAudioDuration:]_block_invoke
-[CSAttSiriAsrNode _queryShouldAcceptEagerResultForDuration:requestId:rcId:]
v20@?0B8@"NSArray"12
-[CSAttSiriAsrNode _handleShouldAcceptEagerResultWithRequestId:rcId:duration:shouldAccept:featuresToLog:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizeFinalResultCandidatePackage:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizePackage:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizePackage:withMetadata:]_block_invoke
-[CSAttSiriAsrNode _handleDidRecognizedFinalSpeechPackage:requestId:metadata:]
-[CSAttSiriAsrNode _handleDidRecognizedSpeechPackageForEagerRecognitionCandidate:requestId:rcId:metadata:]
-[CSAttSiriAsrNode localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didSelectRecognitionModelWithModelProperties:]
HomeButton
-[CSAttSiriAsrNode _fetchInputOriginWithRecordContext:]
-[CSAttSiriAsrNode _setLocalSpeechRecognizerState:]
[Idle]
[Disabled]
[Delivering message]
[Waiting for start deliver message]
[Waiting for start deliver message after client stop]
[Unknown]
-[CSAttSiriAsrNode _fetchRecognizerLanguageWithSiriLanguage:UILanguage:taskString:]
-[CSAttSiriAsrNode _markTimeToFirstWordMetric]
com.apple.corespeech.attsiri-timer
-[CSAttSiriTimer setTimerForSecs:completionBlock:]_block_invoke
-[CSAttSiriTimer cancelTimer]_block_invoke
-[CSAudioStream initWithAudioStreamProvider:streamName:streamRequest:]
-[CSAudioStream dealloc]
-[CSAudioStream startAudioStreamWithOption:completion:]
-[CSAudioStream stopAudioStreamWithOption:completion:]_block_invoke
-[CSAudioStream isStreaming]
-[CSAudioStream updateAudioStreamStartTimeInSampleCount:]
-[CSAudioStream audioStreamProvider:didStopStreamUnexpectly:]
-[CSAudioStream audioStreamProvider:didHardwareConfigurationChange:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsTV.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerHSAssets.ma.cached-metadata-updated
-[CSAudioPreprocessor resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
-[CSAudioPreprocessor flush]
ZeroFilterMetrics
-[CSAudioPreprocessor _fetchCurrentMetrics]
BeepCancellerMetrics
com.apple.corespeech.CSAccessorySiriClientBehaviourMonitor
-[CSAccessorySiriClientBehaviorMonitor notifyWillStartStreamWithContext:option:forAccessory:]_block_invoke
-[CSAccessorySiriClientBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:withEventUUID:forAccessory:]_block_invoke
-[CSAccessorySiriClientBehaviorMonitor notifyWillStopStream:reason:forAccessory:]_block_invoke
-[CSAccessorySiriClientBehaviorMonitor notifyDidStopStream:reason:withEventUUID:forAccessory:]_block_invoke
CSAudioRouteChangeMonitorImplWatch queue
-[CSAudioRouteChangeMonitorImplWatch activeAudioRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImplWatch _startMonitoringWithQueue:]
-[CSAudioRouteChangeMonitorImplWatch _stopMonitoring]
-[CSAudioRouteChangeMonitorImplWatch _notifyHearstRoutedState:]
-[CSAudioRouteChangeMonitorImplWatch _notifySiriInputSourceOutOfBandState:]
-[CSAudioRouteChangeMonitorImplWatch _systemControllerDied:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssetsTV.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
corespeechd speaker xpc connection client queue
-[CSVoiceIdXPCConnection initWithConnection:]
-[CSVoiceIdXPCConnection _handleClientEvent:]
-[CSVoiceIdXPCConnection _handleClientMessage:client:]
utterancePath
voiceTriggerEventInfo
otherCtxt
audioRecordCtx
-[CSVoiceIdXPCConnection _handleClientMessage:client:]_block_invoke
-[CSVoiceIdXPCConnection _handleClientMessage:client:]_block_invoke_2
-[CSVoiceIdXPCConnection _handleClientError:client:]
-[CSAssetManagerEnablePolicy _addAssetManagerEnabledConditions]_block_invoke
-[CSAudioRecordContext(AVVC) avvcContextSettings]
CSXPCListener
-[CSXPCListener listen]
-[CSXPCListener _handleListenerEvent:]
-[CSXPCListener _handleListenerError:]
-[CSXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.xpc
-[CSXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
extra-delay-frequency
endpoint-threshold
-[CSHybridEndpointer endpointerModelVersion]_block_invoke
-[CSHybridEndpointer updateEndpointerThreshold:]_block_invoke
-[CSHybridEndpointer updateEndpointerDelayedTrigger:]_block_invoke
-[CSHybridEndpointer setEndpointerOperationMode:]_block_invoke
-[CSHybridEndpointer fetchCurrentEndpointerOperationMode]_block_invoke
-[CSHybridEndpointer processTaskString:]_block_invoke
-[CSHybridEndpointer processServerEndpointFeatures:]
-[CSHybridEndpointer processServerEndpointFeatures:]_block_invoke_2
-[CSHybridEndpointer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke_2
-[CSHybridEndpointer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke
-[CSHybridEndpointer processFirstAudioPacketTimestamp:firstAudioSampleSensorTimestamp:]_block_invoke
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]_block_invoke_2
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]_block_invoke
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]
-[CSHybridEndpointer logFeaturesWithEvent:locale:]_block_invoke
-[CSHybridEndpointer handleVoiceTriggerWithActivationInfo:]_block_invoke
-[CSHybridEndpointer terminateProcessing]
-[CSHybridEndpointer recordingStoppedForReason:]
-[CSHybridEndpointer stopEndpointer]
-[CSHybridEndpointer resetForNewRequestWithSampleRate:recordContext:]
-[CSHybridEndpointer resetForNewRequestWithSampleRate:recordContext:]_block_invoke
-[CSHybridEndpointer _readParametersFromHEPAsset:]_block_invoke
-[CSHybridEndpointer endpointerAssetManagerDidUpdateAsset:]_block_invoke
-[CSHybridEndpointer _getCSHybridEndpointerConfigForAsset:]
-[CSRawAudioInjectionProvider init]
CSRawAudioInjectionProvider
-[CSRawAudioInjectionProvider dealloc]
-[CSRawAudioInjectionProvider setContext:completion:]
-[CSRawAudioInjectionProvider setCurrentContext:streamHandleId:error:]
-[CSRawAudioInjectionProvider prepareAudioStreamRecord:recordDeviceIndicator:error:]
-[CSRawAudioInjectionProvider startAudioStreamWithOption:recordDeviceIndicator:error:]
/var/mobile/darwin_test.wav
-[CSRawAudioInjectionProvider stopAudioStreamWithRecordDeviceIndicator:error:]
-[CSRawAudioInjectionProvider isRecordingWithRecordDeviceIndicator:]
RawAudioInjection
-[CSRawAudioInjectionProvider prewarmAudioSessionWithStreamHandleId:error:]
-[CSRawAudioInjectionProvider activateAudioSessionWithReason:streamHandleId:error:]
CSAudioInjectionTvRemoteEngine
com.apple.coreaudio.BorealisToggled
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]_block_invoke
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerEnabledMonitor _stopMonitoring]
-[CSVoiceTriggerEnabledMonitor _checkVoiceTriggerEnabled]
announcemessage
-[CSAttSiriRCHandler initWithEndpointerNode:uresNode:]
-[CSAttSiriRCHandler processRCWithId:duration:lrnnScore:lrnnThreshold:taskId:forceAccept:completionHandler:]
-[CSAttSiriRCHandler processRCWithId:duration:lrnnScore:lrnnThreshold:taskId:forceAccept:completionHandler:]_block_invoke
-[CSAttSiriRCHandler getMitigationDecisionForRCIdWithCompletion:completion:]
estimatedTTSVolume
debugLogPath
-[CSAlwaysOnProcessorStateMonitor _startMonitoringWithQueue:]_block_invoke
com.apple.audio.AOP.enable
-[CSAlwaysOnProcessorStateMonitor _startMonitoringWithQueue:]_block_invoke_2
-[CSAlwaysOnProcessorStateMonitor _stopMonitoring]
-[CSAlwaysOnProcessorStateMonitor _didReceiveAOPListeningStateChange:]
AcousticSLTaskTypeVoiceTrigger
AcousticSLTaskTypeContConv
AcousticSL
-[CSAttSiriAFTMNode initWithAttSiriController:]
-[CSAttSiriAFTMNode addReceiver:]
-[CSAttSiriAFTMNode stop]_block_invoke
-[CSAttSiriAFTMNode setPrefetchedAsset:]_block_invoke
-[CSAttSiriAFTMNode _startRequestWithContext:withVtei:withVTAssets:taskType:completion:]
-[CSAttSiriAFTMNode startRequestWithContext:withVtei:taskType:completion:]_block_invoke
-[CSAttSiriAFTMNode _setAsset:forTask:]
-[CSAttSiriAFTMNode _startRequestWithContext:withVtei:completion:]
-[CSAttSiriAFTMNode _addAudio:]
-[CSAttSiriAFTMNode _reset]
-[CSAttSiriAFTMNode _handleAFTMResults:]
-[CSAttSiriAFTMNode analyzer:hasFinalResult:]_block_invoke
-[CSAttSiriAFTMNode analyzer:hasPartialResult:]_block_invoke
-[CSAttSiriAFTMNode _logResultToVTDirectory]
-SL.json
SLAssetVersion
SLScore
SLAnalyzedSamples
SLCheckerType
SLThreshold
SLInputOriginType
SLTaskName
-[CSAttSiriAFTMNode _reportResultToAnalytics]
-[CSBluetoothWirelessSplitterMonitorImpIOS updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:]
CSBluetoothWirelessSplitterMonitorImpIOS.m
-[CSBluetoothWirelessSplitterMonitorImpIOS splitterState:]_block_invoke
v16@?0@"CSBluetoothWirelessSplitterInfo"8
-[CSBluetoothWirelessSplitterMonitorImpIOS _startMonitoringWithQueue:]_block_invoke
-[CSBluetoothWirelessSplitterMonitorImpIOS _startMonitoringWithQueue:]
-[CSBluetoothWirelessSplitterMonitorImpIOS _stopMonitoring]
v20@?0Q8B16
com.apple.bluetooth.WirelessSplitterOn
com.apple.
com.apple.private.
-[CSAudioTimeConversionProvidingProxy handleXPCMessage:messageBody:client:audioStreamHandleId:]
deviceId
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:streamHandleId:]
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:streamHandleId:]
meta_version.json
enrollment_version.json
CSP2P_CommandType_Key
CSP2P_CommandDict_Key
corespeech
com.apple.siridebug.command.remote.heysiri
com.apple.siridebug.command.parallel.recording
com.apple.siridebug.command.transfer.voiceprofile
com.apple.siridebug.command.query.voiceprofile
com.apple.siridebug.command.reverse.transfer.voiceprofile
com.apple.siridebug.command.fetch.voiceprofile
com.apple.siridebug.command.voiceprofile.update.trigger
com.apple.siridebug.command.transfer.parallelrecording
com.apple.siridebug.command.fetch.voicegradingdata
com.apple.siridebug.command.transfer.voicegradingdata
com.apple.siridebug.command.delete.voiceprofile
CSP2P_RemoteHeySiriEnable_Key
CSP2P_RemoteHeySiriStatus_Key
CSP2P_RemoteRecordingStart_Key
CSP2P_RemoteRecordingStatus_Key
CSP2P_VoiceProfileData_Key
CSP2P_VoiceProfileFileName_Key
CSP2P_VoiceProfileSpeakerName_Key
CSP2P_VoiceProfileLocale_Key
CSP2P_VoiceProfileDataType_Key
CSP2P_VoiceProfileSegment_Key
CSP2P_VoiceProfileTotalSegments_Key
CSP2P_VoiceProfileStatus_Key
CSP2P_VoiceProfileProfileId_Key
CSP2P_VoiceProfileHomeUserId_Key
CSP2P_VoiceProfileRelativeFilePath_Key
CSP2P_VoiceProfileSiriProfileId_Key
CSP2P_VoiceProfileAppDomain_Key
CSP2P_VoiceProfileOnboardTimeStamp_Key
CSP2P_VoiceProfileTransferCompleted_Key
CSP2P_VoiceProfileRecordedData_Key
CSP2P_VoiceProfileRemoteFileName_Key
CSP2P_VoiceDataToBeGraded_Key
CSP2P_VoiceFileNameToBeGraded_Key
CSP2P_GradingDataTransferStatus_Key
CSP2P_PeerIdentifier_Key
CSP2P_IsDataCompressed_Key
CSP2P_UncompressedDataSize_Key
CSP2P_GradingBatchTransferID_Key
remote
-triggered
-almost
com.apple.corespeech.p2psvc
-[CSP2PService processRemoteCommandWithPayload:fromPeer:withReply:]_block_invoke
CoreSpeech
-[CSP2PService sendCoreSpeechGradingDataToNearbyPeer]_block_invoke
-[CSP2PService sendVTNearMissGradingDataToCompanion]_block_invoke
-[CSP2PService sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:]_block_invoke
-[CSP2PService sendAcousticGradingDataToNearbyPeer]_block_invoke
-[CSP2PService sendGeckoSpeechLogsToCompanion]_block_invoke
-[CSP2PService _processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _compressFilesInDirectory:matchingPredicate:sortedByCreationDate:compressedFileAvailable:]
-[CSP2PService _compressFilesInDirectory:matchingPredicate:sortedByCreationDate:compressedFileAvailable:]_block_invoke
q24@?0@"NSURL"8@"NSURL"16
json
B24@?0@"NSURL"8@"NSDictionary"16
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke
v52@?0@"NSString"8@"NSData"16Q24Q32B40@"NSError"44
-[CSP2PService _sendCoreSpeechGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendCoreSpeechGradingDataToPeerId:]_block_invoke
-[CSP2PService _sendGeckoSpeechLogsToPeerId:]_block_invoke_2
-[CSP2PService _sendGeckoSpeechLogsToPeerId:]_block_invoke
Gecko-
v24@?0@"NSUUID"8@"NSError"16
[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
.wav
.json
-[CSP2PService _sendCoreSpeechMagusGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendCoreSpeechMagusGradingDataToPeerId:]_block_invoke
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:withCompletion:]
fileData
fileName
peerId
%@%@
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:withCompletion:]_block_invoke
-[CSP2PService _receiveParallelRecordingFromPeerId:recordingInfo:withReply:]
%@_%@
-[CSP2PService _receiveVoiceGradingDataFromPeerId:requestInfo:withReply:]
%@.%@.%@
suppressnotification
%@.%@
-[CSP2PService _receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:]
CoreSpeechCache
audio
tdti
com.apple.siri.corespeech.voiceprofilelist.change
-[CSP2PService _processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:]_block_invoke
-[CSP2PService _processGradingDataFetchCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:]
yyyyMMddHHmmss
voiceprofiles
-[CSP2PService _getHomeUserIdForSharedSiriId:withCompletion:]
-[CSP2PService _getHomeUserIdForSharedSiriId:withCompletion:]_block_invoke
homeUserId query for siriProfileId %@ timedout !
-[CSP2PService _processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:]
Caches/VoiceTrigger/SATUpdate
_%d_%d_%@
-[CSP2PService _sendVoiceProfile:toPeerId:]
td/audio
tdti/audio
ti/audio
-[CSP2PService _sendVoiceProfile:toPeerId:]_block_invoke
-[CSP2PService _processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:]
-[CSP2PService _processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:]
-[CSP2PService _sendVoiceProfileUpdateTriggerToPeerId:forLocale:]_block_invoke
-synced.wav
-[CSP2PService _sendAcousticGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendAcousticGradingDataToPeerId:]_block_invoke
Logs/CoreSpeech/spid/grading
-[CSP2PService _createDirectoryIfDoesNotExist:]
VoiceProfileStore
trained_users.json
Caches
-[CSP2PService _getContentsOfDirectory:]
+[CSAudioRecorderFactory audioRecorderWithQueue:error:]
AttSiriController queue
-[CSAttSiriController siriClientBehaviorMonitor:willStartStreamWithContext:option:]
-[CSAttSiriController siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSAttSiriController siriClientBehaviorMonitor:didStopStream:withEventUUID:]_block_invoke
-[CSAttSiriController siriClientBehaviorMonitor:fetchedSiriClientAudioStream:successfully:]_block_invoke
-[CSAttSiriController siriClientBehaviorMonitor:preparedSiriClientAudioStream:successfully:]_block_invoke
-[CSAttSiriController CSSiriEnabledMonitor:didReceiveEnabled:]
-[CSAttSiriController _reconfigureRequiredNodes:enforceAttendingAudioNode:]
-[CSAttSiriController _forceBuildGraph:]
-[CSAttSiriController _fetchMitigationAssets]_block_invoke_2
-[CSAttSiriController _fetchMitigationAssets]_block_invoke
-[CSAttSiriController _fetchVoiceTriggerAssets]_block_invoke_2
-[CSAttSiriController _fetchVoiceTriggerAssets]_block_invoke
-[CSAttSiriController _setupAudioSrcNodeWithSiriClientStream:]
CSAttSiriController
-[CSAttSiriController _setupAudioSrcNodeWithSiriClientStream:]_block_invoke
-[CSAttSiriController _handleStartProcessingWithRecordContext:completion:]
-[CSAttSiriController _handleStartProcessingWithRecordContext:completion:]_block_invoke
-[CSAttSiriController _handleStopProcessing]
attSiri transaction
-[CSAttSiriController _releaseAttSiriTransactionIfNeeded]
-[CSAttSiriController handleAttendingAudioStopUnexpectly]_block_invoke
-[CSAttSiriController handleAudioStopUnexpectly]_block_invoke
-[CSAttSiriController CSAudioRouteChangeMonitor:didReceiveAudioRouteChangeEvent:]_block_invoke
Serial CSAssetManager queue
-[CSAssetManager initWithDownloadOption:]
-[CSAssetManager initWithDownloadOption:]_block_invoke
ENABLED
DISABLED
-[CSAssetManager setAssetDownloadingOption:]_block_invoke
-[CSAssetManager _fetchRemoteMetaData]
-[CSAssetManager _canFetchRemoteAsset:]
-[CSAssetManager CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSAssetManager _createPeriodicalDownloadTimer]
-[CSAssetManager _createPeriodicalDownloadTimer]_block_invoke
-[CSAssetManager _startPeriodicalDownload]
-[CSAssetManager _stopPeriodicalDownload]
com.apple.siri.xpc_activity.power-logging
HID event callback queue
cancelled device
Created HID device successfully
Error : Failed in creating device
-[CSHostLauncherDarwin wakeHostForVoiceTrigger]
ReportDescriptor
RequestTimeout
HIDRelaySupport
HIDRelayUSBInterface
SiriHIDDevice
+[CSUtils(AudioDevice) isHeadphoneDeviceWithRecordRoute:playbackRoute:]
+[CSUtils(AudioDevice) isBluetoothAudioDeviceConnected]
BTDetails_IsHFPRoute
+[CSUtils(AudioDevice) isBluetoothVehicleOutput]
-[CSVoiceTriggerAwareZeroFilter resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
CSSPGEndpointAnalyzer
hybridendpointer.json
-[CSSPGEndpointAnalyzer reset]_block_invoke
-[CSSPGEndpointAnalyzer dealloc]
-[CSSPGEndpointAnalyzer stop]_block_invoke
-[CSSPGEndpointAnalyzer clientSilenceFeaturesAvailable:]
-[CSBluetoothWirelessSplitterMonitorImplDarwin updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:]
-[CSBluetoothWirelessSplitterMonitorImplDarwin splitterState]
-[CSBluetoothWirelessSplitterMonitorImplDarwin _startMonitoringWithQueue:]
-[CSBluetoothWirelessSplitterMonitorImplDarwin _stopMonitoring]
-[CSAudioMetricProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMetricProvidingProxy _handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:]
corespeechd xpc connection client queue
-[CSActivationXPCConnection _handleClientEvent:]
-[CSActivationXPCConnection _handleClientMessage:client:]
-[CSActivationXPCConnection _handleClientError:client:]
-[CSActivationXPCConnection _handleActivateEventMesssage:client:]
-[CSShadowMicScoreCreator calculateShadowMicScore]
CSSiriClientBehaviorMonitor
-[CSSiriClientBehaviorMonitor notifyFetchedSiriClientAudioStream:successfully:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyPreparedSiriClientAudioStream:successfully:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyWillStopStream:reason:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStopStream:withEventUUID:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyReleaseAudioSession]_block_invoke
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
CSLanguageCodeUpdateMonitor.m
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor notifySiriLanguageCodeChanged:]
pipeline
CSAttSiriNLDANode queue
-[CSAttSiriNLDAClassifierNode initWithAttSiriController:]
-[CSAttSiriNLDAClassifierNode addReceiver:]
-[CSAttSiriNLDAClassifierNode startWithRecordContext:]
-[CSAttSiriNLDAClassifierNode startWithRecordContext:]_block_invoke
-[CSAttSiriNLDAClassifierNode stop]_block_invoke
-[CSAttSiriNLDAClassifierNode setPrefetchedAsset:]_block_invoke
-[CSAttSiriNLDAClassifierNode processSpeechPackageAsync:]_block_invoke
empty
-[CSAttSiriNLDAClassifierNode _shouldUseLegacyPath:]
nlda-bert model
-[CSAttSiriNLDAClassifierNode _holdTransactionForNldaProcessing]
-[CSAttSiriNLDAClassifierNode _releaseNldaProcessingTransaction]
CSAudioInjectionHearstEngine
-[CSAudioInjectionHearstEngine dealloc]
CSAVVCRecordingClientMonitor Queue
-[CSAVVCRecordingClientMonitor _startMonitoringWithQueue:]_block_invoke_2
v24@?0Q8@"NSError"16
-[CSAVVCRecordingClientMonitor _startMonitoringWithQueue:]
-[CSAVVCRecordingClientMonitor _stopMonitoring]
-[CSAVVCRecordingClientMonitor CSAudioServerCrashMonitorDidReceiveServerCrash:]
-[CSAVVCRecordingClientMonitor _didReceiveAVVCRecordingClientNumberChange:]
-[CSSelfTriggerEnabledMonitorAccessory _startMonitoringWithQueue:]
-[CSSelfTriggerEnabledMonitorAccessory _stopMonitoring]
-[CSSelfTriggerEnabledMonitorAccessory setEnable:]
Serial CSEventMonitor queue
-[CSEventMonitor _startMonitoringWithQueue:]
CSEventMonitor.m
-[CSEventMonitor _stopMonitoring]
triggeredPhrase
AttSiri
AttSiriCC
AttSiriHS
mitigationModelConfigFile
defaultAFTMValue
nldaConfigFile
allowKeywordFile
allowKeywordCount
useSpkrId
ouresConfig.json
nldaConfig.json
allowList.txt
[%@]
[%llu]
[%f]
BuiltInAOPVoiceTrigger
RemoteMicVoiceTrigger
RemoteMicVAD
JarvisVoiceTrigger
mediaserverdLaunched
RemoraVoiceTrigger
uuid
activationInfo
vadScore
hosttime
+[CSAudioStreamRequest defaultRequestWithContext:]
+[CSAudioStreamRequest requestForLpcmRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForOpusRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForSpeexRecordSettingsWithContext:]
[requiresHistoricalBuffer = %@]
[useCustomizedRecordSettings = %@]
[lpcmIsFloat = %@]
[isSiri = %@]
[sampleRate = %lf]
[numberOfChannels = %lu]
requiresHistoricalBuffer
useCustomizedRecordSettings
audioFormat
sampleRate
lpcmBitDepth
lpcmIsFloat
NumberOfChannels
encoderBitRate
isSiri
recordContext
-[CSVoiceTriggerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetDownloadMonitor _stopMonitoring]
-[CSVoiceTriggerAssetDownloadMonitor _didInstalledNewVoiceTriggerAsset]
com.apple.MobileAsset.VoiceTriggerAssets.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsTV.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerHSAssets.ma.new-asset-installed
FlexKwdSpotter
recognizer_flexKwd.json
flexKwdConfigFile
flexKwd.Thresholds
flexKwdThresholdsFile
-[CSSmartSiriVolumeUserIntent applyLowerAndUpperBoundsToVolume:]
-[CSSmartSiriVolumeUserIntent applyLowerAndUpperBoundsToVolumeOffset:]
Dpg:%.3f Dpd:%.3f T:%.3f
droppingPrediction
droppedPrediction
injectionDevice
CSEndpointMetrics:::totalAudioRecorded
CSEndpointMetrics:::endpointBufferHostTime
CSEndpointMetrics:::featuresAtEndpoint
CSEndpointMetrics:::endpointerType
CSEndpointMetrics:::serverFeatureLatencyDistribution
CSEndpointMetrics:::additionalMetrics
CSEndpointMetrics:::trailingSilenceDurationAtEndpoint
[totalAudioRecorded = %f]
[endpointBufferHostTime = %llu]
[trailingSilenceDurationAtEndpoint = %f]
[endpointerType = %lu]
[featuresAtEndpoint = %@]
[additionalMetrics = %@]
+[CSVoiceTriggerEnabledPolicyHelper siriInCallPolicy]
-[CSSmartSiriVolumeManager initWithSamplingRate:withAsset:]
-[CSSmartSiriVolumeManager CSAlarmMonitor:didReceiveAlarmChanged:]
-[CSSmartSiriVolumeManager CSTimerMonitor:didReceiveTimerChanged:]
-[CSSmartSiriVolumeManager CSVolumeMonitor:didReceiveMusicVolumeChanged:]
-[CSSmartSiriVolumeManager CSVolumeMonitor:didReceiveAlarmVolumeChanged:]
-[CSSmartSiriVolumeManager CSAutomaticVolumeEnabledMonitor:didReceiveEnabled:]
CSContinuousAudioFingerprintProvider
-[CSContinuousAudioFingerprintProvider startWithUUID:withMaximumBufferSize:]
-[CSContinuousAudioFingerprintProvider startWithUUID:withMaximumBufferSize:]_block_invoke
-[CSContinuousAudioFingerprintProvider stopWithUUID:]
-[CSContinuousAudioFingerprintProvider stopWithUUID:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenPollingWithInterval:completion:]
-[CSContinuousAudioFingerprintProvider _startListenPollingWithInterval:completion:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]_block_invoke_2
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]
-[CSContinuousAudioFingerprintProvider _startListenPolling]
-[CSContinuousAudioFingerprintProvider _stopListening]
-[CSContinuousAudioFingerprintProvider _stopListening]_block_invoke
-[CSContinuousAudioFingerprintProvider _handleEnablePolicyEvent:]
-[CSContinuousAudioFingerprintProvider audioStreamProvider:didStopStreamUnexpectly:]
-[CSContinuousAudioFingerprintProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
mitigation/ouresModel/ouresConfig.json
supportedInputOrigins
CSAttSiriUresNode queue
-[CSAttSiriUresNode initWithAttSiriController:]
-[CSAttSiriUresNode stop]_block_invoke
-[CSAttSiriUresNode addReceiver:]
-[CSAttSiriUresNode setInputOriginWithAudioRecordContext:boronScore:]_block_invoke
-[CSAttSiriUresNode _fetchMitigationConfig]
-[CSAttSiriUresNode setASRModelRootDirectory:]_block_invoke
-[CSAttSiriUresNode getMitigationDecisionForRCId:]_block_invoke
-[CSAttSiriUresNode _storeMitigationDecision:forRCId:]
-[CSAttSiriUresNode _createModelAndRunInferenceForRcId:withCompletion:]_block_invoke
Mitigation
v16@?0@"SLUresMitigatorResult"8
-[CSAttSiriUresNode _shouldRunMitigationForRcId:forTask:]
-[CSAttSiriUresNode processResultCandidate:forRCId:forTask:completion:]_block_invoke
-[CSAttSiriUresNode runMitigationForRCId:withScore:threshold:task:completion:]_block_invoke
16.1.1
requestMitigated
requestNotMitigated
score
decision
decisionValue
threshold
assetVersion
-[CSAttSiriUresNode setEndpointerFeatureEoS:]_block_invoke
-[CSAttSiriUresNode _createMitigatorModelWithConfig:]
-[CSAttSiriUresNode attSiriNode:didMitigate:withScore:taskType:]_block_invoke
-[CSAttSiriUresNode attSiriNode:didUpdateOSDFeatures:withFrameDurationMs:]_block_invoke
-[CSAttSiriUresNode attSiriNode:didUpdateWithSpeakerInfo:]_block_invoke
-[CSAttSiriUresNode attSiriNode:classifierScore:detailedResult:]_block_invoke
Ures ID - %@
-[CSAttSiriUresNode _holdTransactionForUresProcessing]
-[CSAttSiriUresNode _releaseUresProcessingTransaction]
-[CSAttSiriUresNode _decodeJsonFromFile:]
-[CSAttSiriUresNode _shouldApplyAllowListOverride:]
-[CSAttSiriUresNode _readAllowListVocabFromFile:]
[SplitterEnabled(%d)]
[Device%d(%@) DoAP(%d)]
[SplitterState:%d]
-[CSAdBlockerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSAdBlockerAssetDownloadMonitor _stopMonitoring]
-[CSAdBlockerAssetDownloadMonitor _didInstalledNewAdBlockerAsset]
-[CSAdBlockerAssetDownloadMonitor trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
com.apple.MobileAsset.AdBlockerAssets.ma.new-asset-installed
CSVoiceIdXPCListener
com.apple.corespeech.corespeechd.voiceid.xpc
-[CSVoiceIdXPCListener listen]
-[CSVoiceIdXPCListener _handleListenerEvent:]
-[CSVoiceIdXPCListener _handleListenerError:]
-[CSVoiceIdXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.voiceid.xpc
CSSpeechManager Asset Query Queue
-[CSSpeechManager startManager]
-[CSSpeechManager registerSpeechController:]
-[CSSpeechManager registerSiriClientProxy:]
v32@?0@"NSNumber"8@"CSAudioProvider"16^B24
-[CSSpeechManager audioProviderWithContext:error:]
-[CSSpeechManager audioProviderWithContext:error:]_block_invoke
v32@?0Q8q16@"NSError"24
-[CSSpeechManager audioProviderWithStreamID:]_block_invoke
-[CSSpeechManager _getAudioRecorderWithError:]
-[CSSpeechManager audioProviderInvalidated:streamHandleId:]_block_invoke
-[CSSpeechManager audioRecorderWillBeDestroyed:]_block_invoke
-[CSSpeechManager voiceTriggerAssetHandler:endpointId:didChangeCachedAsset:]
-[CSSpeechManager _handleClearLoggingFileTimer]
-[CSSpeechManager _createClearLoggingFileTimer]
-[CSSpeechManager _startClearLoggingFilesTimer]
-[CSVoiceIdXPCClient _handleListenerEvent:]
-[CSVoiceIdXPCClient _handleListenerError:]
-[CSVoiceIdXPCClient _notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:]
CSOpportuneSpeakBehaviorMonitor
-[CSOpportuneSpeakBehaviorMonitor notifyWillStartStreamWithContext:audioProviderUUID:option:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyDidStartStreamWithContext:audioProviderUUID:successfully:option:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyDidStopStream:]_block_invoke
Median
+[CSUtils(Statistics) distributionDictionary:]
average:
stddev:
-[CSXPCConnection sendMessageToClient:]
-[CSXPCConnection sendMessageToClient:]_block_invoke
-[CSXPCConnection _handleClientEvent:]
-[CSXPCConnection _handleClientMessage:client:]
-[CSXPCConnection _handleAudioProvidingMessage:messageBody:client:]
-[CSXPCConnection _handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:]
-[CSXPCConnection _handleSetXPCClientTypeMessage:messageBody:client:]
-[CSXPCConnection _handleClientError:client:]
-[CSXPCConnection _handlePingPongMessage:client:]
-[CSAttSiriConnectionManager initWithAttSiriController:supportsAttentiveSiri:supportsSpeechRecognitionOnDevice:supportsSSR:]
com.apple.CoreSpeech.Connection.Listener.endpointer
com.apple.corespeech.corespeechd.endpointer.service
-[CSAttSiriConnectionManager _setupEndpointListener]
com.apple.CoreSpeech.Connection.Listener.asr
-[CSAttSiriConnectionManager _setupLocalSpeechRecognitionListener]
com.apple.corespeech.corespeechd.attsiri.service
-[CSAttSiriConnectionManager _setupAttSiriServiceListener]
com.apple.CoreSpeech.Connection.Listener.ssr
com.apple.corespeech.corespeechd.ssr.service
-[CSAttSiriConnectionManager _setupSSRListener]
com.apple.CoreSpeech.Connection.Listener.rchandling
com.apple.corespeech.corespeechd.rchandling.service
-[CSAttSiriConnectionManager _setupRCProcessingListener]
-[CSHostDaemon init]_block_invoke
CSHostDaemon
-[CSHostDaemon _daemonDidLaunch]
com.apple.notifyd.matching
-[CSHostDaemon _setupNotifyHandlers]_block_invoke
AFLanguageCodeDidChangeDarwinNotification
-[CSHostDaemon _daemonWillShutdown]
FirstPktLatency
TrailingPktLatency
TrailingPktSpeechLatency
-[CSEndpointLatencyInfo addPktInfoWithTimestamp:arrivalTimestamp:currentMachTime:]
-[CSEndpointLatencyInfo report]
+[CSUtils(AudioFile) readAudioChunksFrom:block:]
-[CSCoreSpeechDaemonStateMonitor notifyDaemonStateChanged:]
com.apple.corespeech.corespeechd.launch
-[CSCoreSpeechDaemonStateMonitor _startMonitoringWithQueue:]
-[CSCoreSpeechDaemonStateMonitor _stopMonitoring]
-[CSCoreSpeechDaemonStateMonitor _didReceiveDaemonStateChanged:]
CSBuiltInSpeakerStateMonitor queue
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateMutedInfo]_block_invoke_2
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateMutedInfo]_block_invoke
muted
not muted
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateActiveInfo]_block_invoke_2
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateActiveInfo]_block_invoke
-[CSBuiltinSpeakerStateMonitor _startMonitoringWithQueue:]_block_invoke_2
active
-[CSBuiltinSpeakerStateMonitor _startMonitoringWithQueue:]_block_invoke
-[CSBuiltinSpeakerStateMonitor _startMonitoringWithQueue:]
-[CSBuiltinSpeakerStateMonitor _stopMonitoring]_block_invoke
-[CSBuiltinSpeakerStateMonitor _stopMonitoring]
-[CSBuiltinSpeakerStateMonitor CSAudioServerCrashMonitorDidReceiveServerRestart:]_block_invoke
-[CSVoiceTriggerAssetHandlerDarwin _getVoiceTriggerAssetFromAssetManager:]
-[CSVoiceTriggerAssetHandlerDarwin _checkNewAssetAvailablity]_block_invoke
-[CSVoiceTriggerAssetHandlerDarwin CSRemoteAssetManagerDidDownloadNewAsset:]
-[CSVoiceTriggerAssetHandlerDarwin CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSConnectionListener initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:queue:]
com.apple.CoreSpeech.Connection.Listener
-[CSConnectionListener dealloc]
-[CSConnectionListener listener:shouldAcceptNewConnection:]
-[CSConnectionListener listener:shouldAcceptNewConnection:]_block_invoke
-[CSConnectionListener notifyClientsWithBlock:]_block_invoke
-[CSConnectionListener resumeConnection]
/var/mobile/Library/VoiceTrigger
/var/mobile/Library/VoiceTrigger/KeepAlive
-[CSCoreSpeechDKeepAliveHandler _enableCoreSpeechDaemonKeepAlive]
KeepAlive
-[CSCoreSpeechDKeepAliveHandler _coreSpeechDaemonKeepAlived]
Library/VoiceTrigger
Library/VoiceTrigger/KeepAlive
-[CSLanguageCodeUpdateMonitorImplDarwin _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImplDarwin _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImplDarwin _didReceiveLanguageCodeUpdate:]
CSSiriAssertionMonitor queue
-[CSSiriAssertionMonitor init]
-[CSSiriAssertionMonitor _stopMonitoring]
-[CSSiriAssertionMonitor enableAssertionReceived]_block_invoke
-[CSSiriAssertionMonitor disableAssertionReceived]_block_invoke
-[CSAudioSessionProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioSessionProvidingProxy dealloc]
-[CSAudioSessionProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypePrewarmMessage:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeActivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:]
audioDeviceID
duckLevel
rampDuration
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDuckAudioDevice:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDuckDefaultOutputAudioDevice:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:]
ENABLE
DISABLE
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableSmartRoutingConsideration:messageBody:client:]
-[CSAudioSessionProvidingProxy audioSessionProvider:providerInvalidated:]
-[CSBluetoothWirelessSplitterMonitor splitterState]
CSBluetoothWirelessSplitterMonitor.m
-[CSBluetoothWirelessSplitterMonitor updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:]
-[CSBluetoothWirelessSplitterMonitor splitterState:]
-[CSBluetoothWirelessSplitterMonitor _startMonitoringWithQueue:]
-[CSBluetoothWirelessSplitterMonitor _stopMonitoring]
CSAudioInjectionRemoraEngine
-[CSAudioInjectionRemoraEngine dealloc]
Languages
Footprint
Premium
-[CSCommandControlStreamEventMonitor isStreaming]
-[CSAudioAlertProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:]
-[CSAudioAlertProvidingProxy audioAlertProvidingDidFinishAlertPlayback:ofType:error:]
com.apple.corespeech
-[CSAVCallConnectedMonitor _systemControllerDied:]
voicetrigger xpc service connection client queue
-[CSVoiceTriggerXPCConnection _handleClientEvent:]
-[CSVoiceTriggerXPCConnection _handleClientMessage:client:]
-[CSVoiceTriggerXPCConnection _handleClientError:client:]
-[CSVoiceTriggerXPCConnection _handleVoiceTriggerXPCServiceMessage:client:]
phraseSpotterBypass
bypassTimeout
-[CSVoiceTriggerXPCConnection _handlePhraseSpotterBypassRequest:]
raiseToSpeakBypass
-[CSVoiceTriggerXPCConnection _handleVoiceTriggeredSiriSessionCancelled]
enable
assertion
triggerStats
-[CSAttSiriFlexKwdNode initWithAttSiriController:]
-[CSAttSiriFlexKwdNode startWithContext:audioStreamId:]_block_invoke
-[CSAttSiriFlexKwdNode attSiriAudioSrcNodeDidStartRecording:successfully:error:]
-[CSAttSiriFlexKwdNode triggerReportedFromFlxKwdSpotter:]
-[CSAudioRouteChangeMonitor _startMonitoringWithQueue:]
CSAudioRouteChangeMonitor.m
-[CSAudioRouteChangeMonitor _stopMonitoring]
-[CSAudioRouteChangeMonitor getHearstConnected:]
-[CSAudioRouteChangeMonitor hearstConnected]
-[CSAudioRouteChangeMonitor getHearstRouted:]
-[CSAudioRouteChangeMonitor hearstRouted]
-[CSAudioRouteChangeMonitor getSiriInputSourceOutOfBand:]
-[CSAudioRouteChangeMonitor siriInputSourceOutOfBand]
-[CSAudioRouteChangeMonitor getJarvisConnected:]
-[CSAudioRouteChangeMonitor jarvisConnected]
playbackDeviceTypeList
%@ {recordDeviceInfo = %@, playbackRoute = %@, playbackDevices = %@
com.apple.corespeechd
main
+[CSUtils(machXPC) machXPCConnection:hasEntitlement:]
-[CSAdBlockerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSAdBlockerAssetMetaUpdateMonitor _stopMonitoring]
-[CSAdBlockerAssetMetaUpdateMonitor _didReceiveNewAdBlockerAssetMetaData]
com.apple.MobileAsset.AdBlockerAssets.ma.cached-metadata-updated
+[CSAdBlockerAssetDecoderFactory adBlockerAssetDecoderWithVersion:]
-[CSPhraseNDEAPIScorer keywordAnalyzerNDEAPI:hasResultAvailable:forChannel:]
CSAudioInjectionEngine
-[CSAudioInjectionEngine _createDeInterleaverIfNeeded]
-[CSAudioInjectionEngine stop]_block_invoke
-[CSAudioInjectionEngine _readAudioBufferAndFeed]
-[CSAudioInjectionEngine injectAudio:withScaleFactor:outASBD:playbackStarted:completion:]
-[CSAudioInjectionEngine stopAudioStream]_block_invoke
-[CSAudioInjectionEngine _deinterleaveBufferIfNeeded:]
-[CSAudioInjectionEngine _compensateChannelDataIfNeeded:receivedNumChannels:]
-[CSSoftwareUpdateCheckingMonitor _startMonitoringWithQueue:]
-[CSSoftwareUpdateCheckingMonitor _stopMonitoring]
-[CSSoftwareUpdateCheckingMonitor _checkSoftwareUpdateCheckingState]
com.apple.duetscheduler.restartCheckNotification
-[CSAudioConverter _convertBufferedLPCM:allowPartial:timestamp:arrivalTimestampToAudioRecorder:]
-[CSAudioConverter _convertBufferedLPCM:allowPartial:timestamp:arrivalTimestampToAudioRecorder:]_block_invoke
-[CSAudioConverter reset]
-[CSAudioConverter _configureAudioConverter:]
CreateAudioConverter
CSMediaPlayingMonitor queue
-[CSMediaPlayingMonitor initializeMediaPlayingState]_block_invoke_2
-[CSMediaPlayingMonitor _startMonitoringWithQueue:]
-[CSMediaPlayingMonitor _stopMonitoring]
-[CSMediaPlayingMonitor _notePossiblePlayPausedStateChange:]
PLAYING
NOT PLAYING
CSEndpointerSettings:::disableEndpointer
[disableEndpointer = %@]
-[CSDarwinPreventSystemSleepManager _acquirePreventSystemSleepAssertionWithTimeout:]
-[CSDarwinPreventSystemSleepManager acquireAssertionForActiveUser]
-[CSDarwinPreventSystemSleepManager acquireAssertionForIdleUser]
CSVoiceTriggerAOPModeEnabledPolicyIOS RecordState queue
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSBargeIn]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSAOP]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _isSpeechDetectionDevicePresent]
-[CSVoiceTriggerAOPModeEnabledPolicyIOS siriClientBehaviorMonitor:didChangedRecordState:withEventUUID:withContext:]_block_invoke
-[CSAudioRecordDeviceIndicator updateWithLatestRecordContext:]
-[CSNetworkAvailabilityMonitor _startMonitoringWithQueue:]
-[CSNetworkAvailabilityMonitor _stopMonitoring]
-[CSNetworkAvailabilityMonitor _availabilityChanged]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[NSDictionary(XPCObject) _cs_xpcObject]_block_invoke
-[CSAudioMeterProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:]
v16@?0B8f12
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:]
%s STDynamicActivityAttributionPublisher reporting Dictation with bundleID: %{public}@
%s STDynamicActivityAttributionPublisher reporting Siri
%s STDynamicActivityAttributionPublisher reporting Siri and Dictation
%@ Interrupted
%@ Invalidated
Dealloc-ing
personalizedLMPath=%@ fidesPersonalizedLMPath=%@
Client is 24-hour job
Client is DictationPersonalizationFidesPlugin
Client is PersonalizedLmFidesPlugin
Received an error while accessing %@ service: %@
Invalidating
%s Cannot handle unexpected message type : %lld
%s CSFallbackAudioSessionReleaseProvider is nil from CSSpeechManager
%s UserIdleSystemSleepAssertion
%s SystemSleepAssertion
%s Could not take power assertion
%s IOPMAssertionSetProperty failed : %{private}d
%s Taking power assertion %{private}@
%s Taking power assertion %{private}@ for a max of %{private}f seconds
%s Successfully released power assertion for %{private}@
%s Failed to released power assertion for %{private}@
%s ERR: topScoringUser is nil from %{public}@
%s ERR: invalid arguments passed %{public}@ %{public}@
%s ERR: Incorrect category %{public}d passed
%s Start Recording Host Time = %{public}llu
%s ::: incrementing false wakeup to %{public}llu
%s PowerLog : HeySiriFalseTrigger numFalseWakeUp:%{public}d, secondsSinceLastReport:%{public}lf, phrase:%{public}@
%s ::: accumulated false wakeup count is %{public}llu so far, not reporting yet because it has been only %{public}.2f seconds since last report with current phrases %{public}@
%s Sending event with non determenistic triggerLengthSampleCount %llu, triggerLengthSampleCountDetermenisticFromFirstPass %llu, and delta of %lld samples
%s disconnect activationXPCClient
%s cannot handle event : event = %{public}p
%s ignore unknown types of message 
%s cannot handle error : error = %{public}p
%s Listener connection disconnected
%s connection error: %{public}s
%s SmartSiriVolume cannot be resumed since we should not monitor audio
%s Received user activity notification
%s Failed to register for user activity state
%s Failed to fetch user idle activity state
%s Current user activity: %llu
%s Invalid notification token %d
%s Cannot create SampleRateConverter using AudioConverterNew : %{public}d
%s Cannot set Quality property to audioConverter
%s Cannot set Complexity property to audioConverter
%s Override result as 'mpty'
%s Audio resampling done : %lu
%s AudioConverter is sad: 0x%{public}xd
%s Start monitoring : SpeakerRecognition Asset meta update
%s Stop monitoring : SpeakerRecognition Asset meta update
%s New Speaker Recognition asset metadata is available
%s Celestial is not available on this platform.
%s notification = %{public}@
%s Cannot deactivateAudioSession since audio recorder doesn't exist
%s Cannot deactivateAudioSession with %{public}@
%s Start monitoring : SpeakerRecognition Asset Download
%s Stop monitoring : SpeakerRecognition Assets Download
%s New SpeakerRecognition Assets is now installed
%s ERR: Delegate received for invalid Trial assetType:%lu
%s ::: %{public}s enable: %{public}d reason: %{public}@ timestamp : %{public}lf
%s Ignoring request to enable/disable voice trigger with nil reason.
%s ::: Asserting that VoiceTrigger should be %{public}@ with reason: %{public}@. Existing assertions (%{public}lu): %{public}@; times: %{public}@ vs %{public}f
%s Ignoring request to enable/disable voice trigger - time order violation.
%s ::: Ignore request as phraseSpotter already %{public}@
%s ::: Asserting that PhraseSpotter should be %{public}@, timeout: %{public}f
%s ::: Timeout!! PhraseSpotter should be NOT bypassed
%s ::: Ignore request as raiseToSpeak already %{public}@
%s ::: Asserting that raiseToSpeak should be %{public}@, timeout: %{public}f
%s ::: Timeout!! raiseToSpeak should be NOT bypassed
%s HandleDisconnect
%s token:%d
%s fromState:%llu, toState:%llu
%s SiriState - isActiveSession:%d
%s SiriState - isActiveRequest:%d
%s SiriState - isListening:%d
%s SiriState - isSpeaking:%d
%s tts Finished:%u
%s ContinousAudioFingerprint cannot be resumed since we should not monitor audio
%s Audio steam %{public}@ is still streaming when we get new streamProvider
%s CSAudioStreamProvidingProxy has received xpc disconnection
%s Trying to stop audio stream on CSAudioStreamProvidingProxy
%s Unknown body type : %{public}lld
%s Cannot handle setCurrentContext throught XPC : audioStreamProviding is nil
%s Cannot handle setCurrentContext throught XPC : given context is nil
%s Cannot handle AudioStreamRequest throught XPC : given audioStreamRequest is nil
%s Cannot handle AudioStreamRequest throught XPC : audioStreamProviding is nil
%s Getting audio stream has failed : %{public}@
%s Cannot handle PrepareRequest throught XPC : audioStreamProviding is nil
%s Given audioStreamRequest is nil, use default audioStreamRequest
%s Cannot handle startAudioStream : given audio stream option is nil
%s Cannot handle startAudioStream : audioStream is nil
%s Cannot handle startAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStream is nil
%s Fail to parse recordContext
%s Cannot handle IsRecording : audioStreamProviding is nil
%s Cannot handle RecordRoute : audioStreamProviding is nil
%s Cannot handle RecordDeviceInfo : audioStreamProviding is nil
%s Cannot handle AudioDeviceInfo : audioStreamProviding is nil
%s Cannot handle RecordSettings : audioStreamProviding is nil
%s Cannot handle IsNarrowband : audioStreamProviding is nil
%s Cannot handle PlaybackRoute : audioStreamProviding is nil
%s CSAudioStreamProvidingProxy
%s setting allow mixable audio while recording to %{public}@
%s Failed to setAllowMixableAudioWhileRecording : %{public}@
%s Unable to get VT asset for FlexKwd Spotter
%s configPath=%@
%s _thresholdsMap=%@
%s startProcessingSampleCount=%{public}ld, recognizer: %{public}@
%s didFinishRecognition: err=%@
%s FinalResults: %@
%s %@
%s ===PWinningTok=%@, bestScore=%f====
%s Unexpected!
%s Json file doesnt exist at: %{public}@
%s Could not read Json file at: %{public}@, err: %{public}@
%s Failed to parse json at: %{public}@, err: %{public}@
%s Not implemented
%s audioStreamProvider is nil, fetch audioProvider from context
%s attSiriAudioStreamProvider is nil!
%s Failed to start audio data source: %{public}@
%s Unsupported receiver: %@
%s CSAttSiriAttendingAudioSrcNode deallocated
%s attSiriAttendingAudioSrcNode didstopStreamUnexpectly
%s Failure disposing audio file %{public}d
%s Audio file already configured, closing first
%s Creating audio file at URL %{public}@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s Closing file at URL %{public}@, audio size: %{public}u
%s Couldn't create CoreSpeech log directory at path %{public}@ %{public}@
%s Session Query Failed : %{public}@
%s Mediaserverd/bridgeaudiod crashed
%s Mediaserverd/bridgeaudiod recovered from crash
%s Start monitoring : AudioSessionInterruption
%s Start monitoring : AudioSessionRouteChangeNotification
%s Stop monitoring AudioSession activities
%s Clearing pending homekit accessory voice trigger %{private}@
%s Handling Pending Remora VoiceTrigger Event
%s Time since last pending remora voice trigger %f. Ignoring.
%s Clearing pending built-in voice trigger %{private}@
%s Handling Pending BuiltInVoiceTrigger Event
%s Time since last pending builtin voice trigger %f. Ignoring.
%s client: %lu, deviceId: %{private}@
%s AttSiri logging not enabled
%s Couldn't create Ures slogging directory at path %{public}@ %{public}@
%s Failed to serialize data with err: %{public}@
%s EndpointerNode added receiver: %@
%s EndpointerNode removed receiver: %@
%s %{public}.2f ms after vtEnd
%s shouldReportHardEndpoint = %lu
%s endpointerListener: %@
%s SmartSiriVolume cannot be resumed since Siri is speaking
%s Prefetched Asset Vers (VT): %{public}@
%s _shouldCleanupVoiceProfile: %lu
%s SSR Assets is nil for %{public}@ - Bailing out
%s Asset Vers: %{public}@
%s Voice Profiles not present for %{public}@ - Bailing out
%s magus voice profile - %{public}@
%s Recording leading utterance - %{public}@
%s Setting up SSR controller with {%{public}@, %{public}@, %{public}ldusers, %{public}fsecs}
%s ERR: Failed to create SSR context with error %@
%s ERR: Failed to create SSR controller with error %@
%s Failed to get asset with %{public}@
%s Asset Vers (VT): %{public}@
%s Initialized SSRNode with assets %{public}@
%s XPC connection with client established
%s Received SSR asset download notification, updated asset cache to %{public}@
%s UserClassification: %{public}@ UserIdentified: %{public}@ Scores: %{public}@
%s _speakerRecognitionScores:%@
%s voiceIdScoreCard: %@
%s _speakerRecognitionScores is nil!
%s spkrRecognizer is nil!
%s speakerInfo is nil!
%s _currentLanguageCode changed: %{public}@
%s ERR: Discarded reporting final ScoreCard!!
%s SpeakerIdInfo from incorrect SpeakerRecognizer: expected: %{public}@, spkrRecognizer: %{public}@
%s ERR: Failed to get classified user from %{public}@
%s mappedSpeakerIdInfo for {%{public}d, %{public}.2fsec %dms} - %{public}@
%s Nil mappedSpeakerIdInfo since mappedScores is not valid, no score will be sent out
%s Voice Profile for profileID %@ not found
%s Overriding score to %@ for profile %@
%s Dropping id: [%@, %@]
%s ERR: Failed to retrain voice profile %{public}@ with asset %{public}@
%s ERR: Failed to init retrainCtxt for profileID %{public}@ with error %{public}@
%s ERR: Failed to add profileID %{public}@ with error %{public}@
%s trigger VoiceProfileCleanup
%s ERR: Failed VoiceProfile Cleanup with error %{public}@
%s Start monitoring : Setting preference change
%s Stop monitoring : Setting preference change
%s Siri restricted on lock screen : %{public}@
%s Registering for post build install/first unlock activity - %s
%s Received event for XPC activity: %@ in state: %ld
%s XPC activity: %@ deferred: %@ firstUnlock: %@
%s Registered XPC activity got triggered...
%s Skipping post build activity on ATV
%s VT is disabled, skipping post build activity !
%s Post build install/first unlock tasks got completed with error - %{public}@
%s Registered XPC activity complete. State: %@.
%s ContinousAudioFingerprint cannot be turned on since Siri is disabled
%s On-Device ASR: XPC: Registering the ANE Compilation XPC Activity
%s On-Device ASR: XPC: Done triggering ANE compilation
%s Failed setting activity state to continue
%s Failed setting activity state to done
%s Deferring activity:%@ deferred:%@
%s CSVoiceTriggerAsset (%{public}@) found: %{public}@
%s Cannot get a VoiceTrigger mobile asset : %{public}@
%s Trial assets not available, fallback to MA assets
%s Asset Query failed : %{public}@
%s cached asset:%{public}@, new asset:%{public}@
%s New asset is same as cached asset, ignore notification
%s New asset is different from cached one. Updating cached asset
%s new VoiceTrigger asset downloaded
%s Language Code Changed : %{public}@
%s First unlock notification received : %{public}d
%s Ignore Trial asset update for type: %lu
%s Timeout!
%s start Activation
%s startPtAbsSampleId: %llu
%s audio started at %llu, speech started at: %llu
%s CoreSpeechXPCConnection Invalidated
%s making connection to corespeechd with (%{public}d)
%s Asking VoiceTrigger locale to corespeechd
%s Current VoiceTrigger Locale = %{public}@
%s Cannot get Current VoiceTrigger Locale, falling back to en-US : %{public}@
%s Asking current VoiceTrigger aset for %{public}d.%{public}d
%s Asking keyword language given Jarvis language list %{public}@, jarvis-selected language: %{public}@
%s CSCoreSpeechServices Invalidated
%s Request updated SAT audio succeed.
%s Request updated SAT audio failed.
%s Received mediaserverd or bridgeaudiod crashes event
%s Received mediaserverd or bridgeaudiod reset event
%s Start monitoring : Mediaserverd crash / recover event
%s Initializing new xpcConnection
%s Sending XPCClientType : %{public}d
%s Prepare Audio Provider with Context : %{public}@
%s Failed to get reply result correctly
%s Received alertStartTime = %{public}llu
%s Received peakPower = %{public}f
%s Received averagePower = %{public}f
%s Sending audioMetric request
%s Failed to get audioMetric reply
%s audioMetric : %{public}@
%s Received invalid audioMetric
%s Error creating message
%s audioStreamWithRequest for stream %{public}@
%s xpcConnection not exist
%s Invalid message: stream is nil or request is nil
%s PrepareAudioStream %{public}@
%s Sending AcousticSLResult request
%s Failed to get AcousticSLResult reply
%s Received AcousticSLResult %{public}@
%s Failed to parse AcousticSLResult from raw data
%s Message not valid
%s Sending VoiceTriggerInfo request
%s Failed to get VoiceTriggerInfo request
%s Received VoiceTriggerInfo %{public}@
%s Failed to parse VoiceTriggerInfo from raw data
%s Received rtsTriggerInfo %{public}@
%s Failed to parse rtsTriggerInfo from raw data
%s NO reply!!!
%s No message!!
%s No reply for hostTimeFromSampleCount request with sampleCount %{public}llu
%s xpcConnection not existing
%s No message for hostTimeFromSampleCount request with sampleCount %{public}llu
%s No reply for sampleCountFromHostTime request with hostTime %{public}llu
%s No message for sampleCountFromHostTime request with hostTime %{public}llu
%s Cannot handle nil message
%s Unexpected message type : %{public}lld
%s AlertProvidingDelegate messageType : %{public}lld
%s Unexpected type : %{public}lld
%s SessionProvidingDelegate messageType : %{public}lld
%s context : %{public}@
%s invalid context
%s SessionInfoProvidingDelegate messageType : %{public}lld
%s Received notificationInfo %{public}@
%s Failed to parse notificationInfo from raw data
%s startListenWithOption : %{public}d, %{public}@
%s stopListenWithCompletion : %{public}d, %{public}@
%s hasRemoteVADAvailable : %d
%s hasVADAvailable : %d
%s didStopUnexpectly : %d
%s MobileTimer is not available on this platform.
%s Input route changed
%s Output route changed
%s Failed getting audio property %{public}.4s %{public}d
%s Failed getting audio property size %{public}.4s %d{public}
%s Failed registering for property listener %{public}.4s %{public}d
%s Fetching CommandControl Listening State: %d
%s Using override asset: %@
%s Updated cache with new Trial asset %@
%s Ignore MA asset update
%s PhraseSpotter enabled = %{public}@
%s PhraseSpotter is already %{public}@, received duplicated notification!
%s Send a In-Ear Myriad notification
%s CSBenchmarkXPCListener start listening
%s we got unknown types of XPC connection request
%s CSBenchmarkXPCListener here
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s CSVoiceTriggerXPCListener start listening
%s Received new remote control connection request
%s Connection request is nil
%s Error = %{public}s
%s Getting new client connection : %{public}p
%s Client connection disconnected, removing %{public}p from client connection pool
%s Register CoreSpeech Services
%s Received accept request : %{public}@
%s Connectin request %{public}@ rejected due to missing entitlement
%s get test response. return string Test
%s Setting Delay Interstitial Sound
%s Get Trigger Count
%s Clear Trigger Count
%s Get FirstPass running mode
%s Dealloc audioStreamHolding : %{public}@
%s _requestMHUUID: %@, _turnIdentifier: %@
%s _userSpeakingStartedTimeInMs %{public}f, _userSpeakingEndedTimeInMs: %{public}f, _userSpeakingStartedHostTime: %{public}llu, _userSpeakingEndedHostTime: %{public}llu, _stopRecordingHostTime: %{public}llu, _endpointBufferHostTime: %{public}llu
%s Dilation factor requested for device default!
%s V Spread requested for device default!
%s V Offset requested for device default!
%s H Offset requested for device default!
%s Music steepness requested for device default!
%s Minimum TTS volume for ASV disabled case requested for device default!
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s CSAudioInjectionXPCListener start listening
%s CSAudioProvider is deallocated
%s CSAudioProvider[%{public}@]:StreamState changed from : %{public}@ to : %{public}@
%s CSAudioProvider[%{public}@]:Setting audioRecorder : %{public}p
%s Reset recordDeviceIndicator as we have new audioRecorder
%s CSAudioProvider[%{public}@]:
%s CSAudioProvider[%{public}@]:setCurrentContext : %{public}@
%s CSAudioProvider[%{public}@]:Cannot change context since audio recorder is currently recording
%s CSAudioProvider[%{public}@]:audioStreamWithRequest for stream <%{public}@>
%s Failed to _prepareAudioStreamSync : %{public}@
%s Attached stream %{public}@ as tandem to master stream %{public}@ %{public}@, error : %{public}@
%s PrimaryStream is already tandem of stream %{public}@, can't add mutual tandem relation here!
%s Invalid input streams
%s CSAudioProvider[%{public}@]:Prepare audio stream reuqested while state is %{public}@
%s CSAudioProvider[%{public}@]:Cannot prepare, audio system is recovering
%s CSAudioProvider[%{public}@]:Asking AudioRecorder prepareAudioStreamRecord
%s CSAudioProvider[%{public}@]:prepareAudioStreamRecord failed : %{public}@
%s CSAudioProvider[%{public}@]:Create circular buffer : numChannels(%d), duration(%f)
%s CSAudioProvider[%{public}@]:startAudioStream with stream : %{public}@ with stream state : %{public}@, option : %{public}@, streamId : %{public}llu
%s CSAudioProvider[%{public}@]:state was %{public}@, prepareAudioStream first
%s CSAudioProvider[%{public}@]:prepareAudioStreamSync with stream : %{public}@ with stream state : %{public}@, request : %{public}@
%s CSAudioProvider[%{public}@]:prepareAudioStream with stream : %{public}@ with stream state : %{public}@
%s CSAudioProvider[%{public}@]:Cannot handle start audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:Cannot startAudioStream, audio system is recovering
%s CSAudioProvider[%{public}@]:Requested startHostTime = %{public}llu, _clientStartSampleCount = %{public}tu
%s CSAudioProvider[%{public}@]:%{public}@ is requesting earlier audio than asked, we can't deliver earlier audio
%s CSAudioProvider[%{public}@]:Set circularBufferStartHostTime = %{public}llu, circularBufferStartSampleCount = %{public}lu
%s CSAudioProvider[%{public}@]:Entering dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Failed to fetch historical audio since _clientStartSampleCount is newer than audioBuffer sample count(%{public}llu)
%s Start deliver historical audio buffer immediately
%s CSAudioProvider[%{public}@]:Leaving dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Received didStartRecording while %{public}@
%s CSAudioProvider[%{public}@]:Received didStopRecording reason : %{public}d, streamState : %{public}@
%s Calling unexpected didStop for all weak streams
%s CSAudioProvider[%{public}@]:Received didStopRecording while %{public}@
%s CSAudioProvider[%{public}@]:Waiting for recordingWillStartGroup before scheduling stopAudioStream
%s CSAudioProvider[%{public}@]:Scheduled stopAudioStream after waiting for recordingWillStartGroup - stopAudioStream %{public}@ with streamState : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stoppingWithScheduledStart, take out audio stream from schedule
%s CSAudioProvider[%{public}@]:Stream %{public}@ is not streaming on stream state : %{public}@, ignore the stopAudioStream request
%s CSAudioProvider[%{public}@]:Cannot handle stop audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stopping, adding audio stream into stop pending
%s CSAudioProvider[%{public}@]:Stop all recordings, moving stream state to %{public}@
%s CSAudioProvider[%{public}@]:Failed to stop audioStream : %{public}@
%s Saving circular buffer from %{public}lu to %{public}lu
%s CSAudioProvider[%{public}@]:%{public}@ ask for audio hold stream for %{public}f
%s CSAudioProvider[%{public}@]:Timeout for %{public}@ has fired
%s CSAudioProvider[%{public}@]:Removing %{public}@ from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ stream holder was already removed from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ ask for cancel hold stream
%s Failed to prewarmAudioSessionWithError : %{public}@
%s Failed to activateAudioSessionWithReason: %{public}@
%s CSAudioProvider[%{public}@]:Activating Audio Session under : %{public}@
%s Failed to activateAudioSession : %{public}@
%s CSAudioProvider[%{public}@]:shouldDuckOnBuiltInSpeaker: %{public}@ (audioStreamType: %{public}lu, isPlaybackRouteBuiltInSpeaker: %{public}@, isDuckingOnSpeakerOutputSupported: %{public}@)
%s Failed to fetch duckingSupported result : %{public}@
%s Failed to deactivate audio session : %{public}@
%s CSAudioProvider[%{public}@]:Deactivating Audio Session under : %{public}@
%s Failed to deactivateAudioSession : %{public}@
%s Unable to disable duckOthers in HomePod
%s CSAudioProvider[%{public}@]:AVVC is recovering, ignore command...
%s Not handled by this function
%s Fetching voiceTriggerInfo from audioRecorder
%s CSAudioProvider[%{public}@]:Cannot stopRecording as there are %{public}tu streamHolders
%s CSAudioProvider[%{public}@]:Shouldn't stop AVVC recording as there are %{public}tu streams
%s CSAudioProvider[%{public}@]:Buffer underrun!!!!, lastForwardedSampleTime:%{public}lu, oldestSampleTimeInBuffer:%{public}lu, stream:%{public}@
%s CSAudioProvider[%{public}@]:Ignore forwarding stream %{public}@                                        the audio packets until sampleCount == %{public}lu (theMostRecentSampleCount:%{public}lu)
%s CSAudioProvider[%{public}@]:Buffer overrun!!! lastForwardedSampleTime:%{public}lu,                                    theMostRecentSampleCount:%{public}lu, stream:%{public}@
%s Forward %d samples from historical audio buffer
%s ScheduleAlertFinishTimeout : %{public}@
%s ScheduleAlertFinishTimeout will be ignored : %{public}@, %{public}@
%s Received finishStartAlertPlaybackAt:%{public}llu streamState : %{public}@
%s CSAudioProvider[%{public}@]:Requested alertFinishHostTime = %{public}llu, _clientStartSampleCount = %{public}tu, circularBufferSampleCount = %{public}tu
%s Audio Streaming already stopped
%s Will invalidate current builtIn audio stream : %{public}@
%s failed to stopAudioStream : %{public}@
%s CSAudioProvider[%{public}@]:Audio Recorder Disconnected
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod crashed
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod recovered from crash
%s CSAudioProvider[%{public}@]:AudioRecorder will be destroyed
%s CSAudioProvider[%{public}@]:recordingTransaction already released
%s CSAudioProvider[%{public}@]:Release recording transaction at streamState : %{public}@
%s Audio Packet Delivery WatchDog fired, trying to recover
%s Schedule didStart WDT %{public}@ for %{public}lf seconds
%s startRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s startRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStartRecordingDelegate WatchDogTimer : %{public}@
%s Schedule didStop WDT %{public}@ for %{public}lf seconds
%s stopRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s stopRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStopRecordingDelegate WatchDogTimer : %{public}@
%s Update remote deviceUId fetched from AVVC : %{public}@ (this must be deviceUID of Darwin device only)
%s Failed to fetch remote deviceUId from AVVC
%s %@ task delivered.
%s %@ completed with response %@ and error %@.
%s Stop monitoring : HomePod voiceTriggerAssertion
%s VoiceTrigger cannot be turned on since SpeechDetectionVAD is not present
%s VoiceTrigger cannot be turned on since there is other app recording that is not eligible and we are not in a connected or outgoing call
%s VoiceTrigger cannot be turned on since voiceTriggerInCoreSpeech is NO
%s VoiceTrigger cannot be turned on since VoiceTrigger is disabled
%s VoiceTrigger cannot be turned on since Siri is disabled
%s VoiceTrigger cannot be turned on since SpringBoard is not started yet
%s VoiceTrigger cannot be turned on since device is not unlocked after restart
%s VoiceTrigger cannot be turned on since device is on battery
%s VoiceTrigger cannot be turned on since Siri is restricted on lock screen
%s VoiceTrigger cannot be turned on since Software Update Checking is running
%s Not supported on this platform
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s Locale map for %{public}@ is not available on asset
%s Tagging as handheld as user interacted in last %f secs
%s Tagging as farfield as last user interaction %f secs back
%s Tagging as FarField as user dismissed
%s Received external route change notification
%s Received external pickable route change notification
%s Received CarPlay AuxStream support change notification
%s Received CarPlay connection change notification
%s Start monitoring : AudioRouteChangeMonitor
%s Stop monitoring : AudioRouteChangeMonitor
%s Notifying Hearst Connection State : %{public}d
%s Notifying Hearst Routed State : %{public}d
%s Notifying Jarvis Connection State : %{public}d
%s Notifying Siri Input Source Out Of Band State : %{public}d
%s Failed to create AVVC : %{public}@
%s Create new CSAudioRecorder = %{public}p
%s Tear down _remoteRecordClient if needed
%s CSAudioRecorder %{public}p deallocated
%s Failed to teardown AVVC : %{public}@
%s AVVC initialization failed
%s Successfully create AVVC : %{public}p
%s Setting announced call flag to: %d with stream handle Id: %lu
%s Calling AVVC setContext : %@
%s Failed to get handle id : %{public}@
%s setContext elapsed time = %{public}lf, streamHandleId = %{public}lu, streamType = %{public}lu
%s Calling AVVC setContextForStream : %{public}@
%s Tried to setCurrentContext with mode %ld. This method can only be used for auto and post
%s setCurrentContext elapsed time = %{public}lf
%s Remote device with device id: %{private}@ not found
%s Failed to prepare remote device : %{public}@
%s Calling AVVC prepareRecordForStream(%{public}llu) : %{public}@
%s AVVC prepareRecordForStream failed : %{public}@
%s prepareRecordForStream elapsed time = %{public}lf
%s ::: CSAudioRecord will inject audio file instead of recording
%s Resetting AudioFilePathIndex
%s Increase AudioFilePathIndex = %d
%s AudioFilePathIndex is out-of-boundary _audioFilePathIndex:%d injectAudioFilePaths:%d
%s AudioFilePathIndex:%d accessing:%@
%s Unable to find injectAudioFilePath = %@
%s Asking startRecording to remote device with context : %{public}@ (original context : %{public}@)
%s Failed to fetch valid context
%s Failed to startRecording : %{public}@
%s startRecordingWithOptions elapsed time = %{public}lf
%s Calling AVVC startRecordForStream : %{public}@
%s startRecordForStream failed : %{public}@
%s startRecordForStream elapsed time = %{public}lf
%s Failed to stopRecording to remoteRecordClient : %{public}@
%s stopRecording elapsed time = %{public}lf
%s Calling AVVC stopRecordForStream
%s Failed to stopRecordForStream : %{public}@
%s stopRecordForStream elapsed time = %{public}lf
%s Session State = %d
%s AudioSessionState = YES
%s AudioSessionState = NO
%s fetch recordDeviceInfo elapsed time = %{public}lf
%s fetch EndpointDeviceType elapsed time = %{public}lf
%s AVVC sampling rate = %{public}f
%s AVVC doesn't return sampleRate, assume it is default sample rate
%s isNarrowBand = NO for streamHandleId = %{public}lu
%s (darwinOS) : isNarrowBand = NO for streamHandleId = %{public}lu
%s isNarrowBand = %{public}@ for streamHandleId = %{public}lu
%s Calling AVVC setSessionActive for Prewarm
%s Prewarm AudioSession has failed : %{public}@
%s Calling AVVC setRecordMode to mode : %{public}d
%s AVVC successfully setRecordMode
%s setRecordMode elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for activation with streamId(%{public}lu)
%s AVVC setSessionActivate has failed : %{public}@
%s AVVC successfully activated audioSession
%s setSessionActivate elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for deactivation : %{public}tu
%s Calling AVVC setSessionActivate for deactivation for stream %d: %{public}tu
%s Failed to setIamTheAssistant : %{public}@
%s Creating audio session with allow mixable audio while recording to YES
%s Calling AVVC : Enable Smart Routing Consideration
%s Calling AVVC : Disable Smart Routing Consideration
%s enableSmartRoutingConsiderationForStream elapsed time = %{public}lf
%s Fail to setSmartRoutingConsideration : %{public}@
%s Calling AVVC setDuckOthersForStream(%d) for DuckOthers/MixWithOthers
%s Failed to setDuckOthersForStream : %{public}@
%s setDuckOthersForStream elapsed time = %{public}lf
%s Calling audio session reset ducking settings
%s resetDuckSettings elapsed time = %{public}lf
%s Failed to setDuckToLevelDB : %{public}@
%s %{public}@ miniDucking now
%s enableMiniDucking elapsed time = %{public}lf
%s %{public}@
%s configureAlertBehavior elapsed time = %{public}lf
%s VoiceTriggerInfo is nil from AVVC
%s Ducking %{public}@ supported on current route with streamId: %{public}ld
%s Updated languageCode to: %{public}@ in VTEI received from remote
%s AVVCAudioBuffer contains %{public}d packet descriptions, size %{public}d, channels %{public}d. Ignoring
%s packets count %{public}d
%s Peak : %f, Avg : %f
%s Bad packet length %{public}d. Skipping rest of record buffer.
%s Cannot handle audio buffer : unexpected format(%{public}u)
%s Compensating %{public}u channel(s), heartbeat = %{public}lld
%s Audio record route is %{private}@ for stream id %{private}lu
%s Calling AVVC playAlertSoundForType to play alert
%s Ignore playing endpoint beep(record stopped beep) since it already played beep in gibraltar
%s Calling AVVC playAlertSoundsForType : %{public}ld
%s Received didStartRecording : %{public}p, forStream:%{public}llu, successfully:%{public}d, error:%{public}@
%s Received audio buffer %{public}d, heartbeat = %{public}llu, streamID (%{public}lu)
%s Received didStopRecording : %{public}p forStream:%{public}llu forReason:%{public}ld
%s Received Stream Invalidated : %{public}llu
%s toConfiguration : %{public}d
%s type : %{public}d, error : %{public}@
%s Encoder error : %{public}@
%s withContext : %{public}@
%s activate : %{public}d
%s AVVC lost mediaserverd connection
%s AVVC informed mediaserverd reset, no further action required
%s hasLocalPendingTwoShot = %{public}d, token : %{public}llu
%s Unsupported audio format!
%s Existing remoteRecordClient (deviceId = %@) doesn't match required one (deviceId = %@), create new remoteRecordClient
%s The input streamHandleId(%{public}lu) is not expected(%{public}lu)
%s primaryStream already torn down
%s Start Listening request with deviceId : %{public}@
%s CSOpportuneSpeakListener received didStart : %{public}d, %{public}@
%s remoteVADDuration = %{public}d, spgDuration = %{public}d, _remoteVADSPGRatio = %{public}d
%s AudioStreamRequest has failed : %{public}@
%s CSOpportuneSpeakListener received didStop : %{public}d, %{public}@
%s Request stop CSOpportuneSpeakListener
%s Audio coming from DoAP should contains RemoteVAD
%s boronScore : %{public}d, reportBoron : %{public}d, slienceScore : %{public}lf
%s Cannot create NSData with size 0
%s xpc object should be XPC_TYPE_DATA
%s Start monitoring : Siri setting switch, Siri is %{public}@
%s Stop monitoring : Siri setting switch
%s Siri Enabled = %{public}@
%s Trying to access BTLocalDevice
%s Accessing BTLocalDevice
%s BTLocalDevice %{public}p
%s Getting connected devices from local device %p...
%s Got %tu connected devices from local device %p.
%s Failed getting connected devices from local device %p (result = %d).
%s Local device is NULL.
%s Failed getting address from BTDevice %p (result = %d).
%s Failed to get sharing enable flag : %d
%s Failed getting sharing device addresses %d
%s Failed converting address from BTDeviceAddress (result = %d).
%s Device is temporary paired and not in contacts
%s Detaching bluetooth session : %{public}p
%s Already Attaching Bluetooth Session
%s Start attaching bluetooth session
%s session = %{public}p, result = %{public}d
%s session = %p
%s detached session is different from currently attached session, ignore
%s terminated session is different from currently attached session, ignore
%s Bluetooth Session is NULL
%s Failed to get default local device from session %{public}p, (result = %{public}d)
%s Failed to add local device callback from session %{public}p, (result = %{public}d
%s CSActivationXPCListener start listening
%s CSBenchmarker init
%{public, signpost.description:begin_time}llu, %s %s
%{public, signpost.description:end_time}llu, %s %s
allFramesProcessingLatency
%s startRecording
%s stopRecording
%s Audio file read start
%s Audio file read end
%s Unsupported protocol for this device
%s sessionID(for deviceId %{public}@ = %{public}llu
%s Trying to get sessionID when audioSessionInfoProvider is nil
%s SmartSiriVolume not supported on this platform - Bailing out
%s SmartSiriVolume connection started listening
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s Asset state : %{public}ld
%s ::: assetType: %{public}lu
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s Fetching remote meta data failed, scheduled retry after %{public}f seconds
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s Device is firstUnlocked. Fetching HEP assets
%s Device is NOT firstUnlocked. Will fetch assets after firstUnlock
%s Failed to get HEP asset
%s HEP Asset: %{public}@, path: %{public}@
%s endpointerModelVersion is still nil after fetching it from EAREndpointer
%s HEP::RecordingDidStop: Ignoring processAudioSamplesAsynchronously: Not queueing
%s first audio buffer host time: %{public}llu
%s HEP::RecordingDidStop: Ignoring processAudioSamplesAsynchronously
%s addAudio first sample offset: %{public}lu
%s Updated endpointer threshold: %{public}f
%s Updated endpointer delayed trigger: %{public}d
%s EARSPG: CSServerEndpointFeatures: %{public}@
%s Accepting RC: RCTime < 0: Server's processedAudioDuration(%{public}f) > _lastReportedEndpointTimeMs(%{public}f): sfLatency: %{public}f, rcTimeMs: %{public}f
%s Rejecting RC: SFLatency < 0: Server's processedAudioDuration(%{public}f): _lastReportedEndpointTimeMs(%{public}f): sfLatency: %{public}f, rcTimeMs: %{public}f
%s rcEpFeatures: %{public}@ shouldAccept: %{public}d
%s HEP::RecordingDidStop: Ignoring silenceScoreEstimateAvailable, Not queuing
%s Detected speech start at %{public}f of effectiveClientProcessedAudioMs
%s HEP::RecordingDidStop: Ignoring silenceScoreEstimateAvailable
%s Already communicated end-pt: Not Invoking hybridClassifier for silposnf=%{public}f
%s ClientLag: serverProcessedAudioMs(%{public}ld) > effectiveClientProcessedAudioMs(%{public}f)
%s ClientLag: Not invoking HybridClassifier: sfLatency > clientLagThreshold: %{public}f > %{public}f
%s ClientLag: Using DefaultServerFeatures with disconnected-state sfLatency: %{public}f
%s ClientLag: Using ServerFeatures with ClampedSFLatency: %{public}f
%s ClientLag: Not Invoking HybridClassifier as serverProcessedAudioMs > effectiveClientProcessedAudioMs
%s HEP.feats: [%{public}ld,%{public}f,%{public}f,%{public}ld,%{public}f,%{public}f] & [(%{public}@),%{public}f] @ %{public}lu [%{public}f, %{public}d]
%s HEP.posterior=%{public}f, result=1, endpointedBuffer.hostTime=%{public}llu, isAnchorTimeBuffered=%{public}d
%s request timeout with features %{public}@
%s ServerFeaturesLatencyDistribution: %{public}@ additionalMetrics: %{public}@
%s MMEP:: HEP detected at %{public}f but will continue running for MMEP.
%s Already communicated end-pt: Not scheduling work for hybridClassifierQueue for silposnf=%{public}f
%s Log hybrid endpointer features for event: %{public}@, and locale: %{public}@
%s triggerEndSeconds: %{public}f, _vtEndInSampleCount: %{public}lu, _vtExtraAudioAtStartInMs: %{public}lu,  _hepAudioOriginInMs: %{public}f, voiceTriggerInfo: %{public}@,
%s CSHybridEndpointAnalyzer recordingStoppedForReason: %{public}ld
%s sampleRate=%{public}lu, recordContext=%{public}@
%s CSEndpointAsset exists: %{public}@
%s No asset for CSHybridEndpointer for currentLanguage: %{public}@. Fallback to VAD2
%s Created OSDAnalyzer: %{public}@
%s Created HybridClassifier(%{public}@); canProcessCurrentRequest after reset: %{public}d,for sampleRate: %{public}lu, lang=%{public}@, version=%{public}@
%s HEP.logs.hdr: [ServerASR_trailingSilenceDuration,ClientSPG_SilenceFramesCountMs,ServerASR_endOfSentenceLikelihood,ServerASR_wordCount,ServerFeaturesLatency,ClientSPG_SilenceProbabilityHMMFiltered] & [ServerASR_pauseCounts,ServerASR_silencePosterior,ClientSPG_silenceProbailitySPGRaw] @ effectiveClientProcessedAudioMs : [HEPPosteriorOut,HEPDecision]
%s csHepConfig: %{public}@
%s _clientHepConfig: %{public}f, _clampedSFLatencyForClientLag: %{public}f, _useDefaultServerFeaturesOnClientLag: %{public}d
%s Language changed to: %{public}@
%s New hybrid endpoint asset downloaded
%s FirstUnlock notification received: %{public}d
%s _currentAsset changed to : %{public}@
%s %{public}@ doesnt exist
%s Could not read: %{public}@
%s Could not decode contents of: %{public}@: err: %{public}@
%s Request to init device with deviceType : %ld, deviceName : %@, deviceId : %@, productId : %@
%s Request inject audio %@ into device with UUID %@ and scale factor %f
%s Audio url %@ is nil, or url not existing in path
%s Can't find device with uuid %@
%s Device speak audio with startTime = %llu, stopTime = %llu
%s Request connect device with UUID %@
%s input device uuid is nil
%s Request disconnect device with UUID %@
%s deviceUUID %@ not existing in deviceDictionary, already disconnected
%s Request fetching primary input device
%s Error fetching primary device!
%s Cannot create NSNumber if xpcObject is NULL
%s XPC object type should be BOOL, DOUBLE, INT64, or UINT64
%s Cannot create xpcObject if objcType is NULL
%s Cannot create xpcObject since there is no matching type
%s Found pending activation : %{public}@, handle pending activation immediately
%s Received Activation Event in CoreSpeechDaemon: %{public}@
%s Returning error for already existing pending activation event : %{public}@
%s No delegate registered : Postpone activation event handling until we have delegate registered
%s Pending Timeout fired for %{public}@ returning error for timeout
%s There is no pending activation event to timeout
%s corespeechd received mediaserverd launched event
%s Start monitoring : AOP First Pass trigger
%s Stop monitoring : AOP First Pass trigger
%s SmartSiriVolume: deleted %{public}u elements in energy buffer.
%s SmartSiriVolume: number of elements to delete exceeds energy buffer size, ignore.
%s SmartSiriVolume init value for noise estimation %{public}f
%s SmartSiriVolume init value for LKFS estimation %{public}f
%s SmartSiriVolume enable policy changed : %{public}@
%s Already started listen polling, skip
%s listen polling has failed : %{public}@
%s Skip listen polling since audio is streaming / Siri disabled
%s Start audio stream successfully ? %{public}@, error : %{public}@
%s Received didStartRecording when Siri is off
%s Failed in requesting audio stream : %{public}@
%s Failed to stop audio stream : %{public}@
%s No audio stream to stop, we shouldn't hit this
%s SmartSiriVolume received MediaRemote initial state as %{public}@
%s SmartSiriVolume haven't got MediaRemote callback yet, let's assume media is playing.
%s SmartSiriVolume received alarm initial state as %{public}@
%s SmartSiriVolume received timer initial state as %{public}@
%s asset is nil, use default parameters(this should not happen).
%s SmartSiriVolume configure: %{public}@
%s SmartSiriVolume heartbeat = %{public}lld
%s SmartSiriVolume: estimated noise level %{public}f
%s SmartSiriVolume: estimated LKFS %{public}f
%s SmartSiriVolume: pause SSV calculation.
%s SmartSiriVolume: resume SSV calculation.
%s Siri is disabled, we shouldn't receive audio here, heartbeat = %{public}lld
%s stream stopped unexpectedly : %{public}ld
%s SmartSiriVolume received VT event!
%s SmartSiriVolume remove samples from VT utterances by %{public}llu, with startAnalyzeSampleCount = %{public}llu, samplesFed = %{public}llu, triggerStartSampleCount = %{public}llu
%s SmartSiriVolume trying to delete too many VT samples, set triggerDurationToDelete to be limited max: %{public}llu
%s SmartSiriVolume got empty VT event!
%s SmartSiriVolume dismiss alarm firing as VoiceTrigger detected.
%s SmartSiriVolume dismiss timer firing as VoiceTrigger detected.
%s SmartSiriVolume: final estimated TTS volume in dB %{public}f
%s SmartSiriVolume: adjust TTS volume since alarm/timer is firing.
%s SmartSiriVolume: TTS volume in dB from noise %{public}f, from LKFS %{public}f, with user offset %{public}f
%s SmartSiriVolume: soft volume algorithm in use
%s SmartSiriVolume: pause LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume: resume LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume received unknown media playing state, let's assume media is playing.
%s SmartSiriVolume received unknown alarm state, let's reset alarm state.
%s SmartSiriVolume: alarm firing status = %@ according to MobileTimer notification.
%s SmartSiriVolume received unknown timer state, let's reset timer state.
%s SmartSiriVolume: timer firing status = %@ according to MobileTimer notification.
%s SmartSiriVolume dismiss alarm firing as Siri client is recording.
%s SmartSiriVolume dismiss timer firing as Siri client is recording.
%s SmartSiriVolume: set StartAnalyzeSampleCount = %{public}lld
%s SmartSiriVolume: final estimated TTS volume %{public}f with music volume %{public}f
%s Dealloc CSAudioInjectionProvider : %@
%s Stopping Audio Injection Provider : %@
%s Calling start audio stream : %@ %@
%s Calling stop audio stream : %@
%s Updating attSiri state to: %lu
%s Unable to expand archive %{public}@ to directory %{public}@
%s Listening on watch cannot be turned on since speech detection VAD is disabled
%s Listening on watch cannot be turned on since Siri is disabled
%s Listening on watch cannot be turned on since SpringBoard is not started
%s Listening on watch cannot be turned on since device is not unlocked after restart
%s Hey Siri is enabled. Checking if we are in a call.
%s Hey Siri is disabled. Not checking if we are in a call.
%s Listening on watch cannot be turned on since Siri assertion is disabled and or its not in a ringtone hfp state
%s Listening on watch cannot be turned on since audioInjection is enabled
%s Listening on watch cant be turned on because we are in a ringtone with A2DP, connected or outgoing call
%s Another non eligible app is recording
%s VoiceTriggerDuringCall enabled = %{public}@
%s VoiceTrigger during a call is already %{public}@, received duplicated notification!
%s Siri language is nil, falling back to %@
%s endpointUUID not provided, fallback to legacy query
%s Failed to query language code with endpointId %@, trying legacy query
%s Automatic Volume Toggled. Automatic Volume Enabled: %{public}d
%s ::: Error reading file %@, err: %d
%s CSAudioFileReader requires prepare recording settings to feed audio
%s CSAudioFileReader only support LinearPCM to feed
%s Setting ExtAudioFileSetProperty failed : %d
%s Starting audio file feed timer, bufferDuration = %f sampleRate = %f, bytesPerFrame = %d, channelsPerFrame = %d
%s ::: Error reading data from audio file : %d
%s Reach to EOF, chunkSize = %d
%s Stopping audio file feed timer
%s Endpointer is disabled in recordOption: %@
%s CSHybridEndpointer canProcessCurrentRequest
%s CSHybridEndpointer can-NOT-ProcessCurrentRequest, fallback  to NNVAD
%s _activeEndpointer=%{public}@
%s shouldUseCVT2ShotDecision: %{public}d, isWatchRTSTriggered=%{public}d
%s preheat
%s endpointer: %{public}@: didDetectStartpointAtTime: %{public}f
%s EP_PROXY::RecordingDidStop: Ignoring startPoint-reporting
%s EP_PROXY::RecordingDidStop: Ignoring didDetectHardpoint-reporting
%s %{public}@: Endpointer didDetectHardEndpointAtTime:withMetrics: %{public}f, CallingDelegate: %{public}@
%s Reported 2-shot at: %{public}f secs
%s Queried endpointerModelVersion: %{public}@
%s WARN: endpointerModelVersion called when CSHybridEndpointer is not available
%s Skip update endpointer threshold from server for accessible endpointer request
%s WARN: logEndpointFeatures called when CSHybridEndpointer is not available
%s OSDNode added receiver: %@
%s OSDNode removed receiver: %@
%s setting prefetched asset %@
%s skip audio packet since osdAnalyzer is nil
%s Received audio chunk from %@ with hostTime: %llu, startSampleCount: %llu, numSamples: %lu, wasBuffered: %lu, atTime: %llu
%s update lastKnownConsecutiveBoronStartSampleCount to: %llu
%s total chunks received: %lu, samples processed: %lu
%s Skip since endpointer is disabled
%s Updating osdMode to %lu
%s Created OSDAnalyzer: %{public}@ model path: %{public}@
%s Cannot create OSDAnalyzer
%s %@ %@
%s Advert data: %{public}@
%s advert data write failed
%s Bypass Trial Asset
%s installationString: %@, for language: %@
%s File not exist: %{public}@
%s endpointAsset: %{public}@, osdAsset: %{public}@
%s elapsed time to get HEP mobile assets: %{public}lf
%s Fake endpoint asset: %@
%s Dealloc CSAudioInjectionEngine : %@
%s Looking up audio diff:%llu sampleCount:%llu %@
%s First Pass Score : %f, First Pass Best Start : %llu, First Pass Best End : %llu
%s Start monitoring : Springboard start
%s Cannot start monitoring Springboard start because it was already started
%s Stop monitoring : Springboard start
%s SpringBoard started = %{public}@
%s PHS threshold for %lu doesn't exist, use default
%s Received Activation Event : %{public}@
%s Cannot handle activation event : %{public}@
%s activation client not exist
%s Start monitoring: wake Gesture
%s ERR: Failed to initialize SSV Manager!
%s ERR: %{public}@
%s Primary stream is nil !
%s CSAttSiriAudioSrcNode deallocated
%s Tandem stream stopped unexpectly for reason: %ld
%s Unexpected audioFormat for ATV : %{public}u
%s Create audioDecoder for audioFormat %{public}u
%s Stop monitoring : First unlock
%s xpc object string return nil
%s xpc object should be XPC_TYPE_STRING
%s xpc object should be XPC_TYPE_ARRAY
%s xpcObject value is NULL
%s Cannot decode non-plist types of XPC object
%s Cannot encode non-plist types into XPC object : %{public}@
%s Providing voiceTriggerEventInfo with deviceId %{public}@
%s Providing built-in voiceTriggerEventInfo
%s Timed-out for fetching voiceTriggerInfo
%s TiggerInfoProviding is nil
%s SmartSiriVolume cannot be resumed because Siri is not enabled
%s Overriding Myriad state as request was made during a ringtone
%s Invoked Siri client
%s Cannot invoke Siri client : %{public}@
%s Cannot notify wake keyword spoken event : %{public}@
%s AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm success
%s AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm failed : %{public}@
%s Invoked Siri client for voice trigger from Jarvis
%s Cannot invoke Siri client for voice trigger from Jarvis : %{public}@
%s SiriActivationConnection deactivated due to %ld
%s Invoked Siri client for voice trigger from Darwin
%s Cannot invoke Siri client for voice trigger from Darwin : %{public}@
%s siriSessionUUID = %{public}@
%s CSAudioProcessWaitingBuffer deallocated
%s Reason : %{public}lu
%s Received xpc disconnection
%s Updated endpoint start time in sec : %{public}.3f
%s Adjusted endpoint start time to : %{public}.3f, audioSampleCountToSkip : %{public}lu
%s Preheat LocalSpeechRecognition now
%s Settings : %{public}@
%s Unsupported speech recognizer task : %{public}lu
%s _localSpeechRecognizerState:%lu
%s Received nill requestId, generate requestId under corespeechd
%s Start deliver asr results with requestId: %@
%s Handle late start request from Request Dispatcher
%s Clear audio waiting buffer since current requestId(%@) doesn't match expected one (%{public}@)
%s Reason : %{public}lu, requestId : %@
%s requestId doesn't match current one (%@), ignore
%s requestId : %@
%s requestId doesn't match current siriSessionUUID (%@), ignore
%s Request Dispatcher hasn't asked to start local ASR yet, cache the audio
%s ASR already process enough audio until endpoint, stop processing it
%s %lf
%s Already accepted result candidate for request
%s Sending RC selection delegate with parameters, RcId: %{public}lu mitigationSignal: %{public}d shouldAccept %{public}d requestId:%@
%s Reset endpointStart and audioSampleCountToSkip since recordContext is %{public}@
%s shouldResetWaitingBuffer:%u
%s Preheat local speech recognizer with language : %@
%s Local speech recognizer disabled, ignore prepare
%s cached requestId : %@, newRequestId : %@
%s Disable local SR for dictation
%s mhID : %@
%s current state = %{public}@
%s speech recognizer task not specified, fallback to SearchOrMessage
%s Calling local speech recognition with settings : task(%{public}@), endpointStart(%{public}.3f), inputOrigin(%{public}@), location(%{public}@), shouldCensorSpeech(%{public}@), jitGrammar(%{public}@), enableVoiceCommands(%{public}@)
ondevice_VoiceTriggerEndToASRStartLatency
%s Voice trigger end to ASR Start Latency: %{public}.2f ms
%s didStart local speech recognition with error :%@, model properties : %@
%s Setting local speech recognizer state to [Idle] as not able to start local ASR
%s Local speech recognizer can't started : locale(%{public}@), taskName(%{public}@)
%s Added %{public}lu samples to local speech recognizer
%s Stopping task %@
%s Request dispatcher didn't ask to start until end
%s Complete task now since taskString(%{public}@) or localSR(%{public}p) is nil
%s Complete task now since local SR is disabled
%s Schedule RecordingTransactionReleaseTimer %{public}@ for %{public}lf seconds
%s Token : %{public}@, currentToken : %{public}@
%s recordingToken doesn't match, ignore
%s %@ created speech recognizer %@
%s Ignoring completion from previous recognizer!
%s Ignoring completion with metadatapackage as enable condition not satisfied!
%s Exceeding max local speech recognition duration (%{public}f) : %{public}f, force endbooking the ASR task
%s Skip query as already accepted result candidate for request
%s didDetectedEndpoint = %{public}@, usesAutomaticEndpointing = %{public}@, waiting
%s Eager results accepted: %{public}d. Duration: %{public}lf last duration: %{public}lf
%s Received duration not matching last duration
%s isFinal package : %{public}@
%s There is no valid RC to deliver, or previous RC already got accepted
%s Enforce previous endpointHint
%s SpeechPackage processed audio duration: %f ms
%s Speech recognition encountered error: %{public}@
%s Invalidating local speech recognizer for finish
ondevice_EagerCPL
%s eagerCPL time interval: %{public}f, userSpeakingEndedHostTime: %{public}llu, lastEndpointEagerResultTime: %{public}llu
%s wordCount = %ld, trailingSilenceDuration = %ld, eosLikelihood = %f, pauseCounts = %@, silencePosterior = %f, processedAudioDurationInMilliseconds = %ld
%s Received ASR datapack root directory: %{public}@
%s Received inputOrigin: %{public}@ from Request Dispatcher, use hard-coded map
%s set current state from %{public}@ to %{public}@
%s Selected recognizer language : %{public}@
%s Can't calculate TTFW due to missing metric: %llu %llu %f %f
ondevice_TimeToFirstWord
ondevice_LeadingSilence
%{public, signpost.description:begin_time}llu, %s
%{public, signpost.description:end_time}llu, %s
ondevice_FirstWordDuration
%s Timer already running. Cannot schedule another task
%s CSAttSiriTimer fired: event-handler called
%s Starting CSAttSiriTimer...
%s Cancelling pending timer...
%s stream %{public}@ initialized
%s stream %{public}@ is deallocated
%s Creating UUID for start audio stream request : %{public}@
%s Delivering didStop to %{public}lu tandem stream(s)
%s AudioStream<%{public}@> is streaming : %{public}d
%s Stream %{public}@ set startTimeInSampleCount : %{public}llu
%s AudioStream<%{public}@> has received didStopStreamUnexpectly
%s AudioStream<%{public}@> has received didHardwareConfigurationChange
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
%s Resetting audio preprocessor : %{public}f, containsVoiceTrigger:%{public}d
%s Flushing audio preprocessor
%s Zero Filter Metrics: %{public}@
%s Beep Canceller Metrics : %{public}@
%s accessoryId %{private}@
%s Received active route change notification
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s Created VoiceIdXpc connection
%s event = %{public}p client = %{public}p cannot handle event
%s ignore unknown types of message
%s message = %{public}p, client = %{public}p, cannot handle message
%s MessageType = %{public}lld
%s Null msg body
%s Null VTEI
%s Null Ctx
%s Null deviceInfo
%s Null audio context
%s Received msg of type %{public}lld for utt %{public}@
%s Fetched latest VT asset %@ for retraining
%s Implicit utterance processing done with error %{public}@
%s Cannot retrain since we cannot look-up SSR asset with error %@
%s Received error %{public}@ from client %{public}@
%s Client %{public}p connection disconnected, noticing xpc listener
%s AssetManager cannot be turned on since isFirstUnlocked is NO
%s AssetManager cannot be turned on since network is not available
%s Setting mixable to yes as we are in an active call
%s CSXPCListener start listening
%s setEndpointerOperationMode : %{public}d
%s current EndpointerOperationMode : %{public}d
%s update endpointer threshold to %{public}f for task %{public}@
%s isASRFeatureFromServer = %{public}d
%s HEP.posterior=%{public}f, result=1, endpointedBuffer.hostTime=%{public}llu, anchorhostTime=%{public}llu, endpointSampleCount=%{public}llu, numSamplesProcessedBeforeAnchorTime=%{public}lu, isAnchorTimeBuffered=%{public}d
%s CSHybridEndpointer recordingStoppedForReason: %{public}ld
%s No asset for CSHybridEndpointer for currentLanguage: %{public}@. Fallback to NNVAD
%s _clientHepConfig: %{public}f, _clampedSFLatencyForClientLag: %{public}f, _useDefaultServerFeaturesOnClientLag: %{public}d, _extraDelayFrequency: %{public}lu, _taskThresholdMap: %{public}@
%s update assets to: %@
%s Initializing CSRawAudioInjectionProvider
%s Done initializing CSRawAudioInjectionProvider
%s Dealloc CSRawAudioInjectionProvider
%s Calling StreamId for : %@
%s Calling prepare
%s Calling start audio stream : %@
%s Calling stop audio stream
%s Calling isRecording
%s Calling prewarm
%s Calling activate audio session
%s VoiceTrigger is already %{public}@, received duplicated notification!
%s Start monitring : VoiceTrigger setting switch
%s Cannot start monitoring VoiceTrigger setting switch because it was already started
%s Stop monitring : VoiceTrigger setting switch
%s VoiceTrigger enabled = %{public}@
%s Received RC %lu with duration %f from server, make RC acceptance and mitigation decision
%s shouldAccept = %d, isMitigated = %d
%s rcId: %lu
%s Failed to fetch listeningEnabled : %{public}@
%s listening property in AOP : %{public}d
%s Failed to fetch listeningEnabledOnNotification : %{public}@
%s Stop monitoring : AOP Listening state
%s Received AOP Listening state change notification : %{public}d
%s Created AFTM-AS node
%s Don't run AFTM for recordType: %lld
%s Prefetched asset not set
%s Invalid FTM config read from configFile %{public}@ for task %{public}@
%s Reading config from: %{public}@ for task %{public}@
%s Configured recording types: %{public}lu
%s Thresholds read: %{public}@
%s Shadow Mode: %{public}d
%s Received start request for record type: %{public}@, supportedRecordTypes: %{public}lx taskName %{public}@
%s Unable to create progressive checker with error:%{public}@
%s Unable to create progressive checker context with error:%{public}@
%s Created SLProgressiveCheckerAnalyzer %{public}@ with context %{public}@
%s CSAcousticProxy has received %{public}d samples, heartbeat = %{public}lld
%s Siri session ended, stoping acoustic checker
%s Empty result
%s Cancelling Siri request, score: %{public}.3f, threshold: %{public}.3f
%s Invalid Analyzer: %{public}@
%s FINAL: Analyzed samples: %lu, score: %f
%s PARTIAL: Analyzed samples: %lu, score: %f
%s Assistant audio log not available
%s Error writing out AcousticSL info meta: %{public}@
%s Saving AcousticSL results at %{public}@
%s Submitting AcousticFTM analytics: %@
%s Current wireless splitter info = %{public}@
%s Received WiressSplitterStateChange
%s Start monitoring : Wireless Splitter start
%s Cannot start monitoring Wireless Splitter because it was already started
%s Stop monitoring : Wireless Splitter
%s Unexpected XPC audioTimeConvert providing request : %{public}lld
%s From sampleCount %{public}llu fetched hostTime = %{public}llu
%s From hostTime %{public}llu fetched sampleCount = %{public}llu
%s Non internal build, Ignoring command %@ from peerId %@ - Bailing out!
%s Received Malformed command %@ from peerId %@ - Bailing out!
%s Command %@ received from peerId %@
%s Unknown Command: (%@) - Ignoring
%s Triggering sync with peer - %@
%s Triggering nearmiss sync with peer - %@
%s Triggering voice profile sync with peer - %@
%s Triggering acoustic data sync with peer - %@
%s Triggering gecko sync with peer - %@
%s CSP2P_RemoteHeySiriCmd: ENABLE HeySiri: Not Implemented Yet: 
%s CSP2P_RemoteHeySiriCmd: DISABLE HeySiri: Not Implemented Yet: 
%s Cannot read contents of directory: %@, err: %@
%s Unable to get %@ for file at %@: %@
%s Could not determine if [%@] is a directory or not. Err=%@
%s Found dir: %@. Skipping compression
%s _compressFilesInDirectory: Malloc failed for file %@ (%lu) - Discarding
%s _compressFilesInDirectory: Compression failed for file %@ (%lu) - Sending Uncompressed
%s _compressFilesInDirectory: File %@ compressed from %ld to %ld 
%s Failed in compressing %{public}@ with errror %{public}@ - Bailing out
%s Transfering NearMiss file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s Transfering grading file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s Grading log file successfully transfered for file %@ in task %@
%s Grading log file failed to transfer for file %@ in task %@
%s %@ is nil - Bailing out
%s Failed in transporting Voice file %@ with reponse: %@, error %@
%s Failed to remove the file %@ with error %@
%s Failed to move the file %@ to %@ with error %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: unknown IDS peer with passed Identifier %@, %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: Creating directory failed with error %@
%s Ignoring sync of existing file %@ from %@
%s Syncing parallel recorded audio file - %@ from %@
%s Uncompressed file %@ sent by peer %@
%s ERR: Failed to allocate buffer of size %zu, bailing out
%s Writing to file(%@) failed!. Err=%@
%s received malformed command - %@ %@ %@
%s unknown IDS peer with passed Identifier %@, %@ %@
%s received malformed command - %@
%s Syncing audio file - %@ from %@
%s Error setting remoteP2Plog file to NSFileProtectionCompleteUntilFirstUserAuthentication. file=%@ Err=%@
%s CSP2P_VoiceProfileTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileTransferCmd: received malformed command: CSP2P_VoiceProfileData_Key: %@CSP2P_VoiceProfileFileName_Key: %@CSP2P_VoiceProfileSpeakerName_Key: %@CSP2P_VoiceProfileLocale_Key: %@CSP2P_VoiceProfileDataType_Key: %@CSP2P_VoiceProfileTotalSegments_Key: %@CSP2P_VoiceProfileSegment_Key: %@
%s CSP2P_VoiceProfileTransferCmd: Received VoiceProfile Segment (%@/%@) from peerId %@
%s CSP2P_VoiceProfileTransferCmd: Failed to delete the directory %@ with error %@
%s CSP2P_VoiceProfileTransferCmd: received VoiceProfileSegment %@, expected %d
%s CSP2P_VoiceProfileTransferCmd: Creating directory failed with error %@
%s CSP2P_VoiceProfileTransferCmd: Writing to file failed!!!
%s Received request to delete VoiceProfile %@ from peerId %@
%s Cannot send data across when _adCompanionServiceProvider is nil - returning
%s ERR: Rejecting command %@ sent to non Horseman device
%s ERR: received malformed command - %@ %@
%s ERR: unknown IDS peer with passed Identifier %@, %@ %@
%s ERR: received malformed command with locale nil - %@
%s Fetching homeUserId for siriProfileId %{public}@
%s siriProfileId %{public}@ maps to homeUserId %{public}@
%s ERR: Home User Id erred %{public}@ for Siri Profile Id %{private}@
%s ERR: %@
%s ERR: received malformed command with profileId nil - %@
%s ERR: Failed to find voice profile with identifier - %@
%s CSP2P_VoiceProfileFetchCmd: Transferring voice profile %{public}@
%s CSP2P_VoiceProfileFetchCmd: File %@ isCompressed: %d, compressedSize: %ld, err: %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed VoiceProfileTransfer: %@, error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed transferring voice profile %@ with error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred voice profile %@
%s ERR: Rejecting command %@ sent to Horseman device
%s ERR: received malformed command with relative path nil - %@
%s Failed in sending trigger for Voice profile update to peer %@ with error %@
%s SpkrId:: path is nil - Bailing out
%s SpkrId:: Direntry with same name exists, this will be removed: %@
%s SpkrId:: Creating Directory : %@
%s SpkrId:: Creating Directory failed : %@
%s Error reading directory at %@: err: %@
%s %@ is empty
%s Using audioInjectionProvider as recorder
%s context : %@
%s context:%@, flag:%u option:%@, eventUUID:%@
%s _requestMHUUID set to :%@
%s Skip asking audioSrcNode to record since Siri client failed to start audio
%s Cached siri client stream, attach after nodes start
%s Skip asking audioSrcNode to prepare since Siri client failed to prepare audio
%s Siri enabled : %{public}d
%s currDp:%@ newRequiredNodes:%@
%s %@ is ready
%s Updating mitigation asset to %@
%s Unable to get Trial mitigation assets with err: %@, asset: %{public}@
%s Updating VT asset to %@
%s Unable to get Trial VT assets with err: %@, asset: %{public}@
%s Attached to siri client stream with result: %d error:%@
%s Failed to setup audioSrcNode
%s Skip processing for remora requests!
%s AFTM started for siri request status: %{public}d with error: %{public}@
%s attSiriTransaction already released
%s Received audio route change monitor event : %{public}d
%s init-_currentLanguageCode: %{public}@
%s Asset Manager Policy has been %{public}@
%s Asset Manager Policy has been enabled, start fetching meta data now
%s Need to fetch remote meta now, since we have new asset need to be downloaded
%s Does not need to fetch remote meta now
%s Cannot fetch VoiceTrigger asset meta data
%s Undefined assetType : %{public}u
%s Trying to start download meta data
%s Periodical downloading is already scheduled, ignore request.
%s No periodical downloading is scheduled, ignore request.
%s Failed to fetch local deviceId, abort
%s Sending HID report (length = %{public}lu) to host with deviceId info (%{public}@)
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s zeroFilterWinSz: %{public}tu, numHostTicksPerAudioSample: %{public}f
%s _vtEndInSampleCount:%{public}ld, _numSamplesProcessed: %{public}ld, voiceTriggerInfo: %{public}@
%s Failed to initialize caesuraSPG, stopping monitoring
%s Start monitoring : EARCaesuraSilencePosteriorGenerator: %{public}@
%s deallocating EARCaesuraSilencePosteriorGenerator: %{public}@
%s Stopped monitoring : EARCaesuraSilencePosteriorGenerator
%s EARClientSilenceFeatures heartbeat = %{public}lld,                   silScoreEstimate = %{public}f
%s splitterState : %{public}lu, shouldDisableSpeakerVerification : %{public}@
%s This call is not supported on darwinOS device (splitterState)
%s Metric Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Metric providing request : %{public}lld
%s audioMetric = %{public}@
%s audioMetricProvider not existing
%s Message type = %{public}lld
%s Cannot handle wrong message type
%s Cannot handle activateEventMessage since event is nil
%s _bestStartDetectSample %lu was greater than _bestEarlyDetectSample %lu or _bestEndDetectSample %lu
%s _bestEarlyDetectSample %lu was greater than _bestEndDetectSample %lu
%s _speechVoiceLevel %lu is 0
%s _numberOfTotalFramesETFT %lu is 0
%s Successfully ? %{public}@
%s Notify release of audio session
%s Created NLDA-AS node
%s Unable to create Bert model with error: %{public}@
%s Created Bert model !
%s Model not available
%s Failed to get result from Bert
%s NLDA detailed Result: %{public}@
%s Using ODLD processor
%s OS transaction obtained for NLDA inference
%s osTransaction already released
%s OS transaction released after NLDA inference
%s Failed to fetch recording client info, error : %{public}@
%s Start monitoring : AVVC recording client count
%s Stop monitoring : AVVC recording client count
%s Reset AVVC recording client count due to audio server crash
%s update AVVC recording client # : %{public}lu
%s Start monitoring : SelfTrigger switch, SelfTrigger is %{public}@
%s Stop monitoring : SelfTrigger switch
%s Set SelfTrigger Enable = %{public}@
%s Start monitoring : VoiceTrigger Asset Download
%s Stop monitoring : VoiceTrigger Asset Download
%s New VoiceTrigger is now installed
%s SmartSiriVolumeContextAware TTS volume post lower and upper bounds is: %f
%s TTS volume offset post lower and upper bounds is: %{public}f
%s Hang up toggle: %d
%s VoiceTrigger cannot be turned on since we are not in the desired call state
%s VoiceTrigger cannot be turned on since we are in a hang up supported call state but it is not first party.
%s VoiceTrigger cannot be turned on because we are in a ringtone and hsPhoneCallCapableHeadsetConnected: %d builtInState: %d isInSplitterMode: %d
%s Smart Siri Volume not supported on this platform - Bailing out
%s ERR: Failed to initialize Smart Siri Volume with sampling %{public}f and %{public}@
%s AlarmState changed to %{public}d
%s TimerState changed to %{public}d
%s MusicVolume changed to %{public}f
%s AlarmVolume changed to %{public}f
%s Automatic Volume State changed to %{public}d
%s UUID was nil will not start fingerprint provider
%s Updated in use services for fingerprintProvider. %lu services in use
%s Starting continuousFingerprintProvider
%s UUID was nil will not stop fingerprint provider
%s Updated in use services for fingerprintProvider. %lu services remaining
%s Stopping continuousFingerprintProvider
%s Created URES-AS node
%s Unload NLDA model
%s Set input origin to: %@
%s _allowListWordCountThreshold:%lu
%s Use config file at : %{public}@
%s Mitigation file doesn't exist at %{public}@, don't use Siri Assets for mitigation
%s Using config file at : %{public}@
%s Got mitigation result: %{public}d for RCId: %{public}lu
%s Mitigation signal for RCId: %{public}lu not found
%s ASR node fetched mitigation signal, unload NLDA model
%s Replacing already made decision for RCId: %{public}lu
%s Failed to get result from UReS, don't mitigate
%s Final mitigation result: %{public}@ for RCId: %{public}lu
%s Mitigation not supported for ctx: %{public}@
%s UReS not supported for inputOrigin: %{public}@, abort
%s Unable to get all required inputs for decision - (inputOrigin: %{public}@), abort
%s Recognizer task: %{public}@ isn't support, don't run URES mitigator
%s Received RC from ASR, make UReS decision
%s Speech package not present or Speech package doesn't contain LRNN scores, don't run URES mitigator
%s Applying override rule, don't mitigate
%s AttSignal: NLDA Score: %.3f
%s Received RC from server, make UReS decision
%s shouldMitigate = %d
%s Overriding mitigation decision from preferences
%s Input origin not set, Abort !
%s AttSignal: EoS Likelihood %{public}f
%s Unable to create Ures mitigator with err: %{public}@
%s Created URES Mitigator !
%s Received AFTM score: %{public}f for task: %{public}@
%s AttSignal: aftmScore: %.3f
%s AttSignal: osdActivity: %{public}@ for duration %.3f
%s Ignore SpkrId Score updates
%s ERR: Failed to retrieve Speaker score, letting trigger through - %{public}@
%s SPKR Accept: Score %{public}.3f Threshold %{public}f 
%s SPKR Reject: Score %{public}.3f Threshold %{public}f 
%s AttSignal: ssrScore: %.3f
%s OS transaction obtained for UReS inference
%s OS transaction released after UReS inference
%s ERR: metaData is nil, defaulting to NO for %{public}@
%s ERR: read metafile %{public}@ failed with %{public}@ - defaulting to NO
%s Override not applicable for non-magus inputOrigin
%s Override vocab list not set
%s Num tokens exceeds threshold, don't apply override
%s Found transcript (%@) match in override list, don't mitigate
%s Read SDSD override list from %{public}@
%s Start monitoring : AdBlocker Asset Download
%s Stop monitoring : AdBlocker Asset Download
%s New AdBlockerAsset is now installed
%s CSVoiceIdXPCListener start listening
%s speechController = %{public}p
%s xpcListener = %{public}p
%s context = %{public}@
%s Failed to create audio recorder : %{public}@
%s For Context : %{public}@, audioStreamId(%llu) has allocated
%s Failed to get audio stream handle ID : %{publid}@
%s has match with audio stream handle id : %llu
%s does not match with audio stream handle id(%llu), creating new audio provider
%s No audioRecorder available, return nil for audioProvider
%s have matched audioProvider with stream handle id : %llu
%s provider's streamId(%tu) is invalid, return nil
%s don't have matched audioProvider with stream handle id : %llu, need to create one later
%s audioProvider[%{public}@] invalidated with streamHandleId : %{public}llu
%s No matched audioProvider found for streamHandleId : %{public}llu
%s Received VoiceTrigger cached asset change notification, let's reinitialize VoiceTrigger
%s Trying to start clear logging files
%s Clear logging file timer is already started, ignore startClearLoggingFilesTimer request.
%s cannot handle nil event 
%s ignore unknown types of message: %{public}@
%s cannot handle nil error
%s Required values is nil, bailout
%s input dictionary is nil
%s Cannot send nil message
%s Unable to send message to client since there is no connection
%s Cannot handle audio providing message
%s Audio Providing Request Message has arrived : %{public}lld
%s Unable to handle audio providing switch message : context is nil
%s Setting XPCClientType to %{public}d
%s Handing PingPong message
%s Attentive Siri not supported on device
%s Endpointer xpc connection started listening
%s LocalSpeechRecognition xpc connection started listening
%s AttSiriServiceListener xpc connection started listening: _attSiriSvcListener=%@
%s SSR xpc connection started listening
%s RC Processing xpc connection started listening
%s Received SIGTERM. Exiting
%s CSHostDaemon didLaunch
%s Got xpc event for notification %s
%s Daemon WillShutdown
%s %{public}.2f ms after firstBufferStart
%s Invalid timestamp (currentMachTime: %{public}llu timestamp: %{public}llu)
%s Invalid timestamp (currentMachTime: %{public}llu arrivalTimestamp: %{public}llu)
%s numOfAudioPackets: %{public}lu, numOfValidTrailingPackets: %{public}lu, numOfValidTrailingSpeechPackets: %{public}lu, 
trailingPktLatencies: %{public}@ 
trailingPktSpeechLatencies: %{public}@
%s Error reading audio file: %{public}d, skipping...
%s Notifying CoreSpeechDaemon launched
%s Start monitoring : corespeechd state
%s Cannot start monitoring corespeechd state because it was already started
%s Stop monitoring : corespeechd state
%s CoreSpeechDaemon state changed to %{public}u
%s Failed to fetch speaker state muted info, error : %{public}@
%s Queried built-in speaker mute state as %{public}@
%s Timed-out for fetching speaker state muted info, setting isMuted = YES
%s Failed to fetch builtIn speaker active state, error : %{public}@
%s Queried built-in speaker state as %{public}@active
%s Timed-out for fetching speaker state active info, setting speakerStateActive = NO
%s Speaker state changed : %{public}@
%s Failed to get speaker state from AVVC, default to inactive
%s Speaker mute state changed: %{public}@
%s Failed to enable speakerStateListening: %{public}@
%s Start monitoring : Speaker state from AVVC
%s Failed to disable speakerStateListening: %{public}@
%s Stop monitoring : Speaker state from AVVC
%s CSVoiceTriggerAsset found: %{public}@
%s ERR: Mach Service Name is nil - Bailing out
%s ERR: Proxy Object is nil - Bailing out
%s ERR: Exported interface is nil - Bailing out
%s Set up queue for %@
%s Started listening for %{public}@
%s Service %{public}@ dealloced - %{public}@
%s Got connection on service %{public}@
%s [Service:%{public}@] Invalid listener - %{public}@
%s Rejecting connection to %{public}@ due to entitlement
%s [Service:%{public}@] Listener Interruption Handler: %{public}@, client PID: %{public}d)
%s [Service:%{public}@] Listener Invalidation Handler: %{public}@, client PID: %{public}d exited
%s machServiceName(%@) with clientConnCount:%lu 
%s Sending message to remote object: %@
%s RemoteObjectProxy is nil for client PID (%{public}d)
%s [Service:%{public}@]
%s Cannot create directory at : %{public}@ : %{public}@
%s Successfully make CoreSpeechDaemon as KeepAlive, created keepAlive file at %@
%s Failed to make CoreSpeechDaemon as KeepAlive : Cannot create file at %{public}@, error : %{public}@, %{public}@
%s KeepAlive file %{public}@ already existing
%s language code already up-to-date : %{public}@
%s Start monitoring: siri assertion enable/disable
%s Stop monitoring: siri assertion enable/disable
%s did receive enable assertion
%s did receive disable assertion
%s CSAudioSessionProvidingProxy has received xpc disconnection _streamClientType : %{public}d
%s Trying to release audio stream on CSAudioSessionProvidingProxy
%s deallocated
%s Session Providing Request Message has arrived : %{public}lld
%s Unexpected XPC session providing request : %{public}lld
%s Failed to prewarm audio session, error : %{public}@
%s Session activate reason : %{public}u, dynamicAttributeType : %{public}u, bundleId: %{public}@
%s Failed to activate audio session, error : %{public}@
%s Session activate reason : %{public}u
%s Failed to deactivate audio session, error : %{public}@
%s Session set duck others option : %{public}d
%s Trying to set duck others option when audioSessionProvider is nil
%s Manual ducking handler not supported!
%s Session %{public}@ mini ducking
%s Trying to enalbe mini ducking when audioSessionProvider is nil
%s Session %{public}@ smart routing consideration
%s Trying to enable smart routing consideration when audioSessionProvider is nil
%s Dealloc CSAudioInjectionEngineRemoraEngine : %@
%s Alert Providing Request Message has arrived : %{public}lld
%s Unexpected XPC alert providing request : %{public}lld
%s Alert sound url : %{public}@, alertType = %{public}d, force = %{public}@
%s Set alert sound successful ? %{public}@
%s audioAlertProvider not existing
%s AlertType = %{public}d
%s Play alert sound successful ? %{public}@
%s PlayRecordStartingAlertAndResetEndpointer successful ? %{public}@
%s alertStartTime = %{public}llu
%s Invalid alert behavior
%s Alert behavior : %{public}@
%s Request to bypass PhraseSpotter : %{public}d with timeout %{public}lf seconds
%s Received Siri Session did cancelled
%s Created FlexKwd-AS node
%s Unable to start Flex Kwd with error %{public}@
%s Unable to start audio stream for Flex Kwd with error %{public}@
%s Trigger info already sent, ignore result
%s Reporting trigger with result: %{public}@
%s _set_user_dir_suffix failed: %{darwin.errno}d
%s Connection %{public}p rejected due to missing entitlement
%s Start monitoring : AdBlocker Asset meta update
%s Stop monitoring : AdBlocker Asset meta update
%s New AdBlocker asset metadata is available
%s Error reading file
%s Version of AdBlockerAsset: %d
%s EarlyDetectSample = %{public}d
%s Cannot create de-interleaver using AudioConverterNew: %{public}d
%s Created de-interleaver
%s Stopping AudioInjectionEngine : %@
%s Failed to open audio file %@, error : %d
%s Streaming from %@
%s Cannot speak nil Audio URL
%s Cannot speak since audio file does not exists : %@
%s Calling stopAudioStream
%s Failed to deinterleave the data: %{public}d
%s Start monitoring : Software update checking state
%s Cannot start monitoring software update checking state because it was already started
%s Stop monitoring : Software update checking state
%s Software update checking running : %{public}@
%s There is not audio buffer to convert. Skip this.
%s Got asked for %{public}u packets, have %{public}u
%s [%{public}02u of %{public}02u %{public}fs] Opus packet with %u bytes
%s %{public}d bytesConsumed from opus coverter, remains %{public}d bytes
%s Resetting AudioConverter buffer
%s createAudioConverter : initial frames per buffer = dur %{public}.2f * sr %{public}.2f = %{public}u
%s Failed to get audioConverter property (kAudioConverterCurrentOutputStreamDescription) : %{public}d
%s _configureAudioConverter: encoded audio needs minimum of %{public}u bytes per output buffer
%s _configureAudioConverter: AudioConverterGetProperty(kAudioConverterPropertyMinimumOutputBufferSize) returned status %{public}d
%s _configureAudioConverter: final framesPerBuffer: %{public}u
%s _configureAudioConverter: _convertPacketCount: %{public}u
%s _configureAudioConverter: AudioConverterGetProperty(MaximumOutputPacketSize): returned status %{public}d
%s createAudioConverter: outputSizePerPacket: %{public}u
%s _configureAudioConverter: _convertAudioCapacity %{public}u bytes
%s Cannot create AudioConverter using AudioConverterNew : %{public}u
%s Cannot set encoder bit rate : %{public}u
%s Get initial state from MediaRemote: media is on playing state %{public}ld.
%s Start monitoring MediaRemote: media playback
%s Stop monitoring MediaRemote: media playback
%s MediaRemote reported the now playing app playback state changed to %s (state %d)
%s Releasing old assertion
%s Acquiring assertion for active user
%s last assertion acquired date is nil. Acquiring asssertion
%s current date: %@, last assertion acquired date: %@, time difference: %f seconds
%s The user is idle beyond the timeout interval. Ignoring acquiring assertion
%s Turn on AP mode since device is hands free state with HS phone-call capable route connected
%s CommandControl Streaming = %{public}d
%s Turn on AP mode since command control is streaming
%s VAD is not present or Hearst routed without phone call
%s VoiceTrigger AOP mode cannot be turned on since builtIn speaker is active
%s AudioRecordContext = %{public}@, recordState = RECORDING
%s CarPlay is connected, we will still run AOP mode
%s VoiceTrigger AOP mode cannot be turned on since Siri client is recording
%s AOP Listening is disabled
%s Turn on AP mode since siri is in attending state
%s Speech Detection VAD is not available, we will still running in AOP mode
%s Will notify Siri Client record state change to STOPPED in %{public}f seconds, eventUUID = %{public}@
%s Notifying Siri Client record state change to STOPPED, eventUUID = %{public}@
%s There is no pending event to timeout : pendingRecordingStopUUID = %{public}@, timeoutTargetUUID = %{public}@
%s Replace deviceId(%{public}@) to nil for VoiceTrigger from Gibraltar.
%s network state notify key : %s
%s Start monitoring : network availability
%s Stop monitoring : network availability
%s Network availability changed
%s xpc object should be XPC_TYPE_DICTIONARY
%s xpcObject key or value is NULL
%s Cannot encode key into xpcobject since the key is not NSString class type
%s Meter Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Meter providing request : %{public}lld
%s setMeteringEnabled : %{public}d
%s audioMeterProvider not existing
%s updateMeters
%s power = %{public}f with powerType %{public}u
CSMicUsageReporter
SpeechModelTrainingProtocol
SpeechModelTrainingClient
CSSpeechModelTrainingXPCManager
CSFallbackAudioSessionReleaseProvidingProxy
CSXPCConnectionDelegate
NSObject
CSPreventSystemSleepPowerAssertion
CSUserIdentityClassifier
AVVC
CSVoiceTriggerStatAggregator
CSDigitalZeroReporting
CSActivationXPCClient
CSSmartSiriVolumeRunPolicyHomePod
CSAttSiriRequestContext
NSSecureCoding
NSCoding
CSSystemUserActivityMonitor
CSAudioSampleRateConverter
CSSpeakerRecognitionAssetMetaUpdateMonitor
CSXPCClientFactory
CSVolumeMonitor
CSFallbackAudioSessionReleaseProvider
CSAudioRecorderDelegate
CSFallbackAudioSessionReleaseProviding
CSAudioTapProvider
CSSpeakerRecognitionAssetDownloadMonitor
CSTrialAssetDownloadMonitorDelegate
CSServerEndpointFeatures
CSVoiceTriggerXPCServiceProxy
CSAttSiriAudioSessionStateClient
AFNotifyObserverDelegate
CSContinuousAudioFingerprintEnabledPolicyHomePod
CSAudioStreamProvidingProxy
CSAudioStreamProvidingDelegate
CSFlexKeywordResult
CSFlexKeywordSpotter
_EARSpeechRecognitionResultStream
CSAttSiriAudioDataReceiver
CSAttSiriAttendingAudioSrcNode
CSAttSiriNode
CSAudioFileLog
CSAudioSessionInfoProvider
CSAudioSessionInfoProviding
CSStateMachine
CSPreMyriadVoiceTriggerMetaData
CSPreMyriadCoordinator
CSVoiceTriggerDelegate
CSSecondPassProgressDelegate
CSBenchmarkXPCProtocol
CSDarwinVoiceTriggerHandlerPool
AttSiri
CSAttSiriCachedEndpointInfo
CSAttSiriEndpointerNodeDelegate
CSAttSiriEndpointerNode
CSEndpointAnalyzerDelegate
CSAttSiriOSDNodeDelegate
CSEndpointerXPCService
CSAudioInjectionFileOption
CSSmartSiriVolumeEnablePolicy
CSAttSiriSSRNodeDelegate
CSAttSiriSSRNode
SSRSpeakerRecognitionControllerDelegate
CSSpeakerRecognitionAssetDownloadMonitorDelegate
CSLanguageCodeUpdateMonitorDelegate
CSSSRXPCService
CSSiriRestrictionOnLockScreenMonitor
MCProfileConnectionObserver
AudioInjectionXPCProtocol
CSPostBuildInstallService
CSContinuousAudioFingerprintEnabledPolicy
CESRXPCActivity
CSAssetControllerFactory
CSVoiceTriggerDataCollector
CSVoiceTriggerAssetHandlerMac
CSVoiceTriggerAssetDownloadMonitorDelegate
CSFirstUnlockMonitorDelegate
CSAttSiriSpeechDetectionNodeDelegate
CSAttSiriSpeechDetectionNode
CSAttSiriAttendingTriggerEventInfo
CSVoiceTriggerSecondChanceContext
CSAudioStartStreamOption
NSCopying
CSCoreSpeechServices
CSVoiceTriggerAssetChangeMonitor
CSAudioServerCrashMonitor
CSAudioServerCrashEventProvidingDelegate
CSXPCClient
CSAudioSessionProviding
CSAudioStreamProviding
CSAudioAlertProviding
CSAudioMeterProviding
CSAudioMetricProviding
CSAudioTimeConversionProviding
CSTriggerInfoProviding
CSOpportuneSpeakListnerTestService
CSOpportuneSpeakListenerDelegate
CSTimerMonitor
CSSiriAudioSession
CSSiriAudioRoute
CSOpportuneSpeakEventMonitor
CSOpportuneSpeakBehaviorMonitorDelegate
CSAttSiriMitigationAssetHandler
CSPhraseSpotterEnabledMonitor
CSVoiceTriggerAssetHandler
CSMyriadNotifier
CSBenchmarkXPCListener
NSXPCListenerDelegate
Liminal
CSLanguageCodeUpdateMonitorImpl
CSMyriadPHash
CSVoiceTriggerXPCListener
CSVoiceTriggerXPCConnectionDelegate
CSCoreSpeechServicesListener
CSCoreSpeechServiceListenerDelegate
CSAudioStreamHolding
CSTUPhoneCallStateMonitor
CSEndpointDelayReporter
SmartSiriVolume
CSAudioInjectionXPCListener
CSHostPowerStateMonitor
CSVoiceTriggerRTModel
CSAudioProvider
CSAudioServerCrashMonitorDelegate
CSAudioPreprocessorDelegate
CSSiriDebugConnection
CSAssetDownloadingOption
CSPowerAssertionMac
CSVoiceTriggerFirstPassHearstAP
CSOpportuneSpeakEventMonitorDelegate
CSHomePodSettingsMonitor
CSVoiceTriggerEnabledPolicyNonAOP
CSNNVADEndpointAnalyzer
CSEndpointAnalyzerImpl
CSEndpointAnalyzer
CSBiometricMatchMonitor
CSSpeechDetectionDevicePresentMonitor
RTModel
CSDefaultAudioRouteChangeMonitorMac
CSGestureMonitor
CSVTSecondPassLatencyMetrics
CSAudioRouteChangeMonitorImpl
debugDescription
remoteVoiceActivityVADBuffer
CSAudioRecorder
AVVoiceControllerRecordDelegate
CSAudioDecoderDelegate
CSAudioFileReaderDelegate
CSRemoteRecordClientDelegate
CSUserSessionActiveMonitorDelegate
CSAudioServerCrashEventProviding
CSAudioSessionEventProviding
CSAudioTandemStream
CSOpportuneSpeakListener
CSSPGEndpointAnalyzerDelegate
XPCObject
CSSiriEnabledMonitor
CSSmartSiriVolumeEnablePolicyHomePod
CSVoiceTriggerAssetHandlerFromFile
CSBluetoothManager
CSJarvisTriggerModeMonitor
CSActivationXPCListener
CSActivateXPCConnectionDelegate
CSModelBenchmarker
CSAudioInjectionEngineDelegate
CSRemoteDeviceProtocolInfo
AudioHardware
Trial
CSAudioSessionInfoProvidingProxy
CSAudioSessionInfoProvidingDelegate
CSSmartSiriVolumeService
CSSmartSiriVolumeServiceDelegate
CSAssetController
CSEventMonitorDelegate
Utils
CSHybridEndpointAnalyzer
CSAssetManagerDelegate
OSDAnalyzerDelegate
8!!!B
RecordContext
CSAdBlockerAssetDecoderV3
CSAudioInjectionXPC
CSActivationEventNotificationHandler
CSSmartSiriVolume
CSMediaPlayingMonitorDelegate
CSSiriClientBehaviorMonitorDelegate
CSSmartSiriVolumeProcessor
isPluginContext
CSAudioInjectionProvider
CSAttSiriStateMonitor
Compression
CSRemoteXPCVoiceTriggerEnabledPolicy
CSListeningEnabledPolicyWatch
CSOtherAppRecordingStateMonitor
CSHostPowerSourceMonitor
CSHangUpEnabledMonitor
LanguageCode
CSAutomaticVolumeEnabledMonitor
CSAudioFileReader
CSEndpointerProxy
CSEndpointAnalyzerImplDelegate
CSAttSiriOSDNode
CSEndpointerAssetManagerDelegate
CSAttSiriSignalDataAggregatorProtocol
CSMyriadSelfTriggerCoordinator
CSSelfTriggerDetectorDelegate
CSEndpointerAssetManager
CESRTrialAssetDelegate
CSAudioInjectionBuiltInEngine
CSSpringboardStartMonitor
SpeakerRecognition
CSActivationEventNotifier
CSMacWakeSleepMonitor
CSAlarmMonitor
CSGestureMonitorPhone
CMWakeGestureDelegate
CSSmartSiriVolumeServiceProxy
CSAttSiriAudioSrcNode
CSPhoneCallStateMonitor
CSFirstUnlockMonitor
CSVoiceTriggerFirstPassMetrics
CSVoiceTriggerEventInfoProvider
CSAudioRecordDeviceInfo
CSCommandControlBehaviorMonitor
CSSmartSiriVolumeRunPolicy
CSSiriLauncher
CSAudioProcessWaitingBuffer
CSAttSiriAsrNode
CoreEmbeddedSpeechRecognizerDelegate
LBLocalSpeechService
CSAttSiriTimer
CSAudioStream
CSVoiceTriggerAssetMetaUpdateMonitor
CSOpportuneSpeakListenerOption
CSAudioPreprocessor
CSVoiceTriggerAwareZeroFilterDelegate
CSBeepCancellerDelegate
CSAccessorySiriClientBehaviorMonitor
CSAudioRouteChangeMonitorImplWatch
CSSpeechEndpointAssetMetaUpdateMonitor
CSAlwaysDisabledPolicy
CSScreenLockMonitor
CSVoiceIdXPCConnection
CSAssetManagerEnablePolicy
CSXPCListener
CSDarkWakePowerAssertionMac
Indexing
CSHybridEndpointer
!2!B
CSVoiceTriggerSecondPassRequestOption
CSAssetManagerEnablePolicyFactory
CSRawAudioInjectionProvider
CSAudioInjectionTvRemoteEngine
CSAudioConverterDelegate
CSVoiceTriggerEnabledMonitor
CSMSNExceptionManager
CSAttSiriRCHandler
CSRCHandlingXPCService
CSSmartSiriVolumeEstimate
CSAlwaysOnProcessorStateMonitor
CSAttSiriAFTMNodeDelegate
CSAttSiriAFTMNode
SLProgressiveCheckerAnalyzerDelegate
CSBluetoothWirelessSplitterMonitorImpIOS
CSAttSiriMotionNode
CSVoiceTriggerEnabledPolicyMacWithRemoteDarwin
NSXPC
CSAudioTimeConversionProvidingProxy
CSSuddenTerminationProtector
CSP2PService
CSAudioRecorderFactory
CoreSpeechXPCProtocol
CSContinuousAudioFingerprintEnabledPolicyFactory
CSAttSiriController
CSSiriEnabledMonitorDelegate
CSAttSiriFlexKwdNodeDelegate
CSAttSiriServiceDelegate
CSAttSiriServiceProtocol
CSAssetManager
CSVoiceTriggerAssetMetaUpdateMonitorDelegate
CSSpeechEndpointAssetMetaUpdateMonitorDelegate
CSAdBlockerMetaUpdateMonitorDelegate
CSAssetControllerDelegate
CSSpeakerRecognitionAssetMetaUpdateMonitorDelegate
CSXPCActivity
CSHostLauncherDarwin
AudioDevice
CSVoiceTriggerAwareZeroFilter
CSSPGEndpointAnalyzer
EARCaesuraSilencePosteriorGeneratorDelegate
CSBluetoothWirelessSplitterMonitorImplDarwin
CSVoiceTriggerEventsCoordinator
CSAudioMetricProvidingProxy
CSActivationXPCConnection
CSBluetoothDeviceInfo
RMSSample
CSShadowMicScoreCreator
CSSiriClientBehaviorMonitor
CSLanguageCodeUpdateMonitor
CSAttSiriNLDAClassifierDelegate
CSAttSiriNLDAClassifierNode
CSAudioInjectionHearstEngine
CSAVVCRecordingClientMonitor
CSSelfTriggerEnabledMonitorAccessory
CSEventMonitor
CSActivationEvent
CSAudioStreamRequest
CSVoiceTriggerAssetDownloadMonitor
FlexKwd
CSAudioSessionMonitor
CSAudioSessionEventProvidingDelegate
CSSmartSiriVolumeUserIntent
CSPhoneCallStateMonitorFactory
CSGestureDropEvent
CSAudioInjectionDevice
CSEndpointerMetrics
CSOpportuneSpeakListenerDeviceManager
CSVoiceTriggerEnabledPolicyHelper
CSSmartSiriVolumeRunPolicyFactory
CSSmartSiriVolumeManager
CSAlarmMonitorDelegate
CSTimerMonitorDelegate
CSVolumeMonitorDelegate
CSAutomaticVolumeEnabledMonitorDelegate
CSContinuousAudioFingerprintProvider
CSAttSiriUresNodeDelegate
CSAttSiriUresNode
CSAttSiriAttentionNodeDelegate
CSBluetoothWirelessSplitterInfo
CSAdBlockerAssetDownloadMonitor
CSVoiceIdXPCListener
CSSpeechManager
CSVoiceTriggerAssetHandlerDelegate
CSActivationEventNotificationHandlerDelegate
CSAudioProviderDelegate
CSVoiceIdXPCClient
CSOpportuneSpeakBehaviorMonitor
CSAttSiriAttentionNode
Statistics
CSXPCConnection
CSEndpointerXPCServiceDelegate
LBLocalSpeechServiceDelegate
CSSSRXPCServiceDelegate
CSAttSiriConnectionManager
CSHostDaemon
CSEndpointLoggingHelper
CSEndpointLatencyInfo
AudioFile
CSCoreSpeechDaemonStateMonitor
CSBuiltinSpeakerStateMonitor
CSRemoteRecordClient
CSVoiceTriggerAssetHandlerDarwin
CSRemoteAssetManagerDelegate
CSConnectionListener
CSConnectionServiceDelegate
CSCoreSpeechDKeepAliveHandler
CSLanguageCodeUpdateMonitorImplDarwin
CSSiriAssertionMonitor
CSAudioSessionProvidingProxy
CSAudioSessionProvidingDelegate
CSBluetoothWirelessSplitterMonitor
CSUserSessionActiveMonitor
CSAudioInjectionRemoraEngine
CSAsset
CSCommandControlStreamEventMonitor
CSCommandControlBehaviorMonitorDelegate
CSTrialAssetManager
CSRemoteDarwinDeviceInfo
CSAudioAlertProvidingProxy
CSAudioAlertProvidingDelegate
CSAVCallConnectedMonitor
CSVoiceTriggerXPCConnection
CSAttSiriFlexKwdNode
CSFlexKeywordSpotterDelegate
CSVoiceProfileRetrainManager
CSSmartSiriVolumeEnablePolicyFactory
Bitset
CSAudioRouteChangeMonitor
CSAlertBehaviorPredictor
CSAudioDeviceInfo
CSManualDuckingHandler
machXPC
CSAudioInjectionEngineFactory
CSAdBlockerAssetMetaUpdateMonitor
CSAdBlockerAssetDecoderFactory
CSAdBlockerAssetDecoderV2
CSPhraseNDEAPIScorer
CSKeywordAnalyzerNDEAPIScoreDelegate
CSAudioInjectionEngine
CSSoftwareUpdateCheckingMonitor
CSCXPhoneCallStateMonitor
CSAudioConverter
CSMediaPlayingMonitor
CSAdBlockerAssetDecoderV1
CSBatteryMonitor
CSEndpointerSettings
CSDarwinPreventSystemSleepManager
CSVoiceTriggerAOPModeEnabledPolicyIOS
CSAudioRecordDeviceIndicator
CSTrialAssetDownloadMonitor
CSAVVoiceTriggerClientManager
CSVoiceTriggerAOPModeEnabledPolicyFactory
CSNetworkAvailabilityMonitor
CSAudioMeterProvidingProxy
@16@0:8
v20@0:8B16
v32@0:8Q16@24
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
v32@0:8@16@?24
v48@0:8@16@24B32B36@?40
v36@0:8@16B24@?28
v40@0:8@16@24@?32
v96@0:8@16@24@32@40Q48@56@64@72@80@?88
v32@0:8@"NSString"16@?<v@?@"NSString">24
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSDictionary"@"NSError">28
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v96@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSString"40Q48@"NSArray"56@"NSString"64@"NSString"72@"NSArray"80@?<v@?@"NSArray"@"NSError">88
@24@0:8@16
@24@0:8@?16
v56@0:8@16@24@32@40@?48
v60@0:8@16@24@32B40@44@?52
v52@0:8@16@24B32@36@?44
@"NSXPCConnection"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v40@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v40@0:8@"CSXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v44@0:8@16@24B32@36
@"CSXPCConnection"
@24@0:8d16
v48@0:8^{__CFString=}16d24^I32^{__CFString=}40
v32@0:8^I16^{__CFString=}24
Q40@0:8@16@24@32
@24@0:8Q16
q24@0:8q16
v20@0:8f16
v32@0:8i16@20B28
v28@0:8B16@20
v32@0:8Q16Q24
v24@0:8Q16
@"NSMutableDictionary"
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
q16@0:8
i16@0:8
v20@0:8i16
v24@0:8q16
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
r*16@0:8
f16@0:8
v24@0:8@?16
v68@0:8@16Q24@32@40Q48Q56i64
v40@0:8@16Q24@32
v44@0:8@16Q24B32@36
v40@0:8@16Q24q32
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@24
v28@0:8@16B24
v68@0:8@"CSAudioRecorder"16Q24@"NSData"32@"NSData"40Q48Q56i64
v40@0:8@"CSAudioRecorder"16Q24@"CSAudioChunkForTV"32
v44@0:8@"CSAudioRecorder"16Q24B32@"NSError"36
v40@0:8@"CSAudioRecorder"16Q24q32
v32@0:8@"CSAudioRecorder"16q24
v40@0:8@"CSAudioRecorder"16q24@"NSError"32
v24@0:8@"CSAudioRecorder"16
v32@0:8@"CSAudioRecorder"16@"NSDictionary"24
v28@0:8@"CSAudioRecorder"16B24
v24@0:8@"NSDictionary"16
v32@0:8@"CSAudioRecorder"16@"NSError"24
B32@0:8Q16^@24
@"CSAudioRecorder"
v36@0:8@16B24Q28
@"CSTrialAssetDownloadMonitor"
@72@0:8q16q24d32@40d48@56q64
@64@0:8q16q24d32@40d48@56
d16@0:8
v24@0:8d16
@"NSArray"
@"NSString"
v36@0:8B16@20d28
v28@0:8B16d20
@"NSMutableSet"
@"NSHashTable"
@"CSSiriAssertionMonitor"
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
@"<CSAttSiriSessionStateDelegate>"
@"AFNotifyObserver"
v32@0:8@"<CSAudioStreamProviding>"16q24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunk"24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunkForTV"24
@"<CSAudioStreamProviding>"
@"<CSTriggerInfoProviding>"
@"CSAudioStream"
@"CSAudioRecordContext"
@44@0:8@16f24q28q36
v48@0:8@16@24@32@40
v32@0:8@16d24
v72@0:8@16q24q32d40@48d56q64
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResult"24
v32@0:8@"_EARSpeechRecognizer"16@"NSError"24
v32@0:8@"_EARSpeechRecognizer"16@"NSArray"24
v48@0:8@"_EARSpeechRecognizer"16@"NSArray"24@"NSArray"32@"NSArray"40
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResultPackage"24
v32@0:8@"_EARSpeechRecognizer"16d24
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognition"24
v72@0:8@"_EARSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v40@0:8@"_EARSpeechRecognizer"16Q24@"NSDictionary"32
@"<CSFlexKeywordSpotterDelegate>"
@"_EARSpeechRecognizer"
@"_EARSpeechRecognitionAudioBuffer"
@"NSDictionary"
@"CSAsset"
v36@0:8@16B24@28
v36@0:8@"<CSAttSiriNode>"16B24@"NSError"28
v32@0:8@"<CSAttSiriNode>"16@"CSAudioChunk"24
v24@0:8@"<CSAttSiriNode>"16
@24@0:8@"CSAttSiriController"16
@"CSAttSiriController"16@0:8
v24@0:8@"CSAttSiriController"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
@"CSAsset"16@0:8
v24@0:8@"CSAsset"16
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@"CSAttSiriController"
@"CSSpeechManager"
@"CSAudioStreamHolding"
@32@0:8@16@24
^{OpaqueExtAudioFile=}
@"NSURL"
I24@0:8@16
v24@0:8@"<CSAudioSessionInfoProvidingDelegate>"16
I24@0:8@"NSString"16
@24@0:8q16
v40@0:8q16q24q32
v32@0:8q16q24
@"<CSStateMachineDelegate>"
v60@0:8@16@24Q32@40B48@?52
v32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?>32
v24@0:8@"NSData"16
v60@0:8@"NSDictionary"16@"NSData"24Q32@"NSString"40B48@?<v@?>52
v40@0:8Q16@24d32
v40@0:8Q16@"NSString"24d32
v32@0:8Q16@"NSString"24
@?16@0:8
@"<CSVoiceTriggerDelegate>"
@"<CSSecondPassProgressProviding>"
@"CSPreMyriadVoiceTriggerMetaData"
v48@0:8@16@24@32@?40
v48@0:8@"NSString"16@"NSString"24@"NSURL"32@?<v@?@"NSError"dq>40
v48@0:8@"NSString"16@"NSURL"24@"NSString"32@?<v@?@"NSError"dq>40
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError"dq>32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSURL"16@?<v@?@"NSError"dq>24
@"CSEndpointerMetrics"
v40@0:8@16d24@32
v40@0:8@"<CSAttSiriNode>"16d24@"CSEndpointerMetrics"32
v32@0:8@"<CSAttSiriNode>"16d24
v32@0:8@"<CSEndpointAnalyzer>"16d24
v40@0:8@"<CSEndpointAnalyzer>"16d24@"CSEndpointerMetrics"32
v40@0:8@16@24d32
v48@0:8@16@24Q32Q40
v44@0:8@16Q24Q32B40
v40@0:8@"<CSAttSiriNode>"16@"OSDFeatures"24d32
v48@0:8@"<CSAttSiriNode>"16@"NSDate"24Q32Q40
v44@0:8@"<CSAttSiriNode>"16Q24Q32B40
v72@0:8q16q24d32@40d48@56q64
v32@0:8d16@?24
v72@0:8q16q24d32@"NSArray"40d48@"NSString"56q64
v24@0:8@?<v@?@"NSError"@"NSString">16
v32@0:8d16@?<v@?B@"NSArray">24
v24@0:8@?<v@?@"NSError"d>16
v24@0:8@?<v@?@"NSError"Q>16
v48@0:8Q16@24@32@40
v76@0:8q16q24d32@40d48@56q64B72
v32@0:8d16@24
@"CSConnectionListener"
@"CSEndpointerProxy"
@"CSEndpointLatencyInfo"
@"CSAttSiriCachedEndpointInfo"
@68@0:8@16f24{AudioStreamBasicDescription=dIIIIIIII}28
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
^{OpaqueExtAudioFile=}16@0:8
v24@0:8^{OpaqueExtAudioFile=}16
v32@0:8@"<CSAttSiriNode>"16@"NSDictionary"24
v32@0:8@"SSRSpeakerRecognitionController"16@"NSDictionary"24
v32@0:8@16@"NSString"24
v44@0:8@16f24f28d32B40
@"SSRSpeakerRecognitionController"
@"SSRVoiceProfileManager"
@"SSRVoiceProfile"
@"<CSAudioFileWriter>"
@"NSSet"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v56@0:8q16@24@32@40@?48
v44@0:8@16@24f32@?36
v48@0:8@16@24f32i36@?40
v56@0:8q16@"NSString"24@"NSString"32@"NSString"40@?<v@?B@"NSError"@"NSUUID">48
v44@0:8@"NSURL"16@"NSUUID"24f32@?<v@?B@"NSError"QQ>36
v48@0:8@"NSURL"16@"NSUUID"24f32i36@?<v@?B@"NSError"QQ>40
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
v28@0:8@"CSFirstUnlockMonitor"16B24
@64@0:8@16@24@32@40@48@56
@"CSVoiceTriggerAssetDownloadMonitor"
@"CSLanguageCodeUpdateMonitor"
@"CSFirstUnlockMonitor"
@"CSAssetManager"
@"CSTrialAssetManager"
v32@0:8@"<CSAttSiriNode>"16@"CSAttSiriAttendingTriggerEventInfo"24
@"CSAttSiriOSDNode"
@"CSAttSiriRequestContext"
I16@0:8
v20@0:8I16
v64@0:8Q16Q24q32@40@48@?56
v72@0:8Q16Q24q32@40@48@56@?64
v56@0:8Q16Q24@32@40@?48
@"<CSVoiceTriggerAssetChangeDelegate>"
v32@0:8@16Q24
@"AVVoiceTriggerClient"
B24@0:8^@16
B48@0:8Q16Q24@32^@40
v24@0:8@"<CSAudioSessionProvidingDelegate>"16
B48@0:8Q16Q24@"NSString"32^@40
B32@0:8@16^@24
@40@0:8@16@24^@32
B40@0:8@16@24^@32
@32@0:8Q16Q24
@40@0:8Q16Q24Q32
v40@0:8Q16Q24@32
@32@0:8@16d24
v28@0:8B16Q20
B32@0:8@"CSAudioRecordContext"16^@24
@"CSAudioStream"40@0:8@"CSAudioStreamRequest"16@"NSString"24^@32
v40@0:8@"CSAudioStreamRequest"16@"NSString"24@?<v@?@"CSAudioStream"@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStream"24@?<v@?B@"NSError">32
B40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24^@32
v40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStartStreamOption"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStopStreamOption"24@?<v@?B@"NSError">32
@"CSAudioChunk"32@0:8Q16Q24
@"CSAudioChunk"40@0:8Q16Q24Q32
@"CSAudioChunk"24@0:8Q16
v40@0:8Q16Q24@"NSURL"32
v32@0:8Q16@"NSURL"24
@"CSAudioStreamHolding"32@0:8@"NSString"16d24
v24@0:8@"CSAudioStreamHolding"16
@"CSAudioRecordDeviceInfo"16@0:8
@"CSAudioDeviceInfo"16@0:8
@"NSDictionary"16@0:8
B36@0:8@16q24B32
B24@0:8q16
v24@0:8@"<CSAudioAlertProvidingDelegate>"16
B36@0:8@"NSURL"16q24B32
f24@0:8Q16
Q24@0:8Q16
v32@0:8@"CSAudioRecordContext"16@?<v@?@"NSDictionary"@"NSDictionary">24
B40@0:8@16Q24^@32
@"<CSAudioSessionProvidingDelegate>"
@"<CSAudioStreamProvidingDelegate>"
@"<CSAudioAlertProvidingDelegate>"
@"<CSXPCClientDelegate>"
v32@0:8@16B24f28
v28@0:8@"CSOpportuneSpeakListener"16B24
v32@0:8@"CSOpportuneSpeakListener"16B24f28
@"CSOpportuneSpeakListener"
@"CSSiriAudioRoute"
@20@0:8I16
v52@0:8@16@24@32B40@44
v48@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioRecordContext"24@"NSString"32@"CSAudioStartStreamOption"40
v52@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioRecordContext"24@"NSString"32B40@"CSAudioStartStreamOption"44
v32@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioStopStreamOption"24
@"NSUUID"
@60@0:8@16@24@32@40B48@52
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"CSModelBenchmarker"
Q24@0:8@16
@28@0:8Q16B24
@28@0:8@16B24
S28@0:8^f16i24
s16@0:8
v20@0:8s16
C16@0:8
v20@0:8C16
v40@0:8@"CSVoiceTriggerXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
@"NSMutableArray"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv40@0:8@16q24@?32
Vv24@0:8@?<v@?@"NSString">16
Vv32@0:8@"NSString"16@?<v@?@"NSString">24
Vv40@0:8@"NSArray"16q24@?<v@?@"NSError">32
Vv24@0:8@?<v@?Q>16
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?q>16
@"CSGibraltarVoiceTriggerHandler"
@"CSAudioInjectionXPC"
@"NSData"
v24@0:8@"CSAudioServerCrashMonitor"16
v52@0:8@16@24Q32Q40i48
v52@0:8@"CSAudioPreprocessor"16@"NSData"24Q32Q40i48
@56@0:8Q16q24@32@40@48
@48@0:8Q16q24@32@40
v40@0:8@16@24Q32
B32@0:8Q16q24
@"<CSAudioProviderDelegate>"
@"CSAudioCircularBuffer"
@"CSAudioPreprocessor"
@"CSOSTransaction"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_source>"
@"CSAudioTimeConverter"
@"CSAudioRecordDeviceIndicator"
@"CSMicUsageReporter"
@"CSADPPreventStandbyAssertion"
@"CSPhoneCallStateMonitor"
v28@0:8@"CSOpportuneSpeakEventMonitor"16B24
v36@0:8Q16Q24B32
v32@0:8Q16@"CSAudioRecordContext"24
v24@0:8@"CSAudioChunk"16
@"<CSEndpointAnalyzerDelegate>"16@0:8
v24@0:8@"<CSEndpointAnalyzerDelegate>"16
@"<CSEndpointAnalyzerImplDelegate>"16@0:8
v24@0:8@"<CSEndpointAnalyzerImplDelegate>"16
v24@0:8@"CSServerEndpointFeatures"16
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"OSDFeatures"16d24
v32@0:8@"NSDate"16Q24
v28@0:8@"CSServerEndpointFeatures"16B24
@"<CSEndpointAnalyzerDelegate>"
@"<CSEndpointAnalyzerImplDelegate>"
B32@0:8^B16^Q24
@"<CSBiometricMatchMonitorDelegate>"
@48@0:8q16Q24Q32@40
@40@0:8Q16Q24@32
v36@0:8@16i24d28
v36@0:8@16i24@28
v28@0:8@"AVVoiceController"16B24
v36@0:8@"AVVoiceController"16B24@"NSError"28
v32@0:8@"AVVoiceController"16q24
v24@0:8@"AVVoiceController"16
v28@0:8@"AVVoiceController"16i24
v36@0:8@"AVVoiceController"16i24d28
v32@0:8@"AVVoiceController"16@"NSError"24
v36@0:8@"AVVoiceController"16i24@"NSError"28
v40@0:8@"AVVoiceController"16@"AVVCAlertInformation"24@"NSError"32
v32@0:8@"AVVoiceController"16@"NSDictionary"24
v32@0:8@"AVVoiceController"16@"AVVCAudioBuffer"24
v28@0:8B16@"NSArray"20
v44@0:8@"AVVoiceController"16Q24B32@"NSError"36
v40@0:8@"AVVoiceController"16Q24q32
v40@0:8@"AVVoiceController"16Q24@"AVVCAudioBuffer"32
v32@0:8@"AVVoiceController"16Q24
v72@0:8@16Q24@32@40Q48Q56B64I68
v72@0:8@"CSAudioDecoder"16Q24@"NSData"32@"NSData"40Q48Q56B64I68
v40@0:8@"CSAudioFileReader"16@"NSData"24Q32
v36@0:8@"CSAudioFileReader"16B24@"NSError"28
v32@0:8@"CSAudioFileReader"16q24
v32@0:8Q16@"NSError"24
v32@0:8@"NSData"16Q24
v24@0:8@"CSRemoteRecordClient"16
v28@0:8@"CSUserSessionActiveMonitor"16B24
v24@0:8@"<CSAudioServerCrashEventProvidingDelegate>"16
v24@0:8@"<CSAudioSessionEventProvidingDelegate>"16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8Q16@24
B24@0:8Q16
B40@0:8q16Q24^@32
B40@0:8Q16Q24^@32
v28@0:8Q16B24
v40@0:8Q16B24@28B36
v60@0:8@16Q24@32Q40Q48i56
@28@0:8@16I24
B32@0:8q16@24
v36@0:8B16Q20@28
v32@0:8q16Q24
@32@0:8@16Q24
@"AVVoiceController"
{AudioBufferList="mNumberBuffers"I"mBuffers"[1{AudioBuffer="mNumberChannels"I"mDataByteSize"I"mData"^v}]}
^{AudioBufferList=I[1{AudioBuffer=II^v}]}
@"CSRemoteRecordClient"
@"CSAudioFileReader"
@"CSReusableBufferPool"
@"<CSAudioServerCrashEventProvidingDelegate>"
@"<CSAudioSessionEventProvidingDelegate>"
v36@0:8@16d24f32
v36@0:8@"CSSPGEndpointAnalyzer"16d24f32
v24@0:8@"CSSPGEndpointAnalyzer"16
v28@0:8B16@?20
@"<CSOpportuneSpeakListenerDelegate>"
@"CSSPGEndpointAnalyzer"
@"<CSAudioSessionProviding>"
@"CSPlainAudioFileWriter"
@24@0:8^{BTLocalDeviceImpl=}16
@24@0:8^{BTDeviceImpl=}16
v40@0:8^{BTDeviceImpl=}16I24i28I32i36
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
v24@0:8^{BTLocalDeviceImpl=}16
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
v40@0:8@"CSActivationXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v56@0:8@16Q24@32@40Q48
v44@0:8@"CSAudioInjectionEngine"16Q24B32@"NSError"36
v40@0:8@"CSAudioInjectionEngine"16Q24Q32
v56@0:8@"CSAudioInjectionEngine"16Q24@"NSData"32@"NSData"40Q48
v32@0:8@"CSAudioInjectionEngine"16@"CSAudioChunkForTV"24
@"CSSyncKeywordAnalyzerQuasar"
@"EARSyncPSRAudioProcessor"
@"OSDAnalyzer"
@"SLBertClassifier"
@"CSAudioInjectionEngine"
@56@0:8Q16@24@32@40Q48
v32@0:8Q16@?24
v32@0:8@"<CSAudioSessionInfoProviding>"16@"NSDictionary"24
@"<CSAudioSessionInfoProviding>"
v40@0:8Q16@24@?32
v40@0:8Q16@"NSDictionary"24@?<v@?@"NSError"@"CSSmartSiriVolumeEstimate">32
v48@0:8Q16@24Q32@?40
v48@0:8Q16@24@32@?40
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
@40@0:8@16Q24@32
v32@0:8^@16Q24
v24@0:8@"CSAssetManager"16
v32@0:8@"OSDAnalyzer"16@"OSDFeatures"24
v32@0:8@"OSDAnalyzer"16d24
v72@0:8d16Q24@32d40Q48d56@64
@"OSDFeatures"
@"_EAREndpointer"
@"CSServerEndpointFeatures"
@"NSDate"
{AudioStreamBasicDescription=dIIIIIIII}20@0:8i16
@"NSMapTable"
@"CSActivationEvent"
v32@0:8@"CSMediaPlayingMonitor"16q24
v52@0:8@16@24B32@36@44
v44@0:8@16B24@28@36
v36@0:8@16@24B32
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v52@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36@"NSString"44
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStopStreamOption"24Q32
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStopStreamOption"24@"NSString"32
v44@0:8@"CSSiriClientBehaviorMonitor"16B24@"NSString"28@"CSAudioRecordContext"36
v36@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStream"24B32
v24@0:8@"CSSiriClientBehaviorMonitor"16
@28@0:8f16@20
@40@0:8Q16@24Q32
@28@0:8f16@"CSAsset"20
@"CSSmartSiriVolumeEstimate"40@0:8Q16@"NSNumber"24Q32
v28@0:8I16q20
v52@0:8@16q24B32Q36Q44
f24@0:8q16
f24@0:8f16f20
f20@0:8f16
f36@0:8f16f20f24f28f32
f44@0:8f16f20f24f28f32f36f40
f28@0:8f16f20f24
^f24@0:8@16
{unique_ptr<SmartSiriVolume, std::default_delete<SmartSiriVolume>>="__ptr_"{__compressed_pair<SmartSiriVolume *, std::default_delete<SmartSiriVolume>>="__value_"^{SmartSiriVolume}}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
@"NSUserDefaults"
@"CSPolicy"
@"CSAudioInjectionDevice"
v48@0:8@16@24@32^v40
B24@0:8d16
@"<CSAudioFileReaderDelegate>"
v32@0:8@"<CSEndpointAnalyzerImpl>"16d24
v40@0:8@"<CSEndpointAnalyzerImpl>"16Q24Q32
@"<CSEndpointAnalyzerImpl>"
B32@0:8Q16Q24
v48@0:8@16@24@32Q40
v32@0:8@"CSSelfTriggerDetector"16@"NSDictionary"24
@"<CSMyriadSelfTriggerCoordinatorDelegate>"
B44@0:8@16f24@?28@?36
q24@0:8@16
@"<CSAudioInjectionEngineDelegate>"
@"CSKeywordAnalyzerNDEAPI"
v40@0:8@16q24Q32
v48@0:8@16q24q32Q40
v36@0:8@16q24i32
v44@0:8@16q24i32Q36
v32@0:8@"CMWakeGestureManager"16q24
v40@0:8@"CMWakeGestureManager"16q24Q32
v48@0:8@"CMWakeGestureManager"16q24q32Q40
v36@0:8@"CMWakeGestureManager"16q24i32
v44@0:8@"CMWakeGestureManager"16q24i32Q36
@"CMWakeGestureManager"
@"CSSmartSiriVolumeManager"
@"NSNumber"
v48@0:8@16@24^@32^@40
@44@0:8@16B24@28@36
@52@0:8@16B24@28@36@44
v40@0:8q16Q24@32
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"CESRModelProperties"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSArray"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16d24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechRecognition"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechPackage"24
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSDictionary"24@"NSError"32
v72@0:8@"CoreEmbeddedSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSArray"24@"AFSpeechInfoPackage"32
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechPackage"24@"AFSpeechInfoPackage"32
Vv32@0:8@16Q24
Vv24@0:8@16
Vv32@0:8Q16@24
Vv48@0:8@16@24@32@40
Vv32@0:8@16@24
Vv32@0:8@"NSString"16Q24
Vv24@0:8@"LBLocalSpeechRecognitionSettings"16
Vv32@0:8Q16@"NSString"24
Vv24@0:8@"NSString"16
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
@36@0:8@16@24B32
v36@0:8@16Q24B32
v40@0:8d16@24Q32
v52@0:8@16Q24d32B40@44
v48@0:8@16@24Q32@40
d24@0:8@16
@"CSAttSiriEndpointerNode"
@"CSAttSiriUresNode"
@"CSAttSiriSSRNode"
@"CoreEmbeddedSpeechRecognizer"
@"CSAudioProcessWaitingBuffer"
@"LBLocalSpeechRecognitionSettings"
@"CSEndpointDelayReporter"
@"CSAudioStreamRequest"
@"CSAudioStartStreamOption"
v40@0:8@"CSVoiceTriggerAwareZeroFilter"16@"NSData"24Q32
v40@0:8@"CSBeepCanceller"16@"NSData"24Q32
@24@0:8f16i20
v32@0:8f16B20@24
B20@0:8f16
@"<CSAudioPreprocessorDelegate>"
@"CSAudioSampleRateConverter"
@"CSVoiceTriggerAwareZeroFilter"
@"CSBeepCanceller"
@"CSAudioZeroCounter"
v52@0:8@16B24@28@36@44
v48@0:8@16Q24@32@40
v44@0:8B16@20@28@36
@68@0:8Q16@24@32@40@48B56@60
@"CSVoiceTriggerFirstPassMetrics"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
v52@0:8@16@24f32Q36Q44
v52@0:8@"CSAudioConverter"16@"NSArray"24f32Q36Q44
@"CSAudioConverter"
v68@0:8Q16d24d32d40@48B56@?60
v68@0:8Q16d24d32d40@"NSString"48B56@?<v@?BB@"NSArray">60
v32@0:8Q16@?<v@?B>24
v40@0:8@16B24f28@32
v40@0:8@"<CSAttSiriNode>"16B24f28@"NSString"32
v32@0:8@"SLProgressiveCheckerAnalyzer"16@"SLProgressiveCheckerResult"24
B20@0:8B16
v28@0:8f16Q20
@"SLProgressiveCheckerAnalyzer"
@"SLProgressiveCheckerResult"
v44@0:8@16@24B32@?36
v72@0:8@16@24@32B40Q44@52B60@64
@80@0:8@16@24@32B40Q44@52B60@64@?72
@"<CSADCompanionServiceProvider>"
v80@0:8Q16Q24q32@40@48@56@64@?72
v64@0:8Q16Q24@32@40@48@?56
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v80@0:8Q16Q24q32@"NSString"40@"NSUUID"48@"NSArray"56@"NSArray"64@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">72
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v28@0:8@"CSSiriEnabledMonitor"16B24
v24@0:8@"CSAttSiriAttendingTriggerEventInfo"16
v24@0:8@"CSAttSiriRequestContext"16
@132@0:8@16@24@32@40@48@56B64@68@76@84@92@100@108B116B120B124B128
@"CSAttSiriRCHandler"
@"CSAttSiriAsrNode"
@"CSAttSiriAudioSrcNode"
@"CSSiriClientBehaviorMonitor"
@"CSSiriEnabledMonitor"
@"CSAttSiriFlexKwdNode"
@"CSAttSiriAFTMNode"
@"CSAttSiriNLDAClassifierNode"
@"CSAttSiriSpeechDetectionNode"
@"CSAudioRouteChangeMonitor"
v32@0:8@"CSAssetController"16Q24
v48@0:8Q16Q24@32@?40
@"CSAssetDownloadingOption"
^{__IOHIDUserDevice=}
@"<CSVoiceTriggerAwareZeroFilterDelegate>"
@"CSAudioZeroFilter"
v36@0:8^f16Q24f32
v24@0:8@"EARClientSilenceFeatures"16
@20@0:8f16
@"<CSSPGEndpointAnalyzerDelegate>"
@"EARCaesuraSilencePosteriorGenerator"
@"<CSAudioMetricProviding>"
@"<CSActivateXPCConnectionDelegate>"
@32@0:8d16Q24
d24@0:8[80s]16
@"NSMutableData"
v36@0:8@16f24@28
v36@0:8@"<CSAttSiriNode>"16f24@"NSDictionary"28
v36@0:8@16f24f28B32
@"SLODLDProcessor"
@"SLBertClassifierResult"
@"CSKeywordAnalyzerNDAPI"
@40@0:8@16@24Q32
@36@0:8@16f24Q28
@52@0:8Q16@24@32f40Q44
@48@0:8Q16@24@32Q40
d20@0:8f16
@40@0:8d16d24d32
@48@0:8q16@24@32@40
B84@0:8@16f24{AudioStreamBasicDescription=dIIIIIIII}28@?68@?76
@72@0:8d16Q24@32q40@48@56d64
v32@0:8@"CSAlarmMonitor"16q24
v32@0:8@"CSTimerMonitor"16q24
v28@0:8@16f24
v28@0:8@"CSVolumeMonitor"16f24
v28@0:8@"CSAutomaticVolumeEnabledMonitor"16B24
@"<CSConnectionServiceDelegate>"
@"<CSSmartSiriVolumeProcessor>"
v28@0:8@"<CSAttSiriNode>"16f24
v32@0:8@"<CSAttSiriNode>"16Q24
v32@0:8f16f20@24
B32@0:8Q16@24
v48@0:8@16Q24@32@?40
v56@0:8Q16d24d32@40@?48
@"SLUresMitigator"
@"SLUresMitigatorIpFeats"
v40@0:8@"CSVoiceTriggerAssetHandler"16@"NSString"24@"CSAsset"32
v40@0:8@"CSActivationEventNotificationHandler"16@"CSActivationEvent"24@?<v@?B@"NSError">32
v32@0:8@"CSAudioProvider"16Q24
@"CSAudioTapProvider"
@"CSFallbackAudioSessionReleaseProvider"
@"<CSSpeechManagerDelegate>"
@"CSOpportuneSpeakListnerTestService"
@"CSPostBuildInstallService"
v64@0:8@16@24@32@40@48@?56
B32@0:8@16Q24
@"<CSXPCConnectionDelegate>"
@"CSAudioSessionProvidingProxy"
@"CSFallbackAudioSessionReleaseProvidingProxy"
@"CSAudioSessionInfoProvidingProxy"
@"CSAudioStreamProvidingProxy"
@"CSAudioAlertProvidingProxy"
@"CSAudioMeterProvidingProxy"
@"CSAudioMetricProvidingProxy"
v32@0:8d16@"CSEndpointerMetrics"24
Vv40@0:8@16@24@32
Vv48@0:8@16Q24@32d40
Vv48@0:8@16Q24B32B36@40
Vv48@0:8@16@24q32@40
Vv56@0:8@16Q24@32d40@48
Vv40@0:8@"NSString"16@"NSString"24@"NSArray"32
Vv32@0:8@"NSString"16@"AFSpeechPackage"24
Vv48@0:8@"NSString"16Q24@"AFSpeechPackage"32d40
Vv48@0:8@"NSString"16Q24B32B36@"NSArray"40
Vv48@0:8@"NSDictionary"16@"NSString"24q32@"NSError"40
Vv24@0:8@"AFVoiceIdScoreCard"16
Vv48@0:8@"NSString"16@"NSString"24@"NSArray"32@"AFSpeechInfoPackage"40
Vv56@0:8@"NSString"16Q24@"AFSpeechPackage"32d40@"AFSpeechInfoPackage"48
Vv40@0:8@"NSString"16@"AFSpeechPackage"24@"AFSpeechInfoPackage"32
@36@0:8@16B24B28B32
@"CSXPCListener"
@"CSActivationXPCListener"
@"CSVoiceIdXPCListener"
@"CSVoiceTriggerXPCListener"
@"CSAudioInjectionXPCListener"
@"CSAttSiriConnectionManager"
@"CSCoreSpeechServicesListener"
@"CSSpeechModelTrainingXPCManager"
@"CSBenchmarkXPCListener"
@"CSDarwinVoiceTriggerHandlerPool"
@"CESRXPCActivity"
@"CSXPCActivity"
v40@0:8Q16Q24Q32
B32@0:8@16@?24
B32@0:8d16^@24
@"<CSRemoteRecordClientDelegate>"
v24@0:8@"CSRemoteAssetManager"16
v24@0:8@?<v@?@>16
@56@0:8@16@24@32@40@48
@"NSXPCInterface"
v24@0:8@"<CSAudioSessionProviding>"16
v32@0:8@"<CSAudioSessionProviding>"16@"NSDictionary"24
v28@0:8@"<CSAudioSessionProviding>"16B24
@"CSManualDuckingHandler"
v40@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v44@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36
v32@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioStopStreamOption"24
v40@0:8@"<CSAudioAlertProviding>"16q24@"NSError"32
v36@0:8B16@20@28
@"<CSAudioAlertProviding>"
@"<CSVoiceTriggerXPCConnectionDelegate>"
v24@0:8@"CSFlexKeywordResult"16
@"CSFlexKeywordSpotter"
I24@0:8Q16
@"CSAudioRecordDeviceInfo"
v24@0:8f16f20
v28@0:8I16f20f24
@32@0:8q16Q24
v40@0:8@"CSKeywordAnalyzerNDEAPI"16@"CSKeywordAnalyzerNDEAPIResult"24Q32
@60@0:8@16@24Q32Q40@48B56
@"<CSPhraseNDEAPIScorerDelegate>"
@"CSShadowMicScoreCreator"
@28@0:8Q16I24
@24@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16
^{OpaqueAudioConverter=}16@0:8
v24@0:8^{OpaqueAudioConverter=}16
^{AudioBufferList=I[1{AudioBuffer=II^v}]}16@0:8
v24@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16
@"CSAudioInjectionFileOption"
v44@0:8@16B24Q28Q36
@"<CSAudioConverterDelegate>"
@20@0:8B16
@"CSPreventSystemSleepPowerAssertion"
@44@0:8@16@24B32Q36
@"<CSAudioMeterProviding>"
softlink:r:path:/System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus
softlink:r:path:/System/Library/Frameworks/CoreMotion.framework/CoreMotion
$@mcplsupoxeps
(knN
ffffff
@mcpl
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleIdentifier</key>
<string>com.apple.corespeechd</string>
<key>CFBundleName</key>
<string>corespeech daemon</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E233</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.corespeechd</string>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.assistant.analytics</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.assistant.dictation.prerecorded</key>
<true/>
<key>com.apple.assistant.multiuser.service</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.callkit</key>
<array>
<string>private-controller-api</string>
</array>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.CanRecordWithoutSessionActivation</key>
<true/>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.i-am-siri</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.corespeech.cat.xpc</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.hid.system.user-access-fast-path</key>
<true/>
<key>com.apple.homepodaccessorysettings.client</key>
<true/>
<key>com.apple.managedconfiguration.profiled.profile-list-read</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.phs</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrUaap</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrAssistant</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrHammer</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriDictationAssets</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAttentionAssets</string>
<string>com.apple.MobileAsset.AdBlockerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsTV</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsWatch</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsTV</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
<string>com.apple.MobileAsset.SpeakerRecognitionAssets</string>
<string>com.apple.MobileAsset.EmbeddedSpeech</string>
<string>com.apple.MobileAsset.VoiceTriggerHSAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerHSAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerHSAssetsWatch</string>
</array>
<key>com.apple.private.assets.bypass-asset-types-check</key>
<true/>
<key>com.apple.private.attentionawareness</key>
<true/>
<key>com.apple.private.attentionawareness.samplewhileabsent</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/CoreSpeech.framework/corespeechd</string>
</dict>
<key>com.apple.private.audio.dark-wake-audio</key>
<true/>
<key>com.apple.private.audio.hal.aop-audio.user-access</key>
<true/>
<key>com.apple.private.audio.interprocess-tap</key>
<true/>
<key>com.apple.private.audio.notification-wake-audio</key>
<true/>
<key>com.apple.private.audio.suppress-mic-indicator</key>
<true/>
<key>com.apple.private.avfoundation.capture.nonstandard-client.allow</key>
<true/>
<key>com.apple.private.avfoundation.capture.nonstandard-client.allowed-media-types</key>
<dict>
<key>AVMediaTypeMetadataObject</key>
<array>
<string>AVMetadataObjectTypeTrackedFaces</string>
</array>
</dict>
<key>com.apple.private.biome.client-identifier</key>
<string>com.apple.corespeechd</string>
<key>com.apple.private.biome.read-only</key>
<string>Dictation.UserEdit</string>
<key>com.apple.private.biome.read-write</key>
<string>Siri.VoiceTriggerStatistics</string>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.corespeech.xpc.remote</key>
<true/>
<key>com.apple.private.corespeechd.activation</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.medicaliddata</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homehubd</key>
<array>
<string>endpoint-read</string>
</array>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.iokit.darkwake-control</key>
<true/>
<key>com.apple.private.mediaexperience.allowrecordingduringcall</key>
<true/>
<key>com.apple.private.mediasafetynet.exception.announcemessage</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.siri.activation</key>
<true/>
<key>com.apple.private.siri.invoke</key>
<true/>
<key>com.apple.private.speech-model-training</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rootless.storage.CoreSpeech</key>
<true/>
<key>com.apple.runningboard.assertions.appshack</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/MobileAsset/</string>
<string>/Library/Audio/Tunings/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Caches/com.apple.corespeech.cat.xpc/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/VoiceTrigger/</string>
<string>/Library/Logs/CrashReporter/Assistant/</string>
<string>/Library/Logs/CrashReporter/VoiceTrigger/</string>
<string>/Library/Logs/CrashReporter/ssr/</string>
<string>/Library/Logs/CrashReporter/CoreSpeech/</string>
<string>/Library/Logs/CrashReporter/RTS/</string>
<string>/Library/Caches/VoiceTrigger/</string>
<string>/Library/Caches/com.apple.corespeechd/</string>
<string>/Documents/Logs/CoreSpeech/</string>
<string>/Library/Assistant/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>AppleSPUHIDDriverUserClient</string>
<string>IOHIDEventServiceFastPathUserClient</string>
<string>AGXDeviceUserClient</string>
<string>IOSurfaceRootUserClient</string>
<string>AGXSharedUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>H11ANEInDirectPathClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.sirittsd</string>
<string>com.apple.carousel.backlightxpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.mobileasset.autoasset</string>
<string>com.apple.assistant.settings</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.audio.voicetrigger.xpc</string>
<string>com.apple.audio.AudioComponentRegistrar</string>
<string>com.apple.voicetrigger.voicetriggerservice</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.server.bluetooth</string>
<string>com.apple.SystemConfiguration.NetworkInformation</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.coremedia.carplayavvc.xpc</string>
<string>com.apple.iohideventsystem</string>
<string>com.apple.siri.activation</string>
<string>com.apple.siri.activation.horseman</string>
<string>com.apple.siri.activation.blackbird</string>
<string>com.apple.assistant.analytics</string>
<string>com.apple.audio.SystemSoundServer-iOS</string>
<string>com.apple.BTLEAudioController.xpc</string>
<string>com.apple.healthd.server</string>
<string>com.apple.SystemConfiguration.configd</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.backlightd</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.homekit.audio.xpc</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.nsurlsessiond.NSURLSessionProxyService</string>
<string>com.apple.nsurlstorage-cache</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.mediasafetynet.exceptions</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.corespeech.mockremoteplugin.xpc</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.assistant.multiuser.service</string>
<string>com.apple.callkit.callcontrollerhost</string>
<string>com.apple.siri.morphunassetsupdaterd</string>
<string>com.apple.homehubd.manage</string>
<string>com.apple.AttentionAwareness</string>
<string>com.apple.corespeech.speechmodeltraining.xpc</string>
<string>com.apple.siri.analytics.assistant</string>
<string>com.apple.remoted</string>
<string>com.apple.PairingManager</string>
<string>com.apple.biome.access.system</string>
<string>com.apple.biome.access.user</string>
<string>com.apple.homepodaccessorysettings.server</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.assistant</string>
<string>com.apple.nano</string>
<string>com.apple.raisetospeak</string>
<string>com.apple.assistant.backedup</string>
<string>com.apple.assistant.support</string>
<string>com.apple.CoreMotion</string>
<string>com.apple.airplay</string>
<string>com.apple.mediaremote</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.niservices</string>
<string>com.apple.voicetrigger</string>
<string>com.apple.voicetrigger.notbackedup</string>
<string>com.apple.avfoundation.avvc</string>
<string>com.apple.audio.virtualaudio</string>
<string>com.apple.speakerrecognition</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.raisetospeak</string>
</array>
<key>com.apple.security.exception.sysctl.read-only</key>
<array>
<string>net.routetable.0.0.3.0</string>
</array>
<key>com.apple.security.ts.ane-client</key>
<true/>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.opengl-or-metal</key>
<true/>
<key>com.apple.security.ts.play-audio</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.power-assertions</key>
<true/>
<key>com.apple.security.ts.read-any-bundle</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.corespeechd</string>
<key>com.apple.sensorkit.writer.allow</key>
<array>
<string>com.apple.SensorKit.speechMetrics.siri</string>
<string>com.apple.SensorKit.speechEmotion.siri</string>
<string>com.apple.SensorKit.soundDetection.siri</string>
</array>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.embeddedspeech</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>com.apple.systemstatus.publisher.domains</key>
<array>
<string>media</string>
</array>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
</array>
<key>com.apple.trial.client</key>
<array>
<string>200</string>
<string>322</string>
<string>404</string>
<string>372</string>
<string>401</string>
<string>751</string>
<string>756</string>
<string>757</string>
</array>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.corespeech</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
application-identifier
com.apple.corespeechd0"
com.apple.airplay.carplayavvc
com.apple.assistant.analytics
com.apple.assistant.client
0.)com.apple.assistant.dictation.prerecorded
0*%com.apple.assistant.multiuser.service
com.apple.assistant.settings
050com.apple.avfoundation.allow-system-wide-context
083com.apple.avfoundation.allows-access-to-device-list
com.apple.bluetooth.system
com.apple.callkit0
private-controller-api0*%com.apple.coreaudio.CanRecordPastData
0:5com.apple.coreaudio.CanRecordWithoutSessionActivation
com.apple.coreaudio.app-tap
com.apple.coreaudio.i-am-siri
0.)com.apple.coreaudio.private.SystemWideTap
0.)com.apple.coreaudio.register-internal-aus
com.apple.coreduetd.context
com.apple.corespeech.cat.xpc
0,'com.apple.frontboard.launchapplications
0/*com.apple.hid.system.user-access-fast-path
0.)com.apple.homepodaccessorysettings.client
0>9com.apple.managedconfiguration.profiled.profile-list-read
0.)com.apple.nano.nanoregistry.generalaccess
0MHcom.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr
0RMcom.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis
0MHcom.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.phs
com.apple.private.ShazamKit
4/com.apple.private.assets.accessible-asset-types0
9com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrUaap>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrAssistant;com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrHammer4com.apple.MobileAsset.Trial.Siri.SiriDictationAssetsAcom.apple.MobileAsset.Trial.Siri.SiriUnderstandingAttentionAssets%com.apple.MobileAsset.AdBlockerAssets(com.apple.MobileAsset.VoiceTriggerAssets,com.apple.MobileAsset.VoiceTriggerAssetsIPad-com.apple.MobileAsset.VoiceTriggerAssetsWatch-com.apple.MobileAsset.VoiceTriggerAssetsMarsh*com.apple.MobileAsset.VoiceTriggerAssetsTV*com.apple.MobileAsset.SpeechEndpointAssets/com.apple.MobileAsset.SpeechEndpointAssetsWatch,com.apple.MobileAsset.SpeechEndpointAssetsTV(com.apple.MobileAsset.RaiseToSpeakAssets+com.apple.MobileAsset.VoiceTriggerAssetsMac.com.apple.MobileAsset.SpeakerRecognitionAssets$com.apple.MobileAsset.EmbeddedSpeech*com.apple.MobileAsset.VoiceTriggerHSAssets.com.apple.MobileAsset.VoiceTriggerHSAssetsIPad/com.apple.MobileAsset.VoiceTriggerHSAssetsWatch061com.apple.private.assets.bypass-asset-types-check
0)$com.apple.private.attentionawareness
0;6com.apple.private.attentionawareness.samplewhileabsent
9com.apple.private.attribution.implicitly-assumed-identity
[0
type
path0K
valueB/System/Library/PrivateFrameworks/CoreSpeech.framework/corespeechd0,'com.apple.private.audio.dark-wake-audio
061com.apple.private.audio.hal.aop-audio.user-access
0-(com.apple.private.audio.interprocess-tap
04/com.apple.private.audio.notification-wake-audio
03.com.apple.private.audio.suppress-mic-indicator
0D?com.apple.private.avfoundation.capture.nonstandard-client.allow
Mcom.apple.private.avfoundation.capture.nonstandard-client.allowed-media-types
A0?
AVMediaTypeMetadataObject0" AVMetadataObjectTypeTrackedFaces0B)com.apple.private.biome.client-identifier
com.apple.corespeechd07!com.apple.private.biome.read-only
Dictation.UserEdit0A"com.apple.private.biome.read-write
Siri.VoiceTriggerStatistics0 
com.apple.private.bmk.allow
0:5com.apple.private.coreaudio.viewInterruptorName.allow
0,'com.apple.private.corespeech.xpc.remote
0-(com.apple.private.corespeechd.activation
com.apple.private.healthkit
0.)com.apple.private.healthkit.medicaliddata
0/*com.apple.private.hid.client.event-monitor
com.apple.private.homehubd0
endpoint-read04/com.apple.private.homekit.siri-audio-connection
0-(com.apple.private.iokit.darkwake-control
0?:com.apple.private.mediaexperience.allowrecordingduringcall
0?:com.apple.private.mediasafetynet.exception.announcemessage
com.apple.private.mobiletimerd
0&!com.apple.private.siri.activation
com.apple.private.siri.invoke
0,'com.apple.private.speech-model-training
com.apple.private.tcc.allow0*
kTCCServiceMicrophone
kTCCServiceCamera0=)com.apple.private.tcc.manager.access.read0
kTCCServiceAll0% com.apple.proactive.eventtracker
0*%com.apple.rootless.storage.CoreSpeech
0/*com.apple.runningboard.assertions.appshack
0r:com.apple.security.exception.files.absolute-path.read-only04
/private/var/MobileAsset/
/Library/Audio/Tunings/0r?com.apple.security.exception.files.home-relative-path.read-only0/-/Library/Caches/com.apple.corespeech.cat.xpc/0
@com.apple.security.exception.files.home-relative-path.read-write0
/Library/VoiceTrigger/&/Library/Logs/CrashReporter/Assistant/)/Library/Logs/CrashReporter/VoiceTrigger/ /Library/Logs/CrashReporter/ssr/'/Library/Logs/CrashReporter/CoreSpeech/ /Library/Logs/CrashReporter/RTS/
/Library/Caches/VoiceTrigger/&/Library/Caches/com.apple.corespeechd/
/Documents/Logs/CoreSpeech/
/Library/Assistant/0
4com.apple.security.exception.iokit-user-client-class0
AppleSPUHIDDriverUserClient#IOHIDEventServiceFastPathUserClient
AGXDeviceUserClient
IOSurfaceRootUserClient
AGXSharedUserClient
AGXCommandQueue
AGXDevice
H11ANEInDirectPathClient0
[4com.apple.security.exception.mach-lookup.global-name0
!Kcom.apple.telephonyutilities.callservicesdaemon.conversationprovidermanagerCcom.apple.telephonyutilities.callservicesdaemon.callprovidermanager@com.apple.telephonyutilities.callservicesdaemon.callcapabilitiesCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerCcom.apple.telephonyutilities.callservicesdaemon.conversationmanager
com.apple.sirittsd
com.apple.carousel.backlightxpc3com.apple.usernotifications.usernotificationservice&com.apple.frontboard.systemappservices
com.apple.mobileasset.autoasset
com.apple.assistant.settings!com.apple.MobileTimer.timerserver!com.apple.MobileTimer.alarmserver com.apple.audio.voicetrigger.xpc'com.apple.audio.AudioComponentRegistrar*com.apple.voicetrigger.voicetriggerservice com.apple.audio.AudioQueueServer
com.apple.server.bluetooth0com.apple.SystemConfiguration.NetworkInformation
com.apple.mediaremoted.xpc#com.apple.coremedia.carplayavvc.xpc
com.apple.iohideventsystem
com.apple.siri.activation"com.apple.siri.activation.horseman#com.apple.siri.activation.blackbird
com.apple.assistant.analytics%com.apple.audio.SystemSoundServer-iOS!com.apple.BTLEAudioController.xpc
com.apple.healthd.server%com.apple.SystemConfiguration.configd'com.apple.managedconfiguration.profiled com.apple.locationd.registration
com.apple.backlightd%com.apple.carousel.wakegesturemonitor
com.apple.homekit.audio.xpc
com.apple.SBUserNotification0com.apple.nsurlsessiond.NSURLSessionProxyService
com.apple.nsurlstorage-cache
com.apple.commcenter.xpc#com.apple.mediasafetynet.exceptions
com.apple.symptom_diagnostics)com.apple.corespeech.mockremoteplugin.xpc*com.apple.systemstatus.activityattribution%com.apple.assistant.multiuser.service$com.apple.callkit.callcontrollerhost$com.apple.siri.morphunassetsupdaterd
com.apple.homehubd.manage
com.apple.AttentionAwareness,com.apple.corespeech.speechmodeltraining.xpc"com.apple.siri.analytics.assistant
com.apple.remoted
com.apple.PairingManager
com.apple.biome.access.system
com.apple.biome.access.user)com.apple.homepodaccessorysettings.server0
8com.apple.security.exception.shared-preference.read-only0
com.apple.assistant
com.apple.nano
com.apple.raisetospeak
com.apple.assistant.backedup
com.apple.assistant.support
com.apple.CoreMotion
com.apple.airplay
com.apple.mediaremote0
+9com.apple.security.exception.shared-preference.read-write0
com.apple.niservices
com.apple.voicetrigger"com.apple.voicetrigger.notbackedup
com.apple.avfoundation.avvc
com.apple.audio.virtualaudio
com.apple.speakerrecognition
com.apple.coreaudio
com.apple.coremedia
com.apple.raisetospeak0I-com.apple.security.exception.sysctl.read-only0
net.routetable.0.0.3.00% com.apple.security.ts.ane-client
0/*com.apple.security.ts.mobile-keybag-access
0*%com.apple.security.ts.opengl-or-metal
0% com.apple.security.ts.play-audio
0% com.apple.security.ts.play-media
0+&com.apple.security.ts.power-assertions
0*%com.apple.security.ts.read-any-bundle
com.apple.security.ts.tmpdir
com.apple.corespeechd0
 com.apple.sensorkit.writer.allow0y&com.apple.SensorKit.speechMetrics.siri&com.apple.SensorKit.speechEmotion.siri'com.apple.SensorKit.soundDetection.siri0
com.apple.siri.activation
com.apple.siri.embeddedspeech
com.apple.siri.external_request
0/*com.apple.systemstatus.activityattribution
03(com.apple.systemstatus.publisher.domains0
media0S*com.apple.telephonyutilities.callservicesd0%access-calls
access-call-providers0B
com.apple.trial.client0(
200
322
404
372
401
751
756
7570/*com.apple.voicetrigger.voicetriggerservice
keychain-access-groups0
com.apple.corespeech0
platform-application
seatbelt-profiles0
temporary-sandbox
xeps
supo
33s@
fff?
333333
333333
#)/5;AGM
mcplsupoxeps
(knN
Affffff
@mcpl
 &,28
SSVCADBToTTSPreTransitionOffset
.cxx_destruct
SSVLKFSTTSMappingInputRangeHigh
CSAdBlockerAssetDownloadMonitor:didInstallNewAsset:assetProviderType:
SSVNoiseTTSMappingInputRangeLow
CSAlarmMonitor:didReceiveAlarmChanged:
T@"CSAudioInjectionXPCListener",&,N,V_audioInjectionXpcListener
CSAssetController:didDownloadNewAssetForType:
T@"CSAudioStreamProvidingProxy",&,N,V_audioStreamProvidingProxy
CSAudioRouteChangeMonitor:didReceiveAudioRouteChangeEvent:
T@"CSPolicy",&,N,V_enablePolicy
CSAudioServerCrashMonitorDidReceiveServerRestart:
T@"CSTrialAssetDownloadMonitor",&,N,V_trialAssetDownloadMonitor
CSBluetoothWirelessSplitterMonitor:didReceiveSplitterStateChange:shouldDisableSpeakerVerificationInSplitterMode:
T@"NSArray",&,N,V_requiredNodes
CSEventMonitorDidReceiveEvent:
T@"NSHashTable",&,N,V_observers
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
T@"NSMapTable",&,N,V_nodesCache
CSMyriadSelfTriggerCoordinator:didGenerateMyriadPHashForSelfTrigger:
T@"NSString",&,N,V_overridePath
CSPhoneCallStateMonitor:didRecievePhoneCallStateChange:
T@"NSString",R,N,V_assetVersion
CSRemoteAssetManagerDidDownloadNewAsset:
T@"NSString",R,N,V_debugLogPath
CSSiriEnabledMonitor:didReceiveEnabled:
T@"NSUUID",&,N,V_turnIdentifier
CSSoftwareUpdateCheckingMonitor:didReceiveStateChanged:
TB,N,V_canProcessCurrentRequest
CSSpeakerRecognitionAssetMetaUpdateMonitor:didReceiveNewSpeakerRecognitionAssetMetaData:
TB,N,V_epResult
CSSpringboardStartMonitor:didReceiveStarted:
TB,N,V_permanentOffsetIsEnabled
CSTimerMonitor:didReceiveTimerChanged:
TQ,N,V_audioPacketDeliveryCount
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
TQ,N,V_dataBufferPositionNDEAPI
CSVoiceTriggerFirstPassMetricsWithFirstPassInfoGeneratedTime:firstPassInfoProcessedTime:
TQ,N,V_voiceTriggerFireMachTime
CSVoiceTriggerXPCServiceProxy:bypassPhraseSpotter:
Td,N,V_lastEndpointHintDuration
CSVolumeMonitor:didReceiveAlarmVolumeChanged:
_activationInfo
CSXPCClient:didDisconnect:
_allowVocabList
JSONObjectWithData:options:error:
_attendingState
RTModelWithFallbackLanguage:
_audioProviders
SSVCADBToTTSMaximumOutput
_bufferDuration
SSVCADBToTTSPostTransitionDC
_calculateNumberOfVoicingFrames
SSVCADBToTTSPostTransitionOffset
_circularBuffer
SSVCADBToTTSTransitionPoint
_clampedSFLatencyMsForClientLag
SSVCADefaultMusicStrength
_closeAudioFile
SSVCADefaultSpeechStrength
_createDirectoryIfDoesNotExist:
SSVCADeviceDefaultASVOffMinTTSVolume
_device
SSVCADeviceDefaultMicSensitivityOffset
_deviceMapTable
SSVCADeviceSimpleASVOffMinTTSVolume
_encoderBitRate
SSVCADeviceSimpleMaxTTSVolume
_endpointerType
SSVCADeviceSimpleMicSensitivityOffset
_fetchRecognizerLanguageWithSiriLanguage:UILanguage:taskString:
SSVCADeviceSimpleMinTargetDB
_gestureManager
SSVCADeviceSimpleOutputMinTargetDB
_historicalBufferRequestStreams
SSVCADeviceSimplePreTriggerSilenceSampleCount
_hostTimeBuffer
SSVCADistanceModelConfidenceThreshold
_initWithFirstPassInfoGeneratedTime:firstPassInfoProcessedTime:
SSVCADistanceResultsBufferSize
_interleavedABL
SSVCADspCoefsCount
_isRemoteDevice
SSVCAExponentialDistanceHistoryDegradationFactor
_isSiriClientConsideredAsRecord
SSVCAListenPollingIntervalAtStartInSeconds
_isSpeechDetectionDevicePresent
SSVCAMaxTTSSystemVolume
_lastInputFeats
SSVCAMaximumLinearSoundLevel
_logLRNNFailMsg
SSVCAMinimumDistanceUpdateWaitPeriodSeconds
_needsBoost12dB
SSVCAMusicHistoricalSamplesInSeconds
_notifyObserver:isSpeakerMuted:
SSVCANoiseActivityCountThreshold
_notifyXPCDisconnectionToProxy:
SSVCANoiseActivityThreshold
_phoneCallState
SSVCASignalToSigmoidMusicDilationFactorDeviceDefault
_recordingToken
SSVCASignalToSigmoidMusicHOffsetDeviceDefault
_rtsTriggerInfo
SSVCASignalToSigmoidMusicSteepnessDeviceDefault
_secondPassAudioStreamStartTime
SSVCASignalToSigmoidMusicVOffsetDeviceDefault
_setLocalSpeechRecognizerState:
SSVCASignalToSigmoidMusicVSpreadDeviceDefault
_shadowMicScore
SSVCASignalToSigmoidNoiseDilationFactor
_shouldRunMitigationForContext:
SSVCASignalToSigmoidNoiseSteepness
_signalEstimate
SSVCASignalToSigmoidNoiseVSpread
_sourceStringFromPreheatSource:
SSVCASignalToSigmoidSpeechHOffset
_startStampleId
SSVCASignalToSigmoidSpeechVOffset
_stopMonitoring
SSVCASmartSiriVolumeSyncedMetricLogsToRetain
_streamHandleId
SSVCASpeakerDistanceFarBoostFactor
_turnIdentifier
SSVCASpeakerDistanceNearBoostFactor
_userIntentTime
SSVCAUserIntentPermanentOffsetFactorLowerBound
_volumeEstimate
SSVCAUserIntentValidForSeconds
activateAudioSessionWithReason:dynamicAttribute:bundleID:error:
SSVCAUserIntentVolumeIncreaseFactor
addAudioPacket:
SSVCAVoiceTriggerInitialSilenceDurationSeconds
alertPlaybackFinishTimeoutToken
SSVDefaultDistanceChannelCount
analyzedSamples
SSVDefaultNoiseChannelCount
applicationName
SSVEnergyBufferSize
asrNode
SSVLKFSLowerPercentile
audioChunkToEndFrom:channelIdx:
SSVLKFSTTSMappingInputRangeLow
audioFileWriter
SSVLKFSTimeConstant
audioStreamType
SSVNoiseLevelChannelBitset
baseDir
SSVNoiseMicSensitivityOffset
buildPhoneticMatchWithLanguage:saveIntermediateFsts:completion:
SSVNoiseTTSMappingInputRangeHigh
completionBlock
SSVNoiseTTSMappingOutputRangeLow
connectedDevice
SSVNoiseUpperPercentile
containsString:
SSVParameterDirectionary
SSVTTSVolumeUpperLimitDB
currentOEPAsset
SSVUserOffsetInputRangeLow
dataWithLength:
SSVUserOffsetOutputRangeLow
deviceIsInSleep
T@"<CSADCompanionServiceProvider>",W,N,V_adCompanionServiceProvider
enabled
T@"<CSAttSiriSessionStateDelegate>",R,W,N,V_delegate
T@"<CSAudioAlertProvidingDelegate>",W,N,V_alertDelegate
firstAudioSampleSensorTimestamp
T@"<CSAudioConverterDelegate>",W,V_delegate
firstPktLatency
T@"<CSAudioFileWriter>",&,N,V_leadingUtteranceLogger
getBTLocalDeviceWithCompletion:
T@"<CSAudioMeterProviding>",W,N,V_audioMeterProvider
getBytes:range:
T@"<CSAudioPreprocessorDelegate>",W,N,V_delegate
initForSidekick
T@"<CSAudioServerCrashEventProvidingDelegate>",W,N,V_crashEventDelegate
initWithFormat:
T@"<CSAudioSessionInfoProviding>",W,N,V_audioSessionInfoProvider
initWithMasterAudioStream:name:
T@"<CSAudioSessionProvidingDelegate>",W,N,V_audioSessionProvidingDelegate
initWithString:
T@"<CSAudioStreamProviding>",&,N,V_audioStreamProvider
injectionCompletionNotifyBlocks
T@"<CSAudioStreamProviding>",W,N,V_streamProvider
interpretations
T@"<CSAudioStreamProvidingDelegate>",W,N,V_delegate
isActiveSession
T@"<CSConnectionServiceDelegate>",W,N,V_delegate
isBluetoothAudioDeviceConnected
T@"<CSEndpointAnalyzerDelegate>",W,N,V_delegate
isFirstUnlocked
T@"<CSEndpointAnalyzerDelegate>",W,N,Vdelegate
isNarrowBandWithStreamHandleId:
T@"<CSEndpointAnalyzerImpl>",&,N,V_nnvadEndpointer
isProxy
T@"<CSEndpointAnalyzerImplDelegate>",W,N
isRecordContextHearstDoubleTap:
T@"<CSEndpointAnalyzerImplDelegate>",W,N,V_implDelegate
isRequestFromSpokenNotification
T@"<CSFlexKeywordSpotterDelegate>",W,N,Vdelegate
isUIButtonPress
T@"<CSOpportuneSpeakListenerDelegate>",W,N,V_delegate
kSSVCAUserIntentValidForSeconds
T@"<CSRemoteRecordClientDelegate>",W,N,V_delegate
keywordDetectorDidDetectKeyword
T@"<CSSecondPassProgressProviding>",W,N,V_builtInSeconPassProgressProvider
localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:
T@"<CSSmartSiriVolumeProcessor>",&,N,V_smartSiriVolume
lowercaseString
T@"<CSStateMachineDelegate>",W,N,V_delegate
metrics
T@"<CSVoiceTriggerAssetChangeDelegate>",W,N,V_delegate
mitigationModelDefaultAFTMScore
T@"<CSVoiceTriggerDelegate>",W,N,V_delegate
newWithBuilder:
T@"<CSXPCClientDelegate>",W,N,V_delegate
notifyObserver:
T@"AFNotifyObserver",&,N,V_siriStateObserver
numberWithBool:
T@"CESRXPCActivity",&,N,V_cesrXPCActvity
opaqueSessionID
T@"CSActivationEvent",&,N,V_pendingActivationEvent
osdNode
T@"CSAsset",&,N,V_asset
outputs
T@"CSAsset",&,N,V_currentHEPAsset
packets
T@"CSAsset",&,N,V_mitigationAsset
phrases
T@"CSAsset",&,N,V_vtAsset
preheat
T@"CSAssetManager",&,N,V_assetManager
protocolVersion
T@"CSAttSiriAsrNode",&,N,V_asrNode
registerPeriodicPreheatActivity
T@"CSAttSiriCachedEndpointInfo",&,N,V_cachedEndpointerInfo
rejectionMHUUID
T@"CSAttSiriController",&,N,V_attSiriController
remoteDeviceUID
T@"CSAttSiriController",W,N,V_attSiriController
removeReceiver:
T@"CSAttSiriEndpointerNode",W,N,SregisterEndpointerNode:,V_endpointerNode
reportMicUsage:
T@"CSAttSiriFlexKwdNode",&,N,V_flexKwdNode
T@"CSAttSiriNLDAClassifierNode",W,N,SregisterNLDAClassifierNode:,V_nldaClassifierNode
secondPassAssetLoadCompleteTime
T@"CSAttSiriOSDNode",W,N,SregisterOSDNode:,V_osdNode
sessionDelegate
T@"CSAttSiriRequestContext",&,N,V_context
setAccessibleEndpointerEnabled:
T@"CSAttSiriSSRNode",&,N,V_ssrNode
setAllowListWordCountThreshold:
T@"CSAttSiriSpeechDetectionNode",&,N,V_speechDetectionNode
setAlwaysOnVoiceTriggerEnabled:
T@"CSAttSiriUresNode",W,N,SregisterUresNode:,V_uresNode
setAudioBuffer:
T@"CSAudioAlertProvidingProxy",&,N,V_audioAlertProvidingProxy
setAudioStream:
T@"CSAudioCircularBuffer",&,N,V_circularBuffer
setBuiltInVoiceTriggerMetaData:
T@"CSAudioConverter",&,N,V_encoder
setCanActivate:
T@"CSAudioInjectionDevice",&,N,V_bundleTvRemote
setConnections:
T@"CSAudioInjectionEngine",&,N,V_audioInjectionEngine
setDidActivate:
T@"CSAudioInjectionEngine",W,N,V_injectionEngine
setEndWaitTime:
T@"CSAudioMeterProvidingProxy",&,N,V_audioMeterProvidingProxy
setFlexKwdNode:
T@"CSAudioProcessWaitingBuffer",&,N,V_audioWaitingBuffer
setInputOrigin:
T@"CSAudioRecordContext",&,N,V_context
setIsAttending:
T@"CSAudioRecordContext",&,N,V_latestContext
setIsListening:
T@"CSAudioRecordContext",&,N,V_recordCtx
setIsStreaming:
T@"CSAudioRecordDeviceIndicator",&,N,V_recordDeviceIndicator
setLocalDevice:
T@"CSAudioRecorder",&,N,V_audioRecorder
setNumChannels:
T@"CSAudioSampleRateConverter",&,N,V_upsampler
setOsdAnalyzer:
T@"CSAudioSessionProvidingProxy",&,N,V_audioSessionProvidingProxy
setPayloadData:
T@"CSAudioStartStreamOption",&,N,V_siriClientAudioStartStreamOption
setRecordQueue:
T@"CSAudioStream",&,N,V_siriClientStream
setSecondChanceHotTillMachTime:
T@"CSAudioStreamHolding",&,N,V_audioStreamHolding
setServerFeaturesWarmupLatency:
T@"CSAudioTapProvider",&,N,V_audioTapProvider
setSsrListener:
T@"CSAudioZeroCounter",&,N,V_zeroCounter
setStreamState:
T@"CSBeepCanceller",&,N,V_beepCanceller
setSupportsSSR:
T@"CSConnectionListener",&,N,V_attSiriSvcListener
setTransitions:
T@"CSConnectionListener",&,N,V_localSRBridgeListener
setUseCustomizedRecordSettings:
T@"CSConnectionListener",&,N,V_rcProcessingListener
setUserSpeakingStartedTimeInMs:
T@"CSCoreSpeechServicesListener",&,N,V_corespeechServiceListener
setXpcListener:
T@"CSEndpointDelayReporter",&,N,V_endpointDelayReporter
setupConnection
T@"CSEndpointerMetrics",&,N,V_endPointerMetrics
sharedUserInfos
T@"CSFallbackAudioSessionReleaseProvider",&,N,V_fallbackAudioSessionReleaseProvider
siriSessionUUID
T@"CSFirstUnlockMonitor",&,N,V_firstUnlockMonitor
splitterEnabled
T@"CSGibraltarVoiceTriggerHandler",&,N,V_gibraltarVoiceTriggerHandler
startMonitoring
T@"CSKeywordAnalyzerNDEAPI",&,N,V_keywordAnalyzer
stopAudioStream
T@"CSManualDuckingHandler",&,N,V_manualDuckingHandler
streams
T@"CSOSTransaction",&,N,V_asrResultDeliveryTransaction
stringByAppendingPathExtension:
T@"CSOSTransaction",&,N,V_osTransaction
supportRemoteDarwinVoiceTrigger
T@"CSOpportuneSpeakListnerTestService",&,N,V_opportuneSpeakListnerTestService
trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:
T@"CSPlainAudioFileWriter",&,N,V_audioFileWriter
T@"CSPreMyriadVoiceTriggerMetaData",&,N,V_builtInVoiceTriggerMetaData
updateEndpointerDelayedTrigger:
T@"CSSPGEndpointAnalyzer",&,N,V_spgEndpointAnalyzer
wakeGestureManager:didUpdateWakeGesture:orientation:detectedAt:
.cxx_construct
SSVCAHistoricalVolumeBufferSize
CSActivationXPCConnectionReceivedClientError:clientError:client:
SSVLKFSTTSMappingOutputRangeLow
CSAdBlockerMetaUpdateMonitor:didReceiveNewAdBlockerAssetMetaData:
T@"CSAsset",&,N
CSAlwaysOnProcessorStateMonitor:didReceiveStateChange:
T@"CSAudioMetricProvidingProxy",&,N,V_audioMetricProvidingProxy
CSAssetManagerDidDownloadNewAsset:
T@"CSLanguageCodeUpdateMonitor",&,N,V_languageCodeUpdateMonitor
CSAudioServerCrashMonitorDidReceiveServerCrash:
T@"CSSiriClientBehaviorMonitor",&,N,V_siriClientBehaviorMonitor
CSAutomaticVolumeEnabledMonitor:didReceiveEnabled:
T@"NSArray",&,N
CSBuiltinSpeakerStateMonitor:didReceiveBuiltinSpeakerStateChange:
T@"NSArray",R,N
CSFirstUnlockMonitor:didReceiveFirstUnlock:
T@"NSHashTable",&,N,V_receivers
CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:
T@"NSObject<OS_xpc_object>",R,N
CSNetworkAvailabilityMonitor:didReceiveNetworkAvailabilityChanged:
T@"NSString",R,C,N,V_deviceName
CSPhraseSpotterEnabledMonitor:didReceiveEnabled:
T@"NSString",R,N,V_buildVersion
CSSiriAssertionMonitor:didReceiveEnabled:
T@"NSUUID",&,N,V_recordingToken
CSSiriRestrictionOnLockScreenMonitor:didReceiveRestrictionChanged:
TB,N,V_cachedMitigationDecision
CSSpeakerRecognitionAssetDownloadMonitor:didInstallNewAsset:assetProviderType:
TB,N,V_didReceiveServerFeatures
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
TB,N,V_makeStandaloneMitigation
CSSystemUserActivityMonitor:activeStateChanged:
TB,N,V_requiresHistoricalBuffer
CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:
TQ,N,V_currentRequestSampleRate
CSVoiceTriggerEnabledMonitor:didReceiveEnabled:
TQ,N,V_lastForwardedSampleCount
CSVoiceTriggerXPCConnectionReceivedClientError:clientError:client:
Td,N,V_RMSScore
CSVoiceTriggerXPCServiceProxy:bypassRaiseToSpeak:
Tf,N,V_currentMaximumBufferSize
CSVolumeMonitor:didReceiveMusicVolumeChanged:
_allowAdBlockerAssetDownloading
CSXPCConnectionReceivedClientError:clientError:client:
_assertionState
RMSScore
_audioFeedTimer
SSVCAAnnouncementStatusFetchTimeoutMs
_audioSessionInfoProvidingProxy
SSVCADBToTTSMinimumOutput
_bundleTvRemote
SSVCADBToTTSPostTransitionMultiplier
_cesrXPCActvity
SSVCADBToTTSPreTransitionMultiplier
_circularBufferStartSampleCount
SSVCADecibelToLinearLogBase
_clearPendingRemoraVoiceTrigger
SSVCADefaultOutputTTSVolume
_convertDB2Mag:
SSVCADefaultZeroFloatingPointValue
_defaultOutASBD
SSVCADeviceDefaultMaxTTSVolume
_deviceCategory
SSVCADeviceDefaultMinTTSVolume
_digest
SSVCADeviceSimpleDBToSystemVolSlope
_endpointerNode
SSVCADeviceSimpleMaxTargetDB
_exportedObject
SSVCADeviceSimpleMinTTSVolume
SSVCADeviceSimpleOutputMaxTargetDB
_handleDeactivateAudioSessionRequestMessage:messageBody:client:
SSVCADeviceSimpleOutputSlope
_holdAttSiriTransactionIfNeeded
SSVCADistanceInputBufferDurationSeconds
_inASBD
SSVCADistanceResultSampleCountTolerance
_inputRecordingNumberOfChannels
SSVCADropInCallAnnouncementMinTTSVolume
_isHearstRouted
SSVCADspNumStages
_isSiri
SSVCALinearToDecibelConstantMultiplier
_isSpeakerMuted
SSVCAMaxFrameSize
_isTemporaryPairedNotInContacts
SSVCAMaximumCompensatedSpeechLevelNearField
_localSpeechRecognitionListener
SSVCAMinTTSSystemVolume
_mediaIsPlaying
SSVCAMinimumLinearSoundLevel
_noiseTTSMappingOutputRangeHigh
SSVCAMusicResultsBufferSize
_notifyObserver:withRestricted:
SSVCANoiseActivityHistoricalSampleCount
_numFalseWakeUp
SSVCANoiseResultsBufferSize
_processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:
SSVCASignalToSigmoidMusicDilationFactorDeviceSimple
_reqSrc
SSVCASignalToSigmoidMusicHOffsetDeviceSimple
_secondPassAudioStreamReadyTime
SSVCASignalToSigmoidMusicSteepnessDeviceSimple
_sendReply:client:result:error:
SSVCASignalToSigmoidMusicVOffsetDeviceSimple
_setupSpeakerRecognitionForProfiles:WithVTEventInfo:WithLocale:
SSVCASignalToSigmoidMusicVSpreadDeviceSimple
_shouldCheckNetworkAvailability
SSVCASignalToSigmoidNoiseHOffset
_shouldStopProcessASROnEndpoint
SSVCASignalToSigmoidNoiseVOffset
_source
SSVCASignalToSigmoidSpeechDilationFactor
_startObservingAudioRouteChange
SSVCASignalToSigmoidSpeechSteepness
_stateToString:
SSVCASignalToSigmoidSpeechVSpread
_stopProcessing
SSVCASmartSiriVolumeUnsyncedMetricLogsToRetain
_streamProvider
SSVCASpeakerDistanceMidBoostFactor
_updateAssetWithCurrentLanguage
SSVCAUserIntentPermanentOffsetFactorDelta
_userIntentType
SSVCAUserIntentPermanentOffsetFactorUpperBound
_xpcClientQueue
SSVCAUserIntentVolumeDecreaseFactor
activateEndTime
SSVCAVoiceTriggerBasedTTSValidForSeconds
address
SSVCAVolumeHalfLifeSeconds
allKeys
SSVDefaultLKFSChannelCount
apQueue
SSVDistanceChannelBitset
arrayWithArray:
SSVLKFSChannelBitset
assetQueryQueue
SSVLKFSMicSensitivityOffset
audioDeviceInfo
SSVLKFSTTSMappingOutputRangeHigh
audioProviderWithContext:error:
SSVLKFSUpperPercentile
base64EncodedStringWithOptions:
SSVNoiseLowerPercentile
bestEnd
SSVNoiseMicSensitivityOffsetDeviceSimple
clientSilenceFeaturesAvailable:
SSVNoiseTTSMappingOutputRangeHigh
connect
SSVNoiseTimeConstant
containsObject:
SSVNoiseWeight
context
SSVTTSVolumeLowerLimitDB
currentHEPAsset
SSVUserOffsetInputRangeHigh
dataForChannel:
SSVUserOffsetOutputRangeHigh
dealloc
T#,R
didDetectSpeech
T@"<CSActivateXPCConnectionDelegate>",W,N,V_delegate
encoder
T@"<CSAudioAlertProviding>",W,N,V_audioAlertProvider
endTime
T@"<CSAudioAlertProvidingDelegate>",W,N,V_audioAlertProvidingDelegate
firstPassSource
T@"<CSAudioFileReaderDelegate>",W,N,V_delegate
frameDurationMs
T@"<CSAudioInjectionEngineDelegate>",W,N,V_delegate
getBoolForKey:category:default:
T@"<CSAudioMetricProviding>",W,N,V_audioMetricProvider
hearstConnected
T@"<CSAudioProviderDelegate>",W,N,V_providerDelegate
initWithDouble:
T@"<CSAudioSessionEventProvidingDelegate>",W,N,V_sessionEventDelegate
initWithLength:
T@"<CSAudioSessionProviding>",&,N,V_audioSessionProvider
initWithSamplingRate:withAsset:
T@"<CSAudioSessionProvidingDelegate>",W,N,V_sessionDelegate
injectAudio:withScaleFactor:outASBD:playbackStarted:completion:
T@"<CSAudioStreamProviding>",W,N,SsetAudioStreamProvidingForProxy:,V_audioStreamProviding
injectionEngine
T@"<CSAudioStreamProvidingDelegate>",W,N,V_audioStreamProvidingDelegate
isActiveRequest
T@"<CSBiometricMatchMonitorDelegate>",W,N,V_delegate
isAlwaysOnVoiceTriggerAvailable
T@"<CSEndpointAnalyzerDelegate>",W,N
isFinal
T@"<CSEndpointAnalyzerDelegate>",W,N,V_endpointerDelegate
isNNVAD
T@"<CSEndpointAnalyzerImpl>",&,N,V_hybridEndpointer
isPluginContext
T@"<CSEndpointAnalyzerImpl>",W,N,V_activeEndpointer
isReady
T@"<CSEndpointAnalyzerImplDelegate>",W,N,V_endpointerImplDelegate
isRecordContextHomeButtonPress:
T@"<CSEndpointAnalyzerImplDelegate>",W,N,VimplDelegate
isSoftwareUpdateCheckingRunning
T@"<CSMyriadSelfTriggerCoordinatorDelegate>",W,N,V_delegate
jarvisConnected
T@"<CSPhraseNDEAPIScorerDelegate>",W,N,V_delegate
keywordAnalyzer
T@"<CSSPGEndpointAnalyzerDelegate>",W,N,V_delegate
lastSampleCount
T@"<CSSecondPassProgressProviding>",W,N,V_remoraSecondPassProgressProvider
localSpeechRecognizerTaskString
T@"<CSSpeechManagerDelegate>",W,N,V_clientController
machServiceName
T@"<CSTriggerInfoProviding>",W,N,V_triggerInfoProviding
mitigationAsset
T@"<CSVoiceTriggerAwareZeroFilterDelegate>",W,N,V_delegate
monitor
T@"<CSVoiceTriggerXPCConnectionDelegate>",W,N,V_delegate
nnvadEndpointer
T@"<CSXPCConnectionDelegate>",W,N,V_delegate
numOfValidTrailingSpeechPackets
T@"AVVoiceTriggerClient",&,N,V_alwaysOnProcessorController
numberWithLong:
T@"CSADPPreventStandbyAssertion",&,N,V_adpAssertion
osdMode
T@"CSActivationXPCListener",&,N,V_activationXpcListener
outASBD
T@"CSAsset",&,N,V_currentAsset
overrideEnabled
T@"CSAsset",&,N,V_currentOEPAsset
pendingRemoraVoiceTriggerResult
T@"CSAsset",&,N,V_prefetchedAsset
prefetchedAsset
T@"CSAsset",&,V_cachedAsset
prevStageOutput
T@"CSAttSiriAFTMNode",&,N,V_aFTMNode
recordEventUUID
T@"CSAttSiriAudioSrcNode",&,N,V_audioSrcNode
registerPostBuildInstallService
T@"CSAttSiriConnectionManager",&,N,V_attSiriConnectionManager
release
T@"CSAttSiriController",W,N
removeObserver:
T@"CSAttSiriEndpointerNode",&,N,V_endpointerNode
reportMHEndpointerAccessibleContextEventWithThresholdType:MhId:
T@"CSAttSiriEndpointerNode",W,N,V_endpointerNode
results
T@"CSAttSiriNLDAClassifierNode",&,N,V_nldaClassifierNode
runRecognitionWithResultStream:
T@"CSAttSiriOSDNode",&,N,V_osdNode
selectedChannel
T@"CSAttSiriRCHandler",&,N,V_rcHandler
T@"CSAttSiriRequestContext",C,N,V_ctx
setAccessoryId:
T@"CSAttSiriSSRNode",W,N,SregisterSSRNode:,V_ssrNode
setAlwaysOnProcessorController:
T@"CSAttSiriUresNode",&,N,V_uresNode
setAudioAlertProvidingDelegate:
T@"CSAttSiriUresNode",W,N,V_uresNode
setAudioFormat:
T@"CSAudioCircularBuffer",&,N,V_audioLoggingBuffer
setBuiltInAudioInjectionEngine:
T@"CSAudioCircularBuffer",R,N,V_circularBuffer
setCachedAsset:
T@"CSAudioInjectionDevice",&,N,V_builtInDevice
setCircularBufferStartHostTime:
T@"CSAudioInjectionDevice",W,N,V_connectedDevice
setCtx:
T@"CSAudioInjectionEngine",&,N,V_builtInAudioInjectionEngine
setDidAddAudio:
T@"CSAudioInjectionFileOption",&,N,V_fileOption
setFirstSpeechFrameAudioTsInMs:
T@"CSAudioPreprocessor",&,N,V_audioPreprocessor
setHasReported:
T@"CSAudioRecordContext",&,N,V_audioRecordContext
setIsAttachingBluetoothSession:
T@"CSAudioRecordContext",&,N,V_lastAudioRecorderContext
setIsConnected:
T@"CSAudioRecordContext",&,N,V_recordContext
setIsRecording:
T@"CSAudioRecordContext",R,N,V_recordContext
setLastEndpointEagerResultTime:
T@"CSAudioRecordDeviceInfo",R,C,N,V_recordDeviceInfo
setLpcmIsFloat:
T@"CSAudioRouteChangeMonitor",&,N,V_audioRouteChangeMonitor
setOpportuneSpeakListeningType:
T@"CSAudioSessionInfoProvidingProxy",&,N,V_audioSessionInfoProvidingProxy
setPauseCounts:
T@"CSAudioStartStreamOption",&,N,SsetStartStreamOption:,V_startStreamOption
setPresetLocalSpeechRecognizer:
T@"CSAudioStream",&,N,V_audioStream
setScaleFactor:
T@"CSAudioStream",W,N,V_primaryStream
setSelfTriggerEnabledAccessory:
T@"CSAudioStreamRequest",&,N,V_streamRequest
setServerState:
T@"CSAudioTimeConverter",&,N,V_audioTimeConverter
setStartRecordingWatchDogToken:
T@"CSAudioZeroFilter",&,N,V_zeroFilter
setSupportDoAP:
T@"CSBenchmarkXPCListener",&,N,V_benchmarkXpcListener
setTargetQueue:
T@"CSConnectionListener",&,N,V_endpointerListener
setTriggerMode:
T@"CSConnectionListener",&,N,V_localSpeechRecognitionListener
setUserSpeakingStartedHostTime:
T@"CSConnectionListener",&,N,V_ssrListener
setWithObjects:
T@"CSDarwinVoiceTriggerHandlerPool",&,N,V_darwinVoiceTriggerHandlerPool
setZeroCounter:
T@"CSEndpointLatencyInfo",&,N,V_endpointLatencyInfo
sharedAnalytics
T@"CSEndpointerProxy",&,N,V_proxy
siriInputSource
T@"CSFallbackAudioSessionReleaseProvidingProxy",&,N,V_fallbackAudioSessionProvidingProxy
smartSiriVolume
T@"CSFlexKeywordSpotter",&,N,V_kwdSpotter
ssrNode
T@"CSKeywordAnalyzerNDAPI",&,N,V_keywordAnalyzer
startWithContext:audioStreamId:
T@"CSKeywordAnalyzerNDEAPI",&,N,V_keywordAnalyzerNDEAPI
stopWithReason:
T@"CSMicUsageReporter",&,N,V_micUsageReporter
stringByAppendingPathComponent:
T@"CSOSTransaction",&,N,V_attSiriTransaction
stringFromDate:
T@"CSOSTransaction",&,N,V_recordingTransaction
timeStampString
T@"CSPhoneCallStateMonitor",&,N,V_phoneCallStateMonitor
triggerMachTime
T@"CSPostBuildInstallService",&,N,V_postBuildInstallService
updateDeviceId:
T@"CSPreventSystemSleepPowerAssertion",&,N,V_preventSystemSleepPowerAssertion
vtAsset
T@"CSServerEndpointFeatures",&,N,V_lastKnownServerEPFeatures
T@"CSShadowMicScoreCreator",&,N,V_shadowMicScoreCreator
T@"CSSiriAssertionMonitor",&,N,V_assertionMonitor
T@"CSSiriEnabledMonitor",&,N,V_siriEnabledMonitor
T@"CSSmartSiriVolumeManager",&,N,V_ssvManager
T@"CSSpeechManager",&,N,V_speechManager
T@"CSSpeechModelTrainingXPCManager",&,N,V_speechModelTrainingXpcManager
T@"CSSyncKeywordAnalyzerQuasar",&,N,V_vtSecondPassAnalyzer
T@"CSTrialAssetDownloadMonitor",&,N,V_monitor
T@"CSTrialAssetDownloadMonitor",&,N,V_trialAssetMonitor
T@"CSTrialAssetDownloadMonitor",&,N,V_trialDownloadMonitor
T@"CSTrialAssetManager",&,N,V_trialAssetManager
T@"CSVoiceIdXPCListener",&,N,V_voiceIdXpcListener
T@"CSVoiceTriggerAssetDownloadMonitor",&,N,V_voiceTriggerAssetDownloadMonitor
T@"CSVoiceTriggerAwareZeroFilter",&,N,V_zeroFilter
T@"CSVoiceTriggerFirstPassMetrics",R,N,V_firstpassMetrics
T@"CSVoiceTriggerXPCListener",&,N,V_voiceTriggerXpcListener
T@"CSXPCActivity",&,N,V_csXPCActivity
T@"CSXPCConnection",W,N,V_xpcConnection
T@"CSXPCListener",&,N,V_xpcListener
T@"CoreEmbeddedSpeechRecognizer",&,N,V_interactiveLocalSpeechRecognizer
T@"CoreEmbeddedSpeechRecognizer",&,N,V_presetLocalSpeechRecognizer
T@"EARCaesuraSilencePosteriorGenerator",&,N,V_caesuraSPG
T@"EARSyncPSRAudioProcessor",&,N,V_psrAudioProcessor
T@"LBLocalSpeechRecognitionSettings",&,N,V_speechRecognitionSettings
T@"NSArray",&,N,V_allowVocabList
T@"NSArray",&,N,V_connectedDeviceAddresses
T@"NSArray",&,N,V_featuresAtEndpoint
T@"NSArray",&,N,V_lastEndpointHintFeatures
T@"NSArray",&,N,V_pairedDeviceAddresses
T@"NSArray",&,N,V_ssrAssets
T@"NSArray",&,N,V_supportedInputOrigins
T@"NSArray",&,N,V_thresholds
T@"NSArray",C,N,V_pauseCounts
T@"NSArray",R,C,N,V_playbackDeviceTypeList
T@"NSData",&,N,V_payloadData
T@"NSData",C
T@"NSData",R,N,V_certificate
T@"NSData",R,N,V_digest
T@"NSData",R,N,V_modelData
T@"NSData",R,N,V_signature
T@"NSDate",&,N,V_firstAudioPacketTimestamp
T@"NSDate",&,N,V_lastServerFeatureTimestamp
T@"NSDictionary",&,N,V_additionalMetrics
T@"NSDictionary",&,N,V_asrDatapackInstallationStatus
T@"NSDictionary",&,N,V_csAssetsDictionary
T@"NSDictionary",&,N,V_pendingBuiltInVoiceTriggerResult
T@"NSDictionary",&,N,V_pendingRemoraVoiceTriggerResult
T@"NSDictionary",&,N,V_serverFeatureLatencyDistribution
T@"NSDictionary",&,N,V_speakerRecognitionScores
T@"NSDictionary",&,N,V_taskThresholdMap
T@"NSDictionary",&,N,V_thresholdsMap
T@"NSDictionary",&,N,V_voiceTriggerEventInfo
T@"NSDictionary",C,N,V_rtsTriggerInfo
T@"NSDictionary",R,N
T@"NSDictionary",R,N,V_activationInfo
T@"NSDictionary",R,N,V_firstPassTriggerInfo
T@"NSHashTable",&,N,V_alertPlaybackFinishWaitingStreams
T@"NSHashTable",&,N,V_audioSessionInfoObservers
T@"NSHashTable",&,N,V_historicalBufferRequestStreams
T@"NSHashTable",&,N,V_startPendingOnStoppingStreams
T@"NSHashTable",&,N,V_startPendingStreams
T@"NSHashTable",&,N,V_stopPendingStreams
T@"NSHashTable",&,N,V_streams
T@"NSHashTable",R,N,V_tandemStreams
T@"NSMapTable",&,N,V_delegates
T@"NSMutableArray",&,N,V_alertPlaybackFinishWaitingCompletions
T@"NSMutableArray",&,N,V_clientConnections
T@"NSMutableArray",&,N,V_connectedDevices
T@"NSMutableArray",&,N,V_connections
T@"NSMutableArray",&,N,V_hostTimeBuffer
T@"NSMutableArray",&,N,V_injectionAudioFileList
T@"NSMutableArray",&,N,V_injectionCompletionNotifyBlocks
T@"NSMutableArray",&,N,V_injectionStartNotifyBlocks
T@"NSMutableArray",&,N,V_pendingStartCompletions
T@"NSMutableArray",&,N,V_pendingStopCompletions
T@"NSMutableArray",&,N,V_remoteVADAlignBuffer
T@"NSMutableArray",&,N,V_rmsSamplesForEntireAudio
T@"NSMutableArray",&,N,V_serverFeatureLatencies
T@"NSMutableArray",&,N,V_streamHolders
T@"NSMutableArray",&,N,V_trailingPktLatencies
T@"NSMutableArray",&,N,V_trailingPktSpeechLatencies
T@"NSMutableData",&,N,V_audioBuffer
T@"NSMutableData",&,N,V_dataBufferNDEAPI
T@"NSMutableDictionary",&,N,V_accessoryVoiceTriggerMetaDataByDeviceId
T@"NSMutableDictionary",&,N,V_audioInjectionEngines
T@"NSMutableDictionary",&,N,V_audioProviders
T@"NSMutableDictionary",&,N,V_cachedScoresForLogging
T@"NSMutableDictionary",&,N,V_decodersForTV
T@"NSMutableDictionary",&,N,V_eventToStateTransitions
T@"NSMutableDictionary",&,N,V_falseWakePhraseDictionary
T@"NSMutableDictionary",&,N,V_inUseServices
T@"NSMutableDictionary",&,N,V_mitigationDecisions
T@"NSMutableDictionary",&,N,V_observers
T@"NSMutableDictionary",&,N,V_startPendingOnStoppingStreamToCompletionDict
T@"NSMutableDictionary",&,N,V_transitions
T@"NSMutableDictionary",&,V_cachedEndpointAssets
T@"NSMutableDictionary",R,N,V_shouldResetAdsDictionary
T@"NSMutableSet",&,N,V_activationAssertions
T@"NSMutableSet",&,N,V_remoteAccessoryStreamIdSet
T@"NSNumber",R,N,V_firstPassInfoGeneratedTime
T@"NSNumber",R,N,V_firstPassInfoProcessedTime
T@"NSObject<OS_dispatch_group>",&,N,V_bluetoothSessionSetupGroup
T@"NSObject<OS_dispatch_group>",&,N,V_recordingWillStartGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_alignBufferQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_apQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetQueryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetsMigrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_endpointLatencyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hybridClassifierQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_localSpeechRecognizerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_loggingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_modelExeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_osdQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serverFeaturesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionInfoQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateNotificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateSerialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_streamHandleQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_targetQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_voiceControllerCreationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_xpcClientQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_xpcReplyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_targetQueue
T@"NSObject<OS_dispatch_source>",&,N,V_audioFeedTimer
T@"NSObject<OS_dispatch_source>",&,N,V_audioPacketWatchdog
T@"NSObject<OS_dispatch_source>",&,N,V_clearLoggingFileTimer
T@"NSObject<OS_dispatch_source>",&,N,V_listenPollingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_signalSource
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@"NSObject<OS_xpc_object>",&,N,V_connection
T@"NSObject<OS_xpc_object>",&,N,V_listener
T@"NSObject<OS_xpc_object>",&,N,V_xpcConnection
T@"NSSet",&,N,V_sharedUserIdsSet
T@"NSString",&,N
T@"NSString",&,N,V_accessoryId
T@"NSString",&,N,V_atvRemoteDeviceID
T@"NSString",&,N,V_audioProviderUUID
T@"NSString",&,N,V_configFile
T@"NSString",&,N,V_detectedToken
T@"NSString",&,N,V_deviceId
T@"NSString",&,N,V_endpointerModelVersion
T@"NSString",&,N,V_language
T@"NSString",&,N,V_lastCommunicatedPeer
T@"NSString",&,N,V_leadingUtteranceAudioFile
T@"NSString",&,N,V_localSpeechRecognizerTaskString
T@"NSString",&,N,V_machServiceName
T@"NSString",&,N,V_mhId
T@"NSString",&,N,V_name
T@"NSString",&,N,V_pendingRecordingStopUUID
T@"NSString",&,N,V_pendingRemoraVoiceTriggerDeviceId
T@"NSString",&,N,V_recordEventUUID
T@"NSString",&,N,V_requestId
T@"NSString",&,N,V_requestMHUUID
T@"NSString",&,N,V_siriSessionUUID
T@"NSString",&,N,V_taskName
T@"NSString",&,N,V_voiceIdentificationBatchId
T@"NSString",&,N,V_voiceTriggerBatchId
T@"NSString",&,N,VmhId
T@"NSString",C,N,V_address
T@"NSString",C,N,V_deviceId
T@"NSString",C,N,V_taskName
T@"NSString",N,V_configFile
T@"NSString",R,C
T@"NSString",R,C,N,V_destination
T@"NSString",R,C,N,V_playbackRoute
T@"NSString",R,C,N,V_remoteDeviceProductIdentifier
T@"NSString",R,C,N,V_remoteDeviceUIDString
T@"NSString",R,C,N,V_route
T@"NSString",R,C,N,V_source
T@"NSString",R,C,N,V_uid
T@"NSString",R,N
T@"NSString",R,N,V_UUID
T@"NSString",R,N,V_audioProviderUUID
T@"NSString",R,N,V_bestToken
T@"NSString",R,N,V_deviceID
T@"NSString",R,N,V_deviceId
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_deviceProductType
T@"NSString",R,N,V_deviceProductVersion
T@"NSString",R,N,V_modelHash
T@"NSString",R,N,V_modelLocale
T@"NSString",R,N,V_productIdentifier
T@"NSString",R,N,V_siriSessionUUID
T@"NSURL",R,N,V_audioURL
T@"NSUUID",&,N,V_alertPlaybackFinishTimeoutToken
T@"NSUUID",&,N,V_startRecordingWatchDogToken
T@"NSUUID",&,N,V_stopRecordingWatchDogToken
T@"NSUUID",&,N,V_token
T@"NSUUID",&,N,V_uuid
T@"NSUUID",&,V_streamingUUID
T@"NSUUID",R,C,N,V_remoteDeviceUID
T@"NSUUID",R,N,V_deviceUID
T@"NSUUID",R,N,V_rejectionMHUUID
T@"NSXPCListener",&,N,V_servicesListener
T@"OSDAnalyzer",&,N,V_osdAnalyzer
T@"OSDFeatures",&,N,V_lastKnownOSDFeatures
T@"OSDFeatures",&,N,V_osdFeaturesAtEndpoint
T@"SLBertClassifier",&,N,V_bertModel
T@"SLBertClassifier",&,N,V_odldModelAnalyzer
T@"SLBertClassifierResult",&,N,V_cachedResult
T@"SLODLDProcessor",&,N,V_odldProcessor
T@"SLProgressiveCheckerAnalyzer",&,N,V_acousticAnalyzer
T@"SLProgressiveCheckerResult",&,N,V_latestResult
T@"SLUresMitigator",&,N,V_mitigator
T@"SLUresMitigatorIpFeats",&,N,V_lastInputFeats
T@"SSRSpeakerRecognitionController",&,N,V_ssrController
T@"SSRVoiceProfile",&,N,V_ccProfile
T@"SSRVoiceProfileManager",&,N,V_voiceProfileManager
T@"_EAREndpointer",&,N,V_hybridClassifier
T@"_EARSpeechRecognitionAudioBuffer",&,N,V_recognizerBuffer
T@"_EARSpeechRecognizer",&,N,V_recognizer
T@?,C,N,V_completion
T@?,C,N,V_completionBlock
T@?,C,N,V_pendingBuiltInVoiceTriggerCompletionBlk
T@?,C,N,V_pendingCompletion
T@?,C,N,V_pendingRemoraVoiceTriggerCompletionBlk
TB,N
TB,N,SsetScheduledFutureSample:,V_scheduledFutureSample
TB,N,V_accessibleEndpointerEnabled
TB,N,V_allowAdBlockerAssetDownloading
TB,N,V_allowEndpointAssetDownloading
TB,N,V_allowLanguageDetectorAssetDownloading
TB,N,V_allowSpeakerRecognitionAssetDownloading
TB,N,V_allowVoiceTriggerAccessoryAssetDownloading
TB,N,V_allowVoiceTriggerAssetDownloading
TB,N,V_audioSystemRecovering
TB,N,V_canActivate
TB,N,V_currentSessionShouldDuckOnBuiltInSpeaker
TB,N,V_didActivate
TB,N,V_didAddAudio
TB,N,V_didCommunicateEndpoint
TB,N,V_didDetectSpeech
TB,N,V_didDetectedEndpoint
TB,N,V_didReportEndpointDelay
TB,N,V_didSetScaleFactor
TB,N,V_didTimestampFirstAudioPacket
TB,N,V_didTrigger
TB,N,V_disableBoostForDoAP
TB,N,V_disableEndpointer
TB,N,V_disableLocalSpeechRecognizer
TB,N,V_disablePrewarmLocalAsrAtStartRecording
TB,N,V_enableAlwaysOnVoiceTrigger
TB,N,V_enabled
TB,N,V_hasReceivedNDEAPIResult
TB,N,V_hasReported
TB,N,V_isASRFeatureFromServer
TB,N,V_isActiveRequest
TB,N,V_isActiveSession
TB,N,V_isAnalyzeMode
TB,N,V_isAnchorTimeBuffered
TB,N,V_isAttachingBluetoothSession
TB,N,V_isAttending
TB,N,V_isConnected
TB,N,V_isFileLoggingEnabled
TB,N,V_isForwarding
TB,N,V_isHearstRouted
TB,N,V_isListenPollingStarting
TB,N,V_isListening
TB,N,V_isNNVAD
TB,N,V_isOpportuneSpeakListening
TB,N,V_isPhraseSpotterBypassed
TB,N,V_isRaiseToSpeakBypassed
TB,N,V_isReady
TB,N,V_isRecording
TB,N,V_isRequestTimeout
TB,N,V_isSecondPassRunning
TB,N,V_isShadowModeEnabled
TB,N,V_isSiri
TB,N,V_isSiriClientConsideredAsRecord
TB,N,V_isSpeakerMuted
TB,N,V_isSpeaking
TB,N,V_isStreaming
TB,N,V_isTemporaryPairedNotInContacts
TB,N,V_isWeakStream
TB,N,V_lpcmIsFloat
TB,N,V_needsBoost12dB
TB,N,V_overrideEnabled
TB,N,V_recordingDidStop
TB,N,V_requestHistoricalAudioDataSampleCount
TB,N,V_requestHistoricalAudioDataWithHostTime
TB,N,V_requireSingleChannelLookup
TB,N,V_saveSamplesSeenInReset
TB,N,V_sessionInProgress
TB,N,V_shouldCleanupVoiceProfile
TB,N,V_shouldProcessAudio
TB,N,V_shouldStopProcessASROnEndpoint
TB,N,V_shouldUpdateMitigationResult
TB,N,V_skipAlertBehavior
TB,N,V_speechEndpointDetected
TB,N,V_speechHasAcceptedResultCandidate
TB,N,V_splitterEnabled
TB,N,V_supportDoAP
TB,N,V_supportsSSR
TB,N,V_supportsSpeechRecognitionOnDevice
TB,N,V_useCustomizedRecordSettings
TB,N,V_useDefaultServerFeaturesOnClientLag
TB,N,V_useLegacyPath
TB,N,V_useOpportunisticZLL
TB,N,V_voiceTriggerEnabled
TB,N,V_waitingForAlertFinish
TB,R
TB,R,N
TB,R,N,V_disableEndpointer
TB,R,N,V_isBluetooth
TB,R,N,V_isRemoteDevice
TB,R,N,V_isSecondChanceRun
TB,R,N,V_shouldUseRemoteRecorder
TB,R,N,VcanProcessCurrentRequest
TB,V_isMediaPlayingNow
TB,V_streaming
TC,N,V_hasReceivedEarlyDetectNDEAPIResult
TC,N,V_signalFractional
TI,N,V_activeChannel
TI,N,V_encoderBitRate
TI,N,V_inputRecordingNumberOfChannels
TI,N,V_lpcmBitDepth
TI,N,V_numberOfChannels
TI,N,V_selectedChannel
TI,R,N
TQ,N
TQ,N,GgetAudioSessionState,V_audioSessionState
TQ,N,V_activateEndTime
TQ,N,V_activateStartTime
TQ,N,V_activeChannel
TQ,N,V_allFramesInferenceLatency
TQ,N,V_allowListWordCountThreshold
TQ,N,V_anchorMachAbsTime
TQ,N,V_attendingState
TQ,N,V_audioSampleCountToSkip
TQ,N,V_audioStreamHandleId
TQ,N,V_audioStreamId
TQ,N,V_bestEarlyDetectSample
TQ,N,V_bestEndDetectSample
TQ,N,V_bestStartDetectSample
TQ,N,V_builtInSpeakerState
TQ,N,V_circularBufferStartHostTime
TQ,N,V_circularBufferStartSampleCount
TQ,N,V_clientType
TQ,N,V_countOfConsecutiveBoron
TQ,N,V_deactivateEndTime
TQ,N,V_deactivateStartTime
TQ,N,V_decoderProcessedSampleCountForTV
TQ,N,V_dismissalTimestamp
TQ,N,V_eagerResultId
TQ,N,V_endpointBufferHostTime
TQ,N,V_estimatedStartHostTime
TQ,N,V_extraDelayFrequency
TQ,N,V_firstAudioStartSampleCount
TQ,N,V_firstPartialResultTime
TQ,N,V_lastAggTimeFalseWakeUp
TQ,N,V_lastDetectedVoiceTriggerBeginSampleCount
TQ,N,V_lastEndpointEagerResultTime
TQ,N,V_lastKnownConsecutiveBoronStartSampleCount
TQ,N,V_lastSampleCount
TQ,N,V_latestPluginStreamId
TQ,N,V_localSpeechRecognizerState
TQ,N,V_numFalseWakeUp
TQ,N,V_numOfAudioPackets
TQ,N,V_numOfChunksReceived
TQ,N,V_numOfConsecutiveBoronActivationThreshold
TQ,N,V_numOfValidTrailingPackets
TQ,N,V_numOfValidTrailingSpeechPackets
TQ,N,V_numSamplesProcessed
TQ,N,V_numSamplesProcessedBeforeAnchorTime
TQ,N,V_numberOfVoicingFrames
TQ,N,V_opportuneSpeakListeningType
TQ,N,V_osdMode
TQ,N,V_pendingBuiltInVoiceTriggerDetectedTime
TQ,N,V_pendingRemoraVoiceTriggerDetectedTime
TQ,N,V_phoneCallState
TQ,N,V_recordingStartTime
TQ,N,V_remoteVADAlignCount
TQ,N,V_reqSrc
TQ,N,V_runningSampleCount
TQ,N,V_secondChanceHotTillMachTime
TQ,N,V_secondPassAssetLoadCompleteTime
TQ,N,V_secondPassAssetLoadStartTime
TQ,N,V_secondPassAssetQueryCompleteTime
TQ,N,V_secondPassAssetQueryStartTime
TQ,N,V_secondPassAudioStreamReadyTime
TQ,N,V_secondPassAudioStreamStartTime
TQ,N,V_secondPassCheckerModelKeywordDetectionEndTime
TQ,N,V_secondPassCheckerModelKeywordDetectionStartTime
TQ,N,V_secondPassFirstAudioPacketReceptionTime
TQ,N,V_secondPassLastAudioPacketReceptionTime
TQ,N,V_serverState
TQ,N,V_startDetectionTime
TQ,N,V_startRecordingHostTime
TQ,N,V_startRecordingSampleCount
TQ,N,V_stopRecordingHostTime
TQ,N,V_streamClientType
TQ,N,V_streamState
TQ,N,V_supportedRecordType
TQ,N,V_triggerAbsStartSampleId
TQ,N,V_triggerMachTime
TQ,N,V_triggerNotifiedMachTime
TQ,N,V_userIntentType
TQ,N,V_userIntentValidForSeconds
TQ,N,V_userSpeakingEndedHostTime
TQ,N,V_userSpeakingStartedHostTime
TQ,N,V_voiceTriggerSampleCount
TQ,N,V_vtEndInSampleCount
TQ,N,V_wakeGestureTimestamp
TQ,N,V_xpcClientType
TQ,N,VactiveChannel
TQ,R
TQ,R,N
TQ,R,N,V_audioStreamHandleId
TQ,R,N,V_deviceCategory
TQ,R,N,V_firstPassSource
TQ,R,N,V_hosttime
TQ,R,N,V_lastForwardedSampleCount
TQ,R,N,V_numOfAVVCRecordingClients
TQ,R,N,V_protocolVersion
TQ,R,N,V_startSampleCount
TQ,R,N,V_streamHandleId
TQ,R,N,V_type
T^{AudioBufferList=I[1{AudioBuffer=II^v}]},N,V_pNonInterleavedABL
T^{BTLocalDeviceImpl=},N,V_localDevice
T^{BTSessionImpl=},N,V_bluetoothSession
T^{OpaqueAudioConverter=},N,V_deinterleaver
T^{OpaqueExtAudioFile=},N,V_fFile
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},N,V_fp
Td,N
Td,N,V_automaticEndpointingSuspensionEndTime
Td,N,V_bufferDuration
Td,N,V_clampedSFLatencyMsForClientLag
Td,N,V_clientLagThresholdMs
Td,N,V_delay
Td,N,V_detectedEndpointTime
Td,N,V_elapsedTimeWithNoSpeech
Td,N,V_endWaitTime
Td,N,V_endpointStartTimeInSec
Td,N,V_endpointTime
Td,N,V_endpointTimeInMs
Td,N,V_eosLikelihood
Td,N,V_firstAudioSampleSensorTimestamp
Td,N,V_firstPktLatency
Td,N,V_firstSpeechFrameAudioTsInMs
Td,N,V_firstWordDuration
Td,N,V_frameDurationMs
Td,N,V_hepAudioOriginInMs
Td,N,V_interspeechWaitTime
Td,N,V_lastKnowServerFeaturesLatency
Td,N,V_lastReportedEndpointTimeMs
Td,N,V_lastSilencePosterior
Td,N,V_leadingSilenceDuration
Td,N,V_localSpeechRecognizerDeliverAudioDuration
Td,N,V_minimumDurationForEndpointer
Td,N,V_processedAudioInSeconds
Td,N,V_sampleRate
Td,N,V_serverFeaturesWarmupLatency
Td,N,V_shadowMicScore
Td,N,V_silencePosterior
Td,N,V_speechVoiceLevel
Td,N,V_startWaitTime
Td,N,V_totalAudioRecorded
Td,N,V_trailingSilenceDurationAtEndpoint
Td,N,V_userSpeakingEndedTimeInMs
Td,N,V_userSpeakingStartedTimeInMs
Td,N,V_vtExtraAudioAtStartInMs
Td,N,VautomaticEndpointingSuspensionEndTime
Td,N,Vdelay
Td,N,VminimumDurationForEndpointer
Td,N,VstartWaitTime
Td,R,N
Td,R,N,V_assertionTimeoutInterval
Td,R,N,V_droppedPrediction
Td,R,N,V_droppingPrediction
Td,R,N,V_timestamp
Td,R,N,VlastEndOfVoiceActivityTime
Td,R,N,VlastStartOfVoiceActivityTime
Tf,N,V_didStartDelayInSeconds
Tf,N,V_endpointThreshold
Tf,N,V_firstPassMyriadGoodnessScore
Tf,N,V_lastEndpointPosterior
Tf,N,V_latestVolume
Tf,N,V_permanentOffsetFactor
Tf,N,V_sampleRate
Tf,N,V_scaleFactor
Tf,N,V_threshold
Tf,N,V_userIntentVolume
Tf,R,N
Tf,R,N,V_kwdScore
Tf,R,N,V_maxFingerprintBufferSize
Tf,R,N,V_scaleFactor
Tf,R,N,V_shadowMicScoreThresholdForVAD
Tf,R,N,V_vadScore
Tf,R,N,V_volumeEstimate
Ti,N,V_numChannels
Ti,N,V_remoteVADSPGRatio
Ti,N,V_systemUserActivityNotificationToken
Ti,R,N
Tq,N
Tq,N,V_audioFormat
Tq,N,V_audioStreamType
Tq,N,V_clearLoggingFileTimerCount
Tq,N,V_currReqFirstSampleId
Tq,N,V_currentState
Tq,N,V_endpointMode
Tq,N,V_endpointStyle
Tq,N,V_endpointerOperationMode
Tq,N,V_endpointerType
Tq,N,V_errorAlertBehavior
Tq,N,V_inferenceTimeSpan
Tq,N,V_initialState
Tq,N,V_lastEndpointHintRCId
Tq,N,V_latestVolumeTime
Tq,N,V_listenPollingTimerCount
Tq,N,V_numberOfTotalFramesETFT
Tq,N,V_processedAudioDurationInMilliseconds
Tq,N,V_startAlertBehavior
Tq,N,V_stopAlertBehavior
Tq,N,V_totalNumberSamples
Tq,N,V_trailingSilenceDuration
Tq,N,V_userActivityStatus
Tq,N,V_userIntentTime
Tq,N,V_wordCount
Tq,N,VendpointStyle
Tq,R,N
Tq,R,N,V_currentState
Tq,R,N,V_deviceType
Tq,R,N,V_endSampleId
Tq,R,N,V_startStampleId
Ts,N,V_signalEstimate
T{AudioStreamBasicDescription=dIIIIIIII},N,V_outASBD
UILanguage
URLByAppendingPathComponent:
URLByDeletingPathExtension
URLWithString:
URLsForDirectory:inDomains:
UTF8String
UUID
UUIDString
_LKFSChannelBitset
_LKFSLowerPercentile
_LKFSMicSensitivityOffset
_LKFSTTSMappingInputRangeHigh
_LKFSTTSMappingInputRangeLow
_LKFSTTSMappingOutputRangeHigh
_LKFSTTSMappingOutputRangeLow
_LKFSTimeConstant
_LKFSUpperPercentile
_RMSScore
_TTSVolumeLowerLimitDB
_TTSVolumeUpperLimitDB
_UUID
_aFTMNode
_accessibleEndpointerEnabled
_accessoryId
_accessoryVoiceTriggerEvents
_accessoryVoiceTriggerMetaDataByDeviceId
_acousticAnalyzer
_acquireAssertionForType:withTimeout:assertionId:details:
_acquirePreventSystemSleepAssertionWithTimeout:
_activateAudioSessionWithReason:error:
_activateEndTime
_activateStartTime
_activationAssertions
_activationTypeString
_activationXpcListener
_activeChannel
_activeEndpointer
_adCompanionServiceProvider
_adaptiveSiriVolumeDictionary
_addAssetManagerEnabledConditions
_addAudio:
_addConditionsForIOSAOP
_addConditionsForIOSBargeIn
_addContinousAudioFingerprintEnabledConditions
_addDisabledConditions
_addListeningEnabledConditions
_addRemoteVADSignal:
_addSmartSiriVolumeEnabledConditions
_addVoiceTriggerAOPModeEnabledConditions
_addVoiceTriggerEnabledConditions
_additionalMetrics
_address
_adjustEndpointStartTimeWithVoiceTriggerEvent:
_adpAssertion
_alarmFiringState
_alarmSoundIsFiring
_alarmVolume
_alarmVolumeLevel
_alertBehaviorTypeFromAVVCOberrideType:
_alertDelegate
_alertPlaybackFinishTimeoutToken
_alertPlaybackFinishWaitingCompletions
_alertPlaybackFinishWaitingStreams
_alignBufferQueue
_allFramesInferenceLatency
_allowEndpointAssetDownloading
_allowLanguageDetectorAssetDownloading
_allowListWordCountThreshold
_allowSpeakerRecognitionAssetDownloading
_allowVoiceTriggerAccessoryAssetDownloading
_allowVoiceTriggerAssetDownloading
_alwaysOnProcessorController
_anchorMachAbsTime
_apQueue
_asbd
_asrDatapackInstallationStatus
_asrNode
_asrResultDeliveryTransaction
_assertionMonitor
_assertionTimeoutInterval
_asset
_assetManager
_assetQueryForAssetType:
_assetQueryQueue
_assetVersion
_assetsMigrationQueue
_asssetMetaUpdatedKey
_attSiriConnectionManager
_attSiriController
_attSiriSvcListener
_attSiriTransaction
_attachBluetoothSession
_atvRemoteDeviceID
_audioAlertProvider
_audioAlertProvidingDelegate
_audioAlertProvidingProxy
_audioBuffer
_audioBufferPool
_audioChunkFrom:to:
_audioChunkFrom:to:channelIdx:
_audioFile
_audioFilePathIndex
_audioFileReader
_audioFileWriter
_audioFormat
_audioInjectionEngine
_audioInjectionEngines
_audioInjectionXpcListener
_audioIsFromRemoteAccessory:
_audioLength
_audioLogDirectory
_audioLoggingBuffer
_audioMeterProvider
_audioMeterProvidingProxy
_audioMetricProvider
_audioMetricProvidingProxy
_audioPacketDeliveryCount
_audioPacketWatchdog
_audioPreprocessor
_audioProviderUUID
_audioRecordContext
_audioRecorder
_audioRecorderDidStartRecordingSuccessfully:streamHandleID:error:
_audioRecorderDidStopRecordingForReason:streamHandleID:
_audioRouteChangeMonitor
_audioRouteChanged:
_audioSampleCountToSkip
_audioSessionInfoObservers
_audioSessionInfoProvider
_audioSessionProvider
_audioSessionProvidingDelegate
_audioSessionProvidingProxy
_audioSessionState
_audioSrcNode
_audioStream
_audioStreamHandleId
_audioStreamHolding
_audioStreamId
_audioStreamProvider
_audioStreamProviding
_audioStreamProvidingDelegate
_audioStreamProvidingProxy
_audioStreamType
_audioStreamWithRequest:streamName:error:
_audioSystemRecovering
_audioTapProvider
_audioTimeConverter
_audioURL
_audioWaitingBuffer
_automaticEndpointingSuspensionEndTime
_availabilityChanged
_avvcAlertOverrideType:
_beepCanceller
_benchmarkXpcListener
_bertModel
_bestEarlyDetectSample
_bestEndDetectSample
_bestStartDetectSample
_bestToken
_bluetoothSession
_bluetoothSessionSetupGroup
_bufferedLPCM
_buildVersion
_builtInAudioInjectionEngine
_builtInDevice
_builtInSeconPassProgressProvider
_builtInSpeakerState
_builtInVoiceTriggerEvent
_builtInVoiceTriggerMetaData
_cachedAsset
_cachedEndpointAssets
_cachedEndpointerInfo
_cachedMitigationDecision
_cachedResult
_cachedScoresForLogging
_caesuraSPG
_calculateRMSWithFrameData:
_calculateSpeechVoicingLevel
_canActivate
_canFetchRemoteAsset:
_canProcessCurrentRequest
_canSetContext
_cancelAudioPacketWatchDog
_ccProfile
_certificate
_checkCanUseVoiceTriggerDuringCallEnabled
_checkFirstUnlocked
_checkNewAssetAvailablity
_checkNewAssetAvailablityForEndpoint
_checkPhraseSpotterEnabled
_checkSiriRestrictedOnLockScreen
_checkSoftwareUpdateCheckingState
_checkSpringBoardStarted
_checkVoiceTriggerEnabled
_circularBufferStartHostTime
_cleanUpMobileAssetV1Directory
_clearAudioProcessWaitingBufferIfNeeded
_clearDidStartRecordingDelegateWatchDog
_clearDidStopRecordingDelegateWatchDog
_clearEndpointHint
_clearLoggingFileTimer
_clearLoggingFileTimerCount
_clearPendingBuiltInVoiceTrigger
_clientConnections
_clientController
_clientLagThresholdMs
_clientType
_combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:
_compatibilityVersion
_compensateChannelDataIfNeeded:receivedNumChannels:
_completion
_completionBlock
_compressFilesInDirectory:matchingPredicate:compressedFileAvailable:
_compressFilesInDirectory:matchingPredicate:sortedByCreationDate:compressedFileAvailable:
_configFile
_configureAudioConverter:
_connectPluginDevice:
_connectedDevice
_connectedDeviceAddresses
_connectedDevices
_connection
_connections
_context
_convertAudioCapacity
_convertBufferedLPCM:allowPartial:timestamp:arrivalTimestampToAudioRecorder:
_convertDeactivateOption:
_convertPacketCount
_coreSpeechDaemonKeepAlived
_corespeechServiceListener
_countOfConsecutiveBoron
_crashEventDelegate
_createCircularBufferIfNeededWithNumChannel:playbackRoute:
_createClearLoggingFileTimer
_createDeInterleaverIfNeeded
_createMitigatorModelWithConfig:
_createModelAndRunInferenceForRcId:withCompletion:
_createPeriodicalDownloadTimer
_createResultDict
_createSampleRateConverterWithInASBD:outASBD:
_createSpeechDetectionVADIfNeeded
_createXPCClientConnection
_csAssetsDictionary
_csXPCActivity
_cs_initWithXPCObject:
_cs_isHashTableEmpty
_cs_xpcObject
_ctx
_currReqFirstSampleId
_currentAsset
_currentHEPAsset
_currentLanguageCode
_currentMaximumBufferSize
_currentOEPAsset
_currentRequestSampleRate
_currentSessionShouldDuckOnBuiltInSpeaker
_currentState
_daemonDidLaunch
_daemonWillShutdown
_darwinVoiceTriggerHandlerPool
_dataBufferNDEAPI
_dataBufferPositionNDEAPI
_deactivateAudioSession:error:
_deactivateEndTime
_deactivateStartTime
_debugLogPath
_decodeError:
_decodeJsonFromFile:
_decoderProcessedSampleCountForTV
_decodersForTV
_defaultDownloadOptions
_defaults
_deinterleaveBufferIfNeeded:
_deinterleaver
_delay
_delegate
_delegates
_deliverHistoricalAudioToStreamsWithRemoteVAD:
_deliverPostprocessAudioChunk:toStream:lastForwardedSampleCount:
_deregisterAudioSessionNotifications
_destination
_destroyVoiceController
_detachBluetoothSession
_detectedEndpointTime
_detectedToken
_deviceID
_deviceId
_deviceName
_deviceProductType
_deviceProductVersion
_deviceSpecificDBToLinearVolumeMappingCSSSVDeviceSimple:
_deviceSpecificLinearVolumeToDBMappingCSSSVDeviceSimple:
_deviceType
_deviceUID
_didActivate
_didAddAudio
_didCommunicateEndpoint
_didDetectSpeech
_didDetectedEndpoint
_didInstalledNewAdBlockerAsset
_didInstalledNewAsset
_didInstalledNewVoiceTriggerAsset
_didPlayStartAlertSoundForSiri:audioStream:
_didReceiveAOPListeningStateChange:
_didReceiveAVVCRecordingClientNumberChange:
_didReceiveAutomaticVolumeToggled:
_didReceiveBuiltinSpeakerStateChangeNotification:
_didReceiveCanUseVoiceTriggerDuringCallSettingChangedInQueue:
_didReceiveDaemonStateChanged:
_didReceiveFinishStartAlertPlaybackAt:
_didReceiveFirstUnlock:
_didReceiveFirstUnlockInQueue:
_didReceiveLanguageCodeUpdate
_didReceiveLanguageCodeUpdate:
_didReceiveMediaserverNotification:
_didReceiveNewAdBlockerAssetMetaData
_didReceiveNewSpeechEndpointAssetMetaData
_didReceiveNewVoiceTriggerAssetMetaData
_didReceivePhraseSpotterSettingChangedInQueue:
_didReceiveRestrictionChanged:
_didReceiveRestrictionChangedInQueue:
_didReceiveSelfTriggerChanged:
_didReceiveServerFeatures
_didReceiveSiriSettingChanged:
_didReceiveSleepGesture
_didReceiveSoftwareUpdateCheckingStateChanged:
_didReceiveSoftwareUpdateCheckingStateChangedInQueue:
_didReceiveSpeakerMuteStateChangeNotification:
_didReceiveSpeakerRecognitionAssetMetaData
_didReceiveSpringboardStarted:
_didReceiveSpringboardStartedInQueue:
_didReceiveVoiceTriggerSettingChanged:
_didReceiveVoiceTriggerSettingChangedInQueue:
_didReceiveWakeGesture
_didReceiveWirelessSplitterStateChange
_didReceivedNetworkAvailabilityChangedNotification:
_didReportEndpointDelay
_didSetScaleFactor
_didStartDelayInSeconds
_didTimestampFirstAudioPacket
_didTrigger
_disableBoostForDoAP
_disableEndpointer
_disableLocalSpeechRecognizer
_disablePrewarmLocalAsrAtStartRecording
_disconnect
_dismissalTimestamp
_downloadAsset:withComplete:
_downloadAssetCatalogForAssetType:complete:
_downloadTimer
_downloadTimerCount
_downloadingOption
_droppedPrediction
_droppingPrediction
_eagerResultId
_elapsedTimeWithNoSpeech
_emitEndpointDetectedEventWithEndpointTimeMs:endpointBufferHostTime:endpointerFeatures:endpointerDecisionLagInNs:extraDelayMs:endpointScore:asrFeatureLatencies:
_emitMHEndpointLatencyInfo:withRequestMHUUID:
_enableAlwaysOnVoiceTrigger
_enableCoreSpeechDaemonKeepAlive
_enablePolicy
_enabled
_encoder
_endPointerMetrics
_endSampleId
_endWaitTime
_endpointBufferHostTime
_endpointDelayReporter
_endpointLatencyInfo
_endpointLatencyQueue
_endpointMode
_endpointStartTimeInSec
_endpointStyle
_endpointThreshold
_endpointTime
_endpointTimeInMs
_endpointerDelegate
_endpointerImplDelegate
_endpointerListener
_endpointerModelVersion
_endpointerOperationMode
_energyBufferSize
_enforceEndpointHintWithRequestId:rcId:shouldAccept:featuresToLog:
_eosLikelihood
_epResult
_errorAlertBehavior
_estimatedStartHostTime
_estimatedTTSVolume:lowerLimit:upperLimit:TTSmappingInputRangeLow:TTSmappingInputRangeHigh:TTSmappingOutputRangeLow:TTSmappingOutputRangeHigh:
_eventToStateTransitions
_exportedInterface
_extraDelayFrequency
_fFile
_fallbackAudioSessionProvidingProxy
_fallbackAudioSessionReleaseProvider
_falseWakePhraseDictionary
_featuresAtEndpoint
_fetchAssertionMonitor
_fetchAudioDecoderForTV:
_fetchCurrentMetrics
_fetchEndpointMobileAssetWithLanguage:
_fetchHearstConnectionState
_fetchHearstRoutedState
_fetchHistoricalAudioAndForwardToStream:remoteVAD:
_fetchInputOriginWithRecordContext:
_fetchJarvisConnectionState
_fetchMitigationAssets
_fetchMitigationConfig
_fetchRemoteAssetOfType:withLanguage:completion:
_fetchRemoteAssetOfType:withLanguage:query:completion:
_fetchRemoteMetaData
_fetchRemoteRecordClientWithDeviceId:streamHandleId:
_fetchRequiredAssets
_fetchSiriInputSourceOutOfBandState
_fetchSpeakerStateActiveInfo
_fetchSpeakerStateMutedInfo
_fetchSystemUserActivityState
_fetchVoiceTriggerAssets
_fileOption
_findLatestInstalledAsset:
_firstAudioPacketTimestamp
_firstAudioSampleSensorTimestamp
_firstAudioStartSampleCount
_firstPartialResultTime
_firstPassInfoGeneratedTime
_firstPassInfoProcessedTime
_firstPassMyriadGoodnessScore
_firstPassSource
_firstPassTriggerInfo
_firstPktLatency
_firstSpeechFrameAudioTsInMs
_firstUnlockMonitor
_firstUnlockNotified
_firstUnlocked
_firstWordDuration
_firstpassMetrics
_flexKwdNode
_floatBuffer
_footprint
_forceBuildGraph:
_forwardAudioChunk:toStream:
_forwardAudioChunkForTV:toStream:
_frameDurationMs
_getAddressWithBTDevice:
_getAsrInputoriginFromContext:
_getAudioProvideWithContext:streamClientType:
_getAudioRecorderWithError:
_getCSHybridEndpointerConfigForAsset:
_getConnectedBluetoothDeviceAddressesFromLocalDevice:
_getContentsOfDirectory:
_getCurrentHEPAsset
_getDeviceSimpleOutputLinearVolumeFordBFSValue:
_getDeviceSimpledBFSForOutputLinearVolume:
_getDevicedBFSForInputLinearVolume:
_getFakeEndpointAsset
_getFirstTokenDurationFromSpeechPackage:
_getFloatBufferData:
_getHighestRemoraFirstPassGoodnessScore:
_getHomeUserIdForSharedSiriId:withCompletion:
_getInputoriginFromRecordType:
_getLeadingSilenceDurationFromSpeechPackage:
_getModelPathFromInstallationStatusString:
_getMusicVolumeDBCSSSVDeviceDefault:
_getMusicVolumeDBCSSSVDeviceSimple:
_getNumberFromASVDictionaryForKey:category:default:
_getOEPVersionFromPath:
_getOrCreateAudioLogDirectory
_getProcessedAudioDurationFromSpeechPackage:
_getRecordSettingsWithRequest:
_getUserOffsetFromMusicVolumeDB:
_getUserSpeakingEndedTimeFromSpeechPackage:
_getVoiceTriggerAssetFromAssetManager:
_getVoiceTriggerAssetFromAssetManagerWithLocale:completion:
_getVoiceTriggerAssetIfNeeded:
_getWirelessSplitterInfoFromLocalDevice:
_gibraltarVoiceTriggerHandler
_handleAFTMResults:
_handleActivateEventMesssage:client:
_handleAlertProvidingDelegateDidFinishAlertPlayback:
_handleAlertProvidingDelegateMessageBody:
_handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:
_handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:
_handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:
_handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:
_handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:
_handleAudioDeviceInfo:messageBody:client:
_handleAudioProvidingMessage:messageBody:client:
_handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:
_handleAudioStreamPrepareMessage:messageBody:client:
_handleAudioStreamRequestMessage:messageBody:client:
_handleAudioSystemFailure
_handleCallActiveDidChangeNotification:
_handleClearLoggingFileTimer
_handleClientError:client:
_handleClientEvent:
_handleClientMessage:client:
_handleDidAudioStartWithResult:error:
_handleDidRecognizedFinalSpeechPackage:requestId:metadata:
_handleDidRecognizedSpeechPackageForEagerRecognitionCandidate:requestId:rcId:metadata:
_handleDidStartAudioStreamWithResult:error:
_handleDidStop
_handleDidStopAudioStreamWithReason:
_handleDidStopStreamUnexpectly
_handleEnablePolicyEvent:
_handleEnableVoiceTriggerWithSiriAssertionRequest:
_handleEndpointVoiceTriggerAsset:completion:
_handleInterruption:
_handleIsNarrowband:messageBody:client:
_handleIsRecordingMessage:messageBody:client:
_handleListenerDisconnectedError:
_handleListenerError:
_handleListenerEvent:
_handleListenerMessage:
_handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:
_handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:
_handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:
_handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:
_handleNewRemoteConnection:
_handlePhraseSpotterBypassRequest:
_handlePingPongMessage:client:
_handlePlaybackRouteMessage:messageBody:client:
_handleRaiseToSpeakBypassRequest:
_handleRecordDeviceInfo:messageBody:client:
_handleRecordRouteMessage:messageBody:client:
_handleRecordSettings:messageBody:client:
_handleServiceConnectionLostIfNeeded
_handleSessionIDRequestMessage:messageBody:client:
_handleSessionInfoProvidingDelegateInterruptionNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:
_handleSessionInfoProvidingDelegateMessageBody:
_handleSessionInfoProvidingDelegateRouteChangeNotification:
_handleSessionProvidingDelegateBeginInterruption:
_handleSessionProvidingDelegateBeginInterruptionWithContext:
_handleSessionProvidingDelegateDidChangeContext:
_handleSessionProvidingDelegateDidSetAudioSession:
_handleSessionProvidingDelegateEndInterruption:
_handleSessionProvidingDelegateMessageBody:
_handleSessionProvidingDelegateStreamHandleIdInvalidation:
_handleSessionProvidingDelegateWillSetAudioSession:
_handleSessionProvidingRequestTypeActivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeDuckAudioDevice:messageBody:client:
_handleSessionProvidingRequestTypeDuckDefaultOutputAudioDevice:messageBody:client:
_handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:
_handleSessionProvidingRequestTypeEnableSmartRoutingConsideration:messageBody:client:
_handleSessionProvidingRequestTypePrewarmMessage:client:
_handleSessionProvidingRequestTypeReportDynamicActivityAttribute:messageBody:client:
_handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:
_handleSetCurrentConextMessage:messageBody:client:
_handleSetXPCClientTypeMessage:messageBody:client:
_handleShouldAcceptEagerResultWithRequestId:rcId:duration:shouldAccept:featuresToLog:
_handleStartAudioStreamMessage:messageBody:client:
_handleStartProcessingWithRecordContext:completion:
_handleStopAudioStreamMessage:messageBody:client:
_handleStopDeliverLocalSpeechRecognition
_handleStopProcessing
_handleStopSpeechRecognitionTaskIfNeeded:
_handleStreamProvidingDelegateChunkAvailable:
_handleStreamProvidingDelegateChunkForTVAvailable:
_handleStreamProvidingDelegateDidStopUnexpectly:
_handleStreamProvidingDelegateHardwareConfigChange:
_handleStreamProvidingDelegateMessageBody:
_handleSupportsDuckingWithStreamHandleID:messageBody:client:
_handleVoiceTriggerAssetWithCompletion:
_handleVoiceTriggerInfoMessage:messageBody:client:
_handleVoiceTriggerStatsFetchEvent:client:
_handleVoiceTriggerXPCServiceMessage:client:
_handleVoiceTriggeredSiriSessionCancelled
_handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:streamHandleId:
_handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:streamHandleId:
_hasConnectedAVCall
_hasDeviceTemporaryPairedNotInContacts
_hasLocalPendingTwoShot
_hasPendingActivationForType:
_hasReceivedEarlyDetectNDEAPIResult
_hasReceivedNDEAPIResult
_hasReported
_hasSetAlertDictionary
_hepAudioOriginInMs
_hidCallbackQueue
_holdRecordingExceptionIfNeeded:
_holdRecordingTransactionIfNeeded
_holdTransactionForNldaProcessing
_holdTransactionForUresProcessing
_hosttime
_hybridClassifier
_hybridClassifierQueue
_hybridEndpointer
_implDelegate
_inUseServices
_inferenceTimeSpan
_init
_initialState
_injectionAudioFileList
_injectionCompletionNotifyBlocks
_injectionEngine
_injectionStartNotifyBlocks
_inputRoute
_installedAssetOfType:query:withLanguage:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_interactiveLocalSpeechRecognizer
_interspeechWaitTime
_invalidateLocalSpeechRecognizer:
_isASRFeatureFromServer
_isActiveRequest
_isActiveSession
_isAnalyzeMode
_isAnchorTimeBuffered
_isAttachingBluetoothSession
_isAttending
_isAutomaticVolumeEnabled
_isBluetooth
_isBuiltInDeviceFromDeviceId:
_isCommandControlStreaming
_isConnected
_isDuckingOnSpeakerOutputSupportedWithCurrentRoute
_isEnabled
_isFileLoggingEnabled
_isForwarding
_isHearstConnected
_isHearstRoutedAndWithNoPhoneCall
_isHubRequest
_isInPhoneCallStateWithHSPhoneCallCapableRoute
_isJarvisConnected
_isListenPollingStarting
_isListening
_isListeningEnabled
_isMediaPlayingNow
_isNNVAD
_isNarrowBand:
_isOSDIncludedInAsset:
_isOpportuneSpeakListening
_isPhraseSpotterBypassed
_isPhraseSpotterEnabled
_isRaiseToSpeakBypassed
_isReady
_isReadyToUse
_isRecording
_isRemoraSecondPassRunning
_isRequestTimeout
_isRestricted
_isRetryRecommendedWithResult:
_isSecondChanceRun
_isSecondPassRunning
_isShadowModeEnabled
_isSiriEnabled
_isSiriInputSourceOutOfBand
_isSoftwareUpdateCheckingRunning
_isSpeaking
_isSpeechRecognizerTaskSupported:
_isSpringBoardStarted
_isStartSampleCountMarked
_isStreaming
_isVoiceTriggerEnabled
_isVoiceTriggerEvent:
_isWeakStream
_keywordAnalyzer
_keywordAnalyzerNDEAPI
_kwdScore
_kwdSpotter
_language
_languageCodeUpdateMonitor
_lastAggTimeFalseWakeUp
_lastArrivalTimestampToAudioRecorder
_lastAudioRecorderContext
_lastCommunicatedPeer
_lastDetectedVoiceTriggerBeginSampleCount
_lastEndpointEagerResultTime
_lastEndpointHintCompletion
_lastEndpointHintDuration
_lastEndpointHintFeatures
_lastEndpointHintRCId
_lastEndpointPosterior
_lastForwardedSampleCount
_lastKnowServerFeaturesLatency
_lastKnownConsecutiveBoronStartSampleCount
_lastKnownOSDFeatures
_lastKnownServerEPFeatures
_lastReportedEndpointTimeMs
_lastSampleCount
_lastServerFeatureTimestamp
_lastSilencePosterior
_lastTimestamp
_lastUpdatedAssetType
_latestContext
_latestPluginStreamId
_latestResult
_latestVolume
_latestVolumeTime
_leadingSilenceDuration
_leadingUtteranceAudioFile
_leadingUtteranceLogger
_listenPollingTimer
_listenPollingTimerCount
_listener
_loadAndSetupEndpointerAssetIfNecessary
_localDevice
_localSRBridgeListener
_localSpeechRecognizerDeliverAudioDuration
_localSpeechRecognizerQueue
_localSpeechRecognizerState
_localSpeechRecognizerTaskString
_logAFTMEndMsgWithScore:analyzedSamples:
_logAFTMStartMsg:taskType:
_logFinalMitigationDecisionToSelf:
_logLatticeRNNResults:
_logMHOdldFalseTriggerMitigationScores:withOdldScores:withOdldScoreThreshold:withSuccess:
_logResourceNotAvailableErrorIfNeeded:
_logResultToVTDirectory
_logSpeakerFalseTriggerMitigationScore:withSpeakerMatchScore:withSpeakerScoreThreshold:withAudioDuration:withSuccess:
_logURESEndMessageWithScore:threshold:assetVersion:
_logURESFailureMsgInput:
_logURESResultsForInput:withOutput:
_loggingQueue
_lpcmBitDepth
_lpcmIsFloat
_machServiceName
_makeStandaloneMitigation
_makeTimestampedAudioLogFilenameWithPrefix:suffix:
_manualDuckingHandler
_mapInputOriginFromAssetToCSAudioRecordType:
_mapScoresToSharedSiriId:
_markTimeToFirstWordMetric
_maxFingerprintBufferSize
_mediaserverdDidRestart
_mhId
_micUsageReporter
_minimumDurationForEndpointer
_mitigationAsset
_mitigationDecisions
_mitigator
_modelData
_modelExeQueue
_modelHash
_modelLocale
_monitor
_multimodalEndpointerEnabled
_musicVolumeDB
_musicVolumeLevel
_name
_needResetAudioInjectionIndex:
_nldaClassifierNode
_nnvadEndpointer
_nodesCache
_noiseLevelChannelBitset
_noiseLowerPercentile
_noiseMicSensitivityOffset
_noiseMicSensitivityOffsetDeviceSimple
_noiseTTSMappingInputRangeHigh
_noiseTTSMappingInputRangeLow
_noiseTTSMappingOutputRangeLow
_noiseTimeConstant
_noiseUpperPercentile
_noiseWeight
_notePossiblePlayPausedStateChange:
_notificationKey
_notifyActivationEvent:completion:
_notifyAssetsUpdate
_notifyHearstConnectionState:
_notifyHearstRoutedState:
_notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:
_notifyJarvisConnectionState:
_notifyObserver:
_notifyObserver:mediaIsPlayingState:
_notifyObserver:splitterState:shouldDisableSpeakerVerificationInSplitterMode:
_notifyObserver:withBuiltinSpeakerState:
_notifyObserver:withDaemonState:
_notifyObserver:withEnabled:
_notifyObserver:withLanguageCode:
_notifyObserver:withMediaserverState:
_notifyObserver:withNetworkAvailability:
_notifyObserver:withSoftwareUpdateCheckingRunning:
_notifyObserver:withStarted:
_notifyObserver:withUnlocked:
_notifySiriInputSourceOutOfBandState:
_notifyStopCommandControl
_notifyStopOpportuneSpeakWithDelay:
_notifyToken
_notifyXPCDisconnectionToProxies
_nowString
_numChannels
_numOfAVVCRecordingClients
_numOfAudioPackets
_numOfChunksReceived
_numOfConsecutiveBoronActivationThreshold
_numOfValidTrailingPackets
_numOfValidTrailingSpeechPackets
_numSamplesProcessed
_numSamplesProcessedBeforeAnchorTime
_numberOfChannels
_numberOfTotalFramesETFT
_numberOfVoicingFrames
_observers
_odldModelAnalyzer
_odldProcessor
_onAudioPacketWatchdogFire
_opportuneSpeakListeningType
_opportuneSpeakListnerTestService
_opusConverter
_opusDecoders
_opusOutASBD
_osTransaction
_osdAnalyzer
_osdFeaturesAtEndpoint
_osdMode
_osdNode
_osdQueue
_outASBD
_outASBDWithNumChannels:
_outBufferScaleFactor
_outPacketSizeInSec
_outputRoute
_overrideEnabled
_overridePath
_pNonInterleavedABL
_pairedDeviceAddresses
_pauseCounts
_pauseSSVProcessing
_payloadData
_pendingActivationEvent
_pendingBuiltInVoiceTriggerCompletionBlk
_pendingBuiltInVoiceTriggerDetectedTime
_pendingBuiltInVoiceTriggerResult
_pendingCompletion
_pendingRecordingStopUUID
_pendingRemoraVoiceTriggerCompletionBlk
_pendingRemoraVoiceTriggerDetectedTime
_pendingRemoraVoiceTriggerDeviceId
_pendingRemoraVoiceTriggerResult
_pendingStartCompletions
_pendingStopCompletions
_pendingTwoShotVTToken
_performPostBuildInstallWithCompletion:
_permanentOffsetFactor
_permanentOffsetIsEnabled
_phoneCallStateMonitor
_phraseSpotterEnabledDidChange
_playbackDeviceTypeList
_playbackRoute
_popRemoteVADSignal
_postBuildInstallService
_postEpilogueAudioStream
_preEpilogueAudioStream
_prefetchedAsset
_preheatWithLanguage:preheatSource:
_preheatWithLanguage:preheatSource:shouldDownloadMissingAsset:
_prepareAudioStream:request:completion:
_prepareAudioStreamSync:request:error:
_prepareSoundLevelBufferFromSamples:soundType:
_presetLocalSpeechRecognizer
_preventSystemSleepAssertionId
_preventSystemSleepPowerAssertion
_preventUserIdleSystemSleepAssertionId
_primaryStream
_processAudioBuffer:audioStreamHandleId:arrivalTimestampToAudioRecorder:
_processAudioBuffer:remoteVAD:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
_processAudioChain:audioStreamHandleId:remoteVAD:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
_processAudioChunk:
_processAudioChunk:soundType:
_processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processGradingDataFetchCommandWithRequest:fromSenderID:withReply:
_processParallelRecordingCommandWithRequest:fromSenderID:withReply:
_processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processSpeakerRecognitionResult:
_processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:
_processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:
_processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:
_processedAudioDurationInMilliseconds
_processedAudioInSeconds
_processedSampleCount
_productIdentifier
_protocolVersion
_providerDelegate
_proxy
_proxyObject
_psrAudioProcessor
_queryShouldAcceptEagerResultForDuration:requestId:rcId:
_queue
_rcHandler
_rcProcessingListener
_readAllowListVocabFromFile:
_readAudioBufferAndFeed
_readParametersFromHEPAsset:
_receiveParallelRecordingFromPeerId:recordingInfo:withReply:
_receiveVoiceGradingDataFromPeerId:requestInfo:withReply:
_receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:
_receivedHearstRoutedEvent:
_receivedNewAssetUpdate:
_receivers
_recognizer
_recognizerBuffer
_reconfigureRequiredNodes:enforceAttendingAudioNode:
_recordBasePacketsPerSecond
_recordContext
_recordCtx
_recordDeviceIndicator
_recordDeviceInfo
_recordEventUUID
_recordQueue
_recordStateQueue
_recordingDidStop
_recordingStartTime
_recordingTransaction
_recordingWillStartGroup
_refreshSpeakerRecognitionAssets
_registerAudioRouteChangeNotification
_registerAudioSessionNotifications
_registerInterruptionNotification
_reinitializeSmartSiriVolumeWithAsset:
_rejectionMHUUID
_releaseAssertionForAssertionId:details:
_releaseAttSiriTransactionIfNeeded
_releaseNldaProcessingTransaction
_releaseRecordingTransactionIfNeeded
_releaseRecordingTransactionIfNeededWithToken:
_releaseUresProcessingTransaction
_remoraSecondPassProgressProvider
_remoteAccessoryStreamIdSet
_remoteDeviceProductIdentifier
_remoteDeviceUID
_remoteDeviceUIDString
_remoteInterface
_remoteRecordClient
_remoteVADAlignBuffer
_remoteVADAlignCount
_remoteVADSPGRatio
_reportHardEndpointToXPCClientWithTime:endpointerMetrics:
_reportMetrics
_reportResultToAnalytics
_reportUEIUserSpeakingContext
_reportsDynamicActivityAttribute:bundleId:
_requestHistoricalAudioDataSampleCount
_requestHistoricalAudioDataWithHostTime
_requestId
_requestMHUUID
_requireSingleChannelLookup
_requiredNodes
_requiresHistoricalBuffer
_reset
_resetAlignBuffer
_resetCircularBufferStartTime
_resetLocalSpeechRecognizerParameters
_resetStartAnalyzeTime
_resumeSSVProcessing
_rmsSamplesForEntireAudio
_route
_runAssetQuery:completion:
_runningSampleCount
_sampleRate
_sampleRateConverter
_samplesFed
_saveRecordingBufferFrom:to:toURL:
_saveSamplesSeenInReset
_scaleFactor
_scaleInputWithInRangeOutRange:minIn:maxIn:minOut:maxOut:
_schduleDidStartRecordingDelegateWatchDogWithToken:
_scheduleAlertFinishTimeout:
_scheduleAudioPacketWatchDog
_scheduleDidStartRecordingDelegateWatchDog
_scheduleDidStopRecordingDelegateWatchDog
_scheduleDidStopRecordingDelegateWatchDog:
_scheduleRecordingTransactionReleaseTimer
_scheduledFutureSample
_secondChanceHotTillMachTime
_secondPassAssetLoadCompleteTime
_secondPassAssetLoadStartTime
_secondPassAssetQueryCompleteTime
_secondPassAssetQueryStartTime
_secondPassCheckerModelKeywordDetectionEndTime
_secondPassCheckerModelKeywordDetectionStartTime
_secondPassFirstAudioPacketReceptionTime
_secondPassLastAudioPacketReceptionTime
_selectedChannel
_sendAcousticGradingDataToPeerId:
_sendCoreSpeechGradingDataToPeerId:
_sendCoreSpeechMagusGradingDataToPeerId:
_sendDelegateMessageToClient:
_sendGeckoSpeechLogsToPeerId:
_sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:
_sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:withCompletion:
_sendMessage:connection:completion:
_sendMessageAsync:completion:
_sendReplyMessageWithResult:error:event:client:
_sendReplyMessageWithResult:event:client:
_sendVoiceProfile:toPeerId:
_sendVoiceProfileUpdateTriggerToPeerId:forLocale:
_sendVoiceTriggerGradingDataToPeerId:
_sendXPCClientType
_serverFeatureLatencies
_serverFeatureLatencyDistribution
_serverFeaturesQueue
_serverFeaturesWarmupLatency
_serverState
_serviceProxyWithErrorHandler:
_servicesListener
_servicesListenerShouldAcceptNewConnection:
_sessionAttached:result:
_sessionDelegate
_sessionDetached:
_sessionEventDelegate
_sessionInProgress
_sessionInfoQueue
_sessionTerminated:
_setAllowMixableAudioWhileRecording:
_setAsset:
_setAsset:forTask:
_setDefaultParameters
_setLatestRecordContext:
_setMaximumBufferSizeFromInUseServices
_setRecordingStartTimeWithStartStreamOption:audioRecordContext:voiceTriggerInfo:
_setStartAnalyzeTime:
_setUpLocalDevice
_setupAttSiriServiceListener
_setupAudioInjectionEngineWithAudioURL:
_setupAudioSrcNodeWithSiriClientStream:
_setupDistnoteHandlers
_setupEndpointListener
_setupLeadingUtteranceLogger
_setupLocalSpeechRecognitionListener
_setupNNVADEndpointer
_setupNotifyHandlers
_setupRCProcessingListener
_setupRecognizerStateForMagusAsrNode
_setupSSRControllerWithAudioContext:withVoiceTriggerEventInfo:
_setupSSRListener
_sha1:
_sha256:
_shadowMicScoreCreator
_shadowMicScoreThresholdForVAD
_sharedUserIdsSet
_shouldApplyAllowListOverride:
_shouldCleanupVoiceProfile
_shouldDisableLocalSpeechRecognizerWithOption:audioRecordContext:
_shouldDisableSpeakerVerificationInSplitterMode
_shouldDuckOnBuiltInSpeaker
_shouldHandleMitigationDecision:
_shouldHandleStartPendingOnStopping:withStopReason:
_shouldInjectAudio
_shouldLogResourceNotAvailableError
_shouldPauseLKFSProcess
_shouldPauseSSVProcess
_shouldProcessAudio
_shouldReportBoron
_shouldResetAdsDictionary
_shouldRunMitigationForRcId:forTask:
_shouldStopRecording
_shouldUpdateMitigationResult
_shouldUseLegacyPath:
_shouldUsePhaticWithRecordContext
_shouldUseRemoteBuiltInMic:
_shouldUseRemoteRecorder
_signalFractional
_signalSource
_signature
_silencePosterior
_siriClientAudioStartStreamOption
_siriClientBehaviorMonitor
_siriClientStream
_siriEnabledMonitor
_siriSessionUUID
_siriStateObserver
_skipAlertBehavior
_smartSiriVolume
_smartSiriVolumeLKFS
_smartSiriVolumeNoiseLevel
_smtConnection
_softwareUpdateCheckingState
_spIdSiriDebugGradingDataRootDirectory
_spIdSiriDebugTrainedUsersFilePathForLocale:
_spIdSiriDebugVTDataDirectory
_spIdSiriDebugVoiceProfileCacheDirectoryForProfile:locale:
_spIdSiriDebugVoiceProfileRootDirectoryForProfile:locale:
_spIdSiriDebugVoiceProfileStoreRootDirectory
_spIdSiriDebugVoiceProfileStoreRootDirectoryForLocale:
_speakerRecognitionAudioLogsGradingDir
_speakerRecognitionScores
_speechDetectionNode
_speechEndpointDetected
_speechHasAcceptedResultCandidate
_speechManager
_speechModelTrainingXpcManager
_speechRecognitionSettings
_speechVoiceLevel
_spgEndpointAnalyzer
_splitterDeviceList
_splitterEnabled
_splitterState
_ssrAssets
_ssrController
_ssrListener
_ssrNode
_ssvEnablePolicy
_ssvManager
_startActivation
_startAlertBehavior
_startAnalyzeSampleCount
_startAudioFeedingTimer
_startAudioStream:option:completion:
_startAudioStreamForAudioInjectionWithAVVCContext:
_startClearLoggingFilesTimer
_startDeliverLocalSpeechRecognitionResultsWithRequestId:
_startDetectionTime
_startDownloadingAsset:progress:completion:
_startListenPolling
_startListenPollingWithInterval:completion:
_startListenWithCompletion:
_startLocalSpeechRecognizerIfNeeded
_startMonitoring
_startMonitoringWithQueue:
_startObservingAVCallActiveChange
_startObservingOtherAppRecordingState
_startObservingSpeechDetectionVADPresence
_startObservingSystemControllerLifecycle
_startPendingOnStoppingStreamToCompletionDict
_startPendingOnStoppingStreams
_startPendingStreams
_startPeriodicalDownload
_startRecordingHostTime
_startRecordingSampleCount
_startRecordingWatchDogToken
_startRequestWithCompletion:
_startRequestWithContext:withVtei:completion:
_startRequestWithContext:withVtei:withVTAssets:taskType:completion:
_startSampleCount
_startStreamOption
_startWaitTime
_stateNotificationQueue
_stateSerialQueue
_stopAlertBehavior
_stopAudioStream:option:completion:
_stopListening
_stopPendingStreams
_stopPeriodicalDownload
_stopPreviousRecognitionTaskIfNeededWithNewRequestId:
_stopRecordingHostTime
_stopRecordingWatchDogToken
_stopTrackingRemoteAccessoryStreamId:
_storeMitigationDecision:forRCId:
_streamClientType
_streamHandleQueue
_streamHolders
_streamRequest
_streamState
_streamStateName:
_streaming
_streamingUUID
_streams
_subscribeEventMonitors
_supportAVSystemVolumeFetch
_supportDoAP
_supportedInputOrigins
_supportedRecordType
_supportsSSR
_supportsSpeechRecognitionOnDevice
_switchToListeningMode
_switchToRecordingMode
_systemControllerDied:
_systemUserActivityNotificationToken
_tandemStreams
_targetQueue
_taskName
_taskThresholdMap
_tearDownBuildGraph:
_tearDownLocalDevice
_tearDownSpeechDetectionVADIfNeeded
_threshold
_thresholds
_thresholdsMap
_timeoutInterval
_timer
_timerFiringState
_timerSoundIsFiring
_timestamp
_token
_totalAudioRecorded
_totalNumberSamples
_trackRemoteAccessoryStreamIdIfNeeded:
_trailingPktLatencies
_trailingPktSpeechLatencies
_trailingSilenceDuration
_trailingSilenceDurationAtEndpoint
_transitions
_trialAssetDownloadMonitor
_trialAssetManager
_trialAssetMonitor
_trialDownloadMonitor
_triggerAbsStartSampleId
_triggerInfoProviding
_triggerMachTime
_triggerNotifiedMachTime
_type
_uid
_updateAccessibleEndpointerThresholdIfNeed
_updateAssetWithCurrentLanguageForAssetType:
_updateAssetWithLanguage:
_updateAssetWithLanguage:assetType:
_updateEndpointerDelayedTriggerByMhId:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_updateLanguageCodeForRemoteVTEIResult:
_updateOEPAssetsWithLanguage:
_updateRemoteDeviceIdFromAVVCIfNeeded
_updateSignalsFrom:to:
_updateSupportedInputOrigins
_upsampler
_uresNode
_url
_useCustomizedRecordSettings
_useDefaultServerFeaturesOnClientLag
_useLegacyPath
_useOpportunisticZLL
_userActivityStatus
_userIntentValidForSeconds
_userIntentVolume
_userOffsetInputRangeHigh
_userOffsetInputRangeLow
_userOffsetOutputRangeHigh
_userOffsetOutputRangeLow
_userSpeakingEndedHostTime
_userSpeakingEndedTimeInMs
_userSpeakingStartedHostTime
_userSpeakingStartedTimeInMs
_uuid
_vadScore
_version
_voiceController
_voiceControllerCreationQueue
_voiceControllerWithError:
_voiceIdXpcListener
_voiceIdentificationBatchId
_voiceProfileManager
_voiceTriggerAssetDownloadMonitor
_voiceTriggerBatchId
_voiceTriggerDuringCallEnabledDidChange
_voiceTriggerEnabled
_voiceTriggerEventInfo
_voiceTriggerFireMachTime
_voiceTriggerSampleCount
_voiceTriggerXpcListener
_vtAsset
_vtEndInSampleCount
_vtExtraAudioAtStartInMs
_vtSecondPassAnalyzer
_waitingForAlertFinish
_waitingForDidStart
_wakeGestureTimestamp
_wordCount
_workQueue
_xpcClientType
_xpcConnection
_xpcListener
_xpcReplyQueue
_zeroCounter
_zeroFilter
aFTMNode
absoluteHostTimeToContinuousHostTime:
acceptEagerResultWithFeatures:featuresToLog:
accessibleEndpointerEnabled
accessibleEndpointerThreshold
accessoryId
accessorySiriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:forAccessory:
accessorySiriClientBehaviorMonitor:didStopStream:reason:withEventUUID:forAccessory:
accessorySiriClientBehaviorMonitor:willStartStreamWithContext:option:forAccessory:
accessorySiriClientBehaviorMonitor:willStopStream:reason:forAccessory:
accessoryVoiceTriggerMetaDataByDeviceId
acousticAnalyzer
acousticFTMScores
acousticSLResultForContext:completion:
acquireAssertion
acquireAssertionForActiveUser
acquireAssertionForIdleUser
activateAudioSessionForStream:isPrewarm:error:
activateAudioSessionForStream:isPrewarm:recordMode:error:
activateAudioSessionWithReason:streamHandleId:error:
activateConnection
activateStartTime
activationAssertions
activationDeviceUID
activationEventNotificationHandler:event:completion:
activationInfo
activationMetadata
activationMode
activationXpcListener
activeAudioRouteDidChange:
activeChannel
activeEndpointer
adBlockerAssetDecoderWithVersion:
adCompanionServiceProvider
addAudio:
addAudio:numSamples:
addAudioChunk:
addAudioSamples:count:
addConditions:
addDataToBuffer:
addDeviceIntoSplitterDeviceList:
addEntriesFromDictionary:
addKeyValuePair:with:
addKeyValuePairForQuery:assetType:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forAssetType:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPackets:audioStreamHandleId:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
addPktInfoWithTimestamp:arrivalTimestamp:currentMachTime:
addReceiver:
addSamples:numSamples:
addSamples:numSamples:atHostTime:
addSamples:timestamp:arrivalTimestampToAudioRecorder:
addTransitionFrom:to:for:
addTransitionFromAnyStateTo:for:
addUtterances:toProfile:withContext:withCompletion:
addVTAcceptEntryAndSubmit:
addVTRejectEntry:truncateData:
additionalMetrics
adpAssertion
alarmState
alarmVolume
alertDelegate
alertPlaybackFinishWaitingCompletions
alertPlaybackFinishWaitingStreams
alertStartTime
alignBufferQueue
allDeviceDisconnected
allFramesInferenceLatency
allInstalledAssetsOfType:language:
allValues
allowAdBlockerAssetDownloading
allowEndpointAssetDownloading
allowExtendedRingBufferSize
allowKeywordsFile
allowLanguageDetectorAssetDownloading
allowListWordCountThreshold
allowSpeakerRecognitionAssetDownloading
allowSuddenTermination
allowVocabList
allowVoiceTriggerAccessoryAssetDownloading
allowVoiceTriggerAssetDownloading
alwaysOnProcessorController
alwaysOnVoiceTriggerEnabled
analyzer:hasFinalResult:
analyzer:hasPartialResult:
anchorMachAbsTime
announceCallsEnabled
appDomain
appendAudioData:
appendBytes:length:
appendData:
appendFormat:
appendString:
applyLowerAndUpperBoundsToVolume:
applyLowerAndUpperBoundsToVolumeOffset:
applyNegative20dBGainToFloatBuffer:
applyNegative20dBGainToShortBuffer:
applyNegative32dBGainToFloatBuffer:
applyNegative32dBGainToShortBuffer:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
arrivalHostTimeToAudioRecorder
asrDatapackInstallationStatus
asrResultDeliveryTransaction
assertionMonitor
assertionTimeoutInterval
asset
assetChangeMonitorDidDetectAssetChange:
assetForAssetType:resourcePath:configVersion:
assetForAssetType:resourcePath:configVersion:assetProvider:
assetForCurrentLanguageOfType:
assetForCurrentLanguageOfType:completion:
assetManager
assetManagerEnabledPolicy
assetOfType:language:
assetOfType:language:compatibilityVersion:completion:
assetOfType:language:completion:
assetOfType:providerType:language:completion:
assetProvider
assetServerUrl
assetStatus:
assetVersion
assetsMigrationQueue
assistantAudioFileLogDirectory
attSiriAttendingFailed
attSiriAttendingTimeoutTriggered
attSiriAudioSrcNodeDidStartRecording:successfully:error:
attSiriAudioSrcNodeDidStop:
attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:
attSiriConnectionManager
attSiriController
attSiriDidDetectAttendingTrigger:
attSiriNode:classifierScore:detailedResult:
attSiriNode:didDetectEndOfSpeechAt:
attSiriNode:didDetectHardEndpointAtTime:withMetrics:
attSiriNode:didDetectSpeechWithTriggerInfo:
attSiriNode:didDetectStartOfSpeechAt:
attSiriNode:didDetectStartpointAtTime:
attSiriNode:didMitigate:withScore:taskType:
attSiriNode:didUpdateAnchorMachAbsTime:numSamplesProcessedBeforeAnchorTime:isAnchorTimeBuffered:
attSiriNode:didUpdateAttentionState:
attSiriNode:didUpdateFirstAudioPacketTimestamp:firstAudioSampleSensorTimestamp:firstAudioStartSampleCount:
attSiriNode:didUpdateOSDFeatures:withFrameDurationMs:
attSiriNode:didUpdateWithSpeakerInfo:
attSiriNode:ssrFinishedProcessingWithSpeakerInfo:
attSiriNode:triggerReportedFromFlxKwdSpotter:
attSiriNodeDidNotDetectSpeechWithTimeout
attSiriStateMonitor:didRecieveAttSiriStateChange:
attSiriSvcListener
attSiriTransaction
attSiriUresNode:withUresScore:
attachDevice:
attachProgressCallBack:
attachTandemStream:toPrimaryStream:completion:
attachToMasterStreamWithCompletion:
attachToPrimaryStreamWithCompletion:
attendingState
attributes
atvRemoteDeviceID
audioAlertProvider
audioAlertProvidingDelegate
audioAlertProvidingDidFinishAlertPlayback:ofType:error:
audioAlertProvidingProxy
audioBuffer
audioChunkFrom:to:
audioChunkFrom:to:channelIdx:
audioChunkToEndFrom:
audioConverterBitrate
audioConverterDidConvertPackets:packets:durationInSec:timestamp:arrivalTimestampToAudioRecorder:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:arrivalTimestampToAudioRecorder:wasBuffered:receivedNumChannels:
audioDeviceInfoWithStreamHandleId:recordDeviceIndicator:
audioEngineAudioChunkForTvAvailable:audioChunk:
audioEngineBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:
audioEngineDidStartRecord:audioStreamHandleId:successfully:error:
audioEngineDidStopRecord:audioStreamHandleId:reason:
audioFeedTimer
audioFileReaderBufferAvailable:buffer:atTime:
audioFileReaderDidStartRecording:successfully:error:
audioFileReaderDidStopRecording:forReason:
audioFingerprintProvider
audioFormat
audioInjectionEnabled
audioInjectionEngine
audioInjectionEngines
audioInjectionFilePath
audioInjectionXpcListener
audioLoggingBuffer
audioMeterProvider
audioMeterProvidingProxy
audioMetric
audioMetricProvider
audioMetricProvidingProxy
audioPacketDeliveryCount
audioPacketWatchdog
audioPortSubtypeAsString:
audioPreprocessor
audioPreprocessor:hasAvailableBuffer:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
audioProviderInvalidated:streamHandleId:
audioProviderUUID
audioProviderWithStreamID:
audioProviderWithUUID:
audioProviders
audioRecordContext
audioRecorder
audioRecorder:didSetAudioSessionActive:
audioRecorder:willSetAudioSessionActive:
audioRecorderBeginRecordInterruption:
audioRecorderBeginRecordInterruption:withContext:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:arrivalTimestampToAudioRecorder:numberOfChannels:
audioRecorderBuiltInAudioStreamInvalidated:error:
audioRecorderDidFinishAlertPlayback:ofType:error:
audioRecorderDidStartRecord:audioStreamHandleId:successfully:error:
audioRecorderDidStopRecord:audioStreamHandleId:reason:
audioRecorderDisconnected:
audioRecorderEndRecordInterruption:
audioRecorderLostMediaserverd:
audioRecorderRecordHardwareConfigurationDidChange:toConfiguration:
audioRecorderStreamHandleIdInvalidated:
audioRecorderWillBeDestroyed:
audioRecorderWithQueue:error:
audioRouteChangeMonitor
audioSampleCountToSkip
audioServerCrashEventProvidingLostMediaserverd
audioSessionEventProvidingDidSetAudioSessionActive:
audioSessionEventProvidingWillSetAudioSessionActive:
audioSessionIdForDeviceId:
audioSessionInfoObservers
audioSessionInfoProvider
audioSessionInfoProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
audioSessionInfoProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionInfoProvidingProxy
audioSessionProvider
audioSessionProvider:didChangeContext:
audioSessionProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionProvider:didSetAudioSessionActive:
audioSessionProvider:providerInvalidated:
audioSessionProvider:willSetAudioSessionActive:
audioSessionProviderBeginInterruption:
audioSessionProviderBeginInterruption:withContext:
audioSessionProviderEndInterruption:
audioSessionProvidingDelegate
audioSessionProvidingProxy
audioSessionState
audioSrcNode
audioStartSampleCount
audioStream
audioStreamHandleId
audioStreamHolding
audioStreamId
audioStreamProvider
audioStreamProvider:audioBufferAvailable:
audioStreamProvider:audioBufferAvailable:lastForwardedSampleCount:
audioStreamProvider:audioChunkForTVAvailable:
audioStreamProvider:didHardwareConfigurationChange:
audioStreamProvider:didStopStreamUnexpectly:
audioStreamProviding
audioStreamProvidingDelegate
audioStreamProvidingProxy
audioStreamWithRequest:streamName:completion:
audioStreamWithRequest:streamName:error:
audioSystemRecovering
audioTapProvider
audioTimeConverter
audioURL
audioWaitingBuffer
automaticEndpointingSuspensionEndTime
autorelease
averagePowerForChannel:
avvcAlertBehavior
avvcContext
avvcContextSettings
avvcStartRecordSettingsWithAudioStreamHandleId:
batteryState
beepCanceller
beepCancellerDidCancelSamples:buffer:timestamp:
beginAnnounceMessageException:reason:
benchmarkXpcListener
bertModel
bestEarlyDetectSample
bestEndDetectSample
bestScore
bestStart
bestStartDetectSample
bestToken
bluetoothSession
bluetoothSessionSetupGroup
boolValue
boronScore
bufferDuration
bufferLength
buildVersion
builtInAudioInjectionEngine
builtInDevice
builtInMicVoiceTriggerEvent:hostTime:
builtInRTModelDictionary
builtInSeconPassProgressProvider
builtInSpeakerState
builtInVoiceTriggerMetaData
bundleTvRemote
bypassSamples
bypassSpeakerIdForMitigation
bytes
bytesDataSize
cacheSharedUserInfos:
cachedAsset
cachedEndpointAssets
cachedEndpointerInfo
cachedMitigationDecision
cachedResult
cachedScoresForLogging
caesuraSPG
calculateShadowMicScore
canActivate
canBePurged
canProcessCurrentRequest
cancelAudioStreamHold
cancelAudioStreamHold:
cancelBeepFromSamples:timestamp:
cancelDownloadSync
cancelRecognition
cancelTimer
carPlayAuxStreamSupportDidChange:
carPlayConnected
carPlayIsConnectedDidChange:
ccProfile
certificate
cesrXPCActvity
channelForProcessedInput
channels
checkConsecutiveBoronSignalWithAudioChunk:
checkFirstUnlocked
checkerThresholds
chunkForChannel:
circularBuffer
circularBufferInputRecordingDuration
circularBufferNumInputChannel
circularBufferStartHostTime
circularBufferStartSampleCount
clampedSFLatencyMsForClientLag
class
classifyUserIdentityFor:withScores:withAsset:
clearLoggingFileTimer
clearLoggingFileTimerCount
clearTriggerCount:
clientConnections
clientController
clientForAudioProviding
clientForAudioSessionInfoProviding
clientForFallbackAudioSessionReleaseProviding
clientForMacOSDuckAudioDevice
clientForSmartSiriVolumeProviding
clientLagThresholdMs
clientSilenceFramesCountMs
clientSilenceProbability
clientType
close
code
commandControlBehaviorMonitor:didStartStreamWithContext:successfully:option:
commandControlBehaviorMonitor:didStopStream:
commandControlBehaviorMonitor:willStartStreamWithContext:option:
commandControlBehaviorMonitor:willStopStream:
companionSyncVoiceTriggerUtterancesEnabled
compare:
compareScoresDesc:
completion
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
confidence
configFile
configVersion
configureAlertBehavior:
configureAlertBehavior:audioStreamHandleId:
configureAttendingState:
conformsToProtocol:
connectDevice:
connectDeviceWithUUID:completion:
connectedDeviceAddresses
connectedDevices
connection
connections
contConvConfigFile
contConvThresholds
containsCategory:
containsMultiUserThresholds
containsSpeakerRecognitionCategory
containsValueForKey:
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contextForBuiltInVoiceTrigger
contextForHearstVoiceTriggerWithDeviceId:
contextForOpportuneSpeakerListener
contextForOpportuneSpeakerListenerWithCall
contextForRemoraVoiceTriggerWithDeviceId:
continuousAudioFingerprintEnabledPolicy
continuousListening
convertSampleRateOfBuffer:
convertToFloatLPCMBufFromShortLPCMBuf:
convertToShortLPCMBufFromFloatLPCMBuf:
converterForAudioStreamId:
copy
copyBufferWithNumSamplesCopiedIn:
copySamplesFrom:to:
copySamplesFrom:to:channelIdx:
copyWithZone:
copybufferFrom:to:
coreSpeechDaemonStateMonitor:didReceiveStateChanged:
corespeechServiceListener
count
countByEnumeratingWithState:objects:count:
countOfConsecutiveBoron
crashEventDelegate
createAudioFileWriterForAdBlockerWithInputFormat:outputFormat:withAccessoryID:
createAudioFileWriterForOSDWithInputFormat:outputFormat:
createAudioFileWriterForOpportuneSpeakListenerWithInputFormat:outputFormat:
createAudioInjectionDeviceWithType:deviceName:deviceID:productID:completion:
createAudioStreamMessageWithRequest:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createPrepareAudioStreamMessageWithRequest:
createRTModelWithLocale:
createSharedAudioSession
createSmartSiriVolumeListener
createStartAudioStreamMessageWithOption:
createStopAudioStreamMessage
csAssetsDictionary
csAudioProcessingQueuePriority
csXPCActivity
currReqFirstSampleId
currentAsset
currentBuiltinSpeakerState
currentContext
currentDarwinHostState
currentInputDeviceUIDArray
currentInputRoute
currentLanguageCode
currentMaximumBufferSize
currentOutputRoute
currentPowerSource
currentPowerState
currentRawPowerState
currentRequestSampleRate
currentRoute
currentSessionShouldDuckOnBuiltInSpeaker
currentShadowMicScore
currentState
darwinVoiceTriggerHandlerPool
data
dataBufferNDEAPI
dataBufferPositionNDEAPI
dataUsingEncoding:
dataWithBytes:length:
dataWithCapacity:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithJSONObject:options:error:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
date
dateAdded
daysBeforeRemovingLogFiles
deactivateAudioSession:error:
deactivateAudioSession:streamHandleId:error:
deactivateAudioSessionForStream:withOptions:error:
deactivateAudioSessionWithOptions:
deactivateEndTime
deactivateForReason:options:context:completion:
deactivateSiriActivationConnectionWithReason:withOptions:withContext:
deactivateStartTime
debugDescription
debugLogPath
decisionStage
decodeBoolForKey:
decodeIntegerForKey:
decodeJson:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decoderProcessedSampleCountForTV
decodersForTV
decreaseSiriVolumeBasedOnUserIntent
defaultCenter
defaultContinousFingerprintBufferDuration
defaultController
defaultConverter
defaultFactory
defaultFallbackModelIfNil:
defaultInjectionProvider
defaultManager
defaultOutputAudioDeviceID
defaultProtocolInfo
defaultRequestWithContext:
defaultServerEndpointFeatures
deinterleaver
delay
delegate
delegates
deleteAllVoiceProfilesForAppDomain:
deleteUserVoiceProfile:
deliverEagerPackage
description
destination
detailedResult
detectUtterances
detectedEndpointTime
detectedToken
device:serviceMask:serviceEventType:serviceSpecificEvent:result:
deviceBuildVersion
deviceCategory
deviceConnectedWithUUID:
deviceDisconnectedWithUUID:
deviceID
deviceId
deviceIdentifier
deviceName
deviceProductType
deviceProductVersion
deviceType
deviceUID
dictationUIInteractionId
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didActivate
didAddAudio
didCommunicateEndpoint
didDetectHardEndpointAtTime:withMetrics:
didDetectKeywordWithResult:
didDetectSpeechActivity
didDetectStartpointAtTime:
didDetectedEndpoint
didEndpointWithFeatures:audioTimestamp:featuresToLog:endpointPosterior:extraDelayMs:
didFinishSpeakerRecognition:
didIgnoreEvent:from:
didLaunch
didMitigate
didPlayEndpointBeep
didReceiveAlarmChanged:
didReceiveAlarmVolumeChanged:
didReceiveMusicVolumeChanged:
didReceiveServerFeatures
didReceiveSpeakerRecognitionScoreCard:
didReceiveTimerChanged:
didReportEndpointDelay
didSetScaleFactor
didStartDelayInSeconds
didTTSVolumeChangeForReason:
didTimestampFirstAudioPacket
didTransitFrom:to:by:
didTrigger
digest
disableAssertionReceived
disableBoostForDoAP
disableEndpointer
disableLocalSpeechRecognitionForRequestId:
disableLocalSpeechRecognizer
disablePrewarmLocalAsrAtStartRecording
disallowSuddenTermiation
disconnect
disconnectDevice:
disconnectDeviceWithUUID:completion:
dismissalTimestamp
dispatchStateChangedFrom:to:
distributionDictionary:
domain
domainProb
doubleValue
downsampler
droppedPrediction
droppingPrediction
duckAudioDeviceWithDeviceID:duckedLevel:rampDuration:
duckDefaultOutputAudioDeviceWithDuckedLevel:rampDuration:
duckOthersOption
eagerResultId
effectiveBoolValueForSetting:
elapsedTimeWithNoSpeech
enableAlwaysOnVoiceTrigger
enableAssertionReceived
enableAutoPunctuation
enableEmojiRecognition
enableMiniDucking:
enablePolicy
enableSmartRoutingConsideration:
enableSmartRoutingConsiderationForStream:enable:
enableSmartRoutingConsiderationForStream:enable:error:
enableSpeakerStateListening:completionBlock:
enableVoiceCommands
enableVoiceTrigger:withAssertion:timestamp:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encoderBitRate
endAnnounceMessageException:reason:
endAudio
endAudioAndFetchAnyTrailingZerosPacket:
endOfSentenceLikelihood
endPointAnalyzerType
endPointerMetrics
endSampleId
endWaitTime
endpointBufferHostTime
endpointDelayReporter
endpointLatencyInfo
endpointLatencyQueue
endpointMode
endpointModeFromEndpointMetrics:
endpointStartTimeInSec
endpointStyle
endpointThreshold
endpointTime
endpointTimeInMs
endpointType
endpointer:detectedTwoShotAtTime:
endpointer:didDetectHardEndpointAtTime:withMetrics:
endpointer:didDetectStartpointAtTime:
endpointer:reportEndpointBufferHostTime:firstBufferHostTime:
endpointerAssetManagerDidUpdateAsset:
endpointerAssetManagerDidUpdateOSDAsset:
endpointerDelegate
endpointerImplDelegate
endpointerListener
endpointerModelVersion
endpointerNode
endpointerOperationMode
endpointerType
engineWithDeviceType:streamHandleId:
enter
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObservers:
enumerateObserversInQueue:
eosLikelihood
epResult
error
errorAlertBehavior
errorWithDomain:code:userInfo:
estimateSoundLevelbySoundType:
estimatedStartHostTime
estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:
estimatedUserSpeakingEndedHostTime
estimatedUserSpeakingStartedHostTime
eventToStateTransitions
expectedTimeRemaining
expressionForConstantValue:
expressionForFunction:arguments:
expressionValueWithObject:context:
extraDelayFrequency
extractArchiveFromDirectory:toDir:
fFile
fakeEndpointAssetPath
fakeMitigationAssetPath
fakeVoiceTriggerAssetPath
fallBackAssetResourcePath
fallbackAudioSessionProvidingProxy
fallbackAudioSessionReleaseProvider
fallbackDeactivateAudioSession:error:
falseWakePhraseDictionary
featuresAtEndpoint
fetchAudioFromCircularBuffer
fetchCurrentEndpointerOperationMode
fetchCurrentState
fetchDeviceUUIDStringFromUID:
fetchFallbackAudioSessionReleaseProvider
fetchHypotheticalRouteType
fetchInitSystemVolumes
fetchIsEnabled
fetchLastKnownConsecutiveBoronStartSampleCount
fetchRemoteMetaOfType:
fetchRemoteMetaOfType:allowRetry:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
fetchRichDeviceUIDStringFromUUID:
fetchVoiceTriggerHeartBeatMetrics
fetchVoiceTriggerInfoWithAudioContext:triggerInfoProviding:resultVoiceTriggerInfo:resultRTSTriggerInfo:
fetchVoiceTriggerStats
fetchVolumeFromAVSystemControllerForAudioCategory:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileLoggingIsEnabled
fileOption
fileURLWithPath:
fileURLWithPath:isDirectory:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
filteredArrayUsingPredicate:
filteredAssetsForAssets:assetType:language:
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
filteredVoiceProfileArray:
finishAudio
firstAudioPacketTimestamp
firstAudioStartSampleCount
firstObject
firstPartialResultTime
firstPartyCall
firstPassDebuggingEnabled
firstPassInfoGeneratedTime
firstPassInfoProcessedTime
firstPassMyriadGoodnessScore
firstPassTriggerInfo
firstSpeechFrameAudioTsInMs
firstUnlockMonitor
firstWordDuration
firstpassMetrics
flexKwdConfigFile
flexKwdNode
flexKwdThresholdFile
floatValue
flush
forceMitigateForHybridSDSD
forceVoiceTriggerAPMode
gainCompensatedChunk
geckoAudioLogDirectory
generateAudioWithTexts:language:completion:
generateConfusionPairsWithUUID:parameters:language:task:samplingRate:recognizedTokens:recognizedText:correctedText:selectedAlternatives:completion:
generateEmptyPHash:writeFile:
generatePHashFromVoiceTriggerInfo:writeFile:
gestureMonitorDidReceiveSleepGesture:
gestureMonitorDidReceiveWakeGesture:
getASVUserIntent:
getAccmulatedProcessingTime
getAdBlockerAssetTypeString
getAdBlockerCurrentCompatibilityVersion
getAnalyzedResultsFromAudioChunk:
getAssetTypeForNamespace:
getAssetTypeStringForType:
getAttendingState
getAudioSessionState
getAveragePowerForStream:forChannel:
getBestAnalyzedResultsFromAudioChunk:
getBestSampleCountWithOption:
getBiometricMatchResultForTriggerTimeStamp:
getCSAssetOfType:
getCacheDirectoryForAppDomain:
getCategoryKeyWithRecordCtx:
getConnectedBluetoothDeviceAddressesWithCompletion:
getCoreSpeechServiceConnection
getCoreSpeechXPCConnection
getCurrentEndpointerAsset
getCurrentOSDAsset
getCurrentOSDFeatures
getCurrentSessionState
getCurrentStreamState:
getCurrentVoiceTriggerLocaleWithEndpointId:completion:
getElapsedTimeNoSpeechWithReply:
getEndPointAnalyzerTypeWithReply:
getEndpointAssetCurrentCompatibilityVersion
getEndpointAssetTypeString
getEndpointerModelVersionWithReply:
getFirstPassRunningMode
getFirstPassRunningMode:
getFixedHighPrioritySerialQueueWithLabel:priority:
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFrameDurationMs
getHearstConnected:
getHearstRouted:
getHomeUserIdForSharedUserId:completion:
getHostClockFrequency
getIdleUserPreventSleepAssertionAcquitionDate
getInstalledAssetofType:forLocale:completion:
getJarvisConnected:
getLanguageDetectorAssetTypeString
getLanguageDetectorCurrentCompatibilityVersion
getLastBiometricMatchEvent:atTime:
getLastMitigationResult
getLastResult
getLatestSuperVector
getLatestUresFeaturesWithCompletion:
getLeadingUtteranceLogger
getLocalUrl
getMachTimeAdjustedVoiceTriggerEventInfoForDeviceUUID:
getMitigationAssetWithEndpointId:completion:
getMitigationDecisionForRCId:
getMitigationDecisionForRCIdWithCompletion:completion:
getNodeOfType:
getNumElementInBitset:
getNumberForKey:category:default:
getPeakPowerForStream:forChannel:
getProcessedAudioDurationMs
getRecordDeviceInfoForStream:
getRecordSettingsForStream:
getResourceValue:forKey:error:
getResultsFromFlushedAudio
getSSVDeviceType
getSerialQueue:qualityOfService:
getSerialQueue:withQualityOfService:andTargetQueue:
getSharedUserIdWithHighestVoiceIdScore:
getSiriInputSourceOutOfBand:
getSiriLanguageWithEndpointId:fallbackLanguage:
getSiriLanguageWithFallback:
getSpeakerRecognitionAssetTypeString
getSpeakerRecognitionCurrentCompatibilityVersion
getStringForKey:category:default:
getTestResponse:
getThreshold
getTranscriptionForSpeechPackage:
getTrialIdsForAssetType:withCompletion:
getTriggerCount:
getTriggerMode
getUresInputFeatures
getUsesAutomaticEndpointing
getValueForKey:category:
getVoiceTriggerAssetCurrentCompatibilityVersion
getVoiceTriggerAssetTypeString
getVoiceTriggerAssetWithEndpointId:completion:
getVoiceTriggerCurrentCompatibilityVersion
getVolumeForTTSType:withContext:reply:
getVolumeForTTSType:withOverrideMediaVolume:WithRequestTime:
getWirelessSplitterInfoWithCompletion:
getZeroStatisticsFromBuffer:entireSamples:
gibraltarVoiceTriggerHandler
hadSignalsFrom:to:
handleAttendingAudioStopUnexpectly
handleAudioStopUnexpectly
handleOtherAppRecordingStateChange:
handlePendingBuiltInVoiceTriggerIfNeeded
handlePendingRemoraVoiceTriggerIfNeeded
handleSiriRequest:deliveryHandler:completionHandler:
handleSpeechDetectionVADPresentChange:
handleVoiceTriggerWithActivationInfo:
handleXPCMessage:messageBody:client:
handleXPCMessage:messageBody:client:audioStreamHandleId:
hasConnectedAVCall
hasDarwinDeviceConnected
hasDarwinDeviceHandleVoiceTrigger
hasPendingTwoShotBeep
hasReceivedEarlyDetectNDEAPIResult
hasReceivedNDEAPIResult
hasRemoteBuiltInMic
hasReported
hash
hearstNumberOfBytesPerChunk
hearstNumberOfSamplesPerChunk
hearstRTModelLocaleMap
hearstRTModelWithMajorVersion:minorVersion:locale:
hearstRouted
hepAudioOriginInMs
historicalBufferRequestStreams
holdAudioStreamWithDescription:timeout:
holdAudioStreamWithTimeout:
homeId
horsemanDeviceType
hostTime
hostTimeBuffer
hostTimeFromSampleCount:
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:sampleRate:
hostTimeToSeconds:
hostTimeToTimeInterval:
hosttime
hybridClassifier
hybridClassifierQueue
hybridEndpointer
implDelegate
inUseServices
increaseSiriVolumeBasedOnUserIntent
inferenceTime
inferenceTimeSpan
init
initTandemWithOption:
initTandemWithRequest:
initWithAVVCRecordDeviceInfo:
initWithAnalyzeMode
initWithAppBundleIdentifier:
initWithArray:
initWithAssertionMonitor:
initWithAsset:assetConfig:firstPassSource:activeChannel:siriLanguage:shouldEnableShadowMicScore:
initWithAssetManager:withTrialAssetManager:withTrialDownloadMonitor:withLanguageCodeUpdateMonitor:withAssetOverrideFlag:withOverrideAssetPath:
initWithAttSiriController:
initWithAttSiriController:localSpeechRecognizer:isFileLoggingEnabled:
initWithAttSiriController:supportsAttentiveSiri:supportsSpeechRecognitionOnDevice:supportsSSR:
initWithAudioDeviceID:
initWithAudioRecorder:
initWithAudioStreamHandleId:audioStreamType:audioRecordContext:audioRecorder:
initWithAudioStreamHandleId:audioStreamType:audioRecordContext:audioRecorder:phoneCallStateMonitor:
initWithAudioStreamProvider:streamName:streamRequest:
initWithAudioURL:withScaleFactor:outASBD:
initWithBackingStoreCapacity:minimalNumberOfBackingStores:maximumNumberOfBackingStores:backingStoreIdleTimeout:
initWithBlob:
initWithBool:
initWithBytes:length:
initWithCapacity:
initWithCoder:
initWithConfig:error:
initWithConfig:error:locale:
initWithConfig:withDelegate:error:
initWithConfigFile:
initWithConfigFile:configRoot:sampleRate:delegate:queue:
initWithConfigFile:error:
initWithConfigFile:sampleRate:context:queue:delegate:
initWithConfigPath:triggerTokensArray:preventDuplicatedReset:memoryLock:
initWithConfiguration:
initWithConfiguration:modelVersion:
initWithConnection:
initWithContext:error:
initWithContext:withDelegate:error:
initWithCrashMonitor:
initWithData:
initWithData:hash:locale:
initWithData:hash:locale:digest:signature:certificate:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:arrivalHostTimeToAudioRecorder:wasBuffered:remoteVAD:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
initWithDelegate:
initWithDelegate:instanceUUID:
initWithDescription:
initWithDescription:timeout:
initWithDeviceId:audioStreamHandleId:
initWithDeviceType:deviceName:deviceID:productID:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDisableEndpointer:
initWithDomain:code:userInfo:
initWithDownloadOption:
initWithDroppingPrediction:droppedPrediction:timestamp:
initWithDuckOthers:duckToLevel:mixWithOthers:
initWithEndpointThreshold:
initWithEndpointerNode:osdNode:ssrNode:asrNode:uresNode:flexKwdNode:needsSSRNode:aFtmNode:speechDetectionNode:speechManager:siriEnabledMonitor:siriClientBehaviorMonitor:rcHandler:supportsAcousticProgressiveChecker:supportsUnderstandingOnDevice:requireASROnDevice:supportsHybridUnderstandingOnDevice:
initWithEndpointerNode:uresNode:
initWithError:
initWithFirstPassSource:deviceId:audioProviderUUID:firstPassInfo:rejectionMHUUID:isSecondChanceRun:firstpassMetrics:
initWithHash:locale:
initWithInASBD:outASBD:
initWithInitialState:
initWithInstanceContext:
initWithLanguage:assetType:
initWithLanguage:requestIdentifier:dictationUIInteractionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:codec:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:continuousListening:shouldHandleCapitalization:isSpeechAPIRequest:maximumRecognitionDuration:endpointStart:inputOrigin:location:jitGrammar:deliverEagerPackage:disableDeliveringAsrFeatures:enableEmojiRecognition:enableAutoPunctuation:enableVoiceCommands:sharedUserInfos:prefixText:postfixText:selectedText:powerContext:recognitionStart:
initWithLongLong:
initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:
initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:queue:
initWithMachServiceName:
initWithMachServiceName:options:
initWithMessage:makeAppFrontmost:
initWithMode:deviceUID:
initWithName:clientQueue:
initWithName:options:queue:delegate:
initWithNumChannels:recordingDuration:samplingRate:
initWithNumChannels:recordingDuration:samplingRate:audioTimeConverter:
initWithObjectsAndKeys:
initWithOverrideOption:reason:
initWithPattern:options:error:
initWithProtocolVersion:buildVersion:deviceProductVersion:deviceProductType:deviceCategory:
initWithQueue:error:
initWithRMSScore:lastSampleCount:
initWithRecordContext:deviceId:shouldUseRemoteRecorder:streamHandleId:
initWithRecordDeviceInfo:playbackRoute:playbackDeviceTypeList:
initWithRequestMHUUID:
initWithRequestMHUUID:turnIdentifier:
initWithRequestSource:
initWithRoute:isRemoteDevice:remoteDeviceUID:remoteDeviceProductIdentifier:
initWithRoute:isRemoteDevice:remoteDeviceUID:remoteDeviceProductIdentifier:remoteDeviceUIDString:
initWithSampleRate:withNumberOfChannels:
initWithSamplingRate:asset:
initWithScore:assetVersion:extractedFeats:
initWithServiceName:
initWithServicePort:
initWithSilenceFramesCountMs:silenceProbability:silenceDurationMs:processedAudioMs:
initWithSiriSessionUUID:
initWithSpeechManager:audioStreamProvider:streamName:streamRequest:
initWithStoredInformationAndAsset:
initWithStreamHandleId:
initWithStreamHandleId:withInputRecordingNumberOfChannels:
initWithStreamID:atStartHostTime:
initWithStreamID:settings:bufferDuration:
initWithSuiteName:
initWithTargetQueue:
initWithTaskDeliverer:
initWithTimeOut:
initWithTimeout:
initWithToken:sampleRate:numChannels:
initWithToken:score:startSampleID:endSampleId:
initWithTotalAudioRecorded:endpointBufferHostTime:featuresAtEndpoint:endpointerType:serverFeatureLatencyDistribution:additionalMetrics:trailingSilenceDurationAtEndpoint:
initWithType:
initWithType:deviceId:activationInfo:hosttime:
initWithType:deviceId:activationInfo:vadScore:hosttime:
initWithURL:
initWithURL:inputFormat:outputFormat:
initWithUTF8String:
initWithUUIDString:
initWithUnsignedLongLong:
initWithVoiceRecognitionContext:error:
initWithVoiceRetrainingContext:error:
initWithVoiceTriggerAssetDownloadMonitor:languageCodeUpdateMonitor:firstUnlockMonitor:trialAssetDownloadMonitor:assetManager:trialAssetManager:
initWithVoiceTriggerEventsCoordinator:
initWithVolumeEstimate:debugLogFile:
initWithWindowStartTime:
initWithWordCount:trailingSilenceDuration:endOfSentenceLikelihood:pauseCounts:silencePosterior:clientSilenceFramesCountMs:clientSilenceProbability:silencePosteriorNF:serverFeaturesLatency:
initWithWordCount:trailingSilenceDuration:endOfSentenceLikelihood:pauseCounts:silencePosterior:clientSilenceFramesCountMs:clientSilenceProbability:silencePosteriorNF:serverFeaturesLatency:eagerResultEndTime:
initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
initWithWordCount:trailingSilenceFrames:endOfSilenceLikelihood:pauseCounts:silencePosterior:taskName:
initWithXPCConnection:
initWithXPCObject:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
initialState
initialize
initializeAlarmState
initializeMediaPlayingState
initializeTimerState
injectAudio:
injectAudio:toDeviceWithUUID:withScaleFactor:completion:
injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:
injectAudio:withScaleFactor:playbackStarted:completion:
injectionAudioFileList
injectionStartNotifyBlocks
inputOrigin
inputRecordingBufferDuration
inputRecordingDuration
inputRecordingDurationInSecs
inputRecordingDurationInSecsExtended
inputRecordingIsFloat
inputRecordingNumberOfChannels
inputRecordingSampleBitDepth
inputRecordingSampleByteDepth
inputRecordingSampleRate
inputRecordingSampleRateNarrowBand
installedAssetForCurrentLanguageOfType:
installedAssetForCurrentLanguageOfType:completion:
installedAssetOfType:language:
installedAssetOfType:language:completion:
installedAssetOfType:withLanguage:
installedAssetOfType:withLanguage:completion:
installedVoiceTriggerAssetForLanguageCode:completion:
intValue
integerValue
interactiveLocalSpeechRecognizer
interfaceWithProtocol:
interspeechWaitTime
invalidate
isASRFeatureFromServer
isAdBlockerAudioLoggingEnabled
isAirpodsConnected
isAlertBehaviorOverridedBeep
isAnalyzeMode
isAnchorTimeBuffered
isAttachingBluetoothSession
isAttending
isAttendingForDictation
isAttentiveSiriAudioLoggingEnabled
isAttentiveSiriEnabled
isAvailable
isBluetooth
isBluetoothVehicleOutput
isBuiltInVoiceTriggered
isBuiltinSpeakerMuted
isBultInVoiceTriggerEvent:
isCSAssetInstalled
isConnected
isDarwinOS
isDarwinVoiceTriggered
isDefaultInputBuiltInMic
isDefaultOutputBultInSpeaker
isDictation
isDownloading
isDuckingSupportedOnCurrentRouteWithStreamHandleID:error:
isDuckingSupportedOnPickedRouteForStream:error:
isEarlyDetect
isEnabled
isEndpointAssetBypassTrialEnabled
isEndpointAssetOverridingEnabled
isEndpointEnhancedLoggingEnabled
isEqual:
isEqualAsset:
isEqualToNumber:
isEqualToString:
isFileLoggingEnabled
isForwarding
isHFPWithRecordRoute:
isHSVoiceTrigger:
isHeadlessDeviceDataCollectionModeEnabled
isHeadphoneDeviceWithRecordRoute:playbackRoute:
isHearstDoubleTapTriggered
isHearstRouted
isHearstVoiceTriggered
isHomePressed
isIOSDeviceSupportingBargeIn
isInternalWithoutProfile
isJarvisVoiceTriggered
isKindOfClass:
isLatestCompareTo:
isListenPollingStarting
isListening
isLocalVoiceTriggerAvailable
isMediaPlayingNow
isMemberOfClass:
isMitigationAssetOverridingEnabled
isModelBenchmarkingEnabled
isNarrowBand
isOpportuneSpeakListening
isOtherNonEligibleAppRecording
isP2PTransferEnabled
isPhraseSpotterBypassed
isPluginDevice
isPremium
isPresent
isPrimaryVoiceTriggerDeviceWithUUID:
isRTSTriggered
isRaiseToSpeakBypassed
isReceivedTimeInterval:matchCurrentTimeInterval:
isRecordContextAutoPrompt:
isRecordContextBuiltInVoiceTrigger:
isRecordContextDarwinVoiceTrigger:
isRecordContextHearstVoiceTrigger:
isRecordContextJarvisButtonPress:
isRecordContextJarvisVoiceTrigger:
isRecordContextRaiseToSpeak:
isRecordContextRemoraVoiceTrigger:
isRecordContextSpeakerIdTrainingTrigger:
isRecordContextVoiceTrigger:
isRecording
isRecordingWithRecordDeviceIndicator:
isRemoraButtonPress
isRemoraVoiceTriggerEvent:
isRemoraVoiceTriggered
isRemoteDarwinConnectedWithUUID:
isRemoteDarwinWithDeviceId:
isRemoteDevice
isRemoteDeviceDarwin
isRemoteDeviceGibraltar
isRequestDuringActiveCall
isRequestTimeout
isRestricted
isScreenLocked
isSecondChanceRun
isSecondPassRunning
isSelfTriggerEnabledAccessory
isSessionCurrentlyActivated
isShadowModeEnabled
isSiri
isSiriClientConsideredAsRecord
isSpeakerMuted
isSpeakerRecognitionAvailable
isSpeaking
isSpringboardStarted
isStarkTriggered
isStreaming
isTemporaryPairedNotInContacts
isTriggerHandheld
isUpsamplingSourceAudio
isUserActive
isValidRecordContext:
isVoiceTriggerAssetOverridingEnabled
isVoiceTriggerInfoAvailableLocally:
isVoiceTriggered
isWakeGestureAvailable
isWatchRTSTriggered
isWeakStream
isiOSButtonPress
iterateBitset:block:
jarvisRTModelLocaleMap
jarvisVoiceTriggerEvent:activationInfo:hostTime:
jitGrammar
kSSVCAUserIntentPermanentOffsetFactorDelta
kSSVCAUserIntentPermanentOffsetFactorLowerBound
kSSVCAUserIntentPermanentOffsetFactorUpperBound
kSSVCAUserIntentVolumeDecreaseFactor
kSSVCAUserIntentVolumeIncreaseFactor
kSSVCA_DEVICE_DEFAULT_MAX_TTS_VOLUME
kSSVCA_DEVICE_DEFAULT_MIN_TTS_VOLUME
kSSVCA_DEVICE_SIMPLE_MAX_TTS_VOLUME
kSSVCA_DEVICE_SIMPLE_MIN_TTS_VOLUME
keepAliveDirectory
keepAlivePath
keysOfEntriesPassingTest:
keysSortedByValueUsingComparator:
keywordAnalyzerNDEAPI
keywordAnalyzerNDEAPI:hasResultAvailable:forChannel:
keywordDetectorNDAPIConfigFilePath
keywordDetectorQuasarConfigFilePath
kwdScore
kwdSpotter
language
languageCode
languageCodeDarwin
languageCodeUpdateMonitor
lastAggTimeFalseWakeUp
lastAudioRecorderContext
lastCommunicatedPeer
lastDetectedVoiceTriggerBeginSampleCount
lastEndOfVoiceActivityTime
lastEndpointEagerResultTime
lastEndpointHintDuration
lastEndpointHintFeatures
lastEndpointHintRCId
lastEndpointPosterior
lastForwardedSampleCount
lastHash
lastInputFeats
lastKnowServerFeaturesLatency
lastKnownConsecutiveBoronStartSampleCount
lastKnownOSDFeatures
lastKnownServerEPFeatures
lastObject
lastPathComponent
lastReportedEndpointTimeMs
lastServerFeatureTimestamp
lastSilencePosterior
lastStartOfVoiceActivityTime
latestContext
latestHearstRTModelForLocale:
latestPluginStreamId
latestResult
latestVolume
latestVolumeTime
latticeMitigatorResult
launchSiriDebugAppWithMessage:
leadingSilenceDuration
leadingUtteranceAudioFile
leadingUtteranceLogger
leave
length
listen
listenPollingTimer
listenPollingTimerCount
listener
listener:shouldAcceptNewConnection:
listeningEnabledCompletionBlock:
localDevice
localDevice:event:result:
localDeviceProtocolInfo
localSRBridgeListener
localSpeechRecognitionListener
localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:
localSpeechRecognizer:didProcessAudioDuration:
localSpeechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
localSpeechRecognizer:didProduceLoggablePackage:
localSpeechRecognizer:didRecognizeFinalResultCandidatePackage:
localSpeechRecognizer:didRecognizePackage:
localSpeechRecognizer:didRecognizePackage:withMetadata:
localSpeechRecognizer:didRecognizeTokens:
localSpeechRecognizer:didRecognizeTokens:withMetadata:
localSpeechRecognizer:didSelectRecognitionModelWithModelProperties:
localSpeechRecognizerDeliverAudioDuration
localSpeechRecognizerQueue
localSpeechRecognizerState
localSpeechServiceDidCompletionRecognitionWithStatistics:requestId:endpointMode:error:
localSpeechServiceDidReceivedEagerRecognitionCandidateWithRequestId:rcId:speechPackage:duration:
localSpeechServiceDidReceivedEagerRecognitionCandidateWithRequestId:rcId:speechPackage:duration:metadata:
localSpeechServiceDidReceivedEagerResultWithRequestId:rcId:shouldAccept:mitigationSignal:featuresToLog:
localSpeechServiceDidReceivedFinalResultCandidateWithRequestId:speechPackage:
localSpeechServiceDidReceivedFinalResultWithRequestId:speechPackage:
localSpeechServiceDidReceivedFinalResultWithRequestId:speechPackage:metadata:
localSpeechServiceDidReceivedPartialResultWithRequestId:language:tokens:
localSpeechServiceDidReceivedPartialResultWithRequestId:language:tokens:metadata:
localSpeechServiceDidReceivedVoiceIdScoreCard:
locale
localeMapWithName:
localeWithLocaleIdentifier:
localizedDescription
localizedRecoverySuggestion
location
logAOPFirstPassTriggerWakeupLatency:
logAnchorMachAbsTime:numSamplesProcessedBeforeAnchorTime:isAnchorTimeBuffered:
logEventWithType:context:
logEventWithType:machAbsoluteTime:context:
logFalseWakeUp:withPhrase:
logFeaturesWithEvent:locale:
logHybridEndpointFeaturesWithEvent:locale:
logMHOdldFalseTriggerMitigationScores:
logMitigationFeatures:forTask:withModelOutput:forMHRequestId:
logSecondPassResult:eventInfo:triggerAPWakeUp:
logSiriLaunchCompletedWithVoiceTriggerEventInfo:
logSiriLaunchStartedWithVoiceTriggerEventInfo:
logSpeakerFalseTriggerMitigationScore:
logTriggerLengthSampleCountStatistics:withFirstPassDeterministicTriggerLengthSampleCount:
loggingFilePathWithDirectory:token:postfix:
loggingQueue
longLongValue
lpcmASBD
lpcmBitDepth
lpcmFloatASBD
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
lpcmInterleavedASBD
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedWithRemoteVADASBD
lpcmIsFloat
lpcmMonoInterleavedASBD
lpcmNarrowBandASBD
lpcmNonInterleavedASBD
lpcmNonInterleavedWithRemoteVADASBD
machXPCConnection:hasEntitlement:
mainRunLoop
makeStandaloneMitigation
manualDuckingHandler
mapTableWithStrongToStrongObjects
maxAllowedEnrollmentUtterances
maxFingerprintBufferSize
maximumRecognitionDuration
mediaPlayingState
mediaPlayingStateWithCompletion:
mediaserverdLaunchedEvent:
mhId
mhLogDirectory
micUsageReporter
minimumDurationForEndpointer
mitigationConfigFileForCategory:
mitigationDecisions
mitigatonConfigFile
mitigator
modelData
modelExeQueue
modelHash
modelLocale
modelRoot
moveItemAtPath:toPath:error:
multiUserConfidentScoreThreshold
multiUserDeltaScoreThreshold
multiUserHighScoreThreshold
multiUserLowScoreThreshold
musicVolume
musicVolumeWithCompletion:
mutableBytes
mutableCopy
myriadHashFilePath
name
narrowBandOpusConverter
needsBoost12dB
newVoiceProfileWithLocale:withAppDomain:
newlineCharacterSet
nldaClassifierNode
nldaConfigFile
nldaConfigFileForCategory:
nldaMetaInfo
noAlertOption
nodesCache
notifyActivationEvent:completion:
notifyActivationEvent:deviceId:activationInfo:completion:
notifyActivationEventSynchronously:completion:
notifyBluetoothDeviceVoiceTrigger:deviceId:completion:
notifyBluetoothDeviceVoiceTriggerPrewarm:deviceId:completion:
notifyBuiltInVoiceTrigger:myriadPHash:completion:
notifyBuiltInVoiceTriggerPrewarm:completion:
notifyCallbackWithOption:
notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:
notifyCarPlayVoiceTriggerPrewarm:deviceId:completion:
notifyClientsWithBlock:
notifyDaemonStateChanged:
notifyDarwinVoiceTrigger:deviceId:myriadPHash:myriadLateActivationExpirationTime:completion:
notifyDarwinVoiceTriggerPrewarmWithCompletion:
notifyDidStartStreamWithContext:audioProviderUUID:successfully:option:
notifyDidStartStreamWithContext:successfully:option:
notifyDidStartStreamWithContext:successfully:option:withEventUUID:
notifyDidStartStreamWithContext:successfully:option:withEventUUID:forAccessory:
notifyDidStopStream:
notifyDidStopStream:reason:withEventUUID:forAccessory:
notifyDidStopStream:withEventUUID:
notifyFetchedSiriClientAudioStream:successfully:
notifyHashlessTrigger:
notifyImplicitTrainingUtteranceAvailable:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:assetToUse:withCompletion:
notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:
notifyInEarMyriadTrigger
notifyNewVoiceTriggerAssetMetaDataUpdated
notifyObserver:didChangeStateFrom:to:
notifyObserver:didReceiveNotificationWithToken:
notifyObservers:endpointId:
notifyPreparedSiriClientAudioStream:successfully:
notifyProviderContextChanged
notifyReleaseAudioSession
notifyRemoraVoiceTrigger:myriadPHash:deviceId:completion:
notifyRemoraVoiceTriggerPrewarm:deviceId:completion:
notifyServiceConnectionLost
notifySiriLanguageCodeChanged:
notifySiriSessionStateChange:
notifySiriSessionStateTTSOngoing:
notifyVoiceTriggerAssetChanged
notifyVoiceTriggerDisabledWithDeviceUUID:
notifyVoiceTriggerEnabledWithDeviceUUID:
notifyVoiceTriggeredSiriSessionCancelled
notifyWakeKeywordSpokenBluetoothDevice:deviceId:
notifyWakeKeywordSpokenCarPlay:deviceId:
notifyWakeKeywordSpokenInBuiltInMic:
notifyWakeKeywordSpokenRemora:deviceId:
notifyWillStartStreamWithContext:audioProviderUUID:option:
notifyWillStartStreamWithContext:option:
notifyWillStartStreamWithContext:option:forAccessory:
notifyWillStopStream:
notifyWillStopStream:reason:
notifyWillStopStream:reason:forAccessory:
numChannels
numFalseWakeUp
numInputChannels
numOfAVVCRecordingClients
numOfAudioPackets
numOfChunksReceived
numOfConsecutiveBoronActivationThreshold
numOfValidTrailingPackets
numSamples
numSamplesProcessed
numSamplesProcessedBeforeAnchorTime
numberOfChannels
numberOfTotalFramesETFT
numberOfVoicingFrames
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
observers
odldModelAnalyzer
odldProcessor
odldScore
oneBestTokenList
oneBestTranscript
opportuneSpeakBehaviorMonitor:didStartStreamWithContext:audioProviderUUID:successfully:option:
opportuneSpeakBehaviorMonitor:didStopStream:
opportuneSpeakBehaviorMonitor:willStartStreamWithContext:audioProviderUUID:option:
opportuneSpeakBehaviorMonitor:willStopStream:
opportuneSpeakEventMonitor:didStreamStateChanged:
opportuneSpeakListener:didStopUnexpectly:
opportuneSpeakListener:hasRemoteVADAvailable:
opportuneSpeakListener:hasVADAvailable:
opportuneSpeakListener:hasVADAvailable:withHostTime:
opportuneSpeakListenerBypassEnabled
opportuneSpeakListeningType
opportuneSpeakListnerTestService
opportuneSpeakingFileLoggingIsEnabled
opusASBD
opusConverter
opusNarrowBandASBD
osTransaction
osdAnalyzer
osdAnalyzer:didDetectEndOfSpeechAt:
osdAnalyzer:didDetectStartOfSpeechAt:
osdAnalyzer:didUpdateOSDFeatures:
osdFeaturesAtEndpoint
osdQueue
overrideModelPath
overridePath
pHash:length:
pNonInterleavedABL
packetDescriptionCount
packetDescriptions
pairedDeviceAddresses
path
pathExtension
pause
pauseCounts
pauseLocalSpeechRecognitionForRequestId:
pauseRecognition
payloadData
peakPowerForChannel:
pendingActivationEvent
pendingBuiltInVoiceTriggerCompletionBlk
pendingBuiltInVoiceTriggerDetectedTime
pendingBuiltInVoiceTriggerResult
pendingCompletion
pendingRecordingStopUUID
pendingRemoraVoiceTriggerCompletionBlk
pendingRemoraVoiceTriggerDetectedTime
pendingRemoraVoiceTriggerDeviceId
pendingSecondPassTriggerWasClearedForClient:deviceId:
pendingStartCompletions
pendingStopCompletions
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTransitionForEvent:
permanentOffsetFactor
permanentOffsetIsEnabled
phoneCallState
phoneCallStateMonitor
phraseSpotterEnabled
pickTopScoringProfileIdFromScores:
pickableRoutesDidChange:
pickedRoute
pingpong:
pingpong:completion:
platformSupportsImplicitUttAddition
playAlertSoundForType:
playAlertSoundForType:overrideMode:
playAlertSoundForType:recordDevideIndicator:
playRecordStartingAlertAndResetEndpointer
playRecordStartingAlertAndResetEndpointerFromStream:
playbackDeviceTypeList
playbackRoute
postBuildInstallService
postfixText
powerContext
powerLogSiriConfigWithVoiceTriggerEnabled:withLanguage:withModelVersion:
powerLoggingCurrentAssetConfigVersion
powerLoggingCurrentLanguage
powerWithNumFalseWakeup:withDuration:withPhraseDict:
predicateWithBlock:
preferredExternalRouteDidChange:
prefixText
preheatLocalSpeechRecognitionWithLanguage:source:
preheatSpeechRecognitionWithAssetConfig:preheatSource:modelOverrideURL:
preheatWithLanguage:shouldDownloadMissingAsset:
prepareAudioProviderWithContext:clientType:error:
prepareAudioStream:request:completion:
prepareAudioStreamRecord:recordDeviceIndicator:error:
prepareAudioStreamSync:request:error:
prepareAudioStreamSyncWithRequest:error:
prepareAudioStreamWithRequest:completion:
prepareRecordForStream:error:
prepareRecording:
prepareSoundLevelBufferFromSamples:soundType:firedVoiceTriggerEvent:triggerStartTimeSampleOffset:triggerEndTimeSampleOffset:
prepareToStartSpeechRequestWithStartStreamOption:audioRecordContext:voiceTriggerInfo:
presetLocalSpeechRecognizer
preventSystemSleepPowerAssertion
prewarmAudioSessionWithError:
prewarmAudioSessionWithStreamHandleId:error:
primaryInputDevice
primaryInputDeviceUUIDWithCompletion:
primaryStream
processASRFeatures:fromServer:
processASRFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:fromServer:
processAudio:withNumberOfSamples:
processAudioBytes:withNumberOfSamples:
processAudioChunk:
processAudioChunk:activeChannel:
processAudioSamplesAsynchronously:
processBuffer:atTime:
processBuffer:atTime:arrivalTimestampToAudioRecorder:
processFirstAudioPacketTimestamp:firstAudioSampleSensorTimestamp:
processIdentifier
processInfo
processInputFeats:completion:
processInputText:
processInputUtterance:
processOSDFeatures:withFrameDurationMs:
processRCWithId:duration:lrnnScore:lrnnThreshold:taskId:forceAccept:completionHandler:
processRemoteCommandWithPayload:fromPeer:withReply:
processResultCandidate:forRCId:forTask:completion:
processSampleCount:hostTime:
processServerEndpointFeatures:
processServerFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
processSpeechPackage:
processSpeechPackageAsync:
processSpeechPackageSync:
processTaskString:
processedAudioDurationInMilliseconds
processedAudioInSeconds
processedAudioMs
productIdentifier
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileID
profileId
progCheckerConfigFile
progCheckerShadowMode
programmableAudioInjectionEnabled
propertyDictForDarwin
providerDelegate
provisionedVoiceProfilesForAppDomain:withLocale:
provisionedVoiceProfilesForLocale:
proxy
pruningExplicitUttThresholdPSR
pruningExplicitUttThresholdSAT
pruningNumRetentionUtterance
pruningThresholdPSR
pruningThresholdSAT
psrAudioProcessor
psrCombinationWeight
purgeSync
queryMetaData:
queryMetaDataSync
queryParams
queue
raiseToSpeakDetected:
rangeOfFirstMatchInString:options:range:
rawRecognition
rcHandler
rcProcessingListener
readAudioChunksFrom:block:
readSamplesFromChannelIdx:
readSpeakerIdScoreOverrrideConfig
receiveOpportuneSpeakListenerStart
receiveOpportuneSpeakListenerStop
receivers
recognition
recognitionOverrides
recognizer
recognizerBuffer
recordContext
recordContextString:
recordCtx
recordDeviceIndicator
recordDeviceInfo
recordDeviceInfoWithStreamHandleId:recordDeviceIndicator:
recordQueue
recordRoute
recordRouteWithRecordDeviceIndicator:
recordSettings
recordSettingsWithStreamHandleId:
recordTypeString:
recordingDidStop
recordingSampleRateWithStreamHandleId:
recordingStartTime
recordingStoppedForReason:
recordingToken
recordingTransaction
recordingWillStartGroup
registerANECompilationActivity
registerAssetDelegate:assetType:
registerEndpointerNode:
registerNLDAClassifierNode:
registerOSDNode:
registerObserver:
registerSSRNode:
registerSiriClientProxy:
registerSpeechController:
registerUresNode:
registerXPCActivities
releasePreventSystemSleepAssertion
remoraRTModelLocaleMap
remoraRTModelWithMajorVersion:minorVersion:locale:
remoraSecondPassProgressProvider
remoraVoiceTriggerEvent:activationInfo:hostTime:
remoraVoiceTriggerEvent:hostTime:
remoteAccessoryStreamIdSet
remoteDarwinVoiceTriggerEnabledPolicy
remoteDeviceProductIdentifier
remoteDeviceUIDString
remoteGradingDataDirectory
remoteMicVADEvent:vadScore:hostTime:
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
remoteObjectProxy
remoteP2pLogDirectory
remoteProductIdentifier
remoteRecordConnectionDisconnected:
remoteRecordDidStartRecordingWithStreamHandleId:error:
remoteRecordDidStopRecordingWithWithStreamHandleId:error:
remoteRecordLPCMBufferAvailable:streamHandleId:
remoteRecordTwoShotDetectedAtTime:
remoteVAD
remoteVADAlignBuffer
remoteVADAlignCount
remoteVADDuration
remoteVADSPGRatio
remoteVoiceActivityAvailable
remoteVoiceActivityVAD
remoteVoiceActivityVADBuffer
removeAllObjects
removeItemAtPath:error:
removeLogFilesOlderThanNDays:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:forAssetType:
removeObserver:name:object:
removeOpportunisticAudioLoggingOlderThanNDays:
removeRemoteP2PLogFilesOlderThanNDays:
replaceBytesInRange:withBytes:
replaceBytesInRange:withBytes:length:
replaceMatchesInString:options:range:withTemplate:
report
reportDigitalZerosWithAudioZeroRun:
reportEndpointDelayIfNeed
reportMetricsForSiriRequestWithUUID:
reportServerEndpointWithMhId:
reportsDynamicActivityAttribute:bundleId:
reportsDynamicActivityAttributeAsync:bundleId:
reportsDynamicActivityAttributeSync:bundleId:
reqSrc
requestForLpcmRecordSettingsWithContext:
requestForOpusRecordSettingsWithContext:
requestForSpeexRecordSettingsWithContext:
requestHistoricalAudioDataSampleCount
requestHistoricalAudioDataWithHostTime
requestId
requestMHUUID
requestSupportedWithSamplingRate:
requestUpdatedSATAudio
requestUpdatedSATAudio:
requireSingleChannelLookup
requiredNodes
requiresHistoricalBuffer
reset
resetCacheAndCompileAllAssets
resetDuckSettings
resetDucking
resetForNewRequest
resetForNewRequestWithRecordContext:endpointerSettings:voiceTriggerInfo:
resetForNewRequestWithRecordContext:endpointerSettings:voiceTriggerInfo:osdMode:
resetForNewRequestWithRecordContext:voiceTriggerInfo:
resetForNewRequestWithSampleRate:recordContext:
resetForNewRequestWithSampleRate:recordContext:recordOption:voiceTriggerInfo:
resetForVoiceTriggerTwoShotWithSampleRate:
resetWithSampleRate:
resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:
resourcePath
respondsToSelector:
resultType
resume
resumeConnection
resumeLocalRecognitionWithRequestId:prefixText:postfixText:selectedText:
resumeRecognitionWithPrefixText:postfixText:selectedText:
retain
retainCount
returnTypes:
rmsSamplesForEntireAudio
rootQueueWithFixedPriority:
route
rtModelLocaleMapWithModelType:
rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:
rtsTriggerInfo
runAudioInjectionOnly:completion:
runLstmPhsModelWithConfig:withUrl:withConfigRoot:completion:
runMitigationForRCId:withScore:threshold:task:completion:
runNovDetectorWithConfig:configRoot:withUrl:completion:
runODLDModelWithConfig:locale:inputText:completion:
runOSDAnalyzerWithConfig:withUrl:completion:
runVTSecondPassModelWithConfig:locale:withUrl:completion:
runningSampleCount
sampleCount
sampleCountFromHostTime:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:sampleRate:
sampleRate
samplesFed
satImplicitProfileDeltaThreshold
satImplicitProfileThreshold
satImplicitTrainingEnabled
satScoreThreshold
satScoreThresholdForPhId:
satVTImplicitThreshold
saveAudioChunck:toURL:
saveRecordingBufferFrom:to:toURL:
saveRecordingBufferToEndFrom:toURL:
saveSamplesSeenInReset
scaleFactor
scheduledFutureSample
score
secondChanceHotTillMachTime
secondPassAssetLoadStartTime
secondPassAssetQueryCompleteTime
secondPassAssetQueryStartTime
secondPassAudioStreamReadyTime
secondPassAudioStreamStartTime
secondPassCheckerModelKeywordDetectionEndTime
secondPassCheckerModelKeywordDetectionStartTime
secondPassDidStartForClient:deviceId:withFirstPassEstimate:
secondPassDidStopForClient:deviceId:
secondPassFirstAudioPacketReceptionTime
secondPassLastAudioPacketReceptionTime
secondsToHostTime:
secureOfflineOnly
selectedText
self
selfTriggerDetector:didDetectSelfTrigger:
sendAcousticGradingDataToNearbyPeer
sendCoreSpeechGradingDataToNearbyPeer
sendGeckoSpeechLogsToCompanion
sendMessageAndReplySync:error:
sendMessageAsync:completion:
sendMessageToClient:
sendMessageWithPayload:toPeer:withReply:
sendSpeechCorrectionInfo:interactionIdentifier:
sendVTNearMissGradingDataToCompanion
sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:
serverFeatureLatencies
serverFeatureLatencyDistribution
serverFeaturesLatency
serverFeaturesQueue
serverFeaturesWarmupLatency
serverState
servicesListener
sessionEventDelegate
sessionForContext:error:
sessionInProgress
sessionInfoQueue
setAFTMNode:
setASRModelRootDirectory:
setASVUserIntent:
setAVVCAlertBehavior:
setAccessoryVoiceTriggerMetaDataByDeviceId:
setAcousticAnalyzer:
setAcousticFTMScores:
setActivateEndTime:
setActivateStartTime:
setActivationAssertions:
setActivationExpirationTime:
setActivationMode:
setActivationSource:
setActivationXpcListener:
setActive:error:
setActive:withOptions:error:
setActiveChannel:
setActiveEndpointer:
setAdCompanionServiceProvider:
setAdditionalMetrics:
setAddress:
setAdpAssertion:
setAlertDelegate:
setAlertPlaybackFinishTimeoutToken:
setAlertPlaybackFinishWaitingCompletions:
setAlertPlaybackFinishWaitingStreams:
setAlertSoundFromURL:forType:
setAlertSoundFromURL:forType:force:
setAlignBufferQueue:
setAllFramesInferenceLatency:
setAllProcessorsAsNil
setAllowAdBlockerAssetDownloading:
setAllowEndpointAssetDownloading:
setAllowLanguageDetectorAssetDownloading:
setAllowMixableAudioWhileRecording:error:
setAllowSpeakerRecognitionAssetDownloading:
setAllowVocabList:
setAllowVoiceTriggerAccessoryAssetDownloading:
setAllowVoiceTriggerAssetDownloading:
setAllowsCellularAccess:
setAnchorMachAbsTime:
setAnnounceCallsEnabled:
setAnnounceCallsEnabled:withStreamHandleID:
setAnnounceCallsEnabledForStream:enable:
setApQueue:
setAsrDatapackInstallationStatus:
setAsrNode:
setAsrResultDeliveryTransaction:
setAssertionMonitor:
setAsset:
setAssetDownloadingOption:
setAssetManager:
setAssetQueryQueue:
setAssetsMigrationQueue:
setAttSiriConnectionManager:
setAttSiriController:
setAttSiriSvcListener:
setAttSiriTransaction:
setAttendingState:
setAttributes:ofItemAtPath:error:
setAtvRemoteDeviceID:
setAudioAlertDelegate:
setAudioAlertProvider:
setAudioAlertProvidingProxy:
setAudioFeedTimer:
setAudioFileWriter:
setAudioInjectionEngine:
setAudioInjectionEngines:
setAudioInjectionXpcListener:
setAudioLoggingBuffer:
setAudioMeterProvider:
setAudioMeterProvidingProxy:
setAudioMetricProvider:
setAudioMetricProvidingProxy:
setAudioPacketDeliveryCount:
setAudioPacketWatchdog:
setAudioPreprocessor:
setAudioProviderDelegate:
setAudioProviderUUID:
setAudioProviders:
setAudioRecordContext:
setAudioRecorder:
setAudioRouteChangeMonitor:
setAudioSampleCountToSkip:
setAudioServerCrashEventDelegate:
setAudioSessionDelegate:
setAudioSessionEventDelegate:
setAudioSessionInfoObservers:
setAudioSessionInfoProvider:
setAudioSessionInfoProvidingProxy:
setAudioSessionProvider:
setAudioSessionProvidingDelegate:
setAudioSessionProvidingProxy:
setAudioSessionState:
setAudioSrcNode:
setAudioStreamHandleId:
setAudioStreamHolding:
setAudioStreamId:
setAudioStreamProvider:
setAudioStreamProvidingDelegate:
setAudioStreamProvidingForProxy:
setAudioStreamProvidingProxy:
setAudioStreamType:
setAudioSystemRecovering:
setAudioTapProvider:
setAudioTimeConverter:
setAudioWaitingBuffer:
setAutomaticEndpointingSuspensionEndTime:
setAvgPower:
setBeepCanceller:
setBenchmarkXpcListener:
setBertModel:
setBestEarlyDetectSample:
setBestEndDetectSample:
setBestStartDetectSample:
setBluetoothSession:
setBluetoothSessionSetupGroup:
setBoronScore:
setBufferDuration:
setBuiltInDevice:
setBuiltInSeconPassProgressProvider:
setBuiltInSpeakerState:
setBundleTvRemote:
setBypassSamples:
setCachedEndpointAssets:
setCachedEndpointerInfo:
setCachedMitigationDecision:
setCachedResult:
setCachedScoresForLogging:
setCaesuraSPG:
setCallback:
setCanProcessCurrentRequest:
setCanUseLocalCacheServer:
setCcProfile:
setCesrXPCActvity:
setCircularBuffer:
setCircularBufferStartSampleCount:
setClampedSFLatencyMsForClientLag:
setClasses:forSelector:argumentIndex:ofReply:
setClearLoggingFileTimer:
setClearLoggingFileTimerCount:
setClientConnections:
setClientController:
setClientLagThresholdMs:
setClientType:
setCompletion:
setCompletionBlock:
setConfigFile:
setConnectedDevice:
setConnectedDeviceAddresses:
setConnectedDevices:
setConnection:
setContext:
setContext:completion:
setContext:streamType:error:
setContextForStream:forStream:error:
setCorespeechServiceListener:
setCountOfConsecutiveBoron:
setCrashEventDelegate:
setCsAssetsDictionary:
setCsXPCActivity:
setCurrReqFirstSampleId:
setCurrentAsset:
setCurrentAttributionKey:andApp:
setCurrentContext:error:
setCurrentContext:streamHandleId:error:
setCurrentHEPAsset:
setCurrentMaximumBufferSize:
setCurrentOEPAsset:
setCurrentRequestSampleRate:
setCurrentSessionShouldDuckOnBuiltInSpeaker:
setCurrentState:
setDarwinVoiceTriggerHandlerPool:
setDataBufferNDEAPI:
setDataBufferPositionNDEAPI:
setDateFormat:
setDeactivateEndTime:
setDeactivateStartTime:
setDecisionStage:
setDecoderProcessedSampleCountForTV:
setDecodersForTV:
setDeinterleaver:
setDelay:
setDelayInterstitialSounds:level:completion:
setDelegate:
setDelegate:forType:
setDelegates:
setDetectedEndpointTime:
setDetectedToken:
setDeviceId:
setDidCommunicateEndpoint:
setDidDetectSpeech:
setDidDetectSpeechActivity:
setDidDetectedEndpoint:
setDidReceiveServerFeatures:
setDidReportEndpointDelay:
setDidSetScaleFactor:
setDidStartDelayInSeconds:
setDidTimestampFirstAudioPacket:
setDidTrigger:
setDisableBoostForDoAP:
setDisableEndpointer:
setDisableLocalSpeechRecognizer:
setDisablePrewarmLocalAsrAtStartRecording:
setDiscretionary:
setDismissalTimestamp:
setDuckMixWithOthersForStream:duckOthers:duckToLevelInDB:mixWithOthers:
setDuckOthersForStream:withSettings:error:
setDuckOthersOption:
setDuckOverride:
setDuckToLevelDB:error:
setEagerResultId:
setElapsedTimeWithNoSpeech:
setEnable:
setEnableAlwaysOnVoiceTrigger:
setEnablePolicy:
setEnabled:
setEncoder:
setEncoderBitRate:
setEndPointerMetrics:
setEndpointBufferHostTime:
setEndpointDelayReporter:
setEndpointLatencyInfo:
setEndpointLatencyQueue:
setEndpointMode:
setEndpointStartTimeInSec:
setEndpointStyle:
setEndpointThreshold:
setEndpointTime:
setEndpointTimeInMs:
setEndpointerDelegate:
setEndpointerFeatureEoS:
setEndpointerImplDelegate:
setEndpointerListener:
setEndpointerModelVersion:
setEndpointerNode:
setEndpointerOperationMode:
setEndpointerType:
setEosLikelihood:
setEpResult:
setErrorAlertBehavior:
setEstimatedStartHostTime:
setEventToStateTransitions:
setExportedInterface:
setExportedObject:
setExtraDelayFrequency:
setFFile:
setFallbackAudioSessionProvidingProxy:
setFallbackAudioSessionReleaseProvider:
setFalseWakePhraseDictionary:
setFeaturesAtEndpoint:
setFileOption:
setFirstAudioPacketTimestamp:
setFirstAudioSampleSensorTimestamp:
setFirstAudioStartSampleCount:
setFirstPartialResultTime:
setFirstPassMyriadGoodnessScore:
setFirstPktLatency:
setFirstUnlockMonitor:
setFirstWordDuration:
setFp:
setFrameDurationMs:
setGibraltarVoiceTriggerHandler:
setHasReceivedEarlyDetectNDEAPIResult:
setHasReceivedNDEAPIResult:
setHepAudioOriginInMs:
setHistoricalBufferRequestStreams:
setHostTimeBuffer:
setHybridClassifier:
setHybridClassifierQueue:
setHybridEndpointer:
setIAmTheAssistant:error:
setIdleUserPreventSleepAssertionAcquitionDate:
setImplDelegate:
setInUseServices:
setInferenceTimeSpan:
setInitialContext:
setInitialState:
setInjectionAudioFileList:
setInjectionCompletionNotifyBlocks:
setInjectionEngine:
setInjectionStartNotifyBlocks:
setInputOriginWithAudioRecordContext:boronScore:
setInputRecordingNumberOfChannels:
setInteractiveLocalSpeechRecognizer:
setInterruptionHandler:
setInterspeechWaitTime:
setInvalidationHandler:
setIsASRFeatureFromServer:
setIsActiveRequest:
setIsActiveSession:
setIsAirpodsConnected:
setIsAnalyzeMode:
setIsAnchorTimeBuffered:
setIsBlur:
setIsFileLoggingEnabled:
setIsForwarding:
setIsHearstRouted:
setIsListenPollingStarting:
setIsMediaPlayingNow:
setIsNNVAD:
setIsOpportuneSpeakListening:
setIsPhraseSpotterBypassed:
setIsRaiseToSpeakBypassed:
setIsReady:
setIsRequestTimeout:
setIsSecondPassRunning:
setIsShadowModeEnabled:
setIsSiri:
setIsSiriClientConsideredAsRecord:
setIsSpeakerMuted:
setIsSpeaking:
setIsTemporaryPairedNotInContacts:
setIsWeakStream:
setKeywordAnalyzer:
setKeywordAnalyzerNDEAPI:
setKwdSpotter:
setLanguage:
setLanguageCodeUpdateMonitor:
setLastAggTimeFalseWakeUp:
setLastAudioRecorderContext:
setLastCommunicatedPeer:
setLastDetectedVoiceTriggerBeginSampleCount:
setLastEndpointHintDuration:
setLastEndpointHintFeatures:
setLastEndpointHintRCId:
setLastEndpointPosterior:
setLastForwardedSampleCount:
setLastHash:
setLastInputFeats:
setLastKnowServerFeaturesLatency:
setLastKnownConsecutiveBoronStartSampleCount:
setLastKnownOSDFeatures:
setLastKnownServerEPFeatures:
setLastReportedEndpointTimeMs:
setLastSampleCount:
setLastServerFeatureTimestamp:
setLastSilencePosterior:
setLatestContext:
setLatestPluginStreamId:
setLatestRecordContext:streamType:
setLatestResult:
setLatestVolume:
setLatestVolumeTime:
setLeadingSilenceDuration:
setLeadingUtteranceAudioFile:
setLeadingUtteranceLogger:
setLength:
setListenPollingTimer:
setListenPollingTimerCount:
setListener:
setListenerDelegate:
setLocalSRBridgeListener:
setLocalSpeechRecognitionListener:
setLocalSpeechRecognizerDeliverAudioDuration:
setLocalSpeechRecognizerQueue:
setLocalSpeechRecognizerState:
setLocalSpeechRecognizerTaskString:
setLocale:
setLoggingQueue:
setLpcmBitDepth:
setMachServiceName:
setMakeStandaloneMitigation:
setManualDuckingHandler:
setMeteringEnabled:
setMhId:
setMicUsageReporter:
setMinimumDurationForEndpointer:
setMitigationAsset:
setMitigationDecisions:
setMitigator:
setModelExeQueue:
setMonitor:
setName:
setNeedsBoost12dB:
setNldaClassifierNode:
setNldaMetaInfo:
setNldaScore:
setNnvadEndpointer:
setNodesCache:
setNumFalseWakeUp:
setNumOfAudioPackets:
setNumOfChunksReceived:
setNumOfConsecutiveBoronActivationThreshold:
setNumOfValidTrailingPackets:
setNumOfValidTrailingSpeechPackets:
setNumSamplesProcessed:
setNumSamplesProcessedBeforeAnchorTime:
setNumberOfChannels:
setNumberOfTotalFramesETFT:
setNumberOfVoicingFrames:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObservers:
setOdldModelAnalyzer:
setOdldProcessor:
setOpportuneSpeakListnerTestService:
setOsTransaction:
setOsdFeaturesAtEndpoint:
setOsdMode:
setOsdNode:
setOsdQueue:
setOutASBD:
setOverrideEnabled:
setOverridePath:
setOverrideState:
setPNonInterleavedABL:
setPackets:
setPairedDeviceAddresses:
setPeakPower:
setPendingActivationEvent:
setPendingBuiltInVoiceTriggerCompletionBlk:
setPendingBuiltInVoiceTriggerDetectedTime:
setPendingBuiltInVoiceTriggerResult:
setPendingCompletion:
setPendingRecordingStopUUID:
setPendingRemoraVoiceTriggerCompletionBlk:
setPendingRemoraVoiceTriggerDetectedTime:
setPendingRemoraVoiceTriggerDeviceId:
setPendingRemoraVoiceTriggerResult:
setPendingStartCompletions:
setPendingStopCompletions:
setPerceptualAudioHash:
setPermanentOffsetFactor:
setPermanentOffsetIsEnabled:
setPermanentVolumeOffsetWithDirection:
setPhoneCallState:
setPhoneCallStateMonitor:
setPhraseSpotterBypassing:timeout:
setPostBuildInstallService:
setPrefetchedAsset:
setPrevStageOutput:
setPreventSystemSleepPowerAssertion:
setPrimaryStream:
setProcessedAudioDurationInMilliseconds:
setProcessedAudioInSeconds:
setProviderDelegate:
setProxy:
setPsrAudioProcessor:
setQueue:
setRMSScore:
setRaiseToSpeakBypassing:timeout:
setRcHandler:
setRcProcessingListener:
setReceivers:
setRecognizer:
setRecognizerBuffer:
setRecordBufferDuration:
setRecordContext:
setRecordCtx:
setRecordDelegate:
setRecordDeviceIndicator:
setRecordEventUUID:
setRecordMode:streamHandleId:error:
setRecordingDidStop:
setRecordingStartTime:
setRecordingToken:
setRecordingTransaction:
setRecordingWillStartGroup:
setRemoraSecondPassProgressProvider:
setRemoteAccessoryStreamIdSet:
setRemoteObjectInterface:
setRemoteVAD:
setRemoteVADAlignBuffer:
setRemoteVADAlignCount:
setRemoteVADSPGRatio:
setReqSrc:
setRequestHistoricalAudioDataSampleCount:
setRequestHistoricalAudioDataWithHostTime:
setRequestId:
setRequestMHUUID:
setRequireSingleChannelLookup:
setRequiredNodes:
setRequiresHistoricalBuffer:
setRmsSamplesForEntireAudio:
setRtsTriggerInfo:
setRunningSampleCount:
setSampleRate:
setSaveSamplesSeenInReset:
setScheduledFutureSample:
setSecondPassAssetLoadCompleteTime:
setSecondPassAssetLoadStartTime:
setSecondPassAssetQueryCompleteTime:
setSecondPassAssetQueryStartTime:
setSecondPassAudioStreamReadyTime:
setSecondPassAudioStreamStartTime:
setSecondPassCheckerModelKeywordDetectionEndTime:
setSecondPassCheckerModelKeywordDetectionStartTime:
setSecondPassFirstAudioPacketReceptionTime:
setSecondPassLastAudioPacketReceptionTime:
setSelectedChannel:
setServerCrashedBlock:
setServerFeatureLatencies:
setServerFeatureLatencyDistribution:
setServerFeaturesQueue:
setServerResetBlock:
setServicesListener:
setSessionDelegate:
setSessionEventDelegate:
setSessionInProgress:
setSessionInfoQueue:
setShadowMicScore:
setShadowMicScoreCreator:
setSharedUserIdsSet:
setShouldCleanupVoiceProfile:
setShouldProcessAudio:
setShouldStopProcessASROnEndpoint:
setShouldUpdateMitigationResult:
setSignalEstimate:
setSignalFractional:
setSignalSource:
setSilencePosterior:
setSiriClientAudioStartStreamOption:
setSiriClientBehaviorMonitor:
setSiriClientRecordStateChangedBlock:
setSiriClientStream:
setSiriEnabledMonitor:
setSiriLanguageCodeDarwin:
setSiriSessionUUID:
setSiriStateObserver:
setSkipAlert:
setSkipAlertBehavior:
setSmartSiriVolume:
setSmartSiriVolumeDirection:
setSmartSiriVolumePercentage:
setSpeakerIDScore:
setSpeakerMuteStateChangedBlock:
setSpeakerRecognitionScores:
setSpeakerStateChangedBlock:
setSpeechDetectionNode:
setSpeechEndpointDetected:
setSpeechHasAcceptedResultCandidate:
setSpeechManager:
setSpeechModelTrainingXpcManager:
setSpeechPackage:
setSpeechRecognitionSettings:
setSpeechRecognizedContext:withEndpointerMetrics:
setSpeechVoiceLevel:
setSpgEndpointAnalyzer:
setSplitterEnabled:
setSsrAssets:
setSsrController:
setSsrNode:
setSsvManager:
setStartAlert:
setStartAlertBehavior:
setStartDetectionTime:
setStartPendingOnStoppingStreamToCompletionDict:
setStartPendingOnStoppingStreams:
setStartPendingStreams:
setStartRecordingHostTime:
setStartRecordingSampleCount:
setStartStreamOption:
setStartWaitTime:
setStateNotificationQueue:
setStateSerialQueue:
setStopAlert:
setStopAlertBehavior:
setStopOnErrorAlert:
setStopPendingStreams:
setStopRecordingHostTime:
setStopRecordingWatchDogToken:
setStreamClientType:
setStreamHandleID:
setStreamHandleQueue:
setStreamHolders:
setStreamProvider:
setStreamRequest:
setStreaming:
setStreamingUUID:
setStreams:
setSupportedInputOrigins:
setSupportedRecordType:
setSupportsSpeechRecognitionOnDevice:
setSynchronousCallbackEnabled:
setSystemUserActivityNotificationToken:
setTaskName:
setTaskThresholdMap:
setThreshold:
setThresholds:
setThresholdsMap:
setTimeSinceLastQuery:
setTimeStamp:
setTimer:
setTimerForSecs:completionBlock:
setTimestamp:
setToken:
setTotalAudioRecorded:
setTotalNumberSamples:
setTrailingPktLatencies:
setTrailingPktSpeechLatencies:
setTrailingSilenceDuration:
setTrailingSilenceDurationAtEndpoint:
setTrialAssetDownloadMonitor:
setTrialAssetManager:
setTrialAssetMonitor:
setTrialDownloadMonitor:
setTriggerAbsStartSampleId:
setTriggerInfoProviding:
setTriggerMachTime:
setTriggerNotifiedMachTime:
setTurnIdentifier:
setUpsampler:
setUresNode:
setUseDefaultServerFeaturesOnClientLag:
setUseLegacyPath:
setUseOpportunisticZLL:
setUserActivityStatus:
setUserIntentTime:
setUserIntentType:
setUserIntentValidForSeconds:
setUserIntentVolume:
setUserSpeakingEndedHostTime:
setUserSpeakingEndedTimeInMs:
setUuid:
setValue:forKey:
setVoiceControllerCreationQueue:
setVoiceIdXpcListener:
setVoiceIdentificationBatchId:
setVoiceProfileManager:
setVoiceTriggerAssetDownloadMonitor:
setVoiceTriggerBatchId:
setVoiceTriggerEnabled:
setVoiceTriggerEventInfo:
setVoiceTriggerEverUsed
setVoiceTriggerFireMachTime:
setVoiceTriggerInfo:deviceId:
setVoiceTriggerSampleCount:
setVoiceTriggerXpcListener:
setVtAsset:
setVtEndInSampleCount:
setVtExtraAudioAtStartInMs:
setVtSecondPassAnalyzer:
setWaitingForAlertFinish:
setWakeGestureTimestamp:
setWithArray:
setWordCount:
setWorkQueue:
setXpcClientQueue:
setXpcClientType:
setXpcConnection:
setXpcReplyQueue:
setZeroFilter:
setupListeners
shadowMicScore
shadowMicScoreCreator
shadowMicScoreThreshold
shadowMicScoreThresholdForVAD
sharedAggregator
sharedConnection
sharedController
sharedDaemon
sharedHandler
sharedInstance
sharedLauncher
sharedLogger
sharedManager
sharedManagerForCoreSpeechDaemon
sharedMonitor
sharedNotifier
sharedPowerLogger
sharedPreferences
sharedService
sharedSession
sharedSiriId
sharedUserIdsSet
sharedVoiceTriggerClient
shouldAcceptEagerResultForDuration:resultsCompletionHandler:
shouldAudioMonitoringRecording
shouldCleanupVoiceProfile
shouldDeinterleaveAudioOnCS
shouldDisableSpeakerVerificationInSplitterMode
shouldHandleCapitalization
shouldProcessAudio
shouldResetAdsDictionary
shouldRunAsSecondChance
shouldRunSpkrIdForCategory:
shouldStopProcessASROnEndpoint
shouldStoreAudioOnDevice
shouldUpdateMitigationResult
shouldUseRemoteRecorder
shouldVoiceTriggerRun
shutdown
signalEstimate
signalFractional
signalSource
signature
silenceDurationEstimateAvailable:numEstimates:clientProcessedAudioMs:
silenceDurationMs
silenceFramesCountMs
silencePosterior
silenceProbability
silenceStartTime
siriClientAudioStartStreamOption
siriClientBehaviorMonitor
siriClientBehaviorMonitor:didChangedRecordState:withEventUUID:withContext:
siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:
siriClientBehaviorMonitor:didStopStream:withEventUUID:
siriClientBehaviorMonitor:fetchedSiriClientAudioStream:successfully:
siriClientBehaviorMonitor:preparedSiriClientAudioStream:successfully:
siriClientBehaviorMonitor:willStartStreamWithContext:option:
siriClientBehaviorMonitor:willStopStream:reason:
siriClientBehaviorMonitorReleasedAudioSession:
siriClientStream
siriClientsRecordingCompletionBlock:
siriEnabledMonitor
siriInCallPolicy
siriInputSourceOutOfBand
siriProfileId
siriRequestProcessingCompleted
siriStateObserver
skipAlert
skipAlertBehavior
smartSiriVolumeContextAwareEnabled
smartSiriVolumeEnablePolicy
smartSiriVolumeRunPolicy
smartSiriVolumeSoftVolumeEnabled
sortUsingComparator:
sortUsingSelector:
sortedArrayUsingComparator:
source
spaceCheck:
speakAudio:
speakAudio:withScaleFactor:outASBD:playbackStarted:completion:
speakAudio:withScaleFactor:playbackStarted:completion:
speakerIDScore
speakerRecognitionController:hasSpeakerInfo:
speakerRecognitionFinishedProcessing:withFinalSpeakerInfo:
speakerRecognitionScores
speakerStateActiveCompletionBlock:
speakerStateMutedCompletionBlock:
speechDetectionNode
speechEndpointDetected
speechHasAcceptedResultCandidate
speechManager
speechModelTrainingXpcManager
speechPackage
speechRecognitionSettings
speechRecognitionTask
speechRecognizer:didFinishRecognitionWithError:
speechRecognizer:didProcessAudioDuration:
speechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
speechRecognizer:didProduceLoggablePackage:
speechRecognizer:didRecognizeFinalResultCandidatePackage:
speechRecognizer:didRecognizeFinalResultPackage:
speechRecognizer:didRecognizeFinalResults:
speechRecognizer:didRecognizeFinalResults:tokenSausage:nBestChoices:
speechRecognizer:didRecognizePartialResult:
speechRecognizer:didRecognizePartialResultNbest:
speechRecognizer:didRecognizeRawEagerRecognitionCandidate:
speechRecognizer:didReportStatus:statusContext:
speechVoiceLevel
speexASBD
speexConverter
spgEndpointAnalyzer
spgEndpointAnalyzer:hasSilenceScoreEstimate:clientProcessedAudioTimeMS:
spgEndpointAnalyzerDidDetectEndpoint:
splitterDeviceList
splitterState
splitterState:
ssrAssets
ssrController
ssrListener
ssvManager
start
startAlert
startAlertBehavior
startAttendingWithContext:
startAudioStream:option:completion:
startAudioStreamWithOption:
startAudioStreamWithOption:completion:
startAudioStreamWithOption:recordDeviceIndicator:error:
startCatalogDownload:options:then:
startDeliverLocalSpeechRecognitionResultsWithSettings:
startDetectionTime
startDownload:then:
startHostTime
startKeywordSpottingWithCompletion:
startListenWithOption:completion:
startManager
startMissingAssetDownload
startNewRequestWithContext:
startObserving
startObservingSystemVolumes
startPendingOnStoppingStreamToCompletionDict
startPendingOnStoppingStreams
startPendingStreams
startRecordForStream:error:
startRecording
startRecordingHostTime
startRecordingSampleCount
startRecordingWatchDogToken
startRecordingWithOptions:error:
startRequestWithContext:withVtei:taskType:completion:
startRequestWithContext:withVtei:withVTAssets:taskType:completion:
startSampleCount
startSmartSiriVolume
startSpeechRecognitionWithParameters:didStartHandlerWithInfo:
startStampleId
startStreamOption
startTime
startWaitTime
startWakeGestureUpdates
startWithRecordContext:
startWithUUID:withMaximumBufferSize:
startXPCConnection
state
stateNotificationQueue
stateSerialQueue
stop
stopAlert
stopAlertBehavior
stopAttendingWithContext:
stopAudioStream:option:completion:
stopAudioStreamWithOption:completion:
stopAudioStreamWithRecordDeviceIndicator:error:
stopCountingZeroStatisticsWithReporter:
stopDeliverLocalSpeechRecognitionWithReason:requestId:
stopEndpointer
stopListenWithCompletion:
stopListenWithStateReset:completion:
stopOnErrorAlert
stopPendingStreams
stopRecordForStream:error:
stopRecording
stopRecording:
stopRecordingHostTime
stopRecordingWatchDogToken
stopWithUUID:
storeASVStateInformation
streamClientType
streamDescription
streamHandleID
streamHandleId
streamHandleQueue
streamHolders
streamID
streamProvider
streamRequest
streamState
streaming
streamingUUID
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringByStandardizingPath
stringFromClassificationCategory:
stringValue
stringWithCapacity:
stringWithContentsOfFile:encoding:error:
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
subChunkFrom:numSamples:
subChunkFrom:numSamples:forChannel:
submitAudioIssueReport:
submitEndpointerIssueReport:
subscribeEventMonitor:
substringToIndex:
substringWithRange:
superclass
supportAcousticProgressiveChecker
supportAdBlocker
supportAttentionLostAndGain
supportBeepCanceller:
supportBluetoothDeviceVoiceTrigger
supportCSTwoShotDecision
supportDoAP
supportHandsFree
supportHangUp
supportHearstVoiceTrigger
supportHomeKitAccessory
supportHybridEndpointer
supportJarvisVoiceTrigger
supportLanguageDetector
supportMphAssets
supportNonInterruptibleSiri
supportOpportunisticZLL
supportPhatic
supportPremiumAssets
supportRelayCall
supportRemoraVoiceTrigger
supportRingtoneA2DP
supportSmartVolume
supportZeroFilter:
supportedInputOrigins
supportedRecordType
supportsDictationOnDevice
supportsDuckingOnCurrentRouteWithError:
supportsDuckingOnSpeakerOutput
supportsHybridUnderstandingOnDevice
supportsSSR
supportsSecureCoding
supportsSpeakerRecognitionAssets
supportsSpeechRecognitionOnDevice
supportsUnderstandingOnDevice
synchronousRemoteObjectProxyWithErrorHandler:
systemControllerDied:
systemUpTime
systemUptime
systemUserActivityNotificationToken
systemUserActivityState
systemVolumeDidChange:
tandemStreams
targetQueue
taskName
taskString:
taskThresholdMap
teardownWithError:
temporaryDirectory
terminateProcessing
threshold
thresholds
thresholdsMap
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timeSinceLastQuery
timeStamp
timer
timerState
timestamp
toString
token
tokenName
tokens
totalAudioRecorded
totalExpected
totalNumberSamples
totalWritten
trailingPktLatencies
trailingPktSpeechLatencies
trailingSilenceDuration
trailingSilenceDurationAtEndpoint
trainGlobalNNLMwithFidesSessionURL:completion:
trainPersonalizedLMWithLanguage:configuration:asset:directory:completion:
trainPersonalizedLMWithLanguage:configuration:asset:fides:activity:completion:
trainPersonalizedLMWithLanguage:configuration:fides:activity:completion:
trainPersonalizedLMWithLanguage:configuration:fides:write:completion:
trainPersonalizedLMWithLanguage:directory:completion:
transitions
trialAssetDownloadMonitor
trialAssetManager
trialAssetMonitor
trialDownloadMonitor
triggerAbsStartSampleId
triggerInfoForContext:completion:
triggerInfoProviding
triggerModeStringDescription:
triggerNotifiedMachTime
triggerReportedFromFlxKwdSpotter:
triggerVoiceProfileCleanupWithCompletion:
triggerVoiceProfileRetrainingWithAsset:
turnIdentifier
type
unregisterObserver:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
updateAudioStreamStartTimeInSampleCount:
updateCachedScoresForLogging:
updateEndpointerDelayedTriggerSwitch:
updateEndpointerThreshold:
updateEndpointerThresholdWithValue:
updateMeterForStream:
updateMeters
updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:
updateState:
updateVoiceProfile:withUserName:
updateWithLatestRecordContext:
upperCaseString:completion:
upperCaseString:withReply:
upsampler
uresNode
useCustomizedRecordSettings
useDefaultServerFeaturesOnClientLag
useLegacyPath
useOpportunisticZLL
useSpeakerRecognitionAsset
useSpeexForAudioInjection
userActivityStatus
userInfo
userIntentTime
userIntentType
userIntentValidForSeconds
userIntentVolume
userName
userSessionActivateMonitor:didReceivedUserSessionActiveHasChanged:
userSpeakingEndedHostTime
userSpeakingEndedTimeInMs
userSpeakingStartedHostTime
userSpeakingStartedTimeInMs
utteranceFileASBD
uuid
vadScore
valueForEntitlement:
valueForKey:
valueForKeyPath:
voiceControllerAudioCallback:forStream:buffer:
voiceControllerBeginRecordInterruption:
voiceControllerBeginRecordInterruption:withContext:
voiceControllerCreationQueue
voiceControllerDidDetectEndpoint:ofType:
voiceControllerDidDetectEndpoint:ofType:atTime:
voiceControllerDidDetectStartpoint:
voiceControllerDidFinishAlertPlayback:ofType:error:
voiceControllerDidFinishAlertPlayback:withSettings:error:
voiceControllerDidSetAudioSessionActive:isActivated:
voiceControllerDidStartRecording:forStream:successfully:error:
voiceControllerDidStartRecording:successfully:
voiceControllerDidStartRecording:successfully:error:
voiceControllerDidStopRecording:forReason:
voiceControllerDidStopRecording:forStream:forReason:
voiceControllerEncoderErrorDidOccur:error:
voiceControllerEndRecordInterruption:
voiceControllerLPCMAudioCallback:forStream:buffer:
voiceControllerLPCMRecordBufferAvailable:buffer:
voiceControllerMediaServicesWereLost:
voiceControllerMediaServicesWereReset:
voiceControllerRecordBufferAvailable:buffer:
voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:
voiceControllerStreamInvalidated:forStream:
voiceControllerWillSetAudioSessionActive:willActivate:
voiceControllerWirelessSplitterRouteAvailable:devices:
voiceIdXpcListener
voiceIdentificationBatchId
voiceProfileForId:
voiceProfileManager
voiceProfilePruningCookie
voiceTriggerAOPModeEnabledPolicy
voiceTriggerAssetDownloadMonitor
voiceTriggerAssetHandler:endpointId:didChangeCachedAsset:
voiceTriggerAudioLogDirectory
voiceTriggerBatchId
voiceTriggerDetectedOnAOP:
voiceTriggerDidDetectKeyword:deviceId:
voiceTriggerDidDetectKeyword:deviceId:completion:
voiceTriggerDidDetectKeyword:myriadHash:remoteTriggerType:remoteDeviceId:isTriggeredFromFullWake:completion:
voiceTriggerDidDetectNearMiss:deviceId:
voiceTriggerDidDetectSpeakerReject:
voiceTriggerDidRejected:deviceId:
voiceTriggerEnabled
voiceTriggerEventInfo
voiceTriggerFireMachTime
voiceTriggerGotSuperVector:
voiceTriggerInfo
voiceTriggerInfoWithRecordDeviceIndicator:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
voiceTriggerPhraseNDEAPIScorerDidDetectedKeyword:bestStartSampleCount:bestEndSampleCount:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:endpointId:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:locale:endpointId:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerSampleCount
voiceTriggerXpcListener
volumeEstimate
vtEndInSampleCount
vtExtraAudioAtStartInMs
vtSecondPassAnalyzer
waitWithTimeout:
waitingForAlertFinish
waitingForConnection:error:
wakeGestureManager:didUpdateWakeGesture:
wakeGestureManager:didUpdateWakeGesture:detectedAt:
wakeGestureManager:didUpdateWakeGesture:orientation:
wakeGestureManager:didUpdateWakeGesture:type:detectedAt:
wakeGestureTimestamp
wakeHostForVoiceTrigger
wasBuffered
weakObjectsHashTable
wearerDetectionConfig
willBeep
willBeepWithRecordRoute:playbackRoute:
willDestroy
wordCount
workQueue
writeDESRecord
writeToFile:atomically:
writeToFile:atomically:encoding:error:
writeToFile:options:error:
writeToURL:atomically:
xpcClientQueue
xpcClientType
xpcConnection
xpcConnection:hasEntitlement:
xpcExitClean
xpcListener
xpcObject
xpcReplyQueue
zeroCounter
zeroFilter
zeroFilter:zeroFilteredBufferAvailable:atHostTime:
zeroFilterApproxAbsSpeechThreshold
zeroFilterWindowSizeInMs
zone
CSMicUsageReporter
v8@?0
-[CSMicUsageReporter _reportsDynamicActivityAttribute:bundleId:]
CORESPEECH_DAEMON_ACCESS_AUDIO_FOR_DICTATION
CORESPEECH_DAEMON_ACCESS_AUDIO_FOR_SIRI
CORESPEECH_DAEMON_ACCESS_AUDIO_FOR_SIRI_AND_DICTATION
STDynamicActivityAttributionPublisher
Unable to find class %s
com.apple.siri.speechmodeltraining
com.apple.corespeech.speechmodeltraining.xpc
com.apple.speech.speechmodeltraining
SpeechModelTrainingClient
v24@?0@"NSString"8@"NSError"16
v16@?0@"NSError"8
v16@?0@"NSString"8
v24@?0@"NSDictionary"8@"NSError"16
Assistant/SpeechPersonalizedLM
Assistant/SpeechPersonalizedLM_Fides
Received Error %@
Input directory path(%@) does not match expected path
type
-[CSFallbackAudioSessionReleaseProvidingProxy handleXPCMessage:messageBody:client:]
option
-[CSFallbackAudioSessionReleaseProvidingProxy _handleDeactivateAudioSessionRequestMessage:messageBody:client:]
result
resultErrorDomain
resultErrorCode
com.apple.corespeech.powerassertion
PreventUserIdleSystemSleep
PreventSystemSleep
-[CSPreventSystemSleepPowerAssertion invalidate]
TimeoutActionRelease
-[CSPreventSystemSleepPowerAssertion _acquireAssertionForType:withTimeout:assertionId:details:]
AllowsDeviceRestart
-[CSPreventSystemSleepPowerAssertion _releaseAssertionForAssertionId:details:]
+[CSUserIdentityClassifier pickTopScoringProfileIdFromScores:]
+[CSUserIdentityClassifier classifyUserIdentityFor:withScores:withAsset:]
Confident
Known
Unknown
Unsure1
UnsureN
+[CSUserIdentityClassifier stringFromClassificationCategory:]
-[CSAudioStartStreamOption(AVVC) avvcStartRecordSettingsWithAudioStreamHandleId:]
triggerScore
configVersion
firstPassTriggerSource
languageCode
com.apple.corespeech.aopFirstPassTriggerWakeupLatency
latency
device
@"NSDictionary"8@?0
com.apple.corespeech.SecondPassWakeUp
unknown
modelVersion
firstPassSource
triggerAPWakeup
-[CSVoiceTriggerStatAggregator logFalseWakeUp:withPhrase:]
-[CSVoiceTriggerStatAggregator logTriggerLengthSampleCountStatistics:withFirstPassDeterministicTriggerLengthSampleCount:]
com.apple.exprAOPSecondPass
newTriggerLengthSampleCount
oldTriggerLengthSampleCount
sampleCountDelta
com.apple.corespeech.AudioZeroRun
duration
com.apple.corespeech.corespeechd.activation.xpc
v16@?0@"NSObject<OS_xpc_object>"8
-[CSActivationXPCClient dealloc]
-[CSActivationXPCClient _handleListenerEvent:]
-[CSActivationXPCClient _handleListenerError:]
-[CSActivationXPCClient notifyActivationEvent:completion:]
v20@?0B8@"NSError"12
event
B8@?0
-[CSSmartSiriVolumeRunPolicyHomePod _addSmartSiriVolumeEnabledConditions]_block_invoke
CSAttSiriRequestSourceKey
SiriFollowupforIdleAndQuiet
Dictation
LockScreenNotification
SpeechDetection
com.apple.corespeech.CSSystemUserActivityMonitor
-[CSSystemUserActivityMonitor _startMonitoringWithQueue:]_block_invoke
com.apple.system.powermanagement.useractivity
v12@?0i8
-[CSSystemUserActivityMonitor _startMonitoringWithQueue:]_block_invoke_2
-[CSSystemUserActivityMonitor _fetchSystemUserActivityState]
v16@?0@8
-[CSAudioSampleRateConverter _createSampleRateConverterWithInASBD:outASBD:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSAudioSampleRateConverter convertSampleRateOfBuffer:]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeakerRecognitionAssetMetaUpdateMonitor _didReceiveSpeakerRecognitionAssetMetaData]
com.apple.MobileAsset.SpeakerRecognitionAssets.ma.cached-metadata-updated
Audio/Video
Alarm
CSVolumeMonitor queue
-[CSVolumeMonitor _startMonitoringWithQueue:]
-[CSVolumeMonitor fetchVolumeFromAVSystemControllerForAudioCategory:]_block_invoke
-[CSVolumeMonitor systemControllerDied:]
-[CSVolumeMonitor startObservingSystemVolumes]
-[CSVolumeMonitor _startObservingSystemControllerLifecycle]
CSFallbackAudioSessionReleaseProvider
-[CSFallbackAudioSessionReleaseProvider fallbackDeactivateAudioSession:error:]_block_invoke
-[CSFallbackAudioSessionReleaseProvider fallbackDeactivateAudioSession:error:]
-[CSAudioTapProvider init]
CSAudioTapProvider.mm
-[CSSpeakerRecognitionAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSSpeakerRecognitionAssetDownloadMonitor _stopMonitoring]
-[CSSpeakerRecognitionAssetDownloadMonitor _didInstalledNewAsset]
-[CSSpeakerRecognitionAssetDownloadMonitor trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
com.apple.MobileAsset.SpeakerRecognitionAssets.ma.new-asset-installed
{wordCount: %ld, trailingSilDuration: %ld, eosLikelihood: %f, pauseCounts: (%@), silencePosterior: %f, taskName: %@, processedAudioDurationInMilliseconds: %ld}
WordCount
TrailingSilDuration
EOSLikelihood
PauseCounts
SilencePosterior
ProcessedAudioDurationInMilliseconds
-[CSVoiceTriggerXPCServiceProxy enableVoiceTrigger:withAssertion:timestamp:]
voicetrigger assertion queue
-[CSVoiceTriggerXPCServiceProxy enableVoiceTrigger:withAssertion:timestamp:]_block_invoke
Enabled
Disabled
phrasespotter assertion queue
-[CSVoiceTriggerXPCServiceProxy setPhraseSpotterBypassing:timeout:]_block_invoke_2
bypassed
NOT bypassed
-[CSVoiceTriggerXPCServiceProxy setPhraseSpotterBypassing:timeout:]_block_invoke
raise-to-speak assertion queue
-[CSVoiceTriggerXPCServiceProxy setRaiseToSpeakBypassing:timeout:]_block_invoke_2
-[CSVoiceTriggerXPCServiceProxy setRaiseToSpeakBypassing:timeout:]_block_invoke
-[CSVoiceTriggerXPCServiceProxy notifyVoiceTriggeredSiriSessionCancelled]
-[CSVoiceTriggerXPCServiceProxy notifyServiceConnectionLost]
-[CSAttSiriAudioSessionStateClient initWithDelegate:]
SiriStateNotificationListener
com.apple.siri.client-state-changed
-[CSAttSiriAudioSessionStateClient notifyObserver:didReceiveNotificationWithToken:]
-[CSAttSiriAudioSessionStateClient notifyObserver:didChangeStateFrom:to:]
-[CSAttSiriAudioSessionStateClient dispatchStateChangedFrom:to:]
-[CSContinuousAudioFingerprintEnabledPolicyHomePod _addContinousAudioFingerprintEnabledConditions]_block_invoke
-[CSAudioStreamProvidingProxy setAudioStreamProvidingForProxy:]
-[CSAudioStreamProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioStreamProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleSupportsDuckingWithStreamHandleID:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleSetCurrentConextMessage:messageBody:client:]
context
audioStreamRequest
-[CSAudioStreamProvidingProxy _handleAudioStreamRequestMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleAudioStreamPrepareMessage:messageBody:client:]
startAudioStreamOption
-[CSAudioStreamProvidingProxy _handleStartAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleStopAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleVoiceTriggerInfoMessage:messageBody:client:]
voiceTriggerInfo
rtsTriggerInfo
-[CSAudioStreamProvidingProxy _handleIsRecordingMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleRecordRouteMessage:messageBody:client:]
recordRoute
-[CSAudioStreamProvidingProxy _handleRecordDeviceInfo:messageBody:client:]
recordDeviceInfo
-[CSAudioStreamProvidingProxy _handleAudioDeviceInfo:messageBody:client:]
audioDeviceInfo
-[CSAudioStreamProvidingProxy _handleRecordSettings:messageBody:client:]
recordSettings
-[CSAudioStreamProvidingProxy _handleIsNarrowband:messageBody:client:]
-[CSAudioStreamProvidingProxy _handlePlaybackRouteMessage:messageBody:client:]
playbackRoute
-[CSAudioStreamProvidingProxy audioStreamProvider:didStopStreamUnexpectly:]
stopReason
chunk
-[CSAudioStreamProvidingProxy audioStreamProvider:didHardwareConfigurationChange:]
hardwareConfig
body
-[CSAudioStreamProvidingProxy _setAllowMixableAudioWhileRecording:]
Token
BestScore
StartSampleId
EndSampleId
com.apple.flxkwd
-[CSFlexKeywordSpotter startKeywordSpottingWithCompletion:]_block_invoke_2
-[CSFlexKeywordSpotter startKeywordSpottingWithCompletion:]_block_invoke
Unexpected exception creating KeywordDetector
reason
Exception creating KeywordDetector: %s
v24@?0@"CSAsset"8@"NSError"16
-[CSFlexKeywordSpotter processAudioChunk:]_block_invoke
-[CSFlexKeywordSpotter speechRecognizer:didFinishRecognitionWithError:]
-[CSFlexKeywordSpotter speechRecognizer:didRecognizeFinalResults:]
Kwds: 
%@:%f:%f:%f
===WinningTok=%@, bestScore=%f===
-[CSFlexKeywordSpotter speechRecognizer:didRecognizePartialResultNbest:]_block_invoke
-[CSFlexKeywordSpotter speechRecognizer:didRecognizePartialResult:]
getThresholdsMapAt_block_invoke
-[CSAttSiriAttendingAudioSrcNode initWithAttSiriController:]
CSAttSiriAudioSrcNode Attending queue
-[CSAttSiriAttendingAudioSrcNode initWithSpeechManager:audioStreamProvider:streamName:streamRequest:]
CSAttSiriAudioSrcNode
-[CSAttSiriAttendingAudioSrcNode startAudioStreamWithOption:completion:]_block_invoke_2
CSAttSiriAttendingAudioSrcNode
-[CSAttSiriAttendingAudioSrcNode addReceiver:]_block_invoke
-[CSAttSiriAttendingAudioSrcNode dealloc]
-[CSAttSiriAttendingAudioSrcNode audioStreamProvider:didStopStreamUnexpectly:]_block_invoke
-[CSAttSiriAttendingAudioSrcNode _handleDidStop]
-[CSAudioFileLog _closeAudioFile]
-[CSAudioFileLog startRecording]_block_invoke
-input.wav
-[CSAudioFileLog appendAudioData:]_block_invoke
-[CSAudioFileLog stopRecording]_block_invoke
Logs/CrashReporter/CoreSpeech/audio/
-[CSAudioFileLog _getOrCreateAudioLogDirectory]
/tmp
en_US_POSIX
yyyyMMdd-HHmmss
%@/%@%@%@
CSAudioSessionInfoProvider
-[CSAudioSessionInfoProvider audioSessionIdForDeviceId:]
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]_block_invoke
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]_block_invoke
-[CSAudioSessionInfoProvider _registerInterruptionNotification]
-[CSAudioSessionInfoProvider _registerAudioRouteChangeNotification]
-[CSAudioSessionInfoProvider _handleInterruption:]_block_invoke
-[CSAudioSessionInfoProvider _audioRouteChanged:]_block_invoke
RouteChangeNotificationInfo
-[CSAudioSessionInfoProvider _deregisterAudioSessionNotifications]
ApplicationProcessor
Remora
CSPreMyriadCoordinator Queue
-[CSPreMyriadCoordinator _clearPendingRemoraVoiceTrigger]
-[CSPreMyriadCoordinator handlePendingRemoraVoiceTriggerIfNeeded]
-[CSPreMyriadCoordinator handlePendingRemoraVoiceTriggerIfNeeded]_block_invoke
-[CSPreMyriadCoordinator _clearPendingBuiltInVoiceTrigger]
-[CSPreMyriadCoordinator handlePendingBuiltInVoiceTriggerIfNeeded]
-[CSPreMyriadCoordinator handlePendingBuiltInVoiceTriggerIfNeeded]_block_invoke
v32@?0@"NSString"8@"CSPreMyriadVoiceTriggerMetaData"16^B24
-[CSPreMyriadCoordinator secondPassDidStopForClient:deviceId:]
-[CSPreMyriadCoordinator secondPassDidStartForClient:deviceId:withFirstPassEstimate:]
+[CSUtils(AttSiri) logMitigationFeatures:forTask:withModelOutput:forMHRequestId:]
%@-%@.json
Task
Transcript
DetailedModelResult
AcousticFTMScore
InputOrigin
osdSignal
timeSinceLastQuery
airpodsConnected
boronSignal
decisionStage
prevInputLevel
speakerIDScore
eosLikelihood
timestamp
RawASRRecogCandidate
LatticeRNNResult
NLDAMetaInfo
triggerEndMachTime
triggerFireMachTime
-[CSAttSiriEndpointerNode initWithAttSiriController:]
CSAttSiriEndpointerNode queue
CSAttSiriEndpointerNode Latency Queue
-[CSAttSiriEndpointerNode addReceiver:]_block_invoke
-[CSAttSiriEndpointerNode removeReceiver:]_block_invoke
-[CSAttSiriEndpointerNode resetForNewRequestWithSampleRate:recordContext:recordOption:voiceTriggerInfo:]_block_invoke_2
-[CSAttSiriEndpointerNode endpointer:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[CSAttSiriEndpointerNode _reportHardEndpointToXPCClientWithTime:endpointerMetrics:]
audioURL : %@, numberOfChannels : %lu, scaleFactor: %f
CSSmartSiriVolumeEnablePolicy queue
-[CSSmartSiriVolumeEnablePolicy _addSmartSiriVolumeEnabledConditions]_block_invoke
triggerEndSeconds
userIdentityClassification
userClassified
@distinctUnionOfObjects.sharedUserId
-[CSAttSiriSSRNode stop]_block_invoke
-[CSAttSiriSSRNode addReceiver:]_block_invoke
-[CSAttSiriSSRNode setPrefetchedAsset:]_block_invoke
B24@?0@"SSRVoiceProfile"8@"NSDictionary"16
-[CSAttSiriSSRNode filteredVoiceProfileArray:]
q24@?0@8@16
en-US
-[CSAttSiriSSRNode _setupSSRControllerWithAudioContext:withVoiceTriggerEventInfo:]
-[CSAttSiriSSRNode _setupLeadingUtteranceLogger]
-[CSAttSiriSSRNode _setupSpeakerRecognitionForProfiles:WithVTEventInfo:WithLocale:]
-[CSAttSiriSSRNode _refreshSpeakerRecognitionAssets]_block_invoke_2
-[CSAttSiriSSRNode _refreshSpeakerRecognitionAssets]_block_invoke
-[CSAttSiriSSRNode _refreshSpeakerRecognitionAssets]
-[CSAttSiriSSRNode startXPCConnection]
-[CSAttSiriSSRNode CSSpeakerRecognitionAssetDownloadMonitor:didInstallNewAsset:assetProviderType:]_block_invoke
-[CSAttSiriSSRNode speakerRecognitionController:hasSpeakerInfo:]_block_invoke
-[CSAttSiriSSRNode speakerRecognitionController:hasSpeakerInfo:]_block_invoke_2
-[CSAttSiriSSRNode speakerRecognitionController:hasSpeakerInfo:]
-[CSAttSiriSSRNode CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSAttSiriSSRNode speakerRecognitionFinishedProcessing:withFinalSpeakerInfo:]_block_invoke
-[CSAttSiriSSRNode _processSpeakerRecognitionResult:]
-[CSAttSiriSSRNode _mapScoresToSharedSiriId:]
-[CSAttSiriSSRNode _mapScoresToSharedSiriId:]_block_invoke
v32@?0@8@16^B24
valid_scores
invalid_scores
-[CSAttSiriSSRNode _stopProcessing]
-[CSAttSiriSSRNode _stopProcessing]_block_invoke
-[CSAttSiriSSRNode attSiriAudioSrcNodeDidStop:]_block_invoke
-[CSSiriRestrictionOnLockScreenMonitor _startMonitoringWithQueue:]
-[CSSiriRestrictionOnLockScreenMonitor _stopMonitoring]
-[CSSiriRestrictionOnLockScreenMonitor _checkSiriRestrictedOnLockScreen]
-[CSPostBuildInstallService registerPostBuildInstallService]
-[CSPostBuildInstallService registerPostBuildInstallService]_block_invoke
com.apple.cs.postinstall
-[CSContinuousAudioFingerprintEnabledPolicy _addContinousAudioFingerprintEnabledConditions]_block_invoke
-[CESRXPCActivity registerANECompilationActivity]
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?>16
_RegisterANECompilationActivity_block_invoke_2
com.apple.siri.xpc_activity.speech-ane-compilation
_RegisterXPCActivity_block_invoke
CSVoiceTriggerHandlerMacQueue
-[CSVoiceTriggerAssetHandlerMac _getVoiceTriggerAssetFromAssetManagerWithLocale:completion:]_block_invoke
-[CSVoiceTriggerAssetHandlerMac _getVoiceTriggerAssetFromAssetManagerWithLocale:completion:]_block_invoke_2
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablity]_block_invoke
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablityForEndpoint]_block_invoke_3
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablityForEndpoint]_block_invoke
-[CSVoiceTriggerAssetHandlerMac CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:]
-[CSVoiceTriggerAssetHandlerMac CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSVoiceTriggerAssetHandlerMac CSFirstUnlockMonitor:didReceiveFirstUnlock:]
-[CSVoiceTriggerAssetHandlerMac trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
CSAttSiriCCActivationNode queue
-[CSAttSiriSpeechDetectionNode addReceiver:]
-[CSAttSiriSpeechDetectionNode attSiriNode:didUpdateOSDFeatures:withFrameDurationMs:]_block_invoke
-[CSAttSiriSpeechDetectionNode _startActivation]
RequestContext
DetectedToken
TriggerMachTime
TriggerAbsStartSampleId
{attendingCtx: %@, detctedToken: %@, triggerMachTime=%llu, triggerStartSampleId=%llu}
[requestHistoricalAudioDataWithHostTime = %@]
[requestHistoricalAudioDataSampleCount = %@]
[useOpportunisticZLL = %@]
[startRecordingHostTime = %llu]
[startRecordingSampleCount = %llu]
[alertBehavior = %llu %llu %llu]
[skipAlertBehavior = %@]
[requireSingleChannelLookup = %@]
[selectedChannel = %u]
[estimatedStartHostTime = %llu
[disableEndpointer = %d]
[disableLocalSpeechRecognizer = %d]
[disablePrewarmLocalSpeechRecognizer = %d]
[disableBoostForDoAP = %d]
requestHistoricalAudioDataWithHostTime
requestHistoricalAudioDataSampleCount
startRecordingHostTime
startRecordingSampleCount
useOpportunisticZLL
startAlertBehavior
stopAlertBehavior
errorAlertBehavior
skipAlertBehavior
requireSingleChannelLookup
selectedChannel
estimatedStartHostTime
disableEndpointer
disableLocalSpeechRecognizer
disablePrewarmLocalSpeechRecognizer
disableBoostForDoAP
requestMHUUID
siriSessionUUID
com.apple.corespeech.corespeechservices
com.apple.corespeech.xpc
+[CSCoreSpeechServices installedVoiceTriggerAssetForLanguageCode:completion:]_block_invoke
CoreSpeechXPC service invalidated
v32@?0@"NSString"8@"NSString"16@"NSError"24
+[CSCoreSpeechServices fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]_block_invoke
+[CSCoreSpeechServices getCurrentVoiceTriggerLocaleWithEndpointId:completion:]
+[CSCoreSpeechServices getCurrentVoiceTriggerLocaleWithEndpointId:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerRTModelForVersion:minorVersion:accessoryRTModelType:endpointId:downloadedModels:preinstalledModels:completion:]_block_invoke
v32@?0@"CSVoiceTriggerRTModel"8@"CSVoiceTriggerRTModel"16@"NSError"24
+[CSCoreSpeechServices voiceTriggerRTModelForVersion:minorVersion:downloadedModels:preinstalledModels:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
+[CSCoreSpeechServices voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
+[CSCoreSpeechServices requestUpdatedSATAudio]_block_invoke
v12@?0B8
+[CSCoreSpeechServices getFirstPassRunningMode]_block_invoke
v16@?0q8
VoiceTrigger Asset Change Monitor
com.apple.corespeech.voicetriggerassetchange
-[CSAudioServerCrashMonitor _startMonitoringWithQueue:]_block_invoke
-[CSAudioServerCrashMonitor _startMonitoringWithQueue:]
CSXPCClient Reply Queue
CSXPCClient connection Queue
-[CSXPCClient connect]_block_invoke
com.apple.corespeech.corespeechd.xpc
-[CSXPCClient _sendXPCClientType]
xpcClientType
-[CSXPCClient prepareAudioProviderWithContext:clientType:error:]
clientType
activateReason
dynamicAttribute
dictationRequestBundleId
deactivateOption
setDuckOthersOption
enableSmartRoutingConsideration
enableMiniDucking
alertType
forceSetAlert
soundPath
alertStartTime
-[CSXPCClient alertStartTime]_block_invoke
alertBehavior
setMeterEnable
channelNumber
power
-[CSXPCClient peakPowerForChannel:]_block_invoke
-[CSXPCClient averagePowerForChannel:]_block_invoke
-[CSXPCClient audioMetric]_block_invoke
audioMetric
-[CSXPCClient audioStreamWithRequest:streamName:error:]
v24@?0@"CSAudioStream"8@"NSError"16
-[CSXPCClient audioStreamWithRequest:streamName:completion:]
-[CSXPCClient audioStreamWithRequest:streamName:completion:]_block_invoke
-[CSXPCClient prepareAudioStreamSync:request:error:]
-[CSXPCClient prepareAudioStream:request:completion:]
v16@?0@"NSDictionary"8
-[CSXPCClient acousticSLResultForContext:completion:]
-[CSXPCClient acousticSLResultForContext:completion:]_block_invoke_2
acousticSLResult
-[CSXPCClient acousticSLResultForContext:completion:]_block_invoke
v24@?0@"NSDictionary"8@"NSDictionary"16
-[CSXPCClient triggerInfoForContext:completion:]
-[CSXPCClient audioStreamId]
-[CSXPCClient audioChunkFrom:to:]
-[CSXPCClient audioChunkFrom:to:channelIdx:]
-[CSXPCClient audioChunkToEndFrom:]
-[CSXPCClient audioChunkToEndFrom:channelIdx:]
-[CSXPCClient saveRecordingBufferFrom:to:toURL:]
-[CSXPCClient saveRecordingBufferToEndFrom:toURL:]
-[CSXPCClient holdAudioStreamWithDescription:timeout:]
-[CSXPCClient cancelAudioStreamHold:]
-[CSXPCClient isRecording]
-[CSXPCClient setAnnounceCallsEnabled:withStreamHandleID:]
-[CSXPCClient attachTandemStream:toPrimaryStream:completion:]
deviceID
sessionID
-[CSXPCClient audioSessionIdForDeviceId:]
sampleCount
-[CSXPCClient hostTimeFromSampleCount:]_block_invoke
replyHostTime
-[CSXPCClient hostTimeFromSampleCount:]
hostTime
-[CSXPCClient sampleCountFromHostTime:]_block_invoke
replySampleCount
-[CSXPCClient sampleCountFromHostTime:]
-[CSXPCClient _handleListenerEvent:]
-[CSXPCClient _handleListenerMessage:]
-[CSXPCClient _handleListenerError:]
-[CSXPCClient _handleAlertProvidingDelegateMessageBody:]
didFinishAlertPlayback
errorDomain
errorCode
-[CSXPCClient _handleSessionProvidingDelegateMessageBody:]
interruptionContext
-[CSXPCClient _handleSessionProvidingDelegateBeginInterruptionWithContext:]
willSetAudioSessionActive
didSetAudioSessionActive
streamHandleIdInvalidationflag
didChangeContextFlag
-[CSXPCClient _handleSessionInfoProvidingDelegateMessageBody:]
notificationInfo
-[CSXPCClient _handleSessionInfoProvidingDelegateInterruptionNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateRouteChangeNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:]
-[CSXPCClient _handleStreamProvidingDelegateMessageBody:]
CSOpportuneSpeakListnerTestService
com.apple.corespeech.opportunelistner.start
com.apple.corespeech.opportunelistner.stop
A945B95D-69F6-FC77-4FAE-91F50A039CD8
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStart]_block_invoke
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStop]_block_invoke
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasRemoteVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:didStopUnexpectly:]
CSTimerMonitor queue
-[CSTimerMonitor _startMonitoringWithQueue:]
-[CSTimerMonitor _stopMonitoring]
BluetoothA2DPOutput
BluetoothHFP
BluetoothLE
MicrophoneBuiltIn
Speaker
Headphones
MicrophoneWired
HDMIOutput
LineIn
USBAudio
ADAudioSessionPortOther
-[CSSiriAudioSession currentInputRoute]_block_invoke
v24@?0^v8Q16
-[CSSiriAudioSession currentOutputRoute]_block_invoke_3
_AudioObjectGetScalarArray
v20@?0I8r^{AudioObjectPropertyAddress=III}12
_AudioDeviceRegisterForChangedNotification
v16@?0^v8
_AudioObjectGetCFTypeRef
v12@?0I8
_AudioObjectGetIntValue
CSOpportuneSpeakEventMonitor
-[CSOpportuneSpeakEventMonitor isStreaming]
override-asset
-[CSAttSiriMitigationAssetHandler setCachedAsset:]_block_invoke
-[CSAttSiriMitigationAssetHandler _receivedNewAssetUpdate:]
-[CSAttSiriMitigationAssetHandler trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
kVTPreferencesPhraseSpotterEnabledDidChangeDarwinNotification
-[CSPhraseSpotterEnabledMonitor _checkPhraseSpotterEnabled]
-[CSPhraseSpotterEnabledMonitor _phraseSpotterEnabledDidChange]
CSVoiceTriggerAssetHandler
-[CSVoiceTriggerAssetHandler getVoiceTriggerAssetWithEndpointId:completion:]
CSVoiceTriggerAssetHandler.m
com.apple.siri.myriad.in.ear
+[CSMyriadNotifier notifyInEarMyriadTrigger]
com.apple.corespeech.benchmark.xpc
-[CSBenchmarkXPCListener listen]
-[CSBenchmarkXPCListener listener:shouldAcceptNewConnection:]
corespeech.benchmark.xpc
Liminal
progChecker.json
progressiveCheckerConfigFile
contionusConversationConfigFile
checkerConfig
validInputOrigins
thresholds
shadowMode
Unspecified
VoiceTrigger
ButtonPress
B32@?0@8@16^B24
v24@?0@8^B16
-[CSLanguageCodeUpdateMonitorImpl _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImpl _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImpl _didReceiveLanguageCodeUpdate]
CSVoiceTriggerXPCListener
com.apple.corespeech.voicetriggerservice
-[CSVoiceTriggerXPCListener listen]
-[CSVoiceTriggerXPCListener _handleListenerEvent:]
-[CSVoiceTriggerXPCListener _handleListenerError:]
-[CSVoiceTriggerXPCListener _handleNewRemoteConnection:]
voicetrigger.voicetriggerservice
-[CSVoiceTriggerXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
CSCoreSpeechServicesListener
-[CSCoreSpeechServicesListener listen]
-[CSCoreSpeechServicesListener _servicesListenerShouldAcceptNewConnection:]
corespeech.xpc
-[CSCoreSpeechServicesListener listener:shouldAcceptNewConnection:]
-[CSCoreSpeechServicesListener getTestResponse:]
Test
-[CSCoreSpeechServicesListener setDelayInterstitialSounds:level:completion:]
-[CSCoreSpeechServicesListener getTriggerCount:]
-[CSCoreSpeechServicesListener clearTriggerCount:]
-[CSCoreSpeechServicesListener getFirstPassRunningMode:]
-[CSAudioStreamHolding dealloc]
-[CSEndpointDelayReporter initWithRequestMHUUID:turnIdentifier:]
-[CSEndpointDelayReporter reset]
leadingSilence
trailingSilence
endTime
-[CSEndpointDelayReporter setSpeechRecognizedContext:withEndpointerMetrics:]
siriVolume.json
smartSiriVolume
noiseLevelChannelBitset
LKFSChannelBitset
DistanceChannelBitset
energyBufferSize
noiseLowerPercentile
noiseUpperPercentile
LKFSLowerPercentile
LKFSUpperPercentile
noiseTimeConstant
noiseMicSensitivityOffset
noiseMicSensitivityOffsetDeviceSimple
LKFSTimeConstant
LKFSMicSensitivityOffset
noiseTTSMappingInputRangeLow
noiseTTSMappingInputRangeHigh
noiseTTSMappingOutputRangeLow
noiseTTSMappingOutputRangeHigh
LKFSTTSMappingInputRangeLow
LKFSTTSMappingInputRangeHigh
LKFSTTSMappingOutputRangeLow
LKFSTTSMappingOutputRangeHigh
userOffsetInputRangeLow
userOffsetInputRangeHigh
userOffsetOutputRangeLow
userOffsetOutputRangeHigh
TTSVolumeLowerLimitDB
TTSVolumeUpperLimitDB
noiseWeight
SSVCAMaxFrameSize
SSVCAVoiceTriggerBasedTTSValidForSeconds
SSVCASmartSiriVolumeUnsyncedMetricLogsToRetain
SSVCASmartSiriVolumeSyncedMetricLogsToRetain
SSVCAVoiceTriggerInitialSilenceDurationSeconds
SSVCADistanceInputBufferDurationSeconds
SSVCAListenPollingIntervalAtStartInSeconds
SSVCADefaultZeroFloatingPointValue
SSVCAAnnouncementStatusFetchTimeoutMs
SSVCADefaultOutputTTSVolume
SSVCANoiseActivityCountThreshold
SSVCASpeakerDistanceFarBoostFactor
SSVCASpeakerDistanceMidBoostFactor
SSVCASpeakerDistanceNearBoostFactor
SSVCADistanceModelConfidenceThreshold
SSVCAMinimumLinearSoundLevel
SSVCAMaximumLinearSoundLevel
SSVCALinearToDecibelConstantMultiplier
SSVCADecibelToLinearLogBase
SSVCASignalToSigmoidNoiseDilationFactor
SSVCASignalToSigmoidMusicDilationFactorDeviceDefault
SSVCASignalToSigmoidMusicDilationFactorDeviceSimple
SSVCASignalToSigmoidMusicDilationFactorDeviceSimple2
SSVCASignalToSigmoidSpeechDilationFactor
SSVCASignalToSigmoidNoiseVSpread
SSVCASignalToSigmoidMusicVSpreadDeviceDefault
SSVCASignalToSigmoidMusicVSpreadDeviceSimple
SSVCASignalToSigmoidMusicVSpreadDeviceSimple2
SSVCASignalToSigmoidSpeechVSpread
SSVCASignalToSigmoidNoiseVOffset
SSVCASignalToSigmoidMusicVOffsetDeviceDefault
SSVCASignalToSigmoidMusicVOffsetDeviceSimple
SSVCASignalToSigmoidMusicVOffsetDeviceSimple2
SSVCASignalToSigmoidSpeechVOffset
SSVCASignalToSigmoidNoiseHOffset
SSVCASignalToSigmoidMusicHOffsetDeviceDefault
SSVCASignalToSigmoidMusicHOffsetDeviceSimple
SSVCASignalToSigmoidMusicHOffsetDeviceSimple2
SSVCASignalToSigmoidSpeechHOffset
SSVCASignalToSigmoidMusicSteepnessDeviceDefault
SSVCASignalToSigmoidMusicSteepnessDeviceSimple
SSVCASignalToSigmoidMusicSteepnessDeviceSimple2
SSVCASignalToSigmoidNoiseSteepness
SSVCASignalToSigmoidSpeechSteepness
SSVCADBToTTSMinimumOutput
SSVCADBToTTSMaximumOutput
SSVCADBToTTSTransitionPoint
SSVCADBToTTSPreTransitionOffset
SSVCADBToTTSPreTransitionMultiplier
SSVCADBToTTSPostTransitionOffset
SSVCADBToTTSPostTransitionDC
SSVCADBToTTSPostTransitionMultiplier
SSVCAMinimumDistanceUpdateWaitPeriodSeconds
SSVCANoiseActivityThreshold
SSVCANoiseResultsBufferSize
SSVCAMusicResultsBufferSize
SSVCADefaultSpeechStrength
SSVCADefaultMusicStrength
SSVCANoiseActivityHistoricalSampleCount
SSVCADspCoefsCount
SSVCADspNumStages
SSVCADistanceResultsBufferSize
SSVCAExponentialDistanceHistoryDegradationFactor
SSVCADistanceResultSampleCountTolerance
SSVCAMusicHistoricalSamplesInSeconds
SSVCADeviceSimpleOutputMinTargetDB
SSVCADeviceSimpleOutputMaxTargetDB
SSVCADeviceSimpleOutputSlope
SSVCADeviceSimple2OutputSlope
SSVCADeviceSimpleMinTargetDB
SSVCADeviceSimpleMaxTargetDB
SSVCADeviceSimpleDBToSystemVolSlope
SSVCADeviceSimpleMicSensitivityOffset
SSVCADeviceSimplePreTriggerSilenceSampleCount
SSVCADeviceSimple2OutputMinTargetDB
SSVCADeviceSimple2OutputMaxTargetDB
SSVCAMinTTSSystemVolume
SSVCAMaxTTSSystemVolume
SSVCAMinTTSSystemVolumeSimple2
SSVCAMaxTTSSystemVolumeSimple2
SSVCAUserIntentValidForSeconds
SSVCAUserIntentVolumeIncreaseFactor
SSVCAUserIntentVolumeDecreaseFactor
SSVCAUserIntentPermanentOffsetFactorDelta
SSVCAUserIntentPermanentOffsetFactorLowerBound
SSVCAUserIntentPermanentOffsetFactorUpperBound
SSVCADeviceSimpleMinTTSVolume
SSVCADeviceSimpleMaxTTSVolume
SSVCADeviceDefaultASVOffMinTTSVolume
SSVCADeviceSimpleASVOffMinTTSVolume
SSVCADeviceSimple2ASVOffMinTTSVolume
SSVCADeviceDefaultMicSensitivityOffset
SSVCAVolumeHalfLifeSeconds
SSVCAHistoricalVolumeBufferSize
SSVCAMaximumCompensatedSpeechLevelNearField
SSVCADeviceDefaultDropInCallAnnouncementMinTTSVolume
SSVCADeviceSimpleDropInCallAnnouncementMinTTSVolume
SSVCADeviceSimple2DropInCallAnnouncementMinTTSVolume
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicDilationFactorDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicVSpreadDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicVOffsetDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicHOffsetDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCASignalToSigmoidMusicSteepnessDeviceSimple]
-[CSAsset(SmartSiriVolume) SSVCADeviceSimpleASVOffMinTTSVolume]
-[CSAsset(SmartSiriVolume) _getNumberFromASVDictionaryForKey:category:default:]
com.apple.corespeech.audioinjection.xpc
-[CSAudioInjectionXPCListener listen]
-[CSAudioInjectionXPCListener listener:shouldAcceptNewConnection:]
corespeech.audioinjection.xpc
-[CSHostPowerStateMonitor currentPowerState]
CSHostPowerStateMonitor.m
-[CSHostPowerStateMonitor currentRawPowerState]
-[CSHostPowerStateMonitor _startMonitoringWithQueue:]
-[CSHostPowerStateMonitor _stopMonitoring]
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
CSAudioProvider
CSAudioProvider Stream Handle Queue
CSAudioProvider logging
-[CSAudioProvider dealloc]
-[CSAudioProvider setStreamState:]
-[CSAudioProvider setAudioRecorder:]_block_invoke
-[CSAudioProvider supportsDuckingOnCurrentRouteWithError:]
-[CSAudioProvider setCurrentContext:error:]
-[CSAudioProvider setCurrentContext:error:]_block_invoke
-[CSAudioProvider _audioStreamWithRequest:streamName:error:]
-[CSAudioProvider attachTandemStream:toPrimaryStream:completion:]_block_invoke_2
failed
successfully
-[CSAudioProvider attachTandemStream:toPrimaryStream:completion:]_block_invoke
-[CSAudioProvider _prepareAudioStreamSync:request:error:]
-[CSAudioProvider _createCircularBufferIfNeededWithNumChannel:playbackRoute:]
-[CSAudioProvider startAudioStream:option:completion:]
-[CSAudioProvider startAudioStream:option:completion:]_block_invoke
-[CSAudioProvider prepareAudioStreamSync:request:error:]
-[CSAudioProvider prepareAudioStream:request:completion:]
-[CSAudioProvider _startAudioStream:option:completion:]
-[CSAudioProvider _startAudioStream:option:completion:]_block_invoke_3
-[CSAudioProvider _startAudioStream:option:completion:]_block_invoke_2
-[CSAudioProvider _startAudioStream:option:completion:]_block_invoke
-[CSAudioProvider _handleDidStartAudioStreamWithResult:error:]
-[CSAudioProvider _handleDidStopAudioStreamWithReason:]
-[CSAudioProvider _stopAudioStream:option:completion:]
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_4
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_3
CSAudioProvider.m
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_2
-[CSAudioProvider _saveRecordingBufferFrom:to:toURL:]_block_invoke
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke_2
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke
-[CSAudioProvider cancelAudioStreamHold:]
-[CSAudioProvider cancelAudioStreamHold:]_block_invoke
-[CSAudioProvider prewarmAudioSessionWithError:]
-[CSAudioProvider activateAudioSessionWithReason:dynamicAttribute:bundleID:error:]
-[CSAudioProvider _activateAudioSessionWithReason:error:]
-[CSAudioProvider _shouldDuckOnBuiltInSpeaker]
-[CSAudioProvider _isDuckingOnSpeakerOutputSupportedWithCurrentRoute]
-[CSAudioProvider deactivateAudioSession:error:]
-[CSAudioProvider _deactivateAudioSession:error:]
-[CSAudioProvider setDuckOthersOption:]
-[CSAudioProvider setAlertSoundFromURL:forType:force:]
-[CSAudioProvider playAlertSoundForType:]
-[CSAudioProvider playRecordStartingAlertAndResetEndpointer]
-[CSAudioProvider alertStartTime]
-[CSAudioProvider triggerInfoForContext:completion:]_block_invoke
-[CSAudioProvider _shouldStopRecording]
-[CSAudioProvider audioRecorderStreamHandleIdInvalidated:]
-[CSAudioProvider audioRecorderWillBeDestroyed:]_block_invoke
-[CSAudioProvider _fetchHistoricalAudioAndForwardToStream:remoteVAD:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]_block_invoke
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]_block_invoke_2
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]_block_invoke
-[CSAudioProvider audioRecorderBuiltInAudioStreamInvalidated:error:]_block_invoke
-[CSAudioProvider audioRecorderDisconnected:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSAudioProvider _handleAudioSystemFailure]
StreamInit
StreamPrepared
StreamStarting
StreamSteaming
StreamStopping
StreamStoppingWithScheduledStart
unknown(%tu)
com.apple.corespeech.recording
Recording transaction
-[CSAudioProvider _releaseRecordingTransactionIfNeeded]
%@-%@
-[CSAudioProvider _onAudioPacketWatchdogFire]
-[CSAudioProvider _scheduleDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _schduleDidStartRecordingDelegateWatchDogWithToken:]
-[CSAudioProvider _clearDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog:]
-[CSAudioProvider _clearDidStopRecordingDelegateWatchDog]
-[CSAudioProvider _updateRemoteDeviceIdFromAVVCIfNeeded]
com.apple.siri.SiriDebug.SpeakerVoiceGradingTrigger
com.apple.siri.SiriDebug.RemoteNearMissGradingTrigger
com.apple.siri.SiriDebug.VoiceProfileAddedTrigger
com.apple.siri.SiriDebug.VoiceProfileSyncTrigger
com.apple.siri.SiriDebug
+[CSSiriDebugConnection launchSiriDebugAppWithMessage:]_block_invoke
v24@?0@"AFSiriResponse"8@"NSError"16
set option : allowVoiceTriggerAssetsDownload ? %@;           allowEndpointAssetDownload ? %@;           allowLanguageDetectorAssetDownload ? %@;           allowAdBlockerAssetDownload ? %@;           allowSpeakerRecognitionAssetDownload ? %@
-[CSHomePodSettingsMonitor _stopMonitoring]
-[CSVoiceTriggerEnabledPolicyNonAOP _addVoiceTriggerEnabledConditions]_block_invoke
-[CSNNVADEndpointAnalyzer init]
-[CSNNVADEndpointAnalyzer preheat]
-[CSNNVADEndpointAnalyzer reset]
-[CSNNVADEndpointAnalyzer processAudioSamplesAsynchronously:]
-[CSNNVADEndpointAnalyzer recordingStoppedForReason:]
-[CSNNVADEndpointAnalyzer stopEndpointer]
-[CSNNVADEndpointAnalyzer resetForNewRequestWithSampleRate:recordContext:]
-[CSSpeechDetectionDevicePresentMonitor handleSpeechDetectionVADPresentChange:]
-[CSSpeechDetectionDevicePresentMonitor _systemControllerDied:]
rtblobs
adkblobs
blob
majorVersion
minorVersion
signature
cert
rtlocalemap
jarvislocalemap
adklocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) rtModelWithAccessoryRTModelType:majorVersion:minorVersion:locale:]
-[CSAsset(RTModel) localeMapWithName:]
%02x
-[CSGestureMonitor isTriggerHandheld]
CSAudioRouteChangeMonitorImpl queue
-[CSAudioRouteChangeMonitorImpl preferredExternalRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl pickableRoutesDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl carPlayAuxStreamSupportDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl carPlayIsConnectedDidChange:]
-[CSAudioRouteChangeMonitorImpl _startMonitoringWithQueue:]
-[CSAudioRouteChangeMonitorImpl _stopMonitoring]
-[CSAudioRouteChangeMonitorImpl _notifyHearstConnectionState:]
-[CSAudioRouteChangeMonitorImpl _notifyHearstRoutedState:]
-[CSAudioRouteChangeMonitorImpl _notifyJarvisConnectionState:]
-[CSAudioRouteChangeMonitorImpl _notifySiriInputSourceOutOfBandState:]
-[CSAudioRouteChangeMonitorImpl _systemControllerDied:]
Builtin Microphone
[Context = %ld]
[DeviceId = %@]
[Announced = %d]
[streamHandleId = %d]
[startHostTime = %llu]
[startAlert = %d]
[stopAlert = %d]
[stopOnErrorAlert = %d]
[skipAlert = %@]
-[CSAudioRecorder initWithQueue:error:]
-[CSAudioRecorder userSessionActivateMonitor:didReceivedUserSessionActiveHasChanged:]_block_invoke
-[CSAudioRecorder willDestroy]
-[CSAudioRecorder dealloc]
-[CSAudioRecorder _destroyVoiceController]
-[CSAudioRecorder _voiceControllerWithError:]_block_invoke_2
-[CSAudioRecorder _voiceControllerWithError:]_block_invoke
-[CSAudioRecorder _voiceControllerWithError:]
-[CSAudioRecorder setAnnounceCallsEnabled:withStreamHandleID:]
-[CSAudioRecorder setContext:completion:]
-[CSAudioRecorder setCurrentContext:streamHandleId:error:]
-[CSAudioRecorder prepareAudioStreamRecord:recordDeviceIndicator:error:]
-[CSAudioRecorder _startAudioStreamForAudioInjectionWithAVVCContext:]
-[CSAudioRecorder startAudioStreamWithOption:recordDeviceIndicator:error:]
-[CSAudioRecorder stopAudioStreamWithRecordDeviceIndicator:error:]
-[CSAudioRecorder isSessionCurrentlyActivated]
-[CSAudioRecorder recordDeviceInfoWithStreamHandleId:recordDeviceIndicator:]
%llu
-[CSAudioRecorder audioDeviceInfoWithStreamHandleId:recordDeviceIndicator:]
-[CSAudioRecorder recordingSampleRateWithStreamHandleId:]
-[CSAudioRecorder isNarrowBandWithStreamHandleId:]
-[CSAudioRecorder prewarmAudioSessionWithStreamHandleId:error:]
iPhone9,1
iPhone9,2
iPhone9,3
iPhone9,4
-[CSAudioRecorder setRecordMode:streamHandleId:error:]
-[CSAudioRecorder activateAudioSessionWithReason:streamHandleId:error:]
-[CSAudioRecorder deactivateAudioSession:error:]
-[CSAudioRecorder deactivateAudioSession:streamHandleId:error:]
+[CSAudioRecorder createSharedAudioSession]
-[CSAudioRecorder enableSmartRoutingConsiderationForStream:enable:]
-[CSAudioRecorder setDuckMixWithOthersForStream:duckOthers:duckToLevelInDB:mixWithOthers:]
+[CSAudioRecorder resetDuckSettings]
-[CSAudioRecorder enableMiniDucking:]
Enable
Disable
-[CSAudioRecorder configureAlertBehavior:audioStreamHandleId:]
isBluetoothConnected
-[CSAudioRecorder voiceTriggerInfoWithRecordDeviceIndicator:]
-[CSAudioRecorder isDuckingSupportedOnCurrentRouteWithStreamHandleID:error:]
is not
-[CSAudioRecorder _updateLanguageCodeForRemoteVTEIResult:]
useRemoteBuiltInMic
-[CSAudioRecorder _processAudioBuffer:audioStreamHandleId:arrivalTimestampToAudioRecorder:]
-[CSAudioRecorder _compensateChannelDataIfNeeded:receivedNumChannels:]
-[CSAudioRecorder _trackRemoteAccessoryStreamIdIfNeeded:]
-[CSAudioRecorder playRecordStartingAlertAndResetEndpointerFromStream:]
-[CSAudioRecorder playAlertSoundForType:recordDevideIndicator:]
-[CSAudioRecorder voiceControllerDidStartRecording:forStream:successfully:error:]
-[CSAudioRecorder voiceControllerAudioCallback:forStream:buffer:]
-[CSAudioRecorder voiceControllerDidStopRecording:forStream:forReason:]
-[CSAudioRecorder voiceControllerStreamInvalidated:forStream:]
-[CSAudioRecorder voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[CSAudioRecorder voiceControllerDidFinishAlertPlayback:ofType:error:]
-[CSAudioRecorder voiceControllerEncoderErrorDidOccur:error:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:withContext:]
-[CSAudioRecorder voiceControllerEndRecordInterruption:]
-[CSAudioRecorder voiceControllerWillSetAudioSessionActive:willActivate:]
-[CSAudioRecorder voiceControllerDidSetAudioSessionActive:isActivated:]
-[CSAudioRecorder voiceControllerMediaServicesWereLost:]
-[CSAudioRecorder voiceControllerMediaServicesWereReset:]
-[CSAudioRecorder _hasLocalPendingTwoShot]_block_invoke
-[CSAudioRecorder _getRecordSettingsWithRequest:]
-[CSAudioRecorder _fetchRemoteRecordClientWithDeviceId:streamHandleId:]
-[CSAudioTandemStream attachToPrimaryStreamWithCompletion:]
-[CSAudioTandemStream prepareAudioStreamSyncWithRequest:error:]
CSAudioTandemStream.m
-[CSAudioTandemStream prepareAudioStreamWithRequest:completion:]
-[CSAudioTandemStream startAudioStreamWithOption:completion:]
-[CSAudioTandemStream stopAudioStreamWithOption:completion:]
RemoteVAD Align Queue
-[CSOpportuneSpeakListener startListenWithOption:completion:]
-[CSOpportuneSpeakListener _startRequestWithCompletion:]_block_invoke
-[CSOpportuneSpeakListener _startRequestWithCompletion:]
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]_block_invoke
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]
-[CSOpportuneSpeakListener audioStreamProvider:audioBufferAvailable:]
-[CSOpportuneSpeakListener spgEndpointAnalyzer:hasSilenceScoreEstimate:clientProcessedAudioTimeMS:]
-[NSData(XPCObject) _cs_initWithXPCObject:]
-[CSSiriEnabledMonitor _startMonitoringWithQueue:]
-[CSSiriEnabledMonitor _stopMonitoring]
_AssistantPrefsChangedNotification
-[CSSmartSiriVolumeEnablePolicyHomePod _addSmartSiriVolumeEnabledConditions]_block_invoke
CSBluetoothManager Queue
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]_block_invoke
v16@?0^{BTLocalDeviceImpl=}8
-[CSBluetoothManager _getConnectedBluetoothDeviceAddressesFromLocalDevice:]
-[CSBluetoothManager _getAddressWithBTDevice:]
-[CSBluetoothManager _getWirelessSplitterInfoFromLocalDevice:]
-[CSBluetoothManager _detachBluetoothSession]
-[CSBluetoothManager _attachBluetoothSession]
CSBluetoothManager
-[CSBluetoothManager _sessionAttached:result:]
-[CSBluetoothManager _sessionDetached:]
-[CSBluetoothManager _sessionTerminated:]
-[CSBluetoothManager _setUpLocalDevice]
CSActivationXPCListener
-[CSActivationXPCListener listen]
-[CSActivationXPCListener _handleListenerEvent:]
-[CSActivationXPCListener _handleListenerError:]
-[CSActivationXPCListener _handleNewRemoteConnection:]
corespeechd.activation
-[CSActivationXPCListener CSActivationXPCConnectionReceivedClientError:clientError:client:]_block_invoke
CSBenchMarker Queue
-[CSModelBenchmarker init]
-[CSModelBenchmarker pingpong:completion:]
Model benchmark Queue
HS1_HS2
SiriX
enableTelemetry=YES
-[CSModelBenchmarker audioEngineDidStartRecord:audioStreamHandleId:successfully:error:]_block_invoke
each batch duration: %d
-[CSModelBenchmarker audioEngineDidStopRecord:audioStreamHandleId:reason:]_block_invoke
v16@?0Q8
-[CSModelBenchmarker _setupAudioInjectionEngineWithAudioURL:]_block_invoke
-[CSModelBenchmarker _setupAudioInjectionEngineWithAudioURL:]_block_invoke_2
subsample
stride
spid
Cannot parse to JSON
Cannot find the file
frontends
nnet-forward
strict-batch-size
nnet-forward-skip
skip-frames
+[CSRemoteDeviceProtocolInfo localDeviceProtocolInfo]
protocolVersion=%lu, deviceCategory=%lu, buildVersion=%@, deviceProductVersion=%@, deviceProductType=%@
protocolVersion
deviceCategory
buildVersion
deviceProductVersion
deviceProductType
-[CSAudioSessionInfoProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionInfoProvidingProxy _handleSessionIDRequestMessage:messageBody:client:]
+[CSConnectionListener(SmartSiriVolume) createSmartSiriVolumeListener]
com.apple.corespeech.corespeechd.ssv.service
+[CSConnectionListener(SmartSiriVolume) createSmartSiriVolumeListener]_block_invoke
com.apple.MobileAsset.VoiceTriggerAssetsMac
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController assetOfType:language:compatibilityVersion:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:query:withLanguage:completion:]_block_invoke
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]
-[CSAssetController fetchRemoteMetaOfType:allowRetry:]_block_invoke
v20@?0@"NSError"8B16
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:query:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.SpeechEndpointAssetsWatch
com.apple.MobileAsset.SpeechEndpointAssetsTV
com.apple.MobileAsset.LanguageDetectorAssets
com.apple.MobileAsset.AdBlockerAssets
com.apple.MobileAsset.SpeakerRecognitionAssets
Warmup
clientStartSampleCount
triggerEndSampleCount
extraSamplesAtStart
SearchOrMessaging
ExtraDelayMs
EndpointerDecisionLagMs
ClientLagThresholdMsKey
ClampedSFLatencyMsForClientLag
UseDefaultServerFeaturesOnClientLag
com.apple.cs.%@.stateserialqueue
com.apple.cs.%@.sepfQueue
-[CSHybridEndpointAnalyzer init]
com.apple.cs.%@.apQueue
com.apple.cs.%@.hybridClassifierfQueue
com.apple.cs.%@.osdQueue
-[CSHybridEndpointAnalyzer _loadAndSetupEndpointerAssetIfNecessary]
-[CSHybridEndpointAnalyzer processAudioSamplesAsynchronously:]
-[CSHybridEndpointAnalyzer processAudioSamplesAsynchronously:]_block_invoke
-[CSHybridEndpointAnalyzer processAudioSamplesAsynchronously:]_block_invoke_2
-[CSHybridEndpointAnalyzer updateEndpointerThreshold:]
-[CSHybridEndpointAnalyzer updateEndpointerDelayedTrigger:]
-[CSHybridEndpointAnalyzer processServerEndpointFeatures:]
-[CSHybridEndpointAnalyzer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke_2
-[CSHybridEndpointAnalyzer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]_block_invoke_3
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]_block_invoke_2
-[CSHybridEndpointAnalyzer osdAnalyzer:didUpdateOSDFeatures:]_block_invoke
locale
endpointerModelVersion
wordCount
trailingSilenceDuration
serverFeaturesLatency
clientSilenceProbability
clientSilenceFramesCountMs
endpointResult
-[CSHybridEndpointAnalyzer logFeaturesWithEvent:locale:]_block_invoke
-[CSHybridEndpointAnalyzer handleVoiceTriggerWithActivationInfo:]_block_invoke
-[CSHybridEndpointAnalyzer recordingStoppedForReason:]
-[CSHybridEndpointAnalyzer stopEndpointer]
-[CSHybridEndpointAnalyzer resetForNewRequestWithSampleRate:recordContext:]
-[CSHybridEndpointAnalyzer resetForNewRequestWithSampleRate:recordContext:]_block_invoke
-[CSHybridEndpointAnalyzer _readParametersFromHEPAsset:]_block_invoke
-[CSHybridEndpointAnalyzer CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSHybridEndpointAnalyzer CSAssetManagerDidDownloadNewAsset:]
-[CSHybridEndpointAnalyzer CSFirstUnlockMonitor:didReceiveFirstUnlock:]
-[CSHybridEndpointAnalyzer _updateAssetWithLanguage:]_block_invoke
cs_hep_marsh.json
cs_hep.json
-[CSHybridEndpointAnalyzer _getCSHybridEndpointerConfigForAsset:]
voic
carplay
hearst
raisetospeak
auto
CSAudioInjectionXPC Queue
-[CSAudioInjectionXPC createAudioInjectionDeviceWithType:deviceName:deviceID:productID:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]_block_invoke
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:completion:]_block_invoke_2
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:]
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:]_block_invoke
-[CSAudioInjectionXPC injectAudio:toDeviceWithUUID:withScaleFactor:withNumChannels:completion:]_block_invoke_2
-[CSAudioInjectionXPC connectDeviceWithUUID:completion:]
-[CSAudioInjectionXPC disconnectDeviceWithUUID:completion:]
-[CSAudioInjectionXPC disconnectDeviceWithUUID:completion:]_block_invoke
-[CSAudioInjectionXPC primaryInputDeviceUUIDWithCompletion:]
-[NSNumber(XPCObject) _cs_initWithXPCObject:]
-[NSNumber(XPCObject) _cs_xpcObject]
CSActivationEventNotificationHandler Queue
-[CSActivationEventNotificationHandler setDelegate:forType:]_block_invoke
-[CSActivationEventNotificationHandler notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotificationHandler _notifyActivationEvent:completion:]
-[CSActivationEventNotificationHandler _notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotificationHandler _startMonitoring]
-[CSActivationEventNotificationHandler _stopMonitoring]
triggerStartSampleCount
isMediaPlaying
noiseLevelDB
musicLevelDB
musicPlaybackVolumeDB
alarmVolume
finalTTSVolume
isAlarmPlaying
isTimerPlaying
isLKFSProcessPaused
removeVoiceTriggerSamples
-[CSSmartSiriVolume initWithSamplingRate:asset:]
-[CSSmartSiriVolume startSmartSiriVolume]_block_invoke
RUNNING
PAUSED
v20@?0B8Q12
-[CSSmartSiriVolume _startListenPolling]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke_3
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]
-[CSSmartSiriVolume _stopListening]
-[CSSmartSiriVolume _stopListening]_block_invoke
-[CSSmartSiriVolume initializeMediaPlayingState]_block_invoke
playing
NOT playing
-[CSSmartSiriVolume initializeMediaPlayingState]
-[CSSmartSiriVolume initializeAlarmState]_block_invoke
firing
NOT firing
-[CSSmartSiriVolume initializeTimerState]_block_invoke
-[CSSmartSiriVolume _setAsset:]
-[CSSmartSiriVolume _processAudioChunk:soundType:]
-[CSSmartSiriVolume estimateSoundLevelbySoundType:]_block_invoke
-[CSSmartSiriVolume _pauseSSVProcessing]_block_invoke
-[CSSmartSiriVolume _resumeSSVProcessing]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:audioBufferAvailable:]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:didStopStreamUnexpectly:]
-[CSSmartSiriVolume didDetectKeywordWithResult:]
-[CSSmartSiriVolume didDetectKeywordWithResult:]_block_invoke
-[CSSmartSiriVolume estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:]_block_invoke
-[CSSmartSiriVolume _combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:]
-[CSSmartSiriVolume CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:]_block_invoke
-[CSSmartSiriVolume didReceiveAlarmChanged:]_block_invoke
-[CSSmartSiriVolume didReceiveTimerChanged:]_block_invoke
-[CSSmartSiriVolume CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSSmartSiriVolume siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSSmartSiriVolume _setStartAnalyzeTime:]
-[CSSmartSiriVolume getVolumeForTTSType:withOverrideMediaVolume:WithRequestTime:]
vector
CSAudioInjectionProvider
ATVRemoteInput
BuiltInMic
-[CSAudioInjectionProvider dealloc]
-[CSAudioInjectionProvider stop]
-[CSAudioInjectionProvider startAudioStreamWithOption:recordDeviceIndicator:error:]
-[CSAudioInjectionProvider stopAudioStreamWithRecordDeviceIndicator:error:]
BuiltInSpeaker
CSAttSiriStateMonitor queue
-[CSAttSiriStateMonitor updateState:]_block_invoke
+[CSUtils(Compression) extractArchiveFromDirectory:toDir:]
-[CSListeningEnabledPolicyWatch _addListeningEnabledConditions]_block_invoke
-[CSOtherAppRecordingStateMonitor handleOtherAppRecordingStateChange:]
-[CSOtherAppRecordingStateMonitor _systemControllerDied:]
CSHangUpEnabledMonitor queue
-[CSHangUpEnabledMonitor _checkCanUseVoiceTriggerDuringCallEnabled]
-[CSHangUpEnabledMonitor _voiceTriggerDuringCallEnabledDidChange]_block_invoke
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
+[CSUtils(LanguageCode) getSiriLanguageWithEndpointId:fallbackLanguage:]
Adaptive Siri Volume Disabled
-[CSAutomaticVolumeEnabledMonitor observeValueForKeyPath:ofObject:change:context:]_block_invoke
CSAudioFileReader Queue
-[CSAudioFileReader initWithURL:]
-[CSAudioFileReader prepareRecording:]
-[CSAudioFileReader startRecording]
-[CSAudioFileReader _readAudioBufferAndFeed]
-[CSAudioFileReader stopRecording]
accessible-extended
accessible-maximum
-[CSEndpointerProxy resetForNewRequestWithSampleRate:recordContext:recordOption:voiceTriggerInfo:]
-[CSEndpointerProxy resetForVoiceTriggerTwoShotWithSampleRate:]
-[CSEndpointerProxy preheat]
-[CSEndpointerProxy endpointer:didDetectStartpointAtTime:]
-[CSEndpointerProxy endpointer:didDetectHardEndpointAtTime:withMetrics:]
-[CSEndpointerProxy endpointer:detectedTwoShotAtTime:]
-[CSEndpointerProxy endpointerModelVersion]
-[CSEndpointerProxy updateEndpointerThreshold:]
-[CSEndpointerProxy logHybridEndpointFeaturesWithEvent:locale:]
com.apple.cs.%@.queue
-[CSAttSiriOSDNode addReceiver:]_block_invoke
-[CSAttSiriOSDNode removeReceiver:]_block_invoke
-[CSAttSiriOSDNode stop]_block_invoke
-[CSAttSiriOSDNode setPrefetchedAsset:]_block_invoke
-[CSAttSiriOSDNode attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:]_block_invoke_2
-[CSAttSiriOSDNode attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:]_block_invoke
-[CSAttSiriOSDNode checkConsecutiveBoronSignalWithAudioChunk:]
-[CSAttSiriOSDNode attSiriAudioSrcNodeDidStop:]_block_invoke
-[CSAttSiriOSDNode resetForNewRequestWithRecordContext:endpointerSettings:voiceTriggerInfo:osdMode:]_block_invoke
-[CSAttSiriOSDNode osdAnalyzer:didUpdateOSDFeatures:]
-[CSMyriadSelfTriggerCoordinator selfTriggerDetector:didDetectSelfTrigger:]
com.apple.siri.corespeech.selftrigger
SPG.nnet
version
CSEndpointerAssetManager queue
-[CSEndpointerAssetManager init]
-[CSEndpointerAssetManager checkFirstUnlocked]
-[CSEndpointerAssetManager CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]_block_invoke
-[CSEndpointerAssetManager CSAssetManagerDidDownloadNewAsset:]_block_invoke
-[CSEndpointerAssetManager CSFirstUnlockMonitor:didReceiveFirstUnlock:]_block_invoke
-[CSEndpointerAssetManager assetStatus:]
-[CSEndpointerAssetManager _getCurrentHEPAsset]
-[CSEndpointerAssetManager _updateOEPAssetsWithLanguage:]
-[CSEndpointerAssetManager _notifyAssetsUpdate]
-[CSEndpointerAssetManager _fetchEndpointMobileAssetWithLanguage:]
ModelInfo=
-[CSEndpointerAssetManager _getOEPVersionFromPath:]
-[CSEndpointerAssetManager _getFakeEndpointAsset]
CSAudioInjectionBuiltInEngine
-[CSAudioInjectionBuiltInEngine dealloc]
SampleCount
HostTime
-[CSAudioInjectionBuiltInEngine getBestSampleCountWithOption:]
-[CSAudioInjectionBuiltInEngine audioEngineBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:]_block_invoke
trigger-time
-[CSSpringboardStartMonitor _startMonitoringWithQueue:]
-[CSSpringboardStartMonitor _stopMonitoring]
-[CSSpringboardStartMonitor _checkSpringBoardStarted]
com.apple.springboard.finishedstartup
speakerRecognition
satThreshold
combinationWeight
implicitProfileThreshold
implicitProfileDeltaThreshold
implicitVTThreshold
pruningExplicitSATThreshold
pruningExplicitPSRThreshold
pruningSATThreshold
pruningPSRThreshold
numPruningRetentionUtt
maxEnrollmentUtterances
pruningCookie
configFileRecognizer
configFileNDAPI
voiceTriggerSecondPassAOP
implicit_training_enabled
multiUserHighScoreThreshold
multiUserLowScoreThreshold
multiUserConfidentScoreThreshold
multiUserDeltaScoreThreshold
useSpeakerRecognitionAsset
phrase
-[CSAsset(SpeakerRecognition) satScoreThresholdForPhId:]
recognizer.json
config.txt
-[CSAsset(SpeakerRecognition) containsMultiUserThresholds]
CSActivationEventNotifier
-[CSActivationEventNotifier notifyActivationEventSynchronously:completion:]
-[CSActivationEventNotifier notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotifier notifyActivationEvent:deviceId:activationInfo:completion:]_block_invoke
-[CSActivationEventNotifier _createXPCClientConnection]
CSAlarmMonitor queue
-[CSAlarmMonitor _startMonitoringWithQueue:]
-[CSAlarmMonitor _stopMonitoring]
-[CSGestureMonitorPhone _startMonitoringWithQueue:]
CMWakeGestureManager
-[CSSmartSiriVolumeServiceProxy init]
overrideMediaVolume
SSV Manager returned estimate as nil
-[CSSmartSiriVolumeServiceProxy getVolumeForTTSType:withContext:reply:]
SmartSiriVolume not supported on this device type. smartSiriVolume : %p
-[CSSmartSiriVolumeServiceProxy setSmartSiriVolumePercentage:]
-[CSSmartSiriVolumeServiceProxy setSmartSiriVolumeDirection:]
-[CSSmartSiriVolumeServiceProxy setPermanentVolumeOffsetWithDirection:]
CSAttSiriAudioSrcNode queue
-[CSAttSiriAudioSrcNode initWithMasterAudioStream:name:]
-[CSAttSiriAudioSrcNode addReceiver:]_block_invoke
-[CSAttSiriAudioSrcNode dealloc]
-[CSAttSiriAudioSrcNode audioStreamProvider:didStopStreamUnexpectly:]_block_invoke
-[CSAttSiriAudioSrcNode _handleDidStop]
-[CSAttSiriAudioSrcNode _fetchAudioDecoderForTV:]
+[CSPhoneCallStateMonitor sharedInstance]
CSPhoneCallStateMonitor.m
-[CSPhoneCallStateMonitor phoneCallState]
-[CSPhoneCallStateMonitor firstPartyCall]
-[CSFirstUnlockMonitor _stopMonitoring]
-[NSString(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0Q8@"NSObject<OS_xpc_object>"16
-[NSArray(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8Q16^B24
BuiltInMicrophoneDevice
CSVoiceTriggerEventInfoProvider Queue
-[CSVoiceTriggerEventInfoProvider fetchVoiceTriggerInfoWithAudioContext:triggerInfoProviding:resultVoiceTriggerInfo:resultRTSTriggerInfo:]_block_invoke
-[CSVoiceTriggerEventInfoProvider fetchVoiceTriggerInfoWithAudioContext:triggerInfoProviding:resultVoiceTriggerInfo:resultRTSTriggerInfo:]
route
isRemoteDevice
remoteDeviceUID
remoteDeviceProductIdentifier
remoteDeviceUIDString
%@ {route = %@, isRemoteDevice = %d, remoteDeviceUID = %@, remoteDeviceProductIdentifier = %@, remoteDeviceUIDString = %@}
CSCommandControlBehaviorMonitor
-[CSCommandControlBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStopStream:]_block_invoke
CSSmartSiriVolumeRunPolicy queue
-[CSSmartSiriVolumeRunPolicy _addSmartSiriVolumeEnabledConditions]_block_invoke
ApplicationProcessorWithRingtone
v16@?0@"AFSiriActivationResult"8
-[CSSiriLauncher notifyBuiltInVoiceTrigger:myriadPHash:completion:]_block_invoke
Trigger was during a ringtone
v16@?0@"<AFMyriadContextMutating>"8
-[CSSiriLauncher notifyWakeKeywordSpokenInBuiltInMic:]_block_invoke
-[CSSiriLauncher notifyCarPlayVoiceTriggerPrewarm:deviceId:completion:]_block_invoke
-[CSSiriLauncher notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:]_block_invoke_2
-[CSSiriLauncher notifyCarPlayVoiceTrigger:deviceId:myriadPHash:completion:]_block_invoke
-[CSSiriLauncher notifyWakeKeywordSpokenCarPlay:deviceId:]_block_invoke
-[CSSiriLauncher notifyBluetoothDeviceVoiceTrigger:deviceId:completion:]_block_invoke
-[CSSiriLauncher notifyWakeKeywordSpokenBluetoothDevice:deviceId:]_block_invoke
-[CSSiriLauncher deactivateSiriActivationConnectionWithReason:withOptions:withContext:]_block_invoke
-[CSSiriLauncher notifyDarwinVoiceTrigger:deviceId:myriadPHash:myriadLateActivationExpirationTime:completion:]_block_invoke_2
-[CSSiriLauncher notifyDarwinVoiceTrigger:deviceId:myriadPHash:myriadLateActivationExpirationTime:completion:]_block_invoke
-[CSAudioProcessWaitingBuffer initWithSiriSessionUUID:]
-[CSAudioProcessWaitingBuffer dealloc]
localSpeechRecognizerQueue Queue
-[CSAttSiriAsrNode stopWithReason:]
-[CSAttSiriAsrNode stopWithReason:]_block_invoke
-[CSAttSiriAsrNode _adjustEndpointStartTimeWithVoiceTriggerEvent:]
-[CSAttSiriAsrNode preheatLocalSpeechRecognitionWithLanguage:source:]_block_invoke
SRD ASR Result Delivery Transaction
-[CSAttSiriAsrNode startDeliverLocalSpeechRecognitionResultsWithSettings:]_block_invoke
-[CSAttSiriAsrNode _startDeliverLocalSpeechRecognitionResultsWithRequestId:]
-[CSAttSiriAsrNode stopDeliverLocalSpeechRecognitionWithReason:requestId:]
-[CSAttSiriAsrNode stopDeliverLocalSpeechRecognitionWithReason:requestId:]_block_invoke
-[CSAttSiriAsrNode disableLocalSpeechRecognitionForRequestId:]
-[CSAttSiriAsrNode disableLocalSpeechRecognitionForRequestId:]_block_invoke
-[CSAttSiriAsrNode pauseLocalSpeechRecognitionForRequestId:]
-[CSAttSiriAsrNode resumeLocalRecognitionWithRequestId:prefixText:postfixText:selectedText:]
-[CSAttSiriAsrNode attSiriAudioSrcNodeLPCMRecordBufferAvailable:audioChunk:]_block_invoke
-[CSAttSiriAsrNode attSiriAudioSrcNodeDidStop:]_block_invoke
-[CSAttSiriAsrNode attSiriNode:didDetectHardEndpointAtTime:withMetrics:]_block_invoke
-[CSAttSiriAsrNode _enforceEndpointHintWithRequestId:rcId:shouldAccept:featuresToLog:]
-[CSAttSiriAsrNode _enforceEndpointHintWithRequestId:rcId:shouldAccept:featuresToLog:]_block_invoke
-[CSAttSiriAsrNode start]
ASRNode Recording Transaction
-[CSAttSiriAsrNode start]_block_invoke
-[CSAttSiriAsrNode _preheatWithLanguage:preheatSource:]
-[CSAttSiriAsrNode prepareToStartSpeechRequestWithStartStreamOption:audioRecordContext:voiceTriggerInfo:]_block_invoke
-[CSAttSiriAsrNode _stopPreviousRecognitionTaskIfNeededWithNewRequestId:]
-[CSAttSiriAsrNode _shouldDisableLocalSpeechRecognizerWithOption:audioRecordContext:]
-[CSAttSiriAsrNode setMhId:]
-[CSAttSiriAsrNode _startLocalSpeechRecognizerIfNeeded]
localASR
-[CSAttSiriAsrNode _startLocalSpeechRecognizerIfNeeded]_block_invoke
v24@?0@"CESRModelProperties"8@"NSError"16
-[CSAttSiriAsrNode _processAudioChunk:]
-[CSAttSiriAsrNode _handleStopSpeechRecognitionTaskIfNeeded:]
-[CSAttSiriAsrNode _scheduleRecordingTransactionReleaseTimer]
-[CSAttSiriAsrNode _releaseRecordingTransactionIfNeededWithToken:]
-[CSAttSiriAsrNode _interactiveLocalSpeechRecognizer]
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizeTokens:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizeTokens:withMetadata:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didProcessAudioDuration:]_block_invoke
-[CSAttSiriAsrNode _queryShouldAcceptEagerResultForDuration:requestId:rcId:]
v20@?0B8@"NSArray"12
-[CSAttSiriAsrNode _handleShouldAcceptEagerResultWithRequestId:rcId:duration:shouldAccept:featuresToLog:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizeFinalResultCandidatePackage:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizePackage:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didRecognizePackage:withMetadata:]_block_invoke
-[CSAttSiriAsrNode _handleDidRecognizedFinalSpeechPackage:requestId:metadata:]
-[CSAttSiriAsrNode _handleDidRecognizedSpeechPackageForEagerRecognitionCandidate:requestId:rcId:metadata:]
-[CSAttSiriAsrNode localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:]_block_invoke
-[CSAttSiriAsrNode localSpeechRecognizer:didSelectRecognitionModelWithModelProperties:]
HomeButton
-[CSAttSiriAsrNode _fetchInputOriginWithRecordContext:]
-[CSAttSiriAsrNode _setLocalSpeechRecognizerState:]
[Idle]
[Disabled]
[Delivering message]
[Waiting for start deliver message]
[Waiting for start deliver message after client stop]
[Unknown]
-[CSAttSiriAsrNode _fetchRecognizerLanguageWithSiriLanguage:UILanguage:taskString:]
-[CSAttSiriAsrNode _markTimeToFirstWordMetric]
com.apple.corespeech.attsiri-timer
-[CSAttSiriTimer setTimerForSecs:completionBlock:]_block_invoke
-[CSAttSiriTimer cancelTimer]_block_invoke
-[CSAudioStream initWithAudioStreamProvider:streamName:streamRequest:]
-[CSAudioStream dealloc]
-[CSAudioStream startAudioStreamWithOption:completion:]
-[CSAudioStream stopAudioStreamWithOption:completion:]_block_invoke
-[CSAudioStream isStreaming]
-[CSAudioStream updateAudioStreamStartTimeInSampleCount:]
-[CSAudioStream audioStreamProvider:didStopStreamUnexpectly:]
-[CSAudioStream audioStreamProvider:didHardwareConfigurationChange:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsTV.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerHSAssets.ma.cached-metadata-updated
-[CSAudioPreprocessor resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
-[CSAudioPreprocessor flush]
ZeroFilterMetrics
-[CSAudioPreprocessor _fetchCurrentMetrics]
BeepCancellerMetrics
com.apple.corespeech.CSAccessorySiriClientBehaviourMonitor
-[CSAccessorySiriClientBehaviorMonitor notifyWillStartStreamWithContext:option:forAccessory:]_block_invoke
-[CSAccessorySiriClientBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:withEventUUID:forAccessory:]_block_invoke
-[CSAccessorySiriClientBehaviorMonitor notifyWillStopStream:reason:forAccessory:]_block_invoke
-[CSAccessorySiriClientBehaviorMonitor notifyDidStopStream:reason:withEventUUID:forAccessory:]_block_invoke
CSAudioRouteChangeMonitorImplWatch queue
-[CSAudioRouteChangeMonitorImplWatch activeAudioRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImplWatch _startMonitoringWithQueue:]
-[CSAudioRouteChangeMonitorImplWatch _stopMonitoring]
-[CSAudioRouteChangeMonitorImplWatch _notifyHearstRoutedState:]
-[CSAudioRouteChangeMonitorImplWatch _notifySiriInputSourceOutOfBandState:]
-[CSAudioRouteChangeMonitorImplWatch _systemControllerDied:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssetsTV.ma.cached-metadata-updated
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
corespeechd speaker xpc connection client queue
-[CSVoiceIdXPCConnection initWithConnection:]
-[CSVoiceIdXPCConnection _handleClientEvent:]
-[CSVoiceIdXPCConnection _handleClientMessage:client:]
utterancePath
voiceTriggerEventInfo
otherCtxt
audioRecordCtx
-[CSVoiceIdXPCConnection _handleClientMessage:client:]_block_invoke
-[CSVoiceIdXPCConnection _handleClientMessage:client:]_block_invoke_2
-[CSVoiceIdXPCConnection _handleClientError:client:]
-[CSAssetManagerEnablePolicy _addAssetManagerEnabledConditions]_block_invoke
-[CSAudioRecordContext(AVVC) avvcContextSettings]
CSXPCListener
-[CSXPCListener listen]
-[CSXPCListener _handleListenerEvent:]
-[CSXPCListener _handleListenerError:]
-[CSXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.xpc
-[CSXPCListener CSXPCConnectionReceivedClientError:clientError:client:]_block_invoke
extra-delay-frequency
endpoint-threshold
-[CSHybridEndpointer endpointerModelVersion]_block_invoke
-[CSHybridEndpointer updateEndpointerThreshold:]_block_invoke
-[CSHybridEndpointer updateEndpointerDelayedTrigger:]_block_invoke
-[CSHybridEndpointer setEndpointerOperationMode:]_block_invoke
-[CSHybridEndpointer fetchCurrentEndpointerOperationMode]_block_invoke
-[CSHybridEndpointer processTaskString:]_block_invoke
-[CSHybridEndpointer processTaskString:]_block_invoke_2
-[CSHybridEndpointer processServerEndpointFeatures:]
-[CSHybridEndpointer processServerEndpointFeatures:]_block_invoke_2
-[CSHybridEndpointer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke_2
-[CSHybridEndpointer shouldAcceptEagerResultForDuration:resultsCompletionHandler:]_block_invoke
-[CSHybridEndpointer processFirstAudioPacketTimestamp:firstAudioSampleSensorTimestamp:]_block_invoke
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]_block_invoke_3
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]_block_invoke_2
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]_block_invoke
-[CSHybridEndpointer processOSDFeatures:withFrameDurationMs:]
-[CSHybridEndpointer logFeaturesWithEvent:locale:]_block_invoke
-[CSHybridEndpointer handleVoiceTriggerWithActivationInfo:]_block_invoke
-[CSHybridEndpointer terminateProcessing]
-[CSHybridEndpointer recordingStoppedForReason:]
-[CSHybridEndpointer stopEndpointer]
-[CSHybridEndpointer resetForNewRequestWithSampleRate:recordContext:]
-[CSHybridEndpointer resetForNewRequestWithSampleRate:recordContext:]_block_invoke
-[CSHybridEndpointer _readParametersFromHEPAsset:]_block_invoke
-[CSHybridEndpointer endpointerAssetManagerDidUpdateAsset:]_block_invoke
-[CSHybridEndpointer _getCSHybridEndpointerConfigForAsset:]
-[CSRawAudioInjectionProvider init]
CSRawAudioInjectionProvider
-[CSRawAudioInjectionProvider dealloc]
-[CSRawAudioInjectionProvider setContext:completion:]
-[CSRawAudioInjectionProvider setCurrentContext:streamHandleId:error:]
-[CSRawAudioInjectionProvider prepareAudioStreamRecord:recordDeviceIndicator:error:]
-[CSRawAudioInjectionProvider startAudioStreamWithOption:recordDeviceIndicator:error:]
/var/mobile/darwin_test.wav
-[CSRawAudioInjectionProvider stopAudioStreamWithRecordDeviceIndicator:error:]
-[CSRawAudioInjectionProvider isRecordingWithRecordDeviceIndicator:]
RawAudioInjection
-[CSRawAudioInjectionProvider prewarmAudioSessionWithStreamHandleId:error:]
-[CSRawAudioInjectionProvider activateAudioSessionWithReason:streamHandleId:error:]
CSAudioInjectionTvRemoteEngine
com.apple.coreaudio.BorealisToggled
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]_block_invoke
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerEnabledMonitor _stopMonitoring]
-[CSVoiceTriggerEnabledMonitor _checkVoiceTriggerEnabled]
announcemessage
-[CSAttSiriRCHandler initWithEndpointerNode:uresNode:]
-[CSAttSiriRCHandler processRCWithId:duration:lrnnScore:lrnnThreshold:taskId:forceAccept:completionHandler:]
-[CSAttSiriRCHandler processRCWithId:duration:lrnnScore:lrnnThreshold:taskId:forceAccept:completionHandler:]_block_invoke
-[CSAttSiriRCHandler getMitigationDecisionForRCIdWithCompletion:completion:]
estimatedTTSVolume
debugLogPath
-[CSAlwaysOnProcessorStateMonitor _startMonitoringWithQueue:]_block_invoke
com.apple.audio.AOP.enable
-[CSAlwaysOnProcessorStateMonitor _startMonitoringWithQueue:]_block_invoke_2
-[CSAlwaysOnProcessorStateMonitor _stopMonitoring]
-[CSAlwaysOnProcessorStateMonitor _didReceiveAOPListeningStateChange:]
AcousticSLTaskTypeVoiceTrigger
AcousticSLTaskTypeContConv
AcousticSL
-[CSAttSiriAFTMNode initWithAttSiriController:]
-[CSAttSiriAFTMNode addReceiver:]
-[CSAttSiriAFTMNode stop]_block_invoke
-[CSAttSiriAFTMNode setPrefetchedAsset:]_block_invoke
-[CSAttSiriAFTMNode _startRequestWithContext:withVtei:withVTAssets:taskType:completion:]
-[CSAttSiriAFTMNode startRequestWithContext:withVtei:taskType:completion:]_block_invoke
-[CSAttSiriAFTMNode _setAsset:forTask:]
-[CSAttSiriAFTMNode _startRequestWithContext:withVtei:completion:]
-[CSAttSiriAFTMNode _addAudio:]
-[CSAttSiriAFTMNode _reset]
-[CSAttSiriAFTMNode _handleAFTMResults:]
-[CSAttSiriAFTMNode analyzer:hasFinalResult:]_block_invoke
-[CSAttSiriAFTMNode analyzer:hasPartialResult:]_block_invoke
-[CSAttSiriAFTMNode _logResultToVTDirectory]
-SL.json
SLAssetVersion
SLScore
SLAnalyzedSamples
SLCheckerType
SLThreshold
SLInputOriginType
SLTaskName
-[CSAttSiriAFTMNode _reportResultToAnalytics]
-[CSBluetoothWirelessSplitterMonitorImpIOS updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:]
CSBluetoothWirelessSplitterMonitorImpIOS.m
-[CSBluetoothWirelessSplitterMonitorImpIOS splitterState:]_block_invoke
v16@?0@"CSBluetoothWirelessSplitterInfo"8
-[CSBluetoothWirelessSplitterMonitorImpIOS _startMonitoringWithQueue:]_block_invoke
-[CSBluetoothWirelessSplitterMonitorImpIOS _startMonitoringWithQueue:]
-[CSBluetoothWirelessSplitterMonitorImpIOS _stopMonitoring]
v20@?0Q8B16
com.apple.bluetooth.WirelessSplitterOn
com.apple.
com.apple.private.
-[CSAudioTimeConversionProvidingProxy handleXPCMessage:messageBody:client:audioStreamHandleId:]
deviceId
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:streamHandleId:]
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:streamHandleId:]
meta_version.json
enrollment_version.json
CSP2P_CommandType_Key
CSP2P_CommandDict_Key
corespeech
com.apple.siridebug.command.remote.heysiri
com.apple.siridebug.command.parallel.recording
com.apple.siridebug.command.transfer.voiceprofile
com.apple.siridebug.command.query.voiceprofile
com.apple.siridebug.command.reverse.transfer.voiceprofile
com.apple.siridebug.command.fetch.voiceprofile
com.apple.siridebug.command.voiceprofile.update.trigger
com.apple.siridebug.command.transfer.parallelrecording
com.apple.siridebug.command.fetch.voicegradingdata
com.apple.siridebug.command.transfer.voicegradingdata
com.apple.siridebug.command.delete.voiceprofile
CSP2P_RemoteHeySiriEnable_Key
CSP2P_RemoteHeySiriStatus_Key
CSP2P_RemoteRecordingStart_Key
CSP2P_RemoteRecordingStatus_Key
CSP2P_VoiceProfileData_Key
CSP2P_VoiceProfileFileName_Key
CSP2P_VoiceProfileSpeakerName_Key
CSP2P_VoiceProfileLocale_Key
CSP2P_VoiceProfileDataType_Key
CSP2P_VoiceProfileSegment_Key
CSP2P_VoiceProfileTotalSegments_Key
CSP2P_VoiceProfileStatus_Key
CSP2P_VoiceProfileProfileId_Key
CSP2P_VoiceProfileHomeUserId_Key
CSP2P_VoiceProfileRelativeFilePath_Key
CSP2P_VoiceProfileSiriProfileId_Key
CSP2P_VoiceProfileAppDomain_Key
CSP2P_VoiceProfileOnboardTimeStamp_Key
CSP2P_VoiceProfileTransferCompleted_Key
CSP2P_VoiceProfileRecordedData_Key
CSP2P_VoiceProfileRemoteFileName_Key
CSP2P_VoiceDataToBeGraded_Key
CSP2P_VoiceFileNameToBeGraded_Key
CSP2P_GradingDataTransferStatus_Key
CSP2P_PeerIdentifier_Key
CSP2P_IsDataCompressed_Key
CSP2P_UncompressedDataSize_Key
CSP2P_GradingBatchTransferID_Key
remote
-triggered
-almost
com.apple.corespeech.p2psvc
-[CSP2PService processRemoteCommandWithPayload:fromPeer:withReply:]_block_invoke
CoreSpeech
-[CSP2PService sendCoreSpeechGradingDataToNearbyPeer]_block_invoke
-[CSP2PService sendVTNearMissGradingDataToCompanion]_block_invoke
-[CSP2PService sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:]_block_invoke
-[CSP2PService sendAcousticGradingDataToNearbyPeer]_block_invoke
-[CSP2PService sendGeckoSpeechLogsToCompanion]_block_invoke
-[CSP2PService _processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _compressFilesInDirectory:matchingPredicate:sortedByCreationDate:compressedFileAvailable:]
-[CSP2PService _compressFilesInDirectory:matchingPredicate:sortedByCreationDate:compressedFileAvailable:]_block_invoke
q24@?0@"NSURL"8@"NSURL"16
json
B24@?0@"NSURL"8@"NSDictionary"16
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke
v52@?0@"NSString"8@"NSData"16Q24Q32B40@"NSError"44
-[CSP2PService _sendCoreSpeechGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendCoreSpeechGradingDataToPeerId:]_block_invoke
-[CSP2PService _sendGeckoSpeechLogsToPeerId:]_block_invoke_2
-[CSP2PService _sendGeckoSpeechLogsToPeerId:]_block_invoke
Gecko-
v24@?0@"NSUUID"8@"NSError"16
[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}
.wav
.json
-[CSP2PService _sendCoreSpeechMagusGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendCoreSpeechMagusGradingDataToPeerId:]_block_invoke
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:withCompletion:]
fileData
fileName
peerId
%@%@
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:withFilePrefix:withCompletion:]_block_invoke
-[CSP2PService _receiveParallelRecordingFromPeerId:recordingInfo:withReply:]
%@_%@
-[CSP2PService _receiveVoiceGradingDataFromPeerId:requestInfo:withReply:]
%@.%@.%@
suppressnotification
%@.%@
-[CSP2PService _receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:]
CoreSpeechCache
audio
tdti
com.apple.siri.corespeech.voiceprofilelist.change
-[CSP2PService _processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:]_block_invoke
-[CSP2PService _processGradingDataFetchCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:]
yyyyMMddHHmmss
voiceprofiles
-[CSP2PService _getHomeUserIdForSharedSiriId:withCompletion:]
-[CSP2PService _getHomeUserIdForSharedSiriId:withCompletion:]_block_invoke
homeUserId query for siriProfileId %@ timedout !
-[CSP2PService _processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:]
Caches/VoiceTrigger/SATUpdate
_%d_%d_%@
-[CSP2PService _sendVoiceProfile:toPeerId:]
td/audio
tdti/audio
ti/audio
-[CSP2PService _sendVoiceProfile:toPeerId:]_block_invoke
-[CSP2PService _processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:]
-[CSP2PService _processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:]
-[CSP2PService _sendVoiceProfileUpdateTriggerToPeerId:forLocale:]_block_invoke
-synced.wav
-[CSP2PService _sendAcousticGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendAcousticGradingDataToPeerId:]_block_invoke
Logs/CoreSpeech/spid/grading
-[CSP2PService _createDirectoryIfDoesNotExist:]
VoiceProfileStore
trained_users.json
Caches
-[CSP2PService _getContentsOfDirectory:]
+[CSAudioRecorderFactory audioRecorderWithQueue:error:]
AttSiriController queue
-[CSAttSiriController siriClientBehaviorMonitor:willStartStreamWithContext:option:]
-[CSAttSiriController siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSAttSiriController siriClientBehaviorMonitor:didStopStream:withEventUUID:]_block_invoke
-[CSAttSiriController siriClientBehaviorMonitor:fetchedSiriClientAudioStream:successfully:]_block_invoke
-[CSAttSiriController siriClientBehaviorMonitor:preparedSiriClientAudioStream:successfully:]_block_invoke
-[CSAttSiriController CSSiriEnabledMonitor:didReceiveEnabled:]
-[CSAttSiriController _reconfigureRequiredNodes:enforceAttendingAudioNode:]
-[CSAttSiriController _forceBuildGraph:]
-[CSAttSiriController _fetchMitigationAssets]_block_invoke_2
-[CSAttSiriController _fetchMitigationAssets]_block_invoke
-[CSAttSiriController _fetchVoiceTriggerAssets]_block_invoke_2
-[CSAttSiriController _fetchVoiceTriggerAssets]_block_invoke
-[CSAttSiriController _setupAudioSrcNodeWithSiriClientStream:]
CSAttSiriController
-[CSAttSiriController _setupAudioSrcNodeWithSiriClientStream:]_block_invoke
-[CSAttSiriController _handleStartProcessingWithRecordContext:completion:]
-[CSAttSiriController _handleStartProcessingWithRecordContext:completion:]_block_invoke
-[CSAttSiriController _handleStopProcessing]
attSiri transaction
-[CSAttSiriController _releaseAttSiriTransactionIfNeeded]
-[CSAttSiriController handleAttendingAudioStopUnexpectly]_block_invoke
-[CSAttSiriController handleAudioStopUnexpectly]_block_invoke
-[CSAttSiriController CSAudioRouteChangeMonitor:didReceiveAudioRouteChangeEvent:]_block_invoke
Serial CSAssetManager queue
-[CSAssetManager initWithDownloadOption:]
-[CSAssetManager initWithDownloadOption:]_block_invoke
ENABLED
DISABLED
-[CSAssetManager setAssetDownloadingOption:]_block_invoke
-[CSAssetManager _fetchRemoteMetaData]
-[CSAssetManager _canFetchRemoteAsset:]
-[CSAssetManager CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSAssetManager _createPeriodicalDownloadTimer]
-[CSAssetManager _createPeriodicalDownloadTimer]_block_invoke
-[CSAssetManager _startPeriodicalDownload]
-[CSAssetManager _stopPeriodicalDownload]
com.apple.siri.xpc_activity.power-logging
HID event callback queue
cancelled device
Created HID device successfully
Error : Failed in creating device
-[CSHostLauncherDarwin wakeHostForVoiceTrigger]
ReportDescriptor
RequestTimeout
HIDRelaySupport
HIDRelayUSBInterface
SiriHIDDevice
+[CSUtils(AudioDevice) isHeadphoneDeviceWithRecordRoute:playbackRoute:]
+[CSUtils(AudioDevice) isBluetoothAudioDeviceConnected]
BTDetails_IsHFPRoute
+[CSUtils(AudioDevice) isBluetoothVehicleOutput]
-[CSVoiceTriggerAwareZeroFilter resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
CSSPGEndpointAnalyzer
hybridendpointer.json
-[CSSPGEndpointAnalyzer reset]_block_invoke
-[CSSPGEndpointAnalyzer dealloc]
-[CSSPGEndpointAnalyzer stop]_block_invoke
-[CSSPGEndpointAnalyzer clientSilenceFeaturesAvailable:]
-[CSBluetoothWirelessSplitterMonitorImplDarwin updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:]
-[CSBluetoothWirelessSplitterMonitorImplDarwin splitterState]
-[CSBluetoothWirelessSplitterMonitorImplDarwin _startMonitoringWithQueue:]
-[CSBluetoothWirelessSplitterMonitorImplDarwin _stopMonitoring]
-[CSAudioMetricProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMetricProvidingProxy _handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:]
corespeechd xpc connection client queue
-[CSActivationXPCConnection _handleClientEvent:]
-[CSActivationXPCConnection _handleClientMessage:client:]
-[CSActivationXPCConnection _handleClientError:client:]
-[CSActivationXPCConnection _handleActivateEventMesssage:client:]
-[CSShadowMicScoreCreator calculateShadowMicScore]
CSSiriClientBehaviorMonitor
-[CSSiriClientBehaviorMonitor notifyFetchedSiriClientAudioStream:successfully:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyPreparedSiriClientAudioStream:successfully:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:withEventUUID:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyWillStopStream:reason:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStopStream:withEventUUID:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyReleaseAudioSession]_block_invoke
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
CSLanguageCodeUpdateMonitor.m
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor notifySiriLanguageCodeChanged:]
pipeline
CSAttSiriNLDANode queue
-[CSAttSiriNLDAClassifierNode initWithAttSiriController:]
-[CSAttSiriNLDAClassifierNode addReceiver:]
-[CSAttSiriNLDAClassifierNode startWithRecordContext:]
-[CSAttSiriNLDAClassifierNode startWithRecordContext:]_block_invoke
-[CSAttSiriNLDAClassifierNode stop]_block_invoke
-[CSAttSiriNLDAClassifierNode setPrefetchedAsset:]_block_invoke
-[CSAttSiriNLDAClassifierNode processSpeechPackageAsync:]_block_invoke
empty
-[CSAttSiriNLDAClassifierNode _shouldUseLegacyPath:]
nlda-bert model
-[CSAttSiriNLDAClassifierNode _holdTransactionForNldaProcessing]
-[CSAttSiriNLDAClassifierNode _releaseNldaProcessingTransaction]
CSAudioInjectionHearstEngine
-[CSAudioInjectionHearstEngine dealloc]
CSAVVCRecordingClientMonitor Queue
-[CSAVVCRecordingClientMonitor _startMonitoringWithQueue:]_block_invoke_2
v24@?0Q8@"NSError"16
-[CSAVVCRecordingClientMonitor _startMonitoringWithQueue:]
-[CSAVVCRecordingClientMonitor _stopMonitoring]
-[CSAVVCRecordingClientMonitor CSAudioServerCrashMonitorDidReceiveServerCrash:]
-[CSAVVCRecordingClientMonitor _didReceiveAVVCRecordingClientNumberChange:]
-[CSSelfTriggerEnabledMonitorAccessory _startMonitoringWithQueue:]
-[CSSelfTriggerEnabledMonitorAccessory _stopMonitoring]
-[CSSelfTriggerEnabledMonitorAccessory setEnable:]
Serial CSEventMonitor queue
-[CSEventMonitor _startMonitoringWithQueue:]
CSEventMonitor.m
-[CSEventMonitor _stopMonitoring]
triggeredPhrase
AttSiri
AttSiriCC
AttSiriHS
mitigationModelConfigFile
defaultAFTMValue
nldaConfigFile
allowKeywordFile
allowKeywordCount
useSpkrId
ouresConfig.json
nldaConfig.json
allowList.txt
[%@]
[%llu]
[%f]
BuiltInAOPVoiceTrigger
RemoteMicVoiceTrigger
RemoteMicVAD
JarvisVoiceTrigger
mediaserverdLaunched
RemoraVoiceTrigger
uuid
activationInfo
vadScore
hosttime
+[CSAudioStreamRequest defaultRequestWithContext:]
+[CSAudioStreamRequest requestForLpcmRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForOpusRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForSpeexRecordSettingsWithContext:]
[requiresHistoricalBuffer = %@]
[useCustomizedRecordSettings = %@]
[lpcmIsFloat = %@]
[isSiri = %@]
[sampleRate = %lf]
[numberOfChannels = %lu]
requiresHistoricalBuffer
useCustomizedRecordSettings
audioFormat
sampleRate
lpcmBitDepth
lpcmIsFloat
NumberOfChannels
encoderBitRate
isSiri
recordContext
-[CSVoiceTriggerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetDownloadMonitor _stopMonitoring]
-[CSVoiceTriggerAssetDownloadMonitor _didInstalledNewVoiceTriggerAsset]
com.apple.MobileAsset.VoiceTriggerAssets.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsIPad.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerHSAssetsIPad.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerHSAssetsWatch.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsTV.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerHSAssets.ma.new-asset-installed
FlexKwdSpotter
recognizer_flexKwd.json
flexKwdConfigFile
flexKwd.Thresholds
flexKwdThresholdsFile
-[CSSmartSiriVolumeUserIntent applyLowerAndUpperBoundsToVolume:]
-[CSSmartSiriVolumeUserIntent applyLowerAndUpperBoundsToVolumeOffset:]
Dpg:%.3f Dpd:%.3f T:%.3f
droppingPrediction
droppedPrediction
injectionDevice
CSEndpointMetrics:::totalAudioRecorded
CSEndpointMetrics:::endpointBufferHostTime
CSEndpointMetrics:::featuresAtEndpoint
CSEndpointMetrics:::endpointerType
CSEndpointMetrics:::serverFeatureLatencyDistribution
CSEndpointMetrics:::additionalMetrics
CSEndpointMetrics:::trailingSilenceDurationAtEndpoint
[totalAudioRecorded = %f]
[endpointBufferHostTime = %llu]
[trailingSilenceDurationAtEndpoint = %f]
[endpointerType = %lu]
[featuresAtEndpoint = %@]
[additionalMetrics = %@]
+[CSVoiceTriggerEnabledPolicyHelper siriInCallPolicy]
-[CSSmartSiriVolumeManager initWithSamplingRate:withAsset:]
-[CSSmartSiriVolumeManager CSAlarmMonitor:didReceiveAlarmChanged:]
-[CSSmartSiriVolumeManager CSTimerMonitor:didReceiveTimerChanged:]
-[CSSmartSiriVolumeManager CSVolumeMonitor:didReceiveMusicVolumeChanged:]
-[CSSmartSiriVolumeManager CSVolumeMonitor:didReceiveAlarmVolumeChanged:]
-[CSSmartSiriVolumeManager CSAutomaticVolumeEnabledMonitor:didReceiveEnabled:]
CSContinuousAudioFingerprintProvider
-[CSContinuousAudioFingerprintProvider startWithUUID:withMaximumBufferSize:]
-[CSContinuousAudioFingerprintProvider startWithUUID:withMaximumBufferSize:]_block_invoke
-[CSContinuousAudioFingerprintProvider stopWithUUID:]
-[CSContinuousAudioFingerprintProvider stopWithUUID:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenPollingWithInterval:completion:]
-[CSContinuousAudioFingerprintProvider _startListenPollingWithInterval:completion:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]_block_invoke_3
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]_block_invoke
-[CSContinuousAudioFingerprintProvider _startListenWithCompletion:]
-[CSContinuousAudioFingerprintProvider _startListenPolling]
-[CSContinuousAudioFingerprintProvider _stopListening]
-[CSContinuousAudioFingerprintProvider _stopListening]_block_invoke
-[CSContinuousAudioFingerprintProvider _handleEnablePolicyEvent:]
-[CSContinuousAudioFingerprintProvider audioStreamProvider:didStopStreamUnexpectly:]
-[CSContinuousAudioFingerprintProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
mitigation/ouresModel/ouresConfig.json
supportedInputOrigins
CSAttSiriUresNode queue
-[CSAttSiriUresNode initWithAttSiriController:]
-[CSAttSiriUresNode stop]_block_invoke
-[CSAttSiriUresNode addReceiver:]
-[CSAttSiriUresNode setInputOriginWithAudioRecordContext:boronScore:]_block_invoke
-[CSAttSiriUresNode _fetchMitigationConfig]
-[CSAttSiriUresNode setASRModelRootDirectory:]_block_invoke
-[CSAttSiriUresNode getMitigationDecisionForRCId:]_block_invoke
-[CSAttSiriUresNode _storeMitigationDecision:forRCId:]
-[CSAttSiriUresNode _createModelAndRunInferenceForRcId:withCompletion:]_block_invoke
Mitigation
v16@?0@"SLUresMitigatorResult"8
-[CSAttSiriUresNode _shouldRunMitigationForRcId:forTask:]
-[CSAttSiriUresNode processResultCandidate:forRCId:forTask:completion:]_block_invoke
-[CSAttSiriUresNode runMitigationForRCId:withScore:threshold:task:completion:]_block_invoke
16.1.1
requestMitigated
requestNotMitigated
score
decision
decisionValue
threshold
assetVersion
-[CSAttSiriUresNode setEndpointerFeatureEoS:]_block_invoke
-[CSAttSiriUresNode _createMitigatorModelWithConfig:]
-[CSAttSiriUresNode attSiriNode:didMitigate:withScore:taskType:]_block_invoke
-[CSAttSiriUresNode attSiriNode:didUpdateOSDFeatures:withFrameDurationMs:]_block_invoke
-[CSAttSiriUresNode attSiriNode:didUpdateWithSpeakerInfo:]_block_invoke
-[CSAttSiriUresNode attSiriNode:classifierScore:detailedResult:]_block_invoke
Ures ID - %@
-[CSAttSiriUresNode _holdTransactionForUresProcessing]
-[CSAttSiriUresNode _releaseUresProcessingTransaction]
-[CSAttSiriUresNode _decodeJsonFromFile:]
-[CSAttSiriUresNode _shouldApplyAllowListOverride:]
-[CSAttSiriUresNode _readAllowListVocabFromFile:]
[SplitterEnabled(%d)]
[Device%d(%@) DoAP(%d)]
[SplitterState:%d]
-[CSAdBlockerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSAdBlockerAssetDownloadMonitor _stopMonitoring]
-[CSAdBlockerAssetDownloadMonitor _didInstalledNewAdBlockerAsset]
-[CSAdBlockerAssetDownloadMonitor trialAssetDownloadMonitorDelegate:didInstallNewAsset:assetType:]
com.apple.MobileAsset.AdBlockerAssets.ma.new-asset-installed
CSVoiceIdXPCListener
com.apple.corespeech.corespeechd.voiceid.xpc
-[CSVoiceIdXPCListener listen]
-[CSVoiceIdXPCListener _handleListenerEvent:]
-[CSVoiceIdXPCListener _handleListenerError:]
-[CSVoiceIdXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.voiceid.xpc
CSSpeechManager Asset Query Queue
-[CSSpeechManager startManager]
-[CSSpeechManager registerSpeechController:]
-[CSSpeechManager registerSiriClientProxy:]
v32@?0@"NSNumber"8@"CSAudioProvider"16^B24
-[CSSpeechManager audioProviderWithContext:error:]
-[CSSpeechManager audioProviderWithContext:error:]_block_invoke
v32@?0Q8q16@"NSError"24
-[CSSpeechManager audioProviderWithContext:error:]_block_invoke_2
-[CSSpeechManager audioProviderWithStreamID:]_block_invoke
-[CSSpeechManager _getAudioRecorderWithError:]
-[CSSpeechManager audioProviderInvalidated:streamHandleId:]_block_invoke
-[CSSpeechManager audioRecorderWillBeDestroyed:]_block_invoke
-[CSSpeechManager voiceTriggerAssetHandler:endpointId:didChangeCachedAsset:]
-[CSSpeechManager _handleClearLoggingFileTimer]
-[CSSpeechManager _createClearLoggingFileTimer]
-[CSSpeechManager _startClearLoggingFilesTimer]
-[CSVoiceIdXPCClient _handleListenerEvent:]
-[CSVoiceIdXPCClient _handleListenerError:]
-[CSVoiceIdXPCClient _notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:]
CSOpportuneSpeakBehaviorMonitor
-[CSOpportuneSpeakBehaviorMonitor notifyWillStartStreamWithContext:audioProviderUUID:option:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyDidStartStreamWithContext:audioProviderUUID:successfully:option:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSOpportuneSpeakBehaviorMonitor notifyDidStopStream:]_block_invoke
Median
+[CSUtils(Statistics) distributionDictionary:]
average:
stddev:
-[CSXPCConnection sendMessageToClient:]
-[CSXPCConnection sendMessageToClient:]_block_invoke
-[CSXPCConnection _handleClientEvent:]
-[CSXPCConnection _handleClientMessage:client:]
-[CSXPCConnection _handleAudioProvidingMessage:messageBody:client:]
-[CSXPCConnection _handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:]
-[CSXPCConnection _handleSetXPCClientTypeMessage:messageBody:client:]
-[CSXPCConnection _handleClientError:client:]
-[CSXPCConnection _handlePingPongMessage:client:]
-[CSAttSiriConnectionManager initWithAttSiriController:supportsAttentiveSiri:supportsSpeechRecognitionOnDevice:supportsSSR:]
com.apple.CoreSpeech.Connection.Listener.endpointer
com.apple.corespeech.corespeechd.endpointer.service
-[CSAttSiriConnectionManager _setupEndpointListener]
com.apple.CoreSpeech.Connection.Listener.asr
-[CSAttSiriConnectionManager _setupLocalSpeechRecognitionListener]
com.apple.corespeech.corespeechd.attsiri.service
-[CSAttSiriConnectionManager _setupAttSiriServiceListener]
com.apple.CoreSpeech.Connection.Listener.ssr
com.apple.corespeech.corespeechd.ssr.service
-[CSAttSiriConnectionManager _setupSSRListener]
com.apple.CoreSpeech.Connection.Listener.rchandling
com.apple.corespeech.corespeechd.rchandling.service
-[CSAttSiriConnectionManager _setupRCProcessingListener]
-[CSHostDaemon init]_block_invoke
CSHostDaemon
-[CSHostDaemon _daemonDidLaunch]
com.apple.notifyd.matching
-[CSHostDaemon _setupNotifyHandlers]_block_invoke
AFLanguageCodeDidChangeDarwinNotification
-[CSHostDaemon _daemonWillShutdown]
FirstPktLatency
TrailingPktLatency
TrailingPktSpeechLatency
-[CSEndpointLatencyInfo addPktInfoWithTimestamp:arrivalTimestamp:currentMachTime:]
-[CSEndpointLatencyInfo report]
+[CSUtils(AudioFile) readAudioChunksFrom:block:]
-[CSCoreSpeechDaemonStateMonitor notifyDaemonStateChanged:]
com.apple.corespeech.corespeechd.launch
-[CSCoreSpeechDaemonStateMonitor _startMonitoringWithQueue:]
-[CSCoreSpeechDaemonStateMonitor _stopMonitoring]
-[CSCoreSpeechDaemonStateMonitor _didReceiveDaemonStateChanged:]
CSBuiltInSpeakerStateMonitor queue
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateMutedInfo]_block_invoke_2
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateMutedInfo]_block_invoke
muted
not muted
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateActiveInfo]_block_invoke_2
-[CSBuiltinSpeakerStateMonitor _fetchSpeakerStateActiveInfo]_block_invoke
-[CSBuiltinSpeakerStateMonitor _startMonitoringWithQueue:]_block_invoke_2
active
-[CSBuiltinSpeakerStateMonitor _startMonitoringWithQueue:]_block_invoke
-[CSBuiltinSpeakerStateMonitor _startMonitoringWithQueue:]
-[CSBuiltinSpeakerStateMonitor _stopMonitoring]_block_invoke
-[CSBuiltinSpeakerStateMonitor _stopMonitoring]
-[CSBuiltinSpeakerStateMonitor CSAudioServerCrashMonitorDidReceiveServerRestart:]_block_invoke
-[CSVoiceTriggerAssetHandlerDarwin _getVoiceTriggerAssetFromAssetManager:]
-[CSVoiceTriggerAssetHandlerDarwin _checkNewAssetAvailablity]_block_invoke
-[CSVoiceTriggerAssetHandlerDarwin CSRemoteAssetManagerDidDownloadNewAsset:]
-[CSVoiceTriggerAssetHandlerDarwin CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSConnectionListener initWithMachService:withServiceInterface:withServiceObject:withDelegateInterface:queue:]
com.apple.CoreSpeech.Connection.Listener
-[CSConnectionListener dealloc]
-[CSConnectionListener listener:shouldAcceptNewConnection:]
-[CSConnectionListener listener:shouldAcceptNewConnection:]_block_invoke
-[CSConnectionListener listener:shouldAcceptNewConnection:]_block_invoke_2
-[CSConnectionListener notifyClientsWithBlock:]_block_invoke
-[CSConnectionListener resumeConnection]
/var/mobile/Library/VoiceTrigger
/var/mobile/Library/VoiceTrigger/KeepAlive
-[CSCoreSpeechDKeepAliveHandler _enableCoreSpeechDaemonKeepAlive]
KeepAlive
-[CSCoreSpeechDKeepAliveHandler _coreSpeechDaemonKeepAlived]
Library/VoiceTrigger
Library/VoiceTrigger/KeepAlive
-[CSLanguageCodeUpdateMonitorImplDarwin _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitorImplDarwin _stopMonitoring]
-[CSLanguageCodeUpdateMonitorImplDarwin _didReceiveLanguageCodeUpdate:]
CSSiriAssertionMonitor queue
-[CSSiriAssertionMonitor init]
-[CSSiriAssertionMonitor _stopMonitoring]
-[CSSiriAssertionMonitor enableAssertionReceived]_block_invoke
-[CSSiriAssertionMonitor disableAssertionReceived]_block_invoke
-[CSAudioSessionProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioSessionProvidingProxy dealloc]
-[CSAudioSessionProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypePrewarmMessage:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeActivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:]
audioDeviceID
duckLevel
rampDuration
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDuckAudioDevice:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDuckDefaultOutputAudioDevice:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:]
ENABLE
DISABLE
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableSmartRoutingConsideration:messageBody:client:]
-[CSAudioSessionProvidingProxy audioSessionProvider:providerInvalidated:]
-[CSBluetoothWirelessSplitterMonitor splitterState]
CSBluetoothWirelessSplitterMonitor.m
-[CSBluetoothWirelessSplitterMonitor updateSplitterState:shouldDisableSpeakerVerificationInSplitterMode:]
-[CSBluetoothWirelessSplitterMonitor splitterState:]
-[CSBluetoothWirelessSplitterMonitor _startMonitoringWithQueue:]
-[CSBluetoothWirelessSplitterMonitor _stopMonitoring]
CSAudioInjectionRemoraEngine
-[CSAudioInjectionRemoraEngine dealloc]
Languages
Footprint
Premium
-[CSCommandControlStreamEventMonitor isStreaming]
-[CSAudioAlertProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:]
-[CSAudioAlertProvidingProxy audioAlertProvidingDidFinishAlertPlayback:ofType:error:]
com.apple.corespeech
-[CSAVCallConnectedMonitor _systemControllerDied:]
voicetrigger xpc service connection client queue
-[CSVoiceTriggerXPCConnection _handleClientEvent:]
-[CSVoiceTriggerXPCConnection _handleClientMessage:client:]
-[CSVoiceTriggerXPCConnection _handleClientError:client:]
-[CSVoiceTriggerXPCConnection _handleVoiceTriggerXPCServiceMessage:client:]
phraseSpotterBypass
bypassTimeout
-[CSVoiceTriggerXPCConnection _handlePhraseSpotterBypassRequest:]
raiseToSpeakBypass
-[CSVoiceTriggerXPCConnection _handleVoiceTriggeredSiriSessionCancelled]
enable
assertion
triggerStats
-[CSAttSiriFlexKwdNode initWithAttSiriController:]
-[CSAttSiriFlexKwdNode startWithContext:audioStreamId:]_block_invoke
-[CSAttSiriFlexKwdNode attSiriAudioSrcNodeDidStartRecording:successfully:error:]
-[CSAttSiriFlexKwdNode triggerReportedFromFlxKwdSpotter:]
-[CSAudioRouteChangeMonitor _startMonitoringWithQueue:]
CSAudioRouteChangeMonitor.m
-[CSAudioRouteChangeMonitor _stopMonitoring]
-[CSAudioRouteChangeMonitor getHearstConnected:]
-[CSAudioRouteChangeMonitor hearstConnected]
-[CSAudioRouteChangeMonitor getHearstRouted:]
-[CSAudioRouteChangeMonitor hearstRouted]
-[CSAudioRouteChangeMonitor getSiriInputSourceOutOfBand:]
-[CSAudioRouteChangeMonitor siriInputSourceOutOfBand]
-[CSAudioRouteChangeMonitor getJarvisConnected:]
-[CSAudioRouteChangeMonitor jarvisConnected]
playbackDeviceTypeList
%@ {recordDeviceInfo = %@, playbackRoute = %@, playbackDevices = %@
com.apple.corespeechd
main
+[CSUtils(machXPC) machXPCConnection:hasEntitlement:]
-[CSAdBlockerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSAdBlockerAssetMetaUpdateMonitor _stopMonitoring]
-[CSAdBlockerAssetMetaUpdateMonitor _didReceiveNewAdBlockerAssetMetaData]
com.apple.MobileAsset.AdBlockerAssets.ma.cached-metadata-updated
+[CSAdBlockerAssetDecoderFactory adBlockerAssetDecoderWithVersion:]
-[CSPhraseNDEAPIScorer keywordAnalyzerNDEAPI:hasResultAvailable:forChannel:]
CSAudioInjectionEngine
-[CSAudioInjectionEngine _createDeInterleaverIfNeeded]
-[CSAudioInjectionEngine stop]_block_invoke
-[CSAudioInjectionEngine _readAudioBufferAndFeed]
-[CSAudioInjectionEngine injectAudio:withScaleFactor:outASBD:playbackStarted:completion:]
-[CSAudioInjectionEngine stopAudioStream]_block_invoke
-[CSAudioInjectionEngine _deinterleaveBufferIfNeeded:]
-[CSAudioInjectionEngine _compensateChannelDataIfNeeded:receivedNumChannels:]
-[CSSoftwareUpdateCheckingMonitor _startMonitoringWithQueue:]
-[CSSoftwareUpdateCheckingMonitor _stopMonitoring]
-[CSSoftwareUpdateCheckingMonitor _checkSoftwareUpdateCheckingState]
com.apple.duetscheduler.restartCheckNotification
-[CSAudioConverter _convertBufferedLPCM:allowPartial:timestamp:arrivalTimestampToAudioRecorder:]
-[CSAudioConverter _convertBufferedLPCM:allowPartial:timestamp:arrivalTimestampToAudioRecorder:]_block_invoke
-[CSAudioConverter reset]
-[CSAudioConverter _configureAudioConverter:]
CreateAudioConverter
CSMediaPlayingMonitor queue
-[CSMediaPlayingMonitor initializeMediaPlayingState]_block_invoke_2
-[CSMediaPlayingMonitor _startMonitoringWithQueue:]
-[CSMediaPlayingMonitor _stopMonitoring]
-[CSMediaPlayingMonitor _notePossiblePlayPausedStateChange:]
PLAYING
NOT PLAYING
CSEndpointerSettings:::disableEndpointer
[disableEndpointer = %@]
-[CSDarwinPreventSystemSleepManager _acquirePreventSystemSleepAssertionWithTimeout:]
-[CSDarwinPreventSystemSleepManager acquireAssertionForActiveUser]
-[CSDarwinPreventSystemSleepManager acquireAssertionForIdleUser]
CSVoiceTriggerAOPModeEnabledPolicyIOS RecordState queue
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSBargeIn]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSAOP]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _isSpeechDetectionDevicePresent]
-[CSVoiceTriggerAOPModeEnabledPolicyIOS siriClientBehaviorMonitor:didChangedRecordState:withEventUUID:withContext:]_block_invoke
-[CSAudioRecordDeviceIndicator updateWithLatestRecordContext:]
-[CSNetworkAvailabilityMonitor _startMonitoringWithQueue:]
-[CSNetworkAvailabilityMonitor _stopMonitoring]
-[CSNetworkAvailabilityMonitor _availabilityChanged]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[NSDictionary(XPCObject) _cs_xpcObject]_block_invoke
-[CSAudioMeterProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:]
v16@?0B8f12
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:]
%s STDynamicActivityAttributionPublisher reporting Dictation with bundleID: %{public}@
%s STDynamicActivityAttributionPublisher reporting Siri
%s STDynamicActivityAttributionPublisher reporting Siri and Dictation
%@ Interrupted
%@ Invalidated
Dealloc-ing
personalizedLMPath=%@ fidesPersonalizedLMPath=%@
Client is 24-hour job
Client is DictationPersonalizationFidesPlugin
Client is PersonalizedLmFidesPlugin
Received an error while accessing %@ service: %@
Invalidating
%s Cannot handle unexpected message type : %lld
%s CSFallbackAudioSessionReleaseProvider is nil from CSSpeechManager
%s UserIdleSystemSleepAssertion
%s SystemSleepAssertion
%s Could not take power assertion
%s IOPMAssertionSetProperty failed : %{private}d
%s Taking power assertion %{private}@
%s Taking power assertion %{private}@ for a max of %{private}f seconds
%s Successfully released power assertion for %{private}@
%s Failed to released power assertion for %{private}@
%s ERR: topScoringUser is nil from %{public}@
%s ERR: invalid arguments passed %{public}@ %{public}@
%s ERR: Incorrect category %{public}d passed
%s Start Recording Host Time = %{public}llu
%s ::: incrementing false wakeup to %{public}llu
%s PowerLog : HeySiriFalseTrigger numFalseWakeUp:%{public}d, secondsSinceLastReport:%{public}lf, phrase:%{public}@
%s ::: accumulated false wakeup count is %{public}llu so far, not reporting yet because it has been only %{public}.2f seconds since last report with current phrases %{public}@
%s Sending event with non determenistic triggerLengthSampleCount %llu, triggerLengthSampleCountDetermenisticFromFirstPass %llu, and delta of %lld samples
%s disconnect activationXPCClient
%s cannot handle event : event = %{public}p
%s ignore unknown types of message 
%s cannot handle error : error = %{public}p
%s Listener connection disconnected
%s connection error: %{public}s
%s SmartSiriVolume cannot be resumed since we should not monitor audio
%s Received user activity notification
%s Failed to register for user activity state
%s Failed to fetch user idle activity state
%s Current user activity: %llu
%s Invalid notification token %d
%s Cannot create SampleRateConverter using AudioConverterNew : %{public}d
%s Cannot set Quality property to audioConverter
%s Cannot set Complexity property to audioConverter
%s Override result as 'mpty'
%s Audio resampling done : %lu
%s AudioConverter is sad: 0x%{public}xd
%s Start monitoring : SpeakerRecognition Asset meta update
%s Stop monitoring : SpeakerRecognition Asset meta update
%s New Speaker Recognition asset metadata is available
%s Celestial is not available on this platform.
%s notification = %{public}@
%s Cannot deactivateAudioSession since audio recorder doesn't exist
%s Cannot deactivateAudioSession with %{public}@
%s Start monitoring : SpeakerRecognition Asset Download
%s Stop monitoring : SpeakerRecognition Assets Download
%s New SpeakerRecognition Assets is now installed
%s ERR: Delegate received for invalid Trial assetType:%lu
%s ::: %{public}s enable: %{public}d reason: %{public}@ timestamp : %{public}lf
%s Ignoring request to enable/disable voice trigger with nil reason.
%s ::: Asserting that VoiceTrigger should be %{public}@ with reason: %{public}@. Existing assertions (%{public}lu): %{public}@; times: %{public}@ vs %{public}f
%s Ignoring request to enable/disable voice trigger - time order violation.
%s ::: Ignore request as phraseSpotter already %{public}@
%s ::: Asserting that PhraseSpotter should be %{public}@, timeout: %{public}f
%s ::: Timeout!! PhraseSpotter should be NOT bypassed
%s ::: Ignore request as raiseToSpeak already %{public}@
%s ::: Asserting that raiseToSpeak should be %{public}@, timeout: %{public}f
%s ::: Timeout!! raiseToSpeak should be NOT bypassed
%s HandleDisconnect
%s token:%d
%s fromState:%llu, toState:%llu
%s SiriState - isActiveSession:%d
%s SiriState - isActiveRequest:%d
%s SiriState - isListening:%d
%s SiriState - isSpeaking:%d
%s tts Finished:%u
%s ContinousAudioFingerprint cannot be resumed since we should not monitor audio
%s Audio steam %{public}@ is still streaming when we get new streamProvider
%s CSAudioStreamProvidingProxy has received xpc disconnection
%s Trying to stop audio stream on CSAudioStreamProvidingProxy
%s Unknown body type : %{public}lld
%s Cannot handle setCurrentContext throught XPC : audioStreamProviding is nil
%s Cannot handle setCurrentContext throught XPC : given context is nil
%s Cannot handle AudioStreamRequest throught XPC : given audioStreamRequest is nil
%s Cannot handle AudioStreamRequest throught XPC : audioStreamProviding is nil
%s Getting audio stream has failed : %{public}@
%s Cannot handle PrepareRequest throught XPC : audioStreamProviding is nil
%s Given audioStreamRequest is nil, use default audioStreamRequest
%s Cannot handle startAudioStream : given audio stream option is nil
%s Cannot handle startAudioStream : audioStream is nil
%s Cannot handle startAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStream is nil
%s Fail to parse recordContext
%s Cannot handle IsRecording : audioStreamProviding is nil
%s Cannot handle RecordRoute : audioStreamProviding is nil
%s Cannot handle RecordDeviceInfo : audioStreamProviding is nil
%s Cannot handle AudioDeviceInfo : audioStreamProviding is nil
%s Cannot handle RecordSettings : audioStreamProviding is nil
%s Cannot handle IsNarrowband : audioStreamProviding is nil
%s Cannot handle PlaybackRoute : audioStreamProviding is nil
%s CSAudioStreamProvidingProxy
%s setting allow mixable audio while recording to %{public}@
%s Failed to setAllowMixableAudioWhileRecording : %{public}@
%s Unable to get VT asset for FlexKwd Spotter
%s configPath=%@
%s _thresholdsMap=%@
%s startProcessingSampleCount=%{public}ld, recognizer: %{public}@
%s didFinishRecognition: err=%@
%s FinalResults: %@
%s %@
%s ===PWinningTok=%@, bestScore=%f====
%s Unexpected!
%s Json file doesnt exist at: %{public}@
%s Could not read Json file at: %{public}@, err: %{public}@
%s Failed to parse json at: %{public}@, err: %{public}@
%s Not implemented
%s audioStreamProvider is nil, fetch audioProvider from context
%s attSiriAudioStreamProvider is nil!
%s Failed to start audio data source: %{public}@
%s Unsupported receiver: %@
%s CSAttSiriAttendingAudioSrcNode deallocated
%s attSiriAttendingAudioSrcNode didstopStreamUnexpectly
%s Failure disposing audio file %{public}d
%s Audio file already configured, closing first
%s Creating audio file at URL %{public}@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s Closing file at URL %{public}@, audio size: %{public}u
%s Couldn't create CoreSpeech log directory at path %{public}@ %{public}@
%s Session Query Failed : %{public}@
%s Mediaserverd/bridgeaudiod crashed
%s Mediaserverd/bridgeaudiod recovered from crash
%s Start monitoring : AudioSessionInterruption
%s Start monitoring : AudioSessionRouteChangeNotification
%s Stop monitoring AudioSession activities
%s Clearing pending homekit accessory voice trigger %{private}@
%s Handling Pending Remora VoiceTrigger Event
%s Time since last pending remora voice trigger %f. Ignoring.
%s Clearing pending built-in voice trigger %{private}@
%s Handling Pending BuiltInVoiceTrigger Event
%s Time since last pending builtin voice trigger %f. Ignoring.
%s client: %lu, deviceId: %{private}@
%s AttSiri logging not enabled
%s Couldn't create Ures slogging directory at path %{public}@ %{public}@
%s Failed to serialize data with err: %{public}@
%s EndpointerNode added receiver: %@
%s EndpointerNode removed receiver: %@
%s %{public}.2f ms after vtEnd
%s shouldReportHardEndpoint = %lu
%s endpointerListener: %@
%s SmartSiriVolume cannot be resumed since Siri is speaking
%s Prefetched Asset Vers (VT): %{public}@
%s _shouldCleanupVoiceProfile: %lu
%s SSR Assets is nil for %{public}@ - Bailing out
%s Asset Vers: %{public}@
%s Voice Profiles not present for %{public}@ - Bailing out
%s magus voice profile - %{public}@
%s Recording leading utterance - %{public}@
%s Setting up SSR controller with {%{public}@, %{public}@, %{public}ldusers, %{public}fsecs}
%s ERR: Failed to create SSR context with error %@
%s ERR: Failed to create SSR controller with error %@
%s Failed to get asset with %{public}@
%s Asset Vers (VT): %{public}@
%s Initialized SSRNode with assets %{public}@
%s XPC connection with client established
%s Received SSR asset download notification, updated asset cache to %{public}@
%s UserClassification: %{public}@ UserIdentified: %{public}@ Scores: %{public}@
%s _speakerRecognitionScores:%@
%s voiceIdScoreCard: %@
%s _speakerRecognitionScores is nil!
%s spkrRecognizer is nil!
%s speakerInfo is nil!
%s _currentLanguageCode changed: %{public}@
%s ERR: Discarded reporting final ScoreCard!!
%s SpeakerIdInfo from incorrect SpeakerRecognizer: expected: %{public}@, spkrRecognizer: %{public}@
%s ERR: Failed to get classified user from %{public}@
%s mappedSpeakerIdInfo for {%{public}d, %{public}.2fsec %dms} - %{public}@
%s Nil mappedSpeakerIdInfo since mappedScores is not valid, no score will be sent out
%s Voice Profile for profileID %@ not found
%s Overriding score to %@ for profile %@
%s Dropping id: [%@, %@]
%s ERR: Failed to retrain voice profile %{public}@ with asset %{public}@
%s ERR: Failed to init retrainCtxt for profileID %{public}@ with error %{public}@
%s ERR: Failed to add profileID %{public}@ with error %{public}@
%s trigger VoiceProfileCleanup
%s ERR: Failed VoiceProfile Cleanup with error %{public}@
%s Start monitoring : Setting preference change
%s Stop monitoring : Setting preference change
%s Siri restricted on lock screen : %{public}@
%s Registering for post build install/first unlock activity - %s
%s Received event for XPC activity: %@ in state: %ld
%s XPC activity: %@ deferred: %@ firstUnlock: %@
%s Registered XPC activity got triggered...
%s Skipping post build activity on ATV
%s VT is disabled, skipping post build activity !
%s Post build install/first unlock tasks got completed with error - %{public}@
%s Registered XPC activity complete. State: %@.
%s ContinousAudioFingerprint cannot be turned on since Siri is disabled
%s On-Device ASR: XPC: Registering the ANE Compilation XPC Activity
%s On-Device ASR: XPC: Done triggering ANE compilation
%s Failed setting activity state to continue
%s Failed setting activity state to done
%s Deferring activity:%@ deferred:%@
%s CSVoiceTriggerAsset (%{public}@) found: %{public}@
%s Cannot get a VoiceTrigger mobile asset : %{public}@
%s Trial assets not available, fallback to MA assets
%s Asset Query failed : %{public}@
%s cached asset:%{public}@, new asset:%{public}@
%s New asset is same as cached asset, ignore notification
%s New asset is different from cached one. Updating cached asset
%s new VoiceTrigger asset downloaded
%s Language Code Changed : %{public}@
%s First unlock notification received : %{public}d
%s Ignore Trial asset update for type: %lu
%s Timeout!
%s start Activation
%s startPtAbsSampleId: %llu
%s audio started at %llu, speech started at: %llu
%s CoreSpeechXPCConnection Invalidated
%s making connection to corespeechd with (%{public}d)
%s Asking VoiceTrigger locale to corespeechd
%s Current VoiceTrigger Locale = %{public}@
%s Cannot get Current VoiceTrigger Locale, falling back to en-US : %{public}@
%s Asking current VoiceTrigger aset for %{public}d.%{public}d
%s Asking keyword language given Jarvis language list %{public}@, jarvis-selected language: %{public}@
%s CSCoreSpeechServices Invalidated
%s Request updated SAT audio succeed.
%s Request updated SAT audio failed.
%s Received mediaserverd or bridgeaudiod crashes event
%s Received mediaserverd or bridgeaudiod reset event
%s Start monitoring : Mediaserverd crash / recover event
%s Initializing new xpcConnection
%s Sending XPCClientType : %{public}d
%s Prepare Audio Provider with Context : %{public}@
%s Failed to get reply result correctly
%s Received alertStartTime = %{public}llu
%s Received peakPower = %{public}f
%s Received averagePower = %{public}f
%s Sending audioMetric request
%s Failed to get audioMetric reply
%s audioMetric : %{public}@
%s Received invalid audioMetric
%s Error creating message
%s audioStreamWithRequest for stream %{public}@
%s xpcConnection not exist
%s Invalid message: stream is nil or request is nil
%s PrepareAudioStream %{public}@
%s Sending AcousticSLResult request
%s Failed to get AcousticSLResult reply
%s Received AcousticSLResult %{public}@
%s Failed to parse AcousticSLResult from raw data
%s Message not valid
%s Sending VoiceTriggerInfo request
%s Failed to get VoiceTriggerInfo request
%s Received VoiceTriggerInfo %{public}@
%s Failed to parse VoiceTriggerInfo from raw data
%s Received rtsTriggerInfo %{public}@
%s Failed to parse rtsTriggerInfo from raw data
%s NO reply!!!
%s No message!!
%s No reply for hostTimeFromSampleCount request with sampleCount %{public}llu
%s xpcConnection not existing
%s No message for hostTimeFromSampleCount request with sampleCount %{public}llu
%s No reply for sampleCountFromHostTime request with hostTime %{public}llu
%s No message for sampleCountFromHostTime request with hostTime %{public}llu
%s Cannot handle nil message
%s Unexpected message type : %{public}lld
%s AlertProvidingDelegate messageType : %{public}lld
%s Unexpected type : %{public}lld
%s SessionProvidingDelegate messageType : %{public}lld
%s context : %{public}@
%s invalid context
%s SessionInfoProvidingDelegate messageType : %{public}lld
%s Received notificationInfo %{public}@
%s Failed to parse notificationInfo from raw data
%s startListenWithOption : %{public}d, %{public}@
%s stopListenWithCompletion : %{public}d, %{public}@
%s hasRemoteVADAvailable : %d
%s hasVADAvailable : %d
%s didStopUnexpectly : %d
%s MobileTimer is not available on this platform.
%s Input route changed
%s Output route changed
%s Failed getting audio property %{public}.4s %{public}d
%s Failed getting audio property size %{public}.4s %d{public}
%s Failed registering for property listener %{public}.4s %{public}d
%s Fetching CommandControl Listening State: %d
%s Using override asset: %@
%s Updated cache with new Trial asset %@
%s Ignore MA asset update
%s PhraseSpotter enabled = %{public}@
%s PhraseSpotter is already %{public}@, received duplicated notification!
%s Send a In-Ear Myriad notification
%s CSBenchmarkXPCListener start listening
%s we got unknown types of XPC connection request
%s CSBenchmarkXPCListener here
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s CSVoiceTriggerXPCListener start listening
%s Received new remote control connection request
%s Connection request is nil
%s Error = %{public}s
%s Getting new client connection : %{public}p
%s Client connection disconnected, removing %{public}p from client connection pool
%s Register CoreSpeech Services
%s Received accept request : %{public}@
%s Connectin request %{public}@ rejected due to missing entitlement
%s get test response. return string Test
%s Setting Delay Interstitial Sound
%s Get Trigger Count
%s Clear Trigger Count
%s Get FirstPass running mode
%s Dealloc audioStreamHolding : %{public}@
%s _requestMHUUID: %@, _turnIdentifier: %@
%s _userSpeakingStartedTimeInMs %{public}f, _userSpeakingEndedTimeInMs: %{public}f, _userSpeakingStartedHostTime: %{public}llu, _userSpeakingEndedHostTime: %{public}llu, _stopRecordingHostTime: %{public}llu, _endpointBufferHostTime: %{public}llu
%s Dilation factor requested for device default!
%s V Spread requested for device default!
%s V Offset requested for device default!
%s H Offset requested for device default!
%s Music steepness requested for device default!
%s Minimum TTS volume for ASV disabled case requested for device default!
%s Cannot access to %{public}@ %{public}@ using default value=%{public}@
%s CSAudioInjectionXPCListener start listening
%s CSAudioProvider is deallocated
%s CSAudioProvider[%{public}@]:StreamState changed from : %{public}@ to : %{public}@
%s CSAudioProvider[%{public}@]:Setting audioRecorder : %{public}p
%s Reset recordDeviceIndicator as we have new audioRecorder
%s CSAudioProvider[%{public}@]:
%s CSAudioProvider[%{public}@]:setCurrentContext : %{public}@
%s CSAudioProvider[%{public}@]:Cannot change context since audio recorder is currently recording
%s CSAudioProvider[%{public}@]:audioStreamWithRequest for stream <%{public}@>
%s Failed to _prepareAudioStreamSync : %{public}@
%s Attached stream %{public}@ as tandem to master stream %{public}@ %{public}@, error : %{public}@
%s PrimaryStream is already tandem of stream %{public}@, can't add mutual tandem relation here!
%s Invalid input streams
%s CSAudioProvider[%{public}@]:Prepare audio stream reuqested while state is %{public}@
%s CSAudioProvider[%{public}@]:Cannot prepare, audio system is recovering
%s CSAudioProvider[%{public}@]:Asking AudioRecorder prepareAudioStreamRecord
%s CSAudioProvider[%{public}@]:prepareAudioStreamRecord failed : %{public}@
%s CSAudioProvider[%{public}@]:Create circular buffer : numChannels(%d), duration(%f)
%s CSAudioProvider[%{public}@]:startAudioStream with stream : %{public}@ with stream state : %{public}@, option : %{public}@, streamId : %{public}llu
%s CSAudioProvider[%{public}@]:state was %{public}@, prepareAudioStream first
%s CSAudioProvider[%{public}@]:prepareAudioStreamSync with stream : %{public}@ with stream state : %{public}@, request : %{public}@
%s CSAudioProvider[%{public}@]:prepareAudioStream with stream : %{public}@ with stream state : %{public}@
%s CSAudioProvider[%{public}@]:Cannot handle start audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:Cannot startAudioStream, audio system is recovering
%s CSAudioProvider[%{public}@]:Requested startHostTime = %{public}llu, _clientStartSampleCount = %{public}tu
%s CSAudioProvider[%{public}@]:%{public}@ is requesting earlier audio than asked, we can't deliver earlier audio
%s CSAudioProvider[%{public}@]:Set circularBufferStartHostTime = %{public}llu, circularBufferStartSampleCount = %{public}lu
%s CSAudioProvider[%{public}@]:Entering dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Failed to fetch historical audio since _clientStartSampleCount is newer than audioBuffer sample count(%{public}llu)
%s Start deliver historical audio buffer immediately
%s CSAudioProvider[%{public}@]:Leaving dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Received didStartRecording while %{public}@
%s CSAudioProvider[%{public}@]:Received didStopRecording reason : %{public}d, streamState : %{public}@
%s Calling unexpected didStop for all weak streams
%s CSAudioProvider[%{public}@]:Received didStopRecording while %{public}@
%s CSAudioProvider[%{public}@]:Waiting for recordingWillStartGroup before scheduling stopAudioStream
%s CSAudioProvider[%{public}@]:Scheduled stopAudioStream after waiting for recordingWillStartGroup - stopAudioStream %{public}@ with streamState : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stoppingWithScheduledStart, take out audio stream from schedule
%s CSAudioProvider[%{public}@]:Stream %{public}@ is not streaming on stream state : %{public}@, ignore the stopAudioStream request
%s CSAudioProvider[%{public}@]:Cannot handle stop audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stopping, adding audio stream into stop pending
%s CSAudioProvider[%{public}@]:Stop all recordings, moving stream state to %{public}@
%s CSAudioProvider[%{public}@]:Failed to stop audioStream : %{public}@
%s Saving circular buffer from %{public}lu to %{public}lu
%s CSAudioProvider[%{public}@]:%{public}@ ask for audio hold stream for %{public}f
%s CSAudioProvider[%{public}@]:Timeout for %{public}@ has fired
%s CSAudioProvider[%{public}@]:Removing %{public}@ from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ stream holder was already removed from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ ask for cancel hold stream
%s Failed to prewarmAudioSessionWithError : %{public}@
%s Failed to activateAudioSessionWithReason: %{public}@
%s CSAudioProvider[%{public}@]:Activating Audio Session under : %{public}@
%s Failed to activateAudioSession : %{public}@
%s CSAudioProvider[%{public}@]:shouldDuckOnBuiltInSpeaker: %{public}@ (audioStreamType: %{public}lu, isPlaybackRouteBuiltInSpeaker: %{public}@, isDuckingOnSpeakerOutputSupported: %{public}@)
%s Failed to fetch duckingSupported result : %{public}@
%s Failed to deactivate audio session : %{public}@
%s CSAudioProvider[%{public}@]:Deactivating Audio Session under : %{public}@
%s Failed to deactivateAudioSession : %{public}@
%s Unable to disable duckOthers in HomePod
%s CSAudioProvider[%{public}@]:AVVC is recovering, ignore command...
%s Not handled by this function
%s Fetching voiceTriggerInfo from audioRecorder
%s CSAudioProvider[%{public}@]:Cannot stopRecording as there are %{public}tu streamHolders
%s CSAudioProvider[%{public}@]:Shouldn't stop AVVC recording as there are %{public}tu streams
%s CSAudioProvider[%{public}@]:Buffer underrun!!!!, lastForwardedSampleTime:%{public}lu, oldestSampleTimeInBuffer:%{public}lu, stream:%{public}@
%s CSAudioProvider[%{public}@]:Ignore forwarding stream %{public}@                                        the audio packets until sampleCount == %{public}lu (theMostRecentSampleCount:%{public}lu)
%s CSAudioProvider[%{public}@]:Buffer overrun!!! lastForwardedSampleTime:%{public}lu,                                    theMostRecentSampleCount:%{public}lu, stream:%{public}@
%s Forward %d samples from historical audio buffer
%s ScheduleAlertFinishTimeout : %{public}@
%s ScheduleAlertFinishTimeout will be ignored : %{public}@, %{public}@
%s Received finishStartAlertPlaybackAt:%{public}llu streamState : %{public}@
%s CSAudioProvider[%{public}@]:Requested alertFinishHostTime = %{public}llu, _clientStartSampleCount = %{public}tu, circularBufferSampleCount = %{public}tu
%s Audio Streaming already stopped
%s Will invalidate current builtIn audio stream : %{public}@
%s failed to stopAudioStream : %{public}@
%s CSAudioProvider[%{public}@]:Audio Recorder Disconnected
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod crashed
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod recovered from crash
%s CSAudioProvider[%{public}@]:AudioRecorder will be destroyed
%s CSAudioProvider[%{public}@]:recordingTransaction already released
%s CSAudioProvider[%{public}@]:Release recording transaction at streamState : %{public}@
%s Audio Packet Delivery WatchDog fired, trying to recover
%s Schedule didStart WDT %{public}@ for %{public}lf seconds
%s startRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s startRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStartRecordingDelegate WatchDogTimer : %{public}@
%s Schedule didStop WDT %{public}@ for %{public}lf seconds
%s stopRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s stopRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStopRecordingDelegate WatchDogTimer : %{public}@
%s Update remote deviceUId fetched from AVVC : %{public}@ (this must be deviceUID of Darwin device only)
%s Failed to fetch remote deviceUId from AVVC
%s %@ task delivered.
%s %@ completed with response %@ and error %@.
%s Stop monitoring : HomePod voiceTriggerAssertion
%s VoiceTrigger cannot be turned on since SpeechDetectionVAD is not present
%s VoiceTrigger cannot be turned on since there is other app recording that is not eligible and we are not in a connected or outgoing call
%s VoiceTrigger cannot be turned on since voiceTriggerInCoreSpeech is NO
%s VoiceTrigger cannot be turned on since VoiceTrigger is disabled
%s VoiceTrigger cannot be turned on since Siri is disabled
%s VoiceTrigger cannot be turned on since SpringBoard is not started yet
%s VoiceTrigger cannot be turned on since device is not unlocked after restart
%s VoiceTrigger cannot be turned on since device is on battery
%s VoiceTrigger cannot be turned on since Siri is restricted on lock screen
%s VoiceTrigger cannot be turned on since Software Update Checking is running
%s Not supported on this platform
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s Locale map for %{public}@ is not available on asset
%s Tagging as handheld as user interacted in last %f secs
%s Tagging as farfield as last user interaction %f secs back
%s Tagging as FarField as user dismissed
%s Received external route change notification
%s Received external pickable route change notification
%s Received CarPlay AuxStream support change notification
%s Received CarPlay connection change notification
%s Start monitoring : AudioRouteChangeMonitor
%s Stop monitoring : AudioRouteChangeMonitor
%s Notifying Hearst Connection State : %{public}d
%s Notifying Hearst Routed State : %{public}d
%s Notifying Jarvis Connection State : %{public}d
%s Notifying Siri Input Source Out Of Band State : %{public}d
%s Failed to create AVVC : %{public}@
%s Create new CSAudioRecorder = %{public}p
%s Tear down _remoteRecordClient if needed
%s CSAudioRecorder %{public}p deallocated
%s Failed to teardown AVVC : %{public}@
%s AVVC initialization failed
%s Successfully create AVVC : %{public}p
%s Setting announced call flag to: %d with stream handle Id: %lu
%s Calling AVVC setContext : %@
%s Failed to get handle id : %{public}@
%s setContext elapsed time = %{public}lf, streamHandleId = %{public}lu, streamType = %{public}lu
%s Calling AVVC setContextForStream : %{public}@
%s Tried to setCurrentContext with mode %ld. This method can only be used for auto and post
%s setCurrentContext elapsed time = %{public}lf
%s Remote device with device id: %{private}@ not found
%s Failed to prepare remote device : %{public}@
%s Calling AVVC prepareRecordForStream(%{public}llu) : %{public}@
%s AVVC prepareRecordForStream failed : %{public}@
%s prepareRecordForStream elapsed time = %{public}lf
%s ::: CSAudioRecord will inject audio file instead of recording
%s Resetting AudioFilePathIndex
%s Increase AudioFilePathIndex = %d
%s AudioFilePathIndex is out-of-boundary _audioFilePathIndex:%d injectAudioFilePaths:%d
%s AudioFilePathIndex:%d accessing:%@
%s Unable to find injectAudioFilePath = %@
%s Asking startRecording to remote device with context : %{public}@ (original context : %{public}@)
%s Failed to fetch valid context
%s Failed to startRecording : %{public}@
%s startRecordingWithOptions elapsed time = %{public}lf
%s Calling AVVC startRecordForStream : %{public}@
%s startRecordForStream failed : %{public}@
%s startRecordForStream elapsed time = %{public}lf
%s Failed to stopRecording to remoteRecordClient : %{public}@
%s stopRecording elapsed time = %{public}lf
%s Calling AVVC stopRecordForStream
%s Failed to stopRecordForStream : %{public}@
%s stopRecordForStream elapsed time = %{public}lf
%s Session State = %d
%s AudioSessionState = YES
%s AudioSessionState = NO
%s fetch recordDeviceInfo elapsed time = %{public}lf
%s fetch EndpointDeviceType elapsed time = %{public}lf
%s AVVC sampling rate = %{public}f
%s AVVC doesn't return sampleRate, assume it is default sample rate
%s isNarrowBand = NO for streamHandleId = %{public}lu
%s (darwinOS) : isNarrowBand = NO for streamHandleId = %{public}lu
%s isNarrowBand = %{public}@ for streamHandleId = %{public}lu
%s Calling AVVC setSessionActive for Prewarm
%s Prewarm AudioSession has failed : %{public}@
%s Calling AVVC setRecordMode to mode : %{public}d
%s AVVC successfully setRecordMode
%s setRecordMode elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for activation with streamId(%{public}lu)
%s AVVC setSessionActivate has failed : %{public}@
%s AVVC successfully activated audioSession
%s setSessionActivate elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for deactivation : %{public}tu
%s Calling AVVC setSessionActivate for deactivation for stream %d: %{public}tu
%s Failed to setIamTheAssistant : %{public}@
%s Creating audio session with allow mixable audio while recording to YES
%s Calling AVVC : Enable Smart Routing Consideration
%s Calling AVVC : Disable Smart Routing Consideration
%s enableSmartRoutingConsiderationForStream elapsed time = %{public}lf
%s Fail to setSmartRoutingConsideration : %{public}@
%s Calling AVVC setDuckOthersForStream(%d) for DuckOthers/MixWithOthers
%s Failed to setDuckOthersForStream : %{public}@
%s setDuckOthersForStream elapsed time = %{public}lf
%s Calling audio session reset ducking settings
%s resetDuckSettings elapsed time = %{public}lf
%s Failed to setDuckToLevelDB : %{public}@
%s %{public}@ miniDucking now
%s enableMiniDucking elapsed time = %{public}lf
%s %{public}@
%s configureAlertBehavior elapsed time = %{public}lf
%s VoiceTriggerInfo is nil from AVVC
%s Ducking %{public}@ supported on current route with streamId: %{public}ld
%s Updated languageCode to: %{public}@ in VTEI received from remote
%s AVVCAudioBuffer contains %{public}d packet descriptions, size %{public}d, channels %{public}d. Ignoring
%s packets count %{public}d
%s Peak : %f, Avg : %f
%s Bad packet length %{public}d. Skipping rest of record buffer.
%s Cannot handle audio buffer : unexpected format(%{public}u)
%s Compensating %{public}u channel(s), heartbeat = %{public}lld
%s Audio record route is %{private}@ for stream id %{private}lu
%s Calling AVVC playAlertSoundForType to play alert
%s Ignore playing endpoint beep(record stopped beep) since it already played beep in gibraltar
%s Calling AVVC playAlertSoundsForType : %{public}ld
%s Received didStartRecording : %{public}p, forStream:%{public}llu, successfully:%{public}d, error:%{public}@
%s Received audio buffer %{public}d, heartbeat = %{public}llu, streamID (%{public}lu)
%s Received didStopRecording : %{public}p forStream:%{public}llu forReason:%{public}ld
%s Received Stream Invalidated : %{public}llu
%s toConfiguration : %{public}d
%s type : %{public}d, error : %{public}@
%s Encoder error : %{public}@
%s withContext : %{public}@
%s activate : %{public}d
%s AVVC lost mediaserverd connection
%s AVVC informed mediaserverd reset, no further action required
%s hasLocalPendingTwoShot = %{public}d, token : %{public}llu
%s Unsupported audio format!
%s Existing remoteRecordClient (deviceId = %@) doesn't match required one (deviceId = %@), create new remoteRecordClient
%s The input streamHandleId(%{public}lu) is not expected(%{public}lu)
%s primaryStream already torn down
%s Start Listening request with deviceId : %{public}@
%s CSOpportuneSpeakListener received didStart : %{public}d, %{public}@
%s remoteVADDuration = %{public}d, spgDuration = %{public}d, _remoteVADSPGRatio = %{public}d
%s AudioStreamRequest has failed : %{public}@
%s CSOpportuneSpeakListener received didStop : %{public}d, %{public}@
%s Request stop CSOpportuneSpeakListener
%s Audio coming from DoAP should contains RemoteVAD
%s boronScore : %{public}d, reportBoron : %{public}d, slienceScore : %{public}lf
%s Cannot create NSData with size 0
%s xpc object should be XPC_TYPE_DATA
%s Start monitoring : Siri setting switch, Siri is %{public}@
%s Stop monitoring : Siri setting switch
%s Siri Enabled = %{public}@
%s Trying to access BTLocalDevice
%s Accessing BTLocalDevice
%s BTLocalDevice %{public}p
%s Getting connected devices from local device %p...
%s Got %tu connected devices from local device %p.
%s Failed getting connected devices from local device %p (result = %d).
%s Local device is NULL.
%s Failed getting address from BTDevice %p (result = %d).
%s Failed to get sharing enable flag : %d
%s Failed getting sharing device addresses %d
%s Failed converting address from BTDeviceAddress (result = %d).
%s Device is temporary paired and not in contacts
%s Detaching bluetooth session : %{public}p
%s Already Attaching Bluetooth Session
%s Start attaching bluetooth session
%s session = %{public}p, result = %{public}d
%s session = %p
%s detached session is different from currently attached session, ignore
%s terminated session is different from currently attached session, ignore
%s Bluetooth Session is NULL
%s Failed to get default local device from session %{public}p, (result = %{public}d)
%s Failed to add local device callback from session %{public}p, (result = %{public}d
%s CSActivationXPCListener start listening
%s CSBenchmarker init
%{public, signpost.description:begin_time}llu, %s %s
%{public, signpost.description:end_time}llu, %s %s
allFramesProcessingLatency
%s startRecording
%s stopRecording
%s Audio file read start
%s Audio file read end
%s Unsupported protocol for this device
%s sessionID(for deviceId %{public}@ = %{public}llu
%s Trying to get sessionID when audioSessionInfoProvider is nil
%s SmartSiriVolume not supported on this platform - Bailing out
%s SmartSiriVolume connection started listening
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s Asset state : %{public}ld
%s ::: assetType: %{public}lu
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s Fetching remote meta data failed, scheduled retry after %{public}f seconds
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s Device is firstUnlocked. Fetching HEP assets
%s Device is NOT firstUnlocked. Will fetch assets after firstUnlock
%s Failed to get HEP asset
%s HEP Asset: %{public}@, path: %{public}@
%s endpointerModelVersion is still nil after fetching it from EAREndpointer
%s HEP::RecordingDidStop: Ignoring processAudioSamplesAsynchronously: Not queueing
%s first audio buffer host time: %{public}llu
%s HEP::RecordingDidStop: Ignoring processAudioSamplesAsynchronously
%s addAudio first sample offset: %{public}lu
%s Updated endpointer threshold: %{public}f
%s Updated endpointer delayed trigger: %{public}d
%s EARSPG: CSServerEndpointFeatures: %{public}@
%s Accepting RC: RCTime < 0: Server's processedAudioDuration(%{public}f) > _lastReportedEndpointTimeMs(%{public}f): sfLatency: %{public}f, rcTimeMs: %{public}f
%s Rejecting RC: SFLatency < 0: Server's processedAudioDuration(%{public}f): _lastReportedEndpointTimeMs(%{public}f): sfLatency: %{public}f, rcTimeMs: %{public}f
%s rcEpFeatures: %{public}@ shouldAccept: %{public}d
%s HEP::RecordingDidStop: Ignoring silenceScoreEstimateAvailable, Not queuing
%s Detected speech start at %{public}f of effectiveClientProcessedAudioMs
%s HEP::RecordingDidStop: Ignoring silenceScoreEstimateAvailable
%s Already communicated end-pt: Not Invoking hybridClassifier for silposnf=%{public}f
%s ClientLag: serverProcessedAudioMs(%{public}ld) > effectiveClientProcessedAudioMs(%{public}f)
%s ClientLag: Not invoking HybridClassifier: sfLatency > clientLagThreshold: %{public}f > %{public}f
%s ClientLag: Using DefaultServerFeatures with disconnected-state sfLatency: %{public}f
%s ClientLag: Using ServerFeatures with ClampedSFLatency: %{public}f
%s ClientLag: Not Invoking HybridClassifier as serverProcessedAudioMs > effectiveClientProcessedAudioMs
%s HEP.feats: [%{public}ld,%{public}f,%{public}f,%{public}ld,%{public}f,%{public}f] & [(%{public}@),%{public}f] @ %{public}lu [%{public}f, %{public}d]
%s HEP.posterior=%{public}f, result=1, endpointedBuffer.hostTime=%{public}llu, isAnchorTimeBuffered=%{public}d
%s request timeout with features %{public}@
%s ServerFeaturesLatencyDistribution: %{public}@ additionalMetrics: %{public}@
%s MMEP:: HEP detected at %{public}f but will continue running for MMEP.
%s Already communicated end-pt: Not scheduling work for hybridClassifierQueue for silposnf=%{public}f
%s Log hybrid endpointer features for event: %{public}@, and locale: %{public}@
%s triggerEndSeconds: %{public}f, _vtEndInSampleCount: %{public}lu, _vtExtraAudioAtStartInMs: %{public}lu,  _hepAudioOriginInMs: %{public}f, voiceTriggerInfo: %{public}@,
%s CSHybridEndpointAnalyzer recordingStoppedForReason: %{public}ld
%s sampleRate=%{public}lu, recordContext=%{public}@
%s CSEndpointAsset exists: %{public}@
%s No asset for CSHybridEndpointer for currentLanguage: %{public}@. Fallback to VAD2
%s Created OSDAnalyzer: %{public}@
%s Created HybridClassifier(%{public}@); canProcessCurrentRequest after reset: %{public}d,for sampleRate: %{public}lu, lang=%{public}@, version=%{public}@
%s HEP.logs.hdr: [ServerASR_trailingSilenceDuration,ClientSPG_SilenceFramesCountMs,ServerASR_endOfSentenceLikelihood,ServerASR_wordCount,ServerFeaturesLatency,ClientSPG_SilenceProbabilityHMMFiltered] & [ServerASR_pauseCounts,ServerASR_silencePosterior,ClientSPG_silenceProbailitySPGRaw] @ effectiveClientProcessedAudioMs : [HEPPosteriorOut,HEPDecision]
%s csHepConfig: %{public}@
%s _clientHepConfig: %{public}f, _clampedSFLatencyForClientLag: %{public}f, _useDefaultServerFeaturesOnClientLag: %{public}d
%s Language changed to: %{public}@
%s New hybrid endpoint asset downloaded
%s FirstUnlock notification received: %{public}d
%s _currentAsset changed to : %{public}@
%s %{public}@ doesnt exist
%s Could not read: %{public}@
%s Could not decode contents of: %{public}@: err: %{public}@
%s Request to init device with deviceType : %ld, deviceName : %@, deviceId : %@, productId : %@
%s Request inject audio %@ into device with UUID %@ and scale factor %f
%s Audio url %@ is nil, or url not existing in path
%s Can't find device with uuid %@
%s Device speak audio with startTime = %llu, stopTime = %llu
%s Request connect device with UUID %@
%s input device uuid is nil
%s Request disconnect device with UUID %@
%s deviceUUID %@ not existing in deviceDictionary, already disconnected
%s Request fetching primary input device
%s Error fetching primary device!
%s Cannot create NSNumber if xpcObject is NULL
%s XPC object type should be BOOL, DOUBLE, INT64, or UINT64
%s Cannot create xpcObject if objcType is NULL
%s Cannot create xpcObject since there is no matching type
%s Found pending activation : %{public}@, handle pending activation immediately
%s Received Activation Event in CoreSpeechDaemon: %{public}@
%s Returning error for already existing pending activation event : %{public}@
%s No delegate registered : Postpone activation event handling until we have delegate registered
%s Pending Timeout fired for %{public}@ returning error for timeout
%s There is no pending activation event to timeout
%s corespeechd received mediaserverd launched event
%s Start monitoring : AOP First Pass trigger
%s Stop monitoring : AOP First Pass trigger
%s SmartSiriVolume: deleted %{public}u elements in energy buffer.
%s SmartSiriVolume: number of elements to delete exceeds energy buffer size, ignore.
%s SmartSiriVolume init value for noise estimation %{public}f
%s SmartSiriVolume init value for LKFS estimation %{public}f
%s SmartSiriVolume enable policy changed : %{public}@
%s Already started listen polling, skip
%s listen polling has failed : %{public}@
%s Skip listen polling since audio is streaming / Siri disabled
%s Start audio stream successfully ? %{public}@, error : %{public}@
%s Received didStartRecording when Siri is off
%s Failed in requesting audio stream : %{public}@
%s Failed to stop audio stream : %{public}@
%s No audio stream to stop, we shouldn't hit this
%s SmartSiriVolume received MediaRemote initial state as %{public}@
%s SmartSiriVolume haven't got MediaRemote callback yet, let's assume media is playing.
%s SmartSiriVolume received alarm initial state as %{public}@
%s SmartSiriVolume received timer initial state as %{public}@
%s asset is nil, use default parameters(this should not happen).
%s SmartSiriVolume configure: %{public}@
%s SmartSiriVolume heartbeat = %{public}lld
%s SmartSiriVolume: estimated noise level %{public}f
%s SmartSiriVolume: estimated LKFS %{public}f
%s SmartSiriVolume: pause SSV calculation.
%s SmartSiriVolume: resume SSV calculation.
%s Siri is disabled, we shouldn't receive audio here, heartbeat = %{public}lld
%s stream stopped unexpectedly : %{public}ld
%s SmartSiriVolume received VT event!
%s SmartSiriVolume remove samples from VT utterances by %{public}llu, with startAnalyzeSampleCount = %{public}llu, samplesFed = %{public}llu, triggerStartSampleCount = %{public}llu
%s SmartSiriVolume trying to delete too many VT samples, set triggerDurationToDelete to be limited max: %{public}llu
%s SmartSiriVolume got empty VT event!
%s SmartSiriVolume dismiss alarm firing as VoiceTrigger detected.
%s SmartSiriVolume dismiss timer firing as VoiceTrigger detected.
%s SmartSiriVolume: final estimated TTS volume in dB %{public}f
%s SmartSiriVolume: adjust TTS volume since alarm/timer is firing.
%s SmartSiriVolume: TTS volume in dB from noise %{public}f, from LKFS %{public}f, with user offset %{public}f
%s SmartSiriVolume: soft volume algorithm in use
%s SmartSiriVolume: pause LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume: resume LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume received unknown media playing state, let's assume media is playing.
%s SmartSiriVolume received unknown alarm state, let's reset alarm state.
%s SmartSiriVolume: alarm firing status = %@ according to MobileTimer notification.
%s SmartSiriVolume received unknown timer state, let's reset timer state.
%s SmartSiriVolume: timer firing status = %@ according to MobileTimer notification.
%s SmartSiriVolume dismiss alarm firing as Siri client is recording.
%s SmartSiriVolume dismiss timer firing as Siri client is recording.
%s SmartSiriVolume: set StartAnalyzeSampleCount = %{public}lld
%s SmartSiriVolume: final estimated TTS volume %{public}f with music volume %{public}f
%s Dealloc CSAudioInjectionProvider : %@
%s Stopping Audio Injection Provider : %@
%s Calling start audio stream : %@ %@
%s Calling stop audio stream : %@
%s Updating attSiri state to: %lu
%s Unable to expand archive %{public}@ to directory %{public}@
%s Listening on watch cannot be turned on since speech detection VAD is disabled
%s Listening on watch cannot be turned on since Siri is disabled
%s Listening on watch cannot be turned on since SpringBoard is not started
%s Listening on watch cannot be turned on since device is not unlocked after restart
%s Hey Siri is enabled. Checking if we are in a call.
%s Hey Siri is disabled. Not checking if we are in a call.
%s Listening on watch cannot be turned on since Siri assertion is disabled and or its not in a ringtone hfp state
%s Listening on watch cannot be turned on since audioInjection is enabled
%s Listening on watch cant be turned on because we are in a ringtone with A2DP, connected or outgoing call
%s Another non eligible app is recording
%s VoiceTriggerDuringCall enabled = %{public}@
%s VoiceTrigger during a call is already %{public}@, received duplicated notification!
%s Siri language is nil, falling back to %@
%s endpointUUID not provided, fallback to legacy query
%s Failed to query language code with endpointId %@, trying legacy query
%s Automatic Volume Toggled. Automatic Volume Enabled: %{public}d
%s ::: Error reading file %@, err: %d
%s CSAudioFileReader requires prepare recording settings to feed audio
%s CSAudioFileReader only support LinearPCM to feed
%s Setting ExtAudioFileSetProperty failed : %d
%s Starting audio file feed timer, bufferDuration = %f sampleRate = %f, bytesPerFrame = %d, channelsPerFrame = %d
%s ::: Error reading data from audio file : %d
%s Reach to EOF, chunkSize = %d
%s Stopping audio file feed timer
%s Endpointer is disabled in recordOption: %@
%s CSHybridEndpointer canProcessCurrentRequest
%s CSHybridEndpointer can-NOT-ProcessCurrentRequest, fallback  to NNVAD
%s _activeEndpointer=%{public}@
%s shouldUseCVT2ShotDecision: %{public}d, isWatchRTSTriggered=%{public}d
%s preheat
%s endpointer: %{public}@: didDetectStartpointAtTime: %{public}f
%s EP_PROXY::RecordingDidStop: Ignoring startPoint-reporting
%s EP_PROXY::RecordingDidStop: Ignoring didDetectHardpoint-reporting
%s %{public}@: Endpointer didDetectHardEndpointAtTime:withMetrics: %{public}f, CallingDelegate: %{public}@
%s Reported 2-shot at: %{public}f secs
%s Queried endpointerModelVersion: %{public}@
%s WARN: endpointerModelVersion called when CSHybridEndpointer is not available
%s Skip update endpointer threshold from server for accessible endpointer request
%s WARN: logEndpointFeatures called when CSHybridEndpointer is not available
%s OSDNode added receiver: %@
%s OSDNode removed receiver: %@
%s setting prefetched asset %@
%s skip audio packet since osdAnalyzer is nil
%s Received audio chunk from %@ with hostTime: %llu, startSampleCount: %llu, numSamples: %lu, wasBuffered: %lu, atTime: %llu
%s update lastKnownConsecutiveBoronStartSampleCount to: %llu
%s total chunks received: %lu, samples processed: %lu
%s Skip since endpointer is disabled
%s Updating osdMode to %lu
%s Created OSDAnalyzer: %{public}@ model path: %{public}@
%s Cannot create OSDAnalyzer
%s %@ %@
%s Advert data: %{public}@
%s advert data write failed
%s Bypass Trial Asset
%s installationString: %@, for language: %@
%s File not exist: %{public}@
%s endpointAsset: %{public}@, osdAsset: %{public}@
%s elapsed time to get HEP mobile assets: %{public}lf
%s Fake endpoint asset: %@
%s Dealloc CSAudioInjectionEngine : %@
%s Looking up audio diff:%llu sampleCount:%llu %@
%s First Pass Score : %f, First Pass Best Start : %llu, First Pass Best End : %llu
%s Start monitoring : Springboard start
%s Cannot start monitoring Springboard start because it was already started
%s Stop monitoring : Springboard start
%s SpringBoard started = %{public}@
%s PHS threshold for %lu doesn't exist, use default
%s Received Activation Event : %{public}@
%s Cannot handle activation event : %{public}@
%s activation client not exist
%s Start monitoring: wake Gesture
%s ERR: Failed to initialize SSV Manager!
%s ERR: %{public}@
%s Primary stream is nil !
%s CSAttSiriAudioSrcNode deallocated
%s Tandem stream stopped unexpectly for reason: %ld
%s Unexpected audioFormat for ATV : %{public}u
%s Create audioDecoder for audioFormat %{public}u
%s Stop monitoring : First unlock
%s xpc object string return nil
%s xpc object should be XPC_TYPE_STRING
%s xpc object should be XPC_TYPE_ARRAY
%s xpcObject value is NULL
%s Cannot decode non-plist types of XPC object
%s Cannot encode non-plist types into XPC object : %{public}@
%s Providing voiceTriggerEventInfo with deviceId %{public}@
%s Providing built-in voiceTriggerEventInfo
%s Timed-out for fetching voiceTriggerInfo
%s TiggerInfoProviding is nil
%s SmartSiriVolume cannot be resumed because Siri is not enabled
%s Overriding Myriad state as request was made during a ringtone
%s Invoked Siri client
%s Cannot invoke Siri client : %{public}@
%s Cannot notify wake keyword spoken event : %{public}@
%s AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm success
%s AFSiriActivationCarPlayDeviceVoiceTriggerPrewarm failed : %{public}@
%s Invoked Siri client for voice trigger from Jarvis
%s Cannot invoke Siri client for voice trigger from Jarvis : %{public}@
%s SiriActivationConnection deactivated due to %ld
%s Invoked Siri client for voice trigger from Darwin
%s Cannot invoke Siri client for voice trigger from Darwin : %{public}@
%s siriSessionUUID = %{public}@
%s CSAudioProcessWaitingBuffer deallocated
%s Reason : %{public}lu
%s Received xpc disconnection
%s Updated endpoint start time in sec : %{public}.3f
%s Adjusted endpoint start time to : %{public}.3f, audioSampleCountToSkip : %{public}lu
%s Preheat LocalSpeechRecognition now
%s Settings : %{public}@
%s Unsupported speech recognizer task : %{public}lu
%s _localSpeechRecognizerState:%lu
%s Received nill requestId, generate requestId under corespeechd
%s Start deliver asr results with requestId: %@
%s Handle late start request from Request Dispatcher
%s Clear audio waiting buffer since current requestId(%@) doesn't match expected one (%{public}@)
%s Reason : %{public}lu, requestId : %@
%s requestId doesn't match current one (%@), ignore
%s requestId : %@
%s requestId doesn't match current siriSessionUUID (%@), ignore
%s Request Dispatcher hasn't asked to start local ASR yet, cache the audio
%s ASR already process enough audio until endpoint, stop processing it
%s %lf
%s Already accepted result candidate for request
%s Sending RC selection delegate with parameters, RcId: %{public}lu mitigationSignal: %{public}d shouldAccept %{public}d requestId:%@
%s Reset endpointStart and audioSampleCountToSkip since recordContext is %{public}@
%s shouldResetWaitingBuffer:%u
%s Preheat local speech recognizer with language : %@
%s Local speech recognizer disabled, ignore prepare
%s cached requestId : %@, newRequestId : %@
%s Disable local SR for dictation
%s mhID : %@
%s current state = %{public}@
%s speech recognizer task not specified, fallback to SearchOrMessage
%s Calling local speech recognition with settings : task(%{public}@), endpointStart(%{public}.3f), inputOrigin(%{public}@), location(%{public}@), shouldCensorSpeech(%{public}@), jitGrammar(%{public}@), enableVoiceCommands(%{public}@)
ondevice_VoiceTriggerEndToASRStartLatency
%s Voice trigger end to ASR Start Latency: %{public}.2f ms
%s didStart local speech recognition with error :%@, model properties : %@
%s Setting local speech recognizer state to [Idle] as not able to start local ASR
%s Local speech recognizer can't started : locale(%{public}@), taskName(%{public}@)
%s Added %{public}lu samples to local speech recognizer
%s Stopping task %@
%s Request dispatcher didn't ask to start until end
%s Complete task now since taskString(%{public}@) or localSR(%{public}p) is nil
%s Complete task now since local SR is disabled
%s Schedule RecordingTransactionReleaseTimer %{public}@ for %{public}lf seconds
%s Token : %{public}@, currentToken : %{public}@
%s recordingToken doesn't match, ignore
%s %@ created speech recognizer %@
%s Ignoring completion from previous recognizer!
%s Ignoring completion with metadatapackage as enable condition not satisfied!
%s Exceeding max local speech recognition duration (%{public}f) : %{public}f, force endbooking the ASR task
%s Skip query as already accepted result candidate for request
%s didDetectedEndpoint = %{public}@, usesAutomaticEndpointing = %{public}@, waiting
%s Eager results accepted: %{public}d. Duration: %{public}lf last duration: %{public}lf
%s Received duration not matching last duration
%s isFinal package : %{public}@
%s There is no valid RC to deliver, or previous RC already got accepted
%s Enforce previous endpointHint
%s SpeechPackage processed audio duration: %f ms
%s Speech recognition encountered error: %{public}@
%s Invalidating local speech recognizer for finish
ondevice_EagerCPL
%s eagerCPL time interval: %{public}f, userSpeakingEndedHostTime: %{public}llu, lastEndpointEagerResultTime: %{public}llu
%s wordCount = %ld, trailingSilenceDuration = %ld, eosLikelihood = %f, pauseCounts = %@, silencePosterior = %f, processedAudioDurationInMilliseconds = %ld
%s Received ASR datapack root directory: %{public}@
%s Received inputOrigin: %{public}@ from Request Dispatcher, use hard-coded map
%s set current state from %{public}@ to %{public}@
%s Selected recognizer language : %{public}@
%s Can't calculate TTFW due to missing metric: %llu %llu %f %f
ondevice_TimeToFirstWord
ondevice_LeadingSilence
%{public, signpost.description:begin_time}llu, %s
%{public, signpost.description:end_time}llu, %s
ondevice_FirstWordDuration
%s Timer already running. Cannot schedule another task
%s CSAttSiriTimer fired: event-handler called
%s Starting CSAttSiriTimer...
%s Cancelling pending timer...
%s stream %{public}@ initialized
%s stream %{public}@ is deallocated
%s Creating UUID for start audio stream request : %{public}@
%s Delivering didStop to %{public}lu tandem stream(s)
%s AudioStream<%{public}@> is streaming : %{public}d
%s Stream %{public}@ set startTimeInSampleCount : %{public}llu
%s AudioStream<%{public}@> has received didStopStreamUnexpectly
%s AudioStream<%{public}@> has received didHardwareConfigurationChange
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
%s Resetting audio preprocessor : %{public}f, containsVoiceTrigger:%{public}d
%s Flushing audio preprocessor
%s Zero Filter Metrics: %{public}@
%s Beep Canceller Metrics : %{public}@
%s accessoryId %{private}@
%s Received active route change notification
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s Created VoiceIdXpc connection
%s event = %{public}p client = %{public}p cannot handle event
%s ignore unknown types of message
%s message = %{public}p, client = %{public}p, cannot handle message
%s MessageType = %{public}lld
%s Null msg body
%s Null VTEI
%s Null Ctx
%s Null deviceInfo
%s Null audio context
%s Received msg of type %{public}lld for utt %{public}@
%s Fetched latest VT asset %@ for retraining
%s Implicit utterance processing done with error %{public}@
%s Cannot retrain since we cannot look-up SSR asset with error %@
%s Received error %{public}@ from client %{public}@
%s Client %{public}p connection disconnected, noticing xpc listener
%s AssetManager cannot be turned on since isFirstUnlocked is NO
%s AssetManager cannot be turned on since network is not available
%s Setting mixable to yes as we are in an active call
%s CSXPCListener start listening
%s setEndpointerOperationMode : %{public}d
%s current EndpointerOperationMode : %{public}d
%s update endpointer threshold to %{public}f for task %{public}@
%s isASRFeatureFromServer = %{public}d
%s HEP.posterior=%{public}f, result=1, endpointedBuffer.hostTime=%{public}llu, anchorhostTime=%{public}llu, endpointSampleCount=%{public}llu, numSamplesProcessedBeforeAnchorTime=%{public}lu, isAnchorTimeBuffered=%{public}d
%s CSHybridEndpointer recordingStoppedForReason: %{public}ld
%s No asset for CSHybridEndpointer for currentLanguage: %{public}@. Fallback to NNVAD
%s _clientHepConfig: %{public}f, _clampedSFLatencyForClientLag: %{public}f, _useDefaultServerFeaturesOnClientLag: %{public}d, _extraDelayFrequency: %{public}lu, _taskThresholdMap: %{public}@
%s update assets to: %@
%s Initializing CSRawAudioInjectionProvider
%s Done initializing CSRawAudioInjectionProvider
%s Dealloc CSRawAudioInjectionProvider
%s Calling StreamId for : %@
%s Calling prepare
%s Calling start audio stream : %@
%s Calling stop audio stream
%s Calling isRecording
%s Calling prewarm
%s Calling activate audio session
%s VoiceTrigger is already %{public}@, received duplicated notification!
%s Start monitring : VoiceTrigger setting switch
%s Cannot start monitoring VoiceTrigger setting switch because it was already started
%s Stop monitring : VoiceTrigger setting switch
%s VoiceTrigger enabled = %{public}@
%s Received RC %lu with duration %f from server, make RC acceptance and mitigation decision
%s shouldAccept = %d, isMitigated = %d
%s rcId: %lu
%s Failed to fetch listeningEnabled : %{public}@
%s listening property in AOP : %{public}d
%s Failed to fetch listeningEnabledOnNotification : %{public}@
%s Stop monitoring : AOP Listening state
%s Received AOP Listening state change notification : %{public}d
%s Created AFTM-AS node
%s Don't run AFTM for recordType: %lld
%s Prefetched asset not set
%s Invalid FTM config read from configFile %{public}@ for task %{public}@
%s Reading config from: %{public}@ for task %{public}@
%s Configured recording types: %{public}lu
%s Thresholds read: %{public}@
%s Shadow Mode: %{public}d
%s Received start request for record type: %{public}@, supportedRecordTypes: %{public}lx taskName %{public}@
%s Unable to create progressive checker with error:%{public}@
%s Unable to create progressive checker context with error:%{public}@
%s Created SLProgressiveCheckerAnalyzer %{public}@ with context %{public}@
%s CSAcousticProxy has received %{public}d samples, heartbeat = %{public}lld
%s Siri session ended, stoping acoustic checker
%s Empty result
%s Cancelling Siri request, score: %{public}.3f, threshold: %{public}.3f
%s Invalid Analyzer: %{public}@
%s FINAL: Analyzed samples: %lu, score: %f
%s PARTIAL: Analyzed samples: %lu, score: %f
%s Assistant audio log not available
%s Error writing out AcousticSL info meta: %{public}@
%s Saving AcousticSL results at %{public}@
%s Submitting AcousticFTM analytics: %@
%s Current wireless splitter info = %{public}@
%s Received WiressSplitterStateChange
%s Start monitoring : Wireless Splitter start
%s Cannot start monitoring Wireless Splitter because it was already started
%s Stop monitoring : Wireless Splitter
%s Unexpected XPC audioTimeConvert providing request : %{public}lld
%s From sampleCount %{public}llu fetched hostTime = %{public}llu
%s From hostTime %{public}llu fetched sampleCount = %{public}llu
%s Non internal build, Ignoring command %@ from peerId %@ - Bailing out!
%s Received Malformed command %@ from peerId %@ - Bailing out!
%s Command %@ received from peerId %@
%s Unknown Command: (%@) - Ignoring
%s Triggering sync with peer - %@
%s Triggering nearmiss sync with peer - %@
%s Triggering voice profile sync with peer - %@
%s Triggering acoustic data sync with peer - %@
%s Triggering gecko sync with peer - %@
%s CSP2P_RemoteHeySiriCmd: ENABLE HeySiri: Not Implemented Yet: 
%s CSP2P_RemoteHeySiriCmd: DISABLE HeySiri: Not Implemented Yet: 
%s Cannot read contents of directory: %@, err: %@
%s Unable to get %@ for file at %@: %@
%s Could not determine if [%@] is a directory or not. Err=%@
%s Found dir: %@. Skipping compression
%s _compressFilesInDirectory: Malloc failed for file %@ (%lu) - Discarding
%s _compressFilesInDirectory: Compression failed for file %@ (%lu) - Sending Uncompressed
%s _compressFilesInDirectory: File %@ compressed from %ld to %ld 
%s Failed in compressing %{public}@ with errror %{public}@ - Bailing out
%s Transfering NearMiss file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s Transfering grading file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s Grading log file successfully transfered for file %@ in task %@
%s Grading log file failed to transfer for file %@ in task %@
%s %@ is nil - Bailing out
%s Failed in transporting Voice file %@ with reponse: %@, error %@
%s Failed to remove the file %@ with error %@
%s Failed to move the file %@ to %@ with error %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: unknown IDS peer with passed Identifier %@, %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: Creating directory failed with error %@
%s Ignoring sync of existing file %@ from %@
%s Syncing parallel recorded audio file - %@ from %@
%s Uncompressed file %@ sent by peer %@
%s ERR: Failed to allocate buffer of size %zu, bailing out
%s Writing to file(%@) failed!. Err=%@
%s received malformed command - %@ %@ %@
%s unknown IDS peer with passed Identifier %@, %@ %@
%s received malformed command - %@
%s Syncing audio file - %@ from %@
%s Error setting remoteP2Plog file to NSFileProtectionCompleteUntilFirstUserAuthentication. file=%@ Err=%@
%s CSP2P_VoiceProfileTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileTransferCmd: received malformed command: CSP2P_VoiceProfileData_Key: %@CSP2P_VoiceProfileFileName_Key: %@CSP2P_VoiceProfileSpeakerName_Key: %@CSP2P_VoiceProfileLocale_Key: %@CSP2P_VoiceProfileDataType_Key: %@CSP2P_VoiceProfileTotalSegments_Key: %@CSP2P_VoiceProfileSegment_Key: %@
%s CSP2P_VoiceProfileTransferCmd: Received VoiceProfile Segment (%@/%@) from peerId %@
%s CSP2P_VoiceProfileTransferCmd: Failed to delete the directory %@ with error %@
%s CSP2P_VoiceProfileTransferCmd: received VoiceProfileSegment %@, expected %d
%s CSP2P_VoiceProfileTransferCmd: Creating directory failed with error %@
%s CSP2P_VoiceProfileTransferCmd: Writing to file failed!!!
%s Received request to delete VoiceProfile %@ from peerId %@
%s Cannot send data across when _adCompanionServiceProvider is nil - returning
%s ERR: Rejecting command %@ sent to non Horseman device
%s ERR: received malformed command - %@ %@
%s ERR: unknown IDS peer with passed Identifier %@, %@ %@
%s ERR: received malformed command with locale nil - %@
%s Fetching homeUserId for siriProfileId %{public}@
%s siriProfileId %{public}@ maps to homeUserId %{public}@
%s ERR: Home User Id erred %{public}@ for Siri Profile Id %{private}@
%s ERR: %@
%s ERR: received malformed command with profileId nil - %@
%s ERR: Failed to find voice profile with identifier - %@
%s CSP2P_VoiceProfileFetchCmd: Transferring voice profile %{public}@
%s CSP2P_VoiceProfileFetchCmd: File %@ isCompressed: %d, compressedSize: %ld, err: %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed VoiceProfileTransfer: %@, error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed transferring voice profile %@ with error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred voice profile %@
%s ERR: Rejecting command %@ sent to Horseman device
%s ERR: received malformed command with relative path nil - %@
%s Failed in sending trigger for Voice profile update to peer %@ with error %@
%s SpkrId:: path is nil - Bailing out
%s SpkrId:: Direntry with same name exists, this will be removed: %@
%s SpkrId:: Creating Directory : %@
%s SpkrId:: Creating Directory failed : %@
%s Error reading directory at %@: err: %@
%s %@ is empty
%s Using audioInjectionProvider as recorder
%s context : %@
%s context:%@, flag:%u option:%@, eventUUID:%@
%s _requestMHUUID set to :%@
%s Skip asking audioSrcNode to record since Siri client failed to start audio
%s Cached siri client stream, attach after nodes start
%s Skip asking audioSrcNode to prepare since Siri client failed to prepare audio
%s Siri enabled : %{public}d
%s currDp:%@ newRequiredNodes:%@
%s %@ is ready
%s Updating mitigation asset to %@
%s Unable to get Trial mitigation assets with err: %@, asset: %{public}@
%s Updating VT asset to %@
%s Unable to get Trial VT assets with err: %@, asset: %{public}@
%s Attached to siri client stream with result: %d error:%@
%s Failed to setup audioSrcNode
%s Skip processing for remora requests!
%s AFTM started for siri request status: %{public}d with error: %{public}@
%s attSiriTransaction already released
%s Received audio route change monitor event : %{public}d
%s init-_currentLanguageCode: %{public}@
%s Asset Manager Policy has been %{public}@
%s Asset Manager Policy has been enabled, start fetching meta data now
%s Need to fetch remote meta now, since we have new asset need to be downloaded
%s Does not need to fetch remote meta now
%s Cannot fetch VoiceTrigger asset meta data
%s Undefined assetType : %{public}u
%s Trying to start download meta data
%s Periodical downloading is already scheduled, ignore request.
%s No periodical downloading is scheduled, ignore request.
%s Failed to fetch local deviceId, abort
%s Sending HID report (length = %{public}lu) to host with deviceId info (%{public}@)
%s Record route = %{public}@, playback route = %{public}@
%s Device endpointType = %{public}lu
%s hypotheticalRoute = %{public}@
%s Audio route changing to HFP is expected
%s zeroFilterWinSz: %{public}tu, numHostTicksPerAudioSample: %{public}f
%s _vtEndInSampleCount:%{public}ld, _numSamplesProcessed: %{public}ld, voiceTriggerInfo: %{public}@
%s Failed to initialize caesuraSPG, stopping monitoring
%s Start monitoring : EARCaesuraSilencePosteriorGenerator: %{public}@
%s deallocating EARCaesuraSilencePosteriorGenerator: %{public}@
%s Stopped monitoring : EARCaesuraSilencePosteriorGenerator
%s EARClientSilenceFeatures heartbeat = %{public}lld,                   silScoreEstimate = %{public}f
%s splitterState : %{public}lu, shouldDisableSpeakerVerification : %{public}@
%s This call is not supported on darwinOS device (splitterState)
%s Metric Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Metric providing request : %{public}lld
%s audioMetric = %{public}@
%s audioMetricProvider not existing
%s Message type = %{public}lld
%s Cannot handle wrong message type
%s Cannot handle activateEventMessage since event is nil
%s _bestStartDetectSample %lu was greater than _bestEarlyDetectSample %lu or _bestEndDetectSample %lu
%s _bestEarlyDetectSample %lu was greater than _bestEndDetectSample %lu
%s _speechVoiceLevel %lu is 0
%s _numberOfTotalFramesETFT %lu is 0
%s Successfully ? %{public}@
%s Notify release of audio session
%s Created NLDA-AS node
%s Unable to create Bert model with error: %{public}@
%s Created Bert model !
%s Model not available
%s Failed to get result from Bert
%s NLDA detailed Result: %{public}@
%s Using ODLD processor
%s OS transaction obtained for NLDA inference
%s osTransaction already released
%s OS transaction released after NLDA inference
%s Failed to fetch recording client info, error : %{public}@
%s Start monitoring : AVVC recording client count
%s Stop monitoring : AVVC recording client count
%s Reset AVVC recording client count due to audio server crash
%s update AVVC recording client # : %{public}lu
%s Start monitoring : SelfTrigger switch, SelfTrigger is %{public}@
%s Stop monitoring : SelfTrigger switch
%s Set SelfTrigger Enable = %{public}@
%s Start monitoring : VoiceTrigger Asset Download
%s Stop monitoring : VoiceTrigger Asset Download
%s New VoiceTrigger is now installed
%s SmartSiriVolumeContextAware TTS volume post lower and upper bounds is: %f
%s TTS volume offset post lower and upper bounds is: %{public}f
%s Hang up toggle: %d
%s VoiceTrigger cannot be turned on since we are not in the desired call state
%s VoiceTrigger cannot be turned on since we are in a hang up supported call state but it is not first party.
%s VoiceTrigger cannot be turned on because we are in a ringtone and hsPhoneCallCapableHeadsetConnected: %d builtInState: %d isInSplitterMode: %d
%s Smart Siri Volume not supported on this platform - Bailing out
%s ERR: Failed to initialize Smart Siri Volume with sampling %{public}f and %{public}@
%s AlarmState changed to %{public}d
%s TimerState changed to %{public}d
%s MusicVolume changed to %{public}f
%s AlarmVolume changed to %{public}f
%s Automatic Volume State changed to %{public}d
%s UUID was nil will not start fingerprint provider
%s Updated in use services for fingerprintProvider. %lu services in use
%s Starting continuousFingerprintProvider
%s UUID was nil will not stop fingerprint provider
%s Updated in use services for fingerprintProvider. %lu services remaining
%s Stopping continuousFingerprintProvider
%s Created URES-AS node
%s Unload NLDA model
%s Set input origin to: %@
%s _allowListWordCountThreshold:%lu
%s Use config file at : %{public}@
%s Mitigation file doesn't exist at %{public}@, don't use Siri Assets for mitigation
%s Using config file at : %{public}@
%s Got mitigation result: %{public}d for RCId: %{public}lu
%s Mitigation signal for RCId: %{public}lu not found
%s ASR node fetched mitigation signal, unload NLDA model
%s Replacing already made decision for RCId: %{public}lu
%s Failed to get result from UReS, don't mitigate
%s Final mitigation result: %{public}@ for RCId: %{public}lu
%s Mitigation not supported for ctx: %{public}@
%s UReS not supported for inputOrigin: %{public}@, abort
%s Unable to get all required inputs for decision - (inputOrigin: %{public}@), abort
%s Recognizer task: %{public}@ isn't support, don't run URES mitigator
%s Received RC from ASR, make UReS decision
%s Speech package not present or Speech package doesn't contain LRNN scores, don't run URES mitigator
%s Applying override rule, don't mitigate
%s AttSignal: NLDA Score: %.3f
%s Received RC from server, make UReS decision
%s shouldMitigate = %d
%s Overriding mitigation decision from preferences
%s Input origin not set, Abort !
%s AttSignal: EoS Likelihood %{public}f
%s Unable to create Ures mitigator with err: %{public}@
%s Created URES Mitigator !
%s Received AFTM score: %{public}f for task: %{public}@
%s AttSignal: aftmScore: %.3f
%s AttSignal: osdActivity: %{public}@ for duration %.3f
%s Ignore SpkrId Score updates
%s ERR: Failed to retrieve Speaker score, letting trigger through - %{public}@
%s SPKR Accept: Score %{public}.3f Threshold %{public}f 
%s SPKR Reject: Score %{public}.3f Threshold %{public}f 
%s AttSignal: ssrScore: %.3f
%s OS transaction obtained for UReS inference
%s OS transaction released after UReS inference
%s ERR: metaData is nil, defaulting to NO for %{public}@
%s ERR: read metafile %{public}@ failed with %{public}@ - defaulting to NO
%s Override not applicable for non-magus inputOrigin
%s Override vocab list not set
%s Num tokens exceeds threshold, don't apply override
%s Found transcript (%@) match in override list, don't mitigate
%s Read SDSD override list from %{public}@
%s Start monitoring : AdBlocker Asset Download
%s Stop monitoring : AdBlocker Asset Download
%s New AdBlockerAsset is now installed
%s CSVoiceIdXPCListener start listening
%s speechController = %{public}p
%s xpcListener = %{public}p
%s context = %{public}@
%s Failed to create audio recorder : %{public}@
%s For Context : %{public}@, audioStreamId(%llu) has allocated
%s Failed to get audio stream handle ID : %{publid}@
%s has match with audio stream handle id : %llu
%s does not match with audio stream handle id(%llu), creating new audio provider
%s No audioRecorder available, return nil for audioProvider
%s have matched audioProvider with stream handle id : %llu
%s provider's streamId(%tu) is invalid, return nil
%s don't have matched audioProvider with stream handle id : %llu, need to create one later
%s audioProvider[%{public}@] invalidated with streamHandleId : %{public}llu
%s No matched audioProvider found for streamHandleId : %{public}llu
%s Received VoiceTrigger cached asset change notification, let's reinitialize VoiceTrigger
%s Trying to start clear logging files
%s Clear logging file timer is already started, ignore startClearLoggingFilesTimer request.
%s cannot handle nil event 
%s ignore unknown types of message: %{public}@
%s cannot handle nil error
%s Required values is nil, bailout
%s input dictionary is nil
%s Cannot send nil message
%s Unable to send message to client since there is no connection
%s Cannot handle audio providing message
%s Audio Providing Request Message has arrived : %{public}lld
%s Unable to handle audio providing switch message : context is nil
%s Setting XPCClientType to %{public}d
%s Handing PingPong message
%s Attentive Siri not supported on device
%s Endpointer xpc connection started listening
%s LocalSpeechRecognition xpc connection started listening
%s AttSiriServiceListener xpc connection started listening: _attSiriSvcListener=%@
%s SSR xpc connection started listening
%s RC Processing xpc connection started listening
%s Received SIGTERM. Exiting
%s CSHostDaemon didLaunch
%s Got xpc event for notification %s
%s Daemon WillShutdown
%s %{public}.2f ms after firstBufferStart
%s Invalid timestamp (currentMachTime: %{public}llu timestamp: %{public}llu)
%s Invalid timestamp (currentMachTime: %{public}llu arrivalTimestamp: %{public}llu)
%s numOfAudioPackets: %{public}lu, numOfValidTrailingPackets: %{public}lu, numOfValidTrailingSpeechPackets: %{public}lu, 
trailingPktLatencies: %{public}@ 
trailingPktSpeechLatencies: %{public}@
%s Error reading audio file: %{public}d, skipping...
%s Notifying CoreSpeechDaemon launched
%s Start monitoring : corespeechd state
%s Cannot start monitoring corespeechd state because it was already started
%s Stop monitoring : corespeechd state
%s CoreSpeechDaemon state changed to %{public}u
%s Failed to fetch speaker state muted info, error : %{public}@
%s Queried built-in speaker mute state as %{public}@
%s Timed-out for fetching speaker state muted info, setting isMuted = YES
%s Failed to fetch builtIn speaker active state, error : %{public}@
%s Queried built-in speaker state as %{public}@active
%s Timed-out for fetching speaker state active info, setting speakerStateActive = NO
%s Speaker state changed : %{public}@
%s Failed to get speaker state from AVVC, default to inactive
%s Speaker mute state changed: %{public}@
%s Failed to enable speakerStateListening: %{public}@
%s Start monitoring : Speaker state from AVVC
%s Failed to disable speakerStateListening: %{public}@
%s Stop monitoring : Speaker state from AVVC
%s CSVoiceTriggerAsset found: %{public}@
%s ERR: Mach Service Name is nil - Bailing out
%s ERR: Proxy Object is nil - Bailing out
%s ERR: Exported interface is nil - Bailing out
%s Set up queue for %@
%s Started listening for %{public}@
%s Service %{public}@ dealloced - %{public}@
%s Got connection on service %{public}@
%s [Service:%{public}@] Invalid listener - %{public}@
%s Rejecting connection to %{public}@ due to entitlement
%s [Service:%{public}@] Listener Interruption Handler: %{public}@, client PID: %{public}d)
%s [Service:%{public}@] Listener Invalidation Handler: %{public}@, client PID: %{public}d exited
%s machServiceName(%@) with clientConnCount:%lu 
%s Sending message to remote object: %@
%s RemoteObjectProxy is nil for client PID (%{public}d)
%s [Service:%{public}@]
%s Cannot create directory at : %{public}@ : %{public}@
%s Successfully make CoreSpeechDaemon as KeepAlive, created keepAlive file at %@
%s Failed to make CoreSpeechDaemon as KeepAlive : Cannot create file at %{public}@, error : %{public}@, %{public}@
%s KeepAlive file %{public}@ already existing
%s language code already up-to-date : %{public}@
%s Start monitoring: siri assertion enable/disable
%s Stop monitoring: siri assertion enable/disable
%s did receive enable assertion
%s did receive disable assertion
%s CSAudioSessionProvidingProxy has received xpc disconnection _streamClientType : %{public}d
%s Trying to release audio stream on CSAudioSessionProvidingProxy
%s deallocated
%s Session Providing Request Message has arrived : %{public}lld
%s Unexpected XPC session providing request : %{public}lld
%s Failed to prewarm audio session, error : %{public}@
%s Session activate reason : %{public}u, dynamicAttributeType : %{public}u, bundleId: %{public}@
%s Failed to activate audio session, error : %{public}@
%s Session activate reason : %{public}u
%s Failed to deactivate audio session, error : %{public}@
%s Session set duck others option : %{public}d
%s Trying to set duck others option when audioSessionProvider is nil
%s Manual ducking handler not supported!
%s Session %{public}@ mini ducking
%s Trying to enalbe mini ducking when audioSessionProvider is nil
%s Session %{public}@ smart routing consideration
%s Trying to enable smart routing consideration when audioSessionProvider is nil
%s Dealloc CSAudioInjectionEngineRemoraEngine : %@
%s Alert Providing Request Message has arrived : %{public}lld
%s Unexpected XPC alert providing request : %{public}lld
%s Alert sound url : %{public}@, alertType = %{public}d, force = %{public}@
%s Set alert sound successful ? %{public}@
%s audioAlertProvider not existing
%s AlertType = %{public}d
%s Play alert sound successful ? %{public}@
%s PlayRecordStartingAlertAndResetEndpointer successful ? %{public}@
%s alertStartTime = %{public}llu
%s Invalid alert behavior
%s Alert behavior : %{public}@
%s Request to bypass PhraseSpotter : %{public}d with timeout %{public}lf seconds
%s Received Siri Session did cancelled
%s Created FlexKwd-AS node
%s Unable to start Flex Kwd with error %{public}@
%s Unable to start audio stream for Flex Kwd with error %{public}@
%s Trigger info already sent, ignore result
%s Reporting trigger with result: %{public}@
%s _set_user_dir_suffix failed: %{darwin.errno}d
%s Connection %{public}p rejected due to missing entitlement
%s Start monitoring : AdBlocker Asset meta update
%s Stop monitoring : AdBlocker Asset meta update
%s New AdBlocker asset metadata is available
%s Error reading file
%s Version of AdBlockerAsset: %d
%s EarlyDetectSample = %{public}d
%s Cannot create de-interleaver using AudioConverterNew: %{public}d
%s Created de-interleaver
%s Stopping AudioInjectionEngine : %@
%s Failed to open audio file %@, error : %d
%s Streaming from %@
%s Cannot speak nil Audio URL
%s Cannot speak since audio file does not exists : %@
%s Calling stopAudioStream
%s Failed to deinterleave the data: %{public}d
%s Start monitoring : Software update checking state
%s Cannot start monitoring software update checking state because it was already started
%s Stop monitoring : Software update checking state
%s Software update checking running : %{public}@
%s There is not audio buffer to convert. Skip this.
%s Got asked for %{public}u packets, have %{public}u
%s [%{public}02u of %{public}02u %{public}fs] Opus packet with %u bytes
%s %{public}d bytesConsumed from opus coverter, remains %{public}d bytes
%s Resetting AudioConverter buffer
%s createAudioConverter : initial frames per buffer = dur %{public}.2f * sr %{public}.2f = %{public}u
%s Failed to get audioConverter property (kAudioConverterCurrentOutputStreamDescription) : %{public}d
%s _configureAudioConverter: encoded audio needs minimum of %{public}u bytes per output buffer
%s _configureAudioConverter: AudioConverterGetProperty(kAudioConverterPropertyMinimumOutputBufferSize) returned status %{public}d
%s _configureAudioConverter: final framesPerBuffer: %{public}u
%s _configureAudioConverter: _convertPacketCount: %{public}u
%s _configureAudioConverter: AudioConverterGetProperty(MaximumOutputPacketSize): returned status %{public}d
%s createAudioConverter: outputSizePerPacket: %{public}u
%s _configureAudioConverter: _convertAudioCapacity %{public}u bytes
%s Cannot create AudioConverter using AudioConverterNew : %{public}u
%s Cannot set encoder bit rate : %{public}u
%s Get initial state from MediaRemote: media is on playing state %{public}ld.
%s Start monitoring MediaRemote: media playback
%s Stop monitoring MediaRemote: media playback
%s MediaRemote reported the now playing app playback state changed to %s (state %d)
%s Releasing old assertion
%s Acquiring assertion for active user
%s last assertion acquired date is nil. Acquiring asssertion
%s current date: %@, last assertion acquired date: %@, time difference: %f seconds
%s The user is idle beyond the timeout interval. Ignoring acquiring assertion
%s Turn on AP mode since device is hands free state with HS phone-call capable route connected
%s CommandControl Streaming = %{public}d
%s Turn on AP mode since command control is streaming
%s VAD is not present or Hearst routed without phone call
%s VoiceTrigger AOP mode cannot be turned on since builtIn speaker is active
%s AudioRecordContext = %{public}@, recordState = RECORDING
%s CarPlay is connected, we will still run AOP mode
%s VoiceTrigger AOP mode cannot be turned on since Siri client is recording
%s AOP Listening is disabled
%s Turn on AP mode since siri is in attending state
%s Speech Detection VAD is not available, we will still running in AOP mode
%s Will notify Siri Client record state change to STOPPED in %{public}f seconds, eventUUID = %{public}@
%s Notifying Siri Client record state change to STOPPED, eventUUID = %{public}@
%s There is no pending event to timeout : pendingRecordingStopUUID = %{public}@, timeoutTargetUUID = %{public}@
%s Replace deviceId(%{public}@) to nil for VoiceTrigger from Gibraltar.
%s network state notify key : %s
%s Start monitoring : network availability
%s Stop monitoring : network availability
%s Network availability changed
%s xpc object should be XPC_TYPE_DICTIONARY
%s xpcObject key or value is NULL
%s Cannot encode key into xpcobject since the key is not NSString class type
%s Meter Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Meter providing request : %{public}lld
%s setMeteringEnabled : %{public}d
%s audioMeterProvider not existing
%s updateMeters
%s power = %{public}f with powerType %{public}u
CSMicUsageReporter
SpeechModelTrainingProtocol
SpeechModelTrainingClient
CSSpeechModelTrainingXPCManager
CSFallbackAudioSessionReleaseProvidingProxy
CSXPCConnectionDelegate
NSObject
CSPreventSystemSleepPowerAssertion
CSUserIdentityClassifier
AVVC
CSVoiceTriggerStatAggregator
CSDigitalZeroReporting
CSActivationXPCClient
CSSmartSiriVolumeRunPolicyHomePod
CSAttSiriRequestContext
NSSecureCoding
NSCoding
CSSystemUserActivityMonitor
CSAudioSampleRateConverter
CSSpeakerRecognitionAssetMetaUpdateMonitor
CSXPCClientFactory
CSVolumeMonitor
CSFallbackAudioSessionReleaseProvider
CSAudioRecorderDelegate
CSFallbackAudioSessionReleaseProviding
CSAudioTapProvider
CSSpeakerRecognitionAssetDownloadMonitor
CSTrialAssetDownloadMonitorDelegate
CSServerEndpointFeatures
CSVoiceTriggerXPCServiceProxy
CSAttSiriAudioSessionStateClient
AFNotifyObserverDelegate
CSContinuousAudioFingerprintEnabledPolicyHomePod
CSAudioStreamProvidingProxy
CSAudioStreamProvidingDelegate
CSFlexKeywordResult
CSFlexKeywordSpotter
_EARSpeechRecognitionResultStream
CSAttSiriAudioDataReceiver
CSAttSiriAttendingAudioSrcNode
CSAttSiriNode
CSAudioFileLog
CSAudioSessionInfoProvider
CSAudioSessionInfoProviding
CSStateMachine
CSPreMyriadVoiceTriggerMetaData
CSPreMyriadCoordinator
CSVoiceTriggerDelegate
CSSecondPassProgressDelegate
CSBenchmarkXPCProtocol
CSDarwinVoiceTriggerHandlerPool
AttSiri
CSAttSiriCachedEndpointInfo
CSAttSiriEndpointerNodeDelegate
CSAttSiriEndpointerNode
CSEndpointAnalyzerDelegate
CSAttSiriOSDNodeDelegate
CSEndpointerXPCService
CSAudioInjectionFileOption
CSSmartSiriVolumeEnablePolicy
CSAttSiriSSRNodeDelegate
CSAttSiriSSRNode
SSRSpeakerRecognitionControllerDelegate
CSSpeakerRecognitionAssetDownloadMonitorDelegate
CSLanguageCodeUpdateMonitorDelegate
CSSSRXPCService
CSSiriRestrictionOnLockScreenMonitor
MCProfileConnectionObserver
AudioInjectionXPCProtocol
CSPostBuildInstallService
CSContinuousAudioFingerprintEnabledPolicy
CESRXPCActivity
CSAssetControllerFactory
CSVoiceTriggerDataCollector
CSVoiceTriggerAssetHandlerMac
CSVoiceTriggerAssetDownloadMonitorDelegate
CSFirstUnlockMonitorDelegate
CSAttSiriSpeechDetectionNodeDelegate
CSAttSiriSpeechDetectionNode
CSAttSiriAttendingTriggerEventInfo
CSVoiceTriggerSecondChanceContext
CSAudioStartStreamOption
NSCopying
CSCoreSpeechServices
CSVoiceTriggerAssetChangeMonitor
CSAudioServerCrashMonitor
CSAudioServerCrashEventProvidingDelegate
CSXPCClient
CSAudioSessionProviding
CSAudioStreamProviding
CSAudioAlertProviding
CSAudioMeterProviding
CSAudioMetricProviding
CSAudioTimeConversionProviding
CSTriggerInfoProviding
CSOpportuneSpeakListnerTestService
CSOpportuneSpeakListenerDelegate
CSTimerMonitor
CSSiriAudioSession
CSSiriAudioRoute
CSOpportuneSpeakEventMonitor
CSOpportuneSpeakBehaviorMonitorDelegate
CSAttSiriMitigationAssetHandler
CSPhraseSpotterEnabledMonitor
CSVoiceTriggerAssetHandler
CSMyriadNotifier
CSBenchmarkXPCListener
NSXPCListenerDelegate
Liminal
CSLanguageCodeUpdateMonitorImpl
CSMyriadPHash
CSVoiceTriggerXPCListener
CSVoiceTriggerXPCConnectionDelegate
CSCoreSpeechServicesListener
CSCoreSpeechServiceListenerDelegate
CSAudioStreamHolding
CSTUPhoneCallStateMonitor
CSEndpointDelayReporter
SmartSiriVolume
CSAudioInjectionXPCListener
CSHostPowerStateMonitor
CSVoiceTriggerRTModel
CSAudioProvider
CSAudioServerCrashMonitorDelegate
CSAudioPreprocessorDelegate
CSSiriDebugConnection
CSAssetDownloadingOption
CSPowerAssertionMac
CSVoiceTriggerFirstPassHearstAP
CSOpportuneSpeakEventMonitorDelegate
CSHomePodSettingsMonitor
CSVoiceTriggerEnabledPolicyNonAOP
CSNNVADEndpointAnalyzer
CSEndpointAnalyzerImpl
CSEndpointAnalyzer
CSBiometricMatchMonitor
CSSpeechDetectionDevicePresentMonitor
RTModel
CSDefaultAudioRouteChangeMonitorMac
CSGestureMonitor
CSVTSecondPassLatencyMetrics
CSAudioRouteChangeMonitorImpl
debugDescription
remoteVoiceActivityVADBuffer
CSAudioRecorder
AVVoiceControllerRecordDelegate
CSAudioDecoderDelegate
CSAudioFileReaderDelegate
CSRemoteRecordClientDelegate
CSUserSessionActiveMonitorDelegate
CSAudioServerCrashEventProviding
CSAudioSessionEventProviding
CSAudioTandemStream
CSOpportuneSpeakListener
CSSPGEndpointAnalyzerDelegate
XPCObject
CSSiriEnabledMonitor
CSSmartSiriVolumeEnablePolicyHomePod
CSVoiceTriggerAssetHandlerFromFile
CSBluetoothManager
CSJarvisTriggerModeMonitor
CSActivationXPCListener
CSActivateXPCConnectionDelegate
CSModelBenchmarker
CSAudioInjectionEngineDelegate
CSRemoteDeviceProtocolInfo
AudioHardware
Trial
CSAudioSessionInfoProvidingProxy
CSAudioSessionInfoProvidingDelegate
CSSmartSiriVolumeService
CSSmartSiriVolumeServiceDelegate
CSAssetController
CSEventMonitorDelegate
Utils
CSHybridEndpointAnalyzer
CSAssetManagerDelegate
OSDAnalyzerDelegate
8!!!B
RecordContext
CSAdBlockerAssetDecoderV3
CSAudioInjectionXPC
CSActivationEventNotificationHandler
CSSmartSiriVolume
CSMediaPlayingMonitorDelegate
CSSiriClientBehaviorMonitorDelegate
CSSmartSiriVolumeProcessor
isPluginContext
CSAudioInjectionProvider
CSAttSiriStateMonitor
Compression
CSRemoteXPCVoiceTriggerEnabledPolicy
CSListeningEnabledPolicyWatch
CSOtherAppRecordingStateMonitor
CSHostPowerSourceMonitor
CSHangUpEnabledMonitor
LanguageCode
CSAutomaticVolumeEnabledMonitor
CSAudioFileReader
CSEndpointerProxy
CSEndpointAnalyzerImplDelegate
CSAttSiriOSDNode
CSEndpointerAssetManagerDelegate
CSAttSiriSignalDataAggregatorProtocol
CSMyriadSelfTriggerCoordinator
CSSelfTriggerDetectorDelegate
CSEndpointerAssetManager
CESRTrialAssetDelegate
CSAudioInjectionBuiltInEngine
CSSpringboardStartMonitor
SpeakerRecognition
CSActivationEventNotifier
CSMacWakeSleepMonitor
CSAlarmMonitor
CSGestureMonitorPhone
CMWakeGestureDelegate
CSSmartSiriVolumeServiceProxy
CSAttSiriAudioSrcNode
CSPhoneCallStateMonitor
CSFirstUnlockMonitor
CSVoiceTriggerFirstPassMetrics
CSVoiceTriggerEventInfoProvider
CSAudioRecordDeviceInfo
CSCommandControlBehaviorMonitor
CSSmartSiriVolumeRunPolicy
CSSiriLauncher
CSAudioProcessWaitingBuffer
CSAttSiriAsrNode
CoreEmbeddedSpeechRecognizerDelegate
LBLocalSpeechService
CSAttSiriTimer
CSAudioStream
CSVoiceTriggerAssetMetaUpdateMonitor
CSOpportuneSpeakListenerOption
CSAudioPreprocessor
CSVoiceTriggerAwareZeroFilterDelegate
CSBeepCancellerDelegate
CSAccessorySiriClientBehaviorMonitor
CSAudioRouteChangeMonitorImplWatch
CSSpeechEndpointAssetMetaUpdateMonitor
CSAlwaysDisabledPolicy
CSScreenLockMonitor
CSVoiceIdXPCConnection
CSAssetManagerEnablePolicy
CSXPCListener
CSDarkWakePowerAssertionMac
Indexing
CSHybridEndpointer
!2!B
CSVoiceTriggerSecondPassRequestOption
CSAssetManagerEnablePolicyFactory
CSRawAudioInjectionProvider
CSAudioInjectionTvRemoteEngine
CSAudioConverterDelegate
CSVoiceTriggerEnabledMonitor
CSMSNExceptionManager
CSAttSiriRCHandler
CSRCHandlingXPCService
CSSmartSiriVolumeEstimate
CSAlwaysOnProcessorStateMonitor
CSAttSiriAFTMNodeDelegate
CSAttSiriAFTMNode
SLProgressiveCheckerAnalyzerDelegate
CSBluetoothWirelessSplitterMonitorImpIOS
CSAttSiriMotionNode
CSVoiceTriggerEnabledPolicyMacWithRemoteDarwin
NSXPC
CSAudioTimeConversionProvidingProxy
CSSuddenTerminationProtector
CSP2PService
CSAudioRecorderFactory
CoreSpeechXPCProtocol
CSContinuousAudioFingerprintEnabledPolicyFactory
CSAttSiriController
CSSiriEnabledMonitorDelegate
CSAttSiriFlexKwdNodeDelegate
CSAttSiriServiceDelegate
CSAttSiriServiceProtocol
CSAssetManager
CSVoiceTriggerAssetMetaUpdateMonitorDelegate
CSSpeechEndpointAssetMetaUpdateMonitorDelegate
CSAdBlockerMetaUpdateMonitorDelegate
CSAssetControllerDelegate
CSSpeakerRecognitionAssetMetaUpdateMonitorDelegate
CSXPCActivity
CSHostLauncherDarwin
AudioDevice
CSVoiceTriggerAwareZeroFilter
CSSPGEndpointAnalyzer
EARCaesuraSilencePosteriorGeneratorDelegate
CSBluetoothWirelessSplitterMonitorImplDarwin
CSVoiceTriggerEventsCoordinator
CSAudioMetricProvidingProxy
CSActivationXPCConnection
CSBluetoothDeviceInfo
RMSSample
CSShadowMicScoreCreator
CSSiriClientBehaviorMonitor
CSLanguageCodeUpdateMonitor
CSAttSiriNLDAClassifierDelegate
CSAttSiriNLDAClassifierNode
CSAudioInjectionHearstEngine
CSAVVCRecordingClientMonitor
CSSelfTriggerEnabledMonitorAccessory
CSEventMonitor
CSActivationEvent
CSAudioStreamRequest
CSVoiceTriggerAssetDownloadMonitor
FlexKwd
CSAudioSessionMonitor
CSAudioSessionEventProvidingDelegate
CSSmartSiriVolumeUserIntent
CSPhoneCallStateMonitorFactory
CSGestureDropEvent
CSAudioInjectionDevice
CSEndpointerMetrics
CSOpportuneSpeakListenerDeviceManager
CSVoiceTriggerEnabledPolicyHelper
CSSmartSiriVolumeRunPolicyFactory
CSSmartSiriVolumeManager
CSAlarmMonitorDelegate
CSTimerMonitorDelegate
CSVolumeMonitorDelegate
CSAutomaticVolumeEnabledMonitorDelegate
CSContinuousAudioFingerprintProvider
CSAttSiriUresNodeDelegate
CSAttSiriUresNode
CSAttSiriAttentionNodeDelegate
CSBluetoothWirelessSplitterInfo
CSAdBlockerAssetDownloadMonitor
CSVoiceIdXPCListener
CSSpeechManager
CSVoiceTriggerAssetHandlerDelegate
CSActivationEventNotificationHandlerDelegate
CSAudioProviderDelegate
CSVoiceIdXPCClient
CSOpportuneSpeakBehaviorMonitor
CSAttSiriAttentionNode
Statistics
CSXPCConnection
CSEndpointerXPCServiceDelegate
LBLocalSpeechServiceDelegate
CSSSRXPCServiceDelegate
CSAttSiriConnectionManager
CSHostDaemon
CSEndpointLoggingHelper
CSEndpointLatencyInfo
AudioFile
CSCoreSpeechDaemonStateMonitor
CSBuiltinSpeakerStateMonitor
CSRemoteRecordClient
CSVoiceTriggerAssetHandlerDarwin
CSRemoteAssetManagerDelegate
CSConnectionListener
CSConnectionServiceDelegate
CSCoreSpeechDKeepAliveHandler
CSLanguageCodeUpdateMonitorImplDarwin
CSSiriAssertionMonitor
CSAudioSessionProvidingProxy
CSAudioSessionProvidingDelegate
CSBluetoothWirelessSplitterMonitor
CSUserSessionActiveMonitor
CSAudioInjectionRemoraEngine
CSAsset
CSCommandControlStreamEventMonitor
CSCommandControlBehaviorMonitorDelegate
CSTrialAssetManager
CSRemoteDarwinDeviceInfo
CSAudioAlertProvidingProxy
CSAudioAlertProvidingDelegate
CSAVCallConnectedMonitor
CSVoiceTriggerXPCConnection
CSAttSiriFlexKwdNode
CSFlexKeywordSpotterDelegate
CSVoiceProfileRetrainManager
CSSmartSiriVolumeEnablePolicyFactory
Bitset
CSAudioRouteChangeMonitor
CSAlertBehaviorPredictor
CSAudioDeviceInfo
CSManualDuckingHandler
machXPC
CSAudioInjectionEngineFactory
CSAdBlockerAssetMetaUpdateMonitor
CSAdBlockerAssetDecoderFactory
CSAdBlockerAssetDecoderV2
CSPhraseNDEAPIScorer
CSKeywordAnalyzerNDEAPIScoreDelegate
CSAudioInjectionEngine
CSSoftwareUpdateCheckingMonitor
CSCXPhoneCallStateMonitor
CSAudioConverter
CSMediaPlayingMonitor
CSAdBlockerAssetDecoderV1
CSBatteryMonitor
CSEndpointerSettings
CSDarwinPreventSystemSleepManager
CSVoiceTriggerAOPModeEnabledPolicyIOS
CSAudioRecordDeviceIndicator
CSTrialAssetDownloadMonitor
CSAVVoiceTriggerClientManager
CSVoiceTriggerAOPModeEnabledPolicyFactory
CSNetworkAvailabilityMonitor
CSAudioMeterProvidingProxy
@16@0:8
v20@0:8B16
v32@0:8Q16@24
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
v32@0:8@16@?24
v48@0:8@16@24B32B36@?40
v36@0:8@16B24@?28
v40@0:8@16@24@?32
v96@0:8@16@24@32@40Q48@56@64@72@80@?88
v32@0:8@"NSString"16@?<v@?@"NSString">24
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSDictionary"@"NSError">28
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v96@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSString"40Q48@"NSArray"56@"NSString"64@"NSString"72@"NSArray"80@?<v@?@"NSArray"@"NSError">88
@24@0:8@16
@24@0:8@?16
v56@0:8@16@24@32@40@?48
v60@0:8@16@24@32B40@44@?52
v52@0:8@16@24B32@36@?44
@"NSXPCConnection"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v40@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v40@0:8@"CSXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v44@0:8@16@24B32@36
@"CSXPCConnection"
@24@0:8d16
v48@0:8^{__CFString=}16d24^I32^{__CFString=}40
v32@0:8^I16^{__CFString=}24
Q40@0:8@16@24@32
@24@0:8Q16
q24@0:8q16
v20@0:8f16
v32@0:8i16@20B28
v28@0:8B16@20
v32@0:8Q16Q24
v24@0:8Q16
@"NSMutableDictionary"
@"NSObject<OS_xpc_object>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
q16@0:8
i16@0:8
v20@0:8i16
v24@0:8q16
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
r*16@0:8
f16@0:8
v24@0:8@?16
v68@0:8@16Q24@32@40Q48Q56i64
v40@0:8@16Q24@32
v44@0:8@16Q24B32@36
v40@0:8@16Q24q32
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@24
v28@0:8@16B24
v68@0:8@"CSAudioRecorder"16Q24@"NSData"32@"NSData"40Q48Q56i64
v40@0:8@"CSAudioRecorder"16Q24@"CSAudioChunkForTV"32
v44@0:8@"CSAudioRecorder"16Q24B32@"NSError"36
v40@0:8@"CSAudioRecorder"16Q24q32
v32@0:8@"CSAudioRecorder"16q24
v40@0:8@"CSAudioRecorder"16q24@"NSError"32
v24@0:8@"CSAudioRecorder"16
v32@0:8@"CSAudioRecorder"16@"NSDictionary"24
v28@0:8@"CSAudioRecorder"16B24
v24@0:8@"NSDictionary"16
v32@0:8@"CSAudioRecorder"16@"NSError"24
B32@0:8Q16^@24
@"CSAudioRecorder"
v36@0:8@16B24Q28
@"CSTrialAssetDownloadMonitor"
@72@0:8q16q24d32@40d48@56q64
@64@0:8q16q24d32@40d48@56
d16@0:8
v24@0:8d16
@"NSArray"
@"NSString"
v36@0:8B16@20d28
v28@0:8B16d20
@"NSMutableSet"
@"NSHashTable"
@"CSSiriAssertionMonitor"
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
@"<CSAttSiriSessionStateDelegate>"
@"AFNotifyObserver"
v32@0:8@"<CSAudioStreamProviding>"16q24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunk"24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunkForTV"24
@"<CSAudioStreamProviding>"
@"<CSTriggerInfoProviding>"
@"CSAudioStream"
@"CSAudioRecordContext"
@44@0:8@16f24q28q36
v48@0:8@16@24@32@40
v32@0:8@16d24
v72@0:8@16q24q32d40@48d56q64
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResult"24
v32@0:8@"_EARSpeechRecognizer"16@"NSError"24
v32@0:8@"_EARSpeechRecognizer"16@"NSArray"24
v48@0:8@"_EARSpeechRecognizer"16@"NSArray"24@"NSArray"32@"NSArray"40
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognitionResultPackage"24
v32@0:8@"_EARSpeechRecognizer"16d24
v32@0:8@"_EARSpeechRecognizer"16@"_EARSpeechRecognition"24
v72@0:8@"_EARSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v40@0:8@"_EARSpeechRecognizer"16Q24@"NSDictionary"32
@"<CSFlexKeywordSpotterDelegate>"
@"_EARSpeechRecognizer"
@"_EARSpeechRecognitionAudioBuffer"
@"NSDictionary"
@"CSAsset"
v36@0:8@16B24@28
v36@0:8@"<CSAttSiriNode>"16B24@"NSError"28
v32@0:8@"<CSAttSiriNode>"16@"CSAudioChunk"24
v24@0:8@"<CSAttSiriNode>"16
@24@0:8@"CSAttSiriController"16
@"CSAttSiriController"16@0:8
v24@0:8@"CSAttSiriController"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"NSString"16
@"CSAsset"16@0:8
v24@0:8@"CSAsset"16
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@"CSAttSiriController"
@"CSSpeechManager"
@"CSAudioStreamHolding"
@32@0:8@16@24
^{OpaqueExtAudioFile=}
@"NSURL"
I24@0:8@16
v24@0:8@"<CSAudioSessionInfoProvidingDelegate>"16
I24@0:8@"NSString"16
@24@0:8q16
v40@0:8q16q24q32
v32@0:8q16q24
@"<CSStateMachineDelegate>"
v60@0:8@16@24Q32@40B48@?52
v32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?>32
v24@0:8@"NSData"16
v60@0:8@"NSDictionary"16@"NSData"24Q32@"NSString"40B48@?<v@?>52
v40@0:8Q16@24d32
v40@0:8Q16@"NSString"24d32
v32@0:8Q16@"NSString"24
@?16@0:8
@"<CSVoiceTriggerDelegate>"
@"<CSSecondPassProgressProviding>"
@"CSPreMyriadVoiceTriggerMetaData"
v48@0:8@16@24@32@?40
v48@0:8@"NSString"16@"NSString"24@"NSURL"32@?<v@?@"NSError"dq>40
v48@0:8@"NSString"16@"NSURL"24@"NSString"32@?<v@?@"NSError"dq>40
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError"dq>32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSURL"16@?<v@?@"NSError"dq>24
@"CSEndpointerMetrics"
v40@0:8@16d24@32
v40@0:8@"<CSAttSiriNode>"16d24@"CSEndpointerMetrics"32
v32@0:8@"<CSAttSiriNode>"16d24
v32@0:8@"<CSEndpointAnalyzer>"16d24
v40@0:8@"<CSEndpointAnalyzer>"16d24@"CSEndpointerMetrics"32
v40@0:8@16@24d32
v48@0:8@16@24Q32Q40
v44@0:8@16Q24Q32B40
v40@0:8@"<CSAttSiriNode>"16@"OSDFeatures"24d32
v48@0:8@"<CSAttSiriNode>"16@"NSDate"24Q32Q40
v44@0:8@"<CSAttSiriNode>"16Q24Q32B40
v72@0:8q16q24d32@40d48@56q64
v32@0:8d16@?24
v72@0:8q16q24d32@"NSArray"40d48@"NSString"56q64
v24@0:8@?<v@?@"NSError"@"NSString">16
v32@0:8d16@?<v@?B@"NSArray">24
v24@0:8@?<v@?@"NSError"d>16
v24@0:8@?<v@?@"NSError"Q>16
v48@0:8Q16@24@32@40
v76@0:8q16q24d32@40d48@56q64B72
v32@0:8d16@24
@"CSConnectionListener"
@"CSEndpointerProxy"
@"CSEndpointLatencyInfo"
@"CSAttSiriCachedEndpointInfo"
@68@0:8@16f24{AudioStreamBasicDescription=dIIIIIIII}28
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
^{OpaqueExtAudioFile=}16@0:8
v24@0:8^{OpaqueExtAudioFile=}16
v32@0:8@"<CSAttSiriNode>"16@"NSDictionary"24
v32@0:8@"SSRSpeakerRecognitionController"16@"NSDictionary"24
v32@0:8@16@"NSString"24
v44@0:8@16f24f28d32B40
@"SSRSpeakerRecognitionController"
@"SSRVoiceProfileManager"
@"SSRVoiceProfile"
@"<CSAudioFileWriter>"
@"NSSet"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v56@0:8q16@24@32@40@?48
v44@0:8@16@24f32@?36
v48@0:8@16@24f32i36@?40
v56@0:8q16@"NSString"24@"NSString"32@"NSString"40@?<v@?B@"NSError"@"NSUUID">48
v44@0:8@"NSURL"16@"NSUUID"24f32@?<v@?B@"NSError"QQ>36
v48@0:8@"NSURL"16@"NSUUID"24f32i36@?<v@?B@"NSError"QQ>40
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError"@"NSUUID">16
v28@0:8@"CSFirstUnlockMonitor"16B24
@64@0:8@16@24@32@40@48@56
@"CSVoiceTriggerAssetDownloadMonitor"
@"CSLanguageCodeUpdateMonitor"
@"CSFirstUnlockMonitor"
@"CSAssetManager"
@"CSTrialAssetManager"
v32@0:8@"<CSAttSiriNode>"16@"CSAttSiriAttendingTriggerEventInfo"24
@"CSAttSiriOSDNode"
@"CSAttSiriRequestContext"
I16@0:8
v20@0:8I16
v64@0:8Q16Q24q32@40@48@?56
v72@0:8Q16Q24q32@40@48@56@?64
v56@0:8Q16Q24@32@40@?48
@"<CSVoiceTriggerAssetChangeDelegate>"
v32@0:8@16Q24
@"AVVoiceTriggerClient"
B24@0:8^@16
B48@0:8Q16Q24@32^@40
v24@0:8@"<CSAudioSessionProvidingDelegate>"16
B48@0:8Q16Q24@"NSString"32^@40
B32@0:8@16^@24
@40@0:8@16@24^@32
B40@0:8@16@24^@32
@32@0:8Q16Q24
@40@0:8Q16Q24Q32
v40@0:8Q16Q24@32
@32@0:8@16d24
v28@0:8B16Q20
B32@0:8@"CSAudioRecordContext"16^@24
@"CSAudioStream"40@0:8@"CSAudioStreamRequest"16@"NSString"24^@32
v40@0:8@"CSAudioStreamRequest"16@"NSString"24@?<v@?@"CSAudioStream"@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStream"24@?<v@?B@"NSError">32
B40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24^@32
v40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStartStreamOption"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStopStreamOption"24@?<v@?B@"NSError">32
@"CSAudioChunk"32@0:8Q16Q24
@"CSAudioChunk"40@0:8Q16Q24Q32
@"CSAudioChunk"24@0:8Q16
v40@0:8Q16Q24@"NSURL"32
v32@0:8Q16@"NSURL"24
@"CSAudioStreamHolding"32@0:8@"NSString"16d24
v24@0:8@"CSAudioStreamHolding"16
@"CSAudioRecordDeviceInfo"16@0:8
@"CSAudioDeviceInfo"16@0:8
@"NSDictionary"16@0:8
B36@0:8@16q24B32
B24@0:8q16
v24@0:8@"<CSAudioAlertProvidingDelegate>"16
B36@0:8@"NSURL"16q24B32
f24@0:8Q16
Q24@0:8Q16
v32@0:8@"CSAudioRecordContext"16@?<v@?@"NSDictionary"@"NSDictionary">24
B40@0:8@16Q24^@32
@"<CSAudioSessionProvidingDelegate>"
@"<CSAudioStreamProvidingDelegate>"
@"<CSAudioAlertProvidingDelegate>"
@"<CSXPCClientDelegate>"
v32@0:8@16B24f28
v28@0:8@"CSOpportuneSpeakListener"16B24
v32@0:8@"CSOpportuneSpeakListener"16B24f28
@"CSOpportuneSpeakListener"
@"CSSiriAudioRoute"
@20@0:8I16
v52@0:8@16@24@32B40@44
v48@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioRecordContext"24@"NSString"32@"CSAudioStartStreamOption"40
v52@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioRecordContext"24@"NSString"32B40@"CSAudioStartStreamOption"44
v32@0:8@"CSOpportuneSpeakBehaviorMonitor"16@"CSAudioStopStreamOption"24
@"NSUUID"
@60@0:8@16@24@32@40B48@52
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"CSModelBenchmarker"
Q24@0:8@16
@28@0:8Q16B24
@28@0:8@16B24
S28@0:8^f16i24
s16@0:8
v20@0:8s16
C16@0:8
v20@0:8C16
v40@0:8@"CSVoiceTriggerXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
@"NSMutableArray"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv40@0:8@16q24@?32
Vv24@0:8@?<v@?@"NSString">16
Vv32@0:8@"NSString"16@?<v@?@"NSString">24
Vv40@0:8@"NSArray"16q24@?<v@?@"NSError">32
Vv24@0:8@?<v@?Q>16
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?q>16
@"CSGibraltarVoiceTriggerHandler"
@"CSAudioInjectionXPC"
@"NSData"
v24@0:8@"CSAudioServerCrashMonitor"16
v52@0:8@16@24Q32Q40i48
v52@0:8@"CSAudioPreprocessor"16@"NSData"24Q32Q40i48
@56@0:8Q16q24@32@40@48
@48@0:8Q16q24@32@40
v40@0:8@16@24Q32
B32@0:8Q16q24
@"<CSAudioProviderDelegate>"
@"CSAudioCircularBuffer"
@"CSAudioPreprocessor"
@"CSOSTransaction"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_source>"
@"CSAudioTimeConverter"
@"CSAudioRecordDeviceIndicator"
@"CSMicUsageReporter"
@"CSADPPreventStandbyAssertion"
@"CSPhoneCallStateMonitor"
v28@0:8@"CSOpportuneSpeakEventMonitor"16B24
v36@0:8Q16Q24B32
v32@0:8Q16@"CSAudioRecordContext"24
v24@0:8@"CSAudioChunk"16
@"<CSEndpointAnalyzerDelegate>"16@0:8
v24@0:8@"<CSEndpointAnalyzerDelegate>"16
@"<CSEndpointAnalyzerImplDelegate>"16@0:8
v24@0:8@"<CSEndpointAnalyzerImplDelegate>"16
v24@0:8@"CSServerEndpointFeatures"16
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"OSDFeatures"16d24
v32@0:8@"NSDate"16Q24
v28@0:8@"CSServerEndpointFeatures"16B24
@"<CSEndpointAnalyzerDelegate>"
@"<CSEndpointAnalyzerImplDelegate>"
B32@0:8^B16^Q24
@"<CSBiometricMatchMonitorDelegate>"
@48@0:8q16Q24Q32@40
@40@0:8Q16Q24@32
v36@0:8@16i24d28
v36@0:8@16i24@28
v28@0:8@"AVVoiceController"16B24
v36@0:8@"AVVoiceController"16B24@"NSError"28
v32@0:8@"AVVoiceController"16q24
v24@0:8@"AVVoiceController"16
v28@0:8@"AVVoiceController"16i24
v36@0:8@"AVVoiceController"16i24d28
v32@0:8@"AVVoiceController"16@"NSError"24
v36@0:8@"AVVoiceController"16i24@"NSError"28
v40@0:8@"AVVoiceController"16@"AVVCAlertInformation"24@"NSError"32
v32@0:8@"AVVoiceController"16@"NSDictionary"24
v32@0:8@"AVVoiceController"16@"AVVCAudioBuffer"24
v28@0:8B16@"NSArray"20
v44@0:8@"AVVoiceController"16Q24B32@"NSError"36
v40@0:8@"AVVoiceController"16Q24q32
v40@0:8@"AVVoiceController"16Q24@"AVVCAudioBuffer"32
v32@0:8@"AVVoiceController"16Q24
v72@0:8@16Q24@32@40Q48Q56B64I68
v72@0:8@"CSAudioDecoder"16Q24@"NSData"32@"NSData"40Q48Q56B64I68
v40@0:8@"CSAudioFileReader"16@"NSData"24Q32
v36@0:8@"CSAudioFileReader"16B24@"NSError"28
v32@0:8@"CSAudioFileReader"16q24
v32@0:8Q16@"NSError"24
v32@0:8@"NSData"16Q24
v24@0:8@"CSRemoteRecordClient"16
v28@0:8@"CSUserSessionActiveMonitor"16B24
v24@0:8@"<CSAudioServerCrashEventProvidingDelegate>"16
v24@0:8@"<CSAudioSessionEventProvidingDelegate>"16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8Q16@24
B24@0:8Q16
B40@0:8q16Q24^@32
B40@0:8Q16Q24^@32
v28@0:8Q16B24
v40@0:8Q16B24@28B36
v60@0:8@16Q24@32Q40Q48i56
@28@0:8@16I24
B32@0:8q16@24
v36@0:8B16Q20@28
v32@0:8q16Q24
@32@0:8@16Q24
@"AVVoiceController"
{AudioBufferList="mNumberBuffers"I"mBuffers"[1{AudioBuffer="mNumberChannels"I"mDataByteSize"I"mData"^v}]}
^{AudioBufferList=I[1{AudioBuffer=II^v}]}
@"CSRemoteRecordClient"
@"CSAudioFileReader"
@"CSReusableBufferPool"
@"<CSAudioServerCrashEventProvidingDelegate>"
@"<CSAudioSessionEventProvidingDelegate>"
v36@0:8@16d24f32
v36@0:8@"CSSPGEndpointAnalyzer"16d24f32
v24@0:8@"CSSPGEndpointAnalyzer"16
v28@0:8B16@?20
@"<CSOpportuneSpeakListenerDelegate>"
@"CSSPGEndpointAnalyzer"
@"<CSAudioSessionProviding>"
@"CSPlainAudioFileWriter"
@24@0:8^{BTLocalDeviceImpl=}16
@24@0:8^{BTDeviceImpl=}16
v40@0:8^{BTDeviceImpl=}16I24i28I32i36
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
v24@0:8^{BTLocalDeviceImpl=}16
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
v40@0:8@"CSActivationXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v56@0:8@16Q24@32@40Q48
v44@0:8@"CSAudioInjectionEngine"16Q24B32@"NSError"36
v40@0:8@"CSAudioInjectionEngine"16Q24Q32
v56@0:8@"CSAudioInjectionEngine"16Q24@"NSData"32@"NSData"40Q48
v32@0:8@"CSAudioInjectionEngine"16@"CSAudioChunkForTV"24
@"CSSyncKeywordAnalyzerQuasar"
@"EARSyncPSRAudioProcessor"
@"OSDAnalyzer"
@"SLBertClassifier"
@"CSAudioInjectionEngine"
@56@0:8Q16@24@32@40Q48
v32@0:8Q16@?24
v32@0:8@"<CSAudioSessionInfoProviding>"16@"NSDictionary"24
@"<CSAudioSessionInfoProviding>"
v40@0:8Q16@24@?32
v40@0:8Q16@"NSDictionary"24@?<v@?@"NSError"@"CSSmartSiriVolumeEstimate">32
v48@0:8Q16@24Q32@?40
v48@0:8Q16@24@32@?40
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
@40@0:8@16Q24@32
v32@0:8^@16Q24
v24@0:8@"CSAssetManager"16
v32@0:8@"OSDAnalyzer"16@"OSDFeatures"24
v32@0:8@"OSDAnalyzer"16d24
v72@0:8d16Q24@32d40Q48d56@64
@"OSDFeatures"
@"_EAREndpointer"
@"CSServerEndpointFeatures"
@"NSDate"
{AudioStreamBasicDescription=dIIIIIIII}20@0:8i16
@"NSMapTable"
@"CSActivationEvent"
v32@0:8@"CSMediaPlayingMonitor"16q24
v52@0:8@16@24B32@36@44
v44@0:8@16B24@28@36
v36@0:8@16@24B32
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v52@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36@"NSString"44
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStopStreamOption"24Q32
v40@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStopStreamOption"24@"NSString"32
v44@0:8@"CSSiriClientBehaviorMonitor"16B24@"NSString"28@"CSAudioRecordContext"36
v36@0:8@"CSSiriClientBehaviorMonitor"16@"CSAudioStream"24B32
v24@0:8@"CSSiriClientBehaviorMonitor"16
@28@0:8f16@20
@40@0:8Q16@24Q32
@28@0:8f16@"CSAsset"20
@"CSSmartSiriVolumeEstimate"40@0:8Q16@"NSNumber"24Q32
v28@0:8I16q20
v52@0:8@16q24B32Q36Q44
f24@0:8q16
f24@0:8f16f20
f20@0:8f16
f36@0:8f16f20f24f28f32
f44@0:8f16f20f24f28f32f36f40
f28@0:8f16f20f24
^f24@0:8@16
{unique_ptr<SmartSiriVolume, std::default_delete<SmartSiriVolume>>="__ptr_"{__compressed_pair<SmartSiriVolume *, std::default_delete<SmartSiriVolume>>="__value_"^{SmartSiriVolume}}}
{vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}
@"NSUserDefaults"
@"CSPolicy"
@"CSAudioInjectionDevice"
v48@0:8@16@24@32^v40
B24@0:8d16
@"<CSAudioFileReaderDelegate>"
v32@0:8@"<CSEndpointAnalyzerImpl>"16d24
v40@0:8@"<CSEndpointAnalyzerImpl>"16Q24Q32
@"<CSEndpointAnalyzerImpl>"
B32@0:8Q16Q24
v48@0:8@16@24@32Q40
v32@0:8@"CSSelfTriggerDetector"16@"NSDictionary"24
@"<CSMyriadSelfTriggerCoordinatorDelegate>"
B44@0:8@16f24@?28@?36
q24@0:8@16
@"<CSAudioInjectionEngineDelegate>"
@"CSKeywordAnalyzerNDEAPI"
v40@0:8@16q24Q32
v48@0:8@16q24q32Q40
v36@0:8@16q24i32
v44@0:8@16q24i32Q36
v32@0:8@"CMWakeGestureManager"16q24
v40@0:8@"CMWakeGestureManager"16q24Q32
v48@0:8@"CMWakeGestureManager"16q24q32Q40
v36@0:8@"CMWakeGestureManager"16q24i32
v44@0:8@"CMWakeGestureManager"16q24i32Q36
@"CMWakeGestureManager"
@"CSSmartSiriVolumeManager"
@"NSNumber"
v48@0:8@16@24^@32^@40
@44@0:8@16B24@28@36
@52@0:8@16B24@28@36@44
v40@0:8q16Q24@32
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"CESRModelProperties"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSArray"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16d24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechRecognition"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechPackage"24
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSDictionary"24@"NSError"32
v72@0:8@"CoreEmbeddedSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSArray"24@"AFSpeechInfoPackage"32
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechPackage"24@"AFSpeechInfoPackage"32
Vv32@0:8@16Q24
Vv24@0:8@16
Vv32@0:8Q16@24
Vv48@0:8@16@24@32@40
Vv32@0:8@16@24
Vv32@0:8@"NSString"16Q24
Vv24@0:8@"LBLocalSpeechRecognitionSettings"16
Vv32@0:8Q16@"NSString"24
Vv24@0:8@"NSString"16
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
@36@0:8@16@24B32
v36@0:8@16Q24B32
v40@0:8d16@24Q32
v52@0:8@16Q24d32B40@44
v48@0:8@16@24Q32@40
d24@0:8@16
@"CSAttSiriEndpointerNode"
@"CSAttSiriUresNode"
@"CSAttSiriSSRNode"
@"CoreEmbeddedSpeechRecognizer"
@"CSAudioProcessWaitingBuffer"
@"LBLocalSpeechRecognitionSettings"
@"CSEndpointDelayReporter"
@"CSAudioStreamRequest"
@"CSAudioStartStreamOption"
v40@0:8@"CSVoiceTriggerAwareZeroFilter"16@"NSData"24Q32
v40@0:8@"CSBeepCanceller"16@"NSData"24Q32
@24@0:8f16i20
v32@0:8f16B20@24
B20@0:8f16
@"<CSAudioPreprocessorDelegate>"
@"CSAudioSampleRateConverter"
@"CSVoiceTriggerAwareZeroFilter"
@"CSBeepCanceller"
@"CSAudioZeroCounter"
v52@0:8@16B24@28@36@44
v48@0:8@16Q24@32@40
v44@0:8B16@20@28@36
@68@0:8Q16@24@32@40@48B56@60
@"CSVoiceTriggerFirstPassMetrics"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
v52@0:8@16@24f32Q36Q44
v52@0:8@"CSAudioConverter"16@"NSArray"24f32Q36Q44
@"CSAudioConverter"
v68@0:8Q16d24d32d40@48B56@?60
v68@0:8Q16d24d32d40@"NSString"48B56@?<v@?BB@"NSArray">60
v32@0:8Q16@?<v@?B>24
v40@0:8@16B24f28@32
v40@0:8@"<CSAttSiriNode>"16B24f28@"NSString"32
v32@0:8@"SLProgressiveCheckerAnalyzer"16@"SLProgressiveCheckerResult"24
B20@0:8B16
v28@0:8f16Q20
@"SLProgressiveCheckerAnalyzer"
@"SLProgressiveCheckerResult"
v44@0:8@16@24B32@?36
v72@0:8@16@24@32B40Q44@52B60@64
@80@0:8@16@24@32B40Q44@52B60@64@?72
@"<CSADCompanionServiceProvider>"
v80@0:8Q16Q24q32@40@48@56@64@?72
v64@0:8Q16Q24@32@40@48@?56
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v80@0:8Q16Q24q32@"NSString"40@"NSUUID"48@"NSArray"56@"NSArray"64@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">72
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v28@0:8@"CSSiriEnabledMonitor"16B24
v24@0:8@"CSAttSiriAttendingTriggerEventInfo"16
v24@0:8@"CSAttSiriRequestContext"16
@132@0:8@16@24@32@40@48@56B64@68@76@84@92@100@108B116B120B124B128
@"CSAttSiriRCHandler"
@"CSAttSiriAsrNode"
@"CSAttSiriAudioSrcNode"
@"CSSiriClientBehaviorMonitor"
@"CSSiriEnabledMonitor"
@"CSAttSiriFlexKwdNode"
@"CSAttSiriAFTMNode"
@"CSAttSiriNLDAClassifierNode"
@"CSAttSiriSpeechDetectionNode"
@"CSAudioRouteChangeMonitor"
v32@0:8@"CSAssetController"16Q24
v48@0:8Q16Q24@32@?40
@"CSAssetDownloadingOption"
^{__IOHIDUserDevice=}
@"<CSVoiceTriggerAwareZeroFilterDelegate>"
@"CSAudioZeroFilter"
v36@0:8^f16Q24f32
v24@0:8@"EARClientSilenceFeatures"16
@20@0:8f16
@"<CSSPGEndpointAnalyzerDelegate>"
@"EARCaesuraSilencePosteriorGenerator"
@"<CSAudioMetricProviding>"
@"<CSActivateXPCConnectionDelegate>"
@32@0:8d16Q24
d24@0:8[80s]16
@"NSMutableData"
v36@0:8@16f24@28
v36@0:8@"<CSAttSiriNode>"16f24@"NSDictionary"28
v36@0:8@16f24f28B32
@"SLODLDProcessor"
@"SLBertClassifierResult"
@"CSKeywordAnalyzerNDAPI"
@40@0:8@16@24Q32
@36@0:8@16f24Q28
@52@0:8Q16@24@32f40Q44
@48@0:8Q16@24@32Q40
d20@0:8f16
@40@0:8d16d24d32
@48@0:8q16@24@32@40
B84@0:8@16f24{AudioStreamBasicDescription=dIIIIIIII}28@?68@?76
@72@0:8d16Q24@32q40@48@56d64
v32@0:8@"CSAlarmMonitor"16q24
v32@0:8@"CSTimerMonitor"16q24
v28@0:8@16f24
v28@0:8@"CSVolumeMonitor"16f24
v28@0:8@"CSAutomaticVolumeEnabledMonitor"16B24
@"<CSConnectionServiceDelegate>"
@"<CSSmartSiriVolumeProcessor>"
v28@0:8@"<CSAttSiriNode>"16f24
v32@0:8@"<CSAttSiriNode>"16Q24
v32@0:8f16f20@24
B32@0:8Q16@24
v48@0:8@16Q24@32@?40
v56@0:8Q16d24d32@40@?48
@"SLUresMitigator"
@"SLUresMitigatorIpFeats"
v40@0:8@"CSVoiceTriggerAssetHandler"16@"NSString"24@"CSAsset"32
v40@0:8@"CSActivationEventNotificationHandler"16@"CSActivationEvent"24@?<v@?B@"NSError">32
v32@0:8@"CSAudioProvider"16Q24
@"CSAudioTapProvider"
@"CSFallbackAudioSessionReleaseProvider"
@"<CSSpeechManagerDelegate>"
@"CSOpportuneSpeakListnerTestService"
@"CSPostBuildInstallService"
v64@0:8@16@24@32@40@48@?56
B32@0:8@16Q24
@"<CSXPCConnectionDelegate>"
@"CSAudioSessionProvidingProxy"
@"CSFallbackAudioSessionReleaseProvidingProxy"
@"CSAudioSessionInfoProvidingProxy"
@"CSAudioStreamProvidingProxy"
@"CSAudioAlertProvidingProxy"
@"CSAudioMeterProvidingProxy"
@"CSAudioMetricProvidingProxy"
v32@0:8d16@"CSEndpointerMetrics"24
Vv40@0:8@16@24@32
Vv48@0:8@16Q24@32d40
Vv48@0:8@16Q24B32B36@40
Vv48@0:8@16@24q32@40
Vv56@0:8@16Q24@32d40@48
Vv40@0:8@"NSString"16@"NSString"24@"NSArray"32
Vv32@0:8@"NSString"16@"AFSpeechPackage"24
Vv48@0:8@"NSString"16Q24@"AFSpeechPackage"32d40
Vv48@0:8@"NSString"16Q24B32B36@"NSArray"40
Vv48@0:8@"NSDictionary"16@"NSString"24q32@"NSError"40
Vv24@0:8@"AFVoiceIdScoreCard"16
Vv48@0:8@"NSString"16@"NSString"24@"NSArray"32@"AFSpeechInfoPackage"40
Vv56@0:8@"NSString"16Q24@"AFSpeechPackage"32d40@"AFSpeechInfoPackage"48
Vv40@0:8@"NSString"16@"AFSpeechPackage"24@"AFSpeechInfoPackage"32
@36@0:8@16B24B28B32
@"CSXPCListener"
@"CSActivationXPCListener"
@"CSVoiceIdXPCListener"
@"CSVoiceTriggerXPCListener"
@"CSAudioInjectionXPCListener"
@"CSAttSiriConnectionManager"
@"CSCoreSpeechServicesListener"
@"CSSpeechModelTrainingXPCManager"
@"CSBenchmarkXPCListener"
@"CSDarwinVoiceTriggerHandlerPool"
@"CESRXPCActivity"
@"CSXPCActivity"
v40@0:8Q16Q24Q32
B32@0:8@16@?24
B32@0:8d16^@24
@"<CSRemoteRecordClientDelegate>"
v24@0:8@"CSRemoteAssetManager"16
v24@0:8@?<v@?@>16
@56@0:8@16@24@32@40@48
@"NSXPCInterface"
v24@0:8@"<CSAudioSessionProviding>"16
v32@0:8@"<CSAudioSessionProviding>"16@"NSDictionary"24
v28@0:8@"<CSAudioSessionProviding>"16B24
@"CSManualDuckingHandler"
v40@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v44@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36
v32@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioStopStreamOption"24
v40@0:8@"<CSAudioAlertProviding>"16q24@"NSError"32
v36@0:8B16@20@28
@"<CSAudioAlertProviding>"
@"<CSVoiceTriggerXPCConnectionDelegate>"
v24@0:8@"CSFlexKeywordResult"16
@"CSFlexKeywordSpotter"
I24@0:8Q16
@"CSAudioRecordDeviceInfo"
v24@0:8f16f20
v28@0:8I16f20f24
@32@0:8q16Q24
v40@0:8@"CSKeywordAnalyzerNDEAPI"16@"CSKeywordAnalyzerNDEAPIResult"24Q32
@60@0:8@16@24Q32Q40@48B56
@"<CSPhraseNDEAPIScorerDelegate>"
@"CSShadowMicScoreCreator"
@28@0:8Q16I24
@24@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16
^{OpaqueAudioConverter=}16@0:8
v24@0:8^{OpaqueAudioConverter=}16
^{AudioBufferList=I[1{AudioBuffer=II^v}]}16@0:8
v24@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16
@"CSAudioInjectionFileOption"
v44@0:8@16B24Q28Q36
@"<CSAudioConverterDelegate>"
@20@0:8B16
@"CSPreventSystemSleepPowerAssertion"
@44@0:8@16@24B32Q36
@"<CSAudioMeterProviding>"
softlink:r:path:/System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus
softlink:r:path:/System/Library/Frameworks/CoreMotion.framework/CoreMotion
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleIdentifier</key>
<string>com.apple.corespeechd</string>
<key>CFBundleName</key>
<string>corespeech daemon</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E233</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.corespeechd</string>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.assistant.analytics</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.assistant.dictation.prerecorded</key>
<true/>
<key>com.apple.assistant.multiuser.service</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.callkit</key>
<array>
<string>private-controller-api</string>
</array>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.CanRecordWithoutSessionActivation</key>
<true/>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.i-am-siri</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.corespeech.cat.xpc</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.hid.system.user-access-fast-path</key>
<true/>
<key>com.apple.homepodaccessorysettings.client</key>
<true/>
<key>com.apple.managedconfiguration.profiled.profile-list-read</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.phs</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrUaap</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrAssistant</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrHammer</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriDictationAssets</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAttentionAssets</string>
<string>com.apple.MobileAsset.AdBlockerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsTV</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsWatch</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsTV</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
<string>com.apple.MobileAsset.SpeakerRecognitionAssets</string>
<string>com.apple.MobileAsset.EmbeddedSpeech</string>
<string>com.apple.MobileAsset.VoiceTriggerHSAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerHSAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerHSAssetsWatch</string>
</array>
<key>com.apple.private.assets.bypass-asset-types-check</key>
<true/>
<key>com.apple.private.attentionawareness</key>
<true/>
<key>com.apple.private.attentionawareness.samplewhileabsent</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/CoreSpeech.framework/corespeechd</string>
</dict>
<key>com.apple.private.audio.dark-wake-audio</key>
<true/>
<key>com.apple.private.audio.hal.aop-audio.user-access</key>
<true/>
<key>com.apple.private.audio.interprocess-tap</key>
<true/>
<key>com.apple.private.audio.notification-wake-audio</key>
<true/>
<key>com.apple.private.audio.suppress-mic-indicator</key>
<true/>
<key>com.apple.private.avfoundation.capture.nonstandard-client.allow</key>
<true/>
<key>com.apple.private.avfoundation.capture.nonstandard-client.allowed-media-types</key>
<dict>
<key>AVMediaTypeMetadataObject</key>
<array>
<string>AVMetadataObjectTypeTrackedFaces</string>
</array>
</dict>
<key>com.apple.private.biome.client-identifier</key>
<string>com.apple.corespeechd</string>
<key>com.apple.private.biome.read-only</key>
<string>Dictation.UserEdit</string>
<key>com.apple.private.biome.read-write</key>
<string>Siri.VoiceTriggerStatistics</string>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.corespeech.xpc.remote</key>
<true/>
<key>com.apple.private.corespeechd.activation</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.medicaliddata</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homehubd</key>
<array>
<string>endpoint-read</string>
</array>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.iokit.darkwake-control</key>
<true/>
<key>com.apple.private.mediaexperience.allowrecordingduringcall</key>
<true/>
<key>com.apple.private.mediasafetynet.exception.announcemessage</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.siri.activation</key>
<true/>
<key>com.apple.private.siri.invoke</key>
<true/>
<key>com.apple.private.speech-model-training</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceAll</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rootless.storage.CoreSpeech</key>
<true/>
<key>com.apple.runningboard.assertions.appshack</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/MobileAsset/</string>
<string>/Library/Audio/Tunings/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Caches/com.apple.corespeech.cat.xpc/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/VoiceTrigger/</string>
<string>/Library/Logs/CrashReporter/Assistant/</string>
<string>/Library/Logs/CrashReporter/VoiceTrigger/</string>
<string>/Library/Logs/CrashReporter/ssr/</string>
<string>/Library/Logs/CrashReporter/CoreSpeech/</string>
<string>/Library/Logs/CrashReporter/RTS/</string>
<string>/Library/Caches/VoiceTrigger/</string>
<string>/Library/Caches/com.apple.corespeechd/</string>
<string>/Documents/Logs/CoreSpeech/</string>
<string>/Library/Assistant/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>AppleSPUHIDDriverUserClient</string>
<string>IOHIDEventServiceFastPathUserClient</string>
<string>AGXDeviceUserClient</string>
<string>IOSurfaceRootUserClient</string>
<string>AGXSharedUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>H11ANEInDirectPathClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.sirittsd</string>
<string>com.apple.carousel.backlightxpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.mobileasset.autoasset</string>
<string>com.apple.assistant.settings</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.audio.voicetrigger.xpc</string>
<string>com.apple.audio.AudioComponentRegistrar</string>
<string>com.apple.voicetrigger.voicetriggerservice</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.server.bluetooth</string>
<string>com.apple.SystemConfiguration.NetworkInformation</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.coremedia.carplayavvc.xpc</string>
<string>com.apple.iohideventsystem</string>
<string>com.apple.siri.activation</string>
<string>com.apple.siri.activation.horseman</string>
<string>com.apple.siri.activation.blackbird</string>
<string>com.apple.assistant.analytics</string>
<string>com.apple.audio.SystemSoundServer-iOS</string>
<string>com.apple.BTLEAudioController.xpc</string>
<string>com.apple.healthd.server</string>
<string>com.apple.SystemConfiguration.configd</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.backlightd</string>
<string>com.apple.carousel.wakegesturemonitor</string>
<string>com.apple.homekit.audio.xpc</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.nsurlsessiond.NSURLSessionProxyService</string>
<string>com.apple.nsurlstorage-cache</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.mediasafetynet.exceptions</string>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.corespeech.mockremoteplugin.xpc</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.assistant.multiuser.service</string>
<string>com.apple.callkit.callcontrollerhost</string>
<string>com.apple.siri.morphunassetsupdaterd</string>
<string>com.apple.homehubd.manage</string>
<string>com.apple.AttentionAwareness</string>
<string>com.apple.corespeech.speechmodeltraining.xpc</string>
<string>com.apple.siri.analytics.assistant</string>
<string>com.apple.remoted</string>
<string>com.apple.PairingManager</string>
<string>com.apple.biome.access.system</string>
<string>com.apple.biome.access.user</string>
<string>com.apple.homepodaccessorysettings.server</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.assistant</string>
<string>com.apple.nano</string>
<string>com.apple.raisetospeak</string>
<string>com.apple.assistant.backedup</string>
<string>com.apple.assistant.support</string>
<string>com.apple.CoreMotion</string>
<string>com.apple.airplay</string>
<string>com.apple.mediaremote</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.niservices</string>
<string>com.apple.voicetrigger</string>
<string>com.apple.voicetrigger.notbackedup</string>
<string>com.apple.avfoundation.avvc</string>
<string>com.apple.audio.virtualaudio</string>
<string>com.apple.speakerrecognition</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.raisetospeak</string>
</array>
<key>com.apple.security.exception.sysctl.read-only</key>
<array>
<string>net.routetable.0.0.3.0</string>
</array>
<key>com.apple.security.ts.ane-client</key>
<true/>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.opengl-or-metal</key>
<true/>
<key>com.apple.security.ts.play-audio</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.power-assertions</key>
<true/>
<key>com.apple.security.ts.read-any-bundle</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.corespeechd</string>
<key>com.apple.sensorkit.writer.allow</key>
<array>
<string>com.apple.SensorKit.speechMetrics.siri</string>
<string>com.apple.SensorKit.speechEmotion.siri</string>
<string>com.apple.SensorKit.soundDetection.siri</string>
</array>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.embeddedspeech</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>com.apple.systemstatus.publisher.domains</key>
<array>
<string>media</string>
</array>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
</array>
<key>com.apple.trial.client</key>
<array>
<string>200</string>
<string>322</string>
<string>404</string>
<string>372</string>
<string>401</string>
<string>751</string>
<string>756</string>
<string>757</string>
</array>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.corespeech</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
application-identifier
com.apple.corespeechd0"
com.apple.airplay.carplayavvc
com.apple.assistant.analytics
com.apple.assistant.client
0.)com.apple.assistant.dictation.prerecorded
0*%com.apple.assistant.multiuser.service
com.apple.assistant.settings
050com.apple.avfoundation.allow-system-wide-context
083com.apple.avfoundation.allows-access-to-device-list
com.apple.bluetooth.system
com.apple.callkit0
private-controller-api0*%com.apple.coreaudio.CanRecordPastData
0:5com.apple.coreaudio.CanRecordWithoutSessionActivation
com.apple.coreaudio.app-tap
com.apple.coreaudio.i-am-siri
0.)com.apple.coreaudio.private.SystemWideTap
0.)com.apple.coreaudio.register-internal-aus
com.apple.coreduetd.context
com.apple.corespeech.cat.xpc
0,'com.apple.frontboard.launchapplications
0/*com.apple.hid.system.user-access-fast-path
0.)com.apple.homepodaccessorysettings.client
0>9com.apple.managedconfiguration.profiled.profile-list-read
0.)com.apple.nano.nanoregistry.generalaccess
0MHcom.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr
0RMcom.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis
0MHcom.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.phs
com.apple.private.ShazamKit
4/com.apple.private.assets.accessible-asset-types0
9com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrUaap>com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrAssistant;com.apple.MobileAsset.Trial.Siri.SiriUnderstandingAsrHammer4com.apple.MobileAsset.Trial.Siri.SiriDictationAssetsAcom.apple.MobileAsset.Trial.Siri.SiriUnderstandingAttentionAssets%com.apple.MobileAsset.AdBlockerAssets(com.apple.MobileAsset.VoiceTriggerAssets,com.apple.MobileAsset.VoiceTriggerAssetsIPad-com.apple.MobileAsset.VoiceTriggerAssetsWatch-com.apple.MobileAsset.VoiceTriggerAssetsMarsh*com.apple.MobileAsset.VoiceTriggerAssetsTV*com.apple.MobileAsset.SpeechEndpointAssets/com.apple.MobileAsset.SpeechEndpointAssetsWatch,com.apple.MobileAsset.SpeechEndpointAssetsTV(com.apple.MobileAsset.RaiseToSpeakAssets+com.apple.MobileAsset.VoiceTriggerAssetsMac.com.apple.MobileAsset.SpeakerRecognitionAssets$com.apple.MobileAsset.EmbeddedSpeech*com.apple.MobileAsset.VoiceTriggerHSAssets.com.apple.MobileAsset.VoiceTriggerHSAssetsIPad/com.apple.MobileAsset.VoiceTriggerHSAssetsWatch061com.apple.private.assets.bypass-asset-types-check
0)$com.apple.private.attentionawareness
0;6com.apple.private.attentionawareness.samplewhileabsent
9com.apple.private.attribution.implicitly-assumed-identity
[0
type
path0K
valueB/System/Library/PrivateFrameworks/CoreSpeech.framework/corespeechd0,'com.apple.private.audio.dark-wake-audio
061com.apple.private.audio.hal.aop-audio.user-access
0-(com.apple.private.audio.interprocess-tap
04/com.apple.private.audio.notification-wake-audio
03.com.apple.private.audio.suppress-mic-indicator
0D?com.apple.private.avfoundation.capture.nonstandard-client.allow
Mcom.apple.private.avfoundation.capture.nonstandard-client.allowed-media-types
A0?
AVMediaTypeMetadataObject0" AVMetadataObjectTypeTrackedFaces0B)com.apple.private.biome.client-identifier
com.apple.corespeechd07!com.apple.private.biome.read-only
Dictation.UserEdit0A"com.apple.private.biome.read-write
Siri.VoiceTriggerStatistics0 
com.apple.private.bmk.allow
0:5com.apple.private.coreaudio.viewInterruptorName.allow
0,'com.apple.private.corespeech.xpc.remote
0-(com.apple.private.corespeechd.activation
com.apple.private.healthkit
0.)com.apple.private.healthkit.medicaliddata
0/*com.apple.private.hid.client.event-monitor
com.apple.private.homehubd0
endpoint-read04/com.apple.private.homekit.siri-audio-connection
0-(com.apple.private.iokit.darkwake-control
0?:com.apple.private.mediaexperience.allowrecordingduringcall
0?:com.apple.private.mediasafetynet.exception.announcemessage
com.apple.private.mobiletimerd
0&!com.apple.private.siri.activation
com.apple.private.siri.invoke
0,'com.apple.private.speech-model-training
com.apple.private.tcc.allow0*
kTCCServiceMicrophone
kTCCServiceCamera0=)com.apple.private.tcc.manager.access.read0
kTCCServiceAll0% com.apple.proactive.eventtracker
0*%com.apple.rootless.storage.CoreSpeech
0/*com.apple.runningboard.assertions.appshack
0r:com.apple.security.exception.files.absolute-path.read-only04
/private/var/MobileAsset/
/Library/Audio/Tunings/0r?com.apple.security.exception.files.home-relative-path.read-only0/-/Library/Caches/com.apple.corespeech.cat.xpc/0
@com.apple.security.exception.files.home-relative-path.read-write0
/Library/VoiceTrigger/&/Library/Logs/CrashReporter/Assistant/)/Library/Logs/CrashReporter/VoiceTrigger/ /Library/Logs/CrashReporter/ssr/'/Library/Logs/CrashReporter/CoreSpeech/ /Library/Logs/CrashReporter/RTS/
/Library/Caches/VoiceTrigger/&/Library/Caches/com.apple.corespeechd/
/Documents/Logs/CoreSpeech/
/Library/Assistant/0
4com.apple.security.exception.iokit-user-client-class0
AppleSPUHIDDriverUserClient#IOHIDEventServiceFastPathUserClient
AGXDeviceUserClient
IOSurfaceRootUserClient
AGXSharedUserClient
AGXCommandQueue
AGXDevice
H11ANEInDirectPathClient0
[4com.apple.security.exception.mach-lookup.global-name0
!Kcom.apple.telephonyutilities.callservicesdaemon.conversationprovidermanagerCcom.apple.telephonyutilities.callservicesdaemon.callprovidermanager@com.apple.telephonyutilities.callservicesdaemon.callcapabilitiesCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerCcom.apple.telephonyutilities.callservicesdaemon.conversationmanager
com.apple.sirittsd
com.apple.carousel.backlightxpc3com.apple.usernotifications.usernotificationservice&com.apple.frontboard.systemappservices
com.apple.mobileasset.autoasset
com.apple.assistant.settings!com.apple.MobileTimer.timerserver!com.apple.MobileTimer.alarmserver com.apple.audio.voicetrigger.xpc'com.apple.audio.AudioComponentRegistrar*com.apple.voicetrigger.voicetriggerservice com.apple.audio.AudioQueueServer
com.apple.server.bluetooth0com.apple.SystemConfiguration.NetworkInformation
com.apple.mediaremoted.xpc#com.apple.coremedia.carplayavvc.xpc
com.apple.iohideventsystem
com.apple.siri.activation"com.apple.siri.activation.horseman#com.apple.siri.activation.blackbird
com.apple.assistant.analytics%com.apple.audio.SystemSoundServer-iOS!com.apple.BTLEAudioController.xpc
com.apple.healthd.server%com.apple.SystemConfiguration.configd'com.apple.managedconfiguration.profiled com.apple.locationd.registration
com.apple.backlightd%com.apple.carousel.wakegesturemonitor
com.apple.homekit.audio.xpc
com.apple.SBUserNotification0com.apple.nsurlsessiond.NSURLSessionProxyService
com.apple.nsurlstorage-cache
com.apple.commcenter.xpc#com.apple.mediasafetynet.exceptions
com.apple.symptom_diagnostics)com.apple.corespeech.mockremoteplugin.xpc*com.apple.systemstatus.activityattribution%com.apple.assistant.multiuser.service$com.apple.callkit.callcontrollerhost$com.apple.siri.morphunassetsupdaterd
com.apple.homehubd.manage
com.apple.AttentionAwareness,com.apple.corespeech.speechmodeltraining.xpc"com.apple.siri.analytics.assistant
com.apple.remoted
com.apple.PairingManager
com.apple.biome.access.system
com.apple.biome.access.user)com.apple.homepodaccessorysettings.server0
8com.apple.security.exception.shared-preference.read-only0
com.apple.assistant
com.apple.nano
com.apple.raisetospeak
com.apple.assistant.backedup
com.apple.assistant.support
com.apple.CoreMotion
com.apple.airplay
com.apple.mediaremote0
+9com.apple.security.exception.shared-preference.read-write0
com.apple.niservices
com.apple.voicetrigger"com.apple.voicetrigger.notbackedup
com.apple.avfoundation.avvc
com.apple.audio.virtualaudio
com.apple.speakerrecognition
com.apple.coreaudio
com.apple.coremedia
com.apple.raisetospeak0I-com.apple.security.exception.sysctl.read-only0
net.routetable.0.0.3.00% com.apple.security.ts.ane-client
0/*com.apple.security.ts.mobile-keybag-access
0*%com.apple.security.ts.opengl-or-metal
0% com.apple.security.ts.play-audio
0% com.apple.security.ts.play-media
0+&com.apple.security.ts.power-assertions
0*%com.apple.security.ts.read-any-bundle
com.apple.security.ts.tmpdir
com.apple.corespeechd0
 com.apple.sensorkit.writer.allow0y&com.apple.SensorKit.speechMetrics.siri&com.apple.SensorKit.speechEmotion.siri'com.apple.SensorKit.soundDetection.siri0
com.apple.siri.activation
com.apple.siri.embeddedspeech
com.apple.siri.external_request
0/*com.apple.systemstatus.activityattribution
03(com.apple.systemstatus.publisher.domains0
media0S*com.apple.telephonyutilities.callservicesd0%access-calls
access-call-providers0B
com.apple.trial.client0(
200
322
404
372
401
751
756
7570/*com.apple.voicetrigger.voicetriggerservice
keychain-access-groups0
com.apple.corespeech0
platform-application
seatbelt-profiles0
temporary-sandbox
xeps
supo
33s@
fff?
333333
333333
