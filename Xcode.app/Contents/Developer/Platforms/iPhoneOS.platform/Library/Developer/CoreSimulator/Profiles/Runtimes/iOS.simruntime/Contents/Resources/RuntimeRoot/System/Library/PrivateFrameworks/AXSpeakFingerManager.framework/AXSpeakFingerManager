@(#)PROGRAM:AXSpeakFingerManager  PROJECT:Accessibility-1
MbP?
v8@?0
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
switch.web.off.text
switch.nonweb.off.text
switch.web.on.text
switch.nonweb.on.text
switch.mixed.text
selected.trait
back.button.trait
__AXStringForVariablesSentinel
AXSpeakFingerManager
Error speaking content under finger: %@
VoiceOver
animate
frame
path
Error stopping speech: %@
v32@?0@?<v@?>8Q16^B24
Localizable
%{public}@
AXSpeakFingerManager
AXOratorDelegate
NSObject
AXUIClientDelegate
AXUIService
_inUnitTestMode
T#,R
_orator
T@"AXOrator",&,N,V_orator
content
T@"NSMutableArray",&,N,V_stateUpdateBlocks
hapticGenerator
T@"NSString",R,C
numberWithBool:
TB,N,V_inUnitTestMode
release
TQ,N,V_speakFingerState
windowContextId
.cxx_destruct
_lastTouchPoint
T@"AXElement",&,N,V_currentSpeakFingerElement
bundleForClass:
T@"NSArray",&,N,V_elementsForUnitTests
dealloc
T@"NSString",&,N,V_springBoardActionHandlerId
isProxy
T@"UIImpactFeedbackGenerator",&,N,V_hapticGenerator
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
TB,N,V_unitTestSpeaking
setAudioSessionInactiveTimeout:
TQ,R
T{CGPoint=dd},N,V_lastTouchPoint
_currentSpeakFingerElement
_elementsForUnitTests
_hapticGenerator
_removeFocusRingForElement:
_speakFingerState
_speakFingerStateChanged
_springBoardActionHandlerId
_stateUpdateBlocks
_unitTestSpeaking
_updateFocusRingForWebElement:remove:
_voiceOverDisplayManagerClient
accessQueueForProcessingMessageWithIdentifier:
array
autorelease
axSafelyAddObject:
boolWithAXAttribute:
class
conformsToProtocol:
connectionWillBeInterruptedForClientWithIdentifier:
connectionWithServiceWasInterruptedForUserInterfaceClient:
convertPath:fromContextId:
convertRect:fromContextId:
count
currentSpeakFingerElement
debugDescription
description
desiredWindowLevelForContentViewController:userInteractionEnabled:
dictionary
elementAtCoordinate:withVisualPadding:
elementsForUnitTests
enumerateObjectsUsingBlock:
fingerWasLiftedInSpeakUnderFingerMode
frame
hasAllTraits:
hasAnyTraits:
hash
identifier
ignoreLogging
impactOccurred
inUnitTestMode
init
initWithIdentifier:serviceBundleName:
initWithStyle:
isAccessibleElement
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isSpeaking
label
lastTouchPoint
length
localizedStringForKey:value:table:
messageWithIdentifierRequiresWritingBlock:
messageWithIdentifierShouldBeProcessedAsynchronously:
objectAtIndexedSubscript:
orator
orator:willSpeakRange:ofContent:
oratorDidCancelSpeaking:
oratorDidChangeSpeakingRate:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidStartSpeaking:
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
path
performAction:withValue:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
processInitializationMessage:
processMessage:withIdentifier:fromClientWithIdentifier:error:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
registerBlockForStateChange:
registerSpringBoardActionHandler:withIdentifierCallback:
removeActionHandler:
requiredEntitlementForProcessingMessageWithIdentifier:
respondsToSelector:
retain
retainCount
self
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
server
serviceWasFullyInitialized
setContent:
setCurrentSpeakFingerElement:
setCursorFrame:withPath:withContextId:element:forceRefresh:animated:
setDelegate:
setElementsForUnitTests:
setHapticGenerator:
setInUnitTestMode:
setLastTouchPoint:
setObject:forKeyedSubscript:
setOrator:
setSpeakFingerState:
setSpeakingContext:
setSpringBoardActionHandlerId:
setStateUpdateBlocks:
setUnitTestSpeaking:
sharedInstance
speakElementAtLocation:
speakFingerState
speakUnderFingerModeFinishedTalking
speakUnderFingerModeStarted
springBoardActionHandlerId
startSpeakingWithPreferredLanguage:error:
stateUpdateBlocks
stopSpeaking:
stringWithAXAttribute:
superclass
systemWideElement
uiElement
unitTestSpeaking
userEventOccurred
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
userManuallyExitedSpeakUnderFingerMode
value
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v48@0:8@16{_NSRange=QQ}24@40
v28@0:8@16B24
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
v28@0:8@"AXOrator"16B24
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
@48@0:8@16Q24@32^@40
B24@0:8Q16
v48@0:8@16Q24@32@?40
@24@0:8Q16
v16@0:8
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
v32@0:8{CGPoint=dd}16
v76@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGPath=}48I56@60B68B72
v24@0:8@?16
d28@0:8@16B24
v24@0:8Q16
{CGPoint=dd}16@0:8
v20@0:8B16
@"AXUIClient"
@"NSArray"
@"NSMutableArray"
@"AXElement"
@"AXOrator"
@"UIImpactFeedbackGenerator"
@"NSString"
{CGPoint="x"d"y"d}
@(#)PROGRAM:AXSpeakFingerManager  PROJECT:Accessibility-1
v8@?0
v24@?0q8@"NSDictionary"16
v16@?0@"NSString"8
switch.web.off.text
switch.nonweb.off.text
switch.web.on.text
switch.nonweb.on.text
switch.mixed.text
selected.trait
back.button.trait
__AXStringForVariablesSentinel
AXSpeakFingerManager
Error speaking content under finger: %@
VoiceOver
animate
frame
path
Error stopping speech: %@
v32@?0@?<v@?>8Q16^B24
Localizable
%{public}@
AXSpeakFingerManager
AXOratorDelegate
NSObject
AXUIClientDelegate
AXUIService
_inUnitTestMode
T#,R
_orator
T@"AXOrator",&,N,V_orator
content
T@"NSMutableArray",&,N,V_stateUpdateBlocks
hapticGenerator
T@"NSString",R,C
numberWithBool:
TB,N,V_inUnitTestMode
release
TQ,N,V_speakFingerState
windowContextId
.cxx_destruct
_lastTouchPoint
T@"AXElement",&,N,V_currentSpeakFingerElement
bundleForClass:
T@"NSArray",&,N,V_elementsForUnitTests
dealloc
T@"NSString",&,N,V_springBoardActionHandlerId
isProxy
T@"UIImpactFeedbackGenerator",&,N,V_hapticGenerator
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
TB,N,V_unitTestSpeaking
setAudioSessionInactiveTimeout:
TQ,R
T{CGPoint=dd},N,V_lastTouchPoint
_currentSpeakFingerElement
_elementsForUnitTests
_hapticGenerator
_removeFocusRingForElement:
_speakFingerState
_speakFingerStateChanged
_springBoardActionHandlerId
_stateUpdateBlocks
_unitTestSpeaking
_updateFocusRingForWebElement:remove:
_voiceOverDisplayManagerClient
accessQueueForProcessingMessageWithIdentifier:
array
autorelease
axSafelyAddObject:
boolWithAXAttribute:
class
conformsToProtocol:
connectionWillBeInterruptedForClientWithIdentifier:
connectionWithServiceWasInterruptedForUserInterfaceClient:
convertPath:fromContextId:
convertRect:fromContextId:
count
currentSpeakFingerElement
debugDescription
description
desiredWindowLevelForContentViewController:userInteractionEnabled:
dictionary
elementAtCoordinate:withVisualPadding:
elementsForUnitTests
enumerateObjectsUsingBlock:
fingerWasLiftedInSpeakUnderFingerMode
frame
hasAllTraits:
hasAnyTraits:
hash
identifier
ignoreLogging
impactOccurred
inUnitTestMode
init
initWithIdentifier:serviceBundleName:
initWithStyle:
isAccessibleElement
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isSpeaking
label
lastTouchPoint
length
localizedStringForKey:value:table:
messageWithIdentifierRequiresWritingBlock:
messageWithIdentifierShouldBeProcessedAsynchronously:
objectAtIndexedSubscript:
orator
orator:willSpeakRange:ofContent:
oratorDidCancelSpeaking:
oratorDidChangeSpeakingRate:
oratorDidFinishSpeaking:
oratorDidPauseSpeaking:
oratorDidResumeSpeaking:
oratorDidStartSpeaking:
oratorShouldFetchNextElements:shouldScrollOpaqueProviderIfNecessary:
path
performAction:withValue:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
processInitializationMessage:
processMessage:withIdentifier:fromClientWithIdentifier:error:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
registerBlockForStateChange:
registerSpringBoardActionHandler:withIdentifierCallback:
removeActionHandler:
requiredEntitlementForProcessingMessageWithIdentifier:
respondsToSelector:
retain
retainCount
self
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
server
serviceWasFullyInitialized
setContent:
setCurrentSpeakFingerElement:
setCursorFrame:withPath:withContextId:element:forceRefresh:animated:
setDelegate:
setElementsForUnitTests:
setHapticGenerator:
setInUnitTestMode:
setLastTouchPoint:
setObject:forKeyedSubscript:
setOrator:
setSpeakFingerState:
setSpeakingContext:
setSpringBoardActionHandlerId:
setStateUpdateBlocks:
setUnitTestSpeaking:
sharedInstance
speakElementAtLocation:
speakFingerState
speakUnderFingerModeFinishedTalking
speakUnderFingerModeStarted
springBoardActionHandlerId
startSpeakingWithPreferredLanguage:error:
stateUpdateBlocks
stopSpeaking:
stringWithAXAttribute:
superclass
systemWideElement
uiElement
unitTestSpeaking
userEventOccurred
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
userManuallyExitedSpeakUnderFingerMode
value
zone
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v48@0:8@16{_NSRange=QQ}24@40
v28@0:8@16B24
v24@0:8@"AXOrator"16
v48@0:8@"AXOrator"16{_NSRange=QQ}24@"NSString"40
v28@0:8@"AXOrator"16B24
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
@48@0:8@16Q24@32^@40
B24@0:8Q16
v48@0:8@16Q24@32@?40
@24@0:8Q16
v16@0:8
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
v32@0:8{CGPoint=dd}16
v76@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGPath=}48I56@60B68B72
v24@0:8@?16
d28@0:8@16B24
v24@0:8Q16
{CGPoint=dd}16@0:8
v20@0:8B16
@"AXUIClient"
@"NSArray"
@"NSMutableArray"
@"AXElement"
@"AXOrator"
@"UIImpactFeedbackGenerator"
@"NSString"
{CGPoint="x"d"y"d}
