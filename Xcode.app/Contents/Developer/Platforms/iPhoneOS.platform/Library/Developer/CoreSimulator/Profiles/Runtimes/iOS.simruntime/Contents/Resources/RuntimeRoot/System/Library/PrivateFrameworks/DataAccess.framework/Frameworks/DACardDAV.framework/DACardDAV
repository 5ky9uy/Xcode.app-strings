v8@?0
/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-2241.4.3/CardDAV/CardDAVVCardItemCNImplementation.m
<Unknown File>
%@ wasn't a CardDAVDaemonAccount
Old CardDAV code would infer the type by checking account %@ - container %@
CNContactDiff
Please read CardDAVVCardItem.h, and try again
v24@?0@"CNContact"8^B16
%@ wasn't a CACardDAVRecordItem
%@ wasn't a DAContact
%@ wasn't a DAGroup
contactStore
T@"CNContactStore",&,N,V_contactStore
DAContactGroup cannot return an ABRecordRef
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
group
T@"CNMutableGroup",R,N,V_group
markedForDeletion
TB,N,V_markedForDeletion
/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-2241.4.3/CardDAV/CardDAVVCardItemABImplementation.m
X-ABCROP-RECTANGLE=ABClipRect_1&%d&%d&%d&%d&%@
Error: uncrecognized record type
Error: abRecordType type mismatch for contact
Error: abRecordType type mismatch for group
X-ADDRESSBOOKSERVER-MEMBER
urn:uuid:
abRecord
T^v,N,V_abRecord
abRecordType
TI,N,V_abRecordType
@"CNFuture"16@?0@"ACAccount"8
parent
v16@?0@"NSError"8
v16@?0@8
@"CNFuture"16@?0@"NSNumber"8
accountStore
T@"ACAccountStore",R,N,V_accountStore
delegateProvider
T@"<CardDAVDelegateInfoProvider>",R,N,V_delegateProvider
accountID
T@"NSString",R,N,V_accountID
@"CardDAVDelegateInfo"16@?0@"FAFamilyMember"8
v16@?0@"FAFamilyCircle"8
@"NSString"16@?0@"ACAccount"8
B16@?0@"FAFamilyMember"8
T@"ACAccountStore",&,N,V_accountStore
accountsType
T@"ACAccountType",&,N,V_accountsType
familyCirclePromise
T@"CNPromise",&,N,V_familyCirclePromise
DAABLegacyGroup cannot update CNSaveRequest
DAABLegacyGroup cannot return an CNGroup
T^v,R,N,V_group
DAABLegacyContact cannot update CNSaveRequest
DAABLegacyContact cannot return a CNContact
person
T^v,R,N,V_person
/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-2241.4.3/CardDAV/CardDAVVCardItem.m
Subclasses implement
Should never be called, see comments in CardDAVVCardItem.h
serverID
T@"NSURL",&,N
dataPayload
T@"NSData",R,N
syncKey
T@"NSString",R,N
childrenOrder
T@"NSArray",R,N
sourceURL
destinationURL
clientID
T@"NSNumber",&,N
cardDAVRecordItem
T@"<DACardDAVRecord>",R,N,V_cardDAVRecordItem
UUIDToPersonCache
T@"NSMutableDictionary",&,N
DACardDAVAccountDSID
DACardDAVAccountAltDSID
DACardDAVAccountAppleID
/%@/principal/
principalPath
T@"NSString",&,N,V_principalPath
dsid
T@"NSNumber",&,N,V_dsid
altDSID
T@"NSString",&,N,V_altDSID
appleID
T@"NSString",&,N,V_appleID
DAContactsContact cannot return an ABRecordRef
mutableContact
T@"CNMutableContact",R,N,V_mutableContact
CardDAVHTTPTraffic
/.well-known/carddav
/principals/
_carddav._tcp.
_carddavs._tcp.
addressbook
http
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CARDDAV
DataAccess
INVALID_PASSWORD_BODY_CARDDAV
com.apple.MobileAddressBook
com.apple.mobilephone
v24@?0q8@"NSError"16
checkValidityTaskGroup
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
curLogger
T@"DACoreDAVLogger",&,N,V_curLogger
cardDAVAccountVersion
Ti,R,N,V_cardDAVAccountVersion
taskManager
T@"DACoreDAVTaskManager",R,N
databaseHelper
T@"CardDAVLocalDBHelper",R,N,V_databaseHelper
Serialization error %@
Unexpected error %@
Unable to parse the contact with this data %@
Unexpected multiple contacts with this data %@
Unknown phone number label %@
Unexpected result comparing local and server contacts: error=%@
Couldn't get address book
Not setting image on person, as it hasn't changed
Not saving image for contact, as image download failed with error %@
Unable to decode properties: %@
Found local members in the group %@ that didn't exist on the server. This group will get pushed to the server
Unexpected condition updating deletes - no principal path for delegateInfo: %{public}@ %@
Delegate with account ID %@ cannot be saved, error %{public}@
Delegate with account ID %@ can be saved
Delegate with account ID %@ save failed, error %{public}@
Delegate with account ID %@ saved
Delegate with account ID %@ failed to be removed, error %{public}@
Delegate with account ID %@ was successfully removed
Family circle: %@
Error loading family members: %@
Error fetching family members: %@
Malformed family member; missing dsid: %@
Malformed family member; missing altDSID: %@
Malformed family member; missing appleID: %@
Autodiscover called on account %@, but that account does not have a host set. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
DiscoveryTaskGroup %@ got account info %@ with error %@
Could not get photo data from url %@.  Error %@
CardDAVVCardItemCNImplementation
DAContactsGroup
DAGroup
DACardDAVRecord
NSObject
CardDAVVCardItemABImplementation
CardDAVDelegateManager
CardDAVLocalDBHelper
CardDAVExtensions
CardDAVPropertiesHelper
CardDAViCloudDelegateInfoProvider
CardDAVDelegateInfoProvider
DAABLegacyGroup
DAABLegacyContact
DAContact
CardDAVVCardItem
CoreDAVLeafDataPayload
DADataElement
CardDAVDelegateInfo
DAContactsContact
DACardDAV
CardDAVAccount
CoreDAVAccountInfoProvider
CoreDAVOAuthInfoProvider
CoreDAVLogDelegate
CoreDAVDiscoveryTaskGroupDelegate
CoreDAVTaskGroupDelegate
CardDAVExtension
descriptorForRequiredKeys
arrayWithObjects:count:
init
setCardDAVRecordItem:
isContact
_localItemAsContact
setIncludeNotes:
setIncludePhotos:
setIncludePrivateFields:
dataWithContacts:options:error:
setDataPayload:
iOSLegacyIdentifier
numberWithInt:
setClientID:
externalModificationTag
setSyncKey:
externalIdentifier
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
setServerID:
isGroup
setContactStore:
homeURL
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
da_leastInfoStringRepresentationRelativeToParentURL:
accountID
dataPayload
contactsWithData:error:
count
keysToFetch
objectAtIndexedSubscript:
copyWithPropertyKeys:
emailAddresses
firstObject
value
setEmailAddress:
postalAddresses
street
setStreet:
city
setCity:
state
setState:
postalCode
setZip:
country
setCountry:
instantMessageAddresses
service
setImService:
username
setImUsername:
phoneNumbers
countByEnumeratingWithState:objects:count:
label
stringValue
isEqualToString:
setWorkPhone:
setMobilePhone:
setHomePhone:
setIPhone:
setMainPhone:
setFaxPhone:
setWorkFaxPhone:
setPagerNumber:
_contactFromDataPayload
setDisplayName:
givenName
setFirstName:
familyName
setLastName:
organizationName
setCompany:
jobTitle
setTitle:
nickname
setAlias:
_setEmailAddress:contact:
_setStreetAddress:contact:
_setPhoneNumbers:contact:
_setInstantMessage:contact:
imageDataAvailable
imageData
setJpegPhoto:
emailAddress
setIdentifierOnServer:
initWithContact:
identifier
addContact:toContainerWithIdentifier:
addSaveRequest:
updateContact:
predicateForAccountWithExternalIdentifier:
contactStore
accountsMatchingPredicate:error:
predicateForContainersInAccountWithIdentifier:includingDisabledContainers:
containersMatchingPredicate:error:
mutableCopy
_containerForAccount:
databaseHelper
_createContact:inContainer:databaseHelper:
setLocalItem:
asContact
diffContact:to:error:
multiDictionary
applyToMutableContact:withIdentifierMap:
setExternalModificationTag:
syncKey
serverID
setExternalIdentifier:
_commitChangesToContact:databaseHelper:
cardDAVRecordItem
deleteContact:
initWithKeysToFetch:
setUnifyResults:
setSortOrder:
clientID
intValue
predicateForLegacyIdentifier:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
asGroup
initWithDACardDAVRecord:contactStore:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
convertToDAContactSearchResultElement
createOrphanedABRecordFromParsedVCardOutRecordType:
loadClientIDs
saveWithLocalObject:toContainer:containerURL:shouldMergeProperties:outMergeDidChooseLocalProperties:account:shouldSaveGroups:
saveIfGroupWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
deleteFromContainer:
deleteFromContainer:account:
loadLocalItemWithAccount:
saveServerIDToExistingItem
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
_localItemAsGroup
UUIDToPersonCache
setUUIDToPersonCache:
.cxx_destruct
_dataPayload
_cardDAVRecordItem
_syncKey
_UUIDToPersonCache
_serverID
_clientID
_contactStore
group
externalUUID
setExternalUUID:
setMarkedForDeletion:
markedForDeletion
deleteGroup:
updateGroup:
exceptionWithName:reason:userInfo:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
isContainer
isAccount
updateSaveRequest:
markForDeletion
legacyIdentifier
eTag
setETag:
asABGroup
initWithGroup:
_markedForDeletion
_group
setAbRecordType:
abDBThrowOnNil:
abRecordType
bytes
length
base64EncodedStringWithOptions:
initWithFormat:
copyVCardRepresentationOfRecord:withPhoto:extraPhotoParameters:
dealloc
abRecord
initWithABPerson:
abDB
asPerson
initWithData:
asSource
createRecordInSource:outRecordType:
importToPerson:removeExistingProperties:
importToGroup:removeExistingProperties:
localRecordHasAdditionalProperties
URLWithString:
copyImageContentsAtURL:outError:
isEqualToData:
lastCropRectChecksum
initWithBytes:length:
lastCropRectX
lastCropRectY
lastCropRectWidth
lastCropRectHeight
_massageAddedOrModifiedVCard:
addObject:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
objectForKeyedSubscript:
compare:options:range:
substringFromIndex:
removeObject:
initWithData:encoding:
initWithBase64EncodedString:options:
initWithABRecord:addressBook:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
setAbRecord:
_abRecordType
_abRecord
array
existingChildAccountsWithProperty:
collectDelegateInfo
principalPath
dsid
addChildWithDelegateInfo:
accountProperties
setPropertiesOnAccount:
isEqualToDictionary:
saveAccount:
removeObjectForKey:
allValues
removeAccount:
_cn_map:
finishFutures:
sequence:
result:
accountStore
accountWithIdentifier:
delegateProvider
account
collectDelegatesForAccount:
collectExpiredDelgatesForAccount:
dictionary
childAccounts
accountPropertyForKey:
setObject:forKeyedSubscript:
copy
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
setParentAccount:
setAuthenticationType:
_cn_canSaveAccount:
addFailureBlock:
addSuccessBlock:
_cn_saveVerifiedAccount:
flatMap:
_cn_removeAccount:
initWithDelegateInfoProvider:accountID:
updateDelegates
collectExpiredDelegateInfo
_delegateProvider
_accountID
_accountStore
sharedInstanceForAccountType:creatingClass:
sharedInstance
addObjectsAndKeys:
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:
capitalizedString
prettyStringForDisplayName
code
domain
DA_isFailedDependencyError
integerValue
maxImageSize
maxResourceSize
numberWithInteger:
updateSyncDict:withDAVContainer:
maxImageSizeFromSyncDict:
maxResourceSizeFromSyncDict:
familyMembersPromise
displayAccount
isGuardianAccount:
nonParentsInFamily
delegateInfoForFamilyMembers:
adultsInFamily
initWithFamilyMember:
accountsType
accountsWithAccountType:
future
setPromptUserToResolveAuthenticatonFailure:
completionHandlerAdapter
startRequestWithCompletionHandler:
appleIDForAccount:
setWithArray:
familyCirclePromise
members
memberType
_cn_filter:
altDSID
appleID
isParent
isOrganizer
aa_altDSID
_cn_firstObjectPassingTest:
setFamilyCirclePromise:
cardDAVAccounts
appleIDsOfExistingDelegates:
retryFamilyCircleFetch
setAccountStore:
setAccountsType:
_accountsType
_familyCirclePromise
person
_person
useContactsFramework
currentImplementationClass
itemWithABRecord:addressBook:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
itemWithDACardDAVRecord:contactStore:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
childrenOrder
sourceURL
setSourceURL:
destinationURL
setDestinationURL:
setAppleID:
setDsid:
setAltDSID:
_hardCodedPrincipalPathForFamilyMember:
setPrincipalPath:
setAccountProperty:forKey:
stringWithFormat:
hardCodedPrincipalPathForDSID:
dsidForAccount:
altDSIDForAccount:
_principalPath
_dsid
_altDSID
_appleID
mutableContact
hasBeenPersisted
_mutableContact
boolErrorCompletionHandlerAdapter
canSaveAccount:withCompletionHandler:
saveVerifiedAccount:withCompletionHandler:
removeAccount:withCompletionHandler:
initWithBackingAccountInfo:
registerDefaultLoggerWithCoreDAV
filenameWithBasename:
initWithFilename:
setCurLogger:
cancelTaskGroup
arrayWithObjects:
da_appendSlashIfNeeded
containsObject:
shouldDoInitialAutodiscovery
removeAllObjects
insertObject:atIndex:
host
account:isValid:validationError:
setShouldUseOpportunisticSockets:
taskManager
cdvArrayWithIntegers:
useSSL
wellKnownPaths
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
setCheckValidityTaskGroup:
checkValidityTaskGroup
setTimeoutInterval:
setDelegate:
setConsumer:forTask:
startTaskGroup
principalURL
setPrincipalURL:
scheme
setUseSSL:
setHost:
port
setPort:
consumerForTask:
removeConsumerForTask:
initWithAccount:
setShouldDoInitialAutodiscovery:
saveAccountProperties
initWithContentsOfURL:options:error:
absoluteString
bundleForClass:
localizedStringForKey:value:table:
accountDescription
isValidating
dropAssertionsAndRenewCredentialsInQueue:withHandler:
handleTrustChallenge:
sharedLogging
addLogDelegate:forAccountInfoProvider:
removeLogDelegate:forAccountInfoProvider:
enabled
curLogger
logSnippet:
backingAccountInfo
isEnabledForDataclass:
addressBookConstraintsPlistPath
serverRoot
user
password
identityPersist
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
shouldFailAllTasks
additionalHeaderValues
customConnectionProperties
clientCertificateInfoProvider
oauthInfoProvider
handleTrustChallenge:withConnection:
handleAuthenticateAgainstProtectionSpace:
handleAuthenticateAgainstProtectionSpace:withConnection:
shouldRetryUnauthorizedConnection:
handleShouldUseCredentialStorage
noteHomeSetOnDifferentHost:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
copyStorageSession
shouldUseOpportunisticSockets
shouldCompressRequests
clientTokenRequestedByServer
clientToken
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
getAppleIDSession
newOAuth1CredentialForChallenge:
oauth2Token
oauthVariant
shouldLogTransmittedData
coreDAVLogTransmittedDataPartial:
coreDAVTransmittedDataFinished
coreDAVLogRequestBody:
coreDAVLogResponseBody:
logHandle
coreDAVLogLevel
coreDAVOutputLevel
coreDAVLogDiagnosticMessage:atLevel:
taskGroup:didFinishWithError:
discoveryTask:gotAccountInfo:error:
discoverInitialPropertiesWithConsumer:
isEqualToAccount:
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
onBehalfOfBundleIdentifier
setServerComplianceClasses:
spinnerIdentifiers
addToCoreDAVLoggingDelegates
removeFromCoreDAVLoggingDelegates
enabledForDADataclass:
cardDAVAccountVersion
_cardDAVAccountVersion
_databaseHelper
_checkValidityTaskGroup
_curLogger
isCardDAVAccount
familyDelegateAltDSID
@16@0:8
@64@0:8@16@24^B32q40q48@56
@56@0:8@16@24@32@40@48
v32@0:8@16@24
@24@0:8^I16
v16@0:8
B40@0:8@16@24@32
B32@0:8@16@24
@24@0:8@16
Q64@0:8@16@24@32B40^B44@52B60
B52@0:8@16@24B32^B36@44
B24@0:8^v16
B32@0:8^v16@24
B24@0:8@16
B16@0:8
B52@0:8^v16^v24B32^B36@44
v24@0:8^v16
v24@0:8@16
@"NSData"
@"<DACardDAVRecord>"
@"NSString"
@"NSMutableDictionary"
@"NSURL"
@"NSNumber"
@"CNContactStore"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
i16@0:8
^v16@0:8
v24@0:8@"NSString"16
@"CNMutableGroup"16@0:8
v20@0:8B16
@"CNMutableGroup"
@64@0:8^v16^v24^B32q40q48@56
I16@0:8
v20@0:8I16
@32@0:8@16@24
@"<CardDAVDelegateInfoProvider>"
@"ACAccountStore"
q24@0:8@16
@"NSArray"24@0:8@"ACAccount"16
@"ACAccountType"
@"CNPromise"
@24@0:8^v16
@"CNMutableContact"16@0:8
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
@"NSURL"16@0:8
v24@0:8@"NSURL"16
@"NSData"16@0:8
@"NSArray"16@0:8
B52@0:8^v16^v24B32^B36@"DAAccount"44
B24@0:8@"DAAccount"16
@"CNMutableContact"
q16@0:8
v24@0:8@?16
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
v24@0:8d16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B24@0:8@"NSURLAuthenticationChallenge"16
B32@0:8@"NSURLAuthenticationChallenge"16@"NSURLConnection"24
B24@0:8@"NSURLProtectionSpace"16
B32@0:8@"NSURLProtectionSpace"16@"NSURLConnection"24
B24@0:8@"NSURLConnection"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
^{_CFURLCredential=}24@0:8@16
^{_CFURLCredential=}24@0:8@"NSURLAuthenticationChallenge"16
v32@0:8@16q24
v24@0:8@"NSData"16
@"NSObject<OS_os_log>"16@0:8
v32@0:8@"NSString"16q24
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v40@0:8@16@24@32
v40@0:8@"CoreDAVDiscoveryTaskGroup"16@"<CoreDAVAccountInfoProvider>"24@"NSError"32
@32@0:8@16^@24
B24@0:8q16
@"CardDAVLocalDBHelper"
@"CoreDAVDiscoveryTaskGroup"
@"DACoreDAVLogger"
