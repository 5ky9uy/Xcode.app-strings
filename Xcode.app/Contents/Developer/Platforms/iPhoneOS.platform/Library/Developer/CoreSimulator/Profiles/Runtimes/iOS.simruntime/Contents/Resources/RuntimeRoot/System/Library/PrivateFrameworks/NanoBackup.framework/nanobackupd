Failed to instantiate the Face Snapshot singleton
Failed to write clock face data (%lu bytes) to (%@) with error: (%@)
Failed to retrieve the PNG representation of the snapshot
Failed to retrieve the watch face snapshot
Requesting face snapshot from NTK
Timed out waiting for snapshot from NTK
Face snapshot received from NTK inline
Face snapshot received from NTK via delegate call
Add Observer for: %@
restoreWithID: %@
createInitialBackup finshed with error %@
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Got backup: %@ for ID: %@
Failed to remove Backup: %@
Backup (%@) could not be found
timed out waiting for result from icloud
got iCloud HSA2 account, ask for backups from iCloud
Unable to add iCloud backups
Found primary account, but not HSA2.  iCloud backups will not be loaded
No primary account.  iCloud Backups will not be loaded
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty backup directory (%@) with error: (%@)
Launching; "NanoBackupDaemon_Sim-125" "1065"
Received memory warning
listener: (%p); connection: (%p)
Connection (%@) refused; Missing entitlement (%@)
Connection invalidated: (%p)
NanoRegistry returned matching device (%p) for pairingID (%@)
%@ couldn't enumerate %@: %@
replyBlock listBackupsOfType: (%p)
Tinker device is: %d
Unknown backup type: %lu
deleteBackupID - backupID: (%@); replyBlock: (%p)
Invalid parameters; backupID: (%@)
Error occured deleting backup (%@): (%@)
Successfully deleted backup (%@)
replyBlock setBackupsEnabled: (%p)
Updating backup state to: %@
backupID: (%@); pairingID: (%@); replyBlock: (%p)
Invalid parameters; backupID: (%@); pairingID: (%@)
Backup for backupID (%@) could not be found
Failed to find device with pairingID: (%@)
Failed to resolve pairing data store path for device: (%@)
Restoring from tombstone backup.
Could not list content of directory (%@)
Failed to unserialize domain (%@) with error: (%@) for data: (%@)
Failed to instanciate NPSDomainAccessor for domain: (%@); pairingID: (%@); pairingDataStore: (%@)
Restoring <%@, %@> to (%@)
Synchronizing domain (%@)
Failed to synchronize domain accessor (%@) for domain (%@) with error: (%@)
Paired device already has a backup directory (%@)
Failed to delete the paired device existing backup directory (%@) with error: (%@)
PreferencesSync directory does not exist. Create it at path (%@)
Failed to create PreferencesSync directory (%@) with error: (%@)
Failed to copy (%@) to (%@) with error: (%@)
backup payload response with error: %@
Unable to download backup payload from iCloud: %@
existingPairingID: (%@); pairingID: (%@); replyBlock: (%p)
Invalid parameters; existingPairingID: (%@); pairingID: (%@)
Failed to find existing device with pairingID: (%@)
Failed to resolve pairing data store path for existing device: (%@)
Excluding the following domains from the restore: (%@)
Restoring domains: (%@)
Failed to instanciate NPSDomainAccessor for domain: (%@); existingPairingID: (%@); existingPairingDataStore: (%@)
Excluding the following keys in domain (%@) from the backup: (%@)
Restoring keys (%@) in domain (%@)
Read <%@, %@>: (%@)
pairingID: (%@); replyBlock: (%p)
Invalid parameters; pairingID: (%@)
Failed to retrieve the pairing data store for pairingID: (%@)
Failed to create backup directory (%@) with error: (%@)
Failed to create backup directory for local settings (%@) with error: (%@)
Excluding the following domains from the backup: (%@)
Capturing domains: (%@)
Backing up keys (%@) in domain (%@)
Failed to serialize domain (%@) backup dictionary (%@) with error: (%@)
Failed to write domain (%@) backup data blob at path (%@) with error: (%@)
Backing up succeeded: (%@)
Migrating Breathe notification settings %@
Migrating mindfulness start of day reminder %@
Migrating mindfulness end of day reminder %@
Migrating mindfulness weekly summary enabled %{BOOL}d
Migrating mindfulness breath rate %d
Migrating mindfulness haptic level %d
idsHandleBackupListRequest called
idsHandleRestoreRequest called
idsHandleDeleteBackupRequest called
%s: No face image
%s: Failed to create directory %{public}@
Caught exception (%{public}@) archiving (%@)
Got error (%{public}@) archiving (%@)
Failed to unarchive data of type %{public}@ with exception %{public}@
Failed to unarchive data of type %{public}@ with error %{public}@
%s: Error %{public}@ sending backup request
%s: Error %{public}@ sending backup response
%s: Error %{public}@ sending restore request
Device is: %@
Not sending backup payload, no default paired device
%s: Error %{public}@ sending restore response
%s: Error %{public}@ sending create backup request
%s: Error %{public}@ sending create backup response
%s: Error %{public}@ sending delete backup request
%s: Error %{public}@ sending delete backup response
Found delayed message with the same pairing id as watch being paired, sending
Created IDS service %@
Invalidating NRRemoteObject service %@
Invalidating NRRemoteObject service %@- complete
(%@): IDS message received type=%ld length=%ld response=%@
(%@): matched response %{public}@, executing block
(%@): no ack block found for response %{public}@, ignoring
(%@): Calling selector %{public}@ for type=%ld length=%ld response=%@ messageSource=%{public}@
(message processing started)
(message processing completed)
(%@): No selector found for type=%ld length=%ld response=%@
%{public}@
No default paired device. Unable to send message
Sent IDS %s %{public}@ bytes=%ld got identifier: %{public}@ %s
IDS message %{public}@ was replaced by another message
IDS error sending request: %{public}@ %{public}@
IDS success sending request: %{public}@
incomingResourceAtURL called
Failed to hardlink url, this will cause a failure eventually: %@
(%@): Calling selector %{public}@ for type=%ld url=%@ messageSource=%{public}@
(%@): No selector found for type=%ld length=%@
executing IDS acknowledgementBlock
create in create - DLog
Failed to retrieve backups: %@
No Backup to create
Create backup of type: %@
Failed to save backup %@
Backup of type %@ successfully created
Export finished with: %@
tempfilepath: %@
Payload size: %lu
Daily Backups: %@
Error creating temp directory: %@
replyBlock(getFaceSanpshotWithCompletionHandler): (%p)
weakSelf: %@
strongSelf: %@
error: (%@)
Got snapshot: %@
Strong self is nil!!!
Connection interrupted
Connection invalidated
_NBBackupFromNBBackupiCloudModel failed with error: %@ - %@
Deleting records: %@
Deleting records failed: %@
Deleting record: %@
Deleting record failed: %@
Device paired, creating initial backup
saving backup with metadata: %@
strong self is %@
saving backup metadata: %@
Import failed, using local data: %@
Error fetching NBBackupiCloudModel objects: %@
Import for backupForID
Predicate is: %@
Backup is: %@
Error fetching backup for ID:%@ %@
results from ID lookup: %@
Failed to load container due to file protection error.  initCoreData shouldn't be called before first unlock
Check: %@
initWithPairingID:
snapshotImage
writeToFile:options:error:
length
init
initWithDeviceUUID:
array
setDelegate:
snapshotImageWithBlock:
addObject:
countByEnumeratingWithState:objects:count:
removeAllObjects
captureWatchFaceForPairingID:toFilePath:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
snapshotImageUpdated:
pairingID
setPairingID:
snapshotProvider
setSnapshotProvider:
snapshotBlocks
setSnapshotBlocks:
queue
setQueue:
.cxx_destruct
_pairingID
_snapshotProvider
_snapshotBlocks
_queue
T@"NSUUID",&,N,V_pairingID
T@"NTKLibrarySelectedFaceSnapshotProvider",&,N,V_snapshotProvider
T@"NSMutableArray",&,N,V_snapshotBlocks
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
dictionaryRepresentation
stringWithFormat:
dictionary
allocWithZone:
copyWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
setObject:forKey:
setBackupID:
hasBackupID
backupID
_backupID
TB,R,N
T@"NSData",&,N,V_backupID
defaultCenter
_handleDeviceUnpaired:
addObserver:selector:name:object:
initWithDelegate:andQueue:
manager
setManager:
startSchedulerIfNecessary
backupList:
restoreBackupWithID:completion:
removeBackupWithID:withCompletion:
restoreBackupWithURL:completion:
backupPayloadForID:completion:
createInitialBackup:
createManualBackup:
createBackupsAndPruneAtDate:withPayload:completion:
remoteObjectReceivedBackupListRequest:requestIdentifier:
remoteObjectReceivedRestoreRequest:requestIdentifier:
remoteObjectReceivedCreateBackupRequest:
remoteObjectReceivedDeleteBackupRequest:requestIdentifier:
remoteObjectReceivedRestorePayloadRequest:requestIdentifier:
deleteBackupWithID:completion:
createManualBackupWithCompletion:
idsService
setIdsService:
workQueue
setWorkQueue:
_idsService
_workQueue
_manager
T@"NBRemoteObjectClassC",&,N,V_idsService
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NBiCloudBackupManager",&,N,V_manager
setError:
hasError
error
_error
T@"NSData",&,N,V_error
dataWithContentsOfFile:options:error:
unarchiveObjectOfClasses:withData:
unarchivedObjectOfClasses:fromData:error:
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchiveObjectOfClasses:withFile:
archiveObject:
removeICloudBackupsFromIndex
metadataIndexReadFromDiskIfNeeded
allKeys
objectForKeyedSubscript:
setObject:forKeyedSubscript:
allValues
loadiCloudBackups:completion:
backupType
uuid
pathToBackupID:
UUIDString
stringByAppendingPathComponent:
newBackupUUID
persistMetadataIndex
defaultManager
removeItemAtPath:error:
pathToBackup:
domain
isEqualToString:
code
removeObjectForKey:
backupForID:completion:
shouldLoadiCloudBackups
metadataIndex
aa_primaryAppleAccount
sharedInstance
aa_altDSID
authKitAccountWithAltDSID:
securityLevelForAccount:
count
_metadataIndexReadFromDiskIfNeeded
pathToBackupIndex
arrayWithObjects:count:
setWithArray:
UUID
fileExistsAtPath:
initWithiCloudBackup:
allBackupsWithTimeout:completion:
iCloudBackupsWithTimeout:completion:
localBackupsWithCompletion:
createNewBackup:
deleteBackupWithID:withCompletion:
purgeCache
allBackups
setMetadataIndex:
iCloudBackup
setICloudBackup:
_allBackups
_metadataIndex
_iCloudBackup
T@"NSMutableDictionary",&,N,V_metadataIndex
T@"NBBackupiCloud",&,N,V_iCloudBackup
T@"NSArray",R,N,V_allBackups
initWithMachServiceName:
resume
dealloc
valueForEntitlement:
boolValue
listBackupsOfType:timeout:completionHandler:
restoreFromBackupID:backupType:forPairingID:completionHandler:
restoreFromPairingID:forPairingID:completionHandler:
createLocalBackupForPairingID:completionHandler:
deleteBackupID:backupType:completionHandler:
setBackupsEnabled:completionHandler:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
getAllDevicesWithArchivedDevices
valueForProperty:
fileURLWithPath:isDirectory:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
unsignedLongLongValue
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
sendBackupListRequestWithResponseBlock:
sendDeleteBackupRequest:withResponseBlock:
numberWithBool:
retrieveGizmoWithPairingID:
contentsOfDirectoryAtPath:error:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
initWithDomain:pairingID:pairingDataStore:
enumerateKeysAndObjectsUsingBlock:
synchronize
localUserDefaultsDirectoryForBackupDirectory:
remoteBackupDirectoryForBackupDirectory:
preferencesSyncBackupDirectoryForPairingDataStore:
stringByDeletingLastPathComponent
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
copyItemAtPath:toPath:error:
migrateLegacyContactPreferencesFromBackup:device:
migrateLegacyDigitalTouchPreferencesFromBackup:device:
migrateFitnessPreferencesFromBackup:device:
migrateBreathePreferencesFromBackup:
sendBackupPayload:withResponseBlock:
sendRestoreRequest:withResponseBlock:
copyDomainListForPairingID:pairingDataStore:
mutableCopy
excludedPerGizmoDomains
minusSet:
copyKeyList
excludedKeysInDomain:
objectForKey:
enumerateObjectsUsingBlock:
migrateBreathePreferencesFromDevice:
dataWithPropertyList:format:options:error:
setUuid:
setBackupType:
date
setLastModificationDate:
recursiveDirectorySize:
numberWithUnsignedLongLong:
setSizeInBytes:
setName:
setProductType:
setProductName:
setSystemVersion:
setSystemBuildVersion:
setMarketingVersion:
setDeviceColor:
setDeviceEnclosureColor:
setBottomEnclosureMaterial:
setTopEnclosureMaterial:
setFcmMaterial:
setBcmWindowMaterial:
setCoverGlassColor:
setHousingColor:
setBackingColor:
sharedConnection
effectiveBoolValueForSetting:
setDiagnosticsOptInEnabled:
locationServicesEnabled
setLocationOptInEnabled:
setDeviceCSN:
setWithObjects:
initWithDomain:pairedDevice:
productName
systemVersion
systemBuildVersion
hasPrefix:
isDevice:mirroringDomain:
legacyContactPreferenceKeys
mappedPreferencesForPreferences:from:to:
_defaultDisplayNameOrder
numberWithInteger:
_shortNameIsEnabled
_defaultShortNameFormat
_shouldPreferNicknames
arrayForKey:
boolForKey:keyExistsAndHasValidFormat:
migrateBreathePreferences
initWithUUIDString:
supportsCapability:
initWithDomain:
dictionaryForKey:
listener:shouldAcceptNewConnection:
xpcListener
setXpcListener:
vmPressureHandler
setVmPressureHandler:
backupIndexManager
setBackupIndexManager:
exclusionListManager
setExclusionListManager:
_xpcListener
_vmPressureHandler
_backupIndexManager
_exclusionListManager
T@"NSXPCListener",&,N,V_xpcListener
T@"NSObject<OS_dispatch_source>",&,N,V_vmPressureHandler
T@"NBBackupIndexManager",&,N,V_backupIndexManager
T@"NBExclusionListManager",&,N,V_exclusionListManager
initWithServiceName:andDelegate:andClientQueue:
idsHandleBackupListRequest:
setProtobufAction:forIncomingRequestsOfType:
idsHandleRestoreRequest:
idsHandlePayloadRestoreRequest:context:
idsHandleDeleteBackupRequest:
setProtobufAction:forIncomingResponsesOfType:
delegate
clientQueue
data
initWithData:
uuidFromData:
outgoingResponseIdentifier
getBytes:length:
initWithUUIDBytes:
getUUIDBytes:
dataWithBytes:length:
bytes
sha256FromData:
base64EncodedStringWithOptions:
writeToFile:atomically:
fileURLWithPath:
dataWithContentsOfURL:
initForReadingFromData:error:
setWithObject:
decodeObjectOfClasses:forKey:
finishDecoding
name
productType
marketingVersion
deviceColor
deviceEnclosureColor
bottomEnclosureMaterial
numberWithInt:
topEnclosureMaterial
fcmMaterial
bcmWindowMaterial
coverGlassColor
housingColor
backingColor
watchFace
setWatchFace:
watchFaceColor
setWatchFaceColor:
locationOptInEnabled
diagnosticsOptInEnabled
lastModificationDate
dateWithTimeIntervalSinceReferenceDate:
sizeInBytes
numberWithLongLong:
activeWatchFaceFileContents
writeWatchFaceToFile:
setActiveWatchFaceFileURL:
deviceCSN
watchFaceData
setWatchFaceData:
dataFromUUID:
integerValue
isLocationOptInEnabled
isDiagnosticsOptInEnabled
timeIntervalSinceReferenceDate
longLongValue
activeWatchFaceFileURL
readWatchFaceFromFile:
setActiveWatchFaceFileContents:
errorWithDomain:code:userInfo:
backups
backupFromProtobuf:
class:fromBytes:
sendRequest:type:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
protobufFromBackup:
addBackups:
sendResponse:type:withRequest:withTimeout:withDescription:onlyOneFor:didSend:
service
nb_defaultPairedDeviceIDIncludingTinkerDevices
delayedRestoreMessages
setDelayedRestoreMessages:
activelyPairingDevice
setValue:forKey:
sendFileRequest:type:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
bytesFromClass:
sendResponse:type:requestUUID:withTimeout:withDescription:onlyOneFor:didSend:
backup
setBackup:
registerProtobufHandlers
sendBackupListResponse:error:withRequestIdentifier:withSentBlock:
sendRestoreResponse:withRequestIdentifier:withSentBlock:
sendCreateBackupRequestWithResponseBlock:
sendCreateBackupResponse:withRequestIdentifier:error:withSentBlock:
sendDeleteBackupResponse:withRequestIdentifier:withSentBlock:
service:devicesChanged:
hasBackup
_backup
T@"NBPBBackupMetadata",&,N,V_backup
connected
setConnected:
selector
setSelector:
method
setMethod:
_connected
_selector
_method
TB,N,V_connected
T:,N,V_selector
T^?,N,V_method
copy
UTF8String
stringByAppendingString:
initWithService:
addDelegate:queue:
removeDelegate:
invalidate
type
isResponse
context
incomingResponseIdentifier
numberWithLong:
fromID
methodForSelector:
_storeProtobufAction:messageType:messageSendType:
handleIncomingMessage:
sendRequest:type:didSend:
sendRequest:type:withTimeout:didSend:
sendRequest:type:withTimeout:withDescription:didSend:
_sendMessage:type:requestUUID:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
_queueSendMessage:orPath:type:requestUUID:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
userInfo
doubleValue
numberWithDouble:
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
stringByReplacingOccurrencesOfString:withString:
_messageResponseTimeout:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
scheduleInQueue:
shortValue
linkItemAtURL:toURL:error:
messagesShouldHaveValidSender
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendRequest:type:
setClientQueue:
_idsSendIDToCompletionHandler
_idsSendIDToResponseHandler
_idsSendIDToTimer
_serviceName
_idsQueue
_idsRequestMessageTypeToSelector
_clientQueue
_delegate
_delayedRestoreMessages
_service
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
T@,W,N,V_delegate
T@"NSDictionary",&,N,V_delayedRestoreMessages
T@"IDSService",R,N,V_service
_getGestaltString:
_initCoreData
setPersistentContainer:
_prune:
arrayByAddingObject:
requestExportWithCompletion:
saveBackup:withDate:payload:withCompletion:
_determineBackupToCreateFromBackupList:withCompletion:
getBackupsWithCompletion:
payload
tempDirString
path
_pruneDailyBackups:withPruneAction:
_pruneWeeklyBackups:withPruneAction:
_pruneMonthlyBackups:withPruneAction:
_pruneYearlyBackups:withPruneAction:
removeBackups:
_seperateBackupListsByType:withCompletion:
raise:format:
connection
internalQueue
remoteObjectProxyWithErrorHandler:
snapshotLibrarySelectedFaceForDeviceUUID:options:completion:
initWithMachServiceName:options:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setNtkXpcConnection:
_NBBackupFromNBBackupiCloudModel:
backupMetaData
decodeObjectOfClass:forKey:
dateCreated
_pruneBackups:backupsToKeep:withPruneAction:
compare:
sortedArrayUsingComparator:
objectAtIndexedSubscript:
arrayByAddingObjectsFromArray:
_shouldCreateMonthly:
_shouldCreateWeekly:
_shouldCreateDaily:
sortBackupsByDate:
lastObject
setMonth:
currentCalendar
dateByAddingComponents:toDate:options:
setDay:
serialNumber
viewContext
deleteObject:
save:
fetchRequest
setPropertiesToFetch:
executeFetchRequest:error:
localizedDescription
requestImportWithCompletion:
fetchRequestWithEntityName:
predicateWithFormat:
setPredicate:
newBackgroundContext
initWithOptions:completionBlock:
executeRequest:error:
performBlock:
success
madeChanges
performBlockAndWait:
bundleWithIdentifier:
URLForResource:withExtension:
initWithContentsOfURL:
initWithName:managedObjectModel:
_configureStoreDescriptions
persistentContainer
isDataProtectionError:
loadPersistentStoresWithCompletionHandler:
intValue
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
initWithURL:
setContainerIdentifier:
setUseDeviceToDeviceEncryption:
initWithOptions:
setOption:forMirroringKey:
setOption:forKey:
setPersistentStoreDescriptions:
setYear:
setHour:
setSecond:
dateFromPast:months:days:hours:seconds:
createBackupsAndPrune
writeBackupToFile:completion:
_getGestaltNumber:
getFaceSanpshotWithCompletionHandler:
deleteAllBackupsWithCompletion:
requestImport
injectBackups:completion:
setSerialNumber:
mirroringOptions
npsManager
testQueue
icloudQueue
setInternalQueue:
inFlightBackupMetaData
setInFlightBackupMetaData:
finishMetaDataCompletion
setFinishMetaDataCompletion:
ntkXpcConnection
_serialNumber
_persistentContainer
_mirroringOptions
_npsManager
_testQueue
_icloudQueue
_internalQueue
_inFlightBackupMetaData
_finishMetaDataCompletion
_ntkXpcConnection
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSCloudKitMirroringDelegateOptions",R,N,V_mirroringOptions
T@"NPSManager",R,N,V_npsManager
T@"NSObject<OS_dispatch_queue>",R,V_testQueue
T@"NSObject<OS_dispatch_queue>",R,V_icloudQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"NBBackup",&,N,V_inFlightBackupMetaData
T@?,C,N,V_finishMetaDataCompletion
T@"NSXPCConnection",&,N,V_ntkXpcConnection
T@"NSString",&,N,V_serialNumber
currentRunLoop
hasUuid
hasName
hasProductType
hasProductName
hasSystemVersion
hasSystemBuildVersion
hasMarketingVersion
hasDeviceColor
hasDeviceEnclosureColor
setHasBottomEnclosureMaterial:
hasBottomEnclosureMaterial
setHasTopEnclosureMaterial:
hasTopEnclosureMaterial
setHasFcmMaterial:
hasFcmMaterial
setHasBcmWindowMaterial:
hasBcmWindowMaterial
setHasCoverGlassColor:
hasCoverGlassColor
setHasHousingColor:
hasHousingColor
setHasBackingColor:
hasBackingColor
hasWatchFace
hasWatchFaceColor
setHasLocationOptInEnabled:
hasLocationOptInEnabled
setHasDiagnosticsOptInEnabled:
hasDiagnosticsOptInEnabled
setHasLastModificationDate:
hasLastModificationDate
setHasSizeInBytes:
hasSizeInBytes
hasActiveWatchFaceFileContents
setHasBackupType:
hasBackupType
hasDeviceCSN
hasWatchFaceData
_lastModificationDate
_sizeInBytes
_activeWatchFaceFileContents
_backingColor
_backupType
_bcmWindowMaterial
_bottomEnclosureMaterial
_coverGlassColor
_deviceCSN
_deviceColor
_deviceEnclosureColor
_fcmMaterial
_housingColor
_marketingVersion
_name
_productName
_productType
_systemBuildVersion
_systemVersion
_topEnclosureMaterial
_uuid
_watchFace
_watchFaceColor
_watchFaceData
_diagnosticsOptInEnabled
_locationOptInEnabled
_has
T@"NSData",&,N,V_uuid
T@"NSString",&,N,V_name
T@"NSString",&,N,V_productType
T@"NSString",&,N,V_productName
T@"NSString",&,N,V_systemVersion
T@"NSString",&,N,V_systemBuildVersion
T@"NSString",&,N,V_marketingVersion
T@"NSString",&,N,V_deviceColor
T@"NSString",&,N,V_deviceEnclosureColor
TB,N
Ti,N,V_bottomEnclosureMaterial
Ti,N,V_topEnclosureMaterial
Ti,N,V_fcmMaterial
Ti,N,V_bcmWindowMaterial
Ti,N,V_coverGlassColor
Ti,N,V_housingColor
Ti,N,V_backingColor
T@"NSString",&,N,V_watchFace
T@"NSString",&,N,V_watchFaceColor
TB,N,V_locationOptInEnabled
TB,N,V_diagnosticsOptInEnabled
Td,N,V_lastModificationDate
Tq,N,V_sizeInBytes
T@"NSData",&,N,V_activeWatchFaceFileContents
Ti,N,V_backupType
T@"NSString",&,N,V_deviceCSN
T@"NSData",&,N,V_watchFaceData
linkedDevicesWithRelationship:
arrayWithCapacity:
addObjectsFromArray:
nb_mineTinkerDevices
isDefaultPairedDevice
nonActiveDeviceForIDSDevice:
nb_nrDevice
objectAtIndex:
initWithCapacity:
backupsCount
clearBackups
backupsAtIndex:
backupsType
setBackups:
_backups
T@"NSMutableArray",&,N,V_backups
T@"NSString",C,D,N
T@"NSData",&,D,N
Ts,D,N
ckRecordID
ckRecordSystemFields
T@"NSDate",C,D,N
T@"NSUUID",C,D,N
com.apple.NanoBackup.snapshotter
v16@?0@"UIImage"8
v8@?0
NTKFaceSnapshotClient
sharedInstance
%@ %@
backupID
com.apple.nanobackupd
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSError"8
restoreWithURL: %@
iCloudBackupPayloadToPath: %@
v24@?0@"NSString"8@"NSError"16
error
v16@?0@"NSMutableDictionary"8
@"NSError"16@?0@"NBBackup"8
v16@?0@"NBBackup"8
index
com.apple.nanobackup
com.apple.PeoplePicker
personNameOrdering
personShortNameFormatEnabled
personShortNameFormat
personShortNamePreferNicknames
com.apple.ET
FriendList
DidNormalizeFriendListDestinations
ETFriendGroupTitles
com.apple.nanolifestyle.privacy
EnableHeartRate
EnableFitnessTracking
com.apple.DeepBreathing
com.apple.Mind
com.apple.bulletinboard.apps
RemindersPerDay
EnableStartOfDayReminder
EnableEndOfDayReminder
EnableWeeklySummary
BreathRate
HapticLevel
BPSNanoBulletinSectionId
B24@?0@"NSURL"8@"NSError"16
Local
Remote
v16@?0@"NSArray"8
v32@?0@"NSString"8@16^B24
@"NSError"16@?0@"NSString"8
v24@?0@8^B16
v24@?0@"NSString"8^B16
@"NSError"8@?0
ActiveWatchFace.png
v32@?0@"NSUUID"8@"NSString"16@?<@"NSError"@?@"NBBackup">24
BPSNanoBulletinShowsCustomSettings
v32@?0@8@16^B24
2A51E7B3-1B80-4981-9F09-F725BC3A8065
NBMessagePathKey
NBMessageBlockKey
com.apple.private.alloy.nanobackup
-[NBRemoteObjectClassC writeWatchFaceToFile:]
NanoBackup
WatchFaceImages
NanoBackup Backup Metadata Request
-[NBRemoteObjectClassC sendBackupListRequestWithResponseBlock:]_block_invoke
NBErrorDomain
v16@?0@"IDSProtobuf"8
NanoBackup Backup Metadata Response
-[NBRemoteObjectClassC sendBackupListResponse:error:withRequestIdentifier:withSentBlock:]_block_invoke
NanoBackup Restore Request
-[NBRemoteObjectClassC sendRestoreRequest:withResponseBlock:]_block_invoke
B16@?0@"NRDevice"8
NanoBackup Restore Request From Payload
-[NBRemoteObjectClassC sendBackupPayload:withResponseBlock:]_block_invoke
NanoBackup Restore Response
-[NBRemoteObjectClassC sendRestoreResponse:withRequestIdentifier:withSentBlock:]_block_invoke
NanoBackup Create Backup Request
-[NBRemoteObjectClassC sendCreateBackupRequestWithResponseBlock:]_block_invoke
NanoBackup Create Backup Response
-[NBRemoteObjectClassC sendCreateBackupResponse:withRequestIdentifier:error:withSentBlock:]_block_invoke
NanoBackup Delete Backup Request
-[NBRemoteObjectClassC sendDeleteBackupRequest:withResponseBlock:]_block_invoke
NanoBackup Delete Backup Response
-[NBRemoteObjectClassC sendDeleteBackupResponse:withRequestIdentifier:withSentBlock:]_block_invoke
backup
com.apple.nanobackup.remoteobject
.client
com.apple.nanoregistryd
NRRemoteObject invalidated
response
request
MessageType
Error sending %s %@ - %@
com.apple.%s.%@
fireAndForget is ON
com.apple.watch.setup
backupType
SerialNumber
dateCreated
NTKSnapshotUIOnlyKey
NTKSnapshotUnadornedContentKey
NTKSnapshotUseCanonicalContentKey
NTKSnapshotShouldUseSampleComplicationTemplatesKey
NTKSnapshotIgnoreSnapshotImages
NTKSnapshotPersistableKey
com.apple.nanotimekit.facesnapshotserver
com.apple.nanobackup.iCloud
com.apple.nanobackup.ntkQueue
v16@?0@"NSCloudKitMirroringResult"8
v24@?0@"NSError"8@"NBBackupiCloudModel"16
v16@?0q8
com.apple.NanoBackup
backupID could not be found
restoreData
v24@?0@"NBBackupiCloudModel"8@"NSError"16
v16@?0@"NBBackupiCloudModel"8
v48@?0@"NSArray"8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40
NONE
Daily
Weekly
Monthly
Yearly
Manual
nil replyBlock
q24@?0@"NBBackupiCloudModel"8@"NBBackupiCloudModel"16
NBBackupiCloudModel
%K = %@
export request failed to execute: %@
Got import result back: %d madeChanges: %d
Import request failed to execute: %@
Model
momd
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Failed to load Core Data stack: %@
Store loaded
NanoBackupModel
sqlite
com.apple.backuptestqueue
Check: Day: I is: %d
Check: week: I is: %d
Check: first month: I is: %d
Check: month: I is: %d
Check: year 1: I is: %d
Check: other years: I is: %d
Timeout waiting for backup to complete
Starting server
uuid
name
productType
productName
systemVersion
systemBuildVersion
marketingVersion
deviceColor
deviceEnclosureColor
bottomEnclosureMaterial
topEnclosureMaterial
fcmMaterial
bcmWindowMaterial
coverGlassColor
housingColor
backingColor
watchFace
watchFaceColor
locationOptInEnabled
diagnosticsOptInEnabled
lastModificationDate
sizeInBytes
activeWatchFaceFileContents
deviceCSN
watchFaceData
backups
NBWatchFaceSnapshotter
NTKLibrarySelectedFaceSnapshotProviderDelegate
NSObject
NBPBCreateBackupRequest
NSCopying
NBPBDeleteBackupRequest
NBBackupiCloud
NBRemoteObjectClassCDelegate
NBPBRestoreResponse
NBKeyedArchiverUtil
NBBackupIndexManager
NBServerProtocol
NBServer
NSXPCListenerDelegate
NBRemoteObjectClassC
NBPBCreateBackupResponse
NBPBSelectorItem
NBRemoteObject
IDSServiceDelegate
XPCFaceSnapshotServer
NBiCloudBackupManager
NBPBDeleteBackupResponse
NBPBBackupListRequest
NBPBBackupMetadata
NBPBRestoreRequest
NBPBBackupListResponse
NBBackupiCloudModel
CoreDataProperties
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"UIImage"16
@24@0:8@16
v24@0:8@?16
v16@0:8
@"NSUUID"
@"NTKLibrarySelectedFaceSnapshotProvider"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@24@0:8^{_NSZone=}16
@"NSData"
v32@0:8@16@24
v32@0:8@"NBRemoteObjectClassC"16@24
v32@0:8@"NSUUID"16@24
v32@0:8@"NSURL"16@24
v32@0:8@16@?24
v40@0:8@16@24@?32
@"NBRemoteObjectClassC"
@"NBiCloudBackupManager"
v32@0:8q16@?24
@"NSArray"
@"NSMutableDictionary"
@"NBBackupiCloud"
v40@0:8Q16q24@?32
v48@0:8@16Q24@32@?40
v40@0:8@16Q24@?32
v28@0:8B16@?20
v40@0:8Q16q24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSUUID"16Q24@"NSUUID"32@?<v@?@"NSError">40
v40@0:8@"NSUUID"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NBBackup"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSUUID"16Q24@?<v@?@"NSError">32
v28@0:8B16@?<v@?@"NSError">20
Q24@0:8@16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"NSObject<OS_dispatch_source>"
@"NBBackupIndexManager"
@"NBExclusionListManager"
@32@0:8#16@24
v48@0:8@16@24@32@?40
@"NBPBBackupMetadata"
v20@0:8B16
:16@0:8
v24@0:8:16
^?16@0:8
v24@0:8^?16
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@40@0:8@16@24@32
v36@0:8:16S24q28
v28@0:8:16S24
v28@0:8@16S24
v36@0:8@16S24@?28
v44@0:8@16S24@28@?36
v52@0:8@16S24@28@36@?44
v76@0:8@16S24@28@36@44@52@?60@?68
v68@0:8@16S24@28@36@44@52@?60
v84@0:8@16S24@28@36@44@52@60@?68@?76
v92@0:8@16@24S32@36@44@52@60@68@?76@?84
@"NSString"
@"NSDictionary"
@"IDSService"
v40@0:8@"NSUUID"16@"NSDictionary"24@?<v@?@"UIImage">32
@24@0:8^{__CFString=}16
v48@0:8q16@24@32@?40
@56@0:8Q16Q24Q32Q40Q48
v28@0:8i16@?20
@?16@0:8
@"NSPersistentContainer"
@"NSCloudKitMirroringDelegateOptions"
@"NPSManager"
@"NBBackup"
@"NSXPCConnection"
v20@0:8i16
v24@0:8d16
v24@0:8q16
i16@0:8
d16@0:8
q16@0:8
{?="lastModificationDate"b1"sizeInBytes"b1"backingColor"b1"backupType"b1"bcmWindowMaterial"b1"bottomEnclosureMaterial"b1"coverGlassColor"b1"fcmMaterial"b1"housingColor"b1"topEnclosureMaterial"b1"diagnosticsOptInEnabled"b1"locationOptInEnabled"b1}
@24@0:8Q16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>RLRS9CRG76.com.apple.watch.setup</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>identity</string>
</array>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.watch.setup</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.nanopreferencessync.backuprestore</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.watch.setup</key>
<string>com.apple.watch.setup</string>
</dict>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nanobackup</string>
</array>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.NanoTimeKit.FaceSupport</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nanotimekit.facesnapshotserver</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
</dict>
</plist>
Failed to instantiate the Face Snapshot singleton
Failed to write clock face data (%lu bytes) to (%@) with error: (%@)
Failed to retrieve the PNG representation of the snapshot
Failed to retrieve the watch face snapshot
Requesting face snapshot from NTK
Timed out waiting for snapshot from NTK
Face snapshot received from NTK inline
Face snapshot received from NTK via delegate call
Add Observer for: %@
restoreWithID: %@
createInitialBackup finshed with error %@
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Got backup: %@ for ID: %@
Failed to remove Backup: %@
Backup (%@) could not be found
timed out waiting for result from icloud
got iCloud HSA2 account, ask for backups from iCloud
Unable to add iCloud backups
Found primary account, but not HSA2.  iCloud backups will not be loaded
No primary account.  iCloud Backups will not be loaded
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty backup directory (%@) with error: (%@)
Launching; "NanoBackupDaemon_Sim-125" "1065"
Received memory warning
listener: (%p); connection: (%p)
Connection (%@) refused; Missing entitlement (%@)
Connection invalidated: (%p)
NanoRegistry returned matching device (%p) for pairingID (%@)
%@ couldn't enumerate %@: %@
replyBlock listBackupsOfType: (%p)
Tinker device is: %d
Unknown backup type: %lu
deleteBackupID - backupID: (%@); replyBlock: (%p)
Invalid parameters; backupID: (%@)
Error occured deleting backup (%@): (%@)
Successfully deleted backup (%@)
replyBlock setBackupsEnabled: (%p)
Updating backup state to: %@
backupID: (%@); pairingID: (%@); replyBlock: (%p)
Invalid parameters; backupID: (%@); pairingID: (%@)
Backup for backupID (%@) could not be found
Failed to find device with pairingID: (%@)
Failed to resolve pairing data store path for device: (%@)
Restoring from tombstone backup.
Could not list content of directory (%@)
Failed to unserialize domain (%@) with error: (%@) for data: (%@)
Failed to instanciate NPSDomainAccessor for domain: (%@); pairingID: (%@); pairingDataStore: (%@)
Restoring <%@, %@> to (%@)
Synchronizing domain (%@)
Failed to synchronize domain accessor (%@) for domain (%@) with error: (%@)
Paired device already has a backup directory (%@)
Failed to delete the paired device existing backup directory (%@) with error: (%@)
PreferencesSync directory does not exist. Create it at path (%@)
Failed to create PreferencesSync directory (%@) with error: (%@)
Failed to copy (%@) to (%@) with error: (%@)
backup payload response with error: %@
Unable to download backup payload from iCloud: %@
existingPairingID: (%@); pairingID: (%@); replyBlock: (%p)
Invalid parameters; existingPairingID: (%@); pairingID: (%@)
Failed to find existing device with pairingID: (%@)
Failed to resolve pairing data store path for existing device: (%@)
Excluding the following domains from the restore: (%@)
Restoring domains: (%@)
Failed to instanciate NPSDomainAccessor for domain: (%@); existingPairingID: (%@); existingPairingDataStore: (%@)
Excluding the following keys in domain (%@) from the backup: (%@)
Restoring keys (%@) in domain (%@)
Read <%@, %@>: (%@)
pairingID: (%@); replyBlock: (%p)
Invalid parameters; pairingID: (%@)
Failed to retrieve the pairing data store for pairingID: (%@)
Failed to create backup directory (%@) with error: (%@)
Failed to create backup directory for local settings (%@) with error: (%@)
Excluding the following domains from the backup: (%@)
Capturing domains: (%@)
Backing up keys (%@) in domain (%@)
Failed to serialize domain (%@) backup dictionary (%@) with error: (%@)
Failed to write domain (%@) backup data blob at path (%@) with error: (%@)
Backing up succeeded: (%@)
Migrating Breathe notification settings %@
Migrating mindfulness start of day reminder %@
Migrating mindfulness end of day reminder %@
Migrating mindfulness weekly summary enabled %{BOOL}d
Migrating mindfulness breath rate %d
Migrating mindfulness haptic level %d
idsHandleBackupListRequest called
idsHandleRestoreRequest called
idsHandleDeleteBackupRequest called
%s: No face image
%s: Failed to create directory %{public}@
Caught exception (%{public}@) archiving (%@)
Got error (%{public}@) archiving (%@)
Failed to unarchive data of type %{public}@ with exception %{public}@
Failed to unarchive data of type %{public}@ with error %{public}@
%s: Error %{public}@ sending backup request
%s: Error %{public}@ sending backup response
%s: Error %{public}@ sending restore request
Device is: %@
Not sending backup payload, no default paired device
%s: Error %{public}@ sending restore response
%s: Error %{public}@ sending create backup request
%s: Error %{public}@ sending create backup response
%s: Error %{public}@ sending delete backup request
%s: Error %{public}@ sending delete backup response
Found delayed message with the same pairing id as watch being paired, sending
Created IDS service %@
Invalidating NRRemoteObject service %@
Invalidating NRRemoteObject service %@- complete
(%@): IDS message received type=%ld length=%ld response=%@
(%@): matched response %{public}@, executing block
(%@): no ack block found for response %{public}@, ignoring
(%@): Calling selector %{public}@ for type=%ld length=%ld response=%@ messageSource=%{public}@
(message processing started)
(message processing completed)
(%@): No selector found for type=%ld length=%ld response=%@
%{public}@
No default paired device. Unable to send message
Sent IDS %s %{public}@ bytes=%ld got identifier: %{public}@ %s
IDS message %{public}@ was replaced by another message
IDS error sending request: %{public}@ %{public}@
IDS success sending request: %{public}@
incomingResourceAtURL called
Failed to hardlink url, this will cause a failure eventually: %@
(%@): Calling selector %{public}@ for type=%ld url=%@ messageSource=%{public}@
(%@): No selector found for type=%ld length=%@
executing IDS acknowledgementBlock
create in create - DLog
Failed to retrieve backups: %@
No Backup to create
Create backup of type: %@
Failed to save backup %@
Backup of type %@ successfully created
Export finished with: %@
tempfilepath: %@
Payload size: %lu
Daily Backups: %@
Error creating temp directory: %@
replyBlock(getFaceSanpshotWithCompletionHandler): (%p)
weakSelf: %@
strongSelf: %@
error: (%@)
Got snapshot: %@
Strong self is nil!!!
Connection interrupted
Connection invalidated
_NBBackupFromNBBackupiCloudModel failed with error: %@ - %@
Deleting records: %@
Deleting records failed: %@
Deleting record: %@
Deleting record failed: %@
Device paired, creating initial backup
saving backup with metadata: %@
strong self is %@
saving backup metadata: %@
Import failed, using local data: %@
Error fetching NBBackupiCloudModel objects: %@
Import for backupForID
Predicate is: %@
Backup is: %@
Error fetching backup for ID:%@ %@
results from ID lookup: %@
Failed to load container due to file protection error.  initCoreData shouldn't be called before first unlock
Check: %@
bundleWithIdentifier:
setPersistentStoreDescriptions:
synchronize
errorWithDomain:code:userInfo:
setExportedInterface:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
URLByAppendingPathExtension:
URLForResource:withExtension:
writeToFile:options:error:
_shouldPreferNicknames
setWithObject:
defaultCenter
numberWithUnsignedLongLong:
arrayByAddingObjectsFromArray:
initWithService:
UUIDString
supportsCapability:
lastObject
methodForSelector:
writeToFile:atomically:
hasPrefix:
arrayByAddingObject:
initWithProtobufData:type:isResponse:
decodeObjectOfClasses:forKey:
setWithArray:
numberWithUnsignedInteger:
success
setOption:forMirroringKey:
propertyListWithData:options:format:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
boolValue
getUUIDBytes:
decodeObjectOfClass:forKey:
numberWithLongLong:
array
isResponse
boolForKey:keyExistsAndHasValidFormat:
setOption:forKey:
enumerateObjectsUsingBlock:
stringWithFormat:
getResourceValue:forKey:error:
countByEnumeratingWithState:objects:count:
initWithOptions:completionBlock:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
numberWithLong:
stringByReplacingOccurrencesOfString:withString:
dateWithTimeIntervalSinceReferenceDate:
archivedDataWithRootObject:requiringSecureCoding:error:
_defaultDisplayNameOrder
enumerateKeysAndObjectsUsingBlock:
getBytes:length:
_shortNameIsEnabled
removeObjectForKey:
setObject:forKeyedSubscript:
count
initWithOptions:
numberWithInteger:
isLocationOptInEnabled
base64EncodedStringWithOptions:
effectiveBoolValueForSetting:
viewContext
stringByDeletingLastPathComponent
setObject:forKey:
removeItemAtPath:error:
initWithName:managedObjectModel:
setValue:forKey:
numberWithInt:
allocWithZone:
predicateWithFormat:
doubleValue
stringByAppendingString:
isEqualToString:
getAllDevicesWithArchivedDevices
valueForProperty:
copyKeyList
dateByAddingComponents:toDate:options:
initWithMachServiceName:options:
numberWithDouble:
allValues
domain
stringByAppendingPathComponent:
removeDelegate:
mappedPreferencesForPreferences:from:to:
copyItemAtPath:toPath:error:
getAllDevicesWithArchivedAltAccountDevicesMatching:
valueForEntitlement:
setUseDeviceToDeviceEncryption:
date
setDay:
numberWithBool:
initWithMachServiceName:
allKeys
isDiagnosticsOptInEnabled
setMonth:
dictionaryWithObjects:forKeys:count:
fromID
copyDomainListForPairingID:pairingDataStore:
nonActiveDeviceForIDSDevice:
sendProtobuf:toDestinations:priority:options:identifier:error:
dataWithPropertyList:format:options:error:
initWithDomain:pairingID:pairingDataStore:
sortedArrayUsingComparator:
URLByAppendingPathComponent:isDirectory:
madeChanges
setMinimumEarlyFireProportion:
copy
firstObject
dataWithContentsOfURL:
initWithDomain:pairedDevice:
addObserver:selector:name:object:
isDefaultPairedDevice
setContainerIdentifier:
performBlockAndWait:
dictionaryForKey:
userInfo
context
longLongValue
finishDecoding
removeAllObjects
addObjectsFromArray:
initWithDomain:
newBackgroundContext
dataWithContentsOfFile:options:error:
dictionary
performBlock:
setClasses:forSelector:argumentIndex:ofReply:
locationServicesEnabled
contentsOfDirectoryAtPath:error:
fileURLWithPath:isDirectory:
unsignedLongLongValue
dataWithContentsOfFile:
initWithDeviceUUID:
addObject:
fileURLWithPath:
unarchivedObjectOfClasses:fromData:error:
addDelegate:queue:
dataWithBytes:length:
localizedDescription
compare:
fileExistsAtPath:
setSecond:
initWithData:
fetchRequestWithEntityName:
interfaceWithProtocol:
code
initWithContentsOfURL:
setRemoteObjectInterface:
data
mutableCopy
securityLevelForAccount:
integerValue
remoteObjectProxyWithErrorHandler:
type
setInvalidationHandler:
initWithCapacity:
currentRunLoop
scheduleInQueue:
activeWatchFaceFileURL
minusSet:
intValue
deleteObject:
path
shortValue
setInterruptionHandler:
currentCalendar
initForReadingFromData:error:
URLForDirectory:inDomain:appropriateForURL:create:error:
outgoingResponseIdentifier
loadPersistentStoresWithCompletionHandler:
sharedInstance
executeRequest:error:
setPropertiesToFetch:
timeIntervalSinceReferenceDate
save:
UTF8String
activeDeviceSelectorBlock
setActiveWatchFaceFileURL:
sharedConnection
authKitAccountWithAltDSID:
linkedDevicesWithRelationship:
objectForKeyedSubscript:
initWithUUIDString:
setHour:
executeFetchRequest:error:
_defaultShortNameFormat
incomingResponseIdentifier
aa_primaryAppleAccount
initWithUUIDBytes:
objectForKey:
arrayWithObjects:count:
linkItemAtURL:toURL:error:
excludedPerGizmoDomains
aa_altDSID
arrayWithCapacity:
setYear:
initWithURL:
objectAtIndexedSubscript:
raise:format:
bytes
setPredicate:
excludedKeysInDomain:
setExportedObject:
length
objectAtIndex:
resume
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
arrayForKey:
setWithObjects:
UUID
defaultManager
init
captureWatchFaceForPairingID:toFilePath:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
snapshotImageUpdated:
initWithPairingID:
snapshotImage
snapshotImageWithBlock:
pairingID
setPairingID:
snapshotProvider
setSnapshotProvider:
snapshotBlocks
setSnapshotBlocks:
queue
setQueue:
.cxx_destruct
_pairingID
_snapshotProvider
_snapshotBlocks
_queue
T@"NSUUID",&,N,V_pairingID
T@"NTKLibrarySelectedFaceSnapshotProvider",&,N,V_snapshotProvider
T@"NSMutableArray",&,N,V_snapshotBlocks
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
copyWithZone:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
hasBackupID
backupID
setBackupID:
_backupID
TB,R,N
T@"NSData",&,N,V_backupID
_handleDeviceUnpaired:
remoteObjectReceivedBackupListRequest:requestIdentifier:
remoteObjectReceivedRestoreRequest:requestIdentifier:
remoteObjectReceivedCreateBackupRequest:
remoteObjectReceivedDeleteBackupRequest:requestIdentifier:
remoteObjectReceivedRestorePayloadRequest:requestIdentifier:
backupList:
restoreBackupWithID:completion:
deleteBackupWithID:completion:
restoreBackupWithURL:completion:
backupPayloadForID:completion:
startSchedulerIfNecessary
createInitialBackup:
createManualBackupWithCompletion:
createBackupsAndPruneAtDate:withPayload:completion:
idsService
setIdsService:
workQueue
setWorkQueue:
manager
setManager:
_idsService
_workQueue
_manager
T@"NBRemoteObjectClassC",&,N,V_idsService
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NBiCloudBackupManager",&,N,V_manager
hasError
error
setError:
_error
T@"NSData",&,N,V_error
unarchiveObjectOfClasses:withFile:
unarchiveObjectOfClasses:withData:
archiveObject:
initWithiCloudBackup:
allBackupsWithTimeout:completion:
iCloudBackupsWithTimeout:completion:
localBackupsWithCompletion:
backupForID:completion:
pathToBackup:
pathToBackupID:
createNewBackup:
deleteBackupWithID:withCompletion:
purgeCache
loadiCloudBackups:completion:
shouldLoadiCloudBackups
removeICloudBackupsFromIndex
metadataIndexReadFromDiskIfNeeded
_metadataIndexReadFromDiskIfNeeded
persistMetadataIndex
pathToBackupIndex
newBackupUUID
allBackups
metadataIndex
setMetadataIndex:
iCloudBackup
setICloudBackup:
_allBackups
_metadataIndex
_iCloudBackup
T@"NSMutableDictionary",&,N,V_metadataIndex
T@"NBBackupiCloud",&,N,V_iCloudBackup
T@"NSArray",R,N,V_allBackups
dealloc
listBackupsOfType:timeout:completionHandler:
restoreFromBackupID:backupType:forPairingID:completionHandler:
restoreFromPairingID:forPairingID:completionHandler:
createLocalBackupForPairingID:completionHandler:
deleteBackupID:backupType:completionHandler:
setBackupsEnabled:completionHandler:
retrieveGizmoWithPairingID:
recursiveDirectorySize:
localUserDefaultsDirectoryForBackupDirectory:
remoteBackupDirectoryForBackupDirectory:
legacyContactPreferenceKeys
listener:shouldAcceptNewConnection:
preferencesSyncBackupDirectoryForPairingDataStore:
isDevice:mirroringDomain:
migrateLegacyContactPreferencesFromBackup:device:
migrateLegacyDigitalTouchPreferencesFromBackup:device:
migrateFitnessPreferencesFromBackup:device:
migrateBreathePreferencesFromBackup:
migrateBreathePreferencesFromDevice:
migrateBreathePreferences
xpcListener
setXpcListener:
vmPressureHandler
setVmPressureHandler:
backupIndexManager
setBackupIndexManager:
exclusionListManager
setExclusionListManager:
_xpcListener
_vmPressureHandler
_backupIndexManager
_exclusionListManager
T@"NSXPCListener",&,N,V_xpcListener
T@"NSObject<OS_dispatch_source>",&,N,V_vmPressureHandler
T@"NBBackupIndexManager",&,N,V_backupIndexManager
T@"NBExclusionListManager",&,N,V_exclusionListManager
initWithServiceName:andDelegate:andClientQueue:
idsHandleBackupListRequest:
idsHandleRestoreRequest:
idsHandlePayloadRestoreRequest:context:
idsHandleDeleteBackupRequest:
initWithDelegate:andQueue:
registerProtobufHandlers
uuidFromData:
dataFromUUID:
sha256FromData:
writeWatchFaceToFile:
readWatchFaceFromFile:
bytesFromClass:
class:fromBytes:
backupFromProtobuf:
protobufFromBackup:
sendBackupListRequestWithResponseBlock:
sendBackupListResponse:error:withRequestIdentifier:withSentBlock:
sendRestoreRequest:withResponseBlock:
activelyPairingDevice
sendBackupPayload:withResponseBlock:
sendRestoreResponse:withRequestIdentifier:withSentBlock:
sendCreateBackupRequestWithResponseBlock:
sendCreateBackupResponse:withRequestIdentifier:error:withSentBlock:
sendDeleteBackupRequest:withResponseBlock:
sendDeleteBackupResponse:withRequestIdentifier:withSentBlock:
service:devicesChanged:
hasBackup
backup
setBackup:
_backup
T@"NBPBBackupMetadata",&,N,V_backup
connected
setConnected:
selector
setSelector:
method
setMethod:
_connected
_selector
_method
TB,N,V_connected
T:,N,V_selector
T^?,N,V_method
handleIncomingMessage:
_messageResponseTimeout:
messagesShouldHaveValidSender
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
invalidate
_storeProtobufAction:messageType:messageSendType:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
sendRequest:type:
sendRequest:type:didSend:
sendRequest:type:withTimeout:didSend:
sendRequest:type:withTimeout:withDescription:didSend:
sendRequest:type:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
sendFileRequest:type:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
sendResponse:type:withRequest:withTimeout:withDescription:onlyOneFor:didSend:
sendResponse:type:requestUUID:withTimeout:withDescription:onlyOneFor:didSend:
_sendMessage:type:requestUUID:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
_queueSendMessage:orPath:type:requestUUID:withTimeout:withResponseTimeout:withDescription:onlyOneFor:didSend:andResponse:
clientQueue
setClientQueue:
delegate
setDelegate:
delayedRestoreMessages
setDelayedRestoreMessages:
service
_idsSendIDToCompletionHandler
_idsSendIDToResponseHandler
_idsSendIDToTimer
_serviceName
_idsQueue
_idsRequestMessageTypeToSelector
_clientQueue
_delegate
_delayedRestoreMessages
_service
T@"NSObject<OS_dispatch_queue>",&,N,V_clientQueue
T@,W,N,V_delegate
T@"NSDictionary",&,N,V_delayedRestoreMessages
T@"IDSService",R,N,V_service
snapshotLibrarySelectedFaceForDeviceUUID:options:completion:
isDataProtectionError:
createBackupsAndPrune
writeBackupToFile:completion:
_prune:
_getGestaltString:
_getGestaltNumber:
tempDirString
getFaceSanpshotWithCompletionHandler:
connection
deleteAllBackupsWithCompletion:
_NBBackupFromNBBackupiCloudModel:
_pruneDailyBackups:withPruneAction:
_pruneWeeklyBackups:withPruneAction:
_pruneMonthlyBackups:withPruneAction:
_pruneYearlyBackups:withPruneAction:
_pruneBackups:backupsToKeep:withPruneAction:
_determineBackupToCreateFromBackupList:withCompletion:
sortBackupsByDate:
_shouldCreateMonthly:
_shouldCreateWeekly:
_shouldCreateDaily:
_seperateBackupListsByType:withCompletion:
removeBackups:
removeBackupWithID:withCompletion:
saveBackup:withDate:payload:withCompletion:
createManualBackup:
getBackupsWithCompletion:
requestExportWithCompletion:
requestImport
requestImportWithCompletion:
_initCoreData
_configureStoreDescriptions
dateFromPast:months:days:hours:seconds:
injectBackups:completion:
serialNumber
setSerialNumber:
persistentContainer
setPersistentContainer:
mirroringOptions
npsManager
testQueue
icloudQueue
internalQueue
setInternalQueue:
inFlightBackupMetaData
setInFlightBackupMetaData:
finishMetaDataCompletion
setFinishMetaDataCompletion:
ntkXpcConnection
setNtkXpcConnection:
_serialNumber
_persistentContainer
_mirroringOptions
_npsManager
_testQueue
_icloudQueue
_internalQueue
_inFlightBackupMetaData
_finishMetaDataCompletion
_ntkXpcConnection
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSCloudKitMirroringDelegateOptions",R,N,V_mirroringOptions
T@"NPSManager",R,N,V_npsManager
T@"NSObject<OS_dispatch_queue>",R,V_testQueue
T@"NSObject<OS_dispatch_queue>",R,V_icloudQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"NBBackup",&,N,V_inFlightBackupMetaData
T@?,C,N,V_finishMetaDataCompletion
T@"NSXPCConnection",&,N,V_ntkXpcConnection
T@"NSString",&,N,V_serialNumber
hasUuid
hasName
hasProductType
hasProductName
hasSystemVersion
hasSystemBuildVersion
hasMarketingVersion
hasDeviceColor
hasDeviceEnclosureColor
setBottomEnclosureMaterial:
setHasBottomEnclosureMaterial:
hasBottomEnclosureMaterial
setTopEnclosureMaterial:
setHasTopEnclosureMaterial:
hasTopEnclosureMaterial
setFcmMaterial:
setHasFcmMaterial:
hasFcmMaterial
setBcmWindowMaterial:
setHasBcmWindowMaterial:
hasBcmWindowMaterial
setCoverGlassColor:
setHasCoverGlassColor:
hasCoverGlassColor
setHousingColor:
setHasHousingColor:
hasHousingColor
setBackingColor:
setHasBackingColor:
hasBackingColor
hasWatchFace
hasWatchFaceColor
setLocationOptInEnabled:
setHasLocationOptInEnabled:
hasLocationOptInEnabled
setDiagnosticsOptInEnabled:
setHasDiagnosticsOptInEnabled:
hasDiagnosticsOptInEnabled
setLastModificationDate:
setHasLastModificationDate:
hasLastModificationDate
setSizeInBytes:
setHasSizeInBytes:
hasSizeInBytes
hasActiveWatchFaceFileContents
setBackupType:
setHasBackupType:
hasBackupType
hasDeviceCSN
hasWatchFaceData
uuid
setUuid:
name
setName:
productType
setProductType:
productName
setProductName:
systemVersion
setSystemVersion:
systemBuildVersion
setSystemBuildVersion:
marketingVersion
setMarketingVersion:
deviceColor
setDeviceColor:
deviceEnclosureColor
setDeviceEnclosureColor:
bottomEnclosureMaterial
topEnclosureMaterial
fcmMaterial
bcmWindowMaterial
coverGlassColor
housingColor
backingColor
watchFace
setWatchFace:
watchFaceColor
setWatchFaceColor:
locationOptInEnabled
diagnosticsOptInEnabled
lastModificationDate
sizeInBytes
activeWatchFaceFileContents
setActiveWatchFaceFileContents:
backupType
deviceCSN
setDeviceCSN:
watchFaceData
setWatchFaceData:
_lastModificationDate
_sizeInBytes
_activeWatchFaceFileContents
_backingColor
_backupType
_bcmWindowMaterial
_bottomEnclosureMaterial
_coverGlassColor
_deviceCSN
_deviceColor
_deviceEnclosureColor
_fcmMaterial
_housingColor
_marketingVersion
_name
_productName
_productType
_systemBuildVersion
_systemVersion
_topEnclosureMaterial
_uuid
_watchFace
_watchFaceColor
_watchFaceData
_diagnosticsOptInEnabled
_locationOptInEnabled
_has
T@"NSData",&,N,V_uuid
T@"NSString",&,N,V_name
T@"NSString",&,N,V_productType
T@"NSString",&,N,V_productName
T@"NSString",&,N,V_systemVersion
T@"NSString",&,N,V_systemBuildVersion
T@"NSString",&,N,V_marketingVersion
T@"NSString",&,N,V_deviceColor
T@"NSString",&,N,V_deviceEnclosureColor
TB,N
Ti,N,V_bottomEnclosureMaterial
Ti,N,V_topEnclosureMaterial
Ti,N,V_fcmMaterial
Ti,N,V_bcmWindowMaterial
Ti,N,V_coverGlassColor
Ti,N,V_housingColor
Ti,N,V_backingColor
T@"NSString",&,N,V_watchFace
T@"NSString",&,N,V_watchFaceColor
TB,N,V_locationOptInEnabled
TB,N,V_diagnosticsOptInEnabled
Td,N,V_lastModificationDate
Tq,N,V_sizeInBytes
T@"NSData",&,N,V_activeWatchFaceFileContents
Ti,N,V_backupType
T@"NSString",&,N,V_deviceCSN
T@"NSData",&,N,V_watchFaceData
nb_mineTinkerDevices
nb_defaultPairedDeviceIDIncludingTinkerDevices
nb_nrDevice
backupsType
clearBackups
addBackups:
backupsCount
backupsAtIndex:
backups
setBackups:
_backups
T@"NSMutableArray",&,N,V_backups
fetchRequest
T@"NSString",C,D,N
backupMetaData
T@"NSData",&,D,N
Ts,D,N
ckRecordID
ckRecordSystemFields
dateCreated
T@"NSDate",C,D,N
T@"NSUUID",C,D,N
payload
com.apple.NanoBackup.snapshotter
v16@?0@"UIImage"8
v8@?0
NTKFaceSnapshotClient
sharedInstance
%@ %@
backupID
com.apple.nanobackupd
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSError"8
restoreWithURL: %@
iCloudBackupPayloadToPath: %@
v24@?0@"NSString"8@"NSError"16
error
v16@?0@"NSMutableDictionary"8
@"NSError"16@?0@"NBBackup"8
v16@?0@"NBBackup"8
index
com.apple.nanobackup
com.apple.PeoplePicker
personNameOrdering
personShortNameFormatEnabled
personShortNameFormat
personShortNamePreferNicknames
com.apple.ET
FriendList
DidNormalizeFriendListDestinations
ETFriendGroupTitles
com.apple.nanolifestyle.privacy
EnableHeartRate
EnableFitnessTracking
com.apple.DeepBreathing
com.apple.Mind
com.apple.bulletinboard.apps
RemindersPerDay
EnableStartOfDayReminder
EnableEndOfDayReminder
EnableWeeklySummary
BreathRate
HapticLevel
BPSNanoBulletinSectionId
B24@?0@"NSURL"8@"NSError"16
Local
Remote
v16@?0@"NSArray"8
v32@?0@"NSString"8@16^B24
@"NSError"16@?0@"NSString"8
v24@?0@8^B16
v24@?0@"NSString"8^B16
@"NSError"8@?0
ActiveWatchFace.png
v32@?0@"NSUUID"8@"NSString"16@?<@"NSError"@?@"NBBackup">24
BPSNanoBulletinShowsCustomSettings
v32@?0@8@16^B24
2A51E7B3-1B80-4981-9F09-F725BC3A8065
NBMessagePathKey
NBMessageBlockKey
com.apple.private.alloy.nanobackup
-[NBRemoteObjectClassC writeWatchFaceToFile:]
NanoBackup
WatchFaceImages
NanoBackup Backup Metadata Request
-[NBRemoteObjectClassC sendBackupListRequestWithResponseBlock:]_block_invoke
NBErrorDomain
v16@?0@"IDSProtobuf"8
NanoBackup Backup Metadata Response
-[NBRemoteObjectClassC sendBackupListResponse:error:withRequestIdentifier:withSentBlock:]_block_invoke
NanoBackup Restore Request
-[NBRemoteObjectClassC sendRestoreRequest:withResponseBlock:]_block_invoke
B16@?0@"NRDevice"8
NanoBackup Restore Request From Payload
-[NBRemoteObjectClassC sendBackupPayload:withResponseBlock:]_block_invoke
NanoBackup Restore Response
-[NBRemoteObjectClassC sendRestoreResponse:withRequestIdentifier:withSentBlock:]_block_invoke
NanoBackup Create Backup Request
-[NBRemoteObjectClassC sendCreateBackupRequestWithResponseBlock:]_block_invoke
NanoBackup Create Backup Response
-[NBRemoteObjectClassC sendCreateBackupResponse:withRequestIdentifier:error:withSentBlock:]_block_invoke
NanoBackup Delete Backup Request
-[NBRemoteObjectClassC sendDeleteBackupRequest:withResponseBlock:]_block_invoke
NanoBackup Delete Backup Response
-[NBRemoteObjectClassC sendDeleteBackupResponse:withRequestIdentifier:withSentBlock:]_block_invoke
backup
com.apple.nanobackup.remoteobject
.client
com.apple.nanoregistryd
NRRemoteObject invalidated
response
request
MessageType
Error sending %s %@ - %@
com.apple.%s.%@
fireAndForget is ON
com.apple.watch.setup
backupType
SerialNumber
dateCreated
NTKSnapshotUIOnlyKey
NTKSnapshotUnadornedContentKey
NTKSnapshotUseCanonicalContentKey
NTKSnapshotShouldUseSampleComplicationTemplatesKey
NTKSnapshotIgnoreSnapshotImages
NTKSnapshotPersistableKey
com.apple.nanotimekit.facesnapshotserver
com.apple.nanobackup.iCloud
com.apple.nanobackup.ntkQueue
v16@?0@"NSCloudKitMirroringResult"8
v24@?0@"NSError"8@"NBBackupiCloudModel"16
v16@?0q8
com.apple.NanoBackup
backupID could not be found
restoreData
v24@?0@"NBBackupiCloudModel"8@"NSError"16
v16@?0@"NBBackupiCloudModel"8
v48@?0@"NSArray"8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40
NONE
Daily
Weekly
Monthly
Yearly
Manual
nil replyBlock
q24@?0@"NBBackupiCloudModel"8@"NBBackupiCloudModel"16
NBBackupiCloudModel
%K = %@
export request failed to execute: %@
Got import result back: %d madeChanges: %d
Import request failed to execute: %@
Model
momd
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Failed to load Core Data stack: %@
Store loaded
NanoBackupModel
sqlite
com.apple.backuptestqueue
Check: Day: I is: %d
Check: week: I is: %d
Check: first month: I is: %d
Check: month: I is: %d
Check: year 1: I is: %d
Check: other years: I is: %d
Timeout waiting for backup to complete
Starting server
uuid
name
productType
productName
systemVersion
systemBuildVersion
marketingVersion
deviceColor
deviceEnclosureColor
bottomEnclosureMaterial
topEnclosureMaterial
fcmMaterial
bcmWindowMaterial
coverGlassColor
housingColor
backingColor
watchFace
watchFaceColor
locationOptInEnabled
diagnosticsOptInEnabled
lastModificationDate
sizeInBytes
activeWatchFaceFileContents
deviceCSN
watchFaceData
backups
NBWatchFaceSnapshotter
NTKLibrarySelectedFaceSnapshotProviderDelegate
NSObject
NBPBCreateBackupRequest
NSCopying
NBPBDeleteBackupRequest
NBBackupiCloud
NBRemoteObjectClassCDelegate
NBPBRestoreResponse
NBKeyedArchiverUtil
NBBackupIndexManager
NBServerProtocol
NBServer
NSXPCListenerDelegate
NBRemoteObjectClassC
NBPBCreateBackupResponse
NBPBSelectorItem
NBRemoteObject
IDSServiceDelegate
XPCFaceSnapshotServer
NBiCloudBackupManager
NBPBDeleteBackupResponse
NBPBBackupListRequest
NBPBBackupMetadata
NBPBRestoreRequest
NBPBBackupListResponse
NBBackupiCloudModel
CoreDataProperties
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"UIImage"16
@24@0:8@16
v24@0:8@?16
v16@0:8
@"NSUUID"
@"NTKLibrarySelectedFaceSnapshotProvider"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@24@0:8^{_NSZone=}16
@"NSData"
v32@0:8@16@24
v32@0:8@"NBRemoteObjectClassC"16@24
v32@0:8@"NSUUID"16@24
v32@0:8@"NSURL"16@24
v32@0:8@16@?24
v40@0:8@16@24@?32
@"NBRemoteObjectClassC"
@"NBiCloudBackupManager"
v32@0:8q16@?24
@"NSArray"
@"NSMutableDictionary"
@"NBBackupiCloud"
v40@0:8Q16q24@?32
v48@0:8@16Q24@32@?40
v40@0:8@16Q24@?32
v28@0:8B16@?20
v40@0:8Q16q24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSUUID"16Q24@"NSUUID"32@?<v@?@"NSError">40
v40@0:8@"NSUUID"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"NBBackup"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSUUID"16Q24@?<v@?@"NSError">32
v28@0:8B16@?<v@?@"NSError">20
Q24@0:8@16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"NSObject<OS_dispatch_source>"
@"NBBackupIndexManager"
@"NBExclusionListManager"
@32@0:8#16@24
v48@0:8@16@24@32@?40
@"NBPBBackupMetadata"
v20@0:8B16
:16@0:8
v24@0:8:16
^?16@0:8
v24@0:8^?16
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@40@0:8@16@24@32
v36@0:8:16S24q28
v28@0:8:16S24
v28@0:8@16S24
v36@0:8@16S24@?28
v44@0:8@16S24@28@?36
v52@0:8@16S24@28@36@?44
v76@0:8@16S24@28@36@44@52@?60@?68
v68@0:8@16S24@28@36@44@52@?60
v84@0:8@16S24@28@36@44@52@60@?68@?76
v92@0:8@16@24S32@36@44@52@60@68@?76@?84
@"NSString"
@"NSDictionary"
@"IDSService"
v40@0:8@"NSUUID"16@"NSDictionary"24@?<v@?@"UIImage">32
@24@0:8^{__CFString=}16
v48@0:8q16@24@32@?40
@56@0:8Q16Q24Q32Q40Q48
v28@0:8i16@?20
@?16@0:8
@"NSPersistentContainer"
@"NSCloudKitMirroringDelegateOptions"
@"NPSManager"
@"NBBackup"
@"NSXPCConnection"
v20@0:8i16
v24@0:8d16
v24@0:8q16
i16@0:8
d16@0:8
q16@0:8
{?="lastModificationDate"b1"sizeInBytes"b1"backingColor"b1"backupType"b1"bcmWindowMaterial"b1"bottomEnclosureMaterial"b1"coverGlassColor"b1"fcmMaterial"b1"housingColor"b1"topEnclosureMaterial"b1"diagnosticsOptInEnabled"b1"locationOptInEnabled"b1}
@24@0:8Q16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>RLRS9CRG76.com.apple.watch.setup</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>identity</string>
</array>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.watch.setup</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.nanopreferencessync.backuprestore</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.watch.setup</key>
<string>com.apple.watch.setup</string>
</dict>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.nanobackup</string>
</array>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.NanoTimeKit.FaceSupport</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.nanotimekit.facesnapshotserver</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
</dict>
</plist>
