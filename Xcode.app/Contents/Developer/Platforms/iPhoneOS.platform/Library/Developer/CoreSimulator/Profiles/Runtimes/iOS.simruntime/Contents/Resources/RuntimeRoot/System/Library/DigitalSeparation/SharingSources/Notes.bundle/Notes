ICCollaborationControllerNewShareNotification
v8@?0
There may be a problem with the server. Please try again later.
com.apple.notes
Collaboration
Maximum Invitations Reached
Invitations Not Sent
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKShare"8@"NSError"16
((object) != nil)
-[ICCollaborationController saveShare:forObject:qualityOfService:completionHandler:]
Expected non-nil value for '%s'
object
__objc_no
-[ICCollaborationController saveShare:withRootRecord:object:qualityOfService:completionHandler:]
Tried to save a read-only share (%@) for object: %@
Saving Share
B32@?0@8Q16^B24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
SaveShare
v24@?0@"NSDictionary"8@"NSError"16
FetchShare
v16@?0@"NSError"8
SyncAfterDidStopSharing
B24@?0@"ICCloudSyncingObject"8^B16
accountID.length > 0
-[ICCollaborationController containerForAccountID:]
Must have an account ID to get container.
((shareURL) != nil)
-[ICCollaborationController acceptShareWithMetadata:container:accountID:fetchObjectWithCompletionHandler:]
shareURL
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
FetchRecordForAcceptedShare
SyncAfterAcceptShare
AcceptShare
isShareDirty = YES
Finished updating share
ios_collaboration_share_sheet_folder_icon
Share Folder: %@
DSBlockExecutionWorkQueue
com.apple.DigitalSeparation
DSNotesSource
serverShareData != nil
v24@?0@"<ICCloudObject>"8^B16
DigitalSeparation-refresh
v32@?0@"<DSSharedResource>"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
DSCloudKitParticipant
%@ <%@>: identity: %@
CKUserIdentity+
%@ <%p>: %@; contact-id: %@
%@ <%@>: %@; email: %@
%@ <%@>: %@; phone number: %@
%@ <%@>: %@; unknown
Note
Folder
DSNotesSharedResource
v32@?0@"CKShareParticipant"8Q16^B24
Public - anyone with the link
Private - invitation only
%@ <%p>: display-name: %@, display-detail: %@, participation-access: %@, participants: %@
lastKnownOperatingSystemVersion
majorVersion
minorVersion
patchVersion
ICNotesCloudContextDidFetchShareNotification
ICNotesCloudContextDidFetchShareNotificationShareKey
ICNotesCloudContextDidFetchShareNotificationAccountIDKey
Cloud
zoneOwnerName == %@
Fetching user record
v24@?0@"CKRecord"8@"NSError"16
FixingPasswordProtectedNotes
DidUpdateAppleAccountProperties
DidFixGallerySubAttachments
%K == %@
typeUTI
v40@?0@"ICAttachment"8@"NSString"16Q24^B32
v24@?0@"ICMedia"8^B16
init
dictionary
updateShares
initWithTarget:selector:delay:waitToFireUntilRequestsStop:callOnMainThread:
defaultCenter
managedObjectContextObjectsDidChange:
addObserver:selector:name:object:
notesCloudContextDidFetchShare:
updateSharesDelayer
requestFire
removeObserver:
dealloc
note
folder
account
presentingViewController
domain
isEqualToString:
userInfo
objectForKeyedSubscript:
mainBundle
localizedStringForKey:value:table:
code
enumerateKeysAndObjectsUsingBlock:
ic_showAlertWithTitle:message:viewController:
serverRecord
copy
shortLoggingDescription
newlyCreatedRecord
rootRecordForObject:
share
recordID
initWithRootRecord:shareID:
ic_loggingDescription
initWithRootRecord:
ic_updateFromObject:
serverShare
parentCloudObject
zoneID
isEqual:
invitation
updateFromShare:
managedObjectContext
redactAuthorAttributionsToCurrentUser
updateChangeCount
ic_save
performBlockAndWait:
sharedContext
saveShare:forObject:qualityOfService:completionHandler:
finishOperationsForRecordID:qualityOfService:completionHandler:
handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:
errorWithDomain:code:userInfo:
recordChangeTag
saveShare:withRootRecord:object:qualityOfService:completionHandler:
ic_updateThumbnailsFromObject:completion:
cloudAccount
identifier
length
isSharedReadOnly
containerForAccountID:
arrayWithObjects:count:
initWithRecordsToSave:recordIDsToDelete:
setQualityOfService:
configuration
setDiscretionaryNetworkBehavior:
databaseScope
databaseWithDatabaseScope:
setDatabase:
objectWasFetchedFromCloudWithRecord:accountID:
setServerShareIfNewer:
ic_saveWithLogDescription:
indexOfObjectPassingTest:
objectAtIndex:
informCloudAnalyticsDelegateForOperationDidEnd:recordsByRecordID:operationError:
setModifyRecordsCompletionBlock:
setName:
setQuantity:
setExpectedSendSize:
setExpectedReceiveSize:
setGroup:
database
addOperation:
initWithRecordIDs:
setQueuePriority:
saveServerShare:persistParticipantEvents:accountID:
setFetchRecordsCompletionBlock:
objectForShare:accountID:context:
associatedNoteParticipants
countByEnumeratingWithState:objects:count:
deleteObject:
workerManagedObjectContext
initWithManagedObjectContext:
updateWithCompletion:
postNotificationName:object:
ckShareIDToRootRecordID
existingCloudObjectForRecordID:recordType:accountID:context:
isOwnedByCurrentUser
isPubliclySharedOrHasInvitees
setNeedsToBeFetchedFromCloud:
setServerShare:
removeAllCloudSyncingObjectActivityEvents
allChildCloudObjects
performBlock:
deleteSharesForObjects:completionHandler:
objectForCKShareRecordID:accountID:context:
removeShareIfNeededWithOwnedObject:countParticipants:context:
markForDeletion
deleteFromLocalDatabase
syncWithReason:completionHandler:
makeOrUpdateInvitationWithShareURL:account:context:
setRootObject:
objectID
object
ic_objectsOfClass:
changedValues
allKeys
isShareDirty
containsObject:
ic_objectsPassingTest:
count
setByAddingObjectsFromSet:
invitationWithShareURL:context:
callingParticipant
userIdentity
userRecordID
recordName
sharedInstance
primaryICloudACAccount
containersByAccountID
containerForUserRecordID:
options
accountOverrideInfo
accountID
containerIdentifier
containerWithIdentifier:
cloudKitAccountInContext:
markedForDeletion
didAcceptShare:
acceptShareWithMetadata:container:accountID:fetchObjectWithCompletionHandler:
allValues
userRecordNameForContainer:
initWithShareMetadatas:
setContainer:
setObject:forKeyedSubscript:
setPerShareCompletionBlock:
hierarchicalRootRecordID
objectWithRecordID:accountID:context:
syncWithReason:uploadUnsyncedChanges:completionHandler:
fetchRecordIDs:accountID:operationGroupName:completionHandler:
setAcceptSharesCompletionBlock:
operationQueue
predicateWithFormat:
ic_objectsMatchingPredicate:context:
existingShareForObject:
setIsShareDirty:
didFailToUpdateShareWithError:
didSaveShare:accountID:
populateParticipantDetailsForCloudSharingController:
traitCollection
ic_isDark
participants
initWithCapacity:
acceptanceStatus
setParticipantID:
setDetailText:
participantID
highlightColorForUserID:inNote:isDark:
setParticipantColor:
setObject:forKey:
_setParticipantDetails:
didStopSharing:recordID:accountID:
ic_fallbackThumbnail
ic_PNGData
imageNamed:
shareType
shareTitle
localizedStringWithFormat:
setShowsAuthorHighlights:
setShouldPreventNotifications:forRecordID:
collaborationColorManager
highlightColorForUserID:note:
colorWithAlphaComponent:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
cloudSharingController:failedToSaveShareWithError:
itemTitleForCloudSharingController:
itemThumbnailDataForCloudSharingController:
itemTypeForCloudSharingController:
cloudSharingControllerDidSaveShare:
cloudSharingControllerDidStopSharing:
_cloudSharingControllerDidModifyPrimarySwitch:
_cloudSharingControllerDidModifySecondarySwitch:
_cloudSharingControllerDidActivateShowSharedFolder
_cloudSharingControllerDidChooseTransport:
T@"ICCollaborationController",R,N
newShareForObject:
prepareShare:forObject:qualityOfService:completionHandler:
fetchShareIfNecessaryForObject:completionHandler:
acceptShareWithMetadata:managedObjectContext:completionHandler:
updateCKShareIDToRootRecordIDMappingWithShare:
setPresentingViewController:
presentingBarButtonItem
setPresentingBarButtonItem:
setAccount:
setFolder:
setNote:
newShareCreated
setNewShareCreated:
setCkShareIDToRootRecordID:
.cxx_destruct
_newShareCreated
_presentingViewController
_presentingBarButtonItem
_account
_folder
_note
_ckShareIDToRootRecordID
_updateSharesDelayer
T@"UIViewController",&,N,V_presentingViewController
T@"UIBarButtonItem",&,N,V_presentingBarButtonItem
T@"ICAccount",&,N,V_account
T@"ICFolder",&,N,V_folder
T@"ICNote",&,N,V_note
TB,N,V_newShareCreated
T@"NSMutableDictionary",&,N,V_ckShareIDToRootRecordID
T@"ICSelectorDelayer",R,N,V_updateSharesDelayer
array
addObject:
executeNextBlock
popBlock
removeObjectAtIndex:
pushBlock:
workDone
hasNext
dispatchQueue
setDispatchQueue:
workInProgress
setWorkInProgress:
_blockQueue
_workInProgress
_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
TB,N,V_workInProgress
isRunningUnitTests
startSharedContextWithOptions:
setStalenessInterval:
refreshAll
setCloudContextDelegate:
cloudContextDelegate
setDisableRetryTimer:
cloudKitParticipant
isSharedRootObject
initWithCloudSyncingObject:
_addResource:
enumerateAllCloudObjectsInContext:predicate:sortDescriptors:relationshipKeyPathsForPrefetching:batchSize:saveAfterBatch:usingBlock:
shouldIgnoreError:
_refreshSources
isDeleted
_refreshCloudContextWithCompletion:
setSharingStopped:
cloudSyncingObject
enumerateObjectsUsingBlock:
name
errorWithCode:sourceName:underlyingErrors:
firstObject
_stopSharingSharedResources:completion:
fetchSharedResourcesWithCompletion:
errorWithCode:sourceName:
_getAndRemoveFromIndexResourcesForParticipant:
stopSharingWithParticipant:completion:
_stopSharingWithParticipant:completion:
errorWithCode:
participationAccess
stopSharing:withCompletion:
initialize
stopAllSharingWithCompletion:
updateParticipantAccessLevelTo:onResource:withCompletion:
updateVisibilityTo:onResource:withCompletion:
T@"NSString",R,C,N
_participantToResource
_sharedResources
_workQueue
_cloudContextDelegate
T@"DSNotesCloudContextDelegate",&,N,V_cloudContextDelegate
role
permission
identity
stringWithFormat:
Tq,R,N
T@"<DSIdentifiable>",R,N
initWithShareParticipant:
_cloudKitParticipant
T@"CKShareParticipant",R,C,N,V_cloudKitParticipant
contactIdentifiers
lookupInfo
emailAddress
phoneNumber
unifiedContactIdentifier
unifiedContactWithIdentifier:keysToFetch:error:
stringFromContact:style:
nameComponents
localizedStringFromPersonNameComponents:style:options:
T@"NSPersonNameComponents",R,C,N
sharingStopped
isShared
removeParticipant:
ic_nonOwnerInvitedParticipantsCount
ic_isPublicShare
qualityOfService
_stopSharingResourceWithCompletion:
hasParticipant:
callingParticipantRole
_removeParticipant:withCompletion:
className
displayName
displayDetail
_participationAccessString
visibility
T@"NSArray",R,C,N
TQ,R,N
_sharingStopped
_cloudSyncingObject
_qualityOfService
T@"ICCloudSyncingObject",R,C,N,V_cloudSyncingObject
TB,V_sharingStopped
Tq,R,N,V_qualityOfService
accountsDidChange:
notesZoneID
snapshotManagedObjectContext
accountWithIdentifier:context:
allChildObjects
isDeletable
deleteCloudObjectIfFullyPushed:
clearServerRecord
setInCloud:
defaultFolder
hasChanges
save:
metadataZoneID
deviceMigrationStates
legacyTombstones
setLegacyNotesDisabled:
hasSuccessfullyPushedLatestVersionToCloud
objectsToBeDeletedBeforeThisObject
zoneName
allObjects
addObjectsFromArray:
ownerName
userRecordName
setUserRecordName:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
allCloudKitAccountsInContext:
ic_addNonNilObject:
standardUserDefaults
objectForKey:
isCloudKitAccountAvailable
enumerateAllCloudObjectsInContext:batchSize:saveAfterBatch:usingBlock:
deleteAllServerChangeTokens
cancelEverythingWithCompletionHandler:
fetchUserRecordWithAccountID:completionHandler:
boolForKey:
setBool:forKey:
defaultStore
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
ic_isNotesMigrated
ic_isPrimaryAppleAccount
aa_updatePropertiesForAppleAccount:completion:
fixGallerySubAttachments
attachmentsMatchingPredicate:context:
attachmentModel
attachmentWithIdentifier:includeDeleted:context:
parentAttachment
enumerateSubAttachmentsWithBlock:
hasFile
enumerateMediaInContext:batchSize:saveAfterBatch:usingBlock:
clearContainers
setNeedsToUpdateSubscriptions:
clearSubscribedSubscriptionIDs
operationCount
updateCloudContextState
processInfo
operatingSystemVersion
numberWithInteger:
synchronize
cloudContext:userDidDeleteRecordZoneWithID:accountID:
cloudContext:receivedZoneNotFound:accountID:
cloudContext:sharedZoneWasDeleted:accountID:
cloudContext:didFetchUserRecord:accountID:
cloudContext:didFetchShare:accountID:
didFailPushingExceededStorageQuotaForContext:recordID:accountID:
accountIDsForCloudContext:managedObjectContext:
syncPasswordProtectedNotesIfNessessary
updateAppleAccountBags
fixGallerySubAttachmentsIfNecessary
setMissingAttachmentFilesNeedToBeFetched
updateLastOSVersion
Failed to save share with error %@
Trying to get root record for %@, but we don't have a server record. This likely won't work.
Created share %@ with existing share reference for %@
Created share %@ for %@
Checking for an existing share for %@
Checking for share on %@ serverShare=%@ serverRecord.share=%@
Have a share that wasn't persisted for %@
Not checking parent object %@ for %@ because it's not in the same zone (object in %@ and parent in %@)
Preparing share %@ for %@
com.apple.notes.collaboration.prepareShare
Finished waiting for operations before preparing share for %@
saveShare:forObject:qualityOfService:completionHandler: shareArgument is nil
No root record for %@
Retrying to save share for %@
Using updated server share when retrying %@
Tried to save a nil share (%@) or a nil root record (%@) for object: %@
Tried to save a share (%@) without an account ID for object: %@
com.apple.notes.collaboration.saveShare
Saving Share: %@ with root record: %@ %@
Error saving share %@ for %@ %@: %@
Partial failure saving share for %@ %@
Error saving share for %@ when saving record ID %@ %@: %@
Saving server record %@ for %@ %@
Saving server share %@ for %@ %@
Server record %@ is not a share %@
No server record from error saving share for %@ %@ %@
Saved share %@ %@
No CKShare or error returned for %@ %@
Trying to fetchShareIfNecessaryForObject with empty accountID
Need to fetch share %@ for %@
Fetching share %@ with %@
Fetched share %@ %@
Error fetching share %@ %@: %@
com.apple.notes.collaboration.fetchShare
Setting server share on %@ %@ %@
Couldn't find cloud object for share %@
No record type in share %@
No root record reference for share %@
Deleting shares for object %@ failed with error %@
Couldn't find cloud object for share %@ recordID %@
Successfully fetched cloudObject for share %@ recordID %@ accountID %@
User stopped sharing %@ share %@ recordID %@
User removed themselves from shared %@ share %@ recordID %@
An error has occured when syncing the deletion of the share in didStopSharing: %@
Cannot associate invitation with object because share URL is missing {share: %@, accountID: %@}
Cannot associate invitation with object because root object or root object account is missing {share: %@, accountID: %@}
Updated invitation and associated it with object {share: %@, objectID: %@}
Accepting share for metadata %@
userRecordID is CKCurrentUserDefaultName. Fetching accountID and container.
Multiple accounts detected. Fetching container and accountID.
Single account or unable to fetch container. Using containerWithIdentifier.
Single account or unable to fetch account ID. Using cloudKitAccountInContext.
Couldn't find container for metadata %@
Couldn't find account id for container %@
Found existing object %@ for share metadata %@
No existing object for share metadata %@
com.apple.notes.collaboration.acceptShare
Accepting shared object at URL: %@, account ID = %@
Error accepting share at URL %@ %@: %@
Share accepted for URL %@ %@
Fetching record from share %@, account ID = %@
Error fetching record from share %@: %@
Fetched record from share %@
Using share from per-share completion block %@: %@
Falling back to share from metadata %@: %@
No root record when accepting share: %@
Accepting %@ with %@
Updating shares
Updating share
 {object: %@}
Cannot find share for object 
 skipping
Error updating share {error: %@}
Cloud sharing controller did save share: %@
Cloud sharing controller did stop sharing: %@
Cloud sharing controller did turn user edit highlighting: %@
Cloud sharing controller did turn hide alerts: %@
adding a block ...
finishing work ...
starting work ...
popping a block ...
Initializing notes context ...
Done initializing notes context ...
Adding shared resource, %@ ...
refreshing context ...
done syncing ICCloudContext ...
The error, %@, means that refreshing records failed after stoping sharing a resource. Stopping sharing actually succeded so ignoring.
An error, %@, has occured syncing icloud context.
Fetching all shared notes...
Done Fetching sharing for all shared notes, ...
The error, %@, means that refreshing records failed after stop sharing resourcee, %@. Stopping sharing actually succeded.
Stopping sharing for all shared notes ...
An error, %@, has occured retrieving shared resources.
An error, %@, has occured stopping sharing all resources.
Stop sharing all resources has completed successfully.
Done Stopping sharing for all shared notes ...
Stopping sharing for shared note, %@ ...
Shared resource, %@, is %@ class but should be DSNotesSharedResource
Already stop sharing resource, %@.
An error, %@, has occured stopping sharing resource, %@.
Done Stopping sharing for shared note, %@ ...
Stopping sharing with participant, %@ ...
Participant, %@, is %@ class but should be DSCloudKitParticipant
Already stop sharing with participant, %@, nothing to do.
An error, %@, has occured. The participant, %@, was not removed from shared resource, %@.
Done stopping sharing with participant, %@ ...
The strongSelf is null. We can no longer access the data to stop shating with partcipant, %@.
The level is unchanged we'll ignore.
The Public access is an increase in participation access. Any increase in access should be done through Notes app. Doing nothing.
An error, %@, has occured changing participant access level from public to private of sharing resource, %@.
We shouldn't have reached here. Either participationAccess, %lu, or the newAccessLevel, %lu, have unexpected values. Doing nothing.
There are more than one contact identifiers, %@, choosing the first, %@.
The ICCloudSyncingObject, %@, is not shared. Nothing to do.
The ICCloudSyncingObject, %@, shared, %@, does not have the participant, %@, in the participants list. Nothing to do.
Saving shared resource, %@, and share, %@.
Failed removing participant %@ from shared resource, %@.
Saved shared resource, %@.
An error, %@, has occured removing participant %@ from shared resource, %@.
No non owner participants left on shared resource, %@, removing share ...
An error, %@, has occured. Stop sharing resource, %@.
The error, %@, means that refreshing a record failed after stopping sharing resource, %@. Stoping sharing actually succeded.
Stopping sharing resource, %@, with participant, %@ ...
Already stoped sharing or participant, %@, does not participate in shared resource, %@.
Remove participant, %@ from shared resource, %@.
Stopping sharing resource, %@, with everyone ...
cloudSyncingObject, %@, class is unknown subclass, %@, of ICCloudSyncingObject.
Unknown participation access value %lu
Error recreating default folder for CloudKit account after the user purged the zone for account ID %@
Error saving after notes zone deleted by user for account ID %@: %@
%@ (%@) hasn't been fully pushed to the cloud. Not deleting.
Received an error that a zone (%@) wasn't found. Re-uploading everything for that zone for accountID %@.
Shared zone was deleted for account ID %@: %@
Deleting shared %@ for accountID %@
Not deleting shared %@ in wrong zone %@ for account ID %@
Cloud context fetched the user record, but we don't have a CloudKit account (account ID %@). Why not?
Setting the user record name for the CloudKit account to %@ for account ID %@
The cloud context fetched a user record ID (%@) different from our CloudKit account's user record ID (%@) for account ID %@
Checking if we need to re-sync password protected notes
Found previous OS version dictionary: %@
No previous OS version dictionary
No CloudKit account, so no need to re-sync
Fetching user record to check if we need to re-sync
Error fetching user record when checking for re-sync: %@
Fetched user record when checking for re-sync: %@
Device has been upgraded and the user created a password-protected note on a different device. Deleting server records and change tokens, and performing a full sync.
clearing server records
No crypto data on user record
Already updated iCloud account bags
Updating account bags for iCloud accounts
Updating account bag for %@
Error updating account bag for %@ authenticated=%d: %@
Updated account bag for %@
Already fixed gallery sub attachments
Fixing gallery sub attachments
Requesting sub attachment: %@ for: %@
Parent attachment already set for: %@
Checking for missing attachment files that need to be fetched
Setting all media needs to be fetched from cloud
No file for %@, marking as needing to be fetched
Finished setting missing attachment files to be fetched
Stopping all CloudKit operations after deleting CloudKit account
Updating cloud context state after accounts changed
ICCollaborationController
UICloudSharingControllerDelegate
NSObject
UICloudSharingControllerDelegate_Private
DSBlockExecutionQueue
DSNotesSource
DSSource
DSCloudKitParticipant
DSParticipation
DSProtocols
DSIdentifiable
DSNotesSharedResource
DSSharedResource
DSNotesCloudContextDelegate
ICCloudContextDelegate
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8@16
v24@0:8@16
v32@0:8@"UICloudSharingController"16@"NSError"24
@"NSString"24@0:8@"UICloudSharingController"16
@"NSData"24@0:8@"UICloudSharingController"16
v24@0:8@"UICloudSharingController"16
v20@0:8B16
v16@0:8
v24@0:8@"NSString"16
v48@0:8@16@24q32@?40
v56@0:8@16@24@32q40@?48
v32@0:8@16@?24
v36@0:8@16B24@28
@40@0:8@16@24@32
v40@0:8@16@24@32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@36@0:8@16@24B32
@"UIViewController"
@"UIBarButtonItem"
@"ICAccount"
@"ICFolder"
@"ICNote"
@"NSMutableDictionary"
@"ICSelectorDelayer"
v24@0:8@?16
@?16@0:8
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
v40@0:8Q16@24@?32
v40@0:8q16@24@?32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"<DSSharedResource>"16@?<v@?@"NSError">24
v32@0:8@"<DSParticipation>"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8Q16@"<DSSharedResource>"24@?<v@?@"<DSSharedResource>"@"NSError">32
v40@0:8q16@"<DSSharedResource>"24@?<v@?@"<DSSharedResource>"@"NSError">32
@"DSBlockExecutionQueue"
@"DSNotesCloudContextDelegate"
q16@0:8
@"<DSIdentifiable>"16@0:8
@"CKShareParticipant"
@"NSPersonNameComponents"16@0:8
@"NSArray"16@0:8
@"ICCloudSyncingObject"
@32@0:8@16@24
v40@0:8@"ICCloudContext"16@"CKRecordZoneID"24@"NSString"32
v40@0:8@"ICCloudContext"16@"CKRecord"24@"NSString"32
v40@0:8@"ICCloudContext"16@"CKShare"24@"NSString"32
v40@0:8@"ICCloudContext"16@"CKRecordID"24@"NSString"32
@"NSArray"32@0:8@"ICCloudContext"16@"NSManagedObjectContext"24
ICCollaborationControllerNewShareNotification
v8@?0
There may be a problem with the server. Please try again later.
com.apple.notes
Collaboration
Maximum Invitations Reached
Invitations Not Sent
v32@?0@"CKRecordID"8@"NSError"16^B24
v24@?0@"CKShare"8@"NSError"16
((object) != nil)
-[ICCollaborationController saveShare:forObject:qualityOfService:completionHandler:]
Expected non-nil value for '%s'
object
__objc_no
-[ICCollaborationController saveShare:withRootRecord:object:qualityOfService:completionHandler:]
Tried to save a read-only share (%@) for object: %@
Saving Share
B32@?0@8Q16^B24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
SaveShare
v24@?0@"NSDictionary"8@"NSError"16
FetchShare
v16@?0@"NSError"8
SyncAfterDidStopSharing
B24@?0@"ICCloudSyncingObject"8^B16
accountID.length > 0
-[ICCollaborationController containerForAccountID:]
Must have an account ID to get container.
((shareURL) != nil)
-[ICCollaborationController acceptShareWithMetadata:container:accountID:fetchObjectWithCompletionHandler:]
shareURL
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
FetchRecordForAcceptedShare
SyncAfterAcceptShare
AcceptShare
isShareDirty = YES
Finished updating share
ios_collaboration_share_sheet_folder_icon
Share Folder: %@
DSBlockExecutionWorkQueue
com.apple.DigitalSeparation
DSNotesSource
serverShareData != nil
v24@?0@"<ICCloudObject>"8^B16
DigitalSeparation-refresh
v32@?0@"<DSSharedResource>"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
DSCloudKitParticipant
%@ <%@>: identity: %@
CKUserIdentity+
%@ <%p>: %@; contact-id: %@
%@ <%@>: %@; email: %@
%@ <%@>: %@; phone number: %@
%@ <%@>: %@; unknown
Note
Folder
DSNotesSharedResource
v32@?0@"CKShareParticipant"8Q16^B24
Public - anyone with the link
Private - invitation only
%@ <%p>: display-name: %@, display-detail: %@, participation-access: %@, participants: %@
lastKnownOperatingSystemVersion
majorVersion
minorVersion
patchVersion
ICNotesCloudContextDidFetchShareNotification
ICNotesCloudContextDidFetchShareNotificationShareKey
ICNotesCloudContextDidFetchShareNotificationAccountIDKey
Cloud
zoneOwnerName == %@
Fetching user record
v24@?0@"CKRecord"8@"NSError"16
FixingPasswordProtectedNotes
DidUpdateAppleAccountProperties
DidFixGallerySubAttachments
%K == %@
typeUTI
v40@?0@"ICAttachment"8@"NSString"16Q24^B32
v24@?0@"ICMedia"8^B16
markedForDeletion
isSharedReadOnly
traitCollection
setParticipantColor:
operationQueue
ic_objectsPassingTest:
className
setFetchRecordsCompletionBlock:
objectAtIndex:
synchronize
invitation
colorWithAlphaComponent:
ic_PNGData
userRecordID
processInfo
operationCount
informCloudAnalyticsDelegateForOperationDidEnd:recordsByRecordID:operationError:
managedObjectContext
removeParticipant:
deleteObject:
setShouldPreventNotifications:forRecordID:
setAcceptSharesCompletionBlock:
firstObject
errorWithCode:sourceName:
setObject:forKeyedSubscript:
addObject:
ic_objectsOfClass:
count
arrayWithObjects:count:
collaborationColorManager
highlightColorForUserID:note:
object
makeOrUpdateInvitationWithShareURL:account:context:
operatingSystemVersion
setExpectedSendSize:
initWithTarget:selector:delay:waitToFireUntilRequestsStop:callOnMainThread:
shortLoggingDescription
deleteFromLocalDatabase
numberWithInteger:
errorWithCode:
indexOfObjectPassingTest:
isRunningUnitTests
accountsWithAccountType:
serverShare
userInfo
performBlockAndWait:
array
setObject:forKey:
ic_objectsMatchingPredicate:context:
syncWithReason:uploadUnsyncedChanges:completionHandler:
copy
removeObserver:
setNeedsToUpdateSubscriptions:
imageNamed:
userIdentity
enumerateSubAttachmentsWithBlock:
primaryICloudACAccount
setExpectedReceiveSize:
code
changedValues
accountWithIdentifier:context:
objectsToBeDeletedBeforeThisObject
mainBundle
serverRecord
ic_nonOwnerInvitedParticipantsCount
notesZoneID
finishOperationsForRecordID:qualityOfService:completionHandler:
performBlock:
setServerShareIfNewer:
removeObjectAtIndex:
_setParticipantDetails:
allValues
deleteAllServerChangeTokens
containsObject:
syncWithReason:completionHandler:
isPubliclySharedOrHasInvitees
cancelEverythingWithCompletionHandler:
hierarchicalRootRecordID
initWithShareMetadatas:
fetchUserRecordWithAccountID:completionHandler:
allObjects
setDiscretionaryNetworkBehavior:
lookupInfo
accountTypeWithAccountTypeIdentifier:
stringWithFormat:
defaultStore
enumerateObjectsUsingBlock:
setServerShare:
updateWithCompletion:
objectWithRecordID:accountID:context:
containersByAccountID
setNeedsToBeFetchedFromCloud:
removeAllCloudSyncingObjectActivityEvents
isOwnedByCurrentUser
ic_loggingDescription
setDisableRetryTimer:
enumerateMediaInContext:batchSize:saveAfterBatch:usingBlock:
initWithRootRecord:shareID:
sharedContext
localizedStringWithFormat:
zoneName
ic_isPublicShare
setRootObject:
stringFromContact:style:
hasSuccessfullyPushedLatestVersionToCloud
identifier
refreshAll
defaultFolder
initWithRootRecord:
containerWithIdentifier:
allKeys
newlyCreatedRecord
localizedStringFromPersonNameComponents:style:options:
objectWasFetchedFromCloudWithRecord:accountID:
setName:
isEqualToString:
shareType
ic_isPrimaryAppleAccount
setDetailText:
callingParticipant
aa_updatePropertiesForAppleAccount:completion:
predicateWithFormat:
accountOverrideInfo
cloudKitAccountInContext:
postNotificationName:object:userInfo:
allCloudKitAccountsInContext:
setQueuePriority:
ic_updateThumbnailsFromObject:completion:
updateFromShare:
participantID
fetchRecordIDs:accountID:operationGroupName:completionHandler:
containerIdentifier
objectID
setModifyRecordsCompletionBlock:
updateCloudContextState
redactAuthorAttributionsToCurrentUser
enumerateKeysAndObjectsUsingBlock:
shareTitle
boolForKey:
didAcceptShare:
accountID
save:
ic_isNotesMigrated
initWithRecordsToSave:recordIDsToDelete:
setDatabase:
zoneID
hasFile
setLegacyNotesDisabled:
setQuantity:
localizedStringForKey:value:table:
allChildObjects
dictionaryWithObjects:forKeys:count:
parentCloudObject
defaultCenter
ic_updateFromObject:
enumerateAllCloudObjectsInContext:predicate:sortDescriptors:relationshipKeyPathsForPrefetching:batchSize:saveAfterBatch:usingBlock:
setContainer:
parentAttachment
recordName
workerManagedObjectContext
enumerateAllCloudObjectsInContext:batchSize:saveAfterBatch:usingBlock:
attachmentsMatchingPredicate:context:
postNotificationName:object:
initWithRecordIDs:
existingCloudObjectForRecordID:recordType:accountID:context:
isDeletable
cloudAccount
share
length
clearSubscribedSubscriptionIDs
startSharedContextWithOptions:
setQualityOfService:
databaseWithDatabaseScope:
ic_isDark
setUserRecordName:
updateChangeCount
ic_showAlertWithTitle:message:viewController:
setIsShareDirty:
attachmentWithIdentifier:includeDeleted:context:
hasChanges
allChildCloudObjects
metadataZoneID
ownerName
recordID
deleteSharesForObjects:completionHandler:
markForDeletion
addObjectsFromArray:
associatedNoteParticipants
initWithCapacity:
setShowsAuthorHighlights:
domain
addObserver:selector:name:object:
setGroup:
errorWithCode:sourceName:underlyingErrors:
userRecordName
configuration
setBool:forKey:
invitationWithShareURL:context:
ic_save
requestFire
errorWithDomain:code:userInfo:
clearContainers
database
options
snapshotManagedObjectContext
setParticipantID:
handleFailedAssertWithCondition:functionName:simulateCrash:showAlert:format:
setByAddingObjectsFromSet:
countByEnumeratingWithState:objects:count:
ic_addNonNilObject:
isSharedRootObject
userRecordNameForContainer:
setStalenessInterval:
recordChangeTag
addOperation:
ic_fallbackThumbnail
contactIdentifiers
clearServerRecord
attachmentModel
setInCloud:
databaseScope
ic_saveWithLogDescription:
setPerShareCompletionBlock:
deviceMigrationStates
objectForKey:
standardUserDefaults
initWithManagedObjectContext:
dictionary
isCloudKitAccountAvailable
unifiedContactWithIdentifier:keysToFetch:error:
acceptanceStatus
legacyTombstones
objectForKeyedSubscript:
init
updateShares
managedObjectContextObjectsDidChange:
notesCloudContextDidFetchShare:
dealloc
isShareDirty
sharedInstance
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
cloudSharingController:failedToSaveShareWithError:
itemTitleForCloudSharingController:
itemThumbnailDataForCloudSharingController:
itemTypeForCloudSharingController:
cloudSharingControllerDidSaveShare:
cloudSharingControllerDidStopSharing:
_cloudSharingControllerDidModifyPrimarySwitch:
_cloudSharingControllerDidModifySecondarySwitch:
_cloudSharingControllerDidActivateShowSharedFolder
_cloudSharingControllerDidChooseTransport:
T@"ICCollaborationController",R,N
account
didFailToUpdateShareWithError:
rootRecordForObject:
newShareForObject:
existingShareForObject:
prepareShare:forObject:qualityOfService:completionHandler:
saveShare:forObject:qualityOfService:completionHandler:
saveShare:withRootRecord:object:qualityOfService:completionHandler:
fetchShareIfNecessaryForObject:completionHandler:
didSaveShare:accountID:
saveServerShare:persistParticipantEvents:accountID:
objectForCKShareRecordID:accountID:context:
objectForShare:accountID:context:
removeShareIfNeededWithOwnedObject:countParticipants:context:
didStopSharing:recordID:accountID:
acceptShareWithMetadata:managedObjectContext:completionHandler:
containerForUserRecordID:
containerForAccountID:
acceptShareWithMetadata:container:accountID:fetchObjectWithCompletionHandler:
populateParticipantDetailsForCloudSharingController:
highlightColorForUserID:inNote:isDark:
updateCKShareIDToRootRecordIDMappingWithShare:
presentingViewController
setPresentingViewController:
presentingBarButtonItem
setPresentingBarButtonItem:
setAccount:
folder
setFolder:
note
setNote:
newShareCreated
setNewShareCreated:
ckShareIDToRootRecordID
setCkShareIDToRootRecordID:
updateSharesDelayer
.cxx_destruct
_newShareCreated
_presentingViewController
_presentingBarButtonItem
_account
_folder
_note
_ckShareIDToRootRecordID
_updateSharesDelayer
T@"UIViewController",&,N,V_presentingViewController
T@"UIBarButtonItem",&,N,V_presentingBarButtonItem
T@"ICAccount",&,N,V_account
T@"ICFolder",&,N,V_folder
T@"ICNote",&,N,V_note
TB,N,V_newShareCreated
T@"NSMutableDictionary",&,N,V_ckShareIDToRootRecordID
T@"ICSelectorDelayer",R,N,V_updateSharesDelayer
pushBlock:
workDone
executeNextBlock
popBlock
hasNext
dispatchQueue
setDispatchQueue:
workInProgress
setWorkInProgress:
_blockQueue
_workInProgress
_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
TB,N,V_workInProgress
initialize
fetchSharedResourcesWithCompletion:
stopSharing:withCompletion:
stopSharingWithParticipant:completion:
stopAllSharingWithCompletion:
name
updateParticipantAccessLevelTo:onResource:withCompletion:
updateVisibilityTo:onResource:withCompletion:
T@"NSString",R,C,N
_addResource:
_getAndRemoveFromIndexResourcesForParticipant:
_refreshSources
_refreshCloudContextWithCompletion:
_stopSharingSharedResources:completion:
_stopSharingWithParticipant:completion:
cloudContextDelegate
setCloudContextDelegate:
_participantToResource
_sharedResources
_workQueue
_cloudContextDelegate
T@"DSNotesCloudContextDelegate",&,N,V_cloudContextDelegate
role
permission
identity
Tq,R,N
T@"<DSIdentifiable>",R,N
initWithShareParticipant:
cloudKitParticipant
_cloudKitParticipant
T@"CKShareParticipant",R,C,N,V_cloudKitParticipant
unifiedContactIdentifier
emailAddress
phoneNumber
nameComponents
T@"NSPersonNameComponents",R,C,N
shouldIgnoreError:
displayName
displayDetail
participants
visibility
participationAccess
T@"NSArray",R,C,N
TQ,R,N
initWithCloudSyncingObject:
isDeleted
isShared
hasParticipant:
callingParticipantRole
_removeParticipant:withCompletion:
_stopSharingResourceWithCompletion:
_participationAccessString
cloudSyncingObject
sharingStopped
setSharingStopped:
qualityOfService
_sharingStopped
_cloudSyncingObject
_qualityOfService
T@"ICCloudSyncingObject",R,C,N,V_cloudSyncingObject
TB,V_sharingStopped
Tq,R,N,V_qualityOfService
accountsDidChange:
cloudContext:userDidDeleteRecordZoneWithID:accountID:
cloudContext:receivedZoneNotFound:accountID:
cloudContext:sharedZoneWasDeleted:accountID:
cloudContext:didFetchUserRecord:accountID:
cloudContext:didFetchShare:accountID:
didFailPushingExceededStorageQuotaForContext:recordID:accountID:
accountIDsForCloudContext:managedObjectContext:
deleteCloudObjectIfFullyPushed:
syncPasswordProtectedNotesIfNessessary
updateAppleAccountBags
fixGallerySubAttachmentsIfNecessary
fixGallerySubAttachments
setMissingAttachmentFilesNeedToBeFetched
updateLastOSVersion
Failed to save share with error %@
Trying to get root record for %@, but we don't have a server record. This likely won't work.
Created share %@ with existing share reference for %@
Created share %@ for %@
Checking for an existing share for %@
Checking for share on %@ serverShare=%@ serverRecord.share=%@
Have a share that wasn't persisted for %@
Not checking parent object %@ for %@ because it's not in the same zone (object in %@ and parent in %@)
Preparing share %@ for %@
com.apple.notes.collaboration.prepareShare
Finished waiting for operations before preparing share for %@
saveShare:forObject:qualityOfService:completionHandler: shareArgument is nil
No root record for %@
Retrying to save share for %@
Using updated server share when retrying %@
Tried to save a nil share (%@) or a nil root record (%@) for object: %@
Tried to save a share (%@) without an account ID for object: %@
com.apple.notes.collaboration.saveShare
Saving Share: %@ with root record: %@ %@
Error saving share %@ for %@ %@: %@
Partial failure saving share for %@ %@
Error saving share for %@ when saving record ID %@ %@: %@
Saving server record %@ for %@ %@
Saving server share %@ for %@ %@
Server record %@ is not a share %@
No server record from error saving share for %@ %@ %@
Saved share %@ %@
No CKShare or error returned for %@ %@
Trying to fetchShareIfNecessaryForObject with empty accountID
Need to fetch share %@ for %@
Fetching share %@ with %@
Fetched share %@ %@
Error fetching share %@ %@: %@
com.apple.notes.collaboration.fetchShare
Setting server share on %@ %@ %@
Couldn't find cloud object for share %@
No record type in share %@
No root record reference for share %@
Deleting shares for object %@ failed with error %@
Couldn't find cloud object for share %@ recordID %@
Successfully fetched cloudObject for share %@ recordID %@ accountID %@
User stopped sharing %@ share %@ recordID %@
User removed themselves from shared %@ share %@ recordID %@
An error has occured when syncing the deletion of the share in didStopSharing: %@
Cannot associate invitation with object because share URL is missing {share: %@, accountID: %@}
Cannot associate invitation with object because root object or root object account is missing {share: %@, accountID: %@}
Updated invitation and associated it with object {share: %@, objectID: %@}
Accepting share for metadata %@
userRecordID is CKCurrentUserDefaultName. Fetching accountID and container.
Multiple accounts detected. Fetching container and accountID.
Single account or unable to fetch container. Using containerWithIdentifier.
Single account or unable to fetch account ID. Using cloudKitAccountInContext.
Couldn't find container for metadata %@
Couldn't find account id for container %@
Found existing object %@ for share metadata %@
No existing object for share metadata %@
com.apple.notes.collaboration.acceptShare
Accepting shared object at URL: %@, account ID = %@
Error accepting share at URL %@ %@: %@
Share accepted for URL %@ %@
Fetching record from share %@, account ID = %@
Error fetching record from share %@: %@
Fetched record from share %@
Using share from per-share completion block %@: %@
Falling back to share from metadata %@: %@
No root record when accepting share: %@
Accepting %@ with %@
Updating shares
Updating share
 {object: %@}
Cannot find share for object 
 skipping
Error updating share {error: %@}
Cloud sharing controller did save share: %@
Cloud sharing controller did stop sharing: %@
Cloud sharing controller did turn user edit highlighting: %@
Cloud sharing controller did turn hide alerts: %@
adding a block ...
finishing work ...
starting work ...
popping a block ...
Initializing notes context ...
Done initializing notes context ...
Adding shared resource, %@ ...
refreshing context ...
done syncing ICCloudContext ...
The error, %@, means that refreshing records failed after stoping sharing a resource. Stopping sharing actually succeded so ignoring.
An error, %@, has occured syncing icloud context.
Fetching all shared notes...
Done Fetching sharing for all shared notes, ...
The error, %@, means that refreshing records failed after stop sharing resourcee, %@. Stopping sharing actually succeded.
Stopping sharing for all shared notes ...
An error, %@, has occured retrieving shared resources.
An error, %@, has occured stopping sharing all resources.
Stop sharing all resources has completed successfully.
Done Stopping sharing for all shared notes ...
Stopping sharing for shared note, %@ ...
Shared resource, %@, is %@ class but should be DSNotesSharedResource
Already stop sharing resource, %@.
An error, %@, has occured stopping sharing resource, %@.
Done Stopping sharing for shared note, %@ ...
Stopping sharing with participant, %@ ...
Participant, %@, is %@ class but should be DSCloudKitParticipant
Already stop sharing with participant, %@, nothing to do.
An error, %@, has occured. The participant, %@, was not removed from shared resource, %@.
Done stopping sharing with participant, %@ ...
The strongSelf is null. We can no longer access the data to stop shating with partcipant, %@.
The level is unchanged we'll ignore.
The Public access is an increase in participation access. Any increase in access should be done through Notes app. Doing nothing.
An error, %@, has occured changing participant access level from public to private of sharing resource, %@.
We shouldn't have reached here. Either participationAccess, %lu, or the newAccessLevel, %lu, have unexpected values. Doing nothing.
There are more than one contact identifiers, %@, choosing the first, %@.
The ICCloudSyncingObject, %@, is not shared. Nothing to do.
The ICCloudSyncingObject, %@, shared, %@, does not have the participant, %@, in the participants list. Nothing to do.
Saving shared resource, %@, and share, %@.
Failed removing participant %@ from shared resource, %@.
Saved shared resource, %@.
An error, %@, has occured removing participant %@ from shared resource, %@.
No non owner participants left on shared resource, %@, removing share ...
An error, %@, has occured. Stop sharing resource, %@.
The error, %@, means that refreshing a record failed after stopping sharing resource, %@. Stoping sharing actually succeded.
Stopping sharing resource, %@, with participant, %@ ...
Already stoped sharing or participant, %@, does not participate in shared resource, %@.
Remove participant, %@ from shared resource, %@.
Stopping sharing resource, %@, with everyone ...
cloudSyncingObject, %@, class is unknown subclass, %@, of ICCloudSyncingObject.
Unknown participation access value %lu
Error recreating default folder for CloudKit account after the user purged the zone for account ID %@
Error saving after notes zone deleted by user for account ID %@: %@
%@ (%@) hasn't been fully pushed to the cloud. Not deleting.
Received an error that a zone (%@) wasn't found. Re-uploading everything for that zone for accountID %@.
Shared zone was deleted for account ID %@: %@
Deleting shared %@ for accountID %@
Not deleting shared %@ in wrong zone %@ for account ID %@
Cloud context fetched the user record, but we don't have a CloudKit account (account ID %@). Why not?
Setting the user record name for the CloudKit account to %@ for account ID %@
The cloud context fetched a user record ID (%@) different from our CloudKit account's user record ID (%@) for account ID %@
Checking if we need to re-sync password protected notes
Found previous OS version dictionary: %@
No previous OS version dictionary
No CloudKit account, so no need to re-sync
Fetching user record to check if we need to re-sync
Error fetching user record when checking for re-sync: %@
Fetched user record when checking for re-sync: %@
Device has been upgraded and the user created a password-protected note on a different device. Deleting server records and change tokens, and performing a full sync.
clearing server records
No crypto data on user record
Already updated iCloud account bags
Updating account bags for iCloud accounts
Updating account bag for %@
Error updating account bag for %@ authenticated=%d: %@
Updated account bag for %@
Already fixed gallery sub attachments
Fixing gallery sub attachments
Requesting sub attachment: %@ for: %@
Parent attachment already set for: %@
Checking for missing attachment files that need to be fetched
Setting all media needs to be fetched from cloud
No file for %@, marking as needing to be fetched
Finished setting missing attachment files to be fetched
Stopping all CloudKit operations after deleting CloudKit account
Updating cloud context state after accounts changed
ICCollaborationController
UICloudSharingControllerDelegate
NSObject
UICloudSharingControllerDelegate_Private
DSBlockExecutionQueue
DSNotesSource
DSSource
DSCloudKitParticipant
DSParticipation
DSProtocols
DSIdentifiable
DSNotesSharedResource
DSSharedResource
DSNotesCloudContextDelegate
ICCloudContextDelegate
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8@16
v24@0:8@16
v32@0:8@"UICloudSharingController"16@"NSError"24
@"NSString"24@0:8@"UICloudSharingController"16
@"NSData"24@0:8@"UICloudSharingController"16
v24@0:8@"UICloudSharingController"16
v20@0:8B16
v16@0:8
v24@0:8@"NSString"16
v48@0:8@16@24q32@?40
v56@0:8@16@24@32q40@?48
v32@0:8@16@?24
v36@0:8@16B24@28
@40@0:8@16@24@32
v40@0:8@16@24@32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@36@0:8@16@24B32
@"UIViewController"
@"UIBarButtonItem"
@"ICAccount"
@"ICFolder"
@"ICNote"
@"NSMutableDictionary"
@"ICSelectorDelayer"
v24@0:8@?16
@?16@0:8
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
v40@0:8Q16@24@?32
v40@0:8q16@24@?32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"<DSSharedResource>"16@?<v@?@"NSError">24
v32@0:8@"<DSParticipation>"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8Q16@"<DSSharedResource>"24@?<v@?@"<DSSharedResource>"@"NSError">32
v40@0:8q16@"<DSSharedResource>"24@?<v@?@"<DSSharedResource>"@"NSError">32
@"DSBlockExecutionQueue"
@"DSNotesCloudContextDelegate"
q16@0:8
@"<DSIdentifiable>"16@0:8
@"CKShareParticipant"
@"NSPersonNameComponents"16@0:8
@"NSArray"16@0:8
@"ICCloudSyncingObject"
@32@0:8@16@24
v40@0:8@"ICCloudContext"16@"CKRecordZoneID"24@"NSString"32
v40@0:8@"ICCloudContext"16@"CKRecord"24@"NSString"32
v40@0:8@"ICCloudContext"16@"CKShare"24@"NSString"32
v40@0:8@"ICCloudContext"16@"CKRecordID"24@"NSString"32
@"NSArray"32@0:8@"ICCloudContext"16@"NSManagedObjectContext"24
