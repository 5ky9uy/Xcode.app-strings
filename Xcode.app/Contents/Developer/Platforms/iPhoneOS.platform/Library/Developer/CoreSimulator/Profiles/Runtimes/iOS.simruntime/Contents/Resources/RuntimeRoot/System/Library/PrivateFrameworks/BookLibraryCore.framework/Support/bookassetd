@(#)PROGRAM:bookassetd  PROJECT:BookLibrary-570
iBooks
metrics
push-notifications/environment
v8@?0
production
BLNotificationConnection.Dispatch
using existing connection
and no other connection is available
v28@?0@"NSString"8B16@"NSError"20
v24@?0@"NSArray"8@"NSError"16
reason
preorder-book-available
details
notificationSubtype
preOrderBook
contentAdamId
v12@?0B8
endId
guid
kbsync
startId
%llu
v20@?0B8@"NSError"12
v32@?0@"ML3Track"8Q16^B24
com.apple.aps.bookassetd
com.apple.iBooks
com.apple.bookassetd
books-notification-extension
v24@?0Q8@"NSError"16
v20@?0@"NSError"8B16
v16@?0@"NSError"8
com.apple.bookassetd.BLMLImporter
B16@?0@"ML3DatabaseConnection"8
scheduledItemsTimerInBLMLImporter
succeeded
failed
dispatchAsyncForBLMLImporter
%lld
Missing account
q24@?0@8@16
com.apple.bookassetd.startup.transaction
com.apple.bookassetd.cleanup.transaction
BKSimulateCrashAtInstallStart
BKSimulateCrashAtInstallDuringDecrypt
BKSimulateCrashAtInstallDuringUnzip
BKSimulateCrashAtInstallDuringFinish
BKSimulateDeviceOutOfSpace
v32@?0@"BLDownload"8Q16^B24
v32@?0@8Q16^B24
nil download manager
bookassetd is missing a download manager
nil purchase manager
bookassetd is missing a purchase manager
com.apple.bookassetd.BLService
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSNumber"8@"NSError"16
nil purchase parameters
bookassetd cannot effect a purchase without purchase parameters
cancellingAllTransactions
fairplay:sData
v24@?0@"NSURL"8^B16
v24@?0@"BLBookItem"8^B16
q24@?0@"BLBookItem"8@"BLBookItem"16
v32@?0@"BLBookItem"8Q16^B24
B16@?0@"NSDictionary"8
B24@?0@"NSURL"8@"NSError"16
com.apple.bookassetd.BLMLImporterItem
duration
tracks
Documents/BLDatabaseManager
/var/mobile/Media/Books/Downloads/Database/
DownloadsDatabase
momd
BLDatabaseManager.sqlite
BLDatabaseManager
@"NSDictionary"8@?0
BLDownloadInfo
%K = %@ || %K = %@
state
v32@?0@"BLDownloadInfo"8Q16^B24
-[BLDatabaseManager fetchListOfAllDownloadCandidatesWithCompletion:]_block_invoke
%K = %@
startTime
-[BLDatabaseManager fetchListOfPendingDownloadsSortedByStartTime:]_block_invoke_3
%K = %@ || %K = %@ || %K = %@ || %K = %@ ||  %K = %@
BLDownloadPolicyInfo
%K IN %@
policyID
-[BLDatabaseManager purgeAllStaleDownloadsWithCompletion:]_block_invoke
v24@?0@"BLDownloadInfo"8@"NSError"16
-[BLDatabaseManager updateDownloadWithID:updateBlock:completion:]_block_invoke
%K = %@ || %K = %@ || %K = %@ || %K = %@ || %K = %@
-[BLDatabaseManager updateAllInterruptedDownloadsToTheirProperStatesWithCompletion:]_block_invoke
-[BLDatabaseManager saveOrUpdateDownloadPolicy:completion:]_block_invoke
v32@?0@"BLDownloadPolicyInfo"8@"NSArray"16@"NSError"24
-[BLDatabaseManager _deleteDownloadPolicyWithID:save:completion:]_block_invoke
-[BLDatabaseManager fetchListOfAllDownloadPoliciesWithCompletion:]_block_invoke
-[BLDatabaseManager fetchDownloadListWithCompletion:]_block_invoke
-[BLDatabaseManager addDownloadWithBuyParameters:storeID:clientIdentifier:completion:]_block_invoke
-[BLDatabaseManager addDownloadWithPermlink:clientIdentifier:completion:]_block_invoke
downloadID
expected to have a url
string expected for url
invalid numberOfBytesToHash
fileExtention
epubRightsData
dpInfo
artworkURL
publicationVersion
isAutomaticDownload
isRestore
downloadKey
assetFileSize
isZipStreamable
storeItemIdentifier
artistName
title
subtitle
genre
kind
thumbnailImageURL
md5HashStrings
numberOfBytesToHash
accountID
chunkSize
-[BLDatabaseManager requestDownloadWithParameters:completion:]_block_invoke
v24@?0@"NSError"8@"NSDictionary"16
Missing downloadID
cannot pause download that is not active
missing download
%K == %@
storePlaylistIdentifier
storeIdentifier
cannot cancel download that is not active or paused
cannot resume download with state: %@
-[BLDatabaseManager _fetchDownloadsWithPredicate:sync:block:]_block_invoke
%K == %@ or %K == %@
B32@?0@"BLDownloadPolicyInfo"8Q16^B24
-[BLDatabaseManager _fetchDownloadPolicyInfoEntityWithID:relatedPolicyWithStorePlaylistIdentifier:block:]_block_invoke
-[BLDatabaseManager _fetchDownloadPoliciesWithPredicate:block:]_block_invoke
CoreData error in %s
q16@?0@"NSDictionary"8
Required downloadID missing.
Required plist location missing.
Required metadata plist was empty or failed to parse.
Required asset path missing.
<unknown>
<%@(%p)>
_installInfo = %@;
%@-%ld
pinf
sinf
BLDownloadMetadataDownloadPolicyCellularResultKey
metadata
DownloaderID
FamilyID
PurchaserID
DSPersonID
AppleID
appleId
iTunesMetadata
plist
auto-download
isDeviceBased
isRental
launch-extras-url
artwork-urls
softwareVersionBundleId
bundle-id
cancel-download-url
UIRequiredDeviceCapabilities
compilation
composerName
copyright
description
download-permalink
episode-guid
episode-number
episode-sort-id
explicit
genreName
genre-name
high-definition
softwareIcon57x57URL
icon-url
is-auto-download
is-redownload
isSample
isSharedResource
songId
network-name
page-progression-direction
pageProgressionDirection
playlistArtistName
podcast-feed-url
podcast-type
preorder-id
publication-version
buy-params-256
buyParams
action-params
redownload-params
cloud-id
sagaId
season-number
show-name
longSeasonDescription
sort-album
sort-artist
sort-name
thumbnail-url
thumbnail-newsstand-binding-edge
thumbnail-newsstand-binding-type
itemName
unmodified-title
videoDetails
year
show-composer
is-apple-music-show
work
movement
movement-number
movement-count
download-id
artistId
composerId
discCount
discNumber
genreId
itemId
longDescription
playlistId
playlistName
releaseDate
trackCount
trackNumber
artist-id
artist-name
composer-id
disc-count
disc-number
genre-id
item-id
long-description
collection-id
collection-name
release-date
track-count
track-number
com.apple.iTunesStore.downloadInfo
preferredAssetFlavor
requestPersistentID
assets
betaExternalVersionIdentifier
fileExtension
hls-playlist-url
chunks
hashes
has-4k
has-dolby-vision
has-hdr
is-hls
is-purchased-redownload
isStreamable
rating
rental-id
sinfs
variantId
ebook
lrpluspub
lrpub
pluspub
yyyy-MM-dd'T'HH:mm:ss'Z'
iTunesArtwork
Could not produce a local downloads directory.
Unknown artwork URL or download ID.
com.apple.BookLibrary.BLStorage
com.apple.BookLibrary.BLOperationProgress
%@: %lld / %lld @ %.3f (%.2f seconds)
com.apple.itunesstored.fairplay.decryptfile.%@
Info
CellularResult
download-queue-item-count
Download Using Data Roaming?
Localizable
Download Over Cellular?
Download Over Cellular
Wait for WLAN
Wait for Wi-Fi
book
This audiobook has %@ remaining to download. Downloading over a cellular network may incur additional fees.
This book has %@ remaining to download. Downloading over a cellular network may incur additional fees.
This audiobook is %@. Downloading over a cellular network may incur additional fees.
This book is %@. Downloading over a cellular network may incur additional fees.
Downloading over a cellular network may incur additional fees.
wapi
BLCellularDataPromptActionDownloadLater
BLCellularDataPromptActionDownloadNow
com.apple.bookassetd.BLDownloadPolicyManager
cancel-purchase-batch
customerMessage
dsPersonId
failed-items
failureType
items
songList
keybag
more
page-type
template-name
preorder-success
appClusterAssignmentsResultSet
clusterVersionId
appsClusterAssignments
adamId
clusterAssignments
protocol
trigger-download
com.apple.bookassetd.BLStoreDownloadQueueResponse
com.apple.nsurlsessiond-events
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.books.plist.changed
com.apple.bookassetd.restart-downloads-at-startup
com.apple.bookassetd.notify-server-for-failed-downloads
com.apple.bookassetd.commit-progress
BLEventNameDownloadStart
BLEventNameDownloadStop
com.apple.bookassetd.BLDownloadPipeline.background
com.apple.bookassetd.BLDownloadPipeline.prepare
com.apple.bookassetd.BLDownloadPipeline.processing
com.apple.bookassetd.BLDownloadPipeline.sampleDownloads
com.apple.bookassetd.BLDownloadPipeline.discretionaryDownloads
com.apple.bookassetd.BLDownloadPipeline.nonDiscretionaryDownloads
com.apple.bookassetd.BLDownloadPipeline
v24@?0@"NSSet"8@"NSError"16
X-Apple-JADownloadQueue-Token
Retry-After
InternalBuild
bytes=%llu-
Range
Error performing download operation
There is no NSURLSessionTask to start for this download.
v24@?0@"NSOperation<BLPrepareDownloadOperation>"8@"BLPrepareDownloadResponse"16
v24@?0@"NSOperation<BLPrepareDownloadOperation>"8^B16
User Stopped
Unrecoverable Error
Unreachable Local Cache Error
Download Error
BKEmulateCellularNetwork
BKEmulateRoamingNetwork
com.apple.bookassetd.BLNetworkMonitor
path
v24@?0@"CTDataStatus"8@"NSError"16
BLNetworkStateDidChangeNotification
com.apple.mobile.cache_delete_ibooks
BLSharedStorageUseChangedNotification
BLSharedStorageUseChangedSourceKey
BLSharedStorageUseChangedUrgencyKey
BLSharedStorageUseChangedVolumeKey
BLSharedStorageUseChangedRequestedKey
BLSharedStorageUseChangedPurgedKey
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
purge
periodic
localhost
Content-Range
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
HEAD
identity
Accept-Encoding
%@=%@
v28@?0C8Q12^{__CFError=}20
com.apple.bookassetd.
discretionary.
powered.
wifi.
inexpensive.
default
Required store identifier is missing.
Unprotect failed on audiobook with download id: %@
Download Cancelled By User
Purchases
v24@?0@"AMSAuthenticateResult"8@"NSError"16
Missing proxy object
No proxy object to request presenter from client for showing purchase authentication. Force purchase to fail.
v24@?0@"AMSDialogResult"8@"NSError"16
No proxy object to request presenter from client for showing purchase dialog. Force purchase to fail.
v24@?0@"AMSEngagementResult"8@"NSError"16
No proxy object to request presenter from client for showing purchase engagement. Force purchase to fail.
v32@?0q8Q16^B24
com.apple.iBooks.BookDataStoreService
sourceApp
human-friendly-publication-version
languages
PageProgression
artwork-template-name
asset-info
file-size
flavor
purchaseDate
accountInfo
Artist
DSID
Estimated Download Size
Flavor
Genre
Path
Backup-Path
iTunesU Permlink
Item ID
Page Progression Direction
Persistent ID
Publication Version
Release Date
Sort Artist
Sort Name
Storefront ID
Name
usesSharedAsset
Album
Sort Album
Copyright
isExplicit
Human Readable Publication Version
Languages
PlaylistID
clusterId
launchCountWeight
usageDurationWeight
{ itemID: %@ clusterID: %@  clusterVersion: %@ forgroundUsageWeight: %@ launchWeight: %@ }
max-item-count
device-name
serial-number
AMSServerErrorCode
text/xml
MediaLibraryManager Queue
label
rank
system
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
ar-movies
bo-movies
br-movies
bg-movies
cl-movies
co-movies
cr-movies
cy-movies
cz-movies
ec-movies
sv-movies
ee-movies
gt-movies
hn-movies
hu-movies
lv-movies
lt-movies
mt-movies
ni-movies
pa-movies
py-movies
pe-movies
pl-movies
ro-movies
sk-movies
si-movies
uy-movies
ve-movies
jm-movies
gy-movies
sr-movies
gf-movies
do-movies
bn-movies
by-movies
cn-movies
ge-movies
hk-movies
id-movies
is-movies
kg-movies
kh-movies
kr-movies
kz-movies
la-movies
lk-movies
md-movies
mk-movies
mo-movies
my-movies
ph-movies
ru-movies
sg-movies
th-movies
tj-movies
tr-movies
tw-movies
ua-movies
uz-movies
vn-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
riaa
us-cable
apple
com.apple.ibooks.BLService.BLBookInstallManagerQueue
(%K == %@)
META-INF
sinf.xml
Bad backup plist
This backup path for this entry could not be found.
This plist entry for representing this download could not be found.
installOperation
empty
not empty
iTunesMetadata.plist
%@: Could not install non-existant file: %@
epub
ibooks
BLErrorDomain
message
Underlying Error Description
BLKeyHTTPResponseCode
Unknown Error
BLService error
unknown download id (%@)
/private/var
com.apple.bookassetd.CacheDeleteStorageManager
CACHE_DELETE_ID
FairPlayErrorDomain
SinfPropertyAccountIdentifier
SinfPropertyFairPlayKeyIdentifier
Books
com.apple.ibooks.BLService.BLBookManifest
BLManifestTestEnv
BLLibrarySimulateMultiUser
Documents/BLDownloads
automaticDownloadKinds
com.apple.ibooks.BLService.DownloadManager
BLDownloadManagerCustomPath
v24@?0@"BLDownload"8@"NSError"16
v32@?0@"NSError"8@"NSArray"16@"NSDictionary"24
(%K = %@) && (%K = %@ || %K = %@)
box-height
box-width
scale
%@: [%@ %ldx%ld] %@
download-queue-item.default
Could not install non-existant file: %@
%@: %@ / %@
pendingBooks
pendingSongs
checkBookQueue
check-download-queue
books
media
Missing URL. 
Missing property k. 
Failed to decode k. 
Missing property s. 
Failed to decode s. 
Missing or malformed fields
hashType
SHA1
com.apple.bookassetd.cancelError
com.apple.bookassetd.cancelReason
com.apple.bookassetd.dataConsumer
com.apple.bookassetd.taskMetrics
asset
wasWarnedOverLimitBuyOnCellular
other
com.apple.ibooks.BLService._BLOngoingPurchaseRequests
com.apple.ibooks.BLService.PurchaseManager
com.apple.ibooks.BLService.PurchaseManager.restoreAuthenticationQueue
v32@?0@"NSString"8@"BLPurchaseResponse"16@"NSError"24
com.apple.application-identifier
Memory Management Error
Object prematurely released
v44@?0@"BLPurchaseRequest"8@"NSString"16B24@"<BLUIHostServiceProtocol>"28@?<v@?@"NSString"@"BLPurchaseResponse"@"NSError">36
Create Download Error
Error encountered adding download to database.
v32@?0@"NSNumber"8@"BLStoreDownloadItem"16@"NSError"24
Missing restore response item
v16@?0@"BLDownloadInfo"8
<Audiobook>
true
No Purchase Result
Purchase results was empty with no error.
local-server-info
encryptionKey
salt
%K CONTAINS %@
buyParameters
Purchase manager went away
We have neither a storeID nor purchase parameters for this request
permlink
Missing buy parameters.
image-type
com.apple.ibooks.BLService.BLRestoreAccountsHelper
To restore your apps, books, and other media from backup, enter your Apple ID password in Settings. Your content cannot be restored without this verification. 
Restore from Backup
Don\U2019t Restore
Books content restore
@"NSDictionary"16@?0@"BLDownload"8
<none>
@"NSDictionary"16@?0@"BLDownloadPolicy"8
cellularResult
downloads
<timed out>
policies
com.apple.bookassetd.xpc-listener-ready
com.apple.bookassetd.startup-queue
com.apple.bookassetd.xpc-dispatch
com.apple.ibooks.BLService.private
com.apple.itunesstored.private
Service not ready (probably before first unlock)
Process missing entitlements.
com.apple.ibooks.BLService
@"<BLCacheDeletePurgeableProvider>"8@?0
v16@?0@"NSNotification"8
{ itemID: %@ t: %@ a: %@, kind: %@ }
%02x
track_items
v28@?0B8@"NSError"12@"NSData"20
store_collection_id=%llu
store_item_id=%llu
%@|%@|%ld|%@
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
Error building URL requestPromise for marking downloadID as done for server.
drm-free
software-external-version-identifier
store-front-id
dimensions
ownerDsid
Unable to extract
Missing either source or destination path.
<%@(%p)>
_destinationFilePath = %@;
_sourceFilePath = %@;
_fileAttributes = %@;
init
bagKeySet
registerBagKeySet:forProfile:profileVersion:
_keySet
bagForProfile:profileVersion:
stringForKey:
isExpired
expirationDate
profile
profileVersion
arrayForKey:
boolForKey:
createSnapshotWithCompletion:
doubleForKey:
integerForKey:
URLForKey:
dictionaryForKey:
addBagKey:valueType:
addBagKey:valueType:defaultValue:
defaultBag
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
URLForKey:account:
processInfo
expired
TB,R,N,GisExpired
T@"NSDate",R,N
T@"NSString",R,C,N
T@"AMSProcessInfo",R,C,N
T@"BLServiceBag",R
pushNotificationEnvironment
.cxx_destruct
_bag
T@"AMSBagValue",R
setUserNotificationExtensionId:
initWithConfiguration:bag:
defaultCenter
_handleBagChangedNotification:
addObserver:selector:name:object:
_initializeConnections
isEqualToString:
isValidEnvironment:
initWithEnvironment:queue:
setDelegate:
valueWithCompletion:
actionType
_handleCheckDownloadQueueMessage:
_shouldHandlePreorderAvailableNotification:
_handlePreorderAvailableNotification:
userInfo
shouldHandleNotification:
handleNotification:
bu_activeStoreAccount
bu_DSID
accountID
isEqualToNumber:
automaticDownloadProcessor
processAutomaticDownloadsWithCompletion:
actionURL
bu_dictionaryForQueryItems
objectForKeyedSubscript:
length
addStoreIDtoWantToReadList:withCompletion:
connection:didRecieveMessage:
initWithAutomaticDownloadProcessor:
setAutomaticDownloadProcessor:
dispatchQueue
setDispatchQueue:
pushHandler
setPushHandler:
connection
setConnection:
environment
setEnvironment:
_automaticDownloadProcessor
_dispatchQueue
_pushHandler
_connection
_environment
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"AMSPushHandler",&,N,V_pushHandler
T@"BLNotificationConnection",&,N,V_connection
T@"NSString",C,N,V_environment
T@"<BLAutomaticDownloadProcessing>",&,N,V_automaticDownloadProcessor
copy
lock
unlock
_libraryItem
itemMediaPath
deviceMLImporter
addLibraryItem:error:
_setInsertedItemPersistentIdentifier:
setError:
setSuccess:
initWithLongLong:
initWithIPodLibraryItem:
IPodLibraryItem
insertedItemPersistentIdentifier
_insertedItemPersistentIdentifier
T@"BLMLImporterItem",R
T@"NSNumber",R
bu_automaticDownloadQueueURL
initWithBagURL:
initWithBagURL:account:
initWithObjects:
count
isCancelled
objectAtIndexedSubscript:
_loadDownloadsFromStart:toEnd:
removeAllObjects
removeObjectsInRange:
uiHelper
handleDialogRequest:completion:
handleEngagementRequest:completion:
handleAuthenticateRequest:completion:
setUiHelper:
setUiHostProxy:
bu_sharedAccountStore
ams_activeiTunesAccount
rangesToLoad
addObjectsFromArray:
downloads
unionOrderedSet:
_newURLRequestWithStartIdentifier:endIdentifier:error:
uiHostProxy
defaultSession
dataTaskPromiseWithRequest:
resultWithError:
object
account
initWithDictionary:userIdentifier:
keybag
bl_importKeybagData:
_handleResponse:
_account
initWithBag:
setAccount:
setRequestEncoding:
setAnisetteType:
dictionary
deviceGUID
setObject:forKeyedSubscript:
bl_keybagSyncDataForAccount:withTransactionType:
unsignedLongLongValue
stringWithFormat:
bagURL
requestWithMethod:bagURL:parameters:
requestWithMethod:URL:parameters:
operationForAutomaticDownloadQueue
AMSURLSession:task:handleAuthenticateRequest:completion:
AMSURLSession:task:handleDialogRequest:completion:
AMSURLSession:task:handleEngagementRequest:completion:
AMSURLSession:task:shouldFailWithServerError:
AMSURLSession:handleAuthenticateRequest:completion:
AMSURLSession:handleDialogRequest:completion:
AMSURLSession:shouldFailWithServerError:
AMSURLSession:shouldHandleAuthenticationForAccount:dialogDictionary:
AMSURLSession:shouldHandleDialogDictionary:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithURL:
_downloads
_rangesToLoad
_requestEncoder
_uiHostProxy
_bagURL
_URL
_uiHelper
T@"BLPurchaseUIHelper",&,N,V_uiHelper
T@"ACAccount",R,N,V_account
T@"<BLUIHostServiceProtocol>",&,N,V_uiHostProxy
T@"NSOrderedSet",R,N,V_downloads
T@"AMSBagValue",R,N,V_bagURL
T@"NSURL",R,N,V_URL
mutableCopy
setCachePolicy:
requestByEncodingRequest:parameters:
countByEnumeratingWithState:objects:count:
objectForKey:
addObject:
_integerValueForKey:defaultValue:
numberWithInteger:
valueForUserInfoKey:
URLWithString:
isEqualToDictionary:
isEqualToMessage:
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
integerValue
initWithUserInfo:
_userInfo
T@"NSNumber",R,N
Tq,R,N
T@"NSURL",R,N
T@"NSDictionary",R,N,V_userInfo
_keepAliveTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
setParentOperation:
_addSubOperation:
main
dispatchCompletionBlock
_removeSubOperation:
error
success
arrayWithObject:
addOperations:waitUntilFinished:
stopRunLoop
operationRunLoop
getCFRunLoop
cancel
makeObjectsPerformSelector:
shouldRunWithBackgroundPriority
currentThread
_main:
callStackReturnAddresses
_failAfterException
shouldMessageMainThread
completionBlock
delegate
operation:updatedProgress:
delegateDispatch:
_sendErrorToDelegate:
currentRunLoop
setOperationRunLoop:
setMaxValue:
sendProgressToDelegate
_sendWillStartToDelegate
run:
maxValue
setCurrentValue:
setEstimatedTimeRemaining:
_sendSuccessToDelegate
removeObject:
operation:failedWithError:
operationFinished:
operationWillStart:
runSubOperation:returningError:
runSubOperation:onQueue:error:
setShouldRunWithBackgroundPriority:
progress
progressWeight
runRunLoopUntilStopped
setShouldMessageMainThread:
parentOperation
_delegate
_error
_lock
_operationRunLoop
_parentOperation
_progress
_shouldMessageMainThread
_subOperations
_shouldRunWithBackgroundPriority
_stopped
_success
T@"BLOperation",&,V_parentOperation
T@"<BLOperationProgress>",R,N
T@"NSRunLoop",&,V_operationRunLoop
T@"<BLOperationDelegate>",W
T@"NSError",&,V_error
TB,V_success
Tq,R
TB,V_shouldRunWithBackgroundPriority
UTF8String
numberWithUnsignedLongLong:
bl_itemIdentifierValue
bl_numberWithItemIdentifier:
initWithBundleIdentifier:
categoryWithIdentifier:actions:intentIdentifiers:options:
arrayWithObjects:count:
setWithArray:
setNotificationCategories:
setWantsNotificationResponsesDelivered
shouldHandleNotificationResponse:
handleNotificationResponse:bag:
addFinishBlock:
sharedInstance
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
T@"BLNotificationManager",R
_center
setItemMetadata:
longLongValue
setValue:forAdditionalEntityProperty:
mediaLibraryManager
addLibraryItemWithoutWaiting:
valueForProperty:
enumerateTracksWithStorePlaylistIdentifier:usingBlock:
removeObjectsInArray:
removeMediaItemsForStoreIDs:
initWithInfo:mediaLibraryManager:
purchasedAssetWithMetadata:familyAccountID:
cancelPurchasesWithMetadata:subitemsToIgnore:
installOperationForInstallInfo:
_mediaLibraryManager
T@"BLMediaLibraryManager",R,N,V_mediaLibraryManager
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
shutdown
dealloc
bu_md5
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
queue
setQueue:
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"APSConnection",&,N,V_connection
T@"<BLNotificationConnectionDelegate>",W,N,V_delegate
assetContainerForDownloadKind:isPermlink:
_overrideAssetContainersForTestingWithEbookAssetContainer:audiobookAssetContainer:pdfAssetContainer:
initWithPath:options:
prepareForExtraction:
setExtractorDelegate:
supplyBytes:withCompletionBlock:
resumptionOffset
_diskUsageForPath:
finishStreamWithCompletionBlock:
suspend
suspendStreamWithCompletionBlock:
removeItemAtPath:error:
setWithCapacity:
arrayWithCapacity:
objectAtIndex:
removeObjectAtIndex:
fileSystemRepresentation
_stringWithFileSystemRepresentation:length:
stringByAppendingPathComponent:
containsObject:
defaultManager
stringWithFileSystemRepresentation:length:
setExtractionProgress:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
consumeData:error:
diskUsage
finish:
reset
truncate
_stringWithFileSystemRepresentation:
hasConsumedData
percentComplete
_extractor
_hasConsumedData
_options
_path
_percentComplete
_resumptionOffset
code
domain
setMaxConcurrentOperationCount:
cancelAllOperations
autoupdatingSharedLibrary
_addLibraryItems:toMusicLibrary:itemPids:error:
_commitScheduledLibraryItems
_dispatchAsync:
predicateWithProperty:equalToInteger:
queryWithLibrary:predicate:
deleteAllEntitiesFromLibrary
performDatabaseTransactionWithBlock:
_removeDownloadWithIdentifier:canceled:inLibrary:
scheduleLibraryItems:
accountCacheDatabase
setAppleID:forDSID:
itemMetadata
mediaTypeForStoreDownload:
libraryPersistentIdentifier
importLibraryItems:toMusicLibrary:importedItemPids:
setLibraryPersistentIdentifier:
initWithPersistentID:inLibrary:
stringByDeletingLastPathComponent
lastPathComponent
isDownloading
_setDownloadPropertiesForTrack:usingLibraryItem:
setWithObject:
updateType
itemArtworkData
populateArtworkCacheWithArtworkData:
persistentID
sinfs
initWithSinfArray:
protectionType
isDRMFree
populateLocationPropertiesWithPath:protectionType:
sinfsArray
copyValueForField:error:
setValue:forProperty:
addLibraryItems:error:
initWithFormat:
predicateWithProperty:equalToValue:
anyInLibrary:predicate:
getValues:forProperties:count:
boolValue
deleteFromLibrary
setValues:forProperties:count:
itemDownloadIdentifier
commitScheduledLibraryItems
deleteAllOTATracks
removeDownloadsWithIdentifiers:canceled:
removeDownloadWithIdentifier:canceled:
scheduleLibraryItem:
setAppleIdentifier:forAccountIdentifier:
_operationQueue
_scheduledItems
_scheduledItemTimer
assetIdentifier
playlistIdentifier
permLink
automaticType
bundleIdentifier
kind
downloadIdentifier
transferProgressFraction
artistName
title
subtitle
collectionArtistName
collectionTitle
genre
thumbnailImageURL
isLocalCacheServer
transactionIdentifier
cancelDownloadURL
isRestore
isSample
isPurchase
purchaseDate
persistentIdentifier
storeAccountIdentifier
_overallProgress
setTransferProgress:
allocWithZone:
setAutomaticType:
copyWithZone:
setBundleIdentifier:
setDownloadIdentifier:
setKind:
setAssetIdentifier:
setPlaylistIdentifier:
overallProgress
setOverallProgress:
requiresDownloadHandler
setRequiresDownloadHandler:
downloadPhase
setDownloadPhase:
transferBytesExpected
setTransferBytesExpected:
transferBytesWritten
setTransferBytesWritten:
setTransferProgressFraction:
setArtistName:
setTitle:
setSubtitle:
setCollectionArtistName:
setCollectionTitle:
setGenre:
setThumbnailImageURL:
setCancelDownloadURL:
setTransactionIdentifier:
initWithPrepareDownloadResponse:
setFinishProgress:
setTransferProgressWithBytesWritten:totalBytesExpected:
setPermLink:
setIsLocalCacheServer:
transferResumptionOffset
setTransferResumptionOffset:
canPause
_requiresDownloadHandler
_isLocalCacheServer
_isRestore
_canPause
_isSample
_isPurchase
_downloadIdentifier
_assetIdentifier
_playlistIdentifier
_permLink
_automaticType
_bundleIdentifier
_kind
_transferBytesExpected
_transferBytesWritten
_transferProgressFraction
_transferResumptionOffset
_downloadPhase
_artistName
_title
_subtitle
_collectionArtistName
_collectionTitle
_genre
_thumbnailImageURL
_transactionIdentifier
_cancelDownloadURL
_purchaseDate
_persistentIdentifier
_storeAccountIdentifier
T@"<BLOperationProgress>",&,N,V_overallProgress
T@"NSString",C,N,V_downloadIdentifier
Tq,N,V_assetIdentifier
T@"NSNumber",&,N,V_playlistIdentifier
T@"NSString",C,N,V_permLink
Tq,N,V_automaticType
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_kind
TB,N,V_requiresDownloadHandler
TB,N,V_isLocalCacheServer
Tq,N,V_transferBytesExpected
Tq,N,V_transferBytesWritten
Td,N,V_transferProgressFraction
TQ,N,V_transferResumptionOffset
Tq,N,V_downloadPhase
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_title
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_collectionArtistName
T@"NSString",C,N,V_collectionTitle
T@"NSString",C,N,V_genre
T@"NSString",C,N,V_thumbnailImageURL
T@"NSString",C,N,V_transactionIdentifier
T@"NSString",C,N,V_cancelDownloadURL
TB,R,N,V_isRestore
TB,R,N,V_canPause
TB,R,N,V_isSample
TB,R,N,V_isPurchase
T@"NSDate",R,N,V_purchaseDate
Tq,R,N,V_persistentIdentifier
T@"NSNumber",R,N,V_storeAccountIdentifier
authenticationQueue
initWithAuthenticationQueue:
establishPrimaryAccount
initWithAccount:bag:
performFamilyInfoLookup
familyMembers
iTunesDSID
downloadItems
_sanitizeRestoreItemAccountID:accountsHelper:error:
storeAccountID
setStoreOriginalPurchaserAccountID:
setStoreAccountID:
isEligibleForRestore:
storeOriginalPurchaserAccountID
bu_storeAccountWithDSID:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
ams_setDSID:
username
storeAccountAppleID
setUsername:
ams_storefront
storeFrontID
ams_setStorefront:
componentsJoinedByString:
setRequestItems:
_applyResponses:
_sortedAccountIDs:
initWithDownloadItems:account:accountsHelper:
setServerResponseWithError:
restoreDownloadItemsOperation:didReceiveResponse:
serverResponse
itemIdentifier
requestItems
storeItemID
errorForItemIdentifier:
responseItemBlock
accountIDForAccountName:error:
setStoreAccountAppleID:
allKeys
sortedArrayUsingComparator:
initWithRestoreDownloadItems:authenticationQueue:responseItemBlock:
setDownloadItems:
setResponseItemBlock:
_authenticationQueue
_downloadItems
_responseItemBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_authenticationQueue
T@"NSArray",C,N,V_downloadItems
T@?,C,N,V_responseItemBlock
initWithDatabaseManager:
initWithDatabaseManager:downloadPolicyManager:transactionCoordinator:installManager:
initWithDatabaseManager:downloadPolicyManager:transactionCoordinator:
installProgressDelegate
setProgressDelegate:
addObserver:accountTypes:
standardUserDefaults
registerDefaults:
removeObserver:accountTypes:
purchaseManager
downloadManager
installManager
start
checkDownloadsWithCompletion:
purgeStaleDownloadsWithCompletion:
willStartTransactionWithIdentifier:
didFinishTransactionWithIdenfifier:
restartInterruptedInstalls:
cleanupOrphanedScratchDirectoriesWithCompletion:
databaseManager
downloadID
enumerateObjectsUsingBlock:
downloadsDirectory
path
contentsOfDirectoryAtPath:error:
cleanupDownloadScratchDirectoryForDownloadID:
fetchDownloadListWithCompletion:
fetchDownloadFromDownloadID:withCompletion:
requestDownloadWithParameters:completion:
requestDownloadWithMetadata:isRestore:completion:
requestDownloadsWithRestoreContentRequestItems:completion:
requestDownloadsWithManifestRequest:uiHostProxy:completion:
flushInProcessWithCompletion:
pauseDownloadWithID:withCompletion:
resumeDownloadWithID:withCompletion:
restartDownloadWithID:withCompletion:
reinitiateDownloadWithID:withCompletion:
cancelDownloadWithID:withCompletion:
_cancelAllActiveDownloads
buyParameters
purchaseWithRequest:uiHostProxy:completion:
downloadWithPermlink:title:completion:
setAutomaticDownloadEnabled:uiHostProxy:withCompletion:
reloadFromServerWithCompletion:
setBool:forKey:
removeObjectForKey:
cStringUsingEncoding:
initWithTransactionName:
state
purchaseManager:requestDownloadWithParameters:completion:
userAccount:didChangeWithReason:
fetchDownloadListWithReply:
fetchDownloadFromDownloadID:withReply:
pauseDownloadWithID:withReply:
resumeDownloadWithID:withReply:
cancelDownloadWithID:withReply:
cancelAllActiveDownloadsWithReply:
purchaseWithRequest:uiHostProxy:reply:
downloadWithPermlink:title:reply:
requestDownloadWithParameters:reply:
requestDownloadWithMetadata:isRestore:reply:
requestDownloadsWithMetadata:areRestore:reply:
requestDownloadsWithRestoreContentRequestItems:reply:
requestDownloadsWithManifestRequest:uiHostProxy:reply:
processAutomaticDownloadsWithReply:
setAutomaticDownloadEnabled:uiHostProxy:reply:
restartDownloadWithID:withReply:
reinitiateDownloadWithID:withReply:
reloadFromServerWithReply:
flushMetricsWithReply:
setValueSimulateCrashAtInstallStart:withReply:
setValueSimulateCrashAtInstallDuringDecrypt:withReply:
setValueSimulateCrashAtInstallDuringUnzip:withReply:
setValueSimulateCrashAtInstallDuringFinish:withReply:
getCrashSimulationOverrideValuesWithReply:
resetAllCrashSimulationOverridesWithReply:
setValueSimulateDeviceOutOfSpace:withReply:
getValueSimulateDeviceOutOfSpaceWithReply:
performPreListenerStartupWithCompletion:
startPendingOperations
setDownloadManager:
setInstallManager:
setDatabaseManager:
setPurchaseManager:
downloadPolicyManager
setDownloadPolicyManager:
transactionsMap
setTransactionsMap:
_transactionsUpdateLock
_downloadManager
_installManager
_databaseManager
_purchaseManager
_downloadPolicyManager
_transactionsMap
T@"BLDownloadManager",&,N,V_downloadManager
T@"BLBookInstallManager",&,N,V_installManager
T@"BLDatabaseManager",&,N,V_databaseManager
T@"BLPurchaseManager",&,N,V_purchaseManager
T@"BLDownloadPolicyManager",&,N,V_downloadPolicyManager
T@"NSMutableDictionary",&,N,V_transactionsMap
T@"<BLAutomaticDownloadProcessing>",R,N
initWithData:
parse
appendString:
initWithBase64EncodedString:options:
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithXMLData:
sinfData
buffer
setBuffer:
isSinfElement
setIsSinfElement:
_isSinfElement
_sinfData
_buffer
T@"NSMutableString",&,N,V_buffer
TB,N,V_isSinfElement
T@"NSData",R,N,V_sinfData
defaultBookLibrary
_isMultiUser
_initWithLibrary:multiUser:
library
purchasedPlist
sharedPlist
_orphanedPurchasedBookURLs
_orphanedSharedBookURLs
array
_duplicatedPurchasedBooks
_deleteBooks:fromPlist:
isMultiUser
_scoreBooksInVolume:
purgePriority
allBookItems
permlink
storeIdentifier
_bookItemsFromPlist:sharedPlist:
hasPrefix:
lastUserAccessDate
setPurgePriority:
compare:
addDeletedFiles:
contents
unfilteredContents
booksArrayFromPlistEntry:
storeIdFromPlistEntry:
permlinkFromPlistEntry:
directory
folderNameFromPlistEntry:
iTunesSyncLockFile
setBooksArray:toPlistEntry:
writeToFile:atomically:
lockWithBlock:error:
_orphanedBookURLs:
fileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
nextObject
pathExtension
_duplicateStoreBooksInPlist:
reverseObjectEnumerator
purgeVolume:urgency:requested:
periodicPurgeVolume:urgency:requested:
purgeableAmountForVolume:urgency:
cancelPurge
setLibrary:
setMultiUser:
_multiUser
_library
T@"BLLibrary",&,N,V_library
multiUser
TB,N,GisMultiUser,V_multiUser
initWithInfo:
mutableCopyWithZone:
podcastType
numberWithUnsignedInteger:
setDurationInMilliseconds:
initWithURL:options:
arrayWithObjects:
loadValuesAsynchronouslyForKeys:completionHandler:
tracksWithMediaType:
_copyChapterVideoTracksForAsset:
importChaptersByParsingAsset:
duration
setObject:forKey:
trackReferences
intValue
trackWithTrackID:
mediaType
additionalEntityProperties
assetType
chapters
downloadType
durationInSeconds
hasItemArtwork
loadPropertiesFromMediaPath:includeTracks:
setAdditionalEntityProperties:
setAssetType:
setChapters:
setDownloadType:
setDurationInSeconds:
setItemArtworkData:
setItemDownloadIdentifier:
setItemMediaPath:
setProtectionType:
setUpdateType:
_additionalEntityProperties
_assetType
_artworkData
_chapters
_downloadType
_durationInSeconds
_libraryPersistentIdentifier
_mediaPath
_metadata
_protectionType
_updateType
T@"NSArray",C
downloading
TB,R,GisDownloading
T@"NSString",C
TB,R
T@"NSData",C
T@"BLDownloadMetadata",C
T@"NSDictionary",C
sharedContainerURL
initWithDatabaseFolderBaseURL:
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
initWithManagedObjectModel:
initWithConcurrencyType:
setPersistentStoreCoordinator:
URLByAppendingPathComponent:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_setupPersistentStore:
_stateForLog
initWithTitle:block:
metadataForPersistentStoreOfType:URL:options:error:
isConfiguration:compatibleWithStoreMetadata:
dictionaryWithObjects:forKeys:count:
_modelChanged
addPersistentStoreWithType:configuration:URL:options:error:
removeItemAtURL:error:
persistentStores
removePersistentStore:error:
fetchRequestWithEntityName:
predicateWithFormat:
setPredicate:
executeFetchRequest:error:
mq_newInMemoryDownloadFromDownloadInfo:
bldm_bookLibraryDatabaseErrorInFunction:
performBlock:
sortDescriptorWithKey:ascending:
setSortDescriptors:
fetchDownloadListWithPredicate:completion:
date
lastStateChangeTime
timeIntervalSinceDate:
deleteObject:
save:
setState:
setLastStateChangeTime:
_fetchDownloadInfoEntityWithID:block:
saveDownloadStateWithId:state:completion:
_fetchDownloadInfoEntityWithID:sync:block:
setSize:
numberWithBool:
originalURL
setUrl:
setAssetPath:
batchUpdateRequestWithEntityName:
setPropertiesToUpdate:
setResultType:
executeRequest:error:
result
_fetchDownloadsWithPredicate:sync:block:
fetchDownloadListWithPredicate:sync:completion:
hasChanges
_fetchDownloadsWithPredicate:block:
policyID
storePlaylistIdentifier
insertNewObjectForEntityForName:inManagedObjectContext:
setPolicyID:
setStorePlaylistIdentifier:
policyData
setPolicyData:
_fetchDownloadPolicyInfoEntityWithID:relatedPolicyWithStorePlaylistIdentifier:block:
_deleteDownloadPolicyWithID:save:completion:
mq_newDownloadPolicyFromDownloadPolicyInfo:
_fetchDownloadPoliciesWithPredicate:block:
storeIDFromBuyParameters:
setStartTime:
UUID
UUIDString
setDownloadID:
setBuyParameters:
setClientIdentifier:
setStoreIdentifier:
absoluteString
setPermlink:
firstObject
setMd5HashStrings:
setHashType:
setFileExtension:
mq_writeSinf:downloadID:
setEpubRightsPath:
setDpInfo:
mq_writeArtworkWithURL:downloadID:
setArtworkPath:
setPublicationVersion:
setIsAutomaticDownload:
setIsRestore:
setDownloadKey:
setIsZipStreamable:
setNumberOfBytesToHash:
setAccountIdentifier:
pauseDownloadsWithIDs:withCompletion:
forceNonDiscretionary
_fetchDownloadsWithIDs:block:
setCleanupPending:
setPropertiesToFetch:
performBlockAndWait:
cleanupPending
resumeDownloadsWithID:withCompletion:
canResumeDownloadWithState:
createDownload
indexOfObjectPassingTest:
initWithClientIdentifier:downloadMetadata:
writePlistWithDownloadID:error:
writeSinfForDownloadID:epubRightsData:error:
writeArtworkDownloadID:artworkURL:error:
fetchListOfAllDownloadCandidatesWithCompletion:
fetchListOfPendingDownloadsSortedByStartTime:
fetchListOfFailedDownloadsWithCompletion:
purgeAllStaleDownloadsWithCompletion:
syncSaveDownloadStateWithId:state:
syncTouchDownloadWithId:
saveDownloadSizeWithId:size:completion:
saveIsLocalCacheServerWithId:isLocal:completion:
saveDownloadPathWithId:path:completion:
updateDownloadWithID:updateBlock:completion:
updateAllInterruptedDownloadsToTheirProperStatesWithCompletion:
fetchModifiableDownloadsMatchingPredicate:results:completion:
deleteDownloadWithID:completion:
saveOrUpdateDownloadPolicy:completion:
deleteDownloadPolicyWithID:completion:
fetchDownloadPolicyWithID:withCompletion:
fetchListOfAllDownloadPoliciesWithCompletion:
addDownloadWithBuyParameters:storeID:clientIdentifier:completion:
addDownloadWithPermlink:clientIdentifier:completion:
finalizeOrCanceAndCleanupWithDownloadID:cleanupBlock:completion:
mq_writeMetadata:clientIdentifier:downloadID:
persistentStoreURL
setPsc:
setMoc:
setMom:
osStateHandler
setOsStateHandler:
_persistentStoreURL
_psc
_moc
_mom
_osStateHandler
T@"NSPersistentStoreCoordinator",&,N,V_psc
T@"NSManagedObjectContext",&,N,V_moc
T@"NSManagedObjectModel",&,N,V_mom
T@"BUOSStateHandler",&,N,V_osStateHandler
T@"NSURL",R,C,N,V_persistentStoreURL
timeIntervalSinceNow
fileType
attributesOfItemAtPath:error:
subpathsAtPath:
objectEnumerator
stringByResolvingSymlinksInPath
plistPath
itunesMetadata
assetPath
installInfo
artworkPath
destinationFilename
stringByDeletingPathExtension
bu_isFileExistsError
stringByAppendingPathExtension:
moveItemAtPath:toPath:error:
downloadedAssetPath
_moveFile:toPath:installBehavior:error:
installedAssetPath
setInstalledAssetPath:
setInstallInfo:
_installedAssetPath
_installInfo
TB,N,V_success
T@"NSError",&,N,V_error
T@"NSString",C,N,V_installedAssetPath
T@"BLBookInstallInfo",&,N,V_installInfo
T@"NSString",R,N
initWithDictionary:
dataForSinfDataKey:
firstDataForSinfDataKey:
_sinfsArrayWithDataKey:
identifier
initWithSINFs:
pinfsArray
sinfForIdentifier:
setSinfs:
_sinfs
T@"NSArray",&,N,V_sinfs
DRMFree
TB,R,GisDRMFree
T@"BLSinfsArray",R
info
setInfo:
_info
T@"NSDictionary",&,N,V_info
_bl_copySinfValueWithField:
valueForMetadataKey:
setValue:forMetadataKey:
valueForFirstAvailableKey:
bl_purchaserAccountIdentifier
bl_downloaderAccountIdentifier
bl_downloadPolicyCellularResult
bl_setDownloadPolicyCellularResult:
bl_assetFileSize
bl_isPurchaseRedownload
bl_setDownloadPolicyCellularResult:toDictionary:
T@"NSNumber",N,Sbl_setDownloadPolicyCellularResult:
defaultMonitor
copyCellularNetworkIdentityWithError:
logKey
evaluatorForIdentity:
evaluateForDownload:
isExpensive
setCellularDownload:
setCellularIdentity:
evaluatorResult
initWithDownload:
cellularResult
setCellularResult:
suppressDialogs
setSuppressDialogs:
download
setDownload:
cellularIdentity
cellularNetworkEvaluatorOperation
setCellularNetworkEvaluatorOperation:
_suppressDialogs
_cellularResult
_download
_cellularIdentity
_cellularNetworkEvaluatorOperation
T@"BLEvaluatorDownload",&,N,V_download
T@"BUCellularIdentity",&,N,V_cellularIdentity
T@"BLCellularNetworkEvaluatorOperation",&,N,V_cellularNetworkEvaluatorOperation
Tq,N,V_cellularResult
TB,N,V_suppressDialogs
initWithDPInfo:
_decryptWithSession:error:
fileHandleForUpdatingAtPath:
_initializeProgressWithFileHandle:
readDataOfLength:
decryptBytes:error:
offsetInFile
seekToFileOffset:
writeData:
_updateProgressWithByteCount:
synchronizeFile
name
reason
closeFile
fileDescriptor
setUnits:
resetSnapshots
snapshot
progressDelegate
operation:updatedProgress:forInstall:
initWithPath:dpInfo:installInfo:
fairplayDecryptSession
setFairplayDecryptSession:
dpInfo
lastSnapshotTime
setLastSnapshotTime:
setPath:
setProgress:
_fairplayDecryptSession
_dpInfo
_lastSnapshotTime
T@"BLFairplayDecryptSession",&,N,V_fairplayDecryptSession
T@"NSData",&,N,V_dpInfo
Td,N,V_lastSnapshotTime
T@"NSString",&,N,V_path
T@"<BLOperationProgress>",&,N,V_progress
T@"BLBookInstallInfo",W,N,V_installInfo
TB,R,N,V_success
T@"NSError",R,N,V_error
_itunesMetadataDictionaryWithMetadata:clientIdentifier:
setPlist:
downloadDirectoryForDownloadID:
URLByAppendingPathExtension:
plist
writeBinaryPropertyList:toPath:error:
copyValueForProperty:error:
epubRightsData
epubRightsInfoWithEpubRightsData:
downloaderAccountIdentifierWithSinfsArray:epubRightsInfo:
familyAccountIdentifierWithSinfsArray:epubRightsInfo:
purchaserAccountIdentifierWithSinfsArray:epubRightsInfo:
dataWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
itunesMetadataPlistDictionaryFromPath:
_plist
T@"NSDictionary",&,N,V_plist
addOperation:
operationCount
maxConcurrentOperationCount
operations
setName:
setSuspended:
qualityOfService
setQualityOfService:
Tq,N
_stringValueForValue:
indexInCollection
initWithImageCollection:
bestImageForSize:
_urlValueForValue:
_assetDictionary
_dateValueForValue:
_releaseDateValue
collectionName
keyStyle
_setValueCopy:forMetadataKey:
contentRatingDictionary
_newImageCollectionWithURLString:
_thumbnailArtworkImage
_valueForFirstAvailableTopLevelKey:
_newDateFormatter
stringFromDate:
initWithCapacity:
_setValue:forTopLevelKey:
setValue:forKey:
classForCoder
indexOfObject:
dateFromString:
initWithString:
setURL:
setImageKind:
initWithItemImages:
setDateFormat:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
stringValue
thumbnailImageCollection
imagesForKind:
lastObject
artistIdentifier
betaExternalVersionIdentifier
cloudIdentifier
collectionIdentifier
collectionIndexInCollectionGroup
composerIdentifier
composerName
contentRating
downloadPermalink
durationInMilliseconds
episodeIdentifier
episodeSortIdentifier
fullSizeImageURL
genreIdentifier
hlsPlaylistURL
isCompilation
isDeviceBasedVPP
isExplicitContent
hasHDR
isHighDefinition
isRental
isSharedResource
launchExtrasUrl
longDescription
networkName
numberOfCollectionsInCollectionGroup
numberOfItemsInCollection
podcastEpisodeGUID
podcastFeedURL
primaryAssetDictionary
releaseDate
releaseYear
rentalID
seasonNumber
seriesName
longSeasonDescription
setArtistIdentifier:
setBetaExternalVersionIdentifier:
setCloudIdentifier:
setCollectionIdentifier:
setCollectionIndexInCollectionGroup:
setCollectionName:
setCompilation:
setDeviceBasedVPP:
setComposerIdentifier:
setComposerName:
setContentRating:
setEpisodeIdentifier:
setEpisodeSortIdentifier:
setExplicitContent:
setFullSizeImageURL:
setGenreIdentifier:
setHighDefinition:
setHlsPlaylistURL:
setIndexInCollection:
setItemIdentifier:
setLaunchExtrasUrl:
setLongDescription:
setNetworkName:
setNumberOfCollectionsInCollectionGroup:
setNumberOfItemsInCollection:
setPodcastEpisodeGUID:
setPodcastFeedURL:
setPodcastType:
setPurchaseDate:
setReleaseDate:
setReleaseYear:
setRental:
setRentalID:
setSample:
setMusicShow:
setSeasonNumber:
setSharedResource:
setSeriesName:
setLongSeasonDescription:
setShortDescription:
setSortArtistName:
setSortCollectionName:
setSortTitle:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
setVariantIdentifier:
setVideoDetailsDictionary:
setViewStoreItemURL:
shortDescription
sortArtistName
sortCollectionName
sortTitle
variantIdentifier
videoDetailsDictionary
viewStoreItemURL
showComposer
isMusicShow
workName
movementName
movementNumber
movementCount
copyright
downloaderAccountIdentifier
downloadKey
fileExtension
isAutomaticDownload
isRedownloadDownload
MD5HashStrings
numberOfBytesToHash
pageProgressionDirection
preferredAssetFlavor
publicationVersion
preOrderIdentifier
primaryAssetURL
redownloadActionParameters
releaseDateString
requestPersistentID
requiredDeviceCapabilities
appleID
setAutomaticDownload:
setCopyright:
setDictionary:
setDownloadPermalink:
setEpubRightsData:
setKeyStyle:
setMD5HashStrings:numberOfBytesToHash:
setPageProgressionDirection:
setPreferredAssetFlavor:
setPreOrderIdentifier:
setPrimaryAssetURL:
setRedownloadActionParameters:
setRedownloadDownload:
setReleaseDateString:
setRequestPersistentID:
setRequiredDeviceCapabilities:
setShouldDownloadAutomatically:
setAppleID:
shouldDownloadAutomatically
_dictionary
_keyStyle
T@"NSDictionary",R
automaticDownload
TB,GisAutomaticDownload
T@"NSURL",&
T@"NSString",&
deviceBasedVPP
TB,GisDeviceBasedVPP
T@"NSDictionary",&
T@"NSData",&
T@"NSURL",C
TB,R,GhasHDR
T@"NSArray",R
redownloadDownload
TB,GisRedownloadDownload
T@"NSNumber",C
T@,C
T@"NSArray",&
T@"NSDate",&
T@"NSNumber",&
_urlRequestWithURL:
data
writeToURL:options:error:
setUrlKnownToBeTrusted:
bl_statusCode
bl_allHeaderFields
T@"NSDictionary",R,C
statusCode
allHeaderFields
lowercaseString
initWithObjectsAndKeys:
requestFreeSpace:atPath:withOptions:completionBlock:
_lastFreeSpaceRequest
initWithDouble:
_updateStatisticsFromSnapshots
doubleValue
currentValue
estimatedTimeRemaining
units
normalizedCurrentValue
normalizedMaxValue
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_snapshotTimes
_snapshotValues
_units
setIdentifier:
_decryptSession
_identifier
T@"NSString",&,N,V_identifier
cacheLoaded
setCachedInfo:
initForReadingFromData:error:
setWithObjects:
decodeObjectOfClasses:forKey:
setCacheLoaded:
_loadCachedPropertiesIfNeeded
cachedInfo
policyInfoWithCellularResult:
hasCellularResult
_cacheLoaded
_policyID
_storePlaylistIdentifier
_policyData
_cachedInfo
TB,N,V_cacheLoaded
T@"NSDictionary",&,N,V_cachedInfo
T@"NSString",C,N,V_policyID
T@"NSNumber",&,N,V_storePlaylistIdentifier
T@"NSData",C,N,V_policyData
T@"NSDictionary",R,N
TB,R,N
queueCountURLBagKey
_newURLRequestWithError:
accountIdentifier
initWithDownloadQueueRequest:
downloadQueueRequest
numberOfAvailableDownloads
_numberOfAvailableDownloads
_request
T@"BLStoreDownloadQueueRequest",R
bytes
isRemaining
_dialogForDownloadWithKind:andSize:forRoaming:remaining:
localizedStringForKey:value:table:
_bodyStringWithKind:andSize:remaining:
setMessage:
_buttonActions
setButtonActions:
buttonActions
setDefaultAction:
_hasWAPICapability
setStyle:
formatSize:
dialogForDownload:roaming:
dq_initializePolicy
dq_addOrUpdateDownloadPolicyWithInfo:withPolicyID:storePlaylistIdentifier:updateAssociated:
initRequiringSecureCoding:
encodeObject:forKey:
finishEncoding
encodedData
dq_addOrUpdateInMemoryPolicy:updateAssociated:
policies
dq_policiesWithStorePlaylistIdentifier:
dq_trackByStorePlaylistIdentifierPolicy:
policiesByStorePlaylistIdentifier
addOrUpdateDownloadPolicyWithInfo:withPolicyID:storePlaylistIdentifier:
downloadPolicyForID:
overrideDownloadSizeLimitForDownloadIdentifier:
removeOverrideDownloadSizeLimitForDownloadIdentifier:
setOverrideDownloadSizeLimit:forDownloadIdentifier:
dq_untrackByStorePlaylistIdentifierPolicy:
setPolicies:
setPoliciesByStorePlaylistIdentifier:
sizeLimitOverrides
setSizeLimitOverrides:
_policies
_policiesByStorePlaylistIdentifier
_sizeLimitOverrides
T@"NSMutableDictionary",&,N,V_policies
T@"NSMutableDictionary",&,N,V_policiesByStorePlaylistIdentifier
T@"NSMutableDictionary",&,N,V_sizeLimitOverrides
T@"BLDatabaseManager",R,W,N,V_databaseManager
_initStoreDownloadQueueResponse
initWithDictionary:userIdentifier:preferredAssetFlavor:
_errorWithFailureType:customerMessage:responseDictionary:
_accountUniqueIdentifierFromValue:
initWithItemID:bundleID:clusterVersionID:dictionary:
_responseDictionary:valueForProtocolKey:
numberWithLongLong:
initWithError:userIdentifier:
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
shouldCancelPurchaseBatch
triggeredQueueCheck
userIdentifier
clusterMappings
storeCorrelationID
setStoreCorrelationID:
diversitybag
clientIdentifier
_clusterMappings
_itemErrors
_keybag
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_userIdentifier
_storeCorrelationID
_diversitybag
_clientIdentifier
T@"NSOrderedSet",R,V_clusterMappings
T@"NSOrderedSet",R
T@"NSString",V_storeCorrelationID
T@"NSError",&
T@"NSData",R
T@"NSData",R,V_diversitybag
T@"NSString",V_clientIdentifier
daemon
mainRunLoop
newOperationQueue
initWithQueue:
initWithKeyOptions:valueOptions:capacity:
dq_pumpDownloadsWithCompletion:
reconnectTimer
setReconnectTimer:
dq_prepareDownloadsForDownloads:filtersExistingTasks:completion:
dq_setSessionTaskPriorityToHighForDownloadID:
downloadPipelineQueue
markDownloadAsHighPriorityWithDownloadID:
transactionCoordinator
notifyServerForFailedDownloadsWithCompletion:
pumpDownloadsWithCompletion:
taskStates
taskIdentifier
bl_cancelWithReason:error:
removeDownloadWithDownloadID:
dq_setDownloadState:forDownloadIdentifier:completion:
preparationOperationQueue
preparationDownloadIDs
minusOrderedSet:
cancelInstallWithDownloadID:
activeTaskStates
dq_getTaskStateFromDownloadID:
initWithInstallInfo:
dirtyTaskStates
dq_startProgressTimer
bl_dataConsumer
countOfBytesReceived
overrideProgress
countOfBytesExpectedToReceive
errorWithDomain:code:userInfo:
bl_setTaskMetrics:
bl_cancelReason
dq_processDownloadFailureWithTaskState:task:cancelReason:
retryDownloadWithIdentifier:completion:
dq_processCompletedDownloadWithTaskState:postProgress:
dq_clearIsLocalServerCacheForDownloadID:completion:
bl_cancelError
dq_scheduleReconnect
HARLoggingEnabled
logHARData
bl_taskMetrics
originalRequest
HTTPBody
initWithMetrics:requestData:responseData:
addHTTPArchive:
dq_logDownloadEvent:forTaskWithState:
bl_setDataConsumer:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
setValue:forHTTPHeaderField:
valueForHTTPHeaderField:
allValues
progressTimer
setProgressTimer:
dq_commitProgress
numberWithDouble:
postNotificationName:object:userInfo:deliverImmediately:
inFlightDiscretionaryDownloadIDs
inFlightNondiscretionaryDownloadIDs
dq_cancelProgressTimer
setPriority:
availableSampleDownloads
availableDiscretionaryDownloads
availableNondiscretionaryDownloads
inFlightSampleDownloadIDs
downloadIsHighPriorityWithDownloadID:
minusSet:
alreadyHaveSampleDownloadWithDownloadID:
addDownloadWithDownloadID:discretionary:sample:
shouldBeDiscretionary:
alreadyHaveDiscretionaryDownloadWithDownloadID:
alreadyHaveNondiscretionaryDownloadWithDownloadID:
markDownloadAsStandardPriorityWithDownloadID:
_addDownloads:completion:
URLSessionIdentifier
urlSessions
sessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
sessionTaskWithSession:
isPerDeviceVPP
downloadRestoreState
backgroundOperations
backgroundOperationQueue
resume
initWithBLDownloadPipeline:response:completion:
sampleDownloadOperationQueue
isDiscretionary
discretionaryDownloadOperationQueue
nonDiscretionaryDownloadOperationQueue
setOutputBlock:
enumerateOperationsWithDownloads:downloadPolicyManager:usingBlock:
dq_notifyServerOfDownloadCancelledWithTaskState:
dq_notifyServerOfDownloadCancelledWithAccountID:downloadID:storeID:transactionID:cancelDownloadURL:completion:
notifyDownloadCancelledWithAccountID:downloadID:storeID:transactionID:cancelDownloadURL:completion:
reconnectWithURLSessionTasks
dq_saveState:forDownloadID:completion:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
installManager:willRestartInstallForDownload:
installManager:didStartInstallWithOperation:forDownloadID:
installManager:updatedProgress:forInstallOperation:
installManager:didFinishInstallForOperation:
prioritizeDownloadWithIdentifier:completion:
startupDownloadsWithCompletion:
restartDownloadsWithIdentifiers:completion:
stopDownloadsWithIdentifiers:reason:completion:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
doq_performDownloadOperation:completion:
setTransactionCoordinator:
setBackgroundOperationQueue:
setDirtyTaskStates:
setPreparationDownloadIDs:
setPreparationOperationQueue:
processingOperationQueue
setProcessingOperationQueue:
setTaskStates:
setActiveTaskStates:
setUrlSessions:
setSampleDownloadOperationQueue:
setDiscretionaryDownloadOperationQueue:
setNonDiscretionaryDownloadOperationQueue:
_transactionCoordinator
_backgroundOperationQueue
_dirtyTaskStates
_preparationDownloadIDs
_preparationOperationQueue
_processingOperationQueue
_reconnectTimer
_progressTimer
_taskStates
_activeTaskStates
_urlSessions
_sampleDownloadOperationQueue
_discretionaryDownloadOperationQueue
_nonDiscretionaryDownloadOperationQueue
_downloadPipelineQueue
T@"BLDatabaseManager",W,N,V_databaseManager
T@"BLBookInstallManager",W,N,V_installManager
T@"BLDownloadPolicyManager",W,N,V_downloadPolicyManager
T@"<BLOSTransactionCoordinating>",W,N,V_transactionCoordinator
T@"<BLOperationQueueProtocol>",&,N,V_backgroundOperationQueue
T@"NSMutableSet",&,N,V_dirtyTaskStates
T@"NSMutableOrderedSet",&,N,V_preparationDownloadIDs
T@"<BLOperationQueueProtocol>",&,N,V_preparationOperationQueue
T@"<BLOperationQueueProtocol>",&,N,V_processingOperationQueue
T@"NSObject<OS_dispatch_source>",&,N,V_reconnectTimer
T@"NSObject<OS_dispatch_source>",&,N,V_progressTimer
T@"NSMapTable",&,N,V_taskStates
T@"NSMutableSet",&,N,V_activeTaskStates
T@"NSMutableDictionary",&,N,V_urlSessions
T@"<BLOperationQueueProtocol>",&,N,V_sampleDownloadOperationQueue
T@"<BLOperationQueueProtocol>",&,N,V_discretionaryDownloadOperationQueue
T@"<BLOperationQueueProtocol>",&,N,V_nonDiscretionaryDownloadOperationQueue
T@"BLDownloadPipelineQueue",R,N,V_downloadPipelineQueue
response
setResponse:
pipeline
setPipeline:
downloadStartCompletionBlock
setDownloadStartCompletionBlock:
_response
_pipeline
_downloadStartCompletionBlock
T@"BLPrepareDownloadResponse",&,N,V_response
T@"BLDownloadPipeline",W,N,V_pipeline
T@?,C,N,V_downloadStartCompletionBlock
operation
setOperation:
_operation
T@"_BLPerformDownloadOperation",&,N,V_operation
sharedDefaultEvaluator
initWithPathEvalulator:
addObserver:forKeyPath:options:context:
bu_booksGroupContainerURL
_initWithSuiteName:container:
removeObserver:forKeyPath:
_emulateCellularNetwork
_emulateRoamingNetwork
activeSubscriptionsDidChange
identityForSubscription:usingClient:error:
isRoaming
setRoaming:
inHomeCountry
_updateRoamingStatusForContext:
getCurrentDataSubscriptionContextSync:
copySIMIdentity:error:
dataUsingEncoding:
_forcePropertyRefresh
_setPropertiesUsingPath:
status
isConstrained
usesInterfaceType:
interface
type
postNotificationName:object:
getDataStatus:completion:
subscriptionInfoDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
regDataModeChanged:dataMode:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatus:
internetConnectionAvailability:
tetheringStatus:
tetheringStatus:connectionType:
serviceDisconnection:status:
dataRoamingSettingsChanged:status:
isConnected
observeValueForKeyPath:ofObject:change:context:
interfaceType
_defaultsToken
_pathEvaluator
_subscriptionContext
_telephonyClient
_sharedDefaults
_connected
_constrained
_expensive
_roaming
_interfaceType
connected
TB,R,GisConnected,V_connected
constrained
TB,R,GisConstrained,V_constrained
expensive
TB,R,GisExpensive,V_expensive
Tq,R,V_interfaceType
roaming
TB,R,GisRoaming,V_roaming
initWithPurgeableProvider:
_purgeable:urgency:
_purge:urgency:
_cancelPurge
purgeableProvider
purgeableForVolume:urgency:
cacheDelete
numberWithInt:
postNotificationName:object:userInfo:
registerCacheDeleteInfoCallbacks:
_periodic:urgency:
setCacheDelete:
setPurgeableProvider:
_cacheDelete
_purgeableProvider
T@"BLCacheDelete",&,N,V_cacheDelete
T@"<BLCacheDeletePurgeableProvider>",W,N,V_purgeableProvider
sharedPurchasedBookManifest
purchasedBookManifest
_bookManifest
bookPathForAdamID:withPublicationVersion:
pathOfAudiobookTrackWithStoreIdentifier:
bookPathPermalink:
setResult:
dq_action_requestCachedURL
_bookPathForBookWithKind:adamID:publicationVersion:
_bookPathWithKind:permaLink:
_shouldCancelDownload
isFileURL
_loadSizeIfNecessaryForAsset:
setMediaAssetSize:
setDestinationPath:
_newURLRequestWithAsset:
_newDataConsumerWithAsset:destinationPath:
_isDTServiceHubIssuedRequest:
setOverrideProgress:
setDataConsumer:
setURLRequest:
dataConsumer
_shouldFailForDiskSpaceWithAsset:dataConsumer:
_requiresPoweredPluggedIn
setRequiresPowerPluggedIn:
_transferProgressFractionWithAsset:
setDiscretionary:
_URLSessionTaskPriorityForDownload:
setTaskPriority:
outputBlock
host
settingsForIdentity:
allowAutomaticDownloads
isCellularAllowedForRestores
policy
fileSize
networkConstraintsForMediaType:withBag:
sizeLimitForNetworkType:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
substringFromIndex:
expectedContentLength
setOriginalURL:
initWithProperties:
_newDownloadKeyCookieWithValue:URL:
setHTTPMethod:
setTimeoutInterval:
_downloadKeyCookieWithAsset:
value
_assetSizeFromURLResponse:
setFileSize:
md5HashStrings
componentsSeparatedByString:
_usesStreamingZipDataConsumerForAsset:
initWithPath:MD5Hashes:numberOfBytesToHash:
hashType
optionsWithHashes:type:size:
_allowsCellularAccessForAsset:
setAllowsCellularAccess:
currentProcess
userAgentForProcessInfo:
isBookStoreAllowed
_URLSessionTaskPriorityForDownloadPriority:
isZipStreamable
_assetNeedsDecryption:
T@?,C
_initWithOperation:download:policy:
_sendsStoreHeadersForAsset
setPolicy:
setIsCellularAllowedForRestores:
_isCellularAllowedForRestores
_outputBlock
_policy
T@"NSOperation<BLPrepareDownloadOperation><BLOperation>",W,N,V_operation
T@"BLDownloadPolicy",&,N,V_policy
T@"BLDownload",&,N,V_download
TB,N,V_isCellularAllowedForRestores
T@?,C,V_outputBlock
backgroundSessionConfigurationWithIdentifier:
allowsCellularAccess
allowsExpensiveNetworkAccess
setAllowsExpensiveNetworkAccess:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
setSessionSendsLaunchEvents:
set_allowsRetryForBackgroundDataTasks:
set_requiresPowerPluggedIn:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
dataTaskWithRequest:
set_priority:
stringWithString:
setBackgroundOperations:
mediaAssetSize
setDownloadRestoreState:
setIsPerDeviceVPP:
setCanPause:
setIsSample:
setIsPurchase:
setPersistentIdentifier:
setStoreAccountIdentifier:
clientSecondaryIdentifier
setClientSecondaryIdentifier:
destinationPath
requiresPowerPluggedIn
taskPriority
URLRequest
_isPerDeviceVPP
_discretionary
_requiresPowerPluggedIn
_result
_backgroundOperations
_mediaAssetSize
_downloadRestoreState
_clientSecondaryIdentifier
_dataConsumer
_destinationPath
_taskPriority
_URLRequest
T@"NSString",C,N,V_clientIdentifier
T@"NSString",C,N,V_clientSecondaryIdentifier
T@"BLDownloadDataConsumer",&,N,V_dataConsumer
discretionary
TB,N,GisDiscretionary,V_discretionary
T@"NSString",C,N,V_destinationPath
TB,N,V_requiresPowerPluggedIn
Tq,N,V_taskPriority
T@"NSURLRequest",C,N,V_URLRequest
Tq,N,V_result
T@"NSArray",C,N,V_backgroundOperations
Tq,N,V_mediaAssetSize
T@"NSNumber",&,N,V_downloadRestoreState
TB,N,V_isPerDeviceVPP
TB,N,V_isRestore
TB,N,V_canPause
TB,N,V_isSample
TB,N,V_isPurchase
T@"NSDate",&,N,V_purchaseDate
Tq,N,V_persistentIdentifier
T@"NSNumber",&,N,V_storeAccountIdentifier
_initWithDownload:policy:
T@"_BLPrepareDownloadOperation",&,N,V_operation
stringFromByteCount:countStyle:
purchaseResponseItems
item
logUUID
copyEvaluatorDownloadForDownloadMetadataArray:logKey:
unsignedLongValue
setAutomatic:
setBytes:
setLogKey:
setRemaining:
copyEvaluatorDownloadForPurchaseResponse:
copyEvaluatorDownloadForDownload:
isAutomatic
_automatic
_remaining
_bytes
_logKey
_name
automatic
TB,N,GisAutomatic,V_automatic
TQ,N,V_bytes
T@"NSString",&,N,V_kind
T@"NSString",&,N,V_logKey
T@"NSString",&,N,V_name
remaining
TB,N,GisRemaining,V_remaining
fileProcessor
processPurchasedItem:withAttributes:resultInfo:
bu_errorWithDomain:code:description:underlyingError:
synchronize
_unprotectedMediaAsset:
_destinationDirectoryPath
_installAssetFrom:to:error:
_installDaemonOwnedDownload:
removeMediaItemsForStoreID:
bu_isNoSuchFileError
bu_mediaURL
URLByAppendingPathComponent:isDirectory:
_newMediaLibraryItem
familyAccountIdentifier
libraryItemIdentifier
initWithContentsOfFile:
initWithIdentity:
cellularDataPrompt
_constraints
_identity
_settings
remoteObjectProxyWithErrorHandler:
handleAuthenticateRequest:withReply:
handleDialogRequest:withReply:
handleEngagementRequest:withReply:
handleAuthenticateRequest:purchase:purchaseQueue:completion:
handleDialogRequest:purchase:purchaseQueue:completion:
handleEngagementRequest:purchase:purchaseQueue:completion:
T@"<BLUIHostServiceProtocol>",W,V_uiHostProxy
managedObjectContext
unsignedIntegerValue
startTime
size
serverNumberOfBytesToHash
setServerNumberOfBytesToHash:
setAccountID:
setFamilyAccountID:
setSinfData:
encryptionKey
setEncryptionKey:
salt
setSalt:
setTargetDownloadDirectory:
_shouldBeDiscretionary:
forcedNonDiscretionaryAssetIDs
T@"NSNumber",&,N
T@"NSMutableSet",R,N
shouldBeDiscretionary
T@"NSString",&,D,N
T@"NSNumber",&,D,N
T@"NSDate",&,D,N
epubRightsPath
T@"NSData",&,D,N
TB,R,N,VshouldBeDiscretionary
storeIDsToRemove
predicateWithProperty:values:
predicateMatchingPredicates:
enumeratePersistentIDsUsingBlock:
removeTracksWithPersistentIDs:fromSource:withCompletionHandler:
initWithStoreIDsToRemove:
_storeIDsToRemove
T@"NSArray",R,N,V_storeIDsToRemove
initWithMachServiceName:options:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
T@"NSXPCConnection",R,N,V_connection
_updateWithDictionary:
itemID
clusterID
clusterVersionID
foregroundUsageWeight
launchWeight
bundleID
_bundleID
_clusterID
_clusterVersionID
_foregroundUsageWeight
_itemID
_launchWeight
T@"NSString",R,V_bundleID
T@"NSNumber",R,V_clusterID
T@"NSNumber",R,V_clusterVersionID
T@"NSNumber",R,V_foregroundUsageWeight
T@"NSNumber",R,V_itemID
T@"NSNumber",R,V_launchWeight
setServerResponse:
deviceName
serialNumber
copyRestoreDictionary
bu_storefront
_newResponseWithItems:error:
_addResponse:
bu_contentRestoreMaxItemCount
valueWithError:
_runWithOptions:error:
bu_contentRestoreURL
ephemeralSessionConfiguration
ams_configureWithProcessInfo:bag:
initWithConfiguration:
bl_isUserCancelError
_bodyDictionaryWithItems:options:
_runWithBodyDictionary:options:error:
_supportedDownloadKindsSorted
initWithArray:
downloadKind
_runWithItems:options:
isErrorBadTokenError:
preflightAccount:error:
subarrayWithRange:
responses
_run
_accountsHelper
_responses
T@"NSArray",R,N
T@"<BLRestoreDownloadItemsOperationDelegate>",W,D
setHTTPContentType:
operationQueue
T@"BLOperationQueue",R,N,V_operationQueue
absoluteFilePath
_enumerateTracksMatchingPredicate:usingBlock:
ratingSystemFromString:
_setValue:forProperty:
_setValueCopy:forProperty:
stringForRatingSystem:
caseInsensitiveCompare:
rank
ratingDescription
ratingLabel
ratingSystem
setRank:
setRatingDescription:
setRatingLabel:
setRatingSystem:
T@"NSString",C,N
entityForName:inManagedObjectContext:
setEntity:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
performFetch:
fetchedObjects
dq_dequeueOperationForDownloadID:downloadState:
pendingInterruptedInstalls
mq_installDownloadInfo:
setPendingInterruptedInstalls:
operationsByDownloadID
setFamilyAccountIdentifier:
setAssetFileSize:
setPlistPath:
setArtworkFileSize:
setDestinationFilename:
setIsAudiobook:
dq_enqueueInstall:
dq_completeOperationForDownloadID:
setCompletionBlock:
dq_failOperationForDownloadID:
_assetAlreadyStartedTheInstallationStage:
dq_notifyServerOfDownloadCancelledForInstallOperation:completion:
dq_notifyServerOfDownloadCompleteForInstallOperation:completion:
notifyDownloadDoneWithAccountID:downloadID:storeID:transactionID:completion:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
setFrc:
setOperationsByDownloadID:
_progressDelegate
_frc
_operationsByDownloadID
_pendingInterruptedInstalls
T@"NSFetchedResultsController",&,N,V_frc
T@"NSOperationQueue",&,N,V_queue
T@"NSMutableDictionary",&,N,V_operationsByDownloadID
T@"NSArray",&,N,V_pendingInterruptedInstalls
T@"<BLBookInstallManagerProgressDelegate>",W,N,V_progressDelegate
initWithSize:pageSize:key:options:
_writeCurrentCacheBlock
options
_decryptRange:
_cachePage:
initWithFileAtURL:pageSize:key:options:
setIVProc:withContext:
decrypt
setOptions:
_magic
_key
_size
_pageSize
_pageCount
_firstPageInBuffer
_pageEncryptBits
_pageTempBuffer
_logicalSize
_baseAddress
_ivProc
_ivProcRefcon
_file
_fileSize
_cacheDirty
_cachedPageCount
TS,V_options
syncedBookManifest
manifestEntriesWithProperty:equalToNumber:limitCount:
manifestEntriesWithProperty:equalToValue:limitCount:
_manifestEntriesForInstallInfo:inManifest:
purchaseManifest
_manifestEntryForInstallInfo:inManifest:
syncManifest
setFullRestoreFilePath:
fullRestoreFilePath
_prepareOperation:
sharedManifest
isStoreDownload
storePublicationVersion
setBookPath:
sharedDownload
bookPath
manifestPath
setDrmPath:
setShouldSkipAssetInstallation:
drmPath
sharedRepositoryPath
shouldSkipAssetInstallation
_installMediaAsset:assetInstalledPath:fileName:drmPath:error:
fileExistsAtPath:isDirectory:
_installITunesArtwork:isDirectory:
_installITunesMetadataPlist:isDirectory:
_installEpubRights:
_addPurchaseManifestItem:
fileAttributes
setAttributes:ofItemAtPath:error:
_newManifestEntry:withFileName:
manifestEntry:withFileName:
removeManifestEntryWithStoreItemID:
removeManifestEntryWithDownloadPermalink:
_removeDuplicateEntry:
_newManifestEntry:
addManifestEntry:
synchronizeData
_existingManifestEntry
purchasesRepositoryPath
bu_booksRepositoryURL
initWithSoucePath:destinationPath:fileAttributes:installInfo:
_unzipAsset:unzippedPath:error:
_initWithInfo:syncManifest:purchaseManifest:sharedManifest:
setPurchaseManifest:
setSyncManifest:
setSharedManifest:
_shouldSkipAssetInstallation
_bookPath
_drmPath
_purchaseManifest
_syncManifest
_sharedManifest
T@"NSString",C,N,V_bookPath
TB,N,V_shouldSkipAssetInstallation
T@"NSString",C,N,V_drmPath
T@"BLBookManifest",&,N,V_purchaseManifest
T@"BLBookManifest",&,N,V_syncManifest
T@"BLBookManifest",&,N,V_sharedManifest
dictionaryWithObjectsAndKeys:
addEntriesFromDictionary:
setDownloadingPersistentIdentifiers:
setBlDownloadQueue:
blDownloadQueue
addObserver:
_storageUseChangedNotification:
removeObserver:
dq_updateAvailableStorage
isAudiobook
downloadingPersistentIdentifiers
purgeableLowPriority
purgeableMediumPriority
purgeableHighPriority
purgeableSpecialCasePriority
setPurgeableValueChanged:
setPurgeableLowPriority:
setPurgeableMediumPriority:
setPurgeableHighPriority:
setPurgeableSpecialCasePriority:
purgeableValueChanged
downloadQueueDownloadsDidChange:
downloadQueue:downloadStatesDidChange:
downloadQueue:downloadStates:didCompleteWithError:
downloadQueue:purchaseAttemptForID:buyParams:isAudioBook:
downloadQueue:purchaseAttemptForRequest:
downloadQueue:purchasedDidCompleteWithResponse:
downloadQueue:purchasedDidFailWithResponse:
updateAvailableStorage
_purgeableValueChanged
_blDownloadQueue
_downloadingPersistentIdentifiers
_purgeableLowPriority
_purgeableMediumPriority
_purgeableHighPriority
_purgeableSpecialCasePriority
T@"BLDownloadQueueNonUI",&,N,V_blDownloadQueue
T@"NSMutableSet",&,N,V_downloadingPersistentIdentifiers
TB,N,V_purgeableValueChanged
Tq,N,V_purgeableLowPriority
Tq,N,V_purgeableMediumPriority
Tq,N,V_purgeableHighPriority
Tq,N,V_purgeableSpecialCasePriority
initWithUnsignedLongLong:
_isRecognizedProperty:
_copyValueForSINF:property:error:
scannerWithString:
scanHexLongLong:
setNumberStyle:
numberFromString:
numberFromHexDigits
numberFromDecimalDigits
libraryPlistWithKind:
initWithManifestPath:
valueForKey:
addManifestEntries:
_manifest
_stringFromObject:
manifestEntryForAdamID:withPublicationVersion:
_entries
keyNameForUniqueId
initWithContentsOfFile:options:error:
unloadPurchaseManifest
removeManifestEntryWithPackageHash:
_invalidateAfterExternalChange
manifest
setManifest:
setManifestPath:
_manifestPath
T@"NSMutableDictionary",&,N,V_manifest
T@"NSString",&,N,V_manifestPath
_decryptAsset:
endTransaction
osTransaction
setOsTransaction:
_osTransaction
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
downloadPipeline
dq_purgeStaleDownloadsWithCompletion:
dq_startNextDownloadsFromList:
_pauseDownloadsWithIDs:withCompletion:
orderedSetWithObjects:
_resumeDownloadsWithIDs:prioritizeDownloadID:withCompletion:
_resumeDownloadWithID:withCompletion:
_reinitiateDownloadsWithIDs:withCompletion:
unionSet:
initWithEnabledMediaKinds:account:
resultingEnabledMediaKinds
updatePoliciesForRestoreDownloadsWithCompletion:
downloadCompletedWithDownloadID:
setDownloadPipeline:
_downloadPipeline
T@"BLDownloadPipeline",&,N,V_downloadPipeline
T@"<BLBookInstallManagerProgressDelegate>",R,N
imageScale
floatValue
imageKind
width
height
hasSuffix:
numberWithFloat:
_setValue:forKey:
substringToIndex:
stringByAppendingFormat:
initWithArtworkDictionary:
imageSize
setImageKindWithTypeName:variantName:
URLString
_imageKind
T{CGSize=dd},R,N
T@"NSString",C,N,V_imageKind
T@"NSURL",&,N
Td,R,N
decryptFileAtURL:encryptionKey:salt:error:
generateFileUniqueIdFromPath:
setUniqueID:
_installMediaAsset:assetInstalledPath:error:
_addPurchaseManifestItem
uniqueID
assetFlavor
manifestEntryWithStoreInfo:withFileName:
initWithRequest:
present
_presentDialogRequest:outError:
selectedActionIdentifier
cellularDownload
_cellularDownload
_evaluatorResult
T@"BLEvaluatorDownload",&,N,V_cellularDownload
Tq,R,N,V_evaluatorResult
queueIdentifier
initialize
_downloadKindQueueIdentifierMapping
queueContentsURLBagKey
setQueueIdentifier:
purchaseStoreIdentifier
setPurchaseStoreIdentifier:
purchaseSuppressNetworkEvaluatorDialogs
setPurchaseSuppressNetworkEvaluatorDialogs:
_accountIdentifier
_queueIdentifier
_purchaseStoreIdentifier
_purchaseSuppressNetworkEvaluatorDialogs
T@"NSNumber",&,N,V_accountIdentifier
T@"NSString",C,N,V_queueIdentifier
T@"NSNumber",&,N,V_purchaseStoreIdentifier
TB,N,V_purchaseSuppressNetworkEvaluatorDialogs
enumerateKeysAndObjectsUsingBlock:
stringByAppendingString:
bu_dataFromHexString:
_purchaseRequestStoreID:
accessQueue
ongoingPurchaseRequestsByStoreID
checkAndAddStoreIDForRequest:
removeStoreIDForRequest:
_accessQueue
_ongoingPurchaseRequestsByStoreID
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
T@"NSMutableSet",R,N,V_ongoingPurchaseRequestsByStoreID
ongoingPurchaseRequests
_purchaseWithRequest:uiHostProxy:completion:
currentConnection
valueForEntitlement:
dq_performPurchaseWithRequest:downloadID:uiHostProxy:completion:
p_downloadIDForRequest:completion:
dq_performDownloadWithPermlink:title:clientIdentifier:downloadID:completion:
p_downloadIDForPermlink:completion:
requestWithBuyParameters:storeIdentifier:
setRestore:
dq_performDownloadDownloadMetadata:downloadID:clientIdentifier:isRestoreItem:
_requestDownloadWithDownloadMetadata:isRestore:completion:
initWithRestoreRequestItem:
_requestDownloadsWithRestoreDownloadItems:completion:
initWithStoreItemID:downloadID:error:
restoreAuthenticationQueue
setValidDownloadIDs:
_requestDownloadsWithStoreDownloadItems:isRestore:completion:
initWithRequest:uiHostProxy:downloadBlock:
storeRequestOperationQueue
_distinctDownloadsArrayForDownloads:
_updateNetworkPolicyForQueueDownloads:suppressDialogs:
_newQueueRequests
_addQueueOperationsForRequests:reason:
_newQueueRequestsForPurchaseStoreIdentifier:suppressNetworkEvaluatorDialogs:
_newLoadQueueOperationForQueueRequest:
_newCheckQueueOperationForQueueRequest:
dq_writeMetadata:clientIdentifier:downloadID:
dq_triggerDownloadForDownloadID:urlToAsset:
bu_dictionaryForQueryString:unescapedValues:
bu_queryStringForDictionary:escapedValues:
setParameter:forKey:
initWithPurchaseType:buyParams:
setUserInitiated:
setCallerBundleId:
setClientId:
setOwnerAccountId:
setLogUUID:
setRequiresAccount:
purchaseUIHelper
purchaseQueue
enquePurchases:
initWithAMSPurchaseResult:
initWithPurchase:error:
storeID
purchaseParameters
currency
price
localizedDescription
responseDictionary
_handleTriggerDownloadforRequest:withDownloadID:
shouldSuppressNetworkEvaluatorDialogs
waitUntilFinished
metadata
_checkStoreDownloadQueuesForPurchaseWithStoreIdentifier:suppressNetworkEvaluatorDialogs:
dataWithPropertyList:format:options:error:
resultWithTimeout:error:
iTunesUsername
dq_writeSinf:downloadID:downloadKind:
dq_writeArtworkWithURL:downloadID:
setRestoreAuthenticationQueue:
setOngoingPurchaseRequests:
setPurchaseQueue:
purchaseQueueConfiguration
setPurchaseQueueConfiguration:
setPurchaseUIHelper:
setStoreRequestOperationQueue:
_restoreAuthenticationQueue
_ongoingPurchaseRequests
_purchaseQueue
_purchaseQueueConfiguration
_purchaseUIHelper
_storeRequestOperationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_restoreAuthenticationQueue
T@"_BLOngoingPurchaseRequests",&,N,V_ongoingPurchaseRequests
T@"AMSPurchaseQueue",&,N,V_purchaseQueue
T@"AMSPurchaseQueueConfiguration",&,N,V_purchaseQueueConfiguration
T@"BLPurchaseUIHelper",&,N,V_purchaseUIHelper
T@"BLOperationQueue",&,N,V_storeRequestOperationQueue
T@"<BLPurchaseManagerDelegate>",W,N,V_delegate
_newImagesForDictionary:
imagesForSize:
_imagesForSize:scale:
allObjects
sortedArrayUsingFunction:context:
itemImages
_itemImages
T@"NSArray",R,N,V_itemImages
accounts
_newDefaultAuthenticateOptions
initWithAccount:options:
_enqueueAuthenticateTask:error:
_dq_establishPrimaryAccount
setCanMakeAccountActive:
performAuthentication
isActive
isAuthenticated
setAuthenticationType:
setReason:
setPromptTitle:
setCancelButtonString:
setDebugReason:
accountIDsByAppleID
setAccountIDsByAppleID:
_accountIDsByAppleID
T@"NSMutableDictionary",&,N,V_accountIDsByAppleID
_stateForLogWithTimeout:
bu_arrayByInvokingBlock:
_itunesMetadataPlistDictionaryFromPath:
setItunesMetadata:
_manifestEntryWithStoreInfo:withStoreAccountInfo:withFileName:
_estimatedDownloadSize
assetFileSize
artworkFileSize
setLibraryItemIdentifier:
setFileAttributes:
_isAudiobook
_assetPath
_assetFileSize
_plistPath
_epubRightsPath
_artworkPath
_artworkFileSize
_downloadID
_destinationFilename
_fullRestoreFilePath
_familyAccountIdentifier
_encryptionKey
_salt
_uniqueID
_itunesMetadata
_libraryItemIdentifier
_fileAttributes
T@"NSDictionary",&,N,V_itunesMetadata
T@"NSString",C,N,V_assetPath
T@"NSNumber",C,N,V_assetFileSize
T@"NSString",C,N,V_plistPath
T@"NSString",C,N,V_epubRightsPath
T@"NSString",C,N,V_artworkPath
T@"NSNumber",C,N,V_artworkFileSize
T@"NSString",C,N,V_downloadID
T@"NSString",C,N,V_destinationFilename
T@"NSNumber",&,N,V_persistentIdentifier
T@"NSNumber",&,N,V_isRestore
T@"NSNumber",&,N,V_isSample
T@"NSNumber",&,N,V_isPurchase
T@"NSString",C,N,V_fullRestoreFilePath
T@"NSNumber",&,N,V_familyAccountIdentifier
TB,N,V_isAudiobook
T@"NSArray",C,N,V_sinfs
T@"NSString",C,N,V_encryptionKey
T@"NSString",C,N,V_salt
T@"NSString",C,N,V_uniqueID
storeDownload
TB,R,N,GisStoreDownload
T@,R,N
T@"NSString",C,N,V_libraryItemIdentifier
T@"NSDictionary",&,N,V_fileAttributes
T@"<BLBookInstallOperationProgressDelegate>",W,N,V_progressDelegate
_requestItems
_serverResponse
T@"NSArray",C,N,V_requestItems
T@"BLStoreDownloadQueueResponse",&,N,V_serverResponse
_runForPurchaseFormatWithURLRequest:error:
downloadBlock
setDownloadBlock:
_urlRequest
_downloadBlock
T@?,C,N,V_downloadBlock
writeToURL:atomically:
_setupForNotifications
listenersReadyQueue
lrq_setupCacheDelete
lrq_setupListeners
startupQueue
sq_finishedStartingUp
lrq_setupBeforeListenersWithCompletion:
processIdentifier
libraryService
setLibraryService:
libraryServiceListener
mainInterface
setExportedInterface:
setExportedObject:
initWithMachServiceName:
setLibraryServiceListener:
cacheDeleteManager
setCacheDeleteManager:
mainQueue
addObserverForName:object:queue:usingBlock:
setNotificationService:
listener:shouldAcceptNewConnection:
setListenersReadyQueue:
setStartupQueue:
notificationService
_libraryService
_listenersReadyQueue
_startupQueue
_libraryServiceListener
_notificationService
_cacheDeleteManager
T@"BLService",&,N,V_libraryService
T@"NSObject<OS_dispatch_queue>",&,N,V_listenersReadyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_startupQueue
T@"NSXPCListener",&,N,V_libraryServiceListener
T@"BLNotificationService",&,N,V_notificationService
T@"BLCacheDeleteStorageManager",&,N,V_cacheDeleteManager
_openFile
_hashAndWriteData:error:
_checkHashForByteCount:
_truncateToSize:
string
appendFormat:
_bytesWritten
_hashes
_md5Context
_numberOfBytesToHash
_verifiedBytes
enabledMediaKinds
initWithEnabledMediaKinds:account:bag:presentationDelegate:
perform
setResultingEnabledMediaKinds:
setEnabledMediaKinds:
_resultingEnabledMediaKinds
_enabledMediaKinds
T@"ACAccount",&,N,V_account
T@"NSMutableSet",&,N,V_enabledMediaKinds
T@"NSSet",&,N,V_resultingEnabledMediaKinds
_importPropertiesFromLibraryItem:fromAccount:usingLibrary:
archivedDataWithRootObject:requiringSecureCoding:error:
autoupdatingSharedLibraryPath
initWithLibraryPath:trackData:playlistData:
sharedMediaLibraryService
unarchivedObjectOfClasses:fromData:error:
performImport:fromSource:withProgressBlock:completionHandler:
dictionaryWithCapacity:
numberWithUnsignedInt:
_absoluteTimeValueForDateValue:
numberWithLong:
timeIntervalSinceReferenceDate
_stringValueForURLValue:
_currentTrackMovieInfoFromMetadata:
_extendedContentRatingStringForLibraryItem:
_storeArtworkTokenFromLibraryItem:metadata:
_currentTrackChapterDataForTrackPid:libraryItem:usingLibrary:
flattenedChapterDataWithImportChapters:library:trackPersistentID:
mutableInFlightDiscretionaryDownloadIDs
mutableInFlightNondiscretionaryDownloadIDs
mutableInFlightSampleDownloadIDs
highPriorityDownloadIds
inFlightDiscretionaryDownloadsCount
inFlightNondiscretionaryDownloadsCount
inFlightSampleDownloadsCount
inFlightDiscretionaryDownloadsDescription
inFlightNondiscretionaryDownloadsDescription
inFlightSampleDownloadsDescription
setMutableInFlightNondiscretionaryDownloadIDs:
setMutableInFlightDiscretionaryDownloadIDs:
setMutableInFlightSampleDownloadIDs:
setHighPriorityDownloadIds:
_mutableInFlightNondiscretionaryDownloadIDs
_mutableInFlightDiscretionaryDownloadIDs
_mutableInFlightSampleDownloadIDs
_highPriorityDownloadIds
T@"NSMutableSet",&,N,V_mutableInFlightNondiscretionaryDownloadIDs
T@"NSMutableSet",&,N,V_mutableInFlightDiscretionaryDownloadIDs
T@"NSMutableSet",&,N,V_mutableInFlightSampleDownloadIDs
T@"NSMutableSet",&,N,V_highPriorityDownloadIds
TQ,R,N
T@"NSSet",R,N
initWithAccountID:downloadID:storeID:transactionID:finishURL:isCancel:
transactionID
finishURL
_requestPromiseForDownloadDoneForAccountIdentifier:storeID:transactionID:downloadID:finishURL:
isCancel
completion
ams_iTunesAccountWithDSID:
setDialogOptions:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
setQueryItems:
bu_songDownloadDone
initWithAccountID:downloadID:storeID:transactionID:cancelDownloadURL:
setCompletion:
initWithAccountID:downloadID:storeID:transactionID:
setFinishURL:
setIsCancel:
setStoreID:
setTransactionID:
_isCancel
_completion
_accountID
_finishURL
_storeID
_transactionID
T@"NSNumber",&,N,V_accountID
T@"NSURL",&,N,V_finishURL
TB,N,V_isCancel
T@"NSNumber",&,N,V_storeID
T@"NSString",C,N,V_transactionID
T@?,C,N,V_completion
downloadDictionary
setValue:forDownloadProperty:
assetDictionary
setValue:forAssetProperty:
_restoreKeyForAssetProperty:
_restoreKeyForDownloadProperty:
cloudItemID
setCloudItemID:
setDownloadKind:
setDRMFree:
setStoreFlavor:
setStoreFrontID:
setStoreItemID:
storeFlavor
_originalPurchaserAccountID
_appleID
_properties
T@"NSString",C,N,V_appleID
T@"NSNumber",&,N,V_originalPurchaserAccountID
TB,N,GisDRMFree
_initializeProgress
sourceFilePath
destinationFilePath
_performExtraction:
_applyFileAttributesToDirectory:error:
subpathsOfDirectoryAtPath:error:
initWithDomain:code:userInfo:
initWithShort:
initWithURL:options:error:
setCopier:
copier
countTotalFileSize:totalFileCount:
copyToURL:error:
shouldCopyItemToURL:
didCopyItemToURL:fileSize:
setDestinationFilePath:
setSourceFilePath:
_destinationFilePath
_sourceFilePath
_copier
T@"NSString",C,N,V_destinationFilePath
T@"NSDictionary",C,N,V_fileAttributes
T@"NSString",C,N,V_sourceFilePath
T@"<BUFileCopier>",&,N,V_copier
_overrideProgress
TB,N,V_overrideProgress
BLServiceBag
AMSBagProtocol
NSObject
BLStoreDownloadItem
BLNotificationService
BLNotificationConnectionDelegate
BLAddItemToMediaLibraryOperation
BLLoadStoreDownloadQueueOperation
AMSURLProtocolDelegate
NSURLSessionDelegate
_BLLoadStoreDownloadRequestEncoder
BLNotificationMessage
BLOperation
BLAdditions
BLNotificationManager
UNUserNotificationCenterDelegate
BLAssetContainerAudiobookiOS
BLAssetContainer
BLNotificationConnection
APSConnectionDelegate
BLAssetContainerFactory
BLStreamingZipDownloadDataConsumer
SZExtractorDelegate
BLMLImporter
BLPipelineDownloadTaskState
NSCopying
BLRestoreDownloadsOperation
BLRestoreDownloadItemsOperationDelegate
BLOperationDelegate
BLService
BLPurchaseManagerDelegate
BLOSTransactionCoordinating
BUUserAccountObserving
BLServiceProtocol
BLEpubRightsDataParser
NSXMLParserDelegate
BLCacheDelete
BLAssetContainerPDFiOS
BLMLImporterItem
BLDatabaseManager
BLDatabaseManager_Extras
BLBaseBookInstallOperation
BLDownloadDRM
BLDownloadSinf
BLReviewNetworkPolicyOperation
BLFairPlayDecryptFileOperation
BLITunesMetadataHelper
BLOperationQueue
BLOperationQueueProtocol
BLDownloadMetadata
BLArtworkHelper
BLStorage
BLAssetContainerEbookiOS
BLOperationProgress
BLNetworkEvaluator
BLFairplayDecryptSession
BLDownloadPolicy
BLCheckDownloadQueueOperation
_BLCheckDownloadQueueRequestEncoder
BLCellularDataPromptDialogRequest
BLDownloadPolicyManager
BLStoreDownloadQueueResponse
BLDownloadPipeline
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
BLBookInstallManagerProgressDelegate
_BLPerformDownloadOperation
BLPerformDownloadOperation
BLNetworkMonitor
CoreTelephonyClientDelegate
CoreTelephonyClientDataDelegate
BLCacheDeleteService
_BLPrepareDownloadOperation
BLPrepareDownloadOperation
BLPrepareDownloadResponse
BLEvaluatorDownload
BLStreamingZipHandler
BLAudiobookInstallOperation
BLCellularNetworkEvaluator
BLPurchaseUIHelper
AMSPurchaseResponseProtocol
BLDownloadInfo
BLDownloadInfoShared
BLRemoveItemsFromMediaLibraryOperation
BLNotificationServiceProtocol
BLNotificationServiceProxy
BLAppClusterMapping
BLRestoreDownloadItemsOperation
_BLContentRestoreURLRequestEncoder
BLMediaLibraryManager
BLMediaLibraryUtilities
BLItemContentRating
BLBookInstallManager
NSFetchedResultsControllerDelegate
BLBookInstallOperationProgressDelegate
BLEncryptedBuffer
BLEBookInstallOperation
BLCacheDeleteStorageManager
BLDownloadQueueNonUIObserving
BLCacheDeletePurgeableProvider
BLSinfsArray
HexUtil
BLBookManifest
BLDownloadDRMOperation
BLOSTransaction
BLDownloadManager
BLItemArtworkImage
BLPDFInstallOperation
BLCellularNetworkEvaluatorOperation
BLStoreDownloadQueueRequest
BLPDFInstallUtils
_BLOngoingPurchaseRequests
BLPurchaseManager
BLAutomaticDownloadProcessing
BLItemImageCollection
BLRestoreAccountsHelper
OSStateCapture
BLBookInstallInfo
BLRestoreDownloadItemsResponse
BLLoadExternalDownloadManifestOperation
BLSinfHelper
BLDaemon
NSXPCListenerDelegate
BLRestoreDownloadItem
BLDownloadPolicyInfo
BLFilesystemDownloadDataConsumer
BLSetAutomaticDownloadKindsOperation
AMSRequestPresentationDelegate
BLML3TrackImporter
BLDownloadPipelineQueue
BLServerDownloadDoneRequest
BLRestoreContentItem
BLExtractFileOperation
BUFileCopierDelegate
BLDownloadDataConsumer
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@?16
@32@0:8@16@24
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"NSDate"16@0:8
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
v16@0:8
@"AMSBag"
v32@0:8@16@24
v32@0:8@"BLNotificationConnection"16@"BLNotificationMessage"24
v24@0:8@16
@"<BLAutomaticDownloadProcessing>"
@"NSObject<OS_dispatch_queue>"
@"AMSPushHandler"
@"BLNotificationConnection"
@"NSString"
v24@0:8q16
@"NSNumber"
@"BLMLImporterItem"
v48@0:8@16@24@32@?40
B40@0:8@16@24@32
v40@0:8@16@24@?32
B32@0:8@16@24
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSAuthenticateRequest"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSDialogRequest"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSEngagementRequest"32@?<v@?@"AMSEngagementResult"@"NSError">40
B40@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"AMSURLSession"16@"AMSAuthenticateRequest"24@?<v@?@"AMSAuthenticateResult"@"NSError">32
v40@0:8@"AMSURLSession"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
B32@0:8@"AMSURLSession"16@"NSError"24
B40@0:8@"AMSURLSession"16@"ACAccount"24@"NSDictionary"32
B32@0:8@"AMSURLSession"16@"NSDictionary"24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@40@0:8@16@24^@32
@"ACAccount"
@"NSMutableOrderedSet"
@"NSMutableArray"
@"AMSURLRequestEncoder"
@"<BLUIHostServiceProtocol>"
@"AMSBagValue"
@"NSURL"
@"BLPurchaseUIHelper"
q16@0:8
q32@0:8@16q24
@"NSDictionary"
B32@0:8@16^@24
B40@0:8@16@24^@32
v20@0:8B16
B32@0:8@"NSOperation"16^@24
B40@0:8@"NSOperation"16@"<BLOperation>"24^@32
i16@0:8
@"<BLOperationDelegate>"
@"NSError"
@"NSLock"
@"NSRunLoop"
@"BLOperation"
@"<BLOperationProgress>"
@24@0:8Q16
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
v32@0:8@"BLDownloadMetadata"16@"NSNumber"24
v32@0:8@"NSNumber"16@"NSArray"24
@"BLBaseBookInstallOperation"24@0:8@"BLBookInstallInfo"16
@"BLMediaLibraryManager"
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<BLNotificationConnectionDelegate>"
@"APSConnection"
@28@0:8@16B24
v24@0:8d16
v24@0:8@"NSString"16
B24@0:8^@16
Q24@0:8@16
@24@0:8r*16
@32@0:8r*16Q24
d16@0:8
@"SZExtractor"
q32@0:8@16^@24
v28@0:8q16B24
v32@0:8@16Q24
B48@0:8@16@24^q32^@40
B36@0:8q16B24@28
@"BLOperationQueue"
@"NSObject<OS_dispatch_source>"
@24@0:8^{_NSZone=}16
v32@0:8q16q24
v24@0:8Q16
@"NSDate"
v32@0:8@"BLOperation"16@"NSError"24
v32@0:8@"BLOperation"16@"<BLOperationProgress>"24
v24@0:8@"BLOperation"16
v32@0:8@"BLRestoreDownloadItemsOperation"16@"BLRestoreDownloadItemsResponse"24
@40@0:8@16@24@?32
v40@0:8@16@24^@32
@?16@0:8
@"NSArray"
v40@0:8@"BLPurchaseManager"16@"NSDictionary"24@?<v@?@"NSString"@"NSError">32
v32@0:8Q16Q24
v32@0:8@16@?24
v36@0:8@16B24@?28
v36@0:8B16@20@?28
v28@0:8B16@?20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"BLDownload"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8@"BLPurchaseRequest"16@"<BLUIHostServiceProtocol>"24@?<v@?@"NSString"@"BLPurchaseResponse"@"NSError">32
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v36@0:8@"NSDictionary"16B24@?<v@?@"NSString"@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"BLDownloadManifestRequest"16@"<BLUIHostServiceProtocol>"24@?<v@?@"BLDownloadManifestResponse"@"NSError">32
v36@0:8B16@"<BLUIHostServiceProtocol>"20@?<v@?@"NSError">28
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?BBBB@"NSError">16
v24@0:8@?<v@?B@"NSError">16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BLDownloadManager"
@"BLBookInstallManager"
@"BLDatabaseManager"
@"BLPurchaseManager"
@"BLDownloadPolicyManager"
@"NSMutableDictionary"
v56@0:8@16@24@32@40@48
@40@0:8@16@24@32
v24@0:8@"NSXMLParser"16
v48@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
v40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v56@0:8@"NSXMLParser"16@"NSString"24@"NSString"32@"NSString"40@"NSDictionary"48
v32@0:8@"NSXMLParser"16@"NSString"24
v32@0:8@"NSXMLParser"16@"NSData"24
@"NSData"40@0:8@"NSXMLParser"16@"NSString"24@"NSString"32
v32@0:8@"NSXMLParser"16@"NSError"24
@"NSData"
@"NSMutableString"
q40@0:8@16q24@32
@"BLLibrary"
I24@0:8@16
@"BLDownloadMetadata"
@20@0:8B16
v40@0:8@16q24@?32
v32@0:8@16q24
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
B24@0:8q16
@"NSPersistentStoreCoordinator"
@"NSManagedObjectContext"
@"NSManagedObjectModel"
@"BUOSStateHandler"
B48@0:8@16N^@24q32^@40
@"BLBookInstallInfo"
@24@0:8q16
@"BLEvaluatorDownload"
@"BUCellularIdentity"
@"BLCellularNetworkEvaluatorOperation"
@"BLFairplayDecryptSession"
@32@0:8@16^@24
v24@0:8@"NSOperation"16
v28@0:8@"NSArray"16B24
@"NSArray"16@0:8
@"NSOperationQueue"
v48@0:8Q16@24@32@?40
@24@0:8^@16
@"BLStoreDownloadQueueRequest"
@40@0:8@16Q24B32B36
@36@0:8@16Q24B32
B44@0:8@16@24@32B40
v32@0:8q16@24
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@"BLBookInstallManager"16@"BLDownload"24
v40@0:8@"BLBookInstallManager"16@"BLBaseBookInstallOperation"24@"NSString"32
v40@0:8@"BLBookInstallManager"16@"<BLOperationProgress>"24@"BLBaseBookInstallOperation"32
v32@0:8@"BLBookInstallManager"16@"BLBaseBookInstallOperation"24
@48@0:8@16@24@32@40
v40@0:8q16@24@?32
v40@0:8@16@24q32
v64@0:8@16@24@32@40@48@?56
@"<BLOSTransactionCoordinating>"
@"<BLOperationQueueProtocol>"
@"NSMutableSet"
@"NSMapTable"
@"BLDownloadPipelineQueue"
@"BLPrepareDownloadResponse"
@"BLDownloadPipeline"
@"_BLPerformDownloadOperation"
v36@0:8@16i24@28
v32@0:8@16i24i28
v28@0:8@16i24
v20@0:8i16
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
v48@0:8@16@24@32^v40
@"NWPathEvaluator"
@"CTXPCServiceSubscriptionContext"
@"CoreTelephonyClient"
@"NSUserDefaults"
@28@0:8@16i24
@"BLCacheDelete"
@"<BLCacheDeletePurgeableProvider>"
q24@0:8@16
q24@0:8q16
@?<v@?@"NSOperation<BLPrepareDownloadOperation>"@"BLPrepareDownloadResponse">16@0:8
v24@0:8@?<v@?@"NSOperation<BLPrepareDownloadOperation>"@"BLPrepareDownloadResponse">16
d24@0:8@16
@"NSOperation<BLPrepareDownloadOperation><BLOperation>"
@"BLDownloadPolicy"
@"BLDownload"
@"BLDownloadDataConsumer"
@"NSURLRequest"
@"_BLPrepareDownloadOperation"
@40@0:8@16@24q32
@"AMSNetworkConstraints"
@"BUCellularSettings"
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSEngagementRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSEngagementResult"@"NSError">40
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
v32@0:8@"NSString"16@?<v@?B>24
@"NSXPCConnection"
@"<BLRestoreAccountsHelper>"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
v40@0:8@"NSOperation"16@"<BLOperationProgress>"24@"BLBookInstallInfo"32
@"<BLBookInstallManagerProgressDelegate>"
@"NSFetchedResultsController"
@44@0:8Q16Q24r*32S40
@44@0:8@16Q24r*32S40
v32@0:8^?16^v24
Q20@0:8I16
Q32@0:8{_NSRange=QQ}16
S16@0:8
v20@0:8S16
[16C]
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
@28@0:8B16@20
B40@0:8@16^@24^@32
B56@0:8@16^@24^@32^@40^@48
@"BLBookManifest"
v44@0:8@16@24@32B40
v24@0:8@"BLDownloadQueueNonUI"16
v32@0:8@"BLDownloadQueueNonUI"16@"NSArray"24
v40@0:8@"BLDownloadQueueNonUI"16@"NSArray"24@"NSError"32
v44@0:8@"BLDownloadQueueNonUI"16@"NSString"24@"NSString"32B40
v32@0:8@"BLDownloadQueueNonUI"16@"BLPurchaseRequest"24
v32@0:8@"BLDownloadQueueNonUI"16@"BLPurchaseResponse"24
q32@0:8@"NSString"16q24
@"BLDownloadQueueNonUI"
@32@0:8q16^@24
@28@0:8@16I24
@"NSObject<OS_os_transaction>"
{CGSize=dd}16@0:8
B48@0:8@16@24@32^@40
@"<BLPurchaseManagerDelegate>"
@"_BLOngoingPurchaseRequests"
@"AMSPurchaseQueue"
@"AMSPurchaseQueueConfiguration"
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@"ACAccount"32@0:8@"ACAccount"16^@24
@24@0:8d16
@32@0:8B16B20@24
@"<BLBookInstallOperationProgressDelegate>"
@"BLStoreDownloadQueueResponse"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BLService"
@"NSXPCListener"
@"BLNotificationService"
@"BLCacheDeleteStorageManager"
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
@"NSSet"
@40@0:8q16@24@32
v32@0:8@16B24B28
@56@0:8@16@24@32@40@48
@60@0:8@16@24@32@40@48B56
B24@0:8@"NSURL"16
v32@0:8@"NSURL"16Q24
@"<BUFileCopier>"
Encountered error while retrieving push notification environment from bag:  %@
Using default environment: %{public}@
Using environment provided by bag: %{public}@
Using hardcoded environment: %{public}@
Environment is invalid, %{public}@. Error:  %@
Connection: %{public}@ received incomming message: %{public}@
checkDownloadQueue notification
Processed checkDownloadNotification but received error:  %@
Processed checkDownloadNotification and received downloadIDs: %{public}@
Received checkDownloadQueue notification for account %@ but active account is %@, so ignoring it
Pre-order available notification
Successfully bump'd WTR position for %@
Failed to bump WTR position for %@
storeID is empty
%@: Adding media item to iPod library: %@
Item added. Persistent id %lld Item: %@
Adding failed for item %@. Error  %@
[DownloadQueueOperation] Running load download queue - URL: %@, account: %@
[DownloadQueueOperation] Running load download queue - account: %@
[DownloadQueueOperation] Received nil result from AMSURLRequest %p. Error:  %@
[DownloadQueueOperation] Received result from AMSURLRequest %p: %@
[DownloadQueueOperation] load downloads (request=%p, startID=%{public}@, endID=%{public}@), result.object = %@
%@: Running with background priority for thread: %p
%@ caught %@ exception with stack trace: %@
%@ caught unknown exception: %@
%@: Restoring normal priority for thread: %p
Connection: %{public}@ received incoming message %{public}@
Connection: %{public}@ received invalid message %{public}@
Connection: %{public}@ received public token %{public}@
[BLAssetContainerFactory] Permalink download, returning epub asset container.
[BLAssetContainerFactory] unexpected download kind "%@", returning nil asset container.
[Download-StreamingZip]: Failed to prepare for extraction %{public}@:  %@
[Download-StreamingZip]: extraction finished and file is at path: %{public}@
[Download-StreamingZip]: Can't calculate usage if no path given
[Download-StreamingZip]: Failed to open directory %{public}@: %{public}s
[Download-StreamingZip]: getattrlistbulk on entry %llu in %{public}@ returned error %{public}s
[Download-StreamingZip]: Got error %{public}s while processing entry %llu in %{public}@
[Download-StreamingZip]: Failed to get name for directory item %llu in %{public}@; not counting its children
[Download-StreamingZip]: Failed to create path to child directory by appending "%{public}s" to %{public}@
[Download-StreamingZip]: Skipping empty directory at %{public}@/%{public}s
[Download-StreamingZip]: Skipping hardlinked file at %{public}@/%{public}s
%@: Deleting all OTA tracks
%@: Scheduling %lu iPod library items
%@: importing item with existing library pid %lld
%@: skipping import of item with existing library pid %lld
%@: import %s
%@: post process item %d. pid=%lld
%@: existingPath=%@, existingFamilyAccoundID=%@
%@: Skipping existing track with location data: %lld: "%@"
%@: Skipping existing track, no location data: %lld
%@: Defering populating artwork for %lld
inserted track id %lld
%@: Setting location data for track: %lld
Error copying FamilyAccountID:  %@
%@: Adding %lu scheduled iPod library items
%@: Deleting download from iPod library: %lld
%@: Removing download properties from iPod library: %lld
ContentRestore: Error looking up family info:  %@
ContentRestore: item %@ is not elligable for restore
ContentRestore: Fail invalid restore items: [%@]
ContentRestore: accountID: %@, restoreItems: %@
ContentRestore: Missing account for accountID: %@, failing restore items: [%@]
ContentRestore: Attempting restore for %lu account(s)
ContentRestore: Server response: %@, error: %@. Got %ld download item(s)
ContentRestore: Falling back to primary account to restore item: %@
[Service]: FATAL ERROR: could not setup the database manager.
[Service]: FATAL ERROR: could not setup the install manager.
[Service]: FATAL ERROR: could not setup the download manager.
[Service]: FATAL ERROR: could not setup the purchase manager.
[Service]: Shutting down.
[Service]: Could not setup a download manager.
[Service]: Could not setup a install manager.
[Service]: Restarting interrupted installs.
[Service]: Cleaning up orphaned directories.
[Service]: fetchDownloadListWithReply
[Service]: fetchDownloadFromDownloadID
[Service]: requestDownloadWithParameters
[Service]: requestDownloadWithMetadata
[Service]: requestDownloadsWithRestoreContentRequestDictionary
[Service]: requestDownloadsWithManifestRequest
[Service]: Failed to flush events:  %@
[Service]: Successfully flushed %li events
[Service]: pauseDownloadWithID
[Service]: resumeDownloadWithID
[Service]: restartDownloadWithID
[Service]: reinitiateDownloadWithID
[Service]: cancelDownloadWithID
[Service]: cancelAllActiveDownloadsWithReply
[Service]: purchaseWithRequest:uiHostProxy:reply:
[Service]: downloadWithPermlink
[Service]: setAutomaticDownloadEnabled: %d
[Service]: reloadFromServerWithReply
(dID=%{public}@) [Service]: Received a transaction-start for identifier: %{public}@
(dID=%{public}@) [Service]: Received a transaction-end for identifier: %{public}@
[Service]: Account Changed.  Cancelling active downloads
[Service]: Error fetching the list of all downloads:  %@
Orphaned per-user book at %@ cache deleted. Recovered %{public}ld.
Failed to delete orphaned per-user book.
Orphaned shared book at %@ cache deleted. Recovered %{public}ld.
Failed to delete orphaned shared book.
Duplicated book from plist at %@ cache deleted. Recovered %{public}ld.
Failed to delete duplicated purchased book.
Cache deleted shared book %@.  Recovered %{public}ld.
purgeVolume:%@ urgency:%{public}ld requested:%{public}ld recovered:%{public}ld
Periodic purge is not supported.
Purgeable amount for volume:%@ urgency:%{public}ld = %{public}ld
Cancel purge is not supported.
Trimming the following paths from the shared list: %@
Removing assets with storeIDs: %@ and permlinks: %@
Removing entry from plist: %@
Rewriting the plist: %@ -- [%lu Remaining] [Removed: %lu] [Filtered: %lu]
No need to rewrite %@. {Nothing removed} %lu entries
Failed to update %{public}@
Failure while enumerating directory. At url %@. Error:  %@
Found duplicate book in plist with id %@ at %@
[Database]: System could not produce a shared container. Falling back to using: %@.  Please file a radar.
[Database]: Failed to create documents folder in shared container.
[Database]: Created documents folder in shared container.
[Database]: Documents folder in shared container already existed.
[Database]: Store is at %{public}@
[Database]: Failed to initialize database manager.
[Database]: Failed to initialize database manager.  No URL.
[Database]: Error removing the download scratch directory:  %@
[Database]: Error removing the old database persistent store:  %@
[Database]: Error initializing PSC:  %@
(dID=%{public}@) [Database]: Purging entry in state: [%{public}@] lastChanged:[%{public}@] from the database
[Database]: Error while trying to purge the database:  %@
(dID=%{public}@) [Database]: Saving state to %{public}@.
(dID=%{public}@) [Database]: Error saving the state for this download, error:  %@
[Database]: Error encountered getting download info. Error:  %@
(dID=%{public}@) [Database]: Touching download.
(dID=%{public}@) [Database]: Error touching this download, error:  %@
[Database]: Found %ld downloads being downloaded and set their state to Interrupted.
[Database]: Error while looking for downloads that were interrupted while downloading. %@
[Database]: Found %ld downloads being decrypted and moved them to failed.
[Database]: Error while looking for downloads that were interrupted while being decrypted. %@
[Database]: Found %ld interrupted installs and set their state back to Downloaded
[Database]: Error while looking for downloads that were interrupted while being installed. %@
[Database]: Error saving modified BLDownloadInfo objects:  %@
(dID=%{public}@) [Database]: Error deleting the download, error:  %@
(dID=%{public}@) [Database]: Error deleting the download, the object to delete was not found. Error:  %@
[Database]: Error encountered saving the download policy. Error:  %@
[Database]: Updated the download policy with id %{public}@.
[Database]: Error encountered starting download. Error:  %@
(dID=%{public}@) [Database]: Download added.
(dID=%{public}@) [Database]: Download added
(dID=%{public}@) [Database]: Failed to fetch existing download. Error:  %@
[Database]: expected to have a url to request a new download
[Database]: string expected for url
[Database]: We got chunkSize %@, do we want to do anything with this?
[Database]: Pausing downloads: %@
(dID=%{public}@) [Database]: Download paused.
(dID=%{public}@) [Database]: Error encountered trying to pause download. Error:  %@
[Database]: Error encountered trying to pause downloads: %@. Error:  %@
(dID=%{public}@) [Database]: Cancelling download
(dID=%{public}@) [Database]: Canceling download and doing cleanup because current state is %{pubilc}@
(dID=%{public}@) [Database]: Canceling download and doing cleanup because current state is %{public}@
(dID=%{public}@) [Database]: Setting cleanupPending for download because current state is %{public}@
(dID=%{public}@) [Database]: Setting error trying to cancel download because current state is %{public}@
(dID=%{public}@) [Database]: Error encountered canceling download. Error:  %@
(dID=%{public}@) [Database]: Download canceled.
(dID=%{public}@) [Database]: Finalizing or canceling download
(dID=%{public}@) [Database]: in finalizing or canceling, and there was a pending cleanup, so canceling
(dID=%{public}@) [Database]: in finalizing or canceling, and there was no pending cleanup, so finalizing
(dID=%{public}@) [Database]: Error encountered during finalize/cancel. %@
[Database]: Resuming downloads: %@
(dID=%{public}@) [Database]: Download resumed.
(dID=%{public}@) [Database]: Error encountered resuming download:  %@
[Database]: Error encountered resuming downloads: %@. Error:  %@
(dID=%{public}@) [Database]: Error encountered fetching download : %@
(dID=%{public}@) [Database]: Failed to write iTunesMetadata.plist:  %@
(dID=%{public}@) [Database]: Failed to write sinf.xml. Error:  %@
(dID=%{public}@) [Database]: Failed to write iTunesArtwork. Error:  %@
Calculated %ld for %@
Failed to purge book at %@. Error:  %@
(dID=%{public}@) [Install-Op]: Missing info needed for Install Operation: %@
(dID=%{public}@) [Install-Op]: Moving file %{public}@ to %{public}@.
(dID=%{public}@) [Install-Op]: DownloadInstaller: Error creating directory:  %@
(dID=%{public}@) [Install-Op]: DownloadInstaller: File delete failed: %@
(dID=%{public}@) [Install-Op]: DownloadInstaller: File rename failed after too many tries: %{public}@
(dID=%{public}@) [Install-Op]: DownloadInstaller: File move failed:  %@
[%{public}@]: Unable to evaluate cellular download:  %@
[Install-Decrypt-Op]: Could not begin decrypt
[Install-Decrypt-Op]: Running decrypt %@
[Install-Decrypt-Op]: Decrypt failed  %@
[Install-Decrypt-Op]: Failed with reason: %@
(dID=%{public}@) [iTunesMetadata-Helper]: Writing plist to %@
(dID=%{public}@) [iTunesMetadata-Helper]: Failed to write iTunesMetadata.plist:  %@
Failed to parse iTunesMetadata.plist from %{public}@.  %@
Failed to read iTunesMetadata.plist from %{public}@.  %@
(dID=%{public}@) [Artwork-Helper]: Downloading Artwork from URL %@ to %@
(dID=%{public}@) [Artwork-Helper]: Artwork downloaded to %{public}@
[Artwork-Helper]: Error encountered retrieving iTunesArtwork.  %@
[Artwork-Helper]: error ... could not get a localFileURL
[%@] No DPInfo provided
%@: Could not begin decrypt
%@: Decrypt failed
Error decoding policy: %{public}@
Exception decoding policy: %{public}@
Finished with decoding policy
Running check download queue - request: %@, bagKey: %{public}@
Check download queue: Create URL request failed - request %@, error:  %@
Check download queue: URL request failed - Request %@, error:  %@
Check download queue: Got response: %@
[Download-Policy]: failed to update the download policy for the policyID: %@.  Error:  %@
[Download-Policy]: Updating download policy %{public}@ with cellularResult %ld
[Download-Policy]: Adding download policy %{public}@ with cellularResult %ld
[Download-Policy]: Initialized with %lu download policies
Unsupported download kind: %{public}@
Daemon starting up.
Daemon exited.
(dID=%{public}@) [Download]: Reprioritized download
(dID=%{public}@) [Download]: Cancel task: %lu to restart download
(dID=%{public}@) [Download]: Stop preparation operation for download
(dID=%{public}@) [Download]: Stop task: %lu for download with reason [pause]
(dID=%{public}@) [Download]: Stop task: %lu for download with reason [cancel]
(dID=%{public}@) [Download]: Cancel operation: %@ for download
(dID=%{public}@) [Download] didStartInstallWithOperation: could not find taskState for installOperation: [%@], bookTitle: %@ so starting a new one.  This is likely EDU mode.
(dID=%{public}@) [Download] started install operation %@ for download
(dID=%{public}@) [Download] finished install operation %@ for download.
(dID=%{public}@) [Download] didFinishInstallForOperation: could not find taskState for installOperation: [%@], bookTitle: %@
(dID=%{public}@) [Download]: Consumer failed for task: %lu with error: %@
(dID=%{public}@) [Download]: Consumer with task: %lu is committing transfer progress: %.2f%%
[Download]: Did not receive partial content response for task: %lu
[Download]: Restart task: %lu after 408 response
[Download]: Truncate and restart task: %lu after 416 response
[Download]: Cancel download task: %lu for invalid HTTP status code: %ld
[Download] URLSession finish collecting metrics. task=%@, metrics=%@
[Download] URLSession task complete. task=%@
[Download] Received task did finish with no task state: %lu, error:  %@
(dID=%{public}@) [Download]: Restarting download after task cancel: %lu
(dID=%{public}@) [Download]: Download task did finish: %lu
(dID=%{public}@) [Download]: Download task was canceled due to local cache server being unreachable. Task: %lu
(dID=%{public}@) [Download]: Download task failed: %lu with error:  %@
[Download]: Task %lu saved to httparchive.
Basic authentication is not supported by bookassetd
This authentication method %{public}@ is not supported by bookassetd ... try the next protection space
(dID=%{public}@) [Download]: Cancel local-cache download for error:  %@
[Download]: Retry scheduled for task: %lu, error: %@
[Download]: Reset data consumer for task: %lu, with resumption offset: %llu
[Download]: Providing resumption offset: %llu for task: %lu
[Download]: Removed resumption offset for task: %lu
[Download]: Could not find state for task: %lu
[Download]: Adding downloadID(s): %{public}@
Posting DidFail Notification
(dID=%{public}@) [Download]: Posting the BLDownloadQueueDownloadFailedNotification
Posting DidComplete Notification
(dID=%{public}@) [Download]: Posting the DownloadCompleteNotification
Posting Progress Notification
(dID=%{public}@) [Download]: Posting download/install progress for download [%.2f%% complete]
(dID=%{public}@) [Download]: Sending the didFinishTransactionWithIdenfifier
(dID=%{public}@) Removing from inFlight lists. New discretionary count %lu, New nondiscretionary count %lu
In flight discretionary %{public}@
In flight nondiscrtionary %{public}@
(dID=%{public}@) [Download]: dq_commitProgress is going to call dq_pumpDownloadsWithCompletion
(dID=%{public}@) [Download]: Reprioritizing to high task: %lu
(dID=%{public}@) [Download]: Reprioritizing to default task: %lu to restart download
Pumping Downloads
Available discretionary %lu, nondiscretionary %lu, sample %lu
In flight discretionary %{public}@
In flight nondiscretionary %{public}@
In flight sample %{public}@
Considering downloads to schedule: %{public}@
New discretionary count %lu, New nondiscretionary count %lu, New sample count %lu. Number of high priority %lu
New discretionary %{public}@
New nondiscretionary %{public}@
New sample %{public}@
New high priority ids added: %{public}@
[Download]: Finishing prepare with 0 download ID
(dID=%{public}@) [Download]: Updated per device restore state to: %@
(dID=%{public}@) [Download]: Processing download after "finish only" response
(dID=%{public}@) [Download]: Cancel download after failed prepare.
(dID=%{public}@) [Download]: Queue download to discover assets later.
(dID=%{public}@) [Download]: Fail download after failed prepare.
Download identifier was nil.
(dID=%{public}@) [Download]: Resumed task:%@ in sessionID: %{public}@
There is no NSURLSessionTask to start for this download.
(dID=%{public}@) [Download]: logged event: %{public}@ for task
(dID=%{public}@) [Download]: Download Failed reason: %{public}@
(dID=%{public}@) [Download]: Failed to mark download as [cancelled] for server. Error:  %@
(dID=%{public}@) [Download]: Marking download as [cancelled] for server.
[Download]: Error fetching failed downloads. %@
[Download]: Reconnect with nsurlsessiond
(dID=%{public}@) [Download]: Setting phase to %{public}@
[BLNetworkMonitor] Emulate cellular network is %d
[BLNetworkMonitor] Emulate roaming network is %d
[Network] Unable to fetch current cellular data subscription:  %@
[Network] Cellular data subscription became: %{public}@
[Network] Unable to identify cellular data subscription:  %@
[Network] There is no cellular data subscription
[Network] Got user defaults change: %{public}@
[Network] Forcing expensive for cellular interface
[Network] Interface type: %ld
[Network] Network available (expensive = %d, constrained = %d)
[Network] Network unavailable
Requested purgeable amount.
Able to purge %ld.
Requested to purge %@ with urgency %ld.
Purged %ld.
Requested to periodic purge %@ with urgency %ld.
Unknown urgency value, defaulting to low urgency.
[Prepare]: Store book (%@ v%@) already exists on file system at %@. Skipping download and installation.
[Prepare]: iTunesU book (%@) already exists on file system at %@. Skipping download and installation.
(dID=%{public}@) [Prepare]: Preparing download
(dID=%{public}@) [Prepare]: Cancel invalid automatic download
(dID=%{public}@) [Prepare]: Skip prepare for download with no media asset
(dID=%{public}@) [Prepare]: Flagging download as "finish only", already have asset
(dID=%{public}@) [Prepare]: Asking data consumer to override progress value
(dID=%{public}@) [Prepare]: Fail download without enough disk space
(dID=%{public}@) [Prepare]: Error determining cellular identity, error: %@
(dID=%{public}@) [Prepare]: Cellular evaluation result is %ld, setting allowsCellularAccess to %d
(dID=%{public}@) [Prepare]: Cellular evaluation result not found, fallback to use hard download limit for cellular
(dID=%{public}@) [Prepare]: Constraints not found in bag, downloadKind: %{public}@, error:  %@
(dID=%{public}@) [Prepare]: No local cache URL for asset, error: %@
(dID=%{public}@) [Prepare]: Replacing URL for asset with local cache URL: %@
(dID=%{public}@) [Prepare]: Prepare request to load asset size
(dID=%{public}@) [Prepare]: Error sending HEAD request to %{public}@ for download. error:  %@
(dID=%{public}@) [Prepare]: Found size: %lld for download
(dID=%{public}@) [Prepare]: Failed to find size for download
(dID=%{public}@) [Prepare] allowsCellularAccess = %d
(dID=%{public}@) [Prepare]: Simulating a device out of space situation
(dID=%{public}@) [Prepare]: Determined asset size to be %llu bytes
(dID=%{public}@) [Prepare]: Discovered %llu bytes already transfered
(dID=%{public}@) [Prepare]: Not enough disk space for download, only %llu is available.  Error:  %@
[Prepare]: Created a background session
[Download-StreamingZip]: Invalid hash type: %{public}@
(dID=%{public}@) [Install-Op]: Required store identifier is missing.
(dID=%{public}@) [Install-Op-Audiobook] Unprotect failed with error:  %@
(dID=%{public}@) [Install-Op-Audiobook] Because unprotect failed, deleting file: %@
(dID=%{public}@) [Install-Op]: Simulating a crash during install start
(dID=%{public}@) [Install-Op-Audiobook] Skipping asset installation because audiobook already has a path in Media Library.
(dID=%{public}@) [Install-Op-Audiobook] Processing DRM for audiobook.
(dID=%{public}@) [Install-Op]: Simulating a crash during install finish
(dID=%{public}@) [Install-Op-Audiobook] moving audiobook asset into place (from %@ to %@)
(dID=%{public}@) [Install-Op-Audiobook] Unable to install asset:  %@
(dID=%{public}@) [Install-Op-Audiobook] Unable to update media library:  %@
(dID=%{public}@) [Install-Op-Audiobook] About to finalizing install.
(dID=%{public}@) [Install-Op-Audiobook] Pending cleanup for audiobook so removing media library entry.
(dID=%{public}@) [Install-Op-Audiobook] Completed finalizing install.
(dID=%{public}@) [Install-Op-Audiobook] Processing DRM failed for audiobook. Error:  %@
(dID=%{public}@) [Install-Op-Audiobook] Failed to delete existing file:  %@
(dID=%{public}@) [Install-Op-Audiobook] File move failed:  %@
(dID=%{public}@) [Install-Op-Audiobook] Adding mediaItem for audiobook %@
(dID=%{public}@) [Install-Op-Audiobook] Could not install audiobook download:  %@
[%{public}@]: Evaluating download, size = %llu automatic = %d
[%{public}@]: Implicitly denied - automatic downloads are disabled
[%{public}@]: Overriding cellular prompt - network is roaming
[%{public}@]: Implicitly allowed - cellular prompt disabled
[%{public}@]: Implicitly denied - cellular prompt required
[%{public}@]: Implicitly denied - download size is unavailable
[%{public}@]: Implicitly denied - failed to load constraints:  %@
[%{public}@]: Implicitly allowed - cellular limit (of %llu bytes) applies
[%{public}@]: Implicitly denied - exceeded cellular limit (of %llu bytes)
[Purchase-UI-Helper]: Forwarding auth request %{public}@ to UI host proxy
[Purchase-UI-Helper]: Received reply from UI host proxy for auth request %{public}@, error: %{public}@ %ld (%@)
[Purchase-UI-Helper]: Missing UI host proxy for authenticate request %{public}@
[Purchase-UI-Helper]: Forwarding dialog request %{public}@ to UI host proxy
[Purchase-UI-Helper]: Received reply from UI host proxy for dialog request %{public}@, error: %{public}@ %ld (%@)
[Purchase-UI-Helper]: Missing UI host proxy for dialog request %{public}@
[Purchase-UI-Helper]: Forwarding engagement request %{public}@ to UI host proxy
[Purchase-UI-Helper]: Received reply from UI host proxy for engagement request %{public}@, error: %{public}@ %ld (%@)
[Purchase-UI-Helper]: Missing UI host proxy for engagement request %{public}@
Error removing persisitend ids %{public}@:  %@
Removed from media library persistent ids %{public}@
Timed out while waiting for media library to remove entries with ids %{public}@
The connection to service was interrupted.
The connection to service was invalidated.
Remote proxy hit an error: %{public}@
ContentRestore: Restoring item(s): [%@] for account: (%@ / %@)
ContentRestore: Can't restore using account: %@ with no account name
ContentRestore: Error reading bag key '%{public}@', error:  %@
ContentRestore: Metadata lookup encountered error:  %@
ContentRestore: Fetch result from restoreContent: %@
ContentRestore: No body data for items: [%@] error:  %@
ContentRestore: Received failure for items: [%@] response error:  %@
ContentRestore: Received content restore metadata for %lu item(s) for restore items: [%@]
ContentRestore: Filtering disallowed kind: "%@" for item: %@
ContentRestore: Restoring %ld items with kind %@ with chunk size %ld
ContentRestore: Making chunk request for %lu item(s) with kind: %@
ContentRestore: Encountered bad token error. Attempt to authenticate, then retry items: [%@] error:  %@
ContentRestore: Authenticate successful. Retrying request for items: %@
ContentRestore: Cancel restore items: [%@] error:  %@
Adding (and waiting for finish) library item %@
Enqueueing operation to add library item %@
Enqueueing operation to remove meida library entires for storeIDs %@
[Install-Mgr]: Failed to initialize install manager FRC
[Install-Mgr]: starting the installManager.
[Install-Mgr]: Failed to perform initial fetch on the install manager FRC:  %@
[Install-Mgr]: restarting %lu interrupted installs.
[Install-Mgr]: controllerWillChangeContent.
[Install-Mgr]: controllerDidChangeContent.
[Install-Mgr]: FRC has been triggered.
[Install-Mgr]: FRC received insert.
[Install-Mgr]: FRC received delete.
[Install-Mgr]: FRC received move.
[Install-Mgr]: FRC received update.
(dID=%{public}@) [Install-Mgr]: Failed to obtain artwork file size. Error:  %@
(dID=%{public}@) [Install-Mgr]: Failed to deserialized sinf data for download Error:  %@
(dID=%{public}@) [Install-Mgr]: Enqueing install operation for download.
(dID=%{public}@) [Install-Mgr]: No assetContainer found for kind %@
(dID=%{public}@) [Install-Mgr]: Install operation already exists in queue for downloadID
(dID=%{public}@) [Install-Mgr]: Cancelling operation for download.
(dID=%{public}@) [Install-Mgr]: Can't dequeue non-existant download operation
(dID=%{public}@) [Install-Mgr]: Operation failed.
(dID=%{public}@) [Install-Mgr]: No operation found.
(dID=%{public}@) [Install-Mgr]: Operation completed.
(dID=%{public}@) [Install-Mgr]: Operation failed. Error:  %@
(dID=%{public}@) [Install-Mgr]: Successfully purged downloadInfo
(dID=%{public}@) [Install-Mgr]: Successfully purged downloadPolicyInfo
(dID=%{public}@) [Install-Mgr]: No operation found
(dID=%{public}@) [Install-Mgr]: Marking download as [finished] for server.
(dID=%{public}@) [Install-Mgr]: Failed to mark download as [finished] for server. Error:  %@
(dID=%{public}@) [Install-Mgr]: Marking download as [cancelled] for server.
(dID=%{public}@) [Install-Mgr]: Failed to mark download as [cancelled] for server. Error:  %@
[Install-Op-Buffer] open error: %s, url: %{mask.hash}@
[Install-Op-Buffer] fstat error: %s, url: %{mask.hash}@
[Install-Op-Buffer] fdopen error: %s, url: %{mask.hash}@
[Install-Op]: Could not find restore item with key: "%{public}@" ... now trying with key: "%{public}@"
[Install-Op]: Restore item found with key: %{public}@
[Install-Op]: Found multiple restore items with title: "%@".  De-duping by artistName
[Install-Op]: Found book with our artist name.
[Install-Op]: ArtistName was not recorded in installIInfo. Returning matching entries: %@
[Install-Op]: Entry not found title: "%@"
[Install-Op]: Prepare ... restore entry found.
[Install-Op]: Prepare ... File already restored for purchase manifest entry at path %@. Still looking...
[Install-Op]: Prepare ... persistentID == %{public}@, storeID == %@, isRestore == YES
[Install-Op]: Prepare ... Looking for restore entry in the purchase manifest.
[Install-Op]: Prepare ... restore item found in the purchase manifest.
[Install-Op]: Prepare ... Looking for restore entry in the sync manifest.
[Install-Op]: Prepare ... restore item found in the sync manifest.
[Install-Op]: Prepare ... overriding install path to: %{public}@
[Install-Op]: Prepare ... backup path not found on a restore.  This is fatal ... persitentID == %{public}@, title == %@
(dID=%{public}@) [Install-Op]: Error: could not find manifest entry for restore book: [persistentID:%{public}@, storeID: %@, title:%@, author:%@]
(dID=%{public}@) [Install-Op]: Operation began for download
(dID=%{public}@) [Install-Op]: Prepare failed. Bailing install. Error:  %@
(dID=%{public}@) [Install-Op]: We have an existing shared download. Book at %@, sinf at %@.
(dID=%{public}@) [Install-Op]: We have a new shared download.
[Install-Op]: Shared book container location is: %{public}@
(dID=%{public}@) [Install-Op]: We have an existing, non-shared download
(dID=%{public}@) [Install-Op]: We have a new, non-shared download
(dID=%{public}@) [Install-Op]: Operation %{public}@ for download, error:  %@
(dID=%{public}@) [Install-Op]: Operation %{public}@ for download
(dID=%{public}@) [Install-Op] Skipping installMediaAsset because shouldSkipAssetIntallation is true. drmPath is %@ (is %{public}@).
(dID=%{public}@) [Install-Op]: Failed to install iTunesMetadata.plist. Error:  %@
(dID=%{public}@) [Install-Op]: No iTunesMetadata.plist to install.
(dID=%{public}@) [Install-Op]: Moving asset %@ to %@.
(dID=%{public}@) [Install-Op]: No iTunesArtwork to install.
(dID=%{public}@) [Install-Op]: Writing EPR data for download to path: %@
(dID=%{public}@) [Install-Op]: Error EPR data for download to path: %{public}@. Error:  %@
(dID=%{public}@) [Install-Op]: Unable to create DRM directory at path: %{public}@. Error:  %@
(dID=%{public}@) [Install-Op]: Something exists at DRM Path %{public}@ and could not be removed. Error:  %@
[Install-Op]: Looking for duplicate from purchase manifest for store book
[Install-Op]: Removing for duplicate store book entry from purchase manifest: %@
[Install-Op]: Looking for duplicate entry from purchase manifest for edu mode book
[Install-Op]: Removing for duplicate store book entry from purchase manifest
[Install-Op]: Did not find a duplicate store book entry in purchase manifest
[Install-Op]: Adding purchase manifest
[Install-Op]: Updating purchase manifest for shared download at user path: %{public}@
[Install-Op]: Updating shared manifest at path: %{public}@
[Install-Op]: Skip insertion of manifest entry for existing asset.
[Install-Op]: Updating purchase single user manifest: %{public}@
[Install-Op]: Updating purchase manifest since isRestore == NO.
[Install-Op]: Not updating purchase manifest because this is a restore download.
[Install-Op]: Looking for book manifest for libraryItemIdentifier: %@ ...
[Install-Op]: Manifest not found by using the libraryItemIdentifier ... using downloadedAssetPath: %{public}@
[Install-Op]: Using purchase manifest.
[Install-Op]: Using sync manifest.
[Install-Op]: Defaulting to purchase manifest.
[Install-Op]: Could not install non-existant file: %@
[Install-Op]: Alert: just hit the unlikely code path: [original filename: %@ | new filename: %@ | book title: %@]
[Install-Op]: Saving Book to %@, DRM to %@
[Install-Op]: Saving Book to %@
(dID=%{public}@) [Install-Op]: Simulating a crash during unzip
[Install-Op]: Installed file: %@
[Install-Op]: Error trying to clean up unzippedPath after unzip failed:  %@
[Install-Op]: Failing install after unzip failure for file: %{public}@, error:  %@
[Install-Op]: Book already at destination: %@
[Install-Op]: Moving file: %@ to path: %@
(dID=%{public}@) No manifest entry found for book.
Adding store services download observer.
Removed %lld from download list as it was cancelled or failed.
Adding %lld to list of book downloads.
Removed %lld from download list
Received notification that shared storage usage has changed.
Notification info: %@
Checking purgeable amounts.
Pushed purgeable amount update.
No change in purgeable amounts.
[Install-Op]: entries are: %@
[BookManifest]: Removed manifest itemID entry at index: %ld
[BookManifest]: Removed manifest permalink entry at index: %ld
[BookManifest]: Removed manifest Package Hash entry at index: %ld
[BookManifest]: Invalidating after external change: %@
[BookManifest]: Could not read data: %{public}@
[BookManifest]: Could not unserialize data: %{public}@
The object [%@] of class: [%{public}@] could not be converted to neither an NSString nor an NSNumber
(dID=%{public}@) [Install-DRM-Op]:  Decrypting asset for download at path: %@
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
[Download-Mgr]: Initializing download manager.
[Download-Mgr]: Overriding the download path to be %{public}@
[Download-Mgr]: Failed to override the download path to %{public}@
[Download-Mgr]: Failed to created documents folder in shared container.
[Download-Mgr]: Created documents folder in shared container.
[Download-Mgr]: downloadDirectoryForDownloadID: received a nil downloadID.
[Download-Mgr]: Checking for downloads.
[Download-Mgr]: Purging stale downloads from the database.
[Download-Mgr]: Request to list downloads.
(dID=%{public}@) [Download-Mgr]: Info requested for download
[Download-Mgr]: New download requested
(dID=%{public}@) [Download-Mgr]: Error attempting to start the download
[Download-Mgr]: Pausing downloads: %@
(dID=%{public}@) [Download-Mgr]: Canceling download
[Download-Mgr]: Attempting to resume downloads: %@
[Download-Mgr]: Error attempting to resume downloads: %@
(dID=%{public}@) [Download-Mgr]: Determining cellularResult before resuming download
(dID=%{public}@) [Download-Mgr]: Last cellularResult for download is %ld
(dID=%{public}@) [Download-Mgr]: Cellular evaluation for download failed due to  %@
(dID=%{public}@) [Download-Mgr]: Set cellular evaluation result for download to %ld
[Download-Mgr]: Restarting download: %@
[Download-Mgr]: Reinitiating downloads: %@
[Download]: Error fetching downloads. %@
[Download-Mgr]: Attempting to set automatic download enabled to %d
local enabledMediaKinds before attempting to save: %@
Failed to save automatic download to %d to server, error:  %@
Successfully saved automatic download to server, enabledMediaKinds: %@
(dID=%{public}@) [Download-Mgr]: Download completed.
[Download-Mgr]: Purged leftover downloads
[Download-Mgr]: Encountered an error while purging the DownloadsDatabase:  %@
[Download]: dq_startNextDownloadsFromList is going to call pumpDownloadsWithCompletion - downloadList: %@
(dID=%{public}@) [PDFInstall-Op]: Simulating a crash during install start
(dID=%{public}@) [PDFInstall-Op]: Skipping asset installation because we have an existing download.
(dID=%{public}@) [PDFInstall-Op]: Added package hash: %@
(dID=%{public}@) [PDFInstall-Op]: Skipping asset installation because purchases manifest have an existing download.
(dID=%{public}@) [PDFInstall-Op]: Skipping asset installation because synced books manifest have an existing download.
(dID=%{public}@) [PDFInstall-Op] Failed processing %{mask.hash}@ due to error:  %@
(dID=%{public}@) [PDFInstall-Op]: Simulating a crash during install finish
(dID=%{public}@) [PDFInstall-Op]: Looking for duplicate from manifest with path %{public}@ for PDF book: 
(dID=%{public}@) [PDFInstall-Op]: Removing for duplicate PDF book entry from manifest: %@
(dID=%{public}@) [PDFInstall-Op]: Did not find a duplicate PDF book entry in manifest
(dID=%{public}@) [PDFInstall-Op]: Looking for duplicate from manifest with path %{public}@ for store book: 
(dID=%{public}@) [PDFInstall-Op]: Removing for duplicate store book entry from purchase manifest: %@
(dID=%{public}@) [PDFInstall-Op]: Did not find a duplicate store book entry in purchase manifest
(dID=%{public}@) [PDFInstall-Op]: Asset can be made ubiquitous. uniqueID=%{mask.hash}@, playlistIdentifier=%{mask.hash}@, flavor=%{public}@
(dID=%{public}@) [PDFInstall-Op]: Asset cannot be made ubiquitous. uniqueID=%{mask.hash}@, playlistIdentifier=%{mask.hash}@, flavor=%{public}@
(dID=%{public}@) [PDFInstall-Op]: Adding purchase manifest
(dID=%{public}@) [PDFInstall-Op]: Updating purchase single user manifest: %{public}@
(dID=%{public}@) [PDFInstall-Op]: Updating purchase manifest since isRestore == NO.
(dID=%{public}@) [PDFInstall-Op]: An entry with fileName %{mask.hash}@ already exists.
(dID=%{public}@) [PDFInstall-Op]: Could not install non-existant file: %@
(dID=%{public}@) [PDFInstall-Op]: Saving Book to %@
(dID=%{public}@) [PDFInstall-Op]: Book already at destination: %@
(dID=%{public}@) [PDFInstall-Op]: Moving file: %@ to path: %@
(dID=%{public}@) [PDFInstall-Op]: No manifest entry found for book.
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for automatic download.
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for inexpensive network.
[%{public}@]: Download of size %llu exceeds cellular limit, asking how to proceed.
[%{public}@]: Error delivering dialog request: %{public}@
[%{public}@]: We were asked to download now.  Not requiring inexpensive data.
[%{public}@]: We were asked to download later.  Requiring inexpensive data.
[%{public}@]: Evaluation for download completed with result: %ld
[PDFInstall-Op]: Simulating a crash during install decrypt
[Purchase-Mgr]: storeID not found: storeIdentifier=%@, buyParameters=%@
[Purchase-Mgr]: Attempting purchaseWithRequest:
[Purchase-Mgr]: Skipping because there is ongoing purchase request for storeIdentifier=%@, buyParameters=%@
[Purchase-Mgr]: Unexpected restore path.
[Purchase-Mgr]: starting _purchaseWithRequest:
[Purchase-Mgr]: Failed to perform purchase as the purchase manager was released.
(dID=%{public}@) [Purchase-Mgr]: Purchase download already in progress.
[Purchase-Mgr]: Failed to create entry for new download.
[Purchase-Mgr]: starting downloadWithPermlink:
(dID=%{public}@) [Purchase-Mgr]: Permlink download already in progress.
[Purchase-Mgr]: starting requestDownloadWithMetadata:isRestore:%@
(dID=%{public}@) [Purchase-Mgr]: Download already in progress.
[Purchase-Mgr]: Failed to create entry for new download with error:  %@
[Purchase-Mgr]: Failed to start one download (%@) with error:  %@
[ContentRestore] Request restores for %lu item(s)
[ContentRestore] Already got restore response item for itemID: %@
[ContentRestore] Request downloads encountered error:  %@
[ContentRestore] No store download item for restore response itemID: %@, error:  %@
[ContentRestore] Operation encountered error:  %@
[ContentRestore] Missing restore response item for itemID: %@
[ContentRestore] Received error while doing restore download operation. Got total of %lu downloads, %lu response for %lu restore items(s). New downloadIDs: %{public}@. Error:  %@
[ContentRestore] Got total of %lu downloads, %lu response for %lu restore items(s). New downloadIDs: %{public}@
[ContentRestore] Restore request items array is empty
Updating download policy for automatic downloads
[Purchase-Mgr]: [%{public}@] Cellular evaluation for automatic download failed due to  %@
[Purchase-Mgr]: [%{public}@] Set cellular evaluation result for automatic download to %ld
Processing automatic downloads
Downloads found in automatic download queue: %@
Checking download queues at client request
Load Queue: Loading %lu queues with reason: %@
Load Queue: Checking %lu queues with reason: %@
Load Queue: Pending download queue has %lu downloads, downloads = %@
Load Queue: Found %lu downloads with store identifier of purchase %@
Load Queue: Found %lu other downloads
(dID=%{public}@) [Purchase-Mgr]: Purchase manager went away.
(dID=%{public}@) [Purchase-Mgr]: Failed to update download with purchase metadata. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: Failed to create target path for download, moving download failed. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: No permlink available to download
[Purchase-Mgr]: Unknown download.
(dID=%{public}@) [Purchase-Mgr]: Processing purchase request on dispatchQueue
(dID=%{public}@) [Purchase-Mgr]: About to enqueue AMS purchase request
(dID=%{public}@) [Purchase-Mgr]: AMS purchase promise fulfilled.
(dID=%{public}@) [Purchase-Mgr]: Posting BLDownloadQueuePurchaseSucceededNotification.
(dID=%{public}@) [Purchase-Mgr]: Posting BLDownloadQueuePurchaseFailedNotification.
(dID=%{public}@) [Purchase-Mgr]: AMS purchase response is non-empty
(dID=%{public}@) [Purchase-Mgr]: Got trigger-download in purchase response
[Purchase-Mgr]: Purchase response items is empty
(dID=%{public}@) {logUUID=%{public}@} [Purchase-Mgr]: Cellular evaluation for download failed due to  %@
(dID=%{public}@) {logUUID=%{public}@} [Purchase-Mgr]: Set cellular evaluation result for download to %ld
(dID=%{public}@) {logUUID=%{public}@}[Purchase-Mgr]: Failed to request download of kind '%{public}@' due to  %@
(dID=%{public}@) {logUUID=%{public}@}[Purchase-Mgr]: Successfully requested download of kind '%{public}@'
(dID=%{public}@) {logUUID=%{public}@}[Purchase-Mgr]: Skipping download due to unrecognized kind '%{public}@'
{logUUID=%{public}@}[Purchase-Mgr]: Purchase completed! Error:  %@
{logUUID=%{public}@}[Purchase-Mgr]: Purchase completed!
(dID=%{public}@) [Purchase-Mgr]: Got trigger-download in error of purchase response, error:  %@
(dID=%{public}@) [Purchase-Mgr]: AMS purchase response is empty, error:  %@
(dID=%{public}@) [Purchase-Mgr]: Failed to create target path for download, moving download to failed. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: Handling for trigger-download completed
(dID=%{public}@) [Purchase-Mgr]: Preparing the download asset on dispatchQueue based on the downloadsMetadata.
(dID=%{public}@) [Purchase-Mgr]: Error serializing sinfInfo:  %@
(dID=%{public}@) [Purchase-Mgr]: Cellular evaluation result for download was %ld
[Purchase-Mgr]: isRestore is TRUE
[Purchase-Mgr]: isRestore is FALSE
(dID=%{public}@) [Purchase-Mgr]: purchaserAccountID (%@) different from accountID (%@), retrieving family info to verify whether purchaser is a family member
(dID=%{public}@) [Purchase-Mgr]: failed to retrieve family information to identify purchaserID (%@)
(dID=%{public}@) [Purchase-Mgr]: Verified purchaserAccountID (%@) belongs to a family member (%@)
(dID=%{public}@) [Purchase-Mgr]: purchaserAccountID (%@) does not belong to a family member; ignoring
[Purchase-Mgr]: Finished preparing the download asset: %@
(dID=%{public}@) [Purchase-Mgr]: Purchase manager went away for download.
(dID=%{public}@) [Purchase-Mgr]: [Purchase-Mgr]: Failed to update download with purchase metadata. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: No url available to download
(dID=%{public}@) [Purchase-Mgr]: Failed to create target path for download, moving it to failed. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: Processed the download request for URL: %@.
[Purchase-Mgr]: No downloadID returned for URL: %@.
(dID=%{public}@) [Purchase-Mgr]: Error attempting to download URL: %@. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: Failed to write iTunesMetadata.plist for download. Error:  %@
(dID=%{public}@) [Purchase-Mgr]: Skip writing sinf.xml for PDF download.
(dID=%{public}@) [Purchase-Mgr]: Failed to write sinf.xml for download.  Error: %@
(dID=%{public}@) [Purchase-Mgr]: Failed to write iTunesArtwork for download.  Error:  %@
(dID=%{public}@) [Purchase-Mgr]: p_downloadIDForRequest - Ignoring downloadID of state: %{public}@
(dID=%{public}@) [Purchase-Mgr]: p_downloadIDForRequest - state: %{public}@
ContentRestore: Attempting to resolve unknown Apple ID: %@
ContentRestore: Resolved AppleID: %@ to AppleID: %@ and DSID: %@
ContentRestore: Could not resolve AppleID: %@ error:  %@
ContentRestore: Attempt to establish primary account
ContentRestore: Encountered error trying to establish primary account:  %@
ContentRestore: Got account: %@, serverResponse: %@
ContentRestore: Cannot restore without an AppleID for account: %@, error: %@
ContentRestore: Preflight account: %@ | %@, accountIsNew: %d, active: %d, isAuthenticated: %d
ContentRestore: Encountered error trying to preflight account: %@, error: %@
No destination file name available for manifest.
%@: Invalid url request
Could not load download manifest with error:  %@
%@: Request failed with error:  %@
(dID=%{public}@) [Sinf-Helper]: Writing Sinf for download at targetURL: %@
Initializing.
Daemon shutting down.
Starting up.
Some error happened in pre-listener startup: %@
Finished starting up.
Connection request from pid=%d
Refusing connection to pid %d. (appIdentifier: %{public}@) %{public}@
Accepting new connection from pid %d
Setting up listeners.
Starting the library service.
Doing initial calculation of storage usage.
Received locale change, stopping bookassetd
[Download-FileSys]: Finishing for file: %@
[Download-FileSys]: Error finishing for file: %@, error:  %@
[Download-FileSys]: Resetting file: %@
[Download-FileSys]: Suspending file: %@
[Download-FileSys]: Invalid chunk index: %ld, for bytes written: %lld, bytes to hash: %ld
[Download-FileSys]: Hash mismatch for chunk: (%lld:%lld), %{public}@ should be %{public}@
[Download-FileSys]: Opening file: %@
%{public}@: Failed to archive track items. Error =  %@
%{public}@: Failed to unarchived items. Error =  %@
store import complete. success=%d, err=%@
(dID=%{public}@) No cancel-download-url
(dID=%{public}@) Request failed for marking download as cancelled for server. Error:  %@
(dID=%{public}@) Request failed for marking download as done for server. Error:  %@
(dID=%{public}@) Request finished for marking download as cancelled for server.
(dID=%{public}@) Request finished for marking download as done for server.
[Install-ExtractFile-Op]: Fixing file permissions for %@
[Install-ExtractFile-Op]: Could not get sub-paths of %@:  %@
[Install-ExtractFile-Op]: Could not stat %@: %s
[Install-ExtractFile-Op]: Could not set file attributes for file: %@, error:  %@
[Install-ExtractFile-Op]: Preparing to uncompress to total file size: %llu
Error initializing unarchiving copier. sourceURL: %{mask.hash}@, error:  %@
[Install-ExtractFile-Op]: Extracting %{mask.hash}@ to %{mask.hash}@
[Install-ExtractFile-Op]: Extraction failed with error:  %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>bookassetd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.bookassetd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>570</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19A5261t</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>19A5261t</string>
<key>DTSDKName</key>
<string>iphonesimulator15.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A6139f</string>
<key>MinimumOSVersion</key>
<string>15.0</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2016 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>612006184</string>
<key>application-identifier</key>
<string>com.apple.bookassetd</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.bookassetd</string>
<key>com.apple.asd.client</key>
<string>9824938448</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks.iTunesU</string>
</array>
<key>com.apple.developer.pass-type-identifiers</key>
<array>
<string>*.pass.com.apple.itunes.storecredit</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks.iTunesU</string>
</array>
<key>com.apple.iBooks.BDSService.private</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.payment.amp-card-enrollment</key>
<true/>
<key>com.apple.payment.card-on-file</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.CoreAuthentication.SPI</key>
<true/>
<key>com.apple.private.FairPlayIOKitUserClient.access</key>
<true/>
<key>com.apple.private.MobileContainerManager.stageSharedContent</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.in-app-payments</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceFaceID</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.iBooks</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.iBooks</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Media/Books/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.asd.scoring</string>
<string>com.apple.iBooks.BookDataStoreService</string>
<string>com.apple.passd.library</string>
<string>com.apple.passd.in-app-payment</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.coreidvd.proofing</string>
<string>com.apple.backupd</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOMobileFramebufferUserClient</string>
<string>IOSurfaceRootUserClient</string>
<string>com_apple_driver_FairPlayIOKitUserClient</string>
<string>AppleJPEGDriverUserClient</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.media.shared.books</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>fairplay-client</key>
<string>1328318286</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
</dict>
</plist>
