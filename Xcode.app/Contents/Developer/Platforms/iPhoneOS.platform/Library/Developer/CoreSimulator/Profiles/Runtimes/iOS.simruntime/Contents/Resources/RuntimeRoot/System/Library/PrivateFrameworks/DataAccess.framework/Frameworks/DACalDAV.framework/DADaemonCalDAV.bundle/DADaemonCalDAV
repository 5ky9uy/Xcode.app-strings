T@"NSHashTable",R,N,V_consumers
APSEnv
_attachmentSize
APSTopic
_attachmentUUID
CDVRawPath
_holdingDiscoveryGatekeeperLock
CalTemporaryDirectoryAppropriateForURL:
_parseResponse:
T#,R
_shareResponses
T@"<DAEventsCalendarSharingResponseConsumer>",W,N,V_consumer
_useSSL
T@"CalDAVAgent",W,N,V_consumer
activeModalTask
T@"CoreDAVTaskGroup",&,N,V_currentOperation
attachmentURL:matchesServerURL:
T@"DATrustHandler",R,N
cancelOfficeHoursRequestWithID:
T@"MobileCalDAVDaemonAccount",R,W,N,V_account
containsObject:
T@"NSMutableDictionary",&,N,V_attachmentDownloadsByAttachmentUUID
dealloc
T@"NSMutableDictionary",&,N,V_directorySearches
T@"NSMutableDictionary",&,N,V_shareResponses
hostWithoutPath
T@"NSMutableSet",&,N,V_groupExpansions
initWithFormat:
T@"NSString",&,N,V_calendarID
interfaceWentUp
T@"NSString",R,N,V_attachmentUUID
isExpandPropertyReportSupported
T@"NSString",R,N,V_responseID
lowercaseString
T@,R,N
payloadAsString
T@,R,N,V_searchID
pushKey
TB,N,V_fullRefresh
removeConsumer:
TB,N,V_shouldRegisterWithRefreshManager
responseHeaders
Ti,N,V_refreshReason
setDisplayName:
URLWithString:
setResultLimit:
_account
setUri:
_attachmentDownloadDidFinish:
sharedDBWatcher
_attachmentURL
startMonitoring
_availabilitySpansForFreeBusyProperties:usingCalendar:
stringByRemovingPercentEncoding
_calendarID
supportsSharing
_consumer
_continueRefresh
version
.cxx_destruct
T@"NSString",&,N,V_previousETag
APSSubscriptionURL
_attachmentType
APSTopicHasValidPrefix:
_didFinishDownloadingWithError:
CDVURLWithScheme:host:port:path:
_ignoredEventID
DAObjectForKeyCaseInsensitive:
_placeholderAccountInfoProvider
T@"<DAEventsAttachmentDownloadConsumer>",W,N,V_consumer
_updateCalendarStoreProperties:
T@"<DAEventsOfficeHoursRequestResponseConsumer>",R,W,N,V_consumer
account
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
address
T@"DACoreDAVTaskManager",R,N,V_taskManager
calendarHomeURL
T@"MobileCalDAVAttachmentDownloader",W,N,V_downloader
cancelTaskGroup
T@"NSMutableArray",&,N,V_updateGrantedDelegatePermissionRequests
context
T@"NSMutableDictionary",&,N,V_calendarAvailabilityRequests
dtstart
T@"NSMutableDictionary",&,N,V_grantedDelegatesListRequests
groupExpansions
T@"NSMutableDictionary",R,N,V_officeHoursRequests
identityPersist
T@"NSString",&,N,V_attachmentUUID
initWithStartDate:endDate:type:
T@"NSString",R,C
isAuthenticated
T@"NSString",R,N,V_requestID
isProxy
T@"NSTimer",&,N,V_optionsTimeoutTimer
numberWithBool:
T@,R,N,V_requestID
perform
TB,N,V_forcedRefresh
release
TB,N,V_safeToRefresh
renewCredential
TQ,R
URLSession:dataTask:didReceiveData:
setFullRefresh:
UTF8String
setSupportsSharingNoScheduling:
_addresses
shareResponseFinishedWithError:
_attachmentDownloadsByAttachmentUUID
shouldUseCalendarHomeSyncReport
_availabilitySpansForFreeBusyComponent:usingCalendar:
stringByAppendingPathComponent:
_calendarAvailabilityRequests
supportsPrincipalPropertySearch
_cancelOptionsTimer
tokensAreLegal:
_consumers
userAgentHeader
_convertRecordTypesToSearchTypes:
_createReplyGroupForReportingCalendarAsJunk:
_createReplyGroupForShareInviteResponse:toCalendar:
_currentOperation
_deleteSharingInvitationWithUID:
_didShowProgressDownloadedByteCount:
_directorySearches
_doRequestWithTaskGroupCreationBlock:taskGroupCompletionBlock:
_doSharingRequestResponseWithCreateReplyGroupBlock:
_downloader
_endDate
_etag
_exceededResultLimit
_fetchedOfficeHours
_fileUUID
_filterTermsForOldStyleSearch
_finishWithError:
_finished
_finishedWithError:
_finishedWithResults:error:
_forcedRefresh
_foundDuplicateCalendars:
_freeBusyLookupID
_fullRefresh
_grantedDelegate
_grantedDelegateFromCalDAVDetails:allowWrite:
_grantedDelegatesListRequests
_groupExpansions
_handleResponseForSearchTask:
_handleResponseForTask:
_hasChangesInStore:forChangesCall:
_holdingGatekeeperLock
_host
_isEnabled
_lastRetryTimeout
_localFilename
_officeHoursRequests
_optionsProbe
_optionsTimeoutTimer
_parseResponse:withAddresses:
_performNewStyleSearch
_performOldStyleSearch
_persistAccountSyncDiagnostics:withContext:completionTime:willAttemptToRetry:hitInternalRefreshTimeout:error:
_port
_previousETag
_principalPath
_probeAndSync
_reallyBeginDownload
_reallyCancelAllSearchQueries
_reallyPerformRequest
_reallyPerformSearch
_reallyPerformSearchQuery:
_reallyRespondToSharingRequestWithCreateReplyGroupBlock:
_reallySaveAttachmentDataToDatabase
_recordTypes
_refresh
_refreshReason
_requestID
_responseID
_resultLimit
_results
_safeToRefresh
_saveAttachmentDataToDatabase
_searchID
_searchType
_serverProbeTimedOut
_setupNotifications
_shouldRefreshInResponseToDBChange
_shouldRegisterWithRefreshManager
_startDate
_startOfficeHoursRequestWithConsumer:error:startRequestBlock:
_taskGroup
_taskManager
_terms
_updateGrantedDelegatePermissionRequests
_updateWatchedCollections
_validateAndSync
_validateAndSync:
_validityCheckConsumer
_waiterID
_waitingForDiscoveryGatekeeper
_waitingForGatekeeper
_watchedCollections
aa_updatePropertiesForAppleAccount:completion:
absoluteString
absoluteURL
account:isValid:validationError:
accountDescription
accountID
accountInfoProvider
accountShouldContinue:
accountSyncDiagnostics
accountWithAccountID:
addComplianceClass:
addConsumer:
addEntriesFromDictionary:
addObject:
addSyncError:
addUsernameToURL:
additionalHeaderValues
addresses
allValues
anyObject
arrayWithObjects:count:
attachmentDownloadsByAttachmentUUID
attachmentUUID
attendee
autorelease
backingAccountInfo
beginDownload
beginDownloadingAttachmentWithUUID:consumer:
calCloseDatabaseForAccountID:save:
calCollectionSetName
calDAVUserAddressForItem:
calDatabaseForAccountID:
calOpenDatabaseAsGenericClientForAccountID:
calOpenDatabaseForAccountID:clientID:
calendar
calendarAvailability
calendarAvailabilityRequestFinishedWithError:
calendarAvailabilityRequestIsGoingAway:
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequests
calendarDirectorySearchFinishedWithError:exceededResultLimit:
calendarDirectorySearchIsGoingAway:
calendarDirectorySearchReturnedResults:
calendarID
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshFoundDeletedContainerURL:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshMkCalendarSucceededForPrincipal:calendar:
calendarRefreshPropPatchFinishedWithError:forCalendar:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshWillRefreshCalendar:
calendarRefreshWillSendCalendarDeletes:
calendarUserAddresses
calendars
calscale
cancel
cancelAllAttachmentDownloads
cancelAllCalendarAvailabilityRequests
cancelAllCalendarDirectorySearches
cancelAllGrantedDelegatesListRequests
cancelAllGroupExpansions
cancelAllSharingRequests
cancelAllTasks
cancelAllUpdateGrantedDelegatePermissionRequests
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownload
cancelDownloadingInstance:error:
cancelGrantedDelegatesListRequestWithID:
cancelRefreshWithCompletion:
cancelShareResponseInstance:error:
cancelUpdateGrantedDelegatePermissionRequestWithID:
changeTrackingID
childAccountWithIdentifier:
class
clientCertificateInfoProvider
clientToken
clientTokenRequestedByServer
code
collectionSetURL
compare:
complianceClasses
components
conformsToProtocol:
consumer
consumers
contextWithAttachmentUUID:consumer:
convertToMobileCalDAVRefreshReason:
copy
copyCalStore
copyStorageSession
count
countByEnumeratingWithState:objects:count:
currentHandler
currentOperation
customConnectionProperties
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_classicPortForScheme:
da_lowercaseHexStringWithoutSpaces
da_newGUID
da_trimWhiteSpace
dataclassProperties
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultContext
defaultDAVProbeTimeout
defaultManager
delegateDidCompleteRefresh:
description
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
directorySearches
discoverInitialPropertiesWithConsumer:
discoveryTask:gotAccountInfo:error:
displayName
domain
doubleValue
downloadFinishedError:
downloadProgressDownloadedByteCount:totalByteCount:
downloader
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dtend
duration
emailAddress
enabledForDADataclass:
enumerateObjectsUsingBlock:
error
errorItem
errorWithDomain:code:userInfo:
expandCDGroup:
extractDARefreshReasonFromContext:
fbtype
fetchInterval
fetchOfficeHoursWithConsumer:error:
fileExistsAtPath:
finishCoreDAVTaskWithError:
finishWithError:
firstName
firstObject
forcedRefresh
freebusy
fullRefresh
getAppleIDSession
getDAAccount
grantedDelegatesListRequestFinishedWithResults:error:
grantedDelegatesListRequestIsGoingAway:
grantedDelegatesListRequests
groupExpansionFinishedWithResults:error:
handleAuthenticateAgainstProtectionSpace:
handleCertificateError:
handleFailureInMethod:object:file:lineNumber:description:
handleShouldUseCredentialStorage
handleTrustChallenge:completionHandler:
handleValidationError:completion:
hasMailto
hasPrefix:
hash
host
hostFromDataclassPropertiesForDataclass:
hostLikelyUnreachable:
hrefs
icsFromOfficeHours:
identifier
inboxURL
init
initForReplyWithUID:href:hostURL:summary:
initWithAccount:
initWithAccount:consumer:
initWithAccountInfoProvider:addWriteURLs:addReadURLs:removeURLs:taskManager:
initWithAccountInfoProvider:inboxURL:calendarAvailability:taskManager:
initWithAccountInfoProvider:inboxURL:taskManager:
initWithAccountInfoProvider:principalURL:taskManager:
initWithAttachmentFile:
initWithAttachmentUUID:consumer:
initWithAttachmentUUID:forAccount:
initWithBackingAccountInfo:
initWithCalendarID:consumer:account:
initWithCalendarIdentifier:
initWithCapacity:
initWithConsumer:account:
initWithDatabase:clientIdentifier:
initWithFileDescriptor:closeOnDealloc:
initWithGrantedDelegate:consumer:account:
initWithIdentifier:
initWithInvitation:acceptInvitation:atCalendarHomeURL:accountInfoProvider:taskManager:
initWithNameSpace:name:parseClass:
initWithOptions:capacity:
initWithOrganizer:originator:attendees:start:end:outboxURL:maskedUID:extendedFreeBusy:prodID:
initWithPrincipal:
initWithPrincipalPath:consumer:account:
initWithPropertiesToFind:atURL:expandedName:expandedNameSpace:
initWithPropertySearches:propertiesToFind:atURL:applyToPrincipalCollectionSet:extraAttributes:
initWithResourceURLs:accountInfoProvider:taskManager:
initWithSearchStrings:atURL:
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
initWithStartDate:endDate:ignoredEventID:addresses:consumer:account:
initWithTerms:recordTypes:resultLimit:consumer:account:
initWithURL:
initWithURL:destinationFile:
integerValue
interfaceWentDown
invalidate
isDelegateAccount
isDisabledDelegateAccount
isEnabledForDataclass:
isEqual:
isEqualToString:
isFileURL
isKindOfClass:
isMemberOfClass:
isMonitoring
isValidating
isWaitingForPassword
lastName
lastObject
lastPathComponent
length
longLongValue
mainPrincipal
monitorFoldersWithIDs:
multiStatus
mutableCopy
namespaceAndNameForWellKnownType:
needsAccountPropertyRefresh
noteFailedNetworkRequest
noteFailedNetworkRequestForTask:
noteFailedProtocolRequest
noteFailedProtocolRequestForTask:
noteHomeSetOnDifferentHost:
noteSuccessfulRequestWithNumDownloadedElements:
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteTimeSpentInNetworking:
noteTimeSpentInNetworking:forTask:
notificationCollectionURL
numberOfMatchesWithinLimits
numberWithInteger:
oauthInfoProvider
objectForKey:
objectForKeyedSubscript:
observeReachabilityWithBlock:
officeHoursFromICS:
officeHoursRequestWithID:finishedWithError:
officeHoursRequestWithID:finishedWithOfficeHours:error:
officeHoursRequestWithIDFinished:
officeHoursRequests
onBehalfOfBundleIdentifier
optionsProbe
optionsTimeoutTimer
orderedResponses
outboxURL
parentAccount
parserMappingsWithServerSupportSet:includeEmail:
password
path
pathExtension
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performGroupExpansionForPrincipalPath:consumer:
performRequest
performSearch
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permission
port
portFromDataclassPropertiesForDataclass:
preferredAddress:
preferredAddresses
preferredCalendarUserAddress
preferredDaysToSyncDidChange
preferredEventDaysToSync
preferredToDoDaysToSync
previousETag
principalPath
principalURL
progressQueue
promptUserForNewCoreDAVPasswordWithCompletionBlock:
propertySearchItemForWellKnownType:
publicDescription
pushDisabled
pushTokenForEnvironment:
rangeOfString:options:
readOnlyPrincipalDetails
readWritePrincipalDetails
reallyRefresh
recordError:forHost:
refreshActor:didCompleteWithError:
refreshCalendarProperties
refreshCollections:withReason:
refreshDidCompleteWithError:
refreshFolderListRequireChangedFolders:isUserRequested:
refreshReason
refreshWillBegin
refreshWithContext:
registerAccount:forOperationWithName:
registerConcernedCalParty:forAccountID:withChangedBlock:
registerDelegate:
registerTopic:forDelegate:inEnvironment:
registerWaiter:forDataclassLocks:completionHandler:
relativePath
relinquishLocksForWaiter:dataclasses:moreComing:
removeAllObjects
removeConcernedCalParty:forAccountID:
removeObject:
removeObjectForKey:
reportAsJunk
reportShareRequestAsJunkForCalendar:consumer:
requestAgentStopMonitoringWithCompletionBlock:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
requestGrantedDelegatesListWithConsumer:
requestID
respondToShareRequestForCalendar:withResponse:consumer:
respondToSharingRequestWithResponse:
respondsToSelector:
responseID
responseWithCalendarID:consumer:account:
responses
resultFromCalDAVPrincipalResult:
resultFromResponse:
resultType
retain
retainCount
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
safeToRefresh
saveAccountProperties
saveAccountSync:
savePush:
saveVerifiedAccount:withCompletionHandler:
saveXpcActivity:
scheduleIdentifier
scheduleResponse
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheme
searchID
searchPropertySet
searchQuery:finishedWithError:
searchString
self
serverComplianceClasses
serverHeader
serverRoot
serverTokenRegistrationURL
serverVersion
setAccountInfoProvider:
setAccountProperty:forKey:
setAttachmentDownloadsByAttachmentUUID:
setAttachmentUUID:
setAuthenticated:
setCalendarAvailabilityRequests:
setCalendarID:
setChangeTracker:
setCode:
setCompletionBlock:
setConsumer:
setCurrentOperation:
setDelegate:
setDirectorySearches:
setDomain:
setDownloader:
setEndTime:
setEndpointReceived:
setFetchPrincipalDetails:
setFirstName:
setForcedRefresh:
setGrantedDelegatesListRequests:
setGroupExpansions:
setHitInternalRefreshTimeout:
setHost:
setIsCalendarsOnly:
setIsForced:
setIsMonitoring:
setIsWaitingForPassword:
setLastName:
setMatch:
setMatchTypeAttribute:
setNeedsDefaultAllDayAlarmUpdate:
setNeedsDefaultTimedAlarmUpdate:
setNewStyleSearchTypeFromRecordTypes
setObject:forKey:
setObject:forKeyedSubscript:
setOfficeHours:withConsumer:error:
setOptionsProbe:
setOptionsTimeoutTimer:
setPermission:
setPort:
setPreferredAddress:
setPreferredEventDaysToSync:
setPreferredToDoDaysToSync:
setPreferredUserAddress:
setPreviousETag:
setPrincipalPath:
setRefreshReason:
setSafeToRefresh:
setSearchType:
setServerHeader:
setServerSupportsExpandPropertyReport:
setServerVersion:
setShareResponses:
setShouldDoInitialAutodiscovery:
setShouldRegisterWithRefreshManager:
setShouldUpdatePushDelegate:
setShouldUseOpportunisticSockets:
setSourceDisplayName:
setSourceExternalIdentifier:
setSourceIsDelegateAccount:
setSourceIsEnabled:
setStartTime:
setSubscribedCalendarsChanged:
setSupportedCalendarComponentSets:
setSupportsAutoSchedule:
setSupportsCalendarProxy:
setSupportsExtendedCalendarQuery:
setSupportsInboxAvailability:
setSupportsManagedAttachments:
setSupportsManagedSubscriptionCalendars:
setSupportsParticipantRoles:
setSupportsPrincipalPropertySearch:
setSupportsPrivateComments:
setSupportsPrivateEvents:
setSupportsRequestCompression:
setSupportsSharing:
setSupportsSubscriptionCalendars:
setSupportsSubscriptionMirroring:
setSupportsTimeRangeFilter:
setSupportsTimeRangeFilterOnInbox:
setSupportsTimeRangeFilterWithoutEndDate:
setSyncWhenReachable:
setTimeZone:
setType:
setUpdateGrantedDelegatePermissionRequests:
setUseSSL:
setValue:forKey:
setVersion:
setWasDueToPush:
setWasRequestedByUser:
setWasUserInitiated:
setWasUserRequested:
setWillAttemptToRetry:
setWithArray:
setWithObject:
shareResponseIsGoingAway:
shareResponses
sharedBabysitter
sharedGateKeeper
sharedInstance
sharedManager
shouldAutodiscoverAccountProperties
shouldCompressRequests
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldHandleHTTPCookiesForURL:
shouldRegisterWithRefreshManager
shouldRetry
shouldRetryUnauthorizedTask:
shouldSendClientInfoHeaderForURL:
shouldTryRenewingCredential
shouldTurnModalOnBadPassword
shouldUpdatePushDelegate
shouldUseOpportunisticSockets
shutdown
simulateCrashWithMessage:
start
startFetchOfficeHoursRequest
startSetOfficeHoursRequest:
startTaskGroup
startTime
stateString
stopObservingReachability
stringByDeletingPathExtension
stringRemovingMailto
stringWithFormat:
stringWithUTF8String:
submitIndependentCoreDAVTask:
submitIndependentTask:
submitQueuedCoreDAVTask:
subscribedCalendarsChanged
successfulICS
successfulPropertiesToValues
successfulValueForNameSpace:elementName:
superclass
supportedCalendarComponentSets
supportsAuthentication
supportsAutoSchedule
supportsCalendarProxy
supportsCalendarUserSearch
supportsExtendedCalendarQuery
supportsFreebusy
supportsInboxAvailability
supportsManagedAttachments
supportsManagedSubscriptionCalendars
supportsParticipantRoles
supportsPrivateComments
supportsPrivateEvents
supportsReminders
supportsRequestCompression
supportsSharingNoScheduling
supportsSubscriptionCalendars
supportsSubscriptionMirroring
supportsTimeRangeFilter
supportsTimeRangeFilterOnInbox
supportsTimeRangeFilterWithoutEndDate
syncEndedWithError:
syncFolderIDs:forDataclasses:isUserRequested:
syncStarted
task:didFinishWithError:
taskGroup:didFinishWithError:
taskManager
timeInterval
timeZoneWithName:
title
totalBytesReceived
transactionId
trustHandler
type
unregisterAccount:forOperationWithName:
unregisterDelegate:
unregisterTopic:forDelegate:inEnvironment:
unregisterWaiterForDataclassLocks:
updateGrantedDelegatePermission:consumer:
updateGrantedDelegatePermissionFinishedWithError:
updateGrantedDelegatePermissionRequestIsGoingAway:
updateGrantedDelegatePermissionRequests
useSSL
useSSLFromDataclassPropertiesForDataclass:
useThunderhillBetaServers
user
userInfo
username
value
waiterID
wasDueToPush
wasUserRequested
watchedCollections
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
zone
Account %{public}@ is a disabled delegate account, so we're not going to refresh it
Account "%@" is waiting for a password, so we're going to ignore this refresh request
Account doesn't have a principal URL. Running autodiscovery.
Account "%@" (%{public}@) is refreshing in response to a calendar database change
Registering %p for database change notifications
Calendar database changed. Refreshing account  "%@" (%{public}@)
Validation for account "%@" was cancelled, so we're not going to save the account properties we just discovered. Better luck next time.
Got a password from the user. Attempting autodiscovery again for "%@"
Account "%@" can't figure out its principalPath, and we couldn't get a password from the user 
Account "%@" can't figure out its principalPath. 
We'll refresh if we find a better network connection.
CalDAV has started monitoring for the account "%@"
reachability indicates that the network is reachable.  We're going to retry our folder sync.
Account %{public}@ is a disabled delegate account, so we're not going to refresh it.
The CalDAV agent was told to stop monitoring.
Unregistered %p for database change notifications
Refresh completed with this error: %@
We encountered a network error when refreshing. Scheduling a refresh for when the network reachability changes
Account "%@" was told to refresh its folder list
Account "%@" was told to sync the folders %@
Refreshing account "%@" because the days to sync setting changed
Hack to keep %@ from getting released too early
Starting GetGrantedDelegatesTaskGroup: [%@]
[%@] finished with error %@
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
The gatekeeper lock has been granted. Beginning save of attachment %@
Couldn't get an attachment to set our downloaded file on
Couldn't save attachment file in the database for attachment %@
Attachment has been saved. Releasing gatekeeper lock
DATransaction starting, ID: %@
Requesting gatekeeper lock to save attachment %@
The downloader's gatekeeper locks were aborted while it was waiting for a lock. Bummer.
Downloader %@ was told to save the attachment twice. Ignoring the second request
The attachment at %@ hasn't been modified since we last saw it.
Couldn't download the attachment at %@: %@
Finished downloading the file at %@. Saving to the database.
etag for attachment on the server is %@. Our etag is %@
Downloading attachment of size %lld
Acquired DBLock to download attachment.
Couldn't get a gatekeeper lock in order to download attachment.
We were told to download the attachment with UUID %@ but that attachment doesn't have a URL. We can't do anything
Refusing to download the attachment with URL %@ because it isn't http or https
Couldn't create a temporary file with the format %s
Downloading attachment at %@ to %@
Notifying consumers of progress: %lld/%lld
Done downloading attachment %@.%@%@
Hack to get %@ retained
Starting new attachment download for consumer %p and attachment UUID %@
Cancelling new attachment download for consumer %p and attachment UUID %@
Cancelling All attachment downloads
Calendar scale unsupported: [%@].  Will not use iCalendar document in free/busy response: [%@]
No availability spans generated for component: [%@]
No attendee found on free/busy component [%@].  Will not save free/busy spans.
Free/busy window start date: [%@] end date: [%@].  Component: [%@]
No free/busy properties found.  Counting entire period as free.  Component: [%@]
No spans found in properties: [%@]
No spans generated.  The entire window from [%@] to [%@] will be counted as 'unknown.'
Period not valid.  Start: [%@]  End: [%@] Duration: [%@].  Property: [%@]
Could not generate start and end date for period: [%@].  Property: [%@]
The generated start date is after the generated end date.  Property: [%@]
The following principal indicates that free/busy is not supported, so no request will be sent: [%@]
Calendar availability (free/busy) task complete: [%@].  Error: [%@]
Starting calendar availability (free/busy) task: [%@]
New-style search (%@) not supported.  Falling back to old-style search (%@).
Removing calendar directory search term because it is less than [%lu] characters in length: [%@]
Removing remaining calendar directory search term because it is less than [%lu] characters in length: [%@]
After filtering calendar directory search terms, none are left.  Will not proceed with search.
Starting calendar search task: [%@]
Calendar directory search terms are not legal.  Will not proceed with search.
Calendar search task complete: [%@].  Error: [%@]
Number of matches exceeded the limit of: [%lu]
Encountered result with displayName: [%@]
Unexpected parsing of calendar-user-address-set: %@
No href items found for calendar-user-address-set: [%@]
Found calendar user address: [%@]
Unable to parse user address: [%@]
Calendar user type: [%@]
Known calendar user type encountered but not handled: [%@]
Unrecognized calendar user type encountered during directory search: [%@]
Record type: [%@]
Unrecognized record type encountered during directory search: [%@]
Starting UpdateGrantedDelegatesTaskGroup: [%@]
Error fetching office hours for account %@: %@
Discovered principal path %@ from address %@
Calendar group expansion complete: [%@].  Error: [%@]
Done refreshing calendars. Saving the database
Delete task at %@ finished with error %@
Couldn't get an external id from the invite notification with uid %@
Couldn't find a sharing invite notification in the database with uid %@
Couldn't get a calendar store to delete the calendar sharing invitation from
Didn't send a delete for the sharing invitation with uid %@
Reply to shared calendar invitation task group %@ finished with error %@
Waiting on the gatekeeper before responding to a calendar share request
Sending shared calendar invite %@ for invite to "%@" of with uid %@ at URL %@
Releasing gatekeeper lock
MobileCalDAVSharingResponse %p finished with error %@
MobileCalDAVDaemonAccount %p starting up.
MobileCalDAVDaemonAccount %p going away
Cancelling CalDAV refresh.
Cancel complete. Unregistering ourself as a gatekeeper waiter
Updating watched collections for %luu calendars
Push key for calendar "%@" is %@
Refresh complete. Releasing gatekeeper lock and notifying PersistentConnection
Notifying consumer about our refresh completion
Refusing to register for the topic "%@" because it has an invalid prefix.
The server returned precondition failure to our bulk upload. Retrying in a bit.
The server returned a 503 error and told us to try again in %f seconds
We'll retry again after %f seconds
We've already backed off for 7 minutes. Giving up and retrying again at our regularly scheduled time
Received a success response from server while account is not marked as authenticated. Set isAuthenticated flag and save account %@
Saving account properties to pick up on new subscribed calendars
Saving calendar diagnostics
Dropping search query "%@" because the agent is shut(ting) down.
Found event changes for account "%@" (%{public}@)
Found task changes for account "%@" (%{public}@)
Found alarm changes for account "%@" (%{public}@)
Found attendee changes for account "%@" (%{public}@)
Found attachment changes for account "%@" (%{public}@)
Found recurrence changes for account "%@" (%{public}@)
Found calendar changes for account "%@" (%{public}@)
Found notification changes for account "%@" (%{public}@)
Found sharee changes for account "%@"
Account Properties Need to Be Refreshed. Allowing Refresh to Continue..
[account %@] %@ Account Refresh as we %@ local DB changes or account properties need refresh
Gatekeeper gave us the goahead. Refreshing account %{public}@ with ID %@. Reason: %x
There's no need for us to refresh right now as there are no changes in our local database
Account "%@" (%{public}@) was told to refresh, but it is disabled for calendars. Refusing to refresh.
_refresh called for account %@. Forced:%d full:%d reason: %x
Refresh fired. Requesting lock from gatekeeper.
This account has been put in timeout by the babysitter. Failing this sync. %@
Dropping folder refresh request since a full sync is already in progress
Our gatekeeper locks were aborted while we were still waiting for a lock. What gives?
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Not even trying to discover properties because the host "%@" is probably unreachable. %@
Already holding (or waiting for) a gatekeeper lock, so skipping this property discovery request
Ignoring probe request for "%@" as we're already in the middle of a refresh
Ignoring probe request for "%@" as we already have one outstanding
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" (%{public}@) couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
Account "%@" (%{public}@) was told to refresh its collections with reason %d
Account "%@" (%{public}@) was told it is safe to refresh. Kicking off a refresh.
Account "%@" (%{public}@) is beginning to monitor these folders: %@
v8@?0
v24@?0q8@"NSError"16
MobileCalDAVGrantedDelegatesListRequest.m
Should be finished before we dealloc
v20@?0B8@"NSError"12
NOT 
CardDAViCloudDaemonAccount
com.apple.dataaccess.caldav.attachmentDownload
com.apple.dataaccess.caldav.attachmentDownload.%@
x-mac-auto-archive
v20@?0q8B16
X-ANTICIPATED-CONTENT-LENGTH
http
DAAttachmentXXXXXX
 Error was: 
MobileCalDAVAttachmentSupport.m
You can't tell us to download an attachment without providing an attachment UUID
You can't download an attachment without setting a consumer
You must provide a download instance to cancel
Didn't find an attachment UUID in the download context
webdav.beta.facebook.com
MobileCalDAVCalendarAvailabilityRequest.m
startDate: [%@] endDate: [%@], ignoredEventID: [%@], addresses: [%@], consumer: [%p], account: [%p]
GREGORIAN
GROUP
INDIVIDUAL
RESOURCE
ROOM
UNKNOWN
MobileCalDAVDirectorySearch.m
terms: [%@], recordTypes: [%@] resultLimit: [%lu] consumer: [%p], account: [%p]
v24@?0@"NSString"8^B16
v24@?0@"NSString"8@"NSString"16
@"CoreDAVItem"12@?0i8
users
locations
groups
resources
v24@?0@"CoreDAVResponseItem"8^B16
MobileCalDAVUpdateGrantedDelegatePermissionRequest.m
v16@?0@"DACalDAVOfficeHoursRequest"8
@"CoreDAVTaskGroup"32@?0@"<CoreDAVAccountInfoProvider>"8@"NSURL"16^@24
v24@?0@"CoreDAVTaskGroup"8^@16
MobileCalDAVGroupExpansion.m
equals
anyof
test
MobileCalDAVSharingSupport.m
@"CoreDAVTaskGroup"16@?0^v8
accept
decline
You can't tell us to respond to a calendar share request without providing a calendar ID
You can't respond to a calendar share without setting a consumer
You must provide a share instance to cancel
com.me.
com.apple.calendar.
com.icloud.
CalDAVRefresh
retry-after
CalDiagStore
CalDiagSyncError
CalDiagServerVersion
B16@?0^{__CFArray=}8
Starting
Blocking
have
do not have
calendars for 
CalDAVValidityCheck
CalDAVProbe
com.apple.dataaccess.caldav.ProbeComplete
success
host
@"NSDictionary"8@?0
CalDiagPush
DAAPSTokenURL
<rdar://problem/37173724>. Consumer class: [%@]
CalDAVAgent
DAPreferredDaysToSyncDidChangeObserver
DAValidityCheckConsumer
NSObject
GrantedDelegatesListSupport
CalendarAvailabilitySupport
MobileCalDAVGrantedDelegatesListRequest
MobileCalDAViCloudDaemonAccount
CalDAVGetToFileWithProgressTask
MobileCalDAVAttachmentDownloader
DADataclassLockWatcher
CoreDAVTaskDelegate
MobileCalDAVDownloadContext
AttachmentSupport
MobileCalDAVGenericAccountInfoProvider
CoreDAVAccountInfoProvider
MobileCalDAVFacebookDaemonAccount
MobileCalDAVCalendarAvailabilityRequest
MobileCalDAVDirectorySearch
MobileCalDAVUpdateGrantedDelegatePermissionRequest
CalendarDirectorySearchSupport
OfficeHoursRequest
DACalDAVOfficeHoursRequest
GroupExpansionSupport
MobileCalDAVGroupExpansion
MobileCalDAVSharingResponse
CalDAVCalendarPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
SharingSupport
MobileCalDAVDaemonAccount
DARefreshManagerDelegate
DABabysittable
UpdateGrantedDelegatePermissionSupport
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
@24@0:8@16
v24@0:8@?16
v24@0:8@16
v24@0:8B16B20
v36@0:8@16q24B32
@56@0:8@16@24@32@40@48
@28@0:8@16B24
@32@0:8@16@24
v32@0:8@16@24
@"<DAEventsGrantedDelegatesListResponseConsumer>"
@"MobileCalDAVDaemonAccount"
@"DACoreDAVTaskManager"
@"CalDAVGetGrantedDelegatesTaskGroup"
v20@0:8B16
v24@0:8q16
q16@0:8
@"NSString"
v40@0:8@16@24@32
@"MobileCalDAVAttachmentDownloader"
v32@0:8@"CoreDAVTask"16@"NSError"24
@"NSHashTable"
@"NSURL"
@"MobileCalDAVGenericAccountInfoProvider"
@"<DAEventsAttachmentDownloadConsumer>"
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8d16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
@24@0:8^v16
B24@0:8^v16
@64@0:8@16@24@32@40@48@56
@"NSDate"
@"NSArray"
@"<DAEventsCalendarAvailabilityResponseConsumer>"
@56@0:8@16@24Q32@40@48
@"NSSet"
@"<DAEventsCalendarDirectorySearchResponseConsumer>"
@40@0:8@16@24@32
@"DAEGrantedDelegate"
@"<DAEventsUpdateGrantedDelegatePermissionResponseConsumer>"
@"CalDAVUpdateGrantedDelegatesTaskGroup"
@48@0:8@16@24Q32@40
@32@0:8@16^@24
@40@0:8@16@24^@32
@40@0:8@16^@24@?32
v32@0:8@?16@?24
@"CoreDAVTaskGroup"
@"<DAEventsOfficeHoursRequestResponseConsumer>"
@"<DAEventsGroupExpansionResponseConsumer>"
@"NSMutableDictionary"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v32@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVContainer"16
v24@0:8@"<CalDAVCalendar>"16
v32@0:8@"NSError"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVCalendarPropertyRefreshOperation"16
@32@0:8q16^v24
@"<DAEventsCalendarSharingResponseConsumer>"
@40@0:8@16q24@32
i24@0:8@16
i20@0:8i16
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
v56@0:8@16@24@32B40B44@48
B32@0:8^v16^?24
v20@0:8i16
i16@0:8
@"CalDAVAgent"
@"<DAValidityCheckConsumer>"
@"NSMutableArray"
@"NSMutableSet"
@"CoreDAVOptionsTask"
@"NSTimer"
T@"NSHashTable",R,N,V_consumers
APSEnv
_attachmentSize
APSTopic
_attachmentUUID
CDVRawPath
_holdingDiscoveryGatekeeperLock
CalTemporaryDirectoryAppropriateForURL:
_parseResponse:
T#,R
_shareResponses
T@"<DAEventsCalendarSharingResponseConsumer>",W,N,V_consumer
_useSSL
T@"CalDAVAgent",W,N,V_consumer
activeModalTask
T@"CoreDAVTaskGroup",&,N,V_currentOperation
attachmentURL:matchesServerURL:
T@"DATrustHandler",R,N
cancelOfficeHoursRequestWithID:
T@"MobileCalDAVDaemonAccount",R,W,N,V_account
containsObject:
T@"NSMutableDictionary",&,N,V_attachmentDownloadsByAttachmentUUID
dealloc
T@"NSMutableDictionary",&,N,V_directorySearches
T@"NSMutableDictionary",&,N,V_shareResponses
hostWithoutPath
T@"NSMutableSet",&,N,V_groupExpansions
initWithFormat:
T@"NSString",&,N,V_calendarID
interfaceWentUp
T@"NSString",R,N,V_attachmentUUID
isExpandPropertyReportSupported
T@"NSString",R,N,V_responseID
lowercaseString
T@,R,N
payloadAsString
T@,R,N,V_searchID
pushKey
TB,N,V_fullRefresh
removeConsumer:
TB,N,V_shouldRegisterWithRefreshManager
responseHeaders
Ti,N,V_refreshReason
setDisplayName:
URLWithString:
setResultLimit:
_account
setUri:
_attachmentDownloadDidFinish:
sharedDBWatcher
_attachmentURL
startMonitoring
_availabilitySpansForFreeBusyProperties:usingCalendar:
stringByRemovingPercentEncoding
_calendarID
supportsSharing
_consumer
_continueRefresh
version
.cxx_destruct
T@"NSString",&,N,V_previousETag
APSSubscriptionURL
_attachmentType
APSTopicHasValidPrefix:
_didFinishDownloadingWithError:
CDVURLWithScheme:host:port:path:
_ignoredEventID
DAObjectForKeyCaseInsensitive:
_placeholderAccountInfoProvider
T@"<DAEventsAttachmentDownloadConsumer>",W,N,V_consumer
_updateCalendarStoreProperties:
T@"<DAEventsOfficeHoursRequestResponseConsumer>",R,W,N,V_consumer
account
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
address
T@"DACoreDAVTaskManager",R,N,V_taskManager
calendarHomeURL
T@"MobileCalDAVAttachmentDownloader",W,N,V_downloader
cancelTaskGroup
T@"NSMutableArray",&,N,V_updateGrantedDelegatePermissionRequests
context
T@"NSMutableDictionary",&,N,V_calendarAvailabilityRequests
dtstart
T@"NSMutableDictionary",&,N,V_grantedDelegatesListRequests
groupExpansions
T@"NSMutableDictionary",R,N,V_officeHoursRequests
identityPersist
T@"NSString",&,N,V_attachmentUUID
initWithStartDate:endDate:type:
T@"NSString",R,C
isAuthenticated
T@"NSString",R,N,V_requestID
isProxy
T@"NSTimer",&,N,V_optionsTimeoutTimer
numberWithBool:
T@,R,N,V_requestID
perform
TB,N,V_forcedRefresh
release
TB,N,V_safeToRefresh
renewCredential
TQ,R
URLSession:dataTask:didReceiveData:
setFullRefresh:
UTF8String
setSupportsSharingNoScheduling:
_addresses
shareResponseFinishedWithError:
_attachmentDownloadsByAttachmentUUID
shouldUseCalendarHomeSyncReport
_availabilitySpansForFreeBusyComponent:usingCalendar:
stringByAppendingPathComponent:
_calendarAvailabilityRequests
supportsPrincipalPropertySearch
_cancelOptionsTimer
tokensAreLegal:
_consumers
userAgentHeader
_convertRecordTypesToSearchTypes:
_createReplyGroupForReportingCalendarAsJunk:
_createReplyGroupForShareInviteResponse:toCalendar:
_currentOperation
_deleteSharingInvitationWithUID:
_didShowProgressDownloadedByteCount:
_directorySearches
_doRequestWithTaskGroupCreationBlock:taskGroupCompletionBlock:
_doSharingRequestResponseWithCreateReplyGroupBlock:
_downloader
_endDate
_etag
_exceededResultLimit
_fetchedOfficeHours
_fileUUID
_filterTermsForOldStyleSearch
_finishWithError:
_finished
_finishedWithError:
_finishedWithResults:error:
_forcedRefresh
_foundDuplicateCalendars:
_freeBusyLookupID
_fullRefresh
_grantedDelegate
_grantedDelegateFromCalDAVDetails:allowWrite:
_grantedDelegatesListRequests
_groupExpansions
_handleResponseForSearchTask:
_handleResponseForTask:
_hasChangesInStore:forChangesCall:
_holdingGatekeeperLock
_host
_isEnabled
_lastRetryTimeout
_localFilename
_officeHoursRequests
_optionsProbe
_optionsTimeoutTimer
_parseResponse:withAddresses:
_performNewStyleSearch
_performOldStyleSearch
_persistAccountSyncDiagnostics:withContext:completionTime:willAttemptToRetry:hitInternalRefreshTimeout:error:
_port
_previousETag
_principalPath
_probeAndSync
_reallyBeginDownload
_reallyCancelAllSearchQueries
_reallyPerformRequest
_reallyPerformSearch
_reallyPerformSearchQuery:
_reallyRespondToSharingRequestWithCreateReplyGroupBlock:
_reallySaveAttachmentDataToDatabase
_recordTypes
_refresh
_refreshReason
_requestID
_responseID
_resultLimit
_results
_safeToRefresh
_saveAttachmentDataToDatabase
_searchID
_searchType
_serverProbeTimedOut
_setupNotifications
_shouldRefreshInResponseToDBChange
_shouldRegisterWithRefreshManager
_startDate
_startOfficeHoursRequestWithConsumer:error:startRequestBlock:
_taskGroup
_taskManager
_terms
_updateGrantedDelegatePermissionRequests
_updateWatchedCollections
_validateAndSync
_validateAndSync:
_validityCheckConsumer
_waiterID
_waitingForDiscoveryGatekeeper
_waitingForGatekeeper
_watchedCollections
aa_updatePropertiesForAppleAccount:completion:
absoluteString
absoluteURL
account:isValid:validationError:
accountDescription
accountID
accountInfoProvider
accountShouldContinue:
accountSyncDiagnostics
accountWithAccountID:
addComplianceClass:
addConsumer:
addEntriesFromDictionary:
addObject:
addSyncError:
addUsernameToURL:
additionalHeaderValues
addresses
allValues
anyObject
arrayWithObjects:count:
attachmentDownloadsByAttachmentUUID
attachmentUUID
attendee
autorelease
backingAccountInfo
beginDownload
beginDownloadingAttachmentWithUUID:consumer:
calCloseDatabaseForAccountID:save:
calCollectionSetName
calDAVUserAddressForItem:
calDatabaseForAccountID:
calOpenDatabaseAsGenericClientForAccountID:
calOpenDatabaseForAccountID:clientID:
calendar
calendarAvailability
calendarAvailabilityRequestFinishedWithError:
calendarAvailabilityRequestIsGoingAway:
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequests
calendarDirectorySearchFinishedWithError:exceededResultLimit:
calendarDirectorySearchIsGoingAway:
calendarDirectorySearchReturnedResults:
calendarID
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshFoundDeletedContainerURL:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshMkCalendarSucceededForPrincipal:calendar:
calendarRefreshPropPatchFinishedWithError:forCalendar:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshWillRefreshCalendar:
calendarRefreshWillSendCalendarDeletes:
calendarUserAddresses
calendars
calscale
cancel
cancelAllAttachmentDownloads
cancelAllCalendarAvailabilityRequests
cancelAllCalendarDirectorySearches
cancelAllGrantedDelegatesListRequests
cancelAllGroupExpansions
cancelAllSharingRequests
cancelAllTasks
cancelAllUpdateGrantedDelegatePermissionRequests
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownload
cancelDownloadingInstance:error:
cancelGrantedDelegatesListRequestWithID:
cancelRefreshWithCompletion:
cancelShareResponseInstance:error:
cancelUpdateGrantedDelegatePermissionRequestWithID:
changeTrackingID
childAccountWithIdentifier:
class
clientCertificateInfoProvider
clientToken
clientTokenRequestedByServer
code
collectionSetURL
compare:
complianceClasses
components
conformsToProtocol:
consumer
consumers
contextWithAttachmentUUID:consumer:
convertToMobileCalDAVRefreshReason:
copy
copyCalStore
copyStorageSession
count
countByEnumeratingWithState:objects:count:
currentHandler
currentOperation
customConnectionProperties
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_classicPortForScheme:
da_lowercaseHexStringWithoutSpaces
da_newGUID
da_trimWhiteSpace
dataclassProperties
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultContext
defaultDAVProbeTimeout
defaultManager
delegateDidCompleteRefresh:
description
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
directorySearches
discoverInitialPropertiesWithConsumer:
discoveryTask:gotAccountInfo:error:
displayName
domain
doubleValue
downloadFinishedError:
downloadProgressDownloadedByteCount:totalByteCount:
downloader
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dtend
duration
emailAddress
enabledForDADataclass:
enumerateObjectsUsingBlock:
error
errorItem
errorWithDomain:code:userInfo:
expandCDGroup:
extractDARefreshReasonFromContext:
fbtype
fetchInterval
fetchOfficeHoursWithConsumer:error:
fileExistsAtPath:
finishCoreDAVTaskWithError:
finishWithError:
firstName
firstObject
forcedRefresh
freebusy
fullRefresh
getAppleIDSession
getDAAccount
grantedDelegatesListRequestFinishedWithResults:error:
grantedDelegatesListRequestIsGoingAway:
grantedDelegatesListRequests
groupExpansionFinishedWithResults:error:
handleAuthenticateAgainstProtectionSpace:
handleCertificateError:
handleFailureInMethod:object:file:lineNumber:description:
handleShouldUseCredentialStorage
handleTrustChallenge:completionHandler:
handleValidationError:completion:
hasMailto
hasPrefix:
hash
host
hostFromDataclassPropertiesForDataclass:
hostLikelyUnreachable:
hrefs
icsFromOfficeHours:
identifier
inboxURL
init
initForReplyWithUID:href:hostURL:summary:
initWithAccount:
initWithAccount:consumer:
initWithAccountInfoProvider:addWriteURLs:addReadURLs:removeURLs:taskManager:
initWithAccountInfoProvider:inboxURL:calendarAvailability:taskManager:
initWithAccountInfoProvider:inboxURL:taskManager:
initWithAccountInfoProvider:principalURL:taskManager:
initWithAttachmentFile:
initWithAttachmentUUID:consumer:
initWithAttachmentUUID:forAccount:
initWithBackingAccountInfo:
initWithCalendarID:consumer:account:
initWithCalendarIdentifier:
initWithCapacity:
initWithConsumer:account:
initWithDatabase:clientIdentifier:
initWithFileDescriptor:closeOnDealloc:
initWithGrantedDelegate:consumer:account:
initWithIdentifier:
initWithInvitation:acceptInvitation:atCalendarHomeURL:accountInfoProvider:taskManager:
initWithNameSpace:name:parseClass:
initWithOptions:capacity:
initWithOrganizer:originator:attendees:start:end:outboxURL:maskedUID:extendedFreeBusy:prodID:
initWithPrincipal:
initWithPrincipalPath:consumer:account:
initWithPropertiesToFind:atURL:expandedName:expandedNameSpace:
initWithPropertySearches:propertiesToFind:atURL:applyToPrincipalCollectionSet:extraAttributes:
initWithResourceURLs:accountInfoProvider:taskManager:
initWithSearchStrings:atURL:
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
initWithStartDate:endDate:ignoredEventID:addresses:consumer:account:
initWithTerms:recordTypes:resultLimit:consumer:account:
initWithURL:
initWithURL:destinationFile:
integerValue
interfaceWentDown
invalidate
isDelegateAccount
isDisabledDelegateAccount
isEnabledForDataclass:
isEqual:
isEqualToString:
isFileURL
isKindOfClass:
isMemberOfClass:
isMonitoring
isValidating
isWaitingForPassword
lastName
lastObject
lastPathComponent
length
longLongValue
mainPrincipal
monitorFoldersWithIDs:
multiStatus
mutableCopy
namespaceAndNameForWellKnownType:
needsAccountPropertyRefresh
noteFailedNetworkRequest
noteFailedNetworkRequestForTask:
noteFailedProtocolRequest
noteFailedProtocolRequestForTask:
noteHomeSetOnDifferentHost:
noteSuccessfulRequestWithNumDownloadedElements:
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteTimeSpentInNetworking:
noteTimeSpentInNetworking:forTask:
notificationCollectionURL
numberOfMatchesWithinLimits
numberWithInteger:
oauthInfoProvider
objectForKey:
objectForKeyedSubscript:
observeReachabilityWithBlock:
officeHoursFromICS:
officeHoursRequestWithID:finishedWithError:
officeHoursRequestWithID:finishedWithOfficeHours:error:
officeHoursRequestWithIDFinished:
officeHoursRequests
onBehalfOfBundleIdentifier
optionsProbe
optionsTimeoutTimer
orderedResponses
outboxURL
parentAccount
parserMappingsWithServerSupportSet:includeEmail:
password
path
pathExtension
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performGroupExpansionForPrincipalPath:consumer:
performRequest
performSearch
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permission
port
portFromDataclassPropertiesForDataclass:
preferredAddress:
preferredAddresses
preferredCalendarUserAddress
preferredDaysToSyncDidChange
preferredEventDaysToSync
preferredToDoDaysToSync
previousETag
principalPath
principalURL
progressQueue
promptUserForNewCoreDAVPasswordWithCompletionBlock:
propertySearchItemForWellKnownType:
publicDescription
pushDisabled
pushTokenForEnvironment:
rangeOfString:options:
readOnlyPrincipalDetails
readWritePrincipalDetails
reallyRefresh
recordError:forHost:
refreshActor:didCompleteWithError:
refreshCalendarProperties
refreshCollections:withReason:
refreshDidCompleteWithError:
refreshFolderListRequireChangedFolders:isUserRequested:
refreshReason
refreshWillBegin
refreshWithContext:
registerAccount:forOperationWithName:
registerConcernedCalParty:forAccountID:withChangedBlock:
registerDelegate:
registerTopic:forDelegate:inEnvironment:
registerWaiter:forDataclassLocks:completionHandler:
relativePath
relinquishLocksForWaiter:dataclasses:moreComing:
removeAllObjects
removeConcernedCalParty:forAccountID:
removeObject:
removeObjectForKey:
reportAsJunk
reportShareRequestAsJunkForCalendar:consumer:
requestAgentStopMonitoringWithCompletionBlock:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
requestGrantedDelegatesListWithConsumer:
requestID
respondToShareRequestForCalendar:withResponse:consumer:
respondToSharingRequestWithResponse:
respondsToSelector:
responseID
responseWithCalendarID:consumer:account:
responses
resultFromCalDAVPrincipalResult:
resultFromResponse:
resultType
retain
retainCount
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
safeToRefresh
saveAccountProperties
saveAccountSync:
savePush:
saveVerifiedAccount:withCompletionHandler:
saveXpcActivity:
scheduleIdentifier
scheduleResponse
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheme
searchID
searchPropertySet
searchQuery:finishedWithError:
searchString
self
serverComplianceClasses
serverHeader
serverRoot
serverTokenRegistrationURL
serverVersion
setAccountInfoProvider:
setAccountProperty:forKey:
setAttachmentDownloadsByAttachmentUUID:
setAttachmentUUID:
setAuthenticated:
setCalendarAvailabilityRequests:
setCalendarID:
setChangeTracker:
setCode:
setCompletionBlock:
setConsumer:
setCurrentOperation:
setDelegate:
setDirectorySearches:
setDomain:
setDownloader:
setEndTime:
setEndpointReceived:
setFetchPrincipalDetails:
setFirstName:
setForcedRefresh:
setGrantedDelegatesListRequests:
setGroupExpansions:
setHitInternalRefreshTimeout:
setHost:
setIsCalendarsOnly:
setIsForced:
setIsMonitoring:
setIsWaitingForPassword:
setLastName:
setMatch:
setMatchTypeAttribute:
setNeedsDefaultAllDayAlarmUpdate:
setNeedsDefaultTimedAlarmUpdate:
setNewStyleSearchTypeFromRecordTypes
setObject:forKey:
setObject:forKeyedSubscript:
setOfficeHours:withConsumer:error:
setOptionsProbe:
setOptionsTimeoutTimer:
setPermission:
setPort:
setPreferredAddress:
setPreferredEventDaysToSync:
setPreferredToDoDaysToSync:
setPreferredUserAddress:
setPreviousETag:
setPrincipalPath:
setRefreshReason:
setSafeToRefresh:
setSearchType:
setServerHeader:
setServerSupportsExpandPropertyReport:
setServerVersion:
setShareResponses:
setShouldDoInitialAutodiscovery:
setShouldRegisterWithRefreshManager:
setShouldUpdatePushDelegate:
setShouldUseOpportunisticSockets:
setSourceDisplayName:
setSourceExternalIdentifier:
setSourceIsDelegateAccount:
setSourceIsEnabled:
setStartTime:
setSubscribedCalendarsChanged:
setSupportedCalendarComponentSets:
setSupportsAutoSchedule:
setSupportsCalendarProxy:
setSupportsExtendedCalendarQuery:
setSupportsInboxAvailability:
setSupportsManagedAttachments:
setSupportsManagedSubscriptionCalendars:
setSupportsParticipantRoles:
setSupportsPrincipalPropertySearch:
setSupportsPrivateComments:
setSupportsPrivateEvents:
setSupportsRequestCompression:
setSupportsSharing:
setSupportsSubscriptionCalendars:
setSupportsSubscriptionMirroring:
setSupportsTimeRangeFilter:
setSupportsTimeRangeFilterOnInbox:
setSupportsTimeRangeFilterWithoutEndDate:
setSyncWhenReachable:
setTimeZone:
setType:
setUpdateGrantedDelegatePermissionRequests:
setUseSSL:
setValue:forKey:
setVersion:
setWasDueToPush:
setWasRequestedByUser:
setWasUserInitiated:
setWasUserRequested:
setWillAttemptToRetry:
setWithArray:
setWithObject:
shareResponseIsGoingAway:
shareResponses
sharedBabysitter
sharedGateKeeper
sharedInstance
sharedManager
shouldAutodiscoverAccountProperties
shouldCompressRequests
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldHandleHTTPCookiesForURL:
shouldRegisterWithRefreshManager
shouldRetry
shouldRetryUnauthorizedTask:
shouldSendClientInfoHeaderForURL:
shouldTryRenewingCredential
shouldTurnModalOnBadPassword
shouldUpdatePushDelegate
shouldUseOpportunisticSockets
shutdown
simulateCrashWithMessage:
start
startFetchOfficeHoursRequest
startSetOfficeHoursRequest:
startTaskGroup
startTime
stateString
stopObservingReachability
stringByDeletingPathExtension
stringRemovingMailto
stringWithFormat:
stringWithUTF8String:
submitIndependentCoreDAVTask:
submitIndependentTask:
submitQueuedCoreDAVTask:
subscribedCalendarsChanged
successfulICS
successfulPropertiesToValues
successfulValueForNameSpace:elementName:
superclass
supportedCalendarComponentSets
supportsAuthentication
supportsAutoSchedule
supportsCalendarProxy
supportsCalendarUserSearch
supportsExtendedCalendarQuery
supportsFreebusy
supportsInboxAvailability
supportsManagedAttachments
supportsManagedSubscriptionCalendars
supportsParticipantRoles
supportsPrivateComments
supportsPrivateEvents
supportsReminders
supportsRequestCompression
supportsSharingNoScheduling
supportsSubscriptionCalendars
supportsSubscriptionMirroring
supportsTimeRangeFilter
supportsTimeRangeFilterOnInbox
supportsTimeRangeFilterWithoutEndDate
syncEndedWithError:
syncFolderIDs:forDataclasses:isUserRequested:
syncStarted
task:didFinishWithError:
taskGroup:didFinishWithError:
taskManager
timeInterval
timeZoneWithName:
title
totalBytesReceived
transactionId
trustHandler
type
unregisterAccount:forOperationWithName:
unregisterDelegate:
unregisterTopic:forDelegate:inEnvironment:
unregisterWaiterForDataclassLocks:
updateGrantedDelegatePermission:consumer:
updateGrantedDelegatePermissionFinishedWithError:
updateGrantedDelegatePermissionRequestIsGoingAway:
updateGrantedDelegatePermissionRequests
useSSL
useSSLFromDataclassPropertiesForDataclass:
useThunderhillBetaServers
user
userInfo
username
value
waiterID
wasDueToPush
wasUserRequested
watchedCollections
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
zone
Account %{public}@ is a disabled delegate account, so we're not going to refresh it
Account "%@" is waiting for a password, so we're going to ignore this refresh request
Account doesn't have a principal URL. Running autodiscovery.
Account "%@" (%{public}@) is refreshing in response to a calendar database change
Registering %p for database change notifications
Calendar database changed. Refreshing account  "%@" (%{public}@)
Validation for account "%@" was cancelled, so we're not going to save the account properties we just discovered. Better luck next time.
Got a password from the user. Attempting autodiscovery again for "%@"
Account "%@" can't figure out its principalPath, and we couldn't get a password from the user 
Account "%@" can't figure out its principalPath. 
We'll refresh if we find a better network connection.
CalDAV has started monitoring for the account "%@"
reachability indicates that the network is reachable.  We're going to retry our folder sync.
Account %{public}@ is a disabled delegate account, so we're not going to refresh it.
The CalDAV agent was told to stop monitoring.
Unregistered %p for database change notifications
Refresh completed with this error: %@
We encountered a network error when refreshing. Scheduling a refresh for when the network reachability changes
Account "%@" was told to refresh its folder list
Account "%@" was told to sync the folders %@
Refreshing account "%@" because the days to sync setting changed
Hack to keep %@ from getting released too early
Starting GetGrantedDelegatesTaskGroup: [%@]
[%@] finished with error %@
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
The gatekeeper lock has been granted. Beginning save of attachment %@
Couldn't get an attachment to set our downloaded file on
Couldn't save attachment file in the database for attachment %@
Attachment has been saved. Releasing gatekeeper lock
DATransaction starting, ID: %@
Requesting gatekeeper lock to save attachment %@
The downloader's gatekeeper locks were aborted while it was waiting for a lock. Bummer.
Downloader %@ was told to save the attachment twice. Ignoring the second request
The attachment at %@ hasn't been modified since we last saw it.
Couldn't download the attachment at %@: %@
Finished downloading the file at %@. Saving to the database.
etag for attachment on the server is %@. Our etag is %@
Downloading attachment of size %lld
Acquired DBLock to download attachment.
Couldn't get a gatekeeper lock in order to download attachment.
We were told to download the attachment with UUID %@ but that attachment doesn't have a URL. We can't do anything
Refusing to download the attachment with URL %@ because it isn't http or https
Couldn't create a temporary file with the format %s
Downloading attachment at %@ to %@
Notifying consumers of progress: %lld/%lld
Done downloading attachment %@.%@%@
Hack to get %@ retained
Starting new attachment download for consumer %p and attachment UUID %@
Cancelling new attachment download for consumer %p and attachment UUID %@
Cancelling All attachment downloads
Calendar scale unsupported: [%@].  Will not use iCalendar document in free/busy response: [%@]
No availability spans generated for component: [%@]
No attendee found on free/busy component [%@].  Will not save free/busy spans.
Free/busy window start date: [%@] end date: [%@].  Component: [%@]
No free/busy properties found.  Counting entire period as free.  Component: [%@]
No spans found in properties: [%@]
No spans generated.  The entire window from [%@] to [%@] will be counted as 'unknown.'
Period not valid.  Start: [%@]  End: [%@] Duration: [%@].  Property: [%@]
Could not generate start and end date for period: [%@].  Property: [%@]
The generated start date is after the generated end date.  Property: [%@]
The following principal indicates that free/busy is not supported, so no request will be sent: [%@]
Calendar availability (free/busy) task complete: [%@].  Error: [%@]
Starting calendar availability (free/busy) task: [%@]
New-style search (%@) not supported.  Falling back to old-style search (%@).
Removing calendar directory search term because it is less than [%lu] characters in length: [%@]
Removing remaining calendar directory search term because it is less than [%lu] characters in length: [%@]
After filtering calendar directory search terms, none are left.  Will not proceed with search.
Starting calendar search task: [%@]
Calendar directory search terms are not legal.  Will not proceed with search.
Calendar search task complete: [%@].  Error: [%@]
Number of matches exceeded the limit of: [%lu]
Encountered result with displayName: [%@]
Unexpected parsing of calendar-user-address-set: %@
No href items found for calendar-user-address-set: [%@]
Found calendar user address: [%@]
Unable to parse user address: [%@]
Calendar user type: [%@]
Known calendar user type encountered but not handled: [%@]
Unrecognized calendar user type encountered during directory search: [%@]
Record type: [%@]
Unrecognized record type encountered during directory search: [%@]
Starting UpdateGrantedDelegatesTaskGroup: [%@]
Error fetching office hours for account %@: %@
Discovered principal path %@ from address %@
Calendar group expansion complete: [%@].  Error: [%@]
Done refreshing calendars. Saving the database
Delete task at %@ finished with error %@
Couldn't get an external id from the invite notification with uid %@
Couldn't find a sharing invite notification in the database with uid %@
Couldn't get a calendar store to delete the calendar sharing invitation from
Didn't send a delete for the sharing invitation with uid %@
Reply to shared calendar invitation task group %@ finished with error %@
Waiting on the gatekeeper before responding to a calendar share request
Sending shared calendar invite %@ for invite to "%@" of with uid %@ at URL %@
Releasing gatekeeper lock
MobileCalDAVSharingResponse %p finished with error %@
MobileCalDAVDaemonAccount %p starting up.
MobileCalDAVDaemonAccount %p going away
Cancelling CalDAV refresh.
Cancel complete. Unregistering ourself as a gatekeeper waiter
Updating watched collections for %luu calendars
Push key for calendar "%@" is %@
Refresh complete. Releasing gatekeeper lock and notifying PersistentConnection
Notifying consumer about our refresh completion
Refusing to register for the topic "%@" because it has an invalid prefix.
The server returned precondition failure to our bulk upload. Retrying in a bit.
The server returned a 503 error and told us to try again in %f seconds
We'll retry again after %f seconds
We've already backed off for 7 minutes. Giving up and retrying again at our regularly scheduled time
Received a success response from server while account is not marked as authenticated. Set isAuthenticated flag and save account %@
Saving account properties to pick up on new subscribed calendars
Saving calendar diagnostics
Dropping search query "%@" because the agent is shut(ting) down.
Found event changes for account "%@" (%{public}@)
Found task changes for account "%@" (%{public}@)
Found alarm changes for account "%@" (%{public}@)
Found attendee changes for account "%@" (%{public}@)
Found attachment changes for account "%@" (%{public}@)
Found recurrence changes for account "%@" (%{public}@)
Found calendar changes for account "%@" (%{public}@)
Found notification changes for account "%@" (%{public}@)
Found sharee changes for account "%@"
Account Properties Need to Be Refreshed. Allowing Refresh to Continue..
[account %@] %@ Account Refresh as we %@ local DB changes or account properties need refresh
Gatekeeper gave us the goahead. Refreshing account %{public}@ with ID %@. Reason: %x
There's no need for us to refresh right now as there are no changes in our local database
Account "%@" (%{public}@) was told to refresh, but it is disabled for calendars. Refusing to refresh.
_refresh called for account %@. Forced:%d full:%d reason: %x
Refresh fired. Requesting lock from gatekeeper.
This account has been put in timeout by the babysitter. Failing this sync. %@
Dropping folder refresh request since a full sync is already in progress
Our gatekeeper locks were aborted while we were still waiting for a lock. What gives?
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Not even trying to discover properties because the host "%@" is probably unreachable. %@
Already holding (or waiting for) a gatekeeper lock, so skipping this property discovery request
Ignoring probe request for "%@" as we're already in the middle of a refresh
Ignoring probe request for "%@" as we already have one outstanding
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" (%{public}@) couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
Account "%@" (%{public}@) was told to refresh its collections with reason %d
Account "%@" (%{public}@) was told it is safe to refresh. Kicking off a refresh.
Account "%@" (%{public}@) is beginning to monitor these folders: %@
v8@?0
v24@?0q8@"NSError"16
MobileCalDAVGrantedDelegatesListRequest.m
Should be finished before we dealloc
v20@?0B8@"NSError"12
NOT 
CardDAViCloudDaemonAccount
com.apple.dataaccess.caldav.attachmentDownload
com.apple.dataaccess.caldav.attachmentDownload.%@
x-mac-auto-archive
v20@?0q8B16
X-ANTICIPATED-CONTENT-LENGTH
http
DAAttachmentXXXXXX
 Error was: 
MobileCalDAVAttachmentSupport.m
You can't tell us to download an attachment without providing an attachment UUID
You can't download an attachment without setting a consumer
You must provide a download instance to cancel
Didn't find an attachment UUID in the download context
webdav.beta.facebook.com
MobileCalDAVCalendarAvailabilityRequest.m
startDate: [%@] endDate: [%@], ignoredEventID: [%@], addresses: [%@], consumer: [%p], account: [%p]
GREGORIAN
GROUP
INDIVIDUAL
RESOURCE
ROOM
UNKNOWN
MobileCalDAVDirectorySearch.m
terms: [%@], recordTypes: [%@] resultLimit: [%lu] consumer: [%p], account: [%p]
v24@?0@"NSString"8^B16
v24@?0@"NSString"8@"NSString"16
@"CoreDAVItem"12@?0i8
users
locations
groups
resources
v24@?0@"CoreDAVResponseItem"8^B16
MobileCalDAVUpdateGrantedDelegatePermissionRequest.m
v16@?0@"DACalDAVOfficeHoursRequest"8
@"CoreDAVTaskGroup"32@?0@"<CoreDAVAccountInfoProvider>"8@"NSURL"16^@24
v24@?0@"CoreDAVTaskGroup"8^@16
MobileCalDAVGroupExpansion.m
equals
anyof
test
MobileCalDAVSharingSupport.m
@"CoreDAVTaskGroup"16@?0^v8
accept
decline
You can't tell us to respond to a calendar share request without providing a calendar ID
You can't respond to a calendar share without setting a consumer
You must provide a share instance to cancel
com.me.
com.apple.calendar.
com.icloud.
CalDAVRefresh
retry-after
CalDiagStore
CalDiagSyncError
CalDiagServerVersion
B16@?0^{__CFArray=}8
Starting
Blocking
have
do not have
calendars for 
CalDAVValidityCheck
CalDAVProbe
com.apple.dataaccess.caldav.ProbeComplete
success
host
@"NSDictionary"8@?0
CalDiagPush
DAAPSTokenURL
<rdar://problem/37173724>. Consumer class: [%@]
CalDAVAgent
DAPreferredDaysToSyncDidChangeObserver
DAValidityCheckConsumer
NSObject
GrantedDelegatesListSupport
CalendarAvailabilitySupport
MobileCalDAVGrantedDelegatesListRequest
MobileCalDAViCloudDaemonAccount
CalDAVGetToFileWithProgressTask
MobileCalDAVAttachmentDownloader
DADataclassLockWatcher
CoreDAVTaskDelegate
MobileCalDAVDownloadContext
AttachmentSupport
MobileCalDAVGenericAccountInfoProvider
CoreDAVAccountInfoProvider
MobileCalDAVFacebookDaemonAccount
MobileCalDAVCalendarAvailabilityRequest
MobileCalDAVDirectorySearch
MobileCalDAVUpdateGrantedDelegatePermissionRequest
CalendarDirectorySearchSupport
OfficeHoursRequest
DACalDAVOfficeHoursRequest
GroupExpansionSupport
MobileCalDAVGroupExpansion
MobileCalDAVSharingResponse
CalDAVCalendarPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
SharingSupport
MobileCalDAVDaemonAccount
DARefreshManagerDelegate
DABabysittable
UpdateGrantedDelegatePermissionSupport
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
@24@0:8@16
v24@0:8@?16
v24@0:8@16
v24@0:8B16B20
v36@0:8@16q24B32
@56@0:8@16@24@32@40@48
@28@0:8@16B24
@32@0:8@16@24
v32@0:8@16@24
@"<DAEventsGrantedDelegatesListResponseConsumer>"
@"MobileCalDAVDaemonAccount"
@"DACoreDAVTaskManager"
@"CalDAVGetGrantedDelegatesTaskGroup"
v20@0:8B16
v24@0:8q16
q16@0:8
@"NSString"
v40@0:8@16@24@32
@"MobileCalDAVAttachmentDownloader"
v32@0:8@"CoreDAVTask"16@"NSError"24
@"NSHashTable"
@"NSURL"
@"MobileCalDAVGenericAccountInfoProvider"
@"<DAEventsAttachmentDownloadConsumer>"
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8d16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
@24@0:8^v16
B24@0:8^v16
@64@0:8@16@24@32@40@48@56
@"NSDate"
@"NSArray"
@"<DAEventsCalendarAvailabilityResponseConsumer>"
@56@0:8@16@24Q32@40@48
@"NSSet"
@"<DAEventsCalendarDirectorySearchResponseConsumer>"
@40@0:8@16@24@32
@"DAEGrantedDelegate"
@"<DAEventsUpdateGrantedDelegatePermissionResponseConsumer>"
@"CalDAVUpdateGrantedDelegatesTaskGroup"
@48@0:8@16@24Q32@40
@32@0:8@16^@24
@40@0:8@16@24^@32
@40@0:8@16^@24@?32
v32@0:8@?16@?24
@"CoreDAVTaskGroup"
@"<DAEventsOfficeHoursRequestResponseConsumer>"
@"<DAEventsGroupExpansionResponseConsumer>"
@"NSMutableDictionary"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v32@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVContainer"16
v24@0:8@"<CalDAVCalendar>"16
v32@0:8@"NSError"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVCalendarPropertyRefreshOperation"16
@32@0:8q16^v24
@"<DAEventsCalendarSharingResponseConsumer>"
@40@0:8@16q24@32
i24@0:8@16
i20@0:8i16
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
v56@0:8@16@24@32B40B44@48
B32@0:8^v16^?24
v20@0:8i16
i16@0:8
@"CalDAVAgent"
@"<DAValidityCheckConsumer>"
@"NSMutableArray"
@"NSMutableSet"
@"CoreDAVOptionsTask"
@"NSTimer"
