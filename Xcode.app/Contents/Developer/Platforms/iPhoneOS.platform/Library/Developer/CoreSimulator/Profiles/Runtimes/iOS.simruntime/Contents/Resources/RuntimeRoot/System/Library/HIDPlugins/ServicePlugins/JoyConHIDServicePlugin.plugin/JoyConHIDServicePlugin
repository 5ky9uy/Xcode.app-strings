v8@?0
com.apple.gamecontroller
com.apple.GameController.HID
com.apple.GameController.gamecontrollerd.driver
com.apple.gamecontroller.serviceplugin
Transport
isVirtual
Bluetooth
BluetoothLowEnergy
SerialNumber
GCGamepadHIDServicePlugin
BatteryCapacity
IsPowerSupplyConnected
ServicePluginDebug
PluginName
cancelHandler
dispatchQueue
activated
clientAdded
GameControllerPointer
EventType
IOService
ReportDescriptor
PhysicalDeviceUniqueID
ProductID
VendorID
Product
GameControllerType
 - will disconnect if permitted
_index
_name
_features
_frequency
_amplitude
GCHapticMotor - %@(%d) f=%f a=%f
<%@ %lu (%@), i=%f s=%f (started at %f)>
transient
continuous
type
identifier
stopped
startTime
intensity
sharpness
JoyCon
JoyConHIDServicePlugin
Manufacturer
Nintendo
JoyConSetupState
JoyConQuirks
JoyConControllerType
JoyConFirmwareVersion
JoyConBodyColorInfo
JoyConButtonsColorInfo
JoyConCalibrationInfo
JoyConLowPowerSetting
JoyConInputMode
JoyConPlayerLights
Type
FirmwareVersion
BodyColor
ButtonsColor
JoyConProperties
JoyConLeftThumbstickNoiseBuffer
JoyConRightThumbstickNoiseBuffer
JoyConPendingSubcommands
@"NSDictionary"20@?0{?={?=SS}{?={?=SS}{?=SS}}}8
x.last
y.last
x.min
x.max
y.min
y.max
LeftStick
RightStick
DetectedInputMode
JoyConStatistics
Left
Right
valid
noise_buffer
outer_deadzone
Stick
Factory
User
Parameters
v20@?0B8@"NSError"12
v24@?0@"NSData"8@"NSError"16
v24@?0r^{?=SCC[6C]CC}8@"NSError"16
v48@?0@"HIDDevice"8Q16q24q32@"NSData"40
Error sending report.
Received reply for a different sub-command [%#x].
Try again.
Device rejected sub-command.
Device did not respond to sub-command.
Device not active.
Sub-command [%#x] with length [%zd bytes] > maxSubcommandLength [%zd bytes].
Too many pending sub-commands.
Payload for sub-command [%#x] response has length [%zu bytes], which is less than the expected length [%zu bytes].
Requesting SPI flash read with length [%zd bytes] > MAX_READ_SIZE [%zd bytes].
Received reply for a different read SPI flash request: address = %#.4x, length = %u.
Left (Lower)
Left (Higher)
Right (Lower)
Right (Higher)
Joy-Con (L)
Joy-Con (R)
Pro Controller
NES Controller (L)
NES Controller (R)
SNES Controller
green
blue
STANDARD-FULL
center
unknown1
unknown2
inner_dead_zone
unknown4
unknown5
unknown6
unknown7
unknown8
unknown9
unknown10
unknown11
unknown12
ON-SOLID
ON-FLASH
JoyConErrorDomain
GCGameIntentServiceClientInterface
GCGameIntentServiceServerInterface
GCGamepadHIDServicePlugin
_GCDriverClientInterface
_GCDriverClientHapticInterface
GCBatteryServiceServerInterface
HIDServicePlugin
NSObject
GCHIDXPCInterface
GCHapticMotor
NSCopying
NSSecureCoding
NSCoding
_GCHapticEvent
GCNintendoJoyConFusionGestureServiceClientInterface
GCNintendoJoyConFusionGestureServiceServerInterface
GCAdaptiveTriggersServiceClientInterface
GCAdaptiveTriggersServiceServerInterface
JoyConHIDServicePlugin
GCMotionServiceServerInterface
GCMotionServiceClientInterface
GCLightServiceClientInterface
GCLightServiceServerInterface
_GCDriverServerInterface
GCBatteryServiceClientInterface
triggerGameIntentWithEvent:
interfaceWithProtocol:
setEnableGlobalGameControllerFunctionality:
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
invalidate
remoteObjectProxy
driverCheckIn
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
resume
init
boolValue
isEqualToString:
defaultIdleTimeoutDuration
scheduleIdleTimer
defaultLeftThumbstickNoiseBuffer
defaultRightThumbstickNoiseBuffer
defaultHapticDispatchFrequency
defaultHapticMotors
defaultLeftThumbstickDeadzoneRadius
defaultLeftAxisSnapRadius
defaultRightThumbstickDeadzoneRadius
defaultRightAxisSnapRadius
createHIDDeviceForService:
open
isBluetoothClassic
createVirtualHIDDeviceForBattery
setupRawReportHandling
initGameControllerDaemonXPC
stringWithCString:encoding:
dealloc
initWithInt:
initWithBool:
setObject:forKeyedSubscript:
numberWithBool:
propertyForKey:client:
propertyForKey:
device
setProperty:forKey:
objectForKeyedSubscript:
unsignedIntValue
initWithType:timestamp:senderID:
setCancelHandler:
activate
cancel
close
setDispatchQueue:
initWithService:
cStringUsingEncoding:
shouldCreateBatteryDevice
dictionary
numberWithUnsignedLongLong:
initWithProperties:
updateBattery:isCharging:
updateClientBattery
dataWithBytesNoCopy:length:freeWhenDone:
handleReport:error:
updateIdleState
isIdle
shouldDisconnectWhenIdle
disconnect
lastEventTime
timestamp
type
dispatchEvent:
dispatchEvent:updateLastEventTime:
createEvent:timestamp:
setIntegerValue:forField:
setDoubleValue:forField:
applyDeadzone:axisSnapRadius:input:
isTwoAxisInputIdle:prevInput:noiseBuffer:
hapticMotors
countByEnumeratingWithState:objects:count:
frequency
features
amplitude
queuedTransients
count
setFrequency:
setAmplitude:
numberOfTimesToSendZeroHapticReport
dispatchHapticEvent
index
objectAtIndex:
applyValuesFrom:
isAnyHapticMotorEnabled
stopHaptics
array
initWithIndex:name:features:frequency:amplitude:
updateHapticMotor:
enqueueHapticTransientEvent:
batteryReport
matchService:options:score:
setHapticMotor:frequency:amplitude:
enqueueTransient:hapticMotor:
enableHaptics
fetchDeviceRegistryIDWithReply:
connectToLightServiceWithClient:reply:
connectToAdaptiveTriggersServiceWithClient:reply:
connectToMotionServiceWithClient:reply:
connectToBatteryServiceWithClient:reply:
connectToNintendoJoyConFusionGestureServiceWithClient:reply:
connectToGameIntentServiceWithClient:reply:
connectToGenericDeviceDriverConfigurationServiceWithClient:reply:
readBatteryWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setProperty:forKey:client:
eventMatching:forClient:
setEventDispatcher:
clientNotification:added:
ping
requestServiceWithReply:
sendBatteryReport
dispatchMotionEventWithState:timestamp:
dispatchGameControllerExtendedEventWithState:timestamp:
dispatchHomeButtonEventWithValue:timestamp:
dispatchMenuButtonEventWithValue:timestamp:
dispatchOptionsButtonEventWithValue:timestamp:
dispatchShareButtonEventWithValue:timestamp:
updateHaptics:
isHapticsActive
client
setClient:
dispatcher
setDispatcher:
service
dispatchQueue
batteryUserDevice
uniqueIdentifier
isUSB
isBluetoothLE
isVirtualDevice
idleTimeoutDuration
setIdleTimeoutDuration:
leftThumbstickNoiseBuffer
setLeftThumbstickNoiseBuffer:
rightThumbstickNoiseBuffer
setRightThumbstickNoiseBuffer:
setHapticMotors:
leftThumbstickDeadzoneRadius
setLeftThumbstickDeadzoneRadius:
leftThumbstickAxisSnapRadius
setLeftThumbstickAxisSnapRadius:
rightThumbstickDeadzoneRadius
setRightThumbstickDeadzoneRadius:
rightThumbstickAxisSnapRadius
setRightThumbstickAxisSnapRadius:
.cxx_destruct
_cancelHandler
_prop
_activated
_clientAdded
_idleDispatchSource
_session
_buttonHome
_buttonMenu
_buttonOptions
_buttonShare
_gameControllerState
_gameControllerExtendedState
_motionSequenceNumber
_motionState
_hapticsActive
_pendingHapticZeroReports
_hapticDispatchFrequency
_currentHapticClipTime
_currentHapticDispatchTime
_loopHapticEvent
_hapticDispatchSource
_daemonConnection
_batteryClient
_internalQueue
_bluetoothClassic
_usb
_bluetoothLE
_virtualDevice
_service
_idleTimeoutDuration
_leftThumbstickNoiseBuffer
_rightThumbstickNoiseBuffer
_leftThumbstickDeadzoneRadius
_leftThumbstickAxisSnapRadius
_rightThumbstickDeadzoneRadius
_rightThumbstickAxisSnapRadius
_client
_dispatcher
_dispatchQueue
_device
_batteryUserDevice
_regID
_lastEventTime
_uniqueIdentifier
_batteryReport
_hapticMotors
T@"HIDConnection",W,N,V_client
T@"<HIDEventDispatcher>",W,N,V_dispatcher
TI,R,N,V_service
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"HIDDevice",R,N,V_device
T@"HIDUserDevice",R,N,V_batteryUserDevice
TQ,R,N,V_lastEventTime
T@"NSString",R,N,V_uniqueIdentifier
T^{?=CCC},R,N,V_batteryReport
bluetoothClassic
TB,R,N,GisBluetoothClassic,V_bluetoothClassic
TB,R,N,GisUSB,V_usb
bluetoothLE
TB,R,N,GisBluetoothLE,V_bluetoothLE
virtualDevice
TB,R,N,GisVirtualDevice,V_virtualDevice
Tf,N,V_idleTimeoutDuration
Tf,N,V_leftThumbstickNoiseBuffer
Tf,N,V_rightThumbstickNoiseBuffer
T@"NSArray",&,N,V_hapticMotors
Tf,N,V_leftThumbstickDeadzoneRadius
Tf,N,V_leftThumbstickAxisSnapRadius
Tf,N,V_rightThumbstickDeadzoneRadius
Tf,N,V_rightThumbstickAxisSnapRadius
initWithIndex:name:features:
initWithIndex:
encodeInteger:forKey:
encodeObject:forKey:
encodeFloat:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeFloatForKey:
allocWithZone:
name
copyWithZone:
addObject:
removeAllObjects
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithIndex:name:
drainQueuedTransients
setQueuedTransients:
_index
_frequency
_amplitude
_name
_features
_queuedTransients
T@"NSMutableArray",&,N,V_queuedTransients
T@"NSString",R,C,N,V_name
Ti,R,N,V_index
TQ,R,N,V_features
Tf,N,V_frequency
Tf,N,V_amplitude
identifier
value
valueForNoteParam:inParameters:
tokenAndParams
time
token
params
evaluateDeviceNoteParams:
eventID
initWithSyntheticCommand:
setIdentifier:
setType:
startTime
setStartTime:
intensity
setIntensity:
sharpness
setSharpness:
stopped
setStopped:
transientBeganAsContinuousEvent
setTransientBeganAsContinuousEvent:
_stopped
_transientBeganAsContinuousEvent
_identifier
_type
_startTime
_intensity
_sharpness
TQ,N,V_identifier
Tq,N,V_type
Td,N,V_startTime
Td,N,V_intensity
Td,N,V_sharpness
TB,N,V_stopped
TB,N,V_transientBeganAsContinuousEvent
decodeBoolForKey:
decodeDoubleForKey:
encodeBool:forKey:
encodeDouble:forKey:
stringWithCapacity:
appendString:
stringWithString:
uppercaseString
initWithSuiteName:
boolForKey:
dataWithBytes:length:
homeButtonLongPressGesture:
updateAdaptiveTriggerStatusWithLeftMode:leftStatus:leftArmPosition:rightMode:rightStatus:rightArmPosition:
setAdaptiveTriggerModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithStartPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithResistiveStrengths:forIndex:
setAdaptiveTriggerModeWeaponWithStartPosition:endPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeVibrationWithStartPosition:amplitude:frequency:forIndex:
setAdaptiveTriggerModeVibrationWithAmplitudes:frequency:forIndex:
setAdaptiveTriggerModeOffForIndex:
readAdaptiveTriggerStatusWithReply:
intValue
unsignedShortValue
setLowPower:
refreshDeviceInfo
refreshCalibrationData
refreshLowPowerSetting
setPlayerLights:
setInputMode:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedShort:
io_calibrationInfo:value:modify:
io_lowPowerSetting:value:modify:
io_inputMode:value:modify:
io_playerLights:value:modify:
numberWithFloat:
dictionaryWithObjects:forKeys:count:
addEntriesFromDictionary:
localizedDescription
code
bytes
length
ready
localizedRecoverySuggestion
initWithBytes:length:encoding:
handleHIDControllerPayload:withData:timestamp:
handleStandardFullPayload:withData:timestamp:
setInputReportHandler:
subdataWithRange:
currentRumbleData
addObjectsFromArray:
firstObject
setReport:reportLength:withIdentifier:forType:error:
copy
initWithDomain:code:userInfo:
initWithFormat:
setIMUEnabled:
dispatchCurrentRumbleData
arrayWithObjects:count:
homeButtonLongPressGestureEnded:
performSelectorOnMainThread:withObject:waitUntilDone:
dateWithTimeIntervalSinceNow:
homeButtonLongPressGestureBegan:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
updateSensorsActive:
readSensorsActiveWithReply:
setVibrationEnabled:
homeButtonPressed:
.cxx_construct
_setupState
_quirks
_devicePID
_deviceName
_serialNumber
_deviceInfo
_colorInfo
_calibration
_battery
_lowPowerSetting
_inputReportMode
_playerLights
_vibrationEnabled
_imuEnabled
_globalPacketNumber
_pendingSubcommands
_pendingSubcommandsCount
_outstandingSubcommand
_statistics
_gestureClient
_homeButtonLongPressGestureTimer
_homeButtonLongPressRecognizedGesture
_previousHomeButtonPressed
_motionClient
objectForKey:
objectAtIndexedSubscript:
updateLightWithRed:green:blue:
readLightWithReply:
setInterface:forSelector:argumentIndex:ofReply:
v24@0:8q16
v20@0:8B16
B36@0:8I16@20^q28
v32@0:8Q16f24f28
v32@0:8@16Q24
v16@0:8
v32@0:8@"_GCHapticEvent"16Q24
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSNumber"q>16
v32@0:8@"<GCLightServiceClientInterface>"16@?<v@?@"<GCLightServiceServerInterface>"@"NSError">24
v32@0:8@"<GCAdaptiveTriggersServiceClientInterface>"16@?<v@?@"<GCAdaptiveTriggersServiceServerInterface>"@"NSError">24
v32@0:8@"<GCMotionServiceClientInterface>"16@?<v@?@"<GCMotionServiceServerInterface>"@"NSError">24
v32@0:8@"<GCBatteryServiceClientInterface>"16@?<v@?@"<GCBatteryServiceServerInterface>"@"NSError">24
v32@0:8@"<GCNintendoJoyConFusionGestureServiceClientInterface>"16@?<v@?@"<GCNintendoJoyConFusionGestureServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGameIntentServiceClientInterface>"16@?<v@?@"<GCGameIntentServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGenericDeviceDriverConfigurationServiceClientInterface>"16@?<v@?@"<GCGenericDeviceDriverConfigurationServiceServerInterface>"@"NSError">24
v24@0:8@?<v@?CB>16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8I16
@32@0:8@16@24
B40@0:8@16@24@32
v24@0:8@16
v28@0:8@16B24
@32@0:8@"NSString"16@"HIDConnection"24
B40@0:8@16@"NSString"24@"HIDConnection"32
@"HIDEvent"32@0:8@"NSDictionary"16@"HIDConnection"24
v24@0:8@"<HIDEventDispatcher>"16
v24@0:8@?<v@?>16
B36@0:8I16@"NSDictionary"20^q28
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8@"HIDConnection"16B24
v24@0:8@?<v@?@"NSNumber">16
@28@0:8I16Q20
v32@0:8f16f20^24
B36@0:8^16^24f32
v128@0:8{?=BdddBdddBdddd}16Q120
v216@0:8{?=Q[45f]}16Q208
v28@0:8B16Q20
I16@0:8
f16@0:8
^{?=CCC}16@0:8
v20@0:8f16
@"NSNumber"
@"NSObject<OS_dispatch_source>"
^{BTSessionImpl=}
{?="directionPadUp"d"directionPadDown"d"directionPadLeft"d"directionPadRight"d"buttonA"d"buttonB"d"buttonX"d"buttonY"d"buttonL1"d"buttonR1"d"buttonL2"d"buttonR2"d"leftThumbstick""rightThumbstick""buttonL3"B"buttonR3"B"controllerType"I}
{?="mask"Q"buttons"[45f]}
{?="supportsGyro"B"gyroPitch"d"gyroYaw"d"gyroRoll"d"supportsAccelerometer"B"accelerometerX"d"accelerometerY"d"accelerometerZ"d"supportsAttitude"B"attitudeX"d"attitudeY"d"attitudeZ"d"attitudeW"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSXPCConnection"
@"<GCBatteryServiceClientInterface>"
@"NSObject<OS_dispatch_queue>"
@"HIDConnection"
@"<HIDEventDispatcher>"
@"HIDDevice"
@"HIDUserDevice"
@"NSString"
^{?=CCC}
@"NSArray"
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8i16@20Q28f36f40
@36@0:8i16@20Q28
@28@0:8i16@20
@20@0:8i16
i16@0:8
@"NSMutableArray"
{pair<bool, float>=Bf}28@0:8I16@20
v24@0:8Q16
q16@0:8
d16@0:8
v24@0:8d16
v40@0:8C16C20C24C28C32C36
v36@0:8f16f20f24f28i32
v28@0:8f16f20i24
v28@0:8@16i24
v32@0:8f16f20f24i28
v32@0:8@16f24i28
v20@0:8i16
v28@0:8@"NSArray"16i24
v32@0:8@"NSArray"16f24i28
v24@0:8@?<v@?CCCCCC>16
v24@0:8@?<v@?B>16
B36@0:8@16^@24B32
v20@0:8{?=[4C]}16
v20@0:8C16
v40@0:8q16@24Q32
{?=C(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})}16@0:8
{?="string"@"NSString""hasFecthedAtLeastOnce"B}
{?="properties"{?="firmwareVersion"S"type"C"bluetoothMAC"[6C]"unknown1"C"unknown2"C"spiColorsOverride"C}"hasFecthedAtLeastOnce"B"valid"B}
{?="bodyColor"{?="r"C"g"C"b"C}"buttonsColor"{?="r"C"g"C"b"C}"hasFecthedAtLeastOnce"B"valid"B}
{?="stick"{?="factory"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1}"user"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1"hasLeft"b1"hasRight"b1}"parameters"{?="left"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"right"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"fetchedLeft"b1"fetchedRight"b1}}"motion"{?="factory"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetchedCalibration"b1"fetchedHorizontalOffset"b1}"user"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetched"b1"hasData"b1}"coefficients"{?="accel"{?="x"f"y"f"z"f}"gyro"{?="x"f"y"f"z"f}}}}
{?="initialized"B"info"{?="charging"B"level"C}}
{?="LED"[4C]}
{PendingSubcommands="stqh_first"^{JoyConSubcommand}"stqh_last"^^{JoyConSubcommand}}
{?="subcommand"^{JoyConSubcommand}"timeout"@"NSObject<OS_dispatch_source>""requestTimestamp"Q}
{?="activateTimestamp"Q"cancelTimestamp"Q"lastInputReportTimestamp"Q"detectedInputReportMode"C"sticks"{?="left"{?="last"{?="x"S"y"S}"extents"{?="x"{?="min"S"max"S}"y"{?="min"S"max"S}}}"right"{?="last"{?="x"S"y"S}"extents"{?="x"{?="min"S"max"S}"y"{?="min"S"max"S}}}}}
@"<GCNintendoJoyConFusionGestureServiceClientInterface>"
@"NSTimer"
@"<GCMotionServiceClientInterface>"
v28@0:8f16f20f24
v24@0:8@?<v@?fff>16
v24@0:8C16B20
(knN
#BBZ
?N###DR
Connect To Daemon
Connection to com.apple.GameController.gamecontrollerd.driver invalidated
Connection to com.apple.GameController.gamecontrollerd.driver interrupted.  Attempting to re-establish.
initWithService: %d
creating HIDDevice for service %d
opening HIDDevice
registering for BTSessionCallbacks sessionEvent
dealloc
Freeing HIDDevice on %@
PropertyForKey: %@
setProperty: %@ forKey: %@
eventMatching: %@ client: %@
setEventDispatcher %@
setCancelHandler %p
calling cancel handler
activate
cancel
setDispatchQueue %p
clientNotification %@ added: %d
GCHIDLog::disconnect: unable to get BTDevice; no valid BTSession
GCHIDLog::disconnect: SUCCESS
GCHIDLog::disconnect: error code = %d
GCHIDLog::disconnect: unable to get BTDevice; error code = %d
GCHIDLog::disconnect: unable to get device address from %s; errCode = %d
creating battery device
created battery device %@ with properties %@
updateClientBattery reporting battery level %d%%
updateBatteryStats reporting battery level %d%%
scheduleIdleTimer
disconnectIfIdle disconnecting...
isIdle for %.2f seconds%@
Stopping timer...
Dispatching event...
ping
requestServiceWithReply
connectToBatteryServiceWithClient %@
BTSessionEventCallback: attached session = %p
BTSessionEventCallback: detached session = %p
BTSessionEventCallback: terminated session = %p
BTSessionEventCallback: failed session = %p
Activate
Ready
#Quirks: Found mimatched PID!
Cancel
Set Player Indicator Lights
Failed to set player inidcator lights. %{public}@
Switch To Input Mode
Switch to input mode %#x
Failed to switch input mode. %{public}@
Modify Low-power Setting
Enable low-power mode
Disable low-power mode
Failed to modify low-power setting. %{public}@
Modify IMU Enabled
Enable IMU
Disable IMU
Failed to modify IMU enabled setting. %{public}@
Modify Vibration Enabled
Enable Vibration
Disable Vibration
Failed to modify vibration enabled setting. %{public}@
Read Low-power Setting
Failed to read low-power setting. %{public}@
Read low-power setting has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Read Device Info
Failed to retrieve device info. %{public}@
Device is a '%{public}@' with f/w version %#x.
Failed to read device serial number. %{public}@
Read serial number has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read color data. %{public}@
Read body color data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Request Calibration Data
#Quirks: Suspiciously good left stick factory calibration data.
#Quirks: Suspiciously good left stick user calibration data.
#Quirks: Suspiciously good right stick factory calibration data.
#Quirks: Suspiciously good right stick user calibration data.
Failed to read stick factory calibration data. %{public}@
Read stick factory calibration data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read stick user calibration data. %{public}@
Read stick user calibration data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read left stick parameters data. %{public}@
Read left stick parameters data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read right stick parameters data. %{public}@
Read right stick parameters data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read motion calibration data. %{public}@
Read motion calibration data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Read motion horizontal offset data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Received unknown report: type = %li, reportID = %#lx, bytes = %{private}.*P
Detected input mode is now %#x
Sub-command Reply
Payload for input report [%#zx] has length [%{bytes}zu], which is less than the minimum expected length [%{bytes}zu]. Ignoring.
Sub-command reply: identifier = %#x ACK = %i, type = %i
Received a reply for sub-command [%#x].  Expected reply for [%#x].
Received an unexpected reply for sub-command [%#x].
Dispatch sub-command [%#x].
Send report: type = %li, reportID = %#lx, bytes = %{private}.*P
ACK sub-command [%#x].
NACK sub-command [%#x].
%{public}@
Enqueue sub-command [%#x].
Device Info Request
Device Info Error: %{public}@
Device Info Response: %{private}.*P
Set Input Report Mode Request: mode = %hhx
Set Input Report Mode Error: %{public}@
Set Input Report Mode Response
Set Low Power State Request: change = %hhx
Set Low Power State Error: %{public}@
Set Low Power State Response
Read SPI Flash Request: address = %#.4x, length = %{bytes}u
Read SPI Flash Error: %{public}@
Read SPI Flash Response: address = %#.4x, length = %{bytes}u, bytes = %{private}.*P
Set Player Lights Request: %c%c%c%c
Set Player Lights Error: %{public}@
Set Player Lights Response
Set IMU Enabled Request: change = %hhx
Set IMU Enabled Error: %{public}@
Set IMU Enabled Response
Set Vibration Enabled Request: change = %hhx
Set Vibration Enabled Error: %{public}@
Set Vibration Enabled Response
#GESTURE #BUG Home button gesture (bad state).
#GESTURE Home button gesture -> began.
#GESTURE Home button gesture -> ended.
#GESTURE Home button: pressed=%{BOOL}d, wasPressed=%{BOOL}d
#GESTURE Home button gesture -> cancel.
#GESTURE Home button gesture -> possible.
#GESTURE Home button gesture -> failed.
v8@?0
com.apple.gamecontroller
com.apple.GameController.HID
com.apple.GameController.gamecontrollerd.driver
com.apple.gamecontroller.serviceplugin
Transport
isVirtual
Bluetooth
BluetoothLowEnergy
SerialNumber
GCGamepadHIDServicePlugin
BatteryCapacity
IsPowerSupplyConnected
ServicePluginDebug
PluginName
cancelHandler
dispatchQueue
activated
clientAdded
GameControllerPointer
EventType
IOService
ReportDescriptor
PhysicalDeviceUniqueID
ProductID
VendorID
Product
GameControllerType
 - will disconnect if permitted
_index
_name
_features
_frequency
_amplitude
GCHapticMotor - %@(%d) f=%f a=%f
<%@ %lu (%@), i=%f s=%f (started at %f)>
transient
continuous
type
identifier
stopped
startTime
intensity
sharpness
JoyCon
JoyConHIDServicePlugin
Manufacturer
Nintendo
JoyConSetupState
JoyConQuirks
JoyConControllerType
JoyConFirmwareVersion
JoyConBodyColorInfo
JoyConButtonsColorInfo
JoyConCalibrationInfo
JoyConLowPowerSetting
JoyConInputMode
JoyConPlayerLights
Type
FirmwareVersion
BodyColor
ButtonsColor
JoyConProperties
JoyConLeftThumbstickNoiseBuffer
JoyConRightThumbstickNoiseBuffer
JoyConPendingSubcommands
@"NSDictionary"20@?0{?={?=SS}{?={?=SS}{?=SS}}}8
x.last
y.last
x.min
x.max
y.min
y.max
LeftStick
RightStick
DetectedInputMode
JoyConStatistics
Left
Right
valid
noise_buffer
outer_deadzone
Stick
Factory
User
Parameters
v20@?0B8@"NSError"12
v24@?0@"NSData"8@"NSError"16
v24@?0r^{?=SCC[6C]CC}8@"NSError"16
v48@?0@"HIDDevice"8Q16q24q32@"NSData"40
Error sending report.
Received reply for a different sub-command [%#x].
Try again.
Device rejected sub-command.
Device did not respond to sub-command.
Device not active.
Sub-command [%#x] with length [%zd bytes] > maxSubcommandLength [%zd bytes].
Too many pending sub-commands.
Payload for sub-command [%#x] response has length [%zu bytes], which is less than the expected length [%zu bytes].
Requesting SPI flash read with length [%zd bytes] > MAX_READ_SIZE [%zd bytes].
Received reply for a different read SPI flash request: address = %#.4x, length = %u.
Left (Lower)
Left (Higher)
Right (Lower)
Right (Higher)
Joy-Con (L)
Joy-Con (R)
Pro Controller
NES Controller (L)
NES Controller (R)
SNES Controller
green
blue
STANDARD-FULL
center
unknown1
unknown2
inner_dead_zone
unknown4
unknown5
unknown6
unknown7
unknown8
unknown9
unknown10
unknown11
unknown12
ON-SOLID
ON-FLASH
JoyConErrorDomain
GCGameIntentServiceClientInterface
GCGameIntentServiceServerInterface
GCGamepadHIDServicePlugin
_GCDriverClientInterface
_GCDriverClientHapticInterface
GCBatteryServiceServerInterface
HIDServicePlugin
NSObject
GCHIDXPCInterface
GCHapticMotor
NSCopying
NSSecureCoding
NSCoding
_GCHapticEvent
GCNintendoJoyConFusionGestureServiceClientInterface
GCNintendoJoyConFusionGestureServiceServerInterface
GCAdaptiveTriggersServiceClientInterface
GCAdaptiveTriggersServiceServerInterface
JoyConHIDServicePlugin
GCMotionServiceServerInterface
GCMotionServiceClientInterface
GCLightServiceClientInterface
GCLightServiceServerInterface
_GCDriverServerInterface
GCBatteryServiceClientInterface
decodeFloatForKey:
subdataWithRange:
objectForKeyedSubscript:
invalidate
encodeFloat:forKey:
unsignedIntValue
mainRunLoop
setExportedInterface:
objectForKey:
count
addEntriesFromDictionary:
dictionaryWithObjects:forKeys:count:
handleReport:error:
encodeDouble:forKey:
decodeDoubleForKey:
setDoubleValue:forField:
numberWithUnsignedChar:
cStringUsingEncoding:
setRemoteObjectInterface:
performSelectorOnMainThread:withObject:waitUntilDone:
interfaceWithProtocol:
bytes
initWithBool:
propertyForKey:
copy
objectAtIndexedSubscript:
array
dateWithTimeIntervalSinceNow:
encodeBool:forKey:
localizedRecoverySuggestion
decodeBoolForKey:
tokenAndParams
initWithFormat:
dictionary
initWithProperties:
setInvalidationHandler:
code
setProperty:forKey:
numberWithFloat:
stringWithFormat:
localizedDescription
setInterruptionHandler:
initWithFireDate:interval:target:selector:userInfo:repeats:
resume
setInterface:forSelector:argumentIndex:ofReply:
firstObject
intValue
boolValue
objectAtIndex:
token
initWithMachServiceName:options:
params
numberWithUnsignedShort:
decodeObjectOfClass:forKey:
encodeObject:forKey:
length
value
removeAllObjects
decodeIntegerForKey:
numberWithBool:
allocWithZone:
encodeInteger:forKey:
initWithDomain:code:userInfo:
dataWithBytesNoCopy:length:freeWhenDone:
addObjectsFromArray:
isEqualToString:
initWithInt:
dataWithBytes:length:
timestamp
close
unsignedShortValue
addObject:
setObject:forKeyedSubscript:
open
initWithType:timestamp:senderID:
setInputReportHandler:
setReport:reportLength:withIdentifier:forType:error:
countByEnumeratingWithState:objects:count:
arrayWithObjects:count:
setExportedObject:
setIntegerValue:forField:
addTimer:forMode:
initWithBytes:length:encoding:
time
numberWithUnsignedLongLong:
numberWithUnsignedInt:
stringWithCString:encoding:
eventID
remoteObjectProxy
triggerGameIntentWithEvent:
setEnableGlobalGameControllerFunctionality:
init
dealloc
matchService:options:score:
setHapticMotor:frequency:amplitude:
enqueueTransient:hapticMotor:
enableHaptics
fetchDeviceRegistryIDWithReply:
connectToLightServiceWithClient:reply:
connectToAdaptiveTriggersServiceWithClient:reply:
connectToMotionServiceWithClient:reply:
connectToBatteryServiceWithClient:reply:
connectToNintendoJoyConFusionGestureServiceWithClient:reply:
connectToGameIntentServiceWithClient:reply:
connectToGenericDeviceDriverConfigurationServiceWithClient:reply:
readBatteryWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithService:
propertyForKey:client:
setProperty:forKey:client:
eventMatching:forClient:
setEventDispatcher:
setCancelHandler:
activate
cancel
setDispatchQueue:
clientNotification:added:
ping
requestServiceWithReply:
initGameControllerDaemonXPC
createHIDDeviceForService:
setupRawReportHandling
disconnect
createVirtualHIDDeviceForBattery
updateClientBattery
sendBatteryReport
shouldCreateBatteryDevice
scheduleIdleTimer
updateIdleState
isIdle
shouldDisconnectWhenIdle
createEvent:timestamp:
dispatchEvent:updateLastEventTime:
dispatchEvent:
applyDeadzone:axisSnapRadius:input:
isTwoAxisInputIdle:prevInput:noiseBuffer:
dispatchMotionEventWithState:timestamp:
dispatchGameControllerExtendedEventWithState:timestamp:
dispatchHomeButtonEventWithValue:timestamp:
dispatchMenuButtonEventWithValue:timestamp:
dispatchOptionsButtonEventWithValue:timestamp:
dispatchShareButtonEventWithValue:timestamp:
isAnyHapticMotorEnabled
dispatchHapticEvent
updateHaptics:
isHapticsActive
numberOfTimesToSendZeroHapticReport
stopHaptics
updateHapticMotor:
defaultLeftThumbstickNoiseBuffer
defaultRightThumbstickNoiseBuffer
defaultIdleTimeoutDuration
defaultLeftThumbstickDeadzoneRadius
defaultRightThumbstickDeadzoneRadius
defaultLeftAxisSnapRadius
defaultRightAxisSnapRadius
defaultHapticMotors
defaultHapticDispatchFrequency
client
setClient:
dispatcher
setDispatcher:
service
dispatchQueue
device
batteryUserDevice
lastEventTime
uniqueIdentifier
batteryReport
isBluetoothClassic
isUSB
isBluetoothLE
isVirtualDevice
idleTimeoutDuration
setIdleTimeoutDuration:
leftThumbstickNoiseBuffer
setLeftThumbstickNoiseBuffer:
rightThumbstickNoiseBuffer
setRightThumbstickNoiseBuffer:
hapticMotors
setHapticMotors:
leftThumbstickDeadzoneRadius
setLeftThumbstickDeadzoneRadius:
leftThumbstickAxisSnapRadius
setLeftThumbstickAxisSnapRadius:
rightThumbstickDeadzoneRadius
setRightThumbstickDeadzoneRadius:
rightThumbstickAxisSnapRadius
setRightThumbstickAxisSnapRadius:
.cxx_destruct
_cancelHandler
_prop
_activated
_clientAdded
_idleDispatchSource
_session
_buttonHome
_buttonMenu
_buttonOptions
_buttonShare
_gameControllerState
_gameControllerExtendedState
_motionSequenceNumber
_motionState
_hapticsActive
_pendingHapticZeroReports
_hapticDispatchFrequency
_currentHapticClipTime
_currentHapticDispatchTime
_loopHapticEvent
_hapticDispatchSource
_daemonConnection
_batteryClient
_internalQueue
_bluetoothClassic
_usb
_bluetoothLE
_virtualDevice
_service
_idleTimeoutDuration
_leftThumbstickNoiseBuffer
_rightThumbstickNoiseBuffer
_leftThumbstickDeadzoneRadius
_leftThumbstickAxisSnapRadius
_rightThumbstickDeadzoneRadius
_rightThumbstickAxisSnapRadius
_client
_dispatcher
_dispatchQueue
_device
_batteryUserDevice
_regID
_lastEventTime
_uniqueIdentifier
_batteryReport
_hapticMotors
T@"HIDConnection",W,N,V_client
T@"<HIDEventDispatcher>",W,N,V_dispatcher
TI,R,N,V_service
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"HIDDevice",R,N,V_device
T@"HIDUserDevice",R,N,V_batteryUserDevice
TQ,R,N,V_lastEventTime
T@"NSString",R,N,V_uniqueIdentifier
T^{?=CCC},R,N,V_batteryReport
bluetoothClassic
TB,R,N,GisBluetoothClassic,V_bluetoothClassic
TB,R,N,GisUSB,V_usb
bluetoothLE
TB,R,N,GisBluetoothLE,V_bluetoothLE
virtualDevice
TB,R,N,GisVirtualDevice,V_virtualDevice
Tf,N,V_idleTimeoutDuration
Tf,N,V_leftThumbstickNoiseBuffer
Tf,N,V_rightThumbstickNoiseBuffer
T@"NSArray",&,N,V_hapticMotors
Tf,N,V_leftThumbstickDeadzoneRadius
Tf,N,V_leftThumbstickAxisSnapRadius
Tf,N,V_rightThumbstickDeadzoneRadius
Tf,N,V_rightThumbstickAxisSnapRadius
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithIndex:name:features:frequency:amplitude:
initWithIndex:name:features:
initWithIndex:name:
initWithIndex:
applyValuesFrom:
enqueueHapticTransientEvent:
drainQueuedTransients
name
index
features
frequency
setFrequency:
amplitude
setAmplitude:
queuedTransients
setQueuedTransients:
_index
_frequency
_amplitude
_name
_features
_queuedTransients
T@"NSMutableArray",&,N,V_queuedTransients
T@"NSString",R,C,N,V_name
Ti,R,N,V_index
TQ,R,N,V_features
Tf,N,V_frequency
Tf,N,V_amplitude
valueForNoteParam:inParameters:
evaluateDeviceNoteParams:
initWithSyntheticCommand:
identifier
setIdentifier:
type
setType:
startTime
setStartTime:
intensity
setIntensity:
sharpness
setSharpness:
stopped
setStopped:
transientBeganAsContinuousEvent
setTransientBeganAsContinuousEvent:
_stopped
_transientBeganAsContinuousEvent
_identifier
_type
_startTime
_intensity
_sharpness
TQ,N,V_identifier
Tq,N,V_type
Td,N,V_startTime
Td,N,V_intensity
Td,N,V_sharpness
TB,N,V_stopped
TB,N,V_transientBeganAsContinuousEvent
homeButtonLongPressGesture:
updateAdaptiveTriggerStatusWithLeftMode:leftStatus:leftArmPosition:rightMode:rightStatus:rightArmPosition:
setAdaptiveTriggerModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithStartPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithResistiveStrengths:forIndex:
setAdaptiveTriggerModeWeaponWithStartPosition:endPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeVibrationWithStartPosition:amplitude:frequency:forIndex:
setAdaptiveTriggerModeVibrationWithAmplitudes:frequency:forIndex:
setAdaptiveTriggerModeOffForIndex:
readAdaptiveTriggerStatusWithReply:
homeButtonLongPressGestureEnded:
homeButtonLongPressGestureBegan:
updateSensorsActive:
readSensorsActiveWithReply:
ready
io_calibrationInfo:value:modify:
io_lowPowerSetting:value:modify:
io_inputMode:value:modify:
io_playerLights:value:modify:
setPlayerLights:
setInputMode:
setLowPower:
setIMUEnabled:
setVibrationEnabled:
refreshLowPowerSetting
refreshDeviceInfo
refreshCalibrationData
handleHIDControllerPayload:withData:timestamp:
handleStandardFullPayload:withData:timestamp:
dispatchCurrentRumbleData
currentRumbleData
homeButtonPressed:
.cxx_construct
_setupState
_quirks
_devicePID
_deviceName
_serialNumber
_deviceInfo
_colorInfo
_calibration
_battery
_lowPowerSetting
_inputReportMode
_playerLights
_vibrationEnabled
_imuEnabled
_globalPacketNumber
_pendingSubcommands
_pendingSubcommandsCount
_outstandingSubcommand
_statistics
_gestureClient
_homeButtonLongPressGestureTimer
_homeButtonLongPressRecognizedGesture
_previousHomeButtonPressed
_motionClient
updateLightWithRed:green:blue:
readLightWithReply:
driverCheckIn
updateBattery:isCharging:
v24@0:8q16
v20@0:8B16
B36@0:8I16@20^q28
v32@0:8Q16f24f28
v32@0:8@16Q24
v16@0:8
v32@0:8@"_GCHapticEvent"16Q24
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSNumber"q>16
v32@0:8@"<GCLightServiceClientInterface>"16@?<v@?@"<GCLightServiceServerInterface>"@"NSError">24
v32@0:8@"<GCAdaptiveTriggersServiceClientInterface>"16@?<v@?@"<GCAdaptiveTriggersServiceServerInterface>"@"NSError">24
v32@0:8@"<GCMotionServiceClientInterface>"16@?<v@?@"<GCMotionServiceServerInterface>"@"NSError">24
v32@0:8@"<GCBatteryServiceClientInterface>"16@?<v@?@"<GCBatteryServiceServerInterface>"@"NSError">24
v32@0:8@"<GCNintendoJoyConFusionGestureServiceClientInterface>"16@?<v@?@"<GCNintendoJoyConFusionGestureServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGameIntentServiceClientInterface>"16@?<v@?@"<GCGameIntentServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGenericDeviceDriverConfigurationServiceClientInterface>"16@?<v@?@"<GCGenericDeviceDriverConfigurationServiceServerInterface>"@"NSError">24
v24@0:8@?<v@?CB>16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8I16
@32@0:8@16@24
B40@0:8@16@24@32
v24@0:8@16
v28@0:8@16B24
@32@0:8@"NSString"16@"HIDConnection"24
B40@0:8@16@"NSString"24@"HIDConnection"32
@"HIDEvent"32@0:8@"NSDictionary"16@"HIDConnection"24
v24@0:8@"<HIDEventDispatcher>"16
v24@0:8@?<v@?>16
B36@0:8I16@"NSDictionary"20^q28
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8@"HIDConnection"16B24
v24@0:8@?<v@?@"NSNumber">16
@28@0:8I16Q20
v32@0:8f16f20^24
B36@0:8^16^24f32
v128@0:8{?=BdddBdddBdddd}16Q120
v216@0:8{?=Q[45f]}16Q208
v28@0:8B16Q20
I16@0:8
f16@0:8
^{?=CCC}16@0:8
v20@0:8f16
@"NSNumber"
@"NSObject<OS_dispatch_source>"
^{BTSessionImpl=}
{?="directionPadUp"d"directionPadDown"d"directionPadLeft"d"directionPadRight"d"buttonA"d"buttonB"d"buttonX"d"buttonY"d"buttonL1"d"buttonR1"d"buttonL2"d"buttonR2"d"leftThumbstick""rightThumbstick""buttonL3"B"buttonR3"B"controllerType"I}
{?="mask"Q"buttons"[45f]}
{?="supportsGyro"B"gyroPitch"d"gyroYaw"d"gyroRoll"d"supportsAccelerometer"B"accelerometerX"d"accelerometerY"d"accelerometerZ"d"supportsAttitude"B"attitudeX"d"attitudeY"d"attitudeZ"d"attitudeW"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSXPCConnection"
@"<GCBatteryServiceClientInterface>"
@"NSObject<OS_dispatch_queue>"
@"HIDConnection"
@"<HIDEventDispatcher>"
@"HIDDevice"
@"HIDUserDevice"
@"NSString"
^{?=CCC}
@"NSArray"
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@44@0:8i16@20Q28f36f40
@36@0:8i16@20Q28
@28@0:8i16@20
@20@0:8i16
i16@0:8
@"NSMutableArray"
{pair<bool, float>=Bf}28@0:8I16@20
v24@0:8Q16
q16@0:8
d16@0:8
v24@0:8d16
v40@0:8C16C20C24C28C32C36
v36@0:8f16f20f24f28i32
v28@0:8f16f20i24
v28@0:8@16i24
v32@0:8f16f20f24i28
v32@0:8@16f24i28
v20@0:8i16
v28@0:8@"NSArray"16i24
v32@0:8@"NSArray"16f24i28
v24@0:8@?<v@?CCCCCC>16
v24@0:8@?<v@?B>16
B36@0:8@16^@24B32
v20@0:8{?=[4C]}16
v20@0:8C16
v40@0:8q16@24Q32
{?=C(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})}16@0:8
{?="string"@"NSString""hasFecthedAtLeastOnce"B}
{?="properties"{?="firmwareVersion"S"type"C"bluetoothMAC"[6C]"unknown1"C"unknown2"C"spiColorsOverride"C}"hasFecthedAtLeastOnce"B"valid"B}
{?="bodyColor"{?="r"C"g"C"b"C}"buttonsColor"{?="r"C"g"C"b"C}"hasFecthedAtLeastOnce"B"valid"B}
{?="stick"{?="factory"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1}"user"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1"hasLeft"b1"hasRight"b1}"parameters"{?="left"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"right"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"fetchedLeft"b1"fetchedRight"b1}}"motion"{?="factory"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetchedCalibration"b1"fetchedHorizontalOffset"b1}"user"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetched"b1"hasData"b1}"coefficients"{?="accel"{?="x"f"y"f"z"f}"gyro"{?="x"f"y"f"z"f}}}}
{?="initialized"B"info"{?="charging"B"level"C}}
{?="LED"[4C]}
{PendingSubcommands="stqh_first"^{JoyConSubcommand}"stqh_last"^^{JoyConSubcommand}}
{?="subcommand"^{JoyConSubcommand}"timeout"@"NSObject<OS_dispatch_source>""requestTimestamp"Q}
{?="activateTimestamp"Q"cancelTimestamp"Q"lastInputReportTimestamp"Q"detectedInputReportMode"C"sticks"{?="left"{?="last"{?="x"S"y"S}"extents"{?="x"{?="min"S"max"S}"y"{?="min"S"max"S}}}"right"{?="last"{?="x"S"y"S}"extents"{?="x"{?="min"S"max"S}"y"{?="min"S"max"S}}}}}
@"<GCNintendoJoyConFusionGestureServiceClientInterface>"
@"NSTimer"
@"<GCMotionServiceClientInterface>"
v28@0:8f16f20f24
v24@0:8@?<v@?fff>16
v24@0:8C16B20
>(knN
?N###DR
#BBZ
Connect To Daemon
Connection to com.apple.GameController.gamecontrollerd.driver invalidated
Connection to com.apple.GameController.gamecontrollerd.driver interrupted.  Attempting to re-establish.
initWithService: %d
creating HIDDevice for service %d
opening HIDDevice
registering for BTSessionCallbacks sessionEvent
dealloc
Freeing HIDDevice on %@
PropertyForKey: %@
setProperty: %@ forKey: %@
eventMatching: %@ client: %@
setEventDispatcher %@
setCancelHandler %p
calling cancel handler
activate
cancel
setDispatchQueue %p
clientNotification %@ added: %d
GCHIDLog::disconnect: unable to get BTDevice; no valid BTSession
GCHIDLog::disconnect: SUCCESS
GCHIDLog::disconnect: error code = %d
GCHIDLog::disconnect: unable to get BTDevice; error code = %d
GCHIDLog::disconnect: unable to get device address from %s; errCode = %d
creating battery device
created battery device %@ with properties %@
updateClientBattery reporting battery level %d%%
updateBatteryStats reporting battery level %d%%
scheduleIdleTimer
disconnectIfIdle disconnecting...
isIdle for %.2f seconds%@
Stopping timer...
Dispatching event...
ping
requestServiceWithReply
connectToBatteryServiceWithClient %@
BTSessionEventCallback: attached session = %p
BTSessionEventCallback: detached session = %p
BTSessionEventCallback: terminated session = %p
BTSessionEventCallback: failed session = %p
Activate
Ready
#Quirks: Found mimatched PID!
Cancel
Set Player Indicator Lights
Failed to set player inidcator lights. %{public}@
Switch To Input Mode
Switch to input mode %#x
Failed to switch input mode. %{public}@
Modify Low-power Setting
Enable low-power mode
Disable low-power mode
Failed to modify low-power setting. %{public}@
Modify IMU Enabled
Enable IMU
Disable IMU
Failed to modify IMU enabled setting. %{public}@
Modify Vibration Enabled
Enable Vibration
Disable Vibration
Failed to modify vibration enabled setting. %{public}@
Read Low-power Setting
Failed to read low-power setting. %{public}@
Read low-power setting has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Read Device Info
Failed to retrieve device info. %{public}@
Device is a '%{public}@' with f/w version %#x.
Failed to read device serial number. %{public}@
Read serial number has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read color data. %{public}@
Read body color data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Request Calibration Data
#Quirks: Suspiciously good left stick factory calibration data.
#Quirks: Suspiciously good left stick user calibration data.
#Quirks: Suspiciously good right stick factory calibration data.
#Quirks: Suspiciously good right stick user calibration data.
Failed to read stick factory calibration data. %{public}@
Read stick factory calibration data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read stick user calibration data. %{public}@
Read stick user calibration data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read left stick parameters data. %{public}@
Read left stick parameters data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read right stick parameters data. %{public}@
Read right stick parameters data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Failed to read motion calibration data. %{public}@
Read motion calibration data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Read motion horizontal offset data has length [%{bytes}zu], which is less than the expected length [%{bytes}zu]. Ignoring.
Received unknown report: type = %li, reportID = %#lx, bytes = %{private}.*P
Detected input mode is now %#x
Sub-command Reply
Payload for input report [%#zx] has length [%{bytes}zu], which is less than the minimum expected length [%{bytes}zu]. Ignoring.
Sub-command reply: identifier = %#x ACK = %i, type = %i
Received a reply for sub-command [%#x].  Expected reply for [%#x].
Received an unexpected reply for sub-command [%#x].
Dispatch sub-command [%#x].
Send report: type = %li, reportID = %#lx, bytes = %{private}.*P
ACK sub-command [%#x].
NACK sub-command [%#x].
%{public}@
Enqueue sub-command [%#x].
Device Info Request
Device Info Error: %{public}@
Device Info Response: %{private}.*P
Set Input Report Mode Request: mode = %hhx
Set Input Report Mode Error: %{public}@
Set Input Report Mode Response
Set Low Power State Request: change = %hhx
Set Low Power State Error: %{public}@
Set Low Power State Response
Read SPI Flash Request: address = %#.4x, length = %{bytes}u
Read SPI Flash Error: %{public}@
Read SPI Flash Response: address = %#.4x, length = %{bytes}u, bytes = %{private}.*P
Set Player Lights Request: %c%c%c%c
Set Player Lights Error: %{public}@
Set Player Lights Response
Set IMU Enabled Request: change = %hhx
Set IMU Enabled Error: %{public}@
Set IMU Enabled Response
Set Vibration Enabled Request: change = %hhx
Set Vibration Enabled Error: %{public}@
Set Vibration Enabled Response
#GESTURE #BUG Home button gesture (bad state).
#GESTURE Home button gesture -> began.
#GESTURE Home button gesture -> ended.
#GESTURE Home button: pressed=%{BOOL}d, wasPressed=%{BOOL}d
#GESTURE Home button gesture -> cancel.
#GESTURE Home button gesture -> possible.
#GESTURE Home button gesture -> failed.
