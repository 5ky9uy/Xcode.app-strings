%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 25.3)
%%For: (Lee Broughton)
%%CreationDate: 7/22/21
%%BoundingBox: 0 0 30 33
%%HiResBoundingBox: 0 0 30 32.3867
%%CropBox: 0 0 30 32.3867
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.3.1
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 25.3.1 x390 R agm 4.7767 ct 5.4352
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 120 128 8
%%BeginData: 19118 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD56FF85315B3785FD72FFA90F3730373185FD71FF5B3737373137
%5BFD71FF5B30373037305BAFFD70FF5B37375B315B37FD71FF5B30373137
%305BFD08FFA98585FD66FF5B37315B373737FD07FF8537313731AFFD41FF
%A9A97E85858584FD1BFFA95B30373037305BA9FD05FFA9373037303130FD
%3EFFA9855B5B313731373137375B7FFD19FF5B37315B373737FD06FFA931
%5B375B3137A9FD3BFFAF5B370E3731373037313730370F0F0E5BA9FD0BFF
%A9A9AFFD08FF5B31373037315BAFFD05FF85313037313730A9FD3AFF8531
%373737315B3737315B3137318585A985AFFD0AFF5B37315BA9FD07FF5B37
%3737313737FD06FFA93137315B373785FD38FFA95B0E3730373037303730
%370E5B85FD0FFF373130373037A9FD06FF5B30373037305BAFFD05FF7E37
%3037303730A9FD38FF5B315B315B375B315B37373185FD10FFA937315B37
%5B31A9FD06FF5B37375B315B37FD06FFA9315B315B373785FD37FF5B0E37
%31373037313730373185FD11FFAF3137303731317FFD06FF5B3037313730
%5BFD06FF7F373137303731A9FD36FF853137315B3737315B373731A9FD12
%FFA9373737315B3185FD06FF5B37315B373737FD06FF85315B3737313785
%FD35FFA90E3730373037303730370E7FFD13FFA930373037303785FD05FF
%A95B30373037305BA9FD05FF8531303730370EA9FD35FF5B37375B315B37
%5B315B315BFD14FFA95B375B315B31A9FD06FF5B37315B373737FD06FFA9
%315B375B313785FD07FFA9855BA9FD29FF85313037313730373137303785
%FD14FFA930373137303785FD06FF5B31373037315BAFFD05FF8531303731
%3730A9FD06FFA9370F370E5BAFFD27FF5B3137315B3737315B373731FD15
%FFA937315B373731A9FD06FF5B373737313737FD06FFA93137315B373785
%FD06FF5B315B37370F85FD26FFA930373037303730373037305BFD0AFF7F
%5B5AAFFD07FFAF3037303730317EFD06FF5B30373037305BAFFD05FF7E37
%3037303730A9FD06FF3037303730315AFD26FF7F37375B315B375B315B37
%3785FD09FF5B37313731AFFD06FFA937315B375B31A9FD06FF5B37375B31
%5B37FD06FFA9315B315B373785FD06FF5B315B375B3185FD24FFA95B3730
%3731373037313730373185FD08FF7F373137303737FD06FFAF3137303731
%317FFD06FF5B30373137305BFD06FF7F373137303731A9FD06FF31373037
%31375AFD22FF855B31373737315B3737315B3737313785FD08FF85315B37
%37315BFD06FFA9373737315B3185FD06FF5B37315B373737FD06FF85315B
%3737313785FD06FF5B3137315B3185FD20FFA93637303730373037303730
%37303730370EA9FD08FF5B373037303730FD06FFA930373037303785FD05
%FFA95B30373037305BA9FD05FF8531303730370EA9FD06FF303730373037
%5BFD1FFF853137375B315B375B315B375B315B375B313785FD08FF85315B
%375B315BFD06FFA95B375B315B31A9FD06FF5B37315B373737FD06FFA931
%5B375B313785FD06FF5B375B315B3185FD1DFFA95B0F3730373137303731
%37303731373037313730A9FD08FF5B373037313730FD06FFA93037313730
%3785FD06FF5B31373037315BAFFD05FF85313037313730A9FD06FF303731
%3730375BFD1CFFAF5B315B3737315B3737315B3737315B3737315B373785
%FD08FF853137315B315BFD06FFA937315B373731A9FD06FF5B3737373137
%37FD06FFA93137315B373785FD06FF5B315B37373185FD1BFFA95B303730
%373037303730373037303730373037303730A9FD08FF5A373037303730FD
%06FFAF3037303730317EFD06FF5B30373037305BAFFD05FF7E3730373037
%30A9FD06FF3037303730375AFD1AFFAF5B315B315B375B315B375B315B37
%5B315B375B315B373785FD08FF85315B315B375BFD06FFA937315B375B31
%A9FD06FF5B37375B315B37FD06FFA9315B315B373785FD06FF5B315B375B
%3185FD1AFF5B0E37313730373137303731373037313730373137303731A9
%FD08FF5A373137303731FD06FFAF3137303731317FFD06FF5B3037313730
%5BFD06FF7F373137303731A9FD06FF3137303731375AFD19FF853137315B
%3737315B3737315B3737315B3737315B3737313785FD08FF85315B373731
%5BFD06FFA9373737315B3185FD06FF5B37315B373737FD06FF85315B3737
%313785FD06FF5B3137315B3185FD18FFA90E373037303730373037303730
%37303730373037303730370EA9FD08FF5B313037303730FD06FFA9303730
%37303785FD05FFA95B30373037305BA9FD05FF8531303730370EA9FD06FF
%3037303730375BFD18FF3737375B315B375B315B375B315B375B315B375B
%315B375B313785FD08FFA9315B375B315BFD06FFA95B375B315B31A9FD06
%FF5B37315B373737FD06FFA9315B375B313785FD06FF5B375B315B3185FD
%17FF5B313037313730373137303731373037313730373137303731370E85
%FD09FF5B0E370F37A9FD06FFA930373137303785FD06FF5B31373037315B
%AFFD05FF85313037313730A9FD06FF3037313730375BFD16FFA937373731
%5B3737315B3737315B3737315B3737315B3737315B37375BFD0AFF855B85
%A9FD07FFA937315B373731A9FD06FF5B373737313737FD06FFA93137315B
%373785FD06FF5B315B37373185FD16FF5B0E373037303730373037303730
%373037303730373037303730373037A9FD14FFAF3037303730317EFD06FF
%5B30373037305BAFFD05FF7E373037303730A9FD06FF3731303730317EFD
%16FF315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%31A9FD14FFA937315B375B31A9FD06FF5B37375B315B37FD06FFA9315B31
%5B373785FD06FFAF3137313737FD16FF5B31303731373037313730373137
%3037313730373137303731373037313730FD14FFAF3137303731317FFD06
%FF5B30373137305BFD06FF7F373137303731A9FD07FFAF5B8585FD16FFAF
%5B3137315B3737315B3737315B3737315B3737315B3737315B3737315B37
%375BFD13FFA9373737315B3185FD06FF5B37315B373737FD06FF85315B37
%37313785FD21FF850E373037303730373037303730373037303730373037
%303730373037303730317EFD12FFA930373037303785FD05FFA95B303730
%37305BA9FD05FF8531303730370EA9FD21FF5B37375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B313785FD11FFA95B375B
%315B3185FD06FF5B37315B373737FD06FFA9315B375B313785FD20FFA937
%303731373037313730373137303731373037313730373137303731373037
%313730375BFD10FFAF30373137303785FD06FF5B31373037315BAFFD05FF
%85313037313730A9FD20FFA93137315B3737315B3737315B3737315B3737
%315B3737315B3737315B3737315B373731373785AFFD0EFF5B315B373731
%FD07FF5B373737313737FD06FFA93137315B373785FD20FF5A3730373037
%303730373037303730373037303730373037303730373037303730373037
%30370E375A8585A97EFD09FFA95B0E3730A9FD07FF5B30373037305BAFFD
%05FF7E373037303730A9FD20FF5B375B315B375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B375B31373137313785FD
%0AFFAFA9FD09FF5B37375B315B37FD06FFA9315B315B373785FD1FFFAF30
%373137303731373037313730373137303731373037313730373137303731
%373037313730373137303731370E85FD15FF5B30373137305BFD06FF8537
%3137303731A9FD1FFF8537315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B373731FD15FF5B
%37315B373737FD07FF31373737315BFD20FF850E37303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%37303730315AFD13FFA95B30373037305BA9FD06FF850E370E3784FD20FF
%5B37315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B313785FD13FF5B37315B373737FD
%09FF8585A9FD20FFAF5B3137303731373037313730373137303731373037
%3137303731373037313730373137303731373037313730373137303785FD
%12FF5B31373037315BAFFD2CFF31373737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37313785FD11FFFD0437313737FD2CFF8537303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%30373037303730375BFD10FF5B0E3730370E5BFD2CFFA9315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B37373185A9FD0DFF85373737313785FD2C
%FF8531303731373037313730373137303731373037313730373137303731
%373037313730373137303731373037313730373137303731370E37375B5A
%5B85FD09FF5B5B31375BFD2DFF853137315B3737315B3737315B3737315B
%3737315B3737315B3737315B3737315B3737315B3737315B3737315B3737
%315B3737315B3737313731370F85FD0BFFAFFD2FFF5A3730373037303730
%373037303730373037303730373037303730373037303730373037303730
%37303730373037303730373037303730373037303730FD3BFF61315B315B
%375B315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B375B313785FD3AFF
%363731373037313730373137303731373037313730373137303731373037
%313730373137303731373037313730373137303731373037313730373137
%3037A9FD39FF5B315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315BFD39FF313730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%30373037303730373037303730370E85FD38FF5B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B3185FD37FF313730
%373137303731373037313730373137303731373037313730373137303731
%373037313730373137303731373037313730373137303731373037313730
%37313785FD35FF5B3137315B3737315B3737315B3737315B3737315B3737
%315B3737315B3737315B3737315B3737315B3737315B3737315B3737315B
%3737315B3737315B3737315B31373785A9FD05FF85FD2CFF303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%30370E37315B365B303184FD2AFFA95B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B375B315B373731373737
%31FD2BFFA930373137303731373037313730373137303731373037313730
%373137303731373037313730373137303731373037313730373137303731
%373037313730373137303731373037313730373137A9FD2AFF8537315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B31A9FD2AFF850E373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%37303785FD2AFF8537315B375B315B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B375B315B375B315B375B315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B31A9FD2AFF5B31
%373037313730373137303731373037313730373137303731373037313730
%373137303731373037313730373137303731373037313730373137303731
%37303731373037313730373137303785FD2AFFFD0437315B3737315B3737
%315B3737315B3737315B3737315B3737315B3737315B3737315B3737315B
%3737315B3737315B3737315B3737315B3737315B3737315B3737315B3737
%315B37373185FD29FFAF3730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%37303730373037303730373037303730373037303730373037303736FD29
%FFAF315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315BFD29FF85313037313730
%373137303731373037313730373137303731373037313730373137303731
%373037313730373137303731373037313730373137303731373037313730
%373137303731373037313730AFFD28FF853137315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B373785FD28FF303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037305BFD
%27FFA937375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B373737FD27FF850E3731
%373037313730373137303731373037313730373137303731373037313730
%373137303731373037313730373137303731373037313730373137303731
%373037313730373137303731373037313185FD26FF3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B315BFD25FF5A37303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730A9FD23FFA95B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B375B315B375B315B375B315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B375B315B375B31
%5B375B315B373737FD23FF5B303731373037313730373137303731373037
%313730373137303731373037313730373137303731373037313730373137
%303731373037313730373137303731373037313730373137303731373037
%3137303731375AFD21FF853137315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B37375BFD1FFF5B0E3730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730315AFD1DFF61315B375B315B375B315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B375B315B375B315B375B315B375B315B37
%5B315B375B315B375B315B375B31377FFD1BFF5B0F373037313730373137
%303731373037313730373137303731373037313730373137303731373037
%313730373137303731373037313730373137303731373037313730373137
%303731373037313730373137303731373037313730377FFD19FF85315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%3785FD17FF850E3730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%3037303730373037303730377FFD15FF853137315B375B315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B375B315B375B315B375B315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B373785FD13FFA9
%303731373037313730373137303731373037313730373137303731373037
%313730373137303731373037313730373137303731373037313730373137
%303731373037313730373137303731373037313730373137303731373037
%31373037313730373137A9FD12FF3737315B3737315B3737315B3737315B
%3737315B3737315B3737315B3737315B3737315B3737315B3737315B3737
%315B3737315B3737315B3737315B3737315B3737315B3737315B3737315B
%3737315B3737315B3737315B3737315B3737315B3737315B315BFD11FF36
%373037303730373037303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%37303730373037303730370E5BFD0FFF8537375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B375B315B375B315B3737
%31AFFD0EFF5B303731373037313730373137303731373037313730373137
%303731373037313730373137303731373037313730373137303731373037
%313730373137303731373037313730373137303731373037313730373137
%303731373037313730373137303731373037313736FD0DFFA93137315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737A9FD0CFF363730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%373037303730373037303730373037303730373037303730373037303730
%370E85FD0CFF5B375B315B375B315B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B375B315B375B315B375B315B375B315B37
%5B315B375B315B375B315B375B315B375B315B375B315B375B315B375B31
%5B375B315B375B315B375B315B375B315B375B315B373737FD0CFF303731
%373037313730373137303731373037313730373137303731373037313730
%373137303731373037313730373137303731373037313730373137303731
%373037313730373137303731373037313730373137303731373037313730
%373137303731373037313730373137A9FD0BFF37315B3737315B3737315B
%3737315B3737315B3737315B3737315B3737315B3737315B3737315B3737
%315B3737315B3737315B3737315B3737315B3737315B3737315B3737315B
%3737315B3737315B3737315B3737315B3737315B3737315B3737315B3737
%315B3737313737FD0CFF3037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%3037303730373037303730373037303730373037303730373037305BFD0C
%FF5B315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B315B375B315B375B315B375B315B
%375B315B375B315B375B315B375B315B375B315B375B315B375B315B375B
%315B375B315B375B315B375B315B375B31375BFD0CFF8531303731373037
%313730373137303731373037313730373137303731373037313730373137
%303731373037313730373137303731373037313730373137303731373037
%313730373137303731373037313730373137303731373037313730373137
%303731373037313730AFFD0DFF7F37315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B373731373185FD
%0FFF7F370E37303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%303730373037303730373037303730373037303730373037303730373037
%30373037303730373037303730313085FD11FFA9855B5B315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B373731
%5B3737315B3737315B3737315B3737315B3737315B3737315B3737315B37
%37315B3737315B3737315B3737315B3737315B3737315B3737315B375B85
%FD16FFAFAFA9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9
%AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9
%A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9AFA9A9A9
%AFA9A9A9AFA9A9A9FDFCFFFDFCFFFDFCFFFD14FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFAFFD54FF5B37
%313730373137303731373037313730373137303731373037313730373137
%30370F85FD54FF850F373737313737373137373731373737313737373137
%37373137373731373737313785FD54FF8537303730373037303730373037
%303730373037303730373037303730373037303730FD56FF375B375B315B
%375B315B375B315B375B315B375B315B375B315B375B315B375B315BFD56
%FF850E373137303731373037313730373137303731373037313730373137
%303731317FFD56FFAF37315B3737315B3737315B3737315B3737315B3737
%315B3737315B3737313737FD58FF5B313037303730373037303730373037
%30373037303730373037303730370E85FD59FF3737375B315B375B315B37
%5B315B375B315B375B315B375B315B375B3161FD5AFFA930373137303731
%373037313730373137303731373037313730373137A9FD5BFFA931373737
%315B3737315B3737315B3737315B3737315B37373137A9FD5DFFA9303730
%37303730373037303730373037303730373037303784FD5FFFAF3737315B
%375B315B375B315B375B315B375B315B315BA9FD62FF5B370E3731373037
%313730373137303731313085FD65FFA98531373137315B3737315B313731
%5B7FFD6AFF8485313730373037305B5BA9A9FD3AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking
true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf
/xddf
{3 -1 roll put}bdf
/xpt
{exch put}bdf
/ndf
exch dup where{
pop pop pop
}ifelse
}def
/cdndf
exch dup currentdict exch known{
pop pop
exch def
}ifelse
}def
{get exec}bdf
/ps_level
/languagelevel where{
pop systemdict/languagelevel gx
}ifelse
/level2 
ps_level 2 ge
/level3 
ps_level 3 ge
/ps_version
{version cvr}stopped{-1}if
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
/packedarray where{pop packedarray
array astore readonly}ifelse
}bdf
/map_reserved_ink_name
dup type/stringtype eq{
dup/Red eq{
pop(_Red_)
dup/Green eq{
pop(_Green_)
dup/Blue eq{
pop(_Blue_)
dup()cvn eq{
pop(Process)
}ifelse
}ifelse
}ifelse
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
AGMUTIL_GSTATE begin
/AGMUTIL_GSTATE_clr_spc currentcolorspace def
/AGMUTIL_GSTATE_clr_indx 0 def
/AGMUTIL_GSTATE_clr_comps 12 array def
mark currentcolor counttomark
{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
/AGMUTIL_GSTATE_fnt rootfont def
/AGMUTIL_GSTATE_lw currentlinewidth def
/AGMUTIL_GSTATE_lc currentlinecap def
/AGMUTIL_GSTATE_lj currentlinejoin def
/AGMUTIL_GSTATE_ml currentmiterlimit def
currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
/AGMUTIL_GSTATE_sa currentstrokeadjust def
/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
/AGMUTIL_GSTATE_op currentoverprint def
/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
/AGMUTIL_GSTATE_ht currenthalftone def
/AGMUTIL_GSTATE_flt currentflat def
}def
/set_gstate
AGMUTIL_GSTATE begin
AGMUTIL_GSTATE_clr_spc setcolorspace
AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
AGMUTIL_GSTATE_fnt setfont
AGMUTIL_GSTATE_lw setlinewidth
AGMUTIL_GSTATE_lc setlinecap
AGMUTIL_GSTATE_lj setlinejoin
AGMUTIL_GSTATE_ml setmiterlimit
AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
AGMUTIL_GSTATE_sa setstrokeadjust
AGMUTIL_GSTATE_clr_rnd setcolorrendering
AGMUTIL_GSTATE_op setoverprint
AGMUTIL_GSTATE_bg cvx setblackgeneration
AGMUTIL_GSTATE_ucr cvx setundercolorremoval
AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
AGMUTIL_GSTATE_ht sethalftone
}ifelse
AGMUTIL_GSTATE_flt setflat
}def
/get_gstate_and_matrix
AGMUTIL_GSTATE begin
/AGMUTIL_GSTATE_ctm matrix currentmatrix def
get_gstate
}def
/set_gstate_and_matrix
set_gstate
AGMUTIL_GSTATE begin
AGMUTIL_GSTATE_ctm setmatrix
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
level3
{sethalftone currenthalftone}
dup/HalftoneType get 3 eq
sethalftone currenthalftone
begin
Width Height mul{
Thresholds read{pop}if
}repeat
currenthalftone
}ifelse
}ifelse
}def 
/rdcmntline
currentfile AGMUTIL_str256 readline pop
(%)anchorsearch{pop}if
}bdf
/filter_cmyk
dup type/filetype ne{
exch()/SubFileDecode filter
exch pop
ifelse
exch
AGMUTIL_src256 readstring pop
dup length/AGMUTIL_srcLen exch def
/AGMUTIL_ndx 0 def
AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
1 index exch get
AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
/AGMUTIL_ndx AGMUTIL_ndx 1 add def
}for
AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
bind
/exec cvx
]cvx
}bdf
/filter_indexed_devn
cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
4 dict begin
/srcStr xdf
/dstStr xdf
dup type/filetype ne{
0()/SubFileDecode filter
exch
/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
currentdict/srcStr get/readstring cvx/pop cvx
/dup cvx/length cvx 0/gt cvx[
Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
names_index Names length currentdict/srcStr get length 1 sub{
1/index cvx/exch cvx/get cvx
currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
}for
currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
]cvx/if cvx
/end cvx
]cvx
bind
/exec cvx
]cvx
}bdf
/AGMUTIL_imagefile nd
/read_image_file
AGMUTIL_imagefile 0 setfileposition
10 dict begin
/imageDict xdf
/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
/imbufIdx 0 def
/origDataSource imageDict/DataSource get def
/origMultipleDataSources imageDict/MultipleDataSources get def
/origDecode imageDict/Decode get def
/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
/imbufCnt imageDict/DataSource get length def
/imbufs imbufCnt array def
0 1 imbufCnt 1 sub{
/imbufIdx xdf
imbufs imbufIdx imbufLen string put
imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
}for
DeviceN_PS2{
imageDict begin
/DataSource[DataSource/devn_sep_datasource cvx]cvx def
/MultipleDataSources false def
/Decode[0 1]def
/imbuf imbufLen string def
Indexed_DeviceN level3 not and DeviceN_NoneName or{
/srcDataStrs[imageDict begin
currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
Width Decode length 2 div mul cvi string
}repeat
end]def
imageDict begin
/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
/Decode[0 1]def
imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
imageDict/Decode[0 1]put
}ifelse
}ifelse
imageDict exch
load exec
imageDict/DataSource origDataSource put
imageDict/MultipleDataSources origMultipleDataSources put
imageDict/Decode origDecode put
}bdf
/write_image_file
begin
{(AGMUTIL_imagefile)(w+)file}stopped{
false
Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
2 dict begin
/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
/imbuf imbufLen string def
1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
MultipleDataSources{
0 1 DataSource length 1 sub{
DataSource type dup
/arraytype eq{
pop DataSource exch gx
/filetype eq{
DataSource exch get imbuf readstring pop
DataSource exch get
}ifelse
}ifelse
AGMUTIL_imagefile exch writestring
}for
DataSource type dup
/arraytype eq{
pop DataSource exec
/filetype eq{
DataSource imbuf readstring pop
DataSource
}ifelse
}ifelse
AGMUTIL_imagefile exch writestring
}ifelse
}for
true
}ifelse
}bdf
/close_image_file
AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
/pstr statusdict/product get def
pstr(HP LaserJet 2200)eq 
pstr(HP LaserJet 4000 Series)eq or
pstr(HP LaserJet 4050 Series )eq or
pstr(HP LaserJet 8000 Series)eq or
pstr(HP LaserJet 8100 Series)eq or
pstr(HP LaserJet 8150 Series)eq or
pstr(HP LaserJet 5000 Series)eq or
pstr(HP LaserJet 5100 Series)eq or
pstr(HP Color LaserJet 4500)eq or
pstr(HP Color LaserJet 4600)eq or
pstr(HP LaserJet 5Si)eq or
pstr(HP LaserJet 1200 Series)eq or
pstr(HP LaserJet 1300 Series)eq or
pstr(HP LaserJet 4100 Series)eq or 
userdict/AGMP_current_show/show load put
userdict/show{
 currentcolorspace 0 get
 /Pattern eq
 {false charpath f}
 {AGMP_current_show}ifelse
}put
currentdict/pstr undef
/consumeimagedata
begin
AGMIMG_init_common
currentdict/MultipleDataSources known not
{/MultipleDataSources false def}if
MultipleDataSources
DataSource 0 get type
dup/filetype eq
1 dict begin
/flushbuffer Width cvi string def
1 1 Height cvi
0 1 DataSource length 1 sub
DataSource exch get
flushbuffer readstring pop pop
}for
}for
dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
Width Height mul cvi
0 1 DataSource length 1 sub
{dup DataSource exch gx length exch 0 ne{pop}if}for
dup 0 eq
{pop exit}if
sub dup 0 le
{exit}if
}loop
/DataSource load type 
dup/filetype eq
1 dict begin
/flushbuffer Width Decode length 2 idiv mul cvi string def
1 1 Height{pop DataSource flushbuffer readstring pop pop}for
dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
DataSource length dup 0 eq
{pop exit}if
sub dup 0 le
{exit}if
}loop
}ifelse
}bdf
/addprocs
 2{/exec load}repeat
 3 1 roll
 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
currenthalftone dup length dict copy begin
 currentdict 2 index known{
1 index load dup length dict copy begin
currentdict/TransferFunction known{
/TransferFunction load
currenttransfer
}ifelse
 addprocs/TransferFunction xdf 
 currentdict end def
currentdict end sethalftone
currentdict/TransferFunction known{
/TransferFunction load 
currenttransfer
}ifelse
addprocs/TransferFunction xdf
currentdict end sethalftone
}ifelse
}def
/clonearray
dup xcheck exch
dup length array exch
Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
dup type/dicttype eq
Adobe_AGM_Core/AGMCORE_tmp get
exch
clonedict
Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
dup type/arraytype eq
Adobe_AGM_Core/AGMCORE_tmp get exch
clonearray
Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
exch dup
Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
}forall
exch{cvx}if
}bdf
/clonedict
dup length dict
begin
dup type/dicttype eq
{clonedict}if
dup type/arraytype eq
{clonearray}if
}forall
currentdict
}bdf
/DeviceN_PS2
/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
/indexed_colorspace_dict AGMCORE_gget dup null ne{
dup/CSDBase known{
/CSDBase get/CSD get_res/Names known 
pop false
}ifelse
pop false
}ifelse
}bdf
/DeviceN_NoneName
/Names where{
false Names
(None)eq or
}forall
false
}ifelse
}bdf
/DeviceN_PS2_inRip_seps
/AGMCORE_in_rip_sep where
pop dup type dup/arraytype eq exch/packedarraytype eq or
dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
/currentcolorspace exch AGMCORE_gput
false
true
}ifelse
true
}ifelse
true
}ifelse
}bdf
/base_colorspace_type
dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
/pdfmark_5{cleartomark}bind def
/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
currentfile exch 0 exch/SubFileDecode filter
/currentdistillerparams where 
{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{flushfile cleartomark}
{/PUT pdfmark}ifelse 
}bdf
/ReadBypdfmark_5_string
2 dict begin
/makerString exch def string/tmpString exch def
currentfile tmpString readline not{pop exit}if
makerString anchorsearch
pop pop cleartomark exit
3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
}ifelse
}loop
}bdf
/xpdfm
dup 0 get/Label eq
aload length[exch 1 add 1 roll/PAGELABEL
aload pop
[{ThisPage}<<5 -2 roll>>/PUT
}ifelse
pdfmark_5
}forall
}bdf
/lmt{
dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
Adobe_AGM_Utils begin
}bdf
/dt{
currentdict Adobe_AGM_Utils eq{
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
currentpacking
true setpacking
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
where{
/Adobe_AGM_Core_Id known
false
}ifelse
}ndf
/flushinput
save
2 dict begin
/CompareBuffer 3 -1 roll def
/readbuffer 256 string def
mark
currentfile readbuffer{readline}stopped
{cleartomark mark}
{pop exit}
CompareBuffer eq
{exit}
}ifelse
}loop
cleartomark
restore
}bdf
/getspotfunction
AGMCORE_screen exch pop exch pop
dup type/dicttype eq{
dup/HalftoneType get 1 eq{
/SpotFunction get
dup/HalftoneType get 2 eq{
/GraySpotFunction get
abs exch abs 2 copy add 1 gt{
1 sub dup mul exch 1 sub dup mul add 1 sub
dup mul exch dup mul add 1 exch sub
}ifelse
}bind
}ifelse
}ifelse
}def
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
/AGMCORE_graphicsave save store
concat
0 setgray
0 setlinecap
0 setlinejoin
1 setlinewidth
[]0 setdash
10 setmiterlimit
false setoverprint
false setstrokeadjust
//Adobe_AGM_Core/spot_alias gx
/Adobe_AGM_Image where{
Adobe_AGM_Image/spot_alias 2 copy known{
pop pop
}ifelse
/sep_colorspace_dict null AGMCORE_gput
100 dict begin
/dictstackcount countdictstack def
/showpage{}def
mark
}def
/graphic_cleanup
cleartomark
dictstackcount 1 countdictstack 1 sub{end}for
AGMCORE_graphicsave restore
}def
/compose_error_msg
grestoreall initgraphics
/Helvetica findfont 10 scalefont setfont
/AGMCORE_deltaY 100 def
/AGMCORE_deltaX 310 def
clippath pathbbox np pop pop 36 add exch 36 add exch moveto
0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
0 AGMCORE_&setgray
gsave 1 AGMCORE_&setgray fill grestore 
1 setlinewidth gsave stroke grestore
currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
/AGMCORE_deltaY 12 def
/AGMCORE_tmp 0 def
AGMCORE_err_strings exch get
dup 32 eq
AGMCORE_str256 0 AGMCORE_tmp getinterval
stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
currentpoint AGMCORE_deltaY sub exch pop
clippath pathbbox pop pop pop 44 add exch moveto
AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
0 1 AGMCORE_str256 length 1 sub
AGMCORE_str256 exch 0 put
}for
/AGMCORE_tmp 0 def
AGMCORE_str256 exch AGMCORE_tmp xpt
/AGMCORE_tmp AGMCORE_tmp 1 add def
}ifelse
}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
[/Separation/None/DeviceCMYK{0 0 0}]
[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
[/Separation(Cyan)/DeviceCMYK{0 0 0}]
[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
[/DeviceCMYK]
]def
/ds{
Adobe_AGM_Core begin
/currentdistillerparams where
pop currentdistillerparams/CoreDistVersion get 5000 lt
{<</DetectBlends false>>setdistillerparams}if
/AGMCORE_ps_version xdf
/AGMCORE_ps_level xdf
errordict/AGM_handleerror known not{
errordict/AGM_handleerror errordict/handleerror get put
errordict/handleerror{
Adobe_AGM_Core begin
$error/newerror get AGMCORE_cur_err null ne and{
$error/newerror false put
AGMCORE_cur_err compose_error_msg
$error/newerror true put
errordict/AGM_handleerror get exec
}bind put
/AGMCORE_environ_ok 
ps_level AGMCORE_ps_level ge
ps_version AGMCORE_ps_version ge and 
AGMCORE_ps_level -1 eq or
AGMCORE_environ_ok not
{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
/AGMCORE_&setgray systemdict/setgray get def
level2{
/AGMCORE_&setcolor systemdict/setcolor get def
/AGMCORE_&setcolorspace systemdict/setcolorspace get def
/AGMCORE_currentbg currentblackgeneration def
/AGMCORE_currentucr currentundercolorremoval def
/AGMCORE_Default_flatness currentflat def
/AGMCORE_distilling
/product where{
pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
false
}ifelse
/AGMCORE_GSTATE AGMCORE_key_known not{
/AGMCORE_GSTATE 21 dict def
/AGMCORE_tmpmatrix matrix def
/AGMCORE_gstack 64 array def
/AGMCORE_gstackptr 0 def
/AGMCORE_gstacksaveptr 0 def
/AGMCORE_gstackframekeys 14 def
/AGMCORE_&gsave/gsave ldf
/AGMCORE_&grestore/grestore ldf
/AGMCORE_&grestoreall/grestoreall ldf
/AGMCORE_&save/save ldf
/AGMCORE_&setoverprint/setoverprint ldf
/AGMCORE_gdictcopy{
begin
{def}forall
}def
/AGMCORE_gput{
AGMCORE_gstack AGMCORE_gstackptr get
3 1 roll
}def
/AGMCORE_gget{
AGMCORE_gstack AGMCORE_gstackptr get
exch
}def
/gsave{
AGMCORE_&gsave
AGMCORE_gstack AGMCORE_gstackptr get
AGMCORE_gstackptr 1 add
dup 64 ge{limitcheck}if
/AGMCORE_gstackptr exch store
AGMCORE_gstack AGMCORE_gstackptr get
AGMCORE_gdictcopy
}def
/grestore{
AGMCORE_&grestore
AGMCORE_gstackptr 1 sub
dup AGMCORE_gstacksaveptr lt{1 add}if
dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
/AGMCORE_gstackptr exch store
}def
/grestoreall{
AGMCORE_&grestoreall
/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
}def
/save{
AGMCORE_&save
AGMCORE_gstack AGMCORE_gstackptr get
AGMCORE_gstackptr 1 add
dup 64 ge{limitcheck}if
/AGMCORE_gstackptr exch store
/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
AGMCORE_gstack AGMCORE_gstackptr get
AGMCORE_gdictcopy
}def
/setoverprint{
dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
}def
0 1 AGMCORE_gstack length 1 sub{
AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
}for
level3/AGMCORE_&sysshfill AGMCORE_key_known not and
/AGMCORE_&sysshfill systemdict/shfill get def
/AGMCORE_&sysmakepattern systemdict/makepattern get def
/AGMCORE_&usrmakepattern/makepattern load def
/currentcmykcolor[0 0 0 0]AGMCORE_gput
/currentstrokeadjust false AGMCORE_gput
/currentcolorspace[/DeviceGray]AGMCORE_gput
/sep_tint 0 AGMCORE_gput
/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
/sep_colorspace_dict null AGMCORE_gput
/devicen_colorspace_dict null AGMCORE_gput
/indexed_colorspace_dict null AGMCORE_gput
/currentcolor_intent()AGMCORE_gput
/customcolor_tint 1 AGMCORE_gput
/absolute_colorimetric_crd null AGMCORE_gput
/relative_colorimetric_crd null AGMCORE_gput
/saturation_crd null AGMCORE_gput
/perceptual_crd null AGMCORE_gput
currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
/MaxPatternItem currentsystemparams/MaxPatternCache get
setuserparams
}def
/setcmykcolor where{
Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
Adobe_AGM_Core begin
/setcmykcolor
4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
1 sub 4 1 roll
3 index add neg dup 0 lt{
pop 0
3 1 roll
}repeat
setrgbcolor pop
}ndf
/currentcmykcolor
/currentcmykcolor AGMCORE_gget aload pop
}ndf
/setoverprint
{pop}ndf
/currentoverprint
{false}ndf
/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
/AGMCORE_plate_ndx 
AGMCORE_cyan_plate{
AGMCORE_magenta_plate{
AGMCORE_yellow_plate{
AGMCORE_black_plate{
}ifelse
}ifelse
}ifelse
}ifelse
/AGMCORE_have_reported_unsupported_color_space false def
/AGMCORE_report_unsupported_color_space
AGMCORE_have_reported_unsupported_color_space false eq
(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
}def
/AGMCORE_composite_job
AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
/AGMCORE_in_rip_sep
/AGMCORE_in_rip_sep where{
pop AGMCORE_in_rip_sep
AGMCORE_distilling 
false
userdict/Adobe_AGM_OnHost_Seps known{
false
level2{
currentpagedevice/Separations 2 copy known{
pop pop false
}ifelse
false
}ifelse
}ifelse
}ifelse
}ifelse
/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
/AGM_preserve_spots 
/AGM_preserve_spots where{
pop AGM_preserve_spots
AGMCORE_distilling AGMCORE_producing_seps or
}ifelse
/AGM_is_distiller_preserving_spotimages
currentdistillerparams/PreserveOverprintSettings known
currentdistillerparams/PreserveOverprintSettings get
currentdistillerparams/ColorConversionStrategy known
currentdistillerparams/ColorConversionStrategy get
/sRGB ne
true
}ifelse
false
}ifelse
false
}ifelse
}def
/convert_spot_to_process where{pop}{
/convert_spot_to_process
//Adobe_AGM_Core begin
dup map_alias{
/Name get exch pop
dup dup(None)eq exch(All)eq or
pop false
AGMCORE_host_sep
gsave
1 0 0 0 setcmykcolor currentgray 1 exch sub
0 1 0 0 setcmykcolor currentgray 1 exch sub
0 0 1 0 setcmykcolor currentgray 1 exch sub
0 0 0 1 setcmykcolor currentgray 1 exch sub
add add add 0 eq
pop false
false setoverprint
current_spot_alias false set_spot_alias
1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
set_spot_alias
currentgray 1 ne
}ifelse
grestore
AGMCORE_distilling
pop AGM_is_distiller_preserving_spotimages not
//Adobe_AGM_Core/AGMCORE_name xddf
false
//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
AGMUTIL_cpd/OverrideSeparations known and
AGMUTIL_cpd/OverrideSeparations get
/HqnSpots/ProcSet resourcestatus
pop pop pop true
AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
gsave
[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
false
AGMUTIL_cpd/SeparationColorNames 2 copy known
{AGMCORE_name eq or}forall
pop pop pop true
}ifelse
grestore
}ifelse
}ifelse
}ifelse
}ifelse
}def
}ifelse
/convert_to_process where{pop}{
/convert_to_process
dup length 0 eq
pop false
AGMCORE_host_sep
dup true exch
dup(Cyan)eq exch
dup(Magenta)eq 3 -1 roll or exch
dup(Yellow)eq 3 -1 roll or exch
dup(Black)eq 3 -1 roll or
{pop}
{convert_spot_to_process and}ifelse
forall
true exch
dup(Cyan)eq exch
dup(Magenta)eq 3 -1 roll or exch
dup(Yellow)eq 3 -1 roll or exch
(Black)eq or and
}forall
}{pop false}ifelse
false exch
/PhotoshopDuotoneList where{pop false}{true}ifelse
dup(Cyan)eq exch
dup(Magenta)eq 3 -1 roll or exch
dup(Yellow)eq 3 -1 roll or exch
dup(Black)eq 3 -1 roll or
{pop}
{convert_spot_to_process or}ifelse
convert_spot_to_process or
ifelse
forall
}ifelse
}ifelse
}def
}ifelse
/AGMCORE_avoid_L2_sep_space 
version cvr 2012 lt 
level2 and 
AGMCORE_producing_seps not and
/AGMCORE_is_cmyk_sep
AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
/AGM_avoid_0_cmyk where{
pop AGM_avoid_0_cmyk
AGM_preserve_spots 
userdict/Adobe_AGM_OnHost_Seps known 
userdict/Adobe_AGM_InRip_Seps known or
not and
}ifelse
/setcmykcolor[
4 copy add add add 0 eq currentoverprint and{
pop 0.0005
}/exec cvx
/AGMCORE_&setcmykcolor load dup type/operatortype ne{
/exec cvx
]cvx def
/AGMCORE_IsSeparationAProcessColor
dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
}def
AGMCORE_host_sep{
/setcolortransfer
AGMCORE_cyan_plate{
pop pop pop
AGMCORE_magenta_plate{
4 3 roll pop pop pop
AGMCORE_yellow_plate{
4 2 roll pop pop pop
4 1 roll pop pop pop
}ifelse
}ifelse
}ifelse
settransfer 
/AGMCORE_get_ink_data
AGMCORE_cyan_plate{
{pop pop pop}
AGMCORE_magenta_plate{
{4 3 roll pop pop pop}
AGMCORE_yellow_plate{
{4 2 roll pop pop pop}
{4 1 roll pop pop pop}
}ifelse
}ifelse
}ifelse
/AGMCORE_RemoveProcessColorNames
1 dict begin
/filtername
dup/Cyan eq 1 index(Cyan)eq or
{pop(_cyan_)}if
dup/Magenta eq 1 index(Magenta)eq or
{pop(_magenta_)}if
dup/Yellow eq 1 index(Yellow)eq or
{pop(_yellow_)}if
dup/Black eq 1 index(Black)eq or
{pop(_black_)}if
}def
dup type/arraytype eq
{[exch{filtername}forall]}
{filtername}ifelse
}def
level3{
/AGMCORE_IsCurrentColor
dup AGMCORE_IsSeparationAProcessColor
AGMCORE_plate_ndx 0 eq
{dup(Cyan)eq exch/Cyan eq or}if
AGMCORE_plate_ndx 1 eq
{dup(Magenta)eq exch/Magenta eq or}if
AGMCORE_plate_ndx 2 eq
{dup(Yellow)eq exch/Yellow eq or}if
AGMCORE_plate_ndx 3 eq
{dup(Black)eq exch/Black eq or}if
AGMCORE_plate_ndx 4 eq
{pop false}if
gsave
false setoverprint
current_spot_alias false set_spot_alias
1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
set_spot_alias
currentgray 1 ne
grestore
}ifelse
}def
/AGMCORE_filter_functiondatasource
5 dict begin
/data_in xdf
data_in type/stringtype eq
/ncomp xdf
/comp xdf
/string_out data_in length ncomp idiv string def
0 ncomp data_in length 1 sub
string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
}for
string_out
string/string_in xdf
/string_out 1 string def
/component xdf
data_in string_in/readstring cvx
[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
[/pop cvx()]cvx/ifelse cvx
]cvx/ReusableStreamDecode filter
}ifelse
}def
/AGMCORE_separateShadingFunction
2 dict begin
/paint? xdf
/channel xdf
dup type/dicttype eq
begin
FunctionType 0 eq
/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
currentdict/Decode known
{/Decode Decode channel 2 mul 2 getinterval def}if
paint? not
{/Decode[1 1]def}if
FunctionType 2 eq
paint?
/C0[C0 channel get 1 exch sub]def
/C1[C1 channel get 1 exch sub]def
/C0[1]def
/C1[1]def
}ifelse
FunctionType 3 eq
/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def
currentdict/Range known
{/Range[0 1]def}if
currentdict
end}{
channel get 0 paint? AGMCORE_separateShadingFunction
}ifelse
}def
/AGMCORE_separateShading
3 -1 roll begin
currentdict/Function known
currentdict/Background known
{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
/ColorSpace[/DeviceGray]def
ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
}ifelse
ColorSpace 0 get/Separation eq
[1/exch cvx/sub cvx]cvx
[/pop cvx 1]cvx
}ifelse
ColorSpace 3 3 -1 roll put
[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
}ifelse
ColorSpace 3 3 -1 roll bind put
}ifelse
ColorSpace 2/DeviceGray put
}ifelse
}def
/AGMCORE_separateShadingDict
dup/ColorSpace get
dup type/arraytype ne
{[exch]}if
dup 0 get/DeviceCMYK eq
exch begin 
currentdict
AGMCORE_cyan_plate
{0 true}if
AGMCORE_magenta_plate
{1 true}if
AGMCORE_yellow_plate
{2 true}if
AGMCORE_black_plate
{3 true}if
AGMCORE_plate_ndx 4 eq
{0 false}if
dup not currentoverprint and
{/AGMCORE_ignoreshade true def}if
AGMCORE_separateShading
currentdict
end exch
dup 0 get/Separation eq
exch begin
ColorSpace 1 get dup/None ne exch/All ne and
ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
/ColorSpace
/Separation
ColorSpace 1 get
/DeviceGray
ColorSpace 3 get/exec cvx
4 AGMCORE_plate_ndx sub -1/roll cvx
4 1/roll cvx
3[/pop cvx]cvx/repeat cvx
1/exch cvx/sub cvx
]cvx
]def
AGMCORE_report_unsupported_color_space
AGMCORE_black_plate not
currentdict 0 false AGMCORE_separateShading
}ifelse
currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
0 exch 
dup not currentoverprint and
{/AGMCORE_ignoreshade true def}if
AGMCORE_separateShading
}ifelse
currentdict
end exch
dup 0 get/DeviceN eq
exch begin
ColorSpace 1 get convert_to_process
ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
/ColorSpace
/DeviceN
ColorSpace 1 get
/DeviceGray
ColorSpace 3 get/exec cvx
4 AGMCORE_plate_ndx sub -1/roll cvx
4 1/roll cvx
3[/pop cvx]cvx/repeat cvx
1/exch cvx/sub cvx
]cvx
]def
AGMCORE_report_unsupported_color_space
AGMCORE_black_plate not
currentdict 0 false AGMCORE_separateShading
/ColorSpace[/DeviceGray]def
}ifelse
currentdict
false -1 ColorSpace 1 get
AGMCORE_IsCurrentColor
1 add
exch pop true exch exit
1 add
}forall
exch 
dup not currentoverprint and
{/AGMCORE_ignoreshade true def}if
AGMCORE_separateShading
}ifelse
currentdict
end exch
dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
exch begin
ColorSpace dup type/arraytype eq
{0 get}if
/DeviceGray ne
AGMCORE_report_unsupported_color_space
AGMCORE_black_plate not
ColorSpace 0 get/CIEBasedA eq
/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
ColorSpace 0 get/CIEBasedDEFG eq
/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
currentdict 0 false AGMCORE_separateShading
currentdict
end exch
dup/AGMCORE_ignoreshade known
begin
/ColorSpace[/Separation(None)/DeviceGray{}]def
currentdict end
}def
/shfill
AGMCORE_separateShadingDict 
dup/AGMCORE_ignoreshade known
{pop}
{AGMCORE_&sysshfill}ifelse
}def
/makepattern
exch
dup/PatternType get 2 eq
clonedict
begin
/Shading Shading AGMCORE_separateShadingDict def
Shading/AGMCORE_ignoreshade known
currentdict end exch
{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
exch AGMCORE_&sysmakepattern
exch AGMCORE_&usrmakepattern
}ifelse
}def
AGMCORE_in_rip_sep{
/setcustomcolor
exch aload pop
dup 7 1 roll inRip_spot_has_ink not
4{4 index mul 4 1 roll}
repeat
/DeviceCMYK setcolorspace
6 -2 roll pop pop
//Adobe_AGM_Core begin
/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
[/Separation 4 -1 roll/DeviceCMYK
{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
setcolorspace
}ifelse
setcolor
}ndf
/setseparationgray
[/Separation(All)/DeviceGray{}]setcolorspace_opt
1 exch sub setcolor
}ndf
/setseparationgray
AGMCORE_&setgray
}ndf
}ifelse
/findcmykcustomcolor
5 makereadonlyarray
}ndf
/setcustomcolor
exch aload pop pop
4{4 index mul 4 1 roll}repeat
setcmykcolor pop
}ndf
/has_color
/colorimage where{
AGMCORE_producing_seps{
pop true
systemdict eq
}ifelse
false
}ifelse
/map_index
1 index mul exch getinterval{255 div}forall
}bdf
/map_indexed_devn
Lookup Names length 3 -1 roll cvi map_index
}bdf
/n_color_components
base_colorspace_type
dup/DeviceGray eq{
pop 1
/DeviceCMYK eq{
}ifelse
}ifelse
}bdf
level2{
/mo/moveto ldf
/li/lineto ldf
/cv/curveto ldf
/knockout_unitsq
1 setgray
0 0 1 1 rectfill
}def
level2/setcolorspace AGMCORE_key_known not and{
/AGMCORE_&&&setcolorspace/setcolorspace ldf
/AGMCORE_ReplaceMappedColor
dup type dup/arraytype eq exch/packedarraytype eq or
/AGMCORE_SpotAliasAry2 where{
begin
dup 0 get dup/Separation eq
dup length array copy
dup dup 1 get
current_spot_alias
dup map_alias
false set_spot_alias
dup 1 exch setsepcolorspace
true set_spot_alias
begin
/sep_colorspace_dict currentdict AGMCORE_gput
pop pop
/Separation Name 
CSA map_csa
MappedCSA 
/sep_colorspace_proc load
dup Name
map_reserved_ink_name 1 xpt
/DeviceN eq 
dup length array copy
dup dup 1 get[
exch{
current_spot_alias{
dup map_alias{
/Name get exch pop
map_reserved_ink_name
}forall 
]1 xpt
}ifelse
}def
/setcolorspace
dup type dup/arraytype eq exch/packedarraytype eq or
dup 0 get/Indexed eq
AGMCORE_distilling
/PhotoshopDuotoneList where
pop false
true
}ifelse
true
}ifelse
aload pop 3 -1 roll
AGMCORE_ReplaceMappedColor
3 1 roll 4 array astore
AGMCORE_ReplaceMappedColor
}ifelse
DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
}def
/adj
currentstrokeadjust{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
}def
/mo{
adj moveto
}def
/li{
adj lineto
}def
/cv{
6 2 roll adj
6 2 roll adj
6 2 roll adj curveto
}def
/knockout_unitsq
1 setgray
8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
}def
/currentstrokeadjust{
/currentstrokeadjust AGMCORE_gget
}def
/setstrokeadjust{
/currentstrokeadjust exch AGMCORE_gput
}def
/setcolorspace
/currentcolorspace exch AGMCORE_gput
}def
/currentcolorspace
/currentcolorspace AGMCORE_gget
}def
/setcolor_devicecolor
base_colorspace_type
dup/DeviceGray eq{
pop setgray
/DeviceCMYK eq{
setcmykcolor
setrgbcolor
}ifelse
}ifelse
}def
/setcolor
currentcolorspace 0 get
dup/DeviceGray ne{
dup/DeviceCMYK ne{
dup/DeviceRGB ne{
dup/Separation eq{
currentcolorspace 3 gx
currentcolorspace 2 get
dup/Indexed eq{
currentcolorspace 3 get dup type/stringtype eq{
currentcolorspace 1 get n_color_components
3 -1 roll map_index
exec
}ifelse
currentcolorspace 1 get
/AGMCORE_cur_err/AGMCORE_invalid_color_space def
AGMCORE_invalid_color_space
}ifelse
}ifelse
setcolor_devicecolor
}def
}ifelse
/sop/setoverprint ldf
/lw/setlinewidth ldf
/lc/setlinecap ldf
/lj/setlinejoin ldf
/ml/setmiterlimit ldf
/dsh/setdash ldf
/sadj/setstrokeadjust ldf
/gry/setgray ldf
/rgb/setrgbcolor ldf
/cmyk[
/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
/setcmykcolor load dup type/operatortype ne{/exec cvx}if
]cvx bdf
level3 AGMCORE_host_sep not and{
/nzopmsc{
6 dict begin
/kk exch def
/yy exch def
/mm exch def
/cc exch def
/sum 0 def
cc 0 ne{/sum sum 2#1000 or def cc}if
mm 0 ne{/sum sum 2#0100 or def mm}if
yy 0 ne{/sum sum 2#0010 or def yy}if
kk 0 ne{/sum sum 2#0001 or def kk}if
AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
sum 0 eq{0}if
setcolor
}bdf
/nzopmsc/cmyk ldf
}ifelse
/sep/setsepcolor ldf
/devn/setdevicencolor ldf
/idx/setindexedcolor ldf
/colr/setcolor ldf
/csacrd/set_csa_crd ldf
/sepcs/setsepcolorspace ldf
/devncs/setdevicencolorspace ldf
/idxcs/setindexedcolorspace ldf
/cp/closepath ldf
/clp/clp_npth ldf
/eclp/eoclp_npth ldf
/f/fill ldf
/ef/eofill ldf
/@/stroke ldf
/nclp/npth_clp ldf
/gset/graphic_setup ldf
/gcln/graphic_cleanup ldf
/ct/concat ldf
/cf/currentfile ldf
/fl/filter ldf
/rs/readstring ldf
/AGMCORE_def_ht currenthalftone def
/clonedict Adobe_AGM_Utils begin/clonedict load end def
/clonearray Adobe_AGM_Utils begin/clonearray load end def
currentdict{
dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
bind
}forall
/getrampcolor
/indx exch def
0 1 NumComp 1 sub
Samples exch get
dup type/stringtype eq{indx get}if
exch
Scaling exch get aload pop
3 1 roll
mul add
}for
ColorSpaceFamily/Separation eq 
{sep}
ColorSpaceFamily/DeviceN eq
{devn}{setcolor}ifelse
}ifelse
}bdf
/sssetbackground{
aload pop 
ColorSpaceFamily/Separation eq 
{sep}
ColorSpaceFamily/DeviceN eq
{devn}{setcolor}ifelse
}ifelse
}bdf
/RadialShade
40 dict begin
/ColorSpaceFamily xdf
/background xdf
/ext1 xdf
/ext0 xdf
/BBox xdf
/r2 xdf
/c2y xdf
/c2x xdf
/r1 xdf
/c1y xdf
/c1x xdf
/rampdict xdf
/setinkoverprint where{pop/setinkoverprint{pop}def}if
gsave
BBox length 0 gt
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
c1x c2x eq
c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
}ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{pathbbox}stopped
{0 0 0 0}if
/yMax xdf
/xMax xdf
/yMin xdf
/xMin xdf
grestore
xMax xMin eq yMax yMin eq or
grestore
/max{2 copy gt{pop}{exch pop}ifelse}bdf
/min{2 copy lt{pop}{exch pop}ifelse}bdf
rampdict begin
40 dict begin
background length 0 gt{background sssetbackground gsave clippath fill grestore}if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
c2y r1 add r2 le
c1x c1y r1 0 360 arc
fill
c2x c2y r2 0 360 arc fill
r1 r2 eq
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
/AA r2 r1 sub c2y div def
AA -1 eq
{/theta 89.99 def}
{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}ifelse
}ifelse
}ifelse
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt{exch}if pop
/hires xdf
hires mul
/numpix xdf
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
NumSamples numpix div 0.5 gt
/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
xInc 0 eq yInc 0 eq rInc 0 eq and and
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
numsteps
subsampling{round cvi}if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}repeat
}ifelse
ext1
c2y r2 add r1 lt
c2x c2y r2 0 360 arc
fill
c2y r1 add r2 sub 0.0001 le
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
c2x c2y r2 0 360 arc fill
r1 r2 eq
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
/AA r2 r1 sub c2y div def
AA -1 eq
{/theta 89.99 def}
{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}ifelse
}ifelse
}ifelse
grestore
grestore
}ifelse
}bdf
/GenStrips
40 dict begin
/ColorSpaceFamily xdf
/background xdf
/ext1 xdf
/ext0 xdf
/BBox xdf
/y2 xdf
/x2 xdf
/y1 xdf
/x1 xdf
/rampdict xdf
/setinkoverprint where{pop/setinkoverprint{pop}def}if
gsave
BBox length 0 gt
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
x1 x2 eq
y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{pathbbox}stopped
{0 0 0 0}if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
grestore
rampdict begin
20 dict begin
background length 0 gt{background sssetbackground gsave clippath fill grestore}if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt{exch}if pop
/numpix xdf
numpix 0 ne
NumSamples numpix div 0.5 gt
/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
ext0
0 getrampcolor
xMin xStart lt
xMin yMin xMin neg ySpan rectfill
/xInc xEnd xStart sub numsteps div def
/x xStart def
numsteps
subsampling{round cvi}if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}repeat
ext1{
xMax xEnd gt
xEnd yMin xMax xEnd sub ySpan rectfill
grestore
grestore
}ifelse
}bdf
}def
}def
/dt{
}def
/pgsv{
//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
/findcolorrendering systemdict/findcolorrendering get def
systemdict/setcolorrendering known{
/setcolorrendering systemdict/setcolorrendering get def
/test_cmyk_color_plate
gsave
setcmykcolor currentgray 1 ne
grestore
}def
/inRip_spot_has_ink
dup//Adobe_AGM_Core/AGMCORE_name xddf
convert_spot_to_process not
}def
/map255_to_range
1 index sub
3 -1 roll 255 div mul add
}def
/set_csa_crd
/sep_colorspace_dict null AGMCORE_gput
begin
CSA get_csa_by_name setcolorspace_opt
set_crd
/map_csa
currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
/sep_colorspace_dict AGMCORE_gget begin
dup/sep_tint exch AGMCORE_gput
TintProc
}def
/setdevicencolor
/devicen_colorspace_dict AGMCORE_gget begin
Names length copy
Names length 1 sub -1 0
/devicen_tints AGMCORE_gget 3 1 roll xpt
}for
TintProc
}def
/sep_colorspace_proc
/AGMCORE_tmp exch store
/sep_colorspace_dict AGMCORE_gget begin
currentdict/Components known{
Components aload pop 
TintMethod/Lab eq{
2{AGMCORE_tmp mul NComponents 1 roll}repeat
LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
TintMethod/Subtractive eq{
NComponents{
AGMCORE_tmp mul NComponents 1 roll
}repeat
NComponents{
1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
}repeat
}ifelse
}ifelse
ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
aload pop
}ifelse
}def
/sep_colorspace_gray_proc
/AGMCORE_tmp exch store
/sep_colorspace_dict AGMCORE_gget begin
GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
}def
/sep_proc_name
dup 0 get 
dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
pop[/DeviceGray]
/sep_colorspace_gray_proc
/sep_colorspace_proc
}ifelse
}def
/setsepcolorspace
current_spot_alias{
dup begin
Name map_alias{
exch pop
dup/sep_colorspace_dict exch AGMCORE_gput
begin
CSA map_csa
/AGMCORE_sep_special Name dup()eq exch(All)eq or store
AGMCORE_avoid_L2_sep_space{
[/Indexed MappedCSA sep_proc_name 255 exch 
{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
]setcolorspace_opt
/TintProc{
255 mul round cvi setcolor
}bdf
MappedCSA 0 get/DeviceCMYK eq 
currentdict/Components known and 
AGMCORE_sep_special not and{
/TintProc[
Components aload pop Name findcmykcustomcolor 
/exch cvx/setcustomcolor cvx
]cvx bdf
AGMCORE_host_sep Name(All)eq and{
/TintProc{
1 exch sub setseparationgray 
}bdf
AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
AGMCORE_host_sep or
Name()eq and{
/TintProc[
MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
cvx/setcmykcolor cvx
cvx/setgray cvx
}ifelse
]cvx bdf
AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
/TintProc[
/dup cvx
MappedCSA sep_proc_name cvx exch
0 get/DeviceGray eq{
1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
/Name cvx/findcmykcustomcolor cvx/exch cvx
AGMCORE_host_sep{
AGMCORE_is_cmyk_sep
/Name cvx 
/AGMCORE_IsSeparationAProcessColor load/exec cvx
/not cvx/and cvx 
Name inRip_spot_has_ink not
}ifelse
/pop cvx 1
]cvx/if cvx
/setcustomcolor cvx
]cvx bdf
/TintProc{setcolor}bdf
[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
}ifelse
}ifelse
}ifelse
}ifelse
}ifelse
set_crd
setsepcolor
}def
/additive_blend
3 dict begin
/numarrays xdf
/numcolors xdf
0 1 numcolors 1 sub
/c1 xdf
0 1 numarrays 1 sub
1 exch add/index cvx
c1/get cvx/mul cvx
}for
numarrays 1 add 1/roll cvx 
}for
numarrays[/pop cvx]cvx/repeat cvx
}def
/subtractive_blend
3 dict begin
/numarrays xdf
/numcolors xdf
0 1 numcolors 1 sub
/c1 xdf
0 1 numarrays 1 sub
1 3 3 -1 roll add/index cvx 
c1/get cvx/sub cvx/mul cvx
}for
/sub cvx
numarrays 1 add 1/roll cvx
}for
numarrays[/pop cvx]cvx/repeat cvx
}def
/exec_tint_transform
/TintProc[
/TintTransform cvx/setcolor cvx
]cvx bdf
MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
2 dict begin
/names_index xdf
/Names xdf
1 1 1 1 Names names_index get findcmykcustomcolor
/devicen_tints AGMCORE_gget names_index get setcustomcolor
Names length{pop}repeat
}bdf
/setdevicencolorspace
dup/AliasedColorants known{false}{true}ifelse 
current_spot_alias and{
7 dict begin
/names_index 0 def
dup/names_len exch/Names get length def
/new_names names_len array def
/new_LookupTables names_len array def
/alias_cnt 0 def
dup/Names get
dup map_alias{
exch pop
dup/ColorLookup known{
dup begin
new_LookupTables names_index ColorLookup put
dup/Components known{
dup begin
new_LookupTables names_index Components put
dup begin
new_LookupTables names_index[null null null null]put
}ifelse
}ifelse
new_names names_index 3 -1 roll/Name get put
/alias_cnt alias_cnt 1 add def 
/name xdf
new_names names_index name put
dup/LookupTables known{
dup begin
new_LookupTables names_index LookupTables names_index get put
dup begin
new_LookupTables names_index[null null null null]put
}ifelse
}ifelse
/names_index names_index 1 add def 
}forall
alias_cnt 0 gt{
/AliasedColorants true def
/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
0 1 names_len 1 sub{
/names_index xdf
new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
/AliasedColorants false def
exit
new_LookupTables names_index get 0 get null eq{
dup/Names get names_index get/name xdf
name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
or or or not{
/AliasedColorants false def
exit
}ifelse
}for
lut_entry_len 1 eq{
/AliasedColorants false def
AliasedColorants{
dup begin
/Names new_names def
/LookupTables new_LookupTables def
/AliasedColorants true def
/NComponents lut_entry_len def
/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
currentdict/TTTablesIdx known not{
/TTTablesIdx -1 def
dup/devicen_colorspace_dict exch AGMCORE_gput
begin
currentdict/AliasedColorants known{
AliasedColorants
false
}ifelse
dup not{
CSA map_csa
/TintTransform load type/nulltype eq or{
/TintTransform[
0 1 Names length 1 sub
/TTTablesIdx TTTablesIdx 1 add def
dup LookupTables exch get dup 0 get null eq
1 index
Names exch get
dup(Cyan)eq
pop exch
LookupTables length exch sub
/index cvx
0 0 0
dup(Magenta)eq
pop exch
LookupTables length exch sub
/index cvx
0/exch cvx 0 0
(Yellow)eq
exch
LookupTables length exch sub
/index cvx
0 0 3 -1/roll cvx 0
exch
LookupTables length exch sub
/index cvx
0 0 0 4 -1/roll cvx
}ifelse
}ifelse
}ifelse
5 -1/roll cvx/astore cvx
dup length 1 sub
LookupTables length 4 -1 roll sub 1 add
/index cvx/mul cvx/round cvx/cvi cvx/get cvx
}ifelse
Names length TTTablesIdx add 1 add 1/roll cvx
}for
Names length[/pop cvx]cvx/repeat cvx
NComponents Names length
TintMethod/Subtractive eq
subtractive_blend
additive_blend
}ifelse
]cvx bdf
AGMCORE_host_sep{
Names convert_to_process{
exec_tint_transform
currentdict/AliasedColorants known{
AliasedColorants not
false
}ifelse
5 dict begin
/AvoidAliasedColorants xdf
/painted? false def
/names_index 0 def
/names_len Names length def
AvoidAliasedColorants{
/currentspotalias current_spot_alias def
false set_spot_alias
Names{
AGMCORE_is_cmyk_sep{
dup(Cyan)eq AGMCORE_cyan_plate and exch
dup(Magenta)eq AGMCORE_magenta_plate and exch
dup(Yellow)eq AGMCORE_yellow_plate and exch
(Black)eq AGMCORE_black_plate and or or or{
/devicen_colorspace_dict AGMCORE_gget/TintProc[
Names names_index/devn_makecustomcolor cvx
]cvx ddf
/painted? true def
painted?{exit}if
0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
/devicen_colorspace_dict AGMCORE_gget/TintProc[
Names names_index/devn_makecustomcolor cvx
]cvx ddf
/painted? true def
exit
}ifelse
/names_index names_index 1 add def
}forall
AvoidAliasedColorants{
currentspotalias set_spot_alias
painted?{
/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
/devicen_colorspace_dict AGMCORE_gget/TintProc[
names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
0 0 0 0/setcmykcolor cvx
]cvx ddf
}ifelse
}ifelse
AGMCORE_in_rip_sep{
Names convert_to_process not
level3
}ifelse
[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
/TintProc level3 not AGMCORE_in_rip_sep and{
Names/length cvx[/pop cvx]cvx/repeat cvx
]cvx bdf
{setcolor}bdf
}ifelse
exec_tint_transform
}ifelse
}ifelse
set_crd
/AliasedColorants false def
}def
/setindexedcolorspace
dup/indexed_colorspace_dict exch AGMCORE_gput
begin
currentdict/CSDBase known{
CSDBase/CSD get_res begin
currentdict/Names known{
currentdict devncs
1 currentdict sepcs
}ifelse
AGMCORE_host_sep{
4 dict begin
/compCnt/Names where{pop Names length}{1}ifelse def
/NewLookup HiVal 1 add string def
0 1 HiVal{
/tableIndex xdf
Lookup dup type/stringtype eq{
compCnt tableIndex map_index
exec
}ifelse
/Names where{
pop setdevicencolor
setsepcolor
}ifelse
currentgray
tableIndex exch
255 mul cvi 
NewLookup 3 1 roll put
}for
[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
level3
currentdict/Names known{
[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
}ifelse
[/Indexed MappedCSA HiVal
currentdict/Names known{
Lookup dup type/stringtype eq
{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
{/exec cvx}ifelse
/TintTransform load/exec cvx
Lookup dup type/stringtype eq
{/exch cvx/get cvx 255/div cvx}
{/exec cvx}ifelse
CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
}ifelse
]cvx
]setcolorspace_opt
}ifelse
}ifelse
set_crd
CSA map_csa
AGMCORE_host_sep level2 not and{
0 0 0 0 setcmykcolor
[/Indexed MappedCSA 
level2 not has_color not and{
dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
pop[/DeviceGray]
HiVal GrayLookup
HiVal 
currentdict/RangeArray known{
/indexed_colorspace_dict AGMCORE_gget begin
Lookup exch 
dup HiVal gt{
pop HiVal
NComponents mul NComponents getinterval{}forall
NComponents 1 sub -1 0{
RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
NComponents 1 roll
}for
}bind
Lookup
}ifelse
}ifelse
]setcolorspace_opt
set_crd
}ifelse
}ifelse
}def
/setindexedcolor
AGMCORE_host_sep{
/indexed_colorspace_dict AGMCORE_gget
begin
currentdict/CSDBase known{
CSDBase/CSD get_res begin
currentdict/Names known{
map_indexed_devn
devn
Lookup 1 3 -1 roll map_index
}ifelse
Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
map_index
MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
}ifelse
level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
map_indexed_devn
devn
setcolor
}ifelse
}ifelse
}def
/ignoreimagedata
currentoverprint not{
gsave
dup clonedict begin
1 setgray
/Decode[0 1]def
/DataSource<FF>def
/MultipleDataSources false def
/BitsPerComponent 8 def
currentdict end
systemdict/image gx
grestore
consumeimagedata
}def
/add_res
dup/CSD eq{
pop 
//Adobe_AGM_Core begin
/AGMCORE_CSD_cache load 3 1 roll put
defineresource pop
}ifelse
}def
/del_res
aload pop exch
dup/CSD eq{
pop 
{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
exch
{1 index undefineresource}forall
}ifelse
}forall
}def
/get_res
dup/CSD eq{
dup type dup/nametype eq exch/stringtype eq or{
AGMCORE_CSD_cache exch get
findresource
}ifelse
}def
/get_csa_by_name
dup type dup/nametype eq exch/stringtype eq or{
/CSA get_res
}def
/paintproc_buf_init
/count get 0 0 put
}def
/paintproc_buf_next
dup/count get dup 0 get
dup 3 1 roll
1 add 0 xpt
}def
/cachepaintproc_compress
5 dict begin
currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
/ppdict 20 dict def
/string_size 16000 def
/readbuffer string_size string def
currentglobal true setglobal 
ppdict 1 array dup 0 1 put/count xpt
setglobal
/LZWFilter 
exch
dup length 0 eq{
ppdict dup length 1 sub 3 -1 roll put
}ifelse
{string_size}{0}ifelse string
}/LZWEncode filter def
ReadFilter readbuffer readstring
exch LZWFilter exch writestring
not{exit}if
}loop
LZWFilter closefile
ppdict
}def
/cachepaintproc
2 dict begin
currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
/ppdict 20 dict def
currentglobal true setglobal 
ppdict 1 array dup 0 1 put/count xpt
setglobal
ReadFilter 16000 string readstring exch
ppdict dup length 1 sub 3 -1 roll put
not{exit}if
}loop
ppdict dup dup length 1 sub()put
}def
/make_pattern
exch clonedict exch
dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
matrix translate exch matrix concatmatrix
 1 index begin
BBox 0 get XStep div cvi XStep mul/xshift exch neg def
BBox 1 get YStep div cvi YStep mul/yshift exch neg def
BBox 0 get xshift add
BBox 1 get yshift add
BBox 2 get xshift add
BBox 3 get yshift add
4 array astore
/BBox exch def
[xshift yshift/translate load null/exec load]dup
3/PaintProc load put cvx/PaintProc exch def
gsave 0 setgray
makepattern
grestore
}def
/set_pattern
dup/PatternType get 1 eq{
dup/PaintType get 1 eq{
currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
setpattern
}def
/setcolorspace_opt
dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
currentcolorrendering/RenderingIntent known{
currentcolorrendering/RenderingIntent get
Intent/AbsoluteColorimetric eq 
/absolute_colorimetric_crd AGMCORE_gget dup null eq
Intent/RelativeColorimetric eq
/relative_colorimetric_crd AGMCORE_gget dup null eq
Intent/Saturation eq
/saturation_crd AGMCORE_gget dup null eq
/perceptual_crd AGMCORE_gget dup null eq
}ifelse
}ifelse
}ifelse
pop null
/RenderingIntent known{null}{Intent}ifelse
}ifelse
}ifelse
Intent ne{
Intent/ColorRendering{findresource}stopped
pop pop systemdict/findcolorrendering known
Intent findcolorrendering
/ColorRendering findresource true exch
/ColorRendering findresource
product(Xerox Phaser 5400)ne
exch
}ifelse
dup Intent/AbsoluteColorimetric eq 
/absolute_colorimetric_crd exch AGMCORE_gput
Intent/RelativeColorimetric eq
/relative_colorimetric_crd exch AGMCORE_gput
Intent/Saturation eq
/saturation_crd exch AGMCORE_gput
Intent/Perceptual eq
/perceptual_crd exch AGMCORE_gput
}ifelse
}ifelse
}ifelse
}ifelse
1 index{exch}{pop}ifelse
{false}ifelse
{true}ifelse
dup begin
currentdict/TransformPQR known{
currentdict/TransformPQR get aload pop
3{{}eq 3 1 roll}repeat or or
{true}ifelse
currentdict/MatrixPQR known{
currentdict/MatrixPQR get aload pop
1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
and and and and and and and and
{true}ifelse
clonedict begin
/TransformPQR[
{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
]def
/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
currentdict end
setcolorrendering_opt
}def
/set_crd
AGMCORE_host_sep not level2 and{
currentdict/ColorRendering known{
ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
currentdict/Intent known{
updatecolorrendering
}ifelse
currentcolorspace dup type/arraytype eq
{0 get}if
/DeviceRGB eq
currentdict/UCR known
{/UCR}{/AGMCORE_currentucr}ifelse
load setundercolorremoval
currentdict/BG known 
{/BG}{/AGMCORE_currentbg}ifelse
load setblackgeneration
}def
/set_ucrbg
dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
dup currentcolorrendering eq{
product(HP Color LaserJet 2605)anchorsearch{
pop pop pop
clonedict
begin
/Intent Intent def
currentdict
setcolorrendering
}ifelse
}ifelse
}def
/cpaint_gcomp
convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
(%end_cpaint_gcomp)flushinput
}def
/cpaint_gsep
//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
(%end_cpaint_gsep)flushinput
}def
/cpaint_gend
{np}def
/T1_path
currentfile token pop currentfile token pop mo
currentfile token pop dup type/stringtype eq
{pop exit}if 
0 exch rlineto 
currentfile token pop dup type/stringtype eq
{pop exit}if 
0 rlineto
}loop
}def
/T1_gsave
level3
{/clipsave}
{/gsave}ifelse
load def
/T1_grestore
level3
{/cliprestore}
{/grestore}ifelse 
load def
/set_spot_alias_ary
dup inherit_aliases
//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
dup inherit_aliases
dup length
/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
array
//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
/AGMCORE_SpotAliasAry where{
AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
AGMCORE_SpotAliasAry length
}{0}ifelse
AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
true set_spot_alias
}def
/inherit_aliases
{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
/AGMCORE_SpotAliasAry2 where{
/AGMCORE_current_spot_alias 3 -1 roll put
}ifelse
}def
/current_spot_alias
/AGMCORE_SpotAliasAry2 where{
/AGMCORE_current_spot_alias get
false
}ifelse
}def
/map_alias
/AGMCORE_SpotAliasAry2 where{
begin
/AGMCORE_name xdf
false
AGMCORE_SpotAliasAry2{
dup/Name get AGMCORE_name eq{
/CSD get/CSD get_res
exch pop true
exit
}ifelse
}forall
pop false
}ifelse
}bdf
/spot_alias
true set_spot_alias
/AGMCORE_&setcustomcolor AGMCORE_key_known not{
//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
/customcolor_tint 1 AGMCORE_gput
//Adobe_AGM_Core begin
/setcustomcolor
//Adobe_AGM_Core begin
dup/customcolor_tint exch AGMCORE_gput
1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
current_spot_alias and{1 index 4 get map_alias}{false}ifelse
false set_spot_alias
/sep_colorspace_dict AGMCORE_gget null ne
{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
3 1 roll 2 index{
exch pop/sep_tint AGMCORE_gget exch
mark 3 1 roll
setsepcolorspace
counttomark 0 ne{
setsepcolor
not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
true set_spot_alias
AGMCORE_&setcustomcolor
}ifelse
}bdf
}def
/begin_feature
Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
2 dict begin
/spd/setpagedevice load def
/setpagedevice{get_gstate spd set_gstate}def
stopped{$error/newerror false put}if
count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
//Adobe_AGM_Core begin
/AGMCORE_inverting exch def
level2{
currentpagedevice/NegativePrint known AGMCORE_distilling not and{
currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
true begin_feature true{
<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
}end_feature
/AGMCORE_inverting false def
AGMCORE_inverting{
[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
AGMCORE_distilling{
erasepage
gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
}ifelse
}def
/lw_save_restore_override{
/md where{
md begin
initializepage
/initializepage{}def
/pmSVsetup{}def
/endp{}def
/pse{}def
/psb{}def
/orig_showpage where
{pop}
{/orig_showpage/showpage load def}
ifelse
/showpage{orig_showpage gR}def
}def
/pscript_showpage_override{
/NTPSOct95 where
begin
showpage
save
/showpage/restore load def
/restore{exch pop}def
}def
/driver_media_override
/md where{
md/initializepage known{
md/initializepage{}put
md/rC known{
md/rC{4{pop}repeat}put
/mysetup where{
/mysetup[1 0 0 1 0 0]put
Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
level2
{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
/Pscript_Win_Data where{
Pscript_Win_Data/mysetup known{
Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
}def
/restore_mysetup
/Pscript_Win_Data where{
Pscript_Win_Data/mysetup known{
Adobe_AGM_Core/save_mysetup known{
Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
Adobe_AGM_Core/save_mysetup undef
}def
/driver_check_media_override
/PrepsDict where
{pop}
Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
}ifelse
}def
AGMCORE_err_strings begin
/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
systemdict/languagelevel known dup
{pop systemdict/languagelevel get 2 ge}
if def
Level2? not
/currentglobal false def
/setglobal/pop load def
/gcheck{pop false}bind def
/currentpacking false def
/setpacking/pop load def
/SharedFontDirectory 0 dict def
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
{2 copy 10 dict put}
 begin
/@opStackCountByLevel 32 dict def
/@opStackLevel 0 def
/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def
 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
{userdict/Adobe_CoolType_GVMFonts 10 dict put}
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
{userdict/Adobe_CoolType_LVMFonts 10 dict put}
setglobal
/ct_VMDictPut
dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
3 1 roll put
}bind def
/ct_VMDictUndef
dup Adobe_CoolType_GVMFonts exch known
{Adobe_CoolType_GVMFonts exch undef}
dup Adobe_CoolType_LVMFonts exch known
{Adobe_CoolType_LVMFonts exch undef}
{pop}
ifelse
}ifelse
}bind def
/ct_str1 1 string def
/ct_xshow
/_ct_na exch def
/_ct_i 0 def
currentpoint
/_ct_y exch def
/_ct_x exch def
pop pop
ct_str1 exch 0 exch put
ct_str1 show
{_ct_na _ct_i get}stopped 
{pop pop}
_ct_x _ct_y moveto
rmoveto
ifelse
/_ct_i _ct_i 1 add def
currentpoint
/_ct_y exch def
/_ct_x exch def
exch
@cshow
}bind def
/ct_yshow
/_ct_na exch def
/_ct_i 0 def
currentpoint
/_ct_y exch def
/_ct_x exch def
pop pop
ct_str1 exch 0 exch put
ct_str1 show
{_ct_na _ct_i get}stopped 
{pop pop}
_ct_x _ct_y moveto
0 exch
rmoveto
ifelse
/_ct_i _ct_i 1 add def
currentpoint
/_ct_y exch def
/_ct_x exch def
exch
@cshow
}bind def
/ct_xyshow
/_ct_na exch def
/_ct_i 0 def
currentpoint
/_ct_y exch def
/_ct_x exch def
pop pop
ct_str1 exch 0 exch put
ct_str1 show
{_ct_na _ct_i get}stopped 
{pop pop}
{_ct_na _ct_i 1 add get}stopped 
{pop pop pop}
_ct_x _ct_y moveto
rmoveto
ifelse
ifelse
/_ct_i _ct_i 2 add def
currentpoint
/_ct_y exch def
/_ct_x exch def
exch
@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
/BuildChar
1 index/Encoding get exch get
1 index/BuildGlyph get exec
}bind def
/BuildGlyph
exch begin
GlyphProcs exch get exec
}bind def
}bind def
setglobal
/@_SaveStackLevels
Adobe_CoolType_Data
begin
/@vmState currentglobal def false setglobal
@opStackCountByLevel
@opStackLevel
2 copy known not
2 copy
3 dict dup/args
7 index
5 add array put
put get
get dup/args get dup length 3 index lt
dup length 5 add array exch
1 index exch 0 exch putinterval
1 index exch/args exch put
{pop}
ifelse
ifelse
begin
count 1 sub
1 index lt
{pop count}
dup/argCount exch def
dup 0 gt
args exch 0 exch getinterval 
astore pop
{pop}
ifelse
count
/restCount exch def
/@opStackLevel @opStackLevel 1 add def
countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put
/@dictStackLevel @dictStackLevel 1 add def
@vmState setglobal
}bind def
/@_RestoreStackLevels
Adobe_CoolType_Data
begin
/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get
begin
count restCount sub dup 0 gt
{{pop}repeat}
{pop}
ifelse
args 0 argCount getinterval{}forall
/@dictStackLevel @dictStackLevel 1 sub def
@dictStackCountByLevel @dictStackLevel get
countdictstack exch sub dup 0 gt
{{end}repeat}
{pop}
ifelse
}bind def
/@_PopStackLevels
Adobe_CoolType_Data
begin
/@opStackLevel @opStackLevel 1 sub def
/@dictStackLevel @dictStackLevel 1 sub def
}bind def
/@Raise
exch cvx exch errordict exch get exec
stop
}bind def
/@ReRaise
cvx $error/errorname get errordict exch get exec
stop
}bind def
/@Stopped
0 @#Stopped
}bind def
/@#Stopped
@_SaveStackLevels
stopped
{@_RestoreStackLevels true}
{@_PopStackLevels false}
ifelse
}bind def
/@Arg
Adobe_CoolType_Data
begin
@opStackCountByLevel @opStackLevel 1 sub get
begin
args exch
argCount 1 sub exch sub get
}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
Level2?
1 dict dup
/@shouldNotDisappearDictValue true def
Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
begin
count @_SaveStackLevels
{(*){pop stop}128 string/Category resourceforall}
stopped pop
@_RestoreStackLevels
currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
 /@shouldNotDisappearDictValue known
currentdict 1 index eq
{pop exit}
 loop
 pop
 end
ifelse
{false}
ifelse
true setglobal
/CTHasResourceStatusBug
Level2?
mark
{/steveamerige/Category resourcestatus}
stopped
{cleartomark true}
{cleartomark currentglobal not}
ifelse
{false}
ifelse
setglobal
/CTResourceStatus
mark 3 1 roll
/Category findresource
begin
({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
{cleartomark false}
{{3 2 roll pop true}{cleartomark false}ifelse}
ifelse
}bind def
/CTWorkAroundBugs
Level2?
/cid_PreLoad/ProcSet resourcestatus
pop pop
currentglobal
mark
dup/CMap CTHasResourceStatusBug
{CTResourceStatus}
{resourcestatus}
ifelse
pop dup 0 eq exch 1 eq or
dup/CMap findresource gcheck setglobal
/CMap undefineresource
pop CTHasResourceForAllBug
{exit}
{stop}
ifelse
ifelse
{pop}
ifelse
128 string/CMap resourceforall
stopped
{cleartomark}
stopped pop
setglobal
}bind def
Adobe_CoolType_Core
begin
CTWorkAroundBugs
/mo/moveto load def
/nf/newencodedfont load def
/msf{makefont setfont}bind def
/uf{dup undefinefont ct_VMDictUndef}bind def
/ur/undefineresource load def
/chp/charpath load def
/awsh/awidthshow load def
/wsh/widthshow load def
/ash/ashow load def
/@xshow/xshow load def
/@yshow/yshow load def
/@xyshow/xyshow load def
/@cshow/cshow load def
/sh/show load def
/rp/repeat load def
/.n/.notdef def
currentglobal false setglobal
 userdict/Adobe_CoolType_Data 2 copy known not
 {2 copy 10 dict put}
begin
/AddWidths? false def
/CC 0 def
/charcode 2 string def
/@opStackCountByLevel 32 dict def
/@opStackLevel 0 def
/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def
/InVMFontsByCMap 10 dict def
/InVMDeepCopiedFonts 10 dict def
setglobal
}bind def
currentdict Adobe_CoolType_Core eq
{end}
}bind def
Adobe_CoolType_Core begin
Adobe_CoolType_GVMFonts begin
Adobe_CoolType_LVMFonts begin
SharedFontDirectory begin
}bind def
}bind def
/unload
systemdict/languagelevel known
systemdict/languagelevel get 2 ge
userdict/Adobe_CoolType_Core 2 copy known
{undef}
{pop pop}
ifelse
}bind def
/ndf
1 index where
{pop pop pop}
{dup xcheck{bind}if def}
ifelse
}def
/findfont systemdict
begin
userdict
begin
/globaldict where{/globaldict get begin}if
dup where pop exch get
/globaldict where{pop end}if
Adobe_CoolType_Core_Defined
{/systemfindfont exch def}
/findfont 1 index def
/systemfindfont exch def
ifelse
/undefinefont
{pop}ndf
/copyfont
currentglobal 3 1 roll
1 index gcheck setglobal
dup null eq{0}{dup length}ifelse
2 index length add 1 add dict
begin
exch
1 index/FID eq
{pop pop}
{def}
ifelse
forall
dup null eq
{pop}
{{def}forall}
ifelse
currentdict
exch setglobal
}bind def
/copyarray
currentglobal exch
dup gcheck setglobal
dup length array copy
exch setglobal
}bind def
/newencodedfont
currentglobal
SharedFontDirectory 3 index known
{SharedFontDirectory 3 index get/FontReferenced known}
{false}
ifelse
FontDirectory 3 index known
{FontDirectory 3 index get/FontReferenced known}
SharedFontDirectory 3 index known
{SharedFontDirectory 3 index get/FontReferenced known}
{false}
ifelse
ifelse
ifelse
3 index findfont/FontReferenced get
2 index dup type/nametype eq
{findfont}
if ne
{pop false}
1 index dup type/nametype eq
{findfont}
dup/CharStrings known
/CharStrings get length
4 index findfont/CharStrings get length
pop false
{pop}
ifelse
1 index findfont
/Encoding get exch
0 1 255
{2 copy get 3 index 3 1 roll put}
pop pop pop
currentglobal
 4 1 roll
dup type/nametype eq
 {findfont}
 dup gcheck setglobal
dup dup maxlength 2 add dict
begin
exch
1 index/FID ne
2 index/Encoding ne and
{def}
{pop pop}
ifelse
forall
/FontReferenced exch def
/Encoding exch dup length array copy def
/FontName 1 index dup type/stringtype eq{cvn}if def dup
currentdict
definefont ct_VMDictPut
setglobal
ifelse
}bind def
/SetSubstituteStrategy
$SubstituteFont
begin
dup type/dicttype ne
{0 dict}
currentdict/$Strategies known
exch $Strategies exch 
2 copy known
2 copy maxlength exch maxlength add dict
begin
{def}forall
{def}forall
currentdict
dup/$Init known
{dup/$Init get exec}
/$Strategy exch def
{pop pop pop}
ifelse
{pop pop}
ifelse
}bind def
/scff
$SubstituteFont
begin
dup type/stringtype eq
{dup length exch}
{null}
ifelse
/$sname exch def
/$slen exch def
/$inVMIndex
$sname null eq
1 index $str cvs
dup length $slen sub $slen getinterval cvn
{$sname}
ifelse def
{findfont}
@Stopped
dup length 8 add string exch
1 index 0(BadFont:)putinterval
1 index exch 8 exch dup length string cvs putinterval cvn
{findfont}
@Stopped
{pop/Courier findfont}
$SubstituteFont
begin
/$sname null def
/$slen 0 def
/$inVMIndex null def
}bind def
/isWidthsOnlyFont
dup/WidthsOnly known
{pop pop true}
dup/FDepVector known
{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
dup/FDArray known
{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
{pop}
ifelse
ifelse
ifelse
}bind def
/ct_StyleDicts 4 dict dup begin
 /Adobe-Japan1 4 dict dup begin
 Level2?
/Serif
/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
{pop pop/HeiseiMin-W3}
/CIDFont/Category resourcestatus
pop pop
/HeiseiMin-W3/CIDFont resourcestatus
{pop pop/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
{/Ryumin-Light}
ifelse
ifelse
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
{pop pop/HeiseiKakuGo-W5}
/CIDFont/Category resourcestatus
pop pop
/HeiseiKakuGo-W5/CIDFont resourcestatus
{pop pop/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
{/GothicBBB-Medium}
ifelse
ifelse
/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
{pop pop/HeiseiMaruGo-W4}
/CIDFont/Category resourcestatus
pop pop
/HeiseiMaruGo-W4/CIDFont resourcestatus
{pop pop/HeiseiMaruGo-W4}
/Jun101-Light-RKSJ-H/Font resourcestatus
{pop pop/Jun101-Light}
{SansSerif}
ifelse
ifelse
/Jun101-Light-RKSJ-H/Font resourcestatus
{pop pop/Jun101-Light}
{SansSerif}
ifelse
ifelse
ifelse
/RoundSansSerif exch def
/Default Serif def
/Serif/Ryumin-Light def
/SansSerif/GothicBBB-Medium def
(fonts/Jun101-Light-83pv-RKSJ-H)status
}stopped
{pop}{
 {pop pop pop pop/Jun101-Light}
 {SansSerif}
 ifelse
 /RoundSansSerif exch def
}ifelse
/Default Serif def
 ifelse
 end
 def
 /Adobe-Korea1 4 dict dup begin
/Serif/HYSMyeongJo-Medium def
/SansSerif/HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
 end
 def
 /Adobe-GB1 4 dict dup begin
/Serif/STSong-Light def
/SansSerif/STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
 end
 def
 /Adobe-CNS1 4 dict dup begin
/Serif/MKai-Medium def
/SansSerif/MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
 end
 def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
}bind def
/ct_Type0WidthProc 
 dup stringwidth 0 0 moveto 
 2 index true charpath pathbbox
 0 -1 
 7 index 2 div .88 
 setcachedevice2
 pop
}bind def
/ct_Type0WMode1WidthProc 
 dup stringwidth 
 pop 2 div neg -0.88
2 copy
moveto 
0 -1
 5 -1 roll true charpath pathbbox
 setcachedevice
}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
 11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def 
/_setwidthProc/ct_BoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup 
_setwidthProc
3 copy 
moveto
show
_basefonto setfont
moveto
show
}bind def
 currentdict
 end 
systemdict/composefont known
/ct_DefineIdentity-H
/Identity-H/CMap resourcestatus
pop pop
/CIDInit/ProcSet findresource begin
 12 dict begin
 begincmap
 /CIDSystemInfo 3 dict dup begin
 /Registry(Adobe)def
 /Ordering(Identity)def
 /Supplement 0 def
 end def
 /CMapName/Identity-H def
 /CMapVersion 1.000 def
 /CMapType 1 def
 1 begincodespacerange
 <0000><FFFF>
 endcodespacerange
 1 begincidrange
 <0000><FFFF>0
 endcidrange
 endcmap
 CMapName currentdict/CMap defineresource pop
 end
 end
 ifelse
/ct_BoldBaseCIDFont 
 11 dict begin
/CIDFontType 1 def
/CIDFontName/ct_BoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc/ct_Type0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy 
moveto
show
_basefonto setfont
moveto
show
}bind def
 currentdict
 end 
Level2?{setglobal}if
/ct_CopyFont{
1 index/FID ne 2 index/UniqueID ne and
{def}{pop pop}ifelse
}forall
}bind def
/ct_Type0CopyFont 
exch
dup length dict
begin
ct_CopyFont
exch
FDepVector 
 dup/FontType get 0 eq
1 index ct_Type0CopyFont 
/_ctType0 exch definefont
/_ctBaseFont exch
2 index exec
 ifelse 
 exch
forall 
/FDepVector exch def
currentdict
}bind def
/ct_MakeBoldFont
 dup/ct_SyntheticBold known
dup length 3 add dict begin 
ct_CopyFont 
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
/ct_SyntheticBold true def
currentdict 
end 
definefont
dup dup length 3 add dict
begin
ct_CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
definefont
dup/FontType get dup 9 ge exch 11 le and 
ct_BoldBaseCIDFont
dup length 3 add dict copy begin
dup/CIDSystemInfo get/CIDSystemInfo exch def
ct_DefineIdentity-H
/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
/_basefont exch def
/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
/_basefonto exch def
currentdict
/CIDFont defineresource
ct_BoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
definefont
ifelse
ifelse
}bind def
/ct_MakeBold{
1 index 
1 index
findfont
currentglobal 5 1 roll
dup gcheck setglobal
 /FontType get 0 eq
dup/WMode known{dup/WMode get 1 eq}{false}ifelse
version length 4 ge
{version 0 4 getinterval cvi 2015 ge}
{true}
ifelse 
{/ct_Type0WidthProc}
{/ct_Type0WMode1WidthProc}
ifelse
ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
{ct_MakeBoldFont}ct_Type0CopyFont definefont
dup/_fauxfont known not 1 index/SubstMaster known not and
 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
 ct_MakeBoldFont 
2 index 2 index eq
{exch pop
dup length dict begin
ct_CopyFont
currentdict
definefont 
ifelse
ifelse
 ifelse
 pop pop pop
 setglobal
}bind def
/?str1 256 string def
/?set
$SubstituteFont
begin
/$substituteFound false def
/$fontname 1 index def
/$doSmartSub false def
 findfont
$SubstituteFont
begin
$substituteFound
{false}
dup/FontName known
dup/FontName get $fontname eq
1 index/DistillerFauxFont known not and
/currentdistillerparams where
{pop false 2 index isWidthsOnlyFont not and}
{false}
ifelse
ifelse
exch pop
/$doSmartSub true def
5 1 roll pop pop pop pop
findfont
1 index
findfont
dup/FontType get 3 eq
6 1 roll pop pop pop pop pop false
{pop true}
ifelse
$SubstituteFont
begin
pop pop
/$styleArray 1 index def
/$regOrdering 2 index def
pop pop
0 1 $styleArray length 1 sub
$styleArray exch get
ct_StyleDicts $regOrdering
2 copy known
exch 2 copy known not
{pop/Default}
dup type/nametype eq
?str1 cvs length dup 1 add exch
?str1 exch(-)putinterval
exch dup length exch ?str1 exch 3 index exch putinterval
add ?str1 exch 0 exch getinterval cvn
pop pop/Unknown
ifelse
pop pop pop pop/Unknown
ifelse
findfont 
ifelse
currentglobal false setglobal 3 1 roll
null copyfont definefont pop
setglobal
}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
begin
/SubstituteFont
dup $error exch 2 copy known
{get}
{pop pop{pop/Courier}bind}
ifelse def
/currentdistillerparams where dup
pop pop
currentdistillerparams/CannotEmbedFontPolicy 2 copy known
{get/Error eq}
{pop pop false}
ifelse
if not
countdictstack array dictstack 0 get
begin
userdict
begin
$SubstituteFont
begin
/$str 128 string def
/$fontpat 128 string def
/$slen 0 def
/$sname null def
/$match false def
/$fontname null def
/$substituteFound false def
/$inVMIndex null def
/$doSmartSub true def
/$depth 0 def
/$fontname null def
/$italicangle 26.5 def
/$dstack null def
/$Strategies 10 dict dup
begin
/$Type3Underprint
currentglobal exch false setglobal
11 dict
begin
/UseFont exch
$WMode 0 ne
dup length dict copy
dup/WMode $WMode put
/UseFont exch definefont
if def
/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def
/FontMatrix[.001 0 0 .001 0 0]def
/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
/FontBBox[0 0 0 0]def
/CCInfo 7 dict dup
begin
/cc null def
/x 0 def
/y 0 def
end def
/BuildChar
exch
begin
CCInfo
begin
1 string dup 0 3 index put exch pop
/cc exch def
UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def
x y setcharwidth
$SubstituteFont/$Strategy get/$Underprint get exec
0 0 moveto cc show
x y moveto
}bind def
currentdict
exch setglobal
}bind def
/$GetaTint
2 dict dup
begin
/$BuildFont
dup/WMode known
{dup/WMode get}
ifelse
/$WMode exch def
$fontname exch
dup/FontName known
dup/FontName get
dup type/stringtype eq{cvn}if
{/unnamedfont}
ifelse
exch
Adobe_CoolType_Data/InVMDeepCopiedFonts get
1 index/FontName get known
Adobe_CoolType_Data/InVMDeepCopiedFonts get
1 index get
null copyfont
{$deepcopyfont}
ifelse
exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put
definefont
Adobe_CoolType_Data/InVMDeepCopiedFonts get
begin
dup/FontBasedOn get 1 index def
}bind def
/$Underprint
gsave
x abs y abs gt
{/y 1000 def}
{/x -1000 def 500 120 translate}
ifelse
Level2?
[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
setcolorspace
{0 setgray}
ifelse
10 setlinewidth
x .8 mul
[7 3]
y mul 8 div 120 sub x 10 div exch moveto
0 y 4 div neg rlineto
dup 0 rlineto
0 y 4 div rlineto
closepath
gsave
Level2?
{.2 setcolor}
{.8 setgray}
ifelse
fill grestore
stroke
forall
grestore
}bind def
end def
/$Oblique
1 dict dup
begin
/$BuildFont
currentglobal exch dup gcheck setglobal
null copyfont
begin
/FontBasedOn
currentdict/FontName known
FontName
dup type/stringtype eq{cvn}if
{/unnamedfont}
ifelse
/FontName $fontname dup type/stringtype eq{cvn}if def
/currentdistillerparams where
{pop}
/FontInfo currentdict/FontInfo known
{FontInfo null copyfont}
{2 dict}
ifelse
begin
/ItalicAngle $italicangle def
/FontMatrix FontMatrix
[1 0 ItalicAngle dup sin exch cos div 1 0 0]
matrix concatmatrix readonly
4 2 roll def
ifelse
FontName currentdict
definefont
exch setglobal
}bind def
end def
/$None
1 dict dup
begin
/$BuildFont{}bind def
end def
end def
/$Oblique SetSubstituteStrategy
/$findfontByEnum
dup type/stringtype eq{cvn}if
dup/$fontname exch def
$sname null eq
{$str cvs dup length $slen sub $slen getinterval}
{pop $sname}
ifelse
$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
/$match false def
$SubstituteFont/$dstack countdictstack array dictstack put
mark
$fontpat 0 $slen 7 add getinterval
{/$match exch def exit}
$str filenameforall
stopped
cleardictstack
currentdict
true
$SubstituteFont/$dstack get
exch
1 index eq
{pop false}
{true}
ifelse
{begin false}
ifelse
forall
cleartomark
/$slen 0 def
$match false ne
{$match(fonts/)anchorsearch pop pop cvn}
{/Courier}
ifelse
}bind def
/$ROS 1 dict dup
begin
/Adobe 4 dict dup
begin
/Japan1 [/Ryumin-Light/HeiseiMin-W3
 /GothicBBB-Medium/HeiseiKakuGo-W5
 /HeiseiMaruGo-W4/Jun101-Light]def
/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
/GB1
 [/STSong-Light/STHeiti-Regular]def
/CNS1
[/MKai-Medium/MHei-Medium]def
end def
end def
/$cmapname null def
/$deepcopyfont
dup/FontType get 0 eq
1 dict dup/FontName/copied put copyfont
begin
/FDepVector FDepVector copyarray
0 1 2 index length 1 sub
2 copy get $deepcopyfont
dup/FontName/copied put
/copied exch definefont
3 copy put pop pop
currentdict
{$Strategies/$Type3Underprint get exec}
ifelse
}bind def
/$buildfontname
dup/CIDFont findresource/CIDSystemInfo get
begin
Registry length Ordering length Supplement 8 string cvs
3 copy length 2 add add add string
dup 5 1 roll dup 0 Registry putinterval
dup 4 index(-)putinterval
dup 4 index 1 add Ordering putinterval
4 2 roll add 1 add 2 copy(-)putinterval
1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
anchorsearch
{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
{pop pop pop pop pop}
ifelse
length
$str 1 index(-)putinterval 1 add
$str 1 index $cmapname $fontpat cvs putinterval
$cmapname length add
$str exch 0 exch getinterval cvn
}bind def
/$findfontByROS
/$fontname exch def
$ROS Registry 2 copy known
get Ordering 2 copy known
{get}
{pop pop[]}
ifelse
{pop pop[]}
ifelse
false exch
dup/CIDFont resourcestatus
pop pop
save
1 index/CIDFont findresource
dup/WidthsOnly known
{dup/WidthsOnly get}
{false}
ifelse
exch pop
exch restore
{pop}
{exch pop true exit}
ifelse
{pop}
ifelse
forall
{$str cvs $buildfontname}
false(*)
save exch
dup/CIDFont findresource
dup/WidthsOnly known
{dup/WidthsOnly get not}
{true}
ifelse
exch/CIDSystemInfo get
dup/Registry get Registry eq
exch/Ordering get Ordering eq and and
{exch restore exch pop true exit}
{pop restore}
ifelse
$str/CIDFont resourceforall
{$buildfontname}
{$fontname $findfontByEnum}
ifelse
ifelse
}bind def
currentdict/$error known currentdict/languagelevel known and dup
{pop $error/SubstituteFont known}
{$error}
{Adobe_CoolType_Core}
ifelse
begin
/SubstituteFont
/CMap/Category resourcestatus
pop pop
$SubstituteFont
begin
/$substituteFound true def
dup length $slen gt
$sname null ne or
$slen 0 gt and
$sname null eq
{dup $str cvs dup length $slen sub $slen getinterval cvn}
{$sname}
ifelse
Adobe_CoolType_Data/InVMFontsByCMap get
1 index 2 copy known
false exch
currentglobal
GlobalFontDirectory 1 index known
{exch pop true exit}
{pop}
ifelse
FontDirectory 1 index known
{exch pop true exit}
GlobalFontDirectory 1 index known
{exch pop true exit}
{pop}
ifelse
ifelse
ifelse
forall
{pop pop false}
ifelse
exch pop exch pop
dup/CMap resourcestatus
pop pop
dup/$cmapname exch def
/CMap findresource/CIDSystemInfo get{def}forall
$findfontByROS
128 string cvs
dup(-)search
3 1 roll search
3 1 roll pop
{dup cvi}
stopped
{pop pop pop pop pop $findfontByEnum}
4 2 roll pop pop
exch length
exch
2 index length
2 index
exch 1 sub -1 0
$str cvs dup length
4 index
4 index
4 3 roll add
getinterval
exch 1 index exch 3 index exch
putinterval
dup/CMap resourcestatus
pop pop
4 1 roll pop pop pop
dup/$cmapname exch def
/CMap findresource/CIDSystemInfo get{def}forall
$findfontByROS
true exit
{pop}
ifelse
dup type/booleantype eq
{pop}
{pop pop pop $findfontByEnum}
ifelse
ifelse
{pop pop pop $findfontByEnum}
ifelse
{pop pop $findfontByEnum}
ifelse
ifelse
ifelse
{//SubstituteFont exec}
ifelse
/$slen 0 def
$SubstituteFont
begin
/$substituteFound true def
dup length $slen gt
$sname null ne or
$slen 0 gt and
{$findfontByEnum}
{//SubstituteFont exec}
ifelse
ifelse
bind readonly def
Adobe_CoolType_Core/scfindfont/systemfindfont load put
/scfindfont
$SubstituteFont
begin
dup systemfindfont
dup/FontName known
{dup/FontName get dup 3 index ne}
{/noname true}
ifelse
/$origfontnamefound 2 index def
/$origfontname 4 index def/$substituteFound true def
exch pop
$slen 0 gt
$sname null ne
3 index length $slen gt or and
pop dup $findfontByEnum findfont
dup maxlength 1 add dict
begin
{1 index/FID eq{pop pop}{def}ifelse}
forall
currentdict
definefont
dup/FontName known{dup/FontName get}{null}ifelse
$origfontnamefound ne
$origfontname $str cvs print
( substitution revised, using )print
dup/FontName known
{dup/FontName get}{(unspecified font)}
ifelse
$str cvs print(.\n)print
{exch pop}
ifelse
{exch pop}
ifelse
}bind def
ifelse
Adobe_CoolType_Core_Defined not
Adobe_CoolType_Core/findfont
$SubstituteFont
begin
$depth 0 eq
/$fontname 1 index dup type/stringtype ne{$str cvs}if def
/$substituteFound false def
/$depth $depth 1 add def
scfindfont
$SubstituteFont
begin
/$depth $depth 1 sub def
$substituteFound $depth 0 eq and
$inVMIndex null ne
{dup $inVMIndex $AddInVMFont}
$doSmartSub
currentdict/$Strategy known
{$Strategy/$BuildFont get exec}
}bind put
/$AddInVMFont
exch/FontName 2 copy known
1 dict dup begin exch 1 index gcheck def end exch
Adobe_CoolType_Data/InVMFontsByCMap get exch
$DictAdd
{pop pop pop}
ifelse
}bind def
/$DictAdd
2 copy known not
{2 copy 4 index length dict put}
Level2? not
2 copy get dup maxlength exch length 4 index length add lt
2 copy get dup length 4 index length add exch maxlength 1 index lt
2 mul dict
begin
2 copy get{forall}def
2 copy currentdict put
{pop}
ifelse
begin
{def}
forall
}bind def
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
{currentglobal false setglobal}
{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
{2 copy get dup maxlength 27 add dict copy}
{27 dict}
ifelse put
Adobe_CoolType_Utility
begin
/@eexecStartData
 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
/@recognizeCIDFont null def
/ct_Level2? exch def
/ct_Clone? 1183615869 internaldict dup
/CCRun known not
exch/eCCRun known not
ct_Level2? and or def
ct_Level2?
{globaldict begin currentglobal true setglobal}
/ct_AddStdCIDMap
ct_Level2?
mark
Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
((Hex)57 StartData
 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
stopped
 cleartomark
 Adobe_CoolType_Utility/@recognizeCIDFont get
 countdictstack dup array dictstack
 exch 1 sub -1 0
 2 copy get 3 index eq
{1 index length exch sub 1 sub{end}repeat exit}
{pop}
 ifelse
 for
 pop pop
 Adobe_CoolType_Utility/@eexecStartData get eexec
{cleartomark}
ifelse
Adobe_CoolType_Utility/@eexecStartData get eexec
ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
 cid_extensions
 begin
/cid_GetCIDSystemInfo
 1 index type/stringtype eq
{exch cvn exch}
 cid_extensions
 begin
 dup load 2 index known
 2 copy
 cid_GetStatusInfo
 dup null ne
 1 index load
 3 index get
 dup null eq
 {pop pop cid_UpdateDB}
 exch
 1 index/Created get eq
 {exch pop exch pop}
 {pop cid_UpdateDB}
 ifelse
 ifelse
{pop cid_UpdateDB}
 ifelse
{cid_UpdateDB}
 ifelse
 end
}bind def
 end
ct_Level2?
{end setglobal}
/ct_UseNativeCapability? systemdict/composefont known def
/ct_MakeOCF 35 dict def
/ct_Vars 25 dict def
/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup
begin
/charcode 2 string def
/dst_string 1500 string def
/nullstring()def
/usewidths? true def
end def
ct_Level2?{setglobal}{pop}ifelse
ct_GlyphDirProcs
begin
/GetGlyphDirectory
systemdict/languagelevel known
{pop/CIDFont findresource/GlyphDirectory get}
1 index/CIDFont findresource/GlyphDirectory
get dup type/dicttype eq
dup dup maxlength exch length sub 2 index lt
dup length 2 index add dict copy 2 index
/CIDFont findresource/GlyphDirectory 2 index put
exch pop exch pop
ifelse
}def
systemdict/languagelevel known
currentglobal false setglobal
3 dict begin
/vm exch def
{1 dict begin}
ifelse
/$ exch def
systemdict/languagelevel known
vm setglobal
/gvm currentglobal def
$ gcheck setglobal
?{$ begin}if
}def
/?{$ type/dicttype eq}def
userdict/Adobe_CoolType_Data known
Adobe_CoolType_Data/AddWidths? known
 currentdict Adobe_CoolType_Data
begin
 begin
AddWidths?
Adobe_CoolType_Data/CC 3 index put
?{def}{$ 3 1 roll put}ifelse
CC charcode exch 1 index 0 2 index 256 idiv put
1 index exch 1 exch 256 mod put
stringwidth 2 array astore
currentfont/Widths get exch CC exch put
{?{def}{$ 3 1 roll put}ifelse}
ifelse
{?{def}{$ 3 1 roll put}ifelse}
ifelse
{?{def}{$ 3 1 roll put}ifelse}
ifelse
}def
?{end}if
systemdict/languagelevel known
{gvm setglobal}
}def
/:{string currentfile exch readstring pop}executeonly def
ct_MakeOCF
begin
/ct_cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def
/ct_mkocfStr100 100 string def
/ct_defaultFontMtx[.001 0 0 .001 0 0]def
/ct_1000Mtx[1000 0 0 1000 0 0]def
/ct_raise{exch cvx exch errordict exch get exec stop}bind def
/ct_reraise
{cvx $error/errorname get(Error: )print dup(
 )cvs print
errordict exch get exec stop
}bind def
/ct_cvnsi
1 index add 1 sub 1 exch 0 4 1 roll
2 index exch get
exch 8 bitshift
exch pop
}bind def
/ct_GetInterval
Adobe_CoolType_Utility/ct_BuildCharDict get
begin
/dst_index 0 def
dup dst_string length gt
{dup string/dst_string exch def}
1 index ct_CID_STR_SIZE idiv
/arrayIndex exch def
2 index arrayIndex get
2 index
arrayIndex ct_CID_STR_SIZE mul
dup 3 index add 2 index length le
2 index getinterval
dst_string dst_index 2 index putinterval
length dst_index add/dst_index exch def
exit
1 index length 1 index sub
dup 4 1 roll
getinterval
dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def
/arrayIndex arrayIndex 1 add def
2 index dup length arrayIndex gt
 {arrayIndex get}
 pop
 exit
ifelse
ifelse
loop
pop pop pop
dst_string 0 dst_index getinterval
}bind def
ct_Level2?
/ct_resourcestatus
currentglobal mark true setglobal
{/unknowninstancename/Category resourcestatus}
stopped
{cleartomark setglobal true}
{cleartomark currentglobal not exch setglobal}
ifelse
mark 3 1 roll/Category findresource
begin
ct_Vars/vm currentglobal put
({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
{cleartomark false}
{{3 2 roll pop true}{cleartomark false}ifelse}
ifelse
ct_Vars/vm get setglobal
{{resourcestatus}}
ifelse bind def
/CIDFont/Category ct_resourcestatus
{pop pop}
currentglobal true setglobal
/Generic/Category findresource
dup length dict copy
dup/InstanceType/dicttype put
/CIDFont exch/Category defineresource pop
setglobal
ifelse
ct_UseNativeCapability?
/CIDInit/ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo 3 dict dup begin
 /Registry(Adobe)def
 /Ordering(Identity)def
 /Supplement 0 def
end def
/CMapName/Identity-H def
/CMapVersion 1.000 def
/CMapType 1 def
1 begincodespacerange
<0000><FFFF>
endcodespacerange
1 begincidrange
<0000><FFFF>0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
/ct_Category 2 dict begin
/CIDFont 10 dict def
/ProcSet
2 dict def
currentdict
/defineresource
ct_Category 1 index 2 copy known
dup dup maxlength exch length eq
dup length 10 add dict copy
ct_Category 2 index 2 index put
3 index 3 index put
pop exch pop
{pop pop/defineresource/undefined ct_raise}
ifelse
}bind def
/findresource
ct_Category 1 index 2 copy known
2 index 2 copy known
{get 3 1 roll pop pop}
{pop pop/findresource/undefinedresource ct_raise}
ifelse
{pop pop/findresource/undefined ct_raise}
ifelse
}bind def
/resourcestatus
ct_Category 1 index 2 copy known
2 index known
exch pop exch pop
0 -1 true
false
ifelse
{pop pop/findresource/undefined ct_raise}
ifelse
}bind def
/ct_resourcestatus/resourcestatus load def
ifelse
/ct_CIDInit 2 dict
begin
/ct_cidfont_stream_init
dup(Binary)eq
null
currentfile
ct_Level2?
{cid_BYTE_COUNT()/SubFileDecode filter}
stopped
{pop pop pop}
/readstring load
exit
dup(Hex)eq
currentfile
ct_Level2?
{null exch/ASCIIHexDecode filter/readstring}
stopped
{pop exch pop(>)exch/readhexstring}
{(>)exch/readhexstring}
ifelse
load
exit
/StartData/typecheck ct_raise
loop
cid_BYTE_COUNT ct_CID_STR_SIZE le
2 copy cid_BYTE_COUNT string exch exec
1 array dup
3 -1 roll
0 exch put
cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
dup array exch 2 sub 0 exch 1 exch
2 copy
5 index
ct_CID_STR_SIZE
string
6 index exec
2 index
cid_BYTE_COUNT ct_CID_STR_SIZE mod string
3 index exec
1 index exch
1 index length 1 sub
exch put
ifelse
cid_CIDFONT exch/GlyphData exch put
2 index null eq
pop pop pop
pop/readstring load
1 string exch
3 copy exec
dup length 0 eq
pop pop pop pop pop
true exit
4 index
pop pop pop pop
false exit
loop
ifelse
}bind def
/StartData
mark
currentdict
dup/FDArray get 0 get/FontMatrix get
0 get 0.001 eq
dup/CDevProc known not
/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
{get}
pop pop
{pop pop pop pop pop 0 -1000 7 index 2 div 880}
ifelse
/CDevProc
 pop pop pop pop pop
 1 cid_temp/cid_CIDFONT get
/FDArray get 0 get
/FontMatrix get 0 get div
 7 index 2 div
 1 index 0.88 mul
}def
ifelse
/cid_temp 15 dict def
cid_temp
begin
/cid_CIDFONT exch def
3 copy pop
dup/cid_BYTE_COUNT exch def 0 gt
ct_cidfont_stream_init
FDArray
/Private get
dup/SubrMapOffset known
begin
/Subrs SubrCount array def
Subrs
SubrMapOffset
SubrCount
SDBytes
ct_Level2?
currentdict dup/SubrMapOffset undef
dup/SubrCount undef
/SDBytes undef
/cid_SD_BYTES exch def
/cid_SUBR_COUNT exch def
/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def
cid_SUBR_COUNT 0 gt
GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
0 cid_SD_BYTES ct_cvnsi
0 1 cid_SUBR_COUNT 1 sub
exch 1 index
1 add
cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
GlyphData exch cid_SD_BYTES ct_GetInterval
0 cid_SD_BYTES ct_cvnsi
cid_SUBRS 4 2 roll
GlyphData exch
4 index
1 index
ct_GetInterval
dup length string copy put
{pop}
ifelse
forall
cleartomark pop pop
CIDFontName currentdict/CIDFont defineresource pop
end end
stopped
{cleartomark/StartData ct_reraise}
}bind def
currentdict
end def
/ct_saveCIDInit
/CIDInit/ProcSet ct_resourcestatus
{true}
{/CIDInitC/ProcSet ct_resourcestatus}
ifelse
pop pop
/CIDInit/ProcSet findresource
ct_UseNativeCapability?
{pop null}
{/CIDInit ct_CIDInit/ProcSet defineresource pop}
ifelse
{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
ifelse
ct_Vars exch/ct_oldCIDInit exch put
}bind def
/ct_restoreCIDInit
ct_Vars/ct_oldCIDInit get dup null ne
{/CIDInit exch/ProcSet defineresource pop}
{pop}
ifelse
}bind def
/ct_BuildCharSetUp
1 index
begin
CIDFont
begin
Adobe_CoolType_Utility/ct_BuildCharDict get
begin
/ct_dfCharCode exch def
/ct_dfDict exch def
CIDFirstByte ct_dfCharCode add
dup CIDCount ge
{pop 0}
/cid exch def
GlyphDirectory cid 2 copy known
{get}
{pop pop nullstring}
ifelse
dup length FDBytes sub 0 gt
FDBytes 0 ne
{0 FDBytes ct_cvnsi}
{pop 0}
ifelse
/fdIndex exch def
dup length FDBytes sub FDBytes exch getinterval
/charstring exch def
exit
cid 0 eq
{/charstring nullstring def exit}
/cid 0 def
ifelse
loop
}def
/ct_SetCacheDevice
0 0 moveto
dup stringwidth
3 -1 roll
true charpath
pathbbox
0 -1000
7 index 2 div 880
setcachedevice2
0 0 moveto
}def
/ct_CloneSetCacheProc
1 eq
stringwidth
pop -2 div -880
0 -1000 setcharwidth
moveto
usewidths?
currentfont/Widths get cid
2 copy known
{get exch pop aload pop}
{pop pop stringwidth}
ifelse
{stringwidth}
ifelse
setcharwidth
0 0 moveto
ifelse
}def
/ct_Type3ShowCharString
ct_FDDict fdIndex 2 copy known
{get}
currentglobal 3 1 roll
1 index gcheck setglobal
ct_Type1FontTemplate dup maxlength dict copy
begin
FDArray fdIndex get
dup/FontMatrix 2 copy known
{get}
{pop pop ct_defaultFontMtx}
ifelse
/FontMatrix exch dup length array copy def
/Private get
/Private exch def
/Widths rootfont/Widths get def
/CharStrings 1 dict dup/.notdef
<d841272cf18f54fc13>dup length string copy put def
currentdict
/ct_Type1Font exch definefont
dup 5 1 roll put
setglobal
ifelse
dup/CharStrings get 1 index/Encoding get
ct_dfCharCode get charstring put
rootfont/WMode 2 copy known
{get}
{pop pop 0}
ifelse
exch
1000 scalefont setfont
ct_str1 0 ct_dfCharCode put
ct_str1 exch ct_dfSetCacheProc
ct_SyntheticBold
currentpoint
ct_str1 show
newpath
moveto
ct_str1 true charpath
ct_StrokeWidth setlinewidth
stroke
{ct_str1 show}
ifelse
}def
/ct_Type4ShowCharString
ct_dfDict ct_dfCharCode charstring
FDArray fdIndex get
dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
{ct_1000Mtx matrix concatmatrix concat}
{pop}
ifelse
/Private get
Adobe_CoolType_Utility/ct_Level2? get not
ct_dfDict/Private
3 -1 roll
{put}
1183615869 internaldict/superexec get exec
1183615869 internaldict
Adobe_CoolType_Utility/ct_Level2? get
{1 index}
{3 index/Private get mark 6 1 roll}
ifelse
dup/RunInt known
{/RunInt get}
{pop/CCRun}
ifelse
get exec
Adobe_CoolType_Utility/ct_Level2? get not
{cleartomark}
}bind def
/ct_BuildCharIncremental
Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp
ct_ShowCharString
stopped
{stop}
}bind def
/BaseFontNameStr(BF00)def
/ct_Type1FontTemplate 14 dict
begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0]def
/FontBBox [-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def
/PaintType 0 def
currentdict
end def
/BaseFontTemplate 11 dict
begin
/FontMatrix [0.001 0 0 0.001 0 0]def
/FontBBox [-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def
/BuildChar/ct_BuildCharIncremental load def
ct_Clone?
/FontType 3 def
/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
/ct_SyntheticBold false def
/ct_StrokeWidth 1 def
/FontType 4 def
/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def
ifelse
/ct_str1 1 string def
currentdict
end def
/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq
true 0 1 5
dup 4 index exch get exch 3 index exch get eq and
dup not
{exit}
exch pop exch pop
}bind def
/ct_makeocf
15 dict
begin
exch/WMode exch def
exch/FontName exch def
/FontType 0 def
/FMapType 2 def
dup/FontMatrix known
{dup/FontMatrix get/FontMatrix exch def}
{/FontMatrix matrix def}
ifelse
/bfCount 1 index/CIDCount get 256 idiv 1 add
dup 256 gt{pop 256}if def
/Encoding
256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
bfCount 1 255{2 copy bfCount put pop}for
/FDepVector bfCount dup 256 lt{1 add}if array def
BaseFontTemplate BaseFontDictSize dict copy
begin
/CIDFont exch def
CIDFont/FontBBox known
{CIDFont/FontBBox get/FontBBox exch def}
CIDFont/CDevProc known
{CIDFont/CDevProc get/CDevProc exch def}
currentdict
BaseFontNameStr 3(0)putinterval
0 1 bfCount dup 256 eq{1 sub}if
FDepVector exch
2 index BaseFontDictSize dict copy
begin
dup/CIDFirstByte exch 256 mul def
FontType 3 eq
{/ct_FDDict 2 dict def}
currentdict
1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop
BaseFontNameStr exch definefont
ct_Clone?
{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
FontName
currentdict
definefont
ct_Clone?
gsave
dup 1000 scalefont setfont
ct_BuildCharDict
begin
/usewidths? false def
currentfont/Widths get
begin
exch/CIDFont get/GlyphDirectory get
dup charcode exch 1 index 0 2 index 256 idiv put
1 index exch 1 exch 256 mod put
stringwidth 2 array astore def
forall
/usewidths? true def
grestore
{exch pop}
ifelse
}bind def
currentglobal true setglobal
/ct_ComposeFont
ct_UseNativeCapability?
2 index/CMap ct_resourcestatus
{pop pop exch pop}
/CIDInit/ProcSet findresource
begin
12 dict
begin
begincmap
/CMapName 3 index def
/CMapVersion 1.000 def
/CMapType 1 def
exch/WMode exch def
/CIDSystemInfo 3 dict dup
begin
/Registry(Adobe)def
/Ordering
CMapName ct_mkocfStr100 cvs
(Adobe-)search
pop pop
(-)search
dup length string copy
exch pop exch pop
{pop(Identity)}
ifelse
{pop (Identity)}
ifelse
/Supplement 0 def
end def
1 begincodespacerange
<0000><FFFF>
endcodespacerange
1 begincidrange
<0000><FFFF>0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
ifelse
composefont
3 2 roll pop
0 get/CIDFont findresource
ct_makeocf
ifelse
}bind def
setglobal
/ct_MakeIdentity
ct_UseNativeCapability?
1 index/CMap ct_resourcestatus
{pop pop}
/CIDInit/ProcSet findresource begin
12 dict begin
begincmap
/CMapName 2 index def
/CMapVersion 1.000 def
/CMapType 1 def
/CIDSystemInfo 3 dict dup
begin
/Registry(Adobe)def
/Ordering
CMapName ct_mkocfStr100 cvs
(Adobe-)search
pop pop
(-)search
{dup length string copy exch pop exch pop}
{pop(Identity)}
ifelse
{pop(Identity)}
ifelse
/Supplement 0 def
end def
1 begincodespacerange
<0000><FFFF>
endcodespacerange
1 begincidrange
<0000><FFFF>0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
ifelse
composefont
exch pop
0 get/CIDFont findresource
ct_makeocf
ifelse
}bind def
currentdict readonly pop
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
 version
 cvi
 2015
}bind def
/AllocGlyphStorage
 Is2015?
{string}forall
 }ifelse
}bind def
/Type42DictBegin
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
 /.notdef 0 def
 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
Is2015?
/GlyphDirectory 
 dict def
 sfnts 0 get
 dup
 2 index
(glyx)
 putinterval
 2 index 
(locx)
 putinterval
 pop
 pop
 pop
 pop
}ifelse
}bind def
/AddT42Char
Is2015?
/GlyphDirectory get 
begin
/sfnts get
4 index
3 index
 2 index
putinterval
}ifelse
}bind def
/T0AddT42Mtx2
/CIDFont findresource/Metrics2 get begin def end
}bind def
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
ct_CopyFont 
/Encoding Encoding dup length array copy 
4 -1 roll
0 exch put   
currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
/ct_MakeGlyphProc
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
gsave 
8 -1 roll pop 
7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
dup  9 1 roll 
currentdict /StrokeWidth 2 copy known  
{   
get 2 div   
0 ct_FontMatrix dtransform pop
5 1 roll  
4 -1 roll 4 index sub   
4 1 roll   
3 -1 roll 4 index sub  
3 1 roll   
exch 4 index add exch  
4 index add  
5 -1 roll pop  
pop pop 
ifelse  
}       
    if  
setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
exec 
end 
currentdict /StrokeWidth 2 copy known  
{ get }  
{ pop pop 0 }  
    ifelse  
setlinewidth stroke  
{   
    fill  
ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
/m {moveto} def 
/l {lineto} def 
/c {curveto} def 
/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
   2 index findfont dup length 4 add dict 
   begin 
ct_CopyFont 
/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
systemdict /languagelevel known
/ct_AddGlyphToPrinterFont {
2 copy
ct_GetGlyphOutline 3 add -1 roll restore 
ct_MakeGlyphProc 
ct_AddGlyphProc
} def
/ct_AddGlyphToPrinterFont {
    pop pop restore
Adobe_CTFauxDict /$$$FONTNAME get
/Euro
Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
ct_EuroDict exch get
ct_AddGlyphProc
} def
} ifelse
/AdobeSansMM 
556 0 24 -19 541 703 
541 628 m 
510 669 442 703 354 703 c 
201 703 117 607 101 444 c 
50 444 l 
25 372 l 
97 372 l 
97 301 l 
49 301 l 
24 229 l 
103 229 l 
124 67 209 -19 350 -19 c 
435 -19 501 25 509 32 c 
509 131 l 
492 105 417 60 343 60 c 
267 60 204 127 197 229 c 
406 229 l 
430 301 l 
191 301 l 
191 372 l 
455 372 l 
479 444 l 
194 444 l 
201 531 245 624 348 624 c 
433 624 484 583 509 534 c 
556 0 m 
ct_PSBuildGlyph
} def
/AdobeSerifMM 
500 0 10 -12 484 692 
347 298 m 
171 298 l 
170 310 170 322 170 335 c 
170 362 l 
362 362 l 
374 403 l 
172 403 l 
184 580 244 642 308 642 c 
380 642 434 574 457 457 c 
481 462 l 
474 691 l 
449 691 l 
433 670 429 657 410 657 c 
394 657 360 692 299 692 c 
204 692 94 604 73 403 c 
22 403 l 
10 362 l 
70 362 l 
69 352 69 341 69 330 c 
69 319 69 308 70 298 c 
22 298 l 
10 257 l 
73 257 l 
97 57 216 -12 295 -12 c 
364 -12 427 25 484 123 c 
458 142 l 
425 101 384 37 316 37 c 
256 37 189 84 173 257 c 
335 257 l 
500 0 m 
ct_PSBuildGlyph 
} def 
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
currentpacking
true setpacking
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples
/img nd
/sepimg nd
/devnimg nd
/idximg nd
Adobe_AGM_Core begin
Adobe_AGM_Image begin
/AGMIMG_&image systemdict/image get def
/AGMIMG_&imagemask systemdict/imagemask get def
/colorimage where{
/AGMIMG_&colorimage/colorimage ldf
}def
Adobe_AGM_Image begin
/AGMIMG_ccimage_exists{/customcolorimage where 
/Adobe_AGM_OnHost_Seps where
pop false
/Adobe_AGM_InRip_Seps where
pop false
true
}ifelse
}ifelse
false
}ifelse 
}bdf
level2{
/invert_image_samples
Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
/Decode[Decode 1 get Decode 0 get]def
}def
/knockout_image_samples
Operator/imagemask ne{
/Decode[1 1]def
}def
/invert_image_samples
{1 exch sub}currenttransfer addprocs settransfer
}def
/knockout_image_samples
{pop 1}currenttransfer addprocs settransfer
}def
}ifelse
/img/imageormask ldf
/sepimg/sep_imageormask ldf
/devnimg/devn_imageormask ldf
/idximg/indexed_imageormask ldf
/_ctype 7 def
currentdict{
dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
bind
}forall
}def
}def
}def
/AGMIMG_flushfilters
dup type/arraytype ne
{1 array astore}if
dup 0 get currentfile ne
{dup 0 get flushfile}if
dup type/filetype eq
dup status 1 index currentfile ne and
{closefile}
{pop}
ifelse
}{pop}ifelse
}forall
}def
/AGMIMG_init_common
currentdict/T known{/ImageType/T ldf currentdict/T undef}if
currentdict/W known{/Width/W ldf currentdict/W undef}if
currentdict/H known{/Height/H ldf currentdict/H undef}if
currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
currentdict/D known{/Decode/D ldf currentdict/D undef}if
currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
currentdict/O known{
/Operator/O load 1 eq{
/imagemask
/O load 2 eq{
/image 
/colorimage
}ifelse
}ifelse
currentdict/O undef
currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
/DataSource load xcheck not{
DataSource type/arraytype eq{
DataSource 0 get type/filetype eq{
/_Filters DataSource def
currentdict/MultipleDataSources known not{
/DataSource DataSource dup length 1 sub get def 
currentdict/MultipleDataSources known not{
/MultipleDataSources DataSource type/arraytype eq{
DataSource length 1 gt
{false}ifelse def
/NComponents Decode length 2 div def
currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
begin
AGMIMG_init_common
save mark
level2{
currentdict
Operator/imagemask eq{
AGMIMG_&imagemask
use_mask{
process_mask AGMIMG_&image
AGMIMG_&image
}ifelse
}ifelse
Width Height
Operator/imagemask eq{
Decode 0 get 1 eq Decode 1 get 0 eq
ImageMatrix/DataSource load
AGMIMG_&imagemask
BitsPerComponent ImageMatrix/DataSource load
AGMIMG_&image
}ifelse
}ifelse
currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
cleartomark restore
}def
/overprint_plate
currentoverprint{
0 get dup type/nametype eq{
dup/DeviceGray eq{
pop AGMCORE_black_plate not
/DeviceCMYK eq{
AGMCORE_is_cmyk_sep not
}ifelse
false exch
 AGMOHS_sepink eq or
}forall
}ifelse
pop false
}ifelse
}def
/process_mask
level3{
dup begin
/ImageType 1 def
4 dict begin
/DataDict exch def
/ImageType 3 def
/InterleaveType 3 def
/MaskDict 9 dict begin
/ImageType 1 def
/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
/NComponents 1 def
/BitsPerComponent 1 def
/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
currentdict end def
currentdict end
}def
/use_mask
dup/Mask known
{dup/Mask get}{false}ifelse
}def
/imageormask
begin
AGMIMG_init_common
SkipImageProc{
currentdict consumeimagedata
save mark
level2 AGMCORE_host_sep not and{
currentdict
Operator/imagemask eq DeviceN_PS2 not and{
imagemask
AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
[/Separation/Black/DeviceGray{}]setcolorspace
/Decode[Decode 1 get Decode 0 get]def
use_mask{
process_mask image
DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
Names convert_to_process not{
2 dict begin
/imageDict xdf
/names_index 0 def
gsave
imageDict write_image_file{
Names{
dup(None)ne{
[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
Operator imageDict read_image_file
names_index 0 eq{true setoverprint}if
/names_index names_index 1 add def
}ifelse
}forall
close_image_file
grestore
Operator/imagemask eq{
imagemask
image
}ifelse
}ifelse
Operator/imagemask eq{
imagemask
image
}ifelse
}ifelse
}ifelse
}ifelse
Width Height
Operator/imagemask eq{
Decode 0 get 1 eq Decode 1 get 0 eq
ImageMatrix/DataSource load
/Adobe_AGM_OnHost_Seps where{
pop imagemask
currentgray 1 ne{
currentdict imageormask_sys
currentoverprint not{
1 AGMCORE_&setgray
currentdict imageormask_sys
currentdict ignoreimagedata
}ifelse
}ifelse
}ifelse
BitsPerComponent ImageMatrix 
MultipleDataSources{
0 1 NComponents 1 sub{
DataSource exch get
}for
/DataSource load
}ifelse
Operator/colorimage eq{
AGMCORE_host_sep{
MultipleDataSources level2 or NComponents 4 eq and{
AGMCORE_is_cmyk_sep{
MultipleDataSources{
/DataSource DataSource 0 get xcheck
DataSource 0 get/exec cvx
DataSource 1 get/exec cvx
DataSource 2 get/exec cvx
DataSource 3 get/exec cvx
/AGMCORE_get_ink_data cvx
]cvx
DataSource aload pop AGMCORE_get_ink_data
}ifelse def
/DataSource 
Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
/DataSource load
filter_cmyk 0()/SubFileDecode filter def
}ifelse
/Decode[Decode 0 get Decode 1 get]def
/MultipleDataSources false def
/NComponents 1 def
/Operator/image def
invert_image_samples
1 AGMCORE_&setgray
currentdict imageormask_sys
currentoverprint not Operator/imagemask eq and{
1 AGMCORE_&setgray
currentdict imageormask_sys
currentdict ignoreimagedata
}ifelse
}ifelse
MultipleDataSources NComponents AGMIMG_&colorimage
}ifelse
true NComponents colorimage
}ifelse
Operator/image eq{
AGMCORE_host_sep{
/DoImage true def
currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
AGMCORE_black_plate not Operator/imagemask ne and{
/DoImage false def
currentdict ignoreimagedata
1 AGMCORE_&setgray
DoImage
{currentdict imageormask_sys}if
use_mask{
process_mask image
image
}ifelse
}ifelse
Operator/knockout eq{
pop pop pop pop pop
currentcolorspace overprint_plate not{
knockout_unitsq
}ifelse
}ifelse
}ifelse
}ifelse
cleartomark restore
}ifelse
currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
}def
/sep_imageormask
/sep_colorspace_dict AGMCORE_gget begin
CSA map_csa
begin
AGMIMG_init_common
SkipImageProc{
currentdict consumeimagedata
save mark 
AGMCORE_avoid_L2_sep_space{
/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
AGMIMG_ccimage_exists 
MappedCSA 0 get/DeviceCMYK eq and
currentdict/Components known and 
Name()ne and 
Name(All)ne and 
Operator/image eq and
AGMCORE_producing_seps not and
level2 not and
Width Height BitsPerComponent ImageMatrix 
/DataSource load/exec cvx
0 1 2 index length 1 sub{
1 index exch
2 copy get 255 xor put
}for
}/exec cvx
]cvx bind
MappedCSA 0 get/DeviceCMYK eq{
Components aload pop
0 0 0 Components aload pop 1 exch sub
}ifelse
Name findcmykcustomcolor
customcolorimage
AGMCORE_producing_seps not{
level2{
//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
/sep_tint AGMCORE_gget setcolor
currentdict imageormask
currentdict
Operator/imagemask eq{
imageormask
sep_imageormask_lev1
}ifelse
}ifelse
AGMCORE_host_sep{
Operator/knockout eq{
currentdict/ImageMatrix get concat
knockout_unitsq
currentgray 1 ne{
AGMCORE_is_cmyk_sep Name(All)ne and{
level2{
Name AGMCORE_IsSeparationAProcessColor 
Operator/imagemask eq{
//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
invert_image_samples
}ifelse
//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
[/Separation Name[/DeviceGray]
sep_colorspace_proc AGMCORE_get_ink_data
1 exch sub
}bind
]AGMCORE_&setcolorspace
/sep_tint AGMCORE_gget AGMCORE_&setcolor
}ifelse
currentdict imageormask_sys
currentdict
Operator/imagemask eq{
imageormask_sys
sep_image_lev1_sep
}ifelse
}ifelse
Operator/imagemask ne{
invert_image_samples
currentdict imageormask_sys
}ifelse
currentoverprint not Name(All)eq or Operator/imagemask eq and{
currentdict imageormask_sys 
currentoverprint not
gsave 
knockout_unitsq
grestore
currentdict consumeimagedata 
}ifelse
}ifelse
}ifelse
//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
currentcolorspace 0 get/Separation ne{
[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
/sep_tint AGMCORE_gget setcolor
currentoverprint 
MappedCSA 0 get/DeviceCMYK eq and 
Name AGMCORE_IsSeparationAProcessColor not and
//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
Name(All)ne and{
imageormask_l2_overprint
currentdict imageormask
}ifelse
}ifelse
}ifelse
}ifelse
cleartomark restore
}ifelse
currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
}def
/colorSpaceElemCnt
mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
1 dict begin
/dataSource xdf
0 1 dataSource length 1 sub{
dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
}for
]cvx bind
}bdf
/devn_alt_datasource
11 dict begin
/convProc xdf
/origcolorSpaceElemCnt xdf
/origMultipleDataSources xdf
/origBitsPerComponent xdf
/origDecode xdf
/origDataSource xdf
/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
/DataSource origMultipleDataSources
BitsPerComponent 8 idiv origDecode length 2 idiv mul string
0 1 origDecode length 2 idiv 1 sub
dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
origDataSource exch get 0()/SubFileDecode filter
BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
}for 
]bind cvx
}{origDataSource}ifelse 0()/SubFileDecode filter def
origcolorSpaceElemCnt string
0 2 origDecode length 2 sub
dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
}for
/convProc load/exec cvx
origcolorSpaceElemCnt 1 sub -1 0
/dup cvx 2/add cvx/index cvx
3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
}for
]bind cvx 0()/SubFileDecode filter
}bdf
/devn_imageormask
/devicen_colorspace_dict AGMCORE_gget begin
CSA map_csa
2 dict begin
/srcDataStrs[3 -1 roll begin
AGMIMG_init_common
currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
Width Decode length 2 div mul cvi
dup 65535 gt{1 add 2 div cvi}{exit}ifelse
}loop
string
}repeat
end]def
/dstDataStr srcDataStrs 0 get length string def
begin
AGMIMG_init_common
SkipImageProc{
currentdict consumeimagedata
save mark 
AGMCORE_producing_seps not{
level3 not{
Operator/imagemask ne{
/DataSource[[
DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def
/MultipleDataSources true def
/Decode colorSpaceElemCnt[exch{0 1}repeat]def
currentdict imageormask
AGMCORE_host_sep{
Names convert_to_process{
CSA get_csa_by_name 0 get/DeviceCMYK eq{
/DataSource
Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
devn_alt_datasource
filter_cmyk 0()/SubFileDecode filter def
/MultipleDataSources false def
/Decode[1 0]def
/DeviceGray setcolorspace
currentdict imageormask_sys
AGMCORE_report_unsupported_color_space
AGMCORE_black_plate{
/DataSource
DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
devn_alt_datasource
/MultipleDataSources false def
/Decode colorSpaceElemCnt[exch{0 1}repeat]def
currentdict imageormask_sys
gsave 
knockout_unitsq
grestore
currentdict consumeimagedata 
}ifelse
}ifelse
/devicen_colorspace_dict AGMCORE_gget/names_index known{
Operator/imagemask ne{
MultipleDataSources{
/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
/MultipleDataSources false def
/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
}ifelse
invert_image_samples
currentdict imageormask_sys
currentoverprint not Operator/imagemask eq and{
currentdict imageormask_sys 
currentoverprint not
gsave 
knockout_unitsq
grestore
currentdict consumeimagedata 
}ifelse
}ifelse
}ifelse
currentdict imageormask
}ifelse
}ifelse
cleartomark restore
}ifelse
currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
}def
/imageormask_l2_overprint
currentdict
currentcmykcolor add add add 0 eq{
currentdict consumeimagedata
level3{
currentcmykcolor 
/AGMIMG_k xdf 
/AGMIMG_y xdf 
/AGMIMG_m xdf 
/AGMIMG_c xdf
Operator/imagemask eq{
[/DeviceN[
AGMIMG_c 0 ne{/Cyan}if
AGMIMG_m 0 ne{/Magenta}if
AGMIMG_y 0 ne{/Yellow}if
AGMIMG_k 0 ne{/Black}if
]/DeviceCMYK{}]setcolorspace
AGMIMG_c 0 ne{AGMIMG_c}if
AGMIMG_m 0 ne{AGMIMG_m}if
AGMIMG_y 0 ne{AGMIMG_y}if
AGMIMG_k 0 ne{AGMIMG_k}if
setcolor
/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
[/Indexed 
/DeviceN[
AGMIMG_c 0 ne{/Cyan}if
AGMIMG_m 0 ne{/Magenta}if
AGMIMG_y 0 ne{/Yellow}if
AGMIMG_k 0 ne{/Black}if
/DeviceCMYK{
AGMIMG_k 0 eq{0}if
AGMIMG_y 0 eq{0 exch}if
AGMIMG_m 0 eq{0 3 1 roll}if
AGMIMG_c 0 eq{0 4 1 roll}if
255 div 
mark exch
dup dup
AGMIMG_k 0 ne{
/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop
counttomark 1 roll
}ifelse
AGMIMG_y 0 ne{
/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop
counttomark 1 roll
}ifelse
AGMIMG_m 0 ne{
/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop
counttomark 1 roll
}ifelse
AGMIMG_c 0 ne{
/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop
counttomark 1 roll
}ifelse
counttomark 1 add -1 roll pop
]setcolorspace
}ifelse
imageormask_sys
write_image_file{
currentcmykcolor
0 ne{
[/Separation/Black/DeviceGray{}]setcolorspace
gsave
/Black
[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
cvx modify_halftone_xfer
Operator currentdict read_image_file
grestore
0 ne{
[/Separation/Yellow/DeviceGray{}]setcolorspace
gsave
/Yellow
[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
cvx modify_halftone_xfer
Operator currentdict read_image_file
grestore
0 ne{
[/Separation/Magenta/DeviceGray{}]setcolorspace
gsave
/Magenta
[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
cvx modify_halftone_xfer
Operator currentdict read_image_file
grestore
0 ne{
[/Separation/Cyan/DeviceGray{}]setcolorspace
gsave
/Cyan 
[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
cvx modify_halftone_xfer
Operator currentdict read_image_file
grestore
close_image_file
imageormask
}ifelse
}ifelse
}ifelse
}def
/indexed_imageormask
begin
AGMIMG_init_common
save mark 
currentdict
AGMCORE_host_sep{
Operator/knockout eq{
/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
/CSA get get_csa_by_name
/Names get
}ifelse
overprint_plate not{
knockout_unitsq
Indexed_DeviceN{
/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
indexed_image_lev2_sep
currentoverprint not{
knockout_unitsq
currentdict consumeimagedata
}ifelse
AGMCORE_is_cmyk_sep{
Operator/imagemask eq{
imageormask_sys
level2{
indexed_image_lev2_sep
indexed_image_lev1_sep
}ifelse
}ifelse
currentoverprint not{
knockout_unitsq
currentdict consumeimagedata
}ifelse
}ifelse
}ifelse
level2{
Indexed_DeviceN{
/indexed_colorspace_dict AGMCORE_gget begin
/indexed_colorspace_dict AGMCORE_gget dup null ne
begin
currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
AGMCORE_in_rip_sep and{
[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
setcolorspace
{pop}ifelse
}ifelse
imageormask
Indexed_DeviceN{
Operator/imagemask eq{
imageormask
indexed_imageormask_lev1
}ifelse
}ifelse
}ifelse
cleartomark restore
currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
}def
/indexed_image_lev2_sep
/indexed_colorspace_dict AGMCORE_gget begin
begin
Indexed_DeviceN not{
currentcolorspace 
dup 1/DeviceGray put
dup 3
currentcolorspace 2 get 1 add string
0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
}for 
setcolorspace
currentdict 
Operator/imagemask eq{
AGMIMG_&imagemask
use_mask{
process_mask AGMIMG_&image
AGMIMG_&image
}ifelse
}ifelse
end end
}def
 /OPIimage
dup type/dicttype ne{
10 dict begin
/DataSource xdf
/ImageMatrix xdf
/BitsPerComponent xdf
/Height xdf
/Width xdf
/ImageType 1 def
/Decode[0 1 def]
currentdict
dup begin
/NComponents 1 cdndf
/MultipleDataSources false cdndf
/SkipImageProc{false}cdndf
/Decode[
currentcolorspace 0 get/Indexed eq{
2 BitsPerComponent exp 1 sub
}ifelse
]cdndf
/Operator/image cdndf
/sep_colorspace_dict AGMCORE_gget null eq{
imageormask
gsave
dup begin invert_image_samples end
sep_imageormask
grestore
}ifelse
 }def
/cachemask_level2
3 dict begin
/LZWEncode filter/WriteFilter xdf
/readBuffer 256 string def
/ReadFilter
currentfile
0(%EndMask)/SubFileDecode filter
/ASCII85Decode filter
/RunLengthDecode filter
ReadFilter readBuffer readstring exch
WriteFilter exch writestring
not{exit}if
}loop
WriteFilter closefile
}def
/spot_alias
/mapto_sep_imageormask 
dup type/dicttype ne{
12 dict begin
/ImageType 1 def
/DataSource xdf
/ImageMatrix xdf
/BitsPerComponent xdf
/Height xdf
/Width xdf
/MultipleDataSources false def
begin
}ifelse
/Decode[/customcolor_tint AGMCORE_gget 0]def
/Operator/image def
/SkipImageProc{false}def
currentdict 
sep_imageormask
}bdf
/customcolorimage
Adobe_AGM_Image/AGMIMG_colorAry xddf
/customcolor_tint AGMCORE_gget
/Name AGMIMG_colorAry 4 get
/CSA[/DeviceCMYK]
/TintMethod/Subtractive
/TintProc null
/MappedCSA null
/NComponents 4 
/Components[AGMIMG_colorAry aload pop pop]
setsepcolorspace
mapto_sep_imageormask
}ndf
Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
/customcolorimage
Adobe_AGM_Image/AGMIMG_override false put
current_spot_alias{dup 4 get map_alias}{false}ifelse
false set_spot_alias
/customcolor_tint AGMCORE_gget exch setsepcolorspace
mapto_sep_imageormask
true set_spot_alias
//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
}ifelse
}bdf
}def
/snap_to_device
6 dict begin
matrix currentmatrix
dup 0 get 0 eq 1 index 3 get 0 eq and
1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
0 0 transform
AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
1 1 transform
AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
itransform/AGMIMG_urY exch def/AGMIMG_urX exch def
[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
}ifelse
}def
level2 not{
/colorbuf
0 1 2 index length 1 sub{
dup 2 index exch get 
255 exch sub 
2 index 
3 1 roll 
}for
}def
/tint_image_to_color
begin
Width Height BitsPerComponent ImageMatrix 
/DataSource load
Adobe_AGM_Image begin
/AGMIMG_mbuf 0 string def
/AGMIMG_ybuf 0 string def
/AGMIMG_kbuf 0 string def
colorbuf dup length AGMIMG_mbuf length ne
dup length dup dup
/AGMIMG_mbuf exch string def
/AGMIMG_ybuf exch string def
/AGMIMG_kbuf exch string def
dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
addprocs
{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage
}def
/sep_imageormask_lev1
begin
MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
255 mul round cvi GrayLookup exch get
}currenttransfer addprocs settransfer
currentdict imageormask
/sep_colorspace_dict AGMCORE_gget/Components known{
MappedCSA 0 get/DeviceCMYK eq{
Components aload pop
0 0 0 Components aload pop 1 exch sub
}ifelse
Adobe_AGM_Image/AGMIMG_k xddf 
Adobe_AGM_Image/AGMIMG_y xddf 
Adobe_AGM_Image/AGMIMG_m xddf 
Adobe_AGM_Image/AGMIMG_c xddf 
AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
currentdict imageormask
currentcolortransfer
{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
setcolortransfer
currentdict tint_image_to_color
}ifelse
MappedCSA 0 get/DeviceGray eq{
{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
currentdict imageormask
MappedCSA 0 get/DeviceCMYK eq{
currentcolortransfer
{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
setcolortransfer 
currentdict tint_image_to_color
currentcolortransfer
{pop 1}exch addprocs 4 1 roll
{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
setcolortransfer 
currentdict tint_image_to_color
}ifelse
}ifelse
}ifelse
}ifelse
}def
/sep_image_lev1_sep
begin
/sep_colorspace_dict AGMCORE_gget/Components known{
Components aload pop
Adobe_AGM_Image/AGMIMG_k xddf 
Adobe_AGM_Image/AGMIMG_y xddf 
Adobe_AGM_Image/AGMIMG_m xddf 
Adobe_AGM_Image/AGMIMG_c xddf 
{AGMIMG_c mul 1 exch sub}
{AGMIMG_m mul 1 exch sub}
{AGMIMG_y mul 1 exch sub}
{AGMIMG_k mul 1 exch sub}
{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
}ifelse
AGMCORE_get_ink_data currenttransfer addprocs settransfer
currentdict imageormask_sys
}def
/indexed_imageormask_lev1
/indexed_colorspace_dict AGMCORE_gget begin
begin
currentdict
MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
imageormask
MappedCSA 0 get/DeviceGray eq{
{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
imageormask
MappedCSA 0 get/DeviceCMYK eq{
currentcolortransfer
{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
{4 mul HiVal mul round cvi
 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
setcolortransfer 
tint_image_to_color
currentcolortransfer
{pop 1}exch addprocs 4 1 roll
{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
{3 mul HiVal mul round cvi 
Lookup exch get HiVal div}exch addprocs 4 1 roll
setcolortransfer 
tint_image_to_color
}ifelse
}ifelse
}ifelse
end end
}def
/indexed_image_lev1_sep
/indexed_colorspace_dict AGMCORE_gget begin
begin
{4 mul HiVal mul round cvi
 Lookup exch get HiVal div 1 exch sub}
{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
AGMCORE_get_ink_data currenttransfer addprocs settransfer
currentdict imageormask_sys
end end
}def
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="
" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c006 120.b669747, 2021/05/19-19:07:51        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2021-07-22T10:38:53-07:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-07-22T10:38:53-07:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator 25.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>240</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8Y/OPzHfy61+hI5GjsraNGljU0EkjjlVqdQFIAB986&#xA;/sHSRGPxCLkT8g6DtTPIz4OgYl5U8yX+g6xBd20hERdVuYa/DJGT8SkfLoe2bXW6SOfGYkb9PIuD&#xA;ps8sUwQ+lM87etdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUrm7tbWL1bmZIIq09&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2021-07-22T10:38:53-07:00</xmp:MetadataDate>
         <pdf:Producer>macOS Version 11.4 (Build 20F71) Quartz PDFContext</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>39.000000</stDim:w>
            <stDim:h>48.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:9b5ddb5b-e415-4d42-b543-95aa1fc33deb</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9b5ddb5b-e415-4d42-b543-95aa1fc33deb</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:9b5ddb5b-e415-4d42-b543-95aa1fc33deb</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9b5ddb5b-e415-4d42-b543-95aa1fc33deb</stEvt:instanceID>
                  <stEvt:when>2021-07-22T10:38:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 25.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -32.3867 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
gsave
0 0 mo
0 32.3867 li
30 32.3867 li
30 0 li
22.3915 13.6692 mo
22.8544 13.6692 23.216 13.3221 23.216 12.8592 cv
23.216 .838959 li
23.216 .361622 22.8544 0 22.3915 0 cv
21.9431 0 21.5815 .361622 21.5815 .838959 cv
21.5815 12.8592 li
21.5815 13.3365 21.9286 13.6692 22.3915 13.6692 cv
25.7763 12.2372 mo
26.2391 12.2372 26.6008 11.8756 26.6008 11.4127 cv
26.6008 2.24204 li
26.6008 1.8081 26.2391 1.44648 25.7763 1.44648 cv
25.3279 1.44648 24.9807 1.8081 24.9807 2.24204 cv
24.9807 11.4127 li
24.9807 11.8756 25.3279 12.2372 25.7763 12.2372 cv
25.1109 26.5863 mo
26.4706 26.5863 27.2951 25.892 27.2951 24.8361 cv
27.2951 23.3896 25.8197 22.0877 24.5757 20.8004 cv
23.6933 19.9036 23.3607 18.1099 23.3028 16.6345 cv
23.3028 16.3452 23.3028 16.0849 23.2883 15.8245 cv
23.028 15.9547 22.7097 16.0125 22.3915 16.0125 cv
20.9306 16.0125 19.73 15.0723 19.3684 13.756 cv
19.325 13.4523 li
19.2382 13.4957 19.108 13.5246 18.9923 13.5246 cv
17.5892 13.5246 16.3452 12.5555 15.9836 11.2536 cv
15.9547 11.0077 li
15.839 11.0511 15.7232 11.08 15.5931 11.08 cv
13.8573 11.08 12.4397 9.67695 12.4397 7.94118 cv
12.4397 5.74253 li
12.4397 3.99229 13.8573 2.57473 15.5931 2.57473 cv
15.6509 2.57473 15.7377 2.57473 15.7956 2.5892 cv
15.81 2.53134 li
15.188 2.16972 14.4648 1.93828 13.6403 1.93828 cv
11.514 1.93828 10.0096 3.42816 9.47445 5.32305 cv
5.62681 6.71167 4.1514 10.5304 4.05015 16.0849 cv
3.93443 17.7483 3.67406 19.8023 2.71938 20.8004 cv
2.54668 20.976 li
2.19749 21.3282 li
1.08967 22.4455 0 23.5868 0 24.8361 cv
0 25.892 .810029 26.5863 2.18419 26.5863 cv
25.1109 26.5863 li
19.0068 11.1668 mo
19.4552 11.1668 19.8168 10.8197 19.8168 10.3423 cv
19.8168 3.31244 li
19.8168 2.86403 19.4552 2.50241 19.0068 2.50241 cv
18.5439 2.50241 18.1967 2.86403 18.1967 3.31244 cv
18.1967 10.3423 li
18.1967 10.8197 18.5439 11.1668 19.0068 11.1668 cv
29.1755 9.50338 mo
29.6528 9.50338 30 9.15622 30 8.69335 cv
30 4.97589 li
30 4.51302 29.6528 4.16586 29.1755 4.16586 cv
28.7271 4.16586 28.3655 4.52748 28.3655 4.97589 cv
28.3655 8.69335 li
28.3655 9.14176 28.7271 9.50338 29.1755 9.50338 cv
15.5931 8.73674 mo
16.0704 8.73674 16.432 8.37512 16.432 7.94118 cv
16.432 5.74253 li
16.432 5.27965 16.0704 4.91803 15.5931 4.91803 cv
15.1591 4.91803 14.7975 5.27965 14.7975 5.74253 cv
14.7975 7.94118 li
14.7975 8.37512 15.1591 8.73674 15.5931 8.73674 cv
13.6403 32.3867 mo
16.0993 32.3867 17.893 30.5931 18.081 28.568 cv
9.21408 28.568 li
9.40212 30.5931 11.1958 32.3867 13.6403 32.3867 cv
false sop
[/DeviceCMYK] /CSA add_res
.755978 .468055 0 0 cmyk
gsave
22.3915 13.6692 mo
22.8544 13.6692 23.216 13.3221 23.216 12.8592 cv
23.216 .838959 li
23.216 .361622 22.8544 0 22.3915 0 cv
21.9431 0 21.5815 .361622 21.5815 .838959 cv
21.5815 12.8592 li
21.5815 13.3365 21.9286 13.6692 22.3915 13.6692 cv
25.7763 12.2372 mo
26.2391 12.2372 26.6008 11.8756 26.6008 11.4127 cv
26.6008 2.24204 li
26.6008 1.8081 26.2391 1.44648 25.7763 1.44648 cv
25.3279 1.44648 24.9807 1.8081 24.9807 2.24204 cv
24.9807 11.4127 li
24.9807 11.8756 25.3279 12.2372 25.7763 12.2372 cv
25.1109 26.5863 mo
26.4706 26.5863 27.2951 25.892 27.2951 24.8361 cv
27.2951 23.3896 25.8197 22.0877 24.5757 20.8004 cv
23.6933 19.9036 23.3607 18.1099 23.3028 16.6345 cv
23.3028 16.3452 23.3028 16.0849 23.2883 15.8245 cv
23.028 15.9547 22.7097 16.0125 22.3915 16.0125 cv
20.9306 16.0125 19.73 15.0723 19.3684 13.756 cv
19.325 13.4523 li
19.2382 13.4957 19.108 13.5246 18.9923 13.5246 cv
17.5892 13.5246 16.3452 12.5555 15.9836 11.2536 cv
15.9547 11.0077 li
15.839 11.0511 15.7232 11.08 15.5931 11.08 cv
13.8573 11.08 12.4397 9.67695 12.4397 7.94118 cv
12.4397 5.74253 li
12.4397 3.99229 13.8573 2.57473 15.5931 2.57473 cv
15.6509 2.57473 15.7377 2.57473 15.7956 2.5892 cv
15.81 2.53134 li
15.188 2.16972 14.4648 1.93828 13.6403 1.93828 cv
11.514 1.93828 10.0096 3.42816 9.47445 5.32305 cv
5.62681 6.71167 4.1514 10.5304 4.05015 16.0849 cv
3.93443 17.7483 3.67406 19.8023 2.71938 20.8004 cv
2.54668 20.976 li
2.19749 21.3282 li
1.08967 22.4455 0 23.5868 0 24.8361 cv
0 25.892 .810029 26.5863 2.18419 26.5863 cv
25.1109 26.5863 li
19.0068 11.1668 mo
19.4552 11.1668 19.8168 10.8197 19.8168 10.3423 cv
19.8168 3.31244 li
19.8168 2.86403 19.4552 2.50241 19.0068 2.50241 cv
18.5439 2.50241 18.1967 2.86403 18.1967 3.31244 cv
18.1967 10.3423 li
18.1967 10.8197 18.5439 11.1668 19.0068 11.1668 cv
29.1755 9.50338 mo
29.6528 9.50338 30 9.15622 30 8.69335 cv
30 4.97589 li
30 4.51302 29.6528 4.16586 29.1755 4.16586 cv
28.7271 4.16586 28.3655 4.52748 28.3655 4.97589 cv
28.3655 8.69335 li
28.3655 9.14176 28.7271 9.50338 29.1755 9.50338 cv
15.5931 8.73674 mo
16.0704 8.73674 16.432 8.37512 16.432 7.94118 cv
16.432 5.74253 li
16.432 5.27965 16.0704 4.91803 15.5931 4.91803 cv
15.1591 4.91803 14.7975 5.27965 14.7975 5.74253 cv
14.7975 7.94118 li
14.7975 8.37512 15.1591 8.73674 15.5931 8.73674 cv
13.6403 32.3867 mo
16.0993 32.3867 17.893 30.5931 18.081 28.568 cv
9.21408 28.568 li
9.40212 30.5931 11.1958 32.3867 13.6403 32.3867 cv
-5 -5 mo
35 -5 li
35 37.3867 li
-5 37.3867 li
-5 -5 li
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd
userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
mark
currentfile AI9_read_buffer { readline } stopped
exit
} if
(%AI9_PrivateDataEnd) eq
exit
} if
} ifelse
} loop
cleartomark
} def
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 24.0
%%AI8_CreatorVersion: 25.3.1
%%For: (Lee Broughton) ()
%%Title: (spokenNotifications_fill.eps)
%%CreationDate: 7/22/21 10:38 AM
%%Canvassize: 16383
%AI5_FileFormat 14.0
%AI24_DataStream
%.((`,!*CM`"+G1l"qE)D6tD_k!+;D7^QBKMr=p:hjV7Qo.hd#A.m#NfUch%9"98EU1EmDrV@B%*A.H@/!=s"?do@f-c5S"3-li\C
%H#,n&J4>Ql.jN1H3"F%uFVR`o#gB0>Bqg_3(Um^*ZmK43:'[Xc^9Iuj)2q6/0S":%E6hB='TcioC_El':dBd>&jo0jN;&m$.\PX)
%/a]pe%]tfX$lC[+&hDW\N0Zgh;0gWdZ66O[$:JL'+NjBb'-B/@^fV-sP=)/=3Bm\D8O\CS'/(T'JI2._+?V=-nN?:!+N.f^kFjX:
%c[.ANcPu@n.F@\!%\_g+r&#20(+t`do*,U?0OV]:JL1gQ:)Y0b(R,g]s,(6tQb3Os0OV[dO&Xe@?qC$H?d]DT$7GUg*5uiaoWoZF
%WI_skU7;i:LL`%b'_R)qU!qI%-[ZNRnF4)e!\,@K<YUqe$iC"Gab?b%mR*0:h\Bs'qY**j:"W,SV'3.X/?2Ti_t-"#nHm\DMBOs6
%;EW:s3"4.)3(N[B4p94'gkFp:N&*k$4tZt8Gb4(Zn<BgN_=KcU_XfmV&!SHb_(#^^3fuqS-P+FTV4o(DT'%P=Vidd%T'*p"'im)h
%PQ]>(#!UB)B!2knL-3fR?A%EdqD.P4[c_qmJ.>#sbE!lU&tVTY/3GRc.6MOaJ,ugME_p2R;PtLBg8M7u90*R)a"e^K9^m?LkJ9$0
%N=.Ro]\f_Q^83'Ogb_Z1C4c!R)o_E]O(39JX(APM0/"+UFGcWaRu#n!3U:uoc\rSMo5n9p0adtb=:KAXltjOR;\m+3E7H#6Zdm6>
%eRIl\Fk7F6S$<"H=U;Y.>)TLLfQBP_^`0idGeD=,0aic@94MaS>\dIcm,lh-%ca#DosS;p%9kKd^MI\>_'/0ZToA\kf@B07>*bb6
%YhQ`q\+Y]qCb&bu#C2<J[5E%0e7rcJ?X:8F65h@4@th(9()FWebGsCV&:Ri%>[q:4->0G7Y.7f?2NGbWp409aAhLO"_lWh&^90P%
%XYi"e)#c.2[V??4ZIRB,2NGTR!5n0h\i2Tj"ipb<Z!_PjdTcgV)q)UZnG[3a;D-e$npqHj>`4:m<fIh:!7oAB^$KQH_-uY@Bc6="
%#+3BhYk>k"GFc-JeudK.@(-SN!N^FP$Ju`E?"n:p"g=toX)5Cb3/cbHL#\L/:hs4m3t#EIIG"V*2sgZKFY1$;F0TFgGOc3rf1LsT
%YNq4`LTg"RG[$OSS%6DebF5]<QI^(`Fr%utE#-@XCt>n$<\3WA=7*;.1#6ZsZ=L@c[W5k5pgmZJbJGnOJ:/*7gA8+YFZ*IA<I5jG
%m*(I.ZeL3DY_)H6>gCX8i3jEeg044uSOeA)jm9DcFYpbNAnMp<CT#LN:&m@s@l(IoGpkD[C>tO(FtL/q[Oh+s#/Fj/R"aL_SZUK<
%D-[/V0kSDQ7/(Y):WL3#gT.btfDr1$S["gDkVD&1m%9fm=Hq=Jlq0$K5*e@eUbCO^oZ7r!@qr'qZ<31g[T0rPC,$PFX0&/L`G3DU
%*5emMEY>ud9t\K=(`XL2@!34@h"]IbroMA:Mq'FCFgPAS`GQ(sE@pmq0,pR,gXqF43s"]lV7!DMNQkS3Fk$Y/]NN:Jg$GSB:0GZU
%^([^(ag+riAC]6JNhrp_$ik*[</tb,a0G!BmUA$clkTE%YlID_@PqH[0UH>'8(*Tj=%9n%T#<6^;uX(P@Mc(RX`!OWU9b_qG0RlV
%=6FGTR0oD-=Hm$)m=<jD>5A`*>-YO\CYot8A$`S$`O47:!nb"mCU%#iCV,pUF]lJjpt!SiD,&$aYAT\RgjO@@`Sg/qh::olja>_u
%?9_^7hp1Y1-<dInhc\,@Aai<EA$\%O\LfRS>o<!5Z1lcP^oF[.lGBt%NOs[#g"EB8j)rqiYqEel:3UV<CKYHI47D"GYutnN`WFdh
%`s-ckR!h,gesDR@&A+IFjBeH/qjq^&U+J98Yqm-u?daj'e@0%8<bnnEf8\'rPmtFtZ*CUIeaT]+A?AlfTuYUIZK%`53Gba-`G-U%
%;s:CWY3d]fc\1Xj2Z^!9(QP>;f@j=HK3M-G97>Tn%F*O$>`6"]mdnch!ItPqgPOSIfYqT=D&g#8=PSc75_#oX1%4RZahp9]YZHd;
%"i(3O0O*4kfOY(7lb0\KQ5,m'!4ZDW>B+*foWE#4XgM7KX.9E5_!`0aJ7CfWD%,<(.CaOle7LN<CV6P2bb_GG,JXCnj4c'W`pm5B
%hps=_@m/b;"gPDa)LL'9HB$P-)RHgDI8A6"+HC4RZ2;#`)Be]mN)%4;ef*:XCCR`&en-`>M=+B%]eN(E'Wj]RD7(A.L(qG8f%O6M
%MPXeIiuFVWqQ1Y^2=>J)E(i(XE%DO?%3Vc8C`Kdfe^LNq*hA3``K#;$>`7+r:3.LTQap.`:BoXPbIRd@Vn7R6GF1"(!Kan:SL!XP
%ASrf:3cgiEZSRp`",S"m@qdG`lkH@BG$A6gC67?n>n$dN/L,9i3t!/8`UEUAN=P4fXLl>7?)r-a?!</lEU3np?FEjl\R=sm+iS87
%SU'3uCt616D4Rp4@N)aV@qUu8#-VJS(b8nn!.*BZetR6e@PNd`iKn,p@.*m*@^FaF`pXe[-S/Re[8+t&CYR4;D*o<P^:f`uA`J#H
%Yq[3uLn1e[n[j*\E,=+.BE<Y=G/a`b;.sn6@ad`Ckh(*MW<tSmL5A[qWl8*+)sZ)-9"Q?07Ef3O<h6D4%Z%f8b[O'_]4tP_JnnZ"
%MgK6s8hKbJbrhtg_nBfi\/'ES[?d"sD_VWG[BoT"^i>@1d9:XOf<ePQHlo8ds.&^Qc[79Dp%0?(]-k9=Hd4Y7SG#NMeUO/R<OMk?
%m(W3n-.T8]4]PK^7FbB9\Go@tbZq4Ej3e7&<>G0fkF?V=3G6Z<<U9V0Y#TU2nl54p[FSMsXgQ_`CTY^l5H`f):0#V3So`1;kF?V=
%3WGUjeu,,+<7Ro?I+!0#>&0[McCautCTm/*c0<9>IF?6.:-'\rHd&IHm]CO`8Zp*sP(1cWmZaeQrU\).Z]goBo-Pn.VmHAKkH.[J
%6M=;WoqZB*5>G4lr\u[63G76m8akc]WVKJuf)"DjXt4^p8cH-Ks#`O6j2b/slIeBsrO=Xre8%53WW"kWVeY@CCL*+:<7O]`bs+sQ
%S6Cr::B$;9]BXI7OIG?+Spf$Om`^-XC+n-8EF#Il\PlKkeP,O`B)d(Trfd8i;5`]Tli(moP"Eqtp#C?iEpZ)/lW!g1:XuY3Wp6o;
%2-3RReN-]WWACN!f".Z==]O"BWkFpE8gaASjZMcRfAtW.J+g17qVt?,F&pTn-*(1nRZ^HHSa]VW-cmb7j0\hI<E4(f8P\hJT6(G?
%\5^^Xo7*cTc`-d@WN$W&Wad\2j?LC#;cPt<-b8@bR8[+4T;oTkjZcbQbc*YfR88,U;cPt.4m,E:30J'?:V*Q@bt4Keajp;b<S_2c
%p6+L#Y'D[#eb<&1,<G8lEB1(7c4ilGduV\98NtJ+/B^_M\bD0.j-]Sl3G\S5+89cTWdYrN+8>fUWN)utO.rZN^T+$ls!Wc!+3-C!
%Wp9WaUSt3ls)J(6kf<Y*WiE)!WiE)UHgeZBhQ*[NhP7%DhZ*UqWp9Q'ELsM:W[d33X"*;hX"*;4MP?W9.#N'EEW;d^kMDu4WrC=)
%MZ1rts8R0.rVmt;WnqfWU>Btj^\=7Fn%G`Ac8gc&cM@L1F7)3SS:;OAS?&Zik5;uok595UX(oqMX(oq[MP<,+.#R0b5DnUi4c8CG
%3Jut#WrM7@UAsESEW?'2ZhOL_bk_:=l@$r+l@$tXH_7Y=hWN+npE-<5SEKf7k;dn8H-Vq$NhSPsr.!!PH_5B)SEHF6a2)R3^n_XZ
%>.RVtY<0cCYNbe$AQNd*jfLVb/@O,1Zl:P!g4VJ)d+#5'EP0TH4mK=g:]A+YhI#SRL1Rj9<pZra85G8*:7#J.;2`+sDhibCSrX!S
%)]SGc4%cnq'EGB->'nqIG,@enNh,pVq^'i73VM9kqYU3jfZ>0!YKO(iT?CU<;=eaV?$<d-^\";qq=epmE9jZn?MdE:rd2c):Ne!D
%lJ4<FbFa&^qF9XUA"tq]A)0m0O57;dnLIUTA+7YG8@`3/\AlOr(/<=g06WL&2>j`\X;]fP;g+1))iJX@(1occqg-kU?>&P^D7,k:
%3sRiO=Whqu:g6fjorab5\1d$cq9B#]Z'slfB=C[^j/>$E4!4`bh_We9kJsRe-%pS*#6<CY!-[P1lQM[A[lJAK4Y6PLb[N^TGLs`1
%Zgg(tBl'^f]?e+Ejj!nMhNd63YMrMsA+BE8E9tPm$kf,^T'Mu_-Msb5%s.Jns(1)_pOCCs3KCghEfXRWdYGC!rf;OSrMV[N7l&;Z
%,?*<hhoFj(!P`BS3+bJCCSb<7jQ6<LcG@4q=Hqg3oAfE)S`=9_Zl>o#Mqo_ZXY8kXX`9>KXdcK%#(Uk,phaXq$H"EqI6DS0V;56j
%lH<Fu]72SWY'gS^T:"a;3'DGUG@fAfLOaR=Wl8/L><DYpO,n?9*//snK@^NtM?/K!)W6irBl(Ufbomd9e\#TG!A9B#qf/L&[hT8L
%6[K)hTiTuU6\6F7X#r3mdV((TiG`K/7YLhlS8-lu3a]^]/X8RNNNFSt/RX"U@6MDeCNptX9mAg]JJ+gkc@o<#+>L.*&TDH/B]'30
%mu7G^1SRof7"^mX.NiuP"@%p!7PVNJDLu7cS=h8\S=lPUV'$54e:P%q7RAS^LdfF`6Rn2[PdOVa>S)Ilr4WAqpi-Y'lG1dQ5OaU+
%q4(fC2+ftYbTWC5CYMdfQsBm\p">*=+BfXg1sgdaA*c_n+q_]oFtP8EO?eW5o#F2WJIlMZO+[VCJ5EPJ3u!G:SXL,CR#a>5X3F3r
%/52C_GL1k@2:b8Qa,TokA&&43Pc;f=+#bn,,FQOD`!6JZor0'oe3reGT"+V&^iWNX@9+QW6+c^(,6j%>%H2n-!g\J8[&dA_cGS18
%Bm-9VC01XpIA0bEq/NF\@[AF^`C#doYaR4V0UkEY?2B.#fn0e=%pm'odW;*j+*[T]Q4+_[oK^OGU(/A?pSjG&+Vi`E50d&\"-1I@
%ER8,)e$A06k1XQu?\9`qE>d87i%!%9117eXd1K0Y4MVeN>XHdcB$V1-n&I.FJVu-T[_cE0H!hnP**W,c+bs).V(haR4%S2aO(3]0
%0qXJ[.Vh_DKSe?><E#QpPR>,sOf@)NEu\AOdPsh2O!?J@-&*21A5UGN6/Pm^>Z1CXGkjEXpOL_[_5CP,e5e4CI,%0A3LrnIW"d5+
%UmVKSm_jcNC/j[*N&uUs86"!W2$.Z-PUcqgeGp$MWZah<7=bJp[:BQ#'IYmK4t^mfS)K/.kehZV,S&Sjj8NbtaXKi!aiK'@$OelF
%-!SqeJ3RqF)l+eg'W<c#`<7&=&PEFg@A6VV0FI?jQ,j)d3-0d-;DBYH/WJtk-Mn,k(.7b:;Y.qO2XOus?RgVj^R@flZ,06I$<[<f
%>r!!G6N\Qm.+/3M%es%K!XOl\,V(/lL*+GB2,N;5-0cq7ij0PohUBNi.V*4oPR)r_1cS6K4!%QC&bh>"&1XLX1l<0W=f,7'5Ml.p
%2PUJ/d'SL!rbQ&7cf(mWNuOI>e8-Uoht8B,"YUG/C,UJKX+VWqh;436>6=pj&-QP,pIC,g.,jp\G%:LG'e5)XVcWQ6pcqWgkk'<D
%b^U`mI;%_r@hZi`YYr=Ecm\$NW]7[;q!l)&Au.!5G,=!0)]h63i)NJ?<bck=)Q]ePk!'CegeLBX8^+G]Hs]tXMRgNgLn,A!<RDf/
%ikT1N6b4oT'okfuTiTl:5eq2g^r7WTS.Ju3BOi7Da*H4rZap2Ff/ul1k<^7-/Dlst\d>r^l-MI1+OtDZcH5TrC5t^hBVZE>P"j^^
%McfB)kch_]gtXffaj#aV0?U.Cfi3)<isIU48DoiPPm`u64pd[<b$>5SP@LuULpU5L-Vn'28CAr[W:j[&TD$=A,=Oj4Ki">h1K@]D
%>KT!n#"@C/!J.M.H;p2(_fQQ.YeWfPLe'9HBQI,d!uMkH5=`2QQED"!2Tfdc5OKY0;7j.n%S=hZp:1bpJ4*-`G2O!c,i.^ZV:ZV?
%Pt;[s"-%2D(9N/*j2VTW:p8KlF.lZ3AO&h"QP0]eckM\Je<'teOqsjCj#K+&?EbjRYS.'FU_6RR98CJ_Q?Eq#?rWG^8.8%6W+*PY
%cUi8"aEQ?o#,Ra1CFN1sJ)'F5TQ3]<)C=;KZCAkg>/S77SBXrTV(:V*YfJ<OPtp=8KKf[N@mFGW)c4a@L.+@I",^5dN?TLEl6`J&
%jV57-!#sA_E^"4m9rk^GEK,scf!gf[I5qts,P?%g!5@bt^_LmPH:Ol0o!0G5?G_"3Y]WlEg--#,JZYtFJNRhDPIE&MY$`g^[p[oL
%,T/0ZMl`@=,:GFf:EXBhFe`V,OFW!rdRXKZX)Fh;3C"1DXmQ3@,L:HWCX!>r#._D%!ubhS*F)\fJ+.F`%AsstE/4^-%u"_V]ru5V
%)pq%alqn_[0X$1AYLEU&H!U4-0.q7d>W39]a2P>e\Ei`OBC)DoiaI2RN3'm(6u0K(2:+C/0mmcMA6P:ML-_o%)o\>1oiWm'Q"SSb
%XZW3$@l<2TgfBM,;Qpdm,a$Wa\enIKCk,F*F:D7+/u(`:_FUaBW=tU473i4=U'2E%\I,tZWo2J@7F"6e8HTkBSQ66Gj7I>HnDp-6
%G@`NE`'2]3YojC;\O*\4:bSCp=MQP+TM\O!"g*Ch.YqbGNWN9uoa8iYE%7tXVmJi1<+(QjOhF;H"P=k<S1L7"0jQF5i@>9A7'>-5
%n8T[dU*)Fg**f7u$/:Cq"P$#J8*CZs83d>&8&ep\.Z@I;dE33=6CieI',$+Saq/51GTg/96%N&YYlYOY=:p2uEG1u#=H5T+!KVW6
%7ne:E*cqj=gm@f,!CEiQ"#niR)i.@2b&]@-/tToegE)$,@d>^c"G>"FW3l.m2dn'k$.(Z%67:\.;#JFd]h"7F4XLE'*>=,bkTjbX
%7\3Xs%Lbf\c/M-A1`n[0.>XknQ3g8*1VbbqANuRpWW835%6B?)ac9br'.a:'J-FNBE;!"WGq8pQK!GeQQNMs$]U5)uj78WjBGQd5
%,?\Q\-afV8T.R5JZrK#cmo9*BOJB<b:h?D'+:<m*J`G$J(!0R<qI/ANKb"G#C5KBT;,5F_U*pf=KG$'O+pG>N\`jDF32L'9_5&c_
%6`-t)acMN4.i4)"@h<Bip5/>D-U^0/AA.E,:mmt'Dg!oMg25bD%V,Ws$#E$MS1]C0_>,Rg-tgb3jeqHunkN7UCIu/l!KnQbGtQ"I
%8!Nr%I3U1.>pCDMgPMG,NZ!tQNCN!e`a&,qaA"tC]IYfXo<_+5k*r>(9\qKV,\%[f+=u0fJLF\0'7uMo%>_%"AJ7n-b#RB:Jp@K.
%#H1%`(D9l$+Kt;;JK\\i1oE2&J.ZMl:b1c)BP/4#j5X$..->JWCroP2&24TTTK4%pV:`Z$&1H@a19dc3!2BsMGBB4":PR\T90.cV
%+N_PocGM1]`sJ1`?&M.E,j9%_jgf-BjJ%',UhlMFP*A74aH'8(MGO)rZlfmUDtC<RCunTg:WS1,M<ZZB?2DWQZ1-h+@I*a>@!+n.
%'_Mu*/"Jp<r#RM%@##12*aqEm*Fm!=1_RS:Aiu.VO:aljEW!?%+Wua*967lpL4A3M$0gCm<CaSl0m[..V$`52BPa.@Z)q:<(Sk>'
%Tp\'=[,qQ)OM/u-mFrkHV5@HrYOj/GOl#0lU1"B?7#MD4efUe]>Ws`TChgNPJQ4$f?_^lq`0dX/4d'@[&^LMk,*>qTO%nsHK1eU@
%6j4cq*?>`'\Y3IcZq>?2q(tJ?NZj4b)J0ag7%#nh#\Z[N6"6&b5E9hoP&Rijpi'^s!Q/13\i!lf:tF81QrFN4lD$i7RUmB?2U9u8
%)\0.SRU;g5$e5Ll!niINTPtX(_*+\/UB%V]N0jrN(^=hEJAJdpRkZ@f&r_kr5D0j^bKU(__1WPN8K._MQ81Fm/#uQe7Beni<*O80
%oMR)&K2`dC$r/P1_R.Th$P_?](2J76=Ki!I=ia'*A78,,IShdYKF?.mIZ%OXCl4:3KZof-j0^??!K&$L>-cMMJ5]Z@&]1K&_UN6i
%Ka1"7"cJoo'SO[U:A?r>,r@6OQ!g^@;rReWKb@u)DA&b#8kHt_!@6Xnh^:tP'dc&!M+E#!6m@O$WJcLc!))1&fYDAQKU[c0+<m])
%K4ofs(W=s<-4&(1i.2/0UCfd)f`n0:!$;aTMT5#p&u;pf6"aP[0p^G/W\RCiJ1qJ,6VU&(*&8aG3IG)kN(FK`g>b.T#ip5LBnu13
%d#oO^j4a&61mZ>`4K?oIk@4b!cR,-T5#P'&I?KZpI0rMWo>(W=Pn2ruPKu@1"?u=6rE!2`qD0:4i2>Oq%c>;mD@c1D/$Wm"_((iR
%QJ&bV"pN%^n;Kc!U#H=a$kSfr0m!J9@q_Cf@R0,k20a#Y1tY^'DkMs"DE,^"Z2mulJVFu`5T!ag%`.Wq%r_Q(IVORt436c@!Y+d2
%$h*@`$O$3r$4'(o<+nN,6A9Epj=*?)"Iaq26'ahB_at4>#9QORohYr/i0@=Y5^qpNZG^n%i^&P*_()<1^`qg4@!FtjJeoS>_T,qS
%O%VIC"WG3X'#b.Rno,0lS$jN:4A^o#R%5S@A'H;dBG?@1[=R"d0Q(&76H<Q`&8%9XKeR+8.KT0mT`eTaPn4(!KLmlJ*"P@;_'o[-
%a$D)#*,VH2iN[8U61r&'6B7]]5t$;N#`$:X5hJcc!o^Ro4G%-#@a@NZZ?__>dsAHcKB?>-60?.%$hH2ebN0UH;Tf/j7OsPI6RpD=
%)aJ\ELh-'?%L,K>GSEV?nd#K0OXD>aOZ./1+>7o@#/#jYGWZ-HiHV>?eTg8ZOmrcrkMhobcf.N4*n<'Z#E"it(nb3HE(iAjf-K2\
%15^;sN+mS`_#`PD>g-Y?4Hq46Ga;5**oBL\mnINE6PUHp_[%6nk=%>t)<(_l=;'3AJ;9FR8F.XKMT..<%Oe3/2aWK@hLmQ_HJp*T
%n6-Ali>Ki`$*TL4#k-f"#BK;r)#8G-E#Uo7as_Lpdt-Et4O<W5L?Egab*N0qJ?oH2+-=Z(Tb]c:o1fU1!5\7Bhm)Ze,`]_dS/)H`
%kBUBmM0L*<;ESkC83QFWdNWomQ<<Vp>#Fbn$nsW08]ja:=%W`;jgd^N'!UokZf9]'#mg-?TX30&5UU/oi->D/SA#E](Y3qR(G(a1
%lKbb_T1NXYO$d/UQdfCcZ3cE""n-Cd6,F^7,\3+"Mm3tOjJ-]/;CW,S0b<Ck!YYLQI:S_#7%`J'8g"\"kpH0bKDShsZa*GD+QE?>
%+3/qBksWiq'opZokp`2^M2lj4'GCf_SKF1j;=6-k-k;*MJ=bK`j!orm@ZTA#S1r1=m9qGO:?]a+5)-80^$o#hr/-YtB>(,Ge8!Pr
%X4'^e\072lU[j_7!4Lb4/8?%MVLt"1jUA@g8Tkt!V_fQill8bs91q7L1dP8*q8XpbJgVY9^IpPhP<L:QFsGj/(@98XW[oAs!f+]n
%C*g<U;T2=4UdX>M^D7m7IipHFJUfF@X+1g,es3!*=DXf"rTrS)?@l&<KGDEj$=!kU"DDmF^+%$!XcuhCE_!r/\C(BhiaMF%p"kn!
%?:ufROUrbZHVe4N`28tO>#>>ESk+X%mb4P-WuAp1^8atrVI69VA<C?gNuLA3MLK=_9XOIhN<i&\M&YZsG_8YX3-^,%O&P_CW[EY$
%1T@4)!m$iT:*0=a#@+6:9LJ!`B`qb5ZX@4;<*72A-se;sW>A*;,[j2^DY/"DCE(3Pa@st(NO%Lt-4>N_Wghse65HLj'S%7%Q"#"'
%3!2<8U&agF#dN@U:Wg241*4Q5Q,mLQpK9?3`J0l/OH:jWZ&Y!.;lBq_pjPi&9YqLBHniuBOFJGirGe:T9i.l"McOVHg#SeoRV]s>
%,%_!^&bB]t(L"*%F;+#R"p@D6RoDRHB=\C=197"Q`b_2$'l"VK-7EK5LnQUI`&oJ>;p6noZ=Hf_iL1Y0.)I^'LOk'f7P'Ki0p*'B
%Y'fdcLlH(@-4!d?)oAGUF;"f1!u>=%;r%So6nIK=k[F'el6b/fXY+9aJr$+VK&KiP2pfGb`.jU,i$d(\jl@TsBp3r"^s1CUQ-6$t
%e,kt,d_[:(,Mi\3R%<Gc'N%<9Z'`:#`hFHefRYCS.ONeDh#n+RPW;636pMB:5?BnPcjDl=/58$P`FAg+&7_Hun2qLJ/>t+&1l);l
%q_1:8HkULMW4a/UJQ5A_"l9AT<B!4%.Z3^q0Ba`bDDjp(?P-/OA?Y\VK:ms!-dG2,0!qbm<ZR'.@\.ut9CB!KQnJNMdk8$@Y%chu
%PJ$r^&A'Y@XI>9?.%4"0=`X:?M>?1FiLuN<L1[:ATl,IcVg1gB,aJM>0UV41g$hO/4%#p8+^q>7E=e\>"![;=,^r?pk/p"NRrhU?
%6X:$5q^?_MiF/YVd-*fKQ]d^NTg>pm@4`2P,`e>O(4=h^"eTu;Gf1S:4CZ#^/fl`'qROrqlM9sbabtbnP..A6k)YF7hn['W/p-M\
%`%5XQ@X^`W`'uW6$4<"s'EsaJ.iah8b8L]PFp_5J'1$Gh7)4AJk_6p:8@7s.SJ%\HAhC/?FQ/<)gdFDh3A%$="Vej.6lD;.Jdd6S
%/M,]\(G_@P=?==I`Ic6q@8f*("dLAi;P_DmUb#4+,m[sm$kt/@6o1q@Ej6n>gW)iN'ELM^KJb@K/1'i\6PemR#&4UnSAc0`l6%uI
%%mM#i6Y:okL9NQK*f4:B+PkPr!i.5@2Sho=kedjMi396anrJD^':Hd]M)HPfAb/Gh=sVpBLTkO`'RRO574#`!BVO^CK8+2=9WSBu
%l[EpM,NJo(+Uk(0p857$Pr1CNbtMrh%usb\!l`2C@#"T1)%M5<nMSF(1PfG3;9r?t##pe7B0-/4*$/*(L`c<^5.1ba!FnDjLoNJc
%Ji&3VJqKBW%>2&K5ORZr+OS!%E_'g?!7UK5Ln3EJV9c@'as=>#U\/^BCpA`mKgP(heM]@)+cqis<h7,M0-=t188uLC+FGrs!E0#E
%^<,_=)EahaYjbs&Viepj3L5]%'l+rOrP%f7'Q^!Bh;2"'hqgk=JmXZ2^@+<rUWO[6+E:DAq'VG5,SV_P#cgm)L_p:U0kq9\)[&%@
%ZT+#O$O2O[.!>pYcSqL*@qVA1EmZ^(`OTZ&it#+p-J#3m*6>)3d5[e0nUNsJXXk4h5HaX(#_:fE5/?ai&pc5>$K7N`NURFNl1<c^
%'*:H&V*6U8YpbHWb\n4_\&XlPc;5rO3Ea79`([Xs,SuC?H%)8r4ud1lf"bhBk,u)/_`==ULq*spS'QeU2qSQd.M2Ck6e'Wl;-+N'
%&4Dn)\4@kKM=dZc_EhpaS>7:dYaK;S!n)t1VGMkfAHITQj_>J=;\K='&[(JdgestJ0h8%Ya,0"H#(N.0#.&Tk*e`aNPu.ZcUfLOd
%E?GmM"<njQPpN1^:PIs$),>[U#Z!Dk"-,nQb],&J0f7WDn;kK60Stb.*(#F3B647i?4LB4BjV>aYfl-K&>t?jm#]/%`<7b.b6p4<
%Mrh>u0,86&[RP,a^9oGmSOi?I&"]!c9&YCMrERFS85[<-Jl(IX!G7RSON$TEn:Cs%4:oFhCfNlsjACY1IOo%r@A)ThQ'<c[N*jDJ
%">X^%=-[`&N&-)W636E@JOI;cHV/u>n-W55KW(P?iN>d,Q,]$I6Q.k@XCgiB.E7MOl7afdV_fm=T*QejR#'Qr9dKDl4;BQ5H;N-Y
%66ItFJhV!a-,><M<6N]$ADCI2-r`rJnm'6L,C@Ke_>H3h6an$);t-qH#"@qnZr*2CfYFE`J2J[2Ss0N7<C0OmYI&dXD[Nk>.[r@&
%g=<Eq#Y5($+2Y$TS#KksN(0R0_.98_>T)Ke\2%-cTI:%+(OF84<m+l/b@!4Y<0jUNUfKD6Aj0(FHPnc;(iVmYJ]pWA,!;'/`>_9V
%BGbXaL)WTlBSk,Fi#G*_?kNqOs#:F(EPq!2$rL05C"0Z`jWI!\Cs.`pQHr$hCeaK=6r!4`]L[E+@tP>8<E]T0!]1SUR[PWc2,Ua(
%-rEfKC8,AKb%m4iW6&\K/Bin%8.E:#C9UWh1c7h:2jK\*SL.J-O=2M]NHRZ<BWV>8@4=D[C7HPU_':e1-NGA)/7O9.V%L+L*s3nj
%%8ks<P%+>K".I&<>07?`/&7eaVeiV9(juC(>l$]3^_B+$Be9$BnCdqO,?3LU"$tj,2IZM?r5/Bp@/(W]U7[\/@6tan8If,:06@2(
%GbpIpHq_FFn[%1O:a:^])Q5O+O*e_?Wt,&Z\>6`EPF-=>WtP<rQlN@U3agYVLhUtnm/mt&b9`>`^bcUaeEh@2MBV9-n>]AaPXm))
%]F%M;%Mbcu7Ht3"QuMDFj+`..8>O5m"RRC8&@;fjBNK@MDQ.**8g]Eb^I$^1;06J=\4._IfT%HKW#^;VLibn#RWG0"=?RH=Q,0P8
%&ZUBd5SXq8O_tes-)3K.Z8o=uq3Lk:Dnlsq8Sm;"D\sM2cnO5J%K(t.Oc5<.BGa'*7rI`RE#>>p>lfRR)[;qC!c^cLVk&WK%Od1T
%-!\9aD>?0DN(rg%i^g.<$kq-aD0`s0r0!<`W!5P(_j=A,Qq2%F'tBgARnB^_Qa0n2JKLeiX*Q!&<f0s56']'@P057N:oT<21.md#
%l/O0?$DZ[V-;'7pb,I]%EJju$iE<gVF.j8,;Ls#\R#+Td_)Sgm-VN9%&(2W*KhgsRBkS)G'Aeu8E)@LEJB/O#hT$?b0DK\N$=PN7
%ghJ+W^5qB??_u3G^@$S<Z@I(XB_M3l##:c*qcZTuH7P99]aCc=n/X_jEs&6O9Su^@0ru"lSjcE]-ThE4$SfJYl`!Rq6Y.V.H!2YO
%G>f>(]ML,tn3Eoa_^"rP$r9)C$SU$Y)kKN2Jfa+U`pcO:-fN%@L5,jJdO%hU$t/6aF?Pd)l]Oh'/o<IJH:)Z"kNq5X`.=:K-3:YP
%Q51'f$$SCS<<<\adU\-3/,'TtAKIQu%n<"(Zp\Yn8<^/G&B#oT+Gc$RKYs'>mS1BoMTOc*a!D_.*#h-S4%qUN$&:$\>_A^BL9TeL
%@GMLGE'm_dKXDK#bu?E7-<%l/+PAT)<J)%'WY#XY_Spp;F'B31Q!m%i35^Ji\Y[H)U_o4`Ul1)(;&dB;(H-ps-ROc]b$[+p^_S8S
%@H2>[o\sjC1s0A`S(ge%ihMBe`3kVHTb[N2k^@,U1dh\5.c1Ys'T.ufJ026k-rcLklI<sgR\rLD<(raY@Y.,WPpN2E4$aQ[QAkSu
%mL;-"))hZ,POT;T\2W?%A6]:+']Bq=o$'sg,5dP%n;P!K5#I!R*_-@OFPAbD)b*?O;8iYm[a/eWUBoH]"4n+p6TYhb%Kkl2>325^
%S0fHIBJWX^n,cN!-4:ilM$St=j3,:#isIMgg6Vnq=+a;5("(0jK??+l$GM,:(u6XhA6WB*Dgkq$;jtqJ^b%3.L6@@C(4qK%fmI@_
%Q>Ln!?kd=\D.[U9RkY[(*%mB`iQ@G:Lcl<G<]5G4_'"@Qp>iOq0Y_#$/$6rQ'.ZUIoY0\P(_juu+:P<RZmm=,@S]2R>KUdB5fY!8
%>oERM`.VRRX,g`\biEs$lC)*s+Gc#eV(Q+eJh#PN^hqgV=+;4&WgK'=Y\I#LZWR@='Cb$['b_9['1Euu(%*h:!ZB3o$L0nJ<(ufA
%.#60e()eJ4*7/5<"JguMP_3$l@n+QC#7_)@V,9!6b/_aV/u-pNq/J$/>9[`^?@6"o/QF'h#P_sC*g^-e2?SsFR!(ZbkJj/Kpa&EA
%]9'<Pn`(t[\^6PdC2#VcO(+R95Qs>KoZ*d4Q#Di:n"?ssO/VVDKZ=3o\=J!e_$Ueg^TV/<jKhHDL\BX\_1<,qZ5>:&LnQ,g<l-^A
%T65<U9lPI(L<%W7JV#!,;.rX5]m&T$AbP6[Rd8gIP3cN@XS^X+hnCYb*-uMRQ(*-7pYVeoIJ@roaf`&6-!?8hf-/7M]!:_L[EedC
%SNj[bfD1WeO$+aKFSo_LgQT81?]uYdFoT#@q3R]N3n1e=A_B`)QbV^Gr4hm8mu[!Umum<Rk'i@9s'a$SIcgNg\rSoH*<+61o&ibs
%mCsa\bWDt#1A=J*TBiYt5OtuG??.f6?2Es+X>s>%\``&+bOKr-LRiYdQX"<sq`'bOjJ=2M8FgZ]s$%kqpHRiFQb!$!pX!]9PtSe^
%m;r&J2sTtsZM^=7r>:">l/"YN4I8/$P'd4#o(-+PH5t,r9:pFkjo7DT?&!XrP4P;eRJ$QTk@OA#J("3Lp]!CuaY<0=n"736^$iMU
%RG<4O@EH-EPFC\61J-^KOu!TuA\%]js-WWEU#oX[HdCUL9n#9\Us<1c17+KsAQW]-7;h\^S\6Y(q9.)Chdi*u[l_pMo_Fj8aNI>=
%55S^X1<c5WrS<U,lX,[EoOIo0hAk8JnaG;W:NA[_jk%02X?A4dR!8<'fX($rm,L(r^9c+4pQ:5Wlg;+Sq1&@d*q%:X[bmq]A,^iT
%+7e6QI?3*C=c]*n6ZR6RlMW^bEt?AeIfE&Hnf<a]/G9#&h]t5UOPF+`Zed#(aZjYaNgfm6/2R+t\9HQ=k=kHpo3[g;k>-DEs01s0
%o0;r]a`-%2*d@=Gm$[mXDiW@2q/aimld%dCGH$'6amt5ImX3]/0E((pcX]T7NfUou]'%?8R)?X"Y<1(%J,dW]qsO=3-(-RPA\#^!
%GF^"omQ-E?l_",HrpkDVm+ugSmlffRgg0*V*;BH)h"d.DfD^8lF"bYMHdCP]cbjdIqX8I[jklj5g%SeCnrK;j+-rC+Fl`:ln)Vgo
%Ii[\-O^uaJ-[YW4=-fI0FjGJSrPMNWACd;inpCCZ).q`N1@tElemm8p,WSoGa78V*B)]?mTdMqr3g]kr1@)11?';bu*H"Va53h%s
%n!P._brJtJpW0o=^[tcliM\j+o.S3@kF]-l1[!]&l[-XFqJX)jhPC04jP,`Eq_=E`++)'fa3s)3>3fO=nrI5$]AGXK5&9_5Y/>;2
%ESkp%=o1s[4sW.q.sK*,T>1,2p\^AQ-[4]8QTE>TkE>JK%*-'Ss*<,Ile][$g`3FH3S,PVheUN\nF*Mq?2CXD-[j;!\@^%7-b%C]
%/peK$)2F760D#1>m[G3*n%+kHfKBa*n"]$7j>h!rP9K*/X8?G\8Wq;m*dJY"DVTW+I*C^HjZ)SK;NngGbH/b?3JVd+r-[kC*50Z\
%gq"amWI$6h5*ijBUX.eH?LI7!O`Rmigj>B`cJ/4\L73=4r1hSJf"I8.*;PO\bMTf'qNiH&ama)<ZgV)tXFJi1hAiRHq,iZ'BCb@D
%LVDeYf4F.,aR^`kSbD(j8cATYp)S;dmDtH+;O=44bFV(-N[5c;;O?LTICQiERcM$?46J>^]RN_CjmS]9*H'a4nWTU>h_Y9qbaX72
%c>tUuJ:hhi=mk`;R6B6<%__;CHg\Z"4-)24ajTqSPBkY>*&WLpT-QF"lFc`NA%6YOrfW<fs8V7;LO=<WkFMR=a7&U:B&.aIamo,_
%s8HT>G:rdf2?,mrH?1q#acS,uei]!W/2`c;RY/qHF16j]e''e2B&mWr+1ob;P0Epkr5ZNuR(H&WZB(j=^$!h)@I?<^I_G@I,l)d7
%6hp";cGm,%QT5&-]$-^Nk#*;q&B4++b+1ks3_,NC6o!fi10;qH$Jd#<Q);`1mTo7,hd*d8pIY=h!N__jNKV_Y1BRX/2VgKDgrEti
%/jt'<Cj8(X]N3P!nWpL(7(nfd7jOnM53D`k*%X+WEo,dc)iP5DhTZj)2iuG(7?o0Kgt&4BP-ZPp(a:AS(*]3H&E&/tN/u-jOjT#e
%\!NeoA-R\&:bb./B8&r_(Bfojj$8;b'P61;f8d\l"G5)@UNA8I,W91m;`k5U_@^Lf`=8iA5E:j=<ilfP#Ms]m-sG1gAsGdNoT2VD
%\nET+P<e'&T@aoO`.3H((dg$0pPBMDC>1'(IU?30qG^Ql2aPjM<qMk.,2gL!38F]V+f_8&c2nWpACP2S0QSrpVYd%qSPdom6ROYF
%"@%Z/[WM*S/Kq-g6eaP=$/A;HLc!fIJ\e'H7otX4KYp4'1%!mB`*a9-,IJQr+r"Y3`8Y9(no:7FVO1aL'*:e#m@5.O%u6jlpf5_4
%6Y%OK)8%GFG$%_N=(sU&=Gr"](\)Y$"<NCo!]i_K,6,W/i$na."8@fjRm4()@PO4E%7O83-((F'O\-W2:Yc/ofB0mAWLI:ITO`ZM
%e4hW@'F,\N\p5ugnjA",Hj8[7c*f:h#;S#`S3`I@2D7=4eLnoH"ftZh2aL5d;"dH,_X.Ke"Pj2b!_q$9:iT[,?mZEk\d=8X5e78(
%A0fu@LndROr\tq`-C?ru!_U[U".cX$i)F+oT"%Q=RK3H>U=^+njBXO?`l7M=+1HKKZcVARM(!PGRp]`B]I?M9U&gS2"5O+'98'.\
%JSp&XdU9I%L?TfiXFY8@+o#5TXu7gl9+2RV[`2B;IiO*I8r+7k8O^Bj=(Fl:j5V%/:]k=\pbT9$"%+ba[YS[J%7l]M?3mT$O?K9L
%@2JMYAB\#Pg'1Q/L`&M$5eZa$jYW)hZ\ho7'Kf2s69t(^$=A4g?r97(TcF)PUeg**;JrU'8n->&oS.hOZogHB\kT5pb&9J@[:OAL
%p\VN@Oi&)KRJ%.1c.J9`7sssh?tdp'0HbAQdmiD;@OHq6Pq/2X$7:7V#jbeU>bBKN>2kd$Ahr@5E8VMcCEjJ)^&a)Q-/%J%a\W=I
%NY1-i)6q"OnhO'GQ@7;l<>.MT7ON@cDpAd,l1GRpdTb``RNlPsGm0g`6`l0TQ'`tge80BbW&g%QPZ0u$VP6:M_1>l#NLB,PG]![=
%W<dc(FJbO8"4T$35mp-/#tJ)A9m46m;=0bYWDiV)LitL3/.>&c1MG-+\&aZICegd,2QmgH#g`HSkQVGZm025Vo>fB>M1Wm5&)s;U
%H(:CSU'PE-;`DN&<\Tqp;[5K`TO.ZU7\su.N=ku+%o]`07r]U]@PQV$&B&1goGWWJ+jh$q;)*tCMqQQiT5C@W.INo'lJm+^[R/*S
%S.0!SR@%iO6Rt)ZZE_C#Q'g<Sq;t/K6uB.@Zf7]^ktG9;U/bj6NbbVURORq?I@MXL`8%r"+Vl4u/*.j$0ab9W=S:9^Q)5g==pPmC
%Q<XtLQlm72-HKbkNQ;Pki^2]<Zb],"L`MPDh[X)FV.RVT\Uqc<$#?:!L$B7kMLZgjI[n>$k*m`UE;cblq/ub1[_bG$lilFrb2K1K
%67XGi8pAS4_na6LH"s!!#l1uc7PA&+*?s+6Bf$G4d"ZKgfE4%0<]5kE+r^eC0q5?_6bB#BP=hh4W,^pRV4/LRL>ciO)oEo.;@IJK
%(aQbdE4E3uN89t?("ZKleI/^gX+Jk/2F<eh>ppBuDPagA:b*u(=UA+Y'X/n4MNfTYi,278<bZ'cZkD?jPYb]P\]Hr;R)cS-&]4Z^
%4U%d.j[#_*-AXFN8tObXj39'XO,M]>$!pV*VUER<I9\iXGp\\gP7@fdk]sXcP8KN201B\?;Fi5/b^aa;f%^(A"Ttrf$;mo,<1t<_
%rYd<nCe)_G[UgJB\"7Jp%LD%8P#4n4U=l=2]cV_R,@T+LeY+*Zj>R[/f`koQ?ku,Y7+%Z]@=es;7+%LA0L8-9'XQn/\IEW`-lM/3
%&BladGQh1P_a9+B!f@86mm,#55HtmSHltc4(M,lDZ#-P/5E,-m50e_nMO!2]*gae(0tsiX;EkY6+:=[:`@'Y1?U]V:2*=hTGVM%+
%YcV@]2$`I6<#7>n8j,ap2Fnq=n6Q5$rYujR1b]+lk80g#rLj^#?:u"kkH3ip`.E`Wljs8Af`^!KIGDl&A0`lS<$&qe]W]2YO>[NN
%`Qs9Oo!@;+eBRJ<C;fT]*!(bkL*6rs1,9O81^LAFJLICM[jMQ;a&+e5RtN?>q`%0g!khsV;0Y8_85LhME)g$F?!*jNO:%Iq,1K-,
%?N\b`A[XT,YfJ!`4@J0-()blJrO@pc\;s!N,Tk'?9-;)CU(V<#M2\04.3J;(+3.Tbd\TidSOV<%*eXQU^pPo0r,F?_!-WfR"!HJ<
%?ko5e5Zp9i(8*I(&4u7&EnZ<Xf]u-lS4+d^>,980(Cg#s4qN[(LQ&n7a*jJu&UE9`0G9e>O4sdZ7lr;4Lkn:`j%cj_O<PZ!d"/#f
%OS3bP&i829at!:)98&M`*:62u@GuaTKfiflJRKVp`u3O>$rX(#VUU]QTVqL9&S.8tC5A=FW!$'XU.gf'$6b&C%#I5])^GM!!'hqX
%*YJebUM3fq!>L%e78,C96qf'a,*[mnYrFFp,WQL30T)VJ83+YV;eIroDDq^R*&f)'H;it0ikm3)]hn@HI#h>\IDN5;g*`!r".5n@
%R>/JC/LFj<nYG2e$L7d0O?s>0hPM2S"!uDbWVM'.+K0)-5)JbB)32_?,Tfr$H;j5b>/a7];k6JE]sF[r,T)bt0#8S6i+-E2:BC$9
%.nQ!-oVTK?+LkWQ#qJ2GX40Gd7gacC^%#t:+Iaa5l!?UVEAn0I(B0HX]>SHU=SIZe?qL[F5TI)c$-UV/DA?:6Rnf2(>S@+2;cHIB
%+%r85LN5TdK:=hlms5*L>cOG]T.p%s/ON_+J8)LV1_6[\91'97@SD"*M0b"nc9;6"<=:Q@Z8.i%XiRde!;/J^UpH/lRU.@8lW:&S
%6lTk8/i'bUBMUd95S2Je6,+OHju:@2%n'p])Bn^k!rDFd8Z03*%9h)TFMaCX@HNXrlUCknLmri_WQ]+mP+1K.EN75gOB#!6`_9uf
%MY0iHGn+98nJ5f%._0U&M\2<1.ZT&l9,2(WRTI2*$B7,p)ZmJ@^9E-52iTO3VOTOXd`q,.EY"Vpr^^LF=5EM>fk&i^f+m^?ereFX
%KVIhI!7Q'JS^+GM\$qTOD=?3S@WlPNB/`nAp/.N#gD$)SKEsE!!p)O;6Nj-n!Y*b>ru_@hY!C)dkXPcm8qD^=%@E&=QHN+35PD+E
%P%.+,^[*,_PTu?Y5ARjY4XM2Z@^:/NatnTG`RGF,Ahi%AiOLc":<JLgR"!tN8Mr-<X;+Z6HQsm=P@@]9f1@T9M-!B]a(/`SP4-Te
%5ea%]oLL6Xme5P8'/EJH.,pPA''CO1@oQc"Y0O%"VfSjt5,ka&$#J.#1ES3RXn!IS=,4p2DO#hYbU9Rh!B."e"u78BQa5**)I??`
%S8i$E>rd,K),*@'3T`51@Ys8>>3%.f'N's85iF6OB@890VTZ3)e/SC&&Bf*]SmWn-o5Rn@Ha(R[K;%'?$*_er+5@4%[o#$(p^ctP
%3ARG8C_9C>RKc'_=<7Y!$=Gk97"Bu'b6X)!][N"a%(!1Vo_5('L[hXBD%Hio&<M_q9J"SdD#!#6+/l#G;*lghK:cpM1qcb.D:=9*
%P),oqj?i,/l6TWQ`s;B*3snk6AK<t^p>>B?>D`t>,2#'h<mI6Y")e0=MsoB-h^MLm`mT?\FTZ2iGNg/9]K>4WGa+A@2p??_5JUfq
%+Tc*KUk<Y0bd+^kG@)^J9YGS4?XNhXGJ9MU\WV@Ai=r$[JgVdAohLdEZ`-i3q-,Ptn6Tik=Lpbj9/oF"bW-bJCleOYON-c[IR?I;
%?fVcC"(Gc)NjrXUf(*h\jDp5qa?M*ET&$0hi\>1=d?J[BU&FPC\nV$fU!;s/^Vj-9b7#k\bp0'`>6=uhfCufq(!e_hPEL_]^U8O"
%m2h'4WlIu;BHujbqU5kC[qB=FE=J$V,X2\`&h?!i(o-'p0tZW4'HJFdSIF8;g=$XZ&*u)UoZS_2GRu:s9+Yl7k)\l77%34HJWCPa
%FNGY5Zq4<AUp9T]7)K15@M&;u8m\2)ECY_f.g_1dR%a(.;*kl*$XmVfOFdd2o8t>_r0&A6H+8Ld!g8:X3!M+/^&U7&63U!6'4'>u
%Qqn(JE?g9CZHT-<&i40j_?!A@/P@6N-QWe"Ikk[`dWmc$T0@Qk-a.MOk6.jF^if`UAd8eCg;GMn]JU=5N'hVnYhL5roUSEBqT1*a
%@MD]WC5EEF(A(Y]9t>IjakbIGYOW:uEP5nQ!ds2-9:1Z)c`a,c(ZX^CK[%-F^S[66p"!0FQ0X:0'*7F6A@Oogeep$seE9A4Y&jip
%qIS9-;VNGLV?a7*X/R/kniFmKJn$Clrlff000)*bK\7$m[=\DR,I?>KU&!)gT"!k_W<nILCoDDNOGS-Di3<iiXEDJ=mcu!P1D\BH
%:f;\!%W*q_'KgIcN[&YT6D6Icl>peRCCP$k!2^]97&fbMs5BGF`2:uD[))\$U)S0#HSrD&F#CP&=Y="9XCqA4;@OeS!qf"!WJRNq
%eI1Tjkd!h.cb,9L\g"*:CWIS_;oU/tZ#L5>f.A4]eA%CQKU%V0FXD/#jIi"`EMWqn3fF5=AX^]=U)=4@F4Yom\uLu;s#NpfP77bV
%*6L8`'XYGPXm+7?!mDS1oOQB`r!;jE*]S4"Oo1L5D:mV.)V4cH02H4a%X@b.5P0='IFcVj<]>D"jH5Nmn#WWaAsNb8;5[An><2A\
%SHrrm-ll[Hc5_6"GEa-fN+9@"-fkY*7UL#,S1jW6QN_E/ju^I\OcgiG>T4&CA_nQj/6lfcVL+3\VN.WDVP".$-Df,?VSl/,"GC%l
%F`aHk-`0mFL-(3d\Bem2/;bOGo^9r;?HVcUMhL,0obHq/QkG:?XPff.KN^V?^)XLa,;h'tdt!d8h;j5GkS6?%B+-NK@1'nQeu=oD
%p)Uapc.#3lTb622,*@Yu4lsPAjf_R>+?M)U;I-ZP"eEB],cAWO,\j_bY:;c"n2?]\$S69WX@Y4-%G0Z1H!#+b+%NAR=GMmSS./_(
%*o#oa.)Pnd=I<m*8:+c8SR]aY`0CX4B5A791QV@0pZ9UI''8WAQdYaF$W=;jGtKtAO%c=C+mSlleU15j9feEH(<e*69P#1K-21f.
%"QD2pI2Oa0kgpg-d1CBm=$BR)7a3Bgal09TYO'#M/&u6Q7O!4*3^d4HPeq;>P7fmu42+h*)DLd'_3]POS=B+P,2H?Qi)g\Z+pf!X
%72fY"Y41/a1AUl)P7iR-1hO)<J/*A4bCT_:9R_'B!P&=rL4RRrmG2,.>_uFdne"aGShD1uYfbokK^Ema.m>05]c@*Vie-)IPd_a)
%?o"%tU7Nl-[4PHQU<ESIG]8-uhiA44`5MsbZ[q+>QHhch8IcbK(ipG[70ptB+HGNGLJ.h0n[[L!i2&SZB%i)QqeuXr`LuQ*&HR^q
%6q-a?P\:mD0tdY.H*(ds141tA9rY*$@#c-lr$c96W_Lk>ef*EYNgIL+7$t#OPn]s\m4Og)flqqm3Rrf0_+KW0/]LNp9q/FO@n(-i
%c8G$dr'8d92=TTbrt3Z_"m>(XVk?Y`?O30N]EW^]5f<i%So7t<^ICpX0eI4;#@%J?L@OAVYtGsuK]qVV3iJ3q\QH-&_eWS<lR^$I
%<5-1"/TU>2]-Pb>Or(]*K86I*s%ZLJlA*Y'pX&5-ae7[HYq5qOo&0GS1at@!,/K12Y0?N89+JjV]S>(F=>$`5\?rV[rjq^[&*168
%8DuqmGE0lF?L!o_Y@$UWg6MJ!DNB6\1#X0?q;e88=+lf/ddg)&Bp@CMo6XJ7V?h$5\8Ba$=e<fjRA=1T17XX,6Y#b%',?=cm7684
%d]a)V3=(DWiOMX>qK3'']p)99@*sd&HL:=SBe#X%+TAu(D_O0b;RRS#d`q`FS<)%3rLA1GE"<]1k>Dh'3GCWE6Js%!m!f85GROIZ
%Xi>^2Id6niQE]SN'C7*l^aVJ$.m:s1`4D1-hpG1Ap%nV043IKA#Fb4SiJ^BTE0a<W.?eC:Rc9q_jc)Np91hLJ;V:W\@REo6aHnSL
%E8fM.i!5Y%SBq*]IumP=3,n=M>63,\kOHb/q1]q.@Fo(bAgXN[<NrA;a&lYOlf&DtashC2XB-qVf_KB\=Ch4.cR^%>erA=-MF;@U
%!3*I'%&'"er<6q0UX^VCH`$`h0UKaYTYFLBF)f80FAQlVW:%:qa?jI\^Gg>WjB_Eh\Z=Wm/&<pJj=5BiM#=>0UoU.OXuOW'C>)(n
%Q,4,6852^VWQ*9OL,YB'HdX1<Yp)@:VZOa(\TIKkC5Dprha"b?Jg!V,_F$bjU@%"<61>nGJ+S@W%_Yn"$9bFs@eWNph`d`C[t4*E
%pVOe*l8Rpj6e%4tSfTX#)=02i:e*cH;/^eTl/^,Re_Ch,d]k'`@;h1emQ79=a$gOnOft!Nq]ZB<M29]VeW*<WhOuRnhr"d70TPue
%I"@u?1Gnqm0%eG*p*m(F8+)>_\mBF;O%o&cafi/I+(t1cjKn%CNsSgp(-t\r\uU0=Os3#DKk5H(<nfBMUHNTiS2($!\+2J%Ip5Pg
%_T`Zd)=i)pBXlfb`@&blU)tpW:nEkhI31MAE,H9%S.m@O7uY(fh)V>hEnH)KHo^Yn]"B;'WY,E:`81$<gh.QelMe?B_nIR`!$:Dp
%!<)rq@1.(4M'4lG_%oj9gloF=cFOC4BX7/skX4WGF49_@^eaH9D-_T*"d3O*0`!a;@4oqkmR[N$M<(G&V$So!FMoe5d*PHch$+l3
%dr5S0\2:;!.22K<N`H%sc[`9q_;jPr6Zt3P@V:)S2.-!bA+F*6mlfhqoEAu(P+_!mGDj1sjERINjdNg0-X:1(QhpI5H_iYt?!^O<
%;/NtcWkG8`Z_IhTNncAcEdU7:)$O3tB%:_<<Nkm5#-^kmkDLb(s!%tZETO8Q`AR?#>sL&!+1nX/3+5-TS;r#bbZnQ2;_f(:F?Kas
%eUb/=bHPP9`Q0[8iI-_8!B+4?H.u8+B:%["h>1;&jBouh>EcMLP]$MaBLQY_ek8=80YJ?:+p8/c1,*@-dMC)['bDn#0+BFP^mPoY
%-3_VLg!5AV:BVh^!Kf')RrB'c1g,UqgDo>'rR?$`Gi\(Y@ghL"K10\2r#`^OG.kQ\Zoqe`Q5>r+_&2\\R<)u*)kilQH>fY93M10_
%j<MJ5[lss-,AhOir2DQ7+anZBA5fJW472i/bZue@F-FJ<^f6OD;BR+Mbie]\H!HD[lKQs\qW`s;An6paVt1+qd8)S!Ht&r/EQ[)s
%AaWE[0_>-ULQ':"Vu4S):M1`HlE5l&\d^2.d]?LX%.5(gDc-L`4EG3<6MUD/.!"MJ]80P'Um2U;coK9]CN-E2`!V27jBBt(Dqa3Q
%4+>L/`P*Tg9XNe-A9#A.4d/=iX4"8EGjemno$>AlIu:-YK&HflnM2=;&mS]g>@rn-YC/)?OMlJFU_padrnYLlaX%1$B)\,f,,/s.
%`^;K`Fh;9Jae7IHo(N'PknO=S4=<?5O$k#G>F,MRc,+I%HjR<ils0VPSDtN#CkH_Bbbo6l!TO)dU0.;N-B"9)e**O#75<T$W#B4s
%Sm6ZS"kSPX*.K#^.(KmV7d^J>7'#j$Sef[U)T<@Mf\q3XTGBLX%ob$Mki"g=*=.0S\Q*]\O`+&)RrtD/c3'ob,BC@iTLBPjJR60Q
%)_!jP>dROO7gkBE>_OG^c[q7:_r,Ui7+n3O^=tOT\TQL\@8BdZFo#ij(/EOB\jqRffgfA(#R$t'\:'pkBp5C<&'MRB`$B\]BU<Gs
%O9-[OK8LU$4R%`T"[%,^??(Dna_beWCtE0HOdnUWHlDJbrn\I+MkY5H-=D/i_It%aZG%-.3c]=FiD<13CQTro7>dE/l[eW;GZ1_]
%'p.V!@5?I`/M.5sZ^n;2&Il\)pW`l)8%:MahR<FJJ]U;3/lHn]lgoG:2OtqVo0N4).8Q@2VA>32A^cg97\RQ#=U:#R($_H2`pfR/
%6qMC35ap(Q<jFcJa=CjRl2(_h(LW<?@$sD,HFbgsnkA2;9f4oK7M0-"=QCe0+Z?.+^16Ht3q!Zq_D'Rj]d7("gbDFj,Wa(9&Qafu
%QDFA)(eJbmCU\A3g[dGF318AVSnr']o/qDM5FubCFWdt[nU>rE+b'OF$A76N%UNZblcO*-eQZ+%->Cj51a98PA]Nm)!YeAcq5KaS
%<L,qgN@4;UEo2qudn=<N</i19j.hLerdR$jh?<9Al\ufYB7*3)n9.gk('Y"#SgHuVpgj%$7EKia>93&XSMif^gF$ns(H03=Sh)gu
%43R&9;a1t`G'jM;Mm,PKB>$ib>XK^eT8H0U2k^`@itXA1p<o(b!(Q3#dM!VG6j\j.s$>DVm*]?l-BGii--#>f$F6e\5&#6L)!`Q"
%cFCk@k]0OKl<h3%\F\:VPl6>.Q1`6qmVA12_d$$Wb<GZA(gPfom.R"<#&gs>X_cLCi%7J3;^*D6e&hq1AnFufDufbC&_cW:>L\4]
%6%p`Q.$pF3ZAUJ$3,&^F;sFK=[8X-.r-(_1Ah;Aip&B!Cc+A`$*m/'0`^DOQ(Hsh2*K7RirmU=U,oGTa(6A^V"]=-jQc2@EoKp/*
%+A+.2Z!H>)j4B+FL-M!B:i"o'@KjDn,*8k!gl@Oh%R;l=CHb%".tg4dQ%ocd<3-d]TZcMD;C./1P\XmRUMU4AC;'K:T/+AFLAedc
%[52JkFK;_L1l!N\RZ`aLK2m'omcN!U=eMKnk):8j)\ug"8(C_u\1Yl:+?E+RJ*L_acf;aBgt)B7F%,i/)U5'(#M4Ps[Kj?m![CrO
%9L")A->o:U*C[j3`)/,5J/#)6b7fA)WEDeEb6fK!R4$kC<?tNd+iX!Ja;&RXZlXa57'TlBXj-a4'!YKjpXaQ+NAVgYE.msFKjjm^
%RcLK)?8F"OOU"dm[M'*i=+]d<RLFLUX!^])NmlsoRsONO>.)0r&_\<PLcY9"L.tEsTHg$4DF!=-B]YFugh'J<,C"4BM&jtT(Q.Y`
%Df^J/B"*^39,F&Lh,j].+Uoo+)CbKG0?)rd,X!8tS=E@6"!:2o9QY<T7o7bipUN0CFK";$KE1E&#:>EH,+n-52iMg'=(2$+H_):j
%:hiD^RJ*=OMZ\um<:AdSR8X(N@\/gW*HD,#UW+;R&kh6A;!+Woj0//7OKaWuXTrJT<M%%A3!7#+;;%CD^qW8A>$tY9c<,u>'/H#G
%<q[tG(]WIpU421e-3!@kIuW&tQ"$.JrsGDae][G$r6*5\0W6NadmnW>g_<s1hSn7?pJR@WQ'b6qnSbS&,OO!qojDu$j1PGF)u^QR
%M5W"[;T=pqGO:*lkLP=Yn#%V0eAZ*grahh9Q<1k@l9@_K#^L<2$2/Q]gH(?^f[0EFT)Is3cHJ3G/M*_=n]3#8Ihd6(Z]>7dS\Y)G
%egWE!naCi;ou][FZ]#+os"6`p=8uU.bga#5d'>3XaV]CGs1SrldU\JRIbHkL$mn@s#tE6uJ8NE*>?iX88$\cs<0Ju)X*?(Ibjsu+
%jaf7`ecC;1prIsDrHnuC#h?8^McFLHA"IT#Bk^#6_NcW`)A!2tLMetHLu#)Hm^THb=)gZ>s*!K%"GLmiE!rT@TfoJ1#oCT@WGs\H
%'51+==+];1W/l<LQM1ZZUacEIof2uUZ!5_SpM%nQcI/N.?G:LTEA*0h#cGksGVt(PcDMF[Cp;(0ejSMu`@R$.;"d0%ZWGOcAl[$h
%i"LDJ'k.'`JJXaZg*3?q7'2NrJ\+`uni`\N*Z&V2*h.8pK!9Rl`P;O/35,[T'TP#V7]<QHS=:AeP:q2W/OYnq;WNl#.a:''Pm+%R
%j9G93Yh<N)Y*Dnb,gt^9'7+aas!b'XJ;8u\O3jcFXN74)NpVR6PaSMk["-6l:Uh-?(ZoCTH-W-9pki@KGD1>#X0][](=oD7RAEY-
%BXMic.(hs^8gd42:[5*/K7]]Y*S#dJd+U[O-W_rJ]FE\N9#qHlRmtkmD'G>+Dp!tMJ3s0aShF!aNoKL3&&+6dad4']P!b7qHGuZo
%:cQBsiS?9S"W06!BfRkDYF:^'#]Z`_U#(mLi7Ys%^5W:q2$qa[:t/g]cA;4o*A&Rq>d:dee12pmhT*'-?)Z@*E[Gq/KG;4BWV:YC
%e7\5tR*qi5<krB`++,!/A8jd71"=&NJ&PegDQb!cKD.+`\$:"mk;Y\98tt_<2BsBchA(cJkWG?l"bt.8\s=)K\8D<'UBMrHj<a+L
%!G<YVW<>Y3)8P3QK"Di4>ff%uq]it+PWk98RT;p'G*EE0:aH^Z<qU!<0g.S*+"OCij:0dtl3[I/N^F&@*jfAom7cqq997pCA`AT?
%Sl2haX9X+^.5$';$^401:MkDnDj0Za0h%VmNa/<g-+bK<a5B0^]hui93@=Q_naq[3+F28.QXdh'Y6`&p."7>if2k$&OG)/)KZ@cf
%YYcD+^D/G$4@dCW1SUS<-JM+kcVK-LYLXG?0;7d<$-m`.B]1+CR<lK--3#gEGN@"uP+X[W-S<7jjf\ja1(RpFQD_]3oefYp\deZ(
%mn<.&4bIJnh*W5I@RV]X"E%@K'k*7hn@/b?:/?uI"gVr@\?j"3_nCA+#>];=Dr*dbgB.;$Ehm$TK(rG9-P!mL"\hIi?K;%q8r'Fu
%4sN\jUiq1:>B:IO6D017o;Ym=(#8Z[mmPUSqsVPE,d\\7jtP@a?E%?H<4#PP,r$2c=)SXI1lfnH<qZ#f9T`p'\CgWTea$cFgh**`
%,,],45Uj?l"@X&+X5:eOfZC<OddFG=-r"TOTn.!6^sB7>M2Pad/jhjfOU`5%MJCEn4[!9:S(Eio:Xe5JC"tm]8/2/](*H#1/>=o8
%QDp)3TJ_n,UZ4N"mmSCpT2=\ocFbdfdd[*d\+bm$@(0rG^]<KoAT\rK7Qc;sK0=UNAuua7qu0*AQ/%$D1;lVJPHl@Z8J*Q-FJ\_3
%L6\m;'hmM\&SF+-U.l^lSD_&DQi,B+VdI60Z'eoq@igG-6f"dDU)/@(fJJ*YUM#[F0\MY3(Mb*l:5>LI+Ls(*i-o6&$C;tUNOFa-
%Ub[g7Fio9,l-&i#k`iYI')^jg=2GsVB#[-]o&)+bc*m<27:-aOc_+/@XSNI>6sG?319B7$%Bt:0<?;^e2f*M;mHcH-YRtn'":0'N
%G!,;SQ%<o?:;<?3RIi*WFZ'$4Vs*T&UkkiUb!L[NS:Ac3IEYIkR#<^W`>%"jA?>@iJiHd`1?ao-$t:B6qaNI,qsMTf#\@?E8;P$7
%J\/u9[+/Pd8_!56Te<=7/,F6+)W\SQT*eGD<b=k``sCa)b_I\shK:/a1X3OiCf?Q,j5[$.m]&^bJ/-&8>'4JI;IQhIF1+c%G@=6V
%PW"]fYjZI@Cc1b0?!e&Nptbl9o('E4:qiNP6YCuChVHa718[\p0K8O)]9cN9Cil[h(R'Z!GI>q^#sds^mmLnk:"W@K*Z]T/6>V;/
%C"8@<bSg^*eDK^\2>0M4e;7\5L/a^id2@8gZeja=91k5<Pd%P9KH"=V<[N_lfAb>:@70cklGU.iqf2V4i1um*p/4u(rS,u=&VkBt
%,d[#ZH7:5gg8:=(L)feP8/%BfA];l@bQ"dnFV>gbPHP*[[/>O(VHI!q--0ZWP%frmPd?iPlcr=-(BS0N*huXf*j4R7P<kBn6NfcR
%c#MTTNMIk`B2YQ?g^"EBfEu[mp]Xp@eWW('%McL/$6JO!.j%gZ3(&F&%Zca^/;1IeR^48j=btB>OWWPde4DOk^":MBo4$<7:UmdT
%H$KeRWcTL=fIE"4ji.q;>?88hgjr[B&C4:bR(7^mPV.HP9C#q*CaXGRo![caqAEtPNfM\k)FdN<^Tkm6\J!a[*uS62GYSWJgI6R3
%R!hf#rrn&]9'\)QeL8UA)dhG84E*6':/qoZ`mI\d\G',ONgiM%IM_L#HAp.Q+D)Pn'\#5*a^(Ld)XG]-95+X^qhO"e0^=0B*>Xk]
%I9E.]>Ns=U_62#^;Jp\mORTp[G]4p"D*E.%K"004-.6Jg.Y%WMFlH5t_U]RA`nD4C,WO-S/?aG(?QGCsD/K"j&T?TJ@==o+#H->7
%`S2QmoGGd(.eO?Up=N%$O:)$.jk<\^h+(3uM?@+n?Un_i'eI]j*FRcNk['R^c!Yi&]u.B[o^]XG^I`Vt=-6j,Y_!T`U?/U[n[P$6
%eaHPATd%GEU6rsa,+06`c'R+%d1o_f%^e^1!$e78FR`=9:W-4CbL%%k9`;:PifTt1>@S!p't<B6:!fZ9/+-sr.K.YJh"Qr7!Kp:,
%eo-[/0=pA-k0^;`.74GLSrYMq?Udgs+jJlo_Mg8=#@a<c`0,O]+5oJb:n!m,l]1I<I>E!b)Ng26ZQ_PiXX5TiRX+5`+"ZG"h07m6
%7uSkgcn"gr3<)1'AA(FNI]pi/%P^(Cr7(Ob)@0T#YD<3J]H>d,&Jh]]ZOcT.&ap_aoT*pnaa\jj;hl3QMrOcr]Wt8;bra0X?m)#k
%H*K`qDDbCV.aZ.[9!C'h2s3DH?L1lC*\40h1FJ#1%@-u-<C#aZb.B7@'O_0\\-:=e;d(T<HD[a5[o!L=@<!X<<BFAa;c&1$7nR0]
%0,=%op(GLE;/N$&AkE"ZjFl#,P9T6h,aDrr,<Ca:J^FiG^mF+l=^s+)KO<TQWlsW`<"rc"DBq#,o+AGU(E:Th]X9tf3:`*)52%Kp
%e27>r9ni1s(H4&M9'EgCfI"s+Z=qt@K.):8W?P@o:eG5p#qHkR(AUE>[jjgD`&RgnPN`[#jEt*Al#-cqMcMJp;'`d0oq0Di>ilHH
%dX0W6Wgf&g<j_8I&+.4IqB"aQ&U619cFe?cd$\",kD+qA1Yl,.D,1hY@_,Q0:YR0Lc%1:"W#\Q52LZd\"B"DaTFg`PA`B#3@CcWK
%npF\38f+6*(Wgd638^)eZ7ZS'VL&]<O#rEY)ZGi_,2JT?TBXqf1i8PgS=HNVf*5i$m.Ge2?0lSpgls!N'cAVU?Q%2G$BCUi3Hd$s
%dhHh6#iA)3a-jXs[P<_f''T9*eJ\AdQ;B>&6'@Ma%A&UVEQYa@,:,FTp^?GsBu@SrWmsgTbh/92%q@:?rWk$n)0KZRPH5cVdI_uW
%)H=MLZ+Kp6)/8ohh+$)2m6+]G3WknRZ+@@!'b@[3F;XAZ@=':0Slg"sB<i!jmoncKZ'#4?PK+1g.(\S;].-oeHWSS1V>3t(E$mX*
%>?C*\ZB5"2#kF.=!%AK-/KHVB9^gVQTuNLI0+a?pqs7+FT[/3<j.ILrQ.UEb]?>s0d!on)AtDI#\pC5DAFW,*.5.oO(&>E4oWh+5
%U\(]K\q"q>n/&VuX+.e@h_s(%39E;FId$9JS05"(jV=R96B#jU!))`T+V3Q#<:)kpM?GK==9L6@]'*;PX3Vfp!k0RbC1:7=Ak"1f
%HU7S"'/tJV-(t4#ZGDKp$:.7hLBrY,WQ5NQ=;Qg=6V1HJ5kFaNV8F[2g=peVJ^kS6PcBb_-YV<WEgk2?TB:h_KC(YTnY#a^jY,r=
%H)$*Yk3[3DG?IsJ-ckP.'["*^)U!)f(tgRHV.fP*!Kea)ira!t&b$M0Ah6h[GgaXJ,0K?0#<4Z5MT-hOUGYO:Ip(DY[2"KSOCR15
%Bb'5j:4Z\oJdBNfAt5YcIqGJ21J9iHm*`]_2Rm_:Mc>u$HSi.`PD_WL-M>&3Z?`TK)lCMa#VJK:7s=i(<.2clI';a]jrD^c?k],/
%hp(ZLT`DG(.b"2>dUoss3!qR02g%8afpBV4,lj_tK+G2XE?\ZIpf+#O6r41>g5hE/qFLPZ52dn:/T4=21[etVjf'"tK4/*;NaImT
%a+!DITRAaG[*76cb)Tg7$#$uE><LC6:u[OX=0?e.P!P]4p%ea9P?669"mtZY_*+?\;?]Y'EpJK[BA2m:68lkqa+6V7Q"!\k,&6EU
%PC(O>cF6WR@GjD0^Z#',*an.-q,s.kMlRq8P@T]lY9GJ=;mr/!J0O1F$kcWK#(*4W7=<>V\c4)mR4&Fsr;'.2$tD!DX70?b#p=qt
%TA-o3/PU0A$]b>T_U8$/Ad!L066O)s*hYT!kEcd,ddhFqK^/XM\VeCX>q65D/CIcZj^1+Weh(Da,@:0BIK&uk[c()bn8]M,lT6`#
%,*<\DMVmEkSLqGBTKe9tF?9gFri;@>#,O'c7`&NqAsqtB95itHUtS]L@m\kfZn=$^l9d%_P,Q`//1"baAAM=)]eIq%qnJAq432-o
%ZiOEQc/;*K_XB3NI^C@W"D\,q_[Oj*S<uI$qTSZSr=HH0F,EU?6[U9eMks@N%D=u]YGV1S]34jaCH+FNPs`:6_G,+h14"OG-.?s]
%2[urEpqg(8<0>S@]-DGXCgY@h?`&E9S":sIFjb2^DhdM*)bXq>lc%tp@$-.MEP$lfX5I3jILs5;b.WWW6hl0];%54XA+&.;ZmhXQ
%@)Xh5=:05K,s;3@oM;[5&Qe5U*6*ek>=N?LVVEUjCt@csGW=2U6`]"80QiUT!kO5!7ha%Tp\8\IQ@1u6&$aFOMcc8nPRBanE?\_k
%n&F=uC.Y&fATsH1afo^cjAnI6E!/_N2AUb8ar@;M/@Dn%4c!C5>Q,q$28p9?FE_j<9.Ua2=1RA)+(cCV<(pd8IRM#1'I_/'?i'eh
%-Xm>^+^QZ:9OQ"to4X8h'e;ucUR0FsMeelg]*L!G5EEjsJqRQ[(t4nILdiJq-LV:N0BH*J3lVeMs#ds(&'P3:_ZTI=Ldia@o%:R]
%@EIN))ff%YSK.E>P_?SjoO'ud+e&T5f1N6AMMpA85.3l.eFdQ7\K>UNmS]uq-l9XCaO9[b^7D>HR;2.7&AdRk])PcOfe8";MeXSf
%WpKVup:h.9N2)f2\dhF)S2.GgF2G,#nM78'FAJ-HLV>0#(l"@UD4*LCUh!Xq4N>>QN\BZe-bp+os-SbC&5kf5=cXM3]P_618AHo\
%l\.4EUAV=1XZ1A1*anf3X7A(0M>/osBs-).Dt0=dR$W2mZp"AL.j&l;?oO'34rdD!$KYPS#B+"^VcW5fMDS@(MuCm)]+tF"+30$,
%3Y'%n\UPj/)^j0TA(oo?ANhbnDbWt[4p5]JAnM!Z1B"qaW?>oN\M24!!`rHp:Z=FD1/fVgX)OnseQ9InD\9PO0mH,eDCmI[juTnB
%V7#\Idqi&/"k%WfMN[2!A/dT^>0NOt'@L$.bh6_h>h.nRO,:HPWt$'F0rH%H_^][aRmhb.!7L!/1]&?`m*S56Q/RB9aNJ+3%>1(b
%>D&pT7,?RrnGZ16IT"UMa;mO!(X?\0:m!5d9TN[*neS7a]O(UI@;k*rJ5&[gF,n_g>MFP'mqC`!KQqh.^XY#O%a=78*NrX@7NP=r
%pV2qoIDHM1)Pg573BoK^.E=a<#K'icOj9f0<q0EC[9I%kGi3K,>Z48=fq!m7:*h%\Z7IjQFXRNf!+ChSCC;Xe1.Otg7K8O7N#k+,
%M]5$?^>NK<`We9[*`Wf,+p5iX9fQ\)i54a$Kk;ai[k\"`@5d]Y$ZO!X^Hrgi(MYg:&"+JfajgfbT*2mf=N@s?9@RR`'EQ2E`Yq7n
%Zg%n?ct0<iM()!eA-Vf3?A/Ndh#)!4ha9#!*o\2uR;J`T#0e)+kB[/DZ@,k&HKKXA(?W;$Fmr"*Rsh%PL1!\UW:qIi%M;1YDS49U
%:rnt8eO4"=>'b+bC^k2rUX@9Q$d*&!lWeTQ6Y08NfJhpYEG$Ym>fVUc(.&iBM8Qr9*Mg[&h<u8**`>M%rWD^V!;G#[H$INr=m%.n
%FtPKQqr>R(%h&k;JOLNF@%;!f'I3g4iFs1e^==F)QhSO]X?uU#=!PaE)J]jfJV`6Jf$FrA29eK+RppYH9gh"[\i9oJKHWLO.p@(.
%V_E19K!j894Fp`'%bd!;UXiV(MNopJ^^Z-AJ&tM*H[dj\n.l])B\6+hcAXi$e_]L!m=UV]4u4n7k:.JlFUW"=L1h@;bcu:[Qg-p3
%pTut[M*)Q%@V&LSn,X'W#gWl]JGe8o#Z4d-+;f*oU$HqXi[6d+2$SBkpk'h*nun*R*SR11l24rkn3D:&GaTC&]m(R>`_73t(Tn)h
%_m#7XE"dg;rP/]9f+0>i-_J*7&=9(D1M9LM^b8Z6n+tV%6([T8:f3#?4d<%+nF-pMk;U?/R>Da,\3Q,X"0,6SRTC4G;Hf@'."Y#=
%qV9Mrl#ZB1bV'?0%j-5`dEMgScp6Xdji!;AC8al@m`0a(cJ9-EnmOfkP$oW8Blmu"^fX4`&AYs8qR4JmB!5I)k^U.FS`1d5TL2&2
%!FJO:q<4_*'*GiR49#0_i5HC\MTTm&*.'%T+6J7o]F-eD1C#O[bW5lkBR]hVRM>sCJnb@`^9=VVQpWjoLG"!N:rI3GDaq)QgLq'J
%Da%J4ONtIG>6PsjpE#Vuhb@nt)1fh6b55#T/8=fAh*[d?(!HaF,7^>i+HnJ0E[j?2[ZMT8aH1Wt6KNak7H,0QLg!^^rR0#k)&9R]
%XtES^\GAh\kfZ\@HpJITNlM0H#`[3XCl!or/b)&n2U]A!(WYC5iDSt'T^A's?eJ_4!$Hkc$m>]>-HZ*8`Ea^*J?mhMrs?KKS=fn0
%T:qV?RgG.5o1ib!\[)9bXE9a:`_sS^]p#>Me%k$pTLP7PEp%8]Aa@iNmCj:<DjaT`5@JiDJGK7L/9BJ+RRA&)LfM@rq;ODQZ8(!9
%(ENeODV0V6M-LH/1E+in]p=-f64i8Ik.JYAD8MZWg*YWSZs:Sg6I_)SACWl,[k=CjL.0n%q&,\4;E,U`/s'nr!E4WM6dM5`e6&m5
%Kp<1B>#RS$%<;rHRpL7]H*,]an2Dg)T5E2#Mh._3SpJ$]O.ffrS^c93gPR+C^TV;W\6)XmEi6temlqf$4287]3hnT1S+_:V#/?dL
%_[b#rHi@FgLcec:PD#a%PAiDS-P7gLo$b;#GD;:$gHa5IbXeaW_,G^gg07830^a>JV-2\*iM*/5`Bgotc@+EL3bEc9\".+(s!iI<
%#hl<,R41R!k^$oUL\CoAV+7rL!iu'^_s]"q_XoUQO?Z0@,ht$.@kBH&27?h[/3:!`U_!#h=5P8pEPnEbq1CGrK5pD6D2Qf;pn3;<
%'u;dm%[L`9G`g&fe9Rimar8WYWt!SAo]pJF!?mt.8*.bn?aDrDp6)mTDLHc!UHM\kOftjI'g?^)-abkjhhXK[Q:Mc.PKco[hi$<=
%)FO$bluPFU4q&?+q=p0U?[20Eb9tmHk_6V/[nW<?e=UCbp-)t*Jjp4Zh!jkD2rU2S5)\q2!n]Lb3@deEkXNe6o>Tk%>Boh^PnE'r
%QFT+UIc!mEbb^[UVl@o,&jHhKdY8\ASB1oEgD/a3gr6fiqG\&Zf>&,o\:#Ubf!gW*bt:FFo5#[lGiS`:F@$eEY(Y61r\r_H`p5!1
%rW.A2;D<N]c2pp`oRcde.Uk5hh*V.I+_$A`gi5]:R&pC`_6P,%ceJB&94j(R(cdiV6o%CN%phU#JWsW_r.2Bo)1)ctEHf15B=-oY
%:a]jmG?TC''oA#/J?skq,on6<0h(Kr4E-YA`'THSA7]sg!S1dAd3H;q.7&q/<Uj$+YJii58e0r#oNka%9?8jN_=e=DLb#AhkrH4$
%:DfZQ0U#e_lL$m8>/f:M^O(SE1ib"&F.P:e<i:@8i[L(;_A!F&4sH=.Q?1"h%pd%"K(*ocIU4f<Z!C#;qWj%:938WZ",+SWo_YWY
%Nq.qQ<!pd.")psige$*JC%EC/Vu/h\cP[S*B!*ja)Nm6X"_jR7mkdCS;66)k#C7?;XK^)Z![^g9FaL](EkV`]cR?eGniY;HZ?.JC
%KG`?*07OAadp%i=@BM6AF79#i>0_BL.QNT<!^3sK(gq1R:=De->f]/WJEqhq*te`Y]?lMUM0?pO%^>#fquc-p\gOD?d_TE+>EbY(
%DbQt$7^%WPLVHuHnG@i(G6urV'+%be)dWQ=!7h_!Xtl13r6Zo?ksKT+6-Al).TuMqn.@CQ5AGTX5rl'F^g]aHEZ]aind3O/>3t8#
%&P@A7>HLP_,CLn>l;Og);VZ.$(>r8T]?:]*)D/<q&l+(VfqbfO$kh+B[O<gn(>aC-j_THT<g&t_jF]-W"#AH`&,2ui,r;n--!oDV
%]A">fmqr@1;YdU*.'M&J""O+[/7-7#9t5oVU(KpRj$p^O5(/n%WJ1C1YlD=,IMrH$LnXUN82Y&gcnla_Am?uUNqm7[I7-+TefCqF
%SLXkSXUXe_g5'a0U9CpioVr_,!&)9J6;h3G=nP.n-Db^=^uP,[?.bpd/ef\0HNS@8l7PpjTRtrU/,QcfMeNcID=NA0%s7oo/V?&a
%GN&l`2(PaN.W'aShKgNp%untf3Uq6Zm`AKL=b0jk`>A=(\#Z@&><T/q06gsI@&Y^o-(Ib$C6=1F;=Gcoqj8pm`nA=)E9(/e`ai@#
%m?Du2)oN_PaX,Dn>GV&_fu=CHhBg>/]B^t'VWpuLI3W)bL7O(),VebtR_'@@R?%1t',V_lcG"T0q]C0"(U2cWSePjUSdR<g^Kc(7
%BBFu"(CXt^*:F`L(qp24j%j9F:XbD73WRW6&TZeD['nlH"_J.?=r_#t)d,K^6*:.6IsQ`DjFrrI@$jg4h;C_OL;^HBSE=nJDTiI<
%)^jXZBdHYeUd(sG%Y.E0SIpfS[sA%R$@BUlR8VM![[9+&D$JbHh[P\:h8h-0g\uB_g.V0B3H4o0G\,#O$;8+HIN_!mE'^o$a/qWY
%2ZM5_PQNfh9G.?S"fh0\=g>,fTBg$S+5uN97p39Q^ls5J^?NgBWD!IC$=Z_S!sY]mIH]HO<D,Om/)Y;I8lbhD%6&;-H`[h\V*k-*
%O<(X!]F+ceM<A!-PD's?O-,4Xg6*&KThYEf'%qLDR4Tc:rfMiErV(jCDQdBnrF$FNms+(BNBKYa&WueY2RGheWA"3-=<r^h/p($"
%(d0asEMrEq;p_.7'7f1RO@qd)mD,46nth,j.%oO$rps05UCN3_p5l8#iU:knPmlh!3rX)o<s=c5]n:@t7c3HPIs`/$4]+ddTc:Ot
%6ADTLGUj`mhqS)k`7PR*JuUJ8_n\:B(VDJPAUK:@ap9oV!f^gaLOc762^Y$(!"qnJ!X*YAI1eJFq3:pYD9"l`:DKEm`8kG7Ld[F:
%?i@``D*Y2TA;WqpF>O?dhhZdEW_Mmb'dN`7mlPsm,25?6OElPC_Qq')Gm)f,%5&.(#r\VKEh+:a7GDDQDPJ@Enq^s*NoU?-reO;G
%pO>SZY\iBb_f+dkIA'Kt%*\S.!O3qq(dU>p=`c!R;]m.Q*_k(7hq\B5c%15+.A+frS5qbFp,%%?>:I)c?BUd\YiQncodaF`GSV4Y
%HOUeL#Y\:t5Df]5oX[%hG*[@0=mRI,7B&^o9q\nW;Acn?2TJ<RW0^[Ba)o!<BP/1J.A;+a"8,h.+T-TAkak%h'PI^#&3R7o0OG\$
%;&,S8J;]3b)s_Yi_d(SS#qA:+ALiU,pX"_\M]CT*BBb,7o$CIcp2`a.qt(\B!@-FXgsO:!:5bmgf?UU:F#M\cO$[SQb\7@dUW6>q
%LR79`>`kN6Pj;;$&fnX<6]OiJJEsJ7-HVCeR&aLsO]KD#3$[PgVmH"LY=Se8O([rIGeMAFNQ&X,e7u]509M=-<<'i=6a"cfB_JgJ
%PH%cX>K8FWM`'\k'Me"+9UC2K3T:2+boY>jn)b^KF>ZqJ@5;IW36c0B.J)'jSN3lSPEjO_/,A@"e:`2),%u]X.&bMPT^G*ent!KJ
%a/'glI>[_VpVY>,NFIFWdR0`.S)%=`$++ZcB#1cq,$cUPScMGP]mfo+HseijN5C#>_tjB,fAig&rP!3R\b*ED+1%gj@/7=ap^uhr
%E_*-*,40fi>ZnF[&_28+9Ph9G+^K4OB[l+9V^US&F9HLHJ&;*m[+R[eJXGOWm>:`)eBURFbGAHh$^KT-?L!Zh&'29uaM,"QqAid]
%-P>Hi_61.82eI$.J34O=DsXRSoBOYhOI]A3(87VWYO1FX9j<Mu@oIqomt"B_T`22s#lO:uSYTI8R[\$iiQ6r%_89FJ6.]m42+>2W
%]2aTQ2#$N_CJ)m%Md@#Z^<CXZ$a[VA+Rj`1Z`Mthk0q$#16S5gJ%%-#g:(lMnbGBq?8_H[K.hUdbB<AZO*mf">>S(L_RaUD*,fM[
%@+-$m5?-!Co^od<F'C0nr)\<p"-'U3QJ,,.f(p<Y7l00urgI)'^?k")-bW-3n'0BW`OBqGeM]LiW--[`;`#L;O0@G1kd;IJmLbVO
%"eV^&/qlsqhRi(/V8E0-c).>9.J1a]OSH0oN[@Y<r$VLs<qS26^CZu+e'o,1Ms)B1;tsr6>:q\4$s1[(J.?[+@?fU:8OSt_pE']p
%CI^iua]rLZcD^(@IkVa%:*W%^\gEJMLQn$5>a58rg*0':e%PVkDrkOp<Hg9e.BVd+=089:P5RZa-hJV_$HOKo'5n-TX@'H,>T_ep
%8VIQrX<LiY'_eXt;g2$+m'b8*gTO2HqR:M-]em"^N_i[E?CB5nJ$a0!C"t9*Wg&110kU.fkrEJJ"+p0s^S/gf)F`S*5fuX"^S8p!
%:,Pm!^P]!_U:S+:.rH$9Ip?_sAJDgNS1?g/C9Z3V+nBDc=r)Y^%(f'$>ZZ1M`R#g1U.tBU1qhf,#p/9qm^5[ZP'kN2L"@t+c`Mi=
%_dcg@^Fq6KS^@(ms$INV$l:"J[ZXcQFcK)o"9),6^Nii4*J5L>@]KuIp*?7X$$0`6Si)^`[T`N;B4:^LrIemiB\)LVAL?80W[-A3
%@X7th7/Kc:H$A"Jp<Bb3n3*sipK(Fn.Z4(,2.;8$_kZHrK%4A6J^Hbe5C@tD5s\cR3-a_$N5qq]*]#!W;'..R)qXkJT4In:*HeL=
%b3CMK0b/MFVF5.<YseVK?Kie^[jHKr5.-ad1]\CKrO9[0H162ebo,s9n(scY`i`AOq%MA%nNbh,:>U+M^h)_5.rO/iLBPQjl_([`
%IV4MDj5UBJ!flYK4</YM.-6t*o[%kZc"CNhk4+b'rXf;*DqK?5j\HVCY3]lc6HjD^'=E*`YCECmZi9/nRXKiGoCIZG)$H^sZ!l^@
%9oM!9\Y*E)cgf/*bnPYbJJjtiN:4J>fm/S7?6q/4GinIG'Q,)\P7G'Db>n!D5eeT0?M4>PPQJLRiV%'ine[*]k'kW*KD!c.cQU:d
%k`crh/<Al.kcS#f!],8*1@7+87`H26CpLGUGQ/8L'*:1m'd\J0e!sfeJbTtD.IXG>;Ns]oDXn?4ctgk4b0TrYDL2V,o`nR1F%qrb
%956)*l](gcFPFaUJM[[%^&PnuBWl@0@X0NUH@\sHHj:L"5NhHCR+Fd?mX[k"$%oSpE,DA@^hFlA_)TX1IUWY,1\Qh-rftS=<dVLg
%"!](5nrPl-"e0iq!AA-B[&92A=k6s!Nl-[GFs#-0XLQoP@i!_SqkNJiXh4^iMWG)0ie3N/e2AnmpM2j%f,<,L[!D3cGg+*DV,CqC
%iIJJTMDV=qQ*/SjMNhsYK6$XVSI31iV:UC\r6N.2>u[[ZjU-('&X+C,R'aO$f-SMAj5j!d($M`[*+;;kGks>lIbCn38R_&iUK3,T
%*c`b&B0m`nmA=r"hMuF/]Uu1.<g&GrX0qo>*qV2$a$C4=q_o5,<-d4CmD8PB`cVb1;-W*!;4TYgn@^\*\'b$_6\$=QSAVT]gA\&N
%Uo+#f'1>7L:6+uc<"GGsD"(uTE+-f@m`rij(l8,X*>4FQqJPDT4?`cs>fP$V#ZW8PH;isrFA_!Y#onDH8()$[=nL4HbAQ&-S5&&\
%FeN0enrH7aG!aq]@]$>9lS)>#`)a(J]e'b@la<Z!E$lsumY'[_.NmWqH#l/O"ZuQEJ)Hp4.ENERmc0qN/`F>/(Y]I\?]'bQDXsDN
%^YpR!m-3-!_u6Le(WYPN*7;=UlQeaQ1QSsla@<OuR@SIVN-Kqi!U&o2rpIajV,dAT<&^ct`:bGCDqRtO=6VL2-%-j=YR]s(QUKfu
%kqQ;*I1o`b4<D'hgSu\$#ED13BmAEL5L</]3h0T^JE?qSln0n#-t!NQDCNa-k!Oqj0(S3<5SXThG&D\6KM9X>6TYGp_ot3#Ucq,S
%m#riLUSK3"IM0o9FShQL1knCVOd"r<l+pe?@tpLWX7D.*<Lf1iFF#iDE+YqMPS*q*.AIqmn7C2=5[G0Ws3<!?2YN-Z*7NtH=pid]
%K0$uu1.4/./-G2m?CmrEX:A,&9StOlkmg*pJ*jS;QshXf2$6PrI/-0^7u1K\MQ"\ob1i-Bb*h>G/R*dgL>WHK?"b(`_>LmeFq4'O
%R?&'Mcg0NuVmX3p.ctBknb%K$$4BASigGj-0--5.SR[#])nWlR7AkL1G;jCY+T'-o('!>F<%:H"0&J;:j-((*'dm-)1fh&fTAlb"
%nUY$GQ5SJ0PqBj:><n.Q^m.)0@HWmt@jEG9J:pFd)nP45FAZTrn]a/E#h8^`mQ#8giUFTMNU^.a5ia3D7P;nhce:J,<\lP,7"k!*
%<?C6GM[KU9M3R@dX^h/,>3??1(S!n$N")X.)Z4XNhTea"]i*0ehC5o.G6"sm$:Dqf!V]KW2WuOj3u<t7SBKZ0;+k#KLC\O$r3lFU
%J%3-@m3pcf;QV7EiD$h&CZCX=],1euS@ra=1TG,VD`oCf,omt4fV#?UUY2'O^e^E&mIuZNWG9!j^bTD@[j;<VI'edR9G0D>TLML7
%Vo]G#jqg17P!e.2IAhHPR)aA/VUl+ZC^8JHU=OQUe9H,Hh&\tU=q?U*2>Ed:?XM:J3`!K@qB=;k@qgOd8X-mOCf0WrgM?g0FOo3j
%JW)Or061m?"pg,-qh6NLl-0cDf?g9P5OkqZPfo4,K2X\2i=SJI/+F3kSff7Tf%o""gaZG/B2)\Z'/P;Ee<JQCq4USBfk>i/C2qXo
%]R@9JSGtuXQ?ST0>GA_Chg_$fb*SjpU$phmRRq.P?9Iap36nW;`[`S&(Nu.(PqG.RpQ9_U+n4?Ulh6>##Ahn!36qK>_D/34]B+!-
%l;)8$\,/DTi^(3We8+A82"MN+V^U7hEALh$?0DT/%M&2H@4\^]@GX:^oQF&cOIV@k!9YJLM^Cl$Or6h+>;6r_aW:G_!(nBNB/*Yo
%Z[Fm;2W;uJ5N3Bd)P7hD4tR-rs,d1!G>7d\\PPq=S92EMH"Jee3Z&]!&s^$a'3W`R+4?t$pJ:Le9sdW-@C]E#+Z+7CZNFU%f]t]/
%_Bg/_kc[>&@a?^@[,rHf+T?I<6U"(9%CPajrdJ`f'Cc#Hf*7%HG5&TWWJ<`^EP1Z+YBCqUm`%(^\A,Rj[b`pBWSiA>ZFPFZkc1TV
%lMFA.6#77Z`8?sSU]N#e:@,8*a0F];R9Q;W\Jn<E8enO^<:5&>V%b^#S1,lBo0hV6o)Tkp]r_FHdM18.,6fPZIn0r(JnCJ(!K@Qh
%V\hok!(6fT!$*/rpRKIg-Hf0H;YO)hcc<0*^UqmKRZlLtTDtiShjs43P1u2TO+/-6\NNN=R;5Xda^"8h90JS%,es%_q0274q0+T8
%*g/;h--?*IR=?Q)q89s+06c%.pEd@qQoW4P8C.7[47CIA%mTMB3W;55nsB4=nB\\.J'H*;r?jZEQCL;E]'Q-JSK@[SRZB]*Rq$Se
%e77("O4qqVemTU[[*tK8c[QGJOjk[[nuk8LqN0JQ3U3,)rH%[YLZR+%jC9i1Ec\TBSD'ZahtM-WCNT[)_VgH&gDFP[=3&$UQ]9UW
%%C!]&mU^%9oaNbs)NK?t.2(J""ut#Io/ukis3U6&pQ9eEOu!U0Abih(^Dm>=+<^kTNHIe"jp&mlNbY24<?H``N$[20=]U4`s+QUR
%[ROZn4Fdn_?e&b39J.s\ODr3=3=8HqOVHr^=Ug8$NZi6Y:<FW\4+;pF9cK9t4u3(A/Dq5aT6_&8(^Ul\gk&3B"#,[J$!??rV=>ZT
%"N'H^pq%!tE1Co/&g\UGkUd#m8nRtW]Ys#ZOT^FW./5B>N-roU!Y5RO*SsPi9qE"<5k:Y@Ot&Q`;,,WK!<~>
%AI9_PrivateDataEnd
333333333333333333333333333333333333333333333333333333333333333333333333ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
""DD
DDUU
UUww
333333333333ffffffffffff
333333333333ffffffffffff
333333333333ffffffffffff
333333333333ffffffffffff
333333333333ffffffffffff
333333333333ffffffffffff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
33ff
""""
DDDD
UUUU
wwww
8BIM
Path
8BIM
Path
