v8@?0
<%@: %p; clientIdentifier = "%@">
ConnectionAccessQueue
RegisteredClientsAccessQueue
accessibilityUIServer.handler
com.apple.AXUIClientConnection.stateObservers
com.apple.AccessibilityUIServer
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.common
BasicAngelIPC
%@.ConnectionTargetQueue
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"NSDictionary"8@"NSError"16
Delegate of client %@ cannot process any messages: %@
AXUIClientConnection: Got invalid value for message identifier in client connection event handler: 0.
Couldn't find client for identifier: %@.
Couldn't find client identifier in incoming message: %s.
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the background access queue.
This code must execute in a writing block on AXAccessQueue: %@
This code must execute in a reading (or writing) block on AXAccessQueue: %@
Failed to convert initialization message to XPC object: %{public}@.
Invalidating old connection: %@
Service connection: %@
Could not register end point %@
Connection activated to %@
Connection interrupted to %@
Connection Invalidated to %@
Failed creating connection object to %{public}@
Connection to %{public}@ went invalid.
Connection to %{public}@ was interrupted.
Unexpected error connecting to %{public}@: %{public}s
Got object of unexpected type in client connection event handler: %{public}s.
AXUIClient
AXUIMessageSenderDelegate
NSObject
AXUIClientConnectionStateObserver
AXUIClientConnection
_stateObservers
T#,R
canReadInCurrentExecutionThread
T@"AXAccessQueue",&,N,V_connectionAccessQueue
dictionaryFromXPCMessage:error:
T@"AXUIClientConnection",&,N,V_clientConnection
isProxy
T@"BSServiceConnection<BSServiceConnectionClient>",&,N,V_serviceConnection
performSynchronousWritingBlock:
T@"NSHashTable",&,N,V_stateObservers
serviceRequests
T@"NSMutableDictionary",&,N,V_registeredClients
setXpc_handler:
.cxx_destruct
ax_errorWithDomain:description:
T@"<AXUIClientDelegate>",W,N,V_delegate
dealloc
T@"AXAccessQueue",&,N,V_registeredClientsAccessQueue
initWithFormat:
T@"AXUIMessageSender",&,N,V_messageSender
performSynchronousReadingBlock:
T@"NSDictionary",C,N,V_initializationMessage
release
T@"NSMutableArray",&,N,V_serviceRequests
setTargetQueue:
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceConnectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateObserverQueue
T@"NSObject<OS_xpc_object>",&,N,V_xpcConnection
T@"NSString",C,N,V_clientIdentifier
T@"NSString",C,N,V_serviceBundleName
T@"NSString",R,C
TB,N,GisConnected,V_connected
TB,N,GisRegisteredWithServer,V_registeredWithServer
TQ,R
UTF8String
_broadcastConnectedStateChange
_clientConnection
_clientIdentifier
_clientWithIdentifier:
_connected
_connectionAccessQueue
_delegate
_initializationMessage
_initializeServiceConnection
_messageSender
_processXPCReply:context:
_registeredClients
_registeredClientsAccessQueue
_registeredWithServer
_requestInitializationMessageFromDelegateIfNeeded
_serverConnectionLock
_serviceBundleName
_serviceConnection
_serviceConnectionQueue
_serviceRequests
_stateObserverQueue
_xpcConnection
activate
addObject:
arrayWithObjects:count:
attributeWithDomain:name:
autorelease
backgroundAccessQueue
canWriteInCurrentExecutionThread
class
clientConnection
clientConnection:didChangeConnectedState:
clientIdentifier
configureConnection:
conformsToProtocol:
connected
connection
connectionAccessQueue
connectionWithEndpoint:
connectionWithServiceWasInterruptedForUserInterfaceClient:
copyXPCMessageFromDictionary:inReplyToXPCMessage:error:
count
countByEnumeratingWithState:objects:count:
currentContext
debugDescription
delegate
description
dictionary
endpointForMachName:service:instance:
hash
identifier
init
initWithIdentifier:serviceBundleName:
initWithParentClass:description:appendUUIDToLabel:
initWithUTF8String:
initializationMessage
invalidate
isConnected
isEqual:
isKindOfClass:
isMemberOfClass:
isRegisteredWithServer
label
length
messageSchedulingSerializationQueue
messageSender
messageSender:accessLaunchAngelConnectionForMessageWithContext:usingBlock:
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
messageSender:willSendXPCMessage:context:
nonretainedObjectValue
objectForKey:
performAsynchronousReadingBlock:
performAsynchronousWritingBlock:
performBlockWithXPCConnection:
performLaunchAngelTask:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
registerClient:withIdentifier:
registerConnectionStateObserver:
registeredClients
registeredClientsAccessQueue
registeredWithServer
remoteProcess
remoteTargetWithLaunchingAssertionAttributes:
removeObject:
removeObjectForKey:
respondsToSelector:
retain
retainCount
self
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
sendBoardServiceMessage:callback:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
sendSynchronousMessage:withIdentifier:context:error:
sendSynchronousMessage:withIdentifier:error:
serviceBundleName
serviceConnection
serviceConnectionQueue
setActivationHandler:
setClientConnection:
setClientIdentifier:
setConnected:
setConnection:
setConnectionAccessQueue:
setDelegate:
setInitializationMessage:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInvalidationHandler:
setMessageSender:
setObject:forKey:
setProcessHandle:
setRegisteredClients:
setRegisteredClientsAccessQueue:
setRegisteredWithServer:
setServiceBundleName:
setServiceConnection:
setServiceConnectionQueue:
setServiceQuality:
setServiceRequests:
setStateObserverQueue:
setStateObservers:
setXpcConnection:
sharedClientConnection
stateObserverQueue
stateObservers
stringWithFormat:
superclass
unregisterClient:withIdentifier:
unregisterConnectionStateObserver:
userInitiated
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
valueWithNonretainedObject:
weakObjectsHashTable
xpcConnection
xpc_handler
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16^v24@?32
v40@0:8@16@24^v32
^v40@0:8@16@24^Q32
v32@0:8@16^v24
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"<AccessibilityBoardServices_ServerProtocol>">32
v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender"16^v24
v28@0:8@16B24
v28@0:8@"AXUIClientConnection"16B24
@32@0:8@16@24
v16@0:8
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
v24@0:8@16
v20@0:8B16
@"<AXUIClientDelegate>"
@"NSString"
@"AXUIMessageSender"
@"AXUIClientConnection"
@"NSDictionary"
v24@0:8@?16
Vv32@0:8@16@?24
v32@0:8@16@24
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_xpc_object>"
@"AXAccessQueue"
@"NSMutableDictionary"
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
@"BSServiceConnection<BSServiceConnectionClient>"
@"NSMutableArray"
v8@?0
<%@: %p; clientIdentifier = "%@">
ConnectionAccessQueue
RegisteredClientsAccessQueue
accessibilityUIServer.handler
com.apple.AXUIClientConnection.stateObservers
com.apple.AccessibilityUIServer
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.common
BasicAngelIPC
%@.ConnectionTargetQueue
v16@?0@"NSObject<OS_xpc_object>"8
v24@?0@"NSDictionary"8@"NSError"16
Delegate of client %@ cannot process any messages: %@
AXUIClientConnection: Got invalid value for message identifier in client connection event handler: 0.
Couldn't find client for identifier: %@.
Couldn't find client identifier in incoming message: %s.
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the background access queue.
This code must execute in a writing block on AXAccessQueue: %@
This code must execute in a reading (or writing) block on AXAccessQueue: %@
Failed to convert initialization message to XPC object: %{public}@.
Invalidating old connection: %@
Service connection: %@
Could not register end point %@
Connection activated to %@
Connection interrupted to %@
Connection Invalidated to %@
Failed creating connection object to %{public}@
Connection to %{public}@ went invalid.
Connection to %{public}@ was interrupted.
Unexpected error connecting to %{public}@: %{public}s
Got object of unexpected type in client connection event handler: %{public}s.
AXUIClient
AXUIMessageSenderDelegate
NSObject
AXUIClientConnectionStateObserver
AXUIClientConnection
_stateObservers
T#,R
canReadInCurrentExecutionThread
T@"AXAccessQueue",&,N,V_connectionAccessQueue
dictionaryFromXPCMessage:error:
T@"AXUIClientConnection",&,N,V_clientConnection
isProxy
T@"BSServiceConnection<BSServiceConnectionClient>",&,N,V_serviceConnection
performSynchronousWritingBlock:
T@"NSHashTable",&,N,V_stateObservers
serviceRequests
T@"NSMutableDictionary",&,N,V_registeredClients
setXpc_handler:
.cxx_destruct
ax_errorWithDomain:description:
T@"<AXUIClientDelegate>",W,N,V_delegate
dealloc
T@"AXAccessQueue",&,N,V_registeredClientsAccessQueue
initWithFormat:
T@"AXUIMessageSender",&,N,V_messageSender
performSynchronousReadingBlock:
T@"NSDictionary",C,N,V_initializationMessage
release
T@"NSMutableArray",&,N,V_serviceRequests
setTargetQueue:
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceConnectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateObserverQueue
T@"NSObject<OS_xpc_object>",&,N,V_xpcConnection
T@"NSString",C,N,V_clientIdentifier
T@"NSString",C,N,V_serviceBundleName
T@"NSString",R,C
TB,N,GisConnected,V_connected
TB,N,GisRegisteredWithServer,V_registeredWithServer
TQ,R
UTF8String
_broadcastConnectedStateChange
_clientConnection
_clientIdentifier
_clientWithIdentifier:
_connected
_connectionAccessQueue
_delegate
_initializationMessage
_initializeServiceConnection
_messageSender
_processXPCReply:context:
_registeredClients
_registeredClientsAccessQueue
_registeredWithServer
_requestInitializationMessageFromDelegateIfNeeded
_serverConnectionLock
_serviceBundleName
_serviceConnection
_serviceConnectionQueue
_serviceRequests
_stateObserverQueue
_xpcConnection
activate
addObject:
arrayWithObjects:count:
attributeWithDomain:name:
autorelease
backgroundAccessQueue
canWriteInCurrentExecutionThread
class
clientConnection
clientConnection:didChangeConnectedState:
clientIdentifier
configureConnection:
conformsToProtocol:
connected
connection
connectionAccessQueue
connectionWithEndpoint:
connectionWithServiceWasInterruptedForUserInterfaceClient:
copyXPCMessageFromDictionary:inReplyToXPCMessage:error:
count
countByEnumeratingWithState:objects:count:
currentContext
debugDescription
delegate
description
dictionary
endpointForMachName:service:instance:
hash
identifier
init
initWithIdentifier:serviceBundleName:
initWithParentClass:description:appendUUIDToLabel:
initWithUTF8String:
initializationMessage
invalidate
isConnected
isEqual:
isKindOfClass:
isMemberOfClass:
isRegisteredWithServer
label
length
messageSchedulingSerializationQueue
messageSender
messageSender:accessLaunchAngelConnectionForMessageWithContext:usingBlock:
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
messageSender:willSendXPCMessage:context:
nonretainedObjectValue
objectForKey:
performAsynchronousReadingBlock:
performAsynchronousWritingBlock:
performBlockWithXPCConnection:
performLaunchAngelTask:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
registerClient:withIdentifier:
registerConnectionStateObserver:
registeredClients
registeredClientsAccessQueue
registeredWithServer
remoteProcess
remoteTargetWithLaunchingAssertionAttributes:
removeObject:
removeObjectForKey:
respondsToSelector:
retain
retainCount
self
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
sendBoardServiceMessage:callback:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
sendSynchronousMessage:withIdentifier:context:error:
sendSynchronousMessage:withIdentifier:error:
serviceBundleName
serviceConnection
serviceConnectionQueue
setActivationHandler:
setClientConnection:
setClientIdentifier:
setConnected:
setConnection:
setConnectionAccessQueue:
setDelegate:
setInitializationMessage:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInvalidationHandler:
setMessageSender:
setObject:forKey:
setProcessHandle:
setRegisteredClients:
setRegisteredClientsAccessQueue:
setRegisteredWithServer:
setServiceBundleName:
setServiceConnection:
setServiceConnectionQueue:
setServiceQuality:
setServiceRequests:
setStateObserverQueue:
setStateObservers:
setXpcConnection:
sharedClientConnection
stateObserverQueue
stateObservers
stringWithFormat:
superclass
unregisterClient:withIdentifier:
unregisterConnectionStateObserver:
userInitiated
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
valueWithNonretainedObject:
weakObjectsHashTable
xpcConnection
xpc_handler
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16^v24@?32
v40@0:8@16@24^v32
^v40@0:8@16@24^Q32
v32@0:8@16^v24
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"NSObject<OS_xpc_object>">32
v40@0:8@"AXUIMessageSender"16^v24@?<v@?@"<AccessibilityBoardServices_ServerProtocol>">32
v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^v32
^v40@0:8@"AXUIMessageSender"16@"NSObject<OS_xpc_object>"24^Q32
v32@0:8@"AXUIMessageSender"16^v24
v28@0:8@16B24
v28@0:8@"AXUIClientConnection"16B24
@32@0:8@16@24
v16@0:8
v48@0:8@16Q24@32@?40
v52@0:8@16Q24@32B40@?44
@40@0:8@16Q24^@32
v24@0:8@16
v20@0:8B16
@"<AXUIClientDelegate>"
@"NSString"
@"AXUIMessageSender"
@"AXUIClientConnection"
@"NSDictionary"
v24@0:8@?16
Vv32@0:8@16@?24
v32@0:8@16@24
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_xpc_object>"
@"AXAccessQueue"
@"NSMutableDictionary"
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
@"BSServiceConnection<BSServiceConnectionClient>"
@"NSMutableArray"
