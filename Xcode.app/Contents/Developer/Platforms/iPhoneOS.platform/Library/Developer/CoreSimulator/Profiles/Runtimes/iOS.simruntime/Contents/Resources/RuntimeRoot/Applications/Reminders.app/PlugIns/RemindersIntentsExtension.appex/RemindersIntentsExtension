account
T#,R
TB,R,N
content
_setRenderingMode:
endDate
addListWithName:toAccountChangeItem:
initWithString:
alternatives
isProxy
autorelease
nextTriggerTime
boolValue
rem_all
capabilities
sharees
color
suggestedValues
confirmConfiguration:completion:
updateReminder:
confirmSetTaskAttribute:completion:
.cxx_destruct
address
T@"NSString",R,C
bundleForClass:
TQ,R
dealloc
accountCapabilities
handleConfiguration:completion:
allDay
isGroup
appearanceContext
nextThirdsHour:
badge
release
bounds
request
class
siriKit
confirmAddTasks:completion:
supportsFlagged
confirmSearchForNotebookItems:completion:
utility
confirmSnoozeTasks:completion:
confirmationRequiredWithTaskListToConfirm:
confirmationRequiredWithTaskListToConfirm:forReason:
conformsToProtocol:
contactEventTrigger
contactIdentifier
customContext
dateSearchType
dateTime
debugDescription
defaultListForConfiguration:
description
disambiguationWithContactEventTriggersToDisambiguate:
disambiguationWithSpatialEventTriggersToDisambiguate:
disambiguationWithTaskListsToDisambiguate:
disambiguationWithTasksToDisambiguate:
displayName
displayString
emblem
emoji
endDateComponents
enumerateAllListsWithBlock:
event
fetchCustomSmartListWithObjectID:error:
fetchDefaultAccountWithError:
fetchDefaultListWithError:
fetchEligibleDefaultListsWithError:
fetchListWithObjectID:error:
fetchListsWithObjectIDs:error:
fetchReminderWithObjectID:error:
fetchRemindersWithObjectIDs:error:
frame
getDeliveredNotificationsWithCompletionHandler:
handleAddTasks:completion:
handleSearchForNotebookItems:completion:
handleSetTaskAttribute:completion:
handleSnoozeTasks:completion:
handlerForIntent:
hash
hitTestInsets
identifier
imageWithUIImage:
init
initUserInteractive:
initWithBundleIdentifier:
initWithCode:userActivity:
initWithFrame:
initWithIdentifier:displayString:
initWithPlacemark:event:
initWithSections:
initWithStartDate:endDate:onCalendar:inTimeZone:
initWithStore:
initWithTaskResolutionResult:
initWithTitle:items:
initWithTitle:tasks:groupName:createdDateComponents:modifiedDateComponents:identifier:
initWithTriggerContact:
initWithUserActivity:
initWithView:
isEqual:
isKindOfClass:
isMemberOfClass:
isShared
itemType
layer
layoutIfNeeded
list
location
locationSearchType
mobileSpace
name
needsValue
nextThirdsHourFromHour:
notRequired
notebookItemIdentifier
objectID
objectIDWithUUID:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
placemark
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
priority
provideListOptionsCollectionForConfiguration:searchTerm:withCompletion:
provideListOptionsForConfiguration:searchTerm:withCompletion:
provideListOptionsForConfiguration:withCompletion:
region
rem_dateComponentsWithDate:timeZone:isAllDay:
requestAccessForEntityType:completionHandler:
resolveContactEventTriggerForAddTasks:completion:
resolveContactEventTriggerForAddTasks:withCompletion:
resolveContactEventTriggerForSetTaskAttribute:completion:
resolveContactEventTriggerForSetTaskAttribute:withCompletion:
resolveContentForSearchForNotebookItems:withCompletion:
resolveDateSearchTypeForSearchForNotebookItems:withCompletion:
resolveDateTimeForSearchForNotebookItems:withCompletion:
resolveItemTypeForSearchForNotebookItems:withCompletion:
resolveLocationForSearchForNotebookItems:withCompletion:
resolveLocationSearchTypeForSearchForNotebookItems:withCompletion:
resolveNextTriggerTimeForSnoozeTasks:withCompletion:
resolvePriorityForAddTasks:withCompletion:
resolvePriorityForSetTaskAttribute:withCompletion:
resolveSpatialEventTriggerForAddTasks:withCompletion:
resolveSpatialEventTriggerForSetTaskAttribute:withCompletion:
resolveStatusForSearchForNotebookItems:withCompletion:
resolveStatusForSetTaskAttribute:withCompletion:
resolveTargetTaskForSetTaskAttribute:withCompletion:
resolveTargetTaskListForAddTasks:completion:
resolveTargetTaskListForAddTasks:withCompletion:
resolveTargetTaskListMembersForAddTasks:completion:
resolveTargetTaskListMembersForAddTasks:withCompletion:
resolveTaskPriorityForSearchForNotebookItems:withCompletion:
resolveTaskReferenceForAddTasks:withCompletion:
resolveTaskTitleForSetTaskAttribute:withCompletion:
resolveTaskTitlesForAddTasks:withCompletion:
resolveTasksForSnoozeTasks:withCompletion:
resolveTemporalEventTriggerForAddTasks:completion:
resolveTemporalEventTriggerForAddTasks:withCompletion:
resolveTemporalEventTriggerForSetTaskAttribute:completion:
resolveTemporalEventTriggerForSetTaskAttribute:withCompletion:
resolveTemporalEventTriggerTypesForSearchForNotebookItems:withCompletion:
resolveTitleForSearchForNotebookItems:withCompletion:
respondsToSelector:
retain
retainCount
saveSynchronouslyWithError:
self
setAddedTasks:
setCornerRadius:
setDisplayImage:
setList:
setModifiedTask:
setModifiedTaskList:
setSnoozedTasks:
setSubtitleString:
setTaskLists:
setTasks:
setTintColor:
setWarnings:
sharedOwnerAddress
shareeContext
sharingStatusText
snoozeFromNowForTimeInterval:
spatialEventTrigger
spokenPhrase
startDate
startDateComponents
status
successWithResolvedContactEventTrigger:
successWithResolvedDateComponentsRange:
successWithResolvedLocationSearchType:
successWithResolvedNotebookItemType:
successWithResolvedPerson:
successWithResolvedPlacemark:
successWithResolvedSpatialEventTrigger:
successWithResolvedString:
successWithResolvedTask:
successWithResolvedTaskList:
successWithResolvedTaskReference:
successWithResolvedTemporalEventTrigger:
superclass
supportsPersonTrigger
supportsReminderActions
targetTask
targetTaskList
targetTaskListMembers
taskLists
taskPriority
taskReference
taskTitle
taskTitles
tasks
temporalEventTrigger
temporalEventTriggerTypes
title
titleAsString
triggerContact
unsupported
unsupportedForReason:
updateAccount:
urlRepresentation
userAction
webpageURL
zone
TTRBundleLookupObject
UIPointerInteractionDelegate
INAddTasksIntentHandling
INSetTaskAttributeIntentHandling
INSnoozeTasksIntentHandling
INSearchForNotebookItemsIntentHandling
NSObject
INSetTaskAttributeIntentHandlingPrivate
INAddTasksIntentHandlingPrivate
B16@0:8
@40@0:8@16@24@32
@32@0:8@16@24
v40@0:8@16@24@32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
v32@0:8@16@?24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksIntentResponse">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTaskListResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksTargetTaskListResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"NSArray">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INSpatialEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTemporalEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksTemporalEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTaskPriorityResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSetTaskAttributeIntentResponse">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTaskResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTaskStatusResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTaskPriorityResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSpatialEventTriggerResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTemporalEventTriggerResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSetTaskAttributeTemporalEventTriggerResolutionResult">24
v32@0:8@"INSnoozeTasksIntent"16@?<v@?@"INSnoozeTasksIntentResponse">24
v32@0:8@"INSnoozeTasksIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSnoozeTasksIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INSearchForNotebookItemsIntentResponse">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INNotebookItemTypeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INTaskStatusResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INPlacemarkResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INLocationSearchTypeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INDateSearchTypeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INTemporalEventTriggerTypeOptionsResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INTaskPriorityResolutionResult">24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSetTaskAttributeContactEventTriggerResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INContactEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTaskReferenceResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksContactEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INContactEventTriggerResolutionResult">24
CGSize
INTaskReference
REMSmartListType
RemindersIntentsExtension
TTRSearchForNotebookItemsIntentHandler
INSetTaskAttributeContactEventTriggerResolutionResult
INSetTaskAttributeTemporalEventTriggerResolutionResult
TTRSetTaskAttributeIntentHandler
TTRIntentsHandlerDataSource
TTRIntentsHandlerStoreDataSource
INAddTasksIntent
INSetTaskAttributeIntent
TTRTaskPrioritySupporting
TTRTaskPriorityBearing
@TTRSnoozeTasksIntentHandler
@@TTRIntentHandler
ConfigurationIntentHandler
INAddTasksContactEventTriggerResolutionResult
INAddTasksTemporalEventTriggerResolutionResult
TTRAddTasksIntentHandler
TTRTargetTaskListBearing
IntentType
INAddTasksIntent
INSetTaskAttributeIntent
TTRTemporalEventTriggerSupporting
IntentType
TTRTemporalEventTriggerResolutionResult
ConcreteType
TTRTemporalEventTriggerBearing
TTRContactRepresentationResolving
TTRContactRepresentationResolver
TTRIntentsHandlerSpotlightDataSource
UNUserNotificationCenter
TTRUNUserNotificationCenterType
TTRIntentsHandlerNotificationCenterDataSource
INAddTasksIntent
INSetTaskAttributeIntent
TTRContactEventTriggerSupporting
TTRContactEventTriggerResolutionResult
ConcreteType
TTRContactEventTriggerBearing
RemindersIntentsExtension
@40@0:8@16@24@32
@32@0:8@16@24
_TtC25RemindersIntentsExtension38TTRSearchForNotebookItemsIntentHandler
v32@0:8@16@?24
dataSource
timeProvider
RemindersIntentsExtension.TTRSearchForNotebookItemsIntentHandler
Search task via Siri {intent: %@}
unknown task priority
Unhandled itemType. Should have been cleaned up in resolve(). Return failure search result.
Consulting Search datasource for lists {itemType: taskList, criteria: %s}
Consulting Search datasource for reminders {itemType: task, criteria: %s}
unknown date search type
[Announce Reminders] notebookIdentifier not found in intent: %@
[Announce Reminders] Unable to create itemIdentifier from %s
[Announce Reminders] Added %{public}s to search criteria
[Announce Reminders] requestIdentifier:%{public}s
SiriKit asked for handling search {intent: %@}
Return success search result {tasksCount: %ld}
Search dataSource returned %ld reminders
Return success search result {taskListsCount: %ld}
Search dataSource returned %ld smartLists
Search dataSource returned %ld lists
Error fetching reminders for smartList {smartListID: %@, error: %s
Error fetching reminders for list {listID: %@, error: %s
unknown item type
Resolved itemType {result: %@}
SiriKit asked for resolving itemType {intent: %@}
_TtC25RemindersIntentsExtension32TTRSetTaskAttributeIntentHandler
contactRepresentationResolver
RemindersIntentsExtension.TTRSetTaskAttributeIntentHandler
Set task attribute via Siri {intent: %@}
Should have resolved targetTask into a reminder. {targetTask: %s}
unknown status
unknown priority
SiriKit asked for handling set task attribute intent {intent: %@}
Error saving saveRequest {error: %s}
Populating contactRepresentation {contactRepresentation: %@}
Resolving TaskTitle, no title, other stuff to do, returning .notRequired()
Resolving TaskTitle, nothing to do, returning .needsValue()
Resolving TaskTitle, got new task title, returning success {taskTitle: %@}
SiriKit asked for resolving task title {taskTitle: %s}
INSetTaskAttributeIntent contains nil targetTask, returning INTask.disambiguateWithIncompleteReminders
SiriKit asked for resolving target task {targetTask: %s}
Matching reminders: %s
Multiple reminders match with the term {result: .disambiguation}
One reminder matches with the term {result: .success(%@)}
No reminder matches with the term {result: .unsupported}
_TtC25RemindersIntentsExtension32TTRIntentsHandlerStoreDataSource
Error fetching default list %s
v24@?0@"REMList"8^B16
Error fetching lists by objetIDs {objectIDs: %s}
Error fetching reminders with the given criteria {criteria: %s}
Error fetching reminders by objetIDs {objectIDs: %s}
_TtC25RemindersIntentsExtension27TTRSnoozeTasksIntentHandler
@16@0:8
v16@0:8
store
Found %ld reminders found for searchTerm {result: .disambiguation}
One reminder found for searchTerm {result: .success}
No reminders found for searchTerm {result: .unsupported(.noTasksFound)}
Multiple reminders match but user didn't say 'all'. Ask the user to disambiguate which reminder to snooze. {reminders: %s, result: .disambiguation}
Resolved %ld tasks to snooze. {reminderIDs: %s, result: .success}
No reminders to snooze. {result: .unsupported(.noTasksFound)}
RemindersIntentsExtension.TTRSnoozeTasksIntentHandler
init()
No .tasks to snooze. Should have resolved this in resolve stage. Giving up
No nextTriggerTime.endDate. Should have resolved this in resolve stage. Giving up.
Error snoozing reminders {reminderIDs: %s}
Successfully snoozed reminders. {reminderIDs: %s}
SiriKit asked for handling snooze tasks intent {intent: %@}
Resolved nextTriggerTime. {nextTriggerTime: %s, result: .success
Resolving nextTriggerTime {nextTriggerTime: %s}
_TtC25RemindersIntentsExtension16TTRIntentHandler
@24@0:8@16
$__lazy_storage_$_contactStore
$__lazy_storage_$_addTasksHandler
$__lazy_storage_$_setTaskAttributeHandler
$__lazy_storage_$_snoozeTasksHandler
$__lazy_storage_$_searchForNotebookItemsHandler
$__lazy_storage_$_widgetListHandler
TTRIntentHandler does not know how to handle intent of class: %@
SiriKit asks for handler for intent: %@
ConfigurationIntentHandler Created
_TtC25RemindersIntentsExtension26ConfigurationIntentHandler
v40@0:8@16@24@?32
badgeSize
RemindersIntentsExtension.ConfigurationIntentHandler
Widget defaultList {intent: %s}
v8@?0
Widget provideListOptions {intent: %s, searchTerm: %s}
Widget provideListOptions failed error %s
Widget provideListOptions failed no data
Widget provideListOptions sections %ld 
Widget provideListOptions smartListTypes: %ld, accounts %ld 
Widget handle {intent: %s, response: %s}
ConfigurationIntentHandling
v40@0:8@"ConfigurationIntent"16@"NSString"24@?<v@?@@"NSError">32
v32@0:8@"ConfigurationIntent"16@?<v@?@"ConfigurationIntentResponse">24
@"ConfigurationList"24@0:8@"ConfigurationIntent"16
v32@0:8@"ConfigurationIntent"16@?<v@?@"NSArray"@"NSError">24
_TtC25RemindersIntentsExtension24TTRAddTasksIntentHandler
queue
userActivityProvider
didNotSpecifyTargetList
SiriKit asked for resolving task titles {taskTitles: %s}
Resolved taskTitles {result: .success}
userTitles has 0 elements {result: .needsValue}
.taskReference is an unhandled enum. {resolve: nil}
.taskReference is .unknown. {resolve: nil}
Error trying to retrieve eligible default lists {error: %s}
Disambiguating with some lists {count: %ld}
Got exactly 1 list from fetchEligibleDefaultLists, using that. {result: .confirmationRequired}
Name for the list Siri would create when the user doesn't have any lists, but asks Siri to add a reminder.
No lists found in fetchEligibleDefaultLists and no default account available. Responding with .success so that we can fail the user in handle() with .failureRequiringAppLaunch. {result: .success}
No lists found in fetchEligibleDefaultLists(), prompt for creation {result: .confirmationRequired(.listShouldBeCreated)}
RemindersIntentsExtension.TTRAddTasksIntentHandler
Add task via Siri {intent: %@}
intent.taskTitles is nil - should have resolved it in previous calls. {result: .failure}
Unexpected nil .targetTaskList from intent. {intent: %@, result: .failure}
Unable to create list because there is no default account. {intent: %@, result: .failureRequiringAppLaunch}
Error creating new list. {listID: %{public}@, account: %@, result: .failure}
Fetched list is a Group, can't add reminder to groups. {result: .failure, listID: %{public}@}
Successfully created new list {listID: %{public}@, account: %@}
Unable to fetch list. {result: .failure, listID: %{public}@, error: %{public}s}
Successfully fetched list {listID: %{public}@}
Error fetching smart list. {listID: %{public}@, error: %{public}s}
Smart List found and unable to fetch default list. {result: .failure, smartListID: %{public}@, error: %{public}s}
Successfully fetched custom smart list {smartListID: %{public}@}
SiriKit asked for handling intent {intent: %@}
com.apple.reminders.created
Error saving saveRequest {error: %{public}s}
successfully handled intent {result: %@}
insertedTasks: %s
Inserting reminder: {objectID: %{public}@}
setting custom smart list filters
setting notes
setting URL attachment {userActivityURL: %s}
setting userActivity {remUserActivity: %@}
setting contactRepresentation {contactRepresentation: %@}
setting recurrenceRule {recurrenceRule: %s}
setting dueDateComponents {dueDateComponents: %s}
setting vehicleTrigger {vehicleTrigger: %@}
setting locationTrigger {locationTrigger: %@}
Unable to determine default account {error: %s}
SiriKit asked for resolving target task list members {targetTaskListMembers: %s}
userActivity not requested {result: .notRequired}
Target list account doesn't support userActivity. {result: .unsupported()}
SiriKit asked for resolving task reference {taskReference: %s}
Got error userActivity. {result: .notRequired, error: %s}
Got nil userActivity {result: .notRequired}
Got userActivity {result: .success(.currentActivity)
.spatialEventTrigger is nil {result: .notRequired}
Disambiguate suggestedValues {result: .disambiguation, placemarks: %s}
Got a placemark with a CLRegion that is not a CLCircularRegion {region: %s, result: unsupported}
Resolved circularRegion {circularRegion: %@, result: .success(%@)}
Using the only suggestedValue because placemarks.count is 1 {count: 1}
spatialEventTrigger.placemark == nil. Siri is messed up. Ignoring. {result: .notRequired}
fallback to spatialEventTrigger.placemark instead because placemark count is 0 {count: 0}
suggestedValues: %s
Resolved vehicle trigger {result: .success, spatialEventTrigger: %@}
spatialEventTrigger.event must not be .unknown {result: .unsupported}
SiriKit asked for resolving spatial event trigger {spatialEventTrigger: %s}
No .targetTaskList and unable to get defaultList. {result: .disambiguateDueToNoDefaultList}
Using defaultList {objectID: %@, result: .success(%@)}
SiriKit asked for resolving tasklist {targetTaskList: %s}
Got %ld REMList matches the name {result: .disambiguation(%s)}
Found REMSmartList matching the name {objectID: %@, result: .success(%@)}
Got one REMList(%@) matches the name {result: .success(%@)}
No REMList or REMSmartList matches the name, prompt for creation {result: .confirmationRequired(.listShouldBeCreated)}
Got %ld REMList matching .targetTaskListMembers {targetTaskListMembers: %s, emails: %s, phones: %s, result: .disambiguation(%s)}
Found exactly 1 list matching .targetTaskListMembers, using that. {targetTaskListMembers: %s, emails: %s, phones: %s, result: .success(%@)}
No list shared with the specified .targetTaskListMembers {targetTaskListMembers: %s, emails: %s, phones: %s, result: .disambiguateDueToNoDefaultList}
%{public}s; UserInfo=%s; PublicUserInfo=%{public}s
com.apple.remindd.userAction
%{public}s; UserInfo=%s
.temporalEventTrigger is nil {result: .notRequired}
.temporalEventTrigger resolved to a valid date {result: .success(with: %@)}
.temporalEventTrigger could not be converted into a dueDate, ignoring it {result: .notRequired}
.temporalEventTrigger.recurrenceRule is not supported {result: .unsupported(.invalidRecurrence)}
.temporalEventTrigger would create a due date in the past {result: .unsupported(.timeInPast)}
SiriKit asked for resolving temporalEventTrigger {temporalEventTrigger: %s}
v20@?0B8@"NSError"12
Permission not granted for accessing CNContactStore {granted: false}
Error requesting permission for CNContactStore {error: %s}
_TtC25RemindersIntentsExtension36TTRIntentsHandlerSpotlightDataSource
fallbackDataSource
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Querying Spotlight for lists {criteria: %s}
Error matching lists from Spotlight {criteria: %s, error: %s}
Consulting fallbackDataSource for CSL or non-Spotlight-indexed list
Got %ld lists from Spotlight {criteria: %s, listIDs: %s}
Criteria does not contain a text search, using fallback data source
Querying Spotlight for reminders {criteria: %s}
Error matching reminders from Spotlight {criteria: %s, error: %s}
Consulting fallbackDataSource since Spotlight result is empty.
Criteria had list id, filtering further
Got %ld reminders from Spotlight {criteria: %s, reminderIDs: %s}
ConfigurationList
_TtC25RemindersIntentsExtension45TTRIntentsHandlerNotificationCenterDataSource
notificationCenter
Got %ld matchingReminders matching searchTerms {matchingReminders: %s}
Error fetching reminders {notificationIdentifiers: %s}
Retrieved %ld reminders from notification center {notificationIdentifiers: %s}
Unable to fetch some reminders. reminders count doesn't match with reminderIDs count. {notificationIdentifiers.count: %ld, reminders.count: %ld}
v16@?0@"NSArray"8
Got nil contactEventTrigger. {result: .notRequired}
Unable to lookup capabilities. Ignoring contactEventTrigger. {result: .notRequired}
Reminder account doesn't support contactTrigger. {result: .unsupported(.accountDoesNotSupport)}
Got 0 triggersToChoose {result: .unsupported}
Got 1 triggersToChoose {result: .success(%@)}
Got >1 triggersToChoose {result: .disambiguation(%s)}
SiriKit asked for resolving contactEventTrigger {contactEventTrigger: %s}
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
So8NSObjectC
So8REMStoreC
So17OS_dispatch_queueC
So38INSearchForNotebookItemsIntentResponseCIeyBy_
ySS_yptG
So38INSearchForNotebookItemsIntentResponseCIegg_
Sg_ABt
So8NSObjectCSg
yyXlG
SaySSG
So53INSetTaskAttributeContactEventTriggerResolutionResultC
$s25RemindersIntentsExtension38TTRContactEventTriggerResolutionResultP
So54INSetTaskAttributeTemporalEventTriggerResolutionResultC
$s25RemindersIntentsExtension39TTRTemporalEventTriggerResolutionResultP
So24INSetTaskAttributeIntentC
$s25RemindersIntentsExtension33TTRTemporalEventTriggerSupportingP
$s25RemindersIntentsExtension32TTRContactEventTriggerSupportingP
$s25RemindersIntentsExtension25TTRTaskPrioritySupportingP
$s25RemindersIntentsExtension24TTRTargetTaskListBearingP
So32INSetTaskAttributeIntentResponseCIeyBy_
So6INTaskCSg
ySo24REMContactRepresentationCSgG
So14REMSaveRequestC
So11REMObjectIDC
So32INSetTaskAttributeIntentResponseCIegg_
So17INSpeakableStringCSg
So22INTaskResolutionResultCIeyBy_
So22INTaskResolutionResultCIegg_
$s25RemindersIntentsExtension27TTRIntentsHandlerDataSourceP
SgIegn_
ySay
GSgG
GSgIegn_
GSgIegg_
ySaySo11REMReminderCGG
ySaySo11REMReminderCGGG
SaySo11REMReminderCGIegg_
SaySo11REMReminderCG
SaySo11REMReminderCGIegn_
SaySo7REMListCG
ShySSG
SaySo7REMListCGz_Xx
Iegg_
SaySo12REMSmartListCG
Iegn_
10IntentType
$s25RemindersIntentsExtension22TTRTaskPriorityBearingP
So8INIntentC
SaySo33INSnoozeTasksTaskResolutionResultCGIegg_
So19INSnoozeTasksIntentC
ySo11REMObjectIDCSo11REMReminderC_G
So21INDateComponentsRangeCSg
So7NSArrayCIeyBy_
So11INExtensionC
So14CNContactStoreCSg
So24INAddTasksIntentHandling_pSg
So32INSetTaskAttributeIntentHandling_pSg
So27INSnoozeTasksIntentHandling_pSg
So38INSearchForNotebookItemsIntentHandling_pSg
So12REMListBadgeCSg
So8REMColorCSg
So7INImageCSg
So18INObjectCollectionCy
GSgSo7NSErrorCSgIeyByy_
ySay
GSg_
SgtG
So18INObjectCollectionCy
_pSgIeggg_
SSSg
_pIeggnzo_
So15INObjectSectionC
So45INAddTasksContactEventTriggerResolutionResultC
So46INAddTasksTemporalEventTriggerResolutionResultC
So16INAddTasksIntentC
ySo14NSUserActivityCSgG
SaySo33INSpeakableStringResolutionResultCG
SaySo33INSpeakableStringResolutionResultCGIegg_
SaySo17INSpeakableStringCGSg
So14NSUserActivityCSgIegn_
_pIegg_
So14NSUserActivityCSgIegg_
So24INAddTasksIntentResponseCIeyBy_
So24REMContactRepresentationCSg
So15REMUserActivityCSg
yytG
So15REMUserActivityCSgz_Xx
Sgz_Xx
SSSgz_Xx
So7REMListC
SaySo17INSpeakableStringCG
So23REMAlarmLocationTriggerCSg
So22REMAlarmVehicleTriggerCSg
Sgz_Xx
So24REMContactRepresentationCSgz_Xx
Sgz_Xx
So10INTaskListC
So24INAddTasksIntentResponseCIegg_
ySS_So8NSObjectCtG
ySSSo8NSObjectCG
ySSypG
SS_ypt
SaySo8INPersonCGSg
So31INTaskReferenceResolutionResultCIeyBy_
So31INTaskReferenceResolutionResultCIegg_
So8CLRegionCSg
SaySo11CLPlacemarkCGSg
So21INSpatialEventTriggerCSg
So40INAddTasksTargetTaskListResolutionResultCIeyBy_
SaySo8INPersonCG
So40INAddTasksTargetTaskListResolutionResultCIegg_
So10INTaskListCSg
ySSG
10IntentType
So38INTemporalEventTriggerResolutionResultC
12ConcreteType
$s25RemindersIntentsExtension30TTRTemporalEventTriggerBearingP
So22INTemporalEventTriggerCSg
$s25RemindersIntentsExtension33TTRContactRepresentationResolvingP
So24REMContactRepresentationCSgIegn_
So24REMContactRepresentationCSgIegg_
So8INPersonC
So14CNContactStoreCyc
SaySo10INTaskListCG
ySSG
$s25RemindersIntentsExtension31TTRUNUserNotificationCenterTypeP
SaySo11REMObjectIDCG
SaySo11REMObjectIDCGz_Xx
SaySSGz_Xx
So37INContactEventTriggerResolutionResultC
12ConcreteType
$s25RemindersIntentsExtension29TTRContactEventTriggerBearingP
So21INContactEventTriggerCSg
width
height
_rawValue
RawValue
_ObjectiveCType
store
queue
dataSource
timeProvider
ConcreteType
store
queue
contactRepresentationResolver
dataSource
timeProvider
IntentType
store
store
queue
dataSource
store
queue
$__lazy_storage_$_contactStore
$__lazy_storage_$_addTasksHandler
$__lazy_storage_$_setTaskAttributeHandler
$__lazy_storage_$_snoozeTasksHandler
$__lazy_storage_$_searchForNotebookItemsHandler
$__lazy_storage_$_widgetListHandler
store
queue
dataSource
badgeSize
ConcreteType
store
queue
dataSource
contactRepresentationResolver
userActivityProvider
timeProvider
didNotSpecifyTargetList
IntentType
contactStoreProvider
store
queue
fallbackDataSource
store
notificationCenter
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.reminders.IntentsExtension</string>
<key>com.apple.chrono.invalidate-timelines</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.remindd</key>
<dict>
<key>keepAlive</key>
<true/>
<key>userInteractive</key>
<true/>
</dict>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
</array>
<key>com.apple.private.tcc.allow-or-regional-prompt</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceReminders</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.reminders</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.remindd</string>
<string>com.apple.remindd.userInteractive</string>
<string>com.apple.chrono.widgetcenterconnection</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.remindd</string>
</array>
</dict>
</plist>
application-identifier$com.apple.reminders.IntentsExtension0*%com.apple.chrono.invalidate-timelines
0=8com.apple.private.coreservices.cangetcurrentactivityinfo
com.apple.private.remindd
keepAlive
userInteractive
com.apple.private.tcc.allow0
kTCCServiceCalendar0J.com.apple.private.tcc.allow-or-regional-prompt0
kTCCServiceAddressBook0A'com.apple.private.tcc.allow.overridable0
kTCCServiceReminders0D%com.apple.security.application-groups0
group.com.apple.reminders0
4com.apple.security.exception.mach-lookup.global-name0_
com.apple.remindd!com.apple.remindd.userInteractive'com.apple.chrono.widgetcenterconnection0O8com.apple.security.exception.shared-preference.read-only0
com.apple.remindd
TTRBundleLookupObject
UIPointerInteractionDelegate
INAddTasksIntentHandling
INSetTaskAttributeIntentHandling
INSnoozeTasksIntentHandling
INSearchForNotebookItemsIntentHandling
NSObject
INSetTaskAttributeIntentHandlingPrivate
INAddTasksIntentHandlingPrivate
account
T#,R
TB,R,N
dealloc
_setRenderingMode:
handleConfiguration:completion:
addListWithName:toAccountChangeItem:
isGroup
alternatives
nextThirdsHour:
autorelease
release
boolValue
request
capabilities
siriKit
color
supportsFlagged
confirmConfiguration:completion:
utility
.cxx_destruct
address
T@"NSString",R,C
content
TQ,R
endDate
accountCapabilities
initWithString:
allDay
isProxy
appearanceContext
nextTriggerTime
badge
rem_all
bounds
sharees
class
suggestedValues
confirmAddTasks:completion:
updateReminder:
confirmSearchForNotebookItems:completion:
confirmSetTaskAttribute:completion:
confirmSnoozeTasks:completion:
confirmationRequiredWithTaskListToConfirm:
confirmationRequiredWithTaskListToConfirm:forReason:
conformsToProtocol:
contactEventTrigger
contactIdentifier
customContext
dateSearchType
dateTime
debugDescription
defaultListForConfiguration:
description
disambiguationWithContactEventTriggersToDisambiguate:
disambiguationWithSpatialEventTriggersToDisambiguate:
disambiguationWithTaskListsToDisambiguate:
disambiguationWithTasksToDisambiguate:
displayName
displayString
emblem
emoji
endDateComponents
enumerateAllListsWithBlock:
event
fetchCustomSmartListWithObjectID:error:
fetchDefaultAccountWithError:
fetchDefaultListWithError:
fetchEligibleDefaultListsWithError:
fetchListWithObjectID:error:
fetchListsWithObjectIDs:error:
fetchReminderWithObjectID:error:
fetchRemindersWithObjectIDs:error:
frame
getDeliveredNotificationsWithCompletionHandler:
handleAddTasks:completion:
handleSearchForNotebookItems:completion:
handleSetTaskAttribute:completion:
handleSnoozeTasks:completion:
handlerForIntent:
hash
hitTestInsets
identifier
imageWithUIImage:
init
initUserInteractive:
initWithBundleIdentifier:
initWithCode:userActivity:
initWithFrame:
initWithIdentifier:displayString:
initWithPlacemark:event:
initWithSections:
initWithStartDate:endDate:onCalendar:inTimeZone:
initWithStore:
initWithTaskResolutionResult:
initWithTitle:items:
initWithTitle:tasks:groupName:createdDateComponents:modifiedDateComponents:identifier:
initWithTriggerContact:
initWithUserActivity:
initWithView:
isEqual:
isKindOfClass:
isMemberOfClass:
isShared
itemType
layer
layoutIfNeeded
list
location
locationSearchType
mobileSpace
name
needsValue
nextThirdsHourFromHour:
notRequired
notebookItemIdentifier
objectID
objectIDWithUUID:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
placemark
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
priority
provideListOptionsCollectionForConfiguration:searchTerm:withCompletion:
provideListOptionsForConfiguration:searchTerm:withCompletion:
provideListOptionsForConfiguration:withCompletion:
region
rem_dateComponentsWithDate:timeZone:isAllDay:
requestAccessForEntityType:completionHandler:
resolveContactEventTriggerForAddTasks:completion:
resolveContactEventTriggerForAddTasks:withCompletion:
resolveContactEventTriggerForSetTaskAttribute:completion:
resolveContactEventTriggerForSetTaskAttribute:withCompletion:
resolveContentForSearchForNotebookItems:withCompletion:
resolveDateSearchTypeForSearchForNotebookItems:withCompletion:
resolveDateTimeForSearchForNotebookItems:withCompletion:
resolveItemTypeForSearchForNotebookItems:withCompletion:
resolveLocationForSearchForNotebookItems:withCompletion:
resolveLocationSearchTypeForSearchForNotebookItems:withCompletion:
resolveNextTriggerTimeForSnoozeTasks:withCompletion:
resolvePriorityForAddTasks:withCompletion:
resolvePriorityForSetTaskAttribute:withCompletion:
resolveSpatialEventTriggerForAddTasks:withCompletion:
resolveSpatialEventTriggerForSetTaskAttribute:withCompletion:
resolveStatusForSearchForNotebookItems:withCompletion:
resolveStatusForSetTaskAttribute:withCompletion:
resolveTargetTaskForSetTaskAttribute:withCompletion:
resolveTargetTaskListForAddTasks:completion:
resolveTargetTaskListForAddTasks:withCompletion:
resolveTargetTaskListMembersForAddTasks:completion:
resolveTargetTaskListMembersForAddTasks:withCompletion:
resolveTaskPriorityForSearchForNotebookItems:withCompletion:
resolveTaskReferenceForAddTasks:withCompletion:
resolveTaskTitleForSetTaskAttribute:withCompletion:
resolveTaskTitlesForAddTasks:withCompletion:
resolveTasksForSnoozeTasks:withCompletion:
resolveTemporalEventTriggerForAddTasks:completion:
resolveTemporalEventTriggerForAddTasks:withCompletion:
resolveTemporalEventTriggerForSetTaskAttribute:completion:
resolveTemporalEventTriggerForSetTaskAttribute:withCompletion:
resolveTemporalEventTriggerTypesForSearchForNotebookItems:withCompletion:
resolveTitleForSearchForNotebookItems:withCompletion:
respondsToSelector:
retain
retainCount
saveSynchronouslyWithError:
self
setAddedTasks:
setCornerRadius:
setDisplayImage:
setList:
setModifiedTask:
setModifiedTaskList:
setSnoozedTasks:
setSubtitleString:
setTaskLists:
setTasks:
setTintColor:
setWarnings:
sharedOwnerAddress
shareeContext
sharingStatusText
snoozeFromNowForTimeInterval:
spatialEventTrigger
spokenPhrase
startDate
startDateComponents
status
successWithResolvedContactEventTrigger:
successWithResolvedDateComponentsRange:
successWithResolvedLocationSearchType:
successWithResolvedNotebookItemType:
successWithResolvedPerson:
successWithResolvedPlacemark:
successWithResolvedSpatialEventTrigger:
successWithResolvedString:
successWithResolvedTask:
successWithResolvedTaskList:
successWithResolvedTaskReference:
successWithResolvedTemporalEventTrigger:
superclass
supportsPersonTrigger
supportsReminderActions
targetTask
targetTaskList
targetTaskListMembers
taskLists
taskPriority
taskReference
taskTitle
taskTitles
tasks
temporalEventTrigger
temporalEventTriggerTypes
title
titleAsString
triggerContact
unsupported
unsupportedForReason:
updateAccount:
urlRepresentation
userAction
webpageURL
zone
B16@0:8
@40@0:8@16@24@32
@32@0:8@16@24
v40@0:8@16@24@32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
v32@0:8@16@?24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksIntentResponse">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTaskListResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksTargetTaskListResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"NSArray">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INSpatialEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTemporalEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksTemporalEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTaskPriorityResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSetTaskAttributeIntentResponse">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTaskResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTaskStatusResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTaskPriorityResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSpatialEventTriggerResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INTemporalEventTriggerResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSetTaskAttributeTemporalEventTriggerResolutionResult">24
v32@0:8@"INSnoozeTasksIntent"16@?<v@?@"INSnoozeTasksIntentResponse">24
v32@0:8@"INSnoozeTasksIntent"16@?<v@?@"NSArray">24
v32@0:8@"INSnoozeTasksIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INSearchForNotebookItemsIntentResponse">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INSpeakableStringResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INStringResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INNotebookItemTypeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INTaskStatusResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INPlacemarkResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INLocationSearchTypeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INDateSearchTypeResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INTemporalEventTriggerTypeOptionsResolutionResult">24
v32@0:8@"INSearchForNotebookItemsIntent"16@?<v@?@"INTaskPriorityResolutionResult">24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INSetTaskAttributeContactEventTriggerResolutionResult">24
v32@0:8@"INSetTaskAttributeIntent"16@?<v@?@"INContactEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INTaskReferenceResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INAddTasksContactEventTriggerResolutionResult">24
v32@0:8@"INAddTasksIntent"16@?<v@?@"INContactEventTriggerResolutionResult">24
RemindersIntentsExtension
@40@0:8@16@24@32
@32@0:8@16@24
_TtC25RemindersIntentsExtension38TTRSearchForNotebookItemsIntentHandler
v32@0:8@16@?24
dataSource
timeProvider
RemindersIntentsExtension.TTRSearchForNotebookItemsIntentHandler
Search task via Siri {intent: %@}
unknown task priority
Unhandled itemType. Should have been cleaned up in resolve(). Return failure search result.
Consulting Search datasource for lists {itemType: taskList, criteria: %s}
Consulting Search datasource for reminders {itemType: task, criteria: %s}
unknown date search type
[Announce Reminders] notebookIdentifier not found in intent: %@
[Announce Reminders] Unable to create itemIdentifier from %s
[Announce Reminders] Added %{public}s to search criteria
[Announce Reminders] requestIdentifier:%{public}s
SiriKit asked for handling search {intent: %@}
Return success search result {tasksCount: %ld}
Search dataSource returned %ld reminders
Return success search result {taskListsCount: %ld}
Search dataSource returned %ld smartLists
Search dataSource returned %ld lists
Error fetching reminders for smartList {smartListID: %@, error: %s
Error fetching reminders for list {listID: %@, error: %s
unknown item type
Resolved itemType {result: %@}
SiriKit asked for resolving itemType {intent: %@}
_TtC25RemindersIntentsExtension32TTRSetTaskAttributeIntentHandler
contactRepresentationResolver
RemindersIntentsExtension.TTRSetTaskAttributeIntentHandler
Set task attribute via Siri {intent: %@}
Should have resolved targetTask into a reminder. {targetTask: %s}
unknown status
unknown priority
SiriKit asked for handling set task attribute intent {intent: %@}
Error saving saveRequest {error: %s}
Populating contactRepresentation {contactRepresentation: %@}
Resolving TaskTitle, no title, other stuff to do, returning .notRequired()
Resolving TaskTitle, nothing to do, returning .needsValue()
Resolving TaskTitle, got new task title, returning success {taskTitle: %@}
SiriKit asked for resolving task title {taskTitle: %s}
INSetTaskAttributeIntent contains nil targetTask, returning INTask.disambiguateWithIncompleteReminders
SiriKit asked for resolving target task {targetTask: %s}
Matching reminders: %s
Multiple reminders match with the term {result: .disambiguation}
One reminder matches with the term {result: .success(%@)}
No reminder matches with the term {result: .unsupported}
_TtC25RemindersIntentsExtension32TTRIntentsHandlerStoreDataSource
Error fetching default list %s
v24@?0@"REMList"8^B16
Error fetching lists by objetIDs {objectIDs: %s}
Error fetching reminders with the given criteria {criteria: %s}
Error fetching reminders by objetIDs {objectIDs: %s}
_TtC25RemindersIntentsExtension27TTRSnoozeTasksIntentHandler
@16@0:8
v16@0:8
store
Found %ld reminders found for searchTerm {result: .disambiguation}
One reminder found for searchTerm {result: .success}
No reminders found for searchTerm {result: .unsupported(.noTasksFound)}
Multiple reminders match but user didn't say 'all'. Ask the user to disambiguate which reminder to snooze. {reminders: %s, result: .disambiguation}
Resolved %ld tasks to snooze. {reminderIDs: %s, result: .success}
No reminders to snooze. {result: .unsupported(.noTasksFound)}
RemindersIntentsExtension.TTRSnoozeTasksIntentHandler
init()
No .tasks to snooze. Should have resolved this in resolve stage. Giving up
No nextTriggerTime.endDate. Should have resolved this in resolve stage. Giving up.
Error snoozing reminders {reminderIDs: %s}
Successfully snoozed reminders. {reminderIDs: %s}
SiriKit asked for handling snooze tasks intent {intent: %@}
Resolved nextTriggerTime. {nextTriggerTime: %s, result: .success
Resolving nextTriggerTime {nextTriggerTime: %s}
_TtC25RemindersIntentsExtension16TTRIntentHandler
@24@0:8@16
$__lazy_storage_$_contactStore
$__lazy_storage_$_addTasksHandler
$__lazy_storage_$_setTaskAttributeHandler
$__lazy_storage_$_snoozeTasksHandler
$__lazy_storage_$_searchForNotebookItemsHandler
$__lazy_storage_$_widgetListHandler
TTRIntentHandler does not know how to handle intent of class: %@
SiriKit asks for handler for intent: %@
ConfigurationIntentHandler Created
_TtC25RemindersIntentsExtension26ConfigurationIntentHandler
v40@0:8@16@24@?32
badgeSize
RemindersIntentsExtension.ConfigurationIntentHandler
Widget defaultList {intent: %s}
v8@?0
Widget provideListOptions {intent: %s, searchTerm: %s}
Widget provideListOptions failed error %s
Widget provideListOptions failed no data
Widget provideListOptions sections %ld 
Widget provideListOptions smartListTypes: %ld, accounts %ld 
Widget handle {intent: %s, response: %s}
ConfigurationIntentHandling
v40@0:8@"ConfigurationIntent"16@"NSString"24@?<v@?@@"NSError">32
v32@0:8@"ConfigurationIntent"16@?<v@?@"ConfigurationIntentResponse">24
@"ConfigurationList"24@0:8@"ConfigurationIntent"16
v32@0:8@"ConfigurationIntent"16@?<v@?@"NSArray"@"NSError">24
_TtC25RemindersIntentsExtension24TTRAddTasksIntentHandler
queue
userActivityProvider
didNotSpecifyTargetList
SiriKit asked for resolving task titles {taskTitles: %s}
Resolved taskTitles {result: .success}
userTitles has 0 elements {result: .needsValue}
.taskReference is an unhandled enum. {resolve: nil}
.taskReference is .unknown. {resolve: nil}
Error trying to retrieve eligible default lists {error: %s}
Disambiguating with some lists {count: %ld}
Got exactly 1 list from fetchEligibleDefaultLists, using that. {result: .confirmationRequired}
Name for the list Siri would create when the user doesn't have any lists, but asks Siri to add a reminder.
No lists found in fetchEligibleDefaultLists and no default account available. Responding with .success so that we can fail the user in handle() with .failureRequiringAppLaunch. {result: .success}
No lists found in fetchEligibleDefaultLists(), prompt for creation {result: .confirmationRequired(.listShouldBeCreated)}
RemindersIntentsExtension.TTRAddTasksIntentHandler
Add task via Siri {intent: %@}
intent.taskTitles is nil - should have resolved it in previous calls. {result: .failure}
Unexpected nil .targetTaskList from intent. {intent: %@, result: .failure}
Unable to create list because there is no default account. {intent: %@, result: .failureRequiringAppLaunch}
Error creating new list. {listID: %{public}@, account: %@, result: .failure}
Fetched list is a Group, can't add reminder to groups. {result: .failure, listID: %{public}@}
Successfully created new list {listID: %{public}@, account: %@}
Unable to fetch list. {result: .failure, listID: %{public}@, error: %{public}s}
Successfully fetched list {listID: %{public}@}
Error fetching smart list. {listID: %{public}@, error: %{public}s}
Smart List found and unable to fetch default list. {result: .failure, smartListID: %{public}@, error: %{public}s}
Successfully fetched custom smart list {smartListID: %{public}@}
SiriKit asked for handling intent {intent: %@}
com.apple.reminders.created
Error saving saveRequest {error: %{public}s}
successfully handled intent {result: %@}
insertedTasks: %s
Inserting reminder: {objectID: %{public}@}
setting custom smart list filters
setting notes
setting URL attachment {userActivityURL: %s}
setting userActivity {remUserActivity: %@}
setting contactRepresentation {contactRepresentation: %@}
setting recurrenceRule {recurrenceRule: %s}
setting dueDateComponents {dueDateComponents: %s}
setting vehicleTrigger {vehicleTrigger: %@}
setting locationTrigger {locationTrigger: %@}
Unable to determine default account {error: %s}
SiriKit asked for resolving target task list members {targetTaskListMembers: %s}
userActivity not requested {result: .notRequired}
Target list account doesn't support userActivity. {result: .unsupported()}
SiriKit asked for resolving task reference {taskReference: %s}
Got error userActivity. {result: .notRequired, error: %s}
Got nil userActivity {result: .notRequired}
Got userActivity {result: .success(.currentActivity)
.spatialEventTrigger is nil {result: .notRequired}
Disambiguate suggestedValues {result: .disambiguation, placemarks: %s}
Got a placemark with a CLRegion that is not a CLCircularRegion {region: %s, result: unsupported}
Resolved circularRegion {circularRegion: %@, result: .success(%@)}
Using the only suggestedValue because placemarks.count is 1 {count: 1}
spatialEventTrigger.placemark == nil. Siri is messed up. Ignoring. {result: .notRequired}
fallback to spatialEventTrigger.placemark instead because placemark count is 0 {count: 0}
suggestedValues: %s
Resolved vehicle trigger {result: .success, spatialEventTrigger: %@}
spatialEventTrigger.event must not be .unknown {result: .unsupported}
SiriKit asked for resolving spatial event trigger {spatialEventTrigger: %s}
No .targetTaskList and unable to get defaultList. {result: .disambiguateDueToNoDefaultList}
Using defaultList {objectID: %@, result: .success(%@)}
SiriKit asked for resolving tasklist {targetTaskList: %s}
Got %ld REMList matches the name {result: .disambiguation(%s)}
Found REMSmartList matching the name {objectID: %@, result: .success(%@)}
Got one REMList(%@) matches the name {result: .success(%@)}
No REMList or REMSmartList matches the name, prompt for creation {result: .confirmationRequired(.listShouldBeCreated)}
Got %ld REMList matching .targetTaskListMembers {targetTaskListMembers: %s, emails: %s, phones: %s, result: .disambiguation(%s)}
Found exactly 1 list matching .targetTaskListMembers, using that. {targetTaskListMembers: %s, emails: %s, phones: %s, result: .success(%@)}
No list shared with the specified .targetTaskListMembers {targetTaskListMembers: %s, emails: %s, phones: %s, result: .disambiguateDueToNoDefaultList}
%{public}s; UserInfo=%s; PublicUserInfo=%{public}s
com.apple.remindd.userAction
%{public}s; UserInfo=%s
.temporalEventTrigger is nil {result: .notRequired}
.temporalEventTrigger resolved to a valid date {result: .success(with: %@)}
.temporalEventTrigger could not be converted into a dueDate, ignoring it {result: .notRequired}
.temporalEventTrigger.recurrenceRule is not supported {result: .unsupported(.invalidRecurrence)}
.temporalEventTrigger would create a due date in the past {result: .unsupported(.timeInPast)}
SiriKit asked for resolving temporalEventTrigger {temporalEventTrigger: %s}
v20@?0B8@"NSError"12
Permission not granted for accessing CNContactStore {granted: false}
Error requesting permission for CNContactStore {error: %s}
_TtC25RemindersIntentsExtension36TTRIntentsHandlerSpotlightDataSource
fallbackDataSource
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Querying Spotlight for lists {criteria: %s}
Error matching lists from Spotlight {criteria: %s, error: %s}
Consulting fallbackDataSource for CSL or non-Spotlight-indexed list
Got %ld lists from Spotlight {criteria: %s, listIDs: %s}
Criteria does not contain a text search, using fallback data source
Querying Spotlight for reminders {criteria: %s}
Error matching reminders from Spotlight {criteria: %s, error: %s}
Consulting fallbackDataSource since Spotlight result is empty.
Criteria had list id, filtering further
Got %ld reminders from Spotlight {criteria: %s, reminderIDs: %s}
ConfigurationList
_TtC25RemindersIntentsExtension45TTRIntentsHandlerNotificationCenterDataSource
notificationCenter
Got %ld matchingReminders matching searchTerms {matchingReminders: %s}
Error fetching reminders {notificationIdentifiers: %s}
Retrieved %ld reminders from notification center {notificationIdentifiers: %s}
Unable to fetch some reminders. reminders count doesn't match with reminderIDs count. {notificationIdentifiers.count: %ld, reminders.count: %ld}
v16@?0@"NSArray"8
Got nil contactEventTrigger. {result: .notRequired}
Unable to lookup capabilities. Ignoring contactEventTrigger. {result: .notRequired}
Reminder account doesn't support contactTrigger. {result: .unsupported(.accountDoesNotSupport)}
Got 0 triggersToChoose {result: .unsupported}
Got 1 triggersToChoose {result: .success(%@)}
Got >1 triggersToChoose {result: .disambiguation(%s)}
SiriKit asked for resolving contactEventTrigger {contactEventTrigger: %s}
CGSize
INTaskReference
REMSmartListType
RemindersIntentsExtension
TTRSearchForNotebookItemsIntentHandler
INSetTaskAttributeContactEventTriggerResolutionResult
INSetTaskAttributeTemporalEventTriggerResolutionResult
TTRSetTaskAttributeIntentHandler
TTRIntentsHandlerDataSource
TTRIntentsHandlerStoreDataSource
INAddTasksIntent
INSetTaskAttributeIntent
TTRTaskPrioritySupporting
TTRTaskPriorityBearing
TTRSnoozeTasksIntentHandler
TTRIntentHandler
ConfigurationIntentHandler
INAddTasksContactEventTriggerResolutionResult
INAddTasksTemporalEventTriggerResolutionResult
TTRAddTasksIntentHandler
TTRTargetTaskListBearing
IntentType
INAddTasksIntent
INSetTaskAttributeIntent
TTRTemporalEventTriggerSupporting
IntentType
TTRTemporalEventTriggerResolutionResult
ConcreteType
TTRTemporalEventTriggerBearing
TTRContactRepresentationResolving
TTRContactRepresentationResolver
TTRIntentsHandlerSpotlightDataSource
UNUserNotificationCenter
TTRUNUserNotificationCenterType
TTRIntentsHandlerNotificationCenterDataSource
INAddTasksIntent
INSetTaskAttributeIntent
TTRContactEventTriggerSupporting
TTRContactEventTriggerResolutionResult
ConcreteType
TTRContactEventTriggerBearing
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
So8NSObjectC
So8REMStoreC
So17OS_dispatch_queueC
So38INSearchForNotebookItemsIntentResponseCIeyBy_
ySS_yptG
So38INSearchForNotebookItemsIntentResponseCIegg_
Sg_ABt
So8NSObjectCSg
yyXlG
SaySSG
So53INSetTaskAttributeContactEventTriggerResolutionResultC
$s25RemindersIntentsExtension38TTRContactEventTriggerResolutionResultP
So54INSetTaskAttributeTemporalEventTriggerResolutionResultC
$s25RemindersIntentsExtension39TTRTemporalEventTriggerResolutionResultP
So24INSetTaskAttributeIntentC
$s25RemindersIntentsExtension33TTRTemporalEventTriggerSupportingP
$s25RemindersIntentsExtension32TTRContactEventTriggerSupportingP
$s25RemindersIntentsExtension25TTRTaskPrioritySupportingP
$s25RemindersIntentsExtension24TTRTargetTaskListBearingP
So32INSetTaskAttributeIntentResponseCIeyBy_
So6INTaskCSg
ySo24REMContactRepresentationCSgG
So14REMSaveRequestC
So11REMObjectIDC
So32INSetTaskAttributeIntentResponseCIegg_
So17INSpeakableStringCSg
So22INTaskResolutionResultCIeyBy_
So22INTaskResolutionResultCIegg_
$s25RemindersIntentsExtension27TTRIntentsHandlerDataSourceP
SgIegn_
ySay
GSgG
GSgIegn_
GSgIegg_
ySaySo11REMReminderCGG
ySaySo11REMReminderCGGG
SaySo11REMReminderCGIegg_
SaySo11REMReminderCG
SaySo11REMReminderCGIegn_
SaySo7REMListCG
ShySSG
SaySo7REMListCGz_Xx
Iegg_
SaySo12REMSmartListCG
Iegn_
10IntentType
$s25RemindersIntentsExtension22TTRTaskPriorityBearingP
So8INIntentC
SaySo33INSnoozeTasksTaskResolutionResultCGIegg_
So19INSnoozeTasksIntentC
ySo11REMObjectIDCSo11REMReminderC_G
So21INDateComponentsRangeCSg
So7NSArrayCIeyBy_
So11INExtensionC
So14CNContactStoreCSg
So24INAddTasksIntentHandling_pSg
So32INSetTaskAttributeIntentHandling_pSg
So27INSnoozeTasksIntentHandling_pSg
So38INSearchForNotebookItemsIntentHandling_pSg
So12REMListBadgeCSg
So8REMColorCSg
So7INImageCSg
So18INObjectCollectionCy
GSgSo7NSErrorCSgIeyByy_
ySay
GSg_
SgtG
So18INObjectCollectionCy
_pSgIeggg_
SSSg
_pIeggnzo_
So15INObjectSectionC
So45INAddTasksContactEventTriggerResolutionResultC
So46INAddTasksTemporalEventTriggerResolutionResultC
So16INAddTasksIntentC
ySo14NSUserActivityCSgG
SaySo33INSpeakableStringResolutionResultCG
SaySo33INSpeakableStringResolutionResultCGIegg_
SaySo17INSpeakableStringCGSg
So14NSUserActivityCSgIegn_
_pIegg_
So14NSUserActivityCSgIegg_
So24INAddTasksIntentResponseCIeyBy_
So24REMContactRepresentationCSg
So15REMUserActivityCSg
yytG
So15REMUserActivityCSgz_Xx
Sgz_Xx
SSSgz_Xx
So7REMListC
SaySo17INSpeakableStringCG
So23REMAlarmLocationTriggerCSg
So22REMAlarmVehicleTriggerCSg
Sgz_Xx
So24REMContactRepresentationCSgz_Xx
Sgz_Xx
So10INTaskListC
So24INAddTasksIntentResponseCIegg_
ySS_So8NSObjectCtG
ySSSo8NSObjectCG
ySSypG
SS_ypt
SaySo8INPersonCGSg
So31INTaskReferenceResolutionResultCIeyBy_
So31INTaskReferenceResolutionResultCIegg_
So8CLRegionCSg
SaySo11CLPlacemarkCGSg
So21INSpatialEventTriggerCSg
So40INAddTasksTargetTaskListResolutionResultCIeyBy_
SaySo8INPersonCG
So40INAddTasksTargetTaskListResolutionResultCIegg_
So10INTaskListCSg
ySSG
10IntentType
So38INTemporalEventTriggerResolutionResultC
12ConcreteType
$s25RemindersIntentsExtension30TTRTemporalEventTriggerBearingP
So22INTemporalEventTriggerCSg
$s25RemindersIntentsExtension33TTRContactRepresentationResolvingP
So24REMContactRepresentationCSgIegn_
So24REMContactRepresentationCSgIegg_
So8INPersonC
So14CNContactStoreCyc
SaySo10INTaskListCG
ySSG
$s25RemindersIntentsExtension31TTRUNUserNotificationCenterTypeP
SaySo11REMObjectIDCG
SaySo11REMObjectIDCGz_Xx
SaySSGz_Xx
So37INContactEventTriggerResolutionResultC
12ConcreteType
$s25RemindersIntentsExtension29TTRContactEventTriggerBearingP
So21INContactEventTriggerCSg
width
height
_rawValue
RawValue
_ObjectiveCType
store
queue
dataSource
timeProvider
ConcreteType
store
queue
contactRepresentationResolver
dataSource
timeProvider
IntentType
store
store
queue
dataSource
store
queue
$__lazy_storage_$_contactStore
$__lazy_storage_$_addTasksHandler
$__lazy_storage_$_setTaskAttributeHandler
$__lazy_storage_$_snoozeTasksHandler
$__lazy_storage_$_searchForNotebookItemsHandler
$__lazy_storage_$_widgetListHandler
store
queue
dataSource
badgeSize
ConcreteType
store
queue
dataSource
contactRepresentationResolver
userActivityProvider
timeProvider
didNotSpecifyTargetList
IntentType
contactStoreProvider
store
queue
fallbackDataSource
store
notificationCenter
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.reminders.IntentsExtension</string>
<key>com.apple.chrono.invalidate-timelines</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.remindd</key>
<dict>
<key>keepAlive</key>
<true/>
<key>userInteractive</key>
<true/>
</dict>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
</array>
<key>com.apple.private.tcc.allow-or-regional-prompt</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceReminders</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.reminders</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.remindd</string>
<string>com.apple.remindd.userInteractive</string>
<string>com.apple.chrono.widgetcenterconnection</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.remindd</string>
</array>
</dict>
</plist>
application-identifier$com.apple.reminders.IntentsExtension0*%com.apple.chrono.invalidate-timelines
0=8com.apple.private.coreservices.cangetcurrentactivityinfo
com.apple.private.remindd
keepAlive
userInteractive
com.apple.private.tcc.allow0
kTCCServiceCalendar0J.com.apple.private.tcc.allow-or-regional-prompt0
kTCCServiceAddressBook0A'com.apple.private.tcc.allow.overridable0
kTCCServiceReminders0D%com.apple.security.application-groups0
group.com.apple.reminders0
4com.apple.security.exception.mach-lookup.global-name0_
com.apple.remindd!com.apple.remindd.userInteractive'com.apple.chrono.widgetcenterconnection0O8com.apple.security.exception.shared-preference.read-only0
com.apple.remindd
