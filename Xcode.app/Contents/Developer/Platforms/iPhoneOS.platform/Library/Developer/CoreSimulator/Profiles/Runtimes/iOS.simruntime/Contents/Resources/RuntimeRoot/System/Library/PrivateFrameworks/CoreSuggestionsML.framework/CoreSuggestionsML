?333333
@(#)PROGRAM:CoreSuggestionsML  PROJECT:Suggestions-1193.26
SGQuickResponsesConfig: Object for key %@ not found in dictionary.
SGQuickResponsesConfig: Object for key %@ is not a number.
SGQuickResponsesConfig: Object for key %@ is not a string.
SGQuickResponsesConfig: Object for key %@ is not an array.
SGQuickResponsesConfig: Object for key %@ is not a dictionary.
Unknown model type name %@ when initializing SGQuickResponsesConfig from plist.
Unknown strategy string %@ when initializing SGQuickResponsesConfig from plist.
dictionary
[dictionary stringAssertedForKey:FEATURES_MODEL_ID]
[dictionary stringAssertedForKey:FEATURES_VERSION]
[dictionary numberAssertedForKey:VECTOR_LENGTH]
[dictionary numberAssertedForKey:CHARACTER_N_GRAM_MINIMUM_N]
[dictionary numberAssertedForKey:CHARACTER_N_GRAM_RANGE_N_LENGTH]
[dictionary numberAssertedForKey:TOKEN_N_GRAM_MINIMUM_N]
[dictionary numberAssertedForKey:TOKEN_N_GRAM_RANGE_N_LENGTH]
_featuresModelId.length > 0
_featuresVersion.length > 0
NSMaxRange(_characterNGramRange) <= MAXIMUM_NGRAM_LENGTH
NSMaxRange(_tokenNGramRange) <= MAXIMUM_NGRAM_LENGTH
_vectorizerStrategy < PMLHashingVectorizerStrategyLimit
[dictionary numberAssertedForKey:POSITIVE_SAMPLING_RATE]
[dictionary numberAssertedForKey:DYNAMIC_LABEL_SAMPLING_RATE]
[dictionary numberAssertedForKey:NEGATIVE_SAMPLING_RATE]
0 <= _positiveSamplingRate && _positiveSamplingRate <= 1
0 <= _dynamicLabelSamplingRate && _dynamicLabelSamplingRate <= 1
0 <= _negativeSamplingRate && _negativeSamplingRate <= 1
SGQuickResponsesConfig: negativeSamplingRate=%f and positiveSamplingRate=%f do not satisfy strict DP constraint
[[dictionary dictAssertedForKey: MAX_PROMPT_LENGTH] numberAssertedForKey:language]
[[dictionary dictAssertedForKey: MAX_REPLY_LENGTH] numberAssertedForKey:language]
[dictionary numberAssertedForKey:MAX_PROMPT_WINDOW_SECONDS]
0 <= _maxPromptWindowSeconds
[dictionary stringAssertedForKey:PROMPT_JOINING_STRING]
[dictionary numberAssertedForKey:PERSONALIZATION_IS_DISABLED]
[dictionary numberAssertedForKey:REPLY_TEXT_IS_RANDOMIZED]
[dictionary numberAssertedForKey:RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY]
[dictionary numberAssertedForKey:RANKING_WEIGHT_CATEGORY_AVERAGE]
[dictionary numberAssertedForKey:RANKING_WEIGHT_CATEGORY_MAX]
[dictionary numberAssertedForKey:RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT]
[dictionary numberAssertedForKey:RESPONSE_COUNT_FACTOR_RESPONSE_BONUS]
[dictionary numberAssertedForKey:MINIMUM_TO_SHOW_THRESHOLD]
[dictionary numberAssertedForKey:DEFAULT_RESPONSES_TO_RETURN]
[dictionary numberAssertedForKey:RESPONSES_AT_TOP_WITH_MORE_DIVERSITY]
[dictionary numberAssertedForKey:PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS]
[dictionary numberAssertedForKey:PERSONALIZATION_DISPLAYED_PSEUDOCOUNT]
[dictionary numberAssertedForKey:PERSONALIZATION_EXPLORATION_FACTOR]
_weightForCategoryAverage + _weightForCategoryMax < 1 + EPSILON_OF_DOUBLE_COMPARISON
fabs(1 - _weightForCategoryAverage - _weightForCategoryMax - _weightForIndividualModel) < EPSILON_OF_DOUBLE_COMPARISON
!_isPerCategory || fabs(1 - _weightForCategoryAverage - _weightForCategoryMax) < EPSILON_OF_DOUBLE_COMPARISON
0 <= _weightForCategoryAverage && _weightForCategoryAverage <= 1
0 <= _weightForCategoryMax && _weightForCategoryMax <= 1
0 <= _weightForIndividualModel && _weightForIndividualModel <= 1
0 <= _classDiscount && _classDiscount <= 1
0 <= _responsesBonus && _responsesBonus <= 1
_personalizationSelectedPseudocountPerSemanticClass <= _personalizationDisplayedPseudocount
[dictionary numberAssertedForKey:MAX_PROMPT_LENGTH]
_promptJoiningString.length
[_modelTypeName isEqualToString:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER] || [_modelTypeName isEqualToString:SG_QUICK_RESPONSES_BINARY_LOGISTIC_MULTI_LABEL]
!([_modelTypeName isEqualToString:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER] && !_subModelKeyString.length)
[semanticClass isKindOfClass:NSArray.class]
[replyGroup isKindOfClass:NSArray.class]
[string isKindOfClass:NSString.class]
[dictionary arrayAssertedForKey:RESPONSE_CLASSES]
[SGQuickResponsesReplyModel semanticClassesForArray:array]
[dictionary arrayAssertedForKey:REPLY_TEXT_SELECTED_PSEUDOCOUNTS]
[dictionary numberAssertedForKey:MODEL_SCORE_WEIGHT]
[dictionary numberAssertedForKey:MODEL_CATEGORY]
_scoreWeight >= 0
Failure to read SGQuickResponsesReplies from config.
[array isKindOfClass:NSArray.class]
[dictionary isKindOfClass:NSDictionary.class]
replyModel != nil
[self.class isZeroBasedAndContiguous:replyModels]
array
[self.class replyModelsForArray:array]
[self.class nestedArrayFromModels:_models]
[self.class indexedArraysFromNestedArray:nestedArray]
indexedArrays.count >= 4
[self.class flattenedArraysFromNestedArray:_semanticClasses]
[self.class parentArraysFromNestedArray:nestedArray models:_models]
parentArrays.count >= 4
_selectedPseudocounts.count == _replyTexts.count
[dictionary numberAssertedForKey:IS_CUSTOM_RESPONSES_ENABLED]
[dictionary numberAssertedForKey:FILTER_BATCH_SIZE]
[dictionary numberAssertedForKey:MINIMUM_TIME_INTERVAL_SECS]
[dictionary numberAssertedForKey:MINIMUM_DISTINCT_RECIPIENTS]
[dictionary numberAssertedForKey:MINIMUM_REPLY_OCCURENCES]
[dictionary numberAssertedForKey:TIME_DECAY_FACTOR]
[dictionary numberAssertedForKey:COUNT_EXPONENT]
[dictionary numberAssertedForKey:DISTANCE_THRESHOLD]
[dictionary numberAssertedForKey:MIN_DECAYED_COUNT_FOR_PREDICTION]
[dictionary numberAssertedForKey:MIN_DECAYED_COUNT_FOR_PRUNING]
[dictionary numberAssertedForKey:MAX_STORED_MESSAGES]
[dictionary numberAssertedForKey:MAX_STORED_CUSTOM_RESPONSES]
[dictionary numberAssertedForKey:MAX_ROWS_IN_PER_RECIPIENT_TABLE]
[dictionary numberAssertedForKey:CUSTOM_RESPONSES_COMPATIBILITY_VERSION]
[dictionary numberAssertedForKey:ALLOW_PROFANITY]
[dictionary numberAssertedForKey:KNOWLEDGE_STORE_QUERY_LIMIT]
[dictionary numberAssertedForKey:MAX_REPLY_LENGTH]
[dictionary numberAssertedForKey:MAX_REPLY_GAP_SECS]
[dictionary numberAssertedForKey:USAGE_SPREAD_EXPONENT]
0 <= _minimumTimeIntervalSecs
0 <= _timeDecayFactor && _timeDecayFactor <= 1
0 <= _countExponent
SGQuickResponses: Invalid plist path %@
dict
[dict isKindOfClass:NSDictionary.class]
SGQuickResponses: no available configuration found to support prediction for language %@
[[SGQuickResponsesPredictionParameters alloc] initWithDictionary:dict[PREDICTION_PARAMETERS]]
[[SGModelHyperparameters alloc] initWithDictionary:dict[PREDICTION_MODEL_HYPERPARAMETERS][language] modelTypeName:_predictionParams.modelTypeName]
[[dict objectAssertedForKey:PREDICTION_PREPROCESSING_METHODS] arrayAssertedForKey:language]
[SGQuickResponsesReplies repliesWithArray:dict[PREDICTION_REPLIES][language]]
SGQuickResponses: no available configuration found to support training for language %@
[[SGQuickResponsesClassificationParameters alloc] initWithDictionary:dict[CLASSIFICATION_PARAMETERS] language:language]
[[SGModelHyperparameters alloc] initWithDictionary:dict[CLASSIFICATION_MODEL_HYPERPARAMETERS][language] modelTypeName:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER]
[[dict objectAssertedForKey:CLASSIFICATION_PREPROCESSING_METHODS] arrayAssertedForKey:language]
[[dict objectAssertedForKey:CLASSIFICATION_LABELS] arrayAssertedForKey:language]
SGQuickResponsesConfig: Training class count exceeds maximum
SGQuickResponses: no available configuration found to support custom responses for language %@
[[SGCustomResponsesParameters alloc] initWithDictionary:dict[CUSTOM_RESPONSES_PARAMETERS]]
[self isValidConfigForWordPieceWithLazyVocab:lazyVocab]
SGQuickResponsesConfig: Strategy PMLHashingVectorizerStrategyWordPiece used but no vocab present
SGQuickResponsesConfig: final preprocessing step %@ is not %@ or %@
Error finding model plist path for %@
Error finding model trie path for %@
No reply text string exists in config for displayed response: %@
No reply text string exists in config for selected response: %@
SGStringPreprocessor error: NSSelectorFromString returned NULL
SGStringPreprocessor received an invalid method %@
[SGStringPreprocessingTransformer replaceContactNamesWithString:withValue:] - Incorrect format for value: %@
A (lang: %@) canned response includes emojis with skin-tone modifiers!
QuickResponses: Could not initialize SGQuickResponsesStore in directory - %@
QuickResponses: No message was passed in.
QuickResponses: Message length 0 passed in, ignoring.
QuickResponses: No locale was passed in.
QuickResponses: No language was detected from the message.
Could not find inference model (an error occurred, or possibly prediction for language %@ not supported)
Required model file(s) not specified.
 enableTelemetry=YES 
QuickResponsesForMessage
Returning nil because message length exceeds maximum length %ld)
Cannot predict for locale %@ using model with language %@
QuickResponsesForMessageFeaturization
Could not featurize (prediction for language %@ not supported?)
QuickResponsesForMessagePrediction
Could not predict score (prediction for language %@ not supported?)
QuickResponsesForMessageRobo
Error obtaining scores for message.
QuickResponses - trigger: %@, score: %f
QuickResponsesForMessageTriggers
QuickResponsesForMessageCustom
Start
Completed
AddCustomResponses
SGQuickResponses: Could not find trigger for dynamic label %@
SGQuickResponses: No name found for thirdparty dynamic label: %@
SGQuickResponses: dynamic label (score index %tu) should have one semantic class (count - %tu)!
SGQuickResponses: dynamic label (score index %tu) should have one reply text per semantic class (count - %tu)!
SGQuickResponses: attempted to register displayed responses with 0 responses.
SGQuickResponses: attempted to register displayed responses but language is nil.
SGQuickResponses: attempted to register displayed responses but config is nil (language %@ not supported?).
SGQuickResponses: attempted to register displayed responses but personalization is disabled.
SGQuickResponses: attempted to register a canned response but not using QuickResponses.
SGQuickResponses: attempted to register a response but language is nil.
SGQuickResponses: attempted to register a response but config at %@ is nil (language %@ not supported?).
SGQuickResponses: attempted to register a canned response at position %@ that is not likely to have come from QuickResponses.
config not found for language %@ and plist path %@
Unknown model name: %s
Failed to locate assets resource %s
Failed to load model file resource %s, with type:%@, modelEntity:%@, mode:%lu, language:%@
No transformer instance for model %@ in language %@ and mode %@ at path %@
Quick Responses: failed to initialize database while warming up store
SGQuickResponsesStore read error: %@
SGQuickResponsesStore write error: %@
SGQuickResponsesStore: Unexpected null value for custom_responses.language
SGQuickResponsesStore: Unexpected null value for custom_responses.recipient
SGQuickreponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.prompt_embedding
SGQuickResponsesStore: mis-matched dimensions (a possible plist error) between embedding and densePromptEmbedding in store: %tu v,s. %tu
ComputeCustomResponseDistance
SingleCustomResponseRow
SelectCustomResponseRows
SortCustomResponses
DedupeCustomResponses
RemoveProfaneCustomResponses
Row returned in deltaForResponsesOnRow was null, continuing to iterate as best effort
SGQuickResponsesEngagementDeltas displayed value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas selected value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas matched value %lld is out of range for int32_t, casting to boundary value
Language in deltaForResponsesOnRow was null, continuing to iterate as best effort
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Responses to Robots config file not found
Added message id already in conversation. conversation id = %@
Most recent message in conversation turns does not match specified current message.
SGLanguageDetection: lowercase len %d, range loc %d / len %d found no range in original len %d
SGLanguageDetection: mismatched lowercase rangeEnd %d, stringEnd %d / original rangeEnd %d, stringEnd %d
SGLanguageDetection: lowercase tokenRange is loc %d, len %d but original range is loc %d, len %d
SGLanguageDetection: strange! lowercase is loc %d, len %d but original is loc %d, len %d
SGLanguageDetection: possible problem! lowercase '%@' strlen %d and original '%@' strlen %d
SGLanguageDetection: original len %d is longer than the lowercased len %d in locale %@, detected %@
Error loading model plist %@: %@
Error deserializing model plist %@: %@
SGQuickResponsesToRobots: Either 0 or more than 1 recipient found.
SGQuickResponsesToRobots: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
SGQuickResponsesToRobots: Error fetching contact with %@: %@
SGQuickResponsesToRobots: Could not load assets for making replies to robots prediction
SGQuickResponsesToRobots: Replies to robots feature disabled
SGQuickResponsesToRobots: Not running replies to robots if recipients is nil
SGQuickResponsesToRobots: Not running replies to robots for language %@
SGQuickResponsesToRobots: Can't reply to empty message
SGQuickResponsesToRobots: Not running replies to robots for significant sender
SGQuickResponsesToRobots: Capital words threshold condition not met
Failed to retrieve message events from CoreDuet. Error: %@
SGQuickResponsesDatabase: Unable to create directory for database
SGQuickResponsesDatabase: Migrations failed
SGQuickResponsesDatabase failed to remove corruption marker at %@: %@
SGQuickResponsesDatabase not migrating, too many attempts (%d)
SGQuickResponsesDatabase migrating db
SGQuickResponsesDatabase could not perform migrations (device locked?), try again later
SGQuickResponsesDatabase migrations failed, cannot use database
SGQuickResponsesDatabase has a future schema version, cannot use database
SGQuickResponsesDatabase got unexpected migration result of 'step completed', will not use database
SGQuickResponsesDatabase: Unable to initialize database.
SGQuickResponsesDatabase: Unable to open existing database: %@
quickResponsesBinaryLogisticMultiLabel
quickResponsesEspressoClassifierMultiLabel
DecrementingFrequency
Frequency
SequentialTokenNgram
SequentialCharNgram
LegacyBagOfId
BagOfId
WordPiece
SGQuickResponsesConfig.m
FEATURES_MODEL_ID
FEATURES_VERSION
VECTOR_LENGTH
CHARACTER_N_GRAM_MINIMUM_N
CHARACTER_N_GRAM_RANGE_N_LENGTH
TOKEN_N_GRAM_MINIMUM_N
TOKEN_N_GRAM_RANGE_N_LENGTH
VECTORIZER_STRATEGY
ID_VECTOR_LENGTH
ID_VECTOR_SHOULD_PAD_TO_LENGTH
ID_VECTOR_SHOULD_APPEND_SENTEND
ID_VECTOR_SHOULD_APPEND_SENTSTART
VECTOR_NORMALIZATION
VL=%lu&CL=%lu&CH=%lu&TL=%lu&TH=%lu&SN=%lu&IDL=%lu&IDS=%lu&VN=%ld&FV=%@
POSITIVE_SAMPLING_RATE
DYNAMIC_LABEL_SAMPLING_RATE
NEGATIVE_SAMPLING_RATE
MAX_PROMPT_LENGTH
MAX_REPLY_LENGTH
MAX_PROMPT_WINDOW_SECONDS
PROMPT_JOINING_STRING
MODEL_TYPE_NAME
SUB_MODEL_KEY_STRING
PERSONALIZATION_IS_DISABLED
REPLY_TEXT_IS_RANDOMIZED
RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY
RANKING_WEIGHT_CATEGORY_AVERAGE
RANKING_WEIGHT_CATEGORY_MAX
RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT
RESPONSE_COUNT_FACTOR_RESPONSE_BONUS
MINIMUM_TO_SHOW_THRESHOLD
DEFAULT_RESPONSES_TO_RETURN
RESPONSES_AT_TOP_WITH_MORE_DIVERSITY
PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS
PERSONALIZATION_DISPLAYED_PSEUDOCOUNT
PERSONALIZATION_EXPLORATION_FACTOR
DYNAMIC_LABELS_ENABLED
FILTER_NONCONFIDENT
HAS_NEGATIVE_CLASS
NEGATIVE_CLASS_MAXIMUM_TO_PREDICT
RESPONSE_CLASSES
REPLY_TEXT_SELECTED_PSEUDOCOUNTS
MODEL_SCORE_WEIGHT
MODEL_CATEGORY
DYNAMIC_LABEL
%@ must implement -normalizedReplyTextsSet:
%@ must implement -replyTextsForIndex:position:
%@ must implement -replyTextsForIndex:
%@ must implement -replyTextCount:
%@ must implement -replyClassCount:
%@ must implement -modelCount:
%@ must implement -maxDistinctReplies:
%@ must implement -initWithArray:
position == 0
[obj isKindOfClass:NSArray.class]
v44@?0@8@"NSArray"16Q24Q32B40
@min.unsignedIntegerValue
@max.unsignedIntegerValue
@max.category
@"NSString"16@?0@"NSString"8
IS_CUSTOM_RESPONSES_ENABLED
FILTER_BATCH_SIZE
MINIMUM_TIME_INTERVAL_SECS
MINIMUM_DISTINCT_RECIPIENTS
MINIMUM_REPLY_OCCURENCES
TIME_DECAY_FACTOR
COUNT_EXPONENT
DISTANCE_THRESHOLD
MIN_DECAYED_COUNT_FOR_PREDICTION
MIN_DECAYED_COUNT_FOR_PRUNING
MAX_STORED_MESSAGES
MAX_STORED_CUSTOM_RESPONSES
MAX_ROWS_IN_PER_RECIPIENT_TABLE
CUSTOM_RESPONSES_COMPATIBILITY_VERSION
ALLOW_PROFANITY
KNOWLEDGE_STORE_QUERY_LIMIT
MAX_REPLY_GAP_SECS
USAGE_SPREAD_EXPONENT
USE_NON_NEGATIVE_CLASSES_ONLY
%@-%lu-%@-%@
@"_PASLRUCache"8@?0
language.length
com.apple.suggestions.quickResponsesConfigWarmup
PREDICTION_PARAMETERS
PREDICTION_REPLIES
PREDICTION_MODEL_HYPERPARAMETERS
PREDICTION_PREPROCESSING_METHODS
CLASSIFICATION_LABELS
CLASSIFICATION_MODEL_HYPERPARAMETERS
CLASSIFICATION_PREPROCESSING_METHODS
CLASSIFICATION_PARAMETERS
CUSTOM_RESPONSES_PARAMETERS
_preprocessingMethods.count >= 2
finalizeForWordPieceCaseInsensitive
finalizeForWordPieceCaseSensitive
MLModelRules.plist
MLModelMappings.plist
MLQuickResponsesTraining.plist
MLQuickResponsesTraining.trie
MetricsConfig.plist
SignatureDetectorRules.plist
DPRecorderRules.plist
NameDetectorRules.plist
SGModelAsset-notifications
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsModelAssets.plist
Assets
suggestionsmodelassets
v16@?0@"_PASAsset2"8
v16@?0@"SGMultiLabelEspressoClassifierWrapper"8
@sum.self
d16@?0@8
METHODS
methods.count % 2 == 0
%s%s%s%s
size >= 0 && size < TYPES_STRING_BUF_SIZE
%s%s%s%s%s
-[SGStringPreprocessingTransformer transform:]
SGStringPreprocessingTransformer.m
value.length == 1
!CFUniCharIsSurrogateHighCharacter(separator) && !CFUniCharIsSurrogateLowCharacter(separator)
jusqu
lorsqu
puisqu
quelqu
qoiqu
!CFUniCharIsSurrogateHighCharacter(replacement) && !CFUniCharIsSurrogateLowCharacter(replacement)
http
valueLen <= patternLen
v32@?0@"SGTokenString"8Q16^B24
:withValue:
:/.?=&_-+$!*'(),;@
v36@?0I8^S12{_NSRange=QQ}20
TRANSFORMERS
v32@?0@"<PMLTransformerProtocol>"8Q16^B24
@16@?0@"<PMLPlistAndChunksSerializableProtocol>"8
photosharing
SGQuickResponsesInference.m
modelScores != nil
text.length
lang.length
model
ranking
personalization != nil || model.config.predictionParams.isPersonalizationDisabled
storeDirectory.length
message
v32@?0@8@16^B24
v32@?0@"SGQuickResponse"8Q16^B24
@16@?0@8
distance
confident
v32@?0@"_PASTuple2"8Q16^B24
v32@?0@"SGQuickResponsesClassScore"8Q16^B24
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
[config.replies replyCountForIndex:semanticClassIndex] == 1
SGNameDetector
Class getSGNameDetectorClass(void)_block_invoke
Unable to find class %s
void *CoreSuggestionsInternalsLibrary(void)
-[SGQuickResponsesModel predict:]
SGQuickResponsesModel.m
[[self class] isEqual:features.source.modelClass]
[data isKindOfClass:NSString.class]
[vector isKindOfClass:PMLSparseVector.class]
[label isKindOfClass:NSNumber.class]
quickResponses
BinaryLogisticMultiLabel
%@:%@
EspressoClassifierMultiLabel
%@_%@_%@%@Model.chunk
Chunk file at %@ not the same class as type %@
model.outputDimension == configCount
v16@?0@"NSMutableSet"8
%@%lu%@%@
@"_PASLock"8@?0
%@ must implement +newTransformerInstanceForLanguage:mode:plistPath:
config
featurizer
source
labeler != nil || config.mode == SGModelModePrediction
sampler != nil || config.mode == SGModelModePrediction
SGQRTextMessage
SGQuickResponses
+[SGQuickResponsesModelRules areModelsAvailableInLanguage:]_block_invoke
[objectives isKindOfClass:[NSDictionary class]]
v32@?0@8@"NSDictionary"16^B24
TRAINING
PREDICTION
EVALUATION
NSString *modelModeName(SGModelMode)
Unexpected SGModelMode mode: %lX
SGQuickResponsesStore.m
Invalid parameter not satisfying: %@
store
v16@?0@"SGLazyInit"8
@8@?0
{_PASDBIterAction_=B}16@?0@"NSError"8
B8@?0
SELECT * FROM responses WHERE lang_response=$lang_response
SELECT * FROM responses_totals WHERE language=$language
$lang_response
v16@?0@"_PASSqliteStatement"8
displayed
selected
matched
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
$language
opportunities
unmatched
v24@?0@"_PASSqliteDatabase"8@?<{_PASDBIterAction_=B}@?@"NSError">16
INSERT INTO responses (lang_response, displayed) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET displayed=displayed+1
INSERT INTO responses_totals (language, opportunities, displayed) VALUES ($language,1,$count) ON CONFLICT(language) DO UPDATE SET opportunities=opportunities+1, displayed=displayed+$count
$count
INSERT INTO responses (lang_response, selected) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET selected=selected+1
INSERT INTO responses_totals (language, selected) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET selected=selected+1
INSERT INTO responses (lang_response, matched) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, matched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, unmatched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET unmatched=unmatched+1
UPDATE messages SET filtered = true, filtering = false WHERE rowid=$row_id
INSERT INTO cr_per_recipient_counts (reply,  language,  recipient, decayed_times_used)                              VALUES($reply, $language, $recipient,                  1) ON CONFLICT(reply, language, recipient) DO UPDATE SET decayed_times_used = decayed_times_used + 1
INSERT INTO custom_responses (reply,  language,  prompt_embedding, decayed_times_used,  first_seen,  last_seen)                       VALUES($reply, $language, $prompt_embedding,                  1,    $sent_at,   $sent_at)
$reply
$prompt_embedding
$sent_at
$recipient
$row_id
UPDATE custom_responses SET prompt_embedding = $prompt_embedding,     decayed_times_used = decayed_times_used + 1,     first_seen = MIN($sent_at, first_seen),     last_seen = MAX($sent_at, last_seen) WHERE language = $language AND reply = $reply
INSERT INTO messages (reply, language, prompt, recipient, sent_at, filtering, filtered) VALUES($reply, $language, $prompt, $recipient, $sent_at, false, false)
$prompt
DELETE FROM messages ORDER BY sent_at DESC LIMIT -1 OFFSET $table_limit
$table_limit
SELECT COUNT(ROWID) as c from messages where NOT filtered
SELECT m.rowid, m.filtering, m.filtered, m.recipient, m.prompt, m.language, m.reply, m.sent_at, cr.prompt_embedding FROM messages as m, (SELECT reply, language, prompt_embedding from custom_responses) as cr WHERE m.filtering AND NOT m.filtered AND m.reply = cr.reply AND m.language = cr.language
language
recipient
reply
prompt
rowid
sent_at
prompt_embedding
UPDATE messages SET filtering = true WHERE NOT filtered ORDER BY sent_at LIMIT $limit
SELECT changes();
$limit
UPDATE messages SET filtering = false, filtered = true WHERE filtering AND reply IN (SELECT reply FROM messages GROUP BY reply HAVING COUNT(DISTINCT(recipient)) < $recipients OR COUNT(reply) < $replies)
$recipients
$replies
SELECT rowid, reply FROM messages WHERE filtering
UPDATE messages SET filtering = false, filtered = true WHERE rowid = $row_id
SELECT profanity_locale FROM custom_responses_version
profanity_locale
SELECT current_version FROM custom_responses_version
current_version
DELETE FROM custom_responses_version
INSERT INTO custom_responses_version (current_version, profanity_locale) VALUES($current_version, $profanity_locale)
$current_version
$profanity_locale
DELETE FROM custom_responses
UPDATE messages SET filtering = false, filtered = false
DELETE FROM messages
SELECT COUNT(*) as n FROM messages
UPDATE messages SET filtered = true ORDER BY sent_at DESC LIMIT $evalCount
$evalCount
SELECT prompt, reply FROM messages ORDER BY sent_at DESC LIMIT $evalCount
SELECT rowid, reply, language, prompt, sent_at, recipient FROM messages WHERE filtering AND NOT filtered
SELECT prompt_embedding FROM custom_responses WHERE reply=$reply AND language=$language
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages))
SELECT COUNT(ROWID) as n FROM cr_per_recipient_counts
SELECT reply, language, COUNT(ROWID) as n FROM cr_per_recipient_counts GROUP BY reply, language
second
DELETE FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language ORDER BY decayed_times_used ASC LIMIT $n_rows 
$n_rows
SELECT reply, prompt_embedding, decayed_times_used, usage_spread FROM custom_responses WHERE language = $language   AND decayed_times_used >= $minimum_decayed_count   AND last_seen - first_seen >= $minimum_time_interval
$minimum_decayed_count
$minimum_time_interval
decayed_times_used
usage_spread
q24@?0@"_PASTuple2"8@"_PASTuple2"16
SELECT rowid, prompt_embedding from custom_responses
UPDATE custom_responses SET prompt_embedding = $prompt_embedding, decayed_times_used = decayed_times_used * $decay_factor WHERE rowid = $rowid
$decay_factor
$rowid
UPDATE cr_per_recipient_counts SET decayed_times_used = decayed_times_used * $decay_factor
DELETE FROM custom_responses WHERE decayed_times_used < $threshold
$threshold
SELECT COUNT(ROWID) as c from custom_responses
DELETE FROM custom_responses ORDER BY decayed_times_used ASC LIMIT $table_limit
SELECT t1.lang_response AS lang_response        ,CASE            WHEN t2.displayed IS NULL THEN t1.displayed            ELSE t1.displayed - t2.displayed         END AS displayed        ,CASE            WHEN t2.selected IS NULL THEN t1.selected            ELSE t1.selected - t2.selected         END AS selected        ,CASE            WHEN t2.matched IS NULL THEN t1.matched            ELSE t1.matched - t2.matched         END AS matched FROM responses t1 LEFT JOIN responses_snapshot t2     ON t1.lang_response = t2.lang_response ORDER BY RANDOM() 
DROP TABLE responses_snapshot
CREATE TABLE responses_snapshot AS     SELECT *     FROM responses 
CREATE INDEX idx_responses_snapshot_lang_response ON responses_snapshot (lang_response)
lang_response
flakyDatabaseHandle.getObject.db.isInMemory
SGQuickResponsesStore failed to destroy instance in memory.
SELECT decayed_times_used FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language AND recipient=$recipient
SELECT usage_spread FROM custom_responses WHERE reply=$reply AND language=$language
totalOpportunities >= 0
totalDisplayed >= 0
totalSelected >= 0
totalMatched >= 0
totalUnmatched >= 0
displayed >= 0
selected >= 0
matched >= 0
langResponse
response
lang
SGFutureFoundationFramework.m
block
locale
guardedTokenizer
SGTokenizerML
@"_PASQueueLock"8@?0
v8@?0
v16@?0@8
v40@?0@"NSString"8^B16{_NSRange=QQ}24
v24@?0^{_LXEntry=}8*16
malloc failed
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
@"NSArray"16@?0@"NSArray"8
SGPersonalizeEmojisWarmup
SGStringUtilML.m
isSingleEmoji == NO
emojiPreferences != nil
v40@?0@"EMFEmojiToken"8{_NSRange=QQ}16^B32
SGQuickResponsesToRobotsConfig.m
params
ENABLE_FEATURE
RULES_DICT
TRIGGER_WORDS
GENERAL_CONTEXT_WORDS
LEFT_CONTEXT
RIGHT_CONTEXT
GENERAL_CONTEXT_LEFT
GENERAL_CONTEXT_RIGHT
TRIGGER_CONTEXT
RELAX_CONTEXT
USE_GENERAL_CONTEXT
INSIGNIFICANT_SENDER
CAPS_WORDS_RATIO_MAX
v16@?0@"NSMutableArray"8
B32@?0@"<SGConversationTurnProtocol>"8Q16^B24
sender
q24@?0@"<SGConversationTurnProtocol>"8@"<SGConversationTurnProtocol>"16
LABEL_MAPPING
SGStringLabelingTransformer.m
duplicate label %@
mapping
-[SGStringLabelingTransformer transform:]
PREPROCESSOR
LABELER
SGTextLabelTransformer.m
methods
labels
preprocessor
labeler
@unionOfArrays.self
SGTextLabelTransformer: Unexpected null value for flattened labels
-[SGTextLabelTransformer transform:]
[input isKindOfClass:[NSString class]]
SGQuickResponsesClassificationModel.m
SGLanguageDetection.m
localeIdentifier.length >= 2
zh-Hans
Hans
Hant
zh-Hant
Latn
hi-Latn
Cyrl
Arab
uz-Arab
uz-Latn
sr-Latn
NSMaxRange(lowercaseRange) <= lowercaseText.length
v40@?0@"NSString"8{_NSRange=QQ}16^B32
NSMaxRange(textTagRange) <= text.length
SGDefaultAssets.m
no path for filename %@
MLQuickResponsesPrediction
RepliesToRobots
plist
SGQuickResponsesToRobots.m
repliesToRobotsConfig
INSendMessageIntent
startDate > %@
com.apple.MobileSMS
startDate
SGMessagePairIterator.m
Iterator exhausted!
messageEvents is nil
NSString *getIMAttachmentCharacterString(void)
IMAttachmentCharacterString
void *IMFoundationLibrary(void)
NSString *getIMBreadcrumbCharacterString(void)
IMBreadcrumbCharacterString
SGModelFeatures.m
sessionDescriptor
modelClass
vector
SGRandomization.m
NSMaxRange(range) <= mutableArray.count
valueBlock
v32@?0@8Q16^B24
k <= n
SEPARATOR
SGTokenJoiningTransformer.m
Unexpected input: %@. %@ requires an NSArray.
TRANSFORMER
INPUTKEY
SGSelectiveTransformer.m
Unexpected input: %@. %@ requires dictionary with inputKey: %@.
firstPartyLocTE9DLjFwCg
firstPartyPhoneUEhPTkUuMXAK
firstPartyEmailRU1BSUwuMXAK
firstPartyPostalUE9TVEFMLjFwCg
photoSharingUEhPVE8K
SGQuickResponsesRanking.m
num.unsignedIntegerValue >= headerCount
v32@?0@"NSNumber"8Q16^B24
v32@?0@"SGQuickResponsesCategoryScore"8Q16^B24
v32@?0@"SGQuickResponsesReplyModel"8Q16^B24
validClasses %d out of range [1, %d]
responsesToFill %d out of range [%d, %d]
score >= 0
quickresponses.db
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
CREATE TABLE responses (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE responses_totals (    language TEXT PRIMARY KEY,     opportunities INTEGER NOT NULL DEFAULT 0,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0,     unmatched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE messages (    reply TEXT NOT NULL,    language TEXT NOT NULL,     prompt TEXT NOT NULL,     recipient TEXT NOT NULL,     sent_at DOUBLE NOT NULL,     filtering BOOL NOT NULL,     filtered BOOL NOT NULL )
CREATE TABLE custom_responses (    reply TEXT NOT NULL,     language TEXT NOT NULL,     prompt_embedding BLOB NOT NULL,     decayed_times_used DOUBLE NOT NULL,     first_seen DOUBLE NOT NULL,     last_seen DOUBLE NOT NULL )
CREATE TABLE custom_responses_version (    current_version INTEGER NOT NULL,     profanity_locale TEXT NOT NULL )
CREATE TABLE cr_per_recipient_counts (    reply TEXT NOT NULL,     language TEXT NOT NULL,     recipient TEXT NOT NULL,     decayed_times_used DOUBLE NOT NULL, UNIQUE(reply, language, recipient))
ALTER TABLE custom_responses ADD COLUMN usage_spread DOUBLE NOT NULL DEFAULT 0.0
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages));
CREATE TABLE responses_snapshot (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
DELETE FROM responses
DELETE FROM responses_totals
DELETE FROM responses_snapshot
@&B&<
softlink:o:path:/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
softlink:o:path:/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
softlink:o:path:/System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
SGQuickResponsesConfigDictionary
SGModelHyperparameters
SGQuickResponsesClassificationParameters
SGQuickResponsesPredictionParameters
SGQuickResponsesReplyModel
SGQuickResponsesReplies
SGQuickResponsesRepliesFlattened
SGQuickResponsesRepliesNested
SGCustomResponsesParameters
SGQuickResponsesConfig
SGModelAsset
SGNestedArray
SGMultiLabelEspressoClassifierWrapper
SGMultiLabelEspressoClassifierCache
SGMultiLabelEspressoClassifierCached
PMLMultiLabelClassifierProtocol
NSObject
SGQuickResponsesReplyOption
SGQuickResponsesPersonalization
SGStringPreprocessingTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
SGStringPreprocessor
SGStringSplitter
SGPipelineTransformer
SGQuickResponsesScores
SGQuickResponse
SGQuickResponsesInference
SGQuickResponsesModel
SGModelSampler
SGQuickResponsesTransformerInstance
SGQuickResponsesModelRules
SGQuickResponsesStore
SGQuickResponsesRecords
SGQuickResponsesReplyRecord
SGQuickResponsesEngagementDeltas
NSSecureCoding
NSCoding
SGLazyInit
SGTokenizerML
SGLexiconML
SGDeduperML
SGQuickResponsesToRobotsConfig
SGConversationTracker
SGStringLabelingTransformer
SGTextLabelTransformer
SGQuickResponsesClassificationModel
SGLanguageDetection
SGDefaultAssets
SGQuickResponsesToRobots
SGMessagePair
SGMessagePairIterator
SGModelSource
SGModelFeatures
SGRandomization
SGTokenJoiningTransformer
SGSelectiveTransformer
SGQuickResponsesDynamicLabelSet
SGQuickResponsesRanking
SGQuickResponsesScoring
SGQuickResponsesDistributingCount
SGQuickResponsesClassScore
SGQuickResponsesCategoryScore
SGQuickResponsesDatabase
_PASDatabaseMigrationProtocol
T@"NSString",R,N,V_langResponse
T#,&,N,V_modelClass
T@"SGQuickResponsesPredictionParameters",R,N,V_predictionParams
T@"<PMLTransformerProtocol>",&,V_transformer
TQ,R,N,V_minimumReplyOccurences
T@"<PMLTransformerProtocol>",R,N,V_labeler
_allowProfanity
T@"NSArray",&,V_transformers
_categoryModels
T@"NSArray",R,N,V_categorySemanticClasses
T@"NSArray",R,N,V_labels
_handle
T@"NSArray",R,N,V_models
_labels
T@"NSArray",R,N,V_preprocessingMethods
_models
T@"NSArray",R,N,V_replyTextParent
_responsesBonus
T@"NSArray",R,N,V_selectedPseudocounts
_source
T@"NSArray",R,N,V_semanticClassReplyTextStrings
_totalUnmatched
T@"NSArray",R,N,V_semanticClassSelectedPseudocounts
_vector
T@"NSArray",R,N,V_semanticClasses
average
T@"NSArray",R,N,V_styleGroupReplyTexts
checkFilesystemPathForFilename:
T@"NSDate",&,N,V_sentAt
content
T@"NSDictionary",R,N,V_proactiveTrigger
dealloc
T@"NSNumber",R,N,V_position
detectLanguageFromLanguageTags:
T@"NSSet",R,N,V_generalContextWords
dynamicLabelSet
T@"NSSet",R,N,V_triggerWords
featuresVersion
T@"NSString",&,N,V_handle
flattenedArraysFromNestedArray:
T@"NSString",&,N,V_reply
initWithDouble:
T@"NSString",&,V_separator
initWithInitializer:destructor:
T@"NSString",R,C,N,V_featuresModelId
isDoneIterating
T@"NSString",R,C,N,V_lang
isProxy
T@"NSString",R,C,N,V_text
labeler
T@"NSString",R,N,V_modelTypeName
matched
T@"NSString",R,N,V_response
maxReplyGapSecs
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
modelId
T@"SGModelHyperparameters",R,N,V_modelHyperparameters
nextMessagePair
T@"SGModelSource",R,N,V_source
outputDimension
T@"SGQuickResponsesConfig",R,N,V_config
release
T@"_PASLazyPurgeableResult",&,N,V_classifier
removeNonASCII:
TB,R,N,V_allowProfanity
replies
TB,R,N,V_dynamicLabelsEnabled
replyTextParent
TB,R,N,V_filterNonConfident
sampler
TB,R,N,V_insignificantSender
selectedPseudocountsFromModels:
TB,R,N,V_isCustomResponse
semanticClassId
TB,R,N,V_isPerCategory
setGlobalTransformerForTesting:
TB,R,N,V_isReplyTextRandomized
setTransformer:
TB,R,N,V_modelFeaturizationFormatOptionIsDense
timeDecayFactor
TB,R,N,V_useGeneralContext
transformBatch:
TQ,R
TQ,R,N,V_categoryId
.cxx_destruct
T@"SGCustomResponsesParameters",R,N,V_customResponsesParameters
T#,R
T@"_PASSqliteDatabase",R,N,V_db
T@"<PMLTransformerProtocol>",R,N,V_featurizer
Td,R,N,V_maxPromptWindowSeconds
T@"<PMLWordPieceVocabProtocol>",R,N,V_vocab
_buffer
T@"NSArray",R,N,V_categoryModels
_config
T@"NSArray",R,N,V_categoryStyleGroups
_extraIdOptions
T@"NSArray",R,N,V_modelScores
_idVectorLength
T@"NSArray",R,N,V_normalizedModelScores
_maxReplyLength
T@"NSArray",R,N,V_replyRecords
_prompt
T@"NSArray",R,N,V_replyTexts
_sentAt
T@"NSArray",R,N,V_semanticClassParent
_totalDisplayed
T@"NSArray",R,N,V_semanticClassReplyTexts
_triggerContext
T@"NSArray",R,N,V_semanticClassStyleGroups
addSelectedToResponse:language:
T@"NSArray",R,N,V_styleGroupParent
bundleForClass:
T@"NSArray",R,N,V_styleGroups
containsObject:
T@"NSDate",R,N,V_latestProcessedDate
countForObject:
T@"NSDictionary",R,N,V_supportedKeysAndContext
defaultLanguage
T@"NSNumber",R,N,V_ucb
dpRecorderRules
T@"NSSet",R,N,V_normalizedReplyTextsSet
featuresModelId
T@"NSString",&,N,V_espressoModelFile
filterBatchSize
T@"NSString",&,N,V_prompt
getModelVersion
T@"NSString",&,V_inputKey
initWithFormat:
T@"NSString",R,C
intentsSourceID
T@"NSString",R,C,N,V_featuresVersion
isDynamicLabel:
T@"NSString",R,C,N,V_language
isRobotResponse
T@"NSString",R,N,V_lang
lowercaseString
T@"NSString",R,N,V_promptJoiningString
maxPromptLength
T@"NSString",R,N,V_subModelKeyString
maximum
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
modelSemanticClassesFromModels:
T@"SGModelSampler",R,N,V_sampler
numberWithLong:
T@"SGQuickResponsesClassificationParameters",R,N,V_classificationParams
registerWrittenResponse:config:
T@"SGQuickResponsesReplies",R,N,V_replies
removeEmojiModifyingCharacters:
TB,R
replaceAllWhitespaceWithSpaces:
TB,R,N,V_dynamicLabel
replyClassCount
TB,R,N,V_enableFeature
resolveByPairs:
TB,R,N,V_hasNegativeClass
scaleInPlaceWithInversedFactor:
TB,R,N,V_isConfident
selectorForMethod:preprocessor:
TB,R,N,V_isCustomResponsesEnabled
semanticClasses
TB,R,N,V_isPersonalizationDisabled
setIsConfident:
TB,R,N,V_isRobotResponse
stringByAppendingPathComponent:
TB,R,N,V_relaxContext
tokenNGramRange
TB,R,N,V_useNonNegativeClassesOnly
trimWhitespace:
TQ,R,N,V_category
uppercaseString
TQ,R,N,V_compatibilityVersion
TQ,R,N,V_defaultResponsesToReturn
TQ,R,N,V_extraIdOptions
TQ,R,N,V_filterBatchSize
TQ,R,N,V_generalContextLeft
TQ,R,N,V_generalContextRight
TQ,R,N,V_idVectorLength
TQ,R,N,V_index
TQ,R,N,V_knowledgeStoreQueryLimit
TQ,R,N,V_leftContext
TQ,R,N,V_maxPromptLength
TQ,R,N,V_maxReplyLength
TQ,R,N,V_maxRowsInPerRecipientTable
TQ,R,N,V_maxStoredCustomResponses
TQ,R,N,V_maxStoredMessages
TQ,R,N,V_minimumDistinctRecipients
TQ,R,N,V_mode
TQ,R,N,V_modelId
TQ,R,N,V_replyTextId
TQ,R,N,V_responsesToShowAtTopForDiversity
TQ,R,N,V_rightContext
TQ,R,N,V_semanticClassId
TQ,R,N,V_semanticClassIndex
TQ,R,N,V_styleGroupId
TQ,R,N,V_triggerContext
TQ,R,N,V_vectorLength
TQ,R,N,V_vectorizerStrategy
Td,R,N,V_average
Td,R,N,V_classDiscount
Td,R,N,V_countExponent
Td,R,N,V_displayed
Td,R,N,V_distanceThreshold
Td,R,N,V_dynamicLabelSamplingRate
Td,R,N,V_matched
Td,R,N,V_maxReplyGapSecs
Td,R,N,V_maximum
Td,R,N,V_minDecayedCountForPrediction
Td,R,N,V_minDecayedCountForPruning
Td,R,N,V_minToShowThreshold
Td,R,N,V_minimumTimeIntervalSecs
Td,R,N,V_negativeClassMaximumToPredict
Td,R,N,V_negativeSamplingRate
Td,R,N,V_personalizationDisplayedPseudocount
Td,R,N,V_personalizationExplorationFactor
Td,R,N,V_personalizationSelectedPseudocountPerSemanticClass
Td,R,N,V_positiveSamplingRate
Td,R,N,V_responsesBonus
Td,R,N,V_scoreWeight
Td,R,N,V_selected
Td,R,N,V_timeDecayFactor
Td,R,N,V_totalDisplayed
Td,R,N,V_totalMatched
Td,R,N,V_totalOpportunities
Td,R,N,V_totalSelected
Td,R,N,V_totalUnmatched
Td,R,N,V_usageSpreadExponent
Td,R,N,V_value
Td,R,N,V_weightForCategoryAverage
Td,R,N,V_weightForCategoryMax
Td,R,N,V_weightForIndividualModel
Tf,R,N,V_capsWordsRatioMax
Ti,R,N,V_displayed
Ti,R,N,V_matched
Ti,R,N,V_selected
Tq,R,N,V_vectorNormalization
T{_NSRange=QQ},R,N,V_characterNGramRange
T{_NSRange=QQ},R,N,V_tokenNGramRange
UTF8String
_addCustomResponseToDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
_addModelAssetUpdateHandler
_assetWithName:andLoadBlock:
_attachmentCharacterString
_average
_baseStringForEmojiString:
_breadcrumbCharacterString
_cacheKeyForLanguage:mode:plistPath:vocabPath:
_cachedObject
_capsWordsRatioMax
_category
_categoryId
_categorySemanticClasses
_categoryStyleGroups
_characterNGramRange
_classDiscount
_classificationParams
_classifier
_compatibilityVersion
_conversations
_countExponent
_currentClassifier
_customResponsesParameters
_defaultResponsesToReturn
_destructor
_dictionaryForPlistPath:mode:
_displayed
_distanceThreshold
_done
_dynamicLabel
_dynamicLabelRate
_dynamicLabelSamplingRate
_dynamicLabelsEnabled
_enableFeature
_enumerateEmojiTokensInRange:block:
_espressoModelFile
_featuresModelId
_featuresVersion
_featurizer
_filesystemPathForFilename:isFault:
_filterBatchSize
_filterNonConfident
_generalContextLeft
_generalContextRight
_generalContextWords
_getMergedPromptForMessage:conversationTurns:
_handleCorruptionWithCheck:path:inMemory:
_hasNegativeClass
_incrementCustomResponseInDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
_index
_initWithoutConnection
_initializer
_inputKey
_insignificantSender
_invokeOnUpdateBlock
_isConfident
_isCoupleMultiSkinToneEmoji:
_isCustomResponse
_isCustomResponsesEnabled
_isPerCategory
_isPersonalizationDisabled
_isReplyTextRandomized
_isRobotResponse
_isSingleEmoji
_knowledgeStoreQueryLimit
_labelMapping
_labeler
_lang
_langResponse
_language
_latestProcessedDate
_latestPromptForHandle
_leftContext
_lexiconTokenForToken:inLexicon:
_matched
_maxPromptLength
_maxPromptWindowSeconds
_maxReplyGap
_maxReplyGapSecs
_maxRowsInPerRecipientTable
_maxStoredCustomResponses
_maxStoredMessages
_maximum
_messageEventCount
_messageEventIndex
_messageEvents
_methodNames
_methodSignatureNoValue
_methodSignatureWithValue
_methodValues
_minDecayedCountForPrediction
_minDecayedCountForPruning
_minToShowThreshold
_minimumDistinctRecipients
_minimumReplyOccurences
_minimumTimeIntervalSecs
_mode
_model
_modelClass
_modelCount
_modelFeaturizationFormatOptionIsDense
_modelHyperparameters
_modelId
_modelScores
_modelTypeName
_modelTypeNameForDictionary:
_negativeClassMaximumToPredict
_negativeRate
_negativeSamplingRate
_normalizedModelScores
_normalizedReplyTextsSet
_openAnotherHandleForPath:
_openFreshHandleForPath:inMemory:
_pas_componentsJoinedByString:
_pas_mappedArrayWithTransform:
_performMigrationsWithPath:inMemory:attemptIteration:
_personalization
_personalizationDisplayedPseudocount
_personalizationExplorationFactor
_personalizationSelectedPseudocountPerSemanticClass
_position
_positiveRate
_positiveSamplingRate
_predictionParams
_preprocessedLabelsWithLabels:andPreprocessor:
_preprocessingMethods
_preprocessor
_proactiveTrigger
_promptJoiningString
_ranking
_readerWriter
_recordsForResponses:language:
_relaxContext
_replies
_reply
_replyRecords
_replyTextId
_replyTextParent
_replyTextStringsCount
_replyTexts
_reset
_response
_responsesToShowAtTopForDiversity
_rightContext
_rng
_sampler
_scoreWeight
_selected
_selectedPseudocounts
_semanticClassId
_semanticClassIndex
_semanticClassParent
_semanticClassReplyTextStrings
_semanticClassReplyTexts
_semanticClassSelectedPseudocounts
_semanticClassStyleGroups
_semanticClasses
_separator
_sessionDescriptor
_sharedCache
_sharedInvalidKeysCache
_sharedTransformerCache
_store
_styleGroupId
_styleGroupParent
_styleGroupReplyTexts
_styleGroups
_subModelKeyString
_subModelKeyStringForDictionary:
_supportedKeysAndContext
_text
_timeDecayFactor
_tokenNGramRange
_totalMatched
_totalOpportunities
_totalSelected
_transformer
_transformerCacheKeyForLanguage:mode:plistPath:
_transformers
_triggerWords
_ucb
_usageSpreadExponent
_useGeneralContext
_useNonNegativeClassesOnly
_value
_vectorLength
_vectorNormalization
_vectorizerStrategy
_vocab
_vocabForVocabPath:mode:
_weightForCategoryAverage
_weightForCategoryMax
_weightForIndividualModel
addCustomResponsesToCommonResponses:language:locale:recipient:modelScores:maxResponses:customResponsesParams:
addDisplayedToResponses:language:
addIndex:
addMessage:
addObject:
addObjectsFromArray:
addScore:
addToEnd:withValue:
addToStart:withValue:
addWrittenToResponse:language:isMatch:
addingMessageExceedsBatchLimit:tableLimit:message:language:prompt:recipientHandle:sentAt:
allCapsRatio:
allDevices
allObjects
allValues
allowProfanity
andPredicateWithSubpredicates:
appIntentsStream
appendString:
applySelector:preprocesor:string:value:
areModelsAvailableInLanguage:
arrayAssertedForKey:
arrayByAddingObjectsFromArray:
arrayWithObject:
arrayWithObjects:count:
asset
augmentRecords:semanticClass:config:
autorelease
bindNamedParam:toDouble:
bindNamedParam:toInt64:
bindNamedParam:toNSData:
bindNamedParam:toNSString:
boolValue
bucketerWithEqualityTest:
bucketerWithLabeledBuckets:
bucketerWithMapping:
bufferPtrWithMinimumLength:
bundleWithIdentifier:
calculateUsageSpreads
capsWordsRatioMax
category
categoryId
categoryModels
categoryModelsFromModels:
categoryScoresWithModelScores:configReplies:
categorySemanticClasses
categoryStyleGroups
characterAtIndex:
characterIsMember:
characterNGramRange
characterSetFromString:
characterSetWithCharactersInString:
characterSetWithRange:
class
classDiscount
classResultsForScores:numResponses:responseCount:config:
classificationParams
classifier
classifierWithEspressoModelFile:
clear
closePermanently
combineDakutenAndHandakuten:
compare:
compatibilityVersion
componentsSeparatedByString:
config
configForLanguage:mode:plistPath:vocabPath:
configWithLanguage:mode:plistPath:vocabPath:
conformsToProtocol:
contactStore
conversationForSenderID:
conversationIdentifier
convertLabelsToMapping:
copy
copyWithSkinToneVariant:
copyWithSkinToneVariantSpecifier:
corruptionMarkerPathForPath:
cosineDistanceFrom:
count
countByEnumeratingWithState:objects:count:
countCustomResponsesAfterPruningWithMinimumCountThreshold:
countCustomResponsesAfterTruncatingTable:
countExponent
countReplyTextsForArray:
currentHandler
currentLocale
customResponsesForMessage:maximumResponses:context:language:locale:recipients:
customResponsesParameters
data
databaseHandle
date
dateWithTimeIntervalSince1970:
debugDescription
decayAllCustomResponsesWithDecayFactor:filteringBatchSize:
decimalDigitCharacterSet
decodeInt32ForKey:
decodeObjectOfClasses:forKey:
decomposeAndRecomposeStringWithCompatibilityMapping:
decomposeStringWithCompatibilityMapping:
dedupe:bucketer:resolver:
deduplicatedReplyTextsForReplyPositions:semanticClass:responseCount:config:
defaultManager
defaultResponsesToReturn
deltaForResponsesOnRow:completion:
description
descriptorForName:version:locale:
designateFilteringBatch:
destroyCachedObject
destroyInstanceInMemory
detectLanguageFromLanguageTags:withMinimumCount:withMinimumAgreement:
detectLanguageFromText:
detectLanguageFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
detectNames:algorithm:
dictAssertedForKey:
dictionary
dictionaryWithObjects:forKeys:count:
dictionaryWithPlistAssetPath:
dictionaryWithPlistFilename:
direction
displayed
distanceThreshold
dominantLanguageForString:
dominantLanguageTagFromLanguageTags:
dominantLanguageTagFromLanguageTags:withMinimumCount:withMinimumAgreement:
dominantLanguageTagFromText:
dominantLanguageTagFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
doubleValue
dynamicIndicesAndTopIsDynamic:config:
dynamicLabel
dynamicLabelForScore:config:
dynamicLabelSamplingRate
dynamicLabelsEnabled
embeddingForPrompt:language:embedder:
enableFeature
encodeInt32:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateTagsInRange:unit:scheme:options:usingBlock:
enumerateTokensInString:block:
enumerateTokensInString:withRange:block:
espressoModelFile
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
exceptionWithName:reason:userInfo:
exchangeObjectAtIndex:withObjectAtIndex:
executeQuery:error:
extraIdOptions
featuresOf:
featuresOf:inLanguage:andMode:
featuresOf:withFeaturizer:source:
featurizer
featurizerWithMethods:bucketSize:characterNGramRange:tokenNGramRange:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
fileExistsAtPath:isDirectory:
filesystemPathForAssetDataRelativePath:
filesystemPathForFilename:
filterBatchWithMinimumDistinctRecipients:minimumReplyOccurences:
filterNonConfident
finalizeForWordPieceCaseInsensitive:
finalizeForWordPieceCaseSensitive:
first
firstObject
floatValue
frailReadTransaction:
frailWriteTransaction:
generalContextLeft
generalContextRight
generalContextWords
getCharacters:range:
getDoubleForColumnAlias:
getInt64ForColumn:
getInt64ForColumnAlias:
getInt64ForColumnName:table:
getIntegerForColumnAlias:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
getNSDataForColumnAlias:
getNSStringForColumnAlias:
getObject
getPerRecipientCountForReply:language:recipient:
getProfanityLocale
getUsageSpreadForReply:language:
handle
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleFromConversationId:
hasNegativeClass
hash
idVectorLength
imputedDisplayedForRecords:config:
increaseLengthBy:
index
indexOfObjectWithOptions:passingTest:
indexedArraysFromNestedArray:
indexesForScores:numResponses:
init
initInDirectory:inMemory:withMigration:
initInDirectory:inMemory:withMigration:forTools:
initWithArray:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
initWithBlock:
initWithBlock:idleTimeout:
initWithCapacity:
initWithCharactersNoCopy:length:freeWhenDone:
initWithClassNameKey:
initWithCoder:
initWithConfig:featurizer:source:labeler:sampler:
initWithContentsOfFile:options:error:
initWithCountLimit:
initWithData:
initWithDictionary:
initWithDictionary:index:
initWithDictionary:language:
initWithDictionary:modelTypeName:
initWithDisplayed:selected:matched:
initWithEntity:type:mode:language:class:modelPath:plistPath:vocabPath:
initWithEspressoModelFile:
initWithFirst:second:
initWithGuardedData:
initWithGuardedData:serialQueue:
initWithInteger:
initWithKey:ascending:
initWithLabelMapping:
initWithLabelStrings:
initWithLangResponse:displayed:selected:matched:
initWithLanguage:
initWithLanguage:chunkPath:plistPath:espressoBinFilePath:vocabFilePath:
initWithLanguage:mode:dictionary:lazyVocab:
initWithLanguage:mode:dictionary:vocab:
initWithLanguage:mode:plistPath:vocabPath:
initWithLanguage:plistPath:espressoBinFilePath:vocabFilePath:storeDirectory:
initWithMethods:
initWithMethods:withLabelStrings:
initWithMigrationObjects:
initWithModel:ranking:personalization:rng:store:
initWithModelScores:normalizedModelScores:
initWithNumbers:
initWithObjects:
initWithPath:
initWithPlist:chunks:context:
initWithPosition:records:actualOptionsDisplayedCount:imputedOptionsDisplayedCount:imputedOptionsDisplayed:config:
initWithPositiveRate:dynamicLabelRate:negativeRate:rng:
initWithPreprocessor:labeler:
initWithProactiveTrigger:isConfident:
initWithReply:prompt:handle:sentAt:
initWithReplyRecords:totalOpportunities:totalDisplayed:totalSelected:totalMatched:totalUnmatched:
initWithSeed:
initWithSeparator:
initWithSessionDescriptor:modelClass:
initWithSource:vector:
initWithStartDate:maxBatchSize:maxReplyLength:maxReplyGap:
initWithStore:withRng:
initWithStringValue:
initWithTagSchemes:options:
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:isRobotResponse:isConfident:
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:isRobotResponse:isConfident:proactiveTrigger:
initWithText:senderID:timestamp:
initWithTransformer:appliedToInputKey:
initWithTransformers:
initWithUnsignedInteger:
initWithValue:index:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
inputKey
insertString:atIndex:
insignificantSender
insignificantSender:
instance
instanceInMemory
integerValue
intent
intentClass
interaction
invertedSet
isConfident
isCustomResponse
isCustomResponsesEnabled
isEqual:
isEqualToConversationTurn:
isEqualToNumber:
isEqualToPipelineTransformer:
isEqualToQuickResponsesEngagementDeltas:
isEqualToSGSelectiveTransformer:
isEqualToSGTokenJoiningTransformer:
isEqualToString:
isEqualToStringLabelingTransformer:
isEqualToStringPreprocessingTransformer:
isEqualToTextLabelTransformer:
isInMemory
isKindOfClass:
isMemberOfClass:
isPerCategory
isPersonalizationDisabled
isProfane:inLocales:
isReplyTextRandomized
isValidConfigForWordPieceWithLazyVocab:
isZeroBasedAndContiguous:
keyWithLanguage:andResponse:
knowledgeStore
knowledgeStoreQueryLimit
labelOf:
labelOf:inLanguage:
labelOf:withLabeler:
labels
lang
langResponse
language
languageForLocale:withLanguageDetectionForMessage:
languageForLocaleIdentifier:
languageTagsFromText:withMaxLength:withMaxTags:
lastObject
lastUsedVariantEmojiForEmoji:
latestProcessedDate
leftContext
length
lengthOfBytesUsingEncoding:
letterCharacterSet
localizedDescription
localizedLowercaseString
lock
logMatchingForRange:lowercaseRange:text:lowercaseText:
lowerCase:
mappings
maxDistinctReplies
maxPromptWindowSeconds
maxReplyLength
maxRowsInPerRecipientTable
maxStoredCustomResponses
maxStoredMessages
mergeAnyConsecutiveCharacters:
mergeAnyConsecutiveNonalphabeticCharacters:
mergeAnyConsecutiveNonalphabeticCharactersWithExceptions:withValue:
mergeNumbersSeparatedByASCIISpace:
mergeTwoOrMoreConsecutiveCharacters:
messagesForEval:
methodForSelector:
metricsConfig
migrateDatabases
migrations
minDecayedCountForPrediction
minDecayedCountForPruning
minToShowThreshold
minimumDistinctRecipients
minimumReplyOccurences
minimumTimeIntervalSecs
mode
modelClass
modelCount
modelFeaturizationFormatOptionIsDense
modelForLanguage:mode:chunkPath:plistPath:vocabPath:
modelForLanguage:mode:chunkPath:plistPath:vocabPath:modelTypeAndSubModelKey:
modelHyperparameters
modelScores
modelScoresWithUnweightedScores:configReplies:
modelTypeAndSubModelKeyForLanguage:plistPath:vocabPath:warmupBlock:
modelTypeName
models
mutableBytes
mutableCopy
nameDetectorRules
nearestCustomResponsesAndScoresToPromptEmbedding:recipient:limit:withinRadius:responseCountExponent:minimumDecayedCount:compatibilityVersion:language:locale:allowProfanity:minimumTimeInterval:usageSpreadExponent:
nearestCustomResponsesToPromptEmbedding:recipient:limit:withinRadius:responseCountExponent:minimumDecayedCount:compatibilityVersion:language:locale:allowProfanity:minimumTimeInterval:usageSpreadExponent:
negativeClassMaximumToPredict
negativeSamplingRate
nestedArrayFromFlatArray:nestedIndexes:
nestedArrayFromModels:
newTransformerInstanceForConfig:seed:useSeed:
newTransformerInstanceForLanguage:mode:plistPath:vocabPath:
newTransformerInstanceForLanguage:withDictionary:withVocab:withSeed:forMode:
next
nextFloat
nonBaseCharacterSet
normalizeLabelScores:
normalizeReplyText:
normalizeReplyTextInternal:
normalizeStringForDeduping:
normalizedModelScores
normalizedReplyTextsSet
normalizedReplyTextsSetForArray:
null
numResponsesForScores:responseCount:config:
numberAssertedForKey:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLong:
objectAssertedForKey:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
outputDimensionWithFile:
parentArraysFromNestedArray:models:
pathExtension
pathForResource:ofType:
peekAtCachedObject
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
personalizationDisplayedPseudocount
personalizationExplorationFactor
personalizationSelectedPseudocountPerSemanticClass
position
positiveSamplingRate
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
predicateForEventsWithSourceID:bundleID:
predicateForObjectsWithMetadataKey:inValues:
predicateWithFormat:
predict:
predict:withFile:
predictionParams
preferredLanguages
prepAndRunQuery:onPrep:onRow:onError:
preprocessingMethods
presentInContext:context:startIdx:endIdx:
proactiveTrigger
proactiveTriggerForDynamicLabel:context:language:
proactiveTriggerForDynamicLabel:context:language:useContactNames:
probsForClasses:withCount:
profanityInTokens:forLocaleIdentifier:
prompt
promptJoiningString
propertyListWithData:options:format:error:
prunePerRecipientTableWithMaxRows:
punctuationCharacterSet
queriesToSkipFromEmptyToVersion:
quickResponses
quickResponsesForMessage:context:time:maxResponses:locale:recipientHandles:chunkPath:plistPath:espressoBinFilePath:vocabFilePath:includeCustomResponses:includeResponsesToRobots:
quickResponsesForMessage:conversationTurns:maxResponses:localeIdentifier:recipientHandles:chunkPath:plistPath:espressoBinFilePath:vocabFilePath:useContactNames:includeCustomResponses:includeResponsesToRobots:
quickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:useContactNames:includeCustomResponses:includeResponsesToRobots:
quickResponsesFromReplyPositions:isConfident:config:
quickResponsesPrediction
quickResponsesPredictionVocab
quickResponsesScoresWithModelScores:normalizedModelScores:
quickResponsesVocab
randomizedReplyPositionsForSemanticClass:responseCount:config:
range
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:range:
rangeOfString:
rangeOfString:options:range:
readEmojiDefaults
readObjectWithPlist:chunks:context:
recordKnownCustomResponsesInBatchWithEmbedder:compatibilityVersion:
recordMessagesInBatchAsCustomResponsesWithEmbedder:compatibilityVersion:
recordsForResponses:language:
recordsForResponsesInternal:language:
registerDisplayedQuickResponses:plistPath:vocabPath:
registerDisplayedResponses:config:
registerOnUpdateBlock:
registerResponse:position:isCanned:isUsingQuickResponses:locale:plistPath:vocabPath:
registerSelectedResponse:config:
registerUpdateHandler:
relaxContext
removeAllObjects
removeBreadcrumbsFromMessage:
removeCharacters:withExceptions:fromString:
removeCharacters:withValue:
removeDuplicateWhitespace:
removeEmojiModifyingCharactersWithExceptions:withValue:
removeEmojis:
removeEmojisWithExceptions:withValue:
removeItemAtPath:error:
removeLastObject
removeNonBaseCharacters:
removeNonBasicMultilingualPlane:
removeNonEmojiSymbols:
removeNonEmojiSymbolsWithExceptions:withValue:
removeObjectAtIndex:
removeObjectsAtIndexes:
removePunctuation:
removePunctuationWithExceptions:withValue:
removeSpacingModifierLetters:
removeSymbols:
removeSymbolsWithExceptions:withValue:
replace:withBuffer:toIndex:
replaceCharactersInRange:withString:
replaceCharactersWithSpaces:withValue:
replaceContactNamesWithString:withValue:
replaceLinksWithString:withValue:
replaceNumbersWithString:withValue:
repliesToRobot:language:recipients:
repliesToRobot:language:recipients:config:
repliesWithArray:
reply
replyCountForIndex:
replyModelsForArray:
replyPositionsForSemanticClass:responseCount:config:
replyPositionsFromSemanticClasses:config:
replyRecords
replyTextCount
replyTextForIndex:position:
replyTextForIndexAndPosition:
replyTextId
replyTexts
replyTextsForIndex:
resetCustomResponsesAndResetMessages:
resetCustomResponsesForEval:
resetDbIfNeededCompareWithCompatibilityVersion:
resolveByScoreBreakTiesArbitrarily:
respondsToSelector:
response
responseToRobotParams
responsesBonus
responsesToFillForResponseCount:config:
responsesToShowAtTopForDiversity
result
resultsForModelScores:responseCount:config:
retain
retainCount
reverseObjectEnumerator
rightContext
rules
runWithLockAcquired:
scaleInPlaceWithFactor:
scoreWeight
scoresAndIsConfidentForMessage:language:locale:
second
selected
selectedPseudocounts
self
semanticClassIndex
semanticClassParent
semanticClassReplyTextStrings
semanticClassReplyTexts
semanticClassSelectedPseudocounts
semanticClassStyleGroups
semanticClassesForArray:
semanticClassesForCategory:responseCount:configReplies:
semanticClassesForResults:scores:numResponses:config:
senderID
sentAt
separateCharacter:withValue:
separateFrenchElisions:
separator
sessionDescriptor
sessionDescriptorForLanguage:
setCachedEspressoClassifierWithFile:
setClassifier:
setDeviceIDs:
setEspressoModelFile:
setHandle:
setInputKey:
setModelClass:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setProfanityLocale:andModelVersion:
setPrompt:
setReply:
setSentAt:
setSeparator:
setSessionDescriptor:
setString:
setTransformers:
sgConversationTurnsForStrings:
sharedInstance
shouldSampleForLabel:inLanguage:isDynamicLabel:
shouldSampleForLabel:isDynamicLabel:
shuffleMutableArray:inApproxEqualEpsilon:withValueBlock:withRng:
shuffleMutableArray:inRange:withRng:
shuffleMutableArray:withRng:
shuffledSamplingWithoutReplacementForK:fromN:withRng:
signatureRules
signatureWithObjCTypes:
signpostedQuickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:useContactNames:includeCustomResponses:includeResponsesToRobots:
skinTone
sortDescriptorWithKey:ascending:
sortUsingComparator:
sortUsingDescriptors:
sortUsingSelector:
sortedArrayWithOptions:usingComparator:
sortedReplyOptionsForRecords:config:
sortedReplyPositionsForSemanticClass:config:
sortedWithUnweightedScores:config:
source
splitString:withCharacterSet:
sqliteDatabaseInMemoryWithError:errorHandler:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
startDate
strategyForString:modelTypeName:
string
stringAssertedForKey:
stringByAppendingString:
stringByDeletingPathExtension
stringByFoldingWithOptions:locale:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithCapacity:
stringWithUTF8String:
stringsForQuickResponses:
stripCombiningMarks:
stripNonBaseCharacters:
styleGroupId
styleGroupParent
styleGroupReplyTexts
styleGroups
subModelKeyString
subarrayWithRange:
subclassesFromClasses:subclassArray:
substringFromIndex:
substringToIndex:
substringWithRange:
suggestionsDirectory
sumInPlaceWithVector:
superclass
supportedKeysAndContext
supportsSecureCoding
supportsSkinToneVariants
symbolCharacterSet
tagAtIndex:unit:scheme:tokenRange:
text
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timestamp
toPlistWithChunks:
tokenRangeForText:maxTruncatedLength:tagger:taggerOptions:prevTextTokenMaxRange:originalLengthShortfall:lowercaseText:lowercaseRange:
tokenize:
totalDisplayed
totalDisplayedCountForRecords:
totalMatched
totalOpportunities
totalSelected
totalUnmatched
transform:
transform:stopAfterTransformerWithIndex:
transformFullwidthToHalfwidth:
transformFullwidthToHalfwidthASCII:
transformHalfwidthToFullwidthCJK:
transformer
transformerInstanceForLanguage:mode:
transformerInstanceForLanguage:mode:plistPath:vocabPath:
transformers
traversalWithNestedArray:depthCallback:itemCallback:
triggerContext
triggerWords
truncateDatabaseAtPath:
tupleWithFirst:second:
ucbCombinedForSelected:displayed:actualOptionsDisplayed:matched:imputedDisplayed:imputedOptionsDisplayed:explorationFactor:
ucbCombinedWithMeanA:meanB:varianceA:varianceB:explorationFactor:
ucbTunedVarianceForMean:displayed:totalDisplayed:
ucbWithMean:varianceOfMean:explorationFactor:
unifiedContactsMatchingPredicate:keysToFetch:error:
unlock
unsignedIntValue
unsignedIntegerValue
uppercaseLetterCharacterSet
usageSpreadExponent
useGeneralContext
useNonNegativeClassesOnly
userInfo
validClassesForClassCount:responseCount:config:
value
valueForKeyPath:
vector
vectorLength
vectorNormalization
vectorWithConstantColumn
vectorizerStrategy
vocab
vocabWithTrieAssetPath:
vocabWithTrieFilename:
warmup
weightForCategoryAverage
weightForCategoryMax
weightForIndividualModel
whitespaceAndNewlineCharacterSet
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
withLabelStrings:
withMethods:
withMethods:withLabelStrings:
withSeparator:
withTransformer:appliedToInputKey:
withTransformers:
writeToPlistWithObject:andChunks:
zone
@24@0:8@16
Q32@0:8@16@24
@32@0:8@16@24
@16@0:8
{_NSRange=QQ}16@0:8
Q16@0:8
q16@0:8
v16@0:8
@"NSString"
{_NSRange="location"Q"length"Q}
d16@0:8
B16@0:8
@32@0:8@16Q24
@"NSArray"
@32@0:8Q16Q24
@24@0:8Q16
Q24@0:8Q16
Q24@0:8@16
@"_PASLock"
B24@0:8@16
@"NSSet"
@48@0:8@16Q24@32@40
@48@0:8@16@24@32@?40
@"SGModelHyperparameters"
@"SGQuickResponsesReplies"
@"SGQuickResponsesClassificationParameters"
@"SGQuickResponsesPredictionParameters"
@"SGCustomResponsesParameters"
@"PMLSessionDescriptor"
@"<PMLWordPieceVocabProtocol>"
v24@0:8@?16
@32@0:8@16@?24
v40@0:8@16@?24@?32
v24@0:8@16
@"_PASLazyPurgeableResult"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
d40@0:8d16d24d32
d56@0:8d16d24d32d40d48
d72@0:8d16d24d32d40d48d56d64
d24@0:8@16
@64@0:8Q16@24d32d40@48@56
q24@0:8@16
@"NSNumber"
@48@0:8@16Q24Q32@40
@40@0:8@16Q24@32
@40@0:8Q16Q24@32
@32@0:8Q16@24
v32@0:8@16@24
@"SGQuickResponsesStore"
@"_PASRng"
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
:32@0:8@16@24
v48@0:8:16@24@32@40
@"NSMethodSignature"
^S24@0:8Q16
v40@0:8@16^S24Q32
v40@0:8@16@24@32
@"NSMutableData"
@84@0:8@16@24Q32Q40Q48Q56Q64B72B76B80
@28@0:8@16B24
@92@0:8@16@24Q32Q40Q48Q56Q64B72B76B80@84
v20@0:8B16
@"NSDictionary"
@104@0:8@16@24@32Q40@48@56@64@72@80@88B96B100
@100@0:8@16@24Q32@40@48@56@64@72@80B88B92B96
@44@0:8@16@24@32B40
v64@0:8@16@24B32B36@40@48@56
@56@0:8@16@24@32@40@48
@92@0:8@16Q24@32@40@48@56@64@72B80B84B88
@36@0:8@16B24@28
@72@0:8@16@24@32@40@48Q56@64
@64@0:8@16Q24@32@40@48@56
@"SGQuickResponsesModel"
@"SGQuickResponsesRanking"
@"SGQuickResponsesPersonalization"
@40@0:8@16@24Q32
B36@0:8@16@24B32
@56@0:8@16Q24@32@40@48
B28@0:8@16B24
@80@0:8@16@24Q32@40#48@56@64@72
@"<PMLMultiLabelClassifierProtocol>"
@"SGQuickResponsesTransformerInstance"
@48@0:8d16d24d32@40
@"SGQuickResponsesConfig"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@"SGModelSampler"
B32@0:8@16@24
@32@0:8@16B24B28
@36@0:8@16B24B28B32
B24@0:8@?16
v36@0:8@16@24B32
v80@0:8@16@24@32@40d48@56q64@?72
B72@0:8Q16Q24@32@40@48@56@64
@40@0:8@16@24@?32
v32@0:8@?16Q24
v32@0:8Q16Q24
v32@0:8@16q24
B24@0:8Q16
v24@0:8Q16
@92@0:8@16@24Q32f40f44f48Q52@60@68B76d80f88
v32@0:8d16Q24
Q24@0:8d16
B32@0:8@?16@?24
d40@0:8@16@24@32
d32@0:8@16@24
@64@0:8@16d24d32d40d48d56
@40@0:8d16d24d32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16i24i28i32
i16@0:8
@32@0:8@?16@?24
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
I32@0:8@16^{_LXLexicon=}24
@40@0:8@16@?24@?32
@?24@0:8@?16
f16@0:8
@56@0:8@16@24Q32d40@48
@"_PASLRUCache"
@"SGStringPreprocessingTransformer"
@"SGStringLabelingTransformer"
@56@0:8@16@24@32Q40Q48
@104@0:8@16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64Q72Q80q88@96
@36@0:8@16Q24B32
@56@0:8@16Q24Q32Q40d48
@40@0:8@16Q24d32
@40@0:8@16Q24Q32
{_NSRange=QQ}88@0:8@16Q24@32Q40Q48Q56@64{_NSRange=QQ}72
v64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
f24@0:8@16
B48@0:8@16@24q32q40
@48@0:8@16@24@32@40
@"NSDate"
@48@0:8@16Q24Q32d40
@"NSMutableDictionary"
@32@0:8@16#24
v24@0:8#16
@"PMLSparseVector"
v48@0:8@16{_NSRange=QQ}24@40
v48@0:8@16d24@?32@40
@48@0:8@16@24Q32@40
Q40@0:8Q16Q24@32
Q32@0:8Q16@24
@32@0:8d16Q24
v24@0:8d16
@24@0:8^I16
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
B32@0:8B16@20B28
B32@0:8@16B24i28
@"_PASSqliteDatabase"
?333333
!$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$!$$$$
$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$
@(#)PROGRAM:CoreSuggestionsML  PROJECT:Suggestions-1193.26
SGQuickResponsesConfig: Object for key %@ not found in dictionary.
SGQuickResponsesConfig: Object for key %@ is not a number.
SGQuickResponsesConfig: Object for key %@ is not a string.
SGQuickResponsesConfig: Object for key %@ is not an array.
SGQuickResponsesConfig: Object for key %@ is not a dictionary.
Unknown model type name %@ when initializing SGQuickResponsesConfig from plist.
Unknown strategy string %@ when initializing SGQuickResponsesConfig from plist.
dictionary
[dictionary stringAssertedForKey:FEATURES_MODEL_ID]
[dictionary stringAssertedForKey:FEATURES_VERSION]
[dictionary numberAssertedForKey:VECTOR_LENGTH]
[dictionary numberAssertedForKey:CHARACTER_N_GRAM_MINIMUM_N]
[dictionary numberAssertedForKey:CHARACTER_N_GRAM_RANGE_N_LENGTH]
[dictionary numberAssertedForKey:TOKEN_N_GRAM_MINIMUM_N]
[dictionary numberAssertedForKey:TOKEN_N_GRAM_RANGE_N_LENGTH]
_featuresModelId.length > 0
_featuresVersion.length > 0
NSMaxRange(_characterNGramRange) <= MAXIMUM_NGRAM_LENGTH
NSMaxRange(_tokenNGramRange) <= MAXIMUM_NGRAM_LENGTH
_vectorizerStrategy < PMLHashingVectorizerStrategyLimit
[dictionary numberAssertedForKey:POSITIVE_SAMPLING_RATE]
[dictionary numberAssertedForKey:DYNAMIC_LABEL_SAMPLING_RATE]
[dictionary numberAssertedForKey:NEGATIVE_SAMPLING_RATE]
0 <= _positiveSamplingRate && _positiveSamplingRate <= 1
0 <= _dynamicLabelSamplingRate && _dynamicLabelSamplingRate <= 1
0 <= _negativeSamplingRate && _negativeSamplingRate <= 1
SGQuickResponsesConfig: negativeSamplingRate=%f and positiveSamplingRate=%f do not satisfy strict DP constraint
[[dictionary dictAssertedForKey: MAX_PROMPT_LENGTH] numberAssertedForKey:language]
[[dictionary dictAssertedForKey: MAX_REPLY_LENGTH] numberAssertedForKey:language]
[dictionary numberAssertedForKey:MAX_PROMPT_WINDOW_SECONDS]
0 <= _maxPromptWindowSeconds
[dictionary stringAssertedForKey:PROMPT_JOINING_STRING]
[dictionary numberAssertedForKey:PERSONALIZATION_IS_DISABLED]
[dictionary numberAssertedForKey:REPLY_TEXT_IS_RANDOMIZED]
[dictionary numberAssertedForKey:RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY]
[dictionary numberAssertedForKey:RANKING_WEIGHT_CATEGORY_AVERAGE]
[dictionary numberAssertedForKey:RANKING_WEIGHT_CATEGORY_MAX]
[dictionary numberAssertedForKey:RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT]
[dictionary numberAssertedForKey:RESPONSE_COUNT_FACTOR_RESPONSE_BONUS]
[dictionary numberAssertedForKey:MINIMUM_TO_SHOW_THRESHOLD]
[dictionary numberAssertedForKey:DEFAULT_RESPONSES_TO_RETURN]
[dictionary numberAssertedForKey:RESPONSES_AT_TOP_WITH_MORE_DIVERSITY]
[dictionary numberAssertedForKey:PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS]
[dictionary numberAssertedForKey:PERSONALIZATION_DISPLAYED_PSEUDOCOUNT]
[dictionary numberAssertedForKey:PERSONALIZATION_EXPLORATION_FACTOR]
_weightForCategoryAverage + _weightForCategoryMax < 1 + EPSILON_OF_DOUBLE_COMPARISON
fabs(1 - _weightForCategoryAverage - _weightForCategoryMax - _weightForIndividualModel) < EPSILON_OF_DOUBLE_COMPARISON
!_isPerCategory || fabs(1 - _weightForCategoryAverage - _weightForCategoryMax) < EPSILON_OF_DOUBLE_COMPARISON
0 <= _weightForCategoryAverage && _weightForCategoryAverage <= 1
0 <= _weightForCategoryMax && _weightForCategoryMax <= 1
0 <= _weightForIndividualModel && _weightForIndividualModel <= 1
0 <= _classDiscount && _classDiscount <= 1
0 <= _responsesBonus && _responsesBonus <= 1
_personalizationSelectedPseudocountPerSemanticClass <= _personalizationDisplayedPseudocount
[dictionary numberAssertedForKey:MAX_PROMPT_LENGTH]
_promptJoiningString.length
[_modelTypeName isEqualToString:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER] || [_modelTypeName isEqualToString:SG_QUICK_RESPONSES_BINARY_LOGISTIC_MULTI_LABEL]
!([_modelTypeName isEqualToString:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER] && !_subModelKeyString.length)
[semanticClass isKindOfClass:NSArray.class]
[replyGroup isKindOfClass:NSArray.class]
[string isKindOfClass:NSString.class]
[dictionary arrayAssertedForKey:RESPONSE_CLASSES]
[SGQuickResponsesReplyModel semanticClassesForArray:array]
[dictionary arrayAssertedForKey:REPLY_TEXT_SELECTED_PSEUDOCOUNTS]
[dictionary numberAssertedForKey:MODEL_SCORE_WEIGHT]
[dictionary numberAssertedForKey:MODEL_CATEGORY]
_scoreWeight >= 0
Failure to read SGQuickResponsesReplies from config.
[array isKindOfClass:NSArray.class]
[dictionary isKindOfClass:NSDictionary.class]
replyModel != nil
[self.class isZeroBasedAndContiguous:replyModels]
array
[self.class replyModelsForArray:array]
[self.class nestedArrayFromModels:_models]
[self.class indexedArraysFromNestedArray:nestedArray]
indexedArrays.count >= 4
[self.class flattenedArraysFromNestedArray:_semanticClasses]
[self.class parentArraysFromNestedArray:nestedArray models:_models]
parentArrays.count >= 4
_selectedPseudocounts.count == _replyTexts.count
[dictionary numberAssertedForKey:IS_CUSTOM_RESPONSES_ENABLED]
[dictionary numberAssertedForKey:FILTER_BATCH_SIZE]
[dictionary numberAssertedForKey:MINIMUM_TIME_INTERVAL_SECS]
[dictionary numberAssertedForKey:MINIMUM_DISTINCT_RECIPIENTS]
[dictionary numberAssertedForKey:MINIMUM_REPLY_OCCURENCES]
[dictionary numberAssertedForKey:TIME_DECAY_FACTOR]
[dictionary numberAssertedForKey:COUNT_EXPONENT]
[dictionary numberAssertedForKey:DISTANCE_THRESHOLD]
[dictionary numberAssertedForKey:MIN_DECAYED_COUNT_FOR_PREDICTION]
[dictionary numberAssertedForKey:MIN_DECAYED_COUNT_FOR_PRUNING]
[dictionary numberAssertedForKey:MAX_STORED_MESSAGES]
[dictionary numberAssertedForKey:MAX_STORED_CUSTOM_RESPONSES]
[dictionary numberAssertedForKey:MAX_ROWS_IN_PER_RECIPIENT_TABLE]
[dictionary numberAssertedForKey:CUSTOM_RESPONSES_COMPATIBILITY_VERSION]
[dictionary numberAssertedForKey:ALLOW_PROFANITY]
[dictionary numberAssertedForKey:KNOWLEDGE_STORE_QUERY_LIMIT]
[dictionary numberAssertedForKey:MAX_REPLY_LENGTH]
[dictionary numberAssertedForKey:MAX_REPLY_GAP_SECS]
[dictionary numberAssertedForKey:USAGE_SPREAD_EXPONENT]
0 <= _minimumTimeIntervalSecs
0 <= _timeDecayFactor && _timeDecayFactor <= 1
0 <= _countExponent
SGQuickResponses: Invalid plist path %@
dict
[dict isKindOfClass:NSDictionary.class]
SGQuickResponses: no available configuration found to support prediction for language %@
[[SGQuickResponsesPredictionParameters alloc] initWithDictionary:dict[PREDICTION_PARAMETERS]]
[[SGModelHyperparameters alloc] initWithDictionary:dict[PREDICTION_MODEL_HYPERPARAMETERS][language] modelTypeName:_predictionParams.modelTypeName]
[[dict objectAssertedForKey:PREDICTION_PREPROCESSING_METHODS] arrayAssertedForKey:language]
[SGQuickResponsesReplies repliesWithArray:dict[PREDICTION_REPLIES][language]]
SGQuickResponses: no available configuration found to support training for language %@
[[SGQuickResponsesClassificationParameters alloc] initWithDictionary:dict[CLASSIFICATION_PARAMETERS] language:language]
[[SGModelHyperparameters alloc] initWithDictionary:dict[CLASSIFICATION_MODEL_HYPERPARAMETERS][language] modelTypeName:SG_QUICK_RESPONSES_MULTICLASS_ESPRESSO_CLASSIFIER]
[[dict objectAssertedForKey:CLASSIFICATION_PREPROCESSING_METHODS] arrayAssertedForKey:language]
[[dict objectAssertedForKey:CLASSIFICATION_LABELS] arrayAssertedForKey:language]
SGQuickResponsesConfig: Training class count exceeds maximum
SGQuickResponses: no available configuration found to support custom responses for language %@
[[SGCustomResponsesParameters alloc] initWithDictionary:dict[CUSTOM_RESPONSES_PARAMETERS]]
[self isValidConfigForWordPieceWithLazyVocab:lazyVocab]
SGQuickResponsesConfig: Strategy PMLHashingVectorizerStrategyWordPiece used but no vocab present
SGQuickResponsesConfig: final preprocessing step %@ is not %@ or %@
Error finding model plist path for %@
Error finding model trie path for %@
No reply text string exists in config for displayed response: %@
No reply text string exists in config for selected response: %@
SGStringPreprocessor error: NSSelectorFromString returned NULL
SGStringPreprocessor received an invalid method %@
[SGStringPreprocessingTransformer replaceContactNamesWithString:withValue:] - Incorrect format for value: %@
A (lang: %@) canned response includes emojis with skin-tone modifiers!
QuickResponses: Could not initialize SGQuickResponsesStore in directory - %@
QuickResponses: No message was passed in.
QuickResponses: Message length 0 passed in, ignoring.
QuickResponses: No locale was passed in.
QuickResponses: No language was detected from the message.
Could not find inference model (an error occurred, or possibly prediction for language %@ not supported)
Required model file(s) not specified.
 enableTelemetry=YES 
QuickResponsesForMessage
Returning nil because message length exceeds maximum length %ld)
Cannot predict for locale %@ using model with language %@
QuickResponsesForMessageFeaturization
Could not featurize (prediction for language %@ not supported?)
QuickResponsesForMessagePrediction
Could not predict score (prediction for language %@ not supported?)
QuickResponsesForMessageRobo
Error obtaining scores for message.
QuickResponses - trigger: %@, score: %f
QuickResponsesForMessageTriggers
QuickResponsesForMessageCustom
Start
Completed
AddCustomResponses
SGQuickResponses: Could not find trigger for dynamic label %@
SGQuickResponses: No name found for thirdparty dynamic label: %@
SGQuickResponses: dynamic label (score index %tu) should have one semantic class (count - %tu)!
SGQuickResponses: dynamic label (score index %tu) should have one reply text per semantic class (count - %tu)!
SGQuickResponses: attempted to register displayed responses with 0 responses.
SGQuickResponses: attempted to register displayed responses but language is nil.
SGQuickResponses: attempted to register displayed responses but config is nil (language %@ not supported?).
SGQuickResponses: attempted to register displayed responses but personalization is disabled.
SGQuickResponses: attempted to register a canned response but not using QuickResponses.
SGQuickResponses: attempted to register a response but language is nil.
SGQuickResponses: attempted to register a response but config at %@ is nil (language %@ not supported?).
SGQuickResponses: attempted to register a canned response at position %@ that is not likely to have come from QuickResponses.
config not found for language %@ and plist path %@
Unknown model name: %s
Failed to locate assets resource %s
Failed to load model file resource %s, with type:%@, modelEntity:%@, mode:%lu, language:%@
No transformer instance for model %@ in language %@ and mode %@ at path %@
Quick Responses: failed to initialize database while warming up store
SGQuickResponsesStore read error: %@
SGQuickResponsesStore write error: %@
SGQuickResponsesStore: Unexpected null value for custom_responses.language
SGQuickResponsesStore: Unexpected null value for custom_responses.recipient
SGQuickreponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.reply
SGQuickResponsesStore: Unexpected null value for custom_responses.prompt_embedding
SGQuickResponsesStore: mis-matched dimensions (a possible plist error) between embedding and densePromptEmbedding in store: %tu v,s. %tu
ComputeCustomResponseDistance
SingleCustomResponseRow
SelectCustomResponseRows
SortCustomResponses
DedupeCustomResponses
RemoveProfaneCustomResponses
Row returned in deltaForResponsesOnRow was null, continuing to iterate as best effort
SGQuickResponsesEngagementDeltas displayed value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas selected value %lld is out of range for int32_t, casting to boundary value
SGQuickResponsesEngagementDeltas matched value %lld is out of range for int32_t, casting to boundary value
Language in deltaForResponsesOnRow was null, continuing to iterate as best effort
SGLexicon: Unable to load lexicon, %@
SGLexicon: non utf-8 token passed
Responses to Robots config file not found
Added message id already in conversation. conversation id = %@
Most recent message in conversation turns does not match specified current message.
SGLanguageDetection: lowercase len %d, range loc %d / len %d found no range in original len %d
SGLanguageDetection: mismatched lowercase rangeEnd %d, stringEnd %d / original rangeEnd %d, stringEnd %d
SGLanguageDetection: lowercase tokenRange is loc %d, len %d but original range is loc %d, len %d
SGLanguageDetection: strange! lowercase is loc %d, len %d but original is loc %d, len %d
SGLanguageDetection: possible problem! lowercase '%@' strlen %d and original '%@' strlen %d
SGLanguageDetection: original len %d is longer than the lowercased len %d in locale %@, detected %@
Error loading model plist %@: %@
Error deserializing model plist %@: %@
SGQuickResponsesToRobots: Either 0 or more than 1 recipient found.
SGQuickResponsesToRobots: CNPhoneNumber initWithStringValue returned nil
Unsupported handleType: %@
SGQuickResponsesToRobots: Error fetching contact with %@: %@
SGQuickResponsesToRobots: Could not load assets for making replies to robots prediction
SGQuickResponsesToRobots: Replies to robots feature disabled
SGQuickResponsesToRobots: Not running replies to robots if recipients is nil
SGQuickResponsesToRobots: Not running replies to robots for language %@
SGQuickResponsesToRobots: Can't reply to empty message
SGQuickResponsesToRobots: Not running replies to robots for significant sender
SGQuickResponsesToRobots: Capital words threshold condition not met
Failed to retrieve message events from CoreDuet. Error: %@
SGQuickResponsesDatabase: Unable to create directory for database
SGQuickResponsesDatabase: Migrations failed
SGQuickResponsesDatabase failed to remove corruption marker at %@: %@
SGQuickResponsesDatabase not migrating, too many attempts (%d)
SGQuickResponsesDatabase migrating db
SGQuickResponsesDatabase could not perform migrations (device locked?), try again later
SGQuickResponsesDatabase migrations failed, cannot use database
SGQuickResponsesDatabase has a future schema version, cannot use database
SGQuickResponsesDatabase got unexpected migration result of 'step completed', will not use database
SGQuickResponsesDatabase: Unable to initialize database.
SGQuickResponsesDatabase: Unable to open existing database: %@
quickResponsesBinaryLogisticMultiLabel
quickResponsesEspressoClassifierMultiLabel
DecrementingFrequency
Frequency
SequentialTokenNgram
SequentialCharNgram
LegacyBagOfId
BagOfId
WordPiece
SGQuickResponsesConfig.m
Invalid parameter not satisfying: %@
FEATURES_MODEL_ID
FEATURES_VERSION
VECTOR_LENGTH
CHARACTER_N_GRAM_MINIMUM_N
CHARACTER_N_GRAM_RANGE_N_LENGTH
TOKEN_N_GRAM_MINIMUM_N
TOKEN_N_GRAM_RANGE_N_LENGTH
VECTORIZER_STRATEGY
ID_VECTOR_LENGTH
ID_VECTOR_SHOULD_PAD_TO_LENGTH
ID_VECTOR_SHOULD_APPEND_SENTEND
ID_VECTOR_SHOULD_APPEND_SENTSTART
VECTOR_NORMALIZATION
VL=%lu&CL=%lu&CH=%lu&TL=%lu&TH=%lu&SN=%lu&IDL=%lu&IDS=%lu&VN=%ld&FV=%@
POSITIVE_SAMPLING_RATE
DYNAMIC_LABEL_SAMPLING_RATE
NEGATIVE_SAMPLING_RATE
MAX_PROMPT_LENGTH
MAX_REPLY_LENGTH
MAX_PROMPT_WINDOW_SECONDS
PROMPT_JOINING_STRING
MODEL_TYPE_NAME
SUB_MODEL_KEY_STRING
PERSONALIZATION_IS_DISABLED
REPLY_TEXT_IS_RANDOMIZED
RANKING_AND_RESPONSE_COUNT_IS_PER_CATEGORY
RANKING_WEIGHT_CATEGORY_AVERAGE
RANKING_WEIGHT_CATEGORY_MAX
RESPONSE_COUNT_FACTOR_CLASS_DISCOUNT
RESPONSE_COUNT_FACTOR_RESPONSE_BONUS
MINIMUM_TO_SHOW_THRESHOLD
DEFAULT_RESPONSES_TO_RETURN
RESPONSES_AT_TOP_WITH_MORE_DIVERSITY
PERSONALIZATION_SELECTED_PSEUDOCOUNT_PER_SEMANTIC_CLASS
PERSONALIZATION_DISPLAYED_PSEUDOCOUNT
PERSONALIZATION_EXPLORATION_FACTOR
DYNAMIC_LABELS_ENABLED
FILTER_NONCONFIDENT
HAS_NEGATIVE_CLASS
NEGATIVE_CLASS_MAXIMUM_TO_PREDICT
RESPONSE_CLASSES
REPLY_TEXT_SELECTED_PSEUDOCOUNTS
MODEL_SCORE_WEIGHT
MODEL_CATEGORY
DYNAMIC_LABEL
%@ must implement -normalizedReplyTextsSet:
%@ must implement -replyTextsForIndex:position:
%@ must implement -replyTextsForIndex:
%@ must implement -replyTextCount:
%@ must implement -replyClassCount:
%@ must implement -modelCount:
%@ must implement -maxDistinctReplies:
%@ must implement -initWithArray:
position == 0
[obj isKindOfClass:NSArray.class]
v44@?0@8@"NSArray"16Q24Q32B40
@min.unsignedIntegerValue
@max.unsignedIntegerValue
@max.category
@"NSString"16@?0@"NSString"8
IS_CUSTOM_RESPONSES_ENABLED
FILTER_BATCH_SIZE
MINIMUM_TIME_INTERVAL_SECS
MINIMUM_DISTINCT_RECIPIENTS
MINIMUM_REPLY_OCCURENCES
TIME_DECAY_FACTOR
COUNT_EXPONENT
DISTANCE_THRESHOLD
MIN_DECAYED_COUNT_FOR_PREDICTION
MIN_DECAYED_COUNT_FOR_PRUNING
MAX_STORED_MESSAGES
MAX_STORED_CUSTOM_RESPONSES
MAX_ROWS_IN_PER_RECIPIENT_TABLE
CUSTOM_RESPONSES_COMPATIBILITY_VERSION
ALLOW_PROFANITY
KNOWLEDGE_STORE_QUERY_LIMIT
MAX_REPLY_GAP_SECS
USAGE_SPREAD_EXPONENT
USE_NON_NEGATIVE_CLASSES_ONLY
%@-%lu-%@-%@
@"_PASLRUCache"8@?0
language.length
com.apple.suggestions.quickResponsesConfigWarmup
PREDICTION_PARAMETERS
PREDICTION_REPLIES
PREDICTION_MODEL_HYPERPARAMETERS
PREDICTION_PREPROCESSING_METHODS
CLASSIFICATION_LABELS
CLASSIFICATION_MODEL_HYPERPARAMETERS
CLASSIFICATION_PREPROCESSING_METHODS
CLASSIFICATION_PARAMETERS
CUSTOM_RESPONSES_PARAMETERS
_preprocessingMethods.count >= 2
finalizeForWordPieceCaseInsensitive
finalizeForWordPieceCaseSensitive
MLModelRules.plist
MLModelMappings.plist
MLQuickResponsesTraining.plist
MLQuickResponsesTraining.trie
MetricsConfig.plist
SignatureDetectorRules.plist
DPRecorderRules.plist
NameDetectorRules.plist
SGModelAsset-notifications
/System/Library/AssetTypeDescriptors/com.apple.MobileAsset.AssetTypeDescriptor.CoreSuggestionsModelAssets.plist
Assets
suggestionsmodelassets
v16@?0@"_PASAsset2"8
v16@?0@"SGMultiLabelEspressoClassifierWrapper"8
@sum.self
d16@?0@8
METHODS
methods
methods.count % 2 == 0
%s%s%s%s
size >= 0 && size < TYPES_STRING_BUF_SIZE
%s%s%s%s%s
-[SGStringPreprocessingTransformer transform:]
SGStringPreprocessingTransformer.m
value.length == 1
!CFUniCharIsSurrogateHighCharacter(separator) && !CFUniCharIsSurrogateLowCharacter(separator)
jusqu
lorsqu
puisqu
quelqu
qoiqu
!CFUniCharIsSurrogateHighCharacter(replacement) && !CFUniCharIsSurrogateLowCharacter(replacement)
http
valueLen <= patternLen
v32@?0@"SGTokenString"8Q16^B24
:withValue:
:/.?=&_-+$!*'(),;@
Unable to find class %s
v36@?0I8^S12{_NSRange=QQ}20
TRANSFORMERS
v32@?0@"<PMLTransformerProtocol>"8Q16^B24
@16@?0@"<PMLPlistAndChunksSerializableProtocol>"8
photosharing
SGQuickResponsesInference.m
modelScores != nil
text.length
lang.length
model
ranking
personalization != nil || model.config.predictionParams.isPersonalizationDisabled
storeDirectory.length
message
v32@?0@8@16^B24
v32@?0@"SGQuickResponse"8Q16^B24
@16@?0@8
distance
confident
v32@?0@"_PASTuple2"8Q16^B24
v32@?0@"SGQuickResponsesClassScore"8Q16^B24
firstPartyPhoneUEhPTkUuMXAK
firstPartyEmailRU1BSUwuMXAK
firstPartyPostalUE9TVEFMLjFwCg
thirdPartyPhoneUEhPTkUuM3AK
thirdPartyEmailRU1BSUwuMXAK
thirdPartyPostalUE9TVEFMLjFwCg
firstPartyLocTE9DLjFwCg
photoSharingUEhPVE8K
@"NSMutableDictionary"24@?0@"NSDictionary"8@"NSString"16
[config.replies replyCountForIndex:semanticClassIndex] == 1
SGNameDetector
Class getSGNameDetectorClass(void)_block_invoke
void *CoreSuggestionsInternalsLibrary(void)
-[SGQuickResponsesModel predict:]
SGQuickResponsesModel.m
[[self class] isEqual:features.source.modelClass]
[data isKindOfClass:NSString.class]
[vector isKindOfClass:PMLSparseVector.class]
[label isKindOfClass:NSNumber.class]
quickResponses
BinaryLogisticMultiLabel
%@:%@
EspressoClassifierMultiLabel
%@_%@_%@%@Model.chunk
Chunk file at %@ not the same class as type %@
model.outputDimension == configCount
v16@?0@"NSMutableSet"8
%@%lu%@%@
@"_PASLock"8@?0
%@ must implement +newTransformerInstanceForLanguage:mode:plistPath:
config
featurizer
source
labeler != nil || config.mode == SGModelModePrediction
sampler != nil || config.mode == SGModelModePrediction
SGQRTextMessage
SGQuickResponses
+[SGQuickResponsesModelRules areModelsAvailableInLanguage:]_block_invoke
[objectives isKindOfClass:[NSDictionary class]]
v32@?0@8@"NSDictionary"16^B24
TRAINING
PREDICTION
EVALUATION
NSString *modelModeName(SGModelMode)
Unexpected SGModelMode mode: %lX
SGQuickResponsesStore.m
store
v16@?0@"SGLazyInit"8
@8@?0
{_PASDBIterAction_=B}16@?0@"NSError"8
B8@?0
SELECT * FROM responses WHERE lang_response=$lang_response
SELECT * FROM responses_totals WHERE language=$language
$lang_response
v16@?0@"_PASSqliteStatement"8
displayed
selected
matched
{_PASDBIterAction_=B}16@?0@"_PASSqliteStatement"8
$language
opportunities
unmatched
v24@?0@"_PASSqliteDatabase"8@?<{_PASDBIterAction_=B}@?@"NSError">16
INSERT INTO responses (lang_response, displayed) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET displayed=displayed+1
INSERT INTO responses_totals (language, opportunities, displayed) VALUES ($language,1,$count) ON CONFLICT(language) DO UPDATE SET opportunities=opportunities+1, displayed=displayed+$count
$count
INSERT INTO responses (lang_response, selected) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET selected=selected+1
INSERT INTO responses_totals (language, selected) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET selected=selected+1
INSERT INTO responses (lang_response, matched) VALUES($lang_response,1) ON CONFLICT(lang_response) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, matched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET matched=matched+1
INSERT INTO responses_totals (language, unmatched) VALUES ($language,1) ON CONFLICT(language) DO UPDATE SET unmatched=unmatched+1
UPDATE messages SET filtered = true, filtering = false WHERE rowid=$row_id
INSERT INTO cr_per_recipient_counts (reply,  language,  recipient, decayed_times_used)                              VALUES($reply, $language, $recipient,                  1) ON CONFLICT(reply, language, recipient) DO UPDATE SET decayed_times_used = decayed_times_used + 1
INSERT INTO custom_responses (reply,  language,  prompt_embedding, decayed_times_used,  first_seen,  last_seen)                       VALUES($reply, $language, $prompt_embedding,                  1,    $sent_at,   $sent_at)
$reply
$prompt_embedding
$sent_at
$recipient
$row_id
UPDATE custom_responses SET prompt_embedding = $prompt_embedding,     decayed_times_used = decayed_times_used + 1,     first_seen = MIN($sent_at, first_seen),     last_seen = MAX($sent_at, last_seen) WHERE language = $language AND reply = $reply
INSERT INTO messages (reply, language, prompt, recipient, sent_at, filtering, filtered) VALUES($reply, $language, $prompt, $recipient, $sent_at, false, false)
$prompt
DELETE FROM messages ORDER BY sent_at DESC LIMIT -1 OFFSET $table_limit
$table_limit
SELECT COUNT(ROWID) as c from messages where NOT filtered
SELECT m.rowid, m.filtering, m.filtered, m.recipient, m.prompt, m.language, m.reply, m.sent_at, cr.prompt_embedding FROM messages as m, (SELECT reply, language, prompt_embedding from custom_responses) as cr WHERE m.filtering AND NOT m.filtered AND m.reply = cr.reply AND m.language = cr.language
language
recipient
reply
prompt
rowid
sent_at
prompt_embedding
UPDATE messages SET filtering = true WHERE NOT filtered ORDER BY sent_at LIMIT $limit
SELECT changes();
$limit
UPDATE messages SET filtering = false, filtered = true WHERE filtering AND reply IN (SELECT reply FROM messages GROUP BY reply HAVING COUNT(DISTINCT(recipient)) < $recipients OR COUNT(reply) < $replies)
$recipients
$replies
SELECT rowid, reply FROM messages WHERE filtering
UPDATE messages SET filtering = false, filtered = true WHERE rowid = $row_id
SELECT profanity_locale FROM custom_responses_version
profanity_locale
SELECT current_version FROM custom_responses_version
current_version
DELETE FROM custom_responses_version
INSERT INTO custom_responses_version (current_version, profanity_locale) VALUES($current_version, $profanity_locale)
$current_version
$profanity_locale
DELETE FROM custom_responses
UPDATE messages SET filtering = false, filtered = false
DELETE FROM messages
SELECT COUNT(*) as n FROM messages
UPDATE messages SET filtered = true ORDER BY sent_at DESC LIMIT $evalCount
$evalCount
SELECT prompt, reply FROM messages ORDER BY sent_at DESC LIMIT $evalCount
SELECT rowid, reply, language, prompt, sent_at, recipient FROM messages WHERE filtering AND NOT filtered
SELECT prompt_embedding FROM custom_responses WHERE reply=$reply AND language=$language
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages))
SELECT COUNT(ROWID) as n FROM cr_per_recipient_counts
SELECT reply, language, COUNT(ROWID) as n FROM cr_per_recipient_counts GROUP BY reply, language
second
DELETE FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language ORDER BY decayed_times_used ASC LIMIT $n_rows 
$n_rows
SELECT reply, prompt_embedding, decayed_times_used, usage_spread FROM custom_responses WHERE language = $language   AND decayed_times_used >= $minimum_decayed_count   AND last_seen - first_seen >= $minimum_time_interval
$minimum_decayed_count
$minimum_time_interval
decayed_times_used
usage_spread
q24@?0@"_PASTuple2"8@"_PASTuple2"16
SELECT rowid, prompt_embedding from custom_responses
UPDATE custom_responses SET prompt_embedding = $prompt_embedding, decayed_times_used = decayed_times_used * $decay_factor WHERE rowid = $rowid
$decay_factor
$rowid
UPDATE cr_per_recipient_counts SET decayed_times_used = decayed_times_used * $decay_factor
DELETE FROM custom_responses WHERE decayed_times_used < $threshold
$threshold
SELECT COUNT(ROWID) as c from custom_responses
DELETE FROM custom_responses ORDER BY decayed_times_used ASC LIMIT $table_limit
SELECT t1.lang_response AS lang_response        ,CASE            WHEN t2.displayed IS NULL THEN t1.displayed            ELSE t1.displayed - t2.displayed         END AS displayed        ,CASE            WHEN t2.selected IS NULL THEN t1.selected            ELSE t1.selected - t2.selected         END AS selected        ,CASE            WHEN t2.matched IS NULL THEN t1.matched            ELSE t1.matched - t2.matched         END AS matched FROM responses t1 LEFT JOIN responses_snapshot t2     ON t1.lang_response = t2.lang_response ORDER BY RANDOM() 
DROP TABLE responses_snapshot
CREATE TABLE responses_snapshot AS     SELECT *     FROM responses 
CREATE INDEX idx_responses_snapshot_lang_response ON responses_snapshot (lang_response)
lang_response
flakyDatabaseHandle.getObject.db.isInMemory
SGQuickResponsesStore failed to destroy instance in memory.
SELECT decayed_times_used FROM cr_per_recipient_counts WHERE reply=$reply AND language=$language AND recipient=$recipient
SELECT usage_spread FROM custom_responses WHERE reply=$reply AND language=$language
totalOpportunities >= 0
totalDisplayed >= 0
totalSelected >= 0
totalMatched >= 0
totalUnmatched >= 0
displayed >= 0
selected >= 0
matched >= 0
langResponse
response
lang
SGFutureFoundationFramework.m
block
locale
guardedTokenizer
SGTokenizerML
@"_PASQueueLock"8@?0
v8@?0
v16@?0@8
v40@?0@"NSString"8^B16{_NSRange=QQ}24
v24@?0^{_LXEntry=}8*16
malloc failed
@"NSArray"16@?0@"<NSFastEnumeration>"8
@"NSMutableDictionary"16@?0@"<NSFastEnumeration>"8
@"NSMutableArray"16@?0@"<NSFastEnumeration>"8
@"NSArray"16@?0@"NSArray"8
SGPersonalizeEmojisWarmup
SGStringUtilML.m
isSingleEmoji == NO
emojiPreferences != nil
v40@?0@"EMFEmojiToken"8{_NSRange=QQ}16^B32
SGQuickResponsesToRobotsConfig.m
params
ENABLE_FEATURE
RULES_DICT
TRIGGER_WORDS
GENERAL_CONTEXT_WORDS
LEFT_CONTEXT
RIGHT_CONTEXT
GENERAL_CONTEXT_LEFT
GENERAL_CONTEXT_RIGHT
TRIGGER_CONTEXT
RELAX_CONTEXT
USE_GENERAL_CONTEXT
INSIGNIFICANT_SENDER
CAPS_WORDS_RATIO_MAX
v16@?0@"NSMutableArray"8
B32@?0@"<SGConversationTurnProtocol>"8Q16^B24
sender
q24@?0@"<SGConversationTurnProtocol>"8@"<SGConversationTurnProtocol>"16
LABEL_MAPPING
labels
duplicate label %@
mapping
-[SGStringLabelingTransformer transform:]
SGStringLabelingTransformer.m
PREPROCESSOR
LABELER
preprocessor
labeler
@unionOfArrays.self
SGTextLabelTransformer: Unexpected null value for flattened labels
-[SGTextLabelTransformer transform:]
SGTextLabelTransformer.m
[input isKindOfClass:[NSString class]]
SGQuickResponsesClassificationModel.m
SGLanguageDetection.m
localeIdentifier.length >= 2
zh-Hans
Hans
Hant
zh-Hant
Latn
hi-Latn
Cyrl
Arab
uz-Arab
uz-Latn
sr-Latn
NSMaxRange(lowercaseRange) <= lowercaseText.length
v40@?0@"NSString"8{_NSRange=QQ}16^B32
NSMaxRange(textTagRange) <= text.length
SGDefaultAssets.m
no path for filename %@
MLQuickResponsesPrediction
RepliesToRobots
plist
SGQuickResponsesToRobots.m
repliesToRobotsConfig
INSendMessageIntent
startDate > %@
com.apple.MobileSMS
startDate
SGMessagePairIterator.m
Iterator exhausted!
messageEvents is nil
NSString *getIMAttachmentCharacterString(void)
IMAttachmentCharacterString
void *IMFoundationLibrary(void)
NSString *getIMBreadcrumbCharacterString(void)
IMBreadcrumbCharacterString
SGModelFeatures.m
sessionDescriptor
modelClass
vector
SGRandomization.m
NSMaxRange(range) <= mutableArray.count
valueBlock
v32@?0@8Q16^B24
k <= n
SEPARATOR
SGTokenJoiningTransformer.m
Unexpected input: %@. %@ requires an NSArray.
TRANSFORMER
INPUTKEY
SGSelectiveTransformer.m
Unexpected input: %@. %@ requires dictionary with inputKey: %@.
SGQuickResponsesRanking.m
num.unsignedIntegerValue >= headerCount
v32@?0@"NSNumber"8Q16^B24
v32@?0@"SGQuickResponsesCategoryScore"8Q16^B24
v32@?0@"SGQuickResponsesReplyModel"8Q16^B24
validClasses %d out of range [1, %d]
responsesToFill %d out of range [%d, %d]
score >= 0
quickresponses.db
PRAGMA journal_mode=WAL
PRAGMA synchronous=NORMAL
CREATE TABLE responses (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE responses_totals (    language TEXT PRIMARY KEY,     opportunities INTEGER NOT NULL DEFAULT 0,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0,     unmatched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
CREATE TABLE messages (    reply TEXT NOT NULL,    language TEXT NOT NULL,     prompt TEXT NOT NULL,     recipient TEXT NOT NULL,     sent_at DOUBLE NOT NULL,     filtering BOOL NOT NULL,     filtered BOOL NOT NULL )
CREATE TABLE custom_responses (    reply TEXT NOT NULL,     language TEXT NOT NULL,     prompt_embedding BLOB NOT NULL,     decayed_times_used DOUBLE NOT NULL,     first_seen DOUBLE NOT NULL,     last_seen DOUBLE NOT NULL )
CREATE TABLE custom_responses_version (    current_version INTEGER NOT NULL,     profanity_locale TEXT NOT NULL )
CREATE TABLE cr_per_recipient_counts (    reply TEXT NOT NULL,     language TEXT NOT NULL,     recipient TEXT NOT NULL,     decayed_times_used DOUBLE NOT NULL, UNIQUE(reply, language, recipient))
ALTER TABLE custom_responses ADD COLUMN usage_spread DOUBLE NOT NULL DEFAULT 0.0
UPDATE custom_responses SET usage_spread = (SELECT CAST(u AS FLOAT)/c FROM    (SELECT count(distinct(recipient)) AS u FROM messages WHERE messages.reply=custom_responses.reply AND messages.language=custom_responses.language),    (SELECT count(distinct(recipient)) AS c FROM messages));
CREATE TABLE responses_snapshot (    lang_response TEXT PRIMARY KEY,     displayed INTEGER NOT NULL DEFAULT 0,     selected INTEGER NOT NULL DEFAULT 0,     matched INTEGER NOT NULL DEFAULT 0) WITHOUT ROWID
DELETE FROM responses
DELETE FROM responses_totals
DELETE FROM responses_snapshot
@&B&<
softlink:o:path:/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
softlink:o:path:/System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
softlink:o:path:/System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
SGQuickResponsesConfigDictionary
SGModelHyperparameters
SGQuickResponsesClassificationParameters
SGQuickResponsesPredictionParameters
SGQuickResponsesReplyModel
SGQuickResponsesReplies
SGQuickResponsesRepliesFlattened
SGQuickResponsesRepliesNested
SGCustomResponsesParameters
SGQuickResponsesConfig
SGModelAsset
SGNestedArray
SGMultiLabelEspressoClassifierWrapper
SGMultiLabelEspressoClassifierCache
SGMultiLabelEspressoClassifierCached
PMLMultiLabelClassifierProtocol
NSObject
SGQuickResponsesReplyOption
SGQuickResponsesPersonalization
SGStringPreprocessingTransformer
PMLTransformerProtocol
PMLPlistAndChunksSerializableProtocol
SGStringPreprocessor
SGStringSplitter
SGPipelineTransformer
SGQuickResponsesScores
SGQuickResponse
SGQuickResponsesInference
SGQuickResponsesModel
SGModelSampler
SGQuickResponsesTransformerInstance
SGQuickResponsesModelRules
SGQuickResponsesStore
SGQuickResponsesRecords
SGQuickResponsesReplyRecord
SGQuickResponsesEngagementDeltas
NSSecureCoding
NSCoding
SGLazyInit
SGTokenizerML
SGLexiconML
SGDeduperML
SGQuickResponsesToRobotsConfig
SGConversationTracker
SGStringLabelingTransformer
SGTextLabelTransformer
SGQuickResponsesClassificationModel
SGLanguageDetection
SGDefaultAssets
SGQuickResponsesToRobots
SGMessagePair
SGMessagePairIterator
SGModelSource
SGModelFeatures
SGRandomization
SGTokenJoiningTransformer
SGSelectiveTransformer
SGQuickResponsesDynamicLabelSet
SGQuickResponsesRanking
SGQuickResponsesScoring
SGQuickResponsesDistributingCount
SGQuickResponsesClassScore
SGQuickResponsesCategoryScore
SGQuickResponsesDatabase
_PASDatabaseMigrationProtocol
T@"NSString",R,N,V_langResponse
T#,&,N,V_modelClass
T@"SGQuickResponsesPredictionParameters",R,N,V_predictionParams
T@"<PMLTransformerProtocol>",&,V_transformer
TQ,R,N,V_minimumReplyOccurences
T@"<PMLTransformerProtocol>",R,N,V_labeler
_allowProfanity
T@"NSArray",&,V_transformers
_categoryModels
T@"NSArray",R,N,V_categorySemanticClasses
T@"NSArray",R,N,V_labels
_handle
T@"NSArray",R,N,V_models
_labels
T@"NSArray",R,N,V_preprocessingMethods
_models
T@"NSArray",R,N,V_replyTextParent
_responsesBonus
T@"NSArray",R,N,V_selectedPseudocounts
_source
T@"NSArray",R,N,V_semanticClassReplyTextStrings
_totalUnmatched
T@"NSArray",R,N,V_semanticClassSelectedPseudocounts
_vector
T@"NSArray",R,N,V_semanticClasses
average
T@"NSArray",R,N,V_styleGroupReplyTexts
checkFilesystemPathForFilename:
T@"NSDate",&,N,V_sentAt
content
T@"NSDictionary",R,N,V_proactiveTrigger
dealloc
T@"NSNumber",R,N,V_position
detectLanguageFromLanguageTags:
T@"NSSet",R,N,V_generalContextWords
dynamicLabelSet
T@"NSSet",R,N,V_triggerWords
featuresVersion
T@"NSString",&,N,V_handle
flattenedArraysFromNestedArray:
T@"NSString",&,N,V_reply
initWithDouble:
T@"NSString",&,V_separator
initWithInitializer:destructor:
T@"NSString",R,C,N,V_featuresModelId
isDoneIterating
T@"NSString",R,C,N,V_lang
isProxy
T@"NSString",R,C,N,V_text
labeler
T@"NSString",R,N,V_modelTypeName
matched
T@"NSString",R,N,V_response
maxReplyGapSecs
T@"PMLSessionDescriptor",&,N,V_sessionDescriptor
modelId
T@"SGModelHyperparameters",R,N,V_modelHyperparameters
nextMessagePair
T@"SGModelSource",R,N,V_source
outputDimension
T@"SGQuickResponsesConfig",R,N,V_config
release
T@"_PASLazyPurgeableResult",&,N,V_classifier
removeNonASCII:
TB,R,N,V_allowProfanity
replies
TB,R,N,V_dynamicLabelsEnabled
replyTextParent
TB,R,N,V_filterNonConfident
sampler
TB,R,N,V_insignificantSender
selectedPseudocountsFromModels:
TB,R,N,V_isCustomResponse
semanticClassId
TB,R,N,V_isPerCategory
setGlobalTransformerForTesting:
TB,R,N,V_isReplyTextRandomized
setTransformer:
TB,R,N,V_modelFeaturizationFormatOptionIsDense
timeDecayFactor
TB,R,N,V_useGeneralContext
transformBatch:
TQ,R
TQ,R,N,V_categoryId
.cxx_destruct
T@"SGCustomResponsesParameters",R,N,V_customResponsesParameters
T#,R
T@"_PASSqliteDatabase",R,N,V_db
T@"<PMLTransformerProtocol>",R,N,V_featurizer
Td,R,N,V_maxPromptWindowSeconds
T@"<PMLWordPieceVocabProtocol>",R,N,V_vocab
_buffer
T@"NSArray",R,N,V_categoryModels
_config
T@"NSArray",R,N,V_categoryStyleGroups
_extraIdOptions
T@"NSArray",R,N,V_modelScores
_idVectorLength
T@"NSArray",R,N,V_normalizedModelScores
_maxReplyLength
T@"NSArray",R,N,V_replyRecords
_prompt
T@"NSArray",R,N,V_replyTexts
_sentAt
T@"NSArray",R,N,V_semanticClassParent
_totalDisplayed
T@"NSArray",R,N,V_semanticClassReplyTexts
_triggerContext
T@"NSArray",R,N,V_semanticClassStyleGroups
addSelectedToResponse:language:
T@"NSArray",R,N,V_styleGroupParent
bundleForClass:
T@"NSArray",R,N,V_styleGroups
containsObject:
T@"NSDate",R,N,V_latestProcessedDate
countForObject:
T@"NSDictionary",R,N,V_supportedKeysAndContext
defaultLanguage
T@"NSNumber",R,N,V_ucb
dpRecorderRules
T@"NSSet",R,N,V_normalizedReplyTextsSet
featuresModelId
T@"NSString",&,N,V_espressoModelFile
filterBatchSize
T@"NSString",&,N,V_prompt
getModelVersion
T@"NSString",&,V_inputKey
initWithFormat:
T@"NSString",R,C
intentsSourceID
T@"NSString",R,C,N,V_featuresVersion
isDynamicLabel:
T@"NSString",R,C,N,V_language
isRobotResponse
T@"NSString",R,N,V_lang
lowercaseString
T@"NSString",R,N,V_promptJoiningString
maxPromptLength
T@"NSString",R,N,V_subModelKeyString
maximum
T@"PMLSessionDescriptor",R,N,V_sessionDescriptor
modelSemanticClassesFromModels:
T@"SGModelSampler",R,N,V_sampler
numberWithLong:
T@"SGQuickResponsesClassificationParameters",R,N,V_classificationParams
registerWrittenResponse:config:
T@"SGQuickResponsesReplies",R,N,V_replies
removeEmojiModifyingCharacters:
TB,R
replaceAllWhitespaceWithSpaces:
TB,R,N,V_dynamicLabel
replyClassCount
TB,R,N,V_enableFeature
resolveByPairs:
TB,R,N,V_hasNegativeClass
scaleInPlaceWithInversedFactor:
TB,R,N,V_isConfident
selectorForMethod:preprocessor:
TB,R,N,V_isCustomResponsesEnabled
semanticClasses
TB,R,N,V_isPersonalizationDisabled
setIsConfident:
TB,R,N,V_isRobotResponse
stringByAppendingPathComponent:
TB,R,N,V_relaxContext
tokenNGramRange
TB,R,N,V_useNonNegativeClassesOnly
trimWhitespace:
TQ,R,N,V_category
uppercaseString
TQ,R,N,V_compatibilityVersion
TQ,R,N,V_defaultResponsesToReturn
TQ,R,N,V_extraIdOptions
TQ,R,N,V_filterBatchSize
TQ,R,N,V_generalContextLeft
TQ,R,N,V_generalContextRight
TQ,R,N,V_idVectorLength
TQ,R,N,V_index
TQ,R,N,V_knowledgeStoreQueryLimit
TQ,R,N,V_leftContext
TQ,R,N,V_maxPromptLength
TQ,R,N,V_maxReplyLength
TQ,R,N,V_maxRowsInPerRecipientTable
TQ,R,N,V_maxStoredCustomResponses
TQ,R,N,V_maxStoredMessages
TQ,R,N,V_minimumDistinctRecipients
TQ,R,N,V_mode
TQ,R,N,V_modelId
TQ,R,N,V_replyTextId
TQ,R,N,V_responsesToShowAtTopForDiversity
TQ,R,N,V_rightContext
TQ,R,N,V_semanticClassId
TQ,R,N,V_semanticClassIndex
TQ,R,N,V_styleGroupId
TQ,R,N,V_triggerContext
TQ,R,N,V_vectorLength
TQ,R,N,V_vectorizerStrategy
Td,R,N,V_average
Td,R,N,V_classDiscount
Td,R,N,V_countExponent
Td,R,N,V_displayed
Td,R,N,V_distanceThreshold
Td,R,N,V_dynamicLabelSamplingRate
Td,R,N,V_matched
Td,R,N,V_maxReplyGapSecs
Td,R,N,V_maximum
Td,R,N,V_minDecayedCountForPrediction
Td,R,N,V_minDecayedCountForPruning
Td,R,N,V_minToShowThreshold
Td,R,N,V_minimumTimeIntervalSecs
Td,R,N,V_negativeClassMaximumToPredict
Td,R,N,V_negativeSamplingRate
Td,R,N,V_personalizationDisplayedPseudocount
Td,R,N,V_personalizationExplorationFactor
Td,R,N,V_personalizationSelectedPseudocountPerSemanticClass
Td,R,N,V_positiveSamplingRate
Td,R,N,V_responsesBonus
Td,R,N,V_scoreWeight
Td,R,N,V_selected
Td,R,N,V_timeDecayFactor
Td,R,N,V_totalDisplayed
Td,R,N,V_totalMatched
Td,R,N,V_totalOpportunities
Td,R,N,V_totalSelected
Td,R,N,V_totalUnmatched
Td,R,N,V_usageSpreadExponent
Td,R,N,V_value
Td,R,N,V_weightForCategoryAverage
Td,R,N,V_weightForCategoryMax
Td,R,N,V_weightForIndividualModel
Tf,R,N,V_capsWordsRatioMax
Ti,R,N,V_displayed
Ti,R,N,V_matched
Ti,R,N,V_selected
Tq,R,N,V_vectorNormalization
T{_NSRange=QQ},R,N,V_characterNGramRange
T{_NSRange=QQ},R,N,V_tokenNGramRange
UTF8String
_addCustomResponseToDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
_addModelAssetUpdateHandler
_assetWithName:andLoadBlock:
_attachmentCharacterString
_average
_baseStringForEmojiString:
_breadcrumbCharacterString
_cacheKeyForLanguage:mode:plistPath:vocabPath:
_cachedObject
_capsWordsRatioMax
_category
_categoryId
_categorySemanticClasses
_categoryStyleGroups
_characterNGramRange
_classDiscount
_classificationParams
_classifier
_compatibilityVersion
_conversations
_countExponent
_currentClassifier
_customResponsesParameters
_defaultResponsesToReturn
_destructor
_dictionaryForPlistPath:mode:
_displayed
_distanceThreshold
_done
_dynamicLabel
_dynamicLabelRate
_dynamicLabelSamplingRate
_dynamicLabelsEnabled
_enableFeature
_enumerateEmojiTokensInRange:block:
_espressoModelFile
_featuresModelId
_featuresVersion
_featurizer
_filesystemPathForFilename:isFault:
_filterBatchSize
_filterNonConfident
_generalContextLeft
_generalContextRight
_generalContextWords
_getMergedPromptForMessage:conversationTurns:
_handleCorruptionWithCheck:path:inMemory:
_hasNegativeClass
_incrementCustomResponseInDb:reply:language:embedding:sentAt:recipient:messagesRowId:onError:
_index
_initWithoutConnection
_initializer
_inputKey
_insignificantSender
_invokeOnUpdateBlock
_isConfident
_isCoupleMultiSkinToneEmoji:
_isCustomResponse
_isCustomResponsesEnabled
_isPerCategory
_isPersonalizationDisabled
_isReplyTextRandomized
_isRobotResponse
_isSingleEmoji
_knowledgeStoreQueryLimit
_labelMapping
_labeler
_lang
_langResponse
_language
_latestProcessedDate
_latestPromptForHandle
_leftContext
_lexiconTokenForToken:inLexicon:
_matched
_maxPromptLength
_maxPromptWindowSeconds
_maxReplyGap
_maxReplyGapSecs
_maxRowsInPerRecipientTable
_maxStoredCustomResponses
_maxStoredMessages
_maximum
_messageEventCount
_messageEventIndex
_messageEvents
_methodNames
_methodSignatureNoValue
_methodSignatureWithValue
_methodValues
_minDecayedCountForPrediction
_minDecayedCountForPruning
_minToShowThreshold
_minimumDistinctRecipients
_minimumReplyOccurences
_minimumTimeIntervalSecs
_mode
_model
_modelClass
_modelCount
_modelFeaturizationFormatOptionIsDense
_modelHyperparameters
_modelId
_modelScores
_modelTypeName
_modelTypeNameForDictionary:
_negativeClassMaximumToPredict
_negativeRate
_negativeSamplingRate
_normalizedModelScores
_normalizedReplyTextsSet
_openAnotherHandleForPath:
_openFreshHandleForPath:inMemory:
_pas_componentsJoinedByString:
_pas_mappedArrayWithTransform:
_performMigrationsWithPath:inMemory:attemptIteration:
_personalization
_personalizationDisplayedPseudocount
_personalizationExplorationFactor
_personalizationSelectedPseudocountPerSemanticClass
_position
_positiveRate
_positiveSamplingRate
_predictionParams
_preprocessedLabelsWithLabels:andPreprocessor:
_preprocessingMethods
_preprocessor
_proactiveTrigger
_promptJoiningString
_ranking
_readerWriter
_recordsForResponses:language:
_relaxContext
_replies
_reply
_replyRecords
_replyTextId
_replyTextParent
_replyTextStringsCount
_replyTexts
_reset
_response
_responsesToShowAtTopForDiversity
_rightContext
_rng
_sampler
_scoreWeight
_selected
_selectedPseudocounts
_semanticClassId
_semanticClassIndex
_semanticClassParent
_semanticClassReplyTextStrings
_semanticClassReplyTexts
_semanticClassSelectedPseudocounts
_semanticClassStyleGroups
_semanticClasses
_separator
_sessionDescriptor
_sharedCache
_sharedInvalidKeysCache
_sharedTransformerCache
_store
_styleGroupId
_styleGroupParent
_styleGroupReplyTexts
_styleGroups
_subModelKeyString
_subModelKeyStringForDictionary:
_supportedKeysAndContext
_text
_timeDecayFactor
_tokenNGramRange
_totalMatched
_totalOpportunities
_totalSelected
_transformer
_transformerCacheKeyForLanguage:mode:plistPath:
_transformers
_triggerWords
_ucb
_usageSpreadExponent
_useGeneralContext
_useNonNegativeClassesOnly
_value
_vectorLength
_vectorNormalization
_vectorizerStrategy
_vocab
_vocabForVocabPath:mode:
_weightForCategoryAverage
_weightForCategoryMax
_weightForIndividualModel
addCustomResponsesToCommonResponses:language:locale:recipient:modelScores:maxResponses:customResponsesParams:
addDisplayedToResponses:language:
addIndex:
addMessage:
addObject:
addObjectsFromArray:
addScore:
addToEnd:withValue:
addToStart:withValue:
addWrittenToResponse:language:isMatch:
addingMessageExceedsBatchLimit:tableLimit:message:language:prompt:recipientHandle:sentAt:
allCapsRatio:
allDevices
allObjects
allValues
allowProfanity
andPredicateWithSubpredicates:
appIntentsStream
appendString:
applySelector:preprocesor:string:value:
areModelsAvailableInLanguage:
arrayAssertedForKey:
arrayByAddingObjectsFromArray:
arrayWithObject:
arrayWithObjects:count:
asset
augmentRecords:semanticClass:config:
autorelease
bindNamedParam:toDouble:
bindNamedParam:toInt64:
bindNamedParam:toNSData:
bindNamedParam:toNSString:
boolValue
bucketerWithEqualityTest:
bucketerWithLabeledBuckets:
bucketerWithMapping:
bufferPtrWithMinimumLength:
calculateUsageSpreads
capsWordsRatioMax
category
categoryId
categoryModels
categoryModelsFromModels:
categoryScoresWithModelScores:configReplies:
categorySemanticClasses
categoryStyleGroups
characterAtIndex:
characterIsMember:
characterNGramRange
characterSetFromString:
characterSetWithCharactersInString:
characterSetWithRange:
class
classDiscount
classResultsForScores:numResponses:responseCount:config:
classificationParams
classifier
classifierWithEspressoModelFile:
clear
closePermanently
combineDakutenAndHandakuten:
compare:
compatibilityVersion
componentsSeparatedByString:
config
configForLanguage:mode:plistPath:vocabPath:
configWithLanguage:mode:plistPath:vocabPath:
conformsToProtocol:
contactStore
conversationForSenderID:
conversationIdentifier
convertLabelsToMapping:
copy
copyWithSkinToneVariant:
copyWithSkinToneVariantSpecifier:
corruptionMarkerPathForPath:
cosineDistanceFrom:
count
countByEnumeratingWithState:objects:count:
countCustomResponsesAfterPruningWithMinimumCountThreshold:
countCustomResponsesAfterTruncatingTable:
countExponent
countReplyTextsForArray:
currentHandler
currentLocale
customResponsesForMessage:maximumResponses:context:language:locale:recipients:
customResponsesParameters
data
databaseHandle
date
dateWithTimeIntervalSince1970:
debugDescription
decayAllCustomResponsesWithDecayFactor:filteringBatchSize:
decimalDigitCharacterSet
decodeInt32ForKey:
decodeObjectOfClasses:forKey:
decomposeAndRecomposeStringWithCompatibilityMapping:
decomposeStringWithCompatibilityMapping:
dedupe:bucketer:resolver:
deduplicatedReplyTextsForReplyPositions:semanticClass:responseCount:config:
defaultManager
defaultResponsesToReturn
deltaForResponsesOnRow:completion:
description
descriptorForName:version:locale:
designateFilteringBatch:
destroyCachedObject
destroyInstanceInMemory
detectLanguageFromLanguageTags:withMinimumCount:withMinimumAgreement:
detectLanguageFromText:
detectLanguageFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
detectNames:algorithm:
dictAssertedForKey:
dictionary
dictionaryWithObjects:forKeys:count:
dictionaryWithPlistAssetPath:
dictionaryWithPlistFilename:
direction
displayed
distanceThreshold
dominantLanguageForString:
dominantLanguageTagFromLanguageTags:
dominantLanguageTagFromLanguageTags:withMinimumCount:withMinimumAgreement:
dominantLanguageTagFromText:
dominantLanguageTagFromText:withMaxLength:withMaxTags:withMinimumCount:withMinimumAgreement:
doubleValue
dynamicIndicesAndTopIsDynamic:config:
dynamicLabel
dynamicLabelForScore:config:
dynamicLabelSamplingRate
dynamicLabelsEnabled
embeddingForPrompt:language:embedder:
enableFeature
encodeInt32:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateTagsInRange:unit:scheme:options:usingBlock:
enumerateTokensInString:block:
enumerateTokensInString:withRange:block:
espressoModelFile
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
exceptionWithName:reason:userInfo:
exchangeObjectAtIndex:withObjectAtIndex:
executeQuery:error:
extraIdOptions
featuresOf:
featuresOf:inLanguage:andMode:
featuresOf:withFeaturizer:source:
featurizer
featurizerWithMethods:bucketSize:characterNGramRange:tokenNGramRange:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
fileExistsAtPath:isDirectory:
filesystemPathForAssetDataRelativePath:
filesystemPathForFilename:
filterBatchWithMinimumDistinctRecipients:minimumReplyOccurences:
filterNonConfident
finalizeForWordPieceCaseInsensitive:
finalizeForWordPieceCaseSensitive:
first
firstObject
floatValue
frailReadTransaction:
frailWriteTransaction:
generalContextLeft
generalContextRight
generalContextWords
getCharacters:range:
getDoubleForColumnAlias:
getInt64ForColumn:
getInt64ForColumnAlias:
getInt64ForColumnName:table:
getIntegerForColumnAlias:
getMergedPromptForMessage:conversationTurns:maxPromptLength:maxPromptWindowSeconds:promptJoiningString:
getNSDataForColumnAlias:
getNSStringForColumnAlias:
getObject
getPerRecipientCountForReply:language:recipient:
getProfanityLocale
getUsageSpreadForReply:language:
handle
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleFromConversationId:
hasNegativeClass
hash
idVectorLength
imputedDisplayedForRecords:config:
increaseLengthBy:
index
indexOfObjectWithOptions:passingTest:
indexedArraysFromNestedArray:
indexesForScores:numResponses:
init
initInDirectory:inMemory:withMigration:
initInDirectory:inMemory:withMigration:forTools:
initWithArray:
initWithAssetTypeDescriptorPath:defaultBundlePath:matchingKeysAndValues:notificationQueue:logHandle:enableAssetUpdates:
initWithBlock:
initWithBlock:idleTimeout:
initWithCapacity:
initWithCharactersNoCopy:length:freeWhenDone:
initWithClassNameKey:
initWithCoder:
initWithConfig:featurizer:source:labeler:sampler:
initWithContentsOfFile:options:error:
initWithCountLimit:
initWithData:
initWithDictionary:
initWithDictionary:index:
initWithDictionary:language:
initWithDictionary:modelTypeName:
initWithDisplayed:selected:matched:
initWithEntity:type:mode:language:class:modelPath:plistPath:vocabPath:
initWithEspressoModelFile:
initWithFirst:second:
initWithGuardedData:
initWithGuardedData:serialQueue:
initWithInteger:
initWithKey:ascending:
initWithLabelMapping:
initWithLabelStrings:
initWithLangResponse:displayed:selected:matched:
initWithLanguage:
initWithLanguage:chunkPath:plistPath:espressoBinFilePath:vocabFilePath:
initWithLanguage:mode:dictionary:lazyVocab:
initWithLanguage:mode:dictionary:vocab:
initWithLanguage:mode:plistPath:vocabPath:
initWithLanguage:plistPath:espressoBinFilePath:vocabFilePath:storeDirectory:
initWithMethods:
initWithMethods:withLabelStrings:
initWithMigrationObjects:
initWithModel:ranking:personalization:rng:store:
initWithModelScores:normalizedModelScores:
initWithNumbers:
initWithObjects:
initWithPath:
initWithPlist:chunks:context:
initWithPosition:records:actualOptionsDisplayedCount:imputedOptionsDisplayedCount:imputedOptionsDisplayed:config:
initWithPositiveRate:dynamicLabelRate:negativeRate:rng:
initWithPreprocessor:labeler:
initWithProactiveTrigger:isConfident:
initWithReply:prompt:handle:sentAt:
initWithReplyRecords:totalOpportunities:totalDisplayed:totalSelected:totalMatched:totalUnmatched:
initWithSeed:
initWithSeparator:
initWithSessionDescriptor:modelClass:
initWithSource:vector:
initWithStartDate:maxBatchSize:maxReplyLength:maxReplyGap:
initWithStore:withRng:
initWithStringValue:
initWithTagSchemes:options:
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:isRobotResponse:isConfident:
initWithText:lang:replyTextId:styleGroupId:semanticClassId:modelId:categoryId:isCustomResponse:isRobotResponse:isConfident:proactiveTrigger:
initWithText:senderID:timestamp:
initWithTransformer:appliedToInputKey:
initWithTransformers:
initWithUnsignedInteger:
initWithValue:index:
initializeDatabase:withContentProtection:newDatabaseCreated:errorHandler:
inputKey
insertString:atIndex:
insignificantSender
insignificantSender:
instance
instanceInMemory
integerValue
intent
intentClass
interaction
invertedSet
isConfident
isCustomResponse
isCustomResponsesEnabled
isEqual:
isEqualToConversationTurn:
isEqualToNumber:
isEqualToPipelineTransformer:
isEqualToQuickResponsesEngagementDeltas:
isEqualToSGSelectiveTransformer:
isEqualToSGTokenJoiningTransformer:
isEqualToString:
isEqualToStringLabelingTransformer:
isEqualToStringPreprocessingTransformer:
isEqualToTextLabelTransformer:
isInMemory
isKindOfClass:
isMemberOfClass:
isPerCategory
isPersonalizationDisabled
isProfane:inLocales:
isReplyTextRandomized
isValidConfigForWordPieceWithLazyVocab:
isZeroBasedAndContiguous:
keyWithLanguage:andResponse:
knowledgeStore
knowledgeStoreQueryLimit
labelOf:
labelOf:inLanguage:
labelOf:withLabeler:
labels
lang
langResponse
language
languageForLocale:withLanguageDetectionForMessage:
languageForLocaleIdentifier:
languageTagsFromText:withMaxLength:withMaxTags:
lastObject
lastUsedVariantEmojiForEmoji:
latestProcessedDate
leftContext
length
lengthOfBytesUsingEncoding:
letterCharacterSet
localizedDescription
localizedLowercaseString
lock
logMatchingForRange:lowercaseRange:text:lowercaseText:
lowerCase:
mappings
maxDistinctReplies
maxPromptWindowSeconds
maxReplyLength
maxRowsInPerRecipientTable
maxStoredCustomResponses
maxStoredMessages
mergeAnyConsecutiveCharacters:
mergeAnyConsecutiveNonalphabeticCharacters:
mergeAnyConsecutiveNonalphabeticCharactersWithExceptions:withValue:
mergeNumbersSeparatedByASCIISpace:
mergeTwoOrMoreConsecutiveCharacters:
messagesForEval:
methodForSelector:
metricsConfig
migrateDatabases
migrations
minDecayedCountForPrediction
minDecayedCountForPruning
minToShowThreshold
minimumDistinctRecipients
minimumReplyOccurences
minimumTimeIntervalSecs
mode
modelClass
modelCount
modelFeaturizationFormatOptionIsDense
modelForLanguage:mode:chunkPath:plistPath:vocabPath:
modelForLanguage:mode:chunkPath:plistPath:vocabPath:modelTypeAndSubModelKey:
modelHyperparameters
modelScores
modelScoresWithUnweightedScores:configReplies:
modelTypeAndSubModelKeyForLanguage:plistPath:vocabPath:warmupBlock:
modelTypeName
models
mutableBytes
mutableCopy
nameDetectorRules
nearestCustomResponsesAndScoresToPromptEmbedding:recipient:limit:withinRadius:responseCountExponent:minimumDecayedCount:compatibilityVersion:language:locale:allowProfanity:minimumTimeInterval:usageSpreadExponent:
nearestCustomResponsesToPromptEmbedding:recipient:limit:withinRadius:responseCountExponent:minimumDecayedCount:compatibilityVersion:language:locale:allowProfanity:minimumTimeInterval:usageSpreadExponent:
negativeClassMaximumToPredict
negativeSamplingRate
nestedArrayFromFlatArray:nestedIndexes:
nestedArrayFromModels:
newTransformerInstanceForConfig:seed:useSeed:
newTransformerInstanceForLanguage:mode:plistPath:vocabPath:
newTransformerInstanceForLanguage:withDictionary:withVocab:withSeed:forMode:
next
nextFloat
nonBaseCharacterSet
normalizeLabelScores:
normalizeReplyText:
normalizeReplyTextInternal:
normalizeStringForDeduping:
normalizedModelScores
normalizedReplyTextsSet
normalizedReplyTextsSetForArray:
null
numResponsesForScores:responseCount:config:
numberAssertedForKey:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLong:
objectAssertedForKey:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
outputDimensionWithFile:
parentArraysFromNestedArray:models:
pathExtension
pathForResource:ofType:
peekAtCachedObject
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
personalizationDisplayedPseudocount
personalizationExplorationFactor
personalizationSelectedPseudocountPerSemanticClass
position
positiveSamplingRate
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingPhoneNumber:
predicateForEventsWithSourceID:bundleID:
predicateForObjectsWithMetadataKey:inValues:
predicateWithFormat:
predict:
predict:withFile:
predictionParams
preferredLanguages
prepAndRunQuery:onPrep:onRow:onError:
preprocessingMethods
presentInContext:context:startIdx:endIdx:
proactiveTrigger
proactiveTriggerForDynamicLabel:context:language:
proactiveTriggerForDynamicLabel:context:language:useContactNames:
probsForClasses:withCount:
profanityInTokens:forLocaleIdentifier:
prompt
promptJoiningString
propertyListWithData:options:format:error:
prunePerRecipientTableWithMaxRows:
punctuationCharacterSet
queriesToSkipFromEmptyToVersion:
quickResponses
quickResponsesForMessage:context:time:maxResponses:locale:recipientHandles:chunkPath:plistPath:espressoBinFilePath:vocabFilePath:includeCustomResponses:includeResponsesToRobots:
quickResponsesForMessage:conversationTurns:maxResponses:localeIdentifier:recipientHandles:chunkPath:plistPath:espressoBinFilePath:vocabFilePath:useContactNames:includeCustomResponses:includeResponsesToRobots:
quickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:useContactNames:includeCustomResponses:includeResponsesToRobots:
quickResponsesFromReplyPositions:isConfident:config:
quickResponsesPrediction
quickResponsesPredictionVocab
quickResponsesScoresWithModelScores:normalizedModelScores:
quickResponsesVocab
randomizedReplyPositionsForSemanticClass:responseCount:config:
range
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:range:
rangeOfString:
rangeOfString:options:range:
readEmojiDefaults
readObjectWithPlist:chunks:context:
recordKnownCustomResponsesInBatchWithEmbedder:compatibilityVersion:
recordMessagesInBatchAsCustomResponsesWithEmbedder:compatibilityVersion:
recordsForResponses:language:
recordsForResponsesInternal:language:
registerDisplayedQuickResponses:plistPath:vocabPath:
registerDisplayedResponses:config:
registerOnUpdateBlock:
registerResponse:position:isCanned:isUsingQuickResponses:locale:plistPath:vocabPath:
registerSelectedResponse:config:
registerUpdateHandler:
relaxContext
removeAllObjects
removeBreadcrumbsFromMessage:
removeCharacters:withExceptions:fromString:
removeCharacters:withValue:
removeDuplicateWhitespace:
removeEmojiModifyingCharactersWithExceptions:withValue:
removeEmojis:
removeEmojisWithExceptions:withValue:
removeItemAtPath:error:
removeLastObject
removeNonBaseCharacters:
removeNonBasicMultilingualPlane:
removeNonEmojiSymbols:
removeNonEmojiSymbolsWithExceptions:withValue:
removeObjectAtIndex:
removeObjectsAtIndexes:
removePunctuation:
removePunctuationWithExceptions:withValue:
removeSpacingModifierLetters:
removeSymbols:
removeSymbolsWithExceptions:withValue:
replace:withBuffer:toIndex:
replaceCharactersInRange:withString:
replaceCharactersWithSpaces:withValue:
replaceContactNamesWithString:withValue:
replaceLinksWithString:withValue:
replaceNumbersWithString:withValue:
repliesToRobot:language:recipients:
repliesToRobot:language:recipients:config:
repliesWithArray:
reply
replyCountForIndex:
replyModelsForArray:
replyPositionsForSemanticClass:responseCount:config:
replyPositionsFromSemanticClasses:config:
replyRecords
replyTextCount
replyTextForIndex:position:
replyTextForIndexAndPosition:
replyTextId
replyTexts
replyTextsForIndex:
resetCustomResponsesAndResetMessages:
resetCustomResponsesForEval:
resetDbIfNeededCompareWithCompatibilityVersion:
resolveByScoreBreakTiesArbitrarily:
respondsToSelector:
response
responseToRobotParams
responsesBonus
responsesToFillForResponseCount:config:
responsesToShowAtTopForDiversity
result
resultsForModelScores:responseCount:config:
retain
retainCount
reverseObjectEnumerator
rightContext
rules
runWithLockAcquired:
scaleInPlaceWithFactor:
scoreWeight
scoresAndIsConfidentForMessage:language:locale:
second
selected
selectedPseudocounts
self
semanticClassIndex
semanticClassParent
semanticClassReplyTextStrings
semanticClassReplyTexts
semanticClassSelectedPseudocounts
semanticClassStyleGroups
semanticClassesForArray:
semanticClassesForCategory:responseCount:configReplies:
semanticClassesForResults:scores:numResponses:config:
senderID
sentAt
separateCharacter:withValue:
separateFrenchElisions:
separator
sessionDescriptor
sessionDescriptorForLanguage:
setCachedEspressoClassifierWithFile:
setClassifier:
setDeviceIDs:
setEspressoModelFile:
setHandle:
setInputKey:
setModelClass:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setProfanityLocale:andModelVersion:
setPrompt:
setReply:
setSentAt:
setSeparator:
setSessionDescriptor:
setString:
setTransformers:
sgConversationTurnsForStrings:
sharedInstance
shouldSampleForLabel:inLanguage:isDynamicLabel:
shouldSampleForLabel:isDynamicLabel:
shuffleMutableArray:inApproxEqualEpsilon:withValueBlock:withRng:
shuffleMutableArray:inRange:withRng:
shuffleMutableArray:withRng:
shuffledSamplingWithoutReplacementForK:fromN:withRng:
signatureRules
signatureWithObjCTypes:
signpostedQuickResponsesForMessage:maximumResponses:conversationHistory:context:time:language:locale:recipients:useContactNames:includeCustomResponses:includeResponsesToRobots:
skinTone
sortDescriptorWithKey:ascending:
sortUsingComparator:
sortUsingDescriptors:
sortUsingSelector:
sortedArrayWithOptions:usingComparator:
sortedReplyOptionsForRecords:config:
sortedReplyPositionsForSemanticClass:config:
sortedWithUnweightedScores:config:
source
splitString:withCharacterSet:
sqliteDatabaseInMemoryWithError:errorHandler:
sqliteDatabaseWithFilename:contentProtection:errorHandler:error:
startDate
strategyForString:modelTypeName:
string
stringAssertedForKey:
stringByAppendingString:
stringByDeletingPathExtension
stringByFoldingWithOptions:locale:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithCapacity:
stringWithUTF8String:
stringsForQuickResponses:
stripCombiningMarks:
stripNonBaseCharacters:
styleGroupId
styleGroupParent
styleGroupReplyTexts
styleGroups
subModelKeyString
subarrayWithRange:
subclassesFromClasses:subclassArray:
substringFromIndex:
substringToIndex:
substringWithRange:
suggestionsDirectory
sumInPlaceWithVector:
superclass
supportedKeysAndContext
supportsSecureCoding
supportsSkinToneVariants
symbolCharacterSet
tagAtIndex:unit:scheme:tokenRange:
text
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timestamp
toPlistWithChunks:
tokenRangeForText:maxTruncatedLength:tagger:taggerOptions:prevTextTokenMaxRange:originalLengthShortfall:lowercaseText:lowercaseRange:
tokenize:
totalDisplayed
totalDisplayedCountForRecords:
totalMatched
totalOpportunities
totalSelected
totalUnmatched
transform:
transform:stopAfterTransformerWithIndex:
transformFullwidthToHalfwidth:
transformFullwidthToHalfwidthASCII:
transformHalfwidthToFullwidthCJK:
transformer
transformerInstanceForLanguage:mode:
transformerInstanceForLanguage:mode:plistPath:vocabPath:
transformers
traversalWithNestedArray:depthCallback:itemCallback:
triggerContext
triggerWords
truncateDatabaseAtPath:
tupleWithFirst:second:
ucbCombinedForSelected:displayed:actualOptionsDisplayed:matched:imputedDisplayed:imputedOptionsDisplayed:explorationFactor:
ucbCombinedWithMeanA:meanB:varianceA:varianceB:explorationFactor:
ucbTunedVarianceForMean:displayed:totalDisplayed:
ucbWithMean:varianceOfMean:explorationFactor:
unifiedContactsMatchingPredicate:keysToFetch:error:
unlock
unsignedIntValue
unsignedIntegerValue
uppercaseLetterCharacterSet
usageSpreadExponent
useGeneralContext
useNonNegativeClassesOnly
userInfo
validClassesForClassCount:responseCount:config:
value
valueForKeyPath:
vector
vectorLength
vectorNormalization
vectorWithConstantColumn
vectorizerStrategy
vocab
vocabWithTrieAssetPath:
vocabWithTrieFilename:
warmup
weightForCategoryAverage
weightForCategoryMax
weightForIndividualModel
whitespaceAndNewlineCharacterSet
withBucketSize:characterNGramRange:tokenNGramRange:shouldNormalizeTokens:shouldNormalizeCharacters:localeForNonwordTokens:tokenizeNewlines:idVectorLength:extraIdOptions:vectorizerStrategy:vectorNormalization:vocab:
withLabelStrings:
withMethods:
withMethods:withLabelStrings:
withSeparator:
withTransformer:appliedToInputKey:
withTransformers:
writeToPlistWithObject:andChunks:
zone
@24@0:8@16
Q32@0:8@16@24
@32@0:8@16@24
@16@0:8
{_NSRange=QQ}16@0:8
Q16@0:8
q16@0:8
v16@0:8
@"NSString"
{_NSRange="location"Q"length"Q}
d16@0:8
B16@0:8
@32@0:8@16Q24
@"NSArray"
@32@0:8Q16Q24
@24@0:8Q16
Q24@0:8Q16
Q24@0:8@16
@"_PASLock"
B24@0:8@16
@"NSSet"
@48@0:8@16Q24@32@40
@48@0:8@16@24@32@?40
@"SGModelHyperparameters"
@"SGQuickResponsesReplies"
@"SGQuickResponsesClassificationParameters"
@"SGQuickResponsesPredictionParameters"
@"SGCustomResponsesParameters"
@"PMLSessionDescriptor"
@"<PMLWordPieceVocabProtocol>"
v24@0:8@?16
@32@0:8@16@?24
v40@0:8@16@?24@?32
v24@0:8@16
@"_PASLazyPurgeableResult"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8@"PMLSparseVector"16
d40@0:8d16d24d32
d56@0:8d16d24d32d40d48
d72@0:8d16d24d32d40d48d56d64
d24@0:8@16
@64@0:8Q16@24d32d40@48@56
q24@0:8@16
@"NSNumber"
@48@0:8@16Q24Q32@40
@40@0:8@16Q24@32
@40@0:8Q16Q24@32
@32@0:8Q16@24
v32@0:8@16@24
@"SGQuickResponsesStore"
@"_PASRng"
@40@0:8@16@24@32
@24@0:8@"NSMutableArray"16
@40@0:8@16@"NSArray"24@"NSDictionary"32
:32@0:8@16@24
v48@0:8:16@24@32@40
@"NSMethodSignature"
^S24@0:8Q16
v40@0:8@16^S24Q32
v40@0:8@16@24@32
@"NSMutableData"
@84@0:8@16@24Q32Q40Q48Q56Q64B72B76B80
@28@0:8@16B24
@92@0:8@16@24Q32Q40Q48Q56Q64B72B76B80@84
v20@0:8B16
@"NSDictionary"
@104@0:8@16@24@32Q40@48@56@64@72@80@88B96B100
@100@0:8@16@24Q32@40@48@56@64@72@80B88B92B96
@44@0:8@16@24@32B40
v64@0:8@16@24B32B36@40@48@56
@56@0:8@16@24@32@40@48
@92@0:8@16Q24@32@40@48@56@64@72B80B84B88
@36@0:8@16B24@28
@72@0:8@16@24@32@40@48Q56@64
@64@0:8@16Q24@32@40@48@56
@"SGQuickResponsesModel"
@"SGQuickResponsesRanking"
@"SGQuickResponsesPersonalization"
@40@0:8@16@24Q32
B36@0:8@16@24B32
@56@0:8@16Q24@32@40@48
B28@0:8@16B24
@80@0:8@16@24Q32@40#48@56@64@72
@"<PMLMultiLabelClassifierProtocol>"
@"SGQuickResponsesTransformerInstance"
@48@0:8d16d24d32@40
@"SGQuickResponsesConfig"
@"<PMLTransformerProtocol>"
@"SGModelSource"
@"SGModelSampler"
B32@0:8@16@24
@32@0:8@16B24B28
@36@0:8@16B24B28B32
B24@0:8@?16
v36@0:8@16@24B32
v80@0:8@16@24@32@40d48@56q64@?72
B72@0:8Q16Q24@32@40@48@56@64
@40@0:8@16@24@?32
v32@0:8@?16Q24
v32@0:8Q16Q24
v32@0:8@16q24
B24@0:8Q16
v24@0:8Q16
@92@0:8@16@24Q32f40f44f48Q52@60@68B76d80f88
v32@0:8d16Q24
Q24@0:8d16
B32@0:8@?16@?24
d40@0:8@16@24@32
d32@0:8@16@24
@64@0:8@16d24d32d40d48d56
@40@0:8d16d24d32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16i24i28i32
i16@0:8
@32@0:8@?16@?24
v32@0:8@16@?24
v48@0:8@16{_NSRange=QQ}24@?40
I32@0:8@16^{_LXLexicon=}24
@40@0:8@16@?24@?32
@?24@0:8@?16
f16@0:8
@56@0:8@16@24Q32d40@48
@"_PASLRUCache"
@"SGStringPreprocessingTransformer"
@"SGStringLabelingTransformer"
@56@0:8@16@24@32Q40Q48
@104@0:8@16Q24{_NSRange=QQ}32{_NSRange=QQ}48Q64Q72Q80q88@96
@36@0:8@16Q24B32
@56@0:8@16Q24Q32Q40d48
@40@0:8@16Q24d32
@40@0:8@16Q24Q32
{_NSRange=QQ}88@0:8@16Q24@32Q40Q48Q56@64{_NSRange=QQ}72
v64@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48@56
f24@0:8@16
B48@0:8@16@24q32q40
@48@0:8@16@24@32@40
@"NSDate"
@48@0:8@16Q24Q32d40
@"NSMutableDictionary"
@32@0:8@16#24
v24@0:8#16
@"PMLSparseVector"
v48@0:8@16{_NSRange=QQ}24@40
v48@0:8@16d24@?32@40
@48@0:8@16@24Q32@40
Q40@0:8Q16Q24@32
Q32@0:8Q16@24
@32@0:8d16Q24
v24@0:8d16
@24@0:8^I16
@"_PASSqliteDatabase"16@0:8
@"NSDictionary"16@0:8
@"NSArray"24@0:8^I16
B32@0:8B16@20B28
B32@0:8@16B24i28
@"_PASSqliteDatabase"
