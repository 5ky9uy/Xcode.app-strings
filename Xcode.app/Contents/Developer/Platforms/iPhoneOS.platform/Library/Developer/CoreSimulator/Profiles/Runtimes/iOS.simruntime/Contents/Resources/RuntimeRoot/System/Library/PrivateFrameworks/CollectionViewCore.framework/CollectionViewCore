@(#)PROGRAM:CollectionViewCore  PROJECT:UIKit-1
<name=%@; size=%@;
 edgeSpacing=%@;
 identfier=%@;
 contentInsets={%@,%@,%@,%@}>
<%@ size=%@;
 edgeSpacing=%@;
 contentInsets=%@>
B16@?0Q8
v24@?0@"NSCollectionLayoutItem"8^B16
v24@?0@"NSCollectionLayoutSupplementaryItem"8^B16
NSCollectionLayoutItem.m
A size is required.
At least 1 subitem is required for a group
A single item is required for a repeating item group, %@ were supplied
 group: subitems=%@
 interItemSpacing=%@;
 layoutDirection=%@>
Invalid parameter not satisfying: %@
layoutSize != nil
subitem != nil
A repeating horizontal group should specify a count >= 1
A repeating vertical group should specify a count >= 1
subitemsProvider
visualFormats.count
Unknown layout axis: %@ for formats %@
group
Mixing supplementariesFollowContentInsets and supplementaryContentInsetsReference is not supported. Please use supplementaryContentInsetsReference and the contentInsets property on the boundary supplementary item to get the desired behavior.
v32@?0@"NSCollectionLayoutBoundarySupplementaryItem"8Q16^B24
Error: no elementKind for supplementary. Please file a bug on UICollectionView as this should not be possible.
v16@?0@"NSArray"8
v24@?0@"NSString"8^B16
Error: Every supplementary must have a unique elementKind: duplicates detected: %@
<%@ - %p: flexible:%@>
<%@ - %p: fixed:%@>
.flexible(%@)
.fixed(%@)
<leading=%@; top=%@; trailing=%@; bottom=%@; outsets=@{%@,%@,%@,%@}>
<leading=%@; top=%@; trailing=%@; bottom=%@>
Invalid fractional width: %g. The fraction must be a finite value.
Invalid fractional height: %g. The fraction must be a finite value.
Invalid absolute dimension: %g. The dimension must be a finite value.
Invalid estimated dimension: %g. The dimension must be a finite value.
{%@(%g), %@(%g)}
Unhandled dimensionSemantic.
d24@?0d8q16
axis == UIAxisHorizontal || axis == UIAxisVertical
NSCollectionLayoutSupplementaryItem must be initialized with an initializer accepting an element kind
NSCollectionLayoutBoundarySupplementaryItem must be initialized with an initializer accepting an element kind
NSCollectionLayoutDecorationItem must be initialized with the .background(elementKind:)/+backgroundDecorationItemWithElementKind: initializer
<%@ %p: edges=%@; offset=%@; anchorPoint=%@>
{%.*g, %.*g, %.*g, %.*g}
CGFloat _CVCTotalEdgeDimensionsForLayoutAxis(NSDirectionalEdgeInsets, UIAxis)
CollectionViewCoreGeometry.h
Unknown axis.
v8@?0
com.apple.UIKit
CompositionalLayout
.unknown
.vertical
.horizontal
.absolute
.estimated
.containerWidthFactor
.containerHeightFactor
{%.*g, %.*g}
Attempting to add contentInsets to an item's dimension along an estimated axis. Insets along any estimated axes will be ignored. Use the item's edgeSpacing or the containing group's interItemSpacing instead. Item: %@
Invalid fractional width dimension, must be > 0.0. NOTE: This will be a hard-assert soon, please update your call site.
Invalid fractional height dimension, must be > 0.0. NOTE: This will be a hard-assert soon, please update your call site.
Invalid absolute dimension, must be > 0.0. NOTE: This will be a hard-assert soon, please update your call site.
Invalid estimated dimension, must be > 0. NOTE: This will be a hard-assert soon, please update your call site.
NSCollectionLayoutItem
NSCopying
NSCollectionLayoutGroupCustomItem
NSCollectionLayoutGroup
NSCollectionLayoutSection
NSCollectionLayoutSpacing
NSCollectionLayoutEdgeSpacing
NSCollectionLayoutDimension
NSCollectionLayoutSize
NSCollectionLayoutSupplementaryItem
_UICollectionLayoutAuxillaryItem
NSObject
NSCollectionLayoutBoundarySupplementaryItem
NSCollectionLayoutDecorationItem
NSCollectionLayoutAnchor
init
copy
setContentInsets:
numberWithDouble:
stringWithFormat:
_externalDescription
defaultSpacing
UUID
initWithSize:contentInsets:edgeSpacing:supplementaryItems:decorationItems:name:identifier:
allocWithZone:
size
contentInsets
edgeSpacing
supplementaryItems
decorationItems
name
_isEstimatedForAxis:
hasComputedContainsEstimatedItem
isEstimated
_enumerateItemsWithHandler:
_enumerateSupplementaryItemsWithHandler:
setHasComputedContainsEstimatedItem:
countByEnumeratingWithState:objects:count:
isGroup
subitems
_effectiveSizeForContainer:
_effectiveContentInsets
hasCustomGroupItemProvider
isDecoration
isSupplementary
arrayByAddingObjectsFromArray:
groupOptions
customGroupItemProvider
itemWithLayoutSize:
itemWithLayoutSize:supplementaryItems:
itemWithSize:decorationItems:
copyWithZone:
description
layoutSize
isEqual:
containsEstimatedSizeItem
_insetSizeForContainer:
isCustomGroup
isAuxillary
auxillaryItems
ignoresRTL
setEdgeSpacing:
setSupplementaryItems:
setSize:
identifier
setIdentifier:
setName:
setDecorationItems:
.cxx_destruct
_containsEstimatedSizeItem
_hasComputedContainsEstimatedItem
_edgeSpacing
_supplementaryItems
_size
_identifier
_name
_decorationItems
_contentInsets
T@"NSCollectionLayoutSize",C,N,V_size
T@"NSUUID",&,N,V_identifier
T@"NSString",C,N,V_name
T@"NSArray",C,N,V_supplementaryItems
T@"NSArray",C,N,V_decorationItems
TB,N,V_hasComputedContainsEstimatedItem
T{NSDirectionalEdgeInsets=dddd},N,V_contentInsets
T@"NSCollectionLayoutEdgeSpacing",C,N,V_edgeSpacing
T@"NSCollectionLayoutSize",R,N
customItemWithFrame:zIndex:
initWithFrame:zIndex:
frame
zIndex
customItemWithFrame:
_zIndex
_frame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
Tq,R,N,V_zIndex
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
lastObject
count
numberWithUnsignedInteger:
initWithArray:copyItems:
stringByReplacingOccurrencesOfString:withString:
appendFormat:
stringByAppendingFormat:
arrayWithObjects:count:
initWithSize:subitems:count:interItemSpacing:contentInsets:edgeSpacing:layoutDirection:supplementaryItems:visualFormats:itemsProvider:visualFormatItemProvider:customGroupItemProvider:options:name:identifier:
layoutDirection
isVerticalGroup
isHorizontalGroup
itemsProvider
visualFormats
interItemSpacing
visualFormatItemProvider
_visualDescription
_effectiveCopiedSubitemsForSubitems:count:layoutDirection:
firstObject
uppercaseString
containsString:
objectAtIndexedSubscript:
_effectiveSizeForSize:count:layoutDirection:
widthDimension
heightDimension
fractionalWidthDimension:
fractionalHeightDimension:
sizeWithWidthDimension:heightDimension:
_registrationViewClass
dimension
horizontalGroupWithLayoutSize:repeatingSubitem:count:
horizontalGroupWithLayoutSize:subitems:
verticalGroupWithLayoutSize:repeatingSubitem:count:
verticalGroupWithLayoutSize:subitems:
customGroupWithLayoutSize:itemProvider:
horizontalGroupWithLayoutSize:subitem:count:
verticalGroupWithLayoutSize:subitem:count:
horizontalGroupWithSize:subitemsProvider:
verticalGroupWithSize:subitemsProvider:
layoutGroupWithSize:visualFormats:itemProvider:
layoutAxis
hasItemProvider
hasVisualFormat
visualDescription
_hasDecorationItemRequiringRegistration
_isListSolverCompatibleForLayoutAxis:
setInterItemSpacing:
setSubitems:
setLayoutDirection:
setVisualFormats:
setCustomGroupItemProvider:
setItemsProvider:
setVisualFormatItemProvider:
setCount:
set_hasDecorationItemRequiringRegistration:
setGroupOptions:
_hasCheckedIfDecorationItemRequiresRegistration
__hasDecorationItemRequiringRegistration
_interItemSpacing
_subitems
_layoutDirection
_visualFormats
_customGroupItemProvider
_itemsProvider
_visualFormatItemProvider
_count
_groupOptions
T@"NSArray",C,N,V_subitems
Tq,N,V_layoutDirection
T@"NSArray",C,N,V_visualFormats
T@?,C,N,V_customGroupItemProvider
T@?,C,N,V_itemsProvider
T@?,C,N,V_visualFormatItemProvider
Tq,N,V_count
TB,N,V__hasDecorationItemRequiringRegistration
Tq,N,V_groupOptions
T@"NSArray",C,D,N
T@"NSCollectionLayoutSpacing",C,N,V_interItemSpacing
_containsBackgroundDecorationItem:
indexSet
initWithGroup:contentInsets:contentInsetsReference:supplementaryItems:boundarySupplementaryItems:pinnedSupplementaryItemIndexes:interGroupSpacing:visibleItemsInvalidationHandler:supplementariesFollowInsets:decorationItems:orthogonalScrollingBehavior:isEmptySection:prefersListSolver:
initWithLayoutGroup:
supplementaryContentInsetsReference
setSupplementariesFollowContentInsets:
_isEmptySection
prefersListSolver
supplementariesFollowContentInsets
orthogonalScrollingBehavior
contentInsetsReference
_clipsContentToBounds
_excludesBoundarySupplementariesFromClipping
_clipsBackgroundDecorationsToContent
interGroupSpacing
visibleItemsInvalidationHandler
_cornerRadius
pinnedBoundarySupplementaryItemIndexes
isEqualToIndexSet:
boundarySupplementaryItems
group
pinnedSupplementaryItemIndexes
pinToVisibleBounds
addIndex:
enumerateObjectsUsingBlock:
isBackgroundDecoration
addObject:
elementKind
indexOfObject:
removeObjectAtIndex:
length
decorationItemsDict
objectForKeyedSubscript:
supplementaryItemsDict
setObject:forKeyedSubscript:
scrollsOrthogonally
sectionWithGroup:
_emptySection
setBoundarySupplementaryItems:
setSupplementaryContentInsetsReference:
_hasVisibleItemsHandler
_hasBackgroundDecorationItem
_backgroundDecorationViewsRequiringCustomViewClassRegistration
_checkForDuplicateSupplementaryItemKindsAndThrowIfFound
_containsEstimatedSizeElement
_auxillaryItemForElementKind:category:
_wantsSwipeActions
_leadingSwipeActionsConfigurationForIndexPath:
_trailingSwipeActionsConfigurationForIndexPath:
_willBeginSwiping
_didEndSwiping
_alignedContentMarginGivenMargin:
shouldRestrictOrthogonalAxisDuringInteractiveMovement
_paddingToBoundarySupplementaries
_pinnedSupplementariesShouldOverlap
_supportsBandSelection
_preferredContainerBackgroundColor
setInterGroupSpacing:
setContentInsetsReference:
setOrthogonalScrollingBehavior:
setVisibleItemsInvalidationHandler:
setGroup:
setPinnedSupplementaryItemIndexes:
decorationItemssDict
contentSize
setContentSize:
_callback
_setCornerRadius:
_setClipsContentToBounds:
_setExcludesBoundarySupplementariesFromClipping:
_setClipsBackgroundDecorationsToContent:
setPrefersListSolver:
_pinnedBoundarySupplementaryItemIndexes
_supplementaryItemsDict
_decorationItemsDict
_prefersListSolver
_supplementariesFollowContentInsets
__clipsContentToBounds
__excludesBoundarySupplementariesFromClipping
__clipsBackgroundDecorationsToContent
_interGroupSpacing
_contentInsetsReference
_supplementaryContentInsetsReference
_orthogonalScrollingBehavior
_boundarySupplementaryItems
_visibleItemsInvalidationHandler
_group
_pinnedSupplementaryItemIndexes
_decorationItemssDict
__cornerRadius
_contentSize
T@"NSCollectionLayoutGroup",C,N,V_group
T@"NSIndexSet",C,N,V_pinnedSupplementaryItemIndexes
T@"NSDictionary",R,N
T@"NSDictionary",R,N,V_decorationItemssDict
T{CGSize=dd},N,V_contentSize
callback
T@"<_UICollectionLayoutSectionCallback>",R,N,G_callback,V_callback
Td,N,G_cornerRadius,S_setCornerRadius:,V__cornerRadius
TB,N,G_clipsContentToBounds,S_setClipsContentToBounds:,V__clipsContentToBounds
TB,N,G_excludesBoundarySupplementariesFromClipping,S_setExcludesBoundarySupplementariesFromClipping:,V__excludesBoundarySupplementariesFromClipping
TB,N,G_clipsBackgroundDecorationsToContent,S_setClipsBackgroundDecorationsToContent:,V__clipsBackgroundDecorationsToContent
TB,N,V_prefersListSolver
Td,N,V_interGroupSpacing
Tq,N,V_contentInsetsReference
Tq,N,V_supplementaryContentInsetsReference
Tq,N,V_orthogonalScrollingBehavior
T@"NSArray",C,N,V_boundarySupplementaryItems
TB,N,V_supplementariesFollowContentInsets
T@?,C,N,V_visibleItemsInvalidationHandler
initWithSpacing:isFlexible:
spacing
isFlexibleSpacing
flexibleSpacing:
fixedSpacing:
_hasSpacing
isFixedSpacing
_spacing
_isFlexible
Td,R,N
TB,R,N
edgeOutsets
initWithLeading:top:trailing:bottom:
_spacingForEdge:
leading
bottom
trailing
spacingForLeading:top:trailing:bottom:
isSpacingFixedForEdge:
isSpacingFlexibleForEdge:
spacingForEdge:
_leading
_top
_trailing
_bottom
T@"NSCollectionLayoutSpacing",R,N
initWithDimension:semantic:
semantic
absoluteDimension:
estimatedDimension:
_dimensionWithDimension:semantic:
isAbsolute
isFractionalWidth
isFractionalHeight
setDimension:
setSemantic:
_dimension
_semantic
Tq,N,V_semantic
Td,N,V_dimension
initWithSize:widthSemantic:heightSemantic:width:height:
widthSemantic
heightSemantic
_effectiveSizeForContainer:ignoringInsets:
sizeWithAbsoluteSize:
sizeWithContainerSize
sizeWithContainerWidthFactor:containerHeightFactor:
sizeWithSize:widthSemantic:heightSemantic:
sizeWithWidth:widthSemantic:height:heightSemantic:
isContainerSize
setWidthDimension:
setHeightDimension:
setWidthSemantic:
setHeightSemantic:
_widthDimension
_heightDimension
_widthSemantic
_heightSemantic
T{CGSize=dd},N,V_size
Tq,N,V_widthSemantic
Tq,N,V_heightSemantic
T@"NSCollectionLayoutDimension",&,N,V_widthDimension
T@"NSCollectionLayoutDimension",&,N,V_heightDimension
initWithSize:contentInsets:elementKind:containerAnchor:itemAnchor:zIndex:
exceptionWithName:reason:userInfo:
containerAnchor
itemAnchor
isEqualToString:
isMemberOfClass:
supplementaryItemWithLayoutSize:elementKind:containerAnchor:
supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
item
supplementaryItem
boundarySupplementaryItem
decorationItem
T@"NSString",R,N
T@"NSCollectionLayoutAnchor",R,N
T{NSDirectionalEdgeInsets=dddd},R,N
Tq,R,N
T@"NSCollectionLayoutItem",R,N
T@"NSCollectionLayoutSupplementaryItem",R,N
T@"NSCollectionLayoutBoundarySupplementaryItem",R,N
T@"NSCollectionLayoutDecorationItem",R,N
setZIndex:
setElementKind:
setContainerAnchor:
setItemAnchor:
canAdjustContentSize
setCanAdjustContentSize:
_canAdjustContentSize
_elementKind
_containerAnchor
_itemAnchor
T@"NSString",&,N,V_elementKind
T@"NSCollectionLayoutAnchor",&,N,V_containerAnchor
T@"NSCollectionLayoutAnchor",&,N,V_itemAnchor
TB,N,V_canAdjustContentSize
Tq,N,V_zIndex
boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:
initWithSize:contentInsets:elementKind:containerAnchor:itemAnchor:zIndex:alignment:offset:extendsBoundary:pinToVisibleBounds:
alignment
offset
extendsBoundary
_pinningZIndex
boundarySupplementaryItemWithLayoutSize:elementKind:alignment:
setPinningZIndex:
copyWithContainerAnchor:itemAnchor:
_setPinningZIndex:
setExtendsBoundary:
setPinToVisibleBounds:
_alignment
_extendsBoundary
_pinToVisibleBounds
_offset
Tq,N,G_pinningZIndex,S_setPinningZIndex:,V_pinningZIndex
TB,N,V_extendsBoundary
TB,N,V_pinToVisibleBounds
Tq,R,N,V_alignment
T{CGPoint=dd},R,N,V_offset
initWithElementKind:size:contentInsets:containerAnchor:itemAnchor:zIndex:registrationViewClass:isBackgroundDecoration:
backgroundDecorationItemWithElementKind:
decorationItemWithSize:elementKind:containerAnchor:
_setRegistrationViewClass:
_isBackgroundDecoration
__registrationViewClass
TB,R,N,V_isBackgroundDecoration
T#,&,N,S_setRegistrationViewClass:,V__registrationViewClass
initWithEdges:offset:anchorPoint:offsetIsUnitOffset:
edges
anchorPoint
offsetIsUnitOffset
layoutAnchorWithEdges:
layoutAnchorWithEdges:absoluteOffset:
layoutAnchorWithEdges:fractionalOffset:
layoutAnchorWithAnchorPoint:
layoutAnchorWithAnchorPoint:offset:
layoutAnchorWithAnchorPoint:unitOffset:
isAbsoluteOffset
isFractionalOffset
_itemFrameForContainerRect:itemSize:itemLayoutAnchor:
setEdges:
setOffset:
setAnchorPoint:
setOffsetIsUnitOffset:
_offsetIsUnitOffset
_edges
_anchorPoint
TQ,N,V_edges
T{CGPoint=dd},N,V_offset
T{CGPoint=dd},N,V_anchorPoint
TB,N,V_offsetIsUnitOffset
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@96@0:8@16{NSDirectionalEdgeInsets=dddd}24@56@64@72@80@88
@16@0:8
B24@0:8@16
v48@0:8{NSDirectionalEdgeInsets=dddd}16
B16@0:8
v24@0:8@?16
{CGSize=dd}24@0:8@16
{NSDirectionalEdgeInsets=dddd}16@0:8
v24@0:8@16
v20@0:8B16
v16@0:8
@"NSCollectionLayoutEdgeSpacing"
@"NSArray"
@"NSCollectionLayoutSize"
@"NSUUID"
@"NSString"
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
q16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@40@0:8@16@24q32
@32@0:8@16@?24
@40@0:8@16@24@?32
@40@0:8@16q24q32
@160@0:8@16@24q32@40{NSDirectionalEdgeInsets=dddd}48@80q88@96@104@?112@?120@?128q136@144@152
Q16@0:8
B24@0:8Q16
v24@0:8q16
@?16@0:8
@"NSCollectionLayoutSpacing"
@132@0:8@16{NSDirectionalEdgeInsets=dddd}24q56@64@72@80d88@?96B104@108q116B124B128
@32@0:8@16Q24
d24@0:8d16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"NSIndexSet"
@"NSDictionary"
@"NSCollectionLayoutGroup"
@"<_UICollectionLayoutSectionCallback>"
{CGSize="width"d"height"d}
@24@0:8d16
@28@0:8d16B24
@48@0:8@16@24@32@40
d24@0:8Q16
@24@0:8Q16
@32@0:8d16q24
@32@0:8{CGSize=dd}16
@32@0:8d16d24
@48@0:8{CGSize=dd}16q32q40
@48@0:8d16q24d32q40
@64@0:8{CGSize=dd}16q32q40@48@56
{CGSize=dd}28@0:8@16B24
@"NSCollectionLayoutDimension"
@40@0:8@16@24@32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSCollectionLayoutSize"16@0:8
@"NSCollectionLayoutAnchor"16@0:8
@"NSCollectionLayoutItem"16@0:8
@"NSCollectionLayoutSupplementaryItem"16@0:8
@"NSCollectionLayoutBoundarySupplementaryItem"16@0:8
@"NSCollectionLayoutDecorationItem"16@0:8
@88@0:8@16{NSDirectionalEdgeInsets=dddd}24@56@64@72q80
@"NSCollectionLayoutAnchor"
@56@0:8@16@24q32{CGPoint=dd}40
@120@0:8@16{NSDirectionalEdgeInsets=dddd}24@56@64@72q80q88{CGPoint=dd}96B112B116
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@100@0:8@16@24{NSDirectionalEdgeInsets=dddd}32@64@72q80#88B96
v24@0:8#16
@40@0:8Q16{CGPoint=dd}24
@32@0:8{CGPoint=dd}16
@48@0:8{CGPoint=dd}16{CGPoint=dd}32
@60@0:8Q16{CGPoint=dd}24{CGPoint=dd}40B56
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48@64
v24@0:8Q16
v32@0:8{CGPoint=dd}16
@(#)PROGRAM:CollectionViewCore  PROJECT:UIKit-1
<name=%@; size=%@;
 edgeSpacing=%@;
 identfier=%@;
 contentInsets={%@,%@,%@,%@}>
<%@ size=%@;
 edgeSpacing=%@;
 contentInsets=%@>
B16@?0Q8
v24@?0@"NSCollectionLayoutItem"8^B16
v24@?0@"NSCollectionLayoutSupplementaryItem"8^B16
NSCollectionLayoutItem.m
A size is required.
At least 1 subitem is required for a group
A single item is required for a repeating item group, %@ were supplied
 group: subitems=%@
 interItemSpacing=%@;
 layoutDirection=%@>
Invalid parameter not satisfying: %@
layoutSize != nil
subitem != nil
A repeating horizontal group should specify a count >= 1
A repeating vertical group should specify a count >= 1
subitemsProvider
visualFormats.count
Unknown layout axis: %@ for formats %@
group
Mixing supplementariesFollowContentInsets and supplementaryContentInsetsReference is not supported. Please use supplementaryContentInsetsReference and the contentInsets property on the boundary supplementary item to get the desired behavior.
v32@?0@"NSCollectionLayoutBoundarySupplementaryItem"8Q16^B24
Error: no elementKind for supplementary. Please file a bug on UICollectionView as this should not be possible.
v16@?0@"NSArray"8
v24@?0@"NSString"8^B16
Error: Every supplementary must have a unique elementKind: duplicates detected: %@
<%@ - %p: flexible:%@>
<%@ - %p: fixed:%@>
.flexible(%@)
.fixed(%@)
<leading=%@; top=%@; trailing=%@; bottom=%@; outsets=@{%@,%@,%@,%@}>
<leading=%@; top=%@; trailing=%@; bottom=%@>
Invalid fractional width: %g. The fraction must be a finite value.
Invalid fractional height: %g. The fraction must be a finite value.
Invalid absolute dimension: %g. The dimension must be a finite value.
Invalid estimated dimension: %g. The dimension must be a finite value.
{%@(%g), %@(%g)}
Unhandled dimensionSemantic.
d24@?0d8q16
axis == UIAxisHorizontal || axis == UIAxisVertical
NSCollectionLayoutSupplementaryItem must be initialized with an initializer accepting an element kind
NSCollectionLayoutBoundarySupplementaryItem must be initialized with an initializer accepting an element kind
NSCollectionLayoutDecorationItem must be initialized with the .background(elementKind:)/+backgroundDecorationItemWithElementKind: initializer
<%@ %p: edges=%@; offset=%@; anchorPoint=%@>
{%.*g, %.*g, %.*g, %.*g}
CGFloat _CVCTotalEdgeDimensionsForLayoutAxis(NSDirectionalEdgeInsets, UIAxis)
CollectionViewCoreGeometry.h
Unknown axis.
v8@?0
com.apple.UIKit
CompositionalLayout
.unknown
.vertical
.horizontal
.absolute
.estimated
.containerWidthFactor
.containerHeightFactor
{%.*g, %.*g}
Attempting to add contentInsets to an item's dimension along an estimated axis. Insets along any estimated axes will be ignored. Use the item's edgeSpacing or the containing group's interItemSpacing instead. Item: %@
Invalid fractional width dimension, must be > 0.0. NOTE: This will be a hard-assert soon, please update your call site.
Invalid fractional height dimension, must be > 0.0. NOTE: This will be a hard-assert soon, please update your call site.
Invalid absolute dimension, must be > 0.0. NOTE: This will be a hard-assert soon, please update your call site.
Invalid estimated dimension, must be > 0. NOTE: This will be a hard-assert soon, please update your call site.
NSCollectionLayoutItem
NSCopying
NSCollectionLayoutGroupCustomItem
NSCollectionLayoutGroup
NSCollectionLayoutSection
NSCollectionLayoutSpacing
NSCollectionLayoutEdgeSpacing
NSCollectionLayoutDimension
NSCollectionLayoutSize
NSCollectionLayoutSupplementaryItem
_UICollectionLayoutAuxillaryItem
NSObject
NSCollectionLayoutBoundarySupplementaryItem
NSCollectionLayoutDecorationItem
NSCollectionLayoutAnchor
UUID
uppercaseString
stringWithUTF8String:
stringWithFormat:
stringByReplacingOccurrencesOfString:withString:
stringByAppendingFormat:
setObject:forKeyedSubscript:
removeObjectAtIndex:
objectForKeyedSubscript:
objectAtIndexedSubscript:
numberWithUnsignedInteger:
numberWithDouble:
length
lastObject
isEqualToString:
isEqualToIndexSet:
initWithArray:copyItems:
indexSet
indexOfObject:
handleFailureInMethod:object:file:lineNumber:description:
handleFailureInFunction:file:lineNumber:description:
firstObject
exceptionWithName:reason:userInfo:
enumerateObjectsUsingBlock:
currentHandler
countByEnumeratingWithState:objects:count:
copy
containsString:
arrayWithObjects:count:
arrayByAddingObjectsFromArray:
appendFormat:
allocWithZone:
addObject:
addIndex:
_visualDescription
init
itemWithLayoutSize:
itemWithLayoutSize:supplementaryItems:
itemWithSize:decorationItems:
copyWithZone:
initWithSize:contentInsets:edgeSpacing:supplementaryItems:decorationItems:name:identifier:
description
_externalDescription
layoutSize
isEqual:
setContentInsets:
containsEstimatedSizeItem
_enumerateSupplementaryItemsWithHandler:
_enumerateItemsWithHandler:
_insetSizeForContainer:
isGroup
isCustomGroup
isAuxillary
isSupplementary
isDecoration
_effectiveContentInsets
auxillaryItems
ignoresRTL
hasCustomGroupItemProvider
contentInsets
edgeSpacing
setEdgeSpacing:
supplementaryItems
setSupplementaryItems:
size
setSize:
identifier
setIdentifier:
name
setName:
decorationItems
setDecorationItems:
hasComputedContainsEstimatedItem
setHasComputedContainsEstimatedItem:
.cxx_destruct
_containsEstimatedSizeItem
_hasComputedContainsEstimatedItem
_edgeSpacing
_supplementaryItems
_size
_identifier
_name
_decorationItems
_contentInsets
T@"NSCollectionLayoutSize",C,N,V_size
T@"NSUUID",&,N,V_identifier
T@"NSString",C,N,V_name
T@"NSArray",C,N,V_supplementaryItems
T@"NSArray",C,N,V_decorationItems
TB,N,V_hasComputedContainsEstimatedItem
T{NSDirectionalEdgeInsets=dddd},N,V_contentInsets
T@"NSCollectionLayoutEdgeSpacing",C,N,V_edgeSpacing
T@"NSCollectionLayoutSize",R,N
customItemWithFrame:
customItemWithFrame:zIndex:
initWithFrame:zIndex:
frame
zIndex
_zIndex
_frame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
Tq,R,N,V_zIndex
horizontalGroupWithLayoutSize:repeatingSubitem:count:
horizontalGroupWithLayoutSize:subitems:
verticalGroupWithLayoutSize:repeatingSubitem:count:
verticalGroupWithLayoutSize:subitems:
customGroupWithLayoutSize:itemProvider:
horizontalGroupWithLayoutSize:subitem:count:
verticalGroupWithLayoutSize:subitem:count:
horizontalGroupWithSize:subitemsProvider:
verticalGroupWithSize:subitemsProvider:
layoutGroupWithSize:visualFormats:itemProvider:
_effectiveCopiedSubitemsForSubitems:count:layoutDirection:
_effectiveSizeForSize:count:layoutDirection:
initWithSize:subitems:count:interItemSpacing:contentInsets:edgeSpacing:layoutDirection:supplementaryItems:visualFormats:itemsProvider:visualFormatItemProvider:customGroupItemProvider:options:name:identifier:
isVerticalGroup
isHorizontalGroup
layoutAxis
hasItemProvider
hasVisualFormat
visualDescription
_hasDecorationItemRequiringRegistration
_isListSolverCompatibleForLayoutAxis:
interItemSpacing
setInterItemSpacing:
subitems
setSubitems:
layoutDirection
setLayoutDirection:
visualFormats
setVisualFormats:
customGroupItemProvider
setCustomGroupItemProvider:
itemsProvider
setItemsProvider:
visualFormatItemProvider
setVisualFormatItemProvider:
count
setCount:
set_hasDecorationItemRequiringRegistration:
groupOptions
setGroupOptions:
_hasCheckedIfDecorationItemRequiresRegistration
__hasDecorationItemRequiringRegistration
_interItemSpacing
_subitems
_layoutDirection
_visualFormats
_customGroupItemProvider
_itemsProvider
_visualFormatItemProvider
_count
_groupOptions
T@"NSArray",C,N,V_subitems
Tq,N,V_layoutDirection
T@"NSArray",C,N,V_visualFormats
T@?,C,N,V_customGroupItemProvider
T@?,C,N,V_itemsProvider
T@?,C,N,V_visualFormatItemProvider
Tq,N,V_count
TB,N,V__hasDecorationItemRequiringRegistration
Tq,N,V_groupOptions
T@"NSArray",C,D,N
T@"NSCollectionLayoutSpacing",C,N,V_interItemSpacing
sectionWithGroup:
_emptySection
initWithGroup:contentInsets:contentInsetsReference:supplementaryItems:boundarySupplementaryItems:pinnedSupplementaryItemIndexes:interGroupSpacing:visibleItemsInvalidationHandler:supplementariesFollowInsets:decorationItems:orthogonalScrollingBehavior:isEmptySection:prefersListSolver:
initWithLayoutGroup:
setBoundarySupplementaryItems:
setSupplementariesFollowContentInsets:
setSupplementaryContentInsetsReference:
_isEmptySection
_hasVisibleItemsHandler
pinnedBoundarySupplementaryItemIndexes
_hasBackgroundDecorationItem
_backgroundDecorationViewsRequiringCustomViewClassRegistration
_containsBackgroundDecorationItem:
_checkForDuplicateSupplementaryItemKindsAndThrowIfFound
_containsEstimatedSizeElement
scrollsOrthogonally
_auxillaryItemForElementKind:category:
supplementaryItemsDict
decorationItemsDict
_wantsSwipeActions
_leadingSwipeActionsConfigurationForIndexPath:
_trailingSwipeActionsConfigurationForIndexPath:
_willBeginSwiping
_didEndSwiping
_alignedContentMarginGivenMargin:
shouldRestrictOrthogonalAxisDuringInteractiveMovement
_paddingToBoundarySupplementaries
_pinnedSupplementariesShouldOverlap
_supportsBandSelection
_preferredContainerBackgroundColor
interGroupSpacing
setInterGroupSpacing:
contentInsetsReference
setContentInsetsReference:
supplementaryContentInsetsReference
orthogonalScrollingBehavior
setOrthogonalScrollingBehavior:
boundarySupplementaryItems
supplementariesFollowContentInsets
visibleItemsInvalidationHandler
setVisibleItemsInvalidationHandler:
group
setGroup:
pinnedSupplementaryItemIndexes
setPinnedSupplementaryItemIndexes:
decorationItemssDict
contentSize
setContentSize:
_callback
_cornerRadius
_setCornerRadius:
_clipsContentToBounds
_setClipsContentToBounds:
_excludesBoundarySupplementariesFromClipping
_setExcludesBoundarySupplementariesFromClipping:
_clipsBackgroundDecorationsToContent
_setClipsBackgroundDecorationsToContent:
prefersListSolver
setPrefersListSolver:
_pinnedBoundarySupplementaryItemIndexes
_supplementaryItemsDict
_decorationItemsDict
_prefersListSolver
_supplementariesFollowContentInsets
__clipsContentToBounds
__excludesBoundarySupplementariesFromClipping
__clipsBackgroundDecorationsToContent
_interGroupSpacing
_contentInsetsReference
_supplementaryContentInsetsReference
_orthogonalScrollingBehavior
_boundarySupplementaryItems
_visibleItemsInvalidationHandler
_group
_pinnedSupplementaryItemIndexes
_decorationItemssDict
__cornerRadius
_contentSize
T@"NSCollectionLayoutGroup",C,N,V_group
T@"NSIndexSet",C,N,V_pinnedSupplementaryItemIndexes
T@"NSDictionary",R,N
T@"NSDictionary",R,N,V_decorationItemssDict
T{CGSize=dd},N,V_contentSize
callback
T@"<_UICollectionLayoutSectionCallback>",R,N,G_callback,V_callback
Td,N,G_cornerRadius,S_setCornerRadius:,V__cornerRadius
TB,N,G_clipsContentToBounds,S_setClipsContentToBounds:,V__clipsContentToBounds
TB,N,G_excludesBoundarySupplementariesFromClipping,S_setExcludesBoundarySupplementariesFromClipping:,V__excludesBoundarySupplementariesFromClipping
TB,N,G_clipsBackgroundDecorationsToContent,S_setClipsBackgroundDecorationsToContent:,V__clipsBackgroundDecorationsToContent
TB,N,V_prefersListSolver
Td,N,V_interGroupSpacing
Tq,N,V_contentInsetsReference
Tq,N,V_supplementaryContentInsetsReference
Tq,N,V_orthogonalScrollingBehavior
T@"NSArray",C,N,V_boundarySupplementaryItems
TB,N,V_supplementariesFollowContentInsets
T@?,C,N,V_visibleItemsInvalidationHandler
defaultSpacing
flexibleSpacing:
fixedSpacing:
initWithSpacing:isFlexible:
spacing
_hasSpacing
isFlexibleSpacing
isFixedSpacing
_spacing
_isFlexible
Td,R,N
TB,R,N
spacingForLeading:top:trailing:bottom:
initWithLeading:top:trailing:bottom:
edgeOutsets
isSpacingFixedForEdge:
isSpacingFlexibleForEdge:
spacingForEdge:
leading
trailing
bottom
_spacingForEdge:
_leading
_top
_trailing
_bottom
T@"NSCollectionLayoutSpacing",R,N
fractionalWidthDimension:
fractionalHeightDimension:
absoluteDimension:
estimatedDimension:
_dimensionWithDimension:semantic:
initWithDimension:semantic:
isAbsolute
isFractionalWidth
isFractionalHeight
isEstimated
dimension
setDimension:
semantic
setSemantic:
_dimension
_semantic
Tq,N,V_semantic
Td,N,V_dimension
sizeWithWidthDimension:heightDimension:
sizeWithAbsoluteSize:
sizeWithContainerSize
sizeWithContainerWidthFactor:containerHeightFactor:
sizeWithSize:widthSemantic:heightSemantic:
sizeWithWidth:widthSemantic:height:heightSemantic:
initWithSize:widthSemantic:heightSemantic:width:height:
_effectiveSizeForContainer:ignoringInsets:
_effectiveSizeForContainer:
isContainerSize
_isEstimatedForAxis:
widthDimension
setWidthDimension:
heightDimension
setHeightDimension:
widthSemantic
setWidthSemantic:
heightSemantic
setHeightSemantic:
_widthDimension
_heightDimension
_widthSemantic
_heightSemantic
T{CGSize=dd},N,V_size
Tq,N,V_widthSemantic
Tq,N,V_heightSemantic
T@"NSCollectionLayoutDimension",&,N,V_widthDimension
T@"NSCollectionLayoutDimension",&,N,V_heightDimension
supplementaryItemWithLayoutSize:elementKind:containerAnchor:
supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
elementKind
containerAnchor
itemAnchor
item
supplementaryItem
boundarySupplementaryItem
decorationItem
T@"NSString",R,N
T@"NSCollectionLayoutAnchor",R,N
T{NSDirectionalEdgeInsets=dddd},R,N
Tq,R,N
T@"NSCollectionLayoutItem",R,N
T@"NSCollectionLayoutSupplementaryItem",R,N
T@"NSCollectionLayoutBoundarySupplementaryItem",R,N
T@"NSCollectionLayoutDecorationItem",R,N
initWithSize:contentInsets:elementKind:containerAnchor:itemAnchor:zIndex:
setZIndex:
setElementKind:
setContainerAnchor:
setItemAnchor:
canAdjustContentSize
setCanAdjustContentSize:
_canAdjustContentSize
_elementKind
_containerAnchor
_itemAnchor
T@"NSString",&,N,V_elementKind
T@"NSCollectionLayoutAnchor",&,N,V_containerAnchor
T@"NSCollectionLayoutAnchor",&,N,V_itemAnchor
TB,N,V_canAdjustContentSize
Tq,N,V_zIndex
boundarySupplementaryItemWithLayoutSize:elementKind:alignment:
boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:
initWithSize:contentInsets:elementKind:containerAnchor:itemAnchor:zIndex:alignment:offset:extendsBoundary:pinToVisibleBounds:
setPinningZIndex:
_pinningZIndex
copyWithContainerAnchor:itemAnchor:
_setPinningZIndex:
extendsBoundary
setExtendsBoundary:
pinToVisibleBounds
setPinToVisibleBounds:
alignment
offset
_alignment
_extendsBoundary
_pinToVisibleBounds
_offset
Tq,N,G_pinningZIndex,S_setPinningZIndex:,V_pinningZIndex
TB,N,V_extendsBoundary
TB,N,V_pinToVisibleBounds
Tq,R,N,V_alignment
T{CGPoint=dd},R,N,V_offset
backgroundDecorationItemWithElementKind:
decorationItemWithSize:elementKind:containerAnchor:
initWithElementKind:size:contentInsets:containerAnchor:itemAnchor:zIndex:registrationViewClass:isBackgroundDecoration:
isBackgroundDecoration
_registrationViewClass
_setRegistrationViewClass:
_isBackgroundDecoration
__registrationViewClass
TB,R,N,V_isBackgroundDecoration
T#,&,N,S_setRegistrationViewClass:,V__registrationViewClass
layoutAnchorWithEdges:
layoutAnchorWithEdges:absoluteOffset:
layoutAnchorWithEdges:fractionalOffset:
layoutAnchorWithAnchorPoint:
layoutAnchorWithAnchorPoint:offset:
layoutAnchorWithAnchorPoint:unitOffset:
initWithEdges:offset:anchorPoint:offsetIsUnitOffset:
isAbsoluteOffset
isFractionalOffset
_itemFrameForContainerRect:itemSize:itemLayoutAnchor:
edges
setEdges:
setOffset:
anchorPoint
setAnchorPoint:
offsetIsUnitOffset
setOffsetIsUnitOffset:
_offsetIsUnitOffset
_edges
_anchorPoint
TQ,N,V_edges
T{CGPoint=dd},N,V_offset
T{CGPoint=dd},N,V_anchorPoint
TB,N,V_offsetIsUnitOffset
@24@0:8@16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@96@0:8@16{NSDirectionalEdgeInsets=dddd}24@56@64@72@80@88
@16@0:8
B24@0:8@16
v48@0:8{NSDirectionalEdgeInsets=dddd}16
B16@0:8
v24@0:8@?16
{CGSize=dd}24@0:8@16
{NSDirectionalEdgeInsets=dddd}16@0:8
v24@0:8@16
v20@0:8B16
v16@0:8
@"NSCollectionLayoutEdgeSpacing"
@"NSArray"
@"NSCollectionLayoutSize"
@"NSUUID"
@"NSString"
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
q16@0:8
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@40@0:8@16@24q32
@32@0:8@16@?24
@40@0:8@16@24@?32
@40@0:8@16q24q32
@160@0:8@16@24q32@40{NSDirectionalEdgeInsets=dddd}48@80q88@96@104@?112@?120@?128q136@144@152
Q16@0:8
B24@0:8Q16
v24@0:8q16
@?16@0:8
@"NSCollectionLayoutSpacing"
@132@0:8@16{NSDirectionalEdgeInsets=dddd}24q56@64@72@80d88@?96B104@108q116B124B128
@32@0:8@16Q24
d24@0:8d16
d16@0:8
v24@0:8d16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"NSIndexSet"
@"NSDictionary"
@"NSCollectionLayoutGroup"
@"<_UICollectionLayoutSectionCallback>"
{CGSize="width"d"height"d}
@24@0:8d16
@28@0:8d16B24
@48@0:8@16@24@32@40
d24@0:8Q16
@24@0:8Q16
@32@0:8d16q24
@32@0:8{CGSize=dd}16
@32@0:8d16d24
@48@0:8{CGSize=dd}16q32q40
@48@0:8d16q24d32q40
@64@0:8{CGSize=dd}16q32q40@48@56
{CGSize=dd}28@0:8@16B24
@"NSCollectionLayoutDimension"
@40@0:8@16@24@32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSCollectionLayoutSize"16@0:8
@"NSCollectionLayoutAnchor"16@0:8
@"NSCollectionLayoutItem"16@0:8
@"NSCollectionLayoutSupplementaryItem"16@0:8
@"NSCollectionLayoutBoundarySupplementaryItem"16@0:8
@"NSCollectionLayoutDecorationItem"16@0:8
@88@0:8@16{NSDirectionalEdgeInsets=dddd}24@56@64@72q80
@"NSCollectionLayoutAnchor"
@56@0:8@16@24q32{CGPoint=dd}40
@120@0:8@16{NSDirectionalEdgeInsets=dddd}24@56@64@72q80q88{CGPoint=dd}96B112B116
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
@100@0:8@16@24{NSDirectionalEdgeInsets=dddd}32@64@72q80#88B96
v24@0:8#16
@40@0:8Q16{CGPoint=dd}24
@32@0:8{CGPoint=dd}16
@48@0:8{CGPoint=dd}16{CGPoint=dd}32
@60@0:8Q16{CGPoint=dd}24{CGPoint=dd}40B56
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48@64
v24@0:8Q16
v32@0:8{CGPoint=dd}16
