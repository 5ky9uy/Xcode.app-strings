@(#)PROGRAM:BookLibraryCore  PROJECT:BookLibrary-855
333333
N12_GLOBAL__N_111CryptorImplIL19IMStreamingHashType0EEE
N12_GLOBAL__N_17CryptorE
N12_GLOBAL__N_111CryptorImplIL19IMStreamingHashType1EEE
databases/%@/items
includeApplePubBooks
includeItemFlavors
downloadDictionary
assetDictionary
DSPersonID
AppleID
appleId
databases/%@/edit
BLLibraryErrorDomain
BLLibraryErrorIdentifier
BLLibraryErrorPermlink
BLLibraryErrorAssetID
BLLibraryAllowsDownloadsViaBookAssetDaemonForITunesUBooks
v8@?0
default_book_library
com.apple.BookLibrary.BLLibrary
B16@?0@"BLBookItem"8
v24@?0@"BLBookItem"8@"NSError"16
identifier
path
isSample
publication-version
genre
sort-artist
sort-name
scroll-axis
itemId
releaseDate
is-purchased-redownload
artistName
drmVersionNumber
sourceApp
page-progression-direction
itemName
copyright
explicit
sort-album
human-friendly-publication-version
languages
PageProgression
playlistId
playlistName
artwork-template-name
asset-info
file-size
flavor
com.apple.iTunesStore.downloadInfo
purchaseDate
accountInfo
Artist
DSID
Estimated Download Size
Flavor
Genre
Path
Backup-Path
iTunesU Permlink
Item ID
Page Progression Direction
Persistent ID
Publication Version
Release Date
Sort Artist
Sort Name
Storefront ID
Name
usesSharedAsset
Album
Sort Album
Copyright
isExplicit
Human Readable Publication Version
Languages
PlaylistID
isSupplementalContent
BLErrorDomain
message
title
Underlying Error Description
BLKeyHTTPResponseCode
Unknown Error
BLService error
unknown download id (%@)
auto-download
artworkURL
isDeviceBased
isRental
launch-extras-url
metadata
artwork-urls
softwareVersionBundleId
bundle-id
cancel-download-url
UIRequiredDeviceCapabilities
compilation
composerName
description
download-permalink
duration
episode-guid
episode-number
episode-sort-id
genreName
genre-name
high-definition
softwareIcon57x57URL
icon-url
is-auto-download
is-redownload
isSharedResource
songId
kind
network-name
pageProgressionDirection
playlistArtistName
podcast-feed-url
podcast-type
preorder-id
buy-params-256
buyParams
action-params
redownload-params
cloud-id
sagaId
season-number
show-name
longSeasonDescription
thumbnail-url
thumbnail-newsstand-binding-edge
thumbnail-newsstand-binding-type
unmodified-title
videoDetails
year
show-composer
is-apple-music-show
work
movement
movement-number
movement-count
download-id
artistId
composerId
discCount
discNumber
genreId
longDescription
trackCount
trackNumber
artist-id
artist-name
composer-id
disc-count
disc-number
genre-id
item-id
long-description
collection-id
collection-name
release-date
track-count
track-number
preferredAssetFlavor
requestPersistentID
assets
betaExternalVersionIdentifier
downloadKey
fileExtension
hls-playlist-url
chunks
chunkSize
hashes
has-4k
has-dolby-vision
has-hdr
is-hls
isStreamable
rating
rental-id
sinfs
softwareVersionExternalIdentifier
variantId
sgGuid
DownloaderID
ebook
lrpluspub
lrpub
pluspub
yyyy-MM-dd'T'HH:mm:ss'Z'
com.apple.bookassetd
BLService
BLDownloadQueueServiceProgressMonitor
BLServiceDownloadQueue
BLServicePurchaseManager
BLServiceMediaLibraryManagerLog
BLServiceDownloadManager
BLServiceDownloadPipeline
BLServiceDatabaseManager
BLServiceDownloadFilesystem
BLServiceDownloadStreamingZip
com.apple.iBooks.BookLibrary
BLServiceNotification
BLServiceMetadataStore
BLServiceProxy
BookLibrary
BLDaemon
BLBookInstallLog
BLBookCacheDeleteLog
BookLibrary.Metrics
BLUtilitiesLog
BLAudiobookSyncLog
BookLibrary.HLSStreaming
BLJalisco
BLFamily
BLAudiobookMLImporter
BLBooksAskPermissionExtensionLog
BLBooksDiagnosticExtensionLog
storeItemID
downloadID
error
label
rank
system
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
ar-movies
bo-movies
br-movies
bg-movies
cl-movies
co-movies
cr-movies
cy-movies
cz-movies
ec-movies
sv-movies
ee-movies
gt-movies
hn-movies
hu-movies
lv-movies
lt-movies
mt-movies
ni-movies
pa-movies
py-movies
pe-movies
pl-movies
ro-movies
sk-movies
si-movies
uy-movies
ve-movies
jm-movies
gy-movies
sr-movies
gf-movies
do-movies
bn-movies
by-movies
cn-movies
ge-movies
hk-movies
id-movies
is-movies
kg-movies
kh-movies
kr-movies
kz-movies
la-movies
lk-movies
md-movies
mk-movies
mo-movies
my-movies
ph-movies
ru-movies
sg-movies
th-movies
tj-movies
tr-movies
tw-movies
ua-movies
uz-movies
vn-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
riaa
us-cable
apple
Documents
iCloud.com.apple.iBooks.iTunesU
cloudItem
com.apple.iBooks.BLEduCloudContainer.containerQueue
v16@?0@"NSURL"8
mobile
v16@?0@"NSMutableDictionary"8
{ independentSegments: %@
Groups: %@
SegmentInfs: %@
Segments: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
#EXT-X-MEDIA
GROUP-ID
#EXT-X-MAP
#EXTINF
#EXT-X-INDEPENDENT-SEGMENTS
#EXT-X-KEY
#EXT-X-STREAM-INF
#EXT-X-SESSION-DATA
DATA-ID
com.apple.audiobook.rapguid
VALUE
#EXT-X-BITRATE
TYPE
NAME
%@(%@): %@
GroupID: %@ %@
BANDWIDTH
AVERAGE-BANDWIDTH
CODECS
AUDIO
{ Bandwidth: %llu, Average Bandwidth: %llu, codecs: %@, audio: %@
%@ (%@s)%@%@
 Map: 
METHOD
NONE
AES-128
SAMPLE-AES
KEYFORMAT
KEYFORMATVERSIONS
com.apple.streamingkeydelivery
{%@, %@, %@, %@, %@}
login
iTunesMetadata.plist
iTunesArtwork
Books.plist
Purchases.plist
Managed.plist
Shared.plist
Samples.plist
Proofing.plist
Deletes.plist
NSFileReadNoPermissionError
Permission denied: %@
~~~~~HH:mm:ss;yyyy-MM-dd
B32@?0@8Q16^B24
Is iTunes U
Feed URL
MIME Type
Extension
chinese
turkish
polish
ukrainian
iBooks-UniqueId
PersistentID
Cover Path
book-info.cover-image-path
book-info.publisher-unique-id
book-info.unique-id
book-info.package-file-hash
book-info.cover-image-hash
experiences
locType
version
params
confidence
importDate
comments
bookDescription
BKLastOpenedDate
BKFirstOpenedDate
currentReadingLocation
highWaterMark
generation
Publisher Unique ID
isProof
BLLastUserAccessDate
Package Hash
AssetType
Subject
Books
Deletes
primaryLanguage
cover-writing-mode
Ephemeral
Collection ID
purchases
managed
proofing
samples
shared/Books
Library
<%@:%p name=%@ redownloadParameters=%@ storeID=%@ size=%@>
salableAdamId
isPreorder
pricingParameters
productType
BLService Notify Queue
v12@?0i8
com.apple.ibooks.BLService
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
download failed
Download either failed or was cancelled by the user
SSDownloadManagerBookShim
SSDownloadManagerBookShim2
daap.songbitrate
daap.songsamplerate
daap.songformat
daap.songcodectype
daap.songcodecsubtype
daap.songdatakind
daap.songtime
daap.songlongsize
com.apple.itunes.item-redownload-param-2
com.apple.itunes.item-flavor-id
dmap.status
dmap.protocolversion
daap.protocolversion
Client-ATV-Sharing-Version
dmap.itemname
dmap.loginrequired
dmap.timeoutinterval
dmap.supportsautologout
dmap.authenticationmethod
dmap.authenticationschemes
dmap.supportsupdate
dmap.supportspersistentids
dmap.supportsextensions
dmap.supportsbrowse
dmap.supportsquery
dmap.supportsindex
dmap.supportsresolve
dmap.databasescount
ppro
com.apple.itunes.music-sharing-version
com.apple.itunes.playlist-contains-media-type
com.apple.itunes.req-fplay
com.apple.itunes.supportedextensions
daap.supportsextradata
daap.supportsgroups
dmap.utctime
dmap.utcoffset
macAddresses
supportsEditing
com.apple.itunes.supports-fprap
daap.supportssetproperty
manufacturer
model
deviceType
supportsPurchases
dmap.longitemid
dmap.supportslongitemid
dmap.editcommandssupported
dmap.supportsinlinecontaineritems
com.apple.itunes.cloud-purchase-token
com.apple.itunes.reconnect-interval
dmap.itemcount
dmap.containercount
dmap.parentcontainerid
dmap.itemkind
dmap.databasekind
dmap.persistentid
com.apple.itunes.cloud-id
com.apple.itunes.itms-songid
daap.songdiscnumber
com.apple.itunes.store-pers-id
daap.songdisccount
daap.songtracknumber
daap.songtrackcount
daap.songcomposer
daap.songdatemodified
daap.songdatepurchased
daap.songyear
daap.songuserskipcount
daap.songartworkcount
dmap.itemavailable
dmap.itemhidden
com.apple.itunes.mastered-for-itunes
com.apple.itunes.item-flavor-listing
com.apple.itunes.cloud-artwork-token
com.apple.itunes.cloud-artwork-url
com.apple.itunes.cloud-user-id
com.apple.itunes.cloud-purchased-token
com.apple.itunes.adam-id
com.apple.itunes.adam-ids-array
dmap.groupdownloadstatus
daap.baseplaylist
daap.playlistshufflemode
daap.playlistrepeatmode
com.apple.itunes.special-playlist
com.apple.itunes.smart-playlist
com.apple.itunes.rental-start
com.apple.itunes.rental-duration
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-pb-duration
com.apple.itunes.publication-contains-audio
com.apple.itunes.publication-is-picture-book
com.apple.itunes.publication-is-read-aloud
com.apple.itunes.itms-artistid
daap.songuserrating
daap.songcontentrating
daap.songdataurl
daap.songgrouping
daap.songcategory
daap.songhasbeenplayed
daap.songdatereleased
daap.bookmarkable
daap.songbookmark
daap.songuserplaycount
daap.songpodcasturl
daap.sortalbum
daap.sortartist
daap.sortname
com.apple.itunes.is-podcast
com.apple.itunes.series-name
com.apple.itunes.episode-sort
com.apple.itunes.episode-num-str
com.apple.itunes.season-num
com.apple.itunes.artworkchecksum
com.apple.itunes.is-hd-video
com.apple.itunes.has-video
com.apple.itunes.has-chapter-data
com.apple.itunes.movie-info-xml
com.apple.itunes.mediakind
com.apple.itunes.extended-media-kind
com.apple.itunes.content-rating
daap.songdescription
daap.songgenre
daap.songcontentdescription
daap.songlongcontentdescription
daap.groupalbumcount
daap.groupmatchedqueryalbumcount
daap.groupmatchedqueryitemcount
fileData
aspectRatio
macAddress
selected
selectedForVideo
isPlaying
supportsVideo
hasPassword
volume
dmcp.protocolversion
dacp.protocolversion
supportsVolume
supportsMultiSpeakerVolume
supportsPlayStatusUpdate
supportsControlPromptRequests
supportsRemoteLibrarySelection
supportsSpeakerSelection
supportsSetUserRating
supportsBonjourSourcesUpdates
headerItemCharacter
headerItemIndex
headerItemCount
com.apple.itunes.supports-genius-control
com.apple.itunes.saved-genius
name
type
readOnly
value
context
minimum
maximum
com.apple.itunes.is-homeshare
com.apple.itunes.itunes-machine-id
dmap.remotepersistentid
com.apple.itunes.remote-itunes-machine-id
libraryDisplayName
libraryServiceName
libraryServiceType
libraryServiceDomain
daap.songdisabled
dmap.errorresponse
com.apple.itunes.cloud-connect-status
kExtDACPSupportediTunesExtensionsCode
com.apple.itunes.playqueue-warning-threshold
com.apple.itunes.preorder-expected-date
com.apple.itunes.chapter-metadata-url
com.apple.itunes.store.supports-hls-playback
com.apple.itunes.store.hls-playback-url
com.apple.itunes.copyright
com.apple.itunes.flat-chapter-data
com.apple.itunes.store.booklet-item-name
com.apple.itunes.store.booklet-item-store-id
com.apple.itunes.store.booklet-item-redownload-param
com.apple.itunes.store.booklet-item-size
dmap.updatetype
dmap.specifiedtotalcount
dmap.returnedcount
dmap.serverrevision
dmcp.bonjoursourcesrevision
dmap.deletedidlisting
dmap.listing
items
headers
attributes
dmap.itemid
mediaKind
dacp.playerstate
databaseID
com.apple.itunes.itms-playlistid
dmap.containeritemid
dacp.playingtime
dmcp.playstatusrevision
daap.songartist
daap.songalbum
daap.songalbumid
NPGenre
dacp.shufflestate
dacp.availableshufflestates
dacp.repeatstate
dacp.availablerepeatstates
dacp.fullscreen
dacp.fullscreenenabled
dacp.visualizer
dacp.visualizerenabled
com.apple.itunes.can-be-genius-seed
dacp.volumecontrollable
secondScreenAdamID
secondScreenURL
com.apple.itunes.playqueue-mode
com.apple.itunes.manually-queued
com.apple.itunes.num-manually-queued
com.apple.itunes.active-queue-feed-name
boolean
float
uint32
indexed
keyed
string
action
node
group
item
point
image
dpad
touch
undefined
migrationState
storeID
<%@:%p storeID=%lld; migrationState=%lld>
v24@?0@"NSUUID"8@"NSError"16
Unable to parse master HLS Playlist
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
BLJaliscoServerDatabase
box-height
box-width
scale
%@: [%@ %ldx%ld] %@
download-queue-item.default
book
feature-movie
music-video
podcast
tv-episode
videoPodcast
itunes-u
BLDownloadErrorKeyJADownloadQueueToken
BLDownloadErrorKeyRetryInterval
buyParameters
permlink
storeIdentifier
persistentIdentifier
originalURL
target
state
startTime
assetPath
publicationVersion
{ DownloadID: %@ Title: %@ State:%@ Started at: %@}
BLDownloadStateReceived
BLDownloadStatePrepared
BLDownloadStateWaiting
BLDownloadStateDownloading
BLDownloadStatePaused
BLDownloadStateCanceled
BLDownloadStateFailed
BLDownloadStateDownloaded
BLDownloadStateInstallStarted
BLDownloadStateFinished
BLDownloadStateInterrupted
BLDownloadStateDecryptStarted
BLDownloadStateDecryptFinished
BLDownloadStateUnzipStarted
BLDownloadStateUnzipFinished
BLDownloadStateFinalizingStarted
BLDownloadStateFinalizingFinished
BLDownloadStateUnknown
databases/%@/extra_data/cloud-artwork-info
purchaseParameters
isPurchaseRedownload
isAudiobook
isPDF
currency
errorCode
errorDescription
errorDomain
firstUnderlyingErrorCode
firstUnderlyingErrorDomain
firstUnderlyingErrorLocalizedDescription
isUserCancelError
logUUID
permLink
price
responseMetrics
purchaseResponseItems
hasRacGUID
supplementalContentCount
songList
metrics
@sum.isPDF
v24@?0@"AMSAuthenticateResult"8@"NSError"16
v24@?0@"AMSDialogResult"8@"NSError"16
Engagement request not supported for non-UI
v24@?0@"AMSEngagementResult"8@"NSError"16
Sync/.bookSync.lock
IMLockFile
BLLockFileErrorDomain
B32@?0@"NSString"8q16@"NSDictionary"24
http://purl.org/dc/elements/1.1/
unique-identifier
contributor
UTF-8
urn:oasis:names:tc:opendocument:xmlns:container
/a:container/a:rootfiles/a:rootfile[@media-type='application/oebps-package+xml']
full-path
META-INF/container.xml
iBooks Author
epub
ibooks
v24@?0@"BUZipFileArchive"8@"NSError"16
BLLibrarySimulateMultiUser
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
%02x
URLRequest
v24@?0@"BLDownloadManifestResponse"8@"NSError"16
BLJaliscoServerBookletItem
audiobook
preOrder
restore
supplementalContent
suppressNetworkEvaluatorDialogs
userInitiated
permlinkTitle
storeIdentifiersToDownload
accountIdentifier
image-type
validDownloadIDs
Valid Download Ids: %@
BLJaliscoServerItem
BKPurchases
momd
[BLJaliscoServerSource managedObjectModel]
[[NSBundle bundleForClass:[self class]] pathForResource:@'BKPurchases' ofType:@'momd'] failed
BKJaliscoServerSource
Failed to add jalisco Persistent Store: %@
Unable to bring up jalisco core data stack
userUID = %@
server.userUID = %@
identifier = %@ AND server.userUID = %@
BLJaliscoServerInfo
storeID = %@ AND database.identifier = %@ and database.server.userUID = %@
artist
stringValue
database.server.userUID IN %@
(%K == NO OR %K == NULL)
isHidden
parentItem.database.server.userUID IN %@
(parentItem.%K == NO OR parentItem.%K == NULL)
cloudID IN %@
storeID IN %@
purchasedTokenCode != NULL and purchasedTokenCode != 0
(%K == YES)
needsImport
storeDownloadParameters == %@
NOT (storeAccountID IN %@)
storeAccountID = %@
parentItem.storeID IN %@
NSDetailedErrors
booklets
<%s: %p> %@: %@, %@%@supportsVolume:%d, locked:%d, macAddress:%@
AirPlay Video
AirPlay
isPlaying, 
selected v:%f 
%@ %@, %llu, %@, %@, containerItemID = %u, isPreorder = %u, isHidden = %@, Booklets = %@, additionalInfo = %@
daap.songalbumartist
hasVideo
additionalInfo
%llu
application/x-dmap-tagged
application/x-www-form-urlencoded
com.apple.iBooks
Client-Cloud-DAAP-Request-Reason
Client-Cloud-Purchase-Daap-Version
Client-DAAP-Version
X-FM-Dsid
CFBundleShortVersionString
1.1/iBooks-%@
%d.%d
server-info
IMStreamingHash.%p
IMStreamingHash
dispatch_io_create_with_path() returned NULL
v24@?0B8@"NSObject<OS_dispatch_data>"12i20
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
0123456789ABCDEF
BLJaliscoDAAPClientError
StoreDemoMode
com.apple.demo-settings
kJaliscoDAAPClientMOCDidSaveNotification
kJaliscoDAAPClientLastSuccessfulFullUpdateDateDictionary
Jalisco_DAAP_Server_Worker_Queue
Jalisco_DAAP_DSID_Queue
v32@?0@"BLJaliscoServerItem"8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
need store auth to get jalisco items
v12@?0B8
dsid
initiallyLoadingJalisco
need store auth to get family jalisco items
Can't delete jalisco items. Nothing to delete.
AMS bag error - no url for request %@
AMS error - nil request %@
AMS error with creating request in %@
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
<%@:%p url=%@ requestMethod=%ld dsid=%@ reason=%ld>
base-url
v16@?0@8
iBooks-
v16@?0@"NSDictionary"8
purchase-daap
v28@?0@"NSDictionary"8B16@"NSError"20
v24@?0@"NSNumber"8@"NSError"16
temporaryIdentifier
legacyUniqueIdentifier
publisherIdentifier
author
feedURL
fileURL
iTunesU
sample
album
folderName
purgePriority
lastUserAccessDate
assetID
coverImagePath
application/pdf
application/epub+zip
application/x-ibooks+zip
coverData
B16@?0@"NSString"8
<%@(%p)
 identifier='%@'
 temporaryIdentifier='%@'
 legacyUniqueIdentifier='%@'
 storeIdentifier='%@'
 persistentIdentifier='%@'
 publisherIdentifier='%@'
 title='%@'
 author='%@'
 feedURL='%@'
 publicationVersion='%@'
 album='%@'
 folderName='%@'
 mimeType='%@'
 itunesuAssetID='%@'
 type='%@'
 isSample='%@'
 iTunesU='%@'
 permlink='%@'
 path='%@'
 purgePriority='%@'
 accessDate='%@'
retry-after
cloud-daap-client-expired
update-on-app-focus-enabled
update-polling-frequency-seconds
update-polling-frequency-secs
v16@?0d8
database-id
forced-refresh-frequency-minutes
cloudID
full-token
full-url
v16@?0q8
v16@?0@"NSNumber"8
tokenCode
clientID
v20@?0B8@"NSDictionary"12
v20@?0B8@"BLPurchaseDAAPItem"12
v20@?0B8@"NSNumber"12
DAAP_Server_Update_Queue
DAAP_Server_Backoff_Queue
storeID = %@
displayVersion
com.apple.itunes.display-publication-version
isDisabled
purchasedTokenCode
purchaseHistoryID
sortedAuthor
sortedTitle
purchasedAt
storeDownloadParameters
expectedDate
chapterMetadataURLString
hlsPlaylistURLString
storeAccountID
storeID == %@
size
additionalAudiobookInfo
com.apple.ibooks.jalisco.updating
invalid request
Books jalisco purchase
Server-info:
successfully
with error
DB Fetch:
'%@:%d'
(%@)
com.apple.itunes.store.expected-release-date
com.apple.itunes.store.booklet-item-listing
com.apple.itunes.store.booklet-item
v16@?0@"DKDAAPWriter"8
v24@?0@"NSDictionary"8^B16
Fetch items
bl_audiobook_booklet_auto_migration
bl_content_restore_in_bookassetd
bl_pdf_download_in_bookassetd
BKAudiobookStreamingDisabled
v40@?0r^v8{_NSRange=QQ}16^B32
#EXT
v09182016
%@-%@.sqlite
databases
session-id
revision-number
delta
<%@:%p title=%@ author=%@ storeID=%@ storeAccountID=%@ >
NOT (storeID IN %@)
Nil jalisco model
Failed to load model %@
Nil jalisco persistentStore
Failed to create a moc for the persistent store %@
Nil jalisco moc
.*\b%@.*
(%K MATCHES[cd] %@ OR %K MATCHES[cd] %@)
update
com.apple.BLService.DownloadQueue.Download.Progress
com.apple.BLService.DownloadQueue.Download.Complete
com.apple.BLService.DownloadQueue.Download.Failed
com.apple.BLService.DownloadQueue.Purchase.Succeeded
com.apple.BLService.DownloadQueue.Purchase.Failed
com.apple.BLService.DownloadQueue.Server.Restarted
BLDownloadQueueTooManyInstances
Attempting to set an overrideInstance when one is already set.
You must use the BLDownloadQueue singleton before trying to use the BLDownloadQueueNonUI singleton.
v32@?0@"NSString"8@"BLPurchaseResponse"16@"NSError"24
<UNKNOWN>
missing purchase parameters
purchase parameters are required by this API
v24@?0@"BLDownload"8@"NSError"16
This method is deprecated and going away. See <rdar://problem/34630469>
storeItemIdentifier
storePlaylistIdentifier
downloadIdentifier
purchaseErrorInfo
purchaseErrorDomain
purchaseErrorCode
purchaseErrorDescription
downloadPhase
subtitle
collectionArtistName
collectionTitle
thumbnailImageURL
isRestore
isPurchase
storeAccountIdentifier
percentComplete
estimatedTimeRemaining
bytesDownloaded
bytesTotal
ContentRestore: downloadDictionary cannot be nil. Restore will fail
ContentRestore: downloadMetadataDictionary cannot be nil. Restore will fail
Failed to obtain the iTunes Sync lock.
Invalid parameter.  %@
Book already exists in local library.
Book exists locally in shared container but not in current users library.
Error adding shared entry to local plist.  %@
Book does not exist in current users library or the shared library, triggering a download.
Book does not exist in library, triggering a download.
Failed to add to the cloud. Error:  %@
Failed to add permalink %@. Error:  %@
Obtained cloud token.
Not signed in to iCloud. No edu cloud support available.
Warning. Unable to determine path extension from permlink {%@}
Failed to write plist to %@. Error: %@
Failed to add cloud item at %@. Error:  %@
Failed to write plist to %@. Error:  %@
Encountered error doing a coordinated read of %@. Error:  %@
Failed to delete iTunesU file with error:  %@
Failed to read cloud container with error:  %@
Failed to get contents of cloud documents directory. Error:  %@
bookItemForURL: %@
coordinated read taken for: %@
Expected to have a ubiquitous URL but instead got %@
Dropping unsupported key format %{public}@
Found rapguid attribute: %@
Ignoring tag %@
Invalid plist.
IMLibraryPlist: Unfiltered: %d; Filter: %d; Filtered: %d; Filter Hit: %d
IMLibraryPlist: Nothing to filter; Book Count: %d
IMLibraryPlist: Removing sidecar; %@
addDeletedPaths -- rewritePlist %d entries
removeDeletedPaths -- rewritePlist %d entries
Error changing modification date of %@ --  %@
Failed to convert key '%{public}@' hex->decimal: [%@]
Failed to hex->decimal: [%@]
storeIDFromBuyParameters: cannot retrieve storeID from nil buyParameters
isPreOrderFromBuyParameters: cannot retrieve isPreOrder key from nil buyParameters
isAudioBookFromBuyParameters: cannot retrieve productType key from nil buyParameters
[BLServiceProxy] bookassetd has started.
[BLServiceProxy] Shutting down service proxy.
[BLServiceProxy] Attempting to reconnect to bookassetd after interruption.
[BLServiceProxy] Creating connection to bookassetd.
[BLServiceProxy] The connection to bookassetd was interrupted.
[BLServiceProxy] The connection to bookassetd was invalidated.
Remote proxy hit an error:  %@
Synchronous Remote proxy hit an error:  %@
[BLServiceProxy] fetchDownloadListWithReply
[BLServiceProxy] fetchDownloadFromDownloadID
[BLServiceProxy] pauseDownloadWithID
[BLServiceProxy] resumeDownloadWithID
[BLServiceProxy] restartDownloadWithID
[BLServiceProxy] cancelDownloadWithID
[BLServiceProxy] cancelAllActiveDownloadsWithReply
[BLServiceProxy] purchaseWithRequest:uiHostProxy:reply:
[BLServiceProxy] downloadWithPermlink
[BLServiceProxy] requestDownloadWithParameters
[BLServiceProxy] requestDownloadWithMetadata:isRestore
[BLServiceProxy] requestDownloadsWithMetadata:areRestore
[BLServiceProxy] requestDownloadsWithRestoreContentRequestDictionary
[BLServiceProxy] requestDownloadsWithManifestRequest
[BLServiceProxy] flushMetrics
[BLServiceProxy] performAutomaticDownloads
[BLServiceProxy] setAutomaticDownloadEnabled
[BLServiceProxy] reloadFromServerWithReply
[BLServiceProxy] monitorProgressWithReply
[BLServiceProxy] setRacGUID:forStoreID:
[BLServiceProxy] racGUIDforStoreID:
[BLServiceProxy] removeRacGUIDForStoreID:
[BLServiceProxy] setMigrationState:forStoreIDs:
[BLServiceProxy] migrationInfoWithStoreID:
[BLServiceProxy] migrationInfosWithStoreIDs:
[BLServiceProxy] migrationInfosWithStates:
[BLServiceProxy] removeMigrationInfoForStoreID:
[BLServiceProxy] removeAllMigrationInfosExcludingStates:
[BLServiceProxy] prepareForRemoveAppWithReply
[BLServiceProxy] setValueSimulateCrashAtInstallStart:withReply:
[BLServiceProxy] setValueSimulateCrashAtInstallDuringDecrypt:withReply:
[BLServiceProxy] setValueSimulateCrashAtInstallDuringUnzip:withReply:
[BLServiceProxy] setValueSimulateCrashAtInstallDuringFinish:withReply:
[BLServiceProxy] getValueSimulateCrashAtInstallDuringFinishWithReply:
[BLServiceProxy] resetAllCrashSimulationOverridesWithReply:
[BLServiceProxy] setValueSimulateDeviceOutOfSpace:
[BLServiceProxy] getValueSimulateDeviceOutOfSpaceWithReply:
[DownloadQueue]: _cancelAllPausedDownloads
[DownloadQueue]: notifyComplete: for observer %@
[DownloadQueue]: NotifyPurchaseAttemptForRequest: %@
[DownloadQueue]: notifying observer %@ of purchaseAttemptForRequest:
[DownloadQueue]: notifying observer %@ of downloadQueuePurchaseAttemptForIDWithUserInfo
[DownloadQueue]: notifying observer %@ of downloadQueuePurchaseAttemptForID
[DownloadQueue]: Added observer: %@
[DownloadQueue]: Removed observer: %@
(dID=%{public}@) [DownloadQueue]: notifyDidCompleteForDownloadID
(dID=%{public}@) [DownloadQueue]: sendInitialProgressNotificationForDownloadWithStoreID...
(dID=%{public}@) [DownloadQueue]: notifying target observer: %@ of downloadStatesDidChange: %@
(dID=%{public}@) [DownloadQueue]: notifying observer: %@ of downloadStatesDidChange: %@
[DownloadQueue]: nil passed for downloadID to _sendInitialProgressNotificationFor...
(dID=%{public}@) [DownloadQueue]: sendCancelCompletionNotificationForDownloadWithDownloadID
(dID=%{public}@) [DownloadQueue]: sendingCancelComplete for observer %@
[DownloadQueue]: _sendCancelCompleteNotification: nil passed for downloadID
(dID=%{public}@) [DownloadQueue]: notifying percentComplete:[%@]
[DownloadQueue]: _downloadStatusFromDictionary: failed to retrieve downloadID from dictionary %@
(dID=%{public}@) [DownloadQueue] Copied download status %p to download status %p for dictionary %@
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of downloadManagerDownloadsDidChange
[DownloadQueue]: _notifyProgress: nil passed for downloadID
(dID=%{public}@) [DownloadQueue] Obtained download status %p for dictionary %@
(dID=%{public}@) [DownloadQueue]: _postDownloadCompleteNotification: About to notify %lu observers
(dID=%{public}@) [DownloadQueue]: download added, notifying observer %@ of downloadQueueDownloadsDidChange
(dID=%{public}@) [DownloadQueue]: notifying observer %@ download completed
(dID=%{public}@) [DownloadQueue]: notifying observer %@ download completed with error:  %@
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of downloadQueueDownloadsDidChange
[DownloadQueue]: _postDownloadCompleteNotificationWithDictionary: failed to retrieve downloadID from downloadStatus %@
(dID=%{public}@) [DownloadQueue]: purchaseDidCompleteWithResponse
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of purchaseDidComplete
(dID=%{public}@) [DownloadQueue]: purchaseDidFailedWithResponse
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of purchaseDidFail
The object [%@] of class: [%@] could not be converted to neither an NSString nor an NSNumber
The object [%@] of class: [%@] could not be converted to an NSNumber
The object [%@] of class: [%@] could not be converted to an NSDate
[DownloadQueue]: we do not have enough information to post initial progress for this download
(dID=%{public}@) [DownloadQueue]: setting percentComplete 5 percent
[DownloadQueue]: nil downloadID passed to _downloadStatusSToreID:storePlaylistID:orPermLink:downloadID:isPaused:isAudiobook:
[DownloadQueue] didFailWithUserInfo:
[DownloadQueue] downloadCompleteWithUserInfo:
[DownloadQueue] progressWithUserInfo
[DownloadQueue] purchaseFailedWithUserInfo
[DownloadQueue] purchaseSucceededWithUserInfo
[BLDownloadQueueServerProgressObserver] registering to monitor progress.
[BLDownloadQueueServerProgressObserver] Failed registering to monitor progress:  %@
[BLDownloadQueueServerProgressObserver] Successfully registered to monitor progress.
DMAPParser processResponse: couldn't get 8-byte message header
DMAPParser parseStream: got %lx bytes; expected %lx; code '%c%c%c%c'
Attempting to process XML response: %@
Flavor doesn't look correct like the correct size.
setBool being passed a %ld byte value for: <%@>!
setSInt8 being passed a %ld byte value for: <%@>!
setUInt8 being passed a %ld byte value for: <%@>!
setSInt16 being passed a %ld byte value for: <%@>!
setUInt16 being passed a %ld byte value for: <%@>!
setFloat32 being passed a %ld byte value for: <%@>!
setUInt64 being passed a %ld byte value for: <%@>!
xmlcode!
Unknown code: '%c%c%c%c', size=%ld, value=%u
Unknown code: '%c%c%c%c', size=%ld, value=0x%x
Unknown code: '%c%c%c%c', size=%ld
Unknown code: '%c%c%c%c', size=%ld, value=%s
Unable to create service proxy: %@
no streamInfs on masterPlaylist: %@
Downloading master playlist from: %@
Error downloading master playlist: %@
Bad HTTP response when downloading master playlist: %ld
Downloaded master playlist, about to parse it.
Parsed master HLS Playlist but it had no valid media playlist (error was %@)
Unable to parse master HLS Playlist: %@
Parsed master playlist. Out of a total of %lu choices, using streamInf: %@
Downloaded master playlist, about to parse it to get racGUID.
[UIHostServiceProxy]: use out-of-process authenticate
[UIHostServiceProxy]: use out-of-process dialog
[UIHostServiceProxy] received error from AMSSystemAlertDialogTask:  %@
[UIHostServiceProxy] received result from AMSSystemAlertDialogTask for request %@ and calling replay block with result %@
[UIHostServiceProxy]: Engagement request not supported for non-UI
Failed to complete backgound task after file lock. This will most likely result in a crash
Taking plist lock.
Releasing plist lock.
Waiting for plist to get unlocked.
Failed to obtain plist lock.
Error xmlXPathRegisterNs: %d
Error hashing file: %@ --  %@
Error creating zip archive at %@. error:  %@
Error creating zip archive at %@. exception: %@
Failed to remove {%@} file. Error:  %@
Encountered exception parsing %@. %@
Warning: using a completely temporary NSUUID to add the book to the bookshelf
Error attempting to read store id. Error:  %@
Unsupported file type '%@'.
DownloadInstaller: Could not serialize plist:  %@
DownloadInstaller: Wrote plist to: %@
DownloadInstaller: Could not write plist:  %@
[DownloadManifestRequest] Start download manifest request %p: urlRequest=%@
[DownloadManifestRequest] addDownloadsWithManifestRequest for request %p returned error:  %@
[DownloadManifestRequest] addDownloadsWithManifestRequest for request %p completed with response %@.
Error -[NSURL bl_isUbiquitous]:  %@
Error -[NSURL bl_isDownloaded]:  %@
Error -[NSURL bl_isDownloading]:  %@
Error querying bl_isUbiquitousPromise  %@
Unable to initialize BLJaliscoServerSource
Failed to delete database:  %@
Failed to fetch distinct items count:  %@
Failed to fetch all items count:  %@
[BLJaliscoServerSource setupCoreDataStack]: Unable to bring up jalisco core data stack. Exception: %{public}@ %{public}@ %{public}@
It looks like the migration failed:  %@
Failed to add jalisco Persistent Store: %@ %@
Added jalisco Persistent Store: %@ persistentstoreID:%@
[BLJaliscoServerSource persistentStoreCoordinatorWithError]: Unable to bring up jalisco core data stack. Exception: %{public}@ %{public}@ %{public}@
[BLJaliscoServerSource currentJaliscoHistoryToken] token:(%@) from psc:(%@)
[BLJaliscoServerSource currentJaliscoHistoryToken] Failed to get currentJaliscoHistoryToken %@
[BLJaliscoServerSource newManagedObjectContext] Failed to create newManagedObjectContext %@
[BLJaliscoServerSource truncateDatabaseError] Removing store:%@ destroyed:%{BOOL}d
[BLJaliscoServerSource truncateDatabaseError] There's nothing to truncate!
Added new store at storeURL:(%@), persistentstoreID:(%@), storeOptions:(%@) Setup jalisco stack with history token after truncate:(%@)
Trying to refresh store at storeURL:(%@), persistentstoreID:(%@)
Refreshed store at storeURL:(%@), persistentstoreID:(%@) storeOptions:(%@) History token(%@)
Refresh store Failed to re-add store %@
Refresh store failed - no store to refresh %@
Unable to initialize BLJaliscoDAAPClient
ARTWORK: Ignoring timebomb on its %lu try.
Set items hidden: Moc Save Error:  %@
Reset purchase token: Moc Save Error:  %@
Non-empty purchase token storeIDs: Moc Fetch Error:  %@
UpdatePolitely was successful. Clearing storeAuthenticationRequired
Need update test: currentGeneration:%lu pendingGeneration:%lu Needs update:%{BOOL}d
No update required
[BLJaliscoDAAPClient] updatePolitely:%{BOOL}d reason:%ld will update for DSIDs:(%@)
DAAP Setup: Couldn't count items.  %@
Dispatch group: creation thread %@ purchaseDAAPSyncsInFlight %lu - updatePolitely
Dispatch group: entry thread %@ dsid:%@ purchaseDAAPSyncsInFlight %lu - updatePolitely
DAAP Setup, dsid: %@, success: %d
DAAP Update, dsid: %@, success: %d
Dispatch group:leave thread %@ dsid:%@  purchaseDAAPSyncsInFlight %lu - after DAAP update
Dispatch group:leave thread %@ dsid:%@ purchaseDAAPSyncsInFlight %lu - NO DAAP update
Dispatch group:NOTIFY thread %@  purchaseDAAPSyncsInFlight %lu - updatePolitely
[BLJaliscoDAAPClient] no update - no signed in user
updatePolitelyAfterSignOut politely:%{BOOL}d reason:%ld
updatePolitelyAfterSignOut Triggering updatePolitely now for %@
_addPurchaseServerForCurrentUser dsid:%@
_addPurchaseServerForCurrentUser Created daap server for dsid:(%@) currentServerGen:(%lu)
_addPurchaseServerForCurrentUser Finished for dsid:(%@) currentServerGen:(%lu)
_addPurchaseServerForCurrentUser no current account
updatePolitelyAfterSignIn politely:%{BOOL}d reason:%ld
updatePolitelyAfterSignIn Triggering updatePolitely now
updateFamilyPolitely was successful. Clearing storeAuthenticationRequired
Resetting polite timers ... clearing old dictionary:%@
ERROR: Could not reset polite timer.
deleteItemsWithStoreIDs storeIDs:%@
Deleting items %@
Deleted jalisco items %@. Error: %@
Fail to delete jalisco items %@. Error: %@
Couldn't fetch items to delete Error: %@
Adding family member BLPurchaseDAAPServer objects for %@
Removing family member BLPurchaseDAAPServer objects for %@
_processFamilyCircle: Failed to fetch jalisco objects excluding current family members: %@,  %@
_processFamilyCircle: Deleting %lu jalisco objects that are no longer accessible: %@
Moc Save Error:  %@
_processFamilyCircle: No items up for deletion
Could not truncate database. error:  %@
Account Changed. Truncated jalisco database
Account Changed. Resetting and refreshing... with reason %lu. Updating accountNumber from old:%{private}@ to new:%{private}@
Jalisco account stale .. removeAllObjects
Triggering clientDetectedStoreChangeAndAccountChange
Triggering clientDetectedStoreChange
%@: No URL to configure with.
Error with BLURLRequestEncoder creating request %@ %@
%@: Cannot execute request because request is nil %@
daapURL request failed - Request %@, error:  %@
Error fetching %@:  %@
Failed to start the service proxy  %@
Set autoflush enabled: %hhd
Encountered error while flushing metrics  %@
WARNING: Restoring item from cloud item {%@} that is missing a permlink!
WARNING: Attempting to restore item from cloud item that is missing a path!
Encountered error retrieving cover image from promised item. Error:  %@
Failed to coordinate write of thumbnail resource value for %@. Error:  %@
Error encountered removing cover image at %@
Invalid fileURL in setFileURL:%@
Art Request: Couldn't find items to refresh artwork with.  %@
Art Request: updateItemImageURLsIgnoringCache %d dsid:%@
Art Request: will not make request
Art Request: Server isn't setup. Can't do this right now.
Art Request: Can't make request. No DB ID.
Art Request: dsid: %@, RETRY
Art Request: %@, Error getting response:  %@
Art Request: dsid: %@ succeeded
Incomplete artwork response for %@ -- %@
ERROR removing time-bombed artwork:  %@
Error saving artwork state %@
Error saving server version after hiding.  %@
No server version returned in kDMAPEditCommandBulkResponseCode
HideItems: dsid:%@ storeIDS:%@
HideItems: will not make request
HideItems: Server isn't setup. Can't do this right now.
HideItems: Can't make request. No DB ID.
HideItems: Can't make request. Can't create request body
HideItems: retry
HideItems: Error getting response:  %@
HideItems: Finding corresponding jalisco items with cloudIDs(%@)
HideItems: Hiding items locally in database:(%@)
Error saving items after hiding.  %@
HideItems: success %@
DAAP Login success for dsid: %@. Kicking off artwork fetch..
DAAP Login failed.
DAAP Server-Info failed.
Fetching purchase history for %@
1. [BLPurchaseDAAPServer] FetchItemsPolitely: dsid:%@ lastFullRefreshedAt:%@ nextUpdateAt:%@ nextFullRefreshAt:%@
[BLPurchaseDAAPServer] FetchItemsPolitely: Being polite and NOT updating at the current time. %@ > %@
2. [BLPurchaseDAAPServer] dsid: %@ Setup server with reason %ld. Now polling
3. [BLPurchaseDAAPServer] dsid: %@ Last poll before this at:(%@). Finished POLLING, latestVersion:%{public}@ localServerRevision:%{public}@ Fetching database
4a. [BLPurchaseDAAPServer] dsid: %@ Need to fetch a new database politely:%{BOOL}d localServerRevision %@
5. [BLPurchaseDAAPServer] dsid: %@ Got database %@
Couldn't find existing items.  %@
6. [BLPurchaseDAAPServer] dsid: %@ Fetching items _fetchItemsWithLocalVersion with pairs:%@
7. [BLPurchaseDAAPServer] dsid: %@ Fetch items succesful. Saving latestVersion:%@ database:%@ items:%@
Error updating database. %@
7. [BLPurchaseDAAPServer] dsid: %@ CoreData Save items sucess! %@
Error writing kJaliscoDAAPClientLastSuccessfulFullUpdateDateDictionary to preferences.
8. FetchItemsPolitely: Updated kJaliscoDAAPClientLastSuccessfulFullUpdateDateDictionary user default to %@
FetchItemsPolitely %@ completed!
[BLPurchaseDAAPServer] FetchItemsPolitely DAAP Database failed
4b. [BLPurchaseDAAPServer] FetchItemsPolitely No update required, we have the latest revision for dsid:(%@): latest:%{public}@ -- local:%{public}@
[BLPurchaseDAAPServer] FetchItemsPolitely Error polling latest version for dsid:%@.
[BLPurchaseDAAPServer] FetchItemsPolitely fail for %@
Error fetching local info for %@
_updatePersistentServerRevision updating local db with items %@
_updatePersistentServerRevision failed %@
[BLPurchaseDAAPServer] Setup item:%@
ERROR: No token/adam id for %@
[BLPurchaseDAAPServer] Adding items to db:%@ 
NO UPDATE - daap items missing
Ignoring request due to backoff being in effect. Will resume %@
failed with error: %@ %@
Server requested backoff. Trying again at %@
Requestenting silent auth for %@
Silent auth returned: %{BOOL}d
No fallback for authentication
DAAP reconnect %@
Unrecognized DAAP Response: %@
Throttling request until %@
%@ will not make request
%@ dsid:%@ reason:%ld
%@ retry
%@ Error getting response:  %@
%@ Error no response data
PurchaseDAAPServer Server Info request completed %{public}@ for (%@)
Configure(login) will not make request
Configure(login) dsid: %@, Reason: %ld RETRY
Configure(login) dsid: %@, Error getting response %@
Configure(login) parsed data unrecognized %@ %@
PurchaseDAAPServer login request completed %{public}@ for (%@)
Poll update will not make request
Poll update: No Session ID to fetch session with.
Poll Update: Error getting response for %@ %@
Poll Update success LATEST VERSION:%@
Poll Update: Failed for %@
PurchaseDAAPServer Poll Update completed %{public}@ for (%@)
DAAP DB Fetch: Missing a parameter type. dsid:(%@) reason:(%ld) sessionID: %{public}@ revisionNumber:%{public}@ delta:%{public}@
%@ No server revision or databaseRequest to fetch databases from.
%@ dsid: %@, Reason: %ld RETRY
%@ dsid: %@, Error getting response:  %@
_fetchDatabaseWithRequest dsid: %@, Reason: %ld data:%@
[BLPurchaseDAAPServer] _fetchItemsWithLocalVersion dsid:%@ serverVersion:%@ reason:%ld
No database to fetch items with.
%@ dsid: %@, RETRY
[BLPurchaseDAAPServer] _fetchItemsWithLocalVersion dsid:%@ items: %@ SUCCEEDED
Error reading playlist:  %@
BLDAAPDatabasesRequest init failed: Missing a parameter type. dsid:(%@) reason:(%ld) sessionID: %{public}@ revisionNumber:%{public}@ delta:%{public}@
BLJaliscoReadOnlyDAAPClient fetchItemsForDSIDs:excludeStoreIDs:isExplicitRestricted %@ failed. Error: %@
BLJaliscoReadOnlyDAAPClient: Unable to bring up jalisco core data stack. Exception: %{public}@ %{public}@ %{public}@
BLJaliscoReadOnlyDAAPClient: Failed to create a persistent store directory at URL %@. Error: %@
[DownloadQueueNonUI]: using singelton instance: %@
Attempting to set an overrideInstance when one is already set.
You must use the BLDownloadQueue singleton before trying to use the BLDownloadQueueNonUI singleton.
[DownloadQueue]: purchaseWithBuyParameters:uiManager:
purchaseWithBuyParameters:uiManager:
(dID=%{public}@) [DownloadQueue] purchaseWithBuyParameters completed without error
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: this is a preorder purchase download
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: error issuing a purchase request: %@
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: error cancelling download: %@
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: cancelled download
[DownloadQueue]: addDownloadWithPurchaseParameters
[DownloadQueue]: addDownloadWithPermlink
[DownloadQueue]: addDownloadWithPermlink: could not add permlink to container %@.  It may already exist
(dID=%{public}@) [DownloadQueue]: addDownloadWithPermlink: error issuing a permlink download: %@
(dID=%{public}@) [DownloadQueue]: addDownloadWithPermlink: error cancelling download: %@
(dID=%{public}@) [DownloadQueue]: addDownloadWithPermlink: cancelled download.
[DownloadQueue]: addDownloadWithPermlink: could not add permlink to container %@.  It may already exist. Recevied error:  %@
[DownloadQueue]: addDownloadWithMetadata
[DownloadQueue]: addRestoreDownloadWithMetadata
[DownloadQueue]: pauseDownloadWithID
[DownloadQueue]: resumeDownloadWithID
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: error issuing a permlink download.  Error: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: error cancelling download with id: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: cancelled download.
(dID=%{public}@) [DownloadQueue]: error fetching download from downloadID:  %@
[DownloadQueue]: cancelDownloadWithID
[DownloadQueue]: Cancelling all active book downloads.
[DownloadQueue]: Error encountered creating service proxy: %@
[DownloadQueue]: Error encountered cancelling active downloads: %@
[DownloadQueue]: Finished Cancelling all active book downloads.
[DownloadQueue]: prepareForRemoveApp
[DownloadQueue]: Error encountered preparing BookLibrary for app removal. %@
[DownloadQueue]: addDownloadsWithMetadata:
[DownloadQueue]: addRestoreDownloadsWithMetadata:
[DownloadQueue]: addDownloadsWithRestoreContentRequestItems:
[DownloadQueue]: addDownloadsWithManifestRequest:completion: for manifestRequest: %@
addDownloadsWithManifestRequest:completion:
This method is not implemented. Please file a radar.
[DownloadQueue]: processAutomaticDownloadsWithReply
[DownloadQueue]: restartDownloadWithID
[DownloadQueue]: Request reload server download queue
[DownloadQueue]: downloadWithMetadata: error issuing a download request with metadata.  Error: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: error cancelling download: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: cancelled download
[DownloadQueue]: Account Changed.  Cancelling paused downloads
BLDAAPItemsRequest
BLRestoreRequestItem
NSCopying
NSSecureCoding
NSCoding
BLDAAPHideItemsRequest
BLLibrary
BLDownloadMetadata
BLRestoreResponseItem
BLItemContentRating
BLEduCloudContainer
BLHLSPlaylist
BLM3U8ParserDelegate
NSObject
BLHLSMedia
BLHLSGroup
BLHLSStreamInf
BLHLSMap
BLHLSSegment
BLHLSPlaylistState
BLHLSKey
BLDAAPLoginRequest
IMLibraryPlist
BLBundleClass
BLJaliscoBookletItem
BLUtilities
BLServiceProxy
BLServiceProtocol
BLServiceProxyConnectionFactory
BLDownloadQueueServerProgressObserver
BLProgressReceiving
BLServiceProxyConnectionMonitoring
BLPurchaseDAAPParser
DRCP
BLBookletMigrationInfo
BLBookletMigrationStore
BLMetadataStore
BLHLSAudiobookFetcher
BLJaliscoServerDatabase
BLItemArtworkImage
BLDownload
BLDAAPArtRequest
BLPurchaseResponseItem
BLPurchaseResponse
BLUIHostServiceNonUI
BLUIHostServiceProtocol
IMLockFile
BLAdditions
BLLibraryUtility
BLLibraryUtilityAdditions
BLDownloadManifestRequest
BLJaliscoServerBookletItem
BLPurchaseRequest
BLItemImageCollection
BLDownloadManifestResponse
IMUbiquity
BLJaliscoServerSource
JaliscoExtras
UnsignedLongLongValue
BLDownloadStatus
BLPurchaseDAAPItem
BLJaliscoServerInfo
BLURLRequestEncoder
AMSRequestEncoding
BLDAAPServerInfoRequest
BLDAAPBuffer
BLJaliscoDAAPClient
BLPurchaseDAAPServerDelegate
BUAccountsObserving
BLDAAPURLRequest
BLServiceInterface
BLMetrics
BLBookItem
BLPurchaseDAAPServer
BKPurchaseDAAPBackoff
BLM3U8Parser
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BLJaliscoVersion
BLDAAPDatabasesRequest
BLJaliscoItem
BLJaliscoReadOnlyDAAPClient
BLJaliscoServerItem
BLDAAPUpdateRequest
BLRequest
BLDownloadQueueNonUI
initWithDSID:reason:
setContentType:
setBagDatabaseID:
setBody:
setDataEncoding:
bagDatabaseID
stringWithFormat:
URLByAppendingPathComponent:
queryItemWithName:value:
componentsWithURL:resolvingAgainstBaseURL:
arrayWithObjects:count:
setQueryItems:
initWithDSID:reason:databaseID:body:
createDaapURL:
.cxx_destruct
_bagDatabaseID
T@"NSNumber",&,N,V_bagDatabaseID
init
initWithDictionary:
_downloadDictionaryWithDownloadMetadata:additionalDownloadPropertiesDictionary:
_assetDictionaryWithDownloadMetadata:
initWithDownloadDictionary:assetDictionary:
kind
setObject:forKeyedSubscript:
collectionIdentifier
bl_numberWithItemIdentifier:
itemIdentifier
valueForMetadataKey:
title
objectForKeyedSubscript:
addEntriesFromDictionary:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
allocWithZone:
downloadDictionary
copy
setDownloadDictionary:
assetDictionary
setAssetDictionary:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithDownloadMetadataDictionary:additionalDownloadPropertiesDictionary:
_downloadDictionary
_assetDictionary
T@"NSDictionary",&,N,V_downloadDictionary
T@"NSDictionary",&,N,V_assetDictionary
setDaapURL:
initWithDSID:databaseID:body:
_init
dictionaryWithObjects:forKeys:count:
standardUserDefaults
registerDefaults:
libraryPlistWithKind:
_initWithBooksPlist:purchasedPlist:managedPlist:sharedPlist:
sharedPlist
_bookItemsFromPlist:sharedPlist:
array
defaultManager
contents
booksArrayFromPlistEntry:
countByEnumeratingWithState:objects:count:
folderNameFromPlistEntry:
directory
stringByAppendingPathComponent:
fileExistsAtPath:
initWithEntry:basePath:
addObject:
iTunesSyncLockFile
tryLock:
purchasedPlist
_bookItemsFromPlist:
addObjectsFromArray:
booksPlist
managedPlist
errorWithDomain:code:userInfo:
_bookItemFromPermlink:error:
_isMultiUser
permlink
isEqual:
_list:testBlock:
_addSharedBookToPurchasesPlistWithPermlink:error:
_downloadWithPermalink:title:result:
sharedEduCloudContainer
isSignedIn
addBookItem:error:
_allPlists
identifier
isEqualToString:
path
lastPathComponent
addDeletedFiles:
removeItemAtPath:error:
lockWithBlock:error:
identifierFromBookPath:error:
objectAtIndexedSubscript:
storeIdentifier
_findBookItemWithTestBlock:foundWhere:
storeIdFromPlistEntry:
isSampleFromPlistEntry:
boolValue
isSupplementalContentFromPlistEntry:
isPDFFromPlistEntry:
length
permlinkFromPlistEntry:
stringByStandardizingPath
stringByDeletingLastPathComponent
assetIDFromPlistEntry:
temporaryItemIdentifierFromPlistEntry:
fileURLWithPath:
sharedInstance
initWithPeristentIdentifier:permlink:title:
addDownloadWithPermlink:title:completion:
mutableCopy
count
removeObjectAtIndex:
dictionary
setBooksArray:toPlistEntry:
writeToFile:atomically:
removeDeletedPaths:
null
dispatchQueue
_bookItemFromStoreID:permlink:error:
date
setLastUserAccessDate:
_bookItemIsShared:
_addDate:toPlist:bookItem:error:
setAccessDate:toPlistEntry:
initialize
defaultBookLibrary
allBookItems
addITunesUBookToLibraryWithPermlink:title:result:
_lookupBookItemExhaustiveFromPermlink:error:
_addBookItemToEduContainer:error:
removeBookFromLibraryWithIdentifier:error:
_removeBookFromLibraryWithPath:error:
bookIdentifierFromURL:error:
_isShareableBook:
_perUserBookURLForBookURL:
_bookWasOpenedWithStoreID:permlink:date:
setBooksPlist:
setPurchasedPlist:
setManagedPlist:
setSharedPlist:
setDispatchQueue:
_booksPlist
_purchasedPlist
_managedPlist
_sharedPlist
_dispatchQueue
T@"IMLibraryPlist",&,N,V_booksPlist
T@"IMLibraryPlist",&,N,V_purchasedPlist
T@"IMLibraryPlist",&,N,V_managedPlist
T@"IMLibraryPlist",&,N,V_sharedPlist
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
dictionaryWithObjectsAndKeys:
code
domain
lock
mutableCopyWithZone:
unlock
valueForFirstAvailableKey:
_stringValueForValue:
indexInCollection
URLWithString:
initWithImageCollection:
bestImageForSize:
integerValue
initWithUUIDString:
_urlValueForValue:
_dateValueForValue:
_releaseDateValue
collectionName
keyStyle
setValue:forMetadataKey:
_setValueCopy:forMetadataKey:
numberWithBool:
contentRatingDictionary
numberWithInteger:
absoluteString
UUIDString
setArtistName:
subtitle
artistName
_newImageCollectionWithURLString:
_thumbnailArtworkImage
objectForKey:
arrayWithObject:
bl_itemIdentifierValue
_valueForFirstAvailableTopLevelKey:
_newDateFormatter
stringFromDate:
objectAtIndex:
setObject:forKey:
initWithCapacity:
removeObjectForKey:
_setValue:forTopLevelKey:
setValue:forKey:
classForCoder
firstObject
arrayWithObjects:
indexOfObject:
dateFromString:
initWithString:
setURL:
setImageKind:
initWithItemImages:
setDateFormat:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
stringValue
thumbnailImageCollection
imagesForKind:
lastObject
artistIdentifier
betaExternalVersionIdentifier
bundleIdentifier
cloudIdentifier
collectionArtistName
collectionIndexInCollectionGroup
composerIdentifier
composerName
contentRating
downloadPermalink
durationInMilliseconds
episodeIdentifier
episodeSortIdentifier
fullSizeImageURL
genre
genreIdentifier
hlsPlaylistURL
isCompilation
isDeviceBasedVPP
isExplicitContent
hasHDR
isHighDefinition
isRental
isSample
isSharedResource
launchExtrasUrl
longDescription
networkName
numberOfCollectionsInCollectionGroup
numberOfItemsInCollection
racGUID
podcastEpisodeGUID
podcastFeedURL
podcastType
primaryAssetDictionary
purchaseDate
releaseDate
releaseYear
rentalID
seasonNumber
seriesName
longSeasonDescription
setArtistIdentifier:
setBetaExternalVersionIdentifier:
setBundleIdentifier:
setCloudIdentifier:
setCollectionArtistName:
setCollectionIdentifier:
setCollectionIndexInCollectionGroup:
setCollectionName:
setCompilation:
setDeviceBasedVPP:
setComposerIdentifier:
setComposerName:
setContentRating:
setDurationInMilliseconds:
setEpisodeIdentifier:
setEpisodeSortIdentifier:
setExplicitContent:
setFullSizeImageURL:
setGenre:
setGenreIdentifier:
setHighDefinition:
setHlsPlaylistURL:
setIndexInCollection:
setItemIdentifier:
setKind:
setLaunchExtrasUrl:
setLongDescription:
setNetworkName:
setNumberOfCollectionsInCollectionGroup:
setNumberOfItemsInCollection:
setRacGUID:
setPodcastEpisodeGUID:
setPodcastFeedURL:
setPodcastType:
setPurchaseDate:
setReleaseDate:
setReleaseYear:
setRental:
setRentalID:
setSample:
setMusicShow:
setSeasonNumber:
setSharedResource:
setSeriesName:
setLongSeasonDescription:
setShortDescription:
setSortArtistName:
setSortCollectionName:
setSortTitle:
setSubtitle:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
setThumbnailImageURL:
setTitle:
setTransactionIdentifier:
setVariantIdentifier:
setVideoDetailsDictionary:
setViewStoreItemURL:
shortDescription
sortArtistName
sortCollectionName
sortTitle
thumbnailImageURL
transactionIdentifier
variantIdentifier
videoDetailsDictionary
viewStoreItemURL
showComposer
isMusicShow
workName
movementName
movementNumber
movementCount
cancelDownloadURL
copyright
downloaderAccountIdentifier
downloadKey
epubRightsData
fileExtension
isAutomaticDownload
isRedownloadDownload
MD5HashStrings
numberOfBytesToHash
pageProgressionDirection
preferredAssetFlavor
publicationVersion
preOrderIdentifier
primaryAssetURL
redownloadActionParameters
releaseDateString
requestPersistentID
requiredDeviceCapabilities
appleID
setAutomaticDownload:
setCancelDownloadURL:
setCopyright:
setDictionary:
setDownloadKey:
setDownloadPermalink:
setEpubRightsData:
setFileExtension:
setKeyStyle:
setMD5HashStrings:numberOfBytesToHash:
setPageProgressionDirection:
setPublicationVersion:
setPreferredAssetFlavor:
setPreOrderIdentifier:
setPrimaryAssetURL:
setRedownloadActionParameters:
setRedownloadDownload:
setReleaseDateString:
setRequestPersistentID:
setRequiredDeviceCapabilities:
setShouldDownloadAutomatically:
setSinfs:
setAppleID:
shouldDownloadAutomatically
sinfs
_dictionary
_keyStyle
_lock
T@"NSDictionary",R
automaticDownload
TB,GisAutomaticDownload
T@"NSURL",&
T@"NSString",&
deviceBasedVPP
TB,GisDeviceBasedVPP
T@"NSDictionary",&
T@"NSNumber",R
T@"NSData",&
T@"NSURL",C
TB,R,GhasHDR
T@"NSArray",R
T@"NSString",C
redownloadDownload
TB,GisRedownloadDownload
T@"NSNumber",C
T@,C
T@"NSArray",&
T@"NSDate",&
T@"NSNumber",&
downloadID
decodeObjectOfClass:forKey:
storeItemID
error
setStoreItemID:
setDownloadID:
setError:
initWithStoreItemID:downloadID:error:
success
_storeItemID
_downloadID
_error
T@"NSNumber",&,N,V_storeItemID
T@"NSString",C,N,V_downloadID
T@"NSError",&,N,V_error
TB,R,N
intValue
ratingSystemFromString:
_setValue:forProperty:
_setValueCopy:forProperty:
stringForRatingSystem:
caseInsensitiveCompare:
rank
ratingDescription
ratingLabel
ratingSystem
setRank:
setRatingDescription:
setRatingLabel:
setRatingSystem:
valueForProperty:
T@"NSDictionary",R,N
Tq,N
T@"NSString",C,N
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
containerQueue
containerURL
initWithEduCloudData:path:
pathExtension
identifierFromPermlink
stringByAppendingPathExtension:
documentsURL
fileNameForPermlink:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
cloudToken
cloudUrlForPermlink:
isUbiquitousItemAtURL:
initWithFilePresenter:
writeBinaryPropertyList:toPath:error:
coordinateWritingItemAtURL:options:error:byAccessor:
_writePlist:toURL:error:
setUbiquitous:itemAtURL:destinationURL:error:
attributesOfItemAtPath:error:
fileOwnerAccountName
setAttributes:ofItemAtPath:error:
contentsOfDirectoryAtPath:error:
coordinateReadingItemAtURL:options:error:byAccessor:
removeItemAtURL:error:
fileURL
_setCloudCoverImageData:
_cloudDictionaryRepresentation
_addOrUpdateCloudEntryWithDictionary:error:
_coordinatedReadOfPromisesWithError:
hasSuffix:
dictionaryWithContentsOfFile:
dictionaryAsBookItem:path:
arrayWithArray:
hash
dictionaryWithDictionary:
performMetadataActionOnCloudURL:action:
isUbiquitous
containsObject:
removeBookItem:error:
updateBookItem:error:
bookItemForURL:
bookItemForPermlink:
bookItemsForPermlinks:
setCloudToken:
setContainerURL:
setContainerQueue:
_documentsURL
_cloudToken
_containerURL
_containerQueue
T@,&,N,V_cloudToken
T@"NSURL",R,N,V_documentsURL
T@"NSURL",&,N,V_containerURL
T@"NSObject<OS_dispatch_queue>",&,N,V_containerQueue
independentSegments
groups
debugDescription
appendFormat:
streamInfs
segments
initWithData:
_rewritePlaylistWithParser:toURL:requestedBitrates:error:
initWithURL:
setCollectForRewrite:
initWithRequestedBitrates:
_parseUsingParser:error:
rewriteWithURL:
setDelegate:
setState:
parseWithError:
state
mutableGroups
initWithGroupID:media:
enumerateKeysAndObjectsUsingBlock:
setGroups:
mutableStreamInfs
setStreamInfs:
mutableSegments
setSegments:
setIgnoreSegments:
_playlistUsingParser:ignoreSegments:error:
playlistParsingURL:ignoreSegments:error:
currentStreamInf
setCurrentStreamInf:
setUrl:
ignoreSegments
currentDuration
currentMap
currentKey
initWithURL:duration:map:key:
setCurrentDuration:
setPropertiesFromAttributeList:
setCurrentMap:
componentsSeparatedByString:
doubleValue
setIndependentSegments:
isFormatSupported
setCurrentKey:
keyFormat
requestedBitrates
averageBandwidthFallbackToPeak
numberWithUnsignedLongLong:
rewritePlaylistData:toURL:requestedBitrates:error:
rewritePlaylistURL:toURL:requestedBitrates:error:
playlistParsingData:error:
playlistParsingURL:error:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
TQ,R
T#,R
T@"NSString",R,C
parser:lineIsURL:
parser:lineIsTag:value:attributeList:
parser:lineIsComment:
parserShouldCollectLine:
keys
uniqueKeys
setUniqueKeys:
setRequestedBitrates:
_independentSegments
_ignoreSegments
_groups
_streamInfs
_segments
_racGUID
_state
_uniqueKeys
_requestedBitrates
T@"NSArray",&,N,V_groups
T@"NSArray",&,N,V_streamInfs
T@"NSArray",&,N,V_segments
TB,N,V_independentSegments
TB,N,V_ignoreSegments
T@"BLHLSPlaylistState",&,N,V_state
T@"NSMutableSet",&,N,V_uniqueKeys
T@"NSArray",&,N,V_requestedBitrates
T@"NSUUID",&,N,V_racGUID
T@"NSSet",R,N
name
type
_type
_url
_name
T@"NSString",R,N,V_type
T@"NSURL",R,N,V_url
T@"NSString",R,N,V_name
groupID
media
_groupID
_media
T@"NSString",R,N,V_groupID
T@"NSArray",R,N,V_media
bandwidth
averageBandwidth
codecs
audio
_bandwidth
_averageBandwidth
_codecs
_audio
T@"NSURL",&,N,V_url
TQ,R,N,V_bandwidth
TQ,R,N,V_averageBandwidth
TQ,R,N
T@"NSString",R,N,V_codecs
T@"NSString",R,N,V_audio
duration
numberWithDouble:
_map
_duration
_key
T@"BLHLSMap",R,N,V_map
Td,R,N,V_duration
T@"BLHLSKey",R,N,V_key
setMutableGroups:
setMutableSegments:
setMutableStreamInfs:
_mutableGroups
_currentMap
_currentDuration
_mutableSegments
_currentStreamInf
_mutableStreamInfs
_currentKey
T@"NSMutableDictionary",&,N,V_mutableGroups
T@"BLHLSMap",&,N,V_currentMap
Td,N,V_currentDuration
T@"NSMutableArray",&,N,V_mutableSegments
T@"BLHLSStreamInf",&,N,V_currentStreamInf
T@"NSMutableArray",&,N,V_mutableStreamInfs
T@"BLHLSKey",&,N,V_currentKey
keyFormatVersions
method
isEqualToHLSKey:
_method
_keyFormat
_keyFormatVersions
Tq,R,N,V_method
T@"NSString",R,N,V_keyFormat
T@"NSString",R,N,V_keyFormatVersions
T@"NSString",R,N,V_iv
unsignedLongLongValue
bl_hlsUnsignedIntegerValue
scanUnsignedLongLong:
setPath:
setDirectory:
bu_booksRepositoryURL
purchasesRepositoryPath
managedRepositoryPath
sharedRepositoryPath
proofingRepositoryPath
sampleRepositoryPath
stashedSampleRepositoryPath
_initWithDirectory:fileName:
unfilteredSidecarContents
setDeletesArray:toPlistEntry:
sidecarPath
initWithContentsOfFile:
propertyListWithData:options:format:error:
raise:format:
p_contents:
unfilteredContents
deletesArrayFromPlistEntry:
sortedArrayUsingFunction:context:
compare:
sortedArrayUsingSelector:
p_rewriteSidecarWithDeletes:
initWithArray:
allObjects
bumpModificationDate
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
bookEpubIdFromPlistEntry:
uniqueIdFromPlistEntry:
hasPrefix:
lookupFolderNameFromAssetID:contents:
entryForAssetID:contents:
publicationVersionFromPlistEntry:
publicationVersionNumberFromPlistEntry:
humanReadablePublicationVersionFromPlistEntry:
pageProgressionFromPlistEntry:
languageFromPlistEntry:
coverWritingModeFromPlistEntry:
scrollDirectionFromPlistEntry:
backupFolderNameFromPlistEntry:
keyNameForAuthor
keyNameForSortAuthor
keyNameForTitle
keyNameForSortTitle
keyNameForGenre
keyNameForExplicitContent
keyNameForProofedAsset
keyNameForIsEphemeral
keyNameForDeletesArray
keyNameForBooksArray
lowercaseString
keyNameForPublisherUniqueID
keyNameForPublicationVersion
keyNameForHumanReadablePublicationVersion
keyNameForPageProgression
keyNameForAssetType
languagesFromPlistEntry:
primaryLanguageFromPlistEntry:
initWithObjectsAndKeys:
assetIDFromPlistEntry:forAssetAtPath:
dcIdentifierFromBookPath:
generateFileUniqueIdFromPath:
keyNameForCoverWritingMode
keyNameForScrollDirection
keyNameForLanguages
keyNameForPrimaryLanguage
keyNameForUniqueId
keyNameForAccessDate
keyNameForPath
keyNameForBackupPath
keyNameForSampleAsset
valueForKeyPath:
keyNameForCollectionId
scannerWithString:
scanHexLongLong:
keyNameForStorePlaylistId
collectionIdFromPlistEntry:
keyNameForIsSupplementalContent
keyNameForStoreId2
keyNameForStoreId
keyNameForImportDate
publisherUniqueIDFromItunesMetadataEntry:
uniqueIDFromItunesMetadataEntry:
packageFileHashFromItunesMetadataEntry:
URLByAppendingPathComponent:isDirectory:
sharedContainerURL
entryForAssetURL:contents:
isManagedBookFromURL:
lookupAssetURLStringFromAssetID:contents:
lookupPublicationVersionFromAssetID:contents:
lookupPublicationVersionNumberFromAssetID:contents:
lookupHumanReadablePublicationVersionFromAssetID:contents:
lookupPageProgressionFromAssetID:contents:
lookupLanguageFromAssetID:contents:
lookupCoverWritingModeFromAssetID:contents:
lookupScrollDirectionFromAssetID:contents:
lookupBackupFolderNameFromAssetID:contents:
authorFromPlistEntry:
sortAuthorFromPlistEntry:
titleFromPlistEntry:
sortTitleFromPlistEntry:
genreFromPlistEntry:
isExplicitContentFromPlistEntry:
isProofedAssetFromPlistEntry:
isEphemeralFromPlistEntry:
persistentIDFromPlistEntry:
albumFromPlistEntry:
isItunesUFromPlistEntry:
feedURLFromPlistEntry:
mimeTypeFromPlistEntry:
extensionFromPlistEntry:
assetTypeFromPlistEntry:
accessDateFromPlistEntry:
coverPathFromPlistEntry:
storePlaylistIdFromPlistEntry:
importDateFromPlistEntry:
assetIDFromItunesMetadataEntry:
coverPathFromItunesMetadataEntry:
coverHashFromItunesMetadataEntry:
titleFromItunesMetadataEntry:
endOfBookExperiencesFromItunesMetadataEntry:
experienceKindFromExperienceEntry:
experienceLocationFromExperienceEntry:
experienceLocationTypeFromExperienceEntry:
experienceVersionFromExperienceEntry:
experienceParamsFromExperienceEntry:
experienceConfidenceFromExperienceParamEntry:
keyNameForComments
keyNameForBookDescription
keyNameForYear
keyNameForLastOpened
keyNameForFirstOpened
keyNameForRating
keyNameForReadingLocation
keyNameForHighWaterMark
keyNameForGeneration
keyNameForFlavor
keyNameForSubject
booksRepositoryPath
calculateChecksum
isPathInDirectory:
_kind
_path
_directory
Tq,N,V_kind
T@"NSString",C,N,V_path
T@"NSString",C,N,V_directory
T@"NSString",R,N
bundleForClass:
storeDownloadParameters
setStoreDownloadParameters:
storeID
setStoreID:
size
setSize:
itemWithServerBookletItem:
arrayWithServerBookletItems:
_title
_storeDownloadParameters
_storeID
_size
T@"NSString",C,N,V_title
T@"NSString",C,N,V_storeDownloadParameters
T@"NSString",C,N,V_storeID
T@"NSNumber",C,N,V_size
stringByRemovingPercentEncoding
buyParametersValueForKey:fromBuyParams:
longLongValue
numberWithLongLong:
storeIDFromBuyParameters:
isPreOrderFromBuyParameters:
isAudioBookFromBuyParameters:
initWithProgressReceiver:error:
_createAndStartConnection
shutdown
dealloc
invalidate
connectionWithMachServiceName:options:
setConnection:
mainInterface
connection
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
progressReceiver
progressInterface
setExportedInterface:
setExportedObject:
resume
connectionMonitor
reconnectingToServiceForProxy:
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
_remoteObjectWithErrorHandler:
fetchDownloadListWithReply:
fetchDownloadFromDownloadID:withReply:
pauseDownloadWithID:withReply:
resumeDownloadWithID:withReply:
restartDownloadWithID:withReply:
cancelDownloadWithID:withReply:
cancelAllActiveDownloadsWithReply:
purchaseWithRequest:uiHostProxy:reply:
downloadWithPermlink:title:reply:
requestDownloadWithParameters:reply:
requestDownloadWithMetadata:isRestore:reply:
requestDownloadsWithMetadata:areRestore:reply:
requestDownloadsWithRestoreContentRequestItems:reply:
requestDownloadsWithManifestRequest:uiHostProxy:reply:
flushMetricsWithReply:
processAutomaticDownloadsWithReply:
setAutomaticDownloadEnabled:uiHostProxy:reply:
reloadFromServerWithReply:
monitorProgressWithReply:
_synchronousRemoteObjectWithErrorHandler:
setRacGUID:forStoreID:withReply:
racGUIDForStoreID:withReply:
removeRacGUIDForStoreID:withReply:
setMigrationState:forStoreIDs:withReply:
migrationInfoWithStoreID:withReply:
migrationInfosWithStoreIDs:withReply:
migrationInfosWithStates:withReply:
removeMigrationInfoForStoreID:withReply:
removeAllMigrationInfosExcludingStates:withReply:
prepareForRemoveAppWithReply:
setValueSimulateCrashAtInstallStart:withReply:
setValueSimulateCrashAtInstallDuringDecrypt:withReply:
setValueSimulateCrashAtInstallDuringUnzip:withReply:
setValueSimulateCrashAtInstallDuringFinish:withReply:
getCrashSimulationOverrideValuesWithReply:
resetAllCrashSimulationOverridesWithReply:
setValueSimulateDeviceOutOfSpace:withReply:
getValueSimulateDeviceOutOfSpaceWithReply:
initWithError:
setConnectionMonitor:
notifyToken
setNotifyToken:
_connectionLock
_notifyToken
_connectionMonitor
_connection
_progressReceiver
T@"NSXPCConnection",&,N,V_connection
T@"<BLProgressReceiving>",R,N,V_progressReceiver
Tq,N,V_state
Ti,N,V_notifyToken
T@"<BLServiceProxyConnectionMonitoring>",W,N,V_connectionMonitor
initWithMachServiceName:options:
hashTableWithOptions:
activeDownloads
observers
allValues
downloadPhase
setDownloadPhase:
downloadQueue:downloadStates:didCompleteWithError:
downloadQueue
setActiveDownloads:
downloadQueue:purchaseAttemptForRequest:
downloadQueue:purchaseAttemptForID:buyParams:isAudioBook:userInfo:
buyParameters
isAudiobook
analyticsInfo
downloadQueue:purchaseAttemptForID:buyParams:isAudioBook:
_postUpdatesForCurrentlyPausedDownloadsForObserver:
removeObject:
_downloadStatusStoreID:storePlaylistID:orPermLink:downloadID:title:collectionTitle:assetKind:isPaused:
downloadQueue:downloadStatesDidChange:
_stringFromObject:
_numberFromObject:
setStorePlaylistID:
setPermLink:
setPercentComplete:
setEstimatedTimeRemaining:
setTransferBytesWritten:
setTransferBytesExpected:
setCollectionTitle:
setAssetKind:
setIsAudiobook:
setIsRestore:
setIsSample:
setIsPurchase:
_dateFromObject:
unsignedLongValue
setPersistentIdentifier:
setStoreAccountIdentifier:
serviceProxy
storePlaylistIdentifier
collectionTitle
sendInitialProgressNotificationForDownloadWithStoreID:storePlaylistID:orPermlink:downloadID:title:collectionTitle:assetKind:isPaused:targetObserver:
_downloadStatusFromDictionary:outParamNewlyTrackedDownload:
downloadQueueDownloadsDidChange:
downloadQueue:purchasedDidCompleteWithResponse:
downloadQueue:purchasedDidFailWithResponse:
_postDownloadCompleteNotificationWithDictionary:failed:
_postDownloadProgressNotificationWithDictionary:
defaultCenter
postNotificationName:object:userInfo:
progressWithUserInfo:
didFailWithUserInfo:
downloadCompleteWithUserInfo:
purchaseSucceededWithUserInfo:
purchaseFailedWithUserInfo:
initWithDownloadQueue:
cancelAllPausedDownloads
notifyPurchaseAttemptForRequest:
registerObserver:
unregisterObserver:
notifyDidCompleteForDownloadID:
downloads
sendCancelCompletionNotificationForDownloadWithDownloadID:
purchaseDidCompleteWithResponse:
purchaseDidFailedWithResponse:
setServiceProxy:
setObservers:
setDownloadQueue:
_observersLock
_activeDownloadsLock
_serviceProxy
_observers
_activeDownloads
_downloadQueue
T@"NSHashTable",&,N,V_observers
T@"BLServiceProxy",&,N,V_serviceProxy
T@"NSMutableDictionary",&,N,V_activeDownloads
T@"BLDownloadQueueNonUI",W,N,V_downloadQueue
T@"NSArray",R,N
stringByReplacingOccurrencesOfString:withString:
characterAtIndex:
appendBytes:length:
decodeData:
bytes
processResponseCode:bytes:count:
initWithBytes:length:encoding:
dataWithBytes:length:
unknownCode:bytes:size:
processFlavor:size:
setUInt16:size:inDict:forKey:
setUInt32:size:inDict:forKey:
setString:size:inDict:forKey:
setUInt8:size:inDict:forKey:
setUInt64:size:inDict:forKey:
initWithBool:
initWithChar:
initWithUnsignedChar:
initWithShort:
initWithUnsignedShort:
dateWithTimeIntervalSince1970:
initWithUnsignedInt:
initWithFloat:
SwapInt64BigToHost:size:
initWithUnsignedLongLong:
parseUTF8String:length:
setBool:size:inDict:forKey:
parseMACAddressListing:count:
item
setItemID:
parseDict:size:intoDict:
setName:
setDate:size:inDict:forKey:
processFlavors:size:
setDownloadStatus:
setContainerItemID:
setSongalbum:
setSongartist:
setSongalbumartist:
setSongalbumid:
processXMLContent:count:
parseUnicodeCharacter:count:
typeForDRCPValueType:
setFloat32:size:inDict:forKey:
parseListingCollection:count:capacity:
parseBookletListing:count:
updateItemWithDictionary:
freeze
parseBookletItem:count:
arrayWithCapacity:
parseListingItem:count:
dictionaryWithCapacity:
parseDeletedIDsList:count:
parseBrowseResults:count:
removeAllObjects
parseControlPromptCollection:count:
parseServerInfo:count:
parseLogin:count:
parseListingHeader:count:
parseError:count:
parseDACPPropertyResponse:count:
parseControlPromptResponse:count:
parseGetSpeakersResponse:count:
decodeHexString:
setSInt8:size:inDict:forKey:
setSInt16:size:inDict:forKey:
parseContentCodes:count:
migrationState
setMigrationState:
initWithStoreID:migrationState:
_migrationState
Tq,N,V_migrationState
Tq,N,V_storeID
setWithObject:
migrationInfosWithStates:completion:
setMigrationState:forStoreIDs:error:
migrationInfosWithStoreIDs:completion:
migrationInfosWithState:completion:
removeAllMigrationInfosExcludingStates:error:
T@"BLServiceProxy",R,N,V_serviceProxy
setRacGUID:forStoreID:error:
racGUIDForStoreID:result:
removeRacGUIDForStoreID:error:
defaultSessionConfiguration
setAllowsCellularAccess:
set_requiresPowerPluggedIn:
setWaitsForConnectivity:
set_sourceApplicationBundleIdentifier:
sessionWithConfiguration:delegate:delegateQueue:
session
statusCode
preferredStreamFromMasterPlaylist:
bu_errorWithDomain:code:description:underlyingError:
downloadTaskWithURL:completionHandler:
initCanUseCellularData:powerRequired:bundleID:
setupDownloadTaskForFetchingMasterPlaylistAndSelectingStreamFromMasterPlaylistURL:completion:
getRacGUIDFromMasterPlaylistURL:completion:
_session
T@"NSURLSession",R,N,V_session
entityForName:inManagedObjectContext:
initWithEntity:insertIntoManagedObjectContext:
initIntoManagedObjectContext:
T@"NSString",&,D,N
server
T@"BLJaliscoServerInfo",&,D,N
items
T@"NSSet",&,D,N
imageScale
floatValue
imageKind
width
height
numberWithFloat:
_setValue:forKey:
substringToIndex:
stringByAppendingFormat:
initWithArtworkDictionary:
imageSize
setImageKindWithTypeName:variantName:
setValue:forProperty:
URLString
_imageKind
T{CGSize=dd},R,N
T@"NSString",C,N,V_imageKind
T@"NSURL",&,N
Td,R,N
setBuyParameters:
setPermlink:
setStoreIdentifier:
setOriginalURL:
setTargetDownloadDirectory:
decodeIntegerForKey:
setStartTime:
setAssetPath:
originalURL
targetDownloadDirectory
encodeInteger:forKey:
startTime
assetPath
persistentIdentifier
setStorePlaylistIdentifier:
clientIdentifier
setClientIdentifier:
fileSize
setFileSize:
lastStateChangeTime
setLastStateChangeTime:
hashType
setHashType:
md5HashStrings
setMd5HashStrings:
setNumberOfBytesToHash:
serverNumberOfBytesToHash
setServerNumberOfBytesToHash:
setIsAutomaticDownload:
isRestore
accountID
setAccountID:
familyAccountID
setFamilyAccountID:
isZipStreamable
setIsZipStreamable:
dpInfo
setDpInfo:
sinfData
setSinfData:
isPurchase
isLocalCacheServer
setIsLocalCacheServer:
encryptionKey
setEncryptionKey:
salt
setSalt:
cleanupPending
setCleanupPending:
localizedStringFromDate:dateStyle:timeStyle:
transferProgressFraction
_targetDownloadDirectory
_startTime
_assetPath
_buyParameters
_permlink
_storeIdentifier
_storePlaylistIdentifier
_clientIdentifier
_persistentIdentifier
_transactionIdentifier
_cancelDownloadURL
_fileSize
_lastStateChangeTime
_hashType
_md5HashStrings
_numberOfBytesToHash
_serverNumberOfBytesToHash
_publicationVersion
_isAutomaticDownload
_isRestore
_downloadKey
_accountID
_familyAccountID
_isZipStreamable
_dpInfo
_sinfData
_isSample
_isPurchase
_purchaseDate
_isLocalCacheServer
_originalURL
_encryptionKey
_salt
_cleanupPending
_artistName
_subtitle
_collectionArtistName
_collectionTitle
_genre
_thumbnailImageURL
T@"NSString",C,N,V_url
T@"NSString",C,N,V_targetDownloadDirectory
T@"NSDate",C,N,V_startTime
T@"NSString",C,N,V_assetPath
T@"NSString",C,N,V_buyParameters
T@"NSString",C,N,V_permlink
T@"NSNumber",&,N,V_storeIdentifier
T@"NSNumber",&,N,V_storePlaylistIdentifier
T@"NSString",C,N,V_clientIdentifier
T@"NSNumber",&,N,V_persistentIdentifier
T@"NSString",C,N,V_transactionIdentifier
T@"NSString",C,N,V_cancelDownloadURL
TQ,N,V_fileSize
T@"NSDate",C,N,V_lastStateChangeTime
T@"NSString",C,N,V_hashType
T@"NSString",C,N,V_md5HashStrings
Tq,N,V_numberOfBytesToHash
T@"NSNumber",&,N,V_serverNumberOfBytesToHash
T@"NSNumber",&,N,V_publicationVersion
T@"NSNumber",&,N,V_isAutomaticDownload
T@"NSNumber",&,N,V_isRestore
T@"NSString",C,N,V_downloadKey
T@"NSNumber",&,N,V_accountID
T@"NSNumber",&,N,V_familyAccountID
T@"NSNumber",&,N,V_isZipStreamable
T@"NSData",C,N,V_dpInfo
T@"NSData",C,N,V_sinfData
T@"NSNumber",&,N,V_isSample
T@"NSNumber",&,N,V_isPurchase
T@"NSDate",&,N,V_purchaseDate
T@"NSNumber",&,N,V_isLocalCacheServer
T@"NSString",C,N,V_originalURL
T@"NSString",C,N,V_encryptionKey
T@"NSString",C,N,V_salt
T@"NSNumber",&,N,V_cleanupPending
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_collectionArtistName
T@"NSString",C,N,V_collectionTitle
T@"NSString",C,N,V_genre
T@"NSString",C,N,V_kind
T@"NSString",C,N,V_thumbnailImageURL
decodeBoolForKey:
metadata
purchaseParameters
isPurchaseRedownload
encodeBool:forKey:
isPDF
setItem:
setMetadata:
setPurchaseParameters:
setIsPurchaseRedownload:
setIsPDF:
_isPurchaseRedownload
_isAudiobook
_isPDF
_item
_metadata
_purchaseParameters
T@"NSDictionary",C,N,V_item
T@"NSDictionary",C,N,V_metadata
T@"NSString",C,N,V_purchaseParameters
TB,N,V_isPurchaseRedownload
TB,N,V_isAudiobook
TB,N,V_isPDF
responseDictionary
subarrayWithRange:
purchase
buyParams
logUUID
_updatePropertiesFromPurchaseError:
localizedDescription
underlyingErrors
bl_isUserCancelError
initWithAMSPurchaseResult:
currency
errorCode
errorDescription
errorDomain
firstUnderlyingErrorCode
firstUnderlyingErrorDomain
firstUnderlyingErrorLocalizedDescription
isUserCancelError
permLink
price
responseMetrics
purchaseResponseItems
hasRacGUID
supplementalContentCount
setCurrency:
setErrorCode:
setErrorDescription:
setErrorDomain:
setFirstUnderlyingErrorCode:
setFirstUnderlyingErrorDomain:
setFirstUnderlyingErrorLocalizedDescription:
setIsUserCancelError:
setLogUUID:
setPrice:
setResponseMetrics:
setPurchaseResponseItems:
setHasRacGUID:
setSupplementalContentCount:
initWithPurchase:error:
_hasRacGUID
_isUserCancelError
_currency
_errorCode
_errorDescription
_errorDomain
_logUUID
_permLink
_price
_responseMetrics
_supplementalContentCount
_purchaseResponseItems
_firstUnderlyingErrorCode
_firstUnderlyingErrorDomain
_firstUnderlyingErrorLocalizedDescription
T@"NSString",C,N,V_currency
T@"NSNumber",C,N,V_errorCode
T@"NSString",C,N,V_errorDescription
T@"NSString",C,N,V_errorDomain
T@"NSString",C,N,V_logUUID
T@"NSString",C,N,V_permLink
T@"NSString",C,N,V_price
T@"NSDictionary",C,N,V_responseMetrics
T@"NSNumber",&,N,V_storeID
T@"NSArray",&,N,V_purchaseResponseItems
TB,N,V_hasRacGUID
T@"NSNumber",C,N,V_supplementalContentCount
T@"NSNumber",C,N,V_firstUnderlyingErrorCode
T@"NSString",C,N,V_firstUnderlyingErrorDomain
T@"NSString",C,N,V_firstUnderlyingErrorLocalizedDescription
TB,N,V_isUserCancelError
initWithRequest:
performAuthentication
addFinishBlock:
present
finishWithError:
handleAuthenticateRequest:withReply:
handleDialogRequest:withReply:
handleEngagementRequest:withReply:
iTunesSyncLockFilePath
initWithPath:
locked
fileSystemRepresentation
backgroundTaskDelegate
bl_beginBackgroundTaskWithName:expirationHandler:
_lock:blocking:
bl_endBackgroundTask:
setBackgroundTaskDelegate:
T@"<BLBackgroundTaskProviding>",W,N
lock:
_locked
_backgroundTaskIdentifier
_hasBackgroundTask
T@"NSString",R,N,V_path
TB,R,N,V_locked
bu_isErrorPassingTest:
userInfo
longValue
bl_isAMSStatusCode401
UTF8String
p_opfPathFromContainerXmlDoc:epubPath:
stringWithCString:encoding:
p_opfPathFromContainerXmlPath:epubPath:
opfPathFromEpubPath:
_dcIdentifierFromOpfPath:isEPUB:
md5FromPath:
uniqueIdFromEpubPath:
uniqueIdFromPdfPath:
dataWithContentsOfURL:options:error:
readArchiveFromURL:options:queue:completion:
entryForName:
plistFromArchive:
xmlDocumentFromArchive:
extractFromArchive:
bl_md5Hash
_iTunesMetadataPathForEpubPath:
_storeIdFromiTunesMetadataPath:error:
identifierFromBookPath:allowHash:allowStoreID:error:
fileExistsAtPath:isDirectory:
identifierFromBookContainer:allowHash:allowStoreID:error:
identifierFromBookZipArchive:allowHash:allowStoreID:error:
writeToFile:options:error:
sharedManager
currentUser
userType
valueForKey:
boolForKey:
opfPathFromFullOpfContainerPath:
dataUsingEncoding:
string
bl_sha1
initWithUTF8String:
URLRequest
addDownloadsWithManifestRequest:completion:
setURLRequest:
initWithURLRequest:
startWithManifestResponseBlock:
_urlRequest
T@"NSURLRequest",&,N,V_urlRequest
T@"NSNumber",&,D,N
parentItem
T@"BLJaliscoServerItem",&,D,N
setPreOrder:
setUserInitiated:
setPermlinkTitle:
UUID
setAudiobook:
setRestore:
setSupplementalContent:
setSuppressNetworkEvaluatorDialogs:
setStoreIdentifiersToDownload:
setAccountIdentifier:
isPreOrder
isSupplementalContent
shouldSuppressNetworkEvaluatorDialogs
isUserInitiated
storeIdentifiersToDownload
permlinkTitle
accountIdentifier
requestWithBuyParameters:storeIdentifier:
requestWithPermlink:title:
setAnalyticsInfo:
_audiobook
_preOrder
_restore
_suppressNetworkEvaluatorDialogs
_userInitiated
_supplementalContent
_permlinkTitle
_accountIdentifier
_analyticsInfo
_storeIdentifiersToDownload
T@"NSURL",&,N,V_permlink
T@"NSString",C,N,V_permlinkTitle
preOrder
TB,N,GisPreOrder,V_preOrder
T@"NSSet",&,N,V_storeIdentifiersToDownload
supplementalContent
TB,N,GisSupplementalContent,V_supplementalContent
audiobook
TB,N,GisAudiobook,V_audiobook
T@"NSNumber",C,N,V_accountIdentifier
T@"NSDictionary",&,N,V_analyticsInfo
restore
TB,N,GisRestore,V_restore
suppressNetworkEvaluatorDialogs
TB,N,GshouldSuppressNetworkEvaluatorDialogs,V_suppressNetworkEvaluatorDialogs
userInitiated
TB,N,GisUserInitiated,V_userInitiated
_newImagesForDictionary:
imagesForSize:
_imagesForSize:scale:
itemImages
_itemImages
T@"NSArray",R,N,V_itemImages
validDownloadIDs
setValidDownloadIDs:
_validDownloadIDs
T@"NSArray",C,N,V_validDownloadIDs
getResourceValue:forKey:error:
bl_boolFromResourceValue:
bl_isDownloadedWithResourceValue:
resourceValuesForKeys:error:
bl_isUbiquitous
hasUnresolvedConflicts
bl_isDownloaded
bl_isDownloading
isUploaded
isUploading
bl_isUbiquitousPromise
sharedSource
persistentStoreCoordinator
defaultIdentifier
initWithIdentifier:databaseContainerPath:
_setupCoreDataStack
newManagedObjectContext
initWithEntityName:
setResultType:
executeFetchRequest:error:
setReturnsDistinctResults:
setPropertiesToGroupBy:
setPropertiesToFetch:
persistentStores
destroyPersistentStoreAtURL:withType:options:error:
pathForResource:ofType:
fileURLWithPath:isDirectory:
initWithContentsOfURL:
databaseContainerPath
bu_booksGroupContainerDocumentsURL
p_oldPersistentStoreDirectory
persistentStoreFileName
p_persistentStoreDirectory
p_persistentStoreFullPathAtPrivateiBooksLocation
p_persistentStoreFullPathAtSharediBooksLocation
relativePath
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
managedObjectModel
persistentStoreCoordinatorWithError:
reason
_persistentStoreOptions
p_databaseExistsAtSharediBooksContainerLocation
p_databaseExistsAtPrivateiBooksContainerLocation
initWithManagedObjectModel:
p_createPersistentDirectoryIfNeeded
addPersistentStoreWithType:configuration:URL:options:error:
migratePersistentStore:toURL:options:withType:error:
currentPersistentHistoryTokenFromStores:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setUndoManager:
setMergePolicy:
predicateWithFormat:
existingServerInfoWithPredicate:fromManagedObjectContext:error:
URLForPersistentStore:
removePersistentStore:error:
reset
currentJaliscoHistoryToken
sharedClient
resetPoliteTimers
existingServerDatabaseWithPredicate:fromManagedObjectContext:error:
setEntity:
setPredicate:
setFetchLimit:
logRecursively
existingEntitiesWithName:matchingPredicate:fromManagedObjectContext:limit:error:
existingObjectWithID:error:
existingServerItemWithPredicate:fromManagedObjectContext:error:
_itemsFetchRequestIncludingHiddenItems:dsids:
sharedProvider
activeStoreAccount
ams_DSID
fetchRequestWithEntityName:
predicateForItems:dsids:
sortDescriptorWithKey:ascending:
setSortDescriptors:
initWithType:subpredicates:
predicateWithValue:
itemsFetchRequestForDSIDs:
predicate
allItemsFetchRequestForDSIDs:
predicateForNeedsImport:
fetchRequestForAllStoreIDs:dsids:isImported:includeHidden:
fetchRequestForAllStoreIDs:dsids:
andPredicateWithSubpredicates:
preWarmSync
setSharedSource:
workaround_18397698
newManagedObjectContextWithPrivateQueueConcurrency
serverInfoForDSID:fromManagedObjectContext:error:
truncateDatabaseError:
refreshStoreWithCompletion:
serverDatabaseForDSID:fromManagedObjectContext:error:
serverDatabaseForDSID:withIdentifier:fromManagedObjectContext:error:
serverItemWithStoreID:inDatabaseWithIdentifier:forDSID:fromManagedObjectContext:error:
predicateForBookletItems:dsids:
fetchRequestForAllCloudIDs:dsids:
fetchRequestForStoreIDs:dsids:
fetchRequestForAllStoreIDsWithNonEmptyPurchasedToken:dsids:
fetchRequestForAllStoreIDs:
fetchRequestForNeedsImport:
fetchRequestForAllStoreIDs:dsids:isImported:
fetchRequestForBuyParameters:
fetchRequestForNotInStoreAccountIDs:
predicateForStoreAccountID:storeIDs:
fetchRequestForBookletItemsForStoreIDs:
fetchRequestForAllBookletsIDsWithParentStoreIDs:
setIdentifier:
setDatabaseContainerPath:
_modelSentinel
_pscSentinel
_psc
_model
_identifier
_databaseContainerPath
T@"NSString",&,N,V_databaseContainerPath
T@"NSString",C,N,V_identifier
T@"NSPersistentHistoryToken",R,N
storePlaylistID
percentComplete
estimatedTimeRemaining
transferBytesWritten
transferBytesExpected
storeAccountIdentifier
assetKind
canPause
setCanPause:
_canPause
_storePlaylistID
_percentComplete
_estimatedTimeRemaining
_transferBytesWritten
_transferBytesExpected
_downloadPhase
_storeAccountIdentifier
_assetKind
T@"NSNumber",&,N,V_storePlaylistID
T@"NSNumber",&,N,V_percentComplete
T@"NSNumber",&,N,V_estimatedTimeRemaining
T@"NSNumber",&,N,V_transferBytesWritten
T@"NSNumber",&,N,V_transferBytesExpected
Tq,N,V_downloadPhase
TB,N,V_isRestore
TB,N,V_canPause
TB,N,V_isSample
TB,N,V_isPurchase
Tq,N,V_persistentIdentifier
T@"NSNumber",&,N,V_storeAccountIdentifier
T@"NSString",C,N,V_assetKind
updateItemWithItem:
itemID
songalbum
songartist
containerItemID
expectedDate
additionalInfo
frozenInfo
mutableInfo
setFrozenInfo:
setMutableInfo:
songalbumartist
songalbumid
numberWithInt:
hasVideo
willChangeValueForKey:
didChangeValueForKey:
allKeys
itemWithItem:
thaw
setHasVideo:
mediaKind
dictionaryRepresentation
valueForUndefinedKey:
setValue:forUndefinedKey:
downloadStatus
_songalbum
_songartist
_songalbumartist
_itemID
_downloadStatus
_containerItemID
_songalbumid
_itemFlags
_isFrozen
_frozenInfo
_mutableInfo
T@"NSMutableDictionary",&,N,V_mutableInfo
T@"NSDictionary",&,N,V_frozenInfo
T@"NSString",&,N,V_name
T@"NSString",&,N,V_songalbum
T@"NSString",&,N,V_songartist
T@"NSString",&,N,V_songalbumartist
TQ,N,V_itemID
TC,N,V_downloadStatus
TQ,N,V_songalbumid
TI,N,V_containerItemID
T@"NSNumber",&,N
Ti,R,N
T@"NSDate",R,N
databaseVersion
userUID
lastPolledAt
Td,D,N
initWithBag:
setAccount:
setIncludeClientVersions:
setUrlKnownToBeTrusted:
setMescalType:
currentProcess
setExecutableName:
setClientInfo:
contentType
DSID
setDsid:
setReason:
setDialogOptions:
dataEncoding
setRequestEncoding:
setValue:forHTTPHeaderField:
DAAPPurchaseVersionString
DAAPClientVersionString
account
dsid
isEqualToNumber:
requestByEncodingRequest:parameters:
objectForInfoDictionaryKey:
initWithFormat:
requestByEncodingRequest:parameters:error:
initWithBag:withURLRequest:
_dsid
_reason
_contentType
T@"NSNumber",&,N,V_dsid
Tq,N,V_reason
TQ,N,V_contentType
setRequestMethod:
appendHeader:size:
appendUInt8:withCode:
appendUInt32:withCode:
appendUInt64:withCode:
data
_data
T@"NSData",R,N,V_data
initWithDSID:delegate:
_startObservingNotifications
_stopObservingNotifications
addObserver:accountTypes:
removeObserver:accountTypes:
_allPurchaseDAAPServers
updateItemImageURLsIgnoringCache:completion:
dsidQueue
swqDSIDToDAAPServer
fetchRequestForStoreIDs:
itemWithServerItem:
enumerateObjectsUsingBlock:
performBlock:
performBlockAndWait:
hideItemsWithStoreIDs:completion:
fetchRequestForStoreIDIncludingHidden:
setIsHidden:
hasChanges
save:
setPurchasedTokenCode:
fetchRequestForAllStoreIDsWithNonEmptyPurchasedToken:
bu_arrayByRemovingNSNulls
setWithArray:
setStoreAuthenticationRequired:
storeAuthenticationRequired
updatePolitely:reason:completion:
_currentPurchaseDAAPServers
countForFetchRequest:error:
currentThread
purchaseDAAPSyncsInFlight
fetchAllItemsPolitely:reason:queue:completion:
setupWithReason:queue:completion:
_sendCompletionHandlersWithSuccess:generation:
_resetPurchaseDAAPServersWithQueue:
_addPurchaseServerForCurrentUser
updateFamilyPolitely:reason:completion:
_dsids
synchronize
deleteObject:
setByAddingObjectsFromSet:
_fetchRequestForNotInStoreAccountIDs:
bu_arrayByRemovingDuplicates
delegate
clientDetectedPredicateChange:
resetWithQueue:
clientDetectedPurchaseServerClientExpired:
clientDetectedStoreChangeAndAccountChange:
clientDetectedStoreChange:
isSupported
purchaseServerHandleClientExpired
purchaseServerRequestITunesAuthentication
account:didChangeWithReason:
refreshSignInStatus
jaliscoArtworkTimebombed
forceJaliscoArtworkUpdateWithCompletion:
fetchItemsForStoreIDs:completion:
fetchItemsForStoreIDs:
fetchAllBookletIDsWithParentStoreIDs:
fetchItemsForBuyParameters:completion:
setItemHidden:forStoreID:completion:
resetPurchasedTokenForStoreIDs:completion:
storeIDsWithNonEmptyPurchasedToken:completion:
updatePolitely:reason:completionWithError:
updatePolitelyAfterSignOut:reason:completion:
updatePolitelyAfterSignIn:reason:completion:
updateFamilyPolitely:reason:completionWithError:
fetchRequestForStoreID:
fetchRequestForBookletItems:
predicateForItems:
predicateForBookletItems:
deleteItemsWithStoreIDs:completion:
_fetchItemsForNeedsImport:
_familyPurchaseDAAPServers
_processFamilyCircleAdded:removed:unchanged:completion:
resetStaleJaliscoDatabaseWithCompletion:
isInitiallyLoadingJalisco
imageManagerDelegate
setImageManagerDelegate:
currentServerGeneration
setCurrentServerGeneration:
pendingUpdateGeneration
setPendingUpdateGeneration:
resetJaliscoStatusHandler
setResetJaliscoStatusHandler:
setDsidQueue:
setSwqDSIDToDAAPServer:
setPurchaseDAAPSyncsInFlight:
setMoc:
_currentAccountNumber
_completionHandlers
_familyCompletionHandlers
_initiallyLoadingJalisco
_skipLoadingCheck
_serverWorkerQueue
_timebombRetries
_authenticationLock
_storeAuthenticationRequired
_delegate
_imageManagerDelegate
_currentServerGeneration
_pendingUpdateGeneration
_resetJaliscoStatusHandler
_dsidQueue
_swqDSIDToDAAPServer
_purchaseDAAPSyncsInFlight
_moc
TQ,N,V_currentServerGeneration
TQ,N,V_pendingUpdateGeneration
T@?,C,N,V_resetJaliscoStatusHandler
T@"NSObject<OS_dispatch_queue>",&,N,V_dsidQueue
T@"NSMutableDictionary",&,N,V_swqDSIDToDAAPServer
T@"NSMutableSet",&,N,V_purchaseDAAPSyncsInFlight
T@"NSManagedObjectContext",&,N,V_moc
TB,N
initiallyLoadingJalisco
TB,R,N,GisInitiallyLoadingJalisco,V_initiallyLoadingJalisco
T@"<BLJaliscoDAAPClientDelegate>",W,N,V_delegate
T@"<BLImageManager>",W,N,V_imageManagerDelegate
requestMethod
body
requestWithMethod:URL:parameters:
resultWithError:
_URLWithCompletionHandler:
daapURL
sharedSession
dataTaskWithRequest:completionHandler:
_requestWithCompletionHandler:
_URLWithRetry:completion:
isUserSignedInToiTunes
_valueForDAAPBagKey:completion:
stringByAppendingString:
_serverParametersWithCompletionHandler:
defaultBag
purchaseDAAP
valueWithCompletion:
executeWithCompletionHandler:
setDSID:
_bag
_DSID
_body
_daapURL
_requestMethod
_dataEncoding
T@"NSNumber",&,N,V_DSID
T@"NSData",&,N,V_body
T@"NSString",&,N,V_daapURL
Tq,N,V_requestMethod
Tq,N,V_dataEncoding
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
T@"NSXPCInterface",R,N
initWithContainerID:bag:
metrics
enqueueEvents:
setFlushTimerEnabled:
flush
flushInProcessWithCompletion:
setAutoFlushEnabled:
setTemporaryIdentifier:
setLegacyUniqueIdentifier:
setPublisherIdentifier:
setAuthor:
setITunesU:
setFeedURL:
setFileURL:
setType:
setAlbum:
setFolderName:
setEntry:
setItunesuAssetID:
setCoverImagePath:
temporaryIdentifier
legacyUniqueIdentifier
publisherIdentifier
author
feedURL
iTunesU
album
folderName
purgePriority
setPurgePriority:
lastUserAccessDate
itunesuAssetID
coverImagePath
entry
encodeInt:forKey:
encodeInt64:forKey:
decodeIntForKey:
decodeInt64ForKey:
fileURLWithPath:relativeToURL:
dataWithContentsOfURL:
isFileURL
mimeType
_cloudCoverImageData
_setFileURL:
_sample
_iTunesU
_temporaryIdentifier
_legacyUniqueIdentifier
_publisherIdentifier
_author
_feedURL
_fileURL
_album
_folderName
_entry
_purgePriority
_lastUserAccessDate
_itunesuAssetID
_coverImagePath
T@"NSDictionary",&,N,V_entry
T@"NSString",C,N,V_temporaryIdentifier
T@"NSString",C,N,V_legacyUniqueIdentifier
T@"NSString",C,N,V_storeIdentifier
T@"NSString",C,N,V_persistentIdentifier
T@"NSString",C,N,V_publisherIdentifier
T@"NSString",C,N,V_author
T@"NSString",C,N,V_feedURL
T@"NSURL",&,N,V_fileURL
TB,N,V_iTunesU
sample
TB,N,GisSample,V_sample
Tq,N,V_type
T@"NSString",C,N,V_publicationVersion
T@"NSString",C,N,V_album
T@"NSString",C,N,V_folderName
Tq,N,V_purgePriority
T@"NSDate",&,N,V_lastUserAccessDate
T@"NSString",C,N,V_itunesuAssetID
T@"NSString",C,N,V_coverImagePath
T@"NSString",R,C,N
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
initWithConfiguration:
serverParametersWithCompletionHandler:
valueForDAAPBagKey:completion:
timeIntervalFromDAAPBagKey:completion:
setIsServerSetup:
setIsServerSetupPending:
_setSessionID:
setReturnsObjectsAsFaults:
imageExistsForStoreID:
timeIntervalSince1970
sessionID
unsignedIntValue
cloudID
isServerSetup
_dataForArtRequest:
_processResponse:
dictionaryWithObjects:forKeys:
artworkTokenCode
removeImageForStoreID:error:
setArtworkTokenCode:
setArtworkURLString:
_saveInMoc:error:
_preProcessResponse:error:responseBlock:
_shouldMakeRequest:
_localServerDatabaseRevisionInMoc:
_updatePersistentServerRevision:moc:error:
_dataForHideItemsRequestWithStoreIDs:
_updateVersionAfterHideRequest:
unsignedIntegerValue
isServerSetupPending
fetchAllImageAssetsIgnoringLocalCache:
_sendSetupConfigurationHandlersWithSuccess:
_loginWithReason:completion:
_configureWithReason:completion:
appRefreshesOnLaunchWithCompletionHandler:
forcedRefreshFrequencyWithCompletionHandler:
pollingFrequencyWithCompletionHandler:
databaseIDWithCompletionHandler:
dateByAddingTimeInterval:
purchasedTokenCode
_updatePersistentServerRevision:database:items:error:
_fetchItemsWithLocalVersion:serverVersion:reason:tokenPairs:completionHandler:
_fetchDatabaseWithReason:localServerRevision:latestVersion:completionHandler:
_pollLatestRevisionWithReason:completion:
removeObserver:
object
notificationWithName:object:userInfo:
postNotification:
contextDidSave:
addObserver:selector:name:object:
removeObserver:name:object:
_updatePersistentDatabase:server:moc:error:
_updatePersistentItems:moc:database:error:
setUserUID:
setDatabaseVersion:
setServer:
setWithCapacity:
filteredArrayUsingPredicate:
artworkURLString
isPrimaryAccount
bl_setNumberIfDifferent:value:
bl_setStringIfDifferent:value:
bl_setDateIfDifferent:value:
booklets
setParentItem:
additionalAudiobookInfoKeys
bl_setDictionaryIfDifferent:value:
addItems:
managedObjectContext
_sendHandlers:success:
hasBackedOff
backoffUntil
_canMakeDAAPRequest
response
responseStatusCode
allHeaderFields
failureIntervals:
handleClientExpired
initWithTimeIntervalSinceNow:
clear
username
_newDefaultAuthenticateOptions
initWithDSID:altDSID:username:options:
resultWithTimeout:error:
setAuthenticationType:
setDebugReason:
setDAAPReconnectToTimeIntervalSinceNow:
_loginWithRequest:completion:
initWithDSID:reason:sessionID:localVersion:
initWithDSID:reason:sessionID:revisionNumber:delta:
_fetchDatabaseWithRequest:completionHandler:
componentsJoinedByString:
arrayByAddingObjectsFromArray:
bookletKeys
writeUInt32:withCode:
daapMetaDataFilterString
writeString:withCode:
daapQueryFilterString
writeUInt8:withCode:
_dataForItemsRequestWithLocalVersion:serverVersion:tokenPairs:
_lastPolledAt
_DAAPReconnectAt
_clientExpired
_requestReasonCode
_setupCompletionHandlers
_backoff
_updateItemsQueue
_backoffQueue
_isServerSetup
_isServerSetupPending
_primaryAccount
_sessionID
TB,N,V_isServerSetup
TB,N,V_isServerSetupPending
primaryAccount
TB,R,N,GisPrimaryAccount,V_primaryAccount
T@"NSNumber",&,N,S_setSessionID:,V_sessionID
T@"<BLPurchaseDAAPServerDelegate>",W,N,V_delegate
failureCount
setFailureCount:
dateWithTimeIntervalSinceNow:
setBackoffUntil:
_backoffUntil
_failureCount
T@"NSDate",&,N,V_backoffUntil
Tq,N,V_failureCount
bu_booksGroupContainerURL
_initWithSuiteName:container:
initWithDomain:code:userInfo:
consumeBytes:length:
enumerateByteRangesUsingBlock:
processLine
rangeOfString:options:range:
substringWithRange:
substringFromIndex:
initWithData:encoding:
rangeOfString:
parseAttributeList:
collectForRewrite
saveLine:
replaceBytesInRange:withBytes:length:
collectedData
setCollectedData:
writeToURL:atomically:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
setData:
setBytes:
_collectForRewrite
_bytes
_collectedData
T@"NSData",&,N,V_data
T@"NSMutableData",&,N,V_bytes
T@"NSMutableData",&,N,V_collectedData
T@"<BLM3U8ParserDelegate>",W,N,V_delegate
TB,N,V_collectForRewrite
schemaVersion
setDelta:
bu_queryStringForDictionary:escapedValues:
delta
_delta
T@"NSNumber",C,N,V_delta
artist
setArtist:
setCloudID:
isHidden
purchasedAt
setPurchasedAt:
purchaseHistoryID
setPurchaseHistoryID:
isExplicit
setIsExplicit:
isDisabled
setIsDisabled:
setExpectedDate:
sortedTitle
setSortedTitle:
sortedAuthor
setSortedAuthor:
displayVersion
setDisplayVersion:
isPictureBook
setIsPictureBook:
containsAudio
setContainsAudio:
isReadAloud
setIsReadAloud:
chapterMetadataURLString
setChapterMetadataURLString:
hlsPlaylistURLString
setHlsPlaylistURLString:
storeAccountID
setStoreAccountID:
additionalAudiobookInfo
setAdditionalAudiobookInfo:
needsImport
setNeedsImport:
setBooklets:
arrayWithServerItems:
_artist
_artworkTokenCode
_artworkURLString
_cloudID
_isHidden
_purchasedAt
_purchasedTokenCode
_purchaseHistoryID
_isExplicit
_isDisabled
_expectedDate
_sortedTitle
_sortedAuthor
_displayVersion
_fileExtension
_isPictureBook
_containsAudio
_isReadAloud
_chapterMetadataURLString
_hlsPlaylistURLString
_storeAccountID
_additionalAudiobookInfo
_needsImport
_booklets
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_artworkTokenCode
T@"NSString",C,N,V_artworkURLString
T@"NSString",C,N,V_cloudID
T@"NSNumber",&,N,V_isHidden
T@"NSDate",C,N,V_purchasedAt
T@"NSString",C,N,V_purchasedTokenCode
T@"NSNumber",&,N,V_purchaseHistoryID
T@"NSNumber",&,N,V_isExplicit
T@"NSNumber",&,N,V_isDisabled
T@"NSDate",C,N,V_expectedDate
T@"NSString",C,N,V_sortedTitle
T@"NSString",C,N,V_sortedAuthor
T@"NSString",C,N,V_displayVersion
T@"NSString",C,N,V_fileExtension
T@"NSNumber",&,N,V_isPictureBook
T@"NSNumber",&,N,V_containsAudio
T@"NSNumber",&,N,V_isReadAloud
T@"NSString",&,N,V_chapterMetadataURLString
T@"NSNumber",&,N,V_isAudiobook
T@"NSString",&,N,V_hlsPlaylistURLString
T@"NSNumber",&,N,V_storeAccountID
T@"NSDictionary",&,N,V_additionalAudiobookInfo
T@"NSNumber",&,N,V_needsImport
T@"NSSet",&,N,V_booklets
T@"NSNumber",R,N
initWithIdentifier:databaseContainerPath:accountDSID:
p_allItemsFetchRequestForDSIDs:
p_allItemsFetchRequestForDSIDs:matchingSearchString:isExplicitRestricted:
p_fetchRequestForStoreIDs:dsids:
_itemsFetchRequestForDSIDs:excludeStoreIDs:isExplicitRestricted:
initWithName:reason:userInfo:
p_itemsFetchRequestIncludingHiddenItems:dsids:
currentAccountDSID
escapedPatternForString:
initWithObjects:
predicateForNonExplicitItems
predicateToExcludeStoreIDs:
sortByTitleDescriptor
fetchAllServerItemsForDSIDs:
searchAllServerItemsForDSIDs:matchingSearchString:isExplicitRestricted:
fetchAllServerItemsWithPredicate:sortDescriptor:
fetchServerItemsForStoreIDs:andDSIDS:
fetchItemsForDSIDs:excludeStoreIDs:isExplicitRestricted:
model
setModel:
setPsc:
setCurrentAccountDSID:
_currentAccountDSID
T@"NSManagedObjectModel",&,N,V_model
T@"NSPersistentStoreCoordinator",&,N,V_psc
T@"NSString",C,N,V_databaseContainerPath
T@"NSNumber",&,N,V_currentAccountDSID
T@"NSDate",&,D,N
database
T@"BLJaliscoServerDatabase",&,D,N
T@"NSDictionary",&,D,N
innerSharedInstance
serverProgressObserver
purchaseWithRequest:completion:
_purchaseWithRequest:uiHostProxy:completion:
_addDownloadWithMetadata:isRestore:completion:
_cancelAllPausedDownloads
overrideSharedInstance:
cancelAllActiveDownloads
prepareForRemoveApp
purchaseWithBuyParameters:storeID:completion:
purchaseWithBuyParameters:storeID:isAudiobook:completion:
purchaseWithBuyParameters:storeID:isAudiobook:userInfo:completion:
addDownloadWithPurchaseParameters:storeID:completion:
addDownloadWithMetadata:completion:
addRestoreDownloadWithMetadata:completion:
pauseDownloadWithID:withCompletion:
resumeDownloadWithID:withCompletion:
cancelDownloadWithID:withCompletion:
addDownloadsWithMetadata:completion:
addRestoreDownloadsWithMetadata:completion:
addDownloadsWithRestoreContentRequestItems:completion:
addObserver:
addDownloadWithPurchaseParameters:completion:
cancelAllActiveDownloadsWithCompletion:
restartDownloadWithID:withCompletion:
reloadFromServerWithCompletion:
_serverProgressObserver
T@"BLDownloadQueueServerProgressObserver",R,N,V_serverProgressObserver
@48@0:8@16q24@32@40
@24@0:8@16
@16@0:8
v24@0:8@16
v16@0:8
@"NSNumber"
@32@0:8@16@24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDictionary"
@40@0:8@16@24@32
B48@0:8@16@24@32^@40
@48@0:8@16@24@32@40
v40@0:8@16@24@?32
@32@0:8@16^@24
B32@0:8@16^@24
@32@0:8@16@?24
@32@0:8@?16^q24
@40@0:8@16@24^@32
B24@0:8@16
v40@0:8@16@24@32
@"IMLibraryPlist"
@"NSObject<OS_dispatch_queue>"
Q16@0:8
v24@0:8Q16
v20@0:8B16
q16@0:8
v24@0:8q16
v32@0:8@16@24
@"NSMutableDictionary"
@"NSLock"
@"NSString"
@"NSError"
q24@0:8@16
@24@0:8q16
B40@0:8@16@24^@32
B24@0:8^@16
@"NSURL"
@36@0:8@16B24^@28
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v32@0:8@"BLM3U8Parser"16@"NSURL"24
v48@0:8@"BLM3U8Parser"16@"NSString"24@"NSString"32@"NSDictionary"40
v32@0:8@"BLM3U8Parser"16@"NSString"24
B24@0:8@"BLM3U8Parser"16
@"NSArray"
@"NSUUID"
@"BLHLSPlaylistState"
@"NSMutableSet"
@48@0:8@16d24@32@40
d16@0:8
@"BLHLSMap"
@"BLHLSKey"
v24@0:8d16
@"NSMutableArray"
@"BLHLSStreamInf"
@32@0:8@16q24
v24@0:8@?16
v32@0:8@16@?24
v36@0:8@16B24@?28
v36@0:8B16@20@?28
v40@0:8@16q24@?32
v32@0:8q16@?24
v40@0:8q16@24@?32
v28@0:8B16@?20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"BLDownload"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8@"BLPurchaseRequest"16@"<BLUIHostServiceProtocol>"24@?<v@?@"NSString"@"BLPurchaseResponse"@"NSError">32
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v36@0:8@"NSDictionary"16B24@?<v@?@"NSString"@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"BLDownloadManifestRequest"16@"<BLUIHostServiceProtocol>"24@?<v@?@"BLDownloadManifestResponse"@"NSError">32
v36@0:8B16@"<BLUIHostServiceProtocol>"20@?<v@?@"NSError">28
v40@0:8@"NSUUID"16q24@?<v@?@"NSError">32
v32@0:8q16@?<v@?@"NSUUID"@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"NSSet"24@?<v@?@"NSError">32
v32@0:8q16@?<v@?@"BLBookletMigrationInfo"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?BBBB@"NSError">16
v24@0:8@?<v@?B@"NSError">16
@24@0:8o^@16
@32@0:8@16o^@24
@24@0:8@?16
i16@0:8
v20@0:8i16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<BLServiceProxyConnectionMonitoring>"
@"NSXPCConnection"
@"<BLProgressReceiving>"
@32@0:8@16Q24
v24@0:8@"NSDictionary"16
v24@0:8@"BLServiceProxy"16
v84@0:8@16@24@32@40@48@56@64B72@76
@32@0:8@16^B24
v28@0:8@16B24
@76@0:8@16@24@32@40@48@56@64B72
@"BLServiceProxy"
@"NSHashTable"
@"BLDownloadQueueNonUI"
Q32@0:8r*16q24
@32@0:8r*16q24
v48@0:8r*16q24@32@40
v36@0:8I16r*20q28
@36@0:8r*16q24i32
v40@0:8r*16q24@32
@36@0:8I16r*20q28
@32@0:8q16q24
B40@0:8q16@24o^@32
B32@0:8@16o^@24
B40@0:8@16q24o^@32
B32@0:8q16o^@24
@32@0:8B16B20@24
@"NSURLSession"
{CGSize=dd}16@0:8
@"NSDate"
@"NSData"
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v32@0:8@"AMSEngagementRequest"16@?<v@?@"AMSEngagementResult"@"NSError">24
B24@0:8B16B20
B20@0:8B16
B32@0:8@?16^@24
@24@0:8Q16
@32@0:8^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}16@24
@28@0:8@16B24
@40@0:8@16B24B28^@32
@"NSURLRequest"
@"NSSet"
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@24@0:8^@16
@48@0:8@16@24@32^@40
@56@0:8@16@24@32Q40^@48
@56@0:8@16@24@32@40^@48
@28@0:8B16@20
@20@0:8B16
@36@0:8@16@24B32
@40@0:8@16@24B32B36
@"NSPersistentStoreCoordinator"
@"NSManagedObjectModel"
C16@0:8
v20@0:8C16
I16@0:8
v20@0:8I16
{?="itemHasVideo"b1}
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
q24@0:8C16I20
q24@0:8I16I20
q28@0:8Q16I24
v32@0:8Q16Q24
v36@0:8B16q20@?28
v48@0:8@16@24@32@?40
v28@0:8B16Q20
@?16@0:8
@"<BLJaliscoDAAPClientDelegate>"
@"<BLImageManager>"
@"NSManagedObjectContext"
@"BUBag"
v44@0:8B16q20@28@?36
v48@0:8q16@24@32@?40
v56@0:8@16@24q32@40@?48
@"BKPurchaseDAAPBackoff"
@"<BLPurchaseDAAPServerDelegate>"
B24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
Q32@0:8r^v16Q24
@"<BLM3U8ParserDelegate>"
@"NSMutableData"
@56@0:8@16q24@32@40@48
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@36@?44
@"BLDownloadQueueServerProgressObserver"
@(#)PROGRAM:BookLibraryCore  PROJECT:BookLibrary-855
333333
N12_GLOBAL__N_111CryptorImplIL19IMStreamingHashType0EEE
N12_GLOBAL__N_17CryptorE
N12_GLOBAL__N_111CryptorImplIL19IMStreamingHashType1EEE
databases/%@/items
includeApplePubBooks
includeItemFlavors
downloadDictionary
assetDictionary
DSPersonID
AppleID
appleId
databases/%@/edit
BLLibraryErrorDomain
BLLibraryErrorIdentifier
BLLibraryErrorPermlink
BLLibraryErrorAssetID
BLLibraryAllowsDownloadsViaBookAssetDaemonForITunesUBooks
v8@?0
default_book_library
com.apple.BookLibrary.BLLibrary
B16@?0@"BLBookItem"8
v24@?0@"BLBookItem"8@"NSError"16
identifier
path
v24@?0@"NSString"8@"NSError"16
isSample
publication-version
genre
sort-artist
sort-name
scroll-axis
itemId
releaseDate
is-purchased-redownload
artistName
drmVersionNumber
sourceApp
page-progression-direction
itemName
copyright
explicit
sort-album
human-friendly-publication-version
languages
PageProgression
playlistId
playlistName
artwork-template-name
asset-info
file-size
flavor
com.apple.iTunesStore.downloadInfo
purchaseDate
accountInfo
Artist
DSID
Estimated Download Size
Flavor
Genre
Path
Backup-Path
iTunesU Permlink
Item ID
Page Progression Direction
Persistent ID
Publication Version
Release Date
Sort Artist
Sort Name
Storefront ID
Name
usesSharedAsset
Album
Sort Album
Copyright
isExplicit
Human Readable Publication Version
Languages
PlaylistID
isSupplementalContent
BLErrorDomain
message
title
Underlying Error Description
BLKeyHTTPResponseCode
Unknown Error
BLService error
unknown download id (%@)
auto-download
artworkURL
isDeviceBased
isRental
launch-extras-url
metadata
artwork-urls
softwareVersionBundleId
bundle-id
cancel-download-url
UIRequiredDeviceCapabilities
compilation
composerName
description
download-permalink
duration
episode-guid
episode-number
episode-sort-id
genreName
genre-name
high-definition
softwareIcon57x57URL
icon-url
is-auto-download
is-redownload
isSharedResource
songId
kind
network-name
pageProgressionDirection
playlistArtistName
podcast-feed-url
podcast-type
preorder-id
buy-params-256
buyParams
action-params
redownload-params
cloud-id
sagaId
season-number
show-name
longSeasonDescription
thumbnail-url
thumbnail-newsstand-binding-edge
thumbnail-newsstand-binding-type
unmodified-title
videoDetails
year
show-composer
is-apple-music-show
work
movement
movement-number
movement-count
download-id
artistId
composerId
discCount
discNumber
genreId
longDescription
trackCount
trackNumber
artist-id
artist-name
composer-id
disc-count
disc-number
genre-id
item-id
long-description
collection-id
collection-name
release-date
track-count
track-number
preferredAssetFlavor
requestPersistentID
assets
betaExternalVersionIdentifier
downloadKey
fileExtension
hls-playlist-url
chunks
chunkSize
hashes
has-4k
has-dolby-vision
has-hdr
is-hls
isStreamable
rating
rental-id
sinfs
softwareVersionExternalIdentifier
variantId
sgGuid
DownloaderID
ebook
lrpluspub
lrpub
pluspub
yyyy-MM-dd'T'HH:mm:ss'Z'
com.apple.bookassetd
BLService
BLDownloadQueueServiceProgressMonitor
BLServiceDownloadQueue
BLServicePurchaseManager
BLServiceMediaLibraryManagerLog
BLServiceDownloadManager
BLServiceDownloadPipeline
BLServiceDatabaseManager
BLServiceDownloadFilesystem
BLServiceDownloadStreamingZip
com.apple.iBooks.BookLibrary
BLServiceNotification
BLServiceMetadataStore
BLServiceProxy
BookLibrary
BLDaemon
BLBookInstallLog
BLBookCacheDeleteLog
BookLibrary.Metrics
BLUtilitiesLog
BLAudiobookSyncLog
BookLibrary.HLSStreaming
BLJalisco
BLFamily
BLAudiobookMLImporter
BLBooksAskPermissionExtensionLog
BLBooksDiagnosticExtensionLog
storeItemID
downloadID
error
label
rank
system
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
ar-movies
bo-movies
br-movies
bg-movies
cl-movies
co-movies
cr-movies
cy-movies
cz-movies
ec-movies
sv-movies
ee-movies
gt-movies
hn-movies
hu-movies
lv-movies
lt-movies
mt-movies
ni-movies
pa-movies
py-movies
pe-movies
pl-movies
ro-movies
sk-movies
si-movies
uy-movies
ve-movies
jm-movies
gy-movies
sr-movies
gf-movies
do-movies
bn-movies
by-movies
cn-movies
ge-movies
hk-movies
id-movies
is-movies
kg-movies
kh-movies
kr-movies
kz-movies
la-movies
lk-movies
md-movies
mk-movies
mo-movies
my-movies
ph-movies
ru-movies
sg-movies
th-movies
tj-movies
tr-movies
tw-movies
ua-movies
uz-movies
vn-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
riaa
us-cable
apple
Documents
iCloud.com.apple.iBooks.iTunesU
cloudItem
com.apple.iBooks.BLEduCloudContainer.containerQueue
v16@?0@"NSURL"8
mobile
v16@?0@"NSMutableDictionary"8
{ independentSegments: %@
Groups: %@
SegmentInfs: %@
Segments: %@
v32@?0@"NSString"8@"NSMutableArray"16^B24
#EXT-X-MEDIA
GROUP-ID
#EXT-X-MAP
#EXTINF
#EXT-X-INDEPENDENT-SEGMENTS
#EXT-X-KEY
#EXT-X-STREAM-INF
#EXT-X-SESSION-DATA
DATA-ID
com.apple.audiobook.rapguid
VALUE
#EXT-X-BITRATE
TYPE
NAME
%@(%@): %@
GroupID: %@ %@
BANDWIDTH
AVERAGE-BANDWIDTH
CODECS
AUDIO
{ Bandwidth: %llu, Average Bandwidth: %llu, codecs: %@, audio: %@
%@ (%@s)%@%@
 Map: 
METHOD
NONE
AES-128
SAMPLE-AES
KEYFORMAT
KEYFORMATVERSIONS
com.apple.streamingkeydelivery
{%@, %@, %@, %@, %@}
login
iTunesMetadata.plist
iTunesArtwork
Books.plist
Purchases.plist
Managed.plist
Shared.plist
Samples.plist
Proofing.plist
Deletes.plist
NSFileReadNoPermissionError
Permission denied: %@
~~~~~HH:mm:ss;yyyy-MM-dd
B32@?0@8Q16^B24
Is iTunes U
Feed URL
MIME Type
Extension
chinese
turkish
polish
ukrainian
iBooks-UniqueId
PersistentID
Cover Path
book-info.cover-image-path
book-info.publisher-unique-id
book-info.unique-id
book-info.package-file-hash
book-info.cover-image-hash
experiences
locType
version
params
confidence
importDate
comments
bookDescription
BKLastOpenedDate
BKFirstOpenedDate
currentReadingLocation
highWaterMark
generation
Publisher Unique ID
isProof
BLLastUserAccessDate
Package Hash
AssetType
Subject
Books
Deletes
primaryLanguage
cover-writing-mode
Ephemeral
Collection ID
purchases
managed
proofing
samples
shared/Books
Library
<%@:%p name=%@ redownloadParameters=%@ storeID=%@ size=%@>
salableAdamId
isPreorder
pricingParameters
productType
BLService Notify Queue
v12@?0i8
com.apple.ibooks.BLService
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
download failed
Download either failed or was cancelled by the user
SSDownloadManagerBookShim
SSDownloadManagerBookShim2
daap.songbitrate
daap.songsamplerate
daap.songformat
daap.songcodectype
daap.songcodecsubtype
daap.songdatakind
daap.songtime
daap.songlongsize
com.apple.itunes.item-redownload-param-2
com.apple.itunes.item-flavor-id
dmap.status
dmap.protocolversion
daap.protocolversion
Client-ATV-Sharing-Version
dmap.itemname
dmap.loginrequired
dmap.timeoutinterval
dmap.supportsautologout
dmap.authenticationmethod
dmap.authenticationschemes
dmap.supportsupdate
dmap.supportspersistentids
dmap.supportsextensions
dmap.supportsbrowse
dmap.supportsquery
dmap.supportsindex
dmap.supportsresolve
dmap.databasescount
ppro
com.apple.itunes.music-sharing-version
com.apple.itunes.playlist-contains-media-type
com.apple.itunes.req-fplay
com.apple.itunes.supportedextensions
daap.supportsextradata
daap.supportsgroups
dmap.utctime
dmap.utcoffset
macAddresses
supportsEditing
com.apple.itunes.supports-fprap
daap.supportssetproperty
manufacturer
model
deviceType
supportsPurchases
dmap.longitemid
dmap.supportslongitemid
dmap.editcommandssupported
dmap.supportsinlinecontaineritems
com.apple.itunes.cloud-purchase-token
com.apple.itunes.reconnect-interval
dmap.itemcount
dmap.containercount
dmap.parentcontainerid
dmap.itemkind
dmap.databasekind
dmap.persistentid
com.apple.itunes.cloud-id
com.apple.itunes.itms-songid
daap.songdiscnumber
com.apple.itunes.store-pers-id
daap.songdisccount
daap.songtracknumber
daap.songtrackcount
daap.songcomposer
daap.songdatemodified
daap.songdatepurchased
daap.songyear
daap.songuserskipcount
daap.songartworkcount
dmap.itemavailable
dmap.itemhidden
com.apple.itunes.mastered-for-itunes
com.apple.itunes.item-flavor-listing
com.apple.itunes.cloud-artwork-token
com.apple.itunes.cloud-artwork-url
com.apple.itunes.cloud-user-id
com.apple.itunes.cloud-purchased-token
com.apple.itunes.adam-id
com.apple.itunes.adam-ids-array
dmap.groupdownloadstatus
daap.baseplaylist
daap.playlistshufflemode
daap.playlistrepeatmode
com.apple.itunes.special-playlist
com.apple.itunes.smart-playlist
com.apple.itunes.rental-start
com.apple.itunes.rental-duration
com.apple.itunes.rental-pb-start
com.apple.itunes.rental-pb-duration
com.apple.itunes.publication-contains-audio
com.apple.itunes.publication-is-picture-book
com.apple.itunes.publication-is-read-aloud
com.apple.itunes.itms-artistid
daap.songuserrating
daap.songcontentrating
daap.songdataurl
daap.songgrouping
daap.songcategory
daap.songhasbeenplayed
daap.songdatereleased
daap.bookmarkable
daap.songbookmark
daap.songuserplaycount
daap.songpodcasturl
daap.sortalbum
daap.sortartist
daap.sortname
com.apple.itunes.is-podcast
com.apple.itunes.series-name
com.apple.itunes.episode-sort
com.apple.itunes.episode-num-str
com.apple.itunes.season-num
com.apple.itunes.artworkchecksum
com.apple.itunes.is-hd-video
com.apple.itunes.has-video
com.apple.itunes.has-chapter-data
com.apple.itunes.movie-info-xml
com.apple.itunes.mediakind
com.apple.itunes.extended-media-kind
com.apple.itunes.content-rating
daap.songdescription
daap.songgenre
daap.songcontentdescription
daap.songlongcontentdescription
daap.groupalbumcount
daap.groupmatchedqueryalbumcount
daap.groupmatchedqueryitemcount
fileData
aspectRatio
macAddress
selected
selectedForVideo
isPlaying
supportsVideo
hasPassword
volume
dmcp.protocolversion
dacp.protocolversion
supportsVolume
supportsMultiSpeakerVolume
supportsPlayStatusUpdate
supportsControlPromptRequests
supportsRemoteLibrarySelection
supportsSpeakerSelection
supportsSetUserRating
supportsBonjourSourcesUpdates
headerItemCharacter
headerItemIndex
headerItemCount
com.apple.itunes.supports-genius-control
com.apple.itunes.saved-genius
name
type
readOnly
value
context
minimum
maximum
com.apple.itunes.is-homeshare
com.apple.itunes.itunes-machine-id
dmap.remotepersistentid
com.apple.itunes.remote-itunes-machine-id
libraryDisplayName
libraryServiceName
libraryServiceType
libraryServiceDomain
daap.songdisabled
dmap.errorresponse
com.apple.itunes.cloud-connect-status
kExtDACPSupportediTunesExtensionsCode
com.apple.itunes.playqueue-warning-threshold
com.apple.itunes.preorder-expected-date
com.apple.itunes.chapter-metadata-url
com.apple.itunes.store.supports-hls-playback
com.apple.itunes.store.hls-playback-url
com.apple.itunes.copyright
com.apple.itunes.flat-chapter-data
com.apple.itunes.store.booklet-item-name
com.apple.itunes.store.booklet-item-store-id
com.apple.itunes.store.booklet-item-redownload-param
com.apple.itunes.store.booklet-item-size
dmap.updatetype
dmap.specifiedtotalcount
dmap.returnedcount
dmap.serverrevision
dmcp.bonjoursourcesrevision
dmap.deletedidlisting
dmap.listing
items
headers
attributes
dmap.itemid
mediaKind
dacp.playerstate
databaseID
com.apple.itunes.itms-playlistid
dmap.containeritemid
dacp.playingtime
dmcp.playstatusrevision
daap.songartist
daap.songalbum
daap.songalbumid
NPGenre
dacp.shufflestate
dacp.availableshufflestates
dacp.repeatstate
dacp.availablerepeatstates
dacp.fullscreen
dacp.fullscreenenabled
dacp.visualizer
dacp.visualizerenabled
com.apple.itunes.can-be-genius-seed
dacp.volumecontrollable
secondScreenAdamID
secondScreenURL
com.apple.itunes.playqueue-mode
com.apple.itunes.manually-queued
com.apple.itunes.num-manually-queued
com.apple.itunes.active-queue-feed-name
boolean
float
uint32
indexed
keyed
string
action
node
group
item
point
image
dpad
touch
undefined
migrationState
storeID
<%@:%p storeID=%lld; migrationState=%lld>
v24@?0@"NSUUID"8@"NSError"16
Unable to parse master HLS Playlist
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
BLJaliscoServerDatabase
box-height
box-width
scale
%@: [%@ %ldx%ld] %@
download-queue-item.default
book
feature-movie
music-video
podcast
tv-episode
videoPodcast
itunes-u
BLDownloadErrorKeyJADownloadQueueToken
BLDownloadErrorKeyRetryInterval
buyParameters
permlink
storeIdentifier
persistentIdentifier
originalURL
target
state
startTime
assetPath
publicationVersion
{ DownloadID: %@ Title: %@ State:%@ Started at: %@}
BLDownloadStateReceived
BLDownloadStatePrepared
BLDownloadStateWaiting
BLDownloadStateDownloading
BLDownloadStatePaused
BLDownloadStateCanceled
BLDownloadStateFailed
BLDownloadStateDownloaded
BLDownloadStateInstallStarted
BLDownloadStateFinished
BLDownloadStateInterrupted
BLDownloadStateDecryptStarted
BLDownloadStateDecryptFinished
BLDownloadStateUnzipStarted
BLDownloadStateUnzipFinished
BLDownloadStateFinalizingStarted
BLDownloadStateFinalizingFinished
BLDownloadStateUnknown
databases/%@/extra_data/cloud-artwork-info
purchaseParameters
isPurchaseRedownload
isAudiobook
isPDF
currency
errorCode
errorDescription
errorDomain
firstUnderlyingErrorCode
firstUnderlyingErrorDomain
firstUnderlyingErrorLocalizedDescription
isUserCancelError
logUUID
permLink
price
responseMetrics
purchaseResponseItems
hasRacGUID
supplementalContentCount
songList
metrics
@sum.isPDF
v24@?0@"AMSAuthenticateResult"8@"NSError"16
v24@?0@"AMSDialogResult"8@"NSError"16
Engagement request not supported for non-UI
v24@?0@"AMSEngagementResult"8@"NSError"16
Sync/.bookSync.lock
IMLockFile
BLLockFileErrorDomain
B32@?0@"NSString"8q16@"NSDictionary"24
http://purl.org/dc/elements/1.1/
unique-identifier
contributor
UTF-8
urn:oasis:names:tc:opendocument:xmlns:container
/a:container/a:rootfiles/a:rootfile[@media-type='application/oebps-package+xml']
full-path
META-INF/container.xml
iBooks Author
epub
ibooks
v24@?0@"BUZipFileArchive"8@"NSError"16
BLLibrarySimulateMultiUser
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
%02x
URLRequest
v24@?0@"BLDownloadManifestResponse"8@"NSError"16
BLJaliscoServerBookletItem
audiobook
preOrder
restore
supplementalContent
suppressNetworkEvaluatorDialogs
userInitiated
permlinkTitle
storeIdentifiersToDownload
accountIdentifier
image-type
validDownloadIDs
Valid Download Ids: %@
BLJaliscoServerItem
BKPurchases
momd
[BLJaliscoServerSource managedObjectModel]
[[NSBundle bundleForClass:[self class]] pathForResource:@'BKPurchases' ofType:@'momd'] failed
BKJaliscoServerSource
Failed to add jalisco Persistent Store: %@
Unable to bring up jalisco core data stack
userUID = %@
server.userUID = %@
identifier = %@ AND server.userUID = %@
BLJaliscoServerInfo
storeID = %@ AND database.identifier = %@ and database.server.userUID = %@
artist
stringValue
database.server.userUID IN %@
(%K == NO OR %K == NULL)
isHidden
parentItem.database.server.userUID IN %@
(parentItem.%K == NO OR parentItem.%K == NULL)
cloudID IN %@
storeID IN %@
purchasedTokenCode != NULL and purchasedTokenCode != 0
(%K == YES)
needsImport
storeDownloadParameters == %@
NOT (storeAccountID IN %@)
storeAccountID = %@
parentItem.storeID IN %@
NSDetailedErrors
booklets
<%s: %p> %@: %@, %@%@supportsVolume:%d, locked:%d, macAddress:%@
AirPlay Video
AirPlay
isPlaying, 
selected v:%f 
%@ %@, %llu, %@, %@, containerItemID = %u, isPreorder = %u, isHidden = %@, Booklets = %@, additionalInfo = %@
daap.songalbumartist
hasVideo
additionalInfo
%llu
application/x-dmap-tagged
application/x-www-form-urlencoded
com.apple.iBooks
Client-Cloud-DAAP-Request-Reason
Client-Cloud-Purchase-Daap-Version
Client-DAAP-Version
X-FM-Dsid
CFBundleShortVersionString
1.1/iBooks-%@
%d.%d
server-info
IMStreamingHash.%p
IMStreamingHash
dispatch_io_create_with_path() returned NULL
v24@?0B8@"NSObject<OS_dispatch_data>"12i20
v24@?0@"NSData"8@"NSError"16
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
0123456789ABCDEF
BLJaliscoDAAPClientError
StoreDemoMode
com.apple.demo-settings
kJaliscoDAAPClientMOCDidSaveNotification
kJaliscoDAAPClientLastSuccessfulFullUpdateDateDictionary
Jalisco_DAAP_Server_Worker_Queue
Jalisco_DAAP_DSID_Queue
v32@?0@"BLJaliscoServerItem"8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
need store auth to get jalisco items
v12@?0B8
dsid
initiallyLoadingJalisco
need store auth to get family jalisco items
Can't delete jalisco items. Nothing to delete.
AMS bag error - no url for request %@
AMS error - nil request %@
AMS error with creating request in %@
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
<%@:%p url=%@ requestMethod=%ld dsid=%@ reason=%ld>
base-url
v16@?0@8
iBooks-
v16@?0@"NSDictionary"8
purchase-daap
v28@?0@"NSDictionary"8B16@"NSError"20
v24@?0@"NSNumber"8@"NSError"16
temporaryIdentifier
legacyUniqueIdentifier
publisherIdentifier
author
feedURL
fileURL
iTunesU
sample
album
folderName
purgePriority
lastUserAccessDate
assetID
coverImagePath
application/pdf
application/epub+zip
application/x-ibooks+zip
coverData
B16@?0@"NSString"8
<%@(%p)
 identifier='%@'
 temporaryIdentifier='%@'
 legacyUniqueIdentifier='%@'
 storeIdentifier='%@'
 persistentIdentifier='%@'
 publisherIdentifier='%@'
 title='%@'
 author='%@'
 feedURL='%@'
 publicationVersion='%@'
 album='%@'
 folderName='%@'
 mimeType='%@'
 itunesuAssetID='%@'
 type='%@'
 isSample='%@'
 iTunesU='%@'
 permlink='%@'
 path='%@'
 purgePriority='%@'
 accessDate='%@'
retry-after
cloud-daap-client-expired
update-on-app-focus-enabled
update-polling-frequency-seconds
update-polling-frequency-secs
v16@?0d8
database-id
forced-refresh-frequency-minutes
cloudID
full-token
full-url
v16@?0q8
v16@?0@"NSNumber"8
tokenCode
clientID
v20@?0B8@"NSDictionary"12
v20@?0B8@"BLPurchaseDAAPItem"12
v20@?0B8@"NSNumber"12
DAAP_Server_Update_Queue
DAAP_Server_Backoff_Queue
storeID = %@
displayVersion
com.apple.itunes.display-publication-version
isDisabled
purchasedTokenCode
purchaseHistoryID
sortedAuthor
sortedTitle
purchasedAt
storeDownloadParameters
expectedDate
chapterMetadataURLString
hlsPlaylistURLString
storeAccountID
storeID == %@
size
additionalAudiobookInfo
com.apple.ibooks.jalisco.updating
invalid request
Books jalisco purchase
Server-info:
successfully
with error
DB Fetch:
'%@:%d'
(%@)
com.apple.itunes.store.expected-release-date
com.apple.itunes.store.booklet-item-listing
com.apple.itunes.store.booklet-item
v16@?0@"DKDAAPWriter"8
v24@?0@"NSDictionary"8^B16
Fetch items
bl_audiobook_booklet_auto_migration
bl_content_restore_in_bookassetd
bl_pdf_download_in_bookassetd
BKAudiobookStreamingDisabled
v40@?0r^v8{_NSRange=QQ}16^B32
#EXT
v09182016
%@-%@.sqlite
databases
session-id
revision-number
delta
<%@:%p title=%@ author=%@ storeID=%@ storeAccountID=%@ >
NOT (storeID IN %@)
Nil jalisco model
Failed to load model %@
Nil jalisco persistentStore
Failed to create a moc for the persistent store %@
Nil jalisco moc
.*\b%@.*
(%K MATCHES[cd] %@ OR %K MATCHES[cd] %@)
update
com.apple.BLService.DownloadQueue.Download.Progress
com.apple.BLService.DownloadQueue.Download.Complete
com.apple.BLService.DownloadQueue.Download.Failed
com.apple.BLService.DownloadQueue.Purchase.Succeeded
com.apple.BLService.DownloadQueue.Purchase.Failed
com.apple.BLService.DownloadQueue.Server.Restarted
BLDownloadQueueTooManyInstances
Attempting to set an overrideInstance when one is already set.
You must use the BLDownloadQueue singleton before trying to use the BLDownloadQueueNonUI singleton.
v32@?0@"NSString"8@"BLPurchaseResponse"16@"NSError"24
<UNKNOWN>
missing purchase parameters
purchase parameters are required by this API
v24@?0@"BLDownload"8@"NSError"16
This method is deprecated and going away. See <rdar://problem/34630469>
storeItemIdentifier
storePlaylistIdentifier
downloadIdentifier
purchaseErrorInfo
purchaseErrorDomain
purchaseErrorCode
purchaseErrorDescription
downloadPhase
subtitle
collectionArtistName
collectionTitle
thumbnailImageURL
isRestore
isPurchase
storeAccountIdentifier
percentComplete
estimatedTimeRemaining
bytesDownloaded
bytesTotal
ContentRestore: downloadDictionary cannot be nil. Restore will fail
ContentRestore: downloadMetadataDictionary cannot be nil. Restore will fail
Failed to obtain the iTunes Sync lock.
Invalid parameter.  %@
Book already exists in local library.
Book exists locally in shared container but not in current users library.
Error adding shared entry to local plist.  %@
Book does not exist in current users library or the shared library, triggering a download.
Book does not exist in library, triggering a download.
Failed to add to the cloud. Error:  %@
Failed to add permalink %@. Error:  %@
Obtained cloud token.
Not signed in to iCloud. No edu cloud support available.
Warning. Unable to determine path extension from permlink {%@}
Failed to write plist to %@. Error: %@
Failed to add cloud item at %@. Error:  %@
Failed to write plist to %@. Error:  %@
Encountered error doing a coordinated read of %@. Error:  %@
Failed to delete iTunesU file with error:  %@
Failed to read cloud container with error:  %@
Failed to get contents of cloud documents directory. Error:  %@
bookItemForURL: %@
coordinated read taken for: %@
Expected to have a ubiquitous URL but instead got %@
Dropping unsupported key format %{public}@
Found rapguid attribute: %@
Ignoring tag %@
Invalid plist.
IMLibraryPlist: Unfiltered: %d; Filter: %d; Filtered: %d; Filter Hit: %d
IMLibraryPlist: Nothing to filter; Book Count: %d
IMLibraryPlist: Removing sidecar; %@
addDeletedPaths -- rewritePlist %d entries
removeDeletedPaths -- rewritePlist %d entries
Error changing modification date of %@ --  %@
Failed to convert key '%{public}@' hex->decimal: [%@]
Failed to hex->decimal: [%@]
storeIDFromBuyParameters: cannot retrieve storeID from nil buyParameters
isPreOrderFromBuyParameters: cannot retrieve isPreOrder key from nil buyParameters
isAudioBookFromBuyParameters: cannot retrieve productType key from nil buyParameters
[BLServiceProxy] bookassetd has started.
[BLServiceProxy] Shutting down service proxy.
[BLServiceProxy] Attempting to reconnect to bookassetd after interruption.
[BLServiceProxy] Creating connection to bookassetd.
[BLServiceProxy] The connection to bookassetd was interrupted.
[BLServiceProxy] The connection to bookassetd was invalidated.
Remote proxy hit an error:  %@
Synchronous Remote proxy hit an error:  %@
[BLServiceProxy] fetchDownloadListWithReply
[BLServiceProxy] fetchDownloadFromDownloadID
[BLServiceProxy] pauseDownloadWithID
[BLServiceProxy] resumeDownloadWithID
[BLServiceProxy] restartDownloadWithID
[BLServiceProxy] cancelDownloadWithID
[BLServiceProxy] cancelAllActiveDownloadsWithReply
[BLServiceProxy] purchaseWithRequest:uiHostProxy:reply:
[BLServiceProxy] downloadWithPermlink
[BLServiceProxy] requestDownloadWithParameters
[BLServiceProxy] requestDownloadWithMetadata:isRestore
[BLServiceProxy] requestDownloadsWithMetadata:areRestore
[BLServiceProxy] requestDownloadsWithRestoreContentRequestDictionary
[BLServiceProxy] requestDownloadsWithManifestRequest
[BLServiceProxy] flushMetrics
[BLServiceProxy] performAutomaticDownloads
[BLServiceProxy] setAutomaticDownloadEnabled
[BLServiceProxy] reloadFromServerWithReply
[BLServiceProxy] monitorProgressWithReply
[BLServiceProxy] setRacGUID:forStoreID:
[BLServiceProxy] racGUIDforStoreID:
[BLServiceProxy] removeRacGUIDForStoreID:
[BLServiceProxy] setMigrationState:forStoreIDs:
[BLServiceProxy] migrationInfoWithStoreID:
[BLServiceProxy] migrationInfosWithStoreIDs:
[BLServiceProxy] migrationInfosWithStates:
[BLServiceProxy] removeMigrationInfoForStoreID:
[BLServiceProxy] removeAllMigrationInfosExcludingStates:
[BLServiceProxy] prepareForRemoveAppWithReply
[BLServiceProxy] setValueSimulateCrashAtInstallStart:withReply:
[BLServiceProxy] setValueSimulateCrashAtInstallDuringDecrypt:withReply:
[BLServiceProxy] setValueSimulateCrashAtInstallDuringUnzip:withReply:
[BLServiceProxy] setValueSimulateCrashAtInstallDuringFinish:withReply:
[BLServiceProxy] getValueSimulateCrashAtInstallDuringFinishWithReply:
[BLServiceProxy] resetAllCrashSimulationOverridesWithReply:
[BLServiceProxy] setValueSimulateDeviceOutOfSpace:
[BLServiceProxy] getValueSimulateDeviceOutOfSpaceWithReply:
[DownloadQueue]: _cancelAllPausedDownloads
[DownloadQueue]: notifyComplete: for observer %@
[DownloadQueue]: NotifyPurchaseAttemptForRequest: %@
[DownloadQueue]: notifying observer %@ of purchaseAttemptForRequest:
[DownloadQueue]: notifying observer %@ of downloadQueuePurchaseAttemptForIDWithUserInfo
[DownloadQueue]: notifying observer %@ of downloadQueuePurchaseAttemptForID
[DownloadQueue]: Added observer: %@
[DownloadQueue]: Removed observer: %@
(dID=%{public}@) [DownloadQueue]: notifyDidCompleteForDownloadID
(dID=%{public}@) [DownloadQueue]: sendInitialProgressNotificationForDownloadWithStoreID...
(dID=%{public}@) [DownloadQueue]: notifying target observer: %@ of downloadStatesDidChange: %@
(dID=%{public}@) [DownloadQueue]: notifying observer: %@ of downloadStatesDidChange: %@
[DownloadQueue]: nil passed for downloadID to _sendInitialProgressNotificationFor...
(dID=%{public}@) [DownloadQueue]: sendCancelCompletionNotificationForDownloadWithDownloadID
(dID=%{public}@) [DownloadQueue]: sendingCancelComplete for observer %@
[DownloadQueue]: _sendCancelCompleteNotification: nil passed for downloadID
(dID=%{public}@) [DownloadQueue]: notifying percentComplete:[%@]
[DownloadQueue]: _downloadStatusFromDictionary: failed to retrieve downloadID from dictionary %@
(dID=%{public}@) [DownloadQueue] Copied download status %p to download status %p for dictionary %@
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of downloadManagerDownloadsDidChange
[DownloadQueue]: _notifyProgress: nil passed for downloadID
(dID=%{public}@) [DownloadQueue] Obtained download status %p for dictionary %@
(dID=%{public}@) [DownloadQueue]: _postDownloadCompleteNotification: About to notify %lu observers
(dID=%{public}@) [DownloadQueue]: download added, notifying observer %@ of downloadQueueDownloadsDidChange
(dID=%{public}@) [DownloadQueue]: notifying observer %@ download completed
(dID=%{public}@) [DownloadQueue]: notifying observer %@ download completed with error:  %@
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of downloadQueueDownloadsDidChange
[DownloadQueue]: _postDownloadCompleteNotificationWithDictionary: failed to retrieve downloadID from downloadStatus %@
(dID=%{public}@) [DownloadQueue]: purchaseDidCompleteWithResponse
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of purchaseDidComplete
(dID=%{public}@) [DownloadQueue]: purchaseDidFailedWithResponse
(dID=%{public}@) [DownloadQueue]: notifying observer %@ of purchaseDidFail
The object [%@] of class: [%@] could not be converted to neither an NSString nor an NSNumber
The object [%@] of class: [%@] could not be converted to an NSNumber
The object [%@] of class: [%@] could not be converted to an NSDate
[DownloadQueue]: we do not have enough information to post initial progress for this download
(dID=%{public}@) [DownloadQueue]: setting percentComplete 5 percent
[DownloadQueue]: nil downloadID passed to _downloadStatusSToreID:storePlaylistID:orPermLink:downloadID:isPaused:isAudiobook:
[DownloadQueue] didFailWithUserInfo:
[DownloadQueue] downloadCompleteWithUserInfo:
[DownloadQueue] progressWithUserInfo
[DownloadQueue] purchaseFailedWithUserInfo
[DownloadQueue] purchaseSucceededWithUserInfo
[BLDownloadQueueServerProgressObserver] registering to monitor progress.
[BLDownloadQueueServerProgressObserver] Failed registering to monitor progress:  %@
[BLDownloadQueueServerProgressObserver] Successfully registered to monitor progress.
DMAPParser processResponse: couldn't get 8-byte message header
DMAPParser parseStream: got %lx bytes; expected %lx; code '%c%c%c%c'
Attempting to process XML response: %@
Flavor doesn't look correct like the correct size.
setBool being passed a %ld byte value for: <%@>!
setSInt8 being passed a %ld byte value for: <%@>!
setUInt8 being passed a %ld byte value for: <%@>!
setSInt16 being passed a %ld byte value for: <%@>!
setUInt16 being passed a %ld byte value for: <%@>!
setFloat32 being passed a %ld byte value for: <%@>!
setUInt64 being passed a %ld byte value for: <%@>!
xmlcode!
Unknown code: '%c%c%c%c', size=%ld, value=%u
Unknown code: '%c%c%c%c', size=%ld, value=0x%x
Unknown code: '%c%c%c%c', size=%ld
Unknown code: '%c%c%c%c', size=%ld, value=%s
Unable to create service proxy: %@
no streamInfs on masterPlaylist: %@
Downloading master playlist from: %@
Error downloading master playlist: %@
Bad HTTP response when downloading master playlist: %ld
Downloaded master playlist, about to parse it.
Parsed master HLS Playlist but it had no valid media playlist (error was %@)
Unable to parse master HLS Playlist: %@
Parsed master playlist. Out of a total of %lu choices, using streamInf: %@
Downloaded master playlist, about to parse it to get racGUID.
[UIHostServiceProxy]: use out-of-process authenticate
[UIHostServiceProxy]: use out-of-process dialog
[UIHostServiceProxy] received error from AMSSystemAlertDialogTask:  %@
[UIHostServiceProxy] received result from AMSSystemAlertDialogTask for request %@ and calling replay block with result %@
[UIHostServiceProxy]: Engagement request not supported for non-UI
Failed to complete backgound task after file lock. This will most likely result in a crash
Taking plist lock.
Releasing plist lock.
Waiting for plist to get unlocked.
Failed to obtain plist lock.
Error xmlXPathRegisterNs: %d
Error hashing file: %@ --  %@
Error creating zip archive at %@. error:  %@
Error creating zip archive at %@. exception: %@
Failed to remove {%@} file. Error:  %@
Encountered exception parsing %@. %@
Warning: using a completely temporary NSUUID to add the book to the bookshelf
Error attempting to read store id. Error:  %@
Unsupported file type '%@'.
DownloadInstaller: Could not serialize plist:  %@
DownloadInstaller: Wrote plist to: %@
DownloadInstaller: Could not write plist:  %@
[DownloadManifestRequest] Start download manifest request %p: urlRequest=%@
[DownloadManifestRequest] addDownloadsWithManifestRequest for request %p returned error:  %@
[DownloadManifestRequest] addDownloadsWithManifestRequest for request %p completed with response %@.
Error -[NSURL bl_isUbiquitous]:  %@
Error -[NSURL bl_isDownloaded]:  %@
Error -[NSURL bl_isDownloading]:  %@
Error querying bl_isUbiquitousPromise  %@
Unable to initialize BLJaliscoServerSource
Failed to delete database:  %@
Failed to fetch distinct items count:  %@
Failed to fetch all items count:  %@
[BLJaliscoServerSource setupCoreDataStack]: Unable to bring up jalisco core data stack. Exception: %{public}@ %{public}@ %{public}@
It looks like the migration failed:  %@
Failed to add jalisco Persistent Store: %@ %@
Added jalisco Persistent Store: %@ persistentstoreID:%@
[BLJaliscoServerSource persistentStoreCoordinatorWithError]: Unable to bring up jalisco core data stack. Exception: %{public}@ %{public}@ %{public}@
[BLJaliscoServerSource currentJaliscoHistoryToken] token:(%@) from psc:(%@)
[BLJaliscoServerSource currentJaliscoHistoryToken] Failed to get currentJaliscoHistoryToken %@
[BLJaliscoServerSource newManagedObjectContext] Failed to create newManagedObjectContext %@
[BLJaliscoServerSource truncateDatabaseError] Removing store:%@ destroyed:%{BOOL}d
[BLJaliscoServerSource truncateDatabaseError] There's nothing to truncate!
Added new store at storeURL:(%@), persistentstoreID:(%@), storeOptions:(%@) Setup jalisco stack with history token after truncate:(%@)
Trying to refresh store at storeURL:(%@), persistentstoreID:(%@)
Refreshed store at storeURL:(%@), persistentstoreID:(%@) storeOptions:(%@) History token(%@)
Refresh store Failed to re-add store %@
Refresh store failed - no store to refresh %@
Unable to initialize BLJaliscoDAAPClient
ARTWORK: Ignoring timebomb on its %lu try.
Set items hidden: Moc Save Error:  %@
Reset purchase token: Moc Save Error:  %@
Non-empty purchase token storeIDs: Moc Fetch Error:  %@
UpdatePolitely was successful. Clearing storeAuthenticationRequired
Need update test: currentGeneration:%lu pendingGeneration:%lu Needs update:%{BOOL}d
No update required
[BLJaliscoDAAPClient] updatePolitely:%{BOOL}d reason:%ld will update for DSIDs:(%@)
DAAP Setup: Couldn't count items.  %@
Dispatch group: creation thread %@ purchaseDAAPSyncsInFlight %lu - updatePolitely
Dispatch group: entry thread %@ dsid:%@ purchaseDAAPSyncsInFlight %lu - updatePolitely
DAAP Setup, dsid: %@, success: %d
DAAP Update, dsid: %@, success: %d
Dispatch group:leave thread %@ dsid:%@  purchaseDAAPSyncsInFlight %lu - after DAAP update
Dispatch group:leave thread %@ dsid:%@ purchaseDAAPSyncsInFlight %lu - NO DAAP update
Dispatch group:NOTIFY thread %@  purchaseDAAPSyncsInFlight %lu - updatePolitely
[BLJaliscoDAAPClient] no update - no signed in user
updatePolitelyAfterSignOut politely:%{BOOL}d reason:%ld
updatePolitelyAfterSignOut Triggering updatePolitely now for %@
_addPurchaseServerForCurrentUser dsid:%@
_addPurchaseServerForCurrentUser Created daap server for dsid:(%@) currentServerGen:(%lu)
_addPurchaseServerForCurrentUser Finished for dsid:(%@) currentServerGen:(%lu)
_addPurchaseServerForCurrentUser no current account
updatePolitelyAfterSignIn politely:%{BOOL}d reason:%ld
updatePolitelyAfterSignIn Triggering updatePolitely now
updateFamilyPolitely was successful. Clearing storeAuthenticationRequired
Resetting polite timers ... clearing old dictionary:%@
ERROR: Could not reset polite timer.
deleteItemsWithStoreIDs storeIDs:%@
Deleting items %@
Deleted jalisco items %@. Error: %@
Fail to delete jalisco items %@. Error: %@
Couldn't fetch items to delete Error: %@
Adding family member BLPurchaseDAAPServer objects for %@
Removing family member BLPurchaseDAAPServer objects for %@
_processFamilyCircle: Failed to fetch jalisco objects excluding current family members: %@,  %@
_processFamilyCircle: Deleting %lu jalisco objects that are no longer accessible: %@
Moc Save Error:  %@
_processFamilyCircle: No items up for deletion
Could not truncate database. error:  %@
Account Changed. Truncated jalisco database
Account Changed. Resetting and refreshing... with reason %lu. Updating accountNumber from old:%{private}@ to new:%{private}@
Jalisco account stale .. removeAllObjects
Triggering clientDetectedStoreChangeAndAccountChange
Triggering clientDetectedStoreChange
%@: No URL to configure with.
Error with BLURLRequestEncoder creating request %@ %@
%@: Cannot execute request because request is nil %@
daapURL request failed - Request %@, error:  %@
Error fetching %@:  %@
Failed to start the service proxy  %@
Set autoflush enabled: %hhd
Encountered error while flushing metrics  %@
WARNING: Restoring item from cloud item {%@} that is missing a permlink!
WARNING: Attempting to restore item from cloud item that is missing a path!
Encountered error retrieving cover image from promised item. Error:  %@
Failed to coordinate write of thumbnail resource value for %@. Error:  %@
Error encountered removing cover image at %@
Invalid fileURL in setFileURL:%@
Art Request: Couldn't find items to refresh artwork with.  %@
Art Request: updateItemImageURLsIgnoringCache %d dsid:%@
Art Request: will not make request
Art Request: Server isn't setup. Can't do this right now.
Art Request: Can't make request. No DB ID.
Art Request: dsid: %@, RETRY
Art Request: %@, Error getting response:  %@
Art Request: dsid: %@ succeeded
Incomplete artwork response for %@ -- %@
ERROR removing time-bombed artwork:  %@
Error saving artwork state %@
Error saving server version after hiding.  %@
No server version returned in kDMAPEditCommandBulkResponseCode
HideItems: dsid:%@ storeIDS:%@
HideItems: will not make request
HideItems: Server isn't setup. Can't do this right now.
HideItems: Can't make request. No DB ID.
HideItems: Can't make request. Can't create request body
HideItems: retry
HideItems: Error getting response:  %@
HideItems: Finding corresponding jalisco items with cloudIDs(%@)
HideItems: Hiding items locally in database:(%@)
Error saving items after hiding.  %@
HideItems: success %@
DAAP Login success for dsid: %@. Kicking off artwork fetch..
DAAP Login failed.
DAAP Server-Info failed.
Fetching purchase history for %@
1. [BLPurchaseDAAPServer] FetchItemsPolitely: dsid:%@ lastFullRefreshedAt:%@ nextUpdateAt:%@ nextFullRefreshAt:%@
[BLPurchaseDAAPServer] FetchItemsPolitely: Being polite and NOT updating at the current time. %@ > %@
2. [BLPurchaseDAAPServer] dsid: %@ Setup server with reason %ld. Now polling
3. [BLPurchaseDAAPServer] dsid: %@ Last poll before this at:(%@). Finished POLLING, latestVersion:%{public}@ localServerRevision:%{public}@ Fetching database
4a. [BLPurchaseDAAPServer] dsid: %@ Need to fetch a new database politely:%{BOOL}d localServerRevision %@
5. [BLPurchaseDAAPServer] dsid: %@ Got database %@
Couldn't find existing items.  %@
6. [BLPurchaseDAAPServer] dsid: %@ Fetching items _fetchItemsWithLocalVersion with pairs:%@
7. [BLPurchaseDAAPServer] dsid: %@ Fetch items succesful. Saving latestVersion:%@ database:%@ items:%@
Error updating database. %@
7. [BLPurchaseDAAPServer] dsid: %@ CoreData Save items sucess! %@
Error writing kJaliscoDAAPClientLastSuccessfulFullUpdateDateDictionary to preferences.
8. FetchItemsPolitely: Updated kJaliscoDAAPClientLastSuccessfulFullUpdateDateDictionary user default to %@
FetchItemsPolitely %@ completed!
[BLPurchaseDAAPServer] FetchItemsPolitely DAAP Database failed
4b. [BLPurchaseDAAPServer] FetchItemsPolitely No update required, we have the latest revision for dsid:(%@): latest:%{public}@ -- local:%{public}@
[BLPurchaseDAAPServer] FetchItemsPolitely Error polling latest version for dsid:%@.
[BLPurchaseDAAPServer] FetchItemsPolitely fail for %@
Error fetching local info for %@
_updatePersistentServerRevision updating local db with items %@
_updatePersistentServerRevision failed %@
[BLPurchaseDAAPServer] Setup item:%@
ERROR: No token/adam id for %@
[BLPurchaseDAAPServer] Adding items to db:%@ 
NO UPDATE - daap items missing
Ignoring request due to backoff being in effect. Will resume %@
failed with error: %@ %@
Server requested backoff. Trying again at %@
Requestenting silent auth for %@
Silent auth returned: %{BOOL}d
No fallback for authentication
DAAP reconnect %@
Unrecognized DAAP Response: %@
Throttling request until %@
%@ will not make request
%@ dsid:%@ reason:%ld
%@ retry
%@ Error getting response:  %@
%@ Error no response data
PurchaseDAAPServer Server Info request completed %{public}@ for (%@)
Configure(login) will not make request
Configure(login) dsid: %@, Reason: %ld RETRY
Configure(login) dsid: %@, Error getting response %@
Configure(login) parsed data unrecognized %@ %@
PurchaseDAAPServer login request completed %{public}@ for (%@)
Poll update will not make request
Poll update: No Session ID to fetch session with.
Poll Update: Error getting response for %@ %@
Poll Update success LATEST VERSION:%@
Poll Update: Failed for %@
PurchaseDAAPServer Poll Update completed %{public}@ for (%@)
DAAP DB Fetch: Missing a parameter type. dsid:(%@) reason:(%ld) sessionID: %{public}@ revisionNumber:%{public}@ delta:%{public}@
%@ No server revision or databaseRequest to fetch databases from.
%@ dsid: %@, Reason: %ld RETRY
%@ dsid: %@, Error getting response:  %@
_fetchDatabaseWithRequest dsid: %@, Reason: %ld data:%@
[BLPurchaseDAAPServer] _fetchItemsWithLocalVersion dsid:%@ serverVersion:%@ reason:%ld
No database to fetch items with.
%@ dsid: %@, RETRY
[BLPurchaseDAAPServer] _fetchItemsWithLocalVersion dsid:%@ items: %@ SUCCEEDED
Error reading playlist:  %@
BLDAAPDatabasesRequest init failed: Missing a parameter type. dsid:(%@) reason:(%ld) sessionID: %{public}@ revisionNumber:%{public}@ delta:%{public}@
BLJaliscoReadOnlyDAAPClient fetchItemsForDSIDs:excludeStoreIDs:isExplicitRestricted %@ failed. Error: %@
BLJaliscoReadOnlyDAAPClient: Unable to bring up jalisco core data stack. Exception: %{public}@ %{public}@ %{public}@
BLJaliscoReadOnlyDAAPClient: Failed to create a persistent store directory at URL %@. Error: %@
[DownloadQueueNonUI]: using singelton instance: %@
Attempting to set an overrideInstance when one is already set.
You must use the BLDownloadQueue singleton before trying to use the BLDownloadQueueNonUI singleton.
[DownloadQueue]: purchaseWithBuyParameters:uiManager:
purchaseWithBuyParameters:uiManager:
(dID=%{public}@) [DownloadQueue] purchaseWithBuyParameters completed without error
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: this is a preorder purchase download
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: error issuing a purchase request: %@
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: error cancelling download: %@
(dID=%{public}@) [DownloadQueue]: purchaseWithBuyParameters: cancelled download
[DownloadQueue]: addDownloadWithPurchaseParameters
[DownloadQueue]: addDownloadWithPermlink
[DownloadQueue]: addDownloadWithPermlink: could not add permlink to container %@.  It may already exist
(dID=%{public}@) [DownloadQueue]: addDownloadWithPermlink: error issuing a permlink download: %@
(dID=%{public}@) [DownloadQueue]: addDownloadWithPermlink: error cancelling download: %@
(dID=%{public}@) [DownloadQueue]: addDownloadWithPermlink: cancelled download.
[DownloadQueue]: addDownloadWithPermlink: could not add permlink to container %@.  It may already exist. Recevied error:  %@
[DownloadQueue]: addDownloadWithMetadata
[DownloadQueue]: addRestoreDownloadWithMetadata
[DownloadQueue]: pauseDownloadWithID
[DownloadQueue]: resumeDownloadWithID
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: error issuing a permlink download.  Error: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: error cancelling download with id: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: cancelled download.
(dID=%{public}@) [DownloadQueue]: error fetching download from downloadID:  %@
[DownloadQueue]: cancelDownloadWithID
[DownloadQueue]: Cancelling all active book downloads.
[DownloadQueue]: Error encountered creating service proxy: %@
[DownloadQueue]: Error encountered cancelling active downloads: %@
[DownloadQueue]: Finished Cancelling all active book downloads.
[DownloadQueue]: prepareForRemoveApp
[DownloadQueue]: Error encountered preparing BookLibrary for app removal. %@
[DownloadQueue]: addDownloadsWithMetadata:
[DownloadQueue]: addRestoreDownloadsWithMetadata:
[DownloadQueue]: addDownloadsWithRestoreContentRequestItems:
[DownloadQueue]: addDownloadsWithManifestRequest:completion: for manifestRequest: %@
addDownloadsWithManifestRequest:completion:
This method is not implemented. Please file a radar.
[DownloadQueue]: processAutomaticDownloadsWithReply
[DownloadQueue]: restartDownloadWithID
[DownloadQueue]: Request reload server download queue
[DownloadQueue]: downloadWithMetadata: error issuing a download request with metadata.  Error: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: error cancelling download: %@
(dID=%{public}@) [DownloadQueue]: resumeDownloadWithID: cancelled download
[DownloadQueue]: Account Changed.  Cancelling paused downloads
BLDAAPItemsRequest
BLRestoreRequestItem
NSCopying
NSSecureCoding
NSCoding
BLDAAPHideItemsRequest
BLLibrary
BLDownloadMetadata
BLRestoreResponseItem
BLItemContentRating
BLEduCloudContainer
BLHLSPlaylist
BLM3U8ParserDelegate
NSObject
BLHLSMedia
BLHLSGroup
BLHLSStreamInf
BLHLSMap
BLHLSSegment
BLHLSPlaylistState
BLHLSKey
BLDAAPLoginRequest
IMLibraryPlist
BLBundleClass
BLJaliscoBookletItem
BLUtilities
BLServiceProxy
BLServiceProtocol
BLServiceProxyConnectionFactory
BLDownloadQueueServerProgressObserver
BLProgressReceiving
BLServiceProxyConnectionMonitoring
BLPurchaseDAAPParser
DRCP
BLBookletMigrationInfo
BLBookletMigrationStore
BLMetadataStore
BLHLSAudiobookFetcher
BLJaliscoServerDatabase
BLItemArtworkImage
BLDownload
BLDAAPArtRequest
BLPurchaseResponseItem
BLPurchaseResponse
BLUIHostServiceNonUI
BLUIHostServiceProtocol
IMLockFile
BLAdditions
BLLibraryUtility
BLLibraryUtilityAdditions
BLDownloadManifestRequest
BLJaliscoServerBookletItem
BLPurchaseRequest
BLItemImageCollection
BLDownloadManifestResponse
IMUbiquity
BLJaliscoServerSource
JaliscoExtras
UnsignedLongLongValue
BLDownloadStatus
BLPurchaseDAAPItem
BLJaliscoServerInfo
BLURLRequestEncoder
AMSRequestEncoding
BLDAAPServerInfoRequest
BLDAAPBuffer
BLJaliscoDAAPClient
BLPurchaseDAAPServerDelegate
BUAccountsObserving
BLDAAPURLRequest
BLServiceInterface
BLMetrics
BLBookItem
BLPurchaseDAAPServer
BKPurchaseDAAPBackoff
BLM3U8Parser
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BLJaliscoVersion
BLDAAPDatabasesRequest
BLJaliscoItem
BLJaliscoReadOnlyDAAPClient
BLJaliscoServerItem
BLDAAPUpdateRequest
BLRequest
BLDownloadQueueNonUI
willChangeValueForKey:
initWithType:subpredicates:
hasPrefix:
encodeObject:forKey:
setByAddingObjectsFromSet:
setEntity:
deleteObject:
appendFormat:
initWithConfiguration:
setPersistentStoreCoordinator:
isUbiquitous
removeObject:
bl_setDateIfDifferent:value:
removeObjectAtIndex:
isUbiquitousItemAtURL:
initWithContainerID:bag:
hasSuffix:
code
initWithContentsOfFile:
setClasses:forSelector:argumentIndex:ofReply:
bl_setDictionaryIfDifferent:value:
purchase
initWithUTF8String:
currentPersistentHistoryTokenFromStores:
removeObjectForKey:
setPredicate:
writeString:withCode:
writeToFile:atomically:
destroyPersistentStoreAtURL:withType:options:error:
entityForName:inManagedObjectContext:
initWithUUIDString:
bl_setNumberIfDifferent:value:
currentProcess
initWithContentsOfURL:
removeObjectsAtIndexes:
purchaseDAAP
writeToFile:options:error:
mutableCopy
initWithUnsignedChar:
initWithDSID:altDSID:username:options:
bl_setStringIfDifferent:value:
setClientInfo:
hashTableWithOptions:
setWaitsForConnectivity:
array
mutableCopyWithZone:
isUserSignedInToiTunes
initWithUnsignedInt:
setPropertiesToFetch:
currentThread
dictionaryWithCapacity:
writeToURL:atomically:
writeToURL:options:error:
entryForName:
removeObserver:accountTypes:
initWithUnsignedLongLong:
currentUser
dictionaryWithContentsOfFile:
setWithArray:
setPropertiesToGroupBy:
fetchRequestWithEntityName:
absoluteString
arrayByAddingObjectsFromArray:
setWithCapacity:
setExecutableName:
fileExistsAtPath:
arrayWithArray:
initWithUnsignedShort:
writeUInt32:withCode:
enumerateByteRangesUsingBlock:
removeObserver:name:object:
dictionaryWithDictionary:
removePersistentStore:error:
enumerateKeysAndObjectsUsingBlock:
setWithObject:
arrayWithCapacity:
fileExistsAtPath:isDirectory:
ubiquityIdentityToken
writeUInt8:withCode:
setExportedInterface:
lastObject
setWithObjects:
dictionaryWithObjects:forKeys:
xmlDocumentFromArchive:
arrayWithObject:
persistentStores
account
dictionaryWithObjects:forKeys:count:
enumerateObjectsUsingBlock:
setExportedObject:
lastPathComponent
set_requiresPowerPluggedIn:
underlyingErrors
arrayWithObjects:
replaceBytesInRange:withBytes:length:
dictionaryWithObjectsAndKeys:
sessionWithConfiguration:delegate:delegateQueue:
set_sourceApplicationBundleIdentifier:
arrayWithObjects:count:
fileOwnerAccountName
interfaceWithProtocol:
boolForKey:
plistFromArchive:
didChangeValueForKey:
invalidate
string
componentsJoinedByString:
initWithData:encoding:
dataTaskWithRequest:completionHandler:
componentsSeparatedByString:
stringByAppendingFormat:
fileSystemRepresentation
activeStoreAccount
dataUsingEncoding:
componentsWithURL:resolvingAgainstBaseURL:
errorWithDomain:code:userInfo:
length
setFetchLimit:
stringByAppendingPathComponent:
bu_arrayByRemovingDuplicates
setAccount:
postNotification:
initWithDomain:code:userInfo:
dataWithBytes:length:
bu_arrayByRemovingNSNulls
notificationWithName:object:userInfo:
postNotificationName:object:userInfo:
fileURLWithPath:
stringByAppendingPathExtension:
dataWithContentsOfURL:
escapedPatternForString:
localizedDescription
bu_booksGroupContainerDocumentsURL
setQueryItems:
dataWithContentsOfURL:options:error:
domain
fileURLWithPath:isDirectory:
stringByAppendingString:
localizedStringFromDate:dateStyle:timeStyle:
stringByDeletingLastPathComponent
bu_booksGroupContainerURL
sharedManager
null
dataWithPropertyList:format:options:error:
doubleValue
executeFetchRequest:error:
bu_booksRepositoryURL
predicate
addEntriesFromDictionary:
fileURLWithPath:relativeToURL:
lock
initWithEntityName:
stringByRemovingPercentEncoding
requestWithMethod:URL:parameters:
bu_errorWithDomain:code:description:underlyingError:
URLByAppendingPathComponent:
isEqualToNumber:
addFinishBlock:
filteredArrayUsingPredicate:
finishWithError:
isEqualToString:
numberWithBool:
sharedProvider
bu_isErrorPassingTest:
stringByReplacingOccurrencesOfString:withString:
URLByAppendingPathComponent:isDirectory:
setAllowsCellularAccess:
reset
queryItemWithName:value:
setRemoteObjectInterface:
existingObjectWithID:error:
numberWithDouble:
unsignedIntValue
stringByStandardizingPath
firstObject
setTimeZone:
addItems:
addObject:
setLenient:
imageExistsForStoreID:
initWithFilePresenter:
URLForPersistentStore:
unsignedIntegerValue
date
numberWithFloat:
bu_queryStringForDictionary:escapedValues:
setRequestEncoding:
addObjectsFromArray:
URLForUbiquityContainerIdentifier:
initWithFloat:
isFileURL
setFlushTimerEnabled:
stringFromDate:
attributesOfItemAtPath:error:
setTimeoutIntervalForRequest:
bundleForClass:
numberWithInt:
unsignedLongValue
containsObject:
longLongValue
dateByAddingTimeInterval:
numberWithInteger:
dateFromString:
setTimeoutIntervalForResource:
predicateWithFormat:
raise:format:
initWithFormat:
addObserver:accountTypes:
longValue
resourceValuesForKeys:error:
setMergePolicy:
numberWithLongLong:
dateWithTimeIntervalSince1970:
predicateWithValue:
stringWithCString:encoding:
addObserver:selector:name:object:
URLWithString:
setDatabaseVersion:
extractFromArchive:
rangeOfString:
stringWithFormat:
numberWithUnsignedLongLong:
addPersistentStoreWithType:configuration:URL:options:error:
setResultType:
response
setMescalType:
lowercaseString
dateWithTimeIntervalSinceNow:
rangeOfString:options:range:
setDateFormat:
buyParams
UTF8String
responseDictionary
subarrayWithRange:
contentsOfDirectoryAtPath:error:
setReturnsDistinctResults:
object
objectAtIndex:
present
readArchiveFromURL:options:queue:completion:
UUID
setReturnsObjectsAsFaults:
UUIDString
coordinateReadingItemAtURL:options:error:byAccessor:
setDebugReason:
substringFromIndex:
objectAtIndexedSubscript:
substringToIndex:
responseStatusCode
decodeBoolForKey:
managedObjectContext
setAttributes:ofItemAtPath:error:
coordinateWritingItemAtURL:options:error:byAccessor:
initWithMachServiceName:options:
objectForInfoDictionaryKey:
indexOfObject:
copy
userInfo
resultWithError:
substringWithRange:
initWithManagedObjectModel:
caseInsensitiveCompare:
indexesOfObjectsPassingTest:
userType
decodeInt64ForKey:
fetchAllImageAssetsIgnoringLocalCache:
registerDefaults:
resultWithTimeout:error:
setAuthenticationType:
objectForKeyedSubscript:
initWithName:reason:userInfo:
setDialogOptions:
resume
decodeIntForKey:
downloadTaskWithURL:completionHandler:
count
setServer:
username
sortDescriptorWithKey:ascending:
decodeIntegerForKey:
allHeaderFields
characterAtIndex:
initWithObjects:
countByEnumeratingWithState:objects:count:
sortedArrayUsingFunction:context:
_initWithSuiteName:container:
initWithObjectsAndKeys:
decodeObjectOfClass:forKey:
classForCoder
setUbiquitous:itemAtURL:destinationURL:error:
relativePath
setObject:forKeyedSubscript:
sortedArrayUsingSelector:
synchronize
decodeObjectOfClasses:forKey:
synchronousRemoteObjectProxyWithErrorHandler:
allKeys
pathExtension
initWithArray:
countForFetchRequest:error:
bl_beginBackgroundTaskWithName:expirationHandler:
allObjects
remoteObjectProxyWithErrorHandler:
setUndoManager:
setIncludeClientVersions:
getResourceValue:forKey:error:
valueForKey:
defaultBag
pathForResource:ofType:
allValues
valueForKeyPath:
setParentItem:
bl_endBackgroundTask:
setUrlKnownToBeTrusted:
allocWithZone:
standardUserDefaults
save:
clientDetectedPredicateChange:
initWithRequest:
setInterface:forSelector:argumentIndex:ofReply:
defaultCenter
setInterruptionHandler:
removeAllObjects
initWithBool:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
clientDetectedPurchaseServerClientExpired:
ams_DSID
scanHexLongLong:
setInvalidationHandler:
initWithBytes:length:encoding:
propertyListWithData:options:format:error:
encodeBool:forKey:
performAuthentication
initWithShort:
defaultManager
clientDetectedStoreChange:
setUserUID:
setSortDescriptors:
initWithCapacity:
scanUnsignedLongLong:
migratePersistentStore:toURL:options:withType:error:
removeImageForStoreID:error:
setValue:forHTTPHeaderField:
initWithString:
performBlock:
clientDetectedStoreChangeAndAccountChange:
removeItemAtPath:error:
valueWithCompletion:
andPredicateWithSubpredicates:
defaultSessionConfiguration
encodeInt64:forKey:
setValue:forKey:
scannerWithString:
initWithChar:
statusCode
performBlockAndWait:
removeItemAtURL:error:
encodeInt:forKey:
hasChanges
encodeInteger:forKey:
timeIntervalSince1970
initWithTimeIntervalSinceNow:
initWithConcurrencyType:
appendBytes:length:
timeZoneForSecondsFromGMT:
initWithDSID:reason:
initWithDSID:reason:databaseID:body:
createDaapURL:
bagDatabaseID
setBagDatabaseID:
.cxx_destruct
_bagDatabaseID
T@"NSNumber",&,N,V_bagDatabaseID
init
_downloadDictionaryWithDownloadMetadata:additionalDownloadPropertiesDictionary:
_assetDictionaryWithDownloadMetadata:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithDownloadDictionary:assetDictionary:
initWithDownloadMetadataDictionary:additionalDownloadPropertiesDictionary:
downloadDictionary
setDownloadDictionary:
assetDictionary
setAssetDictionary:
_downloadDictionary
_assetDictionary
T@"NSDictionary",&,N,V_downloadDictionary
T@"NSDictionary",&,N,V_assetDictionary
initWithDSID:databaseID:body:
initialize
defaultBookLibrary
_bookItemsFromPlist:sharedPlist:
_addDate:toPlist:bookItem:error:
_initWithBooksPlist:purchasedPlist:managedPlist:sharedPlist:
_init
_bookItemsFromPlist:
allBookItems
addITunesUBookToLibraryWithPermlink:title:result:
_lookupBookItemExhaustiveFromPermlink:error:
_addBookItemToEduContainer:error:
removeBookFromLibraryWithIdentifier:error:
_removeBookFromLibraryWithPath:error:
bookIdentifierFromURL:error:
_allPlists
_list:testBlock:
_findBookItemWithTestBlock:foundWhere:
_bookItemFromStoreID:permlink:error:
_bookItemFromPermlink:error:
_isMultiUser
_isShareableBook:
_perUserBookURLForBookURL:
_downloadWithPermalink:title:result:
_addSharedBookToPurchasesPlistWithPermlink:error:
_bookItemIsShared:
_bookWasOpenedWithStoreID:permlink:date:
booksPlist
setBooksPlist:
purchasedPlist
setPurchasedPlist:
managedPlist
setManagedPlist:
sharedPlist
setSharedPlist:
dispatchQueue
setDispatchQueue:
_booksPlist
_purchasedPlist
_managedPlist
_sharedPlist
_dispatchQueue
T@"IMLibraryPlist",&,N,V_booksPlist
T@"IMLibraryPlist",&,N,V_purchasedPlist
T@"IMLibraryPlist",&,N,V_managedPlist
T@"IMLibraryPlist",&,N,V_sharedPlist
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
boolValue
integerValue
initWithDictionary:
artistIdentifier
artistName
betaExternalVersionIdentifier
bundleIdentifier
cloudIdentifier
collectionArtistName
collectionIdentifier
collectionIndexInCollectionGroup
collectionName
composerIdentifier
composerName
contentRating
downloadPermalink
durationInMilliseconds
episodeIdentifier
episodeSortIdentifier
fullSizeImageURL
genre
genreIdentifier
hlsPlaylistURL
indexInCollection
isCompilation
isDeviceBasedVPP
isExplicitContent
hasHDR
isHighDefinition
isRental
isSample
isSharedResource
itemIdentifier
kind
launchExtrasUrl
longDescription
networkName
numberOfCollectionsInCollectionGroup
numberOfItemsInCollection
racGUID
podcastEpisodeGUID
podcastFeedURL
podcastType
primaryAssetDictionary
purchaseDate
releaseDate
releaseYear
rentalID
seasonNumber
seriesName
longSeasonDescription
setArtistIdentifier:
setArtistName:
setBetaExternalVersionIdentifier:
setBundleIdentifier:
setCloudIdentifier:
setCollectionArtistName:
setCollectionIdentifier:
setCollectionIndexInCollectionGroup:
setCollectionName:
setCompilation:
setDeviceBasedVPP:
setComposerIdentifier:
setComposerName:
setContentRating:
setDurationInMilliseconds:
setEpisodeIdentifier:
setEpisodeSortIdentifier:
setExplicitContent:
setFullSizeImageURL:
setGenre:
setGenreIdentifier:
setHighDefinition:
setHlsPlaylistURL:
setIndexInCollection:
setItemIdentifier:
setKind:
setLaunchExtrasUrl:
setLongDescription:
setNetworkName:
setNumberOfCollectionsInCollectionGroup:
setNumberOfItemsInCollection:
setRacGUID:
setPodcastEpisodeGUID:
setPodcastFeedURL:
setPodcastType:
setPurchaseDate:
setReleaseDate:
setReleaseYear:
setRental:
setRentalID:
setSample:
setMusicShow:
setSeasonNumber:
setSharedResource:
setSeriesName:
setLongSeasonDescription:
setShortDescription:
setSortArtistName:
setSortCollectionName:
setSortTitle:
setSubtitle:
setThumbnailNewsstandBindingEdge:
setThumbnailNewsstandBindingType:
setThumbnailImageURL:
setTitle:
setTransactionIdentifier:
setVariantIdentifier:
setVideoDetailsDictionary:
setViewStoreItemURL:
shortDescription
sortArtistName
sortCollectionName
sortTitle
subtitle
thumbnailImageCollection
thumbnailImageURL
title
transactionIdentifier
variantIdentifier
videoDetailsDictionary
viewStoreItemURL
showComposer
isMusicShow
workName
movementName
movementNumber
movementCount
cancelDownloadURL
copyright
dictionary
downloaderAccountIdentifier
downloadKey
epubRightsData
fileExtension
keyStyle
isAutomaticDownload
isRedownloadDownload
MD5HashStrings
numberOfBytesToHash
pageProgressionDirection
preferredAssetFlavor
publicationVersion
preOrderIdentifier
primaryAssetURL
redownloadActionParameters
releaseDateString
requestPersistentID
requiredDeviceCapabilities
appleID
setAutomaticDownload:
setCancelDownloadURL:
setCopyright:
setDictionary:
setDownloadKey:
setDownloadPermalink:
setEpubRightsData:
setFileExtension:
setKeyStyle:
setMD5HashStrings:numberOfBytesToHash:
setPageProgressionDirection:
setPublicationVersion:
setPreferredAssetFlavor:
setPreOrderIdentifier:
setPrimaryAssetURL:
setRedownloadActionParameters:
setRedownloadDownload:
setReleaseDateString:
setRequestPersistentID:
setRequiredDeviceCapabilities:
setShouldDownloadAutomatically:
setSinfs:
setAppleID:
setValue:forMetadataKey:
shouldDownloadAutomatically
sinfs
valueForFirstAvailableKey:
valueForMetadataKey:
_dateValueForValue:
_newImageCollectionWithURLString:
_newDateFormatter
_releaseDateValue
_setValue:forTopLevelKey:
_setValueCopy:forMetadataKey:
_stringValueForValue:
_thumbnailArtworkImage
_urlValueForValue:
_valueForFirstAvailableTopLevelKey:
_dictionary
_keyStyle
_lock
T@"NSDictionary",R
automaticDownload
TB,GisAutomaticDownload
T@"NSURL",&
T@"NSString",&
deviceBasedVPP
TB,GisDeviceBasedVPP
T@"NSDictionary",&
T@"NSNumber",R
T@"NSData",&
T@"NSURL",C
TB,R,GhasHDR
T@"NSArray",R
T@"NSString",C
redownloadDownload
TB,GisRedownloadDownload
T@"NSNumber",C
T@,C
T@"NSArray",&
T@"NSDate",&
T@"NSNumber",&
initWithStoreItemID:downloadID:error:
success
storeItemID
setStoreItemID:
downloadID
setDownloadID:
error
setError:
_storeItemID
_downloadID
_error
T@"NSNumber",&,N,V_storeItemID
T@"NSString",C,N,V_downloadID
T@"NSError",&,N,V_error
TB,R,N
intValue
ratingSystemFromString:
stringForRatingSystem:
rank
ratingDescription
ratingLabel
ratingSystem
setRank:
setRatingDescription:
setRatingLabel:
setRatingSystem:
valueForProperty:
contentRatingDictionary
_setValueCopy:forProperty:
_setValue:forProperty:
T@"NSDictionary",R,N
Tq,N
T@"NSString",C,N
sharedEduCloudContainer
isSignedIn
documentsURL
dictionaryAsBookItem:path:
fileNameForPermlink:
cloudUrlForPermlink:
_writePlist:toURL:error:
_addOrUpdateCloudEntryWithDictionary:error:
_coordinatedReadOfPromisesWithError:
removeBookItem:error:
addBookItem:error:
updateBookItem:error:
performMetadataActionOnCloudURL:action:
bookItemForURL:
bookItemForPermlink:
bookItemsForPermlinks:
cloudToken
setCloudToken:
containerURL
setContainerURL:
containerQueue
setContainerQueue:
_documentsURL
_cloudToken
_containerURL
_containerQueue
T@,&,N,V_cloudToken
T@"NSURL",R,N,V_documentsURL
T@"NSURL",&,N,V_containerURL
T@"NSObject<OS_dispatch_queue>",&,N,V_containerQueue
rewritePlaylistData:toURL:requestedBitrates:error:
rewritePlaylistURL:toURL:requestedBitrates:error:
_rewritePlaylistWithParser:toURL:requestedBitrates:error:
_playlistUsingParser:ignoreSegments:error:
playlistParsingData:error:
playlistParsingURL:error:
playlistParsingURL:ignoreSegments:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
parser:lineIsURL:
parser:lineIsTag:value:attributeList:
parser:lineIsComment:
parserShouldCollectLine:
initWithRequestedBitrates:
keys
_parseUsingParser:error:
groups
setGroups:
streamInfs
setStreamInfs:
independentSegments
setIndependentSegments:
segments
setSegments:
ignoreSegments
setIgnoreSegments:
state
setState:
uniqueKeys
setUniqueKeys:
requestedBitrates
setRequestedBitrates:
_independentSegments
_ignoreSegments
_groups
_streamInfs
_segments
_racGUID
_state
_uniqueKeys
_requestedBitrates
T@"NSArray",&,N,V_groups
T@"NSArray",&,N,V_streamInfs
T@"NSArray",&,N,V_segments
TB,N,V_independentSegments
TB,N,V_ignoreSegments
T@"BLHLSPlaylistState",&,N,V_state
T@"NSMutableSet",&,N,V_uniqueKeys
T@"NSArray",&,N,V_requestedBitrates
T@"NSUUID",&,N,V_racGUID
T@"NSSet",R,N
setPropertiesFromAttributeList:
type
name
_type
_url
_name
T@"NSString",R,N,V_type
T@"NSURL",R,N,V_url
T@"NSString",R,N,V_name
initWithGroupID:media:
groupID
media
_groupID
_media
T@"NSString",R,N,V_groupID
T@"NSArray",R,N,V_media
averageBandwidthFallbackToPeak
setUrl:
bandwidth
averageBandwidth
codecs
audio
_bandwidth
_averageBandwidth
_codecs
_audio
T@"NSURL",&,N,V_url
TQ,R,N,V_bandwidth
TQ,R,N,V_averageBandwidth
TQ,R,N
T@"NSString",R,N,V_codecs
T@"NSString",R,N,V_audio
initWithURL:
initWithURL:duration:map:key:
duration
_map
_duration
_key
T@"BLHLSMap",R,N,V_map
Td,R,N,V_duration
T@"BLHLSKey",R,N,V_key
mutableGroups
setMutableGroups:
currentMap
setCurrentMap:
currentDuration
setCurrentDuration:
mutableSegments
setMutableSegments:
currentStreamInf
setCurrentStreamInf:
mutableStreamInfs
setMutableStreamInfs:
currentKey
setCurrentKey:
_mutableGroups
_currentMap
_currentDuration
_mutableSegments
_currentStreamInf
_mutableStreamInfs
_currentKey
T@"NSMutableDictionary",&,N,V_mutableGroups
T@"BLHLSMap",&,N,V_currentMap
Td,N,V_currentDuration
T@"NSMutableArray",&,N,V_mutableSegments
T@"BLHLSStreamInf",&,N,V_currentStreamInf
T@"NSMutableArray",&,N,V_mutableStreamInfs
T@"BLHLSKey",&,N,V_currentKey
isFormatSupported
isEqualToHLSKey:
method
keyFormat
keyFormatVersions
_method
_keyFormat
_keyFormatVersions
Tq,R,N,V_method
T@"NSString",R,N,V_keyFormat
T@"NSString",R,N,V_keyFormatVersions
T@"NSString",R,N,V_iv
bl_hlsUnsignedIntegerValue
compare:
libraryPlistWithKind:
entryForAssetID:contents:
entryForAssetURL:contents:
isManagedBookFromURL:
lookupAssetURLStringFromAssetID:contents:
lookupPublicationVersionFromAssetID:contents:
lookupPublicationVersionNumberFromAssetID:contents:
lookupHumanReadablePublicationVersionFromAssetID:contents:
lookupPageProgressionFromAssetID:contents:
lookupLanguageFromAssetID:contents:
lookupCoverWritingModeFromAssetID:contents:
lookupScrollDirectionFromAssetID:contents:
lookupFolderNameFromAssetID:contents:
lookupBackupFolderNameFromAssetID:contents:
authorFromPlistEntry:
sortAuthorFromPlistEntry:
titleFromPlistEntry:
sortTitleFromPlistEntry:
genreFromPlistEntry:
isExplicitContentFromPlistEntry:
isProofedAssetFromPlistEntry:
isEphemeralFromPlistEntry:
deletesArrayFromPlistEntry:
setDeletesArray:toPlistEntry:
booksArrayFromPlistEntry:
setBooksArray:toPlistEntry:
isPDFFromPlistEntry:
temporaryItemIdentifierFromPlistEntry:
persistentIDFromPlistEntry:
bookEpubIdFromPlistEntry:
albumFromPlistEntry:
isItunesUFromPlistEntry:
feedURLFromPlistEntry:
mimeTypeFromPlistEntry:
extensionFromPlistEntry:
publicationVersionFromPlistEntry:
publicationVersionNumberFromPlistEntry:
humanReadablePublicationVersionFromPlistEntry:
pageProgressionFromPlistEntry:
assetTypeFromPlistEntry:
languageFromPlistEntry:
assetIDFromPlistEntry:
assetIDFromPlistEntry:forAssetAtPath:
coverWritingModeFromPlistEntry:
scrollDirectionFromPlistEntry:
languagesFromPlistEntry:
primaryLanguageFromPlistEntry:
uniqueIdFromPlistEntry:
accessDateFromPlistEntry:
setAccessDate:toPlistEntry:
folderNameFromPlistEntry:
backupFolderNameFromPlistEntry:
isSampleFromPlistEntry:
coverPathFromPlistEntry:
collectionIdFromPlistEntry:
storePlaylistIdFromPlistEntry:
isSupplementalContentFromPlistEntry:
storeIdFromPlistEntry:
permlinkFromPlistEntry:
importDateFromPlistEntry:
assetIDFromItunesMetadataEntry:
publisherUniqueIDFromItunesMetadataEntry:
uniqueIDFromItunesMetadataEntry:
packageFileHashFromItunesMetadataEntry:
coverPathFromItunesMetadataEntry:
coverHashFromItunesMetadataEntry:
titleFromItunesMetadataEntry:
endOfBookExperiencesFromItunesMetadataEntry:
experienceKindFromExperienceEntry:
experienceLocationFromExperienceEntry:
experienceLocationTypeFromExperienceEntry:
experienceVersionFromExperienceEntry:
experienceParamsFromExperienceEntry:
experienceConfidenceFromExperienceParamEntry:
keyNameForImportDate
keyNameForAuthor
keyNameForTitle
keyNameForGenre
keyNameForExplicitContent
keyNameForComments
keyNameForBookDescription
keyNameForYear
keyNameForLastOpened
keyNameForFirstOpened
keyNameForRating
keyNameForReadingLocation
keyNameForHighWaterMark
keyNameForGeneration
keyNameForSampleAsset
keyNameForPublisherUniqueID
keyNameForProofedAsset
keyNameForPath
keyNameForAccessDate
keyNameForBackupPath
keyNameForStoreId
keyNameForStoreId2
keyNameForUniqueId
keyNameForAssetType
keyNameForFlavor
keyNameForSubject
keyNameForBooksArray
keyNameForDeletesArray
keyNameForSortAuthor
keyNameForSortTitle
keyNameForPublicationVersion
keyNameForHumanReadablePublicationVersion
keyNameForPageProgression
keyNameForLanguages
keyNameForPrimaryLanguage
keyNameForScrollDirection
keyNameForCoverWritingMode
keyNameForIsEphemeral
keyNameForIsSupplementalContent
keyNameForStorePlaylistId
keyNameForCollectionId
booksRepositoryPath
purchasesRepositoryPath
managedRepositoryPath
proofingRepositoryPath
sampleRepositoryPath
stashedSampleRepositoryPath
sharedContainerURL
sharedRepositoryPath
_initWithDirectory:fileName:
sidecarPath
p_rewriteSidecarWithDeletes:
p_contents:
unfilteredContents
unfilteredSidecarContents
contents
calculateChecksum
isPathInDirectory:
addDeletedFiles:
removeDeletedPaths:
bumpModificationDate
path
setPath:
directory
setDirectory:
_kind
_path
_directory
Tq,N,V_kind
T@"NSString",C,N,V_path
T@"NSString",C,N,V_directory
T@"NSString",R,N
itemWithServerBookletItem:
arrayWithServerBookletItems:
storeDownloadParameters
setStoreDownloadParameters:
storeID
setStoreID:
size
setSize:
_title
_storeDownloadParameters
_storeID
_size
T@"NSString",C,N,V_title
T@"NSString",C,N,V_storeDownloadParameters
T@"NSString",C,N,V_storeID
T@"NSNumber",C,N,V_size
buyParametersValueForKey:fromBuyParams:
storeIDFromBuyParameters:
isPreOrderFromBuyParameters:
isAudioBookFromBuyParameters:
dealloc
fetchDownloadListWithReply:
fetchDownloadFromDownloadID:withReply:
pauseDownloadWithID:withReply:
resumeDownloadWithID:withReply:
cancelDownloadWithID:withReply:
cancelAllActiveDownloadsWithReply:
purchaseWithRequest:uiHostProxy:reply:
downloadWithPermlink:title:reply:
requestDownloadWithParameters:reply:
requestDownloadWithMetadata:isRestore:reply:
requestDownloadsWithMetadata:areRestore:reply:
requestDownloadsWithRestoreContentRequestItems:reply:
requestDownloadsWithManifestRequest:uiHostProxy:reply:
processAutomaticDownloadsWithReply:
setAutomaticDownloadEnabled:uiHostProxy:reply:
restartDownloadWithID:withReply:
reloadFromServerWithReply:
flushMetricsWithReply:
monitorProgressWithReply:
setRacGUID:forStoreID:withReply:
racGUIDForStoreID:withReply:
removeRacGUIDForStoreID:withReply:
setMigrationState:forStoreIDs:withReply:
migrationInfoWithStoreID:withReply:
migrationInfosWithStoreIDs:withReply:
migrationInfosWithStates:withReply:
removeMigrationInfoForStoreID:withReply:
removeAllMigrationInfosExcludingStates:withReply:
prepareForRemoveAppWithReply:
setValueSimulateCrashAtInstallStart:withReply:
setValueSimulateCrashAtInstallDuringDecrypt:withReply:
setValueSimulateCrashAtInstallDuringUnzip:withReply:
setValueSimulateCrashAtInstallDuringFinish:withReply:
getCrashSimulationOverrideValuesWithReply:
resetAllCrashSimulationOverridesWithReply:
setValueSimulateDeviceOutOfSpace:withReply:
getValueSimulateDeviceOutOfSpaceWithReply:
initWithError:
initWithProgressReceiver:error:
shutdown
_createAndStartConnection
_remoteObjectWithErrorHandler:
_synchronousRemoteObjectWithErrorHandler:
connectionMonitor
setConnectionMonitor:
connection
setConnection:
progressReceiver
notifyToken
setNotifyToken:
_connectionLock
_notifyToken
_connectionMonitor
_connection
_progressReceiver
T@"NSXPCConnection",&,N,V_connection
T@"<BLProgressReceiving>",R,N,V_progressReceiver
Tq,N,V_state
Ti,N,V_notifyToken
T@"<BLServiceProxyConnectionMonitoring>",W,N,V_connectionMonitor
connectionWithMachServiceName:options:
downloadQueue:downloadStates:didCompleteWithError:
downloadQueue:purchaseAttemptForRequest:
downloadQueue:purchaseAttemptForID:buyParams:isAudioBook:userInfo:
downloadQueue:purchaseAttemptForID:buyParams:isAudioBook:
downloadQueue:downloadStatesDidChange:
downloadQueueDownloadsDidChange:
downloadQueue:purchasedDidCompleteWithResponse:
downloadQueue:purchasedDidFailWithResponse:
progressWithUserInfo:
didFailWithUserInfo:
downloadCompleteWithUserInfo:
purchaseSucceededWithUserInfo:
purchaseFailedWithUserInfo:
reconnectingToServiceForProxy:
initWithDownloadQueue:
cancelAllPausedDownloads
notifyPurchaseAttemptForRequest:
registerObserver:
unregisterObserver:
notifyDidCompleteForDownloadID:
downloads
sendInitialProgressNotificationForDownloadWithStoreID:storePlaylistID:orPermlink:downloadID:title:collectionTitle:assetKind:isPaused:targetObserver:
sendCancelCompletionNotificationForDownloadWithDownloadID:
_downloadStatusFromDictionary:outParamNewlyTrackedDownload:
_postUpdatesForCurrentlyPausedDownloadsForObserver:
_postDownloadProgressNotificationWithDictionary:
_postDownloadCompleteNotificationWithDictionary:failed:
purchaseDidCompleteWithResponse:
purchaseDidFailedWithResponse:
_stringFromObject:
_numberFromObject:
_dateFromObject:
_downloadStatusStoreID:storePlaylistID:orPermLink:downloadID:title:collectionTitle:assetKind:isPaused:
serviceProxy
setServiceProxy:
observers
setObservers:
activeDownloads
setActiveDownloads:
downloadQueue
setDownloadQueue:
_observersLock
_activeDownloadsLock
_serviceProxy
_observers
_activeDownloads
_downloadQueue
T@"NSHashTable",&,N,V_observers
T@"BLServiceProxy",&,N,V_serviceProxy
T@"NSMutableDictionary",&,N,V_activeDownloads
T@"BLDownloadQueueNonUI",W,N,V_downloadQueue
T@"NSArray",R,N
sharedInstance
decodeHexString:
decodeData:
SwapInt64BigToHost:size:
parseUTF8String:length:
parseUnicodeCharacter:count:
processXMLContent:count:
processFlavors:size:
processFlavor:size:
setBool:size:inDict:forKey:
setSInt8:size:inDict:forKey:
setUInt8:size:inDict:forKey:
setSInt16:size:inDict:forKey:
setUInt16:size:inDict:forKey:
setDate:size:inDict:forKey:
setUInt32:size:inDict:forKey:
setFloat32:size:inDict:forKey:
setUInt64:size:inDict:forKey:
setString:size:inDict:forKey:
unknownCode:bytes:size:
parseMACAddressListing:count:
parseServerInfo:count:
parseContentCodes:count:
parseError:count:
parseLogin:count:
parseListingItem:count:
parseBookletListing:count:
parseBookletItem:count:
parseListingCollection:count:capacity:
parseBrowseResults:count:
parseListingHeader:count:
parseDict:size:intoDict:
parseDeletedIDsList:count:
parseControlPromptCollection:count:
parseControlPromptResponse:count:
parseGetSpeakersResponse:count:
parseDACPPropertyResponse:count:
processResponseCode:bytes:count:
typeForDRCPValueType:
initWithStoreID:migrationState:
migrationState
setMigrationState:
_migrationState
Tq,N,V_migrationState
Tq,N,V_storeID
setMigrationState:forStoreIDs:error:
migrationInfosWithStoreIDs:completion:
migrationInfosWithState:completion:
migrationInfosWithStates:completion:
removeAllMigrationInfosExcludingStates:error:
T@"BLServiceProxy",R,N,V_serviceProxy
setRacGUID:forStoreID:error:
racGUIDForStoreID:result:
removeRacGUIDForStoreID:error:
preferredStreamFromMasterPlaylist:
initCanUseCellularData:powerRequired:bundleID:
setupDownloadTaskForFetchingMasterPlaylistAndSelectingStreamFromMasterPlaylistURL:completion:
getRacGUIDFromMasterPlaylistURL:completion:
session
_session
T@"NSURLSession",R,N,V_session
initWithEntity:insertIntoManagedObjectContext:
initIntoManagedObjectContext:
identifier
T@"NSString",&,D,N
server
T@"BLJaliscoServerInfo",&,D,N
items
T@"NSSet",&,D,N
floatValue
height
imageScale
width
initWithArtworkDictionary:
imageSize
setImageKindWithTypeName:variantName:
setURL:
setValue:forProperty:
URLString
_setValue:forKey:
imageKind
setImageKind:
_imageKind
T{CGSize=dd},R,N
T@"NSString",C,N,V_imageKind
T@"NSURL",&,N
Td,R,N
transferProgressFraction
targetDownloadDirectory
setTargetDownloadDirectory:
startTime
setStartTime:
assetPath
setAssetPath:
buyParameters
setBuyParameters:
permlink
setPermlink:
storeIdentifier
setStoreIdentifier:
storePlaylistIdentifier
setStorePlaylistIdentifier:
clientIdentifier
setClientIdentifier:
persistentIdentifier
setPersistentIdentifier:
fileSize
setFileSize:
lastStateChangeTime
setLastStateChangeTime:
hashType
setHashType:
md5HashStrings
setMd5HashStrings:
setNumberOfBytesToHash:
serverNumberOfBytesToHash
setServerNumberOfBytesToHash:
setIsAutomaticDownload:
isRestore
setIsRestore:
accountID
setAccountID:
familyAccountID
setFamilyAccountID:
isZipStreamable
setIsZipStreamable:
dpInfo
setDpInfo:
sinfData
setSinfData:
setIsSample:
isPurchase
setIsPurchase:
isLocalCacheServer
setIsLocalCacheServer:
originalURL
setOriginalURL:
encryptionKey
setEncryptionKey:
salt
setSalt:
cleanupPending
setCleanupPending:
collectionTitle
setCollectionTitle:
_targetDownloadDirectory
_startTime
_assetPath
_buyParameters
_permlink
_storeIdentifier
_storePlaylistIdentifier
_clientIdentifier
_persistentIdentifier
_transactionIdentifier
_cancelDownloadURL
_fileSize
_lastStateChangeTime
_hashType
_md5HashStrings
_numberOfBytesToHash
_serverNumberOfBytesToHash
_publicationVersion
_isAutomaticDownload
_isRestore
_downloadKey
_accountID
_familyAccountID
_isZipStreamable
_dpInfo
_sinfData
_isSample
_isPurchase
_purchaseDate
_isLocalCacheServer
_originalURL
_encryptionKey
_salt
_cleanupPending
_artistName
_subtitle
_collectionArtistName
_collectionTitle
_genre
_thumbnailImageURL
T@"NSString",C,N,V_url
T@"NSString",C,N,V_targetDownloadDirectory
T@"NSDate",C,N,V_startTime
T@"NSString",C,N,V_assetPath
T@"NSString",C,N,V_buyParameters
T@"NSString",C,N,V_permlink
T@"NSNumber",&,N,V_storeIdentifier
T@"NSNumber",&,N,V_storePlaylistIdentifier
T@"NSString",C,N,V_clientIdentifier
T@"NSNumber",&,N,V_persistentIdentifier
T@"NSString",C,N,V_transactionIdentifier
T@"NSString",C,N,V_cancelDownloadURL
TQ,N,V_fileSize
T@"NSDate",C,N,V_lastStateChangeTime
T@"NSString",C,N,V_hashType
T@"NSString",C,N,V_md5HashStrings
Tq,N,V_numberOfBytesToHash
T@"NSNumber",&,N,V_serverNumberOfBytesToHash
T@"NSNumber",&,N,V_publicationVersion
T@"NSNumber",&,N,V_isAutomaticDownload
T@"NSNumber",&,N,V_isRestore
T@"NSString",C,N,V_downloadKey
T@"NSNumber",&,N,V_accountID
T@"NSNumber",&,N,V_familyAccountID
T@"NSNumber",&,N,V_isZipStreamable
T@"NSData",C,N,V_dpInfo
T@"NSData",C,N,V_sinfData
T@"NSNumber",&,N,V_isSample
T@"NSNumber",&,N,V_isPurchase
T@"NSDate",&,N,V_purchaseDate
T@"NSNumber",&,N,V_isLocalCacheServer
T@"NSString",C,N,V_originalURL
T@"NSString",C,N,V_encryptionKey
T@"NSString",C,N,V_salt
T@"NSNumber",&,N,V_cleanupPending
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_collectionArtistName
T@"NSString",C,N,V_collectionTitle
T@"NSString",C,N,V_genre
T@"NSString",C,N,V_kind
T@"NSString",C,N,V_thumbnailImageURL
item
setItem:
metadata
setMetadata:
purchaseParameters
setPurchaseParameters:
isPurchaseRedownload
setIsPurchaseRedownload:
isAudiobook
setIsAudiobook:
isPDF
setIsPDF:
_isPurchaseRedownload
_isAudiobook
_isPDF
_item
_metadata
_purchaseParameters
T@"NSDictionary",C,N,V_item
T@"NSDictionary",C,N,V_metadata
T@"NSString",C,N,V_purchaseParameters
TB,N,V_isPurchaseRedownload
TB,N,V_isAudiobook
TB,N,V_isPDF
initWithAMSPurchaseResult:
initWithPurchase:error:
_updatePropertiesFromPurchaseError:
currency
setCurrency:
errorCode
setErrorCode:
errorDescription
setErrorDescription:
errorDomain
setErrorDomain:
logUUID
setLogUUID:
permLink
setPermLink:
price
setPrice:
responseMetrics
setResponseMetrics:
hasRacGUID
setHasRacGUID:
supplementalContentCount
setSupplementalContentCount:
purchaseResponseItems
setPurchaseResponseItems:
firstUnderlyingErrorCode
setFirstUnderlyingErrorCode:
firstUnderlyingErrorDomain
setFirstUnderlyingErrorDomain:
firstUnderlyingErrorLocalizedDescription
setFirstUnderlyingErrorLocalizedDescription:
isUserCancelError
setIsUserCancelError:
_hasRacGUID
_isUserCancelError
_currency
_errorCode
_errorDescription
_errorDomain
_logUUID
_permLink
_price
_responseMetrics
_supplementalContentCount
_purchaseResponseItems
_firstUnderlyingErrorCode
_firstUnderlyingErrorDomain
_firstUnderlyingErrorLocalizedDescription
T@"NSString",C,N,V_currency
T@"NSNumber",C,N,V_errorCode
T@"NSString",C,N,V_errorDescription
T@"NSString",C,N,V_errorDomain
T@"NSString",C,N,V_logUUID
T@"NSString",C,N,V_permLink
T@"NSString",C,N,V_price
T@"NSDictionary",C,N,V_responseMetrics
T@"NSNumber",&,N,V_storeID
T@"NSArray",&,N,V_purchaseResponseItems
TB,N,V_hasRacGUID
T@"NSNumber",C,N,V_supplementalContentCount
T@"NSNumber",C,N,V_firstUnderlyingErrorCode
T@"NSString",C,N,V_firstUnderlyingErrorDomain
T@"NSString",C,N,V_firstUnderlyingErrorLocalizedDescription
TB,N,V_isUserCancelError
handleAuthenticateRequest:withReply:
handleDialogRequest:withReply:
handleEngagementRequest:withReply:
iTunesSyncLockFile
iTunesSyncLockFilePath
setBackgroundTaskDelegate:
backgroundTaskDelegate
T@"<BLBackgroundTaskProviding>",W,N
initWithPath:
_lock:blocking:
lock:
tryLock:
unlock
lockWithBlock:error:
locked
_locked
_backgroundTaskIdentifier
_hasBackgroundTask
T@"NSString",R,N,V_path
TB,R,N,V_locked
bl_isUserCancelError
bl_isAMSStatusCode401
bl_itemIdentifierValue
bl_numberWithItemIdentifier:
p_opfPathFromContainerXmlPath:epubPath:
p_opfPathFromContainerXmlDoc:epubPath:
opfPathFromFullOpfContainerPath:
opfPathFromEpubPath:
_dcIdentifierFromOpfPath:isEPUB:
dcIdentifierFromBookPath:
md5FromPath:
uniqueIdFromPdfPath:
uniqueIdFromEpubPath:
generateFileUniqueIdFromPath:
_iTunesMetadataPathForEpubPath:
_storeIdFromiTunesMetadataPath:error:
identifierFromBookZipArchive:allowHash:allowStoreID:error:
identifierFromBookContainer:allowHash:allowStoreID:error:
identifierFromBookPath:error:
identifierFromBookPath:allowHash:allowStoreID:error:
writeBinaryPropertyList:toPath:error:
stringValue
bl_md5Hash
bl_sha1
identifierFromPermlink
initWithURLRequest:
startWithManifestResponseBlock:
URLRequest
setURLRequest:
_urlRequest
T@"NSURLRequest",&,N,V_urlRequest
T@"NSNumber",&,D,N
parentItem
T@"BLJaliscoServerItem",&,D,N
requestWithBuyParameters:storeIdentifier:
requestWithPermlink:title:
setAudiobook:
isPreOrder
setPreOrder:
permlinkTitle
setPermlinkTitle:
accountIdentifier
setAccountIdentifier:
analyticsInfo
setAnalyticsInfo:
setRestore:
shouldSuppressNetworkEvaluatorDialogs
setSuppressNetworkEvaluatorDialogs:
isUserInitiated
setUserInitiated:
storeIdentifiersToDownload
setStoreIdentifiersToDownload:
isSupplementalContent
setSupplementalContent:
_audiobook
_preOrder
_restore
_suppressNetworkEvaluatorDialogs
_userInitiated
_supplementalContent
_permlinkTitle
_accountIdentifier
_analyticsInfo
_storeIdentifiersToDownload
T@"NSURL",&,N,V_permlink
T@"NSString",C,N,V_permlinkTitle
preOrder
TB,N,GisPreOrder,V_preOrder
T@"NSSet",&,N,V_storeIdentifiersToDownload
supplementalContent
TB,N,GisSupplementalContent,V_supplementalContent
audiobook
TB,N,GisAudiobook,V_audiobook
T@"NSNumber",C,N,V_accountIdentifier
T@"NSDictionary",&,N,V_analyticsInfo
restore
TB,N,GisRestore,V_restore
suppressNetworkEvaluatorDialogs
TB,N,GshouldSuppressNetworkEvaluatorDialogs,V_suppressNetworkEvaluatorDialogs
userInitiated
TB,N,GisUserInitiated,V_userInitiated
initWithImageCollection:
initWithItemImages:
bestImageForSize:
imagesForSize:
imagesForKind:
_imagesForSize:scale:
_newImagesForDictionary:
itemImages
_itemImages
T@"NSArray",R,N,V_itemImages
validDownloadIDs
setValidDownloadIDs:
_validDownloadIDs
T@"NSArray",C,N,V_validDownloadIDs
bl_isUbiquitous
hasUnresolvedConflicts
bl_isDownloaded
bl_isDownloading
isUploaded
isUploading
bl_isUbiquitousPromise
bl_boolFromResourceValue:
bl_isDownloadedWithResourceValue:
preWarmSync
sharedSource
setSharedSource:
initWithIdentifier:databaseContainerPath:
workaround_18397698
managedObjectModel
p_oldPersistentStoreDirectory
p_persistentStoreDirectory
p_persistentStoreFullPathAtPrivateiBooksLocation
p_persistentStoreFullPathAtSharediBooksLocation
p_databaseExistsAtPrivateiBooksContainerLocation
p_databaseExistsAtSharediBooksContainerLocation
p_createPersistentDirectoryIfNeeded
_persistentStoreOptions
_setupCoreDataStack
persistentStoreCoordinatorWithError:
persistentStoreCoordinator
currentJaliscoHistoryToken
newManagedObjectContext
newManagedObjectContextWithPrivateQueueConcurrency
serverInfoForDSID:fromManagedObjectContext:error:
truncateDatabaseError:
refreshStoreWithCompletion:
serverDatabaseForDSID:fromManagedObjectContext:error:
serverDatabaseForDSID:withIdentifier:fromManagedObjectContext:error:
existingEntitiesWithName:matchingPredicate:fromManagedObjectContext:limit:error:
existingServerInfoWithPredicate:fromManagedObjectContext:error:
existingServerDatabaseWithPredicate:fromManagedObjectContext:error:
existingServerItemWithPredicate:fromManagedObjectContext:error:
serverItemWithStoreID:inDatabaseWithIdentifier:forDSID:fromManagedObjectContext:error:
allItemsFetchRequestForDSIDs:
itemsFetchRequestForDSIDs:
_itemsFetchRequestIncludingHiddenItems:dsids:
predicateForItems:dsids:
predicateForBookletItems:dsids:
fetchRequestForAllCloudIDs:dsids:
fetchRequestForStoreIDs:dsids:
fetchRequestForAllStoreIDs:dsids:
fetchRequestForAllStoreIDsWithNonEmptyPurchasedToken:dsids:
fetchRequestForAllStoreIDs:
fetchRequestForNeedsImport:
fetchRequestForAllStoreIDs:dsids:isImported:
fetchRequestForAllStoreIDs:dsids:isImported:includeHidden:
predicateForNeedsImport:
fetchRequestForBuyParameters:
fetchRequestForNotInStoreAccountIDs:
predicateForStoreAccountID:storeIDs:
fetchRequestForBookletItemsForStoreIDs:
fetchRequestForAllBookletsIDsWithParentStoreIDs:
setIdentifier:
databaseContainerPath
setDatabaseContainerPath:
_modelSentinel
_pscSentinel
_psc
_model
_identifier
_databaseContainerPath
T@"NSString",&,N,V_databaseContainerPath
T@"NSString",C,N,V_identifier
T@"NSPersistentHistoryToken",R,N
logRecursively
unsignedLongLongValue
storePlaylistID
setStorePlaylistID:
percentComplete
setPercentComplete:
estimatedTimeRemaining
setEstimatedTimeRemaining:
transferBytesWritten
setTransferBytesWritten:
transferBytesExpected
setTransferBytesExpected:
downloadPhase
setDownloadPhase:
canPause
setCanPause:
storeAccountIdentifier
setStoreAccountIdentifier:
assetKind
setAssetKind:
_canPause
_storePlaylistID
_percentComplete
_estimatedTimeRemaining
_transferBytesWritten
_transferBytesExpected
_downloadPhase
_storeAccountIdentifier
_assetKind
T@"NSNumber",&,N,V_storePlaylistID
T@"NSNumber",&,N,V_percentComplete
T@"NSNumber",&,N,V_estimatedTimeRemaining
T@"NSNumber",&,N,V_transferBytesWritten
T@"NSNumber",&,N,V_transferBytesExpected
Tq,N,V_downloadPhase
TB,N,V_isRestore
TB,N,V_canPause
TB,N,V_isSample
TB,N,V_isPurchase
Tq,N,V_persistentIdentifier
T@"NSNumber",&,N,V_storeAccountIdentifier
T@"NSString",C,N,V_assetKind
itemWithItem:
additionalInfo
freeze
thaw
hasVideo
setHasVideo:
mediaKind
itemID
expectedDate
dictionaryRepresentation
objectForKey:
setObject:forKey:
valueForUndefinedKey:
setValue:forUndefinedKey:
updateItemWithItem:
updateItemWithDictionary:
setName:
songalbum
setSongalbum:
songartist
setSongartist:
songalbumartist
setSongalbumartist:
setItemID:
downloadStatus
setDownloadStatus:
songalbumid
setSongalbumid:
containerItemID
setContainerItemID:
frozenInfo
setFrozenInfo:
mutableInfo
setMutableInfo:
_songalbum
_songartist
_songalbumartist
_itemID
_downloadStatus
_containerItemID
_songalbumid
_itemFlags
_isFrozen
_frozenInfo
_mutableInfo
T@"NSMutableDictionary",&,N,V_mutableInfo
T@"NSDictionary",&,N,V_frozenInfo
T@"NSString",&,N,V_name
T@"NSString",&,N,V_songalbum
T@"NSString",&,N,V_songartist
T@"NSString",&,N,V_songalbumartist
TQ,N,V_itemID
TC,N,V_downloadStatus
TQ,N,V_songalbumid
TI,N,V_containerItemID
T@"NSNumber",&,N
Ti,R,N
T@"NSDate",R,N
databaseVersion
userUID
lastPolledAt
Td,D,N
initWithBag:
requestByEncodingRequest:parameters:
DAAPPurchaseVersionString
DAAPClientVersionString
requestByEncodingRequest:parameters:error:
initWithBag:withURLRequest:
dsid
setDsid:
reason
setReason:
contentType
setContentType:
_dsid
_reason
_contentType
T@"NSNumber",&,N,V_dsid
Tq,N,V_reason
TQ,N,V_contentType
appendUInt8:withCode:
appendUInt32:withCode:
appendUInt64:withCode:
appendHeader:size:
data
_data
T@"NSData",R,N,V_data
isSupported
sharedClient
purchaseServerHandleClientExpired
purchaseServerRequestITunesAuthentication
account:didChangeWithReason:
_startObservingNotifications
_stopObservingNotifications
setStoreAuthenticationRequired:
storeAuthenticationRequired
refreshSignInStatus
jaliscoArtworkTimebombed
forceJaliscoArtworkUpdateWithCompletion:
fetchItemsForStoreIDs:completion:
fetchItemsForStoreIDs:
fetchAllBookletIDsWithParentStoreIDs:
fetchItemsForBuyParameters:completion:
hideItemsWithStoreIDs:completion:
setItemHidden:forStoreID:completion:
resetPurchasedTokenForStoreIDs:completion:
storeIDsWithNonEmptyPurchasedToken:completion:
updatePolitely:reason:completionWithError:
updatePolitely:reason:completion:
updatePolitelyAfterSignOut:reason:completion:
_addPurchaseServerForCurrentUser
updatePolitelyAfterSignIn:reason:completion:
updateFamilyPolitely:reason:completionWithError:
updateFamilyPolitely:reason:completion:
fetchRequestForStoreID:
fetchRequestForStoreIDIncludingHidden:
fetchRequestForStoreIDs:
fetchRequestForAllStoreIDsWithNonEmptyPurchasedToken:
fetchRequestForBookletItems:
predicateForItems:
predicateForBookletItems:
resetPoliteTimers
deleteItemsWithStoreIDs:completion:
_fetchItemsForNeedsImport:
_allPurchaseDAAPServers
_currentPurchaseDAAPServers
_familyPurchaseDAAPServers
_dsids
_fetchRequestForNotInStoreAccountIDs:
_processFamilyCircleAdded:removed:unchanged:completion:
_sendCompletionHandlersWithSuccess:generation:
_resetPurchaseDAAPServersWithQueue:
resetStaleJaliscoDatabaseWithCompletion:
isInitiallyLoadingJalisco
delegate
setDelegate:
imageManagerDelegate
setImageManagerDelegate:
currentServerGeneration
setCurrentServerGeneration:
pendingUpdateGeneration
setPendingUpdateGeneration:
resetJaliscoStatusHandler
setResetJaliscoStatusHandler:
dsidQueue
setDsidQueue:
swqDSIDToDAAPServer
setSwqDSIDToDAAPServer:
purchaseDAAPSyncsInFlight
setPurchaseDAAPSyncsInFlight:
setMoc:
_currentAccountNumber
_completionHandlers
_familyCompletionHandlers
_initiallyLoadingJalisco
_skipLoadingCheck
_serverWorkerQueue
_timebombRetries
_authenticationLock
_storeAuthenticationRequired
_delegate
_imageManagerDelegate
_currentServerGeneration
_pendingUpdateGeneration
_resetJaliscoStatusHandler
_dsidQueue
_swqDSIDToDAAPServer
_purchaseDAAPSyncsInFlight
_moc
TQ,N,V_currentServerGeneration
TQ,N,V_pendingUpdateGeneration
T@?,C,N,V_resetJaliscoStatusHandler
T@"NSObject<OS_dispatch_queue>",&,N,V_dsidQueue
T@"NSMutableDictionary",&,N,V_swqDSIDToDAAPServer
T@"NSMutableSet",&,N,V_purchaseDAAPSyncsInFlight
T@"NSManagedObjectContext",&,N,V_moc
TB,N
initiallyLoadingJalisco
TB,R,N,GisInitiallyLoadingJalisco,V_initiallyLoadingJalisco
T@"<BLJaliscoDAAPClientDelegate>",W,N,V_delegate
T@"<BLImageManager>",W,N,V_imageManagerDelegate
_requestWithCompletionHandler:
executeWithCompletionHandler:
_URLWithCompletionHandler:
_URLWithRetry:completion:
_valueForDAAPBagKey:completion:
_serverParametersWithCompletionHandler:
DSID
setDSID:
body
setBody:
daapURL
setDaapURL:
requestMethod
setRequestMethod:
dataEncoding
setDataEncoding:
_bag
_DSID
_body
_daapURL
_requestMethod
_dataEncoding
T@"NSNumber",&,N,V_DSID
T@"NSData",&,N,V_body
T@"NSString",&,N,V_daapURL
Tq,N,V_requestMethod
Tq,N,V_dataEncoding
mainInterface
progressInterface
T@"NSXPCInterface",R,N
metrics
flushInProcessWithCompletion:
enqueueEvents:
setAutoFlushEnabled:
flush
initWithEntry:basePath:
initWithPeristentIdentifier:permlink:title:
initWithEduCloudData:path:
mimeType
_cloudCoverImageData
_setCloudCoverImageData:
_setFileURL:
_cloudDictionaryRepresentation
temporaryIdentifier
setTemporaryIdentifier:
legacyUniqueIdentifier
setLegacyUniqueIdentifier:
publisherIdentifier
setPublisherIdentifier:
author
setAuthor:
feedURL
setFeedURL:
fileURL
setFileURL:
iTunesU
setITunesU:
setType:
album
setAlbum:
folderName
setFolderName:
entry
setEntry:
purgePriority
setPurgePriority:
lastUserAccessDate
setLastUserAccessDate:
itunesuAssetID
setItunesuAssetID:
coverImagePath
setCoverImagePath:
_sample
_iTunesU
_temporaryIdentifier
_legacyUniqueIdentifier
_publisherIdentifier
_author
_feedURL
_fileURL
_album
_folderName
_entry
_purgePriority
_lastUserAccessDate
_itunesuAssetID
_coverImagePath
T@"NSDictionary",&,N,V_entry
T@"NSString",C,N,V_temporaryIdentifier
T@"NSString",C,N,V_legacyUniqueIdentifier
T@"NSString",C,N,V_storeIdentifier
T@"NSString",C,N,V_persistentIdentifier
T@"NSString",C,N,V_publisherIdentifier
T@"NSString",C,N,V_author
T@"NSString",C,N,V_feedURL
T@"NSURL",&,N,V_fileURL
TB,N,V_iTunesU
sample
TB,N,GisSample,V_sample
Tq,N,V_type
T@"NSString",C,N,V_publicationVersion
T@"NSString",C,N,V_album
T@"NSString",C,N,V_folderName
Tq,N,V_purgePriority
T@"NSDate",&,N,V_lastUserAccessDate
T@"NSString",C,N,V_itunesuAssetID
T@"NSString",C,N,V_coverImagePath
T@"NSString",R,C,N
contextDidSave:
sharedSession
valueForDAAPBagKey:completion:
timeIntervalFromDAAPBagKey:completion:
appRefreshesOnLaunchWithCompletionHandler:
pollingFrequencyWithCompletionHandler:
databaseIDWithCompletionHandler:
forcedRefreshFrequencyWithCompletionHandler:
resetWithQueue:
serverParametersWithCompletionHandler:
_dataForArtRequest:
updateItemImageURLsIgnoringCache:completion:
_dataForHideItemsRequestWithStoreIDs:
_updateVersionAfterHideRequest:
setupWithReason:queue:completion:
fetchAllItemsPolitely:reason:queue:completion:
initWithDSID:delegate:
_saveInMoc:error:
_localServerDatabaseRevisionInMoc:
_updatePersistentServerRevision:database:items:error:
_updatePersistentServerRevision:moc:error:
_updatePersistentDatabase:server:moc:error:
_updatePersistentItems:moc:database:error:
_sendHandlers:success:
_sendSetupConfigurationHandlersWithSuccess:
_shouldMakeRequest:
_preProcessResponse:error:responseBlock:
_newDefaultAuthenticateOptions
_processResponse:
handleClientExpired
_canMakeDAAPRequest
setDAAPReconnectToTimeIntervalSinceNow:
_configureWithReason:completion:
_loginWithReason:completion:
_loginWithRequest:completion:
_pollLatestRevisionWithReason:completion:
_fetchDatabaseWithReason:localServerRevision:latestVersion:completionHandler:
_fetchDatabaseWithRequest:completionHandler:
daapQueryFilterString
daapMetaDataFilterString
additionalAudiobookInfoKeys
bookletKeys
_dataForItemsRequestWithLocalVersion:serverVersion:tokenPairs:
_fetchItemsWithLocalVersion:serverVersion:reason:tokenPairs:completionHandler:
isServerSetup
setIsServerSetup:
isServerSetupPending
setIsServerSetupPending:
sessionID
_setSessionID:
isPrimaryAccount
_lastPolledAt
_DAAPReconnectAt
_clientExpired
_requestReasonCode
_setupCompletionHandlers
_backoff
_updateItemsQueue
_backoffQueue
_isServerSetup
_isServerSetupPending
_primaryAccount
_sessionID
TB,N,V_isServerSetup
TB,N,V_isServerSetupPending
primaryAccount
TB,R,N,GisPrimaryAccount,V_primaryAccount
T@"NSNumber",&,N,S_setSessionID:,V_sessionID
T@"<BLPurchaseDAAPServerDelegate>",W,N,V_delegate
hasBackedOff
failureIntervals:
clear
backoffUntil
setBackoffUntil:
failureCount
setFailureCount:
_backoffUntil
_failureCount
T@"NSDate",&,N,V_backoffUntil
Tq,N,V_failureCount
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithData:
parseWithError:
consumeBytes:length:
parseAttributeList:
processLine
saveLine:
rewriteWithURL:
collectForRewrite
setCollectForRewrite:
setData:
bytes
setBytes:
collectedData
setCollectedData:
_collectForRewrite
_bytes
_collectedData
T@"NSData",&,N,V_data
T@"NSMutableData",&,N,V_bytes
T@"NSMutableData",&,N,V_collectedData
T@"<BLM3U8ParserDelegate>",W,N,V_delegate
TB,N,V_collectForRewrite
defaultIdentifier
schemaVersion
persistentStoreFileName
initWithDSID:reason:sessionID:revisionNumber:delta:
delta
setDelta:
_delta
T@"NSNumber",C,N,V_delta
itemWithServerItem:
arrayWithServerItems:
artist
setArtist:
artworkTokenCode
setArtworkTokenCode:
artworkURLString
setArtworkURLString:
cloudID
setCloudID:
isHidden
setIsHidden:
purchasedAt
setPurchasedAt:
purchasedTokenCode
setPurchasedTokenCode:
purchaseHistoryID
setPurchaseHistoryID:
isExplicit
setIsExplicit:
isDisabled
setIsDisabled:
setExpectedDate:
sortedTitle
setSortedTitle:
sortedAuthor
setSortedAuthor:
displayVersion
setDisplayVersion:
isPictureBook
setIsPictureBook:
containsAudio
setContainsAudio:
isReadAloud
setIsReadAloud:
chapterMetadataURLString
setChapterMetadataURLString:
hlsPlaylistURLString
setHlsPlaylistURLString:
storeAccountID
setStoreAccountID:
additionalAudiobookInfo
setAdditionalAudiobookInfo:
needsImport
setNeedsImport:
booklets
setBooklets:
_artist
_artworkTokenCode
_artworkURLString
_cloudID
_isHidden
_purchasedAt
_purchasedTokenCode
_purchaseHistoryID
_isExplicit
_isDisabled
_expectedDate
_sortedTitle
_sortedAuthor
_displayVersion
_fileExtension
_isPictureBook
_containsAudio
_isReadAloud
_chapterMetadataURLString
_hlsPlaylistURLString
_storeAccountID
_additionalAudiobookInfo
_needsImport
_booklets
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_artworkTokenCode
T@"NSString",C,N,V_artworkURLString
T@"NSString",C,N,V_cloudID
T@"NSNumber",&,N,V_isHidden
T@"NSDate",C,N,V_purchasedAt
T@"NSString",C,N,V_purchasedTokenCode
T@"NSNumber",&,N,V_purchaseHistoryID
T@"NSNumber",&,N,V_isExplicit
T@"NSNumber",&,N,V_isDisabled
T@"NSDate",C,N,V_expectedDate
T@"NSString",C,N,V_sortedTitle
T@"NSString",C,N,V_sortedAuthor
T@"NSString",C,N,V_displayVersion
T@"NSString",C,N,V_fileExtension
T@"NSNumber",&,N,V_isPictureBook
T@"NSNumber",&,N,V_containsAudio
T@"NSNumber",&,N,V_isReadAloud
T@"NSString",&,N,V_chapterMetadataURLString
T@"NSNumber",&,N,V_isAudiobook
T@"NSString",&,N,V_hlsPlaylistURLString
T@"NSNumber",&,N,V_storeAccountID
T@"NSDictionary",&,N,V_additionalAudiobookInfo
T@"NSNumber",&,N,V_needsImport
T@"NSSet",&,N,V_booklets
T@"NSNumber",R,N
predicateForNonExplicitItems
sortByTitleDescriptor
initWithIdentifier:databaseContainerPath:accountDSID:
fetchAllServerItemsForDSIDs:
searchAllServerItemsForDSIDs:matchingSearchString:isExplicitRestricted:
fetchAllServerItemsWithPredicate:sortDescriptor:
fetchServerItemsForStoreIDs:andDSIDS:
fetchItemsForDSIDs:excludeStoreIDs:isExplicitRestricted:
predicateToExcludeStoreIDs:
p_allItemsFetchRequestForDSIDs:
p_allItemsFetchRequestForDSIDs:matchingSearchString:isExplicitRestricted:
p_fetchRequestForStoreIDs:dsids:
p_itemsFetchRequestIncludingHiddenItems:dsids:
_itemsFetchRequestForDSIDs:excludeStoreIDs:isExplicitRestricted:
model
setModel:
setPsc:
currentAccountDSID
setCurrentAccountDSID:
_currentAccountDSID
T@"NSManagedObjectModel",&,N,V_model
T@"NSPersistentStoreCoordinator",&,N,V_psc
T@"NSString",C,N,V_databaseContainerPath
T@"NSNumber",&,N,V_currentAccountDSID
T@"NSDate",&,D,N
database
T@"BLJaliscoServerDatabase",&,D,N
T@"NSDictionary",&,D,N
initWithDSID:reason:sessionID:localVersion:
innerSharedInstance
overrideSharedInstance:
cancelAllActiveDownloads
prepareForRemoveApp
_cancelAllPausedDownloads
purchaseWithBuyParameters:storeID:completion:
purchaseWithBuyParameters:storeID:isAudiobook:completion:
purchaseWithBuyParameters:storeID:isAudiobook:userInfo:completion:
_purchaseWithRequest:uiHostProxy:completion:
purchaseWithRequest:completion:
addDownloadWithPurchaseParameters:storeID:completion:
addDownloadWithPermlink:title:completion:
addDownloadWithMetadata:completion:
addRestoreDownloadWithMetadata:completion:
pauseDownloadWithID:withCompletion:
resumeDownloadWithID:withCompletion:
cancelDownloadWithID:withCompletion:
addDownloadsWithMetadata:completion:
addRestoreDownloadsWithMetadata:completion:
addDownloadsWithRestoreContentRequestItems:completion:
addDownloadsWithManifestRequest:completion:
addObserver:
removeObserver:
addDownloadWithPurchaseParameters:completion:
cancelAllActiveDownloadsWithCompletion:
restartDownloadWithID:withCompletion:
reloadFromServerWithCompletion:
_addDownloadWithMetadata:isRestore:completion:
serverProgressObserver
_serverProgressObserver
T@"BLDownloadQueueServerProgressObserver",R,N,V_serverProgressObserver
@48@0:8@16q24@32@40
@24@0:8@16
@16@0:8
v24@0:8@16
v16@0:8
@"NSNumber"
@32@0:8@16@24
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDictionary"
@40@0:8@16@24@32
B48@0:8@16@24@32^@40
@48@0:8@16@24@32@40
v40@0:8@16@24@?32
@32@0:8@16^@24
B32@0:8@16^@24
@32@0:8@16@?24
@32@0:8@?16^q24
@40@0:8@16@24^@32
B24@0:8@16
v40@0:8@16@24@32
@"IMLibraryPlist"
@"NSObject<OS_dispatch_queue>"
Q16@0:8
v24@0:8Q16
v20@0:8B16
q16@0:8
v24@0:8q16
v32@0:8@16@24
@"NSMutableDictionary"
@"NSLock"
@"NSString"
@"NSError"
q24@0:8@16
@24@0:8q16
B40@0:8@16@24^@32
B24@0:8^@16
@"NSURL"
@36@0:8@16B24^@28
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v32@0:8@"BLM3U8Parser"16@"NSURL"24
v48@0:8@"BLM3U8Parser"16@"NSString"24@"NSString"32@"NSDictionary"40
v32@0:8@"BLM3U8Parser"16@"NSString"24
B24@0:8@"BLM3U8Parser"16
@"NSArray"
@"NSUUID"
@"BLHLSPlaylistState"
@"NSMutableSet"
@48@0:8@16d24@32@40
d16@0:8
@"BLHLSMap"
@"BLHLSKey"
v24@0:8d16
@"NSMutableArray"
@"BLHLSStreamInf"
@32@0:8@16q24
v24@0:8@?16
v32@0:8@16@?24
v36@0:8@16B24@?28
v36@0:8B16@20@?28
v40@0:8@16q24@?32
v32@0:8q16@?24
v40@0:8q16@24@?32
v28@0:8B16@?20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"BLDownload"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v40@0:8@"BLPurchaseRequest"16@"<BLUIHostServiceProtocol>"24@?<v@?@"NSString"@"BLPurchaseResponse"@"NSError">32
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSError">24
v36@0:8@"NSDictionary"16B24@?<v@?@"NSString"@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"BLDownloadManifestRequest"16@"<BLUIHostServiceProtocol>"24@?<v@?@"BLDownloadManifestResponse"@"NSError">32
v36@0:8B16@"<BLUIHostServiceProtocol>"20@?<v@?@"NSError">28
v40@0:8@"NSUUID"16q24@?<v@?@"NSError">32
v32@0:8q16@?<v@?@"NSUUID"@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8q16@"NSSet"24@?<v@?@"NSError">32
v32@0:8q16@?<v@?@"BLBookletMigrationInfo"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?BBBB@"NSError">16
v24@0:8@?<v@?B@"NSError">16
@24@0:8o^@16
@32@0:8@16o^@24
@24@0:8@?16
i16@0:8
v20@0:8i16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<BLServiceProxyConnectionMonitoring>"
@"NSXPCConnection"
@"<BLProgressReceiving>"
@32@0:8@16Q24
v24@0:8@"NSDictionary"16
v24@0:8@"BLServiceProxy"16
v84@0:8@16@24@32@40@48@56@64B72@76
@32@0:8@16^B24
v28@0:8@16B24
@76@0:8@16@24@32@40@48@56@64B72
@"BLServiceProxy"
@"NSHashTable"
@"BLDownloadQueueNonUI"
Q32@0:8r*16q24
@32@0:8r*16q24
v48@0:8r*16q24@32@40
v36@0:8I16r*20q28
@36@0:8r*16q24i32
v40@0:8r*16q24@32
@36@0:8I16r*20q28
@32@0:8q16q24
B40@0:8q16@24o^@32
B32@0:8@16o^@24
B40@0:8@16q24o^@32
B32@0:8q16o^@24
@32@0:8B16B20@24
@"NSURLSession"
{CGSize=dd}16@0:8
@"NSDate"
@"NSData"
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v32@0:8@"AMSEngagementRequest"16@?<v@?@"AMSEngagementResult"@"NSError">24
B24@0:8B16B20
B20@0:8B16
B32@0:8@?16^@24
@24@0:8Q16
@32@0:8^{_xmlDoc=^vi*^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlNode}^{_xmlDoc}ii^{_xmlDtd}^{_xmlDtd}^{_xmlNs}**^v^v*i^{_xmlDict}^vii}16@24
@28@0:8@16B24
@40@0:8@16B24B28^@32
@"NSURLRequest"
@"NSSet"
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@24@0:8^@16
@48@0:8@16@24@32^@40
@56@0:8@16@24@32Q40^@48
@56@0:8@16@24@32@40^@48
@28@0:8B16@20
@20@0:8B16
@36@0:8@16@24B32
@40@0:8@16@24B32B36
@"NSPersistentStoreCoordinator"
@"NSManagedObjectModel"
C16@0:8
v20@0:8C16
I16@0:8
v20@0:8I16
{?="itemHasVideo"b1}
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
q24@0:8C16I20
q24@0:8I16I20
q28@0:8Q16I24
v32@0:8Q16Q24
v36@0:8B16q20@?28
v48@0:8@16@24@32@?40
v28@0:8B16Q20
@?16@0:8
@"<BLJaliscoDAAPClientDelegate>"
@"<BLImageManager>"
@"NSManagedObjectContext"
@"BUBag"
v44@0:8B16q20@28@?36
v48@0:8q16@24@32@?40
v56@0:8@16@24q32@40@?48
@"BKPurchaseDAAPBackoff"
@"<BLPurchaseDAAPServerDelegate>"
B24@0:8Q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
Q32@0:8r^v16Q24
@"<BLM3U8ParserDelegate>"
@"NSMutableData"
@56@0:8@16q24@32@40@48
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@36@?44
@"BLDownloadQueueServerProgressObserver"
