@(#)PROGRAM:EmbeddedDataReset  PROJECT:DeviceDataReset-1
DDRLogForCategory
DDRLogging.m
category < DDRLoggingCategoryCount
v8@?0
DeviceDataResetDefault
DeviceDataResetProgress
DeviceDataResetDaemon
DeviceDataResetFramework
com.apple.devicedatareset.xpcserviceworker
com.apple.devicedatareset.daemon
com.apple.devicedatareset.framework
com.apple.devicedatareset.errorDomain.ddrservice
com.apple.devicedatareset.observer
com.apple.devicedatareset.DeviceDataResetObservationService.NonLaunching
com.apple.devicedatareset.DeviceDataResetService
v16@?0@"NSError"8
hideProgress
eraseDataPlan
disallowProximitySetup
options
mode
reason
adding observer %@ to array: %@, self = %@
added observer %@ to array: %@, self = %@
removing observer %@ from array: %@
Observer table in observerNonLaunchingXPCConnection: %@
ObserverXPCConnection invalidated at DDRResetService!
ObserverXPCConnection interrupted at DDRResetService!
Observer table in dataResetXPCConnection: %@
DataResetConnection invalidated at DDRResetService!
DataResetConnection interrupted at DDRResetService!
Notifying clients of failed reset in framework
Reset mode: %ld, hide progress:%d, erase data plan: %d, reason: %@
Connection to daemon failed with error: %@
Observer table in resetWithRequest: %@, self = %@
Completed data reset
Invalidate current connection to devicedataresetd
Broadcast willBeginDataResetWithMode to observers in framework
Data reset willbegin delegate oberver: %@
Oberver:%@ responds to willBeginDataResetWithMode
Broadcast didBeginDataResetWithMode to observers in framework
Data reset didbegin delegate oberver: %@
Oberver:%@ responds to didBeginDataResetWithMode
Data reset completion delegate call back in framework
Data reset completion delegate oberver: %@
Oberver:%@ responds to didCompleteDataResetMode
DDRServerObserverProtocol
NSObject
DDRClientObserverProtocol
DDRServerProtocol
DDRClientResetProtocol
DDRResetService
DDRResetOptions
NSSecureCoding
NSCoding
DDRResetRequest
setCurrentResetState:
weakObjectsHashTable
setObervers:
setInvalidated:
setObserverQueue:
setLock:
observerQueue
obervers
containsObject:
count
observerNonLaunchingXPCConnection
remoteObjectProxy
connect
addObject:
removeObject:
invalidate
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedObject:
willBeginDataResetWithMode:
didBeginDataResetWithMode:
didCompleteDataResetMode:withError:completion:
setExportedInterface:
notifyClientsOfResetFailedWithErrorCode:
setInvalidationHandler:
setInterruptionHandler:
_xpcConnection
resume
resetDataWithRequest:completion:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
sync
currentResetState
errorWithDomain:code:userInfo:
mode
setMode:
options
hideProgress
eraseDataPlan
reason
dataResetXPCConnection
synchronousRemoteObjectProxyWithErrorHandler:
countByEnumeratingWithState:objects:count:
resetService:willBeginDataResetWithMode:
resetService:didBeginDataResetWithMode:
resetService:didCompleteDataResetMode:withError:completion:
sharedInstance
addOberver:
removeObserver:
resetWithRequest:completion:
setDataResetXPCConnection:
setObserverNonLaunchingXPCConnection:
invalidated
lock
.cxx_destruct
_invalidated
_currentResetState
_lock
_dataResetXPCConnection
_observerNonLaunchingXPCConnection
_obervers
_mode
_observerQueue
T@"NSXPCConnection",&,N,V_dataResetXPCConnection
T@"NSXPCConnection",&,N,V_observerNonLaunchingXPCConnection
Ti,N,V_currentResetState
T@"NSHashTable",&,N,V_obervers
TB,N,V_invalidated
Tq,N,V_mode
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
T{os_unfair_lock_s=I},N,V_lock
init
decodeBoolForKey:
encodeBool:forKey:
disallowProximitySetup
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
setHideProgress:
setEraseDataPlan:
setDisallowProximitySetup:
_hideProgress
_eraseDataPlan
_disallowProximitySetup
TB,N,V_hideProgress
TB,N,V_eraseDataPlan
TB,N,V_disallowProximitySetup
decodeObjectForKey:
decodeIntegerForKey:
initWithMode:options:reason:
encodeObject:forKey:
encodeInteger:forKey:
_options
_reason
Tq,R,N,V_mode
T@"DDRResetOptions",R,N,V_options
T@"NSString",R,C,N,V_reason
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8q16
v40@0:8q16@24@?32
v40@0:8q16@"NSError"24@?<v@?>32
v32@0:8@16@?24
v32@0:8@"DDRResetRequest"16@?<v@?@"NSError">24
v24@0:8@16
i16@0:8
v20@0:8i16
v20@0:8B16
q16@0:8
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSXPCConnection"
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8q16@24@32
@"DDRResetOptions"
@"NSString"
@(#)PROGRAM:EmbeddedDataReset  PROJECT:DeviceDataReset-1
DDRLogForCategory
DDRLogging.m
category < DDRLoggingCategoryCount
v8@?0
DeviceDataResetDefault
DeviceDataResetProgress
DeviceDataResetDaemon
DeviceDataResetFramework
com.apple.devicedatareset.xpcserviceworker
com.apple.devicedatareset.daemon
com.apple.devicedatareset.framework
com.apple.devicedatareset.errorDomain.ddrservice
com.apple.devicedatareset.observer
com.apple.devicedatareset.DeviceDataResetObservationService.NonLaunching
com.apple.devicedatareset.DeviceDataResetService
v16@?0@"NSError"8
hideProgress
eraseDataPlan
disallowProximitySetup
options
mode
reason
adding observer %@ to array: %@, self = %@
added observer %@ to array: %@, self = %@
removing observer %@ from array: %@
Observer table in observerNonLaunchingXPCConnection: %@
ObserverXPCConnection invalidated at DDRResetService!
ObserverXPCConnection interrupted at DDRResetService!
Observer table in dataResetXPCConnection: %@
DataResetConnection invalidated at DDRResetService!
DataResetConnection interrupted at DDRResetService!
Notifying clients of failed reset in framework
Reset mode: %ld, hide progress:%d, erase data plan: %d, reason: %@
Connection to daemon failed with error: %@
Observer table in resetWithRequest: %@, self = %@
Completed data reset
Invalidate current connection to devicedataresetd
Broadcast willBeginDataResetWithMode to observers in framework
Data reset willbegin delegate oberver: %@
Oberver:%@ responds to willBeginDataResetWithMode
Broadcast didBeginDataResetWithMode to observers in framework
Data reset didbegin delegate oberver: %@
Oberver:%@ responds to didBeginDataResetWithMode
Data reset completion delegate call back in framework
Data reset completion delegate oberver: %@
Oberver:%@ responds to didCompleteDataResetMode
DDRServerObserverProtocol
NSObject
DDRClientObserverProtocol
DDRServerProtocol
DDRClientResetProtocol
DDRResetService
DDRResetOptions
NSSecureCoding
NSCoding
DDRResetRequest
resume
decodeIntegerForKey:
count
_xpcConnection
errorWithDomain:code:userInfo:
setWithObjects:
setInterruptionHandler:
encodeInteger:forKey:
remoteObjectProxy
addObject:
initWithMachServiceName:options:
setRemoteObjectInterface:
setInvalidationHandler:
weakObjectsHashTable
setExportedObject:
decodeBoolForKey:
decodeObjectForKey:
setClasses:forSelector:argumentIndex:ofReply:
interfaceWithProtocol:
containsObject:
encodeBool:forKey:
synchronousRemoteObjectProxyWithErrorHandler:
encodeObject:forKey:
countByEnumeratingWithState:objects:count:
removeObject:
setExportedInterface:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connect
willBeginDataResetWithMode:
didBeginDataResetWithMode:
didCompleteDataResetMode:withError:completion:
resetDataWithRequest:completion:
sync
resetService:willBeginDataResetWithMode:
resetService:didBeginDataResetWithMode:
resetService:didCompleteDataResetMode:withError:completion:
sharedInstance
addOberver:
removeObserver:
observerNonLaunchingXPCConnection
dataResetXPCConnection
notifyClientsOfResetFailedWithErrorCode:
resetWithRequest:completion:
invalidate
setDataResetXPCConnection:
setObserverNonLaunchingXPCConnection:
currentResetState
setCurrentResetState:
obervers
setObervers:
invalidated
setInvalidated:
mode
setMode:
observerQueue
setObserverQueue:
lock
setLock:
.cxx_destruct
_invalidated
_currentResetState
_lock
_dataResetXPCConnection
_observerNonLaunchingXPCConnection
_obervers
_mode
_observerQueue
T@"NSXPCConnection",&,N,V_dataResetXPCConnection
T@"NSXPCConnection",&,N,V_observerNonLaunchingXPCConnection
Ti,N,V_currentResetState
T@"NSHashTable",&,N,V_obervers
TB,N,V_invalidated
Tq,N,V_mode
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
T{os_unfair_lock_s=I},N,V_lock
init
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
hideProgress
setHideProgress:
eraseDataPlan
setEraseDataPlan:
disallowProximitySetup
setDisallowProximitySetup:
_hideProgress
_eraseDataPlan
_disallowProximitySetup
TB,N,V_hideProgress
TB,N,V_eraseDataPlan
TB,N,V_disallowProximitySetup
initWithMode:options:reason:
options
reason
_options
_reason
Tq,R,N,V_mode
T@"DDRResetOptions",R,N,V_options
T@"NSString",R,C,N,V_reason
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8q16
v40@0:8q16@24@?32
v40@0:8q16@"NSError"24@?<v@?>32
v32@0:8@16@?24
v32@0:8@"DDRResetRequest"16@?<v@?@"NSError">24
v24@0:8@16
i16@0:8
v20@0:8i16
v20@0:8B16
q16@0:8
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSXPCConnection"
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8q16@24@32
@"DDRResetOptions"
@"NSString"
