@(#)PROGRAM:SleepHealthDaemon  PROJECT:Sleep-1
C0F3C2C3-0CDE-4DF9-A95A-789AC9A0348B
%@:%@
v20@?0B8@"NSError"12
v8@?0
v16@?0@"<HDFeatureAvailabilityExtensionObserver>"8
@16@?0@"HKSampleType"8
B32@?0@"HKObject"8q16^@24
AtIndex
v24@?0@"HKSHSleepDaySummary"8^B16
InRange
@"<HKSPSleepOnboardingStore>"8@?0
SleepTracking
SleepTrackingSessionStartDate
queue
HDSHPluginServer.m
Invalid parameter not satisfying: %@
newSchedulesByWeekday[weekdayNumber] == nil
B16@?0^@8
[%@] Sleep samples saved
@16@?0@"HKSample"8
HDSHSleepHealthDaemonTestPlugin.m
Invalid featureIdentifier: %@
B24@?0@"HDDatabaseTransaction"8^@16
HDSHSleepDaySummaryBuilder.m
category == HKCategoryValueSleepAnalysisInBed || category == HKCategoryValueSleepAnalysisAsleep
%@: Invalid data type
B16@?0@"HKCategorySample"8
q24@?0@"HKSHSleepPeriodSegment"8@"HKSHSleepPeriodSegment"16
@16@?0@"HKSleepSchedule"8
[%{public}@] Failed to read sleep event record with error: %{public}@
[%{public}@] Unexpected feature identifier: %{public}@
[%{public}@] Resetting onboarding
[%{public}@] Reset HealthKit onboarding completions with error: %{public}@
[%{public}@] Setting onboarding version to %{public}@
[%{public}@] Beginning onboarding migration
[%{public}@] Failed to read sleep settings during migration: %{public}@
[%{public}@] User did not have SpringBoard greeting disabled prior to migration.
[%{public}@] Failed to read highest onboarding version during migration: %{public}@
[%{public}@] Onboarding was not completed prior to migration
[%{public}@] Failed to read earliest date during migration: %{public}@
[%{public}@] Migrating onboarding version %{public}@ completed on %{public}@
[%{public}@] Successfully saved to sleep store during migration
[%{public}@] Error saving during migration: %{public}@
[%{public}@] Unknown feature identifier: %{public}@
[%{public}@] Registering for KVO changes to Sleep defaults for key %{public}@
[%{public}@] Skipping registration for KVO changes
[%{public}@] Sleep user defaults key changed: %{public}@
[%{public}@:%{public}@] Failed to initialize enumerator with schedules and goals, error: %{public}@
[%{public}@:%{public}@] Enumerate with range: %{public}@ (%@), ascending: %{public}@, require analysis: %{public}@, only analysis: %{public}@
[%{public}@:%{public}@] Enumerated %{public}@ samples
[%{public}@:%{public}@] Process sample: %{public}@
[%{public}@:%{public}@] Closing builders before index: %{public}@
[%{public}@:%{public}@] Closing builders from %@ to %@ (ascending = %@)
[%{public}@:%{public}@] Skipping index out of range: %@
[%{public}@:%{public}@] Retrieving builder: %@
[%{public}@:%{public}@] Creating builder: %@
[%{public}@:%{public}@] Updating builder: %@
[%{public}@:%{public}@] Add sample to %@: %@
[%{public}@] Plugin loaded
[%{public}@] failed to read observing protection state key: %{public}@
[%{public}@] failed to set observing protection state key: %{public}@
[%{public}@] should be observing content protection state
[%{public}@] beginObservingContentProtectionState
[%{public}@] stopObservingContentProtectionState
[%{public}@] invalidateAccessibilityAssertion
[%{public}@] database is locking, taking assertion
[%{public}@] invalidating existing assertion
[%{public}@] failed to take assertion with error: %{public}@
[%{public}@] Updating current sleep schedules: %@
[%{public}@] Updating sleep duration goal: %@
[%{public}@] Finished replace with success: %@
[%{public}@] Cannot retrieve most recent sample for weekday, protected data unavailable: %@
[%{public}@] Old schedules: %@
[%{public}@] New schedules: %@
[%{public}@] Changed schedules: %@
[%{public}@] Error retrieving latest sleep duration goal: %{public}@
[%{public}@] Skipping saving unchanged sleep duration goal
[%{public}@] sleep tracking session started
[%{public}@] sleep tracking session stopped
[%{public}@] saving sleep tracking samples %@
[%{public}@] adding accessibility assertion to transaction context
[%{public}@] syncing health data
[%{public}@] failed to sync health data with error: %{public}@
[%{public}@] failed to save samples with error: %{public}@
[%{public}@] Replacing old samples: %@ with new samples: %@
[%{public}@] Deleting UUIDs: %@
[%{public}@] Inserting for client: %@, source: %@
[%{public}@] Success inserting: %@
[%{public}@] Avoiding exposing health data due to missing authorization: %{public}@
[%{public}@] Add ordered sample: %{public}@
HDSHFeatureAvailabilityManager
HDFeatureAvailabilityExtensionObserver
HKFeatureAvailabilityProvidingObserver
HKSPSleepStorePrivateObserver
HKSPSleepStoreObserver
NSObject
HDFeatureAvailabilityExtension
HKFeatureAvailabilityProviding
HDSHSleepHealthDaemonPlugin
HDPlugin
HDTaskServerClassProvider
HDSHSleepDaySummaryEnumerator
HDSHProfileExtension
HDProfileExtension
HDFeatureAvailabilityExtensionProvider
HDSHAccessibilityAssertionManager
HDContentProtectionObserver
HDSHPluginServer
HDDiagnosticObject
HDSleepHealthDaemonPluginServerInterface
HDSHSleepHealthDaemonTestPlugin
HDSHSleepDaySummaryQueryServer
HDSHSleepOnboardingTestStore
HKSPSleepOnboardingStore
SleepHealthDaemon
HKSHSleep
HDSHSleepPeriodSegmentArrayBuilder
HDSHSleepPeriodArrayBuilder
HDSHSleepDaySummaryBuilder
init
copy
hksp_sleepdUserDefaults
initWithUUIDString:
initWithProfile:featureIdentifier:currentOnboardingVersion:pairedDeviceCapability:loggingCategory:
description
initWithName:loggingCategory:
featureIdentifier
stringWithFormat:
_unregisterForSleepUserDefaultsChanges
dealloc
_sleepUserDefaultsDidChangeForKey:
observeValueForKeyPath:ofObject:change:context:
_currentSleepEventRecordWithSleepStore:error:
currentSleepEventRecordWithError:
isEqualToString:
setSleepCoachingOnboardingCompletedVersion:completion:
setSleepTrackingOnboardingCompletedVersion:completion:
setSleepWindDownShortcutsOnboardingCompletedVersion:completion:
_currentSleepEventRecordWithError:
hksp_onboardingFirstCompletedDateForFeature:
hksp_onboardingCompletedVersionForFeature:
numberWithLong:
integerValue
_migrateOnboardingIfNeededAndReturnCompletedVersion
isCurrentOnboardingVersionCompletedWithError:
highestOnboardingVersionCompletedWithError:
numberWithInt:
canCompleteOnboardingForCountryCode:error:
onboardedCountryCodeSupportedStateWithError:
_saveOnboardingCompletedVersion:completion:
resetOnboardingWithCompletion:
numberWithInteger:
_migrateOnboardingAndReturnCompletedVersion
currentSleepSettingsWithError:
springBoardGreetingDisabled
earliestDateLowestOnboardingVersionCompletedWithError:
mutableCopy
setSleepCoachingOnboardingCompletedVersion:
setSleepCoachingOnboardingFirstCompletedDate:
setSleepTrackingOnboardingCompletedVersion:
setSleepTrackingOnboardingFirstCompletedDate:
setSleepWindDownShortcutsOnboardingCompletedVersion:
setSleepWindDownShortcutsOnboardingFirstCompletedDate:
saveCurrentSleepEventRecord:completion:
deviceForPairingID:
isFeatureCapabilitySupportedOnActivePairedDeviceWithError:
isFeatureCapabilitySupportedOnDevice:error:
registerObserver:queue:
_registerForSleepUserDefaultsChangesIfNecessary
unregisterObserver:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
_notifyObserversForOnboardingCompletedVersionChange
featureAvailabilityProvidingDidUpdateOnboardingCompletion:
notifyObservers:
featureAvailabilityProvidingDidUpdatePairedDeviceCapability:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
sleepStore:sleepEventRecordDidChange:
sleepStore:sleepScheduleModelDidChange:
isCurrentOnboardingVersionCompletedWithCompletion:
canCompleteOnboardingForCountryCode:device:error:
onboardedCountryCodeSupportedStateForDevice:error:
setCurrentOnboardingVersionCompletedForCountryCode:completion:
T@"NSString",R,C,N
initWithProfile:sleepStoreProvider:featureIdentifier:currentOnboardingVersion:
unitTest_notifyObserversForOnboardingCompletedVersionChange
.cxx_destruct
_sleepStoreProvider
_currentOnboardingVersion
_observers
_manager
_needsMigration
_observedDefaultsKey
_sleepDaemonDefaults
_queue
initWithProfile:
arrayWithObjects:count:
extensionForHealthDaemon:
extensionForProfile:
pluginIdentifier
shouldLoadPluginForDaemon:
taskServerClasses
currentCalendar
hk_componentsWithDayIndex:calendar:
date
component:fromDate:
hksh_sleepDayIntervalForMorningIndexRange:calendar:
startDate
dateByAddingTimeInterval:
endDate
initWithStartDate:endDate:
hksh_timeZoneEncodingOptions
setWithObject:
initWithSampleTypes:predicate:encodingOptions:restrictedSourceEntities:authorizationFilter:sqlitePredicate:
hk_map:
sortDescriptorWithKey:ascending:
initWithSampleQueryDescriptions:sortDescriptors:bufferSize:profile:
countByEnumeratingWithState:objects:count:
mostRecentSleepScheduleForWeekday:beforeDate:profile:encodingOptions:error:
setObject:forKeyedSubscript:
sleepDurationGoalType
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
numberWithBool:
advanceWithError:
sample
_processEnumeratedSample:buildersByIndex:nextIndexToClose:finalIndexWithAnySample:currentCalendar:handler:stop:
categoryTypeForIdentifier:
entityEnumeratorWithType:profile:
setPredicate:
dictionaryWithObjects:forKeys:count:
addEncodingOptionsFromDictionary:
orderingTermWithProperty:entityClass:ascending:
setOrderingTerms:
enumerateWithError:handler:
_closeBuilders:fromIndex:toIndex:handler:stop:
hk_isHealthKitErrorWithCode:
hksh_morningIndexWithCalendar:
sampleType
code
weekdays
hksh_morningIndexRangeWithCalendar:
_addSample:toBuilders:inRange:
hk_indexSetWithDayIndexRange:
_updatedBuilderForMorningIndex:fromBuilders:createIfNeeded:
createDaySummary
periods
count
objectForKeyedSubscript:
_weekdayForMorningIndex:
initWithMorningIndex:weekday:calendarCache:
numberWithUnsignedInteger:
addOrderedSample:
initWithProfile:calendarCache:morningIndexRange:ascending:requireSleepAnalysis:onlySleepAnalysis:debugIdentifier:
arrayWithCapacity:
addObject:
daySummaryAtMorningIndex:requireSleepAnalysis:onlySleepAnalysis:calendarCache:profile:error:
daySummariesInMorningIndexRange:requireSleepAnalysis:onlySleepAnalysis:calendarCache:profile:error:
_indexSetFromIndex:toIndex:ascending:
_profile
_calendarCache
_morningIndexRange
_ascending
_requireSleepAnalysis
_onlySleepAnalysis
_debugIdentifier
_iterator
_schedulesByWeekday
_sleepDurationGoalSample
_rangeDateInterval
_cachedFirstDayOfWeek
initWithIdentifier:
initWithProfile:sleepStoreProvider:
listenerEndpointForClient:error:
featureAvailabilityExtensionForFeatureIdentifier:client:
profile
accessibilityAssertionManager
coachingAvailabilityManager
trackingAvailabilityManager
windDownShortcutsAvailabilityManager
_coachingAvailabilityManager
_trackingAvailabilityManager
_windDownShortcutsAvailabilityManager
_accessibilityAssertionManager
T@"HDSHAccessibilityAssertionManager",R,N,V_accessibilityAssertionManager
T@"HDSHFeatureAvailabilityManager",R,N,V_coachingAvailabilityManager
T@"HDSHFeatureAvailabilityManager",R,N,V_trackingAvailabilityManager
T@"HDSHFeatureAvailabilityManager",R,N,V_windDownShortcutsAvailabilityManager
T@"HDProfile",R,W,N,V_profile
_restoreContentProtectionObservingState
initWithCategory:domainName:profile:
dateForKey:error:
timeIntervalSinceNow
setDate:forKey:error:
shouldBeObservingContentProtectionState
daemon
contentProtectionManager
addContentProtectionObserver:withQueue:
setShouldBeObservingContentProtectionState:
removeContentProtectionObserver:
invalidate
_queue_takeAccessibilityAssertion
database
takeAccessibilityAssertionWithOwnerIdentifier:timeout:error:
contentProtectionStateChanged:previousState:
beginObservingContentProtectionState
stopObservingContentProtectionState
invalidateAccessibilityAssertion
accessibilityAssertion
_accessibilityAssertion
TB,N
T@"HDAssertion",R,N
initWithUUID:configuration:client:delegate:
profileExtensionWithIdentifier:
sharedDiagnosticManager
taskIdentifier
_populateSamplesToInsert:samplesToDelete:forSleepSchedules:error:
_populateSamplesToInsert:samplesToDelete:forSleepDurationGoal:error:
_replaceSamples:withSamples:error:
firstObject
arrayByAddingObject:
hk_isDatabaseAccessibilityError
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
containsObject:
hksh_hasEquivalentTimesToSleepSchedule:
bedTimeComponents
wakeTimeComponents
addObjectsFromArray:
setWithArray:
hk_minus:
hksh_hasEquivalentOverrideDayToSleepSchedule:
timeIntervalSinceDate:
quantity
_saveSleepTrackingSamplesAfterFirstUnlock:completion:
performWhenDataProtectedByFirstUnlockIsAvailable:
contextForWritingProtectedData
addAccessibilityAssertion:
_insertSamplesWithClientSource:error:
performWithTransactionContext:error:block:
nanoSyncManager
syncHealthDataWithOptions:reason:accessibilityAssertion:completion:
_deleteSamples:error:
UUID
dataManager
deleteObjectsWithUUIDCollection:configuration:error:
sourceManager
createOrUpdateSourceForClient:error:
dataProvenanceManager
localDataProvenanceForSourceEntity:version:deviceEntity:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
requiredEntitlements
diagnosticDescription
remote_updateCurrentSleepSchedules:sleepDurationGoal:completion:
remote_startSleepTrackingSession
remote_stopSleepTrackingSession
remote_saveSleepTrackingSamples:completion:
exportedInterface
remoteInterface
connectionInvalidated
_profileExtension
_client
profileType
currentDate
setCurrentDate:
setSpringBoardGreetingDisabled:
_availabilityStoreForFeature:
onboardingCompletedVersionForFeature:
onboardingCompletedDateForFeature:
notifyForOnboardingVersionChangeForFeature:
_sleepStore
_mainExtension
T@"NSDate",&,N
_queue_start
clientProxy
remoteObjectProxy
client
authorizationOracle
objectTypes
readAuthorizationStatusesForTypes:error:
queryUUID
client_deliverError:forQuery:
allValues
canRead
client_deliverDaySummaries:clearPending:isFinalBatch:queryUUID:
contextForReadingProtectedData
_queue_surfaceDaySummariesWithError:
performTransactionWithContext:error:block:inaccessibilityHandler:
limit
morningIndexRange
ascending
requireSleepAnalysis
onlySleepAnalysis
debugIdentifier
_shouldStopProcessingQuery
_shouldSuspendQuery
queryClass
_configuration
updateSleepCoachingOnboardingCompletedVersion:completedDate:
updateSleepTrackingOnboardingCompletedVersion:completedDate:
updateSleepWindDownShortcutsOnboardingCompletedVersion:completedDate:
currentSleepEventRecordWithCompletion:
addObserver:
removeObserver:
_sleepEventRecord
_sleepSettings
_observer
_currentDate
T@"NSDate",&,N,V_currentDate
sleepCoachingOnboardingCompletedVersion
sleepTrackingOnboardingCompletedVersion
sleepWindDownShortcutsOnboardingCompletedVersion
sleepCoachingOnboardingFirstCompletedDate
sleepTrackingOnboardingFirstCompletedDate
sleepWindDownShortcutsOnboardingFirstCompletedDate
_createSegmentAndReset
hk_addNonNilObject:
laterDate:
earlierDate:
insertInterval:
sourceRevision
source
_isAppleWatch
mergedIntervals
sleepPeriodSegmentWithDateInterval:sampleIntervals:category:containsAppleSleepTrackingData:
initWithCategory:
finish
_segments
_category
_minimumInterSegmentTimeInterval
_minDate
_maxDate
_sampleIntervals
_containsAppleSleepTrackingData
dateInterval
hk_isAfterDate:
_createPeriodAndReset
sleepPeriodWithDateInterval:segments:
addOrderedSegment:
_periods
hksh_sleepDayIntervalForMorningIndex:calendar:
value
hk_containsObjectPassingTest:
compare:
sortUsingComparator:
overrideDayIndex
hk_mapToSet:
reverseObjectEnumerator
_timeZoneName
timeZoneWithName:
calendarForTimeZone:
hksh_wakeDateComponentsForMorningIndex:calendar:
hk_isBeforeDate:
hk_dayIndex
timeZone
name
hksh_bedtimeDateIntervalForWakeTime:calendar:
hksh_bedtimeDateIntervalForMorningIndex:calendar:
intersectsDateInterval:
hasOverlapWithInterval:
lastObject
_sleepPeriods
_sleepSchedules
_sleepDurationGoal
daySummaryWithMorningIndex:dateInterval:calendar:periods:schedules:sleepDurationGoal:
morningIndex
_dateInterval
_weekday
_sleepAnalysisSamples
_sleepScheduleSamples
_sleepDurationGoalSamples
_morningIndex
Tq,R,N,V_morningIndex
v24@0:8@16
v24@0:8@"<HKFeatureAvailabilityProviding>"16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEventRecord"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepScheduleModel"24
@24@0:8^@16
v24@0:8@?16
@32@0:8@16^@24
@40@0:8@16@24^@32
v32@0:8@16@?24
@"NSNumber"24@0:8^@16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
@"NSNumber"32@0:8@"NSString"16^@24
@"NSNumber"40@0:8@"NSString"16@"NRDevice"24^@32
@"NSNumber"32@0:8@"NRDevice"16^@24
@"NSDate"24@0:8^@16
v32@0:8@"<HKFeatureAvailabilityProvidingObserver>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<HKFeatureAvailabilityProvidingObserver>"16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@24@0:8@16
@"NRDevice"24@0:8@"NSUUID"16
v32@0:8@"<HDFeatureAvailabilityExtensionObserver>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<HDFeatureAvailabilityExtensionObserver>"16
@48@0:8@16@?24@32q40
v16@0:8
v48@0:8@16@24@32^v40
v32@0:8q16@?24
@"HKObserverSet"
@"HDFeatureAvailabilityManager"
@"NSString"
@"NSUserDefaults"
@"NSObject<OS_dispatch_queue>"
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
@"NSArray"16@0:8
@56@0:8q16B24B28@32@40^@48
@64@0:8{?=qq}16B32B36@40@48^@56
@68@0:8@16@24{?=qq}32B48B52B56@60
B32@0:8^@16@?24
v72@0:8@16@24^q32^q40@48@?56^B64
@36@0:8q16q24B32
v56@0:8@16q24q32@?40^B48
Q24@0:8q16
@36@0:8q16@24B32
v48@0:8@16@24{?=qq}32
@"HDProfile"
@"HKCalendarCache"
{?="start"q"duration"q}
@"HDMultiTypeSortedSampleIterator"
@"NSMutableDictionary"
@"HKQuantitySample"
@"NSDateInterval"
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@32@0:8@16@24
@"<HDFeatureAvailabilityExtension>"32@0:8@"NSString"16@"HDHealthStoreClient"24
@32@0:8@16@?24
@"HDSHFeatureAvailabilityManager"
@"HDSHAccessibilityAssertionManager"
v32@0:8q16q24
v20@0:8B16
@"HDAssertion"
v40@0:8@16@24@?32
v40@0:8@"NSArray"16@"HKQuantitySample"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B32@0:8@16^@24
@"HDSHProfileExtension"
@"HDHealthStoreClient"
q24@0:8@16
@"HDSHSleepOnboardingTestStore"
B24@0:8^@16
@"HKSHSleepDaySummaryQueryConfiguration"
@"HKSPSleepEventRecord"24@0:8^@16
v24@0:8@?<v@?@"HKSPSleepEventRecord"@"NSError">16
@"HKSPSleepSettings"24@0:8^@16
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8@"HKSPMutableSleepEventRecord"16@?<v@?B@"NSError">24
v24@0:8@"<HKSPSleepStoreObserver>"16
@"HKSPMutableSleepEventRecord"
@"HKSPMutableSleepSettings"
@"<HKSPSleepStoreObserver>"
@"NSDate"
@24@0:8q16
@"NSMutableArray"
@"HKDateIntervalTree"
@40@0:8q16Q24@32
q16@0:8
