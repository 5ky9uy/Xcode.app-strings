@(#)PROGRAM:SleepHealthDaemon  PROJECT:Sleep-1
SleepTracking
SleepTrackingSessionStartDate
queue
v8@?0
com.apple.HDSHPluginServer.serial
HDSHPluginServer.m
Invalid parameter not satisfying: %@
newSchedulesByWeekday[weekdayNumber] == nil
B16@?0^@8
[%@] Sleep samples saved
v20@?0B8@"NSError"12
@16@?0@"HKSample"8
widgetSchedulingManager
B16@?0@"HKSample"8
v16@?0@"HKCategorySample"8
[%{public}@] profileDidBecomeReady
[%{public}@] failed to read observing protection state key: %{public}@
[%{public}@] failed to set observing protection state key: %{public}@
[%{public}@] should be observing content protection state
[%{public}@] beginObservingContentProtectionState
[%{public}@] stopObservingContentProtectionState
[%{public}@] invalidateAccessibilityAssertion
[%{public}@] database is locking, taking assertion
[%{public}@] invalidating existing assertion
[%{public}@] failed to take assertion with error: %{public}@
[%{public}@] Updating current sleep schedules: %@
[%{public}@] Updating sleep duration goal: %@
[%{public}@] Finished replace with success: %@
[%{public}@] Cannot retrieve most recent sample for weekday, protected data unavailable: %@
[%{public}@] Old schedules: %@
[%{public}@] New schedules: %@
[%{public}@] Changed schedules: %@
[%{public}@] Error retrieving latest sleep duration goal: %{public}@
[%{public}@] Skipping saving unchanged sleep duration goal
[%{public}@] sleep tracking session started
[%{public}@] sleep tracking session stopped
[%{public}@] saving sleep tracking samples %@
[%{public}@] adding accessibility assertion to transaction context
[%{public}@] syncing health data
[%{public}@] failed to sync health data with error: %{public}@
[%{public}@] failed to save samples with error: %{public}@
[%{public}@] Replacing old samples: %@ with new samples: %@
[%{public}@] Deleting UUIDs: %@
[%{public}@] Inserting for client: %@, source: %@
[%{public}@] Success inserting: %@
[%{public}@] daemonReady
[%{public}@] first unlock occurred
[%{public}@] %ld sleep samples added
[%{public}@] in bed: %ld
[%{public}@] asleep: %ld
[%{public}@] sleep stages: %ld
[%{public}@] first party asleep: %ld
[%{public}@] Plugin loaded
HDSHSleepHealthDaemonPlugin
HDPlugin
NSObject
HDTaskServerClassProvider
HDSHAccessibilityAssertionManager
HDContentProtectionObserver
HDProfileReadyObserver
HDSHPluginServer
HDDiagnosticObject
HDSleepHealthDaemonPluginServerInterface
HDSHWidgetSchedulingManager
HDHealthDaemonReadyObserver
HDDataObserver
HDSHProfileExtension
HDProfileExtension
HDFeatureAvailabilityExtensionProvider
_client
T#,R
dealloc
T@"HDProfile",R,W,N,V_profile
hk_isDatabaseAccessibilityError
T@"HDSHWidgetSchedulingManager",R,N,V_widgetSchedulingManager
isProxy
T@"NSString",R,C,N
numberWithBool:
TQ,R
profileExtensionWithIdentifier:
_accessibilityAssertion
remoteInterface
_deleteSamples:error:
.cxx_destruct
containsObject:
T@"HDAssertion",R,N
execute
T@"HDSHAccessibilityAssertionManager",R,N,V_accessibilityAssertionManager
hk_map:
T@"NSString",R,C
nanoSyncManager
TB,N
profile
UUID
release
_accessibilityAssertionManager
remote_stopSleepTrackingSession
_insertSamplesWithClientSource:error:
_isAppleWatch
_logSleepSampleStatistics:
_populateSamplesToInsert:samplesToDelete:forSleepDurationGoal:error:
_populateSamplesToInsert:samplesToDelete:forSleepSchedules:error:
_profile
_profileExtension
_queue
_queue_takeAccessibilityAssertion
_reloadThrottler
_reloadWidgetsWithReasons:
_replaceSamples:withSamples:error:
_restoreContentProtectionObservingState
_saveSleepTrackingSamplesAfterFirstUnlock:completion:
_serializer
_sleepStore
_startObservingSleep
_stopObservingSleep
_widgetSchedulingManager
accessibilityAssertion
accessibilityAssertionManager
addAccessibilityAssertion:
addContentProtectionObserver:withQueue:
addObject:
addObjectsFromArray:
addObserver:forDataType:
arrayByAddingObject:
arrayWithObjects:count:
autorelease
bedTimeComponents
beginObservingContentProtectionState
behavior
categoryType
categoryTypeForIdentifier:
class
conformsToProtocol:
connectionInvalidated
contentProtectionManager
contentProtectionStateChanged:previousState:
count
countByEnumeratingWithState:objects:count:
createOrUpdateSourceForClient:error:
currentHandler
daemon
daemonReady:
dataManager
dataProvenanceManager
database
date
dateForKey:error:
debugDescription
deleteObjectsWithUUIDCollection:configuration:error:
description
diagnosticDescription
didAddSamplesOfTypes:anchor:
exportedInterface
extensionForHealthDaemon:
extensionForProfile:
featureAvailabilityExtensionForFeatureIdentifier:
firstObject
handleDatabaseObliteration
handleFailureInMethod:object:file:lineNumber:description:
hasEquivalentOverrideDayToSleepSchedule:
hasEquivalentTimesToSleepSchedule:
hash
hk_minus:
hk_timeZoneEncodingOptions
hksp_supportsSleepWidget
identifier
init
initWithCategory:domainName:profile:
initWithIdentifier:healthStore:options:
initWithInterval:executeBlock:
initWithProfile:
initWithUUID:configuration:client:delegate:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
integerValue
invalidate
invalidateAccessibilityAssertion
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
listenerEndpointForClient:error:
localDataProvenanceForSourceEntity:version:deviceEntity:
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
mostRecentSleepScheduleForWeekday:beforeDate:profile:encodingOptions:error:
na_each:
na_filter:
numberWithInteger:
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWhenDataProtectedByFirstUnlockIsAvailable:
performWhenDataProtectedByFirstUnlockIsAvailableOnQueue:block:
performWithTransactionContext:error:block:
pluginIdentifier
prepareForObliteration
profileDidBecomeReady:
profileType
quantity
registerDaemonReadyObserver:queue:
registerProfileReadyObserver:queue:
reloadWidgetsWithReason:
remote_saveSleepTrackingSamples:completion:
remote_startSleepTrackingSession
remote_updateCurrentSleepSchedules:sleepDurationGoal:completion:
removeContentProtectionObserver:
removeObserver:forDataType:
requiredEntitlements
respondsToSelector:
retain
retainCount
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
self
setDate:forKey:error:
setObject:forKeyedSubscript:
setShouldBeObservingContentProtectionState:
setWithArray:
sharedDiagnosticManager
shouldBeObservingContentProtectionState
shouldLoadPluginForDaemon:
sleepDurationGoalType
source
sourceManager
sourceRevision
startDate
stopObservingContentProtectionState
stringWithFormat:
superclass
syncHealthDataWithOptions:reason:accessibilityAssertion:completion:
takeAccessibilityAssertionWithOwnerIdentifier:timeout:error:
taskIdentifier
taskServerClasses
timeIntervalSinceDate:
timeIntervalSinceNow
value
wakeTimeComponents
weekdays
widgetManager
widgetSchedulingManager
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v16@0:8
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
@"NSArray"16@0:8
v32@0:8q16q24
v24@0:8@16
v24@0:8@"HDProfile"16
v20@0:8B16
@"HDAssertion"
@"NSObject<OS_dispatch_queue>"
@"HDProfile"
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@"NSArray"16@"HKQuantitySample"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B32@0:8@16^@24
@"HDSHProfileExtension"
@"HDHealthStoreClient"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
v24@0:8Q16
@"HKSPThrottler"
@"HKSPSleepStore"
@32@0:8@16^@24
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"<HDFeatureAvailabilityExtension>"24@0:8@"NSString"16
@"HDSHAccessibilityAssertionManager"
@"HDSHWidgetSchedulingManager"
@(#)PROGRAM:SleepHealthDaemon  PROJECT:Sleep-1
SleepTracking
SleepTrackingSessionStartDate
queue
v8@?0
com.apple.HDSHPluginServer.serial
HDSHPluginServer.m
Invalid parameter not satisfying: %@
newSchedulesByWeekday[weekdayNumber] == nil
B16@?0^@8
[%@] Sleep samples saved
v20@?0B8@"NSError"12
@16@?0@"HKSample"8
widgetSchedulingManager
B16@?0@"HKSample"8
v16@?0@"HKCategorySample"8
[%{public}@] profileDidBecomeReady
[%{public}@] failed to read observing protection state key: %{public}@
[%{public}@] failed to set observing protection state key: %{public}@
[%{public}@] should be observing content protection state
[%{public}@] beginObservingContentProtectionState
[%{public}@] stopObservingContentProtectionState
[%{public}@] invalidateAccessibilityAssertion
[%{public}@] database is locking, taking assertion
[%{public}@] invalidating existing assertion
[%{public}@] failed to take assertion with error: %{public}@
[%{public}@] Updating current sleep schedules: %@
[%{public}@] Updating sleep duration goal: %@
[%{public}@] Finished replace with success: %@
[%{public}@] Cannot retrieve most recent sample for weekday, protected data unavailable: %@
[%{public}@] Old schedules: %@
[%{public}@] New schedules: %@
[%{public}@] Changed schedules: %@
[%{public}@] Error retrieving latest sleep duration goal: %{public}@
[%{public}@] Skipping saving unchanged sleep duration goal
[%{public}@] sleep tracking session started
[%{public}@] sleep tracking session stopped
[%{public}@] saving sleep tracking samples %@
[%{public}@] adding accessibility assertion to transaction context
[%{public}@] syncing health data
[%{public}@] failed to sync health data with error: %{public}@
[%{public}@] failed to save samples with error: %{public}@
[%{public}@] Replacing old samples: %@ with new samples: %@
[%{public}@] Deleting UUIDs: %@
[%{public}@] Inserting for client: %@, source: %@
[%{public}@] Success inserting: %@
[%{public}@] daemonReady
[%{public}@] first unlock occurred
[%{public}@] %ld sleep samples added
[%{public}@] in bed: %ld
[%{public}@] asleep: %ld
[%{public}@] sleep stages: %ld
[%{public}@] first party asleep: %ld
[%{public}@] Plugin loaded
HDSHSleepHealthDaemonPlugin
HDPlugin
NSObject
HDTaskServerClassProvider
HDSHAccessibilityAssertionManager
HDContentProtectionObserver
HDProfileReadyObserver
HDSHPluginServer
HDDiagnosticObject
HDSleepHealthDaemonPluginServerInterface
HDSHWidgetSchedulingManager
HDHealthDaemonReadyObserver
HDDataObserver
HDSHProfileExtension
HDProfileExtension
HDFeatureAvailabilityExtensionProvider
_client
T#,R
dealloc
T@"HDProfile",R,W,N,V_profile
hk_isDatabaseAccessibilityError
T@"HDSHWidgetSchedulingManager",R,N,V_widgetSchedulingManager
isProxy
T@"NSString",R,C,N
numberWithBool:
TQ,R
profileExtensionWithIdentifier:
_accessibilityAssertion
remoteInterface
_deleteSamples:error:
.cxx_destruct
containsObject:
T@"HDAssertion",R,N
execute
T@"HDSHAccessibilityAssertionManager",R,N,V_accessibilityAssertionManager
hk_map:
T@"NSString",R,C
nanoSyncManager
TB,N
profile
UUID
release
_accessibilityAssertionManager
remote_stopSleepTrackingSession
_insertSamplesWithClientSource:error:
_isAppleWatch
_logSleepSampleStatistics:
_populateSamplesToInsert:samplesToDelete:forSleepDurationGoal:error:
_populateSamplesToInsert:samplesToDelete:forSleepSchedules:error:
_profile
_profileExtension
_queue
_queue_takeAccessibilityAssertion
_reloadThrottler
_reloadWidgetsWithReasons:
_replaceSamples:withSamples:error:
_restoreContentProtectionObservingState
_saveSleepTrackingSamplesAfterFirstUnlock:completion:
_serializer
_sleepStore
_startObservingSleep
_stopObservingSleep
_widgetSchedulingManager
accessibilityAssertion
accessibilityAssertionManager
addAccessibilityAssertion:
addContentProtectionObserver:withQueue:
addObject:
addObjectsFromArray:
addObserver:forDataType:
arrayByAddingObject:
arrayWithObjects:count:
autorelease
bedTimeComponents
beginObservingContentProtectionState
behavior
categoryType
categoryTypeForIdentifier:
class
conformsToProtocol:
connectionInvalidated
contentProtectionManager
contentProtectionStateChanged:previousState:
count
countByEnumeratingWithState:objects:count:
createOrUpdateSourceForClient:error:
currentHandler
daemon
daemonReady:
dataManager
dataProvenanceManager
database
date
dateForKey:error:
debugDescription
deleteObjectsWithUUIDCollection:configuration:error:
description
diagnosticDescription
didAddSamplesOfTypes:anchor:
exportedInterface
extensionForHealthDaemon:
extensionForProfile:
featureAvailabilityExtensionForFeatureIdentifier:
firstObject
handleDatabaseObliteration
handleFailureInMethod:object:file:lineNumber:description:
hasEquivalentOverrideDayToSleepSchedule:
hasEquivalentTimesToSleepSchedule:
hash
hk_minus:
hk_timeZoneEncodingOptions
hksp_supportsSleepWidget
identifier
init
initWithCategory:domainName:profile:
initWithIdentifier:healthStore:options:
initWithInterval:executeBlock:
initWithProfile:
initWithUUID:configuration:client:delegate:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
integerValue
invalidate
invalidateAccessibilityAssertion
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
listenerEndpointForClient:error:
localDataProvenanceForSourceEntity:version:deviceEntity:
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
mostRecentSleepScheduleForWeekday:beforeDate:profile:encodingOptions:error:
na_each:
na_filter:
numberWithInteger:
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWhenDataProtectedByFirstUnlockIsAvailable:
performWhenDataProtectedByFirstUnlockIsAvailableOnQueue:block:
performWithTransactionContext:error:block:
pluginIdentifier
prepareForObliteration
profileDidBecomeReady:
profileType
quantity
registerDaemonReadyObserver:queue:
registerProfileReadyObserver:queue:
reloadWidgetsWithReason:
remote_saveSleepTrackingSamples:completion:
remote_startSleepTrackingSession
remote_updateCurrentSleepSchedules:sleepDurationGoal:completion:
removeContentProtectionObserver:
removeObserver:forDataType:
requiredEntitlements
respondsToSelector:
retain
retainCount
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
self
setDate:forKey:error:
setObject:forKeyedSubscript:
setShouldBeObservingContentProtectionState:
setWithArray:
sharedDiagnosticManager
shouldBeObservingContentProtectionState
shouldLoadPluginForDaemon:
sleepDurationGoalType
source
sourceManager
sourceRevision
startDate
stopObservingContentProtectionState
stringWithFormat:
superclass
syncHealthDataWithOptions:reason:accessibilityAssertion:completion:
takeAccessibilityAssertionWithOwnerIdentifier:timeout:error:
taskIdentifier
taskServerClasses
timeIntervalSinceDate:
timeIntervalSinceNow
value
wakeTimeComponents
weekdays
widgetManager
widgetSchedulingManager
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v16@0:8
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
@"NSArray"16@0:8
v32@0:8q16q24
v24@0:8@16
v24@0:8@"HDProfile"16
v20@0:8B16
@"HDAssertion"
@"NSObject<OS_dispatch_queue>"
@"HDProfile"
v40@0:8@16@24@?32
v32@0:8@16@?24
v40@0:8@"NSArray"16@"HKQuantitySample"24@?<v@?B@"NSError">32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
B32@0:8@16^@24
@"HDSHProfileExtension"
@"HDHealthStoreClient"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
v24@0:8Q16
@"HKSPThrottler"
@"HKSPSleepStore"
@32@0:8@16^@24
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"<HDFeatureAvailabilityExtension>"24@0:8@"NSString"16
@"HDSHAccessibilityAssertionManager"
@"HDSHWidgetSchedulingManager"
