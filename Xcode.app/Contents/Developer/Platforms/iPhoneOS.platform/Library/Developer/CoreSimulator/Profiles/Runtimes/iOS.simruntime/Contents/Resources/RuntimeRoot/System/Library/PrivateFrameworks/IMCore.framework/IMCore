@(#)PROGRAM:IMCore  PROJECT:IMCore-
!$'*-0369<?BEHKNQTWZ]`cfilorux{~
ffffff
v8@?0
com.apple.private.IMOrderingMetricCollector
IMOrderingMetricCollector
In dealloc and going to submit ordering metric
going to metric messages on queue %@
** Not going to metric messages because we have no metric queue
Message is out of order {guid: %@ replyTo: %@}
collecting metrics on history query on queue %@
** Not collecting metrics on history query because we have no metric queue
Got called to check if we need to persist the metric %@
Submitting out of order metric to CA %@
PERSISTED VALUES totalMessagesSeen %@ messagesSeenOutOfOrder %@ messagesSeenInOrder %@ CACHED VALUES numberOfMessagesSeen %@ numberOfMessagesPlacedOutOfOrder %@ numberOfMessagesPlacedCorrectly %@
mapReceivingIDForSpamFilter
mapSendingIDForSpamFilter
com.apple.madrid
__kIMChatDowngradeStatusChanged
__kIMChatServiceForSendingIDSQueryControllerListenerID
__kIMChatSendingServiceChangedNotification
CKChatPreviousAccountsDictionaryKey
ServiceForSending
(-refreshServiceForSending) bailing, current service isn't useful: %@, chat %@
(-refreshServiceForSending) bailing, don't downgrade named iMessage group chat: %@
@16@?0@"IMHandle"8
(-refreshServiceForSending) addresses: %@, chat: %@
(-refreshServiceForSending) bailing, current account once we got the IDS callback service isn't useful: %@
Chat is downgraded, overriding IDS: allAddressesiMessageCapable(%@), chat: %@
Forcing SMS: allAddressesiMessageCapable(%@)
Forcing MMS: allAddressesiMessageCapable(%@)
This was iMessage group, don't downgrade: %@
Targeting to iMessage because we weren't iMessage before: %@
%@ was an email, so not retargeting
my caller id was an email, so not retargeting
refresh, current service was iMessage, and a recipient/me was an email, so not retargeting
refresh, will retarget chat to SMS/MMS: %@
Nothing to do, were on the service we wanted: allAddressesiMessageCapable(%@): chat: %@
(-refreshServiceForSending) Old account: %@, new account: %@, chat: %@
v28@?0B8@"NSDictionary"12B20c24
Targeting chat from [%@] to [%@] with preference to previous account: %@
Account returned [%@] did not match the service we wanted [%@], moving to the default account
Account returned [%@] is not operational [%@], moving to the default account
Targeting chat from [%@] to [%@] with using the default account: %@
In (%s), expected to target to a useable account, but didn't have one
-[IMChat(IMChat_ServiceForSending) _targetToService:newComposition:]
Downgrade
Changing downgrade state for chat (%@) from `%@` to `%@` -- initial:%@   checkAgainInterval:%5.2f
Posting downgrade state changed notification
Scheduling timer to recalculate downgrade time in %d seconds
Downgrade state recalculate timer fired
Marking chat (%@) as downgraded because of %@ automatic downgrades, %@ manual downgrades, with %5.2f seconds until next update check.
Marking chat (%@) as upgraded because there are no active downgrade markers.
Marking chat (%@) as upgraded because it's been %5.2f seconds since downgrade, larger than threshold for %ld (%@ auto, %@ manual) consecutive downgraded messages (%5.2f)
Marking self (%@) as upgraded because it's time since downgrade is in the future (%@). This should not happen. File a radar.
User resent as SMS in response to blackhole error; Marking chat (%@) as downgraded.
Marking self (%@) as upgraded because it does not have a downgrade time specified
iMessage is not operational: %@, chat: %@
pastMaxNumberOfMMSRecipients %d, participants: %@
Contacts
isSMSFallBackEnabled %@, Network data available: %@
IMChatCalculateServiceForSending iMessage not available (%@) or no addresses, bailing
Detected spam-filtered recipient and sender combination; downgrading conversation
IMChatCalculateServiceForSending forcing MMS
Destination is invalid: %@
Destination is unknown: %@
Previous service was not imessage, saying we aren't iMessage capable
IDS didn't give us back all the results we asked about: %@
Choosing all iMessageable(%@) perRecipientAvailability:(%@): 
Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): No iMessage, no SMS, !allAddressesiMessageCapable
Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): Not all iMessageable, email recipients, no MMS
Choosing all iMessageable(%@) perRecipientAvailability:(%@) (error=%ld): Too many recipients
Choosing all iMessageable(%@) perRecipientAvailability:(%@): Last chance to choose service
B20@?0@"NSDictionary"8B16
NewCompose: Last sent message was not delivered, force ID status refresh with the server
IDS force refresh server status complete: %@
Finished evaluating based on force refresh: allAddressesiMessageCapable(%@)
v16@?0@"NSDictionary"8
Calculating cached values for addresses: %@
Finished calculating cached values: %@
Cache said we weren't imessageable, lets refresh with the server
IDS refresh server status complete: %@
Finished evaluating based on refresh: allAddressesiMessageCapable(%@)
NewCompose: Cache said we were capable of iMessage, not querying
Upgraded
Downgraded
Unknown
\$\(([^\$]|\$[^\(])*?\)
@"NSValue"16@?0@"NSTextCheckingResult"8
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
com.apple.messages.pinning
IMPinningShouldTryFetchAgainIfNullKey
onboarding
dragAndDrop
pinEditMode
contextMenu
swipeAction
conversationDelete
oneTimeSynchronousFetch
newPinningIdentifierMapping
fetchFromLocalStore
groupIDChange
migration
__kIMPinnedConversationsDidChangeNotification
IMPinningPinConfigMigrationKey-v%li-r%li
com.apple.messages.pinning-ubiquity
currentPinConfigurationVersion == %li
originalGroupID was nil for chat. Not including in chat metadata dictionary. chat: %@
identityHash was nil for chat. Not including in chat metadata dictionary. chat: %@
Received group ID change notification for chat. previousGroupID: %@, newGroupID: %@, chat: %@
Chat with previousGroupID (%@) was pinned, but that group ID changed. Replacing previous group ID with new group ID (%@) in the pinning stores. chat: %@
IMPinnedConversationsController received a groupID change notification, but the new groupID was nil! Not making changes to the pin config. previousGroupID: %@, chat: %@
pinnedConversationIdentifierSet contained the previous groupID, but the index was NSNotFound!
pinningIdentifier was nil for chat. Not including in new pinnedConversationIdentifiers. chat: %@
%s called with nil. Ignoring.
-[IMPinnedConversationsController _setPinnedConversationIdentifiers:withChatMetadata:updateReason:shouldUpdateStores:]
%s called with %ld items. Ignoring.
%s called with reason: %@, shouldUpdateStores: %@, pinnedConversationIdentifiers: %@, chatMetadata: %@
%s Setting new cached pinned conversation identifiers %@
%s Setting new cached chat metadata %@
Performing deffered pinned conversations did change notification.
Deffering pinned conversations did change notification until after initialization is completed.
%s Tried to delete a nil identifier.
-[IMPinnedConversationsController conversationsWereDeletedWithIdentifiers:]
%s Removing pinned conversations with identifers %@, resulting in pinnedConversationIdentifiers: %@ existing value: %@
Received call to %s with identifiers %@, but it resulted in no changes to the cached pinningIdentifiers. proposed: %@ existing value: %@
Match found for chat at index %lu using pinning identifier. chat: %@
Match found for chat at index %lu using merged pinning identifiers. chat: %@
Match found for chat at index %lu using participantHash to pinning identifier comparison. chat: %@
Match found for chat at index %lu using originalGroupID to pinning identifier comparison. chat: %@
Match found for chat at index %lu using originalGroupID. pinnedPinningIdentifier: %@, originalGroupID: %@, chat: %@
Match found for chat at index %lu using identityHash. pinnedPinningIdentifier: %@, identityHash: %@, chat: %@
IMPinnedConversationsController
%s Not performing migration because the local pin config is nil
-[IMPinnedConversationsController performPinConfigValidationAndMigrationIfNecessary]
Determining if pin config needs migration to version %li. %@
Pin config has nil version. This pin config is not valid. %@
Pin config has a version (%li) greater than the current version (%li). This pin config is not usable. %@
Pin config has current version (%li) and revision (%li) already . No migration necessary.
Pin config has a version (%li) less than the current version (%li) or revision (%li). Attempting migration.
The given pin config did not have chat metadata. Attempting to add some. pin config: %@
Invalid migrated pin config. pinConfigToMigrate: %@
Invalid migrated pin config. migratedPinConfig: %@
Migrated pin config wrong version. pinConfigToMigrate: %@
Migrated pin config wrong version. migratedPinConfig: %@
com.apple.messages.pinning-sync
Received IMCloudKitHooksSetEnabledReturned notification {notification %@}
New MiC enabled state is %@. [self shouldSync] == %@
Not synchronizing data stores because we could not determine which store has the more recent change.
Syncing pin config from NSUbiquitousKeyValueStore to local store %@
%s Determined that the local store already has a more up-to-date pin config. localPinConfig: %@
-[IMPinnedConversationsController synchronizeLocalDataStore]_block_invoke
v24@?0@"NSDictionary"8Q16
Blocking additional calls to %s because there are already at least %ld pending calls.
-[IMPinnedConversationsController forceSynchronizeUbiquitousStore]
Ubiquitous data store synchronization completed successfully.
Ubiquitous data store synchronization failed because the store was nil.
Ubiquitous data store synchronization failed for an unknown reason.
Received NSUbiquitousKeyValueStoreDidChangeExternallyNotification {notification: %@}
[self shouldSync] == NO. Ignoring NSUbiquitousKeyValueStoreDidChangeExternallyNotification.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] IMPinConfigurationTopLevelKey was not in NSUbiquitousKeyValueStoreChangedKeysKey. Ignoring notification.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] change reason is NSUbiquitousKeyValueStoreServerChange.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] change reason is NSUbiquitousKeyValueStoreInitialSyncChange.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] change reason is NSUbiquitousKeyValueStoreQuotaViolationChange.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] change reason is NSUbiquitousKeyValueStoreAccountChange.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] change reason is nil.
-[handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:] change reason is %@
%s Updating stores %@
-[IMPinnedConversationsController updateStoresWithPinConfiguration:]
Did not update ubiquitous store for pin config when updating the stores %@
v12@?0B8
Attempting to save new pin configuration to ubiquitous store: %@
Saving new pin configuration to ubiquitous store. Old: %@ 
Saving new pin configuration to ubiquitous store. New: %@
%s Didn't actually update ubiquitous store because we're running a unit test.
-[IMPinnedConversationsController _updateUbiquitousStoreWithPinConfiguration:completion:]_block_invoke
shouldUpdate == NO. Not saving new pin configuration to ubiquitous store: %@
Received request to save new pin configuration to local store: %@
Could not migrate the proposedConfig to the current version. Not saving new pin configuration to local store: %@
Successfully migrated pin config to current version. before: %@
Successfully migrated pin config to current version. after: %@
Attempting to save the migrated pin config to local store: %@
Saving new pin configuration to local store. Old: %@
Saving new pin configuration to local store. New: %@
%s Didn't actually update the local store because we're running a unit test.
-[IMPinnedConversationsController _updateLocalStoreWithPinConfiguration:]
shouldUpdate == NO. Not saving new pin configuration to local store: %@
Could not definitively determine if proposed version (%@, %li) is greater than or equal to the existing ubiquitous data's (%@, %li), not writing to ubiquitous store
Proposed version (%li) is less than the existing ubiquitous data's (%li), not writing earlier version to ubiquitous store
Proposed version (%li) is greater than or equal to the existing ubiquitous data's (%li), ok to write to ubiquitous store
There was no existing version in the ubiquitous store.
Returning %@ for %s
-[IMPinnedConversationsController shouldWriteProposedPinConfiguration:toUbiquitousStoreWithExistingPinConfiguration:]
%s The pin config's version was nil.
-[IMPinnedConversationsController pinConfigurationHasCompatibleVersion:]
%s The pin config's version (%li) was definitively less than or equal to the current version (%li).
%s The pin config's version (%li) was definitively greater than the current version (%li).
%s The proposed timestamp was nil.
-[IMPinnedConversationsController shouldUpdateExistingPinConfig:withProposedPinConfig:]
%s The proposed timestamp was definitively later than the existing timestamp.
%s The proposed timestamp was definitively earlier than or equivalent to the existing timestamp.
%s There was no existing timestamp.
%s ubiquitousPinConfig {%@}
-[IMPinnedConversationsController fetchMostUpToDatePinConfiguration:]_block_invoke
%s localPinConfig {%@}
Received nil when trying to fetch the pin configuration from the ubiquitous store because the NSUbiquitousKeyValueStore was nil.
Received nil when trying to fetch the pin configuration from the ubiquitous store even though the NSUbiquitousKeyValueStore is initialized and the user has already pinned something before. This is an issue in NSUbiquitousKeyValueStore. Trying again.
Received nil when trying to fetch the pin configuration from the ubiquitous store even after trying the fetch again. This is an issue in NSUbiquitousKeyValueStore.
Jabber
Bonjour
BuddyList
JabberViewer
SubNetViewer
__kIMBuddyListSortChangedNotification
__kIMCustomStatusMessagesChangedNotification
__kIMServiceDefaultsChangedNotification
__k_IMServiceDidConnectNotification
__kIMPersonNicknameKey
__kIMPersonProfileKey
__kIMPersonAllowedCapabilitiesKey
q24@?0@8@16
__kIMServiceInitialSyncPerformedNotification
__kIMServiceStatusChangedNotification
__kIMMyStatusChangedNotification
__kIMPersonStatusChangedNotification
__kIMPersonInfoChangedNotification
__kIMStatusImagesChangedAppearanceNotification
__kIMPersonServiceNameKey
__kIMPersonScreenNameKey
__kIMPersonStatusKey
__kIMPersonStatusMessageKey
__kIMPersonIdleSinceKey
__kIMPersonFirstNameKey
__kIMPersonLastNameKey
__kIMPersonEmailKey
__kIMPersonPictureDataKey
__kIMPersonAVBusyKey
__kIMPersonCapabilitiesKey
__kIMCapabilityText
__kIMCapabilityDirectIM
__kIMCapabilityFileTransfer
__kIMCapabilityFileSharing
__kIMCapabilityAudioConference
__kIMCapabilityVideoConference
IMService ******* This is unexpected. atSign > [email length]. Email %@ doman %@
com.apple.soagent
com.apple.AddressBook
@16@?0@"TUConversationMember"8
Chat
We mapped a chat %@ to a TUConversation with messagesGroupUUID %@ for chat groupID %@
While groupID matched, Messages participants (%@) did not equal TUConversation remoteMembers (%@)
While groupID matched, Messages participants (%@) count did not equal TUConversation remoteMembers (%@)
We mapped a 1x1 chat %@ to a TUConversation: %@
@"NSString"16@?0@"IMHandle"8
IMChat+TelephonyUtilities
Destination not registered for Group FaceTime: %@ (%ld)
Adding member to Group FaceTime: %@ in conversaton %@
No paired Group FaceTime conversation to keep in sync
Join TUConversation, isVideoCall: %@
[IMChat+TelephonyUtilites] We want to initiate a TUConversation withVideo %@
[IMChat+TelephonyUtilites] Bailing on initiating a call because we're no longer in the chat
[IMChat+TelephonyUtilites] Conversation has %lu recipients. Call is not allowed.
[IMChat+TelephonyUtilites] No recipients found on conversation, so not initiating a call.
com.apple.messages.IMBalloonPluginDataSourceScreenTimeAllowedStateChanged
__kIMPayloadNeedsResizing
__kIMPayloadDidLoadContent
IMBalloonPluginDataSource
Initialized %@(message guid: %@, bundle id: %@) with %tu byte payload, %tu attachments self pointer: %p
v16@?0@"NSNotification"8
IMBalloonPluginDataSource: not setting empty payload.
self:%@ set payload length %@ attachments count %@
messagePayloadDataForSending self:%@ payload length %@ attachments count %@
self %@ sendPayload %@ attachments %@
Bailing, chat wasn't iMessage
IMBalloonPluginDataSource failed to link temporary file URL %@ to %@ (error: %@)
IMBalloonPluginDataSource failed to create temporary directory at %@ (error: %@)
IMBalloonPluginDataSource failed to remove temporary file URL %@ (error: %@)
IMBalloonPluginDataSource NOT removing non-temporary file URL %@
after update messageGUID %@ messageID %@ updateFlags %@ old payload sender %@ old payload isFromMe %@ new sender %@ new isFromMe %@
pluginPayloadDidChange %@(message guid: %@, bundle id: %@) updated: %tu byte payload, %tu attachments (change flags: %tu)
Updating status message for guid: %@
%s (%@)
-[IMBalloonPluginDataSource statusStringNeedsUpdate]
No chat found for message guid: %@
Updating balloon size for guid: %@
-[IMBalloonPluginDataSource needsResize]
Marking message %@ as played for App Message
marking message as played guid: %@
Did mark message as played guid: %@
-[IMBalloonPluginDataSource markAsPlayed]
No chat found for message guid to mark as played: %@
a Handwritten Message
a Photo Message
a Digital Touch Message
1 %@ Message
Handwritten Message
IMCoreLocalizable
Summary of text seen in conversation list and notification for handwriting plugin
Photo Message
Summary of text seen in conversation list and notification for photos
Digital Touch Message
Summary of text seen in conversation list and notification for digital touch plugin
 Summary message for plugins (arg1: plugin name)
strictDecoding
strict-decoding 006 exception/error after _strictlyUnarchivedObjectOfClasses: [%@]
strict-decoding 006 exception/error after unarchivedObjectOfClasses: [%@]
IMBalloonPluginDataSource: Could not obtain value for key IMExtensionPayloadAppNameKey
IMBalloonPluginDataSource: Could not unarchive plugin payload data due to the following error:%@
IMBalloonPluginDataSource: previewSummaryForPluginPayload: exception thrown generating summary text %@
strict-decoding 020 exception/error after unarchivedObjectOfClasses: [%@]
IMBalloonPluginDataSource: Could not obtain value for key IMExtensionPayloadLocalizedDescriptionTextKey
IMBalloonPluginDataSource: Exception thrown generating summary text: %@
kIMTranscriptPluginBreadcrumbTextSenderIdentifier
kIMTranscriptPluginBreadcrumbTextReceiverIdentifier
ChatItems
Identifier was a uuid, identifierString %@, handle %@
IMBalloonPluginDataSource - exception thrown in %s - %@
+[IMBalloonPluginDataSource replaceHandleWithContactNameInString:forAccount:additionalHandles:]
IMBalloonPluginDataSource: %@ attempted to show consumed breadcrumb before the last unconsumed breadcrumb was known.
%@ refreshing most recent message guid: %@ for chat: %@ 
IMBalloonPluginDataSource: %@ no message item with GUID %@ found in chat: %@
<%@ %p> [GUID: %@; bundleID: %@; Payload length: %lu; Num. attachments: %tu]
v16@?0@"NSArray"8
com.apple.Handwriting.HandwritingProvider
v16@?0@"NSURL"8
NotificationActiveAccountChanged
ServiceDidConnect
ServiceDidReconnect
ServiceDidDisconnect
IMPersonKey
IMIDStringKey
FaceTime
iMessage
SubNet
IMServiceImpl
Accounts: %@
Recalculated best account for %@: %@
   Account %@  has not sync'd yet
Service
Service(%@): Disconnecting from agent
Status changed for account: %@             from: %d to: %d
   *** Account %@  has not sync'd yet, forcing the mark
Service: %@  set properties: %@
Alias and SIMID are nil, but iMessage enabled: %@
SIMID not found in registered good list, set iMessage enabled: %@
iMessage enabled for multiple subscriptions: %@ alias: %@ simID: %@
IDSServerBag
IDSFoundation
md-max-chat-participants
IMService[
IMPLUGIN_TEXT_KEY
IMPLUGIN_DATA_KEY
IMPLUGIN_URL_KEY
IMPLUGIN_BREADCRUMBTEXT_KEY
IMPLUGIN_STATUSTEXT_KEY
IMPLUGIN_UPDATE_KEY
IMPLUGIN_USERINFO_KEY
IMPLUGIN_MESSAGEGUID_KEY
IMPLUGIN_ASSOCIATEDMESSAGEGUID_KEY
IMPLUGIN_PLUGINSESSIONGUID_KEY
IMPLUGIN_PLUGINBUNDLEID_KEY
IMPLUGIN_ATTACHMENTS_KEY
IMPLUGIN_SHOULD_EXPIRE_KEY
IMPLUGIN_IS_STICKER_KEY
IMPLUGIN_IS_FROM_ME
IMPLUGIN_SENDER
IMPLUGIN_IS_PLAYED
IMChatRegistryHasInitializedChatFiltering
IMChatWatermarkDidUpdateNotification
IMChatWatermarkMessageID
IMChatWatermarkDate
CKChatWatermarkMessageID
CKChatWatermarkTime
q24@?0@"IMChat"8@"IMChat"16
@apple.com
.apple.com
NPSManager
NanoPreferencesSync
com.apple.MobileSMS
v32@?0@"IMChat"8Q16^B24
__kIMBalloonPluginAttributionChangedNotification
B16@?0@"NSString"8
q24@?0@"NSString"8@"NSString"16
@"NSString"16@?0@"IMBalloonPlugin"8
mobile
Library
AppAttributionRecord.plist
v24@?0@"NSArray"8@"NSArray"16
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Presence/Suggestions/IMSuggestionsService.m
-[IMSuggestionsService fetchSuggestedRealNameForDisplayName:messageUID:queue:block:]
Unexpected nil '%@' in %s at %s:%d. %@
block
ASSERTION FAILED: %@
-[IMSuggestionsService _startRequestForDisplayName:messageUID:queue:]
displayName
IMSuggestions
displayName %@ names %@
Error getting names for phone number: %@
v24@?0@"NSArray"8@"NSError"16
v24@?0^{__CFRunLoopObserver=}8Q16
v16@?0@"NSString"8
q24@?0@"SGContactMatch"8@"SGContactMatch"16
IMSuggestionsService
Fetching a suggested CNContact for displayName %@
Found suggested contact %@ with error
SGSuggestionsService
CoreSuggestions
NSObject<SGSuggestionsServiceContactsProtocol> *_IMDSuggestionsNewConnection(void)
_IMDSuggestionsNewConnection
suggestionsServiceClass
__kkOldValueKey
__kkNewValueKey
__kIMAccountNewStatusKey
__kIMAccountOldStatusKey
__kIMAccountStatusChangedNotification
__kIMAccountStatusMessageChangedNotification
__kIMAccountStatusInfoChangedNotification
__kIMAccountAuthorizationIDChangedNotification
__kIMAccountAuthorizationTokenChangedNotification
__kIMAccountAliasesChangedNotification
__kIMAccountAliasesAddedKey
__kIMAccountAliasesRemovedKey
__kIMAccountAliasValidationStatusChangedNotification
__kIMAccountAliasChangedKey
__kIMAccountAliasValidationStatusFailedReasonKey
title
button
body
action
type
__kIMAccountProfileChangedNotification
__kIMAccountProfileValidationStatusChangedNotification
__kIMAccountProfileValidationStatusFailedReasonKey
__kIMAccountActivatedNotification
__kIMAccountDeactivatedNotification
__kIMAccountLoggedInNotification
__kIMAccountLoggedOutNotification
__kIMAccountLoginStatusChangedNotification
__kIMAccountLoginStatusChangedReasonKey
__kIMAccountLoginStatusChangedErrorMessageKey
__kIMAccountRegistrationStatusChangedNotification
__kIMAccountRegistrationFailedReasonKey
__kIMAccountPropertiesAndPicturesLoadedNotification
__kIMAccountNoLongerJustLoggedInNotification
__kIMAccountGroupsChangedNotification
__kIMAccountCapabilitiesChangedNotification
__kIMAccountPrivacySettingsChangedNotification
__kIMAccountInvisibilityChangedNotification
__kIMAccountSettingsChangedNotification
__kIMAccountDisplayNameChangedNotification
__kIMAccountVettedAliasesChangedNotification
Region
Number
__kIMAccountSMSRelayPinAlertNotification
__kIMAccountSMSRelayPinDismissNotification
Account
FTNotificationQueue
FaceTimeDeviceRegistrationCapabilityChangedNotification
FTServices
FTCTRegistrationStatusChangedNotification
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
-[IMAccount _updateMyStatus:message:]
-[IMAccount setCurrentAccountStatus:]
AccountPrefs
-[IMAccount updateCapabilities:]
Registration
IMCore
Client request to set password for account: %@
Successfully updated password for account (%@:%@): %@  (Environment: %@)
v36@?0@"NSString"8@"NSString"16@"NSString"24B32
Client request to remove password for account: %@
Client request to set temporary password for account: %@
Successfully read temporary password for account (%@:%@): %@
v72@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSDictionary"56@"NSNumber"64
Successfully updated temporary password for account (%@:%@): %@
-[IMAccount setInvisible:]
IMAccount: %p [ID: %@ Service: %@ Login: %@ Active: %@ LoginStatus: %@]
-[IMAccount _loadFromDictionary:force:]
-[IMAccount setCachedAllowList:]
-[IMAccount setCachedBlockList:]
-[IMAccount setCachedBlockingMode:]
-[IMAccount setCachedBlockIdleStatus:]
IMAccount.m
%@ Unmatched endCoalescedChanges
imbalanced update: called a resume without calling a holdBuddyUpdate!
data
-[IMAccount setBuddyProperties:buddyPictures:]
-[IMAccount _updateRegistrationStatus:error:info:]
Offline
Disconnected
Disconnecting...
Connecting...
Connected
-[IMAccount _notJustLoggedIn]
-[IMAccount setIsActive:]
-[IMAccount setIMAccountLoginStatus:errorMessage:reason:]
-[IMAccount groupsChanged:error:]
%@@%@
Client request to authenticate account: %@
Updating token for account %@:%@ (Environment: %@)
FTDeviceSupport
Setting profile value: %@   forKey: %@
Requesting validation of profile info: %@
-[IMAccount _updateProfileInfo:]
inbox.appleid.apple.com
@16@?0@8
Client request to add alias: %@   account: %@
Client request to add aliases: %@   account: %@
Client request to remove alias: %@  account: %@
Client request to remove aliases: %@  account: %@
Final set of aliases after removes %@
+1234567890#* -().
Client request to validate alias: %@  account: %@
Client request to validate aliases: %@  account: %@
AccountSignedOut
 => Returning Caller ID: %@   (Set: %@   Aliases: %@)
Asked to change display name from: %@  to: %@
 Changed display name to: %@
-[IMAccount _updateDisplayName:]
Warning
 Attempted to change display name to %@, but it wasn't in vetted set (%@)
REMStore
ReminderKit
com.apple.MobileSMS.CKDNDList
com.apple.MobileSMS.CKDNDList.changed
CKDNDListKey
IMDNDList
Same unmute time, not updating
Muting chat(identifier: %@) %@
Updating unmute time to %@ for chat(identifier: %@) %@
Unmuting chat(identifier: %@) %@ (nil date was provided)
Unmuting chat(identifier: %@) %@ that wasn't muted to begin with...
Synchronized Do Not Disturb list
Updating group ID in DND list. previousGroupID: %@, newGroupID: %@, chat: %@
Chat with previousGroupID (%@) was muted, but that group ID changed. Adding new group ID (%@) to the DND list too. chat: %@
Received Do Not Disturb List Changed Notification
IMDaemonListener
Service: Received my new picture from daemon -- %d bytes
Exception: %@ in handler: %@ while executing: %@
-[IMDaemonListener _reallyProcessMyStatusChanged]
AccountUniqueID
ChatIdentifier
Properties
ChatStyle
Message
DeferType
Messages
Unknown defer type
Account: %@   Login Status Changed: %@
MobileSMS thinks networkDataAvailable: %@
pinCode
deviceName
deviceType
phoneNumber
SMSPINRelay accountToBroadcast %@
-[IMDaemonListener displayPinCodeForAccount:pinCode:deviceName:deviceType:phoneNumber:]
responseFromDevice
wasCancelled
-[IMDaemonListener pinCodeAlertCompleted:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:]
-[IMDaemonListener account:postedError:]
Allowing only services: %@
  Skipping: %@
  Allowing: %@
Denying services: %@
Service: %@   all accounts: %@   activeAccounts: %@
  Skipping: %@ (not allowed)
  Skipping: %@ (denied)
Setup complete with success %@
IMDaemonListener.Verbose
Setup starting
Setup info: %@
serviceNames
properties
persistentProperties
services
Service info: %@
internalName
serviceProperties
serviceDefaults
defaultAccountSettings
accounts
activeAccounts
accountInfo
Account info: %@
accountID
accountDefaults
status
capabilities
serviceLoginStatus
serviceLoginStatusMessage
groups
DBModificationStamp
fileTransfers-stamp
fileTransfers
Updating file transfers
Not updating file transfers
fileTransfers-groupPhoto
Updating file transfers for group photo
Not updating file transfers for group photo
Clearing file transfer center
Setup is complete (Services: %@)
Scheduling deferred setup
Performing deferred setup
chats
personMergedChats
aliasToCNIDMap
blackholedChatsExist
vcCapabilities
-[IMDaemonListener _deferredSetup:]
Requesting last messages for all chats
didFetchSyncStateStats %@
didFetchRampState %@
Attempt to disable iCloud backups resulted in error. Result: %ld, error: %@
did attempt to disable iCloud backups: %ld
did fetch cloudkit sync state debugging info: %@
IMDaemonListenerNickname
Got back pending nickname updates %@
v32@?0@"NSString"8@"NSDictionary"16^B24
Got back handled nickname updates %@
Pending nicknames or handled nicknames did change
IMDaemonListenerOTC
Got the call back for validation codes count %@
com.apple.imcore.otcUpdated
validCodes
DaemonController
Resetting posted setup complete after changing listener caps
IMDaemonListenerReceivedQOSClassWhileServicingRequestsResponseNotification
Identifier
QOSClass
IMDMessageRecordCloudKitStatisticTotalChatCountKey
IMDMessageRecordCloudKitStatisticSyncedChatCountKey
IMDMessageRecordCloudKitStatisticTotalMessageCountKey
IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
IMDMessageRecordCloudKitStatisticTotalCountKey
IMDMessageRecordCloudKitStatisticAllSyncedCountKey
%@: %@ (%ld of %ld, %ld remaining)
Sync State percent: %@, raw stats: %@, %@, %@, %@
messages
attachments
IMChatRegistry+Telephony
IMChat with exisiting UUID: %@
Active conversation UUID: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Chat/IMChat+MessageAcknowledgments.m
-[IMChat(MessageAcknowledgments) sendMessageAcknowledgment:forChatItem:withMessageSummaryInfo:withGuid:]
chatItem
[chatItem message]
content
attributedContentString
-[IMChat(MessageAcknowledgments) messageAcknowledgmentSummaryForConversationListWithMessage:]
potentialAcknowledgment
HasPromptedForMessagesInCloud
com.apple.Messages
iMessageCloudKitEvents
v24@?0@"<IMCloudKitEventHandler>"8^B16
IMCloudKitEventNotificationManager
Requesting to broadcast CloudKit syncState after fetching account status
v24@?0@8@"IMEventListener"16
v32@?0@8@"IMEventListener"16@"<IMEventListenerResponse>"24
Fetching latest ramp state
Fetched latest ramp state
Kicking initial sync again since cloudkit account repair succeeded
set messages in cloud enabled: %@
setEnabledDidReturned with response: %@
beginning periodic sync
set did prompt for cloud kit sync to %@
attempting to disable all icloud devices
tryToDisableAllDeviceReturned with response: %@
Check if additional storage is required
Did check if additional storage is required with response: %@
v24@?0@"IMCloudKitSyncStatistics"8@"NSError"16
Fetched sync state debugging info: %@
sync-statistics-from-database
sync-statistics
sync-state-user-defaults
sync-state
v24@?0@8^B16
IMCoreSimulatedEnvironmentEnabled
q24@?0@"IMItem"8@"IMItem"16
IMItemsController
Setting the sort ID from item before the last item -- lastItemIsTypingMessage %@ lastItemIsErrorCase %@ Last item %@
*** ---- Trying to fix a bad sort ID -- Printing All Items -- Please file a radar ---- ***
ItemsController
last item's sortID %@ guid %@ isTyping %@
set sortID %@ guid %@ itemIsUnsentAndFromMe %@
v32@?0@"NSString"8Q16^B24
ChatHistory
appending archived items to current items array
Cannot append to either beginning or end as there are no previous items to append to
Going to append the incoming messages to the end of the _items array
Going to append the incoming messages to the beginning of the _items array
Cannot append to either beginning or end as there is a mismatch in messageIDs
We are trimming items as our count (count: %@) is over the maxCapacity (maxCapacity: %@)
v32@?0@"IMItem"8Q16^B24
__kIMDaemonDidConnectNotification
__kIMDaemonWillConnectNotification
__kIMDaemonDidDisconnectNotification
__k_IMDaemonDidDisconnectNotification
__k_IMDaemonDidConnectNotification
__kIMDaemonConnectionLostNotification
__kIMDaemonDidWillConnectNotification
QueryWithReplySync
QueryWithReply
com.apple.IMDaemonControllerForwardingMessageKey
com.apple.IMDaemonControllerLocalLockQueue
com.apple.IMDaemonControllerQueue
com.apple.IMDaemonControllerListenerLockQueue
com.apple.IMDaemonControllerConnectionQueue
Exception returned from daemon: %@
v24@?0@"NSObject<OS_xpc_object>"8@"NSDictionary"16
IMDaemonController
  Ensuring connection to daemon (will launch: %@   has checked: %@)
  Grabbing remote daemon port (listener ID: %@)
chatContext
context
listenerID
allowedServices
deniedServices
bundleID
RemoteObjectGathering
Requesting daemon remote object
Done requesting daemon remote object
  Built object: %@
Connection to daemon established
  Failed to build remote object for listener: %@
Failed to launch and connect to daemon
v24@?0@"IMRemoteObject"8@"NSDictionary"16
-[IMDaemonController _makeConnectionWithLaunch:completionBlock:]
Flushed send queue
NOPE NOT DISCONNECTING
We're still not connected, kicking off disconnect notification
-[IMDaemonController _disconnectFromDaemonWithForce:]_block_invoke
We're still connected, hiding the disconnect!
-[IMDaemonController _disconnectFromDaemonWithForce:]
Connect to daemon with launch: %@   capabilities: %@
Connect:  Set capabilities: %@
Tried to connect to daemon but we got no remote object ... handling as if the remote object died.
Connecting: Listener set updated to: %@ old capabilities: %@ new capabilities: %@
Disconnecting: Listener set updated to: %@   capabilities: %@
Adding listener with ID: %@    capabilities: %@
Removing listener with ID: %@    capabilities: %@
Tried to remove non existent listener with ID: %@
Set capabilities: %@  for listener ID: %@
Request to block until connected
 => Not blocking, already connected
 => Not blocking, shutting down
 => Already blocking, bailing
 => Starting connect
 => No remote object, can't block
IMCoreSetup: Blocking connection
connection timeout: %f
%@ timed out connecting to imagent
************* %@, please file a radar, and attach the stackshots generated ***********************
Done blocking  (Success: %@)
 => Reading listener: %@    capabilities: %@
v32@?0@8@16^B24
Not updating caps, these were already pushed down: %@
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by main thread
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by main thread
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground (was suspended: %@)
System application did resume (was suspended: %@)
IMCoreAutomationHookErrorDomain
chat_guid
group_id
name
members
IMCoreAutomationHookParameterError
IMCoreAutomationHookParameterErrorLocation
%@ (%@)
Condition failed : '%s'
[handles count] == 0
%s:%d
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Automation Hooks/IMCoreAutomationHook.m
CoreAutomation
(chat) == nil
[handleStrings count] == 0
[handleStrings count] != [outArray count]
%s:%ld
IMCoreAutomationHookErrorCodeDomainTimeOut
IMCoreAutomationHookErrorCodeInvalidParameters
IMCoreAutomationHookErrorCodeGroupCreationFailure
IMCoreAutomationHookErrorCodeChatNotFound
IMCoreAutomationHookErrorCodeConditionFailed
__k_IMAccountControllerUpdatedNotification
__kIMAccountControllerUpdatedNotification
__kIMAccountControllerAccountAddedNotification
__kIMAccountControllerAccountWillBeRemovedNotification
__kIMAccountControllerAccountRemovedNotification
__kIMAccountControllerOperationalAccountsChangedNotification
IMAccountController
Service is nil, connected accounts are %@
Caches were enabled, cached connected accounts are %@
Connected accounts are %@
CallerID
Adding account: %@
-[IMAccountController addAccount:locally:]
Client request to delete account: %@
Someone tried to delete an account that can't be deactivated, you can't do this (%@)
Someone tried to delete a phone account, you can't do this
Deleting account: %@  (Locally: %@)
-[IMAccountController deleteAccount:locally:]
Deactivating accounts: %@
Client request to deactivate account: %@
Client request to deactivate accounts: %@
Accounts could not be activated: %@
Activating accounts: %@
Parental controls disabled account: %@   not allowed to activate
IMaccountController
Not activating account since we already have active accounts of this type for account: %@
Rebuilding operational accounts, old: (%@)  new: (%@)
 ** Posting operational accounts changed
Alias %@  matched phone based account: %@, selecting it
Alias %@  matched account: %@, selecting it
Returning selected best account: %@
Couldn't find any account for service: %@, login: %@, guid: %@, accounts: %@
IMHandle+Utilities: equivalentToRecipients - self or recipient array has duplicate values! self: %@; recipients: %@
__kIMNicknameDidChangeNotification
__kIMPersonalNicknameDidChangeNotification
__kIMNicknameOnboardingDidFinishNotification
__kIMNicknameControllerDidLoadNotification
Nicknames
Nickname feature is disabled, not loading IMNicknameController
CNContactStoreMeContactDidChangeNotification
IMNicknameController
Got IMNicknamePreferencesDidChangeNotification so syncing preferences
Nickname feature not enabled, returning nil nickname for handle %@
Nickname feature not enabled, no update for handle %@
Not displaying nickname update banner for unknown contact with previously handled nickname: %@
Last handled nickname: %@
Pending nickname update %@ does not match previously handled nickname for contact %@
Existing contact does not have an image, not suppressing photo update banner. Contact: %@ pendingUpdate: %@
Could not determine md5 hash of existing image data, not suppressing photo update banner. Contact: %@ pendingUpdate: %@
Could not determine md5 hash of suggested update image data, not suppressing photo update banner. Contact: %@ pendingUpdate: %@
Photo update has a distinct md5 hash from the existing contact photo, not suppressing photo update banner. Contact: %@ pendingUpdate: %@
Photo update has a the same md5 hash as the existing contact photo, suppressing photo update banner. Contact: %@ pendingUpdate: %@
IMNicknameController: Suppressing nickname banner, neither the name or image has changed
Clearing pending nickname update for handle IDs %@
Ignoring pending nickname update for handle IDs %@
Nickname feature disabled, not setting personal nickname
We can't update the personal nickname {accountsMatch: %@ multiplePhoneNumbers: %@}
Setting new personal nickname and notifying daemon %@
Nickname feature disabled, not fetching personal nickname
We can't fetch the personal nickname {accountsMatch: %@ multiplePhoneNumbers: %@}
Nickname feature disabled, not updating personal nickname
Received personal nickname from daemon: %@
CKChatController
Handle ID %@ contact %@ allow listed %@ deny listed %@
com.apple.CKNickname
CKNicknameDoNotHandle
Nickname feature disabled, not updating nickname store
Updating nickname store!
Nickname store updated, got %lu pending, %lu handled nicknames
handleIDs
Daemon notified nickname store did change
Nickname feature is disabled, don't set personal nickname after onboarding
We can't set the personal nickname after onboarding {accountsMatch: %@ multiplePhoneNumbers: %@}
Nickname photo forked in onboarding: %@
Onboarding result has imageData: %@
Setting personal nickname after onboarding to %@
Nickname feature is disabled, don't update personal nickname with me card sharing result
We can't update the personal nickname if necessary {accountsMatch: %@ multiplePhoneNumbers: %@}
Nickname name now forked
Nickname photo now forked: %@
imageUpdated = %@, imageDeleted = %@, shouldCrop = %@
Updating personal nickname from %@ to %@
Me card did change notification
Not updating personal nickname with me card, me card syncing disabled via defaults
Updating personal nickname with me card if necessary
We can't update the personal nickname via me card change {accountsMatch: %@ multiplePhoneNumbers: %@}
Updating personal nickname with me card name: %@
Name forked from me card: %@ OR currentNickname name %@ == me card nickname %@
Updating personal nickname with me card image %@
Image forked from me card, not comparing against me card update
Updating personal nickname with me card info to %@
v16@?0@"IMNickname"8
ChatCache-LoadWithGUID
ChatCache-LoadWithIdentifier
ChatCache-LoadWithGroupID
ChatCache-LoadWithHandlesDisplayNameGroupID
AsyncChatLoad-OlderThan
ChatRegistry
Found a chat using PersonID: %@ 
No chat found
Created chat: %@ lastaddressed handle %@ last addressed simID %@
Found created chat: %@
registering outgoing chat: %@
Joining chat: %@
Redirecting chat %@ to handle: %@
Created chat: %@ , lastAddressedHandle %@
Registering outgoing chat: %@
Found existing chat: %@
@"IMChat"8@?0
Cache miss looking up chat with groupID: %@ displayName: %@ joinedChatsOnly: %@ allowAlternativeService: %@ handles: %@
Cache miss looking up chat with identifier: %@ 
v32@?0@8Q16^B24
%K = %@
%K = %@ OR %K = %@
allowAlternativeService is YES, attempting to find better handles for addresses: %@
IMHandle bestHandlesForCNContacts returned nil for %@
best handles: %@
Failed to find best address for contact %@
v32@?0@"NSDictionary"8@"IMAccount"16@"IMChat"24
v28@?0B8@"NSError"12@"NSDictionary"20
Chat cache now has chats, but query didn't explictly populate it, cache: %@ query: %@
Chat cache does not have results returned from daemon in cache miss query, cache: %@ query: %@
@"NSArray"8@?0
Sent nil block to %s
-[IMChatRegistry(Queries_Internal) _performChatCacheLookupWithBlock:cacheMissQueryKey:queryBlock:]
Attempting a nested chat cache lookup, returning early with %llu cache results only
Chat cache miss for key %@
Chat cache miss complete with key: %@ results %@
Cache miss lookup failed with error: %@
 ==> lookup with accountUniqueID failed, looking up with service
Attempting to look up chat using PersonID: %@
B48@?0@"NSString"8^@16^@24^B32^B40
B56@?0@"NSString"8^@16^@24^B32^B40^@48
IMTypingTimer
Timer callback was called for valid typing timeout with handle %@
Triggering typing timeout for handle %@
IMCloudKitSyncStateUnknown
IMCloudKitSyncStateUnavailable
IMCloudKitSyncStateDisabled
IMCloudKitSyncStateIdle
IMCloudKitSyncStateSyncing
IMCloudKitSyncStatePaused
CloudKit sync state: %@, account is enabled: %@, isDisablingEnabledState: %@, isDisablingDevices: %@, is in exit state: %@, exit date: %@, last sync date: %@, account status: %@, controller sync state: %@, controller sync type: %@, controller sync record %@, errors: %@
__kIMManagedPreferencesChangedNotification
SkipFirstTimeUser
ParentalControls
%@ Disabled: %@
__kIMFileTransferRefreshAllNotification
__kIMFileTransferCreatedNotification
__kIMFileTransferUpdatedNotification
__kIMFileTransferRemovedNotification
__kIMFileTransferFinishedNotification
IMTransferCenterErrorDomain
sPreauthorizedTransferDictionaryOtherPersonKey
sPreauthorizedTransferDictionaryAccountKey
sPreauthorizedTransferDictionaryFilenameKey
sPreauthorizedTransferDictionarySaveToPathKey
IMFileTransferCenter
_addTransfer: %@
Failed to issue sandbox extension for path %@, errno %d
Adding transfer guid: %@ to message: %@
Not assigning transfer guid: %@   transfer doesn't exist
Not assigning transfer guid: %@ to handle: %@  transfer doesn't exist
Could not register transfer with daemon %@
IMFileTransferCenter_Automation
We tried to accept a file transfer whose transfer state was greater than the accepted state or we got back a nil transfer -- transfer: %@ transfer state: %@
stopping transfer to guid %@
createdDate
filename
Posting transfer created: %@  transferName: %@
IMFileTransferFilenameKey
Nothing changed for create, not posting for: %@
IMFileTransferCenter: number of new file transfers %@ does not match number of local urls %@.
Overriding changed for CMM transfer %@
Posting transfer: %@  change: %@
Nothing changed for update, not posting for: %@
High quality download for transfer %@ succeeded at path %@
v32@?0@?<v@?B@"NSString">8Q16^B24
High quality download for transfer %@ failed
Download for transfer %@ succeeded at path %@
v32@?0@?<v@?B@"NSString"@"NSString"@"NSString"@"NSError">8Q16^B24
Download for transfer %@ failed
Setting Aux image to %@ for transfer %@
Setting Aux video to %@ for transfer %@
MessageService Failed writing attachment to disk on incoming: %@
fetchHighQualityVariantForTransfer:completion: was given no transfer
fetchHighQualityVariantForTransfer:completion: was given no transfer guid
v32@?0@"NSString"8@"NSMutableArray"16^B24
File transfer local file URL retrieval operation was unsuccessful.
The daemon disconnected.
IMTransferCenter
IMTransferCenter is asked for prewarm
%s was given no transfer guid
-[IMFileTransferCenter retrieveLocalFileURLForFileTransferWithGUID:options:completion:]
File transfer local file url retrieval operation was unsuccessful.
The given GUID was empty.
%@-IMFileTransferCenter
Failed to connect to imagent while trying to add listenerID %@
Failed to update capabilities for listenerID %@
[IMMomentShare] Failed to fetch moment share for URL: %@, error: %@
v24@?0@"PHMomentShare"8@"NSError"16
PHMomentShare
Class getPHMomentShareClass(void)_block_invoke
IMMomentSharePresentationCache.m
Unable to find class %s
void *PhotosLibrary(void)
/System/Library/Frameworks/Photos.framework/Photos
/System/Library/Frameworks/Photos.framework/Contents/MacOS/Photos
PXPhotoKitMomentShareStatus
Class getPXPhotoKitMomentShareStatusClass(void)_block_invoke
void *PhotosUICoreLibrary(void)
/System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
/System/Library/PrivateFrameworks/PhotosUICore.framework/Contents/MacOS/PhotosUICore
PXMomentShareStatusPresentation
Class getPXMomentShareStatusPresentationClass(void)_block_invoke
m-reply-enabled
Chat with guid:%@ is not business conversation. Return NO
Handle:%@ is verified businesss
Chat ID: %@ has verified business:%@
Close Session for Business Chat: %@
IMChatContext.m
Invalid parameter not satisfying: %@
[cls isSubclassOfClass:[IMChatContext class]]
<%@, serviceType: %lu, filterCategory: %tu, spam: %@, sendersUnknown: %@, responded: %@>
send highlight
SyndicationActions
com.apple.pkpass
[%@ text:%@, visibleAssociatedMessageChatItems: %@, messagePartRange: %@]
%@:%@
icloud
appsto
richLink-whitelist
Server bag does not have allowlisted urls. Resorting to defaults
Checking URL %@ with domains %@
URL is allowlisted %@
ChatItems: Invalid URL %@
urn:biz:
prefs
split
CMM has %lu transfers, ignoring %lu
Not displaying link, chat is filtered
Not displaying link, sender is unknown
TranscriptItems
CORRUPT_MESSAGE_FALLBACK_TEXT
Tap to show message
Using Dynamic body for CMM %@, state %lu: %@
Using normal body for %@
v24@?0@"NSValue"8^B16
Couldn't associate fileTransfer with guid: %@ for message: %@
v40@?0@"NSURL"8{_NSRange=QQ}16^B32
http
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
@"IMAggregateAttachmentMessagePartChatItem"16@?0@"NSMutableArray"8
v32@?0@"IMMessagePartChatItem"8Q16^B24
UTTypeConformsTo
MobileCoreServices
kUTTypeImage
Message with parts deleted: %@ from message: %@
Deleting attachment %@ for part
@"IMMessageItem"36@?0@"IMMessageItem"8@"NSAttributedString"16B24@"NSArray"28
p:%ld/%@
AFPreferences
AssistantServices
r:%lu:%lu:%lu:%@
[[%@] subject: %@]
[{%@] type:%@ payload
bps:
$(%@) sent %@ message
Default Breadcrumb status format string, arg1=Sender's name, arg2=Application's Display name
Warning, missing %@ to add to %s
additionalIDToHandleNameMap
[[%@] transferGUID: %@]
.gif
.apng
[[%@] transferGUIDs: %@]
[[%@] subparts: %@]
t:%d/%d
[[%@] statusType: %d expireStatusType: %d]
Error %ld
pas:
[[%@] numberOfPhotos: %tu, numberOfVideos: %tu, numberOfSavedAssets: %tu]
mss:
[[%@] activityTitle: "%@", expirationDate: "%@"]
IMTranscriptChatItems
Creating new IMTranscriptChatItem with GUID %@ from IMTUConversationItem %@
v32@?0@"IMTranscriptChatItem"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Chat/IMTranscriptChatItems.m
-[IMAggregateAcknowledgmentChatItem _initWithAcknowledgments:]
Unexpected false '%@' in %s at %s:%d. %@
acknowledgments.count > 0
acknowledgments array must be nonempty
[self.associatedMessageGUID isEqualToString:acknowledgment.associatedMessageGUID]
all acknowledgments must have the same associated message
est:
IMAVChatInfo
IMAVChatParticipants
IMAVChatIsInitiator
IMAVChatHasAudio
IMAVChatHasVideo
IMAVChatChannelID
IMAVChatVideoStill
IMAVChatVideoStillData
IMAVChatResponseID
IMAVChatResultCode
IMAVChatResultException
UseAlternateStatusIndicators
__kIMDisplayStatusTextNotification
NSStatusAvailable
NSStatusIdle
NSStatusAway
NSStatusOffline
NSStatusUnknown
Flat
OnlineStatuses
plist
StatusList
ImageName
_flat
tiff
%@.%@
Unsupported init
[IMBalloonPlugin init] is not supported
CKBrowserGroup
CKBrowserShowInBrowser
CKBrowserDisplayImageName
kCKBrowserDisplayImagePath
%@, %@
Context identifier is nil, can't load balloonController from cache
Context identifier is nil!
IMBalloonPluginManager
balloonControllerForChatItem message guid: %@, dataSource: %p, chat item guid: %@
IMBalloonPluginManager - bubbleClass does not conform to IMBalloonPluginController protocol; message guid: %@, dataSource: %p, chat item guid: %@
Attempt to display the business extension in a non-business context, recipients: %@
We did not find a datasource for messageGUID: %@
IMBalloonPluginEnabledStateChangedNotification
__kIMBalloonPluginManagerInstalledAppsChangedNotification
__kIMBalloonPluginIconsUpdatedNotification
PluginMetaDataCachePath
com.apple.ExtensionTester.NullMessagesAppExtension
com.apple.hellbender.messagesextension
com.apple.PPTPong.MessagesExtension
com.apple.PPTTimeLabel.MessagesExtension
MSMessageExtensionBalloonPlugin.bundle
Failed to load previously blocklisted extension for identifier %@
/Library
PluginMetaDataCache
Error = %@ while trying to get contents of folder
Error = %@ while trying to copy file to new folder
com.apple.MobileSMS.AppMetadataFolderDeleted
clearing in memory salt cache due to dispatch notification
v20@?0i8Q12
Un-allowlisted client tried to use IMBalloonPluginManager: %@
Reading plugin metadata from disk for ID %@
No metadataForPluginIdentifer %@
IMBalloonPluginManager invalid args to _storeMetadata %@ identifier %@
IMBalloonPluginManager could not delete file at path %@ error %@
IMBalloonPluginManager could not write metadata %@ to file %@ idenitifier %@
Failed making file class C: %@ with error %@
IMBalloonPluginManager %s appID = nil
-[IMBalloonPluginManager localParticipantIdentifierForAppID:conversationID:]
localID
Generating local ID for app %@
localID %@ for appID %@
IMBalloonPluginManager %s appID: %@ recipient: %@ 
-[IMBalloonPluginManager recipientIDForRecipient:appID:]
Generating recipientID ID for app %@
recipient %@ for appID %@
-[IMBalloonPluginManager conversationID:appID:]
Generating randomConversationID ID for app %@
randomConversationID %@ for appID %@
v32@?0@"NSString"8@"IMBalloonPlugin"16^B24
IMBalloonPluginManager could not read contents of dir %@ error %@
_deleteMetaDataForPlugins %@
Could not delete plugin meta data at path %@ %@
clearing in memory salt cache
Plugin already loaded: %@
IMBalloonPluginManager asked to load an extension that is not an iMessage app. Identifier: %@ extensionPointIdentifier: %@
IMBalloonPluginManager failed to find extension with extension identifier: %@
beginMatchingExtensionsWithAttributes_%@
IMBalloonPluginManager encountered error discovering extensions (%@): %@
Matching extensions (%@): %lu
loadAppExtensionForProxies_%@
3rd party app discovery time: %@
@"NSBundle"16@?0@"NSURL"8
.bundle
Setting plugins to remove with delay: %@
Skipping bundle with missing identifier at path:%@
v32@?0@"NSBundle"8Q16^B24
Clearing extensions to remove after delay
app extension loading time: %@
v24@?0@"NSExtension"8^B16
Posting notification IMBalloonPluginManagerInstalledAppsChangedNotification
Precached balloon app extension for %@
Not precached balloon app extension for %@, identifier was blocked
createPlugin
No precached plugin for %@, creating a new instance
Using precached plugin for %@
Explicitly removing plugin with bundleID: %@
Attempting to explicitly remove a plugin with a nil bundleID
Removing plugins with identifiers after delay: %@
Removing plugin: %@
v24@?0@"NSString"8^B16
AllowAllBalloonPlugins
loadPlugins
Found plugin: %@
Failed to get bundle identifier for %@
Find Plugin time: %@
Loading all internal plugins
B24@?0@"NSURL"8@"NSError"16
Couldn't enumerate %@: %@
loadAllDataSources
/AppleInternal/Library/Bundles/Messages/iMessageBalloons/
Finished loading all data sources: %@
IMBalloonPluginManager. Did not find any plugin for id %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Extensibility/IMBalloonPluginManager.m
-[IMBalloonPluginManager dataSourceForPluginPayload:]
pluginPayload.pluginBundleID != nil
LSPlugInKitProxy
__kIMHandlePropertiesChangedNotification
__kIMHandleExtraPropertiesChangedNotification
__kIMHandleIsMobileChangedNotification
__kIMHandleIsBotChangedNotification
__kIMHandleFeedUpdatedDateChangedNotification
__kIMBuddyPropertiesChangedDoneNotification
__kABIMHandlesChangedNotification
__kIMAffectedIMHandlesKey
__kIMHandleAuthorizationRequestNotification
__kIMHandleIdlePulseNotification
__kIMHandleStatusChangedNotification
__kIMHandleCapabilitiesChangedNotification
__kIMHandleInfoChangedNotification
__kIMHandlePictureChangedNotification
__kIMHandleIsBuddyStatusChangedNotification
__kIMHandleGroupsChangedNotification
__kIMHandleSortOrderChangedNotification
__kIMHandleCustomBackgroundColorChangedNotification
__kIMHandleCustomFontColorChangedNotification
__kIMHandleCapabilitiesUserInfoOldCapsKey
__kIMHandlesForABPersonChangedNotification
IMServiceImpl: Unknown IMPersonStatus %d
IMServiceImpl: Unknown FZPersonStatus %d
ServiceName
AnonymousKey
ServiceLoginID
AccountID
_LOCALIZABLE_
StatusName
IMCoreSetup: IMHandle init
Dealloc ID: %@    Account: %@
IMHandle
%@ is posting %@
-[IMHandle _postNotification:]
%@ %@
IMHandler
Using suggested name %@
Buddy Name
Name of sample buddy in message preferences
Maybe: %@
Updating unformatted ID from %@ to %@ (%@)
%@%@%@
Not authorized
Buddy status: no pending subscription to presence
Waiting for authorization
Buddy status: subscription to presence waiting for approval
 (You are offline)
Explanation when a buddy's status is unknown
IDStatus
Posting ID status change for: %@   from %d to %d
Logged out %@
Logged out ago format string (arg1:date format)
Logged out %@ minutes ago
Logged out ago format string for many minutes(arg1:minutes)
Logged out 1 minute ago
Logged out ago format string for 1 minute
Logged out under a minute ago
Logged out 1 hour %@ minutes ago
Logged out ago format string for 1 hour and many minutes (arg1:minutes)
Logged out 1 hour 1 minute ago
Logged out ago format string for 1 hour and 1 minute
Logged out %@ hours 1 minute ago
Logged out ago format string for many hours and 1 minute (arg1:hours)
Logged out %@ hours %@ minutes ago
Logged out ago format string for many hours and many minutes (arg1:hours, arg2:minutes)
%@ (Since %@)
Idle status format string (arg1:status name (Idle), arg2:date format)
%@ (%@ min)
Idle status format string (arg1:status name (Idle), arg2:minutes idle)
%@ (%@ h)
Idle status format string (arg1:status name (Idle), arg2:hours idle)
%@ (%@ h %@ min)
Idle status format string (arg1:status name (Idle), arg2:hours idle, arg3:minutes idle)
Away
Default auto-away message if user stays idle too long
v16@?0@"NSError"8
Not sharing availability with non contact
Requesting to share personal availability with handle: %@ fromHandle: %@
Completed request to share availbaility with handle %@ from handle %@. didAttemptInvitation: %ld wasAlreadyInvited: %ld canShareHandle: %ld didShareHandle: %ld
v32@?0B8B12B16B20@"NSError"24
%@ capabilities changed: %@
<None>
> (CNContact: 
<No CNStore Match>
) (Account: 
Fetching business info for business with messageUID: %@
Error getting brand for business with messageUID: %@
Successfully fetched business info for business with messageUID: %@
v24@?0@"IMBrand"8@"NSError"16
Error getting square logo data for business with messageUID: %@
Successfully fetched square logo image data for business with messageUID: %@
v24@?0@"NSData"8@"NSError"16
Error getting wide logo image data for business with messageUID: %@
Successfully fetched wide logo image data for business with messageUID: %@
IMHandle.m
%@ unmatched notification queue release
com.apple.Messages.IMDaemonQueryErrorDomain
%s: No execute block for query!
-[IMDaemonQueryController performQueryWithKey:expectsSynchronousResult:block:completionHandler:]
anonymous
%@-%@
IMDaemonQueryController
Initiating query: %@ expectsSynchronousResult: %@ hasCompletionHandler: %@
Attempted to complete query %@, but query not in query controller!
 ==> completed query (took %f seconds): %@ success: %@ error: %@
 ==> invoking query completion block: %@
Daemon disconnected, failing all queries
v32@?0@"NSString"8@"IMDaemonQuery"16^B24
Outstanding queries: %@
__kIMHandleRegistrarAddressBookChangedNotification
HandleRegistrar
Handling drop everything ContactStore change history event
Received a DeleteContactChangeHistoryEvent
No action to take in _handleAddContactChangeHistoryEvent
No handles with CNID %@ found, no action to take.
Received a AddContactChangeHistoryEvent
Received a UpdateContactChangeHistoryEvent
Cannot process Contact change history event!. No handles or invalid CNContact recevied.
Updating handles with IDs %@ with a new Contact
_addressBookChanged
Handle Registry
Clearing the CNIDToHandlesMap
IMHandleRegistrar
Not adding %@ to IDToHandlesMap
Not removing %@ from IDToHandlesMap
%@%@
Re-attempting to lookup cache with ID & ITU: %@
IMHandleDebug
All handles: %@
All handles for account: %@
     %@
    Hurray, no handles!
Not allowing IMPhotoLibraryPersistenceManager to be created.
com.apple.messages.IMPhotoLibraryPersistenceManager
com.apple.messages.IMPhotoLibraryPersistenceManagerInternalQueue
Invalidating cache
%s Identifier needs save state fetch %@
-[IMPhotoLibraryPersistenceManager cachedCountOfSyndicationIdentifiersSavedToSystemPhotoLibrary:shouldFetchAndNotifyAsNeeded:didStartFetch:]
Fetching identifiers that weren't cached %@
Finished fetching identifiers that weren't cached. Notifying listeners. identifiersNeedingFetch: %@
v16@?0Q8
-[IMPhotoLibraryPersistenceManager fetchCountOfSyndicationIdentifiersSavedToSystemPhotoLibrary:completion:]
IMPhotoLibraryPersistenceManager
Registering as photo library persistence change listener %@
Not unregistering listener because it's already not listening %@
Unregistering as photo library persistence change listener %@
Registering IMPhotoLibraryPersistenceManager as a sharedPhotoLibrary change observer
Received photoLibraryDidChange: notification
Broadcasting changes to %lu listeners
PHAsset
Class getPHAssetClass(void)_block_invoke
IMPhotoLibraryPersistenceManager.m
PHPhotoLibrary
Class getPHPhotoLibraryClass(void)_block_invoke
Client request to send current location for chat %@
 => we are already sending a current location for this chat, ignoring (%@)
Authorized to send out location.
Update current location complete with error: %@
v24@?0@"CLLocation"8@"NSError"16
CKStoragePlugin
No cached chats are loaded -- client has likely not received setup. Skipping largest conversation load.
Found dbLargestConversations: %@
guid
size
Did not find chat for guid: %@
v32@?0@"NSDictionary"8Q16^B24
q24@?0@"NSNumber"8@"NSNumber"16
com.apple.facetime.screensharing
MultiwayOverrideActiveParticipants
%lu People Active
IMSharedUtilities
PhotoLibraryPersistenceChange
__kIMPeopleAddedNotification
__kIMPeopleRemovedNotification
__kIMPeopleChangedNotification
__kIMPeopleChangedUserInfoKey
IMPeople.m
Unbalanced calls to beginCoalescedChanges and endCoalescedChanges
com.apple.messages.effect.CKHappyBirthdayEffect
com.apple.messages.effect.CKConfettiEffect
com.apple.messages.effect.CKLasersEffect
com.apple.messages.effect.CKFireworksEffect
com.apple.messages.effect.CKShootingStarEffect
com.apple.messages.effect.CKSparklesEffect
com.apple.messages.effect.CKHeartEffect
com.apple.messages.effect.CKEchoEffect
com.apple.messages.effect.CKSpotlightEffect
com.apple.MobileSMS.expressivesend.impact
com.apple.MobileSMS.expressivesend.loud
com.apple.MobileSMS.expressivesend.gentle
com.apple.MobileSMS.expressivesend.invisibleink
com.apple.messages.effect
com.apple.MobileSMS.expressivesend
Balloons
name of Balloons effect
Confetti
string for Confetti
Lasers
string for Lasers
Fireworks
string for Fireworks
string for Shooting Star
Celebration
string for celebration
Sent With Love
string for sent with love
Echo
string for echo
Spotlight
string for spotlight
Slam Effect
string for Slam Effect
Loud Effect
string for Loud Effect
Gentle Effect
string for Gentle Effect
Invisible Ink
string for Invisible Ink
Replay Balloons
Replay string for Balloons
Replay Confetti
Replay string for Confetti
Replay Lasers
Replay string for Lasers
Replay Fireworks
Replay string for Fireworks
Replay Shooting Star
Replay string for Shooting Star
Replay Celebration
Replay string for celebration
Replay Sent With Love
Replay string for sent with love
Replay Echo
Replay string for for Echo
Replay Spotlight
Replay string for Spotlight
Replay Slam Effect
Replay string for Slam Effect
Replay Loud Effect
Replay string for Loud Effect
Replay Gentle Effect
Replay string for Gentle Effect
SEND WITH BALLOONS
name of SEND WITH BALLOONS FSM in effect picker
SEND WITH CONFETTI
name of SEND WITH CONFETTI FSM in effect picker
SEND WITH LASERS
name of SEND WITH LASERS FSM in effect picker
SEND WITH FIREWORKS
name of SEND WITH FIREWORKS FSM in effect picker
SEND WITH SHOOTING STAR
name of SEND WITH SHOOTING STAR FSM in effect picker
SEND WITH CELEBRATION
name of SEND WITH CELEBRATION FSM in effect picker
SEND WITH LOVE
name of SEND WITH LOVE FSM in effect picker
SEND WITH ECHO
name of SEND WITH ECHO FSM in effect picker
SEND WITH SPOTLIGHT
name of SEND WITH SPOTLIGHT FSM in effect picker
SLAM
name of SLAM impact effect in effect picker
LOUD
name of LOUD impact effect in effect picker
GENTLE
name of GENTLE impact effect in effect picker
INVISIBLE INK
name of INVISIBLE INK impact effect in effect picker
%@: percent complete = %@ (%.0f of %.0f, %.0f remaining), progress label = '%@', user message = '%@', action label = '%@', hidden: %@, state = %@, 
SYNC_PROGRESS_SYNCING_ITEMS
SYNC_PROGRESS_UPLOADING_ITEMS
SYNC_PROGRESS_DOWNLOADING_ITEMS
SYNC_PROGRESS_PAUSED
Syncing with iCloud Paused
SYNC_PROGRESS_CONNECT_TO_WIFI
Plug in your device and connect to Wi-Fi
SYNC_PROGRESS_CONNECT_TO_WLAN
Plug in your device and connect to wlan
SYNC_PROGRESS_SYNC_DISABLED_LABEL_TEXT
Messages in iCloud is currently disabled
SYNC_PROGRESS_REPAIR_ACCOUNT_BUTTON_TITLE
Repair Account
SYNC_PROGRESS_DEVICE_STORAGE_FULL
Device storage is full.
SYNC_PROGRESS_MANAGE_STORAGE
SYNC_PROGRESS_ICLOUD_STORAGE_FULL
iCloud storage is full.
HIDDEN PROGRESS
__kIMMeChangedNotification
__kIMMeStatusChangedNotification
__kIMMeNowPlayingInfoChangedNotification
__kIMMePictureChangedNotification
<%@> (CNContact: %@)
+15555648583
+18885551212
john-appleseed@mac.com
kate-bell@mac.com
+18885551213
+18885551214
+15557654321
accountdID
chatIdentifier
style
ID: %@ key: %@ startDate: %@ completionHandler: %@
OrderingTools
---Tried to trace guids on a non internal install!!!!!-----
ordering_output_%@_%lu.json
JSON File for chatGUID %@ can be found at this path: %@
Print change items for chat %@ at time %@ current item count %@
ItemsChangedEvent-%f
Exception creating json dictionary %@
Appending event key %@ with items JSON Array %@
Exception writing to json file %@
Print change in items %@
We didn't find a json file to persist for path %@
messageGUID
messageDictionary
sortID
date
replyToGUID
messageText
transferGUIDS
v24@?0@"IMItem"8^B16
com.apple.ft.CallerID.changed
arg%d
methodName
No method name was passed in
error
IMAutomation
clearAttachmentsUploadedToCloudkit
deleteAttachmentWithMessageGUID
arg1
arg2
dictionaryFromGUID
fileSizeForMessageGUID
loadHighResolutionFileForMessageGUID
startConversationFrom
uploadAttachmentToCloudkitWithMessageGUID
Could not find method %@
Automation
IMCoreAutomationPerformOperationWithDictionary method call already on main queue
IMCoreAutomationPerformOperationWithDictionary method call not on main queue, calling dispatch_sync
Did not pass in a valid set of arguments
No usable iMessageAccounts found
P:%@
Did not pass in valid alias
Failed to validate alias | 
Failed to add alias to alias array | 
Cannot set apple id caller id if this alias is not in alias list
Failed to validate callerID | 
Preferred account was not set to specified login account
Failed to change display name | 
receivingAliases
receivingVettedAliases
sendingDisplayName
sendingLogin
%@/%@
@"IMTranscriptChatItem"16@?0@"IMTranscriptChatItem"8
IMDChatRecordCopyAllChats
IMDPersistence
IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServices
_IMDAttachmentRecordBulkCopy
Failing to invite participants that would put us over our max size of: %d
Created chat: %@
Account pushed room name to: %@
Registering chat: %@
ChatLoading
Request to load chat with identifier %@
No exisiting chat. Calling out to daemon to load chat %@
_chatsBeingLoadedMap
ChatLoading failed to load chat in time for chat identifier %@
We already have a blocking load request out, bailing: %@
Blocking to wait for query completions: %@
Done blocking waiting for completions (Remaining: %@)
****** Failed to complete all history queries in a blocking request: %@ setup Complete %@
Request to block to wait for query completions: %@
  => Blocking now
  => Deferring it
Test got syncState progress: %@
Starting test
__kIMChatComposeTyping
__kIMChatComposeRecording
__kIMChatPropertiesChangedNotification
__kIMChatDisplayNameChangedNotification
__kIMChatGroupPhotoChangedNotification
__kIMChatLastAddressedHandleChangedNotification
__kIMChatIsFilteredChangedNotification
__kIMChatOverallChatStatusDidChangeNotification
__kIMChatJoinStateDidChangeNotification
__kIMChatRecipientDidChangeNotification
__kIMChatParticipantsDidChangeNotification
__kIMChatParticipantStateDidChangeNotification
__kIMChatErrorDidOccurNotification
__kIMChatEngroupFinishedUpdatingNotification
__kIMChatMultiWayStateChangedRefreshConversationListNotification
__kIMChatMultiWayStateChangedNotification
__kIMChatMultiWayMessagesGroupID
__kIMChatMultiWayMessagesConversationUUID
__kIMChatMessageReceivedNotification
__kIMChatMessageSendFailedNotification
__kIMChatMessageFailureCountChangedNotification
__kIMChatUnreadCountChangedNotification
__kIMChatUnreadKey
__kIMChatPurgedAttachmentsDownloadBatchCompleteNotification
__kIMChatPurgedAttachmentsDownloadCompleteNotification
__kIMChatDidFetchAttachmentsNotification
__kIMChatLoadRequestDidCompleteNotification
__kIMChatValueKey
__kIMChatOldValueKey
__kIMChatIndexKey
__kIMChatQueryIDKey
__kIMChatErrorKey
__kIMChatItemsDidChangeNotification
__kIMChatItemsInserted
__kIMChatItemsRemoved
__kIMChatItemsReload
__kIMChatItemsRegenerate
__kIMChatItemsOldItems
__kIMChatMessageDidChangeNotification
__kIMChatConnectivityChangedNotification
__kIMChatMuteDidChangeNotification
__kIMChatPreviouslyBlackholedChatHasBeenLoaded
__kIMChatAllowedByScreenTimeChangedNotification
HistoryLoading
PagedHistoryLoading
InlineReplyHistoryLoading
PagedInlineReplyHistoryLoading
EnableReadReceiptForChat
EnableReadReceiptForChatVersionID
hasBeenAutoSpamReported
wasAutoDetectedForSpam
wasDetectedAsSMSSpam
SMSCategory
wasDetectedAsiMessageSpam
shouldForceToSMS
smsSpamExtensionName
hasViewedPotentialSpamChat
numberOfTimesRespondedtoThread
lastTUConversationCreatedDate
smsHandshakeState
messageHandshakeState
lastBlackholeReceiptPromptDate
restoredFromBlackhole
We are monitoring message ordering under automation {tools %@}
Dealloc: %@
Clearing [DB] unread count for %@ from %d to %d
Unread count [DB] for %@ stayed at: %d
   Posting new unread count of %u for %@
_dbUnreadCount changed to %d: Posting new unread count of %d for %@
_dbFailedCount changed to %d: Posting new failed count of %d for %@
Passing inline reply history request to %@
history query
updating/acting on query ID: %@  insertHistoricalMessages: %@, limit = %d hasMoreMessagesBefore: %d hasMoreMessagesAfter: %d
Fixing recipient based on last message old recipient: (%@), messageAccount: (%@)
fixing up chat account based on last message: oldAccount: (%@), messageAccount: (%@)
_archivedItemsToReplace archivedItemsCount: %d
DeleteHistory
MarkAsSpam
Marked %ld messages as spam
autoReportSpam on self %@
update isFiltered
SIM Line is switched to %@
conversation line switched
Chat - No receiver handle found
Setting spam category to: %d
update isSpam
Updating AutoDonateBehavior to: %ld for chat guid: %@
Clearing chat: %@
clear transcript
-[IMChat setAllowedByScreenTime:]
chat: %@ allowedByScreenTime changed to: %@
Posting notification: %@ userInfo: %@
Posting notification: %@
ClientNotificationProcessing
Handle deleted messages: %@  in chat: %@
strict-decoding 008 _enableStrictSecureDecodingMode called
strict-decoding 008 exception/error after _enableStrictSecureDecodingMode: [%@]
Failed to unarchive message payload data. Error: %@
PKPeerPaymentMessageTypeFromDataURL
PassKitCore
Failed to unarchive message payload data. Exception: %@
Checking for request type in incoming SURF message for spam filtering
We have an unsent message that has now been sent, so we want to assign it a sortID
The last item in the transcript is an unsent message and we are receiving an incoming message, we should display the progress bar
we have a typing indicator so setting sortID 0 message id %@ message guid %@
Fixing message time to be found item's time %@
We have a typing indicator or the sort id for an existing item is 0, so resetting {itemIsTyping: %@ nonTypingZero %@}
Need to transfer sort id over from previous item message mid %@ sid %@ item mid %@ sid %@
handle incoming message on chat (%@) message: %@
messages pending join: %@
Un-pending message: %@
Attempted to initiate query with nil query block for key: %@ chat: %@
Initiate query %@ for chat: %@
Request to %@ for chat: %@
Starting %@ query for chat: %@
Done loading %@
Posting IMChatEngroupFinishedUpdatingNotification from IMChat
Changing display name from %@ to %@
Updating display name from %@ to %@
sender
Updating engramID string version: %@
EngramIDs are equal, not updating
[%@]Request to change display name from %@ to %@
Not changing display name because we're no longer in the chat
Determining conversation name for chat guid: %@
PARTICIPANT_ADDRESS_FIRST_ITEM
PARTICIPANT_ADDRESS_FINAL_ITEM
PARTICIPANT_ADDRESS_NON_FINAL_ITEM
MAYBE_JUNK
[%@]Request from imagent to set client last addressed handle from %@ to %@
[%@]Request from client to update client/imagent last addressed handle from %@ to %@
Changing client last addressed handle from %@ to %@
[%@]Request from imagent to set client last addressed sim ID from %@ to %@
[%@]Request from client to update client/imagent last addressed sim ID from %@ to %@
Changing client last addressed sim ID from %@ to %@
Sending message %@ to account: %@ (%@)  (Pending: %@)
message send
test@icloud.com
Updating typing guid on IMMessage from %@ to %@
 => Message is finished, clearing typing guid: %@
Adding pending message message %@ for account: %@ (%@)
Before splitting up rich links into file for msg guid %@ message payloadad data length %@, original payload data lenght %@
After splitting up rich links into file for msg guid %@ message payloadad data length %@, original payload data lenght %@
itemToUpdateTime: %@ lastIncomingMessage time: %@ lastSentMessageDate: %@
The last recent message was received less than a minute ago, going to use time interval: %@ date: %@ clientSendTime: %@
Client request to send message: %@
New immessage does not have notificationIDSTokenURI, it is now set to %@ before sending.
Add sending message: %@
Chat_GroupPhoto
Not updating group photo guid for chatGuid %@ from %@ to %@
 => Chat: %@
Updating group photo guid for chatGuid %@ from %@ to %@
Not retrying group photo upload for transfer %@
currentTimeInterval %f, latestTypingIndicatorTimeInterval %f
Setting typing indicator time to %f
 => Updating existing composeing message to recording message: %@
 => Sending start typing message: %@
 => Not sending start typing message, the chat style does not support it
Dispatching cancel typing indicator after %f seconds
In cancel typing indicator block. _typingGUID %@ _latestTypingIndicatorInterval %f, shouldSendCancelTypingIndicator %@
 => Sending cancel typing message: %@
 => Not sending cancel typing message, the chat style does not support it
*** We tried to send a cancel typing indicator, but already had no guid set. shouldSendCancelTypingIndicator set to %@
Asked to update empty message in chat: %@
Sending update message %@ to daemon (Chat: %@)
Clearing read message cache
mark as read
Request to mark all messages as read: %@
Chat has no unread messages, tell the daemon that we tried to mark it as read since this could affect message suppression
Chat has unread messages
reportSpam
SkipAutoJoin
ignoreAlertsFlag
com.apple.iChat.LastArchivedMessageDate
com.apple.iChat.LastArchivedMessageID
CKChatConversationKeyboardKey
CKChatLastCanceledMessageTime
CKChatConsecutiveCanceledMessageCount
CKChatConsecutiveManuallyCanceledMessageCount
com.apple.iChat.UnreadMessagesKey
CKChatUnmuteTime
LastCanceledMessageTime
ConsecutiveCanceledMessageCount
ConsecutiveManuallyCanceledMessageCount
Attempt to modify chat property: %@   which is not in the allowlist
Setting chat property: %@  value: %@
User toggled the read receipt setting to: %d for chat: %@ with properties prior to updating: %@
Setting read receipt versionID to: %@ from: %@
Setting read receipt value to: %@
Sending generic notification to update chat properties for properties: %@
Trying to change 1-1 account from %@ to %@
Trying to change group chat account from %@ to %@ (service change: %@)
 Old handle: %@     New handle: %@
 Old participants: %@        New participants: %@
Trying to change recipient from %@ to %@ (Chat: %@)
** Cannot change recipient from %@ => %@, this is not a chat sibling
Request to join chat: %@
Request to leave chat: %@
Not allowed to leave 1:1 chat: %@
Request to remove chat: %@
Cannot add participant %@  that would put us over our max size of: %d
Cannot add participants: %@ that would put us over our max size of: %d
Cannot mutate participants on 1-1 chat: %@
Inviting: %@   (Pending: %@)
Request to invite participants to chat: %@   handles: %@  reason: %@
Cannot mutate participants on chat: %@   service doesn't support it: %@
  * No need to invite: %@   - already in chat
  * Need to invite: %@
Failing to invite some participants that would put us over our max size of: %d
  => Will invite: %@
Tried to remove too many participants, ignoring
Cannot mutate participants if already left chat: %@
Failing to add some pending participants that would put us over our max size of: %d
moment share status presentation acquired
Availability changed, updating chat items for chat: %@
IMHandle Availability Changed
Not sharing availability, feature is disabled
Not sharing availability in SMS chat
Not sharing availability in business chat
Not sharing availability in non 1-1 chat
Not sharing availability in chat with non contact that I have not participated in
Not sharing availability in chat with no lastAddressedHandleID
A contact has been added to the chat: Updating isFiltered to NO
Address book change
This is a 1-1 chat, the account attached to it is gone, we're re-targeting to this account: %@
This is a 1-1 chat, the account attached to it is gone, we're re-targeting from: %@ to: %@ (Chat: %@)
This is a 1-1 chat, the account attached to it is gone, and we found no siblings to fix ourselves with, leaving (Chat: %@)
This is a group chat, found a new account to attach to: %@  (Chat: %@)
This is a group chat, and the account attached to it is gone, leaving it (Chat: %@)
<IMChat %p> [Identifier: %@   GUID: %@ Persistent ID: %@   Account: %@   Style: %c   State: %d  Participants: %d  Room Name: %@  Display Name: %@  Last Addressed Handle: %@ Last Addressed SIMID: %@ Group ID: %@  Unread Count: %u  Failure Count: %u, isFiltered: %d, hasHadSuccessfulQuery: %@, bizIntent:%@ personCentricID:%@ mergedPinningIdentifiers:%@]
roomName
lastAddressedLocalHandle
lastAddressedSIMID
groupID
originalGroupID
isFiltered
hasHadSuccessfulQuery
engramID
lastMessageTimeStampOnLoad
mergedPinningIdentifiers
state
serviceName
participants
Set send progress delegate for chat %@. Send progress: %@
update items with thread originator
When attempting to remove message %@, no part identifier was found for thread identifier %@
decrement reply counts
Trying to loadMessagesBeforeAndAfterGUID with a null messageGUID. Please call loadMessagesUpToGUID if a messageGUID is not specified, Returning early
Begin loadMessagesBeforeAndAfterGUID: %@ numberOfMessagesBeforeGUID: %lu numberOfMessagesAfterGUID: %lu
v20@?0B8@"NSError"12
loadMessagesBeforeAndAfterGUID completion with success: %d error: %@
FrequentRepliesLoading
UnreadLoading
LoadAttachmentsAsync
CountAttachmentsNotCachedLocally
IsCurrentlyDownloadingPurgedAttachments
LoadAttachments
Return %d attachments
Delete transfer guids: %@
acnt
disableScrutinyMode
IMChat
Server has disabled scrutiny mode %@
isInScrutinyModeForAttemptCount chat %@ result %@
ScrutinyAttemptGUID
Not Yet Invited
Invite Failed
Deciding
Declined
Joined
Left
Kicked
Banned
Removing
Unjoined
Leaving
Joining
IMCoreSetup: Generate chat items
chat: <%p> beginHoldingUpdatesForKey: %@
chat: <%p> endHoldingUpdatesForKey: %@
chat: <%p> isHoldingUpdatesForKey: %@ - %@
chat: <%p> endHoldingUpdatesForAllKeys
chat: <%p> chatItemsUpdater: %@ was holding updates
update
v32@?0@"IMChatItem"8Q16^B24
Request to delete chatItem %@ which can't be deleted
Delete chat items: %@
delete chat items
SuppressDeleteParts
Request to delete subset of chatItems from message. Update message.
New item after removing parts: %@
DELETING PARTS index:range map: %@
v32@?0@"NSNumber"8@"NSArray"16^B24
Request to delete all chatItems for message. Adding message to delete.
Delete message items: %@
delete message items
Request to delete message item for message.
Mark chat item as saved: %@
mark as saved
Mark chat item as notify recipient: %@
mark as notify recipient
Mark chat item as played: %@
mark as played
Mark chat item as having played expressive send: %@
mark as played expressive send
mark as unactionable
AutomationMarkAsRead
IMChat-RecentlyUpdated
c:%@: %@
%@: %@
i:%@: %@
debugDescription
bottomChatItemGUIDs
unrepresentedItems
typingIndicators
__kIMMessageErrorDomain
/emote
IMMessage.m
imHandle != nil
v40@?0@8{_NSRange=QQ}16^B32
IMMessage
Could not determine sender, returning unknown sender
flags
subject
plainBody
bodyData
balloonBundleID
payloadData
expressiveSendStyleID
associatedMessageGUID
time
timeDelivered
timeRead
timePlayed
timeExpressiveSendPlayed
associatedMessageRangeLocation
associatedMessageRangeLength
threadIdentifier
fileTransferGUIDs
messageID
associatedMessageType
messageSummaryInfo
threadOriginator
syndicationRanges
syncedSyndicationRanges
https
%@ did not support URL: %@
v40@?0@"NSString"8{_NSRange=QQ}16^B32
MarcoLoggingStringForMessageData
Marco
%@[from=%@; msg-subject=%@; account:%@; flags=%x; subject='%@' text='%@' messageID: %lld GUID:'%@' sortID: %@ date:'%f' date-delivered:'%f' date-read:'%f' date-played:'%f' empty: %@ finished: %@ sent: %@ read: %@ delivered: %@ audio: %@ played: %@ from-me: %@ emote: %@ dd-results: %@ dd-scanned: %@ error: %@ associatedMessageGUID: %@ associatedMessageType: %lld balloonBundleID: %@ expressiveSendStyleID: %@ timeExpressiveSendStylePlayed: %f bizIntent:%@ locale:%@ threadIdentifier: %@, threadOriginator: %@, replyCountsByPart: %@, syndicationRanges: %@, syncedSyndicationRanges: %@]
Attempting to access rich link metadata from non-rich link plugin payload. Returning nil.
Undefined Error
No Error
Unknown Error
Send Cancelled
Send Timeout
Send Failed
Internal Failure
Network Failure
Network Lookup Failure
Connection Failure
No Network
Network Busy
Network Denied
Signature Error
Server Decode ERror
Server Parse Error
Server Internal Error
Invalid Server Request
Malformed Server Request
Unknown Server Request
Server Token Invalid
Server Rejected
Remote User Invalid
No Remote User
Remote User Incompatible
Remote User Rejected
Transcode Failure
Encryption Error
Decryption Error
OTR Encryption Error
OTR Decryption Error
Account Disabled
No Local Account
Account Needs Update
Account Invalid
File Upload Failure
File Download Failure
Attachment Upload Error
Attachment Download Error
System Needs Update
Agent Crashed
Invalid Local Credentials
Location Timeout
Location Unauthorized
http://
https://
com.apple.messages.IMDowntimeStateChangedNotification
com.apple.messages.IMDowntimeStateChangedForBundleID
DowntimeController
Participants changed for chat %@. Invalidating cached Screen Time policy for participants group IDs hash: %@
STConversation
ScreenTimeCore
STConversationContext
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Down Time Whitelisting/IMDowntimeController.m
STConversation *_createSTConversation(void)_block_invoke
_createSTConversation_block_invoke
IMSTConversationClass
IMSTConversationContextClass
STManagementStateStateDidChange
IMSTManagementStateStateDidChangeNotificationName
Setting up screentime downtime controller
Contact Limits Feature Active
com.apple.messages.private.IMDowntimeController
com.apple.messages.private.IMDowntimeController.setup
Updating chat %@ because Comm Limit policy changed to allowed = %@
Could not find chat for conversation context with allowed by contacts handle: %@. unregistering for Communication Limit tracking for that chat identifier.
@16@?0@"TUHandle"8
allowedByScreenTime
v16@?0@"STConversation"8
-[IMDowntimeController _allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:trackingChat:]_block_invoke
emergencyNumbers
conversation
B24@?0@"NSSet"8@"STConversation"16
Subscribed to Comm Limit policy for chat: %@ allowed: %@ participantIDsHash: %@
placeholder handle to see if downtime is on
Delaying registering for screentime state change notification as setup is not finished.
Registering for screentime state change notification %s
-[IMDowntimeController _doRegisterForScreenTimeNotifications]
v12@?0i8
v32@?0@"IMBalloonPlugin"8Q16^B24
Fetching application downtime policies for bundleIDs: %@
error retrieving application policy for bundle identifier:%@ - %@
Successfully fetched App Downtime Polcies for app bundles with  identifiers: %@
v24@?0@"NSDictionary"8@"NSError"16
%tu;
com.apple.Messages.IMChatRegistryErrorDomain
__kIMChatRegistryDidRegisterChatNotification
__kIMChatRegistryDidUnregisterChatNotification
__kIMChatRegistryWillUnregisterChatNotification
__kIMChatRegistryIsIncomingKey
__kIMChatRegistryMessageSentNotification
__kIMChatRegistryMessageSentMessageKey
__kIMChatRegistryMessageSendTimeKey
__kIMChatRegistryContinuityURLKey
__kIMChatRegistryUserActivityLastMessageKey
__kIMChatRegistryWillLoadNotification
__kIMChatRegistryDidLoadNotification
__kIMChatRegistryDidLoadIsRefreshKey
__kIMChatRegistryUnreadCountChangedNotification
__kIMChatRegistryLastFailedMessageDateChangedNotification
__kIMChatRegistryFailedCountChangedNotification
__kIMChatRegistryGroupIDChangedNotification
__kIMChatRegistryPreviousGroupIDKey
__kIMChatRegistryUpdatedGroupIDKey
__kIMChatRegistryLastMessageLoadedNotification
__kIMChatRegistryChatMarkedForAutoDonatingChangedNotification
__kIMChatRegistryChatsToObserveUserInfoKey
__kIMChatRegistryChatsToUnregisterUserInfoKey
__kIMChatRegistryWillRemergeChatsNotification
__kIMChatRegistryDidRemergeChatsNotification
__kIMChatRegistryGUIDListKey
__kIMChatRegistryMergedPairsListKey
__kIMChatRegistryBlackholedChatsExistNotification
success
chatregistry.performance
Not allowing IMChatRegistry to be created. We think we are running in IMDPersistenceAgent.
Attempting to register dictionary to chat %@ with style %c (expected %c), dictionary: %@
Registering with chat: %@
Attempting to register chat dictionary with mismatched participants, got: %@ expected: %@ dictionary: %@
Registering dictionary: %@ for chat %@
_groupIDToChatMap
Registering chat with guid: %@ groupID: %@ for chat %p with guid %@ groupID: %@ 
Skipping an participant with empty ID!
participants of chat we are registering %@
participants of existing chat %@
Registering chat with guid: %@ and personID %@ for chat %p with guid %@ and personID %@
pcmid
_chatGUIDToChatMap
_threadNameToChatMap
Registering chat %@ using personCentricID %@
-[IMChatRegistry _registerChatDictionary:forChat:isIncoming:newGUID:shouldPostNotification:]
 => empty thread name for guid %@
This call is deprecated, and doesn't do anything anymore, please file bugs if you need some behavior here
Unregistering chat: %@
Unregistering chat with GUID: %@ found cached chat: %@
-[IMChatRegistry _unregisterChatWithGUID:]
iMessage map had entry for %@
_simulatedChatGUIDToChatMap
Removed chat from %lu entries, and clearing %lu keys, from Group Participants cache
Added chat %@ to chatsForParticipant[%@], now %@
Incoming list of participants to get sorted and hashed: %@
Sorted & joined participant ID before the Hash: %@
-[IMChatRegistry _handleChatParticipantsDidChange:]
Participants changed in [%@]
Found existing 1-1 chat %@ matching owner handle: %@
Did not find any existing 1-1 chat matching owner handle: %@
Received handle availability changed notification for subscription: %@
Received handle availability invitation received notification for subscription: %@
Received handle availability state changed notification for subscription: %@
0000000000
IMBalloonPluginVersionUndefined
NSExtension
MSMessagePayloadProviderIdentifier
:%@:%@
IMBalloonApp
EXTENSION INTERRUPTION BLOCK CALLED extensionIdentifier: %@, requestIdentifier: %@
v16@?0@"<NSCopying>"8
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Public API/IMBalloonApp.m
-[_IMBalloonExtensionApp initWithPluginBundle:extension:pluginKitProxyClass:proxy:]
[self.browserDisplayName length] > 0
MSHideInAppDrawer
MSCanSendDataPayloads
MSShouldBalloonHideAppIcon
MSShouldHideAppSwitcher
MSSupportedPresentationContexts
LSApplicationIsStickerProvider
CFBundleDisplayName
CKBrowserDisplayName
CFBundleName
loadAppBundle
Loaded %@, %@
loadPlugin
CKBrowserClass
CKDatasourceClass
IMCustomTypingIndicatorClass
CKEntryClass
DisabledApps
MSMessagesAppPresentationContextMessages
MSMessagesAppPresentationContextMedia
com.apple.private.IMCore.IMAutomationMessageSend
createIMMessageToSendWithMessage, setting bundleID value to %@ and attribution info name %@ on transferGUID %@
createIMMessageToSendWithMessage, attribution info %@
sendMessageSync messageText %@ handle %@ filePaths %@ bundleID %@ attributionInfoName %@ timeout: %f
Invalid parameters
SendMessage returning resultDir:%@
GUID
messageToSend body:%@ isTyping message %@ flags %@
Sent IMmessage %@ resultDir:%@
Requesting high resolution image dowbnload for guid %@ with filename %@
filePath
Successfully fetched high res image, filename is %@
Error: failed to fetch high res image, filename is %@
Failed to fetch high res image
v20@?0B8@"NSString"12
fileSizeForMessageGUID: error getting size  for msg guid %@ at high res path %@ error was %@
filesize-hq
Found high res image for msg guid %@, filesize for high res path %@ is %lld
fileSizeForMessageGUID: error getting size  for msg guid %@ at low res path %@ error was %@
filesize
Could not find any atatchments with message guid %@
Could not find any atatchments with message guid
Could not find IMDMessageRecordRef with message guid
IMDMessageRecordCopyMessageForGUID
IMDMessageRecordBulkCopy
itemType
replaceID
date-read
date-delivered
datePlayed
attributedBody
service
account
accountGUID
handleID
messageSubject
hasAttachments
wasDDScanned
roomnames
otherHandleID
groupTitle
groupActionType
shareStatus
shareDirection
expireState
messageActionType
timePlayedExpressiveSend
destinationCallerID
Error occurred copying attachment files to tmp path: %@
Error occurred deleting tmp attachment file: %@
valid text
v20@?0B8@"IMMessage"12
senderInfo
handle
code
machineReadableCode
displayCode
timeStamp
domain
ClientOTC
Sending request to daemon to consume code with GUID: %@
otc-init
OTC init time %@
Setting up IMAgent connect for OTC
%@-OneTimeCode
Recevied updated valid codes list from daemon: %@
Sending codes to SPI 
Will connect to daemon -- updating _requestedOneTimeCodeStatusForConnection to false
Connected to daemon with _requestedOneTimeCodeStatusForConnection %@
Did disconnect from daemon
Lost connection daemon
bestHandlesForCNContacts could not find a chat because the contacts set being passed is empty
%@ were resolved to %@ because chat %@ is the designated channels for the recipients
%@ were resolved to %@ because chat %@ included all recipients
B32@?0@"NSString"8@"NSDictionary"16^B24
%@ were resolved to %@ because account %@ was previously used to contact all recipients
%@ were resolved to %@ because account %@ was resolved as best account to contact all recipients
%@ were resolved to %@ because all recipients have iMessage compatible IDs
%@ were resolved to %@ because all recipients have SMS compatible phone numbers
Failed to resolve %@. No chat history, iMessage IDs or valid phone numbers could be found
Did not find chat history for persons %@.
B16@?0@"IMChat"8
+[IMHandle bestHandlesForCNContacts:]
IMChatRegistry
Setting up initial state of calls
IMChatRegistry_CallManagement
TUConversationManager registered
Posting TUConversations loaded notification for all active conversation we have
Found chat %@ for TUConversation %@
stateChangedForConversation %@
activeRemoteParticipantsChangedForConversation %s
-[IMChatRegistry(IMChatRegistry_CallManagement) conversationManager:activeRemoteParticipantsChangedForConversation:]
removedActiveConversation %@
activitySessionsChangedForConversation %@
remoteMembersChangedForConversation %@
posting notification %@ for chat with groupID %@ and userInfo %@
com.apple.iChat
com.apple.systemuiserver
com.apple.MobileSMS.MessagesAssistantExtension
com.apple.messages.AssistantExtension
com.apple.springboard
com.apple.PassKit.PassKitIntentsExtension
com.apple.InCallService
com.apple.iMessageAppsBrowserTest
com.apple.CameraEffectsDemo
com.apple.MobileSMS.iMessageAppsHost
com.apple.Safari.SandboxBroker
com.apple.siri
com.apple.imtranscoding.IMTranscoderAgent
com.apple.TapToRadar
com.apple.mobilesms.notification
com.apple.mobilesms.compose
com.apple.MobileSMS.MessagesNotificationExtension
com.apple.messages.ReplyExtension
com.apple.messages.ShareExtension
com.apple.MobileSMS.MessagesTranscriptExtension
IMCoreSetup
IMCore setup timing: %@
Requested to replay a database that does not exist at path: %@
com.messages.automation
(handles) == nil
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Automation Hooks/IMAutomationGroupChat.m
(groupID) == nil
[participants count] == 0
join us
(message) == nil
(newName) == nil
([handle ID]) == nil
(account) == nil
(handleString) == nil
(outList) == nil
groupParticipantsWithGroupID incoming ID %@ 
groupParticipantsWithGroupID resulting participants %@ 
groupParticipantsWithGroupID resulting chat %@ 
__kIMIDStatusControllerUpdatedNotification
Found IMService %@ for service with name: %@
   Found account: %@
   URI: %@   ID: %@   Existing handle: %@
IDStatus for ID
v16@?0q8
-[IMIDStatusController _idStatusForID:onAccount:]
ID %@  onAccount: %@
Status for %@ is %ld
IMIDStatusControllerListenerID
Sending request to daemon for ID %@ onService %@
Received query result for ID: %@  %d
Cannot issue ID status for ID: %@   on service: %@
Messenger
Madrid
Venice
IMTranscriptChatItemRules
Generated no chat items for IMMessageItem with GUID: %@
Generating not delivered status item with error code %d for message %@
Generated no final chat items for item with GUID: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/Messages-1172.0.10.2.12/IMCore/IMCore/Source/Chat/IMTranscriptChatItemRules.m
-[IMTranscriptChatItemRules _didProcessChatItems:]
[associatedMessageChatItem isKindOfClass:[IMMessageEditChatItem class]]
Expected %@ to emit a IMMessageEditChatItem (got %@ instead).
v32@?0@8@"IMMessageActionItem"16^B24
q24@?0@"IMMessageActionItem"8@"IMMessageActionItem"16
v32@?0@"NSString"8@"NSNumber"16^B24
@"IMTranscriptChatItem"8@?0
Apple
B16@?0@8
_processChatItems couldn't replace Delivered object at index %lu, chatItems count: %lu, item %@
Attribution chat items to insert: %@ did not match indices: %@
Can only delete message parts. Tried to delete %@ from message:%@
CheckPoisonPills
ScrutinyMode
IMItem is corrupt already, not crashing
internal_poison_chatitem_hang
INTERNAL CHAT ITEM POISON PILL TEST DETECTED - Spinning
internal_poison_chatitem_crash
INTERNAL CHAT ITEM POISON PILL TEST DETECTED - Crashing
Failed to find plugin data source for identifier '%@'
Vegas Trip
Updated cachedShouldShowSpam to %ld for %@
B16@?0@"IMItem"8
Message from time %@ is older than status from time %@. Not inferring a delivery type, as we likely have out of date status data.
Status published date is not available (likely cache miss), assuming our status information is up to date
Recipient is unavailable, and we are in an active grace period, inferring sent message will notify recipient, pending receipt
We are not in an active grace period, inferring this recent message will be delivered quietly, pending receipt
Message time %@ is outside urgent grace period start window %@
Found a recent message that broke through recipients dnd within the grace period window. Grace period is active.
Found a received message in the chat within the grace period window, extending grace period to %ld minutes.
Message %@ did not impact grace period. isFromMe: %ld, didNotify: %ld
Item is not a message. Item class: %@
Inferring that we are in the urgent message grace period.
Inferring that we are NOT in the urgent message grace period.
SentWithSiriLearningLinkShownForMessageGUIDs
SentWithSiriLearningUIShownNumberOfTimes
Updated cachedShouldShowReportSpam to %ld for %@
Destination caller ID changed to: %@ from %@
We have items with the same sortID that have different guids item1 %@ item2 %@
B24@?0@8@16
com.apple.imessage
TypingMessageTimeout
Insert associated item %@
_IMItemsControllerInsertMessageAcknowledgment removed stray ack item at idx %lu
We are not insert an item we want to firstItem: %@ item: %@
We are not insert an item we want to isTypingOrCancelTypingMessage %@ isFromMed %@ isSystemMessage %@
Rejecting a late typing indicator with GUID: %@
UserAssignedDeviceName
v16@?0@"BMCommunicationSafetyResultEvent"8
CommSafety
Registered event of type %lu with Biome
Registered event with messageGUID %@, of type %lu, sender %@, contentID %@, contentURL %@, conversationID %@, conversationURL %@ with Biome
IMRuntimeTest
Setting up test: %@
Tearing down test: %@
Updated mock sync state to: %@, with sync stats: %@
Sending fake syncState dictionary: %@
Test got syncState change: %@
Running test for %f seconds
__kIMPreferredAccountForServiceChangedNotification
Registering for preferred account changes
 Returning preferred sendable account for service: %@    account: %@
 Returning default best operational sending account for service: %@    account: %@
 Returning default best account for service: %@    account: %@
Updating preferred account for service: %@    account: %@
Found existing chat for addresses: %@   chat: %@
Found existing chat for addresses: %@   returning chat's account: %@
Found no existing chat for addresses: %@   returning preferred account for service: %@
DDScannerResult
DataDetectorsCore
dd-result
DataDetector
IMCopyDDScannerResultFromAttributedStringData: %@
Could not unarchive DDScannerResult data: %@ error: %@
Could not create keyed unarchiver due to error: %@
Failed to unarchive DDScannerResult data %@ class: %@ Exception: %@
DDResultAttributeName
v32@?0@"NSString"8@"NSData"16^B24
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
com.apple.IMDDScannerQueue
Exception scanning message: [%@] with exception: [%@]
Request to scan message: %@
Not scanning message, it is unfinished or empty: %@
Not scanning string: %@
 => Result message: %@  Found Results: %@, wasProcessed = %@
%@ - guid: %@ path: %@ fileTransfer: %@, createdDate = %@, isSticker = %d
-[IMChatRegistry(Blackhole_Internal) _updateBlackholedChatsExist:]
Sending read receipt for all messages in chat: %@   for account: %@
Storing item: %@ in chat: %@
Sending played receipt for message %@ in chat: %@   for account: %@
Setting played expressive send for message %@ in chat: %@   for account: %@
Sending saved receipt for message %@ in chat: %@   for account: %@
Sending notify recipient commadn for message %@ in chat: %@   for account: %@
Marking chat as had successful ID query in chat: %@   for account: %@
Setting %@ as the reply to guid for %@
Current me card sharing audience is %lu
Setting meCard sharing preference %d on message %@
Bailing sending message as its a typing message and service is not iMessage
Before Siri passed in following notificationIDSTokenURI %@ so setting it on immessageitem
Siri passed in following notificationIDSTokenURI %@ so setting it on immessageitem
now it is set to %@
AlwaysSendLasers
Forcing laser due to defaults com.apple.MobileSMS AlwaysSendLasers
Found %lu chats to send Syndication Action %@ to. chatIDs: %@
Forwarding join chat for: %@   to account: %@
Forwarding leave chat for: %@   to account: %@
Unjoining chat locally: %@
Done
Removing chat from the agent too: %@
   Found guid to remove: %@
Forwarding decline chat for: %@   to account: %@
-[IMChatRegistry(IMChatRegistry_Sending) _chat:updateIsFiltered:]
chat: %@  update is filtered: %d
-[IMChatRegistry(IMChatRegistry_Sending) _chat:updateIsBlackholed:]
chat: %@  update is blackholed: %d
-[IMChatRegistry(IMChatRegistry_Sending) _chat_markAsSpam:queryID:autoReport:]
chat: %@
Download purged attachments for chat %@
Getting isDownloadingPurgedAssets for chat %@
Close session for business chat: %@
Closing chat session with business with chatIdentifier: %@ chat: %@ on account: %@
ChatRegistry - Cannot close session. Did not find account for chat: %@
     Query with participant: %@
           => Adding handle: %@
           => Adding service: %@
           => Adding identifier: %@
Request to _ReplaceExtensionPayloadDataWithAttachmentForOutgoingMessage: %@ chatIdentifier: %@
Failed to unarchive payload. Error: %@
Wrote extension payload data to attachments folder with GUIDs: %@
kCLLocationAccuracyNearestTenMeters
CoreLocation
IMLocationManager
Started location update
Location manager got updated location
Location manager failed with error %@
Location update timer fired, got location with desired accuracy
Location update timer fired, did not get desired accuracy before timeout. Firing completion handlers
Location update timer fired, desired accuracy not obtained but we have time left
IMLocationManager Timed Out
IMLocationManager does not have location authorization
Location manager timed out. Reason: %@
Location manager firing completion handlers. Has valid location %@ error %@
CLLocationManager
__kIMChatFMFStatusDidChangeNotification
__kIMFMFSessionRelationshipStatusDidChangeNotification
__kIMFMFSessionHandleLocationRefreshedNotification
__kIMFMFSessionLocationReceivedNotification
__kIMFMFSessionActiveDeviceChangedNotification
ACAccountDataclassShareLocation
Accounts
IMFMFSession - Failed to weak link ACAccountDataclassShareLocation
ACAccountStoreDidChangeNotification
IMFMFSession - Failed to weak link ACAccountStoreDidChangeNotification
IMFMFSession
%s provisioned state generated is %lu
-[IMFMFSession imIsProvisionedForLocationSharing]
ACAccountStore
AppleAccount
Account store did change, invalidating FMF provision state
Location
Forwarding mapping packet: %@ to daemon for ID: %@
FMFHandle
refreshLocationForHandles %@ callerId %@ error %@
v24@?0@"NSString"8@"NSError"16
refreshLocationForHandles - Failed to generate FMFHandle for %@
FMF updated active device %@ error %@
v24@?0@"FMFDevice"8@"NSError"16
FMF setActiveDevice %@
FMF didReceiveLocation %@
FMF friendshipRequestReceived %@
FMF friendshipWasRemoved %@
FMF didStartSharingMyLocationWithHandle %@
FMF didStopSharingMyLocationWithHandle %@
FMF didStartAbilityToGetLocationForHandle %@
FMF didStopAbilityToGetLocationForHandle %@
FMF didChangeActiveLocationSharingDevice %@
_startSharingWithFMFHandles not sharing because we've left the chat
willSendFriendshipOfferToHandles %@ untilDate %@ callerId %@ groupId %@
sendFriendshipOfferToHandles %@ untilDate %@ callerId %@ groupId %@ mappingIdentifiers %@ error %@
willStopSharingMyLocationWithHandles %@ callerId %@ groupId %@
stopSharingMyLocationWithHandles %@ callerId %@ groupId %@ mappingIdentifier %@ error %@
Posting FMF notification: %@  object: %@ userInfo: %@
FMFSession
FMFGroupIdOneToOne
FMFGroupIdGroup
com.apple.imcore.daemon.screentime.enabled
com.apple.imcore.daemon.screentime.disabled
Loaded chats from daemon for query: %@ chats: %@
Failed to reconstruct chat for chatInfo: %@
Loaded chat was created: %@ guid: %@ info: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _account:chat:style:chatProperties:messagesUpdated:]
No chat found for chat ID: %@
Chat Message Update
service: %@ chat: %@ style: %d messages: %lu
We received messages from storage so we are appending current items with items from storage
Process messages for account: %@  chat: %@   style: %d  messages: %@  properties: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) account:chat:style:chatProperties:notifySentMessage:sendTime:]
Found %llu chats with message matching GUID: %@ (will exclude chat %@)
Removing typing indicator %@ from chat %@, existing item: %@
Message %@ in chat %@ is not a typing indicator: %@
chat (%p) properties updated for guid %@: personCentricID %@
Joined chat: %@
We're not in the room, leaving as is
Leaving chat with GUID: %@
Found chat: %@
Updated personCentricID from %@ to %@ for chat %@
chat: %@  propertiesUpdated: %@
chat: %@ lastAddressedHandleUpdated: %@
No cached chat for %@, ignoring last addressed handle update
chat: %@ lastAddressedSIMIDUpdated: %@
No cached chat for %@, ignoring last addressed SIM ID update
chat: %@ new lastReadMesssageGuid: %@
No cached chat for %@, ignoring last seen message GUID update
chat: %@ isFilteredUpdated: %d
No cached chat for %@, ignoring is filtered update
chat: %@ engramIDUpdated: %@
No cached chat for %@, ignoring engram ID update
chat: %@ finished updating group chat
No cached chat for %@, ignoring engroup update
chat: %@ uncachedAttachmentCountUpdated: %@
No cached chat for %@, ignoring attachment count update
unreadCount
Chat [%@] info dictionary has [Unread: %d]
Ignoring groupID update (%@ -> %@) because chat is not group chat: %@
Ignoring groupID update (%@ -> %@) for %@ because existing group chat is in groupID map: %@
Updating groupID of chat %@ from %@ to %@
Found existing autoDonationBehavior: %ld for chat with GUID: %@ (notify: %@)
Using default autoDonationBehavior for chat with GUID: %@ (notify: %@)
lastMessage
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) chat:updated:]
chat: %@  last message guid %@ updated: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) unreadCountChanged:]
Unread count changed from %d to %d
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) lastFailedMessageDateChanged:]
Failed message date changed from %lld to %lld
deletedGUIDs: %@  queryID: %@  chatGUIDs: %@
 ==> completed query: %@
The limit (%lu) of number of messages we loaded is higher than our capacity (%lu), bumping our capactity to the new limit
Found attempted guid %@. Marking message as corrupt %@
History query ID: %@   chatID: %@  service: %@  finished with results (%d)
   => Created IMItem: %@
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) historyQuery:chatID:services:finishedWithResult:limit:]
Found no chat object for query: %@   chat ID: %@
Paged history query ID: %@ chatID: %@ service: %@ finished with results count: %d numberOfMessagesBefore: %d numberOfMessagesAfter: %d
Paged history about to call insert historicalMessages numberOfMessagesBefore: %d numberOfMessagesAfter: %d
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:]
Found no chat object for query: %@  chat ID: %@
Media attachment filenames query ID: %@   chatID: %@  service: %@  finished with results (%d)
path
isSticker
transferState
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) attachmentQuery:chatID:services:finishedWithResult:]
Media attachment uncached count query ID: %@   chatID: %@  service: %@  finished with results (%lu)
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) uncachedAttachmentCountQuery:chatID:services:finishedWithResult:]
Media attachment download purged assets for chatIDs: %@  finished.
Media attachment download purged assets batch for chatIDs: %@  finished.
completedTransferGUIDs
Media attachment is downloading purged assets query ID: %@   chatID: %@  service: %@  finished with results (%i)
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) isDownloadingQuery:chatID:services:finishedWithResult:]
Mark as Spam query ID: %@   chatID: %@  service: %@  finished with results (%@)
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) markAsSpamQuery:chatID:services:finishedWithResult:]
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) frequentRepliesQuery:chatID:services:finishedWithResult:limit:]
ChatFrequentReplies
Found no chat object for frequent replies query: %@   chat ID: %@
Chats need re-merging notification
Asked to remerge %@
Unregistering chat guid %@
One GUID presented to merge, not remerging!
Completed re-constructing merged chat paired array
Bailing out of _handleMergedChatReconstructions due to kFZListenerCapPaginatedChatRegistry
Clearing chat registry
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _handleMergedChatReconstructions:]
 => Unregistering chat: %@
Total number of IMChats we expect to create %@
First Load: %@, Full Reload: %@
*********** Error creating chat with %@
Done restoring chats
** Posting did load notification
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) __handleMergedChatReconstructions:fullReload:]
Fetching the initial batch of Contacts
Fetching the remaining(Final batch) of contacts
_handleCachingAliasToCNIDMap
Bailing out of handle Contacts cache construction due to kFZListenerCapPaginatedChatRegistry
Caching AliasToCNIDMap completed. Took %f seconds
Bailing out of handle chat reconstructions due to kFZListenerCapPaginatedChatRegistry
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _handleChatReconstructions:]
Not doing 2 step chat registry load
Restoring chats
IMCoreSetup: ChatReconstruction
Forcing sanity check on chats
 => no existing chat, we'll create one
Not registering: %@, already existing
Reconstruction
IMCoreSetup: Updating unread counts
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) __handleChatReconstructions:]
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) setupComplete:info:]
Have pending queries, failing them :-(  %@
New history modification stamp is: %@     old was: %@
   We're out of date, updating as we need
   We're up to date, nothing to do here
This our first launch, just noting the modification stamp: %@
unreadMessageCount
lastFailedMessageDate
Unread count is %d
Last failed message date is %lld
Updating modification stamp to: %@     old was: %@
No modification stamp to update, old is: %@
   history may by out of date at this point, queries will all be non cached
-[IMChatRegistry(IMChatRegistry_DaemonIncoming) _daemonReallyDied:]
Daemon completed deferred setup (firstLoad was: %@)
We got back up the wrong chat. Expected %@, got %@
Bailing out of handle chatLoadedWithChatIdentifier due to kFZListenerCapOnDemandChatRegistry cap not being present
Bailing out of handle chatLoadedWithChatIdentifier due to kFZListenerCapChats cap not being present
Bailing out of handle blackholedChatsExist due to kFZListenerCapChats cap not being present
Last message for chats with map size %lu, progressive load enabled is %@
v32@?0@"NSString"8@"IMItem"16^B24
Total last message to chat dictionary count %lu
Removing chat ID %@ from chatIdToLastMessageItemMap
ScreenTimeEnablement
ScreenTime is: %@
Enabled
Disabled
ChatRegistry_Daemon_GroupPhoto
Received groupPhotoUpdatedForChatIdentifier: %@ userInfo: %@
Found chat %@
Failed to find handle for participant id: %@ unformatted: %@ countryCode: %@ personCentricID: %@
Found existing candidate chat guid: %@ with groupID: %@ ec displayName %@ displayName %@ existing pcmid %@
Using the existing candidate chat since participantIDHash matches up
Existing chats for unnamed group with same participants, participants to match %@
Matched chat with participants %@ pcmid %@
 ==>  chatForChatDictionary info for chat we matched guid %@ displayName %@ groupID: %@ pcmid %@ participants %@
Looking up chat based on service name [%@] and roomName [%@]
Updating chat's display name:%@
Room style chats are no longer supported
Did not find an existing chat so creating a new one with participatIDHash %@
** Posting will load notification
_PostWillLoadIfNecessary
latime
Scrutiny
__kIMInlineReplyChatItemsDidChangeNotification
InlineReply
%s inserting %lu messages
-[IMInlineReplyController insertHistoricalMessages:queryID:hasMessagesBefore:hasMessagesAfter:isReplacingItems:]
updating/acting on query ID: %@  insertHistoricalMessages: %@, hasMessagesBefore: %d hasMessagesAfter: %d
%s inserting %@, threadIdentifier matches
-[IMInlineReplyController insertItem:]
%s removing %@
-[IMInlineReplyController removeItem:]
%s replacing items %@
-[IMInlineReplyController replaceItems:]
%s returning NO, disableItemInserts enabled
-[IMInlineReplyController itemMatchesThread:]
%s threadIdentifier does not match for item %@
%s guidFromThreadIdentifier %@ does not match guidFromAssociateMessageGUID %@ for item %@
@16@?0@"IMItem"8
inlineUpdate
IMInlineReplySetup: Generate chat items
v32@?0@8@"IMItem"16^B24
v32@?0{_NSRange=QQ}8^B24
IMHandleAvailabilityChangedNotification
IMHandleAvailabilityInvitationReceivedNotification
IMHandleAvailabilityStateChangedNotification
IMHandleAvailabilityDaemonDisconnectedNotification
com.apple.Messages.IMHandleAvailabilityManager
Could not find cached availability for handle "%@". Fetching current value async from StatusKit, returning sync last known value of %ld
Fetched availability is not current for handle "%@" with value %ld
Fetched availability for handle "%@" with value %ld is different than last known value %ld. Notifying UI availability changed.
Fetched availability unchanged for handle "%@", value %ld
v24@?0q8@"SKStatusSubscription"16
Found cached current availability for handle "%@" with value %ld
Determined status was published on: %@
Subscription has no published status, returning nil status creation date. Subscription: %@
Subscription cache miss, returning nil for sync call for status creation date
Fetching status for handle: %@
AKAvailability
AvailabilityKit
Personalized availablity not available in this build, using unpersonalized availablity
StatusKit indicates handle %@ is availabile
StatusKit indicates handle %@ is unavailabile
Availability could not be decoded for handle %@, returning unknown availability
Current status not found for handle %@, returning unknown availability
Subscription not found for handle %@, returning unknown availability
v16@?0@"SKStatusSubscription"8
Personal status subscription says we are AVAILABLE
Personal status subscription says we are UNAVAILABLE
IMHandleAvailabilityManager
Personal status subscription has no published status
Personal status subscription unavailable
Begin observing availability for: %@
Requesting transient subscription assertion for handle: %@
Successfully retained transient subscription assertion for handle: %@
Subscription not found for handle %@, not beginning observing availability
End observing availability for: %@
Requesting release of transient subscription assertion for handle: %@
Successfully released transient subscription assertion for handle: %@
Subscription not found for handle %@, not ending observing availability
SKStatusSubscriptionService
StatusKit
AKAvailabilityStatusTypeIdentifier
SKStatusSubscription
Subscription cache hit (sync), found subscription for handleID: "%@" Subscription: %@
Subscription cache hit (sync), we do not have a subscription for handleID: "%@"
Subscription cache miss (sync), returning nil cached subscription
Subscription cache hit, found subscription for handleID: "%@" Subscription: %@
Subscription cache hit, we do not have a subscription for handleID: "%@"
Subscription cache miss, fetching status subscription for handleID: "%@"
Did not find status subscription for handleID: "%@"
Found status subscription for handleID: "%@". Subscription: %@
Fetched status subscription is not current, returning value to caller, but not caching it.
v24@?0@"SKStatusSubscription"8@"NSError"16
SKHandle
Clearing current availability cache
Subscription invitation received, clearing cache and notifying UI to subscribe, if necessary. %@
Status update received, clearing cache and notifying UI to display updated status, if necessary. %@
Status state changed, clearing cache and notifying UI to refetch all relevant state. %@
Subscription service daemon was disconnected, (e.g. app is returning from backgrounded) clearing stale cached data and notifying UI to refetch if necessary
installed tests
Setting up cloudkit hooks, etc
Actually Tearing down cloudkit hooks
cloudkit-sync-ui-tests
user default cloudkit-sync-ui-tests == %ld, starting runtime tests
__kIMSPIUnreadMessageCountChangedNotification
__kIMSPILastFailedMessageDateChangedNotification
__k_IMSPIListenerID
IMSPIHandle: %p [Address: %@  Business Name: %@]
IMSPIHandle
Business name lookup timed out
_IMDChatRecordBulkCopy
IMCoreSPI
Cannot initialize chat with record: guid: %@ service: %@.
IMDChatRecordCopyHandles
IMSPIChat: %p [ChatIdentifier: %@  guid: %@, serviceName: %@, displayName: %@, isGroup: %@]
IMSPISuggestionsObject: %p [Chat guid: %@ DisplayName: %@ Participants: %@]
IMSPIRecentEvent: %p [Handle: %@  LabelID: %@ Date: %@]
IMSPIAttachment: %p [guid: %@ FileUrl: %@ TransferState: %tu uti: %@ isSticker: %@ isOutgoing: %@ attributionInfo: %@ creationDate: %@]
IMSPIMessage: %p [Outgoing: %@  Read: %@  IsAudio: %@  Sender: %@  Recipients: %@  GUID: %@ ChatGUIDs: %@ Attachments: %@]
messages:guid=%@&chatItemGuid=%@
v16@?0@"IMSPIChat"8
@"NSString"16@?0@"NSString"8
Failed to weak link PassKitCore/PKPeerPaymentMessageTypeFromDataURL.
Could not determine peer payment message type.
strict-decoding 010 _enableStrictSecureDecodingMode called
strict-decoding 010 exception/error after _enableStrictSecureDecodingMode: [%@]
Payload URL not in archived payload dictionary, retuning nil payload URL
Could not decode payload dictionary, retuning nil payload URL
Payload data was nil, retuning nil payload URL
PKPeerPaymentMessageCurrencyAmountFromDataURL
Extension payload URL is nil, not setting peer payment amount.
Unhandled balloon bundle ID: %@
Unhandled attachment bundle ID: %@
Unhandled attachment UTI: %@
Attempted to create IMSPIMessage from NULL IMDMessageRecordRef.
Beginning _IMSPIMessageFromRecord for message record %lld
Exception caught creating IMMessageItem from IMDMessageRecordRef: %@
Completed _IMDMessageRecordBulkCopy
destinationCallerID on outgoing message is nil. Sender information will be missing for this message.
IMDMessageRecordCopyHandle
handleRef matching handleID on received message is nil. Sender information will be missing for this message.
handleID for sender on received message is nil. Sender information will be missing for this message.
Beginning description construction for non-text message
B32@?0@"NSString"8^@16^@24
Failed to retrieve message %@
Could not find attachment matching attachment guid: %@
Completed description construction for non-text message
IMDMessageRecordCopyChats
IMDChatRecordCopyGUID
destinationCallerID is nil, message will not contain own address in recipients
Completed _IMSPIMessageFromRecord for message record %lld
Empty results block or queue supplied to %s
BOOL IMSPIQueryLastReceivedMessageWithQOS(dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIMessageQueryCallback)
IMDMessageRecordCopyLastReceivedMessage
Empty queue or callback block provided to IMSPIUnreadMessageCount
IMDMessageRecordCountAllUnreadMessages
Empty queue or callback block provided to IMSPILastFailedMessageDate
IMDMessageRecordLastFailedMessageDate
Adding cap assertions
Adding cap assertions with attachments
Removing chat caps assertion
Destination cannot be nil.
IMCore_SPI: url is not an NSURL %@
IMCore_SPI
Sending rich link
Get sending service by guid: %@, destinations: %@
Destinations contain empty string when calculating sending service.
Invalid destination when calculating sending service: %@
IMSPIGetIMChat returns %@
Cannot remap chats because invalid arguments: oldLabelID %@ newLabelID %@
Remapping chats' lastAddressedIDs not supported.
Request to get display name and participatns for chat GUID: %@
handles
Results for chats guid:%@ = %@
Request to get most recent contacts used by messages: %d
Setting the chat cap only
Request to get contacts used by existing chatGUID: %@
Request to get all chat guid, display name and all participatns for  %@
chatGUID
Results for chats with participant %@ = %@
Request to get message date and last addressed labelID from chat ids %@ and last addressed handles %@
@16@?0@"NSString"8
Searching with canonicalized chat ids %@ and last addressed labelIDs %@
Could not retrieve last address labelID/last message date because received invalid arguments!
Got results %@
labelID
Returning recent event %@
Request to get message date and last addressed handle from chat ids %@ and last addressed handles %@
Searching with canonicalized chat ids %@ and last addressed handles %@
Could not retrieve last address handle/last message date because received invalid arguments!
Empty messages to be marked as read, failing
Marking messages as read: %@
 => Message guid: %@
Missing message guid for message: %@, not marking as read
Empty messages to be marked as played, failing
Marking messages as played: %@
Empty messages to be marked as saved, failing
Marking messages as saved: %@
Missing message guid for message: %@, not marking as saved
BOOL IMSPIQueryMessageWithRowIDAndQOS(int64_t, dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIMessageQueryCallback)
IMDMessageRecordCopyMessageForRowID
BOOL IMSPIQueryMessagesWithRowIDsAndQOS(NSArray<NSNumber *> *__strong, dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIMessageQueryCallback)
IMDMessageRecordCopyMessagesForRowIDs
Got back %lu messages for %lu row IDs
BOOL IMSPIQueryMessagesWithGUIDsAndQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIMessageQueryCallback)
IMDMessageRecordCopyMessagesForGUIDs
Got back %lu messages for %lu GUIDs
BOOL IMSPIGetAttachmentPathsForTransferGUIDsWithQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPITransferPathsCallback)
IMDAttachmentRecordCopyAttachmentForGUID
/Attachments/
Attempting to lookup group photos for chats with groupIDs: %@
Received group photos: %@
Unable to load group photo file for groupID: %@ fileURL: %@
Unable to access group photo file for groupID: %@ sandboxedFileURL: %@
v32@?0@"NSString"8@"IMSandboxedFileURL"16^B24
Done fetching group photo data: %@
BOOL IMSPIQueryIMMessageItemsWithGUIDsAndQOS(NSArray<NSString *> *__strong, dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIMessageQueryCallback)
Converted records into items %lu items
Empty results block or queue supplied to IMSPIQueryUnreadMessages
0 limit supplied, no query issued to IMSPIQueryUnreadMessages
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID
Querying for unread messages with limit: %lld, from row id: %lld
Got back %lu unread messages
Empty results block or queue supplied to IMSPIQueryUnreadMessagesWithIDs
Services is not matched with IDs: [%@] [%@] to IMSPIQueryUnreadMessagesWithIDs
Empty services or IDs supplied to IMSPIQueryUnreadMessagesWithIDs
0 limit supplied, no query issued to IMSPIQueryUnreadMessagesWithIDs
IMDMessageRecordCopyMessagesWithHandlesOnServicesLimit
Empty results block or queue supplied to IMSPIQueryMessagesWithIDs
Services is not matched with IDs: [%@] [%@] to IMSPIQueryMessagesWithIDs
Empty services or IDs supplied to IMSPIQueryMessagesWithIDs
0 limit supplied, no query issued to IMSPIQueryMessagesWithIDs
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesWithOnlyUnreadAndLimit
Empty results block or queue supplied to IMSPIQueryMessages
0 limit supplied, no query issued to IMSPIQueryMessages
IMDMessageRecordCopyLastReceivedMessageLimit
Querying for messages with limit: %lld
Got back %lu messages
Empty results block or queue supplied to IMSPIQueryMessagesWithChatIdentifiers
Services is not matched with chatIdentifiers: [%@] [%@] to IMSPIQueryMessagesWithIDs
Empty services or chatIdentifiers supplied to IMSPIQueryMessagesWithChatIdentifiers
0 limit supplied, no query issued to IMSPIQueryMessagesWithChatIdentifiers
Empty results block or queue supplied to IMSPIQueryHasConversationWithID
Empty ID passed into IMSPIQueryHasConversationWithID
Empty results block supplied to IMSPIQueryChatsWithUnplayedAudioMessages
IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages
Empty result block supplied to IMSPIQueryChatWithGuid
IMDChatRecordCopyChatForGUID
IMDMessageRecordCopyMessagesDataDetectionResults
B16@?0@"IMSPIMessage"8
Couldn't find attachment with guid %@
com.apple.messages.imcore.spi.userinteractive
com.apple.messages.imcore.spi.userinitiated
com.apple.messages.imcore.spi.default
com.apple.messages.imcore.spi.utility
com.apple.messages.imcore.spi.background
com.apple.messages.imcore.spi.qos-unspecified
Beginning _IMSPIHandleFromRecord for handle record ID: %lld
IMDHandleRecordBulkCopy
Completed _IMSPIHandleFromRecord with handle: %@
Beginning IMSPIAttachmentsFromMessageRecord
Attachment filename returned empty
Completed IMSPIAttachmentsFromMessageRecord
IMDCreateIMItemFromIMDMessageRecordRefWithAccountLookup
(p:(\d+)\/)?([\dA-F]{8}-[\dA-F]{4}-[\dA-F]{4}-[\dA-F]{4}-[\dA-F]{12})
Beginning _dateForLastReadMessageInChatForMessage
IMDMessageRecordCopyLastReadMessageForChatIdentifier
Completed _dateForLastReadMessageInChatForMessage
Beginning _IMSPIRichLinkMetadataForMessageRecord
Completed _IMSPIRichLinkMetadataForMessageRecord
Could not init IMPluginPayload for messageItem: %@
Could not create IMMessageItem from message record: %@
Failed to connect to imagent
Failed to update capabilities
Capability exists, no need to reset.
Trying to send message with attachments for subscription identifier %@
Sending destinations contain empty string
Invalid destination specified to send to: %@
Empty message specified to send with no attachments or payloadData, ignoring
Have non-zero attachments to send, ensuring we have transfer capability
Cannot get chat for destinations: %@
Cache hit, send now
Waiting for registration check before sending
Cancel last clear command before adding cap with attachments assertions
Cannot send message without chat
About to send message for chat: %@
About to send message to: %@
Sent message with guid: %@ to chat: %@
Cancel last clear command before adding cap assertions
No operational service to use
Account: %@  is not usable for sending, finding a better one...
   => Found: %@
No account found matching service: %@
Using account: %@
account doesn't have a handle for raw address %@
Could not get handle for %@ on account: %@
Beginning _IMSPIMessagesFromMessageRecords with %ld records
Dropping message with guid %@ and item type %@ as it is not a valid message.
Unable to set last read date for 
Could not create IMSPIMessage from message record
Completed _IMSPIMessagesFromMessageRecords with %ld IMSPIMessages
BOOL _IMSPIQueryMessageWithGUIDAndLoadAttachments(NSString *__strong, BOOL, dispatch_qos_class_t, __strong dispatch_queue_t, __strong IMSPIMessageQueryCallback)
/var/mobile/Library/SMS/Attachments
Found corresponding IMMessageItem for attachment GUID %@
Found corresponding IMMessagePartDescriptor for attachment GUID %@
sms://open?service=%@
&groupid=%@
&displayname=%@
&body=%@
&recipients=%@
&recipient=%@
sms://open?
groupid=%@
message-guid=%@
sms:/open?address=%@
groupid
recipient
address
recipients
addresses
overlay
message-guid
displayname
INInteraction
Intents
INSendMessageIntent
INSendMessageIntentResponse
INPerson
INPersonHandle
INMessage
INSpeakableString
INImage
CNPhoneNumber
INPersonHandleLabelForCNLabeledValue
CNContactFormatter
CNContactPhoneNumbersKey
CNContactEmailAddressesKey
speakableGroupName
open?groupid
open?address
open?addresses
open?message-guid
open?recipients
open?recipient
open?service
IMCloudKitFetchedSyncStatsNotification
IMCloudKitSyncStatsKey
IMCloudKitSyncStatisticsKey
IMCloudKitFetchedRampStateNotification
IMCloudKitRampStateKey
IMCloudKitAttemptedToDisableiCloudBackupsNotification
IMCloudKitBackupDisableBackupAttemptResultKey
IMCloudKitBackupDisableBackupAttemptErrorKey
IMCloudKitFetchedSyncDebuggingInfoNotification
IMCloudKitHooks
%@-CloudKitHooks
shouldShowCloudKitUI - isEnabled(%@) eligibleForTruthZone(%@), rampedIntoTruthZone(%@)
isEnabled returning = isCloudKitEnabled = %@ isInExitState(%@) 
Setting cloudkit enabled to state: %@
Request to check if additinal storage is required to store all messages
Request to try and disable cloudkit on all devices
removedFromiCloudBackup returning = %@
rampedIntoTruthZone always returning YES, this shouldn't be called anymore.
eligibleForTruthZone returning = %@
Initiating a manual sync
isStartingSync returning = %@
isSyncing returning = %@
Requesting last sync date: %@
didAttemptToSetEnabledTo returned: targetEnabled:%@ result%@ clients should update values
isChangingEnabledState returning = %@
didPerformAdditionalStorageRequiredCheck returned with success: %@, additionalStorageRequired %llu for iCloud account id %@, error: %@
isDisabling devices returning = %@
_didAttemptToDisableAllDevicesResult returned: result:%@ clients should update values
CloudKitHooks
Metric attachments in cloudkit hooks bytes: %lld
Purge attachments in cloudkit hooks bytes: %lld
Update attachment file sizes
syncSuccess
iCloud and iMessage accounts match ? %@
com.apple.IMCore.IMCloudKitHooks.ValuesChanged
com.apple.IMCore.IMCloudKitHooks.SetEnabledReturned
com.apple.IMCore.IMCloudKitHooks.AdditionalStorageCheckReturned
com.apple.IMCore.IMCloudKitHooks.tryToDisableAllDevicesReturned
com.apple.IMCore.IMCloudKitHooks.MOCEnabledStateReturned
ResultSuccess
ResultKeyNewState
ResultAdditionalStorageRequired
ResultiCloudAccountId
MOCEnabledState
Error
migratedPinConfig is nil, but localPinConfig was not. localPinConfig: %@
Pin config migration from version 1 to higher versions is not supported. If some of the chats in the pin config were group SMS chats, they may not pin properly. Please update all of your devices to the latest build and re-pin the offending group SMS chats.
Pin config migration failed. We migrated the given pin config, but the migrated pin config was not valid. given config: %@, migrated config: %@
Pin config migration failed. We migrated the given pin config, but the migrated pin config had a different version. given config: %@, migrated config: %@
Client request to set password for account: %@
Successfully updated password for account (%@:%@): %@  (Environment: %@)
Client request to remove password for account: %@
Client request to set temporary password for account: %@
Successfully read temporary password for account (%@:%@): %@
Successfully updated temporary password for account (%@:%@): %@
Client request to authenticate account: %@
Updating token for account %@:%@ (Environment: %@)
Setting profile value: %@   forKey: %@
Requesting validation of profile info: %@
Client request to add alias: %@   account: %@
Client request to add aliases: %@   account: %@
Client request to remove alias: %@  account: %@
Client request to remove aliases: %@  account: %@
Final set of aliases after removes %@
Client request to validate alias: %@  account: %@
Client request to validate aliases: %@  account: %@
 => Returning Caller ID: %@   (Set: %@   Aliases: %@)
Asked to change display name from: %@  to: %@
 Changed display name to: %@
 Attempted to change display name to %@, but it wasn't in vetted set (%@)
Notified that my status is now %i, message '%@', idleSince %@
received new sync state: %@
set messages in cloud enabled: %@
beginning initial sync
Fetching sync statistics
statistics dictionary is unexpectedly nil
fetched sync state statistics: %@
Got error fetching sync statistics: %@
Rescheduled sync progress: firing
Rescheduled sync progress pending (interval %f secs)
Rescheduled sync progress for %f seconds in the future
Sending progress to event handlers: %@
Deferring send progress to event listeners for %f sec
Rescheduled sync progress: cancelled
We have progress listeners, attempting to send progress...
Fetching sync statistics...
Fetching sync statistics ok
Not Rescheduling sync progress
Error encountered while fetching sync stats: %@
NOT fetching sync statistics
handle: %@
 => siblings: %@
state dictionary is nil
_syncState is out of range: %ld
_changingEnabledState is out of range: %ld
isSyncEnabledForDisplayOnly = %@. State: %@
Active: %@
Disable AV: %@
Force Chat Logging: %@
%@ Force Allowlist: %@
%@ Allowlist: %@
Failed to create SyndicationAction
Sending syndication message: %@
Chat context does not exist.
CMM state was zero in the client!
transferGUID is nil. ChatItem's GUID is %@
%@ transferGUIDs is nil. ChatItem's GUID is %@
 => done
Error beggining observing availability: %@
Error ending observing availability: %@
Error sharing availbaility with handle: %@
** Added: %@   (%d now exist)
Handle %@
Handle account %@
Account sibling: %@
No GUID, bailing...
Attempted to register a nil listener
Attempted to unregister a nil listener
Error prewarming the opening of sharedPhotoLibrary: %@
handles: %@  name: %@
roomName: %@  account: %@
existingChatForHandles: %@  groupID: %@ displayName %@ isJoined %@ 
handles: %@  groupID: %@
queries: %@
Account Logged Out: chat: %@ account: %@
chat: %@  handle: %@  status: %d
chat: %@
chat: %@   message: %@  adjusting sender: %@
Setting local user is composing with %@ for chat: %@   supplied guid: %@
chat: %@   message: %@
chat: %@   property: %@   value: %@
chat: %@   handles: %@  reason: %@
chat: _initWithDictionaryRepresentation: %@  dictionary: %@  messages: %@
Setting initial join state: %d
chat: <%p> updateChatItemsIfNeeded
chat: %@ _updateChatItems with block: %@  (%@)
No chatItems yet. Post for compatibility.
Schedule _replaceStaleChatItems for nextStaleTime:%@
inserted: %@
removed: %@
reload: %@
regenerate: %@
new chat items: %@
Don't post. No significant updates to chatItems.
_replaceStaleChatItems
ID %@  onService: %@   (URI: %@)
ID %@  onService: %@  onAccount: %@
ID %@  onService: %@
Sending fake state: %@ from IMCloudKitHooksTestSingleton
_shouldHideProgressInFirstSevenDays is returning NO
Hiding cloude kit sync progress because we've had a successful sync within the last seven days.
_shouldHideProgressInFirstSevenDays is returning %@
Creating Paused SyncProgress
Creating Error SyncProgress: %@
Creating Hidden SyncProgress
Creating Sync SyncProgress
chat: %@  messages: %@
chat: %@  item: %@
chat: %@ message: %@
chat: %@  message: %@
Sending message: %@ to %@ account: %@
Trying to send nil syndicationAction
chat: %@  participants: %@  reason: %@
chat: %@  joinProperties: %@
chat: %@  properties: %@  participant: %@
chat: %@  property: %@  value: %@
chat: %@  update display name: %@
chat: %@  update last address handle: %@
chat: %@  update last address uniqueID: %@
chat: %@ limit: %d beforeGUID: %@ afterGUID: %@ queryID: %@
_chat_loadPagedHistory chat: %@ numberOfMessagesBefore: %d numberOfMessagesAfter: %d messageGUID: %@ queryID: %@
chat: %@ beforeGUID: %@ afterGUID: %@ queryID: %@
chat: %@ limit:%d queryID: %@
chat: %@ limit:%lu queryID: %@
chat: %@ queryID: %@
account: %@  chat: %@   style: %d  messages: %@
account: %@  chat: %@  style: %d  invitation: %@
account: %@  chat: %@  style: %d  properties: %@
account: %@  chat: %@  style: %d  error: %@
Chat status changed: account: %@  chat: %@  style: %d  member: %@  status: %d
chat: %@  displayName: %@
Chat [%@] info dictionary has [Unread: %d]
Chat [%@] _setDBUnreadCount to %d
 => chats: %@
   Loaded chat: %@
Personal status subscription has status with unknown format, could not parse availability
Error retaining transient subscription assertion for handle %@. Error: %@
Error releasing transient subscription assertion for handle %@. Error: %@
Subscription cache hit (sync), but object in cache is of unknown type: "%@"
Subscription cache hit, but object in cache is of unknown type: "%@"
Error fetching subscription service for handle: "%@" Error: %@
Tried to remove nil attachment GUID from syndication
Could not derive message item from attachment GUID %@
Could not derive message part range from attachment GUID %@
updateCloudKitState was updated by the daemon %@
updateCloudKitState was updated by the daemon, clients should values
softlink:r:path:/System/Library/Frameworks/Photos.framework/Photos
softlink:r:path:/System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore
softlink:r:path:/System/Library/Frameworks/Photos.framework/Photos
IMOrderingMetricCollector
IMChat_ServiceForSending
IMAdditions
IMPinnedConversationsController
IMService
Deprecated
IMFeature__isExpanseEnabled
IMChat_CallStateManagement
IMBalloonPluginDataSource
FetchUtilities
IMServiceImpl
IMService_GetService
IMPluginPayload
NSSecureCoding
NSCoding
NSCopying
ConversationListSupport
ConversationListSupportTestSupport
IMBalloonPluginAttributionController
IMSuggestionsService
IMAccount
IMSystemMonitorListener
IMRemindersIntegration
IMDNDList
IMDaemonListenerProtocol
NSObject
IMDaemonListener
IMCloudKitSyncStatistics
TEST_ONLY
Telephony
MessageAcknowledgmentTesting
MessageAcknowledgments
TransientAttachments
IMCloudKitEventNotificationManager
IMItemsController
IMItems
IMRemoteDaemonProtocol
IMDaemonController
IMCoreAutomationHook
IMAccountController
SpecialSendQueries
AccountCreation
PreferredService
Mentions
IMSpamFilterHelper
IMHandleUtilities
IMNicknameController
Queries
Queries_Private
Queries_Internal
Description
IMCoreDescription
IMCoreDescription_Private
IMTypingTimer
IMCloudKitSyncState
IMParentalControlsService
IMParentalControls
IMFileTransferCenter
IMMomentSharePresentationCache
PXChangeObserver
Business
IMChatContext
NSMutableCopying
IMMutableChatContext
IMFeature__isInterstellarEnabled
SyndicationActions
IMMessageChatItem
IMTranscriptChatItem
IMChatTranscriptItem
IMLoadMoreChatItem
IMLoadMoreRecentChatItem
IMBlackholeChatItem
IMReportSpamChatItem
IMSMSSpamChatItem
IMServiceChatItem
IMNumberChangedChatItem
IMUnavailabilityIndicatorChatItem
IMNotifyAnywayChatItem
IMSimSwitchedChatItem
IMDateChatItem
IMSenderChatItem
IMReplySenderChatItem
0 1D
2 0B
IMMessagePartChatItem
IMVisibleAssociatedMessageHost
IMTextMessagePartChatItem
IMReplyContextTextMessagePartChatItem
IMReplyContext
IMReplyContextDeletedMessageChatItem
IMTranscriptPluginChatItem
IMPluginChatItemProtocol
IMReplyContextTranscriptPluginChatItem
IMTranscriptPluginBreadcrumbChatItem
IMAttachmentMessagePartChatItem
IMAggregateAttachmentMessagePartChatItem
IMReplyContextAttachmentMessagePartChatItem
IMReplyContextAggregateAttachmentMessagePartChatItem
IMAnimatedEmojiMessagePartChatItem
IMErrorMessagePartChatItem
IMPendingMomentShareMessagePartChatItem
IMExpirableMessageChatItem
IMAudioMessageChatItem
IMAggregateMessagePartChatItem
IMReplyContextAggregateMessagePartChatItem
IMTypingChatItem
IMTypingPluginChatItem
IMLocatingChatItem
IMEmoteMessageChatItem
IMMessageStatusChatItem
IMChatTranscriptStatusItem
IMMessageEffectControlChatItem
IMMessageAttributionChatItem
IMMessageReplyCountChatItem
IMTranscriptPluginStatusChatItem
IMPhotoAttachmentStatusChatItem
IMMomentShareStatusChatItem
IMGroupActionChatItem
IMGroupTitleChangeChatItem
IMParticipantChangeChatItem
IMParticipantSubscriptionSwitchChatItem
IMLocationShareOfferChatItem
IMLocationShareActionChatItem
IMTUConversationChatItem
IMMessageActionChatItem
IMTranscriptChatItems
IMAssociatedMessageChatItem
IMMessageEditChatItem
IMMessageAcknowledgmentChatItem
IMAssociatedStickerChatItem
IMAggregateAcknowledgmentChatItem
IMExpressiveSendAsTextChatItem
IMUnreadCountChatItem
IMTranscriptLocationChatItem
IMMessagePartHighlightChatItem
IMTransientMessagePartChatItem
IMServiceAgentImpl
IMServiceAgent
IMCore
IMReusableBalloonPluginController
IMBalloonPluginController
IMBalloonPlugin
IMBalloonBrowserPlugin
IMBalloonAppExtension
IMBalloonPluginManager
IMHandle
QueueNotifications
PublicAPIMethods
IMDaemonQueryController
IMHandleRegistrar
IMPhotoLibraryPersistenceManager
PHPhotoLibraryChangeObserver
IMLocationManagerUtils
IMChatRegistry_StorageManagement
IMFaceTimeUtilities
PhotoLibraryPersistence
IMPhotoLibraryPersistenceManagerListener
IMCloudKitMockSyncState
IMPeople
IMTranscriptEffectHelper
Testing
IMCloudKitSyncProgress
IMCloudKitSyncProgressIsSyncing
IMCloudKitPausedSyncProgress
IMCloudKitAccountNeedsRepairSyncProgress
IMCloudKitDeviceStorageIsFullSyncProgress
IMCloudKitCloudKitStorageIsFullSyncProgress
IMCloudKitHiddenSyncProgress
IMCloudKitKeyRollPendingErrorProgress
IMMe
InlineReplies
IMSimulatedDaemonController
IMDaemonQuery
IMChat_Internal
IMItemChatContext
IMOrderingTools
IMAutomation
ShortcutActionsSupport
IMSimulatedChat
IMSimulatedChatDelegate
IMSimulatedDaemonListener
IMSimulatedAccount
IMInlineReplyChatItemRules
IMChatItemRules
BatchLoading
DeprecatedEnumeration
NSFastEnumeration
DeprecatedQueries
IMCloudKitSyncProgressRuntimeTest
IMCloudKitSyncProgressRuntimeTestPreparing
IMCloudKitSyncProgressRuntimeTestDeleting
IMCloudKitSyncProgressRuntimeTestDownloading
IMCloudKitSyncProgressRuntimeTestUploading
IMCloudKitSyncProgressRuntimeTestPaused
IMCloudKitErrorProgressTest
IMAddressBook
IMFeature__improvedPriorityInversionFixEnabled
IMFeature__chatCacheEnabled
IMChat
IMSendProgressDelegate
IMMomentSharePresentationCacheDelegate
ChatNotifierSupportForLion
IMChat_HistoryAdditions
IMChatItem
IMChat_LocationShare_Private
IMChat_LocationShare
TestOverrides
IMMessageItemChatContext
IMChat_EditableMessageSupport
IMChatStateLogging
IMStateLoggable
IMChat_SpamPerfCache
IMChatItems
IMMessage
RichLinks
Location
AssociatedMessages
IMCommLimitsPolicyCache
IMDowntimeController
TUCallProviderManagerDelegate
DowntimeAdditions
IMChatRegistry
_IMBalloonExtensionApp
_IMBalloonBundleApp
IMBalloonApp
IMReplyingRemoteDaemonProxy
IMAutomationMessageSend
INSpeakable
IMOneTimeCodeAccelerator
CNContacts
IMChatRegistry_CallManagement
TUConversationManagerDelegate
IMCoreSetupTimingAdditions
IMAutomationBatchMessageOperations
IMAutomationGroupChat
IMIDStatusController
IMFeature__hubbleCMMProcessingEnabled
3OO@n
IMTranscriptChatItemRules
Impl
IMCommSafetySummaryImage
IMCommSafetySummary
IMCloudKitHookTestSingleton
IMChatHistoryController
IMCloudKitEventNotificationManagerRuntimeTest
IMCloudKitEventHandler
ChatCache
ChatCache_Internal
IMDDController
IMAttachment
Blackhole
Blackhole_Internal
ProgressLogic
IMChatRegistry_PersonCentricMergeTestHooks
IMChatRegistry_Sending
IMLocationManager
CLLocationManagerDelegate
IMFMFSession
FMFSessionDelegate
IMChatRegistry_DaemonIncoming
IMChatScrutinyController
IMInlineReplyController
IMSendProgress
IMSendProgressRealTimeDataSource
IMSendProgressTimeDataSource
IMHandleAvailabilityManager
SKStatusSubscriptionServiceDelegate
IMCloudKitEventNotificationRuntimeTestSuite
IMSimulatedAccountController
IMSPIHandle
IMSPIChat
IMSPISuggestionsObject
IMSPIRecentEvent
IMSPIAttachment
IMSPIMessage
ScreenTimeAdditions
_IMSPIConnectionController
UserActivity_Internal
IMCloudKitHooks
init
_submitMetricIfNeeded
dealloc
_metricIncomingMessage:items:withContext:
countByEnumeratingWithState:objects:count:
guid
replyToGUID
isEqualToString:
_metricHistoryQueryOrder:
needToSubmitMetric
_submitMetric
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
sharedInstance
trackEvent:withDictionary:
unsignedIntegerValue
metricIncomingMessage:items:
metricHistoryQueryOrder:
_persistMetric
orderingMetricQueue
numberOfMessagesSeen
setNumberOfMessagesSeen:
numberOfMessagesPlacedOutOfOrder
setNumberOfMessagesPlacedOutOfOrder:
numberOfMessagesPlacedCorrectly
setNumberOfMessagesPlacedCorrectly:
numberOfHistoryQuerySeen
setNumberOfHistoryQuerySeen:
numberOfHistoryQueryOutOfOrder
setNumberOfHistoryQueryOutOfOrder:
numberOfHistoryQueryPlacedCorrectly
setNumberOfHistoryQueryPlacedCorrectly:
setNeedToSubmitMetric:
.cxx_destruct
_needToSubmitMetric
_orderingMetricQueue
_numberOfMessagesSeen
_numberOfMessagesPlacedOutOfOrder
_numberOfMessagesPlacedCorrectly
_numberOfHistoryQuerySeen
_numberOfHistoryQueryOutOfOrder
_numberOfHistoryQueryPlacedCorrectly
T@"NSObject<OS_dispatch_queue>",R,N,V_orderingMetricQueue
TQ,N,V_numberOfMessagesSeen
TQ,N,V_numberOfMessagesPlacedOutOfOrder
TQ,N,V_numberOfMessagesPlacedCorrectly
TQ,N,V_numberOfHistoryQuerySeen
TQ,N,V_numberOfHistoryQueryOutOfOrder
TQ,N,V_numberOfHistoryQueryPlacedCorrectly
TB,N,V_needToSubmitMetric
account
service
iMessageService
smsService
suppressAccountRetargetingForNamedGroupConversation
isEqual:
_targetToService:newComposition:
_invalidateDowngradeState
participants
__imArrayByApplyingBlock:
lastSentMessage
isDelivered
receivedResponseForChat
lastAddressedHandleID
lastAddressedSIMID
isDowngraded
isInternationalSpamFilteringEnabled
valueForChatProperty:
intValue
trackSpamEvent:
setValue:forChatProperty:
setHasHadSuccessfulQuery:
shouldForceToSMS
forceMMS
_isUsableForSending
mapID:usingKey:
displayName
downgradeMessage:manualDowngrade:downgradeChat:
count
_updateDowngradeState:checkAgainInterval:
_setAndIncrementDowngradeMarkersForManual:
initWithTarget:action:
setNeedsUpdate
name
objectForKey:
accountForUniqueID:
mutableCopy
removeObjectForKey:
uniqueID
setObject:forKey:
_accountIsOperational:forService:
_previousAccountForService:
_setPreviousAccount:forService:
arrayByApplyingSelector:
_bestAccountForAddresses:
_setAccount:
_calculateDowngradeState
defaultCenter
postNotificationName:object:userInfo:
setLocalUserIsTyping:
_calculateDowngradeStateTimerFired
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
date
timeIntervalSince1970
numberWithDouble:
initWithUnsignedInteger:
lastMessage
sender
smsEnabled
chatStyle
_recipientIsPhoneNumber
doubleValue
dateWithTimeIntervalSince1970:
_consecutiveDowngradeAttemptsViaManualDowngrades:
dateByAddingTimeInterval:
timeIntervalSinceNow
_clearDowngradeMarkers
error
code
recipient
_appearsToBePhoneNumber
iMessageEnabledForSenderLastAddressedHandle:simID:previousService:
accountsForService:
IMMMSMaxRecipientsForPhoneNumber:simID:
_hasChat:forService:
hasHadSuccessfulQuery
length
refreshServiceForSending
downgradeMessage:manualDowngrade:
_delayedInvalidateDowngradeState
setForceMMS:
TB,R,N
TB,N
networkDataAvailable
mmsEnabledforPhoneNumber:simID:
dictionary
firstObject
shouldDowngradeToRecipient:fromSender:ifCapableOfSMS:withConversationDowngradeState:andConversationHistoryState:
allKeys
removeObject:
valueForKey:
integerValue
maxChatParticipantsForHandle:simID:
forceRefreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
_currentIDStatusForDestinations:service:listenerID:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
initWithService:
accountMatchingSimIdentifier:
aliasStrings
regularExpressionWithPattern:options:error:
__im_handleIdentifierRegex
matchesInString:options:range:
range
valueWithRange:
firstMatchInString:options:range:
substringWithRange:
addObject:
copy
lengthOfBytesUsingEncoding:
stringByAppendingString:
enumerateSubstringsInRange:options:usingBlock:
__im_rangesOfHandleIdentifierStrings
__im_IDForHandleIdentifierString
__im_handleIdentifiers
__im_separateStringByByteLength:
_postDeferredPinnedConversationsDidChangeNotificationIfNecessary
currentPinConfigurationVersion
currentPinConfigurationRevision
stringWithFormat:
arrayWithObjects:count:
setWithArray:
imCloudKitHooksSetEnabledDidReturn:
addObserver:selector:name:object:
_handleChatGroupIDDidChangeNotification:
fetchPinnedConversationIdentifiersFromLocalStore
shouldSync
synchronizeLocalDataStore
performPinConfigValidationAndMigrationIfNecessary
_initWithStoreIdentifier:usingEndToEndEncryption:
handleNSUbiquitousKeyValueStoreDidChangeExternallyNotification:
array
numberWithInteger:
setObject:forKeyedSubscript:
_dictionaryWithPinnedConversationIdentifiers:chatMetadata:updateReason:timestamp:
originalGroupID
isGroupChat
identityHash
timeIntervalSinceReferenceDate
object
userInfo
pinnedConversationIdentifierSet
containsObject:
indexOfObject:
replaceObjectAtIndex:withObject:
chatMetadata
_metadataDictionaryForChat:
_setPinnedConversationIdentifiers:withChatMetadata:updateReason:shouldUpdateStores:
pinningIdentifier
maximumNumberOfPinnedConversations
dictionaryWithPinnedConversationIdentifiers:chatMetadata:updateReason:
updateStoresWithPinConfiguration:
orderedSetWithArray:
_postPinnedConversationsDidChangeNotification
postNotificationName:object:
conversationsWereDeletedWithIdentifiers:
isEqualToOrderedSet:
isEqualToDictionary:
pinIndexForChat:inIdentifierSet:withMetadata:
matchingIdentifierForChat:inIdentifierSet:withMetadata:
objectAtIndex:
mergedPinningIdentifiers
_sortedParticipantIDHashForParticipants:usesPersonCentricID:
pinConfigurationMigrationKey
getBoolFromDomain:forKey:
_locallyStoredPinConfiguration
validatedPinConfigurationWithCurrentVersionForPinConfiguration:
pinnedConversationIdentifiersFromPinConfiguration:
chatMetadataFromPinConfiguration:
setBool:forDomain:forKey:
allExistingChats
pinConfigurationIsValid:
pinConfigurationHasCurrentVersion:
isEnabled
mocAccountsMatch
boolValue
_updateLocalStoreWithPinConfiguration:
isMainThread
fetchMostUpToDatePinConfiguration:
numberOfPendingForceSyncs
setNumberOfPendingForceSyncs:
_forceSyncDispatchQueue
dataStore
synchronize
_updateUbiquitousStoreWithPinConfiguration:completion:
shouldWriteProposedPinConfiguration:toUbiquitousStoreWithExistingPinConfiguration:
shouldUpdateExistingPinConfig:withProposedPinConfig:
setDictionary:forKey:
forceSynchronizeUbiquitousStore
_fetchUbiquitousPinConfiguration:
setValue:forDomain:forKey:
requiredKeys
pinConfigurationHasCompatibleVersion:
_ubiquitousDispatchQueue
_ubiquitousPinConfigurationInStore:
mostUpToDatePinConfigurationByComparingPinConfiguration:toOtherPinConfiguration:
getValueFromDomain:forKey:
dictionaryForKey:
TQ,R,N
pinnedConversationIdentifiers
setPinnedChats:withUpdateReason:
conversationWasDeletedWithIdentifier:
pinnedConversationsContainsChat:
matchingIdentifierForChat:
hasCompletedInitialization
setHasCompletedInitialization:
hasDefferedPinnedConversationsDidChangeNotification
setHasDefferedPinnedConversationsDidChangeNotification:
setDataStore:
setPinnedConversationIdentifierSet:
setChatMetadata:
_hasCompletedInitialization
_hasDefferedPinnedConversationsDidChangeNotification
_numberOfPendingForceSyncs
_dataStore
_pinnedConversationIdentifierSet
_chatMetadata
TB,N,V_hasCompletedInitialization
TB,N,V_hasDefferedPinnedConversationsDidChangeNotification
Tq,N,V_numberOfPendingForceSyncs
T@"NSUbiquitousKeyValueStore",&,N,V_dataStore
T@"NSOrderedSet",&,N,V_pinnedConversationIdentifierSet
T@"NSDictionary",&,N,V_chatMetadata
status
forgetStatusImageAppearance
imageNameForStatus:
imageURLForStatus:
allServices
allServicesNonBlocking
serviceWithName:
listener
myIdleTime
dateWithTimeIntervalSinceNow:
hasSuffix:
characterAtIndex:
lowercaseString
stringByReplacingOccurrencesOfString:withString:
notificationCenter
myStatus
isEmailAddress:inDomains:
canonicalFormOfID:withIDSensitivity:
copyWithZone:
login
logout
initialSyncPerformed
localizedName
localizedShortName
infoForScreenName:
infoForAllScreenNames
infoForPreferredScreenNames
canonicalFormOfID:
peopleWithScreenName:
screenNamesForPerson:
myScreenNames
infoForPerson:
infoForAllPeople
infoForDisplayedPeople
isEqualToIgnoringCase:
isExpanseEnabled
__im_ff_isExpanseEnabled
remoteMembers
groupID
messagesGroupUUID
UUIDString
normalizedHandleWithDestinationID:
handle
__imSetByApplyingBlock:
minusSet:
chatIdentifier
allObjects
conversation
objectForKeyedSubscript:
_stripFZIDPrefix
initWithHandle:
conversationManager
addRemoteMembers:toConversation:
activeConversations
mapsToTUConversation:
conversationIsVideoCall:
joinExistingConversationForTUCoversation:videoEnabled:
joinState
maximumNumberOfInvitedMembers
initiateTUConversationForParticipants:senderAddress:videoEnabled:groupID:displayName:
activePeopleStringForTUConversation:
currentTUCall
callDurationString
currentVideoCalls
activeConversationForCall:
UUID
activeRemoteParticipants
addHandlesToGoupFaceTimeChatIfRegistered:
joinExistingTUConversation
initiateTUConversationWithVideoEnabled:
activePeopleStringForTUConversation
callDurationStringForTuCall
activeParticipantsForTUConversation
remoteMembersForTUConversation
messageGUID
data
dataDetectedResult
initWithMessageGUID:payload:dataDetectedResult:url:
setPluginPayload:
pluginBundleID
consumedSessionPayloads
_updateTemporaryAttachmentURLsForPluginPayload
bundleID
payload
pluginPayload
attachments
mainQueue
checkForAllowedByScreenTime
addObserverForName:object:queue:usingBlock:
systemBundleIdentifierForPluginIdentifier:
allowedToShowAppExtensionWithBundleIdentifier:
setAllowedByScreenTime:
__mainThreadPostNotificationName:object:
consumedPayloads
arrayByAddingObject:
pluginSessionGUID
containsString:
componentsSeparatedByString:
setData:
setPendingAttachmentData:
setPayload:
pendingAttachmentData
chat
_imMessageGUID
messageForGUID:
_cachedChatsWithMessageGUID:
sendPayload:attachments:
updatePayload:attachments:
sendBalloonPayload:attachments:withMessageGUID:bundleID:
updateBalloonPayload:attachments:forMessageGUID:
_updateWithPluginPayload:messageID:messageGUID:
pluginPayloadDidChange:
payloadDidChange
path
hasPrefix:
stringGUID
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
lastPathComponent
fileURLWithPath:
copyItemAtURL:toURL:error:
temporaryAttachmentURLs
setAttachments:
removeItemAtPath:error:
setTemporaryAttachmentURLs:
messageIDOfLastMessageInSession
setMessageGUID:
setPluginSessionGUID:
shouldExpire
setShouldExpire:
_senderIsSameBetweenPayload:andOtherPayload:
isFromMe
setSender:
setIsFromMe:
isEqualToArray:
_removeTemporaryAttachmentURLs
isEqualToData:
isPlayed
setIsPlayed:
numberWithLongLong:
setDatasource:
_imMessageItem
_handleIncomingItem:
setHasInvalidatedSize:
inlineReplyController
_itemForGUID:
_handleIncomingItem:updateReplyCounts:
performActionDisallowingItemInsert:
insertItem:
allowedByScreenTime
guidOfLastMessageInSession
_markItemAsPlayed:
playbackType
balloonPluginForBundleID:
identifier
browserDisplayName
dataSourceClassForBundleID:
previewSummary
supportsIndividualPreviewSummaries
initWithPluginPayload:
individualPreviewAttachmentFileAndUTI:
individualPreviewSummary
rangeOfString:
_strictlyUnarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClasses:fromData:error:
previewSummaryForPluginBundle:
_summaryText
_replaceHandleWithContactNameInString:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
stringWithString:
existingIMHandleWithID:
_appearsToBeEmail
existingIMHandleWithID:alreadyCanonical:
hasName
allIMHandles
replaceOccurrencesOfString:withString:options:range:
replaceHandleWithContactNameInString:forAccount:additionalHandles:
isShowingLatestMessageAsBreadcrumb
isUpdate
setShowingLatestMessageAsBreadcrumb:
_reloadLatestUnconsumedBreadcrumb
supportsURL:
unlocalizedPreviewSummaryForPluginBundle:pluginDisplayName:
previewSummaryForPluginPayload:withBundleID:previewAttachmentURL:previewAttachmentUTI:
individualPreviewSummaryForPluginPayload:
allPayloads
sessionGUID
setPayload:attachments:
messagePayloadDataForSending
imMessage
sendPayload:
updatePayload:
_updatePayload:messageID:messageGUID:
thumbnailURLWithSize:completion:
payloadWillEnterShelf
payloadWillSendFromShelf
wantsStatusItem
statusString
statusAttributedString
didTapStatusItem
wantsReplyFromContentView
statusStringNeedsUpdate
supportsDynamicSize
needsResize
markAsPlayed
playbackWithCompletionBlock:
stopPlayback
sizeThatFits:
datasourceWasMovedToNewGuid:
richLinkMetadata
beginShowingLastConsumedBreadcrumbForOutgoingPayload:
endShowingLastConsumedBreadcrumb
description
setChat:
payloadInShelf
setPayloadInShelf:
setUrl:
setDataDetectedResult:
attachmentGUIDs
setAttachmentGUIDs:
URLToOpenOnTapAction
initialMessageIsFromMe
setInitialMessageIsFromMe:
isLast
setLast:
set_imMessageGUID:
setSessionGUID:
hasInvalidatedSize
setConsumedPayloads:
parentChatHasAllUnknownRecipients
setParentChatHasAllUnknownRecipients:
_payloadInShelf
_initialMessageIsFromMe
_allowedByScreenTime
_isLast
_isShowingLatestMessageAsBreadcrumb
_hasInvalidatedSize
_parentChatHasAllUnknownRecipients
_showingLatestMessageAsBreadcrumb
_chat
_pluginPayload
_url
_dataDetectedResult
_attachmentGUIDs
_URLToOpenOnTapAction
_pendingAttachmentData
_temporaryAttachmentURLs
__imMessageGUID
_messageGUID
_sessionGUID
_bundleID
_consumedPayloads
_guidOfLastMessageInSession
_messageIDOfLastMessageInSession
T@"NSURL",&,N,V_url
T@"DDScannerResult",&,N,V_dataDetectedResult
T@"NSArray",&,N,V_attachmentGUIDs
T@"IMPluginPayload",&,N,V_pluginPayload
T@"NSArray",&,N,V_pendingAttachmentData
T@"NSMutableSet",&,N,V_temporaryAttachmentURLs
T@"NSString",&,N,V__imMessageGUID
TB,N,SsetShowingLatestMessageAsBreadcrumb:,V_isShowingLatestMessageAsBreadcrumb
TB,N,V_allowedByScreenTime
T@"NSString",&,N,V_messageGUID
T@"NSString",&,N,V_sessionGUID
T@"NSString",R,&,N,V_bundleID
TB,N,V_hasInvalidatedSize
TB,N,V_payloadInShelf
T@"IMMessage",R,N
T@"IMChat",&,N,V_chat
T@"NSArray",&,N,V_consumedPayloads
TB,N,V_initialMessageIsFromMe
TB,N,V_parentChatHasAllUnknownRecipients
T@"LPLinkMetadata",R,N
T@"NSData",R,&,N
TB,N,SsetLast:,V_isLast
showingLatestMessageAsBreadcrumb
TB,R,N,GisShowingLatestMessageAsBreadcrumb,V_showingLatestMessageAsBreadcrumb
T@"NSString",R,&,N,V_guidOfLastMessageInSession
Tq,R,N,V_messageIDOfLastMessageInSession
T@"NSData",&,N
T@"NSString",R,&,N
T@"NSAttributedString",R,&,N
T@"NSURL",R,N,V_URLToOpenOnTapAction
T@"NSArray",R,N
addObjectsFromArray:
fetchRecentStickersWithCompletion:
payloadData
setPluginBundleID:
dataSourceForPluginPayload:
setFileURL:
fetchRecentItemsForDomain:completion:
loadRecentHandwritingsWithThumbnailSize:completion:
loadRecentStickers:
loadRecentHandwritingsAndStickersWithThumbnailSize:completion:
blockUntilConnected
connectToDaemonWithLaunch:
serviceClass
initWithName:
activeAccountsForService:
connectedAccountsForService:
accountsWithCapability:
connectedAccountsWithCapability:
operationalAccountsWithCapability:
removeObserver:name:object:
bestAccountFromAccounts:
hasSyncedWithRemoteBuddies
activeAccountsChanged:
_syncWithRemoteBuddies
internalName
setIMAccountLoginStatus:
statusChangedForAccount:from:to:
_calculateBestAccount
localizedCompareToString:
currentRunLoop
runMode:beforeDate:
_markHasSyncedWithRemoteBuddies
loginStatus
_blockUntilInitialSyncPerformed
bestAccountSibling
publicAPIPropertiesDictionary
arrayOfAllIMHandles
initWithArray:
filterIMHandlesForBestAccountSiblings:
arrayWithCapacity:
_loadPropertiesIfNeeded
currentLocale
mmsEnabled
aliases
_phoneNumberOnSubscriptionWithSIMID:
iMessageEnabled
hasAlias:onAccountForService:
_isSIMIdIDSRegisteredSIM:
_shouldCheckIfLastAddressedHandleIsInSubscriptionsAnymoreButiMessageIsEnabledForAlias:previousService:
_isiMessageEnabledIfLastAddressedHandleIsNotActiveAnymore:
_isLastAddressedHandleSubscriptionActive:
_iMessageEnabledForMultipleSubscriptionsForSenderLastAddressedHandle:simID:previousService:
supportsSMS
bestAccountForService:
allowsSMSRelay
supportsMMS
mmsConfigured
_readMMSUserOverride
allowsMMSRelay
accounts
canSend
sharedInstanceForBagType:
isActive
initWithCapacity:
serviceWithInternalName:
arrayWithObjects:
__mainThreadPostNotificationName:object:userInfo:
arrayWithObject:
setServiceClass:
activeServices
connectedServices
servicesWithCapability:
connectedServicesWithCapability:
operationalServicesWithCapability:
iMessageEnabledForSenderLastAddressedHandle:simID:
_deviceIsAltAccount
supportedCountryCodes
systemSupportsSMSSending
systemSupportsSendingAttachmentsOfTypes:error:
isDiscontinued
doneSetup
disconnect
equalID:andID:
normalizedFormOfID:
compareNames:
serviceProperties
setServiceProperties:
subtypeInformationForAccount:
serviceImageData
maxAttachmentSize
_supportsDatabaseStorage
_wantsInternationizedNumbers
siblingServices
buddyNotesMaxByteLength
accountIDs
defaultsChanged:
accountClass
serviceDefaults
setServiceDefaults:
defaultAccountSettings
setDefaultAccountSettings:
supportsIDStatusLookup
supportsAudioMessages
supportsPhoneNumberMapping
supportsAuthorization
isPersistent
handlesChatInvites
supportsRegistration
ignoresNetworkConnectivity
supportsOfflineTransfers
supportsPresence
supportsMutatingGroupMembers
supportsOneSessionForAllAccounts
supportsGroupAttachments
supportsAdding
isPlugInService
allowsMultipleConnections
shouldDisableDeactivation
IDSensitivity
emailDomains
shortName
addressBookProperties
addressBookProperty
countryCode
setCountryCode:
_name
_localizedName
_localizedShortName
_countryCode
_bestAccount
_serviceDefaults
_defaultSettings
_imageData
_emailDomains
_siblingServiceNames
_screenNameSensitivity
_hasLoadedServiceProperties
_handlesChatInvites
_supportsSMS
_supportsPhoneNumberMapping
_supportsGroupAttachments
_supportsMutatingGroupMembers
_supportsOneSessionForAllAccounts
_supportsAuthorization
_supportsRegistration
_supportsAdding
_supportsPresence
_supportsIDStatusLookup
_supportsAudioMessages
_shouldInternationalizeNumbers
_supportsOfflineTransfers
_shouldDisableDeactivation
_ignoresNetworkConnectivity
_isPersistent
_isPlugInService
_allowsMultipleConnections
_abProperties
_serviceProps
_addressBookProperties
_addressBookProperty
T@"NSDictionary",&,N,V_serviceDefaults
T@"NSString",&,N,V_countryCode
TB,R,N,V_handlesChatInvites
T@"NSString",R,N,V_name
T@"NSString",R,N,V_localizedShortName
T@"NSString",R,N
T@"NSDictionary",&,N
T@"NSDictionary",&,N,V_defaultSettings
TB,R,N,V_supportsAdding
TB,R,N,V_supportsPresence
TB,R,N,V_supportsGroupAttachments
TB,R,N,V_supportsMutatingGroupMembers
TB,R,N,V_supportsOneSessionForAllAccounts
TB,R,N,V_supportsRegistration
TB,R,N,V_supportsAuthorization
TB,R,N,V_supportsPhoneNumberMapping
TB,R,N,V_supportsIDStatusLookup
TB,R,N,V_supportsOfflineTransfers
TB,R,N,V_supportsAudioMessages
TB,R,N,V_isPersistent
TB,R,N,V_ignoresNetworkConnectivity
Tq,R,N
TI,R,N,V_screenNameSensitivity
TB,R,N,V_shouldDisableDeactivation
TB,R,N,V_isPlugInService
discontinued
TB,R,N,GisDiscontinued
T@"NSArray",R,N,V_emailDomains
TB,R,N,V_allowsMultipleConnections
T@"NSData",R,N
T@"NSArray",R,N,V_addressBookProperties
T@"NSString",R,N,V_addressBookProperty
T#,R,N
aimService
subnetService
jabberService
callService
facetimeService
fileTransferGUIDs
balloonBundleID
plainBody
photoShareURLFromPluginBundleID:contentString:payload:
transferForGUID:
attributionInfo
URLWithString:
initWithMessageItem:
initWithMessageItem:chatContext:
time
_newMessagePartsForMessageItem:chatContext:
subject
text
appendAttributedString:
transferGUID
localURL
localPath
null
breadcrumbText
string
_FTOptionallyDecompressData
isSticker
isExpirable
statusText
associatedMessageGUID
hash
isEqualToPluginPayload:
encodeObject:forKey:
encodeBool:forKey:
initWithCoder:additionalAllowedClasses:
initWithObjects:
unionSet:
decodeObjectOfClass:forKey:
setText:
setBreadcrumbText:
setStatusText:
decodeBoolForKey:
setUpdate:
decodeObjectOfClasses:forKey:
setUserInfo:
setAssociatedMessageGUID:
setSticker:
allocWithZone:
datasource
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithMessage:
addAttachmentsFromFileTransferGUIDs:
addAttachmentsFromFilePaths:
shouldHideAttachments
payloadDictionary
setTime:
setConsumedSessionPayloads:
threadIdentifier
_update
_sticker
_shouldExpire
_isPlayed
_isFromMe
_text
_data
_breadcrumbText
_statusText
_userInfo
_time
_associatedMessageGUID
_pluginBundleID
_consumedSessionPayloads
_threadIdentifier
_pluginSessionGUID
_attachments
_datasource
_sender
T@"NSDate",&,N,V_time
T@"NSArray",&,N,V_consumedSessionPayloads
T@"NSString",&,N,V_associatedMessageGUID
T@"NSString",&,N,V_pluginSessionGUID
T@"NSString",&,N,V_pluginBundleID
T@"NSArray",&,N,V_attachments
T@"IMBalloonPluginDataSource",W,N,V_datasource
TB,N,V_isFromMe
TB,N,V_isPlayed
T@"NSString",C,N,V_sender
T@"NSAttributedString",&,N,V_text
T@"NSData",&,N,V_data
T@"NSString",&,N,V_breadcrumbText
T@"NSString",&,N,V_statusText
update
TB,N,GisUpdate,V_update
sticker
TB,N,GisSticker,V_sticker
TB,N,V_shouldExpire
T@"NSDictionary",&,N,V_userInfo
T@"NSString",R,N,V_threadIdentifier
isEqualToAttributedString:
_hasJustSentAMessage
watermarkDate
distantPast
compare:
compareChatByDate:
_storedWatermarkMessageID
lastFinishedMessageID
longLongValue
lastFinishedMessageDate
lastMessageTimeStampOnLoad
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
laterDate:
isEqualToDate:
_postNotification:userInfo:
watermarkMessageID
isFiltered
isCategorized
isSMS
clearSMSCategory
containsMessageFromContactOrMe
updateIsFiltered:
hasKnownParticipants
shouldBeAllowListed
hasInitializedChatFiltering
autoReportSpam
markAsAutoSpamReported
normalizedID
lastFinishedMessage
messageID
_compareChat:withDate:withDate:
_tuDateForChat:
lastTUConversationCreatedDate
updateWatermarks
saveWatermark
verifyFiltering
compareChatByTUDateAndLastFinishedMessageDate:
watermarkComparator
_NPSManagerClass
T@"NSDate",R,C,N
T@?,R,N
removeAllObjects
cleanWatermarkCache
enumerateObjectsUsingBlock:
setHasInitializedChatFiltering:
verifyFilteringForAllChats
dictionaryWithContentsOfFile:
_handleInstalledPluginsChanged
setHasPerformedFirstAppExtensionLoad:
allPlugins
bundleIDsDisplayingAttribution
__imArrayByFilteringWithBlock:
_expiryTimeout
expiredBundleIDToTimestampMap
_currentTimestamp
_purgeLeastRecentlySeenAppBundleIDsIfNecessary
_saveToFile
hasPerformedFirstAppExtensionLoad
writeToFile:atomically:
setAttributes:ofItemAtPath:error:
sortedArrayUsingComparator:
objectAtIndexedSubscript:
startExpiryTimer
didShowAttributionForBundleIDs:
shouldShowAttributionForBundleID:
setExpiredBundleIDToTimestampMap:
setBundleIDsDisplayingAttribution:
_hasPerformedFirstAppExtensionLoad
_expiredBundleIDToTimestampMap
_bundleIDsDisplayingAttribution
T@"NSMutableDictionary",&,N,V_expiredBundleIDToTimestampMap
T@"NSMutableDictionary",&,N,V_bundleIDsDisplayingAttribution
TB,N,V_hasPerformedFirstAppExtensionLoad
UTF8String
initWithOptions:capacity:
scheduleFetchIfNecessaryForHandle:
registerContactsChangeObserver:
deregisterContactsChangeObserverWithToken:
_maybePhoneNumber:
_maybeEmailAddress:
isBusiness:
_startRequestForDisplayName:messageUID:queue:
_startRequestForDisplayNameCallbackWithSuggestedName:displayName:queue:
namesForDetail:limitTo:prependMaybe:withCompletion:
immediateNameWithNeedsSuggestedNameFetch:useSuggestedName:
displayID
setSuggestedName:
fetchSuggestedRealNameForDisplayName:messageUID:queue:block:
contact
recordId
numericValue
cnContact
serviceConnection
contactMatchesByPhoneNumber:error:
contactMatchesByEmailAddress:error:
_contactForSGContactMatch:
fetchCNContactForSuggestedHandle:
firstNameForCNContact:
lastNameForCNContact:
setGivenName:
setFamilyName:
startUsingLocalLookupsWithTable:
stopUsingLocalLookups
suggestedNameFromCache:wasFound:
personNameComponentsForHandle:
_connection
_cache
_queue
_pending
_localTable
_handlesToRetry
_newContactNotificationToken
_notificationObserver
serviceForContacts
setQueuesRequestsIfBusy:
_dumpOutAllIMHandlesForAccount:
removeListener:
lock
unlock
initWithKeyOptions:valueOptions:capacity:
initWithUniqueID:service:
clearServiceCaches
syncWithRemoteBuddies
addListener:
_serviceDidConnect:
_serviceDidReconnect:
_serviceDidDisconnect:
_registrationStatusChanged:
capabilities
autoLoginAccount:
loginAccount:
_loginWithAutoLogin:
logoutAccount:
transfersForAccount:
stopTransfer:
setIMAccountLoginStatus:errorMessage:reason:
_refreshLoginIMHandle
accountType
_setString:forKey:
_updateLogin:
reason
_updateMyStatus:message:
isNull
fullName
accountDescription
canonicalFormOfID:countryCode:
addAccount:
profileInfo
_setObject:forKey:
accountPreferences
writeAccount:defaults:
_loadFromDictionary:force:
setAutoLogin:
addEntriesFromDictionary:
initWithDictionary:
_invalidateCachedAliases
compareAccountNames:
localizedCaseInsensitiveCompare:
compareIDs:
numberWithUnsignedLongLong:
dictionaryWithObjectsAndKeys:
passwordForAccount:forServiceName:
authorizationID
setPassword:forAccount:forAuthID:forServiceName:
passwordUpdatedAccount:
removePassword
setPasswordForProfileID:username:service:password:outRequestID:completionBlock:
removePasswordForAccount:forServiceName:
temporaryPasswordForAccount:forAuthID:forServiceName:
setTemporaryPassword:forAccount:forAuthID:forServiceName:
removeTemporaryPassword
fetchPasswordForProfileID:username:service:outRequestID:completionBlock:
removeTemporaryPasswordForAccount:forServiceName:
boolForKey:
isInvisible
_setBool:forKey:
stringForKey:
loginStatusMessage
substringFromIndex:
useSSL
_serverWithSSL:
integerForKey:
blockIdleStatus
setBlockIdleStatus:
invalidSettings
port
server
validLogin
validServer
validPort
requestProperty:ofPerson:account:
setValue:ofProperty:ofPerson:account:
vettedAliases
_aliases
_updateProfileInfo:
_updateRegistrationStatus:error:info:
validationErrorReasonForAlias:
_updateDisplayName:
blockingMode
blockList
allowList
setBlockList:
setBlockingMode:
setAllowList:
setBlockList:account:
setCachedBlockList:
setAllowList:account:
setCachedAllowList:
setBlockingMode:account:
setCachedBlockingMode:
setBlockIdleStatus:account:
setCachedBlockIdleStatus:
writeSettings
targetGroupStateTimeout
_groupSummaryFromGroupList:
hasTargetGroupStateBeenMet
clearTargetState
groupsChanged:error:
setWaitForTargetState
updateWithTargetGroups
nonRetainingArray
setTargetGroupsState:
makingChanges
requestGroups
hasCapability:
requestGroupsAccount:
requestBuddyPicturesAndPropertiesForAccount:
groupList
setWithObject:
changeBuddyList:add:groups:atLocation:
_ensureGroupsExists:
authRequestStatus
requestBuddyListAuthorizationFromIMHandle:
isBuddy
groups
isSubsetOfSet:
addPeople:toGroups:atLocation:
__imFirstObject
beginChanges
arrayWithArray:
removeObjectAtIndex:
insertObject:atIndex:
propertiesForGroup:
removeObjectsInArray:
reorderGroups:
endChanges
renameGroup:to:account:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_applyChangesToTemporaryCache:
changeGroups:account:
holdBuddyUpdatesAccount:
resumeBuddyUpdatesAccount:
_resumeBuddyUpdatesNow
performSelector:withObject:afterDelay:ignoreMenuTracking:
existingIMHandleWithInfo:
setCustomPictureData:key:
setShouldHidePeople:
beginNotificationQueue
allValues
buddyPropertiesChanged:
releaseNotificationQueue
hookupToDaemon
setIMAccountLoginStatus:errorMessage:
_stopRetainingAccount:
removeLoginIMHandle:
isRegistered
lastObject
containsObjectIdenticalTo:
registrationStatus
profileValidationStatus
trimmedString
_aliasIsVisible:
registerAccount:
unregisterAccount:
nameOfLoginStatus:
_notJustLoggedIn
forgetAllWatches
nowLoggedIn
nowLoggedOut
isAwaitingTargetGroupState
buddyList
beginCoalescedChanges
dictionaryWithCapacity:
imHandleWithID:
indexOfObjectIdenticalTo:
imHandle:buddyStatusChanged:
isEqualToSet:
postNotificationName:
endCoalescedChanges
watchBuddiesIfNecessary
serviceName
propertiesChanged:
imHandleWithID:alreadyCanonical:
originalID
_updateOriginalID:
_setOriginalID:
unsignedLongLongValue
_imHandleWithID:alreadyCanonical:originalID:countryCode:
initWithAccount:ID:alreadyCanonical:
defaultHandleCapabilities
_setCapabilities:
acceptSubscriptionRequest:from:account:
requestSubscriptionTo:account:
handlesForCNIdentifier:
watchingIMHandle
startWatchingIMHandle:
_watchBuddiesIfNecessary
setHasTemporaryWatch:
startWatchingBuddy:account:
stopWatchingBuddy:account:
resetCNContact
addLoginIMHandle:
cnContactWithKeys:
removeHandleFromCNIDMap:withCNID:
updateCNContact:
people
statusChanged:message:
clearSiblingCacheForIMHandle:
removeIMHandle:
isLoginIMHandle
addIMHandle:
statusChanged:
imHandleWithInfo:
setBuddyListAuthorization:forIMHandle:
dictionaryWithObject:forKey:
_postNotificationName:userInfo:
disconnectAllIMHandles
defaultChatSuffix
fetchAuthTokenForProfileID:username:service:outRequestID:completionBlock:
authenticateAccount
authenticateAccount:
enrollDeviceForSMSRelay:account:
unEnrollDeviceForSMSRelay:account:
enrollSelfDeviceForSMSRelay:
_removeObjectForKey:
setAuthTokenForProfileID:username:service:authToken:selfHandle:outRequestID:completionBlock:
updateAuthorizationCredentials:token:account:
isTelephonyDevice
telephoneNumber
profileValueForKey:
autoupdatingCurrentLocale
setProfileValue:forKey:
profileStringForKey:
validateProfileAccount:
profileValidationErrorReason
aliasesToRegister
hasAlias:
typeForAlias:
addAliases:
_setLocalCachedObject:forKey:
addAliases:account:
addAlias:
removeAliases:
removeAliases:account:
removeAlias:
addCharactersInString:
stringByRemovingCharactersFromSet:
unvalidateAliases:
unvalidateAliases:account:
validateAliases:
validateAliases:account:
validateAlias:
_aliasInfoForAlias:
validationStatusForAlias:
numberWithBool:
setObject:forPreferenceKey:
objectForPreferenceKey:
numberWithInt:
_appearsToBeDSID
allBuddyListIMHandles
systemDidBecomeIdle
systemDidBecomeUnidle
screenSaverDidStart
screenSaverDidStop
screenLocked
screenUnlocked
systemWillSleep
systemDidWake
systemDidEnterMemoryPressure
systemDidLeaveMemoryPressure
systemWillShutdown
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidBecomeActive
systemApplicationWillResignActive
systemApplicationDidSuspend
systemApplicationDidResume
systemApplicationDidSuspendForEventsOnly
systemApplicationDidResumeForEventsOnly
notificationCenterWillAppear
notificationCenterDidDisappear
systemDidStartBackup
systemDidStopBackup
systemDidFinishMigration
systemRestoreStateDidChange
systemDidFastUserSwitchOut
systemDidFastUserSwitchIn
systemDidLogout
systemDidLock
systemDidUnlock
systemScreenDidPowerUp
systemScreenDidPowerDown
systemDidLeaveFirstDataProtectionLock
systemDidLeaveDataProtectionLock
systemDidEnterDataProtectionLock
autoLoginAccount
loginAccount
logoutAccount
loginStatusChanged:message:reason:properties:
setLogin:
setCurrentAccountStatus:
myNowPlayingString
setUniqueID:
accountImageData
resetToDefaults
emailAddressIsID:
compareLoginStatus:
compareStatus:
compareServices:
updateCapabilities:
password
setPassword:
temporaryPassword
setTemporaryPassword:
setInvisible:
setAccountDescription:
hasCustomDescription
autoLogin
goIdle
setGoIdle:
allowsVCRelay
setAllowsVCRelay:
isSMSRelayCapable
canActivate
isManaged
requestProperty:ofIMHandle:
setValue:ofExtraProperty:ofIMHandle:
loadFromDictionary:
blockMessages:fromID:
blockOtherAddresses
setBlockOtherAddresses:
removePeople:fromGroups:
addIMHandle:toGroups:atLocation:
removeIMHandle:fromGroups:
addBuddyToBuddyList:
renameGroup:to:
reorderGroup:order:
groupMembers:
memberGroups:
holdBuddyUpdates
resumeBuddyUpdates
buddyPictureChanged:imageData:imageHash:
setBuddyProperties:buddyPictures:
accountWillBeRemoved
accountDidBecomeActive
accountDidDeactivate
isOperational
canSendMessages
registrationFailureAlertInfo
registrationFailureReason
registerAccount
unregisterAccount
isConnecting
isConnected
setIsActive:
recalculatedSubtypeInfo
_clearImageCache
recalculateSubtypeInfo
imHandleClass
imHandleWithInfo:alreadyCanonical:
existingIMHandleWithInfo:alreadyCanonical:
imHandleWithID:countryCode:
existingIMHandleWithID:countryCode:
sortOrderForIMHandle:inGroup:
handlesForCNContact:
stopWatchingIMHandle:
registerIMHandle:
unregisterIMHandleWithID:
handleSubscriptionRequestFrom:withMessage:
chatIDForRoomName:
validityOfChatRoomName:
authorizationToken
requestNewAuthorizationCredentials
enrollDeviceInSMSRelay:
unEnrollDeviceInSMSRelay:
enrollSelfDeviceInSMSRelay
updateAuthorizationCredentials:token:
removeProfileValueForKey:
setProfileString:forKey:
validateProfile
_statuses
isMakoAccount
hasAlias:type:
aliasesForType:
addAlias:type:
removeAlias:type:
unvalidateAlias:
validateAlias:type:
validationStatusForAlias:type:
validationErrorReasonForAlias:type:
setDictionaryData:forKey:
_setDictionaryData:forKey:
dictionaryDataForKey:
setString:forKey:
setBool:forKey:
setInteger:forKey:
_setInteger:forKey:
isAsleep
_persistentProperties
_persistentPropertyForKey:
_setPersistentPropertyObject:forKey:
_removePersistentPropertyForKey:
removeObjectForPreferenceKey:
setDictionaryData:forPreferenceKey:
dictionaryDataForPreferenceKey:
stringForPreferenceKey:
setString:forPreferenceKey:
boolForPreferenceKey:
setBool:forPreferenceKey:
integerForPreferenceKey:
setInteger:forPreferenceKey:
setDisplayName:
strippedLogin
myStatusDictionary
myProfile
myStatusMessage
myPictureData
myIdleSince
accountSubtypeInfo
loginIMHandle
justLoggedIn
_buddyList
_lock
_imHandles
_loginIMHandle
_cachedAllowList
_cachedBlockList
_loginID
_displayName
_uniqueID
_accountType
_strippedLogin
_dataChanges
_localCache
_profile
_profileChanges
_profileStatus
_accountPreferences
_accountPreferencesChanges
_accountPersistentProperties
_accountPersistentPropertiesChanges
_groups
_sortOrders
_members
_coalescedChanges
_targetGroupState
_lastReceivedGroupState
_subtypeInfo
_vettedAliases
_myStatus
_currentAccountStatus
_myStatusMessage
_myNowPlaying
_myIdleSince
_myPictureData
_accountImageData
_capabilities
_defaultHandleCapabilities
_hasCheckedDefaultHandleCapabilities
_myProfile
_registrationStatus
_registrationFailureReason
_registrationAlertInfo
_loginStatus
_isActive
_hasPostedOfflineNotification
_justLoggedIn
_useMeCardName
_cachedBlockingMode
_blockIdleStatus
_syncedWithRemoteBuddyList
_hasReceivedSync
_numHolding
_coalesceCount
_needToCheckForWatchedIMHandles
_iconChecked
_hasBeenRemoved
_service
_smallImage
_accountImage
_asleep
T@"NSDictionary",R,N
T@"IMServiceImpl",R,W,N,V_service
T@"NSDictionary",R,N,V_subtypeInfo
makoAccount
TB,R,N,GisMakoAccount
T@"NSString",C,N
T@"NSString",&,N
TQ,R,N,V_loginStatus
TQ,R,N,V_myStatus
T@"NSString",R,N,V_myStatusMessage
T@"NSDictionary",R,N,V_currentAccountStatus
T@"NSDate",R,N,V_myIdleSince
T@"NSData",R,N,V_myPictureData
T@"NSAttributedString",R,N,V_myProfile
T@"NSString",&,N,V_loginID
T@"NSString",R,N,V_strippedLogin
TB,R,N,V_justLoggedIn
invisible
TB,N,GisInvisible
TB,R,N,V_isActive
TQ,R,N,V_capabilities
T@"IMPeople",R,N,V_buddyList
T@"NSArray",&,N
TI,N,V_cachedBlockingMode
TB,N,V_blockIdleStatus
T@,R,N,V_loginIMHandle
notifyOfInteractionWithPeople:
notifyInteractionWithPeople:
groupHashForChat:
unmuteDateForChat:
unmuteDateForIdentifier:
groupHashForHandleIDs:
dndIdentifiersForChat:
currentList
muteChat:untilDate:syncToPairedDevice:
muteChat:usingIdentifier:untilDate:syncToPairedDevice:
dictionaryWithDictionary:
isEqualToNumber:
setValue:forKey:
syncToPairedDeviceIncludingVersion:
_updateGroupID:toGroupID:forChat:
sharedList
isMutedChat:
isMutedChatIdentifier:handleIDs:style:isSMS:
muteChat:untilDate:
_handleDNDListChanged
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setupComplete:info:
setupComplete
pendingVCRequestComplete
pendingACRequestComplete
vcCapabilitiesChanged:
defaultsChanged:forService:
activeAccountsChanged:forService:
account:defaults:blockList:allowList:blockingMode:blockIdleStatus:status:capabilities:serviceLoginStatus:loginStatusMessage:
account:loginStatusChanged:message:reason:properties:
account:defaultsChanged:
account:capabilitiesChanged:
accountAdded:defaults:service:
accountRemoved:
account:buddyPropertiesChanged:
account:blockListChanged:
account:allowListChanged:
account:blockingModeChanged:
account:blockIdleStatusChanged:
account:buddyPictureChanged:imageData:imageHash:
account:groupsChanged:error:
account:buddyProperties:buddyPictures:
account:handleSubscriptionRequestFrom:withMessage:
networkDataAvailabilityChanged:
chat:updated:
chat:propertiesUpdated:
chat:chatPersonCentricID:displayNameUpdated:
chat:chatPersonCentricID:displayNameUpdated:sender:
chat:lastAddressedHandleUpdated:
chat:lastAddressedSIMIDUpdated:
chat:isFilteredUpdated:
chat:engramIDUpdated:
chat:nicknamesUpdated:
chat:uncachedAttachmentCountUpdated:
leftChat:
engroupParticipantsUpdatedForChat:
loadedChats:
loadedChats:queryID:
markedAsReadForMessageGUID:success:queryID:
forcedReloadingChatRegistryWithQueryID:
chatsNeedRemerging:groupedChats:
account:chat:style:chatProperties:invitationReceived:
account:chat:style:chatProperties:updateProperties:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messageSent:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messageReceived:
account:chat:style:chatProperties:groupID:chatPersonCentricID:messagesReceived:messagesComingFromStorage:
account:chat:style:chatProperties:messageUpdated:
account:chat:style:chatProperties:notifySentMessage:sendTime:
account:chat:style:chatProperties:messagesUpdated:
service:chat:style:messagesUpdated:
account:chat:style:chatProperties:error:
account:chat:style:chatProperties:groupID:chatPersonCentricID:statusChanged:handleInfo:
account:chat:style:chatProperties:chatPersonCentricID:member:statusChanged:
messageQuery:finishedWithResult:chatGUIDs:
messageItemQuery:finishedWithResult:chatGUIDs:
historyQuery:chatID:services:finishedWithResult:limit:
pagedHistoryQuery:chatID:services:numberOfMessagesBefore:numberOfMessagesAfter:finishedWithResult:hasMessagesBefore:hasMessagesAfter:
attachmentQuery:chatID:services:finishedWithResult:
uncachedAttachmentCountQuery:chatID:services:finishedWithResult:
isDownloadingQuery:chatID:services:finishedWithResult:
downloadedPurgedAssetBatchForChatIDs:completedTransferGUIDs:
finishedDownloadingPurgedAssetsForChatIDs:
markAsSpamQuery:chatID:services:finishedWithResult:
historicalMessageGUIDsDeleted:chatGUIDs:queryID:
frequentRepliesQuery:chatID:services:finishedWithResult:limit:
_automation_markAsReadQuery:finishedWithResult:
chatLoadedWithChatIdentifier:chats:
previouslyBlackholedChatLoadedWithChatIdentifier:chats:
previouslyBlackholedChatLoadedWithHandleIDs:chat:
blackholedChatsExist:
groupPhotoUpdatedForChatIdentifier:style:account:userInfo:
fileTransfer:createdWithProperties:
fileTransfer:updatedWithProperties:
fileTransfers:createdWithLocalPaths:
fileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
fileTransfer:highQualityDownloadSucceededWithPath:
fileTransferHighQualityDownloadFailed:
fileTransfer:explicitDownloadSucceededWithPath:livePhotoBundlePath:
fileTransferExplicitDownloadFailed:suggestedRetryGUID:error:
account:conference:receivedInvitationFrom:properties:
account:conference:receivedResponseToInvitationFrom:properties:
account:conference:receivedCancelInvitationFrom:properties:
account:conference:receivedCounterProposalFrom:properties:
account:conference:receivedUpdateFrom:data:
account:conference:receivedAVMessage:from:sessionID:userInfo:
account:conference:changedToNewConferenceID:
account:conference:peerIDChangedFromID:toID:
account:conference:peerID:propertiesUpdated:
account:conference:invitationSentSuccessfully:
account:avAction:withArguments:toAVChat:isVideo:
showInvalidCertNotificationForAccount:
showForgotPasswordNotificationForAccount:
property:changedTo:from:
persistentProperty:changedTo:from:
account:statusChanged:
account:postedError:
account:relay:handleInitate:fromPerson:
account:relay:handleUpdate:fromPerson:
account:relay:handleCancel:fromPerson:
databaseUpdated
databaseUpdated:
databaseChatSpamUpdated:
unreadCountChanged:
lastFailedMessageDateChanged:
displayPinCodeForAccount:pinCode:deviceName:deviceType:phoneNumber:
pinCodeAlertCompleted:deviceName:deviceType:phoneNumber:responseFromDevice:wasCancelled:
stickerPackUpdated:
stickerPackRemoved:
qosClassWhileServicingRequestsResponse:identifier:
nicknameRequestResponse:encodedNicknameData:
updateNicknameData:
updatePendingNicknameUpdates:handledNicknameUpdates:
updateNicknameHandlesForSharing:blocked:
handlesSharingNicknamesDidChange
pendingNicknamesOrHandledNicknamesDidChange
updatePersonalNickname:
updateCloudKitState
updateCloudKitStateWithDictionary:
didAttemptToSetEnabledTo:result:
didPerformAdditionalStorageRequiredCheckWithSuccess:additionalStorageRequired:forAccountId:error:
didAttemptToDisableAllDevicesResult:
didFetchSyncStateStats:
didFetchRampState:
didAttemptToDisableiCloudBackups:error:
oneTimeCodesDidChange:
receivedUrgentRequestForMessages:
didFetchCloudKitSyncDebuggingInfo:
screenTimeEnablementChanged:
lastMessageForAllChats:
lastMessageForChats:
initWithProtocol:
removeObjectIdenticalTo:
_reallyProcessMyStatusChanged
bestAccountForStatus
myPictureChanged
_copyForEnumerating
myPictureDataChanged:
connectedAccounts
charValue
account:chat:style:chatProperties:messageReceived:
account:chat:style:chatProperties:messagesReceived:
isHoldingChatMessages
_processDeferredInvitationDictionary:
setReadOnly:
activateAccount:locally:
_deactivateAccount:
_processMyStatusChanged
addAccount:locally:
deleteAccount:locally:
setNetworkDataAvailable:
shouldHoldChatMessages
numberWithChar:
_deferNotification:
capabilitiesForListenerID:
_handleFileTransfer:createdWithProperties:
_handleFileTransfers:createdWithLocalPaths:
_handleFileTransfer:updatedWithProperties:
_handleFileTransfer:updatedWithCurrentBytes:totalBytes:averageTransferRate:
_handleFileTransfer:highQualityDownloadSucceededWithPath:
_handleFileTransferHighQualityDownloadFailed:
_handleFileTransfer:explicitDownloadSucceededWithPath:livePhotoBundlePath:
_handleFileTransferExplicitDownloadFailed:suggestedRetryGUID:error:
_cacheValue:forProperty:
_cacheValue:forPersistentProperty:
account:status:capabilities:serviceLoginStatus:loginStatusMessage:
sendABInformationToDaemon
_servicesToAllow
_servicesToDeny
services:properties:persistentProperties:
deactivateAccount:withDisable:
service:properties:defaults:defaultAccountSettings:allAccounts:activeAccounts:
_setStamp:forContext:
_handleAllFileTransfers:
_warmupQueryCacheForService:
rebuildIMHandles
_deferredSetup:
performSelector:withObject:afterDelay:inModes:
_handleCachingAliasToCNIDMap:
_handleMergedChatReconstructions:
_handleChatReconstructions:
_updateBlackholedChatsExist:
_daemonCompletedDeferredSetup
_hidingDisconnect
requestPendingMessages
requestLastMessagesForChats
_flushQueryCacheForService:
_noteSetupComplete
localizedDescription
methodSignatureForSelector:
selector
invokeWithTarget:
numberWithUnsignedInt:
_didAttemptToSetEnabledTo:result:
_didPerformAdditionalStorageRequiredCheckWithSuccess:additionalStorageRequired:forAccountId:error:
_didAttemptToDisableAllDevicesResult:
_updateCloudKitState
_updateCloudKitStateWithDictionary:
initWithDictionaryRepresentation:
enumerateKeysAndObjectsUsingBlock:
updatePendingNicknames:handledNicknames:
handleSharingListsDidChange
updateSharingAllowList:denyList:
nicknameStoreDidChange
_noteDisconnected
addHandler:
removeHandler:
holdChatMessages
releaseHeldChatMessages
_stampForContext:
valueOfProperty:
valueOfPersistentProperty:
forwardInvocation:
_resetPostedSetupCompleted
_contexts
_setHidingDisconnect:
handlers
isSetupComplete
vcCapabilities
hasPostedSetupComplete
properties
persistentProperties
_properties
_deferredChatMessages
_handlers
_protocol
_services
_myPicture
_myNowPlayingString
_vcCapabilities
_setupComplete
_postedSetupComplete
_holdingChatMessages
_hasPendingProcessChange
TB,R,N,V_setupComplete
TB,R,N,V_postedSetupComplete
T@"NSArray",R,N,V_handlers
T@"NSMutableDictionary",R,N,V_contexts
TB,N,S_setHidingDisconnect:,V_hidingDisconnect
T@"NSDictionary",R,N,V_properties
T@"NSDictionary",R,N,V_persistentProperties
TI,R,N
TQ,R,N,V_vcCapabilities
TB,R,N,V_holdingChatMessages
setTotalChatCount:
setSyncedChatCount:
setTotalMessageCount:
setSyncedMessageCount:
setTotalAttachmentCount:
setSyncedAttachmentCount:
setTotalRecordCount:
setSyncedRecordCount:
setNumberStyle:
setMaximumFractionDigits:
setMinimumSignificantDigits:
setMaximumSignificantDigits:
setRoundingIncrement:
setRoundingMode:
stringFromNumber:
calculatePercentageOfTotal:count:
percentStringFromDouble:
totalRecordCount
syncedRecordCount
percentStringFromTotal:count:
percentSynced
_statsString:count:total:
syncedChatCount
totalChatCount
syncedMessageCount
totalMessageCount
syncedAttachmentCount
totalAttachmentCount
initWithStatisticsDictionary:
_syncedChatCount
_totalChatCount
_syncedAttachmentCount
_totalAttachmentCount
_syncedMessageCount
_totalMessageCount
_totalRecordCount
_syncedRecordCount
TQ,N,V_syncedChatCount
TQ,N,V_totalChatCount
TQ,N,V_syncedAttachmentCount
TQ,N,V_totalAttachmentCount
TQ,N,V_syncedMessageCount
TQ,N,V_totalMessageCount
TQ,N,V_totalRecordCount
TQ,N,V_syncedRecordCount
Td,R,N
_createSyncStatisticsDictionary:messageSyncCount:chatCount:chatSyncCount:attachmentCount:attachmentSyncCount:
_syncStatisticsDictionary
_createSyncStatisticsDictionaryForSyncControllerSyncState:syncType:count:max:
existingConversationForTelephonyConversationUUID:
__im_associatedMessageSummary
rangeOfComposedCharacterSequenceAtIndex:
substringToIndex:
__im_adjustMessageSummaryInfoForSending:
sendMessageAcknowledgment:forChatItem:withMessageSummaryInfo:withGuid:
message
generateBackwardCompatibilityStringForMessageAcknowledgmentType:messageSummaryInfo:
messagePartRange
itemIsThreadOriginatorWithThreadIdentifier:
instantMessageWithAssociatedMessageContent:flags:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:
__im_associatedMessageContentType
trackEvent:
sendMessage:
sendMessageAcknowledgment:forChatItem:withMessageSummaryInfo:
associatedMessageType
_displayNameWithAbbreviation
messageSummaryInfo
generatePreviewStringForMessageAcknowledgmentType:acknowledgmentDisplayName:isFromMe:messageSummaryInfo:
sendMessageAcknowledgment:forChatItem:withAssociatedMessageInfo:
sendMessageAcknowledgment:forChatItem:withAssociatedMessageInfo:withGuid:
messageAcknowledgmentSummaryForConversationListWithMessage:
createItemForPHAssetWithUUID:parentChatItemGUID:chatGUID:
createIMChatItemForTransientAttachmentWithAssetUUID:parentChatItemGUID:
_createSingleton__im
__setSingleton__im:
_syncStateDidChange:
logHandle
previousState
accountHasiMessageEnabled
cloudKitHooks
syncStateDictionary
initWithAccountEnabled:stateDictionary:
cloudKitEventNotificationManager:syncStateDidChange:
visitEventHandlers:
syncStateWithDictionary:
setPreviousState:
_sendSyncStateChangedEventToEventListeners:
_updateProgressWithState:
broadcastCloudKitState
broadcastCloudKitStateAfterFetchingAccountStatus
notificationManager
createEventListenerForNotificationName:object:
startListeningForEventTarget:sendStartingEvent:completion:
fetchLatestRampState
broadcastCloudKitStateAfterClearingErrors
startInitialSync
didSucceed
cloudKitEventNotificationManager:didChangeEnabled:error:
setEnabled:
accountInfoProvider
cloudKitEventNotificationManagerAccountHasiMessageEnabled:
initiatePeriodicSync
initiateSync
standardUserDefaults
cloudKitEventNotificationManager:didDisableAllDevices:error:
tryToDisableAllDevices
cloudKitEventNotificationManager:didPerformAdditionalStorageRequiredCheck:additionalStorageRequired:forAccountId:error:
performAdditionalStorageRequiredCheck
fetchSyncStateStatistics
cloudKitEventNotificationManager:didFetchSyncStatistics:error:
_sendSyncStatisticsToEventHandlers:error:
_fetchSyncStateStatistics:
fetchStatsTimer
invalidate
setFetchStatsTimer:
fetchSyncState
cloudKitEventNotificationManager:syncProgressDidUpdate:
progressPollingInterval
_cancelStatsFetchingTimer
_timerExpiredForSyncStatsFetching:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
progressToSend
setProgressToSend:
progressBroadcastDelay
broadcastDeferralOverride
_sendProgressToEventListenersDeferred
_sendProgressToEventListeners:
_hasProgressEventListeners
shouldFetchSyncStatistics
createSyncProgressWithSyncStatistics:
shouldRescheduleSyncSyncProgress
_rescheduleFetchSyncProgress
_sendHiddenProgressToEventListeners
cloudKitEventNotificationManager:didFetchSyncDebuggingInfo:
fetchCloudKitSyncStateDebuggingInfo:
__singleton__im
addEventHandler:
removeEventHandler:
syncState
fetchSyncStateAfterFetchingAccountStatus
fetchSyncStateWithCompletion:
fetchRampStateWithCompletion:
fetchSyncStateAfterClearingErrors
fetchSyncStateAfterClearingErrorsWithRepairSuccess:completion:
setCloudKitSyncEnabled:
setCloudKitSyncEnabled:withCompletion:
startPeriodicSync
didPromptForCloudKitSync
setDidPromptForCloudKitSync:
disableAllSyncEnabledCloudKitDevices
fetchSyncStateStatisticsWithCompletion:
fetchSyncDebuggingInfo:
setAccountInfoProvider:
setProgressPollingInterval:
eventHandlers
setNotificationManager:
_accountInfoProvider
_progressPollingInterval
_eventHandlers
_notificationManager
_fetchStatsTimer
_previousState
_progressToSend
T@"IMWeakReferenceCollection",R,V_eventHandlers
T@"IMEventNotificationManager",&,V_notificationManager
T@"NSTimer",W,V_fetchStatsTimer
T@"IMCloudKitSyncState",&,V_previousState
T@"IMCloudKitSyncProgress",&,V_progressToSend
T@"<IMCloudKitEventHandlerAccountInfoProvider>",W,V_accountInfoProvider
Td,V_progressPollingInterval
T@"IMCloudKitSyncState",R
processInfo
environment
_initWithItems:
_trimIfNeeded
_itemsDidChange:
assignSortIDsToItems:shouldRecalculateSortIDForAllMessages:
setSortID:
_shouldPinUnsentMessagesToBottom
unsentIsFromMeItem
isTypingMessage
assignSortIDsToItems:
_replaceStaleTypingMessage
__im_dateWithCurrentServerTime
_replaceItems:
_items
sortID
reverseObjectEnumerator
isFirstMessageCandidate
isLastMessageCandidate
characterSetWithCharactersInString:
body
_charactersToIgnoreWhenParsingTextContent
_lastIncomingFinishedMessageWithTextContent
timeIntervalSinceDate:
appendFormat:
enumerateObjectsWithOptions:usingBlock:
lastMessageItem
initWithIndexesInRange:
objectsAtIndexes:
arrayByAddingObjectsFromArray:
firstMessageItem
setCapacity:
isMoreToLoad
_handleItem:forChatStyle:
_removeItem:
_removeAllItems
_resortItems
_setSortID:
_indexOfItem:
_member:
_typingMessage
_firstMessage
_lastMessage
_lastSentMessage
_lastFinishedMessage
_lastIncomingMessage
_lastIncomingFinishedMessage
_lastRelatedIncomingFinishedMessageTextContentWithLimit:
_appendArchivedItemsToItemsArray:
capacity
_capacity
T@"NSArray",R,C,N
TQ,N,V_capacity
type
T@"IMMessageItem",R,N
_setAutoReconnect:
_addressBookChanged:
autoLoginActiveAccountsIfNecessary
loginAllAccounts
logoutAllAccounts
terminateForcingIfNeeded:
changeMyStatus:forAccount:
setValue:ofProperty:
setValue:ofPersistentProperty:
setVCCapabilities:
requestPendingVCInvites
requestPendingACInvites
activateAccounts:
deactivateAccounts:
addAccount:defaults:service:
removeAccount:
requestNetworkDataAvailability
sendStandaloneFileTransfer:
deleteFileTransferWithGUID:
downloadHighQualityVariantOfFileTransferWithGUID:
fileTransfer:acceptedWithPath:autoRename:overwrite:options:
fileTransferStopped:
fileTransferRemoved:
markAttachment:sender:recipients:isIncoming:
retrieveLocalFileURLForFileTransferWithGUID:options:
inviteHandleIDToShareMyScreen:isContact:
askHandleIDToShareTheirScreen:isContact:
setListenerCapabilities:
loadMessageWithGUID:queryID:
loadMessageItemWithGUID:queryID:
loadHistoryForIDs:style:onServices:limit:beforeGUID:afterGUID:threadIdentifier:chatID:queryID:
loadPagedHistoryForGUID:chatIdentifiers:style:onServices:numberOfMessagesBefore:numberOfMessagesAfter:threadIdentifier:chatID:queryID:
deleteMessageWithGUIDs:queryID:
clearHistoryForIDs:style:onServices:beforeGUID:afterGUID:chatID:queryID:
markAsSpamForIDs:style:onServices:chatID:queryID:autoReport:
updateMessage:
updateMessage:withIndexesOfDeletedItems:withIndexToRangeMapOfDeletedItems:
markMessageAsCorrupt:setCorrupt:
markReadForMessageGUID:callerOrigin:queryID:
forceReloadChatRegistryWithQueryID:
_automation_markMessagesAsRead:messageGUID:forChatGUID:fromMe:queryID:
markReadForIDs:style:onServices:messages:clientUnreadCount:
markReadForIDs:style:onServices:messages:clientUnreadCount:setUnreadCountToZero:
playSendSoundForMessageGUID:callerOrigin:
storeItem:inChatGUID:
markPlayedForMessageGUID:
markPlayedForIDs:style:onServices:message:
markPlayedExpressiveSendForIDs:style:onServices:message:
markSavedForMessageGUID:
markSavedForIDs:style:onServices:message:
sendNotifyRecipientCommandForIDs:style:onServices:message:
markHasHadSuccessfulQueryForIDs:style:onServices:
updateUnformattedID:forBuddyID:onService:
loadFrequentRepliesForIDs:style:onServices:limit:chatID:queryID:
loadUnreadForIDs:style:onServices:limit:fallbackGUID:chatId:queryID:
loadAttachmentsForIDs:style:onServices:chatID:queryID:
loadUncachedAttachmentCountForIDs:style:onServices:chatID:queryID:
downloadPurgedAttachmentsForIDs:style:onServices:chatID:
loadIsDownloadingPurgedAttachmentsForIDs:style:onServices:chatID:queryID:
initiateQuickSwitch
cleanupAttachments
chat:updateProperties:
chat:updateDisplayName:
chat:updateIsFiltered:
chat:updateIsBlackholed:
chat:updateLastAddressHandle:
chat:updateLastAddressedSIMID:
silenceChat:untilDate:
removeChat:
loadAllChats
loadChatWithGUID:queryID:
loadChatsFilteredUsingPredicate:queryID:
loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:queryID:
loadChatsWithIdentifier:queryID:
loadChatsWithGroupID:queryID:
loadChatsWithHandleIDs:groupID:displayName:style:queryID:
loadChatWithChatIdentifier:
unblackholeAndLoadChatWithHandleIDs:
debugUpdateGroupParticipantversion:chatIdentifier:
purgeAttachmentsForChatGUID:
autoReconnectAccount:
sendMappingPacket:toHandle:account:
changeGroup:changes:account:
joinChatID:handleInfo:identifier:style:joinProperties:account:
joinChatID:handleInfo:identifier:style:groupID:lastAddressedHandle:lastAddressedSIMID:joinProperties:account:
leaveChatID:identifier:style:account:
leaveiMessageChatID:identifier:style:account:
removeChatID:identifier:style:account:
invitePersonInfo:withMessage:toChatID:identifier:style:account:
invitePersonInfoToiMessageChat:withMessage:toChatID:identifier:style:account:
removePersonInfo:chatID:identifier:style:account:
removePersonInfoFromiMessageChat:chatID:identifier:style:account:
declineInvitationToChatID:identifier:style:account:
sendGroupPhotoUpdate:toChatID:identifier:style:account:
retryGroupPhotoUpload:toChatID:identifier:style:account:
eagerUploadTransfer:recipients:
eagerUploadCancel:
sendMessage:toChatID:identifier:style:account:
logDumpAndSendMessageTo:forHours:
_automation_sendDictionary:options:toHandles:
_automation_receiveDictionary:fromID:
sendStickerAtPath:toChatID:forNBubbleFromTheBottom:atX:atY:scale:balloonWidth:
sendReadReceiptForMessage:toChatID:identifier:style:account:
sendPlayedReceiptForMessage:toChatID:identifier:style:account:
sendSavedReceiptForMessage:toChatID:identifier:style:account:
sendSyndicationAction:toChatsWithIdentifiers:
removeMessagePartRangeFromSyndication:messageItem:
unhideSyndicationForMessagePartRange:messageItem:
setProperties:ofParticipant:inChatID:identifier:style:account:
sendNotificationMessageToUniqueID:withCommand:
sendCommand:withProperties:toPerson:account:
sendCommand:withProperties:toPerson:account:toChatID:identifier:style:
requestVCWithPerson:properties:conference:account:
respondToVCInvitationWithPerson:properties:conference:account:
cancelVCRequestWithPerson:properties:conference:account:
cancelVCRequestWithPerson:properties:conference:reason:account:
sendCounterProposalToPerson:properties:conference:account:
sendVCUpdate:toPerson:conference:account:
sendAVMessageToPerson:sessionID:type:userInfo:conference:account:
relay:sendInitateRequest:toPerson:account:
relay:sendUpdate:toPerson:account:
relay:sendCancel:toPerson:account:
importMessage:isRead:
downloadStickerWithGUID:
downloadStickerPackWithGUID:isIncomingMessage:ignoreCache:
replayMessagesFromDatabasePath:
beginRecordingMessagesToReplayDatabase:
stopRecordingMessagesReplayDatabase
requestQOSClassWhileServicingRequestsWithID:
createChatZone
deleteChatZone
writeDirtyChats
syncChats
markAllChatsAsDirty
clearChatZoneSyncToken
createAttachmentZone
deleteAttachmentZone
writeAttachments
syncAttachments
downloadAttachmentAssets
writeDirtyMessages
deleteMessagesZone
syncMessages
loadDirtyMessagesWithLimit:
loadDeletedMessagesWithLimit:
writeExitRecord
fetchExitRecord
deleteExitRecord
clearLocalCloudKitSyncState
clearDataFromCloudKit
sendRestoreFailuresLogDumps
setCloudKitEnabled:
uploadDailyAnalyticstoCloudKit
clearAnalyticDefaultsAndLocalSyncState
fetchAccountStatusAndUpdateMiCSwitchEligibility
fetchLatestSalt
printCachedSalt
deleteSalt
purgeAttachments:
metricAttachments:
updateAttachmentFileSizes
writeCloudKitSyncCounts:
reportMetricToCK:withDict:
toggleiCloudBackupsIfNeeded
setiCloudBackupsDisabled:
removePathFromiCloudBackups:
printCachedRampState
syncDeletesToCloudKit
tryToAutoCollectLogsWithErrorString:sendLogsTo:
closeSessionChatID:identifier:style:account:
requestOneTimeCodeStatus
consumeCodeWithMessageGUID:
simulateOneTimeCodeArriving:
fetchNicknames
fetchHandleSharingState
clearPendingNicknameUpdatesForHandleIDs:
ignorePendingNicknameUpdatesForHandleIDs:
allowHandleIDsForNicknameSharing:onChatGUIDs:
denyHandleIDsForNicknameSharing:
nicknamePreferencesDidChange
fetchPersonalNickname
setNewPersonalNickname:
userNicknameForRecordID:decryptionKey:requestID:
markAllNicknamesAsPending
simulateMessageReceive:serviceName:groupID:handles:sender:
simulateMessageReceive:serviceName:groupID:handles:sender:date:associatedMessageType:associatedMessageGuid:
preWarm
requestScreenTimeAvailability
initWithDaemonController:synchronousReplies:
initWithDaemonController:
__setCapabilities:
_handleReceivedQOSClassWhileServicingRequestsNotification:
requestQOSClassCompletionBlocks
setRequestQOSClassCompletionBlocks:
unsignedIntValue
removeObserver:
_localObjectCleanup
_remoteObjectCleanup
_disconnectFromDaemonWithForce:
isNonUIInstall
isInternalInstall
fixImagentPriorityInversion
connection
initWithConnection:protocol:alreadyConfigured:forceSecureCoding:
mainThread
__im_performBlock:modes:
systemIsShuttingDown
_blocksConnectionAtResume
__isLocalObjectValidOnQueue:
__isRemoteObjectValid
remoteObjectExists
initWithTarget:connection:protocol:forceSecureCoding:
setAllowlistedClasses:
remoteObjectDiedNotification:
localObjectDiedNotification:
standardControls
prewarmingBlock
setPrewarmingBlock:
__im_performBlock:
daemonControllerWillConnect
defaultBroadcaster
blockUntilSendQueueIsEmpty
_blockUntilSendQueueIsEmpty
localObjectExists
makeObjectsPerformSelector:
daemonControllerDidDisconnect
daemonConnectionLost
connectToDaemon
_autoReconnect
daemonControllerDidConnect
_makeConnectionWithLaunch:completionBlock:
_connectToDaemonWithLaunch:capabilities:
connectToDaemonWithLaunch:capabilities:blockUntilConnected:
hasListenerForID:
setCapabilities:forListenerID:
_listenerSetUpdated
setMyStatus:message:forAccount:
initWithObjectsAndKeys:
setActive:
_addEarlyListener:
_removeEarlyListener:
IMCoreSetupTimingCollection
startTimingForKey:
_connectionTimeout
processName
stopTimingForKey:
isValid
setTarget:
setQueryContext:
unsetQueryContext:
currentThread
threadDictionary
consumeQueryContext:
setSync:
setNeedReply:
broadcastProxyForTarget:messageContext:protocol:
retainArguments
sharedController
_applicationWillTerminate
_setApplicationWillTerminate
requestQOSClassOfAgentWhileServicingRequests:
_agentDidLaunchNotification:
_handleDaemonException:
killDaemon
disconnectFromDaemonWithForce:
disconnectFromDaemon
addListenerID:capabilities:
removeListenerID:
_remoteObject
setMyPicture:smallPictureData:
setMyStatus:message:
_setBlocksConnectionAtResume:
_acquiringDaemonConnection
listener:setListenerCapabilities:
listener:setValue:ofProperty:
listener:setValue:ofPersistentProperty:
setDaemonTerminatesWithoutListeners:
setDaemonLogsOutWithoutStatusListeners:
sendQueryWithReply:query:
delegate
setDelegate:
_listenerID
_setListenerID:
_setServicesToAllow:
_setServicesToDeny:
_remoteMessageQueue
synchronousReplyingRemoteDaemon
replyingRemoteDaemon
queryController
isRequestingConnection
_delegate
_listenerMap
_localObject
_daemonListener
_listenerLockQueue
_remoteDaemonLock
_localObjectLockQueue
_daemonConnectionQueue
_connectionLock
_runLoopSource
_blockingLock
_hasCheckedForDaemon
_preventReconnect
_inBlockingConnect
_hasBeenSuspended
_gMyFZListenerCapabilities
_cachedCapabilities
_lastUpdatedCapabilities
_requestingConnection
_synchronousReplyingRemoteDaemon
_replyingRemoteDaemon
_queryController
_requestQOSClassCompletionBlocks
_prewarmingBlock
TI,S__setCapabilities:,V_gMyFZListenerCapabilities
TB,S_setAutoReconnect:,V_autoReconnect
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
T@"NSArray",&,S_setServicesToAllow:,V_servicesToAllow
T@"NSArray",&,S_setServicesToDeny:,V_servicesToDeny
T@"NSString",&,N,S_setListenerID:,V_listenerID
T@,W,N,V_delegate
TB,N,S_setBlocksConnectionAtResume:,V_blocksConnectionAtResume
requestingConnection
TB,R,N,GisRequestingConnection,V_requestingConnection
T@"NSMutableDictionary",&,N,V_requestQOSClassCompletionBlocks
T@?,C,N,V_prewarmingBlock
T@"<IMRemoteDaemonProtocol>",R,N,V_synchronousReplyingRemoteDaemon
T@"<IMRemoteDaemonProtocol>",R,N,V_replyingRemoteDaemon
T@"IMDaemonQueryController",R,N,V_queryController
T@"IMDaemonListener",R,N,V_daemonListener
stringFromAutomationErrorCode:
errorWithDomain:code:userInfo:
chatWithHandles:
bestiMessageAccount
existingChatWithGroupID:
chatForHandles:error:results:
handlesFromStrings:error:results:
existingChatForGroupID:error:results:
_imessageAccount
T@"IMAccount",R
_activeAccountChanged:
_accountRegistrationStatusChanged:
deferredSetup
_shouldPerformDeferredSetup
_requestNetworkDataAvailability
accountActive:
activeAccounts
operationalAccounts
_rebuildOperationalAccountsCache:
setAccounts:
readOnly
okToConnectAccount:
deactivateAccount:
deactivateAccounts:withDisable:
_deactivateAccounts:
canActivateAccounts:
__imSetFromArray
activateAccounts:force:locally:
activateAccount:force:locally:
activateAndHandleReconnectAccounts:
canActivateAccount:
operationalAccountsForService:
bestActiveAccountForService:
activeIMessageAccount
activeSMSAccount
accountAtIndex:
numberOfAccounts
canDeleteAccount:
addAccount:atIndex:
addAccount:atIndex:locally:
deleteAccount:
activateAccount:
activateAccount:force:
activateAndHandleReconnectAccount:
accountConnecting:
accountConnected:
bestAccountForService:login:guid:
bestAccountForService:withLogin:
bestOperationalAccountForService:withLogin:
iMessageAccountForLastAddressedHandle:simID:
bestActiveAccountForService:withLogin:
bestConnectedAccountForService:withLogin:
bestOperationalAccountForService:
bestConnectedAccountForService:
bestAccountWithCapability:
mostLoggedInAccount
aimAccount
jabberAccount
_enableCache
_disableCache
_isReadOnly
_cachesEnabled
_operationalAccountsCache
_serviceToActiveAccountsMap
_serviceToAccountsMap
_serviceToConnectedAccountsMap
_serviceToOperationalAccountsMap
_accountMap
_networkDataAvailable
_accounts
T@"NSArray",C,V_accounts
T@,R,N
Ti,R,N
T@"IMAccount",R,N
TB,N,V_networkDataAvailable
anyObject
_bestOperationalAccountForSendingForService:
__iCloudSystemAccountForService:
receiverIsMyMention:
fetchMeContactWithKeys:
metionedHandleMatchesMeCard:
accountCountryIsCandidateForHawking:
accountCountryIsCandidateForSMSFilter:
receiverIsCandidateForHawking:
receiverIsCandidateForSMSFilter:
activeAccountsAreEligibleForUnknownSendersFiltering
activeAccountsAreEligibleForHawking
activeAccountsAreEligibleForAppleSMSFilter
_isChatSiblingOf:
equivalentToRecipients:
setFetchPersonalNicknameCompletionBlocks:
_nicknameFeatureEnabled
setIsInitialLoad:
_updateLocalNicknameStore
daemonController
_broadcastNicknamePreferencesDidChange:
_updatePersonalNicknameWithMeCardIfNecessary
_meCardDidChange:
accountsMatchUpToUseNicknames
multiplePhoneNumbersTiedToAppleID
_handleIDsForHandle:
pendingNicknameUpdates
handledNicknames
isCNContactAKnownContact:
clearPendingNicknameUpdatesForHandle:
isUpdateFromNickname:withOptions:
givenName
firstName
familyName
lastName
updateNameFromContact:
imageData
imageHash
allowListedHandlesForSharing
intersectsSet:
denyListedHandlesForSharing
allGUIDsForChat:
_canUpdatePersonalNickname
personalNickname
fetchPersonalNicknameCompletionBlocks
sharingAudience
hasMessageFromMe
isContact
handleIsAllowedForSharing:
handleIsDeniedForSharing:
scrutinyNicknameHandles
getNicknameHandlesUnderScrutiny
setNicknameHandlesUnderScrutiny
nicknameForHandle:
avatar
hasImage
setPendingNicknameUpdates:
setHandledNicknames:
isInitialLoad
setAllowListedHandlesForSharing:
setDenyListedHandlesForSharing:
phoneNumbersForCNContact:
emailsForCNContact:
setSharingEnabled:
setSharingAudience:
didPersistImageToContact
meCardSharingState
setImageForkedFromMeCard:
truncateNameIfNeeded:
cropRect
setImageData:
initWithMeContact:
setPersonalNickname:
nameForkedFromMeCard
contactStore
keysForNicknameHandling
setNameForkedFromMeCard:
imageForkedFromMeCard
didSaveImageToMeCard
contactImage
meCardSyncEnabled
setFirstName:
setLastName:
imageFilePath
imageName
initWithImageName:imageFilePath:
setAvatar:
fetchPersonalNicknameWithCompletion:
nicknameUpdateForHandle:nicknameIfAvailable:
IMSharedHelperMD5Helper:
ignorePendingNicknameUpdatesForHandle:
allowHandlesForNicknameSharing:forChat:
denyHandlesForNicknameSharing:
shouldOfferNicknameSharingForChat:
handlesForNicknamesUnderScrutiny
markHandleUnderScrutiny:
clearHandleFromScrutiny:
imageDataForHandle:
setPersonalNicknameFromOnboardingResult:
updatePersonalNicknameIfNecessaryWithMeCardSharingResult:
markAllAsPending
responseHandlers
setResponseHandlers:
setScrutinyNicknameHandles:
_isInitialLoad
_responseHandlers
_personalNickname
_fetchPersonalNicknameCompletionBlocks
_handledNicknames
_pendingNicknameUpdates
_allowListedHandlesForSharing
_denyListedHandlesForSharing
_scrutinyNicknameHandles
T@"IMNickname",&,N,V_personalNickname
T@"NSMutableArray",&,N,V_fetchPersonalNicknameCompletionBlocks
T@"NSDictionary",&,N,V_handledNicknames
T@"NSDictionary",&,N,V_pendingNicknameUpdates
T@"NSSet",&,N,V_allowListedHandlesForSharing
T@"NSSet",&,N,V_denyListedHandlesForSharing
T@"NSMutableSet",&,N,V_scrutinyNicknameHandles
TB,N,V_isInitialLoad
T@"NSMutableDictionary",&,N,V_responseHandlers
chatWithHandle:lastAddressedHandle:lastAddressedSIMID:
existingChatWithHandle:
_existingChatForHandleUsingPersonID:
setRecipient:
_possiblyUnregisteredCachedChatWithHandle:
_initWithGUID:account:style:roomName:displayName:lastAddressedHandle:lastAddressedSIMID:items:participants:isFiltered:hasHadSuccessfulQuery:
_setupObservation
_registerChat:isIncoming:guid:
join
chatWithHandles:lastAddressedHandle:lastAddressedSIMID:
chatWithHandles:displayName:joinedChatsOnly:lastAddressedHandle:lastAddressedSIMID:
existingChatWithHandles:allowAlternativeService:groupID:displayName:joinedChatsOnly:
_possiblyUnregisteredCachedChatWithHandles:style:groupID:displayName:joinedChatsOnly:
chatGUIDToChatMap
__im_ff_chatCacheEnabled
_cachedChatWithGUID:
_performSingleChatCacheLookupWithBlock:cacheMissQueryKey:queryBlock:
existingChatWithHandle:allowAlternativeService:
existingChatWithChatIdentifier:
_existingChatWithIdentifier:style:service:
_cachedChatWithHandles:allowAlternativeService:groupID:displayName:joinedChatsOnly:
existingChatForIMHandles:allowRetargeting:groupID:displayName:ignoresDisplayName:joinedChatsOnly:
_cachedChatWithIdentifier:
_cachedChatWithGroupID:
cachedChatsInThreadNameMap
_cachedChatWithDisplayName:
predicateWithFormat:
existingChatWithDeviceIndependentID:
_cachedChatWithPersonID:
validateAndCleanupID:
fetchCNContactForHandleWithID:
existingChatWithContacts:bestHandles:
IDsFromCNContact:
isBetterThanIMHandle:nonPhoneNumbersPreferred:
bestHandlesForCNContacts:useExtendedAsyncLookup:completion:
chatWithHandle:
chatWithHandles:displayName:joinedChatsOnly:
existingChatWithGUID:
existingChatWithHandles:
existingChatWithHandles:allowAlternativeService:
existingChatWithHandles:allowAlternativeService:groupID:
existingChatWithDisplayName:
existingChatWithPinningIdentifier:
existingChatWithPersonID:
existingChatWithAddresses:allowAlternativeService:bestHandles:
daemonQueryController
performQueryWithKey:expectsSynchronousResult:block:completionHandler:
_loadChatsFilteredUsingPredicate:lastMessageOlderThan:limit:waitForReply:completionHandler:
_performChatCacheLookupWithBlock:cacheMissQueryKey:queryBlock:
processingChatCacheMiss
setProcessingChatCacheMiss:
_validateChatQueryResults:matchCurrentCacheResults:
threadNameToChatMap
isBatchFetchingForLaunchCompleted
_chatSiblingsArray
_existingChatWithIdentifier:style:account:
_existingChatFromSiblingsForHandle:
_existingChatWithHandle:fixChatHandle:
descriptionForPurpose:inChat:
descriptionForPurpose:isGroupMessage:messageDataSource:attachmentDataSource:
descriptionForPurpose:isGroupMessage:senderDisplayName:messageDataSource:attachmentDataSource:
descriptionForPurpose:
descriptionForPurpose:inChat:senderDisplayName:
displayNameForAddress:
bestAccountForAddress:
handleForAddress:
isLoginAddress:
shouldAdjustTimeoutIntervalForBeginDate
timerCallback
setTolerance:
triggerTimeout
typingTimeoutDidTriggerWithTimer:
timer
setTimer:
initWithHandle:beginDate:timeoutInterval:delegate:
beginDate
timeoutInterval
_handle
_beginDate
_timeoutInterval
_timer
T@"NSTimer",&,N,V_timer
T@"<IMTypingTimerDelegate>",W,N,V_delegate
T@"IMHandle",R,C,N,V_handle
T@"NSDate",R,N,V_beginDate
Td,R,N,V_timeoutInterval
valid
TB,R,N,GisValid
integerValueForKey:withDefault:
boolValueForKey:withDefault:
errorArrayFromSerializedErrorArray_im:
syncControllerSyncState
syncingFailed
errors
domain
isSyncingAvailable
isSyncingEnabled
_isChangingEnabledState
changingEnabledState
isSyncing
isDisablingDevices
isSyncingPaused
syncErrorWithDomain:code:
canEnableSyncing
canStartSyncing
canChangeEnabledSetting
isSyncEnabledForDisplayOnly
syncControllerSyncType
syncControllerRecordType
hasExited
exitDate
lastSyncDate
accountStatus
accountIsEnabled
_hasExited
_isDisablingDevices
_accountIsEnabled
_syncControllerSyncState
_syncControllerSyncType
_syncControllerRecordType
_exitDate
_changingEnabledState
_lastSyncDate
_errors
_accountStatus
_syncState
TB,R,N,V_accountIsEnabled
Tq,R,N,V_syncState
TQ,R,N,V_syncControllerSyncState
Tq,R,N,V_syncControllerSyncType
Tq,R,N,V_syncControllerRecordType
TB,R,N,V_hasExited
T@"NSDate",R,C,N,V_exitDate
Tq,R,N,V_changingEnabledState
TB,R,N,V_isDisablingDevices
T@"NSDate",R,N,V_lastSyncDate
T@"NSArray",R,N,V_errors
Tq,R,N,V_accountStatus
setAllowlist:
setName:
disableService
setDisableService:
forceAllowlist
setForceAllowlist:
allowlist
_disableService
_forceAllowlist
_allowlist
TB,V_disableService
TB,V_forceAllowlist
T@"NSSet",&,V_allowlist
T@"NSString",&,V_name
setShouldPostNotifications:
_updateParentalSettings
_managedPrefsNotification:
active
disableAV
forceChatLogging
_serviceWithName:
disableService:
allowlistForService:
forceAllowlistForService:
accountIsEnabled:
disableAccount:
allowlistForAccount:
forceAllowlistForAccount:
accountHasAllowlist:
shouldPostNotifications
_parentalControls
_disableAV
_forceChatLogging
_shouldPostNotifications
_active
T@"NSMutableDictionary",R,N,V_parentalControls
TB,R,N,V_disableAV
TB,R,N,V_forceChatLogging
TB,R,N,V_active
TB,N,V_shouldPostNotifications
transferCenterClass
_removePendingTransfer:
_removeActiveTransfer:
_removeAllActiveTransfers
acknowledgeAllPendingTransfers
accountID
_addTransfer:toAccount:
transferState
_addPendingTransfer:
defaultHFSFileManager
attributesOfItemAtPath:error:
_doesLocalURLRequireArchiving:
guidForNewOutgoingTransferWithLocalURL:useLegacyGuid:
fileTransferClass
fileSize
fileHFSTypeCode
fileHFSCreatorCode
fileHFSFlags
_initWithGUID:filename:isDirectory:localURL:account:otherPerson:totalBytes:hfsType:hfsCreator:hfsFlags:isIncoming:
shouldIssueSandboxEstensionsForTransfers
stringWithCString:encoding:
setSandboxToken:
_addTransfer:
_setAccount:otherPerson:
chatForTransfer:
isIncoming
_addSpotlightProperties:sender:recipients:incoming:
_dictionaryRepresentation
doesLocalURLRequireArchiving:toHandle:
_setForceArchive:
transferForGUID:includeRemoved:
_swizzleTransferStateIfMissingAttachmentCanBeDownloadedFromCloudKit
_addActiveTransfer:
_setTransferState:
_setLocalURL:
postCoreAutomationNotificationFinishedTapToDownload:downloadedFromCloudKitSuccessfully:
acceptTransfer:withPath:autoRename:overwrite:
isFinished
_setError:
initWithKey:ascending:
sortedArrayUsingDescriptors:
otherPerson
filename
isFileTransfer:preauthorizedWithDictionary:
_clearTransfers
_updateWithDictionaryRepresentation:
acceptFileTransferIfPreauthorzed:
registerGUID:forNewOutgoingTransferWithLocalURL:
isFromMomentShare
_setCurrentBytes:totalBytes:
_setAveragedTransferRate:lastAveragedInterval:lastAveragedBytes:
setIsAuxImage:
setIsAuxVideo:
stringByAppendingPathExtension:
_randomTemporaryPathWithSuffix:withAppendedPathComponent:
_randomTemporaryPathWithFileName:
stringByResolvingAndStandardizingPath
writeToFile:options:error:
fileURLWithPath:isDirectory:
guidForNewOutgoingTransferWithLocalURL:
setHideAttachment:
_fetchHighQualityVariantForTransferGUID:completion:
_daemonRestarted:
_initiateHighQualityVariantDownloadWithDaemonForGUID:
existsAtLocalPath
livePhotoBundlePathIfItExists
_daemonDisconnected:
_initiateLocalFileURLRetrievalInDaemonForGUID:options:
_registerDaemonListenerIfNecessary
mainBundle
bundleIdentifier
setTransferCenterClass:
registerTransferWithDaemon:
setAuxImageForTransfer:value:
setAuxVideoForTransfer:value:
hasPendingFileTransfers
acknowledgePendingTransfer:
hasActiveFileTransfers
assignTransfer:toMessage:account:
assignTransfer:toHandle:
sendTransfer:
acceptTransfer:
removeTransfer:
deleteTransfer:
retargetTransfer:toPath:
transfers
activeTransfers
activeTransferGUIDs
orderedTransfers
orderedTransfersGUIDs
clearFinishedTransfers
preauthorizeFileTransferFromOtherPerson:account:filename:saveToPath:
wasFileTransferPreauthorized:
guidsForStoredAttachmentPayloadData:messageGUID:
fetchHighQualityVariantForTransfer:completion:
preWarmConnection
retrieveLocalFileURLForFileTransferWithGUID:options:completion:
setIssueSandboxEstensionsForTransfers:
_guidToTransferMap
_guidToRemovedTransferMap
_accountIDToTransferGUIDsMap
_preauthorizedInfos
_preauthorizedGUIDs
_activeTransfers
_pendingTransfers
_disconnectionListenerSetUp
_fetchHighQualityVariantCompletionHandlers
_localFileURLRetrievalCompletionHandlers
_issueSandboxEstensionsForTransfers
issueSandboxEstensionsForTransfers
TB,N,GshouldIssueSandboxEstensionsForTransfers,V_issueSandboxEstensionsForTransfers
T@"NSArray",R,W,N
absoluteString
registerMomentShareURLString:
initWithPhotoKitMomentShare:
initWithMomentShareStatus:presentationStyle:
registerChangeObserver:context:
momentSharePresentationCacheDidChange:
fetchMomentShareFromShareURL:completionHandler:
unregisterChangeObserver:context:
observable:didChange:context:
statusPresentationForMomentShareURLString:
registerMomentShareItemForMessage:
unregisterMomentShareURLString:
T@"<IMMomentSharePresentationCacheDelegate>",W,N,V_delegate
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
isBusiness
brand
isBusinessChat
isMakoChat
isVerified
isMako
isApple
_chat_closeSession:
isReplyEnabled
businessHandle
hasVerifiedBusiness
isAppleChat
closeSession
deleteExtensionPayloadData
T@"IMBrand",R,N
T@"IMHandle",R,N
isSubclassOfClass:
serviceType
filterCategory
isSpam
areSendersUnknown
hasResponded
_copyWithClass:zone:
mutableCopyWithZone:
_serviceType
_filterCategory
_spam
_sendersUnknown
_responded
Tq,R,N,V_serviceType
Tq,R,N,V_filterCategory
spam
TB,R,N,GisSpam,V_spam
sendersUnknown
TB,R,N,GareSendersUnknown,V_sendersUnknown
responded
TB,R,N,GhasResponded,V_responded
setServiceType:
setFilterCategory:
setSpam:
setSendersUnknown:
setResponded:
Tq,D,N
TB,D,N,GisSpam
TB,D,N,GareSendersUnknown
TB,D,N,GhasResponded
isInterstellarEnabled
__im_ff_isInterstellarEnabled
messagePartGUID
_existingMessageFromMessagePartGUID:
initWithSyndicationAction:
syndicationRanges
updateMessagesRanges:withMessagePartSyndicationRanges:didUpdate:
_syndicationRanges:
_updateChatItemsWithReason:block:
initWithChatGUID:syndicationStartDate:syndicationActionType:encodedMessagePartGUID:messagePartRange:
_chat:sendSyndicationAction:
_updateExistingMessageWithSyndicationAction:
initWithChatGUID:syndicationStartDate:autoDonateMessages:
setAutoDonationBehavior:
sendSyndicationAction:forMessagePartGUID:syndicatedMessagePartRange:
sendAutoDonationUpdate:
_item
_initWithItem:
failed
T@"NSDate",R,N
visibleAssociatedMessageChatItems
isReplyContextPreview
isReply
requiresSiriAttribution
contiguousType
wantsTail
transcriptText
transcriptDate
fromMe
TB,R,N,GisFromMe
T@"NSAttributedString",R,C,N
T@"IMServiceImpl",R,N
layoutGroupIdentifier
isContiguousWithChatItem:
isAttachmentContiguousWithChatItem:
attachmentContiguousType
isContiguous
_isContiguousLoaded
_setContiguousLoaded:
_setContiguousType:
_setAttachmentContiguousType:
_setGUID:
chatContext
setChatContext:
_guid
_contiguousType
_attachmentContiguousType
_contiguousLoaded
_chatContext
T@"NSString",C,N,S_setGUID:,V_guid
T@"IMChatContext",C,N,V_chatContext
T@"NSString",R,C,N
TC,R,N
contiguous
TB,R,N,GisContiguous
_initWithItem:wasReportedAsSpam:isGroup:hasMultipleMessages:showReportSMSSpam:
wasReportedAsSpam
isGroupMessage
hasMultipleMessages
showReportSMSSpam
_wasReportedAsSpam
_isGroupMessage
_hasMultipleMessages
_showReportSMSSpam
TB,R,N,V_wasReportedAsSpam
TB,R,N,V_isGroupMessage
TB,R,N,V_hasMultipleMessages
TB,R,N,V_showReportSMSSpam
_initWithItem:withExtensionName:
extensionName
_extensionName
T@"NSString",R,N,V_extensionName
_initWithItem:service:handle:
T@"IMServiceImpl",R,N,V_service
T@"IMHandle",R,N,V_handle
_initWithItem:senderHandle:
T@"NSString",R,N,V_sender
displayNotifyAnywayButtonStateChanged:
_initWithHandle:displayNotifyAnywayButton:
setDisplayNotifyAnywayButton:
displayNotifyAnywayButton
unavailabilityIndicatorChatItemDelegate
setUnavailabilityIndicatorChatItemDelegate:
_displayNotifyAnywayButton
_unavailabilityIndicatorChatItemDelegate
TB,N,V_displayNotifyAnywayButton
T@"<IMUnavailabilityIndicatorChatItemDelegate>",W,N,V_unavailabilityIndicatorChatItemDelegate
_init
_initWithItem:handle:
_initWithItem:handle:threadIdentifier:
errorCode
canReply
_initWithItem:text:index:messagePartRange:visibleAssociatedMessageChatItems:
isCorrupt
pairWithFirst:second:
_defaultRichLinkAllowlist
first
second
__im_conformsToDomain:domainExtension:
_additionalSupportedRichLinkSchemesForAllowlistedSender:
determineRichLinksInMessage:additionalSupportedSchemes:
richLinksDataSourceClass
_newMessagePartsForMessageItem:chatContext:photosPluginPayload:
getCMMAssetOffset
initWithString:attributes:
_isSenderUnknown
_initWithItem:text:index:messagePartRange:subject:shouldDisplayLink:
getCMMState
hubbleCMMProcessingEnabled
messageBodyStringForCMMMessage:
initWithAttributedString:
_isAllowlistedRichLinkSender:isBusiness:
hasDataDetectorResults
_richLinkRangesForMessageText:sender:isAllowlistedRichLinkSender:
rangeValue
_isAllowlistedURL:
mutableString
attribute:atIndex:effectiveRange:
_initWithItem:text:index:messagePartRange:transferGUID:chatContext:
isAudioMessage
attribute:existsInRange:
attributedSubstringFromRange:
_supportsRichLinkURL:forSender:isAllowlistedRichLinkSender:
member:
_guidForMessage:url:
_initWithItem:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:
setAllowlistedRichLinkSender:
_initWithItem:text:index:messagePartRange:subject:
enumerateAttribute:inRange:options:usingBlock:
scheme
locationInfoFromURL:
location
address
setLocationInfo:
initWithString:
index
_initWithItem:messagePartRange:subparts:
_shouldAggregateForTransferType:
setIsBusiness:
aggregatePartsForParts:forMessage:context:
setLayoutGroupStyle:
threeAttachmentStackEnabled
hubbleUIEnabled
_initWithItem:text:index:messagePartRange:transferGUIDs:chatContext:
setAggregateAttachmentParts:
_attachmentStackAggregationThreshold
_setIndex:
addIndex:
messageSubject
flags
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:threadIdentifier:
_messageItemWithIndexesDeleted:subRangesToDeleteMapping:deleteSubject:deleteTransferCallback:createItemCallback:fromMessageItem:
_initWithItem:index:messagePartRange:syndicationBehavior:
messagePartSyndicationRangeForRange:inRangesArray:
syndicationType
isHighlighted
_initWithItem:highlightedMessagePartGUID:highlightedMessagePartIndex:highlightedMessagePartRange:
replyCountsByPart
_initWithItem:index:messagePartRange:
initWithFormat:
_setVisibleAssociatedMessageChatItems:
_setParentMessageIsFromMe:
threadOriginator
sourceApplicationID
isSiriEnabled
sharedPreferences
assistantIsEnabled
_newMessagePartsForMessageItem:
messageBodyStringForAttachmentGUIDs:
_messageItemWithPartsDeleted:fromMessageItem:indexesOfItemsDeleted:indexToRangeMapping:
T@"NSArray",&,N,S_setVisibleAssociatedMessageChatItems:
canDelete
_setMessageEditChatItems:
canSendMessageAcknowledgment
replyContextPreviewChatItemForReply:chatContext:
messageHighlightChatItem
syndicationBehavior
setMessagePartRange:
messageEditChatItems
chatInScrutinyMode
setChatInScrutinyMode:
fallbackCorruptText
isAllowlistedRichLinkSender
replyCount
setReplyCount:
_fallbackCorruptText
_index
_messagePartRange
_visibleAssociatedMessageChatItems
_messageEditChatItems
_isBusiness
_chatInScrutinyMode
_allowlistedRichLinkSender
_syndicationType
_messageHighlightChatItem
_syndicationBehavior
_replyCount
Tq,N,S_setIndex:,V_index
T{_NSRange=QQ},N,V_messagePartRange
TB,N,V_chatInScrutinyMode
allowlistedRichLinkSender
TB,N,GisAllowlistedRichLinkSender,V_allowlistedRichLinkSender
TQ,N,V_replyCount
T@"NSAttributedString",R,C,N,V_text
T@"NSAttributedString",R,C,N,V_fallbackCorruptText
T@"NSArray",R,N,V_messageEditChatItems
TB,N,V_isBusiness
Tq,R,N,V_syndicationType
T@"IMMessagePartHighlightChatItem",R,C,N,V_messageHighlightChatItem
Tq,R,N,V_syndicationBehavior
T@"NSArray",&,N,S_setVisibleAssociatedMessageChatItems:,V_visibleAssociatedMessageChatItems
blockingRichLinks
setBlockingRichLinks:
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:text:index:messagePartRange:subject:
_initWithItem:text:index:messagePartRange:subject:visibleAssociatedMessageChatItems:
setShouldDisplayRichLink:
shouldDisplayRichLink
_subject
T@"NSAttributedString",R,C,N,V_subject
replyIsFromMe
replyMessageGUID
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:text:index:messagePartRange:subject:shouldDisplayLink:
_parentItem
set_parentItem:
setReplyIsFromMe:
setReplyMessageGUID:
_replyIsFromMe
_replyMessageGUID
T@"IMItem",&,N,V_parentItem
TB,N,V_replyIsFromMe
T@"NSString",C,N,V_replyMessageGUID
_initWithReplyItem:threadIdentifier:replyMessageGUID:replyIsFromMe:
initialPayload
parentChatHasKnownParticipants
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:initialPayload:index:messagePartRange:parentChatHasKnownParticipants:chatContext:
setInitialPayload:
setBundleIdentifier:
isBreadcrumb
dataSource
existingDataSourceForMessageGUID:bundleID:
expressiveSendStyleID
hasSetIsLastChatItemOfPluginType
isLastChatItemOfPluginType
isUpdatingDataSourcePayload
setUpdatingDataSourcePayload:
expireState
T@"IMBalloonPluginDataSource",R,&,N
isDataSourceInitialized
setLastChatItemOfPluginType:
isSaved
wantsAutoPlayback
setHasSetIsLastChatItemOfPluginType:
setDataSource:
_isLastChatItemOfPluginType
_hasSetIsLastChatItemOfPluginType
_parentChatHasKnownParticipants
_initialPayload
_bundleIdentifier
_dataSource
T@"IMBalloonPluginDataSource",&,N,V_dataSource
T@"IMPluginPayload",&,N,V_initialPayload
T@"NSString",&,N,V_bundleIdentifier
TB,N,V_hasSetIsLastChatItemOfPluginType
TB,N,SsetLastChatItemOfPluginType:,V_isLastChatItemOfPluginType
TB,R,N,V_parentChatHasKnownParticipants
messageItem
_messageItem
T@"IMMessageItem",R,N,V_messageItem
alphanumericCharacterSet
nonBaseCharacterSet
formUnionWithCharacterSet:
symbolCharacterSet
invert
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
_senderHandle
_otherHandle
_initWithItem:datasource:statusText:optionFlags:
configureStatusTextWithAccount:
rawStatusText
optionFlags
_rawStatusText
_optionFlags
T@"NSString",R,N,V_rawStatusText
T@"NSString",R,N,V_statusText
TQ,R,N,V_optionFlags
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:text:index:messagePartRange:transferGUID:chatContext:
layoutGroupStyle
_initWithItem:text:index:messagePartRange:transferGUID:chatContext:visibleAssociatedMessageChatItems:
_wantsAttachmentContiguousForType:
parentChatIsSpam
_transferGUID
_wantsAttachmentContiguous
_layoutGroupStyle
TQ,N,V_layoutGroupStyle
T@"NSString",R,C,N,V_transferGUID
transferGUIDs
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:text:index:messagePartRange:transferGUIDs:chatContext:
aggregateAttachmentParts
_initWithItem:text:index:messagePartRange:transferGUIDs:chatContext:visibleAssociatedMessageChatItems:
_transferGUIDs
_aggregateAttachmentParts
T@"NSArray",C,N,V_aggregateAttachmentParts
T@"NSArray",R,C,N,V_transferGUIDs
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:text:index:messagePartRange:transferGUID:chatContext:visibleAssociatedMessageChatItems:
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:text:index:messagePartRange:transferGUIDs:chatContext:visibleAssociatedMessageChatItems:
subparts
_initWithItem:parentItem:replyMessageGUID:replyIsFromMe:messagePartRange:subparts:
_subparts
T@"NSArray",R,C,N,V_subparts
typingIndicatorIcon
_initWithItem:dataSource:
_typingIndicatorIcon
T@"NSData",R,N,V_typingIndicatorIcon
_initWithItem:statusType:time:count:expireStatusType:
initWithTimeInterval:sinceDate:
timePlayed
statusType
expireStatusType
dateOfStatus
_timeStale
_timeAdded
_setTimeAdded:
errorText
messageStatusType
_initWithItem:statusType:time:count:
_initWithItem:expireStatusType:count:
_statusType
_expireStatusType
_count
Tq,R,N,V_statusType
T@"NSDate",R,N,V_time
TQ,R,N,V_count
Tq,R,N,V_expireStatusType
_initWithItem:effectStyleID:
effectStyleID
_effectStyleID
T@"NSString",R,C,N,V_effectStyleID
_initWithItem:attributionInfo:attributionType:showsLearnMoreLink:
attributionType
showsLearnMoreLink
_showsLearnMoreLink
_attributionInfo
_attributionType
T@"NSDictionary",R,C,N,V_attributionInfo
Tq,R,N,V_attributionType
TB,R,N,V_showsLearnMoreLink
_initWithItem:parentItem:threadIdentifier:replyMessageGUID:replyIsFromMe:count:
T@"NSString",R,C,N,V_threadIdentifier
TB,R,N,V_replyIsFromMe
T@"NSString",R,C,N,V_replyMessageGUID
T@"IMBalloonPluginDataSource",R,N,V_dataSource
_guidForItem:
numberOfPhotos
numberOfVideos
numberOfSavedAssets
_isEqualToGuid:numberOfPhotos:numberOfVideos:numberOfSavedAssets:
_initWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:
wouldBeEqualIfInitializedWithItem:numberOfPhotos:numberOfVideos:numberOfSavedAssets:
_numberOfPhotos
_numberOfVideos
_numberOfSavedAssets
TQ,R,N,V_numberOfPhotos
TQ,R,N,V_numberOfVideos
TQ,R,N,V_numberOfSavedAssets
activityTitle
expirationDate
_isEqualToGuid:activityTitle:expirationDate:
_initWithItem:activityTitle:expirationDate:
wouldBeEqualIfInitializedWithItem:activityTitle:expirationDate:
_activityTitle
_expirationDate
T@"NSString",R,C,N,V_activityTitle
T@"NSDate",R,C,N,V_expirationDate
_initWithItem:sender:
actionType
T@"IMHandle",R,N,V_sender
title
_initWithItem:sender:otherHandle:
changeType
otherHandle
T@"IMHandle",R,N,V_otherHandle
_setActionableEclipsed:
restrictLocationSharing
disableLocationSharing
expired
actionable
offerState
_isActionableEclipsed
_actionableEclipsed
direction
_initWithItem:conversationInitiator:
tuConversationUUID
activeCallForConversationUUID:
initWithUUIDString:
activeCall
tuConversation
conversationInitiator
_conversationInitiator
T@"TUConversation",R,W,N
T@"NSUUID",R,N
T@"IMHandle",R,N,V_conversationInitiator
indexSet
indexesOfPartsOfMessage:
indexesOfPartsOfMessageItem:
_imAssociatedMessageItem
associatedMessageRange
parentMessageIsFromMe
geometryDescriptor
_geometryDescriptor
_parentMessageIsFromMe
T{_NSRange=QQ},R,N
T{IMAssociatedMessageGeometryDescriptor=QQfffff},R,N,V_geometryDescriptor
editedBody
_initWithItem:sender:messageAcknowledgmentType:
messageAcknowledgmentType
_messageAcknowledgmentType
Tq,R,N,V_messageAcknowledgmentType
_initWithItem:sender:transferGUID:
stickerUserInfo
floatValue
_initWithAcknowledgments:
includesFromMe
acknowledgments
fromMeAcknowledgement
latestIsFromMe
includesMultiple
latestAcknowledgmentType
_latestIsFromMe
_includesMultiple
_acknowledgments
_fromMeAcknowledgement
_latestAcknowledgmentType
T@"NSArray",R,C,N,V_acknowledgments
T@"IMMessageAcknowledgmentChatItem",R,N,V_fromMeAcknowledgement
TB,R,N,V_latestIsFromMe
TB,R,N,V_includesMultiple
Tq,R,N,V_latestAcknowledgmentType
_initWithItem:text:
T@"NSString",R,C,N,V_text
_initWithItem:unreadCount:
unreadCount
_unreadCount
TQ,R,N,V_unreadCount
locationInfo
_locationInfo
T@"IMMapURLLocationInfo",&,N,V_locationInfo
encodeMessagePartGUID:prefix:partNumber:
highlightedMessagePartGUID
highlightedMessagePartIndex
highlightedMessagePartRange
highlightedMessageIsFromMe
_highlightedMessageIsFromMe
_highlightedMessagePartIndex
_highlightedMessagePartGUID
_highlightedMessagePartRange
T{IMAssociatedMessageGeometryDescriptor=QQfffff},R,N
TQ,R,N,V_highlightedMessagePartIndex
T@"NSString",R,N,V_highlightedMessagePartGUID
T{_NSRange=QQ},R,N,V_highlightedMessagePartRange
TB,R,N,V_highlightedMessageIsFromMe
initWithGUID:
dd_attributedSubstringFromRange:
_IMAppObjectForKey:
_determineStatusImageAppearance
pathForResource:ofType:
sharedAgent
initialize
_statusImageAppearanceChanged:
_daemonConnected:
launchIfNecessary
_customMessagesChanged:
myAvailableMessages
myAwayMessages
setMyAvailableMessages:
setMyAwayMessages:
setServiceAgentCapabilities:
serviceAgentCapabilities
serviceWithNameNonBlocking:
currentAVChatInfo
requestAudioReflectorStart
requestAudioReflectorStop
requestVideoStillForPerson:
_currentAVChatInfo
T@"NSDictionary",R,W,N
initFileURLWithPath:
checkResourceIsReachableAndReturnError:
removeItemAtURL:error:
startAccessingSecurityScopedResource
stopAccessingSecurityScopedResource
im_randomlyGeneratedFileNameInTempDirectoryForFileExtension:
im_copySecurityScopedResourceAtURL:toDestination:error:
exceptionWithName:reason:userInfo:
appWithPluginBundle:
initWithBundle:app:
setIdentifier:
setPluginLoaded:
setBundle:
infoDictionary
setBrowserGroup:
showInBrowser
setShowInBrowser:
setBrowserImageName:
setBrowserImagePath:
unloadBundle
setBubbleClass:
setBrowserClass:
setDataSourceClass:
setCustomTypingIndicatorLayerClass:
setEntryClass:
initWithDataSource:isFromMe:
balloonControllerKeyForMessageGUID:contextIdentifier:
removeLastObject
existingBalloonControllerWithMessageGUID:contextIdentifier:
supportsControllerReuse
_getControllerFromReusePoolForChatItem:contextIdentifier:
bubbleClass
messageToDatasourceMap
showableInBrowser
shouldHideAppSwitcher
isStickerPackOnly
browserClass
customTypingIndicatorLayerClass
entryClass
appBundle
pluginBundle
dataSourceClass
pluginLoaded
presentationContexts
initWithBundle:
balloonControllerForChatItem:contextIdentifier:
moveController:toReusePoolFromChatItem:contextIdentifier:
removeController:forChatItem:contextIdentifier:
shouldShowForRecipients:
existingDataSourceForMessageGUID:
insertDataSource:forGUID:
version
isBetaPlugin
browserImageName
browserImagePath
browserGroup
bundle
plugin
setPlugin:
setApp:
setMessageToDatasourceMap:
messageToBalloonControllerMap
setMessageToBalloonControllerMap:
balloonControllerPool
setBalloonControllerPool:
_pluginLoaded
_browserImageName
_browserImagePath
_browserGroup
_bundle
_plugin
_app
_messageToDatasourceMap
_messageToBalloonControllerMap
_bubbleClass
_browserClass
_dataSourceClass
_customTypingIndicatorLayerClass
_entryClass
_balloonControllerPool
T@"NSBundle",&,N,V_bundle
T@"<PKPlugIn>",&,N,V_plugin
TB,N,V_pluginLoaded
T@"IMBalloonApp",&,N,V_app
T@"NSMutableDictionary",&,N,V_messageToDatasourceMap
T@"NSMutableDictionary",&,N,V_messageToBalloonControllerMap
T#,&,N,V_bubbleClass
T#,&,N,V_browserClass
T#,&,N,V_dataSourceClass
T#,&,N,V_customTypingIndicatorLayerClass
T#,&,N,V_entryClass
T@"NSString",&,N,V_browserImageName
T@"NSString",&,N,V_browserImagePath
Tq,N,V_browserGroup
T@"NSMutableArray",&,N,V_balloonControllerPool
T@"NSBundle",R,&,N
betaPlugin
TB,R,N,GisBetaPlugin
initWithIdentifier:browserDisplayName:browserImageName:browserClass:presentationContext:
setBrowserDisplayName:
setPresentationContexts:
initWithIdentifier:browserDisplayName:browserImageName:
appWithPluginBundle:pluginKitProxy:extension:
_initWithPluginBundle:extension:pluginKitProxyClass:
pluginKitProxyForIdentifier:
initWithPluginBundle:pluginKitProxy:extension:
appWithPluginBundle:appBundle:
shouldBalloonHideAppIcon
isLaunchProhibited
itemID
canSendDataPayloads
initWithPluginBundle:extension:
initWithPluginBundle:appBundle:
extension
proxy
setProxy:
requestIdentifier
setRequestIdentifier:
setCanSendDataPayloads:
setShouldBalloonHideAppIcon:
_canSendDataPayloads
_shouldBalloonHideAppIcon
_extension
_proxy
_requestIdentifier
T@"LSPlugInKitProxy",&,N,V_proxy
T@"NSUUID",V_requestIdentifier
TB,N,V_canSendDataPayloads
TB,N,V_shouldBalloonHideAppIcon
T@"NSExtension",R,&,N,V_extension
T@"NSNumber",R,&,N
T@"<PKPlugIn>",R,&,N
fileURLWithPathComponents:
balloonProviderBundlePathURL
initWithURL:
_extensionBlocklist
pluginsMap
extensionWithIdentifier:error:
_insertPluginForExtension:balloonProviderBundle:precachedBalloonAppExtensions:timingCollection:
_loadAllDataSources
URLByAppendingPathComponent:isDirectory:
stringByDeletingLastPathComponent
pluginMetaDataFolder
contentsOfDirectoryAtPath:error:
moveItemAtPath:toPath:error:
pluginIDToMetadataCache
endMatchingExtensions:
_pluginPlistPath:
_infoPlistPathForPluginCreatingFolderIfNeeded:
fileExistsAtPath:
simulatedConversationID1
localParticipantID1
simulatedConversationID2
localParticipantID2
setSimulatedConversationID1:
setLocalParticipantID1:
setSimulatedConversationID2:
setLocalParticipantID2:
_participantIDForSimulator:
_metadataForPluginIdentifier:
_storeMetadata:_forPlugin:
stringByDeletingPathExtension
_identifiersForAppPlugins
_pluginsForWhichWeHaveMetadata
_deleteMetaDataForPlugins:
_loadAppExtensionDataSourcesForExtensionPoint:
setExtensionMatchingContext:
setHighMemoryExtensionMatchingContext:
extensionPointIdentifier
_extensionWithIdentifier:
_updatePluginsForExtensions:extensionPoint:
precacheBalloonAppExtensionsForExtensions:
_updatePluginsForExtensions:extensionPoint:precachedBalloonAppExtensions:
beginMatchingExtensionsWithAttributes:completion:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
bundleWithURL:
_updatePluginsForBundles:
setPluginsToRemoveAfterExtensionsUpdate:
_removePluginsWithDelay
_appProxyBundleIdentifiersForAppPlugins
_proxyIdentifiersForPlugins
bundlePath
pluginsToRemoveAfterExtensionsUpdate
_insertPluginForAppBundle:balloonProviderBundle:
_setPluginsToRemoveAndCallSelectorWithDelay:
_moveExtensionDataSourcesFromMessagesExtensionPluginToAppExtensions
_currentlyInstalledExtensionsExcludingExtensionPoint:
trackEvent:withCount:
_isServerBlocklistedBundleIdentifier:serverBag:
_isExtensionBlocklisted:
_allowExtensionWithIdentifier:
_clearPluginMetadataForUninstalledApps
_removePluginsForIdentifiers:
setIsEnabled:
isRunningPPT
_findPluginsInPaths:
_findPluginsInPathInternal:
_loadAppBundleDataSources
_loadAppExtensionDataSources
_fallBackMessagesExtensionPluginForBundleID:
disableExtensionDiscovery
enableAlternatePathPlugins
setIsRunningPPT:
pluginChatItem:didRelinquishReusableController:contextIdentifier:
pluginChatItem:didRelenquishNonResuableController:contextIdentifier:
localParticipantIdentifierForAppID:conversationID:
recipientIDForRecipient:appID:
conversationID:appID:
loadExtensionWithIdentifierIfNeeded:
removePluginWithBundleID:
setPluginEnabled:identifier:
setPluginsMap:
extensionMatchingContext
highMemoryExtensionMatchingContext
setPluginMetaDataFolder:
setPluginIDToMetadataCache:
_richLinksDataSourceClass
_pluginsMap
_extensionMatchingContext
_highMemoryExtensionMatchingContext
_pluginMetaDataFolder
_pluginIDToMetadataCache
_pluginsToRemoveAfterExtensionsUpdate
_simulatedConversationID1
_simulatedConversationID2
_localParticipantID1
_localParticipantID2
T@"NSMutableDictionary",&,N,V_pluginsMap
T@,&,N,V_extensionMatchingContext
T@,&,N,V_highMemoryExtensionMatchingContext
T@"NSString",&,N,V_pluginMetaDataFolder
T@"NSMutableDictionary",&,N,V_pluginIDToMetadataCache
T@"NSMutableSet",&,N,V_pluginsToRemoveAfterExtensionsUpdate
T@"NSString",&,N,V_simulatedConversationID1
T@"NSString",&,N,V_simulatedConversationID2
T@"NSUUID",&,N,V_localParticipantID1
T@"NSUUID",&,N,V_localParticipantID2
T#,R,&,N,V_richLinksDataSourceClass
raise:format:
_loadStatusNames
copyStringGUIDForObject:
_registerForNotifications
_fetchBrandInfo
unregisterIMHandle:
_setOriginalID:updateSiblings:
_setCountryCode:updateSiblings:
existingChatSiblingsArray
setAnonymous:
isAnonymous
groupsArray
bestIMHandleForService:
imHandleForOtherAccount:
shouldQueueNotifications
__mainThreadPostNotification:
notificationWithName:object:userInfo:
_postNotification:
email
isIDAKnownContact:
areCNContactPropertiesRecent
resetCNContactProperties
_im_isEqualToContact:
nickname
_clearCNContactProperties
rangeOfString:options:
localizedCompare:
placeholderName
hasCheckedForSuggestions
setHasCheckedForSuggestions:
setHasSuggestedName:
resource
_displayNameWithContact:
_hasServiceNameProperties
suggestedName
businessNameForUID:updateHandler:
displayNameWithPhoneNumberOrEmailForContact:
hasServer
_IDWithTrimmedServer
displayNameWithCNNickNameOrFullNameOrCompanyNameOrAbbreviatedForContact:
_displayNameWithNicknameIfAvailable
allowedToShowConversationWithHandleIDs:sync:context:
stringFromContact:style:
_formattedPhoneNumber
im_stripCategoryLabel
shouldShowAbbreviatedNames
abbreviatedNameForCNContact:
shouldShowNickNames
fullNameForCNContact:
_hasABName
nickNameForCNContact:
cnPhoneticKeys
phoneticFirstNameForCNContact:
phoneticLastNameForCNContact:
phoneticFullNameForCNContact:
_setBaseFirstName:lastName:fullName:
setEmails:andUpdateABPerson:
emails
setFirstName:lastName:fullName:andUpdateABPerson:
setEmail:andUpdateABPerson:
completedContact:withKeys:
fetchCNContactForHandleID:withKeys:
createMutableContactWithID:
setCnContact:
setCachedDisplayNameWithAbbreviation:
setCachedName:
addHandleToCNIDMap:CNContact:
sendNotificationABPersonChanged
extraProperties
hasResource
IDWithoutResource
accountSiblingsArray
_createPhoneNumberRefIfNeeded
stringWithCharacters:length:
isMobile
priority
timeSinceWentOffline
bestIMHandleForAccount:onService:inGroup:otherThan:
existingAccountSiblingsArray
bestIMHandleInArray:
isBetterThanIMHandle:
siblings
initWithSet:
setCapabilities:
removeObjectsForKeys:
_setExtraProperties:
isBlocked
_isMyIDInList:
imHandleWithoutResource
setStatus:message:richMessage:
_updateStatusBasedOnAuthRequestStatus
nameOfStatus:
timeSinceStatusChanged
setDay:
setHour:
setMinute:
currentCalendar
dateByAddingComponents:toDate:options:
setFormatterBehavior:
setDateStyle:
setTimeStyle:
stringFromDate:
localizedString
idleTime
setDateFormat:
_filterStatusMessage
_clearStatusMessageURLCache
availabilityForHandle:
availabilityStatusPublishedDateForHandle:
beginObservingAvailabilityForHandle:completion:
endObservingAvailabilityForHandle:completion:
attemptIfNeccessaryToSharePersonalAvailabilityWithHandleID:fromHandleID:completion:
uniqueName
_nameForComparisonPreferFirst:
caseInsensitiveCompare:
_existingAccountSiblingsForHandle:
_accountSiblingsForHandle:
_existingChatSiblingsForHandle:
_chatSiblingsForHandle:
siblingsForIMHandle:
chatSiblingsArray
_contactID
hasVideo
hasAudio
pictureData
customPictureDataChanged:key:
descriptionForCNContact:
brandManager
_fetchedBrand:
brandWithURI:completion:
setBrand:
_postOnScreenChangedNotificationForProperty:
setBrandSquareLogoImageData:
squareLogoDataForDesiredSize:completion:
setBrandWideLogoImageData:
wideLogoDataForDesiredSize:completion:
setNotificationsEnabled:
notificationsEnabled
filterIMHandlesForAccountSiblings:onAccount:
initWithAccount:ID:
_handleInfo
_setOriginalID:countryCode:updateSiblings:
canBeDeleted
setUniqueName:
nameAndEmail
scheduleSuggestedNameFetchIfNecessary
displayNameForChat:
nameAndID
resetUniqueName
phoneticFirstName
phoneticLastName
phoneticFullName
setLocalNickname:
setFirstName:lastName:
setEmail:
setEmails:
canBeAdded
isSystemUser
setIsMobile:
setIsBot:
mobileDeviceName
hasLocation
isLoginIMHandleForAnyAccount
phoneNumberRef
requestValueOfProperty:
setValue:ofExtraProperty:
bestIMHandleForAccount:
bestSibling
isVisiblyBlocked
setBlocked:
sortOrderInGroup:
accountTypeName
existingIMHandleWithoutResource
dependentIMHandles
setAuthRequestStatus:
setPersonStatus:
statusMessageChanged:
nameOfStatus
IDStatus
_setIDStatus:
setIdleSince:
setFeedUpdatedDate:
offlineString
idleString
statusMessage
availability
availabilityStatusPublishedDate
beginObservingAvailability
endObservingAvailability
inviteToViewAvailabilityIfNeededFromHandleID:
compareFirstNames:
compareLastNames:
compareNormalizedIDs:
matchesIMHandle:
hasOtherSiblings
siblingsArray
isAccountSiblingOf:
isSiblingOf:
_chatSiblings
_bestChatSibling
hasConferencing
isConferenceAvailable
hasMultiwayVideo
hasMultiwayAudio
_imPersonPictureChanged:
customPictureData
setCustomPictureData:
previousStatus
previousStatusMessage
richStatusMessage
personCentricID
setPersonCentricID:
hasSuggestedName
feedUpdatedDate
setPriority:
isBot
otherServiceIDs
setOtherServiceIDs:
brandSquareLogoImageData
brandWideLogoImageData
setIDStatus:
setBrandManager:
cachedDisplayNameWithAbbreviation
cachedName
_account
_uncanonicalID
_otherServiceIDs
_idleSince
_feedUpdatedDate
_extraProps
_certs
_cnFirstName
_cnLastName
_cnFullName
_cnNickname
_displayID
_firstName
_lastName
_fullName
_nickname
_emails
_normalizedFormOfID
_IDWithoutResource
_uniqueName
_pictureData
_statusMsg
_processedStatusMsg
_richStatusMsg
_whenWentOffline
_whenStatusChanged
_prevStatusMsg
_notificationNameQueue
_notificationQueue
_phoneNumberRef
_formattedNumber
_status
_prevStatus
_authRequestStatus
_resourceIndex
_IDStatus
_blockNotifications
_hasTemporaryWatch
_isMobile
_isBot
_isAnonymous
_beingTornDown
_hasCheckedPhoneNumber
_priority
_addressBookIdentifier
_notificationQueueCount
_isMako
_isApple
_hasSuggestedName
_hasCheckedForSuggestions
_personCentricID
_brand
_brandSquareLogoImageData
_brandWideLogoImageData
_cnContact
_brandManager
_suggestedName
_cachedDisplayNameWithAbbreviation
_cachedName
T@"CNContact",&,N,V_cnContact
T@"NSDictionary",&,N,V_otherServiceIDs
Tq,N,V_priority
Tq,N,V_IDStatus
T@"IMBrandManager",&,N,V_brandManager
T@"IMBrand",&,N,V_brand
T@"NSData",&,N,V_brandSquareLogoImageData
T@"NSData",&,N,V_brandWideLogoImageData
T@"NSString",C,N,V_suggestedName
TB,N,V_hasCheckedForSuggestions
TB,N,V_hasSuggestedName
T@"NSString",&,N,V_cachedDisplayNameWithAbbreviation
T@"NSString",&,N,V_cachedName
T@"NSString",R,&,N,V_id
T@"NSString",R,&,N,V_uncanonicalID
T@"NSString",&,N,V_personCentricID
T@"NSString",R,&,N,V_uniqueName
T@"IMAccount",R,&,N,V_account
T@"IMServiceImpl",R,&,N
T@"NSAttributedString",R,&,N,V_richStatusMsg
TQ,R,N,V_prevStatus
T@"NSString",R,&,N,V_prevStatusMsg
TI,R,N,V_authRequestStatus
T@"NSDate",R,&,N,V_feedUpdatedDate
TB,R,N,V_isBot
TB,N,SsetBlocked:
TB,R,N,V_isMobile
T@"NSData",R,&,N,V_pictureData
T@"NSDictionary",R,&,N,V_extraProps
T@"NSArray",R,&,N
T@"NSSet",R,&,N
T@,R,&,N
T@"NSString",R,&,N,V_guid
_validateOutstandingQueries
initWithID:key:completionHandler:
queries
failQuery:error:
startDate
completionHandler
completeQuery:userInfo:
_completeQuery:success:error:userInfo:
performQueryWithKey:expectsSynchronousResult:block:
completeQuery:
_daemonController
_queries
T@"NSMutableDictionary",R,N,V_queries
T@"IMDaemonController",R,W,N,V_daemonController
_addressBookChanged
removeContactWithID:
getIMHandlesForID:
processContactChangeHistoryEventWithHandleIDs:andCNContact:
_postContactChangeHistoryEventClientNotifications
clearCNIDToHandlesMap
_handleAddContactChangeHistoryEvent:
_handleDeleteContactChangeHistoryEvent:
_handleUpdateContactChangeHistoryEvent:
_handleDropEverythingChangeHistoryEvent
weakObjectsHashTable
_emptySiblingCacheForIMHandleGUID:
_buildSiblingsForIMHandle:
_clearSiblingsCacheForIMHandle:rebuildAfter:
_addIMHandleToIDToHandlesMap:
_removeIMHandleToIDToHandlesMap:
dialingForCurrentLocale
getIDsForAllIMHandles
isContactWithIDAlreadyFetched:
CNIDToHandlesMap
IDToHandlesMap
getIDsForInitialBatch
getIDsForFinalBatch
_dumpOutAllIMHandles
_siblingsMap
_allIMHandles
_IDToHandlesMap
_CNIDToHandlesMap
_businessNameManager
_notifyListeners
fetchCountOfSyndicationIdentifiersSavedToSystemPhotoLibrary:completion:
fetchAssetsWithSyndicationIdentifiers:options:includeRejected:
_assetFetchQueue
_openPhotoLibraryIfNecessary
sharedPhotoLibrary
librarySpecificFetchOptions
setIncludeTrashedAssets:
setIncludeHiddenAssets:
listeners
_isListenerRegistered:
_photoLibraryInternalQueue
registerChangeObserver:
_invalidateCache
photoLibraryPersistedSyndicatedAssetSetDidChange
openAndWaitWithUpgrade:error:
photosSyndicationIdentifiersForMessage:
photoLibraryDidChange:
cachedCountOfSyndicationIdentifiersSavedToSystemPhotoLibrary:shouldFetchAndNotifyAsNeeded:didStartFetch:
registerPhotoLibraryPersistenceManagerListener:
unregisterPhotoLibraryPersistenceManagerListener:
setListeners:
syndicationIdentifierSaveStateCache
setSyndicationIdentifierSaveStateCache:
syndicationIdentifiersWithActiveFetch
setSyndicationIdentifiersWithActiveFetch:
libraryAlreadyOpened
setLibraryAlreadyOpened:
_libraryAlreadyOpened
_listeners
_syndicationIdentifierSaveStateCache
_syndicationIdentifiersWithActiveFetch
T@"NSHashTable",&,N,V_listeners
T@"NSMutableDictionary",&,N,V_syndicationIdentifierSaveStateCache
T@"NSMutableSet",&,N,V_syndicationIdentifiersWithActiveFetch
TB,N,V_libraryAlreadyOpened
currentLocationGUID
setCurrentLocationGUID:
locatingMessageWithGuid:error:
setSourceApplicationID:
_sendMessage:adjustingSender:shouldQueue:
messageWithLocation:flags:error:guid:
_updateSender:
startUpdatingCurrentLocationWithForegroundAssertionForBundleIdentifier:withAuthorizedHandler:updateHandler:
sendCurrentLocationMessageWithChat:withLocationManager:withSourceApplicationIdentifier:foregroundAssertionForBundleIdentifier:
setThreadIdentifier:
setThreadOriginator:
numberOfCachedChats
keysSortedByValueUsingComparator:
enumerateAllChatsAndAttachmentSizesWithOptions:usingBlock:
activitySessionForTUConversation:
initWithConversation:
setVideoEnabled:
launchAppForJoinRequest:
setWithCapacity:
initWithHandles:
initWithRemoteMembers:
setVideo:
setShouldSuppressInCallUI:
expanseProvider
setProvider:
setCallerID:
setMessagesGroupUUID:
setMessagesGroupName:
initWithHandleType:notificationStyles:
setInvitationPreferences:
activeVideoCall
disconnectCall:
activity
activityIdentifier
activitySessions
originator
value
localizedStringWithFormat:
metadata
avMode
isVideoEnabled
currentCallForTUConversation:
activeTUConversationHasActivitySession:
leaveTUConversation
isScreenShareActivityForTUConversation:
participantHandleSharingScreenForTUConversation:
activityMetadataForTUConversation:
_updateChatItemsWithReason:block:shouldPost:
IMCloudKitSyncingEnabled
IMCloudKitIsSyncing
IMCloudKitIsEligibleForTruthZone
IMCloudKitIsInExitState
IMCloudKitIsRemovedFromBackup
IMCloudKitStartingPeriodicSync
IMCloudKitStartingInitialSync
IMCloudKitStartingEnabledSettingChange
IMCloudKitStartingDisableDevices
IMCloudKitSyncControllerSyncState
IMCloudKitSyncControllerSyncType
IMCloudKitSyncControllerSyncRecordType
IMCloudKitSyncPaused
IMCloudKitSyncDate
IMCloudKitSyncErrors
convertToDictionary
setIMCloudKitSyncingEnabled:
setIMCloudKitIsSyncing:
setIMCloudKitSyncPaused:
setIMCloudKitIsEligibleForTruthZone:
setIMCloudKitIsInExitState:
setIMCloudKitIsRemovedFromBackup:
setIMCloudKitSyncDate:
setIMCloudKitStartingPeriodicSync:
setIMCloudKitStartingInitialSync:
setIMCloudKitStartingEnabledSettingChange:
setIMCloudKitStartingDisableDevices:
setIMCloudKitSyncControllerSyncState:
setIMCloudKitSyncControllerSyncType:
setIMCloudKitSyncControllerSyncRecordType:
setIMCloudKitSyncErrors:
_IMCloudKitSyncingEnabled
_IMCloudKitIsSyncing
_IMCloudKitSyncPaused
_IMCloudKitIsEligibleForTruthZone
_IMCloudKitIsInExitState
_IMCloudKitIsRemovedFromBackup
_IMCloudKitStartingPeriodicSync
_IMCloudKitStartingInitialSync
_IMCloudKitStartingDisableDevices
_IMCloudKitSyncDate
_IMCloudKitStartingEnabledSettingChange
_IMCloudKitSyncControllerSyncState
_IMCloudKitSyncControllerSyncType
_IMCloudKitSyncControllerSyncRecordType
_IMCloudKitSyncErrors
TB,V_IMCloudKitSyncingEnabled
TB,V_IMCloudKitIsSyncing
TB,V_IMCloudKitSyncPaused
TB,V_IMCloudKitIsEligibleForTruthZone
TB,V_IMCloudKitIsInExitState
TB,V_IMCloudKitIsRemovedFromBackup
T@"NSDate",&,V_IMCloudKitSyncDate
TB,V_IMCloudKitStartingPeriodicSync
TB,V_IMCloudKitStartingInitialSync
Tq,V_IMCloudKitStartingEnabledSettingChange
TB,V_IMCloudKitStartingDisableDevices
TQ,V_IMCloudKitSyncControllerSyncState
Tq,V_IMCloudKitSyncControllerSyncType
Tq,V_IMCloudKitSyncControllerSyncRecordType
T@"NSArray",&,V_IMCloudKitSyncErrors
hidePeople
coalescingChanges
addedIMHandle:
removedIMHandle:
_addedPeople:
addPeopleFromArray:skipMe:
removeNotificationObserver:
addNotificationObserver:selector:
containsIMHandle:
removePeopleFromArray:
addPeopleFromArray:
_people
_hidePeople
TB,N,SsetShouldHidePeople:,V_hidePeople
identifierNameMap
identifierIsEffectIdentifier:
allEffectIdentifiers
localizedCaseInsensitiveContainsString:
replayStringMap
sendWithEffectStringMap
isFeatureEnabled
effectIdentifierIsFullScreenMoment:
effectIdentifierIsImpactEffect:
findIdentifierByMathcingPartialSufix:
nameForEffectIdentifier:
replayStringForEffectIdentifier:
sendWithStringForEffectIdentifier:
shouldShowReplayButtonForEffectIdentifier:
setFeatureEnabled:
initWithSyncState:syncStatistics:
configureSelf
percentComplete
percentCompleteString
progressBarValue
progressBarMax
remainingItems
progressLabel
userMessageLabel
actionLabel
isHidden
setShouldShowUserMessageLabel:
setShouldShowProgressBar:
setUserMessageLabel:
setActionLabel:
setProgressLabel:
shouldShowProgressBar
shouldShowIndeterminateProgress
setShouldShowIndeterminateProgress:
setProgressBarValue:
setProgressBarMax:
shouldShowUserActionLabel
setShouldShowUserActionLabel:
shouldShowUserMessageLabel
setActionType:
syncStatistics
setBroadcastDeferralOverride:
_shouldShowProgressBar
_shouldShowIndeterminateProgress
_shouldShowUserActionLabel
_shouldShowUserMessageLabel
_progressLabel
_progressBarValue
_progressBarMax
_userMessageLabel
_actionLabel
_actionType
_syncStatistics
_broadcastDeferralOverride
TB,N,V_shouldShowProgressBar
TB,N,V_shouldShowUserActionLabel
TB,N,V_shouldShowUserMessageLabel
TB,N,V_shouldShowIndeterminateProgress
T@"NSString",&,N,V_progressLabel
T@"NSString",&,N,V_userMessageLabel
T@"NSString",&,N,V_actionLabel
Tq,N,V_actionType
Td,N,V_progressBarValue
Td,N,V_progressBarMax
Td,N,V_broadcastDeferralOverride
hidden
TB,R,D,N,GisHidden
Td,R,D,N
T@"NSString",R,D,N
T@"NSArray",R,D,N
T@"IMCloudKitSyncState",R,N,V_syncState
T@"IMCloudKitSyncStatistics",R,N,V_syncStatistics
IMDeviceIsChinaRegion
fallbackUserName
removeFirstObject
setCNContact:
firstNameFromFallbackUserName
lastNameFromFallbackUserName
imHandles
imHandleForService:
_imHandlesWithIDs:onAccount:
resetABPerson
loginIMHandles
isIMHandleLoginIMHandle:
bestIMHandle
_cnEmails
_cnIMHandles
_loginIMHandles
T@"CNContact",R,N,V_cnContact
itemIsReply
itemIsReplyContextPreview
itemIsThreadOriginator
threadGroupIdentifier
itemIsReplyCount
setLoginHandle:
setSimulatedAccounts:forServiceNamed:
initWithIncomingIDs:messageIDOffset:account:
_setSimulatedChats:
dictionaryForChat:
simulatedDaemon:willSendBalloonPayload:attachments:messageGUID:bundleID:
beginSimulatingDaemon
T@"NSArray",&,N,V_listeners
_key
_startDate
_completionHandler
T@"NSString",R,C,N,V_ID
T@"NSString",R,C,N,V_key
T@"NSDate",R,N,V_startDate
T@?,R,C,N,V_completionHandler
contextClass
setContext:
_serviceWithInternalName:
_accountController
_updateContextWithSenderHandle:otherHandle:
context
isSenderUnknown
_setMessageID:
_refreshContextWithAccountHandles
_setInvitation:
_isInvitation
_copy
setUpJSONFileForChatGUID:
printChangeInItemsToJSON:
invertedSet
pathToDirectoryOfJSONFile
createFileAtPath:contents:attributes:
setJsonFilePath:
chatItems
messageDictionariesFromItemsInChat:withEventKey:
currentJsonArray
writeDataToJSONFile:
printChangeInItemsToJSONFromChat:
jsonFilePath
dataWithContentsOfFile:
JSONObjectWithData:options:error:
dataWithJSONObject:options:error:
__enumerateItemsWithOptions:usingBlock:
startTrackingChat:
jsonArray
setJsonArray:
_jsonFilePath
_jsonArray
T@"NSString",&,N,V_jsonFilePath
T@"NSMutableArray",&,N,V_jsonArray
clearAttachmentsUploadedToCloudkit
checkArgumentValidity:forExpectedNumberOfArguments:
deleteAttachmentWithMessageGUID:andFilePathIndex:
dictionaryFromGUID:
fileSizeForMessageGUID:withFilePathIndex:
loadHighResolutionFileForMessageGUID:withFilePathIndex:
startConversationFrom:andReceiveAt:
uploadAttachmentToCloudkitWithMessageGUID:andFilePathIndex:
callIMCoreMethodWithDictionary:
IMCoreAutomationPerformOperationWithDictionary:
unreadMessageCount
unreadSummaryWithUnreadCount:withParticipants:withGroupChatName:
localizedUnreadShortcutTitle
messagesBySeparatingRichLinks
simulatedAccount
loginHandle
chat:didSendMessage:
simulatedAttachments
initWithPath:guid:
currentMessageID
setAssociatedMessageType:
setBody:
simulatedChatIdentifier
setSimulatedChatIdentifier:
_messageWithGUID:
setPayloadData:
setFileTransferGUIDs:
loadMessagesBeforeDate:limit:loadImmediately:
simulatedDisplayName
setSimulatedDisplayName:
_simulatedAccount
_currentMessageID
_simulatedChatIdentifier
_simulatedAttachments
_simulatedDisplayName
T@"IMSimulatedAccount",R,N,V_simulatedAccount
TQ,R,N,V_currentMessageID
T@"NSString",C,N,V_simulatedChatIdentifier
T@"NSMutableArray",R,N,V_simulatedAttachments
T@"NSString",C,N,V_simulatedDisplayName
T@"<IMSimulatedChatDelegate>",W,N,V_delegate
senderInfo
bodyData
roomName
unformattedID
timeExpressiveSendPlayed
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:errorType:associatedMessageGUID:associatedMessageType:associatedMessageRange:bizIntent:locale:messageSummaryInfo:threadIdentifier:
syncedSyndicationRanges
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:threadIdentifier:syndicationRanges:syncedSyndicationRanges:
_loginHandle
T@"IMHandle",&,N,V_loginHandle
_initWithChat:
setThreadOriginatorMessageGUID:
setThreadOriginatorRange:
hasEarlierMessagesToLoad
hasRecentMessagesToLoad
_setItems:
_chatItems
_setNextStaleTime:
_nextStaleTime
_chatItemsForItem:previousItem:
_shouldRegenerateChatItemsForItem:previousItem:oldPreviousItem:
_didProcessChatItems:
_shouldReloadChatItem:oldChatItem:
_shouldReloadChatItemWithAssociatedChatItems:oldAssociatedChatItems:
_itemWithChatItemsDeleted:fromItem:indexesOfItemsDeleted:indexToRangeMapOfItemsDeleted:
_invalidateSpamIndicatorCachedValues
initWithChat:threadIdentifier:
_supportsContiguousChatItems
_chatItemsWithReplyCountsForNewChatItems:messageItem:
_hasEarlierMessagesToLoad
_hasRecentMessagesToLoad
_filteredChatItemsForNewChatItems:
_shouldAppendDateForItem:previousItem:
_shouldAppendServiceForItem:previousItem:chatStyle:
_shouldShowReportSpamForChat:withItems:
_shouldAppendReplyContextForItem:previousItem:chatStyle:
_shouldAppendReplyCountIfNeeded
threadOriginatorMessageGUID
threadOriginatorRange
_threadOriginatorMessageGUID
_threadOriginatorRange
T@"NSString",C,N,V_threadIdentifier
T@"NSString",C,N,V_threadOriginatorMessageGUID
T{_NSRange=QQ},N,V_threadOriginatorRange
initWithChatRecord:
initWithGuid:fileUrl:transferState:uti:isSticker:isOutgoing:attributionInfo:creationDate:
attributedText
enumerateAllAttachmentsWithBlock:
enumerateAllMessagesWithBlock:
enumerateAllChatsWithBlock:
chatForIMHandles:chatName:lastAddressedHandle:lastAddressedSIMID:
existingChatForIMHandles:
existingChatForRoom:onAccount:
_possiblyUnregisteredCachedChatForRoom:onAccount:
simulatedChats
existingChatForIMHandle:allowRetargeting:
existingChatForIMHandles:allowRetargeting:groupID:displayName:joinedChatsOnly:
existingChatForRoom:onAccount:allowRetargeting:
engramID
existingChatForIMHandle:allowRetargeting:fixChatHandle:
unblackholeChatWithHandles:
chatForIMHandle:
chatForIMHandle:lastAddressedHandle:lastAddressedSIMID:
chatForIMHandles:
chatForIMHandles:lastAddressedHandle:lastAddressedSIMID:
chatForIMHandles:displayName:joinedChatsOnly:
chatForIMHandles:displayName:joinedChatsOnly:lastAddressedHandle:lastAddressedSIMID:
chatForIMHandles:chatName:
chatForRoom:onAccount:
numberOfExistingChats
existingChatForIMHandle:
exisitingChatForGroupID:
existingChatForEngramID:
existingChatForIMHandles:allowRetargeting:
chatGuidsForChat:
existingChatForPersonID:
existingChatForIMHandles:allowRetargeting:groupID:
existingChatForAddresses:allowRetargeting:bestHandles:
existingChatForContacts:bestHandles:
unblackholeAndLoadChatWithIMHandles:
loadChatFromDaemonWithChatIdentifier:
existingConversationForTUConversationUUID:
__blockUntilQueriesComplete
_blockUntilQueriesComplete:
_chat:handleCompletionOfQuery:withUserInfo:success:error:
_registerCompletion:forQueryID:
testLog:
progressRescheduleDelay
progressCount
maxProgressCount
setProgressCount:
sendSyncStateChangedEvent
finishTest
dispatchAfter:block:
setUp
setProgressRescheduleDelay:
startTest
createSyncStatisticsForMockSyncState:
setMaxProgressCount:
_progressCount
_maxProgressCount
_progressRescheduleDelay
TQ,V_progressCount
TQ,V_maxProgressCount
Td,V_progressRescheduleDelay
willUpdateSyncState:
serializedErrorArrayFromErrorArray_im:
initWithErrorCode:
setError:
_error
T@"NSError",C,N,V_error
setAddressBookEnabled:
addressBookEnabled
improvedPriorityInversionFixEnabled
__im_ff_improvedPriorityInversionFixEnabled
chatCacheEnabled
_accountLoggedOut:
_daemonDied:
_daemonAlive:
_accountControllerUpdated:
chatRegistry
_noteChatInit:
_updateChatItems
generateUnusedChatIdentifierForGroupChatWithAccount:
_configureLocationShareItem:
_setDisplayName:
_initialize
orderingTools
_noteChatDealloc:
cancelPreviousPerformRequestsWithTarget:
isFirstLoad
updateForItems:forced:
_handleItem:forChatStyle:updateReplyCounts:
_updateRepliesIfNecessaryWithItem:
removeItem:
replaceItems:
_setDBUnreadCount:postNotification:
messageFailureCount
numberOfMessagesToKeepLoaded
_insertHistoricalMessages:queryID:isRefresh:isHistoryQuery:limit:
_insertHistoricalMessages:queryID:isRefresh:isHistoryQuery:isReplacingItems:limit:hasMessagesBefore:hasMessagesAfter:
insertHistoricalMessages:queryID:hasMessagesBefore:hasMessagesAfter:isReplacingItems:
momentSharePresentationCache
_setChatHasCommunicatedOveriMessage:
_setAccount:locally:
_archivedItemsToReplace:isReplacingItems:
chatIdToLastMessageItemMap
groupChatIdentifierUppercase
setReplyCountsByPart:
hasUnseenMention
setHasUnseenMention:
_handleItem:
_chat_clearHistory:beforeGUID:afterGUID:queryID:
_performQueryWithKey:loadImmediately:block:
clear
_chat_markAsSpam:queryID:
_setCountOfMessagesMarkedAsSpam:
_chat_markAsSpamAutomatically:
setIsFiltered:
_chat:updateIsFiltered:
_chat:updateIsBlackholed:
dictionaryWithObjects:forKeys:
sanitizeParticipants:excludingHandles:
lastFinishedMessageItem
chatPropertyValueFor:
_updateChatItemsAsNotSpam
updateSMSCategory:
_updateChatItemsAsNotSpamEnumeratingItems:
sharedManager
isSharedWithYouEnabled
autoDonationBehavior
shouldShowAutoDonationAction
translationEnabled
numberOfTimesRespondedToThread
_markHasHadSuccessfulQueryForChat:
_resetChatIdToLastMessageItemMap
isContactLimitsFeatureEnabled
_postNotification:userInfo:shouldLog:
allowedToShowConversationForChat:sync:
stateForParticipant:
initWithInteger:
invalidateSpamIndicatorCachedValues
invalidateSpamIndicatorCachedValuesIfNeeded
_updateRepliesIfNecessaryWithRemovedItems:threadIdentifiersOfRemovedParts:
_removeChatIdFromChatIdToLastMessageItemMap:
initForReadingFromData:error:
_enableStrictSecureDecodingMode
paymentTypeForMessage:
hasSurfRequestForPaymentType:
setStartSendProgressImmediately:
clientSendTime
setClientSendTime:
canHaveMultipleParticipants
_isDuplicate:
isSystemMessage
_fixSendingItemDateAndSortID:
isEmpty
isRead
isLocatingMessage
_updateLocationShareItemsForSender:
wasDataDetected
startSendProgressImmediately
_setJoinState:quietly:
_clearPendingMessages
_setParticipantState:forHandle:quietly:
trackEvent:withStatistic:
_performQueryWithKey:loadImmediately:block:completion:
_handleAttributionChanged
setGroupChatIdentifierUppercase:
uppercaseString
_clearCachedIdentifier
_chat:updateDisplayName:
initWithSender:time:guid:type:
setTitle:
setDestinationCallerID:
_chat_storeItem:inChat:
_updateDisplayName:sender:
__im_engramDataRepresentation
_chat:updateLastAddressedHandle:
_chat:updateLastAddressedSIMID:
persistentID
deviceIndependentID
sortUsingSelector:
dataUsingEncoding:
SHA1HexString
stringByAppendingFormat:
_setJoinState:
_chat:joinWithProperties:
_chat_declineInvitation:
_updateSenderForMessageIfNeeded:adjustingSender:
_updateBizIntentForMessageIfNeeded:
_updateLocaleForMessageIfNeeded:
_updateTypingGUIDForMessageIfNeeded:
_updateJoinStateWithMessageIfNeeded:
_updatePayloadForMessageIfNeeded:
_chat:sendMessage:
_refreshServiceForSendingIfNeededWithMessage:
_updateMessageItemTimeIfNeeded:
_fixItemForSendingMessageTime:
bizIntent
_updateBizIntent:
setBizIntent:
_getCurrentLocale
_updateLocale:
localeIdentifier
wasDowngraded
_updateGUID:
_updateFileAttachmentGUIDsForMessageIfNeeded:withPayloadAttachments:
_updateFileTransferGUIDs:
isSOS
lastIncomingMessage
lastSentMessageDate
dateWithTimeIntervalSinceReferenceDate:
_setLocalUserIsComposing:suppliedGUID:
notificationIDSTokenURI
setNotificationIDSTokenURI:
_chat:sendGroupPhotoUpdate:
_chat:retryGroupPhotoUpload:
latestTypingIndicatorTimeInterval
_setLocalUserIsComposing:suppliedGUID:typingIndicatorData:
setLatestTypingIndicatorTimeInterval:
_chatStyleSupportsTypingAndCancelTypingIndicators
_flagsForTypingIndicatorMessage:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:threadIdentifier:
setCustomTypingIndicatorIcon:
_shouldSendCancelTypingIndicator
_flagsForCancelTypingIndicatorMessage
setLocalUserIsComposing:
canSendTransfer:
locationAuthorizationDetermined
locationAuthorizationDenied
_updateUnreadCountForChat:
__clearReadMessageCache
markMessagesAsRead:
_chat:sendReadReceiptForMessages:
_setTimerForReadMessageCache
_copyWithFlags:
_chat_sendReadReceiptForAllMessages:
_clearUnreadCount
__imIsMutable
_chat:setValue:forChatProperty:
allPropertiesOfParticipant:
_chat:setProperties:ofParticipant:
sortedArrayUsingSelector:
setRecipient:locally:
_addParticipants:withState:
_leaveChat:
_chat_leave:leavingiMessageChat:
_chat_remove:
_setParticipantState:forHandles:quietly:
canAddParticipant:
participantsWithState:
_pendingParticipants
_chat:inviteParticipants:reason:toiMessageChat:
invitationForPendingParticipants
defaultInvitationMessageFromSender:flags:
_inviteParticipants:reason:toiMessageChat:
setInvitationForPendingParticipants:
_inviteParticipantsToChat:reason:toiMessageChat:
removeObjectsInRange:
_removeParticipantsFromChat:reason:fromiMessageChat:
_chat:removeParticipants:reason:fromiMessageChat:
showKettleAvailability
leave
_sanityCheckAccounts
_updateEngramID:
initWithDelegate:context:
chat:progressDidChange:sendingMessages:sendCount:totalCount:finished:
_chat_downloadPurgedAttachmentsForChat:
dismissInlineReplies
initWithChat:threadIdentifier:threadOriginator:
loadMessagesBeforeAndAfterGUID:numberOfMessagesToLoadBeforeGUID:numberOfMessagesToLoadAfterGUID:loadImmediately:threadIdentifier:
numberWithUnsignedLong:
_initializeFMF
setChatItemRulesClass:
chatItemRulesClass
sendProgress:progressDidChange:sendingMessages:sendCount:totalCount:finished:
chatScrutinyController
_shouldRegisterChat
_setDBUnreadCount:
_setDBFailedCount:
_shouldAnnouncePeopleJoin
_insertHistoricalMessages:queryID:isRefresh:isHistoryQuery:
messageItemForGUID:
firstMessage
lastIncomingFinishedMessage
lastIncomingFinishedMessageWithTextContent
lastRelatedIncomingFinishedMessageTextContentWithLimit:
lastMessageExists
messageGuidsForMyUnreadMentions
removeMentionMessageGUID:
messageCount
deleteAllHistory
markAsSpam:
updateIsBlackholed:
updateLineSwitchedTo:
loadParticipantContactsIfNecessary
allParticipantsAreContacts
updateShouldForceToSMS:
lastSeenMessageGuid
_updateLastSeenMessageGuid:
isAutoDonatingMessages
lastTranslatableMessageGUIDWithLanguageCode:
updateLastMessageGUID:forLanguageCode:
isEmergencyChat
updateIsEmergencyChat:
didUnregisterFromRegistry:
_recomputeOverallChatStatusQuietly:
_handleHandleStatusChanged:
_timingCollection
_startTiming:
_endTiming
_postIMChatItemsDidChangeNotificationWithInserted:removed:reload:regenerate:oldChatItems:shouldLog:
_handleMessageGUIDDeletions:
hasSurfRequestNotFromMe:
_participant:statusChanged:
_showErrorMessage:
endListeningToAttributionChanges
beginListeningToAttributionChanges
_engroupParticipantsUpdated
overallChatStatus
setRoomName:
displayNameWithRawAddress:isSpamFilteringEnabled:
_updateLastAddressedHandleID:
setLastAddressedHandleID:
_updateLastAddressedSIMID:
setLastAddressedSIMID:
roomNameWithoutSuffix
hasUnhandledInvitation
acceptInvitation
declineInvitation
cancelMessage:
sendCurrentLocationMessage
sendGroupPhotoUpdate:
retryGroupPhotoUploadIfNecessary
localUserIsTyping
localUserIsRecording
localTypingMessageGUID
setLocalUserIsComposing:typingIndicatorData:
localUserIsComposing
setLocalUserIsRecording:
canSendMessage:
canSendCurrentLocationMessage
authorizationToSendCurrentLocationMessageDetermined
authorizedToSendCurrentLocationMessage
authorizationToSendCurrentLocationMessageDenied
markMessageAsRead:
markAllMessagesAsRead
resortMessages
_setChatProperties:
allChatProperties
userToggledReadReceiptSwitch:
valueForProperty:ofParticipant:
setValue:forProperty:ofParticipant:
_generatePersonCentricID
_hasCommunicatedOnService:
leaveiMessageGroup
remove
canLeaveChat
canAddParticipants:
_invitePendingParticipants
inviteParticipants:reason:
inviteParticipantsToiMessageChat:reason:
removeParticipants:reason:
removeParticipantsFromiMessageChat:reason:
addPendingParticipants:
isPinned
shouldDisplayUnavailabilityIndicator
beginObservingHandleAvailability
endObservingHandleAvailability
_reloadChatItemsForHandleAvailabilityChange
inviteToViewAvailabilityIfNeeded
_handleAddressBookChangeForRecipientUID:
hasStoredMessageWithGUID:
_initWithDictionaryRepresentation:items:participantsHint:accountHint:
setSendProgressDelegate:
sendProgressDelegate
downloadPurgedAttachments
replyChatItems
loadInlineRepliesForThreadIdentifier:threadOriginator:messageGuid:
isMuted
muteUntilDate
setMuteUntilDate:
frequentReplies
setFrequentReplies:
setGroupID:
_guids
_setGUIDs:
contextInfo
setContextInfo:
setMergedPinningIdentifiers:
hasSurfRequest
setHasSurfRequest:
mentionMessageGuidsToRemove
setMentionMessageGuidsToRemove:
setOrderingTools:
cachedShouldShowReportSpam
setCachedShouldShowReportSpam:
cachedShouldShowSpam
setCachedShouldShowSpam:
isSubscriptionSwitchParticipantAddTypeFound
setIsSubscriptionSwitchParticipantAddTypeFound:
subscriptionSwitchParticipantAddChatItem
setSubscriptionSwitchParticipantAddChatItem:
setOriginalGroupID:
_typingGUID
_localUserIsComposing
_identifier
_roomName
_roomNameWithoutSuffix
_lastAddressedHandleID
_lastAddressedSIMID
_groupID
_engramID
_participants
_participantStates
_invitationForPendingParticipants
_messagesPendingJoin
_chatProperties
_participantProperties
_frequentReplies
_countOfAttachmentsNotCachedLocally
_countOfMessagesMarkedAsSpam
_chatItemRules
_chatItemsUpdater
_sendProgress
_downgradeState
_downgradeStateUpdater
_joinState
_style
_dbFailedCount
_dbUnreadCount
_context
_hasBeenConfigured
_isFirstMessageInvitation
_wasInvitationHandled
_didSendAFinishedMessage
_isUpdatingChatItems
_ignoreDowngradeStatusUpdates
_isFiltered
_forceMMS
_hasRefreshedServiceForSending
_hasHadSuccessfulQuery
_lastMessageTimeStampOnLoad
_currentUnreadHistoryQuery
_hasMoreRecentMessagesToLoad
_isCurrentlyDownloadingPurgedAssets
_momentSharePresentationCache
_hasSurfRequest
_isSubscriptionSwitchParticipantAddTypeFound
_inlineReplyController
_mergedPinningIdentifiers
_autoDonationBehavior
_mentionMessageGuidsToRemove
_bizIntent
_senderBlackholeWarningStatus
_groupChatIdentifierUppercase
_latestTypingIndicatorTimeInterval
_orderingTools
_currentLocationGUID
_cachedShouldShowReportSpam
_cachedShouldShowSpam
_subscriptionSwitchParticipantAddChatItem
_originalGroupID
T@"NSString",&,N,V_groupChatIdentifierUppercase
T@"IMChatScrutinyController",R,N
T@"NSMutableSet",&,N,S_setGUIDs:,V_guids
Td,N,V_latestTypingIndicatorTimeInterval
TB,N,V_hasSurfRequest
T@"IMOrderingTools",&,N,V_orderingTools
T@"NSString",&,N,V_currentLocationGUID
T@"NSSet",&,N,V_mergedPinningIdentifiers
Tq,N,V_cachedShouldShowReportSpam
Tq,N,V_cachedShouldShowSpam
TB,N,V_isSubscriptionSwitchParticipantAddTypeFound
T@"IMParticipantChangeChatItem",&,N,V_subscriptionSwitchParticipantAddChatItem
T@"IMMomentSharePresentationCache",R,N
T@"NSString",&,N,V_lastAddressedHandleID
T@"NSString",&,N,V_lastAddressedSIMID
T@"NSString",&,N,V_groupID
T@"NSString",&,N,V_originalGroupID
T^v,N,V_context
T@"NSString",R,N,V_guid
T@"IMAccount",R,N,V_account
TC,R,N,V_style
T@"NSData",R,N,V_engramID
autoDonateMessages
TB,R,N,GisAutoDonatingMessages
Tq,N,V_autoDonationBehavior
groupChat
TB,R,N,GisGroupChat
T@"NSMutableArray",&,N,V_mentionMessageGuidsToRemove
T@"NSString",&,N,V_displayName
T@"NSString",R,N,V_roomName
T@"NSArray",&,N,V_frequentReplies
Tq,R,N,V_joinState
Tq,R,N,V_lastMessageTimeStampOnLoad
T@"NSArray",R,N,V_participants
T@"IMHandle",&,N
T@"IMMessage",&,N,V_invitationForPendingParticipants
T@"NSDictionary",C,N,V_bizIntent
T@"IMInlineReplyController",R,N,V_inlineReplyController
_privateInitWithAccount:style:roomName:messages:participants:isFiltered:hasHadSuccessfulQuery:
loadMessagesUpToGUID:date:limit:loadImmediately:
_chat_loadHistory:limit:beforeGUID:afterGUID:threadIdentifier:queryID:loadImmediately:
_chat_loadHistory:limit:beforeGUID:afterGUID:threadIdentifier:queryID:
_chat_loadPagedHistory:numberOfMessagesBefore:numberOfMessagesAfter:messageGUID:threadIdentifier:queryID:
_chat_loadFrequentReplies:limit:queryID:loadImmediately:
_chat_loadUnreadMessages:limit:fallbackGUID:queryID:loadImmediately:
_chat_loadAttachments:queryID:loadImmediately:
_setAttachments:
_chat_loadUncachedAttachmentsCount:queryID:loadImmediately:
_chat_isDownloadingPurgedAssetsForChat:queryID:loadImmediately:
deleteChatItems:
scrutinyModeAttemptCount
_renderingDataDictionary
_setRenderingDataDictionary:
_serverBagPreventsScrutinyMode
clearScrutinyMode
setTranscriptRenderingMetadata:forChatIdentifier:
setNumberOfMessagesToKeepLoaded:
hasMoreMessagesToLoad
hasMoreRecentMessagesToLoad
loadMessagesUpToGUID:limit:
loadMessagesBeforeDate:limit:
loadInlineReplyMessagesUpToGUID:limit:threadIdentifier:loadImmediately:
loadFrequentRepliesLimit:loadImmediately:
loadUnreadMessagesWithLimit:fallbackToMessagesUpToGUID:
_setCountOfAttachmentsNotCachedLocally:
_setIsDownloadingPurgedAssets:
loadAttachments:
countOfAttachmentsNotCachedLocally
isCurrentlyDownloadingPurgedAttachments
deleteTransfers:
watermarkInForScrutinyMode
isInScrutinyMode
watermarkOutForScrutinyMode
storeGUIDInAttemptingListInScrutinyMode:
isGUIDInAttemptingListInScrutinyMode:
removeGUIDInAttemptingListInScrutinyMode:
TQ,N
T@"NSNumber",R,C,N
appendString:
shouldShowSMSWarningForSender:forRecipient:withConversationHistory:
beginHoldingUpdatesForKey:
endHoldingUpdatesForKey:
isHoldingUpdatesForKey:
isHoldingUpdates
endHoldingUpdatesForAllKeys
updateIfNeeded
stateCaptureRecents
promoteRecentObject:
updateChatItemsIfNeeded
setNeedsUpdate:
differenceFromArray:
enumerateObjectsAtIndexes:options:usingBlock:
removeIndexes:
firstIndex
indexGreaterThanIndex:
earlierDate:
_replaceStaleChatItems
pushObject:forKey:
peekObjectForKey:
_getDeleteChatItemMap:
_getMessageChatItemMap:withDeleteMap:andAllChatItems:
objectsForKey:
getBoolFromDomain:forKey:defaultValue:
_chat:sendSavedReceiptForMessage:
setExpireState:
_chat:sendNotifyRecipientCommandForMessage:
setFlags:
_chat:sendPlayedReceiptForMessage:
setTimePlayed:
_chat:setPlayedExpressiveSendForMessage:
setTimeExpressiveSendPlayed:
transcriptRenderingMetadataForChatIdentifier:
messagesToReportAsSpamFromChatItems:
__imItems
wantsSenderBlackholeWarning
deleteIMMessageItems:
markChatItemAsSaved:
markChatItemAsNotifyRecipient:
markChatItemAsPlayed:
markChatItemAsPlayedExpressiveSend:
chatItemsForItems:
allMessagesToReportAsSpam
handleIsSharingLocationWithMe:
handleIsFollowingMyLocation:
setExpired:
setActionable:
fmfHandlesForChat:
allSiblingFMFHandlesForChat:
chatHasParticipantsFollowingMyLocation:
allChatParticipantsFollowingMyLocation:
chatHasParticipantsSharingLocationWithMe:
chatHasSiblingParticipantsSharingLocationWithMe:
allChatParticipantsSharingLocationWithMe:
startSharingWithChat:untilDate:
stopSharingWithChat:
startTrackingLocationForChat:
stopTrackingLocationForChat:
fmfHandles
markAllLocationShareItemsAsUnactionable
allSiblingFMFHandles
hasRecipientsFollowingLocation
allRecipientsFollowingLocation
hasRecipientsSharingLocation
hasSiblingRecipientsSharingLocation
allRecipientsSharingLocation
shareLocationUntilDate:
stopSharingLocation
startTrackingParticipantLocations
stopTrackingParticipantLocations
T@"NSSet",R,N
T@"IMChatRegistry",R,N
_message
_invitation
messageFromIMMessageItem:sender:subject:
copyWithFlags:
_setInivtation:
testChatItems
ignoreDowngradeStatusUpdates
setIgnoreDowngradeStatusUpdates:
_automation_markAsRead:messageGUID:forChatGUID:fromMe:
TI,N
canEditChatItem:
repliedToChat
initWithTitle:maximumNumberOfTrackedObjects:queue:
isAssociatedMessageItem
stateDictionaryForDiagnosticsRequest
highlighted
TB,R,N,GisHighlighted
enumerateMessagesWithOptions:usingBlock:
messages
__imLastMessageItem
messageClass
initWithSender:time:text:fileTransferGUIDs:flags:error:guid:subject:threadIdentifier:
instantMessageWithText:messageSubject:flags:threadIdentifier:
instantMessageWithText:messageSubject:flags:expressiveSendStyleID:threadIdentifier:
_initWithSender:time:timeRead:timeDelivered:timePlayed:plainText:text:messageSubject:fileTransferGUIDs:flags:error:guid:messageID:subject:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:
_updateTime:
timeRead
_updateTimeRead:
timeDelivered
_updateTimeDelivered:
_updateTimePlayed:
_updateMessageID:
_associatedMessageGUID:
_associatedMessageType:
_associatedMessageRange:
_messageSummaryInfo:
setBalloonBundleID:
setExpressiveSendStyleID:
locale
useStandalone
setUseStandalone:
setIsSOS:
setAssociatedBalloonBundleID:
_syncedSyndicationRanges:
_updateFlags:
__stringByStrippingAttachmentAndControlCharacters
commonPrefixWithString:options:
characterIsMember:
stringByRemovingWhitespace
isEmote
senderName
replaceCharactersInRange:withString:
replaceNewlinesWithSpaces
attributesAtIndex:longestEffectiveRange:inRange:
hasInlineAttachments
isInvitationMessage
setMessageSummaryInfo:
hasMention
isAddressedToMe
messageFromIMMessageItemDictionary:body:sender:subject:
hasKnownSchemesForRichLinkURL:additionalSupportedSchemes:
host
compare:options:
supportedRichLinkURL:additionalSupportedSchemes:
determineRichLinksInMessage:
removeAttribute:range:
associatedBalloonBundleID
isSent
instantMessageWithText:flags:threadIdentifier:
instantMessageWithText:messageSubject:flags:expressiveSendStyleID:
instantMessageWithText:messageSubject:fileTransferGUIDs:flags:threadIdentifier:
instantMessageWithText:messageSubject:fileTransferGUIDs:flags:balloonBundleID:payloadData:expressiveSendStyleID:
fromMeIMHandle:withText:fileTransferGUIDs:flags:
hasKnownSchemesForRichLinkURL:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:
initWithSender:time:text:fileTransferGUIDs:flags:error:guid:subject:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:balloonBundleID:payloadData:expressiveSendStyleID:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:messageSummaryInfo:threadIdentifier:
initWithSender:fileTransfer:
summaryString
inlineAttachmentAttributesArray
isDelayed
isAutoReply
isAlert
wasDeliveredQuietly
didNotifyRecipient
compare:comparisonType:
messagesSeparatedByByteLength:
_ovverrideGUIDForTest:
_updateText:
_updateError:
setIsInvitationMessage:
setHasMention:
customTypingIndicatorIcon
_plainBody
_timeDelivered
_timeRead
_timePlayed
_messageSubject
_fileTransferGUIDs
_balloonBundleID
_payloadData
_expressiveSendStyleID
_timeExpressiveSendPlayed
_flags
_isInvitationMessage
_messageID
_locale
_isAddressedToMe
_hasMention
_isSOS
_useStandalone
_associatedMessageType
_messageSummaryInfo
_threadOriginator
_replyCountsByPart
_syndicationRanges
_syncedSyndicationRanges
_associatedBalloonBundleID
_sourceApplicationID
_customTypingIndicatorIcon
_notificationIDSTokenURI
_sortID
_associatedMessageRange
T@"IMHandle",&,N,S_updateSender:,V_sender
T@"NSError",&,N,S_updateError:,V_error
TQ,N,S_updateFlags:,V_flags
T@"NSDate",&,N,S_updateTime:,V_time
T@"NSDate",&,N,S_updateTimeRead:,V_timeRead
T@"NSDate",&,N,S_updateTimeDelivered:,V_timeDelivered
T@"NSDate",&,N,S_updateTimePlayed:,V_timePlayed
Tq,N,S_updateMessageID:,V_messageID
T@"NSString",&,N,S_updateGUID:,V_guid
T@"NSString",C,N,S_associatedMessageGUID:,V_associatedMessageGUID
Tq,N,S_associatedMessageType:,V_associatedMessageType
T{_NSRange=QQ},N,S_associatedMessageRange:,V_associatedMessageRange
T@"NSDictionary",C,N,S_messageSummaryInfo:,V_messageSummaryInfo
T@"NSDictionary",&,N,S_updateBizIntent:,V_bizIntent
T@"NSString",&,N,S_updateLocale:,V_locale
T@"NSAttributedString",&,N,S_updateText:,V_text
T@"NSArray",C,N,S_syndicationRanges:,V_syndicationRanges
T@"NSArray",C,N,S_syncedSyndicationRanges:,V_syncedSyndicationRanges
TB,N,V_isInvitationMessage
T@"NSArray",C,N,S_updateFileTransferGUIDs:,V_fileTransferGUIDs
TQ,N,V_sortID
T@"IMHandle",R,N,V_subject
T@"NSAttributedString",R,N,V_messageSubject
T@"NSString",&,N,V_balloonBundleID
T@"NSData",&,N,V_payloadData
T@"NSString",&,N,V_associatedBalloonBundleID
T@"NSString",&,N,V_sourceApplicationID
T@"NSString",&,N,V_expressiveSendStyleID
T@"NSDate",&,N,V_timeExpressiveSendPlayed
senderUnknown
TB,R,N,GisSenderUnknown
TB,R,N,V_isAddressedToMe
TB,N,V_hasMention
T@"NSData",&,N,V_customTypingIndicatorIcon
T@"NSString",&,N,V_notificationIDSTokenURI
TB,N,V_isSOS
TB,N,V_useStandalone
T@"IMMessage",&,N,V_threadOriginator
T@"NSDictionary",&,N,V_replyCountsByPart
richLinkDataSourceWithChatContext:
isRichLinkMessage
richLinkDataSource
T@"IMBalloonPluginDataSource",R,N
_vCardDataWithCLLocation:
isAssociatedMessage
editedMessageWithOriginalMessage:originalPrefixedGUID:newBody:
breadcrumbMessageWithText:associatedMessageGUID:balloonBundleID:fileTransferGUIDs:payloadData:threadIdentifier:
T@"NSDictionary",R,C,N
initWithSender:time:text:messageSubject:fileTransferGUIDs:flags:error:guid:subject:associatedMessageGUID:associatedMessageType:associatedMessageRange:associatedMessageInfo:
attributesAtIndex:effectiveRange:
rangeOfCharacterFromSet:
rangeOfString:options:range:
participantIDsHashToChatIdentifier
chatIdentifierToParticipantIDsHash
participantIDsHashToConversationContext
valueWithPointer:
conversationContextToParticipantIDsHash
chatForParticipantIDsHash:
addTrackingForChat:participantIDsHash:
removeTrackingForChat:
isFetchingCommLimitsPolicyForChat:
chatForConversationContext:
conversationContextForChat:
addTrackingForConversationContext:forParticipantIDsHash:
addSentinelContextForParticipantIDsHash:
contextForParticipantIDsHash:
setConversationContextToParticipantIDsHash:
setParticipantIDsHashToConversationContext:
setParticipantIDsHashToChatIdentifier:
setChatIdentifierToParticipantIDsHash:
_conversationContextToParticipantIDsHash
_participantIDsHashToConversationContext
_participantIDsHashToChatIdentifier
_chatIdentifierToParticipantIDsHash
T@"NSMutableDictionary",&,N,V_conversationContextToParticipantIDsHash
T@"NSMutableDictionary",&,N,V_participantIDsHashToConversationContext
T@"NSMutableDictionary",&,N,V_participantIDsHashToChatIdentifier
T@"NSMutableDictionary",&,N,V_chatIdentifierToParticipantIDsHash
initWithBundleIdentifier:
initSynchronouslyWithBundleIdentifier:
setPolicyCache:
addDelegate:queue:
fetchEmergencyNumbersSetWithProviderManager:
fetchScreenTimeAppPolicy
initWithPolicyChangeHandler:
setAppPolicyMonitor:
observeValueForKeyPath:ofObject:change:context:
policyCache
allowedByContactsHandle
emergencyProvider
emergencyHandles
addObserver:forKeyPath:options:context:
getSTConversation:
allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:
_allowedToShowConversationWithHandleIDs:sync:context:participantIDsHash:trackingChat:
_doRegisterForScreenTimeNotifications
allowableByContactsHandles:
initializeContext:participantIDsHash:trackingChat:
screenTimeDispatchQueue
emergencyNumbers
STConversation
participantHandleIDs
_addObserversToChat:
applicationCurrentlyLimited
controlCharacterSet
_participantsForChatDidChange:
removeObserver:forKeyPath:context:
callProviderManager
setEmergencyNumbers:
bundleIDPolicyMap
appPolicyMonitor
requestPoliciesForBundleIdentifiers:completionHandler:
providersChangedForProviderManager:
isDowntimeLimited
isEmergencyHandle:
registerForScreenTimeNotifications
setCallProviderManager:
setScreenTimeDispatchQueue:
setupDispatchQueue
setSetupDispatchQueue:
setBundleIDPolicyMap:
isRunningFromMacMessagesApp
setIsRunningFromMacMessagesApp:
_stateLock
_needsNotificationsRegistering
_stateLock_STConversation
_stateLock_emergencyNumbersSet
_isRunningFromMacMessagesApp
_callProviderManager
_screenTimeDispatchQueue
_setupDispatchQueue
_policyCache
_bundleIDPolicyMap
_appPolicyMonitor
T@"TUCallProviderManager",&,N,V_callProviderManager
T@"NSObject<OS_dispatch_queue>",&,N,V_screenTimeDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_setupDispatchQueue
T@"IMCommLimitsPolicyCache",&,N,V_policyCache
T@"NSMutableDictionary",&,N,V_bundleIDPolicyMap
T@"DMFApplicationPolicyMonitor",&,N,V_appPolicyMonitor
TB,N,V_isRunningFromMacMessagesApp
allowedToShowConversation
allowedToShowConversationSync
conversationContext
hashOfParticipantIDs
performanceLogHandle
initAsListener:
_handleChatParticipantsDidChange:
_handleAddressBookChange:
_handleAvailabilityChangedNotification:
_handleAvailabilityInvitationReceivedNotification:
_handleAvailabilityStateChangedNotification:
_daemonReallyDied:
initWithBool:
_registerChatDictionary:forChat:isIncoming:newGUID:shouldPostNotification:
_registerChatDictionary:forChat:isIncoming:newGUID:
_unregisterChatWithGUID:
allKeysForObject:
_removeFromGroupParticipantToChatsMap:
generateUnusedChatIdentifierForGroupChatWithServiceName:chatWithChatIdentifierExists:
_sortedParticipantIDHashForParticipants:
_addChat:participantSet:
_cachedChatsIncludingUnregisteredChats
ownerHandles
handleString
_ownerHandleStringsFromSubscription:
_chatsMatchingStatusSubscription:
_resetChatReconstructionGroupMaps
setChatIdToLastMessageItemMap:
setMessageClass:
remoteDaemon
sharedWithYouManager
_verifyParticipantsWithChat:dictionary:
unregisterChat:
unregisterChatWithGUID:
_unregisterChat:
_resetChatRegistry
_defaultNumberOfMessagesToLoad
_setDefaultNumberOfMessagesToLoad:
_isLoading
_postMessageSentNotifications
_setPostMessageSentNotifications:
setUnreadCount:
lastFailedMessageDate
setLastFailedMessageDate:
cachedChats
chatGUIDToCurrentThreadMap
chatGUIDToInfoMap
simulatedChatGUIDToChatMap
chatGUIDToiMessageSentOrReceivedMap
filterCategoryToEarliestInitiallyFetchedLastMessageDate
setFilterCategoryToEarliestInitiallyFetchedLastMessageDate:
groupIDToChatMap
groupParticipantToChatsMap
userActivity
setUserActivity:
blackholedChatsExist
setBlackholedChatsExist:
setFirstLoad:
registryChangeHistoryChatsToUnregister
setRegistryChangeHistoryChatsToUnregister:
registryChangeHistoryChatsToObserve
setRegistryChangeHistoryChatsToObserve:
setContactStore:
preExistingAllChats
setPreExistingAllChats:
_pendingQueries
_waitingForQueries
_queryCompletionBlocks
_historyModificationStamp
_markAsReadTimer
_timerStartTimeInterval
_loading
_daemonHadTerminated
_wantsHistoryReload
_isInternalInstall
_blackholedChatsExist
_chatsBeingLoadedMap
_chatPersonIDToChatMap
_processingChatCacheMiss
_firstLoad
_lastFailedMessageDate
_cachedChats
_chatGUIDToChatMap
_chatGUIDToCurrentThreadMap
_chatGUIDToInfoMap
_threadNameToChatMap
_simulatedChatGUIDToChatMap
_chatGUIDToiMessageSentOrReceivedMap
_cachedChatsInThreadNameMap
_filterCategoryToEarliestInitiallyFetchedLastMessageDate
_groupIDToChatMap
_groupParticipantToChatsMap
_userActivity
_registryChangeHistoryChatsToUnregister
_registryChangeHistoryChatsToObserve
_contactStore
_simulatedChats
_preExistingAllChats
_conversationManager
_chatIdToLastMessageItemMap
T@"<IMRemoteDaemonProtocol>",R,N
T@"IMDaemonController",R,N
T@"IMDaemonQueryController",R,N
T@"IMSharedWithYouManager",R,N
T@"NSMutableArray",R,N,V_cachedChats
T@"NSMutableDictionary",R,N,V_chatGUIDToChatMap
T@"NSMutableDictionary",R,N,V_chatGUIDToCurrentThreadMap
T@"NSMutableDictionary",R,N,V_chatGUIDToInfoMap
T@"NSMutableDictionary",R,N,V_threadNameToChatMap
T@"NSMutableDictionary",R,N,V_simulatedChatGUIDToChatMap
T@"NSMutableDictionary",R,N,V_chatGUIDToiMessageSentOrReceivedMap
T@"NSMutableArray",R,N,V_cachedChatsInThreadNameMap
T@"NSDictionary",C,N,V_filterCategoryToEarliestInitiallyFetchedLastMessageDate
T@"NSMutableDictionary",R,N,V_groupIDToChatMap
T@"NSMutableDictionary",R,N,V_groupParticipantToChatsMap
T@"NSUserActivity",&,N,V_userActivity
TB,N,V_processingChatCacheMiss
TB,N,V_blackholedChatsExist
firstLoad
TB,N,GisFirstLoad,V_firstLoad
TQ,N,V_unreadCount
Tq,N,V_lastFailedMessageDate
T@"NSSet",&,N,V_registryChangeHistoryChatsToUnregister
T@"NSSet",&,N,V_registryChangeHistoryChatsToObserve
T@"IMContactStore",&,N,V_contactStore
TB,N,S_setPostMessageSentNotifications:,V_postMessageSentNotifications
TQ,N,S_setDefaultNumberOfMessagesToLoad:,V_defaultNumberOfMessagesToLoad
T@"NSArray",&,N,S_setSimulatedChats:,V_simulatedChats
TB,R,N,V_loading
T@"NSArray",&,N,V_preExistingAllChats
T@"TUConversationManager",R,N,V_conversationManager
T@"NSDictionary",&,N,V_chatIdToLastMessageItemMap
runTestsIfNeeded
initWithPluginBundle:extension:pluginKitProxyClass:proxy:
containingBundle
teamID
setRequestInterruptionBlock:
objectForInfoDictionaryKey:ofClass:inScope:
setShouldHideAppSwitcher:
presentationContextsForInfoPlistArray:isStickerPackOnly:
objectForInfoDictionaryKey:ofClass:
isBetaApp
applicationType
isEnabledUnremovableApp
userElection
setUserElection:
setIsEnabledUnremovableApp:
_plugIn
setExtension:
T@"NSExtension",&,N,V_extension
localizedInfoDictionary
load
_loadBundle
_loadAppBundle
principalClass
_unremovableDisabledApps
_setUnremovableDisabledApps:
appWithPluginBundle:extension:
setIsLaunchProhibited:
setAppBundle:
setPluginBundle:
setItemID:
_isBetaPlugin
_isLaunchProhibited
_isStickerPackOnly
_showInBrowser
_shouldHideAppSwitcher
_appBundle
_pluginBundle
_itemID
_browserDisplayName
_version
_presentationContexts
TB,N,V_isLaunchProhibited
TB,N,V_showInBrowser
TB,N,V_shouldHideAppSwitcher
T@"NSBundle",&,N,V_appBundle
T@"NSBundle",&,N,V_pluginBundle
T@"NSNumber",&,N,V_itemID
T@"NSString",&,N,V_browserDisplayName
T@"NSString",&,N,V_identifier
TQ,N,V_presentationContexts
TB,R,N,V_isBetaPlugin
TB,R,N,V_isStickerPackOnly
T@"NSString",R,N,V_version
synchronousReplies
setSynchronousReplies:
_synchronousReplies
TB,N,V_synchronousReplies
setAttributionInfo:
appendFilePathsWithGUIDs:withText:
sendMessage:destinationID:filePaths:groupID:bundleID:attributionInfoName:service:timeOut:error:
sendMessage:destinationID:filePaths:isAudioMessage:groupID:bundleID:attributionInfoName:service:timeOut:threadIdentifier:error:
copyFilePathsToTmpLocation:
createIMMessageToSendWithMessage:filePaths:bundleID:attributionInfoName:isAudioMessage:threadIdentifier:
sendIMMessage:chat:timeOut:resultDict:error:
pendingSendGUIDs
__im_filePathWithVariant:
sendMessage:destinationID:filePaths:groupID:service:timeOut:error:
sendMessage:destinationID:timeOut:threadIdentifier:error:
setPendingSendGUIDs:
sentMessageInfo
setSentMessageInfo:
_pendingSendGUIDs
_sentMessageInfo
T@"NSMutableSet",&,N,V_pendingSendGUIDs
T@"NSMutableDictionary",&,N,V_sentMessageInfo
deleteTmpFilePath:
copyItemAtPath:toPath:error:
initWithCharacters:length:
scanMessage:completionBlock:
classForMessageItemDictionary:
spokenPhrase
pronunciationHint
vocabularyIdentifier
alternativeSpeakableMatches
initWithDaemon:andBlock:
setDaemon:
setUpdateBlock:
setUpConnectionToDaemaon
_incomingCodeUpdateFromDaemon:
updateBlock
initWithBlockForUpdates:
consumeCodeWithGuid:
daemon
requestedOneTimeCodeStatusForConnection
setRequestedOneTimeCodeStatusForConnection:
_requestedOneTimeCodeStatusForConnection
_daemon
_updateBlock
T@"IMDaemonController<IMRemoteDaemonProtocol>",&,N,V_daemon
T@?,C,N,V_updateBlock
TB,N,V_requestedOneTimeCodeStatusForConnection
handlesForCNContacts:useBestHandle:useExtendedAsyncLookup:completion:
validHandlesForCNContacts:useExtendedAsyncLookup:completion:
keysOfEntriesPassingTest:
bestHandlesForCNContacts:completion:
validHandlesForCNContacts:completion:
_postMultiWayStateChangedNotification:
registerWithCompletionHandler:
setUpInitialCallState
_activeTUConversations
_existingChatForTUConversation:
conversationManager:stateChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:removedActiveConversation:
conversationManager:activitySessionsChangedForConversation:
conversationManager:remoteMembersChangedForConversation:
conversationsChangedForConversationManager:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:addedActiveConversation:
conversationManager:addedActivatedLink:
conversationManager:removedActivatedLink:
conversationManager:modifiedActivatedLink:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:conversation:requestedScreenShareForParticipant:
serverDisconnectedForConversationManager:
conversationManager:migratingFromConversation:toConversation:
conversationManager:addedActivitySuggestion:
conversationManager:removedActivitySuggestion:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:buzzedMember:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:updatedIncomingPendingConversations:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:ignoreLMIRequestsChangedForConversation:
bundleForClass:
displayNameForContact:
IMCoreSetupTimingCollectionEnd
insertions
removals
hasChanges
initWithDomain:code:userInfo:
sendMessagesfromReplayDatabase:userInfo:error:
beginRecordingMessagesToReplayDatabase:error:
stopRecordingDatabaseError:
_runChangeParticipantsQueryWithGroupID:participants:timeOut:error:optArguments:addParticipants:
createGroupChatWithDestinationIDs:error:optArguments:
addParticipantsWithGroupID:participants:timeOut:error:optArguments:
removeParticipantsWithGroupID:participants:timeOut:error:optArguments:
changeGroupNameWithGroupID:newName:timeOut:error:optArguments:
groupParticipantsWithGroupID:timeOut:error:optArguments:
groupNameWithGroupID:timeOut:error:optArguments:
_bestGuessURIFromCanicalizedID
_bestGuessURI
addDelegate:forService:listenerID:queue:
_hasCacheForService:
_currentCachedIDStatusForDestination:service:listenerID:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
__statusForID:onService:isCanonicalized:
_idStatusForID:onService:
_processIDStatusResponseForURI:resultStatus:forService:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
_requestStatusForID:onService:onAccount:
_statusForCanonicalizedID:onService:
_idStatusForID:onAccount:
requestStatusForID:onService:
requestStatusForID:onAccount:
statusForID:onService:
_servicesLock
set_servicesLock:
_servicesRegistered
set_servicesRegistered:
T@"NSMutableSet",&,N,V_servicesRegistered
T@"NSRecursiveLock",&,N,V_servicesLock
__im_ff_hubbleCMMProcessingEnabled
shouldGenerateTopLevelChatItem
_newChatItemsWithChatContext:
_newChatItems
simSwitcherEnabled
_chatItemsWithReplyCountsForNewChatItems:parentItem:threadOriginatorItem:
chatItemForIMChatItem:
_hasMessageChatItem
_serviceHandle
_replyCountChatItemForChatItem:parentItem:threadIdentifier:replyMessageGUID:replyIsFromMe:threadOriginatorMessageItem:
shouldShowExpressiveMessageTextAsText:
_localizedBackwardsCompatibleExpressiveSendText
_shouldShowEffectPlayButtonForMessage:
_replyCountChatItemForChatItem:parentItem:threadOriginatorMessageItem:
originalMessageGUID
_processChatItemsForBreadcrumbs:
countForKey:
shouldShowRaiseMessageStatus
_shouldAdjustNewDeliveredItemIndex:chatItems:
_updateOrRemoveDeliveredStatusItemMovingFromOldIndex:chatItems:
_newDeliveredChatItemWithStatusType:atIndex:chatItems:
_updateAggregateAttachmentMessagePartAssociatedItems:map:
_processChatItemsForReplayButton:
_processChatItemsForAttribution:
_processChatItemsForUnavailabilityIndicator:
_manageMomentShareAndAggregateItemsForChatItems:momentSharePresentationCache:
removeObjectsAtIndexes:
momentShare
expiryDate
photosCount
videosCount
numberOfAssetsNotCopied
_shouldDisplayAttributionInfo:
_lastItemIndexExcludingWatchReplyOptions:
_effectControlForChatItem:
insertObjects:atIndexes:
addChatItem:toChatItemsAtEndButBeforeWatchReplyItems:
lastIndex
_attributionChatItemForChatItem:
isExtensibleMessageWithPluginPayload:chatContext:
isExtensibleMessageWithPluginPayload:
setChangeType:
setStatus:
setDirection:
testShouldShowReportSpamForChat:items:
testShouldShowSMSSpamForChat:items:
testShouldAppendNumberChanged:previousItem:showAllChanges:
destinationCallerID
isPhoneNumber:equivalentToExistingPhoneNumber:
destinationIdIsPhoneNumber
isMessageAcknowledgment
_didReplaceItem:oldItem:idx:
differenceFromArray:withOptions:usingEquivalenceTest:
isCancelTypingMessage
isIncomingTypingMessage
isTypingOrCancelTypingMessage
isIncomingTypingOrCancelTypingMessage
initWithIdentifier:imageData:
T@"NSString",R,C,N,V_identifier
T@"NSData",R,N,V_imageData
aa_primaryAppleAccount
aa_personID
primaryiCloudAccountIdentifier
source
sendEvent:
registerEvent:eventType:messageGUID:chat:forImages:childID:deviceID:senderID:eventSender:
messagesURLWithChat:
recipientStrings:
initWithChildID:deviceID:sourceBundleID:absoluteTimeStamp:eventDirection:eventType:contentType:contactHandles:contentID:conversationID:imageData:senderHandle:contentURL:conversationURL:
messagesURLWithMessageGUID:
registerEvent:eventType:messageGUID:chat:forImages:
sendSyncChangedEvent
syncStats
setSyncing:
setTestState:
eligibleForTruthZone
setEligibleForTruthZone:
isStartingSync
isChangingEnabledState
setLastSyncDate:
isInExitState
setIsInExitState:
setControllerSyncState:
syncType
setControllerSyncType:
testState
rampedIntoTruthZone
setRampedIntoTruthZone:
setIsChangingEnabledState:
setIsStartingSync:
setIsDisablingDevices:
setSyncControllerSyncState:
setSyncType:
setSyncStats:
_testState
_rampedIntoTruthZone
_isStartingSync
_syncType
_syncStats
enabled
TB,N,GisEnabled
syncing
TB,N,GisSyncing
T@"NSDate",&,N
TB,N,V_rampedIntoTruthZone
Tq,N,V_isChangingEnabledState
TB,N,V_isStartingSync
TB,N,V_isDisablingDevices
TQ,N,V_syncControllerSyncState
Tq,N,V_syncType
T@"NSDictionary",&,N,V_syncStats
T@"IMCloudKitMockSyncState",&,N,V_testState
loadMessageWithGUID:completionBlock:
loadMessageItemWithGUID:completionBlock:
_runningQueries
set_runningQueries:
T@"NSMutableDictionary",&,V_runningQueries
setDefaultTestDuration:
singletonOverride
setCloudKitHooks:
tearDown
willSendSyncState:withSyncStatistics:
updateMockSyncState
defaultTestDuration
_previousInterval
_defaultTestDuration
_cloudKitHooks
Td,V_defaultTestDuration
T@"IMCloudKitHookTestSingleton",&,N,V_cloudKitHooks
_cachedRegisteredChats
_possiblyUnregisteredCachedChatWithIdentifier:style:account:
_hasSameMembers:
_cachedChatWithIdentifier:style:
_cachedChatWithHandle:
_cachedChatsWithMessage:
finishDecoding
addAttribute:value:range:
enumerateAttributesInRange:options:usingBlock:
scanMessage:waitUntilDone:completionBlock:
_scanAttributedStringWithMessage:attributedString:plainText:
_processLinkInAttributedString:
_scanMessageUsingScanner:attributedString:
sharedScanner
scannerQueue
_scannerQueue
initWithPath:guid:createdDate:isSticker:isTransferComplete:
fileTransfer
createdDate
isTransferComplete
_path
_isSticker
_isTransferComplete
_createdDate
_shouldHideProgressInFirstSevenDays
_IMChatGetIdentifiersAndServicesTestHookWithChatRegistry:chat:identifiers:services:personCentricEnabled:
_eventForMessage:
setReplyToGUID:
sharingEnabled
_nicknameSharingAudience
_nicknameSharingEnabled
_shouldShareMeCardForContactsOnlyAudienceWithChat:
_shouldShareMeCardForAlwaysAskAudienceWithChat:
setShouldSendMeCard:
_setMeCardSharingOnMessage:forChat:
setTypingIndicatorIcon:
_trackUsageForMessage:
removeCharactersWithAttribute:
_setReplyToGuidOnMessage:forChat:
setUserActivityForChat:message:orHandles:title:
_chat_markAsSpam:queryID:autoReport:
initWithFirst:second:
archivedDataWithRootObject:requiringSecureCoding:error:
__CLLocationManagerClass
setDesiredAccuracy:
locationUpdateTimer
setLocationUpdateTimer:
setLocateStartTime:
_locationUpdateTimerFired:
locationManager
startUpdatingLocation
setLocation:
_errorHappend:
_fireCompletionHandlers
stopUpdatingLocation
horizontalAccuracy
timestamp
locateStartTime
_shouldSendLocation:timeIntervalSinceStart:
_locationManagerTimedOut
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
startUpdatingCurrentLocationWithAuthorizedHandler:updateHandler:
preciseLocationAuthorized
T@"CLLocation",R,N
T@"NSError",R,N
_startLocationUpdateTimerWithAuthorizedHandler:updateHandler:
setHandlers:
setLocationManager:
inRequestPreciseLocation
setInRequestPreciseLocation:
firstAuthorizationCallbackArrived
setFirstAuthorizationCallbackArrived:
_locationManager
_timeoutHandler
_location
_locateStartTime
_locationUpdateTimer
_inRequestPreciseLocation
_firstAuthorizationCallbackArrived
T@"CLLocation",&,N,V_location
T@"NSError",&,N,V_error
T@"NSTimer",&,N,V_locationUpdateTimer
T@"CLLocationManager",&,N,V_locationManager
T@"NSMutableArray",&,N,V_handlers
T@"NSDate",&,N,V_locateStartTime
TB,N,V_inRequestPreciseLocation
TB,N,V_firstAuthorizationCallbackArrived
__FMFSessionClass
initWithDelegate:
setDelegateQueue:
_updateActiveDevice
setFmfProvisionedState:
FMFRestricted
fmfProvisionedState
_accountStore
aa_primaryAppleAccountWithPreloadedDataclasses
isProvisionedForDataclass:
_accountStoreDidChangeNotification:
fmfHandle
fmfSiblingHandles
establishingAccountID
session
setWithObjects:
addHandles:
removeHandles:
_startSharingWithFMFHandles:inChat:untilDate:
_stopSharingWithFMFHandles:inChat:
locationForFMFHandle:
cachedLocationForHandle:
getHandlesSharingLocationsWithMe
handleWithId:
locationForHandle:
_callerIDForChat:
_postNotification:object:userInfo:
refreshLocationForHandles:callerId:priority:completion:
fmfHandleIsSharingLocationWithMe:
fmfHandleIsFollowingMyLocation:
getHandlesFollowingMyLocation
fmfGroupIdGroup
canShareLocationWithHandle:groupId:callerId:
fmfGroupIdOneToOne
getOfferExpirationForHandle:groupId:callerId:
setActiveDevice:
getActiveLocationSharingDevice:
setActiveDevice:completion:
fromHandle
_postRelationshipStatusDidChangeNotificationWithHandle:
setEstablishingAccountID:
sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:
stopSharingMyLocationWithHandles:groupId:callerId:completion:
didReceiveLocation:
didFailToFetchLocationForHandle:withError:
connectionError:
didReceiveFriendshipRequest:
didStartSharingMyLocationWithHandle:
didStopSharingMyLocationWithHandle:
didStartAbilityToGetLocationForHandle:
didStopAbilityToGetLocationForHandle:
didUpdateHidingStatus:
sendMappingPacket:toHandle:
mappingPacketProcessingCompleted:
didFailToHandleMappingPacket:error:
didChangeActiveLocationSharingDevice:
didUpdateActiveDeviceList:
didUpdatePendingOffersForHandles:
didReceiveServerError:
didUpdateFavoriteHandles:
didUpdateFences:
didUpdatePreferences:
networkReachabilityUpdated:
imIsProvisionedForLocationSharing
fmfOpenURLStringForChat:
startTrackingLocationForHandle:
stopTrackingLocationForHandle:
startSharingWithHandle:inChat:untilDate:
stopSharingWithHandle:inChat:
locationForHandleOrSibling:
refreshLocationForHandle:inChat:
refreshLocationForChat:
timedOfferExpirationForChat:
makeThisDeviceActiveDevice
friendshipRequestReceived:
friendshipWasRemoved:
setSession:
activeDevice
_establishingAccountID
_session
_activeDevice
_fmfProvisionedState
T@"FMFDevice",&,N,V_activeDevice
T@"FMFSession",&,N,V_session
T@"NSString",&,N,V_establishingAccountID
TQ,N,V_fmfProvisionedState
setWithSet:
_updateInfo:forGUID:updatingUnreadCount:
_account:chat:style:chatProperties:messagesUpdated:
sortedArrayUsingFunction:context:
_processMessagesForAccount:chat:style:chatProperties:groupID:chatPersonCentricID:messages:messagesComingFromStorage:
_updateChat:updateIsFiltered:
_shouldSwitchAccountAddingMessagesToChat:messageItems:messagesComingFromStorage:chatProperties:
_processMessageForAccount:chat:style:chatProperties:groupID:chatPersonCentricID:message:
_clearExistingTypingIndicatorsWithMessageGUID:excludingChatWithIdentifier:
_updatePersonCentricIDToChatMapForChat:toNewPersonCentricID:
_updateUnreadCountForChat:shouldPostNotification:
_updateInfo:forGUID:updatingUnreadCount:shouldPostNotifications:
_updateChatAutoDonationBehavior:withInfo:shouldPostNotification:
_updateAutoDonationBehavior:forChat:shouldPostNotification:
setIsCorrupt:
markMessageAsCorrupt:
_checkIfItemIsCorrupt:
_checkLimitAndSetMessagesToKeepLoadedIfNeeded:chat:
_completeChatLoadQueryWithChat:queryID:
unsignedLongValue
_chatForIdentifiers:
_copyMergedChatsPairedArrayFromMergedChatsArray:
__handleMergedChatReconstructions:
updateChatDictionaryArray:createdChat:joinstate:setHasCommunicatedOveriMessage:
_fetchInitialBatchOfContactsOnLaunch
setBatchFetchingCompleted
_batchFetchRemainingContactsOnLaunch
fetchCNContactsForHandlesWithIDs:isFinalBatch:
setHandleIDToCNIDMap:
totalTimeForKey:
__handleChatReconstructions:
_chatLoadedWithChatIdentifier:chats:
_previouslyBlackholedChatLoadedWithHandleIDs:chat:
loadAllChatsProgressivelyEnabled
chat:lastSeenMessageGuidUpdated:
_updateChat:groupID:shouldPostNotification:
frequentRepliesQuery:finishedWithResult:limit:
chatPersonIDToChatMap
scrutinyInfo
_maxDurationForScrutinyMode
markMessageAsNotCorrupt:
_setupChatItemRules
itemMatchesThread:
itemsMatchingThread:guids:
disableItemInserts
setDisableItemInserts:
setHasEarlierMessagesToLoad:
setHasRecentMessagesToLoad:
chatItemRules
setChatItemRules:
chatItemsUpdater
setChatItemsUpdater:
isUpdatingChatItems
setIsUpdatingChatItems:
_disableItemInserts
T@"IMChat",W,N,V_chat
T@"IMMessageItem",&,N,V_threadOriginator
TB,N,V_disableItemInserts
T@"<IMChatItemRules>",&,N,V_chatItemRules
T@"IMScheduledUpdater",&,N,V_chatItemsUpdater
TB,N,V_isUpdatingChatItems
TB,N,V_hasEarlierMessagesToLoad
TB,N,V_hasRecentMessagesToLoad
_timeDataSourceClass
setSendingItems:
_scheduleSendProgressTimerIfNeeded
_hasSendingMessages
_updateSendProgress
timeDataSource
_resetSendProgress
_sendProgressTimerFired:
timerWithTimeInterval:target:selector:userInfo:repeats:
addTimer:forMode:
sendingItems
setTimeDataSource:
_sendProgressTimer
_sendingItems
_cachedSendProgress
_wasShowing
_startSendProgressImmediately
_timeDataSource
T@"NSDictionary",C,N,V_sendingItems
T@"<IMSendProgressTimeDataSource>",&,N,V_timeDataSource
T@"<IMSendProgressDelegate>",W,N,V_delegate
T@,W,N,V_context
TB,N,V_startSendProgressImmediately
Td,R
enumerateRangesUsingBlock:
countOfIndexesInRange:
subarrayWithRange:
getObjects:range:
replaceObjectsInRange:withObjectsFromArray:
availabilityEnabled
_availabilityCacheKeyForHandle:
currentAvailabilityByHandleCache
lastCurrentAvailabilityCacheClearTimestamp
lastKnownAvailabilityByHandleCache
_postNotificationForUpdatedAvailabilityWithSubscription:
_fetchAvailabilityForHandle:completion:
_cachedStatusSubscriptionForIMHandle:
currentStatus
datePublished
initWithPublishedStatus:
isAvailableToMe
isAvailable
_statusSubscriptionForIMHandle:completion:
subscriptionService
personalStatusSubscription
retainTransientSubscriptionAssertionWithCompletion:
releaseTransientSubscriptionAssertionWithCompletion:
initWithStatusTypeIdentifier:
currentSubscriptionByHandleCache
_skHandleForIMHandle:
statusSubscriptionForHandle:completion:
_skHandleForString:
_clearCurrentAvailabilityCache
subscriptionInvitationReceived:
subscriptionReceivedStatusUpdate:
subscriptionStateChanged:
subscriptionServiceDaemonDisconnected:
fetchPersonalAvailabilityWithCompletion:
setCurrentAvailabilityByHandleCache:
setLastKnownAvailabilityByHandleCache:
setCurrentSubscriptionByHandleCache:
setLastCurrentAvailabilityCacheClearTimestamp:
setSubscriptionService:
privateWorkQueue
setPrivateWorkQueue:
_currentAvailabilityByHandleCache
_lastKnownAvailabilityByHandleCache
_currentSubscriptionByHandleCache
_lastCurrentAvailabilityCacheClearTimestamp
_subscriptionService
_privateWorkQueue
T@"NSCache",&,N,V_currentAvailabilityByHandleCache
T@"NSCache",&,N,V_lastKnownAvailabilityByHandleCache
T@"NSCache",&,N,V_currentSubscriptionByHandleCache
T@"NSDate",&,N,V_lastCurrentAvailabilityCacheClearTimestamp
T@"SKStatusSubscriptionService",&,N,V_subscriptionService
T@"NSObject<OS_dispatch_queue>",&,N,V_privateWorkQueue
setTestSuiteStartDelay:
addTest:
setShouldTearDown:
setTestStartDelay:
overrideSingletonWithObject:
shouldTearDown
removeSingletonOverride
runTestsIfNeededWithRepeatCount:
_shouldTearDown
TB,V_shouldTearDown
_simulatedAccountsPerService
businessName
isMe
initWithAddress:countryCode:isMe:
cnContactID
_address
_isMe
_imHandle
_haveFetchedIMHandle
T@"NSString",R,V_address
TB,R,V_isMe
T@"NSString",R
T@"NSString",R,V_countryCode
setHandles:
isGroup
setGuid:
setChatIdentifier:
setServiceName:
setIsGroup:
isBlackholed
handles
_isGroup
_isBlackholed
_chatIdentifier
_serviceName
_handles
T@"NSString",&,V_guid
T@"NSString",&,V_chatIdentifier
T@"NSString",&,V_serviceName
T@"NSString",&,V_displayName
TB,V_isGroup
T@"NSArray",&,V_handles
TB,R,V_isBlackholed
chatGUID
initWithChatGuid:displayName:participants:
_chatGUID
T@"NSString",R,V_chatGUID
T@"NSString",R,V_displayName
T@"NSArray",R,V_participants
labelID
initWithHandle:date:
initWithLabelID:date:
setHandle:
setDate:
setLabelID:
_date
_labelID
T@"NSString",&,V_handle
T@"NSString",&,V_labelID
T@"NSDate",&,V_date
fileUrl
setFileUrl:
fileTransferState
setFileTransferState:
setUti:
setIsSticker:
isOutgoing
setIsOutgoing:
creationDate
_fileUrl
_fileTransferState
_uti
_isOutgoing
_creationDate
T@"NSURL",&,V_fileUrl
Tq,V_fileTransferState
T@"NSString",&,V_uti
TB,V_isSticker
TB,V_isOutgoing
T@"NSDictionary",&,V_attributionInfo
T@"NSDate",R,V_creationDate
setSummary:
setDateRead:
setDateForLastReadMessageInChat:
setRecipients:
setSubject:
setAttributedText:
setChatGuids:
setReferencedMessage:
setBundleId:
setDisplayAppName:
setRichLinkMetadata:
setPeerPaymentAmount:
recipients
chatGuids
lastReadDate
spiChatWithQOS:
setMessageID:
setIsRead:
setIsAudioMessage:
itemType
setItemType:
setIsGroupChat:
summary
effect
setEffect:
setService:
dateRead
dateForLastReadMessageInChat
referencedMessage
bundleId
messageType
setMessageType:
displayAppName
peerPaymentAmount
hasDataDetectedResults
setHasDataDetectedResults:
_chatGuids
_attributedText
_effect
_recipients
_dateRead
_dateForLastReadMessageInChat
_isRead
_isAudioMessage
_isGroupChat
_hasDataDetectedResults
_itemType
_body
_summary
_referencedMessage
_bundleId
_messageType
_displayAppName
_richLinkMetadata
_peerPaymentAmount
Tq,V_messageID
Tq,V_itemType
T@"NSArray",&,V_chatGuids
T@"NSString",&,V_groupID
TB,V_isGroupChat
T@"NSString",&,V_service
T@"NSString",&,V_text
T@"NSString",&,V_body
T@"NSString",&,V_summary
T@"NSAttributedString",&,V_attributedText
T@"NSString",&,V_subject
T@"NSString",&,V_effect
T@"IMSPIHandle",&,V_sender
T@"NSArray",&,V_recipients
T@"NSDate",&,V_dateRead
T@"NSDate",&,V_dateForLastReadMessageInChat
TB,V_isRead
TB,V_isAudioMessage
T@"IMSPIMessage",&,V_referencedMessage
T@"NSString",&,V_bundleId
Tq,V_messageType
T@"NSString",&,V_displayAppName
T@"LPLinkMetadata",&,V_richLinkMetadata
T@"PKCurrencyAmount",&,V_peerPaymentAmount
T@"NSArray",&,V_attachments
TB,V_hasDataDetectedResults
T@"NSDate",R
T@"NSURL",R
newlineCharacterSet
dictionaryWithMessageSummaryInfoData:
IMMMSMaximumSlideCountForPhoneNumber:simID:
setChatCap
setChatCapWithAttachments
clearChatCap
sortUsingComparator:
sharedDatabase
dataWithContentsOfURL:
accessResourceByConsumingSandboxExtensionWithBlock:
fetchGroupPhotoPathsForChatsWithGroupIDs:completionHandler:
numberOfRanges
rangeAtIndex:
allValuesSortedByGUIDKeyWithBackupOrder:
isSpamFilteringOn
messageParts
chatForURL:outMessageText:outRecipientIDs:outService:outMessageGUID:presentOverlay:
resourceSpecifier
initWithActivityType:
setNeedsSave:
becomeCurrent
initWithStringValue:
phoneNumbers
isLikePhoneNumber:
emailAddresses
initWithValue:type:label:
descriptorForRequiredKeysForStyle:
descriptorForUsedKeys
_inPersonHandleFromIMHandle:contact:
_inPersonNameForContact:imHandle:
componentsForContact:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isMe:
messagesURLWithChat:orHandles:withMessageText:
setTargetContentIdentifier:
_inPersonFromIMHandle:isMe:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithRecipients:content:speakableGroupName:conversationIdentifier:serviceName:sender:
_setLaunchId:
im_lastPathComponent
imageWithURL:
setImage:forParameterNamed:
initWithCode:userActivity:
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:messageType:serviceName:
setSentMessage:
initWithIntent:response:
setGroupIdentifier:
initWithStartDate:duration:
setDateInterval:
setIntentHandlingStatus:
setInteraction:
setEligibleForHandoff:
setEligibleForSearch:
setEligibleForPublicIndexing:
chatForURL:outMessageText:outRecipientIDs:outService:outMessageGUID:
setActiveChatURL:
setUserActivityForChat:orHandles:title:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
setupIMCloudKitHooks
clearLocalSyncState
shouldShowCloudKitUI
removedFromiCloudBackup
shouldOptimizeAttachmentStorage
setShouldOptimizeAttachmentStorage:
clearTombStoneMessagesTable
reportMetricToCK:
reportMetricToCK:withSuccess:
@16@0:8
v16@0:8
v32@0:8@16@24
B40@0:8@16@24q32
v24@0:8@16
Q16@0:8
v24@0:8Q16
B16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
v28@0:8@16B24
v32@0:8@16B24B28
B32@0:8@16@24
@24@0:8@16
v28@0:8c16d20
@20@0:8B16
@24@0:8q16
q16@0:8
@48@0:8@16@24@32@40
@40@0:8@16@24@32
@32@0:8@16@24
v44@0:8@16@24@32B40
B24@0:8@16
Q40@0:8@16@24@32
v32@0:8@16@?24
v24@0:8@?16
v24@0:8q16
@"NSUbiquitousKeyValueStore"
@"NSOrderedSet"
@"NSDictionary"
@24@0:8Q16
@28@0:8@16i24
@24@0:8^{_NSZone=}16
@48@0:8@16@24^@32^@40
v40@0:8@16q24@32
Q40@0:8@16q24@32
v40@0:8{CGSize=dd}16@?32
@24@0:8^@16
{CGSize=dd}32@0:8{CGSize=dd}16
@"IMChat"
@"IMPluginPayload"
@"NSURL"
@"DDScannerResult"
@"NSArray"
@"NSMutableSet"
@"NSString"
#16@0:8
v24@0:8#16
B40@0:8@16@24@32
B32@0:8@16^q24
v40@0:8@16Q24Q32
q24@0:8@16
q32@0:8@16@24
I16@0:8
@"IMAccount"
@"NSData"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSAttributedString"
@"NSDate"
@"IMBalloonPluginDataSource"
q40@0:8@16@24@32
@?16@0:8
d16@0:8
@"NSMutableDictionary"
@32@0:8@16^B24
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
@"NSObject<SGSuggestionsServiceContactsProtocol>"
@"NSCache"
@"NSHashTable"
^{__CFRunLoopObserver=}
v48@0:8@16@24@32@40
v40@0:8I16@20i28@32
v32@0:8Q16@24
B24@0:8Q16
v20@0:8I16
v28@0:8B16@20
v44@0:8@16B24@28q36
v32@0:8i16i20@24
v36@0:8Q16@24i32
@28@0:8@16B24
@44@0:8@16B24@28@36
Q32@0:8@16@24
{_FZChatRoomValidity=iS}24@0:8@16
B32@0:8@16q24
q32@0:8@16q24
v32@0:8q16@24
i24@0:8@16
v28@0:8i16@20
@"IMPeople"
@"NSRecursiveLock"
@"NSMapTable"
@"IMHandle"
@"IMServiceImpl"
B40@0:8@16@24C32B36
v36@0:8@16@24B32
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v84@0:8@16@24@32@40I48B52@56Q64I72@76
v48@0:8@16I24@28i36@40
v32@0:8@16Q24
v28@0:8@16I24
v32@0:8@16q24
v36@0:8@16B24@28
v52@0:8@16@24C32@36@44
v68@0:8@16@24C32@36@44@52@60
v72@0:8@16@24C32@36@44@52@60B68
v60@0:8@16@24C32@36@44@52
v44@0:8@16@24C32@36
v72@0:8@16@24C32@36@44@52i60@64
v64@0:8@16@24C32@36@44@52i60
v56@0:8@16@24@32@40Q48
v72@0:8@16@24@32Q40Q48@56B64B68
v44@0:8@16C24@28@36
v48@0:8@16Q24Q32Q40
v56@0:8@16@24I32@36I44@48
v48@0:8@16I24@28@36B44
v56@0:8@16@24@32@40@48
v56@0:8@16@24@32@40B48B52
v28@0:8I16@20
v24@0:8B16B20
v44@0:8B16Q20@28@36
v28@0:8B16@"NSDictionary"20
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v84@0:8@"NSString"16@"NSDictionary"24@"NSArray"32@"NSArray"40I48B52@"NSDictionary"56Q64I72@"NSString"76
v48@0:8@"NSString"16I24@"NSString"28i36@"NSDictionary"40
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16Q24
v40@0:8@"NSString"16@"NSDictionary"24@"NSString"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSArray"24
v28@0:8@"NSString"16I24
v28@0:8@"NSString"16B24
v48@0:8@"NSString"16@"NSString"24@"NSData"32@"NSString"40
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16q24
v32@0:8@"NSString"16@"NSNumber"24
v24@0:8@"NSArray"16
v36@0:8@"NSString"16B24@"NSString"28
v32@0:8@"NSArray"16@"NSArray"24
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSDictionary"44
v68@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"IMMessageItem"60
v68@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"IMItem"60
v72@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52@"NSArray"60B68
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMItem"44
v60@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"IMMessageItem"44@"NSNumber"52
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSArray"44
v44@0:8@"NSString"16@"NSString"24C32@"NSArray"36
v52@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSError"44
v72@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSString"52i60@"NSArray"64
v64@0:8@"NSString"16@"NSString"24C32@"NSDictionary"36@"NSString"44@"NSDictionary"52i60
v40@0:8@"NSString"16@"IMMessageItem"24@"NSArray"32
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40Q48
v72@0:8@"NSString"16@"NSString"24@"NSArray"32Q40Q48@"NSArray"56B64B68
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSNumber"40
v44@0:8@"NSString"16@"NSString"24@"NSArray"32B40
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"NSArray"16@"NSDictionary"24
v44@0:8@"NSString"16C24@"NSString"28@"NSDictionary"36
v48@0:8@"NSString"16Q24Q32Q40
v40@0:8@"NSString"16@"NSString"24@"NSError"32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@"NSData"40
v56@0:8@"NSString"16@"NSString"24I32@"NSDictionary"36I44@"NSDictionary"48
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSDictionary"40
v36@0:8@"NSString"16@"NSString"24B32
v48@0:8@"NSString"16I24@"NSDictionary"28@"NSString"36B44
v40@0:8@"NSString"16@24@32
v32@0:8@"NSString"16@"NSError"24
v56@0:8@"NSString"16@"NSNumber"24@"NSString"32@"NSString"40@"NSString"48
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48B52
v24@0:8@"NSDictionary"16
v28@0:8I16@"NSString"20
v32@0:8@"NSString"16@"NSData"24
v24@0:8@"NSData"16
v32@0:8@"NSDictionary"16@"NSDictionary"24
v32@0:8@"NSSet"16@"NSSet"24
v24@0:8@"IMNickname"16
v44@0:8B16Q20@"NSString"28@"NSError"36
v32@0:8q16@"NSError"24
v52@0:8@16@24Q32I40@44
v64@0:8@16@24@32@40@48@56
@"NSMutableArray"
@"NSProtocolChecker"
d32@0:8d16d24
@24@0:8d16
@32@0:8d16d24
@40@0:8@16q24q32
@64@0:8q16q24q32q40q48q56
@48@0:8Q16q24d32d40
v40@0:8q16@24@32
v48@0:8q16@24@32@40
v28@0:8B16@?20
v24@0:8d16
@"<IMCloudKitEventHandlerAccountInfoProvider>"
@"IMWeakReferenceCollection"
@"IMEventNotificationManager"
@"NSTimer"
@"IMCloudKitSyncState"
@"IMCloudKitSyncProgress"
v28@0:8@16C24
Q24@0:8@16
^{__CFArray=}
v48@0:8@16@24B32B36q40
B44@0:8@16@24@32B40
v84@0:8@16C24@28Q36@44@52@60@68@76
v84@0:8@16@24C32@36Q44Q52@60@68@76
v68@0:8@16C24@28@36@44@52@60
v56@0:8@16C24@28@36@44B52
v48@0:8B16@20@28B36@40
v52@0:8@16C24@28@36Q44
v56@0:8@16C24@28@36Q44B52
v36@0:8@16C24@28
v60@0:8@16C24@28Q36@44@52
v68@0:8@16C24@28Q36@44@52@60
v52@0:8@16C24@28@36@44
Q52@0:8@16C24@28@36@44
v48@0:8@16@24Q32@40
v52@0:8@16@24@32C40@44
v36@0:8B16@20@28
v60@0:8@16@24@32C40@44@52
v84@0:8@16@24@32C40@44@52@60@68@76
v60@0:8@16@24@32@40C48@52
v28@0:8@16i24
v72@0:8@16@24Q32@40@48@56@64
v40@0:8{_NSRange=QQ}16@32
v68@0:8@16@24@32@40@48@56C64
v56@0:8@16I24I28@32@40@48
v80@0:8@16@24@32@40@48@56q64@72
v32@0:8@16@"NSString"24
v48@0:8@"NSString"16@"NSString"24B32B36q40
B44@0:8@"NSString"16@"NSString"24@"NSArray"32B40
v84@0:8@"NSArray"16C24@"NSArray"28Q36@"NSString"44@"NSString"52@"NSString"60@"NSString"68@"NSString"76
v84@0:8@"NSString"16@"NSArray"24C32@"NSArray"36Q44Q52@"NSString"60@"NSString"68@"NSString"76
v68@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44@"NSString"52@"NSString"60
v56@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44B52
v24@0:8@"IMMessageItem"16
v40@0:8@"IMMessageItem"16@"NSIndexSet"24@"NSDictionary"32
v40@0:8@"NSString"16q24@"NSString"32
v48@0:8B16@"NSString"20@"NSString"28B36@"NSString"40
v52@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36Q44
v56@0:8@"NSArray"16C24@"NSArray"28@"NSArray"36Q44B52
v32@0:8@"IMItem"16@"NSString"24
v44@0:8@"NSArray"16C24@"NSArray"28@"IMMessageItem"36
v36@0:8@"NSArray"16C24@"NSArray"28
v60@0:8@"NSArray"16C24@"NSArray"28Q36@"NSString"44@"NSString"52
v68@0:8@"NSArray"16C24@"NSArray"28Q36@"NSString"44@"NSString"52@"NSString"60
v52@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44
Q52@0:8@"NSArray"16C24@"NSArray"28@"NSString"36@"NSString"44
v44@0:8@"NSArray"16C24@"NSArray"28@"NSString"36
v32@0:8@"NSString"16@"NSDate"24
v32@0:8@"NSPredicate"16@"NSString"24
v48@0:8@"NSPredicate"16@"NSDate"24Q32@"NSString"40
v52@0:8@"NSArray"16@"NSString"24@"NSString"32C40@"NSString"44
v32@0:8Q16@"NSString"24
v36@0:8B16@"NSString"20@"NSString"28
v48@0:8@16@"NSString"24@"NSString"32@"NSString"40
v60@0:8@"NSString"16@"NSArray"24@"NSString"32C40@"NSDictionary"44@"NSString"52
v84@0:8@"NSString"16@"NSArray"24@"NSString"32C40@"NSString"44@"NSString"52@"NSString"60@"NSDictionary"68@"NSString"76
v44@0:8@"NSString"16@"NSString"24C32@"NSString"36
v60@0:8@"NSDictionary"16@"IMMessageItem"24@"NSString"32@"NSString"40C48@"NSString"52
v52@0:8@"NSDictionary"16@"NSString"24@"NSString"32C40@"NSString"44
v52@0:8@"NSString"16@"NSString"24@"NSString"32C40@"NSString"44
v32@0:8@"NSDictionary"16@"NSArray"24
v24@0:8@"NSURL"16
v52@0:8@"IMMessageItem"16@"NSString"24@"NSString"32C40@"NSString"44
v28@0:8@"NSString"16i24
v40@0:8@"NSDictionary"16@"NSDictionary"24@"NSArray"32
v72@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64
v32@0:8@"IMSyndicationAction"16@"NSArray"24
v40@0:8{_NSRange=QQ}16@"IMMessageItem"32
v48@0:8@"NSData"16@"NSArray"24@"NSString"32@"NSString"40
v40@0:8@"NSData"16@"NSArray"24@"NSString"32
v60@0:8@"NSDictionary"16@"NSString"24@"NSString"32@"NSString"40C48@"NSString"52
v28@0:8B16@"NSString"20
v48@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40
v68@0:8@"NSNumber"16@"NSDictionary"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56C64
v48@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16@"NSDictionary"24@"NSString"32@"NSNumber"40@"NSString"48
v48@0:8@"NSData"16@"NSString"24@"NSString"32@"NSString"40
v56@0:8@"NSString"16I24I28@"NSDictionary"32@"NSString"40@"NSString"48
v28@0:8@"NSDictionary"16B24
v32@0:8@"NSString"16B24B28
v32@0:8@"NSSet"16@"NSArray"24
v24@0:8@"NSSet"16
v40@0:8@"NSString"16@"NSData"24@"NSString"32
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSString"48
v80@0:8@"NSString"16@"NSString"24@"NSString"32@"NSArray"40@"NSString"48@"NSDate"56q64@"NSString"72
B28@0:8B16@?20
v24@0:8B16I20
B20@0:8B16
B28@0:8B16I20B24
B28@0:8@16I24
I24@0:8@16
B28@0:8I16@20
v40@0:8Q16@24@32
@"IMRemoteObject<IMRemoteDaemonProtocol>"
@"IMLocalObject"
@"IMDaemonListener"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
^{__CFRunLoopSource=}
@"NSLock"
@"<IMRemoteDaemonProtocol>"
@"IMDaemonQueryController"
@40@0:8@16^@24@32
@20@0:8i16
i16@0:8
B28@0:8@16i24
B32@0:8@16i24B28
B28@0:8@16B24
B32@0:8@16B24B28
Q32@0:8@16^@24
@"IMNickname"
@"NSSet"
@36@0:8@16@24B32
@52@0:8@16@24B32@36@44
@36@0:8@16B24@28
@48@0:8@16B24@28@36B44
@36@0:8@16B24^@28
@32@0:8@16^@24
v52@0:8@16@24Q32B40@?44
@40@0:8@?16@24@?32
@36@0:8@16C24@28
@32@0:8q16@24
@40@0:8q16@24@32
@44@0:8q16B24@?28@?36
@52@0:8q16B24@28@?36@?44
@48@0:8@16@24d32@40
@"<IMTypingTimerDelegate>"
@28@0:8B16@20
@32@0:8@16q24
@"NSString"24@0:8@"NSURL"16
B32@0:8@"NSString"16@"NSURL"24
v40@0:8@16@24B32B36
v40@0:8@16q24@?32
v40@0:8@16Q24^v32
v40@0:8@"PXObservable"16Q24^v32
@"<IMMomentSharePresentationCacheDelegate>"
@32@0:8#16^{_NSZone=}24
v44@0:8C16@20{_NSRange=QQ}28
@"NSDate"16@0:8
@"IMHandle"16@0:8
@"NSAttributedString"16@0:8
@"IMServiceImpl"16@0:8
C16@0:8
v20@0:8C16
@"IMChatContext"
@40@0:8@16B24B28B32B36
@"<IMUnavailabilityIndicatorChatItemDelegate>"
B36@0:8@16@24B32
@"NSArray"16@0:8
@48@0:8@16q24{_NSRange=QQ}32
@56@0:8@16q24{_NSRange=QQ}32q48
@64@0:8@16@24q32{_NSRange=QQ}40@56
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
@"IMMessagePartHighlightChatItem"
@68@0:8@16@24q32{_NSRange=QQ}40@56B64
@72@0:8@16@24q32{_NSRange=QQ}40@56@64
@84@0:8@16@24@32B40@44q52{_NSRange=QQ}60@76
@88@0:8@16@24@32B40@44q52{_NSRange=QQ}60@76B84
@"IMItem"
@44@0:8@16@24@32B40
@"IMBalloonPluginDataSource"16@0:8
@60@0:8@16@24q32{_NSRange=QQ}40B56
@88@0:8@16@24@32B40@44q52{_NSRange=QQ}60B76@80
@"IMMessageItem"
@48@0:8@16@24@32Q40
@80@0:8@16@24q32{_NSRange=QQ}40@56@64@72
@92@0:8@16@24@32B40@44q52{_NSRange=QQ}60@76@84
@100@0:8@16@24@32B40@44q52{_NSRange=QQ}60@76@84@92
@48@0:8@16{_NSRange=QQ}24@40
@68@0:8@16@24@32B40{_NSRange=QQ}44@60
@48@0:8@16q24@32Q40
@40@0:8@16q24Q32
@56@0:8@16q24@32Q40q48
@44@0:8@16@24q32B40
@60@0:8@16@24@32@40B48Q52
@48@0:8@16Q24Q32Q40
B48@0:8@16Q24Q32Q40
{IMAssociatedMessageGeometryDescriptor=QQfffff}16@0:8
{IMAssociatedMessageGeometryDescriptor="layoutIntent"Q"associatedLayoutIntent"Q"parentPreviewWidth"f"xScalar"f"yScalar"f"scale"f"rotation"f}
@40@0:8@16@24q32
@"IMMessageAcknowledgmentChatItem"
@32@0:8@16Q24
@"IMMapURLLocationInfo"
@56@0:8@16@24q32{_NSRange=QQ}40
B40@0:8@16@24^@32
@28@0:8@"IMBalloonPluginDataSource"16B24
v24@0:8@"IMBalloonPluginDataSource"16
@"NSBundle"
@"<PKPlugIn>"
@"IMBalloonApp"
@56@0:8@16@24@32#40Q48
@40@0:8@16@24#32
@"NSExtension"
@"LSPlugInKitProxy"
@"NSUUID"
#24@0:8@16
@28@0:8^B16B24
^{__CFPhoneNumber=}16@0:8
^{__CFPhoneNumber=}
@"NSNumber"
@"IMBrand"
@"CNContact"
@"IMBrandManager"
v36@0:8@16B24@?28
v44@0:8@16B24@?28@?36
v44@0:8@16B24@28@36
@"IMDaemonController"
@32@0:8@16@?24
@"IMBusinessNameManager"
v24@0:8@"PHChange"16
Q36@0:8@16B24^B28
v32@0:8Q16@?24
v52@0:8@16@24B32@36@44
v32@0:8@16:24
@"IMCloudKitSyncStatistics"
B24@0:8^@16
@40@0:8@16@24@?32
v32@0:8@"IMSimulatedChat"16@"IMMessageItem"24
v56@0:8@"IMSimulatedDaemonController"16@"NSData"24@"NSArray"32@"NSString"40@"NSString"48
@40@0:8@16Q24@32
@36@0:8@16Q24B32
@"<IMSimulatedChatDelegate>"
@"IMSimulatedAccount"
@24@0:8@"IMChat"16
@"NSMutableArray"16@0:8
v24@0:8@"NSDate"16
@"NSArray"32@0:8@"IMItem"16@"IMItem"24
B40@0:8@"IMItem"16@"IMItem"24@"IMItem"32
v24@0:8@"NSMutableArray"16
B32@0:8@"IMChatItem"16@"IMChatItem"24
B32@0:8@"NSArray"16@"NSArray"24
@"IMItem"48@0:8@"NSArray"16@"IMItem"24^@32^@40
B36@0:8@16@24C32
@52@0:8@16B24@28@36B44B48
@32@0:8@16B24B28
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v52@0:8@16@24@32B40@44
v32@0:8@?16@24
@"NSError"
v56@0:8@16f24@28Q36Q44B52
v56@0:8@"IMSendProgress"16f24@"NSDictionary"28Q36Q44B52
v24@0:8@"IMMomentSharePresentationCache"16
@96@0:8@16@24C32@36@44@52@60@68@76q84B92
v32@0:8@16C24B28
v28@0:8Q16B24
v48@0:8@16@24B32B36Q40
v60@0:8@16@24B32B36B40Q44B52B56
Q24@0:8Q16
q24@0:8q16
v60@0:8@16@24@32@40@48B56
v36@0:8Q16@24B32
v28@0:8q16B24
@44@0:8@16B24@?28@?36
@36@0:8@16B24@?28
@24@0:8B16B20
Q20@0:8B16
^v16@0:8
v24@0:8^v16
@"IMMessage"
@"IMTimingCollection"
@"<IMChatItemRules>"
@"IMScheduledUpdater"
@"IMSendProgress"
@"IMMomentSharePresentationCache"
@"IMInlineReplyController"
@"IMOrderingTools"
@"IMParticipantChangeChatItem"
@64@0:8@16C24@28@36@44q52B60
@44@0:8@16@24Q32B40
@44@0:8@16Q24@32B40
@52@0:8@16Q24Q32B40@44
@28@0:8Q16B24
@32@0:8Q16@24
v36@0:8@16@?24B32
v40@0:8B16@20@28B36
@"NSDictionary"16@0:8
@48@0:8@16@24Q32@40
@56@0:8@16@24Q32@40@48
@56@0:8@16@24@32Q40@48
@72@0:8@16@24@32Q40@48@56@64
@208@0:8@16@24@32@40@48@56@64@72@80Q88@96@104q112@120@128@136@144@152@160q168{_NSRange=QQ}176@192@200
@88@0:8@16@24@32@40@48Q56@64@72@80
@96@0:8@16@24@32@40@48Q56@64@72@80@88
@80@0:8@16@24@32@40Q48@56@64@72
@88@0:8@16@24@32@40Q48@56@64@72@80
@112@0:8@16@24@32@40@48Q56@64@72@80@88@96@104
@120@0:8@16@24@32@40@48Q56@64@72@80@88@96@104@112
@128@0:8@16@24@32@40@48Q56@64@72@80@88q96{_NSRange=QQ}104@120
@136@0:8@16@24@32@40@48Q56@64@72@80@88q96{_NSRange=QQ}104@120@128
@48@0:8@16Q24@32@40
@80@0:8@16Q24@32q40{_NSRange=QQ}48@64@72
@64@0:8@16@24@32@40@48@56
v24@0:8@"TUCallProviderManager"16
v48@0:8@16@24@32^v40
B36@0:8@16B24^@28
B44@0:8@16B24^@28@36
B52@0:8@16B24^@28@36@44
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"STConversation"
@"TUCallProviderManager"
@"IMCommLimitsPolicyCache"
@"DMFApplicationPolicyMonitor"
v48@0:8@16@24B32@36B44
v44@0:8@16@24B32@36
@"IMTimer"
@"NSUserActivity"
@"IMContactStore"
@"TUConversationManager"
@48@0:8@16@24#32@40
Q28@0:8@16B24
@60@0:8@16@24@32@40B48@52
@72@0:8@16@24@32@40@48d56^@64
@88@0:8@16@24@32@40@48@56@64d72^@80
@56@0:8@16@24d32@40^@48
@100@0:8@16@24@32B40@44@52@60@68d76@84^@92
@24@0:8@?16
@"IMDaemonController<IMRemoteDaemonProtocol>"
v40@0:8@16B24B28@?32
v44@0:8@16@24Q32B40
v24@0:8@"TUConversationManager"16
v32@0:8@"TUConversationManager"16@"TUConversation"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversation"32
v32@0:8@"TUConversationManager"16@"TUConversationLink"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32
v32@0:8@"TUConversationManager"16@"TUConversationActivity"24
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationActivityEvent"32
v44@0:8@"TUConversationManager"16@"TUConversation"24Q32B40
v32@0:8@"TUConversationManager"16@"NSString"24
v48@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationParticipant"32@"TUConversationNotice"40
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSSet"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"TUConversationMember"32
v40@0:8@"TUConversationManager"16@"TUConversation"24@"NSData"32
v32@0:8@"TUConversationManager"16@"NSArray"24
v40@0:8@"TUConversationManager"16@"TUConversationMember"24@"TUConversationLink"32
v48@0:8@"TUConversationManager"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v36@0:8@"TUConversationManager"16@"<TUScreenShareAttributes>"24B32
v32@0:8@"TUConversationManager"16@"NSError"24
@40@0:8@16@24^@32
@60@0:8@16@24d32^@40@48B56
@56@0:8@16@24d32^@40@48
@48@0:8@16d24^@32@40
q36@0:8@16@24B32
@40@0:8q16q24@32
B32@0:8q16@24
B32@0:8^@16@24
v40@0:8^{__CFArray=}16@24q32
v56@0:8Q16Q24@32@40@48
v88@0:8Q16Q24@32@40@48@56@64@72@?80
@"IMCloudKitMockSyncState"
v52@0:8@16B24Q28@36@44
v36@0:8@"IMCloudKitEventNotificationManager"16B24@"NSError"28
v32@0:8@"IMCloudKitEventNotificationManager"16@"IMCloudKitSyncState"24
v40@0:8@"IMCloudKitEventNotificationManager"16@"IMCloudKitSyncStatistics"24@"NSError"32
v32@0:8@"IMCloudKitEventNotificationManager"16@"IMCloudKitSyncProgress"24
v52@0:8@"IMCloudKitEventNotificationManager"16B24Q28@"NSString"36@"NSError"44
@"IMCloudKitHookTestSingleton"
@48@0:8@16C24@28@36B44
@28@0:8@16C24
^{__DDScanner=}16@0:8
@48@0:8@16@24@32B40B44
v52@0:8@16@24^@32^@40B48
v64@0:8@16Q24@32@40@48@56
v68@0:8@16Q24@32@40@48@56B64
v64@0:8@16Q24Q32@40@48@56
v44@0:8@16Q24@32B40
v52@0:8@16Q24@32@40B48
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v32@0:8@?16@?24
v40@0:8@16@?24@?32
v32@0:8@?<v@?>16@?<v@?@"CLLocation"@"NSError">24
v40@0:8@"NSString"16@?<v@?>24@?<v@?@"CLLocation"@"NSError">32
@"CLLocation"16@0:8
@"NSError"16@0:8
B32@0:8@16d24
@"CLLocationManager"
@"CLLocation"
v24@0:8@"FMFLocation"16
v32@0:8@"FMFHandle"16@"NSError"24
v24@0:8@"NSError"16
v24@0:8@"FMFFriendshipRequest"16
v24@0:8@"FMFHandle"16
v32@0:8@"NSString"16@"FMFHandle"24
v24@0:8@"FMFDevice"16
@"FMFSession"
@"FMFDevice"
B44@0:8@16@24B32@36
B36@0:8q16@24B32
v40@0:8@16@24Q32
v48@0:8@16@24q32^B40
v44@0:8@16@24B32B36B40
@"<IMSendProgressDelegate>"
@"<IMSendProgressTimeDataSource>"
v24@0:8@"SKStatusSubscription"16
v24@0:8@"SKStatusSubscriptionService"16
@"SKStatusSubscriptionService"
@24@0:8^{_IMDChatRecordStruct=}16
@72@0:8@16@24q32@40B48B52@56@64
@20@0:8I16
@"IMSPIHandle"
@"IMSPIMessage"
@"LPLinkMetadata"
@"PKCurrencyAmount"
@56@0:8@16^@24^@32^@40^@48
@64@0:8@16^@24^@32^@40^@48^B56
