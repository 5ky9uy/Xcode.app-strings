v8@?0
CHDatabaseClientHandleManager
kCHTimerLifetimeKey
kCHTimerOutgoingKey
kCHTimerIncomingKey
ch.dbhandle
v16@?0@"NSNotification"8
com.apple.CallHistoryPluginHelper.launchnotification
remoteParticipantHandles
calltype IN %@
unique_id == %@
unique_id IN %@
Save failed no data stores
%s: parameter '%@' cannot be nil
-[CHHandle initWithType:value:]
type
value
<%@ %p 
%@=%ld
%@=%@
temp:
pseud:
date
duration
read
unique_id
com.apple.CallHistory
v32@?0@"<CHConfigurationDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
kBootUpResultUsePerm
kBootUpResultUseTemp
kBootUpResultError
Undefined
v12@?0C8
momd
storedata
CallHistory
CallHistoryTemp
CallRecord
CallDBProperties
CallHistoryDB
ch.calldbm
kCHNotifyDataStoreChangeReasonPermInitialized
kCHNotifyDataStoreChangeReasonTempInitialized
kCHNotifyDataStoreChangeReasonTempToPermSwitch
kCHNotifyDataStoreChangeReasonUnknown
%@.%@
%@/%@.%@
com.apple.callhistory
Handle
CHManagedHandle
CallHistory.framework
source.itemID == %@
_DKEventQuery
Unable to find class %s
_DKSystemEventStreams
_DKKnowledgeStore
Subclass is required to override %@
DatabaseVersionTemp
DatabaseVersionPerm
com.apple.callhistory.databaseInfo.plist
CHDBMetaInfoDomain
cloudKitEnabled
1184.300.101
1184.300.101~141
stock
%s%s
CallHistory-
CHPhoneNumber
timer_last_reset
CHManager
@"NSArray"8@?0
B8@?0
@"NSDate"8@?0
@"NSPredicate"8@?0
@"NSString"8@?0
ANY remoteParticipantHandles.normalizedValue IN %@
(service_provider = %@) OR (service_provider = %@)
TIME_INTERVAL_FOREVER
TIME_INTERVAL_YEARS
TIME_INTERVAL_DAYS
SyncManager
%K >= %@
%K <= %@
com.apple.callhistory.RecentDeletedNotification
com.apple.callhistory.RecentsClearedNotification
ch.pbm
v24@?0@"CNContact"8^B16
v32@?0@"<CHCallInteractionManagerDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
ch.dbm
kDBMDataStoreDoesNotExist
kDBMDataStoreNotMigrated
kDBMNoError
kDBMOtherError
kDBMConstraintViolationError
undefined
secure_delete
Insert
Update
Delete
BatchDeleteAll
record
CHTransactionTypeBatchDeleteAll
CHTransactionTypeDelete
CHTransactionTypeInsert
CHTransactionTypeUpdate
ch.clientdbhandle
@"NSMutableArray"8@?0
@"CHRecentCall"8@?0
@"NSNumber"8@?0
@"CallDBManager"8@?0
kTmpDBLocationKey
kMoveCallRecordsFromTemporaryStoreNotitification
%@.%@/%@ %@
@"NSURL"16@?0q8
backup
Database-migration-failed
v16@?0@"CallRecord"8
NOT (%K IN %@)
intent
com.apple.CallHistory.queue.%@.%p
kCHCallOccurrenceUniqueIdKey
kCHCallOccurrenceCallTypeKey
kCHCallOccurrenceCallStatusKey
kCHCallOccurrenceDurationKey
kCHCallOccurrenceDateKey
kCHCallOccurrenceDataUsageKey
kCHCallOccurrenceServiceProviderKey
kCHCallOccurrenceMediaTypeKey
kCHCallOccurrenceTTYTypeKey
kCHCallOccurrenceVerificationStatusKey
<<RecentsNumberLocationNotFound>>
uniqueId
callerId
callType
callStatus
unreadCount
bytesOfDataUsed
mobileCountryCode
mobileNetworkCode
devicePhoneId
isoCountryCode
callerIdLocation
callCategory
handleType
serviceRadar
timeToEstablish
q24@?0@"NSDictionary"8@"NSDictionary"16
CHRecentCall
Default Value
BLOCKED_CALLER
UNKNOWN_CALLER
v40@?0@"NSString"8@"GEOPhoneNumberResolutionResult"16@"NSError"24^B32
v16@?0@"GEOPhoneNumberResolutionResultSet"8
UNKNOWN_LABEL
Merged Call %lu:
{%@, %@}
Unknown
CHRecentCallMediaTypeAudio
CHRecentCallMediaTypeVideo
CHRecentCallMediaTypeUnknown
CHRecentCallTTYTypeNone
CHRecentCallTTYTypeDirect
CHRecentCallTTYTypeRelay
CHHandleTypeGeneric
CHHandleTypePhoneNumber
CHHandleTypeEmailAddress
kCallTypeNormal
kCallTypeVoicemail
kCallTypeVOIP
kCallTypeFaceTimeVideo
kCallTypeFaceTimeAudio
kCallTypeAll
kCallTypeTelephony
kCallTypeFaceTime
kCallStatusConnectedIncoming
kCallStatusConnectedOutgoing
kCallStatusAnsweredElsewhere
kCallStatusMissed
kCallStatusCancelled
kCallStatusConnected
kCallStatusAll
kCallStatusAllButMissed
kCHCallCategoryVideo
kCHCallCategoryAudio
kCHCallCategoryTTYDirect
kCHCallCategoryTTYRelay
--------------------------
Identifier: %@
Name: %@
Image URL: %@
Local Participant UUID: %@
Outgoing Local Participant UUID: %@
Participant Group UUID: %@
Remote Participant Handles: %@
Call Media Type: %@
Call TTY Type: %@
Handle Type: %@
Call Service Provider: %@
Call Status: %@
Date: %@
Duration: %f
Caller Id Availability: %@
Caller Id Blocked?: %d
Caller Name: %@
Caller Id Label: %@
Caller Id Location: %@
Bytes of data used: %@
Country Code (ISO): %@
Read: %d
Disconnect Cause: %@
Filtered Out Reason: %@
Junk Confidence: %@
Address Book Id: %@
Multi-Call: %@
Call Occurrences: %@
Unread count: %lu
Verification Status: %@
CHRecentCallVerificationStatusNotSet
CHRecentCallVerificationStatusPassed
CHRecentCallVerificationStatusFailed
CHRecentCallVerificationStatusUnknown
CHRecentCallVerificationStatusNoInfo
CHRecentCallJunkConfidenceNone
CHRecentCallJunkConfidenceLow
CHRecentCallJunkConfidenceMedium
CHRecentCallJunkConfidenceHigh
SharedAddressBook
Address Book Cache: %@
kCallUpdatePropertyOutgoingLocalParticipantUUID
kCallUpdatePropertyRead
kCallUpdatePropertyUniqueId
kCallUpdatePropertyBytesUsed
kCallUpdatePropertyCallStatus
com.apple.CallHistorySyncHelper
com.apple.CallHistoryPluginHelper
SharedUtilities
CallHistory: Directory creation failed at location %@ error: %@
CallHistory: Expected a directory at location %@ but found a file
kDBLNoError
kDBLNoSuchFileError
kDBLOtherError
mobile
com.apple.callhistory.save
/var/mobile
Library
Logs
BuildVersion
InternalBuild
CarrierInstallCapability
ReleaseType
Desense
com.apple.mobile.keybagd.first_unlock
v12@?0i8
com.apple.callhistory.notification.calls-changed
com.apple.callhistory.notification.call-interactions-changed
kCallHistoryDatabaseChangedNotification
kCallHistoryTimersChangedNotification
kCallHistoryContactStoreChangedInternalNotification
kCallHistoryDatabaseRemoteUpdateReadNotification
kCallHistoryDatabasePluginUpdateNotification
kCallHistoryCallRecordInsertedNotification
kCallHistoryDatabaseChangedInternalNotification
kCallHistoryTimersDistributedSaveNotification
kCallHistorySyncHelperReadyNotification
kCallHistoryDatabaseInitializedKey
kCHCoalescingStrategyRecents
kCHCoalescingStrategyCollapseIfEqual
kCHLimitCallTypeKey
kCHLimitStartDateKey
kCHLimitEndDateKey
kCHLimitCallKindsKey
kCHMediaTypeKey
kCHTTYTypeKey
kCHServiceProviderKey
kShowsFaceTimeVideoCallsKey
kShowsFaceTimeAudioCallsKey
kShowsTelephonyCallsKey
kNotificationReason
kNotificationChangeCount
External
Internal
kCHABCacheCNContactIdKey
kCHABCacheCNContactRefKey
com.apple.Telephony
com.apple.FaceTime
kCNContactInfoNotFound
kCHCallerIdAvailable
kCHCallerIdBlocked
kCHCallerIdUnavailable
date >= %@
date <= %@
date < %@
(call_category & %d) = %d
remoteParticipantHandles.@count = %d
ANY remoteParticipantHandles.type = %d
ANY remoteParticipantHandles.value ==[c] %@
ANY remoteParticipantHandles.normalizedValue ==[c] %@
ANY remoteParticipantHandles.type IN %@
ANY remoteParticipantHandles.value IN %@
service_provider = %@
(service_provider IN %@)
(answered = %@) AND (originated = %@)
answered = %d
originated = %d
read == %d
junkConfidence >= %d
junkConfidence < %d
unique_id = %@
(unique_id IN %@)
v16@?0@"NSError"8
TransactionManager
CNContactFetchRequest
CNContact
WatchDogTimer
ch.encrypttransform
v16@?0@"NSArray"8
v16@?0Q8
No call db properties object found
Multiple call db properties object found
Failed to create call db manager
Failed to created the handle
Handling persistent store added notification, store count: %lu
Sending out database change notification when data store is added, reason: %@
Moving records from temp to permanent database
Input database URL is nil
Unable to query version of the database at location: %@
Database at location %@ has version %ld
Input database not in use
Failed to look up entity: %@
Failed to execute fetch on input database
Moving %lu records from input database %@ into permanent database
Failed to save calls from input database to perm database
Failed to delete calls from the input database
handleCallRecordContextDidSaveNotification
Got call record save notification from other app
Entity %@ not found
Context for given entity %@ not created
Fetch request failed with error: %@
Count calls request failed with error %@
Fetch calls request failed with error %@
Fetch call identifiers request failed with error %@
While creating call record entity %@ not found
Database has no calls with %@ UUID
Multiple object with same uniqueId found but only one requested. Returning last matched object.
Record with %@ uniqueId does not exist
Record with %@ uniqueIds does not exist
Save performed successfully
Failed to save changes to persistent store error: %@
No persistent stores. Not performing save.
No changes in the data context to save
Failed to save call db properties to persistent store: %@
Received a key-value observing notification for key path (%@) object (%@).
Temporary database URL is nil
Temporary data store not used, nothing to move
Failed to add data store at location: %@
Failed to execute fetch on temporary database
Connection to Synchelper interrupted
Connection to Synchelper invalidated
createPermanent client: %@
MetaInfo says permanent database should be initialized but looks like not
Permanent database version: %ld is not the same as current version: %ld
Got error code: %@ while getting permanent data store database location
createTemporary client: %@
MetaInfo says temporary database should be initialized but looks like not
Temporary database version: %ld is not the same as current version: %ld
Got error code: %@ while getting temporary data store database location
Poking sync helper to initialize data store
Boot up result: %@
Permanent database state in client is out of sync with the server.
Temporary database state in client is out of sync with the server.
%@ in a subclass is not overridden
Bundle location not found
Could not find entity description with name %@ in managed object context %@. Falling back to convenience initializer.
Could not find CHManagedHandle entity with name %@ in context %@. Falling back to convenience initializer.
Failed to synchronize preference domain: %@
File at path: %@ is not readable
Not formatted. So let's create a CFPhoneNumberRef. Num: %@, iso: %@
Performing normalization migration policy for managed handle %@
Unexpected data type found in value %@ for key %@
Comparing CHHandleType to managed handle type %ld
Normalized email address to %@
Normalized user name to %@
Normalized telephone number to %@
Creating CHManager with default values!
Creating CHManager with user values!
CHManager is getting destroyed...
--- Contact Store changed! Invalidating call's AB info.
--- Got Database changed notification: %@. Make cache dirty and send client DB Changed Notification
--- Got Database changed notification due to an external change! Make cache dirty and send client DB Changed Notification
--- Received current locale changed notification: %@. Invalidating all calls' caller ID formatted values.
Coalescing with kCHCoalescingStrategyRecents
Coalescing with kCHCoalescingStrategyCollapseIfEqual
Coalescing hash not found for call %@
Returning calls with no coalescing since none or invalid (%@) strategy was provided
<== %@ => %lu calls
No predicate to apply, return all calls
==> %@(%@)
<== %@(%@) => %lu calls
Fetching from DB and updating cache. And coalescing: %@, With callType limit: %@
SyncManager returned %lu calls
After coalescing we have %lu calls
User fetching without coalescing!
No fetching required. Recoalscing & applying global filter
<== %@ returns %lu calls
User requested to count calls with predicate, %@. Returning %lu.
<== %@(%@) %lu calls
User requested to insert new call without sync transactions: 
Updating outgoing local participant UUID to %@ for recent calls matching predicate %@.
User requested to mark ALL calls as read
User requested to mark some calls with this predicate, %@, as read
==> %@(%@, %@)
Cannot update. Nil unique id or bytes used!
=> %@(%@)
=> %@
=> deleteCall:%@
==> %@: User requested to delete call at index, %lu
==> %@: User requested to delete ALL calls (with the global limits of course)
Setting limiting call kinds: %@
Setting limiting call type to %@ (0x%x). Cache is drity.
==> %@:%@(0x%x)
==> %@:%@
==> %@: User setting showsFaceTimeVideoCalls to %d
Old limitingCallType: 0x%x (%@). OR Mask: 0x%x. New limitingCallType: 0x%x.
Old limitingCallType: 0x%x (%@). AND Mask: 0x%x. New limitingCallType: 0x%x.
==> %@: User setting showsFaceTimeAudioCalls to %d
Old limitingCallType: 0x%x. OR Mask: 0x%x. New limitingCallType: 0x%x.
Old limitingCallType: 0x%x. AND Mask: 0x%x. New limitingCallType: 0x%x.
==> %@: User setting showsTelephonyCalls to %d
==> %@ => %f seconds
==> %@: User requested to reset call timers
Updating read status for calls matching predicate %@
Could not update calls; operation failed with error %@
Deleting calls matching predicate %@
Could not delete calls; operation failed with error %@
Retrieving count of calls matching predicate %@
Retrieving calls matching predicate %@
Retrieving identifiers for calls matching predicate %@
Retrieving count of coalesced calls matching predicate %@
Retrieving coalesced calls matching predicate %@
Updated read status for %lu calls matching predicate %@
fetching with predicate: %@
Call Record %@ already deleted
No Call Records found
Deleting all %lu objects
Deleting %lu calls
Attempt to archive %@ failed with error %@
Deleting %d objects
Cannot delete %@ call placed on %@ with nil unique ID
fetchCNContact! Trying to find contact info for %@, isEmail? %d
The predicate used to find contact: %@
Num of contacts found: %lu for %@
Error looking for contacts matching caller ID %@, error: %@
Can't find contact for identifier %@, error: %@
==> %@
%@ <== %@
Retrieving interaction for call with identifier %@ failed with error %@
Failed to created managed object model
Invalid value dbURL: %@ or modelURL: %@
Data store at path %@ does not exist
Unexpected error: %@ when querying meta data for database: %@, treating as data store not initialized
Failed to get the destination managed object model
Destination store at location %@ is not compatible with newer version, migration required
Failed to create peristent coordinator for persistent store
Either version indentifier set is nil (%p) or has count not equal to 1 (%lu)
Failed to get meta data for source data store: %@
Failed to look up the managed object model for the source meta data
Failed to get the source version
Failed to get the destination version
Migrating from version %ld to %ld
Destination store at location %@ is compatible with newer version no migration required
Failed to look for the mapping bundle in the framework bundle, now inferring automatically
Failed to infer the mapping model automatically
Failed to delete data store at path: %@
Failed to migrate the store at location: %@ with error %@
Failed to copy data store src: %@ dst: %@ error: %@
Failed to remove store at URL: %@ with error %@
Database location is nil
Failed to create directory at path: %@
Failed to add the store at location %@ with error %@
Persistent store at URL %@ is not present
Failed to remove persistent store at URL:%@ with error:%@
Managed object does not exist
Coordinator not set
Persistent store not found
No meta data properties dict found
Object id not found
Could not replace persistent data store at %@ with %@: %@
Fetching calls from DBStoreHandle. Got back %lu calls
Converting records into CHRecentCall objects. Returning %lu calls
Got timers save notification from other app
No calls to update
Objects with given uniqueIds:%@ to update do not exist
Properties dict not found for call with uniqueId: %@
Creating permanent data store: %@
Failed to create call db properties object for permanent store
Creating temporary data store: %@
Failed to create call db properties object for temporary store
Call history database is not recoverable
Booting up the database after taking the backup of the bootless one
Objects ids(%lu) and unique ids(%lu) count mismatch
Failed to create the managed context
Removing the records with duplicate unique ids
There exist no duplicate records in the database
Failed to execute the delete request
Number of records deleted: %@
Failed to execute fetch request
Failed to perform save on the managed context
Populating service provider and call category information
Populating remote participant handles
Populating handle type
Performing necessary steps for migration
Migration result is: %@
Failed to remove duplicates from the database at location: %@
Restricting number of records before performing migration: %@ %@
Total number of records deleted are: %lu
Failed to get the Call DB properties entity description
Failed to get the records with error: %@
Call DB properties object already exist, not creating again
Failed to create the Call DB properties managed object
Failed to save the Call DB properties object to the database with error: %@
No data store intialization required
Error occured
Transaction type %@ not supported (yet)
Dropping %@ transaction for recent call with destination %@ since it has a nil unique ID
Failing to unarchive the specified value: %@ %@
Cannot coalesce with call. Call status does not match. MyStatus: %@, OtherStatus: %@
Cannot coalesce with call. Call media type does not match. MyMediaType: %@, OtherMediaType: %@
Cannot coalesce with call. Call TTY type does not match. MyTTYType: %@, OtherTTYType: %@
Cannot coalesce with call. Calls happened on different dates.
Cannot coalesce with call. Call service provider does not match. MyServiceProvider: %@, OtherServiceProvider: %@
Cannot coalesce with call. Call UUIDs are not the same. MyLocalParticipantUUID: %@, OtherLocalParticipantUUID: %@
Can coalesce with %@ in %@ strategy? %@
==> %@ %@ %@ with %@
%@ %@ %@ with %@ = %@
Address book information for %@ not found in our cache, looking it up
Updated the ab cache. New cache: %@ 
Address book information for %@ found in our cache, using it
Got CNContact Id: %@, CNContact Pointer: %p from the cache.
Fetched addressbook record id and multi value id. CNContact Id: %@.
Full contact information for %@ not found in our cache, looking it up
Full contact information for %@ found in our cache, using it
CNContact was searched before and not found. Don't need to look agian. Return nil.
ABRecordID was searched before and not found. Don't need to look agian. Return nil.
%@, LEGACY ID IS: %d
<== %@ => %@
Caller name is null. Look in AddressBook for a name
AddressBook did not have a caller name for this caller id. Setting it to network sent name.
MainBundle: %@
ClassBundle: %@
Caller name is nil, let's use caller id formatted
Caller id and caller name are nil, call is blocked or unknown
<== %@ = %@
Could not get location information for phone number %@ error: %@
Timeout occured waiting for GeoServices to return location!
==> %@. Current location info for %@ is %@
Contacts changed, so reverting it and clearing our AB cache
Cannot insert info %@ into address book cache
Cannot insert %@ for key %@ into address book cache
Firing %@ notification: %@
OS version:     %@
Version:        %@
Build revision: %s
Build reason:   %s
XPC connection is already valid!
Creating XPC connection to Sync Helper
Appending %lu transactions
Failed to send transactions to XPC service
Now have %lu queued transactions
Invalid XPC connection, attempting to create
Forwarding to XPC Service
Registering for %@
Received Sync Helper ready notification
Setting up invalidation handler
Could not get strong handle to SyncManager!
Handling invalidated XPC connection
Setting up interruption handler
Interrupted XPC connection, should be reestablished when needed
Executing contact fetch request %@ using contact store %@
Contact fetch request returned %lu results
%@ waiting %f seconds
%@: task took longer than %f seconds
Goodbye from %@ timer
Canceling %@ timer
Encryption transformation is only available for NSString
Encryption reverse transformation is only available for NSData
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:r:path:/System/Library/Frameworks/Contacts.framework/Contacts
CHSynchronizable
NSObject
CHDatabaseClientHandleManager
NotificationSender
CallHistoryDBHandle
CHHandle
NSSecureCoding
NSCoding
NSCopying
Additions
CHDeviceDataSource
CHUserConfiguration
SyncProtocol
CallDBManagerClient
CHLogger
CallDBManager
CHDeviceObserverDelegate
CHDelegate
CHLogServer
CallHistory
CHDelegateManager
CallDBMetaInfo
CHConfiguration
CoreDataProperties
CHPhoneNumber
CHEntityMigrationPolicy
CallDBProperties
CHDelegateController
CHConfigurationAggregator
CHConfigurationDelegate
CHManagedHandleMigrationPolicy
CHManager
SyncManager
SyncManagerProtocol
CHPhoneBookIOSManager
CHCallInteractionManager
CHCallInteractionDataSourceDelegate
Intents
CHContactProvider
CHCallContactProvider
DBMigrationResult
DBManager
CHTransaction
CHTransactionAdditions
CallRecord
CallHistoryDBClientHandle
CallDBManagerServer
DeserializedTransaction
CHLocalization
CHSynchronizedLoggable
CHCallInteractionInProcessDataSource
CHCallInteractionDataSource
CHRecentCall
DayComparison
CHRecentCallAdditions
CHSharedAddressBook
CHManagedCallMigrationPolicy
CHDeviceObserver
CHNotifyObserver
Predicate
TransactionManager
CHContactDataSource
UserNotifications
WatchDogTimer
CHManagedHandle
EncryptionTransformer
PluginProtocol
CHPluginHelper
init
queue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
execute:
executeSync:
executeSyncWithResult:
executeSyncWithBOOL:
initWithName:
initWithQueue:
.cxx_destruct
_queue
T@"NSObject<OS_dispatch_queue>",R,V_queue
createForClient
sharedInstance
T@"CHDatabaseClientHandleManager",R,N
databaseClientHandle
_databaseClientHandle
T@"CallHistoryDBClientHandle",R,W,N,V_databaseClientHandle
name
userInfo
dealloc
setUserInfo:
_name
_userInfo
T@"NSString",R,V_name
T@"NSDictionary",&,V_userInfo
mainBundle
bundleIdentifier
copy
UUID
UUIDString
initWithDomain:
createManagedObjectContext
setMergePolicy:
setUndoManager:
fetchWithPredicate:forEntity:
count
logHandle
firstObject
initWithDBManager:
logHandleForDomain:
createWithDBManager:
defaultCenter
handleCallRecordContextDidSaveNotification:
addObserverForName:object:queue:usingBlock:
handleCallDBPropContextDidSaveNotification:
callDBManager
tempDBLocation:
moveCallRecordsFromDatabaseAtURL:
dbManager
fPersistentStoreCoordinator
handlePersistentStoreChangedNotification:
removeObserver:name:object:
objectForKey:
hasChanges
save:
notifyDataStoreChanged
notifyDataStoreChangeReason
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
versionForDBAtLocation:
getDestinationModelForVersion:
isDataStoreAtURLInitialized:withModelAtURL:
instanceWithModelURL:
addDataStoreAtLocation:isEncrypted:
entityDescriptionHavingName:forContext:
setEntity:
executeFetchRequest:error:
countByEnumeratingWithState:objects:count:
createCallRecord
address
setAddress:
answered
setAnswered:
date
setDate:
duration
setDuration:
face_time_data
setFace_time_data:
setName:
read
setRead:
unique_id
setUnique_id:
calltype
setCalltype:
originated
setOriginated:
disconnected_cause
setDisconnected_cause:
number_availability
setNumber_availability:
iso_country_code
setIso_country_code:
managedObjectContext
compositeCallCategoryForContext:
setCall_category:
compositeHandleTypeForContext:
setHandle_type:
supportsImageURL
imageURL
setImageURL:
compositeJunkConfidenceForContext:
setJunkConfidence:
compositeLocalParticipantUUIDForContext:
setLocalParticipantUUID:
compositeOutgoingLocalParticipantUUIDForContext:
setOutgoingLocalParticipantUUID:
compositeParticipantGroupUUIDForContext:
setParticipantGroupUUID:
compositeRemoteParticipantHandlesForContext:
setRemoteParticipantHandles:
compositeServiceProviderForContext:
setService_provider:
deleteObject:
handleSaveForCallRecordContext:error:
removeDataStoreAtLocation:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
numberWithUnsignedLong:
callsDidChangeDarwinNotificationCount
setCallsDidChangeDarwinNotificationCount:
postNotificationName:object:userInfo:deliverImmediately:
objectId
postTimersChangedNotification
callDBProperties
timer_incoming
timer_outgoing
timer_lifetime
dictionaryWithObjectsAndKeys:
reset
fetchWithPredicate:forEntity:withLimit:
setReturnsObjectsAsFaults:
setPredicate:
isEqualToString:
setRelationshipKeyPathsForPrefetching:
initWithKey:ascending:
arrayWithObjects:count:
setSortDescriptors:
setFetchLimit:
fetchManagedCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
deleteManagedCalls:
fetchRequest
countForFetchRequest:error:
setFetchBatchSize:
setFetchOffset:
setPropertiesToFetch:
setResultType:
arrayWithCapacity:
length
addObject:
allKeys
setValue:forKey:
initWithEntity:insertIntoManagedObjectContext:
numberWithInteger:
getArrayForCallTypeMask:
predicateWithFormat:
fetchAllObjectsWithUniqueId:
lastObject
fetchObjectWithUniqueId:
fetchObjectsWithUniqueIds:
fetchAllNoLimit
insertedObjects
integerValue
doubleValue
boolValue
numberWithDouble:
setTimer_outgoing:
setTimer_incoming:
setTimer_lifetime:
updateCallDBProperties
saveTimers:
performSaveWithBackgroundTaskAssertion:error:
persistentStoreCoordinator
persistentStores
getPropertyValueForKey:forContext:
code
refreshObject:mergeChanges:
timeIntervalSinceReferenceDate
setPropertyValue:forKey:forContext:
resetTimers
setTimer_all:
resetAllTimers
unRegisterForNotifications
createForServer
T@"NSString",R,C,N
callRecordContext
registerForNotifications:
mergeCallRecordChangesFromRemoteAppSave
mergeCallDBPropChangesFromRemoteAppSave
deleteManagedCallsWithPredicate:
fetchManagedCallCountWithPredicate:sortDescriptors:
fetchManagedCallIdentifiersWithPredicate:sortDescriptors:limit:offset:batchSize:
updateManagedCallsWithPredicate:propertiesToUpdate:
fetchAll
fetchWithCallTypes:
fetchObjectsWithPredicate:
deleteObjectWithUniqueId:
deleteObjectsWithUniqueIds:
deleteAll
timerIncoming
timerOutgoing
timerLifetime
timerLastReset
fCallRecordContext
fCallDBPropertiesContext
_observerCallRecordRef
_observerCallDBPropRef
_moveCallRecordsFromTempStoreRef
_dataStoreAddedRef
_callsDidChangeDarwinNotificationCount
Tq,N,V_callsDidChangeDarwinNotificationCount
T@"CallDBManager",R,N,VcallDBManager
type
value
normalizedValue
initWithType:value:normalizedValue:
raise:format:
initWithType:value:
allocWithZone:
initWithHandle:
encodeInteger:forKey:
encodeObject:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
appendFormat:
isEqualToHandle:
lowercaseString
containsString:
hasPrefix:
supportsSecureCoding
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedPhoneNumberHandleForValue:isoCountryCode:
handleTypeForValue:
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
isTemporary
isPseudonym
_type
_value
_normalizedValue
T@"NSString",R,C,N,V_normalizedValue
Tq,R,N,V_type
T@"NSString",R,C,N,V_value
numberWithBool:
supportsHandleType
handle_type
setBytesOfDataUsed:
setCallerIdAvailability:
location
setCallerIdLocation:
chCallStatus
setCallStatus:
setDisconnectedCause:
filtered_out_reason
setFilteredOutReason:
setHandleType:
setIsoCountryCode:
junkConfidence
localParticipantUUID
outgoingLocalParticipantUUID
participantGroupUUID
chRemoteParticipantHandles
service_provider
setServiceProvider:
setUniqueId:
verificationStatus
setVerificationStatus:
call_category
setCallCategory:
setCallerId:
setCallType:
dictionaryRepresentation
setCallOccurrences:
supportsRemoteParticipantHandles
remoteParticipantHandles
initWithCapacity:
chHandle
chHandleType
initWithDigits:isoCountryCode:
normalizedRepresentation
supportsCallCategory
categoryForCallType:
supportsJunkConfidence
supportsLocalParticipantUUID
supportsOutgoingLocalParticipantUUID
supportsParticipantGroupUUID
setWithCapacity:
copyWithContext:
managedHandlesForHandles:inManagedObjectContext:
supportsServiceProvider
serviceProviderForCallType:
supportsVerificationStatus
entity
managedObjectModel
versionForManagedObjectModel:
setChCallStatus:
chRecentCall
compositeVerificationStatusForContext:
TI,N
Tq,R,N
T@"CHRecentCall",R,N
T@"NSSet",R,C,N
TB,R,N
isBootLockEnabled
bootLockEnabled
TB,R,N,GisBootLockEnabled
standardUserDefaults
initWithSuiteName:
registeredDefaults
registerDefaults:
userDefaults
addObserver:forKeyPath:options:context:
initWithDataSource:
dataSource
removeObserver:forKeyPath:context:
propertyNameForKeyPath:
delegateController
propertiesDidChangeForConfiguration:
enumerateDelegatesUsingBlock:
synchronize
observeValueForKeyPath:ofObject:change:context:
T@"<CHKeyValueDataSource><CHMutableKeyValueDataSource>",R,D,N
URLByDeletingLastPathComponent
initWithURL:
readDatabaseVersion:
modelURL
dataStoreType
setNotifyDataStoreChangeReason:
handlePermanentCreated
helperConnection
invalidate
initWithMachServiceName:options:
setHelperConnection:
resetCallTimers:
appendTransactions:
sync:
clearSyncToken:
bootUp:
moveCallsFromTempDatabase
interfaceWithProtocol:
setRemoteObjectInterface:
createDataStore
setInterruptionHandler:
setInvalidationHandler:
resume
permDBLocation:
pokeSyncHelperToInitDB
handleTemporaryCreated
validateInfo:
willMoveCallsFromTempDatabase
createHelperConnection
remoteObjectProxy
shouldCreatePermanent
validatePermDatabase
createPermanent
shouldCreateTemporary
createTemporary
getDBLocationIsSandboxed:isTemporary:error:
validateTempDatabase
syncHelperReadyNotificationRef
setSyncHelperReadyNotificationRef:
_helperConnection
_syncHelperReadyNotificationRef
T@"NSXPCConnection",&,V_helperConnection
T@,&,V_syncHelperReadyNotificationRef
_logHandle
T@"NSObject<OS_os_log>",R,N,V_logHandle
addDelegate:queue:
bundleForClass:
URLForResource:withExtension:
stringWithFormat:
URLByAppendingPathComponent:
setDataStoreType:
deviceObserver
setDeviceObserver:
dataStoreName
didChangeBootLockEnabledForDeviceObserver:
setDbManager:
deviceUnlocked
setDeviceUnlocked:
_deviceUnlocked
_dataStoreType
_notifyDataStoreChangeReason
_dbManager
_deviceObserver
T@"CHDeviceObserver",&,N,V_deviceObserver
T@"DBManager",&,N,V_dbManager
TB,V_deviceUnlocked
TC,V_dataStoreType
TC,V_notifyDataStoreChangeReason
stringWithUTF8String:
logHandleToDomain
accessorLock
_accessorLock
_logHandleToDomain
T{os_unfair_lock_s=I},R,N,V_accessorLock
T@"NSMutableDictionary",R,N,V_logHandleToDomain
entitiesByName
initWithContext:
setNormalizedValue:
setType:
setValue:
managedHandleForHandle:inManagedObjectContext:
T@"CHHandle",R,N
appIntentsStream
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
knowledgeStore
executeQuery:error:
interaction
ch_interactionForIdentifier:error:
weakToStrongObjectsMapTable
delegateToQueue
setObject:forKey:
removeObjectForKey:
performDelegateSelector:withDelegate:
exceptionWithName:reason:userInfo:
removeDelegate:
performDelegateSelector:
_delegateToQueue
T@"NSMapTable",R,N,V_delegateToQueue
dbInfoPrefFile
dictionaryWithContentsOfURL:
mutableCopy
writeToURL:atomically:
defaultManager
path
isReadableFileAtPath:
writeDatabaseVersion:isTemp:
setDbInfoPrefFile:
_dbInfoPrefFile
T@"NSURL",&,V_dbInfoPrefFile
numberForKey:
isCloudKitEnabled
cloudKitEnabled
TB,R,N,GisCloudKitEnabled
_dataSource
_delegateController
T@"CHDelegateController<CHConfigurationDelegate>",R,N,V_delegateController
T@"<CHKeyValueDataSource>",R,N,V_dataSource
fetchRequestWithEntityName:
T@"NSString",C,D,N
Ts,D,N
T@"NSString",&,D,N
localParticipantCalls
T@"NSSet",&,D,N
remoteParticipantCalls
formattedRepresentationAttempted
digits
isoCountryCode
setFormattedRepresentationAttempted:
normalizedRepresentationAttempted
setNormalizedRepresentationAttempted:
formattedRepresentation
_formattedRepresentationAttempted
_normalizedRepresentationAttempted
_formattedRepresentation
_normalizedRepresentation
_digits
_isoCountryCode
T@"NSString",R,C,N,V_digits
T@"NSString",C,N,V_isoCountryCode
TB,N,V_formattedRepresentationAttempted
TB,N,V_normalizedRepresentationAttempted
T@"NSString",R,C,N,V_formattedRepresentation
T@"NSString",R,C,N,V_normalizedRepresentation
T@"NSNumber",&,D,N
timer_all
timer_last
delegateLock
_delegateLock
T{os_unfair_lock_s=I},R,N,V_delegateLock
registerConfigurationDelegate
configurations
delegate
configurationAggregator:didChangeConfiguration:
initWithConfigurations:queue:
setDelegate:
_delegate
_configurations
T@"NSArray",R,C,N,V_configurations
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<CHConfigurationAggregatorDelegate>",W,N,V_delegate
valueForKey:
anyObject
normalizedValueForManagedHandle:
valueForManagedHandle:
setLimitingCallTypesSync:
registerForNotifications
initWithContactStore:
initWithContactStore:queue:
setDefaultInitValues
setInitialLimitingCallKinds:
setLimitingCallKindsSync:
handleCallHistoryContactStoreChangedInternalNotification:
addObserver:selector:name:object:
handleCallHistoryDatabaseChangedInternalNotification:
currentLocaleChanged:
setCacheIsDirty:
setReCoalesce:
fetchRecentCallsSyncWithCoalescing:
setCallerIdFormatted:
coalescedCallWithCall:usingStrategy:
uniqueId
numberOfOccurrences
callOccurrences
objectAtIndexedSubscript:
unsignedIntegerValue
setMediaType:
setTtyType:
setMultiCall:
setObject:atIndexedSubscript:
multiCall
unCoalesceCall:
filteredArrayUsingPredicate:
sortedArrayUsingDescriptors:
coalescedCallsWithCalls:usingStrategy:
addObjectsFromArray:
evaluateWithObject:
applyPredicate:toCalls:
cacheIsDirty
callTypeAsString:
getLimitsDictionary
syncManager
fetchObjectsWithLimits:
setUncoalescedUnFilteredRecentCalls:
phoneBookManager
setPhoneBookManager:
reCoalesce
uncoalescedUnFilteredRecentCalls
predicateFormat
uncoalescedRecentCallsSync
countCallsWithPredicateSync:
generateSyncTransactions
insert:
insertWithoutTransaction:
updateObjects:
updateAllObjects:
appendString:
deleteTheseCallsSync:
objectAtIndex:
deleteCall:
deleteObjectsWithLimits:
limitingCallKindsForCallType:
deleteAllCallsSync
deleteAllObjects
insertRecordsWithoutTransactions:
setRead:forCallsWithPredicate:error:
deleteCallsWithPredicate:error:
fetchCallCountWithPredicate:sortDescriptors:
fetchCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchCallIdentifiersWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchCoalescedCallCountWithPredicate:sortDescriptors:
fetchCoalescedCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
callsWithPredicate:limit:offset:batchSize:
andPredicateWithSubpredicates:
latestRecentCallMatchingPredicate:
CHCallStatusForCallWithDuration:isOriginated:isAnswered:
initWithFetchingLimitsDictionary:andCoalescingStrategy:andPostFetchingPredicate:withQueue:
recentCalls
recentCallsWithPredicate:
countCallsWithPredicate:
addToCallHistory:
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
markAllCallsAsReadWithPredicate:
updateBytesOfDataUsedFor:with:
deleteTheseCalls:
deleteCalls:withCompletion:
deleteCallAtIndex:
deleteAllCalls
clearDatabase
setLimitingCallKinds:
setLimitingCallTypes:
setPostFetchingPredicate:
setLimitingStartDate:
setLimitingEndDate:
setCoalescingStrategy:
setShowsFaceTimeVideoCalls:
setShowsFaceTimeAudioCalls:
showsTelephonyCalls
showsFaceTimeVideoCalls
showsFaceTimeAudioCalls
limitingCallTypes
limitingStartDate
limitingEndDate
limitingCallKinds
postFetchingPredicate
coalescingStrategy
setShowsTelephonyCalls:
callTimersGetIncoming
callTimersGetOutgoing
callTimersGetLifetime
callTimersReset
flush
addMultipleCallsToCallHistory:
setRead:forCallsWithPredicate:
setRead:forCallsWithPredicate:completion:
deleteCallsWithPredicate:
deleteCallsWithPredicate:completion:
callCountWithPredicate:
callIdentifiersWithPredicate:limit:offset:batchSize:
coalescedCallCountWithPredicate:
coalescedCallsWithPredicate:limit:offset:batchSize:
latestCallMatchingNormalizedRemoteParticipantHandleValues:
setGenerateSyncTransactions:
setRecentCalls:
numberOfUnseenMissedCalls
setNumberOfUnseenMissedCalls:
setSyncManager:
setUncoalescedRecentCalls:
_showsTelephonyCalls
_showsFaceTimeVideoCalls
_showsFaceTimeAudioCalls
_generateSyncTransactions
_cacheIsDirty
_reCoalesce
_limitingCallTypes
_limitingStartDate
_limitingEndDate
_limitingCallKinds
_postFetchingPredicate
_coalescingStrategy
_phoneBookManager
_recentCalls
_numberOfUnseenMissedCalls
_syncManager
_uncoalescedRecentCalls
_uncoalescedUnFilteredRecentCalls
T@"CHPhoneBookIOSManager",R,N,V_phoneBookManager
T@"NSArray",&,N,V_recentCalls
Tq,V_numberOfUnseenMissedCalls
T@"<SyncManagerProtocol>",&,N,V_syncManager
TB,V_cacheIsDirty
TB,V_reCoalesce
uncoalescedRecentCalls
T@"NSArray",&,N,GuncoalescedRecentCallsSync,V_uncoalescedRecentCalls
T@"NSArray",&,V_uncoalescedUnFilteredRecentCalls
TB,N,V_showsFaceTimeVideoCalls
TB,N,V_showsFaceTimeAudioCalls
TB,N,V_showsTelephonyCalls
TB,N,V_generateSyncTransactions
TI,N,V_limitingCallTypes
T@"NSDate",C,N,V_limitingStartDate
T@"NSDate",C,N,V_limitingEndDate
T@"NSArray",C,N,V_limitingCallKinds
T@"NSPredicate",&,N,V_postFetchingPredicate
T@"NSString",C,N,V_coalescingStrategy
localizedStringForKey:
ch_localizedNameOfTimeIntervalType:
instance
initDBHandle
archivedDataWithError:
initWithType:andRecord:
arrayWithObject:
dbHandle
createCallRecord:
createCallRecords:
updateCallsWithPredicate:propertiesToUpdate:error:
addUpdateTransactions:
saveDatabase:
predicateForCallsWithMediaType:
predicateForCallsWithTTYType:
predicateForCallsWithServiceProvider:
predicateForCallKind:
orPredicateWithSubpredicates:
predicateForCallKinds:
predicateForLimits:
archiveCallObject:
array
toString:
callType
updateCallRecords:
updateAllCallRecords:
initRequiringSecureCoding:
setOutputFormat:
encodedData
fetchAllObjects
_transactionManager
_dbHandle
T@"CallHistoryDBClientHandle",R,N,V_dbHandle
predicateForContactsMatchingEmailAddress:
predicateForContactMatchingPhoneNumberWithDigits:countryCode:
fetchCNContactsMatchingPredicate:keysToKetch:error:
identifier
fetchCNContact:countryCode:isEmail:
descriptorForRequiredKeysForStyle:
predicateForContactsWithIdentifiers:
initWithKeysToFetch:
setUnifyResults:
contactStore
enumerateContactsWithFetchRequest:error:usingBlock:
stringFromContact:style:
emailAddresses
phoneNumbers
phoneNumberWithStringValue:
isLikePhoneNumber:
label
localizedStringForLabel:
getRecordId:countryCode:isEmail:
fetchFullCNContactForContactIdentifier:isEmail:
getPersonsNameForContact:
getLocalizedCallerIdLabelForContact:forCallerId:withCallerIdIsEmail:
_contactStore
T@"CNContactStore",R,N,V_contactStore
callInteractionsDidChangeForManager:
callInteractionsDidChangeForDataSource:
T@"<CHCallInteractionDataSource>",R,N,V_dataSource
T@"CHDelegateController",R,N,V_delegateController
T@"NSNumber",C,D,N
T@"NSDate",C,D,N
T@"NSURL",C,D,N
T@"NSUUID",C,D,N
timeToEstablish
dateByAddingTimeInterval:
initWithStartDate:duration:
interactionDateInterval
T@"INInteraction",R,N
T@"NSDateInterval",R,N
allObjects
contactsByHandleForHandles:keyDescriptors:error:
initWithObjects:
contactsByContactHandleForContactHandles:keyDescriptors:error:
contactsByHandleForCalls:keyDescriptors:error:
T@"<CHContactDataSource>",R,N,V_dataSource
initWithErrorCode:andDBVersion:
errorCode
setErrorCode:
dbVersion
setDbVersion:
_errorCode
_dbVersion
Tq,N,V_errorCode
Tq,N,V_dbVersion
dictionary
initWithContentsOfURL:
initWithManagedObjectModel:
metadataForPersistentStoreOfType:URL:error:
isConfiguration:compatibleWithStoreMetadata:
getPersistentCoordinator:
setFPersistentStoreCoordinator:
versionIdentifiers
arrayWithObjects:
mergedModelFromBundles:forStoreMetadata:
modelForDBAtLocation:
mappingModelFromBundles:forSourceModel:destinationModel:
inferredMappingModelForSourceModel:destinationModel:error:
lastPathComponent
fileExistsAtPath:
_destroyPersistentStoreAtURL:withType:options:error:
initWithSourceModel:destinationModel:
persistentStoreOptions:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
mapToDBMErrorCode:
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
migrateDataStoreAtLocation:withGetDestinationModel:isEncrypted:
addPersistentStoreWithType:configuration:URL:options:error:
persistentStoreForURL:
removePersistentStore:error:
setPersistentStoreCoordinator:
metadataForPersistentStore:
setMetadata:forPersistentStore:
URLWithString:
managedObjectIDForURIRepresentation:
objectWithID:
destroyDBAtLocation:withModelAtLocation:
moveDBAtLocation:toLocation:withModelAtLocation:
getStoreURLforContext:
mangedObjectWithURI:inContext:
makeDatabaseAtURLClassCDataProtected:
replacePersistentStore:withURL:
T@"NSPersistentStoreCoordinator",&,N,VfPersistentStoreCoordinator
archivedDataWithRootObject:requiringSecureCoding:error:
setWithObjects:
unarchivedObjectClasses
unarchivedObjectOfClasses:fromData:error:
doesNotRecognizeSelector:
transactionType
record
ch_stringWithCHTransactionType:
isEqualToTransaction:
unarchivedObjectFromData:error:
initWithString:andRecord:
_transactionType
_record
TQ,R,N,V_transactionType
T@"NSData",R,N,V_record
callStatus
parseCallStatus_sync:isAnswered:isOriginated:
disconnectedCause
bytesOfDataUsed
filteredOutReason
setFiltered_out_reason:
handleType
callerIdAvailability
numberWithShort:
serviceProvider
callerId
callCategory
init:
handleCallRecordSave_sync
initWithName:queue:callback:
handleCallTimersSave_sync:
convertToCHRecentCalls_sync:
convertToCHRecentCalls_sync:limit:
deleteAll:
deleteObjectWithUniqueId:error:
deleteObjectWithUniqueId:error:save:
deleteObjectsWithUniqueIds:error:
createCallRecord:error:
createCallRecord:error:save:
setStoreObject_sync:withClientObject:
createCallRecords:error:
updateCallRecords:error:
updateCallRecords:error:save:
updateCallRecords_sync:error:save:
updateAllCallRecords:error:
updateAllCallRecords_sync:error:
willHandleNotification_sync:
object
updateCallRecord_sync:withChangeDict:
getCallStatus_sync:isOriginated:isAnswered:
manager
dbStoreHandle
callsDidChangeNotifyObserver
_observerCallTimersRef
_callsDidChangeNotifyObserver
T@"CHNotifyObserver",R,N,V_callsDidChangeNotifyObserver
T@"CallHistoryDBHandle",R,N,VdbStoreHandle
getNextVersionToDowngradeTo:
getNextVersionToMigrateToCurrentVersion:
getNextVersionToDowngradeTo:withSourceVersion:
bootUpDBAtLocationWithRecovery:isEncrypted:
createCallDBProperties
postNotificationName:object:
bootUpDBAtLocation:isEncrypted:
handleBootUpFailure:
URLByAppendingPathExtension:
sortDescriptorWithKey:ascending:
propertiesByName
createMOCForDBAtLocation:dbVersion:isEncrypted:
getUniqueIdsForAllRecords:
getObjectIdsForAllRecords:
getObjectIdsForDuplicateRecordsWithUniqueIds:andHavingObjectIds:
initWithObjectIDs:
executeRequest:error:
result
modifyCallRecordForDBAtLocation:dbVersion:isEncrypted:modifyCallRecord:
setWithObject:
populateServiceProviderAndCallCategory:dbVersion:isEncrypted:
populateHandleType:dbVersion:isEncrypted:
populateRecentCallRemoteParticipantHandles:dbVersion:isEncrypted:
prepareDatabaseForNextStepInMigration:dbVersion:isEncrypted:
getDestinationModel:
removeDuplicatesFromDBAtLocation:dbVersion:isEncrypted:
handleDatabaseMigration:isEncrypted:isRetry:
getUUIDsOfNMostRecentRecords:fromManagedObjectContext:
initWithFetchRequest:
prepareForMigrationDBAtURL:withModelAtURL:andIsEncrypted:
downgradeDatabaseAtLocation:toVersion:
initWithCall:andType:
call
_call
T@"CHRecentCall",R,N,V_call
TQ,V_type
donateCallHistoryInteractionWithCall:
deleteInteractionWithCalls:
classBundle
localizationTableName
localizedStringForKey:value:table:
T@"NSBundle",R,N
initWithName:queue:
_logger
_synchronizable
UTF8String
T@"<CHCallInteractionDataSourceDelegate>",&,N
callInteractionObserver
_callInteractionObserver
T@"CHNotifyObserver",R,N,V_callInteractionObserver
T@"<CHCallInteractionDataSourceDelegate>",&,N,V_delegate
arrayByAddingObjectsFromArray:
compare:
sortedArrayUsingComparator:
callStatusAsString:
mediaType
callMediaTypeAsString:
ttyType
callTTYTypeAsString:
isSameDayAsDate:
canCoalesceRemoteParticipantHandlesFromCall:
canCoalesceSyncWithRecentsStrategyWithCall:
canCoalesceWithCall:withStrategy:
callOccurrencesArrayByAddingCallOccurrencesFromArray:
unreadCount
setUnreadCount:
numberWithUnsignedInt:
initWithSet:
removeObject:
fetchAddressBookInfoFromCacheForKey:
callerIdIsEmailAddress
insertAddressBookInfoIntoCache:forKey:
contactIdentifier
fetchAndSetContactIdentifier
fetchAndSetFullContact
contactRef
iOSLegacyIdentifier
setCallerIdIsBlocked:
rangeOfString:
substringToIndex:
substringFromIndex:
resourcePath
callerName
callerIdForDisplay
callerIdIsBlocked
getLocalizedString:
validRemoteParticipantHandles
locationName
enumerateResolutionsUsingBlock:
resolvePhoneNumbers:handler:queue:
getLocationForCallerId:andIsoCountryCode:
callerIdLabel
callerIdLocation
ch_stringWithCHRecentCallVerificationStatus:
updateTTYAndMediaType
getCallTypeForCategory:andServiceProvider:
categoryForMediaType:andTTYType:
mediaTypeForCallCategory:
ttyTypeForCallCategory:
encodeBool:forKey:
encodeDouble:forKey:
decodeBoolForKey:
decodeDoubleForKey:
decodeObjectOfClasses:forKey:
containsValueForKey:
fixCallTypeInfo
callHandleTypeAsString:
ch_stringWithCHRecentCallJunkConfidence:
callOccurrencesAsString
isEqualToRecentCall:
callCategoryAsString:
coalesceWithCall:withStrategy:
setTimeToEstablish:
countOfExcludedHandles
addressBookRecordId
callerNetworkName
setCallerNetworkName:
callerNetworkFirstName
callerNetworkSecondName
callerNameForDisplay
callerIdSubStringForDisplay
isJunk
setAddressBookRecordId:
addressBookCallerIDMultiValueId
setAddressBookCallerIDMultiValueId:
setContactIdentifier:
devicePhoneId
setDevicePhoneId:
mobileCountryCode
setMobileCountryCode:
mobileNetworkCode
setMobileNetworkCode:
setContactRef:
setCallerName:
setCallerIdLabel:
mobileOriginated
setMobileOriginated:
_read
_callerIdIsBlocked
_multiCall
_answered
_mobileOriginated
_callStatus
_callerIdAvailability
_callCategory
_callType
_imageURL
_localParticipantUUID
_outgoingLocalParticipantUUID
_remoteParticipantHandles
_uniqueId
_serviceProvider
_bytesOfDataUsed
_date
_duration
_disconnectedCause
_filteredOutReason
_unreadCount
_callOccurrences
_mediaType
_ttyType
_handleType
_timeToEstablish
_addressBookRecordId
_addressBookCallerIDMultiValueId
_callerId
_contactIdentifier
_devicePhoneId
_mobileCountryCode
_mobileNetworkCode
_contactRef
_junkConfidence
_verificationStatus
_callerName
_callerIdLabel
_callerIdLocation
_participantGroupUUID
_callerIdFormatted
T@"CNContact",C,N,V_contactRef
T@"NSDictionary",R,N
T@"NSURL",&,N,V_imageURL
Tq,N,V_junkConfidence
T@"NSString",C,N,V_name
Tq,N,V_verificationStatus
T@"NSString",C,N,V_callerName
TB,N,V_callerIdIsBlocked
TQ,N,V_unreadCount
T@"NSArray",C,N,V_callOccurrences
T@"NSString",C,N,V_callerIdLabel
T@"NSString",C,N,V_callerIdLocation
TB,N,V_multiCall
T@"NSUUID",&,N,V_participantGroupUUID
T@"CHPhoneBookIOSManager",&,N,V_phoneBookManager
callerIdFormatted
T@"NSString",C,N,GcallerIdForDisplay,V_callerIdFormatted
TB,V_answered
TB,V_mobileOriginated
T@"NSUUID",&,N,V_localParticipantUUID
T@"NSUUID",&,N,V_outgoingLocalParticipantUUID
T@"NSSet",C,N,V_remoteParticipantHandles
T@"NSString",C,N,V_uniqueId
TI,N,V_callStatus
T@"NSString",C,N,V_serviceProvider
T@"NSNumber",&,N,V_bytesOfDataUsed
T@"NSDate",&,N,V_date
Td,N,V_duration
TB,N,V_read
T@"NSNumber",&,N,V_disconnectedCause
T@"NSNumber",&,N,V_filteredOutReason
TI,N,V_callerIdAvailability
Tq,N,V_mediaType
Tq,N,V_ttyType
Tq,N,V_handleType
T@"NSNumber",&,N,V_timeToEstablish
T@"NSString",C,N,V_addressBookRecordId
T@"NSString",C,N,V_addressBookCallerIDMultiValueId
TI,N,V_callCategory
T@"NSString",C,N,V_callerId
T@"NSString",C,N
TI,N,V_callType
T@"NSString",C,N,V_contactIdentifier
T@"NSString",C,N,V_devicePhoneId
T@"NSString",C,N,V_mobileCountryCode
T@"NSString",C,N,V_mobileNetworkCode
currentCalendar
components:fromDate:
year
month
registerForContactsNotifications
removeObserver:
revertAddressBook:
addressBookCache
removeAllObjects
cleanUpAddressBookCache_sync
sendABChangedNotificationSyncWithUserInfo:
addEntriesFromDictionary:
insertAddressBookInfoDictionaryIntoCache:
cachedCount
setAddressBookCache:
_addressBookCache
T@"NSMutableDictionary",&,V_addressBookCache
addressForManagedCall:
resourceValuesForKeys:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentLocale
stringByAppendingString:
initFileURLWithPath:isDirectory:
initWithQueue:dataSource:
setBootLockEnabled:
setFirstUnlockNotifyObserver:
firstUnlockNotifyObserver
_bootLockEnabled
_firstUnlockNotifyObserver
TB,N,GisBootLockEnabled,V_bootLockEnabled
T@"<CHDeviceDataSource>",R,N,V_dataSource
T@"CHNotifyObserver",&,N,V_firstUnlockNotifyObserver
callback
token
setToken:
_token
_callback
T@"NSString",R,C,N,V_name
Ti,N,V_token
T@?,R,C,N,V_callback
predicateForCallsWithCategory:
predicateWithValue:
predicateForCallsWithRemoteParticipantHandleValue:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
predicateForCallsWithRemoteParticipantHandleType:
orderedSetWithCapacity:
predicateForCallsWithAnyRemoteParticipantHandleTypes:
predicateForCallsWithAnyRemoteParticipantHandleValues:
predicateForCallsWithAnyRemoteParticipantHandleNormalizedValues:
predicateForCallsWithRemoteParticipantHandle:
orderedSetWithArray:
predicateForCallsWithUniqueID:
predicateForCallsBetweenStartDate:endDate:
predicateForCallsLessThanDate:
predicateForCallsWithAnyMediaTypes:
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithAnyRemoteParticipantHandles:
predicateForCallsWithAnyServiceProviders:
predicateForCallsWithStatus:
predicateForCallsWithStatusAnswered:
predicateForCallsWithStatusOriginated:
predicateForCallsWithStatusRead:
predicateForCallsWithStatusJunk:
predicateForCallsWithAnyTTYTypes:
predicateForCallsWithAnyUniqueIDs:
createXpcConnection
createXpcConnection_sync
setupConnectionHandlers_sync
appendTransactions_sync:
remoteObjectProxyWithErrorHandler:
_connection
_interface
_queuedTransactions
predicateForContactsMatchingHandleStrings:
numberWithUnsignedInteger:
stringValue
notificationThreadIdentifier
initWithQueue:withName:withTimeout:withCallback:
cancel
_timer
dataUsingEncoding:
bytes
initWithBytes:length:encoding:
allowsReverseTransformation
transformedValueClass
transformedValue:
reverseTransformedValue:
recentCallsWithCallType:withReply:
unreadCallCount:
setClasses:forSelector:argumentIndex:ofReply:
synchronousRemoteObjectProxyWithErrorHandler:
recentCallsWithLimitingTypes:error:
recentCallsWithLimitingTypes:completionHandler:
unreadCallCountWithError:
unreadCallCountWithCompletionHandler:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
@24@0:8@?16
B24@0:8@?16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@?<v@?>16
@24@0:8@?<@@?>16
B24@0:8@?<B@?>16
@24@0:8r*16
@24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"CallHistoryDBClientHandle"
v24@0:8@16
@"NSString"
@"NSDictionary"
@32@0:8@16@24
@36@0:8@16@24B32
q24@0:8@16
Q32@0:8@16@24
@56@0:8@16@24Q32Q40Q48
@20@0:8I16
B32@0:8@16^@24
B24@0:8^@16
q16@0:8
v24@0:8q16
@"NSManagedObjectContext"
@"CallDBManager"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@32@0:8q16@24
@40@0:8q16@24@32
I16@0:8
v20@0:8I16
v48@0:8@16@24@32^v40
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?C>16
@24@0:8^C16
@"NSXPCConnection"
@"NSObject<OS_os_log>"
@32@0:8B16B20^C24
v24@0:8@"CHDeviceObserver"16
v20@0:8B16
C16@0:8
v20@0:8C16
@"DBManager"
@"CHDeviceObserver"
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@32@0:8@16^@24
v32@0:8:16@24
v32@0:8:16@"<CHDelegate>"24
v32@0:8@16@24
v24@0:8:16
@"NSMapTable"
q20@0:8B16
v28@0:8q16B24
B20@0:8B16
@"NSURL"
v32@0:8@"<CHConfigurationDelegate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<CHConfigurationDelegate>"16
@"<CHKeyValueDataSource>"
@"CHDelegateController<CHConfigurationDelegate>"
v24@0:8@"CHConfiguration"16
@"<CHConfigurationAggregatorDelegate>"
@"NSArray"
I32@0:8d16B24B28
@48@0:8@16@24@32@40
@20@0:8B16
Q24@0:8@16
v32@0:8@16@?24
v24@0:8Q16
d16@0:8
q28@0:8B16@20
v36@0:8B16@20@?28
@48@0:8@16Q24Q32Q40
@"NSDate"
@"NSPredicate"
@"CHPhoneBookIOSManager"
@"<SyncManagerProtocol>"
@24@0:8q16
q36@0:8B16@20^@28
q32@0:8@16^@24
q36@0:8B16@"NSPredicate"20^@28
q32@0:8@"NSPredicate"16^@24
Q32@0:8@"NSPredicate"16@"NSArray"24
@"NSArray"56@0:8@"NSPredicate"16@"NSArray"24Q32Q40Q48
v24@0:8@"CHRecentCall"16
@"NSArray"16@0:8
@"CHRecentCall"24@0:8@"NSString"16
@"NSArray"24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
@"TransactionManager"
@28@0:8@16B24
@40@0:8@16@24^@32
@"CNContactStore"
v24@0:8@"<CHCallInteractionDataSource>"16
@"<CHCallInteractionDataSource>"
@"CHDelegateController"
@"NSDictionary"40@0:8@"NSArray"16@"NSArray"24^@32
@"<CHContactDataSource>"
@32@0:8q16q24
q32@0:8@16@24
@36@0:8@16@?24B32
B32@0:8@16@24
B40@0:8@16@24@32
v40@0:8@16@24@32
B28@0:8@16B24
@"NSPersistentStoreCoordinator"
@24@0:8Q16
@24@0:8^@16
@32@0:8Q16@24
@"NSData"
v36@0:8I16^B20^B28
I40@0:8@16@24@32
@32@0:8@16Q24
B36@0:8@16^@24B32
@36@0:8@16^@24B32
@"CallHistoryDBHandle"
@"CHNotifyObserver"
q24@0:8q16
q32@0:8q16q24
@32@0:8@16q24
@36@0:8@16q24B32
B36@0:8@16q24B32
v44@0:8@16q24B32@?36
v36@0:8@16q24B32
B32@0:8@16B24B28
v36@0:8@16@24B32
@"CHRecentCall"
@32@0:8r*16@24
@"CHLogger"
@"CHSynchronizable"
@"<CHCallInteractionDataSourceDelegate>"16@0:8
v24@0:8@"<CHCallInteractionDataSourceDelegate>"16
@"<CHCallInteractionDataSourceDelegate>"
q20@0:8I16
I32@0:8q16q24
I20@0:8I16
I28@0:8I16@20
v24@0:8d16
@"NSUUID"
@"NSSet"
@"NSNumber"
@"CNContact"
@"<CHDeviceDataSource>"
@40@0:8@16@24@?32
@?16@0:8
i16@0:8
v20@0:8i16
@"NSXPCInterface"
@"NSMutableArray"
@48@0:8@16@24d32@?40
@"NSObject<OS_dispatch_source>"
v28@0:8I16@?20
v28@0:8I16@?<v@?@"NSArray">20
v24@0:8@?<v@?Q>16
@28@0:8I16^@20
Q24@0:8^@16
v8@?0
CHDatabaseClientHandleManager
kCHTimerLifetimeKey
kCHTimerOutgoingKey
kCHTimerIncomingKey
ch.dbhandle
v16@?0@"NSNotification"8
com.apple.CallHistoryPluginHelper.launchnotification
remoteParticipantHandles
calltype IN %@
unique_id == %@
unique_id IN %@
Save failed no data stores
%s: parameter '%@' cannot be nil
-[CHHandle initWithType:value:]
type
value
<%@ %p 
%@=%ld
%@=%@
temp:
pseud:
date
duration
read
unique_id
com.apple.CallHistory
v32@?0@"<CHConfigurationDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
kBootUpResultUsePerm
kBootUpResultUseTemp
kBootUpResultError
Undefined
v12@?0C8
momd
storedata
CallHistory
CallHistoryTemp
CallRecord
CallDBProperties
CallHistoryDB
ch.calldbm
kCHNotifyDataStoreChangeReasonPermInitialized
kCHNotifyDataStoreChangeReasonTempInitialized
kCHNotifyDataStoreChangeReasonTempToPermSwitch
kCHNotifyDataStoreChangeReasonUnknown
%@.%@
%@/%@.%@
com.apple.callhistory
Handle
CHManagedHandle
CallHistory.framework
source.itemID == %@
_DKEventQuery
Unable to find class %s
_DKSystemEventStreams
_DKKnowledgeStore
Subclass is required to override %@
DatabaseVersionTemp
DatabaseVersionPerm
com.apple.callhistory.databaseInfo.plist
CHDBMetaInfoDomain
cloudKitEnabled
1184.300.101
1184.300.101~141
stock
%s%s
CallHistory-
CHPhoneNumber
timer_last_reset
CHManager
@"NSArray"8@?0
B8@?0
@"NSDate"8@?0
@"NSPredicate"8@?0
@"NSString"8@?0
ANY remoteParticipantHandles.normalizedValue IN %@
(service_provider = %@) OR (service_provider = %@)
TIME_INTERVAL_FOREVER
TIME_INTERVAL_YEARS
TIME_INTERVAL_DAYS
SyncManager
%K >= %@
%K <= %@
com.apple.callhistory.RecentDeletedNotification
com.apple.callhistory.RecentsClearedNotification
ch.pbm
v24@?0@"CNContact"8^B16
v32@?0@"<CHCallInteractionManagerDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
ch.dbm
kDBMDataStoreDoesNotExist
kDBMDataStoreNotMigrated
kDBMNoError
kDBMOtherError
kDBMConstraintViolationError
undefined
secure_delete
Insert
Update
Delete
BatchDeleteAll
record
CHTransactionTypeBatchDeleteAll
CHTransactionTypeDelete
CHTransactionTypeInsert
CHTransactionTypeUpdate
ch.clientdbhandle
@"NSMutableArray"8@?0
@"CHRecentCall"8@?0
@"NSNumber"8@?0
@"CallDBManager"8@?0
kTmpDBLocationKey
kMoveCallRecordsFromTemporaryStoreNotitification
%@.%@/%@ %@
@"NSURL"16@?0q8
backup
Database-migration-failed
v16@?0@"CallRecord"8
NOT (%K IN %@)
intent
com.apple.CallHistory.queue.%@.%p
kCHCallOccurrenceUniqueIdKey
kCHCallOccurrenceCallTypeKey
kCHCallOccurrenceCallStatusKey
kCHCallOccurrenceDurationKey
kCHCallOccurrenceDateKey
kCHCallOccurrenceDataUsageKey
kCHCallOccurrenceServiceProviderKey
kCHCallOccurrenceMediaTypeKey
kCHCallOccurrenceTTYTypeKey
kCHCallOccurrenceVerificationStatusKey
<<RecentsNumberLocationNotFound>>
uniqueId
callerId
callType
callStatus
unreadCount
bytesOfDataUsed
mobileCountryCode
mobileNetworkCode
devicePhoneId
isoCountryCode
callerIdLocation
callCategory
handleType
serviceRadar
timeToEstablish
q24@?0@"NSDictionary"8@"NSDictionary"16
CHRecentCall
Default Value
BLOCKED_CALLER
UNKNOWN_CALLER
v40@?0@"NSString"8@"GEOPhoneNumberResolutionResult"16@"NSError"24^B32
v16@?0@"GEOPhoneNumberResolutionResultSet"8
UNKNOWN_LABEL
Merged Call %lu:
{%@, %@}
Unknown
CHRecentCallMediaTypeAudio
CHRecentCallMediaTypeVideo
CHRecentCallMediaTypeUnknown
CHRecentCallTTYTypeNone
CHRecentCallTTYTypeDirect
CHRecentCallTTYTypeRelay
CHHandleTypeGeneric
CHHandleTypePhoneNumber
CHHandleTypeEmailAddress
kCallTypeNormal
kCallTypeVoicemail
kCallTypeVOIP
kCallTypeFaceTimeVideo
kCallTypeFaceTimeAudio
kCallTypeAll
kCallTypeTelephony
kCallTypeFaceTime
kCallStatusConnectedIncoming
kCallStatusConnectedOutgoing
kCallStatusAnsweredElsewhere
kCallStatusMissed
kCallStatusCancelled
kCallStatusConnected
kCallStatusAll
kCallStatusAllButMissed
kCHCallCategoryVideo
kCHCallCategoryAudio
kCHCallCategoryTTYDirect
kCHCallCategoryTTYRelay
--------------------------
Identifier: %@
Name: %@
Image URL: %@
Local Participant UUID: %@
Outgoing Local Participant UUID: %@
Participant Group UUID: %@
Remote Participant Handles: %@
Call Media Type: %@
Call TTY Type: %@
Handle Type: %@
Call Service Provider: %@
Call Status: %@
Date: %@
Duration: %f
Caller Id Availability: %@
Caller Id Blocked?: %d
Caller Name: %@
Caller Id Label: %@
Caller Id Location: %@
Bytes of data used: %@
Country Code (ISO): %@
Read: %d
Disconnect Cause: %@
Filtered Out Reason: %@
Junk Confidence: %@
Address Book Id: %@
Multi-Call: %@
Call Occurrences: %@
Unread count: %lu
Verification Status: %@
CHRecentCallVerificationStatusNotSet
CHRecentCallVerificationStatusPassed
CHRecentCallVerificationStatusFailed
CHRecentCallVerificationStatusUnknown
CHRecentCallVerificationStatusNoInfo
CHRecentCallJunkConfidenceNone
CHRecentCallJunkConfidenceLow
CHRecentCallJunkConfidenceMedium
CHRecentCallJunkConfidenceHigh
SharedAddressBook
Address Book Cache: %@
kCallUpdatePropertyOutgoingLocalParticipantUUID
kCallUpdatePropertyRead
kCallUpdatePropertyUniqueId
kCallUpdatePropertyBytesUsed
kCallUpdatePropertyCallStatus
com.apple.CallHistorySyncHelper
com.apple.CallHistoryPluginHelper
SharedUtilities
CallHistory: Directory creation failed at location %@ error: %@
CallHistory: Expected a directory at location %@ but found a file
kDBLNoError
kDBLNoSuchFileError
kDBLOtherError
mobile
com.apple.callhistory.save
/var/mobile
Library
Logs
BuildVersion
InternalBuild
CarrierInstallCapability
ReleaseType
Desense
com.apple.mobile.keybagd.first_unlock
v12@?0i8
com.apple.callhistory.notification.calls-changed
com.apple.callhistory.notification.call-interactions-changed
kCallHistoryDatabaseChangedNotification
kCallHistoryTimersChangedNotification
kCallHistoryContactStoreChangedInternalNotification
kCallHistoryDatabaseRemoteUpdateReadNotification
kCallHistoryDatabasePluginUpdateNotification
kCallHistoryCallRecordInsertedNotification
kCallHistoryDatabaseChangedInternalNotification
kCallHistoryTimersDistributedSaveNotification
kCallHistorySyncHelperReadyNotification
kCallHistoryDatabaseInitializedKey
kCHCoalescingStrategyRecents
kCHCoalescingStrategyCollapseIfEqual
kCHLimitCallTypeKey
kCHLimitStartDateKey
kCHLimitEndDateKey
kCHLimitCallKindsKey
kCHMediaTypeKey
kCHTTYTypeKey
kCHServiceProviderKey
kShowsFaceTimeVideoCallsKey
kShowsFaceTimeAudioCallsKey
kShowsTelephonyCallsKey
kNotificationReason
kNotificationChangeCount
External
Internal
kCHABCacheCNContactIdKey
kCHABCacheCNContactRefKey
com.apple.Telephony
com.apple.FaceTime
kCNContactInfoNotFound
kCHCallerIdAvailable
kCHCallerIdBlocked
kCHCallerIdUnavailable
date >= %@
date <= %@
date < %@
(call_category & %d) = %d
remoteParticipantHandles.@count = %d
ANY remoteParticipantHandles.type = %d
ANY remoteParticipantHandles.value ==[c] %@
ANY remoteParticipantHandles.normalizedValue ==[c] %@
ANY remoteParticipantHandles.type IN %@
ANY remoteParticipantHandles.value IN %@
service_provider = %@
(service_provider IN %@)
(answered = %@) AND (originated = %@)
answered = %d
originated = %d
read == %d
junkConfidence >= %d
junkConfidence < %d
unique_id = %@
(unique_id IN %@)
v16@?0@"NSError"8
TransactionManager
CNContactFetchRequest
CNContact
WatchDogTimer
ch.encrypttransform
v16@?0@"NSArray"8
v16@?0Q8
No call db properties object found
Multiple call db properties object found
Failed to create call db manager
Failed to created the handle
Handling persistent store added notification, store count: %lu
Sending out database change notification when data store is added, reason: %@
Moving records from temp to permanent database
Input database URL is nil
Unable to query version of the database at location: %@
Database at location %@ has version %ld
Input database not in use
Failed to look up entity: %@
Failed to execute fetch on input database
Moving %lu records from input database %@ into permanent database
Failed to save calls from input database to perm database
Failed to delete calls from the input database
handleCallRecordContextDidSaveNotification
Got call record save notification from other app
Entity %@ not found
Context for given entity %@ not created
Fetch request failed with error: %@
Count calls request failed with error %@
Fetch calls request failed with error %@
Fetch call identifiers request failed with error %@
While creating call record entity %@ not found
Database has no calls with %@ UUID
Multiple object with same uniqueId found but only one requested. Returning last matched object.
Record with %@ uniqueId does not exist
Record with %@ uniqueIds does not exist
Save performed successfully
Failed to save changes to persistent store error: %@
No persistent stores. Not performing save.
No changes in the data context to save
Failed to save call db properties to persistent store: %@
Received a key-value observing notification for key path (%@) object (%@).
Temporary database URL is nil
Temporary data store not used, nothing to move
Failed to add data store at location: %@
Failed to execute fetch on temporary database
Connection to Synchelper interrupted
Connection to Synchelper invalidated
createPermanent client: %@
MetaInfo says permanent database should be initialized but looks like not
Permanent database version: %ld is not the same as current version: %ld
Got error code: %@ while getting permanent data store database location
createTemporary client: %@
MetaInfo says temporary database should be initialized but looks like not
Temporary database version: %ld is not the same as current version: %ld
Got error code: %@ while getting temporary data store database location
Poking sync helper to initialize data store
Boot up result: %@
Permanent database state in client is out of sync with the server.
Temporary database state in client is out of sync with the server.
%@ in a subclass is not overridden
Bundle location not found
Could not find entity description with name %@ in managed object context %@. Falling back to convenience initializer.
Could not find CHManagedHandle entity with name %@ in context %@. Falling back to convenience initializer.
Failed to synchronize preference domain: %@
File at path: %@ is not readable
Not formatted. So let's create a CFPhoneNumberRef. Num: %@, iso: %@
Performing normalization migration policy for managed handle %@
Unexpected data type found in value %@ for key %@
Comparing CHHandleType to managed handle type %ld
Normalized email address to %@
Normalized user name to %@
Normalized telephone number to %@
Creating CHManager with default values!
Creating CHManager with user values!
CHManager is getting destroyed...
--- Contact Store changed! Invalidating call's AB info.
--- Got Database changed notification: %@. Make cache dirty and send client DB Changed Notification
--- Got Database changed notification due to an external change! Make cache dirty and send client DB Changed Notification
--- Received current locale changed notification: %@. Invalidating all calls' caller ID formatted values.
Coalescing with kCHCoalescingStrategyRecents
Coalescing with kCHCoalescingStrategyCollapseIfEqual
Coalescing hash not found for call %@
Returning calls with no coalescing since none or invalid (%@) strategy was provided
==> %@
<== %@ => %lu calls
No predicate to apply, return all calls
==> %@(%@)
<== %@(%@) => %lu calls
Fetching from DB and updating cache. And coalescing: %@, With callType limit: %@
SyncManager returned %lu calls
After coalescing we have %lu calls
User fetching without coalescing!
No fetching required. Recoalscing & applying global filter
<== %@ returns %lu calls
User requested to count calls with predicate, %@. Returning %lu.
<== %@(%@) %lu calls
User requested to insert new call without sync transactions: 
Updating outgoing local participant UUID to %@ for recent calls matching predicate %@.
User requested to mark ALL calls as read
User requested to mark some calls with this predicate, %@, as read
==> %@(%@, %@)
Cannot update. Nil unique id or bytes used!
=> %@(%@)
=> %@
=> deleteCall:%@
==> %@: User requested to delete call at index, %lu
==> %@: User requested to delete ALL calls (with the global limits of course)
Setting limiting call kinds: %@
Setting limiting call type to %@ (0x%x). Cache is drity.
==> %@:%@(0x%x)
==> %@:%@
==> %@: User setting showsFaceTimeVideoCalls to %d
Old limitingCallType: 0x%x (%@). OR Mask: 0x%x. New limitingCallType: 0x%x.
Old limitingCallType: 0x%x (%@). AND Mask: 0x%x. New limitingCallType: 0x%x.
==> %@: User setting showsFaceTimeAudioCalls to %d
Old limitingCallType: 0x%x. OR Mask: 0x%x. New limitingCallType: 0x%x.
Old limitingCallType: 0x%x. AND Mask: 0x%x. New limitingCallType: 0x%x.
==> %@: User setting showsTelephonyCalls to %d
==> %@ => %f seconds
==> %@: User requested to reset call timers
Updating read status for calls matching predicate %@
Could not update calls; operation failed with error %@
Deleting calls matching predicate %@
Could not delete calls; operation failed with error %@
Retrieving count of calls matching predicate %@
Retrieving calls matching predicate %@
Retrieving identifiers for calls matching predicate %@
Retrieving count of coalesced calls matching predicate %@
Retrieving coalesced calls matching predicate %@
Updated read status for %lu calls matching predicate %@
fetching with predicate: %@
Call Record %@ already deleted
No Call Records found
Deleting all %lu objects
Deleting %lu calls
Attempt to archive %@ failed with error %@
Deleting %d objects
Cannot delete %@ call placed on %@ with nil unique ID
fetchCNContact! Trying to find contact info for %@, isEmail? %d
The predicate used to find contact: %@
Num of contacts found: %lu for %@
Error looking for contacts matching caller ID %@, error: %@
Can't find contact for identifier %@, error: %@
%@ <== %@
Retrieving interaction for call with identifier %@ failed with error %@
Failed to created managed object model
Invalid value dbURL: %@ or modelURL: %@
Data store at path %@ does not exist
Unexpected error: %@ when querying meta data for database: %@, treating as data store not initialized
Failed to get the destination managed object model
Destination store at location %@ is not compatible with newer version, migration required
Failed to create peristent coordinator for persistent store
Either version indentifier set is nil (%p) or has count not equal to 1 (%lu)
Failed to get meta data for source data store: %@
Failed to look up the managed object model for the source meta data
Failed to get the source version
Failed to get the destination version
Migrating from version %ld to %ld
Destination store at location %@ is compatible with newer version no migration required
Failed to look for the mapping bundle in the framework bundle, now inferring automatically
Failed to infer the mapping model automatically
Failed to delete data store at path: %@
Failed to migrate the store at location: %@ with error %@
Failed to copy data store src: %@ dst: %@ error: %@
Failed to remove store at URL: %@ with error %@
Database location is nil
Failed to create directory at path: %@
Failed to add the store at location %@ with error %@
Persistent store at URL %@ is not present
Failed to remove persistent store at URL:%@ with error:%@
Managed object does not exist
Coordinator not set
Persistent store not found
No meta data properties dict found
Object id not found
Could not replace persistent data store at %@ with %@: %@
Fetching calls from DBStoreHandle. Got back %lu calls
Converting records into CHRecentCall objects. Returning %lu calls
Got timers save notification from other app
No calls to update
Objects with given uniqueIds:%@ to update do not exist
Properties dict not found for call with uniqueId: %@
Creating permanent data store: %@
Failed to create call db properties object for permanent store
Creating temporary data store: %@
Failed to create call db properties object for temporary store
Call history database is not recoverable
Booting up the database after taking the backup of the bootless one
Objects ids(%lu) and unique ids(%lu) count mismatch
Failed to create the managed context
Removing the records with duplicate unique ids
There exist no duplicate records in the database
Failed to execute the delete request
Number of records deleted: %@
Failed to execute fetch request
Failed to perform save on the managed context
Populating service provider and call category information
Populating remote participant handles
Populating handle type
Performing necessary steps for migration
Migration result is: %@
Failed to remove duplicates from the database at location: %@
Restricting number of records before performing migration: %@ %@
Total number of records deleted are: %lu
Failed to get the Call DB properties entity description
Failed to get the records with error: %@
Call DB properties object already exist, not creating again
Failed to create the Call DB properties managed object
Failed to save the Call DB properties object to the database with error: %@
No data store intialization required
Error occured
Transaction type %@ not supported (yet)
Dropping %@ transaction for recent call with destination %@ since it has a nil unique ID
Failing to unarchive the specified value: %@ %@
Cannot coalesce with call. Call status does not match. MyStatus: %@, OtherStatus: %@
Cannot coalesce with call. Call media type does not match. MyMediaType: %@, OtherMediaType: %@
Cannot coalesce with call. Call TTY type does not match. MyTTYType: %@, OtherTTYType: %@
Cannot coalesce with call. Calls happened on different dates.
Cannot coalesce with call. Call service provider does not match. MyServiceProvider: %@, OtherServiceProvider: %@
Cannot coalesce with call. Call UUIDs are not the same. MyLocalParticipantUUID: %@, OtherLocalParticipantUUID: %@
Can coalesce with %@ in %@ strategy? %@
==> %@ %@ %@ with %@
%@ %@ %@ with %@ = %@
Address book information for %@ not found in our cache, looking it up
Updated the ab cache. New cache: %@ 
Address book information for %@ found in our cache, using it
Got CNContact Id: %@, CNContact Pointer: %p from the cache.
Fetched addressbook record id and multi value id. CNContact Id: %@.
Full contact information for %@ not found in our cache, looking it up
Full contact information for %@ found in our cache, using it
CNContact was searched before and not found. Don't need to look agian. Return nil.
ABRecordID was searched before and not found. Don't need to look agian. Return nil.
%@, LEGACY ID IS: %d
<== %@ => %@
Caller name is null. Look in AddressBook for a name
AddressBook did not have a caller name for this caller id. Setting it to network sent name.
<== %@ = %@
MainBundle: %@
ClassBundle: %@
Caller name is nil, let's use caller id formatted
Caller id and caller name are nil, call is blocked or unknown
Could not get location information for phone number %@ error: %@
Timeout occured waiting for GeoServices to return location!
==> %@. Current location info for %@ is %@
Contacts changed, so reverting it and clearing our AB cache
Cannot insert info %@ into address book cache
Cannot insert %@ for key %@ into address book cache
Firing %@ notification: %@
OS version:     %@
Version:        %@
Build revision: %s
Build reason:   %s
XPC connection is already valid!
Creating XPC connection to Sync Helper
Appending %lu transactions
Failed to send transactions to XPC service
Now have %lu queued transactions
Invalid XPC connection, attempting to create
Forwarding to XPC Service
Registering for %@
Received Sync Helper ready notification
Setting up invalidation handler
Could not get strong handle to SyncManager!
Handling invalidated XPC connection
Setting up interruption handler
Interrupted XPC connection, should be reestablished when needed
Executing contact fetch request %@ using contact store %@
Contact fetch request returned %lu results
%@ waiting %f seconds
%@: task took longer than %f seconds
Goodbye from %@ timer
Canceling %@ timer
Encryption transformation is only available for NSString
Encryption reverse transformation is only available for NSData
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:r:path:/System/Library/Frameworks/Contacts.framework/Contacts
CHSynchronizable
NSObject
CHDatabaseClientHandleManager
NotificationSender
CallHistoryDBHandle
CHHandle
NSSecureCoding
NSCoding
NSCopying
Additions
CHDeviceDataSource
CHUserConfiguration
SyncProtocol
CallDBManagerClient
CHLogger
CallDBManager
CHDeviceObserverDelegate
CHDelegate
CHLogServer
CallHistory
CHDelegateManager
CallDBMetaInfo
CHConfiguration
CoreDataProperties
CHPhoneNumber
CHEntityMigrationPolicy
CallDBProperties
CHDelegateController
CHConfigurationAggregator
CHConfigurationDelegate
CHManagedHandleMigrationPolicy
CHManager
SyncManager
SyncManagerProtocol
CHPhoneBookIOSManager
CHCallInteractionManager
CHCallInteractionDataSourceDelegate
Intents
CHContactProvider
CHCallContactProvider
DBMigrationResult
DBManager
CHTransaction
CHTransactionAdditions
CallRecord
CallHistoryDBClientHandle
CallDBManagerServer
DeserializedTransaction
CHLocalization
CHSynchronizedLoggable
CHCallInteractionInProcessDataSource
CHCallInteractionDataSource
CHRecentCall
DayComparison
CHRecentCallAdditions
CHSharedAddressBook
CHManagedCallMigrationPolicy
CHDeviceObserver
CHNotifyObserver
Predicate
TransactionManager
CHContactDataSource
UserNotifications
WatchDogTimer
CHManagedHandle
EncryptionTransformer
PluginProtocol
CHPluginHelper
setTimer_outgoing:
containsString:
synchronousRemoteObjectProxyWithErrorHandler:
URLByAppendingPathComponent:
sortedArrayUsingComparator:
managedObjectContext
doubleValue
persistentStores
executeRequest:error:
sortedArrayUsingDescriptors:
object
knowledgeStore
initWithManagedObjectModel:
decodeBoolForKey:
integerValue
timeIntervalSinceReferenceDate
objectAtIndex:
mutableCopy
setIso_country_code:
addObject:
removeObserver:
standardUserDefaults
removeObserver:forKeyPath:context:
setDisconnected_cause:
addEntriesFromDictionary:
setPersistentStoreCoordinator:
containsValueForKey:
decodeDoubleForKey:
objectAtIndexedSubscript:
code
decodeIntegerForKey:
managedObjectIDForURIRepresentation:
label
removeObserver:name:object:
managedObjectModel
objectForKey:
lastObject
initFileURLWithPath:isDirectory:
addObjectsFromArray:
setPredicate:
decodeObjectOfClass:forKey:
phoneNumberWithStringValue:
initRequiringSecureCoding:
interfaceWithProtocol:
emailAddresses
addObserver:forKeyPath:options:context:
stringFromContact:style:
copy
setUndoManager:
stringByAppendingString:
setEntity:
archivedDataWithRootObject:requiringSecureCoding:error:
phoneNumbers
objectForKeyedSubscript:
setPropertiesToFetch:
removePersistentStore:error:
invalidate
compare:
lastPathComponent
initWithObjectIDs:
array
reset
valueForKey:
encodeBool:forKey:
refreshObject:mergeChanges:
decodeObjectOfClasses:forKey:
initWithBytes:length:encoding:
unsignedIntegerValue
addObserver:selector:name:object:
components:fromDate:
defaultCenter
initWithObjects:
setUnifyResults:
mappingModelFromBundles:forSourceModel:destinationModel:
addObserverForName:object:queue:usingBlock:
encodeDouble:forKey:
encodeInteger:forKey:
length
stringValue
initWithCapacity:
stringWithFormat:
predicateForContactMatchingPhoneNumberWithDigits:countryCode:
arrayWithCapacity:
arrayByAddingObjectsFromArray:
defaultManager
encodeObject:forKey:
stringWithUTF8String:
objectWithID:
addPersistentStoreWithType:configuration:URL:options:error:
setUnique_id:
setFace_time_data:
count
predicateForContactsMatchingEmailAddress:
registerDefaults:
setCall_category:
setMergePolicy:
orPredicateWithSubpredicates:
encodedData
arrayWithObject:
countByEnumeratingWithState:objects:count:
setFetchBatchSize:
fetchRequestWithEntityName:
initWithSet:
isConfiguration:compatibleWithStoreMetadata:
descriptorForRequiredKeysForStyle:
substringFromIndex:
predicateForContactsMatchingHandleStrings:
entitiesByName
versionIdentifiers
resolvePhoneNumbers:handler:queue:
initWithSourceModel:destinationModel:
setMetadata:forPersistentStore:
setFetchLimit:
orderedSetWithArray:
postNotificationName:object:
predicateForContactsWithIdentifiers:
initWithContentsOfURL:
setRelationshipKeyPathsForPrefetching:
substringToIndex:
arrayWithObjects:
arrayWithObjects:count:
postNotificationName:object:userInfo:
entity
weakToStrongObjectsMapTable
currentCalendar
initWithStartDate:duration:
resourcePath
mergedModelFromBundles:forStoreMetadata:
countForFetchRequest:error:
orderedSetWithCapacity:
setFetchOffset:
setRemoteObjectInterface:
predicateFormat
setValue:
initWithContext:
boolValue
initWithSuiteName:
resourceValuesForKeys:error:
postNotificationName:object:userInfo:deliverImmediately:
currentLocale
setValue:forKey:
allKeys
predicateWithFormat:
metadataForPersistentStore:
dictionary
resume
URLByAppendingPathExtension:
result
URLByDeletingLastPathComponent
localizedStringForKey:value:table:
remoteObjectProxy
hasChanges
isEqualToString:
enumerateContactsWithFetchRequest:error:usingBlock:
setResultType:
localizedStringForLabel:
allObjects
allocWithZone:
metadataForPersistentStoreOfType:URL:error:
fileExistsAtPath:
setNormalizedValue:
setWithCapacity:
setFiltered_out_reason:
URLForResource:withExtension:
dictionaryWithContentsOfURL:
setReturnsObjectsAsFaults:
hasPrefix:
filteredArrayUsingPredicate:
numberWithBool:
predicateWithValue:
writeToURL:atomically:
andPredicateWithSubpredicates:
dictionaryWithObjects:forKeys:count:
dataUsingEncoding:
path
URLWithString:
setCalltype:
numberWithDouble:
remoteObjectProxyWithErrorHandler:
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
bundleForClass:
setNumber_availability:
setWithObject:
dictionaryWithObjectsAndKeys:
enumerateResolutionsUsingBlock:
initWithEntity:insertIntoManagedObjectContext:
isLikePhoneNumber:
numberWithInteger:
bundleIdentifier
locationName
setService_provider:
setWithObjects:
anyObject
setObject:atIndexedSubscript:
year
evaluateWithObject:
propertiesByName
UTF8String
firstObject
UUID
setHandle_type:
dateByAddingTimeInterval:
setSortDescriptors:
setClasses:forSelector:argumentIndex:ofReply:
isReadableFileAtPath:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
appIntentsStream
setObject:forKey:
numberWithShort:
removeAllObjects
UUIDString
iOSLegacyIdentifier
identifier
bytes
setObject:forKeyedSubscript:
appendFormat:
exceptionWithName:reason:userInfo:
deleteInteractionWithCalls:
lowercaseString
initWithFetchRequest:
numberWithUnsignedInt:
setTimer_all:
month
setOriginated:
_destroyPersistentStoreAtURL:withType:options:error:
mainBundle
initWithKey:ascending:
persistentStoreCoordinator
appendString:
numberWithUnsignedLong:
setTimer_incoming:
raise:format:
numberWithUnsignedInteger:
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
setAddress:
inferredMappingModelForSourceModel:destinationModel:error:
executeFetchRequest:error:
insertedObjects
unarchivedObjectOfClasses:fromData:error:
setInterruptionHandler:
deleteObject:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithKeysToFetch:
setTimer_lifetime:
persistentStoreForURL:
executeQuery:error:
doesNotRecognizeSelector:
setOutputFormat:
sortDescriptorWithKey:ascending:
initWithMachServiceName:options:
removeObjectForKey:
removeObject:
rangeOfString:
setInvalidationHandler:
donateCallHistoryInteractionWithCall:
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
queue
execute:
executeSync:
executeSyncWithResult:
executeSyncWithBOOL:
initWithName:
initWithQueue:
.cxx_destruct
_queue
T@"NSObject<OS_dispatch_queue>",R,V_queue
sharedInstance
T@"CHDatabaseClientHandleManager",R,N
databaseClientHandle
_databaseClientHandle
T@"CallHistoryDBClientHandle",R,W,N,V_databaseClientHandle
dealloc
name
userInfo
setUserInfo:
_name
_userInfo
T@"NSString",R,V_name
T@"NSDictionary",&,V_userInfo
initWithDomain:
objectId
createWithDBManager:
createForClient
createForServer
T@"NSString",R,C,N
initWithDBManager:
callDBProperties
callRecordContext
registerForNotifications:
unRegisterForNotifications
handlePersistentStoreChangedNotification:
moveCallRecordsFromDatabaseAtURL:
handleCallRecordContextDidSaveNotification:
handleCallDBPropContextDidSaveNotification:
postTimersChangedNotification
mergeCallRecordChangesFromRemoteAppSave
mergeCallDBPropChangesFromRemoteAppSave
fetchWithPredicate:forEntity:
fetchWithPredicate:forEntity:withLimit:
deleteManagedCallsWithPredicate:
deleteManagedCalls:
fetchManagedCallCountWithPredicate:sortDescriptors:
fetchManagedCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchManagedCallIdentifiersWithPredicate:sortDescriptors:limit:offset:batchSize:
updateManagedCallsWithPredicate:propertiesToUpdate:
fetchAll
fetchAllNoLimit
createCallRecord
getArrayForCallTypeMask:
fetchWithCallTypes:
fetchAllObjectsWithUniqueId:
fetchObjectWithUniqueId:
fetchObjectsWithUniqueIds:
fetchObjectsWithPredicate:
deleteObjectWithUniqueId:
deleteObjectsWithUniqueIds:
deleteAll
performSaveWithBackgroundTaskAssertion:error:
updateCallDBProperties
handleSaveForCallRecordContext:error:
save:
timerIncoming
timerOutgoing
timerLifetime
timerLastReset
saveTimers:
resetTimers
resetAllTimers
callDBManager
callsDidChangeDarwinNotificationCount
setCallsDidChangeDarwinNotificationCount:
fCallRecordContext
fCallDBPropertiesContext
_observerCallRecordRef
_observerCallDBPropRef
_moveCallRecordsFromTempStoreRef
_dataStoreAddedRef
_callsDidChangeDarwinNotificationCount
Tq,N,V_callsDidChangeDarwinNotificationCount
T@"CallDBManager",R,N,VcallDBManager
type
value
normalizedValue
supportsSecureCoding
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedPhoneNumberHandleForValue:isoCountryCode:
handleTypeForValue:
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
initWithHandle:
initWithType:value:
initWithType:value:normalizedValue:
isEqualToHandle:
isTemporary
isPseudonym
_type
_value
_normalizedValue
T@"NSString",R,C,N,V_normalizedValue
Tq,R,N,V_type
T@"NSString",R,C,N,V_value
chCallStatus
setChCallStatus:
chHandleType
chRecentCall
chRemoteParticipantHandles
compositeCallCategoryForContext:
compositeHandleTypeForContext:
compositeJunkConfidenceForContext:
compositeLocalParticipantUUIDForContext:
compositeOutgoingLocalParticipantUUIDForContext:
compositeParticipantGroupUUIDForContext:
compositeRemoteParticipantHandlesForContext:
compositeServiceProviderForContext:
compositeVerificationStatusForContext:
supportsCallCategory
supportsHandleType
supportsImageURL
supportsJunkConfidence
supportsLocalParticipantUUID
supportsOutgoingLocalParticipantUUID
supportsParticipantGroupUUID
supportsRemoteParticipantHandles
supportsServiceProvider
supportsVerificationStatus
TI,N
Tq,R,N
T@"CHRecentCall",R,N
T@"NSSet",R,C,N
TB,R,N
isBootLockEnabled
bootLockEnabled
TB,R,N,GisBootLockEnabled
initWithDataSource:
propertiesDidChangeForConfiguration:
registeredDefaults
userDefaults
synchronize
observeValueForKeyPath:ofObject:change:context:
propertyNameForKeyPath:
dataSource
T@"<CHKeyValueDataSource><CHMutableKeyValueDataSource>",R,D,N
handlePermanentCreated
resetCallTimers:
appendTransactions:
sync:
clearSyncToken:
bootUp:
moveCallsFromTempDatabase
willMoveCallsFromTempDatabase
createHelperConnection
createPermanent
createTemporary
validatePermDatabase
validateTempDatabase
pokeSyncHelperToInitDB
tempDBLocation:
permDBLocation:
helperConnection
setHelperConnection:
syncHelperReadyNotificationRef
setSyncHelperReadyNotificationRef:
_helperConnection
_syncHelperReadyNotificationRef
T@"NSXPCConnection",&,V_helperConnection
T@,&,V_syncHelperReadyNotificationRef
logHandle
_logHandle
T@"NSObject<OS_os_log>",R,N,V_logHandle
modelURL
dataStoreName
getDBLocationIsSandboxed:isTemporary:error:
didChangeBootLockEnabledForDeviceObserver:
createDataStore
shouldCreatePermanent
shouldCreateTemporary
notifyDataStoreChanged
createManagedObjectContext
handleTemporaryCreated
dbManager
setDbManager:
deviceUnlocked
setDeviceUnlocked:
dataStoreType
setDataStoreType:
notifyDataStoreChangeReason
setNotifyDataStoreChangeReason:
deviceObserver
setDeviceObserver:
_deviceUnlocked
_dataStoreType
_notifyDataStoreChangeReason
_dbManager
_deviceObserver
T@"CHDeviceObserver",&,N,V_deviceObserver
T@"DBManager",&,N,V_dbManager
TB,V_deviceUnlocked
TC,V_dataStoreType
TC,V_notifyDataStoreChangeReason
logHandleForDomain:
accessorLock
logHandleToDomain
_accessorLock
_logHandleToDomain
T{os_unfair_lock_s=I},R,N,V_accessorLock
T@"NSMutableDictionary",R,N,V_logHandleToDomain
chHandle
copyWithContext:
managedHandleForHandle:inManagedObjectContext:
managedHandlesForHandles:inManagedObjectContext:
T@"CHHandle",R,N
ch_interactionForIdentifier:error:
performDelegateSelector:withDelegate:
addDelegate:queue:
removeDelegate:
performDelegateSelector:
delegateToQueue
_delegateToQueue
T@"NSMapTable",R,N,V_delegateToQueue
initWithURL:
readDatabaseVersion:
writeDatabaseVersion:isTemp:
validateInfo:
dbInfoPrefFile
setDbInfoPrefFile:
_dbInfoPrefFile
T@"NSURL",&,V_dbInfoPrefFile
isCloudKitEnabled
cloudKitEnabled
TB,R,N,GisCloudKitEnabled
numberForKey:
delegateController
_dataSource
_delegateController
T@"CHDelegateController<CHConfigurationDelegate>",R,N,V_delegateController
T@"<CHKeyValueDataSource>",R,N,V_dataSource
fetchRequest
T@"NSString",C,D,N
Ts,D,N
T@"NSString",&,D,N
localParticipantCalls
T@"NSSet",&,D,N
remoteParticipantCalls
initWithDigits:isoCountryCode:
formattedRepresentation
normalizedRepresentation
digits
isoCountryCode
setIsoCountryCode:
formattedRepresentationAttempted
setFormattedRepresentationAttempted:
normalizedRepresentationAttempted
setNormalizedRepresentationAttempted:
_formattedRepresentationAttempted
_normalizedRepresentationAttempted
_formattedRepresentation
_normalizedRepresentation
_digits
_isoCountryCode
T@"NSString",R,C,N,V_digits
T@"NSString",C,N,V_isoCountryCode
TB,N,V_formattedRepresentationAttempted
TB,N,V_normalizedRepresentationAttempted
T@"NSString",R,C,N,V_formattedRepresentation
T@"NSString",R,C,N,V_normalizedRepresentation
timer_outgoing
T@"NSNumber",&,D,N
timer_incoming
timer_all
timer_lifetime
timer_last
enumerateDelegatesUsingBlock:
delegateLock
_delegateLock
T{os_unfair_lock_s=I},R,N,V_delegateLock
configurationAggregator:didChangeConfiguration:
initWithConfigurations:queue:
registerConfigurationDelegate
delegate
setDelegate:
configurations
_delegate
_configurations
T@"NSArray",R,C,N,V_configurations
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<CHConfigurationAggregatorDelegate>",W,N,V_delegate
normalizedValueForManagedHandle:
valueForManagedHandle:
handleCallHistoryContactStoreChangedInternalNotification:
handleCallHistoryDatabaseChangedInternalNotification:
currentLocaleChanged:
limitingCallKindsForCallType:
CHCallStatusForCallWithDuration:isOriginated:isAnswered:
setDefaultInitValues
initWithContactStore:
initWithContactStore:queue:
initWithFetchingLimitsDictionary:andCoalescingStrategy:andPostFetchingPredicate:withQueue:
setInitialLimitingCallKinds:
syncManager
registerForNotifications
coalescedCallsWithCalls:usingStrategy:
recentCalls
uncoalescedRecentCallsSync
unCoalesceCall:
applyPredicate:toCalls:
recentCallsWithPredicate:
fetchRecentCallsSyncWithCoalescing:
countCallsWithPredicateSync:
countCallsWithPredicate:
addToCallHistory:
setOutgoingLocalParticipantUUID:forRecentCallsMatchingPredicate:
markAllCallsAsReadWithPredicate:
updateBytesOfDataUsedFor:with:
deleteTheseCallsSync:
deleteTheseCalls:
deleteCall:
deleteCalls:withCompletion:
deleteCallAtIndex:
deleteAllCallsSync
getLimitsDictionary
deleteAllCalls
clearDatabase
setLimitingCallKindsSync:
setLimitingCallKinds:
setLimitingCallTypesSync:
setLimitingCallTypes:
setPostFetchingPredicate:
setLimitingStartDate:
setLimitingEndDate:
setCoalescingStrategy:
setShowsFaceTimeVideoCalls:
setShowsFaceTimeAudioCalls:
showsTelephonyCalls
showsFaceTimeVideoCalls
showsFaceTimeAudioCalls
limitingCallTypes
limitingStartDate
limitingEndDate
limitingCallKinds
postFetchingPredicate
coalescingStrategy
setShowsTelephonyCalls:
callTimersGetIncoming
callTimersGetOutgoing
callTimersGetLifetime
callTimersReset
flush
addMultipleCallsToCallHistory:
setRead:forCallsWithPredicate:
setRead:forCallsWithPredicate:completion:
deleteCallsWithPredicate:
deleteCallsWithPredicate:completion:
callCountWithPredicate:
callsWithPredicate:limit:offset:batchSize:
callIdentifiersWithPredicate:limit:offset:batchSize:
coalescedCallCountWithPredicate:
coalescedCallsWithPredicate:limit:offset:batchSize:
latestRecentCallMatchingPredicate:
latestCallMatchingNormalizedRemoteParticipantHandleValues:
generateSyncTransactions
setGenerateSyncTransactions:
phoneBookManager
setRecentCalls:
numberOfUnseenMissedCalls
setNumberOfUnseenMissedCalls:
setSyncManager:
cacheIsDirty
setCacheIsDirty:
reCoalesce
setReCoalesce:
setUncoalescedRecentCalls:
uncoalescedUnFilteredRecentCalls
setUncoalescedUnFilteredRecentCalls:
_showsTelephonyCalls
_showsFaceTimeVideoCalls
_showsFaceTimeAudioCalls
_generateSyncTransactions
_cacheIsDirty
_reCoalesce
_limitingCallTypes
_limitingStartDate
_limitingEndDate
_limitingCallKinds
_postFetchingPredicate
_coalescingStrategy
_phoneBookManager
_recentCalls
_numberOfUnseenMissedCalls
_syncManager
_uncoalescedRecentCalls
_uncoalescedUnFilteredRecentCalls
T@"CHPhoneBookIOSManager",R,N,V_phoneBookManager
T@"NSArray",&,N,V_recentCalls
Tq,V_numberOfUnseenMissedCalls
T@"<SyncManagerProtocol>",&,N,V_syncManager
TB,V_cacheIsDirty
TB,V_reCoalesce
uncoalescedRecentCalls
T@"NSArray",&,N,GuncoalescedRecentCallsSync,V_uncoalescedRecentCalls
T@"NSArray",&,V_uncoalescedUnFilteredRecentCalls
TB,N,V_showsFaceTimeVideoCalls
TB,N,V_showsFaceTimeAudioCalls
TB,N,V_showsTelephonyCalls
TB,N,V_generateSyncTransactions
TI,N,V_limitingCallTypes
T@"NSDate",C,N,V_limitingStartDate
T@"NSDate",C,N,V_limitingEndDate
T@"NSArray",C,N,V_limitingCallKinds
T@"NSPredicate",&,N,V_postFetchingPredicate
T@"NSString",C,N,V_coalescingStrategy
ch_localizedNameOfTimeIntervalType:
setRead:forCallsWithPredicate:error:
deleteCallsWithPredicate:error:
fetchCallCountWithPredicate:sortDescriptors:
fetchCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchCallIdentifiersWithPredicate:sortDescriptors:limit:offset:batchSize:
fetchCoalescedCallCountWithPredicate:sortDescriptors:
fetchCoalescedCallsWithPredicate:sortDescriptors:limit:offset:batchSize:
insert:
insertWithoutTransaction:
insertRecordsWithoutTransactions:
fetchAllObjects
fetchObjectsWithLimits:
deleteAllObjects
deleteObjectsWithLimits:
updateObjects:
updateAllObjects:
initDBHandle
predicateForCallKind:
predicateForCallKinds:
predicateForLimits:
addUpdateTransactions:
archiveCallObject:
dbHandle
_transactionManager
_dbHandle
T@"CallHistoryDBClientHandle",R,N,V_dbHandle
fetchCNContact:countryCode:isEmail:
getRecordId:countryCode:isEmail:
fetchFullCNContactForContactIdentifier:isEmail:
fetchCNContactsMatchingPredicate:keysToKetch:error:
getPersonsNameForContact:
getLocalizedCallerIdLabelForContact:forCallerId:withCallerIdIsEmail:
contactStore
_contactStore
T@"CNContactStore",R,N,V_contactStore
callInteractionsDidChangeForManager:
callInteractionsDidChangeForDataSource:
T@"<CHCallInteractionDataSource>",R,N,V_dataSource
T@"CHDelegateController",R,N,V_delegateController
address
answered
T@"NSNumber",C,D,N
call_category
calltype
date
T@"NSDate",C,D,N
disconnected_cause
duration
face_time_data
filtered_out_reason
handle_type
imageURL
T@"NSURL",C,D,N
iso_country_code
junkConfidence
localParticipantUUID
T@"NSUUID",C,D,N
location
number_availability
originated
outgoingLocalParticipantUUID
participantGroupUUID
read
service_provider
unique_id
verificationStatus
remoteParticipantHandles
interaction
interactionDateInterval
T@"INInteraction",R,N
T@"NSDateInterval",R,N
contactsByHandleForCalls:keyDescriptors:error:
contactsByHandleForHandles:keyDescriptors:error:
T@"<CHContactDataSource>",R,N,V_dataSource
initWithErrorCode:andDBVersion:
errorCode
setErrorCode:
dbVersion
setDbVersion:
_errorCode
_dbVersion
Tq,N,V_errorCode
Tq,N,V_dbVersion
persistentStoreOptions:
getPersistentCoordinator:
isDataStoreAtURLInitialized:withModelAtURL:
instanceWithModelURL:
versionForManagedObjectModel:
modelForDBAtLocation:
versionForDBAtLocation:
mapToDBMErrorCode:
migrateDataStoreAtLocation:withGetDestinationModel:isEncrypted:
destroyDBAtLocation:withModelAtLocation:
moveDBAtLocation:toLocation:withModelAtLocation:
entityDescriptionHavingName:forContext:
setPropertyValue:forKey:forContext:
getPropertyValueForKey:forContext:
getStoreURLforContext:
mangedObjectWithURI:inContext:
makeDatabaseAtURLClassCDataProtected:
replacePersistentStore:withURL:
addDataStoreAtLocation:isEncrypted:
removeDataStoreAtLocation:
fPersistentStoreCoordinator
setFPersistentStoreCoordinator:
T@"NSPersistentStoreCoordinator",&,N,VfPersistentStoreCoordinator
transactionType
unarchivedObjectClasses
unarchivedObjectFromData:error:
toString:
archivedDataWithError:
initWithType:andRecord:
initWithString:andRecord:
isEqualToTransaction:
record
_transactionType
_record
TQ,R,N,V_transactionType
T@"NSData",R,N,V_record
ch_stringWithCHTransactionType:
parseCallStatus_sync:isAnswered:isOriginated:
getCallStatus_sync:isOriginated:isAnswered:
setStoreObject_sync:withClientObject:
convertToCHRecentCalls_sync:
convertToCHRecentCalls_sync:limit:
init:
updateCallsWithPredicate:propertiesToUpdate:error:
deleteAll:
deleteObjectWithUniqueId:error:
deleteObjectWithUniqueId:error:save:
deleteObjectsWithUniqueIds:error:
createCallRecord:
createCallRecord:error:
createCallRecord:error:save:
createCallRecords:
createCallRecords:error:
updateCallRecords:
updateCallRecords:error:
updateCallRecords:error:save:
updateAllCallRecords:
updateAllCallRecords:error:
manager
handleCallRecordSave_sync
handleCallTimersSave_sync:
willHandleNotification_sync:
updateCallRecords_sync:error:save:
updateAllCallRecords_sync:error:
updateCallRecord_sync:withChangeDict:
saveDatabase:
dbStoreHandle
callsDidChangeNotifyObserver
_observerCallTimersRef
_callsDidChangeNotifyObserver
T@"CHNotifyObserver",R,N,V_callsDidChangeNotifyObserver
T@"CallHistoryDBHandle",R,N,VdbStoreHandle
getDestinationModelForVersion:
getNextVersionToMigrateToCurrentVersion:
getNextVersionToDowngradeTo:
getNextVersionToDowngradeTo:withSourceVersion:
getDestinationModel:
downgradeDatabaseAtLocation:toVersion:
getObjectIdsForDuplicateRecordsWithUniqueIds:andHavingObjectIds:
getUniqueIdsForAllRecords:
getObjectIdsForAllRecords:
bootUpDBAtLocationWithRecovery:isEncrypted:
handleBootUpFailure:
createMOCForDBAtLocation:dbVersion:isEncrypted:
removeDuplicatesFromDBAtLocation:dbVersion:isEncrypted:
modifyCallRecordForDBAtLocation:dbVersion:isEncrypted:modifyCallRecord:
populateServiceProviderAndCallCategory:dbVersion:isEncrypted:
populateRecentCallRemoteParticipantHandles:dbVersion:isEncrypted:
populateHandleType:dbVersion:isEncrypted:
prepareDatabaseForNextStepInMigration:dbVersion:isEncrypted:
handleDatabaseMigration:isEncrypted:isRetry:
getUUIDsOfNMostRecentRecords:fromManagedObjectContext:
prepareForMigrationDBAtURL:withModelAtURL:andIsEncrypted:
createCallDBProperties
bootUpDBAtLocation:isEncrypted:
initWithCall:andType:
call
setType:
_call
T@"CHRecentCall",R,N,V_call
TQ,V_type
classBundle
localizationTableName
localizedStringForKey:
T@"NSBundle",R,N
initWithName:queue:
_logger
_synchronizable
T@"<CHCallInteractionDataSourceDelegate>",&,N
callInteractionObserver
_callInteractionObserver
T@"CHNotifyObserver",R,N,V_callInteractionObserver
T@"<CHCallInteractionDataSourceDelegate>",&,N,V_delegate
callerIdAvailability
getLocationForCallerId:andIsoCountryCode:
callMediaTypeAsString:
callTTYTypeAsString:
callHandleTypeAsString:
callTypeAsString:
callStatusAsString:
callCategoryAsString:
mediaTypeForCallCategory:
ttyTypeForCallCategory:
categoryForMediaType:andTTYType:
categoryForCallType:
serviceProviderForCallType:
getCallTypeForCategory:andServiceProvider:
callOccurrencesArrayByAddingCallOccurrencesFromArray:
canCoalesceSyncWithRecentsStrategyWithCall:
canCoalesceRemoteParticipantHandlesFromCall:
canCoalesceWithCall:withStrategy:
coalesceWithCall:withStrategy:
coalescedCallWithCall:usingStrategy:
dictionaryRepresentation
numberOfOccurrences
setDuration:
setName:
setTimeToEstablish:
validRemoteParticipantHandles
countOfExcludedHandles
setRead:
fetchAndSetContactIdentifier
fetchAndSetFullContact
contactIdentifier
contactRef
addressBookRecordId
setCallerIdAvailability:
callerIdIsEmailAddress
callerNetworkName
setCallerNetworkName:
callerNetworkFirstName
callerNetworkSecondName
handleType
callerName
getLocalizedString:
callerNameForDisplay
callerIdForDisplay
callerIdLabel
callerIdLocation
callerIdSubStringForDisplay
callOccurrencesAsString
setCallType:
setCallCategory:
setServiceProvider:
setMediaType:
setTtyType:
updateTTYAndMediaType
fixCallTypeInfo
isJunk
isEqualToRecentCall:
setImageURL:
setLocalParticipantUUID:
setOutgoingLocalParticipantUUID:
setRemoteParticipantHandles:
uniqueId
setUniqueId:
callStatus
setCallStatus:
serviceProvider
bytesOfDataUsed
setBytesOfDataUsed:
setDate:
disconnectedCause
setDisconnectedCause:
filteredOutReason
setFilteredOutReason:
callerIdIsBlocked
setCallerIdIsBlocked:
unreadCount
setUnreadCount:
callOccurrences
setCallOccurrences:
mediaType
ttyType
setHandleType:
timeToEstablish
setAddressBookRecordId:
addressBookCallerIDMultiValueId
setAddressBookCallerIDMultiValueId:
callCategory
callerId
setCallerId:
callType
setContactIdentifier:
devicePhoneId
setDevicePhoneId:
mobileCountryCode
setMobileCountryCode:
mobileNetworkCode
setMobileNetworkCode:
setContactRef:
setJunkConfidence:
setVerificationStatus:
setCallerName:
setCallerIdLabel:
setCallerIdLocation:
multiCall
setMultiCall:
setParticipantGroupUUID:
setPhoneBookManager:
setCallerIdFormatted:
setAnswered:
mobileOriginated
setMobileOriginated:
_read
_callerIdIsBlocked
_multiCall
_answered
_mobileOriginated
_callStatus
_callerIdAvailability
_callCategory
_callType
_imageURL
_localParticipantUUID
_outgoingLocalParticipantUUID
_remoteParticipantHandles
_uniqueId
_serviceProvider
_bytesOfDataUsed
_date
_duration
_disconnectedCause
_filteredOutReason
_unreadCount
_callOccurrences
_mediaType
_ttyType
_handleType
_timeToEstablish
_addressBookRecordId
_addressBookCallerIDMultiValueId
_callerId
_contactIdentifier
_devicePhoneId
_mobileCountryCode
_mobileNetworkCode
_contactRef
_junkConfidence
_verificationStatus
_callerName
_callerIdLabel
_callerIdLocation
_participantGroupUUID
_callerIdFormatted
T@"CNContact",C,N,V_contactRef
T@"NSDictionary",R,N
T@"NSURL",&,N,V_imageURL
Tq,N,V_junkConfidence
T@"NSString",C,N,V_name
Tq,N,V_verificationStatus
T@"NSString",C,N,V_callerName
TB,N,V_callerIdIsBlocked
TQ,N,V_unreadCount
T@"NSArray",C,N,V_callOccurrences
T@"NSString",C,N,V_callerIdLabel
T@"NSString",C,N,V_callerIdLocation
TB,N,V_multiCall
T@"NSUUID",&,N,V_participantGroupUUID
T@"CHPhoneBookIOSManager",&,N,V_phoneBookManager
callerIdFormatted
T@"NSString",C,N,GcallerIdForDisplay,V_callerIdFormatted
TB,V_answered
TB,V_mobileOriginated
T@"NSUUID",&,N,V_localParticipantUUID
T@"NSUUID",&,N,V_outgoingLocalParticipantUUID
T@"NSSet",C,N,V_remoteParticipantHandles
T@"NSString",C,N,V_uniqueId
TI,N,V_callStatus
T@"NSString",C,N,V_serviceProvider
T@"NSNumber",&,N,V_bytesOfDataUsed
T@"NSDate",&,N,V_date
Td,N,V_duration
TB,N,V_read
T@"NSNumber",&,N,V_disconnectedCause
T@"NSNumber",&,N,V_filteredOutReason
TI,N,V_callerIdAvailability
Tq,N,V_mediaType
Tq,N,V_ttyType
Tq,N,V_handleType
T@"NSNumber",&,N,V_timeToEstablish
T@"NSString",C,N,V_addressBookRecordId
T@"NSString",C,N,V_addressBookCallerIDMultiValueId
TI,N,V_callCategory
T@"NSString",C,N,V_callerId
T@"NSString",C,N
TI,N,V_callType
T@"NSString",C,N,V_contactIdentifier
T@"NSString",C,N,V_devicePhoneId
T@"NSString",C,N,V_mobileCountryCode
T@"NSString",C,N,V_mobileNetworkCode
isSameDayAsDate:
ch_stringWithCHRecentCallVerificationStatus:
ch_stringWithCHRecentCallJunkConfidence:
revertAddressBook:
registerForContactsNotifications
sendABChangedNotificationSyncWithUserInfo:
cleanUpAddressBookCache_sync
insertAddressBookInfoDictionaryIntoCache:
insertAddressBookInfoIntoCache:forKey:
fetchAddressBookInfoFromCacheForKey:
cachedCount
addressBookCache
setAddressBookCache:
_addressBookCache
T@"NSMutableDictionary",&,V_addressBookCache
addressForManagedCall:
initWithQueue:dataSource:
setBootLockEnabled:
firstUnlockNotifyObserver
setFirstUnlockNotifyObserver:
_bootLockEnabled
_firstUnlockNotifyObserver
TB,N,GisBootLockEnabled,V_bootLockEnabled
T@"<CHDeviceDataSource>",R,N,V_dataSource
T@"CHNotifyObserver",&,N,V_firstUnlockNotifyObserver
initWithName:queue:callback:
callback
token
setToken:
_token
_callback
T@"NSString",R,C,N,V_name
Ti,N,V_token
T@?,R,C,N,V_callback
predicateForCallsBetweenStartDate:endDate:
predicateForCallsLessThanDate:
predicateForCallsWithCategory:
predicateForCallsWithMediaType:
predicateForCallsWithAnyMediaTypes:
predicateForCallsWithRemoteParticipantCount:
predicateForCallsWithRemoteParticipantHandle:
predicateForCallsWithRemoteParticipantHandleType:
predicateForCallsWithRemoteParticipantHandleValue:
predicateForCallsWithRemoteParticipantHandleNormalizedValue:
predicateForCallsWithAnyRemoteParticipantHandles:
predicateForCallsWithAnyRemoteParticipantHandleTypes:
predicateForCallsWithAnyRemoteParticipantHandleValues:
predicateForCallsWithAnyRemoteParticipantHandleNormalizedValues:
predicateForCallsWithServiceProvider:
predicateForCallsWithAnyServiceProviders:
predicateForCallsWithStatus:
predicateForCallsWithStatusAnswered:
predicateForCallsWithStatusOriginated:
predicateForCallsWithStatusRead:
predicateForCallsWithStatusJunk:
predicateForCallsWithTTYType:
predicateForCallsWithAnyTTYTypes:
predicateForCallsWithUniqueID:
predicateForCallsWithAnyUniqueIDs:
instance
createXpcConnection
createXpcConnection_sync
appendTransactions_sync:
setupConnectionHandlers_sync
_connection
_interface
_queuedTransactions
contactsByContactHandleForContactHandles:keyDescriptors:error:
notificationThreadIdentifier
initWithQueue:withName:withTimeout:withCallback:
cancel
_timer
allowsReverseTransformation
transformedValueClass
transformedValue:
reverseTransformedValue:
recentCallsWithCallType:withReply:
unreadCallCount:
recentCallsWithLimitingTypes:error:
recentCallsWithLimitingTypes:completionHandler:
unreadCallCountWithError:
unreadCallCountWithCompletionHandler:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
@24@0:8@?16
B24@0:8@?16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@?<v@?>16
@24@0:8@?<@@?>16
B24@0:8@?<B@?>16
@24@0:8r*16
@24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"CallHistoryDBClientHandle"
v24@0:8@16
@"NSString"
@"NSDictionary"
@32@0:8@16@24
@36@0:8@16@24B32
q24@0:8@16
Q32@0:8@16@24
@56@0:8@16@24Q32Q40Q48
@20@0:8I16
B32@0:8@16^@24
B24@0:8^@16
q16@0:8
v24@0:8q16
@"NSManagedObjectContext"
@"CallDBManager"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@32@0:8q16@24
@40@0:8q16@24@32
I16@0:8
v20@0:8I16
v48@0:8@16@24@32^v40
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?C>16
@24@0:8^C16
@"NSXPCConnection"
@"NSObject<OS_os_log>"
@32@0:8B16B20^C24
v24@0:8@"CHDeviceObserver"16
v20@0:8B16
C16@0:8
v20@0:8C16
@"DBManager"
@"CHDeviceObserver"
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@32@0:8@16^@24
v32@0:8:16@24
v32@0:8:16@"<CHDelegate>"24
v32@0:8@16@24
v24@0:8:16
@"NSMapTable"
q20@0:8B16
v28@0:8q16B24
B20@0:8B16
@"NSURL"
v32@0:8@"<CHConfigurationDelegate>"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<CHConfigurationDelegate>"16
@"<CHKeyValueDataSource>"
@"CHDelegateController<CHConfigurationDelegate>"
v24@0:8@"CHConfiguration"16
@"<CHConfigurationAggregatorDelegate>"
@"NSArray"
I32@0:8d16B24B28
@48@0:8@16@24@32@40
@20@0:8B16
Q24@0:8@16
v32@0:8@16@?24
v24@0:8Q16
d16@0:8
q28@0:8B16@20
v36@0:8B16@20@?28
@48@0:8@16Q24Q32Q40
@"NSDate"
@"NSPredicate"
@"CHPhoneBookIOSManager"
@"<SyncManagerProtocol>"
@24@0:8q16
q36@0:8B16@20^@28
q32@0:8@16^@24
q36@0:8B16@"NSPredicate"20^@28
q32@0:8@"NSPredicate"16^@24
Q32@0:8@"NSPredicate"16@"NSArray"24
@"NSArray"56@0:8@"NSPredicate"16@"NSArray"24Q32Q40Q48
v24@0:8@"CHRecentCall"16
@"NSArray"16@0:8
@"CHRecentCall"24@0:8@"NSString"16
@"NSArray"24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
@"TransactionManager"
@28@0:8@16B24
@40@0:8@16@24^@32
@"CNContactStore"
v24@0:8@"<CHCallInteractionDataSource>"16
@"<CHCallInteractionDataSource>"
@"CHDelegateController"
@"NSDictionary"40@0:8@"NSArray"16@"NSArray"24^@32
@"<CHContactDataSource>"
@32@0:8q16q24
q32@0:8@16@24
@36@0:8@16@?24B32
B32@0:8@16@24
B40@0:8@16@24@32
v40@0:8@16@24@32
B28@0:8@16B24
@"NSPersistentStoreCoordinator"
@24@0:8Q16
@24@0:8^@16
@32@0:8Q16@24
@"NSData"
v36@0:8I16^B20^B28
I40@0:8@16@24@32
@32@0:8@16Q24
B36@0:8@16^@24B32
@36@0:8@16^@24B32
@"CallHistoryDBHandle"
@"CHNotifyObserver"
q24@0:8q16
q32@0:8q16q24
@32@0:8@16q24
@36@0:8@16q24B32
B36@0:8@16q24B32
v44@0:8@16q24B32@?36
v36@0:8@16q24B32
B32@0:8@16B24B28
v36@0:8@16@24B32
@"CHRecentCall"
@32@0:8r*16@24
@"CHLogger"
@"CHSynchronizable"
@"<CHCallInteractionDataSourceDelegate>"16@0:8
v24@0:8@"<CHCallInteractionDataSourceDelegate>"16
@"<CHCallInteractionDataSourceDelegate>"
q20@0:8I16
I32@0:8q16q24
I20@0:8I16
I28@0:8I16@20
v24@0:8d16
@"NSUUID"
@"NSSet"
@"NSNumber"
@"CNContact"
@"<CHDeviceDataSource>"
@40@0:8@16@24@?32
@?16@0:8
i16@0:8
v20@0:8i16
@"NSXPCInterface"
@"NSMutableArray"
@48@0:8@16@24d32@?40
@"NSObject<OS_dispatch_source>"
v28@0:8I16@?20
v28@0:8I16@?<v@?@"NSArray">20
v24@0:8@?<v@?Q>16
@28@0:8I16^@20
Q24@0:8^@16
