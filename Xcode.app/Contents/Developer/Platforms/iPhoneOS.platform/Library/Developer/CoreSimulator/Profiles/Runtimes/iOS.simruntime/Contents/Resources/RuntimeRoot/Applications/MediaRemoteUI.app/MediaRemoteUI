init
acquire
invalidate
domain
isEqualToString:
code
delayAcquire
acquireBackgroundContentAssertionWithDefinition:errorHandler:
setBackgroundContentAssertion:
backgroundContentAssertion
dealloc
isValid
.cxx_destruct
_valid
_backgroundContentAssertion
T@"SBSLockScreenBackgroundContentAssertion",&,N,V_backgroundContentAssertion
valid
TB,R,N,GisValid,V_valid
_supportsAlwaysOnDisplay
mr_shouldDim
_defaultAnimationDuration
shouldUseTimelinesForTraitCollection:
defaultAnimationDuration
shared
backgroundContainer
artworkView
center
location
sharedApplication
setIdleTimerDisabled:
handleBackgroundTapAt:
handleTouchAction:
initWithFrame:
initWithCoder:
displayLinkFiredWithDisplayLink:
artworkView:didChangeArtworkImage:
setAlpha:
setTransform:
setPreferredFrameRateRange:
initWithInterval:repeats:queue:block:
draw
layer
removeBackBuffers
currentSettings
lockScreenAPLRatio
artworkImageView
animateWithDuration:animations:
setValue:forKeyPath:
filters
setFilters:
initWithType:
setValue:forKey:
setName:
valueForKeyPath:
setPaused:
discardContents
bounds
lockScreenAPLTarget
initWithFrame:device:
setAutoresizingMask:
setAllowsDisplayCompositing:
setDelegate:
setStyle:
setShowPlaceholder:
addSubview:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
addObserver:
removeFromRunLoop:forMode:
clientConnected:
clientDisconnected:
layout
setArtworkVisible:
invalidateAllTimelinesForReason:
contextForActivityIdentifier:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
_canShowWhileLocked
loadView
viewDidLoad
viewWillAppear:
viewDidDisappear:
traitCollectionDidChange:
initWithNibName:bundle:
view
traitCollection
setView:
nowPlayingViewControllerDidSelectArtworkView:
nowPlayingViewController
showArtworkView
setShowArtworkView:
layoutIfNeeded
nowPlayingViewController:didChangeSizeWithAnimations:completion:
nowPlayingViewController:applyLayout:
nowPlayingViewController:showViewController:
window
setWindow:
scene:willConnectToSession:options:
sceneDidDisconnect:
sceneWillEnterForeground:
sceneDidEnterBackground:
coverSheetViewController:didUpdatePreferredContentSize:
rootViewController
beginAppearanceTransition:animated:
endAppearanceTransition
serverController
SBUI_isHostedBySystemAperture
setSystemApertureElementViewControllerProvider:
supportSessionBasedLockScreenPlatter
initWithWindowScene:
setRootViewController:
makeKeyAndVisible
controller
addSwiftObserver:
metadataController
artwork
windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:
windowScene:performActionForShortcutItem:completionHandler:
windowScene:userDidAcceptCloudKitShareWithMetadata:
coverSheetViewController:willChangeToLayout:animations:completion:
coverSheetViewController:didReceiveInteractionEvent:
sceneDidBecomeActive:
sceneWillResignActive:
scene:openURLContexts:
stateRestorationActivityForScene:
scene:restoreInteractionStateWithUserActivity:
scene:willContinueUserActivityWithType:
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
listener:didReceiveConnection:withContext:
allObjects
listenerWithConfigurator:
activate
setDomain:
setService:
remoteProcess
auditToken
realToken
configureConnection:
setTargetQueue:
userInitiated
setServiceQuality:
setInterface:
setInterfaceTarget:
setInvalidationHandler:
weakObjectsHashTable
interfaceWithIdentifier:
protocolForProtocol:
setServer:
setClient:
setClientMessagingExpectation:
copy
_isSecure
initWithContentRect:
platterContainer
setPlatterContainer:
setBackgroundContainer:
setArtwork:
canBeExpanded
updateExpandedArtworkFrameFor:
handlePlatterTap
nowPlayingController:metadataController:didChangeArtwork:
setFrame:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
catalog
activeInterfaceOrientation
supportLockScreenBackground
timerWithInterval:repeats:block:
frame
contentCutoutBoundsForInterfaceOrientation:
fetchMaximalLockScreenContentCutoutBoundsForOrientation:completionHandler:
mainScreen
nowPlayingControllerShouldAutomaticallyUpdateResponse:
nowPlayingController:endpointController:didChangeRoute:
nowPlayingController:tvRemoteController:didChangeShowTVRemote:
nowPlayingController:metadataController:didChangeBundleID:
nowPlayingController:metadataController:didChangeNowPlayingInfo:
nowPlayingController:metadataController:didChangeTimeControls:
nowPlayingController:metadataController:didChangeTransportControls:
nowPlayingController:mediaSuggestionsController:didChangeMediaSuggestions:
nowPlayingController:queueHandoffCoordinator:didChangeState:
nowPlayingController:didChangeQuickControlItem:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
Failed to acquire assertion: %@
v16@?0@"NSError"8
_TtC13MediaRemoteUI24CoverSheetBackgroundView
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
backdropRenderer
visualizerView
artworkTransitionTimer
displayLink
isOnScreen
isDimmed
artworkVisible
preferredFrameRateRange
preferredTransitionFrameRateRange
_TtCC13MediaRemoteUI24CoverSheetBackgroundView17DisplayLinkTarget
v24@0:8@16
callback
v8@?0
MediaRemoteUI.DisplayLinkTarget
init()
filters.MRCAFilterNameAPL.inputScale
MRCAFilterNameAPL
filters.MRCAFilterNameAPL
MRUArtworkViewObserver
v32@0:8@"MRUArtworkView"16@"UIImage"24
_TtP13MediaRemoteUI24ClientConnectionObserver_
v24@0:8@"_TtC13MediaRemoteUI6Client"16
_TtP13MediaRemoteUI16ArtworkContainer_
q16@0:8
layout
T@"MRUArtworkView",N,R
@"MRUArtworkView"16@0:8
v24@0:8@"NSString"16
MRUIContextProviding
@"NSString"24@0:8@"NSString"16
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
_TtC13MediaRemoteUI34CoverSheetBackgroundViewController
B16@0:8
v16@0:8
@32@0:8@16@24
MediaRemoteUI/CoverSheetBackgroundViewController.swift
Fatal error
_TtC13MediaRemoteUI31CoverSheetPlatterViewController
MediaRemoteUI1
v20@0:8B16
MRUNowPlayingViewControllerDelegate
v40@0:8@16@?24@?32
v32@0:8@16q24
v40@0:8@"MRUNowPlayingViewController"16@?<v@?>24@?<v@?>32
v32@0:8@"MRUNowPlayingViewController"16q24
v32@0:8@"MRUNowPlayingViewController"16@"UIViewController"24
B24@0:8@"MRUNowPlayingViewController"16
_TtC13MediaRemoteUI21ActivitySceneDelegate
v40@0:8@16@24@32
nowPlayingElementProvider
mirroringElementProvider
nowPlayingScene
screenMirroringScene
coversheetScene
T@"UIWindow",N,&,Vwindow
v40@0:8@16{CGSize=dd}24
CoverSheetSceneDidEnterBackground.
CoverSheetSceneWillEnterForeground.
Did not receive activity scene with identifier.
Configuring scene for identifier: %{public}@, context: %{public}@.
UIWindowSceneDelegate
v48@0:8@16@24q32@40
v40@0:8@16@24@?32
T@"UIWindow",N,&
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v48@0:8@"UIWindowScene"16@"<UICoordinateSpace>"24q32@"UITraitCollection"40
v40@0:8@"UIWindowScene"16@"UIApplicationShortcutItem"24@?<v@?B>32
v32@0:8@"UIWindowScene"16@"CKShareMetadata"24
MRUCoverSheetViewControllerDelegate
v48@0:8@16q24@?32@?40
v40@0:8@"MRUCoverSheetViewController"16{CGSize=dd}24
v48@0:8@"MRUCoverSheetViewController"16q24@?<v@?>32@?<v@?>40
v32@0:8@"MRUCoverSheetViewController"16@"UIGestureRecognizer"24
UISceneDelegate
@24@0:8@16
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSUserActivity"24
v32@0:8@"UIScene"16@"NSString"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
@32@0:8:16@24
superclass
description
_TtC13MediaRemoteUI6Client
hasQuickControlsAssertion
hasLockScreenControlsAssertion
hasScreenMirroringQuickControlsAssertion
connection
identifier
Tq,N,R
_TtC13MediaRemoteUI23ClientConnectionManager
lock
connectionQueue
listener
observerTable
internalClients
interface
[ClientConnectionManager] removing client %{public}s
Down-casted Array element failed to match the target type
Expected 
ClientConnectionObserver
NSArray element failed to match the Swift Array Element type
Expected 
[ClientConnectionManager] adding client %{public}s
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
mediaremoteui-service
com.apple.mediaremoteui.ui-service
[ClientConnectionManager] rejecting connection due to missing audit token
com.apple.mediaremoted
[ClientConnectionManager] rejecting connection from unauthorized process %s
[ClientConnectionManager] accepting connection
v16@?0@"<BSServiceConnectionConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
[ClientConnectionManager] client %{public}s invalidated
com.apple.MediaRemoteUI.connectionQueue
[ClientConnectionManager] init
MediaRemoteUI.Client
BSServiceConnectionListenerDelegate
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
MRUIServerProtocol
MRUIClientProtocol
_TtC13MediaRemoteUI12SecureWindow
com.apple.amp.mediaremote
_TtC13MediaRemoteUI21LockScreenCoordinator
shared
T@"_TtC13MediaRemoteUI21LockScreenCoordinator",N,R
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
backgroundContentAssertion
artworkCatalogTimer
expandedArtworkFrame
wallpaperService
platterContainer
backgroundContainer
artwork
prefersExpandedState
T@"<_TtP13MediaRemoteUI16ArtworkContainer_>",N,&,VplatterContainer
T@"<_TtP13MediaRemoteUI16ArtworkContainer_>",N,&,VbackgroundContainer
T@"MRUArtwork",N,&,Vartwork
canBeExpanded
TB,N,R
v32@0:8@16@24
v12@?0B8
v40@?0{CGRect={CGPoint=dd}{CGSize=dd}}8
artworkView
MRUNowPlayingControllerObserver
B24@0:8@16
v36@0:8@16@24B32
v40@0:8@16@24q32
B24@0:8@"MRUNowPlayingController"16
v40@0:8@"MRUNowPlayingController"16@"MRUEndpointController"24@"MPAVEndpointRoute"32
v36@0:8@"MRUNowPlayingController"16@"MRUTVRemoteController"24B32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"NSString"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUArtwork"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUNowPlayingInfo"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUTimeControls"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUTransportControls"32
v40@0:8@"MRUNowPlayingController"16@"MRUMediaSuggestionsController"24@"NSArray"32
v40@0:8@"MRUNowPlayingController"16@"MRUNowPlayingQueueHandoffCoordinator"24q32
v32@0:8@"MRUNowPlayingController"16@"MRUTransportControlItem"24
#16@0:8
@24@0:8:16
Q16@0:8
CSContentCutoutBoundsCalculator
Class getCSContentCutoutBoundsCalculatorClass(void)_block_invoke
MediaRemoteUI-Bridging-Header.h
Unable to find class %s
void *CoverSheetLibrary(void)
_TtC13MediaRemoteUI11AppDelegate
server
UIApplicationDelegate
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
window
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
NSObject
_TtC13MediaRemoteUI4Lock
unfairLock
_TtC13MediaRemoteUI21BackdropSceneDelegate
BackdropSceneDidEnterBackground.
BackdropSceneWillEnterForeground.
_TtC13MediaRemoteUI10MainServer
@16@0:8
clientConnectionManager
[MainServer] init
MRUILockScreenAssertion
MRUIApplication
MRUIBacklight
MRUIBackgroundContentScene
@16@0:8
v16@0:8
B16@0:8
v24@0:8@16
@"SBSLockScreenBackgroundContentAssertion"
B24@0:8@16
d16@0:8
MediaRemoteUI
CoverSheetBackgroundView
DisplayLinkTarget
os_unfair_lock_s
CGRect
CAFrameRateRange
CGSize
CGPoint
MediaRemoteUI
CoverSheetBackgroundViewController
?MediaRemoteUI
CoverSheetPlatterViewController
MediaRemoteUI
ActivitySceneDelegate
Client
ClientConnectionManager
SecureWindow
333333
?MediaRemoteUI
LockScreenCoordinator
AppDelegate
Lock
BackdropSceneDelegate
MainServer
So6UIViewC
So7MTKViewC
So14MRUArtworkViewC
So8MSVTimerCSg
So13CADisplayLinkCSg
So8NSObjectC
SgXw
yypG
ypSg
So16UIViewControllerC
So27MRUCoverSheetViewControllerC
So8UIWindowCSg
So35MRUActivityNowPlayingViewControllerCSg
So34MRUActivityMirroringViewControllerCSg
SgXw
So20MRUIContextProviding_p
$s13MediaRemoteUI24ClientConnectionObserverP
So19BSServiceConnectionC
So17OS_dispatch_queueC
So27BSServiceConnectionListenerCSg
So11NSHashTableCy13MediaRemoteUI24ClientConnectionObserver_pG
So18BSServiceInterfaceC
13MediaRemoteUI24ClientConnectionObserver_p
So38BSServiceConnectionListenerConfiguring_pIgg_
So30BSServiceConnectionConfiguring_pIgg_
Xoz_Xx
Xoz_Xx
So8UIWindowC
$s13MediaRemoteUI16ArtworkContainerP
So23MRUILockScreenAssertionCSg
So19SBSWallpaperServiceC
13MediaRemoteUI16ArtworkContainer_pSg
So10MRUArtworkCSg
Ieg_Sg
SgXw
SgXwz_Xx
So11UIResponderC
backdropRenderer
visualizerView
artworkView
artworkTransitionTimer
displayLink
isOnScreen
isDimmed
artworkVisible
preferredFrameRateRange
preferredTransitionFrameRateRange
callback
minimum
maximum
__preferred
origin
size
_os_unfair_lock_opaque
width
height
window
nowPlayingElementProvider
mirroringElementProvider
nowPlayingScene
screenMirroringScene
coversheetScene
hasQuickControlsAssertion
hasLockScreenControlsAssertion
hasScreenMirroringQuickControlsAssertion
connection
identifier
lock
connectionQueue
listener
observerTable
internalClients
interface
backgroundContentAssertion
artworkCatalogTimer
expandedArtworkFrame
wallpaperService
platterContainer
backgroundContainer
artwork
prefersExpandedState
server
unfairLock
window
clientConnectionManager
softlink:r:path:/System/Library/PrivateFrameworks/CoverSheet.framework/CoverSheet
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.MediaRemoteUI</string>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-identifying-output-device-details</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.mediaremote.ui-control</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.audio.interprocess-tap</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.sessionkit.custom-platter-target</key>
<true/>
<key>com.apple.private.sessionkit.permitMultipleProcessInputs</key>
<true/>
<key>com.apple.private.sessionkit.sessionRequest</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.runningboard.assertions.angeltarget</key>
<true/>
<key>com.apple.runningboard.launchprocess</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/</string>
<string>/Applications/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.sessionservices</string>
<string>com.apple.tvremotecore.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.CoreDuet</string>
<string>com.apple.lockscreen.shared</string>
<string>com.apple.duetexpertd</string>
<string>com.apple.spotlightui</string>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaremote</string>
<string>com.apple.mediaremoted</string>
<string>com.apple.airplay</string>
<string>com.apple.persistentconnection</string>
<string>com.apple.avfoundation</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.avfaudio</string>
<string>com.apple.ids</string>
<string>com.apple.conference</string>
<string>com.apple.facetime.bag</string>
<string>com.apple.da</string>
<string>com.apple.mediaremoteui</string>
</array>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.hardware-button-service.background-event-consumption</key>
<true/>
<key>com.apple.springboard.hardware-button-service.event-consumption</key>
<true/>
<key>com.apple.springboard.lockScreenContentAssertion</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
</dict>
</plist>
MediaRemoteUI
CoverSheetBackgroundView
DisplayLinkTarget
os_unfair_lock_s
CGRect
CAFrameRateRange
CGSize
CGPoint
MediaRemoteUI
CoverSheetBackgroundViewController
?MediaRemoteUI
CoverSheetPlatterViewController
MediaRemoteUI
ActivitySceneDelegate
Client
ClientConnectionManager
SecureWindow
MediaRemoteUI
LockScreenCoordinator
AppDelegate
Lock
BackdropSceneDelegate
MainServer
currentHandler
setIdleTimerDisabled:
isEqualToString:
handleFailureInFunction:file:lineNumber:description:
mr_shouldDim
_defaultAnimationDuration
domain
location
acquireBackgroundContentAssertionWithDefinition:errorHandler:
center
code
stringWithUTF8String:
init
dealloc
acquire
delayAcquire
invalidate
isValid
backgroundContentAssertion
setBackgroundContentAssertion:
.cxx_destruct
_valid
_backgroundContentAssertion
T@"SBSLockScreenBackgroundContentAssertion",&,N,V_backgroundContentAssertion
valid
TB,R,N,GisValid,V_valid
_supportsAlwaysOnDisplay
shouldUseTimelinesForTraitCollection:
defaultAnimationDuration
handleTouchAction:
initWithFrame:
initWithCoder:
displayLinkFiredWithDisplayLink:
artworkView:didChangeArtworkImage:
setAlpha:
setTransform:
setPreferredFrameRateRange:
initWithInterval:repeats:queue:block:
draw
layer
removeBackBuffers
currentSettings
lockScreenAPLRatio
artworkImageView
animateWithDuration:animations:
setValue:forKeyPath:
filters
setFilters:
initWithType:
setValue:forKey:
setName:
valueForKeyPath:
setPaused:
discardContents
bounds
lockScreenAPLTarget
initWithFrame:device:
setAutoresizingMask:
setAllowsDisplayCompositing:
setDelegate:
setStyle:
setShowPlaceholder:
addSubview:
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
addObserver:
removeFromRunLoop:forMode:
clientConnected:
clientDisconnected:
layout
artworkView
setArtworkVisible:
invalidateAllTimelinesForReason:
contextForActivityIdentifier:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
_canShowWhileLocked
loadView
viewDidLoad
viewWillAppear:
viewDidDisappear:
traitCollectionDidChange:
initWithNibName:bundle:
view
traitCollection
setView:
nowPlayingViewControllerDidSelectArtworkView:
nowPlayingViewController
showArtworkView
setShowArtworkView:
layoutIfNeeded
nowPlayingViewController:didChangeSizeWithAnimations:completion:
nowPlayingViewController:applyLayout:
nowPlayingViewController:showViewController:
window
setWindow:
scene:willConnectToSession:options:
sceneDidDisconnect:
sceneWillEnterForeground:
sceneDidEnterBackground:
coverSheetViewController:didUpdatePreferredContentSize:
rootViewController
beginAppearanceTransition:animated:
endAppearanceTransition
serverController
SBUI_isHostedBySystemAperture
setSystemApertureElementViewControllerProvider:
supportSessionBasedLockScreenPlatter
initWithWindowScene:
setRootViewController:
makeKeyAndVisible
controller
addSwiftObserver:
metadataController
artwork
windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:
windowScene:performActionForShortcutItem:completionHandler:
windowScene:userDidAcceptCloudKitShareWithMetadata:
coverSheetViewController:willChangeToLayout:animations:completion:
coverSheetViewController:didReceiveInteractionEvent:
sceneDidBecomeActive:
sceneWillResignActive:
scene:openURLContexts:
stateRestorationActivityForScene:
scene:restoreInteractionStateWithUserActivity:
scene:willContinueUserActivityWithType:
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
listener:didReceiveConnection:withContext:
allObjects
listenerWithConfigurator:
activate
setDomain:
setService:
remoteProcess
auditToken
realToken
configureConnection:
setTargetQueue:
userInitiated
setServiceQuality:
setInterface:
setInterfaceTarget:
setInvalidationHandler:
weakObjectsHashTable
interfaceWithIdentifier:
protocolForProtocol:
setServer:
setClient:
setClientMessagingExpectation:
copy
_isSecure
initWithContentRect:
shared
platterContainer
setPlatterContainer:
backgroundContainer
setBackgroundContainer:
setArtwork:
canBeExpanded
updateExpandedArtworkFrameFor:
handleBackgroundTapAt:
handlePlatterTap
nowPlayingController:metadataController:didChangeArtwork:
setFrame:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
catalog
sharedApplication
activeInterfaceOrientation
supportLockScreenBackground
timerWithInterval:repeats:block:
frame
contentCutoutBoundsForInterfaceOrientation:
fetchMaximalLockScreenContentCutoutBoundsForOrientation:completionHandler:
mainScreen
nowPlayingControllerShouldAutomaticallyUpdateResponse:
nowPlayingController:endpointController:didChangeRoute:
nowPlayingController:tvRemoteController:didChangeShowTVRemote:
nowPlayingController:metadataController:didChangeBundleID:
nowPlayingController:metadataController:didChangeNowPlayingInfo:
nowPlayingController:metadataController:didChangeTimeControls:
nowPlayingController:metadataController:didChangeTransportControls:
nowPlayingController:mediaSuggestionsController:didChangeMediaSuggestions:
nowPlayingController:queueHandoffCoordinator:didChangeState:
nowPlayingController:didChangeQuickControlItem:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
Failed to acquire assertion: %@
v16@?0@"NSError"8
_TtC13MediaRemoteUI24CoverSheetBackgroundView
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
backdropRenderer
visualizerView
artworkTransitionTimer
displayLink
isOnScreen
isDimmed
artworkVisible
preferredFrameRateRange
preferredTransitionFrameRateRange
_TtCC13MediaRemoteUI24CoverSheetBackgroundView17DisplayLinkTarget
v24@0:8@16
callback
v8@?0
MediaRemoteUI.DisplayLinkTarget
init()
filters.MRCAFilterNameAPL.inputScale
MRCAFilterNameAPL
filters.MRCAFilterNameAPL
MRUArtworkViewObserver
v32@0:8@"MRUArtworkView"16@"UIImage"24
_TtP13MediaRemoteUI24ClientConnectionObserver_
v24@0:8@"_TtC13MediaRemoteUI6Client"16
_TtP13MediaRemoteUI16ArtworkContainer_
q16@0:8
layout
T@"MRUArtworkView",N,R
@"MRUArtworkView"16@0:8
v24@0:8@"NSString"16
MRUIContextProviding
@"NSString"24@0:8@"NSString"16
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
_TtC13MediaRemoteUI34CoverSheetBackgroundViewController
B16@0:8
v16@0:8
@32@0:8@16@24
MediaRemoteUI/CoverSheetBackgroundViewController.swift
Fatal error
_TtC13MediaRemoteUI31CoverSheetPlatterViewController
MediaRemoteUI1
v20@0:8B16
MRUNowPlayingViewControllerDelegate
v40@0:8@16@?24@?32
v32@0:8@16q24
v40@0:8@"MRUNowPlayingViewController"16@?<v@?>24@?<v@?>32
v32@0:8@"MRUNowPlayingViewController"16q24
v32@0:8@"MRUNowPlayingViewController"16@"UIViewController"24
B24@0:8@"MRUNowPlayingViewController"16
_TtC13MediaRemoteUI21ActivitySceneDelegate
v40@0:8@16@24@32
nowPlayingElementProvider
mirroringElementProvider
nowPlayingScene
screenMirroringScene
coversheetScene
T@"UIWindow",N,&,Vwindow
v40@0:8@16{CGSize=dd}24
CoverSheetSceneDidEnterBackground.
CoverSheetSceneWillEnterForeground.
Did not receive activity scene with identifier.
Configuring scene for identifier: %{public}@, context: %{public}@.
UIWindowSceneDelegate
v48@0:8@16@24q32@40
v40@0:8@16@24@?32
T@"UIWindow",N,&
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v48@0:8@"UIWindowScene"16@"<UICoordinateSpace>"24q32@"UITraitCollection"40
v40@0:8@"UIWindowScene"16@"UIApplicationShortcutItem"24@?<v@?B>32
v32@0:8@"UIWindowScene"16@"CKShareMetadata"24
MRUCoverSheetViewControllerDelegate
v48@0:8@16q24@?32@?40
v40@0:8@"MRUCoverSheetViewController"16{CGSize=dd}24
v48@0:8@"MRUCoverSheetViewController"16q24@?<v@?>32@?<v@?>40
v32@0:8@"MRUCoverSheetViewController"16@"UIGestureRecognizer"24
UISceneDelegate
@24@0:8@16
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSUserActivity"24
v32@0:8@"UIScene"16@"NSString"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
@32@0:8:16@24
superclass
description
_TtC13MediaRemoteUI6Client
hasQuickControlsAssertion
hasLockScreenControlsAssertion
hasScreenMirroringQuickControlsAssertion
connection
identifier
Tq,N,R
_TtC13MediaRemoteUI23ClientConnectionManager
lock
connectionQueue
listener
observerTable
internalClients
interface
[ClientConnectionManager] removing client %{public}s
Down-casted Array element failed to match the target type
Expected 
ClientConnectionObserver
NSArray element failed to match the Swift Array Element type
Expected 
[ClientConnectionManager] adding client %{public}s
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
mediaremoteui-service
com.apple.mediaremoteui.ui-service
[ClientConnectionManager] rejecting connection due to missing audit token
com.apple.mediaremoted
[ClientConnectionManager] rejecting connection from unauthorized process %s
[ClientConnectionManager] accepting connection
v16@?0@"<BSServiceConnectionConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
[ClientConnectionManager] client %{public}s invalidated
com.apple.MediaRemoteUI.connectionQueue
[ClientConnectionManager] init
MediaRemoteUI.Client
BSServiceConnectionListenerDelegate
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
MRUIServerProtocol
MRUIClientProtocol
_TtC13MediaRemoteUI12SecureWindow
com.apple.amp.mediaremote
_TtC13MediaRemoteUI21LockScreenCoordinator
shared
T@"_TtC13MediaRemoteUI21LockScreenCoordinator",N,R
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
backgroundContentAssertion
artworkCatalogTimer
expandedArtworkFrame
wallpaperService
platterContainer
backgroundContainer
artwork
prefersExpandedState
T@"<_TtP13MediaRemoteUI16ArtworkContainer_>",N,&,VplatterContainer
T@"<_TtP13MediaRemoteUI16ArtworkContainer_>",N,&,VbackgroundContainer
T@"MRUArtwork",N,&,Vartwork
canBeExpanded
TB,N,R
v32@0:8@16@24
v12@?0B8
v40@?0{CGRect={CGPoint=dd}{CGSize=dd}}8
artworkView
MRUNowPlayingControllerObserver
B24@0:8@16
v36@0:8@16@24B32
v40@0:8@16@24q32
B24@0:8@"MRUNowPlayingController"16
v40@0:8@"MRUNowPlayingController"16@"MRUEndpointController"24@"MPAVEndpointRoute"32
v36@0:8@"MRUNowPlayingController"16@"MRUTVRemoteController"24B32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"NSString"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUArtwork"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUNowPlayingInfo"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUTimeControls"32
v40@0:8@"MRUNowPlayingController"16@"MRUMetadataController"24@"MRUTransportControls"32
v40@0:8@"MRUNowPlayingController"16@"MRUMediaSuggestionsController"24@"NSArray"32
v40@0:8@"MRUNowPlayingController"16@"MRUNowPlayingQueueHandoffCoordinator"24q32
v32@0:8@"MRUNowPlayingController"16@"MRUTransportControlItem"24
#16@0:8
@24@0:8:16
Q16@0:8
CSContentCutoutBoundsCalculator
Class getCSContentCutoutBoundsCalculatorClass(void)_block_invoke
MediaRemoteUI-Bridging-Header.h
Unable to find class %s
void *CoverSheetLibrary(void)
_TtC13MediaRemoteUI11AppDelegate
server
UIApplicationDelegate
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
window
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
NSObject
_TtC13MediaRemoteUI4Lock
unfairLock
_TtC13MediaRemoteUI21BackdropSceneDelegate
BackdropSceneDidEnterBackground.
BackdropSceneWillEnterForeground.
_TtC13MediaRemoteUI10MainServer
@16@0:8
clientConnectionManager
[MainServer] init
MRUILockScreenAssertion
MRUIApplication
MRUIBacklight
MRUIBackgroundContentScene
@16@0:8
v16@0:8
B16@0:8
v24@0:8@16
@"SBSLockScreenBackgroundContentAssertion"
B24@0:8@16
d16@0:8
So6UIViewC
So7MTKViewC
So14MRUArtworkViewC
So8MSVTimerCSg
So13CADisplayLinkCSg
So8NSObjectC
SgXw
yypG
ypSg
So16UIViewControllerC
So27MRUCoverSheetViewControllerC
So8UIWindowCSg
So35MRUActivityNowPlayingViewControllerCSg
So34MRUActivityMirroringViewControllerCSg
SgXw
So20MRUIContextProviding_p
$s13MediaRemoteUI24ClientConnectionObserverP
So19BSServiceConnectionC
So17OS_dispatch_queueC
So27BSServiceConnectionListenerCSg
So11NSHashTableCy13MediaRemoteUI24ClientConnectionObserver_pG
So18BSServiceInterfaceC
13MediaRemoteUI24ClientConnectionObserver_p
So38BSServiceConnectionListenerConfiguring_pIgg_
So30BSServiceConnectionConfiguring_pIgg_
Xoz_Xx
Xoz_Xx
So8UIWindowC
$s13MediaRemoteUI16ArtworkContainerP
So23MRUILockScreenAssertionCSg
So19SBSWallpaperServiceC
13MediaRemoteUI16ArtworkContainer_pSg
So10MRUArtworkCSg
Ieg_Sg
SgXw
SgXwz_Xx
So11UIResponderC
backdropRenderer
visualizerView
artworkView
artworkTransitionTimer
displayLink
isOnScreen
isDimmed
artworkVisible
preferredFrameRateRange
preferredTransitionFrameRateRange
callback
minimum
maximum
__preferred
origin
size
_os_unfair_lock_opaque
width
height
window
nowPlayingElementProvider
mirroringElementProvider
nowPlayingScene
screenMirroringScene
coversheetScene
hasQuickControlsAssertion
hasLockScreenControlsAssertion
hasScreenMirroringQuickControlsAssertion
connection
identifier
lock
connectionQueue
listener
observerTable
internalClients
interface
backgroundContentAssertion
artworkCatalogTimer
expandedArtworkFrame
wallpaperService
platterContainer
backgroundContainer
artwork
prefersExpandedState
server
unfairLock
window
clientConnectionManager
softlink:r:path:/System/Library/PrivateFrameworks/CoverSheet.framework/CoverSheet
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.MediaRemoteUI</string>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-identifying-output-device-details</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.homekit.private-spi-access</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.mediaremote.allow</key>
<array>
<string>TVPairing</string>
</array>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.mediaremote.ui-control</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.audio.interprocess-tap</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.sessionkit.custom-platter-target</key>
<true/>
<key>com.apple.private.sessionkit.permitMultipleProcessInputs</key>
<true/>
<key>com.apple.private.sessionkit.sessionRequest</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.runningboard.assertions.angeltarget</key>
<true/>
<key>com.apple.runningboard.launchprocess</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/</string>
<string>/Applications/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coremedia.endpointpicker.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.sessionservices</string>
<string>com.apple.tvremotecore.xpc</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.CoreDuet</string>
<string>com.apple.lockscreen.shared</string>
<string>com.apple.duetexpertd</string>
<string>com.apple.spotlightui</string>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaremote</string>
<string>com.apple.mediaremoted</string>
<string>com.apple.airplay</string>
<string>com.apple.persistentconnection</string>
<string>com.apple.avfoundation</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.avfaudio</string>
<string>com.apple.ids</string>
<string>com.apple.conference</string>
<string>com.apple.facetime.bag</string>
<string>com.apple.da</string>
<string>com.apple.mediaremoteui</string>
</array>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.hardware-button-service.background-event-consumption</key>
<true/>
<key>com.apple.springboard.hardware-button-service.event-consumption</key>
<true/>
<key>com.apple.springboard.lockScreenContentAssertion</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.stark.activateBackgroundProvider</key>
<true/>
</dict>
</plist>
