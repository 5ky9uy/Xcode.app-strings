__AVPlayerAccessibility_super
SafeCategory
AVPlayerAccessibility
AXAVFoundationGlue
AXAVFoundationMediaDescriptionManager
AVPlayer
_advanceCurrentItemAccordingToFigPlaybackItem:
^{OpaqueFigPlaybackItem=}
actionAtItemEnd
currentItem
AXBeganObservingKey
v8@?0
B16@?0@"AXValidationManager"8
AVFoundation AX
AVFoundation
v16@?0@"AXValidationManager"8
AVPlayerAccessibility
Accessibility
AXAVFoundationMediaDescriptionManager
avkit-accessibility
legibility-%p
v24@?0@"AXMVisionResult"8@"NSError"16
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:hasInstanceMethod:withFullSignature:
_advanceCurrentItemAccordingToFigPlaybackItem:
init
_accessibilityAsyncObserveAVPlayerIfNeeded
willChangeValueForKey:
isEqualToString:
sharedManager
isVoiceOverInTheTripleClickMenu
_accessibilityBoolValueForKey:
beginObservingPlayer:
_accessibilitySetBoolValue:forKey:
_accessibilityPerformValidations:
sharedInstance
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
accessibilityInitializeBundle
bundleForClass:
localizedStringForKey:value:table:
initWithIdentifier:
strongToWeakObjectsMapTable
stringWithFormat:
setObject:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
ax_nonRedundantDescription
addResultHandler:
addSourceNode:
updateEngineConfiguration:
addObserver:forKeyPath:options:context:
_queue_itemNodeForPlayer:
removeSourceNode:
removeObjectForKey:
removeObserver:forKeyPath:context:
keyEnumerator
countByEnumeratingWithState:objects:count:
isTriggeringLegibilityEvents
objectForKey:
objectForKeyedSubscript:
boolValue
endAutoTriggerOfLegibilityEvents
_shouldAttachLegibilityOutputToItem:
autoTriggerLegibilityEventsWithAVPlayerItem:
observeValueForKeyPath:ofObject:change:context:
sharedManagerIfExists
endObservingPlayer:
isTappingMediaDescriptions
.cxx_destruct
_engine
_queue
_queue_nodeToPlayerMap
TB,R,N
@16@0:8
#16@0:8
v24@0:8@16
v24@0:8^{OpaqueFigPlaybackItem=}16
v16@0:8
B24@0:8@16
B16@0:8
@24@0:8@16
v48@0:8@16@24@32^v40
@"AXMVisionEngine"
@"NSObject<OS_dispatch_queue>"
@"NSMapTable"
handling engine legibility result: %@
Failed to archive data: %@
Will begin observing player: %@
Will end observing player: %@
Did observe change on. path:'%@' object:%@ change:%@
No legibility node found for player: %@
Will attach legibility node to item: %@
Will NOT attach legibility node to item: %@
__AVPlayerAccessibility_super
SafeCategory
AVPlayerAccessibility
AXAVFoundationGlue
AXAVFoundationMediaDescriptionManager
AVPlayer
_advanceCurrentItemAccordingToFigPlaybackItem:
^{OpaqueFigPlaybackItem=}
actionAtItemEnd
currentItem
AXBeganObservingKey
v8@?0
B16@?0@"AXValidationManager"8
AVFoundation AX
AVFoundation
v16@?0@"AXValidationManager"8
AVPlayerAccessibility
Accessibility
AXAVFoundationMediaDescriptionManager
avkit-accessibility
legibility-%p
v24@?0@"AXMVisionResult"8@"NSError"16
removeSourceNode:
addSourceNode:
bundleForClass:
archivedDataWithRootObject:requiringSecureCoding:error:
endAutoTriggerOfLegibilityEvents
addObserver:forKeyPath:options:context:
initWithIdentifier:
setValidationTargetName:
installSafeCategory:canInteractWithTargetClass:
boolValue
removeObjectForKey:
setDebugBuild:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
setObject:forKey:
updateEngineConfiguration:
sharedInstance
autoTriggerLegibilityEventsWithAVPlayerItem:
objectForKey:
isEqualToString:
ax_nonRedundantDescription
_accessibilityBoolValueForKey:
isTriggeringLegibilityEvents
_accessibilitySetBoolValue:forKey:
addResultHandler:
countByEnumeratingWithState:objects:count:
setOverrideProcessName:
stringWithFormat:
strongToWeakObjectsMapTable
keyEnumerator
removeObserver:forKeyPath:context:
localizedStringForKey:value:table:
validateClass:hasInstanceMethod:withFullSignature:
objectForKeyedSubscript:
safeCategoryTargetClassName
safeCategoryBaseClass
_advanceCurrentItemAccordingToFigPlaybackItem:
init
willChangeValueForKey:
_accessibilityPerformValidations:
_accessibilityAsyncObserveAVPlayerIfNeeded
accessibilityInitializeBundle
observeValueForKeyPath:ofObject:change:context:
sharedManagerIfExists
sharedManager
beginObservingPlayer:
endObservingPlayer:
isTappingMediaDescriptions
_queue_itemNodeForPlayer:
isVoiceOverInTheTripleClickMenu
_shouldAttachLegibilityOutputToItem:
.cxx_destruct
_engine
_queue
_queue_nodeToPlayerMap
TB,R,N
@16@0:8
#16@0:8
v24@0:8@16
v24@0:8^{OpaqueFigPlaybackItem=}16
v16@0:8
B24@0:8@16
B16@0:8
@24@0:8@16
v48@0:8@16@24@32^v40
@"AXMVisionEngine"
@"NSObject<OS_dispatch_queue>"
@"NSMapTable"
handling engine legibility result: %@
Failed to archive data: %@
Will begin observing player: %@
Will end observing player: %@
Did observe change on. path:'%@' object:%@ change:%@
No legibility node found for player: %@
Will attach legibility node to item: %@
Will NOT attach legibility node to item: %@
