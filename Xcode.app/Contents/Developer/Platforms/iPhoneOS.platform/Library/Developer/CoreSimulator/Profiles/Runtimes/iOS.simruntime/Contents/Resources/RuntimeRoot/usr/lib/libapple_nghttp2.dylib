trol-allow-origiaccess-control-a-securit
strict-transportcontent-dispositio
proxy-authorizatif-unmodified-sinc
proxy-authenticat
transfer-encodinif-modified-sinc
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
http/1.1
nghttp2_map.c
map_resize
nghttp2_stream_reschedule
nghttp2_stream.c
stream->queued
nghttp2_stream_attach_item
(stream->flags & NGHTTP2_STREAM_FLAG_DEFERRED_ALL) == 0
nghttp2_stream_defer_item
stream->item
nghttp2_stream_resume_deferred_item
nghttp2_stream_dep_remove
stream->dep_prev
nghttp2_stream_dep_remove_subtree
insert_link_dep
stream->sib_prev == NULL
stream_obq_remove
prev
unlink_dep
nghttp2_frame_pack_headers
nghttp2_frame.c
nghttp2_frame_pack_priority
nghttp2_buf_avail(buf) >= NGHTTP2_PRIORITY_SPECLEN
nghttp2_frame_pack_rst_stream
nghttp2_buf_avail(buf) >= 4
nghttp2_frame_pack_settings
nghttp2_frame_pack_push_promise
nghttp2_frame_pack_ping
nghttp2_buf_avail(buf) >= 8
nghttp2_frame_pack_goaway
nghttp2_frame_pack_window_update
nghttp2_frame_pack_altsvc
nghttp2_buf_avail(buf) >= 2 + altsvc->origin_len + altsvc->field_value_len
nghttp2_frame_pack_origin
nghttp2_buf_len(buf) == NGHTTP2_FRAME_HDLEN + frame->hd.length
nghttp2_frame_pack_priority_update
nghttp2_buf_avail(buf) >= 4 + priority_update->field_value_len
nghttp2_frame_unpack_priority_update_payload
payloadlen >= 4
nghttp2_frame_add_pad
nghttp2_buf_avail(buf) >= padlen - 1
nghttp2_hd_table_get
nghttp2_hd.c
INDEX_RANGE_VALID(context, idx)
hd_ringbuf_pop_back
ringbuf->len > 0
hd_ringbuf_get
idx < ringbuf->len
:authority
:method
POST
:path
/index.html
:scheme
:status
accept-charset
accept-encoding
gzip, deflate
accept-language
accept-ranges
accept
access-control-allow-origin
allow
authorization
cache-control
content-disposition
content-encoding
content-language
content-length
content-location
content-range
content-type
cookie
date
etag
expect
expires
from
host
if-match
if-modified-since
if-none-match
if-range
if-unmodified-since
last-modified
link
location
max-forwards
proxy-authenticate
proxy-authorization
range
referer
refresh
retry-after
server
set-cookie
strict-transport-security
transfer-encoding
user-agent
vary
www-authenticate
nghttp2_pq_remove
nghttp2_pq.c
pq->q[item->index] == item
nghttp2_outbound_item_free
nghttp2_outbound_item.c
nghttp2_http.c
http
https
trailers
sf_parse_integer_or_decimal
nghttp2_rcbuf_decref
nghttp2_rcbuf.c
rcbuf->ref > 0
1.51.0
nghttp2_submit_origin
nghttp2_submit.c
(size_t)(p - (uint8_t *)ov_copy) == nov * sizeof(nghttp2_origin_entry) + len + nov
nghttp2_session_reprioritize_stream
nghttp2_session.c
(!session->server && session->pending_no_rfc7540_priorities != 1) || (session->server && !session_no_rfc7540_pri_no_fallback(session))
pri_spec->stream_id != stream->stream_id
dep_stream
nghttp2_session_add_rst_stream
headers_frame->hd.type == NGHTTP2_HEADERS
nghttp2_session_open_stream
stream->state == NGHTTP2_STREAM_IDLE
(stream->flags & NGHTTP2_STREAM_FLAG_NO_RFC7540_PRIORITIES) || nghttp2_stream_in_dep_tree(stream)
!(stream->flags & NGHTTP2_STREAM_FLAG_NO_RFC7540_PRIORITIES)
nghttp2_session_adjust_closed_stream
head_stream
nghttp2_session_adjust_idle_stream
head
nghttp2_session_mem_send
nghttp2_is_fatal(rv)
request HEADERS: stream_id == 0
request HEADERS: client received request
request HEADERS: invalid stream_id
HEADERS: stream closed
request HEADERS: max concurrent streams exceeded
request HEADERS: depend on itself
nghttp2_session_on_response_headers_received
stream->state == NGHTTP2_STREAM_OPENING && nghttp2_session_is_my_stream_id(session, frame->hd.stream_id)
nghttp2_session_on_push_response_headers_received
stream->state == NGHTTP2_STREAM_RESERVED
push response HEADERS: stream_id == 0
HEADERS: no HEADERS allowed from client in reserved state
push response HEADERS: max concurrent streams exceeded
HEADERS: stream_id == 0
nghttp2_session_on_priority_received
!session_no_rfc7540_pri_no_fallback(session)
PRIORITY: stream_id == 0
depend on itself
RST_STREAM: stream_id == 0
RST_STREAM: stream in idle
SETTINGS: stream_id != 0
SETTINGS: ACK and payload != 0
SETTINGS: unexpected ACK
SETTINGS: invalid SETTINGS_ENBLE_PUSH
SETTINGS: server attempted to enable push
SETTINGS: too large SETTINGS_INITIAL_WINDOW_SIZE
SETTINGS: invalid SETTINGS_MAX_FRAME_SIZE
SETTINGS: invalid SETTINGS_ENABLE_CONNECT_PROTOCOL
SETTINGS: server attempted to disable SETTINGS_ENABLE_CONNECT_PROTOCOL
SETTINGS: invalid SETTINGS_NO_RFC7540_PRIORITIES
SETTINGS: SETTINGS_NO_RFC7540_PRIORITIES cannot be changed
PUSH_PROMISE: stream_id == 0
PUSH_PROMISE: push disabled
PUSH_PROMISE: invalid stream_id
PUSH_PROMISE: invalid promised_stream_id
PUSH_PROMISE: stream in idle
PUSH_PROMISE: stream closed
PING: stream_id != 0
GOAWAY: stream_id != 0
GOAWAY: invalid last_stream_id
nghttp2_session_on_priority_update_received
session->server
PRIORITY_UPDATE: stream_id == 0
PRIORITY_UPDATE: prioritizing idle push is not allowed
PRIORITY_UPDATE: max concurrent streams exceeded
nghttp2_session_mem_recv
inlen == 0
PRI * HTTP/2.0
Remote peer returned unexpected data while we expected SETTINGS frame.  Perhaps, peer does not support HTTP/2 properly.
SETTINGS expected
too large frame size
DATA: insufficient padding space
HEADERS: insufficient padding space
SETTINGS: too many setting entries
PUSH_PROMISE: insufficient padding space
CONTINUATION: unexpected
PRIORITY_UPDATE is received from server
HEADERS: invalid padding
PUSH_PROMISE: invalid padding
iframe->state == NGHTTP2_IB_IGN_ALL
nghttp2_buf_avail(&iframe->lbuf) > 0
unexpected non-CONTINUATION frame or stream_id is invalid
DATA: invalid padding
nghttp2_session_recv
proclen == readlen
nghttp2_session_add_settings
nghttp2_session_pack_data
bufs->head == bufs->cur
&session->aob.framebufs == bufs
nghttp2_buf_avail(buf) >= datamax
nghttp2_session_set_stream_user_data
frame->hd.type == NGHTTP2_HEADERS
nghttp2_session_get_remote_settings
nghttp2_session_get_local_settings
nghttp2_session_upgrade
stream
nghttp2_session_upgrade2
session_ob_data_push
stream->flags & NGHTTP2_STREAM_FLAG_NO_RFC7540_PRIORITIES
stream->queued == 0
urgency < NGHTTP2_EXTPRI_URGENCY_LEVELS
session_ob_data_remove
stream->queued == 1
nghttp2_session_mem_send_internal
session_prep_frame
stream->item == item
session->remote_window_size > 0
session->last_sent_stream_id < frame->hd.stream_id
session->obq_flood_counter_ > 0
session->last_sent_stream_id + 2 <= frame->push_promise.promised_stream_id
session_pack_extension
session->callbacks.pack_extension_callback
buf->pos == buf->last
session_after_frame_sent1
rv == 0
find_stream_on_goaway_func
stream->closed_next == NULL
stream->closed_prev == NULL
WINDOW_UPDATE: window_size_increment == 0
WINDOW_UPDATE to idle stream
WINDOW_UPADATE to reserved stream
DATA: stream_id == 0
DATA: stream in idle
DATA: stream closed
DATA: stream in half-closed(remote)
DATA: stream not opened
DATA: stream in reserved
session_process_priority_frame
Ignoring received invalid HTTP header field: frame type: %u, stream: %d, name: [%.*s], value: [%.*s]
Invalid HTTP header field was received: frame type: %u, stream: %d, name: [%.*s], value: [%.*s]
session_after_header_block_received
!session->server
session_end_stream_headers_received
session_process_settings_frame
i < iframe->niv
session_sched_reschedule_stream
0 == rv
nghttp2_increase_local_window_size
nghttp2_helper.c
delta >= 0
Success
Invalid argument
Out of buffer space
Unsupported SPDY version
Operation would block
Protocol error
Invalid frame octets
Data transfer deferred
No more Stream ID available
Stream was already closed or invalid
Stream is closing
The transmission is not allowed for this stream
Stream ID is invalid
Invalid stream state
Another DATA frame has already been deferred
request HEADERS is not allowed
GOAWAY has already been sent
Invalid header block
Invalid state
The user callback function failed due to the temporal error
The length of the frame is invalid
Header compression/decompression error
Flow control error
Insufficient buffer size given to function
Callback was paused by the application
Too many inflight SETTINGS
Server push is disabled by peer
DATA or HEADERS frame has already been submitted for the stream
The current session is closing
Invalid HTTP header field was received
Violation in HTTP messaging rule
Stream was refused
Internal error
Cancel
When a local endpoint expects to receive SETTINGS frame, it receives an other type of frame
Out of memory
The user callback function failed
Received bad client magic byte string
Flooding was detected in this HTTP/2 session, and it must be closed
SETTINGS frame contained more than the maximum allowed entries
Unknown error code
NO_ERROR
PROTOCOL_ERROR
INTERNAL_ERROR
FLOW_CONTROL_ERROR
SETTINGS_TIMEOUT
STREAM_CLOSED
FRAME_SIZE_ERROR
REFUSED_STREAM
CANCEL
COMPRESSION_ERROR
CONNECT_ERROR
ENHANCE_YOUR_CALM
INADEQUATE_SECURITY
HTTP_1_1_REQUIRED
unknown
1NNNNNNNRNN
TNNNNc
HQiU`~
>N>[
"%(+.147:=@C
FILORUX[^adgjmpsvy|
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
http/1.1
nghttp2_map.c
map_resize
nghttp2_stream_reschedule
nghttp2_stream.c
stream->queued
nghttp2_stream_attach_item
(stream->flags & NGHTTP2_STREAM_FLAG_DEFERRED_ALL) == 0
nghttp2_stream_defer_item
stream->item
nghttp2_stream_resume_deferred_item
nghttp2_stream_dep_remove
stream->dep_prev
nghttp2_stream_dep_remove_subtree
insert_link_dep
stream->sib_prev == NULL
stream_obq_remove
prev
unlink_dep
nghttp2_frame_pack_headers
nghttp2_frame.c
nghttp2_frame_pack_priority
nghttp2_buf_avail(buf) >= NGHTTP2_PRIORITY_SPECLEN
nghttp2_frame_pack_rst_stream
nghttp2_buf_avail(buf) >= 4
nghttp2_frame_pack_settings
nghttp2_frame_pack_push_promise
nghttp2_frame_pack_ping
nghttp2_buf_avail(buf) >= 8
nghttp2_frame_pack_goaway
nghttp2_frame_pack_window_update
nghttp2_frame_pack_altsvc
nghttp2_buf_avail(buf) >= 2 + altsvc->origin_len + altsvc->field_value_len
nghttp2_frame_pack_origin
nghttp2_buf_len(buf) == NGHTTP2_FRAME_HDLEN + frame->hd.length
nghttp2_frame_pack_priority_update
nghttp2_buf_avail(buf) >= 4 + priority_update->field_value_len
nghttp2_frame_unpack_priority_update_payload
payloadlen >= 4
nghttp2_frame_add_pad
nghttp2_buf_avail(buf) >= padlen - 1
nghttp2_hd_table_get
nghttp2_hd.c
INDEX_RANGE_VALID(context, idx)
hd_ringbuf_pop_back
ringbuf->len > 0
hd_ringbuf_get
idx < ringbuf->len
:authority
:method
POST
:path
/index.html
:scheme
:status
accept-charset
accept-encoding
gzip, deflate
accept-language
accept-ranges
accept
access-control-allow-origin
allow
authorization
cache-control
content-disposition
content-encoding
content-language
content-length
content-location
content-range
content-type
cookie
date
etag
expect
expires
from
host
if-match
if-modified-since
if-none-match
if-range
if-unmodified-since
last-modified
link
location
max-forwards
proxy-authenticate
proxy-authorization
range
referer
refresh
retry-after
server
set-cookie
strict-transport-security
transfer-encoding
user-agent
vary
www-authenticate
nghttp2_pq_remove
nghttp2_pq.c
pq->q[item->index] == item
nghttp2_outbound_item_free
nghttp2_outbound_item.c
nghttp2_http.c
http
https
trailers
sf_parse_integer_or_decimal
nghttp2_rcbuf_decref
nghttp2_rcbuf.c
rcbuf->ref > 0
1.51.0
nghttp2_submit_origin
nghttp2_submit.c
(size_t)(p - (uint8_t *)ov_copy) == nov * sizeof(nghttp2_origin_entry) + len + nov
nghttp2_session_reprioritize_stream
nghttp2_session.c
(!session->server && session->pending_no_rfc7540_priorities != 1) || (session->server && !session_no_rfc7540_pri_no_fallback(session))
pri_spec->stream_id != stream->stream_id
dep_stream
nghttp2_session_add_rst_stream
headers_frame->hd.type == NGHTTP2_HEADERS
nghttp2_session_open_stream
stream->state == NGHTTP2_STREAM_IDLE
(stream->flags & NGHTTP2_STREAM_FLAG_NO_RFC7540_PRIORITIES) || nghttp2_stream_in_dep_tree(stream)
!(stream->flags & NGHTTP2_STREAM_FLAG_NO_RFC7540_PRIORITIES)
nghttp2_session_adjust_closed_stream
head_stream
nghttp2_session_adjust_idle_stream
head
nghttp2_session_mem_send
nghttp2_is_fatal(rv)
request HEADERS: stream_id == 0
request HEADERS: client received request
request HEADERS: invalid stream_id
HEADERS: stream closed
request HEADERS: max concurrent streams exceeded
request HEADERS: depend on itself
nghttp2_session_on_response_headers_received
stream->state == NGHTTP2_STREAM_OPENING && nghttp2_session_is_my_stream_id(session, frame->hd.stream_id)
nghttp2_session_on_push_response_headers_received
stream->state == NGHTTP2_STREAM_RESERVED
push response HEADERS: stream_id == 0
HEADERS: no HEADERS allowed from client in reserved state
push response HEADERS: max concurrent streams exceeded
HEADERS: stream_id == 0
nghttp2_session_on_priority_received
!session_no_rfc7540_pri_no_fallback(session)
PRIORITY: stream_id == 0
depend on itself
RST_STREAM: stream_id == 0
RST_STREAM: stream in idle
SETTINGS: stream_id != 0
SETTINGS: ACK and payload != 0
SETTINGS: unexpected ACK
SETTINGS: invalid SETTINGS_ENBLE_PUSH
SETTINGS: server attempted to enable push
SETTINGS: too large SETTINGS_INITIAL_WINDOW_SIZE
SETTINGS: invalid SETTINGS_MAX_FRAME_SIZE
SETTINGS: invalid SETTINGS_ENABLE_CONNECT_PROTOCOL
SETTINGS: server attempted to disable SETTINGS_ENABLE_CONNECT_PROTOCOL
SETTINGS: invalid SETTINGS_NO_RFC7540_PRIORITIES
SETTINGS: SETTINGS_NO_RFC7540_PRIORITIES cannot be changed
PUSH_PROMISE: stream_id == 0
PUSH_PROMISE: push disabled
PUSH_PROMISE: invalid stream_id
PUSH_PROMISE: invalid promised_stream_id
PUSH_PROMISE: stream in idle
PUSH_PROMISE: stream closed
PING: stream_id != 0
GOAWAY: stream_id != 0
GOAWAY: invalid last_stream_id
nghttp2_session_on_priority_update_received
session->server
PRIORITY_UPDATE: stream_id == 0
PRIORITY_UPDATE: prioritizing idle push is not allowed
PRIORITY_UPDATE: max concurrent streams exceeded
nghttp2_session_mem_recv
inlen == 0
PRI * HTTP/2.0
Remote peer returned unexpected data while we expected SETTINGS frame.  Perhaps, peer does not support HTTP/2 properly.
SETTINGS expected
too large frame size
DATA: insufficient padding space
HEADERS: insufficient padding space
SETTINGS: too many setting entries
PUSH_PROMISE: insufficient padding space
CONTINUATION: unexpected
PRIORITY_UPDATE is received from server
HEADERS: invalid padding
PUSH_PROMISE: invalid padding
iframe->state == NGHTTP2_IB_IGN_ALL
nghttp2_buf_avail(&iframe->lbuf) > 0
unexpected non-CONTINUATION frame or stream_id is invalid
DATA: invalid padding
nghttp2_session_recv
proclen == readlen
nghttp2_session_add_settings
nghttp2_session_pack_data
bufs->head == bufs->cur
&session->aob.framebufs == bufs
nghttp2_buf_avail(buf) >= datamax
nghttp2_session_set_stream_user_data
frame->hd.type == NGHTTP2_HEADERS
nghttp2_session_get_remote_settings
nghttp2_session_get_local_settings
nghttp2_session_upgrade
stream
nghttp2_session_upgrade2
session_ob_data_push
stream->flags & NGHTTP2_STREAM_FLAG_NO_RFC7540_PRIORITIES
stream->queued == 0
urgency < NGHTTP2_EXTPRI_URGENCY_LEVELS
session_ob_data_remove
stream->queued == 1
nghttp2_session_mem_send_internal
session_prep_frame
stream->item == item
session->remote_window_size > 0
session->last_sent_stream_id < frame->hd.stream_id
session->obq_flood_counter_ > 0
session->last_sent_stream_id + 2 <= frame->push_promise.promised_stream_id
session_pack_extension
session->callbacks.pack_extension_callback
buf->pos == buf->last
session_after_frame_sent1
rv == 0
find_stream_on_goaway_func
stream->closed_next == NULL
stream->closed_prev == NULL
WINDOW_UPDATE: window_size_increment == 0
WINDOW_UPDATE to idle stream
WINDOW_UPADATE to reserved stream
DATA: stream_id == 0
DATA: stream in idle
DATA: stream closed
DATA: stream in half-closed(remote)
DATA: stream not opened
DATA: stream in reserved
session_process_priority_frame
Ignoring received invalid HTTP header field: frame type: %u, stream: %d, name: [%.*s], value: [%.*s]
Invalid HTTP header field was received: frame type: %u, stream: %d, name: [%.*s], value: [%.*s]
session_after_header_block_received
!session->server
session_end_stream_headers_received
session_process_settings_frame
i < iframe->niv
session_sched_reschedule_stream
0 == rv
nghttp2_increase_local_window_size
nghttp2_helper.c
delta >= 0
Success
Invalid argument
Out of buffer space
Unsupported SPDY version
Operation would block
Protocol error
Invalid frame octets
Data transfer deferred
No more Stream ID available
Stream was already closed or invalid
Stream is closing
The transmission is not allowed for this stream
Stream ID is invalid
Invalid stream state
Another DATA frame has already been deferred
request HEADERS is not allowed
GOAWAY has already been sent
Invalid header block
Invalid state
The user callback function failed due to the temporal error
The length of the frame is invalid
Header compression/decompression error
Flow control error
Insufficient buffer size given to function
Callback was paused by the application
Too many inflight SETTINGS
Server push is disabled by peer
DATA or HEADERS frame has already been submitted for the stream
The current session is closing
Invalid HTTP header field was received
Violation in HTTP messaging rule
Stream was refused
Internal error
Cancel
When a local endpoint expects to receive SETTINGS frame, it receives an other type of frame
Out of memory
The user callback function failed
Received bad client magic byte string
Flooding was detected in this HTTP/2 session, and it must be closed
SETTINGS frame contained more than the maximum allowed entries
Unknown error code
NO_ERROR
PROTOCOL_ERROR
INTERNAL_ERROR
FLOW_CONTROL_ERROR
SETTINGS_TIMEOUT
STREAM_CLOSED
FRAME_SIZE_ERROR
REFUSED_STREAM
CANCEL
COMPRESSION_ERROR
CONNECT_ERROR
ENHANCE_YOUR_CALM
INADEQUATE_SECURITY
HTTP_1_1_REQUIRED
unknown
