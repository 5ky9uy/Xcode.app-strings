v8@?0
cps_clipUIServicesBundle
T@"NSBundle",R,N
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
adjustsFontForContentSizeCategory
TB,N
text
T@"NSString",C,N
numberOfLines
Tq,N
textAlignment
adjustsFontSizeToFitWidth
lineBreakMode
The provided animation already has a delegate.
CPSLabelWithPlacement does not support attributed text.
placeholderColor
T@"UIColor",&,N,V_placeholderColor
placeholderWidth
Td,N,V_placeholderWidth
reasonString
T@"NSString",N
-[CPSAppAttributionBanner initWithCoder:] is not available.
CPSAppAttributionBanner
preferredImageDescriptor
T@"ISImageDescriptor",R,N
title
subtitle
supertitle
icon
T@"UIImage",&,N
showsAppStoreButton
tapAction
T@?,C,N,V_tapAction
com.apple.ClipUIServices
ClipUIServices
-[CPSPermissionItemView init:] is not available.
-[CPSPermissionItemView initWithFrame:] is not available.
-[CPSPermissionItemView initWithCoder:] is not available.
TB,N,GisOn
hasBlurEffect
TB,N,V_hasBlurEffect
-initWithCoder: is not supported.
Powered by
appIcon
v16@?0@"ISImage"8
App Store
appstore
chevron.forward
v16@?0@"CPSAppClipRecord"8
v16@?0@"CPSWebClip"8
launchScreen
v16@?0@"NSTimer"8
v16@?0@"NSError"8
v12@?0B8
v20@?0@"UIImage"8B16
com.apple.AppStore
usesMockData
TB,N,V_usesMockData
appAttributionBannerPolicy
Tq,N,V_appAttributionBannerPolicy
webClipID
T@"NSString",C,N,V_webClipID
PRXFlowConfiguration
launchViewController
T@"CPSLaunchContentViewController",R,N,V_launchViewController
uiMock_openButtonEnabled
T@"NSNumber",&,N,SuiMock_setOpenButtonEnabled:,V_uiMock_openButtonEnabled
delegate
T@"<CPSLaunchViewControllerDelegate>",W,N,V_delegate
void *ProxCardKitLibrary(void)
CPSLaunchViewController.m
/System/Library/PrivateFrameworks/ProxCardKit.framework/ProxCardKit
/System/Library/PrivateFrameworks/ProxCardKit.framework/Contents/MacOS/ProxCardKit
animatesAlphaWhenHighlighted
TB,N,V_animatesAlphaWhenHighlighted
tapTargetSideMargin
Td,N,V_tapTargetSideMargin
optionsAction
T@?,C,N,V_optionsAction
notificationPermissionEnabled
TB,N,V_notificationPermissionEnabled
locationConfirmationPermissionEnabled
TB,N,V_locationConfirmationPermissionEnabled
Turn On
Turn Off
location.fill.appclip
wave.3.right
qrcode
Allow for All App Clips
Allow Once
actionHandler
T@?,C,N,V_actionHandler
bannerHidden
trackingBannerDismissGesture
bannerHasAccessibilityFocus
v16@?0B8B12
v16@?0@"NSNumber"8
TB,N,GisBannerHidden,V_bannerHidden
TB,N,V_bannerHasAccessibilityFocus
bannerView
T@"UIView",&,N,V_bannerView
TB,R,N,GisTrackingBannerDismissGesture
textStyleForScaling
T@"NSString",&,N,V_textStyleForScaling
-initWithNibName:bundle: is not supported.
card_alert
access_scan_complete
plist
disabledOpenButtonBackground
v16@?0@"CPSClipLaunchOptions"8
card
%@ is only available on %@.
%@ is not compatible with this %@.
v24@?0@"AMSAuthenticateResult"8@"NSError"16
Use Existing Apple ID
v16@?0@"UIAlertAction"8
Cancel
App Clip Unavailable
cardStyle
Tq,R,N
allowsPullToDismiss
TB,R,N
_heroImage
T@"UIImage",&,N,S_setHeroImage:
T@"<CPSLaunchContentViewControllerDelegate>",W,N,V_delegate
dismissalInProgress
TB,N,V_dismissalInProgress
UNNotificationSettingsCenter
Class getUNNotificationSettingsCenterClass()_block_invoke
CPSLaunchContentViewController.mm
Unable to find class %s
void *UserNotificationsSettingsLibrary()
/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings
/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/Contents/MacOS/UserNotificationsSettings
AMSAuthenticateOptions
Class getAMSAuthenticateOptionsClass()_block_invoke
void *AppleMediaServicesLibrary()
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
/System/Library/PrivateFrameworks/AppleMediaServices.framework/Contents/MacOS/AppleMediaServices
NSString *getCCUIAppLaunchOriginControlCenter()
CCUIAppLaunchOriginControlCenter
void *ControlCenterUIKitLibrary()
/System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
/System/Library/PrivateFrameworks/ControlCenterUIKit.framework/Contents/MacOS/ControlCenterUIKit
opacity
transform.rotation.z
transform.translation.y
transform.scale.xy
filters.luminanceCurveMap.inputAmount
filters.colorSaturate.inputAmount
conicGradientRotationAnimation
progressCompletionAnimation
heroImageScaleUpAnimation
labelContainerTranslationAnimation
poweredByLabelTranslationAnimation
Retry
-initWithCoder: is not implemented.
v16@?0@"UIImage"8
v20@?0@"CAAnimation"8B16
name
T@"NSString",C,N,V_name
provider
T@"NSString",C,N,V_provider
backgroundImage
T@"UIImage",R,N
poweredByThirdParty
TB,N,GisPoweredByThirdParty,V_poweredByThirdParty
loadingProgress
Tf,R,N,V_loadingProgress
NOTIFICATIONS
Allow for 8 Hours
LOCATION
Confirm Location
-[CPSPermissionsViewController init:] is not available.
-[CPSPermissionsViewController initWithNibName:bundle:] is not available.
-[CPSPermissionsViewController initWithCoder:] is not available.
Done
Options
T@"UIImage",&,N,V_backgroundImage
T@"<CPSPermissionsViewControllerDelegate>",W,N,V_delegate
cps_invocationCardPreferredContentSizeCategory
T@"NSString",R,N
highlightForwardingTarget
T@"<CPSHighlightable>",W,N,V_highlightForwardingTarget
insets
T{UIEdgeInsets=dddd},N,V_insets
CIAreaAverage
CIImage
Class getCIImageClass(void)_block_invoke
CPSUIImageExtras.m
void *CoreImageLibrary(void)
/System/Library/Frameworks/CoreImage.framework/CoreImage
/System/Library/Frameworks/CoreImage.framework/Contents/MacOS/CoreImage
CIVector
Class getCIVectorClass(void)_block_invoke
CIFilter
Class getCIFilterClass(void)_block_invoke
NSString *getkCIInputImageKey(void)
kCIInputImageKey
NSString *getkCIInputExtentKey(void)
kCIInputExtentKey
@333333
@ffffff
333333
^h@333333
?333333
333333
?ffffff
@333333
?333333
Could not load CPSAppAttributionBanner nib!
Displaying overlay for web clip %{private}@. Was over placeholder (%d), is over placeholder (%d), animated (%d).
Setting scene activation state to %ld from %ld, animated (%d).
No clip with ID %{public}@.
CPSClipOverlayViewController: Remote service did crash for proxy (%p)
Requested to present the loading view, but it is already presented.
Presenting the loading view.
Unable to prewarm clip again after attempting to reload: %{public}@
Requested to dismiss the loading view, but the loading view is not yet presented.
Starting to dismiss the loading view.
The loading view has been removed from the view hierarcy.
Invalidated banner dismiss timer.
Scheduling banner dismiss timer with for %.1fs.
Banner dismiss timer fired, hiding banner.
Updating the attribution banner
No App Store URL recorded for full application with ID %{private}@
Use -initWithAppClipBundleID:.
Use -setDisplayedOverPlaceholderForWebClipID:animated:.
Error creating system sound ID for audio URL: %@ status: (%d)
CPSLaunchContentViewController: Opening clip for proxy (%p)
CPSLaunchContentViewController: Did install placeholder for proxy (%p)
CPSLaunchContentViewController: Remote service did crash for proxy (%p)
CPSLaunchContentViewController: Finished loading for proxy (%p), error: %{public}@
Requested to finish the loading animation with current progress %f and animation count %ld.
Animating out the loading view.
The loading view has been animated out.
softlink:r:path:/System/Library/PrivateFrameworks/ProxCardKit.framework/ProxCardKit
softlink:r:path:/System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit
softlink:r:path:/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings
softlink:r:path:/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
softlink:r:path:/System/Library/Frameworks/CoreImage.framework/CoreImage
CPSAtom
ClipUIServicesExtras
CPSVibrantLabel
UIContentSizeCategoryAdjusting
NSObject
ClipServicesUIExtras
CPSCAAnimationBlockDelegate
CAAnimationDelegate
CPSLabelWithPlaceholder
CPSAppClipUnavailableView
CPSAppAttributionBanner
CPSPermissionItemView
CPSAppMetadataView
CPSCircularBackgroundView
CPSAppStoreButton
CPSClipOverlayViewController
CPSSessionProxyDelegate
CPSLaunchViewController
PRXFlowDelegate
CPSLaunchContentViewControllerDelegate
CPSButton
CPSPermissionView
UITextViewDelegate
UIScrollViewDelegate
CPSLocationConsentViewController
MKMapViewDelegate
CPSBannerContainerView
UIGestureRecognizerDelegate
CPSScaledImageView
CPSLaunchContentViewController
CPSPermissionsViewControllerDelegate
PRXCardContentProviding
ClipUIServiceExtras
CPSClipLoadingView
CPSPermissionsViewController
CPSHighlightForwardingButton
CPSLabel
bundleForClass:
cps_clipUIServicesBundle
effectWithStyle:
effectForBlurEffect:style:
initWithEffect:
setTranslatesAutoresizingMaskIntoConstraints:
_preferredFontForTextStyle:variant:
setFont:
setAdjustsFontForContentSizeCategory:
contentView
addSubview:
topAnchor
constraintEqualToAnchor:
leadingAnchor
bottomAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
setNumberOfLines:
numberOfLines
setTextAlignment:
textAlignment
setText:
text
sizeThatFits:
adjustsFontForContentSizeCategory
setAdjustsFontSizeToFitWidth:
adjustsFontSizeToFitWidth
setLineBreakMode:
lineBreakMode
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithTextStyle:textVariant:vibrancyEffectStyle:
viewForFirstBaselineLayout
viewForLastBaselineLayout
isUserInteractionEnabled
.cxx_destruct
_label
speed
convertTime:fromLayer:
setSpeed:
setTimeOffset:
timeOffset
setBeginTime:
cps_pauseAnimations
cps_resumeAnimations
delegate
exceptionWithName:reason:userInfo:
setDelegate:
attachToAnimation:didStartHandler:didStopHandler:
animationDidStart:
animationDidStop:finished:
_referenceToSelf
_didStartHandler
_didStopHandler
cps_setDelegateWithDidStartHandler:didStopHandler:
animationWithKeyPath:
setFromValue:
setToValue:
setAdditive:
setRemovedOnCompletion:
setFillMode:
setDuration:
cps_animationForKeyPath:from:to:beginAfter:duration:keepFinalFrame:
cps_nullAnimationWithDuration:
setMass:
setStiffness:
setDamping:
cps_animationForKeyPath:from:to:beginAfter:duration:mass:stiffness:damping:keepFinalFrame:
initWithFrame:
_commonInit
_placeholderInputsDidChange
initWithCoder:
placeholderColor
setPlaceholderColor:
setBackgroundColor:
isHidden
intrinsicContentSize
font
_bodyLeading
layoutSubviews
bounds
_desiredPlaceholderSize
effectiveUserInterfaceLayoutDirection
setFrame:
frame
_setContinuousCornerRadius:
isEqualToString:
copy
systemFillColor
setNeedsLayout
length
setHidden:
invalidateIntrinsicContentSize
traitCollection
_fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:
capHeight
setAttributedText:
setPlaceholderWidth:
placeholderWidth
_placeholderView
_text
_placeholderColor
_placeholderWidth
_setUpViews
centerXAnchor
centerYAnchor
widthAnchor
constraintGreaterThanOrEqualToAnchor:multiplier:constant:
heightAnchor
constraintGreaterThanOrEqualToAnchor:
reasonString
setReasonString:
_reasonLabel
mainScreen
scale
initWithSize:scale:
setShape:
commonInit
nibWithNibName:bundle:
instantiateWithOwner:options:
firstObject
setAccessibilityIgnoresInvertColors:
platterViewWithBlurEffectStyle:
setAutoresizingMask:
customContentView
setHighlightForwardingTarget:
image
setImage:
preferredImageDescriptor
init
_handleTap:
icon
setIcon:
title
setTitle:
subtitle
setSubtitle:
supertitle
setSupertitle:
setShowsAppStoreButton:
showsAppStoreButton
tapAction
setTapAction:
_iconView
_supertitleLabel
_titleLabel
_subtitleLabel
_appStoreButton
_overlayButton
_platterView
_tapAction
filterWithType:
numberWithDouble:
setValue:forKey:
cps_filterWithType:value:forKey:
initWithImage:
setClipsToBounds:
setContentMode:
setTintColor:
cps_imageViewWithImage:tintColor:backgroundColor:
setAxis:
setSpacing:
addArrangedSubview:
setUpSwitchWithLabel:
constraintEqualToAnchor:constant:
secondarySystemGroupedBackgroundColor
setContentCompressionResistancePriority:forAxis:
initWithArrangedSubviews:
setAlignment:
setAlpha:
setEffect:
layoutIfNeeded
isOn
setOn:
initWithTitle:label:description:
setHasBlurEffect:
hasBlurEffect
_switchWithLabelVisualEffectView
_switchWithLabelBackgroundView
_permissionSwitch
_blurEffectNeedsUpdate
_hasBlurEffect
constraintEqualToConstant:
setActive:
cps_addArrangedSpacerWithHeight:
_setUpSubviews
updateWithMetadata:
setTextStyleForScaling:
cps_viewWithBackgroundColor:cornerRadius:
_contentRatingLabelContainer
setUserInteractionEnabled:
constraintLessThanOrEqualToAnchor:
firstBaselineAnchor
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
_updateAppStoreButtonConstraints
fullAppName
fullAppContentRating
cps_imageNamed:
CGImage
initWithCGImage:scale:
initWithImages:
genericApplicationIcon
imageDescriptorNamed:
imageForImageDescriptor:
imageWithCGImage:scale:orientation:
clearColor
cps_configureForAnimatesAlphaWhenHighlighted:
traitCollectionDidChange:
preferredContentSizeCategory
cps_if:thenActivateConstraints:elseActivateConstraints:
appIcon
setAppIcon:
setHighlighted:
_appIconView
_poweredByVibrantLabel
_appNameVibrantLabel
_contentRatingImageView
_leadingAppStoreButtonConstraints
_trailingAppStoreButtonConstraints
defaultMetrics
systemFontOfSize:weight:
scaledFontForFont:
labelColor
setTextColor:
cps_labelWithText:textColor:fontSize:fontWeight:
debug_fullApplicationIcon
bundleID
getApplicationIconForBundleIdentifier:imageDescriptor:resultHandler:
initWithBundleIdentifier:
placeholder
getImageForImageDescriptor:completion:
getApplicationIconForImageDescriptor:resultHandler:
cps_setPriority:
systemLayoutSizeFittingSize:
isHighlighted
_fullSizeStack
_glyphOnlyStack
_lastLayoutBounds
_intrinsicContentSizeIsValid
_intrinsicContentSize
_systemImageNamed:
configurationWithTextStyle:scale:
setPreferredSymbolConfiguration:
setContentHuggingPriority:forAxis:
systemImageNamed:
configurationWithFont:scale:
_initWithAppClipBundleID:
_loadClipRecordUsingBundleID
initWithNibName:bundle:
initWithBundleID:
removeObserver:forKeyPath:context:
_setClipSessionProxy:
dealloc
observeValueForKeyPath:ofObject:change:context:
_scheduleBannerDismissTimerIfNeeded
viewDidLoad
view
_didTapBanner
_updateBanner
initWithBannerView:
addObserver:forKeyPath:options:context:
fullApplicationName
fullApplicationCaption
viewDidAppear:
_loadClipMetadataUsingPlaceholderWebClipID
setWebClipID:
_presentLoadingViewAnimated:
_dismissLoadingViewAnimated:
webClipID
_setPlaceholderClipMetadata:
setDisplayedOverPlaceholder:forWebClipID:animated:
loadViewIfNeeded
superview
_setBannerHidden:animated:
notifyWebClipActivationWithBundleID:
defaultStore
_setClipRecord:
getAppClipRecordWithBundleID:completion:
sharedStore
_setUpNewSessionProxy
getAppClipWithIdentifier:receiveOnQueue:completionHandler:
pageURL
initWithURL:
localConfiguration
setConfiguration:
configuration
setIsForSwitcherOverlay:
_updateLoadingView
disconnect
connectToService
metadata
estimatedProgress
floatValue
setLoadingProgress:completion:
domain
sharedLogger
clipBundleID
code
recordDidShowErrorWithBundleID:place:errorCode:
_showFailedLoadingStateAndReloadMetadata:animated:
path
imageWithContentsOfFile:
setBackgroundImage:animated:
insertSubview:belowSubview:
loadingProgress
invalidate
setDisplayedOverPlaceholder:animated:
scheduledTimerWithTimeInterval:repeats:block:
isPoweredByThirdParty
setPoweredByThirdParty:
clipName
setName:
setProvider:
clipHeroImageURL
cps_isFileURL
initWithContentsOfFile:
cps_privacyPreservingDescription
installClip
setLoadingHasFailed:animated:reason:reloadHandler:
prewarmClipWithCompletionHandler:
fetchClipMetadataAndImages
removeFromSuperview
finishLoadingWithCompletion:
setBannerHidden:animated:animationCompletion:
checkAndConsumeShowsAppAttributionBannerWithCompletion:
isBannerHidden
isTrackingBannerDismissGesture
bannerHasAccessibilityFocus
fullApplicationStoreURL
recordDidTapAppStoreBannerWithBundleID:
serviceWithDefaultShellEndpoint
dictionaryWithObjects:forKeys:count:
optionsWithDictionary:
openApplication:withOptions:completion:
initWithAppClipBundleID:
proxy:didDetermineAvailability:
proxyDidUpdateMetadata:
proxyDidChangeProgress:
proxyDidInstallApplicationPlaceholder:
proxyDidRetrieveBusinessIcon:
proxy:didRetrieveApplicationIcon:
proxy:didRetrieveHeroImage:
proxy:didFinishLoadingWithError:
proxyAppDidLaunchForTesting:
proxyRemoteServiceDidCrash:
initWithAppClipRecord:
preferredStatusBarStyle
setDisplayedOverPlaceholder:usingClipMetadata:animated:
setSceneActivationState:animated:
initWithAppClipBundleID:webClipID:
usesMockData
setUsesMockData:
appAttributionBannerPolicy
setAppAttributionBannerPolicy:
_automaticBannerDismissTimer
_banner
_bannerContainer
_clipRecord
_displayedOverPlaceholder
_loadingView
_placeholderClipMetadata
_sceneActivationState
_sessionProxy
_usesMockData
_showingDemoProgress
_initialAppearanceTime
_webClip
_webClipID
_appAttributionBannerPolicy
setModalPresentationStyle:
initWithMetadata:
uiMock_setOpenButtonEnabled:
presentProxCardFlowWithDelegate:initialViewController:configuration:
defaultConfiguration
setSupportsDarkMode:
presentProxCardFlowWithDelegate:initialViewController:
cancelSession
launchViewControllerDidDisappear:clipDidOpen:
dismissViewControllerAnimated:completion:
dismissalInProgress
launchContentViewControllerDidDisappear:didOpenClip:
logDismissalFromCloseButton:
dismiss:
initialize
proxCardFlowWillPresent
proxCardFlowDidDismiss
initWithClipURL:metadata:
_dismiss
_canShowWhileLocked
launchViewController
uiMock_openButtonEnabled
_launchContentViewController
_metadata
_url
_delegate
_launchViewController
_uiMock_openButtonEnabled
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setAnimatesAlphaWhenHighlighted:
titleLabel
setTitle:forState:
setTitleColor:forState:
initWithTitle:enabledTitleColor:disabledTitleColor:backgroundColor:textStyle:cornerRadius:animatesAlphaWhenHighlighted:
pointInside:withEvent:
updateCornerRadius
animatesAlphaWhenHighlighted
tapTargetSideMargin
setTapTargetSideMargin:
_animatesAlphaWhenHighlighted
_tapTargetSideMargin
colorNamed:inBundle:compatibleWithTraitCollection:
cps_colorNamed:
setContentHorizontalAlignment:
setContentEdgeInsets:
permissionButtonTapped:
addTarget:action:forControlEvents:
stringWithFormat:
initWithString:
secondaryLabelColor
addAttribute:value:range:
appendAttributedString:
systemBlueColor
_preferredFontForTextStyle:design:variant:compatibleWithTraitCollection:
setLineSpacing:
setAttributedTitle:forState:
transitionViewAnimated:
toggleNotificationPermission
toggleLocationConfirmationPermission
optionsAction
setNotificationPermissionEnabled:animated:
setLocationConfirmationPermissionEnabled:animated:
transitionWithView:duration:options:animations:completion:
notificationPermissionEnabled
locationConfirmationPermissionEnabled
convertPoint:toView:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
textViewShouldBeginEditing:
textViewShouldEndEditing:
textViewDidBeginEditing:
textViewDidEndEditing:
textView:shouldChangeTextInRange:replacementText:
textViewDidChange:
textViewDidChangeSelection:
textView:shouldInteractWithURL:inRange:interaction:
textView:shouldInteractWithTextAttachment:inRange:interaction:
textView:shouldInteractWithURL:inRange:
textView:shouldInteractWithTextAttachment:inRange:
configureWithAppName:requestsNotificationPermission:requestsLocationConfirmationPermission:
setNotificationPermissionEnabled:
setLocationConfirmationPermissionEnabled:
setOptionsAction:
_permissionButton
_appName
_requestsNotificationPermission
_requestsLocationConfirmationPermission
_permissionTextNeedsUpdate
_notificationPermissionEnabled
_locationConfirmationPermissionEnabled
_optionsAction
animateWithDuration:delay:options:animations:completion:
transform
setBounds:
whiteColor
cps_sizeToFitWithinSize:
cps_verticallyAlignTopView:bottomView:margin:
cps_vibrantSeparator
configurationWithScale:
_systemImageNamed:withConfiguration:
initWithTitle:detailText:icon:contentLayout:
applicationName
expectedRegion
deviceLocation
coordinate
requestState
_setupContentView
boldButton
_buttonActionTriggered:
linkButton
systemRedColor
buttonTray
addButton:
setShowsAttribution:
separatorColor
CGColor
layer
setBorderColor:
setBorderWidth:
initWithCoordinate:
addAnnotation:
center
radius
circleWithCenterCoordinate:radius:
addOverlay:
preferredFontForTextStyle:
constraintEqualToSystemSpacingBelowAnchor:multiplier:
viewWillAppear:
boundingMapRect
setVisibleMapRect:edgePadding:animated:
showAnnotations:animated:
viewDidDisappear:
setLocationServiceEnabled:
recordDidShowLocationConsentWithBundleID:response:
convertRegion:toRectToView:
viewForAnnotation:
initWithAnnotation:reuseIdentifier:
systemBackgroundColor
setMarkerTintColor:
setGlyphTintColor:
setGlyphImage:
setDisplayPriority:
initWithSize:
initWithCircle:
setFillColor:
initWithOverlay:
mapView:regionWillChangeAnimated:
mapView:regionDidChangeAnimated:
mapViewDidChangeVisibleRegion:
mapViewWillStartLoadingMap:
mapViewDidFinishLoadingMap:
mapViewDidFailLoadingMap:withError:
mapViewWillStartRenderingMap:
mapViewDidFinishRenderingMap:fullyRendered:
mapView:viewForAnnotation:
mapView:didAddAnnotationViews:
mapView:annotationView:calloutAccessoryControlTapped:
mapView:didSelectAnnotationView:
mapView:didDeselectAnnotationView:
mapViewWillStartLocatingUser:
mapViewDidStopLocatingUser:
mapView:didUpdateUserLocation:
mapView:didFailToLocateUserWithError:
mapView:annotationView:didChangeDragState:fromOldState:
mapView:didChangeUserTrackingMode:animated:
mapView:rendererForOverlay:
mapView:didAddOverlayRenderers:
mapView:viewForOverlay:
mapView:didAddOverlayViews:
mapView:clusterAnnotationForMemberAnnotations:
initWithRequest:
actionHandler
setActionHandler:
_clipBundleID
_region
_deviceLocationCoordinate
_deviceLocationSymbolName
_mapView
_circleOverlay
_deviceLocationAnnotation
_allowForAllButton
_allowOnceButton
_actionHandler
_installBannerViewIfNeeded
_dismissGestureRecognized:
initWithTarget:action:
setAllowedScrollTypesMask:
addGestureRecognizer:
updateConstraints
cps_if:thenActivate:elseActivate:
hitTest:withEvent:
setBannerHasAccessibilityFocus:
defaultCenter
_accessibilityElementFocusDidChange:
addObserver:selector:name:object:
removeObserver:name:object:
_updateBannerContentSizeCategory
_setLocalOverrideTraitCollection:
_removeBannerAnimationsIfNeeded
setBannerHidden:
setNeedsUpdateConstraints
animateWithDuration:animations:completion:
updateConstraintsIfNeeded
_animateUsingSpringWithDampingRatio:response:tracking:dampingRatioSmoothing:responseSmoothing:targetSmoothing:projectionDeceleration:animations:completion:
isActive
userInfo
objectForKeyedSubscript:
gestureRecognizerShouldBegin:
locationInView:
translationInView:
velocityInView:
boolValue
constant
safeAreaInsets
willChangeValueForKey:
didChangeValueForKey:
animation
stiffness
setInitialVelocity:
initialVelocity
initWithDampingRatio:initialVelocity:
settlingDuration
initWithDuration:timingParameters:
addAnimations:
startAnimation
state
setTranslation:inView:
setConstant:
numberWithBool:
safeAreaLayoutGuide
constraintGreaterThanOrEqualToAnchor:constant:
_removeAllRetargetableAnimations:
traitCollectionWithPreferredContentSizeCategory:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
willMoveToWindow:
setBannerView:
bannerView
_dismissGesture
_verticalPositionConstraintForDismissGesture
_verticalPositionConstraintWhenVisible
_verticalPositionConstraintWhenHidden
_verticalPositionOffsetForDismissGesture
_bannerCrossFading
_widthDuringLastBannerAnimation
_bannerHidden
_bannerHasAccessibilityFocus
_bannerView
accessibilityContainer
contentScaleFactor
preferredFontForTextStyle:compatibleWithTraitCollection:
size
_scaledValueForValue:
displayScale
textStyleForScaling
_scaledImageSize
_needsUpdateScaledImageSize
_textStyleForScaling
setStartPoint:
setEndPoint:
setType:
blackColor
setColors:
cps_grayscaleConicGradientLayer
clipURL
prewarmClip
setUpCard
setUpHeroSection
setUpInformationSection
_updateContent
cps_invocationCardPreferredContentSizeCategory
playSoundAndHaptic
URLForResource:withExtension:
shouldPlayHaptics
dictionaryWithContentsOfURL:
viewDidLayoutSubviews
updatePreferredContentSizeForCardWidth:
performWithoutAnimation:
verticalSizeClass
constraintEqualToAnchor:multiplier:
updateViewConstraints
buttonWithType:
systemWhiteColor
setAffineTransform:
setContentInsetAdjustmentBehavior:
setLayoutMarginsRelativeArrangement:
setDirectionalLayoutMargins:
setUpClipInformationContainerView
setCustomSpacing:afterView:
openAppStore
setPriority:
colorWithWhite:alpha:
setEnabled:
constraintGreaterThanOrEqualToConstant:
shouldRequestLocationConfirmationPermission
clipRequestsNotificationPermission
locationConfirmationGranted
_userNotificationAuthorizationDenied
userNotificationGranted
_heroImage
initWithAppName:backgroundImage:
navigationController
pushViewController:animated:
parentViewController
getLastLaunchOptionsWithCompletion:
currentNotificationSettingsCenter
notificationSourceWithIdentifier:
sourceSettings
notificationSettings
authorizationStatus
topViewController
popViewControllerAnimated:
itemID
intValue
sourceBundleID
referrerBundleID
launchReason
clipRequestURL
didPresentInvocationCardForClip:adamID:sourceBundleIdentifier:referrerBundleIdentifier:event:url:
_updateHeroImageIfNeeded
invocationPolicy
isEligible
isRecoverable
reason
localizedMessageForClipMetadata:
showUnavailableViewWithReason:
setUnavailableViewHidden:
fullAppIconURL
clipCaption
updateOpenButton
configurePermissionView
determineClipCompatibility
isEnabled
clipOpenButtonTitle
enableOpenButton
disableOpenButton
hasFullAppInstalledOnSystem
_openAppClip:
handlePolicyRecovery
clipIncompatibleWithCurrentDevice
deviceCapabilitiesDontMatch
oppositeDeviceFamilyName
localizedDeviceName
setAllowServerDialogs:
ams_sharedAccountStore
ams_activeiTunesAccount
initWithAccount:presentingViewController:options:
performAuthentication
removeTarget:action:forControlEvents:
setInvocationPolicy:
addFinishBlock:
localizedTitle
alertControllerWithTitle:message:preferredStyle:
signInToAppStore
requestPasscodeUnlockUIWithOptions:withCompletion:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
setBackgroundImage:
setUserNotificationGranted:
setLocationConfirmationGranted:
setShowsAppAttributionBanner:
recordDidTapOpenButtonInCardWithBundleID:metadata:launchReason:launchOptions:
openClipWithLaunchOptions:completion:
_dismissCardWithClipDidOpen:andPerformBlockToLaunchApp:
dictionary
setObject:forKeyedSubscript:
originIsControlCenter
didCancelInterstitialForClip:withEvent:
fullAppStoreURL
openURL:withOptions:
clipRequestsLocationConfirmationPermission
isInvokedByPhysicalCode
locationServiceEnabled
touchesEnded:withEvent:
_dismissWithClipDidOpen:completion:
currentThread
isMainThread
_dismissCardWithClipDidOpen:completion:
_canLaunchAppSimultaneouslyWithInvocationCardDismissal
cancel
canShowHeroImage
heroImageFileURL
_setHeroImage:
isDeveloperOverride
localizedDescription
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
setPreferredContentSize:
_sendAnalyticsIfNeeded
usedByPPT
_reasonStringForError:
permissionsViewControllerDidFinish:
cardStyle
allowsPullToDismiss
locationManagerDidChangeAuthorization:
prefersHomeIndicatorAutoHidden
setDismissalInProgress:
_heroContainerView
_heroImageView
_heroMirrorImageView
_closeButtonEffectView
_closeButton
_separatorView
_informationContainerView
_informationContentView
_clipInformationContainerView
_clipNameVibrantLabel
_clipDescriptionVibrantLabel
_openButton
_appMetadataView
_clipMetadata
_permissionView
_unavailableView
_permissionsViewController
_heroContainerAspectRatioConstraint
_shouldPlaySoundAndHaptic
_didInstallApplicationPlaceholder
_didSendAnalytics
_dismissalInProgress
deactivateConstraints:
colorWithAlphaComponent:
addSublayer:
setOpacity:
sizeToFit
setCompositingFilter:
array
addObject:
setFilters:
setMaskView:
mask
setOverrideUserInterfaceStyle:
_reloadTapped:
poweredByCaptionForAppName:
setCenter:
deviceIsPad
_updateLoadingProgress
setOrigin:
_startAnimationIfNeeded
_updateConicGradientRotation
cps_averageColorImage
_loadingIsComplete
_showCompletionAnimation:
_backdropEffectRemovalAnimationForKeyPath:
addAnimation:forKey:
_basicAnimationToDecreaseOpacity
_springAnimationToDecreaseOpacity
_textScaleUpSpringAnimation
window
_revealBackgroundAndLabels
_animationForTranslationY:
animationForKey:
setRepeatCount:
backgroundImage
name
provider
_backdropView
_clipNameBackdropView
_clipNameContainerView
_clipNameLabel
_clipNameProgressView
_errorContainerView
_clipUnavailableLabel
_retryButton
_reloadHandler
_deferredActions
_labelContainerView
_labelsNeedUpdate
_animationHasStarted
_loadingHasFailed
_progressChangeAnimationCount
_poweredByLabel
_gradientLayer
_gradientView
_poweredByThirdParty
_loadingProgress
_name
_provider
secondarySystemBackgroundColor
doneTapped
setUpOptionsContainer
_backgroundImageView
_optionsContainer
_notificationItemView
_locationConfirmationItemView
_backgroundImageNeedsUpdate
_backgroundImage
highlightForwardingTarget
_highlightForwardingTarget
textRectForBounds:limitedToNumberOfLines:
drawTextInRect:
setInsets:
insets
_insets
imageNamed:inBundle:withConfiguration:
imageWithCGImage:
extent
vectorWithX:Y:Z:W:
filterWithName:withInputParameters:
outputImage
imageWithCIImage:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
@40@0:8@16q24q32
v24@0:8q16
q16@0:8
v24@0:8@16
{CGSize=dd}32@0:8{CGSize=dd}16
v16@0:8
@"UILabel"
v40@0:8@16@?24@?32
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v32@0:8@?16@?24
@60@0:8@16@24@32d40d48B56
@24@0:8d16
@84@0:8@16@24@32d40d48d56d64d72B80
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
{CGSize=dd}16@0:8
v24@0:8d16
d16@0:8
@"UIView"
@"NSString"
@"UIColor"
@"CPSVibrantLabel"
@?16@0:8
v24@0:8@?16
@"UIImageView"
@"CPSLabelWithPlaceholder"
@"CPSAppStoreButton"
@"CPSHighlightForwardingButton"
@"PLPlatterView"
@40@0:8@16d24@32
@40@0:8@16@24@32
@"UIVisualEffectView"
@"UISwitch"
@"CPSScaledImageView"
@"NSArray"
@48@0:8@16@24d32d40
v32@0:8@16@?24
v40@0:8@16@24@?32
@"UIStackView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGSize="width"d"height"d}
v32@0:8@16@24
v28@0:8@"CPSSessionProxy"16B24
v24@0:8@"CPSSessionProxy"16
v32@0:8@"CPSSessionProxy"16@"NSURL"24
v32@0:8@"CPSSessionProxy"16@"NSError"24
v48@0:8@16@24@32^v40
v32@0:8B16@20B28
v28@0:8q16B24
v24@0:8B16B20
@32@0:8@16@24
@"NSTimer"
@"CPSAppAttributionBanner"
@"CPSBannerContainerView"
@"CPSAppClipRecord"
@"CPSClipLoadingView"
@"CPSClipMetadata"
@"CPSSessionProxy"
@"CPSWebClip"
v28@0:8@"CPSLaunchContentViewController"16B24
@"CPSLaunchContentViewController"
@"NSURL"
@"<CPSLaunchViewControllerDelegate>"
@"NSNumber"
@68@0:8@16@24@32@40@48d56B64
B40@0:8{CGPoint=dd}16@32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
B48@0:8@16{_NSRange=QQ}24@40
B56@0:8@16@24{_NSRange=QQ}32q48
B48@0:8@16@24{_NSRange=QQ}32
B24@0:8@"UITextView"16
v24@0:8@"UITextView"16
B48@0:8@"UITextView"16{_NSRange=QQ}24@"NSString"40
B56@0:8@"UITextView"16@"NSURL"24{_NSRange=QQ}32q48
B56@0:8@"UITextView"16@"NSTextAttachment"24{_NSRange=QQ}32q48
B48@0:8@"UITextView"16@"NSURL"24{_NSRange=QQ}32
B48@0:8@"UITextView"16@"NSTextAttachment"24{_NSRange=QQ}32
v32@0:8@16B24B28
@"CPSButton"
v32@0:8{CGSize=dd}16
@32@0:8@16d24
v40@0:8@16@24@32
v48@0:8@16@24Q32Q40
v36@0:8@16q24B32
v28@0:8@"MKMapView"16B24
v24@0:8@"MKMapView"16
v32@0:8@"MKMapView"16@"NSError"24
@"MKAnnotationView"32@0:8@"MKMapView"16@"<MKAnnotation>"24
v32@0:8@"MKMapView"16@"NSArray"24
v40@0:8@"MKMapView"16@"MKAnnotationView"24@"UIControl"32
v32@0:8@"MKMapView"16@"MKAnnotationView"24
v32@0:8@"MKMapView"16@"MKUserLocation"24
v48@0:8@"MKMapView"16@"MKAnnotationView"24Q32Q40
v36@0:8@"MKMapView"16q24B32
@"MKOverlayRenderer"32@0:8@"MKMapView"16@"<MKOverlay>"24
@"MKOverlayView"32@0:8@"MKMapView"16@"<MKOverlay>"24
@"MKClusterAnnotation"32@0:8@"MKMapView"16@"NSArray"24
@"CLCircularRegion"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@"MKMapView"
@"MKCircle"
@"MKPointAnnotation"
@"OBBoldTrayButton"
@"OBLinkTrayButton"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@40@0:8{CGPoint=dd}16@32
v32@0:8B16B20@?24
@"UIPanGestureRecognizer"
@"NSLayoutConstraint"
v24@0:8@"CPSPermissionsViewController"16
v28@0:8B16@?20
@"UIButton"
@"CPSAppMetadataView"
@"CPSPermissionView"
@"CPSAppClipUnavailableView"
@"CPSPermissionsViewController"
@"<CPSLaunchContentViewControllerDelegate>"
@20@0:8f16
v36@0:8B16@20@28
v40@0:8B16B20@24@?32
v28@0:8f16@?20
f16@0:8
@"CAGradientLayer"
@"CPSPermissionItemView"
@"UIImage"
@"<CPSPermissionsViewControllerDelegate>"
@"<CPSHighlightable>"
v48@0:8{UIEdgeInsets=dddd}16
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}16@0:8
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
ffffff
