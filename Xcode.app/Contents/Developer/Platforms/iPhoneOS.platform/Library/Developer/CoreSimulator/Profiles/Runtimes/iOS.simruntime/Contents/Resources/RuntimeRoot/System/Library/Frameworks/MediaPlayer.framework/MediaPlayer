@333333
MbP?
1@ffffff
?ffffff
333333
?333333
r@q=
?{{{{{{
?QQQQQQ
?@:Q
?UUUUUU
@UUUUUU
_(knN
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_5QueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZN6mlcore11LibraryView12performQueryINS_5QueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZ54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
N6mlcore11QueryResultE
Z54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_20LocalizedSearchQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZN6mlcore11LibraryView12performQueryINS_20LocalizedSearchQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZ60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
Z60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEENS_10shared_ptrIS6_E27__shared_ptr_default_deleteIS6_S6_EENS4_IS6_EEEE
NSt3__110shared_ptrINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEE27__shared_ptr_default_deleteIS6_S6_EE
NSt3__120__shared_ptr_emplaceIN6mlcore24SmartPlaylistEntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEENS5_IS9_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_10shared_ptrIN6mlcore6EntityEEENS_9allocatorIS5_EEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchScopeENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIN6mlcore4NoopENS_9allocatorIS3_EEFvdEEE
NSt3__110__function6__baseIFvdEEE
N6mlcore4NoopE
NSt3__110__function6__funcIZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIiEENS_9allocatorIS3_EEEE
$@NSt3__120__shared_ptr_emplaceINS_3mapIxNS_10shared_ptrIN6mlcore17EntityQueryResultEEENS_4lessIxEENS_9allocatorINS_4pairIKxS5_EEEEEENS8_ISD_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14AnyInPredicateIxEENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1
NSt3__120__shared_ptr_emplaceIN6mlcore22AggregateFunctionQueryENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__110__function6__baseIFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11
N6mlcore17PropertyCacheBaseIJxidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJdNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEENS_10shared_ptrIS6_E27__shared_ptr_default_deleteIS6_S6_EENS4_IS6_EEEE
NSt3__110shared_ptrINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEE27__shared_ptr_default_deleteIS6_S6_EE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore17EntityQueryResultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore16MultiEntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15SearchPredicateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6ArtistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore5GenreENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8ComposerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8PlaylistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityQueryENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_11EntityQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
NSt3__117bad_function_callE
ZN6mlcore11LibraryView12performQueryINS_11EntityQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
ZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4
NSt3__120__shared_ptr_emplaceIN6mlcore6TVShowENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6mlcore17ModelPropertyBaseENS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEENS5_ISH_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15PropertiesQueryENS_9allocatorIS2_EEEE
MusicShouldFakeTVEpisodes
Linear
Non-Linear
Standalone
-init is not supported, use +sharedInstance
OnboardingRequired
POST
responses
<nil>
resultsAndFlatSectionedItems
v32@?0@"MPModelForYouRecommendationItem"8q16^B24
v32@?0@"NSNull"8q16^B24
v32@?0@"MPModelForYouRecommendationGroup"8q16^B24
v16@?0@"MPModelForYouRecommendationGroup"8
name
listen-now
omit[resource]
autos
account
artists
albums
curators
social-upsells
tv-shows
library-playlists
MusicCoverShelf
MusicNotesHeroShelf
MusicSuperHeroShelf
MusicUpsellShelf
MusicCardShelf
MusicHorizontalLockupGrid
MPMediaControlsStyleControlCenter
MPMediaControlsStyleSingleSelect
MPMediaControlsStyleMultiSelect
MPMediaControlsStyleSharedQueue
MPMediaControlsStyleVideoPicker
MPMediaControlsStyleLocalTransportControls
MPMediaControlsStyleAirPlayBluePill
MPMediaControlsStyleMediumConfidenceVideoPicker
MPMediaControlsStyleUpNextControls
<%@:%p routingContextUID=%@, style=%@, presentingAppBundleID=%@, sourcRect=%@, preferredWidth=%f>
style
initiatorStyle
routingContextUID
presentingAppBundleID
allowsNowPlayingApplicationLaunch
sortByIsVideoRoute
sourceRect
preferredWidth
routeUID
unBlockSocialUser
Loved_Playlist
Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.
Invalid format string- missing numeric value.
Parameter index out of bounds.
MediaLibraryCore
image_decoding
v48@?0^{CGContext=}8{CGRect={CGPoint=dd}{CGSize=dd}}16
MPRequest.m
[MPRequest class]
<%@: %p label=%@>
com.apple.MediaPlaybackCore/%@.cleanup
class.description
-[MPRequest _performWithCompletion: failed to call completion %@
<NULL>
com.apple.MediaPlaybackCore/%@
com.apple.MediaPlaybackCore/%@.callout
com.apple.MPRequest.invalidationQueue
v16@?0@"NSString"8
<%@: %p request=%p>
valid
[MPResponse class]
<%@:%p>
_middleware
MPResponseDidInvalidateNotification
MPRequestErrorDomain
MPRequestUnderlyingErrorsUserInfoKey
MPModelResponseDidInvalidateNotification
MPModelResponse.m
-initWithRequest: must be used.
request != nil
; isValid = NO
; deferredItemProperties = %@
; deferredSectionProperties = %@
; results = %@
lyrics
MPModelPropertyLyricsText
MPModelPropertyLyricsTTML
MPModelPropertyLyricsHasStoreLyrics
MPModelPropertyLyricsHasLibraryLyrics
MPModelPropertyLyricsHasTimeSyncedLyrics
videoGravity
playerController.status
isReadyForDisplay
player.currentItem
player.isExternalPlaybackActive
playerController.isPlaying
playerController.contentDuration
playerController.contentDimensions
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
MPTimedMetadata cannot be created directly
keyspace
timestamp
org.iana.media-type
MPMoviePlayerPlaybackStateDidChangeNotification
MPMoviePlayerPlaybackDidFinishNotification
MPMoviePlayerPlaybackDidFinishReasonUserInfoKey
MPMoviePlayerLoadStateDidChangeNotification
MPMoviePlayerNowPlayingMovieDidChangeNotification
MPMoviePlayerReadyForDisplayDidChangeNotification
MPMoviePlayerScalingModeDidChangeNotification
MPMoviePlayerThumbnailImageRequestDidFinishNotification
MPMoviePlayerThumbnailImageKey
MPMoviePlayerThumbnailTimeKey
MPMoviePlayerThumbnailErrorKey
MPMoviePlayerTimedMetadataUpdatedNotification
MPMoviePlayerTimedMetadataUserInfoKey
info
mimeType
dataType
languageCode
MPMoviePlayerWillEnterFullscreenNotification
MPMoviePlayerDidEnterFullscreenNotification
MPMoviePlayerWillExitFullscreenNotification
MPMoviePlayerDidExitFullscreenNotification
MPMoviePlayerFullscreenAnimationDurationUserInfoKey
MPMoviePlayerFullscreenAnimationCurveUserInfoKey
MPMovieMediaTypesAvailableNotification
MPMovieSourceTypeAvailableNotification
MPMovieDurationAvailableNotification
MPMovieNaturalSizeAvailableNotification
MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification
MediaPlayerErrorDomain
AVPlayerViewController
/System/Library/Frameworks/AVKit.framework/AVKit
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
refId
endTimeReciever
AFAnalytics
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
AFAnalyticsContextsMerge
com.apple.MediaPlayer.MPRTCReportingSession.operationQueue
v40@?0@"RTCReporting"8@"NSDictionary"16@"NSArray"24@"NSError"32
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
MPStoreClientTokenDidChangeNotification
NetworkInterface
kRTCReportingMessageParametersCategory
kRTCReportingMessageParametersType
kRTCReportingMessageParametersPayload
-%ld
@"NSString"16@?0@"NSString"8
Domain
Code
com.apple.MediaPlayer.MPModelLibraryKeepLocalChangeRequestOperation.operationQueue
v24@?0@"MPModelLibraryResponse"8@"NSError"16
MPAVItemPlaybackModeAvailableNotification
MPAVItemArtworkDidChangeNotification
MPAVItemAssetIsLoadedNotification
MPAVItemTypeAvailableNotification
MPAVItemAlternateTracksAvailableNotification
MPAVItemDisplayableTextAvailableNotification
MPAVItemDurationAvailableNotification
MPAVItemIsExplicitDidChangeNotification
MPAVItemLikedStateDidChangeNotification
MPAVItemRatingDidChangeNotification
MPAVItemTitlesDidChangeNotification
MPAVItemModelGenericObjectDidChangeNotification
MPAVItemBookmarkTimeDidChangeNotification
MPAVItemPlayerItemDidChangeNotification
MPAVItemPlayerItemWillChangeNotification
MPAVItemTimebaseDidChangeNotification
MediaPlayerAVItemErrorDomain
_MPAVItemInternalLikedStateDidChangeNotification
MPAVItemPlaybackProperties_NextPlayStartTime
MPAVItemPlaybackProperties_StartTime
MPAVItemPlaybackProperties_EndTime
MPAVItemPlaybackProperties_LookForLyrics
MPAVItemPlaybackProperties_RampInDuration
MPAVItemPlaybackProperties_RampOutDuration
MPAVItemPlaybackProperties_AudibleDRMGroupID
AudibleDRMInfoGroupID
RampInOutInfoInDuration
RampInOutInfoOutDuration
MPAVItemShouldPreventPlaybackDidChangeNotification
MPAVItemHasFinishedDownloadingDidChangeNotification
MPAVItemSecureKeyDeliveryRequestDidFinishNotification
MPAVItemUserInfoKeyLoadDuration
MPAVItemUserInfoKeyRequestEndDate
MPAVItemUserInfoKeyRequestError
MPAVItemUserInfoKeyRequestStartDate
MPAVItemUserInfoKeyStoreDialogDictionary
AVItemPlaybackProperties_RampInDuration
AVItemPlaybackProperties_RampOutDuration
MPAVItemDurationObservationContext
MPAVItemLoadedTimeRangesObservationContext
MPAVItemTimebaseObservationContext
com.apple.MediaPlayer.MPAVItem.assetQueue
<%@: %p> (%@)
https://
http://
home-sharing://
trackReferences
v16@?0@"MPNowPlayingContentItem"8
loadedTimeRanges
timebase
v16@?0@"MPExportableArtworkProperties"8
INTERNALONLY-%@
type
@"MPAVItem"8@?0
v16@?0@"ICStoreRequestContext"8
MPQueueFeederErrorDomain
MPQueueFeeder.m
[MPQueueFeeder class]
standard
short
bannerUber
subscriptionCover
subscriptionHero
storeFlowcase
browseCover
fullscreenBackground
brandLogo
masterArt
editorialNotes
tagline
brand
editorial-items
Curator
Genre
Show
recordLabel
playlist
tvShow
socialProfile
curatorName
username
iTunesBrandType
shortUrl
playlistType
personalMixSortKey
radioStationTypeId
streamingRadioSubType
socialProfileId
handle
nameRaw
isPrivate
isVerified
isChart
music-videos
shows
tv-episodes
tv-seasons
metadata
<%@:%p storeID=%@ name=%@ subscriptionOffer=%@>
MPStoreItemMetadataDownloadAssetDictionary
MPStoreItemMetadataMusicAPIDictionary
MPStoreItemMetadataExpirationDate
MPStoreItemMetadataHasOverrideChildStorePlatformDictionaries
MPStoreItemMetadataOverrideChildStorePlatformDictionaries
MPStoreItemMetadataParentStoreItemMetadata
MPStoreItemMetadataStorePlatformDictionary
artistName
aucType
artworkURL
artworkTrackIds
isBeats1
relationships.tracks.data
libraryAlbumId
collectionName
playlistName
playlistId
composerName
copyright
curatorSocialHandle
curatorId
discCount
discNumber
audioTraits
description
itunesNotes
hasArtistBio
hasLyrics
hasSocialPosts
genres
riaa
value
contentRatingsBySystem
isMasteredForItunes
isPreorder
movementCount
movementNumber
movieClips
offers
playlistIds
popularity
shortName
shouldBookmarkPlayPosition
showComposer
trackCount
episodeCount
workName
videoSubType
isAvailable
music-video
playParams
latestAlbumArtwork
itemName
meta.popularity
shouldReportPlayEvents
libraryPlaylistId
itemId
purchasedAdamId
subscribedAdamID
work
isLive
events
v16@?0@"MPRadioStationEvent<MPMutableRadioStationEvent>"8
editorialArtwork
screenshots
uber
avatarArtwork
stationGlyph
artworkTracks
shortDescription
en_US_POSIX
YYYY-MM-dd
MPAVControllerErrorDomain
MPAVControllerErrorUserInfoKeyAlertDefaultButtonActionURLString
MPAVControllerErrorUserInfoKeyAlertDefaultButtonTitle
MPAVControllerErrorUserInfoKeyAlertMessage
MPAVControllerErrorUserInfoKeyAlertTitle
MPAVControllerItemParameter
MPShuffleTypeOff
MPShuffleTypeItems
MPShuffleTypeCollections
MPShuffleTypeUserDefault
<MPShuffleTypeUnknown>
MPRepeatTypeOff
MPRepeatTypeOne
MPRepeatTypeAll
MPRepeatTypeUserDefault
<MPRepeatTypeUnknown>
None
PrepareToPlay
Play
Proactive
User Selected
chevron.forward
AIRPLAY_DEVICE_BATTERY_LEVEL_COMBINED_FORMAT_%@_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_SINGLE_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_LEFT_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_RIGHT_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_CASE_%@
%@  %@
AIRPLAY_IN_USE_ON_PAIRED_DEVICE_%@
checkmark.circle.fill
circle
checkmark
v16@?0@"NSTimer"8
com.apple.MediaPlayer.MPTiledArtworkDataSource.TilingArtworkCatalogOperationQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.LoadingTiledArtworkRequestsQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.RenderingTiledArtworkRequestsQueue
Tiled artwork count cannot be 0.
Tiling artwork request was cancelled
No artwork catalogs were found
com.apple.MediaPlayer.MPTiledArtworkDataSource.loadingTileDataAccessQueue
Artwork catalogs found, but at least one had an empty image
MPTiledArtworkError
MPModelLibraryRequestOperation.mm
Request did not provide an entity class for %@ %@. label=%@
v32@?0@"MPMediaQuerySection"8Q16^B24
-[MPModelLibraryRequestOperation _executeLegacyRequest]
Results should not be nil!
com.apple.MediaPlayer.MPModelLibraryRequest.itemQueryOperationQueue
-[MPModelLibraryRequestOperation _executeRequest]_block_invoke
com.apple.MediaPlayer.MPModelLibraryRequest.serialQueue
{shared_ptr<mlcore::PlaylistItemEntityQuery>=^{PlaylistItemEntityQuery}^{__shared_weak_count}}8@?0
scopedContainers cannot contain a MPModelObject subclass matching the itemKind's modelClass. label=%@
_AVPlayer_VolumeDidChangeNotification
DO_NOT_USE
MPAVControllerBufferingStateChangedNotification
MPAVControllerOldStateParameter
MPAVControllerNewStateParameter
MPAVControllerItemChangedNotification
MPAVControllerItemWillChangeNotification
MPAVControllerErrorParameter
MPAVControllerErrorReasonParameter
MPAVControllerPlaybackStateChangedNotification
MPAVControllerDidReloadWithPlaybackContextNotification
MPAVControllerDidSetCurrentTimeNotification
MPAVControllerWillReloadWithPlaybackContextNotification
MPAVControllerPlaybackContextParameter
MPAVControllerWillSetCurrentTimeNotification
MPAVControllerPreviousItemDidTransitionNaturally
MPAVControllerPlaybackStateParameter
MPAVControllerUpdatedPlaybackStateParameter
MPAVControllerItemDidChangeWhenReloadingPlaybackContextNotification
MPAVControllerNextItemStateParameter
MPAVControllerCurrentTimeParameter
MPAVControllerDidRegisterItemNotificationsObject
_MPAVControllerExternalPlaybackVideoClient
PlayVideoInBackground
MPAVController.m
invalid parameters
changing track, no more tracks
-[MPAVController pause]
-[MPAVController togglePlaybackWithOptions:]
_allowAirPlayVideoCount incorrect
-[MPAVController setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:]
queueController.currentItem
-[MPAVController setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:]
outputSupportsAC3
itemDidChange nil
loaded
not loaded
currentItem
%s-%i
externalPlaybackActive
status
canPlayFastForward
canPlayFastReverse
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
tracks
-[MPAVController _applicationWillAddDeactivationReason:]
-[MPAVController _applicationDidRemoveDeactivationReason:]
_useAirPlayMusicMode
itemAllowsAirPlayFromCloud
itemAllowsExternalPlayback
itemHasProtectedContent
itemType
itemPlaybackMode
externalScreenType
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
usesExternalPlaybackWhileExternalScreenIsActive
wantsExternalPlayback
usesAudioOnlyMode
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/Playback/Old Engine/_ios_tvos_watchos/MPAVController.m
MPAudiblePlaybackPerformanceEnabled
queueController
com.apple.MediaPlayer.MPAVController.AutoPlay
APIC
Movie/video screen capture
MPCQueueController
Audio
Video
File
Streaming
AirPlay
TVOut
@"MPArtworkCatalog"16@?0d8
clipAssets
previewArtwork
MSVHasher+Algorithms.h
descriptionText
endTime
MPRadioControllerRadioAvailabilityDidChangeNotification
MPRadioControllerRecentStationsDidChangeNotification
com.apple.MediaPlayer.MPRadioController.accessQueue
v16@?0@"NSXPCConnection"8
com.apple.MediaPlayer.MPRadioController.connection
MPRadioControllerRadioAvailability
FBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
BKSProcessAssertion
/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
v16@?0@"<MPMutableRadioIdentifiers>"8
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"MPModelRadioStation"8
Song:v%lu:o%lu
v16@?0@"MPModelSongKind"8
music videos
artist uploaded content
cloud library 
MPModelPropertySongHasVideo
%@ %@
MPModelPropertySongTitle
MPModelRelationshipSongAlbum
MPModelRelationshipSongArtist
MPModelRelationshipSongGenre
MPModelRelationshipSongComposer
MPModelPropertySongGrouping
MPModelPropertySongCopyrightText
MPModelPropertySongDuration
_MPModelPropertySongTrackCount
MPModelPropertySongTrackNumber
MPModelPropertySongDiscNumber
MPModelPropertySongPlayCount
MPModelPropertySongSkipCount
MPModelPropertySongExplicit
MPModelPropertySongArtistUploadedContent
MPModelPropertySongBeatsPerMinute
MPModelRelationshipSongLyrics
MPModelPropertySongShouldShowComposer
MPModelPropertySongVolumeNormalization
MPModelPropertySongArtwork
MPModelRelationshipSongLocalFileAsset
MPModelPropertySongKeepLocalEnableState
MPModelPropertySongKeepLocalManagedStatus
MPModelPropertySongLibraryAdded
MPModelPropertySongLibraryAddedDate
MPModelPropertySongLastDevicePlaybackDate
MPModelPropertySongLibraryAddEligible
MPModelPropertySongHasCloudSyncSource
MPModelPropertySongClassicalWork
MPModelPropertySongClassicalMovement
MPModelPropertySongClassicalMovementCount
MPModelPropertySongClassicalMovementNumber
MPModelPropertySongYear
MPModelRelationshipSongHomeSharingAsset
MPModelRelationshipSongStoreAsset
MPModelPropertySongUserRating
MPModelPropertySongCloudStatus
MPModelPropertySongGaplessInfo
MPModelPropertySongVolumeAdjustment
MPModelRelationshipSongPlaybackPosition
MPModelPropertySongDownloadedDate
MPModelPropertySongTraits
MPModelChildSongAlbum
MPModelChildSongArtists
com.apple.MediaPlayer.MPAVTelevisionRoutingDataSource/serialQueue
RTCSessionIdentifier
appDataDictionaryVersion
popularityDictionary
@24@?0@"MPNowPlayingContentItem"8@"MPMediaRemoteEntityTranslatorContext"16
userInfo.
deviceSpecificUserInfo.
predicates
com.apple.fig.screen.is.probably.being.recorded
; entityIdentifier = %@
; namespaceIdentifier = %@
; revisionIdentifier = %@
; numberOfColumns = %lu
; numberOfRows = %lu
; tileSpacing = %.2f
; scaledFittingSize = %@
MPRemotePlaybackQueue.m
Invalid parameter not satisfying: %@
mrQueue
You must provide %@ with a MediaRemote playback queue. Use %@ instead.
queue
<%@ %p, query = %@, firstItem = %@, shuffleType = %@, repeatType = %@>
The provided queue has no items or collections.
<%@ %p, stationID = %@, stationStringID = %@>
Radio station is invalid or not found.
<%@ %p, shuffleType = %@, trackIDs = %@>
Empty track IDs array provided
<%@:%p identifier=%@ dataLength=%lu>
<%@:%p EmptyQueue>
MPStoreLyricsRequestErrorDomain
v24@?0@"MPStoreLyricsResponse"8@"NSError"16
MPRadioRecentStationsGroupLocalizedTitle
MPRadioRecentStationsGroupStations
<%@: %p
; createIndependentSectionsForLiveRadioStations = %@
; useOneLevelHeroListHierarchy = %@
; disallowEmptyTitleSections = %@
tabs
attributes
emphasize
viewRoomUrlRegex
/v1/editorial/%@/rooms/%@
label
editorialElementKind
links
@"MPArtworkCatalog"16@?0@"MPModelAlbum"8
surround
v16@?0@"MPModelGenre"8
MPShuffleableSectionedIdentifierList.m
Unsupported shuffle type: MPShuffleTypeUserDefault
Can only move after a section head that is in the shuffled SIL: afterSectionIdentifier=%@
Can only move after a section tail that is in the shuffled SIL: afterSectionIdentifier=%@
Invalid insertion (no item identifiers) in section: %@
cani
rand
B32@?0@"MPSectionedIdentifierListEntry"8Q16^B24
MPStoreLyricsSnippetRequestErrorDomain
; itemKind = %@
; name = %@
MPModelLibrarySearchScopeItemKind
MPModelLibrarySearchScopeName
MPModelLibrarySearchScopeItemProperties
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}24@?0@"MPModelKind"8@"MPPropertySet"16
MPModelLibrarySearchScope.mm
Couldn't create scope for modelKind: %@
v32@?0@"NSString"8@"MPModelKind"16^B24
MPModelLibraryAddToPlaylistChangeRequestErrorDomain
com.apple.mediaplayer.artworkservice.resizing.queue
com.apple.mediaplayer.artworkservice.resizing.OperationQueue
<%@:%p "%@"
MPAVLightweightRoutingController.m
The lightweight routing controller only supports disabled and presence discovery modes. If detailed is needed please use MPAVRoutingController.
sectionedItems
; %lu %@
    %@ (%lu %@): [
        %@,
    
    %@ (%lu %@),
v32@?0@"NSArray"8Q16^B24
MPSectionedCollection.m
globalIndex must be greater than or equal to 0
B24@?0q8q16
v16@?0@"NSIndexPath"8
@"MPArtworkCatalog"16@?0@"MPModelTVShow"8
MPModelPropertyPlayEventDatePlayed
MPModelPropertyPlayEventFeatureName
MPModelRelationshipPlayEventAlbum
MPModelRelationshipPlayEventArtist
MPModelRelationshipPlayEventPlaylist
MPModelRelationshipPlayEventRadioStation
MPModelRelationshipPlayEventGroup
v16@?0@"MPModelPlayEvent"8
include
include[stations]
radio
subscriber
nonsubscriber
optout
v16@?0@"MPModelStoreBrowseSection"8
albumSeeded
artistOnly
artistSeeded
libraryPlaylistSeeded
playlistSeeded
query
songSeeded
Episode
Shoutcast
stationProviderName
artwork
MPSectionedIdentifierListEnumerator.m
Cannot instantiate forward enumerator with MPSectionedIdentifierListEnumerationOptionReverse set
endEntry cannot be the same as the startingEntry
_startEntries
innerEntry not found in innerEntry.previousEntry.nextEntries
entryToEmit not found in entryToEmit.previousEntry.nextEntries
MPSectionedIdentifierListEntryTypeUnknown
MPSectionedIdentifierListEntryTypeStart
MPSectionedIdentifierListEntryTypeHead
MPSectionedIdentifierListEntryTypeItem
MPSectionedIdentifierListEntryTypeTail
MPSectionedIdentifierListEntryTypeEnd
<%@: %p entryType=%@>
simplified
AFAnalyticsEventTypeMusicPlaybackSummary
SecureKeyBlockingLoadDuration
PerceivedTotalStartupTime
MPVolumeSliderVolumeControlLabelDidChangeNotification
MPVolumeSliderVolumeControlAvailabilityDidChangeNotification
MPVolumeSliderVolumeControlCapabilitiesDidChangeNotification
<%@: %p value: %f dataSource: %@
MPVolumeSlider.m
MPVolumeSlider.route must be an MPAVEndpointRoute
VideoPlayer_Slider_Thumb_Small
ControlCenter_Slider_Thumb
VideoPlayer_Slider_Track
VideoPlayer_Slider_Groove
VolumeWarning
MPVolumeViewVisibilityChangedNotification
MPVolumeViewRouteButtonChangedNotification
MPVolumeViewRoutePickerPresentedNotification
MPVolumeViewWirelessRoutesAvailableDidChangeNotification
MPVolumeViewWirelessRouteActiveDidChangeNotification
only keyed archiving is supported
MPVolumeViewShowsVolumeSlider
MPVolumeViewShowsRouteButton
airplay_on
airplay
NO_VOLUME_AVAILABLE
 legacyMediaQuery=%@
 allowedItemIdentifiers=[%@]
humanDescription
 allowedSectionIdentifiers=[%@]
 scopedContainers=[%@]
 filterText="%@"
 sortUsingAllowedItemIdentifiers=YES
MPModelLibraryRequestWantsDetailedKeepLocalRequestableResponse
_MPModelLibraryRequestCodingKeySortUsingAllowedItemIdentifiers
MPModelLibraryRequestContentRangeLocation
MPModelLibraryRequestContentRangeLength
MPModelLibraryRequestAllowedItemIdentifiers
MPModelLibraryRequestFilteringOptions
MPModelLibraryRequestFilterText
MPModelLibraryRequestLegacyMediaQuery
MPModelLibraryRequestMediaLibrary
MPModelLibraryRequest.mm
Detailed keep local status only supported when request is sectioned.
Detailed keep local status only supported when request wantsDetailedKeepLocalRequestableResponse.
customForYouURL
MPModelStoreForYouRequestFilteringPolicy
MPModelStoreForYouRequestEndpoint
MPModelStoreForYouRequestMode
withRecentlyPlayed
withSocial
withPlainEditorialNotes
MPModelStoreForYouDisplayFilterKind
refreshRequest
<%@: %p> %@
MPSectionedIdentifierListEntry.m
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [too many next]
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [disconnected previous]
Non-linear entries in MPSectionedIdentifierListEntryAddBranch
<%@: %p> %@%@
<%@: %p> %@ - %@
%@s cannot be initialized externally.
<missing: %@>
<%@: %p command=%@>
kMRMediaRemoteOptionSenderID
%@ (%@)
com.apple.MediaPlayer.MPMediaAPICollectionItemMetadataRequestController.metadataRequestQueue
com.apple.MediaPlayer.MPMediaAPICollectionItemMetadataRequestController.accessQueue
com.apple.MediaPlayer.MPMediaAPICollectionItemMetadataRequestController.callbackQueue
v24@?0@"MPMediaAPICollectionItemMetadataResponse"8@"NSError"16
<%@: %p> (
  textColor: %@
  hasTitle: %@
textColor
hasTitle
MPModelLibraryDefaultSectionedCollectionDataSource.mm
Adjusted global index out of bounds: %ld (indexPath = %@ / entityCount = %ld)
Section index out of bounds: %ld (sectionCount = %ld)
_allowedItemPersistentIDToItemQueryResultsIndexMap must contain an entry for every value in _allowedItemIdentifiers
faulting not implemented yet
MPModelStoreBrowseRequestDomain
MPModelStoreBrowseRequestFilteringPolicy
MPModelStoreBrowseRequestEndpoint
MPModelStoreBrowseRequestLoadAdditionalContentURL
MPModelStoreBrowseRequestSubscriptionStatus
MPModelStoreBrowseRequestAdditionalContent
MPModelStoreBrowseRequestOptions
Artist:a%p
v16@?0@"MPModelArtistKind"8
artists with %@
MPModelPropertyArtistHasBiography
MPModelPropertyArtistArtwork
MPModelPropertyArtistEditorialArtwork
MPModelRelationshipArtistGenre
MPModelPropertyArtistSongCount
MPModelPropertyArtistAlbumCount
MPModelPropertyArtistLibraryAddedDate
MPModelPropertyArtistClassicalExperienceAvailable
MPModelChildArtistAlbums
MPAVRoutingControllerActiveSystemRouteDidChangeNotification
MPAVRoutingControllerDidPickRouteNotification
MPAVRoutingControllerRouteUserInfoKey
MPAVRoutingControllerDidUpdateVolumeControlStateNotification
com.apple.MediaPlayer.MPAVRoutingController/sharedWorkerQueue
com.apple.MediaPlayer.MPAVRoutingController/serialQueue
<%@: %p>
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
Q8@?0
<%@ %p "%@" dataSource=%@>
<%@ %p dataSource=%@>
routeName
speaker.bluetooth.fill
carplay
hearingdevice.ear
speaker.wave.2.fill
car.fill
person.2.fill
display
beatslogo
genericTV
tv.and.mediabox
tv-settopbox
mediastick
tv-stick
appletv.fill
appleTV
airpods
airpodspro
airpods-pro
airpodsmax
airpods-b515
airpods.gen3
b688
beats.powerbeats
beats-powerbeats
beats.headphones
beats-solo
beats-studio
beats.earphones
beats-x
beats.powerbeatspro
beats-powerbeats-pro
beats.fit.pro
beats-b419
beats-b364
beats-b372
beats.studiobuds
beats-b507
homepodmini.2.fill
b520-pair
homepod.2.fill
homePod-pair
homepodmini.fill
b520
homepod.fill
homePod
headphones
hifispeaker.fill
speaker
v32@?0@"MPAVRoute"8q16@"NSString"24
homepod.and.appletv.fill
odeon
homepodmini.and.appletv.fill
odeon-b520
hifispeaker.and.appletv
homepod.and.homepodmini.fill
homepodmini-homepod
hifispeaker.and.homepod.fill
hifispeaker.and.homepodmini.fill
hifispeaker.2.fill
Active route must be of type MPAVEndpointRoute.
iPhone
iphone
ipad
iPod
ipod
DeviceClass
iphone-x
ipad-pro
represents NowPlaying App
does NOT represent NowPlaying App
v24@?0^v8^{__CFError=}16
-[MPAVRoutingController _activeAudioRouteDidChangeNotification:]_block_invoke
com.apple.airplay.deviceAvailability
MPAVRoutingController.m
route
_obj
dataSource
discoveryMode
cachedRoutes
cachedPickedRoutes
pendingRoutes
remove
<%@: %p operationName=%@ routes=%@>
com.apple.MediaPlayer.MPAVRoutingControllerSelection/serialQueue
Route selection cancelled by MPAVRoutingController cancelInProgressSelectionForRoute:
Selection was cancelled due to removePendingRoute.
Enqueued route was cancelled because a new selection for the same route was enqueued.
Route in progress was interrupted by a new selection for the same route.
Composer:a%p
v16@?0@"MPModelComposerKind"8
composers with %@
MPModelPropertyComposerLibraryAddedDate
MPServerObjectDatabaseImportRequest.m
[MPServerObjectDatabaseMetadataImportRequest class]
meta
attributes.playParams
attributes.versionHash
attributes.extendedAssetUrls
attributes.assetUrls
attributes.assets
flavor
sinfs
B64@?0@"NSString"8@"NSMutableDictionary"16@"NSArray"24@"NSString"32@"MPIdentifierSet"40q48^@56
v32@?0@"MPServerObjectDatabaseMediaAPIImportChildRelation"8Q16^B24
miniSinf
Cannot extract sinfData from invalid synfType
sinf2
personal-recommendation
marketing-items
preorder
editorial-elements
rooms
targetedRadio
multirooms
normal
playlists|apple-curators
apple-curators|playlists
artists|stations
artists|songs
artists|playlists
station-events|apple-curators
songs
record-labels
stations
station-events
apple-curators
music-movies
social-profiles
versionHash
childrenIds
song
extendedAssetUrls
assetUrls
activity
editorial
streaming
user
iTunesBrand
showBrand
[MPServerObjectDatabaseAssetImportRequest class]
adamIds
flavors
lightweightPlus
superLightweight
Model response invalid before completion
Model response invalidation notification
v24@?0@"MPModelResponse"8@"NSError"16
 modelRequest=%@
PrivateFrameworks
RTCReporting.framework
MediaLibraryCore.framework
SectionHeaders
LocalizedSectionHeaders
SectionIndices
LocalizedSectionIndices
NameTransform
FirstCharacterAfterLanguage
LastCharacter
Headers
InsignificantSortPrefixes
com.apple.mediaplayer.MPHomeManagerObserver.accessQueue
com.apple.mediaplayer.MPHomeManagerObserver.calloutQueue
MPHomeUserMonitorBug
HomeUser Found After Forced Update
v32@?0@"HMAccessory"8Q16^B24
B24@?0@"NSUUID"8@"MPHomeUserMonitor"16
v24@?0@"HMUser"8^B16
HMHomeManager
Class getHMHomeManagerClass(void)_block_invoke
MPHomeManagerObserver.m
Unable to find class %s
void *HomeKitLibrary(void)
/System/Library/PrivateFrameworks/HomeKit.framework/HomeKit
/System/Library/PrivateFrameworks/HomeKit.framework/Contents/MacOS/HomeKit
supplementalReason
MPPlaybackContextShuffleType
MPPlaybackContextRepeatType
MPPlaybackContextQueueEndAction
MPPlaybackContextActionAfterQueueLoad
MPPlaybackContextPlayActionQueueGroupingID
MPPlaybackContextPlayActivityFeatureName
MPPlaybackContextPlayActivityRecommendationData
%@/%@
repeat/shuffle
queueEndAction
actionAfterQueueLoad
siriAssetInfo
sessionIdentifier
supportsAccountRectification
queueDescriptor
<%@:%p
 %@=%@
ReplacementContext is of different type %@ != %@
MPContentTasteControllerDidChangeNotification
MPContentTasteControllerNotificationUserInfoKeyContentType
MPContentTasteControllerNotificationUserInfoKeyMediaEntity
MPContentTasteControllerNotificationUserInfoKeyPlaylistGlobalID
MPContentTasteControllerNotificationUserInfoKeyStoreAdamID
MPContentTasteControllerNotificationUserInfoKeyTasteType
MPContentTasteControllerWillSetTasteTypeNotification
com.apple.mediaplayer.MPContentTasteController.global.serial.queue
SingletonTasteController
com.apple.MediaPlayer.MPContentTasteController.accessQueue
unknown entity type
invalid playlist global ID
v32@?0@"MPContentTasteController"8Q16^B24
com.apple.MediaPlayer.MPStoreItemMetadataRequestController.operationQueue
com.apple.MediaPlayer/MPStoreItemMetadata.callout
MPStoreItemMetadataRequestController.m
Attempting to end a transaction that never began
com.apple.MediaPlayer.MPStoreItemMetadataRequestController
v24@?0@"ICStorePlatformMetadata"8^B16
v32@?0@"NSArray"8@"<ICStorePlatformResponse>"16@"NSError"24
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
v32@?0@"MPStoreItemMetadataCacheKey"8@"MPStoreItemMetadataCache"16^B24
playlistPersistentID
playlistAttributes
seedItems
dateCreated
isWorkoutMix
isGeniusMix
isGeniusPlaylist
geniusMixRepresentativeArtists
isVoiceMemos
isActivePlaylist
isActiveGeniusPlaylist
isActiveOnTheGoPlaylist
isUserEditable
isDeletable
isLimitedDynamicSmartPlaylist
isHidden
descriptionInfo
isEditable
playCount
playCountSinceSync
likedState
parentPersistentID
isPurchasesPlaylist
isCurrentDevicePurchasesPlaylist
isPlaybackHistoryPlaylist
isIgnoredSyncing
hasItems
cloudGlobalID
cloudVersionHash
cloudShareURL
cloudIsPublic
cloudIsVisible
cloudIsSubscribed
cloudIsCuratorPlaylist
cloudAuthorStoreID
cloudAuthorDisplayName
cloudAuthorStoreURL
cloudUserCount
cloudGlobalPlayCount
cloudGlobalLikeCount
distinguishedKind
isITunesSynced
externalVendorDisplayName
externalVendorContainerTag
externalVendorIdentifier
isExternalVendorPlaylist
cloudPlaylistUniversalLibraryID
MPMediaPlaylist.m
Playlist was initialized with a multiverse identifier containing the wrong object type (%d)
CFBundleDisplayName
CFBundleExecutable
Cannot obtain digest from unknown hasher algorithm
TVEpisode:v%lu:o%lu
v16@?0@"MPModelTVEpisodeKind"8
episodes
Apple Music episodes
shuffleable 
options
TV episode %@
MPModelPropertyTVEpisodeTitle
MPModelPropertyTVEpisodeDescriptionText
MPModelPropertyTVEpisodeDuration
MPModelPropertyTVEpisodeHasCloudSyncSource
MPModelPropertyTVEpisodeMusicShow
MPModelPropertyTVEpisodeNumber
MPModelPropertyTVEpisodeExplicitRating
MPModelRelationshipTVEpisodeLocalFileAsset
MPModelRelationshipTVEpisodePlaybackPosition
MPModelRelationshipTVEpisodeStoreAsset
MPModelRelationshipTVEpisodeSeason
MPModelRelationshipTVEpisodeShow
MPModelPropertyTVEpisodeReleaseDate
MPModelPropertyTVEpisodeType
MPModelPropertyTVEpisodeTypeDisplayName
MPModelPropertyTVEpisodeLibraryAdded
MPModelPropertyTVEpisodeLibraryAddedDate
MPModelPropertyTVEpisodeLastDevicePlaybackDate
MPModelPropertyTVEpisodeLibraryAddEligible
MPModelPropertyTVEpisodeKeepLocalEnableState
MPModelPropertyTVEpisodeKeepLocalManagedStatus
MPModelPropertyTVEpisodeArtwork
MPModelPropertyTVEpisodeDownloadedDate
MPPlaybackArchiveErrorDomain
v16@?0@"<MPMutablePlaybackArchive>"8
<%@: %p type=%ld playbackSessionIdentifier=%@ playbackSessionData=%@ playbackSessionType=%@ bundleIdentifier=%@ supportedOptions=%lu queueControlOptions=%lu displayProperties=%@ copyOptions=%lu> storage=%@
archiveType
sessionID
sessionType
bundleID
supportedOptions
displayProperties
copyOptions
queueControlOptions
MPPlaybackArchive.m
Attempt to mutate after finalization.
Cannot obtain hash from unknown hasher algorithm
TOTAL
<%@:%p %@, %@, SystemFilters=%@>
DISABLED
MPFilterPredicates
MPGroupingType
MPIgnoreSystemFilterPredicates
MPIgnoreRestrictionsPredicates
MPIncludeNonLibraryEntities
MPIncludeEntitiesWithBlankNames
MPEntityOrder
MLEntityOrder
MLEntityOrderSorted
MLIsFilteringDisabled
MPStaticEntities
MPStaticEntityType
MPMediaQuery.m
Cannot decode protobuf object of type %@
v32@?0@"MPMediaItemCollection"8Q16^B24
filtering_disabled
v16@?0@8
v24@?0q8^B16
v32@?0q8@"NSDictionary"16^B24
MPMediaPredicate is an abstract class and cannot be decoded.
MPMediaPredicate is an abstract class and cannot be encoded.
MPProperty
MPComparisonType
'%@'
'%@' %@
equal to
not equal to
greater than
greater than or equal
less than
less than or equal
bit test
contains
starts with
ends with
<%@ %p> '%@' %@ %@
Cannot decode object of type %@
MPMediaPropertyPredicate cannot filter using the %@ property.
conditionPredicate
thenPredicate
elsePredicate
MPPredicates
<%@ %p> %@
containmentProperty
containmentValues
<%@ %p property:'%@' values:%@>
shouldContain
persistentIDs
<%@ %p> should%@ contain %lu persistent IDs
MPSearchString
MPProperties
<%@ %p> %@ matches '%@'
MPMediaGroupingTitle
MPMediaGroupingSongsByAlbumArtist
MPMediaGroupingAlbum
MPMediaGroupingAlbumByArtist
MPMediaGroupingAlbumByAlbumArtist
MPMediaGroupingAlbumByComposer
MPMediaGroupingArtist
MPMediaGroupingAlbumArtist
MPMediaGroupingComposer
MPMediaGroupingGenre
MPMediaGroupingPlaylist
MPMediaGroupingPodcastTitle
MPMediaGroupingSeriesName
MPMediaGroupingSeasonName
MPMediaGroupingAudioBookTitle
MPMediaGroupingAlbumPersistentID
MPMediaGroupingAlbumRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyPlayed
MPMediaGroupingComposerRecentlyAdded
MPMediaGroupingComposerRecentlyPlayed
MPMediaGroupingGenreRecentlyAdded
MPMediaGroupingGenreRecentlyPlayed
(unknown grouping type)
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.operationQueue
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.accessQueue
v24@?0@"MPMediaPlaylist"8@"NSError"16
external
user-shared
personal-mix
@"MPArtworkCatalog"16@?0@"MPModelPlaylist"8
v16@?0@"MPModelCurator"8
MPMusicPlayerControllerErrorDomain
MPMusicPlayerControllerPlaybackStateDidChangeNotification
MPMusicPlayerControllerNowPlayingItemDidChangeNotification
MPMusicPlayerControllerVolumeDidChangeNotification
MPMusicPlayerControllerQueueDidChangeNotification
MPMediaPlaybackIsPreparedToPlayDidChangeNotification
MPMusicPlayerControllerItemPlaybackDidEndNotification
_MPMusicPlayerControllerArtworkDidChangeNotification
_MPMusicPlayerControllerQueueDidEndNotification
_MPMusicPlayerControllerQueueDidChangeNotification
_contentItemIDs
MusicKit_applicationMusicPlayer
MusicKit_systemMusicPlayer
com.apple.Music.MPMusicPlayerControllerInternal
com.apple.Music.MPMusicPlayerApplicationControllerInternal
systemMusicPlayer
applicationQueuePlayer
MPMusicPlayerController.m
Must initialize a concrete instance of MPMusicPlayerController.
<%@:%p client=%@>
v24@?0@"MPMusicPlayerControllerNowPlaying"8@"NSError"16
[MPMusicPlayerController class]
MPMusicPlayerController is not available on the simulator
v24@?0@"MPMusicPlayerQueueDescriptor"8@"NSError"16
v16@?0@"MPMusicPlayerControllerNowPlayingTimeSnapshot"8
MPArtworkCatalogEffectOptionColorAnalyzerAlgorithm
MPArtworkRepresentationBackingFileURLAssociatedKey
MPArtworkCatalogErrorDomain
<%@: %p [redacted description due to non-main thread]>
<%@: %p token=%@ fittingSize=%@ destinationScale=%lf destination=%@>
v24@?0@8@"MPArtworkRepresentationCollection"16
v24@?0@"MPArtworkColorAnalyzer"8@"MPArtworkColorAnalysis"16
v16@?0@?<v@?@@"NSError">8
v16@?0^{CGImage=}8
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
Identifiable data source with short description "%@" is not properly registered.
q24@?0@"NSValue"8@"NSValue"16
i=%@/v=%@
@"UIColor"16@?0@"UITraitCollection"8
v16@?0@"UIGraphicsImageRendererContext"8
%@-%@
conditionalPredicate
com.apple.MediaPlayer.MPAsyncOperation.accessQueue
isExecuting
MPAsyncOperation.m
[MPAsyncOperation class]
isFinished
globalID
albumTitle
artist
albumArtist
playbackDuration
albumTrackNumber
albumTrackCount
containerItemPID
chosenByAutoFill
isCompilation
year
beatsPerMinute
comments
storeItemAdamID
storeAccountID
storeDownloaderAccountID
storeFamilyAccountID
storeItemURL
storePlaylistAdamID
storeArtistAdamID
storeAlbumArtistAdamID
storeComposerAdamID
storeGenreAdamID
storeRentalID
isPremium
isRental
isITunesU
isAudible
isMusicVideo
isHD
contentRating
includeInShuffle
shortDescriptionInfo
movieInfo
podcastTitle
seriesName
seasonNumber
seasonName
episodeNumber
showSortType
episodeTypeDisplayName
episodeSubSortOrder
isMusicShow
collectionDescription
hlsOfflinePlaybackKeys
skipCount
skipCountSinceSync
lastSkippedDate
rememberBookmarkTime
rating
lastPlayedDate
userGrouping
sortTitle
sortArtist
sortAlbumTitle
sortAlbumArtist
sortComposer
filePath
verifiedIntegrity
locationFileName
assetURL
hasAvailableItemArtwork
chapters
chapterArtworkTimes
albumPID
albumArtistPID
genrePID
composerPID
podcastPID
hasBeenPlayed
bookmarkTime
isDemoRental
rentalDuration
rentalPlaybackDuration
rentalPlaybackStartTime
rentalStartTime
rentalExpirationDate
rentalWindowEndDate
isOTAPurchased
isStreamingQuality
isTemporaryCloudDownload
startTime
gaplessEncodingDelay
gaplessLastFrameResync
volumeAdjustment
fileSize
podcastURL
podcastGUID
eqPreset
audioTrackID
audioTrackLocale
hasAlternateAudio
hasSubtitles
isPendingSync
hasProtectedAsset
hasAppleMusicDRM
needsRestore
storeCloudStatus
storeRedownloadParameters
downloadIdentifier
storeSagaID
restricted
storeBookmarkIdentifier
storeBookmarkTimestamp
storeBookmarkEntityRevision
isCloudItem
isAlarm
isStoreRedownloadable
likedStateChanged
likedStateChangedDate
dateAccessed
artistOrderSection
isLocal
homeSharingID
isDeprotected
dateAdded
albumYear
albumKeepLocal
artistKeepLocal
albumArtistKeepLocal
genreKeepLocal
storeDatePurchased
storeExtrasURL
storeNeedsReporting
dateDownloaded
bitRate
booklets
subscriptionStoreItemAdamID
storePlaybackEndpointType
storeAssetProtectionType
radioStationID
advertisementUniqueID
advertisementType
isArtistUploadedContent
cloudIsInMyLibrary
albumArtistCloudUniversalLibraryID
reportingStoreItemAdamID
assetStoreItemAdamID
isExplicit
isPlayable
isMatchAudio
isNonLibraryOwnedSubscriptionContent
significantAmountHasBeenPlayed
entityRevision
remoteLocationId
isInMyLibrary
storeCloudAssetAvailable
composerOrArtist
classicalWork
classicalMovementCount
hasHLSVideo
storeCloudAlbumID
storeLyricsAvailable
timeSyncedLyricsAvailable
playbackStoreID
colorCapability
hlsColorCapability
videoQuality
hlsVideoQuality
hlsPlaylistURL
audioCapability
hlsAssetTraits
hlsKeyServerURL
hlsKeyServerProtocol
hlsKeyCertificateURL
availableItemArtworkToken
fetchableItemArtworkToken
fetchableItemArtworkSource
availableItemScreenshotToken
fetchableItemScreenshotToken
fetchableItemScreenshotSource
anyAudio
music
podcast
audioBook
voiceMemo
iTunesU-audio
anyVideo
home-video
podcast-video
iTunesU-video
anyMedia
AnyAudio
Podcast
AudioBook
VoiceMemo
ITunesUAudio
AnyVideo
Movie
HomeVideo
VideoPodcast
MusicVideo
AnyMedia
MPMediaItem.m
[MPMediaItem class]
com.apple.LegacyMusic
invalid parameter
viewPodcast?id=%1$llu
viewAudiobook?id=%2$llu
viewMovie?id=%2$llu
viewAlbum?id=%1$llu
viewTVSeason?id=%1$llu
http://itunes.apple.com/WebObjects/MZStore.woa/wa/
podcast-episode
feature-movie
tv-episode
kind
podcast-url
&%@=%@
itms://?action=library-link%@
[MPNondurableMediaItem class]
MPPersistentID
v24@?0@8^B16
image must be non-nil
requestHandler must be non-nil
MPModelLibraryKeepLocalStatusRequestOperation.mm
Invalid creation options for MPModelLibraryKeepLocalStatusRequestOperation. downloadableItemsQuery or downloadablePlaylistItemEntityQueryBlock  must be specified
MPMediaLibraryDidChangeNotification
MPMediaLibraryPathDidChangeNotification
MPMediaLibraryChangeTypes
MPMediaLibraryChangeTypePlaylists
MPMediaLibraryChangeTypeItemsKey
_MPMediaLibraryAvailableMediaLibrariesDidChangePrivateNotification
MPMediaLibraryAvailableMediaLibrariesDidChangeNotification
MPMediaLibraryDefaultMediaLibraryDidChangeNotification
MPMediaLibraryDynamicPropertiesDidChangeNotification
MPMediaLibraryInvisiblePropertiesDidChangeNotification
MPMediaLibraryDisplayValuesDidChangeNotification
MPMediaLibraryDisplayValuesWillChangeNotification
MPMediaLibrarySyncGenerationDidChangeNotification
MPMediaLibraryConnectionProgressDidChange
MPMediaLibraryStatusDidChangeNotification
MPMediaLibraryRestrictionsDidChangeNotification
MPMediaLibraryFilteringDidChangeNotification
MPMediaLibraryCloudLibraryAvailabilityDidChangeNotification
MPMediaLibraryEntitiesAddedOrRemovedNotification
MPMediaLibraryContentTasteCatalogUpdateOptionInvalidateLocalCache
default_media_library
com.apple.MPMediaLibrary.global.serial.queue
NoDSID
MPMediaLibrary.m
Attempting to access a method only available for tv and audio accessory device
-[MPMediaLibrary initWithClientIdentity:userIdentity:]_block_invoke
-[MPMediaLibrary initWithClientIdentity:userIdentity:]
com.apple.mediaplayer.MPMediaLibrary
com.apple.mediaplayer.MPMediaLibrary.connectionAssertions
com.apple.mediaplayer.MPMediaLibrary.additionalLibraryFilterPredicatesAccessQueue
MPLibraryDataProviderUID
MPUserDSID
only keyed coding is supported
v16@?0@"MPMediaLibrary"8
MPMediaLibraryErrorDomain
Connection already in progress
Unable to connect
v12@?0f8
PERMISSION_DENIED
CAPABILITY_MISSING
v32@?0@"NSString"8@"MPMediaLibrary"16^B24
MLSyncPlaylistId
v16@?0@"MPStoreDownload"8
values/properties must have the same count (%lu != %lu)
ipod-library
only one of item/itemsResultSet should be set
v32@?0@?<v@?@"NSNumber">8Q16^B24
v16@?0@"NSNumber"8
@"NSNumber"16@?0@"NSArray"8
v24@?0@"MPMediaQueryCriteria"8@?<v@?@"NSNumber">16
v16@?0Q8
com.apple.mediaplayer.MPMediaLibraryRemote
q24@?0@"MPMediaLibrary"8@"MPMediaLibrary"16
unimplemented
-[MPMediaLibrary getPlaylistWithUUID:creationMetadata:completionHandler:]
NOT_FOUND
One or more store item metadata instances didn't have a valid storeID.
One or more store item metadata instances failed to be converted into SSLookupItems.
One or more persistentID failed to be converted into MPMediaItem.
%p: %@
v40@?0q8@"NSString"16q24^B32
v48@?0q8q16@"NSString"24q32^B40
SKCloudServiceController
/System/Library/Frameworks/StoreKit.framework/StoreKit
; sectionKind=%@
; sectionProperties = %@
; itemKind=%@
; itemProperties = %@
; label = %@
itemKind
MPModelRequestLabel
MPModelRequestSectionProperties
MPModelRequestItemProperties
sectionKind
MPModelRequestSectionSortDescriptors
MPModelRequestItemSortDescriptors
com.apple.MediaPlayer.MPModelRequest.sharedQueue
com.apple.MediaPlayer.MPModelRequest.sharedNetworkQueue
MPModelRequest.m
[MPModelRequest class]
MPModelPropertySectionTitle
MPMediaPickerController.m
showsLibraryContent and showsCatalogContent can't both be NO.
MEDIAPICKER_NAVIGATION_TITLE
B12@?0B8
com.apple.Music.MediaPicker
remoteViewController cannot be nil -- process will crash inserting in hierarchy. We likely got a nil remoteViewController because Music is crashing.
v32@?0@"<NSCopying>"8@"MPMusicMediaPickerRemoteViewController"16@"NSError"24
mediaTypes
allowsPickingMultipleItems
aslsb
adtl
showsCloudItems
showsItemsWithProtectedAssets
prompt
picksSingleCollectionEntity
watchCompatibilityVersion
typeIdentifiers
selectionMode
pickingForExternalPlayer
MPAVQueueCoordinatorFailedToQueueAnyItemsNotification
MPAVQueueCoordinatorWillInsertItemAfterItemNotification
MPAVQueueCoordinator
 [anchored]
[reused]
v32@?0@"MPAVItem"8Q16^B24
@"MPAVItem"16@?0@"AVPlayerItem"8
%@:%@
MP_weakAssociatedQueuePlayer
@"MPQueuePlayer"8@?0
v24@?0@"MPNowPlayingContentItem"8@"MPIdentifierSet<MPMutableIdentifierSet>"16
_MPAddKeepLocalControlWaitingSpinnerAnimationKey
UniversalDownloadProgressStopButton
UniversalAddControlWaiting
UniversalAddControlAdd
MPKeepLocalControlShouldShowDownloadedIndicator
UniversalAddControlDownloaded
UniversalAddControlDownloadable
UniversalAddControlError
UniversalAddControlPaused
transform.rotation.z
https
/v1/lyrics/%@/snippet/songs/%lld
%.03f
HTTPStatusCodeKey
results
text
q24@?0@"MPStoreItemMovieClipAsset"8@"MPStoreItemMovieClipAsset"16
@"MPArtworkCatalog"16@?0@"MPModelMediaClip"8
v16@?0@"MPModelStaticAsset"8
v16@?0@"MPModelMediaClip"8
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
albumPersistentID
albumName
albumSortName
albumAlbumArtistPersistentID
albumAlbumArtist
albumRepresentativeItemPersistentID
albumRepresentativeItemArtworkToken
albumCloudStatus
albumAlbumYear
albumLikedState
albumStoreID
artistPersistentID
artistSortName
artistRepresentativeItemPersistentID
artistRepresentativeItemArtworkToken
artistCloudStatus
artistStoreID
albumArtistPersistentID
albumArtistName
albumArtistSortName
albumArtistRepresentativeItemPersistentID
albumArtistRepresentativeItemArtworkToken
albumArtistCloudStatus
albumArtistStoreID
composerPersistentID
composerSortName
composerRepresentativeItemPersistentID
composerRepresentativeItemArtworkToken
composerCloudStatus
composerStoreID
genrePersistentID
genreName
genreRepresentativeItemPersistentID
genreRepresentativeItemArtworkToken
genreCloudStatus
genreStoreID
artistCount
albumCount
cloudStatus
itemCount
MPMediaItemCollection.m
subclass must implement
MPMediaItemCollectionInitException
-init is not supported, use -initWithItems:
MPItems
MPItemsCount
MPRepresentativeItem
MPContainedMediaTypes
MPInitializedContainedMediaTypes
MPMediaItemsQuery
<%@ %p %@ handlerCallCount=%ld>
<%@ %lld %lld %f %d>
@"MPArtworkCatalog"16@?0@"MPModelArtist"8
v16@?0@"MPModelArtist"8
radio station event
MPModelPropertyRadioStationEventTitle
MPModelPropertyRadioStationEventDescriptionText
MPModelPropertyRadioStationEventStartTime
MPModelPropertyRadioStationEventEndTime
MPModelPropertyRadioStationEventArtwork
MPModelPropertyRadioStationEventHeroArtwork
scrubberglow
opacity
pulseAnimation
HI_SPEED_SCRUBBING
MediaPlayer
HALF_SPEED_SCRUBBING
QUARTER_SPEED_SCRUBBING
FINE_SCRUBBING
VideoPlayer_Slider_Thumb
LIVE
UNKNOWN_DURATION
VideoPlayer_Slider_Track_Hollow
v24@?0@"<MPMusicPlayerControllerApplicationServer>"8@?<B@?>16
v16@?0@"<MPMusicPlayerControllerApplicationServer>"8
com.apple.MediaPlayer.RemotePlayerService
v16@?0@"NSXPCListenerEndpoint"8
v24@?0@"<MPMusicPlayerControllerServer>"8@?<B@?>16
v16@?0@"<MPMusicPlayerControllerServer>"8
MPSupportsExternallyPlayableContent
StarkCapability
com.apple.MediaRemote.MPPlayableContentManagerSerialQueue
-init is invalid. Use +sharedManager.
MPPlayableContentManager.m
-[MPPlayableContentManager setNowPlayingIdentifiers:] nowPlayingIdentifiers cannot be nil.
CARSessionLimitUserInterfacesChangedNotification
void _MPBeginLoadingContentCallback(MRMediaRemoteIndexPath, void *, void (^__strong)(CFErrorRef))_block_invoke
-beginLoadingChildItemsAtIndexPath:completionHandler: completion handler was released without being called.
MPPlayableContentManager.datasource did not respond to beginLoadingChildItemsAtIndexPath: before timeout.
CFArrayRef _MPCopyChildContentItemsCallback(MRMediaRemoteIndexPath, CFRange, void *)
Hierarchy depth has exceeded the limit of %d
void _MPInitiatePlaybackCallback(MRMediaRemoteIndexPath, void *)_block_invoke
-playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler: completion handler was released without being called.
MPPlayableContentManager.datasource did not respond to playableContentManager:initiatePlaybackOfContentItemAtIndexPath: before timeout.
void _MPContentItemsForIdentifiersCallback(CFArrayRef, void *, void (^__strong)(CFArrayRef, CFErrorRef))_block_invoke
-contentItemForIdentifier:completionHandler: completion handler was released without being called.
MPPlayableContentManager.datasource did not respond to contentItemForIdentifier: before timeout.
v24@?0@"MPContentItem"8@"NSError"16
com.apple.MediaPlayer.LyricsRequest.access
com.apple.MediaPlayer.MPStoreLyricsRequestOperation.operationQueue
ttmlLyrics
error
ttml
lyricsId
%lli
MPAVRoutingControllerErrorDomain
MPLazySectionedCollection.mm
Request for section out of bounds: %lld
Request for number of items in section out of bounds: %lld
Index path must have two components.
Request for item out of bound in section (%lld): %lld
Request for item identifiers out of bound in section (%lld): %lld
Request for identifiers for section out of bounds: %lld
static asset
MPModelPropertyStaticAssetDuration
MPModelPropertyStaticAssetFlavorType
MPModelPropertyStaticAssetMediaType
MPModelPropertyStaticAssetURL
_MPAVRoutingViewCellIdentifier
_MPAVRoutingViewHeaderIdentifier
AIRTUNES_POPOVER_TITLE
com.apple.mediaplayer.airPlayPasswordAlertDidCancel
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARPLAY_SAME_OWNER
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARKIT_SAME_OWNER
v16@?0@"MPAVRoutingViewControllerUpdate"8
ROUTING_SPEAKER_HIJACK_INTERRUPT_LOCAL_MULTITASK_TITLE
ROUTING_SPEAKER_HIJACK_INTERRUPT_LOCAL_MULTITASK_MESSAGE
ROUTING_SPEAKER_HIJACK_NAG_CANCEL
ROUTING_SPEAKER_HIJACK_NAG_CONFIRM
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_TV_TITLE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_SPEAKER_TITLE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_TV_MESSAGE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_SPEAKER_MESSAGE
v16@?0@"UIAlertAction"8
mirroring switches are no longer supported in MPAVRoutingViewController
com.apple.airplay.startlogging
q24@?0@"MPAVRoute"8@"MPAVRoute"16
v32@?0@"NSString"8@"NSArray"16^B24
LOCAL DEVICES
ROUTING_VIEW_HEADER_HEADPHONES
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARPLAY
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARKIT
ROUTING_VIEW_SHARE_AUDIO
ROUTING_VIEW_HEADER_SPEAKERS_AND_TVS
displayedEndpointRoute
<NONE>
routeDiscoveryMode
onScreen
inCarPlay
routingViewItems
CARSessionStatus
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
2zyzecwSf2ZYRpB3tuQhOQ
@"MPArtworkCatalog"16@?0@"MPModelSong"8
spatial
atmos
hi-res-lossless
v16@?0@"MPModelComposer"8
RadioAvailabilityController
RadioAvailabilityControllerRadioAvailableDidChangeNotification
RadioRecentStationsController
RadioRecentStationsControllerStationsDidChangeNotification
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
/System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
MPModelObjectMediaItem.m
MPModelObjectMediaItem initWithPersistentID: is not supported. Use initWithModelObject: instead.
followProfile
MPNowPlayingInfoCenter
NSBundle_MPAdditions.m
unable to find MediaPlayer bundle
MPAbstractNetworkArtworkDataSourceErrorDomain
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.imageAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.videoAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.callbackQueue
MPAbstractNetworkArtworkDataSource.m
[MPAbstractNetworkArtworkDataSource class]
q24@?0@8@16
@32@?0{CGSize=dd}8^q24
v40@?0@"NSURLSessionDataTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
Artwork request must have a non-nil URL. catalog=%@
MPAbstractNetworkArtworkDataSource
Failed to create URL request for catalog: %@
v32@?0@"NSURLSessionDataTask"8@"AVAssetResourceLoadingRequest"16^B24
@"NSCachedURLResponse"32@?0{CGSize=dd}8^q24
representationSize
v16@?0@"ICRequestContext"8
@"MPArtworkRepresentation"32@?0{CGSize=dd}8^q24
com.apple.mediaplayer.MPArtworkDataSourceURLCache.accessQueue
{-1,-1}
MPMusicPlayerPlayParametersQueueDescriptorPlayParameters
MPMusicPlayerPlayParametersQueueDescriptorStartItemPlayParameters
MPMusicPlayerPlayParametersDictionary
MPMusicPlayerPlayParametersIdentifiers
MPMusicPlayerPlayParametersItemID
MPMusicPlayerPlayParametersItemKind
MPMusicPlayerPlayParametersIsLibraryContent
MPMusicPlayerPlayParametersCatalogID
MusicKit
shuffleType
repeatType
private
MPMusicPlayerQueueDescriptorStartTimes
MPMusicPlayerQueueDescriptorEndTimes
bundleVersion
queueGroupingID
featureName
MPMusicPlayerQueueDescriptor.m
[MPMusicPlayerQueueDescriptor class]
MPMusicPlayerMediaItemQueueDescriptorQuery
MPMusicPlayerMediaItemQueueDescriptorItemCollection
MPMusicPlayerMediaItemQueueDescriptorStartItem
MPMusicPlayerStoreQueueDescriptorStoreIDs
MPMusicPlayerStoreQueueDescriptorStartItemID
MPMusicPlayerStoreQueueDescriptorStoreFronts
isLibrary
catalogId
<%@:%p %@>
<%@:%p queue=%@ startItem=%@>
<%@:%p radioStation=%@>
radioStation
playbackArchive
Cannot append to unknown hasher algorithm
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
void _MSVHasher_SipHash_1_3_Append32(MSVHasherSipHash_1_3 *, uint32_t)
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 3]: %lld
Cannot finalize unknown hasher algorithm
keyPath
relatedProperties
MSVHasher+SipHash.h
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
MPModelLibraryModelSectionedCollectionDataSource.mm
Adjusted section index out of bounds: %ld (sectionIndex = %ld / sectionEntityCount = %ld)
_allowedSectionPersistentIDToSectionQueryResultsIndexMap must contain an entry for every value in _allowedSectionIdentifiers
media clip
mediaClip %@
MPModelPropertyMediaClipTitle
MPModelPropertyMediaClipPreviewArtwork
MPModelRelationshipMediaClipStaticAssets
Share Audio
ROUTING_GROUP_SUBTITLE_COUNT
Disabled
Presence Scan
Detailed Scan
MPConcreteMediaItemInitException
-init is not supported, use -initWithPersistentID:library:
@"MPMediaItem"16@?0@"MPConcreteMediaEntityPropertiesCache"8
com.apple.MediaPlayer.MPConcreteMediaItem.utilitySerialQueue
 %llu
MPLibrary
v24@?0@8@"NSString"16
v24@?0@"NSString"8^B16
@"UIImage"24@?0{CGSize=dd}8
@"MPMediaItemCollection"16@?0@"MPConcreteMediaEntityPropertiesCache"8
MPMediaLibraryDataProvider.m
No persistent ID property could be found for media object of type %d
MPQuery
group
com.apple.MediaPlayer.MPConcreteMediaPlaylist.accessQueue
NOT_SUPPORTED
UNKNOWN_ERROR
v40@?0Q8@"NSString"16Q24^B32
com.apple.mediaplayer.ResultSetEntities
Wrong class %@
com.apple.mediaplayer.EntityProperty
Property can't be nil
ml3td_artwork_data
ml3td_radio_station_id
ml3td_advertisement_unique_id
ml3td_advertisement_type
v40@?0{_NSRange=QQ}8Q24^B32
com.apple.MPMediaLibraryDataProviderML3.backgroundTask
com.apple.MPMediaLibraryDataProviderML3.cloudUpdateQueue
com.apple.MPMediaLibraryDataProviderML3.entitiesAddedOrRemovedNotificationQueue
device
v16@?0@"ML3DatabaseConnection"8
SELECT revision FROM entity_revision WHERE class = 1 ORDER BY revision DESC LIMIT 1;
v32@?0q8Q16^B24
B16@?0@"ML3DatabaseConnection"8
v24@?0@"NSDictionary"8@"NSError"16
NanoMusic
Music
v24@?0@"ICStorePlatformResponse"8@"NSError"16
v28@?0B8@"NSError"12@"NSData"20
items not found
item not found
v40@?0q8r^@16Q24^B32
MPMediaLibraryDataProviderML3.m
No ML3Property for MPProperty: %@
v48@?0q8q16i24i28q32^B40
continuous
iapd
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/Core/MusicLibrary Support/_ios_tvos_watchos/MPMediaLibraryDataProviderML3.m
SEASON_DISPLAY_FORMAT_%@
ratingProvider
localizedRating
ratingLevel
localizedReason
isSourceExternal
v28@?0q8i16@?<v@?@"MPMediaChapter"I>20
v20@?0@"MPMediaChapter"8I16
@"UIImage"8@?0
NSUInteger MPITScaledVolumeNormalization(float)
MPITScaledVolumeNormalization is Unimplemented
Media-SimTestFiles
TestAudio
TestVideo
Media
/Library/
MPAVRouteConnectionErrorDomain
_MPAVRouteConnectionDidInvalidateNotification
_MPAVRouteConnectionDidConnectNotification
_MPAVRouteConnectionDidAttemptConnectionNotification
MPAVRouteConnectionCorrelationIDUserInfoKey
MPAVRouteConnectionReasonUserInfoKey
MPAVRouteConnectionVolumeDidChangeNotification
MPAVRouteConnectionVolumeUserInfoKey
MPAVRouteConnectionEndpointIdentifierUserInfoKey
MPAVRouteConnectionOutputDeviceIdentifierUserInfoKey
MPAVRouteConnection.m
externalDevice
com.apple.MediaPlayerFramework.MPAVRouteConnection.accessQueue
com.apple.MediaPlayerFramework.MPAVRouteConnection.calloutQueue
<%@: %p valid: %@, connected: %@>
deprecated
MPAVRouteConnection
MPAVRouteConnectionCustomData
v20@?0I8^{__CFArray=}12
AIRPLAY_MIRRORING_TITLE
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPHONE
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPAD
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPOD
@"NSMutableArray"16@?0:8
@24@?0:8@"MPMediaPredicate"16
persistentID
MPMediaEntity.m
MPSections
MPSectionIndexTitles
Aborted
Active
Enforce
Overridden
MPVolumeController.m
playbackTime
urlDescription
<%@: %p> chapter %lu, time = range = [%.2f, %.2f], %@ = %@
MPIndexInChaptersOfAnyType
MPIndexInChaptersOfSameType
MPChapterType
MPPlaybackDuration
MPPlaybackTime
MPValue
MPChapterIndex
com.apple.MediaPlayer.MPStoreLbraryPersonalizationCollectionDataSource.accessSerialQueue
indexPath
possibleObject
Tracklisting-LazySectionedCollectionDataSource-InvalidStateBug
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (unpersonalizedContentDescriptors did not contain MPStoreLibraryPersonalizationContentDescriptor)
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (effectiveOriginalObject has no identifiers)
originalObject
effectiveOriginalObject
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (libraryIdentifiers unionSet: failed)
libraryIdentifiers
originalIdentifiers
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (originalObject has no identifiers)
v16@?0@"MPModelLyrics"8
v16@?0@"MPModelAlbum"8
System
RTCReporting
kRTCReportingSessionInfoClientType
kRTCReportingSessionInfoClientVersion
kRTCReportingSessionInfoSessionID
kRTCReportingSessionInfoBatchEvent
kRTCReportingSessionInfoRequireUserInfo
kRTCReportingSessionInfoHierarchyToken
kRTCReportingUserInfoClientName
kRTCReportingUserInfoServiceName
MPAudioVideoRoutingPopoverController.m
Mirroring is no longer supported by MPAudioVideoRoutingPopoverController
com.apple.mediaplayer.airPlayPasswordAlertWillAppear
com.apple.MediaPlayer.MPModelLibrarySearchRequestOperation.accessSerialQueue
v32@?0@"MPModelLibrarySearchScope"8Q16^B24
v32@?0{shared_ptr<mlcore::LocalizedSearchQueryResult>=^{LocalizedSearchQueryResult}^{__shared_weak_count}}8@"NSError"24
redownload
downloaded
downloading
long
medium
MPStoreItemOfferLookupDictionary
Only keyed archiving is supported.
assets
buyParams
action-params
priceFormatted
price
actionText
_identifiers
<%@:%p modelClass=%@>
MPBaseEntityTranslator.m
Subclass %@ must implement -%@ defined in %@.
[MPBaseEntityTranslator class]
[%@] Property mapping missing for %@ : %@
[%@] Relationship mapping missing for %@ : %@
[%@] Attempting to set a source preprocessor for %@, but one is already set.
[%@] Attempting to replace existing identifiers translator for %@
[%@] Attempting to map an already unsupported property for %@ : %@
[%@] Attempting to replace existing property translator for %@ : %@
[%@] Attempting to map an already unsupported relationship for %@ : %@
[%@] Attempting to replace existing relationship translator for %@ : %@
[%@] Already an existing translator for %@
[%@] Attempting to unsupport identifiers for %@
[%@] Attempting to unsupport a property with an existing mapping: %@
[%@] Attempting to unsupport a relationship with an existing mapping: %@
No identifiers for model class: %@ from source: %@
AirPlayPortExtendedInfo
MPAVRouteDidChangeNotification
MPAVRouteUserInfoRouteKey
76,8194
76,8207
76,8198
76,8197
76,8195
76,8201
76,8202
76,8203
76,8204
76,8205
76,8206
76,8208
10507
76,8209
76,8210
76,8211
j327
<%@: %p uid=%@ type=%@ subtype=%@ modelID=%@>
-tlea
%s is abstract
-[MPAVRoute isPhoneRoute]
B24@?0@"MPAVOutputDeviceDescription"8@"NSDictionary"16
<%@: %p, "%@", picked=%@ uid=%@>
| Mirroring Route: %@
<%@: %p name=%@ uid=%@ type=%@ subtype=%@>
WirelessDisplay
SmartAudio
Undefined
Unknown
Speaker
Headphone
Headset
Receiver
LineOut
PersistentLineOut
DisplayPort
AirTunes
HDMI
BluetoothHeadphones
BluetoothHeadset
BluetoothLE
SPDIF
CarAudio
HomePod
AppleTV
Vehicle
Cluster
BluetoothSpeaker
SetTopBox
TVStick
apple-internal-install
true
isInternalInstall
isIcloudLibraryEnabled
isEnabled
isSocialEnabled
trackBadging
B32@?0@"NSURLQueryItem"8Q16^B24
storePlatformData
contentId
round
strokeEnd
com.apple.MediaPlayer
DEFAULT_GENIUS_PLAYLIST_NAME
v24@?0@"MPModelStoreBrowseResponse"8@"NSError"16
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.nestedRequestsOperationQueue
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.sectionsToNestedResponseAccessQueue
v32@?0@"MPModelStoreBrowseContentItem"8q16^B24
_MPMKT_transformedType
activities
library-albums
playlists
personal-social-profiles
uploaded-audios
uploaded-videos
_composers
_lyrics
_storeAsset
_playbackPosition
MPMediaKitEntityTranslator.m
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
Use +createGenericObjectTranslator instead.
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPMediaKitEntityPayloadTransformer"24
Can only call %s on generic object translators.
-[MPMediaKitEntityTranslator mapRelationshipKey:toModelClass:mediaKitType:]
Movie:v%lu:o%lu
v16@?0@"MPModelMovieKind"8
movies
Apple Music movies
rentals
MPModelPropertyMovieTitle
MPModelPropertyMovieDescriptionText
MPModelPropertyMovieExplicitRating
MPModelPropertyMovieTagline
MPModelPropertyMovieInfoDictionary
MPModelRelationshipMovieClips
MPModelPropertyMovieReleaseDate
MPModelRelationshipMovieLocalFileAsset
MPModelRelationshipMoviePlaybackPosition
MPModelRelationshipMovieStoreAsset
MPModelPropertyMovieArtwork
MPModelPropertyMovieEditorialArtwork
MPModelPropertyMovieDuration
MPModelPropertyMovieHasCloudSyncSource
MPModelPropertyMovieLibraryAdded
MPModelPropertyMovieLibraryAddedDate
MPModelPropertyMovieLastDevicePlaybackDate
MPModelPropertyMovieLibraryAddEligible
MPModelPropertyMovieKeepLocalEnableState
MPModelPropertyMovieKeepLocalManagedStatus
MPModelPropertyMovieDownloadedDate
SongSeeded
ArtistSeeded
Siri
Format
Editorial
GracenoteGenre
User
PlaylistSeeded
AlbumSeeded
Broadcast
radio station
radio station %@
MPModelPropertyRadioStationName
MPModelPropertyRadioStationBeats1
MPModelPropertyRadioStationLive
MPModelPropertyRadioStationEditorNotes
MPModelPropertyRadioStationShortEditorNotes
MPModelPropertyRadioStationHasExplicitContent
MPModelPropertyRadioStationEvents
MPModelPropertyRadioStationArtwork
MPModelPropertyRadioStationGlyph
MPModelPropertyRadioStationAllowsItemLiking
MPModelPropertyRadioStationType
MPModelPropertyRadioStationSubtype
MPModelPropertyRadioStationAttributionLabel
MPModelPropertyRadioStationProviderName
MPModelPropertyRadioStationSubscriptionRequired
MPModelPropertyRadioStationProviderUniversalLink
MPModelPropertyRadioStationProviderBundleIdentifier
MPModelPropertyRadioStationProviderID
MPModelPropertyRadioStationStartingAirDate
MPModelPropertyRadioStationEndingAirDate
MPModelChildRadioStationEvents
group %@
MPModelPropertyKeyGroupTitle
MPModelPropertyTVShowCreatorArtwork
v32@?0@"NSIndexPath"8Q16^B24
v32@?0@"NSNumber"8@"UIView"16^B24
%@://%@/%@.%@?%@=%lli
com.apple.MediaPlayer.MPModelLibraryAddToPlaylistChangeRequestOperation.operationQueue
v16@?0@"MPModelPlaybackPosition"8
Podcast:e%p
v16@?0@"MPModelPodcastKind"8
podcasts containing %@
podcast %@
MPModelPropertyPodcastTitle
MPModelPropertyPodcastFeedURL
MPModelPropertyPodcastShareURL
MPModelPropertyPodcastSupportsSubscription
MPModelRelationshipPodcastAuthor
MPModelPropertyPodcastArtwork
MPErrorDomain
@"MPArtworkCatalog"16@?0@"MPModelRecordLabel"8
v16@?0@"MPModelRecordLabel"8
VOL-
VOL+
buster
MPStoreArtworkDataSource.m
maxHEICRequestPercentage's value must fall in range [0, 1.0]
MPMediaQuerySection is a read-only object
 title=%@, range=%@, sectionIndexTitleIndex=%lu
MPTitle
MPRangeLocation
MPRangeLength
MPSectionIndex
failed to generate secure random bytes
bytes
source
lowest
highest
upper bound provided is less than lowestInclusive
lowestInclusive
highestInclusive
upper
MPArtworkResizeErrorDomain
Failed to resize nil image.
Input image has invalid size: {%f, %f}.
Input image has invalid scale: %f.
Failed to resize image with invalid scaled fitting size: {%f, %f}.
<%@: %p> (
  backgroundColor: %@ (%@)
  primaryTextColor: %@ (%@)
  secondaryTextColor: %@ (%@)
Light
Dark
backgroundColor
backgroundColorLight
primaryTextColor
primaryTextColorLight
secondaryTextColor
secondaryTextColorLight
WHAOptimisticStateVolumeDisabled
MPVolumeGroupSliderCoordinator.m
We don't have a master or individual slider.
MPSectionedIdentifierList+Debugging.m
debugDescription is counting on itemResult being an instance of %@
%@%@%@%@%@%@
 (%ld)
%@ %@ %@ %@ %@
- %@
%@ %@ %@ %@ %@
MPModelStoreBrowseContentItemPropertyItemType
MPModelStoreBrowseContentItemPropertyDetailedItemType
MPModelStoreBrowseContentItemPropertyArtistUploadedContentType
MPModelStoreBrowseContentItemRelationshipAlbum
MPModelStoreBrowseContentItemRelationshipArtist
MPModelStoreBrowseContentItemRelationshipCurator
MPModelStoreBrowseContentItemRelationshipMediaClip
MPModelStoreBrowseContentItemRelationshipMovie
MPModelStoreBrowseContentItemRelationshipPlaylist
MPModelStoreBrowseContentItemRelationshipRadioStation
MPModelStoreBrowseContentItemRelationshipSocialPerson
MPModelStoreBrowseContentItemRelationshipSong
MPModelStoreBrowseContentItemRelationshipTVEpisode
MPModelStoreBrowseContentItemRelationshipTVSeason
MPModelStoreBrowseContentItemRelationshipTVShow
MPModelStoreBrowseContentItemRelationshipTVShowCreator
MPModelStoreBrowseContentItemRelationshipRecordLabel
v16@?0@"MPModelStoreBrowseContentItem"8
meta.formerIds
attributes.offers.kind
subscription
attributes.name
attributes.durationInMillis
attributes.durationInMilliseconds
attributes.discNumber
attributes.trackNumber
attributes.contentRating
@24@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16
explicit
attributes.artwork
attributes.showComposer
attributes.copyright
attributes.workName
attributes.movementName
attributes.movementCount
attributes.movementNumber
attributes.releaseDate
attributes.isMasteredForItunes
attributes.audioTraits
lossless
relationships.albums.data.id.@firstObject
attributes.albumName
relationships.artists.data.id.@firstObject
attributes.artistName
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"NSMutableDictionary"24
genreNames
videoKind
meta.vacToken
attributes.hasLyrics
attributes.hasTimedSyncedLyrics
attributes.trackCount
attributes.discCount
clean
attributes.isCompilation
attributes.isPreorder
attributes.editorialNotes.standard
attributes.editorialNotes.short
relationships.tracks
attributes.classicalUrl
attributes.lastModifiedDate
attributes.playlistType
attributes.isChart
attributes.url
attributes.description.standard
attributes.description.short
attributes.playParams.versionHash
attributes.isLive
attributes.stationProviderName
attributes.stationGlyph
attributes.streamingRadioSubType
attributes.airTime.start
attributes.airTime.end
attributes.requiresSubscription
attributes.title
attributes.startTime
attributes.endTime
attributes.heroArtwork
attributes.composerName
attributes.editorialNotes.name
attributes.handle
attributes.kind
attributes.editorialArtwork.subscriptionCover
attributes.editorialArtwork.brandLogo
attributes.episodeCount
attributes.editorialNotes.tagline
attributes.offers.0.durationInMilliseconds
attributes.offers.0.durationInMillis
durationInMilliseconds
attributes.offers
attributes.episodeNumber
attributes.contentRatingsBySystem
attributes.previews
attributes.isPrivate
attributes.isVerified
attributes.pendingFollowersCount
attributes.editorialArtwork.bannerUber
attributes.playParams.reporting
attributes.videoKind
tvtrailer
<%@: %p ['%@', storeID=%lld]>
@"MPArtworkCatalog"16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVShow"8
v16@?0@"MPModelTVSeason"8
v16@?0@"MPModelTVEpisode"8
com.apple.%@.global.serial.queue
MPMediaLibrarySystemFilters.mm
Given library has no library identifier
searchString
com.apple.mediaplayer.systemdataprovider
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL
GENIUS_PLAYLIST_OFFLINE_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_CELLULAR
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WIFI
GENIUS_FEATURE_NOT_AVAILABLE_TITLE
GENIUS_FEATURE_NOT_AVAILABLE_SUBTITLE
GENIUS_PICKER_NO_RESULTS_TITLE
GENIUS_PICKER_NO_RESULTS_MESSAGE
B8@?0
v44@?0q8q16i24q28^B36
default
https://%@/v1/catalog/%@/songs?ids=%@%@
 left=%@
 right=%@
 case=%@
 single=%@
 none
NSNumber *MPAVGetBatteryLevelFromRouteDescription(NSDictionary *__strong, MPAVBatteryLevelType)
MPAVBatteryLevel.m
battery level value is not a number
BTDetails_BatteryLevelLeft
BTDetails_BatteryLevelRight
BTDetails_BatteryLevelCase
BTDetails_BatteryLevelSingle
NSString *MPAVGetRouteDescriptionKey(MPAVBatteryLevelType)
unable to find route description key for battery level
NSNumber *MPAVGetBatteryLevelFromAVODDS(MRAVOutputDeviceRef, NSDictionary *__strong, MPAVBatteryLevelType)
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.operationQueue
B16@?0@8
v32@?0@8q16^B24
v16@?0@"MPAsyncBlockOperation"8
com.apple.mediaplaybackcore
com.apple.videos-preferences
com.apple.airplay
MusicLowBandwidthResolution
MusicHighBandwidthResolution
MusicDownloadResolution
MusicEQPresetName
MusicRepeatSetting
MusicShuffleSetting
MusicSoundCheckEnabledSetting
SpatialAudioPreference
PrefersSpatialDownloads
ShowLosslessAudio
DisableAudioAnalysis
DisableAssetCaching
DisableMiniSINF
DisablePeriodicRestore
DisableQHO
ForceMusicResolution
ForcedMusicResolution
ForceMusicStreaming
ForceLibrarySupplemental
IncludeContentItemDebugFields
ProgressiveDownloadAssetRatio
QHOMaximumSize
ShowDebugUI
SpeakerRouteEnabled
AssetURLExpirationDuration
PlaybackAuthorizationTokenHalfLifeDuration
ActivationDelay
ForwardBufferDuration
PrerollEnabled
MPCPlaybackPrivateListeningEnabled
PlaybackQuality
PlaybackQualityCellular
MusicAllowsCellularData
MusicAllowsHighQualityStreamingOnCellular
BufferedSurroundSwitch
BufferedLosslessSwitch
MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification
MPPlaybackUserDefaultsMusicEQPresetDidChangeNotification
MPPlaybackUserDefaultsMusicRepeatTypeDidChangeNotification
MPPlaybackUserDefaultsMusicShuffleTypeDidChangeNotification
MPPlaybackUserDefaultsPrivateListeningEnabledDidChangeNotification
MPPlaybackUserDefaultsSoundCheckEnabledDidChangeNotification
com.apple.MediaPlayer/MPPlaybackUserDefaults
v16@?0@"ICMutableUserIdentityProperties"8
BestQuality
Acoustic
BassBooster
BassReducer
Classical
Dance
Deep
Electronic
Flat
HipHop
Jazz
Latin
Loudness
Lounge
Piano
R & B
Rock
SmallSpeakers
SpokenWord
TrebleBooster
TrebleReducer
VocalBooster
LateNightMode
EQ_ACOUSTIC
EQ_BASS_BOOSTER
EQ_BASS_REDUCER
EQ_CLASSICAL
EQ_DANCE
EQ_DEEP
EQ_ELECTRONIC
EQ_FLAT
EQ_HIPHOP
EQ_JAZZ
EQ_LATIN
EQ_LOUDNESS
EQ_LOUNGE
EQ_PIANO
EQ_POP
EQ_RANDB
EQ_ROCK
EQ_SMALL_SPEAKERS
EQ_SPOKEN_WORD
EQ_TREBLE_BOOSTER
EQ_TREBLE_REDUCER
EQ_VOCAL_BOOSTER
EQ_LATE_NIGHT
com.apple.mobileipod-prefsChanged
com.apple.airplay.prefsChanged
com.apple.song
com.apple.radio-station
com.apple.audiobook
com.apple.podcast
com.apple.audio-podcast
com.apple.video-podcast
com.apple.show
com.apple.music-video
public-audio
public-movie
public.audiovisual-content
v16@?0@"<MPMusicPlayerControllerSystemServer>"8
music://show-now-playing
MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
MPCloudServiceStatusControllerFairPlaySubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerMatchStatusDidChangeNotification
MPCloudServiceStatusControllerPurchaseHistoryEnabledDidChangeNotification
MPCloudServiceStatusControllerShouldPlaybackRequireSubscriptionLeaseDidChangeNotification
MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidBeginNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidEndeNotification
MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerUserInfoKeyLeaseEndReasonType
_MPCloudServiceStatusControllerMatchStatus
_MPCloudServiceStatusControllerSubscriptionAvailability
com.apple.mediaplayer.MPCloudServiceStatusController.global.serial.queue
com.apple.MediaPlayer.MPCloudServiceStatusController.accessQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.calloutQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.cloudLibraryStatusAccessQueue
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
 [%@]
v16@?0@"MPCloudServiceStatusController"8
v28@?0@"NSError"8B16B20B24
filterPredicates
groupingType
filteringDisabled
entityOrder
staticEntityIdentifiers
staticEntityType
includeNonLibraryEntities
Title
Album
Artist
AlbumArtist
Composer
Playlist
PodcastTitle
SeriesName
SeasonName
AudioBookTitle
AlbumPersistentID
AlbumByArtist
(unknown: %i)
Physical
Sorted
Item
Collection
preview
size
MPExclusiveAccessToken.m
Exclusive access not for this owner %@ != %@
Exclusive access failed
v16@?0@"MPModelStoreAsset"8
%02d
:%02d
com.apple.MediaPlayer.MPModelVerifyLocalFileAssetIntegrityRequest.operationQueue
<%@: %p> %@, %@
 ordered by %@
 with sort direction=%@
filter predicates must be an NSSet
approveAll
approve
cancel
decline
followRequest
followRequests
actionType
MPStoreItemImportTrackData.m
we should have a complete set of metadata here.
v32@?0@"NSDictionary"8Q16^B24
AssetLoadDuration
AssetLoadError
SecureKeyBlockingLoadCount
SecureKeyLoadCount
SecureKeyMaxLoadDuration
SecureKeyError
TracklistLoadRequired
TracklistLoadDuration
TracklistLoadError
PlaybackEndError
EndReason
StartupState
NetworkInterfaceChangeCount
NetworkInterfaceStart
MPModelForYouRecommendationItemPropertyItemType
MPModelForYouRecommendationItemPropertyURL
MPModelForYouRecommendationItemPropertyReason
MPModelForYouRecommendationItemPropertyUtterance
MPModelForYouRecommendationItemRelationshipAlbum
MPModelForYouRecommendationItemRelationshipPlaylist
MPModelForYouRecommendationItemRelationshipRadioStation
MPModelForYouRecommendationItemPropertyBackedByStoreItemMetadata
MPModelForYouRecommendationItemPropertyParentGroup
MPModelForYouRecommendationItemPropertySubgroupIndex
MPModelForYouRecommendationItemRelationshipSubgroup
com.apple.amp.mediaplayer
Default
Artwork
Assistant
Assistant_Oversize
CloudController
Download
Download_Oversize
HomeSharing
InternalSettings
InternalSettings_Oversize
Library
Library_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
RemoteControl
RemoteControl_Oversize
Routing
ServerObjects
ServerObjects_Oversize
SDKLibrary
SDKLibrary_Oversize
SDKPlayback
Volume
Preferences
MPMediaAPICollectionItemMetadataRequestErrorDomain
&omit[resource]=autos&include[songs]=artists,albums&meta=vacToken,api&format[resources]=map
?omit[resource]=autos&include[songs]=artists,albums&meta=vacToken,api&include[playlists]=tracks&format[resources]=map&extend[playlists]=versionHash&limit[tracks]=300
?omit[resource]=autos&include[songs]=artists,albums&meta=vacToken,api&include[albums]=tracks&format[resources]=map&extend[albums]=versionHash&limit[tracks]=300
MPRTCReportingControllerErrorDomain
UNDETERMINED
FILE
AssetType
UNKNOWN
AUDIO
VIDEO
MediaAVType
QueueUniqueID
QueueSource
app.%@.unknown
com.apple.MediaPlayer.MPModelLibraryPlaylistEditChangeRequestOperation.accessQueue
v224@?0{PropertyCache=^^?{unordered_map<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::allocator<std::pair<mlcore::ModelProperty<mediaplatform::Data> *const, mediaplatform::Data>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<std::string> *, std::string, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::allocator<std::pair<mlcore::ModelProperty<std::string> *const, std::string>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::hash<mlcore::ModelProperty<std::string> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::hash<mlcore::ModelProperty<std::string> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<double> *, double, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, std::allocator<std::pair<mlcore::ModelProperty<double> *const, double>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::equal_to<mlcore::ModelProperty<double> *>, std::hash<mlcore::ModelProperty<double> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<double> *, double>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::equal_to<mlcore::ModelProperty<double> *>, std::hash<mlcore::ModelProperty<double> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<int> *, int, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, std::allocator<std::pair<mlcore::ModelProperty<int> *const, int>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::equal_to<mlcore::ModelProperty<int> *>, std::hash<mlcore::ModelProperty<int> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *, int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::equal_to<mlcore::ModelProperty<int> *>, std::hash<mlcore::ModelProperty<int> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<long long> *, long long, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, std::allocator<std::pair<mlcore::ModelProperty<long long> *const, long long>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::equal_to<mlcore::ModelProperty<long long> *>, std::hash<mlcore::ModelProperty<long long> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::equal_to<mlcore::ModelProperty<long long> *>, std::hash<mlcore::ModelProperty<long long> *>, true>>=f}}}^^?}8
v24@?0Q8@"NSError"16
MPModelLibraryPlaylistEditChangeRequestOperationErrorDomain
MPModelLibraryTransientStateControllerDidChangeNotification
com.apple.MediaPlayer.MPModelLibraryTransientStateController.accessQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.notificationQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.operationQueue
v32@?0@"_MPModelLibraryRegisteredTransientState"8Q16^B24
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
com.apple.MediaPlayer.MPNowPlayingInfoCenter/serviceQueue
MPNowPlayingInfoCenter.m
Cannot have two MPNowPlayingInfoCenters for the same playerPath: %@
com.apple.MediaPlayer.MPNowPlayingInfoCenter/accessQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/calloutQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/utilityQueue
-init is not supported, use +defaultCenter
MediaRemote
@"MPArtworkCatalog"8@?0
MPNowPlayingInfoCenter was invalidated
CIIR: Mismatch in contentItemIdentifiers=%ld, loadedContentItemsRange=%ld, previousContentItemIDCount=%ld, dataSourceContentItemIDs=%ld, replacementRange: [(_loaded) %@ : (loaded) %@] => (replacement) %@
v24@?0@"NSArray"8q16
MPNowPlayingPlaybackQueueDataSource produced content item does not match requested identifier: requestedID=%@ contentItemID=%@
MPNowPlayingPlaybackQueueDataSource getTransportablePlaybackSessionRepresentationWithCompletion completion was released without being called.
v24@?0@"MPNowPlayingInfoTransportableSessionResponse"8@"NSError"16
<missing queue identifier>
transportablePlaybackSession
v24@?0@"NSData"8@"NSError"16
IPQI: Mismatch in contentItemIdentifiers (%ld) and loadedContentItemsRange (%ld)
v32@?0@"NSString"8@"MPNowPlayingContentItem"16^B24
v16@?0^^v8
v24@?0^v8@?<v@?^{__CFError=}>16
v32@?0^v8^{__CFError=}16@?<v@?^{__CFError=}>24
v24@?0^v8@?<v@?^v^{__CFError=}>16
^v16@?0^v8
^v16@?0^{__CFString=}8
^v24@?0q8^v16
v32@?0^v8^v16@?<v@?^{__CFError=}>24
image/jpeg
v48@?0@"MPNowPlayingContentItem"8@"NSData"16{CGSize=dd}24@"NSError"40
v24@?0@"MPNowPlayingInfoLyricsItem"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
_playerPath
contentItemIDs
loadedRange
requestedRange
cachedContentItems
mutatedContentItems
mutatedPlaybackQueueRequests
nowPlayingContentItem
nowPlayingInfo
queuedNowPlayingInfo
identifier
_MPNowPlayingCollectionInfoKeyTitle
_MPNowPlayingCollectionInfoKeyIdentifiers
_MPNowPlayingCollectionInfoKeyCollectionType
_MPNowPlayingCollectionInfoCollectionTypePlaylist
_MPNowPlayingCollectionInfoCollectionTypeAlbum
_MPNowPlayingCollectionInfoCollectionTypeRadio
_MPNowPlayingInfoCenterPlaybackQueueDidChangeNotification
_MPNowPlayingContentItemsDidChangeNotification
v@:@
v@:B
v@:c
v@:i
v@:s
v@:l
v@:q
v@:C
v@:I
v@:S
v@:L
v@:Q
v@:f
v@:d
v32@?0^{objc_property=}8:16:24
<%@: %p identifiers=%@ properties=%@>
identifiers
original
oids
MPModelObject.m
classesForSecureCoding cannot contain NSObject
Attempt to retrieve enforced uninitialized property: %@
Attempt to set enforced property after initialization: %@
__%@_KEY
v24@?0^{objc_property=}8^B16
[MPModelKind class]
v16@?0@"MPModelKind"8
<%@: %@>
modelClass
Must have produced a model kind!
_MPNowPlayingInfoPropertyArtworkData
_MPNowPlayingInfoPropertyArtworkMIMEType
MPNowPlayingInfoPropertyChapterCount
MPNowPlayingInfoPropertyAvailableLanguageOptions
MPNowPlayingInfoPropertyCurrentLanguageOption
MPNowPlayingInfoCollectionIdentifier
_MPNowPlayingInfoPropertyCollectionInfo
MPNowPlayingInfoPropertyChapterNumber
MPNowPlayingInfoPropertyElapsedPlaybackTime
_MPNowPlayingInfoPropertyIsSharable
_MPNowPlayingInfoPropertyIsAdvertisement
MPNowPlayingInfoPropertyIsLiveStream
_MPNowPlayingInfoPropertyIsBanned
_MPNowPlayingInfoPropertyIsLiked
_MPNowPlayingInfoPropertyIsMusicApp
_MPNowPlayingInfoPropertyIsVideosApp
MPNowPlayingInfoPropertyPlaybackQueueCount
MPNowPlayingInfoPropertyPlaybackQueueIndex
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyAppMetrics
_MPNowPlayingInfoPropertyIsSteerable
_MPNowPlayingInfoPropertyProhibitsSkip
_MPNowPlayingInfoPropertyRadioStationIdentifier
_MPNowPlayingInfoPropertyRadioStationHash
_MPNowPlayingInfoPropertyRadioStationName
_MPNowPlayingInfoPropertyRadioStationStringIdentifier
_MPNowPlayingInfoPropertyiTunesStoreIdentifier
_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier
_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier
_MPNowPlayingInfoPropertyRepeatMode
_MPNowPlayingInfoPropertyShuffleMode
_MPNowPlayingInfoPropertyPurchaseInfoData
_MPNowPlayingInfoPropertyIsLoading
_MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalUserProfileIdentifier
MPNowPlayingInfoPropertyServiceIdentifier
MPNowPlayingInfoPropertyPlaybackProgress
MPNowPlayingInfoPropertyMediaType
MPNowPlayingInfoPropertyAssetURL
MPNowPlayingInfoPropertyCurrentPlaybackDate
_MPNowPlayingInfoPropertyArtworkIdentifier
_MPNowPlayingInfoPropertySupportsIsBanned
_MPNowPlayingInfoPropertySupportsIsLiked
_MPNowPlayingInfoPropertySupportsFastForward15Seconds
_MPNowPlayingInfoPropertySupportsRewind15Seconds
_MPNowPlayingInfoPropertySupportsWishlisting
Cancel
Destructive
Unknown/%ld
<%@: %p title="%@" type=%@ event=%@>
<%@: %p title="%@" message="%@" actions=%@>
@"MPRemoteCommandHandlerDialogAction"16@?0@"MRSendCommandHandlerDialogAction"8
<%@ %p subscriptionStatusObject: %@>
HomeSharingML3DataProviderCredentialsDidChangeNotification
libraryDataProvider
SharingDisabled
com.apple.mobileipod.containerfill
com.apple.MediaPlayer.MPHomeSharingML3DataProvider/serialQueue
Library.itdb
daap.songbookmark
daap.songuserrating
daap.songuserplaycount
daap.songuserskipcount
com.apple.itunes.liked-state
Tokens
Unable to determine groupID
@"MPArtworkCatalog"16@?0@"MPModelCurator"8
live
elapsed
duration
state
item
itemID
artworkID
count
inserted
removed
http
&daap-no-disconnect=1
HomeSharingURLProtocolErrorDomain
&hsgid=%@
&hs-mobile-device-client=1
text/plain
Client-Daap-Validation
Client-Daap-Request-Id
com.apple.MPMediaLibraryArtworkRequest.accessQueue
<%@:%p libraryID=%llu entityType=%ld artworkType=%ld
 retrievalTime=%f
v32@?0@"NSString"8@"NSString"16q24
MPMediaLibraryArtworkErrorDomain
Unknown artwork source type.
Unknown artwork source type for artwork info request.
collection
genre
composer
chapter
artistHero
cloud
sync
purchase
store
Unknown-PersonID
PayloadData
PersonID
@"MSVSQLDatabase"8@?0
com.apple.MediaPlayer/ServerObjectDatabases/%@-ServerObjectDatabase.sqlpkg
_MP_CLEAR_SOD
ServerObjectDatabase.sqlpkg
Database
MPServerObjectDatabase.m
Cannot have a source without a payload.
PropertySet does not contain mapping for %@
DELETE FROM playback_authorization_token WHERE person_id=@personID
@personID
SELECT child_identifier FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey ORDER BY suborder
@parentIdentifier
@childKey
versionHash != nil
SELECT child_identifier, token FROM object_relationships LEFT OUTER JOIN playback_authorization_token ON child_identifier = identifier WHERE parent_identifier = @parentIdentifier AND object_relationships.person_id = @personID AND child_key = @childKey AND parent_version_hash = @parentVersionHash ORDER BY suborder
@parentVersionHash
vacToken
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND url_expiration_date > @now
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND LENGTH(mini_sinf) > 1 AND url_expiration_date > @now
Glide
SELECT half_life_expiration_date FROM playback_authorization_token WHERE identifier=@identifier
@identifier
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE mini_sinf IS NULL AND sinfs is NULL AND hashed_person_id = @hashedPersonID AND cast(identifier AS INT) != 0
@hashedPersonID
SELECT payload FROM objects WHERE identifier = @identifier AND person_id = @personID AND source = @source LIMIT 1
@source
com.apple.MediaPlayer.MPServerObjectDatabase/accessQueue
SOD: Unable to create server objects database in-memory
SOD: Unable to create database schema on disk or in-memory.
CREATE TABLE IF NOT EXISTS objects (identifier TEXT NOT NULL, person_id TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, expiration_date INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, payload TEXT, PRIMARY KEY (identifier, person_id)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS assets (identifier TEXT NOT NULL, hashed_person_id TEXT NOT NULL, flavor TEXT NOT NULL, url TEXT NOT NULL, url_expiration_date INTEGER NOT NULL DEFAULT 0, mini_sinf BLOB, sinfs BLOB, PRIMARY KEY (identifier, hashed_person_id, flavor)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS object_relationships (parent_identifier TEXT NOT NULL, child_identifier TEXT NOT_NULL, person_id TEXT NOT NULL, suborder INTEGER NOT NULL DEFAULT 0, child_key TEXT NOT NULL, parent_version_hash TEXT, PRIMARY KEY (parent_identifier, child_identifier, person_id), UNIQUE (parent_identifier, child_identifier, person_id, child_key)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS playback_authorization_token (identifier TEXT NOT NULL, person_id TEXT NOT NULL, token TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, half_life_expiration_date INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (identifier)) WITHOUT ROWID
SELECT source, payload FROM objects WHERE identifier = @identifier AND person_id = @personID LIMIT 1
SELECT token FROM playback_authorization_token WHERE identifier = @identifier
MPServerObjectDatabaseImport-
SELECT payload FROM objects WHERE source = @source AND identifier = @identifier AND person_id = @personID LIMIT 1
INSERT OR REPLACE INTO objects (identifier, person_id, source, expiration_date, type, payload) VALUES (@identifier, @personID, @source, @expirationDate, @type, @payload)
INSERT OR REPLACE INTO assets (identifier, hashed_person_id, flavor, url, url_expiration_date) VALUES (@identifier, @hashedPersonID, @flavor, @url, @urlExpirationDate)
INSERT OR REPLACE INTO playback_authorization_token (identifier, person_id, token, type, source, half_life_expiration_date) VALUES (@identifier, @personID, @token, @type, @source, @halfLifeExpirationDate)
INSERT OR REPLACE INTO object_relationships (parent_identifier, child_identifier, person_id, child_key, suborder, parent_version_hash) VALUES (@parentIdentifier, @childIdentifier, @personID, @childKey, @suborder, @parentVersionHash)
DELETE FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey
UPDATE assets SET mini_sinf = @miniSINF WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
UPDATE assets SET sinfs = @sinfs WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
UPDATE assets SET url = @url, url_expiration_date = @urlExpirationDate WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
Cannot import an object without a personID
_MPSOD_mergeCount
@type
@expirationDate
@payload
Cannot import an asset without a personID
@flavor
@url
@urlExpirationDate
Cannot import an asset without personID
Cannot import an asset without identifier
Cannot import an asset without sinfData
Cannot import sinf with invalid type
@token
@halfLifeExpirationDate
childKey
Cannot relate without a personID
@childIdentifier
@suborder
Cannot remove relationships without a personID
@miniSINF
@sinfs
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
@now
UNDEF
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
unknown
<%@: %p hashedPersonID=%@ identifier=%@ flavor=%@ miniSinf=%lld bytes sinf2=%lld bytes url=%@
plus
lightweight
LWHQ
databaseID
com.apple.mobileipod.home-sharing-rental-tracker
Media/HomeSharingRentals.plist
MPHomeSharingRentalTracker.m
attempted to add rental with item ID: %llu, databaseID: %@
attempted to remove rental with no item ID
SSRentalCheckinRequest
yyyy-MM-dd'T'HH:mm:ss'Z'
RECENTLY_PLAYED_VIEW_TITLE
recently-played
stringForDisplay
contents
href
isGroupRecommendation
Utterance
traits
lastModifiedDate
recommendations
showAllTVShows
keybag
token
family
SSAuthorizationRequest
MPRemoteCommandCenterCommandsDidChangeNotification
MPRemoteCommandCenterCommandHandlersRegisteredNotification
LaunchCommandBuilder
@"NSArray"16@?0@"MPRemoteCommand"8
MPRemoteCommandCenter.m
Cannot have two MPRemoteCommandCenters for the same playerPath: %@
com.apple.MediaPlayer.MPRemoteCommandCenter
MPRemoteCommandCenter:
command
v16@?0@?<v@?>8
q24@?0@"MPRemoteCommand"8@"MPRemoteCommand"16
Attempted to create remote command object of unknown class %@
B32@?0@"MPRemoteCommand"8Q16^B24
activeCommands
canBeNowPlayingApplication
pendingEventsCount
@16@?0@"MPRemoteCommandStatus"8
v28@?0I8@"NSDictionary"12@?<v@?@"NSArray">20
v16@?0@"HSResponse"8
SSRentalCheckoutRequest
MPModelPropertyHomeSharingAssetAvailable
MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL
MPModelPropertyHomeSharingAssetURL
MPStoreItemLibraryImportMetadataKeyAlbumLikedState
MPStoreItemLibraryImportMetadataKeyTrackLikedState
MPAVTelevisionRoute.m
television
MPStoreLibraryMappingRequestOperation.mm
Library view must not be nil.
v32@?0{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}8@"NSError"24
data
LOADING_AUDIO_LABEL
Song
PlaylistEntry
TVEpisode
TVSeason
TVShow
MediaClip
PodcastEpisode
RadioStation
SocialPerson
RadioStationEvent
RecordLabel
Group
UnknownGenericObjectType-%ld
GenericObject:k
%@-%p
v16@?0@"MPModelGenericObjectKind"8
generic %@
any generic (%@)
; or 
relationshipKinds
MPModelRelationshipGenericAlbum
MPModelRelationshipGenericArtist
MPModelRelationshipGenericPlaylist
MPModelRelationshipGenericPlaylistEntry
MPModelRelationshipGenericSong
MPModelRelationshipGenericTVEpisode
MPModelRelationshipGenericTVSeason
MPModelRelationshipGenericTVShow
MPModelRelationshipGenericMovie
MPModelRelationshipGenericMediaClip
MPModelRelationshipGenericPodcast
MPModelRelationshipGenericPodcastEpisode
MPModelRelationshipGenericRadioStation
MPModelRelationshipGenericRadioStationEvent
MPModelRelationshipGenericComposer
MPModelRelationshipGenericGenre
MPModelRelationshipGenericCurator
MPModelRelationshipGenericSocialPerson
MPModelRelationshipGenericRecordLabel
MPModelRelationshipGenericGroup
MPModelGenericObject.m
Cannot provide relationship key for unknown generic object type.
Unsupported generic object type: %ld
MPModelObject mergeWithObject: called with a different object class: %@ %@
MPModelObject mergeWithObject: called with a different generic relationship type: %@ %@
Info
plist
UIBackgroundModes
audio
index
section
indexes
sections
; %lu inserted %@
; %lu deleted %@
; %lu updated %@
; %lu moved %@
; %lu updated moves %@
items
; none [UNNECESSARY]
; inserted %@ %@
; deleted %@ %@
; updated %@ %@
; %@ moves %@
; %@ updated moves %@
; inserted items %@
; deleted items %@
; updated items %@
; item moves %@
; updated item moves %@
MPChangeDetails.m
Attempt to mutate immutable change details
v24@?0@"NSIndexPath"8@"NSIndexPath"16
v32@?0@"NSNumber"8@"NSNumber"16^B24
v28@?0@"NSIndexPath"8@"NSIndexPath"16B24
v32@?0@"NSIndexPath"8@"NSIndexPath"16^B24
-isValidForPreviousCount:finalCount:reason: can only be used with a flat collection change details
[INVALID CHANGE DETAILS] deletedSections.lastIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] insertedSections.lastIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] move.fromIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] move.toIndex out of bounds: %ld/%ld
MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)
operationCount
isEqualBlock
Not enough operationCapacity
<MPChangeDetailOperation type=none>
<MPChangeDetailOperation type=delete previousIndex=%d>
<MPChangeDetailOperation type=insert finalIndex=%d>
<MPChangeDetailOperation type=replace previousIndex=%d finalIndex=%d>
<MPChangeDetailOperations {
void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)
Invalid operation type MPChangeDetailOperationTypeDelete
Invalid operation type MPChangeDetailOperationTypeInsert
Invalid operation type MPChangeDetailOperationTypeReplace
void _MPChangeDetailOperationNodeRelease(MPChangeDetailOperationNode *)
Overrelease of Operation
MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)
existingOperations
startNode
%llu
<unknown-store-id>
MediaRemoteLanguageOption/%@/%@ "%@"
NULL
MPCloudControllerErrorDomain
MPCloudControllerEnableCloudLibraryOptionStartInitialImport
MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary
MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification
MPCloudControllerCanShowCloudTracksDidChangeNotification
MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
MPCloudControllerIsCellularDataRestrictedDidChangeNotification
MPCloudControllerIsCloudEnabledDidChangeNotification
MPCloudControllerCloudLibraryFailureDidChangeNotification
MPCloudControllerIsGeniusEnabledDidChangeNotification
MPCloudControllerIsUpdateInProgressDidChangeNotification
MPCloudControllerCloudAddToPlaylistBehaviorDidChangeNotification
com.apple.mediaplayer.MPCloudController.global.serial.queue
com.apple.mobileipod
com.apple.videos
com.apple.itunescloudd
com.apple.iBooks
com.apple.springboard
com.apple.tv
com.apple.Carousel
com.apple.NanoMusic
com.apple.SessionTrackerApp
com.apple.podcasts
com.apple.NanoBooks
MPCloudController.m
Attempting to access a method only available for multi user device
com.apple.mediaplayer.MPCloudController.serial.queue
com.apple.mediaplayer.MPCloudController.cloudClient.callback.queue
v16@?0@"MPCloudController"8
v24@?0@"ICUserIdentityProperties"8@"NSError"16
EnhancedAudioAvailable
daap.incrementplaycount
com.apple.itunes.cloud-artwork-token
v32@?0@"NSString"8@16^B24
daap.incrementskipcount
dmap.itemhidden
Cannot set cloud properties for groupingType=%ld properties=%@
One-off loading not supported for artworkType=%ld, sourceType=%ld
Artwork info loading failed. No artwork URL found in the artwork info dictionary for item with persistent ID %lld
Artwork info loading failed. Got no artwork info dictionary for item with persistent ID %lld
v16@?0@"NSDictionary"8
Artwork info loading not supported for artworkType=%ld, sourceType=%ld
v32@?0@"NSString"8@"MPCloudController"16^B24
MLCloudAccountAddToPlaylistBehavior
Invalid update reason: %ld
-[MPCloudController fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:]
completion
v12@?0B8
v16@?0B8B12
MPQueuePlayerCurrentItemObservationContext
MPQueuePlayerExternalPlaybackActiveObservationContext
MPQueuePlayerRateObservationContext
MPQueuePlayerStatusObservationContext
MPQueuePlayerInsufficientExternalProtectionContext
com.apple.MediaPlayer.MPQueuePlayer.accessQueue
rate
outputObscuredDueToInsufficientExternalProtection
rawRate
AVPlayerStatusUnknown
AVPlayerStatusFailed
AVPlayerStatusReadyToPlay
com.apple.MediaPlayer.MPQueuePlayer.periodicTimeObserverSerialQueue
v32@?0{?=qiIq}8
curator
MPModelPropertyPersonName
MPModelPropertyPersonHasSocialPosts
MPModelPropertyCuratorShortName
MPModelPropertyCuratorEditorNotes
MPModelPropertyCuratorShortEditorNotes
MPModelPropertyCuratorKind
MPModelPropertyCuratorSubKind
MPModelPropertyCuratorEditorialArtwork
MPModelPropertyCuratorBrandLogoArtwork
MPModelPropertyCuratorHandle
com.apple.MediaPlayer.MPStoreModelRequestOperation.accessSerialQueue
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
errors
Failed to get response body objects for each request in the compound URL load group.
v16@?0@"ICMusicKitRequestContext"8
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequest.sharedQueue
v32@?0@8@"NSIndexPath"16^B24
v16@?0@"MPModelPlaylistEntry"8
Playlist:v%lu:o%lu:pe%p
v16@?0@"MPModelPlaylistKind"8
smart
genius
subscribed
administered
personal mix
 or 
 or folders
mutable 
non-empty 
 containing %@
playlistEntryKind
playlist %@
MPModelPropertyPlaylistName
MPModelPropertyPlaylistDescriptionText
MPModelRelationshipPlaylistCurator
MPModelPropertyPlaylistHasCleanContent
MPModelPropertyPlaylistHasExplicitContent
MPModelPropertyPlaylistCuratorPlaylist
MPModelPropertyPlaylistIsOwner
MPModelPropertyPlaylistPublicPlaylist
MPModelPropertyPlaylistVisiblePlaylist
MPModelPropertyPlaylistSubscribed
MPModelPropertyPlaylistUserEditableComponents
MPModelPropertyPlaylistType
MPModelPropertyPlaylistTrackCount
MPModelPropertyPlaylistEditorNotes
MPModelPropertyPlaylistShortEditorNotes
MPModelPropertyPlaylistShareURL
MPModelPropertyPlaylistShareShortURL
MPModelPropertyPlaylistReleaseDateComponents
MPModelPropertyPlaylistLastModifiedDateComponents
MPModelPropertyPlaylistArtwork
MPModelPropertyPlaylistEditorialArtwork
MPModelPropertyPlaylistLibraryAdded
MPModelPropertyPlaylistLibraryAddedDate
MPModelPropertyPlaylistTracksTiledArtwork
MPModelPropertyPlaylistKeepLocalEnableState
MPModelPropertyPlaylistKeepLocalManagedStatus
MPModelPropertyPlaylistLastDevicePlaybackDate
MPModelPropertyPlaylistCloudVersionHash
MPModelPropertyPlaylistVersionHash
MPModelPropertyPlaylistDownloadedDate
MPModelPropertyPlaylistTraits
MPModelChildPlaylistEntries
MPModelPlaylist
com.apple.MPStoreSocialRequestOperation.accessQueue
Content-Type
success
application/x-www-form-urlencoded
application/json; charset=utf-8
DELETE
MPNetworkPlayabilityMonitorNetworkTypeDidChangeNotification
MPNetworkPlayabilityMonitorEffectiveNetworkTypeForPlaybackDidChangeNotification
com.apple.MediaPlayer.MPNetworkPlayabilityMonitor
v24@?0@"NSArray"8@"NSError"16
com.apple.mediaplayer.radio.private
com.apple.MediaPlayer.MPRadioControllerServer
com.apple.MediaPlayer/MPRequestResponseController
com.apple.MediaPlayer/MPRequestResponseController.calloutQueue
MPRequestResponseController
MPRequestResponseController.m
Request must be subclass of MPRequest.
request
Response must be subclass of MPResponse.
response
Mismatched begin/endAutomaticResponseLoading.
MPRequestResponseController delegate did not call block passed to defersResponseReplacement.
v16@?0q8
automaticLoad
observers
needsReload
requestID
delegate
pendingResponse
lastError
retryInterval
Must get a response or an error
v24@?0@"MPResponse"8@"NSError"16
MPMediaPlaylist
v24@?0@"MPMediaItem"8^B16
MPAVOutputDeviceRoute.m
outputDevices
MRAVOutputDevice
AudioAccessory
AudioAccessory5
B16@?0^v8
LOCAL
ampMusicAPIDomains
listenNow
carPlayFCKindWhitelist
/v1/editorial
groupings
browseTabGroupingName
radioTabGroupingName
platform
art[editorial-elements:url]
/v1/me/recommendations
timezone
extend
expand
plainEditorialNotes
with
friendsMix
social
voice
types
displayFilter[kind]
action
refresh
extend[albums]
extend[playlists]
/v1/me/recent/played
/v1/me/recent/radio-stations
reason
utterance
artistNameObject
Error
SiriSessionIdentifier
<%@: %p> (
    [%ld] %@ : %@,
v24@?0q8q16
v24@?0Q8^B16
MPQueueFeederIdentifierRegistry.m
Index not found for itemIdentifier: %@
v32@?0@"MPIdentifierSet"8Q16^B24
@"NSDictionary"16@?0^{__CFDictionary=}8
@16@?0^{__CFArray=}8
@16@?0@"NSArray"8
@"NSMutableArray"16@?0^{__CFArray=}8
^{__CFArray=}16@?0@"NSArray"8
@"MPNowPlayingInfoAudioFormat"16@?0@"MRContentItemMetadataAudioFormat"8
@"MRContentItemMetadataAudioFormat"16@?0^v8
v24@?0^v8@"MRContentItemMetadataAudioFormat"16
@"MRContentItemMetadataAudioFormat"16@?0@"MPNowPlayingInfoAudioFormat"8
@"MPNowPlayingInfoAudioRoute"16@?0@"MRContentItemMetadataAudioRoute"8
@"MRContentItemMetadataAudioRoute"16@?0^v8
v24@?0^v8@"MRContentItemMetadataAudioRoute"16
@"NSArray"16@?0^v8
v24@?0^v8@"NSArray"16
prid
clid
ulid
claid
apid
aarpid
arpid
gpid
cpid
peid
ppid
pclid
colLibAdded
libAdded
hsLibLy
klEnable
klStatus
nonPurge
procType
endpt
rembok
lrcsGzpData
purID
shComp
endT
load
hsStLy
hsTSL
cntrUID
libEligible
phold
rdwn
subReq
sfid
urlART
tmpART
lokART
supART
podURL
podSupSub
podShURL
podEpStrURL
podEpShURL
raAttrLbl
raTy
raSty
raPUL
raBID
raPrID
aPly
shLis
eConSt
arUp
noJumpTo
acid
lisHist
_MPContentItemDidChangeUserInfoKeyDeltaRequest
com.apple.MediaPlayer.MPStoreAssetInfoPlaybackCache.accessQueue
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
Genre:a%p
v16@?0@"MPModelGenreKind"8
genres with %@
albumKind
genre %@
MPModelPropertyGenreName
MPModelPropertyGenreArtwork
MPModelPropertyGenreLibraryAddedDate
MPMusicAPIErrorDomain
MPStoreModelRequestTimeoutInterval
MPStoreModelRequestClientIdentifier
MPStoreModelRequestClientVersion
MPStoreModelRequestClientPlatformIdentifier
MPStoreModelRequestAuthenticationOptions
MPModelPropertyPlaybackPositionBookmarkTime
MPModelPropertyPlaybackPositionShouldRememberBookmarkTime
MPModelPropertyPlaybackPositionHasBeenPlayed
MPModelPropertyPlaybackPositionStartTime
MPModelPropertyPlaybackPositionStopTime
MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier
MPModelPropertyPlaybackPositionUserPlayCount
sdVideo
sd480pVideo
720pHdVideo
1080pHdVideo
hlsUrl
<%@: %p, playbackContext=%@>
recoId
moduleType
PERSONALIZED_MIX
FRIENDS_LISTENING
RECOMMEND_FRIENDS
RECENTLY_PLAYED
TODAYS_PLAYLISTS
HEAVY_ROTATION
ALBUM_GROUPS
ARTIST_PLAYLISTS
NEW_RELEASES
ALBUM_RECO
FOR_YOU_PERSONAL_MIXES_TITLE
refreshUrl
children
com.apple.mediaplayer.MPSectionedIdentifierList/accessQueue
arne
positionKey
v32@?0@"MSVPair"8@"_MPSectionedIdentifierListCloneIndexEntry"16^B24
@"_MPSectionedIdentifierListCloneIndexEntry"24@?0@"NSString"8@"NSString"16
v16@?0@"<MPExclusiveAccessToken>"8
MPSectionedIdentifierList.m
Could not find head entry for section identifier: %@
@16@?0@"<MPExclusiveAccessToken>"8
Could not find item entry for identifier: %@
Could not head entry for section identifier: %@
Could not find tail entry for section identifier: %@
Could not find last entry (tailEntry.previous) for section identifier: %@
entryToMove cannot be nil
entryToMoveLatestUserClone cannot be nil
Could not find tail item entry for section identifier: %@
Attempted to begin transaction for section with active transaction: %@
Attempt to end transaction for section without active transaction: %@
Cannot add empty branch
Unsupported position type
No item exists at %@:%@
v32@?0@"NSString"8@"MPSectionedIdentifierListHeadEntry"16^B24
No tail exists for %@
B16@?0@"<MPExclusiveAccessToken>"8
Did not find item %@ to insert after.
Did not find item %@ to move after.
v28@?0q8q16B24
v32@?0{_NSRange=QQ}8^B24
<%@: %p> 
Item: %@ - %@
Head: %@
Tail: %@
musicVideo
tvEpisode
tvSeason
movie
uploadedVideo
SupportsSharedQueue
MPMediaControlsDismissalReasonUnknown
MPMediaControlsDismissalReasonUserCancelled
B24@?0@"NSIndexPath"8@"NSIndexPath"16
MPNetworkObserverIsUsingNetworkDidChangeNotification
MPNetworkObserverIsMusicCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsVideoCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsMusicCellularDownloadingAllowedDidChangeNotification
com.apple.Music
AllowsCellularDataDownloads
MPNetworkObserverInitException
-init is not supported, use +sharedNetworkObserver
com.apple.MediaPlayer.MPNetworkObserver
v12@?0i8
CellularDataMode
-[MPNetworkObserver setMusicCellularDownloadingAllowed:]
AllowAutoDownloadOnCellular
com.apple.itunesstored
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
com.apple.Music-AllowsCellularDataDownloads
com.apple.videos-preferences-changed
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
formerIds
libraryTrackId
sagaId
durationInMillis
@24@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16
assets.@max.duration
@count.children
trackNumber
contentRatingsBySystem.riaa.value
uploadedAudio
offers.type
movementName
releaseDate
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"NSMutableDictionary"24
collectionId
artistId
composer.name
hasTimeSyncedLyrics
@max.children.trackNumber
children.contentRatingsBySystem.riaa.value
@min.self
@max.self
children.offers.type
itunesNotes.standard
itunesNotes.short
classicalUrl
removeFollower
contentType
isUnavailableInAppleMusic
v16@?0@"MPModelPlaylist"8
v16@?0@"MPModelForYouRecommendationItem"8
com.apple.MediaPlayer.MPAVEndpointRoutingDataSource/serialQueue
MPAVEndpointRoutingDataSource.m
ColorSyncProfileCreateWithName
/System/Library/PrivateFrameworks/ColorSync.framework/ColorSync
kColorSyncSRGBProfile
ColorSyncProfileCopyData
disableUPP
com.apple.%@.queue.%p
com.apple.%@.serviceQueue.%p
MP_onServiceQueue_resignActiveService
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/Core/StoreBookkeeper Support/_ios_tvos/MPUbiquitousPlaybackPositionController.m
v32@?0@"SBCPlaybackPositionEntity"8Q16^B24
v28@?0B8@"NSError"12@"NSArray"20
SBCPlaybackPositionEntity
/System/Library/PrivateFrameworks/StoreBookkeeperClient.framework/StoreBookkeeperClient
SBCPlaybackPositionDomain
SBCPlaybackPositionService
_MPContentItemDidChangeNotification
_MPContentItemDidChangeUserInfoKeyDeltaItem
_MPContentItemDidChangeUserInfoKeyImmediately
_MPContentItemNotificationsSuppressedKey
_MPContentItemNotificationsImmediateKey
MPContentItem.m
Can't create an MPContentItem object with a nil identifier.
<%@: %p id=%@ title="%@">
v32@?0@"NSData"8{CGSize=dd}16
unfollowProfile
record label
MPModelPropertyRecordLabelName
MPModelPropertyRecordLabelDescriptionText
MPModelPropertyRecordLabelShortDescriptionText
MPModelPropertyRecordLabelArtwork
MPModelPropertyRecordLabelEditorialArtwork
MPRadioLibraryErrorDomain
MPRadioLibraryStationsDidChangeNotification
RadioModelDidChangeNotification
v32@?0@"RadioStation"8Q16@"NSError"24
RadioAddStationRequest
/System/Library/PrivateFrameworks/Radio.framework/Radio
RadioModel
home-sharing
UserDefault[%@]
Songs
Albums
Clear
Reset
AutoPlay
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
uniqueIdentifier
stationStringID
localizedName
localizedDescription
Received %@
_MPActiveUserChangeMonitor.m
Cancel existing timer before starting a new one.
Must provide a reason for logging.
MPRemoteCommandTargetsDidChangeNotification
MPRemoteCommandEventDidTimeout
com.apple.MediaPlayer/%@
<%@: %p type=%@ (%ld) enabled=%@ handlers=[%@]>
Target was not available for command.
v16@?0@?<v@?@"MPRemoteCommandStatus">8
v24@?0@"MPRemoteCommandEvent"8@?<v@?@"MPRemoteCommandStatus">16
MPRemoteCommand.m
Cannot use extended status with synchronous target/action
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument.
command=%@
CommandHandlerNotCalledBug
Command handler completion deallocated without being called. event=%@
Command handler completion deallocated without being called -- assertion failed
v16@?0@"MPRemoteCommandStatus"8
v32@?0@"NSString"8@?<v@?@"MPRemoteCommandEvent"@?<v@?@"MPRemoteCommandStatus">>16^B24
enabled
hasTargets
supported
MPSystemAppSpecializedQueueProminentStationIdentifier
com.apple.MediaPlayer.MPSetPlaybackQueueCommand/serialQueue
com.apple.MediaPlayer.MPInsertIntoPlaybackQueueCommand/serialQueue
%p:%s
recommendation group
MPModelForYouRecommendationGroupPropertyGroupType
MPModelForYouRecommendationGroupPropertyLastUpdatedDate
MPModelForYouRecommendationGroupPropertySectionedItems
MPModelForYouRecommendationGroupPropertySectionIndex
MPModelForYouRecommendationGroupPropertySubgroups
MPModelForYouRecommendationGroupPropertyTitle
MPModelForYouRecommendationGroupPropertyLoadAdditionalContentURL
MPModelForYouRecommendationGroupPropertyHrefURL
MPModelForYouRecommendationGroupPropertyRefreshURL
MPModelForYouRecommendationGroupPropertyTraits
MPModelForYouRecommendationGroupPropertyDisplaysAsGridCellInCarPlay
MPModelForYouRecommendationGroupPropertyDisplaysAsTitledSectionWithRowsInCarPlay
%lld
PlaylistEntry:k
v16@?0@"MPModelPlaylistEntryKind"8
playlist entries of (%@)
playlist entry %@+%@
MPModelPropertyPlaylistEntryPosition
MPModelRelationshipPlaylistEntryPlaylist
MPModelRelationshipPlaylistEntrySong
MPModelRelationshipPlaylistEntryTVEpisode
MPModelRelationshipPlaylistEntryMovie
MPModelRelationshipPlaylistEntrySocialContributor
_MPModelPropertyPlaylistEntryArtwork
<%@: %p status=%@ unknown>
<%@: %p status=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@ error=%@>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ unknown/type=%ld>
code-%lld|%@
dialog-%lld|%@
error-%lld|%@|%@
custom-%lld|%@|%@
%lld|%@
pageData
fcStructure
model
selectedChart
fcKind
seeAllUrl
link
content
kindIds
pageTitle
kinds
v32@?0@8@16^B24
album
v32@?0@"NSString"8q16^B24
v32@?0@"MPModelStoreBrowseSection"8q16^B24
v16@?0@"MPChangeDetails"8
unAvailableContentIds
v16@?0@"MPStoreItemMetadataCacheKey"8
%@: [Account: %@, Enqueuer: %@, Personalized? %d, Storefront: %@]
com.apple.MediaPlayer.MPStoreItemMetadataCacheKey
https:///
v24@?0@"NSURLRequest"8@"NSError"16
property
comparisonType
MPModelStoreBrowseSectionPropertyTitle
MPModelStoreBrowseSectionPropertyType
MPModelStoreBrowseSectionPropertyLoadAdditionalContentURL
MPModelStoreBrowseSectionPropertyUniformContentItemType
MPModelStoreBrowseSectionPropertyMemberOfChartSet
MPModelStoreBrowseSectionPropertyBrick
MPModelStoreBrowseSectionPropertyPreviouslyRetrievedNestedResponse
MPModelStoreBrowseSectionPropertyDisplaysAsGridCellInCarPlay
MPModelStoreBrowseSectionRelationshipRadioStation
properties
;%@%lu %@
relationship
relationships
%@: %@%@
MPPropertySetProperties
MPPropertySetRelationships
<EMPTY>
v32@?0@"NSString"8@"MPStoreItemMetadata"16^B24
TVSeason:e%p
v16@?0@"MPModelTVSeasonKind"8
seasons with %@
episodeKind
TV season %@
MPModelPropertyTVSeasonNumber
Season %ld 
MPModelPropertyTVSeasonDescriptionText
MPModelPropertyTVSeasonYear
MPModelPropertyTVSeasonEpisodesCount
MPModelPropertyTVSeasonHasCleanContent
MPModelPropertyTVSeasonHasExplicitContent
MPModelPropertyTVSeasonLibraryAddedDate
MPModelPropertyTVSeasonLibraryAdded
MPModelPropertyTVSeasonLibraryAddEligible
MPModelPropertyTVSeasonSortType
MPModelRelationshipTVSeasonShow
MPModelRelationshipTVSeasonRepresentativeEpisode
MPModelPropertyTVSeasonArtwork
MPModelPropertyTVSeasonDownloadedDate
DONE
CANCEL
, searchString = %@
, scopes = %@
MPModelLibrarySearchRequestMaximumResultsPerScope
MPModelLibrarySearchRequestScopes
MPModelLibrarySearchRequestSearchString
unknown property type
v64@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40@"MPIdentifierSet<MPMutableIdentifierSet>"56
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}32@?0@"MPMediaLibraryEntityTranslationContext"8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16
storeID
cloudID
cloudUniversalLibraryID
excludeFromShuffle
subscriptionStoreID
syncID
reportingStoreItemID
assetStoreItemID
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
void _MPMLInitPropertySongMap()_block_invoke
MPMediaLibraryTranslatorSchema.mm
Must have song kind to generate song entity query.
_MPMLInitPropertySongMap_block_invoke
{vector<std::shared_ptr<mlcore::Predicate>, std::allocator<std::shared_ptr<mlcore::Predicate>>>=^v^v{__compressed_pair<std::shared_ptr<mlcore::Predicate> *, std::allocator<std::shared_ptr<mlcore::Predicate>>>=^v}}16@?0@"NSArray"8
userRating
titleOrder
hasTrackNumber
classicalMovement
classicalMovementNumber
volumeNormalization
durationInSamples
gaplessHeuristicInfo
gaplessEncodingDrain
relativeVolume
time
itemPID
mediaType
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSourceType
hlsAudioCapability
masteredForiTunes
libraryAdded
downloadedDate
datePlayed
hasNonPurgeableAsset
keepLocal
keepLocalStatus
@"MPArtworkCatalog"16@?0@"MPModelObject"8
location
baseLocationPath
hasStreamingAsset
protected
hasLoFiStreamingAsset
hlsTraits
matchRedownloadParams
purchaseHistoryRedownloadParams
storeCloudID
purchaseHistoryID
cloudAssetAvailable
endpointType
storeAdamID
isAUC
episodeType
void _MPMLInitPropertyAlbumMap()_block_invoke_4
Must have album kind to generate album entity query.
_MPMLInitPropertyAlbumMap_block_invoke_4
isPreOrder
dateReleased
datePlayedLocal
representativeItemExplicit
appData
@"NSNumber"24@?0@"MPModelAlbum"8@"MPIdentifierSet"16
void _MPMLInitPropertyPlaylistMap()_block_invoke_5
Must have playlist kind to generate playlist entity query.
nameOrder
isTracklistUserEditable
isSmart
isGenius
isSubscribed
shareURL
playlistPID
@"NSArray"16@?0Q8
dateModified
isFolder
shouldDisplayIndex
isPersonalMix
externalVendorName
void _MPMLInitPropertyArtistMap()_block_invoke_4
Must have artist kind to generate artist entity query.
hasName
artistPID
artistAvailableArtworkToken
artistFetchableArtworkToken
artistFetchableArtworkSourceType
void _MPMLInitPropertyComposerMap()_block_invoke_3
Must have composer kind to generate composer entity query.
void _MPMLInitPropertyGenreMap()_block_invoke_3
Must have Genre kind to generate Genre entity query.
itemPid
void _MPMLInitPropertyPlaylistEntryMap()_block_invoke_5
Attempted to query playlist entries without scoping to a playlist.
Must have PlaylistEntry kind to generate PlaylistEntry entity query.
position
B40@?0@"MPMediaLibraryEntityTranslationContext"8^v16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24
library()->isValid()
performQuery
/AppleInternal/Library/BuildRoots/a2865b39-8e69-11ec-bbad-4e67803e3fd9/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator15.4.Internal.sdk/System/Library/PrivateFrameworks/MediaLibraryCore.framework/PrivateHeaders/LibraryView.hpp
Library must be validated before use
cloudKVSBookmarkTime
cloudKVSKey
stopTime
cloudKVSHasBeenPlayed
cloudKVSPlayCount
void _MPMLInitPropertyPodcastMap()_block_invoke_3
Must have podcast kind to generate podcast entity query.
feedURL
externalGUID
void _MPMLInitPropertyPodcastEpisodeMap()_block_invoke_4
Must have Podcast Episode kind to generate Podcast Episode entity query.
_MPMLInitPropertyPodcastEpisodeMap_block_invoke_4
void _MPMLInitPropertyMovieMap()_block_invoke_5
Must have Movie kind to generate Movie entity query.
movieInfoPlist
void _MPMLInitPropertyTVEpisodeMap()_block_invoke_5
Must have TV Episode kind to generate TV Episode entity query.
_MPMLInitPropertyTVEpisodeMap_block_invoke_5
sortID
subOrder
void _MPMLInitPropertyTVSeasonMap()_block_invoke_4
Must have TV Season kind to generate TV Season entity query.
_MPMLInitPropertyTVSeasonMap_block_invoke_4
sortType
void _MPMLInitPropertyTVShowMap()_block_invoke_4
Must have TV Show kind to generate TV Show entity query.
imageURL
width
height
MPModalPresentationWindow.m
Multiple alert controllers assigned to the same window: %@
v24@?0@"MPArtworkRepresentation"8@"NSError"16
v24@?0@"MPMediaLibraryArtwork"8@"NSError"16
MPArtworkResizeDomain
Image did not exist at URL: %@
ColorAnalysis
Radiosity
v24@?0@8@"NSError"16
library
v16@?0@"UIImage"8
v24@?0@"UIImage"8@"NSError"16
screenshot
artist-hero
; artworkType = %@
; availableArtworkToken = %@
; fetchableArtworkToken = %@
music.apple.com
lyricsSnippetShareSignaturePrefix
https?://%@/(?<countryCode>\w{2})/lyrics/(?<adamID>[0-9]+)
adamID
countryCode
2.v1.
/%@/lyrics/%lld
:/?#[]@!$&'()*+,;=
%@%@
lyrics%@%@%@%@%@
blockSocialUser
file asset
MPModelPropertyFileAssetFilePath
MPModelPropertyFileAssetFileSize
MPModelPropertyFileAssetNonPurgeable
MPModelPropertyFileAssetProtectionType
MPModelPropertyFileAssetPurchaseBundleFilePath
MPModelPropertyFileAssetQualityType
MPModelPropertyFileAssetHLSKeyServerURL
MPModelPropertyFileAssetHLSKeyServerProtocol
MPModelPropertyFileAssetHLSKeyCertificateURL
MPModelPropertyFileAssetTraits
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/serialQueue
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/discoverySessionQueue
MPAVOutputDeviceRoutingDataSource.m
q24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
B24@?0@"MPAVOutputDeviceRoute"8@"NSDictionary"16
B24@?0@"MPAVRoute"8@"NSDictionary"16
v16@?0^{__CFError=}8
Analytics: Picked endpoint route, clear system endpoint
v32@?0^{__CFArray=}8^v16^{__CFError=}24
invalid class for %@ (%@)
v24@?0@"MRAVEndpoint"8@"NSError"16
invalid class for %@
must be an MPAVOutputDeviceRoute
RouteUID
B16@?0@"MRAVOutputDevice"8
predictedDevice
AVOutputContext.predictedDevice
AVOutputContext.outputDeviceUIDs
UAPayloadIdentifierExternalMediaContentIdentifier
UAPayloadIdentifierExternalMediaContentBundleIdentifier
v40@?0@"UAUserActivity"8@16@"NSString"24@?<v@?@"NSString"@"NSData"^@B>32
-init is invalid. Use -initWithScrubbingControl: instead.
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPModelSong"8
v16@?0@"MPModelGenericObject"8
MPStoreLibraryPersonalizationContentDescriptor.m
No personalization properties for modelClass: %@
<MPStoreLibraryPersonalizationContentDescriptor %p modelObject.identifiers=%@>
MPUserNotification.m
cfUserNotification
com.apple.MediaPlayer.MPUserNotification.accessQueue
com.apple.MediaPlayer.MPUserNotification.callbackInvocationQueue
com.apple.MediaPlayer.MPUserNotification.userNotificationConversionAccessQueue
MPUserNotification.responseCompletionHandlerInvocation
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/UI/MPUserNotification.m
com.apple.MediaPlayer.MPMediaEntityCache/deallocLaterQueue
v16@?0r^v8
-[MPMediaEntityCache _entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:]
MPMediaEntityCache.mm
Invalid entity
map::at:  key not found
localEndpoint
endpoint
v16@?0^v8
com.apple.mediaplayer.MPAVEndpointRoute/accessQueue
com.apple.mediaplayer.MPAVEndpointRoute/calloutQueue
 connection=%@
MPAVEndpointRoute.m
endpointWrapper
com.apple.MediaPlayer.MPStoreContentReporter.operationQueue
concernItemType
concernTypeId
concernItemId
commentText
deviceId
concernItemAUCType
v16@?0@"ICURLBag"8
commentId
reasonsForArtistPost
reasonsForArtistComment
reasonsForUserComment
reasonsForSharedPlaylist
reasonsForSocialProfile
reasonsForLyrics
reportConcern
deleteComment
deleteSocialPost
<%@: %p %@:'%@'>
ARTIST_POST
ARTIST_COMMENT
USER_COMMENT
PUBLIC_PLAYLIST
SOCIAL_PROFILE
LYRICS
v16@?0@"ICAsyncBlockOperation"8
com.apple.amp.mediaplayer.MPMediaAPICollectionItemMetadataRequest.workQueue
com.apple.amp.mediaplayer.MPMediaAPICollectionItemMetadataRequest.callOutQueue
AFAnalyticsEventTypeMusicPlaybackAssetLoad
Duration
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
<%@: %p title=%@ subtitle=%@ artworkImageData=%@ storage=%@>
title
subtitle
artworkImageData
storage
MPPlaybackArchiveDisplayProperties.m
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
NSUInteger _MSVHashGetHash(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
MPHomeManagerObserverCurrentHomeDidChangeNotification
MPHomeManagerObserverCurrentUserDidChangeNotification
MPHomeManagerObserverUsersDidChangeNotification
MPHomeManagerObserverSoundCheckSettingChangedNotification
Setup complete
Setting up
v24@?0@"MPStoreLibraryMappingResponse"8@"NSError"16
MPAVRoutingDataSourceActiveAudioRouteDidChangeNotification
MPAVRoutingDataSourceRoutesDidChangeNotification
MPAVRoutingDataSourceVolumeControlAvailabilityDidChangeNotification
MPAVRoutingDataSourceExternalScreenTypeDidChangeNotification
MPAVRoutingDataSourceFailureNotification
Route
VolumeControlAvailability
ExternalScreenType
com.apple.MediaPlayer.MPAVRoutingDataSource/serialQueue
com.apple.MediaPlayer.MPAVRoutingDataSource/workerQueue
v12@?0C8
%@ is abstract
MPModelPropertyStoreAssetEndpointType
MPModelPropertyStoreAssetRedownloadParameters
MPModelPropertyStoreAssetRedownloadable
MPModelPropertyStoreAssetAccountIdentifier
MPModelPropertyStoreAssetShouldReportPlayEvents
MPModelPropertyStoreAssetSubscriptionRequired
MPModelPropertyStoreAssetNeedsUserUpload
MPHomeUserObserverUserAllowExplicitSettingsDidChangeNotification
MPHomeUserMonitorPrivateListeningForCurrentDeviceSettingDidChangeNotification
root.music.allowExplicitContent
com.apple.mediaplayer.MPHomeUserMonitor.accessQueue
com.apple.mediaplayer.MPHomeUserMonitor.calloutQueue
v16@?0@"NSError"8
v32@?0@"NSString"8Q16^B24
TVShow:s%p
v16@?0@"MPModelTVShowKind"8
shows with %@
seasonKind
TV show %@
MPModelPropertyTVShowTitle
MPModelPropertyTVShowShortTitle
MPModelPropertyTVShowEditorNotes
MPModelPropertyTVShowShortEditorNotes
MPModelRelationshipTVShowCreator
MPModelPropertyTVShowArtwork
MPModelPropertyTVShowEditorialArtwork
MPModelPropertyTVShowEpisodeCount
MPModelPropertyTVShowTagline
idx (%ld) is out of range (%ld)
<%@: %p resolvedURL:%@ artworkTemplateItems:%@ mediaType:%ld artworkType:%ld>
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
bytesPredicateValue
social person
MPModelPropertySocialPersonUncensoredName
MPModelPropertySocialPersonHandle
MPModelPropertySocialPersonBiography
MPModelPropertySocialPersonIsPrivate
MPModelPropertySocialPersonIsVerified
MPModelPropertySocialPersonPendingRequestsCount
MPModelPropertySocialPersonArtwork
musicPlayerStateRestorationCache-nowPlaying
musicPlayerStateRestorationCache-queueDescriptor
musicFriends
MPStoreSocialErrorDomain
MPStoreSocialServiceControllerTransientStatesDidChangeNotification
MPStoreSocialServiceControllerTransientStatesSnapshotKey
_MPStoreSocialTransientStateDidChangeNotification
com.apple.MediaPlayer.MPStoreSocialServiceController.operationQueue
com.apple.MediaPlayer.MPStoreSocialServiceController.accessQueue
v24@?0q8@"NSError"16
v24@?0@"_MPStoreSocialTransientState"8^B16
v16@?0@"_MPStoreSocialTransientState"8
com.apple.MediaPlayer._MPStoreSocialTransientState.accessQueue
com.apple.MediaPlayer._MPStoreSocialTransientState.calloutQueue
+[MPMediaLibraryEntityTranslator _translatorForMPModelClass:mlcoreEntityClass:create:transient:]
MPMediaLibraryEntityTranslator.mm
MPModelClass && (entityClass || transient)
_default
Missing generic object kind relationship for %@.
@56@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40
Sorting by %@ is ambiguous, please define sortTransformer.
{vector<mlcore::SortDescriptor, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}}}40@?0{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}8@"NSSortDescriptor"32
joinProperty
No entityQueryBlock was mapped for %@
%@ entityQueryBlock did not return a query.
Relationship mapping missing for %@:%@
v32@?0@"NSString"8@"MPPropertySet"16^B24
MPModelGenericObject can only be sorted by MPMulitSortDescriptor.
All relatedProperties must have the same number of core sort descriptors.
v32@?0@"NSString"8@"NSString"16^B24
Sort descriptor must have at least one key.
Property mapping missing for %@:%@
Sort descriptor missing transformer: %@
Property translator mapping missing for %@:%@
v16@?0@"MPModelObject"8
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
@"MPArtworkCatalog"16@?0@"MPModelMovie"8
v16@?0@"MPModelMovie"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
<MPIdentifierSet EMPTY>
<MPIdentifierSet EMPTY (not-singleton)>
<%@ %@>
(%@)
MPIdentifierSetCodingKeyModelKind
MPIdentifierSetCodingKeyDatabaseID
MPIdentifierSetDeviceLibraryPersistentID
MPIdentifierSetDeviceLibraryContainedPersistentID
MPIdentifierSetSyncID
MPIdentifierSetCodingKeyPersonID
MPIdentifierSetStoreCloudID
MPIdentifierSetStoreCloudAlbumID
MPIdentifierSetStoreRecommendationID
MPIdentifierSetGlobalPlaylistID
MPIdentifierSetStoreAdamID
MPIdentifierSetFormerStoreAdamIDs
MPIdentifierSetCloudUniversalLibraryID
MPIdentifierSetStorePurchasedAdamID
MPIdentifierSetStoreSubscriptionAdamID
MPIdentifierSetSocialProfileID
MPIdentifierSetInformalMediaClipID
MPIdentifierSetInformalStaticAssetID
MPIdentifierSetReportingAdamID
MPIdentifierSetAssetAdamID
MPIdentifierSetRadioStationStringID
MPIdentifierSetRadioStationHash
MPIdentifierSetRadioStationID
MPIdentifierSetRadioStationEventID
MPIdentifierSetContainerUniqueID
MPIdentifierSetHandoffCorrelationID
MPIdentifierSetContentItemID
MPIdentifierSetLyricsID
MPIdentifierSetShouldExcludeFromShuffle
MPIdentifierSetIsPlaceholder
MPIdentifierSetVendorID
MPIdentifierSetCodingKeyPlaybackAuthorizationToken
MPIdentifierSet.m
databaseID.length > 0
personID.length > 0
<EMPTY (not-singleton)>
databaseID="%@"
personID="%@"
persistentID=%lld
containedPersistentID=%lld
storeAdamID=%lld
storeCloudAlbumID="%@"
storeCloudID=%lld
cloudUniversalLibraryID="%@"
storePurchasedAdamID=%lld
formerStoreAdamIDs=[%@]
storeSubscriptionAdamID=%lld
radioStationStringID="%@"
radioStationID=%lld
radioStationHash="%@"
radioStationEventID="%@"
globalPlaylistID="%@"
storeRecommendationID="%@"
containerUniqueID="%@"
handoffCorrelationID="%@"
contentItemID="%@"
lyricsID="%@"
shouldExcludeFromShuffle=YES
placeholder=YES
vendorID="%@"
informalMediaClipID="%@"
informalStaticAssetID="%@"
reportingAdamID=%lld
assetAdamID=%lld
socialProfileID="%@"
syncID=%lld
playbackAuthorizationToken="%@"
kind=%@
shared listening participant
MPModelPropertySharedListeningParticipantArtwork
PodcastEpisode:v%lu:o%lu
v16@?0@"MPModelPodcastEpisodeKind"8
podcasts
audio 
video 
unplayed 
variants
podcast episode %@
MPModelPropertyPodcastEpisodeTitle
MPModelPropertyPodcastEpisodeReleaseDateComponents
MPModelPropertyPodcastEpisodeDuration
MPModelPropertyPodcastEpisodeUserRating
MPModelPropertyPodcastEpisodeExplicit
MPModelPropertyPodcastEpisodeHasVideo
MPModelPropertyPodcastEpisodeDescriptionText
MPModelPropertyPodcastEpisodeDatePlayed
MPModelPropertyPodcastEpisodeStreamURL
MPModelPropertyPodcastEpisodeShareURL
MPModelPropertyPodcastEpisodeType
MPModelPropertyPodcastEpisodeNumber
MPModelPropertyPodcastEpisodeSeasonNumber
MPModelRelationshipPodcastEpisodeLocalFileAsset
MPModelRelationshipPodcastEpisodePodcast
MPModelRelationshipPodcastEpisodeAuthor
MPModelRelationshipPodcastEpisodePlaybackPosition
MPModelPropertyPodcastEpisodeArtwork
MPRouteLabel.m
MPRouteLabel's minimumEndCharacter property must be greater than or equal to 0.
ROUTE_NAME_HEADPHONES_COUNT
ROUTE_NAME_ARROW_FORMAT
q24@?0@"NSString"8@"NSString"16
ROUTE_NAME_PLUS_SEPARATOR
%@%@%@
ROUTE_NAME_CENTER_TRUNCATING_SEPARATOR
NOW_PLAYING_SIRI_SUGGESTION
B24@?0@"NSString"8@"NSString"16
v32@?0@8Q16^B24
@"NSString"24@?0@"NSString"8q16
ROUTE_NAME_PLUS_COUNT
iPad
<%@ %p %@>
MPRestrictionsMonitorAllowsAccountModificationDidChangeNotification
MPRestrictionsMonitorAllowsDeletionDidChangeNotification
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
MPRestrictionsMonitorMusicSubscriptionDidChangeNotification
MPRestrictionsMonitorAllowsRadioPurchasesDidChangeNotification
MPRestrictionsMonitorAllowsRadioServiceDidChangeNotification
MPRestrictionsMonitorAllowsStorePurchasesDidChangeNotification
MPRestrictionsMonitorAllowsMusicVideosDidChangeNotification
v16@?0@"NSNotification"8
PSRestrictionsPasscodeController
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
com.apple.MediaPlayer.SystemVolumeDataSource.avscQueue
<%@: %p %@>
available
not available
MediaPlayback
com.apple.MediaPlayer.SystemVolumeDataSource.reloadQueue
CannotExceedEUVolumeLimit
RegionalBehaviorEUVolumeLimit
MPDebugEUVolumeLimit
.GlobalPreferences
MPVolumeControllerRouteDataSource.m
Group route must be an endpoint route.
Output device route must be an output device.
Endpoint: %@ OutputDevice: %@
Endpoint: %@
<%@: %p %@ volume control %@>
v12@?0I8
v20@?0I8^{__CFError=}12
v20@?0f8^{__CFError=}12
artworkInfoType
cropStyle
format
sourceEditorialArtworkKind
videoArtwork
imageArtwork
hdmv
SDMV
480p
720p
1080p
MPStoreDownloadAttributeBackgroundRequest
MPStoreDownloadAttributeBuyParameters
MPStoreDownloadAttributeClientBundleIdentifier
MPStoreDownloadAttributeDisplaysOnLockscreen
MPStoreDownloadAttributeDownloadHandlerIdentifier
MPStoreDownloadAttributeKind
MPStoreDownloadAttributeLibraryItemIdentifier
MPStoreDownloadAttributeOriginator
MPStoreDownloadAttributeReason
MPStoreDownloadAttributeShouldDisableCellularRestrictionEnforcement
MPStoreDownloadAttributeShouldRespectMusicCellularDataRestriction
MPStoreDownloadAttributeShouldRespectStoreCellularDataRestriction
MPStoreDownloadAttributeStoreSagaItemIdentifier
MPStoreDownloadAttributeStoreItemIdentifier
MPStoreDownloadAttributeTitle
MPStoreDownloadAttributeURLBagKey
MPStoreDownloadAttributeSkipInstall
MPStoreDownloadErrorDomain
tilthistory
tiltmediacontrols
tiltnowplaying
tiltstore
tiltwishlist
MPStoreDownloadPhaseCanceled
MPStoreDownloadPhaseDataRestore
MPStoreDownloadPhaseDownloading
MPStoreDownloadPhaseFailed
MPStoreDownloadPhaseFinished
MPStoreDownloadPhaseInstalling
MPStoreDownloadPhasePaused
MPStoreDownloadPhasePreflight
MPStoreDownloadPhaseProcessing
MPStoreDownloadPhasePurchasing
MPStoreDownloadPhaseWaiting
buyProduct
paidRedownloadProduct
redownloadProduct
subDownload
MPStoreDownloadURLBagKeyOverride
com.apple.MediaPlayer.MPStoreDownload.accessQueue
salableAdamId
<%@ %p %@ error:%@ canceled:%@>
&reporting=%@
;stationId:%llu
;stationHash:%@
book
videoPodcast
SSDownloadPropertyStoreSagaIdentifier
SSDownloadPolicy
SSDownloadPolicyRule
SSDownloadSizeLimitNoLimit
SSDownloadPolicyUserDefaultState
SSDownloadSizeLimitDisabled
SSDownloadPropertyShouldCancelOnFailure
SSDownloadPropertyShouldSuppressErrorDialogs
SSMutableURLRequestProperties
SSDownloadPhaseCanceled
SSDownloadPhaseDataRestore
SSDownloadPhaseDownloading
SSDownloadPhaseInstalling
SSDownloadPhasePaused
SSDownloadPhasePreflight
SSDownloadPhaseProcessing
SSDownloadPhaseWaiting
MPStoreDownloadManagerDidFetchInitialDownloadsNotification
MPStoreDownloadManagerInitException
-init is not supported. Use +sharedManager instead.
com.apple.MediaPlayer.MPStoreDownloadManager.accessQueue
com.apple.MediaPlayer.MPStoreDownloadManager.calloutQueue
com.apple.MediaPlayer.MPStoreDownloadManager
v16@?0@"NSArray"8
%@.%@
v20@?0B8@"NSError"12
MPStoreDownloadManager.m
Downloads must not be empty.
SSDownloadManagerOptions
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSDownloadKindMusic
SSDownloadKindMusicVideo
SSDownloadKindTelevisionEpisode
SSDownloadKindMovie
SSDownloadManager
SSDownloadExternalPropertyBytesDownloaded
SSDownloadExternalPropertyPercentComplete
SSDownloadExternalPropertyPolicySizeLimit
SSDownloadExternalPropertyRentalInformation
SSDownloadPropertyClientBundleIdentifier
SSDownloadPropertyDownloadPhase
SSDownloadPropertyEncodedErrorData
SSDownloadPropertyIsRestore
SSDownloadPropertyKind
SSDownloadPropertyLibraryItemIdentifier
SSDownloadPropertyPreferredAssetFlavor
SSDownloadPropertyReason
SSDownloadPropertyStoreItemIdentifier
SSDownloadPropertyThumbnailImageURL
SSDownloadPropertyTitle
SSDownloadPropertyHandlerID
SSDownloadPropertyCollectionName
SSDownloadPhaseIsFinishedPhase
SSDownloadPhaseFailed
SSPurchaseManager
SSPurchase
SSDownload
SSDownloadPhaseFinished
@"MPArtworkCatalog"16@?0@"MPModelSocialPerson"8
v16@?0@"MPModelSocialPerson"8
com.apple.amp.mediaplayer.MPMediaAPICollectionMetadataRequest.workQueue
com.apple.amp.mediaplayer.MPMediaAPICollectionMetadataRequest.callOutQueue
v8@?0
https://%@/v1/catalog/%@/albums/%@%@
https://%@/v1/catalog/%@/playlists/%@%@
v24@?0@"ICURLResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
Album:v%lu:o%lu:s%p
v16@?0@"MPModelAlbumKind"8
compilations
previously played 
songKind
album %@
MPModelPropertyAlbumTitle
MPModelRelationshipAlbumArtist
MPModelRelationshipAlbumGenre
MPModelRelationshipAlbumRepresentativeSong
MPModelPropertyAlbumTrackCount
MPModelPropertyAlbumMaximumItemTrackNumber
MPModelPropertyAlbumDiscCount
MPModelPropertyAlbumHasCleanContent
MPModelPropertyAlbumHasExplicitContent
MPModelPropertyAlbumIsCompilation
MPModelPropertyAlbumIsClassical
MPModelPropertyAlbumReleaseDateComponents
MPModelPropertyAlbumArtwork
MPModelPropertyAlbumCopyrightText
MPModelPropertyAlbumLibraryAddedDate
MPModelPropertyAlbumYear
MPModelPropertyAlbumLibraryAdded
MPModelPropertyAlbumVolumeNormalization
MPModelPropertyAlbumKeepLocalEnableState
MPModelPropertyAlbumKeepLocalManagedStatus
MPModelPropertyAlbumLibraryAddEligible
MPModelPropertyAlbumLastDevicePlaybackDate
MPModelPropertyAlbumPreorder
MPModelPropertyAlbumEditorNotes
MPModelPropertyAlbumShortEditorNotes
MPModelPropertyAlbumSongPopularity
MPModelPropertyAlbumDownloadedDate
MPModelPropertyAlbumTraits
MPModelPropertyAlbumClassicalExperienceAvailable
MPModelPropertyAlbumVersionHash
MPModelChildAlbumSongs
MPModelChildAlbumArtists
MPModelChildAlbumRecordLabels
propertyPredicate
compoundPredicate
persistentIDsPredicate
searchStringPredicate
Error importing recommendations endpoint response in Server Object Database: %{public}@
START Request: %{public}@ aka [%{public}@]
TIMEOUT Request: %{public}@ timing out. Remaining operations: [%{public}@]
TIMEOUT Request: %{public}@ Operation: %{public}@
TIMEOUT Request: %{public}@ timing out.
FINISH Request: %{public}@ Response: %{public}@ [%fs] error: %{public}@
FINISH Request: %{public}@ Response: %{public}@ [%fs]
INVALIDATE: Response invalid before completion. Request: %{public}@
MIDDLEWARE: [%{public}@]
INVALIDATE: Middleware: %{public}@ [%{public}@] request: %{public}@
INVALIDATE: Middleware: %{public}@ [%{public}@, but already invalid] request: %{public}@
INVALIDATE: Notifying invalidation for request: %{public}@
[AFAnalytics] %{public}@ %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackQueueReceived %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackReady %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPStoreGetClientToken failed to get identity properties for token request. err=%{public}@
MPStoreGetClientToken not fetching auth token because there's no active account
    AVPlayerItem: %{public}@
Assets should not be loaded on the main thread.
MP->AV Asset Log Mapping: %{public}@ -> %{public}@   
%{public}@: Setting volume normalization to %f on %{public}@
%{public}@: ignoring volume normalization %f on %{public}@
Failed to get exportable URL with error: %{public}@
Setting item %{public}@ EQ to %d
%{public}@: setupPlaybackInfo called without an asset loaded
%{public}@: Seeking to start time: %f [override: %{BOOL}u]
%{public}@: Setting forward playback end time to: %f
%{public}@: Setting Audible DRM info: %{public}@
%{public}@: Setting ramp in/out info: %{public}@
 %{public}@ loadedTimeRanges %.2f of %.2f
 %{public}@ Finished downloading asset with loadedTimeRanges: %.2f of %.2f
routingTableView %p updateForEndpoint: routeUpdate: %@
Attempting to present media controls using a deprecated class: %@
MPModelLibraryRequestOperation: %p _sanityCheckRequest: allowedItemIdentifiers must contain unique array elements -- cannot contain duplicates. label=%{public}@ allowedItemIdentifiers=%{public}@
BEGIN SEEKING: %d
MPAVController: %p: changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
throttling playback changes for %.2fs
applying an additional %ld delta from throttled changes
changing by %ld to track to %{public}@
MPAVController: %p: endPlayback
%{public}@
Disabling autoplay for pause
MPAVController: %p: _pausedDuringInterruption=YES
MPAVController: %p: playWithOptions: %d allowsEnablingAutoPlay: %{BOOL}u
MPAVController: %p: Pausing [unable to set rate]
%{public}@ %{public}@ %{public}@
%{public}@ %d
Setting rate on player: %{public}@ to %f
Finished preparing item: %{public}@ for rate: %f, setting.
Preparing item: %{public}@ for rate: %f
Disabling autoplay
Enabling autoplay
MPAVController: %p: Set audio session active
MPAVController: %p - setCurrentTime:options:completion: - Saving start time override - startTimeOverride: %3.2fs
Committing time change: %f
Delaying time change: %f
reloadWithPlaybackContext:completionHandler:
 playbackContext: %{public}@
 currentPlaybackState=%d, posting MPAVControllerWillReloadWithPlaybackContextNotification
Error loading tracklist for queue feeder: %{public}@
MPAVController: %p: Honoring context action after queue load [shouldStartPlayback=%{BOOL}u]
MPAVController: %p: Overriding context action after queue load [Play]
MPAVController: %p: Overriding context action after queue load [Pause]
MPAVController: %p: Pausing [reloadWithPlaybackContext, was running, context should not start playback]
Ending playback because we don't have a current item after reload.
MPAVController: %p: Pausing [active route change, disabling autoplay]
Ignoring pause from active route change due to state being interrupted.
 asset loaded %{public}@ : current item %{public}@
 _itemDidChange 
 %{public}@
 AVPlayerItemFailedToPlayToEndTimeNotification
 %{public}@
 %{public}@
 _itemFailedToPlayToEnd %{public}@
 AVPlayerItemDidPlayToEndTimeNotification
 _itemReadyToPlay
 _itemWillChange %{public}@ 
 %{public}@
 playback state=%d, didPreviousItemReachEnd=%d, previousItemAssetLoaded: %{public}@, _isReloadingForPlaybackContextChange=%{BOOL}u
AVAudioSessionDelegateMediaPlayerOnly - begin interruption [received from CM]
MP AVAudioSessionDelegateMediaPlayerOnly - end interruption [received from CM]. Interruptor <%{public}@> category <%{public}@> resumable <%lu>,  _state = %lu
paused during interruption: do not resume
current item requests playback prevention: do not resume
interruptor is not phone app, etc: do not resume
video while in background: do not resume
MP endInterruptionFromInterruptor :: resuming playback at %f
 _rateDidChange %.2f 
 %.2f
_configureAudioSession
MPAVController: %p: Creating AVPlayer and MPAVQueueCoordinator - deferItemLoading=%{BOOL}u
Setting allowsExternalPlayback: %{public}@
Setting usesExternalPlaybackWhileExternalScreenIsActive: %{public}@
Setting actionAtItemEnd to AVPlayerActionAtItemEndAdvance when connecting to the AVPlayer
MPAVController: %p: Disconnecting AVPlayer for reason %d
%{public}@ %{public}@: unregistering due to disconnect for reason: %li
 _serverConnectionDidDie
  -- notification: %{public}@
  -- error: %{public}@
  -- currentTime: %0.2f
  -- contentItemID: %{public}@
 _streamBufferFull
 _streamLikelyToKeepUp
 _streamRanDry
 _streamUnlikelyToKeepUp
 AVPlayerItemTimeJumpedNotification 
 %.1fs
MPAVController: %p: Pausing [airPlayVideoEnded]
Ending playback due to AirPlay failure
 externalPlaybackActive 
 outputObscuredDueToInsufficientExternalProtection 
 rate
 playbackBufferEmpty 
 playbackBufferFull 
 playbackLikelyToKeepUp 
 status 
 %ld
 canPlayFastForward 
 canPlayFastReverse 
%{public}@:%d
%{public}@ _audioSessionMediaServicesWereResetNotification:
%{public}@ %{public}@: with item: %{public}@ currentItem: %{public}@
applying throttled index change of %ld tracks
_verifyDisplayProtection
    ignoring because state is %d
 insufficient external protection
External playback configuration [override #2] - externalPlaybackUnsupportedReason: %{public}@ => wantsExternalPlayback: %{BOOL}u
External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
BackgroundTask: End assertion (%lli) at %{public}s:%d
MPAVController: %p: setQueueController: %{public}@
END SEEKING: %ld
- Registering for AVItem notifications from %{public}@
-- Asset loaded with player item: %{public}@
 Registering %{public}@ for double observation on %{public}@ (%{public}@)
Taking autoplay background task assertion.
Ending autoplay background task.
Scheduling autoplay background task assertion ending...
Scheduled autoplay background task assertion is no longer relevant.
Ending autoplay background task from timing out waiting for likely to keep up.
Skipping autoplay, disabled (for current item: %d, on player: %d, state: %ld)
Likely to keep up or full buffer: %d
Skipping autoplay, not enough buffered to keep up.
BackgroundTask: End assertion (%lli) at %s:%d
BackgroundTask: Took assertion (%lli) for playback stall
Disabling autoplay after buffer stall timeout
Setting actionAtItemEnd to %ld for state %ld
 MPAVController _setState: %ld -> %ld
MPAVController: %p: _pausedDuringInterruption=NO [state changed from interrupted]
%{public}@ %{public}@: called with item: %{public}@ with asset loaded: %{public}@ and therefore player item: %{public}@
 _inflightSeekRate already set, which means multiple setRate:error: calls have been made before a _rateDidChange: was received
SCAN: Rate: %f, Interval: %f
Delayed time time change fired: %f
Found pictureType: %{public}@
Created image of size: %{public}@
Using %{public}@ to resolve error %{public}@
Playback failed with error: %{public}@, not resolving (canResolve: %{public}@, allowsItemErrorResolution: %{public}@)
Resolution for item %{public}@ resolved error: %{public}@ with resolution error: %{public}@
Resolution for item %{public}@ could not resolve error: %{public}@ with resolution error: %{public}@
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
MPAVController: %p: Pausing [UIApp isSuspendedUnderLock]
MPAVController: %p: Pausing [application state]
_resumePlaybackIfNecessary
AVController: queue boundary, ending playback [%{public}@]
[MPRadioController] Connection interrupted.
[MPRadioController] Connection invalidated.
[TelevisionRoutingDataSource] Beginning discovery using controller: %{public}@
[TelevisionRoutingDataSource] Ending discovery with controller: %{public}@
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u
RPQ: initWithMediaRemotePlaybackQueue: [library] library=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=bplist query=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf protobuf=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf query=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf query=(null)
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip multiverseIdentifier=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip firstItem=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip firstItem=(null)
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid pid=%lld
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid firstItem=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid firstItem=(null)
RPQ: initWithMediaRemotePlaybackQueue: [shuffle/repeat] shuffle=%{public}@ repeat=%{public}@
userIdentityForMediaRemoteOptions - No user identity data. Using active account.
userIdentityForMediaRemoteOptions -
Cannot decode override user identity. Using active account.
userIdentityForMediaRemoteOptions - Decoded override user identity: %{private}@.
Can't parse because input has unexpected type: %{public}@
Can't parse because %{public}@ property doesn't exist: %{public}@
Can't parse because array doesn't contain anything: %{public}@
Can't parse because %{public}@ property is not of expected (NSArray) type: %{public}@
Can't parse because array first object is not of expected (NSArray) type: %{public}@
Can't parse because %{public}@ property is not of expected (NSDictionary) type: %{public}@
Can't parse because array first object is not of expected (NSDictionary) type: %{public}@
Dropping node without title: %{public}@
Regex cannot be generated from pattern: %{public}@ with error %{public}@
No match found, URL is not supported: %{public}@
countryCode not found in bag
Match didn't capture an identifier: %{public}@
Dropping link without label: %{public}@
Could not register tap handler for status bar override
[MPVolumeSlider] allowUserToExceedEUVolumeLimit
[MPVolumeSlider] Tracked from %f for %{public}@
[MPVolumeSlider] Tracked to %f for %{public}@
[MPVolumeSlider] <%@: %p> setVolumeDataSource: %@
[MPVolumeSlider] volumeControlAvailableDidChange available: %{BOOL}u slider: %{public}@
[MPVolumeSlider] volumeControlCapabilitiesDidChange controller: %{public}@ capabilities:%{public}@
[MPVolumeSlider] EUVolumeLimitDidChange limit: %f slider: %{public}@
[MPVolumeSlider] EUVolumeLimitEnforcedDidChange enforced: %{BOOL}u slider: %{public}@
[MPVolumeSlider] volumeWarningStateDidChange warningState: %li slider: %{public}@
[MPVolumeSlider] Not committing volume change because in optimistic state
[MPVolumeSlider] Committing volume change of: %f
[MPVolumeSlider] volumeValueDidChange %f (coalesced) for %{public}@
MPSetPlaybackQueueCommandEvent: Failed to extract playback queue data from media remote command=%@ options=%@
MPModelLibraryDefaultSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: hasEntityPosition is NO [persistentID not found in entityPersistentIDs] persistentID=%lld
Present remote view controller.
Error occurred while attempting to present remote view controller. %@
%{public}@ updated routes: [%@]
%{public}@ updated picked routes: [%@]
%{public}@ returning single pickedRoute: %{public}@
Audio category override changed to %{public}@
Failed to find symbol with uti: %{public}@ error: %{public}@
Failed to find symbol with model: %{public}@ uti: %{public}@ error: %{public}@
Perform hijack for %@
Do not perform hijack for %@
Hijack - Requesting playbackState for %@
Hijack - playbackState is %{BOOL}u for %@
Hijack - RoutingController %{public}@ Presenting: %{public}@ NowPlaying: %{public}@
Skipping playback checks. Route: %{public}@, playbackDataSource: %{public}@
 %{public}s %{public}@
Failed to pick single route %{public}@ error: %{public}@
Successfully picked single route %{public}@
RCS cancelling in-progress selection %{public}@
RCS pickedRouteDidChange caused us to drop selection %{public}@
RCS pending route timed out %{public}@
RCS ignoring addPendingRoute - route already pending %{public}@
RCS addPendingRoute routing controller missing
RCS addPendingRoute %{public}@
RCS removePendingRoute %{public}@
RCS removePendingRoute routing controller missing
RCS enqueue %{public}@
RCS will use existing selection %{public}@
RCS changing selection in progress from %{public}@ to %{public}@
RCS _dequeueSelectionWhenPossible timed out for selection %{public}@
RCS dequeue %{public}@
RCS failed to process selection: %{public}@ error: %{public}@
RCS _dequeue routing controller missing
RCS successfully processed selection: %{public}@
RCS _processSelection:completion: routing controller missing
RCS cannot add local speaker route. Picked route: %{public}@
RCS cannot add route to routing controller that does not support multiple selection routingController: %{public}@
RCS treating Add as a Set
Set command invoked with >1 route. (localSpeakerRoute=%{BOOL}U|toNonGroupableOutputContext=%{BOOL}U|nonGroupableRoute=%{BOOL}U: %{public}@
RCS set picked route %{public}@
RCS add routes %{public}@
RCS remove routes %{public}@
Encountered unsupported MediaKit type: %@
SOD performWithDatabaseOperations: Media API payload contains collectionPlaylistVersionHash=%{public}@ for type=%{public}@
Encountered unsupported data type in assetURLs [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unsupported sinfKind in assets [MediaKit]: sinfKind=%{public}@
Encountered unsupported data type in assets [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ sinfsType=%{public}@ flavorString=%{public}@ urlString=%{public}@
SOD performWithDatabaseOperations: importing [Media API payload] childRelationsCount=%d collectionVersionHash=%{public}@
No valid sinfs in payload
Could not serialize sinfs from payload=%{public}@, error=%{public}@
Missing miniSinf from sinfDictionary=%{public}@
Encountered unexpected media kit relationship parent=%@ type=%@
Encountered unsupported StorePlatform kind: %@
SOD performWithDatabaseOperations: SP payload contains collectionPlaylistVersionHash=%{public}@ for type=%{public}@
Encountered unsupported data type in assetURLs [StorePlatform]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
SOD performWithDatabaseOperations: importing [Platform payload] childRelationsCount=%d collectionVersionHash=%{public}@
Encountered unexpected store platform relationship parent=%@ type=%@
<MPHomeManagerObserver %p> failed to fetch currentUser [HMHomeManager.currentHome=nil]
<MPHomeManagerObserver %p> failed to fetch currentUser [HMHomeManager.currentHome.currentUser=nil]
<MPHomeManagerObserver %p> monitorForCurrentUser: currentUser=nil
<MPHomeManagerObserver %p> userMonitorWithHomeIdentifiers: returning nil [identifiers.count=0]
<MPHomeManagerObserver %p> userMonitorWithHomeIdentifiers: forcing update [no monitor found] homeIdentifiers=%{private}@
<MPHomeManagerObserver %p> homeAccesssoryWithRouteID: No homeAccessory with routeID=%{public}@
<MPHomeManagerObserver %p> currentHomeDidChange from %p to %p
<MPHomeManagerObserver %p> currentUserDidChange from %p to %p
<MPHomeManagerObserver %p> currentUsers.count=0 in currentHome=%p
<MPHomeManagerObserver %p> Removing MPHomeUserMonitor userID=%{private}@ uniqueIdentifier=%{private}@
<MPHomeManagerObserver %p> Adding <MPHomeUserMonitor %p> userID=%{private}@ uniqueIdentifier=%{private}@
<MPHomeManagerObserver %p> currentHomeDidChange:
<MPHomeManagerObserver %p> currentUserDidChange:
<MPHomeManagerObserver %p> homeUsersDidChange:
<MPHomeManagerObserver %p> HMHomeDelegatePrivate homeDidUpdateSoundCheck
<MPHomeManagerObserver %p> HMHomeDelegatePrivate homeDidUpdateAccessControlForCurrentUser
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ homeManagerDidUpdateCurrentHome:
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ didUpdateStatus:%lu
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManagerDidUpdateHomes:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManagerDidUpdatePrimaryHome:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ didAddHome:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ didRemoveHome:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManagerDidRemoveCurrentAccessory:%{public}@
Failed to add cache playlist to library. %{public}@
Failed to add cache content to library. %{public}@
Cannot create playlist with an empty name
Could not resolve default author display name
No static entity found for provided library: %{public}@ multiverseID: %{public}@
Static entity recovered from included library: %{public}@ multiverseID: %{public}@
No static entity found in library: %{public}@ multiverseID: %{public}@
Unable to find static entity in any library: %{public}@
attempt to *nil* filter predicate to query: %@
Unknown comparison type %ld.
RPQ: -[MPMediaQuery initWithProtobufferDecodableObject:library:] resolving PID predicate multiverseID=%{public}@ library=%{public}@ entity=%{public}@
RPQ: -[MPMediaQuery initWithProtobufferDecodableObject:library:] resolving PID predicate value=%{public}@
BEGIN [%lld]: getRepeatMode 
getRepeatMode
END [%lld]: getRepeatMode 
repeatMode=%ld
BEGIN [%lld]: setRepeatMode repeatMode=%ld
setRepeatMode
END [%lld]: setRepeatMode 
getShuffleMode
BEGIN [%lld]: getShuffleMode 
END [%lld]: getShuffleMode 
shuffleMode=%ld
setShuffleMode
BEGIN [%lld]: setShuffleMode shuffleMode=%ld
END [%lld]: setShuffleMode 
BEGIN [%lld]: setNowPlayingItem 
Failed to set now playing item error: %{public}@
setNowPlayingItem
END [%lld]: setNowPlayingItem 
descriptor=%{public}@
BEGIN [%lld]: setQueue descriptor=%{public}@
setQueue
END [%lld]: setQueue 
BEGIN [%lld]: prependQueueDescriptor descriptor=%{public}@
prependQueueDescriptor failed error: %{public}@
prependQueueDescriptor
END [%lld]: prependQueueDescriptor 
BEGIN [%lld]: appendQueueDescriptor descriptor=%{public}@
appendQueueDescriptor failed error: %{public}@
appendQueueDescriptor
END [%lld]: appendQueueDescriptor 
prepareToPlay short-circuit [already prepared to play]
prepareToPlay failed [no target descriptor]
prepareToPlay:async
BEGIN [%lld]: prepareToPlay:async 
prepareToPlay connected to server, setting queue descriptor
END [%lld]: prepareToPlay:async 
prepareToPlay completed with current target queue descriptor
prepareToPlay completed with past queue descriptor
Failed to prepareToPlay with error: %{public}@
nil server
END [%lld]: prepareToPlay:async nil server
skipToNextItem
BEGIN [%lld]: skipToNextItem 
END [%lld]: skipToNextItem 
BEGIN [%lld]: skipToBeginning 
skipToBeginning
END [%lld]: skipToBeginning 
BEGIN [%lld]: skipToPreviousItem 
skipToPreviousItem
END [%lld]: skipToPreviousItem 
index=%lld
BEGIN [%lld]: nowPlayingAtIndex index=%lld
Failed getting nowPlayingAtIndex: %ld error: %{public}@
nowPlayingAtIndex
END [%lld]: nowPlayingAtIndex 
shuffle
BEGIN [%lld]: shuffle 
END [%lld]: shuffle 
duration=%f
BEGIN [%lld]: pauseWithFadeoutDuration duration=%f
pauseWithFadeoutDuration
END [%lld]: pauseWithFadeoutDuration 
BEGIN [%lld]: skipToBeginningOrPreviousItem 
skipToBeginningOrPreviousItem
END [%lld]: skipToBeginningOrPreviousItem 
prepareToPlay:sync
BEGIN [%lld]: prepareToPlay:sync 
Failed to prepareToPlay error: %{public}@
END [%lld]: prepareToPlay:sync 
BEGIN [%lld]: play 
play
END [%lld]: play 
BEGIN [%lld]: pause 
pause
END [%lld]: pause 
stop
BEGIN [%lld]: stop 
END [%lld]: stop 
time=%g
setCurrentPlaybackTime
BEGIN [%lld]: setCurrentPlaybackTime time=%g
END [%lld]: setCurrentPlaybackTime 
rate=%g
setCurrentPlaybackRate
BEGIN [%lld]: setCurrentPlaybackRate rate=%g
END [%lld]: setCurrentPlaybackRate 
BEGIN [%lld]: beginSeekingForward 
beginSeekingForward
END [%lld]: beginSeekingForward 
BEGIN [%lld]: beginSeekingBackward 
beginSeekingBackward
END [%lld]: beginSeekingBackward 
BEGIN [%lld]: endSeeking 
endSeeking
END [%lld]: endSeeking 
Failed to loadRepresentationForArtworkCatalog with error: %{public}@
MPMusicPlayerController is not available on the simulator
BEGIN [%lld]: getDescriptor 
Failed to get server queue descriptor error: %{public}@
getDescriptor
END [%lld]: getDescriptor 
BEGIN [%lld]: getNowPlaying 
Failed to get server now playing error: %{public}@
getNowPlaying
END [%lld]: getNowPlaying 
BEGIN [%lld]: getTimeSnapshot 
getTimeSnapshot
END [%lld]: getTimeSnapshot 
[MPArtwork] Loaded nil representation -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
[MPArtwork] HALTING -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
%{public}@ - Singleton
%{public}@ - No pre-existing library for user identity: %@
%{public}@ - New library init called
%{public}@ - New library created for user identity: %@
MPMediaLibraryAuthorizationStatus has not been determined, %{public}@
%{public}@: app not authorized for access
MPMediaLibrary - _mediaLibraryWithUniqueIdentifier: - User change detected between encoding/decoding [recoverable] - Library=%@ - EncodedUser=%@ - DecodedLibraryUser=%@
%{public}@ - Posting notification [%@]
%{public}@ - Related library posting notification [%@]
%p Taking connection assertion: %{public}@
%{public}@ - Active user change completed - Firing notifications for path change
Not authorized, skipping filter predicate application
%p Releasing connection assertion: %{public}@
%p Active assertions: %{public}@
%@ Deferring disconnect due to active assertions: %{public}@
%{public}@ - Notifications - Reading libraryChangeObservers from deviceMediaLibrary
Adding data provider %@
Removing data provider %@
Reloading data provider %@
Reloading data provider for significant change %@
%{public}@: Could not determine UUID string
Could not find playlist for %{public}@ and no creation metadata was provided
Creating playlist for %{public}@
Create playlist failed, not authorized
Cloud createPlaylist for %{public}@ failed: %{public}@
dataProvider: %{public}@ does not allow creating a playlist using the SDK
Imported %{public}@ playlists
Failed to import %{public}@ playlists with error: %{public}@
Unsupported media types (%ld), using MPMediaTypeAny.
MPMediaPickerController must be presented modally.
setAllowsPickingMultipleItems mutually-exclusive with setPicksSingleCollectionEntity
setPicksSingleCollectionEntity mutually-exclusive with setAllowsPickingMultipleItems
Media library access is not authorized. Users need to grant media library access for your app in Settings > Privacy to interact with MPMediaPickerController. Dismissing.
[BackgroundTasks] MPAVQueueCoordinator Expired [%lu]
[BackgroundTasks] MPAVQueueCoordinator Background Task Failed to Start.
[BackgroundTasks] MPAVQueueCoordinator Start [%lu]
[BackgroundTasks] MPAVQueueCoordinator End [%lu]
Removing failed item: %{public}@
item=%{public}@
LoadAsset
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _loadAssetForItem:
Beginning transaction for first item load.
> Loading asset for: %{public}@
< Loaded asset for: %{public}@ [%.2fs]
Dropping asset because %{public}@ is no longer in queue.
Failed loading asset for: %{public}@ [%.2fs]
Committing transaction for first item load.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _loadAssetForItem:
Committing playback transaction because of reload without keeping current item.
+ SYNC ITEMS: [CLEARING]
+ SYNC ITEMS: %{public}@ [keeping current item]
Skipping loading items.
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncItemsWithPreviousItems:
Beginning with active queue depth: %lu
+ SYNC ITEMS: %{public}@%{public}@ -> %{public}@ %{public}@
Updated active queue depth to: %lu
Failed to queue any items.
+ SYNC ITEMS: %{public}@ -> (null) [removal]
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncItemsWithPreviousItems:
Attempting to achieve equilibrium between MP and AV queues
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncPlayerItems
Clearing loaded asset because it cannot be reused for item: %{public}@
= SYNC PLAYER: Removing %{public}@ because it was not the correct item for the index in the queue.
= SYNC PLAYER: Removing %{public}@ because it was at an index beyond where it should be.
= SYNC PLAYER: %{public}@ was already in player. Making copy.
= SYNC PLAYER: %{public}@ -> %{public}@
= SYNC PLAYER: %{public}@ removed for being beyond active range.
Achieved equilibrium between %{public}@ and %{public}@.
Has not yet achieved equilibrium.
Skipping player sync because we've already achieved equilibrium.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncPlayerItems
+ SYNC ITEMS: [PRUNING] %{public}@
Current Item changed: %{public}@ -> %{public}@
Reloading items due to preferred queue depth change from %lu to %lu
Failed to prerollWithCompletion with error: %{public}@
Failed to beginPlaybackAtHostTime with error: %{public}@
contentItemIDs.count=%llu
BEGIN [%lld]: _mediaItemsForContentItemIDs contentItemIDs.count=%llu
Failed getting nowPlayings for contentItemIDs (count: %llu) error: %{public}@
_mediaItemsForContentItemIDs
END [%lld]: _mediaItemsForContentItemIDs 
applicationMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
BEGIN [%lld]: applicationQueuePlayer:xpc:connect 
applicationController: xpc service connection interrupted
applicationController: xpc service connection invalidated
resumed connection
EVENT [%lld]: applicationQueuePlayer:xpc:connect resumed connection
BEGIN [%lld]: applicationQueuePlayer:xpc:connect:wake 
applicationQueuePlayer:xpc:connect:wake
END [%lld]: applicationQueuePlayer:xpc:connect:wake 
applicationQueuePlayer _establishConnectionIfNeeded timeout [ping did not pong]
applicationMusicPlayer:connect
BEGIN [%lld]: applicationMusicPlayer:connect 
applicationMusicPlayer: failed to get synchronousRemoteObject %{public}@
error=%{public}@
END [%lld]: applicationMusicPlayer:connect error=%{public}@
applicationMusicPlayer: connection invalidated
END [%lld]: applicationMusicPlayer:connect 
applicationQueuePlayer:xpc:connect
END [%lld]: applicationQueuePlayer:xpc:connect 
Content manager initialized, awaiting session status.
Content manager skipping dataSource reload; awaiting context.
Content manager invalidating browsable content...
Content manager beginning to coalesce content item updates.
Content manager stopped coalescing content item updates. Pushing changes, if any.
Warning: -[MPPlayableContentManager setNowPlayingIdentifiers:] nowPlayingIdentifiers cannot be nil. The argument has been replaced with an empty array, please change usage to match this expectation. An assertion will be triggered for apps built on or after the iOS 12.2 SDK.
Content manager updated now playing identifiers. Pushing new identifiers.
[PlayableContentManager] Content item %@ mutated. Enqueueing for update.
Content manager has no available session.
Content manager session connected.
Content manager initializing context.
Content manager setting up media remote endpoint.
Pushing content items update with items: %@
The completion handler for the current %{public}@ procedure has already been called once. You should only call MediaPlayer's completion handler once after servicing the call.
Playback initialization completed at index path: %{public}@, error: %{public}@
Content manager updated limited UI: %@
Updating supported browsable content APIs: %{public}@
Error updating browsable content APIs. MediaRemote error %ld
-beginLoadingChildItemsAtIndexPath:completionHandler: completion handler was released without being called
Loading operation at completed at index path: %{public}@, error: %{public}@
-playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler: completion handler was released without being called
-contentItemForIdentifier:completionHandler: completion handler was released without being called
MPLazySectionedCollection %p: identifiersForItemAtIndexPath dataSource failed to produce identifiers: dataSource=<%{public}@ %p> indexPath=%{public}@
MPLazySectionedCollection %p: identifiersForItemAtIndexPath super failed to produce identifiers: indexPath=%{public}@
RCS cannot remove device route
Can't share audio while in the Car. Route: %{public}@, picked: %{public}@
RCS attempted to select a nil route, ignoring.
RCS user selected: %{public}@
CarPlay connected: %{BOOL}u
Caught exception when updating routingViewController: %@
[MPRemoteRadioController] Connection interrupted.
[MPRemoteRadioController] Connection invalidated.
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: error creating directory at URL %{public}@
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: Can't use videoArtworkCacheURL as cache directory [Non-directory file already exists at path] videoArtworkCacheURL=%{public}@
Artwork request cannot have a size of zero, catalog: %@, representation kind: %ld
%{public}@ Encountered error while requesting artwork for NSURLSessionDataTask: %{public}@. %{public}@
%{public}@ -loadRepresentationOfKind:forArtworkCatalog:completionHandler: %{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: canceled data task [expectedEntrySize > diskCapacity] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld diskCapacity=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: expecting eviction in disk cache - cache will be purged [expectedEntrySize > diskCacheAvailableSize] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld diskCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: canceled data task [expectedEntrySize > memoryCapacity] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld memoryCapacity=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: expecting eviction in memory cache [expectedEntrySize > memoryCacheAvailableSize] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld memoryCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: Decided on disposition %ld for dataTask: %{public}@. URL=%{public}@.storagePolicy=%lu expectedEntrySize=%lld diskCacheAvailableSize=%lld memoryCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: ignoring data [no loading request associated with data task] task=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: creating data task using accumulatedData.length. %p dataTask=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld accumulatedData.length=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: creating data task using dataRequest.requestedLength. %p dataTask=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld dataRequest.requestedLength=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: not responding with data [currentOffset was greater than length] task=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:willCacheResponse:completionHandler: Updating storage policy from %lu to %lu for dataTask: %{public}@. URL=%{public}@.
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:willCacheResponse:completionHandler: Decided on storage policy %lu for dataTask=%{public}@. responseURL=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: task finished with error: %{public}@ dataTask=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: ignoring data [no loading request associated with data task] task=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: finished loading request: %p. URL=%{public}@ dataTask=%{public}@
MPAbstractNetworkArtworkDataSource: -resourceLoader:shouldWaitForLoadingOfRequestedResource: starting data task: %{public}@. loadingRequest=%p URL=%{public}@
MPAbstractNetworkArtworkDataSource: -resourceLoader:didCancelLoadingRequest: canceled data task: %{public}@. loadingRequest=%p URL=%{public}@
MPAbstractNetworkArtworkDataSource: _didReceiveMemoryWarningNotification: Reducing video URLCache memory capacity to 0.
MPAbstractNetworkArtworkDataSource: _didReceiveWillEnterForegroundNotification: Increasing video URLCache memory capacity from 0 to default capacity.
[MPArtwork] Asked to cache response for %{public}@, but no size was set.
-[MPMusicPlayerPlayParameters initWithDictionary:] id or kind missing from playParams dictionary. Returning nil.
MPModelLibraryModelSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: adjustedSectionIndex not translated [currentSectionPersistentID not found in _allowedSectionPersistentIDs] adjustedSectionIndex=%zu currentSectionPersistentID=%lld
Error fetching store content for item add. %{public}@
Parsing track data...
Importing %lu tracks...
Adding %llu store items to library (also add to cloud library: %d): %{public}@
Successfully imported track data.
Adding %lld to cloud library...
Error adding track(s) to cloud library. %{public}@
Successfully added track(s) to cloud library.
Failed to import track data. %{public}@
Successfully added playlist to cloud library.
Failed to add global playlist to cloud library. %{public}@
import global playlist with id %@ - add to cloud library: %s...
Fetching global playlists with IDs %{public}@...
Found playlist data for %{public}@
Did not find playlist data for %{public}@
Successfully imported playlist data. Imported tracks: %@
found container_pid:%lld for global playlistid:%{public}@
Error importing playlist data.
Error fetching playlist data. %{public}@
Updating Loved Playlist with likedState=%d for trackID=%lld
71542113: setting time stamp for content taste change=%lld
entityClass %@ (groupingType = %ld) has no ML3Property for MPProperty %@
Disabled keep_local on %lu tracks with status:%d for collection:%lld
Cancelled keep_local on %lu tracks with status:%d for collection: %lld
Cleared keep_local on %lu tracks with status:%d for collection:%lld
Cleared keep_local_status for collection %lld with status:%d
Disabled keep_local on %lu tracks with status:%d for playlist:%lld
Cancelled keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local_status for playlist %lld with status:%d
While setting library filter predicates, caught exception %{public}@ trying to read media library
BackgroundTask: Took assertion (%lli) at %{public}s:%d
Unexpected content rating format: %@
Created timer to coalesce MPMediaLibraryEntitiesAddedOrRemovedNotification
Posting MPMediaLibraryEntitiesAddedOrRemovedNotification
Postponing MPMediaLibraryEntitiesAddedOrRemovedNotification timer due to continued notifications
Received cloud library availability did change notification
checking test media folder: %{public}@ -- %{public}@
no fallback test audio file found [TestAudio.<foo>]
no fallback test video file found [TestVideo.<foo>]
NOTE: Mapping file %@ to path %@
Requesting artwork for %lld - %@
Received artwork for %lld - %@
Skipping artwork fetch for %lld - %@
Unable to create orderingTerms for properties: %@
no ML3 collection query for grouping type %@, using items query
Cannot filter search string by %@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [unpersonalizedContentDescriptors did not contain MPStoreLibraryPersonalizationContentDescriptor] indexPath=%{public}@ possibleObject=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [effectiveOriginalObject has no identifiers] indexPath=%{public}@ effectiveOriginalObject=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [libraryIdentifiers unionSet: failed] indexPath=%{public}@ libraryIdentifiers=%{public}@ originalIdentifiers=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [originalObject has no identifiers] indexPath=%{public}@ originalObject=%{public}@
MPModelLibrarySearchRequestOperation: NULL utf8 from string: '%{public}@'
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed.
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed.
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed.
[HardwareButtonController] Volume dataSource changed to: %{public}@
[HardwareButtonController] Committing volume change to: %f
[HardwareButtonController] Received hardware volume event: %{public}@, pressed: %{BOOL}u
[MPArtwork] Failed to create directory at '%{public}@' with error: %{public}@
[MPArtwork] Could not write resized image to %{public}@: Failed to finalize CGImageDestination
Begin optimistic state with %lu individual sliders
MPVolumeGroupSliderCoordinator changing %f to %f for %{public}@
End optimistic state.
Committing optimistic values
Do not update optimistic value cache since master volume was set to 0.
+MPMediaLibrarySystemFilters - filtersForLibrary: %@ - filters:%@
MPMediaLibrarySystemFilters %p - Init with library: %@
MPMediaLibrarySystemFilters %p - Updating filters - Library: %@ - has cloud library revision: %{BOOL}u - purchase history excluded: %{BOOL}u
MPMediaAPICollectionItemAuthTokenRenewalRequest %p starting with requestIDs=%d, isCancelled=%{BOOL}u
MPMediaAPICollectionItemAuthTokenRenewalRequest %p cannot load metadata for identifier=%{public}@ (missing storeID)
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load bag for request context. error=%{public}@
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load value for domain configuration
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load value for default domain
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load value for country code
MPMediaAPICollectionItemAuthTokenRenewalRequest %p setting halfLifeDuration=%f seconds
MPMediaAPICollectionItemAuthTokenRenewalRequest %p request was cancelled
MPMediaAPICollectionItemAuthTokenRenewalRequest %p starting renewal request for %d itemIdentifiers
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with error=%{public}@, statusCode=%d, responseDictionary=%p
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with statusCode=%d, responseDictionary=%p, isFinalResponse=%{BOOL}u
[PlaybackUserDefaults] autoPlayEnabledForUserIdentity: %{BOOL}u userIdentity=%{public}@
[PlaybackUserDefaults] setAutoPlayEnabled:forUserIdentity: %{BOOL}u userIdentity=%{public}@
[PlaybackUserDefaults] setSoundCheckEnable: %{BOOL}u
MPPlaybackUserDefaults: _loadAccountProperties: getPropertiesForUserIdentity: identity=%{public}@ error: %{public}@
Attempting to setSystemVolumeHUDEnabled for application that supports UIScene lifecycle (enabled: %{BOOL}u | category: %{public}@ | volumeDisplays: %{public}@)
systemMusicPlayer playbackState returning paused due to cached data
disabled=%{BOOL}u
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
openToPlayQueueDescriptor
openToPlayQueueDescriptor:prepare
openToPlayQueueDescriptor: failed [prepare failed] error=%{public}@
openToPlayQueueDescriptor:openURL
success=%{BOOL}u
openToPlayQueueDescriptor: failed [open URL failed]
failed to open URL
systemMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
systemMusicPlayer _establishConnectionIfNeeded failed [application not installed]
systemMusicPlayer connection interrupted
systemMusicPlayer connection invalidated
systemMusicPlayer _establishConnectionIfNeeded timeout [ping did not pong]
woke=%{BOOL}u
systemMusicPlayer:connect
%{public}@ instantiated parser: %{public}@.
No country code found in bag, can't create storefront endpoint URL
No music subscription dictionary in bag, can't get subscription properties to generate URL
No grouping name in music subscription dictionary of bag, can't generate URL pointing to right grouping: %{public}@
%{public}@ - Request for a controller with user identity %@
%{public}@ - No pre-existing controller for user identity %@
%{public}@ - Creating new controller for user identity %@
%{public}@ - New instance created for user identity: %@
%{public}@ - Received notification [%{public}@]
%{public}@ - Received notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Error retrieving user identity properties [Processing identity change] - identity=%@ - error=%{public}@
%{public}@ - Cloud library status changed [%ld -> %ld] - Posting MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
%{public}@ - Related controller posting notification [%@]
%{public}@ - beginObservingCloudLibraryEnabled - Registering for ICCloudClientIsAuthenticatedDidChangeNotification
%{public}@ - endObservingCloudLibraryEnabled - Unregistering for ICCloudClientIsAuthenticatedDidChangeNotification
[MPStoreItemImportTrackData] Unknown import property for metadata key %{public}@
[InfoCenter] <%@: %p (%@)> invalidated
MPNowPlayingInfoCenter becoming active system fallback
MPNowPlayingInfoCenter became active system fallback error: %{public}@
MPNowPlayingInfoCenter became active system fallback
MPNowPlayingInfoCenter resigned active system fallback error: %{public}@
MPNowPlayingInfoCenter resigned active system fallback
becomeActivePlayer: %{public}@ failed %{public}@
becomeActivePlayer: %{public}@
becomeActivePlayerIfPossible: %{public}@ error: %{public}@
becomeActivePlayerIfPossible: %{public}@
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue ignored [infoCenter was invalidated]
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue [nowPlayingItemDidChange] %{public}@ -> %{public}@
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue [identifiersDidChange]
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue [no change detected]
Using deprecated -contentItemForOffset: playback queue datasource.
Using deprecated contentItem-based artwork.
[InfoCenter] <%@: %p (%@)> Content item mutated [already enqueued for update]: %{public}@
[InfoCenter] <%@: %p (%@)> Content item mutated: %{public}@
[InfoCenter] <%@: %p (%@)> sending content item changed: %{public}@
[InfoCenter] <%@: %p (%@)> sending content items changed: %{public}@
NPIC: setNowPlayingInfo: sending to MediaRemote
NPIC: setNowPlayingInfo: finished error: %{public}@
NPIC: setNowPlayingInfo: finished
[MPHomeSharingML3DataProvider] [Browse] Found library %{public}@
[MPHomeSharingML3DataProvider] [Browse] Added %{public}@
[MPHomeSharingML3DataProvider] [Browse] Browser: %{public}@ Removed %{public}@
[MPHomeSharingML3DataProvider] [Browse] Beginning scan.
[MPHomeSharingML3DataProvider] [Browse] Group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID, skipping scan.
[MPHomeSharingML3DataProvider] [Browse] Searching for libraries in home sharing group: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Ending scan.
[MPHomeSharingML3DataProvider] Removing oldest cached library: %{public}@
[MPHomeSharingML3DataProvider] Sending request '%{public}@'
[MPHomeSharingML3DataProvider] Setting property '%{public}@' to '%{public}@' returned status code %lu
[MPHomeSharingML3DataProvider] Creating error resolver for item ID: %llu, account ID: %llu, rental ID: %llu
[MPHomeSharingML3DataProvider] Creating error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
Cannot create error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Creating error resolver for account ID: %llu, token data length: %lu
Cannot create error resolver for media item: %{public}@ (accountID: %llu, tokenData: %llu bytes)
Updating rental playback start date
[MPHomeSharingML3DataProvider] Home sharing group ID changed to: %{public}@
%{public}@: Failure to update shared library: %{public}@
[MPHomeSharingML3DataProvider] Home Sharing Library became unavailable: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID known, trying to determine it from user defaults account / password.
[MPHomeSharingML3DataProvider] Determined group ID: %{public}@
Could not populate container %{public}@: %{public}@
[MPHomeSharingURLProtocol] Starting loading for %{public}@
[MPArtwork] Failed to deprioritize artwork request %{public}@ 
 unknown artwork source type
SOD: databasePath: %{public}@
SOD: Unable to create server objects database at path=%{public}@ error=%{public}@
SOD: modelObjectMatchingIdentifierSet jsonError: %{public}@
SOD: modelObjectMatchingIdentifierSet: updating identifiers [auth token backfilled from SOD] modelObject=%p updatedIdentifiers=%{public}@
SOD: purgeGlideSubscriptionDataForHashedAccoundID [missing personID]
SOD: purgeGlideSubscriptionDataForHashedAccoundID error=%{public}@
SOD: relatedIdentifierSetsForParentIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: relatedIdentifierSetsForParentIdentifierSet stepError: %{public}@
SOD: will renew playbackAuthorizationToken for identifiers=%{public}@
SOD: enumerateAssetsMissingSINFsUsingBlock stepError: %{public}@
SOD: payloadForRelatedEntityWithIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: payloadForRelatedEntityWithIdentifierSet stepError: %{public}@
SOD: payloadForRelatedEntityWithIdentifierSet jsonError: %{public}@
SOD: Unable to create database schema. Attempting fallback to in-memory database.
SOD: Unable to create objects table. error: %{public}@
SOD: Unable to create assets table. error: %{public}@
SOD: Unable to create object relationships table. error: %{public}@
SOD: Unable to create playback authorzation token table. error: %{public}@
SOD: modelObjectMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: modelObjectMatchingIdentifierSet stepError: %{public}@
SOD: playbackAuthorizationToken=%{public}@ for itemIdentifier=%{public}@
SOD: Unable to create statements. error: %{public}@
SOD: importObject: stepError: %{public}@
SOD: importObject: jsonError: %{public}@ payload=%{public}@
SOD: importObject: imported object [success] source=%{public}@ identifier=%{public}@ type=%{public}@
SOD: insertObjectError: %{public}@
SOD: importAssetURL: updating URL [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetURL: skipping [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetURL: failed [SQL error] upsertAssetError=%{public}@
SOD: importAssetSinf: [success] type=miniSinf identifier=%{public}@ person=%{public}@
SOD: importAssetSinf: skipping [existing miniSinf already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetSinf: [success] type=fullSinf identifier=%{public}@ person=%{public}@
SOD: importAssetSinf: skipping [existing fullSinf already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetSinf: skipping [asset does not exist] identifiers=%{public}@ flavor=%d sinfType=%d
SOD: importPlaybackAuthorizationToken: %{public}@
SOD: importing playbackAuthorizationToken=%{public}@ for identifier=%{public}@ expirationDate=%{public}@ trustID=%{public}@ finished with error=%{public}@
SOD: relateIdentifiers:toParentIdentifiers:order: %{public}@
SOD: removeRelationshipsForParentIdentifiersError: %{public}@
SOD: importAssetMiniSINF: update failed error=%{public}@
SOD: importAssetFullSINF: update failed error=%{public}@
SOD: _existingAssetMatchingIdentifier stepError: %{public}@
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet query='%{public}@' stepError=%{public}@
[MPHomeSharingRentalTracker] Loading rentals from %{public}@
[MPHomeSharingRentalTracker] Adding rental with item ID: %llu, database ID: %{public}@
[MPHomeSharingRentalTracker] Removing rental with item ID: %{public}@
[MPHomeSharingRentalTracker] iTunes rental checkout response: %{public}@
Failed iTunes side checkout request (response code = %lu)
Failed to checkin rental to iTunes Store.
[MPHomeSharingRentalTracker] Removing all rentals for database ID: %{public}@
[MPHomeSharingRentalTracker] Saving rentals to %{public}@
Recommendation item should be a dictionary: %{public}@
Recommendation item modeling failure: %{public}@
Property href of contents dictionary not found for recommendation item: %{public}@
Contents dictionary not found on relationships of recommendation item: %{public}@
Relationships dictionary not found on recommendation item: %{public}@
Property href not found for recommendation item: %{public}@
Unexpected trait type %{public}@
No traits array found in attributes of recommendation item: %{public}@
Dropping empty node: %{public}@
[MPHomeSharingErrorResolver] Reconnecting to HomeSharing Library for error: %{public}@
[MPHomeSharingErrorResolver] Token response: %{public}@
[MPHomeSharingErrorResolver] Got keybag data of length: %lu
[MPHomeSharingErrorResolver] Got token data of length: %lu
Updated launch commands error: %{public}@
Updated launch commands
<%@: %p (%@)> invalidated
<%@: %p (%@)> property mutated after invalidated: %@
<%@: %p (%@)> RCC: dispatchCommandEvent: ignoring [command center was invalidated] event=%p
<%@: %p (%@)> RCC: dispatchCommandEvent: received nil commandEvent
<%@: %p (%@)> RCC: dispatchCommandEvent: failing [command center was invalidated] - command=%{public}@ event=%p
<%@: %p (%@)> RCC: dispatchCommandEvent: command=%{public}@ event=%p
commandType=%ld
CommandDispatch
<%@: %p (%@)> RCC: dispatchCommandEvent: command finished command=%{public}@ event=%p
[RCC] _updateCanBeNowPlayingApplicationIfNeeded: canBeNowPlayingApplication=%{BOOL}u playerPath=%{public}@ commands=%{public}@
<%@: %p (%@)> [MPRemoteCommandCenter] setSupportedCommands %{public}@
Error setting supported commands error: %{public}@
[MPHomeSharingRentalErrorResolver] Checking in rental on iTunes side with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental for rental ID: %llu, account ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in failed
[MPHomeSharingRentalErrorResolver] Rental checkout failed: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental on iTunes side after failure with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental checkout response: %{public}@
[MPHomeSharingRentalErrorResolver] Rental checkout finished
[MPHomeSharingRentalErrorResolver] iTunes set rental playback start date response: %{public}@
%{public}@ - Skipping all properties for setPlaylistProperties:trackList:forPlaylist:completionHandler: %@
%{public}@ - Skipping all properties for setItemProperties:forSagaID: %@
[CloudPersonalization] Deprioritize artwork request not supported for artworkType=%ld, sourceType=%ld
%{public}@ - reason=%d, disableCloudLibraryReason=%d
%{public}@ - Skipping all properties for setItemProperties:forPurchaseHistoryID: %{public}@
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Requesting cloud authentication state [cloudEnabled=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Retrieved cloud authentication state [isAuthenticated=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Cloud authentication did change [%{BOOL}u -> %{BOOL}u] - Posting notifications [MPCloudControllerIsCloudEnabledDidChangeNotification]
%{public}@ - isCloudEnabled=%d, didHandleStateChange=%d
%{public}@ - _initializeUpdateInProgressState - Setting up Saga update progress handler
%{public}@ - Setting CloudLibraryUpdateInProgress to %{BOOL}u CloudLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Saga]
%{public}@ - _initializeUpdateInProgressState - Setting up Jalisco update progress handler
%{public}@ - Setting JaliscoLibraryUpdateInProgress to %{BOOL}u JaliscoLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Jalisco]
%{public}@ - _becomeActiveAndWaitUntilDone: - Activating
%{public}@ - _resignActive - Resigning
%{public}@ - _resignActive - Removing update handlers on inactive account
%{public}@ - Received notification [%@]
[MPCloudController] Failed to find ML3 equivalent for property: %{public}@
NULL image being analyzed.
Zero-sized image being analyzed.
MP->AV QueuePlayer Log Mapping: %{public}@ -> %{public}@
 MPQueuePlayer currentItem changed: %{public}@ -> %{public}@
 MPQueuePlayer rate changed: %f -> %f
 MPQueuePlayer item status changed: %{public}@ -> %{public}@
 insufficient external protection changed
Beginning playback queue transaction.
Setting rate to 0 for playback queue transaction.
Committing playback queue transaction, %lu queued operations.
Restoring rate to %f after playback queue transaction.
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (not enqueued)
Setting rate on AVQueuePlayer: %f
Ignoring requested rate (%f), route changed during playback queue transaction.
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (enqueued)
[{public}%@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (not enqueued)
 AVPlayerCurrentItemDidChangeNotification
Setting default EQ to %ld
%{public}@ was paused for playback queue transaction, but route changed. Not resuming after playback queue transaction commits.
%{public}@: Got bag from server environment %{public}@ with correlation key %{public}@.
Determined average bitrate for %{public}@: %f
Determined effective cloud network type: %ld
RRC %{public}@: Ending automatic reloading [dealloc]
RRC %{public}@: Canceling request [request changed]
RRC %{public}@: Needs reload [request changed]
RRC %{public}@: Reloading [automatic, request changed]
RRC %{public}@: Removing observer for %p
RRC %{public}@: Updating response to %p
RRC %{public}@: Needs reload [response invalid before -setResponse:]
RRC %{public}@: Reloading [response invalid before -setResponse:]
RRC %{public}@: Adding observer for %p
RRC %{public}@: Needs reload [response invalid before -setResponse: after adding observer]
RRC %{public}@: Reloading [response invalid before -setResponse: after adding observer]
RRC %{public}@: Starting automatic reloading
RRC %{public}@: Reloading [automatic, beginLoading]
RRC %{public}@: Ending automatic reloading
RRC %{public}@: Needs reload [request by client]
RRC %{public}@: Canceling request [request by client]
RRC %{public}@: Reloading [automatic, requested by client]
RRC %{public}@: Deferring clearing of %p to delegate %p
RRC %{public}@: Delegate %p timeout replacing response.
RRC %{public}@: Delegate %p clearing response with %p
RRC %{public}@: Clearing response
RRC %{public}@: Reloading [requested by client]
RRC %{public}@: Needs reload [response invalid]
RRC %{public}@: Reloading [automatic, response invalid]
RRC %{public}@: Reloading [retry, failed request]
RRC %{public}@: Scheduled reload skipped.
RRC %{public}@: Request loading skipped [no request]
RRC %{public}@: Request loading skipped [already loading]
RRC %{public}@: Request loading skipped [not needed]
RRC <%{public}@ %p>: Request finished loading
RRC <%{public}@ %p>: Request failed with error: %{public}@
RRC <%{public}@ %p>: Recovering from error. shouldRetry: %d
RRC <%{public}@ %p>: Delegate %p returned shouldRetry: %d
RRC <%{public}@ %p>: Needs reload [failed request]
RRC <%{public}@ %p>: Scheduling retry after %fs
RRC <%{public}@ %p>: Deferring replacement of %p to delegate %p
RRC <%{public}@ %p>: Delegate %p timeout replacing response.
RRC <%{public}@ %p>: Delegate %p replacing response with %p
RRC <%{public}@ %p>: Replacing response
RRC %{public}@: Reloading [retry mismatched request revision]
No domains in music common dictionary of bag, can't generate URL: %{public}@
No host found for API domain requested (%{public}@): %{public}@
No music subscription dictionary in bag, can't get allowed FCKinds for CarPlay
CarPlay FCKinds allow list not found in musicSubscription dictionary, wrongly typed or empty: %{public}@
Encountered negative FCKind in CarPlay FCKinds allow list in bag, dropping it: %{public}@
Dropping node because parent requires displaying utterance and no utterance was found in item dictionary: %{public}@
section=%{public}@
SIL-Replace-Enumerate
SIL-Replace-Reload
SIL-Replace
SIL-Proxy %{public}@: init sil=%{public}@ itemsCount=%lld
SIL-Proxy %{public}@: insertItemsAtHead itemsCount=%lld
SIL-Proxy %{public}@: insertItems:afterItem: afterItem=%{public}@ itemsCount=%lld
SIL-Proxy %{public}@: insertItemsAtTail itemsCount=%lld
SIL-Proxy %{public}@: moveItemToHead item=%{public}@
SIL-Proxy %{public}@: moveItem:afterItem: item=%{public}@ afterItem=%{public}@
SIL-Proxy %{public}@: moveItemToTail item=%{public}@
SIL-Proxy %{public}@: removeItem item=%{public}@
SIL-Proxy %{public}@: updateSection
SIL-Proxy %{public}@: updateItem item=%{public}@
Started observing routing context UID changes for app bundle: %{public}@
Start prewarming remote view controller. Configuration : %{public}@
Stop prewarming remote view controller.
Dismissing remote view controller at app's request.
Received request to accept new connection.
Connection to remote view controller invalidated.
Connection established to remote view controller.
MediaControls dismissed with reason : %@
Updating remote view controller routing context UID : %{public}@
%{public}s: Changing %{public}@ preference to %{BOOL}u.
<%{public}@: %p>_targetSessionID setting target session ID = %{public}d
<%{public}@: %p> setting routing context UID = %{public}@
[EndpointRoutingDataSource] Route search failed with error: %@
[EndpointRoutingDataSource] Successfully found and picked route.
Cannot post _MPContentItemDidChangeNotification, item is missing required identifier.
Received artwork with length %llu for content item %@.
<_MPActiveUserChangeMonitor %p> - Ingesting notification %{public}@ [%ld of %ld]
<_MPActiveUserChangeMonitor %p> - Firing notification timer %p [%ld of %ld notifications received] - received=[%{public}@] - expected=[%{public}@]
<_MPActiveUserChangeMonitor %p> - Started notification timer %p
<_MPActiveUserChangeMonitor %p> - Canceled notification timer %p [%{public}@]
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument. ** This will break in a future release. **
RCC: Command handler completion timeout. Not waiting on completion. event=%{public}@
RCC: invokeCommandWithEvent: handler=%{public}@ event=%{public}@
RCC: invokeCommandWithEvent: finished handler=%{public}@ event=%p
Did not find playlist for identifiers: %{public}@
Created new application output context: %{public}@ for data source: %{public}@
<%{public}@:%p> setting routing context UID = %{public}@
<%{public}@:%p> Setting predicted device: %@
Found picked device with nil UID: %{public}@
Found discovery device with nil UID: %{public}@
picked endpoint route, set devices: %{public}@
picked endpoint route, clear system endpoint: %{public}@
Output device UIDs determined to be available. Output devices from AVODDS will no longer be ignored.
Output device UIDs determined to be unavailable. Output devices from AVODDS will be ignored.
Reset predicted outputDevice
<%{public}@: %p> Personal devices changed from %{public}@, to: %{public}@
<%{public}@: %p> External device: %{public}@ changed endpoint to: %{public}@
MPMediaAPICollectionItemMetadataRequest %p starting with requestIDs=%d, isCancelled=%{BOOL}u
MPMediaAPICollectionItemMetadataRequest %p cannot load metadata for identifier=%{public}@ (missing storeID)
MPMediaAPICollectionItemMetadataRequest %p could not load bag for request context. error=%{public}@
MPMediaAPICollectionItemMetadataRequest %p could not load value for domain configuration
MPMediaAPICollectionItemMetadataRequest %p could not load value for default domain
MPMediaAPICollectionItemMetadataRequest %p could not load value for country code
MPMediaAPICollectionItemMetadataRequest %p setting halfLifeDuration=%f seconds
MPMediaAPICollectionItemMetadataRequest %p request was cancelled
MPMediaAPICollectionItemMetadataRequest %p starting import request for %d itemIdentifiers
MPMediaAPICollectionItemMetadataRequest %p finished with error=%{public}@, statusCode=%d, responseDictionary=%p
MPMediaAPICollectionItemMetadataRequest %p finished with statusCode=%d, responseDictionary=%p, isFinalResponse=%{BOOL}u
[MPHomeMonitor setupIfNecessary:] <MPHomeMonitor %p> %@
[MPHomeMonitor setupIfNecessary:] Ignoring - Device is not valid home accessory
MPHomeMonitor initialized for non-valid accessory
<MPHomeMonitor %p> Posting Notification: %@
[BaseRoutingDataSource] Unpicking AirPlay AV routes...
[BaseRoutingDataSource] Failed to unpick AirPlay AV routes: %{public}@
[BaseRoutingDataSource] Successfully unpicked AirPlay AV routes
[BaseRoutingDataSource] Received external screen type did change notification with screen type = %ld
[BaseRoutingDataSource] Received active audio route did change notification: %{public}@
[BaseRoutingDataSource] Active audio category changed from %{public}@ to %{public}@
[MPHomeUserMonitor userMonitorWithUserIdentity:fromUserIdentityStore:] identityProperties=nil
[MPHomeUserMonitor userMonitorWithUserIdentity:fromUserIdentityStore:] userMonitor=nil
MPHomeUserMonitor.isExplicitSettingEnabledForCurrentUser returning fallback value=%{BOOL}u [monitorForCurrentUser=nil]
[MPHomeUserMonitor setExplicitSettingEnabledForCurrentUser:] failed to set explicitSettingEnabled=%{BOOL}u [monitorForCurrentUser=nil]
MPHomeUserMonitor.isPrivateListeningEnabledForCurrentUserAndAccessory returning fallback value=%{BOOL}u [monitorForCurrentUser=nil]
[MPHomeUserMonitor setPrivateListeningEnabledForCurrentUserAndAccessory:] failed to set privateListeningEnabled=%{BOOL}u [monitorForCurrentUser=nil]
<MPHomeUserMonitor %p> HMSetting "%{public}@" failed to update. shouldAllowExplicit=%{BOOOL}u error=%{public}@
<MPHomeUserMonitor %p> _loadAllowExplicitValueFromSetting: failed [invalid setting]
<MPHomeUserMonitor %p> _loadAllowExplicitValueFromSetting: userID=%{private}@ cachedValue=%{BOOL}u newValue=%{BOOL}u
[<MPHomeUserMonitor %p> _loadCurrentAccessoryPrivateListening:] updating value privateListeningEnabled=%{BOOL}u for userID=%{private}@
[<MPHomeUserMonitor %p> posting notification: %{public}@
<MPHomeUserMonitor %p> HMSettingsDelegate settingsDidUpdate
<MPHomeUserMonitor %p> HMUserDelegatePrivate user:didUpdateUserListeningHistoryUpdateControl:forHome:
_isValidSetting() setting=nil
_isValidSetting() invalid setting.keypath. Expected:%{public}@ Found:%{public}@
_isValidSetting() setting with keypath=%{public}@ valueClass=nil. Returning isValid=YES
_isValidSetting() invalid setting.valueClass. Expected:%{public}@ Found:%{public}@
Failed to decode cached now playing error: %{public}@
Failed to encode cached now playing error: %{public}@
Failed to decode cached queue descriptor error: %{public}@
Failed to encode cached queue descriptor error: %{public}@
Omitting library IDs [missing databaseID] identifierSet=%{public}@
Omitting personalizedStore IDs [missing databaseID] identifierSet=%{public}@
Setting local endpoint volume to: %f
Setting AVSystemController volume to: %f
Adjusting local endpoint volume by: %f
%@ setOutputDeviceVolume: %@ to: %f for endpoint: %@
%@ Error setting output device volume: %{public}@
%@ setVolume to: %f endpoint: %@
%@ Error setting group volume: %{public}@
%@ initializeVolume - volume will change to %f
%@ initializeVolume - volume capabilities will change to %{public}@
%@ initializeVolume
%@ initializeVolume - Error getting output device volume control capabilities: %{public}@
%@ initializeVolume - Error getting output device volume: %{public}@
%@ initializeVolume - Error getting group volume control capabilities: %{public}@
%@ initializeVolume - Error getting master volume: %{public}@
%@ didChangeVolumeCapabilities %{public}@
%@ Error getting output device volume: %{public}@
%@ Error getting master volume: %{public}@
%@ didChangeVolume %f
Cancelled downloads %{public}@ error: %{public}@
Cancelled downloads %{public}@
Failed to cancel downloads %{public}@ with error %{public}@
Cancelled purchases %{public}@, result %d error: %{public}@
Cancelled purchases %{public}@, result %d
Failed to cancel purchases %{public}@ with error %{public}@
Paused downloads %{public}@ error: %{public}@
Paused downloads %{public}@
Caneled purchases %{public}@ error: %{public}@
Caneled purchases %{public}@
Failed to pause downloads %{public}@ with error %{public}@
Failed to resume downloads %{public}@ with error %{public}@
Failed to restart downloads %{public}@ with error %{public}@
Finished attempted restart with removed downloads: %{public}@
Failed to move download: %{public}@ with error: %{public}@
Failed to move purchase: %{public}@ with error: %{public}@
[%{public}@] UNKNOWN PURCHASE TYPE: %li
Download did change %{public}@ with no existing download.
Download did change: %{public}@. Download: %{public}@
Download states did change: %{public}@, progressed downloads: %{public}@, added downloads: %{public}@, finished: %{public}@
MPMediaAPICollectionMetadataRequest %p starting with type=%d, isCancelled=%{BOOL}u
MPMediaAPICollectionMetadataRequest %p could not load bag for request context. error=%{public}@
MPMediaAPICollectionMetadataRequest %p could not load value for domain configuration
MPMediaAPICollectionMetadataRequest %p could not load value for default domain
MPMediaAPICollectionMetadataRequest %p could not load value for country code
MPMediaAPICollectionMetadataRequest %p setting halfLifeDuration=%f seconds
MPMediaAPICollectionMetadataRequest %p request was cancelled
MPMediaAPICollectionMetadataRequest %p starting import request for collectionID=%{public}@ type=%d
MPMediaAPICollectionMetadataRequest %p finished with error=%{public}@, statusCode=%d, responseDictionary=%p
softlink:r:path:/System/Library/PrivateFrameworks/HomeKit.framework/HomeKit
softlink:r:path:/System/Library/PrivateFrameworks/HomeKit.framework/HomeKit
NSFastEnumeration
MPModelStoreBrowseContentItemBuilder
MPMediaDownloadManager
MPModelForYouRecommendationsMusicKitRequestOperation
MPMediaControlsConfiguration
NSSecureCoding
NSCoding
NSCopying
MPStoreSocialUnblockOperationDataSource
MPStoreSocialRequestOperationDataSource
NSObject
MPMediaLibraryView
MPUtilities
MPMiddlewareOperation
MPRequest
MPResponse
MPModelResponse
MPModelLyricsKind
MPModelLyrics
MPMoviePlayerController
AVPlayerViewControllerDelegatePrivate
AVPlayerViewControllerDelegate
MPMediaPlayback
_MPMoviePlayerProxyView
MPTimedMetadata
MPMovieAccessLog
MPMovieErrorLog
MPMovieAccessLogEvent
MPMovieErrorLogEvent
MPAssistantAnalyticsReportingController
MPUniversalTrackIDAdditions
MPRTCReportingSession
MPTiledArtworkRequest
MPRTCReportingEvent
MPModelLibraryDeleteEntityChangeRequestOperation
MPAVItem
MPAVItemAdditions
MPStoreItemMetadataRequest
MPQueueFeeder
MPModelLibraryDeleteEntityChangeRequest
MPStoreItemMetadata
MPAVRoutingTableViewCell
MPAVRoutingThemeableCellView
MPMediaControlsViewController
UIViewControllerTransitioningDelegate
UIViewControllerAnimatedTransitioning
_MPMediaControlsPresentationController
MPMediaControlsStandaloneViewController
MPTiledArtworkDataSource
MPArtworkDataSource
4@P a
MPModelLibraryRequestOperation
_MPModelLibraryRequestItemsQueryOperation
MPAVController
MPAVRoutingControllerDelegate
MPAVQueueControllerDelegate
AVAudioSessionDelegateMediaPlayerOnly
AVAudioSessionDelegate
MPArtworkCatalog
MPStoreItemMovieClip
MPLibraryKeepLocalStatusObserverConfiguration
MPRadioStationEvent
MPMutableRadioStationEvent
MPRadioController
MPClientRadioController
MPStoreModelRadioStationBuilder
MPModelSongKind
MPModelSong
MPAVTelevisionRoutingDataSource
MPAssistantMusicLogEvent
MPAssistantLogEvent
MPNowPlayingInfoAudioFormat
MPMediaLibraryAlbumAppData
MPStoreFileAssetInfo
MPMediaRemoteEntityTranslatorContext
_MPMediaRemoteEntityPropertyTranslator
MPEntityPropertyTranslator
MPMediaRemoteEntityTranslator
MPWeakTimer
MPModelLibraryKeepLocalChangeRequest
MPPCompoundPredicate
MPAVPolicyEnforcer
MPTiledArtworkRepresentationCacheKey
MPArtworkDataSourceVisualIdenticality
MPAVRoutingTableViewCellSubtitleTextState
MPRemotePlaybackQueue
MPLocalMediaQueryRemotePlaybackQueue
MPRadioStationRemotePlaybackQueue
MPGenericTracklistPlaybackQueue
MPCustomDataPlaybackQueue
MPEmptyPlaybackQueue
MPRouteButton
MPStoreLyricsRequest
MPModelPodcastAuthor
MPRadioRecentStationsGroup
MPModelStoreBrowseSectionBuilder
MPModelStoreGroupingsMusicKitResponseParser
MPStoreModelAlbumBuilder
MPShuffleableSectionedIdentifierList
_MPSSILDelegate
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
_MPSSILImplementationInitToken
MPExclusiveAccessToken
_MPSSILImplementation
MPStoreLyricsSnippetRequest
MPModelLibrarySearchScope
MPModelLibraryAlbumAppDataChangeRequestOperation
MPModelRecentlyPlayedRequest
MPModelLibraryAddToPlaylistChangeRequest
MPModelStoreBrowseResponse
MPArtworkResizeUtility
MPAVLightweightRoutingController
MPSectionedCollection
NSMutableCopying
MPModelSupport
MPMutableSectionedCollection
MPAdditions
MPStoreModelTVShowBuilder
MPModelPlayEvent
Convenience
MPModelForYouRecommendationsResponse
MPMediaControlsStatusBarStyleOverridesCoordinator
SBSStatusBarStyleOverridesCoordinatorDelegate
MPModelStoreRadioMusicKitRequestOperation
MPSectionedIdentifierListEnumerator
MPSectionedIdentifierListReverseEnumerator
_MPSectionedIdentifierListProxyEntry
MPSectionedIdentifierListEnumerationResult
MPFastForward
MPStoreHLSAssetInfo
MPAssistantMusicSummaryLogEvent
MPVolumeSlider
MPVolumeControllerDelegate
MPVolumeDisplaying
MPVolumeView
MPAVLightweightRoutingControllerDelegate
MPModelLibraryRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPModelLibraryResponse
MPModelResponseDetailedKeepLocalStatusRequesting
MPModelLibraryResponseKeepLocalStatusConfiguration
MPModelForYouRecommendationsRequest
MPVolumeViewController
MPVolumeSettingsController
MPSectionedIdentifierListEntryPositionKey
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationTrackingEntry
MPSectionedIdentifierListEntry
MPSectionedIdentifierListTailEntry
MPSectionedIdentifierListHeadEntry
MPSectionedIdentifierListItemEntry
MPMoviePlayerViewController
MPRemoteCommandEvent
MPSkipIntervalCommandEvent
MPSeekCommandEvent
MPRatingCommandEvent
MPChangePlaybackRateCommandEvent
MPFeedbackCommandEvent
MPSkipTrackCommandEvent
MPSpecialSeekCommandEvent
MPChangePlaybackPositionCommandEvent
MPChangeRepeatModeCommandEvent
MPChangeShuffleModeCommandEvent
MPCreateRadioStationCommandEvent
MPSetPlaybackQueueCommandEvent
MPReorderQueueCommandEvent
MPInsertIntoPlaybackQueueCommandEvent
MPChangeLanguageOptionCommandEvent
MPAdvanceShuffleModeCommandEvent
MPAdvanceRepeatModeCommandEvent
MPPlaybackSessionCommandEvent
MPSetPlaybackSessionCommandEvent
MPPreloadPlaybackSessionCommandEvent
MPChangeQueueEndActionCommandEvent
MPPostEventNoticeCommandEvent
MPLeaveSharedPlaybackSessionCommandEvent
MPMediaAPICollectionItemMetadataRequestController
MPArtworkImageAttachments
MPModelLibraryDefaultSectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPModelStoreBrowseRequest
MPMediaControlsLanguageOptions
MPModelArtistKind
MPModelArtist
MPAVRoutingController
MPAVRoutingControllerSelection
MPAVRoutingControllerSelectionQueue
MPModelComposerKind
MPModelComposer
MPServerObjectDatabaseImportRequest
MPServerObjectDatabaseImportResult
MPServerObjectDatabaseMediaAPIImportChildRelation
MPServerObjectDatabaseMetadataImportRequest
MPServerObjectDatabaseMediaKitImportRequest
MPServerObjectDatabaseStorePlatformImportRequest
MPServerObjectDatabaseAssetImportRequest
MPServerObjectDatabaseSubPlaybackDispatchImportRequest
MPServerObjectDatabaseSINFImportRequest
_MPModelShimRequestMiddlewareOperation
_MPModelShimRequestMiddleware
MPMiddleware
MPModelShimRequest
_MPModelShimResponseBuilder
MPModelShimResponse
MPRTCReportingPrepareInternalSessionOperation
_MPMediaLibraryMLCoreStorage
MediaLibraryCore
MPModelStoreBrowseSectionUniformContentItemTypeResolver
MPHomeManagerObserver
HMHomeManagerDelegatePrivate
HMHomeManagerDelegate
HMHomeDelegatePrivate
HMHomeDelegate
MPContentItemAdditions
MPPlaybackContext
MPContentTasteController
MPStoreItemMetadataRequestController
MPModelStoreBrowseMusicKitRequestOperation
MPButton
MPMediaPlaylist
MPMediaPlaylistCreationMetadata
MPModelTVEpisodeKind
MPModelTVEpisode
MPModelLibraryGlobalPlaylistImportChangeRequestOperation
MPPlaybackArchiveConfiguration
MPPlaybackArchive
MPMutablePlaybackArchive
MPMediaQuery
MPPProtobufferCoding
MPMediaPredicate
MPMediaPropertyPredicate
MPMediaConditionalPredicate
MPMediaCompoundPredicate
MPMediaCompoundAllPredicate
MPMediaCompoundAnyPredicate
MPMediaContainmentPredicate
MPMediaPersistentIDsPredicate
_MPMediaSearchStringPredicate
MPMediaQueryAdditions
MPModelLibraryImportChangeRequestOperation
MPStoreModelPlaylistBuilder
MPMusicPlayerController
MPMusicPlayerControllerClient
_MPMusicPlayerMediaItemProxy
NewMP
MPArtworkRepresentation
MPArtworkRepresentationCollection
_MPStaticArtworkVisualIdenticalityIdentifier
_MPArtworkCatalogPlaceholderDataSource
_MPArtworkCatalogStaticDataSource
_MPArtworkCatalog
MPPConditionalPredicate
MPAsyncOperation
MPUserIdentityConsuming
MPMediaItem
MPNondurableMediaItem
MPMediaItemArtwork
MPSectionedIdentifierListIdentifierPair
MPModelLibraryKeepLocalStatusRequestOperation
QueryCriteriaResultsCache
0 0@
MPMediaLibrary
_MPActiveUserChangeMonitorDelegate
MPMediaLibraryContentProtectionAdditions
MPMediaLibraryConnectionAssertion
_MPMediaLibraryEntityChange
MPMediaLibrarySyncAnchorSupport
MPModelRequest
MPMediaPickerControllerDelegatePrivate
MPMediaPickerControllerDelegate
MPMediaPickerController
MPMusicMediaPickerClientController
MPMediaPickerController_Appex
MPMediaPickerRemoteViewLoader
MPMediaPickerConfiguration
MPAVQueueCoordinator
MPAVQueueCoordinating
MPLogDescription
MPAVQueueCoordinatorAdditions
_MPModelMediaRemoteItemArtist
_MPModelMediaRemotePodcastEpisodeAuthor
MPAddKeepLocalControl
MPStoreLyricsSnippetRequestOperation
MPStoreModelMovieMediaClipBuilder
MPLibraryKeepLocalStatusObserver
MPMediaDownloadObserver
MPLibraryKeepLocalStatusObserverDetailedContainerConfiguration
MPLibraryKeepLocalStatusObserverIndividualEntityConfiguration
MPMediaItemCollection
MPNotificationObserver
MPMediaDownload
MPStoreModelArtistBuilder
MPModelRadioStationEventKind
MPModelRadioStationEvent
MPAVErrorResolverBlockHandler
MPAVErrorResolverDelegate
MPDetailSlider
MPDetailedScrubbing
MPDetailScrubControllerDelegate
MPRemotePlayerServiceProtocol
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerApplicationController
_MPMusicPlayerQueueItemsProxy
MPMusicPlayerControllerQueue
MPMusicPlayerControllerMutableQueue
MPPlayableContentManager
CARSessionObserving
MPPlayableContentCallbackContext
MPStoreLyricsResponse
MPStoreLyricsRequestOperation
MPModelRecentlyPlayedResponse
MPMediaAPIParserLayer
MPAudioDeviceController
_MPLazySectionedCollectionStorage
MPLazySectionedCollection
MPMediaAPICollectionItemMetadataResponse
MPModelStaticAssetKind
MPModelStaticAsset
MPAVRoutingViewController
UITableViewDataSource
UITableViewDelegate
UIScrollViewDelegate
MPAVRoutingTableViewCellDelegate
MPAVRoutingViewControllerItems
MPAVRoutingViewControllerUpdate
MPStoreModelSongBuilder
MPRemoteRadioController
MPServiceRadioController
NSXPCListenerDelegate
MPModelObjectMediaItem
MPStoreItemMetadataCache
MPNowPlayingInfoLyricsItemToken
MPNowPlayingInfoLyricsItem
MPNowPlayingInfoLyricsEvent
MPStoreSocialFollowOperationDataSource
MPAVAuxiliaryDevice
_MPAbstractNetworkArtworkDataSourceVisualIdenticalityIdentifier
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MPAbstractNetworkArtworkDataSource
AVAssetResourceLoaderDelegate
_MPArtworkDataSourceURLCache
MPMusicPlayerQueueDescriptor
MPMusicPlayerMediaItemQueueDescriptor
MPMusicPlayerStoreQueueDescriptor
MPMusicPlayerPlayParameters
MPMusicPlayerPlayParametersQueueDescriptor
MPMusicPlayerRadioStationQueueDescriptor
MPMusicPlayerPlaybackArchiveQueueDescriptor
MPModelSortDescriptor
MPMultiSortDescriptor
MPModelLibraryModelSectionedCollectionDataSource
MPAVErrorResolver
MPAVErrorResolverAdditions
MPModelMediaClipKind
MPModelMediaClip
MPAVRoutingViewItem
MPMRAVEndpointWrapper
MPMRAVOutputContextWrapper
MPMRAVEndpointObserverWrapper
MPConcreteMediaItem
MPCacheableConcreteMediaEntity
MPConcreteMediaItemArtwork
MPConcreteMediaItemCollection
MPConcreteMediaPlaylist
MPMediaArray
MPMediaEntityResultSetArray
MPConcreteMediaEntityPropertiesCache
MPMediaLibraryAdditions
MPMediaLibraryDataProviderML3
MPMediaLibraryDataProviderPrivate
MPMediaLibraryDataProvider
MPMediaLibraryDataProviderML3Additions
MPAVRouteConnection
ML3Additions
MPModelStaticRequest
MPModelStaticResponse
MPModelLibraryAlbumAppDataChangeRequest
MPAVRoutingTableHeaderView
MPStoreFileAssetFairPlayInfo
MPMediaEntity
MPMediaQuerySectionInfo
MPMediaQueryMutableSectionInfo
MPVolumeController
MPVolumeControllerDataSourceDelegate
MPMediaChapter
MPStoreLibraryPersonalizationCollectionDataSource
MPRTCWeakLinkSupport
MPAudioVideoRoutingPopoverController
MPAVRoutingViewControllerDelegate
MPKeyValueObserver
MPModelLibrarySearchRequestOperation
MPStoreItemOffer
MPBaseEntityTranslator
_MPBaseEntityRelationshipTranslator
MPEntityRelationshipTranslator
MPAVOutputDeviceDescription
MPAVRoute
MPModelForYouRecommendationsRequestOperation
MPStoreLibraryMappingResponse
MPDownloadProgressView
_MPDownloadProgressRingView
MPModelStoreBrowseRequestOperation
MPMediaKitEntityPayloadTransformer
MPMediaKitEntityTranslatorContext
_MPMediaKitEntityPropertyTranslator
_MPMediaKitEntityRelationshipTranslator
MPMediaKitEntityTranslator
MPMediaKitGenericObjectTranslator
MPModelMovieKind
MPModelMovie
MPModelRadioStationKind
MPModelRadioStation
MPModelGroupKind
MPModelGroup
MPModelTVShowCreator
MPPlaceholderArtwork
MPMediaAdditions
MPAVClippingTableView
MPModelPlaylistEntriesShareEligibilityRequestOperation
MPModelLibraryAddToPlaylistChangeRequestOperation
MPStoreModelPlaybackPositionBuilder
MPModelPodcastKind
MPModelPodcast
MPStoreModelRecordLabelBuilder
MPVolumeHardwareButtonController
MPModelLibraryHasBeenPlayedChangeRequest
MPStoreArtworkDataSource
MPMediaQuerySection
MPARC4RandomSource
MPRandom
MPRandomDistribution
MPArtworkResizeOperation
MPBrowsableContentItem
MPArtworkColorAnalysis
MPMutableArtworkColorAnalysis
MPVolumeGroupSliderCoordinator
Debugging
Padding
MPModelStoreBrowseContentItem
MPMediaBooklet
MPModelStoreBrowseRoomRequest
MPStoreModelTVEpisodeBuilder
MPMediaLibrarySystemFilters
MPPSearchStringPredicate
MPMediaLibraryDataProviderSystemML3StringCoercion
MPMediaLibraryDataProviderSystemML3
MPStoreModelGenericObjectBuilder
_MPKeyPathEntityPropertyTranslator
_MPKeyPathEntityRelationshipTranslator
MPStoreRadioStreamAssetInfo
MPMediaAPICollectionItemAuthTokenRenewalRequest
MPMediaAPIMetadaRequestProtocol
MPAVBatteryLevel
4AP`
MPStoreLibraryPersonalizationRequestOperation
_MPStoreLibraryPersonalizationAggregateLibraryAddedOperation
MPPlaybackUserDefaults
MPPlaybackEQSetting
MPVolumeHUDController
MPMusicPlayerControllerSystemServer
MPMusicPlayerSystemController
MPSystemMusicPlayerController
MPModelStoreGroupingsMusicKitRequestOperation
MPStoreAssetPlaybackResponse
MPMutableStoreAssetPlaybackResponse
MPCloudServiceStatusController
ICEnvironmentMonitorObserver
MPModelStoreBrowseRoomMusicKitResponseParser
MPPMediaQuery
MPStoreItemOfferAsset
MPDispatchQueueExclusiveAccessToken
MPPThreadKeyExclusiveAccessToken
MPStoreModelStoreAssetBuilder
MPModelVerifyLocalFileAssetIntegrityRequest
MPMediaQueryCriteria
MPStoreSocialPendingFollowRequestOperationDataSource
MPStoreItemImportTrackData
MPRTCReportingSessionSummaryEvent
MPModelForYouRecommendationItem
MPLibraryAddStatusObserverAdditions
MPRTCReportingItemSessionCreating
MPRTCReportingItemSessionContaining
MPRTCReportingController
_MPRTCReportingAVItemDeallocationHandler
MPModelLibraryPlaylistEditChangeRequestOperation
MPProtocolProxy
MPModelLibraryTransientStateController
_MPModelLibraryRegisteredTransientState
MPNowPlayingInfoCenter
MPMediaRemoteEntityArtworkGenerator
_MPNowPlayingInfoTransportableSessionRequest
MPNowPlayingInfoTransportableSessionRequest
MPNowPlayingInfoTransportableSessionResponse
MPModelObject
MPModelKind
MPNowPlayingInfoCenterArtworkContext
NowPlayingInfo
MPLibraryRemovalAdditions
MPLibraryKeepLocalStatusObserverAdditions
MPRemoteCommandHandlerDialogAction
MPRemoteCommandHandlerDialog
MPSubscriptionStatusPlaybackInformation
MPHSBrowserDelegate
HSBrowserDelegate
MPHomeSharingML3DataProvider
MPStoreModelCuratorBuilder
MPMusicPlayerControllerNowPlayingTimeSnapshot
MPMusicPlayerControllerNowPlaying
MPMusicPlayerControllerApplicationQueueModifications
MPMusicPlayerServerStateUpdateRecord
MPHomeSharingURLProtocol
MPCubicSpringTimingParameters
MPCubicSpringAnimator
MPMediaLibraryArtworkRequest
MPArtworkTokenParametersRepresenting
MPMediaLibraryArtwork
MPMediaLibraryArtworkCatalog
Saga
MPModelPlaylistEntriesShareEligibilityRequest
MPServerObjectDatabase
MPMediaKitEntityRelationshipPayloadProvider
_MPServerObjectDatabaseImporter
MPServerObjectDatabaseOperations
MPSOD_Additions
MPServerObjectDatabaseAsset
MPStoreModelRequestConfiguration
MPHomeSharingRentalTracker
MPPlayableContentManagerContext
MPModelForYouRecommendationMusicKitGroupBuilder
MPHomeSharingErrorResolver
SSAuthorizationRequestDelegate
SSRequestDelegate
MPMediaLibraryPrivacyContext
MPRemoteCommandCenter
MPRemoteCommandDelegate_Internal
_MPRemoteLaunchCommandCenter
MPStoreModelTVSeasonBuilder
MPHomeSharingRentalErrorResolver
MPModelHomeSharingAsset
MPModelLibraryHasPurchasesRequestOperation
MPModelLibraryHasPurchasesRequest
MPStoreItemLibraryImportElement
MPStoreItemLibraryImportLookupElement
MPStoreItemLibraryImport
MPMusicMediaPickerRemoteViewController
MPAVTelevisionRoute
MPAudioAndSubtitlesController
MPStoreLibraryMappingRequestOperation
MPModelRecentlyPlayedRequestOperation
MPPlaceholderAVItem
MPModelGenericObjectKind
MPModelGenericObject
GenericObjectType
MPChangeDetails
MPStoreModelObjectBuilder
MPNowPlayingInfoLanguageOptionGroupAdditions
MPNowPlayingInfoLanguageOptionAdditions
MPCloudControllerItemIDList
MPCloudController
MPModelLibraryImportChangeRequest
MPArtworkColorAnalyzer
MPArtworkColorAnalyzerAlgorithmiTunesAdditions
MediaAdditions
MPQueuePlayer
MPModelCuratorActualKind
MPModelCurator
MPStoreModelRequestOperation
MPGaplessInfo
MPStoreLibraryPersonalizationRequest
MPStoreLibraryPersonalizationResponse
MPStoreLibraryPersonalizingAdditions
MPModelPlaylistKind
MPModelPlaylist
MPStoreSocialRequestOperation
MPNetworkPlayabilityMonitor
MPModelLibraryStoreIDsImportChangeRequestOperation
MPRequestResponseController
MPAVOutputDeviceRoute
MPModelForYouRecommendationMusicKitItemBuilder
MPModelLibraryIncrementSkipCountChangeRequest
MPUbiquitousPlaybackPositionEntity
MPRTCReportingSecureKeyLoadEvent
MPTiledArtworkRepresentationToken
MPQueueFeederIdentifierRegistry
MPNowPlayingContentItem
MPStoreAssetInfoPlaybackCache
MPStoreAssetInfoPlaybackCacheRequest
MPModelGenreKind
MPModelGenre
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperationMap
MPMiddlewareChain
_MPMiddlewareChainBuilderProxy
MPStoreModelRequest
MPModelPlaybackPosition
MPStoreItemMovieClipAsset
MPPlaybackContextRemotePlaybackQueue
MPModelForYouRecommendationGroupBuilder
MPSectionedIdentifierList
_MPIdentifierListSectionProxy
MPMutableIdentifierListSection
_MPSectionedIdentifierListEncodableNextEntriesProviding
_MPSectionedIdentifierListCloneIndexEntry
MPSectionedIdentifierListPosition
MPModelLibraryPlaylistEditChangeRequest
MPStorePlatformEntityTranslatorContext
_MPStorePlatformEntityPropertyTranslator
_MPStorePlatformEntityRelationshipTranslator
MPStorePlatformEntityTranslator
MPMediaControlsRemoteViewControllerProtocol
MPMediaControlsProtocol
MPMediaControls
MPModelLibraryDownloadQueueRequest
MPModelLibraryDownloadQueueResponse
_MPModelLibraryDownloadQueueDataSource
MPNetworkObserver
MPModelStoreBrowseRoomMusicKitRequestOperation
MPRTCReportingAssetLoadEvent
MediaPlayer
MPStoreSocialRemoveFollowerOperationDataSource
MPModelForYouRecommendationItemBuilder
MPAVEndpointRoutingDataSource
MPAVCompanionProxiedEndpointRoutingDataSource
MPAVCompanionEndpointRoutingDataSource
MPCFWrapper
MPAsyncBlockOperation
MPStorePurchaseErrorResolver
MPUbiquitousPlaybackPositionController
MPContentItem
MPStoreSocialUnfollowOperationDataSource
MPModelPerson
MPLibraryAddStatusObserver
MPModelRecordLabelKind
MPModelRecordLabel
MPRadioLibrary
MPHomeSharingArtworkDataSource
MPArtworkDataSourceIdentifiable
_MPHomeSharingArtworkCacheKey
MPNowPlayingInfoLanguageOption
MPNowPlayingInfoLanguageOptionGroup
MPRadioStation
_MPActiveUserChangeMonitor
MPRemoteCommand
MPSkipIntervalCommand
MPFeedbackCommand
MPRatingCommand
MPChangePlaybackRateCommand
MPChangeRepeatModeCommand
MPChangeShuffleModeCommand
MPSkipTrackCommand
MPSetPlaybackQueueCommand
MPChangePlaybackPositionCommand
MPReorderQueueCommand
MPInsertIntoPlaybackQueueCommand
MPAdvanceShuffleModeCommand
MPAdvanceRepeatModeCommand
MPSetPlaybackSessionCommand
MPPreloadPlaybackSessionCommand
MPPlaybackSessionCommandInfo
MPSetPriorityForPlaybackSessionCommand
MPChangeQueueEndActionCommand
MPModelForYouRecommendationGroupKind
MPModelForYouRecommendationGroup
MPModelPlaylistEntryKind
MPModelPlaylistEntry
MPRemoteCommandStatus
MPModelStoreBrowseResponseParser
MPStoreItemMetadataCacheKey
MPPPropertyPredicate
MPModelStoreBrowseSection
MPPropertySet
MPMutablePropertySet
MPStoreItemMetadataResponse
MPModelTVSeasonKind
MPModelTVSeason
MPAVRoutingSheet
_MPAVRoutingSheetSecureWindow
MPModelLibrarySearchRequest
MPModelLibrarySearchResponse
MPModelLibrarySearchSectionedCollectionDataSource
MPModelLibrarySearchEntityResultContainer
_MPModelLibraryItemArtist
_MPModelLibraryPodcastEpisodeAuthor
MPMediaLibraryTranslatorSchema
MPModalPresentationWindow
MPMediaLibraryArtworkDataSource
_MPMediaLibraryArtworkDataSourceCacheKey
_MPMediaLibraryArtworkVisualIdenticalityIdentifier
MPStoreLyricsSnippetURLComponents
MPStoreSocialBlockOperationDataSource
MPModelFileAssetKind
MPModelFileAsset
MPAVOutputDeviceRoutingDataSource
MPAVCompanionProxiedOutputDeviceRoutingDataSource
MPMusicMediaPickerServiceController
MPMusicMediaPickerXPCInterfaces
MPStoreModelTVShowCreatorBuilder
MediaPlayerAdditions
MPDetailScrubController
MPModelStorePlatformMetadataGenericObjectBuilder
MPStoreLibraryPersonalizationContentDescriptor
MPUserNotification
MPMediaEntityCache
MPAVEndpointRoute
MPStoreContentReporter
MPStoreContentReport
MPMediaAPICollectionItemMetadataRequest
MPAssistantMusicAssetLoadLogEvent
MPPlaybackArchiveDisplayProperties
MPMutablePlaybackArchiveDisplayProperties
MPHomeMonitor
MPHomeManagerObserverDelegate
MPModelLibraryKeepLocalChangeRequestOperation
_MPModelLibraryKeepLocalChangeRequestUpdateItemOperation
MPAVRoutingDataSource
MPModelStoreAsset
MPContentTastePendingUpdateRecord
MPHomeUserMonitor
HMSettingsDelegate
HMUserDelegatePrivate
MPModelTVShowKind
MPModelTVShow
MPPPersistentIDsPredicate
MPExportableArtworkProperties
MPPMediaPredicateValue
MPModelSocialPersonKind
MPModelSocialPerson
MPMusicPlayerControllerSystemCache
MPAVRoutingTableViewHeaderView
MPStoreSocialServiceController
_MPStoreSocialTransientState
MPStoreSocialServiceTransientStatesSnapshot
_MPMediaLibraryEntityPropertyTranslator
_MPMediaLibraryEntityRelationshipTranslator
MPMediaLibraryEntityTranslator
MPMediaLibraryEntityTranslatorAdditions
MPMediaLibraryEntityTranslationContext
MPStoreModelMovieBuilder
MPIdentifierSet
MPMutableLocalLibraryIdentifiers
MPLocalLibraryIdentifiers
MPMutablePersonalStoreIdentifiers
MPPersonalStoreIdentifiers
MPMutableUniversalStoreIdentifiers
MPUniversalStoreIdentifiers
MPMutableRadioIdentifiers
MPRadioIdentifiers
MPMutableIdentifierSet
MPModelLibraryIncrementPlayCountChangeRequest
MPAVClippingTableViewCell
MPModelSharedListeningParticipantKind
MPModelSharedListeningParticipant
MPModelPodcastEpisodeKind
MPModelPodcastEpisode
MPRouteLabel
MPArtworkConfiguration
MPRTCReportingNetworkInterfaceChangeEvent
MPMediaAPICollectionItemMetadataRequestInfo
MPRestrictionsMonitor
MCProfileConnectionObserver
MPVolumeControllerSystemDataSource
MPVolumeControllerDataSource
MPVolumeControllerRouteDataSource
MPStoreArtworkRequestToken
MPStoreDownload
MPStoreDownloadManager
SSDownloadManagerObserver
SSPurchaseManagerDelegate
UIAlertViewDelegate
SSDownloadHandlerDelegate
_MPStoreDownloadBlockObserver
MPStoreDownloadManagerObserver
MPStoreDownloadAdditions
MPStoreModelSocialPersonBuilder
MPMediaAPICollectionMetadataRequest
MPModelAlbumKind
MPModelAlbum
MPPMediaPredicate
MPNowPlayingInfoAudioRoute
initWithRequestedPropertySet:
standardUserDefaults
boolForKey:
arrayWithObjects:count:
allSupportedProperties
dictionaryWithObjects:forKeys:count:
initWithProperties:relationships:
setPreventStoreItemMetadataCaching:
countByEnumeratingWithState:objects:count:
conformsToProtocol:
integerValue
contentItemTypeForRawResponseKindIdentifierValue:
itemKind
isEqualToString:
iTunesBrandType
requestedPropertySet
properties
containsObject:
relationships
objectForKey:
preventStoreItemMetadataCaching
contentItemTypeForStoreItemMetadata:
artistUploadedContentType
hasLoadedValueForKey:
album
modelObjectWithStoreItemMetadata:sourceModelObject:userIdentity:
identifiers
artist
curator
movie
playlist
radioStation
socialPerson
song
episode
season
show
showCreator
recordLabel
setItemType:
setDetailedItemType:
setAlbum:
setArtist:
setCurator:
setMovie:
setPlaylist:
setRadioStation:
setSong:
setEpisode:
setSeason:
setShow:
setShowCreator:
setSocialPerson:
setArtistUploadedContentType:
setRecordLabel:
initWithIdentifiers:block:
contentItemTypeForRawResponseKindIdentifiers:
contentItemTypeForMusicAPIType:
allowsRadioStations
setAllowsRadioStations:
allowsVideoContent
setAllowsVideoContent:
.cxx_destruct
_requestedBrowseContentItemProperties
_albumBuilder
_artistBuilder
_curatorBuilder
_episodeBuilder
_movieBuilder
_radioStationBuilder
_socialPersonBuilder
_playlistBuilder
_seasonBuilder
_songBuilder
_showBuilder
_showCreatorBuilder
_recordLabelBuilder
_shouldFakeEpisodes
_allowsRadioStations
_allowsVideoContent
TB,N,V_allowsRadioStations
TB,N,V_allowsVideoContent
_init
raise:format:
init
array
sharedManager
T@"MPMediaDownloadManager",R,N
addObserver:
removeObserver:
prioritizeDownload:
allMediaDownloadLibraryIdentifiers
enqueueAssetForDownload:withCompletionHandler:
sendKeepLocalStatusChanged:forLibraryIdentifier:entityType:withCompletionHandler:
cancelDownloads:
activeDownloadsCount
hasActiveDownloads
activeDownloadForMediaItemPersistentID:
activeDownloadForStoreID:
downloadForIdentifierSet:downloadState:
downloadLibraryWithCompletionHandler:
T@"NSArray",R,N
Tq,R,N
request
customForYouURL
componentsWithURL:resolvingAgainstBaseURL:
queryItems
mutableCopy
refreshRequest
recommendationsQueryItemsWithStoreURLBag:
addObjectsFromArray:
queryItemWithName:value:
addObject:
queryItemsWithStoreURLBag:
copy
setQueryItems:
initWithURL:
setHTTPMethod:
remainingTimeInterval
setTimeoutInterval:
initWithURLRequest:
recommendationsURLWithStoreURLBag:
arrayWithCapacity:
withRecentlyPlayed
mode
recentlyPlayedURLWithStoreURLBag:
count
errorWithDomain:code:userInfo:
initWithURLRequests:
objectAtIndex:
isOnboardingRequired:
_produceResultsWithRecommendationsArray:recentlyPlayedArray:
_produceResultsWithItemsArray:
objectAtIndexedSubscript:
kindWithModelClass:
setSectionKind:
emptyPropertySet
setSectionProperties:
setItemKind:
itemProperties
setItemProperties:
appendSection:
isBackedByStoreItemMetadata
itemType
initWithModel:personalizationStyle:
appendItem:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
_responseWithResults:personalizationResponse:
performWithResponseHandler:
initWithPayload:
sharedServerObjectDatabase
importObjectsFromRequest:options:trustID:error:
sectionProperties
addProperty:
propertySetByCombiningWithPropertySet:
_recommendationGroupBuilderWithFlatSectionedItems:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:storeURLBag:isListenNow:
userIdentity
modelObjectForItemsArray:userIdentity:
modelObjectForRecentlyPlayedArray:userIdentity:
modelObjectForRecommendationDictionary:userIdentity:
filteringPolicy
groupType
results
_personalizeRecommendationGroup:flatPersonalizedSectionedItems:
initWithRequest:
setResults:
setSectionedItems:
subgroups
setSubgroups:
copyWithIdentifiers:block:
clientPlatformIdentifier
localTimeZone
ISO8601TimeZoneOffsetFromUTC
shouldRequestSocialAndFriendsMixWithValues
withSocial
arrayWithArray:
componentsJoinedByString:
initWithObjects:
shouldRequestVacTokens
withPlainEditorialNotes
types
typesArrayWithTypes:
displayFilterKinds
displayFilterKindsValueForOptions:
setPath:
percentEncodedQuery
stringByReplacingOccurrencesOfString:withString:
setPercentEncodedQuery:
subscriptionStatusType
sharedController
musicSubscriptionStatus
statusType
configurationForLoadingModelDataWithStoreURLBag:error:
produceResponseWithLoadedOutput:completion:
_recommendationGroupBuilder
_storeURLBag
style
routingContextUID
stringWithFormat:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeCGRectForKey:
decodeFloatForKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeBool:forKey:
encodeCGRect:forKey:
encodeFloat:forKey:
initatorStyle
presentingAppBundleID
allowsNowPlayingApplicationLaunch
sortByIsVideoRoute
sourceRect
preferredWidth
routeUID
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
description
isEqual:
setStyle:
setInitatorStyle:
setRoutingContextUID:
setPresentingAppBundleID:
shouldPreventAutorotation
setShouldPreventAutorotation:
setAllowsNowPlayingApplicationLaunch:
setSortByIsVideoRoute:
setSourceRect:
setPreferredWidth:
setRouteUID:
_shouldPreventAutorotation
_allowsNowPlayingApplicationLaunch
_sortByIsVideoRoute
_style
_initatorStyle
_routingContextUID
_presentingAppBundleID
_preferredWidth
_routeUID
_sourceRect
Tq,N,V_style
Tq,N,V_initatorStyle
T@"NSString",C,N,V_routingContextUID
T@"NSString",C,N,V_presentingAppBundleID
TB,N,V_shouldPreventAutorotation
TB,N,V_allowsNowPlayingApplicationLaunch
TB,N,V_sortByIsVideoRoute
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_sourceRect
Td,N,V_preferredWidth
T@"NSString",C,N,V_routeUID
universalStore
socialProfileID
dataWithJSONObject:options:error:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
bagKey
httpBody
httpBodyType
httpMethod
person
setPerson:
fallbackBagKeys
fallbackURLString
T@"MPModelSocialPerson",&,N
_person
T@"MPModelSocialPerson",&,N,V_person
_MediaLibrary_coreLibrary
sharedRestrictionsMonitor
allowsExplicitContent
maximumTVShowRating
maximumMovieRating
allowsMusicVideos
stringWithUTF8String:
exceptionWithName:reason:userInfo:
library
filteringOptions
initWithLibrary:filteringOptions:
setMediaLibrary:
setModelKind:
modelClass
translatorForMPModelClass:
entityQueryForPropertySet:sortDescriptors:context:view:
_performCoreQuery:error:
logDatabaseAccess
performCoreQuery:withCompletion:
hasEntitiesForModelKind:
mlCoreView
performCoreSearchQuery:withCompletion:
.cxx_construct
_coreView
_library
_filteringOptions
T{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}},R,N
T@"MPMediaLibrary",R,N,V_library
TQ,R,N,V_filteringOptions
dataWithContentsOfFile:options:error:
imageWithData:
deviceSupportsASTC
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
bytes
length
initWithCGImage:
size
scale
CGImage
CGColor
shadowOffset
shadowBlurRadius
shadowColor
clearColor
bezierPathWithRoundedRect:cornerRadius:
addClip
drawInRect:
initWithContentsOfExactFilePath:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
imageWithRoundedCornersOfRadius:
mainScreen
imageWithCGImage:scale:orientation:
instanceMethodForSelector:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
label
setLabel:
middlewareClasses
setMiddlewareClasses:
qualityOfService
setQualityOfService:
timeoutInterval
date
UTF8String
expectedMaximumResponseTimeInterval
cleanupQueue
queue
operations
valueForKeyPath:
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
timeoutDescription
T@"NSError",R,N
T@?,C,N
cancel
initWithDeallocHandler:
timeIntervalSinceNow
disarm
_performWithCompletion:
prepareForResponseWithCompletion:
setName:
mapForRequest:
responseClass
allMiddleware
initWithRequest:middleware:
invalidate
operationsForMiddleware:
setInvalidationObservers:
blockOperationWithBlock:
allOperations
addDependency:
addOperations:waitUntilFinished:
addOperation:
cancelAllOperations
performWithCompletion:
_stateDumpObject
calloutQueue
cancelationError
_label
_qualityOfService
_timeoutInterval
_calloutQueue
_cancelationError
_cleanupQueue
_queue
_middlewareClasses
T@"NSOperationQueue",R,N,V_calloutQueue
T@"NSError",R,N,V_cancelationError
T@"NSObject<OS_dispatch_queue>",R,N,V_cleanupQueue
T@"NSOperationQueue",R,N,V_queue
T@"NSArray",C,N,V_middlewareClasses
T@"NSString",C,N,V_label
Tq,N,V_qualityOfService
Td,N,V_timeoutInterval
builderProtocol
builderProxyForProtocol:
willChangeValueForKey:
didChangeValueForKey:
defaultCenter
postNotificationName:object:
middleware
initWithMiddleware:protocol:
numberWithBool:
chain
isValid
setMiddleware:
builder
_valid
_request
_middleware
_builder
T@"NSArray",C,N,V_middleware
T@,R,N,V_builder
T@,R,C,N,V_request
valid
TB,R,N,GisValid,V_valid
initWithFormat:
appendString:
appendFormat:
isMainThread
totalItemCount
getChangeDetailsFromPreviousResponse:completion:
isEmpty
_invalidate
deferredSectionProperties
setDeferredSectionProperties:
deferredItemProperties
setDeferredItemProperties:
_deferredSectionProperties
_deferredItemProperties
_results
T@"MPPropertySet",&,N,V_deferredSectionProperties
T@"MPPropertySet",&,N,V_deferredItemProperties
T@"MPSectionedCollection",C,N,V_results
empty
TB,R,N,GisEmpty
T@"MPModelRequest",R,C,N,V_request
identityKind
humanDescription
__text_KEY
__TTML_KEY
__hasStoreLyrics_KEY
__hasLibraryLyrics_KEY
__hasTimeSyncedLyrics_KEY
text
T@"NSString",C,D,N
TTML
hasStoreLyrics
TB,D,N
hasLibraryLyrics
hasTimeSyncedLyrics
initWithContentURL:
setDelegate:
setAllowsPictureInPicturePlayback:
setUpdatesNowPlayingInfoCenter:
addObserver:forKeyPath:options:context:
_avPlayerItemDidPlayToEndNotification:
addObserver:selector:name:object:
setContentURL:
setControlStyle:
removeObserver:forKeyPath:context:
dealloc
initWithMoviePlayerController:
player
currentItem
playerController
isPlaying
status
setShowsPlaybackControls:
setAllowsEnteringFullScreen:
setLooping:
setAutomaticallyWaitsToMinimizeStalling:
setFullscreen:animated:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
videoGravity
setVideoGravity:
isReadyForDisplay
contentDuration
contentDurationWithinEndTimes
contentDimensions
minTime
setMinTime:
maxTime
setMaxTime:
allowsExternalPlayback
setAllowsExternalPlayback:
isExternalPlaybackActive
playerWithURL:
setPlayer:
auxiliarySession
setAudioSession:
prepareToPlay
play:
pause:
currentTime
seekToTime:
rate
setRate:
beginScanningForward:
beginScanningBackward:
endScanningBackward:
endScanningForward:
asset
assetImageGeneratorWithAsset:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
copyCGImageAtTime:actualTime:error:
imageWithCGImage:
doubleValue
valueWithCMTime:
numberWithDouble:
postNotificationName:object:userInfo:
generateCGImagesAsynchronouslyForTimes:completionHandler:
cancelAllCGImageGeneration
timedMetadata
_initWithMetadataItem:
accessLog
_initWithAVItemAccessLog:
errorLog
_initWithAVItemErrorLog:
isCancelled
animateAlongsideTransition:completion:
object
observeValueForKeyPath:ofObject:change:context:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
play
pause
stop
beginSeekingForward
beginSeekingBackward
endSeeking
isPreparedToPlay
currentPlaybackTime
setCurrentPlaybackTime:
currentPlaybackRate
setCurrentPlaybackRate:
TB,R,N
Td,N
Tf,N
view
backgroundView
playbackState
loadState
setRepeatMode:
setShouldAutoplay:
isFullscreen
setFullscreen:
scalingMode
setScalingMode:
readyForDisplay
movieMediaTypes
duration
playableDuration
naturalSize
initialPlaybackTime
setInitialPlaybackTime:
endPlaybackTime
setEndPlaybackTime:
allowsAirPlay
setAllowsAirPlay:
isAirPlayVideoActive
thumbnailImageAtTime:timeOption:
requestThumbnailImagesAtTimes:timeOption:
cancelAllThumbnailImageRequests
useApplicationAudioSession
setUseApplicationAudioSession:
_advertisementView
_videoViewController
movieSourceType
setMovieSourceType:
contentURL
controlStyle
repeatMode
shouldAutoplay
playerViewController
hostingViewController
setHostingViewController:
_proxyView
_generator
_backgroundView
_useApplicationAudioSession
_isFullscreen
_shouldAutoplay
_movieSourceType
_contentURL
_controlStyle
_repeatMode
_playerViewController
_hostingViewController
T@"AVPlayerViewController",R,N,V_playerViewController
T@"UIViewController",W,N,V_hostingViewController
T@"NSURL",C,N,V_contentURL
T@"UIView",R,N
TQ,R,N
Tq,N,V_controlStyle
Tq,N,V_repeatMode
TB,N,V_shouldAutoplay
fullscreen
TB,N,GisFullscreen
Tq,N
Tq,N,V_movieSourceType
Td,R,N
T{CGSize=dd},R,N
TB,N
airPlayVideoActive
TB,R,N,GisAirPlayVideoActive
willMoveToWindow:
superview
_updateContainmentInWindow:superview:
willMoveToSuperview:
window
setFrame:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
viewControllerForView:
parentViewController
addChildViewController:
addSubview:
didMoveToParentViewController:
controller
_controller
T@"MPMoviePlayerController",R,W,N,V_controller
keySpace
value
time
extraAttributes
initWithCapacity:
setObject:forKey:
keyspace
timestamp
allMetadata
_metadataItem
T@"NSString",R,N
T@,R,N
T@"NSDictionary",R,N
extendedLogData
extendedLogDataStringEncoding
events
_initWithAVItemAccessLogEvent:
_accessLog
T@"NSData",R,N
_initWithAVItemErrorLogEvent:
_errorLog
numberOfMediaRequests
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
observedBitrate
indicatedBitrate
numberOfDroppedVideoFrames
numberOfSegmentsDownloaded
_event
T@"NSDate",R,N
errorStatusCode
errorDomain
errorComment
_itemTimebaseDidChangeNotification:
initWithOptions:capacity:
_itemDidChangeNotification:
_bufferingStateDidChangeNotification:
_willReloadWithPlaybackContextNotification:
removeObject:
removeObserver:name:object:
eventName
eventPayload
sharedAnalytics
eventCode
logEventWithType:machAbsoluteTime:context:
_attemptLikelyToKeepUpReportingEventWithPlayer:
_attemptPlaybackStartReportingEventWithPlayer:
allObjects
userInfo
siriReferenceIdentifier
siriWHAMetricsInfo
_createContextDictionaryWithSiriReferenceIdentifier:siriWHAMetricsInfo:
bufferingState
feeder
timebase
initialPlaybackStartTime
timeIntervalSinceReferenceDate
T@"MPAssistantAnalyticsReportingController",R,N
registerPlayer:
unregisterPlayer:
logAssistantEvent:withTimestamp:
_timebaseEffectiveRateChangedNotification
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
_lastSiriReferenceIdentifierForWillReload
_lastSiriReferenceIdentifierWithLikelyToKeepUp
_players
_playerToObservedTimebase
_mpUTITypeFromMRUTIType:
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
setMaxConcurrentOperationCount:
newHierarchyTokenFromParentToken:
isRTCReportingSupported
setClientName:
setClientType:
setClientVersion:
setHierarchyToken:
setServiceIdentifier:
setSessionID:
setResponseHandler:
addEntriesFromDictionary:
fetchReportingStatesWithUserInfo:fetchComplete:
_recordEvent:withInternalSession:
addOperationWithBlock:
newRTCReportingMessageDictionary
sendMessageWithDictionary:error:
hasCompleteSessionSetup
hasInitializedSession
additionalUserInfo
clientName
clientType
clientVersion
hierarchyToken
serviceIdentifier
sessionID
setAdditionalUserInfo:
initializeSession
completeSessionSetup
finalizeSession
recordEvent:
_lock
_additionalUserInfo
_clientName
_clientType
_clientVersion
_hasCompleteSessionSetup
_hasInitializedSession
_hierarchyToken
_internalSession
_operationQueue
_pendingReportingEvents
_serviceIdentifier
_sessionID
_sessionUserInfo
T@"NSDictionary",C,N
T@"NSString",C,N
Ti,N
T@,&,N
TI,N
tokenResult
token
lastError
activeAccount
defaultIdentityStore
DSID
setWithObject:
sharedProvider
allValues
firstObject
timeToLiveMillis
getTokenStatusForDSIDs:forcingRefresh:completion:
getPropertiesForUserIdentity:completionHandler:
subarrayWithRange:
allowsSynchronousArtworkCatalogsBlockExecution
artworkCatalogsWithCount:
existingArtworkCatalogsWithCount:
hasExistingArtworkCatalogsWithCount:
artworkCatalogsBlock
setArtworkCatalogsBlock:
setAllowsSynchronousArtworkCatalogsBlockExecution:
numberOfColumns
setNumberOfColumns:
numberOfRows
setNumberOfRows:
tileSpacing
setTileSpacing:
entityIdentifier
setEntityIdentifier:
namespaceIdentifier
setNamespaceIdentifier:
revisionIdentifier
setRevisionIdentifier:
_cacheLock
_artworkCatalogsCache
_artworkCatalogsCacheCount
_allowsSynchronousArtworkCatalogsBlockExecution
_artworkCatalogsBlock
_numberOfColumns
_numberOfRows
_tileSpacing
_entityIdentifier
_namespaceIdentifier
_revisionIdentifier
T@?,C,N,V_artworkCatalogsBlock
TB,N,V_allowsSynchronousArtworkCatalogsBlockExecution
TQ,N,V_numberOfColumns
TQ,N,V_numberOfRows
Td,N,V_tileSpacing
T@"<NSCopying>",C,N,V_entityIdentifier
T@"<NSCopying>",C,N,V_namespaceIdentifier
T@"<NSCopying>",C,N,V_revisionIdentifier
rtcReportingCategory
numberWithUnsignedShort:
rtcReportingType
newRTCReportingPayloadDictionary
numberWithInteger:
networkInterfaceType
setNetworkInterfaceType:
_rtcReportingCategory
_rtcReportingType
_networkInterfaceType
TS,R,N,V_rtcReportingCategory
TS,R,N,V_rtcReportingType
Tq,N,V_networkInterfaceType
domain
code
RTCReportingFrameworkPath
currentThread
modelObject
deviceMediaLibraryWithUserIdentity:
persistentID
anyObject
_handlePersistentID:modelClass:mediaLibrary:
libraryViewWithUserIdentity:
setLibraryView:
setModelClass:
setIdentifierSets:
libraryIdentifierSetForIdentifierSet:
finish
finishWithError:
isSubclassOfClass:
itemWithPersistentID:verifyExistence:
_deleteItems:withLibrary:
uniqueIdentifier
setPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
initWithModelKind:block:
kindWithVariants:
setScopedContainers:
enumerateItemIdentifiersUsingBlock:
newOperationWithResponseHandler:
playlistWithPersistentID:
_isCloudLibraryEnabled
valueForProperty:
unsignedLongLongValue
controllerWithUserIdentity:
removePlaylistsWithSagaIDs:completionHandler:
removePlaylist:
cloudServiceStatusControllerWithUserIdentity:
removeItemsWithSagaIDs:completionHandler:
isPurchaseHistoryEnabled
setValue:forProperty:
hideItemsWithPurchaseHistoryIDs:completionHandler:
deleteItems:
isCloudLibraryEnabled
execute
setRequest:
responseHandler
_responseHandler
T@"MPModelLibraryDeleteEntityChangeRequest",C,N,V_request
T@?,C,N,V_responseHandler
isPlaceholder
URLWithString:relativeToURL:
scheme
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
fileURLWithPath:isDirectory:
initWithAsset:
URLAssetWithURL:options:
playerItemWithAsset:
initWithPlayerItem:
setPlayerItem:
_loadAssetProperties
UUID
UUIDString
_internalLikedStateDidChangeNotification:
endAccessInterval
_removeObservationsForAVPlayerItem:
cancelPreviousPerformRequestsWithTarget:
isAssetLoaded
isAlwaysLive
playerItem
canPlayFastForward
canPlayFastReverse
contentItemID
loadAssetAndPlayerItem
setIsAssetLoaded:
contextForDefaultClient
beginAccessInterval
updatePlayerItemMetadata
_updateSoundCheckVolumeNormalizationForPlayerItem
_loadAssetAndPlayerItem
loggingIdentifier
_addObservationsForAVPlayerItem:
_updateHasFinishedDownloading
mediaItem
rememberBookmarkTime
bookmarkTime
initialPlaybackStartTimeOverride
playbackInfoStartTime
playbackInfo
_initialPlaybackStartTimeForPlaybackInfo:
absoluteString
invalidateContentItemUserInfo
displayableText
lyrics
_persistedLikedState
path
compare:options:range:
type
presentationSize
defaultPlaybackRate
forwardPlaybackEndTime
setLikedState:forUserIdentity:
likedState
_likedStateDidChange
_handleUpdatedLikedState:forUserIdentity:completion:
storeItemInt64ID
objectForKeyedSubscript:
boolValue
longLongValue
mediaLibrary
initWithIdentifier:
_updateContentItem
statusOfValueForKey:error:
trackReferences
intValue
trackWithTrackID:
mediaType
durationFromExternalMetadata
playbackMode
_seekableTimeRanges
CMTimeRangeValue
_durationFromExternalMetadataIfAvailable
loadedTimeRanges
_playableDurationForLoadedTimeRanges:
CMTimeValue
_playerItemDurationIfAvailable
setDuration:
_performContentItemUpdate:
seekableTimeRanges
loadValuesAsynchronouslyForKeys:completionHandler:
setSoundCheckVolumeNormalization:
artworkCatalogForPlaybackTime:
_onAssetQueueClearAsset
storeSubscriptionAdamID
setLegacyUniqueID:
setPlayable:
setDefaultPlaybackRate:
setElapsedTime:
setPlaybackRate:
timeOfSeekableStart
setStartTime:
setStoreID:
albumStoreID
setStoreAlbumID:
artistStoreID
setStoreArtistID:
setStoreSubscriptionID:
mainTitle
setTitle:
setAlbumName:
albumYear
setAlbumYear:
setTrackArtistName:
albumArtist
setAlbumArtistName:
composer
setComposerName:
genre
setGenreName:
discNumber
setDiscNumber:
discCount
setTotalDiscCount:
albumTrackNumber
setTrackNumber:
albumTrackCount
setTotalTrackCount:
setMediaType:
externalContentIdentifier
setExternalContentIdentifier:
isExplicitTrack
setExplicitContent:
setAlwaysLiveItem:
modelPlayEvent
name
setRadioStationName:
radio
stationStringID
setRadioStationStringIdentifier:
performWithoutEnforcement:
contentItemCollectionInfo
setCollectionInfo:
setLoading:
modelGenericObject
flattenedGenericObject
personalizedStore
playbackAuthorizationToken
setEditingStyleFlags:
setHasArtwork:
visualIdenticalityIdentifier
stringRepresentation
setArtworkIdentifier:
_shouldPublishArtworkURL
resolvedURLString
setArtworkURL:
artworkTemplateItems
setArtworkURLTemplates:
requestExportableArtworkPropertiesWithCompletion:
libraryLyrics
initWithLyrics:userProvided:
setLyrics:
setHasLyrics:
_updateAudioFormatInfoForContentItem:
_contentItemUserInfo
setUserInfo:
_contentItemDeviceSpecificUserInfo
setDeviceSpecificUserInfo:
dictionary
attributionLabel
subtype
providerUniversalLink
setObject:forKeyedSubscript:
providerBundleIdentifier
stationProviderID
numberWithLongLong:
timeOfSeekableEnd
shouldShowComposer
containerUniqueID
storeFrontIdentifier
storeAsset
isRedownloadable
isSubscriptionRequired
isLibraryAddEligible
explicitBadge
includeContentItemDebugFields
storeAccountID
useListeningHistory
lastChangeDirection
isAutoPlayItem
isSharedListeningItem
isArtistUploadedContent
numberWithUnsignedLongLong:
cloudID
cloudAlbumID
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
dataUsingEncoding:
isLibraryAdded
databaseID
personID
keepLocalEnableState
keepLocalManagedStatus
localFileAsset
isNonPurgeable
protectionType
endpointType
userRating
numberWithFloat:
playbackPosition
shouldRememberBookmarkTime
customAVEQPreset
allowsEQ
_setEQPreset:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
setForwardPlaybackEndTime:
dictionaryWithObject:forKey:
_setAudibleDRMInfo:
_setRampInOutInfo:
arrayWithObject:
_itemAttributeAvailableKey:
mpLoadValuesAsynchronouslyForKeys:completionQueue:completionHandler:
setElapsedTime:playbackRate:
isPlaybackBufferFull
isPlaybackLikelyToKeepUp
_currentPlaybackRateDidChange:
hasProtectedContent
_imageChapterTrackIDsForAsset:
tracks
assetTrack
isEnabled
trackID
errorResolverForItem:
initWithErrorResolver:
setResolutionHandler:
resolveError:
isFileURL
URLFromPath:
placeholder
TB,R,N,GisPlaceholder
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
isSupportedDefaultPlaybackSpeed:
initWithURL:options:
canUseLoadedAsset
supportsFastForward
supportsRewind
supportsRateChange
disableItemReuse
playbackError
resetBookkeeping
setPlaybackStoppedTime:
notePlaybackFinishedByHittingEnd
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setRating:
subtitleTrackID
setSubtitleTrackID:
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
setUserSkippedPlayback:
userAdvancedDuringPlayback
userSkippedPlayback
userChangedItemsDuringPlayback
durationInSeconds
applyVolumeNormalizationWithSoundCheckEnabled:
isValidPlayerSubstituteForItem:
isAssetURLValid
setExplicitBadge:
setLastChangeDirection:
currentTimeDisplayOverride
usesSubscriptionLease
displayableTextLoaded
hasPlayedThisSession
isAd
isStreamable
playbackRateForLevel:direction:paused:
prepareForRate:completionHandler:
setFeeder:
scanIntervalForLevel:paused:
setHasPlayedThisSession:
setLikedState:
storeItemID
supportsRating
timedMetadataIfAvailable
setContentItemID:
contentItem
isRadioItem
stationAllowsItemLiking
stationID
stationHash
stationName
durationIsValid
durationIfAvailable
playableDurationIfAvailable
_clearAsset
_clearAssetNow
setupEQPresetWithDefaultPreset:
setupWithPlaybackInfo
_updateDurationSnapshotWithElapsedTime:playbackRate:
_applyLoudnessInfo
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
_setCurrentPlaybackRate:
_setNeedsPersistedLikedStateUpdate
setAutoPlayItem:
setSharedListeningItem:
setExplicitContentState:
invalidateContentItemDeviceSpecificUserInfo
invalidateContentItemAudioFormatInfo
reevaluateHasProtectedContent
reevaluateType
replacePlayerItemWithPlayerItem:
resolvePlaybackError:withCompletion:
_willBecomeActivePlayerItem
_willResignActivePlayerItem
_didResignActivePlayerItem
_didBecomeActivePlayerItem
analyticsContentType
analyticsFormatType
pauseContentKeySession
resumeContentKeySession
_currentPlaybackRate
soundCheckVolumeNormalization
rtcReportingParentHierarchyToken
setRtcReportingParentHierarchyToken:
observer
setObserver:
meetsPlaybackHistoryThreshold
didAttemptToLoadAsset
canReusePlayerItem
itemError
setItemError:
queueIdentifier
setQueueIdentifier:
chapterTimeMarkers
artworkTimeMarkers
urlTimeMarkers
closedCaptionTimeMarkers
setClosedCaptionTimeMarkers:
useEmbeddedChapterData
copyrightText
isLikedStateEnabled
supportsLikedState
loudnessInfoVolumeNormalization
setLoudnessInfoVolumeNormalization:
prefersSeekOverSkip
isTailPlaceholder
isStartItem
setStartItem:
repeatIndex
setRepeatIndex:
shouldPreventPlayback
setModelPlayEvent:
setInitialPlaybackStartTimeOverride:
lastMetadataChangeTime
setLastMetadataChangeTime:
rtcReportingServiceIdentifier
allowsAirPlayFromCloud
requiresLoadedAssetForAirPlayProperties
hasFinishedDownloading
hasPerformedErrorResolution
setHasPerformedErrorResolution:
setPlaybackInfo:
isActiveItem
setActiveItem:
hasExternalDisplay
setExternalDisplay:
leasePlaybackPreventionState
leaseStatus
didReachEnd
previousContentItemID
setPreviousContentItemID:
explicitContentState
_asset
_assetQueue
_avPlayerItem
_isAssetLoaded
_feeder
_soundCheckVolumeNormalization
_cachedDuration
_cachedPlayableDuration
_cachedSeekableTimeRanges
_seekableTimeRangesCacheTime
_type
_contentItem
_defaultPlaybackRate
_advancedDuringPlayback
_handledFinishTime
_hasPlayedThisSession
_wasCountedAsSkipped
_isStreamable
_watchingAttributes
_userChangedItemsDuringPlayback
_lyricsAvailable
_hasLoadedHasProtectedContent
_hasLoadedPlaybackMode
_hasValidPlayerItemDuration
_lastLoggedTotalDuration
_likedState
_playerItemDuration
_exportableArtworkRevision
_privacyContext
_meetsPlaybackHistoryThreshold
_assetLoaded
_didAttemptToLoadAsset
_canReusePlayerItem
_useEmbeddedChapterData
_likedStateEnabled
_supportsLikedState
_prefersSeekOverSkip
_hasProtectedContent
_tailPlaceholder
_startItem
_shouldPreventPlayback
_allowsAirPlayFromCloud
_allowsExternalPlayback
_requiresLoadedAssetForAirPlayProperties
_hasFinishedDownloading
_hasPerformedErrorResolution
_activeItem
_externalDisplay
_didReachEnd
_autoPlayItem
_sharedListeningItem
_loudnessInfoVolumeNormalization
_rtcReportingParentHierarchyToken
_observer
_itemError
_queueIdentifier
_playbackMode
_chapterTimeMarkers
_artworkTimeMarkers
_urlTimeMarkers
_closedCaptionTimeMarkers
_albumStoreID
_copyrightText
_externalContentIdentifier
_storeItemInt64ID
_storeSubscriptionAdamID
_mediaItem
_explicitBadge
_repeatIndex
_lastChangeDirection
_modelGenericObject
_modelPlayEvent
_initialPlaybackStartTimeOverride
_lastMetadataChangeTime
_rtcReportingServiceIdentifier
_playbackInfo
_storeFrontIdentifier
_storeAccountID
_useListeningHistory
_leasePlaybackPreventionState
_leaseStatus
_contentItemID
_previousContentItemID
_explicitContentState
TB,N,V_isAssetLoaded
tailPlaceholder
TB,R,N,GisTailPlaceholder,V_tailPlaceholder
startItem
TB,N,GisStartItem,V_startItem
Tq,N,V_repeatIndex
Tq,N,V_lastChangeDirection
TB,R,N,V_shouldPreventPlayback
T@"MPModelGenericObject",R,N,V_modelGenericObject
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSNumber",R,C,N
T@"NSNumber",C,N,V_initialPlaybackStartTimeOverride
T@"NSNumber",C,N,V_lastMetadataChangeTime
T@,&,N,V_rtcReportingParentHierarchyToken
T@"NSString",R,C,N,V_rtcReportingServiceIdentifier
TB,R,N,V_allowsAirPlayFromCloud
TB,R,N,V_allowsExternalPlayback
TB,R,N,V_requiresLoadedAssetForAirPlayProperties
Tf,N,G_currentPlaybackRate,S_setCurrentPlaybackRate:,V_currentPlaybackRate
TB,R,N,V_hasFinishedDownloading
TB,N,V_hasPerformedErrorResolution
T@"NSDictionary",C,N,V_playbackInfo
T@"AVPlayerItem",&,N
T^{OpaqueCMTimebase=},R,N
activeItem
TB,N,GisActiveItem,V_activeItem
T@"NSString",R,C,N,V_storeFrontIdentifier
externalDisplay
TB,N,GhasExternalDisplay,V_externalDisplay
T{?=qiIq},R,N
T@"NSNumber",R,N,V_storeAccountID
T@"NSNumber",R,N,V_useListeningHistory
Tq,R,N,V_leasePlaybackPreventionState
T@"ICMusicSubscriptionLeaseStatus",R,C,N,V_leaseStatus
T@"NSString",C,N,V_explicitBadge
TB,R,N,V_didReachEnd
T@"NSString",C,N,V_contentItemID
T@"NSString",C,N,V_previousContentItemID
autoPlayItem
TB,N,GisAutoPlayItem,V_autoPlayItem
sharedListeningItem
TB,N,GisSharedListeningItem,V_sharedListeningItem
Tq,N,V_explicitContentState
T@"MPNowPlayingContentItem",R,N
T@"<MPAVItemObserver>",W,N,V_observer
TB,R,N,V_meetsPlaybackHistoryThreshold
assetLoaded
TB,R,N,GisAssetLoaded,V_assetLoaded
assetURLValid
TB,R,N,GisAssetURLValid
TB,R,N,V_didAttemptToLoadAsset
T@"AVAsset",R,N
TB,R,N,V_canReusePlayerItem
T@"NSError",R,C,N
T@"NSError",&,N,V_itemError
T@"NSString",&,N,V_queueIdentifier
alwaysLive
TB,R,N,GisAlwaysLive
T@"MPQueueFeeder",W,N,V_feeder
Tq,R,N,V_playbackMode
T@"AVPlayerItemAccessLog",R,N
Tf,N,V_defaultPlaybackRate
T@"NSArray",R,N,V_chapterTimeMarkers
T@"NSArray",R,N,V_artworkTimeMarkers
T@"NSArray",R,N,V_urlTimeMarkers
T@"NSArray",&,N,V_closedCaptionTimeMarkers
TB,R,N,V_useEmbeddedChapterData
Tq,R,N,V_albumStoreID
artistUploadedContent
TB,R,N,GisArtistUploadedContent
T@"NSString",R,C,N,V_copyrightText
explicitTrack
TB,R,N,GisExplicitTrack
T@"NSString",R,C,N,V_externalContentIdentifier
likedStateEnabled
TB,R,N,GisLikedStateEnabled,V_likedStateEnabled
TB,R,N,V_supportsLikedState
T@"NSString",R,C,N
streamable
TB,R,N,GisStreamable
Tq,R,N,V_storeItemInt64ID
Tq,R,N,V_storeSubscriptionAdamID
Tf,R,N
T@"MPMediaItem",R,&,N,V_mediaItem
Tf,N,V_loudnessInfoVolumeNormalization
Tf,N,V_soundCheckVolumeNormalization
TB,R,N,V_prefersSeekOverSkip
TB,R,N,V_hasProtectedContent
radioItem
TB,R,N,GisRadioItem
MPAVItem
setMPAVItem:
T@"MPAVItem",&,N
defaultInfo
requestingBundleIdentifier
requestingBundleVersion
clientInfo
setRequestingBundleIdentifier:
setRequestingBundleVersion:
itemIdentifiers
setItemIdentifiers:
reason
setKeyProfile:
personalizationStyle
setPersonalizationStyle:
allowLocalEquivalencies
setReturnsLocalEquivalencies:
retryDelay
setRetryDelay:
delegatedUserIdentity
setDelegatedIdentity:
setIdentity:
userIdentityStore
setIdentityStore:
setClientInfo:
initWithBlock:
setRequestContext:
setClientIdentifier:
setPlatformIdentifier:
setShouldIgnoreCache:
clientIdentifier
isPersonalized
storePlatformRequest
setAllowLocalEquivalencies:
setReason:
platform
setPlatform:
shouldIgnoreCache
shouldIgnoreExpiration
setShouldIgnoreExpiration:
shouldRequireCachedResults
setShouldRequireCachedResults:
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
_allowLocalEquivalencies
_shouldIgnoreCache
_shouldIgnoreExpiration
_shouldRequireCachedResults
_reason
_itemIdentifiers
_platform
_retryDelay
_clientIdentifier
_personalizationStyle
_clientInfo
_delegatedUserIdentity
_userIdentity
_userIdentityStore
T@"ICClientInfo",C,N,V_clientInfo
T@"ICUserIdentity",C,N,V_delegatedUserIdentity
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",&,N,V_userIdentityStore
T@"ICStorePlatformRequest",R,C,N
TB,N,V_allowLocalEquivalencies
TQ,N,V_reason
T@"NSArray",C,N,V_itemIdentifiers
T@"NSNumber",C,N,V_timeoutInterval
T@"NSString",C,N,V_platform
Td,N,V_retryDelay
TB,N,V_shouldIgnoreCache
TB,N,V_shouldIgnoreExpiration
TB,N,V_shouldRequireCachedResults
T@"NSString",C,N,V_clientIdentifier
personalized
TB,R,N,GisPersonalized
Tq,N,V_personalizationStyle
replaceIdentifierRegistry:
identifierRegistryWithExclusiveAccess:
identifierRegistryWithExclusiveAccessReturningObject:
identifierRegistryWithExclusiveAccessReturningBOOL:
identifierRegistryWithExclusiveAccessReturningInteger:
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
getRepresentativeMetadataForPlaybackContext:properties:completion:
firstModelPlayEvent
applyVolumeNormalizationForItem:
playActivityQueueGroupingID
setPlayActivityQueueGroupingID:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
setSiriReferenceIdentifier:
setSiriWHAMetricsInfo:
_identifierRegistry
_identifierRegistryLock
_uniqueIdentifier
_playActivityQueueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriReferenceIdentifier
_siriWHAMetricsInfo
T@"NSString",C,N,V_playActivityQueueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriReferenceIdentifier
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"NSString",R,N,V_uniqueIdentifier
sharedDeviceLibraryController
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
setModelObject:
_modelObject
T@"MPModelObject",&,N,V_modelObject
initWithStoreMusicAPIDictionary:
initWithStorePlatformDictionary:expirationDate:
initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:
offers
storeID
setWithObjects:
decodeObjectOfClasses:forKey:
allocWithZone:
_fetchValueFromStoreMusicAPIDictionary:
artworkRequestTokenForStorePlatformDictionary:
URLWithString:
initWithArtworkURL:
tokenWithImageArtworkInfo:
artworkRequestTokenForStoreMusicAPIDictionary
artworkRequestToken
stationGlyphRequestTokenForStoreMusicAPIDictionary
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStoreMusicAPIDictionary:parentStoreItemMetadata:
initWithStorePlatformDictionary:parentStoreItemMetadata:
descriptionTextWithStyle:
assets
editorNotesWithStyle:
expirationDate
compare:
artistName
artworkTrackIDs
audioTraits
collectionName
collectionStoreID
composerName
curatorID
curatorName
curatorHandle
hasArtistBiography
hasLyrics
hasSocialPosts
genreNames
isBeats1
explicitRating
isExplicitContent
isCompilation
isMasteredForiTunes
isPreorder
playlistType
personalMixSortKey
movementName
movementCount
movementNumber
movieClips
lookupDictionary
playlistIdentifiers
popularity
releaseDate
_storePlatformReleaseDateFormatter
stringFromDate:
lastModifiedDate
_storePlatformLastModifiedDateFormatter
shortName
shouldBookmarkPlayPosition
showComposer
trackCount
trackNumber
seasonNumber
episodeCount
versionHash
workName
handle
nameRaw
isPrivatePerson
isVerifiedPerson
shortURL
videoSubtype
radioStationTypeID
radioStationSubtype
isChart
radioStationProviderName
effectiveStorePlatformDictionary
numberWithInt:
hasSubscriptionOffer
artworkRequestTokenForStorePlatformArtworkValue:
initWithLookupDictionary:
dateFromString:
_musicAPIDateFormatter
numberWithUnsignedInteger:
setEndTime:
setDescriptionText:
initWithArtworkResponseArray:
initWithArtworkResponseDictionary:
calendarWithIdentifier:
timeZoneForSecondsFromGMT:
setTimeZone:
setSourceEditorialArtworkKind:
artworkRequestTokenForScreenshotArtwork
setCropStyle:
artworkRequestTokenForEditorialArtworkKind:
artworkRequestTokenForUberArtworkKind:
initWithDownloadAssetDictionary:
earlierDate:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
localeWithLocaleIdentifier:
setLenient:
storeServerCalendar
setCalendar:
initWithStorePlatformDictionary:
stationGlyphRequestToken
childStoreItemMetadatas
descriptionText
editorNotes
isExpired
shortEditorNotes
importableStorePlatformDictionary
isStoreRedownloadable
latestAlbumArtworkRequestToken
movieClipsCount
shouldReportPlayEvents
formerStoreAdamIDs
purchasedAdamID
subscriptionAdamID
isLive
radioStationEvents
avatarArtworkRequestToken
stationGlyphRequestTokenForStorePlatformDictionary:
childStorePlatformDictionaryForArtworkTrackID:
shortDescriptionText
tvEpisodeArtworkRequestToken
tvShowArtworkRequestToken
movieArtworkRequestToken
flowcaseEditorialArtworkRequestToken
brickEditorialArtworkRequestToken
metadataByAppendingMetadata:
metadataWithChildStorePlatformDictionaries:
metadataWithParentMetadata:
parentStoreItemMetadata
_downloadAssetDictionary
_downloadMetadataDictionary
_storeMusicAPIDictionary
_expirationDate
_hasOverrideChildStorePlatformDictionaries
_hasSubscriptionOffer
_overrideChildStorePlatformDictionaries
_storePlatformDictionary
_parentStoreItemMetadata
T@"MPStoreItemMetadata",R,C,N,V_parentStoreItemMetadata
T@"MPStoreArtworkRequestToken",R,N
T@,R,C,N
T@"NSArray",R,C,N
beats1
TB,R,N,GisBeats1
compilation
TB,R,N,GisCompilation
T@"NSDate",R,C,N
expired
TB,R,N,GisExpired
T@"NSDictionary",R,C,N
explicitContent
TB,R,N,GisExplicitContent
masteredForiTunes
TB,R,N,GisMasteredForiTunes
storeRedownloadable
TB,R,N,GisStoreRedownloadable
T@"NSURL",R,C,N
privatePerson
TB,R,N,GisPrivatePerson
verifiedPerson
TB,R,N,GisVerifiedPerson
live
TB,R,N,GisLive
offerType
currentCalendar
component:fromDate:
initWithStyle:reuseIdentifier:
colorWithWhite:alpha:
setBackgroundColor:
setSelectedBackgroundView:
configurationWithPointSize:weight:scale:
setPreferredSymbolConfiguration:
contentView
blackColor
setTintColor:
systemImageNamed:
setImage:
setContentMode:
setAlpha:
_handleContentSizeCategoryDidChangeNotification:
whiteColor
setHighlightedTextColor:
setTextAlignment:
setTextColor:
_setWantsUnderlineForAccessibilityButtonShapesEnabled:
darkGrayColor
setHidden:
initWithFrame:
defaultFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
configurationWithFont:scale:
didTapToExpand
initWithTarget:action:
addGestureRecognizer:
prepareForReuse
leader
routes
routeSubtype
localizedTitle
setText:
image
_iconImageForRoutes:
_iconImageForRoute:
isSymbolImage
_updateSubtitleTextLabelForRouteItem:
enabled
setEnabled:
setNeedsLayout
bottomSeparatorView
initWithActivityIndicatorStyle:
_updateSpinnerColor
startAnimating
stopAnimating
_updateAccessory
configurationWithTextStyle:scale:
layoutSubviews
accessoryView
_defaultAccessoryView
bounds
traitCollection
displayScale
frame
accessoryType
useSmartAudioCheckmarkStyle
isShowingVolumeSlider
hasVisibleTextTypeToShow
sizeThatFits:
preferredFontForTextStyle:compatibleWithTraitCollection:
setFont:
_baselineOffsetFromBottom
isHidden
center
maskView
setCenter:
setIconStyle:
setAccessoryType:
lightGrayColor
leftPercentage
rightPercentage
floatValue
batteryLevel
setNumberStyle:
setUsesSignificantDigits:
setUsesGroupingSeparator:
_shouldShowSeparateBatteryPercentagesForBatteryLevel:
bundleWithIdentifier:
localizedStringForKey:value:table:
stringFromNumber:
singlePercentage
casePercentage
isPickedOnPairedDevice
auxiliaryDevices
deviceName
playingPairedDeviceName
_checkmarkImageNameForSmartAudio
setAccessoryView:
_checkmarkImageForSmartAudio
_checkmarkAccessibilityLabelForSmartAudio
setAccessibilityLabel:
sizeToFit
_batteryTextForRoute:
setBatteryText:
_pairedDeviceTextForRoute:
setPairedDeviceText:
localizedSubtitle
setLocalizedSubtitle:
resetForNewRoute
isAnimating
layer
removeAllAnimations
stringForCurrentVisibleTextType
hasVisibleTextTypeToTransitionTo
_animateSubtitleLabelToNextAvailableText
scheduledTimerWithTimeInterval:repeats:block:
setColor:
setAnimating:
transitionToNextAvailableVisibleTextType
animateWithDuration:animations:completion:
delegate
routingCellDidTapToExpand:
titleView
subtitleView
iconView
separatorView
volumeSlider
setSubtitleViewAlpha:
updateForEndpoint:routeItem:inferLocalizedModelName:
volumeView
setMirroringStyle:
setPendingSelection:
setUseSmartAudioCheckmarkStyle:
setVolumeSlider:
setShowingVolumeSlider:
_configureLabel:
_configureDetailLabel:
mirroringSwitchVisible
setMirroringSwitchVisible:
mirroringStyle
iconStyle
isPendingSelection
isDisplayedAsPicked
setIsDisplayedAsPicked:
provideOwnSeparator
setProvideOwnSeparator:
subtitleViewAlpha
subtitleTextState
setSubtitleTextState:
_iconImageView
_routeNameLabel
_subtitleTextLabel
_subtitleTextUpdateTimer
_spinnerView
_smartAudioImageView
_checkmarkImageView
_chevronImageView
_expandTargetView
_mirroringSwitchVisible
_pendingSelection
_isDisplayedAsPicked
_useSmartAudioCheckmarkStyle
_provideOwnSeparator
_showingVolumeSlider
_delegate
_mirroringStyle
_iconStyle
_subtitleViewAlpha
_volumeSlider
_subtitleTextState
T@"MPAVRoutingTableViewCellSubtitleTextState",&,N,V_subtitleTextState
T@"<MPAVRoutingTableViewCellDelegate>",W,N,V_delegate
TB,N,V_mirroringSwitchVisible
TQ,N,V_mirroringStyle
TQ,N,V_iconStyle
pendingSelection
TB,N,GisPendingSelection,V_pendingSelection
TB,N,V_isDisplayedAsPicked
TB,N,V_useSmartAudioCheckmarkStyle
TB,N,V_provideOwnSeparator
Td,N,V_subtitleViewAlpha
T@"MPVolumeSlider",&,N,V_volumeSlider
showingVolumeSlider
TB,N,GisShowingVolumeSlider,V_showingVolumeSlider
initWithConfiguration:
setTransitioningDelegate:
setModalPresentationStyle:
viewDidLoad
_createMediaControlsIfNeeded
viewWillAppear:
_present
configuration
dismissViewControllerAnimated:completion:
didDismissHandler
setDismissHandler:
setMediaControls:
mediaControls
present
startPrewarming
stopPrewarming
dismiss
initWithRouteSharingPolicy:routingContextUID:
initWithPresentedViewController:presentingViewController:
completeTransition:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
prefersStatusBarHidden
prepareRemoteViewController
setOverrideRouteSharingPolicy:routingContextUID:
setDidDismissHandler:
_configuration
_didDismissHandler
_mediaControls
T@"MPMediaControls",&,N,V_mediaControls
T@"MPMediaControlsConfiguration",R,N,V_configuration
T@?,C,N,V_didDismissHandler
T@"<MPMediaControlsViewControllerDelegate>",W,N,V_delegate
shouldRemovePresentersView
presentAnimated:completion:
dismissAfter:
setCountLimit:
representationSize
scaledFittingSize
representationToken
cache
_representationCacheKeyForArtworkCatalog:forAnyRevision:
_removeLoadingRequestForArtworkCatalog:
_performSyncBlock:
_addLoadingRequestForArtworkCatalog:
_hasLoadingRequestForArtworkCatalog:
_errorWithDescription:
tileArtworkVisualIdenticalityIdentifiers
renderHint
setRenderHint:
isEqualToArray:
representationForVisualIdentity:withSize:image:
setTileArtworkVisualIdenticalityIdentifiers:
setRepresentationToken:
null
destinationScale
_tileSizeForFittingSize:rows:columns:spacing:
setFittingSize:
setDestinationScale:
replaceObjectAtIndex:withObject:
requestImageWithCompletion:
representationWithPreparedImage:
prepareForDisplayWithCompletionHandler:
initWithTiledArtworkRequest:scaledFittingSize:
dataSource
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
_loadingRequestForArtworkCatalog:
sharedDataSource
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkPropertiesForCatalog:completionHandler:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
_performAsyncBlock:
_loadingTiledArtworkRequests
_loadingTiledArtworkRequestsAccessQueue
_renderingTiledArtworkRequestsQueue
_tiledArtworkRepresentationFallbackCache
_tilingArtworkCatalogOperationQueue
legacyMediaQuery
_executeLegacyRequest
_executeRequest
connectionAssertionWithIdentifier:
_libraryView
_itemProperties
sectionKind
MLCorePropertiesForPropertySet:
entityClass
_sectionProperties
groupingType
setGroupingType:
collections
_representativeCollectionGroupingType
resultSet
playlistAttributes
items
revision
itemsQuery
_hasStaticEntities
_enumerateItemPersistentIDsUsingBlock:
ml3Library
criteria
ML3ItemsQueryInLibrary:
enumeratePersistentIDsAndProperties:usingBlock:
filtersOnDynamicProperties
currentRevision
currentContentRevision
initWithRequest:sectionQueryResults:itemQueryResults:
initWithDataSource:
sectionInfo
sections
range
title
enumerateObjectsUsingBlock:
sectionIndexTitles
_enumerateCollectionPersistentIDsUsingBlock:
initWithRequest:itemQueryResults:itemIdentifierQueryResults:
setLibraryAssertion:
handleFailureInFunction:file:lineNumber:description:
_sanityCheckRequest
setOperationQueue:
operationQueue
setSectionKeepLocalStatusConfigurations:
contentRange
sectionTranslationContext
accountDSID
setPersonID:
sectionSortDescriptors
setQuery:
setSerialAccessQueue:
serialAccessQueue
wantsDetailedKeepLocalRequestableResponse
setMultiQuery:
setFilteringOptions:
allowedItemIdentifiers
setAllowedEntityIdentifiers:
filterText
setFilterText:
scopedContainers
arrayByAddingObject:
itemSortDescriptors
setDownloadablePlaylistItemEntityQueryBlock:
setDownloadableItemsQuery:
setResultHandler:
propertiesQueryForPropertySet:scopedContainers:allowedItemIdentifiers:view:
itemTranslationContext
intersectsSet:
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
_serialAccessQueue
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperationQueue",&,N,V_serialAccessQueue
T@"MPModelLibraryRequest",C,N,V_request
query
libraryView
resultHandler
_resultHandler
_query
T@"MPMediaLibraryView",&,N,V_libraryView
T{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}},N,V_query
T@?,C,N,V_resultHandler
sharedInstance
_resetInternalState
prefersApplicationAudioSession
_setQueueController:deferItemLoading:
_applicationWillAddDeactivationReason:
_applicationDidRemoveDeactivationReason:
_applicationDidEnterBackgroundNotification:
_applicationWillEnterForegroundNotification:
_audioSessionMediaServicesWereResetNotification:
_cancelStallTimer
_cancelUpdateCurrentItemBookkeepingTimer
removeTimeObserver:
_unregisterForPlayer:
_unregisterForAVItemNotifications:
sharedApplication
endBackgroundTask:
setUbiquitousBookkeepingEnabled:
_pauseWithFadeout:forScanning:
_setState:
_updateScanningRate
_hasValidPlayerTime
_setLastSetTime:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
_delayedPlaybackIndexChange
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
queuePlayer
setCurrentTime:
_updateDirectionForChangeDelta:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
_queueDidEndWithReason:lastItem:
jumpToContentItemID:
_endSeekAndChangeRate:
isCurrentItemReady
isLiveStreaming
_currentTimeWithPreloadedPlayerTime:value:
_setRate:forScanning:withItem:completion:
_setAllowsItemErrorResolution:
reset
pauseWithFadeout:
setActionAfterQueueLoadOverride:
disableAutoplayForCurrentItem
_setStoppingFadeOutDuration:
silenceOutput:error:
playWithOptions:
_playWithOptions:allowsEnablingAutoPlay:
_shouldProvideAudiblePlaybackPerformance
state
_delayedSetCurrentTime
_hasEnoughDataToPlay
_canPlayItem:
_rateDidChange:
enableAutoplayForCurrentItem
setAutoPlayWhenLikelyToKeepUp:
_attemptAutoPlay
setCurrentTime:options:
togglePlaybackWithOptions:
alwaysPlayWheneverPossible
endTickTimer
setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:
setAllowsExternalPlayback:shouldIgnorePlaybackQueueTransactions:
_showsPlayingWhenInState:
_displayPlaybackState
usesExternalPlaybackWhileExternalScreenIsActive
setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:
setUsesExternalPlaybackWhileExternalScreenIsActive:shouldIgnorePlaybackQueueTransactions:
setRate:completion:
_sendTracePlaybackStartDidFinishIfNeededForItem:
volumeControlIsAvailable
_userVolume
_setUserVolume:
_setActionAtEndAttributeForState:
initWithName:
setFetchAvailableRoutesSynchronously:
pickedRoute
_applyAirPlayMusicMode
setClient:wantsToAllowExternalPlayback:
setDisableAirPlayMirroringDuringPlayback:
setUsesAudioOnlyModeForExternalPlayback:
_disconnectAVPlayerWithReason:
_playerAVAudioSession
setApplicationAudioSession:
_connectAVPlayer
audioFormats
unsignedIntValue
_setAutoPlayBackgroundTaskAssertionEnabled:
externalPlaybackType
externalPlaybackVideoGravity
playerAVAudioSession
setActive:error:
setExternalPlaybackVideoGravity:
setCurrentTime:options:completion:
queueCoordinator
shouldDeferItemLoading
_clearSeekingIntervalsForStreaming
_resumeTickTimer
_pauseTickTimer
_updateCurrentItemDurationSnapshotWithPlayerTime:
_pickedRoute
setUsesAudioOnlyModeForExternalPlayback:shouldIgnorePlaybackQueueTransactions:
usesAudioOnlyModeForExternalPlayback
reloadWithPlaybackContext:completionHandler:
shouldBecomeActive
setShouldDeferItemLoading:
endPlayback
_playbackFailedWithError:canResolve:
actionAfterQueueLoadOverride
actionAfterQueueLoad
_playerFailedToQueueNotification:
currentTimeForBookmarking
playableDurationOfCurrentItemIfAvailable
_contentsChanged
reloadWithPlaybackContext:
isSuspended
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
_registerForAVItemNotifications:
_updateTypeForItem:
_updateHasProtectedContentForItem:
endSeek
initWithObjectsAndKeys:
_itemFailedToPlayToEnd:
airPlayVideoEnded
airPlayFailedRentalDownloadRequired
_airPlayFailedUnsupportedVideoFormatForDeviceWithError:
seekToTime:toleranceBefore:toleranceAfter:
_delayedUpdateScanningRate
changePlaybackIndexBy:deltaType:
actionAtItemEnd
_verifyDisplayProtection
_setValid:
_setBufferingState:
sharedNetworkPlayabilityMonitor
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_prepareToPlayItem:
applicationState
skipToSeekableEnd
_resumePlayback:
routingController
clearCachedRoutes
_updateCurrentItemBookkeepingMarkedAsCheckpoint:
_clearLastSetTimeIfPlayerTimeIsValid
playbackHasStartedForItem:
_itemDidSignificantlyChangeElapsedTime:rate:
isApplicationAudioSession
setCategory:error:
_connectAVPlayerDeferringItemLoading:
initWithPlayer:dataSource:
initWithAVController:
_expectedAssetTypesForPlaybackMode:
_setExpectedAssetTypes:
setQueueCoordinator:
_playerKeysToObserve
_setClientName:
setActionAtItemEnd:
routingControllerAvailableRoutesDidChange:
addPeriodicTimeObserverForInterval:queue:usingBlock:
_configureAudioSession
removeAllItems
pickBestDeviceRoute
_itemWillChange:
currentItemDidChangeFromItem:toItem:
_itemDidChange:
_isExternalPlaybackActiveDidChange:
_serverConnectionDidDie:
_canPlayFastForwardDidChange:
_canPlayFastReverseDidChange:
_streamRanDry:
_streamBufferFull:
_streamLikelyToKeepUp:
_streamUnlikelyToKeepUp:
_itemReadyToPlay:
_tracksDidChange:
_durationDidChange:
_shouldPausePlaybackForDeactivationReasons:
_resumePlaybackIfNecessary
_pauseBookkeepingTimer
_resumeBookkeepingTimer
outputObscuredDueToInsufficientExternalProtection
_applyAirPlayMusicModeForItem:shouldIgnorePlaybackQueueTransactions:
externalScreenType
canAccessRemoteAssets
isAppleTVRoute
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
msv_compactDescription
removeObserver:forKeyPath:
_updateStateForPlaybackPrevention
_itemKeysToObserve
_itemPlaybackDidEndNotification:
_itemFailedToPlayToEndNotification:
_timeHasJumpedNotification:
_itemAssetIsLoadedNotification:
_itemTypeAvailableNotification:
_itemBookmarkTimeDidChangeNotification:
_itemPlayerItemDidChangeNotification:
_itemPlayerItemWillChangeNotification:
beginBackgroundTaskWithName:expirationHandler:
autoPlayWhenLikelyToKeepUp
beginBackgroundTaskWithExpirationHandler:
shouldHaveNoActionAtEndForState:
postNotification:
notificationWithName:object:userInfo:
currentRunLoop
_delayedPostPlaybackStateChangedNotification
arrayWithObjects:
performSelector:target:argument:order:modes:
setDisplayOverridePlaybackState:
autoclearDisplayOverride
_postPlaybackStateChangedNotificationWithOriginalState:newState:delayable:
_scheduleUpdateCurrentItemBookkeepingTimer
_clearResetRateAfterSeeking
_seeklessStateForState:
_configureUpdateCurrentItemBookkeepingTimer
_updateSeekingIntervalsForStreaming
setRateForScanning:
metadataItemsFromArray:withKey:keySpace:
dataValue
_handlePlaybackErrorResolutionType:forItem:playbackError:resolutionError:
handlePlaybackErrorWithUserInfo:
jumpToContentItemID:userInitiated:
useAirPlayMusicMode
isSuspendedUnderLock
setNextFadeOutDuration:
_player
initialize
keyPathsForValuesAffectingCurrentItem
outputSupportsAC3
automaticallyNotifiesObserversOfPlaylistManager
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
beginInterruption
endInterruptionWithFlags:
endInterruption
inputIsAvailableChanged:
beginInterruptionFromInterruptor:
endInterruptionFromInterruptor:category:flags:
beginSeek:
_updateLastSetTimeForCurrentItemIfNeeded
isSeekingOrScrubbing
togglePlayback
forceRestartPlaybackIfNecessary
beginTickTimerWithInterval:
isTickTimerEnabled
shouldDisplayAsPlaying
setAlwaysPlayWheneverPossible:
disableAirPlayMirroringDuringPlayback
hasVolumeControl
volume
setVolume:
stopAtEnd
setStopAtEnd:
setUseAirPlayMusicMode:
setManagesAirPlayBehaviors:
avPlayer
setActive:
becomeActiveWithCompletion:
loadSessionWithQueueController:completionHandler:
updateBookkeepingNow
finalizeBookkeepingNow
setState:
showPlaybackStateOverlaysOnTVOut
durationOfCurrentItemIfAvailable
timeOfPlayableStart
timeOfPlayableEnd
canSeekBackwards
canSeekForwards
canSkipToSeekableEnd
skipToSeekableStart
ubiquitousBookkeepingEnabled
_updateCurrentItemBookkeepingForTimerCallback
_currentIndexInBoundaryCMTimes:
setAutoclearingDisplayOverridePlaybackState:
_updateProgress:
_extractImageFromMetadata:
_pausePlaybackIfNecessary
_enforcingPolicy:
addPeriodicTimeObserverForInterval:usingBlock:
displayOverridePlaybackState
lastDirection
muted
setPlaybackMode:
policyEnforcer
setPolicyEnforcer:
setQueuePlayer:
queueController
nextFadeOutDuration
shouldEnforceHDCP
setShouldEnforceHDCP:
shouldPostCompatibilityNotifications
setShouldPostCompatibilityNotifications:
isReloadingForPlaybackContextChange
setIsReloadingForPlaybackContextChange:
canAttemptErrorResolution
identifier
managesAirPlayBehaviors
stateBeforeInterruption
_didResolveError
_disableAirPlayMirroringDuringPlayback
_shouldPreventStateChangesForRateChange
_stallBackgroundTaskIdentifier
_usesAudioOnlyModeForExternalPlayback
_allowsItemErrorResolution
_routingController
_periodicTimeObserverToken
_tickTimerEnabled
_tickTimer
_tickInterval
_currentItemBookkeepingTimer
_indexChangeDirection
_contentItemIDAtDeath
_lastDisconnectReason
_lastKnownTimeBeforeDeath
_lastPlaybackIndexChangeTime
_lastSetTime
_lastSetTimeChangeTime
_hasDelayedCurrentTimeToSet
_forceDelayedCurrentTimeToSet
_delayedCurrentTimeToSet
_pendingCurrentTime
_delayedCurrentTimeOptions
_lastSetTimeMarker
_temporaryChapterTime
_autoPlayWhenLikelyToKeepUp
_autoplayDisabledForCurrentItem
_autoPlayBackgroundTaskAssertionEnabled
_autoPlayBackgroundTaskCount
_appHasBeenSuspended
_deactivationReasons
_autoPlayBackgroundTaskIdentifier
_autoPlayTimeoutSource
_nextFadeOutDuration
_hasPendingRate
_hasSentTracePlaybackStartDidFinish
_pendingRateItem
_pendingRate
_pendingChangeForScanning
_boundaryTimeObserver
_boundaryTimes
_boundaryTimeIndexLastPosted
_observerInfos
_observerInfoToCoreMediaObserver
_rateBeforeSeek
_inflightSeekRate
_scanLevel
_scanDirection
_resetRateAfterSeekingUpdateDisabled
_seeklessState
_isSeekingOrScrubbing
_resetRateAfterSeeking
_activeRewindHoldingAtStart
_lastSeekableEnd
_whenSawSeekableEnd
_maxSeekableFwd
_seekFwdSlop
_lastSeekableStart
_whenSawSeekableStart
_maxSeekableRev
_seekRevSlop
_canSeekRev
_canSeekFwd
_alwaysPlayWheneverPossible
_stopAtEnd
_pausedDuringInterruption
_resumePlaybackWhenActive
_playInBackgroundUserDefaultEnabled
_canPlayFastForward
_canPlayFastReverse
_shouldAutoclearDisplayOverride
_state
_displayOverridePlaybackState
_bufferingState
_delayedPlaybackStateNotification
_stallTimerSource
_hasProvidedAudibleLikelyToKeepUp
_hasProvidedAudiblePlay
_itemInitialBookmarkTime
_rateBeforeResignActive
_ubiquitousBookkeepingDisabledCount
_secondsSinceUbiquitousCheckpoint
_videoViewClass
_lastInterruptionEnd
_shouldEnforceHDCP
_clientsWantingExternalPlayback
_currentItemRevisionID
_muted
_shouldPostCompatibilityNotifications
_isReloadingForPlaybackContextChange
_canAttemptErrorResolution
_useAirPlayMusicMode
_managesAirPlayBehaviors
_lastDirection
_policyEnforcer
_actionAfterQueueLoadOverride
_queuePlayer
_queueCoordinator
_queueController
_identifier
_stateBeforeInterruption
T@"MPAVPolicyEnforcer",&,N,V_policyEnforcer
Tq,N,V_actionAfterQueueLoadOverride
T@"MPQueuePlayer",R,N
T@"MPQueuePlayer",&,N,V_queuePlayer
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
T@"<MPAVQueueController>",R,N,V_queueController
Tq,N,V_displayOverridePlaybackState
Td,N,V_nextFadeOutDuration
externalPlaybackActive
TB,R,N,GisExternalPlaybackActive
TB,N,V_shouldEnforceHDCP
TB,N,V_shouldPostCompatibilityNotifications
TB,N,V_isReloadingForPlaybackContextChange
TB,R,N,V_canAttemptErrorResolution
T@"NSString",R,C,N,V_identifier
Tq,N,V_state
TB,N,V_useAirPlayMusicMode
TB,N,V_managesAirPlayBehaviors
Tq,R,N,V_stateBeforeInterruption
T@"MPQueueFeeder",R,N
T@"MPAVItem",R,N
T@"MPAVRoutingController",R,N
Tq,R,N,V_lastDirection
TB,R,N,V_muted
TQ,R,N,V_bufferingState
currentItemReady
TB,R,N,GisCurrentItemReady
Tq,N,V_playbackMode
playing
TB,R,N,GisPlaying
TB,R,N,GisValid
artworkCatalogBlock
chapters
chapterOfType:atTime:
artworkCatalog
previewArtworkRequestToken
_lookupDictionary
T@"NSDictionary",R,C,N,V_lookupDictionary
T@"MPStoreArtworkRequestToken",R,C,N
enableState
setEnableState:
identifyingModelObject
setIdentifyingModelObject:
_enableState
_identifyingModelObject
Tq,N,V_enableState
T@"MPModelObject",&,N,V_identifyingModelObject
initWithBytesNoCopy:length:encoding:freeWhenDone:
startTime
endTime
T@"NSDate",C,N
_title
_descriptionText
_startTime
_endTime
T@"NSString",C,N,V_title
T@"NSString",C,N,V_descriptionText
T@"NSDate",C,N,V_startTime
T@"NSDate",C,N,V_endTime
_getConnectionWithCompletionHandler:
_setRadioAvailable:
_endRemoteProcessAssertion
remoteObjectProxyWithErrorHandler:
serviceRadioControllerGetRecentStationGroupsWithCompletionHandler:
_beginRemoteProcessAssertionWithCompletionHandler:
sharedService
initWithBundleIdentifier:flags:reason:name:withHandler:
openApplication:options:withResult:
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
resume
serviceRadioControllerGetRadioAvailabilityWithCompletionHandler:
clientRadioControllerRadioAvailabilityDidChange:
clientRadioControllerRecentStationsDidChange
isRadioAvailable
getRecentStationGroupsWithCompletionHandler:
_accessQueue
_connection
_hasLaunchedService
_isRadioAvailable
_remoteProcessAssertion
_remoteProcessAssertionCompletionHandler
_remoteProcessAssertionCount
radioAvailable
TB,R,N,GisRadioAvailable
propertySetWithProperties:
setStationStringID:
setRadioIdentifiersWithBlock:
setBeats1:
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
setProviderName:
setLive:
setType:
setSubtype:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
setFormat:
setStationGlyphBlock:
setAttributionLabel:
setStationEvents:
copyWithBlock:
sharedStoreItemMetadataRequestController
addStoreItemMetadata:
_requestedRadioStationProperties
kindWithModelClass:cacheKey:block:
variants
options
stringWithString:
insertString:atIndex:
kindWithVariants:options:
_variants
_options
TQ,R,N,V_variants
TQ,R,N,V_options
hasVideo
__title_KEY
__album_KEY
__artist_KEY
__genre_KEY
__composer_KEY
__grouping_KEY
__copyrightText_KEY
__duration_KEY
__trackCount_KEY
__trackNumber_KEY
__discNumber_KEY
__playCount_KEY
__skipCount_KEY
__explicitSong_KEY
__artistUploadedContent_KEY
__hasVideo_KEY
__beatsPerMinute_KEY
__lyrics_KEY
__shouldShowComposer_KEY
__volumeNormalization_KEY
__artworkCatalogBlock_KEY
__localFileAsset_KEY
__keepLocalEnableState_KEY
__keepLocalManagedStatus_KEY
__libraryAdded_KEY
__libraryAddedDate_KEY
__lastDevicePlaybackDate_KEY
__libraryAddEligible_KEY
__hasCloudSyncSource_KEY
__classicalWork_KEY
__classicalMovement_KEY
__classicalMovementCount_KEY
__classicalMovementNumber_KEY
__year_KEY
__homeSharingAsset_KEY
__storeAsset_KEY
__userRating_KEY
__cloudStatus_KEY
__gaplessInfo_KEY
__volumeAdjustment_KEY
__playbackPosition_KEY
__downloadedDate_KEY
__traits_KEY
T@"MPModelAlbum",&,D,N
T@"MPModelArtist",&,D,N
T@"MPModelGenre",&,D,N
T@"MPModelComposer",&,D,N
grouping
T@"MPModelFileAsset",&,D,N
homeSharingAsset
T@"MPModelHomeSharingAsset",&,D,N
T@"MPModelPlaybackPosition",&,D,N
T@"MPModelStoreAsset",&,D,N
Td,D,N
Tq,D,N
playCount
skipCount
explicitSong
TB,D,N,GisExplicitSong
TB,D,N,GisArtistUploadedContent
beatsPerMinute
T@"MPModelLyrics",&,D,N
volumeNormalization
Tf,D,N
T@?,C,D,N
hasCloudSyncSource
libraryAdded
TB,D,N,GisLibraryAdded
libraryAddedDate
T@"NSDate",C,D,N
libraryAddEligible
TB,D,N,GisLibraryAddEligible
year
cloudStatus
gaplessInfo
T@"MPGaplessInfo",&,D,N
volumeAdjustment
traits
TQ,D,N
classicalWork
classicalMovement
classicalMovementCount
classicalMovementNumber
downloadedDate
T@"NSDate",R,C,D,N
lastDevicePlaybackDate
_onQueue_controllerDidDiscoverTelevision:
_onQueue_controllerDidRemoveTelevision:
setDiscoveryMode:
_discoveredTelevisions
initWithTelevision:
devicePresenceDetected
getRoutesForCategory:
getPickedRouteHasVolumeControlWithCompletion:
_discoveryController
_serialQueue
numberWithUnsignedInt:
T@"NSMutableDictionary",R,N
siriSessionIdentifier
setSiriSessionIdentifier:
_siriSessionIdentifier
TI,N,V_sessionID
T@"NSString",C,N,V_siriSessionIdentifier
mediaRemoteAudioFormat
tier
setTier:
bitrate
setBitrate:
sampleRate
setSampleRate:
bitDepth
setBitDepth:
codec
setCodec:
groupID
setGroupID:
stableVariantID
setStableVariantID:
isSpatialized
setSpatialized:
isMultiChannel
setMultiChannel:
channelLayout
setChannelLayout:
audioChannelLayoutDescription
setAudioChannelLayoutDescription:
initWithMediaRemoteAudioFormat:
_mediaRemoteAudioFormat
T@"MRContentItemMetadataAudioFormat",R,N,V_mediaRemoteAudioFormat
spatialized
TB,N,GisSpatialized
multiChannel
TB,N,GisMultiChannel
T@"NSString",&,N
adamID
setSongPopularity:forAdamID:
songPopularityForAdamID:
dictionaryWithCapacity:
dictionaryWithDictionary:
initWithAppDataDictionary:
setSongPopularity:forIdentifierSet:
songPopularityForIdentifiers:
createAppDataDictionary
version
_version
_appDataDict
_dirtyPopularityDict
Tq,R,N,V_version
assetURL
downloadKey
fairPlayInfoList
initWithiTunesCloudStoreFileAssetFairPlayInfo:
flavorType
fileExtension
fileSize
initWithiTunesCloudStoreFileAssetInfo:
_internalInfo
T@"NSData",R,C,N
artworkGenerator
setArtworkGenerator:
_artworkGenerator
T@"<MPMediaRemoteEntityArtworkGenerator>",&,N,V_artworkGenerator
translatorWithKeyPath:
translatorWithBlock:
valueFromSource:context:
keyPath
valueTransformBlock
_keyPath
_valueTransformBlock
T@"NSString",R,N,V_keyPath
T@?,R,N,V_valueTransformBlock
objectForPropertySet:contentItem:context:
MPModelClass
artworkCatalogBlockForContentItem:
stringByAppendingString:
initWithRelatedMPModelClass:
collectionInfo
requiredStoreLibraryPersonalizationProperties
buildSchemaIfNeeded
identifiersForContentItem:
sectionObjectForPropertySet:contentItem:context:
mapIdentifierCreationBlock:
mapPropertyKey:toMPContentItemSelector:
mapArtworkPropertyKey:
mapPropertyKey:toUserInfoKey:
mapPropertyKey:toDeviceSpecificUserInfoKey:
mapPropertyKey:toValueTransformer:
mapRelationshipKey:toModelClass:
timerWithInterval:repeats:block:
timerWithInterval:repeats:queue:block:
initWithInterval:repeats:queue:block:
timerWithInterval:block:
timerWithInterval:queue:block:
initWithInterval:queue:block:
_timerSource
setPredicates:
removeAllObjects
dictionaryRepresentation
addPredicates:
writeTo:
data
writeData:forTag:
predicatesCount
clearPredicates
predicatesAtIndex:
readFrom:
copyTo:
predicates
_predicates
T@"NSMutableArray",&,N,V_predicates
_applicationWillEnterForeground:
_registerForScreenRecordingNotifications
_unregisterForScreenRecordingNotifications
_updateScreenRecordingState
setMuted:
_isScreenRecordingDidChange:
_screenRecordingNotifyToken
_lastKnownScreenRecordingState
T@"MPAVController",R,W,N,V_controller
_scaledFittingSize
_stringForVisibleTextType:
_nextAvailableVisibleTextType
batteryText
pairedDeviceText
currentVisibleTextType
setCurrentVisibleTextType:
_animating
_batteryText
_pairedDeviceText
_localizedSubtitle
_currentVisibleTextType
TQ,N,V_currentVisibleTextType
T@"NSString",C,N,V_batteryText
T@"NSString",C,N,V_pairedDeviceText
T@"NSString",C,N,V_localizedSubtitle
animating
TB,N,GisAnimating,V_animating
queueWithMediaRemotePlaybackQueue:options:
initWithMediaRemotePlaybackQueue:options:
removeObjectForKey:
queueWithMediaRemotePlaybackQueue:
registerRemotePlaybackQueueClass:forPlaybackQueueType:
isRequestingImmediatePlayback
setRequestingImmediatePlayback:
siriRecommendationIdentifier
siriAssetInfo
featureName
setSiriRecommendationIdentifier:
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
replaceIntent
setReplaceIntent:
verifyWithError:
_mediaRemotePlaybackQueue
queueGroupingID
mediaRemoteOptions
_queueGroupingID
_mediaRemoteOptions
T^{_MRSystemAppPlaybackQueue=},R,N
T@"NSDictionary",R,N,V_mediaRemoteOptions
requestingImmediatePlayback
TB,N,GisRequestingImmediatePlayback
T@"NSString",R,C,N,V_queueGroupingID
T@"ICUserIdentity",R,N,V_userIdentity
initWithData:
initWithProtobufferDecodableObject:library:
initWithMultiverseIdentifier:library:
predicateWithValue:forProperty:
initWithFilterPredicates:library:
setShouldIncludeNonLibraryEntities:
mediaQuery
_countOfItems
_countOfCollections
initWithDomain:code:userInfo:
firstItem
shuffleType
repeatType
_mediaQuery
_firstItem
_shuffleType
_repeatType
T@"MPMediaQuery",R,N,V_mediaQuery
T@"MPMediaItem",R,N,V_firstItem
Tq,R,N,V_shuffleType
Tq,R,N,V_repeatType
_stationID
_stationStringID
Tq,R,N,V_stationID
T@"NSString",R,N,V_stationStringID
trackIdentifiers
firstTrackIdentifier
collectionIdentifierSet
_firstTrackIdentifier
_trackIdentifiers
_collectionIdentifierSet
T@"NSString",R,N,V_firstTrackIdentifier
T@"NSArray",R,N,V_trackIdentifiers
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
initWithIdentifier:data:
valueForKey:
unarchivedObjectOfClass:fromData:error:
setUserInteractionEnabled:
_setTextColorFollowsTintColor:
routeLabelAxis
accessoryImageSpacing
isRouteLabelHidden
setHighlighted:
subviews
alpha
animateWithDuration:delay:options:animations:completion:
tintColorDidChange
tintColor
invalidateIntrinsicContentSize
route
setRoute:
forcesUppercaseText
setForcesUppercaseText:
intrinsicContentSize
pointInside:withEvent:
accessoryImage
setAccessoryImage:
setAccessoryImageSpacing:
setRouteLabelHidden:
setRouteLabelAxis:
_intrinsicContentSizeInvalidatedForChildView:
font
hitRectInsets
setHitRectInsets:
routeTitle
overrideColor
setOverrideColor:
_routeLabel
_accessoryImageView
_alphaOverride
_routeLabelHidden
_accessoryImageSpacing
_font
_routeTitle
_overrideColor
_routeLabelAxis
_hitRectInsets
T@"UIImage",&,N
Td,N,V_accessoryImageSpacing
T@"UIFont",&,N,V_font
T{UIEdgeInsets=dddd},N,V_hitRectInsets
T@"MPAVRoute",&,N
T@"NSString",R,C,N,V_routeTitle
routeLabelHidden
TB,N,GisRouteLabelHidden,V_routeLabelHidden
T@"UIColor",&,N,V_overrideColor
Tq,N,V_routeLabelAxis
supportsLyricsForURLBag:
_initWithDictionary:
setSongAdamID:
lyricsID
setLyricsID:
isTTML
lyricsContent
setTTML:
supportsLyricsForURLBagDictionary:
_song
T@"MPModelSong",&,N,V_song
setLocalizedTitle:
stations
setStations:
_localizedTitle
_stations
T@"NSString",C,N,V_localizedTitle
T@"NSArray",C,N,V_stations
allSupportedInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:modelObject:
emptyIdentifierSet
setDisplaysAsGridCellInCarPlay:
setSectionType:
setLoadAdditionalContentURL:
setUniformContentItemType:
setMemberOfChartSet:
setBrick:
setPreviouslyRetrievedNestedResponse:
allSupportedPropertiesIncludingInternalOnlyProperties:
requestedPropertySetExcludingInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:previouslyRetrievedNestedResponse:
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:
_requestedBrowseSectionProperties
_requestedPropertySet
T@"MPPropertySet",R,N,V_requestedPropertySet
T@"MPPropertySet",R,N
_parsedSectionedCollection
layerWithKey:ofType:
layerWithFirstObjectOfType:
_parsedEditorialElements:
_parsedEditorialElementX:
firstSection
allItems
appendItems:
sectionType
addIndex:
removeSectionAtIndex:
enumerateIndexesUsingBlock:
numberOfSections
featuredContentKindForNode:
containsIndex:
childrenOfContentNode:
_parsedEditorialElement:
featuredContentKindCorrespondsToItem:
isContentNodeAnEditorialElement:
firstChildOfContentNode:
attributesForContentNode:
_parsedContentNode:uniformContentItemTypeResolver:additionalAttributesFromParent:
linksForContentNode:
linkSectionWithDictionary:
uniformContentItemType
dictionaryForBagKey:
regularExpressionWithPattern:options:error:
bagRoomURLRegularExpression
matchesInString:options:range:
stringForBagKey:
rangeWithName:
substringWithRange:
musicAPIURLWithLinkURLString:
addContentItemType:
modelObjectWithStoreItemMetadata:userIdentity:
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:rootObjectIdentifier:options:storeURLBag:
_parseOnceToken
_rawResponseOutput
_sectionBuilder
_contentItemBuilder
_filteredFCKinds
_storeBagLinkRegularExpression
_rootObjectIdentifier
T@"MPSectionedCollection",R,N
formerAdamIDs
setAdamID:
setFormerAdamIDs:
setUniversalStoreIdentifiersWithBlock:
DSIDForUserIdentity:outError:
stringValue
setPersonalStoreIdentifiersWithPersonID:block:
setTrackCount:
setDiscCount:
setHasCleanContent:
setLibraryAddEligible:
setMaximumItemTrackNumber:
setLibraryAdded:
setKeepLocalEnableState:
setKeepLocalManagedStatus:
setCompilation:
setClassical:
setCopyrightText:
components:fromDate:
setReleaseDateComponents:
setYear:
setPreorder:
setVolumeNormalization:
sharedCloudController
isEnhancedAudioAvailable
setTraits:
setGenre:
setSongPopularityBlock:
setRepresentativeSong:
setVersionHash:
_requestedAlbumProperties
encodeWithCoder:withExclusiveAccessToken:
assertHasExclusiveAccessForOwner:
setShuffleType:startingItem:inSection:randomSource:
_itemEntry:sectionIdentifier:withExclusiveAccessToken:
initWithSectionedIdentifierList:randomSource:startingItemEntry:withExclusiveAccessToken:
performWithExclusiveAccess:
_shuffledListWithExclusiveAccessToken:
safelyReshuffleAfterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:
enumeratorWithOptions:startPosition:endPosition:withExclusiveAccessToken:
addDataSourceAtStart:section:sequentially:completion:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSourceAtStart:section:sequentially:
addDataSourceAtStart:section:completion:
addDataSource:section:sequentially:afterItem:inSection:
addDataSource:section:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:
addDataSource:section:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:
addDataSourceAtEnd:section:completion:
_sectionHeadEntryMapWithExclusiveAccessToken:
setDataSource:
replaceDataSource:forSection:completion:
moveItemToStart:fromSection:
performWithExclusiveAccessAndReturnBOOL:
moveItemToEnd:fromSection:
moveItem:fromSection:afterItem:inSection:
_isSequentialSection:withExclusiveAccessToken:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
removeItem:fromSection:
itemCount
_itemCountWithExclusiveAccessToken:
dataSourceInsertItemsAtHead:inSection:
dataSourceInsertItems:afterItem:inSection:
dataSourceInsertItemsAtTail:inSection:
dataSourceRemoveItem:fromSection:
dataSourceReloadItem:inSection:
didDequeueShuffledItemsInSectionedIdentifierList:
candidateItems
dequeueCandidatesWithQuota:
doesNotRecognizeSelector:
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSSIL:
setShuffleType:
setShuffleType:startingItem:inSection:
_candidateItemsWithExclusiveAccessToken:
_dequeueCandidatesWithQuota:withExclusiveAccessToken:
addDataSource:section:afterHeadOfSection:
shuffleStartingSectionIdentifier
setShuffleStartingSectionIdentifier:
shuffleStartingItemIdentifier
setShuffleStartingItemIdentifier:
_shuffledList
_shuffleStartingSectionIdentifier
_shuffleStartingItemIdentifier
T@"NSString",C,N,V_shuffleStartingSectionIdentifier
T@"NSString",C,N,V_shuffleStartingItemIdentifier
T@"<MPShuffleableSectionedIdentifierListDelegate>",W,D,N
Tq,N,V_shuffleType
headEntryWithSectionIdentifier:
_insertDataSourceHead:afterEntry:withExclusiveAccessToken:
_addShuffleSection:dataSource:withExclusiveAccessToken:
enumerateKeysAndObjectsUsingBlock:
nextObjectWithExclusiveAccessToken:
entryType
itemResult
itemIdentifier
sectionIdentifier
_createShuffleCloneForItem:inSection:withExclusiveAccessToken:
initWithRandomSource:lowestValue:highestValue:
_appendShuffledItems:withExclusiveAccessToken:
identifiersItemEntryMap
_beforeInitWithCoder:
lastItemEntry
nextEntries
isRemoved
newClonedEntry
setUserRemoved
previousEntry
_insertDataSource:forSection:afterEntry:withExclusiveAccessToken:
tailEntry
_endEntryWithExclusiveAccessToken:
latestUserClone
setDataSourceRemoved
section:shouldShuffleExcludeItem:
indexOfObjectPassingTest:
_startEntriesWithExclusiveAccessToken:
setShuffledHead:
_addBranchToEntry:entries:withExclusiveAccessToken:
lastObject
setLastItemEntry:
itemEntryWithSectionIdentifier:itemIdentifier:
setHostedSectionIdentifier:
nextIntWithUpperBound:
removeObjectAtIndex:
_enumerator:didEncounterEntry:withExclusiveAccessToken:
_reverseEnumeratorWillStartAtEnd:withExclusiveAccessToken:
randomDistribution
setCandidateItems:
_randomDistribution
_candidateItems
T@"<_MPSSILDelegate>",W,D,N
T@"MPRandomDistribution",R,N,V_randomDistribution
T@"NSMutableArray",&,N,V_candidateItems
snippetURL
setSnippetURL:
_snippetURL
T@"MPStoreLyricsSnippetURLComponents",&,N,V_snippetURL
representedSearchScopePredicate
relationshipKinds
initWithItemKind:name:properties:
coreScope
_coreScope
_itemKind
_name
T{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}},R,N
T@"MPModelKind",&,N,V_itemKind
T@"NSString",R,C,N,V_name
T@"MPPropertySet",R,C,N,V_itemProperties
albumAppData
dataWithPropertyList:format:options:error:
predicateWithProperty:equalToInt64:
autoupdatingSharedLibrary
anyInLibrary:predicate:
setValues:forProperties:async:withCompletionBlock:
T@"MPModelLibraryAlbumAppDataChangeRequest",C,N,V_request
initWithRequest:responseHandler:
allSupportedItemProperties
allSupportedGroupProperties
allSupportedSectionProperties
representativeModelObject
setRepresentativeModelObject:
referralObject
setReferralObject:
songResults
setSongResults:
storeImportAllowedHandler
setStoreImportAllowedHandler:
_playlist
_representativeModelObject
_referralObject
_songResults
_storeImportAllowedHandler
T@"MPModelPlaylist",&,N,V_playlist
T@"MPModelObject",&,N,V_representativeModelObject
T@"MPModelObject",&,N,V_referralObject
T@"MPSectionedCollection",&,N,V_songResults
T@?,C,N,V_storeImportAllowedHandler
_artworkCatalogWithArtworkType:
cachedValueForProperty:isCached:
initWithLibrary:identifier:entityType:artworkType:
setAvailableArtworkToken:
setFetchableArtworkToken:
setFetchableArtworkSource:
artworkDataSource
screenshotArtworkCatalog
artworkCatalogCacheProperties
screenshotArtworkCatalogCacheProperties
allAdditionalContentIdentifiersNeedingLookup
hasAdditionalContentItems
changeDetails
setChangeDetails:
parser
setParser:
_changeDetails
_parser
T@"MPModelStoreBrowseResponseParser",&,N,V_parser
T@"MPChangeDetails",&,N,V_changeDetails
setArtworkResizingAccessQueue:
setArtworkResizingOperationQueue:
artworkResizingOperationQueue
strongToStrongObjectsMapTable
setArtworkResizingOperations:
artworkResizingAccessQueue
artworkResizingOperations
initWithImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:destinationURL:
operationGroup
setCompletionBlock:
resizedImage
resizeImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:saveToDestinationURL:completionHandler:
cancelResizeImage:
_artworkResizingAccessQueue
_artworkResizingOperationQueue
_artworkResizingOperations
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkResizingAccessQueue
T@"NSOperationQueue",&,N,V_artworkResizingOperationQueue
T@"NSMapTable",&,N,V_artworkResizingOperations
initWithDeviceFeatures:
outputContextForID:
_availableOutputDevicesDidChangeNotification:
_outputContextDevicesDidChangeNotification:
outputDevices
initWithOutputDevices:
setPicked:
lightweightRoutingController:didChangeDevicePresenceDetected:
isDevicePresenceDetected
lightweightRoutingController:didChangePickedRoutes:
_postPickedRoutesChangedNotification
_onSyncSelf_schedulePickedRoutesChangedNotification
pickedRoutes
discoveryMode
_avDiscoverySession
_avOutputContext
_notificationScheduled
_lastOutputContextNotificationDate
_discoveryMode
Tq,N,V_discoveryMode
TB,R,N,GisDevicePresenceDetected
T@"<MPAVLightweightRoutingControllerDelegate>",W,N,V_delegate
_initializeAsEmptySectionedCollection
numberOfItemsInSection:
sectionAtIndex:
indexPathForItem:inSection:
itemAtIndexPath:
section
item
changeDetailsToSectionedCollection:applyingUIKitWorkarounds:isEqualBlock:isUpdatedBlock:
indexSet
indexPathWithIndex:
removeIndex:
appendSectionMoveFromIndex:toIndex:updated:
appendItemMoveFromIndexPath:toIndexPath:updated:
appendItemUpdateForPreviousIndexPath:finalIndexPath:
indexPathByAddingIndex:
appendSectionUpdateForPreviousIndex:finalIndex:
setInsertedSections:
setDeletedSections:
setInsertedItemIndexPaths:
setDeletedItemIndexPaths:
applyUIKitWorkarounds
hasChanges
mutableCopyWithZone:
lastItem
allSections
enumerateItemsUsingBlock:
globalIndexForIndexPath:
indexPathForGlobalIndex:
itemsInSectionAtIndex:
hasSameContentAsSectionedCollection:
lastSection
changeDetailsToSectionedCollection:isEqualBlock:isUpdatedBlock:
_sectionedItems
_sections
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
enumerateSectionIdentifiersUsingBlock:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
indexPathForItemWithIdentifiersIntersectingSet:
insertObject:atIndex:
exchangeObjectAtIndex:withObjectAtIndex:
insertSection:atIndex:
insertItem:atIndexPath:
moveSectionFromIndex:toIndex:
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
replaceObjectAtIndexPath:withObject:
moveItemFromIndexPath:toIndexPath:
replaceSectionsUsingBlock:
replaceItemsUsingBlock:
setShortTitle:
setEpisodesCount:
setTagline:
setEditorialArtworkCatalogBlock:
kindWithEpisodeKind:
kindWithSeasonKind:
_storeAssetBuilder
_storeAssetProperties
_requestedTVShowProperties
setFeatureName:
setGroup:
group
genericObjectWithModelObject:
__datePlayed_KEY
__featureName_KEY
__playlist_KEY
__radioStation_KEY
__group_KEY
playEventWithModelObject:featureName:
genericObjectRepresentation
datePlayed
T@"MPModelPlaylist",&,D,N
T@"MPModelRadioStation",&,D,N
T@"MPModelGroup",&,D,N
setRegisteredStyleOverrides:reply:
presentMediaControlsWithCompletion:
statusBarCoordinator:invalidatedRegistrationWithError:
statusBarCoordinator:receivedTapWithContext:completionBlock:
presentMediaControls
_statusBarStyleOverride
_coordinator
additionalContent
requestWithURL:
recentlyPlayedItemsWithAPILoadedOutput:
recentlyPlayedSectionWithTitle:
groupingNameBagKey
recentlyPlayedItemWithDictionary:
radioStationWithDictionary:
ic_stringValueForKey:
radioStationTypeFromKind:
radioStationSubTypeFromSubType:
ic_dictionaryValueForKey:
additionalURLRequestsWithStoreURLBag:
additionalCatalogURLQueryItems
groupingNameWithMusicSubscriptionDictionary:
rootObjectIdentifierWithSubscriptionStatus:
sectionHeadEntry
reverseObjectEnumerator
nextObjectIdenticalTo:
branchDepth
startEntry
endEntry
sectionedIdentifierList
nextObject
removeLastObject
isDataSourceRemoved
initWithSectionedIdentifierList:options:startEntry:endEntry:withExclusiveAccessToken:
setOptions:
contexts
setContexts:
nextEmittableEnumerationResults
setNextEmittableEnumerationResults:
setEndEntry:
_sectionedIdentifierList
_contexts
_nextEmittableEnumerationResults
_endEntry
TQ,N,V_options
T@"NSMutableArray",&,N,V_contexts
T@"NSMutableArray",&,N,V_nextEmittableEnumerationResults
T@"MPSectionedIdentifierListEntry",&,N,V_endEntry
T@"MPSectionedIdentifierList",R,N,V_sectionedIdentifierList
objectEnumerator
_startEntryProxy
indexOfObjectIdenticalTo:
entriesToEmit
setEntriesToEmit:
_entriesToEmit
T@"NSMutableArray",&,N,V_entriesToEmit
trackingEntryResult
_entryType
Tq,R,N,V_entryType
playlistURL
keyCertificateURL
keyServerURL
keyServerProtocolType
keyServerAdamID
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
isiTunesStoreStream
initWithiTunesCloudStoreHLSAssetInfo:
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
blockingSecureKeyLoadDuration
setBlockingSecureKeyLoadDuration:
perceivedTotalStartupTime
setPerceivedTotalStartupTime:
tracklistLoadDuration
setTracklistLoadDuration:
_blockingSecureKeyLoadDuration
_perceivedTotalStartupTime
_tracklistLoadDuration
Td,N,V_blockingSecureKeyLoadDuration
T@"NSNumber",C,N,V_perceivedTotalStartupTime
Td,N,V_tracklistLoadDuration
initWithFrame:style:
_resetThumbImageForState:
_minTrackImageForStyle:
setMinimumTrackImage:forState:
_maxTrackImageForStyle:
setMaximumTrackImage:forState:
addLayoutGuide:
currentDevice
userInterfaceIdiom
initWithGroupRoute:outputDeviceRoute:
setVolumeController:
volumeController
_endBlinkingWarningView
createThumbView
setClipsToBounds:
setShadowColor:
setShadowOffset:
setShadowRadius:
setShadowOpacity:
setThumbImage:forState:
isTracking
isInOptimisticState
setValue:animated:
_layoutVolumeWarningView
isVolumeControlAvailable
volumeWarningEnabled
EUVolumeLimit
volumeWarningState
sharedAVSystemController
allowUserToExceedEUVolumeLimit
_routeName
setVolume:withNoticationDelay:
shouldMakeUIForDefaultPNG
thumbRectForBounds:trackRect:value:
bezierPathWithOvalInRect:
CGPath
setShadowPath:
trackRectForBounds:
locationInView:
_commitVolumeChange
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_endTracking
cancelTrackingWithEvent:
_layoutForAvailableRoutes
topAnchor
_minTrackView
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
_maxTrackView
activateConstraints:
_setDrawsAsBackdropOverlayWithBlendMode:
_setDrawsAsBackdropOverlay:
updateVolumeValue
updateVolumeWarningState
setNeedsUpdate
addVolumeDisplay:
removeVolumeDisplay:
hitRect
_dynamicUserInterfaceTraitDidChange
volumeControlLabel
setGroupRoute:
isDeviceRoute
setVolumeDataSource:
windowScene
_isOffScreen
volumeAudioCategory
volumeValue
_logVolumeValueDidChange:
sendActionsForControlEvents:
setVolumeValue:
setShadowBlurRadius:
mediaPlayerBundle
imageNamed:inBundle:
_flatImageWithColor:
thumbImageForState:
_systemInteractionTintColor
minimumTrackImageForState:
maximumTrackImageForState:
_thumbImageForStyle:
_minValueView
_maxValueView
boldSystemFontOfSize:
setOpaque:
performWithoutAnimation:
_newVolumeWarningView
insertSubview:belowSubview:
_beginBlinkingWarningView
maximumValue
_blinkWarningView
stretchableImageWithLeftCapWidth:topCapHeight:
colorWithRed:green:blue:alpha:
resizableImageWithCapInsets:
initWithImage:
outputDeviceRoute
routeName
groupRoute
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
isOnScreen
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
onScreen
TB,R,N,GisOnScreen
initWithFrame:style:endpointRoute:outputDeviceRoute:
minimumValue
didMoveToSuperview
didMoveToWindow
setOptimisticValue:
setOutputDeviceRoute:
setVolumeWarningTrackImage:
updateVolume
_setIsOffScreen:
thumbView
volumeWarningTrackImage
trackLayoutGuide
setOptimisticState:
optimisticValue
_commitTimer
_thumbImageView
_forcingOffscreenVisibility
_thumbIsDefault
_configuredLayoutGuide
_volumeWarningView
_volumeWarningBlinking
_volumeWarningTrackImage
_beganTrackingFromEUVolumeLimit
_originalMinTrackViewAlphaOverride
_originalMinValueViewAlphaOverride
_originalMaxValueViewAlphaOverride
_isCurrentlyTracking
_setVolumeStartValue
_coalescedVolumeDidChangeLogCount
_optimisticState
_optimisticValue
_trackLayoutGuide
_volumeController
_groupRoute
_outputDeviceRoute
TB,N,S_setIsOffScreen:
T@"UILayoutGuide",R,N,V_trackLayoutGuide
T@"UIView",R,W,N
T@"MPVolumeController",&,N,V_volumeController
T@"MPAVController",&,N,V_player
T@"MPAVEndpointRoute",&,N,V_groupRoute
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
optimisticState
TB,N,GisInOptimisticState,V_optimisticState
Tf,N,V_optimisticValue
Tq,R,N,V_style
T@"UIImage",&,N,V_volumeWarningTrackImage
_createSubviews
_volumeSliderVolumeControlAvailabilityDidChangeNotification:
_initWithStyle:
allowsKeyedCoding
containsValueForKey:
_setShowsVolumeSlider:
_setShowsRouteButton:animated:
convertPoint:fromView:
_setRouteDiscoveryEnabled:
_loadAudioRoutePickerIfNeeded
_updateWirelessRouteStatus
pickableRouteType
imageForState:
_getDefaultVolumeSliderFrame:routeButtonFrame:forBounds:
setImage:forState:
_setChargeEnabled:
setCharge:
convertRect:toView:
convertRect:fromView:
setAutoresizingMask:
easyTouchButtonWithType:
setSelected:
_defaultRouteButtonImageAsSelected:
systemBlueColor
setShowsTouchWhenHighlighted:
_displayAudioRoutePicker
addTarget:action:forControlEvents:
_startPrewarmingAudioRoutePicker
_stopPrewarmingAudioRoutePicker
isVisible
volumeSliderRectForBounds:
routeButtonRectForBounds:
animateWithDuration:animations:
layoutBelowIfNeeded
isShowingRouteButton
isWirelessRouteActive
areWirelessRoutesAvailable
minimumVolumeSliderImageForState:
maximumVolumeSliderImageForState:
volumeWarningSliderImage
routeButtonImageForState:
setMinimumVolumeSliderImage:forState:
setMaximumVolumeSliderImage:forState:
setVolumeWarningSliderImage:
setRouteButtonImage:forState:
setShowsRouteButton:
setShowsVolumeSlider:
setVolumeThumbImage:forState:
showsRouteButton
showsVolumeSlider
volumeThumbImageForState:
volumeThumbRectForBounds:volumeSliderRect:value:
hidesRouteLabelWhenNoRouteChoice
volumeSliderShrinksFromBothEnds
setHidesRouteLabelWhenNoRouteChoice:
setVolumeSliderShrinksFromBothEnds:
_routeButton
_lightweightRoutingController
_hasNonDefaultRouteButtonImages
_hasNonDefaultMaxVolumeSliderImage
_hasNonDefaultMinVolumeSliderImage
_hidesRouteLabelWhenNoRouteChoice
_routeDiscoveryEnabled
_showingButton
_showingLabel
_showingSlider
_showsRouteButton
_showsVolumeSlider
_volumeSliderShrinksFromBothEnds
_wirelessRouteIsPicked
_wirelessRoutesAvailable
_pushedRouteDiscoveryModeState
T@"MPVolumeSlider",R,N
wirelessRoutesAvailable
TB,R,N,GareWirelessRoutesAvailable
wirelessRouteActive
TB,R,N,GisWirelessRouteActive
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
bytesPredicateValue
objCType
setIntegerPredicateValue:
setFloatPredicateValue:
setDoublePredicateValue:
setStringPredicateValue:
setBytesPredicateValue:
hasType
deleteCharactersInRange:
encodeInt64:forKey:
_representativeCollection
allowedSectionIdentifiers
sectionFilterText
setWantsDetailedKeepLocalRequestableResponse:
setLegacyMediaQuery:
setAllowedItemIdentifiers:
setAllowedSectionIdentifiers:
setSectionFilterText:
setContentRange:
sortUsingAllowedItemIdentifiers
setSortUsingAllowedItemIdentifiers:
_wantsDetailedKeepLocalRequestableResponse
_sortUsingAllowedItemIdentifiers
_mediaLibrary
_allowedItemIdentifiers
_allowedSectionIdentifiers
_scopedContainers
_filterText
_sectionFilterText
_legacyMediaQuery
_contentRange
T@"MPMediaQuery",C,N,V_legacyMediaQuery
T@"MPMediaLibrary",&,N,V_mediaLibrary
T@"NSArray",C,N,V_allowedItemIdentifiers
T@"NSArray",C,N,V_allowedSectionIdentifiers
T@"NSArray",C,N,V_scopedContainers
TQ,N,V_filteringOptions
T@"NSString",C,N,V_filterText
T@"NSString",C,N,V_sectionFilterText
T{_NSRange=QQ},N,V_contentRange
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_sortUsingAllowedItemIdentifiers
_mediaLibraryDidChangeNotification:
beginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
sectionKeepLocalStatusConfigurations
downloadableItemsQuery
downloadablePlaylistItemEntityQueryBlock
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
libraryAssertion
_sectionKeepLocalStatusConfigurations
_libraryAssertion
T@"NSArray",C,N,V_sectionKeepLocalStatusConfigurations
T@"MPMediaLibraryConnectionAssertion",&,N,V_libraryAssertion
_downloadablePlaylistItemEntityQueryBlock
_downloadableItemsQuery
T@?,C,N,V_downloadablePlaylistItemEntityQueryBlock
T{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}},N,V_downloadableItemsQuery
requestEndpoint
setFilteringPolicy:
setRequestEndpoint:
setMode:
setTypes:
setWithSocial:
setWithPlainEditorialNotes:
setDisplayFilterKinds:
setWithRecentlyPlayed:
setCustomForYouURL:
setRefreshRequest:
_withSocial
_withPlainEditorialNotes
_withRecentlyPlayed
_refreshRequest
_filteringPolicy
_requestEndpoint
_mode
_types
_displayFilterKinds
_customForYouURL
Tq,N,V_filteringPolicy
Tq,N,V_requestEndpoint
Tq,N,V_mode
Tq,N,V_types
TB,N,V_withSocial
TB,N,V_withPlainEditorialNotes
Tq,N,V_displayFilterKinds
TB,N,V_withRecentlyPlayed
T@"NSURL",C,N,V_customForYouURL
TB,N,V_refreshRequest
setTranslatesAutoresizingMaskIntoConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraints:
preferredContentSize
_volumeView
T@"MPVolumeView",R,N,V_volumeView
dismissAlertController
_applicationKeyWindow
_keyWindowDidChange:
setRootViewController:
makeKeyAndVisible
viewDidAppear:
alertControllerWithTitle:message:preferredStyle:
removeTarget:action:forControlEvents:
_flip
setContentViewController:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
resignKeyWindow
initWithStyle:
_tableView
initWithAudioCategory:
presentAlertControllerInWindow:
hostingWindow
setHostingWindow:
previousWindow
setPreviousWindow:
_audioCategory
_alertController
_hostingWindow
_previousWindow
T@"UIWindow",W,N,V_hostingWindow
T@"UIWindow",W,N,V_previousWindow
generation
deviceIdentifier
positionKeyWithDeviceIdentifier:generation:
setDeviceIdentifier:
setGeneration:
_deviceIdentifier
_generation
T@"NSString",C,N,V_deviceIdentifier
T@"NSString",C,N,V_generation
initWithPositionKey:sectionIdentifier:
removed
TB,R,N,GisRemoved
setBranchDepth:
addNextEntry:
setPreviousEntry:
addBranch:forceBranchDepthIncrease:
prepareForDealloc
positionKey
hostedSectionIdentifier
_nextEntries
_dataSourceRemoved
_positionKey
_sectionIdentifier
_hostedSectionIdentifier
_previousEntry
_branchDepth
T@"MPSectionedIdentifierListEntryPositionKey",R,N,V_positionKey
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",C,N,V_hostedSectionIdentifier
T@"NSArray",R,N,V_nextEntries
T@"MPSectionedIdentifierListEntry",W,N,V_previousEntry
Tq,N,V_branchDepth
dataSourceRemoved
TB,R,N,GisDataSourceRemoved,V_dataSourceRemoved
tailEntryWithSectionHeadEntry:
setSectionHeadEntry:
_sectionHeadEntry
T@"MPSectionedIdentifierListHeadEntry",W,N,V_sectionHeadEntry
isShuffledHead
setTailEntry:
_shuffledHead
_identifiersItemEntryMap
_tailEntry
_lastItemEntry
_dataSource
T@"NSMutableDictionary",R,N,V_identifiersItemEntryMap
T@"MPSectionedIdentifierListTailEntry",&,N,V_tailEntry
T@"MPSectionedIdentifierListItemEntry",&,N,V_lastItemEntry
T@"<MPSectionedIdentifierListDataSource>",&,N,V_dataSource
shuffledHead
TB,N,GisShuffledHead,V_shuffledHead
itemEntryWithSectionIdentifier:itemIdentifier:generationPrefix:
rootEntry
isUserMoved
isUserRemoved
isDataSourceMoved
hasClones
latestDataSourceClone
_generationNumber
clonedEntries
isDataSourceCloned
setRootEntry:
setClonedEntries:
setDataSourceCloned
setDataSourceMoved
setUserMoved
setUserCloned
isUserCloned
_hasClones
_dataSourceCloned
_dataSourceMoved
_userRemoved
_userMoved
_userCloned
_itemIdentifier
_rootEntry
_clonedEntries
T@"NSString",R,N,V_itemIdentifier
T@"MPSectionedIdentifierListItemEntry",W,N,V_rootEntry
T@"MPSectionedIdentifierListItemEntry",R,N
TB,R,N,V_hasClones
T@"NSMutableArray",&,N,V_clonedEntries
T{?=BBBBBBBBq},R,N
dataSourceCloned
TB,R,N,GisDataSourceCloned,V_dataSourceCloned
dataSourceMoved
TB,R,N,GisDataSourceMoved,V_dataSourceMoved
userRemoved
TB,R,N,GisUserRemoved,V_userRemoved
userMoved
TB,R,N,GisUserMoved,V_userMoved
userCloned
TB,R,N,GisUserCloned,V_userCloned
initWithNibName:bundle:
setView:
loadView
moviePlayer
_moviePlayer
T@"MPMoviePlayerController",R,N,V_moviePlayer
presentMoviePlayerViewControllerAnimated:
dismissMoviePlayerViewControllerAnimated
initWithCommand:mediaRemoteType:options:
timeout
command
mediaRemoteCommandType
eventWithCommand:mediaRemoteType:options:
contextID
commandID
interfaceID
sourceID
playbackQueueOffset
_contextID
_commandID
_command
_timestamp
_timeout
TI,R,N
Td,R,N,V_timeout
T@"MPRemoteCommand",R,N,V_command
Td,R,N,V_timestamp
interval
_interval
Td,R,N,V_interval
_commandType
TQ,R,N,V_type
rating
_rating
Tf,R,N,V_rating
playbackRate
_playbackRate
Tf,R,N,V_playbackRate
isNegative
_negative
negative
TB,R,N,GisNegative,V_negative
isRequestingDefermentToPlaybackQueuePosition
_requestingDefermentToPlaybackQueuePosition
requestingDefermentToPlaybackQueuePosition
TB,R,N,GisRequestingDefermentToPlaybackQueuePosition,V_requestingDefermentToPlaybackQueuePosition
positionTime
_positionTime
Td,R,N,V_positionTime
preservesRepeatMode
_preservesRepeatMode
TB,R,N,V_preservesRepeatMode
preservesShuffleMode
_preservesShuffleMode
TB,R,N,V_preservesShuffleMode
stationURL
isRequestingPlaybackInitialization
privateListeningOverride
_requestingPlaybackInitialization
_stationURL
_privateListeningOverride
T@"NSURL",R,N,V_stationURL
requestingPlaybackInitialization
TB,R,N,GisRequestingPlaybackInitialization,V_requestingPlaybackInitialization
T@"NSNumber",R,N,V_privateListeningOverride
initWithCommand:playbackQueue:
playbackQueue
sessionIdentifierOverride
_playbackQueue
_sessionIdentifierOverride
T@"MPRemotePlaybackQueue",R,N,V_playbackQueue
T@"NSString",R,N,V_sessionIdentifierOverride
insertBeforeContextItemID
insertAfterContextItemID
destinationOffset
_insertBeforeContextItemID
_insertAfterContextItemID
_destinationOffset
T@"NSString",R,N,V_insertBeforeContextItemID
T@"NSString",R,N,V_insertAfterContextItemID
Tq,R,N,V_destinationOffset
initWithCommand:playbackQueue:options:
supportedInsertionPositions
insertionPosition
insertAfterContentItemID
_supportedInsertionPositions
_insertionPosition
_insertAfterContentItemID
T@"NSArray",R,C,N,V_supportedInsertionPositions
Tq,R,N,V_insertionPosition
T@"NSString",R,N,V_insertAfterContentItemID
initWithMRLanguageOption:
languageOption
setting
_languageOption
_setting
T@"MPNowPlayingInfoLanguageOption",R,N,V_languageOption
Tq,R,N,V_setting
priority
_revision
_priority
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_revision
Tq,R,N,V_priority
playbackSessionData
_playbackSessionData
T@"NSString",R,N,V_type
T@"NSData",R,N,V_playbackSessionData
propertyListWithData:options:format:error:
playbackSessionDataFilePath
metadata
_playbackSessionDataFilePath
_metadata
T@"NSURL",R,N,V_playbackSessionDataFilePath
T@"NSDictionary",R,N,V_metadata
queueEndAction
preservesQueueEndAction
_preservesQueueEndAction
_queueEndAction
Tq,R,N,V_queueEndAction
TB,R,N,V_preservesQueueEndAction
eventIdentifier
eventType
_eventIdentifier
_eventType
T@"NSString",R,N,V_eventIdentifier
T@"NSString",R,N,V_eventType
sessionIdentifier
_sessionIdentifier
T@"NSString",R,N,V_sessionIdentifier
requestIdentifier
shouldResolveRequestItemsLocally
isFinalResponse
executeRequestWithBatchProgressHandler:
initWithStartHandler:
initWithMediaAPICollectionItemMetadataResponse:authorizationTokenHalfLifeDuration:failedItemIdentifiers:isFinalResponse:
cancelRequest
T@"MPMediaAPICollectionItemMetadataRequestController",R,N
enqueueRequest:withBatchProgressHandler:
cancelRequest:
_callbackQueue
_pendingOperationsIdentiferMap
textColor
hasTitle
initWithTextColor:hasTitle:
_hasTitle
_textColor
T@"UIColor",R,N,V_textColor
TB,R,N,V_hasTitle
allowedEntityIdentifiers
_allowedEntityIdentifiersContainsAllPersistentIDs
_populateIndexMap
_buildIndexPathToContainerUniqueIDMapFromItemQueryResults:
_usesSections
_adjustedGlobalIndexForIndexPath:
objectForPropertySet:entity:context:
setContainerUniqueID:
identifiersForEntity:context:
indexPathForRow:inSection:
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
indexPathToContainerUniqueIDMap
setIndexPathToContainerUniqueIDMap:
itemIdentifierQueryResults
itemQueryResults
_entityTranslationContext
_allowedItemPersistentIDs
_allowedItemPersistentIDToItemQueryResultsIndexMap
_indexPathToContainerUniqueIDMap
_itemIdentifierQueryResults
_itemQueryResults
T@"NSDictionary",&,N,V_indexPathToContainerUniqueIDMap
T{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}},R,N,V_itemIdentifierQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_itemQueryResults
T@"MPModelLibraryRequest",R,N,V_request
loadAdditionalContentURL
previouslyRetrievedNestedResponse
setPreviousRetrievedNestedResponse:
configureWithParentSection:
flattenRadioList
setFlattenRadioList:
previousRetrievedNestedResponse
setDomain:
setAdditionalContent:
subscriptionStatus
setSubscriptionStatus:
previousResponse
setPreviousResponse:
_loadAdditionalContentURL
_previousRetrievedNestedResponse
_domain
_additionalContent
_subscriptionStatus
_previousResponse
T@"NSURL",C,N,V_loadAdditionalContentURL
T@"MPModelStoreBrowseResponse",&,N,V_previousRetrievedNestedResponse
Tq,N,V_domain
Tq,N,V_additionalContent
Tq,N,V_subscriptionStatus
T@"MPModelStoreBrowseResponse",&,N,V_previousResponse
initWithRouteUID:atCenter:
presentWithCompletion:
_center
kindWithAlbumKind:
albumKind
_albumKind
T@"MPModelAlbumKind",R,C,N,V_albumKind
editorialArtworkCatalogBlock
__hasBiography_KEY
__editorialArtworkCatalogBlock_KEY
__songCount_KEY
__albumCount_KEY
__classicalExperienceAvailable_KEY
editorialArtworkCatalog
hasBiography
songCount
albumCount
T@"MPModelGenre",C,D,N
classicalExperienceAvailable
TB,D,N,GisClassicalExperienceAvailable
initWithRoutingController:
_fullStateDumpObject
_registerNotifications
initWithDataSource:name:
_unregisterNotifications
_pickedRoutesInArray:
cachedRoutes
fetchAvailableRoutesSynchronously
_syncUpdateRoutes
_scheduleSendDelegateRoutesChanged
fetchAvailableRoutesWithCompletionQueue:completionHandler:
_externalScreenType:
_setExternalScreenType:
getExternalScreenTypeWithCompletion:
hasPendingRoutes
cachedPickedRoutes
pendingPickedRoute
pendingPickedRoutes
routeIsLeaderOfEndpoint:
routeIsPendingPick:
_updateCachedRoutes
_volumeControlStateForPickedRoute
_setVolumeControlStateForPickedRoute:
bundleIdRepresentsLongFormVideoContent:
_sharedWorkerQueue
setCachedRoutes:
availableRoutes
_getActiveRouteWithTimeout:type:discoveredRoutes:completion:
enqueueSelectionOperation:forRoutes:completion:
selectRoutes:operation:completion:
addPendingRoutes:
removePendingRoutes:
_promptForHijackIfNeeded:handler:
_deviceAvailabilityOverrideState
unpickAirPlayAVRoutesWithCompletion:
routeType
supportsWirelessDisplay
_systemImageNamed:
_imageThatSuppressesAccessibilityHairlineThickening
_iconNameForRoutes:isSymbol:
_iconImageForIdentifier:
_symbolNameForRoutes:
_iconNameForRoute:
_symbolNameForRoute:
_iconNameForRoute:isSymbol:
isClusterRoute
_iconImageNameForClusterRoute:isSymbol:
isSetTopBoxRoute
isTVStickRoute
isAirpodsRoute
isB298Route
isB515Route
isB688Route
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsStudioRoute
isBeatsXRoute
isB444Route
isB494Route
isB419Route
isB364Route
isB372Route
isB507Route
isBeatsLegacyRoute
isMacRoute
productIdentifier
_symbolNameForModelID:
isJ327Route
isCarplayRoute
isHomePodRoute
isStereoPair
isB520Route
isHearingDeviceRoute
isDeviceSpeakerRoute
_currentDeviceRoutingSymbolName
_currentDeviceRoutingIconImageName
isLowFidelityRoute
containsString:
originalRouteSubtype
clusterComposition
modelID
isHomeTheaterRoute
isHomeTheaterB520Route
getActiveRouteWithTimeout:completion:
getProactiveRouteWithTimeout:completion:
setActiveRoute:reason:completion:
endpointWrapper
unwrappedValue
initWithEndpoint:
systemRoute
hasRouteSharingPolicyLongFormVideo:
sharedAudioPresentationOutputContext
setOutputDevices:
homeButtonType
clusterStatus
_typeOfCurrentDevice
symbolForTypeIdentifier:error:
_typeWithDeviceModelCode:
addObserverForName:object:queue:usingBlock:
initWithExternalDevice:
setConnection:
isPicked
presentedBundleID
initWithBundleIdentifier:allowPlaceholder:error:
localizedName
setAttribute:forKey:error:
endpointRoute
isProxyGroupPlayer
isAirPlayRoute
getOutputDeviceIsPlaying:completion:
didFinishLoading
alwaysAllowUpdates
_shouldSendDelegateRoutesChanged
_onQueueSetExternalScreenType:
_clearLegacyCachedRoute
_sendDelegatePickedRoutesChanged
pickedRouteDidChange
cancelInProgressSelectionForRoute:
_sendDelegateFailedToPickRouteWithError:
_pickableRoutesDidChangeNotification:
_routeStatusDidChangeNotification:
_volumeControlAvailabilityDidChangeNotification:
_externalScreenTypeDidChangeNotification:
_activeAudioRouteDidChangeNotification:
pickRoute:withPassword:
pickRoute:withPassword:completion:
_pickRoute:completion:
setPickedRoute:withPassword:completion:
supportsMultipleSelection
addPickedRoute:completion:
selectRoute:operation:completion:
removePickedRoute:completion:
_symbolImageForRoutes:
_symbolImageForRoute:
_currentDeviceRoutingIconImage
_currentDeviceRoutingSymbolImage
getActiveRouteWithCompletion:
getProactiveRouteWithCompletion:
setActiveRoute:completion:
systemRouteWithContextUID:
T@"MPAVRoute",R,N
setAlwaysAllowUpdates:
hasPendingPickedRoutes
setCategory:
setRouteTypes:
setPresentedBundleID:
setRepresentedBundleID:
airtunesRouteIsPicked
updateAvailableRoutes
updatePickedRoutes
fetchAvailableRoutesWithCompletionHandler:
handsetRouteIsPicked
pickHandsetRoute
pickSpeakerRoute
speakerRouteIsPicked
receiverRouteIsPicked
routeOtherThanHandsetAndSpeakerAvailable
routeOtherThanHandsetAvailable
unpickAirPlayScreenRouteWithCompletion:
videoRouteForRoute:
wirelessDisplayRouteIsPicked
wirelessDisplayRoutesAvailable
unpickTVRoutes
_pickedRouteInArray:
_mediaServerDiedNotification:
pickRoute:
addPickedRoute:
removePickedRoute:
category
routeTypes
legacyCachedRoute
setLegacyCachedRoute:
playbackDataSource
setPlaybackDataSource:
representedBundleID
representsLongFormVideoContent
_cachedRoutes
_cachedPickedRoutes
_externalScreenType
_hasExternalScreenType
_scheduledSendDelegateRoutesChanged
_routingControllerSelectionQueue
_deviceAvailabilityNotifyToken
_stateHandle
_alwaysAllowUpdates
_fetchAvailableRoutesSynchronously
_representsLongFormVideoContent
_category
_routeTypes
_legacyCachedRoute
_playbackDataSource
_presentedBundleID
_representedBundleID
T@"MPAVRoute",&,N,V_legacyCachedRoute
T@"<MPAVOutputDevicePlaybackDataSource>",W,N,V_playbackDataSource
T@"NSString",C,N,V_presentedBundleID
T@"NSString",C,N,V_representedBundleID
TB,R,N,V_representsLongFormVideoContent
T@"<MPAVRoutingControllerDelegate>",W,N,V_delegate
T@"MPAVRoutingDataSource",R,N,V_dataSource
T@"NSString",C,N,V_name
TB,N,V_fetchAvailableRoutesSynchronously
T@"NSString",C,N,V_category
Tq,N,V_routeTypes
T@"NSSet",R,N
initWithRoutes:selectionOperation:
setRoutes:
selectionOperation
setSelectionOperation:
completion
setCompletion:
_routes
_selectionOperation
_completion
T@"NSArray",&,N,V_routes
Tq,N,V_selectionOperation
T@?,C,N,V_completion
weakToStrongObjectsMapTable
_dequeue
_enqueue:
removePendingRoutes:withError:
_dequeueSelectionWhenPossible
_processSelection:completion:
supportsGrouping
addRoutesToGroup:completion:
removeRoutesFromGroup:completion:
removeAllPendingRoutes
_selectionsEnqueued
_selectionInProgress
_pendingRoutes
_selectionInProgressTimer
_pendingSelectionTimers
_hasPendingPickedRoutes
T@"MPAVRoutingController",R,W,N,V_routingController
TB,R,N,V_hasPendingPickedRoutes
dateByAddingTimeInterval:
assetURLExpirationDuration
playbackAuthorizationTokenHalfLifeDuration
isEqualToIdentity:inStore:
_initWithPayload:
setExpirationDate:
payload
setPayload:
assetURLExpirationDate
playbackAuthorizationTokenHalfLifeDate
_payload
_assetURLExpirationDate
_playbackAuthorizationTokenHalfLifeDate
T@"NSDate",R,C,N,V_assetURLExpirationDate
T@"NSDate",R,C,N,V_playbackAuthorizationTokenHalfLifeDate
T@,&,N,V_payload
T@"ICUserIdentity",&,N,V_userIdentity
T@"NSDate",C,N,V_expirationDate
initWithAnnotatedPayload:playableAssetIdentifiers:trustID:error:
annotatedPayload
trustID
playableAssetIdentifiers
_annotatedPayload
_error
_trustID
_playableAssetIdentifiers
T@,R,N,V_annotatedPayload
T@"NSError",R,N,V_error
T@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>",R,C,N,V_trustID
T@"NSArray",R,N,V_playableAssetIdentifiers
initWithItemIdentifiers:parentIdentifiers:childKey:relativeOrder:
setIdentifiers:
parentIdentifiers
setParentIdentifiers:
childKey
setChildKey:
relativeOrder
setRelativeOrder:
_identifiers
_parentIdentifiers
_childKey
_relativeOrder
T@"MPIdentifierSet",C,N,V_identifiers
T@"MPIdentifierSet",C,N,V_parentIdentifiers
T@"NSString",N,V_childKey
Tq,N,V_relativeOrder
_relationshipKeyForObject:
performWithDatabaseOperations:augmentingPayload:trustID:
translatorForType:
_unsupportedMediaKitTypes
identifiersForPayload:context:
_childKeyForParentType:type:
relateIdentifiers:toParentIdentifiers:parentVersionHash:childKey:order:
importPlaybackAuthorizationToken:identifiers:source:type:expirationDate:trustID:
importObject:type:identifiers:source:expiration:
importAssetURL:forIdentifiers:flavor:expirationDate:
_sinfTypeFromPayload:
_sinfDataFromSinfType:payload:
preferredStoreStringIdentifierForPersonID:
importAssetSinf:type:forIdentifier:hashedPersonID:flavor:sinfPayload:
initWithBase64EncodedString:options:
_unsupportedParentChildRelationships
translatorForKind:
_unsupportedStorePlatformKinds
allKeys
performWithDatabaseOperations:error:
initWithPayload:requestPayload:hashedPersonID:
_requestPayload
_hashedPersonID
substringToIndex:
initWithName:object:handler:
setModelResponse:
initWithMiddleware:modelRequest:
modelRequest
setModelRequest:
_invalidationObservers
_invalidationHandler
_modelRequest
T@"_MPModelShimRequestMiddleware",&,N,V_middleware
T@"MPModelRequest",&,N,V_modelRequest
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
operationsForRequest:
T@"NSArray",&,N
modelResponse
_modelResponse
T@"MPModelResponse",&,N,V_modelResponse
T@"NSArray",&,N,V_invalidationObservers
stringByReplacingCharactersInRange:withString:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
T@"NSDictionary",C,N,V_additionalUserInfo
T@"NSString",C,N,V_clientName
Ti,N,V_clientType
Tq,N,V_clientVersion
T@,&,N,V_hierarchyToken
T@"NSString",C,N,V_serviceIdentifier
Tq,N,V_sessionID
pathWithComponents:
set_MediaLibrary_coreLibrary:
__MediaLibrary_coreLibrary
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},N,V__MediaLibrary_coreLibrary
_MLCoreStorageLockPointer
_MLCoreStorage
databasePath
lastPathComponent
stringByDeletingLastPathComponent
fileSystemRepresentation
_setMLCoreStorage:
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},R,N
sharedResourceManager
resources
sectionsInfo
sortingDetails
canonicalLanguageIdentifier
_hasValidUniformContentItemType
_contentItemTypeOccurrences
_totalNumberOfOccurrences
_uniformContentItemType
initWithOptions:
_update
currentUser
currentHome
currentAccessory
userMonitorWithHomeIdentifiers:
_userMonitorWithHomeIdentifiers:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:
accessories
msv_firstWhere:
second
_currentHomeDidChange
_currentUserDidChange
users
setWithArray:
isEqualToSet:
minusSet:
userID
initWithUser:home:
_usersDidChange
_updateSoundCheck
currentHomeDidChange
currentUserDidChange
homeUsersDidChange
soundCheckSettingDidUpdate:
_updateAsyncOnQueue
sharedObserver
homeManager:didUpdateAuthorizationStatus:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didReceiveAddAccessoryRequest:
homeManager:didUpdateStateForIncomingInvitations:
homeManagerDidUpdateApplicationData:
homeManagerDidUpdateCurrentHome:
homeManagerDidUpdateDataSyncInProgress:
homeManagerDidUpdateDataSyncState:
homeManager:didUpdateStatus:
homeManager:didUpdateResidentEnabledForThisDevice:
homeManager:didUpdateAccessAllowedWhenLocked:
homeManager:didUpdateThisDeviceIsResidentCapable:
homeManager:residentProvisioningStatusChanged:
homeManagerWillStartBatchNotifications:
homeManagerDidEndBatchNotifications:
homeManager:didUpdateMultiUserStatus:reason:
homeManagerDidUpdateAssistantIdentifiers:
homeManagerDidRemoveCurrentAccessory:
homeManager:didUpdateHH2State:
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
homeDidUpdateSupportedFeatures:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
homeDidUpdateProtectionMode:
homeDidUpdateNetworkRouterSupport:
homeDidUpdateHomeLocationStatus:
homeDidEnableMultiUser:
homeDidSetHasAnyUserAcknowledgedCameraRecordingOnboarding:
home:didAddAccessoryNetworkProtectionGroup:
home:didRemoveAccessoryNetworkProtectionGroup:
home:didUpdateAccessoryNetworkProtectionGroup:
homeDidSetEnableDoorbellChime:
home:didUpdatePersonManagerSettings:
home:didFailAccessorySetupWithError:
homeDidSetHasOnboardedForAccessCode:
homeDidAddWalletKey:
homeDidRemoveWalletKey:
home:didUpdateHasOnboardedForWalletKey:
homeDidUpdateAssistantIdentifiers:
homeDidUpdateToROAR:
home:didUpdateAreBulletinNotificationsSupported:
setupDidComplete
hasCurrentUser
hasCurrentHome
hasCurrentAccessory
isSoundCheckEnabled
setSoundCheckEnabled:
monitorForCurrentUser
userMonitorWithHomeIdentifier:
homeAccesssoryWithRouteID:
_soundCheckDidChange
homeDidUpdateSoundCheck:
_homeManager
_currentHome
_currentUser
_homeUsers
_userMonitorMap
_soundCheckCachedValue
_setupDidComplete
T@"<MPHomeManagerObserverDelegate>",W,N,V_delegate
T@"MPHomeUserMonitor",R,N
soundCheckEnabled
TB,N,GisSoundCheckEnabled
T@"HMUser",R,N
T@"HMHome",R,N
T@"HMAccessory",R,N
globalPlaylistID
descriptionComponents
caseInsensitiveCompare:
sortedArrayUsingSelector:
setActionAfterQueueLoad:
setRepeatType:
setQueueEndAction:
queueDescriptor
setQueueDescriptor:
setSiriAssetInfo:
setSessionIdentifier:
supportsAccountRectification
setSupportsAccountRectification:
queueFeederClass
supportsAutoPlay
containsRestorableContent
isSupported
clearStartItem
isCompatibleWithReplacementContext:incompatibleReason:
_playerCurrentItem
_supportsAccountRectification
_actionAfterQueueLoad
_queueDescriptor
_siriAssetInfo
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatType
Tq,N,V_queueEndAction
supported
TB,R,N,GisSupported
T@"MPMusicPlayerQueueDescriptor",C,N,V_queueDescriptor
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_sessionIdentifier
TB,N,V_supportsAccountRectification
globalSerialQueue
controllers
_initWithUserIdentity:
_deviceMediaLibraryDidChangeNotification:
_tasteControllerWithUserIdentity:isSingleton:createIfRequired:
_libraryPathDidChangeForTasteController:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
setTasteType:forStoreAdamID:withContentType:completionHandler:
_libraryEntityForModel:
setTasteType:forMediaEntity:withCompletionHandler:
_removePendingUpdateRecordForPlaylistGlobalID:token:
_removePendingUpdateRecordForStoreAdamID:token:
_postNotificationName:controller:userInfo:
_addPendingUpdateRecordForPlaylistGlobalID:contentTasteType:
setValue:forProperty:withCompletionBlock:
_addPendingUpdateRecordForStoreAdamID:contentTasteType:
_libraryPlaylistWithGlobalID:
addNonLibraryOwnedPlaylistWithGlobalID:completion:
_libraryEntityWithStoreID:contentType:
initWithStoreItemID:additionalTrackMetadata:
initWithImportElements:referralObject:usingCloudLibraryDestination:
setLikedState:forAlbumWithStoreID:completion:
setLikedState:forEntityWithStoreID:withMediaType:timeStamp:completion:
performStoreItemLibraryImport:withCompletion:
tasteTypeForMediaEntity:
_pendingUpdateRecordForPlaylistGlobalID:
tasteType
_pendingUpdateRecordForStoreAdamID:
_postNotificationName:controller:
collectionWithPersistentID:groupingType:
predicateWithProperty:equalToValue:
_ML3QueryWithEntityClass:predicate:options:
anyEntityPersistentID
enumeratePersistentIDsAndProperties:ordered:usingBlock:
collectionWithPersistentID:groupingType:verifyExistence:
libraryDataProvider
queryWithLibrary:predicate:orderingTerms:usingSections:options:
initWithPlaylistGlobalID:tasteType:
_addPendingUpdateRecord:withKey:inDictionary:
initWithStoreAdamID:tasteType:
_pendingUpdateRecordForKey:inDictionary:
T@"NSObject<OS_dispatch_queue>",R,N
T@"MPContentTasteController",R,N
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
tasteTypeForPlaylistGlobalID:
tasteTypeForStoreAdamID:
_pendingUpdateRecordByPlaylistGlobalID
_pendingUpdateRecordByStoreAdamID
addStoreItemMetadata:forUserIdentity:
cacheableItemIdentifier
initWithCacheSize:
addMetadata:forItemIdentifier:
_removeExpiredItemsPeriodically
getCacheKeyWithRequest:completionHandler:
getStoreItemMetadataForRequest:responseHandler:
getStoreItemMetadataForRequest:includeBatchResponseError:responseHandler:
progressWithTotalUnitCount:
setCompletedUnitCount:
setFinalResponse:
setCancellable:
metadataForItemIdentifier:ignoreExpiration:
setStoreItemMetadata:forItemIdentifier:
hasMetadataForRequestReason:
setLastBatchItemIdentifiers:
setCacheMissItemIdentifiers:
lastBatchItemIdentifiers
metadataDictionary
initWithRequest:response:
requestItemIdentifiers
setRequestItemIdentifiers:
performanceMetrics
setPerformanceMetrics:
setBatchResultsHandler:
addChild:withPendingUnitCount:
removeExpiredMetadata
optimalBatchSize
T@"MPStoreItemMetadataRequestController",R,N
beginTransaction
endTransaction
setCacheSize:
requestStoreItemMetadataForReason:withItemIdentifiers:responseHandler:
cacheSize
_lastExpiredMetadataPurgeMachTime
_itemCaches
_transactionLock
_transactionCount
_cacheSize
Tq,N,V_cacheSize
buttonWithType:
easyTouchDefaultHitRectInsets
_handleTouchDown
_handleTouchCancel
_handleTouchUp
redColor
setBorderColor:
setBorderWidth:
colorWithAlphaComponent:
touchesCancelled:withEvent:
touchesEnded:withEvent:
_delayedTriggerHold
isHolding
holdDelayInterval
T{UIEdgeInsets=dddd},R,N
alignmentRectInsets
setAlignmentRectInsets:
setHitTestDebugEnabled:
setHoldDelayInterval:
hitTestDebugEnabled
_holding
_hitTestDebugView
_hitTestDebugEnabled
_holdDelayInterval
_alignmentRectInsets
T{UIEdgeInsets=dddd},N,V_alignmentRectInsets
Td,N,V_holdDelayInterval
holding
TB,R,N,GisHolding
TB,N,V_hitTestDebugEnabled
defaultMediaLibrary
initWithPersistentID:mediaLibrary:
mediaObjectType
libraryIdentifiers
libraryIdentifiersCount
libraryId
libraryName
collectionExistsContainedWithinPersistentIDs:count:groupingType:existentPID:
hasSagaId
sagaId
collectionExistsWithSagaID:groupingType:existentPID:
hasCloudUniversalLibraryId
cloudUniversalLibraryId
collectionExistsWithCloudUniversalLibraryID:groupingType:existentPID:
hasStoreId
storeId
collectionExistsWithStoreID:groupingType:existentPID:
collectionExistsWithName:groupingType:existentPID:
initWithPersistentID:
_createFilterableDictionary
canFilterByProperty:
_isValidPlaylistProperty:
componentsSeparatedByString:
seedTracksQuery
addFilterPredicate:
isHomeSharingLibrary
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:
representativeItem
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
notifyDisplayValuesPropertyDidChange
isCloudEnabled
uploadArtworkForPlaylist:completionHandler:
addItemWithProductID:completionHandler:
addMediaItems:completionHandler:
existsInLibrary
seedItems
authorDisplayName
removeFirstItem
mediaTypes
multiverseIdentifier
representativeArtists
isCloudMix
cloudGlobalID
setUserSelectedArtworkImage:
_representativeArtists
_seedTracksQuery
mainBundle
localizedInfoDictionary
infoDictionary
setAuthorDisplayName:
_defaultAuthorDisplayName
_authorDisplayName
T@"NSString",C,N,V_authorDisplayName
string
__descriptionText_KEY
__musicShow_KEY
__episodeNumber_KEY
__explicitRating_KEY
__season_KEY
__show_KEY
__releaseDate_KEY
__episodeType_KEY
__episodeTypeDisplayName_KEY
musicShow
TB,D,N,GisMusicShow
episodeNumber
T@"MPModelTVSeason",&,D,N
T@"MPModelTVShow",&,D,N
episodeType
episodeTypeDisplayName
isAppleTV
isAudioAccessory
isMultiUserDevice
multiUserDevice
TB,R,N,GisMultiUserDevice
shouldLibraryAdd
initWithFilterPredicates:
setEntityLimit:
setIgnoreRestrictionsPredicates:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
setGlobalPlaylistID:
setShouldLibraryAdd:
_shouldLibraryAdd
_globalPlaylistID
T@"NSString",C,N,V_globalPlaylistID
TB,N,V_shouldLibraryAdd
encodeCGSize:forKey:
decodeCGSizeForKey:
initWithPreferredArtworkSize:
preferredArtworkSize
setPreferredArtworkSize:
_preferredArtworkSize
T{CGSize=dd},N,V_preferredArtworkSize
setSessionIdentifier:type:data:
setBundleIdentifier:
setSupportedOptions:
setDisplayProperties:
queueControlOptions
setQueueControlOptions:
copyWithOptions:
bundleIdentifier
supportedOptions
playbackSessionIdentifier
playbackSessionType
displayProperties
setCopyOptions:
setStorage:
copyOptions
storage
decodePropertyListForKey:
setFallbackStoreIdentifier:
initWithType:sessionIdentifier:data:dataType:bundleIdentifier:supportedOptions:displayProperties:
setBOOLValue:forOption:
boolValueForOption:
fallbackStoreIdentifier
_final
_displayProperties
_bundleIdentifier
_supportedOptions
_copyOptions
_queueControlOptions
_storage
_playbackSessionIdentifier
_playbackSessionType
TQ,N,V_copyOptions
TQ,N,V_queueControlOptions
T@"NSMutableDictionary",&,N,V_storage
Tq,R,N,V_type
T@"NSString",R,C,N,V_playbackSessionIdentifier
T@"NSString",R,C,N,V_playbackSessionType
T@"NSData",R,C,N,V_playbackSessionData
T@"MPPlaybackArchiveDisplayProperties",R,N,V_displayProperties
T@"NSString",R,C,N,V_bundleIdentifier
TQ,R,N,V_supportedOptions
setFilterPredicates:
stringByAppendingFormat:
encodeObject:
encodeValueOfObjCType:at:
_isFilteringDisabled
initWithCriteria:library:
setStaticEntities:entityType:
itemExistsWithPersistentID:
collectionExistsWithPersistentID:groupingType:
filterPredicatesCount
filterPredicates
entityOrder
includeNonLibraryEntities
filteringDisabled
staticEntityIdentifiersCount
staticEntityIdentifiers
entityWithMultiverseIdentifier:
hasLibraryName
mediaLibraryWithUniqueIdentifier:
staticEntityType
protobufferEncodableObjectFromLibrary:
addFilterPredicates:
setFilteringDisabled:
setIncludeNonLibraryEntities:
setEntityOrder:
setStaticEntityType:
addStaticEntityIdentifiers:
predicateWithValue:forProperty:comparisonType:
setSortItems:
audiobooksQuery
_itemsForQueryCriteria:
_collectionsForQueryCriteria:
initFilteringDisabled
playlistsQuery
_setOrderingProperties:
_setOrderingDirectionMappings:
_hasItemsForQueryCriteria:
_hasCollectionsForQueryCriteria:
_countOfItemsForQueryCriteria:
_countOfCollectionsForQueryCriteria:
_itemPersistentIdentifiersForQueryCriteria:
_collectionPersistentIdentifiersForQueryCriteria:
predicateForProperty:
newPlaylistWithPersistentID:
_getRepresentativeCollectionGrouping:propertyPredicate:
initWithIdentifier:itemsQuery:grouping:
excludesEntitiesWithBlankNames
specifiesPlaylistItems
groupingThreshold
itemSectionInfo
collectionSectionInfo
initWithInteger:
loadValueForAggregateFunction:onCollectionsForProperty:queryCriteria:completionBlock:
loadValueForAggregateFunction:onItemsForProperty:queryCriteria:completionBlock:
_valueForAggregateFunction:onProperty:entityType:
isFilteringDisabled
_enumerateItemsInOrder:usingBlock:
_enumerateItemPersistentIDsInOrder:usingBlock:
concreteMediaItemWithPersistentID:library:
enumerateItemIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
_enumerateCollectionsInOrder:usingBlock:
_enumerateCollectionPersistentIDsInOrder:usingBlock:
enumerateCollectionIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
persistentIDPropertyForGroupingType:
initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
predicateMatchingPredicates:
albumsQuery
artistsQuery
songsQuery
podcastsQuery
ITunesUQuery
ITunesUAudioQuery
videoITunesUQuery
audibleAudiobooksQuery
compilationsQuery
composersQuery
genresQuery
albumArtistsQuery
videosQuery
musicVideosQuery
tvShowsQuery
homeVideosQuery
moviesQuery
movieRentalsQuery
audioPodcastsQuery
videoPodcastsQuery
geniusMixesQuery
playlistsRecentlyAddedQuery
initWithProtobufferDecodableObject:
protobufferEncodableObject
initWithEntities:entityType:
copyByRemovingStaticEntities
copyBySanitizingStaticEntities
removeFilterPredicate:
entityLimit
shouldIncludeNonLibraryEntities
includeEntitiesWithBlankNames
setIncludeEntitiesWithBlankNames:
ignoreSystemFilterPredicates
setIgnoreSystemFilterPredicates:
ignoreRestrictionsPredicates
itemPropertiesToFetch
setItemPropertiesToFetch:
collectionPropertiesToFetch
setCollectionPropertiesToFetch:
_hasItems
_hasCollections
itemPersistentIdentifiers
collectionPersistentIdentifiers
_orderingProperties
_orderingDirectionMappings
sortItems
setUseSections:
useSections
willGroupEntities
itemSections
collectionSections
valueForAggregateFunction:onItemsForProperty:
valueForAggregateFunction:onCollectionsForProperty:
_enumerateItemsUsingBlock:
_enumerateUnorderedItemsUsingBlock:
_enumerateUnorderedItemPersistentIDsUsingBlock:
_enumerateCollectionsUsingBlock:
_enumerateUnorderedCollectionsUsingBlock:
_enumerateUnorderedCollectionPersistentIDsUsingBlock:
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setCriteria:
_criteria
_staticEntities
_staticEntityType
T@"MPMediaLibrary",&,N
T@"NSSet",C,N
orderingProperties
T@"NSArray",C,N,G_orderingProperties,S_setOrderingProperties:
orderingDirectionMappings
T@"NSDictionary",C,N,G_orderingDirectionMappings,S_setOrderingDirectionMappings:
TQ,N
T@"MPMediaQuerySectionInfo",R,N
T@"MPMediaItemCollection",R,N
playlistItemsQuery
TB,R,N,GisPlaylistItemsQuery
T@"NSSet",&,N
evaluateEntity:
decodeObject
decodeValueOfObjCType:at:size:
hasSuffix:
descriptionOfValue:forProperty:
propertyPredicate
property
comparisonType
setProperty:
setComparisonType:
multiverseIdentifierForCollectionWithPersistentID:groupingType:
multiverseIdentifierForTrackWithPersistentID:
setValue:
setPropertyPredicate:
_property
_value
_comparisonType
T@,C,N
initWithConditionPredicate:thenPredicate:elsePredicate:
conditionalPredicate
hasConditionalPredicate
hasThenPredicate
thenPredicate
hasElsePredicate
elsePredicate
setConditionalPredicate:
setThenPredicate:
setElsePredicate:
predicateWithConditionPredicate:thenPredicate:elsePredicate:
conditionPredicate
_conditionPredicate
_thenPredicate
_elsePredicate
T@"MPMediaPredicate",R,C,N,V_conditionPredicate
T@"MPMediaPredicate",R,C,N,V_thenPredicate
T@"MPMediaPredicate",R,C,N,V_elsePredicate
initWithPredicates:
setByAddingObject:
compoundPredicate
setCompoundPredicate:
T@"NSArray",R,C,N,V_predicates
predicateWithProperty:values:
values
_values
T@"NSString",R,C,N,V_property
T@"NSSet",R,C,N,V_values
persistentIDsPredicate
shouldContain
persistentIDsCount
persistentIDs
setShouldContain:
addPersistentIDs:
setPersistentIDsPredicate:
predicateWithPersistentIDs:count:shouldContain:
_persistentIDs
_shouldContain
_count
TQ,R,N,V_count
Tr^q,R,N,V_persistentIDs
TB,R,N,V_shouldContain
setSearchString:
setProperties:
searchStringPredicate
searchString
initWithArray:
setSearchStringPredicate:
predicateWithSearchString:forProperties:
_searchString
_properties
T@"NSString",C,N,V_searchString
T@"NSSet",C,N,V_properties
MPIsEmpty
removeItemAtIndex:
moveItemFromIndex:toIndex:
modelObjects
setStoreIDs:
valuesForProperties:
setSubscriptionAdamID:
setCloudAlbumID:
setCloudID:
T@"MPModelLibraryImportChangeRequest",C,N,V_request
universalCloudLibraryID
setUniversalCloudLibraryID:
setCloudVersionHash:
setLastModifiedDateComponents:
setOwner:
setCuratorPlaylist:
setPublicPlaylist:
setVisiblePlaylist:
setSubscribed:
setUserEditableComponents:
setShareURL:
setShareShortURL:
setTiledArtworkRequest:
setHandle:
_requestedPlaylistProperties
initWithClientIdentifier:queue:
applicationQueuePlayer
alloc
_snapshot
getRepeatModeWithReply:
onServer:
getShuffleModeWithReply:
setShuffleMode:
_nowPlaying
_mediaItemFromNowPlaying:
_setNowPlayingItem:itemIdentifier:
setNowPlayingItem:itemIdentifier:completion:
index
setQueueWithQuery:firstItem:
initWithItemCollection:
setQueueWithDescriptor:
initWithStoreIDs:
prependDescriptor:completion:
appendDescriptor:completion:
setDescriptor:completion:
onServerAsync:errorHandler:timeout:retryEnabled:
skipWithBehavior:
initWithQuery:
initWithRadioStation:
playParametersQueue
initWithPlayParameters:
getNowPlayingAtIndex:reply:
nowPlayingAtIndex:
reshuffle
pauseWithFadeDuration:
setElapsedTime:completion:
setPlaybackRate:completion:
beginSeekWithDirection:
systemMusicPlayer
_onQueue_applyServerStateUpdateRecord:
hasQueueDescriptor
hasNowPlaying
nowPlaying
hasTimeSnapshot
timeSnapshot
hasRepeatMode
hasShuffleMode
hasContentItemIDs
contentItemIDs
_postPrivateQueueDidChangeNotificationWithContentItemIDs:
queueDidChange
itemDidEnd
queueDidEnd
artworkIdentifier
setHasQueueDescriptor:
setQueueDidChange:
applyServerStateUpdateRecord:
setHasNowPlaying:
setNowPlaying:
setHasTimeSnapshot:
setTimeSnapshot:
setHasRepeatMode:
setItemDidEnd:
setQueueDidEnd:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
onServerAsync:errorHandler:
requestAuthorization:
getDescriptorWithReply:
getNowPlayingWithReply:
getTimeSnapshotWithReply:
setFallbackArtworkCatalogBlock:
initWithItemIdentifier:item:
applicationMusicPlayer
iPodMusicPlayer
setRunLoopForNotifications:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
T@"MPMusicPlayerController",R,N
T@"MPMusicPlayerApplicationController",R,N
T@"MPMusicPlayerController<MPSystemMusicPlayerController>",R,N
initWithClientIdentifier:
shuffleMode
nowPlayingItem
setNowPlayingItem:
_setNowPlayingItemWithIdentifier:
indexOfNowPlayingItem
setQueueWithQuery:
setQueueWithItemCollection:
setQueueWithStoreIDs:
prependQueueDescriptor:
appendQueueDescriptor:
prepareToPlayWithCompletionHandler:
skipToNextItem
skipToBeginning
skipToPreviousItem
beginGeneratingPlaybackNotifications
endGeneratingPlaybackNotifications
setQueueWithRadioStation:
queueAsQuery
queueAsRadioStation
nowPlayingItemAtIndex:
shuffle
pauseWithFadeoutDuration:
skipToBeginningOrPreviousItem
prepareQueueForPlayback
numberOfItems
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
setVolumePrivate:
playbackSpeed
setPlaybackSpeed:
isNowPlayingItemFromGeniusMix
currentChapterIndex
setCurrentChapterIndex:
isGeniusAvailable
isGeniusAvailableForSeedItems:
setQueueWithSeedItems:
setQueueWithGeniusMixPlaylist:
adjustLoadedQueueRangeToReverseCount:forwardCount:
_clearConnection
_establishConnectionIfNeeded
connection
serverNowPlaying
serverTimeSnapshot
serverQueueDescriptor
lastServerTimeSnapshot
lastServerNowPlaying
lastContentItemIDs
targetQueueDescriptor
notificationsCounter
_isPreparedToPlay
_serverNowPlaying
_serverTimeSnapshot
_serverQueueDescriptor
_lastServerTimeSnapshot
_lastServerNowPlaying
_lastContentItemIDs
_targetQueueDescriptor
_notificationsCounter
T@"NSString",R,C,N,V_clientIdentifier
T@"NSXPCConnection",R,N,V_connection
T@"MPMusicPlayerControllerNowPlaying",R,N,V_serverNowPlaying
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_serverTimeSnapshot
T@"MPMusicPlayerQueueDescriptor",R,N,V_serverQueueDescriptor
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_lastServerTimeSnapshot
T@"MPMusicPlayerControllerNowPlaying",R,N,V_lastServerNowPlaying
T@"NSArray",R,N,V_lastContentItemIDs
T@"MPMusicPlayerQueueDescriptor",R,N,V_targetQueueDescriptor
Tq,R,N,V_notificationsCounter
T@"MPVolumeController",R,N,V_volumeController
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"MPMediaItem",C,N
TB,R,N,V_isPreparedToPlay
invokeWithTarget:
methodSignatureForSelector:
forwardInvocation:
_item
T@"MPMediaItem",R,N,V_item
setTvEpisode:
genericModelObjectWithRequestedProperties:
setImageArtworkIdentifier:
collectionWithImageRepresentation:videoRepresentation:
staticArtworkCatalogWithRepresentationCollection:
collectionWithImageRepresentation:videoRepresentation:bestRepresentationKinds:
isLoadingRepresentation
isArtworkVisuallyIdenticalToCatalog:
destination
fittingSize
setLoadingRepresentation:
bestAvailableRepresentationCollection
resetForRepresentationKinds:
_updateRepresentations
overlayScaledFittingSizeForCatalog:scaledFittingSize:
_requestBestRepresentationOfKind:completionHandler:
bestImageFromDisk
artworkCatalog:willConfigureView:
setDestination:
artworkCatalog:didClearFromView:
imageRepresentation
setDestination:forRepresentationKinds:configurationBlock:
video
setRepresentationKinds:
bestRepresentationKinds
setBestRepresentationKinds:
setImageRepresentation:
setVideoRepresentation:
_callConfigurationWithRevisionID:
artworkCatalog:didConfigureView:withRepresentation:
overlayDelegate
overlayVisualIdenticalityForCatalog:
_artworkLoadQueue
initWithImage:algorithm:
analyzeWithCompletionHandler:
radiosityImageWithImage:displayScale:completionHandler:
_setCacheIdentifier:forRequestingContext:
_setCacheLimit:forCacheIdentifier:requestingContext:
_setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
_setCacheLimit:forCacheIdentifier:requestingContext:representationKind:
_setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:representationKind:
cacheIdentifier
requestingContext
_artworkCacheForIdentifier:requestingContext:representationKind:
_registeredIdentifiableDataSourceAndTokenClasses
artworkDataSourceShortDescription
artworkDataSourceWithIdentifier:
artworkTokenWithParameters:
_existingRepresentationOfKind:
_updateWithRepresentation:isBestRepresentation:modelRevisionID:
_loadRepresentationOfKind:completionHandler:
_updateRepresentationOfKind:
_loadBestRepresentationIfNeededOfKind:
kind
setCacheIdentifier:
setRequestingContext:
setEvictsObjectsWhenApplicationEntersBackground:
isBestRepresentationForKind:
staticArtworkCatalogWithImage:
placeholderCatalogWithSymbolName:
setCacheLimit:forCacheIdentifier:cacheReference:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:cacheReference:
setCacheLimit:forCacheIdentifier:cacheReference:representationKind:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:cacheReference:representationKind:
artworkCatalogWithDataSourceShortDescription:dataSourceIdentifier:tokenParameters:
setCacheLimit:forCacheIdentifier:requestingContext:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
setCacheLimit:forCacheIdentifier:requestingContext:representationKind:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:representationKind:
requestImageWithCompletionHandler:
hasImageOnDisk
setDestination:configurationBlock:
requestVideoWithCompletionHandler:
setAllowsVideoConstrainedNetworkAccess:
setPreferredVideoKind:
existingColorAnalysisWithAlgorithm:
requestColorAnalysisWithAlgorithm:completionHandler:
requestRadiosityImageWithCompletionHandler:
imageAttachments
setCacheIdentifier:forCacheReference:
videoCache
setDestination:progressiveConfigurationBlock:
setCacheIdentifier:forRequestingContext:
allowsVideoConstrainedNetworkAccess
preferredVideoFormat
setPreferredVideoFormat:
configurationBlock
setConfigurationBlock:
representationKinds
setBestAvailableRepresentationCollection:
videoCacheStoragePolicy
setVideoCacheStoragePolicy:
setOverlayDelegate:
overlayToken
setOverlayToken:
overlayStorage
setOverlayStorage:
_fittingSize
_modelRevisionID
_allowsVideoConstrainedNetworkAccess
_loadingRepresentation
_destinationScale
_preferredVideoFormat
_destination
_configurationBlock
_representationKinds
_bestAvailableRepresentationCollection
_cacheIdentifier
_requestingContext
_token
_renderHint
_videoCacheStoragePolicy
_overlayDelegate
_overlayToken
_overlayStorage
T@,W,N,V_destination
T@?,C,N,V_configurationBlock
TQ,N,V_representationKinds
T@"MPArtworkRepresentationCollection",&,N,V_bestAvailableRepresentationCollection
loadingRepresentation
TB,GisLoadingRepresentation,V_loadingRepresentation
T@"NSString",C,N,V_cacheIdentifier
T@,W,N,V_requestingContext
T@,R,N,V_token
T@"<MPArtworkDataSource>",R,W,N,V_dataSource
T@"NSCache",R,N
T@"<MPArtworkDataSourceVisualIdenticality>",R,N
TQ,N,V_renderHint
TQ,N,V_videoCacheStoragePolicy
T@"<_MPArtworkCatalogOverlayDelegate>",W,N,V_overlayDelegate
T@,&,N,V_overlayToken
T@,&,N,V_overlayStorage
Td,N,V_destinationScale
T{CGSize=dd},N,V_fittingSize
TB,N,V_allowsVideoConstrainedNetworkAccess
Tq,N,V_preferredVideoFormat
T@"MPArtworkImageAttachments",R,N
representationForVisualIdentity:withSize:video:
setKind:
setRepresentationSize:
setVideo:
setImagePrepared:
visualIdenticalityStringRepresentation
representationWithSize:image:
representationWithSize:video:
debugQuickLookObject
isImagePrepared
_imagePrepared
_kind
_image
_video
_visualIdenticalityStringRepresentation
_representationToken
_representationSize
Tq,N,V_kind
T@"UIImage",&,N,V_image
imagePrepared
TB,N,GisImagePrepared,V_imagePrepared
T@"AVAsset",&,N,V_video
T{CGSize=dd},N,V_representationSize
T@,&,N,V_representationToken
T@"NSString",R,C,N,V_visualIdenticalityStringRepresentation
videoRepresentation
_imageRepresentation
_videoRepresentation
_bestRepresentationKinds
T@"MPArtworkRepresentation",&,N,V_imageRepresentation
T@"MPArtworkRepresentation",&,N,V_videoRepresentation
TQ,N,V_bestRepresentationKinds
CGSizeValue
sortedArrayUsingComparator:
setVideoArtworkIdentifier:
imageArtworkIdentifier
videoArtworkIdentifier
_imageArtworkIdentifier
_videoArtworkIdentifier
T@"NSString",C,N,V_imageArtworkIdentifier
T@"NSString",C,N,V_videoArtworkIdentifier
initWithSize:
format
tertiarySystemBackgroundColor
setFill
userInterfaceStyle
colorWithDynamicProvider:
imageWithConfiguration:
imageByApplyingSymbolConfiguration:
imageWithTintColor:
drawAtPoint:
imageWithActions:
_fallbackCache
_lastArtworkCatalog
clearArtworkCatalogs
T@"MPArtworkCatalog",R,N
artworkCatalogBackingFileURL
T@"NSURL",R,N
_conditionalPredicate
T@"MPPMediaPredicate",&,N,V_conditionalPredicate
T@"MPPMediaPredicate",&,N,V_thenPredicate
T@"MPPMediaPredicate",&,N,V_elsePredicate
T@"ICUserIdentity",C,N
isAsynchronous
isConcurrent
isExecuting
isFinished
start
_isExecuting
_isFinished
T@"NSError",R,C,N,V_error
itemWithPersistentID:
deviceMediaLibrary
initWithModelObject:
itemFromModelObject:
decodeItemWithCoder:
_isValidItemProperty:
_directStoreURL
_libraryLinkURL
populateLocationPropertiesWithPath:assetProtectionType:
populateLocationPropertiesOfItem:withPath:assetProtectionType:
invalidateCachedProperties
populateLocationPropertiesOfItem:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItem:
unsignedIntegerValue
stopTime
playbackDuration
chapterType
chaptersOfType:
playbackTime
enumerateValuesForProperties:usingBlock:
_libraryLinkKind
_libraryLinkArtist
_libraryLinkPlaylistName
URLQueryAllowedCharacterSet
itemFromSong:
ULIDPropertyForGroupingType:
titlePropertyForGroupingType:
fallbackTitlePropertyForGroupingType:
dynamicProperties
didSkipWithPlayedToTime:
incrementPlayCount
markNominalAmountHasBeenPlayed
noteWasPlayedToTime:skipped:
incrementSkipCount
incrementPlayCountForPlayingToEnd
incrementPlayCountForStopTime:
updateDateAccessedToCurrentDateWithWriteCompletionBlock:
nominalHasBeenPlayedThreshold
didReceiveMemoryWarning
_bestStoreURL
populateLocationPropertiesWithPath:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
clearLocationProperties
effectiveAlbumArtist
albumTitle
artwork
dateAdded
comments
isRental
isITunesU
isCloudItem
hasProtectedAsset
effectiveStopTime
podcastTitle
podcastPersistentID
setPlayCount:
playCountSinceSync
setPlayCountSinceSync:
lastPlayedDate
setLastPlayedDate:
dateAccessed
setDateAccessed:
setSkipCount:
skipCountSinceSync
setSkipCountSinceSync:
lastSkippedDate
setLastSkippedDate:
hasBeenPlayed
setHasBeenPlayed:
playbackStoreID
isExplicitItem
userGrouping
chapterOfType:atIndex:
countOfChaptersOfType:
gaplessHeuristicInfo:durationInSamples:lastPacketsResync:encodingDelay:encodingDrain:
isUsableAsRepresentativeItem
dateDownloaded
TQ,R,D,N
T@"MPMediaItemArtwork",R,N
explicitItem
TB,R,N,GisExplicitItem
cloudItem
TB,R,N,GisCloudItem
protectedAsset
TB,R,N,GhasProtectedAsset
preorder
TB,R,N,GisPreorder
defaultPropertyValues
decodeInt64ForKey:
setValue:forKey:
_persistentID
initWithBoundsSize:requestHandler:
imageWithSize:
imageCropRect
jpegDataWithSize:
pngDataWithSize:
_bounds
_requestHandler
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
setRedownloadableItemCount:
setDownloadEnabledItemCount:
setNonPurgeableItemCount:
setPendingItemIdentifiers:
longValue
redownloadableItemCount
_redownloadableItemCount
T@"MPMediaLibraryView",C,N,V_libraryView
T@"NSNumber",C,N,V_redownloadableItemCount
disconnect
_clearPendingDisconnection
_postNotificationName:library:
_reloadLibraryForContentsChangeWithNotificationInfo:
currentDeviceInfo
_activeUserDidChangeNotification:
initWithDelegate:
setActiveUserChangeMonitor:
_deviceMediaLibraryWithUserIdentity:createIfRequired:
_mediaLibraries
initWithClientIdentity:userIdentity:
authorizationStatus
initWithClientIdentity:
musicLibraryForUserAccount:
initWithLibrary:
callStackSymbols
_postNotificationName:library:userInfo:
_scheduleLibraryChangeNotificationPostingBlock:
_setupNotifications
_setLibraryFilterPredicates
_tearDownNotifications
_mediaLibraryWithUniqueIdentifier:userDSID:
onDiskProviders
_initWithLibraryDataProvider:
specificAccountWithDSID:
_clearCachedEntitiesIncludingResultSets:
libraryChangeObservers
_clearCachedContentDataAndResultSets:
_performBlockOnLibraryHandlingTheSameAccount:
activeUserChangeMonitor
ingestNotificationName:
_reloadLibraryForRestrictionsChange
beginScanningForLibraries
_endDiscoveringMediaLibrariesIfAllowed
_sharedCloudServiceStatusMonitor
authorizationStatusForScopes:
_mediaLibraryAuthorizationStatusFromCloudServiceAuthorizationStatus:
requestAuthorizationForScopes:completionHandler:
connectWithAuthenticationData:completionBlock:progressHandler:
_disconnect
sdk_addItemWithOpaqueID:withCompletion:
currentEntityRevision
syncGenerationID
playlistGeneration
writable
isDeviceLibrary
initWithAuditToken:
setDefaultClientWithAuditToken:
setGlobalPrivacyContextWithAuditToken:
sharedContextForCurrentProcess
logPrivacyAccess
setClientIdentity:
hasMediaOfType:
hasGeniusMixes
hasSongs
hasUbiquitousBookmarkableItems
_checkHasContent:determined:mediaType:queryHasEntitiesBlock:
_checkHasContent:determined:queryHasEntitiesBlock:
hasUserPlaylists
hasAddedToLibraryAppleMusicContent
hasUserPlaylistsContainingAppleMusicContent
playlistExistsWithPersistentID:
itemPersistentIDForStoreID:
initWithUnsignedLongLong:
initWithProperties:itemsQuery:
localizedSectionHeaderForSectionIndex:
localizedSectionIndexTitles
playbackHistoryPlaylistPersistentID
photosMemoriesPlaylistPersistentID
addPlaylistWithName:activeGeniusPlaylist:
addPlaylistWithValuesForProperties:
dictionaryWithObjectsAndKeys:
setValue:forDatabaseProperty:
valueForDatabaseProperty:
URLForItemDataRequest:
deleteItemsWithIdentifiers:count:
removeItemsWithIdentifiers:count:
removePlaylistWithIdentifier:
storeDownloadForMediaItem:type:attributes:
failureError
addFinishHandler:forDownloads:
addDownloads:
requestPermissionToDownloadWithType:completionHandler:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItemWithIdentifier:
setValues:forProperties:forItemPersistentIDs:
geniusItemsForSeedItem:completion:
isGeniusEnabled
preferredAudioLanguages
preferredSubtitleLanguages
requiresAuthentication
connectWithCompletionHandler:
_initWithMediaLibrary:identifier:
weakObjectsPointerArray
addPointer:
performTransactionWithBlock:
performReadTransactionWithBlock:
isCurrentThreadInTransaction
syncValidity
entityCache
deleteDatabaseProperty:
entityFromURL:inLibrary:
entityWithLibraryURL:
_persistentIDForAssetURL:
host
scannerWithString:
scanLongLong:
_reloadLibraryForPathChange
_handlesSameAccountAs:
collectionExistsContainedWithinSyncIDs:groupingType:existentPID:
itemResultSetForQueryCriteria:
updateToLibraryCurrentRevision
initWithResultSet:queryCriteria:entityType:library:
loadQueryCriteria:hasItemsWithCompletionBlock:
_getCachedValueForQueryCritiera:valueCriteriaCache:entitiesForCriteriaCache:didLoadBlocksByQueryCriteria:valueLoadedFromEntitiesArrayBlock:loadValueFromDataProviderBlock:
loadQueryCriteria:hasCollectionsWithCompletionBlock:
loadQueryCriteria:countOfItemsWithCompletionBlock:
loadQueryCriteria:countOfCollectionsWithCompletionBlock:
enumeratePersistentIDsUsingBlock:
collectionResultSetForQueryCriteria:
setCloudFilteringType:
additionalLibraryFilterPredicates
cloudFilteringType
setLibraryEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
pointerAtIndex:
removePointerAtIndex:
compact
_canShowCloudTracksDidChangeNotification:
_displayValuesDidChangeNotification:
_didReceiveMemoryWarning:
mediaLibraries
endScanningForLibraries
localizedCaseInsensitiveCompare:
sortUsingComparator:
removeObjectIdenticalTo:
_libraryDataProviders
_libraryForDataProvider:
setRemovalReason:
_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:
_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
addStoreItemIDs:referralObject:andAddTracksToCloudLibrary:withCompletion:
sdk_addPlaylistWithValuesForProperties:
sdk_createPlaylistWithPersistenID:properties:tracklist:completionHandler:
requestCapabilitiesWithCompletionHandler:
addPlaylistStoreItemsForLookupItems:withCompletion:
indexOfObject:
initWithMetadataDictionary:
addTracksToMyLibrary:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
recordPlayEventForAlbumPersistentID:
recordPlayEventForPlaylistPersistentID:
setDefaultMediaLibrary:
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
setGlobalPrivacyClientWithAuditToken:
isLibraryServerDisabled
setLibraryServerDisabled:
sharedMediaLibraries
mediaLibraryWithUniqueIdentifier:allowsLoadingFromDisk:
libraryDataProviders
addLibraryDataProvider:
removeLibraryDataProvider:removalReason:
reloadLibraryDataProvider:
postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:
reloadDynamicPropertiesForLibraryDataProvider:
reloadInvisiblePropertiesForLibraryDataProvider:
reloadDisplayValuesForLibraryDataProvider:
syncGenerationDidChangeForLibraryDataProvider:
uniqueIdentifierDidChangeForLibraryDataProvider:
libraryPathDidChangeForDataProvider:
activeUserChangeDidFinish
addLibraryFilterPredicate:
removeLibraryFilterPredicate:
removalReason
hasMedia
hasPlaylists
hasArtists
hasAlbums
hasPodcasts
hasGenres
hasComposers
hasAudiobooks
hasVideos
hasMusicVideos
hasAudibleAudioBooks
hasMovies
hasCompilations
hasITunesUContent
hasAudioITunesUContent
hasVideoITunesUContent
hasMovieRentals
hasTVShows
hasHomeVideos
hasVideoPodcasts
itemExistsInDatabaseWithPersistentID:
itemWithStoreID:
playbackHistoryPlaylist
photosMemoriesPlaylist
addPlaylistWithName:
setSyncPlaylistId:
syncPlaylistId
homeSharingDatabaseID
URLForHomeSharingRequest:
removeItems:
downloadAsset:completionHandler:
connectWithAuthenticationData:completionBlock:
connectionProgress
entityWithSpotlightIdentifier:
entityWithPersistentID:entityType:
isValidAssetURL:
pathForAssetURL:
_removeConnectionAssertion:
addStoreItem:andAddTracksToCloudLibrary:withCompletion:
getPlaylistWithUUID:creationMetadata:completionHandler:
addPlaylistStoreItemsWithMetadata:completion:
_MLCoreStorageLock
_libraryDataProvider
_entityCacheQueue
_fixedQueue
_notificationObservers
_itemsForCriteriaCache
_hasItemsForCriteriaCache
_countOfItemsForCriteriaCache
_itemResultSetsForCriteriaCache
_collectionsForCriteriaCache
_hasCollectionsForCriteriaCache
_countOfCollectionsForCriteriaCache
_collectionsResultSetsForCriteriaCache
_hasItemsDidLoadForCriteria
_hasCollectionsDidLoadForCriteria
_countOfCollectionsDidLoadForCriteria
_countOfItemsDidLoadForCriteria
_additionalLibraryFilterPredicates
_additionalLibraryFilterPredicatesAccessQueue
_connectionAssertions
_connectionAssertionsQueue
_disconnectAfterReleasingAssertions
_connectionProgress
_removalReason
_determinedHasMedia
_hasMedia
_determinedHasSongs
_hasSongs
_determinedHasGeniusMixes
_hasGeniusMixes
_determinedHasPlaylists
_hasPlaylists
_determinedHasComposers
_hasComposers
_determinedHasPodcasts
_hasPodcasts
_determinedHasUbiquitousBookmarkableItems
_hasUbiquitousBookmarkableContent
_determinedHasAudiobooks
_hasAudiobooks
_cloudFilteringType
_filteringDisabled
_hasVideos
_determinedHasVideos
_hasMusicVideos
_determinedHasMusicVideos
_hasAudibleAudioBooks
_determinedHasAudibleAudioBooks
_hasMovies
_determinedHasMovies
_hasCompilations
_determinedHasCompilations
_hasITunesU
_determinedHasITunesU
_hasVideoITunesU
_determinedHasVideoITunesU
_hasMovieRentals
_determinedHasMovieRentals
_hasTVShows
_determinedHasTVShows
_hasHomeVideos
_determinedHasHomeVideos
_hasVideoPodcasts
_determinedHasVideoPodcasts
_originalCellNetworkFlags
_originalWiFiNetworkFlags
__MLCoreStorageLock
__MLCoreStorage
_libraryChangeObservers
_activeUserChangeMonitor
__MLCoreStorageLockPointer
Tq,R,N,V_libraryChangeObservers
T{os_unfair_lock_s=I},R,N,V__MLCoreStorageLock
T@"_MPActiveUserChangeMonitor",&,N,V_activeUserChangeMonitor
T@,&,N,S_setMLCoreStorage:,V__MLCoreStorage
T^{os_unfair_lock_s=I},R,N,V__MLCoreStorageLockPointer
T@"ML3MusicLibrary",R,N
T@"ICUserIdentity",R,C,N,V_userIdentity
protectedContentSupportStorageURL
initWithEntity:anchor:deletionType:
entity
anchor
deletionType
_entity
_anchor
_deletionType
T@"MPMediaEntity",R,N,V_entity
T@"NSString",R,C,N,V_anchor
Tq,R,N,V_deletionType
createUncachedConcreteMediaItemWithPersistentID:library:
createUncachedMediaItemCollectionWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:itemBlock:collectionBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:usingBlock:
_syncValidity
enumerateEntityChangesAfterSyncAnchor:usingBlock:
preferredQueue
requiresNetwork
sharedNetworkQueue
sharedQueue
_kindForClass:
kindWithSongKind:
kindWithVariants:playlistEntryKind:options:
kindWithKinds:
kindWithRelationshipKinds:
T@"NSOperationQueue",R,N
sectionClass
setSectionClass:
itemClass
setItemClass:
setSectionSortDescriptors:
setItemSortDescriptors:
_sectionKind
_sectionSortDescriptors
_itemSortDescriptors
T@"MPModelKind",&,N,V_sectionKind
T@"MPPropertySet",C,N,V_sectionProperties
T@"NSArray",C,N,V_sectionSortDescriptors
T@"MPPropertySet",C,N,V_itemProperties
T@"NSArray",C,N,V_itemSortDescriptors
T#,&,N
initWithMediaTypes:
setPreferredContentSize:
setMediaPickerController:
requestRemoteViewController
setMediaTypes:
_sharedInit
setTypeIdentifiers:
setSelectionMode:
showsLibraryContent
showsCatalogContent
_addRemoteView
initWithRootViewController:
navigationItem
_pickerDidCancel
initWithTitle:style:target:action:
setLeftBarButtonItem:
setRightBarButtonItem:
synchronizeSettings
_checkLibraryAuthorization
modalPresentationStyle
supportedInterfaceOrientations
preferredInterfaceOrientationForPresentation
_pickerDidPickItems:
_pickerDidPickPlaybackArchive:
prompt
setPrompt:
_synchronizeSettings
allowsPickingMultipleItems
picksSingleCollectionEntity
setAllowsPickingMultipleItems:
showsCloudItems
setShowsCloudItems:
showsItemsWithProtectedAssets
setShowsItemsWithProtectedAssets:
setPicksSingleCollectionEntity:
watchCompatibilityVersion
setWatchCompatibilityVersion:
typeIdentifiers
selectionMode
setShowsCatalogContent:
setShowsLibraryContent:
supportsUnavailableContent
setSupportsUnavailableContent:
pickingForExternalPlayer
setPickingForExternalPlayer:
playbackArchiveConfiguration
setPlaybackArchiveConfiguration:
presentingViewController
mediaPickerDidCancel:
_forceDismissal
mediaPicker:didPickMediaItems:
mediaPicker:didPickPlaybackArchive:
remoteViewController
isViewLoaded
_hasAddedRemoteView
preheatMediaPicker
remoteMediaPickerDidCancel
remoteMediaPickerDidPickMediaItems:
remoteMediaPickerDidPickPlaybackArchive:
initWithSupportedTypeIdentifiers:selectionMode:
_canShowWhileLocked
_preferredModalPresentationStyle
_resetRemoteViewController
loader
setLoader:
_loader
T@"<MPMediaPickerRemoteViewLoader>",&,N,V_loader
T@"<MPMediaPickerControllerDelegate>",W,N,V_delegate
_beginDelayingPresentation:cancellationHandler:
extensionWithIdentifier:error:
endDelayingDisplayOfRemoteController
_endDelayingPresentation
instantiateWithExtension:completion:
delayDisplayOfRemoteController
serviceController
updateWithConfiguration:
serviceViewControllerProxy
mediaPickerController
T@"MPMediaPickerController",W,N
T@"UIViewController",R,N
_remoteViewContainerViewController
_musicRemoteViewController
_mediaPickerController
T@"MPMediaPickerController",W,N,V_mediaPickerController
supportedContentOptions
setSupportedContentOptions:
encodeInt32:forKey:
decodeInt32ForKey:
alwaysShowSearchBarInLibrary
setAlwaysShowSearchBarInLibrary:
automaticallyDrillsToLibrary
setAutomaticallyDrillsToLibrary:
_allowsPickingMultipleItems
_alwaysShowSearchBarInLibrary
_automaticallyDrillsToLibrary
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_pickingForExternalPlayer
_watchCompatibilityVersion
_mediaTypes
_prompt
_typeIdentifiers
_selectionMode
_playbackArchiveConfiguration
_supportedContentOptions
Tq,N,V_supportedContentOptions
TQ,N,V_mediaTypes
TB,N,V_allowsPickingMultipleItems
TB,N,V_alwaysShowSearchBarInLibrary
TB,N,V_automaticallyDrillsToLibrary
TB,N,V_showsCloudItems
TB,N,V_showsItemsWithProtectedAssets
T@"NSString",C,N,V_prompt
TB,N,V_picksSingleCollectionEntity
TI,N,V_watchCompatibilityVersion
T@"NSArray",C,N,V_typeIdentifiers
Tq,N,V_selectionMode
TB,N,V_pickingForExternalPlayer
T@"MPPlaybackArchiveConfiguration",&,N,V_playbackArchiveConfiguration
_updateCurrentItem
_reloadItemsKeepingCurrentItem:
_syncPlayerItems
_updateQueueDepthIfNeeded
MP_shortDescription
queueCoordinator:failedToLoadItem:
_syncItemsWithPreviousItems:
_sendItemsDidChange
_playerItems
_beginBackgroundTaskAssertion
beginPlaybackQueueTransactionAndPause:
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
_dequeueFailedItem:
commitPlaybackQueueTransaction
_endBackgroundTaskAssertion
setCurrentPlaybackQueueTransactionDisplayTime:
_preferredQueueDepthWithFirstItem:
queueCoordinator:itemToFollowItem:
removeObjectsInRange:
_hasAchievedEquilibrium
_loadAssetForItem:
_removeItemFromPlayer:
MP_associatedQueuePlayer
audioTimePitchAlgorithm
setAudioTimePitchAlgorithm:
setMP_associatedQueuePlayer:
defaultItemEQPresetType
queueCoordinator:willInsertItem:afterItem:
insertItem:afterItem:
removeItem:
queueCoordinatorDidChangeItems:
_currentItemHasFinishedDownloadingDidChangeNotification:
reloadItemsKeepingCurrentItem:
shouldExpectEmptyQueue
setShouldExpectEmptyQueue:
equilibriumAchievedHandler
setEquilibriumAchievedHandler:
_backgroundTaskIdentifier
_backgroundTasks
_holdingPlaybackTransactionForFirstItem
_isPendingPlayerItemSync
_isSyncingPlayerItems
_itemsPendingAssetLoading
_lastItemAnchor
_lastPreferredQueueDepth
_needsCurrentItemUpdateAfterPlayerItemSync
_preventLoadingItems
_reusableItems
_shouldExpectEmptyQueue
_shouldDeferItemLoading
_currentItem
_items
_equilibriumAchievedHandler
T@"MPQueuePlayer",R,N,V_player
T@"<MPAVQueueCoordinatingDataSource>",R,W,N,V_dataSource
T@?,C,N,V_equilibriumAchievedHandler
T@"MPAVItem",R,N,V_currentItem
TB,N,V_shouldExpectEmptyQueue
TB,N,V_shouldDeferItemLoading
T@"NSArray",R,N,V_items
T@"MPQueuePlayer",W,N
createTranslatorForMPModelClass:
deviceSpecificUserInfo
storeSubscriptionID
setPurchasedAdamID:
totalTrackCount
mapUnsupportedPropertyKey:
songTraits
initWithData:encoding:
storeAlbumID
albumName
totalDiscCount
albumTraits
playlistTraits
albumArtistName
storeArtistID
trackArtistName
genreName
radioStationStringIdentifier
radioStationName
setVendorID:
info
setScaleImageForAccessibility:
_isInAWindow
_updateControlImageViewAnimation
contentHorizontalAlignment
preferredFontForTextStyle:
_scaledValueForValue:
preferredContentSizeCategory
_updateBackgroundViewCornerRadius
titleForControlStatusType:
_expectedSizeForControlStatusType:controlTitle:hasControlImage:displayScale:preferredHeight:
_updateControlTitleLabelVisualProperties
_updateControlStatusProperties
traitCollectionDidChange:
setContentHorizontalAlignment:
isHighlighted
_beginTransientContentViewTransaction
_endTransientContentViewTransaction
setControlStatus:animated:
setDownloadProgress:
_newControlTitleLabel
controlTitleFontForControlStatusType:
smallSystemFontSize
bundleForClass:
imageNamed:inBundle:compatibleWithTraitCollection:
insertSubview:atIndex:
systemGrayColor
filledTintColor
setCornerRadius:
_imageNamed:compatibleWithTraitCollection:
setCenterImage:
systemFillColor
setOuterRingColor:
_currentContentSuperview
systemLightGrayColor
scaleImageForAccessibility
setAdjustsImageSizeForAccessibilityContentSizeCategory:
animationWithKeyPath:
presentationLayer
setFromValue:
setToValue:
setRemovedOnCompletion:
setRepeatCount:
setFillMode:
setBeginTimeMode:
setBeginTime:
addAnimation:forKey:
removeAnimationForKey:
hitTest:withEvent:
maximumSizeWithPreferredHeight:
_removeAllAnimations:
setAllowsAddImage:
setDisplayStyle:
setControlStatus:
setFilledTintColor:
setTitle:forControlStatusType:
allowsAddImage
controlStatus
displayStyle
_controlTitleLabel
_controlImageView
_controlStatusTypeToTitle
_controlStatusRevision
_downloadProgressView
_hadFirstTouchHighlight
_controlImageEdgeInsets
_transientContentView
_transientContentViewTransactionCount
_traitCollectionDidChangeWasCalled
_allowsAddImage
_scaleImageForAccessibility
_displayStyle
_filledTintColor
_controlStatus
TB,N,V_allowsAddImage
T{MPAddKeepLocalControlStatus=qd},N,V_controlStatus
Tq,N,V_displayStyle
TB,N,V_scaleImageForAccessibility
T@"UIColor",&,N,V_filledTintColor
initWithIdentity:
sharedBagProvider
setScheme:
setHost:
countryCode
songAdamID
language
signature
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
initWithURLRequest:requestContext:
defaultSession
urlResponse
parsedBody
statusCode
enqueueDataRequest:withCompletionHandler:
getBagForRequestContext:withCompletionHandler:
setInformalMediaClipID:
setPreviewArtworkCatalogBlock:
setInformalStaticAssetID:
setUrl:
flavor
setFlavorType:
setStaticAssets:
mediaClipWithStoreItemMetadata:storeItemMovieClip:
_requestedClipProperties
_transientStateDidChangeNotification:
_updateActiveDownloadsAllowingDownloadRemoval:
_updateCurrentStatus
_handleDownloadStateChanged:
downloadProgress
transientKeepLocalStateForModelObject:
nonPurgeableItemCount
downloadEnabledItemCount
hasNonPurgeableAsset
isCollectionType
managedStatus
pendingItemIdentifiers
downloadReason
downloadPausedReason
unionSet:
_calculateCurrentStatus
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
setConfiguration:
currentStatus
statusBlock
setStatusBlock:
_activeDownloads
_pausedDownloads
_downloadPausedReason
_statusBlock
_currentStatus
T@"MPLibraryKeepLocalStatusObserverConfiguration",&,N,V_configuration
T{MPLibraryActiveKeepLocalStatus=qd},R,N,V_currentStatus
TQ,R,N,V_downloadPausedReason
T@?,C,N,V_statusBlock
_pendingItemIdentifiers
_downloadEnabledItemCount
_nonPurgeableItemCount
T@"NSArray",C,N,V_pendingItemIdentifiers
Tq,N,V_downloadEnabledItemCount
Tq,N,V_nonPurgeableItemCount
Tq,N,V_redownloadableItemCount
setCollectionType:
setManagedStatus:
setHasNonPurgeableAsset:
setStoreRedownloadable:
_collectionType
_hasNonPurgeableAsset
_storeRedownloadable
_managedStatus
collectionType
TB,N,GisCollectionType,V_collectionType
Tq,N,V_managedStatus
TB,N,V_hasNonPurgeableAsset
TB,N,GisStoreRedownloadable,V_storeRedownloadable
initWithItems:
initWithItemsQuery:
collectionWithItems:
sortTitlePropertyForGroupingType:
representativePersistentIDPropertyForGroupingType:
_containedMediaTypes
_initializedContainedMediaTypes
_itemsCount
_itemsQuery
_representativeItem
T@"MPMediaItem",R,N
_handleNotification:
handler
_handlerCallCount
_object
_handler
T@,R,W,N,V_object
T@?,R,C,N,V_handler
initWithMPStoreDownload:
libraryItemIdentifier
storeItemIdentifier
percentComplete
_downloadReasonFromStoreDownload:
deviceLibraryID
MPMediaDownloadsFromMPStoreDownloads:
MPMediaDownloadsFromATAssets:
MPMediaDownloadPauseReasonForATAsset:
setDownloadReason:
setDownloadPausedReason:
libraryID
setLibraryID:
storeSagaID
setStoreSagaID:
_deviceLibraryID
_storeItemID
_downloadReason
_downloadProgress
_libraryID
_storeSagaID
Tq,N,V_libraryID
Tq,N,V_storeSagaID
Tq,N,V_downloadReason
Td,N,V_downloadProgress
TQ,N,V_downloadPausedReason
Tq,R,N,V_deviceLibraryID
Tq,R,N,V_storeItemID
setHasBiography:
setHasSocialPosts:
_requestedArtistProperties
heroArtworkCatalogBlock
__startTime_KEY
__endTime_KEY
__heroArtworkCatalogBlock_KEY
heroArtworkCatalog
errorResolver:didResolveError:withResolution:
errorResolver
resolutionHandler
_strongSelf
_errorResolver
_resolutionHandler
T@"MPAVErrorResolver",R,N,V_errorResolver
T@?,C,N,V_resolutionHandler
initWithScrubbingControl:
setDetailedScrubbingEnabled:
_setupControlsForStyle
setDeliversTouchesForGesturesToSuperview:
setSemanticContentAttribute:
initWithFrame:style:maxTrackWidth:
timeLabelFontForStyle:
timeLabelTextColorForStyle:
labelClass
setLineBreakMode:
_stringForCurrentTime:
_stringForInverseCurrentTime:
_updateTrackInset
setBounds:
detailedScrubbingEnabled
durationAllowsForDetailedScrubbing
currentThumbImage
setValue:duration:
_setValueWhileTracking:duration:
animationKeys
layoutIfNeeded
_updateForAvailableDuraton
_updateTimeDisplayForTime:
_commitValue
detailSlider:didChangeScrubSpeed:
thumbHitRect
detailSliderTrackingDidBegin:
scaleForVerticalPosition:
convertPoint:toView:
isContinuous
statusBarOrientation
setAutoreverses:
_autoscrubTick:
_resetScrubInfo
detailSliderTrackingDidEnd:
cancelTracking
detailSliderTrackingDidCancel:
currentScrubSpeed
setAvailableDuration:
_updateTimeDisplayForTime:force:
systemFontOfSize:
fontDescriptor
fontDescriptorByAddingAttributes:
fill
alphaComponent
allowsScrubbing
_modernThumbImageWithColor:height:includeShadow:
_colorSliceImageWithColor:height:
_legacy_sizeWithFont:
stringFromSeconds:
_stringForTime:elapsed:
detailSlider:didChangeValue:
detailScrubControllerDidBeginScrubbing:
detailScrubControllerDidEndScrubbing:
detailScrubController:didChangeValue:
detailScrubController:didChangeScrubSpeed:
viewForFirstBaselineLayout
viewForLastBaselineLayout
_thumbHitEdgeInsets
allowsDetailScrubbing
detailScrubbingAvailableForCurrentDuration
localizedScrubSpeedText
setAllowsScrubbing:
setAllowsDetailScrubbing:
setMinTimeLabelWidth:
setTimeLabelStyle:
detailScrubbingVerticalRange
setDetailScrubbingVerticalRange:
availableDuration
timeLabelStyle
minTimeLabelWidth
_currentTimeInverseLabel
_currentTimeLabel
_scrubController
_allowsScrubbing
_autoscrubActive
_autoscrubTimer
_canCommit
_currentTime
_downloadingTrackOverlay
_glowDetailScrubImageView
_isTracking
_maxTrackWidth
_previousLocationInView
_trackInset
_formatter
_detailScrubbingVerticalRange
_duration
_availableDuration
_timeLabelStyle
_minTimeLabelWidth
T@"<MPDetailSliderDelegate>",W,N,V_delegate
TB,N,V_allowsScrubbing
Td,N,V_detailScrubbingVerticalRange
Td,N,V_duration
Td,N,V_availableDuration
Tq,N,V_timeLabelStyle
Td,N,V_minTimeLabelWidth
remoteObjectProxy
setWantsReverseProcessAssertion:
initWithController:
modifications
fault
performQueueModifications:completion:
onApplicationServerAsync:errorHandler:
prerollWithCompletion:
beginPlaybackAtHostTime:
setRelativeVolume:
onApplicationServer:
setDisableAutomaticCanBeNowPlaying:
getNowPlayingsForContentItemIDs:reply:
initWithServiceName:
getServerEndpointWithReply:
interfaceWithProtocol:
synchronousRemoteObjectProxyWithErrorHandler:
initWithListenerEndpoint:
remoteObjectInterface
setClasses:forSelector:argumentIndex:ofReply:
proxyWithObject:protocol:
performQueueTransaction:completionHandler:
_mediaItemsForContentItemIDs:
serviceConnection
_shuffleMode
_serviceConnection
T@"NSXPCConnection",R,N,V_serviceConnection
T@"MPMusicPlayerApplicationController",R,W,N,V_controller
_insertQueueDescriptor:afterItemWithIdentifier:
_removeItemWithIdentifier:
initWithInsertedDescriptors:removedItemIdentifiers:
insertQueueDescriptor:afterItem:
insertedDescriptors
setInsertedDescriptors:
removedItems
setRemovedItems:
_insertedDescriptors
_removedItems
T@"NSMutableDictionary",&,N,V_insertedDescriptors
T@"NSMutableArray",&,N,V_removedItems
T@"MPMusicPlayerControllerApplicationQueueModifications",R,N
_setupMediaRemoteEndpoint
_tearDownMediaRemoteEndpoint
_scheduleUpdateSupportedAPIs
reloadData
_pushContentItemsUpdate
_onQueueContentItemWasSentToMediaRemote:
_areContentLimitsEnforced
setContentLimitsEnforced:
_musicListsLimited
setEnforcedContentItemsCount:
setEnforcedContentTreeDepth:
setEndpointAvailable:
_contentItemChangedNotification:
_limitedUIChanged:
_browsableContentEndpointChanged:
waitUntilAllOperationsAreFinished
_mediaRemoteContentItem
serviced
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
indexPath
setServiced:
context
playableContentManager:didUpdateContext:
currentSession
limitableUserInterfaces
limitUserInterfaces
beginLoadingChildItemsAtIndexPath:completionHandler:
contentItemAtIndexPath:
childItemsDisplayPlaybackProgressAtIndexPath:
_updateSupportedAPIs
sharedContentManager
_deviceIsCarplayCapable
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
beginUpdates
endUpdates
setNowPlayingIdentifiers:
_enqueueArtworkUpdate:withCompletion:
_enqueueArtworkUpdate:size:withCompletion:
_handlePlaybackInitializationCompletedWithContext:error:
_contentItemWasSentToMediaRemote:
_markContentItemsAsSentToMediaRemote:
setContext:
nowPlayingIdentifiers
_mutatedContentItems
_contentItemIdentifiersSentToMediaRemote
_artworkUpdateQueue
_coalescingUpdates
_scheduledSupportedAPIsChange
_currentSessionStatus
_context
_nowPlayingIdentifiers
T@"MPPlayableContentManagerContext",&,N,V_context
T@"<MPPlayableContentDataSource>",W,N,V_dataSource
T@"<MPPlayableContentDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_nowPlayingIdentifiers
initWithIndexPath:
_serviced
_indexPath
T@"NSIndexPath",R,N,V_indexPath
TB,N,V_serviced
indexAtPosition:
initWithTimeout:interruptionHandler:
initWithIndexes:length:
numberOfChildItemsAtIndexPath:
contentItemForIdentifier:completionHandler:
lock
unlock
setLyricsContent:
_TTML
_lyricsContent
_lyricsID
TB,N,GisTTML,V_TTML
T@"NSString",&,N,V_lyricsContent
T@"NSString",&,N,V_lyricsID
_lyricsURLForURLBag:
initWithURL:resolvingAgainstBaseURL:
initWithName:value:
preferredLanguages
_enqueueOperationWithURL:storeURLBag:allowingAuthentication:
initWithUserInteractionLevel:
setAuthenticationProvider:
parsedBodyDictionary
ic_intValueForKey:
setCancellationHandler:
_songAdamID
Tq,N,V_songAdamID
setKey:
_key
T@"NSString",C,N,V_key
TQ,N,V_type
wirelessRouteIsPicked
T@,W,N,V_delegate
_cachedNumberOfItemsInSections
_cachedNumberOfSections
_hasValidCachedNumberOfSections
_itemsCache
_itemIdentifierSetMap
_sectionsCache
_sectionIdentifierSetMap
_cachedObjectAtIndexPath:
_updateCacheWithObject:atIndexPath:
_mapLock
T@"<MPLazySectionedCollectionDataSource>",&,N,V_dataSource
failedItemIdentifiers
response
playbackAuthorizationTokenHalfLifeExpiration
_isFinalResponse
_failedItemIdentifiers
_response
_playbackAuthorizationTokenHalfLifeExpiration
TB,R,N,V_isFinalResponse
Td,R,N,V_playbackAuthorizationTokenHalfLifeExpiration
T@"NSDictionary",R,C,N,V_response
T@"NSArray",R,C,N,V_failedItemIdentifiers
__flavorType_KEY
__mediaType_KEY
__url_KEY
T@"NSURL",C,D,N
_registerCarPlayObserver
_setNeedsDisplayedRoutesUpdate
_initWithStyle:routingController:
_createReloadUpdate
_enqueueUpdate:
_setNeedsRouteDiscoveryModeUpdate
removeAllIndividualVolumeSliders
isInCarPlay
hasCarKitRoute
_updateDisplayedRoutes
setContentOffset:
setSeparatorInset:
setTableFooterView:
setMasksToBounds:
registerTableViewCells
_setTableCellsContentColor:
setIndicatorStyle:
registerClass:forHeaderFooterViewReuseIdentifier:
registerClass:forCellReuseIdentifier:
_beginRouteDiscovery
viewDidDisappear:
_endRouteDiscovery
_collapseAllGroups
resetDisplayedRoutes
viewDidMoveToWindow:shouldAppearOrDisappear:
viewWillLayoutSubviews
shouldOverrideContentSizeCategory:
traitCollectionWithPreferredContentSizeCategory:
_setLocalOverrideTraitCollection:
_tableViewHeightAccordingToDataSource
dequeueReusableHeaderFooterViewWithIdentifier:
dequeueReusableCellWithIdentifier:forIndexPath:
_configureCell:forIndexPath:
themeDelegate
routingViewController:willDisplayCell:
deselectRowAtIndexPath:animated:
mainRoute
_wouldShareAudioForPickedRoute:operation:pickedRoutes:
isInVehicle
_diplayShareAudioDisabledAlertForReason:
_operationRequiresOptimisticState:routes:
endpointGroupUID
setOptimisticUpdate:
routingViewController:didPickRoute:
_createUpdateWithCompletion:
actionIdentifier
routingViewController:didSelectRoutingViewItem:
_normalCellHeight
isTVRoute
showViewController:sender:
indexPathForCell:
groupUIDForRoute:
enqueueRefreshUpdate
_createRefreshUpdate
setShouldReload:
isShareableRoute
_tableViewHeaderViewHeight
_tableViewFooterViewHeight
isSmartAudio
setShouldHideSectionBottomSeparator:
backgroundColor
setSessionObserver:
_setRouteDiscoveryMode:
_setupUpdateTimerIfNecessary
isW1Route
isH1Route
containsDeviceWithSubtype:
compare:options:
_shouldDisplayRouteAsPicked:
setPickedRoutes:
setPendingPickedRoutes:
_displayableRoutesInRoutes:
setDisplayableAvailableRoutes:
_displayAsPickedRoutesInRoutes:
setDisplayAsPickedRoutes:
setCanGroup:
setHasPendingPickedRoutes:
displayAsPickedRoutes
_createVolumeSlider
addIndividualVolumeSlider:
removeIndividualVolumeSlider:
_volumeCapableRoutesInRoutes:
setVolumeCapableRoutes:
_applyUpdate:
endpoint
designatedGroupLeader
localDeviceUID
intersectSet:
displayableAvailableRoutes
_createRoutingViewItemsForRoutes:
routeGrouping
_createSectionedCollection:withPickedRoutes:
volumeCapableRoutes
updateExpandedGroups
shouldReload
deletedSections
deleteSections:withRowAnimation:
insertedSections
insertSections:withRowAnimation:
deletedItemIndexPaths
deleteRowsAtIndexPaths:withRowAnimation:
insertedItemIndexPaths
insertRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
enumerateItemMovesUsingBlock:
updatedItemIndexPaths
reloadRowsAtIndexPaths:withRowAnimation:
performBatchUpdates:completion:
raise
routingViewControllerDidUpdateContents:
outputDeviceUIDs
groupUID
shouldGroupRoutingViewItems
isGroupLeader
itemWithRoute:
itemWithLeader:members:
isHeadphonesRoute
setRouteGrouping:
setHeadphones:
setLocalDevices:
setSpeakersAndTVs:
localDevices
headphones
speakersAndTVs
isSplitRoute
itemWithActionTitle:subtitle:enabled:identifier:image:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
routingCell:mirroringSwitchValueDidChange:
initWithStyle:routingController:
setAVItemType:
allowMirroring
setAllowMirroring:
setDiscoveryModeOverride:
setGroupSliderCoordinator:
resetScrollPosition
_setContinuousCornerRadius:
setEndpointRoute:
_expandedCellHeight
_tableCellsBackgroundColor
_tableCellsContentColor
_setShouldAutomaticallyUpdateRoutesList:
_setShouldPickRouteOnSelection:
_setTableCellsBackgroundColor:
_shouldAutomaticallyUpdateRoutesList
_shouldPickRouteOnSelection
_endUpdates
avItemType
discoveryModeOverride
setThemeDelegate:
_continuousCornerRadius
outputDeviceVolumeSliders
setOutputDeviceVolumeSliders:
groupSliderCoordinator
_pendingUpdate
_optimisticUpdate
_isAnimatingUpdate
_displayedEndpointRoute
_routingViewItems
_cachedDisplayableAvailableRoutes
_cachedPendingPickedRoutes
_cachedDisplayAsPickedRoutes
_cachedVolumeCapableRoutes
_cachedRouteGrouping
_expandedGroupUIDs
_updateTimer
_routeDiscoveryMode
_airPlayPasswordAlertDidAppearToken
_airPlayPasswordAlertDidCancelToken
_airPlayPasswordAlertDidAppearTokenIsValid
_needsDisplayedRoutesUpdate
_suspendedDiscoveryModeDueToApplicationState
_onScreen
_hasUserSelections
_carPlayStatus
_updatesSincePresentation
_discoveryModeBeforeEnteringBackground
_avItemType
_discoveryModeOverride
_themeDelegate
_endpointRoute
_outputDeviceVolumeSliders
_groupSliderCoordinator
inCarPlay
TB,R,N,GisInCarPlay
T@"<MPAVRoutingViewControllerThemeDelegate>",W,N,V_themeDelegate
T@"MPAVEndpointRoute",&,N,V_endpointRoute
T@"UITableView",R,N
continuousCornerRadius
Td,N,G_continuousCornerRadius,S_setContinuousCornerRadius:,V_continuousCornerRadius
T@"UIColor",&,N,S_setTableCellsBackgroundColor:
T@"UIColor",&,N,S_setTableCellsContentColor:
TB,N,S_setShouldAutomaticallyUpdateRoutesList:
TB,N,S_setShouldPickRouteOnSelection:
T@"NSMapTable",&,N,V_outputDeviceVolumeSliders
T@"MPVolumeGroupSliderCoordinator",&,N,V_groupSliderCoordinator
TQ,R,N,V_style
T@"<MPAVRoutingViewControllerDelegate>",W,N,V_delegate
Tq,N,SsetAVItemType:,V_avItemType
T@"NSNumber",C,N,V_discoveryModeOverride
_routeGrouping
_localDevices
_headphones
_speakersAndTVs
T@"NSDictionary",C,N,V_routeGrouping
T@"NSArray",C,N,V_localDevices
T@"NSArray",C,N,V_headphones
T@"NSArray",C,N,V_speakersAndTVs
canGroup
_canGroup
_shouldReload
_pickedRoutes
_pendingPickedRoutes
_displayableAvailableRoutes
_displayAsPickedRoutes
_volumeCapableRoutes
T@"NSArray",C,N,V_pickedRoutes
T@"NSArray",C,N,V_pendingPickedRoutes
T@"NSArray",C,N,V_displayableAvailableRoutes
T@"NSArray",C,N,V_displayAsPickedRoutes
T@"NSArray",C,N,V_volumeCapableRoutes
TB,N,V_canGroup
TB,N,V_hasPendingPickedRoutes
TB,N,V_shouldReload
isSplitterCapable
setExplicitSong:
setStoreAsset:
setArtistUploadedContent:
setHasVideo:
setHasCloudSyncSource:
setShouldShowComposer:
setGaplessInfo:
setLocalFileAsset:
setUserRating:
setCloudStatus:
setVolumeAdjustment:
setGrouping:
setClassicalWork:
setClassicalMovement:
setClassicalMovementCount:
setClassicalMovementNumber:
setComposer:
setHomeSharingAsset:
setHasStoreLyrics:
setHasTimeSyncedLyrics:
setPlaybackPosition:
_playbackPositionBuilder
_requestedSongProperties
_radioAvailabilityControllerRadioAvailableDidChangeNotification:
_recentStationsControllerDidChangeStationsNotification:
_playActivityReportingControllerDidFlushEventsNotification:
getRadioAvailabilityWithCompletionHandler:
refreshWithCompletionHandler:
stationGroups
initWithStation:
valueForEntitlement:
_removeConnection:
_addConnection:
initWithMachServiceName:
_handleRecentStationsControllerDidChange
listener:shouldAcceptNewConnection:
availabilityController
recentStationsController
_connections
_hasRefreshedStations
_listener
_availabilityController
_recentStationsController
T@"RadioAvailabilityController",R,N,V_availabilityController
T@"RadioRecentStationsController",R,N,V_recentStationsController
mediaItemPropertyValues
tvEpisode
playlistEntry
releaseDateComponents
dateFromComponents:
isExplicitSong
filePath
pathExtension
number
initWithArtworkCatalog:allowsNetworking:
fallbackArtworkCatalogBlock
_propertyValues
_fallbackArtworkCatalogBlock
T@"MPModelObject",R,N,V_modelObject
T@?,C,N,V_fallbackArtworkCatalogBlock
initWithMaximumCapacity:
initWithKeyOptions:valueOptions:capacity:
metadataForItemIdentifier:
_itemIdentifierToCompositeStoreItemMetadataLRUDictionary
_itemIdentifierToCompositeStoreItemMetadataMapTable
initWithIdentifier:userInfo:
initWithMediaRemoteLyricsItemToken:
mediaRemoteLyricsItemToken
_mediaRemoteLyricsItemToken
T^v,R,N,V_mediaRemoteLyricsItemToken
initWithLyrics:userProvided:token:
initWithMediaRemoteLyricsItem:
userProvided
mediaRemoteLyricsItem
_mediaRemoteLyricsItem
T^v,R,N,V_mediaRemoteLyricsItem
T@"MPNowPlayingInfoLyricsItemToken",R,N
initWithMediaRemoteLyricsEvent:
startDate
endDate
mediaRemoteLyricsEvent
_mediaRemoteLyricsEvent
T^v,R,N,V_mediaRemoteLyricsEvent
initWithDictionary:
otherConnectedDevicesFromRouteDescription:
uniqueID
productName
modelIdentifier
_playing
_uniqueID
_productName
_deviceName
_modelIdentifier
T@"NSString",R,N,V_uniqueID
T@"NSString",R,N,V_productName
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_modelIdentifier
TB,R,N,GisPlaying,V_playing
cacheKeyForCatalog:kind:size:
_subclassImplementsSelector:
cacheKeyForCatalog:size:
defaultSessionConfiguration
setHTTPShouldUsePipelining:
_applyImageURLCachePolicy:cacheDiskPath:toConfiguration:
sessionWithConfiguration:
_applyVideoCacheURL:toConfiguration:
URLCache
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
sessionWithConfiguration:delegate:delegateQueue:
_didReceiveMemoryWarningNotification:
_didReceiveWillEnterForegroundNotification:
imageURLSession
finishTasksAndInvalidate
usesFallbackCache
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
videoArtworkCacheURL
videoURLSession
setVideoURLCache:
setVideoURLSession:
requestForCatalog:kind:size:
_bestAvailableSizeForCatalog:kind:
catalogImageTaskMap
_performSyncBlockOnQueue:block:
_requestForCatalog:kind:size:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
dataWithContentsOfURL:
fileExistsAtPath:
writeToURL:atomically:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
removeItemAtURL:error:
fallbackImageArtworkRepresentationCache
_cacheKeyForCatalog:kind:size:
_existingRepresentativeObjectForArtworkCatalog:kind:handler:
_bestVideoArtworkRepresentationForCatalog:
_existingRepresentationFromURLCacheForArtworkCatalog:immediateImageDecompressionAllowed:
setAttribution:
pendingRequestURLToCompletionHandlers
setRepresentationSize:forRequest:
_artworkRepresentationWithImageFromData:forURLResponse:catalog:size:immediateImageDecompressionAllowed:
callbackQueue
_performAsyncBarrierBlockOnQueue:block:
msv_dataTaskWithRequest:completionHandler:
bestAvailableSizeForCatalog:
videoAccessQueue
countOfBytesExpectedToReceive
videoURLCache
diskCapacity
currentDiskUsage
memoryCapacity
currentMemoryUsage
videoTaskToCacheStoragePolicy
videoTaskToData
_createDispatchData
videoTaskToResourceLoadingRequest
dataRequest
requestsAllDataToEndOfResource
requestedOffset
requestedLength
currentOffset
dataWithBytes:length:
respondWithData:
storagePolicy
initWithResponse:data:userInfo:storagePolicy:
finishLoadingWithError:
finishLoading
dataTaskWithRequest:
resourceLoaderStoragePolicyMap
setRequestCachePolicy:
initWithMemoryCapacity:diskCapacity:diskPath:
setMemoryCapacity:
setDiskCapacity:
setURLCache:
initWithMemoryCapacity:diskCapacity:directoryURL:
set_maxCacheableEntrySizeRatio:
wantsBackgroundImageDecompression
cachedResponseForRequest:
shouldLookForLargerImageRepresentationsWhenBestRepresentationIsUnavailable
sortedSupportedSizesForCatalog:
supportedSizesForCatalog:
valueWithCGSize:
_isRepresentationSize:validForCatalog:
requestForCatalog:size:
userAgent
setValue:forHTTPHeaderField:
resourceLoader
setDelegate:queue:
_CFURLCache
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
updateURLSessionWithCachePolicy:cachePath:
setVideoArtworkCacheURL:
URLSessionConfiguration
setUsesFallbackCache:
imageAccessQueue
setImageAccessQueue:
setVideoAccessQueue:
setCallbackQueue:
setFallbackImageArtworkRepresentationCache:
setPendingRequestURLToCompletionHandlers:
setCatalogImageTaskMap:
setResourceLoaderStoragePolicyMap:
setVideoTaskToCacheStoragePolicy:
setVideoTaskToResourceLoadingRequest:
setVideoTaskToData:
setImageURLSession:
URLSessionDataDelegateProxy
setURLSessionDataDelegateProxy:
_usesFallbackCache
_URLSessionConfiguration
_videoArtworkCacheURL
_imageAccessQueue
_videoAccessQueue
_fallbackImageArtworkRepresentationCache
_pendingRequestURLToCompletionHandlers
_catalogImageTaskMap
_resourceLoaderStoragePolicyMap
_videoTaskToCacheStoragePolicy
_videoTaskToResourceLoadingRequest
_videoTaskToData
_imageURLSession
_videoURLSession
_videoURLCache
_URLSessionDataDelegateProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_imageAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_videoAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSCache",&,N,V_fallbackImageArtworkRepresentationCache
T@"NSMutableDictionary",&,N,V_pendingRequestURLToCompletionHandlers
T@"NSMapTable",&,N,V_catalogImageTaskMap
T@"NSMapTable",&,N,V_resourceLoaderStoragePolicyMap
T@"NSMutableDictionary",&,N,V_videoTaskToCacheStoragePolicy
T@"NSMutableDictionary",&,N,V_videoTaskToResourceLoadingRequest
T@"NSMutableDictionary",&,N,V_videoTaskToData
T@"NSURLSession",&,N,V_imageURLSession
T@"NSURLSession",&,N,V_videoURLSession
T@"NSURLCache",W,N,V_videoURLCache
T@"<NSURLSessionDataDelegate>",W,N,V_URLSessionDataDelegateProxy
T@"NSURLSessionConfiguration",R,N,V_URLSessionConfiguration
TB,N,V_usesFallbackCache
T@"NSURL",&,N,V_videoArtworkCacheURL
storeCachedResponse:forRequest:
_requestSizeMap
first
_setStartTime:forIdentifiers:
_setEndTime:forIdentifiers:
isPrivate
setPrivate:
startTimes
endTimes
_private
_requestingBundleIdentifier
_requestingBundleVersion
_startTimes
_endTimes
private
TB,N,GisPrivate,V_private
T@"NSString",R,N,V_requestingBundleIdentifier
T@"NSString",R,N,V_requestingBundleVersion
T@"NSDictionary",R,N,V_startTimes
T@"NSDictionary",R,N,V_endTimes
setStartTime:forItem:
setEndTime:forItem:
itemCollection
_itemCollection
T@"MPMediaQuery",R,C,N
T@"MPMediaItem",&,N,V_startItem
setStartTime:forItemWithStoreID:
setEndTime:forItemWithStoreID:
setSourceStorefront:forItemWithStoreID:
storeIDs
assetStoreFronts
setAssetStoreFronts:
startItemID
setStartItemID:
_storeIDs
_storeFronts
_startItemID
T@"NSArray",C,N,V_storeIDs
T@"NSString",C,N,V_startItemID
isLibraryContent
itemID
catalogID
_libraryContent
_dictionary
_itemID
_catalogID
T@"MPIdentifierSet",R,C,N,V_identifiers
T@"NSString",R,C,N,V_itemKind
libraryContent
TB,R,N,GisLibraryContent,V_libraryContent
T@"NSString",R,C,N,V_itemID
T@"NSString",R,C,N,V_catalogID
T@"NSDictionary",R,C,N,V_dictionary
initWithPlayParametersQueue:
setStartTime:forItemWithPlayParameters:
setEndTime:forItemWithPlayParameters:
setPlayParametersQueue:
startItemPlayParameters
setStartItemPlayParameters:
_playParametersQueue
_startItemPlayParameters
T@"NSArray",C,N,V_playParametersQueue
T@"MPMusicPlayerPlayParameters",&,N,V_startItemPlayParameters
_radioStation
T@"MPRadioStation",R,N,V_radioStation
initWithPlaybackArchive:
playbackArchive
_playbackArchive
T@"MPPlaybackArchive",R,C,N,V_playbackArchive
bundleRecordForCurrentProcess
shortVersionString
bundleVersion
pairWithFirst:second:
initWithKey:ascending:
setKeyPath:
sortDescriptorWithKeyPath:ascending:
T@"NSArray",C,N,V_keyPath
setRelatedProperties:
relatedProperties
sortDescriptorWithRelatedProperties:ascending:
_relatedProperties
T@"NSDictionary",C,N,V_relatedProperties
_adjustedIndexForSectionIndex:
modelKind
itemEntityQueryResults
sectionEntityQueryResult
_itemTranslationContext
_sectionTranslationContext
_allowedSectionPersistentIDs
_allowedSectionPersistentIDToSectionQueryResultsIndexMap
_itemEntityQueryResults
_sectionEntityQueryResult
T{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>=^v^{__shared_weak_count}},R,N,V_itemEntityQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_sectionEntityQueryResult
sendDidResolveError:withResolution:
T@"<MPAVErrorResolverDelegate>",W,N,V_delegate
previewArtworkCatalogBlock
classesForSecureCoding
__previewArtworkCatalogBlock_KEY
__staticAssets_KEY
previewArtworkCatalog
staticAssets
T@"NSArray",C,D,N
_enabled
_leader
_actionIdentifier
T@"NSArray",R,N,V_routes
T@"MPAVRoute",R,N,V_leader
T@"NSString",R,C,N,V_localizedTitle
T@"NSString",R,C,N,V_localizedSubtitle
TB,R,N,V_enabled
T@"UIImage",R,N,V_image
T@"NSString",R,C,N,V_actionIdentifier
initWithCFType:
refValue
initWithMRAVEndpoint:
T^v,R,N
initWithMRAVOutputContext:
initWithMRAVEndpointObserver:
_initWithPersistentID:library:propertiesCache:
itemWithIdentifier:loadEntityBlock:
concreteMediaItemWithPersistentID:
dataProviderEntityClass
removeEntityWithIdentifier:dataProviderEntityClass:
valueForProperty:isCached:
initWithArtworkCatalog:
_nonBatchableOrCachedValueForProperty:needsFetch:
cacheValue:forProperty:persistValueInBackgroundBlock:
loadProperties:ofItemWithIdentifier:completionBlock:
cachePropertyValues:forProperties:persistValueInBackgroundBlock:
setValue:forProperty:ofItemWithIdentifier:completionBlock:
cachedPropertyValues
T@"MPConcreteMediaEntityPropertiesCache",R,&,N
initWithPersistentID:library:
classForCoder
_propertiesCache
_utilitySerialQueue
_catalog
_initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:propertiesCache:
collectionWithIdentifier:grouping:loadEntityBlock:
hasName
loadProperties:ofCollectionWithIdentifier:groupingType:completionBlock:
setValue:forProperty:ofCollectionWithIdentifier:groupingType:completionBlock:
_grouping
setValue:forProperty:ofPlaylistWithIdentifier:completionBlock:
setItemsWithIdentifiers:forPlaylistWithIdentifier:completionBlock:
_updateLibraryForPlaylistEdit:
addItemWithIdentifier:toPlaylistWithIdentifier:completionBlock:
addItemsWithIdentifiers:toPlaylistWithIdentifier:completionBlock:
_allowsEditing
cloudItemIDListForPlaylist:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
appendItems:completion:
sdk_addItemWithOpaqueIdentifier:toPlaylistWithIdentifier:completionBlock:
removeItemsAtIndexes:inPlaylistWithIdentifier:completionBlock:
removeAllItemsInPlaylistWithIdentifier:
removeFirstItemFromPlaylistWithIdentifier:
moveItemFromIndex:toIndex:inPlaylistWithIdentifier:completionBlock:
populateWithSeedItem:queue:completionBlock:
seedPlaylistWithIdentifier:withItemWithIdentifier:completionBlock:
releaseGeniusClusterPlaylist:
createGeniusClusterPlaylistWithSeedItemIdentifiers:count:error:
generateItemIdentifiersForGeniusClusterPlaylist:count:error:
replaceItems:completion:
replaceItemsWithPersistentIDs:completion:
appendItem:completion:
removeItems:atFilteredIndexes:completionBlock:
moveItemFromIndex:toIndex:completionBlock:
populateWithSeedItem:completionBlock:
beginGeneratingGeniusClusterItemsWithSeedItems:error:
geniusClusterItemsWithCount:error:
endGeneratingGeniusClusterItems
_clusterPlaylist
T@"MPMediaQuerySectionInfo",R,C,D,N
addSectionWithHeaderTitle:sectionIndexTitleIndex:count:
enumerateSectionHeadersUsingBlock:
setSectionIndexTitles:
localRevision
persistentIDAtIndex:
setObject:atIndexedSubscript:
setOrderingProperties:
isQueryResultSetInvalidated
_resultSet
_entityClass
_sectionInfo
_entities
_entitiesQueue
_queryCriteria
T@"<MPMediaLibraryResultSet>",R,N,V_resultSet
_onBarrierCacheValues:persistValueInBackgroundBlock:
initWithLibraryDataProvider:dataProviderEntityClass:identifier:
delete
dataProvider
_dataProviderEntityClass
_valuePersistenceBlocks
_propertiesQueue
_dataProvider
T@"<MPMediaLibraryDataProvider>",R,W,N,V_dataProvider
T#,R,N,V_dataProviderEntityClass
Tq,R,N,V_identifier
sectionIndexTitleIndexForSectionIndex:
allLibraries
initWithMediaLibraryDataProvider:
_libraryContentsDidChange:
_libraryEntitiesAddedOrRemoved:
_dynamicPropertiesDidChange:
_invisiblePropertiesDidChange:
_displayValuesDidChange:
_syncGenerationDidChange:
_libraryUIDDidChange:
_libraryCloudLibraryAvailabilityDidChange:
_libraryPathDidChange:
_updateArtworkDataSourceMediaLibraryUniqueIdentifier
_postEvents
libraryUID
sagaAccountID
_databaseFilePaths
databaseConnectionAllowingWrites:withBlock:
attributesOfItemAtPath:error:
fileModificationDate
executeQuery:
int64ValueForFirstRowAndColumn
performBackgroundTaskWithBlock:
predicateWithProperty:equalToInteger:
trackWithPersistentID:visibleInLibrary:
newWithPersistentID:inLibrary:
queryWithLibrary:predicate:
predicateWithProperty:value:comparison:
hasEntities
ML3CollectionsQueryInLibrary:
countOfEntities
initWithPersistentID:inLibrary:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
performDatabaseTransactionWithBlock:
sdk_addStoreItemWithOpaqueID:completionHandler:
isWatch
importElements
storeItem
_storePlatformRequestContext
storeAdamID
additionalTrackMetadata
initWithLookupDictionary:additionalTrackMetadata:
addToCloudLibrary
_importStoreItemElements:withReferralObject:andAddTracksToCloudLibrary:usingCloudAdamID:withCompletion:
initWithLookupItems:
cloudAddToPlaylistBehavior
trackData
initWithLibraryPath:trackData:playlistData:
setTracksAreLibraryOwnedContent:
setPendingMatch:
sharedMediaLibraryService
performImport:fromSource:withProgressBlock:completionHandler:
initWithImportElements:
addStoreItemWithAdamID:referralObject:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
_addGlobalPlaylistsToLibraryDatabase:asLibraryOwned:completion:
itemForIdentifier:
playlistsData
setPlaylistsAreLibraryOwnedContent:
queryWithLibrary:predicate:options:
recordPlayEventForContainerPersistentID:
enumeratePersistentIDsAndProperties:ordered:cancelBlock:usingBlock:
propertyForMPMediaEntityProperty:
getObjects:range:
adjustedValueForMPProperty:ofEntity:withDefaultValue:
_loadValueForAggregateFunction:entityClass:property:query:completionBlock:
_loadProperties:ofEntityWithIdentifier:ML3EntityClass:completionBlock:
_unadjustedValueForMPProperty:withDefaultValue:
updateLovedPlaylistByAddingTrackWithPersistentID:inLibrary:
updateLovedPlaylistByRemovingTrackWithPersistentID:inLibrary:
uploadCloudItemProperties
timeIntervalSince1970
setItemProperties:forSagaID:
setLikedState:forEntityWithStoreID:withMediaType:timeStamp:
trackForeignPersistentID
queryWithLibrary:predicate:orderingTerms:usingSections:
setValues:forProperties:usingConnection:
setCollectionProperties:forCollectionWithPersistentID:groupingType:completionHandler:
setLikedState:forAlbumWithStoreID:
containerQueryWithContainer:
containerQueryWithContainer:predicate:
uploadCloudPlaylistProperties
setLikedState:forPlaylistWithGlobalID:
currentDevicePlaybackHistoryPlaylist
currentDevicePhotosMemoriesPlaylist
newWithDictionary:inLibrary:
deleteFromLibrary:deletionType:persistentIDs:count:
removeFromMyLibrary:deletionType:persistentIDs:count:
unlinkRedownloadableAssetsFromLibrary:persistentIDs:
setTracksWithPersistentIDs:notify:
appendTracksWithPersistentIDs:notify:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
removeTracksAtIndexes:notify:
removeAllTracks
removeFirstTrack
moveTrackFromIndex:toIndex:
preferredAudioTracks
preferredSubtitleTracks
revisionTrackingCode
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
populateLocationPropertiesWithPath:protectionType:
populateLocationPropertiesWithPath:protectionType:completionBlock:
clearLocationFromLibrary:persistentIDs:disableKeepLocal:
ML3SystemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:additionalFilterPredicates:
setLibraryEntityFilterPredicates:
setLibraryContainerFilterPredicates:
setLibraryPublicEntityFilterPredicates:
setLibraryPublicContainerFilterPredicates:
canShowCloudMusic
canShowCloudVideo
hasProperNetworkConditionsToPlayMedia
sagaOnDiskDatabaseRevision
systemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:
arrayByAddingObjectsFromArray:
ML3PredicateForContainer
ML3PredicateForTrack
processInfo
processName
dateWithTimeIntervalSinceReferenceDate:
setItemPersistentID:
setStoreItemID:
setRedownloadParams:
setFileSize:
chapterTOC
countOfGroupsForProperty:
chapterIndexForGroupIndex:groupingProperty:
timeLocationInMSOfChapterAtIndex:
localizedStringWithFormat:
_adjustedItemPropertyAssetURLOfEntity:withDefaultValue:
_adjustedItemTimeOfEntity:withDefaultValue:
_adjustedItemPropertyChapterArtworkTimesOfEntity:withDefaultValue:
_adjustedItemPropertyChaptersOfEntity:withDefaultValue:
_adjustedItemPropertyContentRatingOfEntity:withDefaultValue:
_adjustedItemDateOfEntity:withDefaultValue:
_adjustedItemNonnullDateOfEntity:withDefaultValue:
_adjustedItemPropertyEpisodeNumberOfEntity:withDefaultValue:
_adjustedItemPropertyEQPresetOfEntity:withDefaultValue:
_adjustedItemPropertyFilePathOfEntity:withDefaultValue:
_adjustedPropertyMediaTypeOfEntity:withDefaultValue:
_adjustedItemPropertyMovieInfoOfEntity:withDefaultValue:
_adjustedItemPropertyRatingOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNameOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNumberOfEntity:withDefaultValue:
_adjustedItemPropertyVerifiedIntegrityOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeAdjustmentOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeNormalizationOfEntity:withDefaultValue:
_adjustedPlaylistPropertySeedItemsOfEntity:withDefaultValue:
_adjustedItemPropertyBookletsOfEntity:withDefaultValue:
_unadjustedValueForItemTimeWithDefaultValue:
_unadjustedValueForItemDateWithDefaultValue:
_unadjustedValueForItemPropertyRatingWithDefaultValue:
_unadjustedValueForItemPropertyVolumeAdjustmentWithDefaultValue:
_unadjustedValueForItemPropertyVolumeNormalizationWithDefaultValue:
uniqueIdentifierForLibrary:
setMediaLibraryUniqueIdentifier:
_dataProviderSupportsEntityChangeTracking
updateEntitesToCurrentRevision
supportsEntityChangeTrackingForMediaEntityType:collectionGroupingType:dataProviderClass:
_coalesceEvents
getValues:forProperties:count:
valueForAggregateFunction:onEntitiesForProperty:
propertiesToCache
T@"MPMediaEntityCache",R,N
T@"<MPArtworkDataSource>",R,N
setOnDiskProviders:
T@"NSArray",C,N
setLibrary:
_removeEntitiesWithIdentifiers:count:entityClass:
_backgroundTaskQueue
_cloudUpdateQueue
_backgroundTask
_backgroundTaskCount
_hasScheduledEventPosting
_refreshState
_setValuesWidthLimitedQueue
_entitiesAddedOrRemovedNotificationQueue
_entitiesAddedOrRemovedCoalescingTimer
_entityCache
_artworkDataSource
T@"ML3MusicLibrary",&,N,V_library
T@"MPMediaLibrary",W,N,V_mediaLibrary
T@"MPMediaEntityCache",R,N,V_entityCache
T@"<MPArtworkDataSource>",R,N,V_artworkDataSource
indexInChaptersWithAnyType
_sortByChapterIndex:
countOfChapters
setArtworkRequest:
setArtworkDataSource:
setChapterType:
setIndexInChaptersWithSameType:
setIndexInChaptersWithAnyType:
setPlaybackTime:
durationInMSOfGroupAtIndex:groupingProperty:
setPlaybackDuration:
setRetrievalTime:
titlePropertyOfChapterAtIndex:
urlPropertyOfChapterAtIndex:
urlTitlePropertyOfChapterAtIndex:
setValueLoader:
sortUsingSelector:
stringByAppendingPathComponent:
contentsOfDirectoryAtPath:error:
hasPrefix:
stringByStandardizingPath
rangeOfString:
_externalDeviceConnectionStateDidChangeNotification:
isConnected
connectWithOptions:completion:
connectWithOptions:userInfo:completion:
initWithString:
connectWithOptions:userInfo:
_connectionStateDidChange:error:
isConnecting
connectWithCompletion:
connectWithUserInfo:completion:
isInvalidated
sendCustomData:
sendMediaRemoteCommand:withOptions:completionHandler:
externalDevice
_invalidated
_pendingConnectionHandlers
_externalDevice
T^v,R,N,V_externalDevice
connected
TB,R,N,GisConnected
connecting
TB,R,N,GisConnecting
invalidated
TB,R,N,GisInvalidated
orderingTermWithProperty:
orderingTermWithProperty:direction:
albumsDefaultOrderingTerms
albumsByAlbumArtistDefaultOrderingTerms
artistsDefaultOrderingTerms
composersDefaultOrderingTerms
genresDefaultOrderingTerms
podcastsDefaultOrderingTerms
TVShowEpisodesDefaultOrderingTerms
podcastsEpisodesDefaultOrderingTerms
albumAllArtistsDefaultOrderingTerms
defaultOrderingTerms
ML3OrderingTermsForMPOrderingProperties:directionalityMapping:entityClass:
ML3ItemsQueryInLibrary:orderingTerms:nameBlankProperty:
predicateWithProperty:
ML3OrderingTermsForGroupingType:
containerQueryWithContainer:predicate:orderingTerms:
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
setLimit:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
queryWithLibrary:predicate:orderingTerms:
aggregateQueryWithUnitQuery:foreignPersistentIDProperty:
staticResponse
setStaticResponse:
_staticResponse
T@"MPModelStaticResponse",&,N,V_staticResponse
setAlbumAppData:
_albumAppData
T@"MPMediaLibraryAlbumAppData",&,N,V_albumAppData
_mirroringTitleTextAttributes
initWithString:attributes:
setAttributedText:
setNumberOfLines:
_mirroringCompactDescription
_mirroringCompactDescriptionTextAttributes
setStrokeColor:
setLineWidth:
setFillColor:
setOpacity:
addSublayer:
moveToPoint:
addLineToPoint:
boundingRectWithSize:options:attributes:context:
setAlignment:
defaultFontForTextStyle:
tableCellGrayTextColor
_edgeInsets
_titleLabel
_detailLabel
_borderLayer
initWithResponseSinfDictionary:
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
_ML3PredicateForML3EntityProperty:
predicateWithPredicate:
predicateWithProperty:value:comparison:caseInsensitive:
_ML3PredicateForEntityClass:
_ML3PredicateForEntityTypeSelector:
spotlightPropertyForMPMediaEntityProperty:
predicateWithProperties:searchString:
predicateWithConcatenatedProperties:searchString:
_multiverseIdentifier
T@"MPMediaLibrary",R,N
T@"MIPMultiverseIdentifier",R,N,V_multiverseIdentifier
sectionIndexTitleIndex
hasUnknownSection
setHasUnknownSection:
_sectionIndexTitles
_hasUnknownSection
T@"NSArray",R,C,N,V_sections
TB,N,V_hasUnknownSection
setSectionIndexTitleIndex:
setRange:
isMuted
reload
adjustVolumeValue:
getVolumeValueWithCompletion:
beginIncreasingRelativeVolume
endIncreasingRelativeVolume
beginDecreasingRelativeVolume
endDecreasingRelativeVolume
initializeVolume
reloadWarning
_updateVolumeControlAvailability
setVolumeAudioCategory:
descriptionForWarningState:
volumeControllerDataSource:didChangeVolume:
volumeControllerDataSource:didChangeMuted:
volumeControllerDataSource:didChangeVolumeWarning:
volumeControllerDataSource:didChangeVolumeLabel:
volumeControllerDataSource:didChangeEUVolumeLimit:
volumeControllerDataSource:didChangeEUVolumeLimitEnforced:
volumeControllerDataSource:didChangeVolumeAudioCategory:
volumeControllerDataSource:didChangeVolumeControlAvailability:
volumeControllerDataSource:didChangeVolumeCapabilities:
volumeCapabilities
_volumeChangeCoalescingCount
_volumeCapabilities
T@"<MPVolumeControllerDelegate>",W,N,V_delegate
volumeControlAvailable
TB,R,N,GisVolumeControlAvailable
TI,R,N,V_volumeCapabilities
TB,N,GisMuted
T@"<MPVolumeControllerDataSource>",&,N,V_dataSource
encodeDouble:forKey:
decodeDoubleForKey:
decodeObjectForKey:
indexInChaptersWithSameType
valueLoader
artworkRequest
_chapterType
_indexInChaptersWithAnyType
_indexInChaptersWithSameType
_playbackDuration
_playbackTime
_valueLoader
_artworkRequest
T@,&,N,V_value
T@?,C,N,V_valueLoader
Tq,N,V_chapterType
Td,N,V_playbackTime
Td,N,V_playbackDuration
TQ,N,V_indexInChaptersWithSameType
TQ,N,V_indexInChaptersWithAnyType
T@"MPMediaLibraryArtworkRequest",&,N,V_artworkRequest
T@"MPMediaLibraryArtworkDataSource",W,N,V_artworkDataSource
model
relativeModelObjectForStoreLibraryPersonalization
personalizationScopedPropertiesForProperties:
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
_requiredLightweightPersonalizationPropertiesForModelClass:requestedProperties:
_libraryObjectWithRelativeModelClass:identifierSet:propertySet:
_lightweightPersonalizedObjectWithUnpersonalizedObject:libraryObject:personalizationProperties:overrideLibraryAddedStatus:
objectWithStoreLibraryPersonalizationRelativeModelObject:
_completePersonalizedObjectWithLibraryObject:personalizationProperties:overrideLibraryAddedStatus:
setBookmarkTime:
userPlayCount
setUserPlayCount:
storeUbiquitousIdentifier
sharedUbiquitousPlaybackPositionController
playbackPositionForLocalEntityIdentifier:
ubiquitousIdentifier
setStoreUbiquitousIdentifier:
setHasLibraryLyrics:
setEndpointType:
redownloadParameters
setRedownloadParameters:
accountIdentifier
setAccountIdentifier:
setShouldReportPlayEvents:
setRedownloadable:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:libraryPlaybackPosition:personalizationProperties:
_lightweightPersonalizedLyricsWithUnpersonalizedLyrics:libraryLyrics:identifiers:personalizationProperties:
_lightweightPersonalizedStoreAssetWithUnpersonalizedAsset:libraryAsset:personalizationProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:identifiers:personalizationProperties:
_entityCacheForEntityClass:propertiesToFetch:
unpersonalizedContentDescriptors
setUnpersonalizedContentDescriptors:
itemIndexPathToOverridePropertySet
setItemIndexPathToOverridePropertySet:
translatingContext
setTranslatingContext:
relativeModelClassToMappingResponse
setRelativeModelClassToMappingResponse:
sectionToLibraryAddedOverride
setSectionToLibraryAddedOverride:
_accessSerialQueue
_entityCaches
_unpersonalizedContentDescriptors
_itemIndexPathToOverridePropertySet
_translatingContext
_relativeModelClassToMappingResponse
_sectionToLibraryAddedOverride
T@"MPSectionedCollection",&,N,V_unpersonalizedContentDescriptors
T@"NSDictionary",C,N,V_itemIndexPathToOverridePropertySet
T@"MPMediaLibraryEntityTranslationContext",&,N,V_translatingContext
T@"NSMapTable",C,N,V_relativeModelClassToMappingResponse
T@"NSMutableDictionary",&,N,V_sectionToLibraryAddedOverride
RTCReportingSupported
TB,R,N,GisRTCReportingSupported
initWithType:includeMirroring:
initWithContentViewController:
dismissPopoverAnimated:
popoverControllerDidDismissPopover:
contentViewController
setPopoverContentSize:animated:
routingViewControllerDidShowAirPlayDebugScreen:
initWithType:
setMirroringOnly:
mirroringOnly
_mirroringIncluded
_routingViewController
_mirroringOnly
TB,N,V_mirroringOnly
initWithObject:keyPath:options:handler:
T@"NSString",R,C,N,V_keyPath
maximumResultsPerScope
scopes
initWithEntityQueryResult:forScope:entityTranslationContext:
initWithEntitiesQueryResultContainers:
_runningQuery
T@"MPModelLibrarySearchRequest",C,N,V_request
isEqualToDictionary:
buyParameters
formattedPrice
price
actionTextForType:
relatedMPModelClass
_objectForPropertySet:source:context:
_valueForPropertyKey:source:context:
propertyTranslatorForPropertyKey:
relationshipTranslatorForRelationshipKey:
mapIdentifiersToPropertyTranslator:
mapPropertyKey:toPropertyTranslator:
mapRelationshipKey:ofModelClass:toRelationshipTranslator:
prepareSource:context:
initWithMPModelClass:
prepareSource:context:properties:
setValue:forModelKey:
_objectForRelationshipKey:propertySet:source:context:
classForRelationshipKey:
setSourcePreprocessorBlock:
mapUnsupportedRelationshipKey:
_propertiesToTranslators
_relationshipsToTranslators
_sourcePreprocessorBlock
_unsupportedKeys
_optionalHooks
_MPModelClass
T#,R,N,V_MPModelClass
T#,R,N
_relatedMPModelClass
T#,R,N,V_relatedMPModelClass
initWithDeviceType:deviceSubtype:uid:modelID:
initWithDeviceType:deviceSubtype:uid:
_routeType
_routeSubtype
_uid
_modelID
Tq,R,N,V_routeType
Tq,R,N,V_routeSubtype
T@"NSString",R,N,V_uid
T@"NSString",R,N,V_modelID
predicateWithBlock:
filteredArrayUsingPredicate:
routeSubtypeForMRSubtype:mrType:
deviceSubtype
deviceType
routeSubtypeForMRSubtype:withOverridesFromMRType:
clusterCompositionForOutputDevice:
clusterTypeForMRClusterType:
designatedGroupLeaderName
routeNames
setRouteName:
avRouteDescription
setAVRouteDescription:
isAirPlayingToDevice
groupLeaderAirplayIdentifier
supportsAirPlayGrouping
supportsRemoteControl
numberOfOutputDevices
isRoutingToWirelessDevice
wirelessDisplayRoute
setWirelessDisplayRoute:
passwordType
displayRouteType
setDisplayRouteType:
isPhoneRoute
isW2Route
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioEnabled
isLowLatencyRoute
designatedGroupLeaderRouteUID
isPlayingOnPairedDevice
requiresPassword
clusterType
_picked
_avRouteDescription
_wirelessDisplayRoute
_displayRouteType
_batteryLevel
_canAccessRemoteAssets
_canPlayEncryptedProgressiveDownloadAssets
_canFetchMediaDataFromSender
_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
_pickedOnPairedDevice
_playingOnPairedDevice
_requiresPassword
_carplayRoute
_homePodRoute
_b520Route
_homeTheaterRoute
_lowFidelityRoute
_clusterRoute
_productIdentifier
_groupUID
_designatedGroupLeaderRouteUID
_pickableRouteType
_clusterComposition
_auxiliaryDevices
_playingPairedDeviceName
_clusterType
_originalRouteSubtype
T^v,R,N,G_externalDevice,V_externalDevice
picked
TB,N,GisPicked
routingToWirelessDevice
TB,R,N,GisRoutingToWirelessDevice
Tq,R,N,V_originalRouteSubtype
T@"MPAVRouteConnection",R,N,V_connection
T@"NSString",R,N,V_routeUID
T@"NSString",R,N,V_productIdentifier
T@"NSString",R,N,V_groupUID
T@"NSString",R,N,V_designatedGroupLeaderRouteUID
Tq,R,N,V_pickableRouteType
T@"NSArray",R,N,V_clusterComposition
TB,R,N,V_canAccessRemoteAssets
TB,R,N,V_canPlayEncryptedProgressiveDownloadAssets
TB,R,N,V_canFetchMediaDataFromSender
TB,R,N,V_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
proxyGroupPlayer
TB,R,N,GisProxyGroupPlayer
splitRoute
TB,R,N,GisSplitRoute
splitterCapable
TB,R,N,GisSplitterCapable
T@"MPAVBatteryLevel",R,N,V_batteryLevel
T@"NSArray",R,N,V_auxiliaryDevices
T@"NSString",R,N,V_playingPairedDeviceName
pickedOnPairedDevice
TB,R,N,GisPickedOnPairedDevice,V_pickedOnPairedDevice
playingOnPairedDevice
TB,R,N,GisPlayingOnPairedDevice,V_playingOnPairedDevice
airPlayingToDevice
TB,R,N,GisAirPlayingToDevice
TB,R,N,V_requiresPassword
displayAsPicked
TB,R,N,GisDisplayedAsPicked
airpodsRoute
TB,R,N,GisAirpodsRoute
appleTVRoute
TB,R,N,GisAppleTVRoute
beatsSoloRoute
TB,R,N,GisBeatsSoloRoute
beatsStudioRoute
TB,R,N,GisBeatsStudioRoute
beatsXRoute
TB,R,N,GisBeatsXRoute
beatsLegacyRoute
TB,R,N,GisBeatsLegacyRoute
carplayRoute
TB,R,N,GisCarplayRoute,V_carplayRoute
deviceSpeakerRoute
TB,R,N,GisDeviceSpeakerRoute
hearingDeviceRoute
TB,R,N,GisHearingDeviceRoute
homePodRoute
TB,R,N,GisHomePodRoute,V_homePodRoute
powerbeatsRoute
TB,R,N,GisPowerbeatsRoute
smartAudio
TB,R,N,GisSmartAudio
w1Route
TB,R,N,GisW1Route
airPlayRoute
TB,R,N,GisAirPlayRoute
w2Route
TB,R,N,GisW2Route
h1Route
TB,R,N,GisH1Route
shareableRoute
TB,R,N,GisShareableRoute
headphonesRoute
TB,R,N,GisHeadphonesRoute
stereoPair
TB,R,N,GisStereoPair
tvRoute
TB,R,N,GisTVRoute
tvStickRoute
TB,R,N,GisTVStickRoute
setTopBoxRoute
TB,R,N,GisSetTopBoxRoute
phoneRoute
TB,R,N,GisPhoneRoute
macRoute
TB,R,N,GisMacRoute
b444Route
TB,R,N,GisB444Route
b298Route
TB,R,N,GisB298Route
b419Route
TB,R,N,GisB419Route
b364Route
TB,R,N,GisB364Route
b372Route
TB,R,N,GisB372Route
b515Route
TB,R,N,GisB515Route
b507Route
TB,R,N,GisB507Route
b494Route
TB,R,N,GisB494Route
bB688Route
TB,R,N,GisB688Route
j327Route
TB,R,N,GisJ327Route
b520Route
TB,R,N,GisB520Route,V_b520Route
homeTheaterRoute
TB,R,N,GisHomeTheaterRoute,V_homeTheaterRoute
homeTheaterB520Route
TB,R,N,GisHomeTheaterB520Route
lowLatencyRoute
TB,R,N,GisLowLatencyRoute
lowFidelityRoute
TB,R,N,GisLowFidelityRoute,V_lowFidelityRoute
clusterRoute
TB,R,N,GisClusterRoute,V_clusterRoute
Tq,R,N,V_clusterType
_missingContentIdentifiersInRecommendationsArray:storeItemMetadataResults:
storeItemMetadataForItemIdentifier:
_produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:
setLibraryIdentifierSet:forIdentifierSet:
libraryAddedStatus
setLibraryAddedStatus:
_storeIdentifierSetToLibraryIdentifierSet
_libraryAddedStatus
Tq,N,V_libraryAddedStatus
setProgress:
centerImage
outerRingColor
_centerImageView
_outerRingView
_progressView
_centerImage
_outerRingColor
T@"UIImage",&,N,V_centerImage
T@"UIColor",&,N,V_outerRingColor
setStrokeStart:
setLineCap:
_updateShapePath
_shouldAnimatePropertyWithKey:
setStrokeEnd:
lineWidth
bezierPath
addArcWithCenter:radius:startAngle:endAngle:clockwise:
layerClass
progress
_progress
Td,N,V_progress
removePredicatesForProperty:
setFilterPredicate:forProperty:
containingPlaylist
setFilterPropertyPredicate:
_updatePredicateForProperty:withPropertyPredicate:
collectionByJoiningCollections
activeGeniusPlaylist
currentDevicePurchasesPlaylist
T@"MPMediaPlaylist",R,N
dispatchSync:
_finishWithResponse:error:
_nestedRequestsOperationQueue
initWithRequestedItemIdentifiers:reason:
initWithPreviousParser:additionalStoreItemMetadataResponse:options:sectionBuilder:contentItemBuilder:userIdentity:
_produceRegularResponseWithParser:completion:
initWithRawResponseOutput:options:sectionBuilder:contentItemBuilder:userIdentity:
_produceCarPlayResponseWithParser:withNestedRequestsForEmptyBrickSectionsInOperationQueue:completion:
assertRunningInAccessQueue
isBrick
sectionBuilder
isMemberOfChartSet
_produceResponseWithParser:results:changeDetails:completion:
adjustTimeoutInterval:
_didInitializeTimeoutIntervalAdditions
_errorReportingDisabled
_individualPendingNestedRequestOperation
_nestedRequestOperationsGroup
_requestType
_sectionsToPendingNestedRequestOperations
_timeoutIntervalAdditions
initWithType:transformedType:
transformedPayload
setIdentifier:
attributes
meta
transformedType
_attributes
_meta
_transformedType
_relationships
T@"NSString",R,N,V_transformedType
T@"NSMutableDictionary",R,N,V_relationships
T@"NSString",C,N,V_identifier
T@"NSMutableDictionary",R,N,V_attributes
T@"NSMutableDictionary",R,N,V_meta
relationshipPayloadProvider
setRelationshipPayloadProvider:
_personID
_relationshipPayloadProvider
T@"NSString",C,N,V_personID
T@"<MPMediaKitEntityRelationshipPayloadProvider>",&,N,V_relationshipPayloadProvider
payloadForRelatedEntityWithIdentifierSet:
initWithRelatedMPModelClass:mediaKitType:payloadTransformBlock:
mediaKitType
setMediaKitType:
payloadTransformBlock
_mediaKitType
_payloadTransformBlock
T@"NSString",C,N,V_mediaKitType
T@?,R,N,V_payloadTransformBlock
mapIdentifierCreationKeyPaths:transformBlock:
translatorForKeyPaths:valueTransformBlock:
translatorForKeyPaths:valueTransformFunction:
mapRelationshipKey:toModelClass:mediaKitType:payloadTransform:
createGenericObjectTranslator
mapRelationshipKey:toModelClass:mediaKitType:
mapPropertyKey:toPayloadKeyPath:
mapPropertyKey:toPayloadKeyPaths:valueTransformer:
mapPropertyKey:toPayloadKeyPaths:valueTransformerFunction:
mapRelationshipKey:toModelClass:mediaKitType:attributePayloadTransform:
objectForPropertySet:payload:context:
__tagline_KEY
__movieInfoDictionary_KEY
__clips_KEY
clips
tagline
movieInfoDictionary
T@"NSDictionary",C,D,N
stationGlyphBlock
stationEvents
initWithStartDate:endDate:
containsDate:
__beats1_KEY
__live_KEY
__name_KEY
__editorNotes_KEY
__shortEditorNotes_KEY
__hasExplicitContent_KEY
__stationEvents_KEY
__stationGlyphBlock_KEY
__allowsItemLiking_KEY
__type_KEY
__subtype_KEY
__attributionLabel_KEY
__providerName_KEY
__subscriptionRequired_KEY
__providerUniversalLink_KEY
__providerBundleIdentifier_KEY
__providerID_KEY
__startingAirDate_KEY
__endingAirDate_KEY
stationGlyph
currentStationEvent
upcomingStationEvent
setPlaybackAuthorizationToken:
_playbackAuthorizationToken
TB,D,N,GisBeats1
TB,D,N,GisLive
hasExplicitContent
allowsItemLiking
providerName
subscriptionRequired
TB,D,N,GisSubscriptionRequired
startingAirDate
endingAirDate
T@"NSString",C,N,V_playbackAuthorizationToken
T@"MPRadioStationEvent",R,N
providerID
Tq,R,D,N
noArtPlaceholderImageForMediaType:
initWithObjects:forKeys:count:
_createBackgroundView
setSeparatorStyle:
contentOffset
contentSize
indexPathsForVisibleRows
headerViewForSection:
cellForRowAtIndexPath:
setClippingInsets:
rectForSection:
backgroundViewForSection:
headerBackgroundView
setHeaderBackgroundView:
footerBackgroundView
setFooterBackgroundView:
sectionBackgroundViews
setSectionBackgroundViews:
_headerBackgroundView
_footerBackgroundView
_sectionBackgroundViews
T@"NSMutableDictionary",&,N,V_sectionBackgroundViews
T@"UIView",&,N,V_headerBackgroundView
T@"UIView",&,N,V_footerBackgroundView
T@"MPModelPlaylistEntriesShareEligibilityRequest",C,N,V_request
setModelObjects:
_updateCloudLibraryForPlaylist:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler:
T@"MPModelLibraryAddToPlaylistChangeRequest",C,N,V_request
setShouldRememberBookmarkTime:
setStopTime:
ubiquitousIdentifierWithStoreAdamID:
_requestedPlaybackPositionProperties
episodeKind
_episodeKind
T@"MPModelPodcastEpisodeKind",R,N,V_episodeKind
__feedURL_KEY
__shareURL_KEY
__supportsSubscription_KEY
__author_KEY
feedURL
shareURL
supportsSubscription
author
T@"MPModelPodcastAuthor",&,D,N
setShortDescriptionText:
_requestedRecordLabelProperties
_applicationDidBecomeActiveNotification
_applicationWillResignActiveNotification
cancelVolumeEvent
applicationShouldOverrideHardwareVolumeBehavior
_registerForButtonNotificationsIfNeeded
_unregisterForButtonNotificationsIfNeeded
increaseVolume
_changeVolumeBy:
_calculateButtonRepeatDelay
performSelector:withObject:afterDelay:inModes:
decreaseVolume
handleVolumeDownButton
handleVolumeUpButton
handleVolumeButtonWithType:down:
_volumeUpButtonTouchDown:
_volumeUpButtonTouchUp:
_volumeDownButtonTouchDown:
_volumeDownButtonTouchUp:
setWantsVolumeButtonEvents:
T@"MPVolumeHardwareButtonController",R,N
setActiveDataSource:
activeDataSource
_pendingVolumeChange
_debounceVolumeRepeat
_didRegisterForButtonNotifications
_activeDataSource
T@"<MPVolumeControllerDataSource>",&,N,V_activeDataSource
initWithModel:
_hasBeenPlayed
_model
T@"MPModelObject",R,N,V_model
TB,N,V_hasBeenPlayed
artworkInfoType
imageArtworkInfo
videoArtworkInfo
previewFrameArtworkInfoMatchingAspectRatio:
copyColorWithKind:
colorWithCGColor:
MP_isArtworkColorAnalyzerLightColorForAlgorithm:
setBackgroundColorLight:
setPrimaryTextColor:
setPrimaryTextColorLight:
setSecondaryTextColor:
setSecondaryTextColorLight:
textGradient
imageTraits
responseArray
responseDictionary
setArtworkTemplateItems:
_bestURLForCatalog:kind:size:
setResolvedURLString:
standardDefaults
isLegacyStoreCacheBusterEnabled
ic_URLByAppendingQueryItems:
requestWithURL:cachePolicy:timeoutInterval:
sizeInfo
_bestSizeForImageSizeInfo:catalog:
supportedSizesForCRABSVideoForAspectRatio:
HLSVideoURLForAspectRatio:
hasMaxSupportedSize
maxSupportedSize
supportedSizes
cropStyle
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
CRABSVideoURLMatchingSize:
T@"MPStoreArtworkDataSource",R,N
maxHEICRequestPercentage
setMaxHEICRequestPercentage:
_totalImageRequestCount
_HEICImageRequestCount
_maxHEICRequestPercentage
Td,N,V_maxHEICRequestPercentage
_sectionIndexTitleIndex
_range
T{_NSRange=QQ},N,V_range
TQ,N,V_sectionIndexTitleIndex
initWithBytesNoCopy:length:freeWhenDone:
initWithSeed:
setSeed:
decodeIntForKey:
decodeBytesForKey:returnedLength:
encodeInt:forKey:
encodeBytes:length:forKey:
seed
_seed
T@"NSData",C,N,V_seed
lowestValue
highestValue
numberOfPossibleOutcomes
_source
_lowestValue
_highestValue
_numberOfPossibleOutcomes
Tq,R,N,V_lowestValue
Tq,R,N,V_highestValue
TQ,R,N,V_numberOfPossibleOutcomes
initWithImage:scaledFittingSize:destinationURL:
destinationURL
_resizedScaledSizeForScaledImageSize:scaledFittingSize:
usesExactFittingSizeAsDestinationSize
URLByDeletingLastPathComponent
devicePreferredImageFormat
initWithImage:scaledFittingSize:
main
setScaledFittingSize:
setUsesExactFittingSizeAsDestinationSize:
_usesExactFittingSizeAsDestinationSize
_resizedImage
_destinationURL
_operationGroup
T{CGSize=dd},N,V_scaledFittingSize
TB,N,V_usesExactFittingSizeAsDestinationSize
T@"UIImage",R,N,V_resizedImage
T@"NSURL",R,N,V_destinationURL
T@"NSObject<OS_dispatch_group>",R,N,V_operationGroup
isBackgroundColorLight
primaryTextColor
isPrimaryTextColorLight
secondaryTextColor
isSecondaryTextColorLight
_copyWithClass:
_backgroundColor
_backgroundColorLight
_primaryTextColor
_primaryTextColorLight
_secondaryTextColor
_secondaryTextColorLight
T@"UIColor",&,N,V_backgroundColor
T@"UIColor",&,N,V_primaryTextColor
T@"UIColor",&,N,V_secondaryTextColor
backgroundColorLight
TB,R,N,GisBackgroundColorLight,V_backgroundColorLight
primaryTextColorLight
TB,R,N,GisPrimaryTextColorLight,V_primaryTextColorLight
secondaryTextColorLight
TB,R,N,GisSecondaryTextColorLight,V_secondaryTextColorLight
T@"UIColor",&,D,N
TB,D,N,GisBackgroundColorLight
TB,D,N,GisPrimaryTextColorLight
TB,D,N,GisSecondaryTextColorLight
_addControlEventsForVolumeSlider:
_updateOptimisticValueCache
_findExistingVolumeSlider:
_resetMasterVolumeSlider
_removeControlEventsForVolumeSlider:
_maxOptimisticValue
_resetOptimisticScales
volumeSliderValueChanged:
initWithMass:stiffness:damping:initialVelocity:
initWithControlPoint1:controlPoint2:
setSpringCubicTimingParameters:
initWithDuration:timingParameters:
addAnimations:
addCompletion:
startAnimation
keyEnumerator
_setControlEventsForVolumeSlider:add:
volumeSliderDidEndTracking:
initWithMasterVolumeSlider:individualVolumeSliders:
individualVolumeSliders
syncSliders:
_addControlEventsForVolumeSliders:
_removeControlEventsForVolumeSliders:
masterVolumeSlider
synced
_allSliders
_individualVolumeSliders
_trackingSlider
_optimisticValues
_optimisticScales
_inFlightDisableOptimisticStateRequests
_shouldOverrideTracking
_synced
_masterVolumeSlider
T@"MPVolumeSlider",R,N,V_masterVolumeSlider
TB,R,N,V_synced
enumeratorWithOptions:
_debugDescriptionWithEnumerator:lengths:
stringByPaddingToLength:withString:startingAtIndex:
annotationDelegate
debugDescriptionForSection:
debugDescriptionForItem:inSection:
stringByLeftPaddingToLength:withString:startingAtIndex:
performWithExclusiveAccessAndReturnObject:
_performWithoutRequiringExclusivity:
mediaClip
innerObject
__itemType_KEY
__detailedItemType_KEY
__artistUploadedContentType_KEY
__curator_KEY
__mediaClip_KEY
__movie_KEY
__socialPerson_KEY
__song_KEY
__episode_KEY
__showCreator_KEY
__recordLabel_KEY
T@"MPModelCurator",&,D,N
T@"MPModelMediaClip",&,D,N
T@"MPModelMovie",&,D,N
T@"MPModelSocialPerson",&,D,N
T@"MPModelSong",&,D,N
T@"MPModelTVEpisode",&,D,N
T@"MPModelTVShowCreator",&,D,N
T@"MPModelRecordLabel",&,D,N
detailedItemType
setFormatOptions:
setStationEventID:
setSocialProfileID:
itemPersistentID
redownloadParams
TQ,N,VitemPersistentID
T@"NSString",C,N,Vname
Tq,N,VstoreItemID
T@"NSString",C,N,VredownloadParams
Tq,N,VfileSize
roomID
setRoomID:
_roomID
T@"NSString",C,N,V_roomID
setMusicShow:
setEpisodeNumber:
setExplicitRating:
setCreator:
setNumber:
_requestedEpisodeProperties
systemFiltersPerLibrary
_initWithLibrary:
_cloudLibraryAvailabilityDidChange:
_updateFilters
filtersForLibrary:
shouldExcludePurchaseHistoryContent
_shouldExcludePurchaseHistoryContent
addProperties:
writeString:forTag:
hasSearchString
propertiesCount
clearProperties
propertiesAtIndex:
T@"NSString",&,N,V_searchString
T@"NSMutableArray",&,N,V_properties
MPMediaLibraryDataProviderSystemML3CoercedString
_initInstanceVariableOnce
hasGeniusFeatureEnabled
hasGeniusDataAvailable
_seedCloudPlaylistWithTrack:container:completionBlock:
_localizedGeniusErrorForError:geniusEnabled:
populateContainer:withSeedTrack:completionBlock:
playlistControllerWithSeedTracks:error:
tracksFromClusterForCount:error:
geniusTracksForSeedTrack:error:
hasCellularDataCapability
preferredMusicLowBandwidthResolution
sharedMonitor
networkType
hasWiFiCapability
hasWAPICapability
_localizedCloudGeniusErrorForError:
loadGeniusItemsForSagaID:completionHandler:
initWithStoreAccountIdentifier:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
_currentRevision
updatePropertyValuesInEntityWithIdentifier:dataProviderEntityClass:deleted:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:
_modelObjectWithUniqueContentItemIDForModelObject:
setPlaylistEntry:
shouldUsePlaylistEntry
setShouldUsePlaylistEntry:
_baseContentItemIDToOccurrenceCount
_tvEpisodeBuilder
_tvSeasonBuilder
_tvShowBuilder
_shouldUsePlaylistEntry
TB,N,V_shouldUsePlaylistEntry
sourceKeyPaths
valueTransformFunction
_sourceKeyPaths
_valueTransformFunction
T@"NSArray",R,N,V_sourceKeyPaths
T^?,R,N,V_valueTransformFunction
MPStoreRadioStreamFlavorFromICStoreRadioStreamFlavor:
streamProtocol
MPStoreRadioStreamProtocolFromICStoreRadioStreamProtocol:
streamURL
initWithiTunesCloudStoreRadioStreamAssetInfo:
isITunesStoreStream
setITunesStoreStream:
_iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
_resolveRequestItemsWithSOD:
_getNextBatchBatch
_renewPlaybackAuthorizationTokensForBatch:progressHandler:
playbackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
shouldRenewPlaybackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
_itemIDsFromRequestIdentifiers
_notifyBatchProgressWithResponseDictionary:tokenHalfLifeDuration:error:finalResponse:progressHandler:
valueForBagKey:
removeObjectsInArray:
requestItemCount
T@"NSUUID",R,C,N
T@"NSProgress",R,N
initWithItemIdentifiers:personID:requestContext:
_requestContext
_callOutQueue
_itemIdentifiersForRequest
_requestItemCount
_isCancelled
_requestIdentifier
_requestPropertySet
initWithRouteDescription:
initWithOutputDevice:
_leftPercentage
_rightPercentage
_singlePercentage
_casePercentage
T@"NSNumber",R,N,V_leftPercentage
T@"NSNumber",R,N,V_rightPercentage
T@"NSNumber",R,N,V_singlePercentage
T@"NSNumber",R,N,V_casePercentage
initWithFloat:
representedObjects
setLibraryResponse:
setRepresentedObjectResults:
supportsModelClass:
setPersistentIDs:
personalizedResponseForContentDescriptor:requestedProperties:
T@"MPStoreLibraryPersonalizationRequest",C,N,V_request
T@"MPMediaLibraryView",N,V_libraryView
T{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}},N,V_persistentIDs
initWithSuiteName:
registerDefaults:
_migrateUserDefaults
_accountStoreChangedNotification:
_loadAccountProperties
ams_accountFlagValueForAccountFlag:
ams_setAccountFlagValue:forAccountFlag:
ic_sharedAccountStore
ams_saveAccount:
stringForKey:
settingWithName:
setBool:forKey:
setPrivateListeningEnabled:
updatePropertiesForUserIdentity:usingBlock:
integerForKey:
preferredMusicHighBandwidthResolution
preferredMusicDownloadResolution
spatialAudioPreference
setSpatialAudioPreference:
prefersSpatialDownloads
floatForKey:
doubleForKey:
resetAllInternalSettings
setPreferredMusicLowBandwidthResolution:
getPropertiesForUserIdentity:error:
privateListeningEnabled
isDevicePrivateListeningEnabled
T@"MPPlaybackUserDefaults",R,N
autoPlayEnabledForUserIdentity:
setAutoPlayEnabled:forUserIdentity:
musicEQSetting
musicRepeatType
setMusicRepeatType:
musicShuffleType
setMusicShuffleType:
setPlaybackAuthorizationTokenHalfLifeDuration:
isPrivateListeningEnabled
setPreferredMusicHighBandwidthResolution:
setPreferredMusicDownloadResolution:
prefersSpatialAudio
setPrefersSpatialAudio:
setPrefersSpatialDownloads:
showLosslessAudio
setShowLosslessAudio:
preferredVideoLowBandwidthResolution
preferredVideoHighBandwidthResolution
allowsHighQualityMusicStreamingOnCellular
disableAssetCaching
progressiveDownloadAssetRatio
disableAudioAnalysis
disableMiniSINF
disablePeriodicStateRestore
disableQHO
forceMusicResolution
forcedMusicResolution
forceMusicStreaming
forceLibrarySupplementalContexts
showDebugUI
maximumQueueHandOffSize
speakerRouteEnabled
activationDelay
forwardBufferDuration
prerollEnabled
preferredVideoDownloadResolution
_iPodUserDefaults
_videoUserDefaults
_mediaPlaybackCoreUserDefaults
_airplayUserDefaults
_accountsQueue
_notifyTokens
_preferredVideoDownloadResolution
T@"MPPlaybackEQSetting",R,N
T@"NSNumber",C,N,GisPrivateListeningEnabled
devicePrivateListeningEnabled
T@"NSNumber",R,C,N,GisDevicePrivateListeningEnabled
Tq,R,N,V_preferredVideoDownloadResolution
settingWithPreset:
_initWithPreset:
allSettings
avPreset
preset
_preset
Tq,R,N,V_preset
Ti,R,N
ic_storeAccountForStoreAccountID:error:
weakObjectsHashTable
_addCategory:
_updateVisibility
_appAdoptsUISceneLifecycle
_updateVisibilityForVolumeDisplays:inWindowScene:
_setSystemVolumeHUDEnabled:forAudioCategory:
setSystemVolumeHUDEnabled:forAudioCategory:
T@"MPVolumeHUDController",R,N
mainContext
registerView:inContext:
unregisterView:inContext:
_scenes
_displays
_categories
_needsUpdate
_shouldAccessCache
getUserQueueModificationsDisabledWithReply:
onSystemServer:
openURL:options:completionHandler:
sharedCache
hasCachedData
openToPlayQueueDescriptor:
catalogURLWithStoreURLBag:
_produceResponseWithParser:results:error:
_allowedFCKinds
_copyWithPlaybackResponseClass:
dialogDictionary
fileAssetInfoList
hlsAssetInfo
isLiveRadioStream
radioStreamAssetInfoList
suzeLeaseID
onlineSubscriptionKeysRequired
_dialogDictionary
_fileAssetInfoList
_hlsAssetInfo
_liveRadioStream
_radioStreamAssetInfoList
_suzeLeaseID
_subscriptionRequired
_onlineSubscriptionKeysRequired
T@"NSDictionary",R,C,N,V_dialogDictionary
T@"NSDate",R,C,N,V_expirationDate
T@"NSArray",R,C,N,V_fileAssetInfoList
T@"MPStoreHLSAssetInfo",R,N,V_hlsAssetInfo
liveRadioStream
TB,R,N,GisLiveRadioStream,V_liveRadioStream
T@"NSArray",R,C,N,V_radioStreamAssetInfoList
T@,R,N,V_suzeLeaseID
TB,R,N,GisSubscriptionRequired,V_subscriptionRequired
TB,R,N,V_onlineSubscriptionKeysRequired
setDialogDictionary:
setFileAssetInfoList:
setHlsAssetInfo:
setLiveRadioStream:
setRadioStreamAssetInfoList:
setSuzeLeaseID:
setSubscriptionRequired:
setOnlineSubscriptionKeysRequired:
T@"MPStoreHLSAssetInfo",&,D,N
TB,D,N,GisLiveRadioStream
T@,&,D,N
_cloudServiceStatusControllerWithUserIdentity:createIfRequired:
_copyObservationStateFrom:
_userIdentityStoreDidChange:
_enableICMLErrorReasonChange:
autoupdatingActiveAccount
sharedMonitorForIdentity:
beginObservingSubscriptionStatusWithHandler:
_allowsMusicSubscriptionDidChange:
_updateSubscriptionAvailability
endObservingSubscriptionStatusWithToken:
_calculateShouldPlaybackRequireSubscriptionLeaseReturningLikelyToReachRemoteServer:
isActiveLocker
_updateMatchStatus
_performBlockOnControllerHandlingTheSameAccount:
_currentCloudLibraryEnabled
_currentPurchaseHistoryEnabled
_beginObservingCloudLibraryEnabled
_beginObservingMatchStatus
refreshSubscriptionStatus
_endObservingCloudLibraryEnabled
_endObservingMatchStatus
isRemoteServerLikelyReachable
isActive
initWithStoreRequestContext:
setInteger:forKey:
performRequestWithResponseHandler:
allowsMusicSubscription
_updateSubscriptionAvailabilityWithValue:
setAllowsExpiredBags:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
T@"MPCloudServiceStatusController",R,N
_cloudClientAuthenticationDidChange
hasLoadedSubscriptionAvailability
isSubscriptionAvailable
lastKnownFairPlaySubscriptionStatus
matchStatus
shouldPlaybackRequireSubscriptionLease
beginObservingCloudLibraryEnabled
beginObservingMatchStatus
refreshMusicSubscriptionStatus
beginObservingFairPlaySubscriptionStatus
beginObservingPurchaseHistoryEnabled
beginObservingSubscriptionAvailability
endObservingCloudLibraryEnabled
endObservingMatchStatus
endObservingFairPlaySubscriptionStatus
endObservingPurchaseHistoryEnabled
endObservingSubscriptionAvailability
lastKnownSubscriptionFairPlayKeyStatus
serialQueue
_cloudLibraryStatusAccessQueue
_cloudLibraryStatus
_cloudLibraryObservationCount
_hasLoadedMatchStatus
_hasLoadedSubscriptionAvailability
_subscriptionStatusMonitor
_subscriptionStatusObservationToken
_matchStatusObservationCount
_matchStatus
_observingNetworkReachability
_hasSubscriptionLease
_shouldPlaybackRequireSubscriptionLease
_subscriptionAvailable
_lastKnownSubscriptionFairPlayKeyStatus
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"SSVFairPlaySubscriptionStatus",R,N
T@"ICMusicSubscriptionFairPlayKeyStatus",R,N,V_lastKnownSubscriptionFairPlayKeyStatus
subscriptionAvailable
TB,R,N,GisSubscriptionAvailable
T@"SSVSubscriptionStatus",R,C,N,V_subscriptionStatus
T@"ICMusicSubscriptionStatus",R,C,N
cloudLibraryEnabled
TB,R,N,GisCloudLibraryEnabled
purchaseHistoryEnabled
TB,R,N,GisPurchaseHistoryEnabled
_parsedElements:
_parsedContentNode:additionalAttributesFromParent:
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:
clearFilterPredicates
filterPredicatesAtIndex:
clearStaticEntityIdentifiers
staticEntityIdentifiersAtIndex:
filterPredicatesType
staticEntityIdentifiersType
setHasGroupingType:
hasGroupingType
groupingTypeAsString:
StringAsGroupingType:
setHasFilteringDisabled:
hasFilteringDisabled
setHasEntityOrder:
hasEntityOrder
entityOrderAsString:
StringAsEntityOrder:
setHasStaticEntityType:
hasStaticEntityType
staticEntityTypeAsString:
StringAsStaticEntityType:
setHasIncludeNonLibraryEntities:
hasIncludeNonLibraryEntities
mergeFrom:
setStaticEntityIdentifiers:
_entityOrder
_filterPredicates
_groupingType
_staticEntityIdentifiers
_includeNonLibraryEntities
_has
T@"NSMutableArray",&,N,V_filterPredicates
Ti,N,V_groupingType
TB,N,V_filteringDisabled
Ti,N,V_entityOrder
T@"NSMutableArray",&,N,V_staticEntityIdentifiers
Ti,N,V_staticEntityType
TB,N,V_includeNonLibraryEntities
previewDuration
previewURL
tokenWithQueue:owner:
_owner
tokenWithKey:owner:
_requestedStoreAssetProperties
secondsFromGMT
mediaLibraryForItemIdentifiers:
initWithFileAsset:sourceItemIdentifiers:
sourceItemIdentifiers
setSourceItemIdentifiers:
fileAsset
setFileAsset:
_sourceItemIdentifiers
_fileAsset
T@"MPIdentifierSet",&,N,V_sourceItemIdentifiers
T@"MPModelFileAsset",&,N,V_fileAsset
setOrderingDirectionMappings:
_entityLimit
_itemPropertiesToFetch
_collectionPropertiesToFetch
_useSections
_ignoreSystemFilterPredicates
_ignoreRestrictionsPredicates
_includeEntitiesWithBlankNames
T@"NSSet",C,N,V_filterPredicates
T@"NSSet",C,N,V_itemPropertiesToFetch
T@"NSSet",C,N,V_collectionPropertiesToFetch
Tq,N,V_groupingType
TQ,N,V_entityLimit
TQ,N,V_entityOrder
T@"NSArray",C,N,V_orderingProperties
TB,N,V_ignoreSystemFilterPredicates
TB,N,V_ignoreRestrictionsPredicates
TB,N,V_includeEntitiesWithBlankNames
T@"NSDictionary",C,N,V_orderingDirectionMappings
_actionTypeString
initWithAction:
action
_action
Tq,R,N,V_action
parsedStoreItemsImportProperties
_associatedElementForPropertyDict:
_importPropertiesDictFromImportMetadataDict:
_importElements
T@"NSArray",R,N,V_importElements
assetLoadError
setAssetLoadError:
assetLoadDuration
setAssetLoadDuration:
blockingSecureKeyLoadCount
setBlockingSecureKeyLoadCount:
maximumSecureKeyLoadDuration
setMaximumSecureKeyLoadDuration:
secureKeyLoadCount
setSecureKeyLoadCount:
secureKeyError
setSecureKeyError:
tracklistLoadError
setTracklistLoadError:
hadBlockingTracklistLoad
setHadBlockingTracklistLoad:
playbackEndError
setPlaybackEndError:
endReasonType
setEndReasonType:
startupState
setStartupState:
interfaceTypeChangeCount
setInterfaceTypeChangeCount:
startInterfaceType
setStartInterfaceType:
_hadBlockingTracklistLoad
_assetLoadError
_assetLoadDuration
_blockingSecureKeyLoadCount
_maximumSecureKeyLoadDuration
_secureKeyLoadCount
_secureKeyError
_tracklistLoadError
_playbackEndError
_endReasonType
_startupState
_interfaceTypeChangeCount
_startInterfaceType
T@"NSError",C,N,V_assetLoadError
Td,N,V_assetLoadDuration
Tq,N,V_blockingSecureKeyLoadCount
Td,N,V_maximumSecureKeyLoadDuration
Tq,N,V_secureKeyLoadCount
T@"NSError",C,N,V_secureKeyError
T@"NSError",C,N,V_tracklistLoadError
TB,N,V_hadBlockingTracklistLoad
T@"NSError",C,N,V_playbackEndError
Tq,N,V_endReasonType
Tq,N,V_startupState
Tq,N,V_interfaceTypeChangeCount
Tq,N,V_startInterfaceType
parentGroup
subgroupIndex
__reason_KEY
__utterance_KEY
__backedByStoreItemMetadata_KEY
__parentGroup_KEY
__subgroupIndex_KEY
subgroup
utterance
T@"MPModelForYouRecommendationGroup",W,D,N
backedByStoreItemMetadata
TB,D,N,GisBackedByStoreItemMetadata
T@"MPModelForYouRecommendationGroup",R,N
libraryAddStatusObserverConfiguration
supportsLibraryAddStatusObservation
requiredLibraryAddStatusObservationProperties
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N
hasCleanContent
_avControllerBufferingStateDidChangeNotification:
_avControllerItemWillChangeNotification:
_avControllerDidReloadWithPlaybackContextNotification:
_avControllerWillReloadWithPlaybackContextNotification:
_avItemAssetLoadedNotification:
_avItemTypeDidChangeNotification:
_avItemSecureKeyDeliveryRequestDidFinishNotification:
rtcReportingAssetType
_preparedSummaryEventForAVItem:
_configureStartupStateForSummaryEvent:withItem:
_setPerceivedTotalStartupTimeForItem:withSummaryEvent:
_configureBaseEventPropertiesForEvent:
_reportingSessionForAVItem:
_initializeReportingSession:forAVItem:
_completeSetupForReportingSession:avItem:
_isAVItemReadyForReportingSessionInitialization:
_isAVItemReadyForReportingSessionSetupCompletion:
setError:
_completeSetupForReportingSession:avItem:fallbackQueueFeeder:
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
_uniqueIdentifierForAVItem:
_newReportingSession
_handleDeallocationForUniqueIdentifier:
setHandler:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
_networkTypeDidChangeNotification:
_currentInterfaceType
_isReloadingWithPlaybackContext
_tracklistStartUptime
_tracklistSummaryEvent
_uniqueIdentifierToReportingSession
_uniqueIdentifierToSummaryEvent
T@"NSString",R,C,N,V_clientName
Ti,R,N,V_clientType
Tq,R,N,V_clientVersion
T@"MPAVController",R,W,N,V_player
T@?,C,N,V_handler
playlistName
shouldCreatePlaylist
playlistEntries
parentPlaylist
playlistDescription
isPublicPlaylist
isVisiblePlaylist
isCuratorPlaylist
isOwner
authorStoreIdentifier
didSetPlaylistUserImage
playlistUserImage
localPersistenceResponseHandler
completeResponseHandler
createPlaylistWithPersistentID:properties:trackList:completionHandler:
requiredPlaylistEntryProperties
setLocalPersistenceResponseHandler:
setCompleteResponseHandler:
_localPersistenceResponseHandler
_completeResponseHandler
T@"MPModelLibraryPlaylistEditChangeRequest",C,N,V_request
T@?,C,N,V_localPersistenceResponseHandler
T@?,C,N,V_completeResponseHandler
proxyForObjects:protocol:
setObjects:
setProtocol:
objects
selector
protocol
signatureWithObjCTypes:
proxyForObject:protocol:
_protocol
_objects
T@"Protocol",&,N,V_protocol
T@"NSHashTable",&,N,V_objects
setAddState:
setRelatedModelObjects:
setToken:
setKeepLocalState:
addState
relatedModelObjects
keepLocalState
registerTransientAddState:forModelObjects:relatedModelObjects:
unregisterTransientState:
performLibraryImportChangeRequest:withRelatedModelObjects:completion:
performKeepLocalChangeRequest:withRelatedModelObjects:completion:
registerTransientKeepLocalState:forModelObjects:relatedModelObjects:
transientAddStateForModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:
performLibraryImportChangeRequest:withRelatedModelObjects:
performKeepLocalChangeRequest:withRelatedModelObjects:
_notificationQueue
_registeredTransientState
_addState
_keepLocalState
_modelObjects
_relatedModelObjects
Tq,N,V_addState
Tq,N,V_keepLocalState
T@"MPSectionedCollection",C,N,V_modelObjects
T@"MPSectionedCollection",C,N,V_relatedModelObjects
T@"NSUUID",C,N,V_token
initWithPlayerID:
initWithIdentifier:displayName:
localOrigin
localClient
initWithOrigin:client:player:
infoCenterForPlayerPath:
defaultPlayer
initWithPlayerPath:
strongToWeakObjectsMapTable
localPlayerPath
_initializeNowPlayingInfo
_onQueue_stateDictionary
resignActiveSystemFallback
commandCenterForPlayerPath:
serviceQueue
_becomeActiveWithCompletion:
becomeActive
_onQueue_registerPlaybackQueueDataSourceCallbacks:
_onQueue_registerLyricsDelegateCallbacks:
invalidatePlaybackQueueWithCompletion:
_invalidatePlaybackQueueImmediatelyWithCompletion:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
playbackQueueDataSource
nowPlayingInfoCenter:artworkCatalogForContentItem:
_onDataSourceQueue_artworkCatalogForContentItem:
msv_errorWithDomain:code:debugDescription:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
replaceObjectsInRange:withObjectsFromArray:
_onDataSourceQueue_getContentItemIDsInRange:completion:
_contentItemForIdentifier:alreadyOnDataSourceQueue:
nowPlayingInfoCenter:contentItemForID:
performSuppressingChangeNotifications:
_contentItemIDsInRange:itemsRange:
playbackQueueIdentifierForNowPlayingInfoCenter:
_contentItemForIdentifier:
_mergeContentItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
requestWithIdentifier:preferredSessionType:
stringByAppendingPathExtension:
responseWithIdentifier:sessionType:data:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
_onQueue_pushContentItemsUpdate
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
nowPlayingInfoCenter:contentItemIDForOffset:
contentItemForOffset:
nowPlayingInfoCenter:didEndLyricsEvent:
_onQueue_clearPlaybackQueueDataSourceCallbacks
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
sessionType
_getTransportablePlaybackSessionRepresentationWithIdentifier:preferredSessionType:completion:
_createPlaybackQueueForRequest:
_childContentItemForContentItem:index:
_initWithMediaRemoteContentItem:
_getMetadataForContentItem:completion:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:lyricsForContentItem:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
setInfo:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
setAvailableLanguageOptions:
setCurrentLanguageOptions:
infoCenterForPlayerID:
setPlaybackState:
playerID
becomeActiveSystemFallback
setRepresentedApplicationBundleIdentifier:
setPlaybackQueueDataSource:
setLyricsDelegate:
lyricsDelegate
invalidatePlaybackQueue
nowPlayingContentItem
setNowPlayingContentItem:
setDataSourceQueue:
_becomeActiveIfPossibleWithCompletion:
playbackQueueDelegate
setPlaybackQueueDelegate:
playerPath
representedApplicationBundleIdentifier
dataSourceQueue
_nowPlayingInfo
_queuedNowPlayingInfo
_convertedNowPlayingInfo
_pushDate
_publishedContext
_mutatedPlaybackQueueRequests
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIdentifiers
_contentItems
_nowPlayingContentItem
_playbackState
_utilityQueue
_artworkResizeUtility
_contentItemInvalidationTimer
_playbackQueueDataSource
_lyricsDelegate
_callbacks
_fallbackActivity
_playbackQueueDelegate
_playerPath
_representedApplicationBundleIdentifier
_dataSourceQueue
T@"<MPNowPlayingPlaybackQueueDelegate>",W,N,V_playbackQueueDelegate
T@"MRPlayerPath",R,N,V_playerPath
T@"NSString",C,N,V_representedApplicationBundleIdentifier
T@"<MPNowPlayingPlaybackQueueDataSource>",W,N
T@"MPNowPlayingContentItem",&,N
T@"<MPNowPlayingInfoLyricsDelegate>",W,N
T@"NSObject<OS_dispatch_queue>",&,N,V_dataSourceQueue
nowPlayingInfo
preferredSessionType
_preferredSessionType
T@"NSString",R,N,V_preferredSessionType
_sessionType
_data
T@"NSString",R,N,V_sessionType
T@"NSData",R,N,V_data
_indexProperties
_lookupPropertyForSelector:result:
resolveInstanceMethod:
_isModelKey:
valueForModelKey:
valueForUndefinedKey:
setValue:forUndefinedKey:
_sanitizedStorage
setWithCapacity:
copyWithIdentifiers:propertySet:
copyWithPropertySet:
hasLoadedValuesForPropertySet:
bidirectionalDictionary
keyForObject:
_modelKeyForPropertySelector:
initWithIdentifiers:
copyWithIdentifiers:
originalIdentifierSet
mergeWithObject:
_originalIdentifierSet
_isFinalized
T@"MPIdentifierSet",R,N
_initWithModelClass:
_kindWithModelClass:cacheKey:block:
T@"MPModelKind",R,N
_modelClass
T#,R,N,V_modelClass
shortValue
unsignedCharValue
unsignedShortValue
unsignedLongValue
numberWithShort:
numberWithLong:
numberWithUnsignedChar:
numberWithUnsignedLong:
uppercaseString
replaceCharactersInRange:withString:
setArtwork:
artworkData
setArtworkData:
_artworkIdentifier
_artwork
_artworkData
T@"NSString",C,N,V_artworkIdentifier
T@"MPMediaItemArtwork",&,N,V_artwork
T@"NSData",&,N,V_artworkData
_onQueue_pushNowPlayingInfoAndRetry:
setNowPlayingInfo:
libraryRemovalSupportedOptions
requiredLibraryRemovalProperties
supportsLibraryRemoval
newKeepLocalStatusObserverConfiguration
eventWithCommand:options:
actionWithTitle:type:commandEvent:
initWithMediaRemoteType:
event
mediaRemoteType
initWithMediaRemoteCommandType:
_mediaRemoteType
T@"MRSendCommandHandlerDialogAction",R,C,N,V_mediaRemoteType
T@"MPRemoteCommandEvent",R,N
dialogWithTitle:message:
localizedMessage
actions
setLocalizedMessage:
msv_map:
T@"MRSendCommandHandlerDialog",R,C,N,V_mediaRemoteType
carrierBundlingStatusType
initWithICSubscriptionStatus:
isDefinitiveInformation
hasPlaybackCapability
requiresCarrierManualVerification
shouldUseLease
shouldUseAccountLessStreaming
shouldRequirePlaybackAuthorizationTokensForPlayback
_subscriptionStatusObject
_definitiveInformation
_hasPlaybackCapability
_requiresCarrierManualVerification
_shouldUseLease
_shouldUseAccountLessStreaming
_shouldRequirePlaybackAuthorizationTokensForPlayback
definitiveInformation
TB,R,N,GisDefinitiveInformation,V_definitiveInformation
TB,R,N,V_hasPlaybackCapability
TB,R,N,V_requiresCarrierManualVerification
TB,R,N,V_shouldUseLease
TB,R,N,V_shouldUseAccountLessStreaming
TB,R,N,V_shouldRequirePlaybackAuthorizationTokensForPlayback
initWithHomeSharingLibrary:
homeSharingLibrary
browser:didAddLibrary:
browser:didRemoveLibrary:
homeSharingGroupID
homeSharingBrowserWithGroupID:
_determineHomeSharingGroupIDWithCompletionHandler:
defaultStore
urlForRequest:
_homeSharingGroupIDDidChangeNotification:
_homeSharingLibraryDidUpdateRevisionNumber:
_homeSharingLibraryDidBecomeUnavailable:
isSupportedSharingVersion
hs_homeSharingErrorWithCode:userInfo:
connectionState
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithPath:
_fetchTokensForAuthorizedDSIDs
removeAllRentalsForDatabaseID:
removeItemAtPath:error:
buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:progressHandler:
_fillContainerForQueryCriteria:completionBlock:
requestWithDatabaseID:itemID:
setValue:forArgument:
responseCode
sendRequest:withResponseHandler:
punctuationCharacterSet
stringByTrimmingCharactersInSet:
requestWithDatabaseID:itemID:format:
initWithItemID:homeSharingID:rentalID:accountID:
setDataProvider:
_tokenDataForAccountID:
initWithKeybagURL:accountID:accountTokenData:downloaderAccountID:downloaderAccountTokenData:familyAccountID:
initWithKeybagURL:accountID:accountTokenData:
fileURLWithPath:
isScanningForLibraries
checkForChangesInHomeSharingLibrary:completionHandler:
initWithLength:
mutableBytes
determineGroupIDWithCompletionHandler:
deviceGUID
authorizedDSIDs
requestWithDSID:deviceGUID:
tokenData
setTokenData:forAuthorizedDSID:
fillContainerForHomeSharingLibrary:containerID:completionHandler:
setRentalPlaybackStartDateForItemID:
_homeSharingLibrary
_tokenDataForDSIDs
_loadedContainerPIDs
_blocksForLoadingContainerPIDs
_containerFillQueue
T@"HSHomeSharingLibrary",R,N,V_homeSharingLibrary
setShortName:
setCuratorKind:
setCuratorSubKind:
setBrandLogoArtworkCatalogBlock:
_requestedCuratorProperties
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
_elapsedTime
_live
_rate
TB,R,N,GisLive,V_live
Tf,R,N,V_rate
Tq,R,N,V_state
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
_index
T@"NSString",R,N,V_artworkIdentifier
Tq,R,N,V_index
Tq,R,N,V_count
removedItemIdentifiers
_removedItemIdentifiers
T@"NSDictionary",R,N,V_insertedDescriptors
T@"NSArray",R,N,V_removedItemIdentifiers
setHasShuffleMode:
setHasContentItemIDs:
setContentItemIDs:
_hasQueueDescriptor
_hasNowPlaying
_hasTimeSnapshot
_hasRepeatMode
_hasShuffleMode
_hasContentItemIDs
_queueDidChange
_itemDidEnd
_queueDidEnd
_timeSnapshot
_contentItemIDs
TB,N,V_hasQueueDescriptor
T@"MPMusicPlayerQueueDescriptor",&,N,V_queueDescriptor
TB,N,V_hasNowPlaying
T@"MPMusicPlayerControllerNowPlaying",&,N,V_nowPlaying
TB,N,V_hasTimeSnapshot
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",&,N,V_timeSnapshot
TB,N,V_hasRepeatMode
TB,N,V_hasShuffleMode
Tq,N,V_shuffleMode
TB,N,V_hasContentItemIDs
T@"NSArray",C,N,V_contentItemIDs
TB,N,V_queueDidChange
TB,N,V_itemDidEnd
TB,N,V_queueDidEnd
registerClass:
baseURL
client
URLProtocol:didFailWithError:
initWithURL:MIMEType:expectedContentLength:textEncodingName:
allHTTPHeaderFields
securityInfoForURL:
setAllHTTPHeaderFields:
URLProtocol:wasRedirectedToRequest:redirectResponse:
URLProtocolDidFinishLoading:
canInitWithRequest:
canonicalRequestForRequest:
startLoading
stopLoading
springCubicTimingParameters
standardTimingParameters
cubicTimingParameters
_springCubicTimingParameters
T@"UICubicTimingParameters",C,N,V_springCubicTimingParameters
_basicAnimationForView:withKeyPath:
timingParameters
_mediaTimingFunction
setTimingFunction:
standardSpringAnimator
initWithLibrary:identifier:entityType:artworkType:mediaType:
_onQueue_musicLibrary
_onQueue_updateTokens
artworkType
entityType
retrievalTime
retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:
artworkTokenParameters
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSource
libraryArtwork
setLibraryArtwork:
musicLibrary
clearFailedFetchableToken
promoteFetchableArtworkTokenIfNeeded
_mediaType
_hasRetrievedTokens
_retrievalTime
_availableArtworkToken
_fetchableArtworkToken
_fetchableArtworkSource
_entityType
_artworkType
_libraryArtwork
Tq,R,N,V_artworkType
TQ,R,N,V_libraryID
Tq,R,N,V_entityType
T@"MPMediaLibraryArtwork",R,N,V_libraryArtwork
Td,N,V_retrievalTime
T@"NSString",C,N,V_availableArtworkToken
T@"NSString",C,N,V_fetchableArtworkToken
T@"NSNumber",C,N,V_fetchableArtworkSource
isArtworkTokenAvailable:
initWithToken:artworkType:musicLibrary:
availableArtworkWithRequest:
loadArtworkForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
deprioritizeArtworkRequestForEntityPersistentID:entityType:artworkType:artworkSourceType:
sourceType
loadArtworkInfoForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
imageFileURLForSize:
fileURLForSize:
fileURLForEffect:
systemConfiguration
supportedSizesForMediaType:artworkType:
interestDictionary
setInterestDictionary:
artworkExistsForRequest:
needsToFetchArtworkForRequest:
fetchArtworkForRequest:completionHandler:
cancelFetchingArtworkForRequest:
fetchArtworkInfoForRequest:completionHandler:
originalFileURL
imageFileURLForEffect:
validSizes
effectsMetadata
setEffectsMetadata:
stateLock
_stateLock
_validSizes
T@"MPMediaLibraryArtworkRequest",W,N,V_artworkRequest
T@"ML3Artwork",&,N,V_artwork
T{os_unfair_lock_s=I},R,N,V_stateLock
T@"NSArray",R,N,V_validSizes
MP_artworkType
setSagaAccountID:
sagaLastItemPlayDataUploadDate
setSagaLastItemPlayDataUploadDate:
sagaLastPlaylistPlayDataUploadDate
setSagaLastPlaylistPlayDataUploadDate:
sagaDatabaseUserVersion
setSagaDatabaseUserVersion:
storefrontIdentifier
setStorefrontIdentifier:
setSagaOnDiskDatabaseRevision:
sagaLastLibraryUpdateTime
setSagaLastLibraryUpdateTime:
sagaLastSubscribedContainersUpdateTime
setSagaLastSubscribedContainersUpdateTime:
clearSagaCloudAccountID
clearSagaLastItemPlayDataUploadDate
clearSagaLastPlaylistPlayDataUploadDate
T@"NSNumber",C,N
initWithPlaylist:
T@"MPModelPlaylist",R,N,V_playlist
prefersInMemoryDatabase
initWithMemory
URLsForDirectory:inDomains:
URLByDeletingPathExtension
initWithURL:error:
_initWithDatabaseCreationBlock:
database:didFinishImportRequest:
database:didFailImportRequest:withErrror:
_payloadForIdentifierSet:outError:
JSONObjectWithData:options:error:
modelGenericObjectFromObject:playbackAuthorizationToken:
statementWithString:error:
bindStringValue:toParameterNamed:
executeStatement:error:
prioritizedStoreStringIdentifiersForPersonID:
resultsForStatement:
nextObjectWithError:
stringValueAtColumnIndex:
_assetsMatchingIdentifierSet:query:
_playbackAuthorizationTokenForIdentifier:trustID:
doubleValueAtColumnIndex:
initWithSQLRowResult:
bindInt64Value:toParameterNamed:
jsonValueAtColumnIndex:error:
_createDatabaseSchema
int64ValueAtColumnIndex:
jsonDataAtColumnIndex:
setPrefersInMemoryDatabase:
T@"MPServerObjectDatabase",R,N
importObjectsFromRequest:options:error:
modelObjectMatchingIdentifierSet:propertySet:
purgeGlideSubscriptionDataForHashedAccoundID:
removePlaybackAuthorizationTokensForTrust:
relatedIdentifierSetsForParentIdentifierSet:childKey:
relatedIdentifierSetsForParentIdentifierSet:parentVersionHash:childKey:
assetsMatchingIdentifierSet:
assetsWithMiniSINFsMatchingIdentifierSet:
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
importAssetsFromRequest:error:
payloadDataForIdentifierSet:outError:
_database
_observers
_observersLock
transactionWithName:
commit
mp_deepMerge:
bindJSONValue:toParameterNamed:error:
_existingAssetMatchingIdentifier:hashedPersonID:flavor:
miniSINF
isEqualToData:
_importAssetMiniSINF:forIdentifier:hashedPersonID:flavor:
sinfs
_importAssetFullSINF:forIdentifier:hashedPersonID:flavor:
bindDataValue:toParameterNamed:
removeRelationshipsForParentIdentifiers:childKey:
_transaction
_selectExistingObjectStatement
_insertObjectStatement
_insertObjectRelationshipStatement
_insertAssetURLStatement
_removeRelationshipsStatement
_updateMiniSINFStatement
_updateSINFStatement
_insertPlaybackAuthorizationTokenStatement
_updateAssetURLStatement
_initWithIdentifier:hashedPersonID:flavor:url:miniSINF:sinfs:
dataValueAtColumnIndex:
initWithIdentifier:hashedPersonID:flavor:url:miniSINF:
initWithIdentifier:hashedPersonID:flavor:url:sinfs:
hashedPersonID
_flavor
_url
_miniSINF
_sinfs
T@"NSString",R,C,N,V_hashedPersonID
Tq,R,N,V_flavor
T@"NSURL",R,C,N,V_url
T@"NSData",R,C,N,V_miniSINF
T@"NSArray",R,C,N,V_sinfs
URLRequest
URLRequests
requestedItemIdentifiers
itemMetadataRequestReason
_URLRequests
_requestedItemIdentifiers
_itemMetadataRequestReason
T@"NSURLRequest",R,C,N
T@"NSArray",R,C,N,V_URLRequests
T@"NSArray",R,N,V_requestedItemIdentifiers
TQ,R,N,V_itemMetadataRequestReason
dictionaryWithContentsOfFile:
_saveRentals
initWithAccountIdentifier:rentalKeyIdentifier:
startWithCompletionBlock:
removeRentalWithItemID:
writeToFile:atomically:
addRentalWithItemID:databaseID:
_rentalTrackerQueue
_rentals
contentLimitsEnforced
contentLimitsEnabled
enforcedContentItemsCount
enforcedContentTreeDepth
endpointAvailable
_contentLimitsEnforced
_endpointAvailable
_enforcedContentItemsCount
_enforcedContentTreeDepth
Tq,N,V_enforcedContentItemsCount
Tq,N,V_enforcedContentTreeDepth
TB,N,V_contentLimitsEnforced
TB,N,V_endpointAvailable
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:storeURLBag:isListenNow:
initializeRequestedGroupProperties
setGroupType:
modelObjectForRecommendationChildDictionary:parentGroup:subgroupsAccumulator:userIdentity:
setSectionIndex:
setRecommendationID:
setHrefURL:
setGroupRecommendation:
setDisplaysAsTitledSectionWithRowsInCarPlay:
setLastUpdatedDate:
requestedGroupPropertySet
requestedItemPropertySet
storeItemMetadataResults
flatSectionedItems
_requestedGroupProperties
_itemBuilder
_lastUpdatedDateFormatter
_isListenNow
_requestedGroupPropertySet
_requestedItemPropertySet
_storeItemMetadataResults
_flatSectionedItems
T@"MPPropertySet",R,N,V_requestedGroupPropertySet
T@"MPPropertySet",R,N,V_requestedItemPropertySet
T@"NSDictionary",R,N,V_storeItemMetadataResults
T@"MPMutableSectionedCollection",R,N,V_flatSectionedItems
kindWithVariants:songKind:
kindWithPlaylistEntryKind:options:
filterAvailableContentGroups:withOptions:
_errorIsFairPlayError:
_performMachineAuthorization
bodyData
_processNextAuthorizationRequest
initWithAuthorizationToken:accountIdentifier:
setKeybagPath:
request:didFailWithError:
requestDidFinish:
authorizationRequest:didReceiveResponse:
_keybagURL
_accountID
_accountTokenData
_downloaderAccountID
_downloaderAccountTokenData
_familyAccountID
_requests
_activeRequest
_atLeastOneAuthorizationRequestSuccessful
T@"MPHomeSharingML3DataProvider",&,N,V_dataProvider
initWithPAApplication:
_activeCommands
commandInfoRepresentations
msv_flatMap:
_startMediaRemoteSync
_stopMediaRemoteSync
_scheduleSupportedCommandsChanged
newCommandEventWithCommandType:options:
dispatchCommandEvent:completion:
invokeCommandWithEvent:completion:
skipSerializedEventDelivery
_flushEventQueue
wantsSerializedEventDelivery
_updateCanBeNowPlayingApplicationIfNeeded
_createRemoteCommandWithConcreteClass:mediaRemoteType:
setCommandCenterDelegate:
hasTargets
commandCenterDelegate
_pushMediaRemoteCommand:withOptions:completion:
_commandTargetsDidChangeNotification:
updateLaunchCommandsWithConfigurationHandler:
sharedCommandCenter
commandCenterForPlayerID:
_numberOfCommandCentersWithTargets
getPendingCommandTypesWithCompletion:
remoteCommandDidMutatePropagatableProperty:
commandHandlersRegistered
canBeNowPlayingApplication
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
enableLanguageOptionCommand
disableLanguageOptionCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
changePlaybackRateCommand
likeCommand
dislikeCommand
bookmarkCommand
changePlaybackPositionCommand
changeRepeatModeCommand
changeShuffleModeCommand
specialSeekForwardCommand
specialSeekBackwardCommand
advanceShuffleModeCommand
advanceRepeatModeCommand
createRadioStationCommand
setPlaybackQueueCommand
prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
removeFromPlaybackQueueCommand
reorderQueueCommand
playItemInQueueCommand
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
setPlaybackSessionCommand
preloadPlaybackSessionCommand
setPriorityForPlaybackSessionCommand
discardPlaybackSessionCommand
reshuffleCommand
changeQueueEndActionCommand
leaveSharedPlaybackSessionCommand
postEventNoticeCommand
containsCommand:
disableAutomaticCanBeNowPlaying
setWantsSerializedEventDelivery:
_mediaRemoteCommandHandler
_scheduledSupportedCommandsChangedNotification
_commandHandlersRegistered
_canBeNowPlayingApplication
_processingEvent
_stateHandler
_disableAutomaticCanBeNowPlaying
_wantsSerializedEventDelivery
_pauseCommand
_playCommand
_stopCommand
_togglePlayPauseCommand
_enableLanguageOptionCommand
_disableLanguageOptionCommand
_nextTrackCommand
_previousTrackCommand
_skipForwardCommand
_skipBackwardCommand
_seekForwardCommand
_seekBackwardCommand
_ratingCommand
_changePlaybackRateCommand
_likeCommand
_dislikeCommand
_bookmarkCommand
_changePlaybackPositionCommand
_changeRepeatModeCommand
_changeShuffleModeCommand
_specialSeekForwardCommand
_specialSeekBackwardCommand
_advanceShuffleModeCommand
_advanceRepeatModeCommand
_createRadioStationCommand
_setPlaybackQueueCommand
_prepareForSetPlaybackQueueCommand
_insertIntoPlaybackQueueCommand
_removeFromPlaybackQueueCommand
_reorderQueueCommand
_playItemInQueueCommand
_addNowPlayingItemToLibraryCommand
_addItemToLibraryCommand
_setPlaybackSessionCommand
_preloadPlaybackSessionCommand
_setPriorityForPlaybackSessionCommand
_discardPlaybackSessionCommand
_reshuffleCommand
_changeQueueEndActionCommand
_leaveSharedPlaybackSessionCommand
_postEventNoticeCommand
T@"MPRemoteCommand",R,N,V_specialSeekForwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekBackwardCommand
T@"MPAdvanceShuffleModeCommand",R,N,V_advanceShuffleModeCommand
T@"MPAdvanceRepeatModeCommand",R,N,V_advanceRepeatModeCommand
T@"MPRemoteCommand",R,N,V_removeFromPlaybackQueueCommand
T@"MPReorderQueueCommand",R,N,V_reorderQueueCommand
T@"MPRemoteCommand",R,N,V_playItemInQueueCommand
T@"MPRemoteCommand",R,N,V_createRadioStationCommand
T@"MPSetPlaybackQueueCommand",R,N,V_setPlaybackQueueCommand
T@"MPRemoteCommand",R,N,V_prepareForSetPlaybackQueueCommand
T@"MPInsertIntoPlaybackQueueCommand",R,N,V_insertIntoPlaybackQueueCommand
T@"MPFeedbackCommand",R,N,V_addNowPlayingItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addItemToLibraryCommand
T@"MPSetPlaybackSessionCommand",R,N,V_setPlaybackSessionCommand
T@"MPPreloadPlaybackSessionCommand",R,N,V_preloadPlaybackSessionCommand
T@"MPSetPriorityForPlaybackSessionCommand",R,N,V_setPriorityForPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_discardPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_reshuffleCommand
T@"MPChangeQueueEndActionCommand",R,N,V_changeQueueEndActionCommand
T@"MPRemoteCommand",R,N,V_leaveSharedPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_postEventNoticeCommand
T@"MRPlayerPath",R,C,N,V_playerPath
TB,N,V_disableAutomaticCanBeNowPlaying
TB,N,V_wantsSerializedEventDelivery
T@"MPRemoteCommand",R,N,V_pauseCommand
T@"MPRemoteCommand",R,N,V_playCommand
T@"MPRemoteCommand",R,N,V_stopCommand
T@"MPRemoteCommand",R,N,V_togglePlayPauseCommand
T@"MPRemoteCommand",R,N,V_enableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_disableLanguageOptionCommand
T@"MPChangePlaybackRateCommand",R,N,V_changePlaybackRateCommand
T@"MPChangeRepeatModeCommand",R,N,V_changeRepeatModeCommand
T@"MPChangeShuffleModeCommand",R,N,V_changeShuffleModeCommand
T@"MPRemoteCommand",R,N,V_nextTrackCommand
T@"MPRemoteCommand",R,N,V_previousTrackCommand
T@"MPSkipIntervalCommand",R,N,V_skipForwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipBackwardCommand
T@"MPRemoteCommand",R,N,V_seekForwardCommand
T@"MPRemoteCommand",R,N,V_seekBackwardCommand
T@"MPChangePlaybackPositionCommand",R,N,V_changePlaybackPositionCommand
T@"MPRatingCommand",R,N,V_ratingCommand
T@"MPFeedbackCommand",R,N,V_likeCommand
T@"MPFeedbackCommand",R,N,V_dislikeCommand
T@"MPFeedbackCommand",R,N,V_bookmarkCommand
_homeSharingID
_rentalID
TQ,R,N,V_itemID
__available_KEY
__protectedContentSupportStorageFileURL_KEY
__URL_KEY
available
TB,D,N,GisAvailable
protectedContentSupportStorageFileURL
T@"MPModelLibraryHasPurchasesRequest",C,N,V_request
_additionalTrackMetadata
T@"NSDictionary",R,N,V_additionalTrackMetadata
_storeItem
T@"NSDictionary",R,N,V_lookupDictionary
initWithImportElements:usingCloudLibraryDestination:
_addToCloudLibrary
TB,R,N,V_addToCloudLibrary
T@"MPModelObject",R,N,V_referralObject
clientInterface
serviceInterface
exportedInterface
serviceViewControllerInterface
viewServiceDidTerminateWithError:
television
_television
T^v,R,N,V_television
initWithAVItem:completionHandler:
viewControllerForOrientation
setViewControllerForOrientation:
_viewControllerForOrientation
T@"UIViewController",W,N,V_viewControllerForOrientation
identifierSets
_identifierSets
T#,N,V_modelClass
T@"NSArray",C,N,V_identifierSets
setCachePolicy:
_produceResponseWithRecentlyPlayedArray:completion:
setMainTitle:
setDurationFromExternalMetadata:
setExplicitTrack:
setLikedStateEnabled:
setSupportsLikedState:
setTailPlaceholder:
_explicitTrack
_likeStateEnabled
_album
_artist
_durationFromExternalMetadata
_mainTitle
_artworkCatalogBlock
TB,N,GisTailPlaceholder,V_tailPlaceholder
T@"NSString",&,N,V_album
T@"NSString",&,N,V_artist
Td,N,V_durationFromExternalMetadata
TB,N,GisExplicitTrack,V_explicitTrack
TB,N,GisLikedStateEnabled,V_likeStateEnabled
T@"NSString",&,N,V_mainTitle
TB,N,V_supportsLikedState
T@?,C,N,V_artworkCatalogBlock
_relationshipKinds
T@"NSDictionary",R,N,V_relationshipKinds
setMediaClip:
setPodcast:
setPodcastEpisode:
relationshipKeyForGenericObjectType:
podcast
podcastEpisode
radioStationEvent
__playlistEntry_KEY
__tvEpisode_KEY
__podcast_KEY
__podcastEpisode_KEY
__radioStationEvent_KEY
T@"MPModelPlaylistEntry",&,D,N
T@"MPModelPodcast",&,D,N
T@"MPModelPodcastEpisode",&,D,N
T@"MPModelRadioStationEvent",R,D,N
genericObjectType
pathForResource:ofType:
dataWithContentsOfFile:
enumerateSectionUpdatesUsingBlock:
enumerateItemUpdatesUsingBlock:
enumerateSectionMovesUsingBlock:
updatedSections
removeSectionMoveFromIndex:
removeAllIndexes
removeItemMoveFromIndexPath:
lastIndex
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
T@"MPChangeDetails",R,N
setUpdatedSections:
setUpdatedItemIndexPaths:
enumerateSectionMovesWithBlock:
removeSectionUpdateForPreviousIndex:
enumerateItemMovesWithBlock:
removeItemUpdateForPreviousIndexPath:
insertedIndexes
deletedIndexes
updatedIndexes
enumerateMovesWithBlock:
enumerateMovesUsingBlock:
enumerateUpdatesUsingBlock:
isValidForPreviousCount:finalCount:reason:
_sectionMoves
_sectionUpdates
_updatedSectionMoveFromIndexes
_itemMoves
_itemUpdates
_updatedItemMoveFromIndexPaths
_isFlatCollection
_insertedSections
_deletedSections
_insertedItemIndexPaths
_deletedItemIndexPaths
T@"NSIndexSet",C,N,V_insertedSections
T@"NSIndexSet",C,N,V_deletedSections
T@"NSIndexSet",C,N
T@"NSArray",C,N,V_insertedItemIndexPaths
T@"NSArray",C,N,V_deletedItemIndexPaths
T@"NSIndexSet",R,C,N
modelObjectWithStorePlatformDictionary:userIdentity:
modelObjectWithStoreItemMetadata:
modelObjectWithStoreItemMetadata:sourceModelObject:
modelObjectWithStorePlatformDictionary:
_preventStoreItemMetadataCaching
TB,N,V_preventStoreItemMetadataCaching
informalMediaClipID
informalStaticAssetID
availableMediaCharacteristicsWithMediaSelectionOptions
mediaSelectionGroupForMediaCharacteristic:
makeNowPlayingInfoLanguageOptionGroup
languageOptions
createLanguageOptionGroups
selectedMediaOptionInMediaSelectionGroup:
makeNowPlayingInfoLanguageOption
createLanguageOptions
hasMediaCharacteristic:
mediaCharacteristics
extendedLanguageTag
displayName
_languageOptionIdentifier
initWithType:languageTag:characteristics:displayName:identifier:
defaultOption
allowsEmptySelection
initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
ICCloudItemIDList
cloudItemIDList
setCloudItemIDList:
_cloudItemIDList
T@"ICCloudItemIDList",&,N,V_cloudItemIDList
_controllerWithUserIdentity:createIfRequired:
initWithUserIdentity:
isMediaApplication
canShowCloudDownloadButtonsDidChangeNotification:
canShowCloudTracksDidChangeNotification:
isCellularDataRestrictedDidChangeNotification:
hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:
enableICMLErrorReasonChange:
observerWithDistributedName:localName:queue:
activeUserDidChangeNotification:
_loadIsSagaAuthenticatedWithCompletion:
cloudClient
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
canSetPlaylistProperty:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
_referralForModelObject:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
canSetItemProperty:
setAlbumProperties:forAlbumPersistentID:completionHandler:
addStoreItemWithAdamID:referral:completionHandler:
importItemArtworkForSagaID:completionHandler:
importItemArtworkForPurchaseHistoryID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importScreenshotForSagaID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
deprioritizeItemArtworkForSagaID:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeScreenshotForSagaID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
becomeActiveAndWaitUntilDone:
_becomeActiveAndWaitUntilDone:
_resignActive
_initializeUpdateInProgressState
loadUpdateProgressWithCompletionHandler:
loadJaliscoUpdateProgressWithCompletionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
isCloudEnabledValid
isAuthenticated
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
disableCloudLibraryWithReason:completionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
hasSetPreferenceForAutomaticDownloads
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
setCloudAddToPlaylistBehavior:completionHandler:
setItemProperties:forPurchaseHistoryID:
updateJaliscoLibraryWithReason:completionHandler:
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
sharedCloudContentTasteRequestListener
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
setLikedState:forPlaylistWithGlobalID:completion:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setCloudEnabledValid:
setCloudEnabled:
isAuthenticatedWithCompletionHandler:
updateSagaInProgressChangedHandler
setCloudLibraryInitialImport:
isCloudLibraryUpdateInProgress
setCloudLibraryUpdateInProgress:
isCloudLibraryInitialImport
loadIsSagaUpdateInProgressWithCompletionHandler:
setUpdateSagaInProgressChangedHandler:
updateJaliscoInProgressChangedHandler
setJaliscoInitialImport:
isJaliscoUpdateInProgress
setJaliscoUpdateInProgress:
isJaliscoInitialImport
loadIsJaliscoUpdateInProgressWithCompletionHandler:
setUpdateJaliscoInProgressChangedHandler:
referralWithPlaylistGlobalID:
referralWithAlbumAdamID:
resignActive
migrateCellularDataPreferencesIfNeeded
T@"MPCloudController",R,N
authenticatedDidChangeNotification:
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
canDefaultMediaLibraryShowCloudContent
hasCloudLockerAccount
hasPurchaseHistoryAccount
updateSubscribedPlaylistWithSagaID:ignoreMinRefreshInterval:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:completionHandler:
isInitialImport
isUpdateInProgress
loadCloudMusicLibraryUpdateProgressWithCompletionHandler:
loadJaliscoLibraryUpdateProgressWithCompletionHandler:
isEnablingCloudLibraryDestructive
enableCloudLibraryWithOptions:completionHandler:
disableCloudLibraryWithCompletionHandler:
isAutomaticDownloadsEnabled
enableAutomaticDownloadsWithCompletionHandler:
disableAutomaticDownloadsWithCompletionHandler:
updateJaliscoMediaLibraryWithReason:completionHandler:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
cloudAvailabilityController
activeCount
setActiveCount:
preferencesChangedNotifyToken
setPreferencesChangedNotifyToken:
preferencesChangedNotifyTokenIsValid
setPreferencesChangedNotifyTokenIsValid:
cloudClientCallbackQueue
addToPlaylistBehaviorChangedObserver
setCanShowCloudDownloadButtons:
setCanDefaultMediaLibraryShowCloudContent:
setCanShowCloudMusic:
setCanShowCloudVideo:
setCloudLockerAccount:
setPurchaseHistoryAccount:
setUpdateInProgress:
setInitialImport:
_active
_cloudEnabled
_preferencesChangedNotifyTokenIsValid
_canShowCloudDownloadButtons
_canDefaultMediaLibraryShowCloudContent
_canShowCloudMusic
_canShowCloudVideo
_cloudEnabledValid
_cloudLockerAccount
_purchaseHistoryAccount
_updateInProgress
_initialImport
_cloudLibraryUpdateInProgress
_cloudLibraryInitialImport
_jaliscoUpdateInProgress
_jaliscoInitialImport
_preferencesChangedNotifyToken
_cloudClient
_cloudAvailabilityController
_activeCount
_cloudClientCallbackQueue
_addToPlaylistBehaviorChangedObserver
T@"NSObject<ICCloudAvailability>",R,N,V_cloudAvailabilityController
T@"ICConnectionConfiguration",R,N
Tq,N,V_activeCount
Ti,N,V_preferencesChangedNotifyToken
TB,N,V_preferencesChangedNotifyTokenIsValid
T@"NSObject<OS_dispatch_queue>",R,N,V_cloudClientCallbackQueue
T@"MSVDistributedNotificationObserver",R,N,V_addToPlaylistBehaviorChangedObserver
TB,N,V_canShowCloudDownloadButtons
TB,N,V_canDefaultMediaLibraryShowCloudContent
TB,N,V_canShowCloudMusic
TB,N,V_canShowCloudVideo
cloudEnabledValid
TB,N,GisCloudEnabledValid,V_cloudEnabledValid
cloudEnabled
TB,N,GisCloudEnabled,V_cloudEnabled
cloudLockerAccount
TB,N,GhasCloudLockerAccount,V_cloudLockerAccount
purchaseHistoryAccount
TB,N,GhasPurchaseHistoryAccount,V_purchaseHistoryAccount
updateInProgress
TB,N,GisUpdateInProgress,V_updateInProgress
initialImport
TB,N,GisInitialImport,V_initialImport
cloudLibraryUpdateInProgress
TB,N,GisCloudLibraryUpdateInProgress,V_cloudLibraryUpdateInProgress
cloudLibraryInitialImport
TB,N,GisCloudLibraryInitialImport,V_cloudLibraryInitialImport
jaliscoUpdateInProgress
TB,N,GisJaliscoUpdateInProgress,V_jaliscoUpdateInProgress
jaliscoInitialImport
TB,N,GisJaliscoInitialImport,V_jaliscoInitialImport
active
TB,R,N,GisActive,V_active
enhancedAudioAvailable
TB,R,N,GisEnhancedAudioAvailable
T@"ICCloudClient",R,N,V_cloudClient
T@"ICUserIdentity",R,N
enablingCloudLibraryDestructive
TB,R,N,GisEnablingCloudLibraryDestructive
T@"MPModelObject",C,N,V_referralObject
colorWithITColor:
_fallbackColorAnalysis
algorithm
_algorithm
Tq,R,N,V_algorithm
ITColor
getWhite:alpha:
getRed:green:blue:alpha:
_setUsesLegacyAutomaticWaitingBehavior:
setAppliesMediaSelectionCriteriaAutomatically:
setPreparesItemsForPlaybackAsynchronously:
_setPausesAudioVisualPlaybackInBackground:
_currentItemDidChangeNotification:
addBoundaryTimeObserverForTimes:queue:usingBlock:
advanceToNextItem
_externalProtectionStatus
prepareItem:withCompletionHandler:
setMediaSelectionCriteria:forMediaCharacteristic:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_resumePlayback:error:
setDefaultItemEQPresetType:
setExpectedAssetTypes:
_setPreferredLanguageList:
_setWantsVolumeChangesWhenPausedOrInactive:
isPlaybackQueueTransactionActive
playbackQueueCommitHandler
setPlaybackQueueCommitHandler:
rawRate
_allowsExternalPlaybackRevisionID
_isExternalPlaybackActive
_pausedForPlaybackQueueTransaction
_lastPickedRoute
_playbackQueueCommitHandler
_playbackQueueTransactionCount
_queuedOperations
_rateBeforePlaybackQueueTransaction
_routeDidChangeDuringPlaybackQueueTransaction
_status
_defaultItemEQPresetType
_outputObscuredDueToInsufficientExternalProtection
_usesAudioOnlyModeForExternalPlaybackRevisionID
_usesExternalPlaybackWhileExternalScreenIsActiveRevisionID
_rawRate
Tf,R,N,V_rawRate
Tq,N,V_defaultItemEQPresetType
T@"AVPlayerItem",R,N
T@?,C,N,V_playbackQueueCommitHandler
T@"AVPlayer",R,N
brandLogoArtworkCatalogBlock
__shortName_KEY
__curatorKind_KEY
__curatorSubKind_KEY
__brandLogoArtworkCatalogBlock_KEY
__handle_KEY
brandLogoArtworkCatalog
curatorKind
curatorSubKind
_tearDownTimeoutTimerSource
_handleTimeout
initWithIdentity:clientInfo:
serverEnvironment
serverCorrelationKey
_executeURLLoadWithRequest:storeURLBag:requestContext:
_executeItemMetadataLoadForRequestedItemIdentifiers:reason:requestContext:
_executeURLLoadWithRequests:storeURLBag:requestContext:
configurationForLoadingModelDataWithStoreBagDictionary:error:
identity
_URLLoadRequestWithRequest:requestContext:
highPrioritySession
authenticationOptions
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
dispatchAsync:
_childOperation
_startExecutingTimeStamp
_timeoutTimerSource
T@"MPStoreModelRequest",C,N,V_request
durationInFrames
setDurationInFrames:
encodingDelayInFrames
setEncodingDelayInFrames:
encodingDrainInFrames
setEncodingDrainInFrames:
heuristicInfo
setHeuristicInfo:
lastPacketsResync
setLastPacketsResync:
_encodingDelayInFrames
_encodingDrainInFrames
_heuristicInfo
_durationInFrames
_lastPacketsResync
TQ,N,V_durationInFrames
TI,N,V_encodingDelayInFrames
TI,N,V_encodingDrainInFrames
TI,N,V_heuristicInfo
TQ,N,V_lastPacketsResync
initWithUnpersonalizedContentDescriptors:
propertiesForItemAtIndexPath:
setProperties:forItemAtIndexPath:
_representedObjects
T@"MPSectionedCollection",R,N,V_unpersonalizedContentDescriptors
T@"MPSectionedCollection",&,N,V_representedObjects
_libraryResponseDidInvalidateNotification:
configureWithModelObject:
representedObjectResults
libraryResponse
_representedObjectResults
_libraryResponse
T@"MPSectionedCollection",&,N,V_representedObjectResults
T@"MPModelResponse",&,N,V_libraryResponse
playlistEntryKind
_playlistEntryKind
T@"MPModelPlaylistEntryKind",R,N,V_playlistEntryKind
tiledArtworkRequest
__hasCleanContent_KEY
__curatorPlaylist_KEY
__owner_KEY
__publicPlaylist_KEY
__visiblePlaylist_KEY
__subscribed_KEY
__userEditableComponents_KEY
__shareShortURL_KEY
__releaseDateComponents_KEY
__lastModifiedDateComponents_KEY
__tiledArtworkRequest_KEY
__cloudVersionHash_KEY
__versionHash_KEY
trackArtworkCatalogsWithCount:
tracksTiledArtworkCatalogWithRows:columns:
T@"MPModelCurator",C,D,N
curatorPlaylist
TB,D,N,GisCuratorPlaylist
owner
TB,D,N,GisOwner
publicPlaylist
TB,D,N,GisPublicPlaylist
visiblePlaylist
TB,D,N,GisVisiblePlaylist
subscribed
TB,D,N,GisSubscribed
userEditableComponents
shareShortURL
T@"NSDateComponents",C,D,N
lastModifiedDateComponents
cloudVersionHash
T@"MPTiledArtworkRequest",C,D,N
_requestURLFromBag:
_stringRepresentationForHTTPMethod:
_stringRepresentationForHTTPBodyType:
setHTTPBody:
_internalErrorForHTTPResponseCode:
_urlStringForKey:inBag:
T@"<MPStoreSocialRequestOperationDataSource>",R,N,V_dataSource
_onQueueUpdateEffectiveNetworkTypesForPlayback
_onQueueEffectiveNetworkTypeForAverageBitrate:
effectiveNetworkTypeForPlayback
lastAverageBitrate
_effectiveNetworkTypeForCloudPlayback
_networkType
_lastAverageBitrate
_onQueue_updateRequestID
_onQueue_reloadIfNeeded
_responseDidInvalidate:
controller:defersResponseReplacement:
setResponse:
setNeedsReload
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
controller:shouldRetryFailedRequestWithError:
_onQueue_scheduleRetryAfterInterval:
beginAutomaticResponseLoading
endAutomaticResponseLoading
setNeedsReloadForSignificantRequestChange
reloadIfNeeded
_numberOfObservers
_requestID
_shouldAutomaticallyLoad
_needsReload
_cancelToken
_retryInterval
_retryTimer
_lastError
_pendingResponse
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@,&,N,V_response
T@,&,N,V_request
T@"<MPRequestResponseControllerDelegate>",W,N,V_delegate
artworkCatalogsWithMaximumCount:
tiledArtworkCatalogWithRows:columns:
logicalLeaderFromOutputDevices:
logicalLeaderOutputDevice
_anyOutputDevicePassesMRFunction:
_anyOutputDevicePassesTest:
pickableRouteTypeForOutputDevice:
hostDeviceClass
producesLowFidelityAudio
_logicalLeaderOutputDevice
_outputDevices
T@"NSArray",R,N,V_outputDevices
T^v,R,N,V_logicalLeaderOutputDevice
groupLeader
TB,R,N,GisGroupLeader
removeProperty:
isGroupRecommendation
storeItemMetadataWithMusicAPIMetadataDictionary:
setUtterance:
setParentGroup:
setSubgroupIndex:
setBackedByStoreItemMetadata:
convertToStoreItemMetadataDictionary:
_requestedItemProperties
_subgroupBuilder
initWithUbiquitousIdentifier:
ubiquitousIdentifierWithUniqueStoreID:
setBookmarkTimestamp:
hasBeenPlayedModified
userPlayCountModified
bookmarkTimeModified
bookmarkTimestampModified
bookmarkTimestamp
_ubiquitousIdentifier
_bookmarkTimestamp
_bookmarkTime
_userPlayCount
T@"NSString",R,C,N,V_ubiquitousIdentifier
Td,N,V_bookmarkTimestamp
Td,N,V_bookmarkTime
TQ,N,V_userPlayCount
T@"NSError",C,N,V_error
_tileArtworkVisualIdenticalityIdentifiers
T@"NSArray",C,N,V_tileArtworkVisualIdenticalityIdentifiers
mapTableWithKeyOptions:valueOptions:
setIndex:
itemAtIndex:
firstIndex
objectsAtIndexes:
addIndexes:
removeObjectsAtIndexes:
indexSetWithIndexesInRange:
indexForItem:
replaceItemAndIdentifierSet:atIndex:
applyChanges:identifierSetLookupBlock:
identifierSetAtIndex:
identifierSetForItem:
itemForIdentifierSet:
T@"NSMutableArray",&,N,V_identifiers
T@"NSMutableArray",&,N,V_identifierSets
T@"NSMapTable",&,N,V_index
_postItemChangedNotificationWithDeltaBlock:
collectionIdentifier
directorName
localizedContentRating
profileIdentifier
seriesName
artworkURL
artworkURLTemplates
localizedDurationString
isAlwaysLiveItem
hasAlwaysLive
isAdvertisement
hasAdvertisement
isSteerable
hasSteerable
isLoading
hasLoading
numberOfChildren
legacyUniqueID
radioStationType
editingStyleFlags
elapsedTime
elapsedTimeTimestamp
calculatedElapsedTime
hasLanguageOptions
initWithMRLanguageOptionGroup:
availableLanguageOptions
mrLanguageOptionGroup
currentLanguageOptions
mrLanguageOption
hasDescription
hasArtwork
setSongTraits:
setAlbumTraits:
setPlaylistTraits:
preferredFormat
setPreferredFormat:
activeFormat
setActiveFormat:
activeFormatJustification
setActiveFormatJustification:
formatTierPreference
setFormatTierPreference:
initWithMediaRemoteAudioRoute:
audioRoute
setAudioRoute:
mediaRemoteAudioRoute
alternativeFormats
setAlternativeFormats:
shouldPushArtworkData
copyWithNewIdentifier:
setReleaseDate:
setCollectionIdentifier:
setDirectorName:
setLocalizedContentRating:
setProfileIdentifier:
setSeriesName:
setLocalizedDurationString:
setSeasonNumber:
setAdvertisement:
setSteerable:
setNumberOfChildren:
setPlaylistType:
setRadioStationType:
setEpisodeType:
auxiliaryNowPlayingInfo
setHasLanguageOptions:
invalidateLanguageOptions
setSections:
setHasDescription:
invalidateDescription
invalidateLyrics
invalidateArtwork
setExplicitItem:
isSharableItem
setSharableItem:
_sharableItem
T@"MPNowPlayingInfoLyricsItem",C,N
T@"MPMediaItemArtwork",&,D,N
sharableItem
TB,N,GisSharableItem,V_sharableItem
advertisement
TB,N,GisAdvertisement
steerable
TB,N,GisSteerable
loading
TB,N,GisLoading
T@"<MPNowPlayingContentItemArtworkDataSource>",&,N,V_artworkDataSource
T@"MPNowPlayingInfoAudioFormat",C,N
T@"MPNowPlayingInfoAudioRoute",C,N
TB,N,GisExplicitItem
alwaysLiveItem
TB,N,GisAlwaysLiveItem
userInterfaceLayoutDirection
laterDate:
T@"MPStoreAssetInfoPlaybackCache",R,N
addCachedResponse:forRequest:
updateForPlaybackOfFileAsset:fromResponse:
_accessOrderedRequests
_requestToCachedResponse
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
requestType
setRequestType:
setCloudUniversalLibraryID:
setStoreSubscriptionAdamID:
storeCloudID
setStoreCloudID:
setStorePurchasedAdamID:
storeRadioAdamID
setStoreRadioAdamID:
_delegatedAccountID
_redownloadParameters
_cloudUniversalLibraryID
_storeCloudID
_storePurchasedAdamID
_storeRadioAdamID
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
Tq,N,V_requestType
T@"NSString",C,N,V_redownloadParameters
T@"NSString",C,N,V_cloudUniversalLibraryID
Tq,N,V_storeSubscriptionAdamID
TQ,N,V_storeCloudID
Tq,N,V_storePurchasedAdamID
Tq,N,V_storeRadioAdamID
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@"NSMapTable",&,N
_middlewareOperationMap
_operations
allocWithProtocol:
methodSignature
methodReturnLength
getArgument:atIndex:
setReturnValue:
builderSelector
setBuilderSelector:
_builders
_middlewareEnumerator
_builderSelector
T:,N,V_builderSelector
numberOfArguments
setClientPlatformIdentifier:
setAuthenticationOptions:
_didSetTimeoutInterval
_clientPlatformIdentifier
_authenticationOptions
T@"NSString",C,N,V_clientVersion
T@"NSString",C,N,V_clientPlatformIdentifier
TQ,N,V_authenticationOptions
__bookmarkTime_KEY
__shouldRememberBookmarkTime_KEY
__hasBeenPlayed_KEY
__stopTime_KEY
__storeUbiquitousIdentifier_KEY
__userPlayCount_KEY
T@"NSNumber",C,D,N
hlsURL
initWithPlaybackContext:
getPlaybackContextWithCompletion:
_playbackContext
_replaceIntent
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:
setRefreshURL:
_stitchWithPreviousEntry:list:cloneIndex:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_stitchPreviousEntry:toEntry:cloneIndex:
_stitchLastItemEntryToHeadEntry:branchList:
_encodeEntry:withExclusiveAccessToken:
encodableNextEntriesWithExclusiveAccessToken:
initWithSection:sectionedIdentifierList:existingItemIdentifiers:
reloadSection:completion:
_entryForPosition:withExclusiveAccessToken:
_loadDataSource:forSection:completion:
_dataSourceInsertItems:fromSection:afterEntry:withExclusiveAccessToken:
_performDelegateCalloutForSection:block:
automaticallyReversesNonDestructiveDataSourceEdits
_dataSourceMoveItem:inSection:afterEntry:withExclusiveAccessToken:
performWithExclusiveAccessAndReturnInteger:
addDataSource:section:afterHeadOfSection:completion:
allSectionIdentifiers
hasItem:inSection:
hasSection:
isDeletedItem:inSection:
dataSourceMoveItemToHead:inSection:
dataSourceMoveItem:afterItem:inSection:
dataSourceMoveItemToTail:inSection:
dataSourceUpdateSection:
dataSourceBeginTransationForSection:
dataSourceEndTransactinForSection:
_sectionDataSources
_tailEntryForSectionIdentifier:withExclusiveAccessToken:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
setAnnotationDelegate:
_itemCount
_startEntries
_sectionHeadEntryMap
_sectionTransactionCallouts
_automaticallyReversesNonDestructiveDataSourceEdits
_annotationDelegate
sectionDataSources
T@"NSDictionary",R,N,G_sectionDataSources
T@"<MPSectionedIdentifierListAnnotationDelegate>",W,N,V_annotationDelegate
T@"<MPSectionedIdentifierListDelegate>",W,N,V_delegate
TB,N,V_automaticallyReversesNonDestructiveDataSourceEdits
insertObjects:atIndexes:
updateItem:
insertItemsAtHead:
insertItemsAtTail:
insertItems:afterItem:
enumerateRangesUsingBlock:
moveItemToHead:
moveItem:afterItem:
moveItemToTail:
updateSection
applyChanges:itemLookupBlock:
mutableItemIdentifiers
setMutableItemIdentifiers:
_mutableItemIdentifiers
T@"NSMutableArray",&,N,V_mutableItemIdentifiers
T@"NSString",R,C,N,V_sectionIdentifier
T@"MPSectionedIdentifierList",R,W,N,V_sectionedIdentifierList
T@"MPSectionedIdentifierListItemEntry",&,N,V_rootEntry
T@"NSMutableSet",&,N,V_clonedEntries
positionForItem:inSection:
positionForHeadOfSection:
positionForTailOfSection:
setPlaylistUserImage:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
setPlaylistEntries:
setPlaylistDescription:
setPlaylistName:
setIsOwner:
setAuthorStoreIdentifier:
setParentPlaylist:
setShouldCreatePlaylist:
_shouldCreatePlaylist
_didSetPlaylistUserImage
_playlistEntries
_playlistDescription
_playlistName
_playlistUserImage
_publicPlaylist
_visiblePlaylist
_curatorPlaylist
_isOwner
_authorStoreIdentifier
_parentPlaylist
TB,R,N,V_didSetPlaylistUserImage
T@"MPSectionedCollection",C,N,V_playlistEntries
T@"NSString",C,N,V_playlistDescription
T@"NSString",C,N,V_playlistName
T@"UIImage",&,N,V_playlistUserImage
T@"NSNumber",C,N,GisPublicPlaylist,V_publicPlaylist
T@"NSNumber",C,N,GisVisiblePlaylist,V_visiblePlaylist
T@"NSNumber",C,N,GisCuratorPlaylist,V_curatorPlaylist
T@"NSNumber",C,N,V_isOwner
T@"NSString",C,N,V_authorStoreIdentifier
T@"MPModelPlaylist",&,N,V_parentPlaylist
TB,N,V_shouldCreatePlaylist
initWithRelatedMPModelClass:payloadTransformBlock:
mapRelationshipKey:toModelClass:payloadTransform:
routeSharingPolicy
_mediaControlsStyleForRouteSharingPolicy:
initWithConfiguration:shouldObserveRoutingContextUIDChanges:
_MPRouteSharingPolicyToAVRouteSharingPolicy:
_audioSessionRoutingContextDidChangeNotification
_updateAudioSessionRoutingContext
screen
coordinateSpace
convertRect:toCoordinateSpace:
archivedDataWithRootObject:requiringSecureCoding:error:
listener
_endpoint
_reset
anonymousListener
updateMediaControlsWithConfiguration:
openConnection
setDismissalReason:
_dismissalReasonString:
_shouldUpdateStyleForCurrentConfigurationStyle:
sourceView
setSourceView:
dismissHandler
setListener:
dismissHandlerWithReason
setDismissHandlerWithReason:
_shouldObserveRoutingContextUIDChanges
_dismissalReason
_sourceView
_dismissHandler
_dismissHandlerWithReason
T@"NSXPCListener",&,N,V_listener
T@"NSXPCConnection",&,N,V_connection
T@?,C,N,V_dismissHandlerWithReason
T@"UIView",&,N,V_sourceView
T@?,C,N,V_dismissHandler
_entityTranslator
_entityQueryResult
sharedNetworkObserver
T@"MPNetworkObserver",R,N
beginUsingNetwork
endUsingNetwork
isMusicCellularStreamingAllowed
setMusicCellularStreamingAllowed:
isVideoCellularStreamingAllowed
setVideoCellularStreamingAllowed:
isMusicCellularDownloadingAllowed
setMusicCellularDownloadingAllowed:
isStoreCellularNetworkingAllowed
isUsingNetwork
_musicCellularNetworkingAllowedNotifyToken
_videosPreferencesChangedToken
_networkUsageCount
_videosAllowsCellularStreaming
musicCellularStreamingAllowed
TB,N,GisMusicCellularStreamingAllowed
videoCellularStreamingAllowed
TB,N,GisVideoCellularStreamingAllowed
musicCellularDownloadingAllowed
TB,N,GisMusicCellularDownloadingAllowed
storeCellularNetworkingAllowed
TB,R,N,GisStoreCellularNetworkingAllowed
_roomURLWithRoomID:storeURLBag:
countForObject:
mediaSubTypes
mpIsOnlyAC3
mpIsSDH
initWithThrottlingEnabled:
discoverySessionConfiguration
setEnableThrottling:
discoverySessionWithConfiguration:
_endpointsDidChange:
addEndpointsChangedCallback:
removeEndpointsChangedCallback:
setTargetAudioSessionID:
initWithEndpointFeatures:
targetSessionID
availableEndpoints
setEndpointWrapper:
sharedLocalEndpointForRoutingContextWithUID:
endpointObject
setOutputDevices:initiator:withReplyQueue:completion:
setTargetSessionID:
setSerialQueue:
endpoints
setEndpoints:
_discoverySession
_callbackToken
_targetSessionID
_endpoints
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSMutableDictionary",&,N,V_endpoints
T@"MRAVRoutingDiscoverySessionConfiguration",R,N
isNullRef
setNullRef:
_nullRef
_refValue
nullRef
TB,N,GisNullRef,V_nullRef
Tr^v,R,N,V_refValue
startHandler
_startHandler
T@?,R,C,N,V_startHandler
storeAccountIdentifier
_storeAccountIdentifier
T@"NSNumber",R,C,N,V_storeAccountIdentifier
_applicationDidEnterForegroundNotification:
_defaultMediaLibraryDidChangeNotification:
_onServiceQueue_connectedUPPServiceProxy
_onServiceQueue_resignActiveService
_onServiceQueue_updateActiveServiceIfNeeded
_onQueue_shouldBeActive
_onServiceQueue_becomeActiveService
_onQueue_isEnabled
_playbackPositionEntityWithValuesFromMusicLibraryTrackPersistentID:
persistPlaybackPositionEntity:isCheckpoint:completionBlock:
playbackPositionForLocalEntityIdentifiers:
pullLocalPlaybackPositionForEntityIdentifiers:completionBlock:
playbackPositionDomain
initWithPlaybackPositionDomain:ubiquitousIdentifier:foreignDatabaseEntityID:
uppServiceProxy
domainForSyncingMusicLibraryWithLibraryPath:
serviceForSyncDomain:
beginAccessingPlaybackPositionEntities
endAccessingPlaybackPositionEntities
T@"MPUbiquitousPlaybackPositionController",R,N
beginUsingPlaybackPositionMetadata
noteChangedPlaybackPositionMetadataForTrackPersistentID:isCheckpoint:
setExternallyActive:
externallyActive
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
isServiceActive
setServiceActive:
setUppServiceProxy:
uppDomain
setUppDomain:
setBeganUsingPlaybackPositionMetadata:
databaseHasBookmarkableContents
setDatabaseHasBookmarkableContents:
applicationBecomingActive
_isServiceActive
_externallyActive
_beganUsingPlaybackPositionMetadata
_databaseHasBookmarkableContents
_applicationBecomingActive
_serviceQueue
_uppServiceProxy
_uppDomain
T@"NSObject<OS_dispatch_queue>",R,&,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_serviceQueue
T@"SBCPlaybackPositionSyncService",&,N,V_uppServiceProxy
T@"SBCPlaybackPositionDomain",&,N,V_uppDomain
serviceActive
TB,N,GisServiceActive,V_isServiceActive
beganUsingPlaybackPositionMetadata
TB,N,GisServiceActive,V_beganUsingPlaybackPositionMetadata
TB,N,V_databaseHasBookmarkableContents
TB,R,N,V_applicationBecomingActive
TB,N,V_externallyActive
threadDictionary
createExternalRepresentation
subtitle
playbackProgress
isContainer
isStreamingContent
isPlayable
_loadArtwork:completion:
isSuppressingChangeNotifications
performChangeImmediately:
initWithExternalRepresentation:
setSubtitle:
setPlaybackProgress:
setContainer:
setStreamingContent:
T^v,R,N,V_mediaRemoteContentItem
streamingContent
TB,N,GisStreamingContent
TB,N,GisExplicitContent
container
TB,N,GisContainer
playable
TB,N,GisPlayable
__hasSocialPosts_KEY
_allowsExplicitContentDidChangeNotification:
_cloudLibraryEnabledDidChangeNotification:
_subscriptionStatusDidChangeNotification:
_updateInProgressDidChangeNotification:
setConfiguration:identifyingModelObject:
capabilities
_needsStatusUpdate
_cloudController
_cloudServiceStatusController
Tq,R,N,V_currentStatus
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N,V_configuration
T@"MPModelObject",R,N,V_identifyingModelObject
__shortDescriptionText_KEY
_radioAvailabilityDidChangeNotification:
_radioRecentStationsDidChangeNotification:
_radioModelDidChangeNotification:
_radioModel
userStations
stationSortOrdering
stationWithID:
initWithRadioTrackDictionary:useArtist:
setIncludeCleanTracksOnly:
startWithAddStationCompletionHandler:
sharedModel
defaultRadioLibrary
stationCount
stationWithIdentifier:
addStationBasedOnTrackIDs:completion:
_radioController
initWithPersistentID:size:
requestWithDatabaseID:itemID:size:
signedRequestFromURLRequest:
artworkDataSourceIdentifier
T@"HSHomeSharingLibrary",&,N,V_library
_size
TQ,R,N,V_persistentID
T{CGSize=dd},R,N,V_size
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
languageOptionType
languageTag
languageOptionCharacteristics
copyExternalRepresentation
isEqualToLanguageOption:
_mrLanguageOption
T^v,R,N,V_mrLanguageOption
T@"NSString",R,D,N
T@"NSArray",R,D,N
defaultLanguageOption
allowEmptySelection
_mrLanguageOptionGroup
T^v,R,N,V_mrLanguageOptionGroup
T@"MPNowPlayingInfoLanguageOption",R,D,N
TB,R,D,N
stationDescription
initWithModelStation:
setUniqueIdentifier:
setLocalizedName:
localizedDescription
setLocalizedDescription:
_localizedName
_localizedDescription
T@"NSString",C,N,V_stationStringID
Tq,N,V_uniqueIdentifier
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_localizedDescription
expectedNotifications
receivedNotifications
_cancelNotificationTimerWithReason:
notificationTimer
_startNotificationTimerWithEventHandler:
setNotificationTimer:
setReceivedNotifications:
_expectedNotifications
_receivedNotifications
_notificationTimer
T@"NSSet",R,N,V_expectedNotifications
T@"NSMutableSet",&,N,V_receivedNotifications
T@"NSObject<OS_dispatch_source>",&,N,V_notificationTimer
T@"<_MPActiveUserChangeMonitorDelegate>",W,N,V_delegate
notifyPropagatablePropertyChanged
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
addTarget:action:usingExtendedStatus:
statusWithCode:error:
methodReturnType
methodForSelector:
statusWithCode:
successStatus
removeTarget:action:
setCommand:
_mediaRemoteCommandInfoOptions
disabledReason
_mediaRemoteCommandInfo
isSupportedForContentItemIdentifier:
isEnabledForContentItemIdentifier:
addTarget:action:
removeTarget:
addTargetWithHandler:
isSupportedAndEnabled
newCommandEvent
newCommandEventWithContentItemIdentifier:
newCommandEventWithPlaybackQueueOffset:
newSeekCommandEventWithType:
isObserving
setObserving:
setDisabledReason:
setTimeout:
setSkipSerializedEventDelivery:
_handlers
_observing
_skipSerializedEventDelivery
_mediaRemoteCommandType
_commandCenterDelegate
_disabledReason
T@"<MPRemoteCommandDelegate_Internal>",W,N,V_commandCenterDelegate
observing
TB,N,GisObserving,V_observing
supportedAndEnabled
TB,R,N,GisSupportedAndEnabled
Tq,N,V_disabledReason
Td,N,V_timeout
TI,R,N,V_mediaRemoteCommandType
T@"<MPRemoteCommandDelegate_Private>",W,N,V_delegate
TB,N,V_skipSerializedEventDelivery
TB,N,GisEnabled,V_enabled
setPreferredIntervals:
newCommandEventWithInterval:
preferredIntervals
_preferredIntervals
T@"NSArray",C,N,V_preferredIntervals
setLocalizedShortTitle:
presentationStyle
setPresentationStyle:
newCommandEventWithState:
localizedShortTitle
_presentationStyle
_localizedShortTitle
TB,N,GisActive,V_active
T@"NSString",C,N,V_localizedShortTitle
setMinimumRating:
setMaximumRating:
newCommandEventWithRating:
minimumRating
maximumRating
_minimumRating
_maximumRating
Tf,N,V_minimumRating
Tf,N,V_maximumRating
setSupportedPlaybackRates:
preferredRate
setPreferredRate:
newCommandEventWithPlaybackRate:
supportedPlaybackRates
_preferredRate
_supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
newCommandEventWithType:preservesRepeatMode:
setCurrentRepeatType:
setSupportedRepeatTypes:
newCommandEventWithType:
currentRepeatType
_supportedRepeatTypes
_currentRepeatType
Tq,N,V_currentRepeatType
newCommandEventWithType:preservesShuffleMode:
setCurrentShuffleType:
setSupportedShuffleTypes:
currentShuffleType
_supportedShuffleTypes
_currentShuffleType
Tq,N,V_currentShuffleType
registerSupportedQueueType:
setUpNextItemCount:
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
unregisterSupportedQueueType:
registerSupportedCustomQueueIdentifier:
unregisterSupportedCustomQueueIdentifier:
setSupportedSharedQueue:
upNextItemCount
_registeredSpecializedQueues
_registeredQueueTypes
_registeredCustomQueueIdentifiers
_supportsSharedQueue
_upNextItemCount
Tq,N,V_upNextItemCount
setCanBeControlledByScrubbing:
newCommandEventWithPositionTime:
canBeControlledByScrubbing
_canBeControlledByScrubbing
TB,N,V_canBeControlledByScrubbing
newCommandEventWithInsertingContentItemID:afterContentItemID:
setSupportedInsertionPositions:
T@"NSArray",C,N,V_supportedInsertionPositions
newCommandEventWithPreservesShuffleMode:
newCommandEventWithPreservesRepeatMode:
setCurrentPlaybackSessionIdentifier:
setExportableSessionTypes:
setSupportedSessionTypes:
currentPlaybackSessionIdentifier
currentPlaybackSessionRevision
setCurrentPlaybackSessionRevision:
exportableSessionTypes
supportedSessionTypes
_currentPlaybackSessionIdentifier
_currentPlaybackSessionRevision
_exportableSessionTypes
_supportedSessionTypes
T@"NSString",C,N,V_currentPlaybackSessionIdentifier
T@"NSString",C,N,V_currentPlaybackSessionRevision
T@"NSArray",C,N,V_exportableSessionTypes
T@"NSArray",C,N,V_supportedSessionTypes
commandInfoWithIdentifier:revision:priority:
T@"NSString",R,C,N,V_revision
setPreloadedSessions:
preloadedSessions
_preloadedSessions
T@"NSArray",C,N,V_preloadedSessions
setCurrentQueueEndAction:
setSupportedQueueEndActions:
currentQueueEndAction
supportedQueueEndActions
_currentQueueEndAction
_supportedQueueEndActions
Tq,N,V_currentQueueEndAction
T@"NSArray",C,N,V_supportedQueueEndActions
sectionedItems
sectionIndex
__groupType_KEY
__lastUpdatedDate_KEY
__sectionedItems_KEY
__sectionIndex_KEY
__subgroups_KEY
__loadAdditionalContentURL_KEY
__hrefURL_KEY
__refreshURL_KEY
__displaysAsGridCellInCarPlay_KEY
__displaysAsTitledSectionWithRowsInCarPlay_KEY
refreshURL
_refreshURL
_groupRecommendation
lastUpdatedDate
T@"NSDate",&,D,N
T@"MPSectionedCollection",&,D,N
hrefURL
groupRecommendation
TB,N,GisGroupRecommendation,V_groupRecommendation
displaysAsGridCellInCarPlay
displaysAsTitledSectionWithRowsInCarPlay
kinds
_kinds
T@"NSArray",R,N,V_kinds
__position_KEY
__socialContributor_KEY
___artworkCatalog_KEY
position
socialContributor
_artworkCatalog
T@"MPArtworkCatalog",&,D,N
statusWithCode:dialog:
statusWithCode:customData:type:
dialog
customDataType
customData
commandError
msv_analyticSignature
cacheStatus:forCommandID:
fetchStatusForCommandID:
T@"MPRemoteCommandStatus",R,N
analyticSignature
_dialog
T@"MRSendCommandResultStatus",R,C,N,V_mediaRemoteType
T@"MPRemoteCommandHandlerDialog",R,N
_parse
_populateStorePlatformDataResultsFromRawResponseOutputDictionary:
_parseUsingAdditionalContentIdentifiersFromPreviousParser
_populateUnavailableContentIdentifiersFromPageDataDictionary:
_parseFeaturedContentStructureModelChildren:
_parseSingleContentListFromPageDataDictionary:isMemberOfChartSet:
_parseFeaturedContentChild:isMemberOfChartSet:insertingResultsToSectionedCollection:atSectionIndex:additionalContentIdentifiers:allAdditionalContentIdentifiersNeedingLookup:
_storeItemMetadataForContentIdentifier:
_storeItemMetadataIsAvailableForContentIdentifier:
additionalContentIdentifiers
rawResponseOutput
previousParser
additionalStoreItemMetadataResponse
contentItemBuilder
_additionalContentIdentifiers
_allAdditionalContentIdentifiersNeedingLookup
_storePlatformDataResults
_unavailableContentIdentifiers
_previousParser
_additionalStoreItemMetadataResponse
T@,R,N,V_rawResponseOutput
T{?=BB},R,N,V_options
T@"MPModelStoreBrowseResponseParser",R,N,V_previousParser
T@"MPStoreItemMetadataResponse",R,N,V_additionalStoreItemMetadataResponse
T@"MPModelStoreBrowseSectionBuilder",R,N,V_sectionBuilder
T@"MPModelStoreBrowseContentItemBuilder",R,N,V_contentItemBuilder
T@"MPChangeDetails",R,N,V_changeDetails
enqueuerAccountIdentifier
_isGoodCacheKey
_slowGetCacheKeyWithRequest:completionHandler:
_fastGetCacheKeyWithRequest:completionHandler:
isEqualToNumber:
isDelegated
setEnqueuerAccountIdentifier:
setPersonalized:
localStoreAccountProperties
initWithURL:requestContext:
setAnisetteVersion:
setShouldUseMescalSigning:
ic_valueForHTTPHeaderField:
initWithLongLong:
buildURLRequestWithCompletionHandler:
_personalized
_accountIdentifier
_enqueuerAccountIdentifier
_storefrontIdentifier
T@"NSNumber",C,N,V_accountIdentifier
T@"NSNumber",C,N,V_enqueuerAccountIdentifier
TB,N,GisPersonalized,V_personalized
T@"NSString",C,N,V_storefrontIdentifier
writeInt32:forTag:
hasProperty
hasValue
hasComparisonType
setHasComparisonType:
T@"NSString",&,N,V_property
T@"MPPMediaPredicateValue",&,N,V_value
Ti,N,V_comparisonType
__sectionType_KEY
__uniformContentItemType_KEY
__memberOfChartSet_KEY
__brick_KEY
__previouslyRetrievedNestedResponse_KEY
containsOnlyEditorialElements
setContainsOnlyEditorialElements:
_containsOnlyEditorialElements
memberOfChartSet
TB,D,N,GisMemberOfChartSet
brick
TB,D,N,GisBrick
T@"MPModelStoreBrowseResponse",&,D,N
TB,N,V_containsOnlyEditorialElements
isSubsetOfSet:
containsPropertySet:
T@"NSSet",R,N,V_properties
T@"NSDictionary",R,N,V_relationships
addRelationship:properties:
removeRelationship:
storeItemMetadataForItemIdentifier:returningIsFinalMetadata:
allStoreItemDictionaries
cacheMissItemIdentifiers
earliestExpirationDate
_cacheMissItemIdentifiers
_itemIdentifierToStoreItemMetadata
_allStoreItemDictionaries
_finalResponse
_lastBatchItemIdentifiers
_requestItemIdentifiers
_performanceMetrics
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSArray",C,N,V_cacheMissItemIdentifiers
T@"NSArray",C,N,V_requestItemIdentifiers
T@"NSArray",C,N,V_lastBatchItemIdentifiers
T@"NSArray",&,N,V_performanceMetrics
screens
_isWorkspaceCapable
T@"MPModelTVEpisodeKind",R,N,V_episodeKind
__number_KEY
__episodesCount_KEY
__sortType_KEY
__representativeEpisode_KEY
episodesCount
sortType
representativeEpisode
_cancelButtonAction:
_setSeparatorBackdropOverlayBlendMode:
setTitleColor:forState:
_setVisualAltitude:
titleLabel
_updateDismissButtonText
initWithAVItemType:
_routingViewFrame
_cancelButtonFrame
_controlsViewFrame
setWindowLevel:
_updateRoutingSheetFrame
_animateControls:withCompletionHandler:
_animateUsingDefaultTimingWithOptions:animations:completion:
setTitle:forState:
_maxRoutingViewSize
safeAreaInsets
showInView:withCompletionHandler:
_presentationWindow
_dismissBackgroundButton
_dismissControlsViewButton
_controlsView
_cancelButton
_completionHandler
Tq,N,SsetAVItemType:
_isSecure
_canAffectStatusBarAppearance
setScopes:
setMaximumResultsPerScope:
_scopes
_maximumResultsPerScope
T@"NSArray",C,N,V_scopes
Tq,N,V_maximumResultsPerScope
hasMoreResultsForSectionAtIndex:
searchWeightForIndexPath:
scope
entityQueryResult
entityTranslationContext
resultContainers
_resultContainers
T@"NSArray",R,C,N,V_resultContainers
_scope
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_entityQueryResult
T@"MPModelLibrarySearchScope",R,C,N,V_scope
T@"MPMediaLibraryEntityTranslationContext",R,N,V_entityTranslationContext
predicateWithBaseProperty:
applyToView:withContext:
songKind
seasonKind
translatorForTransientMPModelClass:
mapIdentifierMLProperties:identifierCreationBlock:
setEntityQueryBlock:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:
translatorForMPModelClass:mlcoreEntityClass:
setSyncID:
setReportingAdamID:
setAssetAdamID:
setShouldExcludeFromShuffle:
syncID
setAllowedItemPredicatesBlock:
mapPropertyKey:toMLProperty:
mapPropertyKey:withPropertiesToFetch:valueTransformer:
_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering
mapPropertyKey:withPropertiesToFetch:propertiesToSort:sortTransformer:valueTransformer:
mapRelationshipKey:toModelClass:usingForeignPropertyBase:
stringByDeletingPathExtension
isMultiQuery
setContainedPersistentID:
setHandoffCorrelationID:
propertiesToFetchForPropertyKey:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:relationshipValidationProperties:isValidRelationshipHandler:
setScreen:
_presentationViewController
presentedViewController
rootViewController
setSizesWindowToScene:
isInternalWindow
presentAlertController:animated:completion:
_existingRepresentationForArtworkCatalog:fromCacheOnly:
_cachedRepresentationForCatalog:
_isRepresentation:validForCatalog:
_representationAtSize:forCatalog:
_cacheRepresentation:forCatalog:
_resizeArtwork:forCatalog:toSize:completionHandler:
_resizeOriginalArtworkForArtworkCatalog:completionHandler:
initWithArtworkType:availableArtworkToken:fetchableArtworkToken:
initWithContentsOfFile:
mediaLibraryUniqueIdentifier
fallbackCache
initWithArtworkCatalog:representativeSize:
_isRepresentationSize:validForFittingSize:
initWithSourceURL:
addJPEGDestinationWithSize:compressionQuality:url:
addDestinationWithFormat:size:url:
sendRequest:completionHandler:
artworkResizeUtility
setFallbackCache:
setArtworkResizeUtility:
_mediaLibraryUniqueIdentifier
T@"NSCache",&,N,V_fallbackCache
T@"MPArtworkResizeUtility",&,N,V_artworkResizeUtility
T@"NSString",C,N,V_mediaLibraryUniqueIdentifier
catalogIdentifier
setCatalogIdentifier:
_catalogIdentifier
T@,C,N,V_catalogIdentifier
T@"NSString",R,N,V_availableArtworkToken
T@"NSString",R,N,V_fetchableArtworkToken
firstMatchInString:options:range:
signatureWithCountryCode:adamID:startTime:endTime:language:
removeCharactersInString:
setPercentEncodedQueryItems:
setLength:
base64EncodedStringWithOptions:
initWithSong:language:startTime:endTime:
URLWithAdditionalParameters:completion:
_language
_countryCode
_signature
Td,R,N,V_startTime
Td,R,N,V_endTime
Tq,R,N,V_songAdamID
T@"NSString",R,N,V_language
T@"NSString",R,N,V_countryCode
T@"NSString",R,N,V_signature
__filePath_KEY
__fileSize_KEY
__nonPurgeable_KEY
__protectionType_KEY
__purchaseBundleFilePath_KEY
__qualityType_KEY
__hlsKeyServerURL_KEY
__hlsKeyServerProtocol_KEY
__hlsKeyCertificateURL_KEY
nonPurgeable
TB,D,N,GisNonPurgeable
purchaseBundleFilePath
qualityType
hlsKeyServerURL
T@"NSString",C,D,N,SsetHLSKeyServerURL:
hlsKeyServerProtocol
T@"NSString",C,D,N,SsetHLSKeyServerProtocol:
hlsKeyCertificateURL
T@"NSString",C,D,N,SsetHLSKeyCertificateURL:
albumArtistArtworkCatalog
artistArtworkCatalog
_artworkCatalogRepresentativeItem
artworkCatalogCachePropertiesForGroupingType:
_initWithEndpointRoute:
_generateDiscoverySession
removeOutputDevicesChangedCallback:
isLocalEndpoint
applicationOutputContext
_globalAudioSessionLock
setDidFinishLoading:
_personalRoutesDidChange
longFormVideoRoutingSessionManager
_outputDevicesDidChange:
addOutputDevicesChangedCallback:
isCompanionEndpoint
setDiscoverySession:
availableOutputDevices
setPredictedDevice:
logicalDeviceID
isLocalDevice
_setShouldSourceOutputDevicesFromAVODDS:
routingSessionManager
currentRoutingSession
outputDeviceDescriptions
deviceID
personalOutputDevices
activeAudioCategory
filterUsingPredicate:
filterMode
activeActivityExistsForBundle:
migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:
_detachableDevicesInOutputDevices:
createGroupFromOutputDevices:queue:completion:
predictedDevice
_resetPredictedOutputDevice
createEndpointWithOutputDeviceUIDs:queue:completion:
outputDevicesForRoutes:
_shouldAddPredictedDeviceToOuputDevices:
migrateToOrAddOutputDevices:initiator:withReplyQueue:completion:
addOutputDevices:initiator:withReplyQueue:completion:
_isRemovingPredictedDevice:
_outputDeviceRouteWithUID:
isEligibleForWHAPlayback
msv_filter:
_shouldDetachOutputDevicesToGroup:
isGroupable
supportsBluetoothSharing
_outputDevicesDidChangeNotification:
initWithEndpointRoute:
setCompanionDiscoverySession:
addRouteToGroup:completion:
removeRouteFromGroup:completion:
_endpointsDidChangeNotification:
setApplicationOutputContext:
setSupportsMultipleSelection:
detachesRoutesToGroup
setDetachesRoutesToGroup:
supportsQueueHandoff
setSupportsQueueHandoff:
initiator
setInitiator:
supportsRoutePrediction
setSupportsRoutePrediction:
companionDiscoverySession
discoverySession
_discoverySessionQueue
_attemptedToInitializeAppOutputContext
_companionCallbackToken
_didFindCompanion
_supportsMultipleSelection
_devicePresenceDetected
_outputDeviceRoutes
_shouldSourceOutputDevicesFromAVODDS
_routingSessionManager
_didFinishLoading
_detachesRoutesToGroup
_supportsQueueHandoff
_supportsRoutePrediction
_applicationOutputContext
_predictedDevice
_initiator
_companionDiscoverySession
T@"MPMRAVOutputContextWrapper",&,N,V_applicationOutputContext
T@"MRAVRoutingDiscoverySession",&,N,V_companionDiscoverySession
T@"MRAVRoutingDiscoverySession",&,N,V_discoverySession
T@"MRAVEndpoint",R,N
T@"MRAVOutputDevice",&,N,V_predictedDevice
TB,N,V_supportsMultipleSelection
TB,N,V_detachesRoutesToGroup
TB,N,V_supportsQueueHandoff
T@"NSString",&,N,V_initiator
TB,N,V_supportsRoutePrediction
_internalUserActivity
objectForIdentifier:
payloadForIdentifier:
setPayload:object:identifier:
setPayloadIdentifier:object:withBlock:
_setExternalMediaContentBundleIdentifier:
externalMediaContentIdentifier
setExternalMediaContentIdentifier:
_externalMediaContentBundleIdentifier
_beginScrubbing
prepare
selectionChanged
_minimumScale
_commitValue:
_endScrubbing
_scaleForIdealValueForVerticalPosition:
scrubbingControl
setScrubbingControl:
scrubbingVerticalRange
setScrubbingVerticalRange:
_didBeginTracking
_needsCommit
_accumulatedDelta
_beginLocationInView
_lastCommittedLocationInView
_currentValue
_feedbackGenerator
_detailedScrubbingEnabled
_scrubbingControl
_scrubbingVerticalRange
_currentScrubSpeed
T@"UIControl<MPDetailedScrubbing>",W,N,V_scrubbingControl
T@"<MPDetailScrubControllerDelegate>",W,N,V_delegate
Td,N,V_scrubbingVerticalRange
TB,N,V_detailedScrubbingEnabled
TB,R,N,V_isTracking
Tq,R,N,V_currentScrubSpeed
requestedProperties
offerWithType:
collectionStoreAdamID
artistStoreAdamID
initWithRequestedProperties:
genericObjectForStorePlatformMetadata:userIdentity:
_requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
_lightweightPersonalizationPropertiesForStoreAsset
_lightweightPersonalizationPropertiesForPlaybackPosition
_lightweightPersonalizationPropertiesForLyrics
Tq,R,N,V_personalizationStyle
initWithCFUserNotification:
_setUserNotification:forCFUserNotification:
_cancelSynchronously:
_userNotificationConversionAccessQueue
_userNotificationForCFUserNotification:
willShowNotificationHandler
setWillShowNotificationHandler:
showWithCompletionHandler:
_didReceiveResponseWithFlags:
cfUserNotification
_callbackInvocationQueue
_willShowNotificationHandler
strongSelf
_isShowing
_runLoopSource
_showingCompletionHandlers
_cfUserNotification
T^{__CFUserNotification=},R,N,V_cfUserNotification
_performWithSharedAccessForDataProviderEntityClass:block:
_entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:
_performWithExclusiveAccessForDataProviderEntityClass:block:
_clearSomeGlobalEntityTemporaryReferences
_entityMapForDataProviderEntityClass:
itemWithIdentifier:
_mediaLibraryDataProvider
_mediaLibraryDataProviderRespondsToSupportsEntityChangeTrackingMethod
_rwlock
_entityCacheMapLock
_deallocLaterQueue
_concreteEntitiesByDataProviderEntityClass
_entityTemporaryReferences
_endpointOutputDevicesDidChange:
effectiveGroupLeader
_endpointDidChange:
_groupLeaderIsOfDeviceSubtype:
_outputDevicesComposition
isRemoteControllable
canRelayCommunicationChannel
supportsMultiplayer
getActiveEndpointRouteWithCompletion:
sortName
establishGroup
canModifyGroupMembership
_sortName
_endpointWrapper
T@"MPAVRouteConnection",&,N
T@"MPMRAVEndpointWrapper",&,N,V_endpointWrapper
baseURLStringForReport
componentsWithString:
contentID
concernItemType
concernTypeID
commentText
aucType
_performWithBag:
_deleteCommentURLComponentsFromBag:
_deletePostURLComponentsFromBag:
_dictionariesForType:
setConcernItemType:
setConcernTypeID:
setDisplayText:
setContentID:
setAucType:
setCommentText:
_reportConcernBagDictionary
sharedReporter
T@"MPStoreContentReporter",R,N
submitReport:completion:
deleteComment:activityID:completion:
deletePost:completion:
reportsForType:contentID:aucType:commentText:
setUserID:
displayText
_userID
_contentID
_concernItemType
_commentText
_aucType
_concernTypeID
_displayText
T@"NSString",C,N,V_displayText
T@"NSString",C,N,V_userID
T@"NSString",C,N,V_contentID
Tq,N,V_concernItemType
T@"NSString",C,N,V_commentText
T@"NSString",C,N,V_aucType
T@"NSString",C,N,V_concernTypeID
ic_URLByAppendingQueryParameters:
_fetchContainerItemMetadataForBatch:progressHandler:
_workQueue
_itemIDsForRequest
setArtworkImageData:
artworkImageData
initWithTitle:subtitle:artworkImageData:
_subtitle
_artworkImageData
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"NSData",R,C,N,V_artworkImageData
isCurrentDeviceValidHomeAccessory
_postNotificationWithName:
setupIfNecessary
T@"MPHomeMonitor",R,N
_handlePersistentID:modelClass:keepLocal:mediaLibrary:
_handleKeepLocalUpdateStatus:forLibraryIdentifier:mediaType:completedWithError:
setMediaItem:
setKeepLocal:
T@"MPModelLibraryKeepLocalChangeRequest",C,N,V_request
keepLocal
_keepLocal
T@"MPMediaItem",&,N,V_mediaItem
Tq,N,V_keepLocal
_superclassRegisterNotifications
_reloadActiveAudioCategoryWithCompletion:
_superclassUnregisterNotifications
attributeForKey:
setFilterMode:
_workerQueue
_activeAudioCategory
_filterMode
TB,R,N,V_didFinishLoading
TB,R,N,V_devicePresenceDetected
Tq,N,V_filterMode
TI,N,V_targetSessionID
__endpointType_KEY
__redownloadParameters_KEY
__redownloadable_KEY
__accountIdentifier_KEY
__shouldReportPlayEvents_KEY
__needsUserUpload_KEY
redownloadable
TB,D,N,GisRedownloadable
needsUserUpload
_initializeWithType:tasteType:
playlistGlobalID
_playlistGlobalID
_storeAdamID
_tasteType
_UUID
T@"NSString",R,N,V_playlistGlobalID
Tq,R,N,V_storeAdamID
Tq,R,N,V_tasteType
T@"NSUUID",R,N,V_UUID
homeUserIdentifiers
isExplicitSettingEnabled
setExplicitSettingEnabled:
isPrivateListeningEnabledForCurrentAccessory
setPrivateListeningEnabledForCurrentAccessory:
userSettingsForHome:
settings
privateSettings
_loadAllowExplicitValue
_loadCurrentAccessoryPrivateListening
rootGroup
updateValue:completionHandler:
hasAccessoryWithRouteID:
privateListeningEnabledForAccessoryWithRouteID:
_notifyAllowExplicitUpdated
_notifyPrivateListeningUpdated
userMonitorWithUserIdentity:fromUserIdentityStore:
isExplicitSettingEnabledForCurrentUser
setExplicitSettingEnabledForCurrentUser:
isPrivateListeningEnabledForCurrentUserAndAccessory
setPrivateListeningEnabledForCurrentUserAndAccessory:
settingsDidUpdate:
settingsWillUpdate:
settings:didUpdateForIdentifier:keyPath:
user:didUpdateAssistantAccessControl:forHome:
user:didUpdateMediaContentProfileAccessControl:forHome:
user:didUpdatePhotosPersonManagerSettings:
user:didUpdatePersonManagerSettings:
user:didUpdatePairingIdentity:
user:didUpdateNeedsiTunesMultiUserRepair:
explicitSettingEnabledForCurrentUser
TB,N,GisExplicitSettingEnabledForCurrentUser
privateListeningEnabledForCurrentUserAndAccessory
TB,N,GisPrivateListeningEnabledForCurrentUserAndAccessory
setPrivateListeningEnabledForAccessoryWithRouteID:enabled:
privateListeningEnabledForGroupWithRouteIDs:
_updateUserListeningHistoryControlForAccessory:enable:
user:didUpdateUserListeningHistoryUpdateControl:forHome:
_user
_home
_privateHomeSettings
_sharedSettings
_allowExplicitCachedValue
_currentAccessoryPrivateListeningCachedValue
explicitSettingEnabled
TB,N,GisExplicitSettingEnabled
privateListeningEnabledForCurrentAccessory
TB,N,GisPrivateListeningEnabledForCurrentAccessory
groups
valueClass
_seasonKind
T@"MPModelTVSeasonKind",R,C,N,V_seasonKind
__shortTitle_KEY
__creator_KEY
creator
T@"MPModelTVShowCreator",C,D,N
shortTitle
writeBOOL:forTag:
writeInt64:forTag:
hasShouldContain
clearPersistentIDs
persistentIDsAtIndex:
setHasShouldContain:
setPersistentIDs:count:
TB,N,V_shouldContain
T^q,R,N
mediaLibraryArtworkType
setMediaLibraryArtworkType:
artworkInfo
_resolvedURLString
_artworkTemplateItems
_mediaLibraryArtworkType
T@"ICStoreArtworkInfo",R,N
T@"NSString",C,N,V_resolvedURLString
T@"NSArray",C,N,V_artworkTemplateItems
TQ,N,V_mediaType
Tq,N,V_mediaLibraryArtworkType
writeDouble:forTag:
writeFloat:forTag:
hasIntegerPredicateValue
hasDoublePredicateValue
hasFloatPredicateValue
hasBoolPredicateValue
setBoolPredicateValue:
hasStringPredicateValue
hasBytesPredicateValue
setHasIntegerPredicateValue:
setHasDoublePredicateValue:
setHasFloatPredicateValue:
setHasBoolPredicateValue:
_doublePredicateValue
_integerPredicateValue
_bytesPredicateValue
_floatPredicateValue
_stringPredicateValue
_boolPredicateValue
Ti,N,V_type
Tq,N,V_integerPredicateValue
Td,N,V_doublePredicateValue
Tf,N,V_floatPredicateValue
TB,N,V_boolPredicateValue
T@"NSString",&,N,V_stringPredicateValue
T@"NSData",&,N,V_bytesPredicateValue
__uncensoredName_KEY
__biography_KEY
__privatePerson_KEY
__verified_KEY
__pendingRequestsCount_KEY
uncensoredName
biography
TB,D,N,GisPrivate
verified
TB,D,N,GisVerified
pendingRequestsCount
_objectOfClass:forKey:error:
_saveObject:forKey:error:
dataForKey:
decodedObjectOfClass:fromData:error:
encodedDataWithRootObject:error:
T@"MPMusicPlayerControllerSystemCache",R,N
clearCache
_defaults
T@"MPMusicPlayerControllerNowPlaying",&,N
T@"MPMusicPlayerQueueDescriptor",&,N
initWithReuseIdentifier:
textLabel
_updateFont
_preferredFontForTextStyle:maximumContentSizeCategory:
titleInsets
setTitleInsets:
_titleInsets
T{UIEdgeInsets=dddd},N,V_titleInsets
_performTransientFollowState:onPerson:completion:
_newOperationForRemovingFollower:completion:
_transientStateForPerson:shouldCreate:
followState
_performTransientFollowPendingRequestState:onPerson:completion:
followPendingRequestState
_transientStatesDidChange
newOperationForTransientFollowState:completion:
newOperationForTransientFollowPendingRequestState:completion:
initWithPerson:
_queue_transientStatesDidChange
_handleTransientStateForPersonDidChangeNotification:
_addTransientFollowState:transientFollowPendingRequestState:forPerson:
_populateTransientStatesSnapshot:
_notifyTransientStatesDidChangeWithSnapshot:
followPerson:completion:
unfollowPerson:completion:
requestFollowPerson:completion:
cancelFollowRequestOnPerson:completion:
blockPerson:completion:
unblockPerson:completion:
removeFollower:completion:
transientFollowStateForPerson:
acceptAllFollowRequestsWithCompletion:
acceptFollowRequestFromPerson:completion:
declineFollowRequestFromPerson:completion:
transientFollowPendingRequestStateForPerson:
_transientStates
_endIfNeeded
completionBlock
_followState
_followPendingRequestState
_latestFollowOperation
_latestFollowPendingRequestOperation
_completionBlock
T@"MPModelSocialPerson",R,N,V_person
T@?,C,N,V_completionBlock
_transientFollowStatesPerProfileID
_transientFollowPendingRequestStatesPerProfileID
propertiesToFetchMap
setPropertiesToFetchMap:
propertiesToSortMap
setPropertiesToSortMap:
sortTransformer
setSortTransformer:
valueTransformer
setValueTransformer:
_sortTransformer
_valueTransformer
_propertiesToFetchMap
_propertiesToSortMap
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_propertiesToFetchMap
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_propertiesToSortMap
T@?,C,N,V_sortTransformer
T@?,C,N,V_valueTransformer
relationshipModelClass
entityTranslator
setRelationshipModelClass:
transient
setTransient:
foreignPropertyBase
setForeignPropertyBase:
relationshipValidationProperties
setRelationshipValidationProperties:
validRelationshipHandler
setValidRelationshipHandler:
_transient
_relationshipModelClass
_foreignPropertyBase
_validRelationshipHandler
_relationshipValidationProperties
T#,N,V_relationshipModelClass
TB,N,V_transient
T^v,N,V_foreignPropertyBase
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_relationshipValidationProperties
T@?,C,N,V_validRelationshipHandler
T@"MPMediaLibraryEntityTranslator",R,N
_translatorForMPModelClass:mlcoreEntityClass:create:transient:
_objectForPropertySet:entity:baseTranslator:prependKeyPath:context:
_valueForKeyPath:forEntity:context:
entityQueryBlock
ascending
MLCoreSortDescriptorsForModelSortDescriptors:
_MLCorePropertiesForPropertySet:withForeignPropertyBase:
_propertyTranslatorForKeyPath:
_propertyMapForKeyPath:includePropertiesToSort:
_propertyForKeyPath:
isTransient
allowedItemPredicatesBlock
_allowedItemPredicatesBlock
_entityQueryBlock
TB,R,N,GisTransient,V_transient
T^v,R,N,V_entityClass
T@?,C,N,V_allowedItemPredicatesBlock
T@?,C,N,V_entityQueryBlock
_multiQuery
_allowedEntityIdentifiers
_modelKind
T@"NSArray",&,N,V_allowedEntityIdentifiers
T@"NSArray",&,N,V_scopedContainers
multiQuery
TB,N,GisMultiQuery,V_multiQuery
T@"MPModelKind",&,N,V_modelKind
T@"NSString",&,N,V_personID
T@"NSString",&,N,V_filterText
setClips:
_mediaClipBuilder
_requestedMovieProperties
_initWithModelKind:block:
containedPersistentID
recommendationID
stationEventID
handoffCorrelationID
shouldExcludeFromShuffle
vendorID
identifierDescriptions:
setPlaceholder:
setStationHash:
setStationID:
reportingAdamID
assetAdamID
clearLibraryIdentifiers
clearPersonalStoreIdentifiers
_setDefaultDatabaseIDIfNeeded
_setDefaultPersonIDIfNeeded
clearUniversalStoreIdentifiers
clearRadioIdentifiers
TB,N,GisPlaceholder
hasCommonIdentifierWithIdentifierSet:
deviceLibraryPersistentID
setDeviceLibraryPersistentID:
radioStationStringID
setRadioStationStringID:
radioStationHash
setRadioStationHash:
radioStationID
setRadioStationID:
setStoreAdamID:
setFormerStoreAdamIDs:
storeCloudAlbumID
setStoreCloudAlbumID:
storeRecommendationID
setStoreRecommendationID:
needsPersonalization
_shouldExcludeFromShuffle
_placeholder
_databaseID
_containedPersistentID
_syncID
_cloudID
_cloudAlbumID
_recommendationID
_adamID
_formerAdamIDs
_universalCloudLibraryID
_purchasedAdamID
_subscriptionAdamID
_socialProfileID
_informalMediaClipID
_informalStaticAssetID
_reportingAdamID
_assetAdamID
_stationHash
_stationEventID
_containerUniqueID
_handoffCorrelationID
_vendorID
T@"NSString",C,N,V_containerUniqueID
T@"NSString",C,N,V_handoffCorrelationID
T@"NSString",C,N,V_lyricsID
TB,N,V_shouldExcludeFromShuffle
TB,N,GisPlaceholder,V_placeholder
T@"NSString",C,N,V_vendorID
Tq,N,V_syncID
T@"NSString",C,N,V_socialProfileID
T@"NSString",C,N,V_informalMediaClipID
T@"NSString",C,N,V_informalStaticAssetID
T@"MPModelKind",R,N,V_modelKind
T@"<MPLocalLibraryIdentifiers>",R,N
T@"<MPPersonalStoreIdentifiers>",R,N
T@"<MPUniversalStoreIdentifiers>",R,N
T@"<MPRadioIdentifiers>",R,N
Tq,N,V_persistentID
Tq,N,V_containedPersistentID
T@"NSString",R,N,V_databaseID
TQ,N,V_cloudID
T@"NSString",C,N,V_cloudAlbumID
T@"NSString",C,N,V_recommendationID
T@"NSString",R,N,V_personID
Tq,N,V_adamID
T@"NSArray",C,N,V_formerAdamIDs
T@"NSString",C,N,V_universalCloudLibraryID
Tq,N,V_purchasedAdamID
Tq,N,V_subscriptionAdamID
Tq,N,V_reportingAdamID
Tq,N,V_assetAdamID
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
T@"NSString",C,N,V_stationEventID
setMaskView:
_separatorFrame
_setShouldHaveFullLengthTopSeparator:
_setShouldHaveFullLengthBottomSeparator:
topSeparatorView
shouldHideSectionBottomSeparator
clippingContentView
setClippingContentView:
clippingMaskView
setClippingMaskView:
clippingInsets
_shouldHideSectionBottomSeparator
_topSeparatorView
_bottomSeparatorView
_clippingContentView
_clippingMaskView
_clippingInsets
T@"UIView",&,N,V_clippingContentView
T@"UIView",&,N,V_clippingMaskView
T{UIEdgeInsets=dddd},N,V_clippingInsets
T@"UIView",R,N,V_topSeparatorView
T@"UIView",R,N,V_bottomSeparatorView
TB,N,V_shouldHideSectionBottomSeparator
__explicitEpisode_KEY
__streamURL_KEY
__seasonNumber_KEY
explicitEpisode
TB,D,N,GisExplicitEpisode
_updateRouteLabel
contentLabel
_textColorFollowsTintColor
_routeDidChangeNotification:
_plusSeparatedRouteNames:
_formattedRouteNameForDesignatedGroupLeaderNameText:routeNamesText:
_labelSizeForText:
_bestStringThatFitsSize:
_marketingNames
localizedUppercaseString
_compareLength:with:
_routeNamesSortedAlphanumeric:
_updateTitleIfNeeded
_routeNamesSortedLength:
displayAsSiriSuggestion
_labelFitsText:withSize:
_truncateText:by:
setMinimumEndCharacterCount:
setTruncationMode:
setDisplayAsSiriSuggestion:
addRouteName:
addRouteNamesFromArray:
removeRouteName:
removeRouteNamesFromArray:
minimumEndCharacterCount
truncationMode
setContentView:
textAlignment
_designatedGroupLeaderName
_previousDesignatedGroupLeaderName
_previousBounds
_previousFont
_previousRouteNames
_previousForcesUppercaseText
_previousDisplayAsSiriSuggestion
_previousTruncationMode
_routeNames
_sizingLabel
_forcesUppercaseText
_displayAsSiriSuggestion
_minimumEndCharacterCount
_text
_truncationMode
_route
_contentView
_textAlignment
T@"BSUIEmojiLabelView",&,N,V_contentView
Tq,N,V_minimumEndCharacterCount
T@"NSString",R,C,N,V_text
Tq,N,V_truncationMode
TB,N,V_forcesUppercaseText
TB,N,V_displayAsSiriSuggestion
T@"MPAVRoute",&,N,V_route
T@"UILabel",R,N
T@"UIColor",&,N,V_textColor
Tq,N,V_textAlignment
TB,N,S_setTextColorFollowsTintColor:
setArtworkConfiguration:
initWithConfigurationDictionaries:
artworkConfiguration
sizesToAutogenerateForMediaType:artworkType:
_artworkConfiguration
T@"ML3ArtworkConfiguration",&,N,V_artworkConfiguration
initWithMediaAPICollectionItemMetadataRequests:collectionMetadataRequest:authTokenRenewalRequests:totalItemRequestCount:
collectionItemRequests
tokenRenewalRequests
collectionRequests
totalRequestItemCount
_collectionItemRequests
_tokenRenewalRequests
_totalRequestItemCount
_collectionRequests
T@"NSArray",R,C,N,V_collectionItemRequests
T@"NSArray",R,C,N,V_tokenRenewalRequests
T@"NSArray",R,C,N,V_collectionRequests
TQ,R,N,V_totalRequestItemCount
sharedConnection
_updateWithCanPostNotifications:
settingEnabled
effectiveValueForSetting:
_cacheValue:forSetting:
isRunningInStoreDemoMode
_isRunningInStoreDemoMode
notificationWithName:object:
effectiveBoolValueForSetting:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
T@"MPRestrictionsMonitor",R,N
hasRestrictionsPasscode
allowsAccountModification
allowsDeletion
allowsStorePurchases
allowsRadioPurchases
allowsRadioService
maximumTVShowRatingForAgeGate
setMaximumTVShowRatingForAgeGate:
maximumMovieRatingForAgeGate
setMaximumMovieRatingForAgeGate:
_cachedSettings
_homeUserMonitorToken
_allowsAccountModification
_allowsDeletion
_allowsExplicitContent
_allowsMusicSubscription
_allowsStorePurchases
_allowsRadioPurchases
_allowsRadioService
_allowsMusicVideos
_maximumTVShowRatingForAgeGate
_maximumMovieRatingForAgeGate
Tq,N,V_maximumTVShowRatingForAgeGate
Tq,N,V_maximumMovieRatingForAgeGate
TB,R,N,V_allowsAccountModification
TB,R,N,V_allowsDeletion
TB,R,N,V_allowsExplicitContent
TB,R,N,V_allowsMusicSubscription
TB,R,N,V_allowsStorePurchases
TB,R,N,V_allowsRadioPurchases
TB,R,N,V_allowsRadioService
TB,R,N,V_allowsMusicVideos
_setup
_tearDown
_mediaPlaybackVolumeAudioCategory
_volumeApplyingEUVolumePolicyToVolume:
setVolumeTo:forCategory:
volumeCategoryForAudioCategory:
_reloadQueue
getVolume:forCategory:
currentRouteHasVolumeControl
updateVolumeControlCapabilities:
updateVolume:
_reloadEUVolumeLimits
_updateRouteLabelForRoute:
_systemVolumeDidChange:
_systemMuteDidChange:
_volumeDidChangeNotification:
_volumeControlCapabilitiesDidChangeNotification:
T@"<MPVolumeControllerDataSourceDelegate>",W,N
_EUVolumeLimitDidChange:
_EUVolumeLimitEnforcedDidChange:
_debugVolumeWarning
_volumeInitialized
_volumeControlCapabilitiesInitialized
_pendingVolumeCompletions
_avscQueue
_avSystemController
_volumeControlAvailable
_volumeWarningEnabled
_volume
_EUVolumeLimit
_volumeAudioCategory
_volumeControlLabel
_volumeWarningState
T@"NSString",C,N,V_volumeAudioCategory
T@"<MPVolumeControllerDataSourceDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_volumeControlLabel
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
Tf,N,V_volume
TB,N,GisMuted,V_muted
TB,R,N,V_volumeWarningEnabled
Tq,R,N,V_volumeWarningState
Tf,R,N,V_EUVolumeLimit
_routeVolumeDidChangeNotification:
_routeVolumeControlCapabilitiesDidChangeNotification:
_setPendingVolumeIfNeeded
_sendVolumeButtonEventWithUsagePage:usage:down:
_updateVolumeControlCapabilities:
containsUID:
_pendingVolume
_hasPendingVolume
_hasVolumeInFlight
_volumeCapabilitiesInitialized
T@"MPAVRoute",&,N,V_groupRoute
T@"MPAVRoute",&,N,V_outputDeviceRoute
setImageArtworkInfo:
setArtworkInfoType:
setVideoArtworkInfo:
tokenWithVideoArtworkInfo:
sourceEditorialArtworkKind
_artworkInfoType
_imageArtworkInfo
_videoArtworkInfo
_cropStyle
_format
_sourceEditorialArtworkKind
_artworkURL
Tq,N,V_artworkInfoType
T@"ICStoreArtworkInfo",C,N,V_imageArtworkInfo
T@"ICStoreVideoArtworkInfo",C,N,V_videoArtworkInfo
T@"NSString",C,N,V_cropStyle
T@"NSString",C,N,V_format
T@"NSString",C,N,V_sourceEditorialArtworkKind
T@"NSURL",C,N,V_artworkURL
_SSPurchaseForType:attributes:
_setSSPurchase:SSPurchaseResponse:
initWithType:attributes:
initWithPersistentIdentifier:
_setSSDownload:
phaseIdentifier
isCanceled
_SSDownload
bytesDownloaded
bytesTotal
persistentIdentifier
_SSPurchase
placeholderDownloadIdentifier
downloadSizeLimit
_isCanceled
_SSPurchaseResponse
_valueForDownloadProperty:
_currentOverridePhaseIdentifier
downloadPhaseIdentifier
valueForExternalProperty:
assetsForType:
resetCachedExternalProperties:count:
enumerateObjectsWithOptions:usingBlock:
setBuyParameters:
setIgnoresForcedPasswordRestriction:
downloadPolicy
initWithDownloadKind:URLBagType:
setCellularDataStates:
policyRules
setPolicyRules:
setDownloadPolicy:
setNetworkTypes:
setDownloadSizeLimit:
setFallbackNumberValue:
addUserDefaultState:
setShouldInvertBoolValue:
setBackgroundPurchase:
setDisplaysOnLockScreen:
setValue:forDownloadProperty:
setURLBagKey:
setRequestProperties:
valueForDownloadProperty:
storeDownloadWithDownloadIdentifier:
downloadIdentifier
isPurchasing
isRestore
isPaused
purchaseError
rentalInformation
resetCachedRentalInformation
_setCanceled:
_getDownloadFilePath
_setDownloadFilePath:
_addOverridePhaseIdentifier:
_removeOverridePhaseIdentifier:
_canceled
_overridePhaseIdentifiers
_downloadFilePath
T@"NSDictionary",R,N,V_attributes
canceled
TB,R,N,GisCanceled
finished
TB,R,N,GisFinished
purchasing
TB,R,N,GisPurchasing
paused
TB,R,N,GisPaused
restore
TB,R,N,GisRestore
setAcquireFunction:
setRelinquishFunction:
setHashFunction:
setIsEqualFunction:
setSizeFunction:
setDescriptionFunction:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
setDownloadKinds:
IPodDownloadKinds
setPersistenceIdentifier:
setPrefetchedDownloadExternalProperties:
setPrefetchedDownloadProperties:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
_shouldHideDownload:
_updateMediaItemPropertiesForFinishedStoreDownload:SSDownload:
_updateDownloadsWithAdditions:removals:
finishDownloads:
getDownloadsUsingBlock:
initWithManagerIdentifier:
getPurchasesUsingBlock:
activeDownloads
_onQueue_findStoreDownloadWithSSDownload:SSPurchase:
_sendDownloadsDidFinishToObserversForDownloads:notifyDownloadManager:completionHandler:
addPurchases:withCompletionBlock:
initWithDownload:
setDidFinishDownloadHandler:
_registerBlockObserver:
_updateActiveDownloadsWithCancelledDownloads:
_addNonCancelledDownloadsToActiveList:
cancelDownloads:completionBlock:
cancelPurchases:withCompletionBlock:
pauseDownloads:completionBlock:
_sendDownloadsDidProgressToObserversForDownloads:
resumeDownloads:completionBlock:
_existingDownloadForSSDownload:
restartDownloads:completionBlock:
downloadForMediaItemPersistentID:
downloadForStoreID:
prioritizeAboveDownload:completionBlock:
moveDownload:afterDownload:completionBlock:
movePurchases:afterPurchase:withCompletionBlock:
reloadFromServer
downloads
purchase
_sendDownloadsDidFinishPurchasesToObserversForDownloads:
_onQueue_addDownloadToMapTables:
_isActiveDownload:
_updateActiveDownloadsWithChangedActiveDownloads:inactiveDownloads:
_observersForAllDownloads
downloadManagerNetworkUsageDidChange:
setDidFinishPurchaseHandler:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:didAddDownloads:removeDownloads:
_observersForDownload:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadDidFinish:
downloadManager:downloadsDidProgress:
downloadManager:downloadDidProgress:
_sendActiveDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_onQueue_hasExistingDownloadForStoreDownload:
_onQueue_removeDownloadFromMapTables:
_sendDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
purchaseManager:didFinishPurchasesWithResponses:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
downloadHandlerDidDisconnect:
downloadHandler:handleSession:
downloadHandler:cancelSession:
downloadHandler:pauseSession:
downloadHandler:handleAuthenticationSession:
userDownloads
addObserver:forDownloads:
pauseDownloads:
resumeDownloads:
restartDownloads:
downloadForDownloadPersistentIdentifier:
downloadForMediaItem:
prioritizeDownloads:
removeObserver:forDownloads:
_addPurchaseFinishedHandler:forDownloads:
hasFetchedInitialDownloads
_unregisterBlockObserver:
_calloutSerialQueue
_blockObservers
_downloadKindToRequiredClientBundleIdentifiers
_downloads
_userDownloads
_downloadIdentifiersToDownloads
_downloadsToObservers
_libraryIdentifiersToDownloads
_storeIdentifiersToDownloads
_fetchedInitialDownloads
_downloadManager
_purchaseManager
usingNetwork
TB,R,N,GisUsingNetwork
didFinishDownloadHandler
didFinishPurchaseHandler
download
_didFinishDownloadHandler
_didFinishPurchaseHandler
_download
T@?,C,N,V_didFinishDownloadHandler
T@?,C,N,V_didFinishPurchaseHandler
T@"MPStoreDownload",R,N,V_download
MPSD_mediaQueryForDownloadableEntities
MPSD_mediaQueryForDownloadingEntities
MPSD_hasDownloadableEntities
MPSD_hasDownloadingEntities
MPSD_mediaItemPropertiesForDownloadability
MPSD_isDownloadable
MPSD_isDownloadInProgress
hasCapability:
setUncensoredName:
setPrivatePerson:
setVerified:
_requestedSocialPersonProperties
_fetchContainerItemMetadataWithBatchProgressHandler:
initWithStoreID:collectionType:requestContext:
_requestObjectStoreIdentifier
kindWithVariants:songKind:options:
_songKind
T@"MPModelSongKind",R,N,V_songKind
songPopularityBlock
kindWithSongKind:options:
__representativeSong_KEY
__maximumItemTrackNumber_KEY
__discCount_KEY
__compilation_KEY
__classical_KEY
__preorder_KEY
__songPopularityBlock_KEY
maximumItemTrackNumber
TB,D,N,GisCompilation
classical
TB,D,N,GisClassical
representativeSong
TB,D,N,GisPreorder
MPSD_hasDownloadableItem
MPSD_hasDownloadingItem
hasPropertyPredicate
hasCompoundPredicate
hasPersistentIDsPredicate
hasSearchStringPredicate
setHasType:
_compoundPredicate
_persistentIDsPredicate
_propertyPredicate
_searchStringPredicate
T@"MPPPropertyPredicate",&,N,V_propertyPredicate
T@"MPPCompoundPredicate",&,N,V_compoundPredicate
T@"MPPConditionalPredicate",&,N,V_conditionalPredicate
T@"MPPPersistentIDsPredicate",&,N,V_persistentIDsPredicate
T@"MPPSearchStringPredicate",&,N,V_searchStringPredicate
supportsSpatialization
setSupportsSpatialization:
isSpatializationEnabled
setSpatializationEnabled:
_mediaRemoteAudioRoute
T@"MRContentItemMetadataAudioRoute",R,N,V_mediaRemoteAudioRoute
spatializationEnabled
TB,N,GisSpatializationEnabled
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@16@0:8
@24@0:8@16
v20@0:8B16
q24@0:8q16
q24@0:8@16
@40@0:8@16@24@32
B16@0:8
v16@0:8
{?="initialized"b1"itemType"b1"detailedItemType"b1"artist"b1"album"b1"curator"b1"episode"b1"movie"b1"playlist"b1"radioStation"b1"socialPerson"b1"song"b1"season"b1"show"b1"showCreator"b1"aucType"b1"recordLabel"b1}
@"MPStoreModelAlbumBuilder"
@"MPStoreModelArtistBuilder"
@"MPStoreModelCuratorBuilder"
@"MPStoreModelTVEpisodeBuilder"
@"MPStoreModelMovieBuilder"
@"MPStoreModelRadioStationBuilder"
@"MPStoreModelSocialPersonBuilder"
@"MPStoreModelPlaylistBuilder"
@"MPStoreModelTVSeasonBuilder"
@"MPStoreModelSongBuilder"
@"MPStoreModelTVShowBuilder"
@"MPStoreModelTVShowCreatorBuilder"
@"MPStoreModelRecordLabelBuilder"
v24@0:8@16
v24@0:8q16
v32@0:8q16@?24
v48@0:8q16q24q32@?40
q16@0:8
@24@0:8q16
@32@0:8@16^q24
v24@0:8@?16
@32@0:8@16^@24
v32@0:8@16@?24
@32@0:8@16@24
B24@0:8@16
@"ICURLBag"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d16@0:8
v24@0:8d16
@"NSString"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSData"16@0:8
@"NSArray"16@0:8
@"MPModelSocialPerson"16@0:8
v24@0:8@"MPModelSocialPerson"16
@"MPModelSocialPerson"
@32@0:8@16Q24
{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}}16@0:8
v40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@?32
v40@0:8{shared_ptr<mlcore::LocalizedSearchQuery>=^{LocalizedSearchQuery}^{__shared_weak_count}}16@?32
{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16^@32
{shared_ptr<mlcore::DeviceLibraryView>="__ptr_"^{DeviceLibraryView}"__cntrl_"^{__shared_weak_count}}
@"MPMediaLibrary"
@32@0:8@16d24
@24@0:8d16
@?16@0:8
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@24@0:8@?16
@"NSOperationQueue"
@"NSError"
@"NSObject<OS_dispatch_queue>"
@"NSArray"
@"MPModelRequest"
@"MPPropertySet"
@"MPSectionedCollection"
v32@0:8@16@24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
f16@0:8
v20@0:8f16
v24@0:8B16B20
{CGSize=dd}16@0:8
@32@0:8d16q24
v32@0:8@16q24
v48@0:8@16@24@32^v40
@"_MPMoviePlayerProxyView"
@"AVAssetImageGenerator"
@"UIView"
@"NSURL"
@"AVPlayerViewController"
@"UIViewController"
@"MPMoviePlayerController"
@"AVMetadataItem"
@"AVPlayerItemAccessLog"
@"AVPlayerItemErrorLog"
@"AVPlayerItemAccessLogEvent"
@"AVPlayerItemErrorLogEvent"
v32@0:8@16Q24
@"NSHashTable"
@"NSMapTable"
q20@0:8I16
i16@0:8
I16@0:8
v20@0:8i16
v20@0:8I16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSDictionary"
@"RTCReporting"
@"NSMutableArray"
@24@0:8Q16
B24@0:8q16
v24@0:8Q16
@"<NSCopying>"
S16@0:8
v40@0:8q16#24@32
@"MPModelLibraryDeleteEntityChangeRequest"
v32@0:8d16d24
f36@0:8Q16q24B32
v28@0:8f16@?20
{?=qiIq}16@0:8
f28@0:8Q16B24
v32@0:8q16@24
^{OpaqueCMTimebase=}16@0:8
d24@0:8@16
v28@0:8d16f24
v40@0:8q16@24@?32
@"AVAsset"
@"AVPlayerItem"
@"MPQueueFeeder"
@"MPNowPlayingContentItem"
{?="value"q"timescale"i"flags"I"epoch"q}
@"MPMediaLibraryPrivacyContext"
@"<MPAVItemObserver>"
@"MPMediaItem"
@"MPModelGenericObject"
@"MPModelPlayEvent"
@"NSNumber"
@"ICMusicSubscriptionLeaseStatus"
@"ICClientInfo"
@"ICUserIdentity"
@"ICUserIdentityStore"
B24@0:8@?16
q24@0:8@?16
v40@0:8@16@24@?32
@"MPQueueFeederIdentifierRegistry"
@"NSData"
@"MPModelObject"
@"NSDate"
@"MPStoreItemMetadata"
@"UILabel"16@0:8
@"UIImageView"16@0:8
@"UIView"16@0:8
@"MPVolumeSlider"16@0:8
@32@0:8q16@24
v36@0:8@16@24B32
@"UIImageView"
@"UILabel"
@"NSTimer"
@"UIActivityIndicatorView"
@"<MPAVRoutingTableViewCellDelegate>"
@"MPVolumeSlider"
@"MPAVRoutingTableViewCellSubtitleTextState"
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v32@0:8Q16@24
@"MPMediaControlsConfiguration"
@"<MPMediaControlsViewControllerDelegate>"
@"MPMediaControls"
v28@0:8B16@?20
@28@0:8@16B24
{CGSize=dd}56@0:8{CGSize=dd}16Q32Q40d48
B32@0:8@16@24
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@"NSCountedSet"
@"NSCache"
@"MPModelLibraryRequest"
{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16
@"MPMediaLibraryView"
{shared_ptr<mlcore::Query>="__ptr_"^{Query}"__cntrl_"^{__shared_weak_count}}
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
v40@0:8@16@24Q32
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24Q32
B32@0:8q16q24
B36@0:8q16q24B32
B44@0:8q16q24B32^@36
B48@0:8q16q24B32B36^@40
v24@0:8f16B20
v28@0:8Q16B24
v32@0:8@16B24B28
B20@0:8f16
B28@0:8f16@?20
B40@0:8f16B20@24@?32
v32@0:8d16q24
v40@0:8d16q24@?32
B24@0:8Q16
d44@0:8B16{?=qiIq}20
Q24@0:8@16
v36@0:8q16q24B32
v24@0:8^{__CFRunLoopTimer=}16
v48@0:8q16@24@32@40
v40@0:8{?=qiIq}16
@32@0:8d16@?24
@"MPAVRoutingController"
@"MPAVRoute"
^{__CFRunLoopTimer=}
@"NSObject<OS_dispatch_source>"
@"MPAVItem"
@"NSNotification"
@"NSMutableSet"
@"MPAVPolicyEnforcer"
@"MPQueuePlayer"
@"<MPAVQueueCoordinating>"
@"<MPAVQueueController>"
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSXPCConnection"
@"BKSProcessAssertion"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"b1"type"b1"subtype"b1"artwork"b1"stationGlyph"b1"attributionLabel"b1"providerName"b1"live"b1}
@32@0:8Q16Q24
v24@0:8^v16
@"NSMutableDictionary"16@0:8
@"MRContentItemMetadataAudioFormat"
@"NSMutableDictionary"
@"ICStoreFileAssetInfo"
@"<MPMediaRemoteEntityArtworkGenerator>"
v32@0:8@16:24
v32@0:8@16#24
@36@0:8d16B24@?28
@40@0:8d16@24@?32
@44@0:8d16B24@28@?36
@"MPAVController"
@40@0:8@16{CGSize=dd}24
{CGSize="width"d"height"d}
@24@0:8^{_MRSystemAppPlaybackQueue=}16
@32@0:8^{_MRSystemAppPlaybackQueue=}16@24
v28@0:8#16i24
B24@0:8^@16
^{_MRSystemAppPlaybackQueue=}16@0:8
^{_MRSystemAppPlaybackQueue=}
@"MPMediaQuery"
@"MPIdentifierSet"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B40@0:8{CGPoint=dd}16@32
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"MPRouteLabel"
@"UIFont"
@"UIColor"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"MPModelSong"
@20@0:8B16
@56@0:8@16@24q32B40B44@48
@72@0:8@16@24q32B40B44B48@52B60q64
@80@0:8@16@24q32B40B44B48@52B60q64@72
{?="initialized"b1"title"b1"type"b1"loadAdditionalContentURL"b1"previouslyRetrievedNestedResponse"b1"uniformContentItemType"b1"memberOfChartSet"b1"displaysAsGridCellInCarPlay"b1"brick"b1}
@80@0:8@16@24@32@40@48@56Q64@72
@"MPModelStoreBrowseSectionBuilder"
@"MPModelStoreBrowseContentItemBuilder"
@"NSIndexSet"
@"NSRegularExpression"
{?="initialized"b1"copyrightText"b1"title"b1"trackCount"b1"maximumItemTrackNumber"b1"discCount"b1"hasCleanContent"b1"hasExplicitContent"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"libraryAddEligible"b1"compilation"b1"classical"b1"releaseDate"b1"artwork"b1"year"b1"preorder"b1"editorNotes"b1"shortEditorNotes"b1"volumeNormalization"b1"songPopularity"b1"representativeSong"b1"traits"b1"versionHash"b1"artist"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}}
v40@0:8@16@24@32
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
v24@0:8@"_MPSSILImplementation"16
v40@0:8q16@24@32
@48@0:8Q16@24@32@40
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
v60@0:8@16@24B32@36@44@?52
v52@0:8@16@24B32@36@?44
v48@0:8@16@24@32@40
@"_MPSSILImplementation"
@48@0:8@16@24@32@40
v52@0:8@16@24B32@36@44
v44@0:8@16@24B32@36
@"MPRandomDistribution"
@"MPStoreLyricsSnippetURLComponents"
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::LocalizedSearchScope>="__ptr_"^{LocalizedSearchScope}"__cntrl_"^{__shared_weak_count}}
@"MPModelKind"
@"MPModelLibraryAlbumAppDataChangeRequest"
@"MPModelPlaylist"
@"MPChangeDetails"
@"MPModelStoreBrowseResponseParser"
@60@0:8@16{CGSize=dd}24B40@44@?52
@"AVOutputDeviceDiscoverySession"
@"AVOutputContext"
@"<MPAVLightweightRoutingControllerDelegate>"
@40@0:8@16@?24@?32
@44@0:8@16B24@?28@?36
v32@0:8q16q24
@"MPStoreModelStoreAssetBuilder"
{?="initialized"b1"title"b1"shortTitle"b1"editorNotes"b1"shortEditorNotes"b1"editorialArtwork"b1"artwork"b1"episodeCount"b1"tagline"b1}
B40@0:8@16@24@?32
v32@0:8@"SBSStatusBarStyleOverridesCoordinator"16@"NSError"24
B40@0:8@"SBSStatusBarStyleOverridesCoordinator"16@"<SBSStatusBarTapContext>"24@?<v@?>32
@"SBSStatusBarStyleOverridesAssertion"
@"SBSStatusBarStyleOverridesCoordinator"
@56@0:8@16Q24@32@40@48
@"MPSectionedIdentifierList"
@"MPSectionedIdentifierListEntry"
@"_MPSectionedIdentifierListProxyEntry"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"ICStoreHLSAssetInfo"
v28@0:8@16I24
v28@0:8@16f24
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
@"UIWindowScene"16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56@64
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIImage"
@"UILayoutGuide"
@"MPVolumeController"
@"MPAVEndpointRoute"
@"MPAVOutputDeviceRoute"
v28@0:8@"MPAVLightweightRoutingController"16B24
v32@0:8@"MPAVLightweightRoutingController"16@"NSArray"24
v64@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"MPAVLightweightRoutingController"
@"UIButton"
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@"MPMediaLibraryConnectionAssertion"
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16
{shared_ptr<mlcore::EntityQuery>="__ptr_"^{EntityQuery}"__cntrl_"^{__shared_weak_count}}
@"MPVolumeView"
@"UIAlertController"
@"UIWindow"
@"MPSectionedIdentifierListEntryPositionKey"
@"MPSectionedIdentifierListHeadEntry"
@"MPSectionedIdentifierListTailEntry"
@"MPSectionedIdentifierListItemEntry"
@"<MPSectionedIdentifierListDataSource>"
{?=BBBBBBBBq}16@0:8
@36@0:8@16I24@28
@"MPRemoteCommand"
@"MPRemotePlaybackQueue"
@"MPNowPlayingInfoLanguageOption"
Q24@0:8Q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@56@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}}40
@32@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16
{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@0:8
@"MPMediaLibraryEntityTranslationContext"
{vector<long long, std::allocator<long long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::allocator<long long>>="__value_"^q}}
{map<long long, unsigned long, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>>="__tree_"{__tree<std::__value_type<long long, unsigned long>, std::__map_value_compare<long long, std::__value_type<long long, unsigned long>, std::less<long long>, true>, std::allocator<std::__value_type<long long, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<long long, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<long long, std::__value_type<long long, unsigned long>, std::less<long long>, true>>="__value_"Q}}}
{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQueryResult>="__ptr_"^{EntityQueryResult}"__cntrl_"^{__shared_weak_count}}
@"MPModelStoreBrowseResponse"
@40@0:8@16{CGPoint=dd}24
{CGPoint="x"d"y"d}
@"MPModelAlbumKind"
v32@0:8d16@?24
v48@0:8d16q24@32@?40
v40@0:8@16q24@?32
q24@0:8^B16
B32@0:8@16@?24
@"MPAVRoutingControllerSelectionQueue"
@"<MPAVRoutingControllerDelegate>"
@"MPAVRoutingDataSource"
@"<MPAVOutputDevicePlaybackDataSource>"
@32@0:8@16q24
@"MPAVRoutingControllerSelection"
@"MSVTimer"
@48@0:8^@16@24@32@40
@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"
@48@0:8@16@24@32q40
@40@0:8@16^@24@32
B32@0:8@16^@24
@"_MPModelShimRequestMiddleware"
@"NSArray"24@0:8@"MPRequest"16
v24@0:8@"NSArray"16
@"MPModelResponse"
{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16
{shared_ptr<mlcore::DeviceLibrary>="__ptr_"^{DeviceLibrary}"__cntrl_"^{__shared_weak_count}}
{map<MPModelStoreBrowseDetailedContentItemType, unsigned long, std::less<MPModelStoreBrowseDetailedContentItemType>, std::allocator<std::pair<const MPModelStoreBrowseDetailedContentItemType, unsigned long>>>="__tree_"{__tree<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::less<MPModelStoreBrowseDetailedContentItemType>, true>, std::allocator<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::less<MPModelStoreBrowseDetailedContentItemType>, true>>="__value_"Q}}}
v32@0:8@"HMHomeManager"16Q24
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"HMAddAccessoryRequest"24
v40@0:8@16q24@32
v32@0:8@"HMHomeManager"16@"NSArray"24
v28@0:8@"HMHomeManager"16B24
v40@0:8@"HMHomeManager"16q24@"NSString"32
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"HMAccessoryNetworkProtectionGroup"24
v32@0:8@"HMHome"16@"HMHomePersonManagerSettings"24
v32@0:8@"HMHome"16@"NSError"24
@"HMHomeManager"
@"HMHome"
@"HMUser"
@"NSSet"
@"<MPHomeManagerObserverDelegate>"
@"MPMusicPlayerQueueDescriptor"
@32@0:8@16B24B28
@32@0:8q16q24
@40@0:8#16@24q32
v40@0:8Q16@24@?32
@32@0:8@16@?24
@36@0:8@16B24@?28
@32@0:8Q16@24
@32@0:8{CGSize=dd}16
v32@0:8{CGSize=dd}16
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v24@0:8@"MPPlaybackArchiveDisplayProperties"16
@72@0:8q16@24@32@40@48Q56@64
v28@0:8B16q20
@"MPPlaybackArchiveDisplayProperties"
@"<MPPProtobufferCoding>"32@0:8@"PBCodable"16@"MPMediaLibrary"24
@"<MPPProtobufferCoding>"24@0:8@"PBCodable"16
@"PBCodable"24@0:8@"MPMediaLibrary"16
@"PBCodable"16@0:8
v32@0:8^q16^@24
@40@0:8@16@24q32
@"MPMediaQueryCriteria"
@"MPMediaPredicate"
@36@0:8r^q16Q24B32
r^q16@0:8
v32@0:8Q16Q24
@"MPModelLibraryImportChangeRequest"
{?="initialized"b1"name"b1"trackCount"b1"editorNotes"b1"shortEditorNotes"b1"releaseDate"b1"lastModifiedDate"b1"artwork"b1"editorialArtwork"b1"tracksTiledArtwork"b1"hasCleanContent"b1"hasExplicitContent"b1"type"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"curatorPlaylist"b1"owner"b1"publicPlaylist"b1"visiblePlaylist"b1"subscribed"b1"userEditableComponents"b1"shareURL"b1"shareShortURL"b1"descriptionText"b1"cloudVersionHash"b1"traits"b1"versionHash"b1"curator"{?="identifiers"b1"name"b1"handle"b1}}
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
v32@0:8@?16@?24
v44@0:8@?16@?24d32B40
@"MPMusicPlayerControllerNowPlaying"
@"MPMusicPlayerControllerNowPlayingTimeSnapshot"
v36@0:8B16@20@28
v48@0:8q16@24@32q40
v44@0:8B16@20@28q36
v40@0:8@16Q24@?32
v36@0:8@16B24q28
@"MPArtworkRepresentationCollection"
@"<MPArtworkDataSource>"
@"<_MPArtworkCatalogOverlayDelegate>"
@40@0:8{CGSize=dd}16@32
@48@0:8@16{CGSize=dd}24@40
@40@0:8@16@24Q32
@"MPArtworkRepresentation"
@"MPPMediaPredicate"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
B24@0:8d16
v28@0:8d16B24
@32@0:8q16Q24
@32@0:8q16d24
Q24@0:8q16
v56@0:8^I16^Q24^Q32^I40^I48
@40@0:8{CGSize=dd}16@?32
v48@0:8{?=[8I]}16
B40@0:8^B16^B24@?32
B48@0:8^B16^B24Q32@?40
B32@0:8Q16q24
@32@0:8Q16q24
@36@0:8Q16q24B32
@28@0:8Q16B24
v40@0:8@16@24q32
v48@0:8@16@24q32@?40
B48@0:8r^Q16Q24q32^Q40
B40@0:8@16q24^Q32
B40@0:8q16q24^Q32
@64@0:8@16@24@32@40@?48@?56
v36@0:8q16B24@?28
v36@0:8@16B24@?28
v56@0:8Q16q24@32q40q48
B56@0:8@16@24q32q40Q48
{os_unfair_lock_s=I}16@0:8
^{os_unfair_lock_s=I}16@0:8
@"<MPMediaLibraryDataProviderPrivate>"
@"QueryCriteriaResultsCache"
@"NSPointerArray"
@"_MPActiveUserChangeMonitor"
^{os_unfair_lock_s=I}
@"MPMediaEntity"
v44@0:8@16q24B32@?36
v24@0:8#16
@24@0:8#16
v32@0:8@"MPMediaPickerController"16@"MPMediaItemCollection"24
v24@0:8@"MPMediaPickerController"16
v32@0:8@"MPMediaPickerController"16@"MPPlaybackArchive"24
v24@0:8@"MPMediaItemCollection"16
v24@0:8@"MPPlaybackArchive"16
@"MPMediaPickerConfiguration"
@"<MPMediaPickerControllerDelegate>"
@"<MPMediaPickerRemoteViewLoader>"
@"MPMediaPickerController"16@0:8
@"UIViewController"16@0:8
@"_UIResilientRemoteViewContainerViewController"
@"MPMusicMediaPickerRemoteViewController"
@"MPMediaPickerController"
@"MPPlaybackArchiveConfiguration"
@"MPAVItem"16@0:8
@"<MPAVQueueCoordinatingDataSource>"
{CGSize=dd}52@0:8q16@24B32d36d44
@40@0:8{CGPoint=dd}16@32
{CGSize=dd}24@0:8d16
v32@0:8{MPAddKeepLocalControlStatus=qd}16
v36@0:8{MPAddKeepLocalControlStatus=qd}16B32
{MPAddKeepLocalControlStatus=qd}16@0:8
@"MPDownloadProgressView"
{MPAddKeepLocalControlStatus="statusType"q"downloadProgress"d}
{?="initialized"b1"title"b1"previewArtwork"b1"staticAssets"{?="identifiers"b1"duration"b1"flavorType"b1"mediaType"b1"url"b1}}
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
{MPLibraryActiveKeepLocalStatus=qd}16@0:8
B20@0:8B16
@"MPLibraryKeepLocalStatusObserverConfiguration"
{MPLibraryActiveKeepLocalStatus="statusType"q"downloadProgress"d}
@40@0:8@16@24@?32
{?="initialized"b1"name"b1"hasBiography"b1"hasSocialPosts"b1"artwork"b1"editorialArtwork"b1"genre"{?="identifiers"b1"name"b1}}
v40@0:8@"MPAVErrorResolver"16@"NSError"24q32
@"MPAVErrorResolverBlockHandler"
@"MPAVErrorResolver"
v24@0:8@"MPDetailScrubController"16
v28@0:8@"MPDetailScrubController"16f24
v32@0:8@"MPDetailScrubController"16q24
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
v28@0:8f16d20
@36@0:8@16d24B32
@28@0:8d16B24
@"MPDetailScrubController"
@"AVTimeFormatter"
@"<MPDetailSliderDelegate>"
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
@"MPMusicPlayerApplicationController"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
v48@0:8@16{CGSize=dd}24@?40
@"CARSessionStatus"
@"<MPPlayableContentDataSource>"
@"<MPPlayableContentDelegate>"
@"MPPlayableContentManagerContext"
@"NSIndexPath"
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{map<long, MPIdentifierSet *, std::less<long>, std::allocator<std::pair<const long, MPIdentifierSet *>>>="__tree_"{__tree<std::__value_type<long, MPIdentifierSet *>, std::__map_value_compare<long, std::__value_type<long, MPIdentifierSet *>, std::less<long>, true>, std::allocator<std::__value_type<long, MPIdentifierSet *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<long, MPIdentifierSet *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, MPIdentifierSet *>, std::less<long>, true>>="__value_"Q}}}
@"_MPLazySectionedCollectionStorage"
@"<MPLazySectionedCollectionDataSource>"
@44@0:8@16d24@32B40
q32@0:8@16q24
q40@0:8@16@24q32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
v28@0:8@"MPAVRoutingTableViewCell"16B24
v24@0:8@"MPAVRoutingTableViewCell"16
B40@0:8@16q24@32
@"MPAVClippingTableView"
@"MPAVRoutingViewControllerUpdate"
@"MPWeakTimer"
@"<MPAVRoutingViewControllerDelegate>"
@"<MPAVRoutingViewControllerThemeDelegate>"
@"MPVolumeGroupSliderCoordinator"
@"MPStoreModelPlaybackPositionBuilder"
{?="initialized"b1"title"b1"duration"b1"trackCount"b1"trackNumber"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"traits"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1"trackCount"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"RadioAvailabilityController"
@"RadioRecentStationsController"
@"MSVLRUDictionary"
@24@0:8^v16
^v16@0:8
@36@0:8@16B24@28
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8Q16@24@32
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
@48@0:8@16q24{CGSize=dd}32
{CGSize=dd}24@0:8@16
@60@0:8@16@24@32{CGSize=dd}40B56
B40@0:8{CGSize=dd}16@32
@40@0:8@16q24@?32
{CGSize=dd}32@0:8@16q24
@"NSURLSessionConfiguration"
@"NSURLSession"
@"NSURLCache"
@"<NSURLSessionDataDelegate>"
@40@0:8Q16Q24@32
v40@0:8{CGSize=dd}16@32
v32@0:8d16@24
@"MPMediaItemCollection"
@"MPMusicPlayerPlayParameters"
@"MPRadioStation"
@"MPPlaybackArchive"
@48@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24^v40
{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>=^v^{__shared_weak_count}}16@0:8
{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
@"<MPAVErrorResolverDelegate>"
@52@0:8@16@24B32@36@44
@"MPConcreteMediaEntityPropertiesCache"16@0:8
@40@0:8Q16@24@32
@32@0:8@16^B24
@"MPConcreteMediaEntityPropertiesCache"
@"MPArtworkCatalog"
@56@0:8q16@24@32q40q48
@64@0:8q16@24@32q40q48@56
@40@0:8q16@24q32
v40@0:8Q16Q24@?32
@32@0:8Q16^@24
@48@0:8@16@24q32@40
@"<MPMediaLibraryResultSet>"
@"MPMediaQuerySectionInfo"
@40@0:8@16#24q32
@"<MPMediaLibraryDataProvider>"
v48@0:8@16q24q32@?40
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
v52@0:8@16q24B32@?36@?44
v48@0:8@"NSString"16@"NSString"24@"MPMediaQueryCriteria"32@?<v@?@>40
v40@0:8@"NSSet"16q24@?<v@?@"NSDictionary">32
v48@0:8@"NSSet"16q24q32@?<v@?@"NSDictionary">40
@"<MPMediaLibraryResultSet>"24@0:8@"MPMediaQueryCriteria"16
v32@0:8@"MPMediaQueryCriteria"16@?<v@?B>24
v32@0:8@"MPMediaQueryCriteria"16@?<v@?Q>24
@"MPMediaEntityCache"16@0:8
@"<MPArtworkDataSource>"16@0:8
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q^B>36
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q@"NSDictionary"^B>36
v40@0:8@"NSData"16@?<v@?B@"NSError">24@?<v@?f>32
v52@0:8@"NSString"16q24B32@?<v@?q@"NSString"q^B>36@?<v@?qq@"NSString"q^B>44
v32@0:8q16@"NSArray"24
@"NSSet"16@0:8
v56@0:8@16@24q32q40@?48
B32@0:8^q16Q24
v40@0:8q16q24@?32
v48@0:8Q16Q24q32@?40
^v40@0:8^q16Q24^@32
^q40@0:8^v16^Q24^@32
v40@0:8q16@24q32
v48@0:8q16@24q32@?40
B40@0:8q16q24o^#32
B40@0:8@"NSString"16q24^Q32
B40@0:8@"NSArray"16q24^Q32
B24@0:8@?<B@?>16
v24@0:8@?<v@?>16
v48@0:8@16@"NSString"24q32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
v56@0:8@16@"NSString"24q32q40@?<v@?B@"NSError">48
q24@0:8@"NSDictionary"16
v40@0:8@"NSArray"16q24@?<v@?B>32
v40@0:8q16q24@?<v@?B>32
v40@0:8@"NSString"16q24@?<v@?@"NSError">32
v40@0:8@"NSIndexSet"16q24@?<v@?B>32
v48@0:8Q16Q24q32@?<v@?B>40
v40@0:8q16q24@?<v@?B@"NSError">32
v32@0:8@"MPMediaItem"16@?<v@?@"NSArray">24
v40@0:8q16@"NSString"24q32
v48@0:8q16@"NSString"24q32@?<v@?B@"NSError">40
@"NSString"24@0:8Q16
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSString"16
@"MIPMultiverseIdentifier"24@0:8q16
@"MIPMultiverseIdentifier"32@0:8q16q24
v32@0:8@"MPStoreItemLibraryImport"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
B56@0:8@"NSData"16@"NSString"24q32q40Q48
v56@0:8Q16q24@"NSString"32q40q48
v52@0:8@16@24B32q36@?44
@40@0:8q16q24q32
@48@0:8q16q24q32@40
v48@0:8@16q24#32@?40
v56@0:8@16#24@32@40@?48
B40@0:8^q16Q24#32
@"ML3MusicLibrary"
@"MPMediaEntityCache"
v32@0:8Q16@?24
v36@0:8I16@20@?28
v28@0:8I16@20
@40@0:8@16@24#32
@"MPModelStaticResponse"
@"MPMediaLibraryAlbumAppData"
@"CAShapeLayer"
@"ICStoreFileAssetFairPlayInfo"
@"MIPMultiverseIdentifier"
v40@0:8@16Q24Q32
v28@0:8@"<MPVolumeControllerDataSource>"16f24
v28@0:8@"<MPVolumeControllerDataSource>"16B24
v32@0:8@"<MPVolumeControllerDataSource>"16q24
v32@0:8@"<MPVolumeControllerDataSource>"16@"NSString"24
v28@0:8@"<MPVolumeControllerDataSource>"16I24
v24@0:8f16f20
@"<MPVolumeControllerDataSource>"
@"<MPVolumeControllerDelegate>"
@"MPMediaLibraryArtworkRequest"
@"MPMediaLibraryArtworkDataSource"
@32@0:8#16@24
@40@0:8#16@24@32
{shared_ptr<mlcore::EntityCache>=^{EntityCache}^{__shared_weak_count}}48@0:8^v16{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}24
{vector<std::shared_ptr<mlcore::EntityCache>, std::allocator<std::shared_ptr<mlcore::EntityCache>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<mlcore::EntityCache> *, std::allocator<std::shared_ptr<mlcore::EntityCache>>>="__value_"^v}}
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoute"24
v24@0:8@"MPAVRoutingViewController"16
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoutingViewItem"24
@28@0:8q16B24
@"MPAVRoutingViewController"
@48@0:8@16@24Q32@?40
{shared_ptr<mlcore::LocalizedSearchQuery>="__ptr_"^{LocalizedSearchQuery}"__cntrl_"^{__shared_weak_count}}
@"MPModelLibrarySearchRequest"
#24@0:8@16
{?="_relationshipPreparesSource"b1}
@40@0:8q16q24@32
@48@0:8q16q24@32@40
q24@0:8I16I20
@"MPAVBatteryLevel"
@"MPAVRouteConnection"
@"_MPDownloadProgressRingView"
d24@0:8d16
@"NSOperation"
@"NSObject<OS_dispatch_group>"
@"<MPMediaKitEntityRelationshipPayloadProvider>"
@40@0:8#16@24@?32
v40@0:8@16#24@32
v40@0:8@"NSString"16#24@"NSString"32
v40@0:8@16@24^?32
v48@0:8@16#24@32@?40
@"MPModelPlaylistEntriesShareEligibilityRequest"
@"MPModelLibraryAddToPlaylistChangeRequest"
{?="initialized"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}
@"MPModelPodcastEpisodeKind"
{?="initialized"b1"name"b1"descriptionText"b1"shortDescriptionText"b1"artwork"b1"editorialArtwork"b1}
v28@0:8q16B24
{CGSize=dd}32@0:8@16@24
^{Arc4State=II*}
@40@0:8@16q24q32
@"<MPRandom>"
@52@0:8@16{CGSize=dd}24B40@44
{CGSize=dd}48@0:8{CGSize=dd}16{CGSize=dd}32
@32@0:8@16^{?=iiii}24
@40@0:8Q16@24Q32
{?="initialized"b1"title"b1"descriptionText"b1"duration"b1"artwork"b1"screenshotArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"musicShow"b1"episodeNumber"b1"explicitRating"b1"season"{?="identifiers"b1"number"b1"year"b1"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}
@32@0:8@16^?24
^?16@0:8
@"ICStoreRadioStreamAssetInfo"
v24@0:8@?<v@?@"MPMediaAPICollectionItemMetadataResponse"@"NSError">16
@"NSUUID"16@0:8
@"NSProgress"16@0:8
v52@0:8@16d24@32B40@?44
@"ICMusicKitRequestContext"
@"NSProgress"
@"NSUUID"
@"MPStoreLibraryPersonalizationRequest"
{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}}16@0:8
v40@0:8{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}}16
v28@0:8B16@20
@"NSUserDefaults"
{?="mobileiPodPrefsChanged"i"mobileiPodPlaybackPrefsChangedAllowCellularData"i"videoPrefsChanged"i"airplayPrefsChanged"i}
@40@0:8@16@24^@32
@"MPStoreHLSAssetInfo"
v24@0:8@"ICEnvironmentMonitor"16
B24@0:8^B16
@"ICMusicSubscriptionStatusMonitor"
@"ICMusicSubscriptionFairPlayKeyStatus"
@"SSVSubscriptionStatus"
@56@0:8@16@24@32@40@48
@20@0:8i16
i24@0:8@16
{?="entityOrder"b1"groupingType"b1"staticEntityType"b1"filteringDisabled"b1"includeNonLibraryEntities"b1}
{?="initialized"b1"endpointType"b1"redownloadParameters"b1"redownloadable"b1"accountIdentifier"b1"shouldReportPlayEvents"b1"subscriptionRequired"b1}
@"MPModelFileAsset"
{MPLibraryAddStatusObserverConfiguration=BBBBB}16@0:8
@"NSDictionary"16@0:8
@44@0:8@16@24i32q36
@"MPRTCReportingSessionSummaryEvent"
@"MPModelLibraryPlaylistEditChangeRequest"
@"Protocol"
@?24@0:8@16
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
@40@0:8{?=qq}16^{?=qq}32
^v24@0:8^v16
v40@0:8{_MSVSignedRange=qq}16@?32
@"MPNowPlayingInfoCenterArtworkContext"
{_MSVSignedRange="location"q"length"q}
@"MPArtworkResizeUtility"
@"<MPNowPlayingPlaybackQueueDataSource>"
@"<MPNowPlayingInfoLyricsDelegate>"
{?="createPlaybackQueue"^v"createContentItem"^v"createChildItem"^v"metadata"^v"artwork"^v"info"^v"languageOptions"^v"lyrics"^v}
@"<MPNowPlayingPlaybackQueueDelegate>"
@"MRPlayerPath"
B32@0:8:16@?24
@"MPMediaItemArtwork"
@40@0:8@16q24@32
@"MRSendCommandHandlerDialogAction"
@"MRSendCommandHandlerDialog"
@"ICMusicSubscriptionStatus"
v32@0:8@"HSBrowser"16@"HSHomeSharingLibrary"24
@"HSHomeSharingLibrary"
{?="initialized"b1"name"b1"shortName"b1"hasSocialPosts"b1"editorNotes"b1"shortEditorNotes"b1"curatorKind"b1"curatorSubKind"b1"editorialArtwork"b1"brandLogoArtwork"b1}
@28@0:8f16q20
@52@0:8d16d24f32d36q44
@56@0:8@16@24@32q40q48
@"UICubicTimingParameters"
@24@0:8@"NSDictionary"16
@48@0:8@16Q24q32q40
@56@0:8@16Q24q32q40Q48
@"MPMediaLibraryArtwork"
@"ML3Artwork"
@"NSDictionary"24@0:8@"MPIdentifierSet"16
@40@0:8@16Q24^@32
@48@0:8@16Q24@32^@40
@"MSVSQLDatabase"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
B56@0:8@16@24@32q40@48
B48@0:8@16@24q32@40
B64@0:8@16q24@32@40q48@56
B64@0:8@16@24q32@40@48@56
B56@0:8@16@24@32@40q48
B56@0:8@"NSDictionary"16@"NSString"24@"MPIdentifierSet"32q40@"NSDate"48
B48@0:8@"NSURL"16@"MPIdentifierSet"24q32@"NSDate"40
B64@0:8@"NSData"16q24@"NSString"32@"NSString"40q48@"NSArray"56
B64@0:8@"NSDictionary"16@"MPIdentifierSet"24q32@"NSString"40@"NSDate"48@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"56
B56@0:8@"MPIdentifierSet"16@"MPIdentifierSet"24@"NSString"32@"NSString"40q48
B32@0:8@"MPIdentifierSet"16@"NSString"24
B48@0:8@16@24@32q40
@"MSVSQLDatabaseTransaction"
@"MSVSQLStatement"
@56@0:8@16@24q32@40@48
@64@0:8@16@24q32@40@48@56
@60@0:8@16@24@32@40@48B56
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"hrefURL"b1"refreshURL"b1"traits"b1"displaysAsGridCellInCarPlay"b1"displaysAsTitledSectionWithRowsInCarPlay"b1}
@"MPModelForYouRecommendationMusicKitItemBuilder"
@"NSDateFormatter"
@"MPMutableSectionedCollection"
Q32@0:8Q16Q24
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSAuthorizationRequest"16@"SSURLConnectionResponse"24
@40@0:8@16Q24@32
@64@0:8@16Q24@32Q40@48Q56
@"SSAuthorizationRequest"
@"MPHomeSharingML3DataProvider"
@48@0:8{?=[8I]}16
v24@0:8@"MPRemoteCommand"16
@28@0:8#16I24
@"MPSkipIntervalCommand"
@"MPRatingCommand"
@"MPChangePlaybackRateCommand"
@"MPFeedbackCommand"
@"MPChangePlaybackPositionCommand"
@"MPChangeRepeatModeCommand"
@"MPChangeShuffleModeCommand"
@"MPAdvanceShuffleModeCommand"
@"MPAdvanceRepeatModeCommand"
@"MPSetPlaybackQueueCommand"
@"MPInsertIntoPlaybackQueueCommand"
@"MPReorderQueueCommand"
@"MPSetPlaybackSessionCommand"
@"MPPreloadPlaybackSessionCommand"
@"MPSetPriorityForPlaybackSessionCommand"
@"MPChangeQueueEndActionCommand"
@48@0:8Q16Q24Q32Q40
@"SSRentalCheckoutRequest"
@"MPModelLibraryHasPurchasesRequest"
@"ICStorePlatformMetadata"
@36@0:8@16@24B32
@48@0:8q16q24@?32@?40
B40@0:8q16q24^@32
@"NSMutableIndexSet"
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICCloudItemIDList"
v36@0:8Q16B24@?28
v48@0:8Q16@24@32@?40
v56@0:8Q16@24@32@40@?48
v48@0:8@16@24Q32@?40
v40@0:8q16Q24@?32
v48@0:8q16@24Q32@?40
v56@0:8q16q24q32q40@?48
v48@0:8q16q24q32q40
v48@0:8q16q24Q32@?40
v48@0:8q16q24Q32@40
v56@0:8q16q24Q32@40@?48
@"ICCloudClient"
@"NSObject<ICCloudAvailability>"
@"MSVDistributedNotificationObserver"
{ITColor=dddd}16@0:8
@48@0:8{ITColor=dddd}16
@56@0:8{?=qiIq}16@40@?48
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
@"AVQueuePlayer"
v40@0:8@16Q24@32
@"MPStoreModelRequest"
@"MPModelPlaylistEntryKind"
@"ICStoreURLRequest"
@"<MPStoreSocialRequestOperationDataSource>"
q24@0:8d16
@"<MPRequestCancellationToken>"
@"<MPRequestResponseControllerDelegate>"
^v24@0:8@16
q24@0:8^v16
B24@0:8^?16
@52@0:8@16@24@32@40B48
{?="isInitialized"B"itemType"B"url"B"reason"B"utterance"B"backedByStoreItemMetadata"B"album"B"playlist"B"radioStation"B"subgroup"B}
@"MPModelForYouRecommendationMusicKitGroupBuilder"
@"<MPNowPlayingContentItemArtworkDataSource>"
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
:16@0:8
v24@0:8:16
@"NSEnumerator"
@"MPPlaybackContext"
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1}
@"MPModelForYouRecommendationItemBuilder"
@"<MPSectionedIdentifierListDelegate>"
@"<MPSectionedIdentifierListAnnotationDelegate>"
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPChangeDetails"16@?<@"NSString"@?q>24
@"NSArray"24@0:8@"<MPExclusiveAccessToken>"16
@32@0:8@?16@?24
@32@0:8#16@?24
v40@0:8@16#24@?32
v24@0:8@"MPMediaControlsConfiguration"16
q24@0:8Q16
@"MPModelLibraryDownloadQueueRequest"
@"MPMediaLibraryEntityTranslator"
{?="initialized"b1"itemType"b1"backedByStoreItemMetadata"b1"album"b1"playlist"b1"radioStation"b1"subgroup"b1}
@"MPModelForYouRecommendationGroupBuilder"
@"MRAVRoutingDiscoverySession"
r^v16@0:8
@"SBCPlaybackPositionSyncService"
@"SBCPlaybackPositionDomain"
v29@0:8{MPLibraryAddStatusObserverConfiguration=BBBBB}16@21
@"MPCloudController"
@"MPCloudServiceStatusController"
{MPLibraryAddStatusObserverConfiguration="isValidContentType"B"isLibraryAdded"B"hasCleanContent"B"hasExplicitContent"B"isLibraryAddEligible"B}
@"MPRadioController"
@40@0:8Q16{CGSize=dd}24
@56@0:8Q16@24@32@40@48
@"<_MPActiveUserChangeMonitorDelegate>"
@20@0:8I16
v36@0:8@16:24B32
@28@0:8I16@20
@"<MPRemoteCommandDelegate_Internal>"
@"<MPRemoteCommandDelegate_Private>"
@20@0:8f16
v48@0:8@16@24q32@40
@"MRSendCommandResultStatus"
@"MPRemoteCommandHandlerDialog"
@50@0:8@16{?=BB}24@26@34@42
@58@0:8@16@24{?=BB}32@34@42@50
B60@0:8@16B24@28q36@44@52
{?=BB}16@0:8
{?="useCarPlayBrowseTopLevelContentOnly"B"useCarPlayBrowseTopLevelRequestReorderingHeuristics"B}
@"MPStoreItemMetadataResponse"
@"MPPMediaPredicateValue"
{?="comparisonType"b1}
@"MPModelTVEpisodeKind"
@48@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@32@40
@"MPModelLibrarySearchScope"
v40@0:8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}24@0:8^v16
B48@0:8{CGSize=dd}16{CGSize=dd}32
@56@0:8@16@24{CGSize=dd}32@?48
@48@0:8@16@24d32d40
@"AVRoutingSessionManager"
@"MPMRAVOutputContextWrapper"
@"MRAVOutputDevice"
v24@0:8@"MPMediaPickerConfiguration"16
f24@0:8d16
@"UISelectionFeedbackGenerator"
@"UIControl<MPDetailedScrubbing>"
@"<MPDetailScrubControllerDelegate>"
{?="initialized"b1"title"b1"duration"b1"trackNumber"b1"trackCount"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"traits"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
v32@0:8@16^{__CFUserNotification=}24
@24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}16@0:8
^{__CFRunLoopSource=}
^{__CFUserNotification=}
@40@0:8q16q24@?32
v36@0:8q16#24B32
v32@0:8q16#24
@48@0:8q16q24q32@?40
^v24@0:8#16
v32@0:8#16@?24
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
^{__CFDictionary=}
B20@0:8I16
@"MPMRAVEndpointWrapper"
@48@0:8q16@24@32@40
v24@0:8@"NSData"16
v48@0:8q16#24q32@40
v48@0:8q16q24q32@40
@"MPModelLibraryKeepLocalChangeRequest"
v24@0:8@"HMSettings"16
v40@0:8@"HMSettings"16@"NSUUID"24@"NSString"32
v40@0:8@"HMUser"16@"HMAssistantAccessControl"24@"HMHome"32
v40@0:8@"HMUser"16@"HMMediaContentProfileAccessControl"24@"HMHome"32
v32@0:8@"HMUser"16@"HMPhotosPersonManagerSettings"24
v32@0:8@"HMUser"16@"HMFPairingIdentity"24
v28@0:8@"HMUser"16B24
@"HMSettings"
@"MPModelTVSeasonKind"
^q16@0:8
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="shouldContain"b1}
{?="doublePredicateValue"b1"integerPredicateValue"b1"floatPredicateValue"b1"boolPredicateValue"b1}
@40@0:8#16@24^@32
B40@0:8@16@24^@32
@"MPStoreSocialRequestOperation"
v40@0:8q16q24@32
{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}}16
{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
@40@0:8#16^v24B32B36
@32@0:8#16^v24
v32@0:8r^v16@?24
v32@0:8@16^v24
v40@0:8@16r^v24@?32
v56@0:8@16r^v24r^v32@?40@?48
v40@0:8@16#24^v32
v44@0:8@16#24B32^v36
v60@0:8@16#24B32^v36r^v44@?52
@48@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40
@40@0:8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{shared_ptr<mlcore::PropertiesQuery>=^{PropertiesQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}24@0:8@16
{vector<mlcore::SortDescriptor, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}}}24@0:8@16
{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}24@0:8@16
{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}28@0:8@16B24
@64@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40@48@56
{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}32@0:8@16^v24
@"MPStoreModelMovieMediaClipBuilder"
{?="initialized"b1"title"b1"description"b1"duration"b1"releaseDate"b1"explicitRating"b1"tagline"b1"artwork"b1"editorialArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1}
v32@0:8@"NSString"16@?<v@?@"<MPMutableLocalLibraryIdentifiers>">24
v32@0:8@"NSString"16@?<v@?@"<MPMutablePersonalStoreIdentifiers>">24
v24@0:8@?<v@?@"<MPMutableUniversalStoreIdentifiers>">16
v24@0:8@?<v@?@"<MPMutableRadioIdentifiers>">16
B40@0:8@16{CGSize=dd}24
@"BSUIEmojiLabelView"
@"ML3ArtworkConfiguration"
@48@0:8@16@24@32Q40
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
@"MCProfileConnection"
v24@0:8@?<v@?f>16
@"<MPVolumeControllerDataSourceDelegate>"16@0:8
v24@0:8@"<MPVolumeControllerDataSourceDelegate>"16
f20@0:8f16
@"AVSystemController"
@"<MPVolumeControllerDataSourceDelegate>"
v28@0:8I16I20B24
@"ICStoreArtworkInfo"
@"ICStoreVideoArtworkInfo"
@"SSDownload"
@"SSPurchase"
@"SSPurchaseResponse"
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v24@0:8@"SSDownloadHandler"16
v32@0:8@"SSDownloadHandler"16@"SSDownloadHandlerSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
B32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadAuthenticationSession"24
v32@0:8@?16@24
@"SSDownloadManager"
@"SSPurchaseManager"
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
@"MPStoreDownload"
{?="initialized"b1"name"b1"uncensoredName"b1"handle"b1"biography"b1"artwork"b1"isVerified"b1"isPrivate"b1}
@"MPModelSongKind"
@"MPPCompoundPredicate"
@"MPPConditionalPredicate"
@"MPPPersistentIDsPredicate"
@"MPPPropertyPredicate"
@"MPPSearchStringPredicate"
{?="type"b1}
@"MRContentItemMetadataAudioRoute"
$<*<<<<<<<<<1
GGGGG>@BD
JJJJLLLLL
@@@@@@@@@@@@@@@$'@@*@
@0@369<e
!!!!
!$'*-0369<?B

!$'*-0369<?BEH
!#%')+
 #&)
 $(,50
"%(+.147:=@CFI
%(+.8
!$'*
t")ttttt0
7d>ddEddLddddSdZ
t")ttttt0
7d>ddEddLddddSdZa
!#-%
!#%'
!$'*-0369<
"%(J+.J8;
0h369<?BEHKNQTWZ]`cf
"%(+.147:=@CFI 
$T0<cHzz
$+qq
\jbll
 'pp
$GXi
)<ObuNSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_5QueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZN6mlcore11LibraryView12performQueryINS_5QueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZ54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
N6mlcore11QueryResultE
Z54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_20LocalizedSearchQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZN6mlcore11LibraryView12performQueryINS_20LocalizedSearchQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZ60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
Z60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEENS_10shared_ptrIS6_E27__shared_ptr_default_deleteIS6_S6_EENS4_IS6_EEEE
NSt3__110shared_ptrINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEE27__shared_ptr_default_deleteIS6_S6_EE
NSt3__114default_deleteINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore24SmartPlaylistEntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEENS5_IS9_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_10shared_ptrIN6mlcore6EntityEEENS_9allocatorIS5_EEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchScopeENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIN6mlcore4NoopENS_9allocatorIS3_EEFvdEEE
NSt3__110__function6__baseIFvdEEE
N6mlcore4NoopE
NSt3__110__function6__funcIZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIiEENS_9allocatorIS3_EEEE
$@NSt3__120__shared_ptr_emplaceINS_3mapIxNS_10shared_ptrIN6mlcore17EntityQueryResultEEENS_4lessIxEENS_9allocatorINS_4pairIKxS5_EEEEEENS8_ISD_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14AnyInPredicateIxEENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1
NSt3__120__shared_ptr_emplaceIN6mlcore22AggregateFunctionQueryENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__110__function6__baseIFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb16_EUb17_E4$_10
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb18_E4$_11
N6mlcore17PropertyCacheBaseIJxidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJdNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEENS_10shared_ptrIS6_E27__shared_ptr_default_deleteIS6_S6_EENS4_IS6_EEEE
NSt3__110shared_ptrINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEE27__shared_ptr_default_deleteIS6_S6_EE
NSt3__114default_deleteINS_6vectorIN6mlcore13PropertyCacheENS_9allocatorIS3_EEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore17EntityQueryResultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore16MultiEntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15SearchPredicateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6ArtistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore5GenreENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8ComposerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8PlaylistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityQueryENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_11EntityQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
NSt3__117bad_function_callE
ZN6mlcore11LibraryView12performQueryINS_11EntityQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
ZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4
NSt3__120__shared_ptr_emplaceIN6mlcore6TVShowENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6mlcore17ModelPropertyBaseENS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEENS5_ISH_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15PropertiesQueryENS_9allocatorIS2_EEEE
MbP?
?ffffff
?ffffff
?333333
?333333
r@q=
?{{{{{{
?QQQQQQ
?@:Q
?UUUUUU
@UUUUUU
A@333333
(knN
4 ,`
MusicShouldFakeTVEpisodes
Linear
Non-Linear
Standalone
-init is not supported, use +sharedInstance
data
OnboardingRequired
POST
responses
<nil>
resultsAndFlatSectionedItems
v32@?0@"MPModelForYouRecommendationItem"8q16^B24
v32@?0@"NSNull"8q16^B24
v32@?0@"MPModelForYouRecommendationGroup"8q16^B24
v16@?0@"MPModelForYouRecommendationGroup"8
iphone
listen-now
omit[resource]
autos
meta
account
artists
albums
apple-curators
curators
playlists
stations
editorial-items
music-videos
music-movies
social-profiles
social-upsells
tv-shows
uploaded-audios
uploaded-videos
library-playlists
library-albums
MusicCoverShelf
MusicNotesHeroShelf
MusicSuperHeroShelf
MusicUpsellShelf
MusicCardShelf
MusicHorizontalLockupGrid
MPMediaControlsStyleControlCenter
MPMediaControlsStyleSingleSelect
MPMediaControlsStyleMultiSelect
MPMediaControlsStyleSharedQueue
MPMediaControlsStyleVideoPicker
MPMediaControlsStyleLocalTransportControls
MPMediaControlsStyleAirPlayBluePill
MPMediaControlsStyleMediumConfidenceVideoPicker
MPMediaControlsStyleUpNextControls
<%@:%p routingContextUID=%@, style=%@, presentingAppBundleID=%@, sourcRect=%@, preferredWidth=%f>
style
initiatorStyle
routingContextUID
presentingAppBundleID
allowsNowPlayingApplicationLaunch
sortByIsVideoRoute
sourceRect
preferredWidth
routeUID
unBlockSocialUser
Loved_Playlist
Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.
Invalid format string- missing numeric value.
Parameter index out of bounds.
MediaLibraryCore
image_decoding
v48@?0^{CGContext=}8{CGRect={CGPoint=dd}{CGSize=dd}}16
MPRequest.m
Subclass %@ must implement -%@ defined in %@.
[MPRequest class]
<%@: %p label=%@>
com.apple.MediaPlaybackCore/%@.cleanup
class.description
-[MPRequest _performWithCompletion: failed to call completion %@
label
<NULL>
com.apple.MediaPlaybackCore/%@
com.apple.MediaPlaybackCore/%@.callout
com.apple.MPRequest.invalidationQueue
v16@?0@"NSString"8
<%@: %p request=%p>
valid
[MPResponse class]
_obj
<%@:%p>
_middleware
MPResponseDidInvalidateNotification
MPRequestErrorDomain
MPRequestUnderlyingErrorsUserInfoKey
MPModelResponseDidInvalidateNotification
MPModelResponse.m
-initWithRequest: must be used.
Invalid parameter not satisfying: %@
request != nil
<%@: %p
; isValid = NO
; deferredItemProperties = %@
; deferredSectionProperties = %@
; results = %@
lyrics
MPModelPropertyLyricsText
MPModelPropertyLyricsTTML
MPModelPropertyLyricsHasStoreLyrics
MPModelPropertyLyricsHasLibraryLyrics
MPModelPropertyLyricsHasTimeSyncedLyrics
videoGravity
playerController.status
isReadyForDisplay
player.currentItem
player.isExternalPlaybackActive
playerController.isPlaying
playerController.contentDuration
playerController.contentDimensions
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
MPTimedMetadata cannot be created directly
keyspace
value
timestamp
org.iana.media-type
MPMoviePlayerPlaybackStateDidChangeNotification
MPMoviePlayerPlaybackDidFinishNotification
MPMoviePlayerPlaybackDidFinishReasonUserInfoKey
MPMoviePlayerLoadStateDidChangeNotification
MPMoviePlayerNowPlayingMovieDidChangeNotification
MPMoviePlayerReadyForDisplayDidChangeNotification
MPMoviePlayerScalingModeDidChangeNotification
MPMoviePlayerThumbnailImageRequestDidFinishNotification
MPMoviePlayerThumbnailImageKey
MPMoviePlayerThumbnailTimeKey
MPMoviePlayerThumbnailErrorKey
MPMoviePlayerTimedMetadataUpdatedNotification
MPMoviePlayerTimedMetadataUserInfoKey
info
mimeType
dataType
languageCode
MPMoviePlayerWillEnterFullscreenNotification
MPMoviePlayerDidEnterFullscreenNotification
MPMoviePlayerWillExitFullscreenNotification
MPMoviePlayerDidExitFullscreenNotification
MPMoviePlayerFullscreenAnimationDurationUserInfoKey
MPMoviePlayerFullscreenAnimationCurveUserInfoKey
MPMovieMediaTypesAvailableNotification
MPMovieSourceTypeAvailableNotification
MPMovieDurationAvailableNotification
MPMovieNaturalSizeAvailableNotification
MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification
MediaPlayerErrorDomain
error
AVPlayerViewController
/System/Library/Frameworks/AVKit.framework/AVKit
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
refId
endTimeReciever
AFAnalytics
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
AFAnalyticsContextsMerge
com.apple.MediaPlayer.MPRTCReportingSession.operationQueue
v40@?0@"RTCReporting"8@"NSDictionary"16@"NSArray"24@"NSError"32
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
MPStoreClientTokenDidChangeNotification
NetworkInterface
kRTCReportingMessageParametersCategory
kRTCReportingMessageParametersType
kRTCReportingMessageParametersPayload
-%ld
@"NSString"16@?0@"NSString"8
Domain
Code
com.apple.MediaPlayer.MPModelLibraryKeepLocalChangeRequestOperation.operationQueue
v24@?0@"MPModelLibraryResponse"8@"NSError"16
MPAVItemPlaybackModeAvailableNotification
MPAVItemArtworkDidChangeNotification
MPAVItemAssetIsLoadedNotification
MPAVItemTypeAvailableNotification
MPAVItemAlternateTracksAvailableNotification
MPAVItemDisplayableTextAvailableNotification
MPAVItemDurationAvailableNotification
MPAVItemIsExplicitDidChangeNotification
MPAVItemLikedStateDidChangeNotification
MPAVItemRatingDidChangeNotification
MPAVItemTitlesDidChangeNotification
MPAVItemModelGenericObjectDidChangeNotification
MPAVItemBookmarkTimeDidChangeNotification
MPAVItemPlayerItemDidChangeNotification
MPAVItemPlayerItemWillChangeNotification
MPAVItemTimebaseDidChangeNotification
MediaPlayerAVItemErrorDomain
_MPAVItemInternalLikedStateDidChangeNotification
MPAVItemPlaybackProperties_NextPlayStartTime
MPAVItemPlaybackProperties_StartTime
MPAVItemPlaybackProperties_EndTime
MPAVItemPlaybackProperties_LookForLyrics
MPAVItemPlaybackProperties_RampInDuration
MPAVItemPlaybackProperties_RampOutDuration
MPAVItemPlaybackProperties_AudibleDRMGroupID
AudibleDRMInfoGroupID
RampInOutInfoInDuration
RampInOutInfoOutDuration
MPAVItemShouldPreventPlaybackDidChangeNotification
MPAVItemHasFinishedDownloadingDidChangeNotification
MPAVItemSecureKeyDeliveryRequestDidFinishNotification
MPAVItemUserInfoKeyLoadDuration
MPAVItemUserInfoKeyRequestEndDate
MPAVItemUserInfoKeyRequestError
MPAVItemUserInfoKeyRequestStartDate
MPAVItemUserInfoKeyStoreDialogDictionary
AVItemPlaybackProperties_RampInDuration
AVItemPlaybackProperties_RampOutDuration
MPAVItemDurationObservationContext
MPAVItemLoadedTimeRangesObservationContext
MPAVItemTimebaseObservationContext
com.apple.MediaPlayer.MPAVItem.assetQueue
<%@: %p> (%@)
https://
http://
home-sharing://
%lli
trackReferences
duration
v16@?0@"MPNowPlayingContentItem"8
loadedTimeRanges
timebase
v16@?0@"MPExportableArtworkProperties"8
INTERNALONLY-%@
type
unknown
@"MPAVItem"8@?0
v16@?0@"ICStoreRequestContext"8
MPQueueFeederErrorDomain
MPQueueFeeder.m
[MPQueueFeeder class]
standard
short
bannerUber
subscriptionCover
subscriptionHero
storeFlowcase
browseCover
fullscreenBackground
brandLogo
masterArt
editorialNotes
tagline
album
artist
activity
brand
iTunesBrand
showBrand
Curator
Genre
Show
recordLabel
Episode
Shoutcast
movie
musicVideo
playlist
radioStation
song
tvEpisode
tvSeason
tvShow
socialProfile
uploadedAudio
uploadedVideo
tvtrailer
record-labels
formerIds
curatorName
username
kind
iTunesBrandType
shortUrl
playlistType
personalMixSortKey
radioStationTypeId
streamingRadioSubType
stationProviderName
socialProfileId
handle
nameRaw
isPrivate
isVerified
isChart
songs
shows
tv-episodes
tv-seasons
metadata
<%@:%p storeID=%@ name=%@ subscriptionOffer=%@>
MPStoreItemMetadataDownloadAssetDictionary
MPStoreItemMetadataMusicAPIDictionary
MPStoreItemMetadataExpirationDate
MPStoreItemMetadataHasOverrideChildStorePlatformDictionaries
MPStoreItemMetadataOverrideChildStorePlatformDictionaries
MPStoreItemMetadataParentStoreItemMetadata
MPStoreItemMetadataStorePlatformDictionary
artistName
artistId
aucType
artworkURL
artworkTrackIds
isBeats1
childrenIds
relationships.tracks.data
libraryAlbumId
sagaId
collectionName
playlistName
collectionId
playlistId
composer
composerName
copyright
curatorSocialHandle
curatorId
discCount
discNumber
durationInMillis
artwork
audioTraits
description
itunesNotes
hasArtistBio
hasLyrics
hasTimeSyncedLyrics
hasSocialPosts
genreNames
genres
riaa
contentRatingsBySystem
isCompilation
isMasteredForItunes
isPreorder
movementName
movementCount
movementNumber
movieClips
offers
playlistIds
popularity
releaseDate
lastModifiedDate
shortName
shouldBookmarkPlayPosition
showComposer
trackCount
seasonNumber
episodeCount
versionHash
workName
videoSubType
genre
explicit
contentRating
isAvailable
music-video
playParams
latestAlbumArtwork
itemName
meta.popularity
shouldReportPlayEvents
libraryTrackId
libraryPlaylistId
itemId
purchasedAdamId
subscribedAdamID
children
work
isLive
relationships
events
attributes
endTime
v16@?0@"MPRadioStationEvent<MPMutableRadioStationEvent>"8
editorialArtwork
screenshots
uber
avatarArtwork
stationGlyph
artworkTracks
shortDescription
en_US_POSIX
YYYY-MM-dd
yyyy-MM-dd'T'HH:mm:ss'Z'
MPAVControllerErrorDomain
MPAVControllerErrorUserInfoKeyAlertDefaultButtonActionURLString
MPAVControllerErrorUserInfoKeyAlertDefaultButtonTitle
MPAVControllerErrorUserInfoKeyAlertMessage
MPAVControllerErrorUserInfoKeyAlertTitle
MPAVControllerItemParameter
MPShuffleTypeOff
MPShuffleTypeItems
MPShuffleTypeCollections
MPShuffleTypeUserDefault
<MPShuffleTypeUnknown>
MPRepeatTypeOff
MPRepeatTypeOne
MPRepeatTypeAll
MPRepeatTypeUserDefault
<MPRepeatTypeUnknown>
None
PrepareToPlay
Play
Proactive
User Selected
chevron.forward
com.apple.MediaPlayer
AIRPLAY_DEVICE_BATTERY_LEVEL_COMBINED_FORMAT_%@_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_SINGLE_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_LEFT_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_RIGHT_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_CASE_%@
%@  %@
AIRPLAY_IN_USE_ON_PAIRED_DEVICE_%@
checkmark.circle.fill
circle
checkmark
v16@?0@"NSTimer"8
com.apple.MediaPlayer.MPTiledArtworkDataSource.TilingArtworkCatalogOperationQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.LoadingTiledArtworkRequestsQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.RenderingTiledArtworkRequestsQueue
Tiled artwork count cannot be 0.
Tiling artwork request was cancelled
No artwork catalogs were found
com.apple.MediaPlayer.MPTiledArtworkDataSource.loadingTileDataAccessQueue
Artwork catalogs found, but at least one had an empty image
MPTiledArtworkError
MPModelLibraryRequestOperation.mm
Request did not provide an entity class for %@ %@. label=%@
v32@?0@"MPMediaQuerySection"8Q16^B24
-[MPModelLibraryRequestOperation _executeLegacyRequest]
Results should not be nil!
com.apple.MediaPlayer.MPModelLibraryRequest.itemQueryOperationQueue
-[MPModelLibraryRequestOperation _executeRequest]_block_invoke
com.apple.MediaPlayer.MPModelLibraryRequest.serialQueue
{shared_ptr<mlcore::PlaylistItemEntityQuery>=^{PlaylistItemEntityQuery}^{__shared_weak_count}}8@?0
scopedContainers cannot contain a MPModelObject subclass matching the itemKind's modelClass. label=%@
_AVPlayer_VolumeDidChangeNotification
DO_NOT_USE
MPAVControllerBufferingStateChangedNotification
MPAVControllerOldStateParameter
MPAVControllerNewStateParameter
MPAVControllerItemChangedNotification
MPAVControllerItemWillChangeNotification
MPAVControllerErrorParameter
MPAVControllerErrorReasonParameter
MPAVControllerPlaybackStateChangedNotification
MPAVControllerDidReloadWithPlaybackContextNotification
MPAVControllerDidSetCurrentTimeNotification
MPAVControllerWillReloadWithPlaybackContextNotification
MPAVControllerPlaybackContextParameter
MPAVControllerWillSetCurrentTimeNotification
MPAVControllerPreviousItemDidTransitionNaturally
MPAVControllerPlaybackStateParameter
MPAVControllerUpdatedPlaybackStateParameter
MPAVControllerItemDidChangeWhenReloadingPlaybackContextNotification
MPAVControllerNextItemStateParameter
MPAVControllerCurrentTimeParameter
MPAVControllerDidRegisterItemNotificationsObject
_MPAVControllerExternalPlaybackVideoClient
PlayVideoInBackground
MPAVController.m
invalid parameters
changing track, no more tracks
-[MPAVController pause]
-[MPAVController togglePlaybackWithOptions:]
_allowAirPlayVideoCount incorrect
-[MPAVController setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:]
queueController.currentItem
-[MPAVController setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:]
outputSupportsAC3
itemDidChange nil
loaded
not loaded
currentItem
%s-%i
externalPlaybackActive
outputObscuredDueToInsufficientExternalProtection
rate
status
canPlayFastForward
canPlayFastReverse
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
tracks
-[MPAVController _applicationWillAddDeactivationReason:]
-[MPAVController _applicationDidRemoveDeactivationReason:]
_useAirPlayMusicMode
itemAllowsAirPlayFromCloud
itemAllowsExternalPlayback
itemHasProtectedContent
itemType
itemPlaybackMode
externalScreenType
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
usesExternalPlaybackWhileExternalScreenIsActive
wantsExternalPlayback
usesAudioOnlyMode
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/Playback/Old Engine/_ios_tvos_watchos/MPAVController.m
MPAudiblePlaybackPerformanceEnabled
queueController
com.apple.MediaPlayer.MPAVController.AutoPlay
APIC
Movie/video screen capture
MPCQueueController
Unknown
Audio
Video
Undefined
File
Streaming
AirPlay
TVOut
@"MPArtworkCatalog"16@?0d8
clipAssets
previewArtwork
MSVHasher+Algorithms.h
Cannot append to unknown hasher algorithm
MSVHasher+SipHash.h
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append64: invalid byte count detected [byteCount & 3]: %lld
Cannot obtain hash from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
descriptionText
MPRadioControllerRadioAvailabilityDidChangeNotification
MPRadioControllerRecentStationsDidChangeNotification
com.apple.MediaPlayer.MPRadioController.accessQueue
v16@?0@"NSXPCConnection"8
com.apple.MediaPlayer.MPRadioController.connection
MPRadioControllerRadioAvailability
com.apple.mobileipod
FBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
BKSProcessAssertion
/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
v16@?0@"<MPMutableRadioIdentifiers>"8
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"MPModelRadioStation"8
Song:v%lu:o%lu
v16@?0@"MPModelSongKind"8
music videos
artist uploaded content
 or 
shuffleable 
cloud library 
variants
options
MPModelPropertySongHasVideo
%@ %@
MPModelPropertySongTitle
MPModelRelationshipSongAlbum
MPModelRelationshipSongArtist
MPModelRelationshipSongGenre
MPModelRelationshipSongComposer
MPModelPropertySongGrouping
MPModelPropertySongCopyrightText
MPModelPropertySongDuration
_MPModelPropertySongTrackCount
MPModelPropertySongTrackNumber
MPModelPropertySongDiscNumber
MPModelPropertySongPlayCount
MPModelPropertySongSkipCount
MPModelPropertySongExplicit
MPModelPropertySongArtistUploadedContent
MPModelPropertySongBeatsPerMinute
MPModelRelationshipSongLyrics
MPModelPropertySongShouldShowComposer
MPModelPropertySongVolumeNormalization
MPModelPropertySongArtwork
MPModelRelationshipSongLocalFileAsset
MPModelPropertySongKeepLocalEnableState
MPModelPropertySongKeepLocalManagedStatus
MPModelPropertySongLibraryAdded
MPModelPropertySongLibraryAddedDate
MPModelPropertySongLastDevicePlaybackDate
MPModelPropertySongLibraryAddEligible
MPModelPropertySongHasCloudSyncSource
MPModelPropertySongClassicalWork
MPModelPropertySongClassicalMovement
MPModelPropertySongClassicalMovementCount
MPModelPropertySongClassicalMovementNumber
MPModelPropertySongYear
MPModelRelationshipSongHomeSharingAsset
MPModelRelationshipSongStoreAsset
MPModelPropertySongUserRating
MPModelPropertySongCloudStatus
MPModelPropertySongGaplessInfo
MPModelPropertySongVolumeAdjustment
MPModelRelationshipSongPlaybackPosition
MPModelPropertySongDownloadedDate
MPModelPropertySongTraits
MPModelChildSongAlbum
MPModelChildSongArtists
com.apple.MediaPlayer.MPAVTelevisionRoutingDataSource/serialQueue
RTCSessionIdentifier
appDataDictionaryVersion
popularityDictionary
%lld
@24@?0@"MPNowPlayingContentItem"8@"MPMediaRemoteEntityTranslatorContext"16
userInfo.
deviceSpecificUserInfo.
predicates
com.apple.fig.screen.is.probably.being.recorded
; entityIdentifier = %@
; namespaceIdentifier = %@
; revisionIdentifier = %@
; numberOfColumns = %lu
; numberOfRows = %lu
; tileSpacing = %.2f
; scaledFittingSize = %@
MPRemotePlaybackQueue.m
mrQueue
You must provide %@ with a MediaRemote playback queue. Use %@ instead.
queue
<%@ %p, query = %@, firstItem = %@, shuffleType = %@, repeatType = %@>
The provided queue has no items or collections.
<%@ %p, stationID = %@, stationStringID = %@>
Radio station is invalid or not found.
<%@ %p, shuffleType = %@, trackIDs = %@>
Empty track IDs array provided
<%@:%p identifier=%@ dataLength=%lu>
<%@:%p EmptyQueue>
MPStoreLyricsRequestErrorDomain
v24@?0@"MPStoreLyricsResponse"8@"NSError"16
MPModelPropertyPersonName
MPRadioRecentStationsGroupLocalizedTitle
MPRadioRecentStationsGroupStations
; createIndependentSectionsForLiveRadioStations = %@
; useOneLevelHeroListHierarchy = %@
; disallowEmptyTitleSections = %@
tabs
token
seeAllUrl
link
emphasize
viewRoomUrlRegex
identifier
/v1/editorial/%@/rooms/%@
editorialElementKind
contents
links
editorial-elements
@"MPArtworkCatalog"16@?0@"MPModelAlbum"8
spatial
atmos
surround
lossless
hi-res-lossless
v16@?0@"MPModelGenre"8
MPShuffleableSectionedIdentifierList.m
Unsupported shuffle type: MPShuffleTypeUserDefault
Can only move after a section head that is in the shuffled SIL: afterSectionIdentifier=%@
Can only move after a section tail that is in the shuffled SIL: afterSectionIdentifier=%@
Invalid insertion (no item identifiers) in section: %@
cani
rand
B32@?0@"MPSectionedIdentifierListEntry"8Q16^B24
MPStoreLyricsSnippetRequestErrorDomain
; itemKind = %@
; name = %@
; itemProperties = %@
MPModelLibrarySearchScopeItemKind
MPModelLibrarySearchScopeName
MPModelLibrarySearchScopeItemProperties
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}24@?0@"MPModelKind"8@"MPPropertySet"16
MPModelLibrarySearchScope.mm
Couldn't create scope for modelKind: %@
v32@?0@"NSString"8@"MPModelKind"16^B24
MPModelLibraryAddToPlaylistChangeRequestErrorDomain
com.apple.mediaplayer.artworkservice.resizing.queue
com.apple.mediaplayer.artworkservice.resizing.OperationQueue
<%@:%p "%@"
MPAVLightweightRoutingController.m
The lightweight routing controller only supports disabled and presence discovery modes. If detailed is needed please use MPAVRoutingController.
sectionedItems
sections
; %lu %@
section
    %@ (%lu %@): [
item
items
        %@,
    
    %@ (%lu %@),
v32@?0@"NSArray"8Q16^B24
MPSectionedCollection.m
globalIndex must be greater than or equal to 0
B24@?0q8q16
v16@?0@"NSIndexPath"8
@"MPArtworkCatalog"16@?0@"MPModelTVShow"8
MPModelPropertyPlayEventDatePlayed
MPModelPropertyPlayEventFeatureName
MPModelRelationshipPlayEventAlbum
MPModelRelationshipPlayEventArtist
MPModelRelationshipPlayEventPlaylist
MPModelRelationshipPlayEventRadioStation
MPModelRelationshipPlayEventGroup
v16@?0@"MPModelPlayEvent"8
include
include[stations]
radio
subscriber
nonsubscriber
optout
v16@?0@"MPModelStoreBrowseSection"8
albumSeeded
artistOnly
artistSeeded
editorial
format
libraryPlaylistSeeded
playlistSeeded
query
songSeeded
streaming
user
MPSectionedIdentifierListEnumerator.m
Cannot instantiate forward enumerator with MPSectionedIdentifierListEnumerationOptionReverse set
endEntry cannot be the same as the startingEntry
_startEntries
innerEntry not found in innerEntry.previousEntry.nextEntries
entryToEmit not found in entryToEmit.previousEntry.nextEntries
MPSectionedIdentifierListEntryTypeUnknown
MPSectionedIdentifierListEntryTypeStart
MPSectionedIdentifierListEntryTypeHead
MPSectionedIdentifierListEntryTypeItem
MPSectionedIdentifierListEntryTypeTail
MPSectionedIdentifierListEntryTypeEnd
<%@: %p entryType=%@>
simplified
AFAnalyticsEventTypeMusicPlaybackSummary
SecureKeyBlockingLoadDuration
PerceivedTotalStartupTime
TracklistLoadDuration
MPVolumeSliderVolumeControlLabelDidChangeNotification
MPVolumeSliderVolumeControlAvailabilityDidChangeNotification
MPVolumeSliderVolumeControlCapabilitiesDidChangeNotification
<%@: %p value: %f dataSource: %@
MPVolumeSlider.m
MPVolumeSlider.route must be an MPAVEndpointRoute
VideoPlayer_Slider_Thumb_Small
VideoPlayer_Slider_Thumb
ControlCenter_Slider_Thumb
VideoPlayer_Slider_Track
VideoPlayer_Slider_Groove
VolumeWarning
MPVolumeViewVisibilityChangedNotification
MPVolumeViewRouteButtonChangedNotification
MPVolumeViewRoutePickerPresentedNotification
MPVolumeViewWirelessRoutesAvailableDidChangeNotification
MPVolumeViewWirelessRouteActiveDidChangeNotification
only keyed archiving is supported
MPVolumeViewShowsVolumeSlider
MPVolumeViewShowsRouteButton
airplay_on
airplay
NO_VOLUME_AVAILABLE
 legacyMediaQuery=%@
 allowedItemIdentifiers=[%@]
humanDescription
 allowedSectionIdentifiers=[%@]
 scopedContainers=[%@]
 filterText="%@"
 sortUsingAllowedItemIdentifiers=YES
MPModelLibraryRequestWantsDetailedKeepLocalRequestableResponse
_MPModelLibraryRequestCodingKeySortUsingAllowedItemIdentifiers
MPModelLibraryRequestContentRangeLocation
MPModelLibraryRequestContentRangeLength
MPModelLibraryRequestAllowedItemIdentifiers
MPModelLibraryRequestFilteringOptions
MPModelLibraryRequestFilterText
MPModelLibraryRequestLegacyMediaQuery
MPModelLibraryRequestMediaLibrary
MPModelLibraryRequest.mm
Detailed keep local status only supported when request is sectioned.
Detailed keep local status only supported when request wantsDetailedKeepLocalRequestableResponse.
customForYouURL
MPModelStoreForYouRequestFilteringPolicy
MPModelStoreForYouRequestEndpoint
MPModelStoreForYouRequestMode
withRecentlyPlayed
withSocial
types
withPlainEditorialNotes
MPModelStoreForYouDisplayFilterKind
refreshRequest
DONE
<%@: %p> %@
MPSectionedIdentifierListEntry.m
Cannot add empty branch
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [too many next]
Non-contiguous entries in MPSectionedIdentifierListEntryAddBranch [disconnected previous]
Non-linear entries in MPSectionedIdentifierListEntryAddBranch
<%@: %p> %@%@
<%@: %p> %@ - %@
%@s cannot be initialized externally.
<missing: %@>
<%@: %p command=%@>
kMRMediaRemoteOptionSenderID
%@ (%@)
com.apple.MediaPlayer.MPMediaAPICollectionItemMetadataRequestController.metadataRequestQueue
com.apple.MediaPlayer.MPMediaAPICollectionItemMetadataRequestController.accessQueue
com.apple.MediaPlayer.MPMediaAPICollectionItemMetadataRequestController.callbackQueue
v24@?0@"MPMediaAPICollectionItemMetadataResponse"8@"NSError"16
<%@: %p> (
  textColor: %@
  hasTitle: %@
textColor
MPModelLibraryDefaultSectionedCollectionDataSource.mm
Adjusted global index out of bounds: %ld (indexPath = %@ / entityCount = %ld)
Section index out of bounds: %ld (sectionCount = %ld)
_allowedItemPersistentIDToItemQueryResultsIndexMap must contain an entry for every value in _allowedItemIdentifiers
faulting not implemented yet
MPModelStoreBrowseRequestDomain
MPModelStoreBrowseRequestFilteringPolicy
MPModelStoreBrowseRequestEndpoint
MPModelStoreBrowseRequestLoadAdditionalContentURL
MPModelStoreBrowseRequestSubscriptionStatus
MPModelStoreBrowseRequestAdditionalContent
MPModelStoreBrowseRequestOptions
Artist:a%p
v16@?0@"MPModelArtistKind"8
artists with %@
albumKind
MPModelPropertyPersonHasSocialPosts
MPModelPropertyArtistHasBiography
MPModelPropertyArtistArtwork
MPModelPropertyArtistEditorialArtwork
MPModelRelationshipArtistGenre
MPModelPropertyArtistSongCount
MPModelPropertyArtistAlbumCount
MPModelPropertyArtistLibraryAddedDate
MPModelPropertyArtistClassicalExperienceAvailable
MPModelChildArtistAlbums
MPAVRoutingControllerActiveSystemRouteDidChangeNotification
MPAVRoutingControllerDidPickRouteNotification
MPAVRoutingControllerRouteUserInfoKey
MPAVRoutingControllerDidUpdateVolumeControlStateNotification
com.apple.MediaPlayer.MPAVRoutingController/sharedWorkerQueue
com.apple.MediaPlayer.MPAVRoutingController/serialQueue
<%@: %p>
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
Q8@?0
<%@ %p "%@" dataSource=%@>
<%@ %p dataSource=%@>
routeName
speaker.bluetooth.fill
carplay
hearingdevice.ear
speaker.wave.2.fill
car.fill
person.2.fill
display
beatslogo
genericTV
tv.and.mediabox
tv-settopbox
mediastick
tv-stick
appletv.fill
appleTV
airpods
airpodspro
airpods-pro
airpodsmax
airpods-b515
airpods.gen3
b688
beats.powerbeats
beats-powerbeats
beats.headphones
beats-solo
beats-studio
beats.earphones
beats-x
beats.powerbeatspro
beats-powerbeats-pro
beats.fit.pro
beats-b419
beats-b364
beats-b372
beats.studiobuds
beats-b507
homepodmini.2.fill
b520-pair
homepod.2.fill
homePod-pair
homepodmini.fill
b520
homepod.fill
homePod
headphones
hifispeaker.fill
speaker
v32@?0@"MPAVRoute"8q16@"NSString"24
homepod.and.appletv.fill
odeon
homepodmini.and.appletv.fill
odeon-b520
hifispeaker.and.appletv
homepod.and.homepodmini.fill
homepodmini-homepod
hifispeaker.and.homepod.fill
hifispeaker.and.homepodmini.fill
hifispeaker.2.fill
Active route must be of type MPAVEndpointRoute.
iPhone
iPad
ipad
iPod
ipod
AppleTV
DeviceClass
iphone-x
ipad-pro
represents NowPlaying App
does NOT represent NowPlaying App
v24@?0^v8^{__CFError=}16
-[MPAVRoutingController _activeAudioRouteDidChangeNotification:]_block_invoke
com.apple.airplay.deviceAvailability
MPAVRoutingController.m
route
<NONE>
dataSource
discoveryMode
cachedRoutes
cachedPickedRoutes
pendingRoutes
remove
<%@: %p operationName=%@ routes=%@>
com.apple.MediaPlayer.MPAVRoutingControllerSelection/serialQueue
Route selection cancelled by MPAVRoutingController cancelInProgressSelectionForRoute:
Selection was cancelled due to removePendingRoute.
Enqueued route was cancelled because a new selection for the same route was enqueued.
Route in progress was interrupted by a new selection for the same route.
Composer:a%p
v16@?0@"MPModelComposerKind"8
composers with %@
MPModelPropertyComposerLibraryAddedDate
MPServerObjectDatabaseImportRequest.m
[MPServerObjectDatabaseMetadataImportRequest class]
attributes.playParams
attributes.versionHash
attributes.extendedAssetUrls
attributes.assetUrls
attributes.assets
flavor
sinfs
B64@?0@"NSString"8@"NSMutableDictionary"16@"NSArray"24@"NSString"32@"MPIdentifierSet"40q48^@56
v32@?0@"MPServerObjectDatabaseMediaAPIImportChildRelation"8Q16^B24
miniSinf
Cannot extract sinfData from invalid synfType
sinf2
personal-recommendation
marketing-items
subscription
preorder
groupings
rooms
targetedRadio
multirooms
normal
playlists|apple-curators
apple-curators|playlists
artists|stations
artists|songs
artists|playlists
station-events|apple-curators
station-events
activities
personal-social-profiles
extendedAssetUrls
assetUrls
[MPServerObjectDatabaseAssetImportRequest class]
adamIds
flavors
plus
lightweight
LWHQ
lightweightPlus
superLightweight
Cannot obtain digest from unknown hasher algorithm
Model response invalid before completion
Model response invalidation notification
v24@?0@"MPModelResponse"8@"NSError"16
 modelRequest=%@
System
PrivateFrameworks
RTCReporting.framework
MediaLibraryCore.framework
SectionHeaders
LocalizedSectionHeaders
SectionIndices
LocalizedSectionIndices
NameTransform
FirstCharacterAfterLanguage
LastCharacter
Headers
InsignificantSortPrefixes
com.apple.mediaplayer.MPHomeManagerObserver.accessQueue
com.apple.mediaplayer.MPHomeManagerObserver.calloutQueue
MPHomeUserMonitorBug
HomeUser Found After Forced Update
v32@?0@"HMAccessory"8Q16^B24
B24@?0@"NSUUID"8@"MPHomeUserMonitor"16
v24@?0@"HMUser"8^B16
HMHomeManager
Class getHMHomeManagerClass(void)_block_invoke
MPHomeManagerObserver.m
Unable to find class %s
void *HomeKitLibrary(void)
/System/Library/PrivateFrameworks/HomeKit.framework/HomeKit
/System/Library/PrivateFrameworks/HomeKit.framework/Contents/MacOS/HomeKit
supplementalReason
MPPlaybackContextShuffleType
MPPlaybackContextRepeatType
MPPlaybackContextQueueEndAction
MPPlaybackContextActionAfterQueueLoad
MPPlaybackContextPlayActionQueueGroupingID
MPPlaybackContextPlayActivityFeatureName
MPPlaybackContextPlayActivityRecommendationData
%@/%@
repeat/shuffle
queueEndAction
actionAfterQueueLoad
siriAssetInfo
sessionIdentifier
supportsAccountRectification
queueDescriptor
<%@:%p
 %@=%@
ReplacementContext is of different type %@ != %@
MPContentTasteControllerDidChangeNotification
MPContentTasteControllerNotificationUserInfoKeyContentType
MPContentTasteControllerNotificationUserInfoKeyMediaEntity
MPContentTasteControllerNotificationUserInfoKeyPlaylistGlobalID
MPContentTasteControllerNotificationUserInfoKeyStoreAdamID
MPContentTasteControllerNotificationUserInfoKeyTasteType
MPContentTasteControllerWillSetTasteTypeNotification
com.apple.mediaplayer.MPContentTasteController.global.serial.queue
NoDSID
SingletonTasteController
com.apple.MediaPlayer.MPContentTasteController.accessQueue
unknown entity type
invalid playlist global ID
v32@?0@"MPContentTasteController"8Q16^B24
com.apple.MediaPlayer.MPStoreItemMetadataRequestController.operationQueue
com.apple.MediaPlayer/MPStoreItemMetadata.callout
MPStoreItemMetadataRequestController.m
Attempting to end a transaction that never began
com.apple.MediaPlayer.MPStoreItemMetadataRequestController
v24@?0@"ICStorePlatformMetadata"8^B16
v32@?0@"NSArray"8@"<ICStorePlatformResponse>"16@"NSError"24
v24@?0@"<ICStorePlatformResponse>"8@"NSError"16
v32@?0@"MPStoreItemMetadataCacheKey"8@"MPStoreItemMetadataCache"16^B24
playlistPersistentID
playlistAttributes
seedItems
dateCreated
isWorkoutMix
isGeniusMix
isGeniusPlaylist
geniusMixRepresentativeArtists
isVoiceMemos
isActivePlaylist
isActiveGeniusPlaylist
isActiveOnTheGoPlaylist
isUserEditable
isDeletable
isLimitedDynamicSmartPlaylist
descriptionInfo
isEditable
playCount
playCountSinceSync
likedState
parentPersistentID
isPurchasesPlaylist
isCurrentDevicePurchasesPlaylist
isPlaybackHistoryPlaylist
isIgnoredSyncing
hasItems
cloudGlobalID
cloudVersionHash
cloudShareURL
cloudIsPublic
cloudIsVisible
cloudIsSubscribed
cloudIsCuratorPlaylist
cloudAuthorStoreID
cloudAuthorDisplayName
cloudAuthorStoreURL
cloudUserCount
cloudGlobalPlayCount
cloudGlobalLikeCount
distinguishedKind
isITunesSynced
externalVendorDisplayName
externalVendorContainerTag
externalVendorIdentifier
isExternalVendorPlaylist
cloudPlaylistUniversalLibraryID
MPMediaPlaylist.m
Playlist was initialized with a multiverse identifier containing the wrong object type (%d)
subclass must implement
CFBundleDisplayName
CFBundleExecutable
TVEpisode:v%lu:o%lu
v16@?0@"MPModelTVEpisodeKind"8
episodes
Apple Music episodes
TV episode %@
MPModelPropertyTVEpisodeTitle
MPModelPropertyTVEpisodeDescriptionText
MPModelPropertyTVEpisodeDuration
MPModelPropertyTVEpisodeHasCloudSyncSource
MPModelPropertyTVEpisodeMusicShow
MPModelPropertyTVEpisodeNumber
MPModelPropertyTVEpisodeExplicitRating
MPModelRelationshipTVEpisodeLocalFileAsset
MPModelRelationshipTVEpisodePlaybackPosition
MPModelRelationshipTVEpisodeStoreAsset
MPModelRelationshipTVEpisodeSeason
MPModelRelationshipTVEpisodeShow
MPModelPropertyTVEpisodeReleaseDate
MPModelPropertyTVEpisodeType
MPModelPropertyTVEpisodeTypeDisplayName
MPModelPropertyTVEpisodeLibraryAdded
MPModelPropertyTVEpisodeLibraryAddedDate
MPModelPropertyTVEpisodeLastDevicePlaybackDate
MPModelPropertyTVEpisodeLibraryAddEligible
MPModelPropertyTVEpisodeKeepLocalEnableState
MPModelPropertyTVEpisodeKeepLocalManagedStatus
MPModelPropertyTVEpisodeArtwork
MPModelPropertyTVEpisodeDownloadedDate
MPPlaybackArchiveErrorDomain
v16@?0@"<MPMutablePlaybackArchive>"8
<%@: %p type=%ld playbackSessionIdentifier=%@ playbackSessionData=%@ playbackSessionType=%@ bundleIdentifier=%@ supportedOptions=%lu queueControlOptions=%lu displayProperties=%@ copyOptions=%lu> storage=%@
archiveType
sessionID
sessionType
bundleID
supportedOptions
displayProperties
copyOptions
queueControlOptions
storage
MPPlaybackArchive.m
Attempt to mutate after finalization.
TOTAL
<%@:%p %@, %@, SystemFilters=%@>
DISABLED
enabled
 ordered by %@
MPFilterPredicates
MPGroupingType
MPIgnoreSystemFilterPredicates
MPIgnoreRestrictionsPredicates
MPIncludeNonLibraryEntities
MPIncludeEntitiesWithBlankNames
MPEntityOrder
MLEntityOrder
MLEntityOrderSorted
MLIsFilteringDisabled
MPStaticEntities
MPStaticEntityType
MPMediaQuery.m
Cannot decode protobuf object of type %@
v32@?0@"MPMediaItemCollection"8Q16^B24
filtering_disabled
v16@?0@8
v24@?0q8^B16
v32@?0q8@"NSDictionary"16^B24
MPMediaPredicate is an abstract class and cannot be decoded.
MPMediaPredicate is an abstract class and cannot be encoded.
MPProperty
MPValue
MPComparisonType
'%@'
'%@' %@
equal to
not equal to
greater than
greater than or equal
less than
less than or equal
bit test
contains
starts with
ends with
<%@ %p> '%@' %@ %@
Cannot decode object of type %@
MPMediaPropertyPredicate cannot filter using the %@ property.
conditionPredicate
thenPredicate
elsePredicate
MPPredicates
<%@ %p> %@
containmentProperty
containmentValues
<%@ %p property:'%@' values:%@>
shouldContain
persistentIDs
<%@ %p> should%@ contain %lu persistent IDs
MPSearchString
MPProperties
<%@ %p> %@ matches '%@'
MPMediaGroupingTitle
MPMediaGroupingSongsByAlbumArtist
MPMediaGroupingAlbum
MPMediaGroupingAlbumByArtist
MPMediaGroupingAlbumByAlbumArtist
MPMediaGroupingAlbumByComposer
MPMediaGroupingArtist
MPMediaGroupingAlbumArtist
MPMediaGroupingComposer
MPMediaGroupingGenre
MPMediaGroupingPlaylist
MPMediaGroupingPodcastTitle
MPMediaGroupingSeriesName
MPMediaGroupingSeasonName
MPMediaGroupingAudioBookTitle
MPMediaGroupingAlbumPersistentID
MPMediaGroupingAlbumRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyPlayed
MPMediaGroupingComposerRecentlyAdded
MPMediaGroupingComposerRecentlyPlayed
MPMediaGroupingGenreRecentlyAdded
MPMediaGroupingGenreRecentlyPlayed
(unknown grouping type)
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.operationQueue
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.accessQueue
v24@?0@"MPMediaPlaylist"8@"NSError"16
external
user-shared
personal-mix
@"MPArtworkCatalog"16@?0@"MPModelPlaylist"8
v16@?0@"MPModelCurator"8
MPMusicPlayerControllerErrorDomain
MPMusicPlayerControllerPlaybackStateDidChangeNotification
MPMusicPlayerControllerNowPlayingItemDidChangeNotification
MPMusicPlayerControllerVolumeDidChangeNotification
MPMusicPlayerControllerQueueDidChangeNotification
MPMediaPlaybackIsPreparedToPlayDidChangeNotification
MPMusicPlayerControllerItemPlaybackDidEndNotification
_MPMusicPlayerControllerArtworkDidChangeNotification
_MPMusicPlayerControllerQueueDidEndNotification
_MPMusicPlayerControllerQueueDidChangeNotification
_contentItemIDs
MusicKit_applicationMusicPlayer
MusicKit_systemMusicPlayer
com.apple.Music.MPMusicPlayerControllerInternal
com.apple.Music.MPMusicPlayerApplicationControllerInternal
systemMusicPlayer
applicationQueuePlayer
MPMusicPlayerController.m
Must initialize a concrete instance of MPMusicPlayerController.
<%@:%p client=%@>
v24@?0@"MPMusicPlayerControllerNowPlaying"8@"NSError"16
[MPMusicPlayerController class]
MPMusicPlayerController is not available on the simulator
v24@?0@"MPMusicPlayerQueueDescriptor"8@"NSError"16
v16@?0@"MPMusicPlayerControllerNowPlayingTimeSnapshot"8
MPArtworkCatalogEffectOptionColorAnalyzerAlgorithm
MPArtworkRepresentationBackingFileURLAssociatedKey
MPArtworkCatalogErrorDomain
<%@: %p [redacted description due to non-main thread]>
<%@: %p token=%@ fittingSize=%@ destinationScale=%lf destination=%@>
v24@?0@8@"MPArtworkRepresentationCollection"16
v24@?0@"MPArtworkColorAnalyzer"8@"MPArtworkColorAnalysis"16
v16@?0@?<v@?@@"NSError">8
v16@?0^{CGImage=}8
v24@?0@"MPExportableArtworkProperties"8@"NSError"16
Identifiable data source with short description "%@" is not properly registered.
q24@?0@"NSValue"8@"NSValue"16
i=%@/v=%@
@"UIColor"16@?0@"UITraitCollection"8
v16@?0@"UIGraphicsImageRendererContext"8
%@-%@
conditionalPredicate
com.apple.MediaPlayer.MPAsyncOperation.accessQueue
isExecuting
MPAsyncOperation.m
[MPAsyncOperation class]
isFinished
persistentID
albumTitle
albumArtist
playbackDuration
albumTrackNumber
albumTrackCount
containerItemPID
chosenByAutoFill
year
beatsPerMinute
comments
storeItemAdamID
storeAccountID
storeDownloaderAccountID
storeFamilyAccountID
storeItemURL
storePlaylistAdamID
storeArtistAdamID
storeAlbumArtistAdamID
storeComposerAdamID
storeGenreAdamID
storeRentalID
isPremium
isRental
isITunesU
isAudible
isMusicVideo
isHD
includeInShuffle
shortDescriptionInfo
movieInfo
podcastTitle
seriesName
seasonName
episodeNumber
showSortType
episodeTypeDisplayName
episodeSubSortOrder
isMusicShow
collectionDescription
hlsOfflinePlaybackKeys
skipCount
skipCountSinceSync
lastSkippedDate
rememberBookmarkTime
rating
lastPlayedDate
userGrouping
sortTitle
sortArtist
sortAlbumTitle
sortAlbumArtist
sortComposer
filePath
verifiedIntegrity
locationFileName
assetURL
hasAvailableItemArtwork
chapters
chapterArtworkTimes
albumPID
albumArtistPID
genrePID
composerPID
podcastPID
hasBeenPlayed
bookmarkTime
isDemoRental
rentalDuration
rentalPlaybackDuration
rentalPlaybackStartTime
rentalStartTime
rentalExpirationDate
rentalWindowEndDate
isOTAPurchased
isStreamingQuality
isTemporaryCloudDownload
volumeAdjustment
fileSize
podcastURL
podcastGUID
eqPreset
audioTrackID
audioTrackLocale
hasAlternateAudio
hasSubtitles
isPendingSync
hasProtectedAsset
hasAppleMusicDRM
needsRestore
storeCloudStatus
storeRedownloadParameters
downloadIdentifier
storeSagaID
restricted
storeBookmarkIdentifier
storeBookmarkTimestamp
storeBookmarkEntityRevision
isCloudItem
isAlarm
likedStateChanged
likedStateChangedDate
dateAccessed
artistOrderSection
isLocal
isDeprotected
dateAdded
albumYear
albumKeepLocal
artistKeepLocal
albumArtistKeepLocal
genreKeepLocal
storeDatePurchased
storeExtrasURL
storeNeedsReporting
dateDownloaded
bitRate
booklets
subscriptionStoreItemAdamID
storePlaybackEndpointType
storeAssetProtectionType
radioStationID
advertisementUniqueID
advertisementType
isArtistUploadedContent
cloudIsInMyLibrary
albumArtistCloudUniversalLibraryID
reportingStoreItemAdamID
assetStoreItemAdamID
isExplicit
isPlayable
isMatchAudio
isNonLibraryOwnedSubscriptionContent
significantAmountHasBeenPlayed
entityRevision
remoteLocationId
isInMyLibrary
storeCloudAssetAvailable
composerOrArtist
classicalWork
classicalMovementCount
hasHLSVideo
storeLyricsAvailable
timeSyncedLyricsAvailable
playbackStoreID
colorCapability
hlsColorCapability
videoQuality
hlsVideoQuality
hlsPlaylistURL
audioCapability
hlsAssetTraits
hlsKeyServerURL
hlsKeyServerProtocol
hlsKeyCertificateURL
availableItemArtworkToken
fetchableItemArtworkToken
fetchableItemArtworkSource
availableItemScreenshotToken
fetchableItemScreenshotToken
fetchableItemScreenshotSource
anyAudio
music
podcast
audioBook
voiceMemo
iTunesU-audio
anyVideo
home-video
podcast-video
iTunesU-video
anyMedia
AnyAudio
Music
Podcast
AudioBook
VoiceMemo
ITunesUAudio
AnyVideo
Movie
TVShow
HomeVideo
VideoPodcast
MusicVideo
AnyMedia
MPMediaItem.m
[MPMediaItem class]
com.apple.Music
com.apple.LegacyMusic
invalid parameter
viewPodcast?id=%1$llu
viewAudiobook?id=%2$llu
viewMovie?id=%2$llu
viewAlbum?id=%1$llu
viewTVSeason?id=%1$llu
http://itunes.apple.com/WebObjects/MZStore.woa/wa/
podcast-episode
book
feature-movie
tv-episode
%llu
podcast-url
&%@=%@
itms://?action=library-link%@
[MPNondurableMediaItem class]
MPPersistentID
v24@?0@8^B16
image must be non-nil
requestHandler must be non-nil
MPModelLibraryKeepLocalStatusRequestOperation.mm
Library view must not be nil.
Invalid creation options for MPModelLibraryKeepLocalStatusRequestOperation. downloadableItemsQuery or downloadablePlaylistItemEntityQueryBlock  must be specified
MPMediaLibraryDidChangeNotification
MPMediaLibraryPathDidChangeNotification
MPMediaLibraryChangeTypes
MPMediaLibraryChangeTypePlaylists
MPMediaLibraryChangeTypeItemsKey
_MPMediaLibraryAvailableMediaLibrariesDidChangePrivateNotification
MPMediaLibraryAvailableMediaLibrariesDidChangeNotification
MPMediaLibraryDefaultMediaLibraryDidChangeNotification
MPMediaLibraryDynamicPropertiesDidChangeNotification
MPMediaLibraryInvisiblePropertiesDidChangeNotification
MPMediaLibraryDisplayValuesDidChangeNotification
MPMediaLibraryDisplayValuesWillChangeNotification
MPMediaLibrarySyncGenerationDidChangeNotification
MPMediaLibraryConnectionProgressDidChange
MPMediaLibraryStatusDidChangeNotification
MPMediaLibraryRestrictionsDidChangeNotification
MPMediaLibraryFilteringDidChangeNotification
MPMediaLibraryCloudLibraryAvailabilityDidChangeNotification
MPMediaLibraryEntitiesAddedOrRemovedNotification
MPMediaLibraryContentTasteCatalogUpdateOptionInvalidateLocalCache
default_media_library
com.apple.MPMediaLibrary.global.serial.queue
MPMediaLibrary.m
Attempting to access a method only available for tv and audio accessory device
-[MPMediaLibrary initWithClientIdentity:userIdentity:]_block_invoke
-[MPMediaLibrary initWithClientIdentity:userIdentity:]
com.apple.mediaplayer.MPMediaLibrary
com.apple.mediaplayer.MPMediaLibrary.connectionAssertions
com.apple.mediaplayer.MPMediaLibrary.additionalLibraryFilterPredicatesAccessQueue
 [%@]
MPLibraryDataProviderUID
MPUserDSID
only keyed coding is supported
v16@?0@"MPMediaLibrary"8
MPMediaLibraryErrorDomain
Connection already in progress
Unable to connect
v12@?0f8
PERMISSION_DENIED
CAPABILITY_MISSING
UNKNOWN_ERROR
v32@?0@"NSString"8@"MPMediaLibrary"16^B24
MLSyncPlaylistId
v16@?0@"MPStoreDownload"8
values/properties must have the same count (%lu != %lu)
ipod-library
only one of item/itemsResultSet should be set
v32@?0@?<v@?@"NSNumber">8Q16^B24
v16@?0@"NSNumber"8
@"NSNumber"16@?0@"NSArray"8
v24@?0@"MPMediaQueryCriteria"8@?<v@?@"NSNumber">16
v16@?0Q8
com.apple.mediaplayer.MPMediaLibraryRemote
q24@?0@"MPMediaLibrary"8@"MPMediaLibrary"16
unimplemented
-[MPMediaLibrary getPlaylistWithUUID:creationMetadata:completionHandler:]
NOT_FOUND
One or more store item metadata instances didn't have a valid storeID.
One or more store item metadata instances failed to be converted into SSLookupItems.
One or more persistentID failed to be converted into MPMediaItem.
%p: %@
v40@?0q8@"NSString"16q24^B32
v48@?0q8q16@"NSString"24q32^B40
SKCloudServiceController
/System/Library/Frameworks/StoreKit.framework/StoreKit
; sectionKind=%@
; sectionProperties = %@
; itemKind=%@
; label = %@
itemKind
MPModelRequestLabel
MPModelRequestSectionProperties
MPModelRequestItemProperties
sectionKind
MPModelRequestSectionSortDescriptors
MPModelRequestItemSortDescriptors
com.apple.MediaPlayer.MPModelRequest.sharedQueue
com.apple.MediaPlayer.MPModelRequest.sharedNetworkQueue
MPModelRequest.m
[MPModelRequest class]
MPModelPropertySectionTitle
MPMediaPickerController.m
showsLibraryContent and showsCatalogContent can't both be NO.
MEDIAPICKER_NAVIGATION_TITLE
CANCEL
B12@?0B8
com.apple.Music.MediaPicker
remoteViewController cannot be nil -- process will crash inserting in hierarchy. We likely got a nil remoteViewController because Music is crashing.
v32@?0@"<NSCopying>"8@"MPMusicMediaPickerRemoteViewController"16@"NSError"24
mediaTypes
allowsPickingMultipleItems
aslsb
adtl
showsCloudItems
showsItemsWithProtectedAssets
prompt
picksSingleCollectionEntity
watchCompatibilityVersion
typeIdentifiers
selectionMode
pickingForExternalPlayer
MPAVQueueCoordinatorFailedToQueueAnyItemsNotification
MPAVQueueCoordinatorWillInsertItemAfterItemNotification
MPAVQueueCoordinator
 [anchored]
[reused]
v32@?0@"MPAVItem"8Q16^B24
@"MPAVItem"16@?0@"AVPlayerItem"8
%@:%@
MP_weakAssociatedQueuePlayer
@"MPQueuePlayer"8@?0
v24@?0@"MPNowPlayingContentItem"8@"MPIdentifierSet<MPMutableIdentifierSet>"16
_MPAddKeepLocalControlWaitingSpinnerAnimationKey
UniversalDownloadProgressStopButton
UniversalAddControlWaiting
UniversalAddControlAdd
MPKeepLocalControlShouldShowDownloadedIndicator
UniversalAddControlDownloaded
UniversalAddControlDownloadable
UniversalAddControlError
UniversalAddControlPaused
transform.rotation.z
default
https
/v1/lyrics/%@/snippet/songs/%lld
%.03f
HTTPStatusCodeKey
results
text
q24@?0@"MPStoreItemMovieClipAsset"8@"MPStoreItemMovieClipAsset"16
@"MPArtworkCatalog"16@?0@"MPModelMediaClip"8
v16@?0@"MPModelStaticAsset"8
v16@?0@"MPModelMediaClip"8
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 7, tail == 0]: %lld
_MSVHasher_SipHash_1_3_Append32: invalid byte count detected [byteCount & 3]: %lld
albumPersistentID
albumName
albumSortName
albumAlbumArtistPersistentID
albumAlbumArtist
albumRepresentativeItemPersistentID
albumRepresentativeItemArtworkToken
albumCloudStatus
albumAlbumYear
albumLikedState
albumStoreID
artistPersistentID
artistSortName
artistRepresentativeItemPersistentID
artistRepresentativeItemArtworkToken
artistCloudStatus
artistStoreID
albumArtistPersistentID
albumArtistName
albumArtistSortName
albumArtistRepresentativeItemPersistentID
albumArtistRepresentativeItemArtworkToken
albumArtistCloudStatus
albumArtistStoreID
composerPersistentID
composerSortName
composerRepresentativeItemPersistentID
composerRepresentativeItemArtworkToken
composerCloudStatus
composerStoreID
genrePersistentID
genreName
genreRepresentativeItemPersistentID
genreRepresentativeItemArtworkToken
genreCloudStatus
genreStoreID
artistCount
albumCount
itemCount
MPMediaItemCollection.m
MPMediaItemCollectionInitException
-init is not supported, use -initWithItems:
MPItems
MPItemsCount
MPRepresentativeItem
MPContainedMediaTypes
MPInitializedContainedMediaTypes
MPMediaItemsQuery
<%@ %p %@ handlerCallCount=%ld>
<%@ %lld %lld %f %d>
@"MPArtworkCatalog"16@?0@"MPModelArtist"8
v16@?0@"MPModelArtist"8
radio station event
MPModelPropertyRadioStationEventTitle
MPModelPropertyRadioStationEventDescriptionText
MPModelPropertyRadioStationEventStartTime
MPModelPropertyRadioStationEventEndTime
MPModelPropertyRadioStationEventArtwork
MPModelPropertyRadioStationEventHeroArtwork
scrubberglow
opacity
pulseAnimation
HI_SPEED_SCRUBBING
HALF_SPEED_SCRUBBING
QUARTER_SPEED_SCRUBBING
FINE_SCRUBBING
LIVE
UNKNOWN_DURATION
VideoPlayer_Slider_Track_Hollow
v24@?0@"<MPMusicPlayerControllerApplicationServer>"8@?<B@?>16
v16@?0@"<MPMusicPlayerControllerApplicationServer>"8
com.apple.MediaPlayer.RemotePlayerService
v16@?0@"NSXPCListenerEndpoint"8
v24@?0@"<MPMusicPlayerControllerServer>"8@?<B@?>16
v16@?0@"<MPMusicPlayerControllerServer>"8
MPSupportsExternallyPlayableContent
StarkCapability
com.apple.MediaRemote.MPPlayableContentManagerSerialQueue
-init is invalid. Use +sharedManager.
MPPlayableContentManager.m
-[MPPlayableContentManager setNowPlayingIdentifiers:] nowPlayingIdentifiers cannot be nil.
CARSessionLimitUserInterfacesChangedNotification
void _MPBeginLoadingContentCallback(MRMediaRemoteIndexPath, void *, void (^__strong)(CFErrorRef))_block_invoke
-beginLoadingChildItemsAtIndexPath:completionHandler: completion handler was released without being called.
MPPlayableContentManager.datasource did not respond to beginLoadingChildItemsAtIndexPath: before timeout.
CFArrayRef _MPCopyChildContentItemsCallback(MRMediaRemoteIndexPath, CFRange, void *)
Hierarchy depth has exceeded the limit of %d
void _MPInitiatePlaybackCallback(MRMediaRemoteIndexPath, void *)_block_invoke
-playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler: completion handler was released without being called.
MPPlayableContentManager.datasource did not respond to playableContentManager:initiatePlaybackOfContentItemAtIndexPath: before timeout.
void _MPContentItemsForIdentifiersCallback(CFArrayRef, void *, void (^__strong)(CFArrayRef, CFErrorRef))_block_invoke
-contentItemForIdentifier:completionHandler: completion handler was released without being called.
MPPlayableContentManager.datasource did not respond to contentItemForIdentifier: before timeout.
v24@?0@"MPContentItem"8@"NSError"16
com.apple.MediaPlayer.LyricsRequest.access
com.apple.MediaPlayer.MPStoreLyricsRequestOperation.operationQueue
ttmlLyrics
ttml
lyricsId
MPAVRoutingControllerErrorDomain
MPLazySectionedCollection.mm
Request for section out of bounds: %lld
Request for number of items in section out of bounds: %lld
Index path must have two components.
Request for item out of bound in section (%lld): %lld
Request for item identifiers out of bound in section (%lld): %lld
Request for identifiers for section out of bounds: %lld
static asset
MPModelPropertyStaticAssetDuration
MPModelPropertyStaticAssetFlavorType
MPModelPropertyStaticAssetMediaType
MPModelPropertyStaticAssetURL
_MPAVRoutingViewCellIdentifier
_MPAVRoutingViewHeaderIdentifier
AIRTUNES_POPOVER_TITLE
com.apple.mediaplayer.airPlayPasswordAlertDidCancel
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARPLAY_SAME_OWNER
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARKIT_SAME_OWNER
v16@?0@"MPAVRoutingViewControllerUpdate"8
ROUTING_SPEAKER_HIJACK_INTERRUPT_LOCAL_MULTITASK_TITLE
ROUTING_SPEAKER_HIJACK_INTERRUPT_LOCAL_MULTITASK_MESSAGE
ROUTING_SPEAKER_HIJACK_NAG_CANCEL
ROUTING_SPEAKER_HIJACK_NAG_CONFIRM
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_TV_TITLE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_SPEAKER_TITLE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_TV_MESSAGE
ROUTING_SPEAKER_HIJACK_NAG_MULTITASK_SPEAKER_MESSAGE
v16@?0@"UIAlertAction"8
mirroring switches are no longer supported in MPAVRoutingViewController
com.apple.airplay.startlogging
q24@?0@"MPAVRoute"8@"MPAVRoute"16
v32@?0@"NSString"8@"NSArray"16^B24
LOCAL DEVICES
ROUTING_VIEW_HEADER_HEADPHONES
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARPLAY
ROUTING_VIEW_SHARE_AUDIO_DISABLED_CARKIT
ROUTING_VIEW_SHARE_AUDIO
ROUTING_VIEW_HEADER_SPEAKERS_AND_TVS
displayedEndpointRoute
routeDiscoveryMode
onScreen
inCarPlay
routingViewItems
CARSessionStatus
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
2zyzecwSf2ZYRpB3tuQhOQ
@"MPArtworkCatalog"16@?0@"MPModelSong"8
v16@?0@"MPModelComposer"8
RadioAvailabilityController
RadioAvailabilityControllerRadioAvailableDidChangeNotification
RadioRecentStationsController
RadioRecentStationsControllerStationsDidChangeNotification
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
/System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
MPModelObjectMediaItem.m
MPModelObjectMediaItem initWithPersistentID: is not supported. Use initWithModelObject: instead.
followProfile
MPNowPlayingInfoCenter
NSBundle_MPAdditions.m
unable to find MediaPlayer bundle
MPAbstractNetworkArtworkDataSourceErrorDomain
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.imageAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.videoAccessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.callbackQueue
MPAbstractNetworkArtworkDataSource.m
[MPAbstractNetworkArtworkDataSource class]
Radiosity
q24@?0@8@16
@32@?0{CGSize=dd}8^q24
response
v40@?0@"NSURLSessionDataTask"8@"NSData"16@"NSURLResponse"24@"NSError"32
Artwork request must have a non-nil URL. catalog=%@
MPAbstractNetworkArtworkDataSource
Failed to create URL request for catalog: %@
v32@?0@"NSURLSessionDataTask"8@"AVAssetResourceLoadingRequest"16^B24
@"NSCachedURLResponse"32@?0{CGSize=dd}8^q24
representationSize
v16@?0@"ICRequestContext"8
@"MPArtworkRepresentation"32@?0{CGSize=dd}8^q24
com.apple.mediaplayer.MPArtworkDataSourceURLCache.accessQueue
{-1,-1}
MPMusicPlayerPlayParametersQueueDescriptorPlayParameters
MPMusicPlayerPlayParametersQueueDescriptorStartItemPlayParameters
MPMusicPlayerPlayParametersDictionary
MPMusicPlayerPlayParametersIdentifiers
MPMusicPlayerPlayParametersItemID
MPMusicPlayerPlayParametersItemKind
MPMusicPlayerPlayParametersIsLibraryContent
MPMusicPlayerPlayParametersCatalogID
MusicKit
shuffleType
repeatType
private
MPMusicPlayerQueueDescriptorStartTimes
MPMusicPlayerQueueDescriptorEndTimes
bundleVersion
queueGroupingID
featureName
MPMusicPlayerQueueDescriptor.m
[MPMusicPlayerQueueDescriptor class]
MPMusicPlayerMediaItemQueueDescriptorQuery
MPMusicPlayerMediaItemQueueDescriptorItemCollection
MPMusicPlayerMediaItemQueueDescriptorStartItem
MPMusicPlayerStoreQueueDescriptorStoreIDs
MPMusicPlayerStoreQueueDescriptorStartItemID
MPMusicPlayerStoreQueueDescriptorStoreFronts
isLibrary
catalogId
<%@:%p %@>
<%@:%p queue=%@ startItem=%@>
<%@:%p radioStation=%@>
playbackArchive
void _MSVHasherAppend32(MSVHasher * _Nonnull, uint32_t)
void _MSVHasher_SipHash_1_3_Append32(MSVHasherSipHash_1_3 *, uint32_t)
keyPath
relatedProperties
MPModelLibraryModelSectionedCollectionDataSource.mm
Adjusted section index out of bounds: %ld (sectionIndex = %ld / sectionEntityCount = %ld)
_allowedSectionPersistentIDToSectionQueryResultsIndexMap must contain an entry for every value in _allowedSectionIdentifiers
media clip
mediaClip %@
MPModelPropertyMediaClipTitle
MPModelPropertyMediaClipPreviewArtwork
MPModelRelationshipMediaClipStaticAssets
Share Audio
ROUTING_GROUP_SUBTITLE_COUNT
Disabled
Presence Scan
Detailed Scan
MPConcreteMediaItemInitException
-init is not supported, use -initWithPersistentID:library:
@"MPMediaItem"16@?0@"MPConcreteMediaEntityPropertiesCache"8
com.apple.MediaPlayer.MPConcreteMediaItem.utilitySerialQueue
 %llu
MPLibrary
v24@?0@8@"NSString"16
v24@?0@"NSString"8^B16
@"UIImage"24@?0{CGSize=dd}8
@"MPMediaItemCollection"16@?0@"MPConcreteMediaEntityPropertiesCache"8
MPMediaLibraryDataProvider.m
No persistent ID property could be found for media object of type %d
MPQuery
group
com.apple.MediaPlayer.MPConcreteMediaPlaylist.accessQueue
NOT_SUPPORTED
v40@?0Q8@"NSString"16Q24^B32
com.apple.mediaplayer.ResultSetEntities
Wrong class %@
com.apple.mediaplayer.EntityProperty
Property can't be nil
ml3td_artwork_data
ml3td_radio_station_id
ml3td_advertisement_unique_id
ml3td_advertisement_type
v40@?0{_NSRange=QQ}8Q24^B32
com.apple.MPMediaLibraryDataProviderML3.backgroundTask
com.apple.MPMediaLibraryDataProviderML3.cloudUpdateQueue
com.apple.MPMediaLibraryDataProviderML3.entitiesAddedOrRemovedNotificationQueue
device
v16@?0@"ML3DatabaseConnection"8
SELECT revision FROM entity_revision WHERE class = 1 ORDER BY revision DESC LIMIT 1;
v32@?0q8Q16^B24
B16@?0@"ML3DatabaseConnection"8
v24@?0@"NSDictionary"8@"NSError"16
NanoMusic
v24@?0@"ICStorePlatformResponse"8@"NSError"16
v28@?0B8@"NSError"12@"NSData"20
items not found
item not found
v40@?0q8r^@16Q24^B32
MPMediaLibraryDataProviderML3.m
No ML3Property for MPProperty: %@
v48@?0q8q16i24i28q32^B40
UIBackgroundModes
continuous
iapd
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/Core/MusicLibrary Support/_ios_tvos_watchos/MPMediaLibraryDataProviderML3.m
SEASON_DISPLAY_FORMAT_%@
ratingProvider
localizedRating
ratingLevel
localizedReason
isSourceExternal
v28@?0q8i16@?<v@?@"MPMediaChapter"I>20
v20@?0@"MPMediaChapter"8I16
@"UIImage"8@?0
NSUInteger MPITScaledVolumeNormalization(float)
MPITScaledVolumeNormalization is Unimplemented
Media-SimTestFiles
TestAudio
TestVideo
Media
/Library/
MPAVRouteConnectionErrorDomain
_MPAVRouteConnectionDidInvalidateNotification
_MPAVRouteConnectionDidConnectNotification
_MPAVRouteConnectionDidAttemptConnectionNotification
MPAVRouteConnectionCorrelationIDUserInfoKey
MPAVRouteConnectionReasonUserInfoKey
MPAVRouteConnectionVolumeDidChangeNotification
MPAVRouteConnectionVolumeUserInfoKey
MPAVRouteConnectionEndpointIdentifierUserInfoKey
MPAVRouteConnectionOutputDeviceIdentifierUserInfoKey
MPAVRouteConnection.m
externalDevice
com.apple.MediaPlayerFramework.MPAVRouteConnection.accessQueue
com.apple.MediaPlayerFramework.MPAVRouteConnection.calloutQueue
<%@: %p valid: %@, connected: %@>
deprecated
MPAVRouteConnection
MPAVRouteConnectionCustomData
v20@?0I8^{__CFArray=}12
AIRPLAY_MIRRORING_TITLE
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPHONE
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPAD
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPOD
@"NSMutableArray"16@?0:8
@24@?0:8@"MPMediaPredicate"16
MPMediaEntity.m
MPSections
MPSectionIndexTitles
Aborted
Active
Enforce
Overridden
MPVolumeController.m
playbackTime
urlDescription
<%@: %p> chapter %lu, time = range = [%.2f, %.2f], %@ = %@
MPIndexInChaptersOfAnyType
MPIndexInChaptersOfSameType
MPChapterType
MPPlaybackDuration
MPPlaybackTime
MPChapterIndex
com.apple.MediaPlayer.MPStoreLbraryPersonalizationCollectionDataSource.accessSerialQueue
indexPath
possibleObject
Tracklisting-LazySectionedCollectionDataSource-InvalidStateBug
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (unpersonalizedContentDescriptors did not contain MPStoreLibraryPersonalizationContentDescriptor)
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (effectiveOriginalObject has no identifiers)
originalObject
effectiveOriginalObject
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (libraryIdentifiers unionSet: failed)
libraryIdentifiers
originalIdentifiers
-[MPStoreLibraryPersonalizationCollectionDataSource identifiersForItemAtIndexPath:] (originalObject has no identifiers)
v16@?0@"MPModelLyrics"8
v16@?0@"MPModelAlbum"8
RTCReporting
kRTCReportingSessionInfoClientType
kRTCReportingSessionInfoClientVersion
kRTCReportingSessionInfoSessionID
kRTCReportingSessionInfoBatchEvent
kRTCReportingSessionInfoRequireUserInfo
kRTCReportingSessionInfoHierarchyToken
kRTCReportingUserInfoClientName
kRTCReportingUserInfoServiceName
MPAudioVideoRoutingPopoverController.m
Mirroring is no longer supported by MPAudioVideoRoutingPopoverController
com.apple.mediaplayer.airPlayPasswordAlertWillAppear
com.apple.MediaPlayer.MPModelLibrarySearchRequestOperation.accessSerialQueue
v32@?0@"MPModelLibrarySearchScope"8Q16^B24
v32@?0{shared_ptr<mlcore::LocalizedSearchQueryResult>=^{LocalizedSearchQueryResult}^{__shared_weak_count}}8@"NSError"24
redownload
downloaded
downloading
long
medium
MPStoreItemOfferLookupDictionary
Only keyed archiving is supported.
assets
buyParams
action-params
priceFormatted
price
actionText
_identifiers
<%@:%p modelClass=%@>
MPBaseEntityTranslator.m
[MPBaseEntityTranslator class]
[%@] Property mapping missing for %@ : %@
[%@] Relationship mapping missing for %@ : %@
[%@] Attempting to set a source preprocessor for %@, but one is already set.
[%@] Attempting to replace existing identifiers translator for %@
[%@] Attempting to map an already unsupported property for %@ : %@
[%@] Attempting to replace existing property translator for %@ : %@
[%@] Attempting to map an already unsupported relationship for %@ : %@
[%@] Attempting to replace existing relationship translator for %@ : %@
[%@] Already an existing translator for %@
[%@] Attempting to unsupport identifiers for %@
[%@] Attempting to unsupport a property with an existing mapping: %@
[%@] Attempting to unsupport a relationship with an existing mapping: %@
No identifiers for model class: %@ from source: %@
AirPlayPortExtendedInfo
MPAVRouteDidChangeNotification
MPAVRouteUserInfoRouteKey
76,8194
76,8207
76,8198
76,8197
76,8195
76,8201
76,8202
76,8203
76,8204
76,8205
76,8206
76,8208
10507
AudioAccessory5
76,8209
76,8210
76,8211
j327
<%@: %p uid=%@ type=%@ subtype=%@ modelID=%@>
-tlea
%s is abstract
-[MPAVRoute isPhoneRoute]
B24@?0@"MPAVOutputDeviceDescription"8@"NSDictionary"16
<%@: %p, "%@", picked=%@ uid=%@>
| Mirroring Route: %@
<%@: %p name=%@ uid=%@ type=%@ subtype=%@>
WirelessDisplay
SmartAudio
Speaker
Headphone
Headset
Receiver
LineOut
PersistentLineOut
DisplayPort
AirTunes
HDMI
BluetoothHeadphones
BluetoothHeadset
BluetoothLE
SPDIF
CarAudio
HomePod
Vehicle
Cluster
BluetoothSpeaker
SetTopBox
TVStick
apple-internal-install
true
isInternalInstall
isIcloudLibraryEnabled
isEnabled
isSocialEnabled
trackBadging
B32@?0@"NSURLQueryItem"8Q16^B24
recommendations
storePlatformData
contentId
isUnavailableInAppleMusic
round
strokeEnd
DEFAULT_GENIUS_PLAYLIST_NAME
v24@?0@"MPModelStoreBrowseResponse"8@"NSError"16
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.nestedRequestsOperationQueue
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.sectionsToNestedResponseAccessQueue
v32@?0@"MPModelStoreBrowseContentItem"8q16^B24
_MPMKT_transformedType
_composers
_lyrics
_storeAsset
_playbackPosition
MPMediaKitEntityTranslator.m
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
Use +createGenericObjectTranslator instead.
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"MPMediaKitEntityPayloadTransformer"24
Can only call %s on generic object translators.
-[MPMediaKitEntityTranslator mapRelationshipKey:toModelClass:mediaKitType:]
Movie:v%lu:o%lu
v16@?0@"MPModelMovieKind"8
movies
Apple Music movies
rentals
MPModelPropertyMovieTitle
MPModelPropertyMovieDescriptionText
MPModelPropertyMovieExplicitRating
MPModelPropertyMovieTagline
MPModelPropertyMovieInfoDictionary
MPModelRelationshipMovieClips
MPModelPropertyMovieReleaseDate
MPModelRelationshipMovieLocalFileAsset
MPModelRelationshipMoviePlaybackPosition
MPModelRelationshipMovieStoreAsset
MPModelPropertyMovieArtwork
MPModelPropertyMovieEditorialArtwork
MPModelPropertyMovieDuration
MPModelPropertyMovieHasCloudSyncSource
MPModelPropertyMovieLibraryAdded
MPModelPropertyMovieLibraryAddedDate
MPModelPropertyMovieLastDevicePlaybackDate
MPModelPropertyMovieLibraryAddEligible
MPModelPropertyMovieKeepLocalEnableState
MPModelPropertyMovieKeepLocalManagedStatus
MPModelPropertyMovieDownloadedDate
SongSeeded
ArtistSeeded
Siri
Format
Editorial
GracenoteGenre
User
PlaylistSeeded
AlbumSeeded
Broadcast
radio station
radio station %@
MPModelPropertyRadioStationName
MPModelPropertyRadioStationBeats1
MPModelPropertyRadioStationLive
MPModelPropertyRadioStationEditorNotes
MPModelPropertyRadioStationShortEditorNotes
MPModelPropertyRadioStationHasExplicitContent
MPModelPropertyRadioStationEvents
MPModelPropertyRadioStationArtwork
MPModelPropertyRadioStationGlyph
MPModelPropertyRadioStationAllowsItemLiking
MPModelPropertyRadioStationType
MPModelPropertyRadioStationSubtype
MPModelPropertyRadioStationAttributionLabel
MPModelPropertyRadioStationProviderName
MPModelPropertyRadioStationSubscriptionRequired
MPModelPropertyRadioStationProviderUniversalLink
MPModelPropertyRadioStationProviderBundleIdentifier
MPModelPropertyRadioStationProviderID
MPModelPropertyRadioStationStartingAirDate
MPModelPropertyRadioStationEndingAirDate
MPModelChildRadioStationEvents
group %@
MPModelPropertyKeyGroupTitle
MPModelPropertyTVShowCreatorArtwork
v32@?0@"NSIndexPath"8Q16^B24
v32@?0@"NSNumber"8@"UIView"16^B24
%@://%@/%@.%@?%@=%lli
com.apple.MediaPlayer.MPModelLibraryAddToPlaylistChangeRequestOperation.operationQueue
v16@?0@"MPModelPlaybackPosition"8
Podcast:e%p
v16@?0@"MPModelPodcastKind"8
podcasts containing %@
episodeKind
podcast %@
MPModelPropertyPodcastTitle
MPModelPropertyPodcastFeedURL
MPModelPropertyPodcastShareURL
MPModelPropertyPodcastSupportsSubscription
MPModelRelationshipPodcastAuthor
MPModelPropertyPodcastArtwork
MPErrorDomain
@"MPArtworkCatalog"16@?0@"MPModelRecordLabel"8
v16@?0@"MPModelRecordLabel"8
VOL-
VOL+
buster
MPStoreArtworkDataSource.m
maxHEICRequestPercentage's value must fall in range [0, 1.0]
MPMediaQuerySection is a read-only object
 title=%@, range=%@, sectionIndexTitleIndex=%lu
MPTitle
MPRangeLocation
MPRangeLength
MPSectionIndex
failed to generate secure random bytes
bytes
source
lowest
highest
upper bound provided is less than lowestInclusive
lowestInclusive
highestInclusive
upper
MPArtworkResizeErrorDomain
Failed to resize nil image.
Input image has invalid size: {%f, %f}.
Input image has invalid scale: %f.
Failed to resize image with invalid scaled fitting size: {%f, %f}.
<%@: %p> (
  backgroundColor: %@ (%@)
  primaryTextColor: %@ (%@)
  secondaryTextColor: %@ (%@)
Light
Dark
backgroundColor
backgroundColorLight
primaryTextColor
primaryTextColorLight
secondaryTextColor
secondaryTextColorLight
WHAOptimisticStateVolumeDisabled
MPVolumeGroupSliderCoordinator.m
We don't have a master or individual slider.
MPSectionedIdentifierList+Debugging.m
debugDescription is counting on itemResult being an instance of %@
%@%@%@%@%@%@
 (%ld)
UNKNOWN
%@ %@ %@ %@ %@
- %@
%@ %@ %@ %@ %@
MPModelStoreBrowseContentItemPropertyItemType
MPModelStoreBrowseContentItemPropertyDetailedItemType
MPModelStoreBrowseContentItemPropertyArtistUploadedContentType
MPModelStoreBrowseContentItemRelationshipAlbum
MPModelStoreBrowseContentItemRelationshipArtist
MPModelStoreBrowseContentItemRelationshipCurator
MPModelStoreBrowseContentItemRelationshipMediaClip
MPModelStoreBrowseContentItemRelationshipMovie
MPModelStoreBrowseContentItemRelationshipPlaylist
MPModelStoreBrowseContentItemRelationshipRadioStation
MPModelStoreBrowseContentItemRelationshipSocialPerson
MPModelStoreBrowseContentItemRelationshipSong
MPModelStoreBrowseContentItemRelationshipTVEpisode
MPModelStoreBrowseContentItemRelationshipTVSeason
MPModelStoreBrowseContentItemRelationshipTVShow
MPModelStoreBrowseContentItemRelationshipTVShowCreator
MPModelStoreBrowseContentItemRelationshipRecordLabel
v16@?0@"MPModelStoreBrowseContentItem"8
meta.formerIds
attributes.offers.kind
attributes.name
attributes.durationInMillis
attributes.durationInMilliseconds
attributes.discNumber
attributes.trackNumber
attributes.contentRating
@24@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16
attributes.artwork
attributes.showComposer
attributes.copyright
attributes.workName
attributes.movementName
attributes.movementCount
attributes.movementNumber
attributes.releaseDate
attributes.isMasteredForItunes
attributes.audioTraits
relationships.albums.data.id.@firstObject
attributes.albumName
relationships.artists.data.id.@firstObject
attributes.artistName
v32@?0@"NSDictionary"8@"MPMediaKitEntityTranslatorContext"16@"NSMutableDictionary"24
videoKind
meta.vacToken
attributes.hasLyrics
attributes.hasTimedSyncedLyrics
attributes.trackCount
attributes.discCount
clean
attributes.isCompilation
attributes.isPreorder
attributes.editorialNotes.standard
attributes.editorialNotes.short
relationships.tracks
attributes.classicalUrl
attributes.lastModifiedDate
attributes.playlistType
attributes.isChart
attributes.url
attributes.description.standard
attributes.description.short
attributes.playParams.versionHash
attributes.isLive
attributes.stationProviderName
attributes.stationGlyph
attributes.streamingRadioSubType
attributes.airTime.start
attributes.airTime.end
attributes.requiresSubscription
attributes.title
attributes.startTime
attributes.endTime
attributes.heroArtwork
attributes.composerName
attributes.editorialNotes.name
attributes.handle
attributes.kind
attributes.editorialArtwork.subscriptionCover
attributes.editorialArtwork.brandLogo
attributes.episodeCount
attributes.editorialNotes.tagline
attributes.offers.0.durationInMilliseconds
attributes.offers.0.durationInMillis
durationInMilliseconds
attributes.offers
attributes.episodeNumber
attributes.contentRatingsBySystem
attributes.previews
attributes.isPrivate
attributes.isVerified
attributes.pendingFollowersCount
attributes.editorialArtwork.bannerUber
attributes.playParams.reporting
attributes.videoKind
<%@: %p ['%@', storeID=%lld]>
@"MPArtworkCatalog"16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVShow"8
v16@?0@"MPModelTVSeason"8
v16@?0@"MPModelTVEpisode"8
com.apple.%@.global.serial.queue
MPMediaLibrarySystemFilters.mm
Given library has no library identifier
searchString
properties
com.apple.mediaplayer.systemdataprovider
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL
GENIUS_PLAYLIST_OFFLINE_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_CELLULAR
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WIFI
GENIUS_FEATURE_NOT_AVAILABLE_TITLE
GENIUS_FEATURE_NOT_AVAILABLE_SUBTITLE
GENIUS_PICKER_NO_RESULTS_TITLE
GENIUS_PICKER_NO_RESULTS_MESSAGE
B8@?0
v44@?0q8q16i24q28^B36
https://%@/v1/catalog/%@/songs?ids=%@%@
 left=%@
 right=%@
 case=%@
 single=%@
 none
NSNumber *MPAVGetBatteryLevelFromRouteDescription(NSDictionary *__strong, MPAVBatteryLevelType)
MPAVBatteryLevel.m
battery level value is not a number
BTDetails_BatteryLevelLeft
BTDetails_BatteryLevelRight
BTDetails_BatteryLevelCase
BTDetails_BatteryLevelSingle
NSString *MPAVGetRouteDescriptionKey(MPAVBatteryLevelType)
unable to find route description key for battery level
NSNumber *MPAVGetBatteryLevelFromAVODDS(MRAVOutputDeviceRef, NSDictionary *__strong, MPAVBatteryLevelType)
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.operationQueue
B16@?0@8
v32@?0@8q16^B24
v16@?0@"MPAsyncBlockOperation"8
com.apple.mediaplaybackcore
com.apple.videos-preferences
com.apple.airplay
MusicLowBandwidthResolution
MusicHighBandwidthResolution
MusicDownloadResolution
MusicEQPresetName
MusicRepeatSetting
MusicShuffleSetting
MusicSoundCheckEnabledSetting
SpatialAudioPreference
PrefersSpatialDownloads
ShowLosslessAudio
DisableAudioAnalysis
DisableAssetCaching
DisableMiniSINF
DisablePeriodicRestore
DisableQHO
ForceMusicResolution
ForcedMusicResolution
ForceMusicStreaming
ForceLibrarySupplemental
IncludeContentItemDebugFields
ProgressiveDownloadAssetRatio
QHOMaximumSize
ShowDebugUI
SpeakerRouteEnabled
AssetURLExpirationDuration
PlaybackAuthorizationTokenHalfLifeDuration
ActivationDelay
ForwardBufferDuration
PrerollEnabled
MPCPlaybackPrivateListeningEnabled
PlaybackQuality
PlaybackQualityCellular
MusicAllowsCellularData
MusicAllowsHighQualityStreamingOnCellular
BufferedSurroundSwitch
BufferedLosslessSwitch
MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification
MPPlaybackUserDefaultsMusicEQPresetDidChangeNotification
MPPlaybackUserDefaultsMusicRepeatTypeDidChangeNotification
MPPlaybackUserDefaultsMusicShuffleTypeDidChangeNotification
MPPlaybackUserDefaultsPrivateListeningEnabledDidChangeNotification
MPPlaybackUserDefaultsSoundCheckEnabledDidChangeNotification
com.apple.MediaPlayer/MPPlaybackUserDefaults
v16@?0@"ICMutableUserIdentityProperties"8
BestQuality
Acoustic
BassBooster
BassReducer
Classical
Dance
Deep
Electronic
Flat
HipHop
Jazz
Latin
Loudness
Lounge
Piano
R & B
Rock
SmallSpeakers
SpokenWord
TrebleBooster
TrebleReducer
VocalBooster
LateNightMode
EQ_ACOUSTIC
EQ_BASS_BOOSTER
EQ_BASS_REDUCER
EQ_CLASSICAL
EQ_DANCE
EQ_DEEP
EQ_ELECTRONIC
EQ_FLAT
EQ_HIPHOP
EQ_JAZZ
EQ_LATIN
EQ_LOUDNESS
EQ_LOUNGE
EQ_PIANO
EQ_POP
EQ_RANDB
EQ_ROCK
EQ_SMALL_SPEAKERS
EQ_SPOKEN_WORD
EQ_TREBLE_BOOSTER
EQ_TREBLE_REDUCER
EQ_VOCAL_BOOSTER
EQ_LATE_NIGHT
com.apple.mobileipod-prefsChanged
com.apple.airplay.prefsChanged
com.apple.song
com.apple.radio-station
com.apple.audiobook
com.apple.podcast
com.apple.audio-podcast
com.apple.video-podcast
com.apple.show
com.apple.music-video
public-audio
public-movie
public.audiovisual-content
v16@?0@"<MPMusicPlayerControllerSystemServer>"8
music://show-now-playing
MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
MPCloudServiceStatusControllerFairPlaySubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerMatchStatusDidChangeNotification
MPCloudServiceStatusControllerPurchaseHistoryEnabledDidChangeNotification
MPCloudServiceStatusControllerShouldPlaybackRequireSubscriptionLeaseDidChangeNotification
MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidBeginNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidEndeNotification
MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerUserInfoKeyLeaseEndReasonType
_MPCloudServiceStatusControllerMatchStatus
_MPCloudServiceStatusControllerSubscriptionAvailability
com.apple.mediaplayer.MPCloudServiceStatusController.global.serial.queue
com.apple.MediaPlayer.MPCloudServiceStatusController.accessQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.calloutQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.cloudLibraryStatusAccessQueue
v24@?0@"ICMusicSubscriptionStatusMonitor"8@"ICMusicSubscriptionStatus"16
v16@?0@"MPCloudServiceStatusController"8
v28@?0@"NSError"8B16B20B24
filterPredicates
groupingType
filteringDisabled
entityOrder
staticEntityIdentifiers
staticEntityType
includeNonLibraryEntities
Title
Album
Artist
AlbumArtist
Composer
Playlist
PodcastTitle
SeriesName
SeasonName
AudioBookTitle
AlbumPersistentID
AlbumByArtist
(unknown: %i)
Physical
Sorted
Item
Collection
preview
size
MPExclusiveAccessToken.m
Exclusive access not for this owner %@ != %@
Exclusive access failed
v16@?0@"MPModelStoreAsset"8
%02d
:%02d
%@%@%@
%@%@
com.apple.MediaPlayer.MPModelVerifyLocalFileAssetIntegrityRequest.operationQueue
<%@: %p> %@, %@
 with sort direction=%@
filter predicates must be an NSSet
approveAll
approve
cancel
decline
followRequest
followRequests
actionType
MPStoreItemImportTrackData.m
we should have a complete set of metadata here.
v32@?0@"NSDictionary"8Q16^B24
AssetLoadDuration
AssetLoadError
SecureKeyBlockingLoadCount
SecureKeyLoadCount
SecureKeyMaxLoadDuration
SecureKeyError
TracklistLoadRequired
TracklistLoadError
PlaybackEndError
EndReason
StartupState
NetworkInterfaceChangeCount
NetworkInterfaceStart
SiriSessionIdentifier
MPModelForYouRecommendationItemPropertyItemType
MPModelForYouRecommendationItemPropertyURL
MPModelForYouRecommendationItemPropertyReason
MPModelForYouRecommendationItemPropertyUtterance
MPModelForYouRecommendationItemRelationshipAlbum
MPModelForYouRecommendationItemRelationshipPlaylist
MPModelForYouRecommendationItemRelationshipRadioStation
MPModelForYouRecommendationItemPropertyBackedByStoreItemMetadata
MPModelForYouRecommendationItemPropertyParentGroup
MPModelForYouRecommendationItemPropertySubgroupIndex
MPModelForYouRecommendationItemRelationshipSubgroup
com.apple.amp.mediaplayer
Default
Artwork
Assistant
Assistant_Oversize
CloudController
Download
Download_Oversize
HomeSharing
InternalSettings
InternalSettings_Oversize
Library
Library_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
RemoteControl
RemoteControl_Oversize
Routing
ServerObjects
ServerObjects_Oversize
SDKLibrary
SDKLibrary_Oversize
SDKPlayback
Volume
Preferences
MPMediaAPICollectionItemMetadataRequestErrorDomain
&omit[resource]=autos&include[songs]=artists,albums&meta=vacToken,api&format[resources]=map
?omit[resource]=autos&include[songs]=artists,albums&meta=vacToken,api&include[playlists]=tracks&format[resources]=map&extend[playlists]=versionHash&limit[tracks]=300
?omit[resource]=autos&include[songs]=artists,albums&meta=vacToken,api&include[albums]=tracks&format[resources]=map&extend[albums]=versionHash&limit[tracks]=300
MPRTCReportingControllerErrorDomain
UNDETERMINED
FILE
AssetType
AUDIO
VIDEO
MediaAVType
QueueUniqueID
QueueSource
app.%@.unknown
com.apple.MediaPlayer.MPModelLibraryPlaylistEditChangeRequestOperation.accessQueue
v224@?0{PropertyCache=^^?{unordered_map<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::allocator<std::pair<mlcore::ModelProperty<mediaplatform::Data> *const, mediaplatform::Data>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<std::string> *, std::string, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::allocator<std::pair<mlcore::ModelProperty<std::string> *const, std::string>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::hash<mlcore::ModelProperty<std::string> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::hash<mlcore::ModelProperty<std::string> *>, std::equal_to<mlcore::ModelProperty<std::string> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<std::string> *, std::__hash_value_type<mlcore::ModelProperty<std::string> *, std::string>, std::equal_to<mlcore::ModelProperty<std::string> *>, std::hash<mlcore::ModelProperty<std::string> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<double> *, double, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, std::allocator<std::pair<mlcore::ModelProperty<double> *const, double>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::equal_to<mlcore::ModelProperty<double> *>, std::hash<mlcore::ModelProperty<double> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<double> *, double>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::hash<mlcore::ModelProperty<double> *>, std::equal_to<mlcore::ModelProperty<double> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::equal_to<mlcore::ModelProperty<double> *>, std::hash<mlcore::ModelProperty<double> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<int> *, int, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, std::allocator<std::pair<mlcore::ModelProperty<int> *const, int>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::equal_to<mlcore::ModelProperty<int> *>, std::hash<mlcore::ModelProperty<int> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<int> *, int>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::hash<mlcore::ModelProperty<int> *>, std::equal_to<mlcore::ModelProperty<int> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::equal_to<mlcore::ModelProperty<int> *>, std::hash<mlcore::ModelProperty<int> *>, true>>=f}}}{unordered_map<mlcore::ModelProperty<long long> *, long long, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, std::allocator<std::pair<mlcore::ModelProperty<long long> *const, long long>>>={__hash_table<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, true>, std::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::equal_to<mlcore::ModelProperty<long long> *>, std::hash<mlcore::ModelProperty<long long> *>, true>, std::allocator<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::hash<mlcore::ModelProperty<long long> *>, std::equal_to<mlcore::ModelProperty<long long> *>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::equal_to<mlcore::ModelProperty<long long> *>, std::hash<mlcore::ModelProperty<long long> *>, true>>=f}}}^^?}8
v24@?0Q8@"NSError"16
MPModelLibraryPlaylistEditChangeRequestOperationErrorDomain
MPModelLibraryTransientStateControllerDidChangeNotification
com.apple.MediaPlayer.MPModelLibraryTransientStateController.accessQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.notificationQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.operationQueue
v32@?0@"_MPModelLibraryRegisteredTransientState"8Q16^B24
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
com.apple.MediaPlayer.MPNowPlayingInfoCenter/serviceQueue
MPNowPlayingInfoCenter.m
Cannot have two MPNowPlayingInfoCenters for the same playerPath: %@
com.apple.MediaPlayer.MPNowPlayingInfoCenter/accessQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/calloutQueue
com.apple.MediaPlayer.MPNowPlayingInfoCenter/utilityQueue
-init is not supported, use +defaultCenter
MediaRemote
@"MPArtworkCatalog"8@?0
MPNowPlayingInfoCenter was invalidated
CIIR: Mismatch in contentItemIdentifiers=%ld, loadedContentItemsRange=%ld, previousContentItemIDCount=%ld, dataSourceContentItemIDs=%ld, replacementRange: [(_loaded) %@ : (loaded) %@] => (replacement) %@
v24@?0@"NSArray"8q16
MPNowPlayingPlaybackQueueDataSource produced content item does not match requested identifier: requestedID=%@ contentItemID=%@
MPNowPlayingPlaybackQueueDataSource getTransportablePlaybackSessionRepresentationWithCompletion completion was released without being called.
v24@?0@"MPNowPlayingInfoTransportableSessionResponse"8@"NSError"16
<missing queue identifier>
transportablePlaybackSession
v24@?0@"NSData"8@"NSError"16
IPQI: Mismatch in contentItemIdentifiers (%ld) and loadedContentItemsRange (%ld)
v32@?0@"NSString"8@"MPNowPlayingContentItem"16^B24
v16@?0^^v8
v24@?0^v8@?<v@?^{__CFError=}>16
v32@?0^v8^{__CFError=}16@?<v@?^{__CFError=}>24
v24@?0^v8@?<v@?^v^{__CFError=}>16
^v16@?0^v8
^v16@?0^{__CFString=}8
^v24@?0q8^v16
v32@?0^v8^v16@?<v@?^{__CFError=}>24
image/jpeg
v48@?0@"MPNowPlayingContentItem"8@"NSData"16{CGSize=dd}24@"NSError"40
v24@?0@"MPNowPlayingInfoLyricsItem"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
_playerPath
contentItemIDs
loadedRange
requestedRange
cachedContentItems
mutatedContentItems
mutatedPlaybackQueueRequests
nowPlayingContentItem
nowPlayingInfo
queuedNowPlayingInfo
_MPNowPlayingCollectionInfoKeyTitle
_MPNowPlayingCollectionInfoKeyIdentifiers
_MPNowPlayingCollectionInfoKeyCollectionType
_MPNowPlayingCollectionInfoCollectionTypePlaylist
_MPNowPlayingCollectionInfoCollectionTypeAlbum
_MPNowPlayingCollectionInfoCollectionTypeRadio
_MPNowPlayingInfoCenterPlaybackQueueDidChangeNotification
_MPNowPlayingContentItemsDidChangeNotification
v@:@
v@:B
v@:c
v@:i
v@:s
v@:l
v@:q
v@:C
v@:I
v@:S
v@:L
v@:Q
v@:f
v@:d
v32@?0^{objc_property=}8:16:24
<%@: %p identifiers=%@ properties=%@>
identifiers
original
oids
MPModelObject.m
classesForSecureCoding cannot contain NSObject
MPModelObject mergeWithObject: called with a different object class: %@ %@
Attempt to retrieve enforced uninitialized property: %@
Attempt to set enforced property after initialization: %@
__%@_KEY
v24@?0^{objc_property=}8^B16
[MPModelKind class]
v16@?0@"MPModelKind"8
<%@: %@>
modelClass
Must have produced a model kind!
_MPNowPlayingInfoPropertyArtworkData
_MPNowPlayingInfoPropertyArtworkMIMEType
MPNowPlayingInfoPropertyChapterCount
MPNowPlayingInfoPropertyAvailableLanguageOptions
MPNowPlayingInfoPropertyCurrentLanguageOption
MPNowPlayingInfoCollectionIdentifier
_MPNowPlayingInfoPropertyCollectionInfo
MPNowPlayingInfoPropertyChapterNumber
MPNowPlayingInfoPropertyElapsedPlaybackTime
_MPNowPlayingInfoPropertyIsSharable
_MPNowPlayingInfoPropertyIsAdvertisement
MPNowPlayingInfoPropertyIsLiveStream
_MPNowPlayingInfoPropertyIsBanned
_MPNowPlayingInfoPropertyIsLiked
_MPNowPlayingInfoPropertyIsMusicApp
_MPNowPlayingInfoPropertyIsVideosApp
MPNowPlayingInfoPropertyPlaybackQueueCount
MPNowPlayingInfoPropertyPlaybackQueueIndex
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyAppMetrics
_MPNowPlayingInfoPropertyIsSteerable
_MPNowPlayingInfoPropertyProhibitsSkip
_MPNowPlayingInfoPropertyRadioStationIdentifier
_MPNowPlayingInfoPropertyRadioStationHash
_MPNowPlayingInfoPropertyRadioStationName
_MPNowPlayingInfoPropertyRadioStationStringIdentifier
_MPNowPlayingInfoPropertyiTunesStoreIdentifier
_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier
_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier
_MPNowPlayingInfoPropertyRepeatMode
_MPNowPlayingInfoPropertyShuffleMode
_MPNowPlayingInfoPropertyPurchaseInfoData
_MPNowPlayingInfoPropertyIsLoading
_MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalUserProfileIdentifier
MPNowPlayingInfoPropertyServiceIdentifier
MPNowPlayingInfoPropertyPlaybackProgress
MPNowPlayingInfoPropertyMediaType
MPNowPlayingInfoPropertyAssetURL
MPNowPlayingInfoPropertyCurrentPlaybackDate
_MPNowPlayingInfoPropertyArtworkIdentifier
_MPNowPlayingInfoPropertySupportsIsBanned
_MPNowPlayingInfoPropertySupportsIsLiked
_MPNowPlayingInfoPropertySupportsFastForward15Seconds
_MPNowPlayingInfoPropertySupportsRewind15Seconds
_MPNowPlayingInfoPropertySupportsWishlisting
Cancel
Destructive
Unknown/%ld
<%@: %p title="%@" type=%@ event=%@>
<%@: %p title="%@" message="%@" actions=%@>
@"MPRemoteCommandHandlerDialogAction"16@?0@"MRSendCommandHandlerDialogAction"8
<%@ %p subscriptionStatusObject: %@>
HomeSharingML3DataProviderCredentialsDidChangeNotification
libraryDataProvider
SharingDisabled
com.apple.mobileipod.containerfill
com.apple.MediaPlayer.MPHomeSharingML3DataProvider/serialQueue
Library.itdb
daap.songbookmark
daap.songuserrating
daap.songuserplaycount
daap.songuserskipcount
com.apple.itunes.liked-state
home-sharing
Tokens
Unable to determine groupID
@"MPArtworkCatalog"16@?0@"MPModelCurator"8
live
elapsed
state
itemID
artworkID
count
inserted
removed
http
&daap-no-disconnect=1
HomeSharingURLProtocolErrorDomain
&hsgid=%@
&hs-mobile-device-client=1
text/plain
Client-Daap-Validation
Client-Daap-Request-Id
com.apple.MPMediaLibraryArtworkRequest.accessQueue
<%@:%p libraryID=%llu entityType=%ld artworkType=%ld
 retrievalTime=%f
v32@?0@"NSString"8@"NSString"16q24
MPMediaLibraryArtworkErrorDomain
Unknown artwork source type.
Unknown artwork source type for artwork info request.
collection
screenshot
chapter
artistHero
cloud
sync
purchase
store
Unknown-PersonID
PayloadData
PersonID
@"MSVSQLDatabase"8@?0
com.apple.MediaPlayer/ServerObjectDatabases/%@-ServerObjectDatabase.sqlpkg
_MP_CLEAR_SOD
ServerObjectDatabase.sqlpkg
Database
MPServerObjectDatabase.m
Cannot have a source without a payload.
PropertySet does not contain mapping for %@
DELETE FROM playback_authorization_token WHERE person_id=@personID
@personID
SELECT child_identifier FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey ORDER BY suborder
@parentIdentifier
@childKey
versionHash != nil
SELECT child_identifier, token FROM object_relationships LEFT OUTER JOIN playback_authorization_token ON child_identifier = identifier WHERE parent_identifier = @parentIdentifier AND object_relationships.person_id = @personID AND child_key = @childKey AND parent_version_hash = @parentVersionHash ORDER BY suborder
@parentVersionHash
vacToken
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND url_expiration_date > @now
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND LENGTH(mini_sinf) > 1 AND url_expiration_date > @now
MediaPlayer
Glide
SELECT half_life_expiration_date FROM playback_authorization_token WHERE identifier=@identifier
@identifier
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE mini_sinf IS NULL AND sinfs is NULL AND hashed_person_id = @hashedPersonID AND cast(identifier AS INT) != 0
@hashedPersonID
SELECT payload FROM objects WHERE identifier = @identifier AND person_id = @personID AND source = @source LIMIT 1
@source
com.apple.MediaPlayer.MPServerObjectDatabase/accessQueue
SOD: Unable to create server objects database in-memory
SOD: Unable to create database schema on disk or in-memory.
CREATE TABLE IF NOT EXISTS objects (identifier TEXT NOT NULL, person_id TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, expiration_date INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, payload TEXT, PRIMARY KEY (identifier, person_id)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS assets (identifier TEXT NOT NULL, hashed_person_id TEXT NOT NULL, flavor TEXT NOT NULL, url TEXT NOT NULL, url_expiration_date INTEGER NOT NULL DEFAULT 0, mini_sinf BLOB, sinfs BLOB, PRIMARY KEY (identifier, hashed_person_id, flavor)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS object_relationships (parent_identifier TEXT NOT NULL, child_identifier TEXT NOT_NULL, person_id TEXT NOT NULL, suborder INTEGER NOT NULL DEFAULT 0, child_key TEXT NOT NULL, parent_version_hash TEXT, PRIMARY KEY (parent_identifier, child_identifier, person_id), UNIQUE (parent_identifier, child_identifier, person_id, child_key)) WITHOUT ROWID
CREATE TABLE IF NOT EXISTS playback_authorization_token (identifier TEXT NOT NULL, person_id TEXT NOT NULL, token TEXT NOT NULL, source INTEGER NOT NULL DEFAULT 0, type TEXT NOT NULL, half_life_expiration_date INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (identifier)) WITHOUT ROWID
SELECT source, payload FROM objects WHERE identifier = @identifier AND person_id = @personID LIMIT 1
SELECT token FROM playback_authorization_token WHERE identifier = @identifier
MPServerObjectDatabaseImport-
SELECT payload FROM objects WHERE source = @source AND identifier = @identifier AND person_id = @personID LIMIT 1
INSERT OR REPLACE INTO objects (identifier, person_id, source, expiration_date, type, payload) VALUES (@identifier, @personID, @source, @expirationDate, @type, @payload)
INSERT OR REPLACE INTO assets (identifier, hashed_person_id, flavor, url, url_expiration_date) VALUES (@identifier, @hashedPersonID, @flavor, @url, @urlExpirationDate)
INSERT OR REPLACE INTO playback_authorization_token (identifier, person_id, token, type, source, half_life_expiration_date) VALUES (@identifier, @personID, @token, @type, @source, @halfLifeExpirationDate)
INSERT OR REPLACE INTO object_relationships (parent_identifier, child_identifier, person_id, child_key, suborder, parent_version_hash) VALUES (@parentIdentifier, @childIdentifier, @personID, @childKey, @suborder, @parentVersionHash)
DELETE FROM object_relationships WHERE parent_identifier = @parentIdentifier AND person_id = @personID AND child_key = @childKey
UPDATE assets SET mini_sinf = @miniSINF WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
UPDATE assets SET sinfs = @sinfs WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
UPDATE assets SET url = @url, url_expiration_date = @urlExpirationDate WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
Cannot import an object without a personID
_MPSOD_mergeCount
@type
@expirationDate
@payload
Cannot import an asset without a personID
@flavor
@url
@urlExpirationDate
Cannot import an asset without personID
Cannot import an asset without identifier
Cannot import an asset without sinfData
Cannot import sinf with invalid type
@token
@halfLifeExpirationDate
childKey
Cannot relate without a personID
@childIdentifier
@suborder
Cannot remove relationships without a personID
@miniSINF
@sinfs
SELECT identifier, hashed_person_id, flavor, url, mini_sinf, sinfs FROM assets WHERE identifier = @identifier AND hashed_person_id = @hashedPersonID AND flavor = @flavor
@now
UNDEF
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
<%@: %p hashedPersonID=%@ identifier=%@ flavor=%@ miniSinf=%lld bytes sinf2=%lld bytes url=%@
databaseID
com.apple.mobileipod.home-sharing-rental-tracker
Media/HomeSharingRentals.plist
MPHomeSharingRentalTracker.m
attempted to add rental with item ID: %llu, databaseID: %@
attempted to remove rental with no item ID
SSRentalCheckinRequest
RECENTLY_PLAYED_VIEW_TITLE
recently-played
stringForDisplay
reason
href
isGroupRecommendation
Utterance
traits
expand
showAllTVShows
keybag
family
SSAuthorizationRequest
MPRemoteCommandCenterCommandsDidChangeNotification
MPRemoteCommandCenterCommandHandlersRegisteredNotification
LaunchCommandBuilder
@"NSArray"16@?0@"MPRemoteCommand"8
MPRemoteCommandCenter.m
Cannot have two MPRemoteCommandCenters for the same playerPath: %@
com.apple.MediaPlayer.MPRemoteCommandCenter
MPRemoteCommandCenter:
command
v16@?0@?<v@?>8
q24@?0@"MPRemoteCommand"8@"MPRemoteCommand"16
Attempted to create remote command object of unknown class %@
B32@?0@"MPRemoteCommand"8Q16^B24
activeCommands
canBeNowPlayingApplication
pendingEventsCount
@16@?0@"MPRemoteCommandStatus"8
v28@?0I8@"NSDictionary"12@?<v@?@"NSArray">20
v16@?0@"HSResponse"8
SSRentalCheckoutRequest
MPModelPropertyHomeSharingAssetAvailable
MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL
MPModelPropertyHomeSharingAssetURL
MPStoreItemLibraryImportMetadataKeyAlbumLikedState
MPStoreItemLibraryImportMetadataKeyTrackLikedState
MPAVTelevisionRoute.m
television
MPStoreLibraryMappingRequestOperation.mm
v32@?0{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}8@"NSError"24
LOADING_AUDIO_LABEL
Song
PlaylistEntry
TVEpisode
TVSeason
MediaClip
PodcastEpisode
RadioStation
SocialPerson
RadioStationEvent
RecordLabel
Group
UnknownGenericObjectType-%ld
GenericObject:k
%@-%p
v16@?0@"MPModelGenericObjectKind"8
generic %@
any generic (%@)
; or 
relationshipKinds
MPModelRelationshipGenericAlbum
MPModelRelationshipGenericArtist
MPModelRelationshipGenericPlaylist
MPModelRelationshipGenericPlaylistEntry
MPModelRelationshipGenericSong
MPModelRelationshipGenericTVEpisode
MPModelRelationshipGenericTVSeason
MPModelRelationshipGenericTVShow
MPModelRelationshipGenericMovie
MPModelRelationshipGenericMediaClip
MPModelRelationshipGenericPodcast
MPModelRelationshipGenericPodcastEpisode
MPModelRelationshipGenericRadioStation
MPModelRelationshipGenericRadioStationEvent
MPModelRelationshipGenericComposer
MPModelRelationshipGenericGenre
MPModelRelationshipGenericCurator
MPModelRelationshipGenericSocialPerson
MPModelRelationshipGenericRecordLabel
MPModelRelationshipGenericGroup
MPModelGenericObject.m
Cannot provide relationship key for unknown generic object type.
Unsupported generic object type: %ld
MPModelObject mergeWithObject: called with a different generic relationship type: %@ %@
Info
plist
audio
index
indexes
; %lu inserted %@
; %lu deleted %@
; %lu updated %@
; %lu moved %@
; %lu updated moves %@
; none [UNNECESSARY]
; inserted %@ %@
; deleted %@ %@
; updated %@ %@
; %@ moves %@
; %@ updated moves %@
; inserted items %@
; deleted items %@
; updated items %@
; item moves %@
; updated item moves %@
MPChangeDetails.m
Attempt to mutate immutable change details
v24@?0@"NSIndexPath"8@"NSIndexPath"16
v32@?0@"NSNumber"8@"NSNumber"16^B24
v28@?0@"NSIndexPath"8@"NSIndexPath"16B24
v32@?0@"NSIndexPath"8@"NSIndexPath"16^B24
-isValidForPreviousCount:finalCount:reason: can only be used with a flat collection change details
[INVALID CHANGE DETAILS] deletedSections.lastIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] insertedSections.lastIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] move.fromIndex out of bounds: %ld/%ld
[INVALID CHANGE DETAILS] move.toIndex out of bounds: %ld/%ld
MPChangeDetailOperation * _Nullable MPChangeDetailOperationGenerateEx(NSInteger, NSInteger, size_t * _Nonnull, BOOL * _Nonnull, __strong MPChangeDetailOperationIsEqualBlock _Nonnull)
operationCount
isEqualBlock
Not enough operationCapacity
<MPChangeDetailOperation type=none>
<MPChangeDetailOperation type=delete previousIndex=%d>
<MPChangeDetailOperation type=insert finalIndex=%d>
<MPChangeDetailOperation type=replace previousIndex=%d finalIndex=%d>
<MPChangeDetailOperations {
void _MPChangeDetailsSafeAddOperation(NSInteger, NSInteger, MPChangeDetailOperation *, size_t, MPChangeDetailOperationType, uint32_t, uint32_t)
Invalid operation type MPChangeDetailOperationTypeDelete
Invalid operation type MPChangeDetailOperationTypeInsert
Invalid operation type MPChangeDetailOperationTypeReplace
void _MPChangeDetailOperationNodeRelease(MPChangeDetailOperationNode *)
Overrelease of Operation
MPChangeDetailOperation *_MPChangeDetailOperationsFromOperationList(MPChangeDetailOperation *, size_t, MPChangeDetailOperationNode *, size_t *)
existingOperations
startNode
<unknown-store-id>
MediaRemoteLanguageOption/%@/%@ "%@"
NULL
MPCloudControllerErrorDomain
MPCloudControllerEnableCloudLibraryOptionStartInitialImport
MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary
MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification
MPCloudControllerCanShowCloudTracksDidChangeNotification
MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
MPCloudControllerIsCellularDataRestrictedDidChangeNotification
MPCloudControllerIsCloudEnabledDidChangeNotification
MPCloudControllerCloudLibraryFailureDidChangeNotification
MPCloudControllerIsGeniusEnabledDidChangeNotification
MPCloudControllerIsUpdateInProgressDidChangeNotification
MPCloudControllerCloudAddToPlaylistBehaviorDidChangeNotification
com.apple.mediaplayer.MPCloudController.global.serial.queue
com.apple.videos
com.apple.itunescloudd
com.apple.iBooks
com.apple.springboard
com.apple.tv
com.apple.Carousel
com.apple.NanoMusic
com.apple.SessionTrackerApp
com.apple.podcasts
com.apple.NanoBooks
MPCloudController.m
Attempting to access a method only available for multi user device
com.apple.mediaplayer.MPCloudController.serial.queue
com.apple.mediaplayer.MPCloudController.cloudClient.callback.queue
v16@?0@"MPCloudController"8
v24@?0@"ICUserIdentityProperties"8@"NSError"16
EnhancedAudioAvailable
daap.incrementplaycount
com.apple.itunes.cloud-artwork-token
v32@?0@"NSString"8@16^B24
daap.incrementskipcount
dmap.itemhidden
Cannot set cloud properties for groupingType=%ld properties=%@
One-off loading not supported for artworkType=%ld, sourceType=%ld
Artwork info loading failed. No artwork URL found in the artwork info dictionary for item with persistent ID %lld
Artwork info loading failed. Got no artwork info dictionary for item with persistent ID %lld
v16@?0@"NSDictionary"8
Artwork info loading not supported for artworkType=%ld, sourceType=%ld
v32@?0@"NSString"8@"MPCloudController"16^B24
MLCloudAccountAddToPlaylistBehavior
Invalid update reason: %ld
-[MPCloudController fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:]
completion
v12@?0B8
v16@?0B8B12
MPQueuePlayerCurrentItemObservationContext
MPQueuePlayerExternalPlaybackActiveObservationContext
MPQueuePlayerRateObservationContext
MPQueuePlayerStatusObservationContext
MPQueuePlayerInsufficientExternalProtectionContext
com.apple.MediaPlayer.MPQueuePlayer.accessQueue
rawRate
AVPlayerStatusUnknown
AVPlayerStatusFailed
AVPlayerStatusReadyToPlay
com.apple.MediaPlayer.MPQueuePlayer.periodicTimeObserverSerialQueue
v32@?0{?=qiIq}8
curator
MPModelPropertyCuratorShortName
MPModelPropertyCuratorEditorNotes
MPModelPropertyCuratorShortEditorNotes
MPModelPropertyCuratorKind
MPModelPropertyCuratorSubKind
MPModelPropertyCuratorEditorialArtwork
MPModelPropertyCuratorBrandLogoArtwork
MPModelPropertyCuratorHandle
com.apple.MediaPlayer.MPStoreModelRequestOperation.accessSerialQueue
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
errors
Failed to get response body objects for each request in the compound URL load group.
v16@?0@"ICMusicKitRequestContext"8
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequest.sharedQueue
v32@?0@8@"NSIndexPath"16^B24
v16@?0@"MPModelPlaylistEntry"8
Playlist:v%lu:o%lu:pe%p
v16@?0@"MPModelPlaylistKind"8
smart
genius
subscribed
administered
personal mix
 or folders
previously played 
mutable 
non-empty 
 containing %@
playlistEntryKind
playlist %@
MPModelPropertyPlaylistName
MPModelPropertyPlaylistDescriptionText
MPModelRelationshipPlaylistCurator
MPModelPropertyPlaylistHasCleanContent
MPModelPropertyPlaylistHasExplicitContent
MPModelPropertyPlaylistCuratorPlaylist
MPModelPropertyPlaylistIsOwner
MPModelPropertyPlaylistPublicPlaylist
MPModelPropertyPlaylistVisiblePlaylist
MPModelPropertyPlaylistSubscribed
MPModelPropertyPlaylistUserEditableComponents
MPModelPropertyPlaylistType
MPModelPropertyPlaylistTrackCount
MPModelPropertyPlaylistEditorNotes
MPModelPropertyPlaylistShortEditorNotes
MPModelPropertyPlaylistShareURL
MPModelPropertyPlaylistShareShortURL
MPModelPropertyPlaylistReleaseDateComponents
MPModelPropertyPlaylistLastModifiedDateComponents
MPModelPropertyPlaylistArtwork
MPModelPropertyPlaylistEditorialArtwork
MPModelPropertyPlaylistLibraryAdded
MPModelPropertyPlaylistLibraryAddedDate
MPModelPropertyPlaylistTracksTiledArtwork
MPModelPropertyPlaylistKeepLocalEnableState
MPModelPropertyPlaylistKeepLocalManagedStatus
MPModelPropertyPlaylistLastDevicePlaybackDate
MPModelPropertyPlaylistCloudVersionHash
MPModelPropertyPlaylistVersionHash
MPModelPropertyPlaylistDownloadedDate
MPModelPropertyPlaylistTraits
MPModelChildPlaylistEntries
MPModelPlaylist
com.apple.MPStoreSocialRequestOperation.accessQueue
Content-Type
success
application/x-www-form-urlencoded
application/json; charset=utf-8
DELETE
MPNetworkPlayabilityMonitorNetworkTypeDidChangeNotification
MPNetworkPlayabilityMonitorEffectiveNetworkTypeForPlaybackDidChangeNotification
com.apple.MediaPlayer.MPNetworkPlayabilityMonitor
v24@?0@"NSArray"8@"NSError"16
com.apple.mediaplayer.radio.private
com.apple.MediaPlayer.MPRadioControllerServer
com.apple.MediaPlayer/MPRequestResponseController
com.apple.MediaPlayer/MPRequestResponseController.calloutQueue
MPRequestResponseController
MPRequestResponseController.m
Request must be subclass of MPRequest.
request
Response must be subclass of MPResponse.
Mismatched begin/endAutomaticResponseLoading.
MPRequestResponseController delegate did not call block passed to defersResponseReplacement.
v16@?0q8
automaticLoad
observers
needsReload
requestID
delegate
pendingResponse
lastError
retryInterval
Must get a response or an error
v24@?0@"MPResponse"8@"NSError"16
MPMediaPlaylist
v24@?0@"MPMediaItem"8^B16
MPAVOutputDeviceRoute.m
outputDevices
MRAVOutputDevice
AudioAccessory
B16@?0^v8
LOCAL
ampMusicAPIDomains
listenNow
carPlayFCKindWhitelist
/v1/editorial
browseTabGroupingName
radioTabGroupingName
platform
art[editorial-elements:url]
/v1/me/recommendations
timezone
extend
plainEditorialNotes
with
friendsMix
social
voice
displayFilter[kind]
action
refresh
extend[albums]
extend[playlists]
/v1/me/recent/played
/v1/me/recent/radio-stations
utterance
artistNameObject
Duration
Error
<%@: %p> (
    [%ld] %@ : %@,
v24@?0q8q16
v24@?0Q8^B16
MPQueueFeederIdentifierRegistry.m
Index not found for itemIdentifier: %@
v32@?0@"MPIdentifierSet"8Q16^B24
@"NSDictionary"16@?0^{__CFDictionary=}8
@16@?0^{__CFArray=}8
@16@?0@"NSArray"8
@"NSMutableArray"16@?0^{__CFArray=}8
^{__CFArray=}16@?0@"NSArray"8
@"MPNowPlayingInfoAudioFormat"16@?0@"MRContentItemMetadataAudioFormat"8
@"MRContentItemMetadataAudioFormat"16@?0^v8
v24@?0^v8@"MRContentItemMetadataAudioFormat"16
@"MRContentItemMetadataAudioFormat"16@?0@"MPNowPlayingInfoAudioFormat"8
@"MPNowPlayingInfoAudioRoute"16@?0@"MRContentItemMetadataAudioRoute"8
@"MRContentItemMetadataAudioRoute"16@?0^v8
v24@?0^v8@"MRContentItemMetadataAudioRoute"16
@"NSArray"16@?0^v8
v24@?0^v8@"NSArray"16
prid
clid
ulid
claid
apid
aarpid
arpid
gpid
cpid
peid
ppid
pclid
colLibAdded
libAdded
hsLibLy
klEnable
klStatus
nonPurge
procType
endpt
rembok
lrcsGzpData
purID
shComp
endT
load
hsStLy
hsTSL
cntrUID
libEligible
phold
rdwn
subReq
sfid
urlART
tmpART
lokART
supART
podURL
podSupSub
podShURL
podEpStrURL
podEpShURL
raAttrLbl
raTy
raSty
raPUL
raBID
raPrID
aPly
shLis
eConSt
arUp
noJumpTo
acid
lisHist
_MPContentItemDidChangeUserInfoKeyDeltaRequest
com.apple.MediaPlayer.MPStoreAssetInfoPlaybackCache.accessQueue
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
Genre:a%p
v16@?0@"MPModelGenreKind"8
genres with %@
genre %@
MPModelPropertyGenreName
MPModelPropertyGenreArtwork
MPModelPropertyGenreLibraryAddedDate
MPMusicAPIErrorDomain
MPStoreModelRequestTimeoutInterval
MPStoreModelRequestClientIdentifier
MPStoreModelRequestClientVersion
MPStoreModelRequestClientPlatformIdentifier
MPStoreModelRequestAuthenticationOptions
MPModelPropertyPlaybackPositionBookmarkTime
MPModelPropertyPlaybackPositionShouldRememberBookmarkTime
MPModelPropertyPlaybackPositionHasBeenPlayed
MPModelPropertyPlaybackPositionStartTime
MPModelPropertyPlaybackPositionStopTime
MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier
MPModelPropertyPlaybackPositionUserPlayCount
sdVideo
sd480pVideo
720pHdVideo
1080pHdVideo
hlsUrl
<%@: %p, playbackContext=%@>
recoId
moduleType
PERSONALIZED_MIX
FRIENDS_LISTENING
RECOMMEND_FRIENDS
RECENTLY_PLAYED
TODAYS_PLAYLISTS
HEAVY_ROTATION
ALBUM_GROUPS
ARTIST_PLAYLISTS
NEW_RELEASES
ALBUM_RECO
FOR_YOU_PERSONAL_MIXES_TITLE
refreshUrl
com.apple.mediaplayer.MPSectionedIdentifierList/accessQueue
arne
positionKey
v32@?0@"MSVPair"8@"_MPSectionedIdentifierListCloneIndexEntry"16^B24
@"_MPSectionedIdentifierListCloneIndexEntry"24@?0@"NSString"8@"NSString"16
v16@?0@"<MPExclusiveAccessToken>"8
MPSectionedIdentifierList.m
Could not find head entry for section identifier: %@
@16@?0@"<MPExclusiveAccessToken>"8
Could not find item entry for identifier: %@
Could not head entry for section identifier: %@
Could not find tail entry for section identifier: %@
Could not find last entry (tailEntry.previous) for section identifier: %@
entryToMove cannot be nil
entryToMoveLatestUserClone cannot be nil
Could not find tail item entry for section identifier: %@
Attempted to begin transaction for section with active transaction: %@
Attempt to end transaction for section without active transaction: %@
Unsupported position type
No item exists at %@:%@
v32@?0@"NSString"8@"MPSectionedIdentifierListHeadEntry"16^B24
No tail exists for %@
B16@?0@"<MPExclusiveAccessToken>"8
Did not find item %@ to insert after.
Did not find item %@ to move after.
v28@?0q8q16B24
v32@?0{_NSRange=QQ}8^B24
<%@: %p> 
Item: %@ - %@
Head: %@
Tail: %@
SupportsSharedQueue
MPMediaControlsDismissalReasonUnknown
MPMediaControlsDismissalReasonUserCancelled
B24@?0@"NSIndexPath"8@"NSIndexPath"16
MPNetworkObserverIsUsingNetworkDidChangeNotification
MPNetworkObserverIsMusicCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsVideoCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsMusicCellularDownloadingAllowedDidChangeNotification
AllowsCellularDataDownloads
MPNetworkObserverInitException
-init is not supported, use +sharedNetworkObserver
com.apple.MediaPlayer.MPNetworkObserver
v12@?0i8
CellularDataMode
-[MPNetworkObserver setMusicCellularDownloadingAllowed:]
AllowAutoDownloadOnCellular
com.apple.itunesstored
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
com.apple.Music-AllowsCellularDataDownloads
com.apple.videos-preferences-changed
countryCode
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"MPIdentifierSet<MPMutableIdentifierSet>"24
@24@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16
assets.@max.duration
@count.children
contentRatingsBySystem.riaa.value
offers.type
v32@?0@"NSDictionary"8@"MPStorePlatformEntityTranslatorContext"16@"NSMutableDictionary"24
composer.name
@max.children.trackNumber
children.contentRatingsBySystem.riaa.value
@min.self
@max.self
children.offers.type
itunesNotes.standard
itunesNotes.short
classicalUrl
removeFollower
contentType
v16@?0@"MPModelPlaylist"8
v16@?0@"MPModelForYouRecommendationItem"8
com.apple.MediaPlayer.MPAVEndpointRoutingDataSource/serialQueue
MPAVEndpointRoutingDataSource.m
ColorSyncProfileCreateWithName
/System/Library/PrivateFrameworks/ColorSync.framework/ColorSync
kColorSyncSRGBProfile
ColorSyncProfileCopyData
disableUPP
com.apple.%@.queue.%p
com.apple.%@.serviceQueue.%p
MP_onServiceQueue_resignActiveService
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/Core/StoreBookkeeper Support/_ios_tvos/MPUbiquitousPlaybackPositionController.m
v32@?0@"SBCPlaybackPositionEntity"8Q16^B24
v28@?0B8@"NSError"12@"NSArray"20
SBCPlaybackPositionEntity
/System/Library/PrivateFrameworks/StoreBookkeeperClient.framework/StoreBookkeeperClient
SBCPlaybackPositionDomain
SBCPlaybackPositionService
_MPContentItemDidChangeNotification
_MPContentItemDidChangeUserInfoKeyDeltaItem
_MPContentItemDidChangeUserInfoKeyImmediately
_MPContentItemNotificationsSuppressedKey
_MPContentItemNotificationsImmediateKey
MPContentItem.m
Can't create an MPContentItem object with a nil identifier.
<%@: %p id=%@ title="%@">
v32@?0@"NSData"8{CGSize=dd}16
unfollowProfile
record label
MPModelPropertyRecordLabelName
MPModelPropertyRecordLabelDescriptionText
MPModelPropertyRecordLabelShortDescriptionText
MPModelPropertyRecordLabelArtwork
MPModelPropertyRecordLabelEditorialArtwork
MPRadioLibraryErrorDomain
MPRadioLibraryStationsDidChangeNotification
RadioModelDidChangeNotification
v32@?0@"RadioStation"8Q16@"NSError"24
RadioAddStationRequest
/System/Library/PrivateFrameworks/Radio.framework/Radio
RadioModel
UserDefault[%@]
Songs
Albums
Clear
Reset
AutoPlay
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
uniqueIdentifier
stationStringID
localizedName
localizedDescription
Received %@
_MPActiveUserChangeMonitor.m
Cancel existing timer before starting a new one.
Must provide a reason for logging.
MPRemoteCommandTargetsDidChangeNotification
MPRemoteCommandEventDidTimeout
com.apple.MediaPlayer/%@
<%@: %p type=%@ (%ld) enabled=%@ handlers=[%@]>
Target was not available for command.
v16@?0@?<v@?@"MPRemoteCommandStatus">8
v24@?0@"MPRemoteCommandEvent"8@?<v@?@"MPRemoteCommandStatus">16
MPRemoteCommand.m
Cannot use extended status with synchronous target/action
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument.
command=%@
CommandHandlerNotCalledBug
Command handler completion deallocated without being called. event=%@
Command handler completion deallocated without being called -- assertion failed
v16@?0@"MPRemoteCommandStatus"8
v32@?0@"NSString"8@?<v@?@"MPRemoteCommandEvent"@?<v@?@"MPRemoteCommandStatus">>16^B24
hasTargets
supported
MPSystemAppSpecializedQueueProminentStationIdentifier
com.apple.MediaPlayer.MPSetPlaybackQueueCommand/serialQueue
com.apple.MediaPlayer.MPInsertIntoPlaybackQueueCommand/serialQueue
%p:%s
recommendation group
MPModelForYouRecommendationGroupPropertyGroupType
MPModelForYouRecommendationGroupPropertyLastUpdatedDate
MPModelForYouRecommendationGroupPropertySectionedItems
MPModelForYouRecommendationGroupPropertySectionIndex
MPModelForYouRecommendationGroupPropertySubgroups
MPModelForYouRecommendationGroupPropertyTitle
MPModelForYouRecommendationGroupPropertyLoadAdditionalContentURL
MPModelForYouRecommendationGroupPropertyHrefURL
MPModelForYouRecommendationGroupPropertyRefreshURL
MPModelForYouRecommendationGroupPropertyTraits
MPModelForYouRecommendationGroupPropertyDisplaysAsGridCellInCarPlay
MPModelForYouRecommendationGroupPropertyDisplaysAsTitledSectionWithRowsInCarPlay
PlaylistEntry:k
v16@?0@"MPModelPlaylistEntryKind"8
playlist entries of (%@)
kinds
playlist entry %@+%@
MPModelPropertyPlaylistEntryPosition
MPModelRelationshipPlaylistEntryPlaylist
MPModelRelationshipPlaylistEntrySong
MPModelRelationshipPlaylistEntryTVEpisode
MPModelRelationshipPlaylistEntryMovie
MPModelRelationshipPlaylistEntrySocialContributor
_MPModelPropertyPlaylistEntryArtwork
<%@: %p status=%@ unknown>
<%@: %p status=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@ error=%@>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ unknown/type=%ld>
code-%lld|%@
dialog-%lld|%@
error-%lld|%@|%@
custom-%lld|%@|%@
%lld|%@
pageData
fcStructure
model
selectedChart
fcKind
content
kindIds
pageTitle
v32@?0@8@16^B24
v32@?0@"NSString"8q16^B24
v32@?0@"MPModelStoreBrowseSection"8q16^B24
v16@?0@"MPChangeDetails"8
unAvailableContentIds
v16@?0@"MPStoreItemMetadataCacheKey"8
%@: [Account: %@, Enqueuer: %@, Personalized? %d, Storefront: %@]
com.apple.MediaPlayer.MPStoreItemMetadataCacheKey
https:///
v24@?0@"NSURLRequest"8@"NSError"16
comparisonType
MPModelStoreBrowseSectionPropertyTitle
MPModelStoreBrowseSectionPropertyType
MPModelStoreBrowseSectionPropertyLoadAdditionalContentURL
MPModelStoreBrowseSectionPropertyUniformContentItemType
MPModelStoreBrowseSectionPropertyMemberOfChartSet
MPModelStoreBrowseSectionPropertyBrick
MPModelStoreBrowseSectionPropertyPreviouslyRetrievedNestedResponse
MPModelStoreBrowseSectionPropertyDisplaysAsGridCellInCarPlay
MPModelStoreBrowseSectionRelationshipRadioStation
;%@%lu %@
relationship
%@: %@%@
MPPropertySetProperties
MPPropertySetRelationships
<EMPTY>
v32@?0@"NSString"8@"MPStoreItemMetadata"16^B24
TVSeason:e%p
v16@?0@"MPModelTVSeasonKind"8
seasons with %@
TV season %@
MPModelPropertyTVSeasonNumber
Season %ld 
MPModelPropertyTVSeasonDescriptionText
MPModelPropertyTVSeasonYear
MPModelPropertyTVSeasonEpisodesCount
MPModelPropertyTVSeasonHasCleanContent
MPModelPropertyTVSeasonHasExplicitContent
MPModelPropertyTVSeasonLibraryAddedDate
MPModelPropertyTVSeasonLibraryAdded
MPModelPropertyTVSeasonLibraryAddEligible
MPModelPropertyTVSeasonSortType
MPModelRelationshipTVSeasonShow
MPModelRelationshipTVSeasonRepresentativeEpisode
MPModelPropertyTVSeasonArtwork
MPModelPropertyTVSeasonDownloadedDate
, searchString = %@
, scopes = %@
MPModelLibrarySearchRequestMaximumResultsPerScope
MPModelLibrarySearchRequestScopes
MPModelLibrarySearchRequestSearchString
unknown property type
v64@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40@"MPIdentifierSet<MPMutableIdentifierSet>"56
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}32@?0@"MPMediaLibraryEntityTranslationContext"8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16
storeID
cloudID
cloudUniversalLibraryID
excludeFromShuffle
subscriptionStoreID
storeCloudAlbumID
syncID
reportingStoreItemID
assetStoreItemID
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
void _MPMLInitPropertySongMap()_block_invoke
Must have song kind to generate song entity query.
_MPMLInitPropertySongMap_block_invoke
MPMediaLibraryTranslatorSchema.mm
{vector<std::shared_ptr<mlcore::Predicate>, std::allocator<std::shared_ptr<mlcore::Predicate>>>=^v^v{__compressed_pair<std::shared_ptr<mlcore::Predicate> *, std::allocator<std::shared_ptr<mlcore::Predicate>>>=^v}}16@?0@"NSArray"8
userRating
title
titleOrder
trackNumber
hasTrackNumber
classicalMovement
classicalMovementNumber
volumeNormalization
durationInSamples
gaplessHeuristicInfo
gaplessEncodingDelay
gaplessEncodingDrain
gaplessLastFrameResync
relativeVolume
time
itemPID
mediaType
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSourceType
hlsAudioCapability
masteredForiTunes
libraryAdded
downloadedDate
datePlayed
hasNonPurgeableAsset
isStoreRedownloadable
keepLocal
keepLocalStatus
@"MPArtworkCatalog"16@?0@"MPModelObject"8
location
baseLocationPath
hasStreamingAsset
protected
hasLoFiStreamingAsset
hlsTraits
homeSharingID
matchRedownloadParams
purchaseHistoryRedownloadParams
storeCloudID
purchaseHistoryID
cloudAssetAvailable
cloudStatus
endpointType
storeAdamID
isAUC
episodeType
void _MPMLInitPropertyAlbumMap()_block_invoke_4
Must have album kind to generate album entity query.
_MPMLInitPropertyAlbumMap_block_invoke_4
hasTitle
isPreOrder
dateReleased
datePlayedLocal
representativeItemExplicit
appData
@"NSNumber"24@?0@"MPModelAlbum"8@"MPIdentifierSet"16
globalID
void _MPMLInitPropertyPlaylistMap()_block_invoke_5
Must have playlist kind to generate playlist entity query.
name
nameOrder
isTracklistUserEditable
isSmart
isGenius
isSubscribed
shareURL
playlistPID
@"NSArray"16@?0Q8
isHidden
dateModified
isFolder
shouldDisplayIndex
isPersonalMix
externalVendorName
void _MPMLInitPropertyArtistMap()_block_invoke_4
Must have artist kind to generate artist entity query.
hasName
artistPID
artistAvailableArtworkToken
artistFetchableArtworkToken
artistFetchableArtworkSourceType
void _MPMLInitPropertyComposerMap()_block_invoke_3
Must have composer kind to generate composer entity query.
void _MPMLInitPropertyGenreMap()_block_invoke_3
Must have Genre kind to generate Genre entity query.
itemPid
void _MPMLInitPropertyPlaylistEntryMap()_block_invoke_5
Attempted to query playlist entries without scoping to a playlist.
Must have PlaylistEntry kind to generate PlaylistEntry entity query.
position
B40@?0@"MPMediaLibraryEntityTranslationContext"8^v16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24
library()->isValid()
performQuery
/AppleInternal/Library/BuildRoots/a2865b39-8e69-11ec-bbad-4e67803e3fd9/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator15.4.Internal.sdk/System/Library/PrivateFrameworks/MediaLibraryCore.framework/PrivateHeaders/LibraryView.hpp
Library must be validated before use
cloudKVSBookmarkTime
cloudKVSKey
startTime
stopTime
cloudKVSHasBeenPlayed
cloudKVSPlayCount
void _MPMLInitPropertyPodcastMap()_block_invoke_3
Must have podcast kind to generate podcast entity query.
feedURL
externalGUID
void _MPMLInitPropertyPodcastEpisodeMap()_block_invoke_4
Must have Podcast Episode kind to generate Podcast Episode entity query.
_MPMLInitPropertyPodcastEpisodeMap_block_invoke_4
void _MPMLInitPropertyMovieMap()_block_invoke_5
Must have Movie kind to generate Movie entity query.
movieInfoPlist
void _MPMLInitPropertyTVEpisodeMap()_block_invoke_5
Must have TV Episode kind to generate TV Episode entity query.
_MPMLInitPropertyTVEpisodeMap_block_invoke_5
sortID
subOrder
void _MPMLInitPropertyTVSeasonMap()_block_invoke_4
Must have TV Season kind to generate TV Season entity query.
_MPMLInitPropertyTVSeasonMap_block_invoke_4
sortType
void _MPMLInitPropertyTVShowMap()_block_invoke_4
Must have TV Show kind to generate TV Show entity query.
imageURL
width
height
MPModalPresentationWindow.m
Multiple alert controllers assigned to the same window: %@
v24@?0@"MPArtworkRepresentation"8@"NSError"16
v24@?0@"MPMediaLibraryArtwork"8@"NSError"16
MPArtworkResizeDomain
Image did not exist at URL: %@
ColorAnalysis
v24@?0@8@"NSError"16
library
v16@?0@"UIImage"8
v24@?0@"UIImage"8@"NSError"16
artist-hero
; artworkType = %@
; availableArtworkToken = %@
; fetchableArtworkToken = %@
music.apple.com
lyricsSnippetShareSignaturePrefix
https?://%@/(?<countryCode>\w{2})/lyrics/(?<adamID>[0-9]+)
adamID
2.v1.
/%@/lyrics/%lld
:/?#[]@!$&'()*+,;=
lyrics%@%@%@%@%@
blockSocialUser
file asset
MPModelPropertyFileAssetFilePath
MPModelPropertyFileAssetFileSize
MPModelPropertyFileAssetNonPurgeable
MPModelPropertyFileAssetProtectionType
MPModelPropertyFileAssetPurchaseBundleFilePath
MPModelPropertyFileAssetQualityType
MPModelPropertyFileAssetHLSKeyServerURL
MPModelPropertyFileAssetHLSKeyServerProtocol
MPModelPropertyFileAssetHLSKeyCertificateURL
MPModelPropertyFileAssetTraits
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/serialQueue
com.apple.MediaPlayer.MPAVOutputDeviceRoutingDataSource/discoverySessionQueue
MPAVOutputDeviceRoutingDataSource.m
q24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
B24@?0@"MPAVOutputDeviceRoute"8@"NSDictionary"16
B24@?0@"MPAVRoute"8@"NSDictionary"16
v16@?0^{__CFError=}8
Analytics: Picked endpoint route, clear system endpoint
v32@?0^{__CFArray=}8^v16^{__CFError=}24
invalid class for %@ (%@)
v24@?0@"MRAVEndpoint"8@"NSError"16
invalid class for %@
must be an MPAVOutputDeviceRoute
RouteUID
B16@?0@"MRAVOutputDevice"8
predictedDevice
AVOutputContext.predictedDevice
AVOutputContext.outputDeviceUIDs
UAPayloadIdentifierExternalMediaContentIdentifier
UAPayloadIdentifierExternalMediaContentBundleIdentifier
v40@?0@"UAUserActivity"8@16@"NSString"24@?<v@?@"NSString"@"NSData"^@B>32
-init is invalid. Use -initWithScrubbingControl: instead.
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPModelSong"8
v16@?0@"MPModelGenericObject"8
MPStoreLibraryPersonalizationContentDescriptor.m
No personalization properties for modelClass: %@
<MPStoreLibraryPersonalizationContentDescriptor %p modelObject.identifiers=%@>
MPUserNotification.m
cfUserNotification
com.apple.MediaPlayer.MPUserNotification.accessQueue
com.apple.MediaPlayer.MPUserNotification.callbackInvocationQueue
com.apple.MediaPlayer.MPUserNotification.userNotificationConversionAccessQueue
MPUserNotification.responseCompletionHandlerInvocation
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlayer/UI/MPUserNotification.m
com.apple.MediaPlayer.MPMediaEntityCache/deallocLaterQueue
v16@?0r^v8
-[MPMediaEntityCache _entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:]
MPMediaEntityCache.mm
Invalid entity
map::at:  key not found
localEndpoint
endpoint
v16@?0^v8
com.apple.mediaplayer.MPAVEndpointRoute/accessQueue
com.apple.mediaplayer.MPAVEndpointRoute/calloutQueue
 connection=%@
MPAVEndpointRoute.m
endpointWrapper
com.apple.MediaPlayer.MPStoreContentReporter.operationQueue
concernItemType
concernTypeId
concernItemId
commentText
deviceId
concernItemAUCType
v16@?0@"ICURLBag"8
commentId
reasonsForArtistPost
reasonsForArtistComment
reasonsForUserComment
reasonsForSharedPlaylist
reasonsForSocialProfile
reasonsForLyrics
reportConcern
deleteComment
deleteSocialPost
<%@: %p %@:'%@'>
ARTIST_POST
ARTIST_COMMENT
USER_COMMENT
PUBLIC_PLAYLIST
SOCIAL_PROFILE
LYRICS
v16@?0@"ICAsyncBlockOperation"8
com.apple.amp.mediaplayer.MPMediaAPICollectionItemMetadataRequest.workQueue
com.apple.amp.mediaplayer.MPMediaAPICollectionItemMetadataRequest.callOutQueue
AFAnalyticsEventTypeMusicPlaybackAssetLoad
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
<%@: %p title=%@ subtitle=%@ artworkImageData=%@ storage=%@>
subtitle
artworkImageData
MPPlaybackArchiveDisplayProperties.m
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
void _MSVHasherAppend64(MSVHasher * _Nonnull, uint64_t)
void _MSVHasher_SipHash_1_3_Append64(MSVHasherSipHash_1_3 *, uint64_t)
NSUInteger _MSVHashGetHash(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
MPHomeManagerObserverCurrentHomeDidChangeNotification
MPHomeManagerObserverCurrentUserDidChangeNotification
MPHomeManagerObserverUsersDidChangeNotification
MPHomeManagerObserverSoundCheckSettingChangedNotification
Setup complete
Setting up
v24@?0@"MPStoreLibraryMappingResponse"8@"NSError"16
MPAVRoutingDataSourceActiveAudioRouteDidChangeNotification
MPAVRoutingDataSourceRoutesDidChangeNotification
MPAVRoutingDataSourceVolumeControlAvailabilityDidChangeNotification
MPAVRoutingDataSourceExternalScreenTypeDidChangeNotification
MPAVRoutingDataSourceFailureNotification
Route
VolumeControlAvailability
ExternalScreenType
com.apple.MediaPlayer.MPAVRoutingDataSource/serialQueue
com.apple.MediaPlayer.MPAVRoutingDataSource/workerQueue
v12@?0C8
%@ is abstract
MPModelPropertyStoreAssetEndpointType
MPModelPropertyStoreAssetRedownloadParameters
MPModelPropertyStoreAssetRedownloadable
MPModelPropertyStoreAssetAccountIdentifier
MPModelPropertyStoreAssetShouldReportPlayEvents
MPModelPropertyStoreAssetSubscriptionRequired
MPModelPropertyStoreAssetNeedsUserUpload
MPHomeUserObserverUserAllowExplicitSettingsDidChangeNotification
MPHomeUserMonitorPrivateListeningForCurrentDeviceSettingDidChangeNotification
root.music.allowExplicitContent
com.apple.mediaplayer.MPHomeUserMonitor.accessQueue
com.apple.mediaplayer.MPHomeUserMonitor.calloutQueue
v16@?0@"NSError"8
v32@?0@"NSString"8Q16^B24
TVShow:s%p
v16@?0@"MPModelTVShowKind"8
shows with %@
seasonKind
TV show %@
MPModelPropertyTVShowTitle
MPModelPropertyTVShowShortTitle
MPModelPropertyTVShowEditorNotes
MPModelPropertyTVShowShortEditorNotes
MPModelRelationshipTVShowCreator
MPModelPropertyTVShowArtwork
MPModelPropertyTVShowEditorialArtwork
MPModelPropertyTVShowEpisodeCount
MPModelPropertyTVShowTagline
idx (%ld) is out of range (%ld)
<%@: %p resolvedURL:%@ artworkTemplateItems:%@ mediaType:%ld artworkType:%ld>
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
bytesPredicateValue
social person
MPModelPropertySocialPersonUncensoredName
MPModelPropertySocialPersonHandle
MPModelPropertySocialPersonBiography
MPModelPropertySocialPersonIsPrivate
MPModelPropertySocialPersonIsVerified
MPModelPropertySocialPersonPendingRequestsCount
MPModelPropertySocialPersonArtwork
musicPlayerStateRestorationCache-nowPlaying
musicPlayerStateRestorationCache-queueDescriptor
musicFriends
MPStoreSocialErrorDomain
MPStoreSocialServiceControllerTransientStatesDidChangeNotification
MPStoreSocialServiceControllerTransientStatesSnapshotKey
_MPStoreSocialTransientStateDidChangeNotification
com.apple.MediaPlayer.MPStoreSocialServiceController.operationQueue
com.apple.MediaPlayer.MPStoreSocialServiceController.accessQueue
v24@?0q8@"NSError"16
v24@?0@"_MPStoreSocialTransientState"8^B16
v16@?0@"_MPStoreSocialTransientState"8
com.apple.MediaPlayer._MPStoreSocialTransientState.accessQueue
com.apple.MediaPlayer._MPStoreSocialTransientState.calloutQueue
+[MPMediaLibraryEntityTranslator _translatorForMPModelClass:mlcoreEntityClass:create:transient:]
MPMediaLibraryEntityTranslator.mm
MPModelClass && (entityClass || transient)
_default
Missing generic object kind relationship for %@.
@56@?0@"MPMediaLibraryEntityTranslationContext"8{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}40
property
Sorting by %@ is ambiguous, please define sortTransformer.
{vector<mlcore::SortDescriptor, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}}}40@?0{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}8@"NSSortDescriptor"32
joinProperty
No entityQueryBlock was mapped for %@
%@ entityQueryBlock did not return a query.
Relationship mapping missing for %@:%@
v32@?0@"NSString"8@"MPPropertySet"16^B24
MPModelGenericObject can only be sorted by MPMulitSortDescriptor.
All relatedProperties must have the same number of core sort descriptors.
v32@?0@"NSString"8@"NSString"16^B24
Sort descriptor must have at least one key.
Property mapping missing for %@:%@
Sort descriptor missing transformer: %@
Property translator mapping missing for %@:%@
v16@?0@"MPModelObject"8
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
@"MPArtworkCatalog"16@?0@"MPModelMovie"8
v16@?0@"MPModelMovie"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
<MPIdentifierSet EMPTY>
<MPIdentifierSet EMPTY (not-singleton)>
<%@ %@>
(%@)
MPIdentifierSetCodingKeyModelKind
MPIdentifierSetCodingKeyDatabaseID
MPIdentifierSetDeviceLibraryPersistentID
MPIdentifierSetDeviceLibraryContainedPersistentID
MPIdentifierSetSyncID
MPIdentifierSetCodingKeyPersonID
MPIdentifierSetStoreCloudID
MPIdentifierSetStoreCloudAlbumID
MPIdentifierSetStoreRecommendationID
MPIdentifierSetGlobalPlaylistID
MPIdentifierSetStoreAdamID
MPIdentifierSetFormerStoreAdamIDs
MPIdentifierSetCloudUniversalLibraryID
MPIdentifierSetStorePurchasedAdamID
MPIdentifierSetStoreSubscriptionAdamID
MPIdentifierSetSocialProfileID
MPIdentifierSetInformalMediaClipID
MPIdentifierSetInformalStaticAssetID
MPIdentifierSetReportingAdamID
MPIdentifierSetAssetAdamID
MPIdentifierSetRadioStationStringID
MPIdentifierSetRadioStationHash
MPIdentifierSetRadioStationID
MPIdentifierSetRadioStationEventID
MPIdentifierSetContainerUniqueID
MPIdentifierSetHandoffCorrelationID
MPIdentifierSetContentItemID
MPIdentifierSetLyricsID
MPIdentifierSetShouldExcludeFromShuffle
MPIdentifierSetIsPlaceholder
MPIdentifierSetVendorID
MPIdentifierSetCodingKeyPlaybackAuthorizationToken
MPIdentifierSet.m
databaseID.length > 0
personID.length > 0
<EMPTY (not-singleton)>
databaseID="%@"
personID="%@"
persistentID=%lld
containedPersistentID=%lld
storeAdamID=%lld
storeCloudAlbumID="%@"
storeCloudID=%lld
cloudUniversalLibraryID="%@"
storePurchasedAdamID=%lld
formerStoreAdamIDs=[%@]
storeSubscriptionAdamID=%lld
radioStationStringID="%@"
radioStationID=%lld
radioStationHash="%@"
radioStationEventID="%@"
globalPlaylistID="%@"
storeRecommendationID="%@"
containerUniqueID="%@"
handoffCorrelationID="%@"
contentItemID="%@"
lyricsID="%@"
shouldExcludeFromShuffle=YES
placeholder=YES
vendorID="%@"
informalMediaClipID="%@"
informalStaticAssetID="%@"
reportingAdamID=%lld
assetAdamID=%lld
socialProfileID="%@"
syncID=%lld
playbackAuthorizationToken="%@"
kind=%@
shared listening participant
MPModelPropertySharedListeningParticipantArtwork
PodcastEpisode:v%lu:o%lu
v16@?0@"MPModelPodcastEpisodeKind"8
podcasts
audio 
video 
unplayed 
podcast episode %@
MPModelPropertyPodcastEpisodeTitle
MPModelPropertyPodcastEpisodeReleaseDateComponents
MPModelPropertyPodcastEpisodeDuration
MPModelPropertyPodcastEpisodeUserRating
MPModelPropertyPodcastEpisodeExplicit
MPModelPropertyPodcastEpisodeHasVideo
MPModelPropertyPodcastEpisodeDescriptionText
MPModelPropertyPodcastEpisodeDatePlayed
MPModelPropertyPodcastEpisodeStreamURL
MPModelPropertyPodcastEpisodeShareURL
MPModelPropertyPodcastEpisodeType
MPModelPropertyPodcastEpisodeNumber
MPModelPropertyPodcastEpisodeSeasonNumber
MPModelRelationshipPodcastEpisodeLocalFileAsset
MPModelRelationshipPodcastEpisodePodcast
MPModelRelationshipPodcastEpisodeAuthor
MPModelRelationshipPodcastEpisodePlaybackPosition
MPModelPropertyPodcastEpisodeArtwork
MPRouteLabel.m
MPRouteLabel's minimumEndCharacter property must be greater than or equal to 0.
ROUTE_NAME_HEADPHONES_COUNT
ROUTE_NAME_ARROW_FORMAT
q24@?0@"NSString"8@"NSString"16
ROUTE_NAME_PLUS_SEPARATOR
ROUTE_NAME_CENTER_TRUNCATING_SEPARATOR
NOW_PLAYING_SIRI_SUGGESTION
B24@?0@"NSString"8@"NSString"16
v32@?0@8Q16^B24
@"NSString"24@?0@"NSString"8q16
ROUTE_NAME_PLUS_COUNT
<%@ %p %@>
MPRestrictionsMonitorAllowsAccountModificationDidChangeNotification
MPRestrictionsMonitorAllowsDeletionDidChangeNotification
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
MPRestrictionsMonitorMusicSubscriptionDidChangeNotification
MPRestrictionsMonitorAllowsRadioPurchasesDidChangeNotification
MPRestrictionsMonitorAllowsRadioServiceDidChangeNotification
MPRestrictionsMonitorAllowsStorePurchasesDidChangeNotification
MPRestrictionsMonitorAllowsMusicVideosDidChangeNotification
v16@?0@"NSNotification"8
PSRestrictionsPasscodeController
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
com.apple.MediaPlayer.SystemVolumeDataSource.avscQueue
<%@: %p %@>
available
not available
MediaPlayback
com.apple.MediaPlayer.SystemVolumeDataSource.reloadQueue
CannotExceedEUVolumeLimit
RegionalBehaviorEUVolumeLimit
MPDebugEUVolumeLimit
.GlobalPreferences
MPVolumeControllerRouteDataSource.m
Group route must be an endpoint route.
Output device route must be an output device.
Endpoint: %@ OutputDevice: %@
Endpoint: %@
<%@: %p %@ volume control %@>
v12@?0I8
v20@?0I8^{__CFError=}12
v20@?0f8^{__CFError=}12
artworkInfoType
cropStyle
sourceEditorialArtworkKind
videoArtwork
imageArtwork
hdmv
SDMV
480p
720p
1080p
MPStoreDownloadAttributeBackgroundRequest
MPStoreDownloadAttributeBuyParameters
MPStoreDownloadAttributeClientBundleIdentifier
MPStoreDownloadAttributeDisplaysOnLockscreen
MPStoreDownloadAttributeDownloadHandlerIdentifier
MPStoreDownloadAttributeKind
MPStoreDownloadAttributeLibraryItemIdentifier
MPStoreDownloadAttributeOriginator
MPStoreDownloadAttributeReason
MPStoreDownloadAttributeShouldDisableCellularRestrictionEnforcement
MPStoreDownloadAttributeShouldRespectMusicCellularDataRestriction
MPStoreDownloadAttributeShouldRespectStoreCellularDataRestriction
MPStoreDownloadAttributeStoreSagaItemIdentifier
MPStoreDownloadAttributeStoreItemIdentifier
MPStoreDownloadAttributeTitle
MPStoreDownloadAttributeURLBagKey
MPStoreDownloadAttributeSkipInstall
MPStoreDownloadErrorDomain
tilthistory
tiltmediacontrols
tiltnowplaying
tiltstore
tiltwishlist
MPStoreDownloadPhaseCanceled
MPStoreDownloadPhaseDataRestore
MPStoreDownloadPhaseDownloading
MPStoreDownloadPhaseFailed
MPStoreDownloadPhaseFinished
MPStoreDownloadPhaseInstalling
MPStoreDownloadPhasePaused
MPStoreDownloadPhasePreflight
MPStoreDownloadPhaseProcessing
MPStoreDownloadPhasePurchasing
MPStoreDownloadPhaseWaiting
buyProduct
paidRedownloadProduct
redownloadProduct
subDownload
MPStoreDownloadURLBagKeyOverride
com.apple.MediaPlayer.MPStoreDownload.accessQueue
salableAdamId
<%@ %p %@ error:%@ canceled:%@>
&reporting=%@
;stationId:%llu
;stationHash:%@
videoPodcast
SSDownloadPropertyStoreSagaIdentifier
SSDownloadPolicy
SSDownloadPolicyRule
SSDownloadSizeLimitNoLimit
SSDownloadPolicyUserDefaultState
SSDownloadSizeLimitDisabled
SSDownloadPropertyShouldCancelOnFailure
SSDownloadPropertyShouldSuppressErrorDialogs
SSMutableURLRequestProperties
SSDownloadPhaseCanceled
SSDownloadPhaseDataRestore
SSDownloadPhaseDownloading
SSDownloadPhaseInstalling
SSDownloadPhasePaused
SSDownloadPhasePreflight
SSDownloadPhaseProcessing
SSDownloadPhaseWaiting
MPStoreDownloadManagerDidFetchInitialDownloadsNotification
MPStoreDownloadManagerInitException
-init is not supported. Use +sharedManager instead.
com.apple.MediaPlayer.MPStoreDownloadManager.accessQueue
com.apple.MediaPlayer.MPStoreDownloadManager.calloutQueue
com.apple.MediaPlayer.MPStoreDownloadManager
v16@?0@"NSArray"8
%@.%@
v20@?0B8@"NSError"12
MPStoreDownloadManager.m
Downloads must not be empty.
SSDownloadManagerOptions
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSDownloadKindMusic
SSDownloadKindMusicVideo
SSDownloadKindTelevisionEpisode
SSDownloadKindMovie
SSDownloadManager
SSDownloadExternalPropertyBytesDownloaded
SSDownloadExternalPropertyPercentComplete
SSDownloadExternalPropertyPolicySizeLimit
SSDownloadExternalPropertyRentalInformation
SSDownloadPropertyClientBundleIdentifier
SSDownloadPropertyDownloadPhase
SSDownloadPropertyEncodedErrorData
SSDownloadPropertyIsRestore
SSDownloadPropertyKind
SSDownloadPropertyLibraryItemIdentifier
SSDownloadPropertyPreferredAssetFlavor
SSDownloadPropertyReason
SSDownloadPropertyStoreItemIdentifier
SSDownloadPropertyThumbnailImageURL
SSDownloadPropertyTitle
SSDownloadPropertyHandlerID
SSDownloadPropertyCollectionName
SSDownloadPhaseIsFinishedPhase
SSDownloadPhaseFailed
SSPurchaseManager
SSPurchase
SSDownload
SSDownloadPhaseFinished
@"MPArtworkCatalog"16@?0@"MPModelSocialPerson"8
v16@?0@"MPModelSocialPerson"8
com.apple.amp.mediaplayer.MPMediaAPICollectionMetadataRequest.workQueue
com.apple.amp.mediaplayer.MPMediaAPICollectionMetadataRequest.callOutQueue
v8@?0
https://%@/v1/catalog/%@/albums/%@%@
https://%@/v1/catalog/%@/playlists/%@%@
v24@?0@"ICURLResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
Album:v%lu:o%lu:s%p
v16@?0@"MPModelAlbumKind"8
compilations
songKind
album %@
MPModelPropertyAlbumTitle
MPModelRelationshipAlbumArtist
MPModelRelationshipAlbumGenre
MPModelRelationshipAlbumRepresentativeSong
MPModelPropertyAlbumTrackCount
MPModelPropertyAlbumMaximumItemTrackNumber
MPModelPropertyAlbumDiscCount
MPModelPropertyAlbumHasCleanContent
MPModelPropertyAlbumHasExplicitContent
MPModelPropertyAlbumIsCompilation
MPModelPropertyAlbumIsClassical
MPModelPropertyAlbumReleaseDateComponents
MPModelPropertyAlbumArtwork
MPModelPropertyAlbumCopyrightText
MPModelPropertyAlbumLibraryAddedDate
MPModelPropertyAlbumYear
MPModelPropertyAlbumLibraryAdded
MPModelPropertyAlbumVolumeNormalization
MPModelPropertyAlbumKeepLocalEnableState
MPModelPropertyAlbumKeepLocalManagedStatus
MPModelPropertyAlbumLibraryAddEligible
MPModelPropertyAlbumLastDevicePlaybackDate
MPModelPropertyAlbumPreorder
MPModelPropertyAlbumEditorNotes
MPModelPropertyAlbumShortEditorNotes
MPModelPropertyAlbumSongPopularity
MPModelPropertyAlbumDownloadedDate
MPModelPropertyAlbumTraits
MPModelPropertyAlbumClassicalExperienceAvailable
MPModelPropertyAlbumVersionHash
MPModelChildAlbumSongs
MPModelChildAlbumArtists
MPModelChildAlbumRecordLabels
propertyPredicate
compoundPredicate
persistentIDsPredicate
searchStringPredicate
Error importing recommendations endpoint response in Server Object Database: %{public}@
START Request: %{public}@ aka [%{public}@]
TIMEOUT Request: %{public}@ timing out. Remaining operations: [%{public}@]
TIMEOUT Request: %{public}@ Operation: %{public}@
TIMEOUT Request: %{public}@ timing out.
FINISH Request: %{public}@ Response: %{public}@ [%fs] error: %{public}@
FINISH Request: %{public}@ Response: %{public}@ [%fs]
INVALIDATE: Response invalid before completion. Request: %{public}@
MIDDLEWARE: [%{public}@]
INVALIDATE: Middleware: %{public}@ [%{public}@] request: %{public}@
INVALIDATE: Middleware: %{public}@ [%{public}@, but already invalid] request: %{public}@
INVALIDATE: Notifying invalidation for request: %{public}@
[AFAnalytics] %{public}@ %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackQueueReceived %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackReady %lld %{public}@
[AFAnalytics] AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPStoreGetClientToken failed to get identity properties for token request. err=%{public}@
MPStoreGetClientToken not fetching auth token because there's no active account
    AVPlayerItem: %{public}@
Assets should not be loaded on the main thread.
MP->AV Asset Log Mapping: %{public}@ -> %{public}@   
%{public}@: Setting volume normalization to %f on %{public}@
%{public}@: ignoring volume normalization %f on %{public}@
Failed to get exportable URL with error: %{public}@
Setting item %{public}@ EQ to %d
%{public}@: setupPlaybackInfo called without an asset loaded
%{public}@: Seeking to start time: %f [override: %{BOOL}u]
%{public}@: Setting forward playback end time to: %f
%{public}@: Setting Audible DRM info: %{public}@
%{public}@: Setting ramp in/out info: %{public}@
 %{public}@ loadedTimeRanges %.2f of %.2f
 %{public}@ Finished downloading asset with loadedTimeRanges: %.2f of %.2f
routingTableView %p updateForEndpoint: routeUpdate: %@
Attempting to present media controls using a deprecated class: %@
MPModelLibraryRequestOperation: %p _sanityCheckRequest: allowedItemIdentifiers must contain unique array elements -- cannot contain duplicates. label=%{public}@ allowedItemIdentifiers=%{public}@
BEGIN SEEKING: %d
MPAVController: %p: changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
throttling playback changes for %.2fs
applying an additional %ld delta from throttled changes
changing by %ld to track to %{public}@
MPAVController: %p: endPlayback
%{public}@
Disabling autoplay for pause
MPAVController: %p: _pausedDuringInterruption=YES
MPAVController: %p: playWithOptions: %d allowsEnablingAutoPlay: %{BOOL}u
MPAVController: %p: Pausing [unable to set rate]
%{public}@ %{public}@ %{public}@
%{public}@ %d
Setting rate on player: %{public}@ to %f
Finished preparing item: %{public}@ for rate: %f, setting.
Preparing item: %{public}@ for rate: %f
Disabling autoplay
Enabling autoplay
MPAVController: %p: Set audio session active
MPAVController: %p - setCurrentTime:options:completion: - Saving start time override - startTimeOverride: %3.2fs
Committing time change: %f
Delaying time change: %f
reloadWithPlaybackContext:completionHandler:
 playbackContext: %{public}@
 currentPlaybackState=%d, posting MPAVControllerWillReloadWithPlaybackContextNotification
Error loading tracklist for queue feeder: %{public}@
MPAVController: %p: Honoring context action after queue load [shouldStartPlayback=%{BOOL}u]
MPAVController: %p: Overriding context action after queue load [Play]
MPAVController: %p: Overriding context action after queue load [Pause]
MPAVController: %p: Pausing [reloadWithPlaybackContext, was running, context should not start playback]
Ending playback because we don't have a current item after reload.
MPAVController: %p: Pausing [active route change, disabling autoplay]
Ignoring pause from active route change due to state being interrupted.
 asset loaded %{public}@ : current item %{public}@
 _itemDidChange 
 %{public}@
 AVPlayerItemFailedToPlayToEndTimeNotification
 %{public}@
 %{public}@
 _itemFailedToPlayToEnd %{public}@
 AVPlayerItemDidPlayToEndTimeNotification
 _itemReadyToPlay
 _itemWillChange %{public}@ 
 %{public}@
 playback state=%d, didPreviousItemReachEnd=%d, previousItemAssetLoaded: %{public}@, _isReloadingForPlaybackContextChange=%{BOOL}u
AVAudioSessionDelegateMediaPlayerOnly - begin interruption [received from CM]
MP AVAudioSessionDelegateMediaPlayerOnly - end interruption [received from CM]. Interruptor <%{public}@> category <%{public}@> resumable <%lu>,  _state = %lu
paused during interruption: do not resume
current item requests playback prevention: do not resume
interruptor is not phone app, etc: do not resume
video while in background: do not resume
MP endInterruptionFromInterruptor :: resuming playback at %f
 _rateDidChange %.2f 
 %.2f
_configureAudioSession
MPAVController: %p: Creating AVPlayer and MPAVQueueCoordinator - deferItemLoading=%{BOOL}u
Setting allowsExternalPlayback: %{public}@
Setting usesExternalPlaybackWhileExternalScreenIsActive: %{public}@
Setting actionAtItemEnd to AVPlayerActionAtItemEndAdvance when connecting to the AVPlayer
MPAVController: %p: Disconnecting AVPlayer for reason %d
%{public}@ %{public}@: unregistering due to disconnect for reason: %li
 _serverConnectionDidDie
  -- notification: %{public}@
  -- error: %{public}@
  -- currentTime: %0.2f
  -- contentItemID: %{public}@
 _streamBufferFull
 _streamLikelyToKeepUp
 _streamRanDry
 _streamUnlikelyToKeepUp
 AVPlayerItemTimeJumpedNotification 
 %.1fs
MPAVController: %p: Pausing [airPlayVideoEnded]
Ending playback due to AirPlay failure
 externalPlaybackActive 
 outputObscuredDueToInsufficientExternalProtection 
 rate
 playbackBufferEmpty 
 playbackBufferFull 
 playbackLikelyToKeepUp 
 status 
 %ld
 canPlayFastForward 
 canPlayFastReverse 
%{public}@:%d
%{public}@ _audioSessionMediaServicesWereResetNotification:
%{public}@ %{public}@: with item: %{public}@ currentItem: %{public}@
applying throttled index change of %ld tracks
_verifyDisplayProtection
    ignoring because state is %d
 insufficient external protection
External playback configuration [override #2] - externalPlaybackUnsupportedReason: %{public}@ => wantsExternalPlayback: %{BOOL}u
External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
BackgroundTask: End assertion (%lli) at %{public}s:%d
MPAVController: %p: setQueueController: %{public}@
END SEEKING: %ld
- Registering for AVItem notifications from %{public}@
-- Asset loaded with player item: %{public}@
 Registering %{public}@ for double observation on %{public}@ (%{public}@)
Taking autoplay background task assertion.
Ending autoplay background task.
Scheduling autoplay background task assertion ending...
Scheduled autoplay background task assertion is no longer relevant.
Ending autoplay background task from timing out waiting for likely to keep up.
Skipping autoplay, disabled (for current item: %d, on player: %d, state: %ld)
Likely to keep up or full buffer: %d
Skipping autoplay, not enough buffered to keep up.
BackgroundTask: End assertion (%lli) at %s:%d
BackgroundTask: Took assertion (%lli) for playback stall
Disabling autoplay after buffer stall timeout
Setting actionAtItemEnd to %ld for state %ld
 MPAVController _setState: %ld -> %ld
MPAVController: %p: _pausedDuringInterruption=NO [state changed from interrupted]
%{public}@ %{public}@: called with item: %{public}@ with asset loaded: %{public}@ and therefore player item: %{public}@
 _inflightSeekRate already set, which means multiple setRate:error: calls have been made before a _rateDidChange: was received
SCAN: Rate: %f, Interval: %f
Delayed time time change fired: %f
Found pictureType: %{public}@
Created image of size: %{public}@
Using %{public}@ to resolve error %{public}@
Playback failed with error: %{public}@, not resolving (canResolve: %{public}@, allowsItemErrorResolution: %{public}@)
Resolution for item %{public}@ resolved error: %{public}@ with resolution error: %{public}@
Resolution for item %{public}@ could not resolve error: %{public}@ with resolution error: %{public}@
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
MPAVController: %p: Pausing [UIApp isSuspendedUnderLock]
MPAVController: %p: Pausing [application state]
_resumePlaybackIfNecessary
AVController: queue boundary, ending playback [%{public}@]
[MPRadioController] Connection interrupted.
[MPRadioController] Connection invalidated.
[TelevisionRoutingDataSource] Beginning discovery using controller: %{public}@
[TelevisionRoutingDataSource] Ending discovery with controller: %{public}@
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u
RPQ: initWithMediaRemotePlaybackQueue: [library] library=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=bplist query=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf protobuf=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf query=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [query] source=protobuf query=(null)
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip multiverseIdentifier=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip firstItem=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=mip firstItem=(null)
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid pid=%lld
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid firstItem=%{public}@
RPQ: initWithMediaRemotePlaybackQueue: [firstItem] source=pid firstItem=(null)
RPQ: initWithMediaRemotePlaybackQueue: [shuffle/repeat] shuffle=%{public}@ repeat=%{public}@
userIdentityForMediaRemoteOptions - No user identity data. Using active account.
userIdentityForMediaRemoteOptions -
Cannot decode override user identity. Using active account.
userIdentityForMediaRemoteOptions - Decoded override user identity: %{private}@.
Can't parse because input has unexpected type: %{public}@
Can't parse because %{public}@ property doesn't exist: %{public}@
Can't parse because array doesn't contain anything: %{public}@
Can't parse because %{public}@ property is not of expected (NSArray) type: %{public}@
Can't parse because array first object is not of expected (NSArray) type: %{public}@
Can't parse because %{public}@ property is not of expected (NSDictionary) type: %{public}@
Can't parse because array first object is not of expected (NSDictionary) type: %{public}@
Dropping node without title: %{public}@
Regex cannot be generated from pattern: %{public}@ with error %{public}@
No match found, URL is not supported: %{public}@
countryCode not found in bag
Match didn't capture an identifier: %{public}@
Dropping link without label: %{public}@
Could not register tap handler for status bar override
[MPVolumeSlider] allowUserToExceedEUVolumeLimit
[MPVolumeSlider] Tracked from %f for %{public}@
[MPVolumeSlider] Tracked to %f for %{public}@
[MPVolumeSlider] <%@: %p> setVolumeDataSource: %@
[MPVolumeSlider] volumeControlAvailableDidChange available: %{BOOL}u slider: %{public}@
[MPVolumeSlider] volumeControlCapabilitiesDidChange controller: %{public}@ capabilities:%{public}@
[MPVolumeSlider] EUVolumeLimitDidChange limit: %f slider: %{public}@
[MPVolumeSlider] EUVolumeLimitEnforcedDidChange enforced: %{BOOL}u slider: %{public}@
[MPVolumeSlider] volumeWarningStateDidChange warningState: %li slider: %{public}@
[MPVolumeSlider] Not committing volume change because in optimistic state
[MPVolumeSlider] Committing volume change of: %f
[MPVolumeSlider] volumeValueDidChange %f (coalesced) for %{public}@
MPSetPlaybackQueueCommandEvent: Failed to extract playback queue data from media remote command=%@ options=%@
MPModelLibraryDefaultSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: hasEntityPosition is NO [persistentID not found in entityPersistentIDs] persistentID=%lld
Present remote view controller.
Error occurred while attempting to present remote view controller. %@
%{public}@ updated routes: [%@]
%{public}@ updated picked routes: [%@]
%{public}@ returning single pickedRoute: %{public}@
Audio category override changed to %{public}@
Failed to find symbol with uti: %{public}@ error: %{public}@
Failed to find symbol with model: %{public}@ uti: %{public}@ error: %{public}@
Perform hijack for %@
Do not perform hijack for %@
Hijack - Requesting playbackState for %@
Hijack - playbackState is %{BOOL}u for %@
Hijack - RoutingController %{public}@ Presenting: %{public}@ NowPlaying: %{public}@
Skipping playback checks. Route: %{public}@, playbackDataSource: %{public}@
 %{public}s %{public}@
Failed to pick single route %{public}@ error: %{public}@
Successfully picked single route %{public}@
RCS cancelling in-progress selection %{public}@
RCS pickedRouteDidChange caused us to drop selection %{public}@
RCS pending route timed out %{public}@
RCS ignoring addPendingRoute - route already pending %{public}@
RCS addPendingRoute routing controller missing
RCS addPendingRoute %{public}@
RCS removePendingRoute %{public}@
RCS removePendingRoute routing controller missing
RCS enqueue %{public}@
RCS will use existing selection %{public}@
RCS changing selection in progress from %{public}@ to %{public}@
RCS _dequeueSelectionWhenPossible timed out for selection %{public}@
RCS dequeue %{public}@
RCS failed to process selection: %{public}@ error: %{public}@
RCS _dequeue routing controller missing
RCS successfully processed selection: %{public}@
RCS _processSelection:completion: routing controller missing
RCS cannot add local speaker route. Picked route: %{public}@
RCS cannot add route to routing controller that does not support multiple selection routingController: %{public}@
RCS treating Add as a Set
Set command invoked with >1 route. (localSpeakerRoute=%{BOOL}U|toNonGroupableOutputContext=%{BOOL}U|nonGroupableRoute=%{BOOL}U: %{public}@
RCS set picked route %{public}@
RCS add routes %{public}@
RCS remove routes %{public}@
Encountered unsupported MediaKit type: %@
SOD performWithDatabaseOperations: Media API payload contains collectionPlaylistVersionHash=%{public}@ for type=%{public}@
Encountered unsupported data type in assetURLs [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
Encountered unsupported sinfKind in assets [MediaKit]: sinfKind=%{public}@
Encountered unsupported data type in assets [MediaKit]: flavorStringType=%{public}@ urlStringType=%{public}@ sinfsType=%{public}@ flavorString=%{public}@ urlString=%{public}@
SOD performWithDatabaseOperations: importing [Media API payload] childRelationsCount=%d collectionVersionHash=%{public}@
No valid sinfs in payload
Could not serialize sinfs from payload=%{public}@, error=%{public}@
Missing miniSinf from sinfDictionary=%{public}@
Encountered unexpected media kit relationship parent=%@ type=%@
Encountered unsupported StorePlatform kind: %@
SOD performWithDatabaseOperations: SP payload contains collectionPlaylistVersionHash=%{public}@ for type=%{public}@
Encountered unsupported data type in assetURLs [StorePlatform]: flavorStringType=%{public}@ urlStringType=%{public}@ flavorString=%{public}@ urlString=%{public}@
SOD performWithDatabaseOperations: importing [Platform payload] childRelationsCount=%d collectionVersionHash=%{public}@
Encountered unexpected store platform relationship parent=%@ type=%@
<MPHomeManagerObserver %p> failed to fetch currentUser [HMHomeManager.currentHome=nil]
<MPHomeManagerObserver %p> failed to fetch currentUser [HMHomeManager.currentHome.currentUser=nil]
<MPHomeManagerObserver %p> monitorForCurrentUser: currentUser=nil
<MPHomeManagerObserver %p> userMonitorWithHomeIdentifiers: returning nil [identifiers.count=0]
<MPHomeManagerObserver %p> userMonitorWithHomeIdentifiers: forcing update [no monitor found] homeIdentifiers=%{private}@
<MPHomeManagerObserver %p> homeAccesssoryWithRouteID: No homeAccessory with routeID=%{public}@
<MPHomeManagerObserver %p> currentHomeDidChange from %p to %p
<MPHomeManagerObserver %p> currentUserDidChange from %p to %p
<MPHomeManagerObserver %p> currentUsers.count=0 in currentHome=%p
<MPHomeManagerObserver %p> Removing MPHomeUserMonitor userID=%{private}@ uniqueIdentifier=%{private}@
<MPHomeManagerObserver %p> Adding <MPHomeUserMonitor %p> userID=%{private}@ uniqueIdentifier=%{private}@
<MPHomeManagerObserver %p> currentHomeDidChange:
<MPHomeManagerObserver %p> currentUserDidChange:
<MPHomeManagerObserver %p> homeUsersDidChange:
<MPHomeManagerObserver %p> HMHomeDelegatePrivate homeDidUpdateSoundCheck
<MPHomeManagerObserver %p> HMHomeDelegatePrivate homeDidUpdateAccessControlForCurrentUser
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ homeManagerDidUpdateCurrentHome:
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ didUpdateStatus:%lu
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManagerDidUpdateHomes:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManagerDidUpdatePrimaryHome:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ didAddHome:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManager:%{public}@ didRemoveHome:%{public}@
<MPHomeManagerObserver %p> HMHomeManagerDelegatePrivate homeManagerDidRemoveCurrentAccessory:%{public}@
Failed to add cache playlist to library. %{public}@
Failed to add cache content to library. %{public}@
Cannot create playlist with an empty name
Could not resolve default author display name
No static entity found for provided library: %{public}@ multiverseID: %{public}@
Static entity recovered from included library: %{public}@ multiverseID: %{public}@
No static entity found in library: %{public}@ multiverseID: %{public}@
Unable to find static entity in any library: %{public}@
attempt to *nil* filter predicate to query: %@
Unknown comparison type %ld.
RPQ: -[MPMediaQuery initWithProtobufferDecodableObject:library:] resolving PID predicate multiverseID=%{public}@ library=%{public}@ entity=%{public}@
RPQ: -[MPMediaQuery initWithProtobufferDecodableObject:library:] resolving PID predicate value=%{public}@
BEGIN [%lld]: getRepeatMode 
getRepeatMode
END [%lld]: getRepeatMode 
repeatMode=%ld
BEGIN [%lld]: setRepeatMode repeatMode=%ld
setRepeatMode
END [%lld]: setRepeatMode 
BEGIN [%lld]: getShuffleMode 
getShuffleMode
END [%lld]: getShuffleMode 
shuffleMode=%ld
BEGIN [%lld]: setShuffleMode shuffleMode=%ld
setShuffleMode
END [%lld]: setShuffleMode 
BEGIN [%lld]: setNowPlayingItem 
Failed to set now playing item error: %{public}@
setNowPlayingItem
END [%lld]: setNowPlayingItem 
descriptor=%{public}@
BEGIN [%lld]: setQueue descriptor=%{public}@
setQueue
END [%lld]: setQueue 
BEGIN [%lld]: prependQueueDescriptor descriptor=%{public}@
prependQueueDescriptor failed error: %{public}@
prependQueueDescriptor
END [%lld]: prependQueueDescriptor 
BEGIN [%lld]: appendQueueDescriptor descriptor=%{public}@
appendQueueDescriptor failed error: %{public}@
appendQueueDescriptor
END [%lld]: appendQueueDescriptor 
prepareToPlay short-circuit [already prepared to play]
prepareToPlay failed [no target descriptor]
prepareToPlay:async
BEGIN [%lld]: prepareToPlay:async 
prepareToPlay connected to server, setting queue descriptor
END [%lld]: prepareToPlay:async 
prepareToPlay completed with current target queue descriptor
prepareToPlay completed with past queue descriptor
Failed to prepareToPlay with error: %{public}@
nil server
END [%lld]: prepareToPlay:async nil server
BEGIN [%lld]: skipToNextItem 
skipToNextItem
END [%lld]: skipToNextItem 
BEGIN [%lld]: skipToBeginning 
skipToBeginning
END [%lld]: skipToBeginning 
BEGIN [%lld]: skipToPreviousItem 
skipToPreviousItem
END [%lld]: skipToPreviousItem 
index=%lld
BEGIN [%lld]: nowPlayingAtIndex index=%lld
Failed getting nowPlayingAtIndex: %ld error: %{public}@
nowPlayingAtIndex
END [%lld]: nowPlayingAtIndex 
BEGIN [%lld]: shuffle 
shuffle
END [%lld]: shuffle 
duration=%f
BEGIN [%lld]: pauseWithFadeoutDuration duration=%f
pauseWithFadeoutDuration
END [%lld]: pauseWithFadeoutDuration 
BEGIN [%lld]: skipToBeginningOrPreviousItem 
skipToBeginningOrPreviousItem
END [%lld]: skipToBeginningOrPreviousItem 
prepareToPlay:sync
BEGIN [%lld]: prepareToPlay:sync 
Failed to prepareToPlay error: %{public}@
END [%lld]: prepareToPlay:sync 
BEGIN [%lld]: play 
play
END [%lld]: play 
BEGIN [%lld]: pause 
pause
END [%lld]: pause 
BEGIN [%lld]: stop 
stop
END [%lld]: stop 
time=%g
setCurrentPlaybackTime
BEGIN [%lld]: setCurrentPlaybackTime time=%g
END [%lld]: setCurrentPlaybackTime 
rate=%g
setCurrentPlaybackRate
BEGIN [%lld]: setCurrentPlaybackRate rate=%g
END [%lld]: setCurrentPlaybackRate 
BEGIN [%lld]: beginSeekingForward 
beginSeekingForward
END [%lld]: beginSeekingForward 
BEGIN [%lld]: beginSeekingBackward 
beginSeekingBackward
END [%lld]: beginSeekingBackward 
BEGIN [%lld]: endSeeking 
endSeeking
END [%lld]: endSeeking 
Failed to loadRepresentationForArtworkCatalog with error: %{public}@
MPMusicPlayerController is not available on the simulator
BEGIN [%lld]: getDescriptor 
Failed to get server queue descriptor error: %{public}@
getDescriptor
END [%lld]: getDescriptor 
BEGIN [%lld]: getNowPlaying 
Failed to get server now playing error: %{public}@
getNowPlaying
END [%lld]: getNowPlaying 
BEGIN [%lld]: getTimeSnapshot 
getTimeSnapshot
END [%lld]: getTimeSnapshot 
[MPArtwork] Loaded nil representation -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
[MPArtwork] HALTING -- Error loading artwork for catalog: %{public}@ kind: %ld error: %{public}@
%{public}@ - Singleton
%{public}@ - No pre-existing library for user identity: %@
%{public}@ - New library init called
%{public}@ - New library created for user identity: %@
MPMediaLibraryAuthorizationStatus has not been determined, %{public}@
%{public}@: app not authorized for access
MPMediaLibrary - _mediaLibraryWithUniqueIdentifier: - User change detected between encoding/decoding [recoverable] - Library=%@ - EncodedUser=%@ - DecodedLibraryUser=%@
%{public}@ - Posting notification [%@]
%{public}@ - Related library posting notification [%@]
%p Taking connection assertion: %{public}@
%{public}@ - Active user change completed - Firing notifications for path change
Not authorized, skipping filter predicate application
%p Releasing connection assertion: %{public}@
%p Active assertions: %{public}@
%@ Deferring disconnect due to active assertions: %{public}@
%{public}@ - Notifications - Reading libraryChangeObservers from deviceMediaLibrary
Adding data provider %@
Removing data provider %@
Reloading data provider %@
Reloading data provider for significant change %@
%{public}@: Could not determine UUID string
Could not find playlist for %{public}@ and no creation metadata was provided
Creating playlist for %{public}@
Create playlist failed, not authorized
Cloud createPlaylist for %{public}@ failed: %{public}@
dataProvider: %{public}@ does not allow creating a playlist using the SDK
Imported %{public}@ playlists
Failed to import %{public}@ playlists with error: %{public}@
Unsupported media types (%ld), using MPMediaTypeAny.
MPMediaPickerController must be presented modally.
setAllowsPickingMultipleItems mutually-exclusive with setPicksSingleCollectionEntity
setPicksSingleCollectionEntity mutually-exclusive with setAllowsPickingMultipleItems
Media library access is not authorized. Users need to grant media library access for your app in Settings > Privacy to interact with MPMediaPickerController. Dismissing.
[BackgroundTasks] MPAVQueueCoordinator Expired [%lu]
[BackgroundTasks] MPAVQueueCoordinator Background Task Failed to Start.
[BackgroundTasks] MPAVQueueCoordinator Start [%lu]
[BackgroundTasks] MPAVQueueCoordinator End [%lu]
Removing failed item: %{public}@
item=%{public}@
LoadAsset
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _loadAssetForItem:
Beginning transaction for first item load.
> Loading asset for: %{public}@
< Loaded asset for: %{public}@ [%.2fs]
Dropping asset because %{public}@ is no longer in queue.
Failed loading asset for: %{public}@ [%.2fs]
Committing transaction for first item load.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _loadAssetForItem:
Committing playback transaction because of reload without keeping current item.
+ SYNC ITEMS: [CLEARING]
+ SYNC ITEMS: %{public}@ [keeping current item]
Skipping loading items.
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncItemsWithPreviousItems:
Beginning with active queue depth: %lu
+ SYNC ITEMS: %{public}@%{public}@ -> %{public}@ %{public}@
Updated active queue depth to: %lu
Failed to queue any items.
+ SYNC ITEMS: %{public}@ -> (null) [removal]
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncItemsWithPreviousItems:
Attempting to achieve equilibrium between MP and AV queues
[BackgroundTasks] MPAVQueueCoordinator Begin Background Task: _syncPlayerItems
Clearing loaded asset because it cannot be reused for item: %{public}@
= SYNC PLAYER: Removing %{public}@ because it was not the correct item for the index in the queue.
= SYNC PLAYER: Removing %{public}@ because it was at an index beyond where it should be.
= SYNC PLAYER: %{public}@ was already in player. Making copy.
= SYNC PLAYER: %{public}@ -> %{public}@
= SYNC PLAYER: %{public}@ removed for being beyond active range.
Achieved equilibrium between %{public}@ and %{public}@.
Has not yet achieved equilibrium.
Skipping player sync because we've already achieved equilibrium.
[BackgroundTasks] MPAVQueueCoordinator End Background Task: _syncPlayerItems
+ SYNC ITEMS: [PRUNING] %{public}@
Current Item changed: %{public}@ -> %{public}@
Reloading items due to preferred queue depth change from %lu to %lu
Failed to prerollWithCompletion with error: %{public}@
Failed to beginPlaybackAtHostTime with error: %{public}@
contentItemIDs.count=%llu
BEGIN [%lld]: _mediaItemsForContentItemIDs contentItemIDs.count=%llu
Failed getting nowPlayings for contentItemIDs (count: %llu) error: %{public}@
_mediaItemsForContentItemIDs
END [%lld]: _mediaItemsForContentItemIDs 
applicationMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
BEGIN [%lld]: applicationQueuePlayer:xpc:connect 
applicationController: xpc service connection interrupted
applicationController: xpc service connection invalidated
resumed connection
EVENT [%lld]: applicationQueuePlayer:xpc:connect resumed connection
BEGIN [%lld]: applicationQueuePlayer:xpc:connect:wake 
applicationQueuePlayer:xpc:connect:wake
END [%lld]: applicationQueuePlayer:xpc:connect:wake 
applicationQueuePlayer _establishConnectionIfNeeded timeout [ping did not pong]
applicationMusicPlayer:connect
BEGIN [%lld]: applicationMusicPlayer:connect 
applicationMusicPlayer: failed to get synchronousRemoteObject %{public}@
error=%{public}@
END [%lld]: applicationMusicPlayer:connect error=%{public}@
applicationMusicPlayer: connection invalidated
END [%lld]: applicationMusicPlayer:connect 
applicationQueuePlayer:xpc:connect
END [%lld]: applicationQueuePlayer:xpc:connect 
Content manager initialized, awaiting session status.
Content manager skipping dataSource reload; awaiting context.
Content manager invalidating browsable content...
Content manager beginning to coalesce content item updates.
Content manager stopped coalescing content item updates. Pushing changes, if any.
Warning: -[MPPlayableContentManager setNowPlayingIdentifiers:] nowPlayingIdentifiers cannot be nil. The argument has been replaced with an empty array, please change usage to match this expectation. An assertion will be triggered for apps built on or after the iOS 12.2 SDK.
Content manager updated now playing identifiers. Pushing new identifiers.
[PlayableContentManager] Content item %@ mutated. Enqueueing for update.
Content manager has no available session.
Content manager session connected.
Content manager initializing context.
Content manager setting up media remote endpoint.
Pushing content items update with items: %@
The completion handler for the current %{public}@ procedure has already been called once. You should only call MediaPlayer's completion handler once after servicing the call.
Playback initialization completed at index path: %{public}@, error: %{public}@
Content manager updated limited UI: %@
Updating supported browsable content APIs: %{public}@
Error updating browsable content APIs. MediaRemote error %ld
-beginLoadingChildItemsAtIndexPath:completionHandler: completion handler was released without being called
Loading operation at completed at index path: %{public}@, error: %{public}@
-playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler: completion handler was released without being called
-contentItemForIdentifier:completionHandler: completion handler was released without being called
MPLazySectionedCollection %p: identifiersForItemAtIndexPath dataSource failed to produce identifiers: dataSource=<%{public}@ %p> indexPath=%{public}@
MPLazySectionedCollection %p: identifiersForItemAtIndexPath super failed to produce identifiers: indexPath=%{public}@
RCS cannot remove device route
Can't share audio while in the Car. Route: %{public}@, picked: %{public}@
RCS attempted to select a nil route, ignoring.
RCS user selected: %{public}@
CarPlay connected: %{BOOL}u
Caught exception when updating routingViewController: %@
[MPRemoteRadioController] Connection interrupted.
[MPRemoteRadioController] Connection invalidated.
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: error creating directory at URL %{public}@
MPAbstractNetworkArtworkDataSource: %p setVideoArtworkCacheURL: Can't use videoArtworkCacheURL as cache directory [Non-directory file already exists at path] videoArtworkCacheURL=%{public}@
Artwork request cannot have a size of zero, catalog: %@, representation kind: %ld
%{public}@ Encountered error while requesting artwork for NSURLSessionDataTask: %{public}@. %{public}@
%{public}@ -loadRepresentationOfKind:forArtworkCatalog:completionHandler: %{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: canceled data task [expectedEntrySize > diskCapacity] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld diskCapacity=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: expecting eviction in disk cache - cache will be purged [expectedEntrySize > diskCacheAvailableSize] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld diskCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: canceled data task [expectedEntrySize > memoryCapacity] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld memoryCapacity=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: expecting eviction in memory cache [expectedEntrySize > memoryCacheAvailableSize] dataTask=%{public}@ URL=%{public}@ expectedEntrySize=%lld memoryCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveResponse:completionHandler: Decided on disposition %ld for dataTask: %{public}@. URL=%{public}@.storagePolicy=%lu expectedEntrySize=%lld diskCacheAvailableSize=%lld memoryCacheAvailableSize=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: ignoring data [no loading request associated with data task] task=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: creating data task using accumulatedData.length. %p dataTask=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld accumulatedData.length=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: creating data task using dataRequest.requestedLength. %p dataTask=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld dataRequest.requestedLength=%lu
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:didReceiveData: not responding with data [currentOffset was greater than length] task=%{public}@ currentOffset=%lld, requestedLength=%ld requestedOffset=%lld
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:willCacheResponse:completionHandler: Updating storage policy from %lu to %lu for dataTask: %{public}@. URL=%{public}@.
MPAbstractNetworkArtworkDataSource: -URLSession:dataTask:willCacheResponse:completionHandler: Decided on storage policy %lu for dataTask=%{public}@. responseURL=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: task finished with error: %{public}@ dataTask=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: ignoring data [no loading request associated with data task] task=%{public}@
MPAbstractNetworkArtworkDataSource: -URLSession:task:didCompleteWithError: finished loading request: %p. URL=%{public}@ dataTask=%{public}@
MPAbstractNetworkArtworkDataSource: -resourceLoader:shouldWaitForLoadingOfRequestedResource: starting data task: %{public}@. loadingRequest=%p URL=%{public}@
MPAbstractNetworkArtworkDataSource: -resourceLoader:didCancelLoadingRequest: canceled data task: %{public}@. loadingRequest=%p URL=%{public}@
MPAbstractNetworkArtworkDataSource: _didReceiveMemoryWarningNotification: Reducing video URLCache memory capacity to 0.
MPAbstractNetworkArtworkDataSource: _didReceiveWillEnterForegroundNotification: Increasing video URLCache memory capacity from 0 to default capacity.
[MPArtwork] Asked to cache response for %{public}@, but no size was set.
-[MPMusicPlayerPlayParameters initWithDictionary:] id or kind missing from playParams dictionary. Returning nil.
MPModelLibraryModelSectionedCollectionDataSource %p: indexPathForItemWithIdentifiersIntersectingSet: adjustedSectionIndex not translated [currentSectionPersistentID not found in _allowedSectionPersistentIDs] adjustedSectionIndex=%zu currentSectionPersistentID=%lld
Error fetching store content for item add. %{public}@
Parsing track data...
Importing %lu tracks...
Adding %llu store items to library (also add to cloud library: %d): %{public}@
Successfully imported track data.
Adding %lld to cloud library...
Error adding track(s) to cloud library. %{public}@
Successfully added track(s) to cloud library.
Failed to import track data. %{public}@
Successfully added playlist to cloud library.
Failed to add global playlist to cloud library. %{public}@
import global playlist with id %@ - add to cloud library: %s...
Fetching global playlists with IDs %{public}@...
Found playlist data for %{public}@
Did not find playlist data for %{public}@
Successfully imported playlist data. Imported tracks: %@
found container_pid:%lld for global playlistid:%{public}@
Error importing playlist data.
Error fetching playlist data. %{public}@
Updating Loved Playlist with likedState=%d for trackID=%lld
71542113: setting time stamp for content taste change=%lld
entityClass %@ (groupingType = %ld) has no ML3Property for MPProperty %@
Disabled keep_local on %lu tracks with status:%d for collection:%lld
Cancelled keep_local on %lu tracks with status:%d for collection: %lld
Cleared keep_local on %lu tracks with status:%d for collection:%lld
Cleared keep_local_status for collection %lld with status:%d
Disabled keep_local on %lu tracks with status:%d for playlist:%lld
Cancelled keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local_status for playlist %lld with status:%d
While setting library filter predicates, caught exception %{public}@ trying to read media library
BackgroundTask: Took assertion (%lli) at %{public}s:%d
Unexpected content rating format: %@
Created timer to coalesce MPMediaLibraryEntitiesAddedOrRemovedNotification
Posting MPMediaLibraryEntitiesAddedOrRemovedNotification
Postponing MPMediaLibraryEntitiesAddedOrRemovedNotification timer due to continued notifications
Received cloud library availability did change notification
checking test media folder: %{public}@ -- %{public}@
no fallback test audio file found [TestAudio.<foo>]
no fallback test video file found [TestVideo.<foo>]
NOTE: Mapping file %@ to path %@
Requesting artwork for %lld - %@
Received artwork for %lld - %@
Skipping artwork fetch for %lld - %@
Unable to create orderingTerms for properties: %@
no ML3 collection query for grouping type %@, using items query
Cannot filter search string by %@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [unpersonalizedContentDescriptors did not contain MPStoreLibraryPersonalizationContentDescriptor] indexPath=%{public}@ possibleObject=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [effectiveOriginalObject has no identifiers] indexPath=%{public}@ effectiveOriginalObject=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [libraryIdentifiers unionSet: failed] indexPath=%{public}@ libraryIdentifiers=%{public}@ originalIdentifiers=%{public}@
MPStoreLibraryPersonalizationCollectionDataSource %p: identifiersForItemAtIndexPath returning MPIdentifierSet.emptyIdentifierSet [originalObject has no identifiers] indexPath=%{public}@ originalObject=%{public}@
MPModelLibrarySearchRequestOperation: NULL utf8 from string: '%{public}@'
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addItemWithSagaID:toPlaylistWithPersistentID:completionHandler: completed.
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler: completed.
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed. error: %{public}@
-setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler: completed.
[HardwareButtonController] Volume dataSource changed to: %{public}@
[HardwareButtonController] Committing volume change to: %f
[HardwareButtonController] Received hardware volume event: %{public}@, pressed: %{BOOL}u
[MPArtwork] Failed to create directory at '%{public}@' with error: %{public}@
[MPArtwork] Could not write resized image to %{public}@: Failed to finalize CGImageDestination
Begin optimistic state with %lu individual sliders
MPVolumeGroupSliderCoordinator changing %f to %f for %{public}@
End optimistic state.
Committing optimistic values
Do not update optimistic value cache since master volume was set to 0.
+MPMediaLibrarySystemFilters - filtersForLibrary: %@ - filters:%@
MPMediaLibrarySystemFilters %p - Init with library: %@
MPMediaLibrarySystemFilters %p - Updating filters - Library: %@ - has cloud library revision: %{BOOL}u - purchase history excluded: %{BOOL}u
MPMediaAPICollectionItemAuthTokenRenewalRequest %p starting with requestIDs=%d, isCancelled=%{BOOL}u
MPMediaAPICollectionItemAuthTokenRenewalRequest %p cannot load metadata for identifier=%{public}@ (missing storeID)
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load bag for request context. error=%{public}@
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load value for domain configuration
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load value for default domain
MPMediaAPICollectionItemAuthTokenRenewalRequest %p could not load value for country code
MPMediaAPICollectionItemAuthTokenRenewalRequest %p setting halfLifeDuration=%f seconds
MPMediaAPICollectionItemAuthTokenRenewalRequest %p request was cancelled
MPMediaAPICollectionItemAuthTokenRenewalRequest %p starting renewal request for %d itemIdentifiers
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with error=%{public}@, statusCode=%d, responseDictionary=%p
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with statusCode=%d, responseDictionary=%p, isFinalResponse=%{BOOL}u
[PlaybackUserDefaults] autoPlayEnabledForUserIdentity: %{BOOL}u userIdentity=%{public}@
[PlaybackUserDefaults] setAutoPlayEnabled:forUserIdentity: %{BOOL}u userIdentity=%{public}@
[PlaybackUserDefaults] setSoundCheckEnable: %{BOOL}u
MPPlaybackUserDefaults: _loadAccountProperties: getPropertiesForUserIdentity: identity=%{public}@ error: %{public}@
Attempting to setSystemVolumeHUDEnabled for application that supports UIScene lifecycle (enabled: %{BOOL}u | category: %{public}@ | volumeDisplays: %{public}@)
systemMusicPlayer playbackState returning paused due to cached data
disabled=%{BOOL}u
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
openToPlayQueueDescriptor
openToPlayQueueDescriptor:prepare
openToPlayQueueDescriptor: failed [prepare failed] error=%{public}@
openToPlayQueueDescriptor:openURL
success=%{BOOL}u
openToPlayQueueDescriptor: failed [open URL failed]
failed to open URL
systemMusicPlayer _establishConnectionIfNeeded failed [
 denied due to authorization status]
systemMusicPlayer _establishConnectionIfNeeded failed [application not installed]
systemMusicPlayer connection interrupted
systemMusicPlayer connection invalidated
systemMusicPlayer _establishConnectionIfNeeded timeout [ping did not pong]
woke=%{BOOL}u
systemMusicPlayer:connect
%{public}@ instantiated parser: %{public}@.
No country code found in bag, can't create storefront endpoint URL
No music subscription dictionary in bag, can't get subscription properties to generate URL
No grouping name in music subscription dictionary of bag, can't generate URL pointing to right grouping: %{public}@
%{public}@ - Request for a controller with user identity %@
%{public}@ - No pre-existing controller for user identity %@
%{public}@ - Creating new controller for user identity %@
%{public}@ - New instance created for user identity: %@
%{public}@ - Received notification [%{public}@]
%{public}@ - Received notification [ICCloudClientIsAuthenticatedDidChangeNotification]
%{public}@ - Error retrieving user identity properties [Processing identity change] - identity=%@ - error=%{public}@
%{public}@ - Cloud library status changed [%ld -> %ld] - Posting MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
%{public}@ - Related controller posting notification [%@]
%{public}@ - beginObservingCloudLibraryEnabled - Registering for ICCloudClientIsAuthenticatedDidChangeNotification
%{public}@ - endObservingCloudLibraryEnabled - Unregistering for ICCloudClientIsAuthenticatedDidChangeNotification
[MPStoreItemImportTrackData] Unknown import property for metadata key %{public}@
[InfoCenter] <%@: %p (%@)> invalidated
MPNowPlayingInfoCenter becoming active system fallback
MPNowPlayingInfoCenter became active system fallback error: %{public}@
MPNowPlayingInfoCenter became active system fallback
MPNowPlayingInfoCenter resigned active system fallback error: %{public}@
MPNowPlayingInfoCenter resigned active system fallback
becomeActivePlayer: %{public}@ failed %{public}@
becomeActivePlayer: %{public}@
becomeActivePlayerIfPossible: %{public}@ error: %{public}@
becomeActivePlayerIfPossible: %{public}@
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue ignored [infoCenter was invalidated]
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue [nowPlayingItemDidChange] %{public}@ -> %{public}@
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue [identifiersDidChange]
[InfoCenter] <%@: %p (%@)> invalidatePlaybackQueue [no change detected]
Using deprecated -contentItemForOffset: playback queue datasource.
Using deprecated contentItem-based artwork.
[InfoCenter] <%@: %p (%@)> Content item mutated [already enqueued for update]: %{public}@
[InfoCenter] <%@: %p (%@)> Content item mutated: %{public}@
[InfoCenter] <%@: %p (%@)> sending content item changed: %{public}@
[InfoCenter] <%@: %p (%@)> sending content items changed: %{public}@
NPIC: setNowPlayingInfo: sending to MediaRemote
NPIC: setNowPlayingInfo: finished error: %{public}@
NPIC: setNowPlayingInfo: finished
[MPHomeSharingML3DataProvider] [Browse] Found library %{public}@
[MPHomeSharingML3DataProvider] [Browse] Added %{public}@
[MPHomeSharingML3DataProvider] [Browse] Browser: %{public}@ Removed %{public}@
[MPHomeSharingML3DataProvider] [Browse] Beginning scan.
[MPHomeSharingML3DataProvider] [Browse] Group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID, skipping scan.
[MPHomeSharingML3DataProvider] [Browse] Searching for libraries in home sharing group: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Ending scan.
[MPHomeSharingML3DataProvider] Removing oldest cached library: %{public}@
[MPHomeSharingML3DataProvider] Sending request '%{public}@'
[MPHomeSharingML3DataProvider] Setting property '%{public}@' to '%{public}@' returned status code %lu
[MPHomeSharingML3DataProvider] Creating error resolver for item ID: %llu, account ID: %llu, rental ID: %llu
[MPHomeSharingML3DataProvider] Creating error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
Cannot create error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Creating error resolver for account ID: %llu, token data length: %lu
Cannot create error resolver for media item: %{public}@ (accountID: %llu, tokenData: %llu bytes)
Updating rental playback start date
[MPHomeSharingML3DataProvider] Home sharing group ID changed to: %{public}@
%{public}@: Failure to update shared library: %{public}@
[MPHomeSharingML3DataProvider] Home Sharing Library became unavailable: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID known, trying to determine it from user defaults account / password.
[MPHomeSharingML3DataProvider] Determined group ID: %{public}@
Could not populate container %{public}@: %{public}@
[MPHomeSharingURLProtocol] Starting loading for %{public}@
[MPArtwork] Failed to deprioritize artwork request %{public}@ 
 unknown artwork source type
SOD: databasePath: %{public}@
SOD: Unable to create server objects database at path=%{public}@ error=%{public}@
SOD: modelObjectMatchingIdentifierSet jsonError: %{public}@
SOD: modelObjectMatchingIdentifierSet: updating identifiers [auth token backfilled from SOD] modelObject=%p updatedIdentifiers=%{public}@
SOD: purgeGlideSubscriptionDataForHashedAccoundID [missing personID]
SOD: purgeGlideSubscriptionDataForHashedAccoundID error=%{public}@
SOD: relatedIdentifierSetsForParentIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: relatedIdentifierSetsForParentIdentifierSet stepError: %{public}@
SOD: will renew playbackAuthorizationToken for identifiers=%{public}@
SOD: enumerateAssetsMissingSINFsUsingBlock stepError: %{public}@
SOD: payloadForRelatedEntityWithIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: payloadForRelatedEntityWithIdentifierSet stepError: %{public}@
SOD: payloadForRelatedEntityWithIdentifierSet jsonError: %{public}@
SOD: Unable to create database schema. Attempting fallback to in-memory database.
SOD: Unable to create objects table. error: %{public}@
SOD: Unable to create assets table. error: %{public}@
SOD: Unable to create object relationships table. error: %{public}@
SOD: Unable to create playback authorzation token table. error: %{public}@
SOD: modelObjectMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: modelObjectMatchingIdentifierSet stepError: %{public}@
SOD: playbackAuthorizationToken=%{public}@ for itemIdentifier=%{public}@
SOD: Unable to create statements. error: %{public}@
SOD: importObject: stepError: %{public}@
SOD: importObject: jsonError: %{public}@ payload=%{public}@
SOD: importObject: imported object [success] source=%{public}@ identifier=%{public}@ type=%{public}@
SOD: insertObjectError: %{public}@
SOD: importAssetURL: updating URL [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetURL: skipping [existing asset already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetURL: failed [SQL error] upsertAssetError=%{public}@
SOD: importAssetSinf: [success] type=miniSinf identifier=%{public}@ person=%{public}@
SOD: importAssetSinf: skipping [existing miniSinf already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetSinf: [success] type=fullSinf identifier=%{public}@ person=%{public}@
SOD: importAssetSinf: skipping [existing fullSinf already in database] id=%{public}@ / flavor=%{public}@
SOD: importAssetSinf: skipping [asset does not exist] identifiers=%{public}@ flavor=%d sinfType=%d
SOD: importPlaybackAuthorizationToken: %{public}@
SOD: importing playbackAuthorizationToken=%{public}@ for identifier=%{public}@ expirationDate=%{public}@ trustID=%{public}@ finished with error=%{public}@
SOD: relateIdentifiers:toParentIdentifiers:order: %{public}@
SOD: removeRelationshipsForParentIdentifiersError: %{public}@
SOD: importAssetMiniSINF: update failed error=%{public}@
SOD: importAssetFullSINF: update failed error=%{public}@
SOD: _existingAssetMatchingIdentifier stepError: %{public}@
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet [missing personID, defaulting to 'Unknown-PersonID']
SOD: _MPServerObjectDatabaseAssetsMatchingIdentifierSet query='%{public}@' stepError=%{public}@
[MPHomeSharingRentalTracker] Loading rentals from %{public}@
[MPHomeSharingRentalTracker] Adding rental with item ID: %llu, database ID: %{public}@
[MPHomeSharingRentalTracker] Removing rental with item ID: %{public}@
[MPHomeSharingRentalTracker] iTunes rental checkout response: %{public}@
Failed iTunes side checkout request (response code = %lu)
Failed to checkin rental to iTunes Store.
[MPHomeSharingRentalTracker] Removing all rentals for database ID: %{public}@
[MPHomeSharingRentalTracker] Saving rentals to %{public}@
Recommendation item should be a dictionary: %{public}@
Recommendation item modeling failure: %{public}@
Property href of contents dictionary not found for recommendation item: %{public}@
Contents dictionary not found on relationships of recommendation item: %{public}@
Relationships dictionary not found on recommendation item: %{public}@
Property href not found for recommendation item: %{public}@
Unexpected trait type %{public}@
No traits array found in attributes of recommendation item: %{public}@
Dropping empty node: %{public}@
[MPHomeSharingErrorResolver] Reconnecting to HomeSharing Library for error: %{public}@
[MPHomeSharingErrorResolver] Token response: %{public}@
[MPHomeSharingErrorResolver] Got keybag data of length: %lu
[MPHomeSharingErrorResolver] Got token data of length: %lu
Updated launch commands error: %{public}@
Updated launch commands
<%@: %p (%@)> invalidated
<%@: %p (%@)> property mutated after invalidated: %@
<%@: %p (%@)> RCC: dispatchCommandEvent: ignoring [command center was invalidated] event=%p
<%@: %p (%@)> RCC: dispatchCommandEvent: received nil commandEvent
<%@: %p (%@)> RCC: dispatchCommandEvent: failing [command center was invalidated] - command=%{public}@ event=%p
<%@: %p (%@)> RCC: dispatchCommandEvent: command=%{public}@ event=%p
commandType=%ld
CommandDispatch
<%@: %p (%@)> RCC: dispatchCommandEvent: command finished command=%{public}@ event=%p
[RCC] _updateCanBeNowPlayingApplicationIfNeeded: canBeNowPlayingApplication=%{BOOL}u playerPath=%{public}@ commands=%{public}@
<%@: %p (%@)> [MPRemoteCommandCenter] setSupportedCommands %{public}@
Error setting supported commands error: %{public}@
[MPHomeSharingRentalErrorResolver] Checking in rental on iTunes side with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental for rental ID: %llu, account ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in failed
[MPHomeSharingRentalErrorResolver] Rental checkout failed: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental on iTunes side after failure with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental checkout response: %{public}@
[MPHomeSharingRentalErrorResolver] Rental checkout finished
[MPHomeSharingRentalErrorResolver] iTunes set rental playback start date response: %{public}@
%{public}@ - Skipping all properties for setPlaylistProperties:trackList:forPlaylist:completionHandler: %@
%{public}@ - Skipping all properties for setItemProperties:forSagaID: %@
[CloudPersonalization] Deprioritize artwork request not supported for artworkType=%ld, sourceType=%ld
%{public}@ - reason=%d, disableCloudLibraryReason=%d
%{public}@ - Skipping all properties for setItemProperties:forPurchaseHistoryID: %{public}@
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Requesting cloud authentication state [cloudEnabled=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Retrieved cloud authentication state [isAuthenticated=%{BOOL}u]
%{public}@ - _loadIsSagaAuthenticatedWithCompletion: - Cloud authentication did change [%{BOOL}u -> %{BOOL}u] - Posting notifications [MPCloudControllerIsCloudEnabledDidChangeNotification]
%{public}@ - isCloudEnabled=%d, didHandleStateChange=%d
%{public}@ - _initializeUpdateInProgressState - Setting up Saga update progress handler
%{public}@ - Setting CloudLibraryUpdateInProgress to %{BOOL}u CloudLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Saga]
%{public}@ - _initializeUpdateInProgressState - Setting up Jalisco update progress handler
%{public}@ - Setting JaliscoLibraryUpdateInProgress to %{BOOL}u JaliscoLibraryInitialImport to %{BOOL}u - Posting MPCloudControllerIsUpdateInProgressDidChangeNotification [Jalisco]
%{public}@ - _becomeActiveAndWaitUntilDone: - Activating
%{public}@ - _resignActive - Resigning
%{public}@ - _resignActive - Removing update handlers on inactive account
%{public}@ - Received notification [%@]
[MPCloudController] Failed to find ML3 equivalent for property: %{public}@
NULL image being analyzed.
Zero-sized image being analyzed.
MP->AV QueuePlayer Log Mapping: %{public}@ -> %{public}@
 MPQueuePlayer currentItem changed: %{public}@ -> %{public}@
 MPQueuePlayer rate changed: %f -> %f
 MPQueuePlayer item status changed: %{public}@ -> %{public}@
 insufficient external protection changed
Beginning playback queue transaction.
Setting rate to 0 for playback queue transaction.
Committing playback queue transaction, %lu queued operations.
Restoring rate to %f after playback queue transaction.
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (not enqueued)
Setting rate on AVQueuePlayer: %f
Ignoring requested rate (%f), route changed during playback queue transaction.
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (enqueued)
[{public}%@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (not enqueued)
 AVPlayerCurrentItemDidChangeNotification
Setting default EQ to %ld
%{public}@ was paused for playback queue transaction, but route changed. Not resuming after playback queue transaction commits.
%{public}@: Got bag from server environment %{public}@ with correlation key %{public}@.
Determined average bitrate for %{public}@: %f
Determined effective cloud network type: %ld
RRC %{public}@: Ending automatic reloading [dealloc]
RRC %{public}@: Canceling request [request changed]
RRC %{public}@: Needs reload [request changed]
RRC %{public}@: Reloading [automatic, request changed]
RRC %{public}@: Removing observer for %p
RRC %{public}@: Updating response to %p
RRC %{public}@: Needs reload [response invalid before -setResponse:]
RRC %{public}@: Reloading [response invalid before -setResponse:]
RRC %{public}@: Adding observer for %p
RRC %{public}@: Needs reload [response invalid before -setResponse: after adding observer]
RRC %{public}@: Reloading [response invalid before -setResponse: after adding observer]
RRC %{public}@: Starting automatic reloading
RRC %{public}@: Reloading [automatic, beginLoading]
RRC %{public}@: Ending automatic reloading
RRC %{public}@: Needs reload [request by client]
RRC %{public}@: Canceling request [request by client]
RRC %{public}@: Reloading [automatic, requested by client]
RRC %{public}@: Deferring clearing of %p to delegate %p
RRC %{public}@: Delegate %p timeout replacing response.
RRC %{public}@: Delegate %p clearing response with %p
RRC %{public}@: Clearing response
RRC %{public}@: Reloading [requested by client]
RRC %{public}@: Needs reload [response invalid]
RRC %{public}@: Reloading [automatic, response invalid]
RRC %{public}@: Reloading [retry, failed request]
RRC %{public}@: Scheduled reload skipped.
RRC %{public}@: Request loading skipped [no request]
RRC %{public}@: Request loading skipped [already loading]
RRC %{public}@: Request loading skipped [not needed]
RRC <%{public}@ %p>: Request finished loading
RRC <%{public}@ %p>: Request failed with error: %{public}@
RRC <%{public}@ %p>: Recovering from error. shouldRetry: %d
RRC <%{public}@ %p>: Delegate %p returned shouldRetry: %d
RRC <%{public}@ %p>: Needs reload [failed request]
RRC <%{public}@ %p>: Scheduling retry after %fs
RRC <%{public}@ %p>: Deferring replacement of %p to delegate %p
RRC <%{public}@ %p>: Delegate %p timeout replacing response.
RRC <%{public}@ %p>: Delegate %p replacing response with %p
RRC <%{public}@ %p>: Replacing response
RRC %{public}@: Reloading [retry mismatched request revision]
No domains in music common dictionary of bag, can't generate URL: %{public}@
No host found for API domain requested (%{public}@): %{public}@
No music subscription dictionary in bag, can't get allowed FCKinds for CarPlay
CarPlay FCKinds allow list not found in musicSubscription dictionary, wrongly typed or empty: %{public}@
Encountered negative FCKind in CarPlay FCKinds allow list in bag, dropping it: %{public}@
Dropping node because parent requires displaying utterance and no utterance was found in item dictionary: %{public}@
section=%{public}@
SIL-Replace
SIL-Replace-Enumerate
SIL-Replace-Reload
SIL-Proxy %{public}@: init sil=%{public}@ itemsCount=%lld
SIL-Proxy %{public}@: insertItemsAtHead itemsCount=%lld
SIL-Proxy %{public}@: insertItems:afterItem: afterItem=%{public}@ itemsCount=%lld
SIL-Proxy %{public}@: insertItemsAtTail itemsCount=%lld
SIL-Proxy %{public}@: moveItemToHead item=%{public}@
SIL-Proxy %{public}@: moveItem:afterItem: item=%{public}@ afterItem=%{public}@
SIL-Proxy %{public}@: moveItemToTail item=%{public}@
SIL-Proxy %{public}@: removeItem item=%{public}@
SIL-Proxy %{public}@: updateSection
SIL-Proxy %{public}@: updateItem item=%{public}@
Started observing routing context UID changes for app bundle: %{public}@
Start prewarming remote view controller. Configuration : %{public}@
Stop prewarming remote view controller.
Dismissing remote view controller at app's request.
Received request to accept new connection.
Connection to remote view controller invalidated.
Connection established to remote view controller.
MediaControls dismissed with reason : %@
Updating remote view controller routing context UID : %{public}@
%{public}s: Changing %{public}@ preference to %{BOOL}u.
<%{public}@: %p>_targetSessionID setting target session ID = %{public}d
<%{public}@: %p> setting routing context UID = %{public}@
[EndpointRoutingDataSource] Route search failed with error: %@
[EndpointRoutingDataSource] Successfully found and picked route.
Cannot post _MPContentItemDidChangeNotification, item is missing required identifier.
Received artwork with length %llu for content item %@.
<_MPActiveUserChangeMonitor %p> - Ingesting notification %{public}@ [%ld of %ld]
<_MPActiveUserChangeMonitor %p> - Firing notification timer %p [%ld of %ld notifications received] - received=[%{public}@] - expected=[%{public}@]
<_MPActiveUserChangeMonitor %p> - Started notification timer %p
<_MPActiveUserChangeMonitor %p> - Canceled notification timer %p [%{public}@]
Unsupported action method signature. Must return MPRemoteCommandHandlerStatus or take a completion handler as the second argument. ** This will break in a future release. **
RCC: Command handler completion timeout. Not waiting on completion. event=%{public}@
RCC: invokeCommandWithEvent: handler=%{public}@ event=%{public}@
RCC: invokeCommandWithEvent: finished handler=%{public}@ event=%p
Did not find playlist for identifiers: %{public}@
Created new application output context: %{public}@ for data source: %{public}@
<%{public}@:%p> setting routing context UID = %{public}@
<%{public}@:%p> Setting predicted device: %@
Found picked device with nil UID: %{public}@
Found discovery device with nil UID: %{public}@
picked endpoint route, set devices: %{public}@
picked endpoint route, clear system endpoint: %{public}@
Output device UIDs determined to be available. Output devices from AVODDS will no longer be ignored.
Output device UIDs determined to be unavailable. Output devices from AVODDS will be ignored.
Reset predicted outputDevice
<%{public}@: %p> Personal devices changed from %{public}@, to: %{public}@
<%{public}@: %p> External device: %{public}@ changed endpoint to: %{public}@
MPMediaAPICollectionItemMetadataRequest %p starting with requestIDs=%d, isCancelled=%{BOOL}u
MPMediaAPICollectionItemMetadataRequest %p cannot load metadata for identifier=%{public}@ (missing storeID)
MPMediaAPICollectionItemMetadataRequest %p could not load bag for request context. error=%{public}@
MPMediaAPICollectionItemMetadataRequest %p could not load value for domain configuration
MPMediaAPICollectionItemMetadataRequest %p could not load value for default domain
MPMediaAPICollectionItemMetadataRequest %p could not load value for country code
MPMediaAPICollectionItemMetadataRequest %p setting halfLifeDuration=%f seconds
MPMediaAPICollectionItemMetadataRequest %p request was cancelled
MPMediaAPICollectionItemMetadataRequest %p starting import request for %d itemIdentifiers
MPMediaAPICollectionItemMetadataRequest %p finished with error=%{public}@, statusCode=%d, responseDictionary=%p
MPMediaAPICollectionItemMetadataRequest %p finished with statusCode=%d, responseDictionary=%p, isFinalResponse=%{BOOL}u
[MPHomeMonitor setupIfNecessary:] <MPHomeMonitor %p> %@
[MPHomeMonitor setupIfNecessary:] Ignoring - Device is not valid home accessory
MPHomeMonitor initialized for non-valid accessory
<MPHomeMonitor %p> Posting Notification: %@
[BaseRoutingDataSource] Unpicking AirPlay AV routes...
[BaseRoutingDataSource] Failed to unpick AirPlay AV routes: %{public}@
[BaseRoutingDataSource] Successfully unpicked AirPlay AV routes
[BaseRoutingDataSource] Received external screen type did change notification with screen type = %ld
[BaseRoutingDataSource] Received active audio route did change notification: %{public}@
[BaseRoutingDataSource] Active audio category changed from %{public}@ to %{public}@
[MPHomeUserMonitor userMonitorWithUserIdentity:fromUserIdentityStore:] identityProperties=nil
[MPHomeUserMonitor userMonitorWithUserIdentity:fromUserIdentityStore:] userMonitor=nil
MPHomeUserMonitor.isExplicitSettingEnabledForCurrentUser returning fallback value=%{BOOL}u [monitorForCurrentUser=nil]
[MPHomeUserMonitor setExplicitSettingEnabledForCurrentUser:] failed to set explicitSettingEnabled=%{BOOL}u [monitorForCurrentUser=nil]
MPHomeUserMonitor.isPrivateListeningEnabledForCurrentUserAndAccessory returning fallback value=%{BOOL}u [monitorForCurrentUser=nil]
[MPHomeUserMonitor setPrivateListeningEnabledForCurrentUserAndAccessory:] failed to set privateListeningEnabled=%{BOOL}u [monitorForCurrentUser=nil]
<MPHomeUserMonitor %p> HMSetting "%{public}@" failed to update. shouldAllowExplicit=%{BOOOL}u error=%{public}@
<MPHomeUserMonitor %p> _loadAllowExplicitValueFromSetting: failed [invalid setting]
<MPHomeUserMonitor %p> _loadAllowExplicitValueFromSetting: userID=%{private}@ cachedValue=%{BOOL}u newValue=%{BOOL}u
[<MPHomeUserMonitor %p> _loadCurrentAccessoryPrivateListening:] updating value privateListeningEnabled=%{BOOL}u for userID=%{private}@
[<MPHomeUserMonitor %p> posting notification: %{public}@
<MPHomeUserMonitor %p> HMSettingsDelegate settingsDidUpdate
<MPHomeUserMonitor %p> HMUserDelegatePrivate user:didUpdateUserListeningHistoryUpdateControl:forHome:
_isValidSetting() setting=nil
_isValidSetting() invalid setting.keypath. Expected:%{public}@ Found:%{public}@
_isValidSetting() setting with keypath=%{public}@ valueClass=nil. Returning isValid=YES
_isValidSetting() invalid setting.valueClass. Expected:%{public}@ Found:%{public}@
Failed to decode cached now playing error: %{public}@
Failed to encode cached now playing error: %{public}@
Failed to decode cached queue descriptor error: %{public}@
Failed to encode cached queue descriptor error: %{public}@
Omitting library IDs [missing databaseID] identifierSet=%{public}@
Omitting personalizedStore IDs [missing databaseID] identifierSet=%{public}@
Setting local endpoint volume to: %f
Setting AVSystemController volume to: %f
Adjusting local endpoint volume by: %f
%@ setOutputDeviceVolume: %@ to: %f for endpoint: %@
%@ Error setting output device volume: %{public}@
%@ setVolume to: %f endpoint: %@
%@ Error setting group volume: %{public}@
%@ initializeVolume - volume will change to %f
%@ initializeVolume - volume capabilities will change to %{public}@
%@ initializeVolume
%@ initializeVolume - Error getting output device volume control capabilities: %{public}@
%@ initializeVolume - Error getting output device volume: %{public}@
%@ initializeVolume - Error getting group volume control capabilities: %{public}@
%@ initializeVolume - Error getting master volume: %{public}@
%@ didChangeVolumeCapabilities %{public}@
%@ Error getting output device volume: %{public}@
%@ Error getting master volume: %{public}@
%@ didChangeVolume %f
Cancelled downloads %{public}@ error: %{public}@
Cancelled downloads %{public}@
Failed to cancel downloads %{public}@ with error %{public}@
Cancelled purchases %{public}@, result %d error: %{public}@
Cancelled purchases %{public}@, result %d
Failed to cancel purchases %{public}@ with error %{public}@
Paused downloads %{public}@ error: %{public}@
Paused downloads %{public}@
Caneled purchases %{public}@ error: %{public}@
Caneled purchases %{public}@
Failed to pause downloads %{public}@ with error %{public}@
Failed to resume downloads %{public}@ with error %{public}@
Failed to restart downloads %{public}@ with error %{public}@
Finished attempted restart with removed downloads: %{public}@
Failed to move download: %{public}@ with error: %{public}@
Failed to move purchase: %{public}@ with error: %{public}@
[%{public}@] UNKNOWN PURCHASE TYPE: %li
Download did change %{public}@ with no existing download.
Download did change: %{public}@. Download: %{public}@
Download states did change: %{public}@, progressed downloads: %{public}@, added downloads: %{public}@, finished: %{public}@
MPMediaAPICollectionMetadataRequest %p starting with type=%d, isCancelled=%{BOOL}u
MPMediaAPICollectionMetadataRequest %p could not load bag for request context. error=%{public}@
MPMediaAPICollectionMetadataRequest %p could not load value for domain configuration
MPMediaAPICollectionMetadataRequest %p could not load value for default domain
MPMediaAPICollectionMetadataRequest %p could not load value for country code
MPMediaAPICollectionMetadataRequest %p setting halfLifeDuration=%f seconds
MPMediaAPICollectionMetadataRequest %p request was cancelled
MPMediaAPICollectionMetadataRequest %p starting import request for collectionID=%{public}@ type=%d
MPMediaAPICollectionMetadataRequest %p finished with error=%{public}@, statusCode=%d, responseDictionary=%p
softlink:r:path:/System/Library/PrivateFrameworks/HomeKit.framework/HomeKit
softlink:r:path:/System/Library/PrivateFrameworks/HomeKit.framework/HomeKit
NSFastEnumeration
MPModelStoreBrowseContentItemBuilder
MPMediaDownloadManager
MPModelForYouRecommendationsMusicKitRequestOperation
MPMediaControlsConfiguration
NSSecureCoding
NSCoding
NSCopying
MPStoreSocialUnblockOperationDataSource
MPStoreSocialRequestOperationDataSource
NSObject
MPMediaLibraryView
MPUtilities
MPMiddlewareOperation
MPRequest
MPResponse
MPModelResponse
MPModelLyricsKind
MPModelLyrics
MPMoviePlayerController
AVPlayerViewControllerDelegatePrivate
AVPlayerViewControllerDelegate
MPMediaPlayback
_MPMoviePlayerProxyView
MPTimedMetadata
MPMovieAccessLog
MPMovieErrorLog
MPMovieAccessLogEvent
MPMovieErrorLogEvent
MPAssistantAnalyticsReportingController
MPUniversalTrackIDAdditions
MPRTCReportingSession
MPTiledArtworkRequest
MPRTCReportingEvent
MPModelLibraryDeleteEntityChangeRequestOperation
MPAVItem
MPAVItemAdditions
MPStoreItemMetadataRequest
MPQueueFeeder
MPModelLibraryDeleteEntityChangeRequest
MPStoreItemMetadata
MPAVRoutingTableViewCell
MPAVRoutingThemeableCellView
MPMediaControlsViewController
UIViewControllerTransitioningDelegate
UIViewControllerAnimatedTransitioning
_MPMediaControlsPresentationController
MPMediaControlsStandaloneViewController
MPTiledArtworkDataSource
MPArtworkDataSource
4@P a
MPModelLibraryRequestOperation
_MPModelLibraryRequestItemsQueryOperation
MPAVController
MPAVRoutingControllerDelegate
MPAVQueueControllerDelegate
AVAudioSessionDelegateMediaPlayerOnly
AVAudioSessionDelegate
MPArtworkCatalog
MPStoreItemMovieClip
MPLibraryKeepLocalStatusObserverConfiguration
MPRadioStationEvent
MPMutableRadioStationEvent
MPRadioController
MPClientRadioController
MPStoreModelRadioStationBuilder
MPModelSongKind
MPModelSong
MPAVTelevisionRoutingDataSource
MPAssistantMusicLogEvent
MPAssistantLogEvent
MPNowPlayingInfoAudioFormat
MPMediaLibraryAlbumAppData
MPStoreFileAssetInfo
MPMediaRemoteEntityTranslatorContext
_MPMediaRemoteEntityPropertyTranslator
MPEntityPropertyTranslator
MPMediaRemoteEntityTranslator
MPWeakTimer
MPModelLibraryKeepLocalChangeRequest
MPPCompoundPredicate
MPAVPolicyEnforcer
MPTiledArtworkRepresentationCacheKey
MPArtworkDataSourceVisualIdenticality
MPAVRoutingTableViewCellSubtitleTextState
MPRemotePlaybackQueue
MPLocalMediaQueryRemotePlaybackQueue
MPRadioStationRemotePlaybackQueue
MPGenericTracklistPlaybackQueue
MPCustomDataPlaybackQueue
MPEmptyPlaybackQueue
MPRouteButton
MPStoreLyricsRequest
MPModelPodcastAuthor
MPRadioRecentStationsGroup
MPModelStoreBrowseSectionBuilder
MPModelStoreGroupingsMusicKitResponseParser
MPStoreModelAlbumBuilder
MPShuffleableSectionedIdentifierList
_MPSSILDelegate
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
_MPSSILImplementationInitToken
MPExclusiveAccessToken
_MPSSILImplementation
MPStoreLyricsSnippetRequest
MPModelLibrarySearchScope
MPModelLibraryAlbumAppDataChangeRequestOperation
MPModelRecentlyPlayedRequest
MPModelLibraryAddToPlaylistChangeRequest
MPModelStoreBrowseResponse
MPArtworkResizeUtility
MPAVLightweightRoutingController
MPSectionedCollection
NSMutableCopying
MPModelSupport
MPMutableSectionedCollection
MPAdditions
MPStoreModelTVShowBuilder
MPModelPlayEvent
Convenience
MPModelForYouRecommendationsResponse
MPMediaControlsStatusBarStyleOverridesCoordinator
SBSStatusBarStyleOverridesCoordinatorDelegate
MPModelStoreRadioMusicKitRequestOperation
MPSectionedIdentifierListEnumerator
MPSectionedIdentifierListReverseEnumerator
_MPSectionedIdentifierListProxyEntry
MPSectionedIdentifierListEnumerationResult
MPFastForward
MPStoreHLSAssetInfo
MPAssistantMusicSummaryLogEvent
MPVolumeSlider
MPVolumeControllerDelegate
MPVolumeDisplaying
MPVolumeView
MPAVLightweightRoutingControllerDelegate
MPModelLibraryRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPModelLibraryResponse
MPModelResponseDetailedKeepLocalStatusRequesting
MPModelLibraryResponseKeepLocalStatusConfiguration
MPModelForYouRecommendationsRequest
MPVolumeViewController
MPVolumeSettingsController
MPSectionedIdentifierListEntryPositionKey
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationTrackingEntry
MPSectionedIdentifierListEntry
MPSectionedIdentifierListTailEntry
MPSectionedIdentifierListHeadEntry
MPSectionedIdentifierListItemEntry
MPMoviePlayerViewController
MPRemoteCommandEvent
MPSkipIntervalCommandEvent
MPSeekCommandEvent
MPRatingCommandEvent
MPChangePlaybackRateCommandEvent
MPFeedbackCommandEvent
MPSkipTrackCommandEvent
MPSpecialSeekCommandEvent
MPChangePlaybackPositionCommandEvent
MPChangeRepeatModeCommandEvent
MPChangeShuffleModeCommandEvent
MPCreateRadioStationCommandEvent
MPSetPlaybackQueueCommandEvent
MPReorderQueueCommandEvent
MPInsertIntoPlaybackQueueCommandEvent
MPChangeLanguageOptionCommandEvent
MPAdvanceShuffleModeCommandEvent
MPAdvanceRepeatModeCommandEvent
MPPlaybackSessionCommandEvent
MPSetPlaybackSessionCommandEvent
MPPreloadPlaybackSessionCommandEvent
MPChangeQueueEndActionCommandEvent
MPPostEventNoticeCommandEvent
MPLeaveSharedPlaybackSessionCommandEvent
MPMediaAPICollectionItemMetadataRequestController
MPArtworkImageAttachments
MPModelLibraryDefaultSectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPModelStoreBrowseRequest
MPMediaControlsLanguageOptions
MPModelArtistKind
MPModelArtist
MPAVRoutingController
MPAVRoutingControllerSelection
MPAVRoutingControllerSelectionQueue
MPModelComposerKind
MPModelComposer
MPServerObjectDatabaseImportRequest
MPServerObjectDatabaseImportResult
MPServerObjectDatabaseMediaAPIImportChildRelation
MPServerObjectDatabaseMetadataImportRequest
MPServerObjectDatabaseMediaKitImportRequest
MPServerObjectDatabaseStorePlatformImportRequest
MPServerObjectDatabaseAssetImportRequest
MPServerObjectDatabaseSubPlaybackDispatchImportRequest
MPServerObjectDatabaseSINFImportRequest
_MPModelShimRequestMiddlewareOperation
_MPModelShimRequestMiddleware
MPMiddleware
MPModelShimRequest
_MPModelShimResponseBuilder
MPModelShimResponse
MPRTCReportingPrepareInternalSessionOperation
_MPMediaLibraryMLCoreStorage
MediaLibraryCore
MPModelStoreBrowseSectionUniformContentItemTypeResolver
MPHomeManagerObserver
HMHomeManagerDelegatePrivate
HMHomeManagerDelegate
HMHomeDelegatePrivate
HMHomeDelegate
MPContentItemAdditions
MPPlaybackContext
MPContentTasteController
MPStoreItemMetadataRequestController
MPModelStoreBrowseMusicKitRequestOperation
MPButton
MPMediaPlaylist
MPMediaPlaylistCreationMetadata
MPModelTVEpisodeKind
MPModelTVEpisode
MPModelLibraryGlobalPlaylistImportChangeRequestOperation
MPPlaybackArchiveConfiguration
MPPlaybackArchive
MPMutablePlaybackArchive
MPMediaQuery
MPPProtobufferCoding
MPMediaPredicate
MPMediaPropertyPredicate
MPMediaConditionalPredicate
MPMediaCompoundPredicate
MPMediaCompoundAllPredicate
MPMediaCompoundAnyPredicate
MPMediaContainmentPredicate
MPMediaPersistentIDsPredicate
_MPMediaSearchStringPredicate
MPMediaQueryAdditions
MPModelLibraryImportChangeRequestOperation
MPStoreModelPlaylistBuilder
MPMusicPlayerController
MPMusicPlayerControllerClient
_MPMusicPlayerMediaItemProxy
NewMP
MPArtworkRepresentation
MPArtworkRepresentationCollection
_MPStaticArtworkVisualIdenticalityIdentifier
_MPArtworkCatalogPlaceholderDataSource
_MPArtworkCatalogStaticDataSource
_MPArtworkCatalog
MPPConditionalPredicate
MPAsyncOperation
MPUserIdentityConsuming
MPMediaItem
MPNondurableMediaItem
MPMediaItemArtwork
MPSectionedIdentifierListIdentifierPair
MPModelLibraryKeepLocalStatusRequestOperation
QueryCriteriaResultsCache
0 0@
MPMediaLibrary
_MPActiveUserChangeMonitorDelegate
MPMediaLibraryContentProtectionAdditions
MPMediaLibraryConnectionAssertion
_MPMediaLibraryEntityChange
MPMediaLibrarySyncAnchorSupport
MPModelRequest
MPMediaPickerControllerDelegatePrivate
MPMediaPickerControllerDelegate
MPMediaPickerController
MPMusicMediaPickerClientController
MPMediaPickerController_Appex
MPMediaPickerRemoteViewLoader
MPMediaPickerConfiguration
MPAVQueueCoordinator
MPAVQueueCoordinating
MPLogDescription
MPAVQueueCoordinatorAdditions
_MPModelMediaRemoteItemArtist
_MPModelMediaRemotePodcastEpisodeAuthor
MPAddKeepLocalControl
MPStoreLyricsSnippetRequestOperation
MPStoreModelMovieMediaClipBuilder
MPLibraryKeepLocalStatusObserver
MPMediaDownloadObserver
MPLibraryKeepLocalStatusObserverDetailedContainerConfiguration
MPLibraryKeepLocalStatusObserverIndividualEntityConfiguration
MPMediaItemCollection
MPNotificationObserver
MPMediaDownload
MPStoreModelArtistBuilder
MPModelRadioStationEventKind
MPModelRadioStationEvent
MPAVErrorResolverBlockHandler
MPAVErrorResolverDelegate
MPDetailSlider
MPDetailedScrubbing
MPDetailScrubControllerDelegate
MPRemotePlayerServiceProtocol
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerApplicationController
_MPMusicPlayerQueueItemsProxy
MPMusicPlayerControllerQueue
MPMusicPlayerControllerMutableQueue
MPPlayableContentManager
CARSessionObserving
MPPlayableContentCallbackContext
MPStoreLyricsResponse
MPStoreLyricsRequestOperation
MPModelRecentlyPlayedResponse
MPMediaAPIParserLayer
MPAudioDeviceController
_MPLazySectionedCollectionStorage
MPLazySectionedCollection
MPMediaAPICollectionItemMetadataResponse
MPModelStaticAssetKind
MPModelStaticAsset
MPAVRoutingViewController
UITableViewDataSource
UITableViewDelegate
UIScrollViewDelegate
MPAVRoutingTableViewCellDelegate
MPAVRoutingViewControllerItems
MPAVRoutingViewControllerUpdate
MPStoreModelSongBuilder
MPRemoteRadioController
MPServiceRadioController
NSXPCListenerDelegate
MPModelObjectMediaItem
MPStoreItemMetadataCache
MPNowPlayingInfoLyricsItemToken
MPNowPlayingInfoLyricsItem
MPNowPlayingInfoLyricsEvent
MPStoreSocialFollowOperationDataSource
MPAVAuxiliaryDevice
_MPAbstractNetworkArtworkDataSourceVisualIdenticalityIdentifier
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MPAbstractNetworkArtworkDataSource
AVAssetResourceLoaderDelegate
_MPArtworkDataSourceURLCache
MPMusicPlayerQueueDescriptor
MPMusicPlayerMediaItemQueueDescriptor
MPMusicPlayerStoreQueueDescriptor
MPMusicPlayerPlayParameters
MPMusicPlayerPlayParametersQueueDescriptor
MPMusicPlayerRadioStationQueueDescriptor
MPMusicPlayerPlaybackArchiveQueueDescriptor
MPModelSortDescriptor
MPMultiSortDescriptor
MPModelLibraryModelSectionedCollectionDataSource
MPAVErrorResolver
MPAVErrorResolverAdditions
MPModelMediaClipKind
MPModelMediaClip
MPAVRoutingViewItem
MPMRAVEndpointWrapper
MPMRAVOutputContextWrapper
MPMRAVEndpointObserverWrapper
MPConcreteMediaItem
MPCacheableConcreteMediaEntity
MPConcreteMediaItemArtwork
MPConcreteMediaItemCollection
MPConcreteMediaPlaylist
MPMediaArray
MPMediaEntityResultSetArray
MPConcreteMediaEntityPropertiesCache
MPMediaLibraryAdditions
MPMediaLibraryDataProviderML3
MPMediaLibraryDataProviderPrivate
MPMediaLibraryDataProvider
MPMediaLibraryDataProviderML3Additions
MPAVRouteConnection
ML3Additions
MPModelStaticRequest
MPModelStaticResponse
MPModelLibraryAlbumAppDataChangeRequest
MPAVRoutingTableHeaderView
MPStoreFileAssetFairPlayInfo
MPMediaEntity
MPMediaQuerySectionInfo
MPMediaQueryMutableSectionInfo
MPVolumeController
MPVolumeControllerDataSourceDelegate
MPMediaChapter
MPStoreLibraryPersonalizationCollectionDataSource
MPRTCWeakLinkSupport
MPAudioVideoRoutingPopoverController
MPAVRoutingViewControllerDelegate
MPKeyValueObserver
MPModelLibrarySearchRequestOperation
MPStoreItemOffer
MPBaseEntityTranslator
_MPBaseEntityRelationshipTranslator
MPEntityRelationshipTranslator
MPAVOutputDeviceDescription
MPAVRoute
MPModelForYouRecommendationsRequestOperation
MPStoreLibraryMappingResponse
MPDownloadProgressView
_MPDownloadProgressRingView
MPModelStoreBrowseRequestOperation
MPMediaKitEntityPayloadTransformer
MPMediaKitEntityTranslatorContext
_MPMediaKitEntityPropertyTranslator
_MPMediaKitEntityRelationshipTranslator
MPMediaKitEntityTranslator
MPMediaKitGenericObjectTranslator
MPModelMovieKind
MPModelMovie
MPModelRadioStationKind
MPModelRadioStation
MPModelGroupKind
MPModelGroup
MPModelTVShowCreator
MPPlaceholderArtwork
MPMediaAdditions
MPAVClippingTableView
MPModelPlaylistEntriesShareEligibilityRequestOperation
MPModelLibraryAddToPlaylistChangeRequestOperation
MPStoreModelPlaybackPositionBuilder
MPModelPodcastKind
MPModelPodcast
MPStoreModelRecordLabelBuilder
MPVolumeHardwareButtonController
MPModelLibraryHasBeenPlayedChangeRequest
MPStoreArtworkDataSource
MPMediaQuerySection
MPARC4RandomSource
MPRandom
MPRandomDistribution
MPArtworkResizeOperation
MPBrowsableContentItem
MPArtworkColorAnalysis
MPMutableArtworkColorAnalysis
MPVolumeGroupSliderCoordinator
Debugging
Padding
MPModelStoreBrowseContentItem
MPMediaBooklet
MPModelStoreBrowseRoomRequest
MPStoreModelTVEpisodeBuilder
MPMediaLibrarySystemFilters
MPPSearchStringPredicate
MPMediaLibraryDataProviderSystemML3StringCoercion
MPMediaLibraryDataProviderSystemML3
MPStoreModelGenericObjectBuilder
_MPKeyPathEntityPropertyTranslator
_MPKeyPathEntityRelationshipTranslator
MPStoreRadioStreamAssetInfo
MPMediaAPICollectionItemAuthTokenRenewalRequest
MPMediaAPIMetadaRequestProtocol
MPAVBatteryLevel
4AP`
MPStoreLibraryPersonalizationRequestOperation
_MPStoreLibraryPersonalizationAggregateLibraryAddedOperation
MPPlaybackUserDefaults
MPPlaybackEQSetting
MPVolumeHUDController
MPMusicPlayerControllerSystemServer
MPMusicPlayerSystemController
MPSystemMusicPlayerController
MPModelStoreGroupingsMusicKitRequestOperation
MPStoreAssetPlaybackResponse
MPMutableStoreAssetPlaybackResponse
MPCloudServiceStatusController
ICEnvironmentMonitorObserver
MPModelStoreBrowseRoomMusicKitResponseParser
MPPMediaQuery
MPStoreItemOfferAsset
MPDispatchQueueExclusiveAccessToken
MPPThreadKeyExclusiveAccessToken
MPStoreModelStoreAssetBuilder
MPModelVerifyLocalFileAssetIntegrityRequest
MPMediaQueryCriteria
MPStoreSocialPendingFollowRequestOperationDataSource
MPStoreItemImportTrackData
MPRTCReportingSessionSummaryEvent
MPModelForYouRecommendationItem
MPLibraryAddStatusObserverAdditions
MPRTCReportingItemSessionCreating
MPRTCReportingItemSessionContaining
MPRTCReportingController
_MPRTCReportingAVItemDeallocationHandler
MPModelLibraryPlaylistEditChangeRequestOperation
MPProtocolProxy
MPModelLibraryTransientStateController
_MPModelLibraryRegisteredTransientState
MPNowPlayingInfoCenter
MPMediaRemoteEntityArtworkGenerator
_MPNowPlayingInfoTransportableSessionRequest
MPNowPlayingInfoTransportableSessionRequest
MPNowPlayingInfoTransportableSessionResponse
MPModelObject
MPModelKind
MPNowPlayingInfoCenterArtworkContext
NowPlayingInfo
MPLibraryRemovalAdditions
MPLibraryKeepLocalStatusObserverAdditions
MPRemoteCommandHandlerDialogAction
MPRemoteCommandHandlerDialog
MPSubscriptionStatusPlaybackInformation
MPHSBrowserDelegate
HSBrowserDelegate
MPHomeSharingML3DataProvider
MPStoreModelCuratorBuilder
MPMusicPlayerControllerNowPlayingTimeSnapshot
MPMusicPlayerControllerNowPlaying
MPMusicPlayerControllerApplicationQueueModifications
MPMusicPlayerServerStateUpdateRecord
MPHomeSharingURLProtocol
MPCubicSpringTimingParameters
MPCubicSpringAnimator
MPMediaLibraryArtworkRequest
MPArtworkTokenParametersRepresenting
MPMediaLibraryArtwork
MPMediaLibraryArtworkCatalog
Saga
MPModelPlaylistEntriesShareEligibilityRequest
MPServerObjectDatabase
MPMediaKitEntityRelationshipPayloadProvider
_MPServerObjectDatabaseImporter
MPServerObjectDatabaseOperations
MPSOD_Additions
MPServerObjectDatabaseAsset
MPStoreModelRequestConfiguration
MPHomeSharingRentalTracker
MPPlayableContentManagerContext
MPModelForYouRecommendationMusicKitGroupBuilder
MPHomeSharingErrorResolver
SSAuthorizationRequestDelegate
SSRequestDelegate
MPMediaLibraryPrivacyContext
MPRemoteCommandCenter
MPRemoteCommandDelegate_Internal
_MPRemoteLaunchCommandCenter
MPStoreModelTVSeasonBuilder
MPHomeSharingRentalErrorResolver
MPModelHomeSharingAsset
MPModelLibraryHasPurchasesRequestOperation
MPModelLibraryHasPurchasesRequest
MPStoreItemLibraryImportElement
MPStoreItemLibraryImportLookupElement
MPStoreItemLibraryImport
MPMusicMediaPickerRemoteViewController
MPAVTelevisionRoute
MPAudioAndSubtitlesController
MPStoreLibraryMappingRequestOperation
MPModelRecentlyPlayedRequestOperation
MPPlaceholderAVItem
MPModelGenericObjectKind
MPModelGenericObject
GenericObjectType
MPChangeDetails
MPStoreModelObjectBuilder
MPNowPlayingInfoLanguageOptionGroupAdditions
MPNowPlayingInfoLanguageOptionAdditions
MPCloudControllerItemIDList
MPCloudController
MPModelLibraryImportChangeRequest
MPArtworkColorAnalyzer
MPArtworkColorAnalyzerAlgorithmiTunesAdditions
MediaAdditions
MPQueuePlayer
MPModelCuratorActualKind
MPModelCurator
MPStoreModelRequestOperation
MPGaplessInfo
MPStoreLibraryPersonalizationRequest
MPStoreLibraryPersonalizationResponse
MPStoreLibraryPersonalizingAdditions
MPModelPlaylistKind
MPModelPlaylist
MPStoreSocialRequestOperation
MPNetworkPlayabilityMonitor
MPModelLibraryStoreIDsImportChangeRequestOperation
MPRequestResponseController
MPAVOutputDeviceRoute
MPModelForYouRecommendationMusicKitItemBuilder
MPModelLibraryIncrementSkipCountChangeRequest
MPUbiquitousPlaybackPositionEntity
MPRTCReportingSecureKeyLoadEvent
MPTiledArtworkRepresentationToken
MPQueueFeederIdentifierRegistry
MPNowPlayingContentItem
MPStoreAssetInfoPlaybackCache
MPStoreAssetInfoPlaybackCacheRequest
MPModelGenreKind
MPModelGenre
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperationMap
MPMiddlewareChain
_MPMiddlewareChainBuilderProxy
MPStoreModelRequest
MPModelPlaybackPosition
MPStoreItemMovieClipAsset
MPPlaybackContextRemotePlaybackQueue
MPModelForYouRecommendationGroupBuilder
MPSectionedIdentifierList
_MPIdentifierListSectionProxy
MPMutableIdentifierListSection
_MPSectionedIdentifierListEncodableNextEntriesProviding
_MPSectionedIdentifierListCloneIndexEntry
MPSectionedIdentifierListPosition
MPModelLibraryPlaylistEditChangeRequest
MPStorePlatformEntityTranslatorContext
_MPStorePlatformEntityPropertyTranslator
_MPStorePlatformEntityRelationshipTranslator
MPStorePlatformEntityTranslator
MPMediaControlsRemoteViewControllerProtocol
MPMediaControlsProtocol
MPMediaControls
MPModelLibraryDownloadQueueRequest
MPModelLibraryDownloadQueueResponse
_MPModelLibraryDownloadQueueDataSource
MPNetworkObserver
MPModelStoreBrowseRoomMusicKitRequestOperation
MPRTCReportingAssetLoadEvent
MediaPlayer
MPStoreSocialRemoveFollowerOperationDataSource
MPModelForYouRecommendationItemBuilder
MPAVEndpointRoutingDataSource
MPAVCompanionProxiedEndpointRoutingDataSource
MPAVCompanionEndpointRoutingDataSource
MPCFWrapper
MPAsyncBlockOperation
MPStorePurchaseErrorResolver
MPUbiquitousPlaybackPositionController
MPContentItem
MPStoreSocialUnfollowOperationDataSource
MPModelPerson
MPLibraryAddStatusObserver
MPModelRecordLabelKind
MPModelRecordLabel
MPRadioLibrary
MPHomeSharingArtworkDataSource
MPArtworkDataSourceIdentifiable
_MPHomeSharingArtworkCacheKey
MPNowPlayingInfoLanguageOption
MPNowPlayingInfoLanguageOptionGroup
MPRadioStation
_MPActiveUserChangeMonitor
MPRemoteCommand
MPSkipIntervalCommand
MPFeedbackCommand
MPRatingCommand
MPChangePlaybackRateCommand
MPChangeRepeatModeCommand
MPChangeShuffleModeCommand
MPSkipTrackCommand
MPSetPlaybackQueueCommand
MPChangePlaybackPositionCommand
MPReorderQueueCommand
MPInsertIntoPlaybackQueueCommand
MPAdvanceShuffleModeCommand
MPAdvanceRepeatModeCommand
MPSetPlaybackSessionCommand
MPPreloadPlaybackSessionCommand
MPPlaybackSessionCommandInfo
MPSetPriorityForPlaybackSessionCommand
MPChangeQueueEndActionCommand
MPModelForYouRecommendationGroupKind
MPModelForYouRecommendationGroup
MPModelPlaylistEntryKind
MPModelPlaylistEntry
MPRemoteCommandStatus
MPModelStoreBrowseResponseParser
MPStoreItemMetadataCacheKey
MPPPropertyPredicate
MPModelStoreBrowseSection
MPPropertySet
MPMutablePropertySet
MPStoreItemMetadataResponse
MPModelTVSeasonKind
MPModelTVSeason
MPAVRoutingSheet
_MPAVRoutingSheetSecureWindow
MPModelLibrarySearchRequest
MPModelLibrarySearchResponse
MPModelLibrarySearchSectionedCollectionDataSource
MPModelLibrarySearchEntityResultContainer
_MPModelLibraryItemArtist
_MPModelLibraryPodcastEpisodeAuthor
MPMediaLibraryTranslatorSchema
MPModalPresentationWindow
MPMediaLibraryArtworkDataSource
_MPMediaLibraryArtworkDataSourceCacheKey
_MPMediaLibraryArtworkVisualIdenticalityIdentifier
MPStoreLyricsSnippetURLComponents
MPStoreSocialBlockOperationDataSource
MPModelFileAssetKind
MPModelFileAsset
MPAVOutputDeviceRoutingDataSource
MPAVCompanionProxiedOutputDeviceRoutingDataSource
MPMusicMediaPickerServiceController
MPMusicMediaPickerXPCInterfaces
MPStoreModelTVShowCreatorBuilder
MediaPlayerAdditions
MPDetailScrubController
MPModelStorePlatformMetadataGenericObjectBuilder
MPStoreLibraryPersonalizationContentDescriptor
MPUserNotification
MPMediaEntityCache
MPAVEndpointRoute
MPStoreContentReporter
MPStoreContentReport
MPMediaAPICollectionItemMetadataRequest
MPAssistantMusicAssetLoadLogEvent
MPPlaybackArchiveDisplayProperties
MPMutablePlaybackArchiveDisplayProperties
MPHomeMonitor
MPHomeManagerObserverDelegate
MPModelLibraryKeepLocalChangeRequestOperation
_MPModelLibraryKeepLocalChangeRequestUpdateItemOperation
MPAVRoutingDataSource
MPModelStoreAsset
MPContentTastePendingUpdateRecord
MPHomeUserMonitor
HMSettingsDelegate
HMUserDelegatePrivate
MPModelTVShowKind
MPModelTVShow
MPPPersistentIDsPredicate
MPExportableArtworkProperties
MPPMediaPredicateValue
MPModelSocialPersonKind
MPModelSocialPerson
MPMusicPlayerControllerSystemCache
MPAVRoutingTableViewHeaderView
MPStoreSocialServiceController
_MPStoreSocialTransientState
MPStoreSocialServiceTransientStatesSnapshot
_MPMediaLibraryEntityPropertyTranslator
_MPMediaLibraryEntityRelationshipTranslator
MPMediaLibraryEntityTranslator
MPMediaLibraryEntityTranslatorAdditions
MPMediaLibraryEntityTranslationContext
MPStoreModelMovieBuilder
MPIdentifierSet
MPMutableLocalLibraryIdentifiers
MPLocalLibraryIdentifiers
MPMutablePersonalStoreIdentifiers
MPPersonalStoreIdentifiers
MPMutableUniversalStoreIdentifiers
MPUniversalStoreIdentifiers
MPMutableRadioIdentifiers
MPRadioIdentifiers
MPMutableIdentifierSet
MPModelLibraryIncrementPlayCountChangeRequest
MPAVClippingTableViewCell
MPModelSharedListeningParticipantKind
MPModelSharedListeningParticipant
MPModelPodcastEpisodeKind
MPModelPodcastEpisode
MPRouteLabel
MPArtworkConfiguration
MPRTCReportingNetworkInterfaceChangeEvent
MPMediaAPICollectionItemMetadataRequestInfo
MPRestrictionsMonitor
MCProfileConnectionObserver
MPVolumeControllerSystemDataSource
MPVolumeControllerDataSource
MPVolumeControllerRouteDataSource
MPStoreArtworkRequestToken
MPStoreDownload
MPStoreDownloadManager
SSDownloadManagerObserver
SSPurchaseManagerDelegate
UIAlertViewDelegate
SSDownloadHandlerDelegate
_MPStoreDownloadBlockObserver
MPStoreDownloadManagerObserver
MPStoreDownloadAdditions
MPStoreModelSocialPersonBuilder
MPMediaAPICollectionMetadataRequest
MPModelAlbumKind
MPModelAlbum
MPPMediaPredicate
MPNowPlayingInfoAudioRoute
initWithRequestedPropertySet:
standardUserDefaults
boolForKey:
arrayWithObjects:count:
allSupportedProperties
dictionaryWithObjects:forKeys:count:
initWithProperties:relationships:
setPreventStoreItemMetadataCaching:
countByEnumeratingWithState:objects:count:
conformsToProtocol:
integerValue
contentItemTypeForRawResponseKindIdentifierValue:
itemKind
isEqualToString:
iTunesBrandType
requestedPropertySet
properties
containsObject:
relationships
objectForKey:
preventStoreItemMetadataCaching
contentItemTypeForStoreItemMetadata:
artistUploadedContentType
hasLoadedValueForKey:
album
modelObjectWithStoreItemMetadata:sourceModelObject:userIdentity:
identifiers
artist
curator
movie
playlist
radioStation
socialPerson
song
episode
season
show
showCreator
recordLabel
setItemType:
setDetailedItemType:
setAlbum:
setArtist:
setCurator:
setMovie:
setPlaylist:
setRadioStation:
setSong:
setEpisode:
setSeason:
setShow:
setShowCreator:
setSocialPerson:
setArtistUploadedContentType:
setRecordLabel:
initWithIdentifiers:block:
contentItemTypeForRawResponseKindIdentifiers:
contentItemTypeForMusicAPIType:
allowsRadioStations
setAllowsRadioStations:
allowsVideoContent
setAllowsVideoContent:
.cxx_destruct
_requestedBrowseContentItemProperties
_albumBuilder
_artistBuilder
_curatorBuilder
_episodeBuilder
_movieBuilder
_radioStationBuilder
_socialPersonBuilder
_playlistBuilder
_seasonBuilder
_songBuilder
_showBuilder
_showCreatorBuilder
_recordLabelBuilder
_shouldFakeEpisodes
_allowsRadioStations
_allowsVideoContent
TB,N,V_allowsRadioStations
TB,N,V_allowsVideoContent
_init
raise:format:
init
array
sharedManager
T@"MPMediaDownloadManager",R,N
addObserver:
removeObserver:
prioritizeDownload:
allMediaDownloadLibraryIdentifiers
enqueueAssetForDownload:withCompletionHandler:
sendKeepLocalStatusChanged:forLibraryIdentifier:entityType:withCompletionHandler:
cancelDownloads:
activeDownloadsCount
hasActiveDownloads
activeDownloadForMediaItemPersistentID:
activeDownloadForStoreID:
downloadForIdentifierSet:downloadState:
downloadLibraryWithCompletionHandler:
T@"NSArray",R,N
Tq,R,N
request
customForYouURL
componentsWithURL:resolvingAgainstBaseURL:
queryItems
mutableCopy
refreshRequest
recommendationsQueryItemsWithStoreURLBag:
addObjectsFromArray:
queryItemWithName:value:
addObject:
queryItemsWithStoreURLBag:
copy
setQueryItems:
initWithURL:
setHTTPMethod:
remainingTimeInterval
setTimeoutInterval:
initWithURLRequest:
recommendationsURLWithStoreURLBag:
arrayWithCapacity:
withRecentlyPlayed
mode
recentlyPlayedURLWithStoreURLBag:
count
errorWithDomain:code:userInfo:
initWithURLRequests:
objectAtIndex:
isOnboardingRequired:
_produceResultsWithRecommendationsArray:recentlyPlayedArray:
_produceResultsWithItemsArray:
objectAtIndexedSubscript:
kindWithModelClass:
setSectionKind:
emptyPropertySet
setSectionProperties:
setItemKind:
itemProperties
setItemProperties:
appendSection:
isBackedByStoreItemMetadata
itemType
initWithModel:personalizationStyle:
appendItem:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
_responseWithResults:personalizationResponse:
performWithResponseHandler:
initWithPayload:
sharedServerObjectDatabase
importObjectsFromRequest:options:trustID:error:
sectionProperties
addProperty:
propertySetByCombiningWithPropertySet:
_recommendationGroupBuilderWithFlatSectionedItems:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:storeURLBag:isListenNow:
userIdentity
modelObjectForItemsArray:userIdentity:
modelObjectForRecentlyPlayedArray:userIdentity:
modelObjectForRecommendationDictionary:userIdentity:
filteringPolicy
groupType
results
_personalizeRecommendationGroup:flatPersonalizedSectionedItems:
initWithRequest:
setResults:
setSectionedItems:
subgroups
setSubgroups:
copyWithIdentifiers:block:
clientPlatformIdentifier
localTimeZone
ISO8601TimeZoneOffsetFromUTC
shouldRequestSocialAndFriendsMixWithValues
withSocial
arrayWithArray:
componentsJoinedByString:
initWithObjects:
shouldRequestVacTokens
withPlainEditorialNotes
types
typesArrayWithTypes:
displayFilterKinds
displayFilterKindsValueForOptions:
setPath:
percentEncodedQuery
stringByReplacingOccurrencesOfString:withString:
setPercentEncodedQuery:
subscriptionStatusType
sharedController
musicSubscriptionStatus
statusType
configurationForLoadingModelDataWithStoreURLBag:error:
produceResponseWithLoadedOutput:completion:
_recommendationGroupBuilder
_storeURLBag
style
routingContextUID
stringWithFormat:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeCGRectForKey:
decodeFloatForKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeBool:forKey:
encodeCGRect:forKey:
encodeFloat:forKey:
initatorStyle
presentingAppBundleID
allowsNowPlayingApplicationLaunch
sortByIsVideoRoute
sourceRect
preferredWidth
routeUID
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
description
isEqual:
setStyle:
setInitatorStyle:
setRoutingContextUID:
setPresentingAppBundleID:
shouldPreventAutorotation
setShouldPreventAutorotation:
setAllowsNowPlayingApplicationLaunch:
setSortByIsVideoRoute:
setSourceRect:
setPreferredWidth:
setRouteUID:
_shouldPreventAutorotation
_allowsNowPlayingApplicationLaunch
_sortByIsVideoRoute
_style
_initatorStyle
_routingContextUID
_presentingAppBundleID
_preferredWidth
_routeUID
_sourceRect
Tq,N,V_style
Tq,N,V_initatorStyle
T@"NSString",C,N,V_routingContextUID
T@"NSString",C,N,V_presentingAppBundleID
TB,N,V_shouldPreventAutorotation
TB,N,V_allowsNowPlayingApplicationLaunch
TB,N,V_sortByIsVideoRoute
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_sourceRect
Td,N,V_preferredWidth
T@"NSString",C,N,V_routeUID
universalStore
socialProfileID
dataWithJSONObject:options:error:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
bagKey
httpBody
httpBodyType
httpMethod
person
setPerson:
fallbackBagKeys
fallbackURLString
T@"MPModelSocialPerson",&,N
_person
T@"MPModelSocialPerson",&,N,V_person
_MediaLibrary_coreLibrary
sharedRestrictionsMonitor
allowsExplicitContent
maximumTVShowRating
maximumMovieRating
allowsMusicVideos
stringWithUTF8String:
exceptionWithName:reason:userInfo:
library
filteringOptions
initWithLibrary:filteringOptions:
setMediaLibrary:
setModelKind:
modelClass
translatorForMPModelClass:
entityQueryForPropertySet:sortDescriptors:context:view:
_performCoreQuery:error:
logDatabaseAccess
performCoreQuery:withCompletion:
hasEntitiesForModelKind:
mlCoreView
performCoreSearchQuery:withCompletion:
.cxx_construct
_coreView
_library
_filteringOptions
T{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}},R,N
T@"MPMediaLibrary",R,N,V_library
TQ,R,N,V_filteringOptions
dataWithContentsOfFile:options:error:
imageWithData:
deviceSupportsASTC
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
bytes
length
initWithCGImage:
size
scale
CGImage
CGColor
shadowOffset
shadowBlurRadius
shadowColor
clearColor
bezierPathWithRoundedRect:cornerRadius:
addClip
drawInRect:
initWithContentsOfExactFilePath:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
imageWithRoundedCornersOfRadius:
mainScreen
imageWithCGImage:scale:orientation:
instanceMethodForSelector:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
label
setLabel:
middlewareClasses
setMiddlewareClasses:
qualityOfService
setQualityOfService:
timeoutInterval
date
UTF8String
expectedMaximumResponseTimeInterval
cleanupQueue
queue
operations
valueForKeyPath:
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
timeoutDescription
T@"NSError",R,N
T@?,C,N
cancel
initWithDeallocHandler:
timeIntervalSinceNow
disarm
_performWithCompletion:
prepareForResponseWithCompletion:
setName:
mapForRequest:
responseClass
allMiddleware
initWithRequest:middleware:
invalidate
operationsForMiddleware:
setInvalidationObservers:
blockOperationWithBlock:
allOperations
addDependency:
addOperations:waitUntilFinished:
addOperation:
cancelAllOperations
performWithCompletion:
_stateDumpObject
calloutQueue
cancelationError
_label
_qualityOfService
_timeoutInterval
_calloutQueue
_cancelationError
_cleanupQueue
_queue
_middlewareClasses
T@"NSOperationQueue",R,N,V_calloutQueue
T@"NSError",R,N,V_cancelationError
T@"NSObject<OS_dispatch_queue>",R,N,V_cleanupQueue
T@"NSOperationQueue",R,N,V_queue
T@"NSArray",C,N,V_middlewareClasses
T@"NSString",C,N,V_label
Tq,N,V_qualityOfService
Td,N,V_timeoutInterval
builderProtocol
builderProxyForProtocol:
willChangeValueForKey:
didChangeValueForKey:
defaultCenter
postNotificationName:object:
middleware
initWithMiddleware:protocol:
numberWithBool:
chain
isValid
setMiddleware:
builder
_valid
_request
_middleware
_builder
T@"NSArray",C,N,V_middleware
T@,R,N,V_builder
T@,R,C,N,V_request
valid
TB,R,N,GisValid,V_valid
initWithFormat:
appendString:
appendFormat:
isMainThread
totalItemCount
getChangeDetailsFromPreviousResponse:completion:
isEmpty
_invalidate
deferredSectionProperties
setDeferredSectionProperties:
deferredItemProperties
setDeferredItemProperties:
_deferredSectionProperties
_deferredItemProperties
_results
T@"MPPropertySet",&,N,V_deferredSectionProperties
T@"MPPropertySet",&,N,V_deferredItemProperties
T@"MPSectionedCollection",C,N,V_results
empty
TB,R,N,GisEmpty
T@"MPModelRequest",R,C,N,V_request
identityKind
humanDescription
__text_KEY
__TTML_KEY
__hasStoreLyrics_KEY
__hasLibraryLyrics_KEY
__hasTimeSyncedLyrics_KEY
text
T@"NSString",C,D,N
TTML
hasStoreLyrics
TB,D,N
hasLibraryLyrics
hasTimeSyncedLyrics
initWithContentURL:
setDelegate:
setAllowsPictureInPicturePlayback:
setUpdatesNowPlayingInfoCenter:
addObserver:forKeyPath:options:context:
_avPlayerItemDidPlayToEndNotification:
addObserver:selector:name:object:
setContentURL:
setControlStyle:
removeObserver:forKeyPath:context:
dealloc
initWithMoviePlayerController:
player
currentItem
playerController
isPlaying
status
setShowsPlaybackControls:
setAllowsEnteringFullScreen:
setLooping:
setAutomaticallyWaitsToMinimizeStalling:
setFullscreen:animated:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
videoGravity
setVideoGravity:
isReadyForDisplay
contentDuration
contentDurationWithinEndTimes
contentDimensions
minTime
setMinTime:
maxTime
setMaxTime:
allowsExternalPlayback
setAllowsExternalPlayback:
isExternalPlaybackActive
playerWithURL:
setPlayer:
auxiliarySession
setAudioSession:
prepareToPlay
play:
pause:
currentTime
seekToTime:
rate
setRate:
beginScanningForward:
beginScanningBackward:
endScanningBackward:
endScanningForward:
asset
assetImageGeneratorWithAsset:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
copyCGImageAtTime:actualTime:error:
imageWithCGImage:
doubleValue
valueWithCMTime:
numberWithDouble:
postNotificationName:object:userInfo:
generateCGImagesAsynchronouslyForTimes:completionHandler:
cancelAllCGImageGeneration
timedMetadata
_initWithMetadataItem:
accessLog
_initWithAVItemAccessLog:
errorLog
_initWithAVItemErrorLog:
isCancelled
animateAlongsideTransition:completion:
object
observeValueForKeyPath:ofObject:change:context:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
play
pause
stop
beginSeekingForward
beginSeekingBackward
endSeeking
isPreparedToPlay
currentPlaybackTime
setCurrentPlaybackTime:
currentPlaybackRate
setCurrentPlaybackRate:
TB,R,N
Td,N
Tf,N
view
backgroundView
playbackState
loadState
setRepeatMode:
setShouldAutoplay:
isFullscreen
setFullscreen:
scalingMode
setScalingMode:
readyForDisplay
movieMediaTypes
duration
playableDuration
naturalSize
initialPlaybackTime
setInitialPlaybackTime:
endPlaybackTime
setEndPlaybackTime:
allowsAirPlay
setAllowsAirPlay:
isAirPlayVideoActive
thumbnailImageAtTime:timeOption:
requestThumbnailImagesAtTimes:timeOption:
cancelAllThumbnailImageRequests
useApplicationAudioSession
setUseApplicationAudioSession:
_advertisementView
_videoViewController
movieSourceType
setMovieSourceType:
contentURL
controlStyle
repeatMode
shouldAutoplay
playerViewController
hostingViewController
setHostingViewController:
_proxyView
_generator
_backgroundView
_useApplicationAudioSession
_isFullscreen
_shouldAutoplay
_movieSourceType
_contentURL
_controlStyle
_repeatMode
_playerViewController
_hostingViewController
T@"AVPlayerViewController",R,N,V_playerViewController
T@"UIViewController",W,N,V_hostingViewController
T@"NSURL",C,N,V_contentURL
T@"UIView",R,N
TQ,R,N
Tq,N,V_controlStyle
Tq,N,V_repeatMode
TB,N,V_shouldAutoplay
fullscreen
TB,N,GisFullscreen
Tq,N
Tq,N,V_movieSourceType
Td,R,N
T{CGSize=dd},R,N
TB,N
airPlayVideoActive
TB,R,N,GisAirPlayVideoActive
willMoveToWindow:
superview
_updateContainmentInWindow:superview:
willMoveToSuperview:
window
setFrame:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
viewControllerForView:
parentViewController
addChildViewController:
addSubview:
didMoveToParentViewController:
controller
_controller
T@"MPMoviePlayerController",R,W,N,V_controller
keySpace
value
time
extraAttributes
initWithCapacity:
setObject:forKey:
keyspace
timestamp
allMetadata
_metadataItem
T@"NSString",R,N
T@,R,N
T@"NSDictionary",R,N
extendedLogData
extendedLogDataStringEncoding
events
_initWithAVItemAccessLogEvent:
_accessLog
T@"NSData",R,N
_initWithAVItemErrorLogEvent:
_errorLog
numberOfMediaRequests
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
observedBitrate
indicatedBitrate
numberOfDroppedVideoFrames
numberOfSegmentsDownloaded
_event
T@"NSDate",R,N
errorStatusCode
errorDomain
errorComment
_itemTimebaseDidChangeNotification:
initWithOptions:capacity:
_itemDidChangeNotification:
_bufferingStateDidChangeNotification:
_willReloadWithPlaybackContextNotification:
removeObject:
removeObserver:name:object:
eventName
eventPayload
sharedAnalytics
eventCode
logEventWithType:machAbsoluteTime:context:
_attemptLikelyToKeepUpReportingEventWithPlayer:
_attemptPlaybackStartReportingEventWithPlayer:
allObjects
userInfo
siriReferenceIdentifier
siriWHAMetricsInfo
_createContextDictionaryWithSiriReferenceIdentifier:siriWHAMetricsInfo:
bufferingState
feeder
timebase
initialPlaybackStartTime
timeIntervalSinceReferenceDate
T@"MPAssistantAnalyticsReportingController",R,N
registerPlayer:
unregisterPlayer:
logAssistantEvent:withTimestamp:
_timebaseEffectiveRateChangedNotification
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
_lastSiriReferenceIdentifierForWillReload
_lastSiriReferenceIdentifierWithLikelyToKeepUp
_players
_playerToObservedTimebase
_mpUTITypeFromMRUTIType:
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
setMaxConcurrentOperationCount:
newHierarchyTokenFromParentToken:
isRTCReportingSupported
setClientName:
setClientType:
setClientVersion:
setHierarchyToken:
setServiceIdentifier:
setSessionID:
setResponseHandler:
addEntriesFromDictionary:
fetchReportingStatesWithUserInfo:fetchComplete:
_recordEvent:withInternalSession:
addOperationWithBlock:
newRTCReportingMessageDictionary
sendMessageWithDictionary:error:
hasCompleteSessionSetup
hasInitializedSession
additionalUserInfo
clientName
clientType
clientVersion
hierarchyToken
serviceIdentifier
sessionID
setAdditionalUserInfo:
initializeSession
completeSessionSetup
finalizeSession
recordEvent:
_lock
_additionalUserInfo
_clientName
_clientType
_clientVersion
_hasCompleteSessionSetup
_hasInitializedSession
_hierarchyToken
_internalSession
_operationQueue
_pendingReportingEvents
_serviceIdentifier
_sessionID
_sessionUserInfo
T@"NSDictionary",C,N
T@"NSString",C,N
Ti,N
T@,&,N
TI,N
tokenResult
token
lastError
activeAccount
defaultIdentityStore
DSID
setWithObject:
sharedProvider
allValues
firstObject
timeToLiveMillis
getTokenStatusForDSIDs:forcingRefresh:completion:
getPropertiesForUserIdentity:completionHandler:
subarrayWithRange:
allowsSynchronousArtworkCatalogsBlockExecution
artworkCatalogsWithCount:
existingArtworkCatalogsWithCount:
hasExistingArtworkCatalogsWithCount:
artworkCatalogsBlock
setArtworkCatalogsBlock:
setAllowsSynchronousArtworkCatalogsBlockExecution:
numberOfColumns
setNumberOfColumns:
numberOfRows
setNumberOfRows:
tileSpacing
setTileSpacing:
entityIdentifier
setEntityIdentifier:
namespaceIdentifier
setNamespaceIdentifier:
revisionIdentifier
setRevisionIdentifier:
_cacheLock
_artworkCatalogsCache
_artworkCatalogsCacheCount
_allowsSynchronousArtworkCatalogsBlockExecution
_artworkCatalogsBlock
_numberOfColumns
_numberOfRows
_tileSpacing
_entityIdentifier
_namespaceIdentifier
_revisionIdentifier
T@?,C,N,V_artworkCatalogsBlock
TB,N,V_allowsSynchronousArtworkCatalogsBlockExecution
TQ,N,V_numberOfColumns
TQ,N,V_numberOfRows
Td,N,V_tileSpacing
T@"<NSCopying>",C,N,V_entityIdentifier
T@"<NSCopying>",C,N,V_namespaceIdentifier
T@"<NSCopying>",C,N,V_revisionIdentifier
rtcReportingCategory
numberWithUnsignedShort:
rtcReportingType
newRTCReportingPayloadDictionary
numberWithInteger:
networkInterfaceType
setNetworkInterfaceType:
_rtcReportingCategory
_rtcReportingType
_networkInterfaceType
TS,R,N,V_rtcReportingCategory
TS,R,N,V_rtcReportingType
Tq,N,V_networkInterfaceType
domain
code
RTCReportingFrameworkPath
currentThread
modelObject
deviceMediaLibraryWithUserIdentity:
persistentID
anyObject
_handlePersistentID:modelClass:mediaLibrary:
libraryViewWithUserIdentity:
setLibraryView:
setModelClass:
setIdentifierSets:
libraryIdentifierSetForIdentifierSet:
finish
finishWithError:
isSubclassOfClass:
itemWithPersistentID:verifyExistence:
_deleteItems:withLibrary:
uniqueIdentifier
setPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
initWithModelKind:block:
kindWithVariants:
setScopedContainers:
enumerateItemIdentifiersUsingBlock:
newOperationWithResponseHandler:
playlistWithPersistentID:
_isCloudLibraryEnabled
valueForProperty:
unsignedLongLongValue
controllerWithUserIdentity:
removePlaylistsWithSagaIDs:completionHandler:
removePlaylist:
cloudServiceStatusControllerWithUserIdentity:
removeItemsWithSagaIDs:completionHandler:
isPurchaseHistoryEnabled
setValue:forProperty:
hideItemsWithPurchaseHistoryIDs:completionHandler:
deleteItems:
isCloudLibraryEnabled
execute
setRequest:
responseHandler
_responseHandler
T@"MPModelLibraryDeleteEntityChangeRequest",C,N,V_request
T@?,C,N,V_responseHandler
isPlaceholder
URLWithString:relativeToURL:
scheme
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
fileURLWithPath:isDirectory:
initWithAsset:
URLAssetWithURL:options:
playerItemWithAsset:
initWithPlayerItem:
setPlayerItem:
_loadAssetProperties
UUID
UUIDString
_internalLikedStateDidChangeNotification:
endAccessInterval
_removeObservationsForAVPlayerItem:
cancelPreviousPerformRequestsWithTarget:
isAssetLoaded
isAlwaysLive
playerItem
canPlayFastForward
canPlayFastReverse
contentItemID
loadAssetAndPlayerItem
setIsAssetLoaded:
contextForDefaultClient
beginAccessInterval
updatePlayerItemMetadata
_updateSoundCheckVolumeNormalizationForPlayerItem
_loadAssetAndPlayerItem
loggingIdentifier
_addObservationsForAVPlayerItem:
_updateHasFinishedDownloading
mediaItem
rememberBookmarkTime
bookmarkTime
initialPlaybackStartTimeOverride
playbackInfoStartTime
playbackInfo
_initialPlaybackStartTimeForPlaybackInfo:
absoluteString
invalidateContentItemUserInfo
displayableText
lyrics
_persistedLikedState
path
compare:options:range:
type
presentationSize
defaultPlaybackRate
forwardPlaybackEndTime
setLikedState:forUserIdentity:
likedState
_likedStateDidChange
_handleUpdatedLikedState:forUserIdentity:completion:
storeItemInt64ID
objectForKeyedSubscript:
boolValue
longLongValue
mediaLibrary
initWithIdentifier:
_updateContentItem
statusOfValueForKey:error:
trackReferences
intValue
trackWithTrackID:
mediaType
durationFromExternalMetadata
playbackMode
_seekableTimeRanges
CMTimeRangeValue
_durationFromExternalMetadataIfAvailable
loadedTimeRanges
_playableDurationForLoadedTimeRanges:
CMTimeValue
_playerItemDurationIfAvailable
setDuration:
_performContentItemUpdate:
seekableTimeRanges
loadValuesAsynchronouslyForKeys:completionHandler:
setSoundCheckVolumeNormalization:
artworkCatalogForPlaybackTime:
_onAssetQueueClearAsset
storeSubscriptionAdamID
setLegacyUniqueID:
setPlayable:
setDefaultPlaybackRate:
setElapsedTime:
setPlaybackRate:
timeOfSeekableStart
setStartTime:
setStoreID:
albumStoreID
setStoreAlbumID:
artistStoreID
setStoreArtistID:
setStoreSubscriptionID:
mainTitle
setTitle:
setAlbumName:
albumYear
setAlbumYear:
setTrackArtistName:
albumArtist
setAlbumArtistName:
composer
setComposerName:
genre
setGenreName:
discNumber
setDiscNumber:
discCount
setTotalDiscCount:
albumTrackNumber
setTrackNumber:
albumTrackCount
setTotalTrackCount:
setMediaType:
externalContentIdentifier
setExternalContentIdentifier:
isExplicitTrack
setExplicitContent:
setAlwaysLiveItem:
modelPlayEvent
name
setRadioStationName:
radio
stationStringID
setRadioStationStringIdentifier:
performWithoutEnforcement:
contentItemCollectionInfo
setCollectionInfo:
setLoading:
modelGenericObject
flattenedGenericObject
personalizedStore
playbackAuthorizationToken
setEditingStyleFlags:
setHasArtwork:
visualIdenticalityIdentifier
stringRepresentation
setArtworkIdentifier:
_shouldPublishArtworkURL
resolvedURLString
setArtworkURL:
artworkTemplateItems
setArtworkURLTemplates:
requestExportableArtworkPropertiesWithCompletion:
libraryLyrics
initWithLyrics:userProvided:
setLyrics:
setHasLyrics:
_updateAudioFormatInfoForContentItem:
_contentItemUserInfo
setUserInfo:
_contentItemDeviceSpecificUserInfo
setDeviceSpecificUserInfo:
dictionary
attributionLabel
subtype
providerUniversalLink
setObject:forKeyedSubscript:
providerBundleIdentifier
stationProviderID
numberWithLongLong:
timeOfSeekableEnd
shouldShowComposer
containerUniqueID
storeFrontIdentifier
storeAsset
isRedownloadable
isSubscriptionRequired
isLibraryAddEligible
explicitBadge
includeContentItemDebugFields
storeAccountID
useListeningHistory
lastChangeDirection
isAutoPlayItem
isSharedListeningItem
isArtistUploadedContent
numberWithUnsignedLongLong:
cloudID
cloudAlbumID
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
dataUsingEncoding:
isLibraryAdded
databaseID
personID
keepLocalEnableState
keepLocalManagedStatus
localFileAsset
isNonPurgeable
protectionType
endpointType
userRating
numberWithFloat:
playbackPosition
shouldRememberBookmarkTime
customAVEQPreset
allowsEQ
_setEQPreset:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
setForwardPlaybackEndTime:
dictionaryWithObject:forKey:
_setAudibleDRMInfo:
_setRampInOutInfo:
arrayWithObject:
_itemAttributeAvailableKey:
mpLoadValuesAsynchronouslyForKeys:completionQueue:completionHandler:
setElapsedTime:playbackRate:
isPlaybackBufferFull
isPlaybackLikelyToKeepUp
_currentPlaybackRateDidChange:
hasProtectedContent
_imageChapterTrackIDsForAsset:
tracks
assetTrack
isEnabled
trackID
errorResolverForItem:
initWithErrorResolver:
setResolutionHandler:
resolveError:
isFileURL
URLFromPath:
placeholder
TB,R,N,GisPlaceholder
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
isSupportedDefaultPlaybackSpeed:
initWithURL:options:
canUseLoadedAsset
supportsFastForward
supportsRewind
supportsRateChange
disableItemReuse
playbackError
resetBookkeeping
setPlaybackStoppedTime:
notePlaybackFinishedByHittingEnd
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setRating:
subtitleTrackID
setSubtitleTrackID:
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
setUserSkippedPlayback:
userAdvancedDuringPlayback
userSkippedPlayback
userChangedItemsDuringPlayback
durationInSeconds
applyVolumeNormalizationWithSoundCheckEnabled:
isValidPlayerSubstituteForItem:
isAssetURLValid
setExplicitBadge:
setLastChangeDirection:
currentTimeDisplayOverride
usesSubscriptionLease
displayableTextLoaded
hasPlayedThisSession
isAd
isStreamable
playbackRateForLevel:direction:paused:
prepareForRate:completionHandler:
setFeeder:
scanIntervalForLevel:paused:
setHasPlayedThisSession:
setLikedState:
storeItemID
supportsRating
timedMetadataIfAvailable
setContentItemID:
contentItem
isRadioItem
stationAllowsItemLiking
stationID
stationHash
stationName
durationIsValid
durationIfAvailable
playableDurationIfAvailable
_clearAsset
_clearAssetNow
setupEQPresetWithDefaultPreset:
setupWithPlaybackInfo
_updateDurationSnapshotWithElapsedTime:playbackRate:
_applyLoudnessInfo
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
_setCurrentPlaybackRate:
_setNeedsPersistedLikedStateUpdate
setAutoPlayItem:
setSharedListeningItem:
setExplicitContentState:
invalidateContentItemDeviceSpecificUserInfo
invalidateContentItemAudioFormatInfo
reevaluateHasProtectedContent
reevaluateType
replacePlayerItemWithPlayerItem:
resolvePlaybackError:withCompletion:
_willBecomeActivePlayerItem
_willResignActivePlayerItem
_didResignActivePlayerItem
_didBecomeActivePlayerItem
analyticsContentType
analyticsFormatType
pauseContentKeySession
resumeContentKeySession
_currentPlaybackRate
soundCheckVolumeNormalization
rtcReportingParentHierarchyToken
setRtcReportingParentHierarchyToken:
observer
setObserver:
meetsPlaybackHistoryThreshold
didAttemptToLoadAsset
canReusePlayerItem
itemError
setItemError:
queueIdentifier
setQueueIdentifier:
chapterTimeMarkers
artworkTimeMarkers
urlTimeMarkers
closedCaptionTimeMarkers
setClosedCaptionTimeMarkers:
useEmbeddedChapterData
copyrightText
isLikedStateEnabled
supportsLikedState
loudnessInfoVolumeNormalization
setLoudnessInfoVolumeNormalization:
prefersSeekOverSkip
isTailPlaceholder
isStartItem
setStartItem:
repeatIndex
setRepeatIndex:
shouldPreventPlayback
setModelPlayEvent:
setInitialPlaybackStartTimeOverride:
lastMetadataChangeTime
setLastMetadataChangeTime:
rtcReportingServiceIdentifier
allowsAirPlayFromCloud
requiresLoadedAssetForAirPlayProperties
hasFinishedDownloading
hasPerformedErrorResolution
setHasPerformedErrorResolution:
setPlaybackInfo:
isActiveItem
setActiveItem:
hasExternalDisplay
setExternalDisplay:
leasePlaybackPreventionState
leaseStatus
didReachEnd
previousContentItemID
setPreviousContentItemID:
explicitContentState
_asset
_assetQueue
_avPlayerItem
_isAssetLoaded
_feeder
_soundCheckVolumeNormalization
_cachedDuration
_cachedPlayableDuration
_cachedSeekableTimeRanges
_seekableTimeRangesCacheTime
_type
_contentItem
_defaultPlaybackRate
_advancedDuringPlayback
_handledFinishTime
_hasPlayedThisSession
_wasCountedAsSkipped
_isStreamable
_watchingAttributes
_userChangedItemsDuringPlayback
_lyricsAvailable
_hasLoadedHasProtectedContent
_hasLoadedPlaybackMode
_hasValidPlayerItemDuration
_lastLoggedTotalDuration
_likedState
_playerItemDuration
_exportableArtworkRevision
_privacyContext
_meetsPlaybackHistoryThreshold
_assetLoaded
_didAttemptToLoadAsset
_canReusePlayerItem
_useEmbeddedChapterData
_likedStateEnabled
_supportsLikedState
_prefersSeekOverSkip
_hasProtectedContent
_tailPlaceholder
_startItem
_shouldPreventPlayback
_allowsAirPlayFromCloud
_allowsExternalPlayback
_requiresLoadedAssetForAirPlayProperties
_hasFinishedDownloading
_hasPerformedErrorResolution
_activeItem
_externalDisplay
_didReachEnd
_autoPlayItem
_sharedListeningItem
_loudnessInfoVolumeNormalization
_rtcReportingParentHierarchyToken
_observer
_itemError
_queueIdentifier
_playbackMode
_chapterTimeMarkers
_artworkTimeMarkers
_urlTimeMarkers
_closedCaptionTimeMarkers
_albumStoreID
_copyrightText
_externalContentIdentifier
_storeItemInt64ID
_storeSubscriptionAdamID
_mediaItem
_explicitBadge
_repeatIndex
_lastChangeDirection
_modelGenericObject
_modelPlayEvent
_initialPlaybackStartTimeOverride
_lastMetadataChangeTime
_rtcReportingServiceIdentifier
_playbackInfo
_storeFrontIdentifier
_storeAccountID
_useListeningHistory
_leasePlaybackPreventionState
_leaseStatus
_contentItemID
_previousContentItemID
_explicitContentState
TB,N,V_isAssetLoaded
tailPlaceholder
TB,R,N,GisTailPlaceholder,V_tailPlaceholder
startItem
TB,N,GisStartItem,V_startItem
Tq,N,V_repeatIndex
Tq,N,V_lastChangeDirection
TB,R,N,V_shouldPreventPlayback
T@"MPModelGenericObject",R,N,V_modelGenericObject
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSNumber",R,C,N
T@"NSNumber",C,N,V_initialPlaybackStartTimeOverride
T@"NSNumber",C,N,V_lastMetadataChangeTime
T@,&,N,V_rtcReportingParentHierarchyToken
T@"NSString",R,C,N,V_rtcReportingServiceIdentifier
TB,R,N,V_allowsAirPlayFromCloud
TB,R,N,V_allowsExternalPlayback
TB,R,N,V_requiresLoadedAssetForAirPlayProperties
Tf,N,G_currentPlaybackRate,S_setCurrentPlaybackRate:,V_currentPlaybackRate
TB,R,N,V_hasFinishedDownloading
TB,N,V_hasPerformedErrorResolution
T@"NSDictionary",C,N,V_playbackInfo
T@"AVPlayerItem",&,N
T^{OpaqueCMTimebase=},R,N
activeItem
TB,N,GisActiveItem,V_activeItem
T@"NSString",R,C,N,V_storeFrontIdentifier
externalDisplay
TB,N,GhasExternalDisplay,V_externalDisplay
T{?=qiIq},R,N
T@"NSNumber",R,N,V_storeAccountID
T@"NSNumber",R,N,V_useListeningHistory
Tq,R,N,V_leasePlaybackPreventionState
T@"ICMusicSubscriptionLeaseStatus",R,C,N,V_leaseStatus
T@"NSString",C,N,V_explicitBadge
TB,R,N,V_didReachEnd
T@"NSString",C,N,V_contentItemID
T@"NSString",C,N,V_previousContentItemID
autoPlayItem
TB,N,GisAutoPlayItem,V_autoPlayItem
sharedListeningItem
TB,N,GisSharedListeningItem,V_sharedListeningItem
Tq,N,V_explicitContentState
T@"MPNowPlayingContentItem",R,N
T@"<MPAVItemObserver>",W,N,V_observer
TB,R,N,V_meetsPlaybackHistoryThreshold
assetLoaded
TB,R,N,GisAssetLoaded,V_assetLoaded
assetURLValid
TB,R,N,GisAssetURLValid
TB,R,N,V_didAttemptToLoadAsset
T@"AVAsset",R,N
TB,R,N,V_canReusePlayerItem
T@"NSError",R,C,N
T@"NSError",&,N,V_itemError
T@"NSString",&,N,V_queueIdentifier
alwaysLive
TB,R,N,GisAlwaysLive
T@"MPQueueFeeder",W,N,V_feeder
Tq,R,N,V_playbackMode
T@"AVPlayerItemAccessLog",R,N
Tf,N,V_defaultPlaybackRate
T@"NSArray",R,N,V_chapterTimeMarkers
T@"NSArray",R,N,V_artworkTimeMarkers
T@"NSArray",R,N,V_urlTimeMarkers
T@"NSArray",&,N,V_closedCaptionTimeMarkers
TB,R,N,V_useEmbeddedChapterData
Tq,R,N,V_albumStoreID
artistUploadedContent
TB,R,N,GisArtistUploadedContent
T@"NSString",R,C,N,V_copyrightText
explicitTrack
TB,R,N,GisExplicitTrack
T@"NSString",R,C,N,V_externalContentIdentifier
likedStateEnabled
TB,R,N,GisLikedStateEnabled,V_likedStateEnabled
TB,R,N,V_supportsLikedState
T@"NSString",R,C,N
streamable
TB,R,N,GisStreamable
Tq,R,N,V_storeItemInt64ID
Tq,R,N,V_storeSubscriptionAdamID
Tf,R,N
T@"MPMediaItem",R,&,N,V_mediaItem
Tf,N,V_loudnessInfoVolumeNormalization
Tf,N,V_soundCheckVolumeNormalization
TB,R,N,V_prefersSeekOverSkip
TB,R,N,V_hasProtectedContent
radioItem
TB,R,N,GisRadioItem
MPAVItem
setMPAVItem:
T@"MPAVItem",&,N
defaultInfo
requestingBundleIdentifier
requestingBundleVersion
clientInfo
setRequestingBundleIdentifier:
setRequestingBundleVersion:
itemIdentifiers
setItemIdentifiers:
reason
setKeyProfile:
personalizationStyle
setPersonalizationStyle:
allowLocalEquivalencies
setReturnsLocalEquivalencies:
retryDelay
setRetryDelay:
delegatedUserIdentity
setDelegatedIdentity:
setIdentity:
userIdentityStore
setIdentityStore:
setClientInfo:
initWithBlock:
setRequestContext:
setClientIdentifier:
setPlatformIdentifier:
setShouldIgnoreCache:
clientIdentifier
isPersonalized
storePlatformRequest
setAllowLocalEquivalencies:
setReason:
platform
setPlatform:
shouldIgnoreCache
shouldIgnoreExpiration
setShouldIgnoreExpiration:
shouldRequireCachedResults
setShouldRequireCachedResults:
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
_allowLocalEquivalencies
_shouldIgnoreCache
_shouldIgnoreExpiration
_shouldRequireCachedResults
_reason
_itemIdentifiers
_platform
_retryDelay
_clientIdentifier
_personalizationStyle
_clientInfo
_delegatedUserIdentity
_userIdentity
_userIdentityStore
T@"ICClientInfo",C,N,V_clientInfo
T@"ICUserIdentity",C,N,V_delegatedUserIdentity
T@"ICUserIdentity",C,N,V_userIdentity
T@"ICUserIdentityStore",&,N,V_userIdentityStore
T@"ICStorePlatformRequest",R,C,N
TB,N,V_allowLocalEquivalencies
TQ,N,V_reason
T@"NSArray",C,N,V_itemIdentifiers
T@"NSNumber",C,N,V_timeoutInterval
T@"NSString",C,N,V_platform
Td,N,V_retryDelay
TB,N,V_shouldIgnoreCache
TB,N,V_shouldIgnoreExpiration
TB,N,V_shouldRequireCachedResults
T@"NSString",C,N,V_clientIdentifier
personalized
TB,R,N,GisPersonalized
Tq,N,V_personalizationStyle
replaceIdentifierRegistry:
identifierRegistryWithExclusiveAccess:
identifierRegistryWithExclusiveAccessReturningObject:
identifierRegistryWithExclusiveAccessReturningBOOL:
identifierRegistryWithExclusiveAccessReturningInteger:
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
getRepresentativeMetadataForPlaybackContext:properties:completion:
firstModelPlayEvent
applyVolumeNormalizationForItem:
playActivityQueueGroupingID
setPlayActivityQueueGroupingID:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
setSiriReferenceIdentifier:
setSiriWHAMetricsInfo:
_identifierRegistry
_identifierRegistryLock
_uniqueIdentifier
_playActivityQueueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriReferenceIdentifier
_siriWHAMetricsInfo
T@"NSString",C,N,V_playActivityQueueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriReferenceIdentifier
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"NSString",R,N,V_uniqueIdentifier
sharedDeviceLibraryController
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
setModelObject:
_modelObject
T@"MPModelObject",&,N,V_modelObject
initWithStoreMusicAPIDictionary:
initWithStorePlatformDictionary:expirationDate:
initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:
offers
storeID
setWithObjects:
decodeObjectOfClasses:forKey:
allocWithZone:
_fetchValueFromStoreMusicAPIDictionary:
artworkRequestTokenForStorePlatformDictionary:
URLWithString:
initWithArtworkURL:
tokenWithImageArtworkInfo:
artworkRequestTokenForStoreMusicAPIDictionary
artworkRequestToken
stationGlyphRequestTokenForStoreMusicAPIDictionary
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStoreMusicAPIDictionary:parentStoreItemMetadata:
initWithStorePlatformDictionary:parentStoreItemMetadata:
descriptionTextWithStyle:
assets
editorNotesWithStyle:
expirationDate
compare:
artistName
artworkTrackIDs
audioTraits
collectionName
collectionStoreID
composerName
curatorID
curatorName
curatorHandle
hasArtistBiography
hasLyrics
hasSocialPosts
genreNames
isBeats1
explicitRating
isExplicitContent
isCompilation
isMasteredForiTunes
isPreorder
playlistType
personalMixSortKey
movementName
movementCount
movementNumber
movieClips
lookupDictionary
playlistIdentifiers
popularity
releaseDate
_storePlatformReleaseDateFormatter
stringFromDate:
lastModifiedDate
_storePlatformLastModifiedDateFormatter
shortName
shouldBookmarkPlayPosition
showComposer
trackCount
trackNumber
seasonNumber
episodeCount
versionHash
workName
handle
nameRaw
isPrivatePerson
isVerifiedPerson
shortURL
videoSubtype
radioStationTypeID
radioStationSubtype
isChart
radioStationProviderName
effectiveStorePlatformDictionary
numberWithInt:
hasSubscriptionOffer
artworkRequestTokenForStorePlatformArtworkValue:
initWithLookupDictionary:
dateFromString:
_musicAPIDateFormatter
numberWithUnsignedInteger:
setEndTime:
setDescriptionText:
initWithArtworkResponseArray:
initWithArtworkResponseDictionary:
calendarWithIdentifier:
timeZoneForSecondsFromGMT:
setTimeZone:
setSourceEditorialArtworkKind:
artworkRequestTokenForScreenshotArtwork
setCropStyle:
artworkRequestTokenForEditorialArtworkKind:
artworkRequestTokenForUberArtworkKind:
initWithDownloadAssetDictionary:
earlierDate:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
localeWithLocaleIdentifier:
setLenient:
storeServerCalendar
setCalendar:
initWithStorePlatformDictionary:
stationGlyphRequestToken
childStoreItemMetadatas
descriptionText
editorNotes
isExpired
shortEditorNotes
importableStorePlatformDictionary
isStoreRedownloadable
latestAlbumArtworkRequestToken
movieClipsCount
shouldReportPlayEvents
formerStoreAdamIDs
purchasedAdamID
subscriptionAdamID
isLive
radioStationEvents
avatarArtworkRequestToken
stationGlyphRequestTokenForStorePlatformDictionary:
childStorePlatformDictionaryForArtworkTrackID:
shortDescriptionText
tvEpisodeArtworkRequestToken
tvShowArtworkRequestToken
movieArtworkRequestToken
flowcaseEditorialArtworkRequestToken
brickEditorialArtworkRequestToken
metadataByAppendingMetadata:
metadataWithChildStorePlatformDictionaries:
metadataWithParentMetadata:
parentStoreItemMetadata
_downloadAssetDictionary
_downloadMetadataDictionary
_storeMusicAPIDictionary
_expirationDate
_hasOverrideChildStorePlatformDictionaries
_hasSubscriptionOffer
_overrideChildStorePlatformDictionaries
_storePlatformDictionary
_parentStoreItemMetadata
T@"MPStoreItemMetadata",R,C,N,V_parentStoreItemMetadata
T@"MPStoreArtworkRequestToken",R,N
T@,R,C,N
T@"NSArray",R,C,N
beats1
TB,R,N,GisBeats1
compilation
TB,R,N,GisCompilation
T@"NSDate",R,C,N
expired
TB,R,N,GisExpired
T@"NSDictionary",R,C,N
explicitContent
TB,R,N,GisExplicitContent
masteredForiTunes
TB,R,N,GisMasteredForiTunes
storeRedownloadable
TB,R,N,GisStoreRedownloadable
T@"NSURL",R,C,N
privatePerson
TB,R,N,GisPrivatePerson
verifiedPerson
TB,R,N,GisVerifiedPerson
live
TB,R,N,GisLive
offerType
currentCalendar
component:fromDate:
initWithStyle:reuseIdentifier:
colorWithWhite:alpha:
setBackgroundColor:
setSelectedBackgroundView:
configurationWithPointSize:weight:scale:
setPreferredSymbolConfiguration:
contentView
blackColor
setTintColor:
systemImageNamed:
setImage:
setContentMode:
setAlpha:
_handleContentSizeCategoryDidChangeNotification:
whiteColor
setHighlightedTextColor:
setTextAlignment:
setTextColor:
_setWantsUnderlineForAccessibilityButtonShapesEnabled:
darkGrayColor
setHidden:
initWithFrame:
defaultFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
configurationWithFont:scale:
didTapToExpand
initWithTarget:action:
addGestureRecognizer:
prepareForReuse
leader
routes
routeSubtype
localizedTitle
setText:
image
_iconImageForRoutes:
_iconImageForRoute:
isSymbolImage
_updateSubtitleTextLabelForRouteItem:
enabled
setEnabled:
setNeedsLayout
bottomSeparatorView
initWithActivityIndicatorStyle:
_updateSpinnerColor
startAnimating
stopAnimating
_updateAccessory
configurationWithTextStyle:scale:
layoutSubviews
accessoryView
_defaultAccessoryView
bounds
traitCollection
displayScale
frame
accessoryType
useSmartAudioCheckmarkStyle
isShowingVolumeSlider
hasVisibleTextTypeToShow
sizeThatFits:
preferredFontForTextStyle:compatibleWithTraitCollection:
setFont:
_baselineOffsetFromBottom
isHidden
center
maskView
setCenter:
setIconStyle:
setAccessoryType:
lightGrayColor
leftPercentage
rightPercentage
floatValue
batteryLevel
setNumberStyle:
setUsesSignificantDigits:
setUsesGroupingSeparator:
_shouldShowSeparateBatteryPercentagesForBatteryLevel:
bundleWithIdentifier:
localizedStringForKey:value:table:
stringFromNumber:
singlePercentage
casePercentage
isPickedOnPairedDevice
auxiliaryDevices
deviceName
playingPairedDeviceName
_checkmarkImageNameForSmartAudio
setAccessoryView:
_checkmarkImageForSmartAudio
_checkmarkAccessibilityLabelForSmartAudio
setAccessibilityLabel:
sizeToFit
_batteryTextForRoute:
setBatteryText:
_pairedDeviceTextForRoute:
setPairedDeviceText:
localizedSubtitle
setLocalizedSubtitle:
resetForNewRoute
isAnimating
layer
removeAllAnimations
stringForCurrentVisibleTextType
hasVisibleTextTypeToTransitionTo
_animateSubtitleLabelToNextAvailableText
scheduledTimerWithTimeInterval:repeats:block:
setColor:
setAnimating:
transitionToNextAvailableVisibleTextType
animateWithDuration:animations:completion:
delegate
routingCellDidTapToExpand:
titleView
subtitleView
iconView
separatorView
volumeSlider
setSubtitleViewAlpha:
updateForEndpoint:routeItem:inferLocalizedModelName:
volumeView
setMirroringStyle:
setPendingSelection:
setUseSmartAudioCheckmarkStyle:
setVolumeSlider:
setShowingVolumeSlider:
_configureLabel:
_configureDetailLabel:
mirroringSwitchVisible
setMirroringSwitchVisible:
mirroringStyle
iconStyle
isPendingSelection
isDisplayedAsPicked
setIsDisplayedAsPicked:
provideOwnSeparator
setProvideOwnSeparator:
subtitleViewAlpha
subtitleTextState
setSubtitleTextState:
_iconImageView
_routeNameLabel
_subtitleTextLabel
_subtitleTextUpdateTimer
_spinnerView
_smartAudioImageView
_checkmarkImageView
_chevronImageView
_expandTargetView
_mirroringSwitchVisible
_pendingSelection
_isDisplayedAsPicked
_useSmartAudioCheckmarkStyle
_provideOwnSeparator
_showingVolumeSlider
_delegate
_mirroringStyle
_iconStyle
_subtitleViewAlpha
_volumeSlider
_subtitleTextState
T@"MPAVRoutingTableViewCellSubtitleTextState",&,N,V_subtitleTextState
T@"<MPAVRoutingTableViewCellDelegate>",W,N,V_delegate
TB,N,V_mirroringSwitchVisible
TQ,N,V_mirroringStyle
TQ,N,V_iconStyle
pendingSelection
TB,N,GisPendingSelection,V_pendingSelection
TB,N,V_isDisplayedAsPicked
TB,N,V_useSmartAudioCheckmarkStyle
TB,N,V_provideOwnSeparator
Td,N,V_subtitleViewAlpha
T@"MPVolumeSlider",&,N,V_volumeSlider
showingVolumeSlider
TB,N,GisShowingVolumeSlider,V_showingVolumeSlider
initWithConfiguration:
setTransitioningDelegate:
setModalPresentationStyle:
viewDidLoad
_createMediaControlsIfNeeded
viewWillAppear:
_present
configuration
dismissViewControllerAnimated:completion:
didDismissHandler
setDismissHandler:
setMediaControls:
mediaControls
present
startPrewarming
stopPrewarming
dismiss
initWithRouteSharingPolicy:routingContextUID:
initWithPresentedViewController:presentingViewController:
completeTransition:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
transitionDuration:
animateTransition:
interruptibleAnimatorForTransition:
animationEnded:
prefersStatusBarHidden
prepareRemoteViewController
setOverrideRouteSharingPolicy:routingContextUID:
setDidDismissHandler:
_configuration
_didDismissHandler
_mediaControls
T@"MPMediaControls",&,N,V_mediaControls
T@"MPMediaControlsConfiguration",R,N,V_configuration
T@?,C,N,V_didDismissHandler
T@"<MPMediaControlsViewControllerDelegate>",W,N,V_delegate
shouldRemovePresentersView
presentAnimated:completion:
dismissAfter:
setCountLimit:
representationSize
scaledFittingSize
representationToken
cache
_representationCacheKeyForArtworkCatalog:forAnyRevision:
_removeLoadingRequestForArtworkCatalog:
_performSyncBlock:
_addLoadingRequestForArtworkCatalog:
_hasLoadingRequestForArtworkCatalog:
_errorWithDescription:
tileArtworkVisualIdenticalityIdentifiers
renderHint
setRenderHint:
isEqualToArray:
representationForVisualIdentity:withSize:image:
setTileArtworkVisualIdenticalityIdentifiers:
setRepresentationToken:
null
destinationScale
_tileSizeForFittingSize:rows:columns:spacing:
setFittingSize:
setDestinationScale:
replaceObjectAtIndex:withObject:
requestImageWithCompletion:
representationWithPreparedImage:
prepareForDisplayWithCompletionHandler:
initWithTiledArtworkRequest:scaledFittingSize:
dataSource
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
_loadingRequestForArtworkCatalog:
sharedDataSource
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkPropertiesForCatalog:completionHandler:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
_performAsyncBlock:
_loadingTiledArtworkRequests
_loadingTiledArtworkRequestsAccessQueue
_renderingTiledArtworkRequestsQueue
_tiledArtworkRepresentationFallbackCache
_tilingArtworkCatalogOperationQueue
legacyMediaQuery
_executeLegacyRequest
_executeRequest
connectionAssertionWithIdentifier:
_libraryView
_itemProperties
sectionKind
MLCorePropertiesForPropertySet:
entityClass
_sectionProperties
groupingType
setGroupingType:
collections
_representativeCollectionGroupingType
resultSet
playlistAttributes
items
revision
itemsQuery
_hasStaticEntities
_enumerateItemPersistentIDsUsingBlock:
ml3Library
criteria
ML3ItemsQueryInLibrary:
enumeratePersistentIDsAndProperties:usingBlock:
filtersOnDynamicProperties
currentRevision
currentContentRevision
initWithRequest:sectionQueryResults:itemQueryResults:
initWithDataSource:
sectionInfo
sections
range
title
enumerateObjectsUsingBlock:
sectionIndexTitles
_enumerateCollectionPersistentIDsUsingBlock:
initWithRequest:itemQueryResults:itemIdentifierQueryResults:
setLibraryAssertion:
handleFailureInFunction:file:lineNumber:description:
_sanityCheckRequest
setOperationQueue:
operationQueue
setSectionKeepLocalStatusConfigurations:
contentRange
sectionTranslationContext
accountDSID
setPersonID:
sectionSortDescriptors
setQuery:
setSerialAccessQueue:
serialAccessQueue
wantsDetailedKeepLocalRequestableResponse
setMultiQuery:
setFilteringOptions:
allowedItemIdentifiers
setAllowedEntityIdentifiers:
filterText
setFilterText:
scopedContainers
arrayByAddingObject:
itemSortDescriptors
setDownloadablePlaylistItemEntityQueryBlock:
setDownloadableItemsQuery:
setResultHandler:
propertiesQueryForPropertySet:scopedContainers:allowedItemIdentifiers:view:
itemTranslationContext
intersectsSet:
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
_serialAccessQueue
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperationQueue",&,N,V_serialAccessQueue
T@"MPModelLibraryRequest",C,N,V_request
query
libraryView
resultHandler
_resultHandler
_query
T@"MPMediaLibraryView",&,N,V_libraryView
T{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}},N,V_query
T@?,C,N,V_resultHandler
sharedInstance
_resetInternalState
prefersApplicationAudioSession
_setQueueController:deferItemLoading:
_applicationWillAddDeactivationReason:
_applicationDidRemoveDeactivationReason:
_applicationDidEnterBackgroundNotification:
_applicationWillEnterForegroundNotification:
_audioSessionMediaServicesWereResetNotification:
_cancelStallTimer
_cancelUpdateCurrentItemBookkeepingTimer
removeTimeObserver:
_unregisterForPlayer:
_unregisterForAVItemNotifications:
sharedApplication
endBackgroundTask:
setUbiquitousBookkeepingEnabled:
_pauseWithFadeout:forScanning:
_setState:
_updateScanningRate
_hasValidPlayerTime
_setLastSetTime:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:error:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
_delayedPlaybackIndexChange
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
queuePlayer
setCurrentTime:
_updateDirectionForChangeDelta:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
_queueDidEndWithReason:lastItem:
jumpToContentItemID:
_endSeekAndChangeRate:
isCurrentItemReady
isLiveStreaming
_currentTimeWithPreloadedPlayerTime:value:
_setRate:forScanning:withItem:completion:
_setAllowsItemErrorResolution:
reset
pauseWithFadeout:
setActionAfterQueueLoadOverride:
disableAutoplayForCurrentItem
_setStoppingFadeOutDuration:
silenceOutput:error:
playWithOptions:
_playWithOptions:allowsEnablingAutoPlay:
_shouldProvideAudiblePlaybackPerformance
state
_delayedSetCurrentTime
_hasEnoughDataToPlay
_canPlayItem:
_rateDidChange:
enableAutoplayForCurrentItem
setAutoPlayWhenLikelyToKeepUp:
_attemptAutoPlay
setCurrentTime:options:
togglePlaybackWithOptions:
alwaysPlayWheneverPossible
endTickTimer
setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:
setAllowsExternalPlayback:shouldIgnorePlaybackQueueTransactions:
_showsPlayingWhenInState:
_displayPlaybackState
usesExternalPlaybackWhileExternalScreenIsActive
setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:
setUsesExternalPlaybackWhileExternalScreenIsActive:shouldIgnorePlaybackQueueTransactions:
setRate:completion:
_sendTracePlaybackStartDidFinishIfNeededForItem:
volumeControlIsAvailable
_userVolume
_setUserVolume:
_setActionAtEndAttributeForState:
initWithName:
setFetchAvailableRoutesSynchronously:
pickedRoute
_applyAirPlayMusicMode
setClient:wantsToAllowExternalPlayback:
setDisableAirPlayMirroringDuringPlayback:
setUsesAudioOnlyModeForExternalPlayback:
_disconnectAVPlayerWithReason:
_playerAVAudioSession
setApplicationAudioSession:
_connectAVPlayer
audioFormats
unsignedIntValue
_setAutoPlayBackgroundTaskAssertionEnabled:
externalPlaybackType
externalPlaybackVideoGravity
playerAVAudioSession
setActive:error:
setExternalPlaybackVideoGravity:
setCurrentTime:options:completion:
queueCoordinator
shouldDeferItemLoading
_clearSeekingIntervalsForStreaming
_resumeTickTimer
_pauseTickTimer
_updateCurrentItemDurationSnapshotWithPlayerTime:
_pickedRoute
setUsesAudioOnlyModeForExternalPlayback:shouldIgnorePlaybackQueueTransactions:
usesAudioOnlyModeForExternalPlayback
reloadWithPlaybackContext:completionHandler:
shouldBecomeActive
setShouldDeferItemLoading:
endPlayback
_playbackFailedWithError:canResolve:
actionAfterQueueLoadOverride
actionAfterQueueLoad
_playerFailedToQueueNotification:
currentTimeForBookmarking
playableDurationOfCurrentItemIfAvailable
_contentsChanged
reloadWithPlaybackContext:
isSuspended
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
_registerForAVItemNotifications:
_updateTypeForItem:
_updateHasProtectedContentForItem:
endSeek
initWithObjectsAndKeys:
_itemFailedToPlayToEnd:
airPlayVideoEnded
airPlayFailedRentalDownloadRequired
_airPlayFailedUnsupportedVideoFormatForDeviceWithError:
seekToTime:toleranceBefore:toleranceAfter:
_delayedUpdateScanningRate
changePlaybackIndexBy:deltaType:
actionAtItemEnd
_verifyDisplayProtection
_setValid:
_setBufferingState:
sharedNetworkPlayabilityMonitor
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_prepareToPlayItem:
applicationState
skipToSeekableEnd
_resumePlayback:
routingController
clearCachedRoutes
_updateCurrentItemBookkeepingMarkedAsCheckpoint:
_clearLastSetTimeIfPlayerTimeIsValid
playbackHasStartedForItem:
_itemDidSignificantlyChangeElapsedTime:rate:
isApplicationAudioSession
setCategory:error:
_connectAVPlayerDeferringItemLoading:
initWithPlayer:dataSource:
initWithAVController:
_expectedAssetTypesForPlaybackMode:
_setExpectedAssetTypes:
setQueueCoordinator:
_playerKeysToObserve
_setClientName:
setActionAtItemEnd:
routingControllerAvailableRoutesDidChange:
addPeriodicTimeObserverForInterval:queue:usingBlock:
_configureAudioSession
removeAllItems
pickBestDeviceRoute
_itemWillChange:
currentItemDidChangeFromItem:toItem:
_itemDidChange:
_isExternalPlaybackActiveDidChange:
_serverConnectionDidDie:
_canPlayFastForwardDidChange:
_canPlayFastReverseDidChange:
_streamRanDry:
_streamBufferFull:
_streamLikelyToKeepUp:
_streamUnlikelyToKeepUp:
_itemReadyToPlay:
_tracksDidChange:
_durationDidChange:
_shouldPausePlaybackForDeactivationReasons:
_resumePlaybackIfNecessary
_pauseBookkeepingTimer
_resumeBookkeepingTimer
outputObscuredDueToInsufficientExternalProtection
_applyAirPlayMusicModeForItem:shouldIgnorePlaybackQueueTransactions:
externalScreenType
canAccessRemoteAssets
isAppleTVRoute
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
msv_compactDescription
removeObserver:forKeyPath:
_updateStateForPlaybackPrevention
_itemKeysToObserve
_itemPlaybackDidEndNotification:
_itemFailedToPlayToEndNotification:
_timeHasJumpedNotification:
_itemAssetIsLoadedNotification:
_itemTypeAvailableNotification:
_itemBookmarkTimeDidChangeNotification:
_itemPlayerItemDidChangeNotification:
_itemPlayerItemWillChangeNotification:
beginBackgroundTaskWithName:expirationHandler:
autoPlayWhenLikelyToKeepUp
beginBackgroundTaskWithExpirationHandler:
shouldHaveNoActionAtEndForState:
postNotification:
notificationWithName:object:userInfo:
currentRunLoop
_delayedPostPlaybackStateChangedNotification
arrayWithObjects:
performSelector:target:argument:order:modes:
setDisplayOverridePlaybackState:
autoclearDisplayOverride
_postPlaybackStateChangedNotificationWithOriginalState:newState:delayable:
_scheduleUpdateCurrentItemBookkeepingTimer
_clearResetRateAfterSeeking
_seeklessStateForState:
_configureUpdateCurrentItemBookkeepingTimer
_updateSeekingIntervalsForStreaming
setRateForScanning:
metadataItemsFromArray:withKey:keySpace:
dataValue
_handlePlaybackErrorResolutionType:forItem:playbackError:resolutionError:
handlePlaybackErrorWithUserInfo:
jumpToContentItemID:userInitiated:
useAirPlayMusicMode
isSuspendedUnderLock
setNextFadeOutDuration:
_player
initialize
keyPathsForValuesAffectingCurrentItem
outputSupportsAC3
automaticallyNotifiesObserversOfPlaylistManager
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
beginInterruption
endInterruptionWithFlags:
endInterruption
inputIsAvailableChanged:
beginInterruptionFromInterruptor:
endInterruptionFromInterruptor:category:flags:
beginSeek:
_updateLastSetTimeForCurrentItemIfNeeded
isSeekingOrScrubbing
togglePlayback
forceRestartPlaybackIfNecessary
beginTickTimerWithInterval:
isTickTimerEnabled
shouldDisplayAsPlaying
setAlwaysPlayWheneverPossible:
disableAirPlayMirroringDuringPlayback
hasVolumeControl
volume
setVolume:
stopAtEnd
setStopAtEnd:
setUseAirPlayMusicMode:
setManagesAirPlayBehaviors:
avPlayer
setActive:
becomeActiveWithCompletion:
loadSessionWithQueueController:completionHandler:
updateBookkeepingNow
finalizeBookkeepingNow
setState:
showPlaybackStateOverlaysOnTVOut
durationOfCurrentItemIfAvailable
timeOfPlayableStart
timeOfPlayableEnd
canSeekBackwards
canSeekForwards
canSkipToSeekableEnd
skipToSeekableStart
ubiquitousBookkeepingEnabled
_updateCurrentItemBookkeepingForTimerCallback
_currentIndexInBoundaryCMTimes:
setAutoclearingDisplayOverridePlaybackState:
_updateProgress:
_extractImageFromMetadata:
_pausePlaybackIfNecessary
_enforcingPolicy:
addPeriodicTimeObserverForInterval:usingBlock:
displayOverridePlaybackState
lastDirection
muted
setPlaybackMode:
policyEnforcer
setPolicyEnforcer:
setQueuePlayer:
queueController
nextFadeOutDuration
shouldEnforceHDCP
setShouldEnforceHDCP:
shouldPostCompatibilityNotifications
setShouldPostCompatibilityNotifications:
isReloadingForPlaybackContextChange
setIsReloadingForPlaybackContextChange:
canAttemptErrorResolution
identifier
managesAirPlayBehaviors
stateBeforeInterruption
_didResolveError
_disableAirPlayMirroringDuringPlayback
_shouldPreventStateChangesForRateChange
_stallBackgroundTaskIdentifier
_usesAudioOnlyModeForExternalPlayback
_allowsItemErrorResolution
_routingController
_periodicTimeObserverToken
_tickTimerEnabled
_tickTimer
_tickInterval
_currentItemBookkeepingTimer
_indexChangeDirection
_contentItemIDAtDeath
_lastDisconnectReason
_lastKnownTimeBeforeDeath
_lastPlaybackIndexChangeTime
_lastSetTime
_lastSetTimeChangeTime
_hasDelayedCurrentTimeToSet
_forceDelayedCurrentTimeToSet
_delayedCurrentTimeToSet
_pendingCurrentTime
_delayedCurrentTimeOptions
_lastSetTimeMarker
_temporaryChapterTime
_autoPlayWhenLikelyToKeepUp
_autoplayDisabledForCurrentItem
_autoPlayBackgroundTaskAssertionEnabled
_autoPlayBackgroundTaskCount
_appHasBeenSuspended
_deactivationReasons
_autoPlayBackgroundTaskIdentifier
_autoPlayTimeoutSource
_nextFadeOutDuration
_hasPendingRate
_hasSentTracePlaybackStartDidFinish
_pendingRateItem
_pendingRate
_pendingChangeForScanning
_boundaryTimeObserver
_boundaryTimes
_boundaryTimeIndexLastPosted
_observerInfos
_observerInfoToCoreMediaObserver
_rateBeforeSeek
_inflightSeekRate
_scanLevel
_scanDirection
_resetRateAfterSeekingUpdateDisabled
_seeklessState
_isSeekingOrScrubbing
_resetRateAfterSeeking
_activeRewindHoldingAtStart
_lastSeekableEnd
_whenSawSeekableEnd
_maxSeekableFwd
_seekFwdSlop
_lastSeekableStart
_whenSawSeekableStart
_maxSeekableRev
_seekRevSlop
_canSeekRev
_canSeekFwd
_alwaysPlayWheneverPossible
_stopAtEnd
_pausedDuringInterruption
_resumePlaybackWhenActive
_playInBackgroundUserDefaultEnabled
_canPlayFastForward
_canPlayFastReverse
_shouldAutoclearDisplayOverride
_state
_displayOverridePlaybackState
_bufferingState
_delayedPlaybackStateNotification
_stallTimerSource
_hasProvidedAudibleLikelyToKeepUp
_hasProvidedAudiblePlay
_itemInitialBookmarkTime
_rateBeforeResignActive
_ubiquitousBookkeepingDisabledCount
_secondsSinceUbiquitousCheckpoint
_videoViewClass
_lastInterruptionEnd
_shouldEnforceHDCP
_clientsWantingExternalPlayback
_currentItemRevisionID
_muted
_shouldPostCompatibilityNotifications
_isReloadingForPlaybackContextChange
_canAttemptErrorResolution
_useAirPlayMusicMode
_managesAirPlayBehaviors
_lastDirection
_policyEnforcer
_actionAfterQueueLoadOverride
_queuePlayer
_queueCoordinator
_queueController
_identifier
_stateBeforeInterruption
T@"MPAVPolicyEnforcer",&,N,V_policyEnforcer
Tq,N,V_actionAfterQueueLoadOverride
T@"MPQueuePlayer",R,N
T@"MPQueuePlayer",&,N,V_queuePlayer
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
T@"<MPAVQueueController>",R,N,V_queueController
Tq,N,V_displayOverridePlaybackState
Td,N,V_nextFadeOutDuration
externalPlaybackActive
TB,R,N,GisExternalPlaybackActive
TB,N,V_shouldEnforceHDCP
TB,N,V_shouldPostCompatibilityNotifications
TB,N,V_isReloadingForPlaybackContextChange
TB,R,N,V_canAttemptErrorResolution
T@"NSString",R,C,N,V_identifier
Tq,N,V_state
TB,N,V_useAirPlayMusicMode
TB,N,V_managesAirPlayBehaviors
Tq,R,N,V_stateBeforeInterruption
T@"MPQueueFeeder",R,N
T@"MPAVItem",R,N
T@"MPAVRoutingController",R,N
Tq,R,N,V_lastDirection
TB,R,N,V_muted
TQ,R,N,V_bufferingState
currentItemReady
TB,R,N,GisCurrentItemReady
Tq,N,V_playbackMode
playing
TB,R,N,GisPlaying
TB,R,N,GisValid
artworkCatalogBlock
chapters
chapterOfType:atTime:
artworkCatalog
previewArtworkRequestToken
_lookupDictionary
T@"NSDictionary",R,C,N,V_lookupDictionary
T@"MPStoreArtworkRequestToken",R,C,N
enableState
setEnableState:
identifyingModelObject
setIdentifyingModelObject:
_enableState
_identifyingModelObject
Tq,N,V_enableState
T@"MPModelObject",&,N,V_identifyingModelObject
initWithBytesNoCopy:length:encoding:freeWhenDone:
startTime
endTime
T@"NSDate",C,N
_title
_descriptionText
_startTime
_endTime
T@"NSString",C,N,V_title
T@"NSString",C,N,V_descriptionText
T@"NSDate",C,N,V_startTime
T@"NSDate",C,N,V_endTime
_getConnectionWithCompletionHandler:
_setRadioAvailable:
_endRemoteProcessAssertion
remoteObjectProxyWithErrorHandler:
serviceRadioControllerGetRecentStationGroupsWithCompletionHandler:
_beginRemoteProcessAssertionWithCompletionHandler:
sharedService
initWithBundleIdentifier:flags:reason:name:withHandler:
openApplication:options:withResult:
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
resume
serviceRadioControllerGetRadioAvailabilityWithCompletionHandler:
clientRadioControllerRadioAvailabilityDidChange:
clientRadioControllerRecentStationsDidChange
isRadioAvailable
getRecentStationGroupsWithCompletionHandler:
_accessQueue
_connection
_hasLaunchedService
_isRadioAvailable
_remoteProcessAssertion
_remoteProcessAssertionCompletionHandler
_remoteProcessAssertionCount
radioAvailable
TB,R,N,GisRadioAvailable
propertySetWithProperties:
setStationStringID:
setRadioIdentifiersWithBlock:
setBeats1:
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
setProviderName:
setLive:
setType:
setSubtype:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
setFormat:
setStationGlyphBlock:
setAttributionLabel:
setStationEvents:
copyWithBlock:
sharedStoreItemMetadataRequestController
addStoreItemMetadata:
_requestedRadioStationProperties
kindWithModelClass:cacheKey:block:
variants
options
stringWithString:
insertString:atIndex:
kindWithVariants:options:
_variants
_options
TQ,R,N,V_variants
TQ,R,N,V_options
hasVideo
__title_KEY
__album_KEY
__artist_KEY
__genre_KEY
__composer_KEY
__grouping_KEY
__copyrightText_KEY
__duration_KEY
__trackCount_KEY
__trackNumber_KEY
__discNumber_KEY
__playCount_KEY
__skipCount_KEY
__explicitSong_KEY
__artistUploadedContent_KEY
__hasVideo_KEY
__beatsPerMinute_KEY
__lyrics_KEY
__shouldShowComposer_KEY
__volumeNormalization_KEY
__artworkCatalogBlock_KEY
__localFileAsset_KEY
__keepLocalEnableState_KEY
__keepLocalManagedStatus_KEY
__libraryAdded_KEY
__libraryAddedDate_KEY
__lastDevicePlaybackDate_KEY
__libraryAddEligible_KEY
__hasCloudSyncSource_KEY
__classicalWork_KEY
__classicalMovement_KEY
__classicalMovementCount_KEY
__classicalMovementNumber_KEY
__year_KEY
__homeSharingAsset_KEY
__storeAsset_KEY
__userRating_KEY
__cloudStatus_KEY
__gaplessInfo_KEY
__volumeAdjustment_KEY
__playbackPosition_KEY
__downloadedDate_KEY
__traits_KEY
T@"MPModelAlbum",&,D,N
T@"MPModelArtist",&,D,N
T@"MPModelGenre",&,D,N
T@"MPModelComposer",&,D,N
grouping
T@"MPModelFileAsset",&,D,N
homeSharingAsset
T@"MPModelHomeSharingAsset",&,D,N
T@"MPModelPlaybackPosition",&,D,N
T@"MPModelStoreAsset",&,D,N
Td,D,N
Tq,D,N
playCount
skipCount
explicitSong
TB,D,N,GisExplicitSong
TB,D,N,GisArtistUploadedContent
beatsPerMinute
T@"MPModelLyrics",&,D,N
volumeNormalization
Tf,D,N
T@?,C,D,N
hasCloudSyncSource
libraryAdded
TB,D,N,GisLibraryAdded
libraryAddedDate
T@"NSDate",C,D,N
libraryAddEligible
TB,D,N,GisLibraryAddEligible
year
cloudStatus
gaplessInfo
T@"MPGaplessInfo",&,D,N
volumeAdjustment
traits
TQ,D,N
classicalWork
classicalMovement
classicalMovementCount
classicalMovementNumber
downloadedDate
T@"NSDate",R,C,D,N
lastDevicePlaybackDate
_onQueue_controllerDidDiscoverTelevision:
_onQueue_controllerDidRemoveTelevision:
setDiscoveryMode:
_discoveredTelevisions
initWithTelevision:
devicePresenceDetected
getRoutesForCategory:
getPickedRouteHasVolumeControlWithCompletion:
_discoveryController
_serialQueue
numberWithUnsignedInt:
T@"NSMutableDictionary",R,N
siriSessionIdentifier
setSiriSessionIdentifier:
_siriSessionIdentifier
TI,N,V_sessionID
T@"NSString",C,N,V_siriSessionIdentifier
mediaRemoteAudioFormat
tier
setTier:
bitrate
setBitrate:
sampleRate
setSampleRate:
bitDepth
setBitDepth:
codec
setCodec:
groupID
setGroupID:
stableVariantID
setStableVariantID:
isSpatialized
setSpatialized:
isMultiChannel
setMultiChannel:
channelLayout
setChannelLayout:
audioChannelLayoutDescription
setAudioChannelLayoutDescription:
initWithMediaRemoteAudioFormat:
_mediaRemoteAudioFormat
T@"MRContentItemMetadataAudioFormat",R,N,V_mediaRemoteAudioFormat
spatialized
TB,N,GisSpatialized
multiChannel
TB,N,GisMultiChannel
T@"NSString",&,N
adamID
setSongPopularity:forAdamID:
songPopularityForAdamID:
dictionaryWithCapacity:
dictionaryWithDictionary:
initWithAppDataDictionary:
setSongPopularity:forIdentifierSet:
songPopularityForIdentifiers:
createAppDataDictionary
version
_version
_appDataDict
_dirtyPopularityDict
Tq,R,N,V_version
assetURL
downloadKey
fairPlayInfoList
initWithiTunesCloudStoreFileAssetFairPlayInfo:
flavorType
fileExtension
fileSize
initWithiTunesCloudStoreFileAssetInfo:
_internalInfo
T@"NSData",R,C,N
artworkGenerator
setArtworkGenerator:
_artworkGenerator
T@"<MPMediaRemoteEntityArtworkGenerator>",&,N,V_artworkGenerator
translatorWithKeyPath:
translatorWithBlock:
valueFromSource:context:
keyPath
valueTransformBlock
_keyPath
_valueTransformBlock
T@"NSString",R,N,V_keyPath
T@?,R,N,V_valueTransformBlock
objectForPropertySet:contentItem:context:
MPModelClass
artworkCatalogBlockForContentItem:
stringByAppendingString:
initWithRelatedMPModelClass:
collectionInfo
requiredStoreLibraryPersonalizationProperties
buildSchemaIfNeeded
identifiersForContentItem:
sectionObjectForPropertySet:contentItem:context:
mapIdentifierCreationBlock:
mapPropertyKey:toMPContentItemSelector:
mapArtworkPropertyKey:
mapPropertyKey:toUserInfoKey:
mapPropertyKey:toDeviceSpecificUserInfoKey:
mapPropertyKey:toValueTransformer:
mapRelationshipKey:toModelClass:
timerWithInterval:repeats:block:
timerWithInterval:repeats:queue:block:
initWithInterval:repeats:queue:block:
timerWithInterval:block:
timerWithInterval:queue:block:
initWithInterval:queue:block:
_timerSource
setPredicates:
removeAllObjects
dictionaryRepresentation
addPredicates:
writeTo:
data
writeData:forTag:
predicatesCount
clearPredicates
predicatesAtIndex:
readFrom:
copyTo:
predicates
_predicates
T@"NSMutableArray",&,N,V_predicates
_applicationWillEnterForeground:
_registerForScreenRecordingNotifications
_unregisterForScreenRecordingNotifications
_updateScreenRecordingState
setMuted:
_isScreenRecordingDidChange:
_screenRecordingNotifyToken
_lastKnownScreenRecordingState
T@"MPAVController",R,W,N,V_controller
_scaledFittingSize
_stringForVisibleTextType:
_nextAvailableVisibleTextType
batteryText
pairedDeviceText
currentVisibleTextType
setCurrentVisibleTextType:
_animating
_batteryText
_pairedDeviceText
_localizedSubtitle
_currentVisibleTextType
TQ,N,V_currentVisibleTextType
T@"NSString",C,N,V_batteryText
T@"NSString",C,N,V_pairedDeviceText
T@"NSString",C,N,V_localizedSubtitle
animating
TB,N,GisAnimating,V_animating
queueWithMediaRemotePlaybackQueue:options:
initWithMediaRemotePlaybackQueue:options:
removeObjectForKey:
queueWithMediaRemotePlaybackQueue:
registerRemotePlaybackQueueClass:forPlaybackQueueType:
isRequestingImmediatePlayback
setRequestingImmediatePlayback:
siriRecommendationIdentifier
siriAssetInfo
featureName
setSiriRecommendationIdentifier:
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
replaceIntent
setReplaceIntent:
verifyWithError:
_mediaRemotePlaybackQueue
queueGroupingID
mediaRemoteOptions
_queueGroupingID
_mediaRemoteOptions
T^{_MRSystemAppPlaybackQueue=},R,N
T@"NSDictionary",R,N,V_mediaRemoteOptions
requestingImmediatePlayback
TB,N,GisRequestingImmediatePlayback
T@"NSString",R,C,N,V_queueGroupingID
T@"ICUserIdentity",R,N,V_userIdentity
initWithData:
initWithProtobufferDecodableObject:library:
initWithMultiverseIdentifier:library:
predicateWithValue:forProperty:
initWithFilterPredicates:library:
setShouldIncludeNonLibraryEntities:
mediaQuery
_countOfItems
_countOfCollections
initWithDomain:code:userInfo:
firstItem
shuffleType
repeatType
_mediaQuery
_firstItem
_shuffleType
_repeatType
T@"MPMediaQuery",R,N,V_mediaQuery
T@"MPMediaItem",R,N,V_firstItem
Tq,R,N,V_shuffleType
Tq,R,N,V_repeatType
_stationID
_stationStringID
Tq,R,N,V_stationID
T@"NSString",R,N,V_stationStringID
trackIdentifiers
firstTrackIdentifier
collectionIdentifierSet
_firstTrackIdentifier
_trackIdentifiers
_collectionIdentifierSet
T@"NSString",R,N,V_firstTrackIdentifier
T@"NSArray",R,N,V_trackIdentifiers
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
initWithIdentifier:data:
valueForKey:
unarchivedObjectOfClass:fromData:error:
setUserInteractionEnabled:
_setTextColorFollowsTintColor:
routeLabelAxis
accessoryImageSpacing
isRouteLabelHidden
setHighlighted:
subviews
alpha
animateWithDuration:delay:options:animations:completion:
tintColorDidChange
tintColor
invalidateIntrinsicContentSize
route
setRoute:
forcesUppercaseText
setForcesUppercaseText:
intrinsicContentSize
pointInside:withEvent:
accessoryImage
setAccessoryImage:
setAccessoryImageSpacing:
setRouteLabelHidden:
setRouteLabelAxis:
_intrinsicContentSizeInvalidatedForChildView:
font
hitRectInsets
setHitRectInsets:
routeTitle
overrideColor
setOverrideColor:
_routeLabel
_accessoryImageView
_alphaOverride
_routeLabelHidden
_accessoryImageSpacing
_font
_routeTitle
_overrideColor
_routeLabelAxis
_hitRectInsets
T@"UIImage",&,N
Td,N,V_accessoryImageSpacing
T@"UIFont",&,N,V_font
T{UIEdgeInsets=dddd},N,V_hitRectInsets
T@"MPAVRoute",&,N
T@"NSString",R,C,N,V_routeTitle
routeLabelHidden
TB,N,GisRouteLabelHidden,V_routeLabelHidden
T@"UIColor",&,N,V_overrideColor
Tq,N,V_routeLabelAxis
supportsLyricsForURLBag:
_initWithDictionary:
setSongAdamID:
lyricsID
setLyricsID:
isTTML
lyricsContent
setTTML:
supportsLyricsForURLBagDictionary:
_song
T@"MPModelSong",&,N,V_song
setLocalizedTitle:
stations
setStations:
_localizedTitle
_stations
T@"NSString",C,N,V_localizedTitle
T@"NSArray",C,N,V_stations
allSupportedInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:modelObject:
emptyIdentifierSet
setDisplaysAsGridCellInCarPlay:
setSectionType:
setLoadAdditionalContentURL:
setUniformContentItemType:
setMemberOfChartSet:
setBrick:
setPreviouslyRetrievedNestedResponse:
allSupportedPropertiesIncludingInternalOnlyProperties:
requestedPropertySetExcludingInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:previouslyRetrievedNestedResponse:
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:displaysAsGridCellInCarPlay:previouslyRetrievedNestedResponse:onlyContainsEditorialElements:featuredContentKind:
_requestedBrowseSectionProperties
_requestedPropertySet
T@"MPPropertySet",R,N,V_requestedPropertySet
T@"MPPropertySet",R,N
_parsedSectionedCollection
layerWithKey:ofType:
layerWithFirstObjectOfType:
_parsedEditorialElements:
_parsedEditorialElementX:
firstSection
allItems
appendItems:
sectionType
addIndex:
removeSectionAtIndex:
enumerateIndexesUsingBlock:
numberOfSections
featuredContentKindForNode:
containsIndex:
childrenOfContentNode:
_parsedEditorialElement:
featuredContentKindCorrespondsToItem:
isContentNodeAnEditorialElement:
firstChildOfContentNode:
attributesForContentNode:
_parsedContentNode:uniformContentItemTypeResolver:additionalAttributesFromParent:
linksForContentNode:
linkSectionWithDictionary:
uniformContentItemType
dictionaryForBagKey:
regularExpressionWithPattern:options:error:
bagRoomURLRegularExpression
matchesInString:options:range:
stringForBagKey:
rangeWithName:
substringWithRange:
musicAPIURLWithLinkURLString:
addContentItemType:
modelObjectWithStoreItemMetadata:userIdentity:
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:rootObjectIdentifier:options:storeURLBag:
_parseOnceToken
_rawResponseOutput
_sectionBuilder
_contentItemBuilder
_filteredFCKinds
_storeBagLinkRegularExpression
_rootObjectIdentifier
T@"MPSectionedCollection",R,N
formerAdamIDs
setAdamID:
setFormerAdamIDs:
setUniversalStoreIdentifiersWithBlock:
DSIDForUserIdentity:outError:
stringValue
setPersonalStoreIdentifiersWithPersonID:block:
setTrackCount:
setDiscCount:
setHasCleanContent:
setLibraryAddEligible:
setMaximumItemTrackNumber:
setLibraryAdded:
setKeepLocalEnableState:
setKeepLocalManagedStatus:
setCompilation:
setClassical:
setCopyrightText:
components:fromDate:
setReleaseDateComponents:
setYear:
setPreorder:
setVolumeNormalization:
sharedCloudController
isEnhancedAudioAvailable
setTraits:
setGenre:
setSongPopularityBlock:
setRepresentativeSong:
setVersionHash:
_requestedAlbumProperties
encodeWithCoder:withExclusiveAccessToken:
assertHasExclusiveAccessForOwner:
setShuffleType:startingItem:inSection:randomSource:
_itemEntry:sectionIdentifier:withExclusiveAccessToken:
initWithSectionedIdentifierList:randomSource:startingItemEntry:withExclusiveAccessToken:
performWithExclusiveAccess:
_shuffledListWithExclusiveAccessToken:
safelyReshuffleAfterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:
enumeratorWithOptions:startPosition:endPosition:withExclusiveAccessToken:
addDataSourceAtStart:section:sequentially:completion:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSourceAtStart:section:sequentially:
addDataSourceAtStart:section:completion:
addDataSource:section:sequentially:afterItem:inSection:
addDataSource:section:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:
addDataSource:section:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:
addDataSourceAtEnd:section:completion:
_sectionHeadEntryMapWithExclusiveAccessToken:
setDataSource:
replaceDataSource:forSection:completion:
moveItemToStart:fromSection:
performWithExclusiveAccessAndReturnBOOL:
moveItemToEnd:fromSection:
moveItem:fromSection:afterItem:inSection:
_isSequentialSection:withExclusiveAccessToken:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
removeItem:fromSection:
itemCount
_itemCountWithExclusiveAccessToken:
dataSourceInsertItemsAtHead:inSection:
dataSourceInsertItems:afterItem:inSection:
dataSourceInsertItemsAtTail:inSection:
dataSourceRemoveItem:fromSection:
dataSourceReloadItem:inSection:
didDequeueShuffledItemsInSectionedIdentifierList:
candidateItems
dequeueCandidatesWithQuota:
doesNotRecognizeSelector:
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSSIL:
setShuffleType:
setShuffleType:startingItem:inSection:
_candidateItemsWithExclusiveAccessToken:
_dequeueCandidatesWithQuota:withExclusiveAccessToken:
addDataSource:section:afterHeadOfSection:
shuffleStartingSectionIdentifier
setShuffleStartingSectionIdentifier:
shuffleStartingItemIdentifier
setShuffleStartingItemIdentifier:
_shuffledList
_shuffleStartingSectionIdentifier
_shuffleStartingItemIdentifier
T@"NSString",C,N,V_shuffleStartingSectionIdentifier
T@"NSString",C,N,V_shuffleStartingItemIdentifier
T@"<MPShuffleableSectionedIdentifierListDelegate>",W,D,N
Tq,N,V_shuffleType
headEntryWithSectionIdentifier:
_insertDataSourceHead:afterEntry:withExclusiveAccessToken:
_addShuffleSection:dataSource:withExclusiveAccessToken:
enumerateKeysAndObjectsUsingBlock:
nextObjectWithExclusiveAccessToken:
entryType
itemResult
itemIdentifier
sectionIdentifier
_createShuffleCloneForItem:inSection:withExclusiveAccessToken:
initWithRandomSource:lowestValue:highestValue:
_appendShuffledItems:withExclusiveAccessToken:
identifiersItemEntryMap
_beforeInitWithCoder:
lastItemEntry
nextEntries
isRemoved
newClonedEntry
setUserRemoved
previousEntry
_insertDataSource:forSection:afterEntry:withExclusiveAccessToken:
tailEntry
_endEntryWithExclusiveAccessToken:
latestUserClone
setDataSourceRemoved
section:shouldShuffleExcludeItem:
indexOfObjectPassingTest:
_startEntriesWithExclusiveAccessToken:
setShuffledHead:
_addBranchToEntry:entries:withExclusiveAccessToken:
lastObject
setLastItemEntry:
itemEntryWithSectionIdentifier:itemIdentifier:
setHostedSectionIdentifier:
nextIntWithUpperBound:
removeObjectAtIndex:
_enumerator:didEncounterEntry:withExclusiveAccessToken:
_reverseEnumeratorWillStartAtEnd:withExclusiveAccessToken:
randomDistribution
setCandidateItems:
_randomDistribution
_candidateItems
T@"<_MPSSILDelegate>",W,D,N
T@"MPRandomDistribution",R,N,V_randomDistribution
T@"NSMutableArray",&,N,V_candidateItems
snippetURL
setSnippetURL:
_snippetURL
T@"MPStoreLyricsSnippetURLComponents",&,N,V_snippetURL
representedSearchScopePredicate
relationshipKinds
initWithItemKind:name:properties:
coreScope
_coreScope
_itemKind
_name
T{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}},R,N
T@"MPModelKind",&,N,V_itemKind
T@"NSString",R,C,N,V_name
T@"MPPropertySet",R,C,N,V_itemProperties
albumAppData
dataWithPropertyList:format:options:error:
predicateWithProperty:equalToInt64:
autoupdatingSharedLibrary
anyInLibrary:predicate:
setValues:forProperties:async:withCompletionBlock:
T@"MPModelLibraryAlbumAppDataChangeRequest",C,N,V_request
initWithRequest:responseHandler:
allSupportedItemProperties
allSupportedGroupProperties
allSupportedSectionProperties
representativeModelObject
setRepresentativeModelObject:
referralObject
setReferralObject:
songResults
setSongResults:
storeImportAllowedHandler
setStoreImportAllowedHandler:
_playlist
_representativeModelObject
_referralObject
_songResults
_storeImportAllowedHandler
T@"MPModelPlaylist",&,N,V_playlist
T@"MPModelObject",&,N,V_representativeModelObject
T@"MPModelObject",&,N,V_referralObject
T@"MPSectionedCollection",&,N,V_songResults
T@?,C,N,V_storeImportAllowedHandler
_artworkCatalogWithArtworkType:
cachedValueForProperty:isCached:
initWithLibrary:identifier:entityType:artworkType:
setAvailableArtworkToken:
setFetchableArtworkToken:
setFetchableArtworkSource:
artworkDataSource
screenshotArtworkCatalog
artworkCatalogCacheProperties
screenshotArtworkCatalogCacheProperties
allAdditionalContentIdentifiersNeedingLookup
hasAdditionalContentItems
changeDetails
setChangeDetails:
parser
setParser:
_changeDetails
_parser
T@"MPModelStoreBrowseResponseParser",&,N,V_parser
T@"MPChangeDetails",&,N,V_changeDetails
setArtworkResizingAccessQueue:
setArtworkResizingOperationQueue:
artworkResizingOperationQueue
strongToStrongObjectsMapTable
setArtworkResizingOperations:
artworkResizingAccessQueue
artworkResizingOperations
initWithImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:destinationURL:
operationGroup
setCompletionBlock:
resizedImage
resizeImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:saveToDestinationURL:completionHandler:
cancelResizeImage:
_artworkResizingAccessQueue
_artworkResizingOperationQueue
_artworkResizingOperations
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkResizingAccessQueue
T@"NSOperationQueue",&,N,V_artworkResizingOperationQueue
T@"NSMapTable",&,N,V_artworkResizingOperations
initWithDeviceFeatures:
outputContextForID:
_availableOutputDevicesDidChangeNotification:
_outputContextDevicesDidChangeNotification:
outputDevices
initWithOutputDevices:
setPicked:
lightweightRoutingController:didChangeDevicePresenceDetected:
isDevicePresenceDetected
lightweightRoutingController:didChangePickedRoutes:
_postPickedRoutesChangedNotification
_onSyncSelf_schedulePickedRoutesChangedNotification
pickedRoutes
discoveryMode
_avDiscoverySession
_avOutputContext
_notificationScheduled
_lastOutputContextNotificationDate
_discoveryMode
Tq,N,V_discoveryMode
TB,R,N,GisDevicePresenceDetected
T@"<MPAVLightweightRoutingControllerDelegate>",W,N,V_delegate
_initializeAsEmptySectionedCollection
numberOfItemsInSection:
sectionAtIndex:
indexPathForItem:inSection:
itemAtIndexPath:
section
item
changeDetailsToSectionedCollection:applyingUIKitWorkarounds:isEqualBlock:isUpdatedBlock:
indexSet
indexPathWithIndex:
removeIndex:
appendSectionMoveFromIndex:toIndex:updated:
appendItemMoveFromIndexPath:toIndexPath:updated:
appendItemUpdateForPreviousIndexPath:finalIndexPath:
indexPathByAddingIndex:
appendSectionUpdateForPreviousIndex:finalIndex:
setInsertedSections:
setDeletedSections:
setInsertedItemIndexPaths:
setDeletedItemIndexPaths:
applyUIKitWorkarounds
hasChanges
mutableCopyWithZone:
lastItem
allSections
enumerateItemsUsingBlock:
globalIndexForIndexPath:
indexPathForGlobalIndex:
itemsInSectionAtIndex:
hasSameContentAsSectionedCollection:
lastSection
changeDetailsToSectionedCollection:isEqualBlock:isUpdatedBlock:
_sectionedItems
_sections
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
enumerateSectionIdentifiersUsingBlock:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
indexPathForItemWithIdentifiersIntersectingSet:
insertObject:atIndex:
exchangeObjectAtIndex:withObjectAtIndex:
insertSection:atIndex:
insertItem:atIndexPath:
moveSectionFromIndex:toIndex:
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
replaceObjectAtIndexPath:withObject:
moveItemFromIndexPath:toIndexPath:
replaceSectionsUsingBlock:
replaceItemsUsingBlock:
setShortTitle:
setEpisodesCount:
setTagline:
setEditorialArtworkCatalogBlock:
kindWithEpisodeKind:
kindWithSeasonKind:
_storeAssetBuilder
_storeAssetProperties
_requestedTVShowProperties
setFeatureName:
setGroup:
group
genericObjectWithModelObject:
__datePlayed_KEY
__featureName_KEY
__playlist_KEY
__radioStation_KEY
__group_KEY
playEventWithModelObject:featureName:
genericObjectRepresentation
datePlayed
T@"MPModelPlaylist",&,D,N
T@"MPModelRadioStation",&,D,N
T@"MPModelGroup",&,D,N
setRegisteredStyleOverrides:reply:
presentMediaControlsWithCompletion:
statusBarCoordinator:invalidatedRegistrationWithError:
statusBarCoordinator:receivedTapWithContext:completionBlock:
presentMediaControls
_statusBarStyleOverride
_coordinator
additionalContent
requestWithURL:
recentlyPlayedItemsWithAPILoadedOutput:
recentlyPlayedSectionWithTitle:
groupingNameBagKey
recentlyPlayedItemWithDictionary:
radioStationWithDictionary:
ic_stringValueForKey:
radioStationTypeFromKind:
radioStationSubTypeFromSubType:
ic_dictionaryValueForKey:
additionalURLRequestsWithStoreURLBag:
additionalCatalogURLQueryItems
groupingNameWithMusicSubscriptionDictionary:
rootObjectIdentifierWithSubscriptionStatus:
sectionHeadEntry
reverseObjectEnumerator
nextObjectIdenticalTo:
branchDepth
startEntry
endEntry
sectionedIdentifierList
nextObject
removeLastObject
isDataSourceRemoved
initWithSectionedIdentifierList:options:startEntry:endEntry:withExclusiveAccessToken:
setOptions:
contexts
setContexts:
nextEmittableEnumerationResults
setNextEmittableEnumerationResults:
setEndEntry:
_sectionedIdentifierList
_contexts
_nextEmittableEnumerationResults
_endEntry
TQ,N,V_options
T@"NSMutableArray",&,N,V_contexts
T@"NSMutableArray",&,N,V_nextEmittableEnumerationResults
T@"MPSectionedIdentifierListEntry",&,N,V_endEntry
T@"MPSectionedIdentifierList",R,N,V_sectionedIdentifierList
objectEnumerator
_startEntryProxy
indexOfObjectIdenticalTo:
entriesToEmit
setEntriesToEmit:
_entriesToEmit
T@"NSMutableArray",&,N,V_entriesToEmit
trackingEntryResult
_entryType
Tq,R,N,V_entryType
playlistURL
keyCertificateURL
keyServerURL
keyServerProtocolType
keyServerAdamID
alternatePlaylistURL
alternateKeyCertificateURL
alternateKeyServerURL
isiTunesStoreStream
initWithiTunesCloudStoreHLSAssetInfo:
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
blockingSecureKeyLoadDuration
setBlockingSecureKeyLoadDuration:
perceivedTotalStartupTime
setPerceivedTotalStartupTime:
tracklistLoadDuration
setTracklistLoadDuration:
_blockingSecureKeyLoadDuration
_perceivedTotalStartupTime
_tracklistLoadDuration
Td,N,V_blockingSecureKeyLoadDuration
T@"NSNumber",C,N,V_perceivedTotalStartupTime
Td,N,V_tracklistLoadDuration
initWithFrame:style:
_resetThumbImageForState:
_minTrackImageForStyle:
setMinimumTrackImage:forState:
_maxTrackImageForStyle:
setMaximumTrackImage:forState:
addLayoutGuide:
currentDevice
userInterfaceIdiom
initWithGroupRoute:outputDeviceRoute:
setVolumeController:
volumeController
_endBlinkingWarningView
createThumbView
setClipsToBounds:
setShadowColor:
setShadowOffset:
setShadowRadius:
setShadowOpacity:
setThumbImage:forState:
isTracking
isInOptimisticState
setValue:animated:
_layoutVolumeWarningView
isVolumeControlAvailable
volumeWarningEnabled
EUVolumeLimit
volumeWarningState
sharedAVSystemController
allowUserToExceedEUVolumeLimit
_routeName
setVolume:withNoticationDelay:
shouldMakeUIForDefaultPNG
thumbRectForBounds:trackRect:value:
bezierPathWithOvalInRect:
CGPath
setShadowPath:
trackRectForBounds:
locationInView:
_commitVolumeChange
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_endTracking
cancelTrackingWithEvent:
_layoutForAvailableRoutes
topAnchor
_minTrackView
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
_maxTrackView
activateConstraints:
_setDrawsAsBackdropOverlayWithBlendMode:
_setDrawsAsBackdropOverlay:
updateVolumeValue
updateVolumeWarningState
setNeedsUpdate
addVolumeDisplay:
removeVolumeDisplay:
hitRect
_dynamicUserInterfaceTraitDidChange
volumeControlLabel
setGroupRoute:
isDeviceRoute
setVolumeDataSource:
windowScene
_isOffScreen
volumeAudioCategory
volumeValue
_logVolumeValueDidChange:
sendActionsForControlEvents:
setVolumeValue:
setShadowBlurRadius:
mediaPlayerBundle
imageNamed:inBundle:
_flatImageWithColor:
thumbImageForState:
_systemInteractionTintColor
minimumTrackImageForState:
maximumTrackImageForState:
_thumbImageForStyle:
_minValueView
_maxValueView
boldSystemFontOfSize:
setOpaque:
performWithoutAnimation:
_newVolumeWarningView
insertSubview:belowSubview:
_beginBlinkingWarningView
maximumValue
_blinkWarningView
stretchableImageWithLeftCapWidth:topCapHeight:
colorWithRed:green:blue:alpha:
resizableImageWithCapInsets:
initWithImage:
outputDeviceRoute
routeName
groupRoute
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlCapabilitiesDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
windowSceneForVolumeDisplay
isOnScreenForVolumeDisplay
isOnScreen
T@"UIWindowScene",R,N
onScreenForVolumeDisplay
TB,R,N,GisOnScreenForVolumeDisplay
onScreen
TB,R,N,GisOnScreen
initWithFrame:style:endpointRoute:outputDeviceRoute:
minimumValue
didMoveToSuperview
didMoveToWindow
setOptimisticValue:
setOutputDeviceRoute:
setVolumeWarningTrackImage:
updateVolume
_setIsOffScreen:
thumbView
volumeWarningTrackImage
trackLayoutGuide
setOptimisticState:
optimisticValue
_commitTimer
_thumbImageView
_forcingOffscreenVisibility
_thumbIsDefault
_configuredLayoutGuide
_volumeWarningView
_volumeWarningBlinking
_volumeWarningTrackImage
_beganTrackingFromEUVolumeLimit
_originalMinTrackViewAlphaOverride
_originalMinValueViewAlphaOverride
_originalMaxValueViewAlphaOverride
_isCurrentlyTracking
_setVolumeStartValue
_coalescedVolumeDidChangeLogCount
_optimisticState
_optimisticValue
_trackLayoutGuide
_volumeController
_groupRoute
_outputDeviceRoute
TB,N,S_setIsOffScreen:
T@"UILayoutGuide",R,N,V_trackLayoutGuide
T@"UIView",R,W,N
T@"MPVolumeController",&,N,V_volumeController
T@"MPAVController",&,N,V_player
T@"MPAVEndpointRoute",&,N,V_groupRoute
T@"MPAVOutputDeviceRoute",&,N,V_outputDeviceRoute
optimisticState
TB,N,GisInOptimisticState,V_optimisticState
Tf,N,V_optimisticValue
Tq,R,N,V_style
T@"UIImage",&,N,V_volumeWarningTrackImage
_createSubviews
_volumeSliderVolumeControlAvailabilityDidChangeNotification:
_initWithStyle:
allowsKeyedCoding
containsValueForKey:
_setShowsVolumeSlider:
_setShowsRouteButton:animated:
convertPoint:fromView:
_setRouteDiscoveryEnabled:
_loadAudioRoutePickerIfNeeded
_updateWirelessRouteStatus
pickableRouteType
imageForState:
_getDefaultVolumeSliderFrame:routeButtonFrame:forBounds:
setImage:forState:
_setChargeEnabled:
setCharge:
convertRect:toView:
convertRect:fromView:
setAutoresizingMask:
easyTouchButtonWithType:
setSelected:
_defaultRouteButtonImageAsSelected:
systemBlueColor
setShowsTouchWhenHighlighted:
_displayAudioRoutePicker
addTarget:action:forControlEvents:
_startPrewarmingAudioRoutePicker
_stopPrewarmingAudioRoutePicker
isVisible
volumeSliderRectForBounds:
routeButtonRectForBounds:
animateWithDuration:animations:
layoutBelowIfNeeded
isShowingRouteButton
isWirelessRouteActive
areWirelessRoutesAvailable
minimumVolumeSliderImageForState:
maximumVolumeSliderImageForState:
volumeWarningSliderImage
routeButtonImageForState:
setMinimumVolumeSliderImage:forState:
setMaximumVolumeSliderImage:forState:
setVolumeWarningSliderImage:
setRouteButtonImage:forState:
setShowsRouteButton:
setShowsVolumeSlider:
setVolumeThumbImage:forState:
showsRouteButton
showsVolumeSlider
volumeThumbImageForState:
volumeThumbRectForBounds:volumeSliderRect:value:
hidesRouteLabelWhenNoRouteChoice
volumeSliderShrinksFromBothEnds
setHidesRouteLabelWhenNoRouteChoice:
setVolumeSliderShrinksFromBothEnds:
_routeButton
_lightweightRoutingController
_hasNonDefaultRouteButtonImages
_hasNonDefaultMaxVolumeSliderImage
_hasNonDefaultMinVolumeSliderImage
_hidesRouteLabelWhenNoRouteChoice
_routeDiscoveryEnabled
_showingButton
_showingLabel
_showingSlider
_showsRouteButton
_showsVolumeSlider
_volumeSliderShrinksFromBothEnds
_wirelessRouteIsPicked
_wirelessRoutesAvailable
_pushedRouteDiscoveryModeState
T@"MPVolumeSlider",R,N
wirelessRoutesAvailable
TB,R,N,GareWirelessRoutesAvailable
wirelessRouteActive
TB,R,N,GisWirelessRouteActive
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
bytesPredicateValue
objCType
setIntegerPredicateValue:
setFloatPredicateValue:
setDoublePredicateValue:
setStringPredicateValue:
setBytesPredicateValue:
hasType
deleteCharactersInRange:
encodeInt64:forKey:
_representativeCollection
allowedSectionIdentifiers
sectionFilterText
setWantsDetailedKeepLocalRequestableResponse:
setLegacyMediaQuery:
setAllowedItemIdentifiers:
setAllowedSectionIdentifiers:
setSectionFilterText:
setContentRange:
sortUsingAllowedItemIdentifiers
setSortUsingAllowedItemIdentifiers:
_wantsDetailedKeepLocalRequestableResponse
_sortUsingAllowedItemIdentifiers
_mediaLibrary
_allowedItemIdentifiers
_allowedSectionIdentifiers
_scopedContainers
_filterText
_sectionFilterText
_legacyMediaQuery
_contentRange
T@"MPMediaQuery",C,N,V_legacyMediaQuery
T@"MPMediaLibrary",&,N,V_mediaLibrary
T@"NSArray",C,N,V_allowedItemIdentifiers
T@"NSArray",C,N,V_allowedSectionIdentifiers
T@"NSArray",C,N,V_scopedContainers
TQ,N,V_filteringOptions
T@"NSString",C,N,V_filterText
T@"NSString",C,N,V_sectionFilterText
T{_NSRange=QQ},N,V_contentRange
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_sortUsingAllowedItemIdentifiers
_mediaLibraryDidChangeNotification:
beginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
sectionKeepLocalStatusConfigurations
downloadableItemsQuery
downloadablePlaylistItemEntityQueryBlock
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
libraryAssertion
_sectionKeepLocalStatusConfigurations
_libraryAssertion
T@"NSArray",C,N,V_sectionKeepLocalStatusConfigurations
T@"MPMediaLibraryConnectionAssertion",&,N,V_libraryAssertion
_downloadablePlaylistItemEntityQueryBlock
_downloadableItemsQuery
T@?,C,N,V_downloadablePlaylistItemEntityQueryBlock
T{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}},N,V_downloadableItemsQuery
requestEndpoint
setFilteringPolicy:
setRequestEndpoint:
setMode:
setTypes:
setWithSocial:
setWithPlainEditorialNotes:
setDisplayFilterKinds:
setWithRecentlyPlayed:
setCustomForYouURL:
setRefreshRequest:
_withSocial
_withPlainEditorialNotes
_withRecentlyPlayed
_refreshRequest
_filteringPolicy
_requestEndpoint
_mode
_types
_displayFilterKinds
_customForYouURL
Tq,N,V_filteringPolicy
Tq,N,V_requestEndpoint
Tq,N,V_mode
Tq,N,V_types
TB,N,V_withSocial
TB,N,V_withPlainEditorialNotes
Tq,N,V_displayFilterKinds
TB,N,V_withRecentlyPlayed
T@"NSURL",C,N,V_customForYouURL
TB,N,V_refreshRequest
setTranslatesAutoresizingMaskIntoConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraints:
preferredContentSize
_volumeView
T@"MPVolumeView",R,N,V_volumeView
dismissAlertController
_applicationKeyWindow
_keyWindowDidChange:
setRootViewController:
makeKeyAndVisible
viewDidAppear:
alertControllerWithTitle:message:preferredStyle:
removeTarget:action:forControlEvents:
_flip
setContentViewController:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
resignKeyWindow
initWithStyle:
_tableView
initWithAudioCategory:
presentAlertControllerInWindow:
hostingWindow
setHostingWindow:
previousWindow
setPreviousWindow:
_audioCategory
_alertController
_hostingWindow
_previousWindow
T@"UIWindow",W,N,V_hostingWindow
T@"UIWindow",W,N,V_previousWindow
generation
deviceIdentifier
positionKeyWithDeviceIdentifier:generation:
setDeviceIdentifier:
setGeneration:
_deviceIdentifier
_generation
T@"NSString",C,N,V_deviceIdentifier
T@"NSString",C,N,V_generation
initWithPositionKey:sectionIdentifier:
removed
TB,R,N,GisRemoved
setBranchDepth:
addNextEntry:
setPreviousEntry:
addBranch:forceBranchDepthIncrease:
prepareForDealloc
positionKey
hostedSectionIdentifier
_nextEntries
_dataSourceRemoved
_positionKey
_sectionIdentifier
_hostedSectionIdentifier
_previousEntry
_branchDepth
T@"MPSectionedIdentifierListEntryPositionKey",R,N,V_positionKey
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",C,N,V_hostedSectionIdentifier
T@"NSArray",R,N,V_nextEntries
T@"MPSectionedIdentifierListEntry",W,N,V_previousEntry
Tq,N,V_branchDepth
dataSourceRemoved
TB,R,N,GisDataSourceRemoved,V_dataSourceRemoved
tailEntryWithSectionHeadEntry:
setSectionHeadEntry:
_sectionHeadEntry
T@"MPSectionedIdentifierListHeadEntry",W,N,V_sectionHeadEntry
isShuffledHead
setTailEntry:
_shuffledHead
_identifiersItemEntryMap
_tailEntry
_lastItemEntry
_dataSource
T@"NSMutableDictionary",R,N,V_identifiersItemEntryMap
T@"MPSectionedIdentifierListTailEntry",&,N,V_tailEntry
T@"MPSectionedIdentifierListItemEntry",&,N,V_lastItemEntry
T@"<MPSectionedIdentifierListDataSource>",&,N,V_dataSource
shuffledHead
TB,N,GisShuffledHead,V_shuffledHead
itemEntryWithSectionIdentifier:itemIdentifier:generationPrefix:
rootEntry
isUserMoved
isUserRemoved
isDataSourceMoved
hasClones
latestDataSourceClone
_generationNumber
clonedEntries
isDataSourceCloned
setRootEntry:
setClonedEntries:
setDataSourceCloned
setDataSourceMoved
setUserMoved
setUserCloned
isUserCloned
_hasClones
_dataSourceCloned
_dataSourceMoved
_userRemoved
_userMoved
_userCloned
_itemIdentifier
_rootEntry
_clonedEntries
T@"NSString",R,N,V_itemIdentifier
T@"MPSectionedIdentifierListItemEntry",W,N,V_rootEntry
T@"MPSectionedIdentifierListItemEntry",R,N
TB,R,N,V_hasClones
T@"NSMutableArray",&,N,V_clonedEntries
T{?=BBBBBBBBq},R,N
dataSourceCloned
TB,R,N,GisDataSourceCloned,V_dataSourceCloned
dataSourceMoved
TB,R,N,GisDataSourceMoved,V_dataSourceMoved
userRemoved
TB,R,N,GisUserRemoved,V_userRemoved
userMoved
TB,R,N,GisUserMoved,V_userMoved
userCloned
TB,R,N,GisUserCloned,V_userCloned
initWithNibName:bundle:
setView:
loadView
moviePlayer
_moviePlayer
T@"MPMoviePlayerController",R,N,V_moviePlayer
presentMoviePlayerViewControllerAnimated:
dismissMoviePlayerViewControllerAnimated
initWithCommand:mediaRemoteType:options:
timeout
command
mediaRemoteCommandType
eventWithCommand:mediaRemoteType:options:
contextID
commandID
interfaceID
sourceID
playbackQueueOffset
_contextID
_commandID
_command
_timestamp
_timeout
TI,R,N
Td,R,N,V_timeout
T@"MPRemoteCommand",R,N,V_command
Td,R,N,V_timestamp
interval
_interval
Td,R,N,V_interval
_commandType
TQ,R,N,V_type
rating
_rating
Tf,R,N,V_rating
playbackRate
_playbackRate
Tf,R,N,V_playbackRate
isNegative
_negative
negative
TB,R,N,GisNegative,V_negative
isRequestingDefermentToPlaybackQueuePosition
_requestingDefermentToPlaybackQueuePosition
requestingDefermentToPlaybackQueuePosition
TB,R,N,GisRequestingDefermentToPlaybackQueuePosition,V_requestingDefermentToPlaybackQueuePosition
positionTime
_positionTime
Td,R,N,V_positionTime
preservesRepeatMode
_preservesRepeatMode
TB,R,N,V_preservesRepeatMode
preservesShuffleMode
_preservesShuffleMode
TB,R,N,V_preservesShuffleMode
stationURL
isRequestingPlaybackInitialization
privateListeningOverride
_requestingPlaybackInitialization
_stationURL
_privateListeningOverride
T@"NSURL",R,N,V_stationURL
requestingPlaybackInitialization
TB,R,N,GisRequestingPlaybackInitialization,V_requestingPlaybackInitialization
T@"NSNumber",R,N,V_privateListeningOverride
initWithCommand:playbackQueue:
playbackQueue
sessionIdentifierOverride
_playbackQueue
_sessionIdentifierOverride
T@"MPRemotePlaybackQueue",R,N,V_playbackQueue
T@"NSString",R,N,V_sessionIdentifierOverride
insertBeforeContextItemID
insertAfterContextItemID
destinationOffset
_insertBeforeContextItemID
_insertAfterContextItemID
_destinationOffset
T@"NSString",R,N,V_insertBeforeContextItemID
T@"NSString",R,N,V_insertAfterContextItemID
Tq,R,N,V_destinationOffset
initWithCommand:playbackQueue:options:
supportedInsertionPositions
insertionPosition
insertAfterContentItemID
_supportedInsertionPositions
_insertionPosition
_insertAfterContentItemID
T@"NSArray",R,C,N,V_supportedInsertionPositions
Tq,R,N,V_insertionPosition
T@"NSString",R,N,V_insertAfterContentItemID
initWithMRLanguageOption:
languageOption
setting
_languageOption
_setting
T@"MPNowPlayingInfoLanguageOption",R,N,V_languageOption
Tq,R,N,V_setting
priority
_revision
_priority
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_revision
Tq,R,N,V_priority
playbackSessionData
_playbackSessionData
T@"NSString",R,N,V_type
T@"NSData",R,N,V_playbackSessionData
propertyListWithData:options:format:error:
playbackSessionDataFilePath
metadata
_playbackSessionDataFilePath
_metadata
T@"NSURL",R,N,V_playbackSessionDataFilePath
T@"NSDictionary",R,N,V_metadata
queueEndAction
preservesQueueEndAction
_preservesQueueEndAction
_queueEndAction
Tq,R,N,V_queueEndAction
TB,R,N,V_preservesQueueEndAction
eventIdentifier
eventType
_eventIdentifier
_eventType
T@"NSString",R,N,V_eventIdentifier
T@"NSString",R,N,V_eventType
sessionIdentifier
_sessionIdentifier
T@"NSString",R,N,V_sessionIdentifier
requestIdentifier
shouldResolveRequestItemsLocally
isFinalResponse
executeRequestWithBatchProgressHandler:
initWithStartHandler:
initWithMediaAPICollectionItemMetadataResponse:authorizationTokenHalfLifeDuration:failedItemIdentifiers:isFinalResponse:
cancelRequest
T@"MPMediaAPICollectionItemMetadataRequestController",R,N
enqueueRequest:withBatchProgressHandler:
cancelRequest:
_callbackQueue
_pendingOperationsIdentiferMap
textColor
hasTitle
initWithTextColor:hasTitle:
_hasTitle
_textColor
T@"UIColor",R,N,V_textColor
TB,R,N,V_hasTitle
allowedEntityIdentifiers
_allowedEntityIdentifiersContainsAllPersistentIDs
_populateIndexMap
_buildIndexPathToContainerUniqueIDMapFromItemQueryResults:
_usesSections
_adjustedGlobalIndexForIndexPath:
objectForPropertySet:entity:context:
setContainerUniqueID:
identifiersForEntity:context:
indexPathForRow:inSection:
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
indexPathToContainerUniqueIDMap
setIndexPathToContainerUniqueIDMap:
itemIdentifierQueryResults
itemQueryResults
_entityTranslationContext
_allowedItemPersistentIDs
_allowedItemPersistentIDToItemQueryResultsIndexMap
_indexPathToContainerUniqueIDMap
_itemIdentifierQueryResults
_itemQueryResults
T@"NSDictionary",&,N,V_indexPathToContainerUniqueIDMap
T{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}},R,N,V_itemIdentifierQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_itemQueryResults
T@"MPModelLibraryRequest",R,N,V_request
loadAdditionalContentURL
previouslyRetrievedNestedResponse
setPreviousRetrievedNestedResponse:
configureWithParentSection:
flattenRadioList
setFlattenRadioList:
previousRetrievedNestedResponse
setDomain:
setAdditionalContent:
subscriptionStatus
setSubscriptionStatus:
previousResponse
setPreviousResponse:
_loadAdditionalContentURL
_previousRetrievedNestedResponse
_domain
_additionalContent
_subscriptionStatus
_previousResponse
T@"NSURL",C,N,V_loadAdditionalContentURL
T@"MPModelStoreBrowseResponse",&,N,V_previousRetrievedNestedResponse
Tq,N,V_domain
Tq,N,V_additionalContent
Tq,N,V_subscriptionStatus
T@"MPModelStoreBrowseResponse",&,N,V_previousResponse
initWithRouteUID:atCenter:
presentWithCompletion:
_center
kindWithAlbumKind:
albumKind
_albumKind
T@"MPModelAlbumKind",R,C,N,V_albumKind
editorialArtworkCatalogBlock
__hasBiography_KEY
__editorialArtworkCatalogBlock_KEY
__songCount_KEY
__albumCount_KEY
__classicalExperienceAvailable_KEY
editorialArtworkCatalog
hasBiography
songCount
albumCount
T@"MPModelGenre",C,D,N
classicalExperienceAvailable
TB,D,N,GisClassicalExperienceAvailable
initWithRoutingController:
_fullStateDumpObject
_registerNotifications
initWithDataSource:name:
_unregisterNotifications
_pickedRoutesInArray:
cachedRoutes
fetchAvailableRoutesSynchronously
_syncUpdateRoutes
_scheduleSendDelegateRoutesChanged
fetchAvailableRoutesWithCompletionQueue:completionHandler:
_externalScreenType:
_setExternalScreenType:
getExternalScreenTypeWithCompletion:
hasPendingRoutes
cachedPickedRoutes
pendingPickedRoute
pendingPickedRoutes
routeIsLeaderOfEndpoint:
routeIsPendingPick:
_updateCachedRoutes
_volumeControlStateForPickedRoute
_setVolumeControlStateForPickedRoute:
bundleIdRepresentsLongFormVideoContent:
_sharedWorkerQueue
setCachedRoutes:
availableRoutes
_getActiveRouteWithTimeout:type:discoveredRoutes:completion:
enqueueSelectionOperation:forRoutes:completion:
selectRoutes:operation:completion:
addPendingRoutes:
removePendingRoutes:
_promptForHijackIfNeeded:handler:
_deviceAvailabilityOverrideState
unpickAirPlayAVRoutesWithCompletion:
routeType
supportsWirelessDisplay
_systemImageNamed:
_imageThatSuppressesAccessibilityHairlineThickening
_iconNameForRoutes:isSymbol:
_iconImageForIdentifier:
_symbolNameForRoutes:
_iconNameForRoute:
_symbolNameForRoute:
_iconNameForRoute:isSymbol:
isClusterRoute
_iconImageNameForClusterRoute:isSymbol:
isSetTopBoxRoute
isTVStickRoute
isAirpodsRoute
isB298Route
isB515Route
isB688Route
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsStudioRoute
isBeatsXRoute
isB444Route
isB494Route
isB419Route
isB364Route
isB372Route
isB507Route
isBeatsLegacyRoute
isMacRoute
productIdentifier
_symbolNameForModelID:
isJ327Route
isCarplayRoute
isHomePodRoute
isStereoPair
isB520Route
isHearingDeviceRoute
isDeviceSpeakerRoute
_currentDeviceRoutingSymbolName
_currentDeviceRoutingIconImageName
isLowFidelityRoute
containsString:
originalRouteSubtype
clusterComposition
modelID
isHomeTheaterRoute
isHomeTheaterB520Route
getActiveRouteWithTimeout:completion:
getProactiveRouteWithTimeout:completion:
setActiveRoute:reason:completion:
endpointWrapper
unwrappedValue
initWithEndpoint:
systemRoute
hasRouteSharingPolicyLongFormVideo:
sharedAudioPresentationOutputContext
setOutputDevices:
homeButtonType
clusterStatus
_typeOfCurrentDevice
symbolForTypeIdentifier:error:
_typeWithDeviceModelCode:
addObserverForName:object:queue:usingBlock:
initWithExternalDevice:
setConnection:
isPicked
presentedBundleID
initWithBundleIdentifier:allowPlaceholder:error:
localizedName
setAttribute:forKey:error:
endpointRoute
isProxyGroupPlayer
isAirPlayRoute
getOutputDeviceIsPlaying:completion:
didFinishLoading
alwaysAllowUpdates
_shouldSendDelegateRoutesChanged
_onQueueSetExternalScreenType:
_clearLegacyCachedRoute
_sendDelegatePickedRoutesChanged
pickedRouteDidChange
cancelInProgressSelectionForRoute:
_sendDelegateFailedToPickRouteWithError:
_pickableRoutesDidChangeNotification:
_routeStatusDidChangeNotification:
_volumeControlAvailabilityDidChangeNotification:
_externalScreenTypeDidChangeNotification:
_activeAudioRouteDidChangeNotification:
pickRoute:withPassword:
pickRoute:withPassword:completion:
_pickRoute:completion:
setPickedRoute:withPassword:completion:
supportsMultipleSelection
addPickedRoute:completion:
selectRoute:operation:completion:
removePickedRoute:completion:
_symbolImageForRoutes:
_symbolImageForRoute:
_currentDeviceRoutingIconImage
_currentDeviceRoutingSymbolImage
getActiveRouteWithCompletion:
getProactiveRouteWithCompletion:
setActiveRoute:completion:
systemRouteWithContextUID:
T@"MPAVRoute",R,N
setAlwaysAllowUpdates:
hasPendingPickedRoutes
setCategory:
setRouteTypes:
setPresentedBundleID:
setRepresentedBundleID:
airtunesRouteIsPicked
updateAvailableRoutes
updatePickedRoutes
fetchAvailableRoutesWithCompletionHandler:
handsetRouteIsPicked
pickHandsetRoute
pickSpeakerRoute
speakerRouteIsPicked
receiverRouteIsPicked
routeOtherThanHandsetAndSpeakerAvailable
routeOtherThanHandsetAvailable
unpickAirPlayScreenRouteWithCompletion:
videoRouteForRoute:
wirelessDisplayRouteIsPicked
wirelessDisplayRoutesAvailable
unpickTVRoutes
_pickedRouteInArray:
_mediaServerDiedNotification:
pickRoute:
addPickedRoute:
removePickedRoute:
category
routeTypes
legacyCachedRoute
setLegacyCachedRoute:
playbackDataSource
setPlaybackDataSource:
representedBundleID
representsLongFormVideoContent
_cachedRoutes
_cachedPickedRoutes
_externalScreenType
_hasExternalScreenType
_scheduledSendDelegateRoutesChanged
_routingControllerSelectionQueue
_deviceAvailabilityNotifyToken
_stateHandle
_alwaysAllowUpdates
_fetchAvailableRoutesSynchronously
_representsLongFormVideoContent
_category
_routeTypes
_legacyCachedRoute
_playbackDataSource
_presentedBundleID
_representedBundleID
T@"MPAVRoute",&,N,V_legacyCachedRoute
T@"<MPAVOutputDevicePlaybackDataSource>",W,N,V_playbackDataSource
T@"NSString",C,N,V_presentedBundleID
T@"NSString",C,N,V_representedBundleID
TB,R,N,V_representsLongFormVideoContent
T@"<MPAVRoutingControllerDelegate>",W,N,V_delegate
T@"MPAVRoutingDataSource",R,N,V_dataSource
T@"NSString",C,N,V_name
TB,N,V_fetchAvailableRoutesSynchronously
T@"NSString",C,N,V_category
Tq,N,V_routeTypes
T@"NSSet",R,N
initWithRoutes:selectionOperation:
setRoutes:
selectionOperation
setSelectionOperation:
completion
setCompletion:
_routes
_selectionOperation
_completion
T@"NSArray",&,N,V_routes
Tq,N,V_selectionOperation
T@?,C,N,V_completion
weakToStrongObjectsMapTable
_dequeue
_enqueue:
removePendingRoutes:withError:
_dequeueSelectionWhenPossible
_processSelection:completion:
supportsGrouping
addRoutesToGroup:completion:
removeRoutesFromGroup:completion:
removeAllPendingRoutes
_selectionsEnqueued
_selectionInProgress
_pendingRoutes
_selectionInProgressTimer
_pendingSelectionTimers
_hasPendingPickedRoutes
T@"MPAVRoutingController",R,W,N,V_routingController
TB,R,N,V_hasPendingPickedRoutes
dateByAddingTimeInterval:
assetURLExpirationDuration
playbackAuthorizationTokenHalfLifeDuration
isEqualToIdentity:inStore:
_initWithPayload:
setExpirationDate:
payload
setPayload:
assetURLExpirationDate
playbackAuthorizationTokenHalfLifeDate
_payload
_assetURLExpirationDate
_playbackAuthorizationTokenHalfLifeDate
T@"NSDate",R,C,N,V_assetURLExpirationDate
T@"NSDate",R,C,N,V_playbackAuthorizationTokenHalfLifeDate
T@,&,N,V_payload
T@"ICUserIdentity",&,N,V_userIdentity
T@"NSDate",C,N,V_expirationDate
initWithAnnotatedPayload:playableAssetIdentifiers:trustID:error:
annotatedPayload
trustID
playableAssetIdentifiers
_annotatedPayload
_error
_trustID
_playableAssetIdentifiers
T@,R,N,V_annotatedPayload
T@"NSError",R,N,V_error
T@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>",R,C,N,V_trustID
T@"NSArray",R,N,V_playableAssetIdentifiers
initWithItemIdentifiers:parentIdentifiers:childKey:relativeOrder:
setIdentifiers:
parentIdentifiers
setParentIdentifiers:
childKey
setChildKey:
relativeOrder
setRelativeOrder:
_identifiers
_parentIdentifiers
_childKey
_relativeOrder
T@"MPIdentifierSet",C,N,V_identifiers
T@"MPIdentifierSet",C,N,V_parentIdentifiers
T@"NSString",N,V_childKey
Tq,N,V_relativeOrder
_relationshipKeyForObject:
performWithDatabaseOperations:augmentingPayload:trustID:
translatorForType:
_unsupportedMediaKitTypes
identifiersForPayload:context:
_childKeyForParentType:type:
relateIdentifiers:toParentIdentifiers:parentVersionHash:childKey:order:
importPlaybackAuthorizationToken:identifiers:source:type:expirationDate:trustID:
importObject:type:identifiers:source:expiration:
importAssetURL:forIdentifiers:flavor:expirationDate:
_sinfTypeFromPayload:
_sinfDataFromSinfType:payload:
preferredStoreStringIdentifierForPersonID:
importAssetSinf:type:forIdentifier:hashedPersonID:flavor:sinfPayload:
initWithBase64EncodedString:options:
_unsupportedParentChildRelationships
translatorForKind:
_unsupportedStorePlatformKinds
allKeys
performWithDatabaseOperations:error:
initWithPayload:requestPayload:hashedPersonID:
_requestPayload
_hashedPersonID
substringToIndex:
initWithName:object:handler:
setModelResponse:
initWithMiddleware:modelRequest:
modelRequest
setModelRequest:
_invalidationObservers
_invalidationHandler
_modelRequest
T@"_MPModelShimRequestMiddleware",&,N,V_middleware
T@"MPModelRequest",&,N,V_modelRequest
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
operationsForRequest:
T@"NSArray",&,N
modelResponse
_modelResponse
T@"MPModelResponse",&,N,V_modelResponse
T@"NSArray",&,N,V_invalidationObservers
stringByReplacingCharactersInRange:withString:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
T@"NSDictionary",C,N,V_additionalUserInfo
T@"NSString",C,N,V_clientName
Ti,N,V_clientType
Tq,N,V_clientVersion
T@,&,N,V_hierarchyToken
T@"NSString",C,N,V_serviceIdentifier
Tq,N,V_sessionID
pathWithComponents:
set_MediaLibrary_coreLibrary:
__MediaLibrary_coreLibrary
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},N,V__MediaLibrary_coreLibrary
_MLCoreStorageLockPointer
_MLCoreStorage
databasePath
lastPathComponent
stringByDeletingLastPathComponent
fileSystemRepresentation
_setMLCoreStorage:
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},R,N
sharedResourceManager
resources
sectionsInfo
sortingDetails
canonicalLanguageIdentifier
_hasValidUniformContentItemType
_contentItemTypeOccurrences
_totalNumberOfOccurrences
_uniformContentItemType
initWithOptions:
_update
currentUser
currentHome
currentAccessory
userMonitorWithHomeIdentifiers:
_userMonitorWithHomeIdentifiers:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:
accessories
msv_firstWhere:
second
_currentHomeDidChange
_currentUserDidChange
users
setWithArray:
isEqualToSet:
minusSet:
userID
initWithUser:home:
_usersDidChange
_updateSoundCheck
currentHomeDidChange
currentUserDidChange
homeUsersDidChange
soundCheckSettingDidUpdate:
_updateAsyncOnQueue
sharedObserver
homeManager:didUpdateAuthorizationStatus:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didReceiveAddAccessoryRequest:
homeManager:didUpdateStateForIncomingInvitations:
homeManagerDidUpdateApplicationData:
homeManagerDidUpdateCurrentHome:
homeManagerDidUpdateDataSyncInProgress:
homeManagerDidUpdateDataSyncState:
homeManager:didUpdateStatus:
homeManager:didUpdateResidentEnabledForThisDevice:
homeManager:didUpdateAccessAllowedWhenLocked:
homeManager:didUpdateThisDeviceIsResidentCapable:
homeManager:residentProvisioningStatusChanged:
homeManagerWillStartBatchNotifications:
homeManagerDidEndBatchNotifications:
homeManager:didUpdateMultiUserStatus:reason:
homeManagerDidUpdateAssistantIdentifiers:
homeManagerDidRemoveCurrentAccessory:
homeManager:didUpdateHH2State:
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
homeDidUpdateSupportedFeatures:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
homeDidUpdateProtectionMode:
homeDidUpdateNetworkRouterSupport:
homeDidUpdateHomeLocationStatus:
homeDidEnableMultiUser:
homeDidSetHasAnyUserAcknowledgedCameraRecordingOnboarding:
home:didAddAccessoryNetworkProtectionGroup:
home:didRemoveAccessoryNetworkProtectionGroup:
home:didUpdateAccessoryNetworkProtectionGroup:
homeDidSetEnableDoorbellChime:
home:didUpdatePersonManagerSettings:
home:didFailAccessorySetupWithError:
homeDidSetHasOnboardedForAccessCode:
homeDidAddWalletKey:
homeDidRemoveWalletKey:
home:didUpdateHasOnboardedForWalletKey:
homeDidUpdateAssistantIdentifiers:
homeDidUpdateToROAR:
home:didUpdateAreBulletinNotificationsSupported:
setupDidComplete
hasCurrentUser
hasCurrentHome
hasCurrentAccessory
isSoundCheckEnabled
setSoundCheckEnabled:
monitorForCurrentUser
userMonitorWithHomeIdentifier:
homeAccesssoryWithRouteID:
_soundCheckDidChange
homeDidUpdateSoundCheck:
_homeManager
_currentHome
_currentUser
_homeUsers
_userMonitorMap
_soundCheckCachedValue
_setupDidComplete
T@"<MPHomeManagerObserverDelegate>",W,N,V_delegate
T@"MPHomeUserMonitor",R,N
soundCheckEnabled
TB,N,GisSoundCheckEnabled
T@"HMUser",R,N
T@"HMHome",R,N
T@"HMAccessory",R,N
globalPlaylistID
descriptionComponents
caseInsensitiveCompare:
sortedArrayUsingSelector:
setActionAfterQueueLoad:
setRepeatType:
setQueueEndAction:
queueDescriptor
setQueueDescriptor:
setSiriAssetInfo:
setSessionIdentifier:
supportsAccountRectification
setSupportsAccountRectification:
queueFeederClass
supportsAutoPlay
containsRestorableContent
isSupported
clearStartItem
isCompatibleWithReplacementContext:incompatibleReason:
_playerCurrentItem
_supportsAccountRectification
_actionAfterQueueLoad
_queueDescriptor
_siriAssetInfo
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatType
Tq,N,V_queueEndAction
supported
TB,R,N,GisSupported
T@"MPMusicPlayerQueueDescriptor",C,N,V_queueDescriptor
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_sessionIdentifier
TB,N,V_supportsAccountRectification
globalSerialQueue
controllers
_initWithUserIdentity:
_deviceMediaLibraryDidChangeNotification:
_tasteControllerWithUserIdentity:isSingleton:createIfRequired:
_libraryPathDidChangeForTasteController:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
setTasteType:forStoreAdamID:withContentType:completionHandler:
_libraryEntityForModel:
setTasteType:forMediaEntity:withCompletionHandler:
_removePendingUpdateRecordForPlaylistGlobalID:token:
_removePendingUpdateRecordForStoreAdamID:token:
_postNotificationName:controller:userInfo:
_addPendingUpdateRecordForPlaylistGlobalID:contentTasteType:
setValue:forProperty:withCompletionBlock:
_addPendingUpdateRecordForStoreAdamID:contentTasteType:
_libraryPlaylistWithGlobalID:
addNonLibraryOwnedPlaylistWithGlobalID:completion:
_libraryEntityWithStoreID:contentType:
initWithStoreItemID:additionalTrackMetadata:
initWithImportElements:referralObject:usingCloudLibraryDestination:
setLikedState:forAlbumWithStoreID:completion:
setLikedState:forEntityWithStoreID:withMediaType:timeStamp:completion:
performStoreItemLibraryImport:withCompletion:
tasteTypeForMediaEntity:
_pendingUpdateRecordForPlaylistGlobalID:
tasteType
_pendingUpdateRecordForStoreAdamID:
_postNotificationName:controller:
collectionWithPersistentID:groupingType:
predicateWithProperty:equalToValue:
_ML3QueryWithEntityClass:predicate:options:
anyEntityPersistentID
enumeratePersistentIDsAndProperties:ordered:usingBlock:
collectionWithPersistentID:groupingType:verifyExistence:
libraryDataProvider
queryWithLibrary:predicate:orderingTerms:usingSections:options:
initWithPlaylistGlobalID:tasteType:
_addPendingUpdateRecord:withKey:inDictionary:
initWithStoreAdamID:tasteType:
_pendingUpdateRecordForKey:inDictionary:
T@"NSObject<OS_dispatch_queue>",R,N
T@"MPContentTasteController",R,N
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
tasteTypeForPlaylistGlobalID:
tasteTypeForStoreAdamID:
_pendingUpdateRecordByPlaylistGlobalID
_pendingUpdateRecordByStoreAdamID
addStoreItemMetadata:forUserIdentity:
cacheableItemIdentifier
initWithCacheSize:
addMetadata:forItemIdentifier:
_removeExpiredItemsPeriodically
getCacheKeyWithRequest:completionHandler:
getStoreItemMetadataForRequest:responseHandler:
getStoreItemMetadataForRequest:includeBatchResponseError:responseHandler:
progressWithTotalUnitCount:
setCompletedUnitCount:
setFinalResponse:
setCancellable:
metadataForItemIdentifier:ignoreExpiration:
setStoreItemMetadata:forItemIdentifier:
hasMetadataForRequestReason:
setLastBatchItemIdentifiers:
setCacheMissItemIdentifiers:
lastBatchItemIdentifiers
metadataDictionary
initWithRequest:response:
requestItemIdentifiers
setRequestItemIdentifiers:
performanceMetrics
setPerformanceMetrics:
setBatchResultsHandler:
addChild:withPendingUnitCount:
removeExpiredMetadata
optimalBatchSize
T@"MPStoreItemMetadataRequestController",R,N
beginTransaction
endTransaction
setCacheSize:
requestStoreItemMetadataForReason:withItemIdentifiers:responseHandler:
cacheSize
_lastExpiredMetadataPurgeMachTime
_itemCaches
_transactionLock
_transactionCount
_cacheSize
Tq,N,V_cacheSize
buttonWithType:
easyTouchDefaultHitRectInsets
_handleTouchDown
_handleTouchCancel
_handleTouchUp
redColor
setBorderColor:
setBorderWidth:
colorWithAlphaComponent:
touchesCancelled:withEvent:
touchesEnded:withEvent:
_delayedTriggerHold
isHolding
holdDelayInterval
T{UIEdgeInsets=dddd},R,N
alignmentRectInsets
setAlignmentRectInsets:
setHitTestDebugEnabled:
setHoldDelayInterval:
hitTestDebugEnabled
_holding
_hitTestDebugView
_hitTestDebugEnabled
_holdDelayInterval
_alignmentRectInsets
T{UIEdgeInsets=dddd},N,V_alignmentRectInsets
Td,N,V_holdDelayInterval
holding
TB,R,N,GisHolding
TB,N,V_hitTestDebugEnabled
defaultMediaLibrary
initWithPersistentID:mediaLibrary:
mediaObjectType
libraryIdentifiers
libraryIdentifiersCount
libraryId
libraryName
collectionExistsContainedWithinPersistentIDs:count:groupingType:existentPID:
hasSagaId
sagaId
collectionExistsWithSagaID:groupingType:existentPID:
hasCloudUniversalLibraryId
cloudUniversalLibraryId
collectionExistsWithCloudUniversalLibraryID:groupingType:existentPID:
hasStoreId
storeId
collectionExistsWithStoreID:groupingType:existentPID:
collectionExistsWithName:groupingType:existentPID:
initWithPersistentID:
_createFilterableDictionary
canFilterByProperty:
_isValidPlaylistProperty:
componentsSeparatedByString:
seedTracksQuery
addFilterPredicate:
isHomeSharingLibrary
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:
representativeItem
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
notifyDisplayValuesPropertyDidChange
isCloudEnabled
uploadArtworkForPlaylist:completionHandler:
addItemWithProductID:completionHandler:
addMediaItems:completionHandler:
existsInLibrary
seedItems
authorDisplayName
removeFirstItem
mediaTypes
multiverseIdentifier
representativeArtists
isCloudMix
cloudGlobalID
setUserSelectedArtworkImage:
_representativeArtists
_seedTracksQuery
mainBundle
localizedInfoDictionary
infoDictionary
setAuthorDisplayName:
_defaultAuthorDisplayName
_authorDisplayName
T@"NSString",C,N,V_authorDisplayName
string
__descriptionText_KEY
__musicShow_KEY
__episodeNumber_KEY
__explicitRating_KEY
__season_KEY
__show_KEY
__releaseDate_KEY
__episodeType_KEY
__episodeTypeDisplayName_KEY
musicShow
TB,D,N,GisMusicShow
episodeNumber
T@"MPModelTVSeason",&,D,N
T@"MPModelTVShow",&,D,N
episodeType
episodeTypeDisplayName
isAppleTV
isAudioAccessory
isMultiUserDevice
multiUserDevice
TB,R,N,GisMultiUserDevice
shouldLibraryAdd
initWithFilterPredicates:
setEntityLimit:
setIgnoreRestrictionsPredicates:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
setGlobalPlaylistID:
setShouldLibraryAdd:
_shouldLibraryAdd
_globalPlaylistID
T@"NSString",C,N,V_globalPlaylistID
TB,N,V_shouldLibraryAdd
encodeCGSize:forKey:
decodeCGSizeForKey:
initWithPreferredArtworkSize:
preferredArtworkSize
setPreferredArtworkSize:
_preferredArtworkSize
T{CGSize=dd},N,V_preferredArtworkSize
setSessionIdentifier:type:data:
setBundleIdentifier:
setSupportedOptions:
setDisplayProperties:
queueControlOptions
setQueueControlOptions:
copyWithOptions:
bundleIdentifier
supportedOptions
playbackSessionIdentifier
playbackSessionType
displayProperties
setCopyOptions:
setStorage:
copyOptions
storage
decodePropertyListForKey:
setFallbackStoreIdentifier:
initWithType:sessionIdentifier:data:dataType:bundleIdentifier:supportedOptions:displayProperties:
setBOOLValue:forOption:
boolValueForOption:
fallbackStoreIdentifier
_final
_displayProperties
_bundleIdentifier
_supportedOptions
_copyOptions
_queueControlOptions
_storage
_playbackSessionIdentifier
_playbackSessionType
TQ,N,V_copyOptions
TQ,N,V_queueControlOptions
T@"NSMutableDictionary",&,N,V_storage
Tq,R,N,V_type
T@"NSString",R,C,N,V_playbackSessionIdentifier
T@"NSString",R,C,N,V_playbackSessionType
T@"NSData",R,C,N,V_playbackSessionData
T@"MPPlaybackArchiveDisplayProperties",R,N,V_displayProperties
T@"NSString",R,C,N,V_bundleIdentifier
TQ,R,N,V_supportedOptions
setFilterPredicates:
stringByAppendingFormat:
encodeObject:
encodeValueOfObjCType:at:
_isFilteringDisabled
initWithCriteria:library:
setStaticEntities:entityType:
itemExistsWithPersistentID:
collectionExistsWithPersistentID:groupingType:
filterPredicatesCount
filterPredicates
entityOrder
includeNonLibraryEntities
filteringDisabled
staticEntityIdentifiersCount
staticEntityIdentifiers
entityWithMultiverseIdentifier:
hasLibraryName
mediaLibraryWithUniqueIdentifier:
staticEntityType
protobufferEncodableObjectFromLibrary:
addFilterPredicates:
setFilteringDisabled:
setIncludeNonLibraryEntities:
setEntityOrder:
setStaticEntityType:
addStaticEntityIdentifiers:
predicateWithValue:forProperty:comparisonType:
setSortItems:
audiobooksQuery
_itemsForQueryCriteria:
_collectionsForQueryCriteria:
initFilteringDisabled
playlistsQuery
_setOrderingProperties:
_setOrderingDirectionMappings:
_hasItemsForQueryCriteria:
_hasCollectionsForQueryCriteria:
_countOfItemsForQueryCriteria:
_countOfCollectionsForQueryCriteria:
_itemPersistentIdentifiersForQueryCriteria:
_collectionPersistentIdentifiersForQueryCriteria:
predicateForProperty:
newPlaylistWithPersistentID:
_getRepresentativeCollectionGrouping:propertyPredicate:
initWithIdentifier:itemsQuery:grouping:
excludesEntitiesWithBlankNames
specifiesPlaylistItems
groupingThreshold
itemSectionInfo
collectionSectionInfo
initWithInteger:
loadValueForAggregateFunction:onCollectionsForProperty:queryCriteria:completionBlock:
loadValueForAggregateFunction:onItemsForProperty:queryCriteria:completionBlock:
_valueForAggregateFunction:onProperty:entityType:
isFilteringDisabled
_enumerateItemsInOrder:usingBlock:
_enumerateItemPersistentIDsInOrder:usingBlock:
concreteMediaItemWithPersistentID:library:
enumerateItemIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
_enumerateCollectionsInOrder:usingBlock:
_enumerateCollectionPersistentIDsInOrder:usingBlock:
enumerateCollectionIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
persistentIDPropertyForGroupingType:
initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
predicateMatchingPredicates:
albumsQuery
artistsQuery
songsQuery
podcastsQuery
ITunesUQuery
ITunesUAudioQuery
videoITunesUQuery
audibleAudiobooksQuery
compilationsQuery
composersQuery
genresQuery
albumArtistsQuery
videosQuery
musicVideosQuery
tvShowsQuery
homeVideosQuery
moviesQuery
movieRentalsQuery
audioPodcastsQuery
videoPodcastsQuery
geniusMixesQuery
playlistsRecentlyAddedQuery
initWithProtobufferDecodableObject:
protobufferEncodableObject
initWithEntities:entityType:
copyByRemovingStaticEntities
copyBySanitizingStaticEntities
removeFilterPredicate:
entityLimit
shouldIncludeNonLibraryEntities
includeEntitiesWithBlankNames
setIncludeEntitiesWithBlankNames:
ignoreSystemFilterPredicates
setIgnoreSystemFilterPredicates:
ignoreRestrictionsPredicates
itemPropertiesToFetch
setItemPropertiesToFetch:
collectionPropertiesToFetch
setCollectionPropertiesToFetch:
_hasItems
_hasCollections
itemPersistentIdentifiers
collectionPersistentIdentifiers
_orderingProperties
_orderingDirectionMappings
sortItems
setUseSections:
useSections
willGroupEntities
itemSections
collectionSections
valueForAggregateFunction:onItemsForProperty:
valueForAggregateFunction:onCollectionsForProperty:
_enumerateItemsUsingBlock:
_enumerateUnorderedItemsUsingBlock:
_enumerateUnorderedItemPersistentIDsUsingBlock:
_enumerateCollectionsUsingBlock:
_enumerateUnorderedCollectionsUsingBlock:
_enumerateUnorderedCollectionPersistentIDsUsingBlock:
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setCriteria:
_criteria
_staticEntities
_staticEntityType
T@"MPMediaLibrary",&,N
T@"NSSet",C,N
orderingProperties
T@"NSArray",C,N,G_orderingProperties,S_setOrderingProperties:
orderingDirectionMappings
T@"NSDictionary",C,N,G_orderingDirectionMappings,S_setOrderingDirectionMappings:
TQ,N
T@"MPMediaQuerySectionInfo",R,N
T@"MPMediaItemCollection",R,N
playlistItemsQuery
TB,R,N,GisPlaylistItemsQuery
T@"NSSet",&,N
evaluateEntity:
decodeObject
decodeValueOfObjCType:at:size:
hasSuffix:
descriptionOfValue:forProperty:
propertyPredicate
property
comparisonType
setProperty:
setComparisonType:
multiverseIdentifierForCollectionWithPersistentID:groupingType:
multiverseIdentifierForTrackWithPersistentID:
setValue:
setPropertyPredicate:
_property
_value
_comparisonType
T@,C,N
initWithConditionPredicate:thenPredicate:elsePredicate:
conditionalPredicate
hasConditionalPredicate
hasThenPredicate
thenPredicate
hasElsePredicate
elsePredicate
setConditionalPredicate:
setThenPredicate:
setElsePredicate:
predicateWithConditionPredicate:thenPredicate:elsePredicate:
conditionPredicate
_conditionPredicate
_thenPredicate
_elsePredicate
T@"MPMediaPredicate",R,C,N,V_conditionPredicate
T@"MPMediaPredicate",R,C,N,V_thenPredicate
T@"MPMediaPredicate",R,C,N,V_elsePredicate
initWithPredicates:
setByAddingObject:
compoundPredicate
setCompoundPredicate:
T@"NSArray",R,C,N,V_predicates
predicateWithProperty:values:
values
_values
T@"NSString",R,C,N,V_property
T@"NSSet",R,C,N,V_values
persistentIDsPredicate
shouldContain
persistentIDsCount
persistentIDs
setShouldContain:
addPersistentIDs:
setPersistentIDsPredicate:
predicateWithPersistentIDs:count:shouldContain:
_persistentIDs
_shouldContain
_count
TQ,R,N,V_count
Tr^q,R,N,V_persistentIDs
TB,R,N,V_shouldContain
setSearchString:
setProperties:
searchStringPredicate
searchString
initWithArray:
setSearchStringPredicate:
predicateWithSearchString:forProperties:
_searchString
_properties
T@"NSString",C,N,V_searchString
T@"NSSet",C,N,V_properties
MPIsEmpty
removeItemAtIndex:
moveItemFromIndex:toIndex:
modelObjects
setStoreIDs:
valuesForProperties:
setSubscriptionAdamID:
setCloudAlbumID:
setCloudID:
T@"MPModelLibraryImportChangeRequest",C,N,V_request
universalCloudLibraryID
setUniversalCloudLibraryID:
setCloudVersionHash:
setLastModifiedDateComponents:
setOwner:
setCuratorPlaylist:
setPublicPlaylist:
setVisiblePlaylist:
setSubscribed:
setUserEditableComponents:
setShareURL:
setShareShortURL:
setTiledArtworkRequest:
setHandle:
_requestedPlaylistProperties
initWithClientIdentifier:queue:
applicationQueuePlayer
alloc
_snapshot
getRepeatModeWithReply:
onServer:
getShuffleModeWithReply:
setShuffleMode:
_nowPlaying
_mediaItemFromNowPlaying:
_setNowPlayingItem:itemIdentifier:
setNowPlayingItem:itemIdentifier:completion:
index
setQueueWithQuery:firstItem:
initWithItemCollection:
setQueueWithDescriptor:
initWithStoreIDs:
prependDescriptor:completion:
appendDescriptor:completion:
setDescriptor:completion:
onServerAsync:errorHandler:timeout:retryEnabled:
skipWithBehavior:
initWithQuery:
initWithRadioStation:
playParametersQueue
initWithPlayParameters:
getNowPlayingAtIndex:reply:
nowPlayingAtIndex:
reshuffle
pauseWithFadeDuration:
setElapsedTime:completion:
setPlaybackRate:completion:
beginSeekWithDirection:
systemMusicPlayer
_onQueue_applyServerStateUpdateRecord:
hasQueueDescriptor
hasNowPlaying
nowPlaying
hasTimeSnapshot
timeSnapshot
hasRepeatMode
hasShuffleMode
hasContentItemIDs
contentItemIDs
_postPrivateQueueDidChangeNotificationWithContentItemIDs:
queueDidChange
itemDidEnd
queueDidEnd
artworkIdentifier
setHasQueueDescriptor:
setQueueDidChange:
applyServerStateUpdateRecord:
setHasNowPlaying:
setNowPlaying:
setHasTimeSnapshot:
setTimeSnapshot:
setHasRepeatMode:
setItemDidEnd:
setQueueDidEnd:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
onServerAsync:errorHandler:
requestAuthorization:
getDescriptorWithReply:
getNowPlayingWithReply:
getTimeSnapshotWithReply:
setFallbackArtworkCatalogBlock:
initWithItemIdentifier:item:
applicationMusicPlayer
iPodMusicPlayer
setRunLoopForNotifications:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
T@"MPMusicPlayerController",R,N
T@"MPMusicPlayerApplicationController",R,N
T@"MPMusicPlayerController<MPSystemMusicPlayerController>",R,N
initWithClientIdentifier:
shuffleMode
nowPlayingItem
setNowPlayingItem:
_setNowPlayingItemWithIdentifier:
indexOfNowPlayingItem
setQueueWithQuery:
setQueueWithItemCollection:
setQueueWithStoreIDs:
prependQueueDescriptor:
appendQueueDescriptor:
prepareToPlayWithCompletionHandler:
skipToNextItem
skipToBeginning
skipToPreviousItem
beginGeneratingPlaybackNotifications
endGeneratingPlaybackNotifications
setQueueWithRadioStation:
queueAsQuery
queueAsRadioStation
nowPlayingItemAtIndex:
shuffle
pauseWithFadeoutDuration:
skipToBeginningOrPreviousItem
prepareQueueForPlayback
numberOfItems
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
setVolumePrivate:
playbackSpeed
setPlaybackSpeed:
isNowPlayingItemFromGeniusMix
currentChapterIndex
setCurrentChapterIndex:
isGeniusAvailable
isGeniusAvailableForSeedItems:
setQueueWithSeedItems:
setQueueWithGeniusMixPlaylist:
adjustLoadedQueueRangeToReverseCount:forwardCount:
_clearConnection
_establishConnectionIfNeeded
connection
serverNowPlaying
serverTimeSnapshot
serverQueueDescriptor
lastServerTimeSnapshot
lastServerNowPlaying
lastContentItemIDs
targetQueueDescriptor
notificationsCounter
_isPreparedToPlay
_serverNowPlaying
_serverTimeSnapshot
_serverQueueDescriptor
_lastServerTimeSnapshot
_lastServerNowPlaying
_lastContentItemIDs
_targetQueueDescriptor
_notificationsCounter
T@"NSString",R,C,N,V_clientIdentifier
T@"NSXPCConnection",R,N,V_connection
T@"MPMusicPlayerControllerNowPlaying",R,N,V_serverNowPlaying
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_serverTimeSnapshot
T@"MPMusicPlayerQueueDescriptor",R,N,V_serverQueueDescriptor
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",R,N,V_lastServerTimeSnapshot
T@"MPMusicPlayerControllerNowPlaying",R,N,V_lastServerNowPlaying
T@"NSArray",R,N,V_lastContentItemIDs
T@"MPMusicPlayerQueueDescriptor",R,N,V_targetQueueDescriptor
Tq,R,N,V_notificationsCounter
T@"MPVolumeController",R,N,V_volumeController
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"MPMediaItem",C,N
TB,R,N,V_isPreparedToPlay
invokeWithTarget:
methodSignatureForSelector:
forwardInvocation:
_item
T@"MPMediaItem",R,N,V_item
setTvEpisode:
genericModelObjectWithRequestedProperties:
setImageArtworkIdentifier:
collectionWithImageRepresentation:videoRepresentation:
staticArtworkCatalogWithRepresentationCollection:
collectionWithImageRepresentation:videoRepresentation:bestRepresentationKinds:
isLoadingRepresentation
isArtworkVisuallyIdenticalToCatalog:
destination
fittingSize
setLoadingRepresentation:
bestAvailableRepresentationCollection
resetForRepresentationKinds:
_updateRepresentations
overlayScaledFittingSizeForCatalog:scaledFittingSize:
_requestBestRepresentationOfKind:completionHandler:
bestImageFromDisk
artworkCatalog:willConfigureView:
setDestination:
artworkCatalog:didClearFromView:
imageRepresentation
setDestination:forRepresentationKinds:configurationBlock:
video
setRepresentationKinds:
bestRepresentationKinds
setBestRepresentationKinds:
setImageRepresentation:
setVideoRepresentation:
_callConfigurationWithRevisionID:
artworkCatalog:didConfigureView:withRepresentation:
overlayDelegate
overlayVisualIdenticalityForCatalog:
_artworkLoadQueue
initWithImage:algorithm:
analyzeWithCompletionHandler:
radiosityImageWithImage:displayScale:completionHandler:
_setCacheIdentifier:forRequestingContext:
_setCacheLimit:forCacheIdentifier:requestingContext:
_setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
_setCacheLimit:forCacheIdentifier:requestingContext:representationKind:
_setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:representationKind:
cacheIdentifier
requestingContext
_artworkCacheForIdentifier:requestingContext:representationKind:
_registeredIdentifiableDataSourceAndTokenClasses
artworkDataSourceShortDescription
artworkDataSourceWithIdentifier:
artworkTokenWithParameters:
_existingRepresentationOfKind:
_updateWithRepresentation:isBestRepresentation:modelRevisionID:
_loadRepresentationOfKind:completionHandler:
_updateRepresentationOfKind:
_loadBestRepresentationIfNeededOfKind:
kind
setCacheIdentifier:
setRequestingContext:
setEvictsObjectsWhenApplicationEntersBackground:
isBestRepresentationForKind:
staticArtworkCatalogWithImage:
placeholderCatalogWithSymbolName:
setCacheLimit:forCacheIdentifier:cacheReference:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:cacheReference:
setCacheLimit:forCacheIdentifier:cacheReference:representationKind:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:cacheReference:representationKind:
artworkCatalogWithDataSourceShortDescription:dataSourceIdentifier:tokenParameters:
setCacheLimit:forCacheIdentifier:requestingContext:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
setCacheLimit:forCacheIdentifier:requestingContext:representationKind:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:representationKind:
requestImageWithCompletionHandler:
hasImageOnDisk
setDestination:configurationBlock:
requestVideoWithCompletionHandler:
setAllowsVideoConstrainedNetworkAccess:
setPreferredVideoKind:
existingColorAnalysisWithAlgorithm:
requestColorAnalysisWithAlgorithm:completionHandler:
requestRadiosityImageWithCompletionHandler:
imageAttachments
setCacheIdentifier:forCacheReference:
videoCache
setDestination:progressiveConfigurationBlock:
setCacheIdentifier:forRequestingContext:
allowsVideoConstrainedNetworkAccess
preferredVideoFormat
setPreferredVideoFormat:
configurationBlock
setConfigurationBlock:
representationKinds
setBestAvailableRepresentationCollection:
videoCacheStoragePolicy
setVideoCacheStoragePolicy:
setOverlayDelegate:
overlayToken
setOverlayToken:
overlayStorage
setOverlayStorage:
_fittingSize
_modelRevisionID
_allowsVideoConstrainedNetworkAccess
_loadingRepresentation
_destinationScale
_preferredVideoFormat
_destination
_configurationBlock
_representationKinds
_bestAvailableRepresentationCollection
_cacheIdentifier
_requestingContext
_token
_renderHint
_videoCacheStoragePolicy
_overlayDelegate
_overlayToken
_overlayStorage
T@,W,N,V_destination
T@?,C,N,V_configurationBlock
TQ,N,V_representationKinds
T@"MPArtworkRepresentationCollection",&,N,V_bestAvailableRepresentationCollection
loadingRepresentation
TB,GisLoadingRepresentation,V_loadingRepresentation
T@"NSString",C,N,V_cacheIdentifier
T@,W,N,V_requestingContext
T@,R,N,V_token
T@"<MPArtworkDataSource>",R,W,N,V_dataSource
T@"NSCache",R,N
T@"<MPArtworkDataSourceVisualIdenticality>",R,N
TQ,N,V_renderHint
TQ,N,V_videoCacheStoragePolicy
T@"<_MPArtworkCatalogOverlayDelegate>",W,N,V_overlayDelegate
T@,&,N,V_overlayToken
T@,&,N,V_overlayStorage
Td,N,V_destinationScale
T{CGSize=dd},N,V_fittingSize
TB,N,V_allowsVideoConstrainedNetworkAccess
Tq,N,V_preferredVideoFormat
T@"MPArtworkImageAttachments",R,N
representationForVisualIdentity:withSize:video:
setKind:
setRepresentationSize:
setVideo:
setImagePrepared:
visualIdenticalityStringRepresentation
representationWithSize:image:
representationWithSize:video:
debugQuickLookObject
isImagePrepared
_imagePrepared
_kind
_image
_video
_visualIdenticalityStringRepresentation
_representationToken
_representationSize
Tq,N,V_kind
T@"UIImage",&,N,V_image
imagePrepared
TB,N,GisImagePrepared,V_imagePrepared
T@"AVAsset",&,N,V_video
T{CGSize=dd},N,V_representationSize
T@,&,N,V_representationToken
T@"NSString",R,C,N,V_visualIdenticalityStringRepresentation
videoRepresentation
_imageRepresentation
_videoRepresentation
_bestRepresentationKinds
T@"MPArtworkRepresentation",&,N,V_imageRepresentation
T@"MPArtworkRepresentation",&,N,V_videoRepresentation
TQ,N,V_bestRepresentationKinds
CGSizeValue
sortedArrayUsingComparator:
setVideoArtworkIdentifier:
imageArtworkIdentifier
videoArtworkIdentifier
_imageArtworkIdentifier
_videoArtworkIdentifier
T@"NSString",C,N,V_imageArtworkIdentifier
T@"NSString",C,N,V_videoArtworkIdentifier
initWithSize:
format
tertiarySystemBackgroundColor
setFill
userInterfaceStyle
colorWithDynamicProvider:
imageWithConfiguration:
imageByApplyingSymbolConfiguration:
imageWithTintColor:
drawAtPoint:
imageWithActions:
_fallbackCache
_lastArtworkCatalog
clearArtworkCatalogs
T@"MPArtworkCatalog",R,N
artworkCatalogBackingFileURL
T@"NSURL",R,N
_conditionalPredicate
T@"MPPMediaPredicate",&,N,V_conditionalPredicate
T@"MPPMediaPredicate",&,N,V_thenPredicate
T@"MPPMediaPredicate",&,N,V_elsePredicate
T@"ICUserIdentity",C,N
isAsynchronous
isConcurrent
isExecuting
isFinished
start
_isExecuting
_isFinished
T@"NSError",R,C,N,V_error
itemWithPersistentID:
deviceMediaLibrary
initWithModelObject:
itemFromModelObject:
decodeItemWithCoder:
_isValidItemProperty:
_directStoreURL
_libraryLinkURL
populateLocationPropertiesWithPath:assetProtectionType:
populateLocationPropertiesOfItem:withPath:assetProtectionType:
invalidateCachedProperties
populateLocationPropertiesOfItem:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItem:
unsignedIntegerValue
stopTime
playbackDuration
chapterType
chaptersOfType:
playbackTime
enumerateValuesForProperties:usingBlock:
_libraryLinkKind
_libraryLinkArtist
_libraryLinkPlaylistName
URLQueryAllowedCharacterSet
itemFromSong:
ULIDPropertyForGroupingType:
titlePropertyForGroupingType:
fallbackTitlePropertyForGroupingType:
dynamicProperties
didSkipWithPlayedToTime:
incrementPlayCount
markNominalAmountHasBeenPlayed
noteWasPlayedToTime:skipped:
incrementSkipCount
incrementPlayCountForPlayingToEnd
incrementPlayCountForStopTime:
updateDateAccessedToCurrentDateWithWriteCompletionBlock:
nominalHasBeenPlayedThreshold
didReceiveMemoryWarning
_bestStoreURL
populateLocationPropertiesWithPath:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
clearLocationProperties
effectiveAlbumArtist
albumTitle
artwork
dateAdded
comments
isRental
isITunesU
isCloudItem
hasProtectedAsset
effectiveStopTime
podcastTitle
podcastPersistentID
setPlayCount:
playCountSinceSync
setPlayCountSinceSync:
lastPlayedDate
setLastPlayedDate:
dateAccessed
setDateAccessed:
setSkipCount:
skipCountSinceSync
setSkipCountSinceSync:
lastSkippedDate
setLastSkippedDate:
hasBeenPlayed
setHasBeenPlayed:
playbackStoreID
isExplicitItem
userGrouping
chapterOfType:atIndex:
countOfChaptersOfType:
gaplessHeuristicInfo:durationInSamples:lastPacketsResync:encodingDelay:encodingDrain:
isUsableAsRepresentativeItem
dateDownloaded
TQ,R,D,N
T@"MPMediaItemArtwork",R,N
explicitItem
TB,R,N,GisExplicitItem
cloudItem
TB,R,N,GisCloudItem
protectedAsset
TB,R,N,GhasProtectedAsset
preorder
TB,R,N,GisPreorder
defaultPropertyValues
decodeInt64ForKey:
setValue:forKey:
_persistentID
initWithBoundsSize:requestHandler:
imageWithSize:
imageCropRect
jpegDataWithSize:
pngDataWithSize:
_bounds
_requestHandler
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
setRedownloadableItemCount:
setDownloadEnabledItemCount:
setNonPurgeableItemCount:
setPendingItemIdentifiers:
longValue
redownloadableItemCount
_redownloadableItemCount
T@"MPMediaLibraryView",C,N,V_libraryView
T@"NSNumber",C,N,V_redownloadableItemCount
disconnect
_clearPendingDisconnection
_postNotificationName:library:
_reloadLibraryForContentsChangeWithNotificationInfo:
currentDeviceInfo
_activeUserDidChangeNotification:
initWithDelegate:
setActiveUserChangeMonitor:
_deviceMediaLibraryWithUserIdentity:createIfRequired:
_mediaLibraries
initWithClientIdentity:userIdentity:
authorizationStatus
initWithClientIdentity:
musicLibraryForUserAccount:
initWithLibrary:
callStackSymbols
_postNotificationName:library:userInfo:
_scheduleLibraryChangeNotificationPostingBlock:
_setupNotifications
_setLibraryFilterPredicates
_tearDownNotifications
_mediaLibraryWithUniqueIdentifier:userDSID:
onDiskProviders
_initWithLibraryDataProvider:
specificAccountWithDSID:
_clearCachedEntitiesIncludingResultSets:
libraryChangeObservers
_clearCachedContentDataAndResultSets:
_performBlockOnLibraryHandlingTheSameAccount:
activeUserChangeMonitor
ingestNotificationName:
_reloadLibraryForRestrictionsChange
beginScanningForLibraries
_endDiscoveringMediaLibrariesIfAllowed
_sharedCloudServiceStatusMonitor
authorizationStatusForScopes:
_mediaLibraryAuthorizationStatusFromCloudServiceAuthorizationStatus:
requestAuthorizationForScopes:completionHandler:
connectWithAuthenticationData:completionBlock:progressHandler:
_disconnect
sdk_addItemWithOpaqueID:withCompletion:
currentEntityRevision
syncGenerationID
playlistGeneration
writable
isDeviceLibrary
initWithAuditToken:
setDefaultClientWithAuditToken:
setGlobalPrivacyContextWithAuditToken:
sharedContextForCurrentProcess
logPrivacyAccess
setClientIdentity:
hasMediaOfType:
hasGeniusMixes
hasSongs
hasUbiquitousBookmarkableItems
_checkHasContent:determined:mediaType:queryHasEntitiesBlock:
_checkHasContent:determined:queryHasEntitiesBlock:
hasUserPlaylists
hasAddedToLibraryAppleMusicContent
hasUserPlaylistsContainingAppleMusicContent
playlistExistsWithPersistentID:
itemPersistentIDForStoreID:
initWithUnsignedLongLong:
initWithProperties:itemsQuery:
localizedSectionHeaderForSectionIndex:
localizedSectionIndexTitles
playbackHistoryPlaylistPersistentID
photosMemoriesPlaylistPersistentID
addPlaylistWithName:activeGeniusPlaylist:
addPlaylistWithValuesForProperties:
dictionaryWithObjectsAndKeys:
setValue:forDatabaseProperty:
valueForDatabaseProperty:
URLForItemDataRequest:
deleteItemsWithIdentifiers:count:
removeItemsWithIdentifiers:count:
removePlaylistWithIdentifier:
storeDownloadForMediaItem:type:attributes:
failureError
addFinishHandler:forDownloads:
addDownloads:
requestPermissionToDownloadWithType:completionHandler:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItemWithIdentifier:
setValues:forProperties:forItemPersistentIDs:
geniusItemsForSeedItem:completion:
isGeniusEnabled
preferredAudioLanguages
preferredSubtitleLanguages
requiresAuthentication
connectWithCompletionHandler:
_initWithMediaLibrary:identifier:
weakObjectsPointerArray
addPointer:
performTransactionWithBlock:
performReadTransactionWithBlock:
isCurrentThreadInTransaction
syncValidity
entityCache
deleteDatabaseProperty:
entityFromURL:inLibrary:
entityWithLibraryURL:
_persistentIDForAssetURL:
host
scannerWithString:
scanLongLong:
_reloadLibraryForPathChange
_handlesSameAccountAs:
collectionExistsContainedWithinSyncIDs:groupingType:existentPID:
itemResultSetForQueryCriteria:
updateToLibraryCurrentRevision
initWithResultSet:queryCriteria:entityType:library:
loadQueryCriteria:hasItemsWithCompletionBlock:
_getCachedValueForQueryCritiera:valueCriteriaCache:entitiesForCriteriaCache:didLoadBlocksByQueryCriteria:valueLoadedFromEntitiesArrayBlock:loadValueFromDataProviderBlock:
loadQueryCriteria:hasCollectionsWithCompletionBlock:
loadQueryCriteria:countOfItemsWithCompletionBlock:
loadQueryCriteria:countOfCollectionsWithCompletionBlock:
enumeratePersistentIDsUsingBlock:
collectionResultSetForQueryCriteria:
setCloudFilteringType:
additionalLibraryFilterPredicates
cloudFilteringType
setLibraryEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
pointerAtIndex:
removePointerAtIndex:
compact
_canShowCloudTracksDidChangeNotification:
_displayValuesDidChangeNotification:
_didReceiveMemoryWarning:
mediaLibraries
endScanningForLibraries
localizedCaseInsensitiveCompare:
sortUsingComparator:
removeObjectIdenticalTo:
_libraryDataProviders
_libraryForDataProvider:
setRemovalReason:
_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:
_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
addStoreItemIDs:referralObject:andAddTracksToCloudLibrary:withCompletion:
sdk_addPlaylistWithValuesForProperties:
sdk_createPlaylistWithPersistenID:properties:tracklist:completionHandler:
requestCapabilitiesWithCompletionHandler:
addPlaylistStoreItemsForLookupItems:withCompletion:
indexOfObject:
initWithMetadataDictionary:
addTracksToMyLibrary:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
recordPlayEventForAlbumPersistentID:
recordPlayEventForPlaylistPersistentID:
setDefaultMediaLibrary:
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
setGlobalPrivacyClientWithAuditToken:
isLibraryServerDisabled
setLibraryServerDisabled:
sharedMediaLibraries
mediaLibraryWithUniqueIdentifier:allowsLoadingFromDisk:
libraryDataProviders
addLibraryDataProvider:
removeLibraryDataProvider:removalReason:
reloadLibraryDataProvider:
postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:
reloadDynamicPropertiesForLibraryDataProvider:
reloadInvisiblePropertiesForLibraryDataProvider:
reloadDisplayValuesForLibraryDataProvider:
syncGenerationDidChangeForLibraryDataProvider:
uniqueIdentifierDidChangeForLibraryDataProvider:
libraryPathDidChangeForDataProvider:
activeUserChangeDidFinish
addLibraryFilterPredicate:
removeLibraryFilterPredicate:
removalReason
hasMedia
hasPlaylists
hasArtists
hasAlbums
hasPodcasts
hasGenres
hasComposers
hasAudiobooks
hasVideos
hasMusicVideos
hasAudibleAudioBooks
hasMovies
hasCompilations
hasITunesUContent
hasAudioITunesUContent
hasVideoITunesUContent
hasMovieRentals
hasTVShows
hasHomeVideos
hasVideoPodcasts
itemExistsInDatabaseWithPersistentID:
itemWithStoreID:
playbackHistoryPlaylist
photosMemoriesPlaylist
addPlaylistWithName:
setSyncPlaylistId:
syncPlaylistId
homeSharingDatabaseID
URLForHomeSharingRequest:
removeItems:
downloadAsset:completionHandler:
connectWithAuthenticationData:completionBlock:
connectionProgress
entityWithSpotlightIdentifier:
entityWithPersistentID:entityType:
isValidAssetURL:
pathForAssetURL:
_removeConnectionAssertion:
addStoreItem:andAddTracksToCloudLibrary:withCompletion:
getPlaylistWithUUID:creationMetadata:completionHandler:
addPlaylistStoreItemsWithMetadata:completion:
_MLCoreStorageLock
_libraryDataProvider
_entityCacheQueue
_fixedQueue
_notificationObservers
_itemsForCriteriaCache
_hasItemsForCriteriaCache
_countOfItemsForCriteriaCache
_itemResultSetsForCriteriaCache
_collectionsForCriteriaCache
_hasCollectionsForCriteriaCache
_countOfCollectionsForCriteriaCache
_collectionsResultSetsForCriteriaCache
_hasItemsDidLoadForCriteria
_hasCollectionsDidLoadForCriteria
_countOfCollectionsDidLoadForCriteria
_countOfItemsDidLoadForCriteria
_additionalLibraryFilterPredicates
_additionalLibraryFilterPredicatesAccessQueue
_connectionAssertions
_connectionAssertionsQueue
_disconnectAfterReleasingAssertions
_connectionProgress
_removalReason
_determinedHasMedia
_hasMedia
_determinedHasSongs
_hasSongs
_determinedHasGeniusMixes
_hasGeniusMixes
_determinedHasPlaylists
_hasPlaylists
_determinedHasComposers
_hasComposers
_determinedHasPodcasts
_hasPodcasts
_determinedHasUbiquitousBookmarkableItems
_hasUbiquitousBookmarkableContent
_determinedHasAudiobooks
_hasAudiobooks
_cloudFilteringType
_filteringDisabled
_hasVideos
_determinedHasVideos
_hasMusicVideos
_determinedHasMusicVideos
_hasAudibleAudioBooks
_determinedHasAudibleAudioBooks
_hasMovies
_determinedHasMovies
_hasCompilations
_determinedHasCompilations
_hasITunesU
_determinedHasITunesU
_hasVideoITunesU
_determinedHasVideoITunesU
_hasMovieRentals
_determinedHasMovieRentals
_hasTVShows
_determinedHasTVShows
_hasHomeVideos
_determinedHasHomeVideos
_hasVideoPodcasts
_determinedHasVideoPodcasts
_originalCellNetworkFlags
_originalWiFiNetworkFlags
__MLCoreStorageLock
__MLCoreStorage
_libraryChangeObservers
_activeUserChangeMonitor
__MLCoreStorageLockPointer
Tq,R,N,V_libraryChangeObservers
T{os_unfair_lock_s=I},R,N,V__MLCoreStorageLock
T@"_MPActiveUserChangeMonitor",&,N,V_activeUserChangeMonitor
T@,&,N,S_setMLCoreStorage:,V__MLCoreStorage
T^{os_unfair_lock_s=I},R,N,V__MLCoreStorageLockPointer
T@"ML3MusicLibrary",R,N
T@"ICUserIdentity",R,C,N,V_userIdentity
protectedContentSupportStorageURL
initWithEntity:anchor:deletionType:
entity
anchor
deletionType
_entity
_anchor
_deletionType
T@"MPMediaEntity",R,N,V_entity
T@"NSString",R,C,N,V_anchor
Tq,R,N,V_deletionType
createUncachedConcreteMediaItemWithPersistentID:library:
createUncachedMediaItemCollectionWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:itemBlock:collectionBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:usingBlock:
_syncValidity
enumerateEntityChangesAfterSyncAnchor:usingBlock:
preferredQueue
requiresNetwork
sharedNetworkQueue
sharedQueue
_kindForClass:
kindWithSongKind:
kindWithVariants:playlistEntryKind:options:
kindWithKinds:
kindWithRelationshipKinds:
T@"NSOperationQueue",R,N
sectionClass
setSectionClass:
itemClass
setItemClass:
setSectionSortDescriptors:
setItemSortDescriptors:
_sectionKind
_sectionSortDescriptors
_itemSortDescriptors
T@"MPModelKind",&,N,V_sectionKind
T@"MPPropertySet",C,N,V_sectionProperties
T@"NSArray",C,N,V_sectionSortDescriptors
T@"MPPropertySet",C,N,V_itemProperties
T@"NSArray",C,N,V_itemSortDescriptors
T#,&,N
initWithMediaTypes:
setPreferredContentSize:
setMediaPickerController:
requestRemoteViewController
setMediaTypes:
_sharedInit
setTypeIdentifiers:
setSelectionMode:
showsLibraryContent
showsCatalogContent
_addRemoteView
initWithRootViewController:
navigationItem
_pickerDidCancel
initWithTitle:style:target:action:
setLeftBarButtonItem:
setRightBarButtonItem:
synchronizeSettings
_checkLibraryAuthorization
modalPresentationStyle
supportedInterfaceOrientations
preferredInterfaceOrientationForPresentation
_pickerDidPickItems:
_pickerDidPickPlaybackArchive:
prompt
setPrompt:
_synchronizeSettings
allowsPickingMultipleItems
picksSingleCollectionEntity
setAllowsPickingMultipleItems:
showsCloudItems
setShowsCloudItems:
showsItemsWithProtectedAssets
setShowsItemsWithProtectedAssets:
setPicksSingleCollectionEntity:
watchCompatibilityVersion
setWatchCompatibilityVersion:
typeIdentifiers
selectionMode
setShowsCatalogContent:
setShowsLibraryContent:
supportsUnavailableContent
setSupportsUnavailableContent:
pickingForExternalPlayer
setPickingForExternalPlayer:
playbackArchiveConfiguration
setPlaybackArchiveConfiguration:
presentingViewController
mediaPickerDidCancel:
_forceDismissal
mediaPicker:didPickMediaItems:
mediaPicker:didPickPlaybackArchive:
remoteViewController
isViewLoaded
_hasAddedRemoteView
preheatMediaPicker
remoteMediaPickerDidCancel
remoteMediaPickerDidPickMediaItems:
remoteMediaPickerDidPickPlaybackArchive:
initWithSupportedTypeIdentifiers:selectionMode:
_canShowWhileLocked
_preferredModalPresentationStyle
_resetRemoteViewController
loader
setLoader:
_loader
T@"<MPMediaPickerRemoteViewLoader>",&,N,V_loader
T@"<MPMediaPickerControllerDelegate>",W,N,V_delegate
_beginDelayingPresentation:cancellationHandler:
extensionWithIdentifier:error:
endDelayingDisplayOfRemoteController
_endDelayingPresentation
instantiateWithExtension:completion:
delayDisplayOfRemoteController
serviceController
updateWithConfiguration:
serviceViewControllerProxy
mediaPickerController
T@"MPMediaPickerController",W,N
T@"UIViewController",R,N
_remoteViewContainerViewController
_musicRemoteViewController
_mediaPickerController
T@"MPMediaPickerController",W,N,V_mediaPickerController
supportedContentOptions
setSupportedContentOptions:
encodeInt32:forKey:
decodeInt32ForKey:
alwaysShowSearchBarInLibrary
setAlwaysShowSearchBarInLibrary:
automaticallyDrillsToLibrary
setAutomaticallyDrillsToLibrary:
_allowsPickingMultipleItems
_alwaysShowSearchBarInLibrary
_automaticallyDrillsToLibrary
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_pickingForExternalPlayer
_watchCompatibilityVersion
_mediaTypes
_prompt
_typeIdentifiers
_selectionMode
_playbackArchiveConfiguration
_supportedContentOptions
Tq,N,V_supportedContentOptions
TQ,N,V_mediaTypes
TB,N,V_allowsPickingMultipleItems
TB,N,V_alwaysShowSearchBarInLibrary
TB,N,V_automaticallyDrillsToLibrary
TB,N,V_showsCloudItems
TB,N,V_showsItemsWithProtectedAssets
T@"NSString",C,N,V_prompt
TB,N,V_picksSingleCollectionEntity
TI,N,V_watchCompatibilityVersion
T@"NSArray",C,N,V_typeIdentifiers
Tq,N,V_selectionMode
TB,N,V_pickingForExternalPlayer
T@"MPPlaybackArchiveConfiguration",&,N,V_playbackArchiveConfiguration
_updateCurrentItem
_reloadItemsKeepingCurrentItem:
_syncPlayerItems
_updateQueueDepthIfNeeded
MP_shortDescription
queueCoordinator:failedToLoadItem:
_syncItemsWithPreviousItems:
_sendItemsDidChange
_playerItems
_beginBackgroundTaskAssertion
beginPlaybackQueueTransactionAndPause:
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
_dequeueFailedItem:
commitPlaybackQueueTransaction
_endBackgroundTaskAssertion
setCurrentPlaybackQueueTransactionDisplayTime:
_preferredQueueDepthWithFirstItem:
queueCoordinator:itemToFollowItem:
removeObjectsInRange:
_hasAchievedEquilibrium
_loadAssetForItem:
_removeItemFromPlayer:
MP_associatedQueuePlayer
audioTimePitchAlgorithm
setAudioTimePitchAlgorithm:
setMP_associatedQueuePlayer:
defaultItemEQPresetType
queueCoordinator:willInsertItem:afterItem:
insertItem:afterItem:
removeItem:
queueCoordinatorDidChangeItems:
_currentItemHasFinishedDownloadingDidChangeNotification:
reloadItemsKeepingCurrentItem:
shouldExpectEmptyQueue
setShouldExpectEmptyQueue:
equilibriumAchievedHandler
setEquilibriumAchievedHandler:
_backgroundTaskIdentifier
_backgroundTasks
_holdingPlaybackTransactionForFirstItem
_isPendingPlayerItemSync
_isSyncingPlayerItems
_itemsPendingAssetLoading
_lastItemAnchor
_lastPreferredQueueDepth
_needsCurrentItemUpdateAfterPlayerItemSync
_preventLoadingItems
_reusableItems
_shouldExpectEmptyQueue
_shouldDeferItemLoading
_currentItem
_items
_equilibriumAchievedHandler
T@"MPQueuePlayer",R,N,V_player
T@"<MPAVQueueCoordinatingDataSource>",R,W,N,V_dataSource
T@?,C,N,V_equilibriumAchievedHandler
T@"MPAVItem",R,N,V_currentItem
TB,N,V_shouldExpectEmptyQueue
TB,N,V_shouldDeferItemLoading
T@"NSArray",R,N,V_items
T@"MPQueuePlayer",W,N
createTranslatorForMPModelClass:
deviceSpecificUserInfo
storeSubscriptionID
setPurchasedAdamID:
totalTrackCount
mapUnsupportedPropertyKey:
songTraits
initWithData:encoding:
storeAlbumID
albumName
totalDiscCount
albumTraits
playlistTraits
albumArtistName
storeArtistID
trackArtistName
genreName
radioStationStringIdentifier
radioStationName
setVendorID:
info
setScaleImageForAccessibility:
_isInAWindow
_updateControlImageViewAnimation
contentHorizontalAlignment
preferredFontForTextStyle:
_scaledValueForValue:
preferredContentSizeCategory
_updateBackgroundViewCornerRadius
titleForControlStatusType:
_expectedSizeForControlStatusType:controlTitle:hasControlImage:displayScale:preferredHeight:
_updateControlTitleLabelVisualProperties
_updateControlStatusProperties
traitCollectionDidChange:
setContentHorizontalAlignment:
isHighlighted
_beginTransientContentViewTransaction
_endTransientContentViewTransaction
setControlStatus:animated:
setDownloadProgress:
_newControlTitleLabel
controlTitleFontForControlStatusType:
smallSystemFontSize
bundleForClass:
imageNamed:inBundle:compatibleWithTraitCollection:
insertSubview:atIndex:
systemGrayColor
filledTintColor
setCornerRadius:
_imageNamed:compatibleWithTraitCollection:
setCenterImage:
systemFillColor
setOuterRingColor:
_currentContentSuperview
systemLightGrayColor
scaleImageForAccessibility
setAdjustsImageSizeForAccessibilityContentSizeCategory:
animationWithKeyPath:
presentationLayer
setFromValue:
setToValue:
setRemovedOnCompletion:
setRepeatCount:
setFillMode:
setBeginTimeMode:
setBeginTime:
addAnimation:forKey:
removeAnimationForKey:
hitTest:withEvent:
maximumSizeWithPreferredHeight:
_removeAllAnimations:
setAllowsAddImage:
setDisplayStyle:
setControlStatus:
setFilledTintColor:
setTitle:forControlStatusType:
allowsAddImage
controlStatus
displayStyle
_controlTitleLabel
_controlImageView
_controlStatusTypeToTitle
_controlStatusRevision
_downloadProgressView
_hadFirstTouchHighlight
_controlImageEdgeInsets
_transientContentView
_transientContentViewTransactionCount
_traitCollectionDidChangeWasCalled
_allowsAddImage
_scaleImageForAccessibility
_displayStyle
_filledTintColor
_controlStatus
TB,N,V_allowsAddImage
T{MPAddKeepLocalControlStatus=qd},N,V_controlStatus
Tq,N,V_displayStyle
TB,N,V_scaleImageForAccessibility
T@"UIColor",&,N,V_filledTintColor
initWithIdentity:
sharedBagProvider
setScheme:
setHost:
countryCode
songAdamID
language
signature
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:
initWithURLRequest:requestContext:
defaultSession
urlResponse
parsedBody
statusCode
enqueueDataRequest:withCompletionHandler:
getBagForRequestContext:withCompletionHandler:
setInformalMediaClipID:
setPreviewArtworkCatalogBlock:
setInformalStaticAssetID:
setUrl:
flavor
setFlavorType:
setStaticAssets:
mediaClipWithStoreItemMetadata:storeItemMovieClip:
_requestedClipProperties
_transientStateDidChangeNotification:
_updateActiveDownloadsAllowingDownloadRemoval:
_updateCurrentStatus
_handleDownloadStateChanged:
downloadProgress
transientKeepLocalStateForModelObject:
nonPurgeableItemCount
downloadEnabledItemCount
hasNonPurgeableAsset
isCollectionType
managedStatus
pendingItemIdentifiers
downloadReason
downloadPausedReason
unionSet:
_calculateCurrentStatus
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
downloadManager:didCancelAssets:
downloadManager:didChangeDownloadPausedReasonForAssets:
setConfiguration:
currentStatus
statusBlock
setStatusBlock:
_activeDownloads
_pausedDownloads
_downloadPausedReason
_statusBlock
_currentStatus
T@"MPLibraryKeepLocalStatusObserverConfiguration",&,N,V_configuration
T{MPLibraryActiveKeepLocalStatus=qd},R,N,V_currentStatus
TQ,R,N,V_downloadPausedReason
T@?,C,N,V_statusBlock
_pendingItemIdentifiers
_downloadEnabledItemCount
_nonPurgeableItemCount
T@"NSArray",C,N,V_pendingItemIdentifiers
Tq,N,V_downloadEnabledItemCount
Tq,N,V_nonPurgeableItemCount
Tq,N,V_redownloadableItemCount
setCollectionType:
setManagedStatus:
setHasNonPurgeableAsset:
setStoreRedownloadable:
_collectionType
_hasNonPurgeableAsset
_storeRedownloadable
_managedStatus
collectionType
TB,N,GisCollectionType,V_collectionType
Tq,N,V_managedStatus
TB,N,V_hasNonPurgeableAsset
TB,N,GisStoreRedownloadable,V_storeRedownloadable
initWithItems:
initWithItemsQuery:
collectionWithItems:
sortTitlePropertyForGroupingType:
representativePersistentIDPropertyForGroupingType:
_containedMediaTypes
_initializedContainedMediaTypes
_itemsCount
_itemsQuery
_representativeItem
T@"MPMediaItem",R,N
_handleNotification:
handler
_handlerCallCount
_object
_handler
T@,R,W,N,V_object
T@?,R,C,N,V_handler
initWithMPStoreDownload:
libraryItemIdentifier
storeItemIdentifier
percentComplete
_downloadReasonFromStoreDownload:
deviceLibraryID
MPMediaDownloadsFromMPStoreDownloads:
MPMediaDownloadsFromATAssets:
MPMediaDownloadPauseReasonForATAsset:
setDownloadReason:
setDownloadPausedReason:
libraryID
setLibraryID:
storeSagaID
setStoreSagaID:
_deviceLibraryID
_storeItemID
_downloadReason
_downloadProgress
_libraryID
_storeSagaID
Tq,N,V_libraryID
Tq,N,V_storeSagaID
Tq,N,V_downloadReason
Td,N,V_downloadProgress
TQ,N,V_downloadPausedReason
Tq,R,N,V_deviceLibraryID
Tq,R,N,V_storeItemID
setHasBiography:
setHasSocialPosts:
_requestedArtistProperties
heroArtworkCatalogBlock
__startTime_KEY
__endTime_KEY
__heroArtworkCatalogBlock_KEY
heroArtworkCatalog
errorResolver:didResolveError:withResolution:
errorResolver
resolutionHandler
_strongSelf
_errorResolver
_resolutionHandler
T@"MPAVErrorResolver",R,N,V_errorResolver
T@?,C,N,V_resolutionHandler
initWithScrubbingControl:
setDetailedScrubbingEnabled:
_setupControlsForStyle
setDeliversTouchesForGesturesToSuperview:
setSemanticContentAttribute:
initWithFrame:style:maxTrackWidth:
timeLabelFontForStyle:
timeLabelTextColorForStyle:
labelClass
setLineBreakMode:
_stringForCurrentTime:
_stringForInverseCurrentTime:
_updateTrackInset
setBounds:
detailedScrubbingEnabled
durationAllowsForDetailedScrubbing
currentThumbImage
setValue:duration:
_setValueWhileTracking:duration:
animationKeys
layoutIfNeeded
_updateForAvailableDuraton
_updateTimeDisplayForTime:
_commitValue
detailSlider:didChangeScrubSpeed:
thumbHitRect
detailSliderTrackingDidBegin:
scaleForVerticalPosition:
convertPoint:toView:
isContinuous
statusBarOrientation
setAutoreverses:
_autoscrubTick:
_resetScrubInfo
detailSliderTrackingDidEnd:
cancelTracking
detailSliderTrackingDidCancel:
currentScrubSpeed
setAvailableDuration:
_updateTimeDisplayForTime:force:
systemFontOfSize:
fontDescriptor
fontDescriptorByAddingAttributes:
fill
alphaComponent
allowsScrubbing
_modernThumbImageWithColor:height:includeShadow:
_colorSliceImageWithColor:height:
_legacy_sizeWithFont:
stringFromSeconds:
_stringForTime:elapsed:
detailSlider:didChangeValue:
detailScrubControllerDidBeginScrubbing:
detailScrubControllerDidEndScrubbing:
detailScrubController:didChangeValue:
detailScrubController:didChangeScrubSpeed:
viewForFirstBaselineLayout
viewForLastBaselineLayout
_thumbHitEdgeInsets
allowsDetailScrubbing
detailScrubbingAvailableForCurrentDuration
localizedScrubSpeedText
setAllowsScrubbing:
setAllowsDetailScrubbing:
setMinTimeLabelWidth:
setTimeLabelStyle:
detailScrubbingVerticalRange
setDetailScrubbingVerticalRange:
availableDuration
timeLabelStyle
minTimeLabelWidth
_currentTimeInverseLabel
_currentTimeLabel
_scrubController
_allowsScrubbing
_autoscrubActive
_autoscrubTimer
_canCommit
_currentTime
_downloadingTrackOverlay
_glowDetailScrubImageView
_isTracking
_maxTrackWidth
_previousLocationInView
_trackInset
_formatter
_detailScrubbingVerticalRange
_duration
_availableDuration
_timeLabelStyle
_minTimeLabelWidth
T@"<MPDetailSliderDelegate>",W,N,V_delegate
TB,N,V_allowsScrubbing
Td,N,V_detailScrubbingVerticalRange
Td,N,V_duration
Td,N,V_availableDuration
Tq,N,V_timeLabelStyle
Td,N,V_minTimeLabelWidth
remoteObjectProxy
setWantsReverseProcessAssertion:
initWithController:
modifications
fault
performQueueModifications:completion:
onApplicationServerAsync:errorHandler:
prerollWithCompletion:
beginPlaybackAtHostTime:
setRelativeVolume:
onApplicationServer:
setDisableAutomaticCanBeNowPlaying:
getNowPlayingsForContentItemIDs:reply:
initWithServiceName:
getServerEndpointWithReply:
interfaceWithProtocol:
synchronousRemoteObjectProxyWithErrorHandler:
initWithListenerEndpoint:
remoteObjectInterface
setClasses:forSelector:argumentIndex:ofReply:
proxyWithObject:protocol:
performQueueTransaction:completionHandler:
_mediaItemsForContentItemIDs:
serviceConnection
_shuffleMode
_serviceConnection
T@"NSXPCConnection",R,N,V_serviceConnection
T@"MPMusicPlayerApplicationController",R,W,N,V_controller
_insertQueueDescriptor:afterItemWithIdentifier:
_removeItemWithIdentifier:
initWithInsertedDescriptors:removedItemIdentifiers:
insertQueueDescriptor:afterItem:
insertedDescriptors
setInsertedDescriptors:
removedItems
setRemovedItems:
_insertedDescriptors
_removedItems
T@"NSMutableDictionary",&,N,V_insertedDescriptors
T@"NSMutableArray",&,N,V_removedItems
T@"MPMusicPlayerControllerApplicationQueueModifications",R,N
_setupMediaRemoteEndpoint
_tearDownMediaRemoteEndpoint
_scheduleUpdateSupportedAPIs
reloadData
_pushContentItemsUpdate
_onQueueContentItemWasSentToMediaRemote:
_areContentLimitsEnforced
setContentLimitsEnforced:
_musicListsLimited
setEnforcedContentItemsCount:
setEnforcedContentTreeDepth:
setEndpointAvailable:
_contentItemChangedNotification:
_limitedUIChanged:
_browsableContentEndpointChanged:
waitUntilAllOperationsAreFinished
_mediaRemoteContentItem
serviced
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
indexPath
setServiced:
context
playableContentManager:didUpdateContext:
currentSession
limitableUserInterfaces
limitUserInterfaces
beginLoadingChildItemsAtIndexPath:completionHandler:
contentItemAtIndexPath:
childItemsDisplayPlaybackProgressAtIndexPath:
_updateSupportedAPIs
sharedContentManager
_deviceIsCarplayCapable
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
beginUpdates
endUpdates
setNowPlayingIdentifiers:
_enqueueArtworkUpdate:withCompletion:
_enqueueArtworkUpdate:size:withCompletion:
_handlePlaybackInitializationCompletedWithContext:error:
_contentItemWasSentToMediaRemote:
_markContentItemsAsSentToMediaRemote:
setContext:
nowPlayingIdentifiers
_mutatedContentItems
_contentItemIdentifiersSentToMediaRemote
_artworkUpdateQueue
_coalescingUpdates
_scheduledSupportedAPIsChange
_currentSessionStatus
_context
_nowPlayingIdentifiers
T@"MPPlayableContentManagerContext",&,N,V_context
T@"<MPPlayableContentDataSource>",W,N,V_dataSource
T@"<MPPlayableContentDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_nowPlayingIdentifiers
initWithIndexPath:
_serviced
_indexPath
T@"NSIndexPath",R,N,V_indexPath
TB,N,V_serviced
indexAtPosition:
initWithTimeout:interruptionHandler:
initWithIndexes:length:
numberOfChildItemsAtIndexPath:
contentItemForIdentifier:completionHandler:
lock
unlock
setLyricsContent:
_TTML
_lyricsContent
_lyricsID
TB,N,GisTTML,V_TTML
T@"NSString",&,N,V_lyricsContent
T@"NSString",&,N,V_lyricsID
_lyricsURLForURLBag:
initWithURL:resolvingAgainstBaseURL:
initWithName:value:
preferredLanguages
_enqueueOperationWithURL:storeURLBag:allowingAuthentication:
initWithUserInteractionLevel:
setAuthenticationProvider:
parsedBodyDictionary
ic_intValueForKey:
setCancellationHandler:
_songAdamID
Tq,N,V_songAdamID
setKey:
_key
T@"NSString",C,N,V_key
TQ,N,V_type
wirelessRouteIsPicked
T@,W,N,V_delegate
_cachedNumberOfItemsInSections
_cachedNumberOfSections
_hasValidCachedNumberOfSections
_itemsCache
_itemIdentifierSetMap
_sectionsCache
_sectionIdentifierSetMap
_cachedObjectAtIndexPath:
_updateCacheWithObject:atIndexPath:
_mapLock
T@"<MPLazySectionedCollectionDataSource>",&,N,V_dataSource
failedItemIdentifiers
response
playbackAuthorizationTokenHalfLifeExpiration
_isFinalResponse
_failedItemIdentifiers
_response
_playbackAuthorizationTokenHalfLifeExpiration
TB,R,N,V_isFinalResponse
Td,R,N,V_playbackAuthorizationTokenHalfLifeExpiration
T@"NSDictionary",R,C,N,V_response
T@"NSArray",R,C,N,V_failedItemIdentifiers
__flavorType_KEY
__mediaType_KEY
__url_KEY
T@"NSURL",C,D,N
_registerCarPlayObserver
_setNeedsDisplayedRoutesUpdate
_initWithStyle:routingController:
_createReloadUpdate
_enqueueUpdate:
_setNeedsRouteDiscoveryModeUpdate
removeAllIndividualVolumeSliders
isInCarPlay
hasCarKitRoute
_updateDisplayedRoutes
setContentOffset:
setSeparatorInset:
setTableFooterView:
setMasksToBounds:
registerTableViewCells
_setTableCellsContentColor:
setIndicatorStyle:
registerClass:forHeaderFooterViewReuseIdentifier:
registerClass:forCellReuseIdentifier:
_beginRouteDiscovery
viewDidDisappear:
_endRouteDiscovery
_collapseAllGroups
resetDisplayedRoutes
viewDidMoveToWindow:shouldAppearOrDisappear:
viewWillLayoutSubviews
shouldOverrideContentSizeCategory:
traitCollectionWithPreferredContentSizeCategory:
_setLocalOverrideTraitCollection:
_tableViewHeightAccordingToDataSource
dequeueReusableHeaderFooterViewWithIdentifier:
dequeueReusableCellWithIdentifier:forIndexPath:
_configureCell:forIndexPath:
themeDelegate
routingViewController:willDisplayCell:
deselectRowAtIndexPath:animated:
mainRoute
_wouldShareAudioForPickedRoute:operation:pickedRoutes:
isInVehicle
_diplayShareAudioDisabledAlertForReason:
_operationRequiresOptimisticState:routes:
endpointGroupUID
setOptimisticUpdate:
routingViewController:didPickRoute:
_createUpdateWithCompletion:
actionIdentifier
routingViewController:didSelectRoutingViewItem:
_normalCellHeight
isTVRoute
showViewController:sender:
indexPathForCell:
groupUIDForRoute:
enqueueRefreshUpdate
_createRefreshUpdate
setShouldReload:
isShareableRoute
_tableViewHeaderViewHeight
_tableViewFooterViewHeight
isSmartAudio
setShouldHideSectionBottomSeparator:
backgroundColor
setSessionObserver:
_setRouteDiscoveryMode:
_setupUpdateTimerIfNecessary
isW1Route
isH1Route
containsDeviceWithSubtype:
compare:options:
_shouldDisplayRouteAsPicked:
setPickedRoutes:
setPendingPickedRoutes:
_displayableRoutesInRoutes:
setDisplayableAvailableRoutes:
_displayAsPickedRoutesInRoutes:
setDisplayAsPickedRoutes:
setCanGroup:
setHasPendingPickedRoutes:
displayAsPickedRoutes
_createVolumeSlider
addIndividualVolumeSlider:
removeIndividualVolumeSlider:
_volumeCapableRoutesInRoutes:
setVolumeCapableRoutes:
_applyUpdate:
endpoint
designatedGroupLeader
localDeviceUID
intersectSet:
displayableAvailableRoutes
_createRoutingViewItemsForRoutes:
routeGrouping
_createSectionedCollection:withPickedRoutes:
volumeCapableRoutes
updateExpandedGroups
shouldReload
deletedSections
deleteSections:withRowAnimation:
insertedSections
insertSections:withRowAnimation:
deletedItemIndexPaths
deleteRowsAtIndexPaths:withRowAnimation:
insertedItemIndexPaths
insertRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
enumerateItemMovesUsingBlock:
updatedItemIndexPaths
reloadRowsAtIndexPaths:withRowAnimation:
performBatchUpdates:completion:
raise
routingViewControllerDidUpdateContents:
outputDeviceUIDs
groupUID
shouldGroupRoutingViewItems
isGroupLeader
itemWithRoute:
itemWithLeader:members:
isHeadphonesRoute
setRouteGrouping:
setHeadphones:
setLocalDevices:
setSpeakersAndTVs:
localDevices
headphones
speakersAndTVs
isSplitRoute
itemWithActionTitle:subtitle:enabled:identifier:image:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:selectionFollowsFocusForRowAtIndexPath:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willPerformPreviewActionForMenuWithConfiguration:animator:
tableView:willDisplayContextMenuWithConfiguration:animator:
tableView:willEndContextMenuInteractionWithConfiguration:animator:
routingCell:mirroringSwitchValueDidChange:
initWithStyle:routingController:
setAVItemType:
allowMirroring
setAllowMirroring:
setDiscoveryModeOverride:
setGroupSliderCoordinator:
resetScrollPosition
_setContinuousCornerRadius:
setEndpointRoute:
_expandedCellHeight
_tableCellsBackgroundColor
_tableCellsContentColor
_setShouldAutomaticallyUpdateRoutesList:
_setShouldPickRouteOnSelection:
_setTableCellsBackgroundColor:
_shouldAutomaticallyUpdateRoutesList
_shouldPickRouteOnSelection
_endUpdates
avItemType
discoveryModeOverride
setThemeDelegate:
_continuousCornerRadius
outputDeviceVolumeSliders
setOutputDeviceVolumeSliders:
groupSliderCoordinator
_pendingUpdate
_optimisticUpdate
_isAnimatingUpdate
_displayedEndpointRoute
_routingViewItems
_cachedDisplayableAvailableRoutes
_cachedPendingPickedRoutes
_cachedDisplayAsPickedRoutes
_cachedVolumeCapableRoutes
_cachedRouteGrouping
_expandedGroupUIDs
_updateTimer
_routeDiscoveryMode
_airPlayPasswordAlertDidAppearToken
_airPlayPasswordAlertDidCancelToken
_airPlayPasswordAlertDidAppearTokenIsValid
_needsDisplayedRoutesUpdate
_suspendedDiscoveryModeDueToApplicationState
_onScreen
_hasUserSelections
_carPlayStatus
_updatesSincePresentation
_discoveryModeBeforeEnteringBackground
_avItemType
_discoveryModeOverride
_themeDelegate
_endpointRoute
_outputDeviceVolumeSliders
_groupSliderCoordinator
inCarPlay
TB,R,N,GisInCarPlay
T@"<MPAVRoutingViewControllerThemeDelegate>",W,N,V_themeDelegate
T@"MPAVEndpointRoute",&,N,V_endpointRoute
T@"UITableView",R,N
continuousCornerRadius
Td,N,G_continuousCornerRadius,S_setContinuousCornerRadius:,V_continuousCornerRadius
T@"UIColor",&,N,S_setTableCellsBackgroundColor:
T@"UIColor",&,N,S_setTableCellsContentColor:
TB,N,S_setShouldAutomaticallyUpdateRoutesList:
TB,N,S_setShouldPickRouteOnSelection:
T@"NSMapTable",&,N,V_outputDeviceVolumeSliders
T@"MPVolumeGroupSliderCoordinator",&,N,V_groupSliderCoordinator
TQ,R,N,V_style
T@"<MPAVRoutingViewControllerDelegate>",W,N,V_delegate
Tq,N,SsetAVItemType:,V_avItemType
T@"NSNumber",C,N,V_discoveryModeOverride
_routeGrouping
_localDevices
_headphones
_speakersAndTVs
T@"NSDictionary",C,N,V_routeGrouping
T@"NSArray",C,N,V_localDevices
T@"NSArray",C,N,V_headphones
T@"NSArray",C,N,V_speakersAndTVs
canGroup
_canGroup
_shouldReload
_pickedRoutes
_pendingPickedRoutes
_displayableAvailableRoutes
_displayAsPickedRoutes
_volumeCapableRoutes
T@"NSArray",C,N,V_pickedRoutes
T@"NSArray",C,N,V_pendingPickedRoutes
T@"NSArray",C,N,V_displayableAvailableRoutes
T@"NSArray",C,N,V_displayAsPickedRoutes
T@"NSArray",C,N,V_volumeCapableRoutes
TB,N,V_canGroup
TB,N,V_hasPendingPickedRoutes
TB,N,V_shouldReload
isSplitterCapable
setExplicitSong:
setStoreAsset:
setArtistUploadedContent:
setHasVideo:
setHasCloudSyncSource:
setShouldShowComposer:
setGaplessInfo:
setLocalFileAsset:
setUserRating:
setCloudStatus:
setVolumeAdjustment:
setGrouping:
setClassicalWork:
setClassicalMovement:
setClassicalMovementCount:
setClassicalMovementNumber:
setComposer:
setHomeSharingAsset:
setHasStoreLyrics:
setHasTimeSyncedLyrics:
setPlaybackPosition:
_playbackPositionBuilder
_requestedSongProperties
_radioAvailabilityControllerRadioAvailableDidChangeNotification:
_recentStationsControllerDidChangeStationsNotification:
_playActivityReportingControllerDidFlushEventsNotification:
getRadioAvailabilityWithCompletionHandler:
refreshWithCompletionHandler:
stationGroups
initWithStation:
valueForEntitlement:
_removeConnection:
_addConnection:
initWithMachServiceName:
_handleRecentStationsControllerDidChange
listener:shouldAcceptNewConnection:
availabilityController
recentStationsController
_connections
_hasRefreshedStations
_listener
_availabilityController
_recentStationsController
T@"RadioAvailabilityController",R,N,V_availabilityController
T@"RadioRecentStationsController",R,N,V_recentStationsController
mediaItemPropertyValues
tvEpisode
playlistEntry
releaseDateComponents
dateFromComponents:
isExplicitSong
filePath
pathExtension
number
initWithArtworkCatalog:allowsNetworking:
fallbackArtworkCatalogBlock
_propertyValues
_fallbackArtworkCatalogBlock
T@"MPModelObject",R,N,V_modelObject
T@?,C,N,V_fallbackArtworkCatalogBlock
initWithMaximumCapacity:
initWithKeyOptions:valueOptions:capacity:
metadataForItemIdentifier:
_itemIdentifierToCompositeStoreItemMetadataLRUDictionary
_itemIdentifierToCompositeStoreItemMetadataMapTable
initWithIdentifier:userInfo:
initWithMediaRemoteLyricsItemToken:
mediaRemoteLyricsItemToken
_mediaRemoteLyricsItemToken
T^v,R,N,V_mediaRemoteLyricsItemToken
initWithLyrics:userProvided:token:
initWithMediaRemoteLyricsItem:
userProvided
mediaRemoteLyricsItem
_mediaRemoteLyricsItem
T^v,R,N,V_mediaRemoteLyricsItem
T@"MPNowPlayingInfoLyricsItemToken",R,N
initWithMediaRemoteLyricsEvent:
startDate
endDate
mediaRemoteLyricsEvent
_mediaRemoteLyricsEvent
T^v,R,N,V_mediaRemoteLyricsEvent
initWithDictionary:
otherConnectedDevicesFromRouteDescription:
uniqueID
productName
modelIdentifier
_playing
_uniqueID
_productName
_deviceName
_modelIdentifier
T@"NSString",R,N,V_uniqueID
T@"NSString",R,N,V_productName
T@"NSString",R,N,V_deviceName
T@"NSString",R,N,V_modelIdentifier
TB,R,N,GisPlaying,V_playing
cacheKeyForCatalog:kind:size:
_subclassImplementsSelector:
cacheKeyForCatalog:size:
defaultSessionConfiguration
setHTTPShouldUsePipelining:
_applyImageURLCachePolicy:cacheDiskPath:toConfiguration:
sessionWithConfiguration:
_applyVideoCacheURL:toConfiguration:
URLCache
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
sessionWithConfiguration:delegate:delegateQueue:
_didReceiveMemoryWarningNotification:
_didReceiveWillEnterForegroundNotification:
imageURLSession
finishTasksAndInvalidate
usesFallbackCache
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
videoArtworkCacheURL
videoURLSession
setVideoURLCache:
setVideoURLSession:
requestForCatalog:kind:size:
_bestAvailableSizeForCatalog:kind:
catalogImageTaskMap
_performSyncBlockOnQueue:block:
_requestForCatalog:kind:size:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
dataWithContentsOfURL:
fileExistsAtPath:
writeToURL:atomically:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
removeItemAtURL:error:
fallbackImageArtworkRepresentationCache
_cacheKeyForCatalog:kind:size:
_existingRepresentativeObjectForArtworkCatalog:kind:handler:
_bestVideoArtworkRepresentationForCatalog:
_existingRepresentationFromURLCacheForArtworkCatalog:immediateImageDecompressionAllowed:
setAttribution:
pendingRequestURLToCompletionHandlers
setRepresentationSize:forRequest:
_artworkRepresentationWithImageFromData:forURLResponse:catalog:size:immediateImageDecompressionAllowed:
callbackQueue
_performAsyncBarrierBlockOnQueue:block:
msv_dataTaskWithRequest:completionHandler:
bestAvailableSizeForCatalog:
videoAccessQueue
countOfBytesExpectedToReceive
videoURLCache
diskCapacity
currentDiskUsage
memoryCapacity
currentMemoryUsage
videoTaskToCacheStoragePolicy
videoTaskToData
_createDispatchData
videoTaskToResourceLoadingRequest
dataRequest
requestsAllDataToEndOfResource
requestedOffset
requestedLength
currentOffset
dataWithBytes:length:
respondWithData:
storagePolicy
initWithResponse:data:userInfo:storagePolicy:
finishLoadingWithError:
finishLoading
dataTaskWithRequest:
resourceLoaderStoragePolicyMap
setRequestCachePolicy:
initWithMemoryCapacity:diskCapacity:diskPath:
setMemoryCapacity:
setDiskCapacity:
setURLCache:
initWithMemoryCapacity:diskCapacity:directoryURL:
set_maxCacheableEntrySizeRatio:
wantsBackgroundImageDecompression
cachedResponseForRequest:
shouldLookForLargerImageRepresentationsWhenBestRepresentationIsUnavailable
sortedSupportedSizesForCatalog:
supportedSizesForCatalog:
valueWithCGSize:
_isRepresentationSize:validForCatalog:
requestForCatalog:size:
userAgent
setValue:forHTTPHeaderField:
resourceLoader
setDelegate:queue:
_CFURLCache
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
updateURLSessionWithCachePolicy:cachePath:
setVideoArtworkCacheURL:
URLSessionConfiguration
setUsesFallbackCache:
imageAccessQueue
setImageAccessQueue:
setVideoAccessQueue:
setCallbackQueue:
setFallbackImageArtworkRepresentationCache:
setPendingRequestURLToCompletionHandlers:
setCatalogImageTaskMap:
setResourceLoaderStoragePolicyMap:
setVideoTaskToCacheStoragePolicy:
setVideoTaskToResourceLoadingRequest:
setVideoTaskToData:
setImageURLSession:
URLSessionDataDelegateProxy
setURLSessionDataDelegateProxy:
_usesFallbackCache
_URLSessionConfiguration
_videoArtworkCacheURL
_imageAccessQueue
_videoAccessQueue
_fallbackImageArtworkRepresentationCache
_pendingRequestURLToCompletionHandlers
_catalogImageTaskMap
_resourceLoaderStoragePolicyMap
_videoTaskToCacheStoragePolicy
_videoTaskToResourceLoadingRequest
_videoTaskToData
_imageURLSession
_videoURLSession
_videoURLCache
_URLSessionDataDelegateProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_imageAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_videoAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"NSCache",&,N,V_fallbackImageArtworkRepresentationCache
T@"NSMutableDictionary",&,N,V_pendingRequestURLToCompletionHandlers
T@"NSMapTable",&,N,V_catalogImageTaskMap
T@"NSMapTable",&,N,V_resourceLoaderStoragePolicyMap
T@"NSMutableDictionary",&,N,V_videoTaskToCacheStoragePolicy
T@"NSMutableDictionary",&,N,V_videoTaskToResourceLoadingRequest
T@"NSMutableDictionary",&,N,V_videoTaskToData
T@"NSURLSession",&,N,V_imageURLSession
T@"NSURLSession",&,N,V_videoURLSession
T@"NSURLCache",W,N,V_videoURLCache
T@"<NSURLSessionDataDelegate>",W,N,V_URLSessionDataDelegateProxy
T@"NSURLSessionConfiguration",R,N,V_URLSessionConfiguration
TB,N,V_usesFallbackCache
T@"NSURL",&,N,V_videoArtworkCacheURL
storeCachedResponse:forRequest:
_requestSizeMap
first
_setStartTime:forIdentifiers:
_setEndTime:forIdentifiers:
isPrivate
setPrivate:
startTimes
endTimes
_private
_requestingBundleIdentifier
_requestingBundleVersion
_startTimes
_endTimes
private
TB,N,GisPrivate,V_private
T@"NSString",R,N,V_requestingBundleIdentifier
T@"NSString",R,N,V_requestingBundleVersion
T@"NSDictionary",R,N,V_startTimes
T@"NSDictionary",R,N,V_endTimes
setStartTime:forItem:
setEndTime:forItem:
itemCollection
_itemCollection
T@"MPMediaQuery",R,C,N
T@"MPMediaItem",&,N,V_startItem
setStartTime:forItemWithStoreID:
setEndTime:forItemWithStoreID:
setSourceStorefront:forItemWithStoreID:
storeIDs
assetStoreFronts
setAssetStoreFronts:
startItemID
setStartItemID:
_storeIDs
_storeFronts
_startItemID
T@"NSArray",C,N,V_storeIDs
T@"NSString",C,N,V_startItemID
isLibraryContent
itemID
catalogID
_libraryContent
_dictionary
_itemID
_catalogID
T@"MPIdentifierSet",R,C,N,V_identifiers
T@"NSString",R,C,N,V_itemKind
libraryContent
TB,R,N,GisLibraryContent,V_libraryContent
T@"NSString",R,C,N,V_itemID
T@"NSString",R,C,N,V_catalogID
T@"NSDictionary",R,C,N,V_dictionary
initWithPlayParametersQueue:
setStartTime:forItemWithPlayParameters:
setEndTime:forItemWithPlayParameters:
setPlayParametersQueue:
startItemPlayParameters
setStartItemPlayParameters:
_playParametersQueue
_startItemPlayParameters
T@"NSArray",C,N,V_playParametersQueue
T@"MPMusicPlayerPlayParameters",&,N,V_startItemPlayParameters
_radioStation
T@"MPRadioStation",R,N,V_radioStation
initWithPlaybackArchive:
playbackArchive
_playbackArchive
T@"MPPlaybackArchive",R,C,N,V_playbackArchive
bundleRecordForCurrentProcess
shortVersionString
bundleVersion
pairWithFirst:second:
initWithKey:ascending:
setKeyPath:
sortDescriptorWithKeyPath:ascending:
T@"NSArray",C,N,V_keyPath
setRelatedProperties:
relatedProperties
sortDescriptorWithRelatedProperties:ascending:
_relatedProperties
T@"NSDictionary",C,N,V_relatedProperties
_adjustedIndexForSectionIndex:
modelKind
itemEntityQueryResults
sectionEntityQueryResult
_itemTranslationContext
_sectionTranslationContext
_allowedSectionPersistentIDs
_allowedSectionPersistentIDToSectionQueryResultsIndexMap
_itemEntityQueryResults
_sectionEntityQueryResult
T{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>=^v^{__shared_weak_count}},R,N,V_itemEntityQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_sectionEntityQueryResult
sendDidResolveError:withResolution:
T@"<MPAVErrorResolverDelegate>",W,N,V_delegate
previewArtworkCatalogBlock
classesForSecureCoding
__previewArtworkCatalogBlock_KEY
__staticAssets_KEY
previewArtworkCatalog
staticAssets
T@"NSArray",C,D,N
_enabled
_leader
_actionIdentifier
T@"NSArray",R,N,V_routes
T@"MPAVRoute",R,N,V_leader
T@"NSString",R,C,N,V_localizedTitle
T@"NSString",R,C,N,V_localizedSubtitle
TB,R,N,V_enabled
T@"UIImage",R,N,V_image
T@"NSString",R,C,N,V_actionIdentifier
initWithCFType:
refValue
initWithMRAVEndpoint:
T^v,R,N
initWithMRAVOutputContext:
initWithMRAVEndpointObserver:
_initWithPersistentID:library:propertiesCache:
itemWithIdentifier:loadEntityBlock:
concreteMediaItemWithPersistentID:
dataProviderEntityClass
removeEntityWithIdentifier:dataProviderEntityClass:
valueForProperty:isCached:
initWithArtworkCatalog:
_nonBatchableOrCachedValueForProperty:needsFetch:
cacheValue:forProperty:persistValueInBackgroundBlock:
loadProperties:ofItemWithIdentifier:completionBlock:
cachePropertyValues:forProperties:persistValueInBackgroundBlock:
setValue:forProperty:ofItemWithIdentifier:completionBlock:
cachedPropertyValues
T@"MPConcreteMediaEntityPropertiesCache",R,&,N
initWithPersistentID:library:
classForCoder
_propertiesCache
_utilitySerialQueue
_catalog
_initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:propertiesCache:
collectionWithIdentifier:grouping:loadEntityBlock:
hasName
loadProperties:ofCollectionWithIdentifier:groupingType:completionBlock:
setValue:forProperty:ofCollectionWithIdentifier:groupingType:completionBlock:
_grouping
setValue:forProperty:ofPlaylistWithIdentifier:completionBlock:
setItemsWithIdentifiers:forPlaylistWithIdentifier:completionBlock:
_updateLibraryForPlaylistEdit:
addItemWithIdentifier:toPlaylistWithIdentifier:completionBlock:
addItemsWithIdentifiers:toPlaylistWithIdentifier:completionBlock:
_allowsEditing
cloudItemIDListForPlaylist:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
appendItems:completion:
sdk_addItemWithOpaqueIdentifier:toPlaylistWithIdentifier:completionBlock:
removeItemsAtIndexes:inPlaylistWithIdentifier:completionBlock:
removeAllItemsInPlaylistWithIdentifier:
removeFirstItemFromPlaylistWithIdentifier:
moveItemFromIndex:toIndex:inPlaylistWithIdentifier:completionBlock:
populateWithSeedItem:queue:completionBlock:
seedPlaylistWithIdentifier:withItemWithIdentifier:completionBlock:
releaseGeniusClusterPlaylist:
createGeniusClusterPlaylistWithSeedItemIdentifiers:count:error:
generateItemIdentifiersForGeniusClusterPlaylist:count:error:
replaceItems:completion:
replaceItemsWithPersistentIDs:completion:
appendItem:completion:
removeItems:atFilteredIndexes:completionBlock:
moveItemFromIndex:toIndex:completionBlock:
populateWithSeedItem:completionBlock:
beginGeneratingGeniusClusterItemsWithSeedItems:error:
geniusClusterItemsWithCount:error:
endGeneratingGeniusClusterItems
_clusterPlaylist
T@"MPMediaQuerySectionInfo",R,C,D,N
addSectionWithHeaderTitle:sectionIndexTitleIndex:count:
enumerateSectionHeadersUsingBlock:
setSectionIndexTitles:
localRevision
persistentIDAtIndex:
setObject:atIndexedSubscript:
setOrderingProperties:
isQueryResultSetInvalidated
_resultSet
_entityClass
_sectionInfo
_entities
_entitiesQueue
_queryCriteria
T@"<MPMediaLibraryResultSet>",R,N,V_resultSet
_onBarrierCacheValues:persistValueInBackgroundBlock:
initWithLibraryDataProvider:dataProviderEntityClass:identifier:
delete
dataProvider
_dataProviderEntityClass
_valuePersistenceBlocks
_propertiesQueue
_dataProvider
T@"<MPMediaLibraryDataProvider>",R,W,N,V_dataProvider
T#,R,N,V_dataProviderEntityClass
Tq,R,N,V_identifier
sectionIndexTitleIndexForSectionIndex:
allLibraries
initWithMediaLibraryDataProvider:
_libraryContentsDidChange:
_libraryEntitiesAddedOrRemoved:
_dynamicPropertiesDidChange:
_invisiblePropertiesDidChange:
_displayValuesDidChange:
_syncGenerationDidChange:
_libraryUIDDidChange:
_libraryCloudLibraryAvailabilityDidChange:
_libraryPathDidChange:
_updateArtworkDataSourceMediaLibraryUniqueIdentifier
_postEvents
libraryUID
sagaAccountID
_databaseFilePaths
databaseConnectionAllowingWrites:withBlock:
attributesOfItemAtPath:error:
fileModificationDate
executeQuery:
int64ValueForFirstRowAndColumn
performBackgroundTaskWithBlock:
predicateWithProperty:equalToInteger:
trackWithPersistentID:visibleInLibrary:
newWithPersistentID:inLibrary:
queryWithLibrary:predicate:
predicateWithProperty:value:comparison:
hasEntities
ML3CollectionsQueryInLibrary:
countOfEntities
initWithPersistentID:inLibrary:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
performDatabaseTransactionWithBlock:
sdk_addStoreItemWithOpaqueID:completionHandler:
isWatch
importElements
storeItem
_storePlatformRequestContext
storeAdamID
additionalTrackMetadata
initWithLookupDictionary:additionalTrackMetadata:
addToCloudLibrary
_importStoreItemElements:withReferralObject:andAddTracksToCloudLibrary:usingCloudAdamID:withCompletion:
initWithLookupItems:
cloudAddToPlaylistBehavior
trackData
initWithLibraryPath:trackData:playlistData:
setTracksAreLibraryOwnedContent:
setPendingMatch:
sharedMediaLibraryService
performImport:fromSource:withProgressBlock:completionHandler:
initWithImportElements:
addStoreItemWithAdamID:referralObject:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
_addGlobalPlaylistsToLibraryDatabase:asLibraryOwned:completion:
itemForIdentifier:
playlistsData
setPlaylistsAreLibraryOwnedContent:
queryWithLibrary:predicate:options:
recordPlayEventForContainerPersistentID:
enumeratePersistentIDsAndProperties:ordered:cancelBlock:usingBlock:
propertyForMPMediaEntityProperty:
getObjects:range:
adjustedValueForMPProperty:ofEntity:withDefaultValue:
_loadValueForAggregateFunction:entityClass:property:query:completionBlock:
_loadProperties:ofEntityWithIdentifier:ML3EntityClass:completionBlock:
_unadjustedValueForMPProperty:withDefaultValue:
updateLovedPlaylistByAddingTrackWithPersistentID:inLibrary:
updateLovedPlaylistByRemovingTrackWithPersistentID:inLibrary:
uploadCloudItemProperties
timeIntervalSince1970
setItemProperties:forSagaID:
setLikedState:forEntityWithStoreID:withMediaType:timeStamp:
trackForeignPersistentID
queryWithLibrary:predicate:orderingTerms:usingSections:
setValues:forProperties:usingConnection:
setCollectionProperties:forCollectionWithPersistentID:groupingType:completionHandler:
setLikedState:forAlbumWithStoreID:
containerQueryWithContainer:
containerQueryWithContainer:predicate:
uploadCloudPlaylistProperties
setLikedState:forPlaylistWithGlobalID:
currentDevicePlaybackHistoryPlaylist
currentDevicePhotosMemoriesPlaylist
newWithDictionary:inLibrary:
deleteFromLibrary:deletionType:persistentIDs:count:
removeFromMyLibrary:deletionType:persistentIDs:count:
unlinkRedownloadableAssetsFromLibrary:persistentIDs:
setTracksWithPersistentIDs:notify:
appendTracksWithPersistentIDs:notify:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
removeTracksAtIndexes:notify:
removeAllTracks
removeFirstTrack
moveTrackFromIndex:toIndex:
preferredAudioTracks
preferredSubtitleTracks
revisionTrackingCode
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
populateLocationPropertiesWithPath:protectionType:
populateLocationPropertiesWithPath:protectionType:completionBlock:
clearLocationFromLibrary:persistentIDs:disableKeepLocal:
ML3SystemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:additionalFilterPredicates:
setLibraryEntityFilterPredicates:
setLibraryContainerFilterPredicates:
setLibraryPublicEntityFilterPredicates:
setLibraryPublicContainerFilterPredicates:
canShowCloudMusic
canShowCloudVideo
hasProperNetworkConditionsToPlayMedia
sagaOnDiskDatabaseRevision
systemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:
arrayByAddingObjectsFromArray:
ML3PredicateForContainer
ML3PredicateForTrack
processInfo
processName
dateWithTimeIntervalSinceReferenceDate:
setItemPersistentID:
setStoreItemID:
setRedownloadParams:
setFileSize:
chapterTOC
countOfGroupsForProperty:
chapterIndexForGroupIndex:groupingProperty:
timeLocationInMSOfChapterAtIndex:
localizedStringWithFormat:
_adjustedItemPropertyAssetURLOfEntity:withDefaultValue:
_adjustedItemTimeOfEntity:withDefaultValue:
_adjustedItemPropertyChapterArtworkTimesOfEntity:withDefaultValue:
_adjustedItemPropertyChaptersOfEntity:withDefaultValue:
_adjustedItemPropertyContentRatingOfEntity:withDefaultValue:
_adjustedItemDateOfEntity:withDefaultValue:
_adjustedItemNonnullDateOfEntity:withDefaultValue:
_adjustedItemPropertyEpisodeNumberOfEntity:withDefaultValue:
_adjustedItemPropertyEQPresetOfEntity:withDefaultValue:
_adjustedItemPropertyFilePathOfEntity:withDefaultValue:
_adjustedPropertyMediaTypeOfEntity:withDefaultValue:
_adjustedItemPropertyMovieInfoOfEntity:withDefaultValue:
_adjustedItemPropertyRatingOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNameOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNumberOfEntity:withDefaultValue:
_adjustedItemPropertyVerifiedIntegrityOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeAdjustmentOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeNormalizationOfEntity:withDefaultValue:
_adjustedPlaylistPropertySeedItemsOfEntity:withDefaultValue:
_adjustedItemPropertyBookletsOfEntity:withDefaultValue:
_unadjustedValueForItemTimeWithDefaultValue:
_unadjustedValueForItemDateWithDefaultValue:
_unadjustedValueForItemPropertyRatingWithDefaultValue:
_unadjustedValueForItemPropertyVolumeAdjustmentWithDefaultValue:
_unadjustedValueForItemPropertyVolumeNormalizationWithDefaultValue:
uniqueIdentifierForLibrary:
setMediaLibraryUniqueIdentifier:
_dataProviderSupportsEntityChangeTracking
updateEntitesToCurrentRevision
supportsEntityChangeTrackingForMediaEntityType:collectionGroupingType:dataProviderClass:
_coalesceEvents
getValues:forProperties:count:
valueForAggregateFunction:onEntitiesForProperty:
propertiesToCache
T@"MPMediaEntityCache",R,N
T@"<MPArtworkDataSource>",R,N
setOnDiskProviders:
T@"NSArray",C,N
setLibrary:
_removeEntitiesWithIdentifiers:count:entityClass:
_backgroundTaskQueue
_cloudUpdateQueue
_backgroundTask
_backgroundTaskCount
_hasScheduledEventPosting
_refreshState
_setValuesWidthLimitedQueue
_entitiesAddedOrRemovedNotificationQueue
_entitiesAddedOrRemovedCoalescingTimer
_entityCache
_artworkDataSource
T@"ML3MusicLibrary",&,N,V_library
T@"MPMediaLibrary",W,N,V_mediaLibrary
T@"MPMediaEntityCache",R,N,V_entityCache
T@"<MPArtworkDataSource>",R,N,V_artworkDataSource
indexInChaptersWithAnyType
_sortByChapterIndex:
countOfChapters
setArtworkRequest:
setArtworkDataSource:
setChapterType:
setIndexInChaptersWithSameType:
setIndexInChaptersWithAnyType:
setPlaybackTime:
durationInMSOfGroupAtIndex:groupingProperty:
setPlaybackDuration:
setRetrievalTime:
titlePropertyOfChapterAtIndex:
urlPropertyOfChapterAtIndex:
urlTitlePropertyOfChapterAtIndex:
setValueLoader:
sortUsingSelector:
stringByAppendingPathComponent:
contentsOfDirectoryAtPath:error:
hasPrefix:
stringByStandardizingPath
rangeOfString:
_externalDeviceConnectionStateDidChangeNotification:
isConnected
connectWithOptions:completion:
connectWithOptions:userInfo:completion:
initWithString:
connectWithOptions:userInfo:
_connectionStateDidChange:error:
isConnecting
connectWithCompletion:
connectWithUserInfo:completion:
isInvalidated
sendCustomData:
sendMediaRemoteCommand:withOptions:completionHandler:
externalDevice
_invalidated
_pendingConnectionHandlers
_externalDevice
T^v,R,N,V_externalDevice
connected
TB,R,N,GisConnected
connecting
TB,R,N,GisConnecting
invalidated
TB,R,N,GisInvalidated
orderingTermWithProperty:
orderingTermWithProperty:direction:
albumsDefaultOrderingTerms
albumsByAlbumArtistDefaultOrderingTerms
artistsDefaultOrderingTerms
composersDefaultOrderingTerms
genresDefaultOrderingTerms
podcastsDefaultOrderingTerms
TVShowEpisodesDefaultOrderingTerms
podcastsEpisodesDefaultOrderingTerms
albumAllArtistsDefaultOrderingTerms
defaultOrderingTerms
ML3OrderingTermsForMPOrderingProperties:directionalityMapping:entityClass:
ML3ItemsQueryInLibrary:orderingTerms:nameBlankProperty:
predicateWithProperty:
ML3OrderingTermsForGroupingType:
containerQueryWithContainer:predicate:orderingTerms:
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
setLimit:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
queryWithLibrary:predicate:orderingTerms:
aggregateQueryWithUnitQuery:foreignPersistentIDProperty:
staticResponse
setStaticResponse:
_staticResponse
T@"MPModelStaticResponse",&,N,V_staticResponse
setAlbumAppData:
_albumAppData
T@"MPMediaLibraryAlbumAppData",&,N,V_albumAppData
_mirroringTitleTextAttributes
initWithString:attributes:
setAttributedText:
setNumberOfLines:
_mirroringCompactDescription
_mirroringCompactDescriptionTextAttributes
setStrokeColor:
setLineWidth:
setFillColor:
setOpacity:
addSublayer:
moveToPoint:
addLineToPoint:
boundingRectWithSize:options:attributes:context:
setAlignment:
defaultFontForTextStyle:
tableCellGrayTextColor
_edgeInsets
_titleLabel
_detailLabel
_borderLayer
initWithResponseSinfDictionary:
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
_ML3PredicateForML3EntityProperty:
predicateWithPredicate:
predicateWithProperty:value:comparison:caseInsensitive:
_ML3PredicateForEntityClass:
_ML3PredicateForEntityTypeSelector:
spotlightPropertyForMPMediaEntityProperty:
predicateWithProperties:searchString:
predicateWithConcatenatedProperties:searchString:
_multiverseIdentifier
T@"MPMediaLibrary",R,N
T@"MIPMultiverseIdentifier",R,N,V_multiverseIdentifier
sectionIndexTitleIndex
hasUnknownSection
setHasUnknownSection:
_sectionIndexTitles
_hasUnknownSection
T@"NSArray",R,C,N,V_sections
TB,N,V_hasUnknownSection
setSectionIndexTitleIndex:
setRange:
isMuted
reload
adjustVolumeValue:
getVolumeValueWithCompletion:
beginIncreasingRelativeVolume
endIncreasingRelativeVolume
beginDecreasingRelativeVolume
endDecreasingRelativeVolume
initializeVolume
reloadWarning
_updateVolumeControlAvailability
setVolumeAudioCategory:
descriptionForWarningState:
volumeControllerDataSource:didChangeVolume:
volumeControllerDataSource:didChangeMuted:
volumeControllerDataSource:didChangeVolumeWarning:
volumeControllerDataSource:didChangeVolumeLabel:
volumeControllerDataSource:didChangeEUVolumeLimit:
volumeControllerDataSource:didChangeEUVolumeLimitEnforced:
volumeControllerDataSource:didChangeVolumeAudioCategory:
volumeControllerDataSource:didChangeVolumeControlAvailability:
volumeControllerDataSource:didChangeVolumeCapabilities:
volumeCapabilities
_volumeChangeCoalescingCount
_volumeCapabilities
T@"<MPVolumeControllerDelegate>",W,N,V_delegate
volumeControlAvailable
TB,R,N,GisVolumeControlAvailable
TI,R,N,V_volumeCapabilities
TB,N,GisMuted
T@"<MPVolumeControllerDataSource>",&,N,V_dataSource
encodeDouble:forKey:
decodeDoubleForKey:
decodeObjectForKey:
indexInChaptersWithSameType
valueLoader
artworkRequest
_chapterType
_indexInChaptersWithAnyType
_indexInChaptersWithSameType
_playbackDuration
_playbackTime
_valueLoader
_artworkRequest
T@,&,N,V_value
T@?,C,N,V_valueLoader
Tq,N,V_chapterType
Td,N,V_playbackTime
Td,N,V_playbackDuration
TQ,N,V_indexInChaptersWithSameType
TQ,N,V_indexInChaptersWithAnyType
T@"MPMediaLibraryArtworkRequest",&,N,V_artworkRequest
T@"MPMediaLibraryArtworkDataSource",W,N,V_artworkDataSource
model
relativeModelObjectForStoreLibraryPersonalization
personalizationScopedPropertiesForProperties:
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
_requiredLightweightPersonalizationPropertiesForModelClass:requestedProperties:
_libraryObjectWithRelativeModelClass:identifierSet:propertySet:
_lightweightPersonalizedObjectWithUnpersonalizedObject:libraryObject:personalizationProperties:overrideLibraryAddedStatus:
objectWithStoreLibraryPersonalizationRelativeModelObject:
_completePersonalizedObjectWithLibraryObject:personalizationProperties:overrideLibraryAddedStatus:
setBookmarkTime:
userPlayCount
setUserPlayCount:
storeUbiquitousIdentifier
sharedUbiquitousPlaybackPositionController
playbackPositionForLocalEntityIdentifier:
ubiquitousIdentifier
setStoreUbiquitousIdentifier:
setHasLibraryLyrics:
setEndpointType:
redownloadParameters
setRedownloadParameters:
accountIdentifier
setAccountIdentifier:
setShouldReportPlayEvents:
setRedownloadable:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:libraryPlaybackPosition:personalizationProperties:
_lightweightPersonalizedLyricsWithUnpersonalizedLyrics:libraryLyrics:identifiers:personalizationProperties:
_lightweightPersonalizedStoreAssetWithUnpersonalizedAsset:libraryAsset:personalizationProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:identifiers:personalizationProperties:
_entityCacheForEntityClass:propertiesToFetch:
unpersonalizedContentDescriptors
setUnpersonalizedContentDescriptors:
itemIndexPathToOverridePropertySet
setItemIndexPathToOverridePropertySet:
translatingContext
setTranslatingContext:
relativeModelClassToMappingResponse
setRelativeModelClassToMappingResponse:
sectionToLibraryAddedOverride
setSectionToLibraryAddedOverride:
_accessSerialQueue
_entityCaches
_unpersonalizedContentDescriptors
_itemIndexPathToOverridePropertySet
_translatingContext
_relativeModelClassToMappingResponse
_sectionToLibraryAddedOverride
T@"MPSectionedCollection",&,N,V_unpersonalizedContentDescriptors
T@"NSDictionary",C,N,V_itemIndexPathToOverridePropertySet
T@"MPMediaLibraryEntityTranslationContext",&,N,V_translatingContext
T@"NSMapTable",C,N,V_relativeModelClassToMappingResponse
T@"NSMutableDictionary",&,N,V_sectionToLibraryAddedOverride
RTCReportingSupported
TB,R,N,GisRTCReportingSupported
initWithType:includeMirroring:
initWithContentViewController:
dismissPopoverAnimated:
popoverControllerDidDismissPopover:
contentViewController
setPopoverContentSize:animated:
routingViewControllerDidShowAirPlayDebugScreen:
initWithType:
setMirroringOnly:
mirroringOnly
_mirroringIncluded
_routingViewController
_mirroringOnly
TB,N,V_mirroringOnly
initWithObject:keyPath:options:handler:
T@"NSString",R,C,N,V_keyPath
maximumResultsPerScope
scopes
initWithEntityQueryResult:forScope:entityTranslationContext:
initWithEntitiesQueryResultContainers:
_runningQuery
T@"MPModelLibrarySearchRequest",C,N,V_request
isEqualToDictionary:
buyParameters
formattedPrice
price
actionTextForType:
relatedMPModelClass
_objectForPropertySet:source:context:
_valueForPropertyKey:source:context:
propertyTranslatorForPropertyKey:
relationshipTranslatorForRelationshipKey:
mapIdentifiersToPropertyTranslator:
mapPropertyKey:toPropertyTranslator:
mapRelationshipKey:ofModelClass:toRelationshipTranslator:
prepareSource:context:
initWithMPModelClass:
prepareSource:context:properties:
setValue:forModelKey:
_objectForRelationshipKey:propertySet:source:context:
classForRelationshipKey:
setSourcePreprocessorBlock:
mapUnsupportedRelationshipKey:
_propertiesToTranslators
_relationshipsToTranslators
_sourcePreprocessorBlock
_unsupportedKeys
_optionalHooks
_MPModelClass
T#,R,N,V_MPModelClass
T#,R,N
_relatedMPModelClass
T#,R,N,V_relatedMPModelClass
initWithDeviceType:deviceSubtype:uid:modelID:
initWithDeviceType:deviceSubtype:uid:
_routeType
_routeSubtype
_uid
_modelID
Tq,R,N,V_routeType
Tq,R,N,V_routeSubtype
T@"NSString",R,N,V_uid
T@"NSString",R,N,V_modelID
predicateWithBlock:
filteredArrayUsingPredicate:
routeSubtypeForMRSubtype:mrType:
deviceSubtype
deviceType
routeSubtypeForMRSubtype:withOverridesFromMRType:
clusterCompositionForOutputDevice:
clusterTypeForMRClusterType:
designatedGroupLeaderName
routeNames
setRouteName:
avRouteDescription
setAVRouteDescription:
isAirPlayingToDevice
groupLeaderAirplayIdentifier
supportsAirPlayGrouping
supportsRemoteControl
numberOfOutputDevices
isRoutingToWirelessDevice
wirelessDisplayRoute
setWirelessDisplayRoute:
passwordType
displayRouteType
setDisplayRouteType:
isPhoneRoute
isW2Route
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioEnabled
isLowLatencyRoute
designatedGroupLeaderRouteUID
isPlayingOnPairedDevice
requiresPassword
clusterType
_picked
_avRouteDescription
_wirelessDisplayRoute
_displayRouteType
_batteryLevel
_canAccessRemoteAssets
_canPlayEncryptedProgressiveDownloadAssets
_canFetchMediaDataFromSender
_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
_pickedOnPairedDevice
_playingOnPairedDevice
_requiresPassword
_carplayRoute
_homePodRoute
_b520Route
_homeTheaterRoute
_lowFidelityRoute
_clusterRoute
_productIdentifier
_groupUID
_designatedGroupLeaderRouteUID
_pickableRouteType
_clusterComposition
_auxiliaryDevices
_playingPairedDeviceName
_clusterType
_originalRouteSubtype
T^v,R,N,G_externalDevice,V_externalDevice
picked
TB,N,GisPicked
routingToWirelessDevice
TB,R,N,GisRoutingToWirelessDevice
Tq,R,N,V_originalRouteSubtype
T@"MPAVRouteConnection",R,N,V_connection
T@"NSString",R,N,V_routeUID
T@"NSString",R,N,V_productIdentifier
T@"NSString",R,N,V_groupUID
T@"NSString",R,N,V_designatedGroupLeaderRouteUID
Tq,R,N,V_pickableRouteType
T@"NSArray",R,N,V_clusterComposition
TB,R,N,V_canAccessRemoteAssets
TB,R,N,V_canPlayEncryptedProgressiveDownloadAssets
TB,R,N,V_canFetchMediaDataFromSender
TB,R,N,V_presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
proxyGroupPlayer
TB,R,N,GisProxyGroupPlayer
splitRoute
TB,R,N,GisSplitRoute
splitterCapable
TB,R,N,GisSplitterCapable
T@"MPAVBatteryLevel",R,N,V_batteryLevel
T@"NSArray",R,N,V_auxiliaryDevices
T@"NSString",R,N,V_playingPairedDeviceName
pickedOnPairedDevice
TB,R,N,GisPickedOnPairedDevice,V_pickedOnPairedDevice
playingOnPairedDevice
TB,R,N,GisPlayingOnPairedDevice,V_playingOnPairedDevice
airPlayingToDevice
TB,R,N,GisAirPlayingToDevice
TB,R,N,V_requiresPassword
displayAsPicked
TB,R,N,GisDisplayedAsPicked
airpodsRoute
TB,R,N,GisAirpodsRoute
appleTVRoute
TB,R,N,GisAppleTVRoute
beatsSoloRoute
TB,R,N,GisBeatsSoloRoute
beatsStudioRoute
TB,R,N,GisBeatsStudioRoute
beatsXRoute
TB,R,N,GisBeatsXRoute
beatsLegacyRoute
TB,R,N,GisBeatsLegacyRoute
carplayRoute
TB,R,N,GisCarplayRoute,V_carplayRoute
deviceSpeakerRoute
TB,R,N,GisDeviceSpeakerRoute
hearingDeviceRoute
TB,R,N,GisHearingDeviceRoute
homePodRoute
TB,R,N,GisHomePodRoute,V_homePodRoute
powerbeatsRoute
TB,R,N,GisPowerbeatsRoute
smartAudio
TB,R,N,GisSmartAudio
w1Route
TB,R,N,GisW1Route
airPlayRoute
TB,R,N,GisAirPlayRoute
w2Route
TB,R,N,GisW2Route
h1Route
TB,R,N,GisH1Route
shareableRoute
TB,R,N,GisShareableRoute
headphonesRoute
TB,R,N,GisHeadphonesRoute
stereoPair
TB,R,N,GisStereoPair
tvRoute
TB,R,N,GisTVRoute
tvStickRoute
TB,R,N,GisTVStickRoute
setTopBoxRoute
TB,R,N,GisSetTopBoxRoute
phoneRoute
TB,R,N,GisPhoneRoute
macRoute
TB,R,N,GisMacRoute
b444Route
TB,R,N,GisB444Route
b298Route
TB,R,N,GisB298Route
b419Route
TB,R,N,GisB419Route
b364Route
TB,R,N,GisB364Route
b372Route
TB,R,N,GisB372Route
b515Route
TB,R,N,GisB515Route
b507Route
TB,R,N,GisB507Route
b494Route
TB,R,N,GisB494Route
bB688Route
TB,R,N,GisB688Route
j327Route
TB,R,N,GisJ327Route
b520Route
TB,R,N,GisB520Route,V_b520Route
homeTheaterRoute
TB,R,N,GisHomeTheaterRoute,V_homeTheaterRoute
homeTheaterB520Route
TB,R,N,GisHomeTheaterB520Route
lowLatencyRoute
TB,R,N,GisLowLatencyRoute
lowFidelityRoute
TB,R,N,GisLowFidelityRoute,V_lowFidelityRoute
clusterRoute
TB,R,N,GisClusterRoute,V_clusterRoute
Tq,R,N,V_clusterType
_missingContentIdentifiersInRecommendationsArray:storeItemMetadataResults:
storeItemMetadataForItemIdentifier:
_produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:
setLibraryIdentifierSet:forIdentifierSet:
libraryAddedStatus
setLibraryAddedStatus:
_storeIdentifierSetToLibraryIdentifierSet
_libraryAddedStatus
Tq,N,V_libraryAddedStatus
setProgress:
centerImage
outerRingColor
_centerImageView
_outerRingView
_progressView
_centerImage
_outerRingColor
T@"UIImage",&,N,V_centerImage
T@"UIColor",&,N,V_outerRingColor
setStrokeStart:
setLineCap:
_updateShapePath
_shouldAnimatePropertyWithKey:
setStrokeEnd:
lineWidth
bezierPath
addArcWithCenter:radius:startAngle:endAngle:clockwise:
layerClass
progress
_progress
Td,N,V_progress
removePredicatesForProperty:
setFilterPredicate:forProperty:
containingPlaylist
setFilterPropertyPredicate:
_updatePredicateForProperty:withPropertyPredicate:
collectionByJoiningCollections
activeGeniusPlaylist
currentDevicePurchasesPlaylist
T@"MPMediaPlaylist",R,N
dispatchSync:
_finishWithResponse:error:
_nestedRequestsOperationQueue
initWithRequestedItemIdentifiers:reason:
initWithPreviousParser:additionalStoreItemMetadataResponse:options:sectionBuilder:contentItemBuilder:userIdentity:
_produceRegularResponseWithParser:completion:
initWithRawResponseOutput:options:sectionBuilder:contentItemBuilder:userIdentity:
_produceCarPlayResponseWithParser:withNestedRequestsForEmptyBrickSectionsInOperationQueue:completion:
assertRunningInAccessQueue
isBrick
sectionBuilder
isMemberOfChartSet
_produceResponseWithParser:results:changeDetails:completion:
adjustTimeoutInterval:
_didInitializeTimeoutIntervalAdditions
_errorReportingDisabled
_individualPendingNestedRequestOperation
_nestedRequestOperationsGroup
_requestType
_sectionsToPendingNestedRequestOperations
_timeoutIntervalAdditions
initWithType:transformedType:
transformedPayload
setIdentifier:
attributes
meta
transformedType
_attributes
_meta
_transformedType
_relationships
T@"NSString",R,N,V_transformedType
T@"NSMutableDictionary",R,N,V_relationships
T@"NSString",C,N,V_identifier
T@"NSMutableDictionary",R,N,V_attributes
T@"NSMutableDictionary",R,N,V_meta
relationshipPayloadProvider
setRelationshipPayloadProvider:
_personID
_relationshipPayloadProvider
T@"NSString",C,N,V_personID
T@"<MPMediaKitEntityRelationshipPayloadProvider>",&,N,V_relationshipPayloadProvider
payloadForRelatedEntityWithIdentifierSet:
initWithRelatedMPModelClass:mediaKitType:payloadTransformBlock:
mediaKitType
setMediaKitType:
payloadTransformBlock
_mediaKitType
_payloadTransformBlock
T@"NSString",C,N,V_mediaKitType
T@?,R,N,V_payloadTransformBlock
mapIdentifierCreationKeyPaths:transformBlock:
translatorForKeyPaths:valueTransformBlock:
translatorForKeyPaths:valueTransformFunction:
mapRelationshipKey:toModelClass:mediaKitType:payloadTransform:
createGenericObjectTranslator
mapRelationshipKey:toModelClass:mediaKitType:
mapPropertyKey:toPayloadKeyPath:
mapPropertyKey:toPayloadKeyPaths:valueTransformer:
mapPropertyKey:toPayloadKeyPaths:valueTransformerFunction:
mapRelationshipKey:toModelClass:mediaKitType:attributePayloadTransform:
objectForPropertySet:payload:context:
__tagline_KEY
__movieInfoDictionary_KEY
__clips_KEY
clips
tagline
movieInfoDictionary
T@"NSDictionary",C,D,N
stationGlyphBlock
stationEvents
initWithStartDate:endDate:
containsDate:
__beats1_KEY
__live_KEY
__name_KEY
__editorNotes_KEY
__shortEditorNotes_KEY
__hasExplicitContent_KEY
__stationEvents_KEY
__stationGlyphBlock_KEY
__allowsItemLiking_KEY
__type_KEY
__subtype_KEY
__attributionLabel_KEY
__providerName_KEY
__subscriptionRequired_KEY
__providerUniversalLink_KEY
__providerBundleIdentifier_KEY
__providerID_KEY
__startingAirDate_KEY
__endingAirDate_KEY
stationGlyph
currentStationEvent
upcomingStationEvent
setPlaybackAuthorizationToken:
_playbackAuthorizationToken
TB,D,N,GisBeats1
TB,D,N,GisLive
hasExplicitContent
allowsItemLiking
providerName
subscriptionRequired
TB,D,N,GisSubscriptionRequired
startingAirDate
endingAirDate
T@"NSString",C,N,V_playbackAuthorizationToken
T@"MPRadioStationEvent",R,N
providerID
Tq,R,D,N
noArtPlaceholderImageForMediaType:
initWithObjects:forKeys:count:
_createBackgroundView
setSeparatorStyle:
contentOffset
contentSize
indexPathsForVisibleRows
headerViewForSection:
cellForRowAtIndexPath:
setClippingInsets:
rectForSection:
backgroundViewForSection:
headerBackgroundView
setHeaderBackgroundView:
footerBackgroundView
setFooterBackgroundView:
sectionBackgroundViews
setSectionBackgroundViews:
_headerBackgroundView
_footerBackgroundView
_sectionBackgroundViews
T@"NSMutableDictionary",&,N,V_sectionBackgroundViews
T@"UIView",&,N,V_headerBackgroundView
T@"UIView",&,N,V_footerBackgroundView
T@"MPModelPlaylistEntriesShareEligibilityRequest",C,N,V_request
setModelObjects:
_updateCloudLibraryForPlaylist:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:referralObject:toPlaylistWithPersistentID:completionHandler:
T@"MPModelLibraryAddToPlaylistChangeRequest",C,N,V_request
setShouldRememberBookmarkTime:
setStopTime:
ubiquitousIdentifierWithStoreAdamID:
_requestedPlaybackPositionProperties
episodeKind
_episodeKind
T@"MPModelPodcastEpisodeKind",R,N,V_episodeKind
__feedURL_KEY
__shareURL_KEY
__supportsSubscription_KEY
__author_KEY
feedURL
shareURL
supportsSubscription
author
T@"MPModelPodcastAuthor",&,D,N
setShortDescriptionText:
_requestedRecordLabelProperties
_applicationDidBecomeActiveNotification
_applicationWillResignActiveNotification
cancelVolumeEvent
applicationShouldOverrideHardwareVolumeBehavior
_registerForButtonNotificationsIfNeeded
_unregisterForButtonNotificationsIfNeeded
increaseVolume
_changeVolumeBy:
_calculateButtonRepeatDelay
performSelector:withObject:afterDelay:inModes:
decreaseVolume
handleVolumeDownButton
handleVolumeUpButton
handleVolumeButtonWithType:down:
_volumeUpButtonTouchDown:
_volumeUpButtonTouchUp:
_volumeDownButtonTouchDown:
_volumeDownButtonTouchUp:
setWantsVolumeButtonEvents:
T@"MPVolumeHardwareButtonController",R,N
setActiveDataSource:
activeDataSource
_pendingVolumeChange
_debounceVolumeRepeat
_didRegisterForButtonNotifications
_activeDataSource
T@"<MPVolumeControllerDataSource>",&,N,V_activeDataSource
initWithModel:
_hasBeenPlayed
_model
T@"MPModelObject",R,N,V_model
TB,N,V_hasBeenPlayed
artworkInfoType
imageArtworkInfo
videoArtworkInfo
previewFrameArtworkInfoMatchingAspectRatio:
copyColorWithKind:
colorWithCGColor:
MP_isArtworkColorAnalyzerLightColorForAlgorithm:
setBackgroundColorLight:
setPrimaryTextColor:
setPrimaryTextColorLight:
setSecondaryTextColor:
setSecondaryTextColorLight:
textGradient
imageTraits
responseArray
responseDictionary
setArtworkTemplateItems:
_bestURLForCatalog:kind:size:
setResolvedURLString:
standardDefaults
isLegacyStoreCacheBusterEnabled
ic_URLByAppendingQueryItems:
requestWithURL:cachePolicy:timeoutInterval:
sizeInfo
_bestSizeForImageSizeInfo:catalog:
supportedSizesForCRABSVideoForAspectRatio:
HLSVideoURLForAspectRatio:
hasMaxSupportedSize
maxSupportedSize
supportedSizes
cropStyle
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
CRABSVideoURLMatchingSize:
T@"MPStoreArtworkDataSource",R,N
maxHEICRequestPercentage
setMaxHEICRequestPercentage:
_totalImageRequestCount
_HEICImageRequestCount
_maxHEICRequestPercentage
Td,N,V_maxHEICRequestPercentage
_sectionIndexTitleIndex
_range
T{_NSRange=QQ},N,V_range
TQ,N,V_sectionIndexTitleIndex
initWithBytesNoCopy:length:freeWhenDone:
initWithSeed:
setSeed:
decodeIntForKey:
decodeBytesForKey:returnedLength:
encodeInt:forKey:
encodeBytes:length:forKey:
seed
_seed
T@"NSData",C,N,V_seed
lowestValue
highestValue
numberOfPossibleOutcomes
_source
_lowestValue
_highestValue
_numberOfPossibleOutcomes
Tq,R,N,V_lowestValue
Tq,R,N,V_highestValue
TQ,R,N,V_numberOfPossibleOutcomes
initWithImage:scaledFittingSize:destinationURL:
destinationURL
_resizedScaledSizeForScaledImageSize:scaledFittingSize:
usesExactFittingSizeAsDestinationSize
URLByDeletingLastPathComponent
devicePreferredImageFormat
initWithImage:scaledFittingSize:
main
setScaledFittingSize:
setUsesExactFittingSizeAsDestinationSize:
_usesExactFittingSizeAsDestinationSize
_resizedImage
_destinationURL
_operationGroup
T{CGSize=dd},N,V_scaledFittingSize
TB,N,V_usesExactFittingSizeAsDestinationSize
T@"UIImage",R,N,V_resizedImage
T@"NSURL",R,N,V_destinationURL
T@"NSObject<OS_dispatch_group>",R,N,V_operationGroup
isBackgroundColorLight
primaryTextColor
isPrimaryTextColorLight
secondaryTextColor
isSecondaryTextColorLight
_copyWithClass:
_backgroundColor
_backgroundColorLight
_primaryTextColor
_primaryTextColorLight
_secondaryTextColor
_secondaryTextColorLight
T@"UIColor",&,N,V_backgroundColor
T@"UIColor",&,N,V_primaryTextColor
T@"UIColor",&,N,V_secondaryTextColor
backgroundColorLight
TB,R,N,GisBackgroundColorLight,V_backgroundColorLight
primaryTextColorLight
TB,R,N,GisPrimaryTextColorLight,V_primaryTextColorLight
secondaryTextColorLight
TB,R,N,GisSecondaryTextColorLight,V_secondaryTextColorLight
T@"UIColor",&,D,N
TB,D,N,GisBackgroundColorLight
TB,D,N,GisPrimaryTextColorLight
TB,D,N,GisSecondaryTextColorLight
_addControlEventsForVolumeSlider:
_updateOptimisticValueCache
_findExistingVolumeSlider:
_resetMasterVolumeSlider
_removeControlEventsForVolumeSlider:
_maxOptimisticValue
_resetOptimisticScales
volumeSliderValueChanged:
initWithMass:stiffness:damping:initialVelocity:
initWithControlPoint1:controlPoint2:
setSpringCubicTimingParameters:
initWithDuration:timingParameters:
addAnimations:
addCompletion:
startAnimation
keyEnumerator
_setControlEventsForVolumeSlider:add:
volumeSliderDidEndTracking:
initWithMasterVolumeSlider:individualVolumeSliders:
individualVolumeSliders
syncSliders:
_addControlEventsForVolumeSliders:
_removeControlEventsForVolumeSliders:
masterVolumeSlider
synced
_allSliders
_individualVolumeSliders
_trackingSlider
_optimisticValues
_optimisticScales
_inFlightDisableOptimisticStateRequests
_shouldOverrideTracking
_synced
_masterVolumeSlider
T@"MPVolumeSlider",R,N,V_masterVolumeSlider
TB,R,N,V_synced
enumeratorWithOptions:
_debugDescriptionWithEnumerator:lengths:
stringByPaddingToLength:withString:startingAtIndex:
annotationDelegate
debugDescriptionForSection:
debugDescriptionForItem:inSection:
stringByLeftPaddingToLength:withString:startingAtIndex:
performWithExclusiveAccessAndReturnObject:
_performWithoutRequiringExclusivity:
mediaClip
innerObject
__itemType_KEY
__detailedItemType_KEY
__artistUploadedContentType_KEY
__curator_KEY
__mediaClip_KEY
__movie_KEY
__socialPerson_KEY
__song_KEY
__episode_KEY
__showCreator_KEY
__recordLabel_KEY
T@"MPModelCurator",&,D,N
T@"MPModelMediaClip",&,D,N
T@"MPModelMovie",&,D,N
T@"MPModelSocialPerson",&,D,N
T@"MPModelSong",&,D,N
T@"MPModelTVEpisode",&,D,N
T@"MPModelTVShowCreator",&,D,N
T@"MPModelRecordLabel",&,D,N
detailedItemType
setFormatOptions:
setStationEventID:
setSocialProfileID:
itemPersistentID
redownloadParams
TQ,N,VitemPersistentID
T@"NSString",C,N,Vname
Tq,N,VstoreItemID
T@"NSString",C,N,VredownloadParams
Tq,N,VfileSize
roomID
setRoomID:
_roomID
T@"NSString",C,N,V_roomID
setMusicShow:
setEpisodeNumber:
setExplicitRating:
setCreator:
setNumber:
_requestedEpisodeProperties
systemFiltersPerLibrary
_initWithLibrary:
_cloudLibraryAvailabilityDidChange:
_updateFilters
filtersForLibrary:
shouldExcludePurchaseHistoryContent
_shouldExcludePurchaseHistoryContent
addProperties:
writeString:forTag:
hasSearchString
propertiesCount
clearProperties
propertiesAtIndex:
T@"NSString",&,N,V_searchString
T@"NSMutableArray",&,N,V_properties
MPMediaLibraryDataProviderSystemML3CoercedString
_initInstanceVariableOnce
hasGeniusFeatureEnabled
hasGeniusDataAvailable
_seedCloudPlaylistWithTrack:container:completionBlock:
_localizedGeniusErrorForError:geniusEnabled:
populateContainer:withSeedTrack:completionBlock:
playlistControllerWithSeedTracks:error:
tracksFromClusterForCount:error:
geniusTracksForSeedTrack:error:
hasCellularDataCapability
preferredMusicLowBandwidthResolution
sharedMonitor
networkType
hasWiFiCapability
hasWAPICapability
_localizedCloudGeniusErrorForError:
loadGeniusItemsForSagaID:completionHandler:
initWithStoreAccountIdentifier:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
_currentRevision
updatePropertyValuesInEntityWithIdentifier:dataProviderEntityClass:deleted:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:
_modelObjectWithUniqueContentItemIDForModelObject:
setPlaylistEntry:
shouldUsePlaylistEntry
setShouldUsePlaylistEntry:
_baseContentItemIDToOccurrenceCount
_tvEpisodeBuilder
_tvSeasonBuilder
_tvShowBuilder
_shouldUsePlaylistEntry
TB,N,V_shouldUsePlaylistEntry
sourceKeyPaths
valueTransformFunction
_sourceKeyPaths
_valueTransformFunction
T@"NSArray",R,N,V_sourceKeyPaths
T^?,R,N,V_valueTransformFunction
MPStoreRadioStreamFlavorFromICStoreRadioStreamFlavor:
streamProtocol
MPStoreRadioStreamProtocolFromICStoreRadioStreamProtocol:
streamURL
initWithiTunesCloudStoreRadioStreamAssetInfo:
isITunesStoreStream
setITunesStoreStream:
_iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
_resolveRequestItemsWithSOD:
_getNextBatchBatch
_renewPlaybackAuthorizationTokensForBatch:progressHandler:
playbackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
shouldRenewPlaybackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
_itemIDsFromRequestIdentifiers
_notifyBatchProgressWithResponseDictionary:tokenHalfLifeDuration:error:finalResponse:progressHandler:
valueForBagKey:
removeObjectsInArray:
requestItemCount
T@"NSUUID",R,C,N
T@"NSProgress",R,N
initWithItemIdentifiers:personID:requestContext:
_requestContext
_callOutQueue
_itemIdentifiersForRequest
_requestItemCount
_isCancelled
_requestIdentifier
_requestPropertySet
initWithRouteDescription:
initWithOutputDevice:
_leftPercentage
_rightPercentage
_singlePercentage
_casePercentage
T@"NSNumber",R,N,V_leftPercentage
T@"NSNumber",R,N,V_rightPercentage
T@"NSNumber",R,N,V_singlePercentage
T@"NSNumber",R,N,V_casePercentage
initWithFloat:
representedObjects
setLibraryResponse:
setRepresentedObjectResults:
supportsModelClass:
setPersistentIDs:
personalizedResponseForContentDescriptor:requestedProperties:
T@"MPStoreLibraryPersonalizationRequest",C,N,V_request
T@"MPMediaLibraryView",N,V_libraryView
T{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}},N,V_persistentIDs
initWithSuiteName:
registerDefaults:
_migrateUserDefaults
_accountStoreChangedNotification:
_loadAccountProperties
ams_accountFlagValueForAccountFlag:
ams_setAccountFlagValue:forAccountFlag:
ic_sharedAccountStore
ams_saveAccount:
stringForKey:
settingWithName:
setBool:forKey:
setPrivateListeningEnabled:
updatePropertiesForUserIdentity:usingBlock:
integerForKey:
preferredMusicHighBandwidthResolution
preferredMusicDownloadResolution
spatialAudioPreference
setSpatialAudioPreference:
prefersSpatialDownloads
floatForKey:
doubleForKey:
resetAllInternalSettings
setPreferredMusicLowBandwidthResolution:
getPropertiesForUserIdentity:error:
privateListeningEnabled
isDevicePrivateListeningEnabled
T@"MPPlaybackUserDefaults",R,N
autoPlayEnabledForUserIdentity:
setAutoPlayEnabled:forUserIdentity:
musicEQSetting
musicRepeatType
setMusicRepeatType:
musicShuffleType
setMusicShuffleType:
setPlaybackAuthorizationTokenHalfLifeDuration:
isPrivateListeningEnabled
setPreferredMusicHighBandwidthResolution:
setPreferredMusicDownloadResolution:
prefersSpatialAudio
setPrefersSpatialAudio:
setPrefersSpatialDownloads:
showLosslessAudio
setShowLosslessAudio:
preferredVideoLowBandwidthResolution
preferredVideoHighBandwidthResolution
allowsHighQualityMusicStreamingOnCellular
disableAssetCaching
progressiveDownloadAssetRatio
disableAudioAnalysis
disableMiniSINF
disablePeriodicStateRestore
disableQHO
forceMusicResolution
forcedMusicResolution
forceMusicStreaming
forceLibrarySupplementalContexts
showDebugUI
maximumQueueHandOffSize
speakerRouteEnabled
activationDelay
forwardBufferDuration
prerollEnabled
preferredVideoDownloadResolution
_iPodUserDefaults
_videoUserDefaults
_mediaPlaybackCoreUserDefaults
_airplayUserDefaults
_accountsQueue
_notifyTokens
_preferredVideoDownloadResolution
T@"MPPlaybackEQSetting",R,N
T@"NSNumber",C,N,GisPrivateListeningEnabled
devicePrivateListeningEnabled
T@"NSNumber",R,C,N,GisDevicePrivateListeningEnabled
Tq,R,N,V_preferredVideoDownloadResolution
settingWithPreset:
_initWithPreset:
allSettings
avPreset
preset
_preset
Tq,R,N,V_preset
Ti,R,N
ic_storeAccountForStoreAccountID:error:
weakObjectsHashTable
_addCategory:
_updateVisibility
_appAdoptsUISceneLifecycle
_updateVisibilityForVolumeDisplays:inWindowScene:
_setSystemVolumeHUDEnabled:forAudioCategory:
setSystemVolumeHUDEnabled:forAudioCategory:
T@"MPVolumeHUDController",R,N
mainContext
registerView:inContext:
unregisterView:inContext:
_scenes
_displays
_categories
_needsUpdate
_shouldAccessCache
getUserQueueModificationsDisabledWithReply:
onSystemServer:
openURL:options:completionHandler:
sharedCache
hasCachedData
openToPlayQueueDescriptor:
catalogURLWithStoreURLBag:
_produceResponseWithParser:results:error:
_allowedFCKinds
_copyWithPlaybackResponseClass:
dialogDictionary
fileAssetInfoList
hlsAssetInfo
isLiveRadioStream
radioStreamAssetInfoList
suzeLeaseID
onlineSubscriptionKeysRequired
_dialogDictionary
_fileAssetInfoList
_hlsAssetInfo
_liveRadioStream
_radioStreamAssetInfoList
_suzeLeaseID
_subscriptionRequired
_onlineSubscriptionKeysRequired
T@"NSDictionary",R,C,N,V_dialogDictionary
T@"NSDate",R,C,N,V_expirationDate
T@"NSArray",R,C,N,V_fileAssetInfoList
T@"MPStoreHLSAssetInfo",R,N,V_hlsAssetInfo
liveRadioStream
TB,R,N,GisLiveRadioStream,V_liveRadioStream
T@"NSArray",R,C,N,V_radioStreamAssetInfoList
T@,R,N,V_suzeLeaseID
TB,R,N,GisSubscriptionRequired,V_subscriptionRequired
TB,R,N,V_onlineSubscriptionKeysRequired
setDialogDictionary:
setFileAssetInfoList:
setHlsAssetInfo:
setLiveRadioStream:
setRadioStreamAssetInfoList:
setSuzeLeaseID:
setSubscriptionRequired:
setOnlineSubscriptionKeysRequired:
T@"MPStoreHLSAssetInfo",&,D,N
TB,D,N,GisLiveRadioStream
T@,&,D,N
_cloudServiceStatusControllerWithUserIdentity:createIfRequired:
_copyObservationStateFrom:
_userIdentityStoreDidChange:
_enableICMLErrorReasonChange:
autoupdatingActiveAccount
sharedMonitorForIdentity:
beginObservingSubscriptionStatusWithHandler:
_allowsMusicSubscriptionDidChange:
_updateSubscriptionAvailability
endObservingSubscriptionStatusWithToken:
_calculateShouldPlaybackRequireSubscriptionLeaseReturningLikelyToReachRemoteServer:
isActiveLocker
_updateMatchStatus
_performBlockOnControllerHandlingTheSameAccount:
_currentCloudLibraryEnabled
_currentPurchaseHistoryEnabled
_beginObservingCloudLibraryEnabled
_beginObservingMatchStatus
refreshSubscriptionStatus
_endObservingCloudLibraryEnabled
_endObservingMatchStatus
isRemoteServerLikelyReachable
isActive
initWithStoreRequestContext:
setInteger:forKey:
performRequestWithResponseHandler:
allowsMusicSubscription
_updateSubscriptionAvailabilityWithValue:
setAllowsExpiredBags:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
T@"MPCloudServiceStatusController",R,N
_cloudClientAuthenticationDidChange
hasLoadedSubscriptionAvailability
isSubscriptionAvailable
lastKnownFairPlaySubscriptionStatus
matchStatus
shouldPlaybackRequireSubscriptionLease
beginObservingCloudLibraryEnabled
beginObservingMatchStatus
refreshMusicSubscriptionStatus
beginObservingFairPlaySubscriptionStatus
beginObservingPurchaseHistoryEnabled
beginObservingSubscriptionAvailability
endObservingCloudLibraryEnabled
endObservingMatchStatus
endObservingFairPlaySubscriptionStatus
endObservingPurchaseHistoryEnabled
endObservingSubscriptionAvailability
lastKnownSubscriptionFairPlayKeyStatus
serialQueue
_cloudLibraryStatusAccessQueue
_cloudLibraryStatus
_cloudLibraryObservationCount
_hasLoadedMatchStatus
_hasLoadedSubscriptionAvailability
_subscriptionStatusMonitor
_subscriptionStatusObservationToken
_matchStatusObservationCount
_matchStatus
_observingNetworkReachability
_hasSubscriptionLease
_shouldPlaybackRequireSubscriptionLease
_subscriptionAvailable
_lastKnownSubscriptionFairPlayKeyStatus
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"SSVFairPlaySubscriptionStatus",R,N
T@"ICMusicSubscriptionFairPlayKeyStatus",R,N,V_lastKnownSubscriptionFairPlayKeyStatus
subscriptionAvailable
TB,R,N,GisSubscriptionAvailable
T@"SSVSubscriptionStatus",R,C,N,V_subscriptionStatus
T@"ICMusicSubscriptionStatus",R,C,N
cloudLibraryEnabled
TB,R,N,GisCloudLibraryEnabled
purchaseHistoryEnabled
TB,R,N,GisPurchaseHistoryEnabled
_parsedElements:
_parsedContentNode:additionalAttributesFromParent:
initWithRawResponseOutput:sectionBuilder:contentItemBuilder:filteredFCKinds:userIdentity:
clearFilterPredicates
filterPredicatesAtIndex:
clearStaticEntityIdentifiers
staticEntityIdentifiersAtIndex:
filterPredicatesType
staticEntityIdentifiersType
setHasGroupingType:
hasGroupingType
groupingTypeAsString:
StringAsGroupingType:
setHasFilteringDisabled:
hasFilteringDisabled
setHasEntityOrder:
hasEntityOrder
entityOrderAsString:
StringAsEntityOrder:
setHasStaticEntityType:
hasStaticEntityType
staticEntityTypeAsString:
StringAsStaticEntityType:
setHasIncludeNonLibraryEntities:
hasIncludeNonLibraryEntities
mergeFrom:
setStaticEntityIdentifiers:
_entityOrder
_filterPredicates
_groupingType
_staticEntityIdentifiers
_includeNonLibraryEntities
_has
T@"NSMutableArray",&,N,V_filterPredicates
Ti,N,V_groupingType
TB,N,V_filteringDisabled
Ti,N,V_entityOrder
T@"NSMutableArray",&,N,V_staticEntityIdentifiers
Ti,N,V_staticEntityType
TB,N,V_includeNonLibraryEntities
previewDuration
previewURL
tokenWithQueue:owner:
_owner
tokenWithKey:owner:
_requestedStoreAssetProperties
secondsFromGMT
mediaLibraryForItemIdentifiers:
initWithFileAsset:sourceItemIdentifiers:
sourceItemIdentifiers
setSourceItemIdentifiers:
fileAsset
setFileAsset:
_sourceItemIdentifiers
_fileAsset
T@"MPIdentifierSet",&,N,V_sourceItemIdentifiers
T@"MPModelFileAsset",&,N,V_fileAsset
setOrderingDirectionMappings:
_entityLimit
_itemPropertiesToFetch
_collectionPropertiesToFetch
_useSections
_ignoreSystemFilterPredicates
_ignoreRestrictionsPredicates
_includeEntitiesWithBlankNames
T@"NSSet",C,N,V_filterPredicates
T@"NSSet",C,N,V_itemPropertiesToFetch
T@"NSSet",C,N,V_collectionPropertiesToFetch
Tq,N,V_groupingType
TQ,N,V_entityLimit
TQ,N,V_entityOrder
T@"NSArray",C,N,V_orderingProperties
TB,N,V_ignoreSystemFilterPredicates
TB,N,V_ignoreRestrictionsPredicates
TB,N,V_includeEntitiesWithBlankNames
T@"NSDictionary",C,N,V_orderingDirectionMappings
_actionTypeString
initWithAction:
action
_action
Tq,R,N,V_action
parsedStoreItemsImportProperties
_associatedElementForPropertyDict:
_importPropertiesDictFromImportMetadataDict:
_importElements
T@"NSArray",R,N,V_importElements
assetLoadError
setAssetLoadError:
assetLoadDuration
setAssetLoadDuration:
blockingSecureKeyLoadCount
setBlockingSecureKeyLoadCount:
maximumSecureKeyLoadDuration
setMaximumSecureKeyLoadDuration:
secureKeyLoadCount
setSecureKeyLoadCount:
secureKeyError
setSecureKeyError:
tracklistLoadError
setTracklistLoadError:
hadBlockingTracklistLoad
setHadBlockingTracklistLoad:
playbackEndError
setPlaybackEndError:
endReasonType
setEndReasonType:
startupState
setStartupState:
interfaceTypeChangeCount
setInterfaceTypeChangeCount:
startInterfaceType
setStartInterfaceType:
_hadBlockingTracklistLoad
_assetLoadError
_assetLoadDuration
_blockingSecureKeyLoadCount
_maximumSecureKeyLoadDuration
_secureKeyLoadCount
_secureKeyError
_tracklistLoadError
_playbackEndError
_endReasonType
_startupState
_interfaceTypeChangeCount
_startInterfaceType
T@"NSError",C,N,V_assetLoadError
Td,N,V_assetLoadDuration
Tq,N,V_blockingSecureKeyLoadCount
Td,N,V_maximumSecureKeyLoadDuration
Tq,N,V_secureKeyLoadCount
T@"NSError",C,N,V_secureKeyError
T@"NSError",C,N,V_tracklistLoadError
TB,N,V_hadBlockingTracklistLoad
T@"NSError",C,N,V_playbackEndError
Tq,N,V_endReasonType
Tq,N,V_startupState
Tq,N,V_interfaceTypeChangeCount
Tq,N,V_startInterfaceType
parentGroup
subgroupIndex
__reason_KEY
__utterance_KEY
__backedByStoreItemMetadata_KEY
__parentGroup_KEY
__subgroupIndex_KEY
subgroup
utterance
T@"MPModelForYouRecommendationGroup",W,D,N
backedByStoreItemMetadata
TB,D,N,GisBackedByStoreItemMetadata
T@"MPModelForYouRecommendationGroup",R,N
libraryAddStatusObserverConfiguration
supportsLibraryAddStatusObservation
requiredLibraryAddStatusObservationProperties
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N
hasCleanContent
_avControllerBufferingStateDidChangeNotification:
_avControllerItemWillChangeNotification:
_avControllerDidReloadWithPlaybackContextNotification:
_avControllerWillReloadWithPlaybackContextNotification:
_avItemAssetLoadedNotification:
_avItemTypeDidChangeNotification:
_avItemSecureKeyDeliveryRequestDidFinishNotification:
rtcReportingAssetType
_preparedSummaryEventForAVItem:
_configureStartupStateForSummaryEvent:withItem:
_setPerceivedTotalStartupTimeForItem:withSummaryEvent:
_configureBaseEventPropertiesForEvent:
_reportingSessionForAVItem:
_initializeReportingSession:forAVItem:
_completeSetupForReportingSession:avItem:
_isAVItemReadyForReportingSessionInitialization:
_isAVItemReadyForReportingSessionSetupCompletion:
setError:
_completeSetupForReportingSession:avItem:fallbackQueueFeeder:
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
_uniqueIdentifierForAVItem:
_newReportingSession
_handleDeallocationForUniqueIdentifier:
setHandler:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
_networkTypeDidChangeNotification:
_currentInterfaceType
_isReloadingWithPlaybackContext
_tracklistStartUptime
_tracklistSummaryEvent
_uniqueIdentifierToReportingSession
_uniqueIdentifierToSummaryEvent
T@"NSString",R,C,N,V_clientName
Ti,R,N,V_clientType
Tq,R,N,V_clientVersion
T@"MPAVController",R,W,N,V_player
T@?,C,N,V_handler
playlistName
shouldCreatePlaylist
playlistEntries
parentPlaylist
playlistDescription
isPublicPlaylist
isVisiblePlaylist
isCuratorPlaylist
isOwner
authorStoreIdentifier
didSetPlaylistUserImage
playlistUserImage
localPersistenceResponseHandler
completeResponseHandler
createPlaylistWithPersistentID:properties:trackList:completionHandler:
requiredPlaylistEntryProperties
setLocalPersistenceResponseHandler:
setCompleteResponseHandler:
_localPersistenceResponseHandler
_completeResponseHandler
T@"MPModelLibraryPlaylistEditChangeRequest",C,N,V_request
T@?,C,N,V_localPersistenceResponseHandler
T@?,C,N,V_completeResponseHandler
proxyForObjects:protocol:
setObjects:
setProtocol:
objects
selector
protocol
signatureWithObjCTypes:
proxyForObject:protocol:
_protocol
_objects
T@"Protocol",&,N,V_protocol
T@"NSHashTable",&,N,V_objects
setAddState:
setRelatedModelObjects:
setToken:
setKeepLocalState:
addState
relatedModelObjects
keepLocalState
registerTransientAddState:forModelObjects:relatedModelObjects:
unregisterTransientState:
performLibraryImportChangeRequest:withRelatedModelObjects:completion:
performKeepLocalChangeRequest:withRelatedModelObjects:completion:
registerTransientKeepLocalState:forModelObjects:relatedModelObjects:
transientAddStateForModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:
performLibraryImportChangeRequest:withRelatedModelObjects:
performKeepLocalChangeRequest:withRelatedModelObjects:
_notificationQueue
_registeredTransientState
_addState
_keepLocalState
_modelObjects
_relatedModelObjects
Tq,N,V_addState
Tq,N,V_keepLocalState
T@"MPSectionedCollection",C,N,V_modelObjects
T@"MPSectionedCollection",C,N,V_relatedModelObjects
T@"NSUUID",C,N,V_token
initWithPlayerID:
initWithIdentifier:displayName:
localOrigin
localClient
initWithOrigin:client:player:
infoCenterForPlayerPath:
defaultPlayer
initWithPlayerPath:
strongToWeakObjectsMapTable
localPlayerPath
_initializeNowPlayingInfo
_onQueue_stateDictionary
resignActiveSystemFallback
commandCenterForPlayerPath:
serviceQueue
_becomeActiveWithCompletion:
becomeActive
_onQueue_registerPlaybackQueueDataSourceCallbacks:
_onQueue_registerLyricsDelegateCallbacks:
invalidatePlaybackQueueWithCompletion:
_invalidatePlaybackQueueImmediatelyWithCompletion:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
playbackQueueDataSource
nowPlayingInfoCenter:artworkCatalogForContentItem:
_onDataSourceQueue_artworkCatalogForContentItem:
msv_errorWithDomain:code:debugDescription:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
replaceObjectsInRange:withObjectsFromArray:
_onDataSourceQueue_getContentItemIDsInRange:completion:
_contentItemForIdentifier:alreadyOnDataSourceQueue:
nowPlayingInfoCenter:contentItemForID:
performSuppressingChangeNotifications:
_contentItemIDsInRange:itemsRange:
playbackQueueIdentifierForNowPlayingInfoCenter:
_contentItemForIdentifier:
_mergeContentItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
requestWithIdentifier:preferredSessionType:
stringByAppendingPathExtension:
responseWithIdentifier:sessionType:data:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
_onQueue_pushContentItemsUpdate
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
nowPlayingInfoCenter:contentItemIDForOffset:
contentItemForOffset:
nowPlayingInfoCenter:didEndLyricsEvent:
_onQueue_clearPlaybackQueueDataSourceCallbacks
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
sessionType
_getTransportablePlaybackSessionRepresentationWithIdentifier:preferredSessionType:completion:
_createPlaybackQueueForRequest:
_childContentItemForContentItem:index:
_initWithMediaRemoteContentItem:
_getMetadataForContentItem:completion:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:lyricsForContentItem:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
setInfo:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
setAvailableLanguageOptions:
setCurrentLanguageOptions:
infoCenterForPlayerID:
setPlaybackState:
playerID
becomeActiveSystemFallback
setRepresentedApplicationBundleIdentifier:
setPlaybackQueueDataSource:
setLyricsDelegate:
lyricsDelegate
invalidatePlaybackQueue
nowPlayingContentItem
setNowPlayingContentItem:
setDataSourceQueue:
_becomeActiveIfPossibleWithCompletion:
playbackQueueDelegate
setPlaybackQueueDelegate:
playerPath
representedApplicationBundleIdentifier
dataSourceQueue
_nowPlayingInfo
_queuedNowPlayingInfo
_convertedNowPlayingInfo
_pushDate
_publishedContext
_mutatedPlaybackQueueRequests
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIdentifiers
_contentItems
_nowPlayingContentItem
_playbackState
_utilityQueue
_artworkResizeUtility
_contentItemInvalidationTimer
_playbackQueueDataSource
_lyricsDelegate
_callbacks
_fallbackActivity
_playbackQueueDelegate
_playerPath
_representedApplicationBundleIdentifier
_dataSourceQueue
T@"<MPNowPlayingPlaybackQueueDelegate>",W,N,V_playbackQueueDelegate
T@"MRPlayerPath",R,N,V_playerPath
T@"NSString",C,N,V_representedApplicationBundleIdentifier
T@"<MPNowPlayingPlaybackQueueDataSource>",W,N
T@"MPNowPlayingContentItem",&,N
T@"<MPNowPlayingInfoLyricsDelegate>",W,N
T@"NSObject<OS_dispatch_queue>",&,N,V_dataSourceQueue
nowPlayingInfo
preferredSessionType
_preferredSessionType
T@"NSString",R,N,V_preferredSessionType
_sessionType
_data
T@"NSString",R,N,V_sessionType
T@"NSData",R,N,V_data
_indexProperties
_lookupPropertyForSelector:result:
resolveInstanceMethod:
_isModelKey:
valueForModelKey:
valueForUndefinedKey:
setValue:forUndefinedKey:
_sanitizedStorage
setWithCapacity:
copyWithIdentifiers:propertySet:
copyWithPropertySet:
hasLoadedValuesForPropertySet:
bidirectionalDictionary
keyForObject:
_modelKeyForPropertySelector:
initWithIdentifiers:
copyWithIdentifiers:
originalIdentifierSet
mergeWithObject:
_originalIdentifierSet
_isFinalized
T@"MPIdentifierSet",R,N
_initWithModelClass:
_kindWithModelClass:cacheKey:block:
T@"MPModelKind",R,N
_modelClass
T#,R,N,V_modelClass
shortValue
unsignedCharValue
unsignedShortValue
unsignedLongValue
numberWithShort:
numberWithLong:
numberWithUnsignedChar:
numberWithUnsignedLong:
uppercaseString
replaceCharactersInRange:withString:
setArtwork:
artworkData
setArtworkData:
_artworkIdentifier
_artwork
_artworkData
T@"NSString",C,N,V_artworkIdentifier
T@"MPMediaItemArtwork",&,N,V_artwork
T@"NSData",&,N,V_artworkData
_onQueue_pushNowPlayingInfoAndRetry:
setNowPlayingInfo:
libraryRemovalSupportedOptions
requiredLibraryRemovalProperties
supportsLibraryRemoval
newKeepLocalStatusObserverConfiguration
eventWithCommand:options:
actionWithTitle:type:commandEvent:
initWithMediaRemoteType:
event
mediaRemoteType
initWithMediaRemoteCommandType:
_mediaRemoteType
T@"MRSendCommandHandlerDialogAction",R,C,N,V_mediaRemoteType
T@"MPRemoteCommandEvent",R,N
dialogWithTitle:message:
localizedMessage
actions
setLocalizedMessage:
msv_map:
T@"MRSendCommandHandlerDialog",R,C,N,V_mediaRemoteType
carrierBundlingStatusType
initWithICSubscriptionStatus:
isDefinitiveInformation
hasPlaybackCapability
requiresCarrierManualVerification
shouldUseLease
shouldUseAccountLessStreaming
shouldRequirePlaybackAuthorizationTokensForPlayback
_subscriptionStatusObject
_definitiveInformation
_hasPlaybackCapability
_requiresCarrierManualVerification
_shouldUseLease
_shouldUseAccountLessStreaming
_shouldRequirePlaybackAuthorizationTokensForPlayback
definitiveInformation
TB,R,N,GisDefinitiveInformation,V_definitiveInformation
TB,R,N,V_hasPlaybackCapability
TB,R,N,V_requiresCarrierManualVerification
TB,R,N,V_shouldUseLease
TB,R,N,V_shouldUseAccountLessStreaming
TB,R,N,V_shouldRequirePlaybackAuthorizationTokensForPlayback
initWithHomeSharingLibrary:
homeSharingLibrary
browser:didAddLibrary:
browser:didRemoveLibrary:
homeSharingGroupID
homeSharingBrowserWithGroupID:
_determineHomeSharingGroupIDWithCompletionHandler:
defaultStore
urlForRequest:
_homeSharingGroupIDDidChangeNotification:
_homeSharingLibraryDidUpdateRevisionNumber:
_homeSharingLibraryDidBecomeUnavailable:
isSupportedSharingVersion
hs_homeSharingErrorWithCode:userInfo:
connectionState
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithPath:
_fetchTokensForAuthorizedDSIDs
removeAllRentalsForDatabaseID:
removeItemAtPath:error:
buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:progressHandler:
_fillContainerForQueryCriteria:completionBlock:
requestWithDatabaseID:itemID:
setValue:forArgument:
responseCode
sendRequest:withResponseHandler:
punctuationCharacterSet
stringByTrimmingCharactersInSet:
requestWithDatabaseID:itemID:format:
initWithItemID:homeSharingID:rentalID:accountID:
setDataProvider:
_tokenDataForAccountID:
initWithKeybagURL:accountID:accountTokenData:downloaderAccountID:downloaderAccountTokenData:familyAccountID:
initWithKeybagURL:accountID:accountTokenData:
fileURLWithPath:
isScanningForLibraries
checkForChangesInHomeSharingLibrary:completionHandler:
initWithLength:
mutableBytes
determineGroupIDWithCompletionHandler:
deviceGUID
authorizedDSIDs
requestWithDSID:deviceGUID:
tokenData
setTokenData:forAuthorizedDSID:
fillContainerForHomeSharingLibrary:containerID:completionHandler:
setRentalPlaybackStartDateForItemID:
_homeSharingLibrary
_tokenDataForDSIDs
_loadedContainerPIDs
_blocksForLoadingContainerPIDs
_containerFillQueue
T@"HSHomeSharingLibrary",R,N,V_homeSharingLibrary
setShortName:
setCuratorKind:
setCuratorSubKind:
setBrandLogoArtworkCatalogBlock:
_requestedCuratorProperties
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
_elapsedTime
_live
_rate
TB,R,N,GisLive,V_live
Tf,R,N,V_rate
Tq,R,N,V_state
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
_index
T@"NSString",R,N,V_artworkIdentifier
Tq,R,N,V_index
Tq,R,N,V_count
removedItemIdentifiers
_removedItemIdentifiers
T@"NSDictionary",R,N,V_insertedDescriptors
T@"NSArray",R,N,V_removedItemIdentifiers
setHasShuffleMode:
setHasContentItemIDs:
setContentItemIDs:
_hasQueueDescriptor
_hasNowPlaying
_hasTimeSnapshot
_hasRepeatMode
_hasShuffleMode
_hasContentItemIDs
_queueDidChange
_itemDidEnd
_queueDidEnd
_timeSnapshot
_contentItemIDs
TB,N,V_hasQueueDescriptor
T@"MPMusicPlayerQueueDescriptor",&,N,V_queueDescriptor
TB,N,V_hasNowPlaying
T@"MPMusicPlayerControllerNowPlaying",&,N,V_nowPlaying
TB,N,V_hasTimeSnapshot
T@"MPMusicPlayerControllerNowPlayingTimeSnapshot",&,N,V_timeSnapshot
TB,N,V_hasRepeatMode
TB,N,V_hasShuffleMode
Tq,N,V_shuffleMode
TB,N,V_hasContentItemIDs
T@"NSArray",C,N,V_contentItemIDs
TB,N,V_queueDidChange
TB,N,V_itemDidEnd
TB,N,V_queueDidEnd
registerClass:
baseURL
client
URLProtocol:didFailWithError:
initWithURL:MIMEType:expectedContentLength:textEncodingName:
allHTTPHeaderFields
securityInfoForURL:
setAllHTTPHeaderFields:
URLProtocol:wasRedirectedToRequest:redirectResponse:
URLProtocolDidFinishLoading:
canInitWithRequest:
canonicalRequestForRequest:
startLoading
stopLoading
springCubicTimingParameters
standardTimingParameters
cubicTimingParameters
_springCubicTimingParameters
T@"UICubicTimingParameters",C,N,V_springCubicTimingParameters
_basicAnimationForView:withKeyPath:
timingParameters
_mediaTimingFunction
setTimingFunction:
standardSpringAnimator
initWithLibrary:identifier:entityType:artworkType:mediaType:
_onQueue_musicLibrary
_onQueue_updateTokens
artworkType
entityType
retrievalTime
retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:
artworkTokenParameters
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSource
libraryArtwork
setLibraryArtwork:
musicLibrary
clearFailedFetchableToken
promoteFetchableArtworkTokenIfNeeded
_mediaType
_hasRetrievedTokens
_retrievalTime
_availableArtworkToken
_fetchableArtworkToken
_fetchableArtworkSource
_entityType
_artworkType
_libraryArtwork
Tq,R,N,V_artworkType
TQ,R,N,V_libraryID
Tq,R,N,V_entityType
T@"MPMediaLibraryArtwork",R,N,V_libraryArtwork
Td,N,V_retrievalTime
T@"NSString",C,N,V_availableArtworkToken
T@"NSString",C,N,V_fetchableArtworkToken
T@"NSNumber",C,N,V_fetchableArtworkSource
isArtworkTokenAvailable:
initWithToken:artworkType:musicLibrary:
availableArtworkWithRequest:
loadArtworkForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
deprioritizeArtworkRequestForEntityPersistentID:entityType:artworkType:artworkSourceType:
sourceType
loadArtworkInfoForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
imageFileURLForSize:
fileURLForSize:
fileURLForEffect:
systemConfiguration
supportedSizesForMediaType:artworkType:
interestDictionary
setInterestDictionary:
artworkExistsForRequest:
needsToFetchArtworkForRequest:
fetchArtworkForRequest:completionHandler:
cancelFetchingArtworkForRequest:
fetchArtworkInfoForRequest:completionHandler:
originalFileURL
imageFileURLForEffect:
validSizes
effectsMetadata
setEffectsMetadata:
stateLock
_stateLock
_validSizes
T@"MPMediaLibraryArtworkRequest",W,N,V_artworkRequest
T@"ML3Artwork",&,N,V_artwork
T{os_unfair_lock_s=I},R,N,V_stateLock
T@"NSArray",R,N,V_validSizes
MP_artworkType
setSagaAccountID:
sagaLastItemPlayDataUploadDate
setSagaLastItemPlayDataUploadDate:
sagaLastPlaylistPlayDataUploadDate
setSagaLastPlaylistPlayDataUploadDate:
sagaDatabaseUserVersion
setSagaDatabaseUserVersion:
storefrontIdentifier
setStorefrontIdentifier:
setSagaOnDiskDatabaseRevision:
sagaLastLibraryUpdateTime
setSagaLastLibraryUpdateTime:
sagaLastSubscribedContainersUpdateTime
setSagaLastSubscribedContainersUpdateTime:
clearSagaCloudAccountID
clearSagaLastItemPlayDataUploadDate
clearSagaLastPlaylistPlayDataUploadDate
T@"NSNumber",C,N
initWithPlaylist:
T@"MPModelPlaylist",R,N,V_playlist
prefersInMemoryDatabase
initWithMemory
URLsForDirectory:inDomains:
URLByDeletingPathExtension
initWithURL:error:
_initWithDatabaseCreationBlock:
database:didFinishImportRequest:
database:didFailImportRequest:withErrror:
_payloadForIdentifierSet:outError:
JSONObjectWithData:options:error:
modelGenericObjectFromObject:playbackAuthorizationToken:
statementWithString:error:
bindStringValue:toParameterNamed:
executeStatement:error:
prioritizedStoreStringIdentifiersForPersonID:
resultsForStatement:
nextObjectWithError:
stringValueAtColumnIndex:
_assetsMatchingIdentifierSet:query:
_playbackAuthorizationTokenForIdentifier:trustID:
doubleValueAtColumnIndex:
initWithSQLRowResult:
bindInt64Value:toParameterNamed:
jsonValueAtColumnIndex:error:
_createDatabaseSchema
int64ValueAtColumnIndex:
jsonDataAtColumnIndex:
setPrefersInMemoryDatabase:
T@"MPServerObjectDatabase",R,N
importObjectsFromRequest:options:error:
modelObjectMatchingIdentifierSet:propertySet:
purgeGlideSubscriptionDataForHashedAccoundID:
removePlaybackAuthorizationTokensForTrust:
relatedIdentifierSetsForParentIdentifierSet:childKey:
relatedIdentifierSetsForParentIdentifierSet:parentVersionHash:childKey:
assetsMatchingIdentifierSet:
assetsWithMiniSINFsMatchingIdentifierSet:
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
importAssetsFromRequest:error:
payloadDataForIdentifierSet:outError:
_database
_observers
_observersLock
transactionWithName:
commit
mp_deepMerge:
bindJSONValue:toParameterNamed:error:
_existingAssetMatchingIdentifier:hashedPersonID:flavor:
miniSINF
isEqualToData:
_importAssetMiniSINF:forIdentifier:hashedPersonID:flavor:
sinfs
_importAssetFullSINF:forIdentifier:hashedPersonID:flavor:
bindDataValue:toParameterNamed:
removeRelationshipsForParentIdentifiers:childKey:
_transaction
_selectExistingObjectStatement
_insertObjectStatement
_insertObjectRelationshipStatement
_insertAssetURLStatement
_removeRelationshipsStatement
_updateMiniSINFStatement
_updateSINFStatement
_insertPlaybackAuthorizationTokenStatement
_updateAssetURLStatement
_initWithIdentifier:hashedPersonID:flavor:url:miniSINF:sinfs:
dataValueAtColumnIndex:
initWithIdentifier:hashedPersonID:flavor:url:miniSINF:
initWithIdentifier:hashedPersonID:flavor:url:sinfs:
hashedPersonID
_flavor
_url
_miniSINF
_sinfs
T@"NSString",R,C,N,V_hashedPersonID
Tq,R,N,V_flavor
T@"NSURL",R,C,N,V_url
T@"NSData",R,C,N,V_miniSINF
T@"NSArray",R,C,N,V_sinfs
URLRequest
URLRequests
requestedItemIdentifiers
itemMetadataRequestReason
_URLRequests
_requestedItemIdentifiers
_itemMetadataRequestReason
T@"NSURLRequest",R,C,N
T@"NSArray",R,C,N,V_URLRequests
T@"NSArray",R,N,V_requestedItemIdentifiers
TQ,R,N,V_itemMetadataRequestReason
dictionaryWithContentsOfFile:
_saveRentals
initWithAccountIdentifier:rentalKeyIdentifier:
startWithCompletionBlock:
removeRentalWithItemID:
writeToFile:atomically:
addRentalWithItemID:databaseID:
_rentalTrackerQueue
_rentals
contentLimitsEnforced
contentLimitsEnabled
enforcedContentItemsCount
enforcedContentTreeDepth
endpointAvailable
_contentLimitsEnforced
_endpointAvailable
_enforcedContentItemsCount
_enforcedContentTreeDepth
Tq,N,V_enforcedContentItemsCount
Tq,N,V_enforcedContentTreeDepth
TB,N,V_contentLimitsEnforced
TB,N,V_endpointAvailable
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:storeURLBag:isListenNow:
initializeRequestedGroupProperties
setGroupType:
modelObjectForRecommendationChildDictionary:parentGroup:subgroupsAccumulator:userIdentity:
setSectionIndex:
setRecommendationID:
setHrefURL:
setGroupRecommendation:
setDisplaysAsTitledSectionWithRowsInCarPlay:
setLastUpdatedDate:
requestedGroupPropertySet
requestedItemPropertySet
storeItemMetadataResults
flatSectionedItems
_requestedGroupProperties
_itemBuilder
_lastUpdatedDateFormatter
_isListenNow
_requestedGroupPropertySet
_requestedItemPropertySet
_storeItemMetadataResults
_flatSectionedItems
T@"MPPropertySet",R,N,V_requestedGroupPropertySet
T@"MPPropertySet",R,N,V_requestedItemPropertySet
T@"NSDictionary",R,N,V_storeItemMetadataResults
T@"MPMutableSectionedCollection",R,N,V_flatSectionedItems
kindWithVariants:songKind:
kindWithPlaylistEntryKind:options:
filterAvailableContentGroups:withOptions:
_errorIsFairPlayError:
_performMachineAuthorization
bodyData
_processNextAuthorizationRequest
initWithAuthorizationToken:accountIdentifier:
setKeybagPath:
request:didFailWithError:
requestDidFinish:
authorizationRequest:didReceiveResponse:
_keybagURL
_accountID
_accountTokenData
_downloaderAccountID
_downloaderAccountTokenData
_familyAccountID
_requests
_activeRequest
_atLeastOneAuthorizationRequestSuccessful
T@"MPHomeSharingML3DataProvider",&,N,V_dataProvider
initWithPAApplication:
_activeCommands
commandInfoRepresentations
msv_flatMap:
_startMediaRemoteSync
_stopMediaRemoteSync
_scheduleSupportedCommandsChanged
newCommandEventWithCommandType:options:
dispatchCommandEvent:completion:
invokeCommandWithEvent:completion:
skipSerializedEventDelivery
_flushEventQueue
wantsSerializedEventDelivery
_updateCanBeNowPlayingApplicationIfNeeded
_createRemoteCommandWithConcreteClass:mediaRemoteType:
setCommandCenterDelegate:
hasTargets
commandCenterDelegate
_pushMediaRemoteCommand:withOptions:completion:
_commandTargetsDidChangeNotification:
updateLaunchCommandsWithConfigurationHandler:
sharedCommandCenter
commandCenterForPlayerID:
_numberOfCommandCentersWithTargets
getPendingCommandTypesWithCompletion:
remoteCommandDidMutatePropagatableProperty:
commandHandlersRegistered
canBeNowPlayingApplication
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
enableLanguageOptionCommand
disableLanguageOptionCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
changePlaybackRateCommand
likeCommand
dislikeCommand
bookmarkCommand
changePlaybackPositionCommand
changeRepeatModeCommand
changeShuffleModeCommand
specialSeekForwardCommand
specialSeekBackwardCommand
advanceShuffleModeCommand
advanceRepeatModeCommand
createRadioStationCommand
setPlaybackQueueCommand
prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
removeFromPlaybackQueueCommand
reorderQueueCommand
playItemInQueueCommand
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
setPlaybackSessionCommand
preloadPlaybackSessionCommand
setPriorityForPlaybackSessionCommand
discardPlaybackSessionCommand
reshuffleCommand
changeQueueEndActionCommand
leaveSharedPlaybackSessionCommand
postEventNoticeCommand
containsCommand:
disableAutomaticCanBeNowPlaying
setWantsSerializedEventDelivery:
_mediaRemoteCommandHandler
_scheduledSupportedCommandsChangedNotification
_commandHandlersRegistered
_canBeNowPlayingApplication
_processingEvent
_stateHandler
_disableAutomaticCanBeNowPlaying
_wantsSerializedEventDelivery
_pauseCommand
_playCommand
_stopCommand
_togglePlayPauseCommand
_enableLanguageOptionCommand
_disableLanguageOptionCommand
_nextTrackCommand
_previousTrackCommand
_skipForwardCommand
_skipBackwardCommand
_seekForwardCommand
_seekBackwardCommand
_ratingCommand
_changePlaybackRateCommand
_likeCommand
_dislikeCommand
_bookmarkCommand
_changePlaybackPositionCommand
_changeRepeatModeCommand
_changeShuffleModeCommand
_specialSeekForwardCommand
_specialSeekBackwardCommand
_advanceShuffleModeCommand
_advanceRepeatModeCommand
_createRadioStationCommand
_setPlaybackQueueCommand
_prepareForSetPlaybackQueueCommand
_insertIntoPlaybackQueueCommand
_removeFromPlaybackQueueCommand
_reorderQueueCommand
_playItemInQueueCommand
_addNowPlayingItemToLibraryCommand
_addItemToLibraryCommand
_setPlaybackSessionCommand
_preloadPlaybackSessionCommand
_setPriorityForPlaybackSessionCommand
_discardPlaybackSessionCommand
_reshuffleCommand
_changeQueueEndActionCommand
_leaveSharedPlaybackSessionCommand
_postEventNoticeCommand
T@"MPRemoteCommand",R,N,V_specialSeekForwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekBackwardCommand
T@"MPAdvanceShuffleModeCommand",R,N,V_advanceShuffleModeCommand
T@"MPAdvanceRepeatModeCommand",R,N,V_advanceRepeatModeCommand
T@"MPRemoteCommand",R,N,V_removeFromPlaybackQueueCommand
T@"MPReorderQueueCommand",R,N,V_reorderQueueCommand
T@"MPRemoteCommand",R,N,V_playItemInQueueCommand
T@"MPRemoteCommand",R,N,V_createRadioStationCommand
T@"MPSetPlaybackQueueCommand",R,N,V_setPlaybackQueueCommand
T@"MPRemoteCommand",R,N,V_prepareForSetPlaybackQueueCommand
T@"MPInsertIntoPlaybackQueueCommand",R,N,V_insertIntoPlaybackQueueCommand
T@"MPFeedbackCommand",R,N,V_addNowPlayingItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addItemToLibraryCommand
T@"MPSetPlaybackSessionCommand",R,N,V_setPlaybackSessionCommand
T@"MPPreloadPlaybackSessionCommand",R,N,V_preloadPlaybackSessionCommand
T@"MPSetPriorityForPlaybackSessionCommand",R,N,V_setPriorityForPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_discardPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_reshuffleCommand
T@"MPChangeQueueEndActionCommand",R,N,V_changeQueueEndActionCommand
T@"MPRemoteCommand",R,N,V_leaveSharedPlaybackSessionCommand
T@"MPRemoteCommand",R,N,V_postEventNoticeCommand
T@"MRPlayerPath",R,C,N,V_playerPath
TB,N,V_disableAutomaticCanBeNowPlaying
TB,N,V_wantsSerializedEventDelivery
T@"MPRemoteCommand",R,N,V_pauseCommand
T@"MPRemoteCommand",R,N,V_playCommand
T@"MPRemoteCommand",R,N,V_stopCommand
T@"MPRemoteCommand",R,N,V_togglePlayPauseCommand
T@"MPRemoteCommand",R,N,V_enableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_disableLanguageOptionCommand
T@"MPChangePlaybackRateCommand",R,N,V_changePlaybackRateCommand
T@"MPChangeRepeatModeCommand",R,N,V_changeRepeatModeCommand
T@"MPChangeShuffleModeCommand",R,N,V_changeShuffleModeCommand
T@"MPRemoteCommand",R,N,V_nextTrackCommand
T@"MPRemoteCommand",R,N,V_previousTrackCommand
T@"MPSkipIntervalCommand",R,N,V_skipForwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipBackwardCommand
T@"MPRemoteCommand",R,N,V_seekForwardCommand
T@"MPRemoteCommand",R,N,V_seekBackwardCommand
T@"MPChangePlaybackPositionCommand",R,N,V_changePlaybackPositionCommand
T@"MPRatingCommand",R,N,V_ratingCommand
T@"MPFeedbackCommand",R,N,V_likeCommand
T@"MPFeedbackCommand",R,N,V_dislikeCommand
T@"MPFeedbackCommand",R,N,V_bookmarkCommand
_homeSharingID
_rentalID
TQ,R,N,V_itemID
__available_KEY
__protectedContentSupportStorageFileURL_KEY
__URL_KEY
available
TB,D,N,GisAvailable
protectedContentSupportStorageFileURL
T@"MPModelLibraryHasPurchasesRequest",C,N,V_request
_additionalTrackMetadata
T@"NSDictionary",R,N,V_additionalTrackMetadata
_storeItem
T@"NSDictionary",R,N,V_lookupDictionary
initWithImportElements:usingCloudLibraryDestination:
_addToCloudLibrary
TB,R,N,V_addToCloudLibrary
T@"MPModelObject",R,N,V_referralObject
clientInterface
serviceInterface
exportedInterface
serviceViewControllerInterface
viewServiceDidTerminateWithError:
television
_television
T^v,R,N,V_television
initWithAVItem:completionHandler:
viewControllerForOrientation
setViewControllerForOrientation:
_viewControllerForOrientation
T@"UIViewController",W,N,V_viewControllerForOrientation
identifierSets
_identifierSets
T#,N,V_modelClass
T@"NSArray",C,N,V_identifierSets
setCachePolicy:
_produceResponseWithRecentlyPlayedArray:completion:
setMainTitle:
setDurationFromExternalMetadata:
setExplicitTrack:
setLikedStateEnabled:
setSupportsLikedState:
setTailPlaceholder:
_explicitTrack
_likeStateEnabled
_album
_artist
_durationFromExternalMetadata
_mainTitle
_artworkCatalogBlock
TB,N,GisTailPlaceholder,V_tailPlaceholder
T@"NSString",&,N,V_album
T@"NSString",&,N,V_artist
Td,N,V_durationFromExternalMetadata
TB,N,GisExplicitTrack,V_explicitTrack
TB,N,GisLikedStateEnabled,V_likeStateEnabled
T@"NSString",&,N,V_mainTitle
TB,N,V_supportsLikedState
T@?,C,N,V_artworkCatalogBlock
_relationshipKinds
T@"NSDictionary",R,N,V_relationshipKinds
setMediaClip:
setPodcast:
setPodcastEpisode:
relationshipKeyForGenericObjectType:
podcast
podcastEpisode
radioStationEvent
__playlistEntry_KEY
__tvEpisode_KEY
__podcast_KEY
__podcastEpisode_KEY
__radioStationEvent_KEY
T@"MPModelPlaylistEntry",&,D,N
T@"MPModelPodcast",&,D,N
T@"MPModelPodcastEpisode",&,D,N
T@"MPModelRadioStationEvent",R,D,N
genericObjectType
pathForResource:ofType:
dataWithContentsOfFile:
enumerateSectionUpdatesUsingBlock:
enumerateItemUpdatesUsingBlock:
enumerateSectionMovesUsingBlock:
updatedSections
removeSectionMoveFromIndex:
removeAllIndexes
removeItemMoveFromIndexPath:
lastIndex
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
T@"MPChangeDetails",R,N
setUpdatedSections:
setUpdatedItemIndexPaths:
enumerateSectionMovesWithBlock:
removeSectionUpdateForPreviousIndex:
enumerateItemMovesWithBlock:
removeItemUpdateForPreviousIndexPath:
insertedIndexes
deletedIndexes
updatedIndexes
enumerateMovesWithBlock:
enumerateMovesUsingBlock:
enumerateUpdatesUsingBlock:
isValidForPreviousCount:finalCount:reason:
_sectionMoves
_sectionUpdates
_updatedSectionMoveFromIndexes
_itemMoves
_itemUpdates
_updatedItemMoveFromIndexPaths
_isFlatCollection
_insertedSections
_deletedSections
_insertedItemIndexPaths
_deletedItemIndexPaths
T@"NSIndexSet",C,N,V_insertedSections
T@"NSIndexSet",C,N,V_deletedSections
T@"NSIndexSet",C,N
T@"NSArray",C,N,V_insertedItemIndexPaths
T@"NSArray",C,N,V_deletedItemIndexPaths
T@"NSIndexSet",R,C,N
modelObjectWithStorePlatformDictionary:userIdentity:
modelObjectWithStoreItemMetadata:
modelObjectWithStoreItemMetadata:sourceModelObject:
modelObjectWithStorePlatformDictionary:
_preventStoreItemMetadataCaching
TB,N,V_preventStoreItemMetadataCaching
informalMediaClipID
informalStaticAssetID
availableMediaCharacteristicsWithMediaSelectionOptions
mediaSelectionGroupForMediaCharacteristic:
makeNowPlayingInfoLanguageOptionGroup
languageOptions
createLanguageOptionGroups
selectedMediaOptionInMediaSelectionGroup:
makeNowPlayingInfoLanguageOption
createLanguageOptions
hasMediaCharacteristic:
mediaCharacteristics
extendedLanguageTag
displayName
_languageOptionIdentifier
initWithType:languageTag:characteristics:displayName:identifier:
defaultOption
allowsEmptySelection
initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
ICCloudItemIDList
cloudItemIDList
setCloudItemIDList:
_cloudItemIDList
T@"ICCloudItemIDList",&,N,V_cloudItemIDList
_controllerWithUserIdentity:createIfRequired:
initWithUserIdentity:
isMediaApplication
canShowCloudDownloadButtonsDidChangeNotification:
canShowCloudTracksDidChangeNotification:
isCellularDataRestrictedDidChangeNotification:
hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:
enableICMLErrorReasonChange:
observerWithDistributedName:localName:queue:
activeUserDidChangeNotification:
_loadIsSagaAuthenticatedWithCompletion:
cloudClient
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
canSetPlaylistProperty:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
_referralForModelObject:
addStoreItemWithAdamID:referral:toPlaylistWithPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
canSetItemProperty:
setAlbumProperties:forAlbumPersistentID:completionHandler:
addStoreItemWithAdamID:referral:completionHandler:
importItemArtworkForSagaID:completionHandler:
importItemArtworkForPurchaseHistoryID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importScreenshotForSagaID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
loadArtworkInfoForSagaID:completionHandler:
loadArtworkInfoForPurchaseHistoryID:completionHandler:
loadArtworkInfoForSubscriptionItemPersistentID:completionHandler:
loadScreenshotInfoForSagaID:completionHandler:
loadScreenshotInfoForPurchaseHistoryID:completionHandler:
loadScreenshotInfoForSubscriptionPersistentID:completionHandler:
loadArtworkInfoForContainerSagaID:completionHandler:
loadArtworkInfoForSubscriptionContainerPersistentID:completionHandler:
deprioritizeItemArtworkForSagaID:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeScreenshotForSagaID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
becomeActiveAndWaitUntilDone:
_becomeActiveAndWaitUntilDone:
_resignActive
_initializeUpdateInProgressState
loadUpdateProgressWithCompletionHandler:
loadJaliscoUpdateProgressWithCompletionHandler:
loadLastKnownEnableICMLErrorStatusWithCompletionHander:
isCloudEnabledValid
isAuthenticated
enableCloudLibraryWithPolicy:startInitialImport:completionHandler:
disableCloudLibraryWithReason:completionHandler:
isAutomaticDownloadsEnabledForMediaKindMusic
hasSetPreferenceForAutomaticDownloads
handleAutomaticDownloadPreferenceChangedForMediaKindMusic:withCompletionHandler:
setCloudAddToPlaylistBehavior:completionHandler:
setItemProperties:forPurchaseHistoryID:
updateJaliscoLibraryWithReason:completionHandler:
initWithRequestContext:seedItemID:isLibraryID:maxResultCount:
sharedCloudContentTasteRequestListener
setContentTaste:forMediaItem:storeIdentifier:configuration:timeStamp:withCompletionHandler:
setContentTaste:forAlbumStoreID:configuration:withCompletionHandler:
setLikedState:forPlaylistWithGlobalID:completion:
setContentTaste:forPlaylistGlobalID:configuration:withCompletionHandler:
setCloudEnabledValid:
setCloudEnabled:
isAuthenticatedWithCompletionHandler:
updateSagaInProgressChangedHandler
setCloudLibraryInitialImport:
isCloudLibraryUpdateInProgress
setCloudLibraryUpdateInProgress:
isCloudLibraryInitialImport
loadIsSagaUpdateInProgressWithCompletionHandler:
setUpdateSagaInProgressChangedHandler:
updateJaliscoInProgressChangedHandler
setJaliscoInitialImport:
isJaliscoUpdateInProgress
setJaliscoUpdateInProgress:
isJaliscoInitialImport
loadIsJaliscoUpdateInProgressWithCompletionHandler:
setUpdateJaliscoInProgressChangedHandler:
referralWithPlaylistGlobalID:
referralWithAlbumAdamID:
resignActive
migrateCellularDataPreferencesIfNeeded
T@"MPCloudController",R,N
authenticatedDidChangeNotification:
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
canDefaultMediaLibraryShowCloudContent
hasCloudLockerAccount
hasPurchaseHistoryAccount
updateSubscribedPlaylistWithSagaID:ignoreMinRefreshInterval:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:completionHandler:
isInitialImport
isUpdateInProgress
loadCloudMusicLibraryUpdateProgressWithCompletionHandler:
loadJaliscoLibraryUpdateProgressWithCompletionHandler:
isEnablingCloudLibraryDestructive
enableCloudLibraryWithOptions:completionHandler:
disableCloudLibraryWithCompletionHandler:
isAutomaticDownloadsEnabled
enableAutomaticDownloadsWithCompletionHandler:
disableAutomaticDownloadsWithCompletionHandler:
updateJaliscoMediaLibraryWithReason:completionHandler:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
cloudAvailabilityController
activeCount
setActiveCount:
preferencesChangedNotifyToken
setPreferencesChangedNotifyToken:
preferencesChangedNotifyTokenIsValid
setPreferencesChangedNotifyTokenIsValid:
cloudClientCallbackQueue
addToPlaylistBehaviorChangedObserver
setCanShowCloudDownloadButtons:
setCanDefaultMediaLibraryShowCloudContent:
setCanShowCloudMusic:
setCanShowCloudVideo:
setCloudLockerAccount:
setPurchaseHistoryAccount:
setUpdateInProgress:
setInitialImport:
_active
_cloudEnabled
_preferencesChangedNotifyTokenIsValid
_canShowCloudDownloadButtons
_canDefaultMediaLibraryShowCloudContent
_canShowCloudMusic
_canShowCloudVideo
_cloudEnabledValid
_cloudLockerAccount
_purchaseHistoryAccount
_updateInProgress
_initialImport
_cloudLibraryUpdateInProgress
_cloudLibraryInitialImport
_jaliscoUpdateInProgress
_jaliscoInitialImport
_preferencesChangedNotifyToken
_cloudClient
_cloudAvailabilityController
_activeCount
_cloudClientCallbackQueue
_addToPlaylistBehaviorChangedObserver
T@"NSObject<ICCloudAvailability>",R,N,V_cloudAvailabilityController
T@"ICConnectionConfiguration",R,N
Tq,N,V_activeCount
Ti,N,V_preferencesChangedNotifyToken
TB,N,V_preferencesChangedNotifyTokenIsValid
T@"NSObject<OS_dispatch_queue>",R,N,V_cloudClientCallbackQueue
T@"MSVDistributedNotificationObserver",R,N,V_addToPlaylistBehaviorChangedObserver
TB,N,V_canShowCloudDownloadButtons
TB,N,V_canDefaultMediaLibraryShowCloudContent
TB,N,V_canShowCloudMusic
TB,N,V_canShowCloudVideo
cloudEnabledValid
TB,N,GisCloudEnabledValid,V_cloudEnabledValid
cloudEnabled
TB,N,GisCloudEnabled,V_cloudEnabled
cloudLockerAccount
TB,N,GhasCloudLockerAccount,V_cloudLockerAccount
purchaseHistoryAccount
TB,N,GhasPurchaseHistoryAccount,V_purchaseHistoryAccount
updateInProgress
TB,N,GisUpdateInProgress,V_updateInProgress
initialImport
TB,N,GisInitialImport,V_initialImport
cloudLibraryUpdateInProgress
TB,N,GisCloudLibraryUpdateInProgress,V_cloudLibraryUpdateInProgress
cloudLibraryInitialImport
TB,N,GisCloudLibraryInitialImport,V_cloudLibraryInitialImport
jaliscoUpdateInProgress
TB,N,GisJaliscoUpdateInProgress,V_jaliscoUpdateInProgress
jaliscoInitialImport
TB,N,GisJaliscoInitialImport,V_jaliscoInitialImport
active
TB,R,N,GisActive,V_active
enhancedAudioAvailable
TB,R,N,GisEnhancedAudioAvailable
T@"ICCloudClient",R,N,V_cloudClient
T@"ICUserIdentity",R,N
enablingCloudLibraryDestructive
TB,R,N,GisEnablingCloudLibraryDestructive
T@"MPModelObject",C,N,V_referralObject
colorWithITColor:
_fallbackColorAnalysis
algorithm
_algorithm
Tq,R,N,V_algorithm
ITColor
getWhite:alpha:
getRed:green:blue:alpha:
_setUsesLegacyAutomaticWaitingBehavior:
setAppliesMediaSelectionCriteriaAutomatically:
setPreparesItemsForPlaybackAsynchronously:
_setPausesAudioVisualPlaybackInBackground:
_currentItemDidChangeNotification:
addBoundaryTimeObserverForTimes:queue:usingBlock:
advanceToNextItem
_externalProtectionStatus
prepareItem:withCompletionHandler:
setMediaSelectionCriteria:forMediaCharacteristic:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_resumePlayback:error:
setDefaultItemEQPresetType:
setExpectedAssetTypes:
_setPreferredLanguageList:
_setWantsVolumeChangesWhenPausedOrInactive:
isPlaybackQueueTransactionActive
playbackQueueCommitHandler
setPlaybackQueueCommitHandler:
rawRate
_allowsExternalPlaybackRevisionID
_isExternalPlaybackActive
_pausedForPlaybackQueueTransaction
_lastPickedRoute
_playbackQueueCommitHandler
_playbackQueueTransactionCount
_queuedOperations
_rateBeforePlaybackQueueTransaction
_routeDidChangeDuringPlaybackQueueTransaction
_status
_defaultItemEQPresetType
_outputObscuredDueToInsufficientExternalProtection
_usesAudioOnlyModeForExternalPlaybackRevisionID
_usesExternalPlaybackWhileExternalScreenIsActiveRevisionID
_rawRate
Tf,R,N,V_rawRate
Tq,N,V_defaultItemEQPresetType
T@"AVPlayerItem",R,N
T@?,C,N,V_playbackQueueCommitHandler
T@"AVPlayer",R,N
brandLogoArtworkCatalogBlock
__shortName_KEY
__curatorKind_KEY
__curatorSubKind_KEY
__brandLogoArtworkCatalogBlock_KEY
__handle_KEY
brandLogoArtworkCatalog
curatorKind
curatorSubKind
_tearDownTimeoutTimerSource
_handleTimeout
initWithIdentity:clientInfo:
serverEnvironment
serverCorrelationKey
_executeURLLoadWithRequest:storeURLBag:requestContext:
_executeItemMetadataLoadForRequestedItemIdentifiers:reason:requestContext:
_executeURLLoadWithRequests:storeURLBag:requestContext:
configurationForLoadingModelDataWithStoreBagDictionary:error:
identity
_URLLoadRequestWithRequest:requestContext:
highPrioritySession
authenticationOptions
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
dispatchAsync:
_childOperation
_startExecutingTimeStamp
_timeoutTimerSource
T@"MPStoreModelRequest",C,N,V_request
durationInFrames
setDurationInFrames:
encodingDelayInFrames
setEncodingDelayInFrames:
encodingDrainInFrames
setEncodingDrainInFrames:
heuristicInfo
setHeuristicInfo:
lastPacketsResync
setLastPacketsResync:
_encodingDelayInFrames
_encodingDrainInFrames
_heuristicInfo
_durationInFrames
_lastPacketsResync
TQ,N,V_durationInFrames
TI,N,V_encodingDelayInFrames
TI,N,V_encodingDrainInFrames
TI,N,V_heuristicInfo
TQ,N,V_lastPacketsResync
initWithUnpersonalizedContentDescriptors:
propertiesForItemAtIndexPath:
setProperties:forItemAtIndexPath:
_representedObjects
T@"MPSectionedCollection",R,N,V_unpersonalizedContentDescriptors
T@"MPSectionedCollection",&,N,V_representedObjects
_libraryResponseDidInvalidateNotification:
configureWithModelObject:
representedObjectResults
libraryResponse
_representedObjectResults
_libraryResponse
T@"MPSectionedCollection",&,N,V_representedObjectResults
T@"MPModelResponse",&,N,V_libraryResponse
playlistEntryKind
_playlistEntryKind
T@"MPModelPlaylistEntryKind",R,N,V_playlistEntryKind
tiledArtworkRequest
__hasCleanContent_KEY
__curatorPlaylist_KEY
__owner_KEY
__publicPlaylist_KEY
__visiblePlaylist_KEY
__subscribed_KEY
__userEditableComponents_KEY
__shareShortURL_KEY
__releaseDateComponents_KEY
__lastModifiedDateComponents_KEY
__tiledArtworkRequest_KEY
__cloudVersionHash_KEY
__versionHash_KEY
trackArtworkCatalogsWithCount:
tracksTiledArtworkCatalogWithRows:columns:
T@"MPModelCurator",C,D,N
curatorPlaylist
TB,D,N,GisCuratorPlaylist
owner
TB,D,N,GisOwner
publicPlaylist
TB,D,N,GisPublicPlaylist
visiblePlaylist
TB,D,N,GisVisiblePlaylist
subscribed
TB,D,N,GisSubscribed
userEditableComponents
shareShortURL
T@"NSDateComponents",C,D,N
lastModifiedDateComponents
cloudVersionHash
T@"MPTiledArtworkRequest",C,D,N
_requestURLFromBag:
_stringRepresentationForHTTPMethod:
_stringRepresentationForHTTPBodyType:
setHTTPBody:
_internalErrorForHTTPResponseCode:
_urlStringForKey:inBag:
T@"<MPStoreSocialRequestOperationDataSource>",R,N,V_dataSource
_onQueueUpdateEffectiveNetworkTypesForPlayback
_onQueueEffectiveNetworkTypeForAverageBitrate:
effectiveNetworkTypeForPlayback
lastAverageBitrate
_effectiveNetworkTypeForCloudPlayback
_networkType
_lastAverageBitrate
_onQueue_updateRequestID
_onQueue_reloadIfNeeded
_responseDidInvalidate:
controller:defersResponseReplacement:
setResponse:
setNeedsReload
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
controller:shouldRetryFailedRequestWithError:
_onQueue_scheduleRetryAfterInterval:
beginAutomaticResponseLoading
endAutomaticResponseLoading
setNeedsReloadForSignificantRequestChange
reloadIfNeeded
_numberOfObservers
_requestID
_shouldAutomaticallyLoad
_needsReload
_cancelToken
_retryInterval
_retryTimer
_lastError
_pendingResponse
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@,&,N,V_response
T@,&,N,V_request
T@"<MPRequestResponseControllerDelegate>",W,N,V_delegate
artworkCatalogsWithMaximumCount:
tiledArtworkCatalogWithRows:columns:
logicalLeaderFromOutputDevices:
logicalLeaderOutputDevice
_anyOutputDevicePassesMRFunction:
_anyOutputDevicePassesTest:
pickableRouteTypeForOutputDevice:
hostDeviceClass
producesLowFidelityAudio
_logicalLeaderOutputDevice
_outputDevices
T@"NSArray",R,N,V_outputDevices
T^v,R,N,V_logicalLeaderOutputDevice
groupLeader
TB,R,N,GisGroupLeader
removeProperty:
isGroupRecommendation
storeItemMetadataWithMusicAPIMetadataDictionary:
setUtterance:
setParentGroup:
setSubgroupIndex:
setBackedByStoreItemMetadata:
convertToStoreItemMetadataDictionary:
_requestedItemProperties
_subgroupBuilder
initWithUbiquitousIdentifier:
ubiquitousIdentifierWithUniqueStoreID:
setBookmarkTimestamp:
hasBeenPlayedModified
userPlayCountModified
bookmarkTimeModified
bookmarkTimestampModified
bookmarkTimestamp
_ubiquitousIdentifier
_bookmarkTimestamp
_bookmarkTime
_userPlayCount
T@"NSString",R,C,N,V_ubiquitousIdentifier
Td,N,V_bookmarkTimestamp
Td,N,V_bookmarkTime
TQ,N,V_userPlayCount
T@"NSError",C,N,V_error
_tileArtworkVisualIdenticalityIdentifiers
T@"NSArray",C,N,V_tileArtworkVisualIdenticalityIdentifiers
mapTableWithKeyOptions:valueOptions:
setIndex:
itemAtIndex:
firstIndex
objectsAtIndexes:
addIndexes:
removeObjectsAtIndexes:
indexSetWithIndexesInRange:
indexForItem:
replaceItemAndIdentifierSet:atIndex:
applyChanges:identifierSetLookupBlock:
identifierSetAtIndex:
identifierSetForItem:
itemForIdentifierSet:
T@"NSMutableArray",&,N,V_identifiers
T@"NSMutableArray",&,N,V_identifierSets
T@"NSMapTable",&,N,V_index
_postItemChangedNotificationWithDeltaBlock:
collectionIdentifier
directorName
localizedContentRating
profileIdentifier
seriesName
artworkURL
artworkURLTemplates
localizedDurationString
isAlwaysLiveItem
hasAlwaysLive
isAdvertisement
hasAdvertisement
isSteerable
hasSteerable
isLoading
hasLoading
numberOfChildren
legacyUniqueID
radioStationType
editingStyleFlags
elapsedTime
elapsedTimeTimestamp
calculatedElapsedTime
hasLanguageOptions
initWithMRLanguageOptionGroup:
availableLanguageOptions
mrLanguageOptionGroup
currentLanguageOptions
mrLanguageOption
hasDescription
hasArtwork
setSongTraits:
setAlbumTraits:
setPlaylistTraits:
preferredFormat
setPreferredFormat:
activeFormat
setActiveFormat:
activeFormatJustification
setActiveFormatJustification:
formatTierPreference
setFormatTierPreference:
initWithMediaRemoteAudioRoute:
audioRoute
setAudioRoute:
mediaRemoteAudioRoute
alternativeFormats
setAlternativeFormats:
shouldPushArtworkData
copyWithNewIdentifier:
setReleaseDate:
setCollectionIdentifier:
setDirectorName:
setLocalizedContentRating:
setProfileIdentifier:
setSeriesName:
setLocalizedDurationString:
setSeasonNumber:
setAdvertisement:
setSteerable:
setNumberOfChildren:
setPlaylistType:
setRadioStationType:
setEpisodeType:
auxiliaryNowPlayingInfo
setHasLanguageOptions:
invalidateLanguageOptions
setSections:
setHasDescription:
invalidateDescription
invalidateLyrics
invalidateArtwork
setExplicitItem:
isSharableItem
setSharableItem:
_sharableItem
T@"MPNowPlayingInfoLyricsItem",C,N
T@"MPMediaItemArtwork",&,D,N
sharableItem
TB,N,GisSharableItem,V_sharableItem
advertisement
TB,N,GisAdvertisement
steerable
TB,N,GisSteerable
loading
TB,N,GisLoading
T@"<MPNowPlayingContentItemArtworkDataSource>",&,N,V_artworkDataSource
T@"MPNowPlayingInfoAudioFormat",C,N
T@"MPNowPlayingInfoAudioRoute",C,N
TB,N,GisExplicitItem
alwaysLiveItem
TB,N,GisAlwaysLiveItem
userInterfaceLayoutDirection
laterDate:
T@"MPStoreAssetInfoPlaybackCache",R,N
addCachedResponse:forRequest:
updateForPlaybackOfFileAsset:fromResponse:
_accessOrderedRequests
_requestToCachedResponse
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
requestType
setRequestType:
setCloudUniversalLibraryID:
setStoreSubscriptionAdamID:
storeCloudID
setStoreCloudID:
setStorePurchasedAdamID:
storeRadioAdamID
setStoreRadioAdamID:
_delegatedAccountID
_redownloadParameters
_cloudUniversalLibraryID
_storeCloudID
_storePurchasedAdamID
_storeRadioAdamID
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
Tq,N,V_requestType
T@"NSString",C,N,V_redownloadParameters
T@"NSString",C,N,V_cloudUniversalLibraryID
Tq,N,V_storeSubscriptionAdamID
TQ,N,V_storeCloudID
Tq,N,V_storePurchasedAdamID
Tq,N,V_storeRadioAdamID
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@"NSMapTable",&,N
_middlewareOperationMap
_operations
allocWithProtocol:
methodSignature
methodReturnLength
getArgument:atIndex:
setReturnValue:
builderSelector
setBuilderSelector:
_builders
_middlewareEnumerator
_builderSelector
T:,N,V_builderSelector
numberOfArguments
setClientPlatformIdentifier:
setAuthenticationOptions:
_didSetTimeoutInterval
_clientPlatformIdentifier
_authenticationOptions
T@"NSString",C,N,V_clientVersion
T@"NSString",C,N,V_clientPlatformIdentifier
TQ,N,V_authenticationOptions
__bookmarkTime_KEY
__shouldRememberBookmarkTime_KEY
__hasBeenPlayed_KEY
__stopTime_KEY
__storeUbiquitousIdentifier_KEY
__userPlayCount_KEY
T@"NSNumber",C,D,N
hlsURL
initWithPlaybackContext:
getPlaybackContextWithCompletion:
_playbackContext
_replaceIntent
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:
setRefreshURL:
_stitchWithPreviousEntry:list:cloneIndex:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
_stitchPreviousEntry:toEntry:cloneIndex:
_stitchLastItemEntryToHeadEntry:branchList:
_encodeEntry:withExclusiveAccessToken:
encodableNextEntriesWithExclusiveAccessToken:
initWithSection:sectionedIdentifierList:existingItemIdentifiers:
reloadSection:completion:
_entryForPosition:withExclusiveAccessToken:
_loadDataSource:forSection:completion:
_dataSourceInsertItems:fromSection:afterEntry:withExclusiveAccessToken:
_performDelegateCalloutForSection:block:
automaticallyReversesNonDestructiveDataSourceEdits
_dataSourceMoveItem:inSection:afterEntry:withExclusiveAccessToken:
performWithExclusiveAccessAndReturnInteger:
addDataSource:section:afterHeadOfSection:completion:
allSectionIdentifiers
hasItem:inSection:
hasSection:
isDeletedItem:inSection:
dataSourceMoveItemToHead:inSection:
dataSourceMoveItem:afterItem:inSection:
dataSourceMoveItemToTail:inSection:
dataSourceUpdateSection:
dataSourceBeginTransationForSection:
dataSourceEndTransactinForSection:
_sectionDataSources
_tailEntryForSectionIdentifier:withExclusiveAccessToken:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
setAnnotationDelegate:
_itemCount
_startEntries
_sectionHeadEntryMap
_sectionTransactionCallouts
_automaticallyReversesNonDestructiveDataSourceEdits
_annotationDelegate
sectionDataSources
T@"NSDictionary",R,N,G_sectionDataSources
T@"<MPSectionedIdentifierListAnnotationDelegate>",W,N,V_annotationDelegate
T@"<MPSectionedIdentifierListDelegate>",W,N,V_delegate
TB,N,V_automaticallyReversesNonDestructiveDataSourceEdits
insertObjects:atIndexes:
updateItem:
insertItemsAtHead:
insertItemsAtTail:
insertItems:afterItem:
enumerateRangesUsingBlock:
moveItemToHead:
moveItem:afterItem:
moveItemToTail:
updateSection
applyChanges:itemLookupBlock:
mutableItemIdentifiers
setMutableItemIdentifiers:
_mutableItemIdentifiers
T@"NSMutableArray",&,N,V_mutableItemIdentifiers
T@"NSString",R,C,N,V_sectionIdentifier
T@"MPSectionedIdentifierList",R,W,N,V_sectionedIdentifierList
T@"MPSectionedIdentifierListItemEntry",&,N,V_rootEntry
T@"NSMutableSet",&,N,V_clonedEntries
positionForItem:inSection:
positionForHeadOfSection:
positionForTailOfSection:
setPlaylistUserImage:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
setPlaylistEntries:
setPlaylistDescription:
setPlaylistName:
setIsOwner:
setAuthorStoreIdentifier:
setParentPlaylist:
setShouldCreatePlaylist:
_shouldCreatePlaylist
_didSetPlaylistUserImage
_playlistEntries
_playlistDescription
_playlistName
_playlistUserImage
_publicPlaylist
_visiblePlaylist
_curatorPlaylist
_isOwner
_authorStoreIdentifier
_parentPlaylist
TB,R,N,V_didSetPlaylistUserImage
T@"MPSectionedCollection",C,N,V_playlistEntries
T@"NSString",C,N,V_playlistDescription
T@"NSString",C,N,V_playlistName
T@"UIImage",&,N,V_playlistUserImage
T@"NSNumber",C,N,GisPublicPlaylist,V_publicPlaylist
T@"NSNumber",C,N,GisVisiblePlaylist,V_visiblePlaylist
T@"NSNumber",C,N,GisCuratorPlaylist,V_curatorPlaylist
T@"NSNumber",C,N,V_isOwner
T@"NSString",C,N,V_authorStoreIdentifier
T@"MPModelPlaylist",&,N,V_parentPlaylist
TB,N,V_shouldCreatePlaylist
initWithRelatedMPModelClass:payloadTransformBlock:
mapRelationshipKey:toModelClass:payloadTransform:
routeSharingPolicy
_mediaControlsStyleForRouteSharingPolicy:
initWithConfiguration:shouldObserveRoutingContextUIDChanges:
_MPRouteSharingPolicyToAVRouteSharingPolicy:
_audioSessionRoutingContextDidChangeNotification
_updateAudioSessionRoutingContext
screen
coordinateSpace
convertRect:toCoordinateSpace:
archivedDataWithRootObject:requiringSecureCoding:error:
listener
_endpoint
_reset
anonymousListener
updateMediaControlsWithConfiguration:
openConnection
setDismissalReason:
_dismissalReasonString:
_shouldUpdateStyleForCurrentConfigurationStyle:
sourceView
setSourceView:
dismissHandler
setListener:
dismissHandlerWithReason
setDismissHandlerWithReason:
_shouldObserveRoutingContextUIDChanges
_dismissalReason
_sourceView
_dismissHandler
_dismissHandlerWithReason
T@"NSXPCListener",&,N,V_listener
T@"NSXPCConnection",&,N,V_connection
T@?,C,N,V_dismissHandlerWithReason
T@"UIView",&,N,V_sourceView
T@?,C,N,V_dismissHandler
_entityTranslator
_entityQueryResult
sharedNetworkObserver
T@"MPNetworkObserver",R,N
beginUsingNetwork
endUsingNetwork
isMusicCellularStreamingAllowed
setMusicCellularStreamingAllowed:
isVideoCellularStreamingAllowed
setVideoCellularStreamingAllowed:
isMusicCellularDownloadingAllowed
setMusicCellularDownloadingAllowed:
isStoreCellularNetworkingAllowed
isUsingNetwork
_musicCellularNetworkingAllowedNotifyToken
_videosPreferencesChangedToken
_networkUsageCount
_videosAllowsCellularStreaming
musicCellularStreamingAllowed
TB,N,GisMusicCellularStreamingAllowed
videoCellularStreamingAllowed
TB,N,GisVideoCellularStreamingAllowed
musicCellularDownloadingAllowed
TB,N,GisMusicCellularDownloadingAllowed
storeCellularNetworkingAllowed
TB,R,N,GisStoreCellularNetworkingAllowed
_roomURLWithRoomID:storeURLBag:
countForObject:
mediaSubTypes
mpIsOnlyAC3
mpIsSDH
initWithThrottlingEnabled:
discoverySessionConfiguration
setEnableThrottling:
discoverySessionWithConfiguration:
_endpointsDidChange:
addEndpointsChangedCallback:
removeEndpointsChangedCallback:
setTargetAudioSessionID:
initWithEndpointFeatures:
targetSessionID
availableEndpoints
setEndpointWrapper:
sharedLocalEndpointForRoutingContextWithUID:
endpointObject
setOutputDevices:initiator:withReplyQueue:completion:
setTargetSessionID:
setSerialQueue:
endpoints
setEndpoints:
_discoverySession
_callbackToken
_targetSessionID
_endpoints
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSMutableDictionary",&,N,V_endpoints
T@"MRAVRoutingDiscoverySessionConfiguration",R,N
isNullRef
setNullRef:
_nullRef
_refValue
nullRef
TB,N,GisNullRef,V_nullRef
Tr^v,R,N,V_refValue
startHandler
_startHandler
T@?,R,C,N,V_startHandler
storeAccountIdentifier
_storeAccountIdentifier
T@"NSNumber",R,C,N,V_storeAccountIdentifier
_applicationDidEnterForegroundNotification:
_defaultMediaLibraryDidChangeNotification:
_onServiceQueue_connectedUPPServiceProxy
_onServiceQueue_resignActiveService
_onServiceQueue_updateActiveServiceIfNeeded
_onQueue_shouldBeActive
_onServiceQueue_becomeActiveService
_onQueue_isEnabled
_playbackPositionEntityWithValuesFromMusicLibraryTrackPersistentID:
persistPlaybackPositionEntity:isCheckpoint:completionBlock:
playbackPositionForLocalEntityIdentifiers:
pullLocalPlaybackPositionForEntityIdentifiers:completionBlock:
playbackPositionDomain
initWithPlaybackPositionDomain:ubiquitousIdentifier:foreignDatabaseEntityID:
uppServiceProxy
domainForSyncingMusicLibraryWithLibraryPath:
serviceForSyncDomain:
beginAccessingPlaybackPositionEntities
endAccessingPlaybackPositionEntities
T@"MPUbiquitousPlaybackPositionController",R,N
beginUsingPlaybackPositionMetadata
noteChangedPlaybackPositionMetadataForTrackPersistentID:isCheckpoint:
setExternallyActive:
externallyActive
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
isServiceActive
setServiceActive:
setUppServiceProxy:
uppDomain
setUppDomain:
setBeganUsingPlaybackPositionMetadata:
databaseHasBookmarkableContents
setDatabaseHasBookmarkableContents:
applicationBecomingActive
_isServiceActive
_externallyActive
_beganUsingPlaybackPositionMetadata
_databaseHasBookmarkableContents
_applicationBecomingActive
_serviceQueue
_uppServiceProxy
_uppDomain
T@"NSObject<OS_dispatch_queue>",R,&,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_serviceQueue
T@"SBCPlaybackPositionSyncService",&,N,V_uppServiceProxy
T@"SBCPlaybackPositionDomain",&,N,V_uppDomain
serviceActive
TB,N,GisServiceActive,V_isServiceActive
beganUsingPlaybackPositionMetadata
TB,N,GisServiceActive,V_beganUsingPlaybackPositionMetadata
TB,N,V_databaseHasBookmarkableContents
TB,R,N,V_applicationBecomingActive
TB,N,V_externallyActive
threadDictionary
createExternalRepresentation
subtitle
playbackProgress
isContainer
isStreamingContent
isPlayable
_loadArtwork:completion:
isSuppressingChangeNotifications
performChangeImmediately:
initWithExternalRepresentation:
setSubtitle:
setPlaybackProgress:
setContainer:
setStreamingContent:
T^v,R,N,V_mediaRemoteContentItem
streamingContent
TB,N,GisStreamingContent
TB,N,GisExplicitContent
container
TB,N,GisContainer
playable
TB,N,GisPlayable
__hasSocialPosts_KEY
_allowsExplicitContentDidChangeNotification:
_cloudLibraryEnabledDidChangeNotification:
_subscriptionStatusDidChangeNotification:
_updateInProgressDidChangeNotification:
setConfiguration:identifyingModelObject:
capabilities
_needsStatusUpdate
_cloudController
_cloudServiceStatusController
Tq,R,N,V_currentStatus
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N,V_configuration
T@"MPModelObject",R,N,V_identifyingModelObject
__shortDescriptionText_KEY
_radioAvailabilityDidChangeNotification:
_radioRecentStationsDidChangeNotification:
_radioModelDidChangeNotification:
_radioModel
userStations
stationSortOrdering
stationWithID:
initWithRadioTrackDictionary:useArtist:
setIncludeCleanTracksOnly:
startWithAddStationCompletionHandler:
sharedModel
defaultRadioLibrary
stationCount
stationWithIdentifier:
addStationBasedOnTrackIDs:completion:
_radioController
initWithPersistentID:size:
requestWithDatabaseID:itemID:size:
signedRequestFromURLRequest:
artworkDataSourceIdentifier
T@"HSHomeSharingLibrary",&,N,V_library
_size
TQ,R,N,V_persistentID
T{CGSize=dd},R,N,V_size
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
languageOptionType
languageTag
languageOptionCharacteristics
copyExternalRepresentation
isEqualToLanguageOption:
_mrLanguageOption
T^v,R,N,V_mrLanguageOption
T@"NSString",R,D,N
T@"NSArray",R,D,N
defaultLanguageOption
allowEmptySelection
_mrLanguageOptionGroup
T^v,R,N,V_mrLanguageOptionGroup
T@"MPNowPlayingInfoLanguageOption",R,D,N
TB,R,D,N
stationDescription
initWithModelStation:
setUniqueIdentifier:
setLocalizedName:
localizedDescription
setLocalizedDescription:
_localizedName
_localizedDescription
T@"NSString",C,N,V_stationStringID
Tq,N,V_uniqueIdentifier
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_localizedDescription
expectedNotifications
receivedNotifications
_cancelNotificationTimerWithReason:
notificationTimer
_startNotificationTimerWithEventHandler:
setNotificationTimer:
setReceivedNotifications:
_expectedNotifications
_receivedNotifications
_notificationTimer
T@"NSSet",R,N,V_expectedNotifications
T@"NSMutableSet",&,N,V_receivedNotifications
T@"NSObject<OS_dispatch_source>",&,N,V_notificationTimer
T@"<_MPActiveUserChangeMonitorDelegate>",W,N,V_delegate
notifyPropagatablePropertyChanged
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
addTarget:action:usingExtendedStatus:
statusWithCode:error:
methodReturnType
methodForSelector:
statusWithCode:
successStatus
removeTarget:action:
setCommand:
_mediaRemoteCommandInfoOptions
disabledReason
_mediaRemoteCommandInfo
isSupportedForContentItemIdentifier:
isEnabledForContentItemIdentifier:
addTarget:action:
removeTarget:
addTargetWithHandler:
isSupportedAndEnabled
newCommandEvent
newCommandEventWithContentItemIdentifier:
newCommandEventWithPlaybackQueueOffset:
newSeekCommandEventWithType:
isObserving
setObserving:
setDisabledReason:
setTimeout:
setSkipSerializedEventDelivery:
_handlers
_observing
_skipSerializedEventDelivery
_mediaRemoteCommandType
_commandCenterDelegate
_disabledReason
T@"<MPRemoteCommandDelegate_Internal>",W,N,V_commandCenterDelegate
observing
TB,N,GisObserving,V_observing
supportedAndEnabled
TB,R,N,GisSupportedAndEnabled
Tq,N,V_disabledReason
Td,N,V_timeout
TI,R,N,V_mediaRemoteCommandType
T@"<MPRemoteCommandDelegate_Private>",W,N,V_delegate
TB,N,V_skipSerializedEventDelivery
TB,N,GisEnabled,V_enabled
setPreferredIntervals:
newCommandEventWithInterval:
preferredIntervals
_preferredIntervals
T@"NSArray",C,N,V_preferredIntervals
setLocalizedShortTitle:
presentationStyle
setPresentationStyle:
newCommandEventWithState:
localizedShortTitle
_presentationStyle
_localizedShortTitle
TB,N,GisActive,V_active
T@"NSString",C,N,V_localizedShortTitle
setMinimumRating:
setMaximumRating:
newCommandEventWithRating:
minimumRating
maximumRating
_minimumRating
_maximumRating
Tf,N,V_minimumRating
Tf,N,V_maximumRating
setSupportedPlaybackRates:
preferredRate
setPreferredRate:
newCommandEventWithPlaybackRate:
supportedPlaybackRates
_preferredRate
_supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
newCommandEventWithType:preservesRepeatMode:
setCurrentRepeatType:
setSupportedRepeatTypes:
newCommandEventWithType:
currentRepeatType
_supportedRepeatTypes
_currentRepeatType
Tq,N,V_currentRepeatType
newCommandEventWithType:preservesShuffleMode:
setCurrentShuffleType:
setSupportedShuffleTypes:
currentShuffleType
_supportedShuffleTypes
_currentShuffleType
Tq,N,V_currentShuffleType
registerSupportedQueueType:
setUpNextItemCount:
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
unregisterSupportedQueueType:
registerSupportedCustomQueueIdentifier:
unregisterSupportedCustomQueueIdentifier:
setSupportedSharedQueue:
upNextItemCount
_registeredSpecializedQueues
_registeredQueueTypes
_registeredCustomQueueIdentifiers
_supportsSharedQueue
_upNextItemCount
Tq,N,V_upNextItemCount
setCanBeControlledByScrubbing:
newCommandEventWithPositionTime:
canBeControlledByScrubbing
_canBeControlledByScrubbing
TB,N,V_canBeControlledByScrubbing
newCommandEventWithInsertingContentItemID:afterContentItemID:
setSupportedInsertionPositions:
T@"NSArray",C,N,V_supportedInsertionPositions
newCommandEventWithPreservesShuffleMode:
newCommandEventWithPreservesRepeatMode:
setCurrentPlaybackSessionIdentifier:
setExportableSessionTypes:
setSupportedSessionTypes:
currentPlaybackSessionIdentifier
currentPlaybackSessionRevision
setCurrentPlaybackSessionRevision:
exportableSessionTypes
supportedSessionTypes
_currentPlaybackSessionIdentifier
_currentPlaybackSessionRevision
_exportableSessionTypes
_supportedSessionTypes
T@"NSString",C,N,V_currentPlaybackSessionIdentifier
T@"NSString",C,N,V_currentPlaybackSessionRevision
T@"NSArray",C,N,V_exportableSessionTypes
T@"NSArray",C,N,V_supportedSessionTypes
commandInfoWithIdentifier:revision:priority:
T@"NSString",R,C,N,V_revision
setPreloadedSessions:
preloadedSessions
_preloadedSessions
T@"NSArray",C,N,V_preloadedSessions
setCurrentQueueEndAction:
setSupportedQueueEndActions:
currentQueueEndAction
supportedQueueEndActions
_currentQueueEndAction
_supportedQueueEndActions
Tq,N,V_currentQueueEndAction
T@"NSArray",C,N,V_supportedQueueEndActions
sectionedItems
sectionIndex
__groupType_KEY
__lastUpdatedDate_KEY
__sectionedItems_KEY
__sectionIndex_KEY
__subgroups_KEY
__loadAdditionalContentURL_KEY
__hrefURL_KEY
__refreshURL_KEY
__displaysAsGridCellInCarPlay_KEY
__displaysAsTitledSectionWithRowsInCarPlay_KEY
refreshURL
_refreshURL
_groupRecommendation
lastUpdatedDate
T@"NSDate",&,D,N
T@"MPSectionedCollection",&,D,N
hrefURL
groupRecommendation
TB,N,GisGroupRecommendation,V_groupRecommendation
displaysAsGridCellInCarPlay
displaysAsTitledSectionWithRowsInCarPlay
kinds
_kinds
T@"NSArray",R,N,V_kinds
__position_KEY
__socialContributor_KEY
___artworkCatalog_KEY
position
socialContributor
_artworkCatalog
T@"MPArtworkCatalog",&,D,N
statusWithCode:dialog:
statusWithCode:customData:type:
dialog
customDataType
customData
commandError
msv_analyticSignature
cacheStatus:forCommandID:
fetchStatusForCommandID:
T@"MPRemoteCommandStatus",R,N
analyticSignature
_dialog
T@"MRSendCommandResultStatus",R,C,N,V_mediaRemoteType
T@"MPRemoteCommandHandlerDialog",R,N
_parse
_populateStorePlatformDataResultsFromRawResponseOutputDictionary:
_parseUsingAdditionalContentIdentifiersFromPreviousParser
_populateUnavailableContentIdentifiersFromPageDataDictionary:
_parseFeaturedContentStructureModelChildren:
_parseSingleContentListFromPageDataDictionary:isMemberOfChartSet:
_parseFeaturedContentChild:isMemberOfChartSet:insertingResultsToSectionedCollection:atSectionIndex:additionalContentIdentifiers:allAdditionalContentIdentifiersNeedingLookup:
_storeItemMetadataForContentIdentifier:
_storeItemMetadataIsAvailableForContentIdentifier:
additionalContentIdentifiers
rawResponseOutput
previousParser
additionalStoreItemMetadataResponse
contentItemBuilder
_additionalContentIdentifiers
_allAdditionalContentIdentifiersNeedingLookup
_storePlatformDataResults
_unavailableContentIdentifiers
_previousParser
_additionalStoreItemMetadataResponse
T@,R,N,V_rawResponseOutput
T{?=BB},R,N,V_options
T@"MPModelStoreBrowseResponseParser",R,N,V_previousParser
T@"MPStoreItemMetadataResponse",R,N,V_additionalStoreItemMetadataResponse
T@"MPModelStoreBrowseSectionBuilder",R,N,V_sectionBuilder
T@"MPModelStoreBrowseContentItemBuilder",R,N,V_contentItemBuilder
T@"MPChangeDetails",R,N,V_changeDetails
enqueuerAccountIdentifier
_isGoodCacheKey
_slowGetCacheKeyWithRequest:completionHandler:
_fastGetCacheKeyWithRequest:completionHandler:
isEqualToNumber:
isDelegated
setEnqueuerAccountIdentifier:
setPersonalized:
localStoreAccountProperties
initWithURL:requestContext:
setAnisetteVersion:
setShouldUseMescalSigning:
ic_valueForHTTPHeaderField:
initWithLongLong:
buildURLRequestWithCompletionHandler:
_personalized
_accountIdentifier
_enqueuerAccountIdentifier
_storefrontIdentifier
T@"NSNumber",C,N,V_accountIdentifier
T@"NSNumber",C,N,V_enqueuerAccountIdentifier
TB,N,GisPersonalized,V_personalized
T@"NSString",C,N,V_storefrontIdentifier
writeInt32:forTag:
hasProperty
hasValue
hasComparisonType
setHasComparisonType:
T@"NSString",&,N,V_property
T@"MPPMediaPredicateValue",&,N,V_value
Ti,N,V_comparisonType
__sectionType_KEY
__uniformContentItemType_KEY
__memberOfChartSet_KEY
__brick_KEY
__previouslyRetrievedNestedResponse_KEY
containsOnlyEditorialElements
setContainsOnlyEditorialElements:
_containsOnlyEditorialElements
memberOfChartSet
TB,D,N,GisMemberOfChartSet
brick
TB,D,N,GisBrick
T@"MPModelStoreBrowseResponse",&,D,N
TB,N,V_containsOnlyEditorialElements
isSubsetOfSet:
containsPropertySet:
T@"NSSet",R,N,V_properties
T@"NSDictionary",R,N,V_relationships
addRelationship:properties:
removeRelationship:
storeItemMetadataForItemIdentifier:returningIsFinalMetadata:
allStoreItemDictionaries
cacheMissItemIdentifiers
earliestExpirationDate
_cacheMissItemIdentifiers
_itemIdentifierToStoreItemMetadata
_allStoreItemDictionaries
_finalResponse
_lastBatchItemIdentifiers
_requestItemIdentifiers
_performanceMetrics
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSArray",C,N,V_cacheMissItemIdentifiers
T@"NSArray",C,N,V_requestItemIdentifiers
T@"NSArray",C,N,V_lastBatchItemIdentifiers
T@"NSArray",&,N,V_performanceMetrics
screens
_isWorkspaceCapable
T@"MPModelTVEpisodeKind",R,N,V_episodeKind
__number_KEY
__episodesCount_KEY
__sortType_KEY
__representativeEpisode_KEY
episodesCount
sortType
representativeEpisode
_cancelButtonAction:
_setSeparatorBackdropOverlayBlendMode:
setTitleColor:forState:
_setVisualAltitude:
titleLabel
_updateDismissButtonText
initWithAVItemType:
_routingViewFrame
_cancelButtonFrame
_controlsViewFrame
setWindowLevel:
_updateRoutingSheetFrame
_animateControls:withCompletionHandler:
_animateUsingDefaultTimingWithOptions:animations:completion:
setTitle:forState:
_maxRoutingViewSize
safeAreaInsets
showInView:withCompletionHandler:
_presentationWindow
_dismissBackgroundButton
_dismissControlsViewButton
_controlsView
_cancelButton
_completionHandler
Tq,N,SsetAVItemType:
_isSecure
_canAffectStatusBarAppearance
setScopes:
setMaximumResultsPerScope:
_scopes
_maximumResultsPerScope
T@"NSArray",C,N,V_scopes
Tq,N,V_maximumResultsPerScope
hasMoreResultsForSectionAtIndex:
searchWeightForIndexPath:
scope
entityQueryResult
entityTranslationContext
resultContainers
_resultContainers
T@"NSArray",R,C,N,V_resultContainers
_scope
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_entityQueryResult
T@"MPModelLibrarySearchScope",R,C,N,V_scope
T@"MPMediaLibraryEntityTranslationContext",R,N,V_entityTranslationContext
predicateWithBaseProperty:
applyToView:withContext:
songKind
seasonKind
translatorForTransientMPModelClass:
mapIdentifierMLProperties:identifierCreationBlock:
setEntityQueryBlock:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:
translatorForMPModelClass:mlcoreEntityClass:
setSyncID:
setReportingAdamID:
setAssetAdamID:
setShouldExcludeFromShuffle:
syncID
setAllowedItemPredicatesBlock:
mapPropertyKey:toMLProperty:
mapPropertyKey:withPropertiesToFetch:valueTransformer:
_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering
mapPropertyKey:withPropertiesToFetch:propertiesToSort:sortTransformer:valueTransformer:
mapRelationshipKey:toModelClass:usingForeignPropertyBase:
stringByDeletingPathExtension
isMultiQuery
setContainedPersistentID:
setHandoffCorrelationID:
propertiesToFetchForPropertyKey:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:relationshipValidationProperties:isValidRelationshipHandler:
setScreen:
_presentationViewController
presentedViewController
rootViewController
setSizesWindowToScene:
isInternalWindow
presentAlertController:animated:completion:
_existingRepresentationForArtworkCatalog:fromCacheOnly:
_cachedRepresentationForCatalog:
_isRepresentation:validForCatalog:
_representationAtSize:forCatalog:
_cacheRepresentation:forCatalog:
_resizeArtwork:forCatalog:toSize:completionHandler:
_resizeOriginalArtworkForArtworkCatalog:completionHandler:
initWithArtworkType:availableArtworkToken:fetchableArtworkToken:
initWithContentsOfFile:
mediaLibraryUniqueIdentifier
fallbackCache
initWithArtworkCatalog:representativeSize:
_isRepresentationSize:validForFittingSize:
initWithSourceURL:
addJPEGDestinationWithSize:compressionQuality:url:
addDestinationWithFormat:size:url:
sendRequest:completionHandler:
artworkResizeUtility
setFallbackCache:
setArtworkResizeUtility:
_mediaLibraryUniqueIdentifier
T@"NSCache",&,N,V_fallbackCache
T@"MPArtworkResizeUtility",&,N,V_artworkResizeUtility
T@"NSString",C,N,V_mediaLibraryUniqueIdentifier
catalogIdentifier
setCatalogIdentifier:
_catalogIdentifier
T@,C,N,V_catalogIdentifier
T@"NSString",R,N,V_availableArtworkToken
T@"NSString",R,N,V_fetchableArtworkToken
firstMatchInString:options:range:
signatureWithCountryCode:adamID:startTime:endTime:language:
removeCharactersInString:
setPercentEncodedQueryItems:
setLength:
base64EncodedStringWithOptions:
initWithSong:language:startTime:endTime:
URLWithAdditionalParameters:completion:
_language
_countryCode
_signature
Td,R,N,V_startTime
Td,R,N,V_endTime
Tq,R,N,V_songAdamID
T@"NSString",R,N,V_language
T@"NSString",R,N,V_countryCode
T@"NSString",R,N,V_signature
__filePath_KEY
__fileSize_KEY
__nonPurgeable_KEY
__protectionType_KEY
__purchaseBundleFilePath_KEY
__qualityType_KEY
__hlsKeyServerURL_KEY
__hlsKeyServerProtocol_KEY
__hlsKeyCertificateURL_KEY
nonPurgeable
TB,D,N,GisNonPurgeable
purchaseBundleFilePath
qualityType
hlsKeyServerURL
T@"NSString",C,D,N,SsetHLSKeyServerURL:
hlsKeyServerProtocol
T@"NSString",C,D,N,SsetHLSKeyServerProtocol:
hlsKeyCertificateURL
T@"NSString",C,D,N,SsetHLSKeyCertificateURL:
albumArtistArtworkCatalog
artistArtworkCatalog
_artworkCatalogRepresentativeItem
artworkCatalogCachePropertiesForGroupingType:
_initWithEndpointRoute:
_generateDiscoverySession
removeOutputDevicesChangedCallback:
isLocalEndpoint
applicationOutputContext
_globalAudioSessionLock
setDidFinishLoading:
_personalRoutesDidChange
longFormVideoRoutingSessionManager
_outputDevicesDidChange:
addOutputDevicesChangedCallback:
isCompanionEndpoint
setDiscoverySession:
availableOutputDevices
setPredictedDevice:
logicalDeviceID
isLocalDevice
_setShouldSourceOutputDevicesFromAVODDS:
routingSessionManager
currentRoutingSession
outputDeviceDescriptions
deviceID
personalOutputDevices
activeAudioCategory
filterUsingPredicate:
filterMode
activeActivityExistsForBundle:
migrateToOrSetOutputDevices:initiator:withReplyQueue:completion:
_detachableDevicesInOutputDevices:
createGroupFromOutputDevices:queue:completion:
predictedDevice
_resetPredictedOutputDevice
createEndpointWithOutputDeviceUIDs:queue:completion:
outputDevicesForRoutes:
_shouldAddPredictedDeviceToOuputDevices:
migrateToOrAddOutputDevices:initiator:withReplyQueue:completion:
addOutputDevices:initiator:withReplyQueue:completion:
_isRemovingPredictedDevice:
_outputDeviceRouteWithUID:
isEligibleForWHAPlayback
msv_filter:
_shouldDetachOutputDevicesToGroup:
isGroupable
supportsBluetoothSharing
_outputDevicesDidChangeNotification:
initWithEndpointRoute:
setCompanionDiscoverySession:
addRouteToGroup:completion:
removeRouteFromGroup:completion:
_endpointsDidChangeNotification:
setApplicationOutputContext:
setSupportsMultipleSelection:
detachesRoutesToGroup
setDetachesRoutesToGroup:
supportsQueueHandoff
setSupportsQueueHandoff:
initiator
setInitiator:
supportsRoutePrediction
setSupportsRoutePrediction:
companionDiscoverySession
discoverySession
_discoverySessionQueue
_attemptedToInitializeAppOutputContext
_companionCallbackToken
_didFindCompanion
_supportsMultipleSelection
_devicePresenceDetected
_outputDeviceRoutes
_shouldSourceOutputDevicesFromAVODDS
_routingSessionManager
_didFinishLoading
_detachesRoutesToGroup
_supportsQueueHandoff
_supportsRoutePrediction
_applicationOutputContext
_predictedDevice
_initiator
_companionDiscoverySession
T@"MPMRAVOutputContextWrapper",&,N,V_applicationOutputContext
T@"MRAVRoutingDiscoverySession",&,N,V_companionDiscoverySession
T@"MRAVRoutingDiscoverySession",&,N,V_discoverySession
T@"MRAVEndpoint",R,N
T@"MRAVOutputDevice",&,N,V_predictedDevice
TB,N,V_supportsMultipleSelection
TB,N,V_detachesRoutesToGroup
TB,N,V_supportsQueueHandoff
T@"NSString",&,N,V_initiator
TB,N,V_supportsRoutePrediction
_internalUserActivity
objectForIdentifier:
payloadForIdentifier:
setPayload:object:identifier:
setPayloadIdentifier:object:withBlock:
_setExternalMediaContentBundleIdentifier:
externalMediaContentIdentifier
setExternalMediaContentIdentifier:
_externalMediaContentBundleIdentifier
_beginScrubbing
prepare
selectionChanged
_minimumScale
_commitValue:
_endScrubbing
_scaleForIdealValueForVerticalPosition:
scrubbingControl
setScrubbingControl:
scrubbingVerticalRange
setScrubbingVerticalRange:
_didBeginTracking
_needsCommit
_accumulatedDelta
_beginLocationInView
_lastCommittedLocationInView
_currentValue
_feedbackGenerator
_detailedScrubbingEnabled
_scrubbingControl
_scrubbingVerticalRange
_currentScrubSpeed
T@"UIControl<MPDetailedScrubbing>",W,N,V_scrubbingControl
T@"<MPDetailScrubControllerDelegate>",W,N,V_delegate
Td,N,V_scrubbingVerticalRange
TB,N,V_detailedScrubbingEnabled
TB,R,N,V_isTracking
Tq,R,N,V_currentScrubSpeed
requestedProperties
offerWithType:
collectionStoreAdamID
artistStoreAdamID
initWithRequestedProperties:
genericObjectForStorePlatformMetadata:userIdentity:
_requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
_lightweightPersonalizationPropertiesForStoreAsset
_lightweightPersonalizationPropertiesForPlaybackPosition
_lightweightPersonalizationPropertiesForLyrics
Tq,R,N,V_personalizationStyle
initWithCFUserNotification:
_setUserNotification:forCFUserNotification:
_cancelSynchronously:
_userNotificationConversionAccessQueue
_userNotificationForCFUserNotification:
willShowNotificationHandler
setWillShowNotificationHandler:
showWithCompletionHandler:
_didReceiveResponseWithFlags:
cfUserNotification
_callbackInvocationQueue
_willShowNotificationHandler
strongSelf
_isShowing
_runLoopSource
_showingCompletionHandlers
_cfUserNotification
T^{__CFUserNotification=},R,N,V_cfUserNotification
_performWithSharedAccessForDataProviderEntityClass:block:
_entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:
_performWithExclusiveAccessForDataProviderEntityClass:block:
_clearSomeGlobalEntityTemporaryReferences
_entityMapForDataProviderEntityClass:
itemWithIdentifier:
_mediaLibraryDataProvider
_mediaLibraryDataProviderRespondsToSupportsEntityChangeTrackingMethod
_rwlock
_entityCacheMapLock
_deallocLaterQueue
_concreteEntitiesByDataProviderEntityClass
_entityTemporaryReferences
_endpointOutputDevicesDidChange:
effectiveGroupLeader
_endpointDidChange:
_groupLeaderIsOfDeviceSubtype:
_outputDevicesComposition
isRemoteControllable
canRelayCommunicationChannel
supportsMultiplayer
getActiveEndpointRouteWithCompletion:
sortName
establishGroup
canModifyGroupMembership
_sortName
_endpointWrapper
T@"MPAVRouteConnection",&,N
T@"MPMRAVEndpointWrapper",&,N,V_endpointWrapper
baseURLStringForReport
componentsWithString:
contentID
concernItemType
concernTypeID
commentText
aucType
_performWithBag:
_deleteCommentURLComponentsFromBag:
_deletePostURLComponentsFromBag:
_dictionariesForType:
setConcernItemType:
setConcernTypeID:
setDisplayText:
setContentID:
setAucType:
setCommentText:
_reportConcernBagDictionary
sharedReporter
T@"MPStoreContentReporter",R,N
submitReport:completion:
deleteComment:activityID:completion:
deletePost:completion:
reportsForType:contentID:aucType:commentText:
setUserID:
displayText
_userID
_contentID
_concernItemType
_commentText
_aucType
_concernTypeID
_displayText
T@"NSString",C,N,V_displayText
T@"NSString",C,N,V_userID
T@"NSString",C,N,V_contentID
Tq,N,V_concernItemType
T@"NSString",C,N,V_commentText
T@"NSString",C,N,V_aucType
T@"NSString",C,N,V_concernTypeID
ic_URLByAppendingQueryParameters:
_fetchContainerItemMetadataForBatch:progressHandler:
_workQueue
_itemIDsForRequest
setArtworkImageData:
artworkImageData
initWithTitle:subtitle:artworkImageData:
_subtitle
_artworkImageData
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"NSData",R,C,N,V_artworkImageData
isCurrentDeviceValidHomeAccessory
_postNotificationWithName:
setupIfNecessary
T@"MPHomeMonitor",R,N
_handlePersistentID:modelClass:keepLocal:mediaLibrary:
_handleKeepLocalUpdateStatus:forLibraryIdentifier:mediaType:completedWithError:
setMediaItem:
setKeepLocal:
T@"MPModelLibraryKeepLocalChangeRequest",C,N,V_request
keepLocal
_keepLocal
T@"MPMediaItem",&,N,V_mediaItem
Tq,N,V_keepLocal
_superclassRegisterNotifications
_reloadActiveAudioCategoryWithCompletion:
_superclassUnregisterNotifications
attributeForKey:
setFilterMode:
_workerQueue
_activeAudioCategory
_filterMode
TB,R,N,V_didFinishLoading
TB,R,N,V_devicePresenceDetected
Tq,N,V_filterMode
TI,N,V_targetSessionID
__endpointType_KEY
__redownloadParameters_KEY
__redownloadable_KEY
__accountIdentifier_KEY
__shouldReportPlayEvents_KEY
__needsUserUpload_KEY
redownloadable
TB,D,N,GisRedownloadable
needsUserUpload
_initializeWithType:tasteType:
playlistGlobalID
_playlistGlobalID
_storeAdamID
_tasteType
_UUID
T@"NSString",R,N,V_playlistGlobalID
Tq,R,N,V_storeAdamID
Tq,R,N,V_tasteType
T@"NSUUID",R,N,V_UUID
homeUserIdentifiers
isExplicitSettingEnabled
setExplicitSettingEnabled:
isPrivateListeningEnabledForCurrentAccessory
setPrivateListeningEnabledForCurrentAccessory:
userSettingsForHome:
settings
privateSettings
_loadAllowExplicitValue
_loadCurrentAccessoryPrivateListening
rootGroup
updateValue:completionHandler:
hasAccessoryWithRouteID:
privateListeningEnabledForAccessoryWithRouteID:
_notifyAllowExplicitUpdated
_notifyPrivateListeningUpdated
userMonitorWithUserIdentity:fromUserIdentityStore:
isExplicitSettingEnabledForCurrentUser
setExplicitSettingEnabledForCurrentUser:
isPrivateListeningEnabledForCurrentUserAndAccessory
setPrivateListeningEnabledForCurrentUserAndAccessory:
settingsDidUpdate:
settingsWillUpdate:
settings:didUpdateForIdentifier:keyPath:
user:didUpdateAssistantAccessControl:forHome:
user:didUpdateMediaContentProfileAccessControl:forHome:
user:didUpdatePhotosPersonManagerSettings:
user:didUpdatePersonManagerSettings:
user:didUpdatePairingIdentity:
user:didUpdateNeedsiTunesMultiUserRepair:
explicitSettingEnabledForCurrentUser
TB,N,GisExplicitSettingEnabledForCurrentUser
privateListeningEnabledForCurrentUserAndAccessory
TB,N,GisPrivateListeningEnabledForCurrentUserAndAccessory
setPrivateListeningEnabledForAccessoryWithRouteID:enabled:
privateListeningEnabledForGroupWithRouteIDs:
_updateUserListeningHistoryControlForAccessory:enable:
user:didUpdateUserListeningHistoryUpdateControl:forHome:
_user
_home
_privateHomeSettings
_sharedSettings
_allowExplicitCachedValue
_currentAccessoryPrivateListeningCachedValue
explicitSettingEnabled
TB,N,GisExplicitSettingEnabled
privateListeningEnabledForCurrentAccessory
TB,N,GisPrivateListeningEnabledForCurrentAccessory
groups
valueClass
_seasonKind
T@"MPModelTVSeasonKind",R,C,N,V_seasonKind
__shortTitle_KEY
__creator_KEY
creator
T@"MPModelTVShowCreator",C,D,N
shortTitle
writeBOOL:forTag:
writeInt64:forTag:
hasShouldContain
clearPersistentIDs
persistentIDsAtIndex:
setHasShouldContain:
setPersistentIDs:count:
TB,N,V_shouldContain
T^q,R,N
mediaLibraryArtworkType
setMediaLibraryArtworkType:
artworkInfo
_resolvedURLString
_artworkTemplateItems
_mediaLibraryArtworkType
T@"ICStoreArtworkInfo",R,N
T@"NSString",C,N,V_resolvedURLString
T@"NSArray",C,N,V_artworkTemplateItems
TQ,N,V_mediaType
Tq,N,V_mediaLibraryArtworkType
writeDouble:forTag:
writeFloat:forTag:
hasIntegerPredicateValue
hasDoublePredicateValue
hasFloatPredicateValue
hasBoolPredicateValue
setBoolPredicateValue:
hasStringPredicateValue
hasBytesPredicateValue
setHasIntegerPredicateValue:
setHasDoublePredicateValue:
setHasFloatPredicateValue:
setHasBoolPredicateValue:
_doublePredicateValue
_integerPredicateValue
_bytesPredicateValue
_floatPredicateValue
_stringPredicateValue
_boolPredicateValue
Ti,N,V_type
Tq,N,V_integerPredicateValue
Td,N,V_doublePredicateValue
Tf,N,V_floatPredicateValue
TB,N,V_boolPredicateValue
T@"NSString",&,N,V_stringPredicateValue
T@"NSData",&,N,V_bytesPredicateValue
__uncensoredName_KEY
__biography_KEY
__privatePerson_KEY
__verified_KEY
__pendingRequestsCount_KEY
uncensoredName
biography
TB,D,N,GisPrivate
verified
TB,D,N,GisVerified
pendingRequestsCount
_objectOfClass:forKey:error:
_saveObject:forKey:error:
dataForKey:
decodedObjectOfClass:fromData:error:
encodedDataWithRootObject:error:
T@"MPMusicPlayerControllerSystemCache",R,N
clearCache
_defaults
T@"MPMusicPlayerControllerNowPlaying",&,N
T@"MPMusicPlayerQueueDescriptor",&,N
initWithReuseIdentifier:
textLabel
_updateFont
_preferredFontForTextStyle:maximumContentSizeCategory:
titleInsets
setTitleInsets:
_titleInsets
T{UIEdgeInsets=dddd},N,V_titleInsets
_performTransientFollowState:onPerson:completion:
_newOperationForRemovingFollower:completion:
_transientStateForPerson:shouldCreate:
followState
_performTransientFollowPendingRequestState:onPerson:completion:
followPendingRequestState
_transientStatesDidChange
newOperationForTransientFollowState:completion:
newOperationForTransientFollowPendingRequestState:completion:
initWithPerson:
_queue_transientStatesDidChange
_handleTransientStateForPersonDidChangeNotification:
_addTransientFollowState:transientFollowPendingRequestState:forPerson:
_populateTransientStatesSnapshot:
_notifyTransientStatesDidChangeWithSnapshot:
followPerson:completion:
unfollowPerson:completion:
requestFollowPerson:completion:
cancelFollowRequestOnPerson:completion:
blockPerson:completion:
unblockPerson:completion:
removeFollower:completion:
transientFollowStateForPerson:
acceptAllFollowRequestsWithCompletion:
acceptFollowRequestFromPerson:completion:
declineFollowRequestFromPerson:completion:
transientFollowPendingRequestStateForPerson:
_transientStates
_endIfNeeded
completionBlock
_followState
_followPendingRequestState
_latestFollowOperation
_latestFollowPendingRequestOperation
_completionBlock
T@"MPModelSocialPerson",R,N,V_person
T@?,C,N,V_completionBlock
_transientFollowStatesPerProfileID
_transientFollowPendingRequestStatesPerProfileID
propertiesToFetchMap
setPropertiesToFetchMap:
propertiesToSortMap
setPropertiesToSortMap:
sortTransformer
setSortTransformer:
valueTransformer
setValueTransformer:
_sortTransformer
_valueTransformer
_propertiesToFetchMap
_propertiesToSortMap
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_propertiesToFetchMap
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_propertiesToSortMap
T@?,C,N,V_sortTransformer
T@?,C,N,V_valueTransformer
relationshipModelClass
entityTranslator
setRelationshipModelClass:
transient
setTransient:
foreignPropertyBase
setForeignPropertyBase:
relationshipValidationProperties
setRelationshipValidationProperties:
validRelationshipHandler
setValidRelationshipHandler:
_transient
_relationshipModelClass
_foreignPropertyBase
_validRelationshipHandler
_relationshipValidationProperties
T#,N,V_relationshipModelClass
TB,N,V_transient
T^v,N,V_foreignPropertyBase
T{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}},N,V_relationshipValidationProperties
T@?,C,N,V_validRelationshipHandler
T@"MPMediaLibraryEntityTranslator",R,N
_translatorForMPModelClass:mlcoreEntityClass:create:transient:
_objectForPropertySet:entity:baseTranslator:prependKeyPath:context:
_valueForKeyPath:forEntity:context:
entityQueryBlock
ascending
MLCoreSortDescriptorsForModelSortDescriptors:
_MLCorePropertiesForPropertySet:withForeignPropertyBase:
_propertyTranslatorForKeyPath:
_propertyMapForKeyPath:includePropertiesToSort:
_propertyForKeyPath:
isTransient
allowedItemPredicatesBlock
_allowedItemPredicatesBlock
_entityQueryBlock
TB,R,N,GisTransient,V_transient
T^v,R,N,V_entityClass
T@?,C,N,V_allowedItemPredicatesBlock
T@?,C,N,V_entityQueryBlock
_multiQuery
_allowedEntityIdentifiers
_modelKind
T@"NSArray",&,N,V_allowedEntityIdentifiers
T@"NSArray",&,N,V_scopedContainers
multiQuery
TB,N,GisMultiQuery,V_multiQuery
T@"MPModelKind",&,N,V_modelKind
T@"NSString",&,N,V_personID
T@"NSString",&,N,V_filterText
setClips:
_mediaClipBuilder
_requestedMovieProperties
_initWithModelKind:block:
containedPersistentID
recommendationID
stationEventID
handoffCorrelationID
shouldExcludeFromShuffle
vendorID
identifierDescriptions:
setPlaceholder:
setStationHash:
setStationID:
reportingAdamID
assetAdamID
clearLibraryIdentifiers
clearPersonalStoreIdentifiers
_setDefaultDatabaseIDIfNeeded
_setDefaultPersonIDIfNeeded
clearUniversalStoreIdentifiers
clearRadioIdentifiers
TB,N,GisPlaceholder
hasCommonIdentifierWithIdentifierSet:
deviceLibraryPersistentID
setDeviceLibraryPersistentID:
radioStationStringID
setRadioStationStringID:
radioStationHash
setRadioStationHash:
radioStationID
setRadioStationID:
setStoreAdamID:
setFormerStoreAdamIDs:
storeCloudAlbumID
setStoreCloudAlbumID:
storeRecommendationID
setStoreRecommendationID:
needsPersonalization
_shouldExcludeFromShuffle
_placeholder
_databaseID
_containedPersistentID
_syncID
_cloudID
_cloudAlbumID
_recommendationID
_adamID
_formerAdamIDs
_universalCloudLibraryID
_purchasedAdamID
_subscriptionAdamID
_socialProfileID
_informalMediaClipID
_informalStaticAssetID
_reportingAdamID
_assetAdamID
_stationHash
_stationEventID
_containerUniqueID
_handoffCorrelationID
_vendorID
T@"NSString",C,N,V_containerUniqueID
T@"NSString",C,N,V_handoffCorrelationID
T@"NSString",C,N,V_lyricsID
TB,N,V_shouldExcludeFromShuffle
TB,N,GisPlaceholder,V_placeholder
T@"NSString",C,N,V_vendorID
Tq,N,V_syncID
T@"NSString",C,N,V_socialProfileID
T@"NSString",C,N,V_informalMediaClipID
T@"NSString",C,N,V_informalStaticAssetID
T@"MPModelKind",R,N,V_modelKind
T@"<MPLocalLibraryIdentifiers>",R,N
T@"<MPPersonalStoreIdentifiers>",R,N
T@"<MPUniversalStoreIdentifiers>",R,N
T@"<MPRadioIdentifiers>",R,N
Tq,N,V_persistentID
Tq,N,V_containedPersistentID
T@"NSString",R,N,V_databaseID
TQ,N,V_cloudID
T@"NSString",C,N,V_cloudAlbumID
T@"NSString",C,N,V_recommendationID
T@"NSString",R,N,V_personID
Tq,N,V_adamID
T@"NSArray",C,N,V_formerAdamIDs
T@"NSString",C,N,V_universalCloudLibraryID
Tq,N,V_purchasedAdamID
Tq,N,V_subscriptionAdamID
Tq,N,V_reportingAdamID
Tq,N,V_assetAdamID
T@"NSString",C,N,V_stationHash
Tq,N,V_stationID
T@"NSString",C,N,V_stationEventID
setMaskView:
_separatorFrame
_setShouldHaveFullLengthTopSeparator:
_setShouldHaveFullLengthBottomSeparator:
topSeparatorView
shouldHideSectionBottomSeparator
clippingContentView
setClippingContentView:
clippingMaskView
setClippingMaskView:
clippingInsets
_shouldHideSectionBottomSeparator
_topSeparatorView
_bottomSeparatorView
_clippingContentView
_clippingMaskView
_clippingInsets
T@"UIView",&,N,V_clippingContentView
T@"UIView",&,N,V_clippingMaskView
T{UIEdgeInsets=dddd},N,V_clippingInsets
T@"UIView",R,N,V_topSeparatorView
T@"UIView",R,N,V_bottomSeparatorView
TB,N,V_shouldHideSectionBottomSeparator
__explicitEpisode_KEY
__streamURL_KEY
__seasonNumber_KEY
explicitEpisode
TB,D,N,GisExplicitEpisode
_updateRouteLabel
contentLabel
_textColorFollowsTintColor
_routeDidChangeNotification:
_plusSeparatedRouteNames:
_formattedRouteNameForDesignatedGroupLeaderNameText:routeNamesText:
_labelSizeForText:
_bestStringThatFitsSize:
_marketingNames
localizedUppercaseString
_compareLength:with:
_routeNamesSortedAlphanumeric:
_updateTitleIfNeeded
_routeNamesSortedLength:
displayAsSiriSuggestion
_labelFitsText:withSize:
_truncateText:by:
setMinimumEndCharacterCount:
setTruncationMode:
setDisplayAsSiriSuggestion:
addRouteName:
addRouteNamesFromArray:
removeRouteName:
removeRouteNamesFromArray:
minimumEndCharacterCount
truncationMode
setContentView:
textAlignment
_designatedGroupLeaderName
_previousDesignatedGroupLeaderName
_previousBounds
_previousFont
_previousRouteNames
_previousForcesUppercaseText
_previousDisplayAsSiriSuggestion
_previousTruncationMode
_routeNames
_sizingLabel
_forcesUppercaseText
_displayAsSiriSuggestion
_minimumEndCharacterCount
_text
_truncationMode
_route
_contentView
_textAlignment
T@"BSUIEmojiLabelView",&,N,V_contentView
Tq,N,V_minimumEndCharacterCount
T@"NSString",R,C,N,V_text
Tq,N,V_truncationMode
TB,N,V_forcesUppercaseText
TB,N,V_displayAsSiriSuggestion
T@"MPAVRoute",&,N,V_route
T@"UILabel",R,N
T@"UIColor",&,N,V_textColor
Tq,N,V_textAlignment
TB,N,S_setTextColorFollowsTintColor:
setArtworkConfiguration:
initWithConfigurationDictionaries:
artworkConfiguration
sizesToAutogenerateForMediaType:artworkType:
_artworkConfiguration
T@"ML3ArtworkConfiguration",&,N,V_artworkConfiguration
initWithMediaAPICollectionItemMetadataRequests:collectionMetadataRequest:authTokenRenewalRequests:totalItemRequestCount:
collectionItemRequests
tokenRenewalRequests
collectionRequests
totalRequestItemCount
_collectionItemRequests
_tokenRenewalRequests
_totalRequestItemCount
_collectionRequests
T@"NSArray",R,C,N,V_collectionItemRequests
T@"NSArray",R,C,N,V_tokenRenewalRequests
T@"NSArray",R,C,N,V_collectionRequests
TQ,R,N,V_totalRequestItemCount
sharedConnection
_updateWithCanPostNotifications:
settingEnabled
effectiveValueForSetting:
_cacheValue:forSetting:
isRunningInStoreDemoMode
_isRunningInStoreDemoMode
notificationWithName:object:
effectiveBoolValueForSetting:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
T@"MPRestrictionsMonitor",R,N
hasRestrictionsPasscode
allowsAccountModification
allowsDeletion
allowsStorePurchases
allowsRadioPurchases
allowsRadioService
maximumTVShowRatingForAgeGate
setMaximumTVShowRatingForAgeGate:
maximumMovieRatingForAgeGate
setMaximumMovieRatingForAgeGate:
_cachedSettings
_homeUserMonitorToken
_allowsAccountModification
_allowsDeletion
_allowsExplicitContent
_allowsMusicSubscription
_allowsStorePurchases
_allowsRadioPurchases
_allowsRadioService
_allowsMusicVideos
_maximumTVShowRatingForAgeGate
_maximumMovieRatingForAgeGate
Tq,N,V_maximumTVShowRatingForAgeGate
Tq,N,V_maximumMovieRatingForAgeGate
TB,R,N,V_allowsAccountModification
TB,R,N,V_allowsDeletion
TB,R,N,V_allowsExplicitContent
TB,R,N,V_allowsMusicSubscription
TB,R,N,V_allowsStorePurchases
TB,R,N,V_allowsRadioPurchases
TB,R,N,V_allowsRadioService
TB,R,N,V_allowsMusicVideos
_setup
_tearDown
_mediaPlaybackVolumeAudioCategory
_volumeApplyingEUVolumePolicyToVolume:
setVolumeTo:forCategory:
volumeCategoryForAudioCategory:
_reloadQueue
getVolume:forCategory:
currentRouteHasVolumeControl
updateVolumeControlCapabilities:
updateVolume:
_reloadEUVolumeLimits
_updateRouteLabelForRoute:
_systemVolumeDidChange:
_systemMuteDidChange:
_volumeDidChangeNotification:
_volumeControlCapabilitiesDidChangeNotification:
T@"<MPVolumeControllerDataSourceDelegate>",W,N
_EUVolumeLimitDidChange:
_EUVolumeLimitEnforcedDidChange:
_debugVolumeWarning
_volumeInitialized
_volumeControlCapabilitiesInitialized
_pendingVolumeCompletions
_avscQueue
_avSystemController
_volumeControlAvailable
_volumeWarningEnabled
_volume
_EUVolumeLimit
_volumeAudioCategory
_volumeControlLabel
_volumeWarningState
T@"NSString",C,N,V_volumeAudioCategory
T@"<MPVolumeControllerDataSourceDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_volumeControlLabel
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
Tf,N,V_volume
TB,N,GisMuted,V_muted
TB,R,N,V_volumeWarningEnabled
Tq,R,N,V_volumeWarningState
Tf,R,N,V_EUVolumeLimit
_routeVolumeDidChangeNotification:
_routeVolumeControlCapabilitiesDidChangeNotification:
_setPendingVolumeIfNeeded
_sendVolumeButtonEventWithUsagePage:usage:down:
_updateVolumeControlCapabilities:
containsUID:
_pendingVolume
_hasPendingVolume
_hasVolumeInFlight
_volumeCapabilitiesInitialized
T@"MPAVRoute",&,N,V_groupRoute
T@"MPAVRoute",&,N,V_outputDeviceRoute
setImageArtworkInfo:
setArtworkInfoType:
setVideoArtworkInfo:
tokenWithVideoArtworkInfo:
sourceEditorialArtworkKind
_artworkInfoType
_imageArtworkInfo
_videoArtworkInfo
_cropStyle
_format
_sourceEditorialArtworkKind
_artworkURL
Tq,N,V_artworkInfoType
T@"ICStoreArtworkInfo",C,N,V_imageArtworkInfo
T@"ICStoreVideoArtworkInfo",C,N,V_videoArtworkInfo
T@"NSString",C,N,V_cropStyle
T@"NSString",C,N,V_format
T@"NSString",C,N,V_sourceEditorialArtworkKind
T@"NSURL",C,N,V_artworkURL
_SSPurchaseForType:attributes:
_setSSPurchase:SSPurchaseResponse:
initWithType:attributes:
initWithPersistentIdentifier:
_setSSDownload:
phaseIdentifier
isCanceled
_SSDownload
bytesDownloaded
bytesTotal
persistentIdentifier
_SSPurchase
placeholderDownloadIdentifier
downloadSizeLimit
_isCanceled
_SSPurchaseResponse
_valueForDownloadProperty:
_currentOverridePhaseIdentifier
downloadPhaseIdentifier
valueForExternalProperty:
assetsForType:
resetCachedExternalProperties:count:
enumerateObjectsWithOptions:usingBlock:
setBuyParameters:
setIgnoresForcedPasswordRestriction:
downloadPolicy
initWithDownloadKind:URLBagType:
setCellularDataStates:
policyRules
setPolicyRules:
setDownloadPolicy:
setNetworkTypes:
setDownloadSizeLimit:
setFallbackNumberValue:
addUserDefaultState:
setShouldInvertBoolValue:
setBackgroundPurchase:
setDisplaysOnLockScreen:
setValue:forDownloadProperty:
setURLBagKey:
setRequestProperties:
valueForDownloadProperty:
storeDownloadWithDownloadIdentifier:
downloadIdentifier
isPurchasing
isRestore
isPaused
purchaseError
rentalInformation
resetCachedRentalInformation
_setCanceled:
_getDownloadFilePath
_setDownloadFilePath:
_addOverridePhaseIdentifier:
_removeOverridePhaseIdentifier:
_canceled
_overridePhaseIdentifiers
_downloadFilePath
T@"NSDictionary",R,N,V_attributes
canceled
TB,R,N,GisCanceled
finished
TB,R,N,GisFinished
purchasing
TB,R,N,GisPurchasing
paused
TB,R,N,GisPaused
restore
TB,R,N,GisRestore
setAcquireFunction:
setRelinquishFunction:
setHashFunction:
setIsEqualFunction:
setSizeFunction:
setDescriptionFunction:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
setDownloadKinds:
IPodDownloadKinds
setPersistenceIdentifier:
setPrefetchedDownloadExternalProperties:
setPrefetchedDownloadProperties:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
_shouldHideDownload:
_updateMediaItemPropertiesForFinishedStoreDownload:SSDownload:
_updateDownloadsWithAdditions:removals:
finishDownloads:
getDownloadsUsingBlock:
initWithManagerIdentifier:
getPurchasesUsingBlock:
activeDownloads
_onQueue_findStoreDownloadWithSSDownload:SSPurchase:
_sendDownloadsDidFinishToObserversForDownloads:notifyDownloadManager:completionHandler:
addPurchases:withCompletionBlock:
initWithDownload:
setDidFinishDownloadHandler:
_registerBlockObserver:
_updateActiveDownloadsWithCancelledDownloads:
_addNonCancelledDownloadsToActiveList:
cancelDownloads:completionBlock:
cancelPurchases:withCompletionBlock:
pauseDownloads:completionBlock:
_sendDownloadsDidProgressToObserversForDownloads:
resumeDownloads:completionBlock:
_existingDownloadForSSDownload:
restartDownloads:completionBlock:
downloadForMediaItemPersistentID:
downloadForStoreID:
prioritizeAboveDownload:completionBlock:
moveDownload:afterDownload:completionBlock:
movePurchases:afterPurchase:withCompletionBlock:
reloadFromServer
downloads
purchase
_sendDownloadsDidFinishPurchasesToObserversForDownloads:
_onQueue_addDownloadToMapTables:
_isActiveDownload:
_updateActiveDownloadsWithChangedActiveDownloads:inactiveDownloads:
_observersForAllDownloads
downloadManagerNetworkUsageDidChange:
setDidFinishPurchaseHandler:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:didAddDownloads:removeDownloads:
_observersForDownload:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadDidFinish:
downloadManager:downloadsDidProgress:
downloadManager:downloadDidProgress:
_sendActiveDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_onQueue_hasExistingDownloadForStoreDownload:
_onQueue_removeDownloadFromMapTables:
_sendDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
purchaseManager:didFinishPurchasesWithResponses:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
downloadHandlerDidDisconnect:
downloadHandler:handleSession:
downloadHandler:cancelSession:
downloadHandler:pauseSession:
downloadHandler:handleAuthenticationSession:
userDownloads
addObserver:forDownloads:
pauseDownloads:
resumeDownloads:
restartDownloads:
downloadForDownloadPersistentIdentifier:
downloadForMediaItem:
prioritizeDownloads:
removeObserver:forDownloads:
_addPurchaseFinishedHandler:forDownloads:
hasFetchedInitialDownloads
_unregisterBlockObserver:
_calloutSerialQueue
_blockObservers
_downloadKindToRequiredClientBundleIdentifiers
_downloads
_userDownloads
_downloadIdentifiersToDownloads
_downloadsToObservers
_libraryIdentifiersToDownloads
_storeIdentifiersToDownloads
_fetchedInitialDownloads
_downloadManager
_purchaseManager
usingNetwork
TB,R,N,GisUsingNetwork
didFinishDownloadHandler
didFinishPurchaseHandler
download
_didFinishDownloadHandler
_didFinishPurchaseHandler
_download
T@?,C,N,V_didFinishDownloadHandler
T@?,C,N,V_didFinishPurchaseHandler
T@"MPStoreDownload",R,N,V_download
MPSD_mediaQueryForDownloadableEntities
MPSD_mediaQueryForDownloadingEntities
MPSD_hasDownloadableEntities
MPSD_hasDownloadingEntities
MPSD_mediaItemPropertiesForDownloadability
MPSD_isDownloadable
MPSD_isDownloadInProgress
hasCapability:
setUncensoredName:
setPrivatePerson:
setVerified:
_requestedSocialPersonProperties
_fetchContainerItemMetadataWithBatchProgressHandler:
initWithStoreID:collectionType:requestContext:
_requestObjectStoreIdentifier
kindWithVariants:songKind:options:
_songKind
T@"MPModelSongKind",R,N,V_songKind
songPopularityBlock
kindWithSongKind:options:
__representativeSong_KEY
__maximumItemTrackNumber_KEY
__discCount_KEY
__compilation_KEY
__classical_KEY
__preorder_KEY
__songPopularityBlock_KEY
maximumItemTrackNumber
TB,D,N,GisCompilation
classical
TB,D,N,GisClassical
representativeSong
TB,D,N,GisPreorder
MPSD_hasDownloadableItem
MPSD_hasDownloadingItem
hasPropertyPredicate
hasCompoundPredicate
hasPersistentIDsPredicate
hasSearchStringPredicate
setHasType:
_compoundPredicate
_persistentIDsPredicate
_propertyPredicate
_searchStringPredicate
T@"MPPPropertyPredicate",&,N,V_propertyPredicate
T@"MPPCompoundPredicate",&,N,V_compoundPredicate
T@"MPPConditionalPredicate",&,N,V_conditionalPredicate
T@"MPPPersistentIDsPredicate",&,N,V_persistentIDsPredicate
T@"MPPSearchStringPredicate",&,N,V_searchStringPredicate
supportsSpatialization
setSupportsSpatialization:
isSpatializationEnabled
setSpatializationEnabled:
_mediaRemoteAudioRoute
T@"MRContentItemMetadataAudioRoute",R,N,V_mediaRemoteAudioRoute
spatializationEnabled
TB,N,GisSpatializationEnabled
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@16@0:8
@24@0:8@16
v20@0:8B16
q24@0:8q16
q24@0:8@16
@40@0:8@16@24@32
B16@0:8
v16@0:8
{?="initialized"b1"itemType"b1"detailedItemType"b1"artist"b1"album"b1"curator"b1"episode"b1"movie"b1"playlist"b1"radioStation"b1"socialPerson"b1"song"b1"season"b1"show"b1"showCreator"b1"aucType"b1"recordLabel"b1}
@"MPStoreModelAlbumBuilder"
@"MPStoreModelArtistBuilder"
@"MPStoreModelCuratorBuilder"
@"MPStoreModelTVEpisodeBuilder"
@"MPStoreModelMovieBuilder"
@"MPStoreModelRadioStationBuilder"
@"MPStoreModelSocialPersonBuilder"
@"MPStoreModelPlaylistBuilder"
@"MPStoreModelTVSeasonBuilder"
@"MPStoreModelSongBuilder"
@"MPStoreModelTVShowBuilder"
@"MPStoreModelTVShowCreatorBuilder"
@"MPStoreModelRecordLabelBuilder"
v24@0:8@16
v24@0:8q16
v32@0:8q16@?24
v48@0:8q16q24q32@?40
q16@0:8
@24@0:8q16
@32@0:8@16^q24
v24@0:8@?16
@32@0:8@16^@24
v32@0:8@16@?24
@32@0:8@16@24
B24@0:8@16
@"ICURLBag"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d16@0:8
v24@0:8d16
@"NSString"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSData"16@0:8
@"NSArray"16@0:8
@"MPModelSocialPerson"16@0:8
v24@0:8@"MPModelSocialPerson"16
@"MPModelSocialPerson"
@32@0:8@16Q24
{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}}16@0:8
v40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@?32
v40@0:8{shared_ptr<mlcore::LocalizedSearchQuery>=^{LocalizedSearchQuery}^{__shared_weak_count}}16@?32
{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}40@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16^@32
{shared_ptr<mlcore::DeviceLibraryView>="__ptr_"^{DeviceLibraryView}"__cntrl_"^{__shared_weak_count}}
@"MPMediaLibrary"
@32@0:8@16d24
@24@0:8d16
@?16@0:8
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@24@0:8@?16
@"NSOperationQueue"
@"NSError"
@"NSObject<OS_dispatch_queue>"
@"NSArray"
@"MPModelRequest"
@"MPPropertySet"
@"MPSectionedCollection"
v32@0:8@16@24
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v36@0:8@16B24@28
v48@0:8@16{CGSize=dd}24@40
v36@0:8@"AVPlayerViewController"16B24@"<AVPlayerViewControllerAnimationCoordinator>"28
@"UIView"32@0:8@"AVPlayerViewController"16@"UIView"24
v48@0:8@"AVPlayerViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
f16@0:8
v20@0:8f16
v24@0:8B16B20
{CGSize=dd}16@0:8
@32@0:8d16q24
v32@0:8@16q24
v48@0:8@16@24@32^v40
@"_MPMoviePlayerProxyView"
@"AVAssetImageGenerator"
@"UIView"
@"NSURL"
@"AVPlayerViewController"
@"UIViewController"
@"MPMoviePlayerController"
@"AVMetadataItem"
@"AVPlayerItemAccessLog"
@"AVPlayerItemErrorLog"
@"AVPlayerItemAccessLogEvent"
@"AVPlayerItemErrorLogEvent"
v32@0:8@16Q24
@"NSHashTable"
@"NSMapTable"
q20@0:8I16
i16@0:8
I16@0:8
v20@0:8i16
v20@0:8I16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSDictionary"
@"RTCReporting"
@"NSMutableArray"
@24@0:8Q16
B24@0:8q16
v24@0:8Q16
@"<NSCopying>"
S16@0:8
v40@0:8q16#24@32
@"MPModelLibraryDeleteEntityChangeRequest"
v32@0:8d16d24
f36@0:8Q16q24B32
v28@0:8f16@?20
{?=qiIq}16@0:8
f28@0:8Q16B24
v32@0:8q16@24
^{OpaqueCMTimebase=}16@0:8
d24@0:8@16
v28@0:8d16f24
v40@0:8q16@24@?32
@"AVAsset"
@"AVPlayerItem"
@"MPQueueFeeder"
@"MPNowPlayingContentItem"
{?="value"q"timescale"i"flags"I"epoch"q}
@"MPMediaLibraryPrivacyContext"
@"<MPAVItemObserver>"
@"MPMediaItem"
@"MPModelGenericObject"
@"MPModelPlayEvent"
@"NSNumber"
@"ICMusicSubscriptionLeaseStatus"
@"ICClientInfo"
@"ICUserIdentity"
@"ICUserIdentityStore"
B24@0:8@?16
q24@0:8@?16
v40@0:8@16@24@?32
@"MPQueueFeederIdentifierRegistry"
@"NSData"
@"MPModelObject"
@"NSDate"
@"MPStoreItemMetadata"
@"UILabel"16@0:8
@"UIImageView"16@0:8
@"UIView"16@0:8
@"MPVolumeSlider"16@0:8
@32@0:8q16@24
v36@0:8@16@24B32
@"UIImageView"
@"UILabel"
@"NSTimer"
@"UIActivityIndicatorView"
@"<MPAVRoutingTableViewCellDelegate>"
@"MPVolumeSlider"
@"MPAVRoutingTableViewCellSubtitleTextState"
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v32@0:8Q16@24
@"MPMediaControlsConfiguration"
@"<MPMediaControlsViewControllerDelegate>"
@"MPMediaControls"
v28@0:8B16@?20
@28@0:8@16B24
{CGSize=dd}56@0:8{CGSize=dd}16Q32Q40d48
B32@0:8@16@24
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@"NSCountedSet"
@"NSCache"
@"MPModelLibraryRequest"
{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}16
@"MPMediaLibraryView"
{shared_ptr<mlcore::Query>="__ptr_"^{Query}"__cntrl_"^{__shared_weak_count}}
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
v40@0:8@16@24Q32
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24Q32
B32@0:8q16q24
B36@0:8q16q24B32
B44@0:8q16q24B32^@36
B48@0:8q16q24B32B36^@40
v24@0:8f16B20
v28@0:8Q16B24
v32@0:8@16B24B28
B20@0:8f16
B28@0:8f16@?20
B40@0:8f16B20@24@?32
v32@0:8d16q24
v40@0:8d16q24@?32
B24@0:8Q16
d44@0:8B16{?=qiIq}20
Q24@0:8@16
v36@0:8q16q24B32
v24@0:8^{__CFRunLoopTimer=}16
v48@0:8q16@24@32@40
v40@0:8{?=qiIq}16
@32@0:8d16@?24
@"MPAVRoutingController"
@"MPAVRoute"
^{__CFRunLoopTimer=}
@"NSObject<OS_dispatch_source>"
@"MPAVItem"
@"NSNotification"
@"NSMutableSet"
@"MPAVPolicyEnforcer"
@"MPQueuePlayer"
@"<MPAVQueueCoordinating>"
@"<MPAVQueueController>"
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSXPCConnection"
@"BKSProcessAssertion"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"b1"type"b1"subtype"b1"artwork"b1"stationGlyph"b1"attributionLabel"b1"providerName"b1"live"b1}
@32@0:8Q16Q24
v24@0:8^v16
@"NSMutableDictionary"16@0:8
@"MRContentItemMetadataAudioFormat"
@"NSMutableDictionary"
@"ICStoreFileAssetInfo"
@"<MPMediaRemoteEntityArtworkGenerator>"
v32@0:8@16:24
v32@0:8@16#24
@36@0:8d16B24@?28
@40@0:8d16@24@?32
@44@0:8d16B24@28@?36
@"MPAVController"
@40@0:8@16{CGSize=dd}24
{CGSize="width"d"height"d}
@24@0:8^{_MRSystemAppPlaybackQueue=}16
@32@0:8^{_MRSystemAppPlaybackQueue=}16@24
v28@0:8#16i24
B24@0:8^@16
^{_MRSystemAppPlaybackQueue=}16@0:8
^{_MRSystemAppPlaybackQueue=}
@"MPMediaQuery"
@"MPIdentifierSet"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B40@0:8{CGPoint=dd}16@32
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
@"MPRouteLabel"
@"UIFont"
@"UIColor"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"MPModelSong"
@20@0:8B16
@56@0:8@16@24q32B40B44@48
@72@0:8@16@24q32B40B44B48@52B60q64
@80@0:8@16@24q32B40B44B48@52B60q64@72
{?="initialized"b1"title"b1"type"b1"loadAdditionalContentURL"b1"previouslyRetrievedNestedResponse"b1"uniformContentItemType"b1"memberOfChartSet"b1"displaysAsGridCellInCarPlay"b1"brick"b1}
@80@0:8@16@24@32@40@48@56Q64@72
@"MPModelStoreBrowseSectionBuilder"
@"MPModelStoreBrowseContentItemBuilder"
@"NSIndexSet"
@"NSRegularExpression"
{?="initialized"b1"copyrightText"b1"title"b1"trackCount"b1"maximumItemTrackNumber"b1"discCount"b1"hasCleanContent"b1"hasExplicitContent"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"libraryAddEligible"b1"compilation"b1"classical"b1"releaseDate"b1"artwork"b1"year"b1"preorder"b1"editorNotes"b1"shortEditorNotes"b1"volumeNormalization"b1"songPopularity"b1"representativeSong"b1"traits"b1"versionHash"b1"artist"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}}
v40@0:8@16@24@32
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
v24@0:8@"_MPSSILImplementation"16
v40@0:8q16@24@32
@48@0:8Q16@24@32@40
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
v60@0:8@16@24B32@36@44@?52
v52@0:8@16@24B32@36@?44
v48@0:8@16@24@32@40
@"_MPSSILImplementation"
@48@0:8@16@24@32@40
v52@0:8@16@24B32@36@44
v44@0:8@16@24B32@36
@"MPRandomDistribution"
@"MPStoreLyricsSnippetURLComponents"
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::LocalizedSearchScope>="__ptr_"^{LocalizedSearchScope}"__cntrl_"^{__shared_weak_count}}
@"MPModelKind"
@"MPModelLibraryAlbumAppDataChangeRequest"
@"MPModelPlaylist"
@"MPChangeDetails"
@"MPModelStoreBrowseResponseParser"
@60@0:8@16{CGSize=dd}24B40@44@?52
@"AVOutputDeviceDiscoverySession"
@"AVOutputContext"
@"<MPAVLightweightRoutingControllerDelegate>"
@40@0:8@16@?24@?32
@44@0:8@16B24@?28@?36
v32@0:8q16q24
@"MPStoreModelStoreAssetBuilder"
{?="initialized"b1"title"b1"shortTitle"b1"editorNotes"b1"shortEditorNotes"b1"editorialArtwork"b1"artwork"b1"episodeCount"b1"tagline"b1}
B40@0:8@16@24@?32
v32@0:8@"SBSStatusBarStyleOverridesCoordinator"16@"NSError"24
B40@0:8@"SBSStatusBarStyleOverridesCoordinator"16@"<SBSStatusBarTapContext>"24@?<v@?>32
@"SBSStatusBarStyleOverridesAssertion"
@"SBSStatusBarStyleOverridesCoordinator"
@56@0:8@16Q24@32@40@48
@"MPSectionedIdentifierList"
@"MPSectionedIdentifierListEntry"
@"_MPSectionedIdentifierListProxyEntry"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"ICStoreHLSAssetInfo"
v28@0:8@16I24
v28@0:8@16f24
v28@0:8@"MPVolumeController"16B24
v28@0:8@"MPVolumeController"16I24
v32@0:8@"MPVolumeController"16@"NSString"24
v28@0:8@"MPVolumeController"16f24
v32@0:8@"MPVolumeController"16q24
@"UIWindowScene"16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48@56@64
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIImage"
@"UILayoutGuide"
@"MPVolumeController"
@"MPAVEndpointRoute"
@"MPAVOutputDeviceRoute"
v28@0:8@"MPAVLightweightRoutingController"16B24
v32@0:8@"MPAVLightweightRoutingController"16@"NSArray"24
v64@0:8^{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"MPAVLightweightRoutingController"
@"UIButton"
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@"MPMediaLibraryConnectionAssertion"
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16
{shared_ptr<mlcore::EntityQuery>="__ptr_"^{EntityQuery}"__cntrl_"^{__shared_weak_count}}
@"MPVolumeView"
@"UIAlertController"
@"UIWindow"
@"MPSectionedIdentifierListEntryPositionKey"
@"MPSectionedIdentifierListHeadEntry"
@"MPSectionedIdentifierListTailEntry"
@"MPSectionedIdentifierListItemEntry"
@"<MPSectionedIdentifierListDataSource>"
{?=BBBBBBBBq}16@0:8
@36@0:8@16I24@28
@"MPRemoteCommand"
@"MPRemotePlaybackQueue"
@"MPNowPlayingInfoLanguageOption"
Q24@0:8Q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@56@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}}40
@32@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16
{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>=^v^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@0:8
@"MPMediaLibraryEntityTranslationContext"
{vector<long long, std::allocator<long long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::allocator<long long>>="__value_"^q}}
{map<long long, unsigned long, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>>="__tree_"{__tree<std::__value_type<long long, unsigned long>, std::__map_value_compare<long long, std::__value_type<long long, unsigned long>, std::less<long long>, true>, std::allocator<std::__value_type<long long, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<long long, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<long long, std::__value_type<long long, unsigned long>, std::less<long long>, true>>="__value_"Q}}}
{shared_ptr<std::vector<std::shared_ptr<mlcore::Entity>>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQueryResult>="__ptr_"^{EntityQueryResult}"__cntrl_"^{__shared_weak_count}}
@"MPModelStoreBrowseResponse"
@40@0:8@16{CGPoint=dd}24
{CGPoint="x"d"y"d}
@"MPModelAlbumKind"
v32@0:8d16@?24
v48@0:8d16q24@32@?40
v40@0:8@16q24@?32
q24@0:8^B16
B32@0:8@16@?24
@"MPAVRoutingControllerSelectionQueue"
@"<MPAVRoutingControllerDelegate>"
@"MPAVRoutingDataSource"
@"<MPAVOutputDevicePlaybackDataSource>"
@32@0:8@16q24
@"MPAVRoutingControllerSelection"
@"MSVTimer"
@48@0:8^@16@24@32@40
@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"
@48@0:8@16@24@32q40
@40@0:8@16^@24@32
B32@0:8@16^@24
@"_MPModelShimRequestMiddleware"
@"NSArray"24@0:8@"MPRequest"16
v24@0:8@"NSArray"16
@"MPModelResponse"
{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}16
{shared_ptr<mlcore::DeviceLibrary>="__ptr_"^{DeviceLibrary}"__cntrl_"^{__shared_weak_count}}
{map<MPModelStoreBrowseDetailedContentItemType, unsigned long, std::less<MPModelStoreBrowseDetailedContentItemType>, std::allocator<std::pair<const MPModelStoreBrowseDetailedContentItemType, unsigned long>>>="__tree_"{__tree<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::less<MPModelStoreBrowseDetailedContentItemType>, true>, std::allocator<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::less<MPModelStoreBrowseDetailedContentItemType>, true>>="__value_"Q}}}
v32@0:8@"HMHomeManager"16Q24
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"HMAddAccessoryRequest"24
v40@0:8@16q24@32
v32@0:8@"HMHomeManager"16@"NSArray"24
v28@0:8@"HMHomeManager"16B24
v40@0:8@"HMHomeManager"16q24@"NSString"32
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"HMAccessoryNetworkProtectionGroup"24
v32@0:8@"HMHome"16@"HMHomePersonManagerSettings"24
v32@0:8@"HMHome"16@"NSError"24
@"HMHomeManager"
@"HMHome"
@"HMUser"
@"NSSet"
@"<MPHomeManagerObserverDelegate>"
@"MPMusicPlayerQueueDescriptor"
@32@0:8@16B24B28
@32@0:8q16q24
@40@0:8#16@24q32
v40@0:8Q16@24@?32
@32@0:8@16@?24
@36@0:8@16B24@?28
@32@0:8Q16@24
@32@0:8{CGSize=dd}16
v32@0:8{CGSize=dd}16
v40@0:8@"NSString"16@"NSString"24@"NSData"32
v24@0:8@"MPPlaybackArchiveDisplayProperties"16
@72@0:8q16@24@32@40@48Q56@64
v28@0:8B16q20
@"MPPlaybackArchiveDisplayProperties"
@"<MPPProtobufferCoding>"32@0:8@"PBCodable"16@"MPMediaLibrary"24
@"<MPPProtobufferCoding>"24@0:8@"PBCodable"16
@"PBCodable"24@0:8@"MPMediaLibrary"16
@"PBCodable"16@0:8
v32@0:8^q16^@24
@40@0:8@16@24q32
@"MPMediaQueryCriteria"
@"MPMediaPredicate"
@36@0:8r^q16Q24B32
r^q16@0:8
v32@0:8Q16Q24
@"MPModelLibraryImportChangeRequest"
{?="initialized"b1"name"b1"trackCount"b1"editorNotes"b1"shortEditorNotes"b1"releaseDate"b1"lastModifiedDate"b1"artwork"b1"editorialArtwork"b1"tracksTiledArtwork"b1"hasCleanContent"b1"hasExplicitContent"b1"type"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"curatorPlaylist"b1"owner"b1"publicPlaylist"b1"visiblePlaylist"b1"subscribed"b1"userEditableComponents"b1"shareURL"b1"shareShortURL"b1"descriptionText"b1"cloudVersionHash"b1"traits"b1"versionHash"b1"curator"{?="identifiers"b1"name"b1"handle"b1}}
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
v32@0:8@?16@?24
v44@0:8@?16@?24d32B40
@"MPMusicPlayerControllerNowPlaying"
@"MPMusicPlayerControllerNowPlayingTimeSnapshot"
v36@0:8B16@20@28
v48@0:8q16@24@32q40
v44@0:8B16@20@28q36
v40@0:8@16Q24@?32
v36@0:8@16B24q28
@"MPArtworkRepresentationCollection"
@"<MPArtworkDataSource>"
@"<_MPArtworkCatalogOverlayDelegate>"
@40@0:8{CGSize=dd}16@32
@48@0:8@16{CGSize=dd}24@40
@40@0:8@16@24Q32
@"MPArtworkRepresentation"
@"MPPMediaPredicate"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
B24@0:8d16
v28@0:8d16B24
@32@0:8q16Q24
@32@0:8q16d24
Q24@0:8q16
v56@0:8^I16^Q24^Q32^I40^I48
@40@0:8{CGSize=dd}16@?32
v48@0:8{?=[8I]}16
B40@0:8^B16^B24@?32
B48@0:8^B16^B24Q32@?40
B32@0:8Q16q24
@32@0:8Q16q24
@36@0:8Q16q24B32
@28@0:8Q16B24
v40@0:8@16@24q32
v48@0:8@16@24q32@?40
B48@0:8r^Q16Q24q32^Q40
B40@0:8@16q24^Q32
B40@0:8q16q24^Q32
@64@0:8@16@24@32@40@?48@?56
v36@0:8q16B24@?28
v36@0:8@16B24@?28
v56@0:8Q16q24@32q40q48
B56@0:8@16@24q32q40Q48
{os_unfair_lock_s=I}16@0:8
^{os_unfair_lock_s=I}16@0:8
@"<MPMediaLibraryDataProviderPrivate>"
@"QueryCriteriaResultsCache"
@"NSPointerArray"
@"_MPActiveUserChangeMonitor"
^{os_unfair_lock_s=I}
@"MPMediaEntity"
v44@0:8@16q24B32@?36
v24@0:8#16
@24@0:8#16
v32@0:8@"MPMediaPickerController"16@"MPMediaItemCollection"24
v24@0:8@"MPMediaPickerController"16
v32@0:8@"MPMediaPickerController"16@"MPPlaybackArchive"24
v24@0:8@"MPMediaItemCollection"16
v24@0:8@"MPPlaybackArchive"16
@"MPMediaPickerConfiguration"
@"<MPMediaPickerControllerDelegate>"
@"<MPMediaPickerRemoteViewLoader>"
@"MPMediaPickerController"16@0:8
@"UIViewController"16@0:8
@"_UIResilientRemoteViewContainerViewController"
@"MPMusicMediaPickerRemoteViewController"
@"MPMediaPickerController"
@"MPPlaybackArchiveConfiguration"
@"MPAVItem"16@0:8
@"<MPAVQueueCoordinatingDataSource>"
{CGSize=dd}52@0:8q16@24B32d36d44
@40@0:8{CGPoint=dd}16@32
{CGSize=dd}24@0:8d16
v32@0:8{MPAddKeepLocalControlStatus=qd}16
v36@0:8{MPAddKeepLocalControlStatus=qd}16B32
{MPAddKeepLocalControlStatus=qd}16@0:8
@"MPDownloadProgressView"
{MPAddKeepLocalControlStatus="statusType"q"downloadProgress"d}
{?="initialized"b1"title"b1"previewArtwork"b1"staticAssets"{?="identifiers"b1"duration"b1"flavorType"b1"mediaType"b1"url"b1}}
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPMediaDownloadManager"16@"NSArray"24
v40@0:8@"MPMediaDownloadManager"16@"NSArray"24@"NSError"32
{MPLibraryActiveKeepLocalStatus=qd}16@0:8
B20@0:8B16
@"MPLibraryKeepLocalStatusObserverConfiguration"
{MPLibraryActiveKeepLocalStatus="statusType"q"downloadProgress"d}
@40@0:8@16@24@?32
{?="initialized"b1"name"b1"hasBiography"b1"hasSocialPosts"b1"artwork"b1"editorialArtwork"b1"genre"{?="identifiers"b1"name"b1}}
v40@0:8@"MPAVErrorResolver"16@"NSError"24q32
@"MPAVErrorResolverBlockHandler"
@"MPAVErrorResolver"
v24@0:8@"MPDetailScrubController"16
v28@0:8@"MPDetailScrubController"16f24
v32@0:8@"MPDetailScrubController"16q24
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
v28@0:8f16d20
@36@0:8@16d24B32
@28@0:8d16B24
@"MPDetailScrubController"
@"AVTimeFormatter"
@"<MPDetailSliderDelegate>"
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
@"MPMusicPlayerApplicationController"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
v48@0:8@16{CGSize=dd}24@?40
@"CARSessionStatus"
@"<MPPlayableContentDataSource>"
@"<MPPlayableContentDelegate>"
@"MPPlayableContentManagerContext"
@"NSIndexPath"
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{map<long, MPIdentifierSet *, std::less<long>, std::allocator<std::pair<const long, MPIdentifierSet *>>>="__tree_"{__tree<std::__value_type<long, MPIdentifierSet *>, std::__map_value_compare<long, std::__value_type<long, MPIdentifierSet *>, std::less<long>, true>, std::allocator<std::__value_type<long, MPIdentifierSet *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<long, MPIdentifierSet *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<long, std::__value_type<long, MPIdentifierSet *>, std::less<long>, true>>="__value_"Q}}}
@"_MPLazySectionedCollectionStorage"
@"<MPLazySectionedCollectionDataSource>"
@44@0:8@16d24@32B40
q32@0:8@16q24
q40@0:8@16@24q32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
d32@0:8@16@24
d32@0:8@16q24
q32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionCommitAnimating>"32
v40@0:8@"UITableView"16@"UIContextMenuConfiguration"24@"<UIContextMenuInteractionAnimating>"32
v28@0:8@"MPAVRoutingTableViewCell"16B24
v24@0:8@"MPAVRoutingTableViewCell"16
B40@0:8@16q24@32
@"MPAVClippingTableView"
@"MPAVRoutingViewControllerUpdate"
@"MPWeakTimer"
@"<MPAVRoutingViewControllerDelegate>"
@"<MPAVRoutingViewControllerThemeDelegate>"
@"MPVolumeGroupSliderCoordinator"
@"MPStoreModelPlaybackPositionBuilder"
{?="initialized"b1"title"b1"duration"b1"trackCount"b1"trackNumber"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"traits"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1"trackCount"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"RadioAvailabilityController"
@"RadioRecentStationsController"
@"MSVLRUDictionary"
@24@0:8^v16
^v16@0:8
@36@0:8@16B24@28
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8Q16@24@32
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
@48@0:8@16q24{CGSize=dd}32
{CGSize=dd}24@0:8@16
@60@0:8@16@24@32{CGSize=dd}40B56
B40@0:8{CGSize=dd}16@32
@40@0:8@16q24@?32
{CGSize=dd}32@0:8@16q24
@"NSURLSessionConfiguration"
@"NSURLSession"
@"NSURLCache"
@"<NSURLSessionDataDelegate>"
@40@0:8Q16Q24@32
v40@0:8{CGSize=dd}16@32
v32@0:8d16@24
@"MPMediaItemCollection"
@"MPMusicPlayerPlayParameters"
@"MPRadioStation"
@"MPPlaybackArchive"
@48@0:8@16{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}24^v40
{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>=^v^{__shared_weak_count}}16@0:8
{shared_ptr<std::map<long long, std::shared_ptr<mlcore::EntityQueryResult>>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
@"<MPAVErrorResolverDelegate>"
@52@0:8@16@24B32@36@44
@"MPConcreteMediaEntityPropertiesCache"16@0:8
@40@0:8Q16@24@32
@32@0:8@16^B24
@"MPConcreteMediaEntityPropertiesCache"
@"MPArtworkCatalog"
@56@0:8q16@24@32q40q48
@64@0:8q16@24@32q40q48@56
@40@0:8q16@24q32
v40@0:8Q16Q24@?32
@32@0:8Q16^@24
@48@0:8@16@24q32@40
@"<MPMediaLibraryResultSet>"
@"MPMediaQuerySectionInfo"
@40@0:8@16#24q32
@"<MPMediaLibraryDataProvider>"
v48@0:8@16q24q32@?40
v44@0:8@16B24@?28@?36
v40@0:8@16@?24@?32
v52@0:8@16q24B32@?36@?44
v48@0:8@"NSString"16@"NSString"24@"MPMediaQueryCriteria"32@?<v@?@>40
v40@0:8@"NSSet"16q24@?<v@?@"NSDictionary">32
v48@0:8@"NSSet"16q24q32@?<v@?@"NSDictionary">40
@"<MPMediaLibraryResultSet>"24@0:8@"MPMediaQueryCriteria"16
v32@0:8@"MPMediaQueryCriteria"16@?<v@?B>24
v32@0:8@"MPMediaQueryCriteria"16@?<v@?Q>24
@"MPMediaEntityCache"16@0:8
@"<MPArtworkDataSource>"16@0:8
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q^B>36
v44@0:8@"MPMediaQueryCriteria"16B24@?<B@?>28@?<v@?q@"NSDictionary"^B>36
v40@0:8@"NSData"16@?<v@?B@"NSError">24@?<v@?f>32
v52@0:8@"NSString"16q24B32@?<v@?q@"NSString"q^B>36@?<v@?qq@"NSString"q^B>44
v32@0:8q16@"NSArray"24
@"NSSet"16@0:8
v56@0:8@16@24q32q40@?48
B32@0:8^q16Q24
v40@0:8q16q24@?32
v48@0:8Q16Q24q32@?40
^v40@0:8^q16Q24^@32
^q40@0:8^v16^Q24^@32
v40@0:8q16@24q32
v48@0:8q16@24q32@?40
B40@0:8q16q24o^#32
B40@0:8@"NSString"16q24^Q32
B40@0:8@"NSArray"16q24^Q32
B24@0:8@?<B@?>16
v24@0:8@?<v@?>16
v48@0:8@16@"NSString"24q32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
v56@0:8@16@"NSString"24q32q40@?<v@?B@"NSError">48
q24@0:8@"NSDictionary"16
v40@0:8@"NSArray"16q24@?<v@?B>32
v40@0:8q16q24@?<v@?B>32
v40@0:8@"NSString"16q24@?<v@?@"NSError">32
v40@0:8@"NSIndexSet"16q24@?<v@?B>32
v48@0:8Q16Q24q32@?<v@?B>40
v40@0:8q16q24@?<v@?B@"NSError">32
v32@0:8@"MPMediaItem"16@?<v@?@"NSArray">24
v40@0:8q16@"NSString"24q32
v48@0:8q16@"NSString"24q32@?<v@?B@"NSError">40
@"NSString"24@0:8Q16
@24@0:8@"NSString"16
B32@0:8@16@"NSString"24
B24@0:8@"NSString"16
@"MIPMultiverseIdentifier"24@0:8q16
@"MIPMultiverseIdentifier"32@0:8q16q24
v32@0:8@"MPStoreItemLibraryImport"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
B56@0:8@"NSData"16@"NSString"24q32q40Q48
v56@0:8Q16q24@"NSString"32q40q48
v52@0:8@16@24B32q36@?44
@40@0:8q16q24q32
@48@0:8q16q24q32@40
v48@0:8@16q24#32@?40
v56@0:8@16#24@32@40@?48
B40@0:8^q16Q24#32
@"ML3MusicLibrary"
@"MPMediaEntityCache"
v32@0:8Q16@?24
v36@0:8I16@20@?28
v28@0:8I16@20
@40@0:8@16@24#32
@"MPModelStaticResponse"
@"MPMediaLibraryAlbumAppData"
@"CAShapeLayer"
@"ICStoreFileAssetFairPlayInfo"
@"MIPMultiverseIdentifier"
v40@0:8@16Q24Q32
v28@0:8@"<MPVolumeControllerDataSource>"16f24
v28@0:8@"<MPVolumeControllerDataSource>"16B24
v32@0:8@"<MPVolumeControllerDataSource>"16q24
v32@0:8@"<MPVolumeControllerDataSource>"16@"NSString"24
v28@0:8@"<MPVolumeControllerDataSource>"16I24
v24@0:8f16f20
@"<MPVolumeControllerDataSource>"
@"<MPVolumeControllerDelegate>"
@"MPMediaLibraryArtworkRequest"
@"MPMediaLibraryArtworkDataSource"
@32@0:8#16@24
@40@0:8#16@24@32
{shared_ptr<mlcore::EntityCache>=^{EntityCache}^{__shared_weak_count}}48@0:8^v16{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}24
{vector<std::shared_ptr<mlcore::EntityCache>, std::allocator<std::shared_ptr<mlcore::EntityCache>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::shared_ptr<mlcore::EntityCache> *, std::allocator<std::shared_ptr<mlcore::EntityCache>>>="__value_"^v}}
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoute"24
v24@0:8@"MPAVRoutingViewController"16
v32@0:8@"MPAVRoutingViewController"16@"MPAVRoutingViewItem"24
@28@0:8q16B24
@"MPAVRoutingViewController"
@48@0:8@16@24Q32@?40
{shared_ptr<mlcore::LocalizedSearchQuery>="__ptr_"^{LocalizedSearchQuery}"__cntrl_"^{__shared_weak_count}}
@"MPModelLibrarySearchRequest"
#24@0:8@16
{?="_relationshipPreparesSource"b1}
@40@0:8q16q24@32
@48@0:8q16q24@32@40
q24@0:8I16I20
@"MPAVBatteryLevel"
@"MPAVRouteConnection"
@"_MPDownloadProgressRingView"
d24@0:8d16
@"NSOperation"
@"NSObject<OS_dispatch_group>"
@"<MPMediaKitEntityRelationshipPayloadProvider>"
@40@0:8#16@24@?32
v40@0:8@16#24@32
v40@0:8@"NSString"16#24@"NSString"32
v40@0:8@16@24^?32
v48@0:8@16#24@32@?40
@"MPModelPlaylistEntriesShareEligibilityRequest"
@"MPModelLibraryAddToPlaylistChangeRequest"
{?="initialized"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}
@"MPModelPodcastEpisodeKind"
{?="initialized"b1"name"b1"descriptionText"b1"shortDescriptionText"b1"artwork"b1"editorialArtwork"b1}
v28@0:8q16B24
{CGSize=dd}32@0:8@16@24
^{Arc4State=II*}
@40@0:8@16q24q32
@"<MPRandom>"
@52@0:8@16{CGSize=dd}24B40@44
{CGSize=dd}48@0:8{CGSize=dd}16{CGSize=dd}32
@32@0:8@16^{?=iiii}24
@40@0:8Q16@24Q32
{?="initialized"b1"title"b1"descriptionText"b1"duration"b1"artwork"b1"screenshotArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"musicShow"b1"episodeNumber"b1"explicitRating"b1"season"{?="identifiers"b1"number"b1"year"b1"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}
@32@0:8@16^?24
^?16@0:8
@"ICStoreRadioStreamAssetInfo"
v24@0:8@?<v@?@"MPMediaAPICollectionItemMetadataResponse"@"NSError">16
@"NSUUID"16@0:8
@"NSProgress"16@0:8
v52@0:8@16d24@32B40@?44
@"ICMusicKitRequestContext"
@"NSProgress"
@"NSUUID"
@"MPStoreLibraryPersonalizationRequest"
{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}}16@0:8
v40@0:8{vector<long long, std::allocator<long long>>=^q^q{__compressed_pair<long long *, std::allocator<long long>>=^q}}16
v28@0:8B16@20
@"NSUserDefaults"
{?="mobileiPodPrefsChanged"i"mobileiPodPlaybackPrefsChangedAllowCellularData"i"videoPrefsChanged"i"airplayPrefsChanged"i}
@40@0:8@16@24^@32
@"MPStoreHLSAssetInfo"
v24@0:8@"ICEnvironmentMonitor"16
B24@0:8^B16
@"ICMusicSubscriptionStatusMonitor"
@"ICMusicSubscriptionFairPlayKeyStatus"
@"SSVSubscriptionStatus"
@56@0:8@16@24@32@40@48
@20@0:8i16
i24@0:8@16
{?="entityOrder"b1"groupingType"b1"staticEntityType"b1"filteringDisabled"b1"includeNonLibraryEntities"b1}
{?="initialized"b1"endpointType"b1"redownloadParameters"b1"redownloadable"b1"accountIdentifier"b1"shouldReportPlayEvents"b1"subscriptionRequired"b1}
@"MPModelFileAsset"
{MPLibraryAddStatusObserverConfiguration=BBBBB}16@0:8
@"NSDictionary"16@0:8
@44@0:8@16@24i32q36
@"MPRTCReportingSessionSummaryEvent"
@"MPModelLibraryPlaylistEditChangeRequest"
@"Protocol"
@?24@0:8@16
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
@40@0:8{?=qq}16^{?=qq}32
^v24@0:8^v16
v40@0:8{_MSVSignedRange=qq}16@?32
@"MPNowPlayingInfoCenterArtworkContext"
{_MSVSignedRange="location"q"length"q}
@"MPArtworkResizeUtility"
@"<MPNowPlayingPlaybackQueueDataSource>"
@"<MPNowPlayingInfoLyricsDelegate>"
{?="createPlaybackQueue"^v"createContentItem"^v"createChildItem"^v"metadata"^v"artwork"^v"info"^v"languageOptions"^v"lyrics"^v}
@"<MPNowPlayingPlaybackQueueDelegate>"
@"MRPlayerPath"
B32@0:8:16@?24
@"MPMediaItemArtwork"
@40@0:8@16q24@32
@"MRSendCommandHandlerDialogAction"
@"MRSendCommandHandlerDialog"
@"ICMusicSubscriptionStatus"
v32@0:8@"HSBrowser"16@"HSHomeSharingLibrary"24
@"HSHomeSharingLibrary"
{?="initialized"b1"name"b1"shortName"b1"hasSocialPosts"b1"editorNotes"b1"shortEditorNotes"b1"curatorKind"b1"curatorSubKind"b1"editorialArtwork"b1"brandLogoArtwork"b1}
@28@0:8f16q20
@52@0:8d16d24f32d36q44
@56@0:8@16@24@32q40q48
@"UICubicTimingParameters"
@24@0:8@"NSDictionary"16
@48@0:8@16Q24q32q40
@56@0:8@16Q24q32q40Q48
@"MPMediaLibraryArtwork"
@"ML3Artwork"
@"NSDictionary"24@0:8@"MPIdentifierSet"16
@40@0:8@16Q24^@32
@48@0:8@16Q24@32^@40
@"MSVSQLDatabase"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
B56@0:8@16@24@32q40@48
B48@0:8@16@24q32@40
B64@0:8@16q24@32@40q48@56
B64@0:8@16@24q32@40@48@56
B56@0:8@16@24@32@40q48
B56@0:8@"NSDictionary"16@"NSString"24@"MPIdentifierSet"32q40@"NSDate"48
B48@0:8@"NSURL"16@"MPIdentifierSet"24q32@"NSDate"40
B64@0:8@"NSData"16q24@"NSString"32@"NSString"40q48@"NSArray"56
B64@0:8@"NSDictionary"16@"MPIdentifierSet"24q32@"NSString"40@"NSDate"48@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"56
B56@0:8@"MPIdentifierSet"16@"MPIdentifierSet"24@"NSString"32@"NSString"40q48
B32@0:8@"MPIdentifierSet"16@"NSString"24
B48@0:8@16@24@32q40
@"MSVSQLDatabaseTransaction"
@"MSVSQLStatement"
@56@0:8@16@24q32@40@48
@64@0:8@16@24q32@40@48@56
@60@0:8@16@24@32@40@48B56
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"hrefURL"b1"refreshURL"b1"traits"b1"displaysAsGridCellInCarPlay"b1"displaysAsTitledSectionWithRowsInCarPlay"b1}
@"MPModelForYouRecommendationMusicKitItemBuilder"
@"NSDateFormatter"
@"MPMutableSectionedCollection"
Q32@0:8Q16Q24
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSAuthorizationRequest"16@"SSURLConnectionResponse"24
@40@0:8@16Q24@32
@64@0:8@16Q24@32Q40@48Q56
@"SSAuthorizationRequest"
@"MPHomeSharingML3DataProvider"
@48@0:8{?=[8I]}16
v24@0:8@"MPRemoteCommand"16
@28@0:8#16I24
@"MPSkipIntervalCommand"
@"MPRatingCommand"
@"MPChangePlaybackRateCommand"
@"MPFeedbackCommand"
@"MPChangePlaybackPositionCommand"
@"MPChangeRepeatModeCommand"
@"MPChangeShuffleModeCommand"
@"MPAdvanceShuffleModeCommand"
@"MPAdvanceRepeatModeCommand"
@"MPSetPlaybackQueueCommand"
@"MPInsertIntoPlaybackQueueCommand"
@"MPReorderQueueCommand"
@"MPSetPlaybackSessionCommand"
@"MPPreloadPlaybackSessionCommand"
@"MPSetPriorityForPlaybackSessionCommand"
@"MPChangeQueueEndActionCommand"
@48@0:8Q16Q24Q32Q40
@"SSRentalCheckoutRequest"
@"MPModelLibraryHasPurchasesRequest"
@"ICStorePlatformMetadata"
@36@0:8@16@24B32
@48@0:8q16q24@?32@?40
B40@0:8q16q24^@32
@"NSMutableIndexSet"
v32@0:8Q16q24
v40@0:8Q16q24Q32
@"ICCloudItemIDList"
v36@0:8Q16B24@?28
v48@0:8Q16@24@32@?40
v56@0:8Q16@24@32@40@?48
v48@0:8@16@24Q32@?40
v40@0:8q16Q24@?32
v48@0:8q16@24Q32@?40
v56@0:8q16q24q32q40@?48
v48@0:8q16q24q32q40
v48@0:8q16q24Q32@?40
v48@0:8q16q24Q32@40
v56@0:8q16q24Q32@40@?48
@"ICCloudClient"
@"NSObject<ICCloudAvailability>"
@"MSVDistributedNotificationObserver"
{ITColor=dddd}16@0:8
@48@0:8{ITColor=dddd}16
@56@0:8{?=qiIq}16@40@?48
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
@"AVQueuePlayer"
v40@0:8@16Q24@32
@"MPStoreModelRequest"
@"MPModelPlaylistEntryKind"
@"ICStoreURLRequest"
@"<MPStoreSocialRequestOperationDataSource>"
q24@0:8d16
@"<MPRequestCancellationToken>"
@"<MPRequestResponseControllerDelegate>"
^v24@0:8@16
q24@0:8^v16
B24@0:8^?16
@52@0:8@16@24@32@40B48
{?="isInitialized"B"itemType"B"url"B"reason"B"utterance"B"backedByStoreItemMetadata"B"album"B"playlist"B"radioStation"B"subgroup"B}
@"MPModelForYouRecommendationMusicKitGroupBuilder"
@"<MPNowPlayingContentItemArtworkDataSource>"
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
:16@0:8
v24@0:8:16
@"NSEnumerator"
@"MPPlaybackContext"
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1}
@"MPModelForYouRecommendationItemBuilder"
@"<MPSectionedIdentifierListDelegate>"
@"<MPSectionedIdentifierListAnnotationDelegate>"
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPChangeDetails"16@?<@"NSString"@?q>24
@"NSArray"24@0:8@"<MPExclusiveAccessToken>"16
@32@0:8@?16@?24
@32@0:8#16@?24
v40@0:8@16#24@?32
v24@0:8@"MPMediaControlsConfiguration"16
q24@0:8Q16
@"MPModelLibraryDownloadQueueRequest"
@"MPMediaLibraryEntityTranslator"
{?="initialized"b1"itemType"b1"backedByStoreItemMetadata"b1"album"b1"playlist"b1"radioStation"b1"subgroup"b1}
@"MPModelForYouRecommendationGroupBuilder"
@"MRAVRoutingDiscoverySession"
r^v16@0:8
@"SBCPlaybackPositionSyncService"
@"SBCPlaybackPositionDomain"
v29@0:8{MPLibraryAddStatusObserverConfiguration=BBBBB}16@21
@"MPCloudController"
@"MPCloudServiceStatusController"
{MPLibraryAddStatusObserverConfiguration="isValidContentType"B"isLibraryAdded"B"hasCleanContent"B"hasExplicitContent"B"isLibraryAddEligible"B}
@"MPRadioController"
@40@0:8Q16{CGSize=dd}24
@56@0:8Q16@24@32@40@48
@"<_MPActiveUserChangeMonitorDelegate>"
@20@0:8I16
v36@0:8@16:24B32
@28@0:8I16@20
@"<MPRemoteCommandDelegate_Internal>"
@"<MPRemoteCommandDelegate_Private>"
@20@0:8f16
v48@0:8@16@24q32@40
@"MRSendCommandResultStatus"
@"MPRemoteCommandHandlerDialog"
@50@0:8@16{?=BB}24@26@34@42
@58@0:8@16@24{?=BB}32@34@42@50
B60@0:8@16B24@28q36@44@52
{?=BB}16@0:8
{?="useCarPlayBrowseTopLevelContentOnly"B"useCarPlayBrowseTopLevelRequestReorderingHeuristics"B}
@"MPStoreItemMetadataResponse"
@"MPPMediaPredicateValue"
{?="comparisonType"b1}
@"MPModelTVEpisodeKind"
@48@0:8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}16@32@40
@"MPModelLibrarySearchScope"
v40@0:8{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}16@0:8
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}24@0:8^v16
B48@0:8{CGSize=dd}16{CGSize=dd}32
@56@0:8@16@24{CGSize=dd}32@?48
@48@0:8@16@24d32d40
@"AVRoutingSessionManager"
@"MPMRAVOutputContextWrapper"
@"MRAVOutputDevice"
v24@0:8@"MPMediaPickerConfiguration"16
f24@0:8d16
@"UISelectionFeedbackGenerator"
@"UIControl<MPDetailedScrubbing>"
@"<MPDetailScrubControllerDelegate>"
{?="initialized"b1"title"b1"duration"b1"trackNumber"b1"trackCount"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"cloudStatus"b1"gaplessInfo"b1"volumeAdjustment"b1"traits"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1"hasTimeSyncedLyrics"b1}}
v32@0:8@16^{__CFUserNotification=}24
@24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}16@0:8
^{__CFRunLoopSource=}
^{__CFUserNotification=}
@40@0:8q16q24@?32
v36@0:8q16#24B32
v32@0:8q16#24
@48@0:8q16q24q32@?40
^v24@0:8#16
v32@0:8#16@?24
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
^{__CFDictionary=}
B20@0:8I16
@"MPMRAVEndpointWrapper"
@48@0:8q16@24@32@40
v24@0:8@"NSData"16
v48@0:8q16#24q32@40
v48@0:8q16q24q32@40
@"MPModelLibraryKeepLocalChangeRequest"
v24@0:8@"HMSettings"16
v40@0:8@"HMSettings"16@"NSUUID"24@"NSString"32
v40@0:8@"HMUser"16@"HMAssistantAccessControl"24@"HMHome"32
v40@0:8@"HMUser"16@"HMMediaContentProfileAccessControl"24@"HMHome"32
v32@0:8@"HMUser"16@"HMPhotosPersonManagerSettings"24
v32@0:8@"HMUser"16@"HMFPairingIdentity"24
v28@0:8@"HMUser"16B24
@"HMSettings"
@"MPModelTVSeasonKind"
^q16@0:8
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="shouldContain"b1}
{?="doublePredicateValue"b1"integerPredicateValue"b1"floatPredicateValue"b1"boolPredicateValue"b1}
@40@0:8#16@24^@32
B40@0:8@16@24^@32
@"MPStoreSocialRequestOperation"
v40@0:8q16q24@32
{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>=^v^{__shared_weak_count}}16
{shared_ptr<std::map<std::string, mlcore::ModelPropertyBase *>>="__ptr_"^v"__cntrl_"^{__shared_weak_count}}
@40@0:8#16^v24B32B36
@32@0:8#16^v24
v32@0:8r^v16@?24
v32@0:8@16^v24
v40@0:8@16r^v24@?32
v56@0:8@16r^v24r^v32@?40@?48
v40@0:8@16#24^v32
v44@0:8@16#24B32^v36
v60@0:8@16#24B32^v36r^v44@?52
@48@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40
@40@0:8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}16@32
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{shared_ptr<mlcore::PropertiesQuery>=^{PropertiesQuery}^{__shared_weak_count}}48@0:8@16@24@32@40
{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}24@0:8@16
{vector<mlcore::SortDescriptor, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::allocator<mlcore::SortDescriptor>>=^{SortDescriptor}}}24@0:8@16
{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}24@0:8@16
{map<std::string, mlcore::ModelPropertyBase *, std::less<std::string>, std::allocator<std::pair<const std::string, mlcore::ModelPropertyBase *>>>={__tree<std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>, std::allocator<std::__value_type<std::string, mlcore::ModelPropertyBase *>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, mlcore::ModelPropertyBase *>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, mlcore::ModelPropertyBase *>, std::less<std::string>, true>>=Q}}}28@0:8@16B24
@64@0:8@16{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}24@40@48@56
{vector<mlcore::ModelPropertyBase *, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::allocator<mlcore::ModelPropertyBase *>>=^^{ModelPropertyBase}}}32@0:8@16^v24
@"MPStoreModelMovieMediaClipBuilder"
{?="initialized"b1"title"b1"description"b1"duration"b1"releaseDate"b1"explicitRating"b1"tagline"b1"artwork"b1"editorialArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1}
v32@0:8@"NSString"16@?<v@?@"<MPMutableLocalLibraryIdentifiers>">24
v32@0:8@"NSString"16@?<v@?@"<MPMutablePersonalStoreIdentifiers>">24
v24@0:8@?<v@?@"<MPMutableUniversalStoreIdentifiers>">16
v24@0:8@?<v@?@"<MPMutableRadioIdentifiers>">16
B40@0:8@16{CGSize=dd}24
@"BSUIEmojiLabelView"
@"ML3ArtworkConfiguration"
@48@0:8@16@24@32Q40
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
@"MCProfileConnection"
v24@0:8@?<v@?f>16
@"<MPVolumeControllerDataSourceDelegate>"16@0:8
v24@0:8@"<MPVolumeControllerDataSourceDelegate>"16
f20@0:8f16
@"AVSystemController"
@"<MPVolumeControllerDataSourceDelegate>"
v28@0:8I16I20B24
@"ICStoreArtworkInfo"
@"ICStoreVideoArtworkInfo"
@"SSDownload"
@"SSPurchase"
@"SSPurchaseResponse"
v32@0:8@"SSDownloadManager"16@"NSArray"24
v24@0:8@"SSDownloadManager"16
v32@0:8@"SSPurchaseManager"16@"NSArray"24
v32@0:8@"UIAlertView"16q24
v24@0:8@"UIAlertView"16
B24@0:8@"UIAlertView"16
v24@0:8@"SSDownloadHandler"16
v32@0:8@"SSDownloadHandler"16@"SSDownloadHandlerSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
B32@0:8@"SSDownloadHandler"16@"SSDownloadSession"24
v32@0:8@"SSDownloadHandler"16@"SSDownloadAuthenticationSession"24
v32@0:8@?16@24
@"SSDownloadManager"
@"SSPurchaseManager"
v40@0:8@"MPStoreDownloadManager"16@"NSArray"24@"NSArray"32
v32@0:8@"MPStoreDownloadManager"16@"MPStoreDownload"24
v32@0:8@"MPStoreDownloadManager"16@"NSArray"24
v24@0:8@"MPStoreDownloadManager"16
@"MPStoreDownload"
{?="initialized"b1"name"b1"uncensoredName"b1"handle"b1"biography"b1"artwork"b1"isVerified"b1"isPrivate"b1}
@"MPModelSongKind"
@"MPPCompoundPredicate"
@"MPPConditionalPredicate"
@"MPPPersistentIDsPredicate"
@"MPPPropertyPredicate"
@"MPPSearchStringPredicate"
{?="type"b1}
@"MRContentItemMetadataAudioRoute"
