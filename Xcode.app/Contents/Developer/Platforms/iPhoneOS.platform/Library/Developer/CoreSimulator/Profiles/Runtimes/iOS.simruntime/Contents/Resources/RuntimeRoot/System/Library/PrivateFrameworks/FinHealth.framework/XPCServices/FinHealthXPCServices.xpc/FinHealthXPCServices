@(#)PROGRAM:FinHealthXPCServices  PROJECT:FinHealth-1
aggregateType
comparator
amount
startDate
endDate
merchantID
merchantDisplayName
name
processingWindowStartDate
processingWindowEndDate
<%@: %p; 
%@: '%@'; 
%@: '%lu'; 
currentStatement: '%@'; 
previousStatement: '%@'; 
category
priority
MinimumRemainingPayment
LastPayment
LastPaymentPlusMerchantCategory1
LastPaymentPlusMerchantCategory2
NewPurchases
PayInNineMonths
PayInEightMonths
PayInSevenMonths
PayInSixMonths
PayInFiveMonths
PayInFourMonths
PayInThreeMonths
PayInTwoMonths
PayInNineMonthsFromUtilization
PayInSixMonthsFromUtilization
PayInThreeMonthsFromUtilization
PayInPlanCompletion
RemainingStatementBalance
CurrentBalance
OneThirdOfCurrentBalance
OneSixthOfCurrentBalance
OneNinthOfCurrentBalance
PayInThreeMonthsForTransactor
PayInSixMonthsForTransactor
PayInNineMonthsForTransactor
OneThirdOfStatementBalance
OneSixthOfStatementBalance
OneNinthOfStatementBalance
AverageOfMinimumAndStatetmentBalance
CardBalance
None
unknown
amount: '%@'; 
category: '%@'; 
priority: %ld; 
v8@?0
/%@.mlmodelc
/%@-trained.mlmodelc
multi:softprob
-[FinHealthUpdatableBinaryClassifier trainWithDataSet:trainingDataPointCount:]
v16@?0@"MLUpdateContext"8
-[FinHealthUpdatableBinaryClassifier trainWithDataSet:trainingDataPointCount:]_block_invoke
-[FinHealthUpdatableBinaryClassifier _compileModelWithName:]
OnDeviceModels/
mlmodel
%@.mlmodelc
-[FinHealthUpdatableBinaryClassifier _createTrainingData:trainingDataPointCount:]
-[FinHealthUpdatableBinaryClassifier resetModels]
/Library/FinHealth/mlmodels/
com.apple.finhealth.geoservices
hasLocation == %@
v24@?0@"GEOSpatialPlaceLookupResult"8@"NSError"16
FHSmartFeatureAggregateTypeTopMerchant
FHSmartFeatureAggregateTypeFavoriteRestaurant
FHSmartFeatureAggregateTypeAmountAboveAverage
FHSmartFeatureAggregateTypeAmountBelowAverage
FHSmartFeatureAggregateTypePeakSpend
FHSmartFeatureAggregateTypeFrequentShop
FHSmartFeatureAggregateTypeAmountVeryExpensive
FHSmartFeatureAggregateTypeRecurring
FHSmartFeatureAggregateTypeRegular
FHSmartFeatureAggregateTypeIrregular
FHSmartFeatureCompoundTypePointsOfInterest
FHSmartFeatureCompoundTypeEventTagging
FHSmartFeatureCompoundTypeRelatedMerchants
FHSmartFeatureCompoundTypeSoldProducts
FHSmartFeatureCompoundTypeRecurringChange
featureLabel
featureRank
eventIdentifiers
eventStartDate
eventEndDate
"%@",
"%f"
"Event identifiers: %@"
"Event start date: %@"
"Event end date:%@"
FIN_HEALTH_SEARCH
maxTotalSemanticTags
-[FinHealthTrialManager _init]
-[FinHealthTrialManager getSerializedFactorsToLevels:]
TREATMENT_ID
v32@?0@"FHTransactionDetails"8Q16^B24
0.33
0.67
v32@?0@"NSNumber"8@"NSDecimalNumber"16^B24
Success
Fail
select sql from sqlite_master where type='table' and name=%@;
select count(*) from PRAGMA_TABLE_INFO('features_datetime');
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
-[FinHealthDatabaseManager init:multiThreadingEnabled:]_block_invoke
B20@?0@"PQLConnection"8i16
YYYY-MM-dd HH:mm:ss Z
v16@?0@"FinHealthBatchProcessorBuilder"8
%llu
@distinctUnionOfArrays.FHSmartFeatureCompoundTypeEventTagging
SELF[%@] %@ '%@'
-[FinHealthDatabaseManager _computeSingleMerchantAggregateFeature:]
v32@?0@"NSString"8Q16^B24
-[FinHealthDatabaseManager _computeSingleDatetimeAggregateFeature:]
-[FinHealthDatabaseManager _computeSingleAmountAggregateFeature:]
%@_%ld_%.2f
(SELF.%K == nil and SELF.%K == nil) or %lu - SELF.%K.%K < SELF.%K.%K - SELF.%K.%K
select simple_features.t_identifier, group_concat(FHSmartFeatureAggregateType, '
'), compound_features.t_compound_feature_value simple_features from (
 union 
) simple_features left join features_compound_realtime compound_features on simple_features.t_identifier = compound_features.t_identifier 
where simple_features.t_identifier == '%@' 
GROUP BY simple_features.t_identifier limit %d
union
-[FinHealthDatabaseManager _computeAllAggregateFeaturesWithTransactionId:]
v16@?0@"NSError"8
 limit %d
Successfully performed operation
Failed to perform
-[FinHealthDatabaseManager computeRecurringClassesForTransactions]
v16@?0@"FHTransaction"8
v16@?0@"NSArray"8
@"NSDictionary"8@?0
v32@?0@"FHAggregateFeature"8Q16^B24
v32@?0@"FHSmartCompoundFeatureRankedValue"8Q16^B24
v32@?0@"FHSmartCompoundFeature"8Q16^B24
%@ :%lu
-[FinHealthStateController insertOrUpdateTransaction:]
B24@?0@8@"NSDictionary"16
-[FinHealthStateController _processAggregateFeaturesWithHardReset:]_block_invoke
v16@?0@"NSDictionary"8
v32@?0@"NSNumber"8Q16^B24
@distinctUnionOfObjects.%@
self isKindOfClass: %@
reservationFor
airline
displayName CONTAINS[c] %@
v20@?0B8@"NSArray"12
v24@?0@"NSString"8^B16
features_deterministic_realtime for id %@
transaction_features for id %@
transactions for id %@
transactionSourceIdentifier
SELF.%K == %@
com.apple.FinHealth.FinHealthXPCServices
-[FinHealthStateController _clientConnection]_block_invoke
timeOfDay: '%lu'; 
transactionDateAtZerothHour: '%lu'; 
isInternationalSpend: '%d'; 
isTapToPay: '%d'; 
merchantCategory: '%lu'; 
country: '%@'; 
merchantDisplayName: '%@'; 
smartCompoundFeatures: '%@'; 
[-/.+%&@#_:\\\*'",()]+
(\s+)
(?=[A-Z][a-z])
(?<=[a-z])(?=[A-Z])
(?<=[0-9])(?=[a-zA-Z])
(?<=[a-zA-Z])(?=[0-9])
hotelstravel.transport.airlines
SGEventMetadataKey
SGEventMetadataSchemaOrgKey
fh_schema
transactions
transaction_features
features_deterministic_realtime
features_predicted_realtime
features_prediction_labels
features_compound_realtime
features_merchant
features_datetime
features_amount
features_heuristics
features_events
t_date_index
t_date
t_identifier_index
t_identifier
(sch_id integer primary key autoincrement, sch_version_id integer, sch_upgrade_status integer, sch_date integer, sch_getall_status integer)
(t_tid integer primary key autoincrement, t_identifier text, t_source_identifier text, t_amount integer, t_currencycode text, t_timezone integer, t_date integer, t_status integer, t_status_changed_date integer, t_source integer, t_type integer, a_type integer, t_fh_internal_state integer, m_merchant_identifier text, m_industrycode integer, m_category integer, m_detailed_category text, m_displayname text, m_country text, m_maps_merchant_id text, m_maps_merchant_result_id integer, m_maps_merchant_brand_id text, m_maps_merchant_brand_result_id integer, lat real, long real, v_accuracy real, h_accuracy real)
(f1_tid integer primary key autoincrement, t_identifier text UNIQUE, a integer, b integer, c integer, f integer, g integer)
(f2_tid integer primary key autoincrement, t_identifier text, t_feature_name text, t_feature_predicted_value integer, UNIQUE(t_identifier, t_feature_name))
(feature_label_id integer primary key autoincrement, t_feature_name text, t_feature_predicted_value integer, t_smart_feature_name text, UNIQUE(t_feature_name, t_feature_predicted_value, t_smart_feature_name))
(f3_tid integer primary key autoincrement, t_identifier text UNIQUE, t_compound_feature_value text)
(e_id integer primary key autoincrement, e_identifier text, start_date integer, end_date integer, UNIQUE(e_identifier, start_date, end_date))
(merchant_aggregate_id integer primary key autoincrement, merchant_aggregate_type text, merchant_aggregate_value text, start_date integer, end_date integer, UNIQUE(merchant_aggregate_type, start_date, end_date))
(datetime_aggregate_id integer primary key autoincrement, datetime_aggregate_type text, datetime_aggregate_value_start_date integer, datetime_aggregate_value_end_date integer, start_date integer, end_date integer, UNIQUE(datetime_aggregate_type, start_date, end_date))
(amount_aggregate_id integer primary key autoincrement, amount_aggregate_type text, amount_aggregate_value integer, comparison_operator text, start_date integer, end_date integer, UNIQUE(amount_aggregate_type, start_date, end_date))
(t_identifier text primary key, t_features text, t_compound_features text, locale text, t_mark_for_delete integer)
(t_identifier text primary key, t_heuristics_identifier text, t_heuristics_value integer, t_heuristics_score real)
insert into fh_schema (sch_version_id, sch_upgrade_status, sch_date, sch_getall_status) values (%d, %d, %d, %d)
insert or replace into features_deterministic_realtime (t_identifier, a, b, c, f, g) values (%@, %d, %d, %d, %d, %d)
insert or replace into features_predicted_realtime (t_identifier, t_feature_name, t_feature_predicted_value) values (%@, %@, %d)
insert or replace into features_compound_realtime (t_identifier, t_compound_feature_value) values (%@, %@)
insert or replace into features_heuristics (t_identifier, t_heuristics_identifier, t_heuristics_value, t_heuristics_score) values (%@, %@, %d, %f)
insert or replace into features_events (e_identifier, start_date, end_date) values (%@, %d, %d)
insert or replace into transaction_features (t_identifier, t_features, t_compound_features, locale, t_mark_for_delete) values (%@, %@, %@, %@, %d)
insert or replace into features_prediction_labels (t_feature_name, t_feature_predicted_value, t_smart_feature_name) values (%@, %d, %@)
update transaction_features set t_mark_for_delete = %d where t_identifier == %@
delete from transaction_features where t_mark_for_delete == %d
delete from transaction_features where t_identifier in (select t_identifier from transactions t where t.t_source_identifier == %@)
select t_features, t_compound_features, locale from transaction_features where t_identifier == %@
select t_identifier, t_features, t_compound_features, locale from transaction_features where t_mark_for_delete = %d limit %d
select * from features_heuristics limit %d
select * from features_events where end_date < %d limit %d
select t_identifier from features_predicted_realtime where t_feature_name='FHSmartFeatureAggregateTypeRecurring' and t_feature_predicted_value=%d limit %d
select * from features_deterministic_realtime where t_identifier == %@
select t_identifier, t_compound_feature_value from features_compound_realtime where t_identifier == %@
create table %@ %@;
create index %@ on %@(%@);
drop table %@;
delete from %@;
select * from transactions limit %d, %d
select * from transactions t where t.t_identifier == %@ order by t_date desc limit %d
select * from transactions t where t_fh_internal_state == %d order by t_date desc limit %d offset %d
select * from transactions t where t_date >= %d and t_date <= %d order by t_date desc limit %d
select t.t_identifier, ifnull(h.t_heuristics_score, -1) from transactions t left join features_heuristics h on t.t_identifier == h.t_identifier order by t.m_displayname asc, t.t_date limit %d
select * from transactions where m_detailed_category == %@ order by t_date desc
insert into transactions (t_identifier, t_fh_internal_state) values (%@, %d)
update transactions set t_source_identifier = %@, t_amount = %d, t_currencycode = %@, t_timezone = %@, t_date = %d, t_status = %d, t_status_changed_date = %d, t_source = %d, t_type = %d, a_type = %d, t_fh_internal_state = %d, m_merchant_identifier = %@, m_industrycode = %d, m_category = %d, m_detailed_category = %@, m_displayname = %@, m_country = %@, m_maps_merchant_id = %@, m_maps_merchant_result_id = %d, m_maps_merchant_brand_id = %@, m_maps_merchant_brand_result_id = %d, lat = %f, long = %f, v_accuracy = %f, h_accuracy = %f where t_identifier == %@
select sch_version_id, sch_upgrade_status from fh_schema order by sch_id desc limit %d;
select sch_getall_status from fh_schema where sch_version_id == %d;
update fh_schema set sch_getall_status = %d where sch_version_id == %d
select * from transactions t where t.t_type == %lu and t.t_status == %lu order by t_date desc limit %d
update transactions set t_fh_internal_state = %d where t_date >= %d and t_date <= %d and t_fh_internal_state %@ %d and t_fh_internal_state != %d
select m_displayname, count(*) c, m_detailed_category from transactions where transactions.t_date >= %d and transactions.t_date <= %d and transactions.t_type == %lu and transactions.t_status == %lu group by m_displayname order by c desc
insert or replace into features_merchant (merchant_aggregate_type, merchant_aggregate_value, start_date, end_date) values (%@, %@, %d, %d)
select merchant_aggregate_value, start_date, end_date from features_merchant where merchant_aggregate_type == %@ order by end_date desc
select t_identifier, '%@,%lu,%lu' FHSmartFeatureAggregateType from transactions where m_displayname == "%@"
insert or replace into features_amount (amount_aggregate_type, amount_aggregate_value, comparison_operator, start_date, end_date) values (%@, %d, %@, %d, %d)
select amount_aggregate_value, comparison_operator, start_date, end_date from features_amount where amount_aggregate_type == %@ order by end_date desc
select t_identifier, '%@,%lu,%lu' FHSmartFeatureAggregateType from transactions where t_amount %@ %lu
select sum(t.t_amount) daily_spend, f.b from transactions t inner join features_deterministic_realtime f on t.t_identifier = f.t_identifier where t.t_date >= %d and t.t_date <= %d and t.t_type == %lu and t.t_status == %lu group by f.b order by daily_spend desc limit %d
insert or replace into features_datetime (datetime_aggregate_type, datetime_aggregate_value_start_date, datetime_aggregate_value_end_date, start_date, end_date) values (%@, %d, %d, %d, %d)
select datetime_aggregate_value_start_date, datetime_aggregate_value_end_date, start_date, end_date from features_datetime where datetime_aggregate_type == %@ order by end_date desc
select t_identifier, '%@,%lu,%lu' FHSmartFeatureAggregateType from transactions where t_date >= %lu and t_date <= %lu
select f.t_identifier, l.t_smart_feature_name FHSmartFeatureAggregateType from features_predicted_realtime f inner join features_prediction_labels l on f.t_feature_name = l.t_feature_name and l.t_feature_predicted_value = f.t_feature_predicted_value where f.t_identifier in (select t_identifier from transactions where t_date >= %lu and t_date <= %lu and t_fh_internal_state == %lu) and f.t_feature_name in (%@)
delete from features_deterministic_realtime where t_identifier in (select t_identifier from transactions t where t.t_source_identifier == %@)
delete from features_predicted_realtime where t_identifier in (select t_identifier from transactions t where t.t_source_identifier == %@)
delete from features_compound_realtime where t_identifier in (select t_identifier from transactions t where t.t_source_identifier == %@)
delete from transactions where t_source_identifier == %@
delete from features_heuristics where t_identifier in (select t_identifier from transactions t where t.t_source_identifier == %@)
delete from features_events where e_identifier == %@
delete from features_events where start_date %@ %d and end_date %@ %d
finhealth.db
/Library/FinHealth/
com.apple.FinHealth.Framework
featureEventIdentifiers
featureEventStartDate
featureEventEndDate
featureEventDateRangeKey
FeaturesResources
batchInsertOrUpdatePass
undefined
featureValueIndex
aggrWindow
expression
predicate
index
filteringOperator
match
amount_input
expensive_prediction
FinHealthBaseExpensiveClassifier
com.apple.FinHealth.stats
type
run_time
select f.t_identifier, ifnull(t_features, ''), ifnull(t_compound_features, ''), locale, t_mark_for_delete, ifnull(t.m_displayname, "-") as m_displayname, t_date from transaction_features f inner join transactions t on t.t_identifier = f.t_identifier limit %d
FHMerchantSmartFeatures
FHAmountSmartFeatures
FHDateTimeSmartFeatures
features
json
identifier
amountFromDatabase
currencyCode
transactionDate
transactionStatusChangedDate
transactionStatus
transactionSource
transactionType
accountType
transactionInternalState
timeZone
merchantUniqueIdentifier
rawName
displayName
industryCategory
industryCode
country
merchantDetailedCategory
mapsMerchantID
mapsMerchantResultProviderID
mapsMerchantBrandID
mapsMerchantBrandResultProviderID
hasLocation
location
locationLatitude
locationLongitude
locationHorizontalAccuracy
locationVerticalAccuracy
Unknown
PeerPayment
Broadway
Food Drinks
Shopping
Travel
Services
Health
Transport
Count
[%@: "%@"]
%@: '%llu'; 
%@: '%d'; 
%@: '%f'; 
rankedValues
locale
compoundFeature
featureKey
smartFeatures
aggregateFeatures
aggregateFeaturesWithProcessingWindow
compoundFeatures
transactionIdentifier
FinHealthClient
FinHealthServer
FinHealthSQL
FinHealthCore
com.apple.FinHealth
text_heuristics
english_localizations
stop_words
category_expansions
-[FinHealthTextSimilarityFeatures _init]
%@|%@|%@|%@|%@
%.4f
v32@?0@"NSString"8d16^B24
length > 0
lowercaseString
v40@?0@"NSString"8{_NSRange=QQ}16^B32
restaurants
Breakfast
Lunch
Dinner
0.55
v24@?0@"NSString"8d16
q24@?0@"FHSmartCompoundFeatureRankedValue"8@"FHSmartCompoundFeatureRankedValue"16
com.apple.finhealth.all-access
application-identifier
NOT (SELF.%K < %@)
NOT (SELF.%K > %@)
(SELF.%K <= %@) AND (%@ <= SELF.%K)
v32@?0@8Q16^B24
v24@?0@"MKLocalSearchResponse"8@"NSError"16
-[FinHealthRealtimeFeaturesRequest _getLocalSearchResponse:transactionLocation:]_block_invoke_2
v32@?0@"MKMapItem"8Q16^B24
%f, %f
-[FinHealthRealtimeFeaturesRequest _getPointsOfInterestFromMapKit:longitude:horizontalAccuracy:verticalAccuracy:]
v24@?0@"PPScoredEvent"8^B16
SELF.%K == %lu
SELF.%K != nil
SELF.%K == %lu AND SELF.%K == %lu
B32@?0@"NSString"8@"NSDecimalNumber"16^B24
(SELF.%K >= %@) AND (SELF.%K <= %@)
encodeInteger:forKey:
encodeObject:forKey:
init
decodeIntegerForKey:
decodeObjectForKey:
stringWithFormat:
appendFormat:
type
name
hash
processingWindowStartDate
processingWindowEndDate
isEqual:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
description
setType:
setName:
setProcessingWindowStartDate:
setProcessingWindowEndDate:
.cxx_destruct
_type
_name
_processingWindowStartDate
_processingWindowEndDate
TQ,N,V_type
T@"NSString",C,N,V_name
T@"NSDate",C,N,V_processingWindowStartDate
T@"NSDate",C,N,V_processingWindowEndDate
amount
comparator
setAmount:
decodeObjectOfClass:forKey:
setComparator:
initWithAmount:comparator:
_comparator
_amount
T@"NSString",C,N,V_comparator
TQ,N,V_amount
merchantID
merchantDisplayName
setMerchantID:
setMerchantDisplayName:
initWithMerchantID:merchantDisplayName:
_merchantID
_merchantDisplayName
T@"NSString",C,N,V_merchantID
T@"NSString",C,N,V_merchantDisplayName
startDate
endDate
setStartDate:
setEndDate:
initWithStartDate:endDate:
_startDate
_endDate
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
currentStatement
previousStatement
initWithcurrentStatement:previousStatement:
setCurrentStatement:
setPreviousStatement:
_currentStatement
_previousStatement
T@"FHStatementDetails",&,N,V_currentStatement
T@"FHStatementDetails",&,N,V_previousStatement
statementIdentifier
setStatementIdentifier:
remainingStatementBalance
setRemainingStatementBalance:
remainingMinimumPayment
setRemainingMinimumPayment:
minimumDue
setMinimumDue:
creditLimit
setCreditLimit:
statementBalance
setStatementBalance:
currentBalance
setCurrentBalance:
currentStatementIdentifier
setCurrentStatementIdentifier:
transactionPurchasesDetails
setTransactionPurchasesDetails:
transactionPaymentDetails
setTransactionPaymentDetails:
isMonthZero
setIsMonthZero:
isMonthOne
setIsMonthOne:
_isMonthZero
_isMonthOne
_statementIdentifier
_remainingStatementBalance
_remainingMinimumPayment
_minimumDue
_creditLimit
_statementBalance
_currentBalance
_currentStatementIdentifier
_transactionPurchasesDetails
_transactionPaymentDetails
T@"NSString",&,N,V_statementIdentifier
T@"NSDecimalNumber",&,N,V_remainingStatementBalance
T@"NSDecimalNumber",&,N,V_remainingMinimumPayment
T@"NSDecimalNumber",&,N,V_minimumDue
T@"NSDecimalNumber",&,N,V_creditLimit
T@"NSDecimalNumber",&,N,V_statementBalance
T@"NSDecimalNumber",&,N,V_currentBalance
T@"NSString",&,N,V_currentStatementIdentifier
T@"NSArray",&,N,V_transactionPurchasesDetails
T@"NSArray",&,N,V_transactionPaymentDetails
TB,N,V_isMonthZero
TB,N,V_isMonthOne
transactionIdentifier
setTransactionIdentifier:
transactionDate
setTransactionDate:
transactionAmount
setTransactionAmount:
suggestionCategory
setSuggestionCategory:
merchantCategory
setMerchantCategory:
_transactionIdentifier
_transactionDate
_transactionAmount
_suggestionCategory
_merchantCategory
T@"NSString",C,N,V_transactionIdentifier
T@"NSDate",C,N,V_transactionDate
T@"NSDecimalNumber",C,N,V_transactionAmount
T^Q,N,V_suggestionCategory
T@"FHMerchantDetails",N,V_merchantCategory
category
setCategory:
_category
Tq,N,V_category
generatePaymentRingSuggestion:completion:
isEqualToString:
compare:
priority
setPriority:
initWithAmount:category:
_priority
TQ,N,V_category
T@"NSDecimalNumber",C,N,V_amount
Tq,N,V_priority
_init
_compileModelWithName:
setComputeUnits:
numClasses
numTrees
maxDepth
learningRate
minChildWeight
objective
dictionaryWithObjects:forKeys:count:
setParameters:
_modelDirectory
stringByAppendingPathComponent:
fileURLWithPath:
path
defaultManager
_createTrainingData:trainingDataPointCount:
event
model
task
resume
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localizedDescription
writeToURL:error:
initForEvents:progressHandler:completionHandler:
updateTaskForModelAtURL:trainingData:configuration:progressHandlers:error:
stringByAppendingString:
bundleForClass:
pathForResource:ofType:
URLByAppendingPathComponent:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
defaultOptions
compileSpecificationAtURL:toURL:options:error:
array
_createTrainingPointFor:error:
addObject:
initWithFeatureProviderArray:
numberWithUnsignedInteger:
arrayWithObjects:count:
initWithShape:dataType:error:
numberWithDouble:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
featureValueWithInt64:
initWithDictionary:error:
_predictLabelFor:modelURL:
modelWithContentsOfURL:configuration:error:
featuresAtIndex:
predictionFromFeatures:error:
featureValueForName:
int64Value
fileExistsAtPath:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
sharedInstance
trainWithDataSet:trainingDataPointCount:
predictLabelFor:modelSelection:
resetModels
compiledModelURL
updatedModelURL
trainedModelURL
modelConfiguration
updatedModel
isModelValid
_isModelValid
_compiledModelURL
_updatedModelURL
_trainedModelURL
_modelConfiguration
_updatedModel
T@"NSURL",R,C,N,V_compiledModelURL
T@"NSURL",R,C,N,V_updatedModelURL
T@"NSURL",R,C,N,V_trainedModelURL
T@"MLModelConfiguration",R,C,N,V_modelConfiguration
T@"MLModel",R,C,N,V_updatedModel
TB,R,N,V_isModelValid
sharedService
initWithCategoriesToInclude:categoriesToExclude:
numberWithBool:
predicateWithFormat:
initWithCalendarIdentifier:
components:fromDate:
weekday
filterTransactions:
count
maxParametersCountForSpatialPlaceLookup
dictionaryWithDictionary:
objectAtIndex:
location
coordinate
initWithCoordinate:radius:poiCategoryFilter:
identifier
defaultBackgroundTraits
ticketForSpatialPlaceLookupParameters:traits:
countByEnumeratingWithState:objects:count:
mapItemsForSpatialLookupParameters:
initWithLatitude:longitude:
centerCoordinate
distanceFromLocation:
initWithDouble:
areasOfInterest
objectAtIndexedSubscript:
objectForKey:
setValue:forKey:
initWithLabelAndRank:featureRank:
featureRank
submitWithHandler:queue:
allKeys
allValues
initWithObjectsAndKeys:
filteredArrayUsingPredicate:
evaluatePointsOfInterest:bypassMapService:completion:
geoMapService
geoServicesQueue
poiCategoryFilter
geoPredicate
_geoMapService
_geoServicesQueue
_poiCategoryFilter
_geoPredicate
T@"GEOMapService",R,N,V_geoMapService
T@"NSObject<OS_dispatch_queue>",R,N,V_geoServicesQueue
T@"GEOPOICategoryFilter",R,N,V_poiCategoryFilter
T@"NSPredicate",R,N,V_geoPredicate
featureLabel
eventIdentifiers
eventStartDate
eventEndDate
doubleValue
setEventIdentifiers:
setEventStartDate:
setEventEndDate:
_featureLabel
_featureRank
_eventIdentifiers
_eventStartDate
_eventEndDate
T@"NSArray",C,N,V_eventIdentifiers
T@"NSDate",C,N,V_eventStartDate
T@"NSDate",C,N,V_eventEndDate
T@"NSString",R,C,N,V_featureLabel
T@"NSDecimalNumber",R,C,N,V_featureRank
clientWithIdentifier:
triClient
isEnabled
levelForFactor:withNamespaceName:
levelForFactor:
longValue
errorWithDomain:code:userInfo:
factorLevelsWithNamespaceName:
hasFactor
factor
hasName
hasLevel
level
levelOneOfCase
numberWithLong:
stringValue
treatmentIdWithNamespaceName:
dataWithJSONObject:options:error:
initWithData:encoding:
longValueForFactor:defaultValue:
getSerializedFactorsToLevels:
_triClient
T@"TRIClient",R,N,V_triClient
zero
_abs:
decimalNumberByAdding:
_fhEqualObjects:obj2:
numberWithInteger:
setObject:forKey:
copy
isEqualToNumber:
decimalNumberByDividingBy:
_zerothOrFirstMonthPaymentRingSuggestionsForList:
addObjectsFromArray:
_allMandatoryValuesAreSameAmount:
_categoryIsPaymentPlan:
enumerateObjectsUsingBlock:
_minimumMerchcantCategoriesAboveMinimumAmount:minMerchantCategory1:minMerchantCategory2:minMerchantCategorySum1:minMerchantCategorySum2:
_suggestedAmountsForPayOffDateForStatementBalance:creditUtilization:lastPaymentCategory:
decimalNumberBySubtracting:
decimalNumberWithString:
_categoryIsCurrentBalanceType:
integerValue
enumerateKeysAndObjectsUsingBlock:
decimalNumberWithMantissa:exponent:isNegative:
decimalNumberByMultiplyingBy:
generatePaymentRingSuggestion:
_calculateThresholdForLastPaymentCategory:statementBalance:suggestedAmountWithSameCategory:
_currentStatementPaymentsSum
_previousStatementPaymentsSum
_statementPurchasesSum
_merchantCategoryTransactionSums
_isOnPlanCompletion
_isOnPaymentPlan
_currentStatementIsLastMonthsStatement
arrayWithObjects:
setWithObjects:
_getDataDirectory
_fetch:
next
unsignedIntegerAtIndex:
timeIntervalSinceReferenceDate
_execute:
closeAndUnlock:
stringAtIndex:
intAtIndex:
_logSchema:
_executeRaw:
fetch:
close
characterSetWithCharactersInString:
lowercaseString
stringByTrimmingCharactersInSet:
init:multiThreadingEnabled:
setSqliteErrorHandler:
setBusyHandler:
setDateFormat:
_createDataDirectory
URLWithString:
openAtURL:withFlags:error:
_rebuildTablesAndIndexes:
enableMerchantCounts
setDatabaseManager:
addInternalState:
initWithBuilder:
_updateTransaction:withNewInternalState:
getTransactionByIdentifier:
decimalValue
decimalNumberWithDecimal:
intValue
transactionStatusChangedDate
mapsMerchantID
mapsMerchantBrandID
merchantDetailedCategory
timeZone
secondsFromGMT
transactionSourceIdentifier
currencyCode
transactionStatus
transactionSource
transactionType
accountType
merchantUniqueIdentifier
industryCode
displayName
country
mapsMerchantResultProviderID
mapsMerchantBrandResultProviderID
verticalAccuracy
horizontalAccuracy
_startingDateSmartFeatureComputation
mostRecentTransactionDate
_getTransactionByIdentifier:
setAccountType:
reconstructTransaction:
getTransactionsByInternalState:internalState:offSet:
streamTransactionsByInternalState:internalState:offSet:onTransaction:
arrayWithArray:
insertFeaturesDeterminiticRealtime:realtimeFeatures:
insertFeaturesPredictedRealtime:realtimeFeatures:
insertFeaturesCompoundRealtime:realtimeFeatures:
timeOfDay
transactionDateAtZerothHour
isInternationalSpend
isTapToPay
repeatingPatternClass
smartCompoundFeatures
arrayWithObject:
insertFeaturesEvents:
insertFeaturesCompoundRealtimeWithoutEvents:realtimeFeatures:
smartCompoundFeaturesDictionaryForJson
valueForKeyPath:
dateByAddingTimeInterval:
unsignedIntAtIndex:
initWithTimeIntervalSinceReferenceDate:
dictionaryWithObjectsAndKeys:
getFeaturePredicate:FHSmartFeatureAggregateType:
firstObject
removeAllObjects
_computeSingleMerchantAggregateFeature:
numberAtIndex:
_computeSingleDatetimeAggregateFeature:
dateWithTimeIntervalSinceReferenceDate:
setMostRecentTransactionFromDatabase:
fetchAndProcessInBatchMode
filteredTransaction
componentsSeparatedByString:
expressionWithFormat:argumentArray:
expressionValueWithObject:context:
_computeSingleAmountAggregateFeature:
integerAtIndex:
lastError
dataUsingEncoding:
JSONObjectWithData:options:error:
initWithString:
initWithInteger:
setIdentifier:
setTransactionSourceIdentifier:
setAmountFromDatabase:
setCurrencyCode:
setTransactionStatus:
setTransactionStatusChangedDate:
setTransactionSource:
setTransactionType:
setTransactionInternalState:
setMerchantUniqueIdentifier:
setIndustryCode:
setMerchantDetailedCategory:
setDisplayName:
setCountry:
longLongValue
setMapsMerchantID:
setMapsMerchantResultProviderID:
setMapsMerchantBrandID:
setMapsMerchantBrandResultProviderID:
uniqHistogramKeyForTransaction:
setUniqHistogramKey:
doubleAtIndex:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
setLocation:
timeZoneForSecondsFromGMT:
setTimeZone:
_hasDeterministicRealtime:
_computeAllAggregateFeaturesWithTransactionId:
_createFeatureResponseFromFeatures:compoundFeatures:locale:forTxnID:
containsObject:
initWithKey:ascending:
sortedArrayUsingDescriptors:
_mostRecentTransactionDate
valueForKey:
_reconstructAggregateFeaturesWithProcessingWindow:
_filterAggregateFeatureByCurrentWindow:
length
initWithCompoundFeatureKey:smartCompoundFeatures:locale:
initWithSmartFeatures:aggregateFeatureswithProcessingWindow:compoundFeatures:transactionID:
getFHSmartFeatureByAmountType:
getFHSmartFeatureByDateTimeType:
getFHSmartFeatureByMerchantType:
appendString:
componentsJoinedByString:
stringWithString:
error
setWithArray:
_insertOrUpdateTransactionFeatures:compoundFeatures:transactionID:completion:
allObjects
intersectsSet:
minusSet:
unionSet:
autoupdatingCurrentLocale
localeIdentifier
merchantsWithSignificantCount
uniqHistogramKey
arrayByAddingObject:
streamTransactionsByInternalState:internalState:onTransaction:
_rmseValue:
lastObject
streamGenericSQLFetch:predicate:sqlFetchQuery:
reconstructCompoundFeaturesForTransaction:
initWithDictionary:
setSmartCompoundFeatures:
delegate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
processBatch:
_getAllTransactions:limit:
execute:args:
executeRaw:
fetch:args:
_isEligibleForSchemaMigration
columns
null
columnNameAtIndex:
aggregateFeaturesWithProcessingWindow
compoundFeatures
compoundFeatureKey
rankedValues
getDateFormatter
_updateAggregateTablesSchema
init:
insertTransactionInInternalStateDirty:
updateTransactionWholeRaw:
updateTransactionInternalStateByIdentifier:newInternalState:
updateTransactionInternalStateByTransaction:newInternalState:
updateTransactionsInternalStateToState:oldInternalState:newInternalState:
getTransactionInternalState:
getTransactionsByInternalState:internalState:
getTransactionsByDetailedCategory:
getRecurringTransactionIdentifiers
getTransactionIdsInTimeRangeFrom:to:
insertFeatures:realtimeFeatures:
getTaggedPastCalendarEvents
computeMerchantAggregateFeatures
computeDatetimeAggregateFeatures
computeAmountAggregateFeatures
deleteAllFeatureRecordsForTransaction:
deleteAllRecordsInTransactions:
updateGetAllStatus:
shouldCallGetAllTransactions
featuresForTransaction:
computeAllAggregateFeatures
unsafeRemoveAllEntriesFromTable:
getTransactionsSmartFeatures
updateDeleteFlagInTransactionFeatures:forID:
deleteAllMarkedTransactionFeatures
deleteAllRecordsInTransactionFeatures:
deleteAllRecordsFromTransactionFeatures
deleteTaggedButDeletedEvent:
deleteTaggedEventsInTimeRange:startDate:comparatorOfEndDate:endDate:
computeRecurringClassesForTransactions
approximateHeuristics
retrieveAll
deleteDatabase:
computeAnalyticsForSearchTags
setDelegate:
_dateFormatter
_multiplier
_secondsInDay
_amountAggregatesCache
_merchantAggregatesCache
_dateTimeAggregatesCache
_batchProcessor
_lockDatabaseBookKeeping
_lockDatabaseExecute
_lockDatabaseFetch
_lockProcessingDate
_databaseDeleted
_delegate
T@"<FinHealthFetchAllTransactionsDelegate>",W,N,V_delegate
Tq,R,N
_init:bypassMapService:
_createDBManagerAndAssociatedProperties:
insertOrUpdateTransaction:
_insertOrUpdateTransactionPostDirtyState:
_processAggregateFeaturesWithHardReset:
_checkEventDeletion
setPastTimeRangesToRetagEvents:
compoundFeaturesForTransaction:
featuresForTransaction:bypassMapService:
predicateWithBlock:
addEntriesFromDictionary:
evaluateEventTagging:bypassMapService:completion:
_excludeRecurringFromEventTaggingCandidates:
_tagFlightTransactionsWithTripEvents
initWithEKOptions:
eventWithIdentifier:
removeObject:
getEvents
tripParts
tripMode
customObjectForKey:
objectForKeyedSubscript:
title
intersectSet:
removeObjectForKey:
_deleteAllDataForPass:force:completion:
removeAllEntriesFromTable:
_transactionsByInternalState:internalState:
fhProperties
initWithServiceName:
transactionUpdated:deferFeatureComputation:completion:
featuresWithCompletion:
getComputedFeaturesForTransactions:completion:
recomputeFeaturesForTransactions:
transactionsRequireSyncing:
deleteAllData:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
initForTest
insertOrUpdateTransactions:
processAggregateFeatures
aggregateFeaturesWithHandler:
getFHMerchantSmartFeatureByType:
getFHAmountSmartFeatureByType:
getFHDateTimeSmartFeatureByType:
deleteAllDataForPasses:force:completion:
getTransactionByTransaction:
transactionsInInternalStateDirty:
transactionsInInternalStateRawConsistent:
transactionsInInternalStateUpdatedRealtime:
transactionsInInternalStateUpdatedBatch:
transactionsInInternalStateConsistent:
transactionsInInternalStateInvalid:
resetTransactionStateToStateRawConsistent:
transactionsInInternalAnyState:forPass:
invalidateTransactionByIdentifier:
invalidateTransactionByTransaction:
_clientConnection
_connection
_dbMgr
_bypassMapService
setTimeOfDay:
setTransactionDateAtZerothHour:
setIsInternationalSpend:
setIsTapToPay:
setRepeatingPatternClass:
_isInternationalSpend
_isTapToPay
_timeOfDay
_transactionDateAtZerothHour
_country
_smartCompoundFeatures
_repeatingPatternClass
TQ,N,V_timeOfDay
TQ,N,V_transactionDateAtZerothHour
TB,N,V_isInternationalSpend
TB,N,V_isTapToPay
TQ,N,V_merchantCategory
T@"NSString",C,N,V_country
T@"NSDictionary",C,N,V_smartCompoundFeatures
TQ,N,V_repeatingPatternClass
getAllFinHealthTransactions:
getSerializedTrialValues:
bundlePath
bundleWithPath:
pathForResource:ofType:inDirectory:
dataWithContentsOfFile:
substringToIndex:
numberWithInt:
numberWithLongLong:
numberWithUnsignedLongLong:
safelySetObject:forKey:
setObjectOrNull:forKey:
setInt32:forKey:
setInteger:forKey:
setLongLong:forKey:
setUnsignedLongLong:forKey:
setDouble:forKey:
setBool:forKey:
setDate:forKey:
transactionInternalState
rawName
industryCategory
encodeInt64:forKey:
encodeInt32:forKey:
hasLocation
encodeBool:forKey:
setRawName:
setIndustryCategory:
decodeInt64ForKey:
decodeInt32ForKey:
decodeBoolForKey:
setHasLocation:
dateFromString:
unsignedLongLongValue
initWithDictionary:dateFormatter:
toDictionary
stringWithUTF8String:
substringFromIndex:
initWithArray:
FHMerchantCategoryFromString:
initWithJsonString:
toJson:
amountFromDatabase
_hasLocation
_mapsMerchantResultProviderID
_mapsMerchantBrandResultProviderID
_identifier
_transactionSourceIdentifier
_currencyCode
_transactionStatusChangedDate
_transactionStatus
_transactionSource
_transactionType
_accountType
_timeZone
_merchantUniqueIdentifier
_mapsMerchantID
_mapsMerchantBrandID
_rawName
_industryCode
_industryCategory
_displayName
_merchantDetailedCategory
_location
_transactionInternalState
_uniqHistogramKey
_amountFromDatabase
TQ,N,V_transactionInternalState
T@"NSString",N,V_uniqHistogramKey
TB,N,V_hasLocation
Tq,N,V_amountFromDatabase
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_transactionSourceIdentifier
T@"NSString",C,N,V_currencyCode
T@"NSDate",C,N,V_transactionStatusChangedDate
Tq,N,V_transactionStatus
TQ,N,V_transactionSource
Tq,N,V_transactionType
Tq,N,V_accountType
T@"NSTimeZone",&,N,V_timeZone
T@"NSString",C,N,V_merchantUniqueIdentifier
TQ,N,V_mapsMerchantID
Ti,N,V_mapsMerchantResultProviderID
TQ,N,V_mapsMerchantBrandID
Ti,N,V_mapsMerchantBrandResultProviderID
T@"NSString",C,N,V_rawName
Tq,N,V_industryCode
T@"NSString",C,N,V_industryCategory
T@"NSString",C,N,V_displayName
T@"NSString",C,N,V_merchantDetailedCategory
T@"CLLocation",C,N,V_location
merchant
uniqueIdentifier
rawCountry
detailedCategory
mapsMerchant
mapsBrand
resultProviderIdentifier
decodeObjectOfClasses:forKey:
locale
featureKey
_featureKey
_compoundFeatureKey
_rankedValues
_locale
T@"NSString",R,C,N,V_featureKey
T@"NSString",R,C,N,V_compoundFeatureKey
T@"NSArray",R,C,N,V_rankedValues
T@"NSString",R,C,N,V_locale
aggregateFeatures
smartFeatures
_smartFeatures
_aggregateFeatures
_compoundFeatures
_aggregateFeaturesWithProcessingWindow
T@"NSArray",R,C,N,V_smartFeatures
T@"NSArray",R,C,N,V_aggregateFeatures
T@"NSArray",R,C,N,V_compoundFeatures
T@"NSString",R,C,N,V_transactionIdentifier
T@"NSArray",R,C,N,V_aggregateFeaturesWithProcessingWindow
UTF8String
indexOfObject:
wordEmbeddingForLanguage:
initWithTagSchemes:
regularExpressionWithPattern:options:error:
nlEmbedding
nlTagger
enumerateNeighborsForString:maximumCount:distanceType:usingBlock:
dictionaryWithObject:forKey:
specialCharsRegex
stringByReplacingMatchesInString:options:range:withTemplate:
decomposedStringWithCompatibilityMapping
boundaryRegex
setString:
substringWithRange:
enumerateTagsInRange:unit:scheme:options:usingBlock:
containsString:
categoriesExpansionDict
hasPrefix:
subarrayWithRange:
categoriesLocalizationDict
_tokenize:shouldLemmatize:
applyCategoryHeuristics:detailedCategory:
applyTimingHeuristics:detailedCategory:dateHour:
sortUsingComparator:
_modelsLoaded
neighborsForText:completion:
semanticTagsForMerchant:detailedCategory:dateHour:completion:
nlModel
stopWords
_nlEmbedding
_nlModel
_nlTagger
_specialCharsRegex
_boundaryRegex
_categoriesExpansionDict
_categoriesLocalizationDict
_stopWords
T@"NLEmbedding",R,N,V_nlEmbedding
T@"NLModel",R,N,V_nlModel
T@"NLTagger",R,N,V_nlTagger
T@"NSRegularExpression",R,N,V_specialCharsRegex
T@"NSRegularExpression",R,N,V_boundaryRegex
T@"NSDictionary",R,N,V_categoriesExpansionDict
T@"NSDictionary",R,N,V_categoriesLocalizationDict
T@"NSSet",R,N,V_stopWords
_stringValueOfEntitlement:
_boolValueOfEntitlement:
copyValueOfEntitlement:
auditToken
initWithConnection:
applicationID
fhAllAccess
_arrayValueOfEntitlement:
connection
setConnection:
T@"NSXPCConnection",&,N,V_connection
andPredicateWithSubpredicates:
eventIdentifier
currentCalendar
hour
setHour:
setMinute:
setSecond:
dateFromComponents:
mapItems
startWithCompletionHandler:
placemark
setNaturalLanguageQuery:
setRegion:
initWithRequest:
initWithCenterCoordinate:radius:
initWithPointsOfInterestRequest:
_getLocalSearchResponse:transactionLocation:
arrayByAddingObjectsFromArray:
queryPPEvents:fromDate:toDate:
setFromDate:
setToDate:
iterScoredEventsWithQuery:error:block:
_getPointsOfInterestFromMapKit:longitude:horizontalAccuracy:verticalAccuracy:
pastTimeRangesToRetagEvents
_pastTimeRangesToRetagEvents
T@"NSArray",C,N,V_pastTimeRangesToRetagEvents
databaseManager
mostRecentTransactionFromDatabase
internalStates
setInternalStates:
computeMerchantCounts
setComputeMerchantCounts:
_internalStates
_computeMerchantCounts
_databaseManager
_mostRecentTransactionFromDatabase
T@"NSMutableSet",&,N,V_internalStates
TB,N,V_computeMerchantCounts
T@"FinHealthDatabaseManager",&,N,V_databaseManager
TQ,N,V_mostRecentTransactionFromDatabase
_init:
orPredicateWithSubpredicates:
keysOfEntriesPassingTest:
_merchantWithTimeStampPairs
_indexedAmountArray
_resultArray
_predicates
T@"FinHealthDatabaseManager",R,W,N,V_databaseManager
T@"NSSet",R,N
T@"NSArray",R,N
FHAggregateFeature
NSSecureCoding
NSCoding
FHAmountAggregateFeature
FHMerchantAggregateFeature
FHDateTimeAggregateFeature
FHPaymentRingSuggestionRequest
FHStatementDetails
FHTransactionDetails
FHMerchantDetails
FHPaymentRingSuggestionController
FHPaymentRingSuggestionResponse
FinHealthUpdatableBinaryClassifier
FinHealthGeoFeatures
FHSmartCompoundFeatureRankedValue
FHSearchSuggestionController
FinHealthTrialManager
FinHealthPaymentRingSuggestions
FinHealthFetchAllTransactionsDelegate
NSObject
FinHealthDatabaseManager
FinHealthXPCServicesProtocol
FinHealthStateController
FinHealthRealtimeFeaturesResponse
FinHealthXPCServices
FHDictionarySafeMethods
FHTransaction
FHSmartCompoundFeature
FHFeaturesResponse
FinHealthTextSimilarityFeatures
FinHealthEntitlementsChecker
FinHealthRealtimeFeaturesRequest
FinHealthBatchProcessorBuilder
FinHealthBatchProcessor
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
B24@0:8@16
v24@0:8Q16
v16@0:8
@"NSString"
@"NSDate"
@32@0:8Q16@24
@32@0:8@16@24
@"FHStatementDetails"
v20@0:8B16
@"NSDecimalNumber"
@"NSArray"
^Q16@0:8
v24@0:8^Q16
@"FHMerchantDetails"
q16@0:8
v24@0:8q16
v32@0:8@16@?24
@32@0:8@16Q24
q24@0:8@16
v32@0:8^{?=di}16Q24
@32@0:8^{?=di}16Q24
@32@0:8^{?=di}16^@24
Q32@0:8d16Q24
Q32@0:8d16@24
@"NSURL"
@"MLModelConfiguration"
@"MLModel"
v36@0:8@16B24@?28
@"GEOMapService"
@"NSObject<OS_dispatch_queue>"
@"GEOPOICategoryFilter"
@"NSPredicate"
q32@0:8@16q24
v24@0:8@?16
@"TRIClient"
v56@0:8@16^q24^q32^@40^@48
@40@0:8@16@24Q32
@40@0:8Q16@24@32
B24@0:8Q16
B32@0:8@16@24
@"NSMutableDictionary"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSArray"16
@20@0:8B16
@24@0:8B16B20
B32@0:8@16Q24
B40@0:8@16Q24Q32
Q24@0:8@16
@32@0:8Q16Q24
i40@0:8Q16Q24@?32
i48@0:8Q16Q24Q32@?40
@40@0:8Q16Q24Q32
@48@0:8@16@24@32@40
v48@0:8@16@24@32@?40
B32@0:8Q16@24
B48@0:8@16@24@32@40
d24@0:8@16
B24@0:8^@16
v40@0:8@?16@24@32
@"PQLConnection"
@"NSDateFormatter"
@"FinHealthBatchProcessor"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<FinHealthFetchAllTransactionsDelegate>"
v28@0:8B16@?20
v36@0:8@"FHTransaction"16B24@?<v@?@"FHFeaturesResponse"@"NSError">28
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?B@"NSError">16
@24@0:8Q16
@"NSXPCConnection"
@"FinHealthDatabaseManager"
@"NSDictionary"
v32@0:8@16@24
v28@0:8i16@20
v32@0:8q16@24
v32@0:8Q16@24
v32@0:8d16@24
v28@0:8B16@20
i16@0:8
v20@0:8i16
@"NSTimeZone"
@"CLLocation"
@40@0:8@16@24@32
@28@0:8@16B24
v40@0:8@16@24@32
@"NLEmbedding"
@"NLModel"
@"NLTagger"
@"NSRegularExpression"
@"NSSet"
^v24@0:8@16
@48@0:8d16d24d32d40
@"NSMutableSet"
@24@0:8@?16
@"NSMutableArray"
Failed to load model
modelURL path: %@
[%s]: Invalid compiled model. Exiting,
Training initiated....
[%s]: context is nil
[%s]: context.model is nil
[%s]: failed to create directory at path: %@ with error: %@
[%s]: destinationModelUrl: %@ modelUpdateStatus: %@
[%s]: failed to persist model to url: %@ with error: %@
[%s]: update failed with error: %@
[%s]: updateTask with error: %@
[%s]: _updatedModelURL: %@
[%s]: failed to compile modelURL spec at path: %@ to tempDir path: %@ with error: %@
[%s]: error: %@
[%s]: replaceItemAtURL: %@ replaceStatus: %@
[%s]: NOOP
Random selection of evaluating POI is disabled
Random selection of evaluating POI is enabled
filteredFHTransactions.count: %lu
FinHealth GEOSpatialPlaceLookup error: %@
FinHealth GEO ticket timeout (waited for 3 seconds)
%s: Trial client initializations returned nil.
%s: Trial client is disabled on this OS - no factors to log
%s: Serializing experiment id dict unexpectedly returned nil: %@
createSchemaVersionRecord: %@
Aggreagate tables are out of date. Drop and re-create
Schema before change:
Schema after change:
Sqlite [no statement available] failed on %{public}@:, %s
Sqlite error: [%{public}@], %s
Exhautsed all retries :%lu, %s
Database is locked, retrying. _retries :%lu, %s
dbUrl: %@
Failed to parse smartCompoundFeaturesDictionaryForJson: %@
Distinct event ranked values: %@
%s resultArray %@ added to cache
%s resultArray for %@ is already cached
updateGetAllStatus successful
Update failed with error: %@
Failed to parse {%@} with error: %@
%s queryPart %@ union 
error %@
%@: delete all records on table: %@
%s merchantsWithSignificantCount %@
FHInsertOrUpdateIntoFeaturesHeuristics failed for %@
FHInsertIntoFeaturesPredictedRealTime failed for %@
previousPreComputedRmseValue: %f
currentTransactionId: %@, changeInAmount: %@
insertSuccess: %d smartFeatureValues: %@
isEligibleForSchemaMigration: %@
Skipping CA: lastProcessingDateForCoreAnalytics :%lu, processRunTime: %lu
Performing CA: lastProcessingDateForCoreAnalytics :%lu, processRunTime: %lu
aggregateFeature eventPayload: %@
compoundTypeSoldProducts eventPayload: %@
compoundTypeOther eventPayload: %@
[%s]. Received transaction.identifier: %@ accountType: %@
Batch offSet: %lu
can not insert batch of event identifiers error: %@
%s: pointsOfInterestCompoundFeaturesForTransactionBatch :%@
taggedPastEvents %@, dateRanges :%@, transactionIdsWithValidPastEvents %@
predicateKey: %@ invalid
NSXPCConnection interrupted
[%s]: NSXPCConnection invalidated
bundle path: %@
Error parsing JSON: %@
%s: error: %@
%s: Regex creation error: %@
Failed to get entitlements: %@
Client has entitlement for %@
error: %@
[%s] finHealthPointOfInterest: %@
FHSmartCompoundFeatureRankedValue local + poi search start %s
FHSmartCompoundFeatureRankedValue local + poi search end %s
Past time ranges to query:%@ Total events count: %lu Total fetched events %@
Trip event error:%@
Suggested event error:%@
mostRecentDate %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
</array>
<key>com.apple.proactive.PersonalizationPortrait.Event</key>
<true/>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/FinHealth/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.passd.payment</string>
<string>com.apple.proactive.PersonalizationPortrait.Event</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.da</string>
</array>
<key>com.apple.security.ts.asset-access</key>
<true/>
<key>com.apple.security.ts.geoservices</key>
<true/>
<key>com.apple.trial.client</key>
<array>
<string>821</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
333333
