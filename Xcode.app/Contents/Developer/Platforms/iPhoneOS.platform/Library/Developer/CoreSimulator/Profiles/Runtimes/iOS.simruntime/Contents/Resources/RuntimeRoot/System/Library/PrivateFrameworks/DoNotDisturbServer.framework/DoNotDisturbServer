<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
T@"NSNumber",C,D,N
header
version
timestamp
data
delegate
T@"<DNDSBackingStoreDelegate>",W,N
T@"<DNDSBackingStoreDelegate>",W,N,V_delegate
activeUUIDs
T@"NSArray",R,C,N,V_activeUUIDs
expiredUUIDs
T@"NSArray",R,C,N,V_expiredUUIDs
com.apple.donotdisturb.lifetime-monitor.%@
v8@?0
@"NSString"16@?0@"NSUUID"8
active-uuids
sysdiagnoseDataIdentifier
T@"NSString",R,C,N
activeLifetimeAssertionUUIDs
T@"NSArray",R,C,N
dataSource
T@"<DNDSLifetimeMonitorDataSource>",W,N
T@"<DNDSLifetimeMonitorDelegate>",W,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSString",R,C,D,N
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
reason
@"NSDictionary"16@?0@"DNDSEventBehaviorResolution"8
resolution-record
@"NSString"16@?0@"DNDStateModeAssertionMetadata"8
B24@?0@"DNDSEventBehaviorResolution"8@16
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
@16@?0@"CNContact"8
B16@?0@"DNDSEventBehaviorResolution"8
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
UI locked
UI unlocked
<invalid>
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
T@"NSString",C,D,N
v20@?0B8@"NSError"12
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
@"NSUUID"16@?0@"DNDModeAssertion"8
com.donotdisturb.server.LocationLifetimeMonitor
com.apple.donotdisturb.server.until-i-leave
unknown
inside
outside
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
Inactive
Active
storeAssertionRecords
storeInvalidationRecords
storeLastCompleteInvalidationTimestamp
storeLastCompleteInvalidationReason
lifetime-expired
user-changed-state
client-ended
client-replaced
server-unresponsive
client-unresponsive
storeLastCompleteInvalidationSourceClientIdentifier
storeLastCompleteInvalidationSourceDeviceIdentifier
storeLastUpdateDate
B16@?0@8
@"DNDModeAssertion"16@?0@"NSDictionary"8
@"DNDModeAssertionInvalidation"16@?0@"NSDictionary"8
@"NSDictionary"16@?0@"DNDModeAssertion"8
@"NSDictionary"16@?0@"DNDModeAssertionInvalidation"8
@"NSDictionary"16@?0@"NSDictionary"8
assertionUUID
assertionStartDateTimestamp
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsUserVisibleEndDate
assertionDetailsSyncSuppressionOptions
assertionDetailsUserRequested
assertionDetailsLifetimeType
calendar
date-interval
current-location
schedule
user-requested
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
assertionDetailsScheduleLifetimeScheduleIdentifier
assertionDetailsScheduleLifetimeBehavior
match-schedule
expire-on-end
assertionClientIdentifier
assertionSourceDeviceIdentifier
invalidationDateTimestamp
invalidationReason
invalidationReasonOverride
invalidationSourceClientIdentifier
invalidationSourceDeviceIdentifier
invalidationDetailsIdentifier
Library
DoNotDisturb
Assertions.json
Settings.json
BulletinBoard
BehaviorOverrides.plist
@16@?0@"DNDSModeAssertionUpdateResult"8
q24@?0@"DNDModeAssertionInvalidation"8@"DNDModeAssertionInvalidation"16
store
T@"DNDSModeAssertionStore",R,C,D,N
updateResult
T@"DNDSModeAssertionUpdateResult",R,C,D,N
<%@: %p; interruptionSuppression: %@>
interruptionSuppression
TQ,R,N,V_interruptionSuppression
B16@?0@"DNDModeAssertion"8
com.apple.donotdisturb.server.ScheduleLifetimeMonitor.timer
T@"<DNDSScheduleLifetimeMonitorDataSource>",W,D,N
com.apple.donotdisturb.mode.bedtime
com.apple.donotdisturb.mode.driving
interruptionInvalidationAssertionUUID
T@"NSUUID",R,C,N,V_interruptionInvalidationAssertionUUID
assertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_assertionUpdateClientIdentifiers
wantsStateUpdates
TB,R,N,V_wantsStateUpdates
wantsSettingsUpdates
TB,R,N,V_wantsSettingsUpdates
T@"NSUUID",C,D,N
T@"NSSet",C,D,N
TB,D,N
com.donotdisturb.server.ModeAssertionStateProvider
@"DNDStateModeAssertionMetadata"16@?0@"DNDModeAssertion"8
T@"<DNDSModeAssertionStateProviderDataSource>",W,N,V_dataSource
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
<%@: %p; scheduleEnabledSetting: %@; timePeriod: %@; bedtimeBehaviorEnabledSetting: %@; creationDate: %@>
creationDate
T@"NSDate",R,C,N,V_creationDate
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-80.1/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
assertions
T@"NSArray",R,C,N,V_assertions
invalidations
T@"NSArray",R,C,N,V_invalidations
date
clientIdentifiers
UUIDs
T@"NSDate",R,C,N,V_date
T@"NSArray",R,C,N,V_clientIdentifiers
T@"NSArray",R,C,N,V_UUIDs
current state
always interrupt flag
always bypass
no bypass
favorite
contact
group contact
repeat event
emergency contact
com.donotdisturb.server.sync.legacy
com.donotdisturb.server.sync.legacy.workout
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
B16@?0@"<DNDSModeAssertionUpdateContext>"8
DNDStateChangedNotification
DNDAssertStateChangedNotification
B16@?0@"DNDSModeAssertionManagerUpdateContext"8
B16@?0@"DNDStateModeAssertionMetadata"8
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"<DNDSAssertionSyncManagerDelegate>",W,N
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
com.apple.donotdisturb.server.ModeAssertionManager
Failed to load assertion database
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-80.1/DoNotDisturbServer/DNDSModeAssertionManager.m
B16@?0@"DNDModeAssertionInvalidation"8
Failed to write store
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
T@"<DNDSSettingsSyncManagerDataSource>",W,N
T@"<DNDSSettingsSyncManagerDelegate>",W,N
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
<%@: %p; assertions: %@; invalidations: %@; lastCompleteInvalidationDate: %@; lastCompleteInvalidationReason: %@; lastCompleteInvalidationSource: %@; lastUpdateDate: %@>
lastCompleteInvalidationDate
T@"NSDate",R,C,N,V_lastCompleteInvalidationDate
lastCompleteInvalidationReason
TQ,R,N,V_lastCompleteInvalidationReason
lastCompleteInvalidationSource
T@"DNDModeAssertionSource",R,C,N,V_lastCompleteInvalidationSource
lastUpdateDate
T@"NSDate",R,C,N,V_lastUpdateDate
T@"NSArray",C,D,N
T@"NSDate",C,D,N
TQ,D,N
T@"DNDModeAssertionSource",C,D,N
com.apple.nano
com.apple.donotdisturb.server.ModernAssertionSyncManager
@"DNDModeAssertion"16@?0@"DNDModeAssertion"8
@"DNDModeAssertionInvalidation"16@?0@"DNDModeAssertionInvalidation"8
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
Error writing migrated settings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-80.1/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p; deviceIdentifier: '%@'; deviceClass: %@; syncProtocolVersion: %lu>
deviceIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
deviceClass
TQ,R,N,V_deviceClass
syncProtocolVersion
TQ,R,N,V_syncProtocolVersion
phone
watch
watch (legacy)
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
UUID
T@"NSUUID",R,C,N,V_UUID
eventBehavior
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
clientIdentifier
T@"NSString",R,C,N,V_clientIdentifier
TQ,R,N,V_outcome
TQ,R,N,V_reason
com.apple.donotdisturb.private.schedule
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
overrideType
overrideMode
effectiveIntervals
supportsSecureCoding
TB,R
TQ,R,N,V_overrideType
mode
TQ,R,N,V_mode
T@"NSArray",R,C,N,V_effectiveIntervals
bundle
com.apple.donotdisturb
AppleInternal
@"NSURL"16@?0@"NSString"8
ClientBundles
@16@?0@"NSURL"8
B16@?0@"NSURL"8
.preload.bundle
@"DNDSClientDetails"16@?0@"NSURL"8
com.apple.donotdisturb.server.PairedDeviceStateMonitor
v12@?0i8
pairedDevice
T@"DNDSPairedDevice",C,V_pairedDevice
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
com.apple.private.alloy.donotdisturb
com.donotdisturb.server.IdentityServicesSync
B16@?0@"IDSDevice"8
T@"<DNDSSyncServiceDelegate>",W,N
T@"<DNDSSyncServiceDelegate>",W,N,V_delegate
com.apple.donotdisturb.server.sysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
ServerGeneral
Resolver
ServiceProvider
StateProvider
AssertionManager
IDSTransport
Schedule
Settings
SystemState
LegacyAssertionSync
LegacySettingsSync
ModernAssertionSync
PairedDeviceState
DateIntervalLifetimeMonitor
LocationLifetimeMonitor
CalendarEventLifetimeMonitor
ScheduleLifetimeMonitor
DefaultLifetimeMonitor
DataMigrator
Sysdiagnose
startComponents
endComponents
repeatInterval
identifier
T@"NSDateComponents",R,C,N,V_startComponents
T@"NSDateComponents",R,C,N,V_endComponents
calendarIdentifier
T@"NSString",R,C,N,V_calendarIdentifier
TQ,R,N,V_repeatInterval
T@"NSUUID",R,C,N,V_identifier
<%@: %p; syncEnabled: %@>
syncEnabled
TB,R,N,GisSyncEnabled,V_syncEnabled
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
DNDModeAssertionServiceOptions
DNDAssertionsPersist
DNDClientIdentifier
DNDSyncSuppressed
DNDUserInteractive
identifiers
T@"NSArray",R,C,N,V_identifiers
userInteractionClient
TB,R,N,GisUserInteractionClient,V_userInteractionClient
persistentAssertionClient
TB,R,N,GisPersistentAssertionClient,V_persistentAssertionClient
syncSuppressedClient
TB,R,N,GisSyncSuppressedClient,V_syncSuppressedClient
mirrorDNDState
MirrorDNDStateChangedNotification
syncSettings
T@"DNDSSyncSettings",C,V_syncSettings
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
UUID IN %@
source.clientIdentifier IN %@
source.deviceIdentifier == %@
B24@?0@"DNDModeAssertion"8@"NSDictionary"16
startDate < %@
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
T@"DNDSBehaviorSettingsRecord",C,D,N
T@"DNDSBypassSettingsRecord",C,D,N
T@"DNDSScheduleSettingsRecord",C,D,N
allowed
suppressed
v24@?0@"DNDSClientConnectionDetails"8@"NSXPCConnection"16
B16@?0@"NSString"8
@"DNDSClientConnectionDetails"16@?0@"DNDSClientConnectionDetails"8
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
com.apple.donotdisturb.service
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
assertion.source.clientIdentifier IN %@
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Intenal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
com.donotdisturb.server.Server
SignificantTimeChangeNotification
com.apple.telephonyutilities.callservicesd
com.apple.NanoPhone
lockState
TQ,V_lockState
lostModeState
TQ,V_lostModeState
@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-1
Event was resolved: resolution=%{public}@
Pruned %lu resolutions from record
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor, date=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Refreshing monitor
Location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Location region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed region entry
Confirmed region exit, will invalidate all assertions
Received unexpected region exit, will start region monitoring again
Did not handle state %{public}@
Location monitoring found location, will update geofence; manager=%p, locations=%@
Location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Requesting location to begin monitoring
Location monitoring stopping for geofence; region=%@
Location monitoring started for geofence; location=%@, region=%@
Requesting taking new assertion; assertion=%{public}@
New assertion's start time is before the last complete invalidation date, will invalidate; lastCompleteInvalidationDate=%{public}@, invalidation=%{public}@
New assertion would have been retroactively invalidated by existing invalidation, will invalidate; invalidation=%{public}@
Existing assertion matched existing assertion, will do nothing
Existing assertion was taken after new assertion, will invalidate; invalidation=%{public}@
Existing assertion will invalidate; invalidation=%{public}@
Taken new assertion; assertion=%{public}@
Performing invalidations due to user interactive client
Taking assertion took %lu assertion(s) and caused %lu invalidation(s): lastUpdateDate=%{public}@, lastCompleteInvalidationDate=%{public}@
Found %lu assertion(s) for predicate: predicate=%{public}@
Found %lu assertion invalidation(s) for predicate: predicate=%{public}@
Invalidating assertion(s) with predicate caused %lu invalidation(s): lastUpdateDate=%{public}@, lastCompleteInvalidationDate=%{public}@
Skipping inactive lifetime, lifetime=%{public}@
State recalculation was requested for reason %{public}@
Current DND state was calculated: state=%{public}@
State update will be sent to %lu listeners: stateUpdate=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionToggleDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d, reason=%{public}@
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Unable to find assertions, will return default: error=%{public}@
Unable to find assertion invalidations, will return default: error=%{public}@
Will apply mode assertions update
Will not apply mode assertions update
Failed to load assertion database, will request a radar; error=%{public}@
Wrote out store to file
Failed to write store, will request radar; error=%{public}@
Got new schedule settings: settings=%{public}@
Error encoding behavior overrides
Got new behavior override: override=%{public}@
Error decoding behavior overrides: error=%{public}@
Got new bypass settings: settings=%{public}@
Received new priviledged senders types: %lu
Received message from sync service; syncService=%p, message=%{public}@, versionNumber=%lu, deviceIdentifier=%{public}@
Error sending local assertions: error=%{public}@
Skipping sending store as it is the same as the previous
Skipping received store as it is the same as the previous
Error decoding the assertion store from sync message
Successfully wrote migrated settings
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Updated assertions for schedule: settings=%{public}@
Unable to update assertions for schedule: error=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: settings=%{public}@
Paired device state changed: from=%{public}@, to=%{public}@
Paired watch updated, will check for pairing change
Paired device state updated, will check for pairing change
Receieved sync data: service=%{public}@, service=%{public}@, message=%{public}@, deviceIdentifier=%@, context=%{public}@
Unable to resolve the device identifier from the IDS ID
Send sync data: GUID=%{public}@
Failed to send sync data: GUID=%{public}@, error=%{public}@
Failed to migrate message
Discarding data because delegate did not allow the message
Missing data, will skip message
Missing record version number, will skip message
Invalid version number, will skip message: versionNumber=%{public}@
Capturing sysdiagnose... date=%{public}@
Sysdiagnose captured
Could not capture sysdiagnose due to too much data
Could not capture sysdiagnose due to unable to make Plist: error=%{public}@
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: stateUpdate=%{public}@, connection=%{public}@
Did receive update result with %lu assertion(s) & %lu invalidation(s), will handle; updateResult=%{public}@
Delivering assertion update with invalidation: assertion=%{public}@, invalidation=%{public}@, connection=%{public}@
Delivering assertion update: assertion=%{public}@, connection=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
XPC connection successfully accepted: connection=%{public}@
XPC connection without any valid entitlements tried to connect, will reject: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion invalidation, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get phone call bypass settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set phone call bypass settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%{public}@
Client XPC connection was interrupted: connection=%{public}@
Client XPC connection was invalidated: connection=%{public}@
Registering new connection details for connection: connection=%{public}@
Updating connection details for connection: connection=%{public}@, updatedConnectionDetails=%{public}@
Connection details unregistered: connection=%{public}@, clientDetails=%{public}@
Invalidating assertion due to client disconnect: connection=%{public}@, UUID=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%p, UUIDs=%{public}@
State provider is requesting active assertions; stateProvider=%p
Got state update; provider=%{public}@, stateUpdate=%{public}@
No behavior settings in settings manager, will return default settings
No phone call bypass settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
Performed update for sync manager; manager=%{public}@
Error when performing update for sync manager; manager=%{public}@, error=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Paired devices updated; monitor=%{public}@, previousDevice=%{public}@, device=%{public}@
Ignored update as it changed nothing
Current DND sync status: device=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Starting up...
Received new UI lock state: state=%@
Resolution
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSBackingStoreRecord
NSObject
DNDSMutableBehaviorSettingsRecord
DNDSJSONBackingStore
DNDSBackingStore
Schedule
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSSysdiagnoseDataProvider
DNDSLifetimeMonitor
DNDClientEventSource
DNDSEventBehaviorResolver
Record
DNDSMemoryCachedBackingStore
DNDSBackingStoreDelegate
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSCalendarEventLifetimeMonitor
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
BackingRecord
BackingRecordInternal
InPlaceMigration
MigrationData
BackingStores
DNDSModeAssertionManagerUpdateContext
DNDSModeAssertionUpdateContext
DNDSModeAssertionQuerying
DNDSModeDetails
DNDSScheduleLifetimeMonitor
DNDSModeRepository
DNDSClientConnectionDetails
DNDSMutableClientConnectionDetails
DNDSModeAssertionStateProvider
DNDSStateProvider
LegacySupport
DNDSScheduleSettings
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
DNDSModeAssertionUpdateResult
DNDSModeAssertionInvalidationPredicate
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSModeAssertionManager
DNDSModeAssertionUpdating
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSModeAssertionStore
DNDSMutableModeAssertionStore
DNDSModernAssertionSyncManager
DNDSSyncServiceDelegate
DNDSModeAssertionStoreMigrationDelegate
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSScheduleManager
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSClientDetailsProvider
DNDServer
DNDSPairedDeviceStateMonitor
BackingStore
DNDSIDSSyncService
IDSServiceDelegate
DNDSSyncService
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSSyncSettings
LifetimePhase
DNDSClientDetails
DNDSSyncSettingsProvider
Predicates
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSRemoteServiceProvider
NSXPCListenerDelegate
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceClientProtocol
DNDRemoteServiceClientModeAssertionProtocol
DNDRemoteServiceClientStateProtocol
DNDRemoteServiceClientSettingsProtocol
Entitlements
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSScheduleLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSModeAssertionStateProviderDataSource
DNDSStateProviderUpdateListener
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
source
resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
isEqual:
UUID
startDate
details
initWithUUID:startDate:details:source:
assertion
resolveAssertion:expectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
invalidationDate
reason
reasonOverride
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
deviceIdentifier
clientIdentifier
initWithClientIdentifier:deviceIdentifier:
resolveInvalidation:expectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
_initWithRecord:
interruptionBehaviorSetting
_initWithInterruptionBehaviorSetting:
init
copy
numberWithInt:
hash
stringWithFormat:
bs_safeObjectForKey:ofType:
alloc
dictionary
setObject:forKey:
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
newWithDictionaryRepresentation:
copyWithZone:
mutableCopyWithZone:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
dictionaryRepresentation
.cxx_destruct
_interruptionBehaviorSetting
setInterruptionBehaviorSetting:
defaultManager
path
fileExistsAtPath:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
integerValue
firstObject
delegate
backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
arrayWithObjects:count:
numberWithUnsignedInteger:
timeIntervalSinceReferenceDate
numberWithDouble:
dictionaryWithObjects:forKeys:count:
dataWithJSONObject:options:error:
URLByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
readRecordWithError:
writeRecord:error:
setDelegate:
initWithRecordClass:fileURL:versionNumber:
_recordClass
_fileURL
_versionNumber
_delegate
scheduleEnabledSetting
timePeriod
startTime
dateComponents
endTime
date:matchesComponents:
nextDateAfterDate:matchingComponents:options:
compare:
initWithStartDate:endDate:
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
initWithActiveUUIDs:expiredUUIDs:
activeUUIDs
expiredUUIDs
_activeUUIDs
_expiredUUIDs
cStringUsingEncoding:
dealloc
refreshMonitorFromQueueForDate:
dataSource
lifetimeClass
lifetimeMonitor:modeAssertionsWithLifetimeClass:
updateForModeAssertions:date:
count
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:
activeAssertionsDidChangeForLifetimeMonitor:
activeLifetimeAssertionUUIDs
UUIDString
bs_mapNoNulls:
sysdiagnoseDataForDate:
sysdiagnoseDataIdentifier
refreshMonitorForDate:
setDataSource:
queue
_queue
_activeLifetimeAssertionUUIDs
_dataSource
type
value
predicateForContactsWithIdentifiers:
destinationIdIsPhoneNumber
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsMatchingEmailAddress:
dnds_predicateForContactsMatchingEventSource:
initWithContactStore:
_queue_resolveBehaviorForEventDetails:clientIdentifier:date:error:
date
localizedStringFromDate:dateStyle:timeStyle:
outcome
currentStateForEventBehaviorResolver:
shouldAlwaysInterrupt
suppressionState
currentUILockStateForEventBehaviorResolver:
_queue_resolveOutcomeForEventSource:clientIdentifier:date:reason:
detailsForInactiveDoNotDisturb
activeModeAssertionMetadata
modeIdentifier
arrayByAddingObject:
modeDetailsForIdentifiers:
countByEnumeratingWithState:objects:count:
restrictedDetailsWithDetails:
interruptionSuppression
initWithEventDetails:interruptionSuppression:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
addObject:
dateByAddingTimeInterval:
predicateWithBlock:
filterUsingPredicate:
eventBehaviorResolver:bypassSettingsForClientIdentifier:
immediateBypassEventSourceType
_queue_eventSourceIsFavorite:
_queue_eventSourceIsContact:
immediateBypassCNGroupIdentifier
_queue_eventSourceIsContact:inGroupWithIdentifier:
repeatEventSourceBehaviorEnabledSetting
_queue_eventSourceIsRepeat:clientIdentifier:date:
_queue_eventSourceIsEmergencyContact:
initWithKeysToFetch:
setPredicate:
setUnifyResults:
isUnified
linkedContacts
entriesForContact:
bs_containsObjectPassingTest:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsInGroupWithIdentifier:
unifiedContactsMatchingPredicate:keysToFetch:error:
bs_flatten
identifier
isEqualToString:
eventBehavior
eventDetails
callAlert
ignoreMute
initWithModeRepository:contactStore:
resolveBehaviorForEventDetails:clientIdentifier:date:error:
_modeRepository
_contactStore
_favorites
_resolutionRecord
unsignedIntegerValue
makeRecord
settingsForRecord:
initWithUnderlyingBackingStore:
_underlyingBackingStore
_cache
_lock
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
bs_setSafeObject:forKey:
_immediateBypassEventSourceType
_immediateBypassCNGroupIdentifier
_repeatEventSourceBehaviorEnabledSetting
setImmediateBypassEventSourceType:
setImmediateBypassCNGroupIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
requestAccessToEntityType:completion:
defaultCenter
_calendarEventStoreChangedWithNotification:
addObserver:selector:name:object:
eventUniqueID
occurrenceDate
eventWithUniqueId:occurrenceDate:
isOnlyDuringEvent
endDate
distantFuture
array
lifetime
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
dnds_lifetimePhaseForDate:
earlierDate:
isEqualToDate:
fireTime
dateWithTimeIntervalSinceReferenceDate:
invalidate
_timerFired:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
setUserVisible:
scheduleInQueue:
userInfo
_eventStore
_lifetimeTimer
dateInterval
dnd_locationBundle
initWithEffectiveBundle:delegate:onQueue:
_queue_refreshMonitor
_queue_stopMonitoringCurrentLocation
_queue_sendExpiryEventForAllLocationAssertions
_queue_beginMonitoringCurrentLocation
lastObject
_queue_geofenceLocation:
isEqualToArray:
requestLocation
stopMonitoringForRegion:
coordinate
initWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
startMonitoringForRegion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_locationManager
_currentRegion
_regionEntered
_hasActiveLifetimes
lastUpdatedTimestamp
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:bedtimeBehaviorEnabledSetting:
_lastUpdatedTimestamp
_scheduleEnabledSetting
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_bedtimeBehaviorEnabledSetting
setLastUpdatedTimestamp:
setScheduleEnabledSetting:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setBedtimeBehaviorEnabledSetting:
bs_safeArrayForKey:
bs_filter:
setAssertions:
setInvalidations:
bs_safeNumberForKey:
doubleValue
setLastCompleteInvalidationDate:
bs_safeStringForKey:
setLastCompleteInvalidationReason:
setLastCompleteInvalidationSource:
setLastUpdateDate:
assertions
invalidations
lastCompleteInvalidationDate
lastCompleteInvalidationReason
lastCompleteInvalidationSource
lastUpdateDate
mutableCopy
upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:
_startDateTimestampForV6DictionaryRepresentation:
downgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:migrationDelegate:
removeObjectForKey:
initWithUUIDString:
addEntriesFromDictionary:
setIdentifier:
setModeIdentifier:
setUserVisibleEndDate:
setLifetime:
userVisibleEndDate
_migrateV2UserRequestedLifetimeToV3:
numberWithBool:
boolValue
_migrateV3ToggleLifetimeToV4:
_clientIdentifierForV6Dictionary:
isAssertionSyncSuppressedForClientIdentifier:
isAssertionUserRequestedForClientIdentifier:
_migrateV4ToggleLifetimeToV3:
_migrateV3UserRequestedLifetimeToV2:
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithDateInterval:
sharedInstance
initWithScheduleIdentifier:behavior:
scheduleIdentifier
behavior
fileURLWithPathComponents:
URLByAppendingPathComponent:
dnds_localAssertionBackingStoreFileURL
dnds_settingsBackingStoreFileURL
dnds_legacySettingsFileURL
bs_map:
initWithAssertions:invalidations:
clientDetailsForIdentifier:
invalidationPredicateForDate:
evaluateWithObject:
identifiers
predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:
modeAssertionInvalidationsMatchingPredicate:
sortedArrayUsingComparator:
predicateForModeAssertionsWithClientIdentifiers:
modeAssertionsMatchingPredicate:
notPredicateWithSubpredicate:
filteredArrayUsingPredicate:
laterDate:
isUserInteractionClient
invalidateAssertionsMatchingPredicate:details:source:reason:reasonOverride:
arrayByAddingObjectsFromArray:
takeAssertionWithUUID:details:source:startDate:
clientIdentifiers
UUIDs
takeAssertionWithDetails:source:startDate:
initWithStore:clientDetailsProvider:
store
updateResult
_store
_clientDetailsProvider
_results
initWithInterruptionSuppression:
_interruptionSuppression
scheduleSettingsForScheduleLifetimeMonitor:
defaultScheduleSettings
currentCalendar
_activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:
creationDate
containsDate:
activeDateIntervalForScheduleLifetime:assertionStartDate:date:
allObjects
_initWithDetails:
interruptionInvalidationAssertionUUID
assertionUpdateClientIdentifiers
wantsStateUpdates
wantsSettingsUpdates
_initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:
_interruptionInvalidationAssertionUUID
_assertionUpdateClientIdentifiers
_wantsStateUpdates
_wantsSettingsUpdates
setInterruptionInvalidationAssertionUUID:
setAssertionUpdateClientIdentifiers:
setWantsStateUpdates:
setWantsSettingsUpdates:
hashTableWithOptions:
_queue_recalculateStateForReason:
removeObject:
currentlyActiveModeAssertionsForStateProvider:
currentLostModeStateForStateProvider:
currentInterruptionBehaviorSettingForStateProvider:
stateProvider:activeDateIntervalForModeAssertion:
lifetimeType
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
initWithSuppressionState:activeModeAssertionMetadata:
initWithPreviousState:state:reason:
stateProvider:didUpdateDoNotDisturbState:
currentStateWithError:
addUpdateListener:
removeUpdateListener:
recalculateStateForReason:
_stateUpdateListeners
_currentState
initRequiringSecureCoding:
setClassName:forClass:
dnds_secureLegacyArchiver
initForReadingFromData:error:
setClass:forClassName:
dnds_secureLegacyUnarchiverForReadingFromData:error:
settingsWithClientSettings:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
supportsSecureCoding
replacementObjectForCoder:
_creationDate
initWithQueue:
_readSettingsReturningError:
behaviorSettings
_saveBehaviorSettings:phoneCallBypassSettings:scheduleSettings:error:
settingsManager:didReceiveUpdatedBehaviorSettings:
phoneCallBypassSettings
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
scheduleSettings
settingsManager:didReceiveUpdatedScheduleSettings:
syncSettings
setBehaviorSettings:
setPhoneCallBypassSettings:
setScheduleSettings:
settingsManager:didReceiveUpdatedSyncSettings:
syncSettingsProvider:didReceiveUpdatedSyncSettings:
initWithBackingStore:contactStore:
behaviorSettingsWithError:
setBehaviorSettings:withError:
phoneCallBypassSettingsWithError:
setPhoneCallBypassSettings:withError:
scheduleSettingsWithError:
setScheduleSettings:withError:
syncSettingsWithError:
_backingStore
_syncSettingsProvider
emptyResult
resultByAddingResult:
_assertions
_invalidations
initWithDate:clientIdentifiers:UUIDs:
containsObject:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
invalidationPredicateForDate:clientIdentifiers:
invalidationPredicateForDate:UUIDs:
evaluateWithObject:substitutionVariables:
initWithCoder:
encodeWithCoder:
_date
_clientIdentifiers
_UUIDs
initWithDomain:
synchronize
_endMonitoringForChanges
_beginMonitoringForChanges
updateForReason:
_queue_updateToggleSyncForReason:
_queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:
syncManager:performModeAssertionUpdatesWithHandler:
currentStateForLegacyAssertionSyncManager:
activeDateInterval
_queue_gizmoUpdateDate
_queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:
_queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:
_queue_updateCompanionAssertionMirroringForState:
doubleForKey:keyExistsAndHasValidFormat:
distantPast
dateWithTimeIntervalSinceNow:
boolForKey:
isSyncSuppressedClient
setBool:forKey:
setDouble:forKey:
synchronizeNanoDomain:keys:
currentlyActivePairedDeviceForSyncManager:
lifetimeUntilEndOfScheduleWithIdentifier:
setWithObject:
detailsWithIdentifier:modeIdentifier:lifetime:
cleanupState
resume
updateForModeAssertionUpdateResult:
initWithClientDetailsProvider:
_updateGizmoAssertionSync
_npsManager
_accessor
initWithBackingStore:clientDetailsProvider:
_loadDataFromBackingStore
updateModeAssertionsWithContextHandler:error:
objectForKey:
allValues
_saveDataToBackingStoreWithError:
isPersistentAssertionClient
initWithBackingStoreURL:clientDetailsProvider:
clientDetailsForClientIdentifier:
_initWithListen:send:
update
phoneCallBypassSettingsForSyncManager:
scheduleSettingsForSyncManager:
_propagateBypassSettings:
_propagateScheduleSettings:
legacyBehaviorOverride
encodedData
recordForLegacyBehaviorOverride:lastUpdated:
syncManager:didReceiveUpdatedScheduleSettings:
legacyPrivilegedSenderType
setInteger:forKey:
integerForKey:keyExistsAndHasValidFormat:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
managerForSender
managerForReceiver
_updateScheduleSettings
_updateBypassSettings
_listen
_send
_initWithStore:
_lastCompleteInvalidationDate
_lastCompleteInvalidationReason
_lastCompleteInvalidationSource
_lastUpdateDate
bs_safeDictionaryForKey:
initWithClientDetailsProvider:syncService:
_queue_sendStateSnapshotToPairedDevice:force:
_queue_handleMessage:withVersionNumber:
_syncAssertionStoreForAssertionStore:pairedDevice:
_unresolvedSyncAssertionStore:pairedDevice:
syncProtocolVersion
sendMessage:withVersionNumber:completionHandler:
_resolvedSyncAssertionStore:pairedDevice:
predicateForModeAssertionsWithDeviceIdentifier:
syncService:didReceiveMessage:withVersionNumber:fromDeviceIdentifier:
syncService:shouldAcceptIncomingMessage:withVersionNumber:fromDeviceIdentifier:
_syncService
_latestSentOrReceivedStore
dictionaryWithContentsOfURL:
recordWithEncodedInfo:error:
backingStoreWithFileURL:
timeIntervalSinceNow
removeItemAtURL:error:
deviceClass
initWithDeviceIdentifier:deviceClass:syncProtocolVersion:
_deviceIdentifier
_deviceClass
_syncProtocolVersion
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_UUID
_eventBehavior
_clientIdentifier
_outcome
_reason
scheduleSettingsForScheduleManager:
_refreshForUserInteraction:scheduleSettings:context:
lifetimeMatchingScheduleWithIdentifier:
initWithModeAssertionManager:
refreshForUserInteraction:
_modeAssertionManager
_currentScheduleSettings
decodeIntegerForKey:
initWithOverrideType:mode:effectiveIntervals:
overrideType
encodeInteger:forKey:
mode
effectiveIntervals
_overrideType
_mode
_effectiveIntervals
_loadPreloadBundles
_defaultModuleDirectories
URLByAppendingPathExtension:
detailsForBundleAtURL:
initWithIdentifiers:userInteractionClient:persistentAssertionClient:syncSuppressedClient:
pathWithComponents:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
hasSuffix:
_detailsByIdentifier
_dnds_pairedDeviceClass
_dnds_syncProtocolVersion
_queue_updatePairedState
pairedDevice
_getCurrentPairedDevice
setPairedDevice:
pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:
getActivePairedDevice
pairingID
_pairedDeviceStateChanged:
UTF8String
removeObserver:
_pairedDeviceDidChangeNotificationToken
_pairedDevice
_queue_resume
_queue_sendMessage:withVersionNumber:error:
devices
bs_firstObjectPassingTest:
deviceForIDSDevice:
_queue_handleIncomingMessage:deviceIdentifier:
initWithService:
addDelegate:queue:
sendMessage:toDestinations:priority:options:identifier:error:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
weakObjectsHashTable
dataWithPropertyList:format:options:error:
length
getBytes:length:
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
startComponents
endComponents
calendarIdentifier
repeatInterval
_startComponents
_endComponents
_calendarIdentifier
_repeatInterval
_identifier
isSyncEnabled
initWithSyncEnabled:
_syncEnabled
_recordWithEncodedInfo:error:
bs_firstObjectOfClass:
hour
numberWithInteger:
minute
setHour:
setMinute:
intValue
predicateForiOSLegacyIdentifier:
requestAccessForEntityType:completionHandler:
groupsMatchingPredicate:error:
_userInteractionClient
_persistentAssertionClient
_syncSuppressedClient
_identifiers
_updateSyncPreferences
_queue_updateSyncPreferences
boolForKey:keyExistsAndHasValidFormat:
setSyncSettings:
_syncSettings
predicateWithFormat:
predicateForModeAssertionsWithUUIDs:
predicateForModeAssertionsWithLifetimeClass:
predicateForModeAssertionsTakenBeforeDate:
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:
_behaviorSettings
_phoneCallBypassSettings
_scheduleSettings
setStartTime:
setEndTime:
initWithMachServiceName:
weakToStrongObjectsMapTable
remoteObjectProxy
deliverStateUpdate:
_iterateClientConnectionsToSendWithHandler:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverUpdatedBehaviorSettings:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedScheduleSettings:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
dnds_hasAnyValidEntitlement
currentConnection
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
remoteServiceProvider:resolveBehaviorForEventDetails:clientIdentifier:date:error:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
_registerOrMutateConnectionDetailsForClientConnection:handler:
dnds_hasModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:latestInvalidationWithClientIdentifer:error:
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:
setByAddingObject:
dnds_hasStateRequestEntitlementForClientIdentifier:
remoteServiceProvider:currentStateWithError:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
remoteServiceProvider:behaviorSettingsWithError:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:phoneCallBypassSettingsWithError:
remoteServiceProvider:setPhoneCallBypassSettings:withError:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setScheduleSettings:withError:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
_unregisterConnectionDetailsForClientConnection:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:error:
listener:shouldAcceptNewConnection:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
takeModeAssertionWithDetails:requestDetails:completionHandler:
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
registerForAssertionUpdatesWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
setBehaviorSettings:withRequestDetails:completionHandler:
getPhoneCallBypassSettingsWithRequestDetails:completionHandler:
setPhoneCallBypassSettings:withRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
setScheduleSettings:withRequestDetails:completionHandler:
registerForSettingsUpdatesWithRequestDetails:completionHandler:
handleStateUpdate:
handleModeAssertionUpdateResult:
handleUpdatedBehaviorSettings:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedScheduleSettings:
_listener
_clientConnectionDetailsByConnection
interfaceWithProtocol:
_dnds_safeStringArrayEntitlementForKey:
valueForEntitlement:
fileURLWithPath:
lastPathComponent
productHardwareModel
productBuildVersion
domain
code
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByReplacingOccurrencesOfString:withString:
URLWithString:
defaultWorkspace
openURL:configuration:completionHandler:
lostModeIsActive
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:
setLockState:
setLostModeState:
lockState
_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:
_activeModeAssertions
_activeDateIntervalForModeAssertion:
lostModeState
_queue_handlePairedDeviceAndSyncSettingsChange
addObjectsFromArray:
_handleSignificantTimeChange
setUILockState:error:
_setLostModeState:error:
_calendarEventLifetimeMonitor
_scheduleLifetimeMonitor
_lifetimeMonitors
_scheduleManager
_stateProvider
_eventBehaviorResolver
_serviceProvider
_assertionSyncManager
_settingsSyncManager
_settingsManager
_pairedDeviceStateMonitor
_lockState
_lostModeState
@40@0:8@16@24@32
@48@0:8@16@24@32@40
@40@0:8@16Q24Q32
@24@0:8@16
@24@0:8^{_NSZone=}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
v16@0:8
@"NSNumber"
v24@0:8@16
@24@0:8^@16
B32@0:8@16^@24
B32@0:8@"<DNDSBackingStoreRecord>"16^@24
@"<DNDSBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSBackingStoreDelegate>"16
@40@0:8#16@24Q32
@"NSURL"
@"<DNDSBackingStoreDelegate>"
@32@0:8@16@24
@"NSArray"
@"NSDictionary"24@0:8@"NSDate"16
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@48@0:8@16@24@32^@40
Q48@0:8@16@24@32o^Q40
B32@0:8@16@24
B40@0:8@16@24@32
@"<DNDSModeRepository>"
@"CNContactStore"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@48@0:8@16@24Q32Q40
@"NSDictionary"48@0:8@"<DNDSBackingStore>"16@"NSDictionary"24Q32Q40
@"<DNDSBackingStore>"
@"<DNDSBackingStoreRecord>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"EKEventStore"
@"PCPersistentTimer"
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLRegion"
@72@0:8@16@24@32@40@48@56@64
@48@0:8@16Q24Q32@40
B24@0:8N@16
@"NSArray"24@0:8@"NSPredicate"16
@56@0:8@16@24@32Q40Q48
@"DNDSModeAssertionUpdateResult"40@0:8@"DNDModeAssertionDetails"16@"DNDModeAssertionSource"24@"NSDate"32
@"DNDSModeAssertionUpdateResult"56@0:8@"DNDSModeAssertionInvalidationPredicate"16@"DNDModeAssertionInvalidationDetails"24@"DNDModeAssertionSource"32Q40Q48
@"DNDSMutableModeAssertionStore"
@"DNDSClientDetailsProvider"
@24@0:8Q16
@60@0:8@16@24@32@40@48B56
@"NSArray"24@0:8@"NSArray"16
@40@0:8@16@24B32B36
@"NSUUID"
@"NSSet"
v20@0:8B16
@"DNDState"24@0:8^@16
v24@0:8@"<DNDSStateProviderUpdateListener>"16
v24@0:8Q16
@"NSHashTable"
@"DNDState"
@"<DNDSModeAssertionStateProviderDataSource>"
@32@0:8@16^@24
@48@0:8Q16@24Q32@40
@"NSDate"
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
Q48@0:8@16@24@32^@40
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
v24@0:8@"DNDSModeAssertionUpdateResult"16
v40@0:8@16@24Q32
@"NPSManager"
@"NPSDomainAccessor"
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@32@0:8@?16^@24
@"DNDSModeAssertionUpdateResult"32@0:8@?<B@?@"<DNDSModeAssertionUpdateContext>">16^@24
B24@0:8^@16
@"DNDSModeAssertionStore"
@"<DNDSSettingsSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDataSource>"16
@"<DNDSSettingsSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDelegate>"16
@24@0:8B16B20
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
@"DNDModeAssertionSource"
v48@0:8@16@24Q32@40
B48@0:8@16@24Q32@40
v48@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40
B48@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40
B24@0:8@"NSString"16
v28@0:8@16B24
v32@0:8@16Q24
@"<DNDSSyncService>"
@"<DNDSAssertionSyncManagerDataSource>"
@64@0:8@16@24@32@40Q48Q56
@"DNDClientEventBehavior"
v36@0:8B16@20@28
@"DNDSModeAssertionManager"
@"DNDSScheduleSettings"
@"<DNDSScheduleManagerDataSource>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16Q24@32
@"NSMutableDictionary"
@"DNDSPairedDevice"
@"<DNDSPairedDeviceStateMonitorDelegate>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16Q24@?32
v40@0:8@"NSDictionary"16Q24@?<v@?B@"NSError">32
@"<DNDSSyncServiceDelegate>"16@0:8
v24@0:8@"<DNDSSyncServiceDelegate>"16
B40@0:8@16Q24^@32
@"IDSService"
@"<DNDSSyncServiceDelegate>"
@56@0:8@16@24@32Q40@48
@"NSDateComponents"
@20@0:8B16
@28@0:8Q16i24
Q24@0:8@16
@36@0:8@16B24B28B32
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@24@0:8#16
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v48@0:8@16Q24@32@?40
v32@0:8@16@?24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16Q24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?B@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBypassSettings"@"NSError">24
v40@0:8@"DNDBypassSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v24@0:8@?16
@"NSXPCListener"
@"NSMapTable"
@"<DNDSRemoteServiceProviderDelegate>"
v40@0:8@"DNDModeAssertion"16@"DNDModeAssertionInvalidation"24@"NSArray"32
v24@0:8@"DNDStateUpdate"16
v24@0:8@"DNDBehaviorSettings"16
v24@0:8@"DNDBypassSettings"16
v24@0:8@"DNDScheduleSettings"16
@"DNDState"24@0:8@"DNDSEventBehaviorResolver"16
Q24@0:8@"DNDSEventBehaviorResolver"16
@"DNDBypassSettings"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@32@0:8@16#24
@"NSArray"32@0:8@"<DNDSLifetimeMonitor>"16#24
@"DNDSScheduleSettings"24@0:8@"<DNDSLifetimeMonitor>"16
v24@0:8@"<DNDSLifetimeMonitor>"16
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24@"NSDate"32
@"NSArray"24@0:8@"DNDSModeAssertionStateProvider"16
@"NSDateInterval"32@0:8@"DNDSModeAssertionStateProvider"16@"DNDModeAssertion"24
Q24@0:8@"DNDSModeAssertionStateProvider"16
v32@0:8@"<DNDSStateProvider>"16@"DNDStateUpdate"24
@56@0:8@16@24@32@40^@48
@"DNDClientEventBehavior"56@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24@"NSString"32@"NSDate"40^@48
@40@0:8@16@24^@32
@56@0:8@16@24Q32Q40^@48
@64@0:8@16@24Q32Q40@48^@56
@56@0:8@16@24Q32@40^@48
@"DNDModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertionInvalidation"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDModeAssertionInvalidation"56@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32Q40^@48
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24Q32Q40@"DNDModeAssertionInvalidationDetails"48^@56
@"NSArray"56@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32@"NSString"40^@48
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16@24^@32
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDBypassSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBypassSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
@"DNDSPairedDevice"24@0:8@"<DNDSAssertionSyncManager>"16
v32@0:8@"<DNDSAssertionSyncManager>"16@?<B@?@"<DNDSModeAssertionUpdateContext>">24
@"DNDState"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDBypassSettings"24@0:8@"<DNDSSettingsSyncManager>"16
@"DNDSScheduleSettings"24@0:8@"<DNDSSettingsSyncManager>"16
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDBypassSettings"24
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDSScheduleSettings"24
@"DNDSScheduleSettings"24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDBypassSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"DNDSPairedDevice"24@"DNDSPairedDevice"32
B32@0:8Q16^@24
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSModeAssertionStateProvider"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
