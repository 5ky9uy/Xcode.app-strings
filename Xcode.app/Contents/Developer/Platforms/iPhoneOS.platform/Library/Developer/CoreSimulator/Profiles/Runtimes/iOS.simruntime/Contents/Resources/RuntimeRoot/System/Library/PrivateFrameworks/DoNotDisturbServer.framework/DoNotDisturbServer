@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-305.123
source
applicationIdentifier
displayName
storeIconURL
cachedIconURL
syncEngine
action
modifiedRecords
deletedMetadata
metadataAck
ackAction
syncDate
update
replace
unlock
resync
com.donotdisturb.server.DNDSIDSSyncEngine
v8@?0
enabled
disabled
com.apple.donotdisturb.DNDSIDSSyncEngine
zones
pairedDevice
syncState
retriesAvailable
inflightExpirationTime
inflightMetadata
inflightMetadataByRequestIdentifier
inflightDateByRequestIdentifier
role
v20@?0B8@"NSError"12
v28@?0B8@"NSString"12@"NSError"20
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
AppConfigurationAction
header
version
timestamp
data
NSDictionary
Unexpected version number
com.apple.donotdisturb.server.JSONBackingStore
deviceOutOfSpace
<%@: %p; UUID: %@; predicate: %@; requestDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
v24@?0q8^B16
com.apple.donotdisturb.lifetime-monitor.%@
@"NSString"16@?0@"NSUUID"8
active-uuids
preventAutoReply
bypassSettings
modesCanImpactAvailability
lastModified
automaticallyGenerated
.donotdisturb.trigger
com.apple.donotdisturb.private.app-launch
com.apple.donotdisturb.private.biome-app-launch.queue
com.apple.donotdisturb.appForeground.coalescing
B16@?0@"DNDModeAssertion"8
system
com.apple.donotdisturb.appLaunch
eventBody.bundleID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.donotdisturb.appLaunch.event-coalescing
com.apple.focus.activity-manager
B16@?0@"<DNDSModeAssertionUpdateContext>"8
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
reason
@"NSDictionary"16@?0@"DNDSEventBehaviorResolution"8
resolution-record
B24@?0@"DNDSEventBehaviorResolution"8@16
is NOT
com.apple.cmas
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
@16@?0@"CNContact"8
B16@?0@"DNDSEventBehaviorResolution"8
WKPushBundleMetadata
manifestId
UI locked
UI unlocked
<invalid>
com.apple.donotdisturb.availability.service.launching
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.donotdisturbd.%@
User Notifications are disabled for this App.
Focus Status is not shared with this App.
App is missing Communication Notifications entitlement.
FocusMode
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
com.apple.donotdisturb.server.ContactMonitor
v32@?0@"NSArray"8@"NSArray"16@"NSData"24
v24@?0@"NSArray"8^B16
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
v24@?0@"NSString"8@"NSObject<OS_xpc_object>"16
B16@?0@"EKEvent"8
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
@"NSUUID"16@?0@"DNDModeAssertion"8
default
com.donotdisturb.server.AvailabilityCoordinator
com.donotdisturb.server.ExtensionLaunch
v16@?0q8
v24@?0@"DNDSUserAvailabilityPublishResult"8@"NSArray"16
v32@?0@"NSString"8@"AKAvailability"16@"NSError"24
@"NSSet"24@?0@"NSArray"8@"NSArray"16
v16@?0@"DNDSUserAvailabilityPublishResult"8
com.apple.MobileSMS
v24@?0@"INIntentResponse"8@"NSError"16
NSExtension
NSExtensionPointIdentifier
com.apple.watchkit
XCTest
v16@?0@"NSError"8
Calling bundleId does not have permission to read user availability.
Call to -[SKStatusPublishingService publishStatusRequest:completion:] timed out
Caller does not have permission to trigger publishing user availability.
AVAILABLE
UNAVAILABLE
v24@?0@"NSString"8@"NSError"16
DNDAppAction
com.apple.donotdisturb.server.until-i-leave
com.donotdisturb.server.LocationLifetimeMonitor
CLCircularRegion
DNDModeAssertionExplicitRegionLifetime
%@.private.region.%@
Failed to load current explicit region database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSLocationLifetimeMonitor.m
Failed to write store
<%@: %p; enteredRegionIdentifiersPendingExit: %@>
enteredRegionIdentifiersPendingExit
Failed to load current region database
<%@: %p; activeAssertionUUIDs: %@; hasActiveLifetimes: %@; currentRegion: %@; regionEntered: %@>
activeLifetimeAssertionUUIDs
@16@?0@"NSString"8
currentRegion
regionIdentifier
regionCenterLatitude
regionCenterLongitude
regionRadius
regionEntered
@16@?0@"NSUUID"8
unknown
inside
outside
act-update-fuzz-floor
act-update-fuzz-ceiling
act-update-disabled
act-update-coalescing-interval
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; timePeriodWeekdays: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodWeekdays
bedtimeBehaviorEnabledSetting
<%@: %p; meDeviceStatus: %@; meDeviceName: %@>
meDeviceStatus
meDeviceName
<%@: %p; placeholderModes: %@>
placeholderModes
Inactive
Active
PerModeSettings
storeAssertionRecords
storeInvalidationRecords
storeInvalidationRequestRecords
assertionUUID
assertionStartDateTimestamp
assertionDetails
assertionSource
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsUserVisibleEndDate
assertionDetailsLifetime
assertionDetailsReason
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
assertionDetailsScheduleLifetimeScheduleIdentifier
assertionDetailsScheduleLifetimeBehavior
assertionDetailsExplicitRegionLocationLifetimeLatitude
assertionDetailsExplicitRegionLocationLifetimeLongitude
assertionDetailsExplicitLocationRegionLifetimeRadius
assertionDetailsExplicitRegionLocationLifetimeRegionIdentifier
assertionClientIdentifier
assertionSourceDeviceIdentifier
invalidationAssertion
invalidationDateTimestamp
invalidationDetails
invalidationSource
invalidationReason
invalidationReasonOverride
invalidationDetailsIdentifier
invalidationRequestUUID
invalidationRequestPredicate
invalidationRequestDateTimestamp
invalidationRequestDetails
invalidationRequestSource
invalidationRequestReason
invalidationRequestReasonOverride
invalidationPredicateType
dateInvalidationPredicateDate
clientIdentifierInvalidationPredicateIdentifiers
UUIDInvalidationPredicateUUIDs
Library
DoNotDisturb
Assertions.json
Settings.json
Metrics.json
BulletinBoard
BehaviorOverrides.plist
UntilExitRegion.json
ExplicitRegion.json
ModeConfigurations.json
ModeConfigurationsSecure.json
GlobalConfiguration.json
System
PlaceholderModes.ipados.json
PlaceholderModes.json
SyncEngineMetadata.plist
SyncEngineLastChance.plist
IDSSyncEngineMetadata.plist
AssertionSyncMetadata.plist
MeDeviceStatus.json
@"NSDictionary"16@?0@8
user-requested
assertionDetailsUserRequested
schedule
com.apple.donotdisturb.schedule.default
expire-on-end
storeLastCompleteInvalidationTimestamp
user-changed-state
storeLastCompleteInvalidationReason
assertionDetailsSyncSuppressionOptions
storeLastUpdateDate
storeLastCompleteInvalidationSourceClientIdentifier
storeLastCompleteInvalidationSourceDeviceIdentifier
@"NSDictionary"16@?0@"NSMutableDictionary"8
invalidationSourceClientIdentifier
invalidationSourceDeviceIdentifier
AppConfigurationTargetContentIdentifierPrefix
NSString
B16@?0@"DNDModeAssertionInvalidation"8
q24@?0@"DNDModeAssertion"8@"DNDModeAssertion"16
q24@?0@"DNDSModeAssertionInvalidationRequest"8@"DNDSModeAssertionInvalidationRequest"16
B16@?0@"DNDSModeAssertionInvalidationRequest"8
q24@?0@"DNDModeAssertionInvalidation"8@"DNDModeAssertionInvalidation"16
default.device
assertionDetailsScheduleLifetimeLatitude
assertionDetailsScheduleLifetimeLongitude
assertionDetailsScheduleLifetimeRadius
assertionDetailsScheduleLifetimeRegionIdentifier
<%@: %p; interruptionSuppression: %@>
<%@: %p; mode: %@; configuration: %@; secureConfiguration: %@; triggers: %@; impactsAvailability: %@; dimsLockScreen: %@; created: %@; lastModified: %@; lastModifiedByVersion: %@; lastModifiedByDeviceID: %@; automaticallyGenerated: %@; compatibilityVersion: %@; hasSecureData: %@>
<%@: %p; mode: %@; impactsAvailability: %@; dimsLockScreen: %@>
mode
configuration
secureConfiguration
triggers
secureTriggers
impactsAvailability
dimsLockScreen
created
lastModifiedByVersion
lastModifiedByDeviceID
compatibilityVersion
resolvedCompatibilityVersion
hasSecureData
metadata
systemFields
systemFieldsRecordID
systemFieldsData
userRecordID
accountStatus
encryptionAvailable
zoneNames
com.apple.donotdisturb.server.MetricsManager
com.apple.donotdisturb.control-center.module
com.apple.private.Carousel.control-center.DND.state
none
com.apple.donotdisturb.assertionTaken
manual
type
controlCenterPhone
controlCenterWatch
scheduleIdentifier
hour
lockState
weekday
@"NSDictionary"8@?0
com.apple.donotdisturb.kit.lifetime.one-hour
com.apple.donotdisturb.kit.lifetime.evening
com.apple.donotdisturb.kit.lifetime.morning
com.apple.donotdisturb.kit.lifetime.location
com.apple.donotdisturb.kit.lifetime.event
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.dailyHeartbeat
manuallyEnabled
numberOfSessions
numberOfManualSessions
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
com.apple.donotdisturb.weeklyHeartbeat
com.apple.donotdisturb.monthlyHeartbeat
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/Metrics/DNDSMetricsManager.m
MMMMYYYY
en_US
<%@: %p; minimumBreakthroughUrgency: %@; ; allowedThreads: %@; ; deniedThreads: %@; >
minimumBreakthroughUrgency
allowedThreads
deniedThreads
com.apple.donotdisturb.server.ScheduleLifetimeMonitor.timer
com.apple.donotdisturb
DNDSettingsModel
momd
Settings.sqlite
donotdisturbd
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
com.apple.donotdisturb.reachability
v16@?0@"NSObject<OS_nw_path>"8
com.apple.donotdisturb.server.ModeConfigurationsManager
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Failed to load configurations
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSModeConfigurationManager.m
Saving configuration
Saved configurations
Failed to save configuations
Error saving configurations
Failed to save configuations; first lock
com.apple.donotdisturb.ModeConfigurationsManager
@"DNDSModeAssertionRecord"16@?0@8
com.apple.donotdisturb.legacy-watch-toggle
@"NSDictionary"16@?0@"DNDSModeAssertionRecord"8
webIdentifier
givenName
com.apple.donotdisturb.PlaceholderModeManager
Failed to load placeholder modes
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSPlaceholderModeManager.m
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
bundleID
platform
<%@: %p; preventAutoReply: %@; bypassSettings: %@; modesCanImpactAvailability: %@; lastModified: %@; automaticallyGenerated: %@>
com.apple.donotdisturb.private.system-actions
B16@?0@"DNDSystemAction"8
 reverse
identifier
Main
Secondary
<schedule: enabled: %@; %@; bedtime: %@; creation: %@>
com.apple.donotdisturb.private.fmf-me-device.queue
com.apple.donotdisturb.DNDSMeDeviceService.call-out
Failed to load current 'Me Device' database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSMeDeviceService.m
Failed to write 'Me Device' store
class
enabledSetting
DNDModeConfigurationTrigger
DNDModeConfigurationScheduleTrigger
DNDModeConfigurationSmartTrigger
DNDModeConfigurationWorkoutTrigger
DNDModeConfigurationSleepingTrigger
DNDModeConfigurationDrivingTrigger
DNDModeConfigurationGameControllerTrigger
DNDModeConfigurationMindfulnessTrigger
DNDModeConfigurationAppForegroundTrigger
DNDModeConfigurationLocationTrigger
bundleIdentifier
creationDate
latitude
longitude
radius
referenceFrame
detail
<%@: %p; triggers: %@>
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
com.apple.donotdisturb.SettingsManager
interruption-behavior
%@ (%@)
behavior-settings
creation-date-local
creation-date-timestamp
start-time
%lu:%lu
end-time
bedtime-enabled
schedule-settings
cloud-enabled
local-enabled
sync-settings
<%@: %p; metadata: %@; data: %@>
<%@: %p; assertions: %@; invalidations: %@>
com.apple.developer.usernotifications.communication
AppConfigurationPredicate
<%@: %p>
<%@: %p; date: %@>
date
<%@: %p; clientIdentifiers: %@>
clientIdentifiers
<%@: %p; UUIDs: %@>
UUIDs
com.apple.donotdisturb.trigger.workout
com.apple.donotdisturb.private.workout-trigger
com.apple.nano
workoutDND
com.apple.donotdisturb.private.biome-workout.queue
WorkoutDNDStateChangedNotification
com.apple.donotdisturb.private.nps-workout.queue
%@.%@
com.apple.donotdisturb.workoutTrigger
start
stop
resume
pause
unspecified
com.apple.donotdisturb.appconfiguration.service.launching
com.apple.donotdisturb.DNDSSyncEngineLastChanceDataStore.queue
com.donotdisturb.server.sync.legacy
com.donotdisturb.server.sync.legacy.workout
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
DNDStateChangedNotification
DNDAssertStateChangedNotification
B16@?0@"DNDSModeAssertionManagerUpdateContext"8
B16@?0@"DNDStateModeAssertionMetadata"8
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
com.apple.donotdisturb.server.ModeAssertionManager
Failed to load assertion database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSModeAssertionManager.m
com.apple.private.dndtool
com.apple.donotdisturbd.nonPersistentAssertionTransaction
DNDSModeConfigurationsRecordData
DNDSModeConfigurationsRecordPartitionedData
DNDSModeConfigurationsRecordMainPartition
DNDSModeConfigurationsRecordSecondaryPartition
DNDSModeConfigurationsVersion
DNDSModeConfigurationsLastModified
DNDSModeConfigurationsMinimumRequiredVersion
DNDSModeConfigurationsRecordForceUpdate
DNDSModeConfigurationsSourceDeviceIdentifier
DNDSModeConfigurationsSourceFrameworkVersion
com.apple.donotdisturb.daemon_workloop
<%@: %p; metricsByDay: %@; lastDailyHeartbeat: %@; metricsByWeek: %@; lastWeeklyHeartbeat: %@; metricsByMonth: %@; lastMonthlyHeartbeat: %@>
metricsByDay
lastDailyHeartbeat
metricsByWeek
lastWeeklyHeartbeat
metricsByMonth
lastMonthlyHeartbeat
com.apple.donotdisturb.trigger.driving
com.apple.donotdisturb.private.driving-trigger
com.apple.donotdisturb.private.biome-driving.queue
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
<%@: %p; applicationConfigurationType: %@; senderConfigurationType: %@; suppressionType: %@; minimumBreakthroughUrgency: %@; hideApplicationBadges: %@; compatibilityVersion: %@>
applicationConfigurationType
senderConfigurationType
suppressionType
hideApplicationBadges
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
<%@: %p; assertions: %@; invalidations: %@; invalidationRequests: %@>
lastReceivedStoreDate
lastSentStoreDate
pendingLastSentStoreDate
lastUpdateDate
deviceIdentifiers
@"DNDModeAssertion"16@?0@"DNDModeAssertion"8
@"DNDModeAssertionInvalidation"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequest"8
@16@?0@"DNDModeAssertion"8
com.apple.donotdisturb.server.ModernAssertionSyncManager
com.apple.donotdisturb.pendingUpdate
Focus detected excessive change rate.
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSModernAssertionSyncManager.m
com.apple.donotdisturb.sync
forced 
@16@?0@"DNDSPairedDevice"8
v32@?0@"_DNDSSyncMessageGroup"8@"NSMutableArray"16^B24
Failed to load assertion sync metadata store
v24@?0@"NSString"8@"NSDate"16
Failed to write sync metadata
com.apple.donotdisturb.AssertionSync
device %@
last-received-dates
last-sent-dates
message %@
pending-messages
.private.schedule
sendDate: %@; deviceIdentifiers: %@
<%@: %p; lastReceivedStoreDate: %@; lastSentStoreDate: %@; pendingLastSentStoreDate: %@>
@"DNDSModeAssertionInvalidationRecord"16@?0@8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
%@Local
B16@?0@8
Error writing migrated settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p%@%@; deviceIdentifier: '%@'; deviceClass: %@; assertionSyncProtocolVersion: %lu; configurationSyncProtocolVersion: %lu; iOS14EraOS: %@; supportsSilenceLists: %@; iCloudEnabled: %@; syncServiceType: %@; pairingIdentifier: %@; pairingDataStore: %@>
; deviceName: '%@'
; build: %@
phone
watch
<unhandled>
local
cloud
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
SystemAction
DNDSystemAction
DNDSSystemAction
<%@: %p; enabled: %@; manuallyEnabled: %@; numberOfSessions: %@; numberOfManualSessions: %@; enabledFromControlCenterPhone: %@; enabledFromControlCenterWatch: %@; enabledForOneHour: %@; enabledUntilEvening: %@; enabledUntilMorning: %@; enabledAtLocation: %@; enabledDuringEvent: %@; enabledDrivingMode: %@; enabledSleepMode: %@>
numOfSessions
numOfManualSessions
<%@: %p; %@; dayOfWeek: %@>
com.apple.donotdisturb.DNDSAuxiliaryStateMonitor.queue
calendar
date-interval
current-location
explicit-region
match-schedule
com.apple.donotdisturb.trigger.sleeping
com.apple.donotdisturb.private.sleeping-trigger
com.apple.donotdisturb.private.biome-sleeping.queue
appInfo
monitoredBundleIdentifiers
AppInfoMetadata.plist
com.apple.donotdisturb.server.AppInfoCache
com.apple.donotdisturb.iconcache
IconCache
https://itunes.apple.com/lookup
bundleId
country
entity
software,iPadSoftware,macSoftware
limit
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"DNDAppInfo"8
%@_%@.%@
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
results
trackName
artworkUrl100
kind
software
ipad-software
mac-software
v16@?0@"NSDictionary"8
com.apple.NanoStopwatch
APP_NAME_STOPWATCH
com.apple.NanoMenstrualCycles
APP_NAME_CYCLE_TRACKING
com.apple.watchmemojieditor
APP_NAME_MEMOJI
com.apple.NanoHeartRhythm
APP_NAME_ECG
com.apple.private.NanoTimer
APP_NAME_TIMER
com.apple.NanoOxygenSaturation.watchkitapp
APP_NAME_BLOOD_OXYGEN
com.apple.NanoAlarm
APP_NAME_ALARMS
com.apple.NanoTips
APP_NAME_TIPS
com.apple.NanoSleep.watchkitapp
APP_NAME_SLEEP
com.apple.Mind
APP_NAME_MINDFULNESS
com.apple.NanoNowPlaying
APP_NAME_NOW_PLAYING
com.apple.Noise
APP_NAME_NOISE
com.apple.NanoRemote
APP_NAME_REMOTE
com.apple.HeartRate
APP_NAME_HEART_RATE
com.apple.MobileStore
APP_NAME_ITUNES_STORE
com.apple.Health
APP_NAME_HEALTH
com.apple.Bridge
APP_NAME_WATCH
com.apple.Passbook
APP_NAME_WALLET
com.apple.camera
APP_NAME_CAMERA
com.apple.store.Jolly
APP_NAME_APPLE_STORE
com.apple.mobilephone
APP_NAME_PHONE
com.apple.donotdisturb.private.schedule
@"NSString"16@?0@"NSString"8
v32@?0@"NSString"8@"NSArray"16^B24
overrideType
overrideMode
effectiveIntervals
DNDSModeConfigurationsRecord
DNDSModeConfigurations
DNDSModeConfigurationsContactHistoryToken
Local configuration
Remote configuration
modeConfiguration
Writing updated configurations
Configuration
Writing configurations
bundle
@"DNDSClientDetails"16@?0@"NSString"8
AppleInternal
@"NSURL"16@?0@"NSString"8
ClientBundles
@16@?0@"NSURL"8
B16@?0@"NSURL"8
.preload.bundle
@"DNDSClientDetails"16@?0@"NSURL"8
iPod
iPad
iPhone
Watch
com.apple.donotdisturb.server.PairedDeviceStateMonitor
B16@?0@"DNDSPairedDevice"8
v12@?0i8
com.apple.donotdisturb.PairedDevice
assertion-protocol-version
config-protocol-version
icloud-enabled
name
build
paired-device
cloud-devices
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789
NSPredicate
AppConfigurationActionPredicate
<%@: %p; deviceClass: %@; deviceCapabilities: %@; identifier: %@; frameworkVersion: %@>
<%@: %p; symbolImageName: %@; tintColorName: %@; name: %@; modeIdentifier: %@; semanticType: %zd; visibility: %lu; identifier: %@>
symbolImageName
tintColorName
modeIdentifier
semanticType
visibility
<%@: %p; modeConfigurations: %@>
modeConfigurations
com.donotdisturb.server.IdentityServicesSync
com.apple.donotdisturb.xpc.event.publisher
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
DNDSAllowUnredactedSysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.donotdisturb.sysdiagnose.statehandler
<%@: %p; senderConfiguration: %@; ; allowedApplications: %@; ; deniedApplications: %@; ; allowedWebApplications: %@; ; deniedWebApplications: %@; >
senderConfiguration
platforms
allowedApplications
silencedApplications
allowedWebApplications
silencedWebApplications
ServerGeneral
Resolver
ServiceProvider
AppConfiguration
AppFocusConfigurationTask
AppFocusConfiguration
SystemFocusConfiguration
AppSpecificSettingsManager
AvailabilityProvider
StateProvider
AssertionManager
AssertionStore
IDSTransport
Schedule
AppForegroundTrigger
BiomeDonation
DrivingTrigger
MindfulnessTrigger
GamingTrigger
SleepingTrigger
SmartTrigger
WorkoutTrigger
Settings
AuxiliaryState
SystemState
MeDeviceService
LegacyAssertionSync
LegacySettingsSync
ModernAssertionSync
PairedDeviceState
DateIntervalLifetimeMonitor
LocationLifetimeMonitor
CalendarEventLifetimeMonitor
ScheduleLifetimeMonitor
DefaultLifetimeMonitor
DataMigrator
Sysdiagnose
Metrics
Keybag
CloudSync
ModeConfigurations
GlobalConfiguration
IDSSyncEngine
XPCEventPublisher
startComponents
endComponents
repeatInterval
disableCloudSync
mirrorDNDState
<%@: %p; pairSyncEnabled: %@; cloudSyncEnabled: %@>
com.apple.donotdisturb.private.app-focus-filter.queue
B16@?0@"DNDAppAction"8
v32@?0@"DNDApplicationIdentifier"8@"NSSet"16^B24
v24@?0@"LNAction"8@"NSError"16
v32@?0@"DNDSAppFocusConfigurationTask"8@"LNSuccessResult"16@"NSError"24
stateUpdate
tasksExecuted
com.apple.donotdisturbd.app-focus-filters.first-launch
v16@?0@"NSObject<OS_xpc_object>"8
<%@: %p; assertions: %@; activeAssertionUUIDs: %@; activeDateIntervalByAssertionUUID: %@; interruptionBehaviorSetting: %@; lostModeState: %@; lastUpdate: %@>
syncDates
initialSyncs
pairedDeviceIdentifier
recordID
DNDSAppSpecificSettings
DNDSAppSpecificSettingsRecord
DNDSAppSpecificSettingsApp
DNDSAppSpecificSettingsType
DNDSAppSpecificSettingsIdentifier
DNDSAppSpecificSettingsPayload
PerAppSettingsForAppModeID
PerModeSettingsForModeID
PerAppSettingsForAppMode
PerModeSettingsForMode
ModeForModeIdentifier
ApplicationForBundleIdentifier
DNDSAppSpecificSettingsTypeAppConfigurationAction
DNDSAppSpecificSettingsTypeAppConfigurationPredicate
DNDSAppSpecificSettingsTypeSystemAction
v16@?0@"NSArray"8
Attempt to get mode specific settings before first unlock.
Mode identifier not valid.
Model does not contain provided entity name.
MODE_ID
Error querying settings.
Attempt to get app specific settings before first unlock.
Application's bundle identifier not valid.
BUNDLE_ID
Failed to fetch settings.
Attempt to mode app specific settings before first unlock.
SETTINGS_ID
Attempt to set mode specific settings before first unlock.
Failed to fetch settings to delete.
Unexpected managed object class for entity.
Failed to commit settings.
Attempt to set app specific settings before first unlock.
Attempt to remove mode specific settings before first unlock.
Failed to remote settings.
Failed to remove settings.
identifier IN (%@)
Failed to commit changes.
Attempt to remove app specific settings before first unlock.
Failed to remove app settings.
v16@?0@"DNDPerModeSettingsMO"8
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
user-action
system-state
lifetime-expired
client-ended
client-replaced
server-unresponsive
client-unresponsive
location-lifetime-expired
calendar-event-lifetime-expired
@"DNDSModeAssertionRecord"16@?0@"DNDModeAssertion"8
@"DNDSModeAssertionInvalidationRecord"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@"DNDSModeAssertionInvalidationRequest"8
@"DNDModeAssertion"16@?0@"DNDSModeAssertionRecord"8
@"DNDModeAssertionInvalidation"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
@"NSUUID"16@?0@"NSString"8
com.apple.donotdisturb.trigger.mindfulness
com.apple.donotdisturb.private.mindfulness-trigger
com.apple.donotdisturb.private.biome-mindfulness.queue
com.apple.donotdisturb.mindfulnessTrigger
breathe
reflect
meditation
DNDClientDetails
DNDEventBehaviorResolutionServiceOptions
DNDEventBehaviorResolutionContextDeviceUILocked
DNDModeAssertionServiceOptions
DNDAssertionsPersist
DNDClientIdentifier
DNDSyncSuppressed
DNDiOS14SyncSuppressed
DNDUserInteractive
DNDForceAssertionStatusUpdate
com.apple.donotdisturb.server.AppConfigurationsManager
@16@?0@"DNDMode"8
No action exists for action identifier; ignoring request to set predicate.
No action exists for action identifier; ignoring request to set target content identifier prefix.
v24@?0@"LNFocusConfigurationAppContext"8@"NSError"16
Unable to find system action for reverse action. action=%@; mode=%@
com.apple.donotdisturb.AppConfigurationManager
disableModeConfigurationsSync
disableSync
com.apple.donotdisturbd
dndCompanionCloudSyncDisabled
MirrorDNDStateChangedNotification
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
B16@?0@"DNDModeConfigurationTrigger"8
UUID IN %@
source.clientIdentifier IN %@
source.deviceIdentifier == %@
NOT (details.modeIdentifier IN %@)
B24@?0@"DNDModeAssertion"8@"NSDictionary"16
startDate < %@
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@; configurations: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
configurations
.private.region.
com.apple.donotdisturb.private.region
com.apple.donotdisturb.siri.assistant
com.apple.donotdisturb.preferences
com.apple.siri.Settings
com.apple.springboard.donotdisturb.hid
com.apple.DoNotDisturb.Intents
com.apple.donotdisturb.private.intents
com.apple.donotdisturb.private.intents.user-interactive
com.apple.private.dndtool.user-requested
com.apple.carkitd.assertion-service
com.apple.private.Carousel.school-mode.DND.state
com.apple.donotdisturb.private.gaming-trigger
com.apple.HealthDaemon.assertion-service
com.apple.sleep.sleep-mode
com.apple.sleep.sleep-mode-legacy
com.apple.mobiletimer.bedtime-mode
com.apple.donotdisturb.private.smart-trigger
Available
Source
Reason
SemanticType
ExtensionCount
BundleID
InterruptionSuppression
Count
com.apple.alarm
com.apple.notifyd.matching
com.apple.donotdisturb.%@
Date
UserVisible
<%@: %p; allowedContactTypes: %@; ; deniedContactTypes: %@; ; allowedContactGroups: %@; ; deniedContactGroups: %@; ; allowedContacts: %@; ; deniedContacts: %@; ; phoneCallBypassSettings: %@; >
allowedContactTypes
deniedContactTypes
allowedContactGroups
deniedContactGroups
allowedContacts
silencedContacts
zone
<%@: %p; identifier: %@; zone: %@>
<%@: %p; contactIdentifier: %@; firstName: '%@'; middleName: %@; lastName: %@; nickName: %@; organizationName: %@; phoneNumbers: %@; emailAddresses: %@>
phoneNumbers
contactIdentifier
firstName
middleName
lastName
nickName
organizationName
emailAddresses
value
Record
secureModeConfigurations
com.apple.aps.donotdisturb.sync-engine
com.donotdisturb.server.DNDSSyncEngine
RecordID change was made before sync engine availability.
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSSyncEngine.m
RecordZoneID change was made before sync engine availability.
com.apple.donotdisturb.DNDSSyncEngine
allowSyncEngineCreation
accountAvailable
featureEnabled
supportedDevice
syncEnabled
testing
%@ %@:%@(%@)
lastChanceStore
available
unavailable
v28@?0@"NSString"8B16@"NSError"20
v24@?0q8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
LocalModeConfigurations.json
LocalModeConfigurationsSecure.json
LocalGlobalConfiguration.json
SyncedGlobalConfiguration.json
allowed
suppressed
Application
deleted
<%@: %p; recordID: %@; lastModified: %@; deleted: %s>
com.apple.donotdisturb.trigger.gaming
com.apple.donotdisturb.private.biome-gaming.queue
com.apple.donotdisturb.gamingTrigger
PerAppSettings
com.apple.donotdisturb.service.launching
com.apple.donotdisturb.service.non-launching
com.apple.donotdisturbd.remoteserviceprovider
v24@?0@"DNDSClientConnectionDetails"8@"BSServiceConnection<BSServiceConnectionContext>"16
B16@?0@"NSString"8
@"DNDSClientConnectionDetails"16@?0@"DNDSClientConnectionDetails"8
Mode assertion not found for assertion UUID.
com.apple.focus.current-sentinel
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.auxiliary-state.modification.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.request.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.modify.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.availability.client-identifiers
com.apple.private.donotdisturb.medevicestate.client-identifiers
com.apple.FocusSettings
com.apple.Focus-Settings.extension
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
assertion.source.clientIdentifier IN %@
DNDSGlobalConfigurationRecord
DNDSGlobalConfigurationRecordData
DNDSGlobalConfigurationRecordEncryptedData
DNDSGlobalConfigurationVersion
DNDSGlobalConfigurationMinimumRequiredVersion
DNDSGlobalConfiguration
prevent
allow
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Internal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
dnd.keybag.observers
dnd.keybag
com.apple.private.alloy.donotdisturb
com.apple.private.alloy.status.personal
v24@?0@"DNDSUserAvailabilityPublishResult"8q16
com.donotdisturb.server.Server
SignificantTimeChangeNotification
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
No mode configuration found for mode identifier.
v16@?0@"<DNDSAssertionSyncManager>"8
Found
No current action is available. Supply the caller with the default.
v16@?0@"STMutableFocusStatusDomainData"8
Migrated default mode
v32@?0@"DNDMode"8Q16^B24
@16@?0@"DNDModeConfigurationTrigger"8
B16@?0@"NSUUID"8
isPlaceholder == NO
NONE %@.modeIdentifier == modeIdentifier
isPlaceholder == YES
ANY %@.modeIdentifier == modeIdentifier
com.apple.donotdisturb.trigger.smart
com.apple.donotdisturb.private.biome-inferred-mode.queue
B16@?0@"DNDMode"8
com.apple.donotdisturb.smartTrigger
eventBody.isAutomationEnabled
com.apple.donotdisturb.GlobalConfigurationManager
globalConfiguration
Error saving configuration
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSGlobalConfigurationManager.m
IDS sync engine is disabled because of feature flag
IDS sync engine is disabled because of unsupported device
IDS sync engine is available
Ignoring records as the sync engine is disabled: %{public}llu
IDS sync engine changed to %{public}s
Ignoring paired device/enabled change as the sync engine is not available: %{public}llu
Paired device changed from %{public}@ to %{public}@
Ignoring paired device not supported by IDS Sync Engine: %@
Ignoring incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as it is not from the active device: deviceIdentifier=%{public}@, pairedDevice=%{public}@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%{public}lu, currentVersionNumber=%{public}lu
Ignoring message send callback as the sync engine is disabled: %{public}llu
Error in didSendWithRequestIdentifier sending record modifications: %{public}@
Removed %{public}llu inflight records; %{public}llu remaining
%{public}llu outstanding request identifiers
Sync because keybag is unlocked
Metadata store is invalid; purging
Will not sync because keybag is locked
Will not sync because sync is inactive
Will not sync because pairedDeviceIdentifier is nil
Performing sync for all data sources
Will not send ack because keybag is locked
Will not send ack because sync is inactive
Will not send ack because action is nil
Sending ack for action %{public}@ with %{public}llu record metadata items
Sent %{public}llu record metadata items in ack
Error sending metadata ack: %{public}@
Will not send unlock message because keybag is locked
Will not send unlock message because sync is inactive
Sent unlock message
Failed to send unlock message: %{public}@
Will not send resync message because sync is inactive
Sent resync message
Failed to send resync message: %{public}@
Will not send records because keybag is locked
Will not send records because sync is inactive
Will not send records because pairedDeviceIdentifier is nil
Sending %{public}llu modified records and %{publi}llu deleted record IDs
Paired device has synced before; sending as update
Paired device has never synced; sending as replace
Metadata for modified record with ID %{public}@ is already syncing
Modified record could not be serialized: %@
Metadata for deleted record with ID %{public}@ is already syncing
Deleted record metadata could not be serialized: %@
Update message is empty; will not send
Syncing %{public}llu modifications and %{public}llu deletions
Added %{public}llu inflight records; %{public}llu remaining
Sent %{public}llu modified record IDs and %{publi}llu deleted record IDs
Error in sendMessage sending record modifications: %{public}@
Exhausted retry attempts; will not try again
Will not set retry timer because keybag is locked
Will not set retry timer because sync is inactive
Retry timer will fire in %llus
Retry timer fired (attempt #%{public}llu)
Resetting retry timer
Cancelling retry timer
No inflight metadata; will not start expiration timer
Will not set expiration timer because keybag is locked
Will not set expiration retry timer because sync is inactive
Expiration timer will fire in %llus
Expiration timer fired
Cancelling expiration timer
Will not handle message because sync is inactive
Unknown action %{public}@
Received resync message
Received ack message for action %{public}@
Paired device has performed an initial sync
Received unlock message
Received update message
Ignoring update from paired device that we have never synced with
Sending modified record %{private}@ to data source %{public}@
Incoming modified record %{private}@ has an older lastModified date than the existing record
Sending deleted recordID %{private}@ to data source %{public}@
Incoming deleted metadata %{private}@ has an older lastModified date than the existing metadata
Received replace message
Paired device should never send a replace message
Metadata store is invalid; purging and syncing
Unexpected version number %{public}llu (maximum version number %{public}llu)
Updated assertions for app launch triggers: configuration=%@
Don't have trigger for identifier '%@'. Invalidating...
Refreshing with event %@
Adding biome app launch event monitor for %{public}@
AppLaunch subscription completed: state=%ld error=%{public}@
Received app launch event: bundleID=%{public}@ starting=%{public}@ event=%{public}@
reset coalescing timer due to bundleID change; updated assertions for app launch event: event=%{public}@
coalescing timer fired; updated assertions for app launch event: event=%{public}@
Resolving breakthrough for active mode: %{public}@.
Couldn't find mode configuration for active mode: %{public}@.
Event was resolved: resolution=%@
Pruned %lu resolutions from record
Resolution modified to accomodate auxiliary state; isScreenMirrored=%d isScreenShared=%d isPresentationModeEnabled=%d
Breakthrough %{public}@ allowed for configuration %@ with event details: %@.
Breakthrough %{public}@ allowed for global settings with event details: %@.
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Filled out missing contact identifier: %{public}@ from sender: %@ to determine breakthrough.
Updated contact identifier to %{public}@ from sender: %@ to determine breakthrough.
No change to contact identifier from sender: %@ to determine breakthrough.
Resolving breakthrough through for configuration: %@ with event details application: %{public}@, sender: %@, urgency: %{public}@, eventType: %{public}@, threadIdentifier: %{public}@
Failed to retrieve an LSApplicationRecord for bundleIdentifier:%@; error=%@
Notification filter predicate from App Context threw during evaluation, exception=%{public}@ bundleIdentifier=%@ modeIdentifier=%@
Notification filter predicate from App Context did not validate, issues=%{public}@ bundleIdentifier=%@ modeIdentifier=%@
Resolving global breakthrough for sender: %@
Failed to lookup contact in address book. predicate=%{public}@, error=%{public}@
Determined whether sharing / mirroring preferences should adjust event behavior; shouldAdjust=%d
XPC connection successfully accepted: connection=%{public}@
[%{public}@] Error determining Focus Status; will report YES for available: error=%{public}@ connection=%{public}@
[%{public}@] Determinined Focus Status: available=%{public}@ connection=%{public}@
[%{public}@] XPC connection without User Notifications authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without sharing authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without Communication Notifications entitlement tried to get Focus Status, will invalidate: connection=%{public}@
Client XPC connection was interrupted: connection=%{public}@
Client XPC connection was invalidated: connection=%{public}@
Contacts store changed
Fetched %{public}lld contacts
Unable to fetch contact change history: %{public}@
Collected %{public}lld changed contacts and %{public}lld
History contains %{public}lld events
Unable to fetch contact change history
count: %{public}@
Refreshing monitor, date=%{public}@
Unable to find matching event for synced assertion; eventIdentifier=%{public}@; assertionIdentifier=%{public}@
No date interval for event; eventIdentifier=%{public}@
Pending date interval for event; eventIdentifier=%{public}@
Active date interval for event; eventIdentifier=%{public}@
Expired date interval for event; eventIdentifier=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor
Skipping publish and invite on resume because User Availability is **still** enabled.
Resuming User Availability publish current availability and update invites for relevant contacts.
Notifying intent extensions of availability on User Availability coordinator resume
Skipping overriding publish on suspend because User Availability is **already** disabled.
Error publishing availability to StatusKit: %{public}@
Published status request with identifier: %{public}@
Forcing intent extensions to available on User Availability coordinator suspend.
Skipping availability coordination because User Availability is disabled.
Ignoring request to coordinate user availability; from and to configurations are the same.
Checking if intent extensions need availability update
update.previousState: %{public}@
update.state: %{public}@
Notifying intent extensions of availability update
Forcing Messages AvailabilityKit status to available on User Availability coordinator TCC revocation.
Forcing intent extensions to available on User Availability coordinator TCC revocation. app=%{public}@
Ignoring request to publish StatusKit availability; from and to configurations are the same.
Found intent extension for app: %{public}@
Intent launcher error: %{public}@
Skipping Intent launch of %@ because relative availability did not change.
App (%{public}@) does not have user availability TCC permission, not launching extension.
App (%{public}@) does not have UN Communication entitlement, not launching extension.
App (%{public}@) does not have UN authorization, not launching extension.
Done dispatching launch blocks to _launchQueue
Skipping invitation send request because User Availability is disabled.
Error getting allowedModesForContactHandle: %@
Error publishing AKAvailabilityInvitation: %@
Successfully published AKAvailabilityInvitation
Forcing availability re-publish despite no updated invitations.
Skipping availability re-publish because no mode is enabled.
Skipping availability re-publish because User Availability is disabled.
Skipping availability re-publish because there were no changes to allowed contacts.
Skipping availability check because User Availability is disabled.
Looking up User Availability permission for bundleId: %{public}@
Empty bundleId passed to isTCCUserAvailabilityGrantedForBundleId
Skipping exceptional modes check because User Availability is disabled.
Skipping availability check for contact because User Availability is disabled.
Messages does not have user availability TCC permission.
Skipping publish because User Availability is disabled.
Error getting mode configuration for %{private}@
Unexpected empty identifier UUID or nil mode for modeIdentifier, modeIdentifier=%{private}@
.impactsAvailability is disabled for %{private}@
Forced focus status update indicating not focused due to TCC revocation
Applying override to focus status update: %@
Informing availability (%{public}@) for activity %{public}@ to StatusKit
Could not fetch a contact for contact: %@
Scoring %{public}llu matches for contact %@
Contact %@ scored %{public}llu
New high score: %{public}llu
Contact %@ has the high score %{public}llu
Explicit region monitoring failed for region; manager=%p, region=%@, error=%{public}@
Explicit region region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed explicit region entry; region=%@
Confirmed explicit region entry, not taking assertion until explicit exit following early invalidation of the assertion associated with prior entry; region=%@
Confirmed explicit region exit for a region pending exit following early invalidation of the assertion associated with prior entry, will note exit; region=%@
Confirmed explicit region exit, will invalidate all assertions; region=%@
Received unexpected explicit region exit, region=%@
Did not handle explicit region state %{public}@; region=%@
Explicit region monitoring encountered a failure; manager=%p, error=%{public}@
Refreshing explicit region monitor
Assertion(s) for region(s) invalidated without exit from region(s); regions=%{public}@
Start monitoring for region; region=%@
Stop monitoring for region; region=%@
Monitoring stopped for an entered region, associated assertion will be invalidated and entrance reset; region=%@
Monitoring stopped for an entered region pending exit following early invalidation of the assertion associated with prior entry, entrance will be reset; region=%@
Failed to load current explicit region database, will request a radar; error=%{public}@
Found existing entered regions for invalidated assertions pending exit.
Wrote out explicit region store to file
Failed to write explicit region store, but error can be ignored; error=%{public}@
Failed to write explicit region store, will request radar; error=%{public}@
Until I leave location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Until I leave location region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed until I leave region entry
Confirmed until I leave region exit, will invalidate all assertions
Received unexpected until I leave region exit, will start region monitoring again
Did not handle until I leave region state %{public}@
Until I leave location monitoring found location, will update geofence; manager=%p, locations=%@
Until I leave location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Refreshing until I leave monitor
Requesting current location to begin monitoring until I leave
Until I leave location monitoring stopping for geofence; region=%@
Until I leave location monitoring started for geofence; region=%@
Failed to load current until I leave region database, will request a radar; error=%{public}@
Found existing until I leave region to begin monitoring
Wrote out until I leave store to file
Failed to write until I leave store, but error can be ignored; error=%{public}@
Failed to write until I leave store, will request radar; error=%{public}@
generating fuzzable %@ - %@ ms
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.takeAssertion
Inserted new assertion into store; assertion=%{public}@
Inserted new invalidation request into store; invalidationRequest=%{public}@
Assertion was already invalidated; assertion=%{public}@
Assertion already exists in store; assertion=%{public}@
Found %lu assertion(s) for predicate: predicate=%{public}@
Found %lu assertion invalidation(s) for predicate: predicate=%{public}@
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.invalidateAssertions
Inserted new invalidation request into store; request=%{public}@
Assertion preserved; assertion=%{public}@
Assertion invalidated; invalidation=%{public}@, invalidationRequest=%{public}@
Assertion already invalidated, skipping work; invalidation=%{public}@, invalidationRequest=%{public}@
[%{public}@] Begin: %{public}@
[%{public}@] %{public}@
[%{public}@] created: %{public}@; lastModified: %{public}@; lastModifiedByVersion: %{public}@; lastModifiedByDeviceID: %@; isAutomaticallyGenerated: %{public}d; compatibilityVersion: %{public}@; hasSecureData: %{public}d; 
[%{public}@] triggers: %{private}@
[%{public}@] configuration: %{private}@
[%{public}@] End
Failed to decode system fields for record %{public}@: %{public}@
Failed to delete metadata store: %@
Failed to load metadata store at url %@: %@
Detected outdated metadata store with version %{public}llu
Failed to write metadata store: %{public}@
Sending assertion taken event
Updating aggregated metrics
Sending daily metrics heartbeat
Sending weekly metrics heartbeat
Sending monthly metrics heartbeat
Metrics Wrote out store to file
Metrics Failed to write store, but error can be ignored; error=%{public}@
Metrics Failed to write store, will request radar; error=%{public}@
Skipping inactive lifetime, lifetime=%{public}@
Attempt to load persistent store before first unlock.
Failed to create backing store directory.
Error adding persistent store: %@
Failed to destroy persistent store: %@
Destroyed persistent store to retry load. url=%@
Loaded persistent store with description: %@
Informed of reachability change to %@
Informing delegates of debounced reachability state: %@
Debounced reachability state (%@) did not change. Ignoring.
Ignoring call to set mode configuration because it is unchanged.
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Secure data will not be written
Secure data will be written
Setting mode configuration with placeholder visibility effectively removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Removing mode configuration for default Focus is not supported; modeIdentifier=%{public}@
Removing mode configuration for custom Focus; modeIdentifier=%{public}@
Removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Failed to load configurations, will request a radar; error=%{public}@
Failed to load configurations but device is under first lock; error=%{public}@
Keybag unlocked for the first time; fixing up mode sender configurations if needed.
Failed to save configurations, but error can be ignored; error=%{public}@
Failed to save configurations, will request a radar; error=%{public}@
Failed to save configurations but device is under first lock; error=%{public}@
Failed to read record to fix up configurations; error=%{public}@
Fixing up mode with sender configuration: %{public}@ to new sender configuration: %{public}@
Fixing up driving mode with secureConfiguration: %{public}@ to new secureConfiguration: %{public}@
Failed to write record to fix up configurations though it was needed; error=%{public}@
Deferring mode sender configuration fixup until keybag unlocked for the first time.
Sanitizing contact %{public}@ failed: error=%{public}@
Calculate DND state for snapshot: activeAssertionUUIDs=%{public}@
assertion for snapshot: assertion=%{public}@
Current DND state was calculated: state=%{public}@
Failed to load placeholder modes, will request a radar; error=%{public}@
Ignoring request to coordinate system configurations; from and to mode are the same.
Handling state update: %{public}@; previous: %{public}@ (%{public}@)
Running system action: runner=%p; action=%{public}@
Running reverse action due to action deletion in active mode. identifier=%{public}@; mode=%{public}@
Running%{public}@ action due to action update in active mode. identifier=%{public}@; mode=%{public}@
Running reverse actions due to action deletion in active mode. mode=%{public}@; identifiers=%{public}@
Finished running system action: runner=%p; action=%{public}@; reverse=%{public}@
Lost track of mode associated with action. identifier=%{public}@; action=%{public}@
%@ partition data is nil in record data %{public}@
Failed to decode %@ partition data %{public}@: %{public}@
Record %{public}@ is not valid JSON
Configuration: %{private}@
Dictionary: %{private}@
Partition: %{private}@
received notification that 'Me Device' status changed fetching devices
received notification that 'Me Device' devices changed fetching devices
determining current 'Me Device' status is not supported
failed to load current 'Me Device' database, will request a radar; error=%{public}@
current 'Me Device' state unknown / incomplete; requesting active device
current 'Me Device' state loaded from store; meDeviceStatus=%{public}@, meDeviceName=%{public}@
wrote out 'Me Device' store to file
failed to write 'Me Device' store, but error can be ignored; error=%{public}@
failed to write 'Me Device' store, will request radar; error=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, but error can be ignored; error=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Refresh workout trigger for system: mode=%{public}@
Invalidating active assertion no mode identifer for workout trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for workout trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for workout trigger in response to event; modeID=%{public}@
Invalidating active assertion workout trigger in response to event; previousModeID=%{public}@
Invalidating active assertion no mode identifer for workout trigger in response to event; previousModeID=%{public}@
Adding biome workout event monitor; mode=%{public}@
Workout subscription completed: state=%ld error=%{public}@
Received workout event: eventType=%{public}@
Updated assertions for workout event: event=%{public}@
Create mode for workout trigger to match existing nano preferences setting.
Created mode for workout trigger: mode=%{public}@
Create mode for workout trigger in response to nano preference update.
Update workout trigger for mode in response to nano preference update: enabled=%{public}@ mode=%{public}@
Refreshed workout trigger for nano preferences update: mode=%{public}@
Workout trigger already matches nano preferences update: mode=%{public}@
Disable workout DND preference for workout trigger mode deletion.
Disable workout DND preference to match disabled workout trigger.
Enable workout DND preference to match enabled workout trigger.
Requesting workout trigger refresh due to nano preferences change
Client request to get current app configuration: bundleIdentifier=%{public}@
Client request to invalidate app context: bundleIdentifier=%{public}@
Failed to delete last chance store: %@
Failed to write last chance store: %@
Failed to serialize last chance store: %@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionToggleDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d, reason=%{public}@
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Unable to find assertions, will return default: error=%{public}@
Unable to find assertion invalidations, will return default: error=%{public}@
com.apple.donotdisturb.ModeAssertionManager.updateModeAssertions
Executed handler; return=%{BOOL}d
Failed to load assertion database, will request a radar; error=%{public}@
Removing stale invalidations from store. %@
Removing stale invalidation requests from store. %@
Wrote out store to file
Failed to write store, but error can be ignored; error=%{public}@
Failed to write store, will request radar; error=%{public}@
No action taken for request to refresh driving trigger; automatic entry not supported
Error decoding behavior overrides: error=%{public}@
Ignoring schedule settings with no override
Error encoding behavior overrides
Got new schedule settings: settings=%{public}@, oldSettings=%{public}@
Got new schedule settings: settings=%{public}@
Got new bypass settings: settings=%{public}@, oldSettings=%{public}@
Got new bypass settings: settings=%{public}@
INCExtensionConnection timeout!! %{public}@
INCExtensionConnection interrupted!! %{public}@
INCExtensionConnection resumeWithCompletionHandler error!! %{public}@
INCExtensionConnection proxy handle error!! %{public}@
Sending forced update to local paired device on resume.
Skipping initial state sync on resume because there isn't a paired device.
Sending update to cloud devices on resume.
Skipping update as it should not require sync: result=%{public}@
Delaying sync of fuzzable change by %@ seconds.
Delaying sync for %@ seconds to coalesce update.
Coalescing timer has delayed sync for %@ seconds. This may indicate a rogue trigger.
Skipping sync due to server bag override.
Rejecting message because cloud sync is disabled.
Rejecting incoming message with unhandled messageType: %@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%lu, currentVersionNumber=%lu
Received message from sync service; syncService=%p, message=%{public}@, versionNumber=%lu, deviceIdentifier=%{public}@
Sent message from sync service; syncService=%p, requestIdentifier=%{public}@, success=%@, error=%{public}@
Unable to find paired device for device identifier %{public}@
Received impossible version number: versionNumber=%lu, currentVersionNumber=%lu
Received store from %{public}@ is older (%{public}@) than the last received store (%{public}@).
%lu assertion(s) were abandoned by the remote device, will invalidate: UUIDs=%{public}@
Incoming store from %{public}@ was older (%{public}@) than the store it replaced (%{public}@). Will re-send...
Error decoding the assertion store from sync message
Sending %{public}@update to devices: %@
Generating message for sync to %@: %@
Skipping sending store to %@ as it is the same as or earlier than the previous (current: %{public}@; previous: %{public}@)
Preparing to sync to %@
Syncing on %{public}@ version %@: %@
Error sending %{public}@ assertions to %@: error=%{public}@
Sending %{public}@ assertions pending with identifier %{public}@
Unable to generate store message for %@
Got send results from unrecognized identifier %{public}@. success: %@, error: %{public}@
Send request %{public}@ failed with error %{public}@. Recipients: %{public}@
Bumping lastUpdateDate for %{public}@ from %{public}@ to %{public}@
Leaving lastUpdateDate unchanged for %{public}@ (%{public}@). Got %{public}@ and already have %{public}@
Rewinding lastUpdateDate for %{public}@ (%{public}@). Got %{public}@ but already have %{public}@
Failed to load load assertion sync metadata store, will request a radar; error=%{public}@
Creating new assertion sync metadata store.
Retiring device(s) from last seen metadata: %@
Retiring device(s) from last sent metadata: %@
Retiring pending message(s) from metadata: %@
Wrote out assertion sync metadata store.
Failed to write assertion sync metadata store, but error can be ignored; error=%{public}@
Failed to write assertion sync metadata store, will request radar; error=%{public}@
Successfully wrote migrated settings
Error writing migrated settings, but error can be ignored; error=%{public}@
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Could not sanitize contacts; will use existing data this time: %{public}@
Fetched %{public}lld sanitizated contacts
Unable to fetch sanitized contacts: %{public}@
Ignoring request to donate for state update; from and to mode are the same.
Biome event(s) donated for mode end: reason=%{public}@ source=%{public}@ from=%{public}@
Biome event(s) donated for mode begin: reason=%{public}@ source=%{public}@ to=%{public}@
Failed to unarchive settings: %{public}@
Failed to archive settings: %{public}@
Task id=%{public}@ Preparing action on %{public}@; action=%{public}@
Task id=%{public}@ Executing prepared action on %{public}@; action=%{public}@
Task id=%{public}@ completed action execution %{public}@:%{public}@; result=%{public}@ error=%{public}@
Unexpected callback: Executor needsConfirmationWithRequest; request=%{public}@
Unexpected callback: Executor needsDisambiguationWithRequest; request=%{public}@
Unexpected callback: Executor needsValueWithRequest; request=%{public}@
Failed to get action metadata for task with actionIdentifier:%{public}@ applicationIdentifier:%{public}@ error=%{public}@
Failed to create connection for task with actionIdentifier:%{public}@ applicationIdentifier:%{public}@ error=%{public}@
No action taken for request to refresh sleeping trigger; automatic entry not supported
App was installed
App was removed
Will not write cache as keybag is locked
Could not create icon cache directory: %{public}@
Failed to serialize metadata store: %{public}@
Will not read cache as keybag is locked
Will not fetch app info as keybag is locked
Could not copy icon for %{private}@ to %{private}@: %{public}@
App lookup of %{private}@ from store failed: %{public}@
Unable to parse store response, bundle identifier is missing: %{public}@
Unable to parse store response, display name is missing: %{public}@
Got app %{private}@ details from the store: %{private}@
Cleaned up %{private}@
Failed to removed cached icon at %{private}@: %{public}@
Monitoring bundle identifiers: %{public}@
Relevant bundle identifiers: %{public}@
Updated assertions for schedule: settings=%{public}@
Unable to update assertions for schedule: error=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: settings=%{public}@
Backing store was purged
Record for %{public}@ does not contain configuration changes.
Remote device is forcing a write that we agree with. device: %@; sourceFrameworkVersion: %{public}@; currentFrameworkVersion: %{public}@; remoteRecordVersion: %{public}@; localRecordVersion: %{public}@;
Remote device is forcing a write that we disagree with. device: %@; sourceFrameworkVersion: %{public}@; currentFrameworkVersion: %{public}@; remoteRecordVersion: %{public}@; localRecordVersion: %{public}@;
Accepting forced write because the remote framework revision is newer than the current version.
Accepting forced write because the remote framework revision is the same as the current version and won the tie-breaker.
Accepting forced write because it came from this device.
Accepting forced write because the remote framework revision is the same as the current version but lost the tie-breaker.
Rejecting forced write because the remote framework revision is older than the current version.
Fetched data with ID %{public}@ is current; applying update
Remote configuration is from a device that has a different version resolution. Updating resolvedCompatibilityVersion from %{public}@ to %{public}@ and bumping lastModified from %{public}@ to %{public}@ and resyncing.
Fetched data with ID %{public}@ is outdated; ignoring update and resending local data
Remote configuration is from a device that doesn't agree with this resolution. Bumping lastModified from %{public}@ to %{public}@ to overcome remote lastModified of %{public}@ and resyncing.
Fetched data with ID %{public}@ could not be reconstructed into a configuration; deleting local configuration
Fetched data with ID %{public}@ could not be reconstructed into a configuration; ignoring update
Fetched record with ID: %{public}@ from device %@ / %@ (force: %{public}@).
Fetched record with ID: %{public}@ from legacy device.
Record has source info set but the mdate doesn't match. Ignoring source and treating as legacy.
Failed to delete record %{public}@: %{public}@
Encountered conflict while saving configuration: %{public}@
Preparing to save record %{public}@
Server removed record %{public}@
Removing all records because zone was deleted
Fetched %{public}llu record IDs for the sync engine
Preparing to save record for IDS sync engine: %{public}@
Fetched record from IDS sync engine with ID: %{public}@
IDS sync engine removed record %{public}@
Purging data for IDS sync engine
Replacing records with default mode configuration
Error deleting records: %{public}@
Could not read current configuration for monitored contacts: %{public}@
Received updated identifierless contacts: %{private}@
Detected matching contact in configuration: %{public}@
Did not encounter any matching configurations
Received updated contacts: %{private}@
Received deleted contact identifiers: %{private}@
Failed to fetch existing configurations: %{public}@
Failed to remove record %{public}@: %{public}@
Writing updated configuration with identifier: %{public}@
Error writing fetched configurations: %{public}@
Merge diff modified: %{public}@
Merge diff deleted: %{public}@
Error writing record: %{public}@
Purging record IDs: %{public}@
Error purging record IDs: %{public}@
Purging data
Could not read records to extract mode identifiers: %{public}@
Fetched %{public}llu mode identifiers
Fetched %{public}llu record IDs for the IDS sync engine
Notifying delegate of available modes: %{public}@
Unable to find device with ID %@. Devices: %@
Paired device state changed: from=%{public}@, to=%{public}@; waiting to coalesce for %@s
Paired device state returned to previously-paired device. Cancelling delegate callbacks. device=%{public}@
Paired device did not change: current=%{public}@
Informing delegates of coalesced paired device state changed: from=%{public}@, to=%{public}@
Ignoring paired device state; coalesced back to the original device: %{public}@
Pairing ID and data store of current watch was invalid; device=%{public}@, pairingID=%{public}@, pairingDataStore=%{public}@
Device class or sync protocol was invalid: device=%{public}@
Paired watch updated, will check for pairing change
Ignoring paired device on cloud channel. %@
Device class was invalid: device=%{public}@
Device protocol version was invalid: device=%{public}@
No change in cloud devices.
Cloud devices initalized. Devices: %@
Cloud devices added: %@. Removed: %@
No change in cloud devices.
Paired device state updated, will check for pairing change
Nearby devices changed, devices=%{public}@
Devices changed, devices=%{public}@
Unexpected macOS version: %@.%@
com.apple.donotdisturb.DNDSIDSSyncService.incomingMessage
Unable to find IDS device for fromID %@
Received sync data: service=%{public}@, account=%{public}@, identifier=%{public}@, message=%{public}@, deviceIdentifier=%@, context=%{public}@
Unable to resolve the device identifier from the IDS ID
Sync data send has finished: identifier=%{public}@, success=%{BOOL}d, error=%{public}@
Send sync data: identifier=%{public}@; Destinations: %@
Failed to send sync data: identifier=%{public}@, error=%{public}@
Unable to find matching IDS identifier for devices %@
Failed to migrate message
Discarding data because delegate did not allow the message
Missing data, will skip message
Missing record version number, will skip message
Invalid version number, will skip message: versionNumber=%{public}@
Received XPC event error %d
%{public}@: Handling XPC event action %d for %llu
Unexpected XPC event action %d from %llu
Failed to convert XPC dictionary to CF dictionary
Registered XPC event subscriber %llu
Removed XPC event subscriber %llu
Published XPC event for %ld
Failed to publish XPC event for %ld with error: %d
Capturing state from %{public}@; date=%{public}@
Packing sysdiagnose state data from %{public}@...
Sysdiagnose captured from %{public}@
Could not capture sysdiagnose from %{public}@ due to too much data
Could not capture sysdiagnose from %{public}@ due to unable to make Plist: error=%{public}@
Capturing statedump from %{public}@
[%{public}@] Begin secure configuration
[%{public}@] Allowed app: %{private}@; %{private}@
[%{public}@] Denied app: %{private}@
[%{public}@] Allowed web app: %{private}@
[%{public}@] Denied web app: %{private}@
[%{public}@] senderConfiguration: %{private}@
[%{public}@] End secure configuration
Unexpected class in denied application list
Unexpected class in allowed web application list
Ignoring request to coordinate app configurations; device has not unlocked since boot.
Ignoring request to coordinate app configurations; from and to mode are the same.
Handling state update: %{public}@; previous: %{public}@
Running default action due to action deletion in active mode. identifier=%@; bundle=%@; mode=%@
Running action due to action update in active mode. identifier=%@; bundle=%@; mode=%@
Running default actions due to deletion of active mode. mode=%@; apps=%@
Failed to find actions for %{public}@: %{public}@
Application is running; will use for action %{public}@: %{public}@
Found extension for action %{public}@: %{public}@
No extension for action in app; background update unavailable. app=%{public}@; action=%{public}@
Failed to find metadata for action. The app may not be installed. action=%{public}@; bundle=%{public}@; %{public}@
Found default action for %{public}@. action=%{public}@
Failed to load default values for action. action=%{public}@; bundle=%{public}@; %{public}@
Unable to add action execution task; actionIdentifier=%{public}@ bundleIdentifier=%{public}@ modeIdentifier=%{public}@ group=%{public}@
Added action execution task=%{public}@ for group=%{public}@
Retrieved App Context %{public}@ for bundleIdentifier=%{public}@ actionIdentifier=%{public}@ modeIdentifier=%{public}@
Notification filter predicate from App Context did not validate, issues=%{public}@ bundleIdentifier=%{public}@ actionIdentifier=%{public}@ modeIdentifier=%{public}@
Completed action execution(s) for group=%{public}@
Queued task=%{public}@ for bundleIdentifier=%{public}@ queuedTasks=%lu
Immediately executing task=%{public}@
Removed completed task=%{public}@ for bundleIdentifier=%{public}@ queuedTasks=%lu
Completed task=%{public}@ for bundleIdentifier=%{public}@ was not the tracked 'current' task queuedTasks=%lu
Executing task=%{public}@ queued behind task=%{public}@
Task queue for bundleIdentifier=%{public}@ empty following completion of task=%{public}@
Completed task=%{public}@ for bundleIdentifier=%{public}@ was not the tracked queuedTasks=%lu
Notifying PowerLog of Focus filter perform event: source=%ld reason=%ld semanticType=%ld extensionsLaunched=%ld
Failed to determine process state for application bundle; will use extension if available. bundle=%{public}@; %{public}@
Failed to find process state for application bundle; will use extension if available. bundle=%{public}@
Found process state running scheduled for application bundle; will use application if available. bundle=%{public}@
Found process state other than running scheduled for application bundle; will use extension if available. bundle=%{public}@
Found multiple process states for application bundle; will use extension if available. bundle=%{public}@
Handling first launch/unlock: current=%{public}@
Purging metadata store
Forgetting device without initial sync data: %{public}@
Forgetting outdated device: %{public}@
Forgetting sync dates for record: %{public}@
Forgetting metadata for record: %{public}@
Forgetting record: %{public}@
Unexpected result type for appSpecificSettings: %{public}@
Attempt to get mode specific settings before first unlock.
Model does not contain entity with name %{public}@
Error querying settings: %{public}@
Attempt to get app specific settings before first unlock.
Failed to fetch settings: %{public}@
Attempt to set mode specific settings before first unlock.
Failed to fetch existing settings: %{public}@
Fetched %{public}@ settings for set/clear.
Unexpected class for managed object: %{public}@
Failed to commit settings: %{public}@
Committed mode settings for %{public}@ in %{public}@
Attempt to set app specific settings before first unlock.
Fetched %@ settings for set/clear.
Committed settings for %{public}@ in %{public}@
Attempt to remove mode specific settings before first unlock.
Removed %{public}@ settings for mode %{public}@.
Failed to remove settings for mode: %{public}@
Committed settings removal for mode %{public}@
Removing settings for modes not in %{public}@.
Failed to fetch modes to delete: %{public}@
Encountered disallowed class name `%{public}@` in sync payload.
Removing settings for %{public}@; apps=%{public}@
Failed to commit changes for modes not in: %{public}@
Changes did commit.
Attempt to remove app specific settings before first unlock.
Removed %{public}@ settings for app %{public}@.
Failed to remove settings for app: %{public}@
Removed settings for app %{public}@
Unexpected call to -idsSyncEngine:didFetchRecord:. Record: %@
prepareRecordToSave: %@
Unexpected call to -idsSyncEngine:recordWithIDWasDeleted:. Record: %@
Unexpected call to -purgeRecordsForIDSSyncEngine:
recordIDsForIDSSyncEngine
Missing parameters of region trigger: %@
Unexpected object (%@) found in invalidation predicate UUIDs: %@
Updated assertions for mindfulness trigger: mode=%{public}@
No action taken for request to refresh mindfulness trigger; automatic entry not supported
Invalidating active assertion no mode identifer for mindfulness session trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for mindfulness session trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for mindfulness session trigger in response to event; modeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome mindfulness session event monitor; mode=%{public}@
Mindfulness session subscription completed: state=%ld error=%{public}@
Received mindfulness session event: eventType=%{public}@
Updated assertions for mindfulness session event: eventType=%{public}@ sessionType=%{public}@
Failed to get action metadata for task with actionIdentifier:%{public}@ applicationIdentifier:%{public}@ modeIdentifier:%{public}@ error=%{public}@
Successfully fetched updated appContext %@ for action %@
Fetched appContext:%@ for action:%@ is invalid
Failed to fetch appContext for action:%@, error=%@
Failed to create connection for actionIdentifier:%@ applicationIdentifier:%@ modeIdentifier: %@, error=%@
Failed to retrieve action for actionIdentifier:%@ applicationIdentifier:%@ modeIdentifier: %@, error=%@
Unable to find system action for reverse action. action=%@; mode=%@
Failed to set Focus mirroring preference. Key does not exist or is invalid format. Expected %@.
Failed to set Focus mirroring preference. Accessor returned %@. Expected %@.
Set Focus mirroring preference.
Failed to get NPS accessor on paired device.
Initialized sync settings to %@
New sync settings: %@. Old: %@
Unable to updated workout trigger enabled setting: enabled=%{public}@ mode=%{public}@ error=%{public}@
Cannot map %{private}@ from %{public}@ to %{public}@ on this device
Record data is nil in record data %{public}@
Partioned record data is nil in record data %{public}@
Failed to decode record data %{public}@: %{public}@
Failed to decode
partitioned record data %{public}@: %{public}@
%{public}@
Unexpected value in sync dispatch source: %@
Sync engine will be enabled on startup
Sync engine will be disabled on startup because of feature flag
Sync engine will be disabled on startup because user setting is disabled
Sync engine will be disabled on startup because of missing account
Sync engine changing to %{public}s
Performing initial sync for new zone: %@
Adding record IDs to save: %{public}@; to delete: %{public}@
RecordID change was made before sync engine availability.
Adding zones to save: %{public}@; to delete: %{public}@
RecordZoneID change was made before sync engine availability.
Record %{public}@ overrides a previously-stored record in the last-chance store.
Record %{public}@ is from the future; saving what we can and sending to last-chance store
Failed to find data source with zoneID %{public}@ for record %{public}@; sending to last-chance store
Removing record with ID %{public}@ from source %{public}@
Could not find a source for removing record with ID %{public}@
Deleted record: %{public}@
Fetched record: %{public}@
Saved record: %{public}@
Updated metadata
Failed to find data source with zoneID %{public}@ for record %{public}@
Failed to save record %{public}@: %{public}@
Unexpected error encountered when saving record %{public}@: %{public}@
Server record has changed; resolving conflict
Failed to find data source with zoneID %{public}@
Both server and client record IDs are nil for record ID %{public}@
Record is unknown on the server; flushing metadata and resending
Record ID is nil; ignoring unknown item
Zone %{public}@ not found; pushing zone to server
Zone ID is nil; ignoring record
Missing identity for zone %{public}@; deleting and recreating zone
ZoneID is nil; ignoring record
User deleted zone %{public}@; deleting zone
ZoneID is nil; ignoring deleted zone
Unhandled error: %{public}@
Creating record to save: %{public}@
Failed to create record to save: %{public}@
Record %{public}@ was overridden locally; removing record in last-chance store.
Record %{public}@ has changes from the future; saving healed modifications to last-chance store
Record was deleted: %{public}@
Zone was deleted: %{public}@
Zone was purged: %{public}@
Keybag unlocked
Updating account
Ignoring account change because device is unsupported
Ignoring account change because feature is not enabled
Device is locked
Initial account state is %s; encryption is %s
Could not fetch account status: %@
Could not fetch account state: %{public}@
Sync engine will be disabled because account is restricted
Sync engine will be disabled because no account exists
Sync engine will be disabled because the account is unavailable
Sync engine will be disabled because of an error: %@
Could not fetch account info ID: %{public}@
Could not fetch user record ID: %{public}@
Encryption is newly available
Encryption is available
Encryption is newly unavailable
Encryption is not available
Sync enabled state is newly disabled
Sync enabled state is newly enabled
Sync enabled state is unchanged from disabled
Sync enabled state is unchanged from enabled
User record is unchanged from nil
User record was removed
New user record was added
User record ID is unchanged
User record ID has changed
Sync engine resolved state: %s
_allowSyncEngineCreation == NO
Skipping sync engine creation because the device has not unlocked.
Skipping sync engine creation because sync is disabled.
Sync engine will start
Destroying sync engine
Purging sync engine data
Account status is unchanged: %{public}@
Account status has changed to: %{public}@
User record ID has changed to: %{public}@
Purging data from data sources
Purging data from zone %{public}@
Performing initial sync for data sources
Performing initial sync for zone %{public}@
Migrating configurations from old local stores
Could not delete mode store: %@
Could not delete secure mode store: %@
Could not delete old synced global store: %@
Could not replace mode store with old store: %@
Could not replace secure mode store with old store: %@
Could not replace global store with old store: %@
Erasing configurations from old local stores
Could not delete old mode store: %@
Could not delete old secure mode store: %@
Could not delete old global store: %@
Mapping extension bundle %@ to containing bundle %@.
Updated assertions for gaming trigger: mode=%{public}@
No action taken for request to refresh gaming trigger; automatic entry not supported
Invalidating active assertion no mode identifer for game controller trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for game controller trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for game controller trigger in response to event; modeID=%{public}@
Invalidating active assertion for game controller trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for game controller trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome game controller event monitor; mode=%{public}@
Game controller subscription completed: state=%ld error=%{public}@
Received controller event: isControllerConnected=%{BOOL}d number=%lu
Updated assertions for controller event: isControllerConnected=%{BOOL}d number=%lu
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: pid=%d, stateUpdate=%{public}@, connection=%{public}@
Delivering active mode update: pid=%d, activeModeIdentifier=%{public}@, connection=%{public}@
Did receive update result with %lu assertion(s) & %lu invalidation(s), will handle; updateResult=%{public}@
Handling invalidation: %@
Delivering assertion update with invalidation: assertion=%{public}@, invalidation=%{public}@, connection=%{public}@
Handling assertion: %@
Delivering assertion update: assertion=%{public}@, connection=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Delivering bypass update: settings=%{public}@, connection=%{public}@
Did receive updated pair sync state, will handle; state=%{public}@
Delivering pair sync state: state=%{public}@, connection=%{public}@
Did receive updated prevent auto reply settings, will handle; settings=%{public}@
Delivering prevent auto reply update: settings=%{public}@, connection=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
Did receive updated available modes, will handle; modes=%{public}@
Delivering modes update: pid=%d, modes=%{public}@, connection=%{public}@
Delivering available modes update: pid=%d, modes=%{public}@, connection=%{public}@
Mode did receive updated app configuration context, will handle; mode=%{public}@
Signaling mode app configuration context update: pid=%d, mode=%{public}@, connection=%{public}@
Did receive updated 'Me Device' state, will handle; meDeviceStatus=%{public}@, meDeviceName=%{public}@
Delivering 'Me Device' state update: pid=%d, meDeviceStatus=%{public}@, meDeviceName=%{public}@, connection=%{public}@
XPC connection without any valid entitlements tried to connect, will reject: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion invalidation, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to request all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for assertion updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state as a part of registering for updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set screen sharing / mirroring settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set global configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get auto reply prevention state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get global availability state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for global configuration updates; will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get cloud sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change cloud sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get pair sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change pair sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get supported account features, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to fetch state dump, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to notify of focus status sharing change, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to remove mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configurations, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get all modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get available modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to sync modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get silenced modes for a contact, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get availability state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to publish statuskit availability, will invalidate: connection=%{public}@
Activating mode %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to activate a mode, will invalidate: connection=%{public}@, modeIdentifier=%{public}@
Invalidating mode with UUID %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to invalidate a mode, will invalidate: connection=%{public}@, assertionUUID=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for available mode identifiers; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to fetch app info; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to query 'Me Device' state; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for 'Me Device' state updates; will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set app predicate, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get app predicate, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set target content identifier prefix, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get target content identifier prefixes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set app action, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to clear app action, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get app actions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to clear system action, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get system actions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set system action, will invalidate: connection=%{public}@
Registering new connection details for connection: connection=%{public}@
Updating connection details for connection: connection=%{public}@, updatedConnectionDetails=%{public}@
Connection details unregistered: connection=%{public}@, clientDetails=%{public}@
Invalidating assertion due to client disconnect: connection=%{public}@, UUID=%{public}@
Could not read configuration: %{public}@
Fetched record with ID: %@
Fetched data with ID %@ is current; applying update
Fetched data with ID %@ is outdated; ignoring update and resending local data
Fetched data with ID %@ could not be reconstructed into a configuration; ignoring update
Failed to delete record %@: %@
Resolved conflict records with ID %@; using remote data
Resolved conflict between records with ID %@; using local data
Could not resolve conflict as remote configuration is nil; keeping local data with ID %@
Preparing to save record %@
Global configuration was deleted
Preparing to save record for IDS sync engine: %@
Fetched record from IDS sync engine with ID: %@
Replacing record with default global configuration
Updating global configuration
Ignoring incoming configuration with date %@ as it is older than existing configuration with date %@
Record data is nil in record data %@
Failed to decode record data %@: %@
Failed to fetch existing configuration: %@
Record %@ is not valid JSON
Could not read configuration: %@
Notifying delegate of prevent-auto-reply change: %{public}s
Error writing fetched configurations: %@
Will sanitize assertion date: date=%{public}@ assertion=%{public}@
Will sanitize invalidation date: date=%{public}@ invalidation=%{public}@
Will sanitize invalidation request date: date=%{public}@ invalidationRequest=%{public}@
State changed
First unlock occurred
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%{public}@, UUIDs=%{public}@
Notifying PowerLog of Focus interruption suppression event: bundleIdentifier=%{public}@ suppression=%ld
No mode configuration found for mode identifier: modeIdentifier=%{public}@
Overriding invalidation client (%{public}@) with assertion client (%{public}@)
No behavior settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
No default paired device
Paired devices: %@
Updated mode modifification date to %@ on assertion %@
%@ configuration doesn't have a useful modification date: %@
Unable to find mode configuration for mode %@
Performed update for sync manager; manager=%{public}@
Error when performing update for sync manager; manager=%{public}@, error=%{public}@
Error while requesting settings sync for Focus sync. %@
Completed settings sync for Focus sync.
Not requesting cloud sync because the Focus sync does not target any cloud devices.
Sync manager gets bypass settings; manager=%{public}@, settings=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Error replacing bypass settings in default mode: %{public}@
Error fetching default mode: %{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Available modes updated; manager=%{public}@, modes=%{public}@
Settings for this mode changed. Forcing a sync to all devices.
Skipping forced update for settings change because they were not local changes.
Paired devices updated; monitor=%{public}@, previousDevice=%{public}@, device=%{public}@
Cloud devices changed; monitor=%{public}@, previousDevices=%{public}@, devices=%{public}@
Unable to reset incompatible mode configuration: error=%{public}@
Unable to fetch incompatible mode configurations for reset: error=%{public}@
Fetched changes
Error fetching changes: %@
Forcing cloud sync
Sent changes
Error sending changes: %@
%@ action for '%@' in active mode %@
No enabled action for %@ in active mode %@
Device regained internet connectivity. Queueing a current activity sync.
Device lost internet connectivity.
State was updated: previousState=%{public}@
State was updated: currentState=%{public}@
State was updated: reason=%{public}@ source=%{public}@
Notifying PowerLog of Focus status change event: availability=%ld source=%ld reason=%ld semanticType=%ld extensionsLaunched=%ld
Unable to set mode configuration while migrating bypass settings: error=%{public}@
Migrated bypass settings: settings=%{public}@
Unable to save eraose old bypass settings: settings=%{public}@ error=%{public}@
Unable to fetch mode configurations to migrate bypass settings: error=%{public}@
Unable to fetch global configuration to migrate bypass settings: error=%{public}@
Delaying default mode migration until device unlocks
Unable to save migrated default mode: mode=%{public}@ error=%{public}@
Checking configuration from %@ for %@
Unable to find configuration for %@. It may not yet exist on this device.
Configuration for %@ is out of date. %@ < %@
Requesting configuration sync for stale mode %@.
Failed to sync updated configurations for synced %@ assertion. Error: %@
Updated configurations succesfully synced for %@.
Mode configuration is up to date.
Mode assertion update result:
 assertions=%{public}@
Mode assertion update result:
 invalidations=%{public}@
Ignored update as it changed nothing
Current DND sync status: local device=%{public}@, cloud devices=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Updated assertions for smart triggers: supportedModes=%{public}@
Adding biome inferred mode event monitor for %{public}@
InferredMode subscription completed: state=%ld error=%{public}@
Received inferred mode event: modeIdentifier=%{public}@ starting=%{public}@
Updated assertions for inferred mode event: event=%{public}@
Ignored automatic entry for unsupported inferred mode event: event=%{public}@
Setting auto reply to %s
Error reading auto reply state: %@
Setting global availability preference to %s
Error reading global availability state: %@
Saved configuration; configuration=%{public}@
Failed to save configuration, but error can be ignored; error=%{public}@
Failed to save configuration, will request a radar; configuration=%{public}@, error=%{public}@
Failed to save configuration but device is under first lock; configuration=%{public}@, error=%{public}@
Received SIGTERM
Starting up...
Record
DNDSBackingStoreRecord
NSObject
DNDSIDSSyncEngine
DNDSSyncServiceDelegate
DNDSKeybagStateObserver
DNDSSysdiagnoseDataProvider
DNDSIDSSyncEngineSynchronizing
Resolution
DNDSModernAssertionSourceResolution
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSMutableBehaviorSettingsRecord
CoreDataProperties
DNDSPartitionedBackingStoreRecord
DNDSJSONBackingStore
DNDSBackingStore
DNDSModeAssertionInvalidationRequest
Schedule
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSLifetimeMonitor
DNDSAppForegroundTriggerManager
DNDSBiomeTriggerManager
DNDSBiomeTriggerManagerDataSource
DNDSAppForegroundTriggerConfiguration
DNDSDateHelper
DNDContactHandle
DNDSEventBehaviorEvolver
DNDSEventBehaviorResolver
Testing
DNDSMemoryCachedBackingStore
DNDSBackingStoreDelegate
DNDSCachedBackingStore
DNDSRemoteAvailabilityServiceProvider
BSServiceConnectionListenerDelegate
DNDRemoteAvailabilityServiceServerProtocol
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSContactMonitorChangeCollector
CNChangeHistoryEventVisitor
DNDSContactMonitor
DNDSContactMonitoring
DNDSCalendarEventLifetimeMonitor
SyncMessage
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
DNDSUserAvailabilityCoordinator
DNDSContentHandleExceptionalModesBox
DNDSUserAvailabilityPublishResult
DNDSAvailabilityInvitationRequest
_DNDSUserAvailabilityTCCProvider
DNDSUserAvailabilityTCCProviding
DNDSContactProvider
DNDSContactProviding
DNDSAppSpecificSettingsTypeAppConfigurationAction
DNDSAppSpecificSettingsType
Defaults
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSAggregateLocationLifetimeMonitor
DNDSMeDeviceServiceListener
DNDSExplicitRegionLocationLifetimeMonitor
DNDSLocationTriggerConfiguration
DNDSExplicitRegionStore
DNDSMutableExplicitRegionStore
DNDSUntilExitLocationLifetimeMonitor
DNDSUntilExitRegionStore
DNDSMutableUntilExitRegionStore
DNDSIDSServerBagValues
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
DNDSMeDeviceStore
DNDSMutableMeDeviceStore
DNDSPlaceholderModesRecord
BackingRecord
BackingStores
BackingRecordUpgrade
DNDSAppSpecificSettingsTypeAppConfigurationTargetContentIdentifierPrefix
DNDSModeAssertionManagerUpdateContext
DNDSModeAssertionUpdateContext
DNDSModeAssertionQuerying
SysdiagnoseRecord
DNDSModeDetails
DNDSModeConfigurationRecord
DNDSMutableModeConfigurationRecord
DNDSSyncEngineMetadataStore
DNDSSyncEngineMetadataStoring
DNDApplicationMO
DNDSMetricsManager
DNDSApplicationConfigurationRecord
DNDSMutableApplicationConfigurationRecord
DNDSScheduleLifetimeMonitor
DNDSModeRepository
DNDSCoreDataBackingStore
DNDSReachability
DNDSModeConfigurationManager
DNDSModeConfigurationsStoreDelegate
DNDSModeConfigurationProviding
PeaceSyncMessage
Contacts
DNDSClientConnectionDetails
DNDSMutableClientConnectionDetails
DNDSStateProvider
DNDSStateProviding
DNDSPlaceholderModeManager
LegacySupport
DNDSFirstUnlockPurgedBackingStore
DNDSCachedBackingStoreDelegate
DNDSGlobalConfiguration
DNDSMutableGlobalConfiguration
DNDPerModeSettingsMO
DNDSSystemFocusConfigurationCoordinator
WFShojiSystemActionsRunnerClientDelegate
WFWorkflowRunnerClientDelegate
DNDSAppConfigurationManagerDelegate
CKRecord
DNDSScheduleSettings
DNDSMeDeviceService
DNDSModeConfigurationTriggersRecord
DNDSMutableModeConfigurationTriggersRecord
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
DNDSIDSRecord
DNDSModeAssertionUpdateResult
Batch
DNDSystemActionMO
DNDSModeAssertionInvalidationPredicate
DNDSAnyModeAssertionInvalidationPredicate
DNDSModeAssertionDateInvalidationPredicate
DNDSModeAssertionClientIdentifierInvalidationPredicate
DNDSModeAssertionUUIDInvalidationPredicate
DNDSWorkoutTriggerManager
DNDSRemoteAppConfigurationServiceProvider
DNDRemoteAppConfigurationServiceServerProtocol
DNDSModeConfigurationsRecordDiff
DNDSSyncEngineLastChanceDataStore
DNDSSyncEngineLastChanceDataStoring
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSModeAssertionManager
DNDSModeAssertionUpdating
DNDSWorkloop
DNDSMetricsRecord
DNDSMutableMetricsRecord
DNDSDrivingTriggerManager
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSConfigurationRecord
DNDSMutableConfigurationRecord
DNDSUserAvailabilityIntentLauncher
DNDAppConfigurationPredicateMO
DNDSBackingStoreDictionaryContext
DNDSModeAssertionStore
DNDSMutableModeAssertionStore
DNDSModernAssertionSync
DNDSModernAssertionSyncManager
AssertionSyncManager
_DNDSPendingMessageRecipients
_DNDSSyncMessageGroup
DNDSModernAssertionSyncMetadataStore
DNDSModeAssertionStoreRecord
Dictionary
DNDSModeAssertionStoreRecordDictionaryEncoding
DNDFocusModeMO
Sanitization
DNDSBiomeDonationManager
DNDAppConfigurationActionMO
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSAppSpecificSettingsTypeSystemAction
DNDSHeartbeatMetricsRecord
DNDSHeartbeatMetricsProtocol
DNDSMutableHeartbeatMetricsRecord
DNDSMutableHeartbeatMetricsProtocol
DNDSDailyHeartbeatMetricsRecord
DNDSMutableDailyHeartbeatMetricsRecord
DNDSWeeklyHeartbeatMetricsRecord
DNDSMutableWeeklyHeartbeatMetricsRecord
DNDSMonthlyHeartbeatMetricsRecord
DNDSMutableMonthlyHeartbeatMetricsRecord
DNDSAuxiliaryStateMonitor
DNDModeAssertionLifetimeTypeHelper
DNDModeAssertionScheduleLifetimeBehaviorHelper
DNDSAppFocusConfigurationTask
LNActionExecutorDelegate
DNDSSleepingTriggerManager
DNDSAppInfoCache
LSApplicationWorkspaceObserverProtocol
DNDSScheduleManager
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSModeConfigurationsStore
DNDSSyncEngineDataSource
DNDSIDSSyncEngineDataSource
DNDSModeConfigurationsStoring
DNDSContactMonitorListener
DNDSClientDetailsProvider
DNDServer
DNDSPairedDeviceStateMonitor
IDSServiceDelegate
BackingStore
DNDSAppSpecificSettingsTypeAppConfigurationPredicate
DNDSDevice
DNDSModeRecord
DNDSMutableModeRecord
DNDSConfigurationsRecord
DNDSMutableConfigurationsRecord
DNDSIDSSyncService
DNDSSyncService
DNDSXPCEventPublisher
DNDPerAppSettingsMO
DNDSConfigurationSecureRecord
DNDSMutableConfigurationSecureRecord
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSSyncSettings
DNDSMutableSyncSettings
DNDSAppFocusConfigurationCoordinator
DNDSStateProviderSystemSnapshot
DNDSMutableStateProviderSystemSnapshot
DNDSIDSSyncEngineMetadataStore
DNDSIDSSyncEngineMetadataStoring
DNDSAppSpecificSettingsManager
DNDSModeDeletionDetails
DNDModeAssertionReasonHelper
DNDModeAssertionInvalidationReasonHelper
DNDModeAssertionInvalidationReasonOverrideHelper
DNDSModeAssertionInvalidationPredicateTypeHelper
DNDSModeAssertionRecord
DNDSModeAssertionDetailsRecord
DNDSModeAssertionLifetimeRecord
DNDSModeAssertionSourceRecord
DNDSModeAssertionInvalidationRecord
DNDSModeAssertionInvalidationDetailsRecord
DNDSModeAssertionInvalidationRequestRecord
DNDSModeAssertionInvalidationPredicateRecord
LifetimePhase
DNDSMindfulnessTriggerManager
DNDSClientDetails
DNDSAppConfigurationManager
DNDSSyncSettingsProvider
DNDSMutableBackingStoreDictionaryContext
DNDSAppForegroundTriggerManagerDataSource
DNDSDrivingTriggerManagerDataSource
DNDSGamingTriggerManagerDataSource
DNDSMindfulnessTriggerManagerDataSource
DNDSSleepingTriggerManagerDataSource
DNDSSmartTriggerManagerDataSource
DNDSWorkoutTriggerManagerDataSource
Predicates
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSApplicationIdentifierMapper
DNDSApplicationIdentifierMapping
DNDSModeResolutionService
DoNotDisturbServer
DNDSConfigurationsSecureRecord
DNDSMutableConfigurationsSecureRecord
DNDSXPCEventInterface
DNDSXPCEventStream
DNDSSenderConfigurationRecord
DNDSMutableSenderConfigurationRecord
DNDSIDSRecordID
DNDSContactRecord
DNDSMutableContactRecord
DNDSModeConfigurationsRecord
DNDSMutableModeConfigurationsRecord
DNDSSyncEngine
CKSyncEngineDataSource
DNDSIDSRecordMetadata
DNDSMutableIDSRecordMetadata
DNDSXPCTimer
DNDSGamingTriggerManager
DNDAppConfigurationTargetContentIdentifierPrefixMO
DNDSRemoteServiceProvider
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceServerModeConfigurationProtocol
DNDRemoteServiceServerModeSelectionProtocol
DNDRemoteServiceServerGlobalConfigurationProtocol
DNDRemoteServiceServerAppInfoProtocol
DNDRemoteServiceServerMeDeviceStateProtocol
DNDRemoteServiceServerAuxiliaryStateProtocol
DNDRemoteServiceAppConfigurationProtocol
DNDRemoteMonitorServerProtocol
DNDRemoteMonitorServerModeAssertionProtocol
DNDRemoteMonitorServerStateProtocol
DNDRemoteMonitorServerSettingsProtocol
DNDRemoteMonitorServerModeSelectionProtocol
DNDRemoteMonitorServerGlobalConfigurationProtocol
DNDRemoteMonitorServerMeDeviceStateProtocol
Entitlements
DNDSGlobalConfigurationStore
DNDSGlobalConfigurationStoring
DateOperations
DNDSKeybag
DNDSKeybagStateProviding
DNDSGlobalConfigurationManagerDelegate
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSLocationLifetimeMonitorDataSource
DNDSScheduleLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSRemoteServiceProviderModeConfigurationsDelegate
DNDSRemoteServiceProviderGlobalConfigurationDelegate
DNDSRemoteServiceProviderAppInfoDelegate
DNDSRemoteServiceProviderMeDeviceStateDelegate
DNDSRemoteServiceProviderAuxiliaryStateDelegate
DNDSRemoteServiceProviderAppConfigurationDelegate
DNDSRemoteAvailabilityServiceProviderDelegate
DNDSRemoteAppConfigurationServiceProviderDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
DNDSModeConfigurationManagerDelegate
DNDSReachabilityDelegate
DNDSAppFocusConfigurationCoordinatorDelegate
DNDSSystemFocusConfigurationCoordinatorDelegate
DNDSSmartTriggerManager
DNDSGlobalConfigurationManager
DNDSGlobalConfigurationStoreDelegate
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
JSONObjectWithData:options:error:
T@"DNDSModeRecord",R,C,N,V_mode
T@"<DNDSAggregateLocationLifetimeMonitor>",W,N,V_aggregateMonitor
T@"NSArray",R,C,N,V_activeUUIDs
T@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
T@"NSArray",R,C,N,V_modifiedIDs
T@"<DNDSApplicationIdentifierMapping>",R,N,V_applicationIdentifierMapper
T@"NSDate",R,C,N,V_creationDate
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"NSHashTable",R,N,V_delegates
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
T@"NSSet",C,D,N
T@"<DNDSBackingStoreDelegate>",W,N,V_delegate
T@"NSSet",R,C,N,V_deniedThreads
T@"<DNDSCachedBackingStoreDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_identifier
T@"<DNDSContactProviding>",R,N,V_contactProvider
TB,N,V_lastInformedReachability
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
TB,R,N,GisPersistentAssertionClient,V_persistentAssertionClient
T@"<DNDSGlobalConfigurationManagerDelegate>",W,N,V_delegate
TQ,R,N,V_reason
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N,V_delegate
_action
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
_addConnection:
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
_allModeSpecificSettingsOfType:
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N,V_dataSource
_bypassSettings
T@"<DNDSModeConfigurationManagerDelegate>",W,N,V_delegate
_contactMonitor
T@"<DNDSModeConfigurationsStoreDelegate>",W,N,V_delegate
_didFireMetadataExpirationTimer
T@"<DNDSRemoteAppConfigurationServiceProviderDelegate>",W,N,V_delegate
_emailAddresses
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
_executeAction:
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
_featureEnabled
T@"<DNDSSettingsSyncManagerDataSource>",W,N
_groupIdentifierForStateUpdate:
T@"<DNDSSettingsSyncManagerDelegate>",W,N
_initWithStore:
T@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_lastUpdateDate
T@"<DNDSSyncServiceDelegate>",W,N
_lock_purgeData
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
_meDeviceStatus
T@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_metricsManager
T@"AKAvailabilityInvitation",R,C,V_invitation
_modeRepository
T@"CLLocationManager",R,N
_occurrenceDate
T@"CLRegion",C,D,N
_queue_locationMonitorClientIdentifierForModeIdentifier:region:
T@"DNDAccountFeatureSupport",R,C,N
_queue_stopMonitoringForRegion:
T@"DNDBypassSettings",C,D,N
_radius
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
_reasonOverride
T@"DNDFocusModeMO",&,D,N
_refreshForNanoPreferenceChange
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
_repeatInterval
T@"DNDSBehaviorSettingsRecord",C,D,N
_source
T@"DNDSBypassSettingsRecord",C,D,N
allowed
T@"DNDSConfigurationRecord",R,C,N,V_configuration
appConfigurationManager:didClearSystemActionsInModeIdentifiers:
T@"DNDSConfigurationsRecord",C,D,N
applicationsDidFailToUninstall:
T@"DNDSCoreDataBackingStore",R,N,V_store
broadcastEvent:
T@"DNDSIDSRecordID",R,C,N
bundleForClass:
T@"DNDSModeAssertionDetailsRecord",&,N,V_details
contact
T@"DNDSModeAssertionInvalidationPredicate",R,C,N,V_predicate
containsObject:
T@"DNDSModeAssertionLifetimeRecord",&,N,V_lifetime
countForObject:
T@"DNDSModeAssertionSourceRecord",&,N,V_source
currentCalendar
T@"DNDSModeAssertionUpdateResult",R,C,N,V_updateResult
dealloc
T@"DNDSModeConfigurationsRecord",R,C,N,V_original
deliverUpdatedBehaviorSettings:
T@"DNDSMutableModeAssertionStore",R,C,N,V_store
deniedWebApplicationIdentifiers
T@"DNDSPairedDevice",C,V_previousPairedDevice
devices
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
dnds_hasModeConfigurationUpdatesEntitlementForClientIdentifier:
T@"DNDSSenderConfigurationRecord",R,C,N,V_senderConfiguration
enabled
T@"DNDSSyncSettings",C,V_syncSettings
endDate
T@"DNDState",R,C
enumerateBatchesOfSize:handler:
T@"NSArray",&,D,N
executor:needsValueWithRequest:
T@"NSArray",&,N,V_assertions
getConfigurationReturningError:
T@"NSArray",&,N,V_invalidationRequests
hasEntitlement:
T@"NSArray",R,C,N
initWithDomain:
T@"NSArray",R,C,N,V_activeAssertionUUIDs
initWithIntent:
T@"NSArray",R,C,N,V_allowed
initWithRegion:
T@"NSArray",R,C,N,V_clientIdentifiers
initWithString:
T@"NSArray",R,C,N,V_effectiveIntervals
initWithZoneID:
T@"NSArray",R,C,N,V_invalidationRequests
isEqualToArray:
T@"NSArray",R,C,N,V_placeholderModes
isLocallyPaired
T@"NSArray",R,C,N,V_silenced
isStart
T@"NSArray",R,C,N,V_updatedContacts
isUserInitiated
T@"NSCalendar",&,N,V_calendar
layoutIsLocked:
T@"NSData",C,N
locationManager:didEnterRegion:
T@"NSDate",C,D,N
lowercaseString
T@"NSDate",R,C,N
meDeviceChanged
T@"NSDate",R,C,N,V_date
onlyDuringEvent
T@"NSDate",R,C,N,V_lastMonthlyHeartbeat
outcome
T@"NSDate",R,C,N,V_lastUpdateDate
perform
T@"NSDate",R,C,N,V_requestDate
predicateFormat
T@"NSDateComponents",R,C,N,V_startComponents
rawResolvedCompatibilityVersion
T@"NSDictionary",C,D,N
recordZonesToSaveForSyncEngine:
T@"NSDictionary",R,C,N,V_activeDateIntervalByAssertionUUID
refresh
T@"NSDictionary",R,C,N,V_metricsByDay
regions
T@"NSDictionary",R,C,N,V_metricsByWeek
release
T@"NSDictionary",R,N
remoteServiceProvider:getAppActionsForModeIdentifier:withError:
T@"NSMutableDictionary",R,C,N,V_lastSentStoreDate
removeDelegate:
T@"NSNumber",&,N,V_compatibilityVersion
removeObserver:
T@"NSNumber",&,N,V_endDate
requestLocation
T@"NSNumber",&,N,V_latitude
scheduleSettingsForSyncManager:
T@"NSNumber",&,N,V_modeConfigurationModifiedDate
T@"NSNumber",&,N,V_onlyDuringEvent
setApplication:
T@"NSNumber",&,N,V_requestDate
setBool:forKey:
T@"NSNumber",&,N,V_userVisibleEndDate
setDay:
T@"NSNumber",C,N
setDisplayName:
T@"NSNumber",R,C,N,V_applicationConfigurationType
setInterruptionBehaviorSetting:
T@"NSNumber",R,C,N,V_compatibilityVersion
setModeConfiguration:withError:
T@"NSNumber",R,C,N,V_hasActiveLifetimes
setRequestDate:
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
setSystemAction:modeIdentifier:
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
setWithObjects:
T@"NSNumber",R,C,N,V_minimumBreakthroughUrgency
stringFromDate:
T@"NSNumber",R,C,N,V_numberOfSessions
suspend
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
syncEngine:prepareRecordToSave:
T@"NSNumber",R,C,N,V_senderConfigurationType
syncMessageKeys
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
underlyingError
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
updateDevices:force:shouldFuzz:
T@"NSNumber",R,C,N,V_timePeriodWeekdays
updated
T@"NSObject<OS_dispatch_queue>",R,N
urgency
T@"NSObject<OS_dispatch_source>",R,N,V_debounceTimer
weekday
.cxx_destruct
T@"DNDSIDSRecordMetadata",R,C,N
T#,R
T@"NSArray",&,N,V_invalidations
T@"<DNDSAppFocusConfigurationCoordinatorDelegate>",W,N,V_delegate
T@"NSArray",R,C,N,V_identifiers
T@"<DNDSApplicationIdentifierMapping>",&,D,N
T@"NSArray",R,N
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"NSDate",R,C,N,V_lastModified
T@"<DNDSAssertionSyncManagerDelegate>",W,N
T@"NSSet",&,D,N
T@"<DNDSBackingStoreDelegate>",W,N
T@"NSSet",R,C,N
T@"<DNDSCachedBackingStoreDelegate>",W,N
T@"NSString",&,N,V_lifetimeType
T@"<DNDSContactProviding>",&,D,N
T@"NSString",R,C,N,V_middleName
T@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
TB,R,N,GisIOS14SyncSuppressedClient,V_iOS14SyncSuppressedClient
T@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
TB,R,N,V_wantsActiveModeUpdates
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N
T@"<DNDSLifetimeMonitorDataSource>",W,N
_active
T@"<DNDSLifetimeMonitorDelegate>",W,N
_addTask:toGroupWithIdentifier:
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N
_allowedThreads
T@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_configurations
T@"<DNDSModeConfigurationsStoreDelegate>",W,N
_deniedContacts
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
_dimsLockScreen
T@"<DNDSRemoteAvailabilityServiceProviderDelegate>",W,N,V_delegate
_encodedSystemFieldsFromRecord:
T@"<DNDSScheduleLifetimeMonitorDataSource>",W,D,N
_executeOrQueueTask:completion:
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
_immediateBypassEventSourceType
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
_keybag
T@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_listen
T@"<DNDSSyncServiceDelegate>",W,N,V_delegate
_lock_updatePairSyncPreferences
T@"<DNDSSystemFocusConfigurationCoordinatorDelegate>",W,N,V_delegate
_metricsByMonth
T@"AKAvailability",R,C,V_availability
_modeIdentifier
T@"CKRecordZone",R,C,N,V_zone
_notifyDelegateOfAvailableModes
T@"CLLocationManager",R,N,V_locationManager
_parseAppStoreResponseForBundleIdentifiers:response:data:error:
T@"CLRegion",R,C,N,V_currentRegion
_queue_resolveBehaviorForEventDetails:clientDetails:date:error:
T@"DNDApplicationMO",&,D,N
_queue_validate
T@"DNDBypassSettings",R,C,N,V_bypassSettings
_reason
T@"DNDContactHandle",R,C,N,V_contactHandle
_recordIDsInModeConfigurations:
T@"DNDMeDeviceState",R,C,N
_removeSystemFieldsForRecordID:
T@"DNDModeAssertionSource",R,C,N,V_source
_screenMirrored
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
allKeys
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
allowedContacts
T@"DNDSConfigurationSecureRecord",R,C,N,V_secureConfiguration
appSpecificSettingsEncodedClass
T@"DNDSConfigurationsRecord",R,C,N,V_configurations
arrayByExcludingObjectsInArray:
T@"DNDSIDSRecordID",C,D,N
bs_map:
T@"DNDSIDSRecordID",R,C,N,V_recordID
configurationForModeIdentifier:
T@"DNDSModeAssertionInvalidationDetailsRecord",&,N,V_details
contactProvider
T@"DNDSModeAssertionInvalidationPredicateRecord",&,N,V_predicate
containsString:
T@"DNDSModeAssertionRecord",&,N,V_assertion
created
T@"DNDSModeAssertionStore",R,C,N,V_store
T@"DNDSModeConfigurationTriggersRecord",R,C,N,V_triggers
deleted
T@"DNDSModeConfigurationsRecord",R,C,N,V_updated
deliverUpdatedScheduleSettings:
T@"DNDSPairedDevice",C,V_pairedDevice
details
T@"DNDSScheduleSettingsRecord",C,D,N
dnds_hasModeConfigurationRequestEntitlementForClientIdentifier:
T@"DNDSSenderConfigurationRecord",C,D,N
dnds_metricsBackingStoreFileURL
T@"DNDSStateProviderSystemSnapshot",C,V_lastSystemSnapshot
encryptedValues
T@"DNDState",C,V_lastCalculatedState
endTime
T@"DNDState",R,C,D,N
execute
T@"NSArray",&,N,V_UUIDs
findClientDetailsForIdentifier:
T@"NSArray",&,N,V_clientIdentifiers
handles
T@"NSArray",C,D,N
hasLocalChanges
T@"NSArray",R,C,N,V_UUIDs
initWithIdentifier:targetQueue:
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
initWithKeybag:
T@"NSArray",R,C,N,V_assertions
initWithStream:
T@"NSArray",R,C,N,V_deletedContactIdentifiers
initWithUnderlyingBackingStore:
T@"NSArray",R,C,N,V_expiredUUIDs
invalidateAssertionsForRequest:
T@"NSArray",R,C,N,V_invalidations
isICloudEnabled
T@"NSArray",R,C,N,V_removedIDs
isProxy
T@"NSArray",R,C,N,V_triggers
isSyncAvailable
T@"NSArray",R,C,V_handles
keybagDidUnlockForTheFirstTime:
T@"NSData",&,D,N
locationManager
T@"NSData",C,N,V_contactHistoryToken
log:withPrefix:
T@"NSDate",C,N,V_date
manuallyEnabled
T@"NSDate",R,C,N,V_created
numberWithBool:
T@"NSDate",R,C,N,V_lastDailyHeartbeat
osBuild
T@"NSDate",R,C,N,V_lastUpdate
pairSyncEnabled
T@"NSDate",R,C,N,V_lastWeeklyHeartbeat
T@"NSDateComponents",R,C,N,V_endComponents
protocolVersion
T@"NSDictionary",&,D,N
recordForInvalidationPredicate:
T@"NSDictionary",R,C,N
records
T@"NSDictionary",R,C,N,V_allowedApplications
refreshMonitorFromQueueForDate:
T@"NSDictionary",R,C,N,V_metricsByMonth
registerForSettingsUpdatesWithRequestDetails:completionHandler:
T@"NSDictionary",R,C,N,V_modeConfigurations
remoteServiceProvider:activeAssertionWithClientIdentifer:error:
T@"NSMutableDictionary",R,C,N,V_lastReceivedStoreDate
remoteServiceProvider:getAppInfoForBundleIdentifiers:withError:
T@"NSMutableDictionary",R,C,N,V_pendingLastSentStoreDate
removeListener:
T@"NSNumber",&,N,V_date
removeZoneName:
T@"NSNumber",&,N,V_invalidationDate
requestWithURL:
T@"NSNumber",&,N,V_longitude
serviceSpaceDidBecomeAvailable:
T@"NSNumber",&,N,V_occurrenceDate
setAppActionsForModeIdentifier:
T@"NSNumber",&,N,V_radius
setApplicationIdentifierMapper:
T@"NSNumber",&,N,V_startDate
setDateCreated:
T@"NSNumber",C,D,N
setDestination:
T@"NSNumber",R,C,N
setInitialized:
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
setMergePolicy:
T@"NSNumber",R,C,N,V_dayOfWeek
setPersistentStoreDescriptions:
T@"NSNumber",R,C,N,V_hideApplicationBadges
setRequiresTCC:
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
setUserVisible:
T@"NSNumber",R,C,N,V_meDeviceStatus
startComponents
T@"NSNumber",R,C,N,V_numberOfManualSessions
suppressionType
T@"NSNumber",R,C,N,V_regionEntered
symbolImageName
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
syncEngine:zoneWithIDWasPurged:
T@"NSNumber",R,C,N,V_suppressionType
syncServiceType
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
updateConfigurationModificationDatesWithDataSource:syncManager:
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
updateMetadata:
T@"NSObject<NSFastEnumeration>",&,N,V_underlyingHealingSource
updatedContacts
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
wantsGlobalConfigurationUpdates
T@"NSObject<OS_nw_path_monitor>",R,N,V_pathMonitor
T@"NSSet",C,N,V_applicationIdentifiers
T@"NSSet",C,N,V_modeSpecificSettings
T@"NSSet",C,V_cloudDevices
T@"NSSet",R,C,N,V_activeAssertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_allowedContactGroups
T@"NSSet",R,C,N,V_allowedContactTypes
T@"NSSet",R,C,N,V_allowedContacts
T@"NSSet",R,C,N,V_allowedThreads
T@"NSSet",R,C,N,V_allowedWebApplications
T@"NSSet",R,C,N,V_assertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_deniedApplications
T@"NSSet",R,C,N,V_deniedContactGroups
T@"NSSet",R,C,N,V_deniedContactTypes
T@"NSSet",R,C,N,V_deniedContacts
T@"NSSet",R,C,N,V_deniedWebApplications
T@"NSSet",R,C,N,V_deviceIdentifiers
T@"NSSet",R,C,N,V_emailAddresses
T@"NSSet",R,C,N,V_enteredRegionIdentifiersPendingExit
T@"NSSet",R,C,N,V_phoneNumbers
T@"NSString",&,N,V_UUID
T@"NSString",&,N,V_behavior
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_deviceIdentifier
T@"NSString",&,N,V_eventUniqueID
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_modeIdentifier
T@"NSString",&,N,V_predicateType
T@"NSString",&,N,V_reason
T@"NSString",&,N,V_reasonOverride
T@"NSString",&,N,V_regionIdentifier
T@"NSString",&,N,V_scheduleIdentifier
T@"NSString",C,D,N
T@"NSString",C,N
T@"NSString",C,N,V_deviceName
T@"NSString",C,N,V_osBuild
T@"NSString",C,N,V_serviceIdentifier
T@"NSString",R
T@"NSString",R,C
T@"NSString",R,C,D,N
T@"NSString",R,C,N
T@"NSString",R,C,N,V_calendarIdentifier
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_contactIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
T@"NSString",R,C,N,V_firstName
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSString",R,C,N,V_lastModifiedByDeviceID
T@"NSString",R,C,N,V_lastName
T@"NSString",R,C,N,V_meDeviceName
T@"NSString",R,C,N,V_modeIdentifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_nickName
T@"NSString",R,C,N,V_organizationName
T@"NSString",R,C,N,V_pairingDataStore
T@"NSString",R,C,N,V_symbolImageName
T@"NSString",R,C,N,V_tintColorName
T@"NSString",R,C,N,V_zone
T@"NSString",R,C,V_identifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSUUID",C,D,N
T@"NSUUID",R,C,N,V_UUID
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,C,N,V_interruptionInvalidationAssertionUUID
T@"NSUUID",R,C,N,V_pairingIdentifier
T@"NSUUID",R,D,N
TB,D,N
TB,D,N,GisAutomaticallyGenerated
TB,D,N,GisCloudSyncEnabled
TB,D,N,GisDeleted
TB,D,N,GisPairSyncEnabled
TB,N
TB,N,GisEncryptionAvailable
TB,N,GisICloudEnabled,V_iCloudEnabled
TB,N,GisInitialized,V_initialized
TB,N,GisReachable,V_reachable
TB,N,GisScreenMirrored
TB,N,GisScreenShared
TB,N,GisSyncPreferenceEnabled
TB,N,GisUserVisible,V_userVisible
TB,R
TB,R,D,N,Gdnds_isOutOfSpaceError
TB,R,N
TB,R,N,GforcesAssertionStatusUpdate,V_forcesAssertionStatusUpdate
TB,R,N,GisAutomaticallyGenerated,V_automaticallyGenerated
TB,R,N,GisCloudSyncEnabled,V_cloudSyncEnabled
TB,R,N,GisDeleted
TB,R,N,GisDeleted,V_deleted
TB,R,N,GisIOS14EraOS,V_iOS14EraOS
TB,R,N,GisPairSyncEnabled,V_pairSyncEnabled
TB,R,N,GisPresentationModeEnabled
TB,R,N,GisResolutionContextAssumingDeviceUILocked,V_resolutionContextAssumingDeviceUILocked
TB,R,N,GisSyncAvailable
TB,R,N,GisSyncEnabled
TB,R,N,GisSyncSuppressedClient,V_syncSuppressedClient
TB,R,N,GisUserInteractionClient,V_userInteractionClient
TB,R,N,V_enabled
TB,R,N,V_enabledAtLocation
TB,R,N,V_enabledDrivingMode
TB,R,N,V_enabledDuringEvent
TB,R,N,V_enabledForOneHour
TB,R,N,V_enabledFromControlCenterPhone
TB,R,N,V_enabledFromControlCenterWatch
TB,R,N,V_enabledSleepMode
TB,R,N,V_enabledUntilEvening
TB,R,N,V_enabledUntilMorning
TB,R,N,V_hasSecureData
TB,R,N,V_manuallyEnabled
TB,R,N,V_redactSensitiveData
TB,R,N,V_supportsSilenceLists
TB,R,N,V_wantsGlobalConfigurationUpdates
TB,R,N,V_wantsMeDeviceStateUpdates
TB,R,N,V_wantsModeUpdates
TB,R,N,V_wantsSettingsUpdates
TB,R,N,V_wantsStateUpdates
TQ,D,N
TQ,R
TQ,R,D,N
TQ,R,N
TQ,R,N,V_assertionSyncProtocolVersion
TQ,R,N,V_configurationSyncProtocolVersion
TQ,R,N,V_destination
TQ,R,N,V_deviceClass
TQ,R,N,V_dimsLockScreen
TQ,R,N,V_impactsAvailability
TQ,R,N,V_interruptionBehaviorSetting
TQ,R,N,V_interruptionSuppression
TQ,R,N,V_lostModeState
TQ,R,N,V_mode
TQ,R,N,V_modesCanImpactAvailability
TQ,R,N,V_outcome
TQ,R,N,V_overrideType
TQ,R,N,V_partitionType
TQ,R,N,V_preventAutoReply
TQ,R,N,V_protocolVersion
TQ,R,N,V_reasonOverride
TQ,R,N,V_repeatInterval
TQ,R,N,V_serviceType
TQ,R,N,V_syncServiceType
TQ,R,N,V_visibility
TQ,V_lockState
TQ,V_lostModeState
Tq,N
Tq,R,N,V_compatibilityVersion
Tq,R,N,V_ephemeralResolvedCompatibilityVersion
Tq,R,N,V_semanticType
T{?=qqq},R,N,V_lastModifiedByVersion
URLByAppendingPathComponent:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForResource:withExtension:
URLWithString:
UTF8String
UUID
UUIDString
UUIDs
_UUID
_UUIDs
_accessLock
_accessor
_accountStatus
_accountUpdateSource
_activeAssertionUUIDs
_activeAssertionUpdateClientIdentifiers
_activeDateIntervalByAssertionUUID
_activeDateIntervalForModeAssertion:currentlyActive:
_activeDateIntervalForScheduleLifetime:assertion:date:ignoreMatchScheduleStartDate:
_activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:
_activeLifetimeAssertionUUIDs
_activeModeConfigurationForBehavior:
_activeUUIDs
_aggregateMetricsWithEnabled:manuallyEnabled:numberOfNewSessions:numberOfNewManualSessions:controlCenterPhone:controlCenterWatch:type:mode:dayOfWeek:
_aggregateMonitor
_allAppSpecificSettingsOfType:
_allModes
_allPerModeSettingsMOsOfType:processBlock:
_allowSyncEngineCreation
_allowed
_allowedApplications
_allowedContactGroups
_allowedContactTypes
_allowedContacts
_allowedWebApplications
_appConfigurationManager
_appConfigurationServiceProvider
_appFocusConfigurationCoordinator
_appForegroundTriggerManager
_appInfoByBundleIdentifier
_appInfoCache
_appSpecificSettingsManager
_applicationConfigurationType
_applicationIdentifierMapper
_applicationIdentifiers
_applicationRecord
_areSyncDatesValidAtDate:
_assertion
_assertionIdentifierForHealthKitWorkoutEvent:
_assertionSyncManager
_assertionSyncProtocolVersion
_assertionUpdateClientIdentifiers
_assertions
_automaticallyGenerated
_auxiliaryStateMonitor
_availability
_availabilityServiceProvider
_available
_backingStore
_bedtimeBehaviorEnabledSetting
_beginMonitoringForChanges
_beginObservingKeybag
_behavior
_behaviorSettings
_bestMatchForContact:inContacts:
_biomeDonationManager
_biomeQueue
_bundleIDToModeIdentifierTriggers
_bundleIdentifier
_cache
_cacheURL
_calculateUpdateResultForStore:previousStore:
_calendar
_calendarEventLifetimeMonitor
_calendarEventStoreChangedWithNotification:
_calendarIdentifier
_calloutQueue
_canTombstoneBeRemovedWithRecordID:
_children
_ckRecordIDsToForceSave
_cleanupStore:
_cleanupWithError:completion:
_clientConnectionDetailsByConnection
_clientDetailsForClientIdentifier:clientConnection:
_clientDetailsProvider
_clientIdentifier
_clientIdentifiers
_clientNotificationQueue
_clientToModeIdentifier
_cloudDevices
_cloudKitAccountChanged:
_cloudService
_cloudSyncEnabled
_cloudSyncService
_coalescingQueue
_coalescingQueue_coalesceWithTriggerConfiguration:event:
_coalescingQueue_refreshWithTriggerConfiguration:
_coalescingQueue_resetCoalescingTimer
_coalescingTimer
_compatibilityVersion
_completion
_completionFiredFlag
_computedModeStream
_configuration
_configurationProvider
_configurationSyncProtocolVersion
_configureAppForegroundTriggerWithConfiguration:
_configureSmartTriggerWithSupportedModes:
_configureTriggerWithMode:
_configureWorkoutTriggerWithMode:
_connection
_connections
_contactHandle
_contactHistoryToken
_contactIdentifier
_contactProvider
_contactStore
_contactStoreChanged:
_contactsWithCNContacts:
_container
_createConfigurationFromCKRecord:
_createConfigurationFromDNDSIDSRecord:
_createDefaultModeForWorkoutTriggerIfNecessary
_created
_creationDate
_currentConfiguration
_currentModeIdentifier
_currentRegion
_currentScheduleSettingsByModeIdentifier
_currentTriggerConfiguration
_data
_dataSource
_date
_dateForYesterday
_dateFormatter
_dayOfWeek
_debounceTimer
_decodeRecordFromData:
_decodeRecordIDFromData:
_defaultModuleDirectories
_delegate
_delegates
_deleted
_deletedContactIdentifiers
_deniedApplications
_deniedContactGroups
_deniedContactTypes
_deniedThreads
_deniedWebApplications
_descriptionForRedacted:
_destination
_details
_detailsByIdentifier
_detailsForClientIdentifier:bundleInfoDictionary:
_deviceClass
_deviceIdentifier
_deviceIdentifiers
_deviceName
_deviceObsoletionDuration
_deviceOutOfSpace
_didReceiveUnlockMessage
_dnds_assertionSyncProtocolVersion
_dnds_configurationSyncProtocolVersion
_dnds_isIOS14EraOS
_dnds_minorBuildVersion
_dnds_operatingSystemVersion
_dnds_pairedDeviceClass
_dnds_safeStringArrayEntitlementForKey:
_dnds_supportsSilenceLists
_donateEventForStateUpdate:
_drivingTriggerManager
_effectiveIntervals
_enabled
_enabledAtLocation
_enabledDrivingMode
_enabledDuringEvent
_enabledForOneHour
_enabledFromControlCenterPhone
_enabledFromControlCenterWatch
_enabledSleepMode
_enabledUntilEvening
_enabledUntilMorning
_encodedDataFromRecord:
_encodedRecordIDFromRecordID:
_encryptionAvailable
_endComponents
_endDate
_endMonitoringForChanges
_enteredRegionIdentifiers
_enteredRegionIdentifiersPendingExit
_entitlementRecordForApplicationRecord:
_ephemeralResolvedCompatibilityVersion
_eventBehavior
_eventBehaviorResolver
_eventCoalescingTransaction
_eventForCalendarEventLifetime:assertionStartDate:
_eventStore
_eventStoreCreatingIfNeeded
_eventStream
_eventUniqueID
_executeAction:orActionIdentifier:withBundleIdentifier:modeIdentifier:groupIdentifier:exiting:metadataProvider:
_executeAction:withBundleIdentifier:modeIdentifier:groupIdentifier:
_executeQueuedTaskFollowingTask:
_executor
_executorCreatingIfNeeded
_expiredUUIDs
_explicitRegionMonitor
_extensionLaunchQueue
_fallbackAppInfoByBundleIdentifier
_fallbackAppInfoForBundleIdentifier:
_favorites
_fetchAccountStateWithCompletionHandler:
_fetchAppStoreInfoForBundleIdentifiers:timeoutInterval:limit:completionHandler:
_fetchContactHistoryWithToken:monitoredContacts:handler:
_fetchContactsForMonitoredContacts:handler:
_fetchIconForAppInfo:timeoutInterval:completionHandler:
_fetchIconsForAppInfo:timeoutInterval:completionHandler:
_fetchQueue
_fileURL
_firstName
_fixupConfigurationsIfNeeded
_focusConfigurationEventPublisher
_focusStatusDomainPublisher
_forceConfigurationSyncIfNeededWithUpdateResult:
_forcesAssertionStatusUpdate
_forgetMetadataForRecordID:
_forgetObsoleteTombstones
_forgetRecordID:
_forgetSyncDatesForDevicesWithoutInitialSync
_forgetSyncDatesForOutdatedDevices
_forgetSyncDatesForRecordID:
_fuzzTimer
_gamingTriggerManager
_generateDiff
_getCurrentPairedDevice
_globalConfigurationManager
_globalConfigurationStore
_groupDetails
_groupWithIdentifierCompleted:
_handleAccountFetchWithUpdatedUserRecordID:updatedAccountStatus:updatedEncryptionAvailable:updatedSyncEnabled:
_handleClientConnectionInterrupted:
_handleClientConnectionInvalidated:
_handleEventAction:token:descriptor:
_handleSignificantTimeChange
_handles
_hasActiveLifetimes
_hasSecureData
_hasUnlockedSinceBootForObserver:
_hideApplicationBadges
_iCloudEnabled
_iOS14EraOS
_iOS14SyncSuppressedClient
_iOSBundleIDForMacOSBundleID:
_identifier
_identifiers
_idsCloudService
_idsLocalService
_idsRecordIDsToForceSave
_idsSyncEngine
_immediateBypassCNGroupIdentifier
_impactsAvailability
_incrementTasksExecutedForGroupWithIdentifier:
_inflightBundleIdentifiers
_inflightDateByRequestIdentifier
_inflightExpirationTime
_inflightExpirationTimer
_inflightMetadata
_inflightMetadataByRequestIdentifier
_informDelegates
_inheritFromDefaultModeConfiguration:
_init
_initWithActiveLifetimeAssertionUUIDs:currentRegion:regionEntered:
_initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:
_initWithApplicationConfigurationType:senderConfigurationType:suppressionType:minimumBreakthroughUrgency:hideApplicationBadges:compatibilityVersion:
_initWithAssertions:activeAssertionUUIDs:activeDateIntervalByAssertionUUID:interruptionBehaviorSetting:lostModeState:lastUpdate:
_initWithBackingStoreURL:
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:configurations:
_initWithClass:deviceCapabilities:identifier:frameworkVersion:
_initWithConfiguration:
_initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:
_initWithContext:
_initWithDetails:
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:dayOfWeek:
_initWithEnteredRegionIdentifiersPendingExit:
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
_initWithInterruptionBehaviorSetting:
_initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:activeAssertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:wantsModeUpdates:wantsActiveModeUpdates:wantsGlobalConfigurationUpdates:wantsMeDeviceStateUpdates:
_initWithLastReceivedStoreDate:lastSentStoreDate:pendingLastSentStoreDate:
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:timePeriodWeekdays:bedtimeBehaviorEnabledSetting:
_initWithListen:send:pairedDevice:
_initWithMetadata:data:
_initWithMetricsByDay:lastDailyHeartbeat:metricsByWeek:lastWeeklyHeartbeat:metricsByMonth:lastMonthlyHeartbeat:
_initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:
_initWithMode:configuration:secureConfiguration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:lastModifiedByVersion:lastModifiedByDeviceID:automaticallyGenerated:compatibilityVersion:ephemeralResolvedCompatibilityVersion:hasSecureData:
_initWithModeConfigurations:
_initWithModePlaceholders:
_initWithRecord:
_initWithRecordID:
_initWithRecordMetadata:
_initWithSenderConfiguration:allowedApplications:deniedApplications:allowedWebApplications:deniedWebApplications:
_initWithSnapshot:
_initWithStatus:name:
_initWithSymbolImageName:tintColorName:name:modeIdentifier:semanticType:visibility:identifier:
_initWithTriggers:
_initWithURL:
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_initialSyncForDataSource:withZoneName:
_initialSyncForDataSources
_initialSyncPairedDeviceIdentifiers
_initialized
_installedBundleIdentifiers
_interruptionBehaviorSetting
_interruptionInvalidationAssertionUUID
_interruptionSuppression
_invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
_invalidationDate
_invalidationRequests
_invalidations
_invitation
_isCloudSyncPreferenceEnabled
_isLocalUserAvailableForAppId:modeIdentifier:withError:
_isLocalUserAvailableForMessagesWithModeIdentifier:withError:
_isMetadataValidAtDate:
_isPairedDeviceOutdated:
_isTCCUserAvailabilityGrantedForMessages
_isWorkoutDNDNanoPreferenceEnabled
_isWorkoutTriggerEnabledForModeConfiguration:
_iterateClientConnectionsToSendWithHandler:
_lastCalculatedState
_lastChanceStore
_lastDailyHeartbeat
_lastInformedReachability
_lastModified
_lastModifiedByDeviceID
_lastModifiedByVersion
_lastMonthlyHeartbeat
_lastName
_lastReceivedStoreDate
_lastSentStoreDate
_lastSystemSnapshot
_lastUpdate
_lastUpdatedTimestamp
_lastWeeklyHeartbeat
_latestEvent
_latitude
_layoutMonitor
_legacyAssertionSyncManager
_legacyModeConfigurationForModeConfiguration:
_lifetime
_lifetimeMonitors
_lifetimeTimerFireDate
_lifetimeType
_listeners
_loadDataFromBackingStore
_loadMetadataFromBackingStore
_loadPreloadBundles
_localService
_localSyncService
_locationLifetimeMonitor
_locationManager
_lock
_lockState
_lock_accessor
_lock_currentAccountStatus
_lock_currentUserRecordID
_lock_dataSourceForRecord:
_lock_dataSourceForZoneID:
_lock_dataSources
_lock_destroySyncEngine
_lock_encryptionAvailable
_lock_existingConfiguration
_lock_existingConfigurations
_lock_isCloudSyncPreferenceEnabled
_lock_isPairSyncPreferenceEnabled
_lock_isSyncAvailable
_lock_isSyncEnabled
_lock_isSyncPreferenceEnabled
_lock_listenersByContactHistoryToken
_lock_mergeLocalConfigurationRecord:withRemoteCKRecord:deleteModeOnCorruption:
_lock_mergeLocalConfigurationRecord:withRemoteConfigurationRecord:modeIdentifier:sourceDeviceIdentifier:sourceFrameworkVersion:sourceIsCloud:sourceWantsToForce:deleteModeOnCorruption:
_lock_modeConfigurationForCKRecordID:
_lock_modeConfigurationForDNDSIDSRecordID:
_lock_modeConfigurationForModeIdentifier:
_lock_modeIdentifiers
_lock_monitoredContactsByContactHistoryToken
_lock_mutableExistingConfigurationInStore:
_lock_mutableExistingConfigurations
_lock_populateCKRecord:lastChanceRecord:
_lock_populateDNDSIDSRecord:
_lock_prepareCKRecordToSave:
_lock_prepareDNDSIDSRecordToSave:
_lock_purgeRecordIDs:
_lock_recordIDsForIDSSyncEngine:
_lock_removeModeConfigurationWithCKRecordID:
_lock_removeModeConfigurationWithModeIdentifier:
_lock_setCompanionCloudSyncPreferenceEnabled:
_lock_setCurrentAccountStatus:
_lock_setCurrentUserRecordID:
_lock_setEncryptionAvailable:
_lock_syncEngine
_lock_updateCompanionCloudSyncPreference
_lock_updateConfigurationWithCKRecord:
_lock_updateConfigurationWithDNDSIDSRecord:
_lock_updateModeConfigurationWithCKRecord:
_lock_updateModeConfigurationWithConfiguration:
_lock_updateModeConfigurationWithDNDSIDSRecord:
_lock_updateSyncSettingsIfNewSettingsDiffer:
_lock_writeRecord:writePartition:error:
_longitude
_lostModeState
_macOSBundleIDForiOSBundleID:
_maintainMetadataBackingStore
_manuallyEnabled
_meDeviceName
_meDeviceService
_meDeviceState
_metadata
_metadataBackingStore
_metadataStore
_metricsBackingStore
_metricsByDay
_metricsByWeek
_metricsDayStringForDate:
_metricsMonthStringForDate:
_metricsRecord
_metricsWeekStringForDate:
_middleName
_migrateBypassSettingsIfNeeded
_migrateDefaultDoNotDisturbModeIfNeeded
_migrateOldStoresWithSyncEnabledState:
_migrateWorkoutDNDNanoPreference
_mindfulnessTriggerManager
_minimumBreakthroughUrgency
_mode
_modeAssertionManager
_modeConfigurationManager
_modeConfigurationModifiedDate
_modeConfigurations
_modeConfigurationsByModeIdentifier
_modeConfigurationsStore
_modeIdentifierByRegionIdentifier
_modeSpecificSettings
_modesCanImpactAvailability
_modesToSave:modesToDelete:
_modifiedConfigurations
_modifiedIDs
_monitorListener
_monitoredBundleIdentifiers
_monitoredContactIdentifiers
_name
_nickName
_nonPersistentAssertionTransaction
_notifyChangeOfModeConfigurationFrom:to:
_notifyDelegateOfConfigurationChange
_npsManager
_npsQueue
_npsQueue_refreshForNanoPreferenceChange
_numberForKey:
_numberOfManualSessions
_numberOfSessions
_onlyDuringEvent
_organizationName
_original
_osBuild
_outcome
_overrideType
_pairSyncEnabled
_pairedDevice
_pairedDeviceDidChangeNotificationToken
_pairedDeviceStateChanged:
_pairedDeviceStateMonitor
_pairingDataStore
_pairingIdentifier
_parseDictionary:
_partitionType
_pathMonitor
_pendingEvents
_pendingLastSentStoreDate
_perModeSettingsMOsOfType:modeIdentifier:processBlock:
_persistentAssertionClient
_persistentContainer
_phoneCallBypassSettings
_phoneNumbers
_placeholderModeManager
_placeholderModes
_populateCKRecord:withGlobalConfiguration:
_populateDNDSIDSRecord:withGlobalConfiguration:
_predicate
_predicateType
_predicates
_preferModeAssertion:toModeAssertion:
_prepareModeConfigurationForStorage:withError:
_presentationModeEnabled
_preventAutoReply
_previousPairedDevice
_priorityForModeAssertion:
_propagateBypassSettings:
_propagateScheduleSettings:
_protocolVersion
_publishStatusKitAvailability:activityIdentifier:local:scheduled:date:forced:completion:
_publishStatusKitCurrentAvailabilityForced:override:completionHandler:
_publisher
_purgeData
_purgeDataFromDataSources
_purgeRecordIDs:
_queryStateWithCompletionHandler:
_queue
_queue_addSubscriberForToken:descriptor:
_queue_adjustEventBehaviorResolutionForAuxiliaryState:
_queue_beginMonitoringCurrentLocation
_queue_bundleIdentifiersWithMissingInfo
_queue_cancelInflightExpirationTimer
_queue_cancelRetryTimer
_queue_dataSourceForZone:
_queue_didAppAvailabilityChangeForApplicationIdentifier:fromConfiguration:toConfiguration:
_queue_earliestExpirationTimeSinceNowForInflightMetadata
_queue_eventSourceIsContact:
_queue_eventSourceIsContact:inGroupWithIdentifier:
_queue_eventSourceIsEmergencyContact:
_queue_eventSourceIsFavorite:
_queue_eventSourceIsRepeat:clientDetails:date:
_queue_fetchAllDevices
_queue_fetchMissingAppInfo
_queue_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
_queue_firstContactForPredicate:
_queue_geofenceLocation:
_queue_geofenceRegion:
_queue_gizmoUpdateDate
_queue_handleAckMessage:fromPairedDeviceIdentifier:
_queue_handleDidSendRequestIdentifier:withSuccess:error:
_queue_handleFirstUnlock
_queue_handleIncomingMessage:deviceIdentifier:
_queue_handleKeybagStatusChanged
_queue_handleMessage:fromPairedDeviceIdentifier:
_queue_handleMessage:withVersionNumber:fromDeviceIdentifier:
_queue_handlePairedDeviceAndSyncSettingsChange
_queue_handleReplaceMessage:fromPairedDeviceIdentifier:
_queue_handleResyncMessage:fromPairedDeviceIdentifier:
_queue_handleUnlockMessage:fromPairedDeviceIdentifier:
_queue_handleUpdateMessage:fromPairedDeviceIdentifier:
_queue_hasUnlockedSinceBoot
_queue_informDelegatesOfPairedStateChange
_queue_invalidateAssertionOnExitFromRegion:
_queue_isBreakthroughAllowedForModeIdentifier:withConfiguration:application:sender:urgency:eventType:threadIdentifier:filterCriteria:notifyAnyway:reason:
_queue_isBreakthroughAllowedForSender:eventType:clientDetails:date:reason:
_queue_monitorBundleIdentifiers:
_queue_notifyIntentExtensionsOfUserAvailability:applicationIdentifiers:completionHandler:
_queue_notifyIntentExtensionsOfUserAvailability:availabilityOverride:applicationIdentifiers:completionHandler:
_queue_observers
_queue_priorityHasUnlockedSinceBoot
_queue_priorityObservers
_queue_read
_queue_recordsByID
_queue_refreshMonitor
_queue_refreshMonitorForDate:
_queue_removeAllInflightMetadata
_queue_removeAllInflightMetadataWithExpirationDate:
_queue_removeCachedDataForAppInfo:
_queue_removeSubscriberForToken:
_queue_removeUnusedAppInfo
_queue_resetRetryTimer
_queue_resolutionForModeWithConfiguration:eventDetails:clientDetails:state:date:error:
_queue_resolveEnteredRegionIdentifiersWithAssertionRegionIdentifiers:
_queue_resolveOutcomeForEventSender:clientDetails:date:reason:
_queue_restartInflightExpirationTimer
_queue_resume
_queue_saveDataToBackingStoreWithError:
_queue_sendAckWithMetadata:forAction:toDeviceWithIdentifier:
_queue_sendEventWithXPCObject:
_queue_sendExpiryEventForAllLocationAssertions
_queue_sendMessage:withVersionNumber:messageType:toDestinations:requestIdentifier:error:
_queue_sendModifiedRecordIDs:deletedRecordIDs:toDeviceWithIdentifier:
_queue_sendPendingEvents
_queue_sendResyncMessageToDeviceWithIdentifier:
_queue_sendStateSnapshotToPairedDevices:force:
_queue_sendUnlockMessageToDeviceWithIdentifier:
_queue_shouldAdjustEventBehaviorForMirroring
_queue_startInflightExpirationTimer
_queue_startMonitoringForRegion:
_queue_startRetryTimer
_queue_stopMonitoringCurrentLocation
_queue_syncDataSourcesToDeviceWithIdentifier:
_queue_takeAssertionOnEntryIntoRegion:
_queue_updateAvailabilityKit:fromConfiguration:toConfiguration:completionHandler:
_queue_updateCloudDevices
_queue_updateCompanionAssertionMirroringForState:
_queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:
_queue_updateDevices
_queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:
_queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:
_queue_updatePairedState
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:options:
_queue_updateToggleSyncForReason:
_queue_validateIDSSyncEngine
_queue_write
_queuedTasksByBundleIdentifier
_reachability
_reachable
_read
_readModeConfigurationsReturningError:
_readPlaceholderModesReturningError:
_readSettingsReturningError:
_recordClass
_recordID
_recordIDSyncDatesByPairedDeviceIdentifier
_recordMetadataByRecordID
_recordWithEncodedInfo:error:
_redactSensitiveData
_refresh
_refreshIfNeccessaryForEvent:
_refreshMigratingIfNecessary
_refreshWithMode:event:
_refreshWithScheduleSettings:modeIdentifier:currentScheduleAssertion:context:
_refreshWithScheduleSettingsByModeIdentifier:context:
_refreshWithSupportedModes:event:
_refreshWithTriggerConfiguration:event:
_regionByRegionIdentifier
_regionEntered
_regionIdentifier
_registerOrMutateConnectionDetailsForClientConnection:handler:
_relevantBundleIdentifiers
_removeConnection:
_removeTask:fromGroupWithIdentifier:
_removedConfigurations
_removedIDs
_removedModeConfigurationRecordForModeRecord:
_repeatEventSourceBehaviorEnabledSetting
_requestDate
_requestListener
_requiredEntitlement
_resolutionContextAssumingDeviceUILocked
_resolutionRecord
_resolveStore:
_resolveTransactionForModeAssertionStore
_retriesAvailable
_retryLastChanceRecords
_retryLastChanceRecordsForDataSource:withZoneName:
_retryTimer
_role
_sanitizeAppInfo:
_saveBehaviorSettings:scheduleSettings:error:
_saveConfiguration:forModeIdentifier:error:
_saveDataToBackingStoreWithError:
_saveMetadataToBackingStore
_saveModeConfiguration:writeSecurePartition:error:
_scheduleEnabledSetting
_scheduleIdentifier
_scheduleLifetimeMonitor
_scheduleManager
_scheduleManagerClientIdentifierForModeIdentifier:
_scheduleSettings
_scheduleSettingsForModeConfigurations
_scheduleSettingsFromDefaultScheduleTrigger
_scheduleSettingsMatchingTrigger:
_scheduleTriggerMatchingSettings:
_screenShared
_secureConfiguration
_secureFileURL
_securityClass
_semanticType
_send
_sendDailyHeartbeatIfNeeded
_sendMonthlyHeartbeatIfNeeded
_sendWeeklyHeartbeatIfNeeded
_senderConfiguration
_senderConfigurationType
_serviceIdentifier
_serviceProvider
_serviceType
_setDefaultScheduleTriggerWithScheduleSettings:
_setDimsLockScreenSetting:forModeConfigurationWithIdentifier:
_setLaunchId:
_setLostModeState:error:
_setReachable:
_setScheduleTrigger:forModeConfigurationWithIdentifier:
_setWorkoutDNDNanoPreferenceEnabled:
_settingsManager
_settingsSyncManager
_setupLock
_shouldExecuteActionOnApplicationWithBundleIdentifier:
_silenced
_sinks
_sleepingTriggerManager
_smartTriggerManager
_sourcesByZone
_sourcesByZoneName
_startComponents
_startDate
_startOfLastMonth
_startOfLastWeek
_startOfMonthWithDate:
_startOfWeekWithDate:
_state
_stateProvider
_stateSystemSnapshot
_statusService
_store
_storeLock
_subscribers
_supportsSilenceLists
_suppressionType
_symbolImageName
_syncEngine
_syncEngineQueue
_syncEngineQueue_updateAccountWithSyncEnabledState:
_syncService
_syncServiceType
_syncSettings
_syncSettingsProvider
_syncState
_syncSuppressedClient
_sysdiagnoseDataShouldRedact:
_systemFieldsByRecordID
_systemFocusConfigurationCoordinator
_taskGroups
_tccProvider
_testDatabaseURL
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodWeekdays
_timerCurrentDelay
_timerHandlersByToken
_timerLock
_timerQueuedDevices
_timerQueuedForceUpdate
_timerQueuedTransaction
_tintColorName
_tombstoneObsoletionDuration
_triggers
_underlyingBackingStore
_underlyingHealingSource
_unregisterConnectionDetailsForClientConnection:
_untilExitMonitor
_updateAccountWithCurrentSyncEnabledState
_updateAccountWithSyncEnabledState:
_updateBypassSettings
_updateCloudSyncPreferences
_updateContactsWithIdentifiers
_updateContactsWithoutIdentifiers
_updateForReason:
_updateGizmoAssertionSync
_updateHandlerForPath:
_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:
_updateNanoPreferencesForRefreshWithModeConfiguration:
_updatePairSyncPreferences
_updateResult
_updateScheduleSettingsWithDate:
_updateSystemFieldsForRecord:
_updated
_updatedContacts
_url
_urlSession
_userAvailabilityCoordinator
_userInteractionClient
_userRecordID
_userVisible
_userVisibleEndDate
_versionNumber
_visibility
_wantsActiveModeUpdates
_wantsGlobalConfigurationUpdates
_wantsMeDeviceStateUpdates
_wantsModeUpdates
_wantsSettingsUpdates
_wantsStateUpdates
_workQueue
_workQueue_handleFirstLaunch
_workoutTriggerManager
_write
_writeConfiguration:error:
_writeMetricsToStore:
_writeModeConfigurationsRecord:writeSecurePartition:error:
_writeSettingsRecord:error:
_xpcCheckIn
_xpcEventPublisher
_zone
_zoneIDForRecord:
_zoneNames
absoluteString
acceptEventVisitor:
accountFeatureSupport
accountFeaturesWithCloud:hasCloudDevices:paired:hasPairedDevices:
accountInfoWithCompletionHandler:
accountStatus
accountStatusWithCompletionHandler:
action
actionAppContext
actionForBundleIdentifier:andActionIdentifier:error:
actionWithOpenWhenRun:
actionWithParameters:
actionsConformingToSystemProtocols:logicalType:bundleIdentifier:error:
activate
activateManualDomain:
activateModeWithDetails:withRequestDetails:completionHandler:
activeAssertionUUIDs
activeAssertionUpdateClientIdentifiers
activeAssertionsDidChangeForLifetimeMonitor:
activeDateInterval
activeDateIntervalByAssertionUUID
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
activeDateIntervalForScheduleLifetime:assertion:date:
activeLifetimeAssertionUUIDs
activeModeAssertionMetadata
activeModeAssertionWithRequestDetails:completionHandler:
activeModeConfiguration
activeModeIdentifier
activeModeUUID
activeUUIDs
activityUUID
addDelegate:
addDelegate:queue:
addListener:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPriorityObserver:
addRecord:
addRecordIDsToSave:recordIDsToDelete:
addRecordZonesToSave:recordZoneIDsToDelete:
addTriggerForModeWithIdentifier:forRegion:
addTriggerForModeWithIdentifier:onForegroundOfApp:
addZoneName:
aggregateMonitor
allObjects
allValues
allocWithZone:
allowedApplicationIdentifiers
allowedApplications
allowedContactGroups
allowedContactTypes
allowedModesForContactHandle:withError:
allowedThreads
allowedWebApplicationIdentifiers
allowedWebApplications
alphanumericCharacterSet
andPredicateWithSubpredicates:
anyObject
appActionForActionIdentifier:applicationIdentifier:modeIdentifier:error:
appActionFromDictionaryRepresentation:
appActionWithIdentifier:forApplicationIdentifier:modeIdentifier:error:
appActionsForModeIdentifier:error:
appConfigurationManager:didClearActionWithIdentifier:forApplicationIdentifier:modeIdentifier:
appConfigurationManager:didClearActionsForAppsInModeIdentifiers:
appConfigurationManager:didClearSystemAction:modeIdentifier:
appConfigurationManager:didSetAction:forApplicationIdentifier:modeIdentifier:
appConfigurationManager:didSetSystemAction:modeIdentifier:
appConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
appConfigurationPredicateForApplicationIdentifier:modeIdentifier:error:
appConfigurationTargetContentIdentifierPrefixForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
appConfigurationTargetContentIdentifierPrefixForApplicationIdentifier:modeIdentifier:error:
appFocusConfigurationCoordinator:didUpdateAppConfigurationContextForModeIdentifier:
appForegroundTriggerConfigurationForAppForegroundTriggerManager:
appInfoForBundleIdentifier:
appInfoForBundleIdentifiers:
appInfoWithApplicationRecord:
appLaunch
appSpecificSettingsClass
appSpecificSettingsEntity
appSpecificSettingsForManagedObject:
appSpecificSettingsFromDictionaryRepresentation:
appSpecificSettingsOfType:identifier:modeIdentifier:applicationIdentifier:error:
appSpecificSettingsOfType:modeIdentifier:applicationIdentifier:error:
appSpecificSettingsOfType:modeIdentifier:error:
application
applicationConfigurationType
applicationExtensionRecords
applicationIconDidChange:
applicationIdentifier
applicationIdentifierForFileWithSourceApplicationIdentifier:
applicationIdentifierForSyncWithSourceApplicationIdentifier:
applicationIdentifierForTargetPlatform:withSourceApplicationIdentifier:
applicationIdentifierMapper
applicationIdentifiers
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationStateDidChange:
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayHealingSource
arrayWithCapacity:
arrayWithContentsOfURL:
arrayWithObjects:count:
assertion
assertionSyncProtocolVersion
assertionTaken:withClientDetails:lockState:
assertionUpdateClientIdentifiers
assertions
auditToken
authorizationStatus
automaticallyGenerated
autorelease
availability
availableModesFilteringPlaceholders:returningError:
availableRegions
backingRecordKeys
backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
backingStoreWithFileURL:
backingStoreWithFileURL:secureFileURL:
bedtimeBehaviorEnabledSetting
behavior
behaviorSettings
behaviorSettingsWithError:
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolValue
bs_boolForKey:
bs_compactMap:
bs_containsObjectPassingTest:
bs_differenceWithArray:
bs_each:
bs_filter:
bs_firstObjectOfClass:
bs_firstObjectPassingTest:
bs_flatten
bs_mapNoNulls:
bs_safeAddObject:
bs_safeArrayForKey:
bs_safeDictionaryForKey:
bs_safeNumberForKey:
bs_safeObjectForKey:ofType:
bs_safeStringForKey:
bs_setSafeObject:forKey:
bs_takeObjectForKey:
bundleID
bundleIdentifier
bundlePath
bundleRecordForAuditToken:error:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bypassSettings
cStringUsingEncoding:
cachedBackingStoreDidPurgeCache:
cachedIconURL
calendar
calendarIdentifier
calendarWithIdentifier:
callAlert
cancel
center
characterSetWithCharactersInString:
class
classForCoder
cleanupState
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clearSystemActionWithIdentifier:forModeIdentifier:withRequestDetails:completionHandler:
clearSystemActionWithIdentifier:modeIdentifier:
clientDetailsForClientIdentifier:
clientDetailsForIdentifier:
clientDetailsForIdentifier:applicationBundleURL:
clientIdentifier
clientIdentifiers
cloudDevices
cloudSyncEnabled
cloudSyncState
code
commonReachability
compare:
compare:options:
compatibilityVersion
completeManagedObject:forAppSpecificSettings:
component:fromDate:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithString:
configuration
configurationForDefaultMainDisplayMonitor
configurationForRecord:
configurationForRecord:secureRecord:
configurationSyncProtocolVersion
configurations
configureConnection:
conformsToProtocol:
connection
connectionWithError:
contactForContact:
contactForRecord:
contactHandle
contactHistoryToken
contactIdentifier
contactMonitor:didReceiveUpdatedContacts:deletedContactIdentifiers:withContactHistoryToken:
contactMonitor:didReceiveUpdatedContactsForContactsWithoutIdentifiers:
contactWithCNContact:
contactsWithExceptions
containerWithIdentifier:
containingBundleRecord
containsDate:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
coordinate
coordinateUserAvailability:fromConfiguration:toConfiguration:completionHandler:
coordinateUserAvailabilityUpdateForApplicationIdentifier:forced:completionHandler:
copy
copyItemAtURL:toURL:error:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
countryCode
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createWorkoutModeForWorkoutTriggerManager:
creationDate
currentContext
currentDevice
currentHistoryToken
currentLocale
currentNotificationSettingsCenter
currentRegion
currentStateForAppFocusConfigurationCoordinator:
currentStateForEventBehaviorResolver:
currentStateForLegacyAssertionSyncManager:
currentStateForSystemFocusConfigurationCoordinator:
currentUILockStateForEventBehaviorResolver:
currentlyActivePairedDeviceForSyncManager:
data
dataForKey:
dataSource
dataTaskWithRequest:completionHandler:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
dataWritingOptionsForSecurityClass:
databaseWasRebuilt
date
date:matchesComponents:
dateByAddingComponents:toDate:options:
dateByAddingTimeInterval:
dateComponents
dateFromComponents:
dateInterval
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
dayOfWeek
debounceTimer
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultConfiguration
defaultConfigurationType
defaultManager
defaultMinimumBreakthroughUrgency
defaultMode
defaultModeConfiguration
defaultScheduleSettings
defaultScheduleTrigger
defaultSuppressionType
defaultWorkspace
delegate
delegates
deleteObject:
deletedContactIdentifiers
deletedRecordIDsForPairedDeviceIdentifier:
deliverActiveModeAssertion:stateUpdate:clientIdentifiers:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverAllModes:
deliverAvailableModes:
deliverMeDeviceState:
deliverStateUpdate:
deliverUpdatedPairSyncState:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedPreventAutoReplySetting:
deniedApplicationIdentifiers
deniedApplications
deniedContactGroups
deniedContactTypes
deniedContacts
deniedThreads
deniedWebApplications
description
descriptor
destination
destinationIdIsPhoneNumber
destroyPersistentStoreAtURL:withType:options:error:
detail
detailsForBundleAtURL:
detailsForClientIdentifier:applicationBundleURL:
detailsForInactiveDoNotDisturb
detailsWithIdentifier:modeIdentifier:lifetime:reason:
deviceCapabilities
deviceClass
deviceForFromID:
deviceIdentifier
deviceIdentifiers
deviceManagementPolicyDidChange:
deviceName
deviceToDeviceEncryptionAvailability
deviceType
devicesChanged
dictionary
dictionaryRepresentation
dictionaryRepresentationForAppSpecificSettings:
dictionaryRepresentationWithCKRecord:partitionType:
dictionaryRepresentationWithContext:
dictionaryWithCapacity:
dictionaryWithContentsOfURL:
dictionaryWithContentsOfURL:error:
dictionaryWithDictionary:
dictionaryWithKeys:options:
dictionaryWithObjects:forKeys:count:
didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:
diffObject:againstObject:withDescription:
dimsLockScreen
displayName
distantFuture
distantPast
dnd_locationBundle
dnd_settingsType
dnds_assertionReasonValue
dnds_assertionSyncMetadataFileURL
dnds_backingStoreRootDirectoryURL
dnds_bypassSettings
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
dnds_dateValue
dnds_globalConfigurationBackingStoreFileURL
dnds_hasActiveModeUpdatesEntitlementForClientIdentifier:
dnds_hasAnyValidEntitlement
dnds_hasAuxiliaryStateModificationEntitlementForClientIdentifier:
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
dnds_hasMeDeviceStateEntitlementForClientIdentifier:
dnds_hasModeAssertionEntitlementForClientIdentifier:
dnds_hasModeConfigurationAvailabilityEntitlementForClientIdentifier:
dnds_hasModeConfigurationModificationEntitlementForClientIdentifier:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
dnds_hasStateRequestEntitlementForClientIdentifier:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
dnds_hasUserNotificationsCommunicationEntitlement
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
dnds_idsSyncEngineMetadataFileURL
dnds_invalidationReasonOverrideValue
dnds_invalidationReasonValue
dnds_isOutOfSpaceError
dnds_legacySettingsFileURL
dnds_lifetimePhaseForDate:
dnds_lifetimeTypeValue
dnds_localAssertionBackingStoreFileURL
dnds_locationAssertionExplicitRegionFileURL
dnds_locationAssertionUntilExitRegionFileURL
dnds_meDeviceStoreFileURL
dnds_modeConfigurationsBackingStoreFileURL
dnds_modeConfigurationsSecureBackingStoreFileURL
dnds_numberWithDate:
dnds_outOfSpaceError
dnds_placeholderModesLocalBackingStoreFileURL
dnds_predicateForContactsMatchingEventSender:
dnds_predicateTypeValue
dnds_rootDirectoryURL
dnds_safeNumberWithDate:
dnds_scheduleLifetimeBehaviorValue
dnds_scheduleSettingsWithLastUpdated:
dnds_secureLegacyArchiver
dnds_secureLegacyUnarchiverForReadingFromData:error:
dnds_setBypassSettings:
dnds_setSafeLocalDateForTimestamp:key:
dnds_setScheduleSettings:
dnds_settingsBackingStoreFileURL
dnds_stringForAssertionReason:
dnds_stringForInvalidationReason:
dnds_stringForInvalidationReasonOverride:
dnds_stringForLifetimeType:
dnds_stringForPredicateType:
dnds_stringForScheduleLifetimeBehavior:
dnds_syncEngineLastChanceFileURL
dnds_syncEngineMetadataFileURL
domain
doubleForKey:keyExistsAndHasValidFormat:
doubleValue
downgradeAssertionsIfNeededForSyncToPairedDevice:dataSource:syncManager:
downloadTaskWithRequest:completionHandler:
drivingModeForDrivingTriggerManager:
duration
earlierDate:
effectiveBundleIdentifiers
effectiveIntervals
elements
emailAddresses
emptyConfiguration
emptyResult
enabledAtLocation
enabledDrivingMode
enabledDuringEvent
enabledForOneHour
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledSetting
enabledSleepMode
enabledUntilEvening
enabledUntilMorning
encodeInteger:forKey:
encodeObject:forKey:
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedAction
encodedData
encodedReverseAction
encryptionAvailable
endComponents
enteredRegionIdentifiersPendingExit
entitiesByName
entitlements
entity
entityForName:inManagedObjectContext:
entriesForContact:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratorForChangeHistoryFetchRequest:error:
enumeratorWithOptions:
ephemeralResolvedCompatibilityVersion
ephemeralSessionConfiguration
error
errorWithDomain:code:userInfo:
evaluateWithObject:
evaluateWithObject:substitutionVariables:
eventBehavior
eventBehaviorResolver:appPredicateForApplicationIdentifier:modeIdentifier:
eventBehaviorResolver:bypassSettingsForClientIdentifier:
eventBehaviorResolver:configurationForModeIdentifier:
eventBehaviorResolver:isAvailabilityActiveForBundleIdentifier:
eventBody
eventDetails
eventType
eventUniqueID
eventsMatchingPredicate:
exceptionForApplication:
exceptionForApplication:thread:forModeIdentifier:
exceptionForApplicationIdentifier:
exceptionForApplicationIdentifier:thread:
exceptionForApplicationIdentifier:thread:forModeIdentifier:
exceptionForContactHandle:
exceptionForContactHandle:forModeIdentifier:
exceptionForWebApplicationIdentifier:
exceptionalModesForContactHandle:withError:
execute:
executeFetchRequest:error:
executeRequest:error:
executor:didCompleteExecutionWithResult:error:
executor:didFinishWithResult:error:
executor:didPerformActionWithResult:error:
executor:environmentForViewSnippetWithCompletion:
executor:needsActionConfirmationWithRequest:
executor:needsConfirmationWithRequest:
executor:needsContinueInAppWithRequest:
executor:needsDisambiguationWithRequest:
executor:preferredContentSizeForViewSnippetWithCompletion:
executor:shouldRunShowOutputAction:
executorForAction:options:delegate:
expiredUUIDs
fallbackConfiguration
fallbackState
familyName
fetchActionAppContextForAction:completionHandler:
fetchChanges:withCompletionHandler:
fetchContactsWithIdentifiers:error:
fetchRequest
fetchRequestFromTemplateWithName:substitutionVariables:
fetchRequestWithEntityName:
fetchUserRecordIDWithCompletionHandler:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
filePathURL
fileURLWithPath:
fileURLWithPathComponents:
filterCriteria
filterForSyncToPairedDevice:clientDetailsProvider:
filterUsingPredicate:
filterWithKeyPath:comparison:value:
filterWithKeyPath:value:
filteredArrayUsingPredicate:
firstName
firstObject
floatValue
focusConfigurationProtocol
forceUpdateAllDevices
forcesAssertionStatusUpdate
frameworkVersion
gameControllerStream
gamingModeForGamingTriggerManager:
garbageCollect
geoReferenceFrame
getAccountFeatureSupportWithRequestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getActivePairedDevice
getAllModeAssertionsWithRequestDetails:completionHandler:
getAllModesWithRequestDetails:completionHandler:
getAllowedModesForContactHandle:withRequestDetails:completionHandler:
getAppActionsForModeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:
getAvailableModesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
getBytes:length:
getCloudSyncStateWithRequestDetails:completionHandler:
getCurrentAppConfigurationForActionIdentifier:withRequestDetails:completionHandler:
getIsLocalUserAvailableWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getModeConfigurationsWithRequestDetails:completionHandler:
getModesCanImpactAvailabilityReturningError:
getModesCanImpactAvailabilityWithRequestDetails:completionHandler:
getPairSyncStateWithRequestDetails:completionHandler:
getPreventAutoReplyReturningError:
getPreventAutoReplyWithRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
getSilencedModesForContactHandle:withRequestDetails:completionHandler:
getStateDumpWithRequestDetails:completionHandler:
getSystemActionsForModeIdentifier:withRequestDetails:completionHandler:
getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:
givenName
globalConfigurationManager:didUpdateModesCanImpactAvailabilitySetting:
globalConfigurationManager:didUpdatePhoneCallBypassSettings:
globalConfigurationManager:didUpdatePreventAutoReplySetting:
globalConfigurationStore:didUpdatePreventAutoReplySetting:
globalConfigurationSyncManager:didReceiveUpdatedGlobalConfiguration:
groupsMatchingPredicate:error:
handleAppConfigurationContextUpdateForModeIdentifier:
handleDeletedRecordID:
handleFetchedRecord:
handleIntentWithCompletionHandler:
handleMeDeviceStateUpdate:
handleModeAssertionUpdateResult:
handleStateUpdate:
handleUpdatedBehaviorSettings:
handleUpdatedModes:availableModes:
handleUpdatedPairSyncState:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedPreventAutoReplySetting:
handleUpdatedScheduleSettings:
hasActiveLifetimes
hasChanges
hasCurrentRegion
hasDifferences
hasMetadataForPairedDeviceIdentifier:
hasPendingModifications
hasPerformedInitialSyncForPairedDeviceIdentifier:
hasPrefix:
hasSecureData
hasSuffix:
hasUnlockedSinceBoot
hasUnlockedSinceBootForObserver:
hash
hashTableWithOptions:
healingSource
healthKitWorkoutStream
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
hideApplicationBadges
hour
iCloudEnabled
iOS14EraOS
iOS14SyncSuppressedClient
identifier
identifiers
idsSyncEngine:didFetchRecord:
idsSyncEngine:prepareRecordToSave:
idsSyncEngine:recordWithIDWasDeleted:
ignoreMute
immediateBypassCNGroupIdentifier
immediateBypassEventSourceType
impactsAvailability
inflightMetadata
infoDictionary
init
initForReadingFromData:error:
initRequiringSecureCoding:
initWithAction:bundleIdentifier:
initWithAction:enabled:
initWithAction:reverseAction:enabled:
initWithActionIdentifier:actionMetadata:
initWithActionIdentifier:bundleIdentifier:
initWithActiveUUIDs:expiredUUIDs:
initWithAggregateMonitor:
initWithAppConfigurationManager:
initWithAppConfigurationManager:keybagProviding:xpcEventPublisher:
initWithAppSpecificSettingsManager:
initWithApplicationIdentifier:enabledSetting:
initWithApplicationRecord:available:
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
initWithAssertions:invalidations:
initWithAvailable:activityIdentifierString:
initWithAvailableDuringActivityIdentifiers:unavailableDuringActivityIdentifiers:
initWithBackingStore:
initWithBackingStore:clientDetailsProvider:
initWithBackingStore:contactStore:
initWithBackingStore:keybag:
initWithBackingStore:syncEngine:idsSyncEngine:
initWithBackingStoreURL:clientDetailsProvider:
initWithBundleID:
initWithBundleID:platform:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCalendarIdentifier:
initWithCapacity:
initWithCenter:radius:identifier:
initWithClass:deviceCapabilities:frameworkVersion:
initWithClientDetailsProvider:
initWithClientDetailsProvider:localSyncService:cloudSyncService:
initWithClientDetailsProvider:pairedDevice:
initWithClientIdentifier:deviceIdentifier:
initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:iOS14SyncSuppressedClient:forcesAssertionStatusUpdate:
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
initWithClientIdentifiers:
initWithCloudDeviceIdentifier:deviceClass:assertionSyncProtocolVersion:configurationSyncProtocolVersion:supportsSilenceLists:
initWithCoder:
initWithConfiguration:
initWithConfigurationProvider:stateProvider:
initWithConfigurationProvider:stateProvider:userAvailabilityTCCProvider:
initWithContactHandle:allowed:silenced:
initWithContactIdentifier:
initWithContactStore:
initWithContactStore:contactProvider:
initWithContentsOfURL:
initWithContext:
initWithContextualAction:
initWithDatabase:dataSource:metadata:
initWithDate:
initWithDateInterval:
initWithDestination:partitionType:healingSource:redactSensitiveData:contactProvider:applicationIdentifierMapper:
initWithDestination:partitionType:redactSensitiveData:contactProvider:applicationIdentifierMapper:
initWithDeviceObsoletionDuration:tombstoneObsoletionDuration:
initWithDomain:pairingID:pairingDataStore:
initWithEKOptions:
initWithEffectiveBundlePath:delegate:onQueue:
initWithEnabledSetting:
initWithEncodedAction:actionIdentifier:bundleIdentifier:enabled:
initWithEntity:insertIntoManagedObjectContext:
initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithFetchRequest:
initWithFireDate:serviceIdentifier:userVisible:
initWithFocusStatus:
initWithHandles:invitation:
initWithIDSService:
initWithIDSSyncEngine:backingStoreURL:
initWithIdentifier:availability:
initWithIdentifier:zone:
initWithInterruptionSuppression:
initWithIsFocused:
initWithKeysToFetch:
initWithLastUpdateDate:deviceIdentifiers:
initWithLocalDeviceIdentifier:deviceClass:assertionSyncProtocolVersion:configurationSyncProtocolVersion:iOS14EraOS:supportsSilenceLists:pairingIdentifier:pairingDataStore:
initWithLocalIDSService:cloudIDSService:
initWithLocaleIdentifier:
initWithMeDeviceService:
initWithMetadata:
initWithMetadataStore:lastChanceDataStore:keybag:syncEnabled:
initWithMetadataStore:lastChanceDataStore:syncEngine:keybag:syncEnabled:
initWithMetadataStore:syncService:keybag:
initWithMetadataStore:syncService:keybag:role:syncState:inflightExpirationTime:
initWithMode:configuration:triggers:
initWithMode:semanticModeIdentifier:starting:modeUpdateReason:modeSemanticType:modeUpdateSource:
initWithModeAssertionManager:
initWithModeConfigurationManager:
initWithModeRepository:contactStore:auxiliaryStateMonitor:
initWithMonitoredContactIdentifiers:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:
initWithOriginalModeConfigurations:updatedModeConfigurations:zone:
initWithOverrideType:mode:effectiveIntervals:
initWithPairSyncEnabled:cloudSyncEnabled:
initWithPreventAutoReply:bypassSettings:modesCanImpactAvailability:lastModified:automaticallyGenerated:
initWithPreviousState:state:reason:source:options:
initWithRecordClass:fileURL:secureFileURL:versionNumber:securityClass:
initWithRecordClass:fileURL:versionNumber:
initWithRecordID:lastModified:deleted:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRegion:detail:enabledSetting:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleIdentifier:behavior:
initWithService:
initWithServiceType:protocolVersion:store:
initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
initWithStartDate:endDate:
initWithStatus:name:
initWithStatusTypeIdentifier:
initWithStore:clientDetailsProvider:
initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:
initWithTimePeriod:creationDate:enabledSetting:
initWithTriggers:
initWithType:bundleIdentifier:
initWithURL:
initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:
initWithUUID:startDate:details:source:
initWithUUIDString:
initWithUUIDs:
initWithUnderlyingBackingStore:keybag:
initWithWebIdentifier:givenName:
initWithZoneName:
initialized
intValue
integerForKey:keyExistsAndHasValidFormat:
integerValue
interruptionBehaviorSetting
interruptionInvalidationAssertionUUID
interruptionSuppression
intersectSet:
invalidate
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
invalidateAppContextForActionIdentifier:applicationIdentifier:modeIdentifier:
invalidateAppContextForActionIdentifier:withRequestDetails:completionHandler:
invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:
invalidationDate
invalidationRequests
invalidations
invertedSet
invitation
inviteHandlesFromPrimaryAccountHandle:withInvitationPayload:completion:
isActive
isAutomaticallyGenerated
isAvailable
isClientScheduled
isCloudSyncDisabledForSyncManager:
isCloudSyncEnabled
isControllerConnected
isDeleted
isEnabled
isEncryptionAvailable
isEqual:
isEqualToData:
isEqualToDate:
isEqualToSet:
isEqualToString:
isIOS14EraOS
isIOS14SyncSuppressedClient
isInitialized
isInternalScheduled
isKindOfClass:
isLocalUserAvailableForApplicationIdentifier:withError:
isLocked
isMemberOfClass:
isOnlyDuringEvent
isPairSyncEnabled
isPaired
isPersistentAssertionClient
isPlaceholder
isPopulated
isPresentationModeEnabled
isReachable
isResolutionContextAssumingDeviceUILocked
isScreenMirrored
isScreenShared
isStarting
isSupportedConfiguration
isSyncEnabled
isSyncPreferenceEnabled
isSyncSuppressedClient
isTCCUserAvailabilityGrantedForBundleId:
isUnified
isUserInteractionClient
isUserInvalidated
isUserVisible
isValidAtDate:
isValidJSONObject:
isWebAppPlaceholder
keybagDidChangeState:
keysSortedByValueUsingComparator:
keysToFetch
lastCalculatedState
lastChanceRecordForRecordID:
lastDailyHeartbeat
lastInformedReachability
lastModified
lastModifiedByDeviceID
lastModifiedByVersion
lastMonthlyHeartbeat
lastName
lastObject
lastPathComponent
lastReceivedStoreDate
lastSentStoreDate
lastSystemSnapshot
lastUpdate
lastUpdateDate
lastUpdatedTimestamp
lastWeeklyHeartbeat
laterDate:
latitude
launchIntentExtensionWithCompletion:
legacyBehaviorOverride
legacyPrivilegedSenderType
length
lifetime
lifetimeClass
lifetimeMatchingScheduleWithIdentifier:
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:
lifetimeMonitor:modeAssertionsWithLifetimeClass:
lifetimeMonitor:registerTimerHandlerWithServiceIdentifier:handler:
lifetimeMonitor:setTimer:
lifetimeMonitor:takeModeAssertionWithDetails:clientIdentifier:error:
lifetimeType
lifetimeUntilEndOfScheduleWithIdentifier:
lifetimeWithDateInterval:
lifetimeWithExplicitRegion:
linkedContacts
listener:didReceiveConnection:withContext:
listenerWithConfigurator:
loadDefaultValuesWithCompletionHandler:
loadPersistentStoresWithCompletionHandler:
localizedDescription
localizedName
localizedStringFromDate:dateStyle:timeStyle:
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
locationTriggerConfigurationForLifetimeMonitor:
lockState
log:withMessage:
longitude
lostModeIsActive
lostModeState
makeRecord
makeSecureRecord
managedObjectModel
matchesContactHandle:
meDeviceName
meDeviceService:didReceiveMeDeviceStateUpdate:
meDeviceState
meDeviceStatus
mergeWithGlobalConfiguration:
mergeWithRemoteModeConfiguration:
messageDateForPeaceSyncDictionaryRepresentation:
messageDateForSyncDictionaryRepresentation:
metadata
metricsByDay
metricsByMonth
metricsByWeek
middleName
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
mindfulnessModeForMindfulnessTriggerManager:
mindfulnessStream
minimumBreakthroughUrgency
minusSet:
minute
mode
modeAssertionInvalidationsMatchingPredicate:
modeAssertionsMatchingPredicate:
modeConfigurationForModeIdentifier:
modeConfigurationForModeIdentifier:withError:
modeConfigurationForRecord:
modeConfigurationManager:didModifyAvailableMode:
modeConfigurationManager:didModifyExceptionsForContacts:forModeConfiguration:
modeConfigurationManager:didUpdateAvailableModes:
modeConfigurationModifiedDate
modeConfigurationStore:didUpdateAvailableModes:
modeConfigurations
modeConfigurationsWithError:
modeDetailsForIdentifiers:
modeForModeIdentifier:
modeForRecord:
modeIdentifier
modeIdentifierForBundleIdentifier:
modeIdentifierForRegion:
modeSpecificSettings
modeSpecificSettingsOfType:identifier:modeIdentifier:error:
modeSpecificSettingsOfType:modeIdentifier:error:
modeUUID
modesCanImpactAvailability
modesSupportingSmartEntryForSmartTriggerManager:
modifiedIDs
modifiedRecordIDsForPairedDeviceIdentifier:
monitorApplicationIdentifiers:
monitorWithConfiguration:
monitoredContacts
monitoredRegions
month
moveItemAtURL:toURL:error:
mutableCopy
mutableCopyWithZone:
name
needsSanitization
networkUsageChanged:
newBackgroundContext
newManagedObjectContext
newWithCKRecord:
newWithDNDSIDSRecord:
newWithDictionaryRepresentation:context:
newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:
newWithPeaceSyncDictionaryRepresentation:
newWithSyncDictionaryRepresentation:
nextActiveDateIntervalForScheduleLifetime:assertion:date:
nextDateAfterDate:matchingComponents:options:
nickName
nickname
normalizePhoneNumber:
notPredicateWithSubpredicate:
notificationFilterPredicate
notificationSettings
notificationSourceWithIdentifier:
notifyAnyway
null
numberOfControllersConnected
numberOfManualSessions
numberOfSessions
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
object
objectAtIndexedSubscript:
objectForKey:
objectForKey:ofClass:
objectForKeyedSubscript:
observeLaunchProhibitedApps
observeValueForKeyPath:ofObject:change:context:
occurrenceDate
openURL:configuration:completionHandler:
operatingSystemVersion
orderedSetWithArray:
organizationName
original
outgoingResponseIdentifier
overrideType
ownerName
pairSyncState
pairedDevice
pairedDeviceDidChange
pairedDeviceForDeviceIdentifier:
pairedDeviceStateMonitor:cloudPairingChangedFromDevices:toDevices:
pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:
pairedDevicesForSyncManager:
pairingDataStore
pairingIdentifier
parameters
partitionType
path
pathExtension
pathMonitor
pathWithComponents:
peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:
pendingLastSentStoreDate
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentAssertionClient
persistentContainerWithName:managedObjectModel:
persistentStoreCoordinator
persistentStoreDescriptionWithURL:
phoneCallBypassSettings
phoneCallBypassSettingsForSyncManager:
phoneCallBypassSettingsWithError:
phoneNumberWithStringValue:
phoneNumbers
placeholderModeFromMode:
placeholderModes
placeholderModesWithError:
platform
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
policyWithActionMetadata:
populateCKRecord:lastChanceRecord:
populateDNDSIDSRecord:
predicate
predicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
predicateForAnyAssertion
predicateForApplicationIdentifier:modeIdentifier:error:
predicateForAssertionClientIdentifiers:
predicateForAssertionUUIDs:
predicateForAssertionsTakenBeforeDate:
predicateForContactsInGroupWithIdentifier:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingHandleStrings:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsWithIdentifiers:
predicateForEventsWithStartDate:endDate:calendars:
predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:
predicateForModeAssertionsTakenBeforeDate:
predicateForModeAssertionsWithClientIdentifiers:
predicateForModeAssertionsWithDeviceIdentifier:
predicateForModeAssertionsWithLifetimeClass:
predicateForModeAssertionsWithModeIdentifiersNotContainedIn:
predicateForModeAssertionsWithUUIDs:
predicateForiOSLegacyIdentifier:
predicateMatchingBundleIdentifier:
predicateType
predicateWithBlock:
predicateWithFormat:
predicateWithValue:
prepareWithCompletion:
presentationModeEnabled
preventAutoReply
previousPairedDevice
previousState
privateCloudDatabase
productBuildVersion
productHardwareModel
publishStatusKitAvailabilityReturningError:
publishStatusKitAvailabilityWithRequestDetails:completionHandler:
publishStatusRequest:completion:
publisher
purge
purgeCache
purgeRecordsForIDSSyncEngine:
purgeRecordsForSyncEngine:
purgeZoneWithID:
queryItemWithName:value:
queryMeDeviceStateWithRequestDetails:completionHandler:
queryStateForUpdateWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
queue
radius
rangeOfCharacterFromSet:
rangeOfString:
reachabilityChangedTo:
reachable
readRecordDictionaryfromURL:withError:
readRecordWithError:
realToken
reason
reasonOverride
recalculateModeForSnapshot:
recalculateStateForSnapshot:
receiveManagerForPairedDevice:
recordForAssertion:
recordForAssertionDetails:
recordForAssertionLifetime:
recordForAssertionSource:
recordForAssertionStore:
recordForDictionary:keys:
recordForInvalidation:
recordForInvalidationDetails:
recordForInvalidationRequest:
recordForLegacyBehaviorOverride:lastUpdated:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
recordID
recordIDsForIDSSyncEngine:
recordIDsForSyncEngine:
recordIDsWithZoneID:
recordMetadataForRecordID:
recordName
recordType
recordWithEncodedInfo:error:
recordWithID:
recordZoneIDsToDeleteForSyncEngine:
recordsWithZoneID:
redactSensitiveData
redactedDescription
refreshMigratingIfNecessary
refreshMonitorForDate:
refreshObject:mergeChanges:
refreshWithAvailableModes:
region
regionEntered
regionForRegionIdentifier:
regionIdentifier
regionIdentifiers
registerForAssertionUpdatesWithRequestDetails:completionHandler:
registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:
registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:
registerForModeSelectionUpdatesWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
registerForStream:queue:handler:
registerTimerHandlerWithServiceIdentifier:handler:
relevantApplicationIdentifiers
relevantContacts
remoteAppConfigurationServiceProvider:getCurrentAppConfigurationForActionIdentifier:bundleIdentifier:withError:
remoteAppConfigurationServiceProvider:invalidateAppContextForActionIdentifier:bundleIdentifier:withError:
remoteAvailabilityServiceProvider:isLocalUserAvailableForApplicationIdentifier:withError:
remoteProcess
remoteServiceProvider:allActiveModeAssertionsWithError:
remoteServiceProvider:allModesReturningError:
remoteServiceProvider:allowedModesForContactHandle:withError:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:availableModesReturningError:
remoteServiceProvider:behaviorSettingsWithError:
remoteServiceProvider:clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:clearSystemActionWithIdentifier:forModeIdentifier:withError:
remoteServiceProvider:clearSystemConfigurationActionWithIdentifier:modeIdentifier:withError:
remoteServiceProvider:currentMeDeviceStateWithError:
remoteServiceProvider:currentStateWithError:
remoteServiceProvider:didChangeFocusStatusSharingSettingForApplicationIdentifier:
remoteServiceProvider:getAccountFeatureSupportWithError:
remoteServiceProvider:getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:withError:
remoteServiceProvider:getAppInfoForBundleIdentifier:withError:
remoteServiceProvider:getCloudSyncStateReturningError:
remoteServiceProvider:getModesCanImpactAvailabilityReturningError:
remoteServiceProvider:getPairSyncStateReturningError:
remoteServiceProvider:getPreventAutoReplyReturningError:
remoteServiceProvider:getSystemActionsForModeIdentifier:withError:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:
remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
remoteServiceProvider:latestInvalidationWithClientIdentifer:error:
remoteServiceProvider:modeConfigurationForModeIdentifier:withError:
remoteServiceProvider:modeConfigurationsWithError:
remoteServiceProvider:publishStatusKitAvailabilityReturningError:
remoteServiceProvider:removeModeConfigurationWithModeIdentifier:deletePlaceholder:withError:
remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setAppAction:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:setCloudSyncPreferenceEnabled:withError:
remoteServiceProvider:setModeConfiguration:withError:
remoteServiceProvider:setModesCanImpactAvailability:withError:
remoteServiceProvider:setPairSyncPreferenceEnabled:withError:
remoteServiceProvider:setPreventAutoReply:withError:
remoteServiceProvider:setScheduleSettings:withError:
remoteServiceProvider:setScreenIsShared:screenIsMirrored:withError:
remoteServiceProvider:setSystemAction:forModeIdentifier:withError:
remoteServiceProvider:silencedModesForContactHandle:withError:
remoteServiceProvider:syncModeConfigurationsReturningError:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
remoteServiceProvider:userAvailabilityInActiveModeForContactHandle:withError:
remoteTarget
removeAllObjects
removeAppSpecificSettingsForApplicationIdentifier:error:
removeItemAtURL:error:
removeModeConfigurationForModeIdentifier:deletePlaceholder:withError:
removeModeConfigurationForModeIdentifier:deletePlaceholder:withRequestDetails:completionHandler:
removeModeConfigurationForModeIdentifier:withError:
removeModeSpecificSettingsForModeIdentifier:error:
removeModeSpecificSettingsForModeIdentifiersNotInModeIdentifiers:error:
removeObject:
removeObjectForKey:
removeObjectsForKeys:
removePairedDeviceIdentifier:
removeRecordWithID:
removeRecordsWithZoneID:
removeZoneWithID:
removedIDs
repeatEventSourceBehaviorEnabledSetting
repeatInterval
replacementObjectForCoder:
requestAccessForEntityType:completionHandler:
requestAccessToEntityType:completion:
requestDate
requestWithPredicate:requestDate:details:source:reason:reasonOverride:
requestWithPredicate:requestDate:source:reason:
requestWithURL:cachePolicy:timeoutInterval:
reset
resolutionContextAssumingDeviceUILocked
resolutionForConfiguration:eventDetails:clientDetails:date:error:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
resolveBehaviorForEventDetails:clientDetails:date:error:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
resolveSourcesForSyncFromPairedDevice:
resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
resolvedActivityUpdateCoalescingSeconds
resolvedActivityUpdateDisabled
resolvedCompatibilityVersion
resolvedScheduledActivityUpdateFuzzMilliseconds
respondsToSelector:
restrictedDetailsWithDetails:
result
resultCombiningWithResult:
resume
resumeUpdatingInvitationsForContacts:completionHandler:
resumeWithCompletionHandler:
retain
retainCount
reverseAction
runtimeIsSupported:
sanitizeContacts:
sanitizeDatesForThreshold:
sanitizedConfigurationWithContactStore:
sanitizedContactWithContactStore:withError:
save:
scheduleEnabledSetting
scheduleIdentifier
scheduleSettings
scheduleSettingsByModeIdentifierForScheduleLifetimeMonitor:
scheduleSettingsByModeIdentifierForScheduleManager:
scheduleSettingsWithError:
screenMirrored
screenShared
secureConfiguration
self
semanticType
sendChangesWithCompletionHandler:
sendEvent:
sendManagerForPairedDevice:
sendMessage:toDestinations:priority:options:identifier:error:
sendMessage:withVersionNumber:messageType:toDestinations:completionHandler:
sendMessage:withVersionNumber:messageType:toDestinations:identifyingCompletionHandler:
sendMetricsHeartbeatsIfNeeded
sendStatusKitInvitationsForContacts:completionHandler:
sendStatusKitInvitationsForContacts:forceAvailabilityPublish:completionHandler:
sender
senderConfiguration
senderConfigurationType
serialQueueTargetingSharedWorkloop:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceIdentifier
serviceType
sessionType
sessionWithConfiguration:delegate:delegateQueue:
setAccountStatus:
setActiveAssertionUUIDs:
setActiveAssertionUpdateClientIdentifiers:
setActiveDateIntervalByAssertionUUID:
setActiveLifetimeAssertionUUIDs:
setAdditionalContactKeyDescriptors:
setAggregateMonitor:
setAllowedApplicationIdentifiers:
setAllowedApplications:
setAllowedContactGroups:
setAllowedContactTypes:
setAllowedContacts:
setAllowedThreads:
setAllowedWebApplicationIdentifiers:
setAllowedWebApplications:
setAppAction:forApplicationIdentifier:modeIdentifier:
setAppAction:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:
setAppSpecificSettings:identifier:type:applicationIdentifier:modeIdentifier:error:
setApplicationConfigurationType:
setApplicationIdentifier:
setApplicationIdentifiers:
setApsMachServiceName:
setArrayHealingSource:
setAssertion:
setAssertionUpdateClientIdentifiers:
setAssertions:
setAutomaticallyGenerated:
setBedtimeBehaviorEnabledSetting:
setBehavior:
setBehaviorSettings:
setBehaviorSettings:withError:
setBehaviorSettings:withRequestDetails:completionHandler:
setBundleIdentifier:
setByAddingObject:
setByAddingObjectsFromSet:
setBypassSettings:
setCachedIconURL:
setCalendar:
setClass:forClassName:
setClassName:forClass:
setClientIdentifier:
setClientIdentifiers:
setCloudDevices:
setCloudSyncEnabled:
setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:
setCompatibilityVersion:
setConfiguration:
setConfiguration:forModeIdentifier:
setConfiguration:withError:
setConfigurations:
setContactHistoryToken:
setContactIdentifier:
setContactProvider:
setCreated:
setCurrentRegion:
setDataSource:
setDataSource:forZone:
setDataSource:forZoneName:
setDate:
setDateStyle:
setDayOfWeek:
setDelegate:
setDeleted:
setDeletedAtDate:forRecordIDs:
setDeniedApplicationIdentifiers:
setDeniedApplications:
setDeniedContactGroups:
setDeniedContactTypes:
setDeniedContacts:
setDeniedThreads:
setDeniedWebApplicationIdentifiers:
setDeniedWebApplications:
setDetails:
setDeviceIdentifier:
setDeviceName:
setDictionaryRepresentationOfRecord:forKey:context:
setDidFireMetadataExpirationTimer:
setDidReceiveUnlockMessage:
setDimsLockScreen:
setDomain:
setDouble:forKey:
setEmailAddresses:
setEnabled:
setEnabledAtLocation:
setEnabledDrivingMode:
setEnabledDuringEvent:
setEnabledForOneHour:
setEnabledFromControlCenterPhone:
setEnabledFromControlCenterWatch:
setEnabledSleepMode:
setEnabledUntilEvening:
setEnabledUntilMorning:
setEncodedAction:
setEncryptionAvailable:
setEndDate:
setEndTime:
setEnteredRegionIdentifiersPendingExit:
setEntity:
setEphemeralResolvedCompatibilityVersion:
setEvent:forKey:onStream:
setEventUniqueID:
setFetchLimit:
setFirstName:
setGeoReferenceFrame:
setHTTPShouldUsePipelining:
setHasActiveLifetimes:
setHasSecureData:
setHealingSource:
setHideApplicationBadges:
setHour:
setICloudEnabled:
setIdentifier:
setImmediateBypassCNGroupIdentifier:
setImmediateBypassEventSourceType:
setImpactsAvailability:
setIncludesPendingChanges:
setInteger:forKey:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInterruptionInvalidationAssertionUUID:
setInvalidationDate:
setInvalidationHandler:
setInvalidationRequests:
setInvalidations:
setIsScheduledRequest:
setIsSecondaryDeviceRepublish:
setLastCalculatedState:
setLastDailyHeartbeat:
setLastInformedReachability:
setLastModified:
setLastModifiedByDeviceID:
setLastModifiedByVersion:
setLastModifiedDate:forRecordIDs:
setLastMonthlyHeartbeat:
setLastName:
setLastSystemSnapshot:
setLastUpdate:
setLastUpdatedTimestamp:
setLastWeeklyHeartbeat:
setLatitude:
setLifetime:
setLifetimeType:
setLocale:
setLocalizedDateFormatFromTemplate:
setLockState:
setLongitude:
setLostModeState:
setManuallyEnabled:
setMeDeviceName:
setMeDeviceStatus:
setMetadata:
setMetricsByDay:
setMetricsByMonth:
setMetricsByWeek:
setMiddleName:
setMinimumBreakthroughUrgency:
setMinute:
setMode:
setMode:forModeIdentifier:
setModeConfiguration:forModeIdentifier:
setModeConfiguration:withRequestDetails:completionHandler:
setModeConfigurationModifiedDate:
setModeConfigurations:
setModeIdentifier:
setModeName:
setModeSpecificSettings:
setModeSpecificSettings:identifier:type:modeIdentifier:error:
setModeSymbol:
setModesCanImpactAvailability:
setModesCanImpactAvailability:withError:
setModesCanImpactAvailability:withRequestDetails:completionHandler:
setMonth:
setName:
setNickName:
setNotifyOnEntry:
setNotifyOnExit:
setNumberOfManualSessions:
setNumberOfSessions:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOccurrenceDate:
setOnlyDuringEvent:
setOption:forKey:
setOrganizationName:
setOsBuild:
setPairSyncEnabled:
setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:
setPairedDevice:
setPairedDevice:syncEnabled:
setPartitionType:
setPerformedInitialSyncForPairedDeviceIdentifier:
setPhoneCallBypassSettings:
setPhoneNumbers:
setPredicate:
setPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:
setPredicateFormat:
setPredicateType:
setPreventAutoReply:
setPreventAutoReply:withError:
setPreventAutoReply:withRequestDetails:completionHandler:
setPreviousPairedDevice:
setQueryItems:
setRadius:
setReachable:
setReason:
setReasonOverride:
setRecordID:
setRedactSensitiveData:
setRegionEntered:
setRegionIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
setRequestCachePolicy:
setResultType:
setReverseAction:
setScheduleEnabledSetting:
setScheduleIdentifier:
setScheduleSettings:
setScheduleSettings:withError:
setScheduleSettings:withRequestDetails:completionHandler:
setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:
setScreenMirrored:
setScreenShared:
setSecureConfiguration:
setSemanticType:
setSenderConfiguration:
setSenderConfigurationType:
setService:
setServiceIdentifier:
setServiceQuality:
setSessionDescription:
setShouldAddStoreAsynchronously:
setShouldInferMappingModelAutomatically:
setShouldMigrateStoreAutomatically:
setSource:
setStartDate:
setStartTime:
setStartingToken:
setStoreIconURL:
setSuppressionType:
setSymbolImageName:
setSyncDate:forRecordIDs:forPairedDeviceIdentifier:
setSyncDate:forRecordsMatchingMetadata:forPairedDeviceIdentifier:
setSyncPreferenceEnabled:
setSyncSettings:
setSystemAction:forModeIdentifier:withRequestDetails:completionHandler:
setTargetContentIdentifierPrefix:
setTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:
setTesting:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodWeekdays:
setTimeStyle:
setTimeZone:
setTimeoutHandler:
setTimer:
setTintColorName:
setTransitionHandler:
setTriggers:
setTriggers:forModeIdentifier:
setType:
setUILockState:error:
setURLCache:
setUUID:
setUUIDs:
setUnderlyingHealingSource:
setUnderlyingQueue:
setUnifyResults:
setUserRecordID:
setUserVisibleEndDate:
setValue:
setValue:forKey:
setVisibility:
setWantsActiveModeUpdates:
setWantsGlobalConfigurationUpdates:
setWantsMeDeviceStateUpdates:
setWantsModeUpdates:
setWantsSettingsUpdates:
setWantsStateUpdates:
setWeekday:
setWeekdays:
setWithArray:
setWithObject:
setWithSet:
setWorkoutTriggerEnabled:forWorkoutTriggerManager:
settings
settingsForRecord:
settingsManager:didReceiveUpdatedBehaviorSettings:
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
settingsManager:didReceiveUpdatedScheduleSettings:
settingsManager:didReceiveUpdatedSyncSettings:
settingsWithClientSettings:creationDate:
setupPathMonitor
setupPersistentStoreIfNeeded
sharedContactStore
sharedDaemonWorkloop
sharedInstance
sharedInstanceForBagType:
sharedURLCache
shortDescription
signalAppConfigurationContextUpdateForModeIdentifier:
silenced
silencedModesForContactHandle:withError:
sinkWithCompletion:receiveInput:
sleepingModeForSleepingTriggerManager:
sortUsingComparator:
sortedArrayUsingComparator:
source
sourceSettings
standardUserDefaults
start
startDate
startMonitoringForRegion:
startOfDayForDate:
startTime
state
stateType
statesForPredicate:withDescriptor:error:
statusKitInvitationPayloadWithDateCreated:
statusPublishRequest
stopMonitoringForRegion:
store
storeIconURL
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByRemovingCharactersFromSet:
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
subscribeOn:
substringFromIndex:
substringToIndex:
superclass
supportedActionsByExtensions
supportedIntentsByApp
supportsKettle
supportsSecureCoding
supportsSilenceLists
suspendWithOverrideSetting:completionHandler:
sync
sync:withCompletionHandler:
syncAvailable
syncDictionaryRepresentationWithDate:messageUUID:
syncEnabled
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngine:didCompleteModifyRecordsBatch:error:
syncEngine:didDeleteRecordWithID:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:didEndFetchingChangesForZoneID:
syncEngine:didFetchRecord:
syncEngine:didSaveRecord:
syncEngine:didSaveRecordZone:
syncEngine:didUpdateMetadata:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecord:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:recordToSaveForRecordID:
syncEngine:recordTypeForRecordID:
syncEngine:recordWithIDWasDeleted:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:resolveConflictBetweenClientRecord:andServerRecord:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:wantsRecord:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeleted:removingRecordIDs:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngineDidBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngineWillBeginFetchingChanges:
syncEngineWillBeginModifyingPendingChanges:
syncManager:deviceForDeviceIdentifier:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
syncManager:didReceiveUpdatedScheduleSettings:
syncManager:performModeAssertionUpdatesWithHandler:
syncManager:prepareForSyncToDevices:
syncManager:scheduleSettingsForModeIdentifier:
syncManager:updateOutboundModeAssertion:
syncModeConfigurationsWithRequestDetails:completionHandler:
syncPreferenceEnabled
syncService:didReceiveMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncService:didSendWithRequestIdentifier:withSuccess:error:
syncService:shouldAcceptIncomingMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncSettings
syncSettingsProvider:didReceiveUpdatedSyncSettings:
syncSettingsWithError:
syncSuppressedClient
synchronize
synchronizeNanoDomain:keys:
synchronizeUserDefaultsDomain:keys:
sysdiagnoseDataForDate:redacted:
sysdiagnoseDataIdentifier
sysdiagnoseDictionaryRepresentation
sysdiagnoseRecordKeys
systemActionForActionIdentifier:modeIdentifier:error:
systemActionWithIdentifier:modeIdentifier:error:
systemActionsForModeIdentifier:error:
systemTimeZone
takeAssertionWithDetails:source:startDate:
takeAssertionWithUUID:details:source:startDate:
takeModeAssertionWithDetails:requestDetails:completionHandler:
targetContentIdentifierPrefix
targetContentIdentifierPrefixForApplicationIdentifier:modeIdentifier:error:
targetContentIdentifierPrefixesForModeIdentifier:error:
taskIdentifier
taskState
teamIdentifier
threadIdentifier
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePeriod
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodWeekdays
tintColorName
triggerManager:assertionsWithClientIdentifer:error:
triggerManager:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
triggerManager:latestInvalidationWithClientIdentifer:error:
triggerManager:performModeAssertionUpdatesWithHandler:
triggerManager:takeModeAssertionWithDetails:clientIdentifier:error:
triggeringBundleIdentifiers
triggers
triggersForModeIdentifier:
type
unarchivedObjectOfClass:fromData:error:
underlyingHealingSource
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
unionSet:
uniqueIDOverride
uniqueId
unknownRecordIDsInRecordIDs:
unresolveSourcesForSyncToPairedDevice:
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
update
updateDataWithBlock:
updateDevices:
updateForModeAssertionUpdateResult:
updateForModeAssertions:date:
updateForStateUpdate:
updateModeAssertionsWithContextHandler:error:
updateResult
updateSystemActionWithReverseAction:actionIdentifier:modeIdentifier:
upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:
userAvailabilityInActiveModeForContactHandle:withError:
userAvailabilityTCCApprovedBundleIds
userInfo
userInitiated
userInteractionClient
userRecordID
userVisible
userVisibleEndDate
validate
validatePredicate:compileTimeIssues:runTimeIssues:
value
valueForEntitlement:
valueForKey:
valueForProperty:
values
visibility
visitAddContactEvent:
visitAddGroupEvent:
visitAddMemberToGroupEvent:
visitAddSubgroupToGroupEvent:
visitDeleteContactEvent:
visitDeleteGroupEvent:
visitDropEverythingEvent:
visitRemoveMemberFromGroupEvent:
visitRemoveSubgroupFromGroupEvent:
visitUpdateContactEvent:
visitUpdateGroupEvent:
wantsActiveModeUpdates
wantsMeDeviceStateUpdates
wantsModeUpdates
wantsSettingsUpdates
wantsStateUpdates
wasLastModifiedByThisDevice
weakObjectsHashTable
weakToStrongObjectsMapTable
webIdentifier
weekdays
workflowRunnerClient:didFinishRunningAction:withReverseAction:
workflowRunnerClient:didFinishRunningWorkflowWithError:cancelled:
workflowRunnerClient:didFinishRunningWorkflowWithOutput:error:cancelled:
workflowRunnerClient:didStartRunningWorkflowWithProgress:
workoutModeForWorkoutTriggerManager:
writeRecord:error:
writeRecord:writePartition:error:
writeRecordDictionary:withSecurityClass:toURL:error:
writeToURL:error:
writeToURL:options:error:
zone
zoneID
zoneName
zoneNames
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"24@0:8@"DNDSBackingStoreDictionaryContext"16
@32@0:8@"NSDictionary"16@"DNDSBackingStoreDictionaryContext"24
v56@0:8@16@24Q32@40@48
B56@0:8@16@24Q32@40@48
v44@0:8@16@24B32@36
v56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
B56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
v44@0:8@"<DNDSSyncService>"16@"NSString"24B32@"NSError"36
v24@0:8@16
v24@0:8@"<DNDSKeybagStateProviding>"16
@28@0:8@16B24
@"NSDictionary"28@0:8@"NSDate"16B24
v32@0:8@16@24
v28@0:8@16B24
v16@0:8
v32@0:8@"NSArray"16@"NSArray"24
v32@0:8@"<DNDSIDSSyncEngineDataSource>"16@"NSString"24
v28@0:8@"DNDSPairedDevice"16B24
@40@0:8@16@24@32
@64@0:8@16@24@32Q40Q48Q56
v24@0:8@?16
v40@0:8@16@24@32
d16@0:8
@"NSMapTable"
@"<DNDSSyncService>"
@"DNDSPairedDevice"
@"<DNDSIDSSyncEngineMetadataStoring>"
@"<DNDSKeybagStateProviding>"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSMutableSet"
@40@0:8@"NSString"16@"NSString"24@"NSString"32
@40@0:8@16Q24Q32
@24@0:8^{_NSZone=}16
@"NSNumber"
@40@0:8@"NSDictionary"16@"NSDictionary"24@"DNDSBackingStoreDictionaryContext"32
Q24@0:8Q16
@24@0:8^@16
Q32@0:8@16^@24
Q36@0:8@16B24^@28
Q32@0:8@"<DNDSBackingStoreRecord>"16^@24
Q36@0:8@"<DNDSBackingStoreRecord>"16B24^@28
@"<DNDSBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSBackingStoreDelegate>"16
@40@0:8#16@24Q32
@56@0:8#16@24@32Q40Q48
@32@0:8@16^@24
Q48@0:8@16Q24@32^@40
@"NSURL"
@"<DNDSBackingStoreDelegate>"
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48Q56
@72@0:8@16@24@32@40@48Q56Q64
@"NSUUID"
@"DNDSModeAssertionInvalidationPredicate"
@"NSDate"
@"DNDModeAssertionInvalidationDetails"
@"DNDModeAssertionSource"
@"NSArray"
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@"DNDSAppForegroundTriggerConfiguration"
@"BMStoreEvent"
@"NSObject<OS_os_transaction>"
@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@32@0:8@16@?24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@64@0:8@16@24Q32Q40@48^@56
@"NSDictionary"
@24@0:8Q16
@64@0:8@16@24@32@40@48^@56
Q48@0:8@16@24@32o^Q40
B32@0:8@16@24
B40@0:8@16@24@32
B92@0:8@16@24@32@40Q48Q56@64@72B80o^Q84
B56@0:8@16Q24@32@40o^Q48
@"<DNDSModeRepository>"
@"CNContactStore"
@"DNDSAuxiliaryStateMonitor"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@56@0:8@16@24@32@40^@48
@48@0:8@16@24Q32Q40
@"NSDictionary"48@0:8@"<DNDSBackingStore>"16@"NSDictionary"24Q32Q40
@"<DNDSCachedBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSCachedBackingStoreDelegate>"16
@"<DNDSBackingStore>"
@"<DNDSBackingStoreRecord>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<DNDSCachedBackingStoreDelegate>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@16@?24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"NSError">24
@"BSServiceConnectionListener"
@"DNDSClientDetailsProvider"
@"<DNDSRemoteAvailabilityServiceProviderDelegate>"
@"NSString"
v24@0:8@"CNChangeHistoryDropEverythingEvent"16
v24@0:8@"CNChangeHistoryAddContactEvent"16
v24@0:8@"CNChangeHistoryUpdateContactEvent"16
v24@0:8@"CNChangeHistoryDeleteContactEvent"16
v24@0:8@"CNChangeHistoryAddGroupEvent"16
v24@0:8@"CNChangeHistoryUpdateGroupEvent"16
v24@0:8@"CNChangeHistoryDeleteGroupEvent"16
v24@0:8@"CNChangeHistoryAddMemberToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveMemberFromGroupEvent"16
v24@0:8@"CNChangeHistoryAddSubgroupToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveSubgroupFromGroupEvent"16
@"NSSet"
v24@0:8@"<DNDSContactMonitorListener>"16
B40@0:8@16@24@?32
v40@0:8@16@24@?32
@"NSHashTable"
@"<DNDSContactProviding>"
@"EKEventStore"
{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16@0:8
v32@0:8q16@?24
v48@0:8@16@24@32@?40
v36@0:8@16B24@?28
v48@0:8@16q24@32@?40
B40@0:8@16@24o^@32
B32@0:8@16o^@24
@32@0:8@16o^@24
@24@0:8o^@16
v36@0:8B16q20@?28
v56@0:8B16@20B28B32@36B44@?48
@"<DNDSModeConfigurationProviding>"
@"<DNDSStateProviding>"
@"<DNDSUserAvailabilityTCCProviding>"
@"SKStatusPublishingService"
@"DNDContactHandle"
@"AKAvailability"
@"AKAvailabilityInvitation"
@"NSSet"16@0:8
@"DNDContact"24@0:8@"DNDContact"16
v32@0:8N@16@24
@"NSObject<DNDSAppSpecificSettings>"24@0:8@"DNDPerModeSettingsMO"16
v32@0:8N@"DNDPerModeSettingsMO"16@"NSObject<DNDSAppSpecificSettings>"24
@"NSObject<DNDSAppSpecificSettings>"24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSObject<DNDSAppSpecificSettings>"16
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"NSObject<OS_dispatch_queue>"16@0:8
@"CLLocationManager"16@0:8
@"<DNDSLocationLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLocationLifetimeMonitorDataSource>"16
v32@0:8@"DNDSMeDeviceService"16@"DNDMeDeviceState"24
@"CLLocationManager"
@"DNDSMeDeviceService"
@"DNDSUntilExitLocationLifetimeMonitor"
@"DNDSExplicitRegionLocationLifetimeMonitor"
@"<DNDSLocationLifetimeMonitorDataSource>"
B24@0:8^@16
@"DNDSLocationTriggerConfiguration"
@"DNDSExplicitRegionStore"
@"<DNDSAggregateLocationLifetimeMonitor>"
@"CLRegion"
@"DNDSUntilExitRegionStore"
@80@0:8@16@24@32@40@48@56@64@72
@"NSArray"24@0:8@"NSPredicate"16
@"DNDSModeAssertionUpdateResult"40@0:8@"DNDModeAssertionDetails"16@"DNDModeAssertionSource"24@"NSDate"32
@"DNDSModeAssertionUpdateResult"24@0:8@"DNDSModeAssertionInvalidationRequest"16
@48@0:8@16@24@32@40
v24@0:8N@16
@"DNDSModeAssertionStore"
@"DNDSModeAssertionUpdateResult"
@136@0:8@16@24@32@40Q48Q56@64@72{?=qqq}80@104B112q116q124B132
{?=qqq}16@0:8
q16@0:8
@"DNDSModeRecord"
@"DNDSConfigurationRecord"
@"DNDSConfigurationSecureRecord"
@"DNDSModeConfigurationTriggersRecord"
{?="majorVersion"q"minorVersion"q"patchVersion"q}
v24@0:8Q16
v40@0:8{?=qqq}16
v20@0:8B16
v24@0:8q16
@"CKRecord"24@0:8@"CKRecordID"16
v24@0:8@"CKRecord"16
v24@0:8@"CKRecordID"16
v24@0:8@"CKRecordZoneID"16
@"NSArray"24@0:8@"CKRecordZoneID"16
B24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
v24@0:8@"NSString"16
@"NSData"
v40@0:8@16@24Q32
v64@0:8B16B20i24i28B32B36@40@48@56
@"DNDSMutableMetricsRecord"
@"NSCalendar"
@44@0:8@16@24@32B40
@60@0:8@16@24@32@40@48B56
@"NSArray"24@0:8@"NSArray"16
@"NSPersistentContainer"
@"NSObject<OS_nw_path_monitor>"
v32@0:8@"<DNDSModeConfigurationsStoring>"16@"NSArray"24
Q40@0:8@16@24@32
Q32@0:8@16@24
@"NSDictionary"24@0:8^@16
@"DNDModeConfiguration"32@0:8@"NSString"16^@24
Q40@0:8@"DNDApplicationIdentifier"16@"NSString"24@"NSString"32
Q32@0:8@"DNDContactHandle"16@"NSString"24
B32@0:8@16^@24
B36@0:8@16B24^@28
@28@0:8B16^@20
@20@0:8B16
@"<DNDSModeConfigurationsStoring>"
@"<DNDSModeConfigurationManagerDelegate>"
@40@0:8@16@24@?32
@64@0:8@16@24@32B40B44B48B52B56B60
@"DNDState"16@0:8
@"DNDSModeConfigurationManager"
@"DNDSStateProviderSystemSnapshot"
@"DNDState"
v24@0:8@"<DNDSCachedBackingStore>"16
@"<DNDSCachedBackingStore>"
@52@0:8Q16@24Q32@40B48
@"DNDBypassSettings"
v44@0:8@16@24@32B40
v36@0:8@16@24B32
v32@0:8@"WFWorkflowRunnerClient"16@"NSProgress"24
v44@0:8@"WFWorkflowRunnerClient"16@"WFContentCollection"24@"NSError"32B40
v36@0:8@"WFWorkflowRunnerClient"16@"NSError"24B32
v40@0:8@"WFShojiSystemActionsRunnerClient"16@"WFContextualAction"24@"WFReverseContextualAction"32
v48@0:8@16@24@32@40
v48@0:8@"DNDSAppConfigurationManager"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40
v48@0:8@"DNDSAppConfigurationManager"16@"DNDAppAction"24@"DNDApplicationIdentifier"32@"NSString"40
v32@0:8@"DNDSAppConfigurationManager"16@"NSDictionary"24
v40@0:8@"DNDSAppConfigurationManager"16@"DNDSystemAction"24@"NSString"32
@"DNDSAppConfigurationManager"
@"<DNDSSystemFocusConfigurationCoordinatorDelegate>"
q32@0:8N@16@24
@32@0:8@16Q24
@48@0:8Q16@24Q32@40
@"DNDMeDeviceState"
@"DNDSMeDeviceStore"
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
Q40@0:8@16@24^@32
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"DNDSIDSRecordMetadata"
v32@0:8Q16@?24
@"NPSDomainAccessor"
@"NPSManager"
@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"LNAction"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
@"<DNDSRemoteAppConfigurationServiceProviderDelegate>"
@"DNDSModeConfigurationsRecord"
@"CKRecordZone"
@"NSDictionary"16@0:8
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
v24@0:8@"DNDSModeAssertionUpdateResult"16
v24@0:8@"NSArray"16
v24@0:8@"DNDStateUpdate"16
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@32@0:8@?16^@24
@"DNDSModeAssertionUpdateResult"32@0:8@?<B@?@"<DNDSModeAssertionUpdateContext>">16^@24
@64@0:8@16@24@32@40@48@56
@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@"<DNDSSettingsSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDataSource>"16
@"<DNDSSettingsSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDelegate>"16
@32@0:8B16B20@24
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
@"INCExtensionConnection"
@"LSApplicationRecord"
{atomic_flag="_Value"AB}
v32@0:8@16B24B28
v40@0:8@16Q24@32
v36@0:8@16B24@28
@"DNDSModernAssertionSyncMetadataStore"
@"NSObject<DNDSBackingStore>"
@"<DNDSAssertionSyncManagerDataSource>"
@40@0:8Q16Q24@32
@"DNDSMutableModeAssertionStore"
@32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"NSDictionary"32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@"NSDictionary"16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"BMUserFocusComputedModeStream"
@72@0:8@16Q24Q32Q40B48B52@56@64
@52@0:8@16Q24Q32Q40B48
@56@0:8@16@24@32Q40Q48
@"DNDClientEventBehavior"
@"NSNumber"16@0:8
@76@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72
v24@0:8@"NSNumber"16
@84@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72@76
v32@0:8@"LNActionExecutor"16@"LNConfirmationRequest"24
v32@0:8@"LNActionExecutor"16@"LNDisambiguationRequest"24
v32@0:8@"LNActionExecutor"16@"LNNeedsValueRequest"24
v32@0:8@"LNActionExecutor"16@"LNActionConfirmationRequest"24
v40@0:8@"LNActionExecutor"16@"LNSuccessResult"24@"NSError"32
B32@0:8@"LNActionExecutor"16@"LNAction"24
v32@0:8@"LNActionExecutor"16@?<v@?@"LNSnippetEnvironment">24
v32@0:8@"LNActionExecutor"16@?<v@?@"NSValue">24
v32@0:8@"LNActionExecutor"16@"LNContinueInAppRequest"24
@"LNAction"
@"LNActionExecutor"
@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v48@0:8@16d24Q32@?40
v40@0:8@16d24@?32
@"NSURLSession"
@"DNDSModeAssertionManager"
@"<DNDSScheduleManagerDataSource>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q32@0:8@16N@24
q32@0:8@16@24
@"NSString"32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
q32@0:8@"DNDSSyncEngine"16N@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecord"24@"CKRecord"32
v40@0:8@"DNDSSyncEngine"16@"CKRecordID"24@"NSError"32
v32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
q32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecordZoneID"24@"NSArray"32
@"NSArray"24@0:8@"DNDSSyncEngine"16
v24@0:8@"DNDSSyncEngine"16
v32@0:8@16N@24
v32@0:8@"DNDSIDSSyncEngine"16N@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecordID"24
@"NSArray"24@0:8@"DNDSIDSSyncEngine"16
v24@0:8@"DNDSIDSSyncEngine"16
@"<DNDSModeConfigurationsStoreDelegate>"16@0:8
v24@0:8@"<DNDSModeConfigurationsStoreDelegate>"16
v48@0:8@"<DNDSContactMonitoring>"16@"NSArray"24@"NSArray"32@"NSData"40
v32@0:8@"<DNDSContactMonitoring>"16@"NSDictionary"24
B84@0:8@16@24@32@40{?=qqq}48B72B76B80
B36@0:8@16@24B32
@"<DNDSContactMonitoring>"
@"DNDSSyncEngine"
@"DNDSIDSSyncEngine"
@"<DNDSModeConfigurationsStoreDelegate>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
@"<DNDSPairedDeviceStateMonitorDelegate>"
@64@0:8Q16Q24@32{?=qqq}40
@72@0:8@16@24@32@40q48Q56@64
v56@0:8@16Q24@32@40@?48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSError">48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSString"@"NSError">48
@"<DNDSSyncServiceDelegate>"16@0:8
v24@0:8@"<DNDSSyncServiceDelegate>"16
B64@0:8@16Q24@32@40^@48^@56
@"<DNDSSyncServiceDelegate>"
@24@0:8r*16
v36@0:8I16Q20@28
v32@0:8Q16@24
@"NSObject<OS_xpc_event_publisher>"
@56@0:8@16@24@32@40@48
@"DNDSSenderConfigurationRecord"
@56@0:8@16@24@32Q40@48
@"NSDateComponents"
@24@0:8B16B20
v68@0:8@16@24@32@40@48B56@60
@"DNDSXPCEventPublisher"
@"<DNDSAppFocusConfigurationCoordinatorDelegate>"
@64@0:8@16@24@32Q40Q48@56
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSDate"16@"NSArray"24
@"DNDSIDSRecordMetadata"24@0:8@"DNDSIDSRecordID"16
v40@0:8@"NSDate"16@"NSArray"24@"NSString"32
B24@0:8@"NSDate"16
@32@0:8d16d24
@40@0:8#16@24^@32
@40@0:8#16@24@?32
@48@0:8#16@24@32^@40
@56@0:8#16@24@32@40^@48
B56@0:8@16@24#32@40^@48
B64@0:8@16@24#32@40@48^@56
@24@0:8#16
v32@0:8#16@?24
@"DNDSCoreDataBackingStore"
@28@0:8Q16i24
@"DNDSModeAssertionDetailsRecord"
@"DNDSModeAssertionSourceRecord"
@"DNDSModeAssertionLifetimeRecord"
@"DNDSModeAssertionRecord"
@"DNDSModeAssertionInvalidationDetailsRecord"
@"DNDSModeAssertionInvalidationPredicateRecord"
Q24@0:8@16
@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@56@0:8@16@24B32B36B40B44B48B52
@"DNDSAppSpecificSettingsManager"
v48@0:8@16@24@32^v40
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@52@0:8Q16Q24B32@36@44
@60@0:8Q16Q24@32B40@44@52
@"NSObject<NSFastEnumeration>"
@"<DNDSApplicationIdentifierMapping>"
@"DNDSAppForegroundTriggerConfiguration"24@0:8@"DNDSAppForegroundTriggerManager"16
@"DNDMode"24@0:8@"DNDSDrivingTriggerManager"16
@"DNDMode"24@0:8@"DNDSGamingTriggerManager"16
@"DNDMode"24@0:8@"DNDSMindfulnessTriggerManager"16
@"DNDMode"24@0:8@"DNDSSleepingTriggerManager"16
@"NSSet"24@0:8@"DNDSSmartTriggerManager"16
v28@0:8B16@20
@"DNDModeConfiguration"24@0:8@"DNDSWorkoutTriggerManager"16
v28@0:8B16@"DNDSWorkoutTriggerManager"20
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
@"DNDSConfigurationsRecord"
@"DNDApplicationIdentifier"24@0:8@"DNDApplicationIdentifier"16
@32@0:8Q16@24
B24@0:8N@16
@72@0:8@16@24@32@40@48@56@64
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
@52@0:8@16@24@32@40B48
v28@0:8B16@?20
v40@0:8@16q24B32B36
@"<DNDSSyncEngineMetadataStoring>"
@"<DNDSSyncEngineSynchronizing>"
@"<DNDSSyncEngineLastChanceDataStoring>"
{?="syncEnabled"B"featureEnabled"B"accountAvailable"B"encryptionAvailable"B"supportedDevice"B"testing"B}
@"CKContainer"
@36@0:8@16@24B32
@"DNDSIDSRecordID"
@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeAssertion__>"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"DNDModeConfiguration"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v48@0:8@"NSString"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeConfiguration__>"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDModeConfiguration"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDMode__>"@"NSError">24
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSArray<__NSString__>"@"NSError">32
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSUUID"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
Vv40@0:8@16@24@?32
v40@0:8@"NSNumber"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDAccountFeatureSupport"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppInfo"@"NSError">32
v40@0:8@"NSArray<__NSString__>"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDAppInfo__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDMeDeviceState"@"NSError">24
v48@0:8@"NSNumber"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v64@0:8@16@24@32@40@48@?56
v56@0:8@16@24@32@40@?48
v64@0:8@"NSPredicate"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSPredicate"@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppConfigurationTargetContentIdentifierPrefixesBox"@"NSError">32
v56@0:8@"DNDAppAction"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppActionsBox"@"NSError">32
v48@0:8@"DNDSystemAction"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDSystemAction__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDMeDeviceState"@"NSError">24
@"<DNDSRemoteServiceProviderDelegate>"
@"<DNDSGlobalConfigurationStoreDelegate>"16@0:8
v24@0:8@"<DNDSGlobalConfigurationStoreDelegate>"16
@"DNDSGlobalConfiguration"
@"<DNDSGlobalConfigurationStoreDelegate>"
B24@0:8@"<DNDSKeybagStateObserver>"16
v24@0:8@"<DNDSKeybagStateObserver>"16
v28@0:8@"DNDSGlobalConfigurationManager"16B24
v32@0:8@"DNDSGlobalConfigurationManager"16@"DNDBypassSettings"24
@"DNDState"24@0:8@"DNDSEventBehaviorResolver"16
Q24@0:8@"DNDSEventBehaviorResolver"16
@"DNDBypassSettings"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@"DNDConfiguration"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
B32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@"NSPredicate"40@0:8@"DNDSEventBehaviorResolver"16@"DNDApplicationIdentifier"24@"NSString"32
@32@0:8@16#24
@"NSArray"32@0:8@"<DNDSLifetimeMonitor>"16#24
@"DNDSLocationTriggerConfiguration"24@0:8@"<DNDSLifetimeMonitor>"16
@"NSDictionary"24@0:8@"<DNDSLifetimeMonitor>"16
v24@0:8@"<DNDSLifetimeMonitor>"16
@"DNDModeAssertion"48@0:8@"<DNDSLifetimeMonitor>"16@"DNDModeAssertionDetails"24@"NSString"32^@40
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24@"NSDate"32
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSString"24@?<v@?@"NSString"@"NSObject<OS_xpc_object>">32
v32@0:8@"<DNDSLifetimeMonitor>"16@"DNDSXPCTimer"24
@"DNDClientEventBehavior"56@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24@"DNDSClientDetails"32@"NSDate"40^@48
@56@0:8@16@24Q32@40^@48
@"DNDModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertionInvalidation"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32Q40@"NSString"48^@56
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24Q32Q40@"DNDModeAssertionInvalidationDetails"48^@56
@"NSArray"56@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32@"NSString"40^@48
@"NSArray"32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16@24^@32
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
B44@0:8@16@24B32^@36
@"DNDModeConfiguration"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSDictionary"32@0:8@"DNDSRemoteServiceProvider"16^@24
B44@0:8@"DNDSRemoteServiceProvider"16@"NSString"24B32^@36
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDModeConfiguration"24^@32
B32@0:8@"DNDSRemoteServiceProvider"16^@24
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
@"NSString"32@0:8@"DNDSRemoteServiceProvider"16^@24
B36@0:8@"DNDSRemoteServiceProvider"16B24^@28
Q32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDAccountFeatureSupport"32@0:8@"DNDSRemoteServiceProvider"16^@24
v32@0:8@"DNDSRemoteServiceProvider"16@"NSString"24
@"DNDAppInfo"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"NSArray"24^@32
@"DNDMeDeviceState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16B24B28^@32
B40@0:8@"DNDSRemoteServiceProvider"16B24B28^@32
B64@0:8@16@24@32@40@48^@56
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32^@40
B64@0:8@"DNDSRemoteServiceProvider"16@"NSPredicate"24@"NSString"32@"DNDApplicationIdentifier"40@"NSString"48^@56
@"NSPredicate"56@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40^@48
B64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"NSString"32@"DNDApplicationIdentifier"40@"NSString"48^@56
@"NSDictionary"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
B56@0:8@"DNDSRemoteServiceProvider"16@"DNDAppAction"24@"DNDApplicationIdentifier"32@"NSString"40^@48
B56@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40^@48
B48@0:8@"DNDSRemoteServiceProvider"16@"DNDSystemAction"24@"NSString"32^@40
B48@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"NSString"32^@40
@"NSSet"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
B40@0:8@"DNDSRemoteAvailabilityServiceProvider"16@"DNDApplicationIdentifier"24o^@32
@48@0:8@16@24@32o^@40
B48@0:8@16@24@32o^@40
@"LNAction"48@0:8@"DNDSRemoteAppConfigurationServiceProvider"16@"NSString"24@"NSString"32o^@40
B48@0:8@"DNDSRemoteAppConfigurationServiceProvider"16@"NSString"24@"NSString"32o^@40
@"DNDSPairedDevice"24@0:8@"<DNDSAssertionSyncManager>"16
@"NSSet"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDSPairedDevice"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
@"DNDModeAssertion"32@0:8@"<DNDSAssertionSyncManager>"16@"DNDModeAssertion"24
@"DNDScheduleSettings"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
B24@0:8@"<DNDSAssertionSyncManager>"16
v32@0:8@"<DNDSAssertionSyncManager>"16@?<B@?@"<DNDSModeAssertionUpdateContext>">24
v32@0:8@"<DNDSAssertionSyncManager>"16@"NSArray"24
@"DNDState"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDBypassSettings"24@0:8@"<DNDSSettingsSyncManager>"16
@"DNDSScheduleSettings"24@0:8@"<DNDSSettingsSyncManager>"16
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDBypassSettings"24
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDSScheduleSettings"24
@"NSDictionary"24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"DNDSPairedDevice"24@"DNDSPairedDevice"32
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"NSSet"24@"NSSet"32
v32@0:8@"DNDSModeConfigurationManager"16@"NSArray"24
v40@0:8@"DNDSModeConfigurationManager"16@"NSDictionary"24@"DNDModeConfiguration"32
v32@0:8@"DNDSModeConfigurationManager"16@"DNDMode"24
@"DNDState"24@0:8@"DNDSAppFocusConfigurationCoordinator"16
v32@0:8@"DNDSAppFocusConfigurationCoordinator"16@"NSString"24
@"DNDState"24@0:8@"DNDSSystemFocusConfigurationCoordinator"16
B32@0:8Q16^@24
@56@0:8@16Q24Q32@40^@48
v32@0:8Q16q24
v40@0:8Q16q24q32
B32@0:8Q16@24
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleLifetimeMonitor"
@"DNDSLocationLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSAppFocusConfigurationCoordinator"
@"DNDSSystemFocusConfigurationCoordinator"
@"DNDSAppForegroundTriggerManager"
@"DNDSBiomeDonationManager"
@"DNDSDrivingTriggerManager"
@"DNDSGamingTriggerManager"
@"DNDSMindfulnessTriggerManager"
@"DNDSSleepingTriggerManager"
@"DNDSSmartTriggerManager"
@"DNDSWorkoutTriggerManager"
@"DNDSStateProvider"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"DNDSRemoteAvailabilityServiceProvider"
@"DNDSRemoteAppConfigurationServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
@"DNDSReachability"
@"DNDSXPCEventStream"
@"FBSDisplayLayoutMonitor"
@"DNDSGlobalConfigurationStore"
@"DNDSGlobalConfigurationManager"
@"DNDSModeConfigurationsStore"
@"DNDSPlaceholderModeManager"
@"DNDSContactMonitor"
@"DNDSAppInfoCache"
@"DNDSUserAvailabilityCoordinator"
@"STFocusStatusDomainPublisher"
@"DNDSMetricsManager"
@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v28@0:8@"<DNDSGlobalConfigurationStoring>"16B24
B28@0:8B16^@20
@"<DNDSGlobalConfigurationStoring>"
@"<DNDSGlobalConfigurationManagerDelegate>"
@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-305.123
!I!0
source
applicationIdentifier
displayName
storeIconURL
cachedIconURL
syncEngine
action
modifiedRecords
deletedMetadata
metadataAck
ackAction
syncDate
update
replace
unlock
resync
com.donotdisturb.server.DNDSIDSSyncEngine
v8@?0
enabled
disabled
com.apple.donotdisturb.DNDSIDSSyncEngine
zones
pairedDevice
syncState
retriesAvailable
inflightExpirationTime
inflightMetadata
inflightMetadataByRequestIdentifier
inflightDateByRequestIdentifier
role
v20@?0B8@"NSError"12
v28@?0B8@"NSString"12@"NSError"20
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
AppConfigurationAction
header
version
timestamp
data
NSDictionary
Unexpected version number
com.apple.donotdisturb.server.JSONBackingStore
deviceOutOfSpace
<%@: %p; UUID: %@; predicate: %@; requestDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
v24@?0q8^B16
com.apple.donotdisturb.lifetime-monitor.%@
@"NSString"16@?0@"NSUUID"8
active-uuids
preventAutoReply
bypassSettings
modesCanImpactAvailability
lastModified
automaticallyGenerated
.donotdisturb.trigger
com.apple.donotdisturb.private.app-launch
com.apple.donotdisturb.private.biome-app-launch.queue
com.apple.donotdisturb.appForeground.coalescing
B16@?0@"DNDModeAssertion"8
system
com.apple.donotdisturb.appLaunch
eventBody.bundleID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.donotdisturb.appLaunch.event-coalescing
com.apple.focus.activity-manager
B16@?0@"<DNDSModeAssertionUpdateContext>"8
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
reason
@"NSDictionary"16@?0@"DNDSEventBehaviorResolution"8
resolution-record
B24@?0@"DNDSEventBehaviorResolution"8@16
is NOT
com.apple.cmas
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
@16@?0@"CNContact"8
B16@?0@"DNDSEventBehaviorResolution"8
WKPushBundleMetadata
manifestId
UI locked
UI unlocked
<invalid>
com.apple.donotdisturb.availability.service.launching
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.donotdisturbd.%@
User Notifications are disabled for this App.
Focus Status is not shared with this App.
App is missing Communication Notifications entitlement.
FocusMode
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
com.apple.donotdisturb.server.ContactMonitor
v32@?0@"NSArray"8@"NSArray"16@"NSData"24
v24@?0@"NSArray"8^B16
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
v24@?0@"NSString"8@"NSObject<OS_xpc_object>"16
B16@?0@"EKEvent"8
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
@"NSUUID"16@?0@"DNDModeAssertion"8
default
com.donotdisturb.server.AvailabilityCoordinator
com.donotdisturb.server.ExtensionLaunch
v16@?0q8
v24@?0@"DNDSUserAvailabilityPublishResult"8@"NSArray"16
v32@?0@"NSString"8@"AKAvailability"16@"NSError"24
@"NSSet"24@?0@"NSArray"8@"NSArray"16
v16@?0@"DNDSUserAvailabilityPublishResult"8
com.apple.MobileSMS
v24@?0@"INIntentResponse"8@"NSError"16
NSExtension
NSExtensionPointIdentifier
com.apple.watchkit
XCTest
v16@?0@"NSError"8
Calling bundleId does not have permission to read user availability.
Call to -[SKStatusPublishingService publishStatusRequest:completion:] timed out
Caller does not have permission to trigger publishing user availability.
AVAILABLE
UNAVAILABLE
v24@?0@"NSString"8@"NSError"16
DNDAppAction
com.apple.donotdisturb.server.until-i-leave
com.donotdisturb.server.LocationLifetimeMonitor
CLCircularRegion
DNDModeAssertionExplicitRegionLifetime
%@.private.region.%@
Failed to load current explicit region database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSLocationLifetimeMonitor.m
Failed to write store
<%@: %p; enteredRegionIdentifiersPendingExit: %@>
enteredRegionIdentifiersPendingExit
Failed to load current region database
<%@: %p; activeAssertionUUIDs: %@; hasActiveLifetimes: %@; currentRegion: %@; regionEntered: %@>
activeLifetimeAssertionUUIDs
@16@?0@"NSString"8
currentRegion
regionIdentifier
regionCenterLatitude
regionCenterLongitude
regionRadius
regionEntered
@16@?0@"NSUUID"8
unknown
inside
outside
act-update-fuzz-floor
act-update-fuzz-ceiling
act-update-disabled
act-update-coalescing-interval
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; timePeriodWeekdays: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodWeekdays
bedtimeBehaviorEnabledSetting
<%@: %p; meDeviceStatus: %@; meDeviceName: %@>
meDeviceStatus
meDeviceName
<%@: %p; placeholderModes: %@>
placeholderModes
Inactive
Active
PerModeSettings
storeAssertionRecords
storeInvalidationRecords
storeInvalidationRequestRecords
assertionUUID
assertionStartDateTimestamp
assertionDetails
assertionSource
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsUserVisibleEndDate
assertionDetailsLifetime
assertionDetailsReason
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
assertionDetailsScheduleLifetimeScheduleIdentifier
assertionDetailsScheduleLifetimeBehavior
assertionDetailsExplicitRegionLocationLifetimeLatitude
assertionDetailsExplicitRegionLocationLifetimeLongitude
assertionDetailsExplicitLocationRegionLifetimeRadius
assertionDetailsExplicitRegionLocationLifetimeRegionIdentifier
assertionClientIdentifier
assertionSourceDeviceIdentifier
invalidationAssertion
invalidationDateTimestamp
invalidationDetails
invalidationSource
invalidationReason
invalidationReasonOverride
invalidationDetailsIdentifier
invalidationRequestUUID
invalidationRequestPredicate
invalidationRequestDateTimestamp
invalidationRequestDetails
invalidationRequestSource
invalidationRequestReason
invalidationRequestReasonOverride
invalidationPredicateType
dateInvalidationPredicateDate
clientIdentifierInvalidationPredicateIdentifiers
UUIDInvalidationPredicateUUIDs
Library
DoNotDisturb
Assertions.json
Settings.json
Metrics.json
BulletinBoard
BehaviorOverrides.plist
UntilExitRegion.json
ExplicitRegion.json
ModeConfigurations.json
ModeConfigurationsSecure.json
GlobalConfiguration.json
System
PlaceholderModes.ipados.json
PlaceholderModes.json
SyncEngineMetadata.plist
SyncEngineLastChance.plist
IDSSyncEngineMetadata.plist
AssertionSyncMetadata.plist
MeDeviceStatus.json
@"NSDictionary"16@?0@8
user-requested
assertionDetailsUserRequested
schedule
com.apple.donotdisturb.schedule.default
expire-on-end
storeLastCompleteInvalidationTimestamp
user-changed-state
storeLastCompleteInvalidationReason
assertionDetailsSyncSuppressionOptions
storeLastUpdateDate
storeLastCompleteInvalidationSourceClientIdentifier
storeLastCompleteInvalidationSourceDeviceIdentifier
@"NSDictionary"16@?0@"NSMutableDictionary"8
invalidationSourceClientIdentifier
invalidationSourceDeviceIdentifier
AppConfigurationTargetContentIdentifierPrefix
NSString
B16@?0@"DNDModeAssertionInvalidation"8
q24@?0@"DNDModeAssertion"8@"DNDModeAssertion"16
q24@?0@"DNDSModeAssertionInvalidationRequest"8@"DNDSModeAssertionInvalidationRequest"16
B16@?0@"DNDSModeAssertionInvalidationRequest"8
q24@?0@"DNDModeAssertionInvalidation"8@"DNDModeAssertionInvalidation"16
default.device
assertionDetailsScheduleLifetimeLatitude
assertionDetailsScheduleLifetimeLongitude
assertionDetailsScheduleLifetimeRadius
assertionDetailsScheduleLifetimeRegionIdentifier
<%@: %p; interruptionSuppression: %@>
<%@: %p; mode: %@; configuration: %@; secureConfiguration: %@; triggers: %@; impactsAvailability: %@; dimsLockScreen: %@; created: %@; lastModified: %@; lastModifiedByVersion: %@; lastModifiedByDeviceID: %@; automaticallyGenerated: %@; compatibilityVersion: %@; hasSecureData: %@>
<%@: %p; mode: %@; impactsAvailability: %@; dimsLockScreen: %@>
mode
configuration
secureConfiguration
triggers
secureTriggers
impactsAvailability
dimsLockScreen
created
lastModifiedByVersion
lastModifiedByDeviceID
compatibilityVersion
resolvedCompatibilityVersion
hasSecureData
metadata
systemFields
systemFieldsRecordID
systemFieldsData
userRecordID
accountStatus
encryptionAvailable
zoneNames
com.apple.donotdisturb.server.MetricsManager
com.apple.donotdisturb.control-center.module
com.apple.private.Carousel.control-center.DND.state
none
com.apple.donotdisturb.assertionTaken
manual
type
controlCenterPhone
controlCenterWatch
scheduleIdentifier
hour
lockState
weekday
@"NSDictionary"8@?0
com.apple.donotdisturb.kit.lifetime.one-hour
com.apple.donotdisturb.kit.lifetime.evening
com.apple.donotdisturb.kit.lifetime.morning
com.apple.donotdisturb.kit.lifetime.location
com.apple.donotdisturb.kit.lifetime.event
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.dailyHeartbeat
manuallyEnabled
numberOfSessions
numberOfManualSessions
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
com.apple.donotdisturb.weeklyHeartbeat
com.apple.donotdisturb.monthlyHeartbeat
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/Metrics/DNDSMetricsManager.m
MMMMYYYY
en_US
<%@: %p; minimumBreakthroughUrgency: %@; ; allowedThreads: %@; ; deniedThreads: %@; >
minimumBreakthroughUrgency
allowedThreads
deniedThreads
com.apple.donotdisturb.server.ScheduleLifetimeMonitor.timer
com.apple.donotdisturb
DNDSettingsModel
momd
Settings.sqlite
donotdisturbd
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
com.apple.donotdisturb.reachability
v16@?0@"NSObject<OS_nw_path>"8
com.apple.donotdisturb.server.ModeConfigurationsManager
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Failed to load configurations
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSModeConfigurationManager.m
Saving configuration
Saved configurations
Failed to save configuations
Error saving configurations
Failed to save configuations; first lock
com.apple.donotdisturb.ModeConfigurationsManager
@"DNDSModeAssertionRecord"16@?0@8
com.apple.donotdisturb.legacy-watch-toggle
@"NSDictionary"16@?0@"DNDSModeAssertionRecord"8
webIdentifier
givenName
com.apple.donotdisturb.PlaceholderModeManager
Failed to load placeholder modes
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSPlaceholderModeManager.m
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
bundleID
platform
<%@: %p; preventAutoReply: %@; bypassSettings: %@; modesCanImpactAvailability: %@; lastModified: %@; automaticallyGenerated: %@>
com.apple.donotdisturb.private.system-actions
B16@?0@"DNDSystemAction"8
 reverse
identifier
Main
Secondary
<schedule: enabled: %@; %@; bedtime: %@; creation: %@>
com.apple.donotdisturb.private.fmf-me-device.queue
com.apple.donotdisturb.DNDSMeDeviceService.call-out
Failed to load current 'Me Device' database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSMeDeviceService.m
Failed to write 'Me Device' store
class
enabledSetting
DNDModeConfigurationTrigger
DNDModeConfigurationScheduleTrigger
DNDModeConfigurationSmartTrigger
DNDModeConfigurationWorkoutTrigger
DNDModeConfigurationSleepingTrigger
DNDModeConfigurationDrivingTrigger
DNDModeConfigurationGameControllerTrigger
DNDModeConfigurationMindfulnessTrigger
DNDModeConfigurationAppForegroundTrigger
DNDModeConfigurationLocationTrigger
bundleIdentifier
creationDate
latitude
longitude
radius
referenceFrame
detail
<%@: %p; triggers: %@>
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
com.apple.donotdisturb.SettingsManager
interruption-behavior
%@ (%@)
behavior-settings
creation-date-local
creation-date-timestamp
start-time
%lu:%lu
end-time
bedtime-enabled
schedule-settings
cloud-enabled
local-enabled
sync-settings
<%@: %p; metadata: %@; data: %@>
<%@: %p; assertions: %@; invalidations: %@>
com.apple.developer.usernotifications.communication
AppConfigurationPredicate
<%@: %p>
<%@: %p; date: %@>
date
<%@: %p; clientIdentifiers: %@>
clientIdentifiers
<%@: %p; UUIDs: %@>
UUIDs
com.apple.donotdisturb.trigger.workout
com.apple.donotdisturb.private.workout-trigger
com.apple.nano
workoutDND
com.apple.donotdisturb.private.biome-workout.queue
WorkoutDNDStateChangedNotification
com.apple.donotdisturb.private.nps-workout.queue
%@.%@
com.apple.donotdisturb.workoutTrigger
start
stop
resume
pause
unspecified
com.apple.donotdisturb.appconfiguration.service.launching
com.apple.donotdisturb.DNDSSyncEngineLastChanceDataStore.queue
com.donotdisturb.server.sync.legacy
com.donotdisturb.server.sync.legacy.workout
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
DNDStateChangedNotification
DNDAssertStateChangedNotification
B16@?0@"DNDSModeAssertionManagerUpdateContext"8
B16@?0@"DNDStateModeAssertionMetadata"8
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
com.apple.donotdisturb.server.ModeAssertionManager
Failed to load assertion database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSModeAssertionManager.m
com.apple.private.dndtool
com.apple.donotdisturbd.nonPersistentAssertionTransaction
DNDSModeConfigurationsRecordData
DNDSModeConfigurationsRecordPartitionedData
DNDSModeConfigurationsRecordMainPartition
DNDSModeConfigurationsRecordSecondaryPartition
DNDSModeConfigurationsVersion
DNDSModeConfigurationsLastModified
DNDSModeConfigurationsMinimumRequiredVersion
DNDSModeConfigurationsRecordForceUpdate
DNDSModeConfigurationsSourceDeviceIdentifier
DNDSModeConfigurationsSourceFrameworkVersion
com.apple.donotdisturb.daemon_workloop
<%@: %p; metricsByDay: %@; lastDailyHeartbeat: %@; metricsByWeek: %@; lastWeeklyHeartbeat: %@; metricsByMonth: %@; lastMonthlyHeartbeat: %@>
metricsByDay
lastDailyHeartbeat
metricsByWeek
lastWeeklyHeartbeat
metricsByMonth
lastMonthlyHeartbeat
com.apple.donotdisturb.trigger.driving
com.apple.donotdisturb.private.driving-trigger
com.apple.donotdisturb.private.biome-driving.queue
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
<%@: %p; applicationConfigurationType: %@; senderConfigurationType: %@; suppressionType: %@; minimumBreakthroughUrgency: %@; hideApplicationBadges: %@; compatibilityVersion: %@>
applicationConfigurationType
senderConfigurationType
suppressionType
hideApplicationBadges
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
<%@: %p; assertions: %@; invalidations: %@; invalidationRequests: %@>
lastReceivedStoreDate
lastSentStoreDate
pendingLastSentStoreDate
lastUpdateDate
deviceIdentifiers
@"DNDModeAssertion"16@?0@"DNDModeAssertion"8
@"DNDModeAssertionInvalidation"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequest"8
@16@?0@"DNDModeAssertion"8
com.apple.donotdisturb.server.ModernAssertionSyncManager
com.apple.donotdisturb.pendingUpdate
Focus detected excessive change rate.
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSModernAssertionSyncManager.m
com.apple.donotdisturb.sync
forced 
@16@?0@"DNDSPairedDevice"8
v32@?0@"_DNDSSyncMessageGroup"8@"NSMutableArray"16^B24
Failed to load assertion sync metadata store
v24@?0@"NSString"8@"NSDate"16
Failed to write sync metadata
com.apple.donotdisturb.AssertionSync
device %@
last-received-dates
last-sent-dates
message %@
pending-messages
.private.schedule
sendDate: %@; deviceIdentifiers: %@
<%@: %p; lastReceivedStoreDate: %@; lastSentStoreDate: %@; pendingLastSentStoreDate: %@>
@"DNDSModeAssertionInvalidationRecord"16@?0@8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
%@Local
B16@?0@8
Error writing migrated settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p%@%@; deviceIdentifier: '%@'; deviceClass: %@; assertionSyncProtocolVersion: %lu; configurationSyncProtocolVersion: %lu; iOS14EraOS: %@; supportsSilenceLists: %@; iCloudEnabled: %@; syncServiceType: %@; pairingIdentifier: %@; pairingDataStore: %@>
; deviceName: '%@'
; build: %@
phone
watch
<unhandled>
local
cloud
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
SystemAction
DNDSystemAction
DNDSSystemAction
<%@: %p; enabled: %@; manuallyEnabled: %@; numberOfSessions: %@; numberOfManualSessions: %@; enabledFromControlCenterPhone: %@; enabledFromControlCenterWatch: %@; enabledForOneHour: %@; enabledUntilEvening: %@; enabledUntilMorning: %@; enabledAtLocation: %@; enabledDuringEvent: %@; enabledDrivingMode: %@; enabledSleepMode: %@>
numOfSessions
numOfManualSessions
<%@: %p; %@; dayOfWeek: %@>
com.apple.donotdisturb.DNDSAuxiliaryStateMonitor.queue
calendar
date-interval
current-location
explicit-region
match-schedule
com.apple.donotdisturb.trigger.sleeping
com.apple.donotdisturb.private.sleeping-trigger
com.apple.donotdisturb.private.biome-sleeping.queue
appInfo
monitoredBundleIdentifiers
AppInfoMetadata.plist
com.apple.donotdisturb.server.AppInfoCache
com.apple.donotdisturb.iconcache
IconCache
https://itunes.apple.com/lookup
bundleId
country
entity
software,iPadSoftware,macSoftware
limit
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"DNDAppInfo"8
%@_%@.%@
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
results
trackName
artworkUrl100
kind
software
ipad-software
mac-software
v16@?0@"NSDictionary"8
com.apple.NanoStopwatch
APP_NAME_STOPWATCH
com.apple.NanoMenstrualCycles
APP_NAME_CYCLE_TRACKING
com.apple.watchmemojieditor
APP_NAME_MEMOJI
com.apple.NanoHeartRhythm
APP_NAME_ECG
com.apple.private.NanoTimer
APP_NAME_TIMER
com.apple.NanoOxygenSaturation.watchkitapp
APP_NAME_BLOOD_OXYGEN
com.apple.NanoAlarm
APP_NAME_ALARMS
com.apple.NanoTips
APP_NAME_TIPS
com.apple.NanoSleep.watchkitapp
APP_NAME_SLEEP
com.apple.Mind
APP_NAME_MINDFULNESS
com.apple.NanoNowPlaying
APP_NAME_NOW_PLAYING
com.apple.Noise
APP_NAME_NOISE
com.apple.NanoRemote
APP_NAME_REMOTE
com.apple.HeartRate
APP_NAME_HEART_RATE
com.apple.MobileStore
APP_NAME_ITUNES_STORE
com.apple.Health
APP_NAME_HEALTH
com.apple.Bridge
APP_NAME_WATCH
com.apple.Passbook
APP_NAME_WALLET
com.apple.camera
APP_NAME_CAMERA
com.apple.store.Jolly
APP_NAME_APPLE_STORE
com.apple.mobilephone
APP_NAME_PHONE
com.apple.donotdisturb.private.schedule
@"NSString"16@?0@"NSString"8
v32@?0@"NSString"8@"NSArray"16^B24
overrideType
overrideMode
effectiveIntervals
DNDSModeConfigurationsRecord
DNDSModeConfigurations
DNDSModeConfigurationsContactHistoryToken
Local configuration
Remote configuration
modeConfiguration
Writing updated configurations
Configuration
Writing configurations
bundle
@"DNDSClientDetails"16@?0@"NSString"8
AppleInternal
@"NSURL"16@?0@"NSString"8
ClientBundles
@16@?0@"NSURL"8
B16@?0@"NSURL"8
.preload.bundle
@"DNDSClientDetails"16@?0@"NSURL"8
iPod
iPad
iPhone
Watch
com.apple.donotdisturb.server.PairedDeviceStateMonitor
B16@?0@"DNDSPairedDevice"8
v12@?0i8
com.apple.donotdisturb.PairedDevice
assertion-protocol-version
config-protocol-version
icloud-enabled
name
build
paired-device
cloud-devices
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789
NSPredicate
AppConfigurationActionPredicate
<%@: %p; deviceClass: %@; deviceCapabilities: %@; identifier: %@; frameworkVersion: %@>
<%@: %p; symbolImageName: %@; tintColorName: %@; name: %@; modeIdentifier: %@; semanticType: %zd; visibility: %lu; identifier: %@>
symbolImageName
tintColorName
modeIdentifier
semanticType
visibility
<%@: %p; modeConfigurations: %@>
modeConfigurations
com.donotdisturb.server.IdentityServicesSync
com.apple.donotdisturb.xpc.event.publisher
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
DNDSAllowUnredactedSysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.donotdisturb.sysdiagnose.statehandler
<%@: %p; senderConfiguration: %@; ; allowedApplications: %@; ; deniedApplications: %@; ; allowedWebApplications: %@; ; deniedWebApplications: %@; >
senderConfiguration
platforms
allowedApplications
silencedApplications
allowedWebApplications
silencedWebApplications
ServerGeneral
Resolver
ServiceProvider
AppConfiguration
AppFocusConfigurationTask
AppFocusConfiguration
SystemFocusConfiguration
AppSpecificSettingsManager
AvailabilityProvider
StateProvider
AssertionManager
AssertionStore
IDSTransport
Schedule
AppForegroundTrigger
BiomeDonation
DrivingTrigger
MindfulnessTrigger
GamingTrigger
SleepingTrigger
SmartTrigger
WorkoutTrigger
Settings
AuxiliaryState
SystemState
MeDeviceService
LegacyAssertionSync
LegacySettingsSync
ModernAssertionSync
PairedDeviceState
DateIntervalLifetimeMonitor
LocationLifetimeMonitor
CalendarEventLifetimeMonitor
ScheduleLifetimeMonitor
DefaultLifetimeMonitor
DataMigrator
Sysdiagnose
Metrics
Keybag
CloudSync
ModeConfigurations
GlobalConfiguration
IDSSyncEngine
XPCEventPublisher
startComponents
endComponents
repeatInterval
disableCloudSync
mirrorDNDState
<%@: %p; pairSyncEnabled: %@; cloudSyncEnabled: %@>
com.apple.donotdisturb.private.app-focus-filter.queue
B16@?0@"DNDAppAction"8
v32@?0@"DNDApplicationIdentifier"8@"NSSet"16^B24
v24@?0@"LNAction"8@"NSError"16
v32@?0@"DNDSAppFocusConfigurationTask"8@"LNSuccessResult"16@"NSError"24
stateUpdate
tasksExecuted
com.apple.donotdisturbd.app-focus-filters.first-launch
v16@?0@"NSObject<OS_xpc_object>"8
<%@: %p; assertions: %@; activeAssertionUUIDs: %@; activeDateIntervalByAssertionUUID: %@; interruptionBehaviorSetting: %@; lostModeState: %@; lastUpdate: %@>
syncDates
initialSyncs
pairedDeviceIdentifier
recordID
DNDSAppSpecificSettings
DNDSAppSpecificSettingsRecord
DNDSAppSpecificSettingsApp
DNDSAppSpecificSettingsType
DNDSAppSpecificSettingsIdentifier
DNDSAppSpecificSettingsPayload
PerAppSettingsForAppModeID
PerModeSettingsForModeID
PerAppSettingsForAppMode
PerModeSettingsForMode
ModeForModeIdentifier
ApplicationForBundleIdentifier
DNDSAppSpecificSettingsTypeAppConfigurationAction
DNDSAppSpecificSettingsTypeAppConfigurationPredicate
DNDSAppSpecificSettingsTypeSystemAction
v16@?0@"NSArray"8
Attempt to get mode specific settings before first unlock.
Mode identifier not valid.
Model does not contain provided entity name.
MODE_ID
Error querying settings.
Attempt to get app specific settings before first unlock.
Application's bundle identifier not valid.
BUNDLE_ID
Failed to fetch settings.
Attempt to mode app specific settings before first unlock.
SETTINGS_ID
Attempt to set mode specific settings before first unlock.
Failed to fetch settings to delete.
Unexpected managed object class for entity.
Failed to commit settings.
Attempt to set app specific settings before first unlock.
Attempt to remove mode specific settings before first unlock.
Failed to remote settings.
Failed to remove settings.
identifier IN (%@)
Failed to commit changes.
Attempt to remove app specific settings before first unlock.
Failed to remove app settings.
v16@?0@"DNDPerModeSettingsMO"8
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
user-action
system-state
lifetime-expired
client-ended
client-replaced
server-unresponsive
client-unresponsive
location-lifetime-expired
calendar-event-lifetime-expired
@"DNDSModeAssertionRecord"16@?0@"DNDModeAssertion"8
@"DNDSModeAssertionInvalidationRecord"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@"DNDSModeAssertionInvalidationRequest"8
@"DNDModeAssertion"16@?0@"DNDSModeAssertionRecord"8
@"DNDModeAssertionInvalidation"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
@"NSUUID"16@?0@"NSString"8
com.apple.donotdisturb.trigger.mindfulness
com.apple.donotdisturb.private.mindfulness-trigger
com.apple.donotdisturb.private.biome-mindfulness.queue
com.apple.donotdisturb.mindfulnessTrigger
breathe
reflect
meditation
DNDClientDetails
DNDEventBehaviorResolutionServiceOptions
DNDEventBehaviorResolutionContextDeviceUILocked
DNDModeAssertionServiceOptions
DNDAssertionsPersist
DNDClientIdentifier
DNDSyncSuppressed
DNDiOS14SyncSuppressed
DNDUserInteractive
DNDForceAssertionStatusUpdate
com.apple.donotdisturb.server.AppConfigurationsManager
@16@?0@"DNDMode"8
No action exists for action identifier; ignoring request to set predicate.
No action exists for action identifier; ignoring request to set target content identifier prefix.
v24@?0@"LNFocusConfigurationAppContext"8@"NSError"16
Unable to find system action for reverse action. action=%@; mode=%@
com.apple.donotdisturb.AppConfigurationManager
disableModeConfigurationsSync
disableSync
com.apple.donotdisturbd
dndCompanionCloudSyncDisabled
MirrorDNDStateChangedNotification
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
B16@?0@"DNDModeConfigurationTrigger"8
UUID IN %@
source.clientIdentifier IN %@
source.deviceIdentifier == %@
NOT (details.modeIdentifier IN %@)
B24@?0@"DNDModeAssertion"8@"NSDictionary"16
startDate < %@
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@; configurations: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
configurations
.private.region.
com.apple.donotdisturb.private.region
com.apple.donotdisturb.siri.assistant
com.apple.donotdisturb.preferences
com.apple.siri.Settings
com.apple.springboard.donotdisturb.hid
com.apple.DoNotDisturb.Intents
com.apple.donotdisturb.private.intents
com.apple.donotdisturb.private.intents.user-interactive
com.apple.private.dndtool.user-requested
com.apple.carkitd.assertion-service
com.apple.private.Carousel.school-mode.DND.state
com.apple.donotdisturb.private.gaming-trigger
com.apple.HealthDaemon.assertion-service
com.apple.sleep.sleep-mode
com.apple.sleep.sleep-mode-legacy
com.apple.mobiletimer.bedtime-mode
com.apple.donotdisturb.private.smart-trigger
Available
Source
Reason
SemanticType
ExtensionCount
BundleID
InterruptionSuppression
Count
com.apple.alarm
com.apple.notifyd.matching
com.apple.donotdisturb.%@
Date
UserVisible
<%@: %p; allowedContactTypes: %@; ; deniedContactTypes: %@; ; allowedContactGroups: %@; ; deniedContactGroups: %@; ; allowedContacts: %@; ; deniedContacts: %@; ; phoneCallBypassSettings: %@; >
allowedContactTypes
deniedContactTypes
allowedContactGroups
deniedContactGroups
allowedContacts
silencedContacts
zone
<%@: %p; identifier: %@; zone: %@>
<%@: %p; contactIdentifier: %@; firstName: '%@'; middleName: %@; lastName: %@; nickName: %@; organizationName: %@; phoneNumbers: %@; emailAddresses: %@>
phoneNumbers
contactIdentifier
firstName
middleName
lastName
nickName
organizationName
emailAddresses
value
Record
secureModeConfigurations
com.apple.aps.donotdisturb.sync-engine
com.donotdisturb.server.DNDSSyncEngine
RecordID change was made before sync engine availability.
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSSyncEngine.m
RecordZoneID change was made before sync engine availability.
com.apple.donotdisturb.DNDSSyncEngine
allowSyncEngineCreation
accountAvailable
featureEnabled
supportedDevice
syncEnabled
testing
%@ %@:%@(%@)
lastChanceStore
available
unavailable
v28@?0@"NSString"8B16@"NSError"20
v24@?0q8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
LocalModeConfigurations.json
LocalModeConfigurationsSecure.json
LocalGlobalConfiguration.json
SyncedGlobalConfiguration.json
allowed
suppressed
Application
deleted
<%@: %p; recordID: %@; lastModified: %@; deleted: %s>
com.apple.donotdisturb.trigger.gaming
com.apple.donotdisturb.private.biome-gaming.queue
com.apple.donotdisturb.gamingTrigger
PerAppSettings
com.apple.donotdisturb.service.launching
com.apple.donotdisturb.service.non-launching
com.apple.donotdisturbd.remoteserviceprovider
v24@?0@"DNDSClientConnectionDetails"8@"BSServiceConnection<BSServiceConnectionContext>"16
B16@?0@"NSString"8
@"DNDSClientConnectionDetails"16@?0@"DNDSClientConnectionDetails"8
Mode assertion not found for assertion UUID.
com.apple.focus.current-sentinel
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.auxiliary-state.modification.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.request.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.modify.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.availability.client-identifiers
com.apple.private.donotdisturb.medevicestate.client-identifiers
com.apple.FocusSettings
com.apple.Focus-Settings.extension
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
assertion.source.clientIdentifier IN %@
DNDSGlobalConfigurationRecord
DNDSGlobalConfigurationRecordData
DNDSGlobalConfigurationRecordEncryptedData
DNDSGlobalConfigurationVersion
DNDSGlobalConfigurationMinimumRequiredVersion
DNDSGlobalConfiguration
prevent
allow
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Internal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
dnd.keybag.observers
dnd.keybag
com.apple.private.alloy.donotdisturb
com.apple.private.alloy.status.personal
v24@?0@"DNDSUserAvailabilityPublishResult"8q16
com.donotdisturb.server.Server
SignificantTimeChangeNotification
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
No mode configuration found for mode identifier.
v16@?0@"<DNDSAssertionSyncManager>"8
Found
No current action is available. Supply the caller with the default.
v16@?0@"STMutableFocusStatusDomainData"8
Migrated default mode
v32@?0@"DNDMode"8Q16^B24
@16@?0@"DNDModeConfigurationTrigger"8
B16@?0@"NSUUID"8
isPlaceholder == NO
NONE %@.modeIdentifier == modeIdentifier
isPlaceholder == YES
ANY %@.modeIdentifier == modeIdentifier
com.apple.donotdisturb.trigger.smart
com.apple.donotdisturb.private.biome-inferred-mode.queue
B16@?0@"DNDMode"8
com.apple.donotdisturb.smartTrigger
eventBody.isAutomationEnabled
com.apple.donotdisturb.GlobalConfigurationManager
globalConfiguration
Error saving configuration
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturbServer/DNDSGlobalConfigurationManager.m
IDS sync engine is disabled because of feature flag
IDS sync engine is disabled because of unsupported device
IDS sync engine is available
Ignoring records as the sync engine is disabled: %{public}llu
IDS sync engine changed to %{public}s
Ignoring paired device/enabled change as the sync engine is not available: %{public}llu
Paired device changed from %{public}@ to %{public}@
Ignoring paired device not supported by IDS Sync Engine: %@
Ignoring incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as it is not from the active device: deviceIdentifier=%{public}@, pairedDevice=%{public}@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%{public}lu, currentVersionNumber=%{public}lu
Ignoring message send callback as the sync engine is disabled: %{public}llu
Error in didSendWithRequestIdentifier sending record modifications: %{public}@
Removed %{public}llu inflight records; %{public}llu remaining
%{public}llu outstanding request identifiers
Sync because keybag is unlocked
Metadata store is invalid; purging
Will not sync because keybag is locked
Will not sync because sync is inactive
Will not sync because pairedDeviceIdentifier is nil
Performing sync for all data sources
Will not send ack because keybag is locked
Will not send ack because sync is inactive
Will not send ack because action is nil
Sending ack for action %{public}@ with %{public}llu record metadata items
Sent %{public}llu record metadata items in ack
Error sending metadata ack: %{public}@
Will not send unlock message because keybag is locked
Will not send unlock message because sync is inactive
Sent unlock message
Failed to send unlock message: %{public}@
Will not send resync message because sync is inactive
Sent resync message
Failed to send resync message: %{public}@
Will not send records because keybag is locked
Will not send records because sync is inactive
Will not send records because pairedDeviceIdentifier is nil
Sending %{public}llu modified records and %{publi}llu deleted record IDs
Paired device has synced before; sending as update
Paired device has never synced; sending as replace
Metadata for modified record with ID %{public}@ is already syncing
Modified record could not be serialized: %@
Metadata for deleted record with ID %{public}@ is already syncing
Deleted record metadata could not be serialized: %@
Update message is empty; will not send
Syncing %{public}llu modifications and %{public}llu deletions
Added %{public}llu inflight records; %{public}llu remaining
Sent %{public}llu modified record IDs and %{publi}llu deleted record IDs
Error in sendMessage sending record modifications: %{public}@
Exhausted retry attempts; will not try again
Will not set retry timer because keybag is locked
Will not set retry timer because sync is inactive
Retry timer will fire in %llus
Retry timer fired (attempt #%{public}llu)
Resetting retry timer
Cancelling retry timer
No inflight metadata; will not start expiration timer
Will not set expiration timer because keybag is locked
Will not set expiration retry timer because sync is inactive
Expiration timer will fire in %llus
Expiration timer fired
Cancelling expiration timer
Will not handle message because sync is inactive
Unknown action %{public}@
Received resync message
Received ack message for action %{public}@
Paired device has performed an initial sync
Received unlock message
Received update message
Ignoring update from paired device that we have never synced with
Sending modified record %{private}@ to data source %{public}@
Incoming modified record %{private}@ has an older lastModified date than the existing record
Sending deleted recordID %{private}@ to data source %{public}@
Incoming deleted metadata %{private}@ has an older lastModified date than the existing metadata
Received replace message
Paired device should never send a replace message
Metadata store is invalid; purging and syncing
Unexpected version number %{public}llu (maximum version number %{public}llu)
Updated assertions for app launch triggers: configuration=%@
Don't have trigger for identifier '%@'. Invalidating...
Refreshing with event %@
Adding biome app launch event monitor for %{public}@
AppLaunch subscription completed: state=%ld error=%{public}@
Received app launch event: bundleID=%{public}@ starting=%{public}@ event=%{public}@
reset coalescing timer due to bundleID change; updated assertions for app launch event: event=%{public}@
coalescing timer fired; updated assertions for app launch event: event=%{public}@
Resolving breakthrough for active mode: %{public}@.
Couldn't find mode configuration for active mode: %{public}@.
Event was resolved: resolution=%@
Pruned %lu resolutions from record
Resolution modified to accomodate auxiliary state; isScreenMirrored=%d isScreenShared=%d isPresentationModeEnabled=%d
Breakthrough %{public}@ allowed for configuration %@ with event details: %@.
Breakthrough %{public}@ allowed for global settings with event details: %@.
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Filled out missing contact identifier: %{public}@ from sender: %@ to determine breakthrough.
Updated contact identifier to %{public}@ from sender: %@ to determine breakthrough.
No change to contact identifier from sender: %@ to determine breakthrough.
Resolving breakthrough through for configuration: %@ with event details application: %{public}@, sender: %@, urgency: %{public}@, eventType: %{public}@, threadIdentifier: %{public}@
Failed to retrieve an LSApplicationRecord for bundleIdentifier:%@; error=%@
Notification filter predicate from App Context threw during evaluation, exception=%{public}@ bundleIdentifier=%@ modeIdentifier=%@
Notification filter predicate from App Context did not validate, issues=%{public}@ bundleIdentifier=%@ modeIdentifier=%@
Resolving global breakthrough for sender: %@
Failed to lookup contact in address book. predicate=%{public}@, error=%{public}@
Determined whether sharing / mirroring preferences should adjust event behavior; shouldAdjust=%d
XPC connection successfully accepted: connection=%{public}@
[%{public}@] Error determining Focus Status; will report YES for available: error=%{public}@ connection=%{public}@
[%{public}@] Determinined Focus Status: available=%{public}@ connection=%{public}@
[%{public}@] XPC connection without User Notifications authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without sharing authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without Communication Notifications entitlement tried to get Focus Status, will invalidate: connection=%{public}@
Client XPC connection was interrupted: connection=%{public}@
Client XPC connection was invalidated: connection=%{public}@
Contacts store changed
Fetched %{public}lld contacts
Unable to fetch contact change history: %{public}@
Collected %{public}lld changed contacts and %{public}lld
History contains %{public}lld events
Unable to fetch contact change history
count: %{public}@
Refreshing monitor, date=%{public}@
Unable to find matching event for synced assertion; eventIdentifier=%{public}@; assertionIdentifier=%{public}@
No date interval for event; eventIdentifier=%{public}@
Pending date interval for event; eventIdentifier=%{public}@
Active date interval for event; eventIdentifier=%{public}@
Expired date interval for event; eventIdentifier=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor
Skipping publish and invite on resume because User Availability is **still** enabled.
Resuming User Availability publish current availability and update invites for relevant contacts.
Notifying intent extensions of availability on User Availability coordinator resume
Skipping overriding publish on suspend because User Availability is **already** disabled.
Error publishing availability to StatusKit: %{public}@
Published status request with identifier: %{public}@
Forcing intent extensions to available on User Availability coordinator suspend.
Skipping availability coordination because User Availability is disabled.
Ignoring request to coordinate user availability; from and to configurations are the same.
Checking if intent extensions need availability update
update.previousState: %{public}@
update.state: %{public}@
Notifying intent extensions of availability update
Forcing Messages AvailabilityKit status to available on User Availability coordinator TCC revocation.
Forcing intent extensions to available on User Availability coordinator TCC revocation. app=%{public}@
Ignoring request to publish StatusKit availability; from and to configurations are the same.
Found intent extension for app: %{public}@
Intent launcher error: %{public}@
Skipping Intent launch of %@ because relative availability did not change.
App (%{public}@) does not have user availability TCC permission, not launching extension.
App (%{public}@) does not have UN Communication entitlement, not launching extension.
App (%{public}@) does not have UN authorization, not launching extension.
Done dispatching launch blocks to _launchQueue
Skipping invitation send request because User Availability is disabled.
Error getting allowedModesForContactHandle: %@
Error publishing AKAvailabilityInvitation: %@
Successfully published AKAvailabilityInvitation
Forcing availability re-publish despite no updated invitations.
Skipping availability re-publish because no mode is enabled.
Skipping availability re-publish because User Availability is disabled.
Skipping availability re-publish because there were no changes to allowed contacts.
Skipping availability check because User Availability is disabled.
Looking up User Availability permission for bundleId: %{public}@
Empty bundleId passed to isTCCUserAvailabilityGrantedForBundleId
Skipping exceptional modes check because User Availability is disabled.
Skipping availability check for contact because User Availability is disabled.
Messages does not have user availability TCC permission.
Skipping publish because User Availability is disabled.
Error getting mode configuration for %{private}@
Unexpected empty identifier UUID or nil mode for modeIdentifier, modeIdentifier=%{private}@
.impactsAvailability is disabled for %{private}@
Forced focus status update indicating not focused due to TCC revocation
Applying override to focus status update: %@
Informing availability (%{public}@) for activity %{public}@ to StatusKit
Could not fetch a contact for contact: %@
Scoring %{public}llu matches for contact %@
Contact %@ scored %{public}llu
New high score: %{public}llu
Contact %@ has the high score %{public}llu
Explicit region monitoring failed for region; manager=%p, region=%@, error=%{public}@
Explicit region region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed explicit region entry; region=%@
Confirmed explicit region entry, not taking assertion until explicit exit following early invalidation of the assertion associated with prior entry; region=%@
Confirmed explicit region exit for a region pending exit following early invalidation of the assertion associated with prior entry, will note exit; region=%@
Confirmed explicit region exit, will invalidate all assertions; region=%@
Received unexpected explicit region exit, region=%@
Did not handle explicit region state %{public}@; region=%@
Explicit region monitoring encountered a failure; manager=%p, error=%{public}@
Refreshing explicit region monitor
Assertion(s) for region(s) invalidated without exit from region(s); regions=%{public}@
Start monitoring for region; region=%@
Stop monitoring for region; region=%@
Monitoring stopped for an entered region, associated assertion will be invalidated and entrance reset; region=%@
Monitoring stopped for an entered region pending exit following early invalidation of the assertion associated with prior entry, entrance will be reset; region=%@
Failed to load current explicit region database, will request a radar; error=%{public}@
Found existing entered regions for invalidated assertions pending exit.
Wrote out explicit region store to file
Failed to write explicit region store, but error can be ignored; error=%{public}@
Failed to write explicit region store, will request radar; error=%{public}@
Until I leave location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Until I leave location region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed until I leave region entry
Confirmed until I leave region exit, will invalidate all assertions
Received unexpected until I leave region exit, will start region monitoring again
Did not handle until I leave region state %{public}@
Until I leave location monitoring found location, will update geofence; manager=%p, locations=%@
Until I leave location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Refreshing until I leave monitor
Requesting current location to begin monitoring until I leave
Until I leave location monitoring stopping for geofence; region=%@
Until I leave location monitoring started for geofence; region=%@
Failed to load current until I leave region database, will request a radar; error=%{public}@
Found existing until I leave region to begin monitoring
Wrote out until I leave store to file
Failed to write until I leave store, but error can be ignored; error=%{public}@
Failed to write until I leave store, will request radar; error=%{public}@
generating fuzzable %@ - %@ ms
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.takeAssertion
Inserted new assertion into store; assertion=%{public}@
Inserted new invalidation request into store; invalidationRequest=%{public}@
Assertion was already invalidated; assertion=%{public}@
Assertion already exists in store; assertion=%{public}@
Found %lu assertion(s) for predicate: predicate=%{public}@
Found %lu assertion invalidation(s) for predicate: predicate=%{public}@
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.invalidateAssertions
Inserted new invalidation request into store; request=%{public}@
Assertion preserved; assertion=%{public}@
Assertion invalidated; invalidation=%{public}@, invalidationRequest=%{public}@
Assertion already invalidated, skipping work; invalidation=%{public}@, invalidationRequest=%{public}@
[%{public}@] Begin: %{public}@
[%{public}@] %{public}@
[%{public}@] created: %{public}@; lastModified: %{public}@; lastModifiedByVersion: %{public}@; lastModifiedByDeviceID: %@; isAutomaticallyGenerated: %{public}d; compatibilityVersion: %{public}@; hasSecureData: %{public}d; 
[%{public}@] triggers: %{private}@
[%{public}@] configuration: %{private}@
[%{public}@] End
Failed to decode system fields for record %{public}@: %{public}@
Failed to delete metadata store: %@
Failed to load metadata store at url %@: %@
Detected outdated metadata store with version %{public}llu
Failed to write metadata store: %{public}@
Sending assertion taken event
Updating aggregated metrics
Sending daily metrics heartbeat
Sending weekly metrics heartbeat
Sending monthly metrics heartbeat
Metrics Wrote out store to file
Metrics Failed to write store, but error can be ignored; error=%{public}@
Metrics Failed to write store, will request radar; error=%{public}@
Skipping inactive lifetime, lifetime=%{public}@
Attempt to load persistent store before first unlock.
Failed to create backing store directory.
Error adding persistent store: %@
Failed to destroy persistent store: %@
Destroyed persistent store to retry load. url=%@
Loaded persistent store with description: %@
Informed of reachability change to %@
Informing delegates of debounced reachability state: %@
Debounced reachability state (%@) did not change. Ignoring.
Ignoring call to set mode configuration because it is unchanged.
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Secure data will not be written
Secure data will be written
Setting mode configuration with placeholder visibility effectively removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Removing mode configuration for default Focus is not supported; modeIdentifier=%{public}@
Removing mode configuration for custom Focus; modeIdentifier=%{public}@
Removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Failed to load configurations, will request a radar; error=%{public}@
Failed to load configurations but device is under first lock; error=%{public}@
Keybag unlocked for the first time; fixing up mode sender configurations if needed.
Failed to save configurations, but error can be ignored; error=%{public}@
Failed to save configurations, will request a radar; error=%{public}@
Failed to save configurations but device is under first lock; error=%{public}@
Failed to read record to fix up configurations; error=%{public}@
Fixing up mode with sender configuration: %{public}@ to new sender configuration: %{public}@
Fixing up driving mode with secureConfiguration: %{public}@ to new secureConfiguration: %{public}@
Failed to write record to fix up configurations though it was needed; error=%{public}@
Deferring mode sender configuration fixup until keybag unlocked for the first time.
Sanitizing contact %{public}@ failed: error=%{public}@
Calculate DND state for snapshot: activeAssertionUUIDs=%{public}@
assertion for snapshot: assertion=%{public}@
Current DND state was calculated: state=%{public}@
Failed to load placeholder modes, will request a radar; error=%{public}@
Ignoring request to coordinate system configurations; from and to mode are the same.
Handling state update: %{public}@; previous: %{public}@ (%{public}@)
Running system action: runner=%p; action=%{public}@
Running reverse action due to action deletion in active mode. identifier=%{public}@; mode=%{public}@
Running%{public}@ action due to action update in active mode. identifier=%{public}@; mode=%{public}@
Running reverse actions due to action deletion in active mode. mode=%{public}@; identifiers=%{public}@
Finished running system action: runner=%p; action=%{public}@; reverse=%{public}@
Lost track of mode associated with action. identifier=%{public}@; action=%{public}@
%@ partition data is nil in record data %{public}@
Failed to decode %@ partition data %{public}@: %{public}@
Record %{public}@ is not valid JSON
Configuration: %{private}@
Dictionary: %{private}@
Partition: %{private}@
received notification that 'Me Device' status changed fetching devices
received notification that 'Me Device' devices changed fetching devices
determining current 'Me Device' status is not supported
failed to load current 'Me Device' database, will request a radar; error=%{public}@
current 'Me Device' state unknown / incomplete; requesting active device
current 'Me Device' state loaded from store; meDeviceStatus=%{public}@, meDeviceName=%{public}@
wrote out 'Me Device' store to file
failed to write 'Me Device' store, but error can be ignored; error=%{public}@
failed to write 'Me Device' store, will request radar; error=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, but error can be ignored; error=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Refresh workout trigger for system: mode=%{public}@
Invalidating active assertion no mode identifer for workout trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for workout trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for workout trigger in response to event; modeID=%{public}@
Invalidating active assertion workout trigger in response to event; previousModeID=%{public}@
Invalidating active assertion no mode identifer for workout trigger in response to event; previousModeID=%{public}@
Adding biome workout event monitor; mode=%{public}@
Workout subscription completed: state=%ld error=%{public}@
Received workout event: eventType=%{public}@
Updated assertions for workout event: event=%{public}@
Create mode for workout trigger to match existing nano preferences setting.
Created mode for workout trigger: mode=%{public}@
Create mode for workout trigger in response to nano preference update.
Update workout trigger for mode in response to nano preference update: enabled=%{public}@ mode=%{public}@
Refreshed workout trigger for nano preferences update: mode=%{public}@
Workout trigger already matches nano preferences update: mode=%{public}@
Disable workout DND preference for workout trigger mode deletion.
Disable workout DND preference to match disabled workout trigger.
Enable workout DND preference to match enabled workout trigger.
Requesting workout trigger refresh due to nano preferences change
Client request to get current app configuration: bundleIdentifier=%{public}@
Client request to invalidate app context: bundleIdentifier=%{public}@
Failed to delete last chance store: %@
Failed to write last chance store: %@
Failed to serialize last chance store: %@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionToggleDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d, reason=%{public}@
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Unable to find assertions, will return default: error=%{public}@
Unable to find assertion invalidations, will return default: error=%{public}@
com.apple.donotdisturb.ModeAssertionManager.updateModeAssertions
Executed handler; return=%{BOOL}d
Failed to load assertion database, will request a radar; error=%{public}@
Removing stale invalidations from store. %@
Removing stale invalidation requests from store. %@
Wrote out store to file
Failed to write store, but error can be ignored; error=%{public}@
Failed to write store, will request radar; error=%{public}@
No action taken for request to refresh driving trigger; automatic entry not supported
Error decoding behavior overrides: error=%{public}@
Ignoring schedule settings with no override
Error encoding behavior overrides
Got new schedule settings: settings=%{public}@, oldSettings=%{public}@
Got new schedule settings: settings=%{public}@
Got new bypass settings: settings=%{public}@, oldSettings=%{public}@
Got new bypass settings: settings=%{public}@
INCExtensionConnection timeout!! %{public}@
INCExtensionConnection interrupted!! %{public}@
INCExtensionConnection resumeWithCompletionHandler error!! %{public}@
INCExtensionConnection proxy handle error!! %{public}@
Sending forced update to local paired device on resume.
Skipping initial state sync on resume because there isn't a paired device.
Sending update to cloud devices on resume.
Skipping update as it should not require sync: result=%{public}@
Delaying sync of fuzzable change by %@ seconds.
Delaying sync for %@ seconds to coalesce update.
Coalescing timer has delayed sync for %@ seconds. This may indicate a rogue trigger.
Skipping sync due to server bag override.
Rejecting message because cloud sync is disabled.
Rejecting incoming message with unhandled messageType: %@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%lu, currentVersionNumber=%lu
Received message from sync service; syncService=%p, message=%{public}@, versionNumber=%lu, deviceIdentifier=%{public}@
Sent message from sync service; syncService=%p, requestIdentifier=%{public}@, success=%@, error=%{public}@
Unable to find paired device for device identifier %{public}@
Received impossible version number: versionNumber=%lu, currentVersionNumber=%lu
Received store from %{public}@ is older (%{public}@) than the last received store (%{public}@).
%lu assertion(s) were abandoned by the remote device, will invalidate: UUIDs=%{public}@
Incoming store from %{public}@ was older (%{public}@) than the store it replaced (%{public}@). Will re-send...
Error decoding the assertion store from sync message
Sending %{public}@update to devices: %@
Generating message for sync to %@: %@
Skipping sending store to %@ as it is the same as or earlier than the previous (current: %{public}@; previous: %{public}@)
Preparing to sync to %@
Syncing on %{public}@ version %@: %@
Error sending %{public}@ assertions to %@: error=%{public}@
Sending %{public}@ assertions pending with identifier %{public}@
Unable to generate store message for %@
Got send results from unrecognized identifier %{public}@. success: %@, error: %{public}@
Send request %{public}@ failed with error %{public}@. Recipients: %{public}@
Bumping lastUpdateDate for %{public}@ from %{public}@ to %{public}@
Leaving lastUpdateDate unchanged for %{public}@ (%{public}@). Got %{public}@ and already have %{public}@
Rewinding lastUpdateDate for %{public}@ (%{public}@). Got %{public}@ but already have %{public}@
Failed to load load assertion sync metadata store, will request a radar; error=%{public}@
Creating new assertion sync metadata store.
Retiring device(s) from last seen metadata: %@
Retiring device(s) from last sent metadata: %@
Retiring pending message(s) from metadata: %@
Wrote out assertion sync metadata store.
Failed to write assertion sync metadata store, but error can be ignored; error=%{public}@
Failed to write assertion sync metadata store, will request radar; error=%{public}@
Successfully wrote migrated settings
Error writing migrated settings, but error can be ignored; error=%{public}@
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Could not sanitize contacts; will use existing data this time: %{public}@
Fetched %{public}lld sanitizated contacts
Unable to fetch sanitized contacts: %{public}@
Ignoring request to donate for state update; from and to mode are the same.
Biome event(s) donated for mode end: reason=%{public}@ source=%{public}@ from=%{public}@
Biome event(s) donated for mode begin: reason=%{public}@ source=%{public}@ to=%{public}@
Failed to unarchive settings: %{public}@
Failed to archive settings: %{public}@
Task id=%{public}@ Preparing action on %{public}@; action=%{public}@
Task id=%{public}@ Executing prepared action on %{public}@; action=%{public}@
Task id=%{public}@ completed action execution %{public}@:%{public}@; result=%{public}@ error=%{public}@
Unexpected callback: Executor needsConfirmationWithRequest; request=%{public}@
Unexpected callback: Executor needsDisambiguationWithRequest; request=%{public}@
Unexpected callback: Executor needsValueWithRequest; request=%{public}@
Failed to get action metadata for task with actionIdentifier:%{public}@ applicationIdentifier:%{public}@ error=%{public}@
Failed to create connection for task with actionIdentifier:%{public}@ applicationIdentifier:%{public}@ error=%{public}@
No action taken for request to refresh sleeping trigger; automatic entry not supported
App was installed
App was removed
Will not write cache as keybag is locked
Could not create icon cache directory: %{public}@
Failed to serialize metadata store: %{public}@
Will not read cache as keybag is locked
Will not fetch app info as keybag is locked
Could not copy icon for %{private}@ to %{private}@: %{public}@
App lookup of %{private}@ from store failed: %{public}@
Unable to parse store response, bundle identifier is missing: %{public}@
Unable to parse store response, display name is missing: %{public}@
Got app %{private}@ details from the store: %{private}@
Cleaned up %{private}@
Failed to removed cached icon at %{private}@: %{public}@
Monitoring bundle identifiers: %{public}@
Relevant bundle identifiers: %{public}@
Updated assertions for schedule: settings=%{public}@
Unable to update assertions for schedule: error=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: settings=%{public}@
Backing store was purged
Record for %{public}@ does not contain configuration changes.
Remote device is forcing a write that we agree with. device: %@; sourceFrameworkVersion: %{public}@; currentFrameworkVersion: %{public}@; remoteRecordVersion: %{public}@; localRecordVersion: %{public}@;
Remote device is forcing a write that we disagree with. device: %@; sourceFrameworkVersion: %{public}@; currentFrameworkVersion: %{public}@; remoteRecordVersion: %{public}@; localRecordVersion: %{public}@;
Accepting forced write because the remote framework revision is newer than the current version.
Accepting forced write because the remote framework revision is the same as the current version and won the tie-breaker.
Accepting forced write because it came from this device.
Accepting forced write because the remote framework revision is the same as the current version but lost the tie-breaker.
Rejecting forced write because the remote framework revision is older than the current version.
Fetched data with ID %{public}@ is current; applying update
Remote configuration is from a device that has a different version resolution. Updating resolvedCompatibilityVersion from %{public}@ to %{public}@ and bumping lastModified from %{public}@ to %{public}@ and resyncing.
Fetched data with ID %{public}@ is outdated; ignoring update and resending local data
Remote configuration is from a device that doesn't agree with this resolution. Bumping lastModified from %{public}@ to %{public}@ to overcome remote lastModified of %{public}@ and resyncing.
Fetched data with ID %{public}@ could not be reconstructed into a configuration; deleting local configuration
Fetched data with ID %{public}@ could not be reconstructed into a configuration; ignoring update
Fetched record with ID: %{public}@ from device %@ / %@ (force: %{public}@).
Fetched record with ID: %{public}@ from legacy device.
Record has source info set but the mdate doesn't match. Ignoring source and treating as legacy.
Failed to delete record %{public}@: %{public}@
Encountered conflict while saving configuration: %{public}@
Preparing to save record %{public}@
Server removed record %{public}@
Removing all records because zone was deleted
Fetched %{public}llu record IDs for the sync engine
Preparing to save record for IDS sync engine: %{public}@
Fetched record from IDS sync engine with ID: %{public}@
IDS sync engine removed record %{public}@
Purging data for IDS sync engine
Replacing records with default mode configuration
Error deleting records: %{public}@
Could not read current configuration for monitored contacts: %{public}@
Received updated identifierless contacts: %{private}@
Detected matching contact in configuration: %{public}@
Did not encounter any matching configurations
Received updated contacts: %{private}@
Received deleted contact identifiers: %{private}@
Failed to fetch existing configurations: %{public}@
Failed to remove record %{public}@: %{public}@
Writing updated configuration with identifier: %{public}@
Error writing fetched configurations: %{public}@
Merge diff modified: %{public}@
Merge diff deleted: %{public}@
Error writing record: %{public}@
Purging record IDs: %{public}@
Error purging record IDs: %{public}@
Purging data
Could not read records to extract mode identifiers: %{public}@
Fetched %{public}llu mode identifiers
Fetched %{public}llu record IDs for the IDS sync engine
Notifying delegate of available modes: %{public}@
Unable to find device with ID %@. Devices: %@
Paired device state changed: from=%{public}@, to=%{public}@; waiting to coalesce for %@s
Paired device state returned to previously-paired device. Cancelling delegate callbacks. device=%{public}@
Paired device did not change: current=%{public}@
Informing delegates of coalesced paired device state changed: from=%{public}@, to=%{public}@
Ignoring paired device state; coalesced back to the original device: %{public}@
Pairing ID and data store of current watch was invalid; device=%{public}@, pairingID=%{public}@, pairingDataStore=%{public}@
Device class or sync protocol was invalid: device=%{public}@
Paired watch updated, will check for pairing change
Ignoring paired device on cloud channel. %@
Device class was invalid: device=%{public}@
Device protocol version was invalid: device=%{public}@
No change in cloud devices.
Cloud devices initalized. Devices: %@
Cloud devices added: %@. Removed: %@
No change in cloud devices.
Paired device state updated, will check for pairing change
Nearby devices changed, devices=%{public}@
Devices changed, devices=%{public}@
Unexpected macOS version: %@.%@
com.apple.donotdisturb.DNDSIDSSyncService.incomingMessage
Unable to find IDS device for fromID %@
Received sync data: service=%{public}@, account=%{public}@, identifier=%{public}@, message=%{public}@, deviceIdentifier=%@, context=%{public}@
Unable to resolve the device identifier from the IDS ID
Sync data send has finished: identifier=%{public}@, success=%{BOOL}d, error=%{public}@
Send sync data: identifier=%{public}@; Destinations: %@
Failed to send sync data: identifier=%{public}@, error=%{public}@
Unable to find matching IDS identifier for devices %@
Failed to migrate message
Discarding data because delegate did not allow the message
Missing data, will skip message
Missing record version number, will skip message
Invalid version number, will skip message: versionNumber=%{public}@
Received XPC event error %d
%{public}@: Handling XPC event action %d for %llu
Unexpected XPC event action %d from %llu
Failed to convert XPC dictionary to CF dictionary
Registered XPC event subscriber %llu
Removed XPC event subscriber %llu
Published XPC event for %ld
Failed to publish XPC event for %ld with error: %d
Capturing state from %{public}@; date=%{public}@
Packing sysdiagnose state data from %{public}@...
Sysdiagnose captured from %{public}@
Could not capture sysdiagnose from %{public}@ due to too much data
Could not capture sysdiagnose from %{public}@ due to unable to make Plist: error=%{public}@
Capturing statedump from %{public}@
[%{public}@] Begin secure configuration
[%{public}@] Allowed app: %{private}@; %{private}@
[%{public}@] Denied app: %{private}@
[%{public}@] Allowed web app: %{private}@
[%{public}@] Denied web app: %{private}@
[%{public}@] senderConfiguration: %{private}@
[%{public}@] End secure configuration
Unexpected class in denied application list
Unexpected class in allowed web application list
Ignoring request to coordinate app configurations; device has not unlocked since boot.
Ignoring request to coordinate app configurations; from and to mode are the same.
Handling state update: %{public}@; previous: %{public}@
Running default action due to action deletion in active mode. identifier=%@; bundle=%@; mode=%@
Running action due to action update in active mode. identifier=%@; bundle=%@; mode=%@
Running default actions due to deletion of active mode. mode=%@; apps=%@
Failed to find actions for %{public}@: %{public}@
Application is running; will use for action %{public}@: %{public}@
Found extension for action %{public}@: %{public}@
No extension for action in app; background update unavailable. app=%{public}@; action=%{public}@
Failed to find metadata for action. The app may not be installed. action=%{public}@; bundle=%{public}@; %{public}@
Found default action for %{public}@. action=%{public}@
Failed to load default values for action. action=%{public}@; bundle=%{public}@; %{public}@
Unable to add action execution task; actionIdentifier=%{public}@ bundleIdentifier=%{public}@ modeIdentifier=%{public}@ group=%{public}@
Added action execution task=%{public}@ for group=%{public}@
Retrieved App Context %{public}@ for bundleIdentifier=%{public}@ actionIdentifier=%{public}@ modeIdentifier=%{public}@
Notification filter predicate from App Context did not validate, issues=%{public}@ bundleIdentifier=%{public}@ actionIdentifier=%{public}@ modeIdentifier=%{public}@
Completed action execution(s) for group=%{public}@
Queued task=%{public}@ for bundleIdentifier=%{public}@ queuedTasks=%lu
Immediately executing task=%{public}@
Removed completed task=%{public}@ for bundleIdentifier=%{public}@ queuedTasks=%lu
Completed task=%{public}@ for bundleIdentifier=%{public}@ was not the tracked 'current' task queuedTasks=%lu
Executing task=%{public}@ queued behind task=%{public}@
Task queue for bundleIdentifier=%{public}@ empty following completion of task=%{public}@
Completed task=%{public}@ for bundleIdentifier=%{public}@ was not the tracked queuedTasks=%lu
Notifying PowerLog of Focus filter perform event: source=%ld reason=%ld semanticType=%ld extensionsLaunched=%ld
Failed to determine process state for application bundle; will use extension if available. bundle=%{public}@; %{public}@
Failed to find process state for application bundle; will use extension if available. bundle=%{public}@
Found process state running scheduled for application bundle; will use application if available. bundle=%{public}@
Found process state other than running scheduled for application bundle; will use extension if available. bundle=%{public}@
Found multiple process states for application bundle; will use extension if available. bundle=%{public}@
Handling first launch/unlock: current=%{public}@
Purging metadata store
Forgetting device without initial sync data: %{public}@
Forgetting outdated device: %{public}@
Forgetting sync dates for record: %{public}@
Forgetting metadata for record: %{public}@
Forgetting record: %{public}@
Unexpected result type for appSpecificSettings: %{public}@
Attempt to get mode specific settings before first unlock.
Model does not contain entity with name %{public}@
Error querying settings: %{public}@
Attempt to get app specific settings before first unlock.
Failed to fetch settings: %{public}@
Attempt to set mode specific settings before first unlock.
Failed to fetch existing settings: %{public}@
Fetched %{public}@ settings for set/clear.
Unexpected class for managed object: %{public}@
Failed to commit settings: %{public}@
Committed mode settings for %{public}@ in %{public}@
Attempt to set app specific settings before first unlock.
Fetched %@ settings for set/clear.
Committed settings for %{public}@ in %{public}@
Attempt to remove mode specific settings before first unlock.
Removed %{public}@ settings for mode %{public}@.
Failed to remove settings for mode: %{public}@
Committed settings removal for mode %{public}@
Removing settings for modes not in %{public}@.
Failed to fetch modes to delete: %{public}@
Encountered disallowed class name `%{public}@` in sync payload.
Removing settings for %{public}@; apps=%{public}@
Failed to commit changes for modes not in: %{public}@
Changes did commit.
Attempt to remove app specific settings before first unlock.
Removed %{public}@ settings for app %{public}@.
Failed to remove settings for app: %{public}@
Removed settings for app %{public}@
Unexpected call to -idsSyncEngine:didFetchRecord:. Record: %@
prepareRecordToSave: %@
Unexpected call to -idsSyncEngine:recordWithIDWasDeleted:. Record: %@
Unexpected call to -purgeRecordsForIDSSyncEngine:
recordIDsForIDSSyncEngine
Missing parameters of region trigger: %@
Unexpected object (%@) found in invalidation predicate UUIDs: %@
Updated assertions for mindfulness trigger: mode=%{public}@
No action taken for request to refresh mindfulness trigger; automatic entry not supported
Invalidating active assertion no mode identifer for mindfulness session trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for mindfulness session trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for mindfulness session trigger in response to event; modeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome mindfulness session event monitor; mode=%{public}@
Mindfulness session subscription completed: state=%ld error=%{public}@
Received mindfulness session event: eventType=%{public}@
Updated assertions for mindfulness session event: eventType=%{public}@ sessionType=%{public}@
Failed to get action metadata for task with actionIdentifier:%{public}@ applicationIdentifier:%{public}@ modeIdentifier:%{public}@ error=%{public}@
Successfully fetched updated appContext %@ for action %@
Fetched appContext:%@ for action:%@ is invalid
Failed to fetch appContext for action:%@, error=%@
Failed to create connection for actionIdentifier:%@ applicationIdentifier:%@ modeIdentifier: %@, error=%@
Failed to retrieve action for actionIdentifier:%@ applicationIdentifier:%@ modeIdentifier: %@, error=%@
Unable to find system action for reverse action. action=%@; mode=%@
Failed to set Focus mirroring preference. Key does not exist or is invalid format. Expected %@.
Failed to set Focus mirroring preference. Accessor returned %@. Expected %@.
Set Focus mirroring preference.
Failed to get NPS accessor on paired device.
Initialized sync settings to %@
New sync settings: %@. Old: %@
Unable to updated workout trigger enabled setting: enabled=%{public}@ mode=%{public}@ error=%{public}@
Cannot map %{private}@ from %{public}@ to %{public}@ on this device
Record data is nil in record data %{public}@
Partioned record data is nil in record data %{public}@
Failed to decode record data %{public}@: %{public}@
Failed to decode
partitioned record data %{public}@: %{public}@
%{public}@
Unexpected value in sync dispatch source: %@
Sync engine will be enabled on startup
Sync engine will be disabled on startup because of feature flag
Sync engine will be disabled on startup because user setting is disabled
Sync engine will be disabled on startup because of missing account
Sync engine changing to %{public}s
Performing initial sync for new zone: %@
Adding record IDs to save: %{public}@; to delete: %{public}@
RecordID change was made before sync engine availability.
Adding zones to save: %{public}@; to delete: %{public}@
RecordZoneID change was made before sync engine availability.
Record %{public}@ overrides a previously-stored record in the last-chance store.
Record %{public}@ is from the future; saving what we can and sending to last-chance store
Failed to find data source with zoneID %{public}@ for record %{public}@; sending to last-chance store
Removing record with ID %{public}@ from source %{public}@
Could not find a source for removing record with ID %{public}@
Deleted record: %{public}@
Fetched record: %{public}@
Saved record: %{public}@
Updated metadata
Failed to find data source with zoneID %{public}@ for record %{public}@
Failed to save record %{public}@: %{public}@
Unexpected error encountered when saving record %{public}@: %{public}@
Server record has changed; resolving conflict
Failed to find data source with zoneID %{public}@
Both server and client record IDs are nil for record ID %{public}@
Record is unknown on the server; flushing metadata and resending
Record ID is nil; ignoring unknown item
Zone %{public}@ not found; pushing zone to server
Zone ID is nil; ignoring record
Missing identity for zone %{public}@; deleting and recreating zone
ZoneID is nil; ignoring record
User deleted zone %{public}@; deleting zone
ZoneID is nil; ignoring deleted zone
Unhandled error: %{public}@
Creating record to save: %{public}@
Failed to create record to save: %{public}@
Record %{public}@ was overridden locally; removing record in last-chance store.
Record %{public}@ has changes from the future; saving healed modifications to last-chance store
Record was deleted: %{public}@
Zone was deleted: %{public}@
Zone was purged: %{public}@
Keybag unlocked
Updating account
Ignoring account change because device is unsupported
Ignoring account change because feature is not enabled
Device is locked
Initial account state is %s; encryption is %s
Could not fetch account status: %@
Could not fetch account state: %{public}@
Sync engine will be disabled because account is restricted
Sync engine will be disabled because no account exists
Sync engine will be disabled because the account is unavailable
Sync engine will be disabled because of an error: %@
Could not fetch account info ID: %{public}@
Could not fetch user record ID: %{public}@
Encryption is newly available
Encryption is available
Encryption is newly unavailable
Encryption is not available
Sync enabled state is newly disabled
Sync enabled state is newly enabled
Sync enabled state is unchanged from disabled
Sync enabled state is unchanged from enabled
User record is unchanged from nil
User record was removed
New user record was added
User record ID is unchanged
User record ID has changed
Sync engine resolved state: %s
_allowSyncEngineCreation == NO
Skipping sync engine creation because the device has not unlocked.
Skipping sync engine creation because sync is disabled.
Sync engine will start
Destroying sync engine
Purging sync engine data
Account status is unchanged: %{public}@
Account status has changed to: %{public}@
User record ID has changed to: %{public}@
Purging data from data sources
Purging data from zone %{public}@
Performing initial sync for data sources
Performing initial sync for zone %{public}@
Migrating configurations from old local stores
Could not delete mode store: %@
Could not delete secure mode store: %@
Could not delete old synced global store: %@
Could not replace mode store with old store: %@
Could not replace secure mode store with old store: %@
Could not replace global store with old store: %@
Erasing configurations from old local stores
Could not delete old mode store: %@
Could not delete old secure mode store: %@
Could not delete old global store: %@
Mapping extension bundle %@ to containing bundle %@.
Updated assertions for gaming trigger: mode=%{public}@
No action taken for request to refresh gaming trigger; automatic entry not supported
Invalidating active assertion no mode identifer for game controller trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for game controller trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for game controller trigger in response to event; modeID=%{public}@
Invalidating active assertion for game controller trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for game controller trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome game controller event monitor; mode=%{public}@
Game controller subscription completed: state=%ld error=%{public}@
Received controller event: isControllerConnected=%{BOOL}d number=%lu
Updated assertions for controller event: isControllerConnected=%{BOOL}d number=%lu
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: pid=%d, stateUpdate=%{public}@, connection=%{public}@
Delivering active mode update: pid=%d, activeModeIdentifier=%{public}@, connection=%{public}@
Did receive update result with %lu assertion(s) & %lu invalidation(s), will handle; updateResult=%{public}@
Handling invalidation: %@
Delivering assertion update with invalidation: assertion=%{public}@, invalidation=%{public}@, connection=%{public}@
Handling assertion: %@
Delivering assertion update: assertion=%{public}@, connection=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Delivering bypass update: settings=%{public}@, connection=%{public}@
Did receive updated pair sync state, will handle; state=%{public}@
Delivering pair sync state: state=%{public}@, connection=%{public}@
Did receive updated prevent auto reply settings, will handle; settings=%{public}@
Delivering prevent auto reply update: settings=%{public}@, connection=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
Did receive updated available modes, will handle; modes=%{public}@
Delivering modes update: pid=%d, modes=%{public}@, connection=%{public}@
Delivering available modes update: pid=%d, modes=%{public}@, connection=%{public}@
Mode did receive updated app configuration context, will handle; mode=%{public}@
Signaling mode app configuration context update: pid=%d, mode=%{public}@, connection=%{public}@
Did receive updated 'Me Device' state, will handle; meDeviceStatus=%{public}@, meDeviceName=%{public}@
Delivering 'Me Device' state update: pid=%d, meDeviceStatus=%{public}@, meDeviceName=%{public}@, connection=%{public}@
XPC connection without any valid entitlements tried to connect, will reject: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion invalidation, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to request all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for assertion updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state as a part of registering for updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set screen sharing / mirroring settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set global configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get auto reply prevention state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get global availability state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for global configuration updates; will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get cloud sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change cloud sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get pair sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change pair sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get supported account features, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to fetch state dump, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to notify of focus status sharing change, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to remove mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configurations, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get all modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get available modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to sync modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get silenced modes for a contact, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get availability state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to publish statuskit availability, will invalidate: connection=%{public}@
Activating mode %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to activate a mode, will invalidate: connection=%{public}@, modeIdentifier=%{public}@
Invalidating mode with UUID %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to invalidate a mode, will invalidate: connection=%{public}@, assertionUUID=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for available mode identifiers; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to fetch app info; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to query 'Me Device' state; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for 'Me Device' state updates; will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set app predicate, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get app predicate, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set target content identifier prefix, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get target content identifier prefixes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set app action, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to clear app action, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get app actions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to clear system action, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get system actions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set system action, will invalidate: connection=%{public}@
Registering new connection details for connection: connection=%{public}@
Updating connection details for connection: connection=%{public}@, updatedConnectionDetails=%{public}@
Connection details unregistered: connection=%{public}@, clientDetails=%{public}@
Invalidating assertion due to client disconnect: connection=%{public}@, UUID=%{public}@
Could not read configuration: %{public}@
Fetched record with ID: %@
Fetched data with ID %@ is current; applying update
Fetched data with ID %@ is outdated; ignoring update and resending local data
Fetched data with ID %@ could not be reconstructed into a configuration; ignoring update
Failed to delete record %@: %@
Resolved conflict records with ID %@; using remote data
Resolved conflict between records with ID %@; using local data
Could not resolve conflict as remote configuration is nil; keeping local data with ID %@
Preparing to save record %@
Global configuration was deleted
Preparing to save record for IDS sync engine: %@
Fetched record from IDS sync engine with ID: %@
Replacing record with default global configuration
Updating global configuration
Ignoring incoming configuration with date %@ as it is older than existing configuration with date %@
Record data is nil in record data %@
Failed to decode record data %@: %@
Failed to fetch existing configuration: %@
Record %@ is not valid JSON
Could not read configuration: %@
Notifying delegate of prevent-auto-reply change: %{public}s
Error writing fetched configurations: %@
Will sanitize assertion date: date=%{public}@ assertion=%{public}@
Will sanitize invalidation date: date=%{public}@ invalidation=%{public}@
Will sanitize invalidation request date: date=%{public}@ invalidationRequest=%{public}@
State changed
First unlock occurred
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%{public}@, UUIDs=%{public}@
Notifying PowerLog of Focus interruption suppression event: bundleIdentifier=%{public}@ suppression=%ld
No mode configuration found for mode identifier: modeIdentifier=%{public}@
Overriding invalidation client (%{public}@) with assertion client (%{public}@)
No behavior settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
No default paired device
Paired devices: %@
Updated mode modifification date to %@ on assertion %@
%@ configuration doesn't have a useful modification date: %@
Unable to find mode configuration for mode %@
Performed update for sync manager; manager=%{public}@
Error when performing update for sync manager; manager=%{public}@, error=%{public}@
Error while requesting settings sync for Focus sync. %@
Completed settings sync for Focus sync.
Not requesting cloud sync because the Focus sync does not target any cloud devices.
Sync manager gets bypass settings; manager=%{public}@, settings=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Error replacing bypass settings in default mode: %{public}@
Error fetching default mode: %{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Available modes updated; manager=%{public}@, modes=%{public}@
Settings for this mode changed. Forcing a sync to all devices.
Skipping forced update for settings change because they were not local changes.
Paired devices updated; monitor=%{public}@, previousDevice=%{public}@, device=%{public}@
Cloud devices changed; monitor=%{public}@, previousDevices=%{public}@, devices=%{public}@
Unable to reset incompatible mode configuration: error=%{public}@
Unable to fetch incompatible mode configurations for reset: error=%{public}@
Fetched changes
Error fetching changes: %@
Forcing cloud sync
Sent changes
Error sending changes: %@
%@ action for '%@' in active mode %@
No enabled action for %@ in active mode %@
Device regained internet connectivity. Queueing a current activity sync.
Device lost internet connectivity.
State was updated: previousState=%{public}@
State was updated: currentState=%{public}@
State was updated: reason=%{public}@ source=%{public}@
Notifying PowerLog of Focus status change event: availability=%ld source=%ld reason=%ld semanticType=%ld extensionsLaunched=%ld
Unable to set mode configuration while migrating bypass settings: error=%{public}@
Migrated bypass settings: settings=%{public}@
Unable to save eraose old bypass settings: settings=%{public}@ error=%{public}@
Unable to fetch mode configurations to migrate bypass settings: error=%{public}@
Unable to fetch global configuration to migrate bypass settings: error=%{public}@
Delaying default mode migration until device unlocks
Unable to save migrated default mode: mode=%{public}@ error=%{public}@
Checking configuration from %@ for %@
Unable to find configuration for %@. It may not yet exist on this device.
Configuration for %@ is out of date. %@ < %@
Requesting configuration sync for stale mode %@.
Failed to sync updated configurations for synced %@ assertion. Error: %@
Updated configurations succesfully synced for %@.
Mode configuration is up to date.
Mode assertion update result:
 assertions=%{public}@
Mode assertion update result:
 invalidations=%{public}@
Ignored update as it changed nothing
Current DND sync status: local device=%{public}@, cloud devices=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Updated assertions for smart triggers: supportedModes=%{public}@
Adding biome inferred mode event monitor for %{public}@
InferredMode subscription completed: state=%ld error=%{public}@
Received inferred mode event: modeIdentifier=%{public}@ starting=%{public}@
Updated assertions for inferred mode event: event=%{public}@
Ignored automatic entry for unsupported inferred mode event: event=%{public}@
Setting auto reply to %s
Error reading auto reply state: %@
Setting global availability preference to %s
Error reading global availability state: %@
Saved configuration; configuration=%{public}@
Failed to save configuration, but error can be ignored; error=%{public}@
Failed to save configuration, will request a radar; configuration=%{public}@, error=%{public}@
Failed to save configuration but device is under first lock; configuration=%{public}@, error=%{public}@
Received SIGTERM
Starting up...
Record
DNDSBackingStoreRecord
NSObject
DNDSIDSSyncEngine
DNDSSyncServiceDelegate
DNDSKeybagStateObserver
DNDSSysdiagnoseDataProvider
DNDSIDSSyncEngineSynchronizing
Resolution
DNDSModernAssertionSourceResolution
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSMutableBehaviorSettingsRecord
CoreDataProperties
DNDSPartitionedBackingStoreRecord
DNDSJSONBackingStore
DNDSBackingStore
DNDSModeAssertionInvalidationRequest
Schedule
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSLifetimeMonitor
DNDSAppForegroundTriggerManager
DNDSBiomeTriggerManager
DNDSBiomeTriggerManagerDataSource
DNDSAppForegroundTriggerConfiguration
DNDSDateHelper
DNDContactHandle
DNDSEventBehaviorEvolver
DNDSEventBehaviorResolver
Testing
DNDSMemoryCachedBackingStore
DNDSBackingStoreDelegate
DNDSCachedBackingStore
DNDSRemoteAvailabilityServiceProvider
BSServiceConnectionListenerDelegate
DNDRemoteAvailabilityServiceServerProtocol
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSContactMonitorChangeCollector
CNChangeHistoryEventVisitor
DNDSContactMonitor
DNDSContactMonitoring
DNDSCalendarEventLifetimeMonitor
SyncMessage
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
DNDSUserAvailabilityCoordinator
DNDSContentHandleExceptionalModesBox
DNDSUserAvailabilityPublishResult
DNDSAvailabilityInvitationRequest
_DNDSUserAvailabilityTCCProvider
DNDSUserAvailabilityTCCProviding
DNDSContactProvider
DNDSContactProviding
DNDSAppSpecificSettingsTypeAppConfigurationAction
DNDSAppSpecificSettingsType
Defaults
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSAggregateLocationLifetimeMonitor
DNDSMeDeviceServiceListener
DNDSExplicitRegionLocationLifetimeMonitor
DNDSLocationTriggerConfiguration
DNDSExplicitRegionStore
DNDSMutableExplicitRegionStore
DNDSUntilExitLocationLifetimeMonitor
DNDSUntilExitRegionStore
DNDSMutableUntilExitRegionStore
DNDSIDSServerBagValues
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
DNDSMeDeviceStore
DNDSMutableMeDeviceStore
DNDSPlaceholderModesRecord
BackingRecord
BackingStores
BackingRecordUpgrade
DNDSAppSpecificSettingsTypeAppConfigurationTargetContentIdentifierPrefix
DNDSModeAssertionManagerUpdateContext
DNDSModeAssertionUpdateContext
DNDSModeAssertionQuerying
SysdiagnoseRecord
DNDSModeDetails
DNDSModeConfigurationRecord
DNDSMutableModeConfigurationRecord
DNDSSyncEngineMetadataStore
DNDSSyncEngineMetadataStoring
DNDApplicationMO
DNDSMetricsManager
DNDSApplicationConfigurationRecord
DNDSMutableApplicationConfigurationRecord
DNDSScheduleLifetimeMonitor
DNDSModeRepository
DNDSCoreDataBackingStore
DNDSReachability
DNDSModeConfigurationManager
DNDSModeConfigurationsStoreDelegate
DNDSModeConfigurationProviding
PeaceSyncMessage
Contacts
DNDSClientConnectionDetails
DNDSMutableClientConnectionDetails
DNDSStateProvider
DNDSStateProviding
DNDSPlaceholderModeManager
LegacySupport
DNDSFirstUnlockPurgedBackingStore
DNDSCachedBackingStoreDelegate
DNDSGlobalConfiguration
DNDSMutableGlobalConfiguration
DNDPerModeSettingsMO
DNDSSystemFocusConfigurationCoordinator
WFShojiSystemActionsRunnerClientDelegate
WFWorkflowRunnerClientDelegate
DNDSAppConfigurationManagerDelegate
CKRecord
DNDSScheduleSettings
DNDSMeDeviceService
DNDSModeConfigurationTriggersRecord
DNDSMutableModeConfigurationTriggersRecord
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
DNDSIDSRecord
DNDSModeAssertionUpdateResult
Batch
DNDSystemActionMO
DNDSModeAssertionInvalidationPredicate
DNDSAnyModeAssertionInvalidationPredicate
DNDSModeAssertionDateInvalidationPredicate
DNDSModeAssertionClientIdentifierInvalidationPredicate
DNDSModeAssertionUUIDInvalidationPredicate
DNDSWorkoutTriggerManager
DNDSRemoteAppConfigurationServiceProvider
DNDRemoteAppConfigurationServiceServerProtocol
DNDSModeConfigurationsRecordDiff
DNDSSyncEngineLastChanceDataStore
DNDSSyncEngineLastChanceDataStoring
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSModeAssertionManager
DNDSModeAssertionUpdating
DNDSWorkloop
DNDSMetricsRecord
DNDSMutableMetricsRecord
DNDSDrivingTriggerManager
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSConfigurationRecord
DNDSMutableConfigurationRecord
DNDSUserAvailabilityIntentLauncher
DNDAppConfigurationPredicateMO
DNDSBackingStoreDictionaryContext
DNDSModeAssertionStore
DNDSMutableModeAssertionStore
DNDSModernAssertionSync
DNDSModernAssertionSyncManager
AssertionSyncManager
_DNDSPendingMessageRecipients
_DNDSSyncMessageGroup
DNDSModernAssertionSyncMetadataStore
DNDSModeAssertionStoreRecord
Dictionary
DNDSModeAssertionStoreRecordDictionaryEncoding
DNDFocusModeMO
Sanitization
DNDSBiomeDonationManager
DNDAppConfigurationActionMO
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSAppSpecificSettingsTypeSystemAction
DNDSHeartbeatMetricsRecord
DNDSHeartbeatMetricsProtocol
DNDSMutableHeartbeatMetricsRecord
DNDSMutableHeartbeatMetricsProtocol
DNDSDailyHeartbeatMetricsRecord
DNDSMutableDailyHeartbeatMetricsRecord
DNDSWeeklyHeartbeatMetricsRecord
DNDSMutableWeeklyHeartbeatMetricsRecord
DNDSMonthlyHeartbeatMetricsRecord
DNDSMutableMonthlyHeartbeatMetricsRecord
DNDSAuxiliaryStateMonitor
DNDModeAssertionLifetimeTypeHelper
DNDModeAssertionScheduleLifetimeBehaviorHelper
DNDSAppFocusConfigurationTask
LNActionExecutorDelegate
DNDSSleepingTriggerManager
DNDSAppInfoCache
LSApplicationWorkspaceObserverProtocol
DNDSScheduleManager
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSModeConfigurationsStore
DNDSSyncEngineDataSource
DNDSIDSSyncEngineDataSource
DNDSModeConfigurationsStoring
DNDSContactMonitorListener
DNDSClientDetailsProvider
DNDServer
DNDSPairedDeviceStateMonitor
IDSServiceDelegate
BackingStore
DNDSAppSpecificSettingsTypeAppConfigurationPredicate
DNDSDevice
DNDSModeRecord
DNDSMutableModeRecord
DNDSConfigurationsRecord
DNDSMutableConfigurationsRecord
DNDSIDSSyncService
DNDSSyncService
DNDSXPCEventPublisher
DNDPerAppSettingsMO
DNDSConfigurationSecureRecord
DNDSMutableConfigurationSecureRecord
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSSyncSettings
DNDSMutableSyncSettings
DNDSAppFocusConfigurationCoordinator
DNDSStateProviderSystemSnapshot
DNDSMutableStateProviderSystemSnapshot
DNDSIDSSyncEngineMetadataStore
DNDSIDSSyncEngineMetadataStoring
DNDSAppSpecificSettingsManager
DNDSModeDeletionDetails
DNDModeAssertionReasonHelper
DNDModeAssertionInvalidationReasonHelper
DNDModeAssertionInvalidationReasonOverrideHelper
DNDSModeAssertionInvalidationPredicateTypeHelper
DNDSModeAssertionRecord
DNDSModeAssertionDetailsRecord
DNDSModeAssertionLifetimeRecord
DNDSModeAssertionSourceRecord
DNDSModeAssertionInvalidationRecord
DNDSModeAssertionInvalidationDetailsRecord
DNDSModeAssertionInvalidationRequestRecord
DNDSModeAssertionInvalidationPredicateRecord
LifetimePhase
DNDSMindfulnessTriggerManager
DNDSClientDetails
DNDSAppConfigurationManager
DNDSSyncSettingsProvider
DNDSMutableBackingStoreDictionaryContext
DNDSAppForegroundTriggerManagerDataSource
DNDSDrivingTriggerManagerDataSource
DNDSGamingTriggerManagerDataSource
DNDSMindfulnessTriggerManagerDataSource
DNDSSleepingTriggerManagerDataSource
DNDSSmartTriggerManagerDataSource
DNDSWorkoutTriggerManagerDataSource
Predicates
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSApplicationIdentifierMapper
DNDSApplicationIdentifierMapping
DNDSModeResolutionService
DoNotDisturbServer
DNDSConfigurationsSecureRecord
DNDSMutableConfigurationsSecureRecord
DNDSXPCEventInterface
DNDSXPCEventStream
DNDSSenderConfigurationRecord
DNDSMutableSenderConfigurationRecord
DNDSIDSRecordID
DNDSContactRecord
DNDSMutableContactRecord
DNDSModeConfigurationsRecord
DNDSMutableModeConfigurationsRecord
DNDSSyncEngine
CKSyncEngineDataSource
DNDSIDSRecordMetadata
DNDSMutableIDSRecordMetadata
DNDSXPCTimer
DNDSGamingTriggerManager
DNDAppConfigurationTargetContentIdentifierPrefixMO
DNDSRemoteServiceProvider
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceServerModeConfigurationProtocol
DNDRemoteServiceServerModeSelectionProtocol
DNDRemoteServiceServerGlobalConfigurationProtocol
DNDRemoteServiceServerAppInfoProtocol
DNDRemoteServiceServerMeDeviceStateProtocol
DNDRemoteServiceServerAuxiliaryStateProtocol
DNDRemoteServiceAppConfigurationProtocol
DNDRemoteMonitorServerProtocol
DNDRemoteMonitorServerModeAssertionProtocol
DNDRemoteMonitorServerStateProtocol
DNDRemoteMonitorServerSettingsProtocol
DNDRemoteMonitorServerModeSelectionProtocol
DNDRemoteMonitorServerGlobalConfigurationProtocol
DNDRemoteMonitorServerMeDeviceStateProtocol
Entitlements
DNDSGlobalConfigurationStore
DNDSGlobalConfigurationStoring
DateOperations
DNDSKeybag
DNDSKeybagStateProviding
DNDSGlobalConfigurationManagerDelegate
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSLocationLifetimeMonitorDataSource
DNDSScheduleLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSRemoteServiceProviderModeConfigurationsDelegate
DNDSRemoteServiceProviderGlobalConfigurationDelegate
DNDSRemoteServiceProviderAppInfoDelegate
DNDSRemoteServiceProviderMeDeviceStateDelegate
DNDSRemoteServiceProviderAuxiliaryStateDelegate
DNDSRemoteServiceProviderAppConfigurationDelegate
DNDSRemoteAvailabilityServiceProviderDelegate
DNDSRemoteAppConfigurationServiceProviderDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
DNDSModeConfigurationManagerDelegate
DNDSReachabilityDelegate
DNDSAppFocusConfigurationCoordinatorDelegate
DNDSSystemFocusConfigurationCoordinatorDelegate
DNDSSmartTriggerManager
DNDSGlobalConfigurationManager
DNDSGlobalConfigurationStoreDelegate
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
JSONObjectWithData:options:error:
T@"DNDSModeRecord",R,C,N,V_mode
T@"<DNDSAggregateLocationLifetimeMonitor>",W,N,V_aggregateMonitor
T@"NSArray",R,C,N,V_activeUUIDs
T@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
T@"NSArray",R,C,N,V_modifiedIDs
T@"<DNDSApplicationIdentifierMapping>",R,N,V_applicationIdentifierMapper
T@"NSDate",R,C,N,V_creationDate
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"NSHashTable",R,N,V_delegates
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
T@"NSSet",C,D,N
T@"<DNDSBackingStoreDelegate>",W,N,V_delegate
T@"NSSet",R,C,N,V_deniedThreads
T@"<DNDSCachedBackingStoreDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_identifier
T@"<DNDSContactProviding>",R,N,V_contactProvider
TB,N,V_lastInformedReachability
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
TB,R,N,GisPersistentAssertionClient,V_persistentAssertionClient
T@"<DNDSGlobalConfigurationManagerDelegate>",W,N,V_delegate
TQ,R,N,V_reason
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N,V_delegate
_action
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
_addConnection:
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
_allModeSpecificSettingsOfType:
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N,V_dataSource
_bypassSettings
T@"<DNDSModeConfigurationManagerDelegate>",W,N,V_delegate
_contactMonitor
T@"<DNDSModeConfigurationsStoreDelegate>",W,N,V_delegate
_didFireMetadataExpirationTimer
T@"<DNDSRemoteAppConfigurationServiceProviderDelegate>",W,N,V_delegate
_emailAddresses
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
_executeAction:
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
_featureEnabled
T@"<DNDSSettingsSyncManagerDataSource>",W,N
_groupIdentifierForStateUpdate:
T@"<DNDSSettingsSyncManagerDelegate>",W,N
_initWithStore:
T@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_lastUpdateDate
T@"<DNDSSyncServiceDelegate>",W,N
_lock_purgeData
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
_meDeviceStatus
T@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_metricsManager
T@"AKAvailabilityInvitation",R,C,V_invitation
_modeRepository
T@"CLLocationManager",R,N
_occurrenceDate
T@"CLRegion",C,D,N
_queue_locationMonitorClientIdentifierForModeIdentifier:region:
T@"DNDAccountFeatureSupport",R,C,N
_queue_stopMonitoringForRegion:
T@"DNDBypassSettings",C,D,N
_radius
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
_reasonOverride
T@"DNDFocusModeMO",&,D,N
_refreshForNanoPreferenceChange
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
_repeatInterval
T@"DNDSBehaviorSettingsRecord",C,D,N
_source
T@"DNDSBypassSettingsRecord",C,D,N
allowed
T@"DNDSConfigurationRecord",R,C,N,V_configuration
appConfigurationManager:didClearSystemActionsInModeIdentifiers:
T@"DNDSConfigurationsRecord",C,D,N
applicationsDidFailToUninstall:
T@"DNDSCoreDataBackingStore",R,N,V_store
broadcastEvent:
T@"DNDSIDSRecordID",R,C,N
bundleForClass:
T@"DNDSModeAssertionDetailsRecord",&,N,V_details
contact
T@"DNDSModeAssertionInvalidationPredicate",R,C,N,V_predicate
containsObject:
T@"DNDSModeAssertionLifetimeRecord",&,N,V_lifetime
countForObject:
T@"DNDSModeAssertionSourceRecord",&,N,V_source
currentCalendar
T@"DNDSModeAssertionUpdateResult",R,C,N,V_updateResult
dealloc
T@"DNDSModeConfigurationsRecord",R,C,N,V_original
deliverUpdatedBehaviorSettings:
T@"DNDSMutableModeAssertionStore",R,C,N,V_store
deniedWebApplicationIdentifiers
T@"DNDSPairedDevice",C,V_previousPairedDevice
devices
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
dnds_hasModeConfigurationUpdatesEntitlementForClientIdentifier:
T@"DNDSSenderConfigurationRecord",R,C,N,V_senderConfiguration
enabled
T@"DNDSSyncSettings",C,V_syncSettings
endDate
T@"DNDState",R,C
enumerateBatchesOfSize:handler:
T@"NSArray",&,D,N
executor:needsValueWithRequest:
T@"NSArray",&,N,V_assertions
getConfigurationReturningError:
T@"NSArray",&,N,V_invalidationRequests
hasEntitlement:
T@"NSArray",R,C,N
initWithDomain:
T@"NSArray",R,C,N,V_activeAssertionUUIDs
initWithIntent:
T@"NSArray",R,C,N,V_allowed
initWithRegion:
T@"NSArray",R,C,N,V_clientIdentifiers
initWithString:
T@"NSArray",R,C,N,V_effectiveIntervals
initWithZoneID:
T@"NSArray",R,C,N,V_invalidationRequests
isEqualToArray:
T@"NSArray",R,C,N,V_placeholderModes
isLocallyPaired
T@"NSArray",R,C,N,V_silenced
isStart
T@"NSArray",R,C,N,V_updatedContacts
isUserInitiated
T@"NSCalendar",&,N,V_calendar
layoutIsLocked:
T@"NSData",C,N
locationManager:didEnterRegion:
T@"NSDate",C,D,N
lowercaseString
T@"NSDate",R,C,N
meDeviceChanged
T@"NSDate",R,C,N,V_date
onlyDuringEvent
T@"NSDate",R,C,N,V_lastMonthlyHeartbeat
outcome
T@"NSDate",R,C,N,V_lastUpdateDate
perform
T@"NSDate",R,C,N,V_requestDate
predicateFormat
T@"NSDateComponents",R,C,N,V_startComponents
rawResolvedCompatibilityVersion
T@"NSDictionary",C,D,N
recordZonesToSaveForSyncEngine:
T@"NSDictionary",R,C,N,V_activeDateIntervalByAssertionUUID
refresh
T@"NSDictionary",R,C,N,V_metricsByDay
regions
T@"NSDictionary",R,C,N,V_metricsByWeek
release
T@"NSDictionary",R,N
remoteServiceProvider:getAppActionsForModeIdentifier:withError:
T@"NSMutableDictionary",R,C,N,V_lastSentStoreDate
removeDelegate:
T@"NSNumber",&,N,V_compatibilityVersion
removeObserver:
T@"NSNumber",&,N,V_endDate
requestLocation
T@"NSNumber",&,N,V_latitude
scheduleSettingsForSyncManager:
T@"NSNumber",&,N,V_modeConfigurationModifiedDate
T@"NSNumber",&,N,V_onlyDuringEvent
setApplication:
T@"NSNumber",&,N,V_requestDate
setBool:forKey:
T@"NSNumber",&,N,V_userVisibleEndDate
setDay:
T@"NSNumber",C,N
setDisplayName:
T@"NSNumber",R,C,N,V_applicationConfigurationType
setInterruptionBehaviorSetting:
T@"NSNumber",R,C,N,V_compatibilityVersion
setModeConfiguration:withError:
T@"NSNumber",R,C,N,V_hasActiveLifetimes
setRequestDate:
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
setSystemAction:modeIdentifier:
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
setWithObjects:
T@"NSNumber",R,C,N,V_minimumBreakthroughUrgency
stringFromDate:
T@"NSNumber",R,C,N,V_numberOfSessions
suspend
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
syncEngine:prepareRecordToSave:
T@"NSNumber",R,C,N,V_senderConfigurationType
syncMessageKeys
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
underlyingError
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
updateDevices:force:shouldFuzz:
T@"NSNumber",R,C,N,V_timePeriodWeekdays
updated
T@"NSObject<OS_dispatch_queue>",R,N
urgency
T@"NSObject<OS_dispatch_source>",R,N,V_debounceTimer
weekday
.cxx_destruct
T@"DNDSIDSRecordMetadata",R,C,N
T#,R
T@"NSArray",&,N,V_invalidations
T@"<DNDSAppFocusConfigurationCoordinatorDelegate>",W,N,V_delegate
T@"NSArray",R,C,N,V_identifiers
T@"<DNDSApplicationIdentifierMapping>",&,D,N
T@"NSArray",R,N
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"NSDate",R,C,N,V_lastModified
T@"<DNDSAssertionSyncManagerDelegate>",W,N
T@"NSSet",&,D,N
T@"<DNDSBackingStoreDelegate>",W,N
T@"NSSet",R,C,N
T@"<DNDSCachedBackingStoreDelegate>",W,N
T@"NSString",&,N,V_lifetimeType
T@"<DNDSContactProviding>",&,D,N
T@"NSString",R,C,N,V_middleName
T@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
TB,R,N,GisIOS14SyncSuppressedClient,V_iOS14SyncSuppressedClient
T@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
TB,R,N,V_wantsActiveModeUpdates
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N
T@"<DNDSLifetimeMonitorDataSource>",W,N
_active
T@"<DNDSLifetimeMonitorDelegate>",W,N
_addTask:toGroupWithIdentifier:
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N
_allowedThreads
T@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_configurations
T@"<DNDSModeConfigurationsStoreDelegate>",W,N
_deniedContacts
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
_dimsLockScreen
T@"<DNDSRemoteAvailabilityServiceProviderDelegate>",W,N,V_delegate
_encodedSystemFieldsFromRecord:
T@"<DNDSScheduleLifetimeMonitorDataSource>",W,D,N
_executeOrQueueTask:completion:
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
_immediateBypassEventSourceType
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
_keybag
T@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_listen
T@"<DNDSSyncServiceDelegate>",W,N,V_delegate
_lock_updatePairSyncPreferences
T@"<DNDSSystemFocusConfigurationCoordinatorDelegate>",W,N,V_delegate
_metricsByMonth
T@"AKAvailability",R,C,V_availability
_modeIdentifier
T@"CKRecordZone",R,C,N,V_zone
_notifyDelegateOfAvailableModes
T@"CLLocationManager",R,N,V_locationManager
_parseAppStoreResponseForBundleIdentifiers:response:data:error:
T@"CLRegion",R,C,N,V_currentRegion
_queue_resolveBehaviorForEventDetails:clientDetails:date:error:
T@"DNDApplicationMO",&,D,N
_queue_validate
T@"DNDBypassSettings",R,C,N,V_bypassSettings
_reason
T@"DNDContactHandle",R,C,N,V_contactHandle
_recordIDsInModeConfigurations:
T@"DNDMeDeviceState",R,C,N
_removeSystemFieldsForRecordID:
T@"DNDModeAssertionSource",R,C,N,V_source
_screenMirrored
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
allKeys
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
allowedContacts
T@"DNDSConfigurationSecureRecord",R,C,N,V_secureConfiguration
appSpecificSettingsEncodedClass
T@"DNDSConfigurationsRecord",R,C,N,V_configurations
arrayByExcludingObjectsInArray:
T@"DNDSIDSRecordID",C,D,N
bs_map:
T@"DNDSIDSRecordID",R,C,N,V_recordID
configurationForModeIdentifier:
T@"DNDSModeAssertionInvalidationDetailsRecord",&,N,V_details
contactProvider
T@"DNDSModeAssertionInvalidationPredicateRecord",&,N,V_predicate
containsString:
T@"DNDSModeAssertionRecord",&,N,V_assertion
created
T@"DNDSModeAssertionStore",R,C,N,V_store
T@"DNDSModeConfigurationTriggersRecord",R,C,N,V_triggers
deleted
T@"DNDSModeConfigurationsRecord",R,C,N,V_updated
deliverUpdatedScheduleSettings:
T@"DNDSPairedDevice",C,V_pairedDevice
details
T@"DNDSScheduleSettingsRecord",C,D,N
dnds_hasModeConfigurationRequestEntitlementForClientIdentifier:
T@"DNDSSenderConfigurationRecord",C,D,N
dnds_metricsBackingStoreFileURL
T@"DNDSStateProviderSystemSnapshot",C,V_lastSystemSnapshot
encryptedValues
T@"DNDState",C,V_lastCalculatedState
endTime
T@"DNDState",R,C,D,N
execute
T@"NSArray",&,N,V_UUIDs
findClientDetailsForIdentifier:
T@"NSArray",&,N,V_clientIdentifiers
handles
T@"NSArray",C,D,N
hasLocalChanges
T@"NSArray",R,C,N,V_UUIDs
initWithIdentifier:targetQueue:
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
initWithKeybag:
T@"NSArray",R,C,N,V_assertions
initWithStream:
T@"NSArray",R,C,N,V_deletedContactIdentifiers
initWithUnderlyingBackingStore:
T@"NSArray",R,C,N,V_expiredUUIDs
invalidateAssertionsForRequest:
T@"NSArray",R,C,N,V_invalidations
isICloudEnabled
T@"NSArray",R,C,N,V_removedIDs
isProxy
T@"NSArray",R,C,N,V_triggers
isSyncAvailable
T@"NSArray",R,C,V_handles
keybagDidUnlockForTheFirstTime:
T@"NSData",&,D,N
locationManager
T@"NSData",C,N,V_contactHistoryToken
log:withPrefix:
T@"NSDate",C,N,V_date
manuallyEnabled
T@"NSDate",R,C,N,V_created
numberWithBool:
T@"NSDate",R,C,N,V_lastDailyHeartbeat
osBuild
T@"NSDate",R,C,N,V_lastUpdate
pairSyncEnabled
T@"NSDate",R,C,N,V_lastWeeklyHeartbeat
T@"NSDateComponents",R,C,N,V_endComponents
protocolVersion
T@"NSDictionary",&,D,N
recordForInvalidationPredicate:
T@"NSDictionary",R,C,N
records
T@"NSDictionary",R,C,N,V_allowedApplications
refreshMonitorFromQueueForDate:
T@"NSDictionary",R,C,N,V_metricsByMonth
registerForSettingsUpdatesWithRequestDetails:completionHandler:
T@"NSDictionary",R,C,N,V_modeConfigurations
remoteServiceProvider:activeAssertionWithClientIdentifer:error:
T@"NSMutableDictionary",R,C,N,V_lastReceivedStoreDate
remoteServiceProvider:getAppInfoForBundleIdentifiers:withError:
T@"NSMutableDictionary",R,C,N,V_pendingLastSentStoreDate
removeListener:
T@"NSNumber",&,N,V_date
removeZoneName:
T@"NSNumber",&,N,V_invalidationDate
requestWithURL:
T@"NSNumber",&,N,V_longitude
serviceSpaceDidBecomeAvailable:
T@"NSNumber",&,N,V_occurrenceDate
setAppActionsForModeIdentifier:
T@"NSNumber",&,N,V_radius
setApplicationIdentifierMapper:
T@"NSNumber",&,N,V_startDate
setDateCreated:
T@"NSNumber",C,D,N
setDestination:
T@"NSNumber",R,C,N
setInitialized:
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
setMergePolicy:
T@"NSNumber",R,C,N,V_dayOfWeek
setPersistentStoreDescriptions:
T@"NSNumber",R,C,N,V_hideApplicationBadges
setRequiresTCC:
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
setUserVisible:
T@"NSNumber",R,C,N,V_meDeviceStatus
startComponents
T@"NSNumber",R,C,N,V_numberOfManualSessions
suppressionType
T@"NSNumber",R,C,N,V_regionEntered
symbolImageName
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
syncEngine:zoneWithIDWasPurged:
T@"NSNumber",R,C,N,V_suppressionType
syncServiceType
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
updateConfigurationModificationDatesWithDataSource:syncManager:
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
updateMetadata:
T@"NSObject<NSFastEnumeration>",&,N,V_underlyingHealingSource
updatedContacts
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
wantsGlobalConfigurationUpdates
T@"NSObject<OS_nw_path_monitor>",R,N,V_pathMonitor
T@"NSSet",C,N,V_applicationIdentifiers
T@"NSSet",C,N,V_modeSpecificSettings
T@"NSSet",C,V_cloudDevices
T@"NSSet",R,C,N,V_activeAssertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_allowedContactGroups
T@"NSSet",R,C,N,V_allowedContactTypes
T@"NSSet",R,C,N,V_allowedContacts
T@"NSSet",R,C,N,V_allowedThreads
T@"NSSet",R,C,N,V_allowedWebApplications
T@"NSSet",R,C,N,V_assertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_deniedApplications
T@"NSSet",R,C,N,V_deniedContactGroups
T@"NSSet",R,C,N,V_deniedContactTypes
T@"NSSet",R,C,N,V_deniedContacts
T@"NSSet",R,C,N,V_deniedWebApplications
T@"NSSet",R,C,N,V_deviceIdentifiers
T@"NSSet",R,C,N,V_emailAddresses
T@"NSSet",R,C,N,V_enteredRegionIdentifiersPendingExit
T@"NSSet",R,C,N,V_phoneNumbers
T@"NSString",&,N,V_UUID
T@"NSString",&,N,V_behavior
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_deviceIdentifier
T@"NSString",&,N,V_eventUniqueID
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_modeIdentifier
T@"NSString",&,N,V_predicateType
T@"NSString",&,N,V_reason
T@"NSString",&,N,V_reasonOverride
T@"NSString",&,N,V_regionIdentifier
T@"NSString",&,N,V_scheduleIdentifier
T@"NSString",C,D,N
T@"NSString",C,N
T@"NSString",C,N,V_deviceName
T@"NSString",C,N,V_osBuild
T@"NSString",C,N,V_serviceIdentifier
T@"NSString",R
T@"NSString",R,C
T@"NSString",R,C,D,N
T@"NSString",R,C,N
T@"NSString",R,C,N,V_calendarIdentifier
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_contactIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
T@"NSString",R,C,N,V_firstName
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSString",R,C,N,V_lastModifiedByDeviceID
T@"NSString",R,C,N,V_lastName
T@"NSString",R,C,N,V_meDeviceName
T@"NSString",R,C,N,V_modeIdentifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_nickName
T@"NSString",R,C,N,V_organizationName
T@"NSString",R,C,N,V_pairingDataStore
T@"NSString",R,C,N,V_symbolImageName
T@"NSString",R,C,N,V_tintColorName
T@"NSString",R,C,N,V_zone
T@"NSString",R,C,V_identifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSUUID",C,D,N
T@"NSUUID",R,C,N,V_UUID
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,C,N,V_interruptionInvalidationAssertionUUID
T@"NSUUID",R,C,N,V_pairingIdentifier
T@"NSUUID",R,D,N
TB,D,N
TB,D,N,GisAutomaticallyGenerated
TB,D,N,GisCloudSyncEnabled
TB,D,N,GisDeleted
TB,D,N,GisPairSyncEnabled
TB,N
TB,N,GisEncryptionAvailable
TB,N,GisICloudEnabled,V_iCloudEnabled
TB,N,GisInitialized,V_initialized
TB,N,GisReachable,V_reachable
TB,N,GisScreenMirrored
TB,N,GisScreenShared
TB,N,GisSyncPreferenceEnabled
TB,N,GisUserVisible,V_userVisible
TB,R
TB,R,D,N,Gdnds_isOutOfSpaceError
TB,R,N
TB,R,N,GforcesAssertionStatusUpdate,V_forcesAssertionStatusUpdate
TB,R,N,GisAutomaticallyGenerated,V_automaticallyGenerated
TB,R,N,GisCloudSyncEnabled,V_cloudSyncEnabled
TB,R,N,GisDeleted
TB,R,N,GisDeleted,V_deleted
TB,R,N,GisIOS14EraOS,V_iOS14EraOS
TB,R,N,GisPairSyncEnabled,V_pairSyncEnabled
TB,R,N,GisPresentationModeEnabled
TB,R,N,GisResolutionContextAssumingDeviceUILocked,V_resolutionContextAssumingDeviceUILocked
TB,R,N,GisSyncAvailable
TB,R,N,GisSyncEnabled
TB,R,N,GisSyncSuppressedClient,V_syncSuppressedClient
TB,R,N,GisUserInteractionClient,V_userInteractionClient
TB,R,N,V_enabled
TB,R,N,V_enabledAtLocation
TB,R,N,V_enabledDrivingMode
TB,R,N,V_enabledDuringEvent
TB,R,N,V_enabledForOneHour
TB,R,N,V_enabledFromControlCenterPhone
TB,R,N,V_enabledFromControlCenterWatch
TB,R,N,V_enabledSleepMode
TB,R,N,V_enabledUntilEvening
TB,R,N,V_enabledUntilMorning
TB,R,N,V_hasSecureData
TB,R,N,V_manuallyEnabled
TB,R,N,V_redactSensitiveData
TB,R,N,V_supportsSilenceLists
TB,R,N,V_wantsGlobalConfigurationUpdates
TB,R,N,V_wantsMeDeviceStateUpdates
TB,R,N,V_wantsModeUpdates
TB,R,N,V_wantsSettingsUpdates
TB,R,N,V_wantsStateUpdates
TQ,D,N
TQ,R
TQ,R,D,N
TQ,R,N
TQ,R,N,V_assertionSyncProtocolVersion
TQ,R,N,V_configurationSyncProtocolVersion
TQ,R,N,V_destination
TQ,R,N,V_deviceClass
TQ,R,N,V_dimsLockScreen
TQ,R,N,V_impactsAvailability
TQ,R,N,V_interruptionBehaviorSetting
TQ,R,N,V_interruptionSuppression
TQ,R,N,V_lostModeState
TQ,R,N,V_mode
TQ,R,N,V_modesCanImpactAvailability
TQ,R,N,V_outcome
TQ,R,N,V_overrideType
TQ,R,N,V_partitionType
TQ,R,N,V_preventAutoReply
TQ,R,N,V_protocolVersion
TQ,R,N,V_reasonOverride
TQ,R,N,V_repeatInterval
TQ,R,N,V_serviceType
TQ,R,N,V_syncServiceType
TQ,R,N,V_visibility
TQ,V_lockState
TQ,V_lostModeState
Tq,N
Tq,R,N,V_compatibilityVersion
Tq,R,N,V_ephemeralResolvedCompatibilityVersion
Tq,R,N,V_semanticType
T{?=qqq},R,N,V_lastModifiedByVersion
URLByAppendingPathComponent:
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
URLForResource:withExtension:
URLWithString:
UTF8String
UUID
UUIDString
UUIDs
_UUID
_UUIDs
_accessLock
_accessor
_accountStatus
_accountUpdateSource
_activeAssertionUUIDs
_activeAssertionUpdateClientIdentifiers
_activeDateIntervalByAssertionUUID
_activeDateIntervalForModeAssertion:currentlyActive:
_activeDateIntervalForScheduleLifetime:assertion:date:ignoreMatchScheduleStartDate:
_activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:
_activeLifetimeAssertionUUIDs
_activeModeConfigurationForBehavior:
_activeUUIDs
_aggregateMetricsWithEnabled:manuallyEnabled:numberOfNewSessions:numberOfNewManualSessions:controlCenterPhone:controlCenterWatch:type:mode:dayOfWeek:
_aggregateMonitor
_allAppSpecificSettingsOfType:
_allModes
_allPerModeSettingsMOsOfType:processBlock:
_allowSyncEngineCreation
_allowed
_allowedApplications
_allowedContactGroups
_allowedContactTypes
_allowedContacts
_allowedWebApplications
_appConfigurationManager
_appConfigurationServiceProvider
_appFocusConfigurationCoordinator
_appForegroundTriggerManager
_appInfoByBundleIdentifier
_appInfoCache
_appSpecificSettingsManager
_applicationConfigurationType
_applicationIdentifierMapper
_applicationIdentifiers
_applicationRecord
_areSyncDatesValidAtDate:
_assertion
_assertionIdentifierForHealthKitWorkoutEvent:
_assertionSyncManager
_assertionSyncProtocolVersion
_assertionUpdateClientIdentifiers
_assertions
_automaticallyGenerated
_auxiliaryStateMonitor
_availability
_availabilityServiceProvider
_available
_backingStore
_bedtimeBehaviorEnabledSetting
_beginMonitoringForChanges
_beginObservingKeybag
_behavior
_behaviorSettings
_bestMatchForContact:inContacts:
_biomeDonationManager
_biomeQueue
_bundleIDToModeIdentifierTriggers
_bundleIdentifier
_cache
_cacheURL
_calculateUpdateResultForStore:previousStore:
_calendar
_calendarEventLifetimeMonitor
_calendarEventStoreChangedWithNotification:
_calendarIdentifier
_calloutQueue
_canTombstoneBeRemovedWithRecordID:
_children
_ckRecordIDsToForceSave
_cleanupStore:
_cleanupWithError:completion:
_clientConnectionDetailsByConnection
_clientDetailsForClientIdentifier:clientConnection:
_clientDetailsProvider
_clientIdentifier
_clientIdentifiers
_clientNotificationQueue
_clientToModeIdentifier
_cloudDevices
_cloudKitAccountChanged:
_cloudService
_cloudSyncEnabled
_cloudSyncService
_coalescingQueue
_coalescingQueue_coalesceWithTriggerConfiguration:event:
_coalescingQueue_refreshWithTriggerConfiguration:
_coalescingQueue_resetCoalescingTimer
_coalescingTimer
_compatibilityVersion
_completion
_completionFiredFlag
_computedModeStream
_configuration
_configurationProvider
_configurationSyncProtocolVersion
_configureAppForegroundTriggerWithConfiguration:
_configureSmartTriggerWithSupportedModes:
_configureTriggerWithMode:
_configureWorkoutTriggerWithMode:
_connection
_connections
_contactHandle
_contactHistoryToken
_contactIdentifier
_contactProvider
_contactStore
_contactStoreChanged:
_contactsWithCNContacts:
_container
_createConfigurationFromCKRecord:
_createConfigurationFromDNDSIDSRecord:
_createDefaultModeForWorkoutTriggerIfNecessary
_created
_creationDate
_currentConfiguration
_currentModeIdentifier
_currentRegion
_currentScheduleSettingsByModeIdentifier
_currentTriggerConfiguration
_data
_dataSource
_date
_dateForYesterday
_dateFormatter
_dayOfWeek
_debounceTimer
_decodeRecordFromData:
_decodeRecordIDFromData:
_defaultModuleDirectories
_delegate
_delegates
_deleted
_deletedContactIdentifiers
_deniedApplications
_deniedContactGroups
_deniedContactTypes
_deniedThreads
_deniedWebApplications
_descriptionForRedacted:
_destination
_details
_detailsByIdentifier
_detailsForClientIdentifier:bundleInfoDictionary:
_deviceClass
_deviceIdentifier
_deviceIdentifiers
_deviceName
_deviceObsoletionDuration
_deviceOutOfSpace
_didReceiveUnlockMessage
_dnds_assertionSyncProtocolVersion
_dnds_configurationSyncProtocolVersion
_dnds_isIOS14EraOS
_dnds_minorBuildVersion
_dnds_operatingSystemVersion
_dnds_pairedDeviceClass
_dnds_safeStringArrayEntitlementForKey:
_dnds_supportsSilenceLists
_donateEventForStateUpdate:
_drivingTriggerManager
_effectiveIntervals
_enabled
_enabledAtLocation
_enabledDrivingMode
_enabledDuringEvent
_enabledForOneHour
_enabledFromControlCenterPhone
_enabledFromControlCenterWatch
_enabledSleepMode
_enabledUntilEvening
_enabledUntilMorning
_encodedDataFromRecord:
_encodedRecordIDFromRecordID:
_encryptionAvailable
_endComponents
_endDate
_endMonitoringForChanges
_enteredRegionIdentifiers
_enteredRegionIdentifiersPendingExit
_entitlementRecordForApplicationRecord:
_ephemeralResolvedCompatibilityVersion
_eventBehavior
_eventBehaviorResolver
_eventCoalescingTransaction
_eventForCalendarEventLifetime:assertionStartDate:
_eventStore
_eventStoreCreatingIfNeeded
_eventStream
_eventUniqueID
_executeAction:orActionIdentifier:withBundleIdentifier:modeIdentifier:groupIdentifier:exiting:metadataProvider:
_executeAction:withBundleIdentifier:modeIdentifier:groupIdentifier:
_executeQueuedTaskFollowingTask:
_executor
_executorCreatingIfNeeded
_expiredUUIDs
_explicitRegionMonitor
_extensionLaunchQueue
_fallbackAppInfoByBundleIdentifier
_fallbackAppInfoForBundleIdentifier:
_favorites
_fetchAccountStateWithCompletionHandler:
_fetchAppStoreInfoForBundleIdentifiers:timeoutInterval:limit:completionHandler:
_fetchContactHistoryWithToken:monitoredContacts:handler:
_fetchContactsForMonitoredContacts:handler:
_fetchIconForAppInfo:timeoutInterval:completionHandler:
_fetchIconsForAppInfo:timeoutInterval:completionHandler:
_fetchQueue
_fileURL
_firstName
_fixupConfigurationsIfNeeded
_focusConfigurationEventPublisher
_focusStatusDomainPublisher
_forceConfigurationSyncIfNeededWithUpdateResult:
_forcesAssertionStatusUpdate
_forgetMetadataForRecordID:
_forgetObsoleteTombstones
_forgetRecordID:
_forgetSyncDatesForDevicesWithoutInitialSync
_forgetSyncDatesForOutdatedDevices
_forgetSyncDatesForRecordID:
_fuzzTimer
_gamingTriggerManager
_generateDiff
_getCurrentPairedDevice
_globalConfigurationManager
_globalConfigurationStore
_groupDetails
_groupWithIdentifierCompleted:
_handleAccountFetchWithUpdatedUserRecordID:updatedAccountStatus:updatedEncryptionAvailable:updatedSyncEnabled:
_handleClientConnectionInterrupted:
_handleClientConnectionInvalidated:
_handleEventAction:token:descriptor:
_handleSignificantTimeChange
_handles
_hasActiveLifetimes
_hasSecureData
_hasUnlockedSinceBootForObserver:
_hideApplicationBadges
_iCloudEnabled
_iOS14EraOS
_iOS14SyncSuppressedClient
_iOSBundleIDForMacOSBundleID:
_identifier
_identifiers
_idsCloudService
_idsLocalService
_idsRecordIDsToForceSave
_idsSyncEngine
_immediateBypassCNGroupIdentifier
_impactsAvailability
_incrementTasksExecutedForGroupWithIdentifier:
_inflightBundleIdentifiers
_inflightDateByRequestIdentifier
_inflightExpirationTime
_inflightExpirationTimer
_inflightMetadata
_inflightMetadataByRequestIdentifier
_informDelegates
_inheritFromDefaultModeConfiguration:
_init
_initWithActiveLifetimeAssertionUUIDs:currentRegion:regionEntered:
_initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:
_initWithApplicationConfigurationType:senderConfigurationType:suppressionType:minimumBreakthroughUrgency:hideApplicationBadges:compatibilityVersion:
_initWithAssertions:activeAssertionUUIDs:activeDateIntervalByAssertionUUID:interruptionBehaviorSetting:lostModeState:lastUpdate:
_initWithBackingStoreURL:
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:configurations:
_initWithClass:deviceCapabilities:identifier:frameworkVersion:
_initWithConfiguration:
_initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:
_initWithContext:
_initWithDetails:
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:dayOfWeek:
_initWithEnteredRegionIdentifiersPendingExit:
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
_initWithInterruptionBehaviorSetting:
_initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:activeAssertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:wantsModeUpdates:wantsActiveModeUpdates:wantsGlobalConfigurationUpdates:wantsMeDeviceStateUpdates:
_initWithLastReceivedStoreDate:lastSentStoreDate:pendingLastSentStoreDate:
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:timePeriodWeekdays:bedtimeBehaviorEnabledSetting:
_initWithListen:send:pairedDevice:
_initWithMetadata:data:
_initWithMetricsByDay:lastDailyHeartbeat:metricsByWeek:lastWeeklyHeartbeat:metricsByMonth:lastMonthlyHeartbeat:
_initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:
_initWithMode:configuration:secureConfiguration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:lastModifiedByVersion:lastModifiedByDeviceID:automaticallyGenerated:compatibilityVersion:ephemeralResolvedCompatibilityVersion:hasSecureData:
_initWithModeConfigurations:
_initWithModePlaceholders:
_initWithRecord:
_initWithRecordID:
_initWithRecordMetadata:
_initWithSenderConfiguration:allowedApplications:deniedApplications:allowedWebApplications:deniedWebApplications:
_initWithSnapshot:
_initWithStatus:name:
_initWithSymbolImageName:tintColorName:name:modeIdentifier:semanticType:visibility:identifier:
_initWithTriggers:
_initWithURL:
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_initialSyncForDataSource:withZoneName:
_initialSyncForDataSources
_initialSyncPairedDeviceIdentifiers
_initialized
_installedBundleIdentifiers
_interruptionBehaviorSetting
_interruptionInvalidationAssertionUUID
_interruptionSuppression
_invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
_invalidationDate
_invalidationRequests
_invalidations
_invitation
_isCloudSyncPreferenceEnabled
_isLocalUserAvailableForAppId:modeIdentifier:withError:
_isLocalUserAvailableForMessagesWithModeIdentifier:withError:
_isMetadataValidAtDate:
_isPairedDeviceOutdated:
_isTCCUserAvailabilityGrantedForMessages
_isWorkoutDNDNanoPreferenceEnabled
_isWorkoutTriggerEnabledForModeConfiguration:
_iterateClientConnectionsToSendWithHandler:
_lastCalculatedState
_lastChanceStore
_lastDailyHeartbeat
_lastInformedReachability
_lastModified
_lastModifiedByDeviceID
_lastModifiedByVersion
_lastMonthlyHeartbeat
_lastName
_lastReceivedStoreDate
_lastSentStoreDate
_lastSystemSnapshot
_lastUpdate
_lastUpdatedTimestamp
_lastWeeklyHeartbeat
_latestEvent
_latitude
_layoutMonitor
_legacyAssertionSyncManager
_legacyModeConfigurationForModeConfiguration:
_lifetime
_lifetimeMonitors
_lifetimeTimerFireDate
_lifetimeType
_listeners
_loadDataFromBackingStore
_loadMetadataFromBackingStore
_loadPreloadBundles
_localService
_localSyncService
_locationLifetimeMonitor
_locationManager
_lock
_lockState
_lock_accessor
_lock_currentAccountStatus
_lock_currentUserRecordID
_lock_dataSourceForRecord:
_lock_dataSourceForZoneID:
_lock_dataSources
_lock_destroySyncEngine
_lock_encryptionAvailable
_lock_existingConfiguration
_lock_existingConfigurations
_lock_isCloudSyncPreferenceEnabled
_lock_isPairSyncPreferenceEnabled
_lock_isSyncAvailable
_lock_isSyncEnabled
_lock_isSyncPreferenceEnabled
_lock_listenersByContactHistoryToken
_lock_mergeLocalConfigurationRecord:withRemoteCKRecord:deleteModeOnCorruption:
_lock_mergeLocalConfigurationRecord:withRemoteConfigurationRecord:modeIdentifier:sourceDeviceIdentifier:sourceFrameworkVersion:sourceIsCloud:sourceWantsToForce:deleteModeOnCorruption:
_lock_modeConfigurationForCKRecordID:
_lock_modeConfigurationForDNDSIDSRecordID:
_lock_modeConfigurationForModeIdentifier:
_lock_modeIdentifiers
_lock_monitoredContactsByContactHistoryToken
_lock_mutableExistingConfigurationInStore:
_lock_mutableExistingConfigurations
_lock_populateCKRecord:lastChanceRecord:
_lock_populateDNDSIDSRecord:
_lock_prepareCKRecordToSave:
_lock_prepareDNDSIDSRecordToSave:
_lock_purgeRecordIDs:
_lock_recordIDsForIDSSyncEngine:
_lock_removeModeConfigurationWithCKRecordID:
_lock_removeModeConfigurationWithModeIdentifier:
_lock_setCompanionCloudSyncPreferenceEnabled:
_lock_setCurrentAccountStatus:
_lock_setCurrentUserRecordID:
_lock_setEncryptionAvailable:
_lock_syncEngine
_lock_updateCompanionCloudSyncPreference
_lock_updateConfigurationWithCKRecord:
_lock_updateConfigurationWithDNDSIDSRecord:
_lock_updateModeConfigurationWithCKRecord:
_lock_updateModeConfigurationWithConfiguration:
_lock_updateModeConfigurationWithDNDSIDSRecord:
_lock_updateSyncSettingsIfNewSettingsDiffer:
_lock_writeRecord:writePartition:error:
_longitude
_lostModeState
_macOSBundleIDForiOSBundleID:
_maintainMetadataBackingStore
_manuallyEnabled
_meDeviceName
_meDeviceService
_meDeviceState
_metadata
_metadataBackingStore
_metadataStore
_metricsBackingStore
_metricsByDay
_metricsByWeek
_metricsDayStringForDate:
_metricsMonthStringForDate:
_metricsRecord
_metricsWeekStringForDate:
_middleName
_migrateBypassSettingsIfNeeded
_migrateDefaultDoNotDisturbModeIfNeeded
_migrateOldStoresWithSyncEnabledState:
_migrateWorkoutDNDNanoPreference
_mindfulnessTriggerManager
_minimumBreakthroughUrgency
_mode
_modeAssertionManager
_modeConfigurationManager
_modeConfigurationModifiedDate
_modeConfigurations
_modeConfigurationsByModeIdentifier
_modeConfigurationsStore
_modeIdentifierByRegionIdentifier
_modeSpecificSettings
_modesCanImpactAvailability
_modesToSave:modesToDelete:
_modifiedConfigurations
_modifiedIDs
_monitorListener
_monitoredBundleIdentifiers
_monitoredContactIdentifiers
_name
_nickName
_nonPersistentAssertionTransaction
_notifyChangeOfModeConfigurationFrom:to:
_notifyDelegateOfConfigurationChange
_npsManager
_npsQueue
_npsQueue_refreshForNanoPreferenceChange
_numberForKey:
_numberOfManualSessions
_numberOfSessions
_onlyDuringEvent
_organizationName
_original
_osBuild
_outcome
_overrideType
_pairSyncEnabled
_pairedDevice
_pairedDeviceDidChangeNotificationToken
_pairedDeviceStateChanged:
_pairedDeviceStateMonitor
_pairingDataStore
_pairingIdentifier
_parseDictionary:
_partitionType
_pathMonitor
_pendingEvents
_pendingLastSentStoreDate
_perModeSettingsMOsOfType:modeIdentifier:processBlock:
_persistentAssertionClient
_persistentContainer
_phoneCallBypassSettings
_phoneNumbers
_placeholderModeManager
_placeholderModes
_populateCKRecord:withGlobalConfiguration:
_populateDNDSIDSRecord:withGlobalConfiguration:
_predicate
_predicateType
_predicates
_preferModeAssertion:toModeAssertion:
_prepareModeConfigurationForStorage:withError:
_presentationModeEnabled
_preventAutoReply
_previousPairedDevice
_priorityForModeAssertion:
_propagateBypassSettings:
_propagateScheduleSettings:
_protocolVersion
_publishStatusKitAvailability:activityIdentifier:local:scheduled:date:forced:completion:
_publishStatusKitCurrentAvailabilityForced:override:completionHandler:
_publisher
_purgeData
_purgeDataFromDataSources
_purgeRecordIDs:
_queryStateWithCompletionHandler:
_queue
_queue_addSubscriberForToken:descriptor:
_queue_adjustEventBehaviorResolutionForAuxiliaryState:
_queue_beginMonitoringCurrentLocation
_queue_bundleIdentifiersWithMissingInfo
_queue_cancelInflightExpirationTimer
_queue_cancelRetryTimer
_queue_dataSourceForZone:
_queue_didAppAvailabilityChangeForApplicationIdentifier:fromConfiguration:toConfiguration:
_queue_earliestExpirationTimeSinceNowForInflightMetadata
_queue_eventSourceIsContact:
_queue_eventSourceIsContact:inGroupWithIdentifier:
_queue_eventSourceIsEmergencyContact:
_queue_eventSourceIsFavorite:
_queue_eventSourceIsRepeat:clientDetails:date:
_queue_fetchAllDevices
_queue_fetchMissingAppInfo
_queue_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
_queue_firstContactForPredicate:
_queue_geofenceLocation:
_queue_geofenceRegion:
_queue_gizmoUpdateDate
_queue_handleAckMessage:fromPairedDeviceIdentifier:
_queue_handleDidSendRequestIdentifier:withSuccess:error:
_queue_handleFirstUnlock
_queue_handleIncomingMessage:deviceIdentifier:
_queue_handleKeybagStatusChanged
_queue_handleMessage:fromPairedDeviceIdentifier:
_queue_handleMessage:withVersionNumber:fromDeviceIdentifier:
_queue_handlePairedDeviceAndSyncSettingsChange
_queue_handleReplaceMessage:fromPairedDeviceIdentifier:
_queue_handleResyncMessage:fromPairedDeviceIdentifier:
_queue_handleUnlockMessage:fromPairedDeviceIdentifier:
_queue_handleUpdateMessage:fromPairedDeviceIdentifier:
_queue_hasUnlockedSinceBoot
_queue_informDelegatesOfPairedStateChange
_queue_invalidateAssertionOnExitFromRegion:
_queue_isBreakthroughAllowedForModeIdentifier:withConfiguration:application:sender:urgency:eventType:threadIdentifier:filterCriteria:notifyAnyway:reason:
_queue_isBreakthroughAllowedForSender:eventType:clientDetails:date:reason:
_queue_monitorBundleIdentifiers:
_queue_notifyIntentExtensionsOfUserAvailability:applicationIdentifiers:completionHandler:
_queue_notifyIntentExtensionsOfUserAvailability:availabilityOverride:applicationIdentifiers:completionHandler:
_queue_observers
_queue_priorityHasUnlockedSinceBoot
_queue_priorityObservers
_queue_read
_queue_recordsByID
_queue_refreshMonitor
_queue_refreshMonitorForDate:
_queue_removeAllInflightMetadata
_queue_removeAllInflightMetadataWithExpirationDate:
_queue_removeCachedDataForAppInfo:
_queue_removeSubscriberForToken:
_queue_removeUnusedAppInfo
_queue_resetRetryTimer
_queue_resolutionForModeWithConfiguration:eventDetails:clientDetails:state:date:error:
_queue_resolveEnteredRegionIdentifiersWithAssertionRegionIdentifiers:
_queue_resolveOutcomeForEventSender:clientDetails:date:reason:
_queue_restartInflightExpirationTimer
_queue_resume
_queue_saveDataToBackingStoreWithError:
_queue_sendAckWithMetadata:forAction:toDeviceWithIdentifier:
_queue_sendEventWithXPCObject:
_queue_sendExpiryEventForAllLocationAssertions
_queue_sendMessage:withVersionNumber:messageType:toDestinations:requestIdentifier:error:
_queue_sendModifiedRecordIDs:deletedRecordIDs:toDeviceWithIdentifier:
_queue_sendPendingEvents
_queue_sendResyncMessageToDeviceWithIdentifier:
_queue_sendStateSnapshotToPairedDevices:force:
_queue_sendUnlockMessageToDeviceWithIdentifier:
_queue_shouldAdjustEventBehaviorForMirroring
_queue_startInflightExpirationTimer
_queue_startMonitoringForRegion:
_queue_startRetryTimer
_queue_stopMonitoringCurrentLocation
_queue_syncDataSourcesToDeviceWithIdentifier:
_queue_takeAssertionOnEntryIntoRegion:
_queue_updateAvailabilityKit:fromConfiguration:toConfiguration:completionHandler:
_queue_updateCloudDevices
_queue_updateCompanionAssertionMirroringForState:
_queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:
_queue_updateDevices
_queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:
_queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:
_queue_updatePairedState
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:options:
_queue_updateToggleSyncForReason:
_queue_validateIDSSyncEngine
_queue_write
_queuedTasksByBundleIdentifier
_reachability
_reachable
_read
_readModeConfigurationsReturningError:
_readPlaceholderModesReturningError:
_readSettingsReturningError:
_recordClass
_recordID
_recordIDSyncDatesByPairedDeviceIdentifier
_recordMetadataByRecordID
_recordWithEncodedInfo:error:
_redactSensitiveData
_refresh
_refreshIfNeccessaryForEvent:
_refreshMigratingIfNecessary
_refreshWithMode:event:
_refreshWithScheduleSettings:modeIdentifier:currentScheduleAssertion:context:
_refreshWithScheduleSettingsByModeIdentifier:context:
_refreshWithSupportedModes:event:
_refreshWithTriggerConfiguration:event:
_regionByRegionIdentifier
_regionEntered
_regionIdentifier
_registerOrMutateConnectionDetailsForClientConnection:handler:
_relevantBundleIdentifiers
_removeConnection:
_removeTask:fromGroupWithIdentifier:
_removedConfigurations
_removedIDs
_removedModeConfigurationRecordForModeRecord:
_repeatEventSourceBehaviorEnabledSetting
_requestDate
_requestListener
_requiredEntitlement
_resolutionContextAssumingDeviceUILocked
_resolutionRecord
_resolveStore:
_resolveTransactionForModeAssertionStore
_retriesAvailable
_retryLastChanceRecords
_retryLastChanceRecordsForDataSource:withZoneName:
_retryTimer
_role
_sanitizeAppInfo:
_saveBehaviorSettings:scheduleSettings:error:
_saveConfiguration:forModeIdentifier:error:
_saveDataToBackingStoreWithError:
_saveMetadataToBackingStore
_saveModeConfiguration:writeSecurePartition:error:
_scheduleEnabledSetting
_scheduleIdentifier
_scheduleLifetimeMonitor
_scheduleManager
_scheduleManagerClientIdentifierForModeIdentifier:
_scheduleSettings
_scheduleSettingsForModeConfigurations
_scheduleSettingsFromDefaultScheduleTrigger
_scheduleSettingsMatchingTrigger:
_scheduleTriggerMatchingSettings:
_screenShared
_secureConfiguration
_secureFileURL
_securityClass
_semanticType
_send
_sendDailyHeartbeatIfNeeded
_sendMonthlyHeartbeatIfNeeded
_sendWeeklyHeartbeatIfNeeded
_senderConfiguration
_senderConfigurationType
_serviceIdentifier
_serviceProvider
_serviceType
_setDefaultScheduleTriggerWithScheduleSettings:
_setDimsLockScreenSetting:forModeConfigurationWithIdentifier:
_setLaunchId:
_setLostModeState:error:
_setReachable:
_setScheduleTrigger:forModeConfigurationWithIdentifier:
_setWorkoutDNDNanoPreferenceEnabled:
_settingsManager
_settingsSyncManager
_setupLock
_shouldExecuteActionOnApplicationWithBundleIdentifier:
_silenced
_sinks
_sleepingTriggerManager
_smartTriggerManager
_sourcesByZone
_sourcesByZoneName
_startComponents
_startDate
_startOfLastMonth
_startOfLastWeek
_startOfMonthWithDate:
_startOfWeekWithDate:
_state
_stateProvider
_stateSystemSnapshot
_statusService
_store
_storeLock
_subscribers
_supportsSilenceLists
_suppressionType
_symbolImageName
_syncEngine
_syncEngineQueue
_syncEngineQueue_updateAccountWithSyncEnabledState:
_syncService
_syncServiceType
_syncSettings
_syncSettingsProvider
_syncState
_syncSuppressedClient
_sysdiagnoseDataShouldRedact:
_systemFieldsByRecordID
_systemFocusConfigurationCoordinator
_taskGroups
_tccProvider
_testDatabaseURL
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodWeekdays
_timerCurrentDelay
_timerHandlersByToken
_timerLock
_timerQueuedDevices
_timerQueuedForceUpdate
_timerQueuedTransaction
_tintColorName
_tombstoneObsoletionDuration
_triggers
_underlyingBackingStore
_underlyingHealingSource
_unregisterConnectionDetailsForClientConnection:
_untilExitMonitor
_updateAccountWithCurrentSyncEnabledState
_updateAccountWithSyncEnabledState:
_updateBypassSettings
_updateCloudSyncPreferences
_updateContactsWithIdentifiers
_updateContactsWithoutIdentifiers
_updateForReason:
_updateGizmoAssertionSync
_updateHandlerForPath:
_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:
_updateNanoPreferencesForRefreshWithModeConfiguration:
_updatePairSyncPreferences
_updateResult
_updateScheduleSettingsWithDate:
_updateSystemFieldsForRecord:
_updated
_updatedContacts
_url
_urlSession
_userAvailabilityCoordinator
_userInteractionClient
_userRecordID
_userVisible
_userVisibleEndDate
_versionNumber
_visibility
_wantsActiveModeUpdates
_wantsGlobalConfigurationUpdates
_wantsMeDeviceStateUpdates
_wantsModeUpdates
_wantsSettingsUpdates
_wantsStateUpdates
_workQueue
_workQueue_handleFirstLaunch
_workoutTriggerManager
_write
_writeConfiguration:error:
_writeMetricsToStore:
_writeModeConfigurationsRecord:writeSecurePartition:error:
_writeSettingsRecord:error:
_xpcCheckIn
_xpcEventPublisher
_zone
_zoneIDForRecord:
_zoneNames
absoluteString
acceptEventVisitor:
accountFeatureSupport
accountFeaturesWithCloud:hasCloudDevices:paired:hasPairedDevices:
accountInfoWithCompletionHandler:
accountStatus
accountStatusWithCompletionHandler:
action
actionAppContext
actionForBundleIdentifier:andActionIdentifier:error:
actionWithOpenWhenRun:
actionWithParameters:
actionsConformingToSystemProtocols:logicalType:bundleIdentifier:error:
activate
activateManualDomain:
activateModeWithDetails:withRequestDetails:completionHandler:
activeAssertionUUIDs
activeAssertionUpdateClientIdentifiers
activeAssertionsDidChangeForLifetimeMonitor:
activeDateInterval
activeDateIntervalByAssertionUUID
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
activeDateIntervalForScheduleLifetime:assertion:date:
activeLifetimeAssertionUUIDs
activeModeAssertionMetadata
activeModeAssertionWithRequestDetails:completionHandler:
activeModeConfiguration
activeModeIdentifier
activeModeUUID
activeUUIDs
activityUUID
addDelegate:
addDelegate:queue:
addListener:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPriorityObserver:
addRecord:
addRecordIDsToSave:recordIDsToDelete:
addRecordZonesToSave:recordZoneIDsToDelete:
addTriggerForModeWithIdentifier:forRegion:
addTriggerForModeWithIdentifier:onForegroundOfApp:
addZoneName:
aggregateMonitor
allObjects
allValues
allocWithZone:
allowedApplicationIdentifiers
allowedApplications
allowedContactGroups
allowedContactTypes
allowedModesForContactHandle:withError:
allowedThreads
allowedWebApplicationIdentifiers
allowedWebApplications
alphanumericCharacterSet
andPredicateWithSubpredicates:
anyObject
appActionForActionIdentifier:applicationIdentifier:modeIdentifier:error:
appActionFromDictionaryRepresentation:
appActionWithIdentifier:forApplicationIdentifier:modeIdentifier:error:
appActionsForModeIdentifier:error:
appConfigurationManager:didClearActionWithIdentifier:forApplicationIdentifier:modeIdentifier:
appConfigurationManager:didClearActionsForAppsInModeIdentifiers:
appConfigurationManager:didClearSystemAction:modeIdentifier:
appConfigurationManager:didSetAction:forApplicationIdentifier:modeIdentifier:
appConfigurationManager:didSetSystemAction:modeIdentifier:
appConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
appConfigurationPredicateForApplicationIdentifier:modeIdentifier:error:
appConfigurationTargetContentIdentifierPrefixForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
appConfigurationTargetContentIdentifierPrefixForApplicationIdentifier:modeIdentifier:error:
appFocusConfigurationCoordinator:didUpdateAppConfigurationContextForModeIdentifier:
appForegroundTriggerConfigurationForAppForegroundTriggerManager:
appInfoForBundleIdentifier:
appInfoForBundleIdentifiers:
appInfoWithApplicationRecord:
appLaunch
appSpecificSettingsClass
appSpecificSettingsEntity
appSpecificSettingsForManagedObject:
appSpecificSettingsFromDictionaryRepresentation:
appSpecificSettingsOfType:identifier:modeIdentifier:applicationIdentifier:error:
appSpecificSettingsOfType:modeIdentifier:applicationIdentifier:error:
appSpecificSettingsOfType:modeIdentifier:error:
application
applicationConfigurationType
applicationExtensionRecords
applicationIconDidChange:
applicationIdentifier
applicationIdentifierForFileWithSourceApplicationIdentifier:
applicationIdentifierForSyncWithSourceApplicationIdentifier:
applicationIdentifierForTargetPlatform:withSourceApplicationIdentifier:
applicationIdentifierMapper
applicationIdentifiers
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationStateDidChange:
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayHealingSource
arrayWithCapacity:
arrayWithContentsOfURL:
arrayWithObjects:count:
assertion
assertionSyncProtocolVersion
assertionTaken:withClientDetails:lockState:
assertionUpdateClientIdentifiers
assertions
auditToken
authorizationStatus
automaticallyGenerated
autorelease
availability
availableModesFilteringPlaceholders:returningError:
availableRegions
backingRecordKeys
backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
backingStoreWithFileURL:
backingStoreWithFileURL:secureFileURL:
bedtimeBehaviorEnabledSetting
behavior
behaviorSettings
behaviorSettingsWithError:
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolValue
bs_boolForKey:
bs_compactMap:
bs_containsObjectPassingTest:
bs_differenceWithArray:
bs_each:
bs_filter:
bs_firstObjectOfClass:
bs_firstObjectPassingTest:
bs_flatten
bs_mapNoNulls:
bs_safeAddObject:
bs_safeArrayForKey:
bs_safeDictionaryForKey:
bs_safeNumberForKey:
bs_safeObjectForKey:ofType:
bs_safeStringForKey:
bs_setSafeObject:forKey:
bs_takeObjectForKey:
bundleID
bundleIdentifier
bundlePath
bundleRecordForAuditToken:error:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bypassSettings
cStringUsingEncoding:
cachedBackingStoreDidPurgeCache:
cachedIconURL
calendar
calendarIdentifier
calendarWithIdentifier:
callAlert
cancel
center
characterSetWithCharactersInString:
class
classForCoder
cleanupState
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:
clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
clearSystemActionWithIdentifier:forModeIdentifier:withRequestDetails:completionHandler:
clearSystemActionWithIdentifier:modeIdentifier:
clientDetailsForClientIdentifier:
clientDetailsForIdentifier:
clientDetailsForIdentifier:applicationBundleURL:
clientIdentifier
clientIdentifiers
cloudDevices
cloudSyncEnabled
cloudSyncState
code
commonReachability
compare:
compare:options:
compatibilityVersion
completeManagedObject:forAppSpecificSettings:
component:fromDate:
components:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithString:
configuration
configurationForDefaultMainDisplayMonitor
configurationForRecord:
configurationForRecord:secureRecord:
configurationSyncProtocolVersion
configurations
configureConnection:
conformsToProtocol:
connection
connectionWithError:
contactForContact:
contactForRecord:
contactHandle
contactHistoryToken
contactIdentifier
contactMonitor:didReceiveUpdatedContacts:deletedContactIdentifiers:withContactHistoryToken:
contactMonitor:didReceiveUpdatedContactsForContactsWithoutIdentifiers:
contactWithCNContact:
contactsWithExceptions
containerWithIdentifier:
containingBundleRecord
containsDate:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
coordinate
coordinateUserAvailability:fromConfiguration:toConfiguration:completionHandler:
coordinateUserAvailabilityUpdateForApplicationIdentifier:forced:completionHandler:
copy
copyItemAtURL:toURL:error:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
countryCode
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createWorkoutModeForWorkoutTriggerManager:
creationDate
currentContext
currentDevice
currentHistoryToken
currentLocale
currentNotificationSettingsCenter
currentRegion
currentStateForAppFocusConfigurationCoordinator:
currentStateForEventBehaviorResolver:
currentStateForLegacyAssertionSyncManager:
currentStateForSystemFocusConfigurationCoordinator:
currentUILockStateForEventBehaviorResolver:
currentlyActivePairedDeviceForSyncManager:
data
dataForKey:
dataSource
dataTaskWithRequest:completionHandler:
dataWithContentsOfURL:options:error:
dataWithJSONObject:options:error:
dataWithPropertyList:format:options:error:
dataWritingOptionsForSecurityClass:
databaseWasRebuilt
date
date:matchesComponents:
dateByAddingComponents:toDate:options:
dateByAddingTimeInterval:
dateComponents
dateFromComponents:
dateInterval
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
dayOfWeek
debounceTimer
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultConfiguration
defaultConfigurationType
defaultManager
defaultMinimumBreakthroughUrgency
defaultMode
defaultModeConfiguration
defaultScheduleSettings
defaultScheduleTrigger
defaultSuppressionType
defaultWorkspace
delegate
delegates
deleteObject:
deletedContactIdentifiers
deletedRecordIDsForPairedDeviceIdentifier:
deliverActiveModeAssertion:stateUpdate:clientIdentifiers:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverAllModes:
deliverAvailableModes:
deliverMeDeviceState:
deliverStateUpdate:
deliverUpdatedPairSyncState:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedPreventAutoReplySetting:
deniedApplicationIdentifiers
deniedApplications
deniedContactGroups
deniedContactTypes
deniedContacts
deniedThreads
deniedWebApplications
description
descriptor
destination
destinationIdIsPhoneNumber
destroyPersistentStoreAtURL:withType:options:error:
detail
detailsForBundleAtURL:
detailsForClientIdentifier:applicationBundleURL:
detailsForInactiveDoNotDisturb
detailsWithIdentifier:modeIdentifier:lifetime:reason:
deviceCapabilities
deviceClass
deviceForFromID:
deviceIdentifier
deviceIdentifiers
deviceManagementPolicyDidChange:
deviceName
deviceToDeviceEncryptionAvailability
deviceType
devicesChanged
dictionary
dictionaryRepresentation
dictionaryRepresentationForAppSpecificSettings:
dictionaryRepresentationWithCKRecord:partitionType:
dictionaryRepresentationWithContext:
dictionaryWithCapacity:
dictionaryWithContentsOfURL:
dictionaryWithContentsOfURL:error:
dictionaryWithDictionary:
dictionaryWithKeys:options:
dictionaryWithObjects:forKeys:count:
didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:
diffObject:againstObject:withDescription:
dimsLockScreen
displayName
distantFuture
distantPast
dnd_locationBundle
dnd_settingsType
dnds_assertionReasonValue
dnds_assertionSyncMetadataFileURL
dnds_backingStoreRootDirectoryURL
dnds_bypassSettings
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
dnds_dateValue
dnds_globalConfigurationBackingStoreFileURL
dnds_hasActiveModeUpdatesEntitlementForClientIdentifier:
dnds_hasAnyValidEntitlement
dnds_hasAuxiliaryStateModificationEntitlementForClientIdentifier:
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
dnds_hasMeDeviceStateEntitlementForClientIdentifier:
dnds_hasModeAssertionEntitlementForClientIdentifier:
dnds_hasModeConfigurationAvailabilityEntitlementForClientIdentifier:
dnds_hasModeConfigurationModificationEntitlementForClientIdentifier:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
dnds_hasStateRequestEntitlementForClientIdentifier:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
dnds_hasUserNotificationsCommunicationEntitlement
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
dnds_idsSyncEngineMetadataFileURL
dnds_invalidationReasonOverrideValue
dnds_invalidationReasonValue
dnds_isOutOfSpaceError
dnds_legacySettingsFileURL
dnds_lifetimePhaseForDate:
dnds_lifetimeTypeValue
dnds_localAssertionBackingStoreFileURL
dnds_locationAssertionExplicitRegionFileURL
dnds_locationAssertionUntilExitRegionFileURL
dnds_meDeviceStoreFileURL
dnds_modeConfigurationsBackingStoreFileURL
dnds_modeConfigurationsSecureBackingStoreFileURL
dnds_numberWithDate:
dnds_outOfSpaceError
dnds_placeholderModesLocalBackingStoreFileURL
dnds_predicateForContactsMatchingEventSender:
dnds_predicateTypeValue
dnds_rootDirectoryURL
dnds_safeNumberWithDate:
dnds_scheduleLifetimeBehaviorValue
dnds_scheduleSettingsWithLastUpdated:
dnds_secureLegacyArchiver
dnds_secureLegacyUnarchiverForReadingFromData:error:
dnds_setBypassSettings:
dnds_setSafeLocalDateForTimestamp:key:
dnds_setScheduleSettings:
dnds_settingsBackingStoreFileURL
dnds_stringForAssertionReason:
dnds_stringForInvalidationReason:
dnds_stringForInvalidationReasonOverride:
dnds_stringForLifetimeType:
dnds_stringForPredicateType:
dnds_stringForScheduleLifetimeBehavior:
dnds_syncEngineLastChanceFileURL
dnds_syncEngineMetadataFileURL
domain
doubleForKey:keyExistsAndHasValidFormat:
doubleValue
downgradeAssertionsIfNeededForSyncToPairedDevice:dataSource:syncManager:
downloadTaskWithRequest:completionHandler:
drivingModeForDrivingTriggerManager:
duration
earlierDate:
effectiveBundleIdentifiers
effectiveIntervals
elements
emailAddresses
emptyConfiguration
emptyResult
enabledAtLocation
enabledDrivingMode
enabledDuringEvent
enabledForOneHour
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledSetting
enabledSleepMode
enabledUntilEvening
enabledUntilMorning
encodeInteger:forKey:
encodeObject:forKey:
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedAction
encodedData
encodedReverseAction
encryptionAvailable
endComponents
enteredRegionIdentifiersPendingExit
entitiesByName
entitlements
entity
entityForName:inManagedObjectContext:
entriesForContact:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratorForChangeHistoryFetchRequest:error:
enumeratorWithOptions:
ephemeralResolvedCompatibilityVersion
ephemeralSessionConfiguration
error
errorWithDomain:code:userInfo:
evaluateWithObject:
evaluateWithObject:substitutionVariables:
eventBehavior
eventBehaviorResolver:appPredicateForApplicationIdentifier:modeIdentifier:
eventBehaviorResolver:bypassSettingsForClientIdentifier:
eventBehaviorResolver:configurationForModeIdentifier:
eventBehaviorResolver:isAvailabilityActiveForBundleIdentifier:
eventBody
eventDetails
eventType
eventUniqueID
eventsMatchingPredicate:
exceptionForApplication:
exceptionForApplication:thread:forModeIdentifier:
exceptionForApplicationIdentifier:
exceptionForApplicationIdentifier:thread:
exceptionForApplicationIdentifier:thread:forModeIdentifier:
exceptionForContactHandle:
exceptionForContactHandle:forModeIdentifier:
exceptionForWebApplicationIdentifier:
exceptionalModesForContactHandle:withError:
execute:
executeFetchRequest:error:
executeRequest:error:
executor:didCompleteExecutionWithResult:error:
executor:didFinishWithResult:error:
executor:didPerformActionWithResult:error:
executor:environmentForViewSnippetWithCompletion:
executor:needsActionConfirmationWithRequest:
executor:needsConfirmationWithRequest:
executor:needsContinueInAppWithRequest:
executor:needsDisambiguationWithRequest:
executor:preferredContentSizeForViewSnippetWithCompletion:
executor:shouldRunShowOutputAction:
executorForAction:options:delegate:
expiredUUIDs
fallbackConfiguration
fallbackState
familyName
fetchActionAppContextForAction:completionHandler:
fetchChanges:withCompletionHandler:
fetchContactsWithIdentifiers:error:
fetchRequest
fetchRequestFromTemplateWithName:substitutionVariables:
fetchRequestWithEntityName:
fetchUserRecordIDWithCompletionHandler:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
filePathURL
fileURLWithPath:
fileURLWithPathComponents:
filterCriteria
filterForSyncToPairedDevice:clientDetailsProvider:
filterUsingPredicate:
filterWithKeyPath:comparison:value:
filterWithKeyPath:value:
filteredArrayUsingPredicate:
firstName
firstObject
floatValue
focusConfigurationProtocol
forceUpdateAllDevices
forcesAssertionStatusUpdate
frameworkVersion
gameControllerStream
gamingModeForGamingTriggerManager:
garbageCollect
geoReferenceFrame
getAccountFeatureSupportWithRequestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getActivePairedDevice
getAllModeAssertionsWithRequestDetails:completionHandler:
getAllModesWithRequestDetails:completionHandler:
getAllowedModesForContactHandle:withRequestDetails:completionHandler:
getAppActionsForModeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:
getAvailableModesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
getBytes:length:
getCloudSyncStateWithRequestDetails:completionHandler:
getCurrentAppConfigurationForActionIdentifier:withRequestDetails:completionHandler:
getIsLocalUserAvailableWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getModeConfigurationsWithRequestDetails:completionHandler:
getModesCanImpactAvailabilityReturningError:
getModesCanImpactAvailabilityWithRequestDetails:completionHandler:
getPairSyncStateWithRequestDetails:completionHandler:
getPreventAutoReplyReturningError:
getPreventAutoReplyWithRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
getSilencedModesForContactHandle:withRequestDetails:completionHandler:
getStateDumpWithRequestDetails:completionHandler:
getSystemActionsForModeIdentifier:withRequestDetails:completionHandler:
getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:
givenName
globalConfigurationManager:didUpdateModesCanImpactAvailabilitySetting:
globalConfigurationManager:didUpdatePhoneCallBypassSettings:
globalConfigurationManager:didUpdatePreventAutoReplySetting:
globalConfigurationStore:didUpdatePreventAutoReplySetting:
globalConfigurationSyncManager:didReceiveUpdatedGlobalConfiguration:
groupsMatchingPredicate:error:
handleAppConfigurationContextUpdateForModeIdentifier:
handleDeletedRecordID:
handleFetchedRecord:
handleIntentWithCompletionHandler:
handleMeDeviceStateUpdate:
handleModeAssertionUpdateResult:
handleStateUpdate:
handleUpdatedBehaviorSettings:
handleUpdatedModes:availableModes:
handleUpdatedPairSyncState:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedPreventAutoReplySetting:
handleUpdatedScheduleSettings:
hasActiveLifetimes
hasChanges
hasCurrentRegion
hasDifferences
hasMetadataForPairedDeviceIdentifier:
hasPendingModifications
hasPerformedInitialSyncForPairedDeviceIdentifier:
hasPrefix:
hasSecureData
hasSuffix:
hasUnlockedSinceBoot
hasUnlockedSinceBootForObserver:
hash
hashTableWithOptions:
healingSource
healthKitWorkoutStream
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
hideApplicationBadges
hour
iCloudEnabled
iOS14EraOS
iOS14SyncSuppressedClient
identifier
identifiers
idsSyncEngine:didFetchRecord:
idsSyncEngine:prepareRecordToSave:
idsSyncEngine:recordWithIDWasDeleted:
ignoreMute
immediateBypassCNGroupIdentifier
immediateBypassEventSourceType
impactsAvailability
inflightMetadata
infoDictionary
init
initForReadingFromData:error:
initRequiringSecureCoding:
initWithAction:bundleIdentifier:
initWithAction:enabled:
initWithAction:reverseAction:enabled:
initWithActionIdentifier:actionMetadata:
initWithActionIdentifier:bundleIdentifier:
initWithActiveUUIDs:expiredUUIDs:
initWithAggregateMonitor:
initWithAppConfigurationManager:
initWithAppConfigurationManager:keybagProviding:xpcEventPublisher:
initWithAppSpecificSettingsManager:
initWithApplicationIdentifier:enabledSetting:
initWithApplicationRecord:available:
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
initWithAssertions:invalidations:
initWithAvailable:activityIdentifierString:
initWithAvailableDuringActivityIdentifiers:unavailableDuringActivityIdentifiers:
initWithBackingStore:
initWithBackingStore:clientDetailsProvider:
initWithBackingStore:contactStore:
initWithBackingStore:keybag:
initWithBackingStore:syncEngine:idsSyncEngine:
initWithBackingStoreURL:clientDetailsProvider:
initWithBundleID:
initWithBundleID:platform:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCalendarIdentifier:
initWithCapacity:
initWithCenter:radius:identifier:
initWithClass:deviceCapabilities:frameworkVersion:
initWithClientDetailsProvider:
initWithClientDetailsProvider:localSyncService:cloudSyncService:
initWithClientDetailsProvider:pairedDevice:
initWithClientIdentifier:deviceIdentifier:
initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:iOS14SyncSuppressedClient:forcesAssertionStatusUpdate:
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
initWithClientIdentifiers:
initWithCloudDeviceIdentifier:deviceClass:assertionSyncProtocolVersion:configurationSyncProtocolVersion:supportsSilenceLists:
initWithCoder:
initWithConfiguration:
initWithConfigurationProvider:stateProvider:
initWithConfigurationProvider:stateProvider:userAvailabilityTCCProvider:
initWithContactHandle:allowed:silenced:
initWithContactIdentifier:
initWithContactStore:
initWithContactStore:contactProvider:
initWithContentsOfURL:
initWithContext:
initWithContextualAction:
initWithDatabase:dataSource:metadata:
initWithDate:
initWithDateInterval:
initWithDestination:partitionType:healingSource:redactSensitiveData:contactProvider:applicationIdentifierMapper:
initWithDestination:partitionType:redactSensitiveData:contactProvider:applicationIdentifierMapper:
initWithDeviceObsoletionDuration:tombstoneObsoletionDuration:
initWithDomain:pairingID:pairingDataStore:
initWithEKOptions:
initWithEffectiveBundlePath:delegate:onQueue:
initWithEnabledSetting:
initWithEncodedAction:actionIdentifier:bundleIdentifier:enabled:
initWithEntity:insertIntoManagedObjectContext:
initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithFetchRequest:
initWithFireDate:serviceIdentifier:userVisible:
initWithFocusStatus:
initWithHandles:invitation:
initWithIDSService:
initWithIDSSyncEngine:backingStoreURL:
initWithIdentifier:availability:
initWithIdentifier:zone:
initWithInterruptionSuppression:
initWithIsFocused:
initWithKeysToFetch:
initWithLastUpdateDate:deviceIdentifiers:
initWithLocalDeviceIdentifier:deviceClass:assertionSyncProtocolVersion:configurationSyncProtocolVersion:iOS14EraOS:supportsSilenceLists:pairingIdentifier:pairingDataStore:
initWithLocalIDSService:cloudIDSService:
initWithLocaleIdentifier:
initWithMeDeviceService:
initWithMetadata:
initWithMetadataStore:lastChanceDataStore:keybag:syncEnabled:
initWithMetadataStore:lastChanceDataStore:syncEngine:keybag:syncEnabled:
initWithMetadataStore:syncService:keybag:
initWithMetadataStore:syncService:keybag:role:syncState:inflightExpirationTime:
initWithMode:configuration:triggers:
initWithMode:semanticModeIdentifier:starting:modeUpdateReason:modeSemanticType:modeUpdateSource:
initWithModeAssertionManager:
initWithModeConfigurationManager:
initWithModeRepository:contactStore:auxiliaryStateMonitor:
initWithMonitoredContactIdentifiers:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:
initWithOriginalModeConfigurations:updatedModeConfigurations:zone:
initWithOverrideType:mode:effectiveIntervals:
initWithPairSyncEnabled:cloudSyncEnabled:
initWithPreventAutoReply:bypassSettings:modesCanImpactAvailability:lastModified:automaticallyGenerated:
initWithPreviousState:state:reason:source:options:
initWithRecordClass:fileURL:secureFileURL:versionNumber:securityClass:
initWithRecordClass:fileURL:versionNumber:
initWithRecordID:lastModified:deleted:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRegion:detail:enabledSetting:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleIdentifier:behavior:
initWithService:
initWithServiceType:protocolVersion:store:
initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
initWithStartDate:endDate:
initWithStatus:name:
initWithStatusTypeIdentifier:
initWithStore:clientDetailsProvider:
initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:
initWithTimePeriod:creationDate:enabledSetting:
initWithTriggers:
initWithType:bundleIdentifier:
initWithURL:
initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:
initWithUUID:startDate:details:source:
initWithUUIDString:
initWithUUIDs:
initWithUnderlyingBackingStore:keybag:
initWithWebIdentifier:givenName:
initWithZoneName:
initialized
intValue
integerForKey:keyExistsAndHasValidFormat:
integerValue
interruptionBehaviorSetting
interruptionInvalidationAssertionUUID
interruptionSuppression
intersectSet:
invalidate
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
invalidateAppContextForActionIdentifier:applicationIdentifier:modeIdentifier:
invalidateAppContextForActionIdentifier:withRequestDetails:completionHandler:
invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:
invalidationDate
invalidationRequests
invalidations
invertedSet
invitation
inviteHandlesFromPrimaryAccountHandle:withInvitationPayload:completion:
isActive
isAutomaticallyGenerated
isAvailable
isClientScheduled
isCloudSyncDisabledForSyncManager:
isCloudSyncEnabled
isControllerConnected
isDeleted
isEnabled
isEncryptionAvailable
isEqual:
isEqualToData:
isEqualToDate:
isEqualToSet:
isEqualToString:
isIOS14EraOS
isIOS14SyncSuppressedClient
isInitialized
isInternalScheduled
isKindOfClass:
isLocalUserAvailableForApplicationIdentifier:withError:
isLocked
isMemberOfClass:
isOnlyDuringEvent
isPairSyncEnabled
isPaired
isPersistentAssertionClient
isPlaceholder
isPopulated
isPresentationModeEnabled
isReachable
isResolutionContextAssumingDeviceUILocked
isScreenMirrored
isScreenShared
isStarting
isSupportedConfiguration
isSyncEnabled
isSyncPreferenceEnabled
isSyncSuppressedClient
isTCCUserAvailabilityGrantedForBundleId:
isUnified
isUserInteractionClient
isUserInvalidated
isUserVisible
isValidAtDate:
isValidJSONObject:
isWebAppPlaceholder
keybagDidChangeState:
keysSortedByValueUsingComparator:
keysToFetch
lastCalculatedState
lastChanceRecordForRecordID:
lastDailyHeartbeat
lastInformedReachability
lastModified
lastModifiedByDeviceID
lastModifiedByVersion
lastMonthlyHeartbeat
lastName
lastObject
lastPathComponent
lastReceivedStoreDate
lastSentStoreDate
lastSystemSnapshot
lastUpdate
lastUpdateDate
lastUpdatedTimestamp
lastWeeklyHeartbeat
laterDate:
latitude
launchIntentExtensionWithCompletion:
legacyBehaviorOverride
legacyPrivilegedSenderType
length
lifetime
lifetimeClass
lifetimeMatchingScheduleWithIdentifier:
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:
lifetimeMonitor:modeAssertionsWithLifetimeClass:
lifetimeMonitor:registerTimerHandlerWithServiceIdentifier:handler:
lifetimeMonitor:setTimer:
lifetimeMonitor:takeModeAssertionWithDetails:clientIdentifier:error:
lifetimeType
lifetimeUntilEndOfScheduleWithIdentifier:
lifetimeWithDateInterval:
lifetimeWithExplicitRegion:
linkedContacts
listener:didReceiveConnection:withContext:
listenerWithConfigurator:
loadDefaultValuesWithCompletionHandler:
loadPersistentStoresWithCompletionHandler:
localizedDescription
localizedName
localizedStringFromDate:dateStyle:timeStyle:
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
locationTriggerConfigurationForLifetimeMonitor:
lockState
log:withMessage:
longitude
lostModeIsActive
lostModeState
makeRecord
makeSecureRecord
managedObjectModel
matchesContactHandle:
meDeviceName
meDeviceService:didReceiveMeDeviceStateUpdate:
meDeviceState
meDeviceStatus
mergeWithGlobalConfiguration:
mergeWithRemoteModeConfiguration:
messageDateForPeaceSyncDictionaryRepresentation:
messageDateForSyncDictionaryRepresentation:
metadata
metricsByDay
metricsByMonth
metricsByWeek
middleName
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
mindfulnessModeForMindfulnessTriggerManager:
mindfulnessStream
minimumBreakthroughUrgency
minusSet:
minute
mode
modeAssertionInvalidationsMatchingPredicate:
modeAssertionsMatchingPredicate:
modeConfigurationForModeIdentifier:
modeConfigurationForModeIdentifier:withError:
modeConfigurationForRecord:
modeConfigurationManager:didModifyAvailableMode:
modeConfigurationManager:didModifyExceptionsForContacts:forModeConfiguration:
modeConfigurationManager:didUpdateAvailableModes:
modeConfigurationModifiedDate
modeConfigurationStore:didUpdateAvailableModes:
modeConfigurations
modeConfigurationsWithError:
modeDetailsForIdentifiers:
modeForModeIdentifier:
modeForRecord:
modeIdentifier
modeIdentifierForBundleIdentifier:
modeIdentifierForRegion:
modeSpecificSettings
modeSpecificSettingsOfType:identifier:modeIdentifier:error:
modeSpecificSettingsOfType:modeIdentifier:error:
modeUUID
modesCanImpactAvailability
modesSupportingSmartEntryForSmartTriggerManager:
modifiedIDs
modifiedRecordIDsForPairedDeviceIdentifier:
monitorApplicationIdentifiers:
monitorWithConfiguration:
monitoredContacts
monitoredRegions
month
moveItemAtURL:toURL:error:
mutableCopy
mutableCopyWithZone:
name
needsSanitization
networkUsageChanged:
newBackgroundContext
newManagedObjectContext
newWithCKRecord:
newWithDNDSIDSRecord:
newWithDictionaryRepresentation:context:
newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:
newWithPeaceSyncDictionaryRepresentation:
newWithSyncDictionaryRepresentation:
nextActiveDateIntervalForScheduleLifetime:assertion:date:
nextDateAfterDate:matchingComponents:options:
nickName
nickname
normalizePhoneNumber:
notPredicateWithSubpredicate:
notificationFilterPredicate
notificationSettings
notificationSourceWithIdentifier:
notifyAnyway
null
numberOfControllersConnected
numberOfManualSessions
numberOfSessions
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
object
objectAtIndexedSubscript:
objectForKey:
objectForKey:ofClass:
objectForKeyedSubscript:
observeLaunchProhibitedApps
observeValueForKeyPath:ofObject:change:context:
occurrenceDate
openURL:configuration:completionHandler:
operatingSystemVersion
orderedSetWithArray:
organizationName
original
outgoingResponseIdentifier
overrideType
ownerName
pairSyncState
pairedDevice
pairedDeviceDidChange
pairedDeviceForDeviceIdentifier:
pairedDeviceStateMonitor:cloudPairingChangedFromDevices:toDevices:
pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:
pairedDevicesForSyncManager:
pairingDataStore
pairingIdentifier
parameters
partitionType
path
pathExtension
pathMonitor
pathWithComponents:
peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:
pendingLastSentStoreDate
performBlockAndWait:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentAssertionClient
persistentContainerWithName:managedObjectModel:
persistentStoreCoordinator
persistentStoreDescriptionWithURL:
phoneCallBypassSettings
phoneCallBypassSettingsForSyncManager:
phoneCallBypassSettingsWithError:
phoneNumberWithStringValue:
phoneNumbers
placeholderModeFromMode:
placeholderModes
placeholderModesWithError:
platform
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
policyWithActionMetadata:
populateCKRecord:lastChanceRecord:
populateDNDSIDSRecord:
predicate
predicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:error:
predicateForAnyAssertion
predicateForApplicationIdentifier:modeIdentifier:error:
predicateForAssertionClientIdentifiers:
predicateForAssertionUUIDs:
predicateForAssertionsTakenBeforeDate:
predicateForContactsInGroupWithIdentifier:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingHandleStrings:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsWithIdentifiers:
predicateForEventsWithStartDate:endDate:calendars:
predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:
predicateForModeAssertionsTakenBeforeDate:
predicateForModeAssertionsWithClientIdentifiers:
predicateForModeAssertionsWithDeviceIdentifier:
predicateForModeAssertionsWithLifetimeClass:
predicateForModeAssertionsWithModeIdentifiersNotContainedIn:
predicateForModeAssertionsWithUUIDs:
predicateForiOSLegacyIdentifier:
predicateMatchingBundleIdentifier:
predicateType
predicateWithBlock:
predicateWithFormat:
predicateWithValue:
prepareWithCompletion:
presentationModeEnabled
preventAutoReply
previousPairedDevice
previousState
privateCloudDatabase
productBuildVersion
productHardwareModel
publishStatusKitAvailabilityReturningError:
publishStatusKitAvailabilityWithRequestDetails:completionHandler:
publishStatusRequest:completion:
publisher
purge
purgeCache
purgeRecordsForIDSSyncEngine:
purgeRecordsForSyncEngine:
purgeZoneWithID:
queryItemWithName:value:
queryMeDeviceStateWithRequestDetails:completionHandler:
queryStateForUpdateWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
queue
radius
rangeOfCharacterFromSet:
rangeOfString:
reachabilityChangedTo:
reachable
readRecordDictionaryfromURL:withError:
readRecordWithError:
realToken
reason
reasonOverride
recalculateModeForSnapshot:
recalculateStateForSnapshot:
receiveManagerForPairedDevice:
recordForAssertion:
recordForAssertionDetails:
recordForAssertionLifetime:
recordForAssertionSource:
recordForAssertionStore:
recordForDictionary:keys:
recordForInvalidation:
recordForInvalidationDetails:
recordForInvalidationRequest:
recordForLegacyBehaviorOverride:lastUpdated:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
recordID
recordIDsForIDSSyncEngine:
recordIDsForSyncEngine:
recordIDsWithZoneID:
recordMetadataForRecordID:
recordName
recordType
recordWithEncodedInfo:error:
recordWithID:
recordZoneIDsToDeleteForSyncEngine:
recordsWithZoneID:
redactSensitiveData
redactedDescription
refreshMigratingIfNecessary
refreshMonitorForDate:
refreshObject:mergeChanges:
refreshWithAvailableModes:
region
regionEntered
regionForRegionIdentifier:
regionIdentifier
regionIdentifiers
registerForAssertionUpdatesWithRequestDetails:completionHandler:
registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:
registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:
registerForModeSelectionUpdatesWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
registerForStream:queue:handler:
registerTimerHandlerWithServiceIdentifier:handler:
relevantApplicationIdentifiers
relevantContacts
remoteAppConfigurationServiceProvider:getCurrentAppConfigurationForActionIdentifier:bundleIdentifier:withError:
remoteAppConfigurationServiceProvider:invalidateAppContextForActionIdentifier:bundleIdentifier:withError:
remoteAvailabilityServiceProvider:isLocalUserAvailableForApplicationIdentifier:withError:
remoteProcess
remoteServiceProvider:allActiveModeAssertionsWithError:
remoteServiceProvider:allModesReturningError:
remoteServiceProvider:allowedModesForContactHandle:withError:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:availableModesReturningError:
remoteServiceProvider:behaviorSettingsWithError:
remoteServiceProvider:clearAppActionWithIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:clearSystemActionWithIdentifier:forModeIdentifier:withError:
remoteServiceProvider:clearSystemConfigurationActionWithIdentifier:modeIdentifier:withError:
remoteServiceProvider:currentMeDeviceStateWithError:
remoteServiceProvider:currentStateWithError:
remoteServiceProvider:didChangeFocusStatusSharingSettingForApplicationIdentifier:
remoteServiceProvider:getAccountFeatureSupportWithError:
remoteServiceProvider:getAppConfigurationPredicateForActionIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:getAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:withError:
remoteServiceProvider:getAppInfoForBundleIdentifier:withError:
remoteServiceProvider:getCloudSyncStateReturningError:
remoteServiceProvider:getModesCanImpactAvailabilityReturningError:
remoteServiceProvider:getPairSyncStateReturningError:
remoteServiceProvider:getPreventAutoReplyReturningError:
remoteServiceProvider:getSystemActionsForModeIdentifier:withError:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:
remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
remoteServiceProvider:latestInvalidationWithClientIdentifer:error:
remoteServiceProvider:modeConfigurationForModeIdentifier:withError:
remoteServiceProvider:modeConfigurationsWithError:
remoteServiceProvider:publishStatusKitAvailabilityReturningError:
remoteServiceProvider:removeModeConfigurationWithModeIdentifier:deletePlaceholder:withError:
remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setAppAction:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withError:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:setCloudSyncPreferenceEnabled:withError:
remoteServiceProvider:setModeConfiguration:withError:
remoteServiceProvider:setModesCanImpactAvailability:withError:
remoteServiceProvider:setPairSyncPreferenceEnabled:withError:
remoteServiceProvider:setPreventAutoReply:withError:
remoteServiceProvider:setScheduleSettings:withError:
remoteServiceProvider:setScreenIsShared:screenIsMirrored:withError:
remoteServiceProvider:setSystemAction:forModeIdentifier:withError:
remoteServiceProvider:silencedModesForContactHandle:withError:
remoteServiceProvider:syncModeConfigurationsReturningError:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
remoteServiceProvider:userAvailabilityInActiveModeForContactHandle:withError:
remoteTarget
removeAllObjects
removeAppSpecificSettingsForApplicationIdentifier:error:
removeItemAtURL:error:
removeModeConfigurationForModeIdentifier:deletePlaceholder:withError:
removeModeConfigurationForModeIdentifier:deletePlaceholder:withRequestDetails:completionHandler:
removeModeConfigurationForModeIdentifier:withError:
removeModeSpecificSettingsForModeIdentifier:error:
removeModeSpecificSettingsForModeIdentifiersNotInModeIdentifiers:error:
removeObject:
removeObjectForKey:
removeObjectsForKeys:
removePairedDeviceIdentifier:
removeRecordWithID:
removeRecordsWithZoneID:
removeZoneWithID:
removedIDs
repeatEventSourceBehaviorEnabledSetting
repeatInterval
replacementObjectForCoder:
requestAccessForEntityType:completionHandler:
requestAccessToEntityType:completion:
requestDate
requestWithPredicate:requestDate:details:source:reason:reasonOverride:
requestWithPredicate:requestDate:source:reason:
requestWithURL:cachePolicy:timeoutInterval:
reset
resolutionContextAssumingDeviceUILocked
resolutionForConfiguration:eventDetails:clientDetails:date:error:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
resolveBehaviorForEventDetails:clientDetails:date:error:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
resolveSourcesForSyncFromPairedDevice:
resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
resolvedActivityUpdateCoalescingSeconds
resolvedActivityUpdateDisabled
resolvedCompatibilityVersion
resolvedScheduledActivityUpdateFuzzMilliseconds
respondsToSelector:
restrictedDetailsWithDetails:
result
resultCombiningWithResult:
resume
resumeUpdatingInvitationsForContacts:completionHandler:
resumeWithCompletionHandler:
retain
retainCount
reverseAction
runtimeIsSupported:
sanitizeContacts:
sanitizeDatesForThreshold:
sanitizedConfigurationWithContactStore:
sanitizedContactWithContactStore:withError:
save:
scheduleEnabledSetting
scheduleIdentifier
scheduleSettings
scheduleSettingsByModeIdentifierForScheduleLifetimeMonitor:
scheduleSettingsByModeIdentifierForScheduleManager:
scheduleSettingsWithError:
screenMirrored
screenShared
secureConfiguration
self
semanticType
sendChangesWithCompletionHandler:
sendEvent:
sendManagerForPairedDevice:
sendMessage:toDestinations:priority:options:identifier:error:
sendMessage:withVersionNumber:messageType:toDestinations:completionHandler:
sendMessage:withVersionNumber:messageType:toDestinations:identifyingCompletionHandler:
sendMetricsHeartbeatsIfNeeded
sendStatusKitInvitationsForContacts:completionHandler:
sendStatusKitInvitationsForContacts:forceAvailabilityPublish:completionHandler:
sender
senderConfiguration
senderConfigurationType
serialQueueTargetingSharedWorkloop:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceIdentifier
serviceType
sessionType
sessionWithConfiguration:delegate:delegateQueue:
setAccountStatus:
setActiveAssertionUUIDs:
setActiveAssertionUpdateClientIdentifiers:
setActiveDateIntervalByAssertionUUID:
setActiveLifetimeAssertionUUIDs:
setAdditionalContactKeyDescriptors:
setAggregateMonitor:
setAllowedApplicationIdentifiers:
setAllowedApplications:
setAllowedContactGroups:
setAllowedContactTypes:
setAllowedContacts:
setAllowedThreads:
setAllowedWebApplicationIdentifiers:
setAllowedWebApplications:
setAppAction:forApplicationIdentifier:modeIdentifier:
setAppAction:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:withRequestDetails:completionHandler:
setAppConfigurationTargetContentIdentifierPrefixesForModeIdentifier:
setAppSpecificSettings:identifier:type:applicationIdentifier:modeIdentifier:error:
setApplicationConfigurationType:
setApplicationIdentifier:
setApplicationIdentifiers:
setApsMachServiceName:
setArrayHealingSource:
setAssertion:
setAssertionUpdateClientIdentifiers:
setAssertions:
setAutomaticallyGenerated:
setBedtimeBehaviorEnabledSetting:
setBehavior:
setBehaviorSettings:
setBehaviorSettings:withError:
setBehaviorSettings:withRequestDetails:completionHandler:
setBundleIdentifier:
setByAddingObject:
setByAddingObjectsFromSet:
setBypassSettings:
setCachedIconURL:
setCalendar:
setClass:forClassName:
setClassName:forClass:
setClientIdentifier:
setClientIdentifiers:
setCloudDevices:
setCloudSyncEnabled:
setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:
setCompatibilityVersion:
setConfiguration:
setConfiguration:forModeIdentifier:
setConfiguration:withError:
setConfigurations:
setContactHistoryToken:
setContactIdentifier:
setContactProvider:
setCreated:
setCurrentRegion:
setDataSource:
setDataSource:forZone:
setDataSource:forZoneName:
setDate:
setDateStyle:
setDayOfWeek:
setDelegate:
setDeleted:
setDeletedAtDate:forRecordIDs:
setDeniedApplicationIdentifiers:
setDeniedApplications:
setDeniedContactGroups:
setDeniedContactTypes:
setDeniedContacts:
setDeniedThreads:
setDeniedWebApplicationIdentifiers:
setDeniedWebApplications:
setDetails:
setDeviceIdentifier:
setDeviceName:
setDictionaryRepresentationOfRecord:forKey:context:
setDidFireMetadataExpirationTimer:
setDidReceiveUnlockMessage:
setDimsLockScreen:
setDomain:
setDouble:forKey:
setEmailAddresses:
setEnabled:
setEnabledAtLocation:
setEnabledDrivingMode:
setEnabledDuringEvent:
setEnabledForOneHour:
setEnabledFromControlCenterPhone:
setEnabledFromControlCenterWatch:
setEnabledSleepMode:
setEnabledUntilEvening:
setEnabledUntilMorning:
setEncodedAction:
setEncryptionAvailable:
setEndDate:
setEndTime:
setEnteredRegionIdentifiersPendingExit:
setEntity:
setEphemeralResolvedCompatibilityVersion:
setEvent:forKey:onStream:
setEventUniqueID:
setFetchLimit:
setFirstName:
setGeoReferenceFrame:
setHTTPShouldUsePipelining:
setHasActiveLifetimes:
setHasSecureData:
setHealingSource:
setHideApplicationBadges:
setHour:
setICloudEnabled:
setIdentifier:
setImmediateBypassCNGroupIdentifier:
setImmediateBypassEventSourceType:
setImpactsAvailability:
setIncludesPendingChanges:
setInteger:forKey:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInterruptionInvalidationAssertionUUID:
setInvalidationDate:
setInvalidationHandler:
setInvalidationRequests:
setInvalidations:
setIsScheduledRequest:
setIsSecondaryDeviceRepublish:
setLastCalculatedState:
setLastDailyHeartbeat:
setLastInformedReachability:
setLastModified:
setLastModifiedByDeviceID:
setLastModifiedByVersion:
setLastModifiedDate:forRecordIDs:
setLastMonthlyHeartbeat:
setLastName:
setLastSystemSnapshot:
setLastUpdate:
setLastUpdatedTimestamp:
setLastWeeklyHeartbeat:
setLatitude:
setLifetime:
setLifetimeType:
setLocale:
setLocalizedDateFormatFromTemplate:
setLockState:
setLongitude:
setLostModeState:
setManuallyEnabled:
setMeDeviceName:
setMeDeviceStatus:
setMetadata:
setMetricsByDay:
setMetricsByMonth:
setMetricsByWeek:
setMiddleName:
setMinimumBreakthroughUrgency:
setMinute:
setMode:
setMode:forModeIdentifier:
setModeConfiguration:forModeIdentifier:
setModeConfiguration:withRequestDetails:completionHandler:
setModeConfigurationModifiedDate:
setModeConfigurations:
setModeIdentifier:
setModeName:
setModeSpecificSettings:
setModeSpecificSettings:identifier:type:modeIdentifier:error:
setModeSymbol:
setModesCanImpactAvailability:
setModesCanImpactAvailability:withError:
setModesCanImpactAvailability:withRequestDetails:completionHandler:
setMonth:
setName:
setNickName:
setNotifyOnEntry:
setNotifyOnExit:
setNumberOfManualSessions:
setNumberOfSessions:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOccurrenceDate:
setOnlyDuringEvent:
setOption:forKey:
setOrganizationName:
setOsBuild:
setPairSyncEnabled:
setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:
setPairedDevice:
setPairedDevice:syncEnabled:
setPartitionType:
setPerformedInitialSyncForPairedDeviceIdentifier:
setPhoneCallBypassSettings:
setPhoneNumbers:
setPredicate:
setPredicate:forActionIdentifier:forApplicationIdentifier:modeIdentifier:
setPredicateFormat:
setPredicateType:
setPreventAutoReply:
setPreventAutoReply:withError:
setPreventAutoReply:withRequestDetails:completionHandler:
setPreviousPairedDevice:
setQueryItems:
setRadius:
setReachable:
setReason:
setReasonOverride:
setRecordID:
setRedactSensitiveData:
setRegionEntered:
setRegionIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
setRequestCachePolicy:
setResultType:
setReverseAction:
setScheduleEnabledSetting:
setScheduleIdentifier:
setScheduleSettings:
setScheduleSettings:withError:
setScheduleSettings:withRequestDetails:completionHandler:
setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:
setScreenMirrored:
setScreenShared:
setSecureConfiguration:
setSemanticType:
setSenderConfiguration:
setSenderConfigurationType:
setService:
setServiceIdentifier:
setServiceQuality:
setSessionDescription:
setShouldAddStoreAsynchronously:
setShouldInferMappingModelAutomatically:
setShouldMigrateStoreAutomatically:
setSource:
setStartDate:
setStartTime:
setStartingToken:
setStoreIconURL:
setSuppressionType:
setSymbolImageName:
setSyncDate:forRecordIDs:forPairedDeviceIdentifier:
setSyncDate:forRecordsMatchingMetadata:forPairedDeviceIdentifier:
setSyncPreferenceEnabled:
setSyncSettings:
setSystemAction:forModeIdentifier:withRequestDetails:completionHandler:
setTargetContentIdentifierPrefix:
setTargetContentIdentifierPrefix:forActionIdentifier:forApplicationIdentifier:modeIdentifier:
setTesting:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodWeekdays:
setTimeStyle:
setTimeZone:
setTimeoutHandler:
setTimer:
setTintColorName:
setTransitionHandler:
setTriggers:
setTriggers:forModeIdentifier:
setType:
setUILockState:error:
setURLCache:
setUUID:
setUUIDs:
setUnderlyingHealingSource:
setUnderlyingQueue:
setUnifyResults:
setUserRecordID:
setUserVisibleEndDate:
setValue:
setValue:forKey:
setVisibility:
setWantsActiveModeUpdates:
setWantsGlobalConfigurationUpdates:
setWantsMeDeviceStateUpdates:
setWantsModeUpdates:
setWantsSettingsUpdates:
setWantsStateUpdates:
setWeekday:
setWeekdays:
setWithArray:
setWithObject:
setWithSet:
setWorkoutTriggerEnabled:forWorkoutTriggerManager:
settings
settingsForRecord:
settingsManager:didReceiveUpdatedBehaviorSettings:
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
settingsManager:didReceiveUpdatedScheduleSettings:
settingsManager:didReceiveUpdatedSyncSettings:
settingsWithClientSettings:creationDate:
setupPathMonitor
setupPersistentStoreIfNeeded
sharedContactStore
sharedDaemonWorkloop
sharedInstance
sharedInstanceForBagType:
sharedURLCache
shortDescription
signalAppConfigurationContextUpdateForModeIdentifier:
silenced
silencedModesForContactHandle:withError:
sinkWithCompletion:receiveInput:
sleepingModeForSleepingTriggerManager:
sortUsingComparator:
sortedArrayUsingComparator:
source
sourceSettings
standardUserDefaults
start
startDate
startMonitoringForRegion:
startOfDayForDate:
startTime
state
stateType
statesForPredicate:withDescriptor:error:
statusKitInvitationPayloadWithDateCreated:
statusPublishRequest
stopMonitoringForRegion:
store
storeIconURL
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingString:
stringByRemovingCharactersFromSet:
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
subscribeOn:
substringFromIndex:
substringToIndex:
superclass
supportedActionsByExtensions
supportedIntentsByApp
supportsKettle
supportsSecureCoding
supportsSilenceLists
suspendWithOverrideSetting:completionHandler:
sync
sync:withCompletionHandler:
syncAvailable
syncDictionaryRepresentationWithDate:messageUUID:
syncEnabled
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngine:didCompleteModifyRecordsBatch:error:
syncEngine:didDeleteRecordWithID:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:didEndFetchingChangesForZoneID:
syncEngine:didFetchRecord:
syncEngine:didSaveRecord:
syncEngine:didSaveRecordZone:
syncEngine:didUpdateMetadata:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecord:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:recordToSaveForRecordID:
syncEngine:recordTypeForRecordID:
syncEngine:recordWithIDWasDeleted:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:resolveConflictBetweenClientRecord:andServerRecord:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:wantsRecord:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeleted:removingRecordIDs:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngineDidBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngineWillBeginFetchingChanges:
syncEngineWillBeginModifyingPendingChanges:
syncManager:deviceForDeviceIdentifier:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
syncManager:didReceiveUpdatedScheduleSettings:
syncManager:performModeAssertionUpdatesWithHandler:
syncManager:prepareForSyncToDevices:
syncManager:scheduleSettingsForModeIdentifier:
syncManager:updateOutboundModeAssertion:
syncModeConfigurationsWithRequestDetails:completionHandler:
syncPreferenceEnabled
syncService:didReceiveMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncService:didSendWithRequestIdentifier:withSuccess:error:
syncService:shouldAcceptIncomingMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncSettings
syncSettingsProvider:didReceiveUpdatedSyncSettings:
syncSettingsWithError:
syncSuppressedClient
synchronize
synchronizeNanoDomain:keys:
synchronizeUserDefaultsDomain:keys:
sysdiagnoseDataForDate:redacted:
sysdiagnoseDataIdentifier
sysdiagnoseDictionaryRepresentation
sysdiagnoseRecordKeys
systemActionForActionIdentifier:modeIdentifier:error:
systemActionWithIdentifier:modeIdentifier:error:
systemActionsForModeIdentifier:error:
systemTimeZone
takeAssertionWithDetails:source:startDate:
takeAssertionWithUUID:details:source:startDate:
takeModeAssertionWithDetails:requestDetails:completionHandler:
targetContentIdentifierPrefix
targetContentIdentifierPrefixForApplicationIdentifier:modeIdentifier:error:
targetContentIdentifierPrefixesForModeIdentifier:error:
taskIdentifier
taskState
teamIdentifier
threadIdentifier
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePeriod
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodWeekdays
tintColorName
triggerManager:assertionsWithClientIdentifer:error:
triggerManager:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
triggerManager:latestInvalidationWithClientIdentifer:error:
triggerManager:performModeAssertionUpdatesWithHandler:
triggerManager:takeModeAssertionWithDetails:clientIdentifier:error:
triggeringBundleIdentifiers
triggers
triggersForModeIdentifier:
type
unarchivedObjectOfClass:fromData:error:
underlyingHealingSource
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
unionSet:
uniqueIDOverride
uniqueId
unknownRecordIDsInRecordIDs:
unresolveSourcesForSyncToPairedDevice:
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
update
updateDataWithBlock:
updateDevices:
updateForModeAssertionUpdateResult:
updateForModeAssertions:date:
updateForStateUpdate:
updateModeAssertionsWithContextHandler:error:
updateResult
updateSystemActionWithReverseAction:actionIdentifier:modeIdentifier:
upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:
userAvailabilityInActiveModeForContactHandle:withError:
userAvailabilityTCCApprovedBundleIds
userInfo
userInitiated
userInteractionClient
userRecordID
userVisible
userVisibleEndDate
validate
validatePredicate:compileTimeIssues:runTimeIssues:
value
valueForEntitlement:
valueForKey:
valueForProperty:
values
visibility
visitAddContactEvent:
visitAddGroupEvent:
visitAddMemberToGroupEvent:
visitAddSubgroupToGroupEvent:
visitDeleteContactEvent:
visitDeleteGroupEvent:
visitDropEverythingEvent:
visitRemoveMemberFromGroupEvent:
visitRemoveSubgroupFromGroupEvent:
visitUpdateContactEvent:
visitUpdateGroupEvent:
wantsActiveModeUpdates
wantsMeDeviceStateUpdates
wantsModeUpdates
wantsSettingsUpdates
wantsStateUpdates
wasLastModifiedByThisDevice
weakObjectsHashTable
weakToStrongObjectsMapTable
webIdentifier
weekdays
workflowRunnerClient:didFinishRunningAction:withReverseAction:
workflowRunnerClient:didFinishRunningWorkflowWithError:cancelled:
workflowRunnerClient:didFinishRunningWorkflowWithOutput:error:cancelled:
workflowRunnerClient:didStartRunningWorkflowWithProgress:
workoutModeForWorkoutTriggerManager:
writeRecord:error:
writeRecord:writePartition:error:
writeRecordDictionary:withSecurityClass:toURL:error:
writeToURL:error:
writeToURL:options:error:
zone
zoneID
zoneName
zoneNames
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"24@0:8@"DNDSBackingStoreDictionaryContext"16
@32@0:8@"NSDictionary"16@"DNDSBackingStoreDictionaryContext"24
v56@0:8@16@24Q32@40@48
B56@0:8@16@24Q32@40@48
v44@0:8@16@24B32@36
v56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
B56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
v44@0:8@"<DNDSSyncService>"16@"NSString"24B32@"NSError"36
v24@0:8@16
v24@0:8@"<DNDSKeybagStateProviding>"16
@28@0:8@16B24
@"NSDictionary"28@0:8@"NSDate"16B24
v32@0:8@16@24
v28@0:8@16B24
v16@0:8
v32@0:8@"NSArray"16@"NSArray"24
v32@0:8@"<DNDSIDSSyncEngineDataSource>"16@"NSString"24
v28@0:8@"DNDSPairedDevice"16B24
@40@0:8@16@24@32
@64@0:8@16@24@32Q40Q48Q56
v24@0:8@?16
v40@0:8@16@24@32
d16@0:8
@"NSMapTable"
@"<DNDSSyncService>"
@"DNDSPairedDevice"
@"<DNDSIDSSyncEngineMetadataStoring>"
@"<DNDSKeybagStateProviding>"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSMutableSet"
@40@0:8@"NSString"16@"NSString"24@"NSString"32
@40@0:8@16Q24Q32
@24@0:8^{_NSZone=}16
@"NSNumber"
@40@0:8@"NSDictionary"16@"NSDictionary"24@"DNDSBackingStoreDictionaryContext"32
Q24@0:8Q16
@24@0:8^@16
Q32@0:8@16^@24
Q36@0:8@16B24^@28
Q32@0:8@"<DNDSBackingStoreRecord>"16^@24
Q36@0:8@"<DNDSBackingStoreRecord>"16B24^@28
@"<DNDSBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSBackingStoreDelegate>"16
@40@0:8#16@24Q32
@56@0:8#16@24@32Q40Q48
@32@0:8@16^@24
Q48@0:8@16Q24@32^@40
@"NSURL"
@"<DNDSBackingStoreDelegate>"
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48Q56
@72@0:8@16@24@32@40@48Q56Q64
@"NSUUID"
@"DNDSModeAssertionInvalidationPredicate"
@"NSDate"
@"DNDModeAssertionInvalidationDetails"
@"DNDModeAssertionSource"
@"NSArray"
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@"DNDSAppForegroundTriggerConfiguration"
@"BMStoreEvent"
@"NSObject<OS_os_transaction>"
@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@32@0:8@16@?24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@64@0:8@16@24Q32Q40@48^@56
@"NSDictionary"
@24@0:8Q16
@64@0:8@16@24@32@40@48^@56
Q48@0:8@16@24@32o^Q40
B32@0:8@16@24
B40@0:8@16@24@32
B92@0:8@16@24@32@40Q48Q56@64@72B80o^Q84
B56@0:8@16Q24@32@40o^Q48
@"<DNDSModeRepository>"
@"CNContactStore"
@"DNDSAuxiliaryStateMonitor"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@56@0:8@16@24@32@40^@48
@48@0:8@16@24Q32Q40
@"NSDictionary"48@0:8@"<DNDSBackingStore>"16@"NSDictionary"24Q32Q40
@"<DNDSCachedBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSCachedBackingStoreDelegate>"16
@"<DNDSBackingStore>"
@"<DNDSBackingStoreRecord>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<DNDSCachedBackingStoreDelegate>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@16@?24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"NSError">24
@"BSServiceConnectionListener"
@"DNDSClientDetailsProvider"
@"<DNDSRemoteAvailabilityServiceProviderDelegate>"
@"NSString"
v24@0:8@"CNChangeHistoryDropEverythingEvent"16
v24@0:8@"CNChangeHistoryAddContactEvent"16
v24@0:8@"CNChangeHistoryUpdateContactEvent"16
v24@0:8@"CNChangeHistoryDeleteContactEvent"16
v24@0:8@"CNChangeHistoryAddGroupEvent"16
v24@0:8@"CNChangeHistoryUpdateGroupEvent"16
v24@0:8@"CNChangeHistoryDeleteGroupEvent"16
v24@0:8@"CNChangeHistoryAddMemberToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveMemberFromGroupEvent"16
v24@0:8@"CNChangeHistoryAddSubgroupToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveSubgroupFromGroupEvent"16
@"NSSet"
v24@0:8@"<DNDSContactMonitorListener>"16
B40@0:8@16@24@?32
v40@0:8@16@24@?32
@"NSHashTable"
@"<DNDSContactProviding>"
@"EKEventStore"
{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16@0:8
v32@0:8q16@?24
v48@0:8@16@24@32@?40
v36@0:8@16B24@?28
v48@0:8@16q24@32@?40
B40@0:8@16@24o^@32
B32@0:8@16o^@24
@32@0:8@16o^@24
@24@0:8o^@16
v36@0:8B16q20@?28
v56@0:8B16@20B28B32@36B44@?48
@"<DNDSModeConfigurationProviding>"
@"<DNDSStateProviding>"
@"<DNDSUserAvailabilityTCCProviding>"
@"SKStatusPublishingService"
@"DNDContactHandle"
@"AKAvailability"
@"AKAvailabilityInvitation"
@"NSSet"16@0:8
@"DNDContact"24@0:8@"DNDContact"16
v32@0:8N@16@24
@"NSObject<DNDSAppSpecificSettings>"24@0:8@"DNDPerModeSettingsMO"16
v32@0:8N@"DNDPerModeSettingsMO"16@"NSObject<DNDSAppSpecificSettings>"24
@"NSObject<DNDSAppSpecificSettings>"24@0:8@"NSDictionary"16
@"NSDictionary"24@0:8@"NSObject<DNDSAppSpecificSettings>"16
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"NSObject<OS_dispatch_queue>"16@0:8
@"CLLocationManager"16@0:8
@"<DNDSLocationLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLocationLifetimeMonitorDataSource>"16
v32@0:8@"DNDSMeDeviceService"16@"DNDMeDeviceState"24
@"CLLocationManager"
@"DNDSMeDeviceService"
@"DNDSUntilExitLocationLifetimeMonitor"
@"DNDSExplicitRegionLocationLifetimeMonitor"
@"<DNDSLocationLifetimeMonitorDataSource>"
B24@0:8^@16
@"DNDSLocationTriggerConfiguration"
@"DNDSExplicitRegionStore"
@"<DNDSAggregateLocationLifetimeMonitor>"
@"CLRegion"
@"DNDSUntilExitRegionStore"
@80@0:8@16@24@32@40@48@56@64@72
@"NSArray"24@0:8@"NSPredicate"16
@"DNDSModeAssertionUpdateResult"40@0:8@"DNDModeAssertionDetails"16@"DNDModeAssertionSource"24@"NSDate"32
@"DNDSModeAssertionUpdateResult"24@0:8@"DNDSModeAssertionInvalidationRequest"16
@48@0:8@16@24@32@40
v24@0:8N@16
@"DNDSModeAssertionStore"
@"DNDSModeAssertionUpdateResult"
@136@0:8@16@24@32@40Q48Q56@64@72{?=qqq}80@104B112q116q124B132
{?=qqq}16@0:8
q16@0:8
@"DNDSModeRecord"
@"DNDSConfigurationRecord"
@"DNDSConfigurationSecureRecord"
@"DNDSModeConfigurationTriggersRecord"
{?="majorVersion"q"minorVersion"q"patchVersion"q}
v24@0:8Q16
v40@0:8{?=qqq}16
v20@0:8B16
v24@0:8q16
@"CKRecord"24@0:8@"CKRecordID"16
v24@0:8@"CKRecord"16
v24@0:8@"CKRecordID"16
v24@0:8@"CKRecordZoneID"16
@"NSArray"24@0:8@"CKRecordZoneID"16
B24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
v24@0:8@"NSString"16
@"NSData"
v40@0:8@16@24Q32
v64@0:8B16B20i24i28B32B36@40@48@56
@"DNDSMutableMetricsRecord"
@"NSCalendar"
@44@0:8@16@24@32B40
@60@0:8@16@24@32@40@48B56
@"NSArray"24@0:8@"NSArray"16
@"NSPersistentContainer"
@"NSObject<OS_nw_path_monitor>"
v32@0:8@"<DNDSModeConfigurationsStoring>"16@"NSArray"24
Q40@0:8@16@24@32
Q32@0:8@16@24
@"NSDictionary"24@0:8^@16
@"DNDModeConfiguration"32@0:8@"NSString"16^@24
Q40@0:8@"DNDApplicationIdentifier"16@"NSString"24@"NSString"32
Q32@0:8@"DNDContactHandle"16@"NSString"24
B32@0:8@16^@24
B36@0:8@16B24^@28
@28@0:8B16^@20
@20@0:8B16
@"<DNDSModeConfigurationsStoring>"
@"<DNDSModeConfigurationManagerDelegate>"
@40@0:8@16@24@?32
@64@0:8@16@24@32B40B44B48B52B56B60
@"DNDState"16@0:8
@"DNDSModeConfigurationManager"
@"DNDSStateProviderSystemSnapshot"
@"DNDState"
v24@0:8@"<DNDSCachedBackingStore>"16
@"<DNDSCachedBackingStore>"
@52@0:8Q16@24Q32@40B48
@"DNDBypassSettings"
v44@0:8@16@24@32B40
v36@0:8@16@24B32
v32@0:8@"WFWorkflowRunnerClient"16@"NSProgress"24
v44@0:8@"WFWorkflowRunnerClient"16@"WFContentCollection"24@"NSError"32B40
v36@0:8@"WFWorkflowRunnerClient"16@"NSError"24B32
v40@0:8@"WFShojiSystemActionsRunnerClient"16@"WFContextualAction"24@"WFReverseContextualAction"32
v48@0:8@16@24@32@40
v48@0:8@"DNDSAppConfigurationManager"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40
v48@0:8@"DNDSAppConfigurationManager"16@"DNDAppAction"24@"DNDApplicationIdentifier"32@"NSString"40
v32@0:8@"DNDSAppConfigurationManager"16@"NSDictionary"24
v40@0:8@"DNDSAppConfigurationManager"16@"DNDSystemAction"24@"NSString"32
@"DNDSAppConfigurationManager"
@"<DNDSSystemFocusConfigurationCoordinatorDelegate>"
q32@0:8N@16@24
@32@0:8@16Q24
@48@0:8Q16@24Q32@40
@"DNDMeDeviceState"
@"DNDSMeDeviceStore"
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
Q40@0:8@16@24^@32
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"DNDSIDSRecordMetadata"
v32@0:8Q16@?24
@"NPSDomainAccessor"
@"NPSManager"
@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"LNAction"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
@"<DNDSRemoteAppConfigurationServiceProviderDelegate>"
@"DNDSModeConfigurationsRecord"
@"CKRecordZone"
@"NSDictionary"16@0:8
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
v24@0:8@"DNDSModeAssertionUpdateResult"16
v24@0:8@"NSArray"16
v24@0:8@"DNDStateUpdate"16
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@32@0:8@?16^@24
@"DNDSModeAssertionUpdateResult"32@0:8@?<B@?@"<DNDSModeAssertionUpdateContext>">16^@24
@64@0:8@16@24@32@40@48@56
@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@"<DNDSSettingsSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDataSource>"16
@"<DNDSSettingsSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDelegate>"16
@32@0:8B16B20@24
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
@"INCExtensionConnection"
@"LSApplicationRecord"
{atomic_flag="_Value"AB}
v32@0:8@16B24B28
v40@0:8@16Q24@32
v36@0:8@16B24@28
@"DNDSModernAssertionSyncMetadataStore"
@"NSObject<DNDSBackingStore>"
@"<DNDSAssertionSyncManagerDataSource>"
@40@0:8Q16Q24@32
@"DNDSMutableModeAssertionStore"
@32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"NSDictionary"32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@"NSDictionary"16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"BMUserFocusComputedModeStream"
@72@0:8@16Q24Q32Q40B48B52@56@64
@52@0:8@16Q24Q32Q40B48
@56@0:8@16@24@32Q40Q48
@"DNDClientEventBehavior"
@"NSNumber"16@0:8
@76@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72
v24@0:8@"NSNumber"16
@84@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72@76
v32@0:8@"LNActionExecutor"16@"LNConfirmationRequest"24
v32@0:8@"LNActionExecutor"16@"LNDisambiguationRequest"24
v32@0:8@"LNActionExecutor"16@"LNNeedsValueRequest"24
v32@0:8@"LNActionExecutor"16@"LNActionConfirmationRequest"24
v40@0:8@"LNActionExecutor"16@"LNSuccessResult"24@"NSError"32
B32@0:8@"LNActionExecutor"16@"LNAction"24
v32@0:8@"LNActionExecutor"16@?<v@?@"LNSnippetEnvironment">24
v32@0:8@"LNActionExecutor"16@?<v@?@"NSValue">24
v32@0:8@"LNActionExecutor"16@"LNContinueInAppRequest"24
@"LNAction"
@"LNActionExecutor"
@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v48@0:8@16d24Q32@?40
v40@0:8@16d24@?32
@"NSURLSession"
@"DNDSModeAssertionManager"
@"<DNDSScheduleManagerDataSource>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q32@0:8@16N@24
q32@0:8@16@24
@"NSString"32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
q32@0:8@"DNDSSyncEngine"16N@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecord"24@"CKRecord"32
v40@0:8@"DNDSSyncEngine"16@"CKRecordID"24@"NSError"32
v32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
q32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecordZoneID"24@"NSArray"32
@"NSArray"24@0:8@"DNDSSyncEngine"16
v24@0:8@"DNDSSyncEngine"16
v32@0:8@16N@24
v32@0:8@"DNDSIDSSyncEngine"16N@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecordID"24
@"NSArray"24@0:8@"DNDSIDSSyncEngine"16
v24@0:8@"DNDSIDSSyncEngine"16
@"<DNDSModeConfigurationsStoreDelegate>"16@0:8
v24@0:8@"<DNDSModeConfigurationsStoreDelegate>"16
v48@0:8@"<DNDSContactMonitoring>"16@"NSArray"24@"NSArray"32@"NSData"40
v32@0:8@"<DNDSContactMonitoring>"16@"NSDictionary"24
B84@0:8@16@24@32@40{?=qqq}48B72B76B80
B36@0:8@16@24B32
@"<DNDSContactMonitoring>"
@"DNDSSyncEngine"
@"DNDSIDSSyncEngine"
@"<DNDSModeConfigurationsStoreDelegate>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
@"<DNDSPairedDeviceStateMonitorDelegate>"
@64@0:8Q16Q24@32{?=qqq}40
@72@0:8@16@24@32@40q48Q56@64
v56@0:8@16Q24@32@40@?48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSError">48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSString"@"NSError">48
@"<DNDSSyncServiceDelegate>"16@0:8
v24@0:8@"<DNDSSyncServiceDelegate>"16
B64@0:8@16Q24@32@40^@48^@56
@"<DNDSSyncServiceDelegate>"
@24@0:8r*16
v36@0:8I16Q20@28
v32@0:8Q16@24
@"NSObject<OS_xpc_event_publisher>"
@56@0:8@16@24@32@40@48
@"DNDSSenderConfigurationRecord"
@56@0:8@16@24@32Q40@48
@"NSDateComponents"
@24@0:8B16B20
v68@0:8@16@24@32@40@48B56@60
@"DNDSXPCEventPublisher"
@"<DNDSAppFocusConfigurationCoordinatorDelegate>"
@64@0:8@16@24@32Q40Q48@56
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSDate"16@"NSArray"24
@"DNDSIDSRecordMetadata"24@0:8@"DNDSIDSRecordID"16
v40@0:8@"NSDate"16@"NSArray"24@"NSString"32
B24@0:8@"NSDate"16
@32@0:8d16d24
@40@0:8#16@24^@32
@40@0:8#16@24@?32
@48@0:8#16@24@32^@40
@56@0:8#16@24@32@40^@48
B56@0:8@16@24#32@40^@48
B64@0:8@16@24#32@40@48^@56
@24@0:8#16
v32@0:8#16@?24
@"DNDSCoreDataBackingStore"
@28@0:8Q16i24
@"DNDSModeAssertionDetailsRecord"
@"DNDSModeAssertionSourceRecord"
@"DNDSModeAssertionLifetimeRecord"
@"DNDSModeAssertionRecord"
@"DNDSModeAssertionInvalidationDetailsRecord"
@"DNDSModeAssertionInvalidationPredicateRecord"
Q24@0:8@16
@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@56@0:8@16@24B32B36B40B44B48B52
@"DNDSAppSpecificSettingsManager"
v48@0:8@16@24@32^v40
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@52@0:8Q16Q24B32@36@44
@60@0:8Q16Q24@32B40@44@52
@"NSObject<NSFastEnumeration>"
@"<DNDSApplicationIdentifierMapping>"
@"DNDSAppForegroundTriggerConfiguration"24@0:8@"DNDSAppForegroundTriggerManager"16
@"DNDMode"24@0:8@"DNDSDrivingTriggerManager"16
@"DNDMode"24@0:8@"DNDSGamingTriggerManager"16
@"DNDMode"24@0:8@"DNDSMindfulnessTriggerManager"16
@"DNDMode"24@0:8@"DNDSSleepingTriggerManager"16
@"NSSet"24@0:8@"DNDSSmartTriggerManager"16
v28@0:8B16@20
@"DNDModeConfiguration"24@0:8@"DNDSWorkoutTriggerManager"16
v28@0:8B16@"DNDSWorkoutTriggerManager"20
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
@"DNDSConfigurationsRecord"
@"DNDApplicationIdentifier"24@0:8@"DNDApplicationIdentifier"16
@32@0:8Q16@24
B24@0:8N@16
@72@0:8@16@24@32@40@48@56@64
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
@52@0:8@16@24@32@40B48
v28@0:8B16@?20
v40@0:8@16q24B32B36
@"<DNDSSyncEngineMetadataStoring>"
@"<DNDSSyncEngineSynchronizing>"
@"<DNDSSyncEngineLastChanceDataStoring>"
{?="syncEnabled"B"featureEnabled"B"accountAvailable"B"encryptionAvailable"B"supportedDevice"B"testing"B}
@"CKContainer"
@36@0:8@16@24B32
@"DNDSIDSRecordID"
@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeAssertion__>"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"DNDModeConfiguration"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v48@0:8@"NSString"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeConfiguration__>"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDModeConfiguration"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDMode__>"@"NSError">24
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSArray<__NSString__>"@"NSError">32
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSUUID"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
Vv40@0:8@16@24@?32
v40@0:8@"NSNumber"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDAccountFeatureSupport"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppInfo"@"NSError">32
v40@0:8@"NSArray<__NSString__>"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDAppInfo__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDMeDeviceState"@"NSError">24
v48@0:8@"NSNumber"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v64@0:8@16@24@32@40@48@?56
v56@0:8@16@24@32@40@?48
v64@0:8@"NSPredicate"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSPredicate"@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40@"DNDRequestDetails"48@?<v@?@"NSNumber"@"NSError">56
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppConfigurationTargetContentIdentifierPrefixesBox"@"NSError">32
v56@0:8@"DNDAppAction"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v56@0:8@"NSString"16@"DNDApplicationIdentifier"24@"NSString"32@"DNDRequestDetails"40@?<v@?@"NSNumber"@"NSError">48
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppActionsBox"@"NSError">32
v48@0:8@"DNDSystemAction"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDSystemAction__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDMeDeviceState"@"NSError">24
@"<DNDSRemoteServiceProviderDelegate>"
@"<DNDSGlobalConfigurationStoreDelegate>"16@0:8
v24@0:8@"<DNDSGlobalConfigurationStoreDelegate>"16
@"DNDSGlobalConfiguration"
@"<DNDSGlobalConfigurationStoreDelegate>"
B24@0:8@"<DNDSKeybagStateObserver>"16
v24@0:8@"<DNDSKeybagStateObserver>"16
v28@0:8@"DNDSGlobalConfigurationManager"16B24
v32@0:8@"DNDSGlobalConfigurationManager"16@"DNDBypassSettings"24
@"DNDState"24@0:8@"DNDSEventBehaviorResolver"16
Q24@0:8@"DNDSEventBehaviorResolver"16
@"DNDBypassSettings"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@"DNDConfiguration"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
B32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@"NSPredicate"40@0:8@"DNDSEventBehaviorResolver"16@"DNDApplicationIdentifier"24@"NSString"32
@32@0:8@16#24
@"NSArray"32@0:8@"<DNDSLifetimeMonitor>"16#24
@"DNDSLocationTriggerConfiguration"24@0:8@"<DNDSLifetimeMonitor>"16
@"NSDictionary"24@0:8@"<DNDSLifetimeMonitor>"16
v24@0:8@"<DNDSLifetimeMonitor>"16
@"DNDModeAssertion"48@0:8@"<DNDSLifetimeMonitor>"16@"DNDModeAssertionDetails"24@"NSString"32^@40
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24@"NSDate"32
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSString"24@?<v@?@"NSString"@"NSObject<OS_xpc_object>">32
v32@0:8@"<DNDSLifetimeMonitor>"16@"DNDSXPCTimer"24
@"DNDClientEventBehavior"56@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24@"DNDSClientDetails"32@"NSDate"40^@48
@56@0:8@16@24Q32@40^@48
@"DNDModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertionInvalidation"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32Q40@"NSString"48^@56
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24Q32Q40@"DNDModeAssertionInvalidationDetails"48^@56
@"NSArray"56@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32@"NSString"40^@48
@"NSArray"32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16@24^@32
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
B44@0:8@16@24B32^@36
@"DNDModeConfiguration"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSDictionary"32@0:8@"DNDSRemoteServiceProvider"16^@24
B44@0:8@"DNDSRemoteServiceProvider"16@"NSString"24B32^@36
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDModeConfiguration"24^@32
B32@0:8@"DNDSRemoteServiceProvider"16^@24
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
@"NSString"32@0:8@"DNDSRemoteServiceProvider"16^@24
B36@0:8@"DNDSRemoteServiceProvider"16B24^@28
Q32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDAccountFeatureSupport"32@0:8@"DNDSRemoteServiceProvider"16^@24
v32@0:8@"DNDSRemoteServiceProvider"16@"NSString"24
@"DNDAppInfo"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"NSArray"24^@32
@"DNDMeDeviceState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16B24B28^@32
B40@0:8@"DNDSRemoteServiceProvider"16B24B28^@32
B64@0:8@16@24@32@40@48^@56
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32^@40
B64@0:8@"DNDSRemoteServiceProvider"16@"NSPredicate"24@"NSString"32@"DNDApplicationIdentifier"40@"NSString"48^@56
@"NSPredicate"56@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40^@48
B64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"NSString"32@"DNDApplicationIdentifier"40@"NSString"48^@56
@"NSDictionary"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
B56@0:8@"DNDSRemoteServiceProvider"16@"DNDAppAction"24@"DNDApplicationIdentifier"32@"NSString"40^@48
B56@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"DNDApplicationIdentifier"32@"NSString"40^@48
B48@0:8@"DNDSRemoteServiceProvider"16@"DNDSystemAction"24@"NSString"32^@40
B48@0:8@"DNDSRemoteServiceProvider"16@"NSString"24@"NSString"32^@40
@"NSSet"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
B40@0:8@"DNDSRemoteAvailabilityServiceProvider"16@"DNDApplicationIdentifier"24o^@32
@48@0:8@16@24@32o^@40
B48@0:8@16@24@32o^@40
@"LNAction"48@0:8@"DNDSRemoteAppConfigurationServiceProvider"16@"NSString"24@"NSString"32o^@40
B48@0:8@"DNDSRemoteAppConfigurationServiceProvider"16@"NSString"24@"NSString"32o^@40
@"DNDSPairedDevice"24@0:8@"<DNDSAssertionSyncManager>"16
@"NSSet"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDSPairedDevice"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
@"DNDModeAssertion"32@0:8@"<DNDSAssertionSyncManager>"16@"DNDModeAssertion"24
@"DNDScheduleSettings"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
B24@0:8@"<DNDSAssertionSyncManager>"16
v32@0:8@"<DNDSAssertionSyncManager>"16@?<B@?@"<DNDSModeAssertionUpdateContext>">24
v32@0:8@"<DNDSAssertionSyncManager>"16@"NSArray"24
@"DNDState"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDBypassSettings"24@0:8@"<DNDSSettingsSyncManager>"16
@"DNDSScheduleSettings"24@0:8@"<DNDSSettingsSyncManager>"16
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDBypassSettings"24
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDSScheduleSettings"24
@"NSDictionary"24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"DNDSPairedDevice"24@"DNDSPairedDevice"32
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"NSSet"24@"NSSet"32
v32@0:8@"DNDSModeConfigurationManager"16@"NSArray"24
v40@0:8@"DNDSModeConfigurationManager"16@"NSDictionary"24@"DNDModeConfiguration"32
v32@0:8@"DNDSModeConfigurationManager"16@"DNDMode"24
@"DNDState"24@0:8@"DNDSAppFocusConfigurationCoordinator"16
v32@0:8@"DNDSAppFocusConfigurationCoordinator"16@"NSString"24
@"DNDState"24@0:8@"DNDSSystemFocusConfigurationCoordinator"16
B32@0:8Q16^@24
@56@0:8@16Q24Q32@40^@48
v32@0:8Q16q24
v40@0:8Q16q24q32
B32@0:8Q16@24
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleLifetimeMonitor"
@"DNDSLocationLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSAppFocusConfigurationCoordinator"
@"DNDSSystemFocusConfigurationCoordinator"
@"DNDSAppForegroundTriggerManager"
@"DNDSBiomeDonationManager"
@"DNDSDrivingTriggerManager"
@"DNDSGamingTriggerManager"
@"DNDSMindfulnessTriggerManager"
@"DNDSSleepingTriggerManager"
@"DNDSSmartTriggerManager"
@"DNDSWorkoutTriggerManager"
@"DNDSStateProvider"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"DNDSRemoteAvailabilityServiceProvider"
@"DNDSRemoteAppConfigurationServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
@"DNDSReachability"
@"DNDSXPCEventStream"
@"FBSDisplayLayoutMonitor"
@"DNDSGlobalConfigurationStore"
@"DNDSGlobalConfigurationManager"
@"DNDSModeConfigurationsStore"
@"DNDSPlaceholderModeManager"
@"DNDSContactMonitor"
@"DNDSAppInfoCache"
@"DNDSUserAvailabilityCoordinator"
@"STFocusStatusDomainPublisher"
@"DNDSMetricsManager"
@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v28@0:8@"<DNDSGlobalConfigurationStoring>"16B24
B28@0:8B16^@20
@"<DNDSGlobalConfigurationStoring>"
@"<DNDSGlobalConfigurationManagerDelegate>"
