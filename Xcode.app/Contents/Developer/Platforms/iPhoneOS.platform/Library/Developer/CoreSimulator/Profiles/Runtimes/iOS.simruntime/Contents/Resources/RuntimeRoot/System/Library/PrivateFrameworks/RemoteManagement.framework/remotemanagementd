@(#)PROGRAM:remotemanagementd  PROJECT:RemoteManagement-2.0
v8@?0
com.apple.remotemanagementd
daemon
activationEngine
RMActivationEngine
none
(%K == %@) && (%K == %d)
(%K == %@) && ((%K == NULL) || (%K == %d))
activation.managementSource
configuration.loadState
configuration.managementSource
asset.loadState
(%K == %@) && (%K == %d) && (%K IN %@)
(%K == %@) AND (%K == %d) AND (%K == %@)
(%K == %@) AND ((%K == %d) OR ((%K != NULL) AND (%K.%K == YES)))
inactive
predicateDescription
configurationReferences
configurationIdentifier
inactiveReasons
active
prefetch
asset
(not present)
configuration
deviceAuthenticationCredential
X-Apple-RM-Signature-Data
X-Apple-RM-Signature-Certificates
v32@?0^{__SecKey=}8@"NSArray"16@"NSError"24
genericAuthenticationCredential
X-Apple-RM-MDM-Token
%@ %@
%@:%@
AssociatedKeyAppleIDContext
%@="%@"
%lu-%lu-%lu
1.0.0
B24@?0@"NSString"8@"NSDictionary"16
account.
client
conduit
engine
RMClient-%@
com.apple.remotemanagementd.client
com.apple.remotemanagementd.needs-syncing
%@/%@
clientCapabilitiesController
clientController
com.apple.remotemanagement.cloudConfigAvailable
ClientController
com.apple.RemoteManagement.RMClientController
RMClientController-cloudConfigLock
com.apple.RemoteManagement.validating
v20@?0B8@"NSError"12
com.apple.RemoteManagement.checking-cloud-config
v24@?0@"NSString"8@"NSError"16
com.apple.RemoteManagement.checking-mdm
Device Channel
com.apple.gs.mdm.auth
v32@?0@"NSString"8@"RMClient"16^B24
http
https
file
cloudConfigController
HasCloudConfigBeenChecked
CloudConfigEnrollmentURL
ConfigurationURL
MDMProtocolVersion
DEP.plist
v24@?0@"NSError"8@"NSDictionary"16
commandEngine
v52@?0@"NSString"8s16@"NSDictionary"20@"NSArray"28@"NSArray"36@"NSError"44
(%K == %@) && (%K == %@)
managementSource
state
%K == %@
identifier
managementSource.identifier
payload
type
state.status
lastReceivedPushTimestamp
lastReceivedCommandToken
lastReceivedDeclarationsToken
lastReceivedServerTokensTimestamp
enrollmentToken
errorState
lastProcessedCommandToken
lastProcessedDeclarationsToken
lastReceivedServerTokensFromServerTimestamp
configurationEventStreamSubscription
ConfigurationTypes
assetReferences
assetIdentifier
required
configurationPublisher
com.apple.remotemanagement.configs.daemon
com.apple.remotemanagement.configs.agent
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
v12@?0i8
%K == YES
state.active
assetReferences.asset
configurationQuerier
(%K != nil) && (%K == %d) && (%K == YES) && (%K in %@)
loadState
declarationType
(%K == %@) && (%K == %d) && (%K == YES) && (%K in %@)
configurationStatusArchiver
server-token
valid
reasons
v32@?0@"NSDictionary"8Q16^B24
v32@?0@"RMModelStatusReason"8Q16^B24
%@.json
configurationSubscriberServicePlugin
v16@?0@"NSError"8
<%@ { identifier = %@, token = %@ }>
serverToken
managementSourceIdentifier
<%@: %p { managementSourceIdentifier = %@, type = %@, identifier = %@, serverToken = %@ }>
deviceIdentity
self_signed_identity_cert.plist
v32@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8@"NSArray"16@"NSError"24
deviceLockState
RMDeviceLockStateListener
externalStatusArchiver
PublishedStatus.json
ValidStatus
ErrorStatus
Code
Domain
UserInfo
v32@?0@"NSString"8@16^B24
externalStatusPublisher
_metadata
last-received
removed
_removed
ExternalStatusPublisher
RMExternalStatusPublisher
v32@?0@"NSString"8@"NSArray"16^B24
keyPath
v28@?0@"NSArray"8@"NSDictionary"16B24
v32@?0@"NSString"8@"NSDictionary"16^B24
%K IN %@
%@.%@
RMMAIDLongLivedTokenOverride
RMOverrideCloudConfig
RMTestOrganizationID
fileConduit
OverallStatus.json
Declarations
Subscriptions
Status
 only if needed
v32@?0@"NSString"8@"RMDeclarationPayload"16^B24
json
StatusItems
declarations
%@-%@
httpConduit
WWW-Authenticate
Authorization
X-Apple-Request-UUID
test-org-id
Accept
Content-Type
application/json
text/html
User-Agent
RemoteManagementDaemon
Retry-After
DELETE
POST
%@/%@ (%@) %@/%@
v32@?0@"RMModelPayloadBase"8@"NSHTTPURLResponse"16@"NSError"24
activations
configurations
assets
management
{identifier}
Unexpected status code
Empty Response Body
{channel}
{enrollmenttoken}
, %@="%@"
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss Z
httpconduitstate
chosenAuthenticationScheme
localRetryAfterDate
numberOfConsecutiveAuthErrors
numberOfConsecutiveErrors
numberOfConsecutiveFailures
pushEnvironment
pushTopic
referralBaseURL
referralCount
serverRetryAfterDate
httpLogging
Downloaded data to file: %@
%@-%@.txt
<<<<< Request
%@ %@ HTTP/1.1
%@: %@
v32@?0@"NSString"8@"NSString"16^B24
>>>>> Response
HTTP/1.1 %ld %@
--- Error ---
--- Unknown Error ---
InternalStateArchiver.PersistentActiveIdentifiers
InternalStateArchiver.CommandAndDeclarationsPersistentHistoryToken
InternalStateArchiver.DeviceStatusByKeyPath
InternalStateArchiver.PushTokenByEnvironmentName
internalStatusPublisher
name
statusIdentifier
statusServerToken
v24@?0@"RMAssetPayloadReference"8^B16
yyyy-MM-dd'T'HH:mm:ssZZZZZ
v32@?0@8@16^B24
managementPropertiesArchiver
ManagementProperties.json
managementSettings
ManagementSettings.plist
(%K == %@)
bootstrapURI
enrollmentType
%K == %d
accountIdentifier
authenticationCredential
conduitConfig
enrolled
personaIdentifier
predicateStatusKeys
storeDescription
command
statusSubscriptions
subscribedStatusKeyPaths
mdmConduit
v32@?0@"RMModelPayloadBase"8@"NSDictionary"16@"NSError"24
file:///tmp/rmd_test/Status
Empty body
Endpoint
Data
mdmconduitstate
com.apple.RemoteManagement.MDMv1Liaison
mdmv1Liaison
migrationEngine
ProcessedActions
Identifier
Timestamp
migrationStatusPath
RMMigrationStatusPath
migrationSystemContainer
RMMigrationSystemContainer
Executed
Echo
Failed
Pending
com.apple.activation
com.apple.asset
com.apple.configuration
com.apple.command
Error.UnknownPayloadKeys
Unknown Payload Keys
UnknownPayloadKeys
Info.Predicate
ServerToken
Predicate
Error.PredicateFailed
Error.MissingAssets
Configuration (%@:%@) is missing assets.
AssetIdentifiers
Error.MissingConfigurations
Activation (%@:%@) is missing configurations.
ConfigurationIdentifiers
Error.InvalidPayload
%@ (%@:%@) has an invalid payload.
Error.MissingState
%@ (%@:%@) is missing state.
Info.NotReferencedByActivation
Info.NotReferencedByConfiguration
Activation
Asset
Configuration
periodicSync
com.apple.remotemanagement.periodic-sync
v16@?0@?<v@?q>8
uniqueIdentifiersByConfigurationType
persistentController
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSMutableDictionary"8
com.apple.remotemanagementd.persistent-history-notifier
B16@?0@"NSPersistentHistoryChange"8
(none)
B24@?0@"NSPersistentHistoryTransaction"8@"NSDictionary"16
keyPaths
version
status
property
@(status|property|key)\(([^)]+)\)
Unable to create predicate regular expression
error
Unknown
<%@: %p { statusKeyPaths = %@, properties = %@, predicate = %@ }>
Invalid version
RMPredicateStatusUpdaterDidChangeNotification
RMUserInfoKeyPredicateUpdatedManagementSourceObjectIDs
predicateStatusUpdater
Error.Unknown
An unknown error occurred: %@
push
com.apple.aps.remotemanagementd.http.apns-dev
com.apple.aps.remotemanagementd.http.apns-prod
PushController
com.apple.remotemanagementd.push
v32@?0@"NSString"8@"APSConnection"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
(%K == %@) && (%K == %@) && (%K == %@)
state.pushEnvironment
state.enrollmentToken
state.pushTopic
(%K != NULL) && (%K != NULL)
Management Sources
Orphaned Entities
Internal Device Status
Error
%K == nil
Unable to unarchive status data
(%K == nil) && (%K == nil)
activation
(%K == nil)
subscription
securityUtilities
PrivateKey
Certificates
SelfSigned-%@
Apple Inc.
Remote Management
statusEngine
RMStatusEngine
subscription.sourceType
(%K == %@) && ((%K == NULL) OR (%K != %K))
lastAcknowledgedDate
lastReceivedDate
(%K == %@) AND (SUBQUERY(%K, $statusSubscriptionItem, $statusSubscriptionItem.%K IN %@).@count > 0)
statusSubscriptionItems
subscription.sourceIdentifier
%K == NULL
(%K == NULL) OR (%K != %K)
(%K == %@) AND (%K == %@) AND (%K == %d)
sourceIdentifier
sourceType
statusPublisherServicePlugin
statusQuerier
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSError"16^B24
%@.%ld
statusReporter
items
predicate
properties
statusSubscriptionsSubscriber
RMStatusSubscriptionsSubscriber
Error.ConfigurationIsInvalid
Configuration is invalid
(%K == %@) AND (%K == %d)
(%K == %@) AND (%K == %@) AND (%K == YES)
storeAssetResolver
com.apple.RemoteManagement.RMStoreAssetResolver
Asset has no Reference
com.apple.RemoteManagement.resolvingAssets
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
%02X
storeClient
storeController
rmstore
StoreController
com.apple.RemoteManagement.RMStoreController
v32@?0@"NSString"8@"NSManagedObjectID"16^B24
SetShouldInstallConfiguration
v24@?0@"NSData"8@"NSError"16
%@://%@/%@
Identifier does not reference an asset
v24@?0@"RMStoreResolvedAsset"8@"NSError"16
(%K == %@) && (%K == %d) && (%K in %@)
(%K == %@) && (%K == %d) && (%K == %@)
device
user
storeDataFetcher
com.apple.RemoteManagement.RMStoreDataFetcher
com.apple.RemoteManagement.fetchingData
v24@?0@"NSDictionary"8@"NSError"16
StoreXPCListenerDelegate
com.apple.private.remotemanagement.observer
com.apple.private.remotemanagement.provider
com.apple.private.remotemanagement.subscriber
v24@?0@"RMObserverStore"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"RMModelDeclarationBase"8@"NSError"16
v24@?0@"RMDeclarationManifest"8@"NSError"16
v24@?0@"RMProviderStore"8@"NSError"16
v24@?0@"RMSubscriberStore"8@"NSError"16
v32@?0@"NSArray"8@"NSDictionary"16@"NSError"24
(%K IN %@)
needsSync
RMSubscribedStatusKeyPathDidChangeNotification
RMUserInfoKeyUpdatedManagementSourceObjectIDs
statusNotificationCenter
%K BEGINSWITH %@
v32@?0@"NSManagedObjectID"8@"NSSet"16^B24
XPCListenerDelegate
AAACCOUNTS.com.apple.accountsd
com.apple.purplebuddy
com.apple.Preferences
com.apple.private.remotemanagement.account-changes
application-identifier
com.apple.private.remotemanagement
com.apple.private.remotemanagement.configuration-subscriber
com.apple.private.remotemanagement.enrollment
v24@?0@"RMManagementChannel"8@"NSError"16
daemon
activationEngine
RMActivationEngine
RMDebounceTimerDelegate
RMActivationPayload
Loading
RMPartialObject
RMActivationPayloadState
RMDeclarationPayloadActivatableState
NSObject
RMReportDetails
RMAssetPayload
RMAssetPayloadReference
RMAssetPayloadState
deviceAuthenticationCredential
RemoteManagement
RMURLRequestPreparer
genericAuthenticationCredential
RMCapabilities
client
RMClient
RMConduitDelegate
RMStatusEngineDelegate
clientCapabilitiesController
RMClientCapabilitiesController
clientController
RMClientController
RMDeviceLockStateListenerDelegate
RMClientDelegate
cloudConfigController
RMCloudConfigController
commandEngine
RMCommandExecutor
RMCommandEngine
RMCommandPayload
RMCommandPayloadState
RMConduitConfig
RMConduitState
configurationEventStreamSubscription
RMConfigurationEventStreamSubscription
RMConfigurationSubscriber
RMConfigurationPayload
RMConfigurationPayloadReference
RMConfigurationPayloadState
configurationPublisher
RMConfigurationPublisher
configurationQuerier
RMConfigurationQuerier
configurationStatusArchiver
RMConfigurationStatusArchiver
configurationSubscriberServicePlugin
RMConfigurationSubscriberXPCService
RMConfigurationSubscriberServicePlugin
RMDeclarationPayload
RMDeclarationUniqueIdentifier
NSCopying
deviceIdentity
RMDeviceIdentity
deviceLockState
RMDeviceLockStateListener
externalStatusArchiver
RMExternalStatusArchiver
externalStatusPublisher
RMExternalStatusPublisher
RMXPCNotificationsObserver
RMStatusPublisher
fileConduit
RMFileConduit
RMConduit
RMFileConduitConfig
RMFileConduitState
httpConduit
RMHTTPConduit
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
RMPersistentHistoryNotifierDelegate
RMHTTPConduitConfig
httpconduitstate
RMHTTPConduitState
httpLogging
RMHTTPLog
RMInternalStateArchiver
RMConfigurationPublisherDelegate
RMInternalStatusPublisherDelegate
RMPushControllerDelegate
internalStatusPublisher
RMInternalStatusPublisher
RMJSONSerialization
RMManagementPayload
RMManagementPayloadState
managementPropertiesArchiver
RMManagementPropertiesArchiver
managementSettings
RMManagementSettings
RMManagementSource
mdmConduit
RMMDMConduit
RMMDMConduitConfig
mdmconduitstate
RMMDMConduitState
mdmv1Liaison
RMMDMv1Liaison
migrationEngine
RMMigrationEngine
migrationStatusPath
RMMigrationStatusPath
migrationSystemContainer
RMMigrationSystemContainer
RMMigrationAction
RMAdditions
Error
periodicSync
RMPeriodicSync
RMPersistentActiveIdentifiers
NSSecureCoding
NSCoding
persistentController
RMPersistentController
RMPersistentHistoryNotifier
RMPersistentHistoryNotifierChanges
predicateDescription
RMPredicateDescription
_RMPredicateVisitor
NSPredicateVisitor
predicateStatusUpdater
RMPredicateStatusUpdater
push
RMPushController
APSConnectionDelegate
RMReport
securityUtilities
RMSecurityUtilities
statusEngine
RMStatusEngine
StatusSubscription
statusPublisherServicePlugin
RMStatusPublisherServicePlugin
RMExternalStatusProtocol
statusQuerier
RMStatusQuerier
RMStatusQueryResult
RMStatusSubscriptionQueryResult
RMProtocolStatusReport
statusReporter
RMStatusReporter
RMStatusSubscription
RMStatusSubscriptionItem
statusSubscriptionsSubscriber
RMStatusSubscriptionsSubscriber
storeAssetResolver
RMStoreAssetResolver
storeClient
RMStoreClient
storeController
RMStoreController
storeDataFetcher
RMStoreDataFetcher
RMStoreHelper
StoreXPCListenerDelegate
RMStoreXPCListenerDelegate
RMStoreXPCProxyHandler
RMStoreXPCService
RMSubscribedStatusKeyPath
statusNotificationCenter
RMSubscribedStatusKeyPathUpdater
XPCListenerDelegate
RMXPCListenerDelegate
NSXPCListenerDelegate
RMXPCProxyHandler
RMXPCService
daemon
T@"NSObject<OS_os_log>",R
configureSandbox
isEnabled
setManagementScope:
migrateOnStartupReturningError:
statusDirectoryURLCreateIfNeeded:
startPersistentController
sharedPublisher
allNotifications
addObjectsFromArray:
registerForDarwinNotifications:
registerForDistributedNotifications:
start
sharedController
persistentContainer
initWithPersistentContainer:allowedToRun:
initWithMachServiceName:
setDelegate:
resume
startListeningForNotifications
activationEngine
debounceTimerWithMinimumInterval:maximumInterval:delegate:identifier:
_predicateStatusItemDidChange:
containsObject:
debouncer
trigger
reconcile:
hasChanges
_deleteDeclarationsThatAreNoLongerNeeded:
_attachConfigurationReferences:
_attachAssetReferences:
_processManagementProperties:
_processAllDeclarations:
getDeclarationsMarkedForRemovalFromFetchRequest:managementSource:
deleteObjects:managementSourceIdentifier:removeStatus:
setIncludesPendingChanges:
setPropertiesToFetch:
entityName
removeStatusForStoreIdentifier:declarationIdentifier:declarationServerToken:error:
managedObjectContext
deleteObject:
configurationIdentifier
setConfiguration:
setAsset:
payloadANY
addEntriesFromDictionary:
persistPropertiesWithStoreIdentifier:properties:error:
propertiesWithStoreIdentifier:error:
_checkPredicateStatusKeysForActivations:managementSource:
unionSet:
minusSet:
setPredicateStatusKeys:
triggerAggregatingTimerAction
setDebouncer:
_debouncer
T@"RMDebounceTimer",&,N,V_debouncer
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:
statusByKeyPath
statusKeyPaths
evaluateWithStatus:properties:error:
predicateEvaluatedToFalseForActivation:
predicateEvaluationFailedWithError:forActivation:
missingAssetIdentifiers:forConfiguration:
missingConfigurationIdentifiers:forActivation:
setActivation:
isInserted
willAccessValueForKey:
primitiveValueForKey:
didAccessValueForKey:
predicateDescription_
unarchivedObjectOfClass:fromData:error:
setPrimitiveValue:forKey:
willChangeValueForKey:
archivedDataWithRootObject:requiringSecureCoding:error:
setPredicateDescription_:
didChangeValueForKey:
reportDetails
mutableCopy
configurationReferences
setObject:forKeyedSubscript:
predicateDescription
description
copy
setPredicateDescription:
T@"NSData",&,D,N
T@"NSSet",&,D,N
T@"RMPredicateDescription",&,N
state
T@"RMActivationPayloadState",&,D,N
count
valueForKey:
allObjects
caseInsensitiveCompare:
sortedArrayUsingSelector:
rm_payloadTypeName
createIncorrectPayloadTypeErrorWithExpectedType:actualType:
setPayload:
setDeclarationType:
payloadStandardConfigurations
payloadPredicate
setConfigurationIdentifier:
setRequired:
setConfigurationReferences:
T@"NSString",C,N
Ts,N
T@"RMManagementSource",&,N
T@"NSData",R,C,N
T@,R,N
inactiveReasons_
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
active
setActive:
setInactiveReasons_:
numberWithBool:
inactiveReasons
countByEnumeratingWithState:objects:count:
serializeWithType:
addObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
TB,R,N
setInactiveReasons:
TB,D,N
T@"NSData",C,D,N
activation
T@"RMActivationPayload",&,D,N
T@"NSArray",C,N
prefetch
assetReferences
T@"RMAssetPayloadState",&,D,N
configuration
assetIdentifier
T@"RMConfigurationPayload",&,D,N
asset
T@"RMAssetPayload",&,D,N
error
T@"NSDictionary",&,D,N
retryAfterDate
T@"NSDate",C,D,N
Ts,D,N
deviceAuthenticationCredential
genericAuthenticationCredential
_createAuthenticationParameters
_prepareSchemeMAIDURLRequest:error:
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
ak_addDeviceSerialNumberHeader
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
_prepareSchemeMAIDTask:error:
_setAppleIDContext:
_appleIDContext
_updateTestPropertiesAccountIdentifier:afterFailure:
_updateBearerPropertiesAccountIdentifier:afterFailure:
_updateMAIDPropertiesAccountIdentifier:afterFailure:
rm_iCloudAccountForRemoteManagingAccountWithAltDSID:
maidLongLivedToken
aa_mdmServerToken
stringUTCWithDate:
stringWithFormat:
capabilitiesByCapabilitiesType
objectForKeyedSubscript:
_clientCapabilitiesModelForEnrollmentType:scope:protocolType:
initWithClientCapabilitiesModel:
dictionary
init
buildFromDictionary:
_supportedPayloadsForEnrollmentType:scope:protocolType:
buildWithSupportedVersions:supportedFeatures:supportedPayloads:
_supportedActivationsForEnrollmentType:scope:protocolType:
_supportedAssetsForEnrollmentType:scope:protocolType:
_supportedConfigurationsForEnrollmentType:scope:protocolType:
_supportedManagementForEnrollmentType:scope:protocolType:
_supportedStatusItemsForEnrollmentType:scope:protocolType:
buildWithActivations:assets:configurations:management:
buildWithDeclarations:statusItems:
registeredIdentifier
arrayWithObjects:count:
_filterAccountsWithScope:
sortUsingSelector:
removeObjectsInArray:
hasPrefix:
predicateWithBlock:
filterUsingPredicate:
isSharediPad
capabilitiesForEnrollmentType:scope:protocolType:
T@"NSMutableDictionary",R,N
status
versionHash
.cxx_destruct
_status
_versionHash
T@"RMModelStatusManagementClientCapabilities",R,N,V_status
T@"NSString",R,N,V_versionHash
dataWithJSONObject:options:error:
RMModelSHA1HexString
client
_makeConduitWithManagementSourceObjectID:inContext:
initWithManagementSourceObjectID:statusQuerier:inContext:
initWithConduit:activationEngine:statusEngine:managementSourceIdentifier:
statusEngine
conduit
_processConduitErrorState:
implicitlySubscribeToStatusKeyPaths:
queryForStatusWithKeyPaths:
acknowledgeStatusSubscriptions:
clearAllLastAcknowledgedDate
queryForUnacknowledgedStatusSubscriptions
queryForStatusSubscriptions
_haltSyncing
errorByKeyPath
_syncConduitOnlyIfNeeded:completionHandler:
_sendStatusQueryResultIfNeeded:completionHandler:
createStatePreventsSyncingError
_handleConduitError
_setNeedsSyncing:
protocolStatusReport
subscribeToStatusKeyPathsThenStopAfterAcknowledged:
operationQueue
_syncIfNeeded
statusEngineHasUnacknowledgedSubscription:
setConduit:
setActivationEngine:
setStatusEngine:
setOperationQueue:
_needsSyncingLock
_needsSyncing
_managementSourceIdentifier
_conduit
_activationEngine
_statusEngine
_operationQueue
T@"NSString",R,N,V_managementSourceIdentifier
T@"<RMConduit>",&,N,V_conduit
T@"RMActivationEngine",&,N,V_activationEngine
T@"RMStatusEngine",&,N,V_statusEngine
T@"NSOperationQueue",&,N,V_operationQueue
T@"<RMClientDelegate>",W,N,V_delegate
clientCapabilitiesController
initWithSubscribedStatusKeyPathUpdater:
_notifyChangesIfNeeded
protocolType
subscribedStatusUpdater
T@"RMClientCapabilitiesController",R,N
setSubscribedStatusUpdater:
_subscribedStatusUpdater
T@"RMSubscribedStatusKeyPathUpdater",&,N,V_subscribedStatusUpdater
clientController
_startListeningForNotifications
newListenerWithDelegate:
_makeClientWithManagementSourceObjectID:managementSourceIdentifier:persistentContainer:
_validateManagementSources
_syncMDMv1ManagementSourcesWithUnenroll:
lockStateListener
startListening
executeFetchRequest:error:
rm_defaultStore
rm_remoteManagementAccountForIdentifier:
_removeInvalidManagementChannels:
condition
unenrollWithIdentifier:completionHandler:
tryLockWhenCondition:
_registerForCloudConfigAvailableNotificationIfNeeded
_shouldRegisterForCloudConfigAvailableNotification
_checkCloudConfig
_checkForMandatoryDeviceEnrollmentWithCompletionHandler:
enrollDeviceChannelWithURI:completionHandler:
initWithManagementSourceObjectID:managementSourceIdentifier:statusQuerier:persistentContainer:
_completedClientStateChanges:
componentsWithURL:resolvingAgainstBaseURL:
_hasMDMv1ManagementForManagingProfileIdentifier:
isEnrollmentInMDMv1Restricted
remoteManagementDidUnenroll
installedMDMProfileIdentifier
createFeatureDisabledError:
isEnrolledInMDMv1
createAlreadyEnrolledInMDMv1Error
createManagementSourceAlreadyExistsErrorWithURI:
setConduitConfig:
_didFailToEnrollClientForManagementObjectID:
_didEnrollClient:conduitType:managementSourceObjectID:account:accountStore:completionHandler:
enrollWithCompletionHandler:
fetchRequestWithAccountIdentifier:
createManagementSourceAlreadyExistsErrorWithAccountIdentifier:
accountWithIdentifier:
createAccountMissingErrorWithIdentifier:
_enrollAccount:fromStore:completionHandler:
createBootstrapURINotFound
_clientWithIdentifier:
_unenrollAndReenrollIfDEP:
reenrollWithCompletionHandler:
_bootstrapURIForAccount:
_genericCredentialForAccount:fromStore:
rm_isAccountSchemeTest
rm_isAccountSchemeBearer
rm_isAccountSchemeMAID
dmc_isAccountSchemeSharediPad
rm_enrollmentURL
rm_accountScheme
username
initWithAuthenticationScheme:properties:
rm_bearerToken
rm_DSID
rm_altDSID
aida_accountForAltDSID:
aida_tokenForService:
rm_setEnrollmentToken:
rm_setManagementSourceIdentifier:
saveAccount:withCompletionHandler:
remoteManagementDidEnroll
_didUnenrollClientWithIdentifier:error:
stopListening
fetchRequestWithBootstrapURI:
queryForStatusSubscriptionsWithIdentifiers:
sendStatusForSubscriptionsWithIdentifiers:completionHandler:
_canProcessClientStateChanges:
reenrollWithIdentifier:completionHandler:
processingClientStateChanges
lockStateDidChange:
clientNeedsToReenrollWithManagementSourceIdentifier:
clientNeedsToUnenrollWithManagementSourceIdentifier:
T@"RMClientController",R,N
_checkCloudConfigAsync:
_receivedMDMv1UnenrollNotification
enrollUserChannelWithAccountIdentifier:completionHandler:
enrollViaMDMWithEnrollmentType:uri:accountIdentifier:personaIdentifier:completionHandler:
deviceChannelEnrollmentExistsWithCompletionHandler:
managementChannelWithAccountIdentifier:completionHandler:
managementChannelWithEnrollmentURL:completionHandler:
syncWithIdentifier:completionHandler:
syncAllManagementSourcesWithCompletionHandler:
updateWithIdentifier:pushMessage:completionHandler:
updateWithIdentifier:tokensResponse:completionHandler:
sendStatusData:toManagementSourceWithIdentifier:completionHandler:
queryForStatusSubscriptionsWithIdentifiers:fromManagementSourceWithIdentifier:completionHandler:
sendStatusForSubscriptionsWithIdentifiers:toManagementSourceWithIdentifier:completionHandler:
setProcessingClientStateChanges:
clientByManagementSourceIdentifier
_cloudConfigLock
_lockStateListener
_processingClientStateChanges
_clientByManagementSourceIdentifier
T@"RMDeviceLockStateListener",R,N,V_lockStateListener
T@"NSMutableSet",&,N,V_processingClientStateChanges
T@"NSMutableDictionary",R,N,V_clientByManagementSourceIdentifier
fetchRequestWithBootstrapURI:enrollmentType:
isHTTPConduitEnabled
isFileConduitEnabled
cloudConfigController
sharedSettings
removeValueForKey:
isDeviceChannelEnabled
_enrollmentURLFromUpdatedCloudConfig
_updatedCloudConfig
_enrollmentURLFromCloudConfig:
setValue:forKey:
absoluteString
overrideCloudConfig
baseDirectoryURLCreateIfNeeded:
dictionaryWithContentsOfURL:
sharedConnection
storeCloudConfigurationDetails:completion:
retrieveCloudConfigurationDetailsCompletionBlock:
cloudConfigurationDetails
cloudConfigEnrollmentURL
cloudConfigEnrollmentURLWithUpdateFromServer
commandEngine
context
managementSourceObjectID
objectWithID:
initWithManagementSource:
_fetchCommand
initWithContext:
setState:
payload
loadData:serializationType:error:
identifier
markFailedWithError:reasons:
save:
rollback
createInternalError
rm_executeRequestOnBehalfOfManagementChannel:completionHandler:
rm_requestExecutesWithoutReturning
performBlockAndWait:
_executeCommand:managementChannel:error:
initWithCondition:
lock
unlockWithCondition:
lockWhenCondition:
unlock
_handleResultForCommand:status:result:reasons:unknownPayloadKeys:error:outError:
fetchRequest
null
predicateWithFormat:
setPredicate:
setFetchLimit:
execute:
firstObject
markExecutedWithResult:reasons:unknownPayloadKeys:
markPending
initWithManagementSourceObjectID:context:
syncWithCompletionHandler:
_processCommand:
executingCommands
setExecutingCommands:
_executingCommands
_managementSourceObjectID
_context
T@"NSManagedObjectID",R,N,V_managementSourceObjectID
T@"NSManagedObjectContext",R,N,V_context
TB,N,V_executingCommands
setWithObject:
managementSource
validateForInsert:
domain
isEqualToString:
code
userInfo
createMissingMandatoryPropertyErrorWithPropertyNamed:onObject:
validateForUpdate:
changedValues
allKeys
committedValuesForKeys:
createCannotChangeValueErrorForPropertyNamed:onObject:
type
numberWithShort:
keyPathsForValuesAffectingManagementSourceIdentifier
managementSourceIdentifier
T@"NSString",C,D,N
T@"RMManagementSource",&,D,N
T@"NSString",R,C,N
T@"RMCommandPayloadState",&,D,N
createMultipleValidationErrorOrReturnTheSingleErrorWithErrors:
setStatus:
setModifiedDate:
setResult:
failedWithUnknownPayloadKeys:
arrayByAddingObject:
setReasons:
reasonWithError:
markQueued
command
T@"RMCommandPayload",&,D,N
reasons
T@"NSArray",C,D,N
result
T@"NSDictionary",C,D,N
modifiedDate
arrayWithCapacity:
lastReceivedPushTimestamp
lastReceivedCommandToken
lastReceivedDeclarationsToken
lastReceivedServerTokensTimestamp
T@"RMConduitState",&,D,N
lastProcessedCommandToken
configurationEventStreamSubscription
numberWithUnsignedLongLong:
stringValue
dictionaryWithObjects:forKeys:count:
eventPublisher
token
applyChangedConfigurationsTypes:
configurationTypes
T@"NSSet",R,C,N
initWithToken:configurationTypes:eventPublisher:
setEventPublisher:
_identifier
_configurationTypes
_token
_eventPublisher
T@"NSObject<OS_xpc_event_publisher>",&,N,V_eventPublisher
TQ,R,N,V_token
T@"NSString",R,C,N,V_identifier
T@"NSSet",R,C,N,V_configurationTypes
T@"RMConfigurationPayloadState",&,D,N
setAssetIdentifier:
setAssetReferences:
required
configurationPublisher
_start
sharedConfigurationPublisher
managementScope
newBackgroundContext
sharedArchiver
persistentActiveIdentifiers
initWithPersistentActiveIdentifiers:context:
_addEventStreamSubscriberWithSubscription:
_removeEventStreamSubscriberForToken:
defaultCenter
_managedObjectContextDidSave:
persistentStoreCoordinator
addObserver:selector:name:object:
_loadAllConfigurationSubscribersAllowingThemToCheckForChanges
_notifyChangedConfigurationsIfNeeded
eventStreamSubscriptionByToken
plugins
removeObjectForKey:
removeObject:
loadPlugins
_createInternalPlugins
_reprocessActiveConfigurations
setUniqueIdentifiersByConfigurationType:
name
setPersistentActiveIdentifiers:
_notifyChangedConfigurationsForTypes:
delegate
configurationPublisher:didChangePersistentActiveIdentifiers:
_notifySubscribersWithConfigurationTypes:
observerStoresDidChange
sharedUpdater
notifyStatusDidChangeForDeclarations
intersectSet:
reprocessActiveConfigurations
setContext:
setPlugins:
setEventStreamSubscriptionByToken:
_startLock
_notificationLock
_pluginsLock
_started
_persistentActiveIdentifiers
_plugins
_eventStreamSubscriptionByToken
_delegate
T@"NSManagedObjectContext",&,N,V_context
T@"RMPersistentActiveIdentifiers",&,N,V_persistentActiveIdentifiers
T@"NSMutableArray",&,N,V_plugins
T@"NSMutableDictionary",&,N,V_eventStreamSubscriptionByToken
T@"<RMConfigurationPublisherDelegate>",W,N,V_delegate
descriptionWithEventsDictionary:
types
setWithArray:
entity
isKindOfEntity:
initWithConfigurationPayloads:
setRelationshipKeyPathsForPrefetching:
uniqueIdentifiersByConfigurationType
arrayByAddingObjectsFromArray:
isEqualToSet:
componentsJoinedByString:
configurationQuerier
_activeConfigurationsByTypeForTypes:managementSourceIdentifier:error:
initWithCapacity:
declarationType
initWithPersistentContainer:
activeConfigurationsByTypeForTypes:error:
activeConfigurationsByTypeForTypes:managementSourceIdentifier:error:
_persistentContainer
T@"NSPersistentContainer",R,N,V_persistentContainer
serverToken
initWithType:identifier:serverToken:content:channel:assetByIdentifier:
dictionaryWithCapacity:
initWithType:identifier:serverToken:content:channel:
configurationStatusArchiver
_getStatusDirectoryURLWithStoreIdentifier:declarationIdentifier:declarationServerToken:createIfNeeded:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
load:serializationType:error:
enumerateObjectsUsingBlock:
_getStatusFileURLForStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:
_removeStatusFileDirectoryAtURL:error:
_removeStatusFileAndParentIfEmptyAtURL:error:
removeItemAtURL:error:
alphanumericCharacterSet
addCharactersInString:
fileSystemSafeCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByDeletingLastPathComponent
removeItemAtPath:error:
statusForChannel:declarationIdentifier:serverToken:
persistStatusForStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:validity:reasons:error:
removeStatusForStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:error:
removeAllStatusForStoreIdentifier:error:
configurationSubscriberServicePlugin
xpcServiceDirectoryURL
defaultManager
path
contentsOfDirectoryAtPath:error:
hasSuffix:
URLByAppendingPathComponent:
_validPluginWithURL:
initWithURL:
bundleWithURL:
infoDictionary
descriptionWithServiceDictionary:
bundleIdentifier
lastPathComponent
_serviceConnection
synchronousRemoteObjectProxyWithErrorHandler:
storeScope
fetchThenApplyConfigurationsWithScope:completionHandler:
invalidate
initWithServiceName:
publishStatusKeys:storeIdentifier:scope:completionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
initWithURL:identifier:configurationTypes:
_url
T@"NSURL",R,C,N,V_url
_validateManagementSourceWithErrors:
_validateLoadStateWithErrors:
_validateSetOncePropertiesWithErrors:
_currentLoadState
loadState
integerValue
createMismatchedValuesErrorForPropertyNamed:onObject:expected:actual:
T@,&,D,N
initWithManagementSourceIdentifier:type:identifier:serverToken:
isEqualToDeclarationIdentifier:
copyWithZone:
_type
_serverToken
T@"NSString",R,C,N,V_managementSourceIdentifier
T@"NSString",R,C,N,V_type
T@"NSString",R,C,N,V_serverToken
deviceIdentity
privateKey
certificates
objectAtIndexedSubscript:
checkValidAfterWithCertificate:interval:
setPrivateKey:
setCertificates:
_validDeviceIdentityCache
createDeviceIdentityNotFoundError
_cachePrivateKey:certificates:
_fetchDeviceIdentityCertificateWithCompletionHandler:
_issueDeviceIdentityCertificateWithCompletionHandler:
_fetchOrCreateSelfSignedCertificateWithCompletionHandler:
currentDevice
UDID
_persistIdentityWithPrivateKey:certificateChain:fileName:isBAA:
generateSelfSignedCertificateAndPrivateKeyWithID:completionHandler:
_copyPersistedIdentityWithFileName:isBAA:completionHandler:
identityDirectoryURLCreateIfNeeded:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:isDirectory:
dictionaryWithContentsOfURL:error:
deserializeBAAIdentity:completionHandler:
deserializeIdentity:completionHandler:
serializeBAAIdentityWithPrivateKey:certificateChain:error:
serializeIdentityWithPrivateKey:certificateChain:error:
writeToURL:atomically:
sharedDeviceIdentity
deviceIdentityForTesting
T@"RMDeviceIdentity",R,N
deviceIdentityWithCompletionHandler:
_identityLock
_privateKey
_certificates
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_privateKey
T@"NSArray",&,N,V_certificates
deviceLockState
initWithDelegate:
locked
_syncLock
_previousLockState
_listening
T@"<RMDeviceLockStateListenerDelegate>",W,N,V_delegate
externalStatusArchiver
_getPublishedStatusFileURLWithStoreIdentifier:
deserializeJSONDictionaryAtFileURL:error:
dictionaryWithDictionary:
enumerateKeysAndObjectsUsingBlock:
serializeJSONDictionary:fileURL:error:
fileExistsAtPath:isDirectory:
statusWithStoreIdentifier:error:
persistStatusWithStoreIdentifier:status:error:
numberWithInteger:
intValue
errorWithDomain:code:userInfo:
externalStatusPublisher
setAutomaticallyMergesChangesFromParent:
setTransactionAuthor:
newSharedLockWithDescription:
_loadAllStatusPublishers
listenToNotificationsForAllKeyPaths
statusKeysByNotification
setPublisherByNotification:
setNotificationsByStatusKey:
setStatusKeys:
publisherByNotification
_fetchSubscribedStatusKeyPaths
_buildPredicateStatusKeyPaths
listenToNotificationsForSubscribedKeyPaths:
setWithSet:
predicateStatusKeysByStoreIdentifier
notificationsByStatusKey
darwinNotifier
addObserverForNotification:observer:
removeObserverForNotification:
statusKeys
objectID
valueForKeyPath:
publishStatusKeys:storeIdentifier:
_queryForFilteredStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:error:
statusForChannel:error:
_filteredArray:metadata:lastAcknowledgedDate:
createUnsupportedStatusValueErrorWithKeyPath:
persistLock
performBlockUnderLock:
_mergeOldStatus:newStatus:changedStatusKeyPaths:
_notifyChangesWithStoreIdentifier:statusKeyPaths:
notifyStatusDidChangeForKeyPaths:managementSourceIdentifier:
notifyPredicateStatusDidChangeForManagementSourceIdentifier:
predicateStatusKeys
componentsSeparatedByString:
setPredicateStatusKeysByStoreIdentifier:
_mergeOldArrayValue:oldValueMetadata:newValue:completionHandler:
stringUTCFractionalSecondsWithDate:
_buildDictionaryFromArrayValue:
isEqualToDictionary:
compare:
boolValue
didReceiveNotification:
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:error:
queryForUnacknowledgedStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:error:
supportedKeyPaths
T@"NSSet",R,N
T@"RMExternalStatusPublisher",R,N
XPCEventPublisher
setXPCEventPublisher:
_persistLock
_XPCEventPublisher
_publisherByNotification
_notificationsByStatusKey
_statusKeys
_predicateStatusKeysByStoreIdentifier
T@"RMSharedLock",R,N,V_persistLock
T@"NSObject<OS_xpc_event_publisher>",&,N,V_XPCEventPublisher
T@"NSArray",C,N,V_plugins
T@"NSDictionary",&,N,V_publisherByNotification
T@"NSDictionary",&,N,V_notificationsByStatusKey
T@"NSSet",&,N,V_statusKeys
T@"NSDictionary",&,N,V_predicateStatusKeysByStoreIdentifier
T@"NSArray",R,N
filteredSetUsingPredicate:
stringForDefaultsKey:
boolForDefaultsKey:
fileConduit
bootstrapURI
conduitConfig
errorState
enrollmentType
_prepareDirectoryWithURL:error:
_generateEnrollmentToken
setEnrollmentToken:
getResourceValue:forKey:error:
UUIDString
setEnrolled:
enrolled
authenticationCredential
authenticationScheme
properties
_syncOnlyIfNeeded:completionHandler:
_syncWithManagementSource:onlyIfNeeded:error:
_syncDeclarationsWithManagementSource:error:
createMultipleErrorOrReturnTheSingleErrorWithErrors:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
dataWithContentsOfURL:options:error:
declarationIdentifier
declarationServerToken
setManagementSource:
setIdentifier:
setServerToken:
loadPayload:error:
setLoadState:
JSONObjectWithData:options:error:
stringLocalTimeZoneFractionalSecondsWithDate:
stringByAppendingPathExtension:
URLByAppendingPathExtension:
initWithManagementSourceObjectID:inContext:
statusItemsToImplicitlySubscribeTo
statusItemsToSendDuringEnrollment
enrollWithStatusItems:completionHandler:
unenrollWithCompletionHandler:
startWithCompletionHandler:
isSyncAllowed
syncIfNeededWithCompletionHandler:
updateWithPushMessage:completionHandler:
updateWithTokensResponse:completionHandler:
sendStatusData:completionHandler:
T@"<RMConduitDelegate>",W,N
_statusWritingLock
T@"<RMFileConduitDelegate>",W,N,V_delegate
assets
activations
configurations
management
pathExtension
length
stringByDeletingPathExtension
setValue:forKeyPath:
T@"RMFileConduitState",&,D,N
T@"RMFileConduitConfig",&,D,N
httpConduit
bundleForClass:
objectForInfoDictionaryKey:
operatingSystem
operatingSystemVersion
operatingSystemBuildVersion
defaultSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
initWithManagementSourceObjectID:inContext:session:
_startObservers
transactionAuthor
setIgnoredTransactionAuthors:
setPersistentHistoryNotifier:
persistentHistoryNotifier
setBaseURL:
setCheckOutOnRemove:
_makeURLRequestWithManagementSource:method:endpoint:
enrollmentToken
requestWithEnrollmentToken:statusItems:
_setRequestPayload:onURLRequest:error:
_resumeEnrollmentTaskForRequest:enrollmentToken:completionHandler:
_didReceiveEnrollReferralWithOriginalRequest:responsePayload:response:error:completionHandler:
_didFinishEnrollingWithResponsePayload:response:error:completionHandler:
_resumeTaskForRequest:enrollmentToken:expectedResponseClassByStatusCode:completionHandler:
responseReferralBaseURL
createMissingReferralURLError
URLWithString:
createCouldNotParseURLErrorWithString:
referralCount
createTooManyReferralsError
setReferralBaseURL:
setReferralCount:
referralBaseURL
pathComponents
subarrayWithRange:
setURL:
responsePushTopic
setPushTopic:
responsePushEnvironment
setPushEnvironment:
responseStatusItems
conduitNeedsToSendStatusForKeyPaths:
_stopObservers
checkOutOnRemove
_didFinishUnenrollingToldRemote:completionHandler:
session
finishTasksAndInvalidate
_didFinishFetchingServerTokens:response:error:completionHandler:
responseSyncTokens
setLastReceivedCommandToken:
tokensDeclarationsToken
setLastReceivedDeclarationsToken:
tokensTimestamp
setLastReceivedServerTokensTimestamp:
setLastReceivedServerTokensFromServerTimestamp:
_fetchPartialObjectsWithCompletionHandler:
_fetchDeclarationItemsOnlyIfNeeded:completionHandler:
_fetchTokensOnlyIfNeeded:completionHandler:
messageSyncTokens
_updateWithSyncTokens:completionHandler:
_didFinishFetchingDeclarationItems:response:error:lastReceivedPushTimestamp:completionHandler:
responseDeclarations
responseActivations
_processDeclarationItemsWithContext:infos:declarationItemClass:declarationItemKeyPath:
responseConfigurations
responseAssets
responseManagement
responseDeclarationsToken
setLastProcessedDeclarationsToken:
responseIdentifier
responseServerToken
_fetchNextObjectOfClass:endpoint:completionHandler:
stringByReplacingOccurrencesOfString:withString:
_didFinishFetchingObject:objectID:class:endpoint:response:error:completionHandler:
statusCode
failedLoadingWithError:
_setBody:onURLRequest:
_didFinishSendingStatusWithResponse:error:completionHandler:
_processUnauthorizedResponse:shouldRetry:error:
objectForKey:
_incrementConduitStateError:serverRetryAfter:error:
createHTTPErrorWithStatusCode:reason:
_processErrorResponse:data:error:
base64EncodedStringWithOptions:
allHeaderFields
createUnhandledContentTypeErrorWithContentType:
createUnsupportedAuthenticationSchemeErrorWithScheme:
chosenAuthenticationScheme
setChosenAuthenticationScheme:
numberOfConsecutiveAuthErrors
createTooManyFailedAuthenticationsError
setNumberOfConsecutiveAuthErrors:
accountIdentifier
updatePropertiesForAccountIdentifier:afterFailure:
setAuthenticationCredential:
responseCode
setErrorState:
numberOfConsecutiveErrors
setNumberOfConsecutiveErrors:
setNumberOfConsecutiveFailures:
setServerRetryAfterDate:
dateWithTimeIntervalSinceNow:
setLocalRetryAfterDate:
baseURL
requestWithURL:cachePolicy:timeoutInterval:
setHTTPMethod:
userAgent
setValue:forHTTPHeaderField:
HTTPMethod
allHTTPHeaderFields
prepareURLRequest:error:
testOrganizationID
valueForHTTPHeaderField:
stringByAppendingFormat:
originalRequest
prepareTask:error:
serializeAsDataWithType:error:
setHTTPBody:
_authenticationCredential
_prepareURLRequest:withAuthenticationCredential:error:
logHTTPDetailsForEnrollmentToken:request:response:responseData:responseError:
_processResponse:data:payloadClassByStatusCode:shouldRetry:error:
dataTaskWithRequest:completionHandler:
_prepareTask:withAuthenticationCredential:error:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
changeType
changedObjectID
updatedProperties
propertiesByName
insertedObjectIDs
updatedObjectIDs
deletedObjectIDs
persistentHistoryToken
isExistingPersistentHistoryToken:fromSameStoreAsUpdatedToken:
conduitNeedsToSync:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
persistentHistoryNotifier:isChangeInteresting:stop:
persistentHistoryNotifier:hasChanges:
T@"NSString",R,N
setSession:
_persistentHistoryNotifier
_session
T@"RMPersistentHistoryNotifier",&,N,V_persistentHistoryNotifier
T@"NSURLSession",&,N,V_session
T@"<RMConduitDelegate>",W,N,V_delegate
distantPast
lastReceivedServerTokensFromServerTimestamp
lastProcessedDeclarationsToken
rangeOfString:
substringToIndex:
substringFromIndex:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
T@"RMHTTPConduitState",&,D,N
httpconduitstate
localRetryAfterDate
numberWithLongLong:
numberOfConsecutiveFailures
pushEnvironment
pushTopic
serverRetryAfterDate
T@"NSURL",C,D,N
Tq,D,N
T@"RMHTTPConduitConfig",&,D,N
httpLogging
useHTTPLogging
_logDirectoryForEnrollmentToken:
_writeRequestLogToURL:request:response:responseData:responseError:
dataUsingEncoding:
createFileAtPath:contents:attributes:
fileHandleForWritingToURL:error:
array
writeData:error:
HTTPBody
localizedStringForStatusCode:
closeFile
httpLoggingDirectoryURLCreateIfNeeded:
logHTTPDetailsForEnrollmentToken:request:response:responseURL:responseError:
_archiveObject:forKey:
_unarchiveObjectOfClass:forKey:
_unarchiveObjectOfClasses:forKey:
setDeviceStatusByKeyPath:
setCommandAndDeclarationStatusPersistentHistoryToken:
setPushTokenByEnvironmentName:
persistentStores
archiveObject:forKey:intoMetadataForPersistentStore:
unarchiveObjectOfClass:forKey:fromMetadataForPersistentStore:
unarchiveObjectOfClasses:forKey:fromMetadataForPersistentStore:
internalStatusPublisher:didChangeDeviceStatusByKeyPath:
internalStatusPublisher:didChangeCommandAndDeclarationsPersistentHistoryToken:
pushController:didChangePushTokenByEnvironmentName:
T@"RMInternalStateArchiver",R,N
commandAndDeclarationStatusPersistentHistoryToken
deviceStatusByKeyPath
pushTokenByEnvironmentName
T@"NSPersistentHistoryToken",&,N
T@"NSDictionary",&,N
T@"RMPersistentActiveIdentifiers",&,N
internalStatusPublisher
initWithPersistentHistoryToken:context:
initWithInternalDeviceStatusByKeyPath:subscribedStatusKeyPathUpdater:persistentHistoryNotifier:context:
_notifyInternalDeviceStatusChangesIfNeeded
setSubscribedStatusKeyPathUpdater:
subscribedStatusKeyPathUpdater
notifyStatusDidChangeForKeyPaths:
_queryForStatusWithKeyPaths:onBehalfOfManagementSource:
restrictedKeyPaths
createDisallowedStatusValueErrorWithKeyPath:
notifyStatusDidChangeForKeyPathsByManagementSourceObjectID:
T@"RMInternalStatusPublisher",R,N
_stop
_internalDeviceStatusByKeyPathNotificationLock
_internalDeviceStatusByKeyPathLock
_internalDeviceStatusByKeyPath
_subscribedStatusKeyPathUpdater
T@"RMSubscribedStatusKeyPathUpdater",&,N,V_subscribedStatusKeyPathUpdater
T@"<RMInternalStatusPublisherDelegate>",W,N,V_delegate
modelFamily
modelIdentifier
modelMarketingName
operatingSystemMarketingName
serialNumber
buildRequiredOnlyWithActivations:configurations:assets:management:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
invalidPayloadForDeclaration:
buildWithIdentifier:serverToken:active:valid:reasons:
missingStateForDeclaration:
configurationIsNotReferencedByAnActivation:
assetIsNotReferencedByConfiguration:
updatedPropertiesByObjectID
existingObjectWithID:error:
localeWithLocaleIdentifier:
timeZoneForSecondsFromGMT:
setTimeZone:
dateFormatter
stringFromDate:
serializeValue:
T@"NSDateFormatter",R,N
initWithType:identifier:accountIdentifier:accountDescription:organizationDescription:enrollmentURL:enrollmentToken:isEnrolled:
enrollmentURL
T@"RMManagementPayloadState",&,D,N
T@"RMManagementPayload",&,D,N
managementPropertiesArchiver
_getManagementPropertiesFileURLWithStoreIdentifier:
managementSettings
dataVaultDirectoryURLCreateIfNeeded:
setSettingsURL:
_readCachedSettings
cachedSettings
removeAllObjects
_writeCachedSettings
settingsURL
inputStreamWithURL:
open
propertyListWithStream:options:format:error:
close
setCachedSettings:
outputStreamWithURL:append:
writePropertyList:toStream:format:options:error:
reset
T@"RMManagementSettings",R,N
_settingsLock
_settingsURL
_cachedSettings
T@"NSURL",&,N,V_settingsURL
T@"NSMutableDictionary",&,N,V_cachedSettings
awakeFromInsert
personaIdentifier
storeDescription
statusSubscriptions
T@"RMAuthenticationCredential",&,D,N
capabilitiesVersionHash
T@"RMConduitConfig",&,D,N
T@"NSString",R,C,D,N
mdmConduit
_statusItemsToSendOnceAfterEnrollment
_didFinishFetchingServerTokens:error:completionHandler:
_executeRequestForEndpoint:requestData:expectedResponseClass:completionHandler:
qaMode
_didFinishFetchingDeclarationItems:error:completionHandler:
_writeQAStatusData:completionHandler:
_didFinishSendingStatusWithError:completionHandler:
_processErrorResponse:error:
createMDMRequestInvalid:
_processResponse:payloadClass:error:
executeRequestForEndpoint:channelType:requestData:completionHandler:
_requestDataForPayload:error:
T@"RMMDMConduitState",&,D,N
mdmconduitstate
T@"RMMDMConduitConfig",&,D,N
mdmv1Liaison
boolRestrictionForFeature:
_didEnroll:
MCSetBoolRestriction:value:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
sharedConfiguration
refreshDetailsFromDisk
refreshState
enrolledInMDMv1
TB,R,N,GisEnrolledInMDMv1
enrollmentInMDMv1Restricted
TB,R,N,GisEnrollmentInMDMv1Restricted
migrationEngine
_readProcessedActionsReturningError:
setWithCapacity:
_actions
_writeProcessedActions:error:
_readMigrationStateReturningError:
migrationStatusFileURLCreateIfNeeded:
propertyListWithData:options:format:error:
writeToURL:error:
migrationStatusPath
_migrateStatusDirectory:error:
_migrateURL:
lastObject
removeLastObject
_transformName:
fileURLWithPathComponents:
_moveDirectoryFromURL:toURL:error:
_configurationTypePrefixes
moveItemAtURL:toURL:error:
migrationSystemContainer
oldBaseDirectoryURLInSystemDomain
_okToMigrateFromURL:toURL:
_migrateFromURL:toURL:error:
_directoryExistsAtURL:
_moveDirectory:fromURL:toURL:error:
executeReturningError:
payloadReturnStatus
payloadEcho
unknownPayloadKeys
commandIdentifier
buildWithCode:description:details:
statusDetails
dictKeys
setDictionary:
setStatusDetails:
localizedDescription
localizedFailureReason
initWithIdentifier:type:scope:name:description:enrollmentURL:accountIdentifier:defaultToInteractive:dataSeparated:personaIdentifier:
periodicSync
sharedInstance
initWithIdentifier:
setPreregistered:
_setAdditionalXPCActivityProperties:
repeats
interval
forceSyncWithCompletion:
scheduleWithBlock:
periodicSyncActivity
setPeriodicSyncActivity:
_periodicSyncActivity
T@"NSBackgroundActivityScheduler",&,N,V_periodicSyncActivity
initWithDeclarationPayload:
initWithUniqueIdentifiersByConfigurationType:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_uniqueIdentifiersByConfigurationType
T@"NSDictionary",&,N,V_uniqueIdentifiersByConfigurationType
persistentController
persistentStoreURLCreateIfNeeded:
_createLoadedPersistentContainerWithURL:
persistentStoreDescriptionWithURL:
setType:
setOption:forKey:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
managedObjectModel
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
managedObjectModelURL
initWithContentsOfURL:
setMetadata:forPersistentStore:
metadataOnPersistentStore:updateHandler:
currentPersistentHistoryTokenForContainer:
T@"NSURL",R,N
T@"NSManagedObjectModel",R,N
T@"RMPersistentController",R,N
hasStarted
dealloc
setMaxConcurrentOperationCount:
setQualityOfService:
setHasStarted:
shouldUsePersistentHistoryToken
currentPersistentHistoryTokenFromStores:
setPersistentHistoryToken:
_scheduleQueryForTransactions
object
_delayedQuery
setQueryNeeded:
sharedQueryQueue
queryNeeded
_queryForTransactionsWithCompletion:
addOperationWithBlock:
ignoredTransactionAuthors
interestingEntities
author
changes
updateWithChange:
compareToken:error:
setInterestingEntities:
_queryCondition
_shouldUsePersistentHistoryToken
_hasStarted
_queryNeeded
_ignoredTransactionAuthors
_interestingEntities
_persistentHistoryToken
T@"NSPersistentHistoryToken",&,V_persistentHistoryToken
TB,R,N,V_shouldUsePersistentHistoryToken
TB,N,V_hasStarted
TB,N,V_queryNeeded
T@"<RMPersistentHistoryNotifierDelegate>",W,N,V_delegate
T@"NSSet",C,V_ignoredTransactionAuthors
T@"NSSet",C,V_interestingEntities
filteredArrayUsingPredicate:
fetchHistoryAfterToken:
executeRequest:error:
_updatePropertiesWithChange:
tombstone
tombstoneByObjectID
_insertedObjectIDs
_updatedObjectIDs
_updatedPropertiesByObjectID
_tombstoneByObjectID
T@"NSPersistentHistoryToken",C,N,V_persistentHistoryToken
T@"NSDictionary",R,C,N
_buildPredicateFromFormatString:error:
regularExpressionWithPattern:options:error:
createUnableToParsePredicateErrorWithFormat:reason:
matchesInString:options:range:
_buildPredicateWithVisitorFromFormatString:
rangeAtIndex:
substringWithRange:
stringByReplacingMatchesInString:options:range:withTemplate:
predicateWithFormat:argumentArray:
reason
initWithFormat:
acceptVisitor:flags:
decodeObjectOfClass:forKey:
containsValueForKey:
allowEvaluation
version
isEqualToNumber:
_evaluateVersion1WithStatus:error:
_evaluateVersion2WithStatus:properties:error:
createUnableToEvaluatePredicateErrorWithFormat:reason:
evaluateWithObject:
initWithFormat:error:
_statusKeyPaths
_properties
_predicate
_version
T@"NSPredicate",R,N,V_predicate
T@"NSNumber",R,N,V_version
T@"NSArray",R,C,V_statusKeyPaths
T@"NSArray",R,C,V_properties
expressionType
operatorType
symbol
createUnableToParsePredicateErrorWithCustomOperator:predicateFormat:
exceptionWithName:reason:userInfo:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
_format
predicateStatusUpdater
_updatePredicateStatusWithFetchPredicate:
T@"RMPredicateStatusUpdater",R,N
push
initWithPushTokenByEnvironmentName:subscribedStatusKeyPathUpdater:context:
shutdown
_updateConnections
_notifyPushTokenDidChangeIfNeeded
serialQueue
_connectionWithEnvironmentName:queue:
localizedCompare:
setEnabledTopics:ignoredTopics:
initWithEnvironmentName:namedDelegatePort:queue:
_currentPushTokenByEnvironmentName
publicToken
_pushEnvironmentNameForManagementChannel:error:
_cachedPushTokenByEnvironment
_environmentNameForConnection:
topic
messageEnrollmentToken
_updatePushReceivedWithTopic:enrollmentToken:syncTokens:forEnvironmentName:
date
setLastReceivedPushTimestamp:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
T@"RMPushController",R,N
setSerialQueue:
_connectionByEnvironmentName
_pushTokenByEnvironmentNameLock
_pushTokenByEnvironmentName
_serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"<RMPushControllerDelegate>",W,N,V_delegate
managementSources
orphanedEntities
internalStateArchiveWithContext:
metadataForPersistentStore:
reportWithContext:allInformation:
managedObjectClassName
securityUtilities
_serializeIdentityWithPrivateKey:certificateChain:privateKeyIsExportable:error:
_serializePrivateKey:privateKeyIsExportable:
serializeCertificateChain:
_deserializeIdentity:privateKeyIsExportable:completionHandler:
_deserializePrivateKey:privateKeyIsExportable:
deserializeCertificateChain:
initWithBase64EncodedString:options:
data
bytes
timeIntervalSinceReferenceDate
_statusDidChange:
_notifyDelegateOfUnacknowledgedStatusSubscriptionsIfNeeded
_queryForStatusSubscriptionsReturningOnlyUnacknowledgedOnes:
_queryForStatusWithLastReceivedDateByKeyPath:lastAcknowledgedDateByKeyPath:
setLastAcknowledgedDate:
statusQuerier
queryForUnacknowledgedStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:
initWithQueryResult:lastReceivedDateByKeyPath:
lastReceivedDateByKeyPath
lastReceivedDate
isEqualToDate:
lastAcknowledgedDate
queryForStatusSubscriptionsWithKeyPaths:
setManagementSourceObjectID:
setStatusQuerier:
_statusQuerier
T@"NSManagedObjectID",&,N,V_managementSourceObjectID
T@"RMStatusQuerier",&,N,V_statusQuerier
T@"<RMStatusEngineDelegate>",W,N,V_delegate
_subscribeToStatusKeyPaths:sourceType:
sourceType
items
setSourceIdentifier:
setSourceType:
setSubscription:
setKeyPath:
addStatusSubscriptionItemsObject:
statusPublisherServicePlugin
initWithURL:identifier:statusKeysByNotification:
setStatusKeysByNotification:
_statusKeysByNotification
T@"NSDictionary",C,N,V_statusKeysByNotification
initWithStatusPublishers:
arrayWithObject:
statusPublishers
_queryForFilteredStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:
_findStatusPublishersForKeyPaths:
_statusPublishers
T@"NSArray",R,N,V_statusPublishers
initWithStatusKeyPaths:statusByKeyPath:errorByKeyPath:
_statusByKeyPath
_errorByKeyPath
T@"NSSet",R,C,N,V_statusKeyPaths
T@"NSDictionary",R,C,N,V_statusByKeyPath
T@"NSDictionary",R,C,N,V_errorByKeyPath
initWithStatusKeyPaths:lastReceivedDateByKeyPath:statusByKeyPath:errorByKeyPath:
_lastReceivedDateByKeyPath
T@"NSDictionary",R,C,N,V_lastReceivedDateByKeyPath
requestWithStatusItems:errors:
T@"RMProtocolStatusReport",R,N
buildWithStatusItem:reasons:
statusReporter
initWithStatusEngine:onlyIfNeeded:
onlyIfNeeded
setStatusQueryResult:
statusQueryResult
hasStatusToReport
newStatusReporterWithStatusEngine:onlyIfNeeded:
statusReportReturningError:
acknowledgeStatusSent
setOnlyIfNeeded:
_onlyIfNeeded
_statusQueryResult
T@"RMStatusEngine",C,N,V_statusEngine
TB,N,V_onlyIfNeeded
T@"RMStatusSubscriptionQueryResult",&,N,V_statusQueryResult
subscribedStatusKeyPaths
statusSubscriptionItems
removeStatusSubscriptionItemsObject:
prepareForDeletion
keyPath
predicate
predicateFormat
T@"NSString",&,D,N
T@"NSPredicate",&,D,N
subscription
T@"RMStatusSubscription",&,D,N
statusSubscriptionsSubscriber
_updateStatusSubscriptionsForManagementSource:
_getStatusSubscriptionsFromManagementSource:
_getActiveStatusSubscriptionConfigurationsFromManagementSource:
synchronizeOldKeys:newKeys:returningUnchangedKeys:returningNewAddKeys:returningNewChangeKeys:returningOldReplaceKeys:returningOldRemoveKeys:
setByAddingObjectsFromSet:
reasonWithCode:description:underlyingError:
_makeStatusSubscriptionWithManagementSource:declaration:context:
sourceIdentifier
sourceServerToken
newDeclarationKeyWithSubscriberIdentifier:storeIdentifier:declarationIdentifier:declarationServerToken:
setSourceServerToken:
payloadStatusItems
payloadName
setProperties:
storeAssetResolver
queryParameters
_dataURLForAsset:reference:queryParameters:
_resolveMDMAsset:unresolvedAsset:reference:url:completionHandler:
_resolveAsset:unresolvedAsset:reference:url:completionHandler:
resolveAs
_resolveAssetAsData:unresolvedAsset:reference:url:completionHandler:
_resolveAssetAsFile:unresolvedAsset:reference:url:completionHandler:
_processResponseWithAsset:reference:unresolvedAsset:url:response:error:completionHandler:
_dataTaskWithAsset:unresolvedAsset:reference:url:completionHandler:
_downloadTaskWithAsset:unresolvedAsset:reference:url:completionHandler:
payloadContentType
_createRequestWithURL:acceptType:
downloadTaskWithRequest:completionHandler:
payloadDataURL
componentsWithString:
queryItemWithName:value:
setQueryItems:
_validateAsset:reference:url:statusCode:headers:data:error:
downloadURL
createAssetCannotProcessFileErrorWithUnderlyingError:
initWithFile:
initWithData:
payloadSize
unsignedIntegerValue
createAssetSizeCannotBeVerifiedError
createAssetContentTypeCannotBeVerifiedError
payloadHashSHA256
createAssetHashCannotBeVerifiedError
payloadReference
getBytes:range:
stringWithCapacity:
appendFormat:
storeClient
initWithActivationEngine:statusEngine:storeIdentifier:
_sendStatusOnlyIfNeeded:
_sendStatusData:
initWithData:encoding:
storeIdentifier
_storeIdentifier
T@"NSString",R,N,V_storeIdentifier
storeController
initWithPersistentContainer:context:
_allManagementSourcesReturningError:
_startClientForSourceIdentifier:objectID:
_makeClientWithManagementSourceObjectID:storeIdentifier:persistentContainer:
clientByIdentifier
initWithManagementSourceObjectID:storeIdentifier:statusQuerier:persistentContainer:
remove
_observerStoreWithIdentifier:error:
storeFromManagementSource:
_declarationsForStoreIdentifier:declarationTypes:identifier:error:
createDeclarationNotFoundErrorWithIdentifier:
declarationManifestWithDeclarations:
createNotImplementedErrorForFeature:
_managementSourceWithIdentifier:error:
fetchDataAtURL:isRMDM:completionHandler:
postNotificationName:object:userInfo:options:
createTooManyDeviceManagementSourcesError
setBootstrapURI:
setEnrollmentType:
_addOptionsToManagementSource:options:
setCapabilitiesVersionHash:
create
managementChannelsChanged
_stopClientForIdentifier:
_providerStoreWithIdentifier:error:
_payloadsForDeclarationIdentifier:managementSource:error:
_newPayloadWithDeclaration:managementSource:error:
_clientForIdentifier:
createManagementSourceNotFoundErrorWithIdentifier:
_subscriberStoreWithIdentifier:error:
_activeDeclarationsForConfigurationTypes:storeIdentifier:error:
createAssetInvalidError:
resolveAsset:unresolvedAsset:isRMDM:completionHandler:
fetchRequestWithIdentifier:
setName:
setStoreDescription:
setAccountIdentifier:
setPersonaIdentifier:
_declarationsOfClass:managementSource:declarationTypes:identifier:error:
allValues
assetByIdentifier
content
_payloadsForPayloadClass:identifier:managementSource:error:
T@"RMStoreController",R,N
observerStoreWithIdentifier:completionHandler:
observerStoresWithCompletionHandler:
declarationWithIdentifier:storeIdentifier:completionHandler:
declarationsForStoreIdentifier:completionHandler:
declarationsWithTypes:storeIdentifier:completionHandler:
declarationManifestForStoreIdentifier:completionHandler:
setShouldInstallConfiguration:shouldInstall:storeIdentifier:completionHandler:
fetchDataAtURL:storeIdentifier:completionHandler:
createStoreWithType:defaultToInteractive:dataSeparated:options:completionHandler:
removeStoreWithIdentifier:completionHandler:
providerStoreWithIdentifier:completionHandler:
providerStoresWithCompletionHandler:
saveDeclaration:storeIdentifier:completionHandler:
deleteDeclarationWithIdentifier:storeIdentifier:completionHandler:
applyChangesForStoreIdentifier:completionHandler:
subscriberStoreWithIdentifier:completionHandler:
subscriberStoresWithCompletionHandler:
subscribedStoreDeclarationsWithTypes:completionHandler:
subscribedDeclarationsWithTypes:storeIdentifier:completionHandler:
resolveAsset:storeIdentifier:completionHandler:
dispatchQueue
setDispatchQueue:
setClientByIdentifier:
_dispatchQueue
_clientByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSMutableDictionary",&,N,V_clientByIdentifier
scheme
fetchRequestWithDeviceChannel
setResultType:
longLongValue
storeDataFetcher
ephemeralSessionConfiguration
initWithURLSessionConfiguration:
initWithURLSession:
createAssetInvalidURLError:
_fetchMDMDataAtURL:completionHandler:
_fetchDataAtURL:completionHandler:
_processResponseWithURL:response:error:completionHandler:
fetchDataAtURL:completionHandler:
_dataTaskWithURL:completionHandler:
requestWithURL:
_userAgent
setAllHTTPHeaderFields:
URLSession
_dictionaryForResponse:downloadedData:downloadedURL:
createAssetCannotBeDownloadedErrorWithUnderlyingError:
_validateResponseForURL:statusCode:headers:data:error:
completionQueue
setCompletionQueue:
setURLSession:
_completionQueue
_URLSession
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
T@"NSURLSession",&,N,V_URLSession
permissiveURLSchemes
storeTypeForManagementSource:
isDataSeparatedStoreForManagementSource:
StoreXPCListenerDelegate
_doesConnection:haveEntitlements:
_applicationIdentifierFromConnection:
hasObserverEntitlement
hasProviderEntitlement
hasSubscriberEntitlement
writeStatusWithStoreIdentifier:declarationType:declarationIdentifier:declarationServerToken:sourceIdentifier:validity:reasons:completionHandler:
removeStatusWithStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:completionHandler:
publishStatusWithStoreIdentifier:status:completionHandler:
_hasObserverEntitlement
_hasProviderEntitlement
_hasSubscriberEntitlement
TB,R,N,V_hasObserverEntitlement
TB,R,N,V_hasProviderEntitlement
TB,R,N,V_hasSubscriberEntitlement
numberWithInt:
fetchRequestWithKeyPaths:
T@"NSDate",&,D,N
statusNotificationCenter
_updateSubscribedStatusKeyPathsWithFetchPredicate:
setMergePolicy:
setLastReceivedDate:
postNotificationName:object:userInfo:
T@"RMSubscribedStatusKeyPathUpdater",R,N
notifyStatusDidChangeForKeyPath:
setPersistentContainer:
T@"NSPersistentContainer",&,N,V_persistentContainer
orPredicateWithSubpredicates:
stringByAppendingString:
andPredicateWithSubpredicates:
XPCListenerDelegate
allowedToRun
newInterface
setExportedInterface:
initWithXPCConnection:persistentContainer:
setExportedObject:
listener:shouldAcceptNewConnection:
_allowedToRun
TB,R,N,V_allowedToRun
_doesConnection:haveEntitlement:
valueForEntitlement:
_isConnection:fromApplicationIdentifier:
hasEnrollmentEntitlement
createConnectionNotEntitledWithName:
hasCommandLineEntitlement
_managementChannelWithIdentifier:error:
hasConfigurationSubscriberEntitlement
_activeConfigurationsByTypeForTypes:persistentContainer:error:
sendStatusForKeyPaths:toManagementSourceWithIdentifier:completionHandler:
queryForStatusAndErrorsWithKeyPaths:fromManagementSourceWithIdentifier:completionHandler:
fetchConfigurationsWithTypes:completionHandler:
hasAccountChangesEntitlement
_hasCommandLineEntitlement
_hasAccountChangesEntitlement
_hasConfigurationSubscriberEntitlement
_hasEnrollmentEntitlement
TB,R,N,V_hasCommandLineEntitlement
TB,R,N,V_hasAccountChangesEntitlement
TB,R,N,V_hasConfigurationSubscriberEntitlement
TB,R,N,V_hasEnrollmentEntitlement
@16@0:8
v36@0:8@16@24B32
@"RMDebounceTimer"
v24@0:8@16
B32@0:8@"RMModelPayloadBase"16^@24
v24@0:8@"NSError"16
@"RMManagementSource"16@0:8
v24@0:8@"RMManagementSource"16
@"NSData"16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"16@0:8
B32@0:8@"NSMutableURLRequest"16^@24
B32@0:8@"NSURLSessionTask"16^@24
@40@0:8q16q24Q32
B24@0:8q16
@24@0:8@16
v16@0:8
@"RMModelStatusManagementClientCapabilities"
@"NSString"
v24@0:8@"<RMConduit>"16
v24@0:8@"RMStatusEngine"16
v20@0:8s16
@"<RMClientDelegate>"
@"<RMConduit>"
@"RMActivationEngine"
@"RMStatusEngine"
@"NSOperationQueue"
v56@0:8q16@24@32@40@?48
v64@0:8@16q24@32@40@48@?56
@"RMDeviceLockStateListener"
@"NSMutableSet"
v32@0:8@16@?24
v32@0:8@"RMManagementChannel"16@?<v@?@"NSString"s@"NSDictionary"@"NSArray"@"NSArray"@"NSError">24
@32@0:8@16@24
v24@0:8@?16
B40@0:8@16@24^@32
B68@0:8@16s24@28@36@44@52^@60
v20@0:8B16
@"NSManagedObjectID"
@"NSManagedObjectContext"
B24@0:8^@16
v40@0:8@16@24@32
v32@0:8@16@24
v24@0:8@"NSSet"16
@"NSSet"16@0:8
@40@0:8Q16@24@32
@"NSSet"
@"NSObject<OS_xpc_event_publisher>"
v24@0:8Q16
@"NSObject"
@"RMPersistentActiveIdentifiers"
@"NSMutableArray"
@"NSMutableDictionary"
@"<RMConfigurationPublisherDelegate>"
@32@0:8@16^@24
@40@0:8@16@24^@32
@"NSPersistentContainer"
B68@0:8@16@24@32@40B48@52^@60
B48@0:8@16@24@32^@40
B56@0:8@16@24@32@40^@48
@44@0:8@16@24@32B40
@48@0:8@16@24@32@40
v32@0:8q16@?24
v48@0:8@16@24q32@?40
v32@0:8q16@?<v@?@"NSError">24
v48@0:8@"NSArray"16@"NSString"24q32@?<v@?@"NSError">40
@40@0:8@16@24@32
@"NSURL"
s16@0:8
@24@0:8^{_NSZone=}16
v32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
v36@0:8@16B24@?28
v44@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24@32B40
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@"NSArray"
@"<RMDeviceLockStateListenerDelegate>"
v24@0:8@"NSString"16
@48@0:8@16@24@32^@40
@"NSDictionary"40@0:8@"NSSet"16@"RMManagementChannel"24^@32
@"NSDictionary"48@0:8@"NSSet"16@"NSDictionary"24@"RMManagementChannel"32^@40
v48@0:8@16@24@32@?40
@"RMSharedLock"
@"NSDictionary"
@32@0:8@"NSManagedObjectID"16@"NSManagedObjectContext"24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?>16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"<RMConduitDelegate>"16@0:8
v24@0:8@"<RMConduitDelegate>"16
B32@0:8@16^@24
v28@0:8B16@?20
B36@0:8@16B24^@28
@"<RMFileConduitDelegate>"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
B40@0:8@16@24^B32
B40@0:8@"RMPersistentHistoryNotifier"16@"NSPersistentHistoryChange"24^B32
v32@0:8@"RMPersistentHistoryNotifier"16@"RMPersistentHistoryNotifierChanges"24
v48@0:8@16@24#32@40
v40@0:8#16@24@?32
v72@0:8@16@24#32@40@48@56@?64
@56@0:8@16@24@32^B40^@48
B40@0:8@16^B24^@32
B36@0:8s16@20^@28
@"<RMConduitDelegate>"
@"RMPersistentHistoryNotifier"
@"NSURLSession"
v56@0:8@16@24@32@40@48
v32@0:8@"RMConfigurationPublisher"16@"RMPersistentActiveIdentifiers"24
v32@0:8@"RMInternalStatusPublisher"16@"NSDictionary"24
v32@0:8@"RMInternalStatusPublisher"16@"NSPersistentHistoryToken"24
v32@0:8@"RMPushController"16@"NSDictionary"24
@32@0:8#16@24
@"RMSubscribedStatusKeyPathUpdater"
@"<RMInternalStatusPublisherDelegate>"
@28@0:8@16s24
@40@0:8@16#24^@32
v48@0:8@16@24#32@?40
B32@0:8@16@24
@"NSBackgroundActivityScheduler"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8#16@24@32
@"NSConditionLock"
@"<RMPersistentHistoryNotifierDelegate>"
@"NSPersistentHistoryToken"
q40@0:8@16@24^@32
q32@0:8@16^@24
@"NSPredicate"
@"NSNumber"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<RMPushControllerDelegate>"
@28@0:8@16B24
@40@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24^@32
@44@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24B32^@36
@28@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16B24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}28@0:8@16B24
B32@0:8^{__SecCertificate=}16d24
@20@0:8B16
@"<RMStatusEngineDelegate>"
@"RMStatusQuerier"
v28@0:8@16s24
v32@0:8@"NSSet"16@"NSString"24
@"RMStatusSubscriptionQueryResult"
v44@0:8@16@24B32@?36
@56@0:8@16@24@32@40@?48
v72@0:8@16@24@32@40@48@56@?64
B72@0:8@16@24@32@40@48@56^@64
v44@0:8@16B24@28@?36
v48@0:8q16B24B28@32@?40
@24@0:8^@16
@56@0:8#16@24@32@40^@48
@48@0:8#16@24@32^@40
@"NSObject<OS_dispatch_queue>"
@32@0:8@16@?24
q24@0:8@16
q16@0:8
v76@0:8@16@24@32@40@48B56@60@?68
v32@0:8@"NSString"16@?<v@?@"RMObserverStore"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"RMModelDeclarationBase"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"RMDeclarationManifest"@"NSError">24
v44@0:8@"RMModelDeclarationBase"16B24@"NSString"28@?<v@?@"NSError">36
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v48@0:8q16B24B28@"NSDictionary"32@?<v@?@"RMProviderStore"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"RMProviderStore"@"NSError">24
v40@0:8@"RMModelDeclarationBase"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"RMSubscriberStore"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSDictionary"@"NSError">24
v40@0:8@"RMStoreUnresolvedAsset"16@"NSString"24@?<v@?@"RMStoreResolvedAsset"@"NSError">32
v76@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48B56@"NSArray"60@?<v@?@"NSError">68
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSError">32
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v56@0:8q16@"NSURL"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSError">48
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"RMManagementChannel"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
Starting: remotemanagementd
Starting remotemanagementd... uid %d euid %d
Crippled daemon, this feature is not available.
Temp %@
CoreData cannot be setup - daemon exiting.
Started remotemanagementd
Start remotemanagementd
Running as daemon
Migration failed - daemon exiting: %{public}@
registerHandlerForXPCNotifications
Syncing activation engine due to predicate change
Failed to sync activation engine due to predicate change: %{public}@
Sync'd activation engine due to predicate change
ActivationEngine: syncing
Syncing activation engine...
Updating activations and configurations...
Updated activations and configurations.
Failed to update activations and configurations: %{public}@
No changes to activations or configurations.
Synced activation engine...
Deleting activations, configurations, and assets that are no longer needed...
Failed to delete configurations.
Failed to delete activations.
Failed to delete assets.
Deleting activations (no status): %{public}@
Deleting configurations (and status): %{public}@
Deleting assets (and status): %{public}@
Unable to retrieve %@ ear marked for deletion: %@
Attaching configuration references...
Failed to attach configuration references.
No configuration references to attach.
Reattaching configuration reference for %@ to from %@ to %@...
Attaching configuration reference for %@ to %@...
Attached configuration references.
Attaching asset references...
Failed to attach asset references.
No asset references to attach.
Reattaching asset reference for %@ to from %@ to %@...
Attaching asset reference for %@ to %@...
Attached asset references.
Unable to deserialize management property declaration payload: %{public}@
Unable to persist management properties: %{public}@
Activation predicate status key values have changed
Updated predicate status keys.
Failed to update predicate status keys: %{public}@
Updating predicate status key values: %{public}@
Could not query for configuration references: %@
Could not query for asset references: %@
Unable to get eligible %@ by identifiers: %@
Unable to query eligible management properties: %{public}@
Unable to retrieve eligible %{public}@ to be evaluated, could not query for activations: %{public}@
Configuration (%@:%@) is missing assets: %@
Activation (%@:%@) is missing configurations: %@
%@ state changed to %@
Could not deserialize data for %{public}@: %{public}@
Could not serialize data for %{public}@: %{public}@
Signing request body with device identity
Device identity failure generating signature: %{public}@
Device identity failure generating certificate list: %{public}@
Device identity failure: %{public}@
Building signed request with device identity
Test token changed for %{public}@
Access token changed for RM account %{public}@
Unable to find idms account for RM account: %{public}@
Unable to find short lived token for idms account: %{public}@
Short lived token changed for RM account %{public}@
Unable to find iCloud account for RM account: %{public}@
Unable to find long lived token for iCloud account: %{public}@
Long lived token changed for RM account %{public}@
Client: Starting
Starting client...
Processing client error state on startup: %u
Started.
Client: Enrolling
Enrolling...
Enrolled.
Client: Re-enrolling
re-enrolling...
Client: Unenrolling
Unenrolling...
Unenrolled.
Client: Syncing
Failed to send status data: %{public}@
Sync %{public}@ finished
Successfully sent status data
Failed to sync with conduit: %{public}@
Successfully synced with conduit
Activation engine sync failed: %{public}@
Successfully synced with activation engine
Cannot sync due to client state not ready
Cannot sync due to client error state
Failed to sync conduit: %{public}@
Successfully sync'd conduit
Client: Updating via push message
Updating via push message...
Updating finished
Client: Updating via sync tokens
Updating via sync tokens...
Client: Sending arbitrary status
Cannot send status due to client state not ready
Cannot send status due to client error state
Sending arbitrary status...
Failed to send arbitrary status: %{public}@
Successfully sent arbitrary status
Client: querying for status subscriptions
Querying for status subscriptions with identifiers %{public}@...
Found status from status subscriptions with identifiers %{public}@
Client: sending status for subscriptions
Querying for status subscriptions with identifiers %{public}@ then sending status...
There was no status report to send.
Sending status report...
Could not serialize status: %{public}@
Handle client error state: %u
Conduit needs sync...
Conduit needs to send status items: %{public}@
Status engine needs sync...
Ignoring needs syncing.
Scheduling sync if needed...
Sync if needed already scheduled...
Syncing if needed...
Finished sync if needed.
Capabilities version hash changed: %{public}@
Unable to save update capabilities version hash: %{public}@
Capabilities version hash not changed
ClientController: starting
Starting client controller...
Found and deleting orphaned management source: %{public}@
Could not remove orphaned management sources: %{public}@
Started client controller.
ClientController: validating management sources
Starting to validate management sources...
Validating sources...
Could not find management sources: %{public}@
Invalid management source: %{public}@ for account: %{public}@
Removing invalid management channel %{public}@
Failed to unenroll with %{public}@: %{public}@
Waiting for invalid enrollments to unenroll...
Not registering for notification: %{public}@
ClientController: checking cloud config
Starting to check cloud config...
Checking cloud config...
Checked cloud config.
Forcing mandatory enrollment of device channel: %{public}@
Mandatory enrollment of device channel already established
Mandatory enrollment of device channel already established, but URLs are mismatched: %{public}@ vs %{public}@
Executing queued unenroll for client identifier %{public}@
Forced unenroll for client identifier %{public}@ failed: %{public}@
Forced unenroll for client identifier %{public}@
Mandatory device channel enrollment required: %{public}@
Unable to enroll device channel after server initiated unenroll: %{public}@
Mandatory device channel enrollment complete
No mandatory device channel enrollment required.
Queued unenroll for client %{public}@
ClientController: checking MDMv1 management sources
Starting to check MDMv1 management sources with unenroll %{public}@...
Syncing MDMv1 sources...
Invalid MDMv1 management source: %{public}@
Valid MDMv1 management source: %{public}@
Removing %lu MDMv1 management sources
ClientController: enrolling management source
Enrolling with device channel at %{public}@...
Failed to enroll device channel at %{public}@: feature disabled
Failed to enroll device channel at %{public}@: Already enrolled in MDMv1
Failed to enroll device channel at %{public}@: Unsupported scheme
Failed to enroll device channel at %{public}@: Unsupported feature
A device channel management source for %{public}@ already exists
Cannot enroll %{public}@ because there is an existing device based management source.
Failed to enroll device channel at %{public}@: %{public}@
A user channel management source for account %{public}@ already exists
Failed to enroll user channel: account missing %{public}@
ClientController: enrolling management source DDM
Enrolling DDM with enrollment type %ld, uri %{public}@
Failed to enroll DDM device channel with uri %{public}@: feature disabled
Failed to enroll DDM: not enrolled in MDMv1
Failed to enroll DDM at %{public}@: Incorrect scheme
A management source for %{public}@ already exists
ClientController: reenrolling
Reenrolling %{public}@...
Could not reenroll; could not find client for identifier: %{public}@
Error reenrolling: %{public}@ Will unenroll
Enrolling with user channel at %{public}@...
Failed to enroll user channel at %{public}@: Already enrolled in MDMv1
Failed to enroll user channel at %{public}@: Unsupported scheme
Failed to enroll user channel at %{public}@: Unsupported feature
Failed to enroll user channel at %{public}@: %{public}@
Failed to enroll user channel: invalid or missing enrollment URL for account: %{public}@
Failed to enroll user channel: unknown account scheme %{public}@ for account: %{public}@
Failed to create credential: unknown account scheme %{public}@ for account: %{public}@
Unable to save while removing %{public}@: %{public}@
Saving account...
Accounts finished saving.
Could not save management sources after enrollment: %{public}@
ClientController: unenrolling
Unenrolling %{public}@...
Could not unenroll; could not find client for identifier: %{public}@
Could not fetch unenrolled management source for %{public}@: %{public}@
Management source for %{public}@ disappeared before we could delete it.
Could not count enrolled management sources: %{public}@
Could not fetch management sources: %{public}@
ClientController: syncing
Syncing %{public}@...
Could not sync, could not find client for identifier: %{public}@
Could not sync identifier %{public}@: %{public}@
Synced identifier: %{public}@
Accounts synchronized.
ClientController: updating via push message
Updating via push message %{public}@...
Could not update, could not find client for identifier: %{public}@
ClientController: updating via sync tokens
Updating via sync tokens %{public}@...
ClientController: sending arbitrary status
Sending arbitrary status to %{public}@...
Could not send arbitrary status, could not find client for identifier: %{public}@
ClientController: query for status subscriptions
Querying for status subscriptions with identifiers %{public}@ from %{public}@...
Could not query for status subscriptions with identifiers %{public}@, could not find client for identifier: %{public}@
ClientController: sending specific status
Querying for status subscriptions with identifiers %{public}@ then sending to %{public}@...
Queuing re-enroll for client %{public}@
Ignoring re-enroll for client identifier %{public}@ because it is already being processed
Executing queued re-enroll for client identifier %{public}@
reenrollWithIdentifier %{public}@  error %{public}@
Queued re-enroll for client %{public}@
Queuing unenroll for client %{public}@
Ignoring unenroll for client identifier %{public}@ because it is already being processed
Unable to fetch device channel management source: %{public}@
Unable to fetch management source objects with uri %{public}@ and channel %d: %{public}@
CloudConfig is not available
CloudConfig protocol version is not for us: %{public}@
CloudConfig server URL missing
CloudConfig server URL cannot be parsed: %{public}@
CloudConfig has an RM server configured: %{public}@
Using OverrideCloudConfig
Cannot update CloudConfig from server: %{public}@
Updated CloudConfig from server: %{public}@
Cannot store CloudConfig from server: %{public}@
Stored CloudConfig from server: %{public}@
CommandEngine: executing pending command
Starting command queue processing
Processing pending command
Pending command to process: %{public}@
Failed to initialize payload for command %{public}@: %{public}@
Failed to save context when processing command %{public}@: %{public}@
%{public}@ %{public}@ does not conform to %{public}@
No command to process
Command queue processing completed with error
Command queue processing completed with nothing to do
Executing command
Command queue processing is complete
Error fetching next command: %{public}@
CommandEngine: processing command result
Error fetching command %{public}@ to process its result: %{public}@
Missing command %{public}@ when processing result
Executed command: %{public}@, result: %d
Firing stream event with payload: %{public}@
Configuration event publisher action = %d, token = %llu, descriptor = %@
Configuration event publisher failed with an error: %{public}s
Configuration publisher has already started, ignoring start.
ConfigurationPublisher: Starting...
Starting configuration publisher...
Started configuration publisher.
Adding subscription for %llu: %{public}@
Added subscriber for %llu: %{public}@.
Couldn't add subscriber for %llu, token already exists: %{public}@.
Removing subscriber for %llu...
Removed subscriber for %llu: %{public}@.
Couldn't remove subscriber for %llu, it didn't exist.
ConfigurationPublisher: Loading configuration subscriber plugins...
Loading configuration subscribers XPC service plugins
Loading internal configuration subscribers plugins
Starting configuration subscriber for %{public}@...
Finished loading configuration subscriber plugins: %{public}@
Ignoring %{public}@, the publisher has not finish starting yet.
Notifying changed configuration types if needed...
Changed configuration types: %{public}@
Nothing has changed.
ConfigurationPublisher: notifying configuration subscribers
Notifying configuration subscribers with configurations of types: %{public}@
Notified configuration subscribers with configurations of types: %{public}@
ConfigurationPublisher: notifying XPC service plugins
Triggering configuration subscriber plugin: %{public}@
Unable to fetch active configurations: %{public}@
Can't fetch configurations for types %{public}@: %{public}@
Could not deserialize status: %{public}@
Could not deserialize status reason: %{public}@
Could not write status to disk %{public}@: %{public}@
Wrote status to disk %{public}@
Removed all store status %{public}@
Could not remove all store status %{public}@: %{public}@
No store status to remove %{public}@
Removed status directory %{public}@
Could not remove status directory %{public}@: %{public}@
No status directory to remove %{public}@
Removed status %{public}@
Removed status parent directory %{public}@
Could not remove status parent directory %{public}@: %{public}@
Could not remove status %{public}@: %{public}@
No status to remove %{public}@
Found XPC service plugin: %{public}@
Ignoring XPC service plugin: %{public}@
Invalid XPC service plugin info dict: %{public}@
Created XPC service plugin: %{public}@ %{public}@ %{public}@
Failed XPC connection for configuration subscriber XPC service %{public}@: %{public}@
Failed to apply configurations for configuration subscriber XPC service %{public}@: %{public}@
Applied configurations for configuration subscriber XPC service: %{public}@
No in-memory cache...
Creating in-memory cache...
DeviceIdentity: retrieving
Retrieving device identity...
Could not get device identity: %{public}@
Did not get device identity, reference key is missing
Did not get device identity, incorrect number of certificates: %@
Retrieved device identity
Device identity not supported on this device: using self-signed certificate instead
Could not get self signed certificate public and/or private keys: %{public}@
Device lock state: started listening
Device lock state: current state: %{public}@
Device lock state: stopped listening
Device lock state notification
Device lock state changed to: %{public}@
Could not deserialize published status: %{public}@
Could not deserialize published status: invalid JSON objects
Could not serialize published status: %{public}@
Wrote published status to disk %{public}@
Unable to create status directory at %{public}@: %{public}@
ExternalStatusPublisher: Starting...
Starting external status notifier...
Started external status notifier.
ExternalStatusPublisher: Loading XPC service plugins...
Loading status publisher XPC service plugins
Finished loading status publisher XPC service plugins: %{public}@
Subscribing to all key paths: %{public}@
Received status notification: %{public}@
No status publisher plugin for notification: %{public}@
Unable to fetch management sources: %{public}@
Failed to query status for store: %{public}@ %{public}@
Persisting status for store: %{public}@
Persisted status for store: %{public}@ changed %{public}@
Failed to persist status for store: %{public}@
Unable to fetch subscribed status key paths: %{public}@
All predicate status key paths: %{public}@
Could not get subscribed status types from %{public}@: %{public}@
FileConduit: starting
Started file conduit for %{public}@
FileConduit: enrolling
Enrolling with URI: %{public}@
Could not prepare bootstrap URL %{public}@: %{public}@
Unable to save while enrolling: %{public}@
Enrolled with URI: %{public}@
FileConduit: unenrolling
Unenrolling identifier: %{public}@
Unable to remove management source %{public}@: %{public}@
Unenrolled identifier: %{public}@
FileConduit: forced syncing
FileConduit: syncing only if needed
Syncing%{public}@...
Sync succeeded
Sync failed: %{public}@
Could not read declaration file data: %{public}@ %{public}@
Could not parse declaration from file data: %{public}@ %{public}@
Ignoring declaration file %{public}@ because identifier matches file %{public}@
Invalid type %{public}@ for declaration: %{public}@
Unable to load payload for declaration %{public}@: %{public}@
Marked for declaration deletion: %{public}@
Successfully synced data
Unable to sync data: %{public}@
Could not deserialize status report: %{public}@
Could not write status report: %{public}@
Could not deserialize status report. Missing StatusItem key %{public}@
Could not write declarations status: %{public}@
Could not deserialize overall status: %{public}@
Could not read overall status from %{public}@: %{public}@
Could not update overall status %{public}@: %{public}@
Updated overall status %{public}@
HTTPConduit: starting
Starting conduit...
Started HTTP conduit for %{public}@
HTTPConduit: enrolling
Enrolling conduit...
Failed to save conduit state during enrollment: %{public}@
Could not serialize request payload: %{public}@
Error while enrolling with a referral: %{public}@
Processing enrollment referral
Missing referral URL
Cannot parse referral URL value: %{public}@
Too many referrals
Could not process enrollment referral: %{public}@
Error while enrolling: %{public}@
Enroll response is missing
Enrolled %{public}@: %{public}@
HTTPConduit: unenrolling
Unenrolling conduit...
Error while unenrolling: %{public}@
Unenrolled from URI: %{public}@
Unable to save while unenrolling: %{public}@
HTTPConduit: fetching server tokens
Fetching server tokens...
Tokens are up to date, ignoring fetch server tokens
Error while fetching server tokens: %{public}@
Unable to save server tokens: %{public}@
Successfully saved server tokens
HTTPConduit: forced syncing
HTTPConduit: syncing only if needed
Unable to parse push message: %{public}@
Unable to parse sync tokens message: %{public}@
HTTPConduit: fetching declaration items
Fetching declaration items...
Last declarations token received matches last one processed; ignoring fetch declaration items
Error while fetching declaration items: %{public}@
Failed to save partial objects: %{public}@
Successfully saved partial object
Deleted: %{public}@
Marked for deletion: %{public}@
HTTPConduit: fetching next object from server
Fetching next %{public}@...
All %{public}@ downloaded
No more %{public}@ objects for %{public}@
Error while fetching object %{public}@ (%{public}@): %{public}@
Object with %{public}@ disappeared while filling in contents.
Error while processing fetched data for object %{public}@ (%{public}@): %{public}@
Fetched from URI: %{public}@
Unable to load payload into %{public}@: %{public}@
Unable to save fetched object %{public}@: %{public}@
Successfully saved object, fetching next one
HTTPConduit: sending status
Sending conduit status...
Error while sending status: %{public}@
Unable to save status state changes: %{public}@
Successfully sent status
Got back from HTTP: %ld
Unused Content-Type parameter: %{public}@
Schemes: %@
Did match supported scheme
Current credential scheme %{public}@ is not advertised by the server %{public}@
No authentication scheme currently being used. Setting new scheme: %{public}@
Too may failed authentication attempts: %lld
Refreshing account credentials for scheme: %{public}@
Previous authentication scheme %{public}@ not recognized. Setting new scheme: %{public}@
Could not process HTTP authentication: %{public}@
Unable to save while process error: %{public}@
Preparing URL request for %{public}@ %{public}@ (%{public}@)
Preparing task for %{public}@ %{public}@ (%{public}@)
>>>> %{public}@ %{public}@ (%{public}@)
<<<< %{public}@ %{public}@ (%{public}@): %{public}@
<<<< %{public}@ %{public}@ (%{public}@)
Retrying: %{public}@ %{public}@
Handling challenge: %@
Authentication method is server-trust
Valid server certificate
Server trust is not valid %@: %@
Invalid server certificate
Unsupported authentication method
Need to manually fetch Sync Tokens for first time
Need to manually fetch Sync Tokens
Declarations mismatch
Unable to search for partial objects of class %{public}@: %{public}@
WWWAuthenticate header: %@
JSON Error response is not an RMProtocolErrorResponse: %{public}@
Could not create HTTP request log file %@
Could not open HTTP request log file %@: %@
Could not write HTTP request headers to file %@: %@
Could not write HTTP request body to file %@: %@
Could not write HTTP response headers to file %@: %@
Could not write HTTP response body to file %@: %@
Could not create HTTP logs directory %@: %@
InternalStatusPublisher: Starting...
Starting internal status notifier...
Started internal status notifier.
Key %{public}@ changed from: %{public}@ to: %{public}@
Unable to save store metadata: %{public}@
Unable to fetch management sources for management channel (%{public}@): %{public}@
Could not deserialize management properties: %{public}@
Could not serialize management properties: %{public}@
Wrote management properties to disk %{public}@
Unable to create status directory for store at %{public}@: %{public}@
Management settings cache does not currently exist
Failed to cache management settings: %{public}@
Failed to cache management settings - invalid property list type: %{public}@
Cached management settings: %{public}@
Failed to write management settings: %{public}@
Wrote management settings: %{public}@
MDMConduit: starting
Started MDM conduit for %{public}@
MDMConduit: enrolling
MDMConduit: unenrolling
MDMConduit: fetching server tokens
MDMConduit: forced syncing
MDMConduit: syncing only if needed
QA Mode: ignoring sync
MDMConduit: fetching declaration items
MDMConduit: fetching next object from server
MDMConduit: sending status
QA Mode: writing status data locally
Got back from MDM: %ld
applyRestrictionDictionary(%{public}@) failed: %{public}@
Refreshing rMDM state
Starting to migrate on startup
Processed migration actions: %{public}@
Configured migration actions: %{public}@
Already processed migration action: %{public}@
Processing migration action: %{public}@
Failed to process migration action: %{public}@ %{public}@
Processed migration action: %{public}@
Finished migrate on startup
Invalid migration data: %{public}@
Failed to read migration data: %{public}@
Failed to parse migration data: %{public}@
No migration data
Failed to write migration data: %{public}@
Wrote migration data
Ignoring migration - no status directory
Failed migration - cannot examine status directory: %{public}@ %{public}@
Ignoring status directory %{public}@
Migrated %{public}@ to %{public}@
Ignoring migration
Not OK to migrate: old database does not exist
Not OK to migrate: new database exists
Starting migration
Migration directory does not exist: %{public}@
Migrated %{public}@
Failed to remove migrated item %{public}@: %{public}@
Failed to migrate %{public}@: %{public}@
periodic sync repeats: %d, interval: %f
Could not sync all management sources: %{public}@
All management sources synchronized
Creating loaded persistent container at %{public}@...
Unable to load persistent store %{public}@: %{public}@...
Created loaded persistent container at %{public}@
Unable to archive %{public}@ for %{public}@: %{public}@
Unable to unarchive %{public}@ for %{public}@ %{public}@: %{public}@
Unexpected class %{public}@ for %{public}@
Stopped persistent history notifier (%p).
Persistent history notifier (%p) is already observing
Starting persistent history notifier
Starting persistent history notifier (%p)...
Started persistent history notifier (%p).
Managed object context (%p) did save for persistent history notifier (%p).
Persistent history notifier (%p) creating new query.
Persistent history notifier (%p) has pending query.
Persistent history notifier (%p) already running a query.
Persistent history notifier (%p) query complete, another is needed.
Persistent history notifier (%p) query complete.
Querying for transactions for persistent history notifier (%p).
Persistent history notifier (%p) processing transactions: %lu { authors = %@, entities = %@, old token = %@, new token = %@ }.
Persistent history notifier (%p) ignoring transaction from author %@
Unable to create predicate regular expression: %{public}@
Unable to parse 
%{public}@
: %{public}@
Invalid predicate description version: %{public}@
Unable to evaluate 
%{public}@
: %{public}@
Posting notification for management source: %{public}@
Unable to fetch for management sources for %{public}@: %{public}@
No management source matching %{public}@
PushController: starting
Push token for %{public}@ has been removed, ignoring change...
Push tokens have not changed, skipping notification...
Push token received: %{public}@ in environment: %{public}@
Push notification received: %{public}@ in environment: %{public}@
Push notification missing message for topic: %{public}@ in environment: %{public}@
Unable to parse push message for topic: %{public}@ in environment: %{public}@: %{public}@
Received push for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Unable to look for push tokens to update: %{public}@
No conduit configs for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Updating %{public}@ for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Error saving push received timestamps: %{public}@
PushController: refreshing
Unable to look for push subscriptions: %{public}@
Invalid push environment: 
%{public}@
Unable to extract private key from identity: %{public}@
Unable to extract certificate chain from identity: %{public}@
Unable to create certificate from identity: %{public}@
Unable to persist private key: %{public}@
Unable to extract private key: %{public}@
Unable to create private key: %{public}@
Unable to create certificate from data: %{public}@
Unable to generate key for self signed certificate: %{public}@}
Unable to retrieve public key from private key for self signed certificate: %{public}@}
Unable to generate self signed certificate from key pair
Starting status engine...
Started status engine...
There are unacknowledged status subscriptions...
Notifying delegate of unacknowledged status subscriptions...
Notified delegate of unacknowledged status subscriptions.
cleared lastAcknowledgedDate
Could not clear lastAcknowledgedDate %{public}@
Acknowledging status subscriptions: %{public}@...
Acknowledged status subscriptions: %{public}@
Could not acknowledge status subscriptions %{public}@: %{public}@
Status subscriptions already acknowledged: %{public}@
Making implicit status subscriptions for %@
Could not create subscription for %{public}@
Implicitly subscribed to %@
Could not implicitly subscribe to %{public}@: %{public}@
Could not get subscribed status key paths for identifiers %{public}@ from %{public}@: %{public}@
Could not get subscribed status key paths %{public}@ from %{public}@: %{public}@
Could not get status subscriptions from %{public}@: %{public}@
Could not query for implicit status subscription.
Could not get or status status subscription for %d from %{public}@: %{public}@
Failed XPC connection for status publisher XPC service %{public}@: %{public}@
Failed to publish status keys for status publisher XPC service %{public}@: %{public}@
Publish status keys for status publisher  XPC service: %{public}@
Query for keys: %{public}@
Failed to query status: %{public}@
Unsupported keys: %{public}@
Updating status subscriptions
Status subscriptions to remove: %lu
Status subscription status removal failed: %{public}@
Status subscriptions to update: %lu
Unable to de-serialize declaration %{public}@: %{public}@
Status subscription status persist for error failed: %{public}@
Status subscription status persist for success failed: %{public}@
Status subscription key paths removed: %lu
Could not fetch status subscriptions: %{public}@
Could not fetch status subscription configurations: %{public}@
Disallowed resolveAsset URL scheme: %{public}@
Invalid asset resolution type: %ld
Adding asset into data download %{public}@: %{public}@
Adding file asset download %{public}@: %{public}@
Could not resolve asset for %{public}@: %{public}@
Could not open data file for %{public}@: %{public}@
Received valid asset data for %{public}@
Removed existing downloaded asset file at %{public}@ for %{public}@
Failed to remove existing downloaded asset file at %{public}@ for %{public}@: %{public}@
Relocated downloaded asset file from %{public}@ to %{public}@ for %{public}@
Failed to relocate downloaded asset file from %{public}@ to %{public}@ for %{public}@: %{public}@
Invalid asset data for %{public}@: %{public}@
%{public}@ resolution did finish with response
Could not resolve asset because of a protocol error: %{public}@
Expected empty server response for zero sized asset, but got: %lu
Could not resolve asset because of size mismatch expected %lu got %lu
Could not resolve asset because of unexpected content type: %{public}@
Could not resolve asset because of SHA mismatch expected %@ got %@
Failed to do initial sync of activation engine: %{public}@
Failed to synchronize store: %{public}@
Failed to generate status report: %{public}@
No status to send
Status report to send: %{public}@
Unable to fetch management source objects: %{public}@
ObserverStoreWithIdentifier with %{public}@...
ObserverStoresWithCompletionHandler...
DeclarationWithIdentifier with %{public}@...
DeclarationsForStoreIdentifier with %{public}@...
DeclarationsWithTypes with %{public}@...
DeclarationManifestForStoreIdentifier with %{public}@...
SetShouldInstallConfiguration with %{public}@...
fetchDataAtURL with %{public}@...
Cannot fetch data at %{public}@: %{public}@
Fetched data at %{public}@
Posting observer stores did change notification
CreateStoreWithType...
Cannot create store because there is an existing device store type present.
Unable to save new store: %{public}@
RemoveStoreWithIdentifier with %{public}@...
Unable to save while removing store: %{public}@
ProviderStoreWithIdentifier with %{public}@...
ProviderStoresWithCompletionHandler...
SaveDeclaration with %{public}@...
Restoring deleted declaration: %{public}@
Ignoring duplicate declaration: %{public}@
Failed to save declaration: %{public}@
DeleteDeclarationWithIdentifier with %{public}@...
Failed to delete declaration - does not exist: %{public}@
Failed to delete declaration - already deleted: %{public}@
Failed to delete declaration: %{public}@
ApplyChangesForStoreIdentifier with %{public}@...
Could not find store with identifier %{public}@
SubscriberStoreWithIdentifier with %{public}@...
SubscriberStoresWithCompletionHandler...
SubscribedStoreDeclarationsWithTypes...
SubscribedDeclarationsWithTypes with %{public}@...
resolveAsset with %{public}@...
Cannot resolve asset %{public}@: %{public}@
Cannot resolve asset %{public}@: identifier does not reference an asset
Resolved asset %{public}@
Unable to fetch management source object: %{public}@
Could not find management source with identifier %{public}@
Invalid type %{public}@ for payload
Can't fetch declarations: %{public}@
Can't deserialize declaration %{public}@: %{public}@
Can't deserialize configuration %{public}@: %{public}@
Can't deserialize asset %{public}@: %{public}@
Unable to fetch declarations: %{public}@
Invalid type %{public}@ for declaration
Failed to load declaration: %{public}@
Unable to fetch device management source objects: %{public}@
Disallowed fetchDataAtURL URL scheme: %{public}@
Received data for %{public}@
Failed to fetch data at %{public}@: %{public}@
Adding data download for %{public}@: %{public}@
Could not fetch data for %{public}@: %{public}@
Received valid data for %{public}@
HTTP response error for %{public}@: %{public}@
Invalid data for %{public}@: %{public}@
%{public}@ data fetch did finish with response
Could not fetch data because of a protocol error: %{public}@
StoreXPCListenerDelegate: ObserverStoreWithIdentifier from proxy handler
Could not fetch observer store: %{public}@
Fetched observer store
StoreXPCListenerDelegate: ObserverStoresWithCompletionHandler from proxy handler
Could not fetch observer stores: %{public}@
Fetched observer stores
StoreXPCListenerDelegate: DeclarationWithIdentifier from proxy handler
Could not fetch declaration: %{public}@
Fetched declaration
StoreXPCListenerDelegate: DeclarationsForStoreIdentifier from proxy handler
Could not fetch declarations: %{public}@
Fetched declarations
StoreXPCListenerDelegate: DeclarationsWithTypes from proxy handler
StoreXPCListenerDelegate: DeclarationManifestForStoreIdentifier from proxy handler
Could not fetch declaration manifest: %{public}@
Fetched declaration manifest
StoreXPCListenerDelegate: SetShouldInstallConfiguration from proxy handler
StoreXPCListenerDelegate: FetchDataForURL from proxy handler
FetchDataForURL with %{public}@...
Could not fetch data for url %{public}@
Fetched data for URL
StoreXPCListenerDelegate: CreateStoreWithType from proxy handler
Could not create provider store: %{public}@
Created provider store
StoreXPCListenerDelegate: RemoveStoreWithIdentifier from proxy handler
Could not remove provider store: %{public}@
Removed provider store
StoreXPCListenerDelegate: ProviderStoreWithIdentifier from proxy handler
Could not fetch provider store: %{public}@
Fetched provider store
StoreXPCListenerDelegate: ProviderStoresWithCompletionHandler from proxy handler
Could not fetch provider stores: %{public}@
Fetched provider stores
StoreXPCListenerDelegate: SaveDeclaration from proxy handler
Could not save declaration: %{public}@
Saved declaration
StoreXPCListenerDelegate: DeleteDeclarationWithIdentifier from proxy handler
Could not delete declaration: %{public}@
Deleted declaration
StoreXPCListenerDelegate: ApplyChangesForStoreIdentifier from proxy handler
Could not apply changes: %{public}@
Applied changes
StoreXPCListenerDelegate: SubscriberStoreWithIdentifier from proxy handler
Could not fetch subscriber store: %{public}@
Fetched subscriber store
StoreXPCListenerDelegate: SubscriberStoresWithCompletionHandler from proxy handler
Could not fetch subscriber stores: %{public}@
Fetched subscriber stores
StoreXPCListenerDelegate: SubscribedStoreDeclarationsWithTypes from proxy handler
Could not fetch subscribed declarations: %{public}@
Fetched subscribed declarations
StoreXPCListenerDelegate: SubscribedDeclarationsWithTypes from proxy handler
StoreXPCListenerDelegate: ResolveAsset from proxy handler
ResolveAsset with %{public}@...
Could not resolve asset %{public}@
Resolved asset
StoreXPCListenerDelegate: WriteStatusWithStoreIdentifier from proxy handler
WriteStatusWithStoreIdentifier with %{public}@...
Persisted status
Could not persist status %{public}@
StoreXPCListenerDelegate: RemoveStatusWithStoreIdentifier from proxy handler
RemoveStatusWithStoreIdentifier with %{public}@...
Removed status
Could not remove status %{public}@
StoreXPCListenerDelegate: PublishStatusWithStoreIdentifier from proxy handler
PublishStatusWithStoreIdentifier with %{public}@...
Unable to fetch for subscribed status key paths for %{public}@: %{public}@
No subscribed status key paths matching %{public}@
Could not update subscribed status key paths: %{public}@
Evaluating new connection %{public}@
%{public}@ cannot run, this feature is not enabled.
Accepted new connection %{public}@ 
application-identifier from connection is: %{public}@
XPCProxyHandler: Enrolling from proxy handler
Enrolling with %{public}@...
Could not enroll with %{public}@: %{public}@
Enrolled with %{public}@: %{public}@
XPCProxyHandler: Enrolling user channel from proxy handler
Enrolling with account %{public}@...
Could not enroll with account %{public}@: %{public}@
Enrolled with account %{public}@: %{public}@
XPCProxyHandler: Enrolling DDM from proxy handler
Enrolling DDM with %{public}@...
Could not enroll DDM with %{public}@: %{public}@
Enrolled with DDM %{public}@: %{public}@
XPCProxyHandler: Unenrolling from proxy handler
Could not unenroll with %{public}@: %{public}@
Unenrolled %{public}@ (checked out with the server)
Unenrolled %{public}@
XPCProxyHandler: Syncing from proxy handler
Could not sync with %{public}@: %{public}@
Synced with %{public}@
XPCProxyHandler: Updating from proxy handler
Updating %{public}@ with push message...
Could not update with %{public}@ with push message: %{public}@
Updated with %{public}@ with push message
Updating %{public}@ with sync tokens response..
Could not update with %{public}@ with sync tokens: %{public}@
Updated with %{public}@ with sync tokens
XPCProxyHandler: Checking device enrollment from proxy handler
Checking device enrollment
Could not check device enrollment: %{public}@
Device channel enrollment exists
Device channel enrollment does not exist
XPCProxyHandler: Finding management channel from proxy handler
Finding management channel
Failed to find management channel: %{public}@
Did not find management channel
Found management channel
XPCProxyHandler: Sending status data from proxy handler
Sending status data to %{public}@...
Could not send status with %{public}@: %{public}@
Sent status with %{public}@
Could not fetch for management sources with identifier %{public}@: %{public}@
XPCProxyHandler: Querying for status and errors from proxy handler
Querying for status and errors with key paths %{public}@ from %{public}@...
XPCProxyHandler: Querying and sending status of specific type from proxy handler
Querying and sending status with key paths %{public}@ to %{public}@...
Could not send status of types %{public}@ with %{public}@: %{public}@
Sent status of types %{public}@ with %{public}@
XPCProxyHandler: Querying for status subscriptions from proxy handler
Could not query for status subscriptions from %{public}@: %{public}@
Queried for status subscriptions from %{public}@
XPCProxyHandler: Querying and sending status subscriptions from proxy handler
Querying and sending status subscriptions with identifiers %{public}@ to %{public}@...
Could not send status subscriptions with identifiers %{public}@ with %{public}@: %{public}@
Sent status subscriptions with identifiers %{public}@ with %{public}@
XPCProxyHandler: Fetching configurations
Fetching configurations for: %{public}@
Fetched configurations of types %{public}@: %{public}@
Could not fetch configurations of types %{public}@: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>remotemanagementd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.remotemanagementd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>remotemanagementd</string>
<key>CFBundleShortVersionString</key>
<string>2.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>2.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5302u</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5302u</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.remotemanagementd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
</array>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>SysCfg</string>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.remotemanagement.configuration-subscriber-service</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.rootless.storage.remotemanagementd</key>
<true/>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/rmd_test/</string>
<string>/private/var/tmp/com.apple.remotemanagementd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/com.apple.remotemanagementd/</string>
<string>/Library/Caches/com.apple.remotemanagementd/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.apsd</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.managedconfiguration.teslad</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
<string>com.apple.mobileactivationd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.remotemanagementd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>com.apple.security.ts.tmpdir</key>
<array>
<string>com.apple.remotemanagementd</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.create</key>
<true/>
<key>com.apple.usermanagerd.persona.delete</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>lockdown-identities</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:remotemanagementd  PROJECT:RemoteManagement-2.0
v8@?0
com.apple.remotemanagementd
daemon
activationEngine
RMActivationEngine
none
(%K == %@) && (%K == %d)
serverToken
(%K == %@) && ((%K == NULL) || (%K == %d))
activation.managementSource
configuration.loadState
configuration.managementSource
asset.loadState
(%K == %@) && (%K == %d) && (%K IN %@)
(%K == %@) AND (%K == %d) AND (%K == %@)
(%K == %@) AND ((%K == %d) OR ((%K != NULL) AND (%K.%K == YES)))
active
inactive
predicateDescription
configurationReferences
configurationIdentifier
inactiveReasons
prefetch
asset
deviceAuthenticationCredential
X-Apple-RM-Signature-Data
X-Apple-RM-Signature-Certificates
v32@?0^{__SecKey=}8@"NSArray"16@"NSError"24
genericAuthenticationCredential
X-Apple-RM-MDM-Token
%@ %@
%@:%@
AssociatedKeyAppleIDContext
%@="%@"
%lu-%lu-%lu
1.0.0
B24@?0@"NSString"8@"NSDictionary"16
account.
client
conduit
engine
RMClient-%@
com.apple.remotemanagementd.client
com.apple.remotemanagementd.needs-syncing
%@/%@
clientCapabilitiesController
clientController
com.apple.remotemanagement.cloudConfigAvailable
ClientController
com.apple.RemoteManagement.RMClientController
RMClientController-cloudConfigLock
v32@?0@"NSString"8@"NSManagedObjectID"16^B24
com.apple.RemoteManagement.validating
v20@?0B8@"NSError"12
com.apple.RemoteManagement.checking-cloud-config
v24@?0@"NSString"8@"NSError"16
com.apple.RemoteManagement.checking-mdm
Device Channel
com.apple.gs.mdm.auth
v32@?0@"NSString"8@"RMClient"16^B24
rmstore
http
https
file
cloudConfigController
HasCloudConfigBeenChecked
CloudConfigEnrollmentURL
ConfigurationURL
MDMProtocolVersion
DEP.plist
v24@?0@"NSError"8@"NSDictionary"16
commandEngine
v52@?0@"NSString"8s16@"NSDictionary"20@"NSArray"28@"NSArray"36@"NSError"44
(%K == %@) && (%K == %@)
managementSource
state
%K == %@
identifier
managementSource.identifier
payload
type
state.status
lastReceivedPushTimestamp
lastReceivedCommandToken
lastReceivedDeclarationsToken
lastReceivedServerTokensTimestamp
enrollmentToken
errorState
lastProcessedCommandToken
lastProcessedDeclarationsToken
lastReceivedServerTokensFromServerTimestamp
configurationEventStreamSubscription
ConfigurationTypes
assetReferences
assetIdentifier
activation
(not present)
configuration
required
configurationPublisher
com.apple.remotemanagement.configs.daemon
com.apple.remotemanagement.configs.agent
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
v12@?0i8
%K == YES
state.active
assetReferences.asset
configurationQuerier
(%K != nil) && (%K == %d) && (%K == YES) && (%K in %@)
loadState
declarationType
(%K == %@) && (%K == %d) && (%K == YES) && (%K in %@)
configurationStatusArchiver
server-token
valid
reasons
v32@?0@"NSDictionary"8Q16^B24
v32@?0@"RMModelStatusReason"8Q16^B24
%@-%@
%@.json
configurationSubscriberServicePlugin
v16@?0@"NSError"8
<%@ { identifier = %@, token = %@ }>
managementSourceIdentifier
<%@: %p { managementSourceIdentifier = %@, type = %@, identifier = %@, serverToken = %@ }>
deviceIdentity
self_signed_identity_cert.plist
v32@?0^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}8@"NSArray"16@"NSError"24
deviceLockState
RMDeviceLockStateListener
externalStatusArchiver
PublishedStatus.json
ValidStatus
ErrorStatus
Code
Domain
UserInfo
v32@?0@"NSString"8@16^B24
externalStatusPublisher
_metadata
last-received
removed
_removed
ExternalStatusPublisher
RMExternalStatusPublisher
v32@?0@"NSString"8@"NSArray"16^B24
v28@?0@"NSArray"8@"NSDictionary"16B24
v32@?0@"NSString"8@"NSDictionary"16^B24
RMMAIDLongLivedTokenOverride
RMOverrideCloudConfig
RMTestOrganizationID
fileConduit
OverallStatus.json
Declarations
Subscriptions
Status
json
StatusItems
declarations
httpConduit
WWW-Authenticate
Authorization
X-Apple-Request-UUID
test-org-id
Accept
Content-Type
application/json
text/html
User-Agent
RemoteManagementDaemon
Retry-After
DELETE
POST
%@/%@ (%@) %@/%@
v32@?0@"RMModelPayloadBase"8@"NSHTTPURLResponse"16@"NSError"24
 only if needed
activations
configurations
assets
management
v32@?0@"NSString"8@"RMDeclarationPayload"16^B24
{identifier}
Unexpected status code
Empty Response Body
{channel}
{enrollmenttoken}
, %@="%@"
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss Z
httpconduitstate
chosenAuthenticationScheme
localRetryAfterDate
numberOfConsecutiveAuthErrors
numberOfConsecutiveErrors
numberOfConsecutiveFailures
pushEnvironment
pushTopic
referralBaseURL
referralCount
serverRetryAfterDate
httpLogging
Downloaded data to file: %@
%@-%@.txt
<<<<< Request
%@ %@ HTTP/1.1
%@: %@
v32@?0@"NSString"8@"NSString"16^B24
>>>>> Response
HTTP/1.1 %ld %@
--- Error ---
--- Unknown Error ---
InternalStateArchiver.PersistentActiveIdentifiers
InternalStateArchiver.CommandAndDeclarationsPersistentHistoryToken
InternalStateArchiver.DeviceStatusByKeyPath
InternalStateArchiver.PushTokenByEnvironmentName
internalStatusPublisher
statusIdentifier
statusServerToken
v24@?0@"RMAssetPayloadReference"8^B16
yyyy-MM-dd'T'HH:mm:ssZZZZZ
v32@?0@8@16^B24
managementPropertiesArchiver
ManagementProperties.json
managementSettings
ManagementSettings.plist
(%K == %@)
bootstrapURI
enrollmentType
%K == %d
accountIdentifier
authenticationCredential
user
device
conduitConfig
enrolled
name
personaIdentifier
predicateStatusKeys
storeDescription
command
statusSubscriptions
keyPath
subscribedStatusKeyPaths
mdmConduit
v32@?0@"RMModelPayloadBase"8@"NSDictionary"16@"NSError"24
file:///tmp/rmd_test/Status
Empty body
Endpoint
Data
v24@?0@"NSDictionary"8@"NSError"16
mdmconduitstate
com.apple.RemoteManagement.MDMv1Liaison
mdmv1Liaison
migrationEngine
ProcessedActions
Identifier
Timestamp
migrationStatusPath
RMMigrationStatusPath
migrationSystemContainer
RMMigrationSystemContainer
Executed
Echo
Failed
Pending
com.apple.activation
com.apple.asset
com.apple.configuration
com.apple.command
Error.UnknownPayloadKeys
Unknown Payload Keys
UnknownPayloadKeys
Info.Predicate
ServerToken
Predicate
Error.PredicateFailed
Error.MissingAssets
Configuration (%@:%@) is missing assets.
AssetIdentifiers
Error.MissingConfigurations
Activation (%@:%@) is missing configurations.
ConfigurationIdentifiers
Error.InvalidPayload
%@ (%@:%@) has an invalid payload.
Error.MissingState
%@ (%@:%@) is missing state.
Info.NotReferencedByActivation
Info.NotReferencedByConfiguration
Activation
Asset
Configuration
periodicSync
com.apple.remotemanagement.periodic-sync
v16@?0@?<v@?q>8
uniqueIdentifiersByConfigurationType
persistentController
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSMutableDictionary"8
com.apple.remotemanagementd.persistent-history-notifier
B16@?0@"NSPersistentHistoryChange"8
(none)
B24@?0@"NSPersistentHistoryTransaction"8@"NSDictionary"16
predicate
keyPaths
properties
version
status
property
@(status|property|key)\(([^)]+)\)
Unable to create predicate regular expression
%@.%@
error
Unknown
<%@: %p { statusKeyPaths = %@, properties = %@, predicate = %@ }>
Invalid version
RMPredicateStatusUpdaterDidChangeNotification
RMUserInfoKeyPredicateUpdatedManagementSourceObjectIDs
predicateStatusUpdater
Error.Unknown
An unknown error occurred: %@
push
com.apple.aps.remotemanagementd.http.apns-dev
com.apple.aps.remotemanagementd.http.apns-prod
PushController
com.apple.remotemanagementd.push
v32@?0@"NSString"8@"APSConnection"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
(%K == %@) && (%K == %@) && (%K == %@)
state.pushEnvironment
state.enrollmentToken
state.pushTopic
(%K != NULL) && (%K != NULL)
Management Sources
Orphaned Entities
Internal Device Status
Error
%K == nil
Unable to unarchive status data
(%K == nil) && (%K == nil)
(%K == nil)
subscription
securityUtilities
PrivateKey
Certificates
SelfSigned-%@
Apple Inc.
Remote Management
statusEngine
RMStatusEngine
subscription.sourceType
(%K == %@) && ((%K == NULL) OR (%K != %K))
lastAcknowledgedDate
lastReceivedDate
(%K == %@) AND (SUBQUERY(%K, $statusSubscriptionItem, $statusSubscriptionItem.%K IN %@).@count > 0)
statusSubscriptionItems
subscription.sourceIdentifier
%K == NULL
(%K == NULL) OR (%K != %K)
(%K == %@) AND (%K == %@) AND (%K == %d)
sourceIdentifier
sourceType
statusPublisherServicePlugin
statusQuerier
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSError"16^B24
%@.%ld
statusReporter
items
statusSubscriptionsSubscriber
RMStatusSubscriptionsSubscriber
Error.ConfigurationIsInvalid
Configuration is invalid
(%K == %@) AND (%K == %d)
(%K == %@) AND (%K == %@) AND (%K == YES)
storeAssetResolver
com.apple.RemoteManagement.RMStoreAssetResolver
Asset has no Reference
com.apple.RemoteManagement.resolvingAssets
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
%02X
storeClient
storeController
StoreController
com.apple.RemoteManagement.RMStoreController
%@://%@/%@
Identifier does not reference an asset
(%K == %@) && (%K == %d) && (%K in %@)
(%K == %@) && (%K == %d) && (%K == %@)
storeDataFetcher
com.apple.RemoteManagement.RMStoreDataFetcher
com.apple.RemoteManagement.fetchingData
StoreXPCListenerDelegate
com.apple.Preferences
com.apple.private.remotemanagement
com.apple.private.remotemanagement.observer
com.apple.private.remotemanagement.provider
com.apple.private.remotemanagement.subscriber
application-identifier
v24@?0@"RMObserverStore"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0@"RMModelDeclarationBase"8@"NSError"16
v24@?0@"RMDeclarationManifest"8@"NSError"16
SetShouldInstallConfiguration
v24@?0@"NSData"8@"NSError"16
v24@?0@"RMProviderStore"8@"NSError"16
v24@?0@"RMSubscriberStore"8@"NSError"16
v32@?0@"NSArray"8@"NSDictionary"16@"NSError"24
v24@?0@"RMStoreResolvedAsset"8@"NSError"16
(%K IN %@)
needsSync
RMSubscribedStatusKeyPathDidChangeNotification
RMUserInfoKeyUpdatedManagementSourceObjectIDs
statusNotificationCenter
%K IN %@
%K BEGINSWITH %@
v32@?0@"NSManagedObjectID"8@"NSSet"16^B24
XPCListenerDelegate
AAACCOUNTS.com.apple.accountsd
com.apple.purplebuddy
com.apple.private.remotemanagement.account-changes
com.apple.private.remotemanagement.configuration-subscriber
com.apple.private.remotemanagement.enrollment
v24@?0@"RMManagementChannel"8@"NSError"16
daemon
activationEngine
RMActivationEngine
RMDebounceTimerDelegate
RMActivationPayload
Loading
RMPartialObject
RMActivationPayloadState
RMAssetPayload
RMAssetPayloadReference
RMAssetPayloadState
deviceAuthenticationCredential
RemoteManagement
RMURLRequestPreparer
genericAuthenticationCredential
RMCapabilities
client
RMClient
RMConduitDelegate
RMStatusEngineDelegate
clientCapabilitiesController
RMClientCapabilitiesController
RMStatusPublisher
clientController
RMClientController
RMDeviceLockStateListenerDelegate
RMClientDelegate
cloudConfigController
RMCloudConfigController
commandEngine
RMCommandExecutor
NSObject
RMCommandEngine
RMCommandPayload
RMReportDetails
RMCommandPayloadState
RMConduitConfig
RMConduitState
configurationEventStreamSubscription
RMConfigurationEventStreamSubscription
RMConfigurationSubscriber
RMConfigurationPayload
RMConfigurationPayloadReference
RMConfigurationPayloadState
RMDeclarationPayloadActivatableState
configurationPublisher
RMConfigurationPublisher
configurationQuerier
RMConfigurationQuerier
configurationStatusArchiver
RMConfigurationStatusArchiver
configurationSubscriberServicePlugin
RMConfigurationSubscriberXPCService
RMConfigurationSubscriberServicePlugin
RMDeclarationPayload
RMDeclarationUniqueIdentifier
NSCopying
deviceIdentity
RMDeviceIdentity
deviceLockState
RMDeviceLockStateListener
RMXPCNotificationsObserver
externalStatusArchiver
RMExternalStatusArchiver
externalStatusPublisher
RMExternalStatusPublisher
fileConduit
RMFileConduit
RMFileConduitConfig
RMFileConduitState
httpConduit
RMHTTPConduit
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
RMConduit
RMPersistentHistoryNotifierDelegate
RMHTTPConduitConfig
httpconduitstate
RMHTTPConduitState
httpLogging
RMHTTPLog
RMInternalStateArchiver
RMConfigurationPublisherDelegate
RMInternalStatusPublisherDelegate
RMPushControllerDelegate
internalStatusPublisher
RMInternalStatusPublisher
RMJSONSerialization
RMManagementPayload
RMManagementPayloadState
managementPropertiesArchiver
RMManagementPropertiesArchiver
managementSettings
RMManagementSettings
RMManagementSource
mdmConduit
RMMDMConduit
RMMDMConduitConfig
mdmconduitstate
RMMDMConduitState
mdmv1Liaison
RMMDMv1Liaison
migrationEngine
RMMigrationEngine
migrationStatusPath
RMMigrationStatusPath
migrationSystemContainer
RMMigrationSystemContainer
RMMigrationAction
RMAdditions
Error
periodicSync
RMPeriodicSync
RMPersistentActiveIdentifiers
NSSecureCoding
NSCoding
persistentController
RMPersistentController
RMPersistentHistoryNotifier
RMPersistentHistoryNotifierChanges
predicateDescription
RMPredicateDescription
_RMPredicateVisitor
NSPredicateVisitor
predicateStatusUpdater
RMPredicateStatusUpdater
push
RMPushController
APSConnectionDelegate
RMReport
securityUtilities
RMSecurityUtilities
statusEngine
RMStatusEngine
StatusSubscription
statusPublisherServicePlugin
RMStatusPublisherServicePlugin
RMExternalStatusProtocol
statusQuerier
RMStatusQuerier
RMStatusQueryResult
RMStatusSubscriptionQueryResult
RMProtocolStatusReport
statusReporter
RMStatusReporter
RMStatusSubscription
RMStatusSubscriptionItem
statusSubscriptionsSubscriber
RMStatusSubscriptionsSubscriber
storeAssetResolver
RMStoreAssetResolver
storeClient
RMStoreClient
storeController
RMStoreController
storeDataFetcher
RMStoreDataFetcher
RMStoreHelper
StoreXPCListenerDelegate
RMStoreXPCListenerDelegate
NSXPCListenerDelegate
RMStoreXPCProxyHandler
RMStoreXPCService
RMSubscribedStatusKeyPath
statusNotificationCenter
RMSubscribedStatusKeyPathUpdater
XPCListenerDelegate
RMXPCListenerDelegate
RMXPCProxyHandler
RMXPCService
isEqualToString:
componentsWithURL:resolvingAgainstBaseURL:
componentsWithString:
componentsSeparatedByString:
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
compareToken:error:
compare:
committedValuesForKeys:
commandIdentifier
code
cloudConfigurationDetails
closeFile
close
characterSetWithCharactersInString:
changes
changedValues
changedObjectID
changeType
bytes
bundleWithURL:
bundleIdentifier
bundleForClass:
buildWithSupportedVersions:supportedFeatures:supportedPayloads:
buildWithStatusItem:reasons:
buildWithIdentifier:serverToken:active:valid:reasons:
buildWithDeclarations:statusItems:
buildWithCode:description:details:
buildWithActivations:assets:configurations:management:
buildRequiredOnlyWithActivations:configurations:assets:management:
buildFromDictionary:
boolValue
boolRestrictionForFeature:
boolForDefaultsKey:
baseDirectoryURLCreateIfNeeded:
base64EncodedStringWithOptions:
author
authenticationScheme
authenticationMethod
assetByIdentifier
arrayWithObjects:count:
arrayWithObject:
arrayWithCapacity:
arrayByAddingObjectsFromArray:
arrayByAddingObject:
array
archivedDataWithRootObject:requiringSecureCoding:error:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
appendFormat:
andPredicateWithSubpredicates:
alphanumericCharacterSet
allowEvaluation
allValues
allObjects
allKeys
allHeaderFields
allHTTPHeaderFields
ak_addDeviceUDIDHeader
ak_addDeviceSerialNumberHeader
ak_addClientInfoHeader
ak_addAuthorizationHeaderWithServiceToken:forAltDSID:
aida_tokenForService:
aida_accountForAltDSID:
addStatusSubscriptionItemsObject:
addOperationWithBlock:
addObserverForNotification:observer:
addObserver:selector:name:object:
addObjectsFromArray:
addObject:
addEntriesFromDictionary:
addCharactersInString:
accountWithIdentifier:
acceptVisitor:flags:
absoluteString
aa_mdmServerToken
_setAdditionalXPCActivityProperties:
UDID
RMModelSHA1HexString
UUIDString
URLWithString:
HTTPMethod
URLByAppendingPathExtension:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathComponent:
HTTPBody
JSONObjectWithData:options:error:
MCSetBoolRestriction:value:
xpcServiceDirectoryURL
writeToURL:error:
writeToURL:atomically:
writePropertyList:toStream:format:options:error:
writeData:error:
willChangeValueForKey:
willAccessValueForKey:
valueForKeyPath:
valueForHTTPHeaderField:
valueForEntitlement:
username
userInfo
useHTTPLogging
updatedProperties
unsignedIntegerValue
unlockWithCondition:
unlock
unknownPayloadKeys
unionSet:
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
types
tryLockWhenCondition:
trigger
transactionAuthor
topic
tombstone
tokensTimestamp
tokensDeclarationsToken
timeZoneForSecondsFromGMT:
timeIntervalSinceReferenceDate
synchronousRemoteObjectProxyWithErrorHandler:
synchronizeOldKeys:newKeys:returningUnchangedKeys:returningNewAddKeys:returningNewChangeKeys:returningOldReplaceKeys:returningOldRemoveKeys:
symbol
substringWithRange:
substringToIndex:
substringFromIndex:
subarrayWithRange:
stringWithFormat:
stringWithCapacity:
stringValue
stringUTCWithDate:
stringUTCFractionalSecondsWithDate:
stringLocalTimeZoneFractionalSecondsWithDate:
stringFromDate:
stringForDefaultsKey:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByDeletingPathExtension
stringByDeletingLastPathComponent
stringByAppendingString:
stringByAppendingPathExtension:
stringByAppendingFormat:
stringByAddingPercentEncodingWithAllowedCharacters:
storeCloudConfigurationDetails:completion:
statusDirectoryURLCreateIfNeeded:
statusDetails
statusCode
sortedArrayUsingSelector:
sortedArrayUsingDescriptors:
sortUsingSelector:
sortDescriptorWithKey:ascending:
shutdown
sharedConnection
sharedConfiguration
setWithSet:
setWithObjects:
setWithObject:
setWithCapacity:
setWithArray:
setValue:forKeyPath:
setValue:forHTTPHeaderField:
setURL:
setType:
setTransactionAuthor:
setTimeZone:
setSubscription:
setStoreDescription:
setStatusDetails:
setStatus:
setState:
setSourceType:
setSourceServerToken:
setSourceIdentifier:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setServerToken:
setServerRetryAfterDate:
setResultType:
setResult:
setRequired:
setRemoteObjectInterface:
setRelationshipKeyPathsForPrefetching:
setReferralCount:
setReferralBaseURL:
setReasons:
setQueryItems:
setQualityOfService:
setPushTopic:
setPushEnvironment:
setPropertiesToFetch:
setProperties:
setPrimitiveValue:forKey:
setPreregistered:
setPredicateStatusKeys:
setPredicateDescription_:
setPredicate:
setPersonaIdentifier:
setPersistentStoreDescriptions:
setPayload:
setOption:forKey:
setObject:forKeyedSubscript:
setNumberOfConsecutiveFailures:
setNumberOfConsecutiveErrors:
setNumberOfConsecutiveAuthErrors:
setName:
setModifiedDate:
setMetadata:forPersistentStore:
setMergePolicy:
setMaxConcurrentOperationCount:
setManagementScope:
setLocale:
setLocalRetryAfterDate:
setLastReceivedServerTokensTimestamp:
setLastReceivedServerTokensFromServerTimestamp:
setLastReceivedPushTimestamp:
setLastReceivedDeclarationsToken:
setLastReceivedDate:
setLastReceivedCommandToken:
setLastProcessedDeclarationsToken:
setLastAcknowledgedDate:
setKeyPath:
setIncludesPendingChanges:
setInactiveReasons_:
setHTTPMethod:
setHTTPBody:
setFetchLimit:
setExportedObject:
setExportedInterface:
setErrorState:
setEnrollmentType:
setEnrollmentToken:
setEnrolled:
setEnabledTopics:ignoredTopics:
setDictionary:
setDeclarationType:
setDateFormat:
setConfigurationReferences:
setConfigurationIdentifier:
setConfiguration:
setConduitConfig:
setChosenAuthenticationScheme:
setCheckOutOnRemove:
setCapabilitiesVersionHash:
setByAddingObjectsFromSet:
setBootstrapURI:
setBaseURL:
setAutomaticallyMergesChangesFromParent:
setAuthenticationCredential:
setAssetReferences:
setAssetIdentifier:
setAsset:
setAllHTTPHeaderFields:
setActive:
setActivation:
setAccountIdentifier:
sessionWithConfiguration:delegate:delegateQueue:
serverTrust
serializeWithType:
serializeJSONDictionary:fileURL:error:
serializeAsDataWithType:error:
serialNumber
scheme
scheduleWithBlock:
saveAccount:withCompletionHandler:
save:
rollback
rm_setManagementSourceIdentifier:
rm_setEnrollmentToken:
rm_remoteManagementAccountForIdentifier:
rm_isAccountSchemeTest
rm_isAccountSchemeMAID
rm_isAccountSchemeBearer
rm_iCloudAccountForRemoteManagingAccountWithAltDSID:
rm_enrollmentURL
rm_defaultStore
rm_bearerToken
rm_altDSID
rm_accountScheme
rm_DSID
retrieveCloudConfigurationDetailsCompletionBlock:
resume
responseSyncTokens
responseStatusItems
responseServerToken
responseReferralBaseURL
responsePushTopic
responsePushEnvironment
responseManagement
responseIdentifier
responseDeclarationsToken
responseDeclarations
responseConfigurations
responseCode
responseAssets
responseActivations
resolveAs
requestWithURL:cachePolicy:timeoutInterval:
requestWithURL:
requestWithStatusItems:errors:
requestWithEnrollmentToken:statusItems:
repeats
removeStatusSubscriptionItemsObject:
removeObserverForNotification:
removeObjectsInArray:
removeObjectForKey:
removeObject:
removeLastObject
removeItemAtURL:error:
removeItemAtPath:error:
removeAllObjects
regularExpressionWithPattern:options:error:
registeredIdentifier
registerForDistributedNotifications:
registerForDarwinNotifications:
refreshDetailsFromDisk
reasonWithCode:description:underlyingError:
reason
rangeOfString:
rangeAtIndex:
queryParameters
queryItemWithName:value:
qaMode
publicToken
protectionSpace
propertyListWithStream:options:format:error:
propertyListWithData:options:format:error:
propertiesByName
primitiveValueForKey:
predicateWithFormat:argumentArray:
predicateWithFormat:
predicateWithBlock:
predicateFormat
postNotificationName:object:userInfo:options:
postNotificationName:object:userInfo:
persistentStores
persistentStoreURLCreateIfNeeded:
persistentStoreDescriptionWithURL:
persistentStoreCoordinator
permissiveURLSchemes
performBlockUnderLock:
performBlockAndWait:
payloadStatusItems
payloadStandardConfigurations
payloadSize
payloadReturnStatus
payloadPredicate
payloadName
payloadHashSHA256
payloadEcho
payloadDataURL
payloadContentType
payloadANY
pathExtension
pathComponents
path
outputStreamWithURL:append:
originalRequest
orPredicateWithSubpredicates:
operatorType
operatingSystemVersion
operatingSystemMarketingName
operatingSystemBuildVersion
operatingSystem
open
oldBaseDirectoryURLInSystemDomain
objectWithID:
objectID
objectForKeyedSubscript:
objectForKey:
objectForInfoDictionaryKey:
objectAtIndexedSubscript:
object
numberWithUnsignedLongLong:
numberWithShort:
numberWithLongLong:
numberWithInteger:
numberWithInt:
numberWithBool:
null
newSharedLockWithDescription:
newInterface
newDeclarationKeyWithSubscriberIdentifier:storeIdentifier:declarationIdentifier:declarationServerToken:
newBackgroundContext
mutableCopy
moveItemAtURL:toURL:error:
modelMarketingName
modelIdentifier
modelFamily
minusSet:
migrationStatusFileURLCreateIfNeeded:
metadataForPersistentStore:
messageSyncTokens
messageEnrollmentToken
matchesInString:options:range:
managementScope
managedObjectContext
managedObjectClassName
longLongValue
locked
lockWhenCondition:
lock
localizedStringForStatusCode:
localizedFailureReason
localizedDescription
localeWithLocaleIdentifier:
loadPersistentStoresWithCompletionHandler:
loadData:serializationType:error:
load:serializationType:error:
length
lastPathComponent
lastObject
isSharediPad
isKindOfEntity:
isInserted
isHTTPConduitEnabled
isFileConduitEnabled
condition
isEqualToSet:
isEqualToNumber:
isEqualToDictionary:
isEqualToDate:
isEnabled
isDeviceChannelEnabled
invalidate
interval
intersectSet:
interfaceWithProtocol:
integerValue
intValue
installedMDMProfileIdentifier
inputStreamWithURL:
initWithType:identifier:serverToken:content:channel:assetByIdentifier:
initWithType:identifier:serverToken:content:channel:
initWithType:identifier:accountIdentifier:accountDescription:organizationDescription:enrollmentURL:enrollmentToken:isEnrolled:
initWithServiceName:
initWithName:managedObjectModel:
initWithMachServiceName:
initWithLocaleIdentifier:
initWithIdentifier:type:scope:name:description:enrollmentURL:accountIdentifier:defaultToInteractive:dataSeparated:personaIdentifier:
initWithIdentifier:
initWithFile:
initWithEnvironmentName:namedDelegatePort:queue:
initWithData:encoding:
initWithData:
initWithContentsOfURL:
initWithCondition:
initWithCapacity:
initWithBase64EncodedString:options:
initWithAuthenticationScheme:properties:
infoDictionary
identityDirectoryURLCreateIfNeeded:
httpLoggingDirectoryURLCreateIfNeeded:
hasSuffix:
hasPrefix:
hasChanges
getResourceValue:forKey:error:
getBytes:range:
firstObject
finishTasksAndInvalidate
filteredSetUsingPredicate:
filteredArrayUsingPredicate:
filterUsingPredicate:
fileURLWithPathComponents:
fileHandleForWritingToURL:error:
fileExistsAtPath:isDirectory:
fetchRequest
fetchHistoryAfterToken:
fetchDataAtURL:completionHandler:
expressionType
existingObjectWithID:error:
executeRequestForEndpoint:channelType:requestData:completionHandler:
executeRequest:error:
executeFetchRequest:error:
execute:
exceptionWithName:reason:userInfo:
evaluateWithObject:
errorWithDomain:code:userInfo:
ephemeralSessionConfiguration
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
entityName
entity
enrollmentURL
encodeObject:forKey:
downloadURL
downloadTaskWithRequest:completionHandler:
domain
dmc_isAccountSchemeSharediPad
distantPast
didChangeValueForKey:
didAccessValueForKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithDictionary:
dictionaryWithContentsOfURL:error:
dictionaryWithContentsOfURL:
dictionaryWithCapacity:
dictionary
dictKeys
deserializeJSONDictionaryAtFileURL:error:
descriptionWithServiceDictionary:
descriptionWithEventsDictionary:
deleteObject:
defaultSessionConfiguration
defaultManager
defaultCenter
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
declarationServerToken
declarationManifestWithDeclarations:
declarationIdentifier
debounceTimerWithMinimumInterval:maximumInterval:delegate:identifier:
dateWithTimeIntervalSinceNow:
dateFromString:
date
dataWithJSONObject:options:error:
dataWithContentsOfURL:options:error:
dataVaultDirectoryURLCreateIfNeeded:
dataUsingEncoding:
dataTaskWithRequest:completionHandler:
data
darwinNotifier
currentPersistentHistoryTokenFromStores:
currentDevice
credentialForTrust:
createUnsupportedStatusValueErrorWithKeyPath:
createUnsupportedAuthenticationSchemeErrorWithScheme:
createUnhandledContentTypeErrorWithContentType:
createUnableToParsePredicateErrorWithFormat:reason:
createUnableToParsePredicateErrorWithCustomOperator:predicateFormat:
createUnableToEvaluatePredicateErrorWithFormat:reason:
createTooManyReferralsError
createTooManyFailedAuthenticationsError
createTooManyDeviceManagementSourcesError
createStatePreventsSyncingError
createNotImplementedErrorForFeature:
createMultipleValidationErrorOrReturnTheSingleErrorWithErrors:
createMultipleErrorOrReturnTheSingleErrorWithErrors:
createMissingReferralURLError
createMissingMandatoryPropertyErrorWithPropertyNamed:onObject:
createMismatchedValuesErrorForPropertyNamed:onObject:expected:actual:
createManagementSourceNotFoundErrorWithIdentifier:
createManagementSourceAlreadyExistsErrorWithURI:
createManagementSourceAlreadyExistsErrorWithAccountIdentifier:
createMDMRequestInvalid:
createInternalError
createIncorrectPayloadTypeErrorWithExpectedType:actualType:
createHTTPErrorWithStatusCode:reason:
createFileAtPath:contents:attributes:
createFeatureDisabledError:
createDisallowedStatusValueErrorWithKeyPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDeviceIdentityNotFoundError
createDeclarationNotFoundErrorWithIdentifier:
createCouldNotParseURLErrorWithString:
createConnectionNotEntitledWithName:
createCannotChangeValueErrorForPropertyNamed:onObject:
createBootstrapURINotFound
createAssetSizeCannotBeVerifiedError
createAssetInvalidURLError:
createAssetInvalidError:
createAssetHashCannotBeVerifiedError
createAssetContentTypeCannotBeVerifiedError
createAssetCannotProcessFileErrorWithUnderlyingError:
createAssetCannotBeDownloadedErrorWithUnderlyingError:
createAlreadyEnrolledInMDMv1Error
createAccountMissingErrorWithIdentifier:
countByEnumeratingWithState:objects:count:
count
copy
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contentsOfDirectoryAtPath:error:
content
containsValueForKey:
containsObject:
configureSandbox
daemon
T@"NSObject<OS_os_log>",R
activationEngine
_predicateStatusItemDidChange:
triggerAggregatingTimerAction
reconcile:
_deleteDeclarationsThatAreNoLongerNeeded:
getDeclarationsMarkedForRemovalFromFetchRequest:managementSource:
deleteObjects:managementSourceIdentifier:removeStatus:
_attachConfigurationReferences:
_attachAssetReferences:
_processManagementProperties:
_processAllDeclarations:
_checkPredicateStatusKeysForActivations:managementSource:
debouncer
setDebouncer:
_debouncer
T@"RMDebounceTimer",&,N,V_debouncer
reportDetails
predicateDescription
setPredicateDescription:
predicateDescription_
T@"NSData",&,D,N
configurationReferences
T@"NSSet",&,D,N
T@"RMPredicateDescription",&,N
state
T@"RMActivationPayloadState",&,D,N
caseInsensitiveCompare:
loadPayload:error:
failedLoadingWithError:
setIdentifier:
setLoadState:
setManagementSource:
T@"NSString",C,N
Ts,N
T@"RMManagementSource",&,N
T@"NSData",R,C,N
T@,R,N
inactiveReasons
setInactiveReasons:
inactiveReasons_
T@"NSArray",C,N
assetReferences
prefetch
TB,D,N
T@"RMAssetPayloadState",&,D,N
assetIdentifier
asset
T@"RMAssetPayload",&,D,N
error
T@"NSDictionary",&,D,N
retryAfterDate
T@"NSDate",C,D,N
Ts,D,N
deviceAuthenticationCredential
genericAuthenticationCredential
_setAppleIDContext:
_prepareSchemeMAIDURLRequest:error:
_prepareSchemeMAIDTask:error:
_appleIDContext
updatePropertiesForAccountIdentifier:afterFailure:
_updateTestPropertiesAccountIdentifier:afterFailure:
_updateBearerPropertiesAccountIdentifier:afterFailure:
_updateMAIDPropertiesAccountIdentifier:afterFailure:
_createAuthenticationParameters
init
capabilitiesForEnrollmentType:scope:protocolType:
capabilitiesByCapabilitiesType
_clientCapabilitiesModelForEnrollmentType:scope:protocolType:
_supportedPayloadsForEnrollmentType:scope:protocolType:
_supportedActivationsForEnrollmentType:scope:protocolType:
_supportedAssetsForEnrollmentType:scope:protocolType:
_supportedConfigurationsForEnrollmentType:scope:protocolType:
_supportedManagementForEnrollmentType:scope:protocolType:
_supportedStatusItemsForEnrollmentType:scope:protocolType:
_filterAccountsWithScope:
T@"NSMutableDictionary",R,N
initWithClientCapabilitiesModel:
status
versionHash
.cxx_destruct
_status
_versionHash
T@"RMModelStatusManagementClientCapabilities",R,N,V_status
T@"NSString",R,N,V_versionHash
client
_makeConduitWithManagementSourceObjectID:inContext:
conduitNeedsToSendStatusForKeyPaths:
statusEngineHasUnacknowledgedSubscription:
initWithManagementSourceObjectID:managementSourceIdentifier:statusQuerier:persistentContainer:
initWithConduit:activationEngine:statusEngine:managementSourceIdentifier:
enrollWithCompletionHandler:
reenrollWithCompletionHandler:
_syncConduitOnlyIfNeeded:completionHandler:
queryForStatusSubscriptionsWithIdentifiers:
sendStatusForSubscriptionsWithIdentifiers:completionHandler:
_sendStatusQueryResultIfNeeded:completionHandler:
_haltSyncing
_handleConduitError
_processConduitErrorState:
_setNeedsSyncing:
_syncIfNeeded
conduit
setConduit:
setActivationEngine:
statusEngine
setStatusEngine:
operationQueue
setOperationQueue:
_needsSyncingLock
_syncLock
_needsSyncing
_managementSourceIdentifier
_conduit
_activationEngine
_statusEngine
_operationQueue
T@"NSString",R,N,V_managementSourceIdentifier
T@"<RMConduit>",&,N,V_conduit
T@"RMActivationEngine",&,N,V_activationEngine
T@"RMStatusEngine",&,N,V_statusEngine
T@"NSOperationQueue",&,N,V_operationQueue
T@"<RMClientDelegate>",W,N,V_delegate
clientCapabilitiesController
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:error:
queryForUnacknowledgedStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:error:
supportedKeyPaths
T@"NSSet",R,N
T@"RMClientCapabilitiesController",R,N
initWithSubscribedStatusKeyPathUpdater:
_notifyChangesIfNeeded
subscribedStatusUpdater
setSubscribedStatusUpdater:
_subscribedStatusUpdater
T@"RMSubscribedStatusKeyPathUpdater",&,N,V_subscribedStatusUpdater
clientController
sharedController
startListeningForNotifications
_shouldRegisterForCloudConfigAvailableNotification
lockStateDidChange:
clientNeedsToReenrollWithManagementSourceIdentifier:
clientNeedsToUnenrollWithManagementSourceIdentifier:
T@"RMClientController",R,N
initWithPersistentContainer:context:
_validateManagementSources
_removeInvalidManagementChannels:
_startListeningForNotifications
_registerForCloudConfigAvailableNotificationIfNeeded
_checkCloudConfigAsync:
_checkCloudConfig
_checkForMandatoryDeviceEnrollmentWithCompletionHandler:
_makeClientWithManagementSourceObjectID:managementSourceIdentifier:persistentContainer:
_unenrollAndReenrollIfDEP:
_receivedMDMv1UnenrollNotification
_syncMDMv1ManagementSourcesWithUnenroll:
_hasMDMv1ManagementForManagingProfileIdentifier:
enrollDeviceChannelWithURI:completionHandler:
enrollUserChannelWithAccountIdentifier:completionHandler:
enrollViaMDMWithEnrollmentType:uri:accountIdentifier:personaIdentifier:completionHandler:
reenrollWithIdentifier:completionHandler:
_enrollAccount:fromStore:completionHandler:
_bootstrapURIForAccount:
_genericCredentialForAccount:fromStore:
_didFailToEnrollClientForManagementObjectID:
_didEnrollClient:conduitType:managementSourceObjectID:account:accountStore:completionHandler:
unenrollWithIdentifier:completionHandler:
_didUnenrollClientWithIdentifier:error:
deviceChannelEnrollmentExistsWithCompletionHandler:
managementChannelWithAccountIdentifier:completionHandler:
managementChannelWithEnrollmentURL:completionHandler:
managementChannelsChanged
syncWithIdentifier:completionHandler:
syncAllManagementSourcesWithCompletionHandler:
updateWithIdentifier:pushMessage:completionHandler:
updateWithIdentifier:tokensResponse:completionHandler:
sendStatusData:toManagementSourceWithIdentifier:completionHandler:
queryForStatusSubscriptionsWithIdentifiers:fromManagementSourceWithIdentifier:completionHandler:
sendStatusForSubscriptionsWithIdentifiers:toManagementSourceWithIdentifier:completionHandler:
_clientWithIdentifier:
_canProcessClientStateChanges:
_completedClientStateChanges:
dispatchQueue
setDispatchQueue:
lockStateListener
processingClientStateChanges
setProcessingClientStateChanges:
clientByManagementSourceIdentifier
_cloudConfigLock
_dispatchQueue
_lockStateListener
_processingClientStateChanges
_clientByManagementSourceIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"RMDeviceLockStateListener",R,N,V_lockStateListener
T@"NSMutableSet",&,N,V_processingClientStateChanges
T@"NSMutableDictionary",R,N,V_clientByManagementSourceIdentifier
cloudConfigController
cloudConfigEnrollmentURL
cloudConfigEnrollmentURLWithUpdateFromServer
_enrollmentURLFromUpdatedCloudConfig
_enrollmentURLFromCloudConfig:
_updatedCloudConfig
commandEngine
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
rm_executeRequestOnBehalfOfManagementChannel:completionHandler:
rm_requestExecutesWithoutReturning
initWithManagementSourceObjectID:context:
syncWithCompletionHandler:
_processCommand:
_executeCommand:managementChannel:error:
_fetchCommand
_handleResultForCommand:status:result:reasons:unknownPayloadKeys:error:outError:
managementSourceObjectID
context
executingCommands
setExecutingCommands:
_executingCommands
_managementSourceObjectID
_context
T@"NSManagedObjectID",R,N,V_managementSourceObjectID
T@"NSManagedObjectContext",R,N,V_context
TB,N,V_executingCommands
validateForInsert:
validateForUpdate:
keyPathsForValuesAffectingManagementSourceIdentifier
managementSourceIdentifier
identifier
T@"NSString",C,D,N
managementSource
T@"RMManagementSource",&,D,N
T@"NSString",R,C,N
payload
T@"NSData",C,D,N
T@"RMCommandPayloadState",&,D,N
type
markQueued
markExecutedWithResult:reasons:unknownPayloadKeys:
markFailedWithError:reasons:
markPending
command
T@"RMCommandPayload",&,D,N
reasons
T@"NSArray",C,D,N
result
T@"NSDictionary",C,D,N
modifiedDate
lastReceivedCommandToken
lastReceivedDeclarationsToken
lastReceivedPushTimestamp
lastReceivedServerTokensTimestamp
T@"RMConduitState",&,D,N
enrollmentToken
lastProcessedCommandToken
lastProcessedDeclarationsToken
lastReceivedServerTokensFromServerTimestamp
configurationEventStreamSubscription
applyChangedConfigurationsTypes:
configurationTypes
T@"NSSet",R,C,N
initWithToken:configurationTypes:eventPublisher:
token
eventPublisher
setEventPublisher:
_identifier
_configurationTypes
_token
_eventPublisher
T@"NSObject<OS_xpc_event_publisher>",&,N,V_eventPublisher
TQ,R,N,V_token
T@"NSString",R,C,N,V_identifier
T@"NSSet",R,C,N,V_configurationTypes
T@"RMConfigurationPayloadState",&,D,N
activation
T@"RMActivationPayload",&,D,N
configuration
T@"RMConfigurationPayload",&,D,N
configurationIdentifier
required
active
TB,R,N
configurationPublisher
_managedObjectContextDidSave:
sharedConfigurationPublisher
start
_start
reprocessActiveConfigurations
initWithPersistentActiveIdentifiers:context:
_addEventStreamSubscriberWithSubscription:
_removeEventStreamSubscriberForToken:
_loadAllConfigurationSubscribersAllowingThemToCheckForChanges
_createInternalPlugins
_reprocessActiveConfigurations
_notifyChangedConfigurationsIfNeeded
_notifyChangedConfigurationsForTypes:
_notifySubscribersWithConfigurationTypes:
setContext:
persistentActiveIdentifiers
setPersistentActiveIdentifiers:
plugins
setPlugins:
eventStreamSubscriptionByToken
setEventStreamSubscriptionByToken:
delegate
setDelegate:
_startLock
_notificationLock
_pluginsLock
_started
_persistentActiveIdentifiers
_plugins
_eventStreamSubscriptionByToken
_delegate
T@"NSManagedObjectContext",&,N,V_context
T@"RMPersistentActiveIdentifiers",&,N,V_persistentActiveIdentifiers
T@"NSMutableArray",&,N,V_plugins
T@"NSMutableDictionary",&,N,V_eventStreamSubscriptionByToken
T@"<RMConfigurationPublisherDelegate>",W,N,V_delegate
configurationQuerier
initWithPersistentContainer:
activeConfigurationsByTypeForTypes:error:
activeConfigurationsByTypeForTypes:managementSourceIdentifier:error:
_activeConfigurationsByTypeForTypes:managementSourceIdentifier:error:
persistentContainer
_persistentContainer
T@"NSPersistentContainer",R,N,V_persistentContainer
configurationStatusArchiver
statusForChannel:declarationIdentifier:serverToken:
persistStatusForStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:validity:reasons:error:
removeStatusForStoreIdentifier:declarationIdentifier:declarationServerToken:error:
removeStatusForStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:error:
removeAllStatusForStoreIdentifier:error:
fileSystemSafeCharacterSet
_getStatusDirectoryURLWithStoreIdentifier:declarationIdentifier:declarationServerToken:createIfNeeded:
_getStatusFileURLForStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:
_removeStatusFileDirectoryAtURL:error:
_removeStatusFileAndParentIfEmptyAtURL:error:
configurationSubscriberServicePlugin
fetchThenApplyConfigurationsWithScope:completionHandler:
publishStatusKeys:storeIdentifier:scope:completionHandler:
loadPlugins
_validPluginWithURL:
initWithURL:
initWithURL:identifier:configurationTypes:
_serviceConnection
_url
T@"NSURL",R,C,N,V_url
_currentLoadState
_validateLoadStateWithErrors:
declarationType
loadState
T@,&,D,N
copyWithZone:
initWithDeclarationPayload:
initWithManagementSourceIdentifier:type:identifier:serverToken:
isEqualToDeclarationIdentifier:
serverToken
_type
_serverToken
T@"NSString",R,C,N,V_managementSourceIdentifier
T@"NSString",R,C,N,V_type
T@"NSString",R,C,N,V_serverToken
deviceIdentity
sharedDeviceIdentity
deviceIdentityForTesting
T@"RMDeviceIdentity",R,N
_validDeviceIdentityCache
_cachePrivateKey:certificates:
deviceIdentityWithCompletionHandler:
_fetchDeviceIdentityCertificateWithCompletionHandler:
_issueDeviceIdentityCertificateWithCompletionHandler:
_fetchOrCreateSelfSignedCertificateWithCompletionHandler:
_copyPersistedIdentityWithFileName:isBAA:completionHandler:
_persistIdentityWithPrivateKey:certificateChain:fileName:isBAA:
privateKey
setPrivateKey:
certificates
setCertificates:
_identityLock
_privateKey
_certificates
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},N,V_privateKey
T@"NSArray",&,N,V_certificates
deviceLockState
newListenerWithDelegate:
didReceiveNotification:
initWithDelegate:
startListening
stopListening
_previousLockState
_listening
T@"<RMDeviceLockStateListenerDelegate>",W,N,V_delegate
externalStatusArchiver
statusWithStoreIdentifier:error:
persistStatusWithStoreIdentifier:status:error:
_getPublishedStatusFileURLWithStoreIdentifier:
externalStatusPublisher
T@"RMExternalStatusPublisher",R,N
_loadAllStatusPublishers
allNotifications
listenToNotificationsForAllKeyPaths
listenToNotificationsForSubscribedKeyPaths:
_queryForFilteredStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:error:
statusForChannel:error:
_notifyChangesWithStoreIdentifier:statusKeyPaths:
_fetchSubscribedStatusKeyPaths
_buildPredicateStatusKeyPaths
_mergeOldStatus:newStatus:changedStatusKeyPaths:
_mergeOldArrayValue:oldValueMetadata:newValue:completionHandler:
_filteredArray:metadata:lastAcknowledgedDate:
_buildDictionaryFromArrayValue:
persistLock
XPCEventPublisher
setXPCEventPublisher:
publisherByNotification
setPublisherByNotification:
notificationsByStatusKey
setNotificationsByStatusKey:
predicateStatusKeysByStoreIdentifier
setPredicateStatusKeysByStoreIdentifier:
_persistLock
_XPCEventPublisher
_publisherByNotification
_notificationsByStatusKey
_predicateStatusKeysByStoreIdentifier
T@"RMSharedLock",R,N,V_persistLock
T@"NSObject<OS_xpc_event_publisher>",&,N,V_XPCEventPublisher
T@"NSArray",C,N,V_plugins
T@"NSDictionary",&,N,V_publisherByNotification
T@"NSDictionary",&,N,V_notificationsByStatusKey
T@"NSDictionary",&,N,V_predicateStatusKeysByStoreIdentifier
T@"NSArray",R,N
maidLongLivedToken
overrideCloudConfig
testOrganizationID
fileConduit
_prepareDirectoryWithURL:error:
_syncWithManagementSource:onlyIfNeeded:error:
_syncDeclarationsWithManagementSource:error:
_statusWritingLock
T@"<RMFileConduitDelegate>",W,N,V_delegate
T@"RMFileConduitState",&,D,N
conduitConfig
T@"RMFileConduitConfig",&,D,N
httpConduit
prepareURLRequest:error:
prepareTask:error:
conduitNeedsToSync:
userAgent
_generateEnrollmentToken
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithManagementSourceObjectID:inContext:
statusItemsToImplicitlySubscribeTo
statusItemsToSendDuringEnrollment
enrollWithStatusItems:completionHandler:
unenrollWithCompletionHandler:
startWithCompletionHandler:
isSyncAllowed
syncIfNeededWithCompletionHandler:
updateWithPushMessage:completionHandler:
updateWithTokensResponse:completionHandler:
sendStatusData:completionHandler:
errorState
T@"<RMConduitDelegate>",W,N
persistentHistoryNotifier:isChangeInteresting:stop:
persistentHistoryNotifier:hasChanges:
T@"NSString",R,N
initWithManagementSourceObjectID:inContext:session:
_startObservers
_stopObservers
_resumeEnrollmentTaskForRequest:enrollmentToken:completionHandler:
_didReceiveEnrollReferralWithOriginalRequest:responsePayload:response:error:completionHandler:
_didFinishEnrollingWithResponsePayload:response:error:completionHandler:
_didFinishUnenrollingToldRemote:completionHandler:
_fetchTokensOnlyIfNeeded:completionHandler:
_didFinishFetchingServerTokens:response:error:completionHandler:
_syncOnlyIfNeeded:completionHandler:
_updateWithSyncTokens:completionHandler:
_fetchDeclarationItemsOnlyIfNeeded:completionHandler:
_didFinishFetchingDeclarationItems:response:error:lastReceivedPushTimestamp:completionHandler:
_processDeclarationItemsWithContext:infos:declarationItemClass:declarationItemKeyPath:
_fetchPartialObjectsWithCompletionHandler:
_fetchNextObjectOfClass:endpoint:completionHandler:
_didFinishFetchingObject:objectID:class:endpoint:response:error:completionHandler:
_didFinishSendingStatusWithResponse:error:completionHandler:
_processResponse:data:payloadClassByStatusCode:shouldRetry:error:
_processUnauthorizedResponse:shouldRetry:error:
_processErrorResponse:data:error:
_incrementConduitStateError:serverRetryAfter:error:
_makeURLRequestWithManagementSource:method:endpoint:
_authenticationCredential
_prepareURLRequest:withAuthenticationCredential:error:
_prepareTask:withAuthenticationCredential:error:
_setRequestPayload:onURLRequest:error:
_setBody:onURLRequest:
_resumeTaskForRequest:enrollmentToken:expectedResponseClassByStatusCode:completionHandler:
persistentHistoryNotifier
setPersistentHistoryNotifier:
session
setSession:
_persistentHistoryNotifier
_session
T@"RMPersistentHistoryNotifier",&,N,V_persistentHistoryNotifier
T@"NSURLSession",&,N,V_session
T@"<RMConduitDelegate>",W,N,V_delegate
T@"RMHTTPConduitState",&,D,N
httpconduitstate
baseURL
T@"NSURL",C,D,N
checkOutOnRemove
chosenAuthenticationScheme
localRetryAfterDate
numberOfConsecutiveAuthErrors
Tq,D,N
numberOfConsecutiveErrors
numberOfConsecutiveFailures
pushEnvironment
pushTopic
referralBaseURL
referralCount
serverRetryAfterDate
T@"RMHTTPConduitConfig",&,D,N
httpLogging
logHTTPDetailsForEnrollmentToken:request:response:responseData:responseError:
logHTTPDetailsForEnrollmentToken:request:response:responseURL:responseError:
_writeRequestLogToURL:request:response:responseData:responseError:
_logDirectoryForEnrollmentToken:
sharedArchiver
configurationPublisher:didChangePersistentActiveIdentifiers:
internalStatusPublisher:didChangeDeviceStatusByKeyPath:
internalStatusPublisher:didChangeCommandAndDeclarationsPersistentHistoryToken:
pushController:didChangePushTokenByEnvironmentName:
T@"RMInternalStateArchiver",R,N
setCommandAndDeclarationStatusPersistentHistoryToken:
commandAndDeclarationStatusPersistentHistoryToken
setDeviceStatusByKeyPath:
deviceStatusByKeyPath
setPushTokenByEnvironmentName:
pushTokenByEnvironmentName
_archiveObject:forKey:
_unarchiveObjectOfClass:forKey:
_unarchiveObjectOfClasses:forKey:
T@"NSPersistentHistoryToken",&,N
T@"NSDictionary",&,N
T@"RMPersistentActiveIdentifiers",&,N
internalStatusPublisher
sharedPublisher
restrictedKeyPaths
T@"RMInternalStatusPublisher",R,N
initWithInternalDeviceStatusByKeyPath:subscribedStatusKeyPathUpdater:persistentHistoryNotifier:context:
_notifyInternalDeviceStatusChangesIfNeeded
_queryForStatusWithKeyPaths:onBehalfOfManagementSource:
_internalDeviceStatusByKeyPathNotificationLock
_internalDeviceStatusByKeyPathLock
_internalDeviceStatusByKeyPath
T@"<RMInternalStatusPublisherDelegate>",W,N,V_delegate
dateFormatter
serializeValue:
T@"NSDateFormatter",R,N
initWithManagementSource:
protocolType
T@"RMManagementPayloadState",&,D,N
management
T@"RMManagementPayload",&,D,N
managementPropertiesArchiver
propertiesWithStoreIdentifier:error:
persistPropertiesWithStoreIdentifier:properties:error:
_getManagementPropertiesFileURLWithStoreIdentifier:
managementSettings
sharedSettings
reset
T@"RMManagementSettings",R,N
valueForKey:
removeValueForKey:
setValue:forKey:
_readCachedSettings
_writeCachedSettings
settingsURL
setSettingsURL:
cachedSettings
setCachedSettings:
_settingsLock
_settingsURL
_cachedSettings
T@"NSURL",&,N,V_settingsURL
T@"NSMutableDictionary",&,N,V_cachedSettings
awakeFromInsert
fetchRequestWithBootstrapURI:
fetchRequestWithBootstrapURI:enrollmentType:
fetchRequestWithDeviceChannel
fetchRequestWithIdentifier:
fetchRequestWithAccountIdentifier:
accountIdentifier
activations
assets
authenticationCredential
T@"RMAuthenticationCredential",&,D,N
bootstrapURI
capabilitiesVersionHash
T@"RMConduitConfig",&,D,N
configurations
enrolled
enrollmentType
T@"NSString",R,C,D,N
name
personaIdentifier
predicateStatusKeys
statusSubscriptions
storeDescription
subscribedStatusKeyPaths
mdmConduit
_statusItemsToSendOnceAfterEnrollment
_didFinishFetchingServerTokens:error:completionHandler:
_didFinishFetchingDeclarationItems:error:completionHandler:
_didFinishSendingStatusWithError:completionHandler:
_writeQAStatusData:completionHandler:
_processResponse:payloadClass:error:
_processErrorResponse:error:
_requestDataForPayload:error:
_executeRequestForEndpoint:requestData:expectedResponseClass:completionHandler:
T@"RMMDMConduitState",&,D,N
mdmconduitstate
T@"RMMDMConduitConfig",&,D,N
mdmv1Liaison
isEnrolledInMDMv1
isEnrollmentInMDMv1Restricted
remoteManagementDidEnroll
remoteManagementDidUnenroll
_didEnroll:
refreshState
enrolledInMDMv1
TB,R,N,GisEnrolledInMDMv1
enrollmentInMDMv1Restricted
TB,R,N,GisEnrollmentInMDMv1Restricted
migrationEngine
migrateOnStartupReturningError:
_actions
_readProcessedActionsReturningError:
_readMigrationStateReturningError:
_writeProcessedActions:error:
migrationStatusPath
_migrateStatusDirectory:error:
_migrateURL:
_configurationTypePrefixes
_transformName:
_moveDirectoryFromURL:toURL:error:
migrationSystemContainer
executeReturningError:
_okToMigrateFromURL:toURL:
_directoryExistsAtURL:
_migrateFromURL:toURL:error:
_moveDirectory:fromURL:toURL:error:
rm_payloadTypeName
failedWithUnknownPayloadKeys:
predicateEvaluatedToFalseForActivation:
predicateEvaluationFailedWithError:forActivation:
missingAssetIdentifiers:forConfiguration:
missingConfigurationIdentifiers:forActivation:
invalidPayloadForDeclaration:
missingStateForDeclaration:
configurationIsNotReferencedByAnActivation:
assetIsNotReferencedByConfiguration:
storeFromManagementSource:
periodicSync
dealloc
sharedInstance
forceSyncWithCompletion:
periodicSyncActivity
setPeriodicSyncActivity:
_periodicSyncActivity
T@"NSBackgroundActivityScheduler",&,N,V_periodicSyncActivity
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithConfigurationPayloads:
initWithUniqueIdentifiersByConfigurationType:
uniqueIdentifiersByConfigurationType
setUniqueIdentifiersByConfigurationType:
_uniqueIdentifiersByConfigurationType
T@"NSDictionary",&,N,V_uniqueIdentifiersByConfigurationType
persistentController
startPersistentController
_createLoadedPersistentContainerWithURL:
managedObjectModelURL
managedObjectModel
metadataOnPersistentStore:updateHandler:
archiveObject:forKey:intoMetadataForPersistentStore:
unarchiveObjectOfClass:forKey:fromMetadataForPersistentStore:
unarchiveObjectOfClasses:forKey:fromMetadataForPersistentStore:
currentPersistentHistoryTokenForContainer:
T@"NSURL",R,N
T@"NSManagedObjectModel",R,N
T@"RMPersistentController",R,N
sharedQueryQueue
initWithPersistentHistoryToken:context:
initWithContext:
_scheduleQueryForTransactions
_delayedQuery
_queryForTransactionsWithCompletion:
ignoredTransactionAuthors
setIgnoredTransactionAuthors:
interestingEntities
setInterestingEntities:
persistentHistoryToken
setPersistentHistoryToken:
shouldUsePersistentHistoryToken
hasStarted
setHasStarted:
queryNeeded
setQueryNeeded:
_queryCondition
_shouldUsePersistentHistoryToken
_hasStarted
_queryNeeded
_ignoredTransactionAuthors
_interestingEntities
_persistentHistoryToken
T@"NSPersistentHistoryToken",&,V_persistentHistoryToken
TB,R,N,V_shouldUsePersistentHistoryToken
TB,N,V_hasStarted
TB,N,V_queryNeeded
T@"<RMPersistentHistoryNotifierDelegate>",W,N,V_delegate
T@"NSSet",C,V_ignoredTransactionAuthors
T@"NSSet",C,V_interestingEntities
isExistingPersistentHistoryToken:fromSameStoreAsUpdatedToken:
insertedObjectIDs
updatedObjectIDs
updatedPropertiesByObjectID
deletedObjectIDs
tombstoneByObjectID
updateWithChange:
_updatePropertiesWithChange:
_insertedObjectIDs
_updatedObjectIDs
_updatedPropertiesByObjectID
_tombstoneByObjectID
T@"NSPersistentHistoryToken",C,N,V_persistentHistoryToken
T@"NSDictionary",R,C,N
initWithFormat:error:
_buildPredicateFromFormatString:error:
_buildPredicateWithVisitorFromFormatString:
evaluateWithStatus:properties:error:
_evaluateVersion1WithStatus:error:
_evaluateVersion2WithStatus:properties:error:
statusKeyPaths
properties
predicate
version
_statusKeyPaths
_properties
_predicate
_version
T@"NSPredicate",R,N,V_predicate
T@"NSNumber",R,N,V_version
T@"NSArray",R,C,V_statusKeyPaths
T@"NSArray",R,C,V_properties
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
initWithFormat:
_format
predicateStatusUpdater
T@"RMPredicateStatusUpdater",R,N
notifyPredicateStatusDidChangeForManagementSourceIdentifier:
_updatePredicateStatusWithFetchPredicate:
reasonWithError:
push
localizedCompare:
_connectionWithEnvironmentName:queue:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
T@"RMPushController",R,N
initWithPushTokenByEnvironmentName:subscribedStatusKeyPathUpdater:context:
_stop
_updateConnections
_notifyPushTokenDidChangeIfNeeded
_cachedPushTokenByEnvironment
_currentPushTokenByEnvironmentName
_pushEnvironmentNameForManagementChannel:error:
_updatePushReceivedWithTopic:enrollmentToken:syncTokens:forEnvironmentName:
_environmentNameForConnection:
subscribedStatusKeyPathUpdater
setSubscribedStatusKeyPathUpdater:
serialQueue
setSerialQueue:
_connectionByEnvironmentName
_pushTokenByEnvironmentNameLock
_pushTokenByEnvironmentName
_subscribedStatusKeyPathUpdater
_serialQueue
T@"RMSubscribedStatusKeyPathUpdater",&,N,V_subscribedStatusKeyPathUpdater
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"<RMPushControllerDelegate>",W,N,V_delegate
reportWithContext:allInformation:
managementSources
orphanedEntities
internalStateArchiveWithContext:
securityUtilities
serializeIdentityWithPrivateKey:certificateChain:error:
serializeBAAIdentityWithPrivateKey:certificateChain:error:
_serializeIdentityWithPrivateKey:certificateChain:privateKeyIsExportable:error:
deserializeIdentity:completionHandler:
deserializeBAAIdentity:completionHandler:
_deserializeIdentity:privateKeyIsExportable:completionHandler:
_serializePrivateKey:privateKeyIsExportable:
_deserializePrivateKey:privateKeyIsExportable:
deserializeCertificateChain:
serializeCertificateChain:
generateSelfSignedCertificateAndPrivateKeyWithID:completionHandler:
checkValidAfterWithCertificate:interval:
_statusDidChange:
initWithManagementSourceObjectID:statusQuerier:inContext:
_notifyDelegateOfUnacknowledgedStatusSubscriptionsIfNeeded
queryForUnacknowledgedStatusSubscriptions
queryForStatusSubscriptions
queryForStatusWithKeyPaths:
queryForStatusSubscriptionsWithKeyPaths:
clearAllLastAcknowledgedDate
_queryForStatusSubscriptionsReturningOnlyUnacknowledgedOnes:
_queryForStatusWithLastReceivedDateByKeyPath:lastAcknowledgedDateByKeyPath:
acknowledgeStatusSubscriptions:
setManagementSourceObjectID:
statusQuerier
setStatusQuerier:
_statusQuerier
T@"NSManagedObjectID",&,N,V_managementSourceObjectID
T@"RMStatusQuerier",&,N,V_statusQuerier
T@"<RMStatusEngineDelegate>",W,N,V_delegate
implicitlySubscribeToStatusKeyPaths:
subscribeToStatusKeyPathsThenStopAfterAcknowledged:
_subscribeToStatusKeyPaths:sourceType:
statusPublisherServicePlugin
publishStatusKeys:storeIdentifier:
statusKeysByNotification
statusKeys
initWithURL:identifier:statusKeysByNotification:
setStatusKeysByNotification:
setStatusKeys:
_statusKeysByNotification
_statusKeys
T@"NSDictionary",C,N,V_statusKeysByNotification
T@"NSSet",&,N,V_statusKeys
initWithStatusPublishers:
_findStatusPublishersForKeyPaths:
queryForStatusWithKeyPaths:onBehalfOfManagementChannel:
queryForUnacknowledgedStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:
_queryForFilteredStatusWithKeyPaths:lastAcknowledgedDateByKeyPath:onBehalfOfManagementChannel:
statusPublishers
_statusPublishers
T@"NSArray",R,N,V_statusPublishers
initWithStatusKeyPaths:statusByKeyPath:errorByKeyPath:
hasStatusToReport
statusByKeyPath
errorByKeyPath
_statusByKeyPath
_errorByKeyPath
T@"NSSet",R,C,N,V_statusKeyPaths
T@"NSDictionary",R,C,N,V_statusByKeyPath
T@"NSDictionary",R,C,N,V_errorByKeyPath
initWithStatusKeyPaths:lastReceivedDateByKeyPath:statusByKeyPath:errorByKeyPath:
initWithQueryResult:lastReceivedDateByKeyPath:
lastReceivedDateByKeyPath
_lastReceivedDateByKeyPath
T@"NSDictionary",R,C,N,V_lastReceivedDateByKeyPath
protocolStatusReport
T@"RMProtocolStatusReport",R,N
statusReporter
newStatusReporterWithStatusEngine:onlyIfNeeded:
initWithStatusEngine:onlyIfNeeded:
statusReportReturningError:
acknowledgeStatusSent
onlyIfNeeded
setOnlyIfNeeded:
statusQueryResult
setStatusQueryResult:
_onlyIfNeeded
_statusQueryResult
T@"RMStatusEngine",C,N,V_statusEngine
TB,N,V_onlyIfNeeded
T@"RMStatusSubscriptionQueryResult",&,N,V_statusQueryResult
sourceIdentifier
sourceType
sourceServerToken
items
prepareForDeletion
T@"NSPredicate",&,D,N
subscription
T@"RMStatusSubscription",&,D,N
statusSubscriptionsSubscriber
_updateStatusSubscriptionsForManagementSource:
_getStatusSubscriptionsFromManagementSource:
_getActiveStatusSubscriptionConfigurationsFromManagementSource:
_makeStatusSubscriptionWithManagementSource:declaration:context:
storeAssetResolver
resolveAsset:unresolvedAsset:isRMDM:completionHandler:
_dataURLForAsset:reference:queryParameters:
initWithURLSessionConfiguration:
initWithURLSession:
_resolveAsset:unresolvedAsset:reference:url:completionHandler:
_resolveMDMAsset:unresolvedAsset:reference:url:completionHandler:
_resolveAssetAsData:unresolvedAsset:reference:url:completionHandler:
_resolveAssetAsFile:unresolvedAsset:reference:url:completionHandler:
_dataTaskWithAsset:unresolvedAsset:reference:url:completionHandler:
_downloadTaskWithAsset:unresolvedAsset:reference:url:completionHandler:
_dictionaryForResponse:downloadedData:downloadedURL:
_createRequestWithURL:acceptType:
_userAgent
_processResponseWithAsset:reference:unresolvedAsset:url:response:error:completionHandler:
_validateAsset:reference:url:statusCode:headers:data:error:
completionQueue
setCompletionQueue:
URLSession
setURLSession:
_completionQueue
_URLSession
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
T@"NSURLSession",&,N,V_URLSession
payloadReference
storeClient
initWithManagementSourceObjectID:storeIdentifier:statusQuerier:persistentContainer:
initWithActivationEngine:statusEngine:storeIdentifier:
create
remove
_sendStatusOnlyIfNeeded:
_sendStatusData:
storeIdentifier
_storeIdentifier
T@"NSString",R,N,V_storeIdentifier
storeController
T@"RMStoreController",R,N
_startClientForSourceIdentifier:objectID:
_makeClientWithManagementSourceObjectID:storeIdentifier:persistentContainer:
_stopClientForIdentifier:
_clientForIdentifier:
observerStoresDidChange
_observerStoreWithIdentifier:error:
_providerStoreWithIdentifier:error:
_subscriberStoreWithIdentifier:error:
_managementSourceWithIdentifier:error:
_allManagementSourcesReturningError:
_addOptionsToManagementSource:options:
_declarationsForStoreIdentifier:declarationTypes:identifier:error:
_declarationsOfClass:managementSource:declarationTypes:identifier:error:
_activeDeclarationsForConfigurationTypes:storeIdentifier:error:
_payloadsForDeclarationIdentifier:managementSource:error:
_payloadsForPayloadClass:identifier:managementSource:error:
_newPayloadWithDeclaration:managementSource:error:
clientByIdentifier
setClientByIdentifier:
_clientByIdentifier
T@"NSMutableDictionary",&,N,V_clientByIdentifier
storeDataFetcher
fetchDataAtURL:isRMDM:completionHandler:
_fetchMDMDataAtURL:completionHandler:
_fetchDataAtURL:completionHandler:
_dataTaskWithURL:completionHandler:
_processResponseWithURL:response:error:completionHandler:
_validateResponseForURL:statusCode:headers:data:error:
storeTypeForManagementSource:
storeScope
isDataSeparatedStoreForManagementSource:
StoreXPCListenerDelegate
listener:shouldAcceptNewConnection:
initWithPersistentContainer:allowedToRun:
allowedToRun
_allowedToRun
TB,R,N,V_allowedToRun
_doesConnection:haveEntitlements:
_applicationIdentifierFromConnection:
_isConnection:fromApplicationIdentifier:
observerStoreWithIdentifier:completionHandler:
observerStoresWithCompletionHandler:
declarationWithIdentifier:storeIdentifier:completionHandler:
declarationsForStoreIdentifier:completionHandler:
declarationsWithTypes:storeIdentifier:completionHandler:
declarationManifestForStoreIdentifier:completionHandler:
setShouldInstallConfiguration:shouldInstall:storeIdentifier:completionHandler:
fetchDataAtURL:storeIdentifier:completionHandler:
createStoreWithType:defaultToInteractive:dataSeparated:options:completionHandler:
removeStoreWithIdentifier:completionHandler:
providerStoreWithIdentifier:completionHandler:
providerStoresWithCompletionHandler:
saveDeclaration:storeIdentifier:completionHandler:
deleteDeclarationWithIdentifier:storeIdentifier:completionHandler:
applyChangesForStoreIdentifier:completionHandler:
subscriberStoreWithIdentifier:completionHandler:
subscriberStoresWithCompletionHandler:
subscribedStoreDeclarationsWithTypes:completionHandler:
subscribedDeclarationsWithTypes:storeIdentifier:completionHandler:
resolveAsset:storeIdentifier:completionHandler:
writeStatusWithStoreIdentifier:declarationType:declarationIdentifier:declarationServerToken:sourceIdentifier:validity:reasons:completionHandler:
removeStatusWithStoreIdentifier:declarationIdentifier:declarationServerToken:sourceIdentifier:completionHandler:
publishStatusWithStoreIdentifier:status:completionHandler:
initWithXPCConnection:persistentContainer:
hasCommandLineEntitlement
hasObserverEntitlement
hasProviderEntitlement
hasSubscriberEntitlement
_hasCommandLineEntitlement
_hasObserverEntitlement
_hasProviderEntitlement
_hasSubscriberEntitlement
TB,R,N,V_hasCommandLineEntitlement
TB,R,N,V_hasObserverEntitlement
TB,R,N,V_hasProviderEntitlement
TB,R,N,V_hasSubscriberEntitlement
fetchRequestWithKeyPaths:
_validateManagementSourceWithErrors:
_validateSetOncePropertiesWithErrors:
lastAcknowledgedDate
T@"NSDate",&,D,N
lastReceivedDate
keyPath
T@"NSString",&,D,N
statusSubscriptionItems
statusNotificationCenter
sharedUpdater
T@"RMSubscribedStatusKeyPathUpdater",R,N
notifyStatusDidChangeForDeclarations
notifyStatusDidChangeForKeyPath:
notifyStatusDidChangeForKeyPaths:
notifyStatusDidChangeForKeyPathsByManagementSourceObjectID:
notifyStatusDidChangeForKeyPaths:managementSourceIdentifier:
_updateSubscribedStatusKeyPathsWithFetchPredicate:
setPersistentContainer:
T@"NSPersistentContainer",&,N,V_persistentContainer
XPCListenerDelegate
_doesConnection:haveEntitlement:
_managementChannelWithIdentifier:error:
_activeConfigurationsByTypeForTypes:persistentContainer:error:
sendStatusForKeyPaths:toManagementSourceWithIdentifier:completionHandler:
queryForStatusAndErrorsWithKeyPaths:fromManagementSourceWithIdentifier:completionHandler:
fetchConfigurationsWithTypes:completionHandler:
hasAccountChangesEntitlement
hasConfigurationSubscriberEntitlement
hasEnrollmentEntitlement
_hasAccountChangesEntitlement
_hasConfigurationSubscriberEntitlement
_hasEnrollmentEntitlement
TB,R,N,V_hasAccountChangesEntitlement
TB,R,N,V_hasConfigurationSubscriberEntitlement
TB,R,N,V_hasEnrollmentEntitlement
@16@0:8
v36@0:8@16@24B32
@"RMDebounceTimer"
v24@0:8@16
B32@0:8@"RMModelPayloadBase"16^@24
v24@0:8@"NSError"16
@"RMManagementSource"16@0:8
v24@0:8@"RMManagementSource"16
@"NSData"16@0:8
B32@0:8@"NSMutableURLRequest"16^@24
B32@0:8@"NSURLSessionTask"16^@24
@40@0:8q16q24Q32
B24@0:8q16
@24@0:8@16
v16@0:8
@"RMModelStatusManagementClientCapabilities"
@"NSString"
v24@0:8@"<RMConduit>"16
v24@0:8@"RMStatusEngine"16
v20@0:8s16
@"<RMClientDelegate>"
@"<RMConduit>"
@"RMActivationEngine"
@"RMStatusEngine"
@"NSOperationQueue"
@48@0:8@16@24@32^@40
@"NSDictionary"40@0:8@"NSSet"16@"RMManagementChannel"24^@32
@"NSDictionary"48@0:8@"NSSet"16@"NSDictionary"24@"RMManagementChannel"32^@40
@"RMSubscribedStatusKeyPathUpdater"
v24@0:8@"NSString"16
v56@0:8q16@24@32@40@?48
v64@0:8@16q24@32@40@48@?56
@"RMSharedLock"
@"NSObject<OS_dispatch_queue>"
@"RMDeviceLockStateListener"
@"NSMutableSet"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"RMManagementChannel"16@?<v@?@"NSString"s@"NSDictionary"@"NSArray"@"NSArray"@"NSError">24
@32@0:8@16@24
v24@0:8@?16
B40@0:8@16@24^@32
B68@0:8@16s24@28@36@44@52^@60
v20@0:8B16
@"NSManagedObjectID"
@"NSManagedObjectContext"
@"NSDictionary"16@0:8
B24@0:8^@16
v40@0:8@16@24@32
v32@0:8@16@24
v24@0:8@"NSSet"16
@"NSSet"16@0:8
@40@0:8Q16@24@32
@"NSSet"
@"NSObject<OS_xpc_event_publisher>"
v24@0:8Q16
@"NSObject"
@"RMPersistentActiveIdentifiers"
@"NSMutableArray"
@"NSMutableDictionary"
@"<RMConfigurationPublisherDelegate>"
@32@0:8@16^@24
@40@0:8@16@24^@32
@"NSPersistentContainer"
@40@0:8@16@24@32
B68@0:8@16@24@32@40B48@52^@60
B48@0:8@16@24@32^@40
B56@0:8@16@24@32@40^@48
B32@0:8@16^@24
@44@0:8@16@24@32B40
@48@0:8@16@24@32@40
v32@0:8q16@?24
v48@0:8@16@24q32@?40
v32@0:8q16@?<v@?@"NSError">24
v48@0:8@"NSArray"16@"NSString"24q32@?<v@?@"NSError">40
@"NSURL"
@24@0:8^{_NSZone=}16
v32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
v36@0:8@16B24@?28
v44@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24@32B40
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
v24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@"<RMDeviceLockStateListenerDelegate>"
B36@0:8@16B24^@28
@"<RMFileConduitDelegate>"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
s16@0:8
@32@0:8@"NSManagedObjectID"16@"NSManagedObjectContext"24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?>16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"<RMConduitDelegate>"16@0:8
v24@0:8@"<RMConduitDelegate>"16
B40@0:8@16@24^B32
B40@0:8@"RMPersistentHistoryNotifier"16@"NSPersistentHistoryChange"24^B32
v32@0:8@"RMPersistentHistoryNotifier"16@"RMPersistentHistoryNotifierChanges"24
v28@0:8B16@?20
v48@0:8@16@24#32@40
v40@0:8#16@24@?32
v72@0:8@16@24#32@40@48@56@?64
@56@0:8@16@24@32^B40^@48
B40@0:8@16^B24^@32
B36@0:8s16@20^@28
@"<RMConduitDelegate>"
@"RMPersistentHistoryNotifier"
@"NSURLSession"
v56@0:8@16@24@32@40@48
v32@0:8@"RMConfigurationPublisher"16@"RMPersistentActiveIdentifiers"24
v32@0:8@"RMInternalStatusPublisher"16@"NSDictionary"24
v32@0:8@"RMInternalStatusPublisher"16@"NSPersistentHistoryToken"24
v32@0:8@"RMPushController"16@"NSDictionary"24
@32@0:8#16@24
@"<RMInternalStatusPublisherDelegate>"
@28@0:8@16s24
@40@0:8@16#24^@32
v48@0:8@16@24#32@?40
@24@0:8^@16
@"NSBackgroundActivityScheduler"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSDictionary"
@40@0:8#16@24@32
@"NSConditionLock"
@"<RMPersistentHistoryNotifierDelegate>"
@"NSPersistentHistoryToken"
q40@0:8@16@24^@32
q32@0:8@16^@24
@"NSArray"
@"NSPredicate"
@"NSNumber"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<RMPushControllerDelegate>"
@40@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24^@32
@44@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24B32^@36
@28@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16B24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}28@0:8@16B24
B32@0:8^{__SecCertificate=}16d24
@20@0:8B16
@"<RMStatusEngineDelegate>"
@"RMStatusQuerier"
v28@0:8@16s24
v32@0:8@"NSSet"16@"NSString"24
@"RMStatusSubscriptionQueryResult"
v44@0:8@16@24B32@?36
@56@0:8@16@24@32@40@?48
v72@0:8@16@24@32@40@48@56@?64
B72@0:8@16@24@32@40@48@56^@64
@56@0:8#16@24@32@40^@48
@48@0:8#16@24@32^@40
@32@0:8@16@?24
q24@0:8@16
q16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@28@0:8@16B24
v40@0:8@16@24@?32
v44@0:8@16B24@28@?36
v48@0:8q16B24B28@32@?40
v76@0:8@16@24@32@40@48B56@60@?68
v56@0:8@16@24@32@40@?48
v32@0:8@"NSString"16@?<v@?@"RMObserverStore"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"RMModelDeclarationBase"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"RMDeclarationManifest"@"NSError">24
v44@0:8@"RMModelDeclarationBase"16B24@"NSString"28@?<v@?@"NSError">36
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v48@0:8q16B24B28@"NSDictionary"32@?<v@?@"RMProviderStore"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"RMProviderStore"@"NSError">24
v40@0:8@"RMModelDeclarationBase"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"RMSubscriberStore"@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSArray"@"NSDictionary"@"NSError">24
v40@0:8@"RMStoreUnresolvedAsset"16@"NSString"24@?<v@?@"RMStoreResolvedAsset"@"NSError">32
v76@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48B56@"NSArray"60@?<v@?@"NSError">68
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v56@0:8q16@"NSURL"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"NSError">48
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"RMManagementChannel"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
Starting: remotemanagementd
Starting remotemanagementd... uid %d euid %d
Crippled daemon, this feature is not available.
Temp %@
CoreData cannot be setup - daemon exiting.
Started remotemanagementd
Start remotemanagementd
Running as daemon
Migration failed - daemon exiting: %{public}@
registerHandlerForXPCNotifications
Syncing activation engine due to predicate change
Failed to sync activation engine due to predicate change: %{public}@
Sync'd activation engine due to predicate change
ActivationEngine: syncing
Syncing activation engine...
Updating activations and configurations...
Updated activations and configurations.
Failed to update activations and configurations: %{public}@
No changes to activations or configurations.
Synced activation engine...
Deleting activations, configurations, and assets that are no longer needed...
Failed to delete configurations.
Failed to delete activations.
Failed to delete assets.
Deleting activations (no status): %{public}@
Deleting configurations (and status): %{public}@
Deleting assets (and status): %{public}@
Unable to retrieve %@ ear marked for deletion: %@
Attaching configuration references...
Failed to attach configuration references.
No configuration references to attach.
Reattaching configuration reference for %@ to from %@ to %@...
Attaching configuration reference for %@ to %@...
Attached configuration references.
Attaching asset references...
Failed to attach asset references.
No asset references to attach.
Reattaching asset reference for %@ to from %@ to %@...
Attaching asset reference for %@ to %@...
Attached asset references.
Unable to deserialize management property declaration payload: %{public}@
Unable to persist management properties: %{public}@
Activation predicate status key values have changed
Updated predicate status keys.
Failed to update predicate status keys: %{public}@
Updating predicate status key values: %{public}@
Could not query for configuration references: %@
Could not query for asset references: %@
Unable to get eligible %@ by identifiers: %@
Unable to query eligible management properties: %{public}@
Unable to retrieve eligible %{public}@ to be evaluated, could not query for activations: %{public}@
Configuration (%@:%@) is missing assets: %@
Activation (%@:%@) is missing configurations: %@
%@ state changed to %@
Could not deserialize data for %{public}@: %{public}@
Could not serialize data for %{public}@: %{public}@
Signing request body with device identity
Device identity failure generating signature: %{public}@
Device identity failure generating certificate list: %{public}@
Device identity failure: %{public}@
Building signed request with device identity
Test token changed for %{public}@
Access token changed for RM account %{public}@
Unable to find idms account for RM account: %{public}@
Unable to find short lived token for idms account: %{public}@
Short lived token changed for RM account %{public}@
Unable to find iCloud account for RM account: %{public}@
Unable to find long lived token for iCloud account: %{public}@
Long lived token changed for RM account %{public}@
Client: Starting
Starting client...
Processing client error state on startup: %u
Started.
Client: Enrolling
Enrolling...
Enrolled.
Client: Re-enrolling
re-enrolling...
Client: Unenrolling
Unenrolling...
Unenrolled.
Client: Syncing
Failed to send status data: %{public}@
Sync %{public}@ finished
Successfully sent status data
Failed to sync with conduit: %{public}@
Successfully synced with conduit
Activation engine sync failed: %{public}@
Successfully synced with activation engine
Cannot sync due to client state not ready
Cannot sync due to client error state
Failed to sync conduit: %{public}@
Successfully sync'd conduit
Client: Updating via push message
Updating via push message...
Updating finished
Client: Updating via sync tokens
Updating via sync tokens...
Client: Sending arbitrary status
Cannot send status due to client state not ready
Cannot send status due to client error state
Sending arbitrary status...
Failed to send arbitrary status: %{public}@
Successfully sent arbitrary status
Client: querying for status subscriptions
Querying for status subscriptions with identifiers %{public}@...
Found status from status subscriptions with identifiers %{public}@
Client: sending status for subscriptions
Querying for status subscriptions with identifiers %{public}@ then sending status...
There was no status report to send.
Sending status report...
Could not serialize status: %{public}@
Handle client error state: %u
Conduit needs sync...
Conduit needs to send status items: %{public}@
Status engine needs sync...
Ignoring needs syncing.
Scheduling sync if needed...
Sync if needed already scheduled...
Syncing if needed...
Finished sync if needed.
Capabilities version hash changed: %{public}@
Unable to save update capabilities version hash: %{public}@
Capabilities version hash not changed
ClientController: starting
Starting client controller...
Unable to fetch management source objects: %{public}@
Found and deleting orphaned management source: %{public}@
Could not remove orphaned management sources: %{public}@
Started client controller.
ClientController: validating management sources
Starting to validate management sources...
Validating sources...
Could not find management sources: %{public}@
Invalid management source: %{public}@ for account: %{public}@
Removing invalid management channel %{public}@
Failed to unenroll with %{public}@: %{public}@
Waiting for invalid enrollments to unenroll...
Not registering for notification: %{public}@
ClientController: checking cloud config
Starting to check cloud config...
Checking cloud config...
Checked cloud config.
Forcing mandatory enrollment of device channel: %{public}@
Mandatory enrollment of device channel already established
Mandatory enrollment of device channel already established, but URLs are mismatched: %{public}@ vs %{public}@
Executing queued unenroll for client identifier %{public}@
Forced unenroll for client identifier %{public}@ failed: %{public}@
Forced unenroll for client identifier %{public}@
Mandatory device channel enrollment required: %{public}@
Unable to enroll device channel after server initiated unenroll: %{public}@
Mandatory device channel enrollment complete
No mandatory device channel enrollment required.
Queued unenroll for client %{public}@
ClientController: checking MDMv1 management sources
Starting to check MDMv1 management sources with unenroll %{public}@...
Syncing MDMv1 sources...
Invalid MDMv1 management source: %{public}@
Valid MDMv1 management source: %{public}@
Removing %lu MDMv1 management sources
ClientController: enrolling management source
Enrolling with device channel at %{public}@...
Failed to enroll device channel at %{public}@: feature disabled
Failed to enroll device channel at %{public}@: Already enrolled in MDMv1
Failed to enroll device channel at %{public}@: Unsupported scheme
Failed to enroll device channel at %{public}@: Unsupported feature
A device channel management source for %{public}@ already exists
Cannot enroll %{public}@ because there is an existing device based management source.
Failed to enroll device channel at %{public}@: %{public}@
A user channel management source for account %{public}@ already exists
Failed to enroll user channel: account missing %{public}@
ClientController: enrolling management source DDM
Enrolling DDM with enrollment type %ld, uri %{public}@
Failed to enroll DDM device channel with uri %{public}@: feature disabled
Failed to enroll DDM: not enrolled in MDMv1
Failed to enroll DDM at %{public}@: Incorrect scheme
A management source for %{public}@ already exists
ClientController: reenrolling
Reenrolling %{public}@...
Could not reenroll; could not find client for identifier: %{public}@
Error reenrolling: %{public}@ Will unenroll
Enrolling with user channel at %{public}@...
Failed to enroll user channel at %{public}@: Already enrolled in MDMv1
Failed to enroll user channel at %{public}@: Unsupported scheme
Failed to enroll user channel at %{public}@: Unsupported feature
Failed to enroll user channel at %{public}@: %{public}@
Failed to enroll user channel: invalid or missing enrollment URL for account: %{public}@
Failed to enroll user channel: unknown account scheme %{public}@ for account: %{public}@
Failed to create credential: unknown account scheme %{public}@ for account: %{public}@
Unable to save while removing %{public}@: %{public}@
Saving account...
Accounts finished saving.
Could not save management sources after enrollment: %{public}@
ClientController: unenrolling
Unenrolling %{public}@...
Could not unenroll; could not find client for identifier: %{public}@
Could not fetch unenrolled management source for %{public}@: %{public}@
Management source for %{public}@ disappeared before we could delete it.
Could not count enrolled management sources: %{public}@
Could not fetch management sources: %{public}@
ClientController: syncing
Syncing %{public}@...
Could not sync, could not find client for identifier: %{public}@
Could not sync identifier %{public}@: %{public}@
Synced identifier: %{public}@
Accounts synchronized.
ClientController: updating via push message
Updating via push message %{public}@...
Could not update, could not find client for identifier: %{public}@
ClientController: updating via sync tokens
Updating via sync tokens %{public}@...
ClientController: sending arbitrary status
Sending arbitrary status to %{public}@...
Could not send arbitrary status, could not find client for identifier: %{public}@
ClientController: query for status subscriptions
Querying for status subscriptions with identifiers %{public}@ from %{public}@...
Could not query for status subscriptions with identifiers %{public}@, could not find client for identifier: %{public}@
ClientController: sending specific status
Querying for status subscriptions with identifiers %{public}@ then sending to %{public}@...
Queuing re-enroll for client %{public}@
Ignoring re-enroll for client identifier %{public}@ because it is already being processed
Executing queued re-enroll for client identifier %{public}@
reenrollWithIdentifier %{public}@  error %{public}@
Queued re-enroll for client %{public}@
Queuing unenroll for client %{public}@
Ignoring unenroll for client identifier %{public}@ because it is already being processed
Unable to fetch device channel management source: %{public}@
Unable to fetch management source objects with uri %{public}@ and channel %d: %{public}@
Unable to fetch device management source objects: %{public}@
CloudConfig is not available
CloudConfig protocol version is not for us: %{public}@
CloudConfig server URL missing
CloudConfig server URL cannot be parsed: %{public}@
CloudConfig has an RM server configured: %{public}@
Using OverrideCloudConfig
Cannot update CloudConfig from server: %{public}@
Updated CloudConfig from server: %{public}@
Cannot store CloudConfig from server: %{public}@
Stored CloudConfig from server: %{public}@
CommandEngine: executing pending command
Starting command queue processing
Processing pending command
Pending command to process: %{public}@
Failed to initialize payload for command %{public}@: %{public}@
Failed to save context when processing command %{public}@: %{public}@
%{public}@ %{public}@ does not conform to %{public}@
No command to process
Command queue processing completed with error
Command queue processing completed with nothing to do
Executing command
Command queue processing is complete
Error fetching next command: %{public}@
CommandEngine: processing command result
Error fetching command %{public}@ to process its result: %{public}@
Missing command %{public}@ when processing result
Executed command: %{public}@, result: %d
Firing stream event with payload: %{public}@
Configuration event publisher action = %d, token = %llu, descriptor = %@
Configuration event publisher failed with an error: %{public}s
Configuration publisher has already started, ignoring start.
ConfigurationPublisher: Starting...
Starting configuration publisher...
Started configuration publisher.
Adding subscription for %llu: %{public}@
Added subscriber for %llu: %{public}@.
Couldn't add subscriber for %llu, token already exists: %{public}@.
Removing subscriber for %llu...
Removed subscriber for %llu: %{public}@.
Couldn't remove subscriber for %llu, it didn't exist.
ConfigurationPublisher: Loading configuration subscriber plugins...
Loading configuration subscribers XPC service plugins
Loading internal configuration subscribers plugins
Starting configuration subscriber for %{public}@...
Finished loading configuration subscriber plugins: %{public}@
Ignoring %{public}@, the publisher has not finish starting yet.
Notifying changed configuration types if needed...
Changed configuration types: %{public}@
Nothing has changed.
ConfigurationPublisher: notifying configuration subscribers
Notifying configuration subscribers with configurations of types: %{public}@
Notified configuration subscribers with configurations of types: %{public}@
ConfigurationPublisher: notifying XPC service plugins
Triggering configuration subscriber plugin: %{public}@
Unable to fetch active configurations: %{public}@
Can't fetch configurations for types %{public}@: %{public}@
Could not deserialize status: %{public}@
Could not deserialize status reason: %{public}@
Could not write status to disk %{public}@: %{public}@
Wrote status to disk %{public}@
Removed all store status %{public}@
Could not remove all store status %{public}@: %{public}@
No store status to remove %{public}@
Unable to create status directory at %{public}@: %{public}@
Removed status directory %{public}@
Could not remove status directory %{public}@: %{public}@
No status directory to remove %{public}@
Removed status %{public}@
Removed status parent directory %{public}@
Could not remove status parent directory %{public}@: %{public}@
Could not remove status %{public}@: %{public}@
No status to remove %{public}@
Found XPC service plugin: %{public}@
Ignoring XPC service plugin: %{public}@
Invalid XPC service plugin info dict: %{public}@
Created XPC service plugin: %{public}@ %{public}@ %{public}@
Failed XPC connection for configuration subscriber XPC service %{public}@: %{public}@
Failed to apply configurations for configuration subscriber XPC service %{public}@: %{public}@
Applied configurations for configuration subscriber XPC service: %{public}@
No in-memory cache...
Creating in-memory cache...
DeviceIdentity: retrieving
Retrieving device identity...
Could not get device identity: %{public}@
Did not get device identity, reference key is missing
Did not get device identity, incorrect number of certificates: %@
Retrieved device identity
Device identity not supported on this device: using self-signed certificate instead
Could not get self signed certificate public and/or private keys: %{public}@
Device lock state: started listening
Device lock state: current state: %{public}@
Device lock state: stopped listening
Device lock state notification
Device lock state changed to: %{public}@
Could not deserialize published status: %{public}@
Could not deserialize published status: invalid JSON objects
Could not serialize published status: %{public}@
Wrote published status to disk %{public}@
ExternalStatusPublisher: Starting...
Starting external status notifier...
Started external status notifier.
ExternalStatusPublisher: Loading XPC service plugins...
Loading status publisher XPC service plugins
Finished loading status publisher XPC service plugins: %{public}@
Subscribing to all key paths: %{public}@
Received status notification: %{public}@
No status publisher plugin for notification: %{public}@
Failed to query status for store: %{public}@ %{public}@
Persisting status for store: %{public}@
Persisted status for store: %{public}@ changed %{public}@
Failed to persist status for store: %{public}@
Unable to fetch subscribed status key paths: %{public}@
All predicate status key paths: %{public}@
FileConduit: starting
Started file conduit for %{public}@
FileConduit: enrolling
Enrolling with URI: %{public}@
Could not prepare bootstrap URL %{public}@: %{public}@
Enrolled with URI: %{public}@
FileConduit: unenrolling
Unenrolling identifier: %{public}@
Unable to remove management source %{public}@: %{public}@
Unenrolled identifier: %{public}@
FileConduit: forced syncing
FileConduit: syncing only if needed
Sync succeeded
Sync failed: %{public}@
Could not read declaration file data: %{public}@ %{public}@
Could not parse declaration from file data: %{public}@ %{public}@
Ignoring declaration file %{public}@ because identifier matches file %{public}@
Invalid type %{public}@ for declaration: %{public}@
Unable to load payload for declaration %{public}@: %{public}@
Marked for declaration deletion: %{public}@
Successfully synced data
Unable to sync data: %{public}@
Could not deserialize status report: %{public}@
Could not write status report: %{public}@
Could not deserialize status report. Missing StatusItem key %{public}@
Could not write declarations status: %{public}@
Could not deserialize overall status: %{public}@
Could not read overall status from %{public}@: %{public}@
Could not update overall status %{public}@: %{public}@
Updated overall status %{public}@
HTTPConduit: starting
Starting conduit...
Started HTTP conduit for %{public}@
HTTPConduit: enrolling
Enrolling conduit...
Failed to save conduit state during enrollment: %{public}@
Could not serialize request payload: %{public}@
Error while enrolling with a referral: %{public}@
Processing enrollment referral
Missing referral URL
Cannot parse referral URL value: %{public}@
Too many referrals
Could not process enrollment referral: %{public}@
Error while enrolling: %{public}@
Enroll response is missing
Unable to save while enrolling: %{public}@
Enrolled %{public}@: %{public}@
HTTPConduit: unenrolling
Unenrolling conduit...
Error while unenrolling: %{public}@
Unenrolled from URI: %{public}@
Unable to save while unenrolling: %{public}@
HTTPConduit: fetching server tokens
Fetching server tokens...
Tokens are up to date, ignoring fetch server tokens
Error while fetching server tokens: %{public}@
Unable to save server tokens: %{public}@
Successfully saved server tokens
HTTPConduit: forced syncing
HTTPConduit: syncing only if needed
Syncing%{public}@...
Unable to parse push message: %{public}@
Unable to parse sync tokens message: %{public}@
HTTPConduit: fetching declaration items
Fetching declaration items...
Last declarations token received matches last one processed; ignoring fetch declaration items
Error while fetching declaration items: %{public}@
Failed to save partial objects: %{public}@
Successfully saved partial object
Deleted: %{public}@
Marked for deletion: %{public}@
HTTPConduit: fetching next object from server
Fetching next %{public}@...
All %{public}@ downloaded
No more %{public}@ objects for %{public}@
Error while fetching object %{public}@ (%{public}@): %{public}@
Object with %{public}@ disappeared while filling in contents.
Error while processing fetched data for object %{public}@ (%{public}@): %{public}@
Fetched from URI: %{public}@
Unable to load payload into %{public}@: %{public}@
Unable to save fetched object %{public}@: %{public}@
Successfully saved object, fetching next one
HTTPConduit: sending status
Sending conduit status...
Error while sending status: %{public}@
Unable to save status state changes: %{public}@
Successfully sent status
Got back from HTTP: %ld
Unused Content-Type parameter: %{public}@
Schemes: %@
Did match supported scheme
Current credential scheme %{public}@ is not advertised by the server %{public}@
No authentication scheme currently being used. Setting new scheme: %{public}@
Too may failed authentication attempts: %lld
Refreshing account credentials for scheme: %{public}@
Previous authentication scheme %{public}@ not recognized. Setting new scheme: %{public}@
Could not process HTTP authentication: %{public}@
Unable to save while process error: %{public}@
Preparing URL request for %{public}@ %{public}@ (%{public}@)
Preparing task for %{public}@ %{public}@ (%{public}@)
>>>> %{public}@ %{public}@ (%{public}@)
<<<< %{public}@ %{public}@ (%{public}@): %{public}@
<<<< %{public}@ %{public}@ (%{public}@)
Retrying: %{public}@ %{public}@
Handling challenge: %@
Authentication method is server-trust
Valid server certificate
Server trust is not valid %@: %@
Invalid server certificate
Unsupported authentication method
Need to manually fetch Sync Tokens for first time
Need to manually fetch Sync Tokens
Declarations mismatch
Unable to search for partial objects of class %{public}@: %{public}@
WWWAuthenticate header: %@
JSON Error response is not an RMProtocolErrorResponse: %{public}@
Could not create HTTP request log file %@
Could not open HTTP request log file %@: %@
Could not write HTTP request headers to file %@: %@
Could not write HTTP request body to file %@: %@
Could not write HTTP response headers to file %@: %@
Could not write HTTP response body to file %@: %@
Could not create HTTP logs directory %@: %@
InternalStatusPublisher: Starting...
Starting internal status notifier...
Started internal status notifier.
Key %{public}@ changed from: %{public}@ to: %{public}@
Unable to save store metadata: %{public}@
Could not deserialize management properties: %{public}@
Could not serialize management properties: %{public}@
Wrote management properties to disk %{public}@
Unable to create status directory for store at %{public}@: %{public}@
Management settings cache does not currently exist
Failed to cache management settings: %{public}@
Failed to cache management settings - invalid property list type: %{public}@
Cached management settings: %{public}@
Failed to write management settings: %{public}@
Wrote management settings: %{public}@
MDMConduit: starting
Started MDM conduit for %{public}@
MDMConduit: enrolling
MDMConduit: unenrolling
MDMConduit: fetching server tokens
MDMConduit: forced syncing
MDMConduit: syncing only if needed
QA Mode: ignoring sync
MDMConduit: fetching declaration items
MDMConduit: fetching next object from server
MDMConduit: sending status
QA Mode: writing status data locally
Got back from MDM: %ld
applyRestrictionDictionary(%{public}@) failed: %{public}@
Refreshing rMDM state
Starting to migrate on startup
Processed migration actions: %{public}@
Configured migration actions: %{public}@
Already processed migration action: %{public}@
Processing migration action: %{public}@
Failed to process migration action: %{public}@ %{public}@
Processed migration action: %{public}@
Finished migrate on startup
Invalid migration data: %{public}@
Failed to read migration data: %{public}@
Failed to parse migration data: %{public}@
No migration data
Failed to write migration data: %{public}@
Wrote migration data
Ignoring migration - no status directory
Failed migration - cannot examine status directory: %{public}@ %{public}@
Ignoring status directory %{public}@
Migrated %{public}@ to %{public}@
Ignoring migration
Not OK to migrate: old database does not exist
Not OK to migrate: new database exists
Starting migration
Migration directory does not exist: %{public}@
Migrated %{public}@
Failed to remove migrated item %{public}@: %{public}@
Failed to migrate %{public}@: %{public}@
periodic sync repeats: %d, interval: %f
Could not sync all management sources: %{public}@
All management sources synchronized
Creating loaded persistent container at %{public}@...
Unable to load persistent store %{public}@: %{public}@...
Created loaded persistent container at %{public}@
Unable to archive %{public}@ for %{public}@: %{public}@
Unable to unarchive %{public}@ for %{public}@ %{public}@: %{public}@
Unexpected class %{public}@ for %{public}@
Stopped persistent history notifier (%p).
Persistent history notifier (%p) is already observing
Starting persistent history notifier
Starting persistent history notifier (%p)...
Started persistent history notifier (%p).
Managed object context (%p) did save for persistent history notifier (%p).
Persistent history notifier (%p) creating new query.
Persistent history notifier (%p) has pending query.
Persistent history notifier (%p) already running a query.
Persistent history notifier (%p) query complete, another is needed.
Persistent history notifier (%p) query complete.
Querying for transactions for persistent history notifier (%p).
Persistent history notifier (%p) processing transactions: %lu { authors = %@, entities = %@, old token = %@, new token = %@ }.
Persistent history notifier (%p) ignoring transaction from author %@
Unable to create predicate regular expression: %{public}@
Unable to parse 
%{public}@
: %{public}@
Invalid predicate description version: %{public}@
Unable to evaluate 
%{public}@
: %{public}@
Posting notification for management source: %{public}@
Unable to fetch for management sources for %{public}@: %{public}@
No management source matching %{public}@
PushController: starting
Push token for %{public}@ has been removed, ignoring change...
Push tokens have not changed, skipping notification...
Unable to fetch management sources for management channel (%{public}@): %{public}@
Push token received: %{public}@ in environment: %{public}@
Push notification received: %{public}@ in environment: %{public}@
Push notification missing message for topic: %{public}@ in environment: %{public}@
Unable to parse push message for topic: %{public}@ in environment: %{public}@: %{public}@
Received push for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Unable to look for push tokens to update: %{public}@
No conduit configs for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Updating %{public}@ for environment: %{public}@ enrollment token: %{public}@ topic: %{public}@
Error saving push received timestamps: %{public}@
PushController: refreshing
Unable to look for push subscriptions: %{public}@
Invalid push environment: 
%{public}@
Unable to extract private key from identity: %{public}@
Unable to extract certificate chain from identity: %{public}@
Unable to create certificate from identity: %{public}@
Unable to persist private key: %{public}@
Unable to extract private key: %{public}@
Unable to create private key: %{public}@
Unable to create certificate from data: %{public}@
Unable to generate key for self signed certificate: %{public}@}
Unable to retrieve public key from private key for self signed certificate: %{public}@}
Unable to generate self signed certificate from key pair
Starting status engine...
Started status engine...
There are unacknowledged status subscriptions...
Notifying delegate of unacknowledged status subscriptions...
Notified delegate of unacknowledged status subscriptions.
cleared lastAcknowledgedDate
Could not clear lastAcknowledgedDate %{public}@
Acknowledging status subscriptions: %{public}@...
Acknowledged status subscriptions: %{public}@
Could not acknowledge status subscriptions %{public}@: %{public}@
Status subscriptions already acknowledged: %{public}@
Making implicit status subscriptions for %@
Could not create subscription for %{public}@
Implicitly subscribed to %@
Could not implicitly subscribe to %{public}@: %{public}@
Could not get subscribed status key paths for identifiers %{public}@ from %{public}@: %{public}@
Could not get subscribed status key paths %{public}@ from %{public}@: %{public}@
Could not get subscribed status types from %{public}@: %{public}@
Could not get status subscriptions from %{public}@: %{public}@
Could not query for implicit status subscription.
Could not get or status status subscription for %d from %{public}@: %{public}@
Failed XPC connection for status publisher XPC service %{public}@: %{public}@
Failed to publish status keys for status publisher XPC service %{public}@: %{public}@
Publish status keys for status publisher  XPC service: %{public}@
Query for keys: %{public}@
Failed to query status: %{public}@
Unsupported keys: %{public}@
Updating status subscriptions
Unable to fetch management sources: %{public}@
Status subscriptions to remove: %lu
Status subscription status removal failed: %{public}@
Status subscriptions to update: %lu
Unable to de-serialize declaration %{public}@: %{public}@
Status subscription status persist for error failed: %{public}@
Status subscription status persist for success failed: %{public}@
Status subscription key paths removed: %lu
Could not fetch status subscriptions: %{public}@
Could not fetch status subscription configurations: %{public}@
Disallowed resolveAsset URL scheme: %{public}@
Invalid asset resolution type: %ld
Adding asset into data download %{public}@: %{public}@
Adding file asset download %{public}@: %{public}@
Could not resolve asset for %{public}@: %{public}@
Could not open data file for %{public}@: %{public}@
Received valid asset data for %{public}@
Removed existing downloaded asset file at %{public}@ for %{public}@
Failed to remove existing downloaded asset file at %{public}@ for %{public}@: %{public}@
Relocated downloaded asset file from %{public}@ to %{public}@ for %{public}@
Failed to relocate downloaded asset file from %{public}@ to %{public}@ for %{public}@: %{public}@
HTTP response error for %{public}@: %{public}@
Invalid asset data for %{public}@: %{public}@
%{public}@ resolution did finish with response
Could not resolve asset because of a protocol error: %{public}@
Expected empty server response for zero sized asset, but got: %lu
Could not resolve asset because of size mismatch expected %lu got %lu
Could not resolve asset because of unexpected content type: %{public}@
Could not resolve asset because of SHA mismatch expected %@ got %@
Failed to do initial sync of activation engine: %{public}@
Failed to synchronize store: %{public}@
Failed to generate status report: %{public}@
No status to send
Status report to send: %{public}@
fetchDataAtURL with %{public}@...
Cannot fetch data at %{public}@: %{public}@
Fetched data at %{public}@
Posting observer stores did change notification
Cannot create store because there is an existing device store type present.
Unable to save new store: %{public}@
Unable to save while removing store: %{public}@
Restoring deleted declaration: %{public}@
Ignoring duplicate declaration: %{public}@
Failed to save declaration: %{public}@
Failed to delete declaration - does not exist: %{public}@
Failed to delete declaration - already deleted: %{public}@
Failed to delete declaration: %{public}@
Could not find store with identifier %{public}@
resolveAsset with %{public}@...
Cannot resolve asset %{public}@: %{public}@
Cannot resolve asset %{public}@: identifier does not reference an asset
Resolved asset %{public}@
Unable to fetch management source object: %{public}@
Could not find management source with identifier %{public}@
Invalid type %{public}@ for payload
Can't fetch declarations: %{public}@
Can't deserialize declaration %{public}@: %{public}@
Can't deserialize configuration %{public}@: %{public}@
Can't deserialize asset %{public}@: %{public}@
Unable to fetch declarations: %{public}@
Invalid type %{public}@ for declaration
Failed to load declaration: %{public}@
Disallowed fetchDataAtURL URL scheme: %{public}@
Received data for %{public}@
Failed to fetch data at %{public}@: %{public}@
Adding data download for %{public}@: %{public}@
Could not fetch data for %{public}@: %{public}@
Received valid data for %{public}@
Invalid data for %{public}@: %{public}@
%{public}@ data fetch did finish with response
Could not fetch data because of a protocol error: %{public}@
Evaluating new connection %{public}@
%{public}@ cannot run, this feature is not enabled.
Accepted new connection %{public}@ 
application-identifier from connection is: %{public}@
StoreXPCListenerDelegate: ObserverStoreWithIdentifier from proxy handler
ObserverStoreWithIdentifier with %{public}@...
Could not fetch observer store: %{public}@
Fetched observer store
StoreXPCListenerDelegate: ObserverStoresWithCompletionHandler from proxy handler
ObserverStoresWithCompletionHandler...
Could not fetch observer stores: %{public}@
Fetched observer stores
StoreXPCListenerDelegate: DeclarationWithIdentifier from proxy handler
DeclarationWithIdentifier with %{public}@...
Could not fetch declaration: %{public}@
Fetched declaration
StoreXPCListenerDelegate: DeclarationsForStoreIdentifier from proxy handler
DeclarationsForStoreIdentifier with %{public}@...
Could not fetch declarations: %{public}@
Fetched declarations
StoreXPCListenerDelegate: DeclarationsWithTypes from proxy handler
DeclarationsWithTypes with %{public}@...
StoreXPCListenerDelegate: DeclarationManifestForStoreIdentifier from proxy handler
DeclarationManifestForStoreIdentifier with %{public}@...
Could not fetch declaration manifest: %{public}@
Fetched declaration manifest
StoreXPCListenerDelegate: SetShouldInstallConfiguration from proxy handler
SetShouldInstallConfiguration with %{public}@...
StoreXPCListenerDelegate: FetchDataForURL from proxy handler
FetchDataForURL with %{public}@...
Could not fetch data for url %{public}@
Fetched data for URL
StoreXPCListenerDelegate: CreateStoreWithType from proxy handler
CreateStoreWithType...
Could not create provider store: %{public}@
Created provider store
StoreXPCListenerDelegate: RemoveStoreWithIdentifier from proxy handler
RemoveStoreWithIdentifier with %{public}@...
Could not remove provider store: %{public}@
Removed provider store
StoreXPCListenerDelegate: ProviderStoreWithIdentifier from proxy handler
ProviderStoreWithIdentifier with %{public}@...
Could not fetch provider store: %{public}@
Fetched provider store
StoreXPCListenerDelegate: ProviderStoresWithCompletionHandler from proxy handler
ProviderStoresWithCompletionHandler...
Could not fetch provider stores: %{public}@
Fetched provider stores
StoreXPCListenerDelegate: SaveDeclaration from proxy handler
SaveDeclaration with %{public}@...
Could not save declaration: %{public}@
Saved declaration
StoreXPCListenerDelegate: DeleteDeclarationWithIdentifier from proxy handler
DeleteDeclarationWithIdentifier with %{public}@...
Could not delete declaration: %{public}@
Deleted declaration
StoreXPCListenerDelegate: ApplyChangesForStoreIdentifier from proxy handler
ApplyChangesForStoreIdentifier with %{public}@...
Could not apply changes: %{public}@
Applied changes
StoreXPCListenerDelegate: SubscriberStoreWithIdentifier from proxy handler
SubscriberStoreWithIdentifier with %{public}@...
Could not fetch subscriber store: %{public}@
Fetched subscriber store
StoreXPCListenerDelegate: SubscriberStoresWithCompletionHandler from proxy handler
SubscriberStoresWithCompletionHandler...
Could not fetch subscriber stores: %{public}@
Fetched subscriber stores
StoreXPCListenerDelegate: SubscribedStoreDeclarationsWithTypes from proxy handler
SubscribedStoreDeclarationsWithTypes...
Could not fetch subscribed declarations: %{public}@
Fetched subscribed declarations
StoreXPCListenerDelegate: SubscribedDeclarationsWithTypes from proxy handler
SubscribedDeclarationsWithTypes with %{public}@...
StoreXPCListenerDelegate: ResolveAsset from proxy handler
ResolveAsset with %{public}@...
Could not resolve asset %{public}@
Resolved asset
StoreXPCListenerDelegate: WriteStatusWithStoreIdentifier from proxy handler
WriteStatusWithStoreIdentifier with %{public}@...
Persisted status
Could not persist status %{public}@
StoreXPCListenerDelegate: RemoveStatusWithStoreIdentifier from proxy handler
RemoveStatusWithStoreIdentifier with %{public}@...
Removed status
Could not remove status %{public}@
StoreXPCListenerDelegate: PublishStatusWithStoreIdentifier from proxy handler
PublishStatusWithStoreIdentifier with %{public}@...
Unable to fetch for subscribed status key paths for %{public}@: %{public}@
No subscribed status key paths matching %{public}@
Could not update subscribed status key paths: %{public}@
XPCProxyHandler: Enrolling from proxy handler
Enrolling with %{public}@...
Could not enroll with %{public}@: %{public}@
Enrolled with %{public}@: %{public}@
XPCProxyHandler: Enrolling user channel from proxy handler
Enrolling with account %{public}@...
Could not enroll with account %{public}@: %{public}@
Enrolled with account %{public}@: %{public}@
XPCProxyHandler: Enrolling DDM from proxy handler
Enrolling DDM with %{public}@...
Could not enroll DDM with %{public}@: %{public}@
Enrolled with DDM %{public}@: %{public}@
XPCProxyHandler: Unenrolling from proxy handler
Could not unenroll with %{public}@: %{public}@
Unenrolled %{public}@ (checked out with the server)
Unenrolled %{public}@
XPCProxyHandler: Syncing from proxy handler
Could not sync with %{public}@: %{public}@
Synced with %{public}@
XPCProxyHandler: Updating from proxy handler
Updating %{public}@ with push message...
Could not update with %{public}@ with push message: %{public}@
Updated with %{public}@ with push message
Updating %{public}@ with sync tokens response..
Could not update with %{public}@ with sync tokens: %{public}@
Updated with %{public}@ with sync tokens
XPCProxyHandler: Checking device enrollment from proxy handler
Checking device enrollment
Could not check device enrollment: %{public}@
Device channel enrollment exists
Device channel enrollment does not exist
XPCProxyHandler: Finding management channel from proxy handler
Finding management channel
Failed to find management channel: %{public}@
Did not find management channel
Found management channel
XPCProxyHandler: Sending status data from proxy handler
Sending status data to %{public}@...
Could not send status with %{public}@: %{public}@
Sent status with %{public}@
Could not fetch for management sources with identifier %{public}@: %{public}@
XPCProxyHandler: Querying for status and errors from proxy handler
Querying for status and errors with key paths %{public}@ from %{public}@...
XPCProxyHandler: Querying and sending status of specific type from proxy handler
Querying and sending status with key paths %{public}@ to %{public}@...
Could not send status of types %{public}@ with %{public}@: %{public}@
Sent status of types %{public}@ with %{public}@
XPCProxyHandler: Querying for status subscriptions from proxy handler
Could not query for status subscriptions from %{public}@: %{public}@
Queried for status subscriptions from %{public}@
XPCProxyHandler: Querying and sending status subscriptions from proxy handler
Querying and sending status subscriptions with identifiers %{public}@ to %{public}@...
Could not send status subscriptions with identifiers %{public}@ with %{public}@: %{public}@
Sent status subscriptions with identifiers %{public}@ with %{public}@
XPCProxyHandler: Fetching configurations
Fetching configurations for: %{public}@
Fetched configurations of types %{public}@: %{public}@
Could not fetch configurations of types %{public}@: %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>remotemanagementd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.remotemanagementd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>remotemanagementd</string>
<key>CFBundleShortVersionString</key>
<string>2.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>2.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5302u</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5302u</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.remotemanagementd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
</array>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>SysCfg</string>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.remotemanagement.configuration-subscriber-service</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.rootless.storage.remotemanagementd</key>
<true/>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/rmd_test/</string>
<string>/private/var/tmp/com.apple.remotemanagementd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/com.apple.remotemanagementd/</string>
<string>/Library/Caches/com.apple.remotemanagementd/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.apsd</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.managedconfiguration.teslad</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
<string>com.apple.mobileactivationd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.remotemanagementd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>com.apple.security.ts.tmpdir</key>
<array>
<string>com.apple.remotemanagementd</string>
</array>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.create</key>
<true/>
<key>com.apple.usermanagerd.persona.delete</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>lockdown-identities</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
