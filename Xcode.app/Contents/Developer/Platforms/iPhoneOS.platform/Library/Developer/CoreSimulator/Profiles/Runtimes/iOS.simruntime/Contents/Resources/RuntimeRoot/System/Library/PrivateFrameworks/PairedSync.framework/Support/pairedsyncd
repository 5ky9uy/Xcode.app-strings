init
syncSessionType
_requestFinalStatisticsIfPossibleWithBlock:
_diffWithStatistics:
knownChannelNames
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
statisticsCollectionWithChannelName:statisticsDictionary:
statisticsCollectionByDiffingStatisticsCollection:
_logStatisticsCollectionDiff:
channelName
_logStatistics:channelName:
enumerateServiceStatisticsWithBlock:
aggdKeyForStatistics:channelName:
stringByAppendingString:
deliveredBytes
_logAggdKey:value:
deliveredMessageCount
serviceName
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
scheduler:willStartSyncSession:
scheduler:didUpdateSyncSessionWithUpdate:
scheduler:didClearSyncSession:withBlock:
.cxx_destruct
_queue
_startingStatistics
_syncComplete
sharedScheduler
initWithScheduler:
addSchedulerObserver:
removeSchedulerObserver:
dealloc
notifyTokenWithName:
setNotifyToken:withValue:withNotificationName:
setSyncComplete
sharedInstance
switchIndex
UTF8String
_scheduler
_lastSyncSwitchIDNotifyToken
alloc
defaultURL
contextWithURL:
setState:
_startSyncIfNeeded
registerNotifyTokenWithName:withQueue:withBlock:
startSyncIfNeeded
syncInitiatorStateChangedTo:
setShouldRelaunch:
needsSync
canSync
syncSession
syncSessionState
reset
pairingID
sharedSyncStateManager
isInitialSyncCompleteForPairingID:
_hasWatchMigrationCounterChanged
defaultSyncSessionForType:
scheduleSyncSession:
isSyncCompleteForPairingID:
readNotifyToken:
getActivePairedDevice
valueForProperty:
UUID
activityInfos:screenedBySyncSessionType:
sortedActivityInfos:
count
syncSessionActivitiesForActivityInfos:
initWithPairingIdentifier:switchIndex:sessionIdentifier:syncSessionType:supportsMigrationSync:activities:state:
arrayWithCapacity:
initWithActivityInfo:progress:error:state:finishedSending:interruptionCount:startDropoutCount:sawADropout:
addObject:
array
sessionTypes
integerValue
dictionaryWithCapacity:
numberWithUnsignedInteger:
setObject:forKeyedSubscript:
enumerateObjectsUsingBlock:
label
numberWithInteger:
compare:
sortedArrayWithOptions:usingComparator:
deviceForPairingID:
initWithDomain:pairingID:pairingDataStore:
domainAccessorForPairingID:
UUIDString
synchronize
integerForKey:keyExistsAndHasValidFormat:
initWithUUIDString:
supportsCapability:
_hasLastKnownDeviceChanged
supportsMigration:
isSyncAdvised
_queue_saveResumeContextWithSyncSession:
enumerateNewlyRunningActivitiesWithBlock:
enumerateNewlyCompletedActivitiesWithBlock:
originalSession
updatedSession
pairingIdentifier
setSyncSession:
save:
psy_safeDescription
setSyncCompleteForPairingID:withBlock:
jobs
containsObject:
predicateWithBlock:
filteredArrayUsingPredicate:
sharedSyncInitiator
setDelegate:
resume
startExternalSyncWithOptions:
state
delegate
_resumeContext
_syncAdviceNotifyToken
_syncCompletedPairingIdentifier
_syncStarterQueue
_syncStarterQueueIsSuspended
_state
_delegate
defaultManager
storageURL
URLByAppendingPathComponent:
arrayWithObjects:count:
setWithArray:
path
secureUnarchiveObjectOfClasses:withFile:
dictionary
initialize
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
mutableCopy
encodeObject:forKey:
sessionState
noteActivityStarted:syncSession:
bookmarkCurrentStatistics:
saveSessionState
interruptionCount
noteActivityInterrupted:
sawADropout
noteActivityDropout:
enumerateChangedActivitiesWithBlock:
noteActivityFinished:
accumulateStatisticsForSegment:
didUpdateCompleteSyncSession
logAWDDurationsForSync
clearSessionState
secureArchiveRootObject:toFile:
removeItemAtURL:error:
bundleForClass:
pathForResource:ofType:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
hasDurationForActivity:
durationForActivity:
retryCountForActivity:
syncTypeForActivity:
errorCodeForActivity:
wasDropoutForActivity:
isEqualToString:
statisticsForServiceName:
enumerateActivityNamesWithBlock:
bytes
addObjectsFromArray:
minusSet:
statisticsByDiffingStatistics:
statisticsAreBogus
statisticsBySummingStatistics:
statisticsAreZero
addServiceStatistics:
supportsSecureCoding
defaultLogger
encodeWithCoder:
initWithCoder:
AWDKeyForActivityIdentifier:
setSessionState:
queue
setQueue:
_cumulativeStatisticsCollections
_segmentStartingStatisticsCollections
_sessionState
activityInfo
stateDictionaryForActivity:
date
timeIntervalSinceReferenceDate
numberWithInt:
timeIntervalSinceDate:
numberWithDouble:
doubleValue
error
code
_computeDurationForStateDictionary:activity:
numberWithBool:
boolValue
hasErrorCodeForActivity:
_stateDictionary
_loadLegacySyncStateAndMigrateIfNeeded
getPairedDevices
setupListener
stringValue
initWithPairingID:syncState:
initialSyncState
setBool:forKey:
syncSwitchIndex
setInteger:forKey:
migrationIndex
_updateMigrationCounter
_queue_tellRemoteObserversDidCompleteSyncForPairingID:
_queue_deviceSyncStateEntryForPairingID:
hasCompletedSync
hasCompletedInitialSync
boolForKey:
setInitialSyncState:
integerForKey:
setMigrationIndex:
setSyncSwitchIndex:
setPairingID:
initWithMachServiceName:
setExportedObject:
setExportedInterface:
setRemoteObjectInterface:
connectionInterrupted:
setInterruptionHandler:
removeObject:
remoteObjectProxy
didUpdateSyncForPairingID:
syncStatePersistentURL
dataWithContentsOfURL:options:error:
setClass:forClassName:
setWithObject:
secureUnarchiveObjectOfClasses:withData:
listener:shouldAcceptNewConnection:
requestDeviceSyncStateEntriesForPairingIDs:completion:
registerSyncStateObserverIfNeeded
_syncStateCache
_activeConnections
_listener
unsignedIntegerValue
version
migrationSync
activeActivityLabels
completedActivityLabels
initWithSyncSessionState:syncSessionType:migrationSync:activities:completedActivities:
initWithPlistRepresentation:
completedActivityLabelsSet
activeActivityLabelsSet
plistRepresentation
_migrationSync
_completedActivityLabels
_activeActivityLabels
_completedActivityLabelsSet
_activeActivityLabelsSet
_syncSessionState
_syncSessionType
_version
createPathFile
deletePathFile
setServiceName:
objectForKey:
setBytes:
setMessageCount:
setDeliveredBytes:
setDeliveredMessageCount:
messageCount
decodeIntegerForKey:
encodeInteger:forKey:
statisticsWithServiceName:serviceStatisticsDictionary:
_serviceName
_messageCount
_bytes
_deliveredMessageCount
_deliveredBytes
setChannelName:
enumerateKeysAndObjectsUsingBlock:
allValues
appendFormat:
appendString:
_statistics
_channelName
sigTermHandler
addLoggersIfNeeded
waitForPairingStorePathPairingID:
_registerForNotifications
mainRunLoop
shouldAcceptNewToolConnection:
shouldAcceptNewProgressConnection:
shouldAcceptNewClientConnection:
valueForEntitlement:
invalidate
initWithXPCConnection:
setInvalidationHandler:
shouldRelaunch
_toolListener
_progressListener
_clientListener
_notificationQueue
_loggers
_watchSyncStateObserver
_syncRestrictionNotifier
_switchAssertionManager
_syncingStayAliveTransaction
_shouldNotDieSuddenly
_exitPending
_shouldRelaunch
services
clearCurrentResumeContext
cancelSyncSession
getOrderedActivityInfosWithCompletion:
startSyncWithOptions:
initWithSessionState:URL:
noteActivityStarted:
didStartActivity:
isFinishedSending
activityDidCompleteSending:
didFinishActivity:
didFinishSession
noteActivityCompletedSending:
logDurationForActivityWithIdentifier:bins:binCount:
sessionStateURL
aggdKeyForActivityIdentifier:
hasDurationForActivity:milestone:
durationForActivity:milestone:
addValue:forScalarKey:clearBeforeAdding:
binNameForDuration:bins:count:
stringByAppendingFormat:
setSessionStateURL:
_sessionStateURL
_keyForMilestone:
initWithURL:
copy
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
secureArchiveRootObject:toFile:withOptions:
_URL
_syncSession
observer
initWithObserver:
setObserver:
_flags
_observer
weakToStrongObjectsMapTable
_isInternalInstall
_isSyncShameDisabled
schedulerObservers
setObject:forKey:
removeObjectForKey:
incompleteActivities
activitiesForSessionActivites:
setActivityQueue:
_queue_tellObserversWillStartSyncSession
syncSessionByUpdatingSyncSessionState:
_queue_updateWithSyncSession:
_localizedString:
_dequeueNextActivity
bundleWithIdentifier:
preferredLanguages
firstObject
initWithCapacity:
initWithActivityInfo:queue:
activityQueue
currentActivity
setCurrentActivity:
removeObjectAtIndex:
_startActivity:
_scheduledActivitiesDidComplete
_syncOptionsForActivity:
activityForLabel:
getDropoutCounter:
activityProgress
_queue_updateSyncSessionActivity:
_scheduleTimeoutForActivity:
_finishActivity:success:error:
_activityWasInterrupted:
beginSyncWithOptions:completion:interruptionHandler:
abortSyncWithCompletion:interruptionHandler:
_clearActivityTimer:
_shouldHandleCallbackForActivity:
startDropoutCount
valueWithPointer:
removeAllObjects
_canAttemptRetryForActivity:
_takeStackshotSequenceWithLabel:
errorWithDomain:code:userInfo:
_timeoutForActivity:
_activityTimeoutHandler:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
scheduleInQueue:
userInfo
_activityDidTimeout:
timeoutSeconds
standardUserDefaults
persistentDomainForName:
_maximumInterruptionCountForActivity:
shouldLaunchAsDryRun
setDryRun:
testInputsEnumerator
nextObject
setTestInput:
setPairingIdentifier:
sessionIdentifier
setSessionIdentifier:
setSyncSessionType:
activities
_popADropoutAlert:
_popATimeoutAlert:
defaultCenter
postNotificationName:object:
_queue_cleanup
_queue_tellObserversDidClearSyncSession:withBlock:
_abortCurrentActivity
syncSessionByUpdatingActivities:
initWithOriginalSession:updatedSession:
_queue_tellObserversDidUpdateSyncSessionWithUpdate:
syncSessionActivityByUpdatingProgress:
_evaluateTestingParametersIfNeeded
activityState
_currentProgressUpdated:forActivity:
options
dryRun
_queue_enumerateSchedulerObserversWithBlock:
activity:didUpdateProgress:
_cancelAllActivityTimers
setSchedulerObservers:
setOptions:
setTestInputsEnumerator:
timeoutTimers
setTimeoutTimers:
_alertQueue
_simulatorAlertToken
_schedulerObservers
_activityQueue
_currentActivity
_options
_testInputsEnumerator
_timeoutTimers
length
localizations
arrayWithObject:
objectAtIndex:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
localizedStringForKey:value:table:
syncProgressState
globalProgress
activityLabel
initWithActivityLabel:globalProgress:syncProgressState:
_activityLabel
_globalProgress
_syncProgressState
didStartSyncSessionWithActivityCount:isResuming:
stringForPowerLogEvent:
initWithDomain:
domain
synchronizeNanoDomain:keys:
firstIncompleteActivity
_watchSyncProgressStateFromSyncSession:
sessionProgress
_watchSyncSessionTypeFromSyncSession:
completedActivities
_watchSyncStateFromSyncSession:
_watchSyncClientStateFromSyncSession:
_updateWithSyncState:andSyncClientState:
_updateStateWithSyncSession:
_syncState
_syncClientState
_domainAccessor
_preferencesManager
_lastSyncClientPlistRepresentation
processIdentifier
updateSyncSession:
dictionaryWithObjects:forKeys:count:
syncSessionWillStart:
invalidateSyncSession:
checkin:
requestActiveSyncSessionWithCompletion:
_connection
_lastSentSession
_isClientEntitled
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathsMatchingExtensions:
dictionaryWithContentsOfURL:
activityWithPlist:
setActivePairedDevice:withActiveDeviceAssertionHandler:
_assertion
setService:
machServiceName
initWithMachServiceName:options:
setConnection:
_shouldPrelaunchWithBackboard
_prelaunchBundleIdentifier
_handleInterruptionWithError:interruptionHandler:
_beginSyncJustDoItWithOptions:completion:interruptionHandler:
_preloadAppWithBundleID:inBackboardWithCompletion:
_abortSyncJustDoItWithCompletion:interruptionHandler:
_startConnectionIfNeeded
_remoteServiceWithErrorHandler:
beginSyncWithOptions:completion:
abortSyncWithCompletion:
connection
remoteObjectProxyWithErrorHandler:
backboardPrelaunchBundleIdentifier
openApplication:options:withResult:
progressDelegateDidCompleteSending
progressDelegateDidUpdateProgress:
progressDelegate
setProgressDelegate:
requestedServiceNames
setRequestedServiceNames:
_activityInfo
_progressDelegate
_requestedServiceNames
service
activityDidCompleteSending
activityDidUpdateProgress:
_service
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
_storageURL
decodeFloatForKey:
encodeFloat:forKey:
setActivityProgress:
totalActivityCount
setTotalActivityCount:
completedActivityCount
setCompletedActivityCount:
copyWithZone:
_activityProgress
_totalActivityCount
_completedActivityCount
IDSInitialLocalSyncStartedForServices
Requesting IDS stats for sync start
Received IDS stats for sync start
IDSLocalPairingReunionSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
IDSLocalPairingReunionSyncCompletedForServices
Requesting IDS stats for sync finish
Received IDS stats for sync finish
Log statistics %@
ADClientAddValueForScalarKey(%{public}@, %lld)
%s: Failed to get notify token for %{public}@
Updating token %{public}@ with value %lld
Can't update token %{public}@, == NOTIFY_TOKEN_INVALID
Initializing PSDSyncInitiator
%s: Sync initiator state changed to %d
PSDSyncInitiator needs sync & %s sync.
PSDSyncInitiator - sync session is nil (not resuming) starting new sync of type "%@"
PSDSyncInitiator - startSyncIfNeeded - needs sync - can't sync.
%s: Failed to register block and get notify token for %{public}@
Failed to create NPSDomainAccessor for pairingID %{public}@ while reading initial sync status
Last known switch index has changed. Was %lld, but NanoRegistry is currently at %lld
Legacy flow: Last known switch index has changed. Was %lld, but NanoRegistry is currently at %lld
Older legacy flow: Last known pairing ID has changed. Was %{public}@, but NanoRegistry is currently paired to %{public}@
_hasWatchMigrationCounterChanged: Reading pairingIDMigrationCountDictionary- Value is %@
Last watch migration counter changed. Was %ld, but NanoRegistry is currently at %ld. Triggering migration sync.
Watch migration counter matches stored value. Not triggering migration sync.
Checking needsSync for device with pairingID: %{public}@
Don't need to trigger a new sync because a syncSession is actively in progress
needs Reunion sync because last known device has changed
device supports migration checking if needs migration sync
needs Migration sync because watch IDS device has changed
device does not support migration NOT checking if needs migration sync
needs sync because sync was in progress and then was interrupted
Device %{public}@ has already completed initial sync
needs sync because initial sync has not started yet
Could not save resume context after starting sync session: %{public}@
No AWDLogger at %{public}@.  Creating a new one.
Succeeded at unarchiving AWDLogger
Failed unarchiving PSDSchedulerAWDLogger %p %p %p
Couldn't save session state to disk.
PSDSchedulerAWDLogger - error clearing session state %{public}@
Failed unarchiving PSDSchedulerAWDSessionState
Start datestamp for %{public}@: %f
Inheriting start datestamp for %{public}@: %f
Duration for activity %{public}@ is %f
Computed negative sync duration for activity %{public}@
Computed sync duration greater than 20 minutes for activity %{public}@
Updating last watch migration counter dictionary.
_updateMigrationCounter: Reading pairingIDMigrationCountDictionary- Value is %@
_updateMigrationCounter: Updating pairingIDMigrationCountDictionary- Value is %@
Setting sync state complete for pairingID %@
Failed to create NPSDomainAccessor for pairingID %{public}@ while setting initial sync status
Tried to set sync state for nil pairingID
Failed to create NPSDomainAccessor for pairingID %{public}@ while retrieving sync status
%s: %{public}@ %{public}@
Caught exception (%{public}@) unarchiving legacy sync state.
Found legacy sync state at URL %{public}@ but was unable remove with error %{public}@
Failed unarchiving PSDIDSServiceStatisticsCollection
PSDaemon setting shouldRelaunch=%@
PSDaemon has a pending SIGTERM and has become idle, exiting now
PSDaemon has received a SIGTERM, but is not idle, not exiting for now
PSDaemon has received a SIGTERM, and is idle, exiting
PSDaemon got xpc stream event: %{public}s
Tool connection %{public}@ is missing entitlement
No PSDSchedulerAggdSessionState at %{public}@.  Creating a new one.
Succeeded at unarchiving PSDSchedulerAggdSessionState
PSDSchedulerAggdLogger - error clearing session state %{public}@
PSDSchedulerAggdLogger - asked to log duration for activity %{public}@ but didn't have one.
PSDSchedulerAggdLogger - no duration for sending complete milestone for activity %{public}@
Failed unarchiving PSDSchedulerAggdSessionState
No resume context at %{public}@.  Creating a new one.
Successfully unarchived resume context
Tried to schedule a sync session %{public}@
 while one already exists %{public}@
Tried to schedule a nil syncSession
Tried to schedule a completed sync session %{public}@
Scheduling syncSession %{public}@
Registering simulator disconnect alert
Received simulator connection state %ld
Firing simulator disconnect alert
Resetting simulator disconnect alert
Disabling simulator network bandwidth restriction
Network bandwidth restriction was %@
Starting activity %{public}@
Activity %{public}@ finished with success: %d error %{public}@
Error with activity %{public}@ - %{public}@
Canceling activity %{public}@
Activity %{public}@ aborted with success: %{public}@ error %{public}@
Error aborting activity %{public}@ - %{public}@
Activity %{public}@ timer cleared.
All activity timers cleared.
Activity %{public}@ was interrupted %d times.  Bailing out and moving onto the next activity.
Activity %{public}@ timed out - moving on to next activity. dropout=%s
Activity %{public}@ timed out and there was no disconnection. Taking stackshots, setting error.
Scheduling timeout for activity %{public}@ in %1.2f seconds
Activity %{public}@ timed out
All scheduled activities completed
Removing simulator connectivity alert handler
Enabling simulator network bandwidth restriction
Current progress is NAN
PSDSyncSessionObserver: init called
Client %{public}@ is not entitled to be a progress observer
PSDSyncSessionObserver: invalidation handler called
PSDSwitchAssertionManager: Not a reunion sync, enabling switch assertion
PSDSwitchAssertionManager: Found NRDevice for sync
PSDSwitchAssertionManager: Got switch assertion %@ with error %@
PSDSwitchAssertionManager: Could not find NRDevice for sync
PSDSwitchAssertionManager: Releasing switch assertion
Connection was invalidated for %{public}@.
PSDActivity - Creating new connection: %{public}@
%{public}@ - invalidating the connection as part of our completion block.
%{public}@ sent NaN progress
PSDActivity Preloading application with backboard - %{public}@
Fatal error: pairing store path was nil for PSDFileManager.
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v8@?0
v24@?0@"PSDIDSServiceStatistics"8^B16
.deliveredBytes
.deliveredMessagesCount
pairedsync.%@.%@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[PSDSyncRestrictionNotifier notifyTokenWithName:]
lastPairingID
lastSwitchIndex
com.apple.pairedsync
syncSwitchIndex
com.apple.pairedsyncd.syncinitiator
com.apple.pairedsync.needssync
v12@?0i8
-[PSDSyncInitiator setState:]
must resume
-[PSDSyncInitiator registerNotifyTokenWithName:withQueue:withBlock:]
v32@?0@"NSString"8Q16^B24
q24@?0@"PSYActivityInfo"8@"PSYActivityInfo"16
mobile
pairedsyncd
119C9267-C24D-4FC3-8FE9-2D394943F2E6
v24@?0@"PSYSyncSessionActivity"8@"PSYSyncSessionActivity"16
B24@?0@"PSYActivityInfo"8@"NSDictionary"16
state
TQ,N,V_state
delegate
T@"<PSDSyncInitiatorDelegate>",W,N,V_delegate
initialSyncSession
sessionState
startDate
duration
retryCount
errorCode
syncType
dropout
AWDLogger.dat
com.apple.PairedSync.awdLoggingQueue
cumulativeStatisticsCollections
segmentStartingStatisticsCollections
activity-service
plist
v16@?0@"NSString"8
pairedsync.%@
supportsSecureCoding
TB,R
T@"PSDSchedulerAWDSessionState",&,N,V_sessionState
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
hasCompletedInitialSync
migrationCount
pairingIDMigrationCountDictionary
com.apple.pairedsyncd.syncstatemanager
-[PSDSyncStateManager requestDeviceSyncStateEntriesForPairingIDs:completion:]_block_invoke
PSDDeviceSyncState
/syncState.state
completedActivityLabels
activeActivityLabels
version
syncProgressState
syncSessionType
migrationSync
<%@ %p activeActivityLabels=%@; completedActivityLabels=%@; syncSessionState=%@; syncSessionType=%@ migrationSync=%s>
syncSessionState
TQ,R,N,V_syncSessionState
TQ,R,N,V_syncSessionType
TB,R,N,V_migrationSync
T@"NSArray",R,N,V_activeActivityLabels
T@"NSArray",R,N,V_completedActivityLabels
activeActivityLabelsSet
T@"NSSet",R,N,V_activeActivityLabelsSet
completedActivityLabelsSet
T@"NSSet",R,N,V_completedActivityLabelsSet
TQ,R,N,V_version
Full
Reunion
localDeliveryQueueStatMessageCount
localDeliveryQueueStatBytes
localDeliveryQueueStatDeliveredMessageCount
localDeliveryQueueStatDeliveredBytes
syncMessagesStats
defaultMessagesStats
urgentMessagesStats
<%@ %p; serviceName=%@; bytes=%@; messageCount=%@; deliveredBytes=%@; deliveredMessageCount=%@>
serviceName
messageCount
bytes
deliveredMessageCount
deliveredBytes
T@"NSString",C,N,V_serviceName
Tq,N,V_messageCount
Tq,N,V_bytes
Tq,N,V_deliveredMessageCount
Tq,N,V_deliveredBytes
channelName
statistics
v32@?0@"NSString"8@"NSDictionary"16^B24
<%@ %p; channelName=%@;
T@"NSString",C,N,V_channelName
com.apple.pairedsync.tool
com.apple.pairedsync.client
v24@?0@"NSString"8@"NSUUID"16
com.apple.pairedsyncd.notificationq
com.apple.pairedsyncd.tool
com.apple.pairedsyncd.connection
com.apple.pairedsyncd.progress
com.apple.pairedsyncd.syncingStayAlive
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
shouldRelaunch
TB,N,V_shouldRelaunch
endDate
sendCompleteDate
aggdLogger.dat
.SyncTime.duration
.SyncTime.activityCount
.SyncTime.distribution.%@
.SendTime.duration
.SendTime.activityCount
%d-%d
T@"PSDSchedulerAggdSessionState",&,N,V_sessionState
sessionStateURL
T@"NSURL",&,N,V_sessionStateURL
syncSession
resumeContext.dat
<%@ %p; URL=%@;
syncSession=%@>
T@"PSYSyncSession",&,N,V_syncSession
activityTimeout
PSDSchedulerDidCompleteNotification
PSDSchedulerDidCancelNotification
observer
T@"<PSDSchedulerObserver>",W,N,V_observer
com.apple.pairedsyncd.scheduler
com.apple.pairedsyncd.scheduler.alertqueue
SIMULATOR_CLOSED_DURING_SYNC_ALERT_HEADER
Simulator Sync Stalled
SIMULATOR_CLOSED_DURING_SYNC_ALERT_MESSAGE
The Apple Watch simulator quit while syncing with the paired iPhone simulator. To complete syncing, re-open the Apple Watch simulator now to avoid timing out and losing unsynced data.
SIMULATOR_CLOSED_DURING_SYNC_ALERT_BUTTON
v16@?0Q8
disabled
not disabled
v12@?0B8
com.apple.private.PairedSync
-[PSDScheduler _localizedString:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/PairedSyncDaemons_Sim/PairedSync-146/pairedsyncd/PSDScheduler.m
[[NSLocale preferredLanguages] firstObject] != nil
Localizable
v20@?0B8@"NSError"12
Sync client %@ interrupted
Sync client %@ timed out
INTERNAL: Help Improve PairedSync Performance
pairing
switching
File Radar
Ignore
apple-internal-install
com.apple.pairedsync.activity.%@
enabled
not enabled
v16@?0@"PSDSchedulerObserver"8
schedulerObservers
T@"NSMapTable",&,N,V_schedulerObservers
activityQueue
T@"NSMutableArray",&,N,V_activityQueue
currentActivity
T@"PSDActivity",&,N,V_currentActivity
options
T@"PSYOptions",&,N,V_options
testInputsEnumerator
T@"NSEnumerator",&,N,V_testInputsEnumerator
T@"PSYSyncSession",C,N,V_syncSession
timeoutTimers
T@"NSMutableDictionary",&,N,V_timeoutTimers
strings
activityLabel
globalProgress
<%@ %p activityLabel=%@; syncProgressState=%@; globalProgress=%@>
T@"NSString",R,N,V_activityLabel
Tq,R,N,V_globalProgress
TQ,R,N,V_syncProgressState
Unknown
Inactive
Active
Complete
start
com.apple.pairedsync.watchsyncstate
com.apple.pairedsync.progressObserver
com.apple.syncsessionobserver
Client for pid %@ is missing entitlement %@
PSYWatchSyncState
PSYWatchSyncClientState
v24@?0@"NSError"8@"NRActiveDeviceAssertion"16
<%@ %p; label=%@>
connection
T@"NSXPCConnection",&,N,V_connection
progressDelegate
T@"PSDServiceProgressDelegate",&,N,V_progressDelegate
requestedServiceNames
T@"NSMutableSet",&,N,V_requestedServiceNames
T@"<PSDActivityDelegate>",W,N,V_delegate
activityInfo
T@"PSYActivityInfo",R,N,V_activityInfo
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
service
T@"PSDActivity",W,N,V_service
/PairedSync/
activityProgress
totalActivityCount
completedActivityCount
Tf,N,V_activityProgress
TQ,N,V_totalActivityCount
TQ,N,V_completedActivityCount
PSDSchedulerIDSObserver
PSDSchedulerObserver
NSObject
PSDSyncRestrictionNotifier
PSDSyncInitiator
PSDSchedulerAWDLogger
NSSecureCoding
NSCoding
PSDSchedulerAWDSessionState
PSDSyncStateManager
NSXPCListenerDelegate
PSYSyncStateProviderInterface
PSYWatchSyncClientState
KeepAliveManager
PSDIDSServiceStatistics
PSDIDSServiceStatisticsCollection
PSDaemon
PSDSyncInitiatorDelegate
PSDToolConnection
PSYToolInterface
PSDSchedulerAggdLogger
PSDSchedulerAggdSessionState
PSDResumeContext
PSDScheduler
PSDActivityDelegate
PSDClientConnection
PSYConnectionInterface
PSYWatchSyncState
PSDSchedulerPowerLogger
PSDWatchSyncStateObserver
PSDSyncSessionObserver
PSYSyncSessionProviderInterface
PSDSwitchAssertionManager
PSDActivity
PSDServiceProgressDelegate
PSYActivityProgress
PSDFileManager
PSDProgress
NSCopying
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v32@0:8@"PSDScheduler"16@"PSYSyncSession"24
v32@0:8@"PSDScheduler"16@"PSYSyncSessionUpdate"24
v40@0:8@"PSDScheduler"16@"PSYSyncSession"24@?<v@?>32
v24@0:8@?16
v24@0:8@16
@32@0:8@16@24
v32@0:8@16q24
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSDictionary"
@24@0:8@16
i24@0:8@16
v36@0:8i16Q20@28
@"PSDScheduler"
v24@0:8Q16
i40@0:8@16@24@?32
Q20@0:8i16
@24@0:8Q16
@32@0:8@16Q24
@"PSDResumeContext"
@"NSUUID"
@"<PSDSyncInitiatorDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSMutableDictionary"
@"PSDSchedulerAWDSessionState"
d24@0:8@16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
Vv32@0:8@16@?24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
v32@0:8@16@?24
@"NSMutableArray"
@"NSXPCListener"
@52@0:8Q16Q24B32@36@44
@"NSArray"
@"NSSet"
q16@0:8
v24@0:8q16
@"NSString"
v20@0:8B16
@"PSDWatchSyncStateObserver"
@"PSDSyncRestrictionNotifier"
@"PSDSwitchAssertionManager"
@"NSObject<OS_os_transaction>"
Vv24@0:8@?16
Vv24@0:8@16
Vv24@0:8@?<v@?@"NSArray">16
Vv24@0:8@"PSYOptions"16
v36@0:8@16^i24i32
v36@0:8q16@24B32
@36@0:8d16^i24i32
@"PSDSchedulerAggdSessionState"
@"NSURL"
B32@0:8@16Q24
d32@0:8@16Q24
B24@0:8^@16
@"PSYSyncSession"
{?="schedulerWillStartSyncSession"b1"schedulerDidUpdateSyncSessionWithUpdate"b1"schedulerDidClearSyncSessionWithBlock"b1}
@"<PSDSchedulerObserver>"
v28@0:8@16f24
v24@0:8@"PSDActivity"16
v28@0:8@"PSDActivity"16f24
v36@0:8@16B24@28
Q24@0:8@16
v28@0:8f16@20
@"NSMapTable"
@"PSDActivity"
@"PSYOptions"
@"NSEnumerator"
@40@0:8@16q24Q32
v28@0:8Q16B24
@"PSYWatchSyncState"
@"PSYWatchSyncClientState"
@"NPSDomainAccessor"
@"NPSManager"
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?@"PSYSyncSession"@"NSSet"@"NSError">16
@"NSXPCConnection"
@"NRActiveDeviceAssertion"
v40@0:8@16@?24@?32
v32@0:8@?16@?24
@24@0:8@?16
v20@0:8f16
@"<PSDActivityDelegate>"
@"PSYActivityInfo"
@"PSDServiceProgressDelegate"
@"NSMutableSet"
Vv20@0:8f16
@24@0:8^{_NSZone=}16
f16@0:8
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.bluetoothregistry</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.pairedsync.client</key>
<true/>
<key>com.apple.pairedsync.progressObserver</key>
<true/>
<key>com.apple.pairedsync.scheduler</key>
<true/>
<key>com.apple.private.ids.localpairing</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.sharedpclogging</string>
</array>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
