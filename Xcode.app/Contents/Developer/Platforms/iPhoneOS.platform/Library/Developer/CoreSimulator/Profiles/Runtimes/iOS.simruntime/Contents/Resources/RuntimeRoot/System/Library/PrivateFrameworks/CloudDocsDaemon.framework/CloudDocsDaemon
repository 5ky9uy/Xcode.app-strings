@(#)PROGRAM:CloudDocsDaemon  PROJECT:CloudDocs-737
dflwx
MbP?
 A(knN
%@:%@/%@
%@/%@
%@ %@
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
 etag:%@
 fav:%lld
 lu:%lld
 has-finder-tags
<%@:%p {etag : %@; fr: %lld; lu : %lld; ft: %s}>
i12@?0i8
-[BRCVolume setUpForRelPath:session:error:]
(passed to caller)
(ignored by caller)
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s(%@) case-sensitive:%s
RDONLY
SYNCHRONOUS
NOEXEC
NOSUID
NODEV
UNION
ASYNC
CPROTECT
EXPORTED
QUARANTINE
LOCAL
QUOTA
ROOTFS
DOVOLFS
DONTBROWSE
IGNORE_OWNERSHIP
AUTOMOUNTED
JOURNALED
NOUSERXATTR
DEFWRITE
MULTILABEL
NOATIME
side-car-sync
v16@?0@"NSError"8
INSERT OR REPLACE INTO side_car_lookahead (record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_side_car_ckinfo, item_finder_tags) VALUES (%@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_finder_tags = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND item_id = %@
DELETE FROM side_car_lookahead WHERE record_name = %@
B16@?0@"PQLConnection"8
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v8@?0
create-log-section
fetched
_relpath
parentRelpath
parentItemq 
filename
byIDLocalItem
byIDServerItem
byIDDiffs
byPathLocalItem
byPathServerItem
byPathDiffs
faultedLocalItem
faultedServerItem
faultedRelpath
faultedDiffs
reservedLocalItem
reservedServerItem
parentItem
%@: %@
 parent (i:%@ n:'%@') %@
unfetched
 byID:
  localItem:  %@
  serverItem: %@
  relpath:    %@
  diffs:      %@
 byID: unfetched
 byPath:
  localItem:  %@
  serverItem: %@
  relpath:    %@
  diffs:      %@
 byPath: unfetched
 fault:
  localItem:  %@
  serverItem: %@
  relpath:    %@
  diffs:      %@
 fault: unfetched
 reserved:
  localItem:  %@
  serverItem: %@
 reserved: unfetched
Sqlite database became corrupted, abort...
-[BRCPQLConnection _setErrorHandlerWithDBCorruptionHandler:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/foundation/BRCPQLConnection.m
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
B32@?0@"BRCPQLConnection"8@"PQLStatement"16@"NSError"24
%@ locked for more than 1 minute, aborting...
-[BRCPQLConnection _setLockedHandler]_block_invoke
%@ has been locked for %f seconds: %@
 (for statement %@)
(null)
Significantly too slow SQL statement: 
v32@?0@"PQLConnection"8^{sqlite3_stmt=}16Q24
ATTACH "%@" AS %@
-[BRCPQLConnection attachDBAtPath:as:error:]
setting profiling hook is not supported on %@
-[BRCPQLConnection setProfilingHook:]
com.apple.bird.db.batching
B20@?0@"PQLConnection"8i16
error closing connection %@: %@
-[BRCPQLConnection brc_close]
pragma page_count
pragma page_size
explain query plan %@
plan:
    %@
UNIMPLEMENTED
cancelled
executing
finished
idle
 duration:%@
 (bypassing system scheduling)
 next-try:%@
 next-try:%@ ago
 last-error:%@
 last-try:%@
    %@,
isFinished
isExecuting
com.apple.bird.operation
failed
completed
with error: 
X-APPLE-APP-TELEMETRY
x-apple-app-telemetry-new-server-token
v16@?0@"CKRequestInfo"8
remote:%p
sharedZoneSubscription
com.apple.sharedb
sync/sharedb
success
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
 i:%@
 parent-id:%@
 sc:data
 sc:docs
 sc:trash
 old-pino:%lld
 alias-container:%@
 unsalted-bookmark-data:%@
 reverse-alias-containers:{%@}
 old-ct:%@
tags
BRCSizeInfoCompletedUnitCountKey
BRCSizeInfoTotalUnitCountKey
indeterminate
paused
s:%@ 
%@f:%.4f uc:%lld/%lld
v32@?0@8@"NSProgress"16^B24
UPLOAD_PROGRESS_LOCALIZED_TITLE
Localizable
DOWNLOAD_PROGRESS_LOCALIZED_TITLE
v16@?0@"PQLConnection"8
B16@?0@"BRCAppLibrary"8
-[BRCDaemonContainerHelper br_capabilityToMoveFromLookup:toNewParent:session:error:]
readonly-interactive-db
readonly-expensive-db
db-corrupting-handler-queue
db was corrupted
-[BRCAccountSession(BRCDatabaseManager) dbBecameCorrupted]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/BRCDatabaseManager.m
v24@?0@"PQLConnection"8@?<v@?>16
serverTruth
clientTruth
client.db
can't open the client db we've just created %{errno}d
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]
someone ripped the database from under our feet
-[BRCAccountSession(BRCDatabaseManager) _startWatcher]_block_invoke
checker.db
fetch_and_inc64
v28@?0^{sqlite3_context=}8i16^^{sqlite3_value}20
inc_and_fetch64
fetch_and_dec64
dec_and_fetch64
call_block
indexset_contains
migration_is_parented_or_equal_to_old_doc_id
root
documents
SELECT item_parent_id FROM client_items WHERE zone_rowid = %@ AND item_id = %@
document_is_evictable
document_is_indexable
item_id_is_root
item_id_is_documents
item_id_is_shared_root
trigger_notification
bump_notifs_rank
bump_notifs_rank_and_trigger_notifs
checker
%@.db
control-odd
control-even
-[BRCAccountSession(BRCDatabaseManager) _setupBackupDetector:error:]
-[BRCAccountSession(BRCDatabaseManager) _stepBackupDetector:newState:error:]
UPDATE server_zones SET zone_plist = %@ WHERE rowid = %@
UPDATE client_zones SET zone_plist = %@ WHERE rowid = %@
INSERT OR IGNORE INTO server_zones (zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@)
SELECT rowid from server_zones WHERE zone_owner = %@ and zone_name = %@
DELETE FROM server_zones WHERE rowid = %@
SELECT container_id, rowid FROM rowid_reservations
INSERT INTO rowid_reservations (container_id) VALUES (%@)
UPDATE app_libraries SET app_library_plist = %@, zone_rowid = %@ WHERE rowid = %@
INSERT OR REPLACE INTO app_libraries (rowid, app_library_name, app_library_plist, zone_rowid)  VALUES (%@, %@, %@, %@)
DELETE FROM app_libraries WHERE rowid = %@
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries
@24@?0@"PQLResultSet"8^@16
INSERT OR REPLACE INTO client_zones (rowid, zone_owner, zone_name, zone_plist) VALUES (%@, %@, %@, %@)
DELETE FROM client_zones where rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner != %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@ AND zone_name = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND zone_name = %@ AND zone_plist IS NOT NULL
SELECT rowid, zone_owner, zone_name, zone_plist FROM client_zones WHERE zone_owner = %@ AND rowid = %@
SELECT rowid, zone_owner, zone_name, zone_plist FROM server_zones WHERE zone_owner = %@
<rdar://problem/23820733>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_staged_file_id BETWEEN -9223372036854775808 AND 9223372036854775807)   AND (item_staged_file_id != item_file_id OR item_file_id IS NULL)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_bouncedname LIKE '%%.folder'   AND item_filename NOT LIKE '%%.folder'   AND item_type = 0   AND item_state IN (0, -1)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_tmpbounceno IS NOT NULL
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items AS li      WHERE li.item_type  in (1, 2, 8, 0)        AND li.item_state in (0, -1)        AND (li.item_scope in (2, 3)        OR call_block(%p, li.item_id))        AND li.item_notifs_rank >= %lld        AND li.item_user_visible = 1   ORDER BY li.item_notifs_rank ASC LIMIT %lld
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_doc_id, li.item_file_id, li.item_generation, li.item_localname, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_tmpbounceno, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.desired_version, li.item_live_conflict_loser_etags, li.item_thumb_live_signature, li.item_thumb_greedy FROM client_items AS li INNER JOIN client_sync_up AS su ON su.throttle_id = li.rowid WHERE su.zone_rowid = %@   AND (su.in_flight_diffs BETWEEN -9223372036854775808 AND 9223372036854775807)   AND su.throttle_state != 0
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_doc_id = %u AND desired_version IS NOT NULL   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 6, 7)
SELECT key FROM devices WHERE name = %@
INSERT INTO devices (name) VALUES (%@)
SELECT user_plist FROM users WHERE user_key = %@
SELECT user_plist FROM users WHERE user_name = %@
UPDATE users SET user_plist = %@ WHERE user_name = %@
SELECT user_key FROM users WHERE user_name = %@
SELECT user_name FROM users WHERE user_key = %@
INSERT INTO users (user_name) VALUES (%@)
UPDATE client_items SET item_min_supported_os_rowid = NULL
SELECT os, br, bird_schema, db_schema FROM %@ ORDER BY rowid DESC LIMIT 1
INSERT INTO %@ (date,os,br,bird_schema,db_schema) VALUES (%lu,%@,%@,%u,%@)
DELETE FROM telemetry_events
SELECT count(*) FROM server_state
missing entry in the server_state table
+[BRCAccountSession(BRCDatabaseManager) _checkIntegrity:serverTruth:session:skipBackupDetection:error:]
server_boot_history
SELECT old, new, counter, os, br FROM backup_detector
UPDATE backup_detector set old = %llu, new = %llu, counter = %llu, br = %@
SELECT count(*) FROM client_state
missing entry in the client_state table
boot_history
UPDATE backup_detector SET os = %@
SELECT * FROM client_state
there should always be one row in client_state {%@}
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]
SELECT uuid FROM backup_detector
B16@?0@"BRCServerZone"8
UPDATE client_state SET v = %@
unable to flush client state, crash to maintain consistency
-[BRCAccountSession(BRCDatabaseManager) _finishClientTruthConnectionSetupWithError:]_block_invoke
B16@?0@"BRCClientZone"8
CREATE TEMP TRIGGER child_item_count_notifs  AFTER UPDATE OF visible_child_count ON main.client_items  BEGIN  UPDATE client_items SET item_notifs_rank = bump_notifs_rank_and_trigger_notifs(old.rowid)   WHERE old.visible_child_count != new.visible_child_count     AND rowid = old.rowid     AND item_type = 0 ; END
%lld
PRAGMA cache_size = %@
PRAGMA cache_spill = %@
SELECT state FROM server_state
there should always be one row in server_state: %@
-[BRCAccountSession(BRCDatabaseManager) _finishServerTruthConnectionSetupWithError:]_block_invoke
server.db
PRAGMA recursive_triggers = true
db is stale even after recreating
+[BRCAccountSession(BRCDatabaseManager) _openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:]
we should be able to attach the server db {%@}
SELECT bird_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 1
SELECT bird_schema FROM boot_history ORDER BY rowid DESC LIMIT 1
server
client
>>> BROKEN STRUCTURE
>>> SYNC DISABLED (app not installed)
>>> NEEDS UPGRADE
- %@
-----------------------------------------------------
+ app library: %@
 - not done dumping items -
SELECT count(*) FROM boot_history
%u containers matching '%s'
-[BRCAccountSession(BRCDatabaseManager) dumpStatusToFileHandle:zoneName:tracker:error:]
-[BRCAccountSession(BRCDatabaseManager) dumpDatabaseToFileHandle:zoneName:includeAllItems:tracker:error:]
dump taken at %@ [account=%@] [home=%@]
dump taken at %@
boot_history (startup %.1fs ago)
server_truth
SELECT date,os,br,bird_schema,db_schema FROM server_boot_history ORDER BY rowid DESC LIMIT 10
  [%s] OS:%s CloudDocs:%s BirdSchema:%u DBSchema:%u
client_truth
SELECT date,os,br,bird_schema,db_schema FROM boot_history ORDER BY rowid DESC LIMIT 10
backup_detector
SELECT old,new,counter,os,br FROM backup_detector
  [%u|%u|%u] OS:%s CloudDocs:%s DBSchema:%ld
SELECT * FROM server_state
server_state
-----------------------------------------------------
client_state
-----------------------------------------------------
devices:
SELECT key, name FROM devices
    o "%s" (%ld)
users:
SELECT user_key, user_name, user_plist FROM users
    o "%s" %s (%ld)
%u containers matching '%s'
-----------------------------------------------------
-[BRCAccountSession(BRCDatabaseManager) dumpFileCoordinationInfoToFileHandle:error:]
backup
<rdar://problem/29182551>
SELECT COUNT(1) FROM client_items
totalNumberOfItems
SELECT COUNT(1) FROM client_items WHERE item_type = 2
totalNumberOfFaults
SELECT COUNT(1) FROM client_items WHERE item_type = 1
totalNumberOfDocuments
SELECT COUNT(1) FROM client_items WHERE item_type = 0
totalNumberOfDirectories
internal-db-%d.%03d
old-db-%d.%03d
DatabaseFromTheFuture
database has a major version from the future: %d (want at most %d)
com.apple.bird.account-migrator
com.apple.bird.account-migrator.throttle
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
v12@?0c8
com.apple.bird.handle-account-changes
com.apple.brc.push
com.apple.bird.migration-setter
com.apple.Preferences
account.1
com.apple.ubd.prsid
com.apple.bird.disabled-events
com.apple.bird.push
com.apple.bird.sync
com.apple.bird.configuration-server-update
com.apple.bird.transmogrify
com.apple.bird.cache-delete.push
com.apple.bird.aggressive-pcs-chain
com.apple.bird.analytics-report
com.apple.bird.app-telemetry
com.apple.bird.db-integrity-check
session-watchdog
com.apple.bird
timed out waiting for %u seconds for account session to close!
-[BRCAccountHandler __destroySessionWithIntents:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/notifs/BRCAccountHandler.m
B16@?0Q8
%@'%@'
Disabled - iCloud Drive database is from the future
#%lu FAIL %s
#%lu fd = %d
SqliteSQL
Still unable to open account after attempted reset: %@ (underlying: %@, sql: %@)
open result: %@
-[BRCAccountHandler _loadCurrentOnDiskAccountSessionWithError:]
db load failed
v20@?0B8@"NSError"12
v16@?0@"NSObject<OS_xpc_object>"8
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %@)
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d, item_tmpbounceno = %@  WHERE rowid = %llu
FSEventToSyncUp
UserDownload
analytics-reporter
wait-on-idle
v12@?0B8
SELECT retry_count FROM telemetry_failure_counts WHERE item_id = %@ AND zone_rowid = %@
DELETE FROM telemetry_failure_counts WHERE item_id = %@ AND zone_rowid = %@
INSERT OR REPLACE INTO telemetry_failure_counts (retry_count, item_id, zone_rowid) VALUES (%lld, %@, %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_sharing_options & 4) != 0 AND item_type IN (0) AND rowid > %llu ORDER BY rowid ASC LIMIT 1
v16@?0@"BRCSyncConsistencyReport"8
analytics metrics
%@: %@
v16@?0@"NSMutableArray"8
SyncHealthReport:
v16@?0@"NSString"8
SELECT COUNT(1) FROM telemetry_events
SELECT rowid, payload FROM telemetry_events ORDER BY rowid ASC LIMIT %llu
DELETE FROM telemetry_events WHERE rowid <= %llu
INSERT INTO telemetry_events (payload) VALUES (%@)
DELETE FROM telemetry_events ORDER BY rowid ASC LIMIT %u
DELETE FROM telemetry_failure_counts AS tf WHERE NOT EXISTS (SELECT 1 FROM server_items AS si WHERE si.item_id = tf.item_id AND si.zone_rowid = tf.zone_rowid) AND NOT item_id_is_root(tf.item_id)
AllowiCloudAnalytics
<%@ t:%.2fs%@>
isPackage
contentSize
syncUpBatchSize
 i:%@ %ssz:%lld su-batch:%lld
pkg 
didSucceed
isDownloadingForBackup
isRecursiveDownload
itemCount
totalContentSize
 sz:%lld cnt:%lld %s%s
recursive 
for-backup
v32@?0@"NSString"8@16^B24
<%@:%p e:%@ ppcs:%@ spcs:%@>
SELECT ci.zone_rowid, IFNULL(si.pcs_state, 0) FROM client_items AS ci LEFT JOIN server_items AS si ON ci.item_id = si.item_id AND ci.zone_rowid = si.zone_rowid WHERE ci.rowid = %lld
AND item_localsyncupstate = 3
AND desired_version IS NOT NULL
AND item_localsyncupstate = 4
v32@?0@"BRMangledID"8@"BRCErrorGrouping"16^B24
en_US_POSIX
yyyy-MM-dd HH:mm:ss
SELECT error_domain, error_code, error_message, error_timestamp, service, item_rowid FROM item_errors
SELECT 1 FROM client_items WHERE rowid = %llu %@
DELETE FROM item_errors WHERE item_rowid = %llu AND service = %d
SELECT cd.throttle_id, cd.last_try_stamp FROM client_downloads AS cd INNER JOIN client_items AS li ON cd.throttle_id = li.rowid WHERE cd.last_try_stamp > 0 AND cd.last_try_stamp < %lld AND cd.retry_count = 0 AND cd.throttle_state = 1 AND li.item_state IN (0, -1) AND li.desired_version IS NOT NULL
SELECT cu.throttle_id, cu.last_try_stamp FROM client_uploads AS cu INNER JOIN client_items AS li ON cu.throttle_id = li.rowid WHERE cu.last_try_stamp > 0 AND cu.last_try_stamp < %lld AND cu.retry_count = 0 AND cu.throttle_state = 1 AND li.item_state IN (0, -1) AND li.item_localsyncupstate = 3
SELECT csu.throttle_id, csu.last_try_stamp FROM client_sync_up AS csu INNER JOIN client_items AS li ON csu.throttle_id = li.rowid WHERE csu.last_try_stamp > 0 AND csu.last_try_stamp < %lld AND csu.retry_count = 0 AND csu.throttle_state = 1 AND li.item_localsyncupstate = 4
SELECT ci.rowid FROM client_items AS ci LEFT JOIN client_sync_up AS cs ON ci.rowid = cs.throttle_id WHERE ci.item_localsyncupstate = 4 AND ci.item_min_supported_os_rowid IS NULL AND IFNULL(cs.throttle_state, 0) = 0
SELECT ci.rowid FROM client_items AS ci LEFT JOIN client_uploads AS cu ON ci.rowid = cu.throttle_id WHERE ci.item_localsyncupstate = 3 AND ci.item_type IN (1, 6) AND ci.item_state IN (0, -1) AND IFNULL(cu.throttle_state, 0) = 0
SELECT ci.rowid FROM client_items AS ci LEFT JOIN client_downloads AS cd ON ci.rowid = cd.throttle_id WHERE ci.desired_version IS NOT NULL AND ci.item_staged_file_id IS NULL AND cd.download_kind = %d AND IFNULL(cd.throttle_state, 0) = 0 AND ci.item_state IN (0, -1) AND call_block(%p, ci.desired_version)
SELECT crt.throttle_id, crt.last_try_stamp FROM client_reader_throttle AS crt INNER JOIN client_items AS ci ON crt.throttle_id = ci.rowid WHERE crt.last_try_stamp > 0 AND crt.last_try_stamp < %lld AND crt.retry_count = 0 AND crt.throttle_state = 1 AND ci.item_state IN (0, -1) AND ci.item_localsyncupstate = 2
SELECT ci.rowid FROM client_items AS ci LEFT JOIN client_reader_throttle AS crt ON ci.rowid = crt.throttle_id WHERE ci.item_localsyncupstate = 2 AND ci.item_type IN (1, 6) AND ci.item_state IN (0, -1) AND IFNULL(crt.throttle_state, 0) = 0
SELECT ci.rowid FROM client_items AS ci INNER JOIN client_reader_throttle AS crt ON ci.rowid = crt.throttle_id WHERE ci.item_localsyncupstate = 2 AND ci.item_type IN (1, 6) AND ci.item_state IN (0, -1) AND crt.retry_count > %lld
uploadError: none
uploadError: %@
syncUpError: none
syncUpError: %@
downloadError: none
downloadError: %@
syncUpSharedZoneError: none
syncUpSharedZoneError: %@;%ld pcs:%s count:%@
syncUpPrivateZoneError: none
syncUpPrivateZoneError: %@;%ld pcs:%s count:%@
syncDownSharedZoneError: none
syncDownSharedZoneError: %@;%ld pcs:%s count:%@
syncDownPrivateZoneError: none
syncDownPrivateZoneError: %@;%ld pcs:%s count:%@
v32@?0@"NSNumber"8@"NSNumber"16^B24
com.apple.CloudDocsDaemon.telemetry-disk-checker
v24@?0@"NSNumber"8@"NSError"16
minimumOSName
recordId
sharing.fetch-user-record-id
unreachable: no record and no error
v24@?0@"NSDictionary"8@"NSError"16
zone-health-check
fault
share-accept-fault
alias
fs-root
symlink
finder-bookmark
bookmark-fault
live
dead
lost
reserved
lost(z)
rejected
needs-read
needs-upload
needs-sync-up
share-id
web-shared-ro
web-shared-rw
public-share-ro
public-share-rw
private-share-ro
private-share-rw
read-only-record
p:%@ 
n:"%@" 
(o:"%@") 
target:"%@" 
etag:%@ 
bt:%lld 
lu:%lld 
fa:%lld 
m:%s 
hidden-ext 
ea:%@ 
has-finder-tags 
trash-put-back{%@, %@} 
creator:%@ 
ckInfo
parentID
state
type
mode
birthtime
lastusedtime
favoriterank
aliasTarget
finderTags
hiddenExt
xattrSig
putBackPath
putBackParentID
creatorRowID
item %s has invalid state: %d
item %s has invalid type: %d
item %s has invalid mode: 0%0x
item %s has an invalid parent id
SELECT name FROM devices WHERE key = %lld
prev-etag:%@ 
mt:%lld 
sz:%@ 
tsz:%@ 
<pkg-pending>
<file-pending>
sig:%@ 
<pending>
tsig:%@ 
losers:{%@} 
ess:%ld 
device:%@ 
last-editor:%@ 
quarantine:%u 
mtime
name
size
thumbnailSize
thumbnail
content
editedKey
deviceKey
deviceName
conflictLoserEtags
quarantineInfo
_%@_%@.%@
_%@_%@
synced-all
share-synced-all
synced-st-all
synced-ct-all
item-id
item-shared
item-owner
st-all
st-ckinfo
st-state
st-alias-state
st-mode
st-birthtime
st-parent-id
st-filename
st-hidden-ext
st-xattr
st-finder-tags
st-trash-put-back
st-last-used-time
st-favorite-rank
st-symlink-target
st-directory-mtime
ct-all
ct-ckinfo
ct-mtime
ct-name
ct-size
ct-sig
ct-xattr
ct-thumb
ct-losers
ct-quarantine
ct-edited
fs-all
fs-state
fs-document-id
fs-file-id
fs-generation
fs-localname
fs-scope
fs-stage
lct-all
lct-ul-assets
lct-ul-error
l-all
l-min-os
l-sync-up-state
l-dl-version
l-app-library
l-user-visibility
sc-ckinfo
m-oob-sync
m-forced-conflict
m-cross-zone-moved
m-initial-scan
m-needs-sharing-info
path
isWritable
isExecutable
symlinkContent
signature
xattrIndex
DIRECTORY
FILE
SYMLINK
TOMBSTONE
(unknown: %i)
com.apple.brc.notififcation-mgr
app-lib
home-desktop-or-docs
top-item
item
desktop-path-match
com.apple.icloud.itemName
#pc#d#b#-#l#s#w
brok
UF_COMPRESSED
com.apple.metadata:_kMDItemUserTags
com.apple.clouddocs.security
pkpass
com.apple.FinderInfo
com.apple.finder.copy.preserveinbackups.com.apple.clouddocs.private.share-bookmark#N
path:'%@' parentFileID:%llu
 fileID:%llu
 size:%llu
 mtime:%lu
 mode:%c%c%c%c%c%c%c%c%c%c
 quarantine:%u
 br-alias
 finder-alias
 documentID:%u
 generationID:%u fd:%d refs:%u
 appLibrary:%@
path:'%@' unresolved
path:'%@/%@' unresolved
absolute
relative
base
parentFileID
documentID
generationID
finderInfo
fileID
birth
Can't init mutex
Can't destroy mutex
Dead lock
Invalid mutex
Can't unlock mutex
Don't call %@.
-[BRCMinHeap init]
<BRCMinHeap %p objects:%@ array:[
%p:%@, 
side-car.sync-up
SELECT item_state, item_side_car_ckinfo, item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_doc_id, li.item_file_id, li.item_generation, li.item_localname, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_tmpbounceno, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.desired_version, li.item_live_conflict_loser_etags, li.item_thumb_live_signature, li.item_thumb_greedy FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.throttle_state != 0    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_stat_ckinfo IS NOT NULL    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
account-waiter
unavailable
no account
restricted
available
unhandled account status
v24@?0q8@"NSError"16
zoneName
sharedZone
errorDomain
errorCode
errorDescription
lastStep
itemID
reason
operationType
nonDiscretionary
hasForegroundClients
isPCSChained
evict-item-operation
evict-item
inactive
active
pending-lost
same-lib-target
eperm
pending-flush
pending-parent
pending-scan
pending-download
pending-target
pending-child
pending-coordination
pending-migration
pending-flock
pending-sync-dn
pending-sync-up
pending-quota
toolarge
pending-sync-down
pending-winner
pending-disk
sync-up-scheduled
ineligible
BRCFSSchedulerBaseDidUpdateHasWorkNotification
SELECT next_retry_stamp > %llu FROM %@ WHERE %@
SELECT 1 FROM %@ WHERE %@ AND throttle_state = 1 LIMIT 1
SELECT throttle_state FROM %@ WHERE %@ AND throttle_state != 0
SELECT zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp%@%@ FROM %@ WHERE %@%@
 %@ attempts:%d
 last:%@
 next:%@
 cleanup:%@
[%ld %@]
SELECT throttle_state, COUNT(*) FROM %@ WHERE %@ GROUP BY throttle_state
 %@:%lld
 idle
UPDATE %@ SET   throttle_state = 1, retry_count = %u, last_try_stamp = %llu, next_retry_stamp = %llu, expire_stamp = %llu WHERE %@
INSERT INTO %@ (  throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, %@ %@ %@) VALUES (  %u, %u, %lld, %lld, %lld, %@ %@ %@)
UPDATE %@ SET  throttle_state = %d, retry_count = %u, last_try_stamp = %lld, next_retry_stamp = %lld, expire_stamp = %lld%@ %@  WHERE %@
UPDATE %@ SET throttle_state = 1 WHERE throttle_state = %u %@%@
AND 
SELECT retry_count, last_try_stamp, next_retry_stamp, expire_stamp, throttle_state FROM %@ WHERE %@
UPDATE %@   SET throttle_state = call_block(%@, next_retry_stamp) WHERE %@
DELETE FROM %@ WHERE %@
UPDATE %@   SET retry_count = 0, next_retry_stamp = 0 WHERE %@
DELETE FROM %@ WHERE throttle_state = 0 AND expire_stamp <= %lld
SELECT throttle_id FROM %@ WHERE throttle_state > 0 LIMIT 1
  SELECT next_retry_stamp, %@     FROM %@    WHERE throttle_state = 1          %@%@%@      AND next_retry_stamp >= 0 ORDER BY next_retry_stamp    LIMIT %u
AND (
with active work
watchItem
watchChildren
watchDescendants
withInitialGather
withContainers
docs
data
dirs
faults
extern
trash
dirs-only
com.apple.brc.pipe
<%@ %p
 gathering
 {%@}
 {descendants of 
 {children of 
 {item at 
[fid:%@]
[fid:%@ n:%@]
 (%@%@)}
|withAliases
 {NSMDQ
 data
 docs
 dirs-only
 dirs
 faults
 ext
 trash
 queued:%ld>
v32@?0@"NSNumber"8@"BRProgressUpdate"16^B24
v16@?0@"NSArray"8
v20@?0B8@"BRCDataOrDocsScopeGatherer"12
-[BRCNotificationPipe(IPCs) watchItemAtURL:options:gatherReply:]
v24@?0@"BRCURLToItemLookup"8@"NSError"16
-[BRCNotificationPipe(IPCs) watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:]
-[BRCNotificationPipe(IPCs) watchScopes:appLibraryIDs:gatherReply:]
-[BRCNotificationPipe(IPCs) watchScopes:gatherReply:]
-[BRCNotificationPipe(IPCs) boostPriority:]
-[BRCNotificationPipe(IPCs) invalidate]
WaitingTimeBeforeDisplay
MinimalDisplayTime
default
alternate
other
cancel
v16@?0Q8
v32@?0@8@16^B24
_IOS
_DEFAULT
keynote
_KEYNOTE
numbers
_NUMBERS
pages
_PAGES
_FOLDER
SHARING_JOIN_HEADER_FOLDER
SHARING_JOIN_HEADER
SHARING_JOIN_HEADER_DEFAULT_APP
SHARING_JOIN_HEADER_NO_DOCUMENT_NAME
SHARING_JOIN_MESSAGE_PRIVATE
SHARING_JOIN_MESSAGE_PUBLIC
SHARING_JOIN_ALT_BUTTON
SHARING_JOIN_DEFAULT_BUTTON
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
SHARING_ICLOUD_SETUP_HEADER_IOS
SHARING_ICLOUD_SETUP_MESSAGE_IOS
SHARING_ICLOUD_SETUP_ALT_BUTTON_IOS
PREVIEW_BUTTON
SHARING_ICLOUD_SETUP_DEFAULT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_HEADER_IOS
SHARING_ICLOUD_DRIVE_SETUP_MESSAGE_IOS
SHARING_ICLOUD_DRIVE_SETUP_ALT_BUTTON_IOS
SHARING_ICLOUD_DRIVE_SETUP_DEFAULT_BUTTON_IOS
shareMetadata
SHARING_APP_NOT_INSTALLED_HEADER_IOS
SHARING_APP_NOT_INSTALLED_MESSAGE_IOS
SHARING_APP_NOT_INSTALLED_ALT_BUTTON_IOS
SHARING_APP_NOT_INSTALLED_DEFAULT_BUTTON_IOS
SHARING_PROFILE_DISABLED_HEADER_IOS
SHARING_PROFILE_DISABLED_MESSAGE_IOS
SHARING_PROFILE_DISABLED_DEFAULT_BUTTON_IOS
SHARING_GENERIC_ERROR_HEADER
SHARING_GENERIC_ERROR_MESSAGE
SHARING_GENERIC_ERROR_DEFAULT_BUTTON
SHARING_DEVICE_OFFLINE_ERROR_HEADER
SHARING_DEVICE_OFFLINE_ERROR_MESSAGE
SHARING_DEVICE_OFFLINE_ERROR_DEFAULT_BUTTON
SHARING_ICLOUD_NOT_REACHABLE_HEADER
SHARING_ICLOUD_NOT_REACHABLE_MESSAGE
SHARING_ICLOUD_NOT_REACHABLE_DEFAULT_BUTTON
SHARING_NO_LONGER_SHARED_HEADER
SHARING_NO_LONGER_SHARED_MESSAGE
SHARING_NO_LONGER_SHARED_BUTTON
SHARING_PARTICIPANT_LIMIT_REACHED_HEADER
SHARING_PARTICIPANT_LIMIT_REACHED_MESSAGE
SHARING_PARTICIPANT_LIMIT_REACHED_ALT_BUTTON
SHARING_FALLBACK_SUCCESS_HEADER
SHARING_FALLBACK_SUCCESS_DEFAULT_BUTTON
docs.icloud.com:
-[BRCBookmark _resolveTargetWithError:]
-[BRCBookmark writeUnderParent:name:error:]
.%@.alias
sync bubble setting is not supported
-[BRCDaemon setIsInSyncBubble:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/BRCDaemon.m
Logged out - iCloud Drive is not configured
com.apple.bird.xpc-listener-ready
com.apple.bird.account-startup-queue
com.apple.bird.account-resume-queue
com.apple.bird.startup-queue
account-loader
%@.txt
-[BRCDaemon recursivelySizeDirectoryAtPath:]
com.apple.language.changed
v12@?0i8
share-accept
v24@?0@8@"NSError"16
share accept operations
 %@: %@
v32@?0@"NSString"8@"BRCSharingAcceptFlowOperation"16^B24
our connection was invalidated
-[BRCDaemon listener:shouldAcceptNewConnection:]_block_invoke
NOT 
UnknownHost
can't create directory at
%s '%s' %{errno}d
%s '%s'; error: %s
rejection
creation
update
Apply Changes
client_unapplied_table
SELECT throttle_state, COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id IN (SELECT item_rank FROM server_items) GROUP BY throttle_state
SELECT COUNT(*) FROM client_unapplied_table WHERE %@ AND throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
 expired:%@
 has-faulting-barriers
UPDATE client_unapplied_table   SET throttle_state = call_block(%@, next_retry_stamp, apply_kind), apply_kind = %u WHERE %@
apply_kind
apply_kind = %u
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = %u    AND throttle_id IN (SELECT item_rank FROM server_items                        WHERE zone_rowid = %@ AND item_parent_id = %@)
UPDATE client_unapplied_table    SET throttle_state = 1  WHERE throttle_state = %u    AND throttle_id IN (SELECT item_rank FROM server_items WHERE (item_sharing_options & 4) != 0 AND item_id_is_shared_root(item_parent_id))
WITH RECURSIVE  reschedulable_items (item_rank, item_id) AS (    SELECT si.item_rank, si.item_id      FROM server_items AS si     WHERE si.zone_rowid = %@       AND si.item_type IN (0, 4) AND NOT EXISTS (SELECT 1 FROM client_items AS ci         WHERE ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = si.item_id           AND ci.item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_id IN (SELECT item_rank FROM reschedulable_items WHERE item_id = %@)
WITH RECURSIVE  reschedulable_items (throttle_id, item_id) AS (    SELECT -pi.rowid, pi.item_id      FROM client_items AS pi     WHERE pi.zone_rowid = %@       AND pi.item_type IN (0, 4) AND NOT EXISTS (SELECT 1 FROM client_items AS ci         WHERE ci.item_parent_zone_rowid = %@ AND ci.item_parent_id = pi.item_id           AND ci.item_state IN (0, -1)    )  ) UPDATE client_unapplied_table    SET throttle_state = 1  WHERE zone_rowid = %@     AND throttle_state = 25    AND throttle_id IN (SELECT throttle_id FROM reschedulable_items WHERE item_id = %@)
UPDATE client_unapplied_table SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@ AND throttle_id = %llu
SELECT item_rank, zone_rowid, item_id, item_alias_target FROM server_items WHERE item_alias_target LIKE %@ ESCAPE '\' AND item_type = 3
SELECT item_rank, zone_rowid FROM server_items WHERE item_alias_target = %@ AND item_type = 3
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind) SELECT %@, -rowid, 1, %u FROM client_items WHERE zone_rowid = %@ AND item_localsyncupstate = 1
INSERT OR REPLACE INTO client_unapplied_table(zone_rowid, throttle_id, throttle_state, apply_kind) SELECT %@, item_rank, 1, %u FROM server_items WHERE zone_rowid = %@
throttle_id, zone_rowid, apply_kind
v20@?0@"PQLResultSet"8i16
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d AND retry_count < %lld LIMIT 1
SELECT 1 FROM client_unapplied_table WHERE zone_rowid = %@ AND throttle_state = 1 AND apply_kind = %d LIMIT 1
apply is failing
sync is blocked for client zone: %@
UPDATE client_unapplied_table   SET throttle_state = 1 WHERE throttle_state = 26   AND throttle_id = %llu
DELETE FROM client_unapplied_table WHERE throttle_id > 0   AND throttle_id NOT IN (SELECT item_rank FROM server_items)
DELETE FROM client_unapplied_table WHERE throttle_id < 0   AND -throttle_id NOT IN (SELECT rowid FROM client_items)
<rdar://problem/23822933>
INSERT OR IGNORE INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT %@, item_rank, 1, 0, 0, 0, 0, %u  FROM server_items WHERE zone_rowid = %@ AND item_rank >= %lld AND item_rank < %lld
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci WHERE ci.item_localsyncupstate = 1 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_unapplied_table AS cu WHERE cu.throttle_id = ci.rowid AND cu.throttle_state != 0)
expected full table scan
SELECT si.item_rank, si.zone_rowid FROM server_items AS si LEFT JOIN client_items AS ci ON ci.item_id = si.item_id AND ci.zone_rowid = si.zone_rowid WHERE si.item_state = 0 AND si.item_type != 3 AND ((si.version_ckinfo IS NOT NULL AND si.version_ckinfo != ci.version_ckinfo) OR (si.item_stat_ckinfo != ci.item_stat_ckinfo AND NOT (si.item_sharing_options & 4 != 0 AND %@ != (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = si.zone_rowid))) OR ci.rowid IS NULL) AND NOT EXISTS (SELECT 1 FROM client_unapplied_table AS cu WHERE cu.throttle_id = si.item_rank AND cu.throttle_state != 0)
mobile
B24@?0@"NSURL"8@"NSError"16
v56@?0@"NSURL"8@"NSString"16@"NSString"24@"NSNumber"32@"NSNumber"40I48B52
Library/Application Support/CloudDocs
session
backup_manifest.db
Library/Mobile Documents/
-[BRCAppLibrary init]
initial creation
generationID is nil
maxLostStamp
deepScanStamp
deepScanReason
metadataChangetag
metadataNeedsSyncUp
generationID is nil after update
rootQuota
B16@?0@"BRCSharedClientZone"8
public
private
state of documentScopePublic changed
foreground
background
%@[%@] %@ {s:%@} ino:%@ gen:%@
 ago
 deep-scan:%@%@ -reason:%@
 queries:
 metadata:%s etag:%@ %@
 max-lost:%@%@
 bundles:{%@}
<%@>
item_type != 3
item_scope = 2 AND %@
item_scope = 1 AND %@
(%@) OR (%@)
(   item_scope = 2 OR item_scope = 1) AND item_type = 3
item_scope = 3
AND item_type IN (1, 2, 8, 5, 6, 7)
AND item_type = 0
%@%%
%% %@%%
AND (item_filename LIKE %@ ESCAPE '\' OR item_filename LIKE %@ ESCAPE '\')
AND ((%@) OR (%@) OR (%@))
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1, 1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy    FROM client_items   WHERE item_notifs_rank >= %lld     AND item_notifs_rank < %lld     AND +app_library_rowid = %@     AND item_state IN (0, -1)     %@      %@      %@ ORDER BY item_notifs_rank   LIMIT %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy    FROM client_items   WHERE item_parent_id = %@      AND item_notifs_rank >= %lld      AND item_notifs_rank < %lld     %@      AND item_parent_zone_rowid = %@ ORDER BY item_notifs_rank   LIMIT %lld
AND item_state IN (0, -1)
item_filename
version_mtime DESC
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy    FROM client_items   WHERE item_parent_id = %@      AND item_state IN (0, -1)     AND item_parent_zone_rowid = %@ ORDER BY %@   LIMIT  %lld   OFFSET %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy     FROM client_items    WHERE item_parent_id = %@       AND item_state IN (0, -1)      AND item_type = 0      AND item_parent_zone_rowid = %@       AND item_user_visible = 1  ORDER BY item_filename    LIMIT %lld
v16@?0@"BRCFileCoordinator"8
SELECT item_sharing_options, item_user_visible, item_scope FROM client_items WHERE item_id = %@ AND zone_rowid = %@
UPDATE client_items  SET item_state = call_block(%p,   item_type, IFNULL(item_localname, item_filename), item_file_id,   item_generation, version_mtime, item_xattr_signature,   item_mode, rowid, item_min_supported_os_rowid,   app_library_rowid, item_sharing_options, item_user_visible, item_scope),   item_processing_stamp = inc_and_fetch64(%p), app_library_rowid = %@ WHERE item_parent_zone_rowid = %@ AND item_parent_id = %@ AND rowid > %lu AND item_state = 0 AND item_type != 4 ORDER BY rowid LIMIT %lu
not 
INSERT OR REPLACE INTO mark_children_lost_progress(zone_rowid, item_parent_id, item_parent_file_id, last_updated_row_id, app_library_rowid) VALUES ( %@, %@, %@, %lu, %@)
DELETE FROM mark_children_lost_progress WHERE zone_rowid = %@ AND item_parent_id = %@ AND last_updated_row_id = %lu
SELECT item_parent_id, item_parent_file_id, last_updated_row_id FROM mark_children_lost_progress WHERE zone_rowid = %@ LIMIT 2
fs-root was moved from %@ to %@
fs-root was removed
SELECT auto_client_item_count > 0 FROM app_libraries  WHERE rowid = %@
SELECT 1 FROM client_items  WHERE item_type NOT IN (0, 4)    AND item_state IN (0, -1)    AND app_library_rowid = %@ LIMIT 1
SELECT auto_document_with_local_changes_count > 0 FROM app_libraries WHERE rowid = %@
SELECT auto_aggregate_size FROM app_libraries WHERE rowid = %@
v40@?0Q8Q16Q24@"NSError"32
AND app_library_rowid = %@
SELECT auto_document_count FROM app_libraries WHERE rowid = %@
now evicting uploaded items
no longer evicting uploaded items
evicting uploaded items
not evicting uploaded items
SELECT DISTINCT ci.zone_rowid FROM client_items AS ci WHERE ci.app_library_rowid = %@   AND ci.item_state IN (0, -1)   AND (ci.item_sharing_options & 4) != 0   AND (SELECT 1 FROM client_zones AS cz WHERE cz.rowid = ci.zone_rowid AND cz.zone_owner != %@)
%@/%%
SELECT rowid FROM client_items WHERE app_library_rowid = %@ AND zone_rowid = %@ AND (item_sharing_options & 4) != 0 AND item_state IN (0, -1) LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy          FROM client_items         WHERE item_type = 3           AND item_state = 0           AND item_alias_target LIKE %@ ESCAPE '\'
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND app_library_rowid = %@
item not found
needs-lost
initial-scan
resetting
no-documents
no-data
root-created
scan-on-caught-up
root-moved-to-clouddocs
needs-cross-move-fixup
evict-uploaded-items
ch-root
q24@?0@"BRCRetryCounter"8@"BRCRetryCounter"16
NULL
%lld-%@-%s
throttle_id = %lld AND download_etag = %@ AND download_kind = %u
throttle_id, download_etag, download_kind
%lld, %@, %u
  SELECT throttle_id, next_retry_stamp, app_library_rowid,           download_etag, transfer_stage,           unit_count_completed     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_kind = %d ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
Downloader
client_downloads
downloader
com.apple.bird.downloader
com.apple.bird.download-tracker
SELECT throttle_id   FROM client_downloads  WHERE throttle_state =1    AND download_kind = %d
UPDATE client_downloads SET  transfer_stage = %@, transfer_operation = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
ORDER BY download_kind, download_etag
download_kind, download_etag, transfer_operation, transfer_queue, download_error, app_library_rowid
%s:%@
_retry
 pending-retry
 download:done/cancelled
 downloading:%.1f%%
 op:%@
v32@?0@"NSMutableString"8@"PQLResultSet"16i24i28
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, zone_rowid
%@, %@, %lld, %@, %@, %@, %u, %@, %ld, %lld, %@, %@
app_library_rowid = %@, transfer_queue = %@, download_priority = %ld, download_request_stamp = %lld , zone_rowid = %@
SELECT transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
SELECT app_library_rowid FROM client_downloads WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@   AND transfer_operation = %@
done
UPDATE client_downloads SET  transfer_operation = call_block(%@, next_retry_stamp), download_error = %@, unit_count_completed = %lld WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_record = NULL, transfer_stage = call_block(%@, transfer_stage), transfer_operation = NULL, download_error = %@ WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = %@, transfer_stage = %@, transfer_operation = NULL, download_error = NULL WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
_done
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@
SELECT distinct app_library_rowid FROM client_downloads WHERE zone_rowid = %@
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = %u AND throttle_id = %lld
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_state = 43   AND call_block(%@, transfer_size, app_library_rowid, zone_rowid)
UPDATE client_downloads SET  throttle_state = %d, transfer_queue = %@, transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL, unit_count_completed = 0 WHERE throttle_id = %@ AND download_kind = %u AND download_etag = %@
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND download_kind = %u   AND throttle_state != 0
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE throttle_id = %lld AND throttle_state != 0
SELECT transfer_operation    FROM client_downloads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, download_kind, download_etag, transfer_operation, transfer_stage, app_library_rowid, zone_rowid, throttle_state, transfer_size FROM client_downloads WHERE %@ AND throttle_state > %d
UPDATE client_downloads SET download_etag = %@ WHERE throttle_id = %lld AND download_etag = %@ AND download_kind = %d
SELECT SUM(transfer_size) FROM client_downloads WHERE throttle_state = 1
SELECT transfer_operation IS NOT NULL FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND download_etag = %@
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind != %u AND transfer_queue = %@ LIMIT 1
DELETE FROM client_pkg_items WHERE item_doc_id = %@
SELECT transfer_stage FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d AND download_etag = %@    AND transfer_queue = '_done'
brpackage-extended
SELECT 1 FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d  LIMIT 1
SELECT transfer_queue, download_etag, throttle_state   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %d
v32@?0@"NSString"8@"GSAddition"16^B24
SELECT 1 FROM client_downloads WHERE throttle_id = %llu AND download_kind = %u AND transfer_queue = %@ LIMIT 1
SELECT transfer_queue, download_etag, throttle_state FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND throttle_state != 0
SELECT throttle_state, transfer_queue, transfer_stage, transfer_record   FROM client_downloads  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
UPDATE client_downloads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, zone_rowid, transfer_queue   FROM client_downloads  WHERE throttle_state = 1 GROUP BY app_library_rowid, zone_rowid, transfer_queue
_prepare
transfer_queue = '_retry' AND transfer_operation IS NULL
rowid, throttle_id, app_library_rowid, zone_rowid
DELETE FROM client_downloads WHERE rowid = %@
UPDATE client_downloads SET transfer_queue = %@ WHERE rowid = %@
thumbnail-%lld-%@
v24@?0@"BRCDownloadThumbnail"8@"NSError"16
Not enough available disk space(have %@ need %@)
content-%lld-%@
v24@?0@"BRCDownloadContent"8@"NSError"16
UPDATE client_downloads    SET throttle_state = %u  WHERE throttle_id = %lld AND download_kind = %u AND download_etag = %@
loser-%lld-%@
v24@?0@"BRCDownloadVersion"8@"NSError"16
  SELECT throttle_id, next_retry_stamp, download_kind, download_etag     FROM client_downloads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL      AND download_priority >= %ld ORDER BY download_priority DESC, download_request_stamp DESC
UPDATE client_downloads    SET transfer_queue = '_retry'  WHERE throttle_id = %ld AND download_kind = %u AND download_etag = %@
SELECT version_ckinfo FROM client_items WHERE rowid = %ld
SELECT MIN(next_retry_stamp) FROM client_downloads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, error_message, service) VALUES (%llu, %@, %ld, %@, %d)
SyncHealth
Download
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci WHERE ci.desired_version IS NOT NULL AND NOT EXISTS (SELECT 1 FROM client_downloads AS downloader WHERE ci.rowid = downloader.throttle_id AND downloader.throttle_state != 0)
version
(%s)
never
%@ ago
ready
%llu.%llu%@
-%lld %@
%lld %@
bytes
thousand
-%.1f %@
%.1f %@
million
-%.2f %@
%.2f %@
billion
billions
 (%lld)
    
<unknown>
0x%llx
%@~%d
 and unlinking data
<rdar://problem/23829401>
DELETE FROM client_pkg_items WHERE item_doc_id IN (SELECT item_doc_id FROM client_items WHERE zone_rowid = %@ AND +item_type = 1 AND  HEX(SUBSTR(version_content_signature, 1, 1)) = '1B')
DELETE FROM client_items WHERE zone_rowid = %@
<rdar://problem//26848061>
DELETE FROM client_document_access WHERE item_rowid in (SELECT rowid FROM client_items WHERE zone_rowid = %@)
UPDATE client_items SET item_parent_id = %@ WHERE item_parent_zone_rowid != zone_rowid AND item_parent_zone_rowid = %@
reset %s
still-wants-data-unlinked
com.apple.decmpfs
.icloud-drive.do-not-delete
.CloudDocs
com.apple.file-provider-domain-id#PN
.ubd
.do-not-delete
com~apple~Keynote/Documents/Recovered Data
com~apple~Keynote/Documents/Recovered Data.folder
com~apple~Numbers/Documents/Recovered Data
com~apple~Numbers/Documents/Recovered Data.folder
com~apple~Pages/Documents/Recovered Data
com~apple~Pages/Documents/Recovered Data.folder
Application Support/Ubiquity
Caches/com.apple.ubd
Logs/CrashReporter/DiagnosticLogs/Ubiquity
created
found
 lost-stamp:%@ ago
 doc:%@
 ino:%@
 gen:%@
 s_ino:%@
 s_gen:%u
 pn:"%@"
 tbn:"%@"
 bln:"%@"
 sc:%@
unknown
stagedFileID
stagedGenerationID
physicalName
schedStamp
bouncedName
scope
tmpBounceNo
SELECT 1 FROM server_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM server_items WHERE item_id = %@ AND item_state = 0 AND zone_rowid = %@ LIMIT 1
SELECT item_id FROM server_items WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT name FROM os_names WHERE rowid = %@
INSERT OR IGNORE INTO os_names (name) VALUES (%@)
SELECT rowid FROM os_names WHERE name = %@
r:%lld 
i:%@ 
i:%@:%@ 
al:%@ 
o:%@ 
ld{%@} 
up:%@
 %@:%@
needs-os-upgrade
 uv:%d
 mt:%lld
 pzone:%@
 ppm:%@
 st{%@
 pino:%@
 sharing-options:{%@}
<%@:%p {ID : %@; name : %@}>
"%@" id:%@
rowid
side-car-ckinfo
syncUpState
owner
sharingOptions
minimumSupportedOS
isUserVisible
localDiffs
notifsRank
DELETE FROM client_items WHERE rowid = %lld
 WITH RECURSIVE item_parents (item_id, zone_rowid, item_file_id) AS (     SELECT item_parent_id, item_parent_zone_rowid, item_file_id FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_file_id FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u ) SELECT item_file_id, item_id, zone_rowid FROM item_parents
B24@?0@"BRCItemGlobalID"8@"NSNumber"16
eexist at root
NEEDS_OS_UPGRADE_ERROR
NEEDS_OS_UPGRADE_ERROR_NO_OS_NAME_IOS
Deleted from DB
Inserted into DB
Ignored
Saved into DB
com.apple.trash.put-back.path#PS
com.apple.trash.put-back.icloud-parent-id#PS
com.apple.last-used.time#PS
com.apple.favorite-rank.number#PS
SELECT item_sharing_options FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = 0
-[BRCLocalItem evictInTask:options:error:]
-[BRCLocalItem startDownloadInTask:options:error:]
SELECT item_user_visible FROM client_items WHERE item_id = %@ AND zone_rowid = %@
contents
only-thumbnail
content-for-thumb
-[BRFieldXattrBlob(BRCStageAdditions) applyToFileDescriptor:error:]
, ...
%s%@...
%s%@
brc_pack_xattrs
syncUpBudget
com.apple.brc.sync
q16@?0q8
metadata-sync
shared-db-sync
zone-health-sync
migrate-pcs-sync
push
B16@?0@"BRCPrivateClientZone"8
periodicSyncDate
container-metadata
shared db
zone-health
side-car
DELETE FROM side_car_lookahead
 [sync-%@ throttled (next-try:in %.01fs)] error: %@
down
online
healthy
offline
low disk
SELECT COUNT(*) from server_items
SELECT COUNT(*) from client_items
 available
%@ (%@)
no environment
no token
system
+ network: %@
+ disk:    %@
+ power:   %@
+ optimize storage: %s
enabled
disabled
+ device name:   %@
scheduler
+ items:                 client:%@, server: %@
                         warning: %@
output may be truncated
+ push environment:      %@
+ push token:            %@
+ global sync up budget: %@
+ periodic sync:         %@
+ available quota:       %@%@
 [pending-quota]
+ container-metadata:    %@ %@
+ sharedb:               %@ %@
+ zone-health:           %@ %@
+ side-car:              %@ %@
+ pcs-migration:         %@
complete
unfinished
+ account: %@
not ready
v24@?0@"NSString"8@"NSError"16
com.apple.icloud-container.
%@%@
zoid
com.apple.bird.push-persistence
UIDevice
initUIDevice
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRCContainerScheduler.m
classUIDevice
/System/Library/Frameworks/UIKit.framework/UIKit
UIKitLibrary
Can't open UIKit
shared
sharing/iWork-publishing-fetch
unreachable: No error and invalid number of records %lu
 ul-error:%@
 uploaded-assets
uploadedAssets
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state != 1
SELECT app_library_rowid FROM client_items WHERE item_alias_target = %@ AND item_type = 3
 ct{%@}
downloading{
 (%@)
}:%@
faulting
 thumb{
greedy
%ssig:%@
 live-losers:{%@}
 resolved-losers:{%@}
currentVersion
desiredVersion
liveConflictLoserEtags
resolvedConflictLoserEtags
liveThumbnailSignature
shouldAutomaticallyDownloadThumbnail
item %s is a live document without a version
missing-version
INSERT OR IGNORE INTO item_recursive_properties  ( item_rowid, item_parent_id, item_id, zone_rowid, item_type, item_parent_zone_rowid ) VALUES  (%lld, %@, %@, %@, %d, %@ )
UPDATE item_recursive_properties SET  faults_count = %lld, needs_faulting_count = %lld, uploaded_size = %lld, needs_upload_size = %lld, uploaded_count = %lld, needs_upload_count = %lld, downloaded_size = %lld, needs_download_size = %lld, downloaded_count = %lld, needs_download_count = %lld, dl_unstaged_count = %lld, needs_dl_unstage_count = %lld, synced_up_count = %lld, needs_sync_up_count = %lld, over_quota_count = %lld, shared_by_me_count = %lld, shared_to_me_count = %lld, needs_delete_doc_count = %lld  WHERE item_rowid = %lld 
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %@, %@, %@, %lld, %lld, %lld, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %d)
UPDATE client_items SET item_state = %d, item_processing_stamp = %@ WHERE rowid = %llu
UPDATE client_items SET  item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d, item_tmpbounceno = %@, version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@, version_uploaded_assets = %@, version_upload_error = %@, desired_version = %@, item_live_conflict_loser_etags = %@, item_thumb_live_signature = %@, item_thumb_greedy = %d  WHERE rowid = %llu
SELECT zone_rowid, item_rank FROM server_items WHERE item_alias_target = %@ AND item_type = 3
-[BRCDocumentItem evictInTask:options:error:]
Item %@ is not on disk
file is flocked
from
' to '
read
v32@?0@"NSURL"8@"NSError"16@?<v@?>24
delete
rename
v40@?0@"NSURL"8@"NSURL"16@"NSError"24@?<v@?>32
 and content update
sync-down/container-metadata
infoPlist
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
B16@?0@"NSError"8
v32@?0@"CKServerChangeToken"8Q16@"NSError"24
<upload[%lld] %@>
upload
v16@?0@"BRCFSEventToSyncUpEvent"8
v24@?0@"CKRecord"8d16
v24@?0@"CKRecord"8@"NSError"16
uploading
<%@:%@[%@] %@>
clientRequestID
lastSyncStatus
lastSyncDownDate
changeToken
SELECT 1 FROM server_xattr_blobs WHERE zone_rowid = %@ AND signature = %@
INSERT OR IGNORE INTO server_xattr_blobs (zone_rowid, signature, data) VALUES (%@, %@, %@)
SELECT data FROM server_xattr_blobs WHERE zone_rowid = %@ AND signature = %@
SELECT item_id FROM server_items  WHERE item_id != %@ AND item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
UPDATE OR IGNORE server_items SET  item_rank = NULL, item_filename = %@, item_origname = IFNULL(item_origname, item_filename) WHERE zone_rowid = %@ AND item_id = %@
SELECT item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE record_name = %@
UPDATE server_items SET   item_rank = NULL, item_origname = %@, pcs_state = %d, item_sharing_options = (%lu | (item_sharing_options & %lu)), item_side_car_ckinfo = %@, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, quota_used = %@, recursive_child_count = %@, shared_children_count = %@, shared_alias_count = %@, child_count = %@ WHERE item_id = %@ AND zone_rowid = %@
INSERT INTO server_items ( item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_origname, pcs_state, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, zone_rowid, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count) VALUES ( %@, %@, %ld, %@, NULL, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET  version_mtime = %lld  WHERE item_id = %@ AND zone_rowid = %@
a side fault
an excluded
no record to update: %@
-[BRCServerZone _saveItemID:stat:serverMetrics:record:error:]
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu)), version_name = %@, version_ckinfo = %@, version_mtime = %lld, version_size = %lld, version_thumb_size = %lld, version_thumb_signature = %@, version_content_signature = %@, version_xattr_signature = %@, version_edited_since_shared = %@, version_device = %@, version_conflict_loser_etags = %@, version_quarantine_info = %@  WHERE item_id = %@ AND zone_rowid = %@
chained
unchained
-[BRCServerZone _saveEditedDirOrDocStructureRecord:error:]
-[BRCServerZone _saveEditedDocumentContentRecord:error:]
-[BRCServerZone _saveEditedSymlinkRecord:error:]
UPDATE server_items    SET version_name = %@  WHERE item_id = %@ AND zone_rowid = %@
-[BRCServerZone _saveEditedAliasRecord:zonesNeedingAllocRanks:error:]
INSERT OR REPLACE INTO server_items ( zone_rowid, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator) VALUES ( %@, %d, %@, %@, %ld, %@, NULL, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@)
UPDATE server_items SET item_rank = NULL WHERE item_id = %@ AND zone_rowid = %@
UPDATE server_items    SET item_rank = NULL, item_sharing_options = (%lu | (item_sharing_options & %lu)),         item_mode = (%ld | (item_mode & %lu))  WHERE item_id = %@ AND zone_rowid = %@
unreachable: structure record which isn't a directory or document
-[BRCServerZone _saveEditedRecord:zonesNeedingAllocRanks:error:]
UPDATE server_items AS si   SET item_sharing_options = ((item_sharing_options & %ld) | IFNULL((SELECT (pi.item_sharing_options & %ld) FROM server_items AS pi WHERE si.item_parent_id = pi.item_id AND si.zone_rowid = pi.zone_rowid), 0)) WHERE si.zone_rowid = %@ AND si.item_id = %@
UPDATE server_items SET item_state = 1, item_filename = %@, item_rank = NULL, item_parent_id = %@ WHERE zone_rowid = %@ AND item_id = %@
B24@?0@"CKRecordID"8@"CKRecord"16
UPDATE server_items SET item_sharing_options = %ld WHERE item_id = %@ AND zone_rowid = %@
SELECT rowid, item_id, item_parent_id, item_state, item_type, version_ckinfo, item_favoriterank, item_lastusedtime, item_finder_tags IS NOT NULL, item_sharing_options   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL
SELECT 1 FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0 LIMIT 1
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@ AND item_parent_id = %@ AND item_state = 0
<rdar://problem/37451020>
WITH RECURSIVE item_parents (item_id, item_state, item_type, depth) AS (     SELECT item_id, item_state, item_type, 0       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, c.item_state, c.item_type, c.depth + 1       FROM server_items AS p INNER JOIN item_parents AS c USING (item_id)      WHERE p.zone_rowid = %@      LIMIT %u) SELECT item_state, depth, item_type FROM item_parents WHERE item_id_is_root(item_id) OR item_type = 4
WITH RECURSIVE item_parents (item_parent_id, item_sharing_options) AS (     SELECT item_parent_id, item_sharing_options       FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT p.item_parent_id, p.item_sharing_options       FROM server_items AS p INNER JOIN item_parents AS c      WHERE p.zone_rowid = %@        AND c.item_parent_id = p.item_id      LIMIT %u) SELECT 1 FROM item_parents WHERE (item_sharing_options & 4) != 0
UPDATE server_items SET item_depth = %lld WHERE rowid = %lld
SELECT rowid   FROM server_items  WHERE zone_rowid = %@ AND item_rank IS NULL ORDER BY item_depth ASC
UPDATE server_items SET item_rank = %lld WHERE rowid = %lld
broken-structure
v40@?0@"CKServerChangeToken"8q16q24@"NSError"32
inconsistent 
pending-
<rdar://problem/23825896>
DELETE FROM server_xattr_blobs WHERE zone_rowid = %@   AND signature NOT IN (SELECT item_xattr_signature FROM server_items WHERE zone_rowid = %@ AND item_xattr_signature IS NOT NULL)   AND signature NOT IN (SELECT version_xattr_signature FROM server_items WHERE zone_rowid = %@ AND version_xattr_signature IS NOT NULL)
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_rank = %lld
UPDATE server_items SET item_parent_id = %@ WHERE zone_rowid = %@ AND item_parent_id = %@
DELETE FROM server_items WHERE zone_rowid = %@ AND item_id = %@
v24@?0Q8^B16
DELETE FROM server_items WHERE zone_rowid = %@
DELETE FROM server_xattr_blobs WHERE zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@
SELECT item_id FROM server_items WHERE zone_rowid = %@   AND item_parent_id = %@   AND item_type = 0
Needs Apply Changes:
-------------------
Under %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@ ORDER BY item_filename
ERROR: item ID %@ seen twice
> apply{%@}
B36@?0@"BRCItemID"8i16@"NSString"20^@28
server items (%@)
============
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count, rowid      FROM server_items    WHERE zone_rowid = %@ AND item_parent_id = %@
- too many items, stopping -
- cancelled -
%*sERROR: item ID %@ seen twice
%*s%@
%*s> apply{%@}
B28@?0@"BRCItemID"8i16^@20
----------------------%@[%@]----------------------
SELECT COUNT(*) FROM server_items WHERE zone_rowid = %@
ORPHANED ITEMS:
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE zone_rowid = %@ AND call_block(%@, rowid)
SELECT signature FROM server_xattr_blobs WHERE zone_rowid = %@
server xattrs
-------------
you must override this
-[BRCServerZone validateStructureLoggingToFile:db:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRCServerZone.m
-[BRCServerZone validateItemsLoggingToFile:db:]
moved
create table backup_manifest (relative_path blob not null, file_id integer, doc_id integer, gen_count integer, is_directory integer, new_file_id integer, new_doc_id integer, new_gen_count integer)
INSERT INTO backup_manifest (relative_path, file_id, doc_id, gen_count, is_directory, new_file_id, new_doc_id, new_gen_count) VALUES (%s, %lld, %lld, %d, %d, NULL, NULL, NULL)
CREATE UNIQUE INDEX relative_path_index ON backup_manifest (relative_path)
SELECT * FROM backup_manifest WHERE new_file_id IS NULL
UPDATE backup_manifest SET new_file_id = %llu,    new_doc_id = %@,    new_gen_count = %d WHERE relative_path = %@
ATTACH DATABASE %@ AS clientdb
PRAGMA foreign_keys = ON
PRAGMA foreign_keys = OFF
UPDATE clientdb.client_items SET item_file_id = -item_file_id
UPDATE clientdb.client_items SET item_doc_id = -item_doc_id
CREATE INDEX file_id_gen_count_index ON backup_manifest(file_id, gen_count)
CREATE INDEX doc_id_index ON backup_manifest(doc_id)
UPDATE clientdb.client_items  SET item_generation = (SELECT new_gen_count FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id AND gen_count = clientdb.client_items.item_generation)
UPDATE OR IGNORE clientdb.client_items  SET item_file_id = (SELECT new_file_id FROM backup_manifest WHERE file_id = -clientdb.client_items.item_file_id)
UPDATE OR IGNORE clientdb.client_items  SET item_doc_id = (SELECT new_doc_id FROM backup_manifest WHERE doc_id = -clientdb.client_items.item_doc_id)
UPDATE OR IGNORE clientdb.client_items SET item_staged_generation = NULL WHERE item_staged_generation IS NOT NULL
UPDATE OR IGNORE clientdb.client_items SET item_staged_file_id = NULL WHERE item_staged_file_id IS NOT NULL
SELECT counter FROM clientdb.backup_detector
UPDATE clientdb.backup_detector SET old = %llu, new = %llu
fsevents
SELECT new_file_id FROM backup_manifest WHERE file_id = %llu
structure
encryptedBasename
basehash
bounceNo
extension
parent
target
executable
writable
fileContent
pkgManifest
pkgContent
pkgSignature
pkgXattrs
thumb1024
thumbQLMetadata
lastOpenTime
favoriteRank
xattr
restorePath
restoreParent
targetPath
bookmarkContent
lastEditorName
countMetrics
ftags
quarantine
ignorePkgExtension
updateTime
zoneState
zoneDetails
message
records
perParticipantMetadata
shareReference
alias/
shareAlias/
symlink/
finderBookmark/
directory/
documentStructure/
documentContent/
directory/appData_
directory/appDocuments_
ppm_
br_initialItem
br_pathMatchID
br_pathMatchEtag
brc_itemIDWithSession: are not supposed to trigger an error: %@
-[CKRecordID(BRCItemAdditions) brc_itemIDWithSession:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/CKRecord+BRCItemAdditions.m
Found appLibrary %@ with invalid dbRowID for zoneID %@
Can't find appLibrary corresponding to zoneID %@
SELECT zone_rowid FROM server_items WHERE item_id = %@
missing key '%@' in %@ record %@
invalid value for key '%@' in %@ record %@: %@ %@
-[CKRecord(BRCSerializationAdditions) deserializeAliasInfo:serverZone:error:]
Records zoneID %@ must be equal to parents zoneID %@
invalid record type for record %@: %@
recordType
-[CKRecord(BRCSerializationAdditions) deserializeStatInfo:serverMetrics:itemID:session:error:]
%@ record %@ is both a file and a package
asset+pkg
%@ record %@ is neither a file nor a package
pkg+signature
-[CKRecord(BRCSerializationAdditions) deserializeVersion:fakeStatInfo:clientZone:error:]
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_id = %@
none
_Documents
%@-%@
br_oplockMergeEtag
br_updateDropped
user
ckUserId
last
first
device
_Data
AppContainer
BRCFakeRecordWithErrorMarkerFor20716676
DOCUMENT_DEFAULT_NAME
nil-token
nil-cursor
com.apple.CloudDocs.MobileDocumentsFileProvider
sync-up-%@
sync-up/
v28@?0B8Q12@"NSError"20
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state = 0
v24@?0@"_BRCOperation"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
unreachable: Timed out while waiting for new web-sharing identity
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM server_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
SyncUp
notSignedIn
driveDisabled
appMissing
profileDisabled
redirectReason
:nooverride
sharing/accept-flow
accept-flow-next-step
com.apple.clouddocs.accept-shared-url
%@:%@
step:
folderShare-
iWorkShare-
documentShare-
can't fast forward to download step (currentIndex: %lu, downloadIndex: %lu, stepCount: %lu)
can't fast forward to download step from current possition (currentIndex: %lu)
v24@?0B8B12@"NSError"16
target app %@ is missing entitlement %@
shareURL
Share %@ can not be accepted right now.
unreachable: document doesn't exists anymore
Can't get bookmark string at %@
v24@?0^{__CFString=}8^{__CFError=}16
com.apple.DocumentsApp
shareddocuments
Don't know how to open shared item at %@
unreachable: No operation error and no share id
v24@?0@"CKShareMetadata"8@"NSError"16
_liveFileURL
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/CKDATABASESERVICE
itms-apps://?bundleIdentifier=%@
https
&%@=%@
%@=%@
testZone
<%@ delay:%.1fs id:%@
 next-try in %.1fs>
 expired>
<%@ {  m:%.1f  h:%.1f  d:%.1f  }>
no budget left for %.1fs {
budget available {
  %d:%02d:%02ds ago
  m:%.1f%% (%.1f)
  h:%.1f%% (%.1f)
  d:%.1f%% (%.1f)
totalSyncOperations
failedSyncOperations
options
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE app_library_name = %@ AND (app_library_owner = %@ OR app_library_owner IS NULL)
SELECT rowid, app_library_name, app_library_plist, zone_rowid FROM app_libraries WHERE zone_rowid = %@
can't initialize library root with invalid library rowid %@
-[BRCItemID_v9 _initAsLibraryRootWithAppLibraryRowID:enclosureUUID:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/BRCDatabaseSchema.m
CREATE TABLE devices ( key integer primary key, name text unique not null)
CREATE TABLE server_boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE server_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE server_state (state, config_plist)
INSERT INTO server_state values (NULL, NULL)
CREATE TABLE backup_detector( old integer, new integer, counter integer, os text not null, br text not null)
INSERT INTO backup_detector (old, new, counter, os, br) VALUES (%llu, %llu, %llu, %@, %@)
CREATE TABLE boot_history ( date integer primary key, os text not null, br text not null, bird_schema integer not null, db_schema integer not null)
CREATE TABLE client_containers( container_id text primary key, container_schema_version integer not null, container_plist blob)
CREATE TABLE client_state (v)
INSERT INTO client_state values (NULL)
SELECT container_id, container_plist FROM client_containers
items
unapplied_table
server_items
UPDATE %@ SET item_live_conflict_loser_etags = call_block(%@, item_live_conflict_loser_etags) WHERE item_live_conflict_loser_etags IS NOT NULL
INSERT OR IGNORE INTO %@ (throttle_id) SELECT item_rank FROM %@ WHERE version_conflict_loser_etags IS NOT NULL AND item_rank IS NOT NULL
CREATE TABLE server_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE server_xattr_blobs ( zone_rowid integer not null, signature blob not null, data blob not null, PRIMARY KEY(zone_rowid, signature))
CREATE TABLE server_pending_fetches ( zone_rowid integer not null, record_id blob not null, record blob, PRIMARY KEY (zone_rowid, record_id))
INSERT INTO server_zones (rowid, zone_owner, zone_name, zone_plist) SELECT NULL, %@, container_id, container_plist FROM server_containers
DROP TABLE server_containers
SELECT rowid, zone_name FROM server_zones
server_xattrs
INSERT INTO server_xattr_blobs SELECT %@, signature, data FROM %@
DROP TABLE %@
pending_fetches
CREATE TABLE client_zones ( rowid integer PRIMARY KEY, zone_owner text not null, zone_name text not null, zone_plist blob, UNIQUE (zone_owner, zone_name))
CREATE TABLE client_reader_throttle ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0)
CREATE INDEX "client_reader_throttle/zone_rowid" ON client_reader_throttle (zone_rowid)
CREATE INDEX "client_reader_throttle/next_retry_stamp_active_state" ON client_reader_throttle (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_reader_throttle/zone_rowid__throttle_state" ON client_reader_throttle (throttle_state, zone_rowid)
CREATE INDEX "client_reader_throttle/expire_stamp_inactive_state" ON client_reader_throttle (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, apply_kind integer not null)
CREATE INDEX "client_unapplied_table/zone_rowid" ON client_unapplied_table (zone_rowid)
CREATE INDEX "client_unapplied_table/next_retry_stamp_active_state" ON client_unapplied_table (throttle_state, next_retry_stamp ASC, throttle_id ASC) WHERE throttle_state = 1
CREATE INDEX "client_unapplied_table/zone_rowid__kind__throttle_state" ON client_unapplied_table (throttle_state, zone_rowid, apply_kind)
CREATE INDEX "client_unapplied_table/expire_stamp_inactive_state" ON client_unapplied_table (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE TABLE client_document_access ( zone_rowid text not null , item_rowid integer not null , evictable integer not null , access_time integer not null default 0, PRIMARY KEY (zone_rowid, item_rowid))
CREATE INDEX "client_document_access/access_item" ON client_document_access (access_time)
CREATE INDEX "client_document_access/evictable" ON client_document_access (evictable)
DROP TABLE IF EXISTS document_access
INSERT INTO client_zones (rowid, zone_owner, zone_name, zone_plist)    SELECT call_block(%@, container_id), %@, container_id, container_plist      FROM client_containers
DROP TABLE client_containers
SELECT rowid, zone_name FROM client_zones
desired_additions
UPDATE %@   SET item_state = -1, item_processing_stamp = 1 WHERE item_type = 3   AND item_localsyncupstate = 3
reader_throttle
 CREATE TABLE server_items ( zone_rowid integer not null, item_id blob not null, item_rank integer, item_sharing_options integer not null default 0, item_sharing_etag blob default null, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text not null, item_origname text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, PRIMARY KEY (zone_rowid, item_id), UNIQUE (item_rank))
CREATE INDEX "server_items/path_index" ON server_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "server_items/alias_map" ON server_items (item_type, item_filename, zone_rowid, item_rank) WHERE item_type = 3
CREATE INDEX "server_items/item_rank" ON server_items (zone_rowid, item_rank)
CREATE INDEX "server_items/item_parent_id__item_state" ON server_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "server_items/item_xattr_signature" ON server_items (zone_rowid, item_xattr_signature)
CREATE INDEX "server_items/version_xattr_signature" ON server_items (zone_rowid, version_xattr_signature)
CREATE TABLE server_owners ( owner_key integer primary key, owner_name text not null, owner_plist blob, UNIQUE (owner_name))
DROP TABLE IF EXISTS %@
INSERT INTO server_items (zone_rowid, item_sharing_options, item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info) SELECT %@, call_block(%@, item_iwork_sharing_info), item_id, item_rank, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_origname, item_hidden_ext, item_finder_tags, item_xattr_signature, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info FROM %@
DROP VIEW IF EXISTS %@
server_items_view
 CREATE TABLE client_items ( rowid integer primary key, zone_rowid integer not null, item_id blob not null, item_sharing_options integer not null default 0, item_localsyncupstate integer, item_in_flight_diffs integer, item_local_diffs integer not null, item_notifs_rank integer not null, item_transfer_priority integer, item_processing_stamp integer, item_doc_id integer, item_file_id integer, item_generation, item_localname text, item_bouncedname text, item_staged_file_id integer, item_staged_generation integer, item_stat_ckinfo blob, item_state integer not null, item_type integer not null, item_mode integer not null, item_creator_id integer not null, item_birthtime integer not null, item_parent_id blob not null, item_filename text, item_hidden_ext integer not null, item_finder_tags blob, item_xattr_signature blob, item_live_conflict_loser_etags blob, version_ckinfo blob, version_mtime integer, version_name text, version_size integer, version_thumb_size integer, version_thumb_signature blob, version_content_signature blob, version_xattr_signature blob, version_device integer, version_conflict_loser_etags blob, version_quarantine_info blob, version_uploaded_assets blob, version_upload_error blob, desired_version blob, UNIQUE (zone_rowid, item_id), UNIQUE (zone_rowid, item_doc_id), UNIQUE (zone_rowid, item_file_id), UNIQUE (item_staged_file_id), UNIQUE (zone_rowid, item_parent_id, item_localname))
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (zone_rowid, item_parent_id, item_state)
CREATE INDEX "client_items/item_path" ON client_items (zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/alias_map" ON client_items (item_type, item_filename, zone_rowid) WHERE item_type = 3
CREATE INDEX "client_items/item_in_flight_diffs" ON client_items (zone_rowid, item_in_flight_diffs)
CREATE INDEX "client_items/item_bouncedname" ON client_items (item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, zone_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/item_notifs_rank" ON client_items (zone_rowid, item_notifs_rank)
CREATE INDEX "client_items/download_index" ON client_items (zone_rowid, item_staged_file_id, desired_version)
CREATE INDEX "client_items/eviction_index" ON client_items (item_localsyncupstate, zone_rowid, version_size) WHERE item_localsyncupstate = 0
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items (item_localsyncupstate, zone_rowid, item_type) WHERE item_localsyncupstate = 4
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items (item_localsyncupstate, zone_rowid, item_state) WHERE item_localsyncupstate = 4
 CREATE TABLE client_pkg_items ( item_doc_id integer not null, rel_path text not null, zone_rowid integer not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
CREATE UNIQUE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
CREATE INDEX "client_pkg_items/size" ON client_pkg_items (item_doc_id, size)
CREATE INDEX "client_pkg_items/is_dirty" ON client_pkg_items (item_doc_id, is_dirty)
CREATE INDEX "client_pkg_items/zone_rowid" ON client_pkg_items (zone_rowid)
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, UNIQUE(transfer_stage))
CREATE INDEX "client_uploads/gc_index" ON client_uploads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_size" ON client_uploads (throttle_state, transfer_queue, transfer_operation, transfer_size ASC)  WHERE throttle_state = 1
CREATE INDEX IF NOT EXISTS "client_uploads/scheduling_by_stamp" ON client_uploads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_uploads/transfer_operation" ON client_uploads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_uploads/zone_rowid__throttle_state" ON client_uploads (throttle_state, zone_rowid)
CREATE INDEX "client_uploads/reset_index" ON client_uploads (zone_rowid, throttle_state)
CREATE INDEX "client_uploads/out_of_quota_index" ON client_uploads (throttle_state, zone_rowid, transfer_size)  WHERE throttle_state = 32
pkg_items
INSERT INTO client_items (rowid, zone_rowid, version_upload_error, item_sharing_options, item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version) SELECT rowid, %@, NULL, call_block(%@, item_iwork_sharing_info), item_id, item_localsyncupstate, item_in_flight_diffs, item_local_diffs, item_notifs_rank, item_transfer_priority, item_processing_stamp, item_doc_id, item_file_id, item_generation, item_localname, item_bouncedname, item_staged_file_id, item_staged_generation, item_stat_ckinfo, item_state, item_type, item_mode, item_creator_id, item_birthtime, item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_live_conflict_loser_etags, version_ckinfo, version_mtime, version_name, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, desired_version FROM %@
items_view
INSERT INTO client_pkg_items (zone_rowid, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT %@, item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM %@
DELETE FROM client_reader_throttle
INSERT INTO client_reader_throttle (zone_rowid, throttle_id, throttle_state) SELECT zone_rowid, rowid, 1 FROM client_items WHERE item_localsyncupstate = 2
INSERT INTO client_uploads (zone_rowid, throttle_id, throttle_state, item_id, transfer_queue, transfer_size) SELECT zone_rowid, rowid, 1, item_id, '_prepare', version_size + version_thumb_size  FROM client_items WHERE item_localsyncupstate = 1
DROP TABLE IF EXISTS server_alias_map
DELETE FROM client_unapplied_table
DROP TABLE IF EXISTS alias_map
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, -rowid, 1, item_id, %u FROM client_items WHERE item_localsyncupstate = 1
INSERT INTO client_unapplied_table (zone_rowid, throttle_id, throttle_state, item_id, apply_kind) SELECT zone_rowid, item_rank, 1, item_id, %u FROM server_items
DROP TABLE IF EXISTS client_desired_additions
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, item_id blob not null, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
CREATE INDEX "client_downloads/scheduling_by_priority" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_priority_and_kind" ON client_downloads (throttle_state, transfer_queue, transfer_operation, download_kind, download_priority DESC, download_request_stamp DESC) WHERE throttle_state = 1
CREATE INDEX "client_downloads/scheduling_by_stamp" ON client_downloads (throttle_state, transfer_queue, transfer_operation, next_retry_stamp ASC)  WHERE throttle_state = 1
CREATE INDEX "client_downloads/gc_index" ON client_downloads (throttle_state, expire_stamp ASC) WHERE throttle_state = 0
CREATE INDEX "client_downloads/transfer_operation" ON client_downloads (transfer_operation) WHERE transfer_operation IS NOT NULL
CREATE INDEX "client_downloads/zone_rowid__throttle_state" ON client_downloads (throttle_state, zone_rowid)
CREATE INDEX "client_downloads/reset_index" ON client_downloads (zone_rowid, throttle_state)
ALTER TABLE client_uploads ADD COLUMN upload_error blob
CREATE INDEX "client_downloads/low_disk_index" ON client_downloads (throttle_state, throttle_id, download_kind)  WHERE throttle_state = 43
DROP INDEX "client_document_access/access_item"
CREATE INDEX "server_items/version_size" ON server_items (version_size)
CREATE TABLE spotlight_ranks ( doc_id integer not null, notif_rank integer not null, PRIMARY KEY (doc_id, notif_rank ASC))
ALTER TABLE backup_detector ADD COLUMN uuid blob
UPDATE backup_detector SET uuid = %@
CREATE INDEX "client_pkg_items/item_doc_id" ON client_pkg_items (item_doc_id, zone_rowid)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1  AND item_localsyncupstate IN (2, 3, 4)
DROP INDEX "client_items/item_notifs_rank"
CREATE INDEX "client_items/item_notifs_rank" ON client_items (item_notifs_rank, zone_rowid)
CREATE INDEX "client_items/spotlight_index" ON client_items (item_type, item_state, item_doc_id, item_notifs_rank) WHERE item_type in (1, 2)
CREATE INDEX "spotlight_ranks/notif_rank" ON spotlight_ranks (notif_rank)
ALTER TABLE client_items ADD COLUMN item_scope integer NOT NULL DEFAULT 0
CREATE INDEX item_scope_index ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
CREATE INDEX pending_download_docs ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
ALTER TABLE server_items ADD COLUMN item_depth integer NOT NULL DEFAULT 0
CREATE INDEX "server_items/item_rank_depth" ON server_items (zone_rowid, item_rank, item_depth)
ALTER TABLE client_items ADD COLUMN item_min_supported_os_rowid integer DEFAULT NULL
CREATE TABLE os_names ( name text unique )
UPDATE client_document_access SET evictable = (SELECT version_mtime FROM client_items as ci WHERE ci.rowid = item_rowid) WHERE access_time = 0 AND evictable = 0 AND (SELECT version_size FROM client_items as ci WHERE ci.rowid = item_rowid) > %lld AND (SELECT item_type FROM client_items as ci WHERE ci.rowid = item_rowid) = 1
 CREATE TABLE app_libraries ( rowid integer PRIMARY KEY, app_library_plist blob )
SELECT rowid, zone_plist FROM client_zones
requestID
lastApplyRank
appliedTombstoneRanks
syncUpThrottle
syncDownThrottle
INSERT INTO app_libraries (rowid, app_library_plist) VALUES (%@, %@)
ALTER TABLE client_items ADD COLUMN app_library_rowid
UPDATE client_items SET app_library_rowid = zone_rowid
CREATE UNIQUE INDEX "client_items/item_doc_id" ON client_items (item_doc_id)
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items (item_file_id, item_state)WHERE item_state != -3
CREATE INDEX "client_items/item_id" ON client_items(item_id)
CREATE INDEX "client_items/item_file_id" ON client_items (item_file_id)
DROP INDEX "client_items/item_parent_id__item_state"
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (item_parent_id, item_state)
DROP INDEX "client_items/item_path"
CREATE INDEX "client_items/item_path" ON client_items (item_parent_id, item_filename)
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_id, item_localname)
 CREATE TABLE client_pkg_items_tmp ( item_doc_id integer not null, rel_path text not null, item_type integer not null, asset_rank integer not null, is_dirty integer, quarantine_info blob, file_id integer not null, signature_or_link blob, generation, size integer, mode integer, mtime integer, PRIMARY KEY (item_doc_id, rel_path ASC))
INSERT INTO client_pkg_items_tmp (item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime) SELECT item_doc_id, rel_path, item_type, asset_rank, is_dirty, quarantine_info, file_id, signature_or_link, generation, size, mode, mtime FROM client_pkg_items
DROP TABLE client_pkg_items
ALTER TABLE client_pkg_items_tmp RENAME TO client_pkg_items
DROP INDEX item_scope_index
CREATE INDEX "client_items/item_scope_index" ON client_items(zone_rowid, item_notifs_rank, item_scope, item_state)
DROP INDEX pending_download_docs
CREATE INDEX "client_items/pending_download_docs" ON client_items(item_doc_id, desired_version) WHERE desired_version != NULL
DROP INDEX "client_items/doc_sync_state"
CREATE INDEX "server_items/item_id" ON server_items(item_id)
CREATE TABLE users ( user_key integer primary key, user_name text not null, user_plist blob, UNIQUE (user_name))
INSERT INTO users(user_key, user_name, user_plist) SELECT owner_key, owner_name, owner_plist FROM server_owners
DROP TABLE server_owners
ALTER TABLE client_downloads ADD COLUMN unit_count_completed INTEGER DEFAULT 0
ALTER TABLE client_document_access RENAME TO client_document_access_tmp
CREATE TABLE client_document_access ( item_rowid integer primary key, evictable integer not null , access_time integer not null default 0)
INSERT INTO client_document_access(item_rowid, evictable, access_time) SELECT item_rowid, evictable, access_time FROM client_document_access_tmp
DROP TABLE client_document_access_tmp
ALTER TABLE server_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_parent_id BLOB DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_trash_put_back_path BLOB DEFAULT NULL
DROP INDEX "server_items/path_index"
CREATE INDEX "server_items/path_index" ON server_items (item_parent_id, item_filename)
ALTER TABLE client_uploads ADD COLUMN upload_priority integer DEFAULT 0
ALTER TABLE client_uploads ADD COLUMN upload_request_stamp integer DEFAULT 0
CREATE INDEX "client_pkg_items/asset_rank" ON client_pkg_items (item_doc_id, asset_rank)
DROP INDEX "client_items/lost_scan_index"
DROP INDEX "client_items/zombie_scan_index"
CREATE INDEX "client_items/lost_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -1
CREATE INDEX "client_items/zombie_scan_index" ON client_items (item_state, app_library_rowid, item_processing_stamp) WHERE item_state = -3
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate, item_type)WHERE item_type = 1
ALTER TABLE client_items ADD COLUMN item_thumb_greedy integer default 0
ALTER TABLE client_items ADD COLUMN item_thumb_live_signature blob default null
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid)
ALTER TABLE app_libraries ADD COLUMN app_library_name text default null
ALTER TABLE app_libraries ADD COLUMN app_library_owner text default null
ALTER TABLE app_libraries ADD COLUMN zone_rowid integer default 0
UPDATE app_libraries SET app_library_name = (SELECT zone_name FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     app_library_owner = (SELECT zone_owner FROM client_zones WHERE app_libraries.rowid = client_zones.rowid),     zone_rowid = rowid
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text not null, owner text, UNIQUE (container_id, owner))
SELECT zone_name, zone_owner, rowid FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (container_id, owner, rowid)  VALUES (%@, %@, %@)
DELETE FROM server_zones WHERE zone_plist IS NULL
INSERT INTO rowid_reservations  (rowid, container_id, owner) VALUES (%@, %@, %@)
CREATE INDEX "client_items/item_parent_id__item_state" ON client_items (app_library_rowid, item_parent_id, item_state)
ALTER TABLE rowid_reservations RENAME TO rowid_reservations_old
INSERT INTO rowid_reservations  ( rowid, container_id, owner ) SELECT rowid, container_id, owner FROM rowid_reservations_old
DROP TABLE rowid_reservations_old
CREATE UNIQUE INDEX "server_zones/zone_name__zone_owner" ON server_zones (zone_name, zone_owner)
CREATE UNIQUE INDEX "client_zones/zone_name__zone_owner" ON client_zones (zone_name, zone_owner)
SELECT rowid FROM rowid_reservations WHERE owner = %@
SELECT COUNT(*) FROM app_libraries GROUP BY app_library_name, app_library_owner
ALTER TABLE app_libraries RENAME TO app_libraries_old
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text default null , app_library_owner text default null , zone_rowid integer default 0 , UNIQUE (app_library_name, app_library_owner))
INSERT INTO app_libraries        (rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid) SELECT rowid, app_library_plist, app_library_name, app_library_name, app_library_owner, zone_rowid FROM app_libraries_old
DROP TABLE app_libraries_old
CREATE TABLE aggregates ( key TEXT NOT NULL, value INTEGER NOT NULL DEFAULT 0 )
INSERT INTO aggregates (key, value) SELECT 'version_size_sum', COALESCE(SUM(version_size), 0) FROM server_items
CREATE TRIGGER insert_version_sum_size AFTER INSERT ON server_items  BEGIN  UPDATE aggregates SET value = (value + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER update_version_sum_size UPDATE OF version_size ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0) + COALESCE(new.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TRIGGER delete_version_sum_size BEFORE DELETE ON server_items  BEGIN  UPDATE aggregates SET value = (value - COALESCE(old.version_size, 0)) WHERE key = 'version_size_sum';   END
CREATE TABLE client_pkg_sizes (item_doc_id integer not null primary key, aggregate_size integer not null default 0, largest_file_size integer not null default 0)
INSERT INTO client_pkg_sizes SELECT item_doc_id, COALESCE(SUM(size), 0), COALESCE(MAX(size), 0) FROM client_pkg_items GROUP BY item_doc_id
CREATE TRIGGER "client_pkg_items/increase_pkg_size" AFTER INSERT ON client_pkg_items BEGIN INSERT OR IGNORE INTO client_pkg_sizes VALUES (new.item_doc_id, 0, 0); UPDATE client_pkg_sizes SET aggregate_size = aggregate_size + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/update_pkg_size" UPDATE OF size ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) + COALESCE(new.size, 0), largest_file_size = MAX(COALESCE(new.size,0), largest_file_size) WHERE item_doc_id = new.item_doc_id; END
CREATE TRIGGER "client_pkg_items/reduce_pkg_size"  BEFORE DELETE ON client_pkg_items BEGIN UPDATE client_pkg_sizes SET aggregate_size = aggregate_size - COALESCE(old.size, 0) WHERE item_doc_id = old.item_doc_id; END
DROP INDEX "client_pkg_items/size"
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, share_metadata blob non null)
ALTER TABLE app_libraries ADD COLUMN auto_client_item_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_document_with_local_changes_count INTEGER DEFAULT 0
ALTER TABLE app_libraries ADD COLUMN auto_aggregate_size INTEGER DEFAULT 0
CREATE TRIGGER "client_items/insert_item" AFTER INSERT ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/delete_item" BEFORE delete ON client_items BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2; END
CREATE TRIGGER "client_items/update_size" UPDATE OF version_size, item_type, item_state ON client_items BEGIN  UPDATE app_libraries SET    auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size,0)  * (old.item_type = 1 AND old.item_state != 1) + COALESCE(new.version_size,0) * (new.item_type = 1 AND new.item_state != 1),    auto_document_count = auto_document_count - (old.item_type = 1 AND old.item_state != 1) + (new.item_type = 1 AND new.item_state != 1)      WHERE rowid = new.app_library_rowid; END
CREATE TRIGGER "client_items/update_changes_count" UPDATE OF item_type,item_localsyncupstate ON client_items BEGIN  UPDATE app_libraries set auto_document_with_local_changes_count = auto_document_with_local_changes_count - (old.item_type = 1 AND old.item_localsyncupstate >= 2) + (new.item_type = 1 AND new.item_localsyncupstate >= 2) where rowid = new.app_library_rowid; END
ALTER TABLE server_items ADD COLUMN pcs_state INTEGER NOT NULL DEFAULT 0
DROP TABLE share_metadata_cache
CREATE TABLE share_metadata_cache( item_rowid integer primary key, share_path text unique not null, record_id blob non null)
ALTER TABLE "client_uploads" ADD COLUMN app_library_rowid INTEGER
UPDATE "client_uploads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_uploads.throttle_id) 
ALTER TABLE "client_downloads" ADD COLUMN app_library_rowid INTEGER 
UPDATE "client_downloads" SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_items.rowid = client_downloads.throttle_id ) 
SELECT 1 FROM client_uploads WHERE app_library_rowid == NULL LIMIT 1
SELECT 1 FROM client_downloads WHERE app_library_rowid == NULL LIMIT 1
DROP TABLE IF EXISTS share_metadata_cache
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items(zone_rowid, item_parent_id, rowid)
CREATE TABLE mark_children_lost_progress(zone_rowid INTEGER NOT NULL, item_parent_id BLOB NOT NULL, last_updated_row_id INTEGER NOT NULL, UNIQUE(zone_rowid, item_parent_id))
ALTER TABLE client_pkg_items ADD COLUMN xattrs BLOB
DROP INDEX IF EXISTS "client_items/lost_scan_index"
DROP INDEX IF EXISTS "client_items/zombie_scan_index"
DROP INDEX IF EXISTS "client_items/lostzombie_scan_index"
CREATE INDEX "client_items/lostzombie_scan_index" ON client_items (item_processing_stamp) WHERE item_state IN (-1,-3)
ALTER TABLE server_pending_fetches ADD COLUMN deleted_record_type INTEGER NOT NULL DEFAULT 0
SELECT 1 FROM client_items WHERE zone_rowid NOT IN (SELECT rowid from client_zones)
SELECT 1 FROM server_items WHERE zone_rowid NOT IN (SELECT rowid from server_zones)
DROP TABLE IF EXISTS sqlite_stat1
DROP TABLE IF EXISTS sqlite_stat2
DROP TABLE IF EXISTS sqlite_stat3
DROP TABLE IF EXISTS sqlite_stat4
ALTER TABLE mark_children_lost_progress ADD COLUMN item_parent_file_id integer
UPDATE server_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM server_zones WHERE zone_owner != %@)
UPDATE client_items SET item_parent_id = call_block(%@, item_parent_id, item_id) WHERE zone_rowid IN (SELECT rowid FROM client_zones WHERE client_zones.zone_owner != %@)
ALTER TABLE client_document_access ADD COLUMN modify_access_time integer NOT NULL DEFAULT 0
UPDATE client_document_access SET modify_access_time = MAX(access_time, IFNULL((SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid), 0))
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time)
INSERT OR IGNORE INTO client_document_access (item_rowid, evictable, access_time, modify_access_time) SELECT rowid, 0, 0, version_mtime FROM client_items WHERE item_type IN (1, 2, 8)
DROP INDEX IF EXISTS "server_pending_fetches/record_index"
CREATE INDEX "server_pending_fetches/record_is_null" ON server_pending_fetches (zone_rowid) WHERE record IS NULL
CREATE INDEX "server_pending_fetches/record_is_not_null" ON server_pending_fetches (zone_rowid) WHERE (record >= '')
ALTER TABLE client_document_access ADD COLUMN indexable integer NOT NULL DEFAULT 0
UPDATE client_document_access SET indexable = 1 WHERE (SELECT item_scope FROM client_items AS ci WHERE ci.rowid = item_rowid) = 2
CREATE INDEX "client_document_access/indexable" ON client_document_access(indexable) WHERE indexable != 0
CREATE TABLE client_document_access( item_rowid integer primary key, access_time integer not null default 0, modify_access_time integer NOT NULL DEFAULT 0, properties integer NOT NULL DEFAULT 0)
INSERT INTO client_document_access(item_rowid, access_time, modify_access_time, properties) SELECT item_rowid, access_time, modify_access_time, ((case when indexable != 0 then 0x2 else 0 end) | (case when evictable != 0 then 0x1 else 0 end)) FROM client_document_access_tmp
DROP INDEX "client_document_access/evictable"
DROP INDEX "client_document_access/evictable/item_rowid"
DROP INDEX "client_document_access/modify_access_item"
DROP INDEX "client_document_access/indexable"
CREATE INDEX "client_document_access/evictable" ON client_document_access (properties) WHERE ((properties & 0x1) != 0)
CREATE INDEX "client_document_access/evictable/item_rowid" ON client_document_access (item_rowid);
CREATE INDEX "client_document_access/modify_access_item" ON client_document_access(modify_access_time);
CREATE INDEX "client_document_access/indexable" ON client_document_access(properties) WHERE ((properties & 0x2) != 0)
CREATE INDEX "client_items/doc_sync_state" ON client_items (zone_rowid, item_localsyncupstate) WHERE item_type IN (1, 6)
CREATE INDEX "client_document_access/access_item" ON client_document_access(access_time);
CREATE TRIGGER IF NOT EXISTS "client_items/update_app_library" AFTER UPDATE OF app_library_rowid ON client_items WHEN new.app_library_rowid <> old.app_library_rowid BEGIN  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type != 4 AND old.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size - COALESCE(old.version_size, 0), auto_document_count = auto_document_count - 1      WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count - 1 WHERE rowid = old.app_library_rowid AND old.item_type = 1 AND old.item_localsyncupstate >= 2;  UPDATE app_libraries SET auto_client_item_count = auto_client_item_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type != 4 AND new.item_type != 3;  UPDATE app_libraries SET auto_aggregate_size = auto_aggregate_size + COALESCE(new.version_size, 0), auto_document_count = auto_document_count + 1      WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_state != 1;  UPDATE app_libraries SET auto_document_with_local_changes_count = auto_document_with_local_changes_count + 1 WHERE rowid = new.app_library_rowid AND new.item_type = 1 AND new.item_localsyncupstate >= 2; END
UPDATE app_libraries SET auto_client_item_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type != 4 AND item_type != 3), auto_document_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_state != 1), auto_aggregate_size=(SELECT COALESCE(SUM(version_size), 0) FROM client_items WHERE app_libraries.rowid = app_library_rowid AND item_type = 1 AND item_state != 1), auto_document_with_local_changes_count=(SELECT COUNT(*) FROM client_items WHERE app_library_rowid = app_libraries.rowid AND item_type = 1 AND item_localsyncupstate >= 2)
CREATE TABLE client_sync_up ( throttle_id integer not null, zone_rowid integer not null, throttle_state integer not null, in_flight_diffs integer, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, UNIQUE(throttle_id, zone_rowid))
ALTER TABLE client_items  ADD COLUMN item_parent_zone_rowid integer
INSERT OR IGNORE INTO client_sync_up( throttle_id, zone_rowid, throttle_state, in_flight_diffs ) SELECT  rowid, zone_rowid, 1, item_in_flight_diffs FROM client_items WHERE  item_localsyncupstate = 4
UPDATE client_items SET item_parent_zone_rowid = zone_rowid
SELECT rowid, item_id, item_file_id, item_filename, item_type FROM client_items WHERE zone_rowid = %@
%@/%@/%@/%@
SELECT item_parent_id, zone_rowid FROM client_items WHERE  item_filename = %@ AND item_type = 3 AND item_state in (0, -1)
SELECT item_file_id FROM client_items WHERE  item_id = %@ AND zone_rowid = %@
SELECT item_id FROM client_items WHERE item_file_id = %lld AND zone_rowid = %@
SELECT 1 from client_items  WHERE item_parent_zone_rowid = %@    AND item_parent_id = %@    AND IFNULL(item_localname, item_filename) = %@
UPDATE client_items SET  item_parent_zone_rowid = %@,  item_parent_id = %@,  app_library_rowid = %@,  item_localname = %@ WHERE  rowid = %@
UPDATE client_items SET  item_state = -1 WHERE  rowid = %@ AND item_state = 0
DELETE FROM client_items WHERE  item_filename = %@ AND  item_type = 3
CREATE TABLE rowid_reservations ( rowid integer PRIMARY KEY, container_id text unique not null)
INSERT INTO rowid_reservations  ( rowid, container_id ) SELECT rowid, container_id FROM rowid_reservations_old WHERE owner = %@ OR owner IS NULL
CREATE TABLE app_libraries ( rowid integer PRIMARY KEY , app_library_plist blob , app_library_name text unique default null , zone_rowid integer default 0 , auto_client_item_count integer default 0 , auto_document_count INTEGER DEFAULT 0 , auto_document_with_local_changes_count INTEGER DEFAULT 0 , auto_aggregate_size INTEGER DEFAULT 0)
INSERT INTO app_libraries  (rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size) SELECT rowid, app_library_plist, app_library_name, zone_rowid, auto_client_item_count, auto_document_count, auto_document_with_local_changes_count, auto_aggregate_size   FROM app_libraries_old WHERE app_library_owner = %@ OR app_library_owner IS NULL
ALTER TABLE mark_children_lost_progress RENAME TO mark_children_lost_progress_old
CREATE TABLE mark_children_lost_progress (zone_rowid INTEGER NOT NULL , item_parent_id BLOB NOT NULL , last_updated_row_id INTEGER NOT NULL , item_parent_file_id INTEGER , app_library_rowid INTEGER NOT NULL , PRIMARY KEY(zone_rowid, item_parent_id))
INSERT INTO mark_children_lost_progress (zone_rowid, item_parent_id, last_updated_row_id, item_parent_file_id, app_library_rowid) SELECT o.zone_rowid, o.item_parent_id, o.last_updated_row_id, o.item_parent_file_id, c.app_library_rowid   FROM mark_children_lost_progress_old AS o INNER JOIN client_items AS c     ON o.zone_rowid = c.zone_rowid AND o.item_parent_id = c.item_id
DROP TABLE mark_children_lost_progress_old
ALTER TABLE client_downloads RENAME TO client_downloads_old
CREATE TABLE client_downloads ( throttle_id integer not null, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, download_kind integer not null, download_etag blob not null, download_priority integer not null, download_request_stamp integer not null, download_error blob, unit_count_completed INTEGER DEFAULT 0, UNIQUE(transfer_stage), UNIQUE(throttle_id, download_kind, download_etag))
INSERT INTO client_downloads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed FROM client_downloads_old
DROP TABLE client_downloads_old
ALTER TABLE client_uploads RENAME TO client_uploads_old
CREATE TABLE client_uploads ( throttle_id integer primary key, zone_rowid integer not null, app_library_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, transfer_queue blob not null, transfer_size integer not null, transfer_record blob, transfer_stage blob, transfer_operation blob, upload_error blob, upload_priority integer DEFAULT 0, upload_request_stamp integer DEFAULT 0, UNIQUE(transfer_stage))
INSERT INTO client_uploads (throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp) SELECT throttle_id, zone_rowid, app_library_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp FROM client_uploads_old
DROP TABLE client_uploads_old
ALTER TABLE client_unapplied_table RENAME TO client_unapplied_table_old
CREATE TABLE client_unapplied_table ( throttle_id integer primary key, zone_rowid integer not null, throttle_state integer not null, retry_count integer not null default 0, last_try_stamp integer not null default 0, next_retry_stamp integer not null default 0, expire_stamp integer not null default 0, apply_kind integer not null)
INSERT INTO client_unapplied_table (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind) SELECT throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, apply_kind FROM client_unapplied_table_old
DROP TABLE client_unapplied_table_old
CREATE INDEX "client_items/mark_children_lost_index" ON client_items(item_parent_zone_rowid, item_parent_id, rowid ASC) WHERE item_state = 0
create index "client_items/faults_enumeration" ON client_items(zone_rowid, rowid) WHERE item_type = 2
DROP INDEX "client_items/sync_up_enumerator_1"
DROP INDEX "client_items/sync_up_enumerator_2"
CREATE INDEX "client_items/sync_up_enumerator_1" ON client_items(item_parent_zone_rowid, item_parent_id) WHERE item_localsyncupstate = 4 AND item_state IN (0, -1, 1)
CREATE INDEX "client_items/sync_up_enumerator_2" ON client_items(zone_rowid) WHERE item_localsyncupstate IN (2, 3, 4)
ALTER TABLE server_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_lastusedtime integer DEFAULT NULL
ALTER TABLE server_items ADD COLUMN item_favoriterank integer DEFAULT NULL
ALTER TABLE client_items ADD COLUMN item_favoriterank integer DEFAULT NULL
DROP INDEX "spotlight_ranks/notif_rank"
DROP TABLE spotlight_ranks
CREATE TABLE tombstones ( file_object_id      integer not null, file_object_id_type integer not null, notif_rank          integer not null, PRIMARY KEY (file_object_id, notif_rank ASC))
CREATE INDEX "tombstones/notif_rank" ON tombstones (notif_rank)
ALTER TABLE client_items ADD COLUMN item_user_visible integer not null default 1
UPDATE client_document_access SET properties = properties & 1
UPDATE client_downloads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_downloads.throttle_id = client_items.rowid) WHERE throttle_state != 0
UPDATE client_uploads SET app_library_rowid = (SELECT app_library_rowid FROM client_items WHERE client_uploads.throttle_id = client_items.rowid) WHERE throttle_state != 0
ALTER TABLE server_items ADD COLUMN item_alias_target text
UPDATE server_items SET item_alias_target = item_filename, item_filename = "" WHERE item_type = 3
ALTER TABLE client_items ADD COLUMN item_alias_target text
UPDATE client_items SET item_alias_target = item_filename, item_filename = NULL WHERE item_type = 3
UPDATE server_items SET version_quarantine_info = %@, item_rank = NULL WHERE length(version_quarantine_info) == 0 AND version_quarantine_info IS NOT NULL
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu & ~%llu WHERE item_local_diffs & %llu != 0
UPDATE client_items SET item_local_diffs = item_local_diffs | %llu WHERE item_type = 5 AND item_stat_ckinfo IS NULL AND (item_local_diffs & %llu)==0
ALTER TABLE client_items ADD COLUMN item_tmpbounceno INTEGER
CREATE INDEX "client_items/item_tmpbounceno" ON client_items (item_tmpbounceno) WHERE item_tmpbounceno IS NOT NULL
UPDATE client_items SET item_tmpbounceno = call_block(%p, item_bouncedname) WHERE item_bouncedname IS NOT NULL
DROP INDEX "client_items/item_bouncedname"
DROP INDEX "client_items/item_parent_id__item_localname"
CREATE INDEX "client_items/item_parent_id__item_bouncedname" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname) WHERE item_bouncedname IS NOT NULL
CREATE INDEX "client_items/item_parent_id__item_localname" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname) WHERE item_localname IS NOT NULL
UPDATE client_items SET item_bouncedname = call_block(%p, item_filename, item_localname) WHERE item_localname IS NOT NULL
CREATE INDEX "client_items/item_filename_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_filename)
CREATE INDEX "client_items/item_localname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_localname)
CREATE INDEX "client_items/item_bouncedname_path" ON client_items (item_parent_zone_rowid, item_parent_id, item_bouncedname)
CREATE INDEX "client_items/shared_item_library" ON client_items (app_library_rowid, item_state) WHERE item_creator_id != 0;
DROP INDEX "client_items/item_id"
DROP INDEX "client_items/item_file_id"
DROP INDEX "client_items/item_file_id_unique"
CREATE UNIQUE INDEX "client_items/item_file_id_unique" ON client_items(item_file_id) WHERE item_state IN (0, -1)
CREATE INDEX "client_sync_up/next_retry" ON client_sync_up (next_retry_stamp) WHERE throttle_state = 1
CREATE INDEX "client_items/sync_up_enumerator" ON client_items(item_state, item_type) WHERE item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL
UPDATE client_items SET item_user_visible = 0 WHERE item_scope IN (0, 1)
UPDATE client_items SET item_user_visible = 0 WHERE item_scope = 3 AND (SELECT parent.item_filename FROM client_items AS parent WHERE parent.item_id = item_parent_id AND parent.zone_rowid = item_parent_zone_rowid)
UPDATE client_items SET item_user_visible = 0 WHERE item_filename LIKE '.%%' AND item_scope = 2
UPDATE client_items SET item_state = -1, item_processing_stamp = inc_and_fetch64(%p) WHERE item_user_visible = 0 AND item_scope = 2 AND item_type = 0 AND item_state = 0
DROP TABLE server_pending_fetches
CREATE INDEX "client_items/item_notifs_rank_children" ON client_items (item_parent_id, item_parent_zone_rowid, item_notifs_rank) WHERE item_state IN (0, -1)
CREATE INDEX "client_items/item_notifs_rank_library" ON client_items (item_notifs_rank, app_library_rowid) WHERE item_state IN (0, -1)
DROP INDEX "client_items/alias_map"
CREATE INDEX "client_items/alias_map" ON client_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "server_items/alias_map"
CREATE INDEX "server_items/alias_map" ON server_items(item_type, item_alias_target) WHERE item_type = 3
DROP INDEX "client_items/item_localname_path"
DROP INDEX "client_items/item_bouncedname_path"
DROP INDEX "client_items/item_parent_id_rowid"
DROP INDEX "client_items/spotlight_index"
DROP INDEX "client_items/download_index"
DROP INDEX "client_items/eviction_index"
DROP INDEX "client_items/item_in_flight_diffs"
DROP INDEX "client_uploads/scheduling_by_size"
DROP INDEX "client_pkg_items/is_dirty"
DROP INDEX "client_items/pending_download_docs"
CREATE INDEX "client_items/app_library_rowid" ON client_items (app_library_rowid)
CREATE INDEX "client_items/item_parent_id_rowid" ON client_items (item_parent_id, app_library_rowid, rowid)
CREATE INDEX "client_items/working_set_index" ON client_items (item_notifs_rank) WHERE item_user_visible = 1
CREATE INDEX "client_items/eviction_index" ON client_items (version_mtime, app_library_rowid) WHERE item_localsyncupstate = 0 AND item_state != 1
CREATE INDEX "client_sync_up/sync_state_index" ON client_sync_up (zone_rowid, throttle_state)
CREATE INDEX "client_sync_up/throttle_id" ON client_sync_up (throttle_id)
CREATE INDEX "client_sync_up/zone_rowid" ON client_sync_up (zone_rowid)
CREATE INDEX "client_sync_up/expire_stamp_inactive_state" ON client_sync_up (throttle_state, expire_stamp) WHERE throttle_state = 0
CREATE INDEX "client_uploads/scheduling_by_priority" ON client_uploads (throttle_state, transfer_queue, upload_priority DESC, upload_request_stamp DESC, transfer_size ASC)  WHERE throttle_state = 1 AND transfer_operation IS NULL
ALTER TABLE server_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE server_items ADD COLUMN item_creator INTEGER
ALTER TABLE server_items ADD COLUMN version_edited_since_shared INTEGER
CREATE TABLE side_car_lookahead ( record_name text primary key , root_alias_record_name text NOT NULL, item_side_car_ckinfo BLOB NOT NULL , item_favoriterank integer , item_lastusedtime integer )
ALTER TABLE client_items ADD COLUMN item_side_car_ckinfo BLOB
ALTER TABLE client_items ADD COLUMN item_creator INTEGER
ALTER TABLE client_items ADD COLUMN version_edited_since_shared INTEGER
ALTER TABLE client_items ADD COLUMN visible_child_count integer
CREATE TRIGGER "visible_child_count/deletion" AFTER DELETE ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count - 1 WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND old.item_parent_id = item_id AND old.item_parent_zone_rowid = zone_rowid AND old.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/insertion" AFTER INSERT ON client_items BEGIN UPDATE OR IGNORE client_items SET visible_child_count = visible_child_count + 1 WHERE (new.item_user_visible = 1 OR new.item_scope = 3) AND new.item_filename != ".Trash" AND new.item_parent_id = item_id AND new.item_parent_zone_rowid = zone_rowid ; END
ALTER TABLE server_items ADD COLUMN quota_used INTEGER
ALTER TABLE server_items ADD COLUMN recursive_child_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_children_count INTEGER
ALTER TABLE server_items ADD COLUMN shared_alias_count INTEGER
ALTER TABLE server_items ADD COLUMN child_count INTEGER
CREATE INDEX "server_items/item_parent_id__item_type" ON server_items(zone_rowid, item_type, item_parent_id)
ALTER TABLE side_car_lookahead ADD COLUMN item_finder_tags blob
UPDATE server_state SET state = %@
SELECT record_name, root_alias_record_name, item_favoriterank, item_lastusedtime, item_finder_tags, item_side_car_ckinfo FROM side_car_lookahead WHERE length(root_alias_record_name) = 36
UPDATE server_items SET item_favoriterank = %@, item_lastusedtime = %@, item_finder_tags = %@, item_side_car_ckinfo = %@, item_rank = NULL WHERE item_id = %@ AND zone_rowid IN (SELECT zone_rowid FROM server_items WHERE item_id = %@)
DROP TRIGGER IF EXISTS "server_items/sharing_state_propagation"
DROP TRIGGER IF EXISTS "server_items/learn_parent_sharing_state"
DROP TRIGGER IF EXISTS "server_items/sharing_state_insertion"
CREATE TRIGGER "server_items/sharing_state_propagation" AFTER UPDATE OF item_sharing_options ON server_items BEGIN UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE new.item_sharing_options != old.item_sharing_options AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END
CREATE TRIGGER "server_items/learn_parent_sharing_state" AFTER UPDATE OF item_parent_id ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE new.item_parent_id != old.item_parent_id AND item_id = new.item_id AND zone_rowid = new.zone_rowid AND item_state = 0 AND (item_sharing_options & 4) == 0; END
CREATE TRIGGER "server_items/sharing_state_insertion" AFTER INSERT ON server_items BEGIN UPDATE server_items SET item_sharing_options = ((item_sharing_options & (~124)) | IFNULL((SELECT item_sharing_options & 120 FROM server_items as pi WHERE pi.item_id = new.item_parent_id AND pi.zone_rowid = new.zone_rowid), 0)) WHERE (new.item_sharing_options & 4) == 0 AND item_id = new.item_id AND zone_rowid = new.zone_rowid; UPDATE server_items SET item_sharing_options = (item_sharing_options & (~124)) | (new.item_sharing_options & 120) WHERE (new.item_sharing_options & 4) != 0 AND new.item_type IN (0, 9, 10) AND new.item_state = 0 AND item_parent_id = new.item_id AND zone_rowid = new.zone_rowid AND (item_sharing_options & 4) == 0 AND (item_sharing_options & 120) != (new.item_sharing_options & 120); END
DROP TABLE IF EXISTS item_errors
DROP INDEX IF EXISTS "item_errors/error_group"
DROP TRIGGER IF EXISTS "item_errors/deletion"
DROP TRIGGER IF EXISTS "item_errors/upload-deletion"
DROP TRIGGER IF EXISTS "item_errors/upload-idle"
DROP TRIGGER IF EXISTS "item_errors/download-deletion"
DROP TRIGGER IF EXISTS "item_errors/download-idle"
DROP TRIGGER IF EXISTS "item_errors/quota-insertion"
DROP TRIGGER IF EXISTS "item_errors/quota-deletion"
DROP TRIGGER IF EXISTS "item_errors/quota-update-away"
DROP TRIGGER IF EXISTS "item_errors/quota-update-into"
DROP TRIGGER IF EXISTS "item_errors/disk-insertion"
DROP TRIGGER IF EXISTS "item_errors/disk-deletion"
DROP TRIGGER IF EXISTS "item_errors/disk-update-away"
DROP TRIGGER IF EXISTS "item_errors/disk-update-into"
CREATE TABLE item_errors ( item_rowid integer NOT NULL, error_domain TEXT NOT NULL default "unknown", error_code integer NOT NULL default 0, error_message TEXT, error_timestamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, service integer NOT NULL, PRIMARY KEY (item_rowid, error_domain, error_code, error_message, service))
CREATE TRIGGER "item_errors/deletion" AFTER DELETE ON client_items BEGIN DELETE FROM item_errors WHERE item_rowid = old.rowid; END
CREATE TRIGGER "item_errors/upload-deletion" AFTER DELETE ON client_uploads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END
CREATE TRIGGER "item_errors/upload-idle" AFTER UPDATE OF throttle_state ON client_uploads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 1; END
CREATE TRIGGER "item_errors/download-deletion" AFTER DELETE ON client_downloads BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END
CREATE TRIGGER "item_errors/download-idle" AFTER UPDATE OF throttle_state ON client_downloads WHEN (new.throttle_state = 0  AND old.throttle_state != 0) BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id AND service = 2; END
CREATE TRIGGER "item_errors/quota-insertion" AFTER INSERT ON client_uploads WHEN new.throttle_state = 32 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "CKErrorDomain", 25, 1); END
CREATE TRIGGER "item_errors/quota-deletion" AFTER DELETE ON client_uploads WHEN old.throttle_state = 32 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = "CKErrorDomain"    AND error_code = 25    AND service = 1; END
CREATE TRIGGER "item_errors/quota-update-away" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state = 32    AND new.throttle_state != 32) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = "CKErrorDomain"    AND error_code = 25    AND service = 1; END
CREATE TRIGGER "item_errors/quota-update-into" AFTER UPDATE OF throttle_state ON client_uploads WHEN (old.throttle_state != 32    AND new.throttle_state = 32) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "CKErrorDomain", 25, 1); END
CREATE TRIGGER "item_errors/disk-insertion" AFTER INSERT ON client_downloads WHEN new.throttle_state = 43 BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "BRCloudDocsErrorDomain", 34, 2); END
CREATE TRIGGER "item_errors/disk-deletion" AFTER DELETE ON client_downloads WHEN old.throttle_state = 43 BEGIN DELETE FROM item_errors WHERE item_rowid = old.throttle_id    AND error_domain = "BRCloudDocsErrorDomain"    AND error_code = 34    AND service = 2; END
CREATE TRIGGER "item_errors/disk-update-away" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state = 43  AND new.throttle_state != 43) BEGIN DELETE FROM item_errors  WHERE item_rowid = old.throttle_id    AND error_domain = "BRCloudDocsErrorDomain"    AND error_code = 34    AND service = 2; END
CREATE TRIGGER "item_errors/disk-update-into" AFTER UPDATE OF throttle_state ON client_downloads WHEN (old.throttle_state != 43  AND new.throttle_state = 43) BEGIN INSERT OR REPLACE INTO item_errors (item_rowid, error_domain, error_code, service)       VALUES (new.throttle_id, "BRCloudDocsErrorDomain", 34, 2); END
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, "CKErrorDomain", 25, 1          FROM client_uploads WHERE throttle_state = 32
SELECT throttle_id, upload_error FROM client_uploads WHERE throttle_state != 32   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 33)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 1)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) SELECT throttle_id, "BRCloudDocsErrorDomain", 34, 2          FROM client_downloads WHERE throttle_state = 43
SELECT throttle_id, download_error FROM client_downloads WHERE throttle_state != 43   AND throttle_state != 0   AND (retry_count > %llu OR throttle_state = 41)
INSERT INTO item_errors (item_rowid, error_domain, error_code, service) VALUES (%llu, %@, %lu, 2)
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_type in (0, 9, 10, 4)
CREATE TABLE telemetry_events ( rowid integer PRIMARY KEY, payload blob NOT NULL)
CREATE TABLE telemetry_failure_counts ( item_id integer NOT NULL, zone_rowid integer NOT NULL, retry_count integer NOT NULL, PRIMARY KEY (item_id, zone_rowid))
CREATE INDEX "server_items/share_root" ON server_items(item_rank) WHERE (item_sharing_options & 4) != 0
SELECT 1 FROM client_items WHERE item_bouncedname LIKE '%%.icloud'
DROP TRIGGER IF EXISTS "visible_child_count/reparent"
DROP TRIGGER IF EXISTS "visible_child_count/visibility"
CREATE TRIGGER "visible_child_count/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count - 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = old.item_parent_id AND zone_rowid = old.item_parent_zone_rowid AND old.item_filename != ".Trash" ; UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + 1  WHERE (old.item_user_visible = 1 OR old.item_scope = 3) AND item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE TRIGGER "visible_child_count/visibility" AFTER UPDATE OF item_user_visible, item_scope ON client_items WHEN (new.item_user_visible != old.item_user_visible OR new.item_scope != old.item_scope) BEGIN UPDATE OR IGNORE client_items SET   visible_child_count = visible_child_count + (new.item_user_visible | (new.item_scope == 3)) - (old.item_user_visible | (old.item_scope == 3)) WHERE item_id == new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid AND new.item_filename != ".Trash" ; END
CREATE INDEX "client_items/sync_state_job_recovery" ON client_items(item_localsyncupstate) WHERE item_localsyncupstate != 0
CREATE INDEX "client_items/download_job" ON client_items(rowid) WHERE desired_version IS NOT NULL
DROP TABLE IF EXISTS item_recursive_properties
DROP INDEX IF EXISTS "item_recursive_properties/item_id"
DROP INDEX IF EXISTS "item_recursive_properties/item_parent_id"
DROP TRIGGER IF EXISTS "item_recursive_properties/insertion"
DROP TRIGGER IF EXISTS "item_recursive_properties/deletion"
DROP TRIGGER IF EXISTS"item_recursive_properties/reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_update"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_reparent"
DROP TRIGGER IF EXISTS "item_recursive_properties/recursive_delete"
DROP TRIGGER IF EXISTS "item_recursive_properties/item_id_update"
CREATE TABLE item_recursive_properties (  item_rowid integer not null primary key, item_id blob not null, item_parent_id blob, item_type integer not null, zone_rowid integer not null, item_parent_zone_rowid  integer not null, faults_count integer not null default 0, needs_faulting_count integer not null default 0, over_quota_count integer not null default 0, shared_by_me_count integer not null default 0, shared_to_me_count integer not null default 0, uploaded_size integer not null default 0, uploaded_count integer not null default 0, needs_upload_size integer not null default 0, needs_upload_count integer not null default 0, downloaded_size integer not null default 0, downloaded_count integer not null default 0, needs_download_size integer not null default 0, needs_download_count integer not null default 0, dl_unstaged_count integer not null default 0, needs_dl_unstage_count integer not null default 0, synced_up_count integer not null default 0, needs_sync_up_count integer not null default 0, needs_delete_doc_count  integer not null default 0)
CREATE UNIQUE INDEX "item_recursive_properties/item_id_zone_rowid"ON item_recursive_properties (item_id, zone_rowid)
CREATE INDEX "item_recursive_properties/item_parent_id_zone_rowid"ON item_recursive_properties (item_parent_id, item_parent_zone_rowid)
CREATE TRIGGER "item_recursive_properties/item_id_update" AFTER UPDATE OF item_id, zone_rowid ON client_items WHEN (new.item_id != old.item_id OR new.zone_rowid != old.zone_rowid)  AND new.item_type IN (0, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_id,  item_parent_zone_rowid = new.zone_rowid WHERE item_parent_id == old.item_id   AND item_parent_zone_rowid = old.zone_rowid ; UPDATE OR IGNORE item_recursive_properties SET   item_id = new.item_id,  zone_rowid = new.zone_rowid WHERE item_id == old.item_id   AND zone_rowid = old.zone_rowid ; END
INSERT INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid)SELECT rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid FROM client_items WHERE item_type IN (0, 4) AND item_filename != '.Trash'
CREATE TRIGGER "item_recursive_properties/insertion" AFTER INSERT ON client_items WHEN new.item_filename != '.Trash' AND new.item_type IN (0, 4) BEGIN INSERT OR IGNORE INTO item_recursive_properties   (item_rowid, item_id, item_parent_id, item_type) VALUES   (new.rowid, new.item_id, new.item_parent_id, new.item_type); END
CREATE TRIGGER "item_recursive_properties/deletion" AFTER DELETE ON client_items WHEN old.item_type IN (0, 4, 1, 2, 8) BEGIN DELETE FROM item_recursive_properties WHERE item_rowid == old.rowid ; END
CREATE TRIGGER "item_recursive_properties/reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON client_items WHEN (new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)  AND new.item_type IN (0, 4, 1, 2, 8) BEGIN UPDATE OR IGNORE item_recursive_properties SET   item_parent_id = new.item_parent_id,   item_parent_zone_rowid = new.item_parent_zone_rowid WHERE item_rowid == new.rowid AND item_parent_id IS NOT NULL ; END
CREATE TRIGGER "item_recursive_properties/recursive_update" AFTER UPDATE OF faults_count, needs_faulting_count, over_quota_count, shared_by_me_count, shared_to_me_count, uploaded_size, uploaded_count, needs_upload_size, needs_upload_count, downloaded_size, downloaded_count, needs_download_size, needs_download_count, dl_unstaged_count, needs_dl_unstage_count, synced_up_count, needs_sync_up_count, needs_delete_doc_count ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  faults_count = faults_count + new.faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count + new.needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count + new.over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count - old.needs_delete_doc_count ,  uploaded_size = uploaded_size + MAX((new.uploaded_size - old.uploaded_size), 0) ,  uploaded_count = uploaded_count + MAX((new.uploaded_count - old.uploaded_count), 0) ,  downloaded_size = downloaded_size + MAX((new.downloaded_size - old.downloaded_size), 0) ,  downloaded_count = downloaded_count + MAX((new.downloaded_count - old.downloaded_count), 0) ,  dl_unstaged_count = dl_unstaged_count + MAX((new.dl_unstaged_count - old.dl_unstaged_count), 0) ,  synced_up_count = synced_up_count + MAX((new.synced_up_count - old.synced_up_count), 0)  WHERE item_id == old.item_parent_id AND  zone_rowid == old.item_parent_zone_rowid AND  new.item_parent_id == old.item_parent_id AND  new.item_parent_zone_rowid == old.item_parent_zone_rowid AND  ( new.faults_count != old.faults_count OR  new.needs_faulting_count != old.needs_faulting_count OR  new.over_quota_count != old.over_quota_count OR  new.shared_by_me_count != old.shared_by_me_count OR  new.shared_to_me_count != old.shared_to_me_count OR  new.needs_upload_size != old.needs_upload_size OR  new.needs_upload_count != old.needs_upload_count OR  new.needs_download_size != old.needs_download_size OR  new.needs_download_count != old.needs_download_count OR  new.needs_dl_unstage_count != old.needs_dl_unstage_count OR  new.needs_sync_up_count != old.needs_sync_up_count OR  new.needs_delete_doc_count != old.needs_delete_doc_count OR  ( new.uploaded_size != old.uploaded_size AND new.uploaded_size != 0 ) OR  ( new.uploaded_count != old.uploaded_count AND new.uploaded_count != 0 ) OR  ( new.downloaded_size != old.downloaded_size AND new.downloaded_size != 0 ) OR  ( new.downloaded_count != old.downloaded_count AND new.downloaded_count != 0 ) OR  ( new.dl_unstaged_count != old.dl_unstaged_count AND new.dl_unstaged_count != 0 ) OR  ( new.synced_up_count != old.synced_up_count AND new.synced_up_count != 0 ) ) ; UPDATE item_recursive_properties SET  uploaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_size == 0 AND needs_sync_up_count == 0) AND uploaded_size != 0; UPDATE item_recursive_properties SET  uploaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_upload_count == 0 AND needs_sync_up_count == 0) AND uploaded_count != 0; UPDATE item_recursive_properties SET  downloaded_size = 0  WHERE item_rowid == old.item_rowid AND (needs_download_size == 0 AND needs_dl_unstage_count == 0) AND downloaded_size != 0; UPDATE item_recursive_properties SET  downloaded_count = 0  WHERE item_rowid == old.item_rowid AND (needs_download_count == 0 AND needs_dl_unstage_count == 0) AND downloaded_count != 0; UPDATE item_recursive_properties SET  dl_unstaged_count = 0  WHERE item_rowid == old.item_rowid AND (needs_dl_unstage_count == 0) AND dl_unstaged_count != 0; UPDATE item_recursive_properties SET  synced_up_count = 0  WHERE item_rowid == old.item_rowid AND (needs_sync_up_count == 0) AND synced_up_count != 0;DELETE FROM item_recursive_properties WHERE  item_rowid == old.item_rowid AND uploaded_size == 0 AND needs_upload_size == 0 AND  uploaded_count == 0 AND needs_upload_count == 0 AND  downloaded_size == 0 AND needs_download_size == 0 AND  downloaded_count == 0 AND needs_download_count == 0 AND  synced_up_count  == 0 AND needs_sync_up_count == 0 AND  needs_delete_doc_count == 0 AND  dl_unstaged_count == 0 AND needs_dl_unstage_count == 0 AND  faults_count == 0 AND needs_faulting_count == 0 AND  over_quota_count == 0 AND shared_by_me_count == 0 AND  shared_to_me_count  == 0 AND item_type NOT IN (0, 4); END
CREATE TRIGGER "item_recursive_properties/recursive_reparent" AFTER UPDATE OF item_parent_id, item_parent_zone_rowid ON item_recursive_properties WHEN ((new.item_parent_id != old.item_parent_id OR new.item_parent_zone_rowid != old.item_parent_zone_rowid)        AND (SELECT 1 FROM item_recursive_properties WHERE item_id = new.item_parent_id AND zone_rowid = new.item_parent_zone_rowid LIMIT 1)) BEGIN UPDATE item_recursive_properties SET  faults_count = faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid; UPDATE item_recursive_properties SET  faults_count = faults_count + new.faults_count ,  needs_faulting_count = needs_faulting_count + new.needs_faulting_count ,  over_quota_count = over_quota_count + new.over_quota_count ,  shared_by_me_count = shared_by_me_count + new.shared_by_me_count ,  shared_to_me_count = shared_to_me_count + new.shared_to_me_count ,  needs_upload_size = needs_upload_size + new.needs_upload_size ,  needs_upload_count = needs_upload_count + new.needs_upload_count ,  needs_download_size = needs_download_size + new.needs_download_size ,  needs_download_count = needs_download_count + new.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count + new.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count + new.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count + new.needs_delete_doc_count  WHERE item_id == new.item_parent_id AND  zone_rowid = new.item_parent_zone_rowid; END
CREATE TRIGGER "item_recursive_properties/recursive_delete" AFTER DELETE ON item_recursive_properties BEGIN UPDATE item_recursive_properties SET  faults_count = faults_count - old.faults_count ,  needs_faulting_count = needs_faulting_count - old.needs_faulting_count ,  over_quota_count = over_quota_count - old.over_quota_count ,  shared_by_me_count = shared_by_me_count - old.shared_by_me_count ,  shared_to_me_count = shared_to_me_count - old.shared_to_me_count ,  needs_upload_size = needs_upload_size - old.needs_upload_size ,  needs_upload_count = needs_upload_count - old.needs_upload_count ,  needs_download_size = needs_download_size - old.needs_download_size ,  needs_download_count = needs_download_count - old.needs_download_count ,  needs_dl_unstage_count = needs_dl_unstage_count - old.needs_dl_unstage_count ,  needs_sync_up_count = needs_sync_up_count - old.needs_sync_up_count ,  needs_delete_doc_count = needs_delete_doc_count - old.needs_delete_doc_count  WHERE item_id == old.item_parent_id AND  zone_rowid = old.item_parent_zone_rowid AND ( 0 != old.faults_count OR  0 != old.needs_faulting_count OR  0 != old.over_quota_count OR  0 != old.shared_by_me_count OR  0 != old.shared_to_me_count OR  0 != old.needs_upload_size OR  0 != old.needs_upload_count OR  0 != old.needs_download_size OR  0 != old.needs_download_count OR  0 != old.needs_dl_unstage_count OR  0 != old.needs_sync_up_count OR  0 != old.needs_delete_doc_count ); END
INSERT OR IGNORE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) SELECT rowid, item_id, item_parent_id, call_block(%p, item_type), zone_rowid, item_parent_zone_rowid FROM client_items WHERE (item_sharing_options & 4) != 0 OR item_type IN (2, 7, 8) OR item_localsyncupstate IN (3,4) AND item_type IN (1, 2, 8)
UPDATE item_recursive_properties SET shared_by_me_count = call_block(%p, shared_by_me_count, 1, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)), shared_to_me_count = call_block(%p, shared_to_me_count, 0, (SELECT cz.zone_owner FROM client_zones AS cz WHERE cz.rowid = zone_rowid)) WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0)
UPDATE item_recursive_properties SET shared_to_me_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE (item_sharing_options & 4) != 0 AND zone_rowid != item_parent_zone_rowid)
UPDATE item_recursive_properties SET faults_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_type IN (2, 7, 8))
UPDATE item_recursive_properties AS ip SET needs_upload_size = (SELECT ci.version_size from client_items AS ci WHERE ci.rowid = ip.item_rowid), needs_upload_count = 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 3 AND item_type IN (1, 2, 8))
UPDATE item_recursive_properties AS ip SET needs_sync_up_count = needs_sync_up_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_localsyncupstate = 4 AND item_type IN (1, 2, 8))
UPDATE item_recursive_properties AS ip SET needs_delete_doc_count = needs_delete_doc_count + 1 WHERE item_rowid IN (SELECT rowid FROM client_items WHERE item_state IN (1, -3) AND item_type IN (1, 2, 8))
DROP INDEX IF EXISTS "client_items/shared_item_library"
UPDATE client_downloads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'
UPDATE client_uploads SET transfer_queue = '_retry' WHERE transfer_queue = 'com.apple.SharedDocs'
SELECT 1 FROM client_items WHERE item_state in (0, -1)  AND NOT EXISTS (SELECT 1 FROM app_libraries WHERE client_items.app_library_rowid = app_libraries.rowid)
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND item_state != -2
UPDATE client_items SET item_scope = 2 WHERE zone_rowid = %@ AND item_scope = 0 AND migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE client_items SET item_scope = 1 WHERE zone_rowid = %@ AND item_scope = 0 AND NOT migration_is_parented_or_equal_to_old_doc_id(%p, item_parent_id) AND item_state != -2
UPDATE server_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE server_items SET item_origname = call_block(%@, item_origname) WHERE item_origname IS NOT NULL AND item_origname != call_block(%@, item_origname)
UPDATE server_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_filename = call_block(%@, item_filename) WHERE item_filename != call_block(%@, item_filename)
UPDATE client_items SET version_name = call_block(%@, version_name) WHERE version_name IS NOT NULL AND version_name != call_block(%@, version_name)
UPDATE client_items SET item_localname = call_block(%@, item_localname) WHERE item_localname IS NOT NULL AND item_localname != call_block(%@, item_localname)
UPDATE client_items SET item_bouncedname = call_block(%@, item_bouncedname) WHERE item_bouncedname IS NOT NULL AND item_bouncedname != call_block(%@, item_bouncedname)
UPDATE client_document_access     SET evictable = call_block(%@, access_time, (SELECT version_mtime FROM client_items AS ci WHERE ci.rowid = item_rowid))  WHERE evictable > 0
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_id in (SELECT throttle_id FROM client_items, client_uploads WHERE client_items.rowid = client_uploads.throttle_id AND item_localsyncupstate = 3)
INSERT INTO client_uploads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_error, upload_priority, upload_request_stamp, app_library_rowid) SELECT client_items.rowid, zone_rowid, 1, 0, 0, 0, 0, item_id, "_prepare", version_size + version_thumb_size, NULL, NULL, NULL, NULL, -1, 0, app_library_rowid FROM client_items WHERE item_type IN (1, 6) AND item_localsyncupstate = 3 AND rowid NOT IN (SELECT throttle_id from client_uploads)
UPDATE client_downloads SET throttle_state = 1 WHERE throttle_id in ( SELECT throttle_id FROM client_items, client_downloads WHERE client_items.rowid = client_downloads.throttle_id AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND call_block(%@, desired_version))
INSERT INTO client_downloads (throttle_id, zone_rowid, throttle_state, retry_count, last_try_stamp, next_retry_stamp, expire_stamp, item_id, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, download_kind, download_etag, download_priority, download_request_stamp, download_error, unit_count_completed, app_library_rowid) SELECT client_items.rowid, client_items.zone_rowid, 1, 0, 0, 0, 0, item_id, call_block(%@, app_library_owner, app_library_name), call_block(%@, desired_version), NULL, NULL, NULL, 0, call_block(%@, desired_version), -1, 0, NULL, 0, app_library_rowid FROM client_items, app_libraries, client_zones WHERE client_items.app_library_rowid = app_libraries.rowid AND app_libraries.zone_rowid = client_zones.rowid AND item_type IN (1, 2, 6, 7) AND desired_version is not NULL AND client_items.rowid NOT IN (SELECT throttle_id from client_downloads) AND call_block(%@, desired_version)
INSERT OR REPLACE INTO client_uploads  (throttle_id, zone_rowid, app_library_rowid, transfer_size, throttle_state, transfer_queue) SELECT rowid, zone_rowid, app_library_rowid, version_size + version_thumb_size, 1, %s FROM client_items WHERE item_localsyncupstate == 3 AND rowid NOT IN (SELECT throttle_id FROM client_uploads WHERE throttle_state != 0)
-[BRCClientZone init]
zone-tracker
client-zone/zone-creation
syncUpBackoffRatio
osNameRequiredToSync
syncDownGroup
Creating
Loading
sync
crash-recovery
ipc-com.apple.finder
CKErrorInternalContainerReset
CKErrorUserDeleteZone
CKErrorZoneNotFound
CKErrorSharedZoneNotFound
zone became healthy
start-scan
testing
SELECT COUNT(1) FROM client_items WHERE item_localsyncupstate IN(2, 3, 4) AND zone_rowid = %@  AND call_block(%p, version_upload_error, item_id)
SELECT SUM(version_size) FROM client_items WHERE item_localsyncupstate IN (2, 3, 4)   AND zone_rowid = %@   AND call_block(%p, version_upload_error)
<%@%@[%@] %@ {client:%@ server:%@ sync:%@ %@ rid:%llu}>
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_parent_zone_rowid = %@ OR zone_rowid = %@) AND item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items  WHERE (item_parent_zone_rowid = %@ OR zone_rowid = %@)     AND item_file_id = %lld    AND item_state IN (0, -1)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND item_filename = %@ AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND item_parent_zone_rowid = %@        AND item_bouncedname IS NULL)   OR  (item_parent_id = %@ AND item_bouncedname = %@ AND item_state != -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE (item_parent_id = %@ AND item_filename = %@ AND item_state != -2 AND item_parent_zone_rowid = %@        AND item_localname IS NULL)   OR  (item_parent_id = %@ AND item_localname = %@ AND item_state != -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE ( item_parent_id = %@ AND item_filename = %@ AND +item_state = -2 AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR ( item_parent_id = %@ AND item_bouncedname = %@ AND +item_state = -2 AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE ( item_parent_id = %@ AND item_filename = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR ( item_parent_id = %@ AND item_bouncedname = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE ( item_parent_id = %@ AND item_localname = %@ AND +item_state != -2 AND +item_type IN (2, 7, 8) AND item_parent_zone_rowid = %@)
SELECT 1 FROM client_items WHERE ((item_parent_id = %@ AND item_filename = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@ AND item_bouncedname IS NULL) OR (item_parent_id = %@ AND item_bouncedname = %@ COLLATE NOCASE AND item_parent_zone_rowid = %@)) AND item_state != 1 LIMIT 1
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@    AND item_type IN (1, 6)    AND (item_localsyncupstate = 2 OR         item_localsyncupstate = 3 OR         item_localsyncupstate = 4)   AND item_scope = 2
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@    AND rowid > %llu   AND item_type = 2 ORDER BY rowid LIMIT %lu
v32@?0@"BRCClientZone"8@"NSArray"16@"NSError"24
SELECT item_stat_ckinfo IS NULL FROM client_items  WHERE zone_rowid = %@ AND item_id = %@    AND item_type IN (1, 2, 8, 5, 6, 7)
UPDATE client_items SET item_stat_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@, version_device = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET version_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
UPDATE client_items SET item_side_car_ckinfo = %@ WHERE zone_rowid = %@ AND item_id = %@
(successful)
v32@?0@"CKRecordID"8@"NSError"16^B24
defaultSyncThrottle
v32@?0@"BRCItemID"8@?<v@?B>16^B24
v32@?0@"NSString"8@?<v@?@"BRCItemID">16^B24
SyncDown
<rdar://problem/26073809> _fixupMissingCrossMovedItems causes slow SQL assertions
UPDATE client_items SET item_localsyncupstate = 1 WHERE zone_rowid = %@   AND item_localsyncupstate = 0   AND (item_local_diffs & 0x2000000000000000) != 0   AND NOT EXISTS (SELECT * FROM server_items WHERE server_items.item_id = client_items.item_id AND zone_rowid = %@)
Server zone has caught up
UPDATE client_items SET item_local_diffs = (item_local_diffs & (~%lld)) WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND item_type = 3 AND item_state IN (0, -1)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND item_type in (1, 2, 6, 7)
UPDATE client_uploads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_downloads SET zone_rowid = %@ WHERE throttle_id = %lld
UPDATE client_reader_throttle SET zone_rowid = %@ WHERE throttle_id = %lld
DELETE FROM client_unapplied_table WHERE zone_rowid = %@
UPDATE client_sync_up SET zone_rowid = %@ WHERE zone_rowid = %@
DELETE FROM client_uploads WHERE zone_rowid = %@
DELETE FROM client_downloads WHERE zone_rowid = %@
DELETE FROM client_reader_throttle WHERE zone_rowid = %@
DELETE FROM client_items WHERE zone_rowid = %@ AND item_type = 3
UPDATE client_items SET zone_rowid = %@,   item_stat_ckinfo = call_block(%p, item_stat_ckinfo),   version_ckinfo   = call_block(%p, version_ckinfo),   item_local_diffs = (item_local_diffs | %lld)  WHERE zone_rowid = %@
UPDATE client_items SET item_parent_zone_rowid = %@ WHERE item_parent_zone_rowid = %@
DELETE FROM client_zones WHERE rowid = %@
cross-zone move
Client Truth Unclean Items:
--------------------------
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy     FROM client_items    WHERE item_parent_id = %@ ORDER BY item_filename
zone:%@ 
 reader{%@}
 upload{%@}
 rejected{%@}
 downloader{%@}
 sync-up{%@}
client items
scheduling sync contexts
========================
+ %@
-[BRCClientZone dumpTablesToContext:includeAllItems:error:]
implement this in subclass
-[BRCClientZone _resetItemsTable]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRCClientZone.m
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_parent_zone_rowid = %@ AND item_parent_zone_rowid != zone_rowid
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_rank = %lld AND zone_rowid = %@
SELECT item_rank FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE rowid = %lld AND zone_rowid = %@
SELECT item_id FROM client_items  WHERE item_file_id = %lld    AND +item_type IN (0, 4)    AND item_state IN (0, -1)    AND zone_rowid = %@
SELECT item_type FROM client_items WHERE item_id = %@ AND zone_rowid = %@ LIMIT 1
must implement in subclass
-[BRCClientZone validateItemsLoggingToFile:db:]
-[BRCClientZone validateStructureLoggingToFile:db:]
v16@?0@"BRCLocalItem"8
%@{needs:(count:%lld, size:%@) done:(count:%lld, size:%@)} 
%@{needs:%lld done:%lld} 
SELECT faults_count,needs_faulting_count, uploaded_size,needs_upload_size, uploaded_count,needs_upload_count, downloaded_size,needs_download_size, downloaded_count,needs_download_count, dl_unstaged_count,needs_dl_unstage_count, synced_up_count,needs_sync_up_count, over_quota_count, shared_by_me_count, shared_to_me_count, needs_delete_doc_count FROM item_recursive_properties  WHERE item_rowid = %llu
faults:%lld 
needs-faulting:%lld 
download
unstage
sync-up
quota:%lld 
sbmc:%lld 
stmc:%lld 
nd:%lld 
%*s> %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy     FROM client_items    WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@
%*s%@%@
 reclaimer{%@}
%*s>%@
B28@?0@"BRCItemGlobalID"8i16^@20
SELECT COUNT(*) FROM client_items WHERE zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE zone_rowid = %@ AND NOT indexset_contains(%p, rowid)
pending activity %@
(greedy)
================
+ downloads:%@
+ downloads: not dumping
+ uploads:  %@
+ uploads:  not dumping
[r:%@]: %@
v32@?0@"NSNumber"8@"NSOperation"16^B24
sync bubble waiting
+ reader:   %@
+ apply:    %@
+ reader:   not dumping
+ apply:    not dumping
because of item 
for budget 
 [sync-up throttled %@(next-try:in %.01fs)]
 [sync-up waiting to be scheduled]
 [sync-up running]
 [sync-up waiting for sync down]
 [sync-down throttled (next-try:in %.01fs)]
 [sync-down waiting to be scheduled]
 [scheduling: %@]
+ sync:      %@
  up:        %@
  up-budget: %@
  up-error:  %@
  dn-error   %@
  operation: %@
+ migration: %@
+ process-removal: %@
B8@?0
No path to process fsevent on
v24@?0@"BRCItemGlobalID"8^B16
needs-sync
is-resetting
initial-faults-live|ever-live
initial-faults-live
initial-faults-ever-live
has-broken-structure
blocked-app-uninstalled
needs-upgrade
wants-data-unlinked
Implement %@ in a subclass.
+[BRCPersistedState loadFromClientStateInSession:options:]
value
-[BRFieldXattr writeTo:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRFieldXattr.m
nil != self->_name
nil != self->_value
0123456789abcdef
share/accept
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
events
token
problemReport
zoneHealthState
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_filename = %@ AND item_type = 3 AND zone_rowid = %@
+ delete-content: %@
     (last-error: %@)
+ barriers:  %ld
+ pcs chain operation:
itemID %s %s
SQL error: %s
client truth structure validation (%s)
=================================
DROP TABLE IF EXISTS items_checks
CREATE TABLE items_checks (item_id blob PRIMARY KEY, depth integer not null)
CREATE INDEX items_checks__depth__idx ON items_checks (depth)
INSERT INTO items_checks (item_id, depth) VALUES (%@, 0)
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN client_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM client_items WHERE zone_rowid = %@   AND item_id NOT IN(SELECT item_id FROM items_checks)
is an orphan or part of a cycle
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE c.item_state != 1 AND p.item_state = 1       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is a live item parented to a tombstone
SELECT c.item_id      FROM client_items AS c INNER JOIN client_items AS p ON (c.item_parent_id = p.item_id)     WHERE p.item_type IN (1, 2, 8, 5, 6, 7)       AND c.zone_rowid = %@ AND p.zone_rowid = %@
is parented to a document
SELECT o.item_id       FROM client_items AS o  WHERE zone_rowid = %@ AND EXISTS ( SELECT 1 FROM client_items AS n WHERE  (  (    n.item_parent_id = o.item_parent_id      AND item_filename = IFNULL(o.item_localname, o.item_filename)      AND +item_localname IS NULL)  OR (    n.item_parent_id = o.item_parent_id      AND item_localname = IFNULL(o.item_localname, o.item_filename))  )  AND +n.item_id != o.item_id  AND n.zone_rowid = %@)
local items checks (%s)
===================
_BRCDocumentIDKey
_BRCProgressGroupKey
GLOBAL_PROGRESS_UPLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_UPLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADING_CAPITALIZE_DESCRIPTION
GLOBAL_PROGRESS_DOWNLOADS_WAITING_DESCRIPTION
GLOBAL_PROGRESS_ADDITIONAL_DESCRIPTION
 d:'%@%@'
<%@:%p c:%@ p:%lld(%+lld)/%lld(%+lld) [%.3f%%]%@>
 ooq:%lu>
com.apple.bird.global-progress
com.apple.bird.global-progress.pacer
%@ = %@;
.. truncated ..
global progress {%@ d:'%@%@'}
global progress {none}
upload %@
upload {none}
upload version sizes (%lu):
upload progresses (%lu): {
v32@?0@"NSNumber"8@"NSProgress"16^B24
upload progresses (0): {}
upload pending quota (%lu): {%@}
upload pending quota (0): {}
download %@
download {none}
download version sizes (%lu):
download progresses (%lu): {
download progresses (0): {}
download resume unit count (%lu): %@
app libraries not live (%lu): {%@}
completedUnitCount
initial sync-down
@sum.longLongValue
taking-over
session-destroyed
reparent
br_etagInPreviousZone
pcs chained 
half chained 
(dead in server truth)
clientRanks
nextNotifRank:%llu nextPackageItemRank:%llu
nextItemRowID
nextNotifRank
nextPackageItemRank
telemetryRowID
telemetryToken
metrics
directoryMtime
pcsChainState
serverZone
item %s is a directory with a version
rk:%lld 
pcs:c 
pcs:u 
pcs:h 
pcs:s 
ppm:%@ 
st{%@}
 alias-st{%@}
 sm{%@}
 target:%@
  itemPath:          %@
  rootPath:          %@
  parentID:          %@
  matchByPath:       %@
  matchByFileID:     %@
  matchByDocumentID: %@
  packageItem:       %@
  serverItemByPath:  %@
[%llu]
{%llu}
invalid library rowid
+[BRCItemID documentsItemIDWithAppLibraryRowID:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRCItemID.m
-[BRCItemID _initAsLibraryRootWithAppLibraryRowID:]
can't initialize shared zone root with invalid zone rowid %@
-[BRCItemID _initAsZoneRootWithZoneRowID:]
can't initialize document with invalid library rowid %@
-[BRCItemID initAsDocumentsWithAppLibraryRowID:]
root_object
client_items
server_zones
client_zones
SELECT rowid FROM %@ WHERE zone_owner != %@
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = %@ WHERE zone_rowid = %@
UPDATE %@ SET item_id = call_block(%@, item_id, zone_rowid) WHERE item_type = 3
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "root"
UPDATE %@ SET item_parent_id = call_block(%@, zone_rowid) WHERE item_parent_id = "documents"
UPDATE %@ SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE client_unapplied_table SET item_id = call_block(%@, zone_rowid) WHERE item_id = "documents"
UPDATE %@ SET item_id = call_block(%@, item_id) WHERE item_type = 3
UPDATE %@ SET item_id = call_block(%@, item_id), item_parent_id = call_block(%@, item_parent_id) WHERE zone_rowid = %@
unkown-token-version:%d (%@)
current
<%@,%@>
beginning
unkown-token-size:%lu (%@)
-[BRCPackageManifestReader init]
unreachable: No reader to stage package at %s
unreachable: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
unreachable: xattr index is out of bounds %ld of total %ld
unreachable: Can't find xattr at index %ld
Can't load xattr
unknown error
version: 1
NULL path for item: %@
-[BRCPackageChecksummer addItem:error:]
NULL path for item symlink: %@
com.apple.bird.transmogrifier
brtest
@"NSString"16@?0@"NSString"8
q24@?0@8@16
-[BRCAccountSession(BRCContainerFindByName) clientZonesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleClientZoneMatchingSearchString:error:]
Too many containers matching '%@': {%@}
-[BRCAccountSession(BRCContainerFindByName) appLibrariesMatchingSearchString:error:]
-[BRCAccountSession(BRCContainerFindByName) singleAppLibraryMatchingSearchString:error:]
Library/Application Support/CloudDocs/session/db/client.db
Library/Application Support/CloudDocs/
document-shares
folder-shares
folder-share-aliases
migration-query
-[BRCMigrationQueryOperation _saveFetchedRecords:cursor:error:]
-[BRCMigrationQueryOperation _updatedContinuationCursor:fetchedRecords:error:]_block_invoke
v24@?0@"CKQueryCursor"8@"NSError"16
v16@?0@"CKQueryCursor"8
%K == %@
brPrefix
RecordPrefixList
v24@?0@"CKOperation"8@"CKRecord"16
%K != NULL
v24@?0@"_BRCOperation<BRCOperationSubclass>"8@"NSError"16
migration key
provide-request-queue
coordinated-read
recursive-download
v16@?0@"BRCUserDownloadEvent"8
@"NSError"16@?0@"BRCLocalItem"8
cancellation
Couldn't get public sharing key
unreachable: no records and no error
unreachable: no error and no sharing key
unreachable: no public sharing identity. avoiding breaking iwork shares
unreachable: no routing key on share identity prepared record
unreachable: sharing identity isn't encrypted data
unreachable: base token isn't a string
unreachable: no base token %@ or sharing identity %@ and no error
unreachable: not a directory nor a document
sharing/save-share
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM server_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM server_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & %lu) == 4 AND item_id != %@ 
unreachable: no share record
unreachable: directory %@ isn't pcs chained
unreachable: couldn't get base record
 and %@
unreachable: got an unexpected number of shares saved
sharing/destroy-share
unreachable: got an unexpected number of shares deleted
sharing/lookup-participants
v16@?0@"CKShareParticipant"8
Unexpected number of share participants
sharing/modifyAccess
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
unreachable: no dict and no error
granting
revoking
Granted
Revoked
accessToken
referenceIdentifier
sharing/copyParticipantToken
unreachable: No base token so the share token we would return would be invalid for iwork
shareID
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
unreachable: no error and no key
participantKey
baseToken
sharing/prepare-folder-pcs
serverItem
sharing/copy-shareURL
share
unreachable: Couldn't get a share URL
unreachable: Couldn't get a share URL for %@
sharing/copy-shortToken
unreachable: No short token found on record
sharing/clean-subitems
zoneRowID
WITH RECURSIVE item_parents (item_filename, item_parent_id) AS (     SELECT item_filename, item_parent_id FROM server_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT si.item_filename, si.item_parent_id FROM server_items AS si INNER JOIN item_parents AS p      WHERE si.item_id = p.item_parent_id        AND si.zone_rowid = %@) SELECT item_filename FROM item_parents
SELECT item_alias_target FROM server_items WHERE item_id = %@ AND zone_rowid = %@
SELECT item_filename FROM server_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_children_needing_fetching (item_id, item_type, shared_alias_count) AS (     SELECT item_id, item_type, shared_alias_count FROM server_items      WHERE zone_rowid = %@ AND item_id = %@ AND (IFNULL(shared_alias_count, 1) > 0)  UNION ALL     SELECT ip.item_id, ip.item_type, ip.shared_alias_count FROM server_items AS ip INNER JOIN item_children_needing_fetching AS p       WHERE ip.item_parent_id = p.item_id        AND +ip.zone_rowid = %@        AND ip.item_type IN (0, 3)        AND ((IFNULL(ip.shared_alias_count, 1) > 0)            OR ip.item_type = 3)) SELECT item_id FROM item_children_needing_fetching WHERE item_type = 3
SELECT item_type, item_stat_ckinfo, version_ckinfo from client_items WHERE item_id = %@ AND zone_rowid = %@
full
empty
v32@?0@"BRCItemGlobalID"8Q16^B24
sharing/access-token
unreachable: encrypted access token %@ is of unexpected type
unreachable: reference identifier %@ is of unexpected type
ref_id
xattrs
 target:'%@'
INSERT INTO client_items ( rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name) VALUES ( %lld, %@, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %@, %@)
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d, item_tmpbounceno = %@, version_name = %@  WHERE rowid = %llu
create-subscribe-zone/
subscription/
sync/zone-purge
stage
gc:%ld
com.apple.brc.stage
com.apple.brc.stage.backup-exclusion-queue
fvrgdus
-[BRCStageRegistry makeDirectoryInStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeSymlinkWithTarget:inStageGatherFileID:generationID:error:]
-[BRCStageRegistry makeNonLocalVersionSideFaultWithAdditionName:clientZone:statInfo:version:sharingOptions:error:]
-[BRCStageRegistry makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:]
-[BRCStageRegistry _flockToMakeLiveAtPath:error:]
-[BRCStageRegistry makeItemLive:fromStage:bySwappingWith:fileName:error:]
-[BRCStageRegistry moveFromStage:toPath:fileName:error:]
com.apple.lastuseddate#PS
everyone
:%llx
/%@/%@
ckpackage
-[BRCStageRegistry rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:]
-[BRCStageRegistry moveOldVersionFromPath:error:]
-[BRCStageRegistry moveToGraveyardFromPath:forItemID:error:]
graveyard
old versions stage
com.apple.bird.graveyard.size#N
i24@?0r*8^{stat=iSSQIIi{timespec=qq}{timespec=qq}{timespec=qq}{timespec=qq}qqiIIi[2q]}16
B24@?0@"NSString"8@"NSArray"16
SELECT 1 FROM client_uploads WHERE transfer_stage = %@
SELECT 1 FROM client_items WHERE item_staged_file_id = %lld
SELECT 1 FROM client_downloads WHERE transfer_stage = %@
B16@?0@"BRCPrivateServerZone"8
com.apple.bird.stage.gc
_makeSideFault
.DocumentRevisions-V100/AllUIDs
.DocumentRevisions-V100/PerUID
versions
coordinated readers
  + %@
com.apple.bird.versions
dl-version-%@
container
pkg_extensions.plist
pkg-extension-writer
CFBundleTypeExtensions
CFBundleDocumentTypes
SharedPackageExtensions.app
Info.plist
com.apple.clouddocs-items
didDropCoreSpotlightIndex
dbID:%llu rank:%llu
<%@: %p, %lu indexed, %lu deleted>
INSERT INTO tombstones (file_object_id, file_object_id_type, notif_rank) VALUES (%lld, %d, %lld)
DELETE FROM tombstones
DELETE FROM tombstones WHERE notif_rank < %lld
SELECT file_object_id, file_object_id_type, notif_rank FROM tombstones    WHERE notif_rank >= %lld ORDER BY notif_rank ASC LIMIT %lld
v16@?0@"PQLResultSet"8
@"BRFileObjectID"20@?0q8c16
v24@?0@"NSArray"8@"NSArray"16
recents-enumerator
recents-enumerator-tracker
v24@?0@"CKRecordID"8d16
<dl-thumbnail[%lld] %@_%@>
unreachable: thumbnail is not a CKAsset: %@
-[BRCDownloadThumbnail _stageWithSession:error:]
dl-thumbnail
thumbnails
downloading
brpackage-dlspec
<dl-content[%lld] %@_%@>
unreachable: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
-[BRCDownloadContent _prepareSecondStageWithSession:manifest:package:error:]
SELECT 1 FROM client_pkg_items WHERE item_doc_id = %u AND rel_path = %@ AND signature_or_link = %@
-[BRCDownloadContent _stageWithSession:manifest:package:xattrsPackage:error:]
unreachable: file content is not a CKAsset: %@
-[BRCDownloadContent _stageWithSession:error:]
unreachable: finder bookmark without content: %@
unreachable: pkg content is not a CKPackage: %@
unreachable: package manifest is not a CKAsset: %@
unreachable: xattrs package is not a CKAsset: %@
unreachable: unknown type for downloaded object %@
dl-content
<dl-version[%lld] %@_%@>
unreachable: There should be a file content property in %@
-[BRCDownloadVersion _stageContentWithSession:error:]
unreachable: no fileURL for %@ in %@
-[BRCDownloadVersion _stageWithSession:creationInfo:error:]
dl-version
v24@?0@"GSAddition"8@"NSError"16
previous documents versions
server truth structure validation (%s)
=================================
INSERT INTO items_checks    SELECT c.item_id, %lld      FROM items_checks AS p INNER JOIN server_items AS c ON (p.item_id = c.item_parent_id)     WHERE zone_rowid = %@ AND p.depth = %lld
SELECT item_id FROM server_items WHERE zone_rowid = %@ AND item_id NOT IN(SELECT item_id FROM items_checks)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_state = 0       AND p.item_state = 1
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@       AND p.item_type NOT IN (1, 2, 8, 5, 6, 7, 3)
SELECT c.item_id      FROM server_items AS c INNER JOIN server_items AS p ON (c.zone_rowid = p.zone_rowid AND c.item_parent_id = p.item_id)     WHERE c.zone_rowid = %@ AND c.item_rank >= p.item_rank       AND p.item_state = 1
is an item with a greater rank than a dead parent
server items checks (%s)
===================
UPDATE server_items SET item_state = 1, item_rank = NULL WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_state = 0
UPDATE server_items SET item_state = 1 , item_parent_id = %@ WHERE zone_rowid = %@   AND item_rank IS NULL   AND NOT EXISTS (SELECT 1 FROM server_items as pi WHERE pi.item_id = server_items.item_parent_id AND pi.zone_rowid = server_items.zone_rowid LIMIT 1)   AND item_parent_id != %@
SELECT item_id   FROM server_items  WHERE zone_rowid = %@    AND item_state = 1    AND item_type = 0    AND item_rank IS NULL
UPDATE server_items SET item_favoriterank = NULL, item_lastusedtime = NULL, item_side_car_ckinfo = NULL, item_rank = NULL WHERE zone_rowid = %@ AND (item_sharing_options & 4) == 0
%@ %s %@ - %@ - %@ - %d
Sync-Up
client_sync_up
in_flight_diffs, zone_rowid
zone:%@
 in-flight{%@}
in_flight_diffs = NULL
UPDATE %@SET in_flight_diffs = %lldWHERE %@
SELECT in_flight_diffs FROM %@WHERE %@ AND throttle_state != 0
SELECT COUNT(*) FROM %@WHERE %@ AND throttle_state != 0
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_sync_up AS su WHERE ci.rowid = su.throttle_id AND su.throttle_state != 0)
throttle_id, zone_rowid
Uploader
client_uploads
com.apple.bird.thumbnails
com.apple.bird.quota
availableQuota
com.apple.bird.quota.update-state
uploader
com.apple.bird.uploader
uploader-retry
UPDATE client_uploads SET transfer_stage = %@, transfer_operation = %@ WHERE %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_stage = %@
SELECT zone_rowid FROM client_uploads WHERE %@ AND transfer_operation = %@
SELECT transfer_operation IS NOT NULL FROM client_uploads WHERE throttle_id = %llu
transfer_operation, transfer_queue, upload_error, app_library_rowid, zone_rowid
in-quicklook
needs-thumbnail
pending-retry
queue:%@
upload:done/cancelled
uploading:%.1f%%
UPDATE client_uploads SET   throttle_state = 1, transfer_operation = %@ WHERE %@
UPDATE client_uploads SET  throttle_state = %d, transfer_queue = '_prepare', transfer_record = NULL, transfer_stage = NULL, transfer_operation = NULL WHERE throttle_id = %@
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@ AND throttle_state != 0
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE zone_rowid = %@ AND throttle_state != 0
SELECT transfer_operation    FROM client_uploads  WHERE throttle_id = %lld AND throttle_state == 1
SELECT throttle_id, transfer_queue, transfer_operation, transfer_stage, app_library_rowid, throttle_state, zone_rowid   FROM client_uploads  WHERE %@
UPDATE client_uploads SET  throttle_state = call_block(%@, next_retry_stamp, app_library_rowid, zone_rowid), transfer_queue = %@ WHERE %@
UPDATE client_uploads    SET throttle_state = %d, transfer_operation = NULL  WHERE %@
app_library_rowid, transfer_queue, transfer_size, transfer_record, transfer_stage, transfer_operation, upload_priority, upload_request_stamp , zone_rowid
%@, %@, %lld, %@, %@, %@, %lld, %lld, %@
zone_rowid = %@
UPDATE client_uploads    SET upload_priority = %lld, upload_request_stamp = %lld  WHERE throttle_id = %lld
UPDATE client_uploads SET throttle_state = 1 WHERE throttle_state = %u AND zone_rowid = %@
UPDATE client_uploads SET transfer_queue = call_block(%@, throttle_id, app_library_rowid, next_retry_stamp, zone_rowid)     WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL      AND next_retry_stamp <= %lld
  SELECT MIN(next_retry_stamp)     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = '_retry'      AND transfer_operation IS NULL
UPDATE client_uploads SET transfer_operation = NULL WHERE (transfer_operation >= '')
SELECT app_library_rowid, zone_rowid, transfer_queue   FROM client_uploads  WHERE throttle_state = 1 GROUP BY app_library_rowid, zone_rowid, transfer_queue
transfer_queue = '_prepare' AND transfer_operation IS NULL
throttle_id, app_library_rowid, zone_rowid
brpackage
ckpackage-xattrs
%@-%lu
UPDATE client_uploads SET  transfer_queue = call_block(%@, next_retry_stamp, %@), transfer_record = %@, transfer_operation = NULL, transfer_stage = %@, transfer_size = %lld WHERE throttle_id = %lld
upload-%@-%@
-[BRCFSUploader _finishPackageUploadWithRecord:item:stageID:error:]
UPDATE client_uploads SET  transfer_operation = call_block(%@, next_retry_stamp), upload_error = %@ WHERE %@
  SELECT throttle_id, zone_rowid, transfer_size, transfer_record, next_retry_stamp, transfer_stage     FROM client_uploads    WHERE throttle_state = 1      AND transfer_queue = %@      AND transfer_operation IS NULL ORDER BY upload_priority DESC, upload_request_stamp DESC, transfer_size ASC
UPDATE client_uploads    SET transfer_queue = '_retry'  WHERE %@
v24@?0@"BRCUpload"8@"NSError"16
SELECT MIN(next_retry_stamp) FROM client_uploads   WHERE throttle_state = 1     AND transfer_queue = %@      AND transfer_operation IS NULL 
SELECT 1 FROM client_uploads  WHERE throttle_state = 32    AND zone_rowid IN (SELECT rowid FROM client_zones WHERE zone_owner = %@ AND zone_plist IS NOT NULL)  LIMIT 1
SELECT 1 FROM client_uploads WHERE throttle_state = 32 AND zone_rowid = %@ LIMIT 1
SELECT throttle_id, transfer_size   FROM client_uploads  WHERE throttle_state = 32    AND transfer_size < %lld
UPDATE client_items SET version_upload_error = NULL WHERE rowid = %lld
UPDATE client_uploads SET throttle_state = 1, upload_error = NULL WHERE throttle_id = %lld
v24@?0Q8@"NSError"16
Upload
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci WHERE ci.item_localsyncupstate = 3 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_uploads AS up WHERE ci.rowid = up.throttle_id AND up.throttle_state != 0)
SELECT pcs_state FROM server_items WHERE item_id = %@   AND zone_rowid = %@ LIMIT 1
SELECT 1 FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 LIMIT 1
AND NOT (item_type = 3 AND item_alias_target like '%%:\_%%' ESCAPE '\')
SELECT item_id, item_type, item_stat_ckinfo, version_ckinfo, pcs_state, item_alias_target FROM server_items WHERE item_parent_id = %@   AND zone_rowid = %@   AND pcs_state NOT IN (2, 3)   AND item_state = 0 %@
SELECT item_stat_ckinfo, version_ckinfo FROM client_items WHERE item_id = %@  AND zone_rowid = %@  AND (item_local_diffs & %lld) != 0
SELECT pcs_state, item_stat_ckinfo FROM server_items WHERE item_id = %@ AND zone_rowid = %@
pcs-chain/
.Trash
unreachable: Can't PCS chain to documents, trash, or root
br_pcsChainingUpdate
UPDATE server_items SET item_stat_ckinfo = %@, pcs_state = 4 WHERE item_id = %@ AND zone_rowid = %@ AND item_stat_ckinfo = %@
UPDATE server_items SET pcs_state = 3 WHERE item_id = %@ AND zone_rowid = %@ AND pcs_state != 2
v24@?0@"NSArray"8@"NSError"16
v24@?0@"BRCPCSChainBatchInfo"8@"NSError"16
-[BRFieldPkgLocalItem writeTo:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRFieldPkgLocalItem.m
self->_item != nil
[%@]
hasCompletedPCSMigration
migrate-pcs
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16^B24
not needed
v24@?0@"CKRecordZone"8@"NSError"16
v32@?0@"NSArray"8@"CKRecordZone"16@"NSError"24
com.apple.CloudDocsDaemon.container-metadata-extractor
com.apple.bird.watcher-queue
com.apple.bird.client-truth-workloop
com.apple.bird.server-truth-workloop
com.apple.bird.read-only-workloop
session{account:%@}
Unable to open file at path '%@' %{errno}d
-[BRCAccountSession openWithError:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/BRCAccountSession.m
Unable to lock file at path '%@' %{errno}d
client-db
com.apple.bird.main-scheduler
com.apple.bird.reset
com.apple.bird.pending-disk-scheduler
com.apple.bird.disk-space-observer
unreachable: createAppLibaryRoot failed but error is nil
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_parent_id = %@ AND zone_rowid = %@ AND item_filename != '.Trash' AND pcs_state NOT IN (2, 3) LIMIT 1
.localized
com.apple.clouddocs.app-uploaded
com.apple.bird.destroy-account-data
v24@?0@"NSString"8@"BRCALRowID"16
no-root
currentUserRecordID
v24@?0@"CKRecordID"8@"NSError"16
apps-list-did-change
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
SELECT value FROM aggregates WHERE key = 'version_size_sum'
enabling
disabling
download-all-tracker
SELECT SUM(li.version_size) FROM client_items as li WHERE li.item_type = 1   AND li.item_state = 0
SELECT MAX(rowid) FROM client_items WHERE rowid > %lld %@ ORDER BY rowid LIMIT %lld
<rdar://problem/27491735>
SELECT li.version_size,   MAX(IFNULL(da.access_time, 0), li.version_mtime)      FROM (SELECT version_size, rowid, item_type, item_localsyncupstate, item_state, version_mtime FROM client_items                   WHERE rowid > %lld                   %@                   ORDER BY rowid LIMIT %lld) AS li LEFT JOIN client_document_access AS da ON (da.item_rowid = li.rowid)     WHERE li.item_type = 1       AND li.item_localsyncupstate = 0       AND li.item_state != 1       AND li.version_size >= %lld       AND document_is_evictable(da.properties)       AND MAX(IFNULL(da.access_time, 0), li.version_mtime) <= %lld
B16@?0@"BRCLocalItem"8
Mobile Docs
%ld xpc clients:
%ld misc operations:
transfer-queue
records-left:%ld progress:%.1f%% size:%@
transferring
 (cancelled)
unreachable: Missing transfer error for record %@
docID:
unsaltedBookmarkData
+[BRCLocalItem(BRCBookmarkAdditions) parseUnsaltedBookmarkData:itemID:mangledID:error:]
bookmarkData
+[BRCLocalItem(BRCBookmarkAdditions) parseBookmarkData:inAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:]
BRGetFileNameFromServerInfoBlob
recordNames
partial
broken
problems
pendingRequestID
needsSync
dead parent
missing root
live children
missing content
cant save (missing structure?)
cant save (missing parent)
pcs decryption
upload stuck
download stuck
sync up stuck
sync down stuck
apply stuck
simulated (broken)
simulated (partial)
item parented to a document
package with corrupt indices
share without root record
root record missing shareID but share exists
zone resetted more than %lu times in %f seconds
problem{msg:%@,needs-sync:%@,zone-state:%@,pending-request:%@, records:%@}
ckinfo
zone-health{etag:%@,state:%@}
i20@?0i8@"NSString"12
/.vol/%u/%lld
BRCSetFakeQuarantineInfo
BRCGetXattrValue
-[BRCLazyXattrsCollection initWithFD:sizeLimit:syncable:error:]
-[BRCLazyXattrsCollection getXattrValue:error:]
file-write-data
file-read-data
com.apple.quarantine
com.apple.private.bird.fake-qtn
B16@?0r*8
com.apple.LaunchServices.OpenWith
com.apple.ResourceFork
com.apple.metadata:_kMDItemFinderLabel
com.apple.cs.CodeSignature
com.apple.cs.CodeDirectory
com.apple.cs.CodeRequirements
com.apple.cs.CodeRequirements-1
i24@?0r^v8r^v16
unlink
com.apple.bird.file-unlinker
-[BRCTreeEnumerator enumerateBelow:appLibrary:handler:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/items/BRCTreeEnumerator.m
parentID != nil
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE rowid > %lld   AND item_parent_id = %@  AND app_library_rowid = %@  AND NOT indexset_contains(%p, rowid) ORDER BY rowid    LIMIT %ld
upload-tracker
%@ - zones still uploading: %@
-[PQLConnection(BRCAdditions) registerFunction:nArgs:handler:error:]
com.apple.Pages
com.apple.Keynote
com.apple.Numbers
pages-tef
key-tef
numbers-tef
UPDATE client_reader_throttle    SET next_retry_stamp = MAX(next_retry_stamp, %lld)  WHERE %@
v16@?0@"NSURL"8
fsevent on root
fsevent.no-root
fs-event on container
needs lost parent
app_library_rowid != %@
app_library_rowid NOT IN (
SELECT zone_rowid, item_id, item_parent_zone_rowid, item_parent_id, app_library_rowid, item_processing_stamp FROM client_items WHERE item_state IN (-1,-3)  AND %@ ORDER BY item_processing_stamp LIMIT 1
 because too many deep scans
WITH RECURSIVE item_parents  (item_id, zone_rowid, item_state, item_processing_stamp, item_type) AS (  SELECT item_parent_id, item_parent_zone_rowid, item_state, item_processing_stamp, item_type FROM client_items      WHERE item_id = %@ AND zone_rowid = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid, li.item_state, li.item_processing_stamp, li.item_type FROM client_items AS li  INNER JOIN item_parents AS p USING (item_id, zone_rowid)      WHERE +app_library_rowid = %@      LIMIT %u) SELECT item_id, zone_rowid, item_state, item_processing_stamp, item_type FROM item_parents
UPDATE client_items SET item_processing_stamp = %lld WHERE item_id = %@ AND zone_rowid = %@
different-libraries
B24@?0@"BRCAsyncDirectoryEnumerator"8@"NSArray"16
v20@?0@"BRCAsyncDirectoryEnumerator"8i16
wrong applibrary for fsroot
fsroot doesn't match app library root
-[BRCFSReader thumbnailChangedForItem:relpath:url:error:]
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci WHERE ci.item_localsyncupstate = 2 AND ci.item_localsyncupstate != 0 AND NOT EXISTS (SELECT 1 FROM client_reader_throttle AS reader WHERE ci.rowid = reader.throttle_id AND reader.throttle_state != 0)
Reader
client_reader_throttle
lost-scan
com.apple.brc.fs.reader
reader reset
SELECT zone_rowid, app_library_rowid FROM mark_children_lost_progress GROUP BY zone_rowid, app_library_rowid
change-stream/%@
CREATE TABLE fetch_state (change_status integer not null, server_token blob, client_token integer)
CREATE TABLE record_changes (record_id blob primary key, record_type integer not null, record blob)
CREATE INDEX "record_changes/record_type" ON record_changes (record_type)
INSERT INTO fetch_state (change_status, server_token, client_token) VALUES (%d, %@, NULL)
db.db
SELECT change_status, server_token, client_token FROM fetch_state
unreachable: There should always be one entry
SELECT record_id, record FROM record_changes WHERE record_type = %d
INSERT OR REPLACE INTO record_changes (record_id, record_type, record) VALUES (%@, %d, %@)
UPDATE fetch_state SET change_status = %d, server_token = %@, client_token = %lld
serializedNameComponents
identifier
magnitude_float
magnitude_double
magnitude_int
magnitude_bool
magnitude
timestamp
investigation
PBUNSET
Server
ServerTruth|ClientTruth
ServerTruth|ClientTruth|UnlinkData
ServerTruth|ClientTruth|UnlinkData|PurgeZone
CloudDocsServerExtension
BRErrorNeedsReset
CKErrorChangeTokenExpired
CKErrorUserDeletedZone
Sync is restricted for this client
<%@:%p(%@:%ld) - %@>
too many registered source
-[BRCFairScheduler addSource:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/foundation/BRCFairScheduler.m
<%@:%p %@ on:%s>
(no-queue)
wrapperOperation
containerMetadataSync
%@:%@ %@:%lld %@:%@
serverChangeToken
lastSyncDate
isContainerMetadataSyncIdle
isSharedDBSyncIdle
ckGroup
containerMetadataHasCaughtUp
zoneHealthSync
zoneHealthSyncIdle
zone-health-state{last-sync:%@, needs-syncdown:%@, requestID:%lld, changeToken:%@}
sideCarSync
sideCarSyncIdle
side-car-state{last-sync:%@, needs-sync:%@, requestID:%lld, changeToken:%@}
directory-enumerator/%@
disabled-logged-out
disabled-entitlement
disabled-MDM
disabled TCC
user-interactive
user-initiated
utility
unspecified
xpc-client-workloop
XPC Client task tracker
xpc-client-queue-%d
 (Logged out)
 o %@
misc-operations
%@ entitlement required
%s privilege required
Not entitled to access container
Not entitled to create container
Not a container proxy
Not entitled to access: %@
file-read-metadata
No permission to %s at "%@"
write
can't %s app library for %@
create
load
-[BRCXPCClient _setupAppLibrary:error:]_block_invoke
-[BRCXPCClient _startDownloadItemsAtURLs:pos:options:error:reply:]
<token-getter>
-[BRCXPCTokenClient prepareFileProvidersWithReply:]
-[BRCXPCTokenClient currentAccountCopyTokenWithBundleID:version:reply:]
-[BRCXPCTokenClient getPrimaryiCloudAccountStatus:]
-[BRCXPCRegularIPCsClient checkinAskClientIfUsingUbiquity:]
-[BRCXPCRegularIPCsClient getContainerURLForID:recreateDocumentsIfNeeded:reply:]
containerID
-[BRCXPCRegularIPCsClient presyncContainerWithID:reply:]
v40@?0@"NSURL"8@"NSData"16@"NSString"24@"NSError"32
-[BRCXPCRegularIPCsClient getContainerURLForID:forProcess:reply:]
-[BRCXPCRegularIPCsClient updateContainerMetadataForID:]
-[BRCXPCRegularIPCsClient deleteAllContentsOfContainerID:onClient:onServer:wait:reply:]
ipc-%@
-[BRCXPCRegularIPCsClient registerInitialSyncBarrierForID:reply:]
-[BRCXPCRegularIPCsClient getQueryItemForURL:reply:]
-[BRCXPCRegularIPCsClient updateItemFromURL:reply:]
-[BRCXPCRegularIPCsClient getAttributeValues:forItemAtURL:reply:]
com.apple.finder
-[BRCXPCRegularIPCsClient startDownloadItemsAtURLs:options:reply:]
-[BRCXPCRegularIPCsClient startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:]
-[BRCXPCRegularIPCsClient evictItemAtURL:options:reply:]
-[BRCXPCRegularIPCsClient thumbnailChangedForItemAtURL:reply:]
-[BRCXPCRegularIPCsClient getItemUpdateSenderWithReceiver:reply:]
v16@?0@"BRCNotificationPipe<BRItemNotificationSending><NSXPCProxyCreating>"8
-[BRCXPCRegularIPCsClient getNonLocalVersionSenderWithReceiver:documentURL:includeCachedVersions:reply:]
-[BRCXPCRegularIPCsClient getTotalApplicationDocumentUsageWithReply:]
Total Size
Document Count
Applications
Localized Name
Documents URL
Icons
-[BRCXPCRegularIPCsClient getApplicationDocumentUsageInfoForBundleID:withReply:]
-[BRCXPCRegularIPCsClient hasOptimizeStorageWithReply:]
-[BRCXPCRegularIPCsClient setStorageOpimizationEnabled:reply:]
-[BRCXPCRegularIPCsClient getEvictableSpaceWithReply:]
-[BRCXPCRegularIPCsClient evictOldDocumentsWithReply:]
-[BRCXPCRegularIPCsClient addExternalDocumentReferenceTo:inContainer:underParent:reply:]
pid/containerID/parentURL
pid or containerID or parentURL must be set
parentURL
-[BRCXPCRegularIPCsClient getContainersByID:]
-[BRCXPCRegularIPCsClient getContainerForURL:reply:]
-[BRCXPCRegularIPCsClient resolveConflictWithName:atURL:reply:]
-[BRCXPCRegularIPCsClient didReceiveHandoffRequestForBundleID:reply:]
account
-[BRCXPCRegularIPCsClient _loggedInUserPropertyValuesForKeys:error:]
-[BRCXPCRegularIPCsClient getLoggedInUserPropertyValuesForKeys:reply:]
isSharingPrivateInterfaceEntitled
-[BRCXPCRegularIPCsClient setupInstanceWithDict:reply:]
testID
-[BRCXPCRegularIPCsClient resetBudgets:reply:]
global
-[BRCXPCRegularIPCsClient performSelfCheck:reply:]
self check failed: broken invariant
-[BRCXPCRegularIPCsClient printStatus:containerID:reply:]
-[BRCXPCRegularIPCsClient dumpDatabaseTo:containerID:includeAllItems:reply:]
-[BRCXPCRegularIPCsClient dumpCoordinationInfoTo:reply:]
-[BRCXPCRegularIPCsClient gatherInformationForPath:reply:]
relpath
local item
server item
local path match
server path match
-[BRCXPCRegularIPCsClient simulateHealthIssueWithContainer:status:brokenStructure:reply:]
 with broken structure
clientInfo
newStatus
-[BRCXPCRegularIPCsClient healthStatusStringForContainer:reply:]
-[BRCXPCRegularIPCsClient zoneNameForContainer:reply:]
-[BRCXPCRegularIPCsClient forceSyncZoneHealthWithBarrierWithTimeout:reply:]
zone-health sync timed-out
-[BRCXPCRegularIPCsClient forceSyncWithBarrierContainerID:timeout:reply:]
sync-down timed out: %@
-[BRCXPCRegularIPCsClient refreshSharingStateForItemIdentifier:reply:]
itemIdentifier
rootURL
-[BRCXPCRegularIPCsClient forceSyncContainerID:reply:]
-[BRCXPCRegularIPCsClient iWorkForceSyncContainerID:ownedByMe:reply:]
-[BRCXPCRegularIPCsClient waitForFileSystemChangeProcessingWithReply:]
-[BRCXPCRegularIPCsClient createContainerWithID:ownerName:reply:]
-[BRCXPCRegularIPCsClient computePurgeableSpaceForAllUrgenciesWithReply:]
-[BRCXPCRegularIPCsClient purgeAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient reclaimAmount:withUrgency:reply:]
-[BRCXPCRegularIPCsClient readerThrottleBackoffForDocumentAtPath:containerID:reply:]
isAutomationEntitled
SELECT throttle_state, next_retry_stamp FROM client_reader_throttle WHERE zone_rowid = %@ AND throttle_id = %lld
-[BRCXPCRegularIPCsClient launchTelemetryConsistencyChecksAtURL:reply:]
-[BRCXPCRegularIPCsClient currentAccountCreateWithID:reply:]
accountID
-[BRCXPCRegularIPCsClient currentAccountLogoutWithReply:]
Failed to destroy account
-[BRCXPCRegularIPCsClient jetsamCloudDocsAppsWithReply:]
-[BRCXPCRegularIPCsClient getContainersNeedingUpload:]
-[BRCXPCRegularIPCsClient setMigrationStatus:forDSID:shouldUpdateAccount:reply:]
-[BRCXPCRegularIPCsClient getMigrationStatusForPrimaryiCloudAccount:]
-[BRCXPCRegularIPCsClient getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDsToContentRecordIDs:reply:]
-[BRCXPCRegularIPCsClient resolveFileObjectIDToURL:reply:]
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]
does not have
Not Entitled
-[BRCXPCRegularIPCsClient resolveBookmarkDataToURL:reply:]_block_invoke
-[BRCXPCRegularIPCsClient getBackReferencingContainerIDsForURLs:reply:]
v32@?0@"NSURL"8@"NSError"16^B24
-[BRCXPCRegularIPCsClient getApplicationStatus:]
-[BRCXPCRegularIPCsClient getApplicationStatusForProcess:reply:]
-[BRCXPCRegularIPCsClient getLastSyncDateWithReply:]
-[BRCXPCRegularIPCsClient getLocalizedLastSyncWithReply:]
CLOUD_DRIVE_LAST_UPDATED_JUST_NOW
CLOUD_DRIVE_LAST_UPDATED_N_MINUTES_AGO
CLOUD_DRIVE_LAST_UPDATED_AT_TIME_FORMAT
CLOUD_DRIVE_LAST_UPDATED_YESTERDAY
EEEE
CLOUD_DRIVE_LAST_UPDATED_WEEKDAY_FORMAT
CLOUD_DRIVE_LAST_UPDATED_ON_DATE_FORMAT
-[BRCXPCRegularIPCsClient getContainerStatusWithID:reply:]
-[BRCXPCRegularIPCsClient getContainerLastServerUpdateWithID:reply:]
-[BRCXPCRegularIPCsClient getIsContainerWithIDOverQuota:reply:]
-[BRCXPCRegularIPCsClient currentNotifRankWithReply:]
-[BRCXPCRegularIPCsClient enumerateItemsInFolder:sortOrder:offset:limit:completion:]
v24@?0@"BRQueryItem"8@"BRCDirectoryItem"16
-[BRCXPCRegularIPCsClient enumerateAllFoldersWithSortOrder:offset:limit:completion:]
B16@?0@"BRQueryItem"8
-[BRCXPCRegularIPCsClient enumerateWorkingSetChangesFromChangeToken:limit:completion:]
v40@?0@"NSArray"8@"NSArray"16@"NSData"24@"NSError"32
Publish failed but no error was set
v32@?0@"NSURL"8@"NSDate"16@"NSError"24
-[BRCXPCRegularIPCsClient getPublishedURLForItemAtURL:forStreaming:requestedTTL:reply:]
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
-[BRCXPCRegularIPCsClient forceConflictForURL:bookmarkData:forcedEtag:reply:]
Item %@ isn't local at path
Item %@ is stale at path
-[BRCXPCRegularIPCsClient setiWorkPublishingInfoAtURL:publish:readonly:reply:]
path isn't iWork Shareable
-[BRCXPCRegularIPCsClient getiWorkPublishingInfoAtURL:reply:]
unreachable: base token of unexpected class
unreachable: sharing key of unexpected class
unreachable: only got sharing key or base token, didn't get both
-[BRCXPCRegularIPCsClient getiWorkPublishingBadgingStatusAtURL:reply:]
-[BRCXPCRegularIPCsClient getiWorkNeedsShareMigrateAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopySharingInfoAtURL:reply:]
isSharingProxyEntitled
unreachable: Item not found (with unspecified error)
-[BRCXPCRegularIPCsClient startOperation:toCopySharingWebAuthTokenForContainerID:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopySharingAccessToken:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyAvailableQuotaWithReply:]
canFetchUserQuota
-[BRCXPCRegularIPCsClient startOperation:toEvictItemAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toUploadAllFilesInContainer:reply:]
-[BRCXPCRegularIPCsClient copyCurrentUserIdentifierWithReply:]
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndEmailWithReply:]
-[BRCXPCRegularIPCsClient copyCurrentUserNameAndDisplayHandleWithReply:]
-[BRCXPCRegularIPCsClient createSharingInfoForURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toSaveSharingInfo:reply:]
isFolderSharingProxyEntitled
v16@?0^{__CFError=}8
-[BRCXPCRegularIPCsClient startOperation:toUnshareShare:forceDelete:reply:]
-[BRCXPCRegularIPCsClient startOperation:toLookupShareParticipants:reply:]
-[BRCXPCRegularIPCsClient startOperation:toModifyRecordAccessAtURL:allowAccess:reply:]
allow
disallow
-[BRCXPCRegularIPCsClient startOperation:toCopyParticipantTokenAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShareInfoAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShortTokenAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyEtagAtURL:reply:]
-[BRCXPCRegularIPCsClient startOperation:toPrepFolderForSharingAt:reply:]
-[BRCXPCRegularIPCsClient startOperation:toProcessSubitemsAtURL:maxSubsharesFailures:processType:reply:]
-[BRCXPCRegularIPCsClient startOperation:toAcceptShareLink:skipAcceptDialogs:reply:]
-[BRCXPCRegularIPCsClient copyBulkShareIDsAtURLs:reply:]
-[BRCXPCRegularIPCsClient startOperation:toCopyShareURLForShare:appName:reply:]
-[BRCXPCRegularIPCsClient getCreatorNameComponentsForURL:reply:]
-[BRCXPCRegularIPCsClient getShareOptionsOfItemIdentifier:reply:]
-[BRCXPCRegularIPCsClient getURLForItemIdentifier:reply:]
-[BRCXPCRegularIPCsClient _presentAcceptDialogsWithMetadata:reply:]
-[BRCXPCRegularIPCsClient handleCloudKitShareMetadata:completionHandler:]
-[BRCXPCRegularIPCsClient removeItemFromDisk:reply:]
-[BRCXPCRegularIPCsClient trashItemAtURL:reply:]
-[BRCXPCRegularIPCsClient boostFilePresenterAtURL:reply:]
-[BRCXPCRegularIPCsClient _t_extractMetadataForAllContainersWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedFilenamesForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupExcludedExtensionsForLogoutWithReply:]
-[BRCXPCRegularIPCsClient lookupMinFileSizeForThumbnailTransferWithReply:]
-[BRCXPCRegularIPCsClient overwriteAccessTimeForItemAtURL:atime:reply:]
%@ is not a document
Couldn't modify access time of %@
-[BRCXPCRegularIPCsClient currentSyncedRootURLsWithReply:]
-[BRCXPCRegularIPCsClient moveBRSecurityBookmarkAtURL:toURL:reply:]
-[BRCXPCRegularIPCsClient capabilityWhenTryingToReparentItemAtURL:toNewParent:reply:]
-[BRCXPCRegularIPCsClient checkIfItemIsShareableWithInode:reply:]
-[BRCXPCRegularIPCsClient scheduleDeepScanForContainer:reply:]
Can't use iCloud Drive.
The disk is full.
Free some space on your disk?
sync-down/periodic-sync
unreachable: No error found
useful
useless
wants-fault
start-dl
wants-thumb
fault 
contents 
for-thumb 
thumbnail 
user-qos 
 error:%@
downError
serverName
flags
zone-health-report
pkg:%lld%s p:'%@' rank:%lld ino:%lld
 (dirty)
 dir
 file gen:%@ size:%llu mtime:%llu mode:%s
 sig:%@
 link to:'%@'
 quarantine:%u 
 xattrs:%@
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime FROM client_pkg_items WHERE item_doc_id = %u AND rel_path = %@
SELECT largest_file_size FROM client_pkg_sizes WHERE item_doc_id = %u
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime FROM client_pkg_items WHERE item_doc_id = %u ORDER BY asset_rank
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime FROM client_pkg_items WHERE item_doc_id = %u ORDER BY rel_path
SELECT aggregate_size FROM client_pkg_sizes WHERE item_doc_id = %u
SELECT asset_rank, generation  FROM client_pkg_items WHERE item_doc_id = %@ AND item_type = %d
UPDATE client_pkg_items SET signature_or_link = %@ WHERE item_doc_id = %@ AND asset_rank = %ld
INSERT INTO client_pkg_items (item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@, %@, %@, %llu, %u, %llu)
B24@?0@"BRCPQLConnection"8@?<v@?@"PQLConnection"@"PQLStatement"@"NSError">16
INSERT INTO client_pkg_items (item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@)
INSERT INTO client_pkg_items (item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link) VALUES (%llu, %@, %u, %llu, %llu, %@, %@, %@, %@)
DELETE FROM client_pkg_items WHERE item_doc_id = %llu AND rel_path = %@
UPDATE client_pkg_items SET is_dirty = %d WHERE item_doc_id = %llu AND rel_path = %@
DELETE FROM client_pkg_sizes WHERE item_doc_id = %u
DELETE FROM client_pkg_items WHERE item_doc_id = %u
+[BRCPackageItem _deleteSnapshotAtPath:error:]
+[BRCPackageItem _rescanDirectoryInPackage:error:]
file
directory
SELECT item_doc_id, rel_path, item_type, asset_rank, file_id, is_dirty, quarantine_info, xattrs, signature_or_link, generation, size, mode, mtime  FROM client_pkg_items  ORDER BY item_doc_id, rel_path
client_pkg_items
+[BRCPackageItem dumpSession:toContext:db:error:]
SELECT file_id FROM client_pkg_items WHERE item_doc_id = %u AND rel_path = %@ AND is_dirty IS NULL
ready in %.3fs
<deadline %@: %@>
q24@?0@"BRCDeadlineSource"8@"BRCDeadlineSource"16
deadline-sheduler
needs-sync-down
in-sync-up
in-sync-down
last-sync-was-up
has-synced-down
prefer-sync-down
oob-sync-ack
BRCSyncContextDidBecomeBackground
BRCSyncContextDidBecomeForeground
<%@: %@ %p>
%@-metadata
v32@?0Q8q16@?<v@?>24
com.apple.bird.foreground.state
+ foreground clients:
   o %@ [container]
   o %@
   o %@ [grace period] disconnected %.1fs ago
   o forced foreground
   o always foreground
unknown bundle ID
Handoff request
fetch-quota
 WITH RECURSIVE item_parents (item_id, item_sharing_options, item_parent_id) AS (          SELECT item_id, item_sharing_options, item_parent_id FROM client_items           WHERE item_id = %@ AND zone_rowid = %@       UNION ALL          SELECT li.item_id, li.item_sharing_options, li.item_parent_id FROM client_items AS li     INNER JOIN item_parents AS p WHERE li.zone_rowid = %@ AND p.item_parent_id = li.item_id          LIMIT %u )        SELECT item_id FROM item_parents WHERE (item_sharing_options & 4) != 0
SELECT shared_by_me_count | shared_to_me_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_by_me_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT shared_to_me_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT over_quota_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT faults_count FROM item_recursive_properties WHERE item_rowid = %lld
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_download_count != 0 OR needs_dl_unstage_count != 0)
SELECT 1 FROM item_recursive_properties WHERE item_rowid = %lld AND (needs_sync_up_count != 0 OR needs_upload_count != 0)
WITH RECURSIVE pending_delete_children (item_id, item_type, needs_delete_doc_count) AS (     SELECT item_id, item_type, needs_delete_doc_count FROM item_recursive_properties      WHERE item_rowid = %llu AND needs_delete_doc_count != 0  UNION ALL     SELECT ip.item_id, ip.item_type, ip.needs_delete_doc_count FROM item_recursive_properties AS ip INNER JOIN pending_delete_children AS p WHERE ip.item_parent_id = p.item_id AND ip.zone_rowid = %@ AND ip.needs_delete_doc_count != 0) SELECT 1 FROM pending_delete_children AS pdc WHERE pdc.needs_delete_doc_count != 0 AND pdc.item_type IN (1, 2, 8) LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@ AND item_state = 1 AND item_parent_zone_rowid = %@ LIMIT 1
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state IN (0, -1)   AND item_parent_zone_rowid = %@ LIMIT 1
SELECT visible_child_count FROM client_items WHERE item_id = %@ AND zone_rowid = %@
SELECT 1 FROM client_items WHERE item_parent_id = %@    AND item_state IN (-1, -3)   AND item_parent_zone_rowid = %@ LIMIT 1
SELECT 1 FROM mark_children_lost_progress WHERE zone_rowid = %@ AND item_parent_id = %@ LIMIT 1
SELECT DISTINCT zone_rowid FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@    AND item_localsyncupstate = 4   AND item_state IN (0, -1, 1)
SELECT SUM(faults_count), SUM(needs_faulting_count), SUM(uploaded_size), SUM(needs_upload_size), SUM(uploaded_count), SUM(needs_upload_count), SUM(downloaded_size), SUM(needs_download_size), SUM(downloaded_count), SUM(needs_download_count), SUM(dl_unstaged_count), SUM(needs_dl_unstage_count), SUM(synced_up_count), SUM(needs_sync_up_count), SUM(over_quota_count), SUM(shared_by_me_count), SUM(shared_to_me_count), SUM(needs_delete_doc_count) FROM item_recursive_properties WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@
INSERT OR REPLACE INTO item_recursive_properties (item_rowid, item_id, item_parent_id, item_type, zone_rowid, item_parent_zone_rowid) VALUES (%llu, %@, %@, %u, %@, %@)
UPDATE item_recursive_properties SET item_type = %d WHERE item_rowid = %lld
shared_to_me_count = shared_to_me_count + 1
shared_by_me_count = shared_by_me_count + 1
UPDATE item_recursive_properties SET %@ WHERE item_rowid = %lld
shared_to_me_count = shared_to_me_count - 1
shared_by_me_count = shared_by_me_count - 1
INSERT INTO client_items ( rowid, zone_rowid, version_mtime, visible_child_count, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno) VALUES ( %lld, %@, %lld, 0, %@, %@, %ld, %@, %@, %d, %lld, %lld, %@, %@, %d, %@, %d, %d, %d, %lld, %lld, %lld, %@, %@, %d, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %@, %u, %@, %d, %@)
UPDATE client_items   SET item_parent_id = %@,       item_parent_zone_rowid = %@ WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
DELETE FROM client_items WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@   AND item_state = -2
SELECT si.rowid FROM server_items AS si INNER JOIN client_unapplied_table AS ap ON si.item_rank = ap.throttle_id WHERE si.item_parent_id = %@   AND si.zone_rowid = %@   AND si.item_type = 3   AND ap.throttle_state = 24
UPDATE client_items SET item_id = %@, item_creator_id = %@, item_sharing_options = %ld, item_side_car_ckinfo = %@, item_parent_zone_rowid = %@, item_localsyncupstate = %d, item_local_diffs = %llu, item_notifs_rank = %lld, app_library_rowid = %@, item_min_supported_os_rowid = %@, item_user_visible = %d, item_stat_ckinfo = %@, item_state = %d, item_type = %d, item_mode = %d, item_birthtime = %lld, item_lastusedtime = %lld, item_favoriterank = %lld, item_parent_id = %@, item_filename = %@, item_hidden_ext = %d, item_finder_tags = %@, item_xattr_signature = %@, item_trash_put_back_path = %@, item_trash_put_back_parent_id = %@, item_alias_target = %@, item_creator = %@, item_doc_id = %@, item_file_id = %@, item_generation = %@, item_localname = %@, item_processing_stamp = %@, item_staged_file_id = %@, item_staged_generation = %u, item_bouncedname = %@, item_scope = %d, item_tmpbounceno = %@, version_mtime = %lld  WHERE rowid = %llu
UPDATE client_items AS parent SET visible_child_count = (SELECT COUNT(*) FROM client_items AS child WHERE child.item_parent_id = parent.item_id AND child.item_parent_zone_rowid = parent.zone_rowid AND (child.item_user_visible = 1 OR (child.item_scope == 3 AND child.item_filename != ".Trash"))) WHERE parent.item_id = %@ AND parent.zone_rowid = %@
DELETE FROM client_items WHERE item_parent_id = %@ AND item_parent_zone_rowid = %@ AND item_state = -2
UPDATE client_items SET item_parent_id = call_block(%@, item_state, app_library_rowid, zone_rowid),     item_localname = call_block(%@) WHERE item_parent_id = %@   AND item_parent_zone_rowid = %@
account.debug.zombie.enable
nsurlsessiond
fsevents.latency
fsevents.reset-backoff
fsreader.container.throttle
fsreader.lost.throttle
fsreader.lost.backoff
fsreader.scan.batch-size
fsreader.coordination.count
fsreader.coordination.delay
fsreader.coordination.throttle
fswriter.apply.throttle
fswriter.apply.batch-size
fswriter.coordination.count
fswriter.coordination.delay
operation.failure.throttle
container.reset.throttle
shared-container.reset.throttle
container.reset.alias-removal.throttle
sync.container.throttle
sync.container.error.throttle
transfer.download.throttle
transfer.upload.throttle
sync-up.error.per-item.throttle
transfer.upload.file-modified.throttle
stage.gc.xpc
cachedelete-push.xpc
system.reachability
system.power
system.lowdisk
transfer.batch-size.min
transfer.width.max
transfer.width.min
transfer.budget
start-after
give-up-after
wait-at-least
wait-at-most
forget-after
max-elemnt-count
predicate
platforms
sync-throttles
success-ratio
quota-clear-ratio
error-ratio
kickback-delay
kickback-ratio
interval
delay
grace
repeat
priority
battery
screen.sleep
powernap
container.greedy
url.publish-timeout
server-config-url
defaults.clouddocs.
com.apple.bird.defaults-manager
com.apple.bird.defaults-manager-callback
v16@?0@"NSNotification"8
 (URL %@)
 (original URL: %@, current URL %@)
fetch-configuration
SELECT config_plist FROM server_state WHERE config_plist IS NOT NULL
UPDATE server_state SET config_plist = %@
server-only
q24@?0@"NSString"8@"NSString"16
@16@?0@8
fs.xattr-max-size
fs.preserved-xattr-max-size
sync.down.fetch-all-changes
sync.down.batchsize
sync.up.batchsize
sync.up.batchsize.decrease.factor
sync.up.batchsize.increase
sync.appcontainers.batchsize
sync.down.sharequerysize
fs.maxdepth
sync.maxdepth
container.local.treeEnumerator
fs.pkg.extensions
_ulstyle
_ultheme
abbu
acplugin
action
adiumemoticonset
adiumicon
adiumlibpurpleplugin
adiumlistlayout
adiumlisttheme
adiummenubaricons
adiummessagestyle
adiumplugin
adiumscripts
adiumserviceicons
adiumsoundset
adiumstatusicons
adjustments
agilekeychain
alfredpreferences
apifile
aplibrary
aplmodel
appdownload
appex
appsnapshot
assembly
assistant
avchd
band
bbpackage
bbprojectd
bentodb
bentotemplate
book
booktemplate
brushes
bundle
caction
cannedsearch
card
cardsmbornes
cbaccounts
chocoimg
cinemagraph
colloquyemoticons
colloquystyle
colorpicker
comic
component
cpimage
cplink
cptext
cpweb
cyndata
cyndicate
dashsync
dayone
dbwidget
definition
dictionary
discovery
dist
distz
dlist
docset
dsclext
dsym
dvdmedia
dvdproj
dvtplugin
dylib
effects
emberbackup
embermdbackup
embersnap
eomodeld
epub
evocamtimelapse
eyetv
eyetvloc
eyetvsched
eyetvtdmp
familyfile10
favorite
fcarch
framework
fullbackup
gbproj
gchdb
gdiagramstyle
glibb
goodnotes
gputrace
gradients
graffle
gspak
gstencil
gtemplate
haslibrary
help
highland
hptask
hsproj
huginautocp
hvfproject
hvpl
hype
hypeplugin
ibank
ibatemplate
ibooks
ibplugin
icbu
ideplugin
ilmbplugin
imovielibrary
incrementalbackup
instrdst
internetconnect
ipscannerlaunchextension
itlb
itlp
itmsp
itmsp-app
iwdgt
iwork-tmp
iwwebpackage
kext
kextcache
keychain-db
keychain
latexitplugin
latexpalette
layerstyles
lh3d
linea
listlayout
listtheme
lmnr
logarchive
logic
logicx
loginplugin
lpdf
lrdata
lslibrary
mailstationery
mbornes
mdimporter
mdlabels
menu
mftpkg
migratedaplibrary
migratedphotolibrary
mindnode
mindproj
mkext
mlproj
moneywell
monitor
monitorpanel
morphx
mpbinaries
mpkg
mproject
mqtz
mwand
nemolicense
networkconnect
neunote
nmbtemplate
nnwstyle
npbackup
octest
ofocus
ofocus-archive
ofocus-backup
ofocus-perspective
oo3template
ooxsl
oplx
opvault
osax
patch
pbproj
pbxproj
pc3calc
pc3cons
pc3conv
pc3func
pdfd
photo
photolibrary
photoslibrary
pigment
pkcs12
playground
playgroundbook
plugin
pluginkit
pocketcasd
prefpane
psdownload
ptest
pvback
pvmdb
pvoc
pvxmdb
pzdoc
qlgenerator
qtpxcomposition
quicken
quickpick
qvlibrary
qvnote
qvnotebook
radarplugin
raft
ramd
rcproject
rdarplugin
ripit
rtfd
saver
scene
scptd
scriv
scsf
sdsp
seemode
seetext
seplugin
service
sfrframe
shapes
simdevicetype
simruntime
sites
sites2
sketchpad-flat
sketchpad-pkg
skypechatstyle
slidesaver
soundhoundbookmark
soundhoundhistory
soundsmbornes
sparsebundle
spdoc
spreporter
ssdownload
storyboardc
studydeck
suggestionsassets
task
template
testrun
textbundle
textexpanderalias
textexpanderbackup
textexpanderlocal
textexpandersettings
textstyles
theater
theme
themembornes
themepack
tmbundle
tmplugin
trace
transport
ulbackup
ulproject
ulysses
vellum
viennastyle
wand
wdgt
webplugin
webtemplate
webtheme
wflow
whink
workflow
xcappdata
xcarchive
xccrashpoint
xcdatamodel
xcdatamodeld
xcmappingmodel
xcode
xcodeproj
xcplaygroundpage
xcplugin
xcprocessorusagepoint
xcresult
xcsintegration
xcsnapshots
xctest
xctoolchain
xcworkspace
xcyndicate
fs.pkg.blacklist.extensions
folder
fs.shareable.iwork.extensions
fs.bundle-bit.should-fixup.ios
fs.bundle-bit.fixup.backlist.ios
fs.greedy.extensions.ios
fs.non-auto-evictable.extensions.ios
fs.non-evictable.extensions.ios
fs.non-evictable.path-components.ios
fs.non-auto-evictable.utis.ios
fs.auto-evictable.utis.ios
doc.thumbnail-blacklist.extensions
emlx
ichat
stage.umask.file
stage.umask.fsroot
stage.umask.directory
stage.umask.package.directory
stage.umask.package.file
configuration.automatic.xpc
sync.automatic.xpc
transmogrify.xpc
quota.available.comfort-size
sync.quota.fetch-delay
apps-fetch-delay
sync-up.per-item.throttling.skip
sync-up.batch-failures.throttling.skip
sync.down.throttle
sync.up.throttle
sync.up.budget.minimal
sync.up.budget.daily.default
sync.up.budget.daily
sync.up.budget.hourly.default
sync.up.budget.hourly
sync.up.budget.minutely.default
sync.up.budget.minutely
sync.up.cost.initial-item
sync.up.cost.structure.create
sync.up.cost.structure.edit
sync.up.cost.structure.delete
sync.up.cost.data.create
sync.up.cost.data.edit
sync.up.cost.data.delete
sync.up.cost.document.create
sync.up.cost.document.edit
sync.up.cost.document.delete
sync.down.shared.coalesce.nanoseconds
db.trace
db.profile
db.batch-size
db.batch-delay
db.allow-read-only-in-ipc
db.autovacuum-batch-size
db.autovacuum-ratio
server.throttling.disable
session.should-be-greedy.ios
max-file-count
max-file-count.per-folder
upload.max-file-size
upload.max-in-pkg-file-size
upload.batch.records.count
upload.batch.count
download.batch.records.count
download.batch.count
download.will-retry-progress.max-count
zone-health.sync-down.batch.count
shared-db.sync-down.batch.count
fsreader.scan.package-delay
fsreader.lost-child.backoff
fsevents.queue-buffer-size
fsevents.process-batch-size
https://configuration.apple.com/configurations/internetservices/cloudkit/clouddocs/clouddocs-1.0.plist
min-file-size-graveyard
min-evictable-size.auto.ios
logout-timeout
foreground-grace-period
force-foreground-grace-period
force-batch-failure-when-token-expires
disk-space-reclaimer.max-access-time.low-urgency
disk-space-reclaimer.max-access-time.med-urgency
disk-space-reclaimer.max-access-time.high-urgency
disk-space-reclaimer.max-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-access-time
disk-space-reclaimer.max-ondisk-access-time.low-urgency
disk-space-reclaimer.max-ondisk-access-time.med-urgency
disk-space-reclaimer.max-ondisk-access-time.high-urgency
disk-space-reclaimer.max-ondisk-access-time.very-high-urgency
disk-space-reclaimer.eviction.default-ondisk-access-time
disk-space-reclaimer.max-graveyard-time.low-urgency
disk-space-reclaimer.max-graveyard-time.med-urgency
fetch-quota-interval
disk-reclaimer.purge-pacer-interval
disk-reclaimer.db-reclaimable-space-threshold
disk-reclaimer.cache-delete-recompute-interval
maximum-document-age-to-be-greedy
statement-cache-max-count-server-truth
statement-cache-max-count-client-truth
copy-share-ids-batch-size
alias-deletion-batch-size
disk-space.minimum-required-to-download.ios
disk-space.minimum-required-to-download-user-initiated
disk-space.minimum-required-to-be-greedy.ios
disk-space.required-to-return-to-greedy-state.ios
disk-space.required-to-return-to-greedy-state.relative.ios
account-size.maximum-to-be-always-greedy
disk-space.minimum-required-to-be-functional
disk-space.check-interval
disk-space.active-download-refresh-interval
user-notification.upload
spotlight-indexer.enabled
spotlight-indexer.pacer-interval
spotlight-indexer.batch-size
spotlight-indexer.max-depth
spotlight-indexer.failure-throttle-params
migration.failure-throttle-params
global-progress.additional.wait-trigger
global-progress.additional.size-trigger
document-access.high-priority-download-interval
pkg-extension-plist.write-interval
doc.min-size-for-thumbnail
doc.thumbnail-transfer-queue-width.ios
notif.overflow-limit
notif.gather-up-to
notif.batch-size
periodic-sync-time-interval
zone-health.reported-record-names-count
sync.only-treat-caught-up-as-consistent
zone-pcs-migration.blacklist-pcs-prep
_defaultZone
zone-pcs-migration.should-prepare
pcs-chaining.max-path-depth
pcs-chaining.batch-size
sharing.destroy-iwork-shares
fsreader.lost.marklost.batchSize
fsreader.lost.deep-first-threshold
excluded-filenames-worth-warning-at-logout
excluded-filenames-worth-preservering
excluded-extensions-worth-preservering
ignored-quarantine-mask
should-auto-migrate
.carry
.internal
.internal+carry
com.apple.clouddocs
sync.optimistic-pcs-chaining
sync.optimistic-chain-ramp
sync.reset.optimistic-chain-ramp
sync.reset.optimistic-chain
sync.aggressive-chain-ramp
aggressive-pcs-chaining
agressive-pcs-activity
should-fixup-czm-aliases
delete-shareid-batch-count
max-folder-enumeration-count
max-folder-enumeration-depth
power-log-report-interval
sqlite-cache-size.ios
sqlite-cache-spill.ios
downloader.size-refresh-interval
force-sync-override
uti-cache-size
fields-to-move-out-of-trash-mask
apply-count-to-signal-faults-live
compute-evictable-batch-size
ck-event-metric-timeout
report-all-per-item-failures
pcs-chain-2-phase
iCloud.com.apple.homeroom
sync.server-only.folder-sharing-blacklisted
sync.save-records-directly-for-delta-sync
sync-up.delay-for-failure
sync-down.delay-for-failure
sync-up.retry-for-failure
uploader.retry-for-failure
downloader.retry-for-failure
apply.retry-for-failure
reader.retry-for-failure
analytics.report.xpc
analytics.report.app-telemetry-gather.xpc
sync.reset.fail-if-outdated
sync.reset.fake-etag-for-fail-if-outdated
sync.side-car.use-share-reference
sync.should-migrate-fetch-share-aliases
sync.server-only.carry-partitions
p97,p98
user-initiated-max-backoff
should-pcs-chain-share-aliases
sync.stuck-throttle-delay
force-fail-if-exists-on-revival
change-item-id-on-unknown-item
zone-health.max-number-of-resets
zone-health.max-number-of-resets-for-time-interval
report-xpc-error-on-pcs-chain
czm-processing.timeout
telemetry.should-report
telemetry.event-queue-size
telemetry.event-queue-reduction
telemetry.report-batch-size
telemetry.disabled-messages
telemetry.retry-count-for-failure
telemetry.apply-scheduler-timeout
telemetry.header-send-supported-classes
telemetry.error-description-length
telemetry.benign-error-descriptions
sharing.delete-share-on-empty-save
sync-up.prevent-record-sync-without-diffs
sync-up.strip-birthtime-on-documents
sync-up.sharing.prevent-sharing-with-pending-delete
zone-health.errors-for-reset
zone-health.errors-to-report
sync.ignored-record-names
directory/appData_com.apple.Desktop
directory/appDocuments_com.apple.Desktop
directory/appData_com.apple.Documents
directory/appDocuments_com.apple.Documents
sync.prevent-concurrent-modify-records-operations
db.integrity-check.xpc
sync.integrity-check.boosting
db.integrity-check.apply
db.integrity-check.download
db.integrity-check.upload
db.integrity-check.reader
db.integrity-check.sync-up
sync.container-metadata.skip-records-with-missing-assets
  localItem:         %@
  serverItem:        %@
  parentFileID:      %@
  parentPath:        %@
  matchByPath:       %@
  matchByFileID:     %@
  matchByDocumentID: %@
  container:         %@
databaseBasePath
uuid
com.apple.bird.cellular-settings
sharing/iWork-publishing
unreachable: No sharing info and no error
sync-down/
unreachable: broken structure in op %@ (records: %ld edited, %ld deleted)  change token %@
<%@ error:%@ pcs:%s>
UNKNOWN_USER_GIVEN_NAME
-[BRCTermDumper initWithFd:forceColor:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/brctl/BRCTermDumper.m
_file
TERM
ansi
color
LESS
LESS=FRSX
LESSCHARSET
LESSCHARSET=utf-8
less
execvp
-[BRCTermDumper _startInCString:fgColor:bgColor:attr:]
i < 10
[%d%c
Sync down
Sync down (periodic)
Sync down (initial)
Sync down (push triggered)
Sync down (app launch)
Sync down (app library metadata)
Sync down (zone health)
Sync up
Sync up (app library metadata)
Sync up (zone health)
Download (thumbnails)
Download (thumbnails user initiated)
Download (user initiated)
Download (opportunistic)
Download (optimize storage off)
Download (updated documents)
Download (conflicting versions)
Quota update (uploader)
Quota update (xpc request)
Zone consolidation
Zone consolidation (manual)
Zone health simulation
Publishing request
Sync up & down (shared db)
Sharing misc.
Fetch identity (xpc request)
Purge
Fetch non local versions
OS upgrade migration
Aggressive PCS Chaining
Logout
com.apple.TextInput
com.apple.kbd
com.apple.shoebox
com.apple.passd
v24@?0@"LSBundleProxy"8^B16
com.apple.bird.apps-monitor
com.apple.bird.apps-monitor.fetch-apps
com.apple.bird.apps-monitor.callback
apps-refetch-pacer
apps monitor
app library IDs by App ID
=======================
app IDs by app library IDs
<undef>
no parent while bouncing path
-[BRCURLToItemLookup(BRCFSWriter) _removeDirectory:atPath:error:]
roedit_
inode
com.apple.clouddocs.private.recovered-bookmark#N
-[BRCURLToItemLookup(BRCFSWriter) trashItemIfNecessary:atURL:error:]
-[BRCFSWriter applyLocalEditIfNecessaryToURL:forItem:serverItem:forDelete:error:]
updated
unknown 
existing
 parent = %@
revived
eviction
making live
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_stat_ckinfo IS NULL AND item_parent_id = %@ AND zone_rowid = %@
v28@?0@"NSURL"8@"NSURL"16B24
, renaming
, deleting
 from 
 at 
   to 
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci WHERE ci.item_localsyncupstate = 4 AND item_min_supported_os_rowid IS NULL AND NOT EXISTS (SELECT 1 FROM client_sync_up AS su WHERE su.throttle_id = ci.rowid AND su.throttle_state != 0)
SELECT ci.rowid, ci.zone_rowid, ci.item_id, ci.item_creator_id, ci.item_sharing_options, ci.item_side_car_ckinfo, ci.item_parent_zone_rowid, ci.item_localsyncupstate, ci.item_local_diffs, ci.item_notifs_rank, ci.app_library_rowid, ci.item_min_supported_os_rowid, ci.item_user_visible, ci.item_stat_ckinfo, ci.item_state, ci.item_type, ci.item_mode, ci.item_birthtime, ci.item_lastusedtime, ci.item_favoriterank,ci.item_parent_id, ci.item_filename, ci.item_hidden_ext, ci.item_finder_tags, ci.item_xattr_signature, ci.item_trash_put_back_path, ci.item_trash_put_back_parent_id, ci.item_alias_target, ci.item_creator, ci.item_doc_id, ci.item_file_id, ci.item_generation, ci.item_localname, ci.item_processing_stamp, ci.item_staged_file_id, ci.item_staged_generation, ci.item_bouncedname, ci.item_scope, ci.item_tmpbounceno, ci.version_name, ci.version_ckinfo, ci.version_mtime, ci.version_size, ci.version_thumb_size, ci.version_thumb_signature, ci.version_content_signature, ci.version_xattr_signature, ci.version_edited_since_shared, ci.version_device, ci.version_conflict_loser_etags, ci.version_quarantine_info, ci.version_uploaded_assets, ci.version_upload_error, ci.desired_version, ci.item_live_conflict_loser_etags, ci.item_thumb_live_signature, ci.item_thumb_greedy FROM client_items AS ci LEFT JOIN client_sync_up AS su ON su.throttle_id = ci.rowid AND su.zone_rowid = ci.zone_rowid LEFT JOIN client_uploads AS cu ON cu.throttle_id = ci.rowid AND cu.zone_rowid = ci.zone_rowid WHERE ci.item_localsyncupstate = 3 AND ci.item_type IN (1, 6) AND (IFNULL(cu.throttle_state, 0) = 0 OR (cu.throttle_state = 31 AND IFNULL(su.throttle_state, 0) = 0))
SELECT 1 FROM client_sync_up WHERE zone_rowid = %@ AND throttle_state != 0
com.apple.brc.fs.writer
disk
faulted
sharing/copy-web-auth-token
SELECT item_id FROM client_items   WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_doc_id = %u   AND +item_state IN (0, -1)   AND +item_type IN (1, 2, 8, 6, 7)
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE rowid = %lld
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items  WHERE item_file_id = %lld    AND item_state IN (0, -1)
SELECT zone_rowid, item_rank, item_origname, pcs_state, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, quota_used, recursive_child_count, shared_children_count, shared_alias_count, child_count FROM server_items WHERE item_alias_target = %@ AND item_type = 3 AND item_state = 0 %@ ORDER BY item_id
AND +zone_rowid = %@
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_alias_target = %@ AND item_type = 3 AND +zone_rowid = %@ ORDER BY item_id
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_id = %@ AND zone_rowid = %@
WITH RECURSIVE item_parents (item_id, zone_rowid) AS (     SELECT item_parent_id, item_parent_zone_rowid FROM client_items      WHERE zone_rowid = %@ AND item_id = %@  UNION ALL     SELECT li.item_parent_id, li.item_parent_zone_rowid FROM client_items AS li INNER JOIN item_parents AS p USING (item_id, zone_rowid)      LIMIT %u) SELECT item_id, zone_rowid FROM item_parents WHERE item_id_is_root(item_id) OR (item_id = %@ AND zone_rowid = %@) LIMIT 1
hierarchy-too-deep
item_parent_zone_rowid = %@ AND item_parent_id = %@
zone_rowid = %@ AND item_id = %@
WITH RECURSIVE item_children_with_shared_items (item_id, zone_rowid, shared_items_count) AS (     SELECT item_id, zone_rowid, (shared_by_me_count | shared_to_me_count) FROM item_recursive_properties      WHERE %@ AND (shared_by_me_count | shared_to_me_count) != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, (ip.shared_by_me_count | ip.shared_to_me_count) FROM item_recursive_properties AS ip INNER JOIN item_children_with_shared_items AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND (ip.shared_by_me_count | ip.shared_to_me_count) != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid, li.item_sharing_options FROM item_children_with_shared_items AS ic INNER JOIN client_items AS li WHERE ic.shared_items_count = 1 AND li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND (li.item_sharing_options & 4) != 0
WITH RECURSIVE item_children_with_side_faults (item_id, zone_rowid, faults_count) AS (     SELECT item_id, zone_rowid, faults_count FROM item_recursive_properties      WHERE zone_rowid = %@ AND item_id = %@ AND faults_count != 0  UNION ALL     SELECT ip.item_id, ip.zone_rowid, ip.faults_count FROM item_recursive_properties AS ip INNER JOIN item_children_with_side_faults AS p WHERE ip.item_parent_id = p.item_id AND ip.item_parent_zone_rowid = p.zone_rowid AND ip.faults_count != 0      LIMIT %llu) SELECT ic.item_id, ic.zone_rowid FROM item_children_with_side_faults AS ic WHERE ic.faults_count = 1 AND EXISTS (SELECT 1 FROM client_items AS li WHERE li.item_id = ic.item_id AND li.zone_rowid = ic.zone_rowid AND li.item_type in (2, 7, 8))
UPDATE %@ SET app_library_rowid = %@,transfer_queue = %@ WHERE app_library_rowid = %@ AND transfer_queue = %@
UPDATE %@ SET app_library_rowid = %@ WHERE app_library_rowid = %@
FolderSharing
ShareAcceptation
error
com.apple.iCloudDrive.shareAcceptation
periodicSync
com.apple.iCloudDrive.periodicSync
containerReset
com.apple.iCloudDrive.containerReset
applyFailure
com.apple.iCloudDrive.applyFailure
PCSChaining
PCSChainingTime
numOfUnchainedFiles
com.apple.iCloudDrive.folderSharePCSChainingTime
CKErrorDomain.2
@"NSDictionary"8@?0
%@.%ld
errorMessage
record-fetcher
unreachable: Received %lu xattr records instead of expected %lu records for %@
com.apple.bird.fileprovider.
file-provider
file presenters for %@
  + %@ -> %@
%@::%@
%@[%d]
com.apple.bird.cache-delete
com.apple.bird.purge-pacer
purgeableSpace
nonPurgeableSpace
purgeableSpaceDate
v24@?0@"NSDictionary"8@"NSNumber"16
com.apple.bird.eviction
B16@?0@"BRCDocumentItem"8
INSERT INTO client_document_access (item_rowid, modify_access_time, properties) VALUES (%llu, %lld, %d)
DELETE FROM client_document_access WHERE item_rowid = %llu
UPDATE client_document_access SET modify_access_time = MAX(access_time, %lld)  WHERE item_rowid = %llu
UPDATE client_document_access SET properties = (properties | 0x1) WHERE item_rowid = %llu
UPDATE client_document_access SET properties = (properties & ~0x1) WHERE item_rowid = %llu
UPDATE client_document_access SET access_time = %lld, modify_access_time = %llu, properties = (properties | %d) WHERE item_rowid = %llu
sqlite_autoindex_client_downloads_2
UPDATE OR IGNORE client_downloads SET download_priority = %ld, download_request_stamp = %lld WHERE throttle_id = %lld AND +zone_rowid = %@
UPDATE client_document_access SET access_time = %lld, modify_access_time = %lld, properties = (properties | %d) WHERE item_rowid = %llu
SELECT access_time > %lld FROM client_document_access WHERE item_rowid = %llu
SELECT access_time FROM client_document_access WHERE item_rowid = %llu
SELECT MAX(modify_access_time, access_time)   FROM client_document_access  WHERE item_rowid = %llu
q16@?0@"BRCDocumentItem"8
B24@?0@"BRCDocumentItem"8@"NSNumber"16
B20@?0@"PQLResultSet"8B16
   SELECT dt.throttle_id, dt.zone_rowid      FROM client_downloads AS dt     WHERE dt.download_kind = %d       AND dt.throttle_state = 43
<rdar://problem/34004579>
   SELECT da.item_rowid, ci.zone_rowid      FROM client_document_access AS da, client_items as ci     WHERE da.item_rowid = ci.rowid        AND document_is_evictable(da.properties)        AND access_time < %lld        AND NOT EXISTS(SELECT 1 FROM client_downloads AS dt                       WHERE dt.throttle_id = da.item_rowid                         AND dt.download_kind = %d                         AND dt.throttle_state = 43)  ORDER BY access_time ASC
SELECT access_time, document_is_evictable(properties) FROM client_document_access WHERE item_rowid = %llu
 access:%@ ago
evictable:%s%@
timed out waiting for eviction
-[BRCDiskSpaceReclaimer performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:]
SELECT rowid, zone_rowid, item_id, item_creator_id, item_sharing_options, item_side_car_ckinfo, item_parent_zone_rowid, item_localsyncupstate, item_local_diffs, item_notifs_rank, app_library_rowid, item_min_supported_os_rowid, item_user_visible, item_stat_ckinfo, item_state, item_type, item_mode, item_birthtime, item_lastusedtime, item_favoriterank,item_parent_id, item_filename, item_hidden_ext, item_finder_tags, item_xattr_signature, item_trash_put_back_path, item_trash_put_back_parent_id, item_alias_target, item_creator, item_doc_id, item_file_id, item_generation, item_localname, item_processing_stamp, item_staged_file_id, item_staged_generation, item_bouncedname, item_scope, item_tmpbounceno, version_name, version_ckinfo, version_mtime, version_size, version_thumb_size, version_thumb_signature, version_content_signature, version_xattr_signature, version_edited_since_shared, version_device, version_conflict_loser_etags, version_quarantine_info, version_uploaded_assets, version_upload_error, desired_version, item_live_conflict_loser_etags, item_thumb_live_signature, item_thumb_greedy FROM client_items WHERE item_type = 8 AND zone_rowid = %@
streamUUID
event
streamUUID:%@ event:%llu root:%llu
MustScanSubDirs
UserDropped
KernelDropped
EventIdsWrapped
HistoryDone
RootChanged
Mount
Unmount
ItemCreated
ItemRemoved
ItemInodeMetaMod
ItemRenamed
ItemModified
ItemFinderInfoMod
ItemChangeOwner
ItemXattrMod
ItemIsFile
ItemIsDir
ItemIsSymlink
ItemIsHardlink
ItemIsLastHardlink
OwnEvent
ItemCloned
the root %s was deleted by an external process
-[BRCFSEventsMonitor setUpRoot:isImmutableRoot:volume:error:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/fs/BRCFSEventsMonitor.m
-[BRCFSEventsMonitor setUpRoot:isImmutableRoot:volume:error:]
historical events not availible
creating a new stream
device changed fsevent UUID
-[BRCFSEventsMonitor setUpStreamSynchronously:reason:error:]
rendez-vous.%@.nosync
 (initial scan)
fsevents wrapped
soft dropped fsevents
dropped fsevents
The root changed filedID from %llu to %llu
-[BRCFSEventsMonitor fseventAtPath:withFlags:andID:eventIndex:eventCount:initialScan:]
root needs deep scan
com.apple.brc.fs.events
com.apple.brc.fs.events-process
<%@: %p root:%@ suspendCount:%d>
client-state
<%@ %p, %@>
com.apple.brc.system-resources
com.apple.system.powermanagement.SystemLoadAdvisory
good
v32@?0@"NSNumber"8@"NSHashTable"16^B24
memory-notif-pacer
v16@?0@"NSDictionary"8
com.apple.distnoted.matching
great
ErrorName
ErrorCount
ZoneErrorCount
SyncType
ZoneType
TotalItemsCount
FolderSharingEnabled
DSID
RampNumber
LastErrorTimestamp
ChainedFiles
ErrorMessage
itemSyncUp
syncUp
syncDown
com.apple.iCloudDrive.syncStatus
com.apple.iCloudDrive.appTelemetry.syncUpBackoff
backoff
com.apple.iCloudDrive.appTelemetry.folderSharingCountMismatch
mismatchCount
com.apple.iCloudDrive.appTelemetry.missingPush
numberOfZonesOutOfSync
com.apple.iCloudDrive.appTelemetry.permanentlyInconsistent
permanentlyInconsistent
com.apple.iCloudDrive.appTelemetry.droppedEvent
eventCount
com.apple.iCloudDrive.appTelemetry.testEvent
com.apple.iCloudDrive.appTelemetry.shareAliasInSharedFolder
sharedAliasInSharedFolder
%@;%@
v32@?0@"BRCErrorGrouping"8@"NSNumber"16^B24
true
false
chain sent
half chained
yyyy-MM-dd/HH:mm:ss
last-sync:%@
last-sync:never
, requestID:%llu
, inconsistent
, consistent
, caught-up
, status:%d(?)
, token:%@
lsdDate
lsdStatus
last-sync:%@ nextRank:%lld minUsedTime:%lld shared-db{%@}
nextRank
shareDatabase
migrationQuery
minUsedTime
unable to update the server_state
-[BRCServerPersistedState saveToDB:]
/Library/Caches/com.apple.xbs/Sources/CloudDocs_plugins_Sim/CloudDocs-737/daemon/BRCServerPersistedState.m
%s%@:%@
Client
[%d]
sharing/copy-share
unreachable: Can't find root itemID %@
unreachable: Can't find URL for root itemID %@
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_doc_id, li.item_file_id, li.item_generation, li.item_localname, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_tmpbounceno, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.desired_version, li.item_live_conflict_loser_etags, li.item_thumb_live_signature, li.item_thumb_greedy FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (1, 2, 8, 5, 6, 7, 3)    AND li.item_state = 0    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_doc_id, li.item_file_id, li.item_generation, li.item_localname, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_tmpbounceno, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.desired_version, li.item_live_conflict_loser_etags, li.item_thumb_live_signature, li.item_thumb_greedy FROM client_items AS li  INNER JOIN client_sync_up AS su  ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_type IN (0, 4)    AND (li.item_state = 0)    AND li.item_localsyncupstate = 4    AND li.item_min_supported_os_rowid IS NULL
SELECT li.rowid, li.zone_rowid, li.item_id, li.item_creator_id, li.item_sharing_options, li.item_side_car_ckinfo, li.item_parent_zone_rowid, li.item_localsyncupstate, li.item_local_diffs, li.item_notifs_rank, li.app_library_rowid, li.item_min_supported_os_rowid, li.item_user_visible, li.item_stat_ckinfo, li.item_state, li.item_type, li.item_mode, li.item_birthtime, li.item_lastusedtime, li.item_favoriterank,li.item_parent_id, li.item_filename, li.item_hidden_ext, li.item_finder_tags, li.item_xattr_signature, li.item_trash_put_back_path, li.item_trash_put_back_parent_id, li.item_alias_target, li.item_creator, li.item_doc_id, li.item_file_id, li.item_generation, li.item_localname, li.item_processing_stamp, li.item_staged_file_id, li.item_staged_generation, li.item_bouncedname, li.item_scope, li.item_tmpbounceno, li.version_name, li.version_ckinfo, li.version_mtime, li.version_size, li.version_thumb_size, li.version_thumb_signature, li.version_content_signature, li.version_xattr_signature, li.version_edited_since_shared, li.version_device, li.version_conflict_loser_etags, li.version_quarantine_info, li.version_uploaded_assets, li.version_upload_error, li.desired_version, li.item_live_conflict_loser_etags, li.item_thumb_live_signature, li.item_thumb_greedy FROM client_items AS li  INNER JOIN client_sync_up AS su    ON su.throttle_id = li.rowid  WHERE         su.throttle_state = 50    AND su.zone_rowid = %@    AND su.in_flight_diffs IS NULL    AND li.item_state = 1    AND li.item_localsyncupstate = 4    AND NOT EXISTS(SELECT 1 FROM client_items AS ci                     WHERE li.item_id = ci.item_parent_id                      AND ci.zone_rowid = su.zone_rowid                      AND ci.item_state != -2)    AND li.item_min_supported_os_rowid IS NULL
v16@?0@"BRCItemID"8
 in the same zone
orphan.live
SELECT COUNT(*) FROM client_items  WHERE item_parent_id = %@     AND item_localsyncupstate = 4    AND NOT indexset_contains(%p, rowid)    AND zone_rowid = %@    AND item_state != -2
orphan.tombstone
sync-up/container-metadata
+[BRCNonLocalVersionsSender senderWithLookup:client:XPCReceiver:error:]
non-local-versions for %@
com.apple.clouddocs.version
v36@?0@"CKRecordID"8B16@"NSArray"20@"NSError"28
-[BRCNonLocalVersionsSender(IPCs) listNonLocalVersionsWithReply:]
z:%@
r:%lld
throttle_id = %lld
throttle_id
%@:%lld
throttle_id = %lld AND zone_rowid = %@
%lld, %@
[CRIT] UNREACHABLE: %@'s device ID is 0!
[NOTICE] on device: %@
[ERROR] %s: %s error: %@
sync/side-car-fetch
[DEBUG] Saving side car changed records %@
deleted record %@
server change token %@
requestID %llu
[CRIT] UNREACHABLE: Couldn't deserialize side car info on %@
[CRIT] UNREACHABLE: Couldn't parse alias record name for %@
[DEBUG] Ignoring deleted recordID where we couldn't locate the server zone %@
[CRIT] UNREACHABLE: failed to alloc ranks when syncing down side cars for %@
[WARNING] Marking sync request in side care zone as failed because requestIDs differ %lld vs %lld
[DEBUG] Succeeded in syncing up the side car zone with requestID %lld
[DEBUG] Ignoring record of unknown type %@
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:record.recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[record.recordID] == nil
[CRIT] Assertion failed: ![deletedRecordIDs containsObject:recordID]
[CRIT] Assertion failed: sideCarRecordsByRecordID[recordID] == nil
[DEBUG] Finished syncing down side cars - %@
[INFO] 
%llx 
[DEBUG] 
%llx 
[CRIT] Assertion failed: url
[CRIT] Assertion failed: session
[ERROR] can't extract logical name from fault name; %@
[DEBUG] can't extract filename from %@
[ERROR] can't extract filename from %@
[CRIT] Assertion failed: !_parentRelpath.exists || _parentRelpath.isUnixDir
[CRIT] Assertion failed: _hasFetched.parentPath
[CRIT] Assertion failed: _parentRelpath.appLibrary
[CRIT] API MISUSE: lookups should not be used on parent paths of type: %s
[DEBUG] can't create the relpath to a non-existing fault
[DEBUG] can't resolve %@:  %{errno}d
[CRIT] UNREACHABLE: this is going to have unexpected effect to take this branch
[CRIT] Assertion failed: _allowAppLibraryRoot
[DEBUG] can't fetch the faulted path match with a non-existing fault
[CRIT] UNREACHABLE: unexpected error when resolving a path %{errno}d
[DEBUG] can't fetch the reserved path-match with a non-existing fault
[ERROR] Sqlite request %@ failed on %@ with error [%@]
[ERROR] Sqlite failed on %@ with error [%@]
[CRIT] UNREACHABLE: Got really unexpected error: %@
[ERROR] %@
[WARNING] %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  changes:  %lld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[WARNING] Possible slow statement on %@:
  binds:    %d
  columns:  %d
  rows:     %ld
  vm steps: %d (max: %lu)
  sql:      %s
  %@
[CRIT] Significantly too slow SQL statement ( vm steps: %u  max:%lu ): %s
[CRIT] API MISUSE: you need to provide a radar
[CRIT] API MISUSE: you need to an index to use
[CRIT] Assertion failed: block
[CRIT] Assertion failed: _batchingPacer
[DEBUG] 
%llx creating operation %@
BRCOperation/? (subclass activity missing)
[DEBUG] 
%llx now using group: %@
[DEBUG] 
%llx dealloc
[CRIT] Assertion failed: !_executionTransaction
[CRIT] Assertion failed: self.finished
[DEBUG] throttle backoff: %03fs for hash:0x%016llx
[ERROR] throttle backoff is greater than max.  Failing the operation
[DEBUG] server provided backoff: %.03fs
[CRIT] %@ has been blacklisted and won't be attempted again
[DEBUG] attempting execution again in %.03fs
[DEBUG] 
%llx retrying %@
[CRIT] UNREACHABLE: there should be a group created for %@
[CRIT] UNREACHABLE: Operation %@ is missing syncContext
[DEBUG] scheduling %@
[DEBUG] 
%llx starting %@
[DEBUG] 
%llx cancelling %@
[DEBUG] 
%llx finishing %@
[DEBUG] 
%llx %@%@ %@%@%@
[WARNING] We are blacklisted! Not notifying about finishing %@
[DEBUG] Sending telemetry events in operation %@
[DEBUG] (%@) Queuing %@
[CRIT] Assertion failed: context
[CRIT] Assertion failed: _syncContext
[CRIT] Assertion failed: _remoteClientProxy || _ignoreMissingRemoteClientProxy
[DEBUG] 
%llx dispatching to %s
[DEBUG] 
%llx continuing on %s
sync/sharedb
[DEBUG] inserted new ownerKey %@ for %@
[DEBUG] 
%llx Handling result of creating %@ (operationID=%@): %@
[DEBUG] %@ zone %@ changed
[ERROR] %@ failed: %@
[DEBUG] 
%llx %@ done: %u zones were changed and %u deleted
[DEBUG] scheduling sync for %@
[CRIT] UNREACHABLE: there should be a container
[DEBUG] updating shared-database from %@ with token:%@ caught-up:%s
[DEBUG] 
%llx Sync: fetching changed zones in the shared-database
[CRIT] Assertion failed: !item.isBRAlias
[CRIT] Assertion failed: !item.isReserved
[CRIT] Assertion failed: shareRoot
[CRIT] UNREACHABLE: got a document without a document fileObjectID:%@ %@
[CRIT] Assertion failed: [_fileObjectID folderID]
[NOTIF] Changing update for item %@ to be dead because the parent path can't be computed
[CRIT] Assertion failed: finderTags.tagsCount > 0
[WARNING] item %@ in shared zone "%@" should have share-options set (actual:%lu %@)
[ERROR] item has both or neither a public and private share %@
[CRIT] Assertion failed: !item.isZoneRoot
[CRIT] Assertion failed: item.st.stagedGenerationID == relpath.generationID.fsGenerationID.longValue
[NOTIF] %@: can't resolve the alias on disk for %@, marking it dead
[NOTIF] 
%llx generating sandbox extensions for %@
[CRIT] Assertion failed: logicalName
[CRIT] Assertion failed: physicalName.br_isSideFaultName
[NOTIF] issued sandbox extension for %@
[ERROR] failed to issue sandbox extension for %@: %@
[NOTIF] published progress for %@
[NOTIF] unpublished progress for %@
[WARNING] failed getting download progress for %@
[WARNING] failed getting upload progress for %@
[NOTIF] 
%llx User requested to cancel download for %@
[NOTIF] Added progress %@ for %@
[ERROR] can't resolve %@ %{errno}d
[ERROR] can't get URL for %@
[NOTIF] can't get the filename of %@: %@
[CRIT] Assertion failed: self.isSharedToMeTopLevelItem
[CRIT] Assertion failed: _serverZone.isSharedZone
[CRIT] Assertion failed: aliasZone.isPrivateZone
[ERROR] %@ has been CZM but we don't know it yet.  Not allowing alias sync
[DEBUG] No need to insert a dead alias when one already exists for %@
[CRIT] UNREACHABLE: Strange... An alias exists which isn't dead. Converting it to be dead for %@
[CRIT] Assertion failed: _db.isBatchSuspended
[CRIT] UNREACHABLE: Can't update to nil zone row id
[WARNING] Parent zone updated on %@, clearing ckinfo and inserting dead item
[CRIT] Assertion failed: existingAlias.isDead
[DEBUG] deleting existing alias %@ because the shared item moved here
[ERROR] no metadata for %@
[DEBUG] %@ is disabled by TCC
[DEBUG] %s: %s error: %@
[WARNING] Can't edit a readonly share for %@
[WARNING] Can't add a file to a readonly share with parent %@
[WARNING] Error trying to move shared top item %@ into trash
[WARNING] Error trying to move shared top item %@ into a shared item
[WARNING] Error trying to move shared top item %@ into another shared item %@
[DEBUG] Allowing move of top level folder share item %@
[WARNING] Top level shared item %@ moved across zone boundaries.  Allowing it
[WARNING] We need to download item %@ which is moving in or out of a shared zone to parent %@
[WARNING] Warning for move of shared item across zones
[WARNING] We need to download item %@ which is crossing zone boundaries to %@
[CRIT] Assertion failed: parent.isOwnedByMe
[CRIT] Assertion failed: !parent.isOwnedByMe
[WARNING] Moving item %@ into another shared item %@
[WARNING] Moving item %@ out of the share to new parent %@
[WARNING] Moving item %@ into a different share with parent %@
[WARNING] Moving item %@ into a share with parent %@
[WARNING] Moving item with a shared child %@ into a share with parent %@
[WARNING] Moving an item with a shared child %@ into trash at parent %@
[CRIT] UNREACHABLE: can't open interactive DB: %@
[CRIT] UNREACHABLE: can't open expensive DB: %@
[WARNING] Corrupting handling is already in-flight
[CRIT] Assertion failed: argc >= 1
[CRIT] Assertion failed: !set || [set isKindOfClass:[NSIndexSet class]]
[CRIT] API MISUSE: is_parented_or_equal_to(Container, parent_id, parentId_or_Set)
[CRIT] UNREACHABLE: we have a cycle
[DEBUG] recursive update of %lld
[DEBUG] database backup detector initialized {old:%llu; new:%llu; c:%llu}
[WARNING] backup detected: ino %llu instead of %llu at '%s'
[DEBUG] failed stating '%s' %{errno}d
[DEBUG] mismatch on new control file '%s': %llu != %llu
[DEBUG] database backup detector updated {old:%llu -> %llu; new:%llu -> %llu; c:%llu -> %llu}
[WARNING] can't remove %@: %@
[CRIT] Assertion failed: sct.dbRowID
[CRIT] UNREACHABLE: saving the container state should always work
[CRIT] Assertion failed: lcz.dbRowID
[CRIT] UNREACHABLE: saving the zone state should always work
[ERROR] Failed to create server zone %@:  %@
[CRIT] UNREACHABLE: sct.dbRowID is %@ lastInsertedRow is %lld
[ERROR] trying to create server zone that already exists
[CRIT] Assertion failed: rowID
[CRIT] UNREACHABLE: got a new rowid for already existing zone (sct.dbRowID=%@ rowID=%@)
[CRIT] UNREACHABLE: Failed to update plist for zone %@: %@
[CRIT] UNREACHABLE: couldn't allocate a rowid
[CRIT] Assertion failed: lib.zoneRowID
[CRIT] UNREACHABLE: saving the app library state should always work
[CRIT] Assertion failed: lib.dbRowID
[CRIT] Assertion failed: plist
[CRIT] Assertion failed: plist != nil
[CRIT] Assertion failed: mangedID
[DEBUG] this is the first time we hear of a device named '%@'
[CRIT] UNREACHABLE: can't insert device name: '%s'
[CRIT] Assertion failed: userFormattedName != nil
[DEBUG] learning name '%@' for user %@
[CRIT] Assertion failed: userIdentity
[CRIT] UNREACHABLE: can't insert user identity for name '%@': %@
[CRIT] UNREACHABLE: unable to update user identity
[CRIT] UNREACHABLE: participant %@ with no user identity
[DEBUG] user %@ has identity %@
[CRIT] UNREACHABLE: nameless identity: %@ (user %@)
[CRIT] UNREACHABLE: userName shouldn't be nil
[CRIT] UNREACHABLE: can't insert user name: '%@': %@
[DEBUG] this is the first time we hear of a user named '%@'
[DEBUG] clearing needs-upgrade errors
[DEBUG] Cleaning telemetry after updating BR version
[NOTICE] CloudDocs was upgraded from [%@ on %@] to [%@ on %@]
[CRIT] Assertion failed: _databaseID
[DEBUG] loaded client-state %@
[CRIT] Assertion failed: sself
[DEBUG] 
%llx db pre-flush: flushing client-state %@
[DEBUG] Saved zone state for %@
[DEBUG] Saved app library state for %@
[DEBUG] 
%llx db post flush
[CRIT] disk is full, restarting: %@
[CRIT] UNREACHABLE: Failed to enable recursive triggers - %@
[ERROR] unable to truncate database: %d; %s
[ERROR] can't unlink '%@' %{errno}d
[ERROR] can't reopen db after truncate: %@
[NOTICE] doing an internal fixup from %d to %d
[ERROR] can't internal fixup from version %d to %d: %@
[NOTICE] fixuping database from version %d to %d
[ERROR] can't fixup from version %d to %d: %@
[WARNING] your database comes from a compatible future (db at version %d, current is %d)
[DEBUG] no database migration required, version is current (db at version %d)
[NOTICE] migrating %s database from version %d to %d
[ERROR] can't migrate from version %d to %d: %@
[ERROR] can't set user version to %u: %@
[CRIT] Assertion failed: db_version == schema_upgrades[i].version
[CRIT] Assertion failed: db_version == DB_VERSION_CURRENT
[CRIT] Assertion failed: _serverDB.serialQueue
[CRIT] Assertion failed: _clientDB.serialQueue
[CRIT] Assertion failed: readOnlyDB.serialQueue
[DEBUG] 
%llx dumping database
[DEBUG] dumping container %@
[DEBUG] Encountered an error %@ running stmt %@
[DEBUG] dumping client zone %@
[ERROR] failed unlinking '%s' %{errno}d
[ERROR] failed opening '%s' %{errno}d
[ERROR] failed stating '%s' %{errno}d
[ERROR] failed closing '%s'
[CRIT] Internal users only version %d.%03d has seen an ulterior change and needs to be reset
[CRIT] database is stale, can't be migrated (db at version %d, migration range [%d,%d])
[CRIT] database has a major version from the future: %d (want at most %d)
[DEBUG] performer already registered for %@
[CRIT] UNREACHABLE: implemented by subclass
[DEBUG] 
%llx performing migration for %@
[DEBUG] migration completed
[DEBUG] 
%llx Setting migration state. response: %@, error: %@
[DEBUG] status: %@
[DEBUG] 
%llx getting account migration status for %@
[DEBUG] migration status: %d
[DEBUG] 
%llx Request for CloudKit migration status done. response: %@, error: %@
[DEBUG] migration state: %@
[DEBUG] received a managed restriction changed notification - %@
[DEBUG] jetsaming %@
[ERROR] can't delete account file %{errno}d
[ERROR] can't write account ID: %@
[DEBUG] 
%llx disabling pushes, be sure to listen to activities and the like
[WARNING] setting the migration prefs because account is migrated
[WARNING] setting the migration on the account because account is migrated - and waiting for ACAccountNotification plugin
[WARNING] migration is not accepted, not loading the account for %@
[DEBUG] 
%llx loaded system account ID: %@ (db ID: %@, disk ID: %@)
[DEBUG] 
%llx deleting account on disk
[DEBUG] 
%llx setting disk account %@
[CRIT] UNREACHABLE: disk account ID doesn't match system account ID
[DEBUG] 
%llx Loading current on-disk account: %@
[NOTICE] using account %@
[DEBUG] 
%llx jetsaming clients
[DEBUG] removing '%@'
[ERROR] can't remove account %{errno}d
[CRIT] timed out waiting for %u seconds for account session to close!
[DEBUG] 
%llx destroying current session
[CRIT] Can't acquire coordinated disconnect at {%@}: %@, proceeding anyway
[DEBUG] acquired coordinated disconnect at {%@}
[CRIT] UNREACHABLE: timed out waiting for %u seconds for coordinated disconnect!
[ERROR] Failed to open account session: %@
[ERROR] Your database is from the future, disabling iCloud Drive (%@)
[DEBUG] No space on disk to open the db
[DEBUG] Local session state has beeen resetted, try opening the session for the second time
[CRIT] Assertion failed: session.analyticsReporter != nil
[DEBUG] 
%llx creating account session for %@
[CRIT] Assertion failed: _session == nil
[WARNING] we are already logged in %@
[CRIT] Assertion failed: [BRCAccountHandler dbAccountID] == nil || [[BRCAccountHandler dbAccountID] isEqualToString:accountID]
[DEBUG] 
%llx destroying account for %@
[NOTICE] stop using account %@
[CRIT] Assertion failed: [_currentAccountID isEqualToString:_session.accountID]
[DEBUG] 
%llx creating account for %@
[NOTICE] now using account %@
[ERROR] can't create account session: %@
[WARNING] Asking account status for %@
[WARNING] Triggering migration for %@
[DEBUG] primary account is: %@
[DEBUG] iCloud Drive is disabled for %@
[DEBUG] Account is not migrated to iCloud Drive %@
[ERROR] can't remove account belonging to account %@ %{errno}d
[DEBUG] Account hasn't really changed, do nothing
[DEBUG] Cleaning up session on disk belonging to account %@
[DEBUG] Cleaning up previous session belonging to account %@, to make room for new account %@
[WARNING] we seem to have logged out while migrating account (%s)
[CRIT] UNREACHABLE: the main account (%s) doesn't match the one we have (%s)
[ERROR] can't set the migrated bit on %@: %@
[DEBUG] saved the migration bit
[DEBUG] account property is already set
[DEBUG] migration already completed
[NOTICE] setting migration complete on %@
[DEBUG] saved the bit
[CRIT] Assertion failed: folderType >= BRCSyncedFolderTypeMin && folderType <= BRCSyncedFolderTypeMax
[CRIT] Assertion failed: syncPolicy
[CRIT] Assertion failed: syncPolicy == BRCSyncedFolderPolicyEnabled || syncPolicy == BRCSyncedFolderPolicyDisabled
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK || _st.type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
[CRIT] UNREACHABLE: -asShareableItem called on a non-shareable item
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_ALIAS
[DEBUG] 
%llx learning target %@ for %@
[CRIT] Assertion failed: self.appLibrary != item.appLibrary || item.isSharedToMe
[DEBUG] 
%llx diffing item %@
against %@
[DEBUG] item isn't an alias anymore
[DEBUG] item matches disk
[DEBUG] 
%llx rewriting alias on disk: %@
[DEBUG] Grabbing the bookmark data fails with: %@
Marking the target lost: %@
[WARNING] can't write bookmark %@
[WARNING] can't resolve parent %@ %{errno}d
[WARNING] can't resolve %@ %{errno}d
[DEBUG] 
%llx Updating alias %@ in %@ with new target: %@
[DEBUG] Kept the path of the newest alias for oldest item, updating fileID and mark lost
[DEBUG] clash path doesn't seem to exist anymore, mark the item lost
[DEBUG] 
%llx Deleting alias %@ in %@ because target is dead
[DEBUG] 
%llx Deleting alias %@ in %@ because target moved to this app library
[DEBUG] Failed to defer the activity for analytics
[DEBUG] Reporting analytics metrics
[DEBUG] iCloud Analytics collection has been disabled, unregistering xpc_activity
[ERROR] Failed to continue the xpc activity
[DEBUG] iCloud Analytics collection is disabled, unregistering xpc_activity
[WARNING] Telemetry timed out waiting for the apply scheduler
[ERROR] Failed to finish the app telemetry xpc activity
[ERROR] Failed to defer the app telemetry xpc activity
[DEBUG] Defering app telemetry gather for now
[CRIT] UNREACHABLE: We are already checking telemetry on %@
[ERROR] Failed to finish the app telemetry activity
[CRIT] UNREACHABLE: %@ should be a directory
[CRIT] Assertion failed: [metric.eventName isEqualToString:kind]
[DEBUG] analytics: creating %@ event for fileID %lld
[DEBUG] analytics: creating %@ event
[CRIT] Assertion failed: _telemetryEventCount >= 0
[DEBUG] The server has detected a problem on the client. Resetting all sync telemetry
[DEBUG] updating telemetry token %@ -> %lld
[CRIT] Assertion failed: _currentTelemetryToken.longLongValue == [persistedState telemetryToken]
[DEBUG] Dequeued %lu telemetry events to send with token %lld
[WARNING] Not submitting event which is disabled %u
[DEBUG] Inserting telemetry event %u
[DEBUG] Dropping telemtry events due to queue overflow
[CRIT] Assertion failed: self->_telemetryEventCount == 0
[DEBUG] associated %@ to event metric %@
[CRIT] UNREACHABLE: needs override
[DEBUG] analytics: submitting event %@
[CRIT] UNREACHABLE: Failed to compute the pcs chain status and zone rowid for item row %lld - %@
[CRIT] Assertion failed: _totalZoneCount == 0
[CRIT] UNREACHABLE: No service with code %d
[DEBUG] The share changed while we were checking telemetry on %@ but we already reported an error
[WARNING] Telemetry report at %@ finished with error %@ retry count %llu
[DEBUG] Telemetry report at %@ succeeded
[WARNING] Telemetry report at %@ did not run
[DEBUG] Generating telemetry report at %@
[DEBUG] Telemetry - Server metrics found %@ items under %@
[ERROR] error connecting to telemetry-disk-checker xpc service: %@
[DEBUG] Telemetry - Disk checker found %@ items under %@
sharing.fetch-user-record-id
[CRIT] UNREACHABLE: no record and no error
[CRIT] UNREACHABLE: state is of unexpected class %@
[CRIT] UNREACHABLE: update time is of unexpected class %@
[DEBUG] We don't have a container for %@
[DEBUG] 
%llx starting a fetch-record-changes operation for health zone
[DEBUG] 
%llx got a changed record %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:record.recordID]
[CRIT] Assertion failed: self->_recordsByID[record.recordID] == nil
[DEBUG] ignoring zone details record %@ in operation %@
[WARNING] ignoring record of unexpected type %@ in operation %@
[DEBUG] 
%llx recordID was deleted %@ in operation %@
[CRIT] Assertion failed: ![self->_deletedRecordIds containsObject:recordID]
[CRIT] Assertion failed: self->_recordsByID[recordID] == nil
[DEBUG] 
%llx Received token update %@, requestID %llu
[DEBUG] 
%llx finished sync down of zone-health %@ with requestID %llu changeToken %@
[DEBUG] No zone-health zone %@: %@
[ERROR] Failed syncing down zone-health op %@: %@
[DEBUG] 
%llx sync down of zone-health-check was cancelled?
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: containerID
[CRIT] UNREACHABLE: Stat shouldn't be nil
[CRIT] Assertion failed: creatorRowIDLongLongValue >= 0
[CRIT] Assertion failed: ![self _hasLastEditorRowID]
[CRIT] Assertion failed: lastEditorDeviceRowID && lastEditorDeviceRowID.longLongValue > 0
[CRIT] Assertion failed: !_lastEditorDeviceOrUserRowID || ![self _hasLastEditorDeviceRowID]
[CRIT] Assertion failed: _contentSignature
[DEBUG] Not being greedy because current version size is 0
[DEBUG] Not being greedy because document is bigger %@ than minimum size (%@) to generate a thumbnail
[DEBUG] Being greedy because the document is small %@ and QL can generate a thumbnail for %@
[DEBUG] Not being greedy even though the document is small %@: QL can
t generate a thumbnail for %@
[ERROR] invalid signature in %@
[CRIT] Assertion failed: reply
[CRIT] Assertion failed: item.fileObjectID
[ERROR] failed to signal enumerator for root container: %@
[NOTIF] 
%llx collecting %lu additional folder updates
[NOTIF] 
%llx invalidating pipes watching %@
[NOTIF] 
%llx invalidating NSMDQs watching %@
[NOTIF] 
%llx dispatching to %s
[NOTIF] 
%llx continuing on %s
[CRIT] Assertion failed: path.br_isAbsolutePath
[CRIT] Assertion failed: _session
[CRIT] Assertion failed: fileID != 0ULL
[CRIT] Assertion failed: self.exists
[CRIT] Assertion failed: self.isUnixDir
[CRIT] Assertion failed: self.isInPackage
[DEBUG] closing fd:%d
[CRIT] API MISUSE: -resolveAndKeepOpen must be balanced with -close
[CRIT] Assertion failed: _getOpenRefCount(self) == 0
[CRIT] Assertion failed: [self isResolved]
[CRIT] Assertion failed: self.isResolved
[CRIT] Assertion failed: _type != BRCRelativePathTypeUnknown
[CRIT] Assertion failed: !_basePath || self.basePath.isResolved
[CRIT] Assertion failed: self.isRoot || self.basePath.isResolved
[CRIT] Assertion failed: _absolutePath.br_isAbsolutePath
[CRIT] Assertion failed: !_relativePath.br_isAbsolutePath
[CRIT] Assertion failed: self.isFault
[CRIT] Assertion failed: _fd >= 0
[CRIT] Assertion failed: self.isSymLink
[CRIT] Assertion failed: self.isFile
[CRIT] Assertion failed: _fd < 0
[CRIT] Assertion failed: _basePath
[ERROR] no base path
[DEBUG] can't resolve base path %@ %{errno}d
[DEBUG] can't open base path %@ %{errno}d
[DEBUG] base path %@ is not a directory
[ERROR] relative package root path can not be equal to relative path = %@
[CRIT] UNREACHABLE: Detected unbound package resolution recursion for %@
[DEBUG] new base for '%@' - %@
[DEBUG] can't resolve package root %@ %{errno}d
[DEBUG] can't open package root %@ %{errno}d
[DEBUG] package root %@ is not a directory
[CRIT] Assertion failed: !_relativePath
[CRIT] Assertion failed: !_basePath
[DEBUG] can't open %@' %{errno}d
[CRIT] UNREACHABLE: a root should always be openable
[DEBUG] resolved-path:'%@' outside of requested roots:'%@'
[NOTICE] resolved-path:'%@' outside of base path:'%@'
[ERROR] fgetattrlist(%d) at '%@' failed %{errno}d
[DEBUG] Inappropriate file type %c%c%c%c%c%c%c%c%c%c for %@
[DEBUG] Busy file at '%@' fileID:%llu docID:%u gen:%u bt:%llu
[ERROR] failed to unlink legacy ubiquity %s fault at '%s' %{errno}d
[NOTICE] cleaned up legacy ubiquity %s fault at '%s'
[NOTICE] root-dev:%d != dev:%d %@
[DEBUG] Inappropriate location or an alias at '%s'
[DEBUG] Directory is marked as alias, ignoring '%s'
[WARNING] Can't read xattr at '%s' %{errno}d
[CRIT] Assertion failed: _basePath == nil || _basePath->_fd >= 0
[DEBUG] getattrlistat(%d, %s) failed with %s(%d)
[DEBUG] getattrlist(%s) failed with %s(%d)
[DEBUG] parent %@ is not a directory
[CRIT] Assertion failed: _basePath->_fd >= 0
[DEBUG] openat(%d, '%@') failed %{errno}d
[ERROR] openat(%d, '%@') failed %{errno}d
[DEBUG] open('%@') failed %{errno}d
[ERROR] open('%@') failed %{errno}d
[CRIT] Assertion failed: _fileID
[CRIT] Assertion failed: errno > 0
[DEBUG] openbyid_np(%lld) failed: the file was unlinked
[DEBUG] openbyid_np(%lld) failed: the file still exists, but we don't have access to it
[ERROR] BRCOpenByID(%lld) failed %{errno}d
[ERROR] fcntl(%lld, F_GETPATH) failed %{errno}d
[DEBUG] resolved '%@' to %@
[DEBUG] absolute path is excluded because it is a package %@
[DEBUG] resolved-path:'%@' symlink doesn't resolve %{errno}d
[DEBUG] resolved-path:'%@' is excluded
[WARNING] Waited for %f seconds before acquiring lock on the parent folder to re-check faults %@ docID
[CRIT] UNREACHABLE: Really unexpected flock(%@) error  %{errno}d
[CRIT] UNREACHABLE: Failed to acquire exclusive lock on %@, will assign docID to fault %@ anyway
[ERROR] failed allocating documentID for %@ %{errno}d
[CRIT] Assertion failed: _documentID > 0
[ERROR] Exclude document for which we couldn't allocate a documentID for %@
[DEBUG] package without the bundle bit at %@
[WARNING] failed fixing up bundle bit at %@ - %s
[DEBUG] fixed up bundle bit at %@
[CRIT] Assertion failed: !self.isResolved || self.exists
[CRIT] Assertion failed: _parentFileID > 0
[ERROR] the root is closed!
  root: %@
  self: %@
[DEBUG] openat(%d, '%@') failed, base:%@ %{errno}d
[DEBUG] empty parentPath for abs:%@ rel:%@ base:%@
[DEBUG] open('%@') succeeded, fd:%d
[CRIT] Assertion failed: self.isBRAlias
[WARNING] Failed to resolve xattrs for %@: %@
[CRIT] Assertion failed: value >= 0
[CRIT] UNREACHABLE: mutex error: %s
[CRIT] Assertion failed: _getIndex(self, o) == nil
[CRIT] Assertion failed: _array[index] == o
[CRIT] Assertion failed: !_isOpen
sync/side-car-sync-up
[CRIT] Assertion failed: requestID
[DEBUG] Syncing up side car records with request %llu
[DEBUG] We need to create the side car zone on %@ - %@
[ERROR] Failed syncing up side cars on %@ - %@
[DEBUG] finished side car sync up: %@, op: %@
[CRIT] Assertion failed: clientZone
[DEBUG] Faking sync for side car info delete which isn't known to the server
[DEBUG] Deleting side-car record for %@
[CRIT] Assertion failed: itemID
[DEBUG] Syncing up side-car record for %@
[DEBUG] Faking sync of side-car record for %@
[CRIT] Assertion failed: state
account-waiter
[DEBUG] 
%llx handling account change
[DEBUG] 
%llx waiting for account status
[DEBUG] 
%llx got status %ld
[ERROR] Error when asking CloudKit about the account status: %@
[DEBUG] No account loaded yet, let's wait for the account notification from CloudKit
[DEBUG] Account is restricted let's wait for a notification from CloudKit
[CRIT] UNREACHABLE: unknown account status
[DEBUG] Account is now available
[DEBUG] 
%llx evicting all items under %@
[DEBUG] now wait for evictions to be applied under %@
[DEBUG] 
%llx no more items to evict under %@
[DEBUG] 
%llx %@: scheduling
[DEBUG] cancelled
[CRIT] Assertion failed: jobID
[CRIT] Assertion failed: stamps.state != BRCJobStateInvalid
[DEBUG] %@[%@]: post-poning job
[CRIT] Assertion failed: _session.clientDB.changes <= 1
[DEBUG] %@[%@]: created job with state %s
[DEBUG] %@[%@]: updated job %s->%s
[CRIT] Assertion failed: state >= BRCJobStateSuspendedBase
[DEBUG] %@: retrying %lld suspended jobs matching %@ in %s
[CRIT] Assertion failed: throttle
[CRIT] Assertion failed: !rs.next
[DEBUG] %@[%@]: backing off %.3fs (count: %d)
[DEBUG] %@[%@]: Updated %lld jobs to state %s
[DEBUG] %@[%@]: Deleted %lld jobs
[DEBUG] %@[%@]: resetting backoff for job
[DEBUG] %@: Cleaned up %lld expired jobs
[CRIT] UNREACHABLE: must be implemented in subclass
[DEBUG] Throttle id %@ has work
[CRIT] API MISUSE: should be implemented by subclass
[DEBUG] %@: nothing schedulable, going to sleep %s
[DEBUG] %@: going to sleep for %.3fs
[DEBUG] %@: Finishing batch and allowing other jobs to run
[DEBUG] %@: resuming!
[DEBUG] %@: suspending!
[CRIT] Assertion failed: self.isCancelled
[NOTIF] %@: gathering from %lld to %lld
[NOTIF] matching prefix: %@
[CRIT] Assertion failed: count >= 0
[CRIT] Assertion failed: appLibrary
[NOTIF] 
%llx Looking for item with ranks >= %lld in %@ (%ld kind %@)
[NOTIF] Creating enumertor %p including dead items: %s
[NOTIF] Ignoring zone root item %@
[NOTIF] Ignoring dead update %@
[NOTIF] %@: queued gathered notification %@
[WARNING] Strange... No updates received and phase isn't done %lu vs %ld
[NOTIF] %@: gather phase ends
[ERROR] %@: EINTR: client gather phase was invalidated
[CRIT] Assertion failed: _receiver == nil
[NOTIF] stripped sharing info for %@
[NOTIF] 
%llx %@ got error %@
[NOTIF] Ancestor isn't resolved yet, discarding %@
[NOTIF] Learning path-match for %@ (was %@)
[NOTIF] Learning itemID for our ancestor: %@
[NOTIF] Learning new fileObjectID for %@: %@ (was %@)
[NOTIF] Update is in the trash, discarding %@
[NOTIF] Queueing INSIDE (in the scope) notification: %@
[NOTIF] Queueing INSIDE (fileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (parentObjectID match) notification: %@
[NOTIF] Queueing OUTSIDE (oldParentFileObjectID match) notification: %@
[NOTIF] Queueing INSIDE (watching containers) notification: %@
[NOTIF] Queueing OUTSIDE (watching containers) notification: %@
[NOTIF] Update is "Documents", discarding: %@
[NOTIF] Update is a directory, discarding %@
[NOTIF] Update is a fault, discarding %@
[NOTIF] Queueing OUTSIDE (moved out library scope) notification: %@
[NOTIF] Queueing INSIDE (below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (not below a Documents/ folder) notification: %@
[NOTIF] Queueing INSIDE (below a .Trash/ folder) notification: %@
[CRIT] Assertion failed: _watchKind & WATCH_ITEM
[NOTIF] Queueing INSIDE (itemID match) notification: %@
[NOTIF] Queueing OUTSIDE (reparented) notification: %@
[NOTIF] Queueing OUTSIDE (dead item) notification: %@
[NOTIF] doing the second phase gathering
[NOTIF] Finished second phase gathering
[NOTIF] 
%llx %@: processing updates %@ [rank:%lld]
[NOTIF] dropping all updates
[NOTIF] dropping %ld updates
[NOTIF] 
%llx %@: received progress acknowledgement
[NOTIF] %@: sending %ld notifications:
[NOTIF]   %@
[NOTIF] 
%llx %@: received notification acknowledgement
[NOTIF] %@: client is really backlogged, invalidating
[NOTIF] 
%llx %@: starting watching ubiquitous scope (docs:%d data:%d ext:%d dirs:%d faults:%d trash:%d) for %@
[ERROR] %@: EALREADY: watch already set up to kind %d
[WARNING] %@: client didn't specify Document or Data Scope
[ERROR] %@: unable to find container %@
[ERROR] %@: Unable to resolve scopes
[NOTIF] Finished normal gather phase
[NOTIF] Calling gather reply callback
[ERROR] %@: Invalid watched app library (%@) for lookup: %@
[NOTIF] Finished waiting on gather group
[NOTIF] %@: started watching children of %@ (fsid:%@ id:%@ filename:%@)
[WARNING] Path %@ is not an existing container: %@
[INFO] 
%llx %@ (%@) %s %@
[NOTIF] 
%llx watching '%@'
[WARNING] Failed watching %@ - %@
[INFO] %@: reply(%@)
[INFO] 
%llx %@ (%@) %s 
[NOTIF] %@: watching items prefixed by "%@"
[ERROR] %@: can't watch %@: %@
[ERROR] %@: can't watch app containers: %@
[NOTIF] 
%llx invalidating %@
[DEBUG] 
%llx updating dialog...
[DEBUG] 
%llx sending user reply
[ERROR] can't create user notification: %d
[CRIT] Assertion failed: self->_source == NULL
[WARNING] ignore user notification udate: no KVO observer registered
[ERROR] can't update user notification: %d
[CRIT] Assertion failed: !shareMetadata.share.isFolderShare
[DEBUG] User picked %s response
[ERROR] No completion block for notification %@
[CRIT] Assertion failed: _targetResolved
[CRIT] UNREACHABLE: not in a container
[CRIT] Assertion failed: path.isBRAlias
[ERROR] Not a bookmark at %@
[ERROR] Unable to get bookmark data on bookmark at %@: %@
[ERROR] Invalid signature for bookmark at %@
[CRIT] UNREACHABLE: somebody doesn't understand what bookmarks are for!
[CRIT] UNREACHABLE: not allowing an alias in the same app library as its target
[CRIT] Assertion failed: props[NSURLDocumentIdentifierKey] && [docID isEqualToNumber:props[NSURLDocumentIdentifierKey]]
[ERROR] bookmark is lacking path or document-id: %@
[ERROR] the path isn't within iCloud: %@
[ERROR] the path isn't within a container: %@
[WARNING] no target container %@ for bookmark
[WARNING] no target itemID for %@ in container %@
[WARNING] no target docID for %@ in container %@
[ERROR] the bookmark doesn't resolve: %@
[WARNING] Can't resolve target app library
[CRIT] UNREACHABLE: cannot create bookmark data
[CRIT] Assertion failed: _dataResolved
[DEBUG] wrote %@ at %@
[ERROR] Unable to unlink bookmark at %@ %{errno}d %{errno}d
[DEBUG] Unlinked bookmark at %@
[CRIT] %@
[ERROR] couldn't setup vnode rapid aging %{errno}d
[ERROR] failed loading salt: %@
[CRIT] UNREACHABLE: can't load salt, bad bug ahead
[DEBUG] generating new salt
[ERROR] failed creating salt directory '%@': %@
[ERROR] failed writing salt data to '%@': %@
[ERROR] failed excluding salt data at '%@' from backups: %@
[WARNING] unable to stat volume %@
[DEBUG] device id mismatch %d vs %d
[CRIT] UNREACHABLE: calling %s with empty path
[CRIT] UNREACHABLE: can't open %@
[DEBUG] space for %@ is %llu bytes (hfs compat. dirstat)
[CRIT] UNREACHABLE: can't get size for %@ : %s
[WARNING] Failed to set the xpc state to done for "%@"
[NOTICE] starting bird
[DEBUG] 
%llx Starting up, welcome, bundle:%@, pid:%d, uid:%d, os:%@, version:%@, home:"%@", in sync bubble:%@
[DEBUG] using Cloud Database class: %@
[WARNING] iCloud Drive is not supported on this OS
[ERROR] iCloud Drive is unable to startup because it requires %@ worth of disk space to be functional
[DEBUG] resuming
[DEBUG] 
%llx sending token change notification
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_DEFAULT
[WARNING] No accept operation found for key %@
[NOTICE] Language changed, exiting
[CRIT] Assertion failed: dirPath
[DEBUG] 
%llx handling account session changes from %@
[DEBUG] 
%llx handling account session changes to %@
[CRIT] Assertion failed: self.session != newAccountSession
[DEBUG] sending apps account change notification
[DEBUG] 
%llx received new XPC connection: %@
[WARNING] Denying xpc connection because the daemon is in the sync bubble
[DEBUG] welcome %@!
[DEBUG] 
%llx Client %@ connection was invalidated
[ERROR] error creating connection labeled '%@': %@
[DEBUG] sending server availability: %savailable (%@)
[DEBUG] sending server availability: %x (%@)
[NOTICE] starting exit sequence because of received signal (%s)
[NOTICE] exiting with code %d...
[CRIT] Assertion failed: [matchingQuery isKindOfClass:[BRCServerZone class]]
[CRIT] Assertion failed: serverItem || localItem
[DEBUG] Apply Changes: retrying %lld suspended throttles (missing parent found: %@)
[DEBUG] Apply Changes: retrying %lld suspended throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended rejected throttles (child %@ of %@ killed or reparented)
[DEBUG] Apply Changes: retrying %lld suspended throttles (appLibrary completed migration: %@)
[DEBUG] Apply Changes: retrying suspended rank %lld
[WARNING] Target zone was moved to clouddocs.  Fixing up alias %@ pointing to %@
[ERROR] Failed resolving the bookmark target - %@
[ERROR] failed writing alias bookmark data - %@
[WARNING] Strange, the alias %@ is already local.  Allowing it anyway
[CRIT] Assertion failed: !shouldFixup || !serverZone.isSharedZone || ![serverZone.zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[DEBUG] Apply Changes: repopulating throttles for zone:%@
apply-changes
[CRIT] Assertion failed: zone
[INFO] 
%llx Apply Changes[%@]: attempting to apply %s
  server item: %@
  local item:  %@
[CRIT] Assertion failed: si == nil
[DEBUG] 
%llx Apply Changes[%@]: deleting action without local and server item
[DEBUG] 
%llx Apply Changes[%@]: deleting rejected action with a non-rejected local item
[DEBUG] 
%llx Apply Changes[%@]: deleting useless action %lld vs %lld
[DEBUG] Apply Changes[%@]: Suspending action until the coordination callback
[DEBUG] Signalled faulting-barrier waiters for %@
[DEBUG] Apply Changes: reached maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes[%lld]: Rescheduling because coordination completed
[DEBUG] Apply Changes[%lld]: Skipping rescheduling because throttle was not suspended for coordination
[CRIT] UNREACHABLE: no writer for zone %@
[DEBUG] Apply Changes: below half maximum allowed number of coordinations (%ld)
[DEBUG] Apply Changes: Cleaned up %lld stale throttles
[DEBUG] 
%llx did sync down requestID:%llu, applying server truth on %@
[CRIT] UNREACHABLE: failed to insert into client_unapplied_commands: %@
[DEBUG] Apply Changes [%lld .. %lld]: in %@, %llu ranks inserted
[DEBUG] Apply Changes [] in %@, 0 ranks inserted
[CRIT] Assertion failed: li.isRejected
[WARNING] Rejected item %@ was remotely revived by %@.  Updating as such
[WARNING] Rejected item %@ doesn't have an apply job.  Re-creating the apply job
[WARNING] Item %@ is missing an apply throttle
[DEBUG] Apply Changes: Rescheduled %u throttles missing from the apply table
[CRIT] Assertion failed: !si.isLive || !li.isRejected
[ERROR] Throttle %@ isn't a dictionary
[ERROR] Platforms %@ isn't an array
[DEBUG] throttle dict %@ isn't for our platform %@
[ERROR] Error enumerating %@: %@
[ERROR] Failed to make %@ owned by mobile: %@
[INFO] ~/Library/Application Support/CloudDocs/session does not exist. No need to back up.
[ERROR] Unable to delete existing destination directory at %@: %@
[ERROR] Could not create destination directory %@: %@
[DEBUG] %@
[NOTICE] Calling completion block with URL: %@, error: %@
[ERROR] rootURL is nil, nothing to enumerate.
[ERROR] %@ does not exist, nothing to enumerate.
[ERROR] Could not get the canonical path for the root URL %@. Error: %@
[ERROR] Enumeration error: %@. Error: %@
[ERROR] Failed to fetch resource values for %@. Error: %@
[ERROR] Failed to remove directory %@: %@
[DEBUG] container state now needs flush: %@
[CRIT] UNREACHABLE: no path for an app library
[CRIT] Assertion failed: zoneRowID
[CRIT] Assertion failed: mangledID.isPrivate
[CRIT] API MISUSE: unexpected parameter
[CRIT] Assertion failed: dbRowID
[CRIT] UNREACHABLE: associating nil client zone for %@
[DEBUG] closing app library: %@
[DEBUG] cancelling file coordination requests %@
[DEBUG] First ubiquity client using container, schedule each item for download (client: %@, container: %@).
[CRIT] Assertion failed: rootItem.isDirectory
[DEBUG] %@ forces %@ to be greedy
[DEBUG] %@ no longer forces %@ to be greedy
[DEBUG] Last ubiquity client exited, no longer greedy (container: %@)
[CRIT] Assertion failed: !_activated
[CRIT] Assertion failed: state == BRCAppLibraryStateNotActivated || !(state & BRCAppLibraryStateNotActivated)
[DEBUG] %@ state changed, was %@
[CRIT] Assertion failed: _session.fsReader
[NOTICE] downloading everything in %@ because the app is now installed
[NOTICE] evicting everything in %@ because the app was removed
[INFO] %@ becomes %@
[DEBUG] don't be greedy if app is not installed, even though optimize storage is disabled
[DEBUG] greediness enforced because optimize storage is disabled
[DEBUG] app library greediness enforced by user defaults
[DEBUG] don't be greedy if app is not installed
[DEBUG] greediness enforced because library has clients connected
[CRIT] UNREACHABLE: asking for no scopes?
[CRIT] Assertion failed: docsOrDataScopeInjection || externalScopeInjection
[DEBUG] There's already a pending coordinated I/O for %@, not really scheduling it
[DEBUG] Releasing coordinated I/O slot for r:%@ for %@
[DEBUG] Allocated pending coordinated I/O for %@
[CRIT] Assertion failed: zone.dbRowID
[CRIT] UNREACHABLE: Shared zone root item %@ should not exist in client truth
[DEBUG] marked lost %u children of %@ in %@,  continuation is %@needed
[CRIT] UNREACHABLE: bad sql statement
[WARNING] Not scheduling deep scan on an app library in a resetting zone
[WARNING] Replacing deep scan reason %{public}@ with %{public}@
[ERROR] Container needs deep-scan because %{public}@ - %@
[DEBUG] app library root file id changed from %@ to %@ for %@
[CRIT] Assertion failed: self.isiCloudDesktopAppLibrary
[ERROR] fs-root moved on disk, but this is not the root item %@ is tracking
 tracking: %@, received: %@
[DEBUG] %@: app library fs root was removed
[DEBUG] 
%llx updating %@ from %@
[DEBUG] Done scanning container: %@, fileID:%@ generationID:%@
[CRIT] Assertion failed: oldAppLibrary.state & BRCAppLibraryStateNeedsLost
[DEBUG] Lost directory with dead children found, kick syncUp
[CRIT] Assertion failed: client
[CRIT] Assertion failed: ![_foregroundClients containsObject:client]
[DEBUG] app library %@ became foreground
[CRIT] Assertion failed: [_foregroundClients containsObject:client]
[DEBUG] app library %@ moved to background
[CRIT] UNREACHABLE: %@ has foreground clients but the transfer sync context doesn't contain self
[CRIT] UNREACHABLE: %@ has foreground clients but the metadata sync context doesn't contain self
[CRIT] UNREACHABLE: %@ has foreground clients but target shared zone %@ isn't targeted
[CRIT] UNREACHABLE: target shared zone %@ of %@ should be boosted
[CRIT] UNREACHABLE: %@ has too many target shared server zones %@
[CRIT] UNREACHABLE: %@ has no foreground clients but the transfer sync contains self
[CRIT] UNREACHABLE: %@ has no foreground clients but the metadata sync context contains self
[DEBUG] 
%llx recomputing evicted state for %@ (has fetched initial apps: %d)
[DEBUG] updating evict status: %s
[DEBUG] evict status remains: %s
[DEBUG] Item with rowid %llu is still targeting %@ for %@
[DEBUG] resolving target shared zones for app library %@
[CRIT] Assertion failed: _foregroundClients.count == 1
[DEBUG] resolved target shared zones %@ for app library %@
[CRIT] Assertion failed: _foregroundClients.count == 0
[DEBUG] removing all target app libraries from %@
[DEBUG] attempting to remove target server zone %@ from %@
[DEBUG] not removing target shared zone %@ from %@
[DEBUG] %@ is not a target shared zone of %@ anymore
[DEBUG] not removing target shared zone %@ from %@, because it's still targeting it
[DEBUG] attempting to add target shared server zone %@ to %@
[DEBUG] added target shared client zone %@ to %@
[DEBUG] %@ is already a target shared server zone of %@
[CRIT] Assertion failed: unsaltedBookmarkData
[CRIT] UNREACHABLE: nil dbRowID for %@
[DEBUG] container-metadata needs sync up for %@
[CRIT] Assertion failed: parentPath.appLibrary == self
[DEBUG] There used to be an alias in that container, but we lost it, let's recreate one
[DEBUG] Found an existing alias at %@
[DEBUG] alias successfully renamed at %@
[DEBUG] Refreshing target's app library because it doesn't match the target path
[DEBUG] creating bookmark with target %@ (%@)
[ERROR] unable to create bookmark for %@: %@
[CRIT] Assertion failed: _initialRetryCount <= _finalRetryCount
[CRIT] Assertion failed: _minimumNsecsBetweenRetries <= _maximumNsecsBetweenRetries
[CRIT] Assertion failed: _minimumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _maximumNsecsBetweenRetries > 0
[CRIT] Assertion failed: _nsecsBeforeForgettingCounter >= _maximumNsecsBetweenRetries
[DEBUG] We haven't finished the previous throttle
[DEBUG] Forgetting retry counter
[DEBUG] gave up on %@/%llx (retry-count:%u)
[DEBUG] backing off %@/%llx for %llu milliseconds (retry-count:%u)
[CRIT] API MISUSE: unhandled format specifier
[ERROR] unhandled format specifier %%%c
[DEBUG] Downloader[%@]: %@ (%llu -> %llu)
[WARNING] No appLibraryEntry for Downloader[%@-%s-%@] with transfer_operation %@
[DEBUG] 
%llx Downloader[%@-%s-%@]: download %@
[DEBUG] Got an out of space error %@
[DEBUG] Rescheduling %@ (%@) for retriable error: %@
[ERROR] Got non recoverable error when downloading %@: %@
[DEBUG] The error is for an unknown item, check if the zone hasn't been wiped
[DEBUG] We failed downloading a conflict loser so kicking the apply scheduler in case it was blocked for download
[DEBUG] Apply Changes[%lld]: %@ state is %s
[DEBUG] Downloader: scheduling %lld suspended throttles
[DEBUG] Downloader: not enough space to download anything (%@ < %@)
[DEBUG] Downloader: scheduled %lld pending-disk throttles, which will still leave %@ of free disk space
[DEBUG] Downloader[%@-%s-%@]: Cancelling download
[DEBUG] Downloader[%@-%s-%@]: Cleaning up download stage: %@
[DEBUG] adding alias item %@ to currently transfering %@
[DEBUG] Refreshed active download size %llu -> %llu
[DEBUG] no pre-existing thumbnail at '%@'
[ERROR] failed asking QL to generate a thumbnail at '%@': %@
[WARNING] li %@ disappeared while waiting for thumbnail generation
[ERROR] nil coordinated read url for %@
[DEBUG] removed %lld items in pkg:%@
[ERROR] We should have a stageID for this item: %@
[DEBUG] 
%llx scheduling content download for %@
local: %@
server: %@
[DEBUG] no need to schedule anything, we're already actively downloading that same etag
[DEBUG] no need to schedule anything, we're already attempting to download that same version
[ERROR] can't get permanent storage of %@: %@
[WARNING] Failed to remove additions : %@
[DEBUG] removed additions from %@
[DEBUG] resolved losers needing deletion: {%@}
{%@}
[DEBUG] losers needing deletion: {%@}-{%@}
[DEBUG] 
%llx scheduling download of losers %@ for item %@
[DEBUG] 
%llx download etag: %@
[DEBUG] Not rescheduling download %@ which hit a permanent failure
[CRIT] UNREACHABLE: We thought we finished downloading loser etag %@ for %@ but it wasn't found, so rescheduling
[DEBUG] we're done downloading %@
[DEBUG] rescheduling winner
[DEBUG] suspending apply for download
[DEBUG] not interested in this download
[CRIT] Assertion failed: addedLosers
[CRIT] Assertion failed: removedLosers
[DEBUG] 
%llx discovering conflict losers which are live at %@
[ERROR] invalid addition name for %@
[WARNING] invalid itemID %@ (for %@ in %@)
[WARNING] ETag %@ is no longer a loser
[DEBUG] live losers: %@
[ERROR] can't remove conflict loser for %@: %@
[DEBUG] 
%llx scheduling thumbnail download for %@
local: %@
server: %@
[DEBUG] no thumbnail, cancelling thumbnail download
[DEBUG] existing throttle thumbnail with etag:%@
[DEBUG] cancelling thumbnail throttle with etag:%@
[ERROR] Failed removing thumbnail from %@ - %@
[DEBUG] existing thumbnail for %@_%@ has state %s
[DEBUG] thumbnail for %@_%@ associated, notifying file coordinator
[ERROR] Failed to save thumbnail from %@: %@
[DEBUG] thumbnail for %@_%@ still pending download
[DEBUG] thumbnail for %@_%@ has state %s
[DEBUG] Rescheduled %lld in-flight transfers because we have restarted
[DEBUG] Kicking downloads for %@
[CRIT] UNREACHABLE: Downloader[%@]: failed to find app library with id %@, dropping the download %@
[DEBUG] Downloader[%@]: job has been put back in queue %@
[NOTICE] downloading %ld thumbnails in %@
[DEBUG] Downloader[%@]: not enough available disk space (%llu available, %llu needed, %llu minimum)
[DEBUG] Downloader[%lld-%s-%@]: enough disk space to download (%llu available, %llu needed, %llu minimum)
[CRIT] UNREACHABLE: item download %@ etag changed from %@
[WARNING] Completed unit count is greater than version size; ignoring value
[DEBUG] Re-use progress %@ for %@
[NOTICE] downloading %ld documents in %@
[DEBUG] Downloader[%lld-%s-%@]: postpone because loser is more recent than live item
[ERROR] backing off: can't resolve storage for %@: %@
[NOTICE] downloading %ld previous documents versions in %@
[DEBUG] Downloader: Recovered from %u missing download jobs
[CRIT] Assertion failed: _indentation > 0
[CRIT] UNREACHABLE: unknown color
[CRIT] UNREACHABLE: only share acceptation fault can be deleted; %@
[DEBUG] 
%llx scheduling reset %s of %@
[DEBUG] 
%llx reset %s of %@
[DEBUG] zone is already resetting (zone:%@,appLibrary:%@) but adding (%@) for the next reset
[DEBUG] flushing reset state (%@) for container %@
[DEBUG] waiting for %u cancelled operations to finish
[WARNING] giving up on resetting %@
[DEBUG] 
%llx waiting %.3f secs to reset %@
[CRIT] Assertion failed: !self->_resetTimer
[DEBUG] 
%llx continuing reset
[NOTICE] resetting %@: %s
[CRIT] UNREACHABLE: not implemented
[DEBUG] scheduling unlink of %@
[CRIT] UNREACHABLE: live doc with no fileid: %@
[DEBUG] deleted %lu aliases for reschedule for container reset (batch size %llu)
[WARNING] failed to unlink dev:%d fileID:%llu: %s
[CRIT] Assertion failed: self->_resetTimer == nil
[CRIT] Assertion failed: self.isSharedZone
[DEBUG] deleting from server truth for %@
[DEBUG] deleting from client truth for %@
[DEBUG] Keeping client items during reset%s
[WARNING] Found a top level item that still needs to delete its alias %@.  Inserting a tombstone
[ERROR] failed pruning client_pkg_items: %@
[ERROR] failed pruning client_items: %@
[ERROR] failed pruning client_document_access: %@
[DEBUG] requesting coordinated deletion at '%@'
[WARNING] Ignoring delete of app library with no URL %@
[DEBUG] 
%llx requesting coordinated deletions
[DEBUG] 
%llx acquired coordinated disconnects
[ERROR] Failed acquiring coordinated deletions - %@
[DEBUG] disconnecting %@ on disk
[DEBUG] 
%llx disconnected NSMDQ listeners for %@
[DEBUG] cancelling sync up operation %@
[DEBUG] cancelling sync down operation %@
[DEBUG] 
%llx finishing %@ of %@
[DEBUG] finished %@ of %@ but we still need to delete data
[DEBUG] finished %@ of %@
[CRIT] UNREACHABLE: can't czm move clouddocs zone
[CRIT] UNREACHABLE: Can't CZM the clouddocs zone
[ERROR] Unable to create directory "%@": %@
[ERROR] Unable to set mtime & hidden on "%@": %@
[DEBUG] 
%llx migrating legacy ubiquity root
[ERROR] can't open root '%@' %{errno}d
[NOTICE] deleting %@ because it's owned by fpfs
[ERROR] can't lstat '%@' %{errno}d
[NOTICE] found our root at '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] We own both the root and had an old one renamed away
We have purged the old one, and will now reset
[NOTICE] migrating root from accountString %@ to %@
[NOTICE] tagging root with accountString %@
[DEBUG] 
%llx deleting root folder
[ERROR] failed renaming root back from '%@' to '%@' %{errno}d
[NOTICE] moved '%@' back to '%@'
[DEBUG] root has a .ubd folder: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] root has accountString %@
[DEBUG] 
%llx deleting ubd's support files
[ERROR] can't open (%d, '%@') %{errno}d
[ERROR] can't fstat (%d, '%@') %{errno}d
[ERROR] not a directory at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] mkdirat(%d, '%@') %{errno}d
[ERROR] can't open (%d, '%@') after mkdir %{errno}d
[ERROR] can't fstat (%d, '%@') after mkdir %{errno}d
[ERROR] not a directory at (%d, '%@') after mkdir deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unexpected uid != %u at (%d, '%@')deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unexpected permissions at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed chmod at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] %s dir at (%d, '%@') deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] UNREACHABLE: unknown item type
[CRIT] Assertion failed: _itemScope != BRC_ITEM_SCOPE_UNKNOWN || _state == BRC_ITEM_STATE_RESERVED || _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: [s isKindOfClass:[NSMutableString class]]
[CRIT] UNREACHABLE: nobody should scan an item from a fault
[CRIT] Assertion failed: !_tmpBouncedNo || ![self.logicalName isEqualToString:name]
[CRIT] UNREACHABLE: got a fault name
[DEBUG] Not overriding name equal to bounced name %@
[CRIT] UNREACHABLE: can't move aside a root item!
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: _type != BRC_ITEM_TYPE_ALIAS
[CRIT] Assertion failed: bounceNumber >= 2
[DEBUG] dropping tags
[ERROR] failed to fetch tags: %@
[DEBUG] read tags: [%@]
[WARNING] Inaccessible folder %@
[CRIT] Assertion failed: path.isDocument
[WARNING] No logical name for %@
[WARNING] Updating filename during CZM processing to %@
[CRIT] Assertion failed: _documentID.unsignedLongLongValue == path.documentID
[CRIT] Assertion failed: BRCItemTypeIsFault(_type)
[DEBUG] Fault was renamed from %@ to %@
[CRIT] Assertion failed: path.isDocument || path.isFinderAlias
[CRIT] UNREACHABLE: We think we are no longer a fault, but we have the same fileID for
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_FINDER_BOOKMARK_FAULT
[DEBUG] %@ was a fault, is now a finder bookmark
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_DOC_FAULT
[DEBUG] %@ was a fault, is now a document
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE
[CRIT] Assertion failed: _type == BRC_ITEM_TYPE_DIRECTORY || _type == BRC_ITEM_TYPE_FS_ROOT
[CRIT] Assertion failed: _state == BRC_ITEM_STATE_LOST
[CRIT] UNREACHABLE: Unexpected state %@ for item %@
[CRIT] Assertion failed: lostStamp
[CRIT] UNREACHABLE: unknown type
[CRIT] Assertion failed: _stagedFileID
[CRIT] Assertion failed: _stagedGenerationID
[CRIT] Assertion failed: (_state == BRC_ITEM_STATE_RESERVED && !_fileID && !_generationID) || ((_state == BRC_ITEM_STATE_LIVE || _state == BRC_ITEM_STATE_LOST || _state == BRC_ITEM_STATE_LOST_ZOMBIE) && _fileID && _generationID)
[CRIT] Assertion failed: _type != BRC_ITEM_TYPE_DIRECTORY && _type != BRC_ITEM_TYPE_FS_ROOT
[CRIT] Assertion failed: [_physicalName br_isSideFaultName]
[CRIT] Assertion failed: ![_physicalName br_isSideFaultName]
[CRIT] UNREACHABLE: -asBRAlias called on a non alias
[CRIT] UNREACHABLE: -asDirectory called on a non directory
[CRIT] UNREACHABLE: -asDocument called on a non document
[CRIT] UNREACHABLE: -asShareableItem called on a non shareable item
[CRIT] UNREACHABLE: -asFSRoot called on a non root
[CRIT] UNREACHABLE: -asSymlink called on a non symlink
[CRIT] UNREACHABLE: -asFinderBookmark called on a non symlink
[CRIT] UNREACHABLE: -asShareAcceptationFault called on a non fault
[CRIT] UNREACHABLE: asked to refresh the app library of a root item
[CRIT] UNREACHABLE: hierarchy too deep to compute the app library root of %@
[CRIT] Assertion failed: _appLibrary
[CRIT] UNREACHABLE: Asked to get the top-level item of a non shared top level item: %@
[DEBUG] Needs rename because local name %@ differs from real name %@
[CRIT] Assertion failed: parentItem->_minimumSupportedOSRowID
[CRIT] Assertion failed: !_minimumSupportedOSRowID
[DEBUG] %@: inheriting %@ minimum supported OS
[DEBUG] %@ needs %@ to sync-up
[CRIT] UNREACHABLE: can't add the OS NAME
[CRIT] UNREACHABLE: creating an item from a non supported path 0x%x
[DEBUG] Found share alias pointing to %@
[CRIT] UNREACHABLE: Can't find client zone for %@
[CRIT] Not good... We have 2 of the same item on disk.  Duplicating locally
[ERROR] Unable to pursue update from FS due to error (%@).
[CRIT] UNREACHABLE: Local items must be initialized with initFromPQLResultSet:container:error:
[CRIT] Assertion failed: self.isReserved
[CRIT] UNREACHABLE: Asked for side car info on an item that doesn't have side cars
[CRIT] Assertion failed: !self.itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: item without parentID
[CRIT] UNREACHABLE: orphan detected %@ under parent %@ in %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@ type %@
[CRIT] UNREACHABLE: Can't ask the parent item of a FS root
[DEBUG] Using parent %@ for %@ because it's in the CZM fault list
[CRIT] UNREACHABLE: item without parentID under parent %@
[CRIT] UNREACHABLE: item parented to a document: %@ parented to %@
[DEBUG] remove documents folder
[DEBUG] 
%llx creating sync-up job
[DEBUG] we have structural diffs to send
[DEBUG] we don't have a corresponding alias item, but we have changes that requires alias creation
[DEBUG] we don't have a corresponding alias item, and the diffs do not require alias creation, dropping the diffs
[WARNING] We have a shared item inside another shared zone. Not creating sync up job
[DEBUG] dropping structural diffs because we don't have alias sync masks in the private zone
[DEBUG] we have diffs to send
[DEBUG] Detected sync up state change
[DEBUG] Finishing sync up for %@ in %@
[CRIT] Assertion failed: syncUpDiffs == 0
[DEBUG] Not finishing sync up because item is in-flight in %@
[DEBUG] Rescheduling upload for %@
[CRIT] UNREACHABLE: Didn't detect the local sync up state change for %@
[CRIT] Assertion failed: self.isReserved || _appLibrary
[CRIT] UNREACHABLE: Circular parenting chain
[ERROR] Encountered circular parenting chain
[DEBUG] Queueing notification %@
[CRIT] Assertion failed: self.asDocument.desiredVersion
[DEBUG] 
%llx Saving item %@
[DEBUG] Item is already force-deleted, skipping save
[CRIT] UNREACHABLE: if we have a bounced logical name we should always have a physical name for %@
[DEBUG] Force deletion has been asked, comply
[DEBUG] Deleting tombstone because it's synced up
[DEBUG] Deleting tombstone because it's no known to server
[DEBUG] Telling new app library about lost state
[DEBUG] item with a minimum supported OS just changed, checking if we need to reattempt upload
[DEBUG] item went out of lost state
[DEBUG] this item changed significantly
[DEBUG] Forcing sync up of side car zone when item changed path extension
[DEBUG] We received our first shared to me child item, schedulding side car sync
[DEBUG] %s. changedFields:%@ sendNotif:%s serverUpdate:%s
[DEBUG] not dropping already reserved/dead/almost dead item from the working set %@
[CRIT] UNREACHABLE: there should be a fileObjectID for %@
[ERROR] failed to save item %@ to DB: %@
[CRIT] UNREACHABLE: saving items should really always work: %@
[DEBUG] learned itemID %@ for %@
[ERROR] unable to load the xattrs: %@
[CRIT] Assertion failed: st
[DEBUG] structural xattr signature: %@
[CRIT] Assertion failed: cv
[DEBUG] content xattr signature: %@
[CRIT] UNREACHABLE: You can't cross move %@ to %@
[DEBUG] learning new sharing options %@ for %@
[CRIT] Assertion failed: (_sharingOptions & BRCSharingItemHasShareID) == 0
[DEBUG] Item changed read-onlyness.  Updaing the path with the new mode
[ERROR] Failed to chmod the file - %s
[WARNING] Deleting shared to me top level item in the trash
[ERROR] Failed to load xattrs from disk but continuing anyway (%@).
[DEBUG] updated item from FS: %@
diffs:(%@)
[CRIT] UNREACHABLE: Preventing parent zone change on non top-level item
[CRIT] UNREACHABLE: Found a fault that was renamed to a file
[ERROR] Unable to refresh xattrs from FS due to error (%@).
[WARNING] Mtime changed when trying to trash an item. Forcing sync up of parentID for %@
[DEBUG] updated item location: %@
diffs:(%@)
[CRIT] Assertion failed: !scanPackage || !readOnlyDB
[DEBUG] Item is marked needs-reading, so it must have changed
[DEBUG] unknown fileID/generationID on %@
[DEBUG] path not on disk at %@
[DEBUG] fileID (%llu) doesn't match (%llu)
[DEBUG] genID (%@) doesn't match (%@)
[DEBUG] xatts signatures don't match between %@ and %@
[CRIT] Assertion failed: _syncUpState == BRC_SUS_REJECTED
[DEBUG] Forcing sync up of shared item in the trash %@
[DEBUG] Marking %@ as edited since shared because we are syncing up an edit
[CRIT] UNREACHABLE: we should always have a corresponding server item for already sync-ed up items - %@
[DEBUG] Creating apply job because we have diffs with the server item but have no need to sync them. diffs:(%@)
[DEBUG] Learning structural ETag, because item has no real structural change
[DEBUG] Learning content ETag, because item has no real content change
[WARNING] Not forcing sync up of share-to-me top level item %@
[WARNING] Not forcing sync up of share-to-me child item with a dead root share %@
[WARNING] Rejected item %@ has meaningful local diffs.  Forcing re-sync of all fields
[CRIT] Assertion failed: self.isReadAndUploaded || self.isKnownByServerOrInFlight
[DEBUG] Rejected item %@ has meaningful local diffs.  Forcing sync on all
[DEBUG] we are still syncing %@
[DEBUG] we still have diffs to send: %@
[CRIT] Assertion failed: _syncUpState != BRC_SUS_IDLE
[WARNING] Unknown item must need an itemID change
[DEBUG] item marked lost: %@
backoff mode:%d diffs:(%@)
[WARNING] Can't reserve an fsroot %@
[DEBUG] reserved %@
[CRIT] Assertion failed: self.isDead && self.isDeadOrMissingInServerTruth
[CRIT] Assertion failed: _st.state == BRC_ITEM_STATE_TOMBSTONE || _st.state == BRC_ITEM_STATE_LOST || _st.state == BRC_ITEM_STATE_LOST_ZOMBIE
[DEBUG] Shared to me child item was removed so bumping lost throttle on its parent
[DEBUG] 
%llx marking renamed from server item
  server: %@
  relpath: %@
  parentID: %@
[CRIT] Assertion failed: _st.stagedFileID
[DEBUG] Learning parent sharing options because there is no shareID on this item
[DEBUG] updating st-etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem
[CRIT] Assertion failed: ckInfo
[DEBUG] Also updating side car ckinfo:%@
[CRIT] UNREACHABLE: can't mark live from stage
[CRIT] Assertion failed: bounceNumber && serverLogicalName
[CRIT] UNREACHABLE: invalid sync up state
[DEBUG] 
%llx request to evict client item %@:%@ with options %@
[WARNING] ignoring eviction request for %@ because item is dead
[WARNING] ignoring eviction request for %@ because app library is used by a ubiquity client
[DEBUG] 
%llx request to download client item %@:%@ with options %@
[CRIT] Assertion failed: (options & BRCDownloadDiscretionary) == 0 || (options & BRCDownloadUserInitiated) == 0
[WARNING] ignoring download request for %@ because item is dead
[ERROR] item %@ is missing a doc id
[CRIT] Assertion failed: visible != nil
[CRIT] Assertion failed: locBlobOut == NULL
[DEBUG] added xattr %s (%lld bytes)
[WARNING] Ignoring xattr which is too large %s
[WARNING] skipping xattr %s (size:%zd) because we don't have enough space anymore
[DEBUG] serialized xattr %s (blob size:%ld)
[WARNING] removing xattr %s failed %{errno}d
[DEBUG] removed xattr %s
[DEBUG] Sync: no global budget anymore: %@
[WARNING] Failed to defer the state
[WARNING] Failed to set the xpc state to done
[DEBUG] 
%llx closing %@
[DEBUG] 
%llx shutting down periodic metadata sync
[DEBUG] waiting for %@ to finish
[DEBUG] 
%llx loading containers
[DEBUG] 
%llx Considering containers needing forced sync down
[ERROR] periodic sync failed %@
[DEBUG] Sync: resuming sync
[DEBUG] 
%llx just synced down the default container
[DEBUG] marking container-metadata needs-sync-down
[DEBUG] scheduling sync for sharedb in %llus
[DEBUG] scheduling sync for zone-health
[DEBUG] scheduling sync for side-car
[DEBUG] scheduling sync for zone-pcs
[DEBUG] marking side-car needs-sync-up
[DEBUG] marking zone-health needs-sync-up
[DEBUG] marking container-metadata needs-sync-up
[DEBUG] 
%llx scheduling container-metadata sync
[DEBUG] already syncing container-metadata
[DEBUG] done syncing container-metadata
[DEBUG] 
%llx resetting container-metadata: %s
[DEBUG] 
%llx scheduling shared-db sync
[DEBUG] already syncing shared-db
[CRIT] UNREACHABLE: we shouldn't be asked to sync up the shared DB
[DEBUG] done syncing shared-db
[DEBUG] Finished sharedb sync down with more coming: %s, error %@
[DEBUG] 
%llx scheduling zone-health sync
[DEBUG] already syncing zone-health
[DEBUG] done syncing zone-health
[WARNING] Resetting zone health
[DEBUG] 
%llx scheduling side-car sync
[DEBUG] already syncing side-car
[DEBUG] done syncing side-car
[WARNING] Resetting side car zone
[DEBUG] Updated zone health sync token:%@ requestID:%lld
[DEBUG] Completed zone health sync requestID:%lld error:%@
[DEBUG] Updated side car sync token:%@ requestID:%lld
[DEBUG] 
%llx starting cross zone move migration PCS prep
[CRIT] Assertion failed: _migrateZonePCSOperation == nil
[WARNING] Container became foreground that we didn't think was installed, forcing an apps list refresh
[DEBUG] scheduling push topics registration
[DEBUG] 
%llx updating push topics
[CRIT] Assertion failed: ckContainer
[NOTICE] Setting push environment to %@
[ERROR] Unable to get a push environment from cloudd, default to %@ : %@
[CRIT] Assertion failed: _pushConnection
[DEBUG] Not registering for pushes on container %@ because sync is disabled due to no corresponding app being installed
[DEBUG] foreground topics: %@
[DEBUG] received %@ push token %@ for %@:%@
[DEBUG] received public push token %@
[ERROR] unable to parse push for topic:'%@' payload:%@
[DEBUG] 
%llx received a push in the %@ database for topic:'%@' payload:%@ token:%@
[NOTICE] received a push for the container-metadata zone
[NOTICE] received a push for the zone-health zone
[NOTICE] received a push for the side-car zone
[NOTICE] received a push for client zone %@
[NOTICE] received a push for app library %@ -> zone %@
[NOTICE] receiving a push for an unknown ID %@ -> com.apple.CloudDocs
[NOTICE] receiving a push for an unknown ID shared zone %@, creating the zone
[DEBUG] 
%llx scheduling sync down for client zone %@ because of a push
[WARNING] no zone found, dropping the push
[DEBUG] Also scheduling a sync down on the private zone %@
[WARNING] Can't open UIKit : %s
[CRIT] UNREACHABLE: invalid push topic '%s' (expected prefix '%s')
[CRIT] UNREACHABLE: invalid push payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneIdentifier at payload[%@] %@
[CRIT] UNREACHABLE: invalid push DatabaseScope at payload[%@] %@
[CRIT] UNREACHABLE: invalid push ZoneOwnerID at payload[%@] %@
sharing/iWork-publishing-fetch
[CRIT] UNREACHABLE: No error and invalid number of records %lu
[CRIT] UNREACHABLE: can't unarchive CKRecord: %@
[DEBUG] we're a document missing a content signature
[DEBUG] we're a document missing a thumbnail signature
[DEBUG] we're a document with an xattr change
[DEBUG] we're a document with an uploaded asset change
[DEBUG] we're a document with an upload error change
[CRIT] Assertion failed: path.isPackageRoot
[CRIT] Assertion failed: self.isFinderBookmark || BRCItemTypeIsDocument(_st.type)
[DEBUG] don't be greedy because the app library is not greedy, even though optimize storage is disabled
[DEBUG] greediness enforced because item is part of Wallet's container
[DEBUG] greediness enforced because document UTI is not evictable
[DEBUG] don't be greedy because document is too old (mtime: %lld; max age: %lld days)
[CRIT] Assertion failed: item.isDocument
[CRIT] UNREACHABLE: document without a version:
    %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
      saved the structure record but not the contents record,
    - or the server forgot to send us a contents record.
[CRIT] UNREACHABLE: %@ isn't a dictionary!
[CRIT] Assertion failed: !info || info.isDocument
[DEBUG] Clearing signatures: %@
[ERROR] name is nil
[ERROR] Unable to stage fault: %@
[CRIT] Assertion failed: options
[DEBUG] 
%llx requesting to stage %@
  server: %@
   local: %@
[DEBUG] downloading the content because the latest version is small
[ERROR] No version to stage for %@
[CRIT] UNREACHABLE: No version on server item
[CRIT] Assertion failed: options & BRCDesiredVersionWantsThumbnail
[DEBUG] Version to make live has only metadata changes with current version: %@
[WARNING] Force apply because we need to update the permissions
[DEBUG] Updating filename from server item because it matches the bounced name
[DEBUG] Proceeding with apply changes for metadata only update
diff w/ current: %@ / %@
diff w/ server-item: %@
needs permission for sharing update: %s
needs thumbnail: %s
[DEBUG] Version to make live has only metadata changes with previous one to make live: %@
[DEBUG] Proceeding with apply changes for staged version to make live
[DEBUG] Proceeding with apply changes since reserved items don't need to flush
[DEBUG] Learn sharing and owner from server record for diffs: %@
[CRIT] Assertion failed: state != BRCJobStateSuspendApplyForDownload || (options & BRCDesiredVersionWantsContent)
[DEBUG] Apply Changes[%lld]: state:%s options:%@ (thumbnail:%s losers:%s)
[DEBUG] clearing desired version
[DEBUG] updating ct-etag:%@ from server item: %@
[CRIT] Assertion failed: serverItem.isDocument
[CRIT] Assertion failed: self.isDocument
[CRIT] Assertion failed: serverItem.latestVersion
[WARNING] We think this is a meta only update but it isn't (%llu)!
 latest-version: %@
 current-verions: %@
[DEBUG] Marking %@ as edited since shared because the item differs in edit mask
[DEBUG] 
%llx leaning itemID %@ for %@
[DEBUG] Marking %@ as edited since shared because we're learning the item id of an item that is
[DEBUG] %@ is not a fault anymore, clearing the version
[DEBUG] item isn't a document anymore anymore
[DEBUG] size changed from %llu to %llu at %@
[DEBUG] mtime changed from %llu to %llu
[DEBUG] generationID (%@) doesn't match (%@)
[CRIT] Assertion failed: _st.documentID
[DEBUG] forcing iwork conflict etag on %@ to be %@
[DEBUG] removing conflict loser with etag %@
[DEBUG] there is no conflict loser with etag %@
[CRIT] UNREACHABLE: we're making a file live without a version
[DEBUG] Marking %@ as edited since shared because the desired version differs in edit mask
[CRIT] Assertion failed: self.isFault == _desiredVersion.isFault
[CRIT] Assertion failed: self.isOnDisk
[DEBUG] 
%llx marking needs-read: %@
[DEBUG] 
%llx marking force upload: %@
[CRIT] UNREACHABLE: trying to force upload of a fault
[DEBUG] 
%llx marking force needs-syncup: %@
[DEBUG] 
%llx marking uploaded %@
[CRIT] API MISUSE: state isn't needs-upload
[CRIT] Assertion failed: record
[CRIT] UNREACHABLE: no version on uploaded document %@
[CRIT] UNREACHABLE: CK disagrees on the item size: %lld != %lld
[DEBUG] marking uploaded %@, signature:%@
[CRIT] Assertion failed: (fileAsset && !pkgSignature) || (!fileAsset && pkgSignature)
[CRIT] Assertion failed: signature
[CRIT] Assertion failed: _currentVersion
[CRIT] Assertion failed: _currentVersion.contentSignature.brc_signatureIsPendingPlaceHolder
[CRIT] Assertion failed: _currentVersion.thumbnailSignature.brc_signatureIsPendingPlaceHolder
[CRIT] Assertion failed: _currentVersion.uploadedAssets == nil
[DEBUG] item is now uploaded: %@
[WARNING] Rejected fault still needs delete because we can't upload it %@
[CRIT] UNREACHABLE: Something asked to upload/sync-up an item without a fileID
[CRIT] Assertion failed: self.needsUpload
[DEBUG] 
%llx reading live conflict losers from %@
[DEBUG] 
%llx updating upload jobs
[CRIT] Assertion failed: !self.isDead && !self.isFault
[CRIT] Assertion failed: db.isBatchSuspended
[DEBUG] updating recursive properties:
 fault:    {needs:%lld done:%lld}
 quota:    %lld
 upload:   {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 download: {needs:(count:%lld size:%lld) done:(count:%lld size:%lld)}
 unstage:  {needs:%lld done:%lld}
 sync-up:  {needs:%lld done:%lld}
[CRIT] UNREACHABLE: can't update recursive properties: %@
[CRIT] Assertion failed: _orig.st.documentID
[DEBUG] Apply Changes[%lld]: Rescheduling reverse-alias in %@
[DEBUG] 
%llx evicting client item %@
in %@
[DEBUG] nothing to do: already a fault
[DEBUG] nothing to do: eviction is already scheduled
[DEBUG] items not on disk are not evictable!
[DEBUG] %@ isn't evictable because has ubiquity clients connected
[CRIT] UNREACHABLE: item %@ have an empty file id!
[DEBUG] not evictable because it's locked
[DEBUG] not evicted because the item has a file presenter
[DEBUG] evicting server item %@
in %@
[DEBUG] nothing to do because this document is already live and has no desired version
[DEBUG] nothing to do because download is already scheduled and there is no error
[DEBUG] clearing download error %@ since a download was explicitely requested
[DEBUG] 
%llx Got coordinated %@
[ERROR] Coordinated %@ request at '%@' canceled after %0.06f seconds
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds: %@
[ERROR] Coordinated %@ request failed at '%@' in %0.06f seconds
[DEBUG] Obtained coordinated %@ %@ '%@%@%@' in %0.06f seconds
[DEBUG] Releasing coordinated %@ %@ '%@%@%@' after %0.06f seconds
[DEBUG] Canceling coordinated %@ because task tracker is cancelled
coord-read
[DEBUG] 
%llx Requesting coordinated read at '%@'
coord-delete
[DEBUG] 
%llx Requesting coordinated delete at '%@'
coord-write
[DEBUG] 
%llx Requesting coordinated write at '%@'
coord-rename
[DEBUG] 
%llx Requesting rename from '%@' to '%@'
[DEBUG] hinting file coordinator of a change
    at '%@'
[DEBUG] hinting file coordinator of a reconnect
    at '%@'
[DEBUG] hinting file coordinator of delete
    at '%@'
[DEBUG] hinting file coordinator of a bounce
    from '%@'
      to '%@'
[DEBUG] hinting file coordinator of a move%s
    from '%@'
      to '%@'
[DEBUG] Fixing up case of %@ to %@
[WARNING] Serial queue for session %@ is nil
[WARNING] no data in record %@
sync-down/container-metadata
[DEBUG] 
%llx starting fetch container-metadata changes operation %@
[DEBUG] 
%llx got container-metadata changes for %@ keys:%@ changeTag:%@ modified:%@
[DEBUG] received container-metadata properties plist %@ for %@
[ERROR] failed parsing container-metadata plist for container %@: %@
[DEBUG] containerID %@ had no properties plist
[DEBUG] we'll download icon %@ for container %@
[DEBUG] updating container-metadata %@ at etag:%@ (no asset downloaded)
[DEBUG] 
%llx container-metadata receieved server change token %@, caught-up:%s client change token %@ error:%@
[DEBUG] 
%llx finished operation
[DEBUG] 
%llx adding sub-operation to fetch asset contents: %@ for records: %@
[DEBUG] 
%llx per record callback: %@ - %@
[DEBUG] got asset contents for %@
[DEBUG] updating container metadata %@ at etag:%@ (after asset download)
[ERROR] unknown container %@
[DEBUG] 
%llx finished %@
[NOTICE] fetched %lu containers metadata from the cloud - %@
[DEBUG] Sync up of app library container metdata succeeded for %@
[WARNING] Sync up of app library container metdata failed for %@ because requestIDs differ %lld vs %lld
[DEBUG] remembering container-metadata server change token %@ requestID %llu
[DEBUG] 
%llx Sync: syncing down container metadata
upload
[ERROR] No per upload completion block for %@, error %@
[DEBUG] Publishing upload progress for %@
[DEBUG] ignoring zone not found error for %@ - we'll create at the end of the operation
[CRIT] Assertion failed: modifyError
[DEBUG] zone was recreated, reuploading records
[CRIT] UNREACHABLE: This is not a private zone
[CRIT] UNREACHABLE: This is not a shared zone
[ERROR] Reading asset %@ yields a different signature: %@
[ERROR] can't save %@: missing ownerKey for ownerName "%@"
[CRIT] UNREACHABLE: got a SQL Error: %@
[WARNING] Bounced itemID %@ from "%@" to "%@" because it clashes with %@
[DEBUG] Not bouncing %@ to %@ because that's not a unique filename
[ERROR] PCS chained directory doesn't have chain PCS! %@
[CRIT] Assertion failed: _db.changes == 1
[WARNING] changing filename to "%@" because "%@" is unrepresentable (item ID: %@, last editor: %@)
[ERROR] changing filename to "%@" because "%@" is %s name
[CRIT] Assertion failed: !(st.logicalName.br_isSideFaultName || [st.logicalName br_isExcludedWithMaximumDepth:1])
[CRIT] UNREACHABLE: can't deserialize filename: %@ of %@
[ERROR] Failed to update record (%@): %@
[ERROR] failed saving document %@: %@
[CRIT] UNREACHABLE: document without a structure:
    i:%@ %@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the structure record,
    - or the server forgot to send us a structure record.
[DEBUG] saving consistent structure record (%@) to db %@
[ERROR] can't deserialize %@: %@
[DEBUG] saving consistent document record (%@) to db %@
[DEBUG] Marking %@ as edited since shared because the modifier name is different
[CRIT] UNREACHABLE: can't deserialize extension: %@ of %@
[DEBUG] Adding %@ to the list of force package extensions (according to CKRecord)
[DEBUG] saving consistent symlink structure record (%@) to db %@
[ERROR] failed saving symlink %@: %@
[DEBUG] saving consistent finder bookmark structure record (%@) to db %@
[DEBUG] saving consistent alias structure record (%@) to db %@
[ERROR] failed saving alias %@: %@
[DEBUG] Requesting a new item rank for target %@ of %@
[DEBUG] saving consistent share record to db %@
[CRIT] Assertion failed: share.currentUserParticipant.type != CKShareParticipantTypeOwner
[CRIT] Assertion failed: share.currentUserParticipant.type == CKShareParticipantTypeOwner
[WARNING] ignoring unknown itemID on share
[ERROR] share without root record:
    i:%@
   this typically indicates either of two problems:
    - either we failed processing the last sync down and we
       failed inserting the shared record,
    - or the server forgot to send it to us.
[CRIT] UNREACHABLE: structure record which isn't a directory or document
[WARNING] Consistent state but unknown record type (recordType: %@).
[ERROR] failed saving tombstone share %@: %@
[WARNING] deleted shareID %@ was for already dead item
[DEBUG] marked shareID dead %@
[CRIT] UNREACHABLE: Couldn't decode itemID from recordID %@
[ERROR] failed saving tombstone %@: %@
[DEBUG] Not inserting tombstone entry for %@ because we don't have a server item already.  Let's go through rejected code path for perf.
[DEBUG] saving consistent record delete to db %@
[CRIT] UNREACHABLE: unknown item type %d
[CRIT] Server sent us an item %@ which has non-root share options but isn't parented to a share (parented to %@)
[CRIT] Fixing up sharing options to have shareID for something that looks like a shared zone root for %@
[CRIT] Stripping share options for something that doesn't seem to need them %@
[ERROR] Can't recover share options on shared zone child item %@
[ERROR] Failed to recover sharing options on %@
[WARNING] Recovered sharing options on %@ by setting ck share options to null
[DEBUG] Server killed %@ but it still has live children
[CRIT] UNREACHABLE: Server killed %s but it still has %d live children
[DEBUG] State inconsistent because %@ has %d live children
[DEBUG] State inconsistent because %@ is a document with no version
[CRIT] UNREACHABLE: Server sent item %s which isn't a descendant of 'root'
[DEBUG] State inconsistent because %@ isn't a descendant of root
[CRIT] UNREACHABLE: Server sent item %@ which is parented to a non-directory %@
[CRIT] UNREACHABLE: Server sent live item %s parented to dead item %s
[DEBUG] State inconsistent because %@ is parented to a dead item %@
[DEBUG] State inconsistent because %@ has corrupt sharing options
[CRIT] UNREACHABLE: Server sent us an item %@ which has non-root share options but should be a root share
[DEBUG] %@: Allocated ranks [%lld, %lld[
[ERROR] Allocating ranks failed, mark the container as BROKEN STRUCTURE
[ERROR] Failed to fetch change state %@
[CRIT] UNREACHABLE: Change token is stale.  Blowing away the db (%@ vs %@)
server-zone/did-sync-down
[CRIT] UNREACHABLE: Can't create app library and zones for zone named: %s
[DEBUG] 
%llx saving %ssync-down batch (edits:%ld deletions:%ld) directly:%s
[NOTICE] received %lu edited items and %lu deleted items from the cloud for %@%@
[NOTICE] received %lu deleted items from the cloud for %@%@
[NOTICE] received %lu edited items from the cloud for %@%@
[CRIT] Assertion failed: requestID >= self->_changeState.clientRequestID
[CRIT] Assertion failed: [record.recordType isEqualToString:kBRRecordTypeContent] || [record.recordType isEqualToString:kBRRecordTypeStructure]
[ERROR] something went wrong while saving to the db: %@
[DEBUG] updating %@
with requestID:%llu %stoken:%@ consistent:%s caught-up:%s
[DEBUG] Dropped %ld unused xattr blobs
[WARNING] Saving directly failed. Falling back to saving the inconsistent batch
[DEBUG] Removing applied tombstone: %@
[DEBUG] 
%llx Starting to GC %ld server tombstones in %@
[ERROR] failed purging zone %@ - %@
[ERROR] failed pruning server_xattr_blobs: %@
[DEBUG] Finishing destroying server truth
[DEBUG] Finished resetting server truth
[CRIT] UNREACHABLE: attempted delete all content on an unsupported zone type: %@
[CRIT] Assertion failed: !appLibrary.wasMovedToCloudDocs
[CRIT] Assertion failed: clientZone.appLibraries.count == 1
[CRIT] UNREACHABLE: Can't move clouddocs to itself
[CRIT] UNREACHABLE: Unable to cross zone migrate.  Blowing away our state and starting from scratch.
[CRIT] Assertion failed: argc == 1
[ERROR] Can't open database at %@: %@
[ERROR] Can't close database at %@: %@
[ERROR] Can't insert into the database %@: %@
[ERROR] Could not create a unique index %@: %@
[INFO] Populating new columns with base path: %@
[ERROR] Unable to fetch URL properties for %@: %@
[DEBUG] Updating %@ %@ %d into database for %@
[ERROR] Failed to update %@ %@ %d into database for %@: %@
[INFO] Attaching database %@
[ERROR] Already have attached database %@ while trying to attach database %@.
[ERROR] Unable to attach db %@: %@
[ERROR] Failed to open %@
[ERROR] failed closing %@
[ERROR] Not updating attached database because no database has been attached.
[INFO] Updating attached database %@ %@
[DEBUG] Beginning update attach database batch: %@
[DEBUG] Successfully finished updating attach database batch: %@
[ERROR] Failed to enable foreign keys: %@
[ERROR] Failed to disable foreign keys: %@
[ERROR] Failed to negate file ids: %@
[DEBUG] Changed %lld items when negating file ids
[ERROR] Failed to negate doc ids: %@
[DEBUG] Changed %lld items when negating doc ids
[ERROR] Failed to create file_id_gen_count_index, so updating will be incredibly slow: %@
[DEBUG] Created file_id_gen_count_index
[ERROR] Failed to create doc_id_index, so updating will be incredibly slow: %@
[DEBUG] Created doc_id_index
[ERROR] Failed to update the gen count: %@
[DEBUG] Changed %lld items when updating gen counts
[ERROR] Failed to update the file ids: %@
[DEBUG] Changed %lld items when updating file ids
[ERROR] Failed to update the doc ids: %@
[DEBUG] Changed %lld items when updating doc ids
[DEBUG] Changed %lld items when clearing the staged generation ids
[ERROR] Failed to update the staged file ids: %@
[DEBUG] Changed %lld items when clearing the staged file ids
[ERROR] Unable to get inode for %@: %@
[ERROR] Failed to update the backup detector value: %@
[DEBUG] Patched the backup detector
[CRIT] there should always be one row in client_state {%@}
[CRIT] unable to flush client state, crash to maintain consistency
[DEBUG] Fixed up the FSEvents root ID
[CRIT] UNREACHABLE: invalid type
[CRIT] UNREACHABLE: can't get the structure record of a shared-top-level document without the zone of the alias record
[CRIT] UNREACHABLE: Asked for side car recordID on an item that doesn't have side cars
[DEBUG] path match info for %@ is %@
[WARNING] we have no etag for %@
path matching: %@
[WARNING] we have no reference for %@
path matching: %@
[CRIT] UNREACHABLE: can't get the structure record without a zone
[CRIT] UNREACHABLE: asked for folder root structure record on a non-folder
[CRIT] Assertion failed: sqlite3_value_type(value) == SQLITE_NULL
[CRIT] Assertion failed: sqlite3_column_type(stmt, index) == SQLITE_NULL
[CRIT] Assertion failed: self.brc_isAppLibraryRootRecordID
[CRIT] Assertion failed: self.brc_isAppLibraryDocumentsRecordID
[CRIT] Assertion failed: libraryRowID
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID || !([identifier isEqualToString:BRCItemIDZoneRoot] || [identifier isEqualToString:BRCItemIDDocuments])
[CRIT] UNREACHABLE: Corrupt side car file
[CRIT] UNREACHABLE: attempt to extract an itemID from '%s'
[CRIT] UNREACHABLE: attempt to extract an itemType from '%s'
[WARNING] The server sent a bounceNo <= 1: %@
[CRIT] UNREACHABLE: empty basename and no bounceno
[CRIT] UNREACHABLE: Aliases parent ref zoneID %@ must be equal to aliases zoneID %@!
[CRIT] UNREACHABLE: No alias target
[WARNING] can't deserialize filename: %@
[CRIT] UNREACHABLE: The server should have set a birthtime on %s
[CRIT] UNREACHABLE: %@ parent ref zoneID %@ must be equal to record's zoneID %@!
[CRIT] UNREACHABLE: The server should have set an mtime for %s
[WARNING] %@ record %@ has a size inconsistency, %llu != %llu
[ERROR] failed deserializing version in %@: %@
[ERROR] %@ record %@ doesn't have a lastEditorDeviceName
[WARNING] Server gave us an unrepresentable filename: "%@" using "%@"
[CRIT] UNREACHABLE: The record name is not a content in the shared zone
[CRIT] Assertion failed: si.isBRAlias
[ERROR] couldn't set basename to '%@'
[CRIT] UNREACHABLE: invalid filename
[ERROR] Couldn't serialize xattr blob for %@: %@
[DEBUG] On Sync-up of %@ using old etag due to iWork conflict
[CRIT] Assertion failed: version != nil
[CRIT] Assertion failed: (diffs & BRC_IF_CONTENT_SIGNATURE)
[CRIT] Assertion failed: self[kBRRecordKeyXattr]
[WARNING] Created app library through sync flow %@
[DEBUG] found app library record named: %@
[DEBUG] found app documents record named: %@
[CRIT] Assertion failed: ![zoneName isEqualToString:BRUbiquitousDefaultContainerID]
[CRIT] UNREACHABLE: invalid lastEditorDeviceName on %@: %@
[CRIT] UNREACHABLE: rootAppLibraryRecordForAppLibraryID: should not be called with a bogus app library id %@
[CRIT] Assertion failed: dataRepresentation != nil
[CRIT] UNREACHABLE: invalid key %@ and obj %@
[CRIT] UNREACHABLE: icon doesn't exist anymore at %@ - %@
[WARNING] share has no CKShareTypeKey, using extension from CKShareTitleKey (%@)
[WARNING] can't find document name for share %@ and can't extract it from URL; using '%@' as default
[CRIT] UNREACHABLE: Can't prepare sync for a zone that is blocked
[DEBUG] %@ is not pristine and needs sync
[DEBUG] Avoid syncing up a pristine zone
[DEBUG] 
%llx Sync: syncing up clientZone %@. batch size - %u
[DEBUG] Because this is our first time syncing up, adding %@
[DEBUG] ignoring item with negative cost for now %@
[DEBUG] Dedicating this sync up operation to pcs chaining %@
[DEBUG] no record needs syncing at the moment.
[CRIT] Assertion failed: items.count == 0
[DEBUG] destroying shares instead of unsharing
[DEBUG] preparing to send in requestID:%lld: %lu records, delete %lu recordIDs, unshare %lu iwork shares, rename %lu shares, about %lu items
[NOTICE] sending %lu items to the cloud for %@
sync-up
[DEBUG] Finished PCS chaining a batch when completed: %d error: %@
[DEBUG] 
%llx sync-up error for record %@: %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed with a permanent error
[WARNING] Updating parent item to be chained because it is unknown and we encountered a PCS error
[WARNING] Updating local item to be chained because it is unknown and we encountered a PCS error
[WARNING] Encountered an unknown pcs error for %@
[DEBUG] ignoring error for %@ because an other item in the batch failed
[DEBUG] skipping throttling item %@ even though it caused the failure
[CRIT] Assertion failed: self.serverZone.isPrivateZone
[DEBUG] Fetching share IDs shared by us for renames: %@ and unshare: %@
[WARNING] Got a permanent error %@ when fetching records and shares
[WARNING] got an error while fetching the records and shares %@, but ignoring it
[DEBUG] Saving shares %@ shared by us for unshare and rename
[DEBUG] No shares need saving
[ERROR] send metadata error: %@
[CRIT] Assertion failed: [contentRecord.recordType isEqualToString:kBRRecordTypeContent]
[CRIT] Assertion failed: protectionData
[CRIT] UNREACHABLE: Protection data mismatch between share and record being shared! (%@ vs %@)
[DEBUG] updated content record %@ with protectionData %@ baseToken %@ routingKey %@
[CRIT] Assertion failed: share.publicSharingIdentity
[CRIT] UNREACHABLE: protection data mismatch between content public sharing identity and web sharing data (%@ vs %@) for %@
[CRIT] UNREACHABLE: content record is missing protection data %@
[CRIT] Assertion failed: !fetchedRecord
[CRIT] UNREACHABLE: protection data mismatch! ignoring content records version (%@ to %@)
[DEBUG] record %@ still needs web sharing protection data
[CRIT] UNREACHABLE: Failed to get new web sharing identity: %@
[CRIT] UNREACHABLE: Timed out while waiting for new web-sharing identity
[CRIT] Assertion failed: [firstItemID isEqual:secondItemID]
[CRIT] Assertion failed: error
[ERROR] Failed getting web sharing identity for %@ - %@
[DEBUG] got web sharing identity for %@
[CRIT] UNREACHABLE: invalid sharing records count
[DEBUG] Sync: sending requestID:%lld for container %@
[DEBUG] Forcing sync up of dead parent %@
[DEBUG] Forcing item dead in the server truth to re-upload as a rejected item - %@
[WARNING] We changed share roots from %@ to %@ on %@ and got a permission error so behaving like an unknown item
[DEBUG] item %@ needs to be re-uploaded
[DEBUG] item %@ doesn't need to be reuploaded
[CRIT] UNREACHABLE: Couldn't find parentID for record %@
[DEBUG] We already remapped %@
[CRIT] Assertion failed: !parentItem.isKnownByServer
[WARNING] We were told to remap to an item %@ -> %@ which is already in our client truth
[DEBUG] The server wasn't able to remap parentID %@ to pcs chained parent %@ so doing it now
[DEBUG] handling error for %@
[CRIT] UNREACHABLE: Unable to open iwork package %@
[CRIT] UNREACHABLE: Uploaded an iWork package of size 0 (itemID: %@)
sharing/accept-flow
[NOTICE] share acceptation %@ failed with error %@
[DEBUG] use fallback flow with reason %@
[CRIT] UNREACHABLE: Session is not cancelled but DBs serial queue is nil!
[DEBUG] delete share acceptation fault because operation failed
[NOTICE] share acceptation %@ succeed and document is now live on disk at %@
[NOTICE] User clicked on share link %@
[DEBUG] Accept flow completed successfully.
[CRIT] UNREACHABLE: can't perform next step because operation is finished; %@
[DEBUG] 
%llx running %@ in %@
[CRIT] Assertion failed: method != nil
[CRIT] Assertion failed: _shareMetadata
[ERROR] failing share acceptation with %@
[DEBUG] network is unreachable, replacing error with generic network error
[CRIT] Assertion failed: _shareURL
[DEBUG] share document URL is %@ for %@
[DEBUG] 
%llx activating shared zone
[DEBUG] Open application completed successfully
[ERROR] Failed to open the target app - %@
[DEBUG] 
%llx checking if document sharing is supported
[DEBUG] 
%llx Check if app is installed
[DEBUG] Application proxy: %@
[CRIT] Assertion failed: !(goToAppStore && openWebPreview)
[DEBUG] Application proxy missing %@ entitlement
[DEBUG] %@ is installed
[DEBUG] 
%llx Check if a user is signed in to iCloud and iCloud Drive is turned on
[WARNING] Can't accept share without a user signed in to iCloud
[CRIT] Assertion failed: !(goToSettings && openWebPreview)
[ERROR] Can't retrieve application app library ID for %@
[WARNING] Can't accept share without iCloud Drive turned on (accountDSID: %@, isEnabledForCloudDocs: %@, isAppLibraryDisabled: %@, isAccountMigrated: %@)
[DEBUG] User is eligible to accept the share
[DEBUG] 
%llx Check if app is profile disabled
[WARNING] managed AppleID can't access to public share
[WARNING] %@ is disabled by profile
[DEBUG] 
%llx Show sharing join dialog
[DEBUG] Owner or share already accepted, skipping to next step
[NOTICE] User has refused to open shared document at %@
[NOTICE] User has accepted to open shared document at %@
[DEBUG] 
%llx Parsing share metadata %@
[DEBUG] alias app library is %@
[DEBUG] local client zone is %@ (zoneName: %@)
[DEBUG] shared item is identified by %@ (displayName: '%@')
[CRIT] Assertion failed: _linkItemID
[WARNING] do not open Pages
[DEBUG] 
%llx Wait for shared item to sync down
[CRIT] UNREACHABLE: %@ wasn't found after syncing down on the owner
[DEBUG] 
%llx Wait for item to be on disk
[WARNING] %@ wasn't able to be found as a fault.  We must have reset or be broken structure or it was deleted locally.
[DEBUG] 
%llx Preparing side fault
[DEBUG] found share item %@
[DEBUG] share item %@ is in transient state, should try again later
[CRIT] UNREACHABLE: document doesn't exists anymore
[DEBUG] created shared document-to-be in db: %@
[ERROR] can't make the file live: %@.  Jumping to accept the url and hope the item syncs down
[DEBUG] created shared document-to-be on disk: %@
[DEBUG] item is on disk, jump to prepare to open shared document
[DEBUG] Skipping open in app
[ERROR] can't get bookmark string at %@
[DEBUG] Got bookmark string %@ for URL %@
[DEBUG] doing open operation on "%@" with "%@"
[CRIT] Assertion failed: _liveFileURL
[WARNING] Skipping opening side fault
[ERROR] don't know how to open shared item at %@
[DEBUG] 
%llx Accepting share URL
[DEBUG] 
%llx creating share accept operation
[CRIT] Assertion failed: acceptShareOp
[DEBUG] 
%llx received share access completion
[WARNING] failed to accept share - %@
[CRIT] UNREACHABLE: No operation error and no share id
[WARNING] we are already accepting share %@
[DEBUG] accept operation completed with success
[ERROR] %@ wasn't found after syncing down
[DEBUG] 
%llx Locate shared folder on disk
[WARNING] %@ wasn't able to be found on disk.  We must have reset or be broken structure or it was deleted locally.
[CRIT] Assertion failed: _clientZone
[DEBUG] 
%llx prepare to open shared document
[ERROR] Invalid kind of item; %@
[WARNING] Could not compute the coordinated read URL of the item %@.  It must have been deleted locally
[CRIT] Assertion failed: !li.isReserved
[DEBUG] 
%llx Open shared document if still needed at %@
[CRIT] Assertion failed: shareURL
[ERROR] nil app bundle ID for share URL: %@
[CRIT] Assertion failed: redirectReason
[DEBUG] Opening in web browser (reason: %@) %@
[ERROR] Can't open "%@" using default web browser
[CRIT] Assertion failed: pathRelativeToRoot
[CRIT] Assertion failed: isInDocsFolder
[DEBUG] skipping throttling because this is a batch failure
[DEBUG] server provided backoff %.03fs (delay %.03fs)
[DEBUG] sync backoff %.03fs
[CRIT] UNREACHABLE: invalid length: %ld
[CRIT] UNREACHABLE: we should not have alias uuid types anymores
[CRIT] UNREACHABLE: unknown itemID type %d
[CRIT] Assertion failed: object->item_code == 1 || object->item_code == 2
[CRIT] Assertion failed: object->item_code == 4 || object->item_code == 5
[CRIT] UNREACHABLE: invalid BRCItemID (%@)
[CRIT] UNREACHABLE: unmigrated? invalid BRCItemID (%@) - %d
[CRIT] Assertion failed: rio.app_lib_rowid
[CRIT] Assertion failed: uio.app_lib_rowid
[CRIT] UNREACHABLE: unknown itemID kind
[CRIT] UNREACHABLE: invalid enclosure uuid - %@
[DEBUG] Not need to remove %@ as it was not created yet
[WARNING] can't suppress %@: %@
[CRIT] UNREACHABLE: migration should work: %@
[ERROR] invalid owner in rowid_reservations, resetting
[ERROR] found duplicate app library, resetting
[CRIT] UNREACHABLE: incomplete migration for client_uploads
[CRIT] UNREACHABLE: incomplete migration for client_downloads
[CRIT] Corrupt DB state: some items belong to non-existing zones!
[ERROR] parentID of unexpected length %d
[ERROR] itemID of unexpected length %d
[ERROR] type mismatch with parent %d or item %d
[WARNING] can't open root: %@ %{errno}d
[CRIT] Should always be able to resolve synced folder root!
[WARNING] can't find relpath by ID: %@ %{errno}d
[DEBUG] found one shared doc by ID: %@
[ERROR] can't find relpath %@ by parent %@ and name: %@ %{errno}d
[DEBUG] found one shared doc by parent and name: %@
[DEBUG] Found alias item parent: %@ in zone: %@
[CRIT] UNREACHABLE: no destination zone for %@
[WARNING] can't find dst by ID: %@ %{errno}d
[DEBUG] can't resolve: %@ %{errno}d
[DEBUG] Found a usable parent path of our server item: %@
[WARNING] can't resolve the root of iCloud Drive: %@ %{errno}d
[DEBUG] we have already renamed the files on disk
[INFO] renamed %@
  from: %@
    to: %@
[ERROR] can't rename %@
     from: %@
       to: %@ %{errno}d
[WARNING] can't bounce %@ to %@
[CRIT] Assertion failed: dstZone
[CRIT] Assertion failed: dstAppLibrary
[CRIT] Assertion failed: physicalBounceNo && physicalBounceNo >= 2
[CRIT] UNREACHABLE: Ignoring corrupt side car file
[CRIT] UNREACHABLE: Found more than one match for that query
[CRIT] Assertion failed: argc == 3
[CRIT] Assertion failed: appLibraryOwner
[CRIT] Assertion failed: syncContextIdentifier
[CRIT] UNREACHABLE: -asPrivateClientZone called on a shared zone
[CRIT] UNREACHABLE: -asSharedClientZone called on a private zone
[CRIT] Assertion failed: _syncUpBudget && _syncUpThrottle && _syncDownThrottle
[DEBUG] associating %@ with %@
[DEBUG] 
%llx %s container %@
[CRIT] Assertion failed: _delegate
[DEBUG] Activation done
[DEBUG] 
%llx deactivating %@
[CRIT] Assertion failed: _activated
[CRIT] UNREACHABLE: Container needs server and client truths reset: %@
[WARNING] Container needs server and client truths reset: %@
[WARNING] Container needs reset - %lu
[WARNING] Server zone has been moved to cloud docs
[WARNING] Server tells us we need to redo PCS prep
[DEBUG] Not considering %@ for sync bubble tasks because sync is blocked
[DEBUG] 
%llx disconnecting listener so that they gather again
[CRIT] UNREACHABLE: there should never be more than one match for that query (parentID: %@, name: %@, parentZoneID: %@)
[CRIT] Assertion failed: !_CFURLIsPromiseName((__bridge CFStringRef)name)
[CRIT] Assertion failed: _CFURLIsPromiseName((__bridge CFStringRef)name)
[DEBUG] Sync: updated sync-up throttle: %@
[DEBUG] Ignoring sync state change because sync is disabled for this container
[DEBUG] sync state changed: %@, was %@
[DEBUG] Asking for sync up but we never synced down, do that first
[DEBUG] %@ sync state changed, was %@
[DEBUG] 
%llx scheduling zone creation operation for %@
[DEBUG] 
%llx finished zone creation with error: %@
[DEBUG] added %@ as a sync-down dependency of %@
[DEBUG] removed %@ as a sync-down dependency of %@
[INFO] 
%llx %@: starting sync down
[DEBUG] we're not activated anymore, not syncing-down immediately
[DEBUG] adding sync down dependency: %@
[DEBUG] Sync: updated sync-down throttle: %@
[CRIT] Assertion failed: _syncDownOperation == nil
[CRIT] Assertion failed: _syncUpOperation == nil
[DEBUG] Sync: %@ is already in sync, odd
[CRIT] UNREACHABLE: We are alreadying syncing but we tried to sync again
[DEBUG] 
%llx Sync: considering sync operation for %@
[DEBUG] Sync-up has no global budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up has no budget for more than 10s: %.1fs (%@)
[DEBUG] Sync-up is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync-up retry-after is over 10s: %.1fs
[DEBUG] sync-down is throttled for more than 10s: %.1fs (%@)
[DEBUG] Sync: trying to start sync up
[DEBUG] Sync: starting sync up with cost:%.1f
[DEBUG] Sync: nothing to sync up
[DEBUG] Sync: items to sync-up are throttled for another %.1fs
[DEBUG] Executing cancelled op %@ so operations waiting on it can proceed
[CRIT] UNREACHABLE: Forcing cancel on sync op
[DEBUG] No sync required anymore at that time
[DEBUG] Not ready to sync yet, sleeping for %.3fs
[DEBUG] Not learning anything about %@ because the update was dropped: %@
[DEBUG] Not learning anything about %@ because the server merged ETag %@ to produce %@
[DEBUG] Learn structural ETag for %@: %@
[DEBUG] Learn content ETag and Last Editor for %@: %@, %@
[DEBUG] Learn content ETag for %@: %@
[DEBUG] Learn side-car ETag for %@: %@
[DEBUG] 
%llx Sync: completed sync up for %@, cost:%.1f, itemCount:%llu %@
[DEBUG] decreasing sync-up batch size since server says we exceeded limits
[DEBUG] Sync: requestID:%llu cancelled
[DEBUG] Sync: requestID:%llu failed sending: %@
[ERROR] Sync: requestID:%llu failed sending: %@
[DEBUG] Sync: requestID:%llu succeeded
[DEBUG] Sync: updated sync-up throttle: %@
      and container state: %@
[DEBUG] Queueing sync barrier sync down for %@
[DEBUG] Not resuming sync token because %p is still in flight
[NOTICE] signaling sync down waiters
[DEBUG] Sync: updated sync-down throttle: %@
      and container state: %@
[WARNING] marked %lld items rejected after cross zone move
[CRIT] Assertion failed: _requestID == 0 || requestID <= _requestID
[DEBUG] Server Zone has caught up, so we can now re-scan to scrub for turds on %@
[DEBUG] Updated %llu items to strip the oob-sync-ack bit
[WARNING] not enumerating in-flight items until we are caught up.
[DEBUG] received item in request:%llu
   local:  %@
   server: %@
[DEBUG] item acknowledged in requestID:%llu
   local:  %@
   server: %@
   diffs:  %@
 learning etag: structural:%s content:%s
[DEBUG] Alias was rejected when syncing up in private zone %@
[DEBUG] 
%llx Resolving server-side folded path-match for: %@
[DEBUG] Found a path-match in the server truth: %@
[DEBUG] killing local reserved item for the path-match: %@
[DEBUG] path-match is new, learn new item ID %@ instead of %@
[DEBUG] path-match is known and is an unmodified fault on the file-system: %@
[DEBUG] path-match is known and is a fault on the file-system that moved, but still treating it as if it were there: %@
[DEBUG] path-match is known but live on the file-system: %@
[DEBUG] we couldn't find a suitable path-match, mark the item as rejected
[DEBUG] Sync: requestID:%llu acknowledged
[DEBUG] Sync: just a new sync down without new sync up since requestID:%llu
[WARNING] Marking latest sync request failed because the requestIDs differ %llu vs %llu for %@
[CRIT] UNREACHABLE: Not cross zone moving a zone to itself
[DEBUG] 
%llx cross zone move documents from %@ to %@
[DEBUG] cleaning up %@
[CRIT] Assertion failed: !document.needsReading || db.changes > 0
[CRIT] UNREACHABLE: can't prepare cross move items! %@
[CRIT] Assertion failed: db.changes == 0
[CRIT] UNREACHABLE: can't cross move items! %@
[NOTICE] cross zone moved %lld items from %@ to %@!
[ERROR] can't save cross zone move state: %@
[ERROR] can't save cross zone move state for appLibrary %@: %@
[ERROR] can't save destination zone: %@
[CRIT] Assertion failed: self._hasAllItemsDidUploadHandlers
[WARNING] calling the upload handler because sync is failing: %@
[DEBUG] Completed upload for all items for %@
[DEBUG] Still need to sync up %@ more items for sync bubble for %@
[DEBUG] can't signal faulting watchers; %@
[DEBUG] Tombstones with ranks are gone: %@
[DEBUG] Signaling that tombstones can be collected in %@
[WARNING] calling and removing all share acceptance blocks
[DEBUG] 
%llx waiting for item %@ to be on disk
[WARNING] %@ and %@ must be non nil to register action
[DEBUG] 
%llx done waiting for item to be on disk
[DEBUG] Waiting for %@ to be available
[WARNING] %@ is resetting or broken structure.  Not waiting on faulting of %@
[WARNING] %@ is dead, not waiting on faulting.
[WARNING] %@ is on disk after syncing down and refreshing
[DEBUG] Lost item %@ is available
[DEBUG] Could not locate lost item %@
[DEBUG] Item %@ already available
[DEBUG] 
%llx waiting for item %@ to be downloaded
[DEBUG] 
%llx done waiting for item to be downloaded
[WARNING] %@ is resetting, broken structure.  Not waiting on donwload of %@
[DEBUG] Waiting for %@ to be downloaded
[DEBUG] network is unreachable, don't wait
[DEBUG] Item %@ already downloaded
[WARNING] Cancelling sync down operation that uses a background session
[WARNING] Cancelling sync up operation because we need to sync down now
[DEBUG] 
%llx waiting sync down to complete for item %@
[DEBUG] 
%llx done waiting for sync down to complete on first try
[DEBUG] 
%llx Item failed first try waiting for sync down to complete... Retrying once...
[DEBUG] 
%llx done waiting for sync down to complete after retry
[WARNING] %@ is resetting or broken structure.  Not waiting on sync down of %@
[DEBUG] Waiting for sync down for %@ in %@
[DEBUG] 
%llx Cancelling all share acceptance callbacks due to unreachable network
[CRIT] Assertion failed: pos == ITEM_RECURSIVE_PROPERTIES_FIELDS_COUNT
[WARNING] Couldn't find refreshed item for %@
[DEBUG] Item finished CZM procesing and now is done %@
[DEBUG] Not processing item which is already almost dead %@
[WARNING] State changed before we could remove %@. Aborting removal
[WARNING] Proceeding with removal of item which moved into a share %@
[CRIT] UNREACHABLE: No path to process fsevent on
[DEBUG] Sync: Starting downloading all children under %@ due to changing shares
[ERROR] Failed to start downloading item %@ under %@
[CRIT] UNREACHABLE: Couldn't find fault which we should have %@
[DEBUG] Sync: Finished waiting for download of children under %@
[ERROR] Failed starting download for CZM - %@
[DEBUG] Sync: Starting downloading %@ due to changing shares
[DEBUG] Sync: Finished waiting for download of %@
[WARNING] Strange... We have multiple levels of associated item IDs for %@ - (%@ vs %@)
[WARNING] An item moved into this zone and needs to be downloaded for czm %@. (reparented root item %@)
[CRIT] Assertion failed: parentItemID
[CRIT] Assertion failed: [item.clientZone isEqualToClientZone:self]
[WARNING] An item moved into %@ and needs to be downloaded for czm %@.
[ERROR] Failed to create package: %@
[WARNING] Failed to anchor package %@ at %@: %@
[CRIT] Assertion failed: _serverZone
[CRIT] Assertion failed: _defaultAppLibrary
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCPrivateServerZone class]]
[DEBUG] 
%llx %s private container %@
[WARNING] problem report for %@ wasn't acked
[DEBUG] problem report for %@ completed
[WARNING] Zone has resetted more than %lu times during the last %f seconds
[DEBUG] zone-health changed for %@ previous %@ new %@
[WARNING] We had a problem and the zone is healthy again, resetting the zone
[WARNING] We had a problem and the zone is healthy again, no need to reset the zone
[WARNING] Server told us the zone is healthy again, but we didn't have a problem
[DEBUG] 
%llx recomputing app sync block state for %@
[DEBUG] updating sync state to be %s for %@
[DEBUG] sync remaining %s for %@
[DEBUG] Queueing faults live barrier for %@
[CRIT] UNREACHABLE: block and %s must be non nil to register action
[DEBUG] Waiting for sync down for alias to %@ in %@
[DEBUG] 
%llx Resolving alias clash:
 alias1: %@
relpath1: %@
 alias2: %@
relpath2:%@
[DEBUG] silently deleting newer item %@
[DEBUG] oldest alias still resolves at %@
[DEBUG] deleting newest alias at %@
[DEBUG] oldest alias doesn't resolve, moving to newest path at %@
[CRIT] Assertion failed: self.progress.completedUnitCount >= 0
[CRIT] UNREACHABLE: total unit count should always be greater or equal to completed unit count; %@
[CRIT] UNREACHABLE: a finished progress should have at least one transfer tracked; %@
[CRIT] UNREACHABLE: future progress state isn't valid (unitCount: %lld)
[WARNING] Progress: observing a progress that doesn't have a doc ID
[WARNING] Progress: observing a progress that doesn't have a progress group
[NOTIF] Progress: ignore delta update because %@ for doc %@ isn't tracked anymore
[NOTIF] Progress: negative delta update for doc %@; [%lld -> %lld]
[NOTIF] Progress: ignore delta update ([%lld -> %lld] < %@) for doc %@ because it was counted as part of the resume operation
[NOTIF] Progress: ignore delta update ([%lld -> %lld] == %@) for doc %@ because it was counted as part of the resume operation
[NOTIF] Progress: %s finished for doc %@
[CRIT] Assertion failed: item.desiredVersion
[NOTIF] Progress: ignore download for doc %@ because its version size is equal to zero
[CRIT] UNREACHABLE: can't register progress for item without a document id %@
[NOTIF] Progress: update details for download of doc %@ because it was edited
[NOTIF] Progress: start tracking download for doc %@ because document is pending-download (versionSize: %lld)
[NOTIF] Progress: nothing to resume for '%@'
[NOTIF] Progress: resuming global progress for '%@'
[NOTIF] Progress: resumed progress for %lu zones
[NOTIF] Progress: doc %@ was reparented outside the visible scope of iCloud Drive, force deletion
[NOTIF] Progress: doc %@ is now dead, force deletion
[CRIT] Assertion failed: item
[NOTIF] Progress: stop publishing global progress
[CRIT] Assertion failed: progress
[CRIT] Assertion failed: group == BRCProgressUploadGroup || group == BRCProgressDownloadGroup
[CRIT] UNREACHABLE: can't add progress for item without a document id %@
[WARNING] Progress: attempt to add an upload progress for doc %@ without a version size
[WARNING] Progress: attempt to add an upload progress more than once for doc %@
[NOTIF] Progress: start tracking upload progress for doc %@ (progressSize: %lld)
[WARNING] Progress: attempt to add a download progress for doc %@ without a version size
[WARNING] Progress: attempt to add a download progress more than once for doc %@
[CRIT] Assertion failed: [self->_downloads.versionSizes[documentID] longLongValue] == progress.totalUnitCount
[WARNING] Progress: progress for doc %@ has a negative value of completed unit count (completedSize: %lld (-%@), progressSize: %lld)
[NOTIF] Progress: resume tracking download progress for doc %@ (completedSize: %lld (-%@), progressSize: %lld)
[NOTIF] Progress: start tracking download progress for doc %@ (progressSize: %lld)
[CRIT] UNREACHABLE: can't update progress for document without a document id %@
[NOTIF] Progress: stop tracking upload for doc %@ because transfer failed (toState: %s)
[WARNING] Progress: upload failed for doc %@ without being tracked (syncUpState: %d, toState: %s)
[CRIT] UNREACHABLE: can't update dowload throttle progress for item without a document id %@
[NOTIF] Progress: stop tracking download progress for doc %@ because transfer failed (toState: %s)
[CRIT] Assertion failed: documentID
[CRIT] Assertion failed: progressGroup
[CRIT] Assertion failed: _globalProgress == nil
[CRIT] Assertion failed: completedUnitCount >= 0
[CRIT] Assertion failed: (!group && totalUnitCount >= 0) || totalUnitCount > 0
[CRIT] Assertion failed: !group || BRCProgressGroupPrettyPrint(group.intValue)
[NOTIF] Progress: new global progress to track %s
[NOTIF] Progress: defer publish while waiting first sync-down of default zone
[CRIT] Assertion failed: _operationTimer
[CRIT] UNREACHABLE: Invalid suspend count (_operationTimerSuspendCount: %u)
[CRIT] Assertion failed: _uploads == nil
[CRIT] Assertion failed: totalUnitCount >= completedUnitCount
[NOTIF] Progress: take over current progress because uploads have priority
[CRIT] Assertion failed: _downloads == nil
[NOTIF] Progress: take over on current progress because downloads have priority
[CRIT] Assertion failed: _globalProgress.indeterminate
[WARNING] Progress: can't proceed to upload cancelation without doc ID
[CRIT] Assertion failed: versionSize
[NOTIF] Progress: cancelling upload for doc %@ (syncUpState: %d, willRetry: %d, pendingQuota:%d, hasProgress: %d)
[WARNING] Progress: forcing pending quota to NO for doc %@ because transfer isn't retryable
[NOTIF] Progress: upload progress for doc %@ has no previous completed unit count
[WARNING] Progress: can't proceed to download cancelation without doc ID
[NOTIF] Progress: cancelling download for doc %@ (destroyIfLast: %d, willRetry: %d, hasProgress: %d)
[NOTIF] Progress: keep %@ unit counts completed for doc %@
[WARNING] Progress: download progress for doc %@ has no previous completed unit count
[NOTIF] Progress: did finish global progress (group: %s, reason: %s, userVisible: %d)
[CRIT] Assertion failed: transferInfo.sumOfCompletedUnitCountDelta == 0
[CRIT] Assertion failed: transferInfo.sumOfTotalUnitCountDelta == 0
[CRIT] Assertion failed: _uploads.versionSizes.count == 0
[CRIT] Assertion failed: _uploads.childProgresses.count == 0
[CRIT] Assertion failed: _uploads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _uploads.outOfQuotaDocIDs.count == 0
[CRIT] Assertion failed: _downloads.versionSizes.count == 0
[CRIT] Assertion failed: _downloads.childProgresses.count == 0
[CRIT] Assertion failed: _downloads.previousUnitCounts.count == 0
[CRIT] Assertion failed: _downloads.resumeUnitCounts.count == 0
[NOTIF] Progress: resume download progress (%lu item downloading)
[NOTIF] Progress: resume indeterminate progress (%lu app libraries waiting initial faults)
[NOTIF] Progress: %@ waits to have its initial faults live
[NOTIF] Progress: start tracking initial faults live
[NOTIF] Progress: %@ has its initial faults live
[NOTIF] Progress: stop tracking initial faults live because all visible app libraries have their faults live
[NOTIF] Progress: publish ongoing progress because default zone has completed its first sync-down
[NOTIF] Progress: ignore upload for doc %@ because its version size is equal to zero.
[NOTIF] Progress: stop tracking upload for doc %@ because document is in needs-read
[WARNING] Progress: doc %@ shouldn't be uploading before its status is set to needs-upload
[NOTIF] Progress: cancelling upload for doc %@ because its needs to be uploaded again
[CRIT] Assertion failed: [self->_uploads.versionSizes[documentID] longLongValue] == versionSize
[NOTIF] Progress: start tracking upload for doc %@ because document is needs-upload (versionSize: %lld, transferSize: %lld)
[NOTIF] Progress: resume upload for doc %@ because document is needs-sync-up but not tracked yet (versionSize: %lld, transferSize: %lld)
[NOTIF] Progress: cancelling upload for doc %@ because its wasn't uploaded
[CRIT] Assertion failed: syncUpSize > 0
[NOTIF] Progress: stop tracking upload for doc %@ because document is idle (syncUpSize: %lld)
[NOTIF] can't delete document from progress without a document id %@
[NOTIF] Progress: stop tracking download progress of doc %@ (reason: %s)
[NOTIF] Progress: stop tracking upload progress of doc %@ (reason: %s)
[CRIT] Assertion failed: fromSize <= toSize
[CRIT] Assertion failed: versionSize <= progressSize
[CRIT] Assertion failed: delta >= 0
[DEBUG] Not allowing re-creation of shared to me top level item when the item is dead in the server truth
[DEBUG] shared document is read-only, do not sync
[CRIT] Assertion failed: !item.isSharedToMeTopLevelItem
[WARNING] item should really have an etag
[DEBUG] Fake syncing up shared folder record %@
[CRIT] UNREACHABLE: unsupported top level item kind
[DEBUG] Syncing up %sshared document alias record %@
[WARNING] syncing the structure of an item without an alias item
[DEBUG] Deleting alias in private zone %@
[DEBUG] Syncing up root app library record %@
[DEBUG] Also faking sync in side car for child item not known to the server %@
[WARNING] Marking %@ as rejected because the root share is dead
[DEBUG] 
%llx re-scheduling apply jobs for %@ because it finished sync-up
[DEBUG] Unsharing %@
[DEBUG] Editing name on shareID %@
[DEBUG] Syncing up %sdirectory record %@%s
[WARNING] Faking sync for alias item alive in the same zone as the target %@
[WARNING] Not syncing deletion of ETag-less version: %@
[DEBUG] We need to update sharing info for this reset item
[DEBUG] shared document is read-only, do not sync its version
[DEBUG] will pcs chain records
[ERROR] re-uploading uploaded record: %@
[DEBUG] ItemID changed while uploading (%@ -> %@), starting over
[ERROR] thumbnail not found.  Force upload again
[CRIT] UNREACHABLE: package with no uploaded content - %@
[WARNING] Forcing re-upload of an item which has an expired put receipt - %@
[CRIT] UNREACHABLE: File with no content signature - %@
[DEBUG] reverting to server item because we can't reupload a fault for %@
[DEBUG] forcing upload of %@
(dead in server truth)
[DEBUG] Syncing up %sversion record %@
[DEBUG] Syncing up %sdocument structure record %@
[DEBUG] for %@%s
[DEBUG] Syncing up %sfinder alias record %@
[DEBUG] Syncing up %ssymlink record %@%s
[WARNING] Faking sync for item because it doesn't have field differences with the server item %@ vs %@
[DEBUG] Deleting dead record already dead in the server truth %@
[DEBUG] Can't delete shared top level item yet which is still syncing in another zone %@
[DEBUG] 
%llx Deleting %@ record for %@
[DEBUG] 
%llx preparing sync-up of %@
[CRIT] UNREACHABLE: asked to syncup an unkown item type: %@
[CRIT] Assertion failed: nextNotifRank >= _nextNotifRank
[CRIT] Assertion failed: nextPackageItemRank >= _nextPackageItemRank
[CRIT] UNREACHABLE: Called -asSharedItem on a private item
[CRIT] Assertion failed: !_serverZone.isSharedZone || (_sharingOptions & BRCSharingItemHasCKShareMask) != 0 || _st.state == BRC_ITEM_STATE_TOMBSTONE
[CRIT] Assertion failed: self.isFSRoot
[CRIT] UNREACHABLE: can't find the appLibrary of %@
[CRIT] UNREACHABLE: unsupporter server item type: %d
[CRIT] UNREACHABLE: unknown item type: %d
[CRIT] Assertion failed: !_fetched.byFileID
[CRIT] Assertion failed: matchByFileID.st.fileID.unsignedLongLongValue == _pathOfItem.fileID
[CRIT] Assertion failed: !_fetched.byDocumentID
[CRIT] Assertion failed: matchByDocumentID.isDocument
[CRIT] Assertion failed: matchByDocumentID.st.documentID.unsignedLongLongValue == _pathOfItem.documentID
[CRIT] API MISUSE: lookups should not be used on paths of type: %s
[CRIT] Assertion failed: _pathOfItem.appLibrary.isiCloudDesktopAppLibrary
[DEBUG] looked up %@ by fileID:%llu
[CRIT] Assertion failed: self.isNonDesktopRoot || self.isDocumentsFolder
[CRIT] Assertion failed: self.isSharedZoneRoot
[CRIT] Assertion failed: sharedZone
[CRIT] UNREACHABLE: we should not have alias or share uuid types anymores
[CRIT] UNREACHABLE: we should not have alias or shared uuid types anymores
[CRIT] Assertion failed: libraryRowID || sharedZoneRowID
[CRIT] UNREACHABLE: invalid UUID: %s
[CRIT] Assertion failed: object->item_code == BRCItemIDCodeDocuments || object->item_code == BRCItemIDCodeZoneRoot || object->item_code == BRCItemIDCodeSharedZoneRoot
[CRIT] UNREACHABLE: decoding an unknown kind of itemid
[CRIT] UNREACHABLE: encoding an item id with an unknown kind
[CRIT] Assertion failed: rio.zone_rowid
[CRIT] UNREACHABLE: unparsable mangled itemID: %s
[CRIT] Assertion failed: len == sizeof(uuid_t)
[CRIT] UNREACHABLE: Invalid Shared ItemID
[CRIT] Assertion failed: argc == 2
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD)
[CRIT] UNREACHABLE: Invalid Alias ItemID
[CRIT] Assertion failed: p->item_code == _UNUSED_BRCItemIDCodeSharedUUID
[CRIT] Assertion failed: len == sizeof(_UUIDItemObject_OLD) && ((_UUIDItemObject_OLD*)blob)->item_code == BRCItemIDCodeSharedZoneRoot
[ERROR] unable to read package header %@ with version %d - %@
[CRIT] Assertion failed: _reader
[ERROR] Input stream encountered an error %@
[DEBUG] Adding %@ to the manifest
[ERROR] Failed setting quarantine info for item %@: %@
[ERROR] Failed to open pkg item at %@ %{errno}d
[CRIT] UNREACHABLE: Invalid args in %@
[ERROR] openat failed to apply metadata for manifest item %@ %{errno}d
[ERROR] fsetattrlist failed for pkg item %@ %{errno}d
[CRIT] UNREACHABLE: we should have downloaded this file if there is nothing live
[ERROR] Failed to open live pkg item at %s %{errno}d
[ERROR] Failed to stat live pkg item at %s %{errno}d
[ERROR] clonefileat(%d, %@, %d, %@) %{errno}d
[DEBUG] cloned at %@ for package staged in %@
[ERROR] linkat(%d, %@, %d, %@) %{errno}d
[DEBUG] hardlinked at %@ for package staged in %@
[DEBUG] copied at %@ for package staged in %@
[CRIT] UNREACHABLE: No reader to stage package at %s
[CRIT] UNREACHABLE: Package has been corrupted on the serverAsking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] UNREACHABLE: relpath should always exist
[DEBUG] %@ already exists in stage for package %@
[ERROR] Failed to mkdir %@ for package %@
[ERROR] Failed to create symlink %@ -> %@ for package %@
[CRIT] UNREACHABLE: Package has been corrupted in the cloudAsking for asset index out of bounds %lu vs %lu in package: %@
[ERROR] renameat(-1, %@, %d, %@) %{errno}d
[DEBUG] staged from %@ to %@ in %@
[CRIT] UNREACHABLE: We didn't fetch the corresponding pkg item from the server, but we were also not given a path to hardlink it from! (item: %s)
[CRIT] UNREACHABLE: invalid item type: %d
[CRIT] UNREACHABLE: xattr index is out of bounds %ld of total %ld
[CRIT] UNREACHABLE: Can't find xattr at index %ld
[ERROR] Failed to read xattrs blob: %@
[ERROR] Failed to apply xattrs to file descriptor: %@
[DEBUG] Successfully applied xattrs %@ to package item %@
[ERROR] unable to stat %@ for package %@ %{errno}d
[ERROR] Unable to add item to manifest: %@
[DEBUG] Finished staging package for %@. Item count:%lu.  Asset index:%lu
[CRIT] UNREACHABLE: NULL path for item: %@
[CRIT] UNREACHABLE: NULL path for item symlink content: %@
[CRIT] Assertion failed: _stream
[DEBUG] %@ sync-%@ is throttled for more than 10s: %.1fs (%@)
[DEBUG] syncing %@ %@
[NOTICE] Not finishing transmogrification because item is dead in the server thruth
[DEBUG] creating new document %@ at %@
[NOTICE] Not scheduling transmogrification because item is dead in the server thruth
[DEBUG] 
%llx Start downloading nested items prior to transmogrificaiton of %@
[DEBUG] 
%llx Nested download finished
[CRIT] Failed to download items required for transmogrification of %@: error: %@
[DEBUG] Finished downloading nested items needed for transmogrification of %@
[WARNING] Item %@ changed at relpath %@, abandoning transmogirifcation
[WARNING] Abandonding transmogrification since %@ can not be resolved, error %d
[WARNING] Can't resovle %@, error %d
[WARNING] Item %@ have changed, abandoning rename
[DEBUG] renaming item for transmogrify %@ (%@ -> %@)
[ERROR] failed renaming for transmogrify from %@ to %@ (%s)
[ERROR] failed opening after rename for transmogrify (%s)
[ERROR] Can't find %@ in client truth
[DEBUG] containers matching '%@': %@
[INFO] Initializing restore manager with %@
[ERROR] Failed to update attached database %@
[INFO] Calling completion block with success.
[DEBUG] share-query progressed from cursor:%@ to cursor:%@
[DEBUG] 
%llx query for %@ starting with batchSize:%u
[DEBUG] created query %@ from cursor:%@
[DEBUG] created query %@ from query:%@
[DEBUG] 
%llx handling result of %@: %@
[DEBUG] fetched share alias record %@ with etag:%@ in query %@
[CRIT] UNREACHABLE: unable to parse itemID from %@ in query %@
[DEBUG] fetched shared record %@ with etag:%@ in query %@
[DEBUG] 
%llx migration-query '%@' %@ for %@ starting from cursor:%@
[DEBUG] skipping migration '%@' because there is no server zone yet: %@
[CRIT] UNREACHABLE: unknown migration %s
[DEBUG] 
%llx migration-query '%@' %@ completed
[CRIT] UNREACHABLE: -[BRContainer isOverQuota] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer currentStatus] shouldn't be called by the daemon.
[CRIT] UNREACHABLE: -[BRContainer lastServerUpdate] shouldn't be called by the daemon.
[DEBUG] %@ is already current
[DEBUG] %@ is already downloaded
[DEBUG] Failed to start downloading item %@: %@
[DEBUG] We don't have enough space on disk to download %@.  Let's try to free some
[DEBUG] Item '%@' isn't on disk yet, failing the coordination
[CRIT] UNREACHABLE: Huh? %@ doesn't have a document id...
[CRIT] Assertion failed: _directoryItem == nil
[DEBUG] 
%llx coordinated read for %@
[DEBUG] can't resolve the parent, granting the read %@: %@
[DEBUG] can't find the item in our db, granting the read
[DEBUG] not a document, granting the read
[CRIT] Assertion failed: _url == nil
[DEBUG] 
%llx Recursive coordinate download for %@
[CRIT] Assertion failed: _url != nil || _directoryItem != nil
[DEBUG] %@ was cancelled
[CRIT] UNREACHABLE: clientDB queue is nil for session %@
[DEBUG] 
%llx network becomes not reachable, finishing the providing request
[DEBUG] failing coordinated read with %@
[DEBUG] granting coordinated read
[DEBUG] we were cancelled, cancelling docIDs %@
[DEBUG] evicting %@ because it's a fault and its download was cancelled
[CRIT] Assertion failed: _itemID
BRCSharingModifyShareOperation/? (subclass activity missing)
[WARNING] Couldn't find item %@ in zone %@
[DEBUG] requesting sharing identity on %@
[CRIT] Assertion failed: contentsRecord
[CRIT] UNREACHABLE: no records and no error
[CRIT] UNREACHABLE: no error and no sharing key
[DEBUG] Got sharing identity for share - %@
[ERROR] Fetching sharing identity failed - %@
[CRIT] UNREACHABLE: no public sharing identity. avoiding breaking iwork shares
[DEBUG] Yanking the routing key from the server for %@
[CRIT] UNREACHABLE: no routing key on share identity prepared record
[CRIT] Assertion failed: [self->_share.publicSharingIdentity isEqualToData:self->_sharingIdentityPreparedRecord.encryptedPublicSharingKey]
[DEBUG] Requesting iwork sharing identity on %@
[CRIT] UNREACHABLE: sharing identity isn't encrypted data
[CRIT] UNREACHABLE: base token isn't a string
[CRIT] UNREACHABLE: no base token %@ or sharing identity %@ and no error
[CRIT] UNREACHABLE: Sharing identities don't match (%@ vs %@)! Trying to fix up the identities
[DEBUG] Got iWork sharing identify for share - %@
[ERROR] Fetching iWork sharing identity failed - %@
[CRIT] UNREACHABLE: not a directory nor a document
sharing/save-share
[WARNING] Unsharing turd folder share %@
[CRIT] UNREACHABLE: no share record
[ERROR] Failed with baseTokenError=%@
[CRIT] UNREACHABLE: directory %@ isn't pcs chained
[ERROR] Couldn't get base record for %@, %@
[CRIT] UNREACHABLE: couldn't get base record
[WARNING] Failed to unshare turd - %@
[DEBUG] Saving %@%@ for share op %@
[CRIT] UNREACHABLE: got an unexpected number of shares saved
[ERROR] failed saving share %@: %@
[DEBUG] finished saving share %@
[CRIT] Assertion failed: [save[1].recordType isEqualToString:kBRRecordTypeContent] || [save[1].recordType isEqualToString:kBRRecordTypeStructure]
[CRIT] Assertion failed: [save[0].recordType isEqualToString:CKRecordTypeShare]
[DEBUG] Saved share %@
sharing/destroy-share
[CRIT] UNREACHABLE: got an unexpected number of shares deleted
[ERROR] failed to destroy share %@: %@ in %@
[DEBUG] destroyed share %@ in %@
sharing/lookup-participants
[ERROR] failed share participant lookup for %@ - %@
[CRIT] UNREACHABLE: Unexpected number of share participants: expected %lu got %lu
[DEBUG] fetched share participants: %@
sharing/modifyAccess
[CRIT] UNREACHABLE: no dict and no error
[ERROR] Failed %@ access to %@ - %@
[DEBUG] %@ access to %@
[DEBUG] Can't fetch shareID for item %@
sharing/copyParticipantToken
[CRIT] UNREACHABLE: No base token so the share token we would return would be invalid for iwork
[CRIT] UNREACHABLE: no error and no key
sharing/prepareFolderPCS
sharing/copy-shareURL
[DEBUG] Finished copying URL %@ for share %@ error %@
[CRIT] UNREACHABLE: Couldn't get a share URL
[DEBUG] Share: %@
[DEBUG] Prepared record: %@
[CRIT] UNREACHABLE: Couldn't get a share URL for %@
sharing/copy-shortToken
[CRIT] UNREACHABLE: No short token found on record
sharing/clean-subitems
[DEBUG] Removing shared subitems in op %@
[DEBUG] Removing shareID %@
[DEBUG] Removing alias record %@
[DEBUG] Remove share subitems batch completed with error - %@
[DEBUG] Can't find alias target for %@
[WARNING] Couldn't parse unsalted bookmark data %@ - %@
[WARNING] Couldn't find server zone for %@
[WARNING] No filename found on alias target %@
[DEBUG] an item in the path has a nil filename
[DEBUG] Processing server truth in op %@
[DEBUG] Found shared-to-me alias to delete %@ in %@
[DEBUG] Processing client truth in op %@
[CRIT] Assertion failed: (options & BRCSharingItemHasShareID) != 0
[WARNING] subitem %@ is already shared inside %@
[CRIT] UNREACHABLE: Don't know how to unshare document of type %d
[DEBUG] deleting %s shareID %@
[CRIT] UNREACHABLE: Can't locate the item type we are deleting?
[DEBUG] Not processing child items on %@ because it already has a shareID
[CRIT] Assertion failed: _multipleItemsInteractiveSchedulingCount >= 0
[DEBUG] 
%llx force scheduling interactive transfers
[DEBUG] cancelling oldest batch (%@)
[CRIT] Assertion failed: oldestBatchOperation
[WARNING] We have way too many operations in flight.  Waiting for cancelled operations to finish cancelling
[DEBUG] waiting for the next scheduling to finish
[DEBUG] Force scheduling a new high priority batch
[CRIT] Assertion failed: operation
[DEBUG] adding operation %@ to the transfer stream
[CRIT] Assertion failed: _isWaitingForTransferBatch
[DEBUG] 
%llx cancelling entry %@ in %@
[CRIT] UNREACHABLE: this operation should have been cancelled
sharing/access-token
[CRIT] UNREACHABLE: encrypted access token %@ is of unexpected type
[CRIT] UNREACHABLE: reference identifier %@ is of unexpected type
[CRIT] Assertion failed: !info || info.isSymLink
[DEBUG] updating symlink target to %@
[DEBUG] no change
create-zone
[DEBUG] 
%llx Sync: create cloudkit zone for %@
[CRIT] Assertion failed: !_optimisticSubscribe
[CRIT] Assertion failed: savedZones.count == 1
[CRIT] Assertion failed: !self->_syncContext.isShared
[DEBUG] optimistic subscribe failed with Zone Not Found, try to create the zone first
sync/zone-purge
[DEBUG] deleted %@ on server
[DEBUG] deleted shared zones associated to %@ on server
[ERROR] latest GC started %lld seconds in the future
[CRIT] Assertion failed: _persistedState == nil
[CRIT] Assertion failed: _deviceID != 0
[ERROR] Unable to exclude '%@' from backups: %@
[CRIT] Assertion failed: _stageDirectoryFileID[dirIndex] != 0
[CRIT] Assertion failed: _persistedState
[CRIT] Assertion failed: fileID != 0
[DEBUG] 
%llx kicking apply changes: %ld unflushed staged file IDs
[DEBUG] 
%llx file %llu might have been unlocked
[ERROR] could not open locked file, not watching it %{errno}d
[DEBUG] forgetting locked file %@
[ERROR] fstat(%d) '%@' failed %{errno}d
[WARNING] '%@' is not a directory deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[WARNING] '%@' is not on the same volume as the root deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] unlink('%@') failed deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[ERROR] mkdir('%@') withIntermediateDirectories failed: %@
[ERROR] mkdir('%@') failed %{errno}d
[ERROR] fstat('%@') failed %{errno}d
[ERROR] mkdirat(%d, '%@') failed %{errno}d
[ERROR] symlinkat('%@', %d, '%@') failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_RDONLY) failed %{errno}d
[ERROR] BRCOpenAt(%d, %@, O_CREAT|O_RDWR|O_EXCL) %{errno}d
[ERROR] fcopyfile(%d, %d, NULL, COPYFILE_DATA) %{errno}d
[ERROR] BRCRenameAt(%d, %@, %d, %@, 0) %{errno}d
[DEBUG] can't open by fileID:%llu %{errno}d
[CRIT] UNREACHABLE: returnedFileID(%llu) != fileID(%llu)
[WARNING] Abort making live: unable to flock %@ %{errno}d
[DEBUG] renameat(-1, '%@', %d, '%@', RENAME_SWAP) failed for fileID=%llu,  %{errno}d
[DEBUG] swapped '%@' and '%@' fileID=%llu
[DEBUG] renameatx_np(-1, '%@', %d, '%@', %u) failed for fileID=%llu,  %{errno}d
[DEBUG] renamed from '%@' to '%@' in parentFileID:%llu
[CRIT] UNREACHABLE: nil client zone when applying %@ and %@
[CRIT] UNREACHABLE: invalid item type
[DEBUG] got EPERM, failing to return the right permissions
[ERROR] can't set the xattr %s:  %{errno}d
[ERROR] can't set xattr %s:  %{errno}d
[ERROR] can't to set Spotlight last-used date xattrs %{errno}d
[ERROR] can't remove Spotlight last-used date xattrs %{errno}d
[ERROR] Unable to remove xattrs: %@
[CRIT] UNREACHABLE: Failed to load structure xattrs from the database for signature: %s
[ERROR] Unable to set structural xattrs for signature %@: %@
[CRIT] UNREACHABLE: Failed to load version xattrs from the database for signature: %s
[ERROR] fsetxattr(%s) failed %{errno}d
[ERROR] cannot read xattr '%s': %@
[ERROR] listing existing xattrs failed: %@
[ERROR] fsetattrlist failed %{errno}d
[ERROR] Can't save immutable share permissions %{errno}d
[ERROR] Can't get the group for "everyone" in order to limit share permissions %{errno}d
[ERROR] Failed to strip the acls %{errno}d
[CRIT] Assertion failed: _stageDirectoryPath[kBRCStageDirectoryForPendingFetchStream] != nil
[DEBUG] deleting (%d, '%@') asynchronously
[DEBUG] renameat(%d, '%@', %d, '%@') failed %{errno}d
[ERROR] failed removing documentID for %@ %{errno}d
[DEBUG] moved (%d, '%@') to the graveyard at '%@' for %@
[WARNING] Abort making live: path doesn't exist %@
[CRIT] Assertion failed: relpath
[DEBUG] moved from %@
to '%@' in old version stage
[DEBUG] Making the move to the graveyard succeed even though the file doesn't exists anymore
[DEBUG] Failing the move to graveyard because the item is busy
[DEBUG] moved from %@
to '%@' in graveyard
[DEBUG] fileID:0 doesn't exist in stage (metadata-only update)
[DEBUG] fileID:%llu is in the %s
[DEBUG] can't open src to transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] src parentFileID:%llu not in graveyard, can't transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] documentID mismatch on fileID:%llu (expected:%u actual:%u) not transferring to fileID:%llu
[DEBUG] can't open dst to transfer documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[ERROR] failed transferring documentID:%u from fileID:%llu to fileID:%llu %{errno}d
[DEBUG] transferred documentID:%u from fileID:%llu to fileID:%llu
[DEBUG] running GC because we are in low disk space
[ERROR] fts_open(%@) failed %{errno}d
[ERROR] fts_read() failed for path %s %{errno}d
[DEBUG] Collected %lld bytes from purging the graveyard
[DEBUG] starting garbage collection at %ld
[DEBUG] removing staged file for upload: %@
[DEBUG] removing staged file with id %llu
[DEBUG] removing staged file for download: %@ device:%d ino:%lld
[DEBUG] removing deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] latest GC:%ld; previous GC:%ld
[DEBUG] closing
[CRIT] Assertion failed: minDelta >= 0
[CRIT] Assertion failed: maxDelta > minDelta
[DEBUG] running GC at startup after %lld seconds; %@
[DEBUG] skipping GC at startup after %lld seconds; %@
[DEBUG] running GC in XPC activity after %lld seconds; %@
[DEBUG] skipping GC in XPC activity after %lld seconds; %@
[ERROR] fgetattrlist(%d) failed %{errno}d
[ERROR] failed allocating documentID for fileID:%llu %{errno}d
[CRIT] UNREACHABLE: DocumentID was still 0 after marking tracked
[DEBUG] 
%llx physical URL request for '%@'
[CRIT] UNREACHABLE: What's this path???
[DEBUG] Not in the %@ namespace, not for us
[DEBUG] can't parse version path '%@', probably not an iCloud version, allow it
[ERROR] Logged out: can't compute physical URL for '%@'
[ERROR] can't find container for path '%@'
[ERROR] can't find live item for path '%@'
[DEBUG] Version already local, we're good!
[DEBUG] 
%llx coordinated read request for '%@' (%@)
[ERROR] Logged out: can't grant coordination to reader %@
at path '%@'
[DEBUG] Found a download operation already pending, piggy back on it
[ERROR] can't find sync context for mangled ID '%@', path '%@'
[ERROR] failed downloading version to path '%@': %@
[DEBUG] migration completed already
[DEBUG] No extensions to migrate
[DEBUG] Migrating %lu extensions
[WARNING] invalid change token format: %@
[CRIT] UNREACHABLE: failed to create query item from %@
[CRIT] Assertion failed: rank >= _rank
[DEBUG] device does not support CoreSpotlight indexing, no need to drop any index
[DEBUG] CoreSpotlight index has already been dropped
[WARNING] dropping CoreSpotlight index
[CRIT] Assertion failed: index
[ERROR] failed dropping Spotlight index: %@
[DEBUG] dropped Spotlight index successfully
[ERROR] failed to synchronize user defaults for %@
[ERROR] failed deleting ranks from tombstones: %@
[DEBUG] deleted ranks from tombstones successfully
[DEBUG] dropping item from recents index %@
[DEBUG] not dropping item, it is still live: %@
[DEBUG] Learning index acked rank %llu (flushed rank %llu)
[DEBUG] Finished indexing for now
[DEBUG] handling reset for rowID %lld, notif rank: %llu
[WARNING] Dropping spotlight index for %@ due to a reset
[ERROR] Failed to delete searchable items for mangledIDs %@: %@
[WARNING] reset zone is not a private zone, skipping
[ERROR] change token has expired, index should be dropped
[CRIT] UNREACHABLE: not ready for indexing, stopping here
[DEBUG] incoming rank is newer than what we know about: %lld > %lld, stopping here
[DEBUG] enumerating changes from notif rank %llu
[CRIT] UNREACHABLE: bad tombstone entry type: %d
[DEBUG] found a tombstone entry of type client zone db rowid (%lld), sending current batch
[DEBUG] sending batch from %llu to %llu (%@,%@)
[DEBUG] active set did change, notifying fileproviderd
[ERROR] failed to signal enumerator for working set: %@
[DEBUG] Canceling spotlight indexer.
[DEBUG] Publishing download progress for %@
[CRIT] UNREACHABLE: thumbnail is not a CKAsset: %@
dl-thumbnail
[DEBUG] 
%llx computing desired packages indices
[CRIT] UNREACHABLE: Package inside %@ is corrupted in the cloud
Asking for asset index out of bounds %lu vs %lu in package: %@
[CRIT] Assertion failed: false
[DEBUG] Desired indices are: %@ (itemCount: %ld)
[CRIT] UNREACHABLE: file content is not a CKAsset: %@
[CRIT] UNREACHABLE: finder bookmark without content: %@
[CRIT] UNREACHABLE: pkg content is not a CKPackage: %@
[CRIT] UNREACHABLE: package manifest is not a CKAsset: %@
[CRIT] UNREACHABLE: xattrs package is not a CKAsset: %@
[CRIT] UNREACHABLE: unknown type for downloaded object %@
dl-content
[CRIT] Assertion failed: !item.isFinderBookmark
[CRIT] UNREACHABLE: There should be a file content property in %@
[CRIT] UNREACHABLE: no fileURL for %@ in %@
[DEBUG] 
%llx Downloader[%lld] staging %@
[CRIT] Assertion failed: vRecord
[CRIT] Assertion failed: ![vRecord.recordID.zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] || _secondaryRecord
[CRIT] Assertion failed: [vRecord.etag isEqualToString:_etag]
[ERROR] Can't deserialize %@
[DEBUG] received version %@ %@
[ERROR] Can't open %@ to set metadata %{errno}d
[ERROR] Failed to attach thumbnail to version
dl-version
[ERROR] Unable to stage item in Genstore: %@
[DEBUG] Created addition staged at URL: %@, creation info: %@
[CRIT] Assertion failed: itemID.isNonDesktopRoot
[CRIT] UNREACHABLE: Constructing shared zone root item for itemID %@ is not supported
[CRIT] API MISUSE: can't save a zone root item
[CRIT] Assertion failed: self.appLibrary.fileID
[CRIT] UNREACHABLE: asking the parent item of a root item
[CRIT] UNREACHABLE: asking the parent item ID of a root item
[CRIT] UNREACHABLE: asking the structural bit of a zone root is not supported
[DEBUG] Next event will fire in %fs
[ERROR] failed saving sharing options update %@: %@
[WARNING] Forced %lld orphans to be tombstones in the shared zone
[CRIT] UNREACHABLE: Path depth overflow
[DEBUG] propagated delete of %lld recursive children of %@
[DEBUG] Clearing app sync blocked bit because we created an item that needs sync
[CRIT] Assertion failed: _session.clientDB.isBatchSuspended
[DEBUG] 
%llx %@[%@]: finishing sync up
[DEBUG] Sync-Up[%@]: Scheduling a sync-up job
[DEBUG] Sync-Up: Recovered from %u missing sync up jobs
[DEBUG] 
%llx Uploader: scheduling retries
[DEBUG] Uploader[%@]: upload stage set to: %@
[DEBUG] 
%llx Uploader[%@]: %s -> %s [cancel-job]
[DEBUG] Uploader[%@]: Cancelling upload
[DEBUG] Uploader[%@]: cancelled thumbnail upload: %@
[DEBUG] Uploader[%@]: Cleaning up upload stage: %@
[DEBUG] 
%llx Uploader[%@]: cancel and cleanup item upload
[CRIT] API MISUSE: should call setState:forUploadJobID:zone:
[DEBUG] 
%llx Uploader[%@]: setting state to %s
[DEBUG] 
%llx Uploader[%@]: uploading
[DEBUG] Uploader: scheduling %lld suspended throttles
[DEBUG] Uploader[%lld]: job has been put back in queue %@
[DEBUG] Uploader: next job to retry in %.3fs
[DEBUG] Uploader: no more jobs to retry
[DEBUG] Kicking uploads for %@
[CRIT] UNREACHABLE: no app library for row ID %@
[CRIT] UNREACHABLE: upload scheduler is exact we should have an item
[DEBUG] Uploader: reached maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader: below maximum allowed number of thumbnails retrieval (%ld)
[DEBUG] Uploader[%lld]: generating manifest for %@
[DEBUG] Uploader[%lld]: adding package item with deviceID 0x%lx fileID %lu
[WARNING] Failed to write xattrs to url %@: %@
[DEBUG] Uploader[%lld]: adding xattr package item with URL %@ for %@
[WARNING] Failed to add xattrs to xattrs package: %@
[ERROR] failed to create manifest at %@: %@
[CRIT] UNREACHABLE: can't upload an item without a fileID
[CRIT] UNREACHABLE: can't upload a fault
[DEBUG] Adding CKAsset with deviceID 0x%lx fileID %@ to the record for item %@
[ERROR] Unable to copy thumbnail at '%@' to upload stage: %@
[ERROR] Unable to get thumbnail size at '%@' to upload stage: %@
[DEBUG] generated thumbnail: %@
[ERROR] Couldn't write xattr of size %lu to url: %@; error: %@
[DEBUG] Creation of record for %@ failed: %@
[DEBUG] Uploader[%lld]: assets only record generated: %@
[DEBUG] 
%llx Uploader[%@]: Done generating thumbnail, building record for %@
[DEBUG] 
%llx Uploader[%@]: Preparing record for upload of %@
[DEBUG] Uploader[%@]: generating thumbnail (shouldTransferThumbnail:yes) %@
[DEBUG] Uploader[%@]: skipping thumbnail (inDocumentScope:%s shouldHaveThumbnail:%s shouldTransferThumbnail:no)
[WARNING] can't duplicate the package %@: %@
[WARNING] can't anchor the package %@ at %@: %@
[CRIT] Assertion failed: pbitem.type != BRFieldPkgItemType_FILE || pbitem.hasSignature
[DEBUG] Handling file modified error: %@
[DEBUG] 
%llx Uploader[%@]: done with %@ (%@)
[DEBUG] Error is retriable, putting item back in the queue
[ERROR] non recoverable error while uploading %@: %@
[DEBUG] Uploader[%@]: increasing throttle back off
[CRIT] Assertion failed: ![item isReadAndUploaded]
[CRIT] UNREACHABLE: %@ should be a document
[CRIT] UNREACHABLE: %@ should be needs-upload
[DEBUG] Uploader[%@]: throttle for %@ doesn't exist anymore
[NOTICE] uploading %ld documents in %@
[DEBUG] 
%llx Uploader[%lld]: %@ failed to sync up because it's out of quota: %@
[CRIT] Assertion failed: _session.clientDB.changes == 1
[DEBUG] 
%llx re-uploading failed items with size less than %@
[DEBUG] 
%llx quota changed from %@ to %@
[DEBUG] updated %@ quota: %lld
[WARNING] can't update quota: %@
[CRIT] UNREACHABLE: Item scheduled to upload isn't a document %@
[DEBUG] Uploader: Recovered from %u missing uploader jobs
[CRIT] UNREACHABLE: Can't locate target server zone from bookmark data %@
[DEBUG] Overriding structural and content info from (%@, %@) -> (%@, %@) because the item is OOB sync
[CRIT] Assertion failed: itemID && parentID
[DEBUG] PCS chaining %@ (st:%@, ct:%@) to %@ for op %@
[CRIT] Assertion failed: !_fullyChainRecordInfoMap[parentRecordID]
[CRIT] Assertion failed: parentCKInfo
[CRIT] UNREACHABLE: No parent item?!?!
[CRIT] UNREACHABLE: unkown record type
[CRIT] Assertion failed: preppedRecords.count == 0
[DEBUG] Received records from first PCS step: %@
[CRIT] Assertion failed: preppedRecord.protectionData
[CRIT] Assertion failed: j + _halfChainedRecordMap.count == preppedRecords.count
[CRIT] Assertion failed: halfChainInfo != nil
[CRIT] Assertion failed: info.itemID
[DEBUG] Finished enumerating pcs under directory %@
[DEBUG] Enumerating pcs under new directory %@
[CRIT] Assertion failed: rootItem
sync/pcs-chain
[CRIT] UNREACHABLE: Can't PCS chain to documents, trash, or root
[CRIT] Assertion failed: si
[DEBUG] %@ is already chained
[WARNING] Got an error indicating we need to reparent %@ to %@
[ERROR] Blocking %@ from sync up until it is next modified because the server failed to pcs chain %@ with a permanent error
[WARNING] Encountered pcs chaining error %@ for record %@
[WARNING] Retrying with new record batch because we were told about a new parent - %@
[ERROR] Failed iterating PCS - %@
[ERROR] failed sending first PCS step - %@
[ERROR] Failed sending second PCS step - %@
[WARNING] Learning etag in the server truth for half chained parent %@
[WARNING] Uh oh... the record changed server side while we were mid pcs chain batch.  We might have oplock conflicts
[CRIT] Assertion failed: record.parent
[CRIT] Assertion failed: !record.parent
[WARNING] Syncing down before retrying %@
[WARNING] trying to initialize a globalID from a nil object
[ERROR] Failed fetching zones to prep PCS for %@ - %@
[DEBUG] No zones need PCS prep currently
[DEBUG] Prepping PCS for %@ -> %@
[DEBUG] PCS migration %@ for %@
[ERROR] Failed migrating PCS for %@ - %@
[CRIT] Assertion failed: ![BRCDaemon daemon].isInSyncBubble
[CRIT] UNREACHABLE: session wasn't properly closed
[CRIT] UNREACHABLE: db connections weren't properly closed and nillified
[CRIT] Assertion failed: ![_xpcClients containsObject:client]
[CRIT] Assertion failed: [_xpcClients containsObject:client]
[DEBUG] 
%llx closing XPC connections
[DEBUG] invalidating XPC clients: %@
[CRIT] UNREACHABLE: there are still XPC clients around: %@
[DEBUG] 
%llx creating '%@'
[CRIT] can't create directory at '%@': %@
[CRIT] can't retrieve attributes of item at '%s': %@
[CRIT] created directory doesn't have read/write access for owner (permission: %c%c%c%c%c%c%c%c%c%c)
[DEBUG] permissions checked
[DEBUG] flocking '%@'
[DEBUG] 
%llx including %@ in backup
[ERROR] Unable to include '%@' from backups: %@
[CRIT] Assertion failed: defaultAppLibrary
[DEBUG] 
%llx rescheduling pending disk throttles
[DEBUG] 
%llx recomputing disk space
[CRIT] UNREACHABLE: createAppLibaryRoot failed but error is nil
[ERROR] failed to create root:'%@': %@
[DEBUG] Checking for items that need pcs chaining
[DEBUG] Failed to defer the pcs chain state
[ERROR] Failed to defer the activity state
[ERROR] failed to defer the activity state
[ERROR] Failed to set the xpc activity state to done
[DEBUG] Checking for folders that need transmogrify
[DEBUG] Scheduling directory transmogrify at startup for %@
[ERROR] failed to continue the pcs chain state
[CRIT] Assertion failed: qos_class_self() == QOS_CLASS_UTILITY
[DEBUG] 
%llx resuming account session
[CRIT] Assertion failed: !_resumed
[CRIT] Assertion failed: _accountWaitOperation.operationFailureThrottle
[DEBUG] 
%llx closing account session
[DEBUG] 
%llx cancelling fs-events monitor of type: %lu
[DEBUG] cancelling misc operation: %@
[DEBUG] 
%llx cancelling _defaultScheduler...
[DEBUG] 
%llx cancelling _fsWriter...
[DEBUG] 
%llx cancelling _fsReader...
[DEBUG] 
%llx cancelling _fsUploader...
[DEBUG] 
%llx cancelling _fsDownloader...
[DEBUG] 
%llx cancelling _syncUpScheduler...
[DEBUG] 
%llx cancelling _applyScheduler...
[DEBUG] 
%llx cancelling _notificationManager...
[DEBUG] 
%llx cancelling _recentsEnumerator...
[DEBUG] waiting for misc operation: %@
[DEBUG] 
%llx closing _defaultScheduler...
[DEBUG] 
%llx closing _fsWriter...
[DEBUG] 
%llx closing _fsReader...
[DEBUG] 
%llx closing _fsUploader...
[DEBUG] 
%llx closing _fsDownloader...
[DEBUG] 
%llx closing _syncUpScheduler...
[DEBUG] 
%llx closing _applyScheduler...
[DEBUG] 
%llx closing _fairClientDBScheduler...
[DEBUG] 
%llx closing _notificationManager...
[DEBUG] 
%llx closing _recentsEnumerator...
[DEBUG] 
%llx cancelling and closing our containers and sync context...
[DEBUG] preventing creation of new sync context...
[DEBUG] 
%llx cancelling %@...
[DEBUG] 
%llx closing %@...
[CRIT] Assertion failed: zone.delegate == nil
[CRIT] Assertion failed: [self hasRootForSyncedFolderType:folderType]
[DEBUG] 
%llx closing _stageRegistry...
[DEBUG] 
%llx closing _diskReclaimer...
[DEBUG] 
%llx closing dbManager...
[DEBUG] 
%llx closing _containerScheduler...
[DEBUG] 
%llx resetting local state for %@
[CRIT] Assertion failed: hasDB
[DEBUG] unlinking %@
[DEBUG] unlinking br security bookmark %@
[DEBUG] unlinking symlink %@
[DEBUG] keeping preserved item %@
[DEBUG] keeping item too large to upload %@
[DEBUG] unlinking excluded item %@
[DEBUG] unlinking .localized file %@
[DEBUG] unlinking uploaded .app file %@
[DEBUG] 
%llx destroying local account data for %@
[DEBUG] done deleting local files
[DEBUG] did reset TCC access
[DEBUG] done deleting local account data
[DEBUG] 
%llx loading app libraries
[DEBUG] 
%llx loading server zones
[DEBUG] 
%llx loading shared server zones
[DEBUG] loaded server zone: %@
[DEBUG] 
%llx loading client zones
[DEBUG] loaded client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneNames mismatch:  %@ does not match with %@
[WARNING] ignoring client zone because it's missing a server zone
[DEBUG] 
%llx loading shared client zones
[DEBUG] loaded shared client zone: %@
[CRIT] UNREACHABLE: [client|server]zoneName or ownerss mismatch:  %@ does not match with %@
[WARNING] ignoring shared client zone because it's missing a server zone
[DEBUG] loaded app library: %@
[DEBUG] ignoring app library because it's missing a client zone
[CRIT] Assertion failed: appLibrary.wasMovedToCloudDocs ? clientZone.isCloudDocsZone : [clientZone.zoneName isEqualToString:appLibraryID]
[DEBUG] 
%llx registering and activating zones
[WARNING] dropping %@ because it's missing its client zone or app library
[DEBUG] activating %@
[CRIT] Assertion failed: serverZone
[CRIT] Assertion failed: serverZone.clientZone
[CRIT] UNREACHABLE: missing client zone for %@
[DEBUG] Deactivating private client zone %@
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateIsResetting
[CRIT] Assertion failed: sharedClientZone.state & BRCClientZoneStateWantsDataUnlinked
[DEBUG] Destroying shared client zone %@
[DEBUG] deleting shared zone and library for %@ from local db
[DEBUG] deleting shared container %@ from server db
[CRIT] UNREACHABLE: can't find app library for %lld
[DEBUG] server zone already exists
[DEBUG] Created server zone: %@
[CRIT] Assertion failed: serverZone.dbRowID
[DEBUG] client zone already exists
[DEBUG] Created client zone: %@
[CRIT] Assertion failed: [clientZone.dbRowID isEqualToNumber:serverZone.dbRowID]
[CRIT] reset needed for %@ because we had to recreate its root
[DEBUG] app library already exists
[CRIT] Assertion failed: isShared == (appLibrary == nil)
[CRIT] UNREACHABLE: No db rowID on an app library or server zone
[CRIT] UNREACHABLE: No mangledID on a server zone
[CRIT] UNREACHABLE: no zone name on a server zone
[DEBUG] 
%llx Creating app library and zones: %@ if needed
[CRIT] UNREACHABLE: invalid containerID: %@
[DEBUG] returning early server zone: %@
client zone: %@
app library: %@
[CRIT] UNREACHABLE: can't find the default client zone
[ERROR] couldn't create app library
 appID: %@
serverZone: %@
clientZone: %@
[DEBUG] returning app library %@
server zone:%@
, client zone: %@
[CRIT] Assertion failed: mangledID.isShared
[CRIT] UNREACHABLE: can't reserve library rowID for a shared zone
[DEBUG] reserved rowid %@ for %@
[DEBUG] ignoring failure to enable synced folder type
[ERROR] failed creating container %@ under root %@
[DEBUG] 
%llx CloudDocs apps list did change
[DEBUG] detected %@ of free space, scheduling pending-disk downloads
[DEBUG] 
%llx %s storage optimization
[CRIT] Assertion failed: lowTime <= medTime <= highTime
[CRIT] Assertion failed: _isGreedy
[DEBUG] 
%llx starting to download documents for which we should be greedy
[DEBUG] session greediness enforced by user defaults
[NOTICE] we will now download new documents automatically because the account contains less than %@
[NOTICE] we will not download new documents automatically anymore because there is not enough disk space (%@ - %@) < %@
[NOTICE] we will now download new documents automatically because there is enough disk space (%@ - %@) > %@
[DEBUG] 
%llx enabling sync for %@
[CRIT] UNREACHABLE: Bad folder type
[ERROR] Unable to add an FSEvents Monitor on '%@'
[DEBUG] seting xattr value %@ on path: %@
[ERROR] failed setting xattr value %@ for key %@ on path: %@
[DEBUG] 
%llx disabling sync for %@
[CRIT] UNREACHABLE: Cannot disable sync for BRCSyncedFolderTypeDefault
[CRIT] Assertion failed: _fsEventsMonitors
[CRIT] Assertion failed: ![self hasRootForSyncedFolderType:folderType]
[CRIT] Assertion failed: _rootsByFolderType
[WARNING] Can't open symlink in the stage
[WARNING] Can't set the hidden finderinfo bit on the staged symlink - %s
[WARNING] Can't resolve the dest path - %s
[WARNING] Can't make the symlink live from stage - %@
[DEBUG] Made symlink live for %@
[WARNING] Can't make symlink in stage - %@
[CRIT] UNREACHABLE: appSupportDirPath was accessed after being closed
[CRIT] UNREACHABLE: cacheDirPath was accessed after being closed
[CRIT] UNREACHABLE: applyScheduler was accessed after being closed
[CRIT] UNREACHABLE: containerScheduler was accessed after being closed
[CRIT] UNREACHABLE: fsReader was accessed after being closed
[CRIT] UNREACHABLE: fsWriter was accessed after being closed
[CRIT] UNREACHABLE: notificationManager was accessed after being closed
[CRIT] UNREACHABLE: stageRegistry was accessed after being closed
[CRIT] UNREACHABLE: Bad folder type %u
[CRIT] Assertion failed: dictionary
[CRIT] UNREACHABLE: getting nil entry for folderType: %lu, dictionary: %@
[CRIT] UNREACHABLE: setting nil entry for folderType: %lu, dictionary: %@
[CRIT] Assertion failed: !dictionary[@(folderType)]
[CRIT] Assertion failed: dictionary[@(folderType)]
BRCTransferBatchOperation/? (subclass activity missing)
[CRIT] API MISUSE: should be subclassed
[DEBUG] cancelling %@
[DEBUG] 
%llx operation is now empty, cancelling %@
[DEBUG] %@(%@) %@ progress %.1f%%
[DEBUG] %@(%@) done with %@: %@
[CRIT] API MISUSE: implement in subclass
[WARNING] failed %@ %ld %@ (%@) in %@: %@
[NOTICE] finished %@%@ %ld %@ (%@) in %@
[CRIT] Assertion failed: entries.count == 0 || error
[CRIT] UNREACHABLE: Missing transfer error for record %@
[DEBUG] 
%llx waiting for callback...
[DEBUG] 
%llx callbacks finished
[ERROR] checksum from bookmark %@ is not equal to expected checksum %@ for %@
[CRIT] Assertion failed: _type == problem->_type
[CRIT] UNREACHABLE: unknown effective problem type
[DEBUG] unlinkat(%d, '%@', %d) failed: %s
[ERROR] unlinkat(%d, '%@', %d) failed after trying to fix permissions %{errno}d
[DEBUG] mkdirat(%d, '%@', 0%3o) failed: %s
[ERROR] mkdirat(%d, '%@', 0%3o) failed after trying to fix permissions %{errno}d
[ERROR] refusing to create a symlink with an empty target %{errno}d
[ERROR] refusing to create a symlink with an empty name %{errno}d
[DEBUG] symlinkat(%d, '%@', '%@') failed: %s
[ERROR] symlinkat(%d, '%@', '%@') failed after trying to fix permissions %{errno}d
[DEBUG] unlinked unexpected file at '%@'
[CRIT] Assertion failed: errno != 0
[ERROR] fchmodat(%d, '%@') failed %{errno}d
[DEBUG] created '%@'
[DEBUG] renameatx_np(%d, '%@', %d, '%@', %u) failed: %s
[ERROR] renameat(%d, '%@', %d, '%@', %u) failed after trying to fix permissions %{errno}d
[ERROR] Failed opening op for %d %{errno}d
[ERROR] can't set xattr %s to %s at '%@' %{errno}d
[ERROR] can't open '%@' %{errno}d
[ERROR] can't read the size of xattr %@ at '%@' %{errno}d
[ERROR] empty xattr %@ at '%@'
[ERROR] can't read %lu-byte xattr %@ at '%@' %{errno}d
[ERROR] invalid xattr %@ at '%@': %s
[ERROR] Failed to open fd %d by relpath %@ %{errno}d
[WARNING] Fixed up openat(%d, '.') for inaccessible folder
[ERROR] failed openat with EACCES and fstatat(%d, '%s') %{errno}d
[ERROR] failed openat(%d, '%s') with EACCES, but the item is readable: deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed openat with EACCES and fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] failed openat(%d, '%s') with EACCES: added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] failed fchmodat(%d, '%s', %c%c%c%c%c%c%c%c%c%c) deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x %{errno}d
[DEBUG] openat(%d, '%s'): added %c%c%c%c%c%c%c%c%c%c to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[CRIT] Assertion failed: fileID
[DEBUG] Failed opening parent op for '%@', hope for the best %{errno}d
[CRIT] UNREACHABLE: Corrupt quarantine: %s
[DEBUG] Quarantine info differs in flags %u vs %u ignoring %u
[WARNING] Extended attribute %s size %ld is greater than size limit %ld
[ERROR] Xattr name list exceed size limit %ld
[CRIT] Assertion failed: [cached isKindOfClass:[NSData class]]
[WARNING] Do not attempt to get xattr size cache is full
[DEBUG] Failed opening parent op for %d '%@' %{errno}d
[DEBUG] Failed opening op for %d '%@'
[ERROR] Couldn't stat %{errno}d
[ERROR] Failed to remove flags %{errno}d
[ERROR] Failed stripping acls %{errno}d
[ERROR] Failed setting permissions %{errno}d
[ERROR] Failed to restore permissions %{errno}d
[ERROR] Failed to restore acl %{errno}d
[ERROR] Failed to restore flags %{errno}d
[ERROR] Failed opening %s %{errno}d
[ERROR] Unable to strip UF_IMMUTABLE and UF_APPEND to %s %{errno}d
[ERROR] Failed setting permissions of %s %{errno}d
[ERROR] Couldn't stat %s %{errno}d
[ERROR] Failed stripping acls of %s %{errno}d
[DEBUG] Can't delete %s: %s(%d)
[ERROR] Can't delete %s: %s(%d)
[DEBUG] 
%llx deleting temporary files moved to the cache at '%@'
[DEBUG] did not remove '%@' %{errno}d
[ERROR] failed removing '%@' %{errno}d
[DEBUG] removed '%@/*'
[ERROR] lstat('%@') failed %{errno}d
[ERROR] renameat(%d, '%@', -1, '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x failed %{errno}d
[DEBUG] renamed '%@' to '%@' deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[DEBUG] failed removing documentID for %@ (%s)
[DEBUG] done iterating
[DEBUG] Starting enumerating under %@
[DEBUG] cancelling enumeration because container deactivated
[CRIT] Assertion failed: self->_handler
[DEBUG] visiting a new parent: %@
[DEBUG] continue iterating under parent %@, for _rowID > %ld
[DEBUG] %@: finished uploading all items in %@: %@
[CRIT] UNREACHABLE: task tracker created with nil label
[CRIT] Assertion failed: task_tracker
[DEBUG] task tracker (%s) has been cancelled, calling cancellation block <%p>
[DEBUG] The item path doesn't exist
[DEBUG] Item document ID doesn't match: %@ != %u
[DEBUG] Item file ID doesn't match: %@ != %lld
[ERROR] Reserved item with no server item, let's clean it up
[DEBUG] Suspending apply of shared item until we complete initial scan %@
[DEBUG] 
%llx detected a path-match at apply-changes time with %@
matching %@
[DEBUG] There is an unscanned path-match with this reserved item, forcing scan of parent of %@ and backing off
[DEBUG] 
%llx match lookup with disk %@
[DEBUG] Considering the live item
[DEBUG] Considering the faulted item
[DEBUG] attempting to schedule a coordinated read on item: %@
[CRIT] UNREACHABLE: %@ isn't needs reading, and is in the reader queue
[DEBUG] %@ is lost and isn't pending-lost in the reader queue
[DEBUG] Reader: %@: marking unresolvable item as lost: %@
[DEBUG] Reader: reached maximum allowed number of coordinations (%ld)
[CRIT] Assertion failed: [_coordinatedReaders containsObject:appLibrary]
[DEBUG] Reader: below half maximum allowed number of coordinations (%ld)
[DEBUG] there is nothing to read at %@
[WARNING] Fault is marked needs-read, odd, let fix it up
[DEBUG] item is missing, let's mark it lost
[CRIT] UNREACHABLE: something is wrong, we got a coordinated inside a package
[DEBUG] ignoring coordinated read without any corresponding items
[DEBUG] ignoring coordinated read without a live item
[DEBUG] alias/directory <-> document conflict:
  path: %@
  item: %@
[DEBUG] 
%llx reading %@ at %@
[DEBUG] item has unscanned changes on disk, reading the file
[DEBUG] nothing to read
[CRIT] UNREACHABLE: -updateLocationAndMetaFromFSAtPath should always work on documents
[DEBUG] item is busy on disk, we must give up reading the file for now
[ERROR] could not update package at %@: %@
[WARNING] can't resolve parent of '%@': %@
[DEBUG] 
%llx acquired coordination for (reading)
  at '%@'
[WARNING] This is a cross zone move from %@ to %@
[WARNING] This is a cross share move from %@ to %@
[DEBUG] We need to bounce a document clashing with our FS root
[DEBUG] We need to bounce a directory clashing with our FS root
[WARNING] we need to bounce path at %@ because there is a FS root clashing
[CRIT] UNREACHABLE: after bouncing to a unique path, we still have match!
[DEBUG] can't bounce %@ to avoid clash with fs-root %@ %{errno}d
[DEBUG] Ignoring FSEvent in unknown container
[CRIT] Assertion failed: appLibrary.isiCloudDesktopAppLibrary == NO
[DEBUG] Ignoring FSEvent in container pending needs-scan: %@
[DEBUG] ignoring fsevent on %@ until the parent arrives
fsevent
[DEBUG] can't update lookup for fs-root match on %@, ignoring fsevent
[CRIT] Assertion failed: root.type == BRCRelativePathTypeRoot || root.type == BRCRelativePathTypeDesktopOrDocuments
[CRIT] UNREACHABLE: root should exist
[CRIT] reset needed for %@ because it was deleted on disk %@
[DEBUG] Marking container %@ as needs-scan
[WARNING] Cancelling scan of %@ because it was removed while we were scanning
[WARNING] Can't find client zone for %@. Asynchronously creating it
[CRIT] Assertion failed: lookup.byFileID == nil
[CRIT] Assertion failed: !item || item.isOnDisk
[DEBUG] Symlink %@ changed fileID at %@ %{errno}d
[DEBUG] byPath:%@ moved elsewhere
[DEBUG] Ignoring fsevent on desktop symlink path %@
[DEBUG] creating new symlink %@ at %@
[CRIT] Assertion failed: lookupByFileID != item
[DEBUG] Ignoring non-alias lookup-by-itemID %@
[DEBUG] using byItemID:%@ byPath:%@ byFileID:%@ aliasItemID:%@
[DEBUG] Alias %@ changed fileID at %@ %{errno}d
[DEBUG] deleting the alias because it can't be resolved
[DEBUG] deleting the alias on-disk because it can't be resolved and isn't in our database
[DEBUG] deleting the alias because it can't reference an item in a shared zone
[DEBUG] creating new alias %@ at %@
[DEBUG] marking alias lost because its target exists on disk but we haven't scanned it yet
[DEBUG] Reviving %@ because it is dead
[DEBUG] Found the Documents folder
[DEBUG] directory %@ changed fileID at %@ %{errno}d
[DEBUG] directory %@ moved elsewhere
[DEBUG] we got a path-match with a server item: %@
[DEBUG] Found reserved item clashing %@. Marking that item live.
[DEBUG] creating new directory %@ at %@
[WARNING] Scanning an extensionless directory with a kBundle bit set as a directory at '%@'
[WARNING] Scanning directory with a kBundle bit set as a directory at '%@'
[DEBUG] Dropping fsevent on a directory with kBundle bit set at '%@'
[DEBUG] 
%llx scanning documents folder for %@
[CRIT] Assertion failed: relpathOfItem
[CRIT] Assertion failed: lookup.byDocumentID == nil
[WARNING] We shouldn't go through that path, but learn the new state of the item anyway
[DEBUG] Someone replaced a fault with content, clearing ETag for the version
[WARNING] Someone changed the filename of a fault, we don't support that, delete the fault, and schedule it being recreated
[CRIT] UNREACHABLE: item was turned into a fault on disk:
item %@
relpath %@
[DEBUG] [hardlink] this is an event about the path we knew for this item, go on
[DEBUG] [hardlink] we got an event at %@
but it's still live where we track it, redirect the event to %@
[DEBUG] [hardlink] unable to find this hardlink at its previous path, go on
[WARNING] unlinking side-fault because we don't know its documentID at %@
[CRIT] Assertion failed: relpathOfItem.birthTime == lookupByFileID.st.birthtime
[WARNING] Folder %@ was renamed to package %@
[WARNING] Folder %@ became a package
[CRIT] UNREACHABLE: Failed to update item %@ from %@ during transmogirifcation
[DEBUG] we got a path-match with a server item during initial scan: %@
[WARNING] Ignoring read on edited fault at %@ for %@
[DEBUG] inserting a zero-byte file, let's mark it lost
[DEBUG] scheduling unthrottled package item read
[DEBUG] Delaying reading item by %.03fs because it's a package
[ERROR] can't open %@: %@
[DEBUG] app library being skipped for per-item lost scan %@
[CRIT] UNREACHABLE: nil app library for rowID %@
[CRIT] UNREACHABLE: App library %@ is not marked as needs lost, but its item %@ is!
[CRIT] Assertion failed: ![self->_lostSet containsObject:appLibrary]
[CRIT] UNREACHABLE: App library %@ is in needs-lost state, but missing from the lost set!
[DEBUG] next deep scan item is %@ backoff: %lld from %@
[DEBUG] Done with all normal lost scanning for now%@
[CRIT] UNREACHABLE: Lost item should have a lostStamp
[DEBUG] Updating lost stamp for item %@
[CRIT] Assertion failed: shallowestALRowID
[CRIT] Assertion failed: backoff < BRC_TIMESTAMP_FAR_FUTURE
[CRIT] UNREACHABLE: %@: maxLostStamp(%lld) must be greater than the shallowestLostStamp(%lld)!
[DEBUG] shallowestLostStamp %lld > max lost stamp %lld for %@
[CRIT] Assertion failed: _currentScan == nil
[CRIT] Assertion failed: relpath.exists
[DEBUG] located lost item %@ at %@ under parent %@
[DEBUG] can't update lookup for fs-root match on %@, can't lost scan
[DEBUG] located lost item %@ at %@ under unknown parent
[DEBUG] GSLibraryResolveDocumentId(%u) %{errno}d
[ERROR] GSLibraryResolveDocumentId(%u) %{errno}d
[CRIT] Assertion failed: err == ENOSYS || err == EINTR || err == EBUSY
[DEBUG] 
%llx resolved documentID:%u to fileID:%llu exists:%s
[DEBUG] located documentID:%u at fileID:%llu but can't find item
[DEBUG] located %@ at fileID:%llu but item isn't lost
[DEBUG] resolved %@ to a stale fileID (%lld), retrying later
[DEBUG] resolved %@ to an inaccessible fileID (%lld) %{errno}d
[DEBUG] relocated %@ to %@ which isn't a document
[DEBUG] relocated %@ to %@ which just changed documentID
[DEBUG] relocated %@ to %@
[DEBUG] couldn't locate %@ per documentID: it's gone
[DEBUG] lost item %@ can't be located, it's gone
[CRIT] Assertion failed: !_currentScan
[CRIT] Assertion failed: relpath.isUnixDir
[CRIT] Assertion failed: item.isDirectory
[DEBUG] %@ hasn't changed at %@
[ERROR] failed opening %@ %{errno}d
[CRIT] UNREACHABLE: the relpath is already open, so -resolveAndKeepOpen should work
[CRIT] UNREACHABLE: Can't scan a path with no container: %@
[CRIT] Assertion failed: appLibrary.deepScanStamp
[CRIT] Assertion failed: !appLibrary.isiCloudDesktopAppLibrary
[CRIT] Assertion failed: rootItemID.isNonDesktopRoot
[CRIT] UNREACHABLE: we should always be able to resolve under the root, since it's kept open %{errno}d
   path: %@
[ERROR] Not slow scanning an app library %@ which differs only in case from %@
[CRIT] UNREACHABLE: app libraries differ in db row id %@ vs %@
[WARNING] Failed scan at %@ %{errno}d
[DEBUG] finishing scan of %@
[DEBUG] beginning scan of %@
[CRIT] UNREACHABLE: The scan should already be cancelled
[DEBUG] can't resolve child %@ of %@ %{errno}d
[CRIT] Assertion failed: _currentScan
[DEBUG] cancelling scan of %@
[DEBUG] 
%llx cancelling lost scan delay
[DEBUG] 
%llx scheduling lost scan (batch size: %lu)
[DEBUG] next lost item for %@ is %@
[DEBUG] 
%llx processing lost item: %@ in %@ (backoff %.3fs)
[CRIT] Assertion failed: !_lostScanDelay
[DEBUG] 
%llx delaying until backoff
[DEBUG] 
%llx scheduling lost scan after backoff
[DEBUG] lost scanning %@
[CRIT] UNREACHABLE: wrong applibrary for fsroot %@ vs %@
[CRIT] UNREACHABLE: we got an fsroot %@ that's not a root of its applibrary %@ - %@
[CRIT] UNREACHABLE: no itemID for a non-iCloud Desktop all library
[CRIT] UNREACHABLE: we just got the itemID from the db, we should be able to get the item as well
[DEBUG] Scanned %lu lost items in %e seconds
[DEBUG] Lost Scan: no lost items anymore in %@
[DEBUG] Lost Scan: done scanning lost items in %@
[DEBUG] Lost Scan: starting to scan lost items in %@
[DEBUG] Lost Scan: lost items in %@
[DEBUG] %@: signaling lost scan
[DEBUG] 
%llx thumbnail changed for %@
[DEBUG] Not clearing the thumbnail signature, because we're still waiting for thumbnail download
[DEBUG] Not clearing the thumbnail signature, because this is a thumbnail we can regenerate
[DEBUG] Not clearing thumbnail signature when we don't have the most up-to-date version %@ vs %@
[DEBUG] Reader: Recovered from %u missing reader jobs
[DEBUG] 
%llx resetting the %@
[DEBUG] resuming reader
[CRIT] Assertion failed: appLibrary && zone
[CRIT] UNREACHABLE: Reader dealloced with containers still in the lost heap
[ERROR] db corruption handler called on pending sync db
[ERROR] sqlite error handler called on pending sync db - %@ (%@)
[ERROR] Auto rollback handler called on pending sync db - %@ (%@)
[CRIT] UNREACHABLE: There should always be one entry
[CRIT] Assertion failed: recordType != 0
[CRIT] UNREACHABLE: can't find %@ in %@
[CRIT] Assertion failed: fallbackItem
[DEBUG] 
%llx computing the parent item id of %@
[DEBUG] found the alias representing this item: %@
[DEBUG] falling back to an app library documents root: %@
[DEBUG] lookup: %@
[DEBUG] unsupported attribute: %@
[DEBUG] No value for attribute: %@
[DEBUG] returning %@
[CRIT] Assertion failed: ownerIdentity
[DEBUG] Server container was reset, we need to reset ourselves
[DEBUG] Server change token expired, we need to reset ourselves
[DEBUG] Server container was reset, zone not found, we need to reset ourselves
[DEBUG] Server container was reset, user deleted zone, we need to reset ourselves
[DEBUG] unknown error domain: %@, we should retry
[CRIT] UNREACHABLE: there should be a recordID
[DEBUG] we should sync-down again after %@
[CRIT] UNREACHABLE: really unexpected error: %@
[DEBUG] Cloudd crashed, our sync up could have been received by the server
[CRIT] Assertion failed: _suspendCount > 0
[CRIT] Assertion failed: _requestID == 0
[DEBUG] ignoring excluded item in package
[WARNING] Couldn't open parent path for breadth enumeration %@
[CRIT] Assertion failed: parentPath.isUnixDir
[WARNING] cannot read content of %@
[WARNING] Couldn't opendir parent path for breadth enumeration %@
[CRIT] UNREACHABLE: no directory entry
[CRIT] Assertion failed: session != nil
[DEBUG] 
%llx invalidating connection with %@
[DEBUG] %@: is now foreground
[DEBUG] %@: is now background
[DEBUG] starting monitoring %@
[DEBUG] %@ is now monitoring %@
[DEBUG] %@ is no longer monitoring %@
[DEBUG] stop monitoring %@
[CRIT] UNREACHABLE: there should be a client
[DEBUG] 
%llx loading account now that we have enough disk space to work
[NOTICE] iCloud Drive has now enough disk space to work and is starting...
[DEBUG] Notifying clients of account change because we could have denied xpc during low disk space
[WARNING] Returning error because iCloud Drive doesn't have enough disk space to be functional
[DEBUG] turns out we're logged in, upgrading %@
[DEBUG] granting access to non-sandboxed app %@
[ERROR] invalid entitlement for %@
[ERROR] %@ is missing privilege
[DEBUG] granting access to %@ for non-sandboxed app %@
[ERROR] %@ is talking to us without container proxy right
[ERROR] %@: is trying to call %@, but has no access
[ERROR] Client %@ gave us a non-existing fault URL path %@
[DEBUG] %@: file doesn't exist at path: %s
[DEBUG] %@: denied access to %s
[DEBUG] looking for container containing aliases to %@, found: %@
[DEBUG] 
%llx creating a bookmark at %@
[DEBUG] app library of %@ is invalid: %@
[DEBUG] considering item %@ at %@
[DEBUG] considering faulted item %@ at %@
[DEBUG] considering unscanned path %@
[DEBUG] can't create alias: %@
[CRIT] Assertion failed: target
[INFO] %@: reply(%@, %@, %@, %@, %@, %@)
[DEBUG] 
%llx downloading '%@'
     lookup: %@
[DEBUG] %@ is on disk but we can't lookup in our db, we must not have scanned it yet
[INFO] %@: reply(%@, %@, %@, %@)
[DEBUG] %@: unsandboxed app is now using %@ as %@
[DEBUG] add dependency %@ for operation %@
[DEBUG] %@: %@
[CRIT] UNREACHABLE: should have an account session
[INFO] %@: reply(%@, %@)
[DEBUG] account: %@
[ERROR] Can't create %@: %@
[DEBUG] checking status for %@
[DEBUG] %@ can't access %@: %@
[CRIT] UNREACHABLE: %@ is not owning %@ and updating its metadata
[ERROR] nonexistant container %@
[DEBUG] 
%llx IPC-initiated reset for %@
[DEBUG] Not deleting container %@ which is moved to clouddocs
[DEBUG] We can't delete server zone for shared zone, skipping %@
[CRIT] %s reset for %@
[DEBUG] sending back: %@
 item: %@
 path: %@
[CRIT] UNREACHABLE: we should always have a fileObjectID
[WARNING] Stripping attributes request from %@ to %@
[INFO] 
%llx %@ (%@) %s downloading %u URL%s
[INFO] %@: reply(%@, %@, %@)
[DEBUG] receiver: %@
[ERROR] can't setup container %@: %@
[DEBUG] %@: reply(%@, %@)
[DEBUG] 
%llx getting usage for %@
[WARNING] unable to find bundleID %@
[INFO] %@: reply(%d, %@)
[INFO] %@: reply(%lu, %@)
[INFO] %@: reply(%llu, %@)
[DEBUG] 
%llx adding external docs for url:%@ parentURL:%@
[DEBUG] Trying to resolve conflict at url=%@ name=%@ itemid=%@ item=%@
[ERROR] key: %@ is not of class NSString
[INFO] %@: reply(success=%d, %@)
[DEBUG] gathering information at '%@'
[INFO] 
%llx %@ (%@) %s simulating health issue
[NOTICE] simulating health issue on %@: %@%@
[INFO] 
%llx %@ (%@) %s getting health status on %@
[DEBUG] 
%llx waiting for zone health sync down
[DEBUG] 
%llx finished sync down zone health
[DEBUG] received an error while syncing down zone health: %@
[DEBUG] 
%llx finished syncing zone health
[DEBUG] 
%llx timed-out: zone health sync
[DEBUG] 
%llx waiting for next sync down for %@ -> %@
[DEBUG] 
%llx finished sync down for %@
[DEBUG] received an error while syncing container: %@
[DEBUG] 
%llx finished scheduling sync for %@
[DEBUG] received an error while trigger sync for container: %@
[DEBUG] 
%llx finished all sync down tasks for %@
[DEBUG] 
%llx timed-out: sync of %@
[INFO] 
%llx %@ (%@) %s Refreshing sharing state for %s
[DEBUG] fileObjectID: %@
[DEBUG] invalid item identifier %@
[DEBUG] couldn't find an item for fileObjectID=%@
[CRIT] Assertion failed: result == nil || [result isKindOfClass:[NSDictionary class]]
[WARNING] Server zone was updated during refresh - avoiding races
[WARNING] force deleting item with missing share in shared zone %@
[WARNING] Clearing sharing options on missing share for %@
[WARNING] Learning new sharing options %@ from refresh state for %@
[WARNING] Learning updated item mode %s from refresh state for %@
[ERROR] Failed chmoding the shared-to-me item after refreshing sharing options - %s
[DEBUG] 
%llx %@: force syncing containers matching '%@'
[NOTICE] %@: force syncing shared database
[NOTICE] %@: force syncing %@
[NOTICE] %@: force syncing container metadata
[NOTICE] %@: forcing syncing zone health
[DEBUG] 
%llx %@: iWork force syncing containers matching '%@' ownedByMe:%d
[INFO] %@: reply()
[DEBUG] 
%llx %@ asks us to wait for the fsevents to be processed
[DEBUG] wait for fsevents
[DEBUG] wait for the lost scan
[DEBUG] 
%llx waiting for the lost scan
[DEBUG] 
%llx lost scan is done, notifying client %@
[INFO] %@: reply(%d)
[INFO] %@: reply(%f, %@)
[DEBUG] accountID: %@
[CRIT] UNREACHABLE: asked to login to a non migrated account
[ERROR] can't create account: %@
[DEBUG] no local item for %@
  path:   %@
  lookup: %@
[CRIT] UNREACHABLE: asked the content record ID of a folder
[WARNING] No document found for %@
[INFO] %@: reply(%@, %@, %@, %@, %@)
[DEBUG] data: %@
[DEBUG] looking for docID:%@ itemID:%@ mangledID:%@ unsaltedBookmarkData:%@
[DEBUG] %@ has access to %@
[DEBUG] %@ %s access to %@
[DEBUG] 
%llx looking for reverse aliases of %@
[DEBUG] 
%llx testing access to %@
[DEBUG] granting access to %@, because %@ has access to %@
[WARNING] Can't find appLibrary for id %@
[WARNING] resolveBookmarkDataToURL denied for %@: not entitled
[CRIT] Assertion failed: partialError
[DEBUG] 
%llx enumerating containers
[ERROR] failed to resolve URL %@: %@
[ERROR] failed to create container query item from %@
[INFO] %@: reply(%@, %ull, %@)
[DEBUG] enumerating items in %@ offset:%lld limit:%lld
[DEBUG] refetching quota
[DEBUG] enumerating children of %@
[DEBUG] couldn't find item for %@
[INFO] %@: reply(%@, %llu, %@)
[CRIT] Assertion failed: directoryItem.isDirectory
[DEBUG] enumerating all folders offset:%lld limit:%lld
[DEBUG] no local item for %@
[INFO] %@: reply(%d, %d, %@, %@)
[CRIT] UNREACHABLE: base token of unexpected class
[CRIT] UNREACHABLE: sharing key of unexpected class
[CRIT] UNREACHABLE: only got sharing key or base token, didn't get both
[CRIT] UNREACHABLE: Item not found (with unspecified error)
[DEBUG] Share %@ has %lu participants
[INFO] %@: reply(%@, %@,%@)
[DEBUG] Creating share for URL %@
[WARNING] Deleting share %@ because we're being asked to save a share with no participants
[DEBUG] Ignoring share save on empty share with no etag %@
[DEBUG] Saving share %@
[CRIT] Assertion failed: li
[DEBUG] last used date bumped for %@
[ERROR] can't bump last used date for %@; %@
[WARNING] can't resolve item to path lookup for %@
[WARNING] can't find item with ID %@; last used date not bumped
[DEBUG] Adding %@ as a dependency on share save
[DEBUG] Destroying share info for share %@
[DEBUG] Copying share participants for identities %@
[DEBUG] Modifying record access to %s at %@
[DEBUG] Copying participant token at %s
[DEBUG] Copying share info at %s
[DEBUG] Copying short token at %s
[DEBUG] Copying etag at %s
[DEBUG] Prep folder at %s
[CRIT] Assertion failed: item.clientZone.isPrivateZone
[DEBUG] Clean share subitems at %s
[DEBUG] Bulk copying shareIDs at urls %@
[DEBUG] copying url for share %@ for app %@
[INFO] 
%llx %@ (%@) %s Getting creator name for %s
[INFO] %@: reply(%d, %d, %d, %@, %@)
[INFO] 
%llx %@ (%@) %s Getting sharing options for %s
[INFO] 
%llx %@ (%@) %s Getting url for %@
[ERROR] An accept operation is already running for %@
[ERROR] can't handle share %@: %@
[DEBUG] 
%llx handling share at %@
[WARNING] can't accept the share: %@
[DEBUG] faking FS event after deletion at %@
[DEBUG] 
%llx trash item at %@ in %@ to %@
[WARNING] can't create %@: %@
[ERROR] can't extract metadata for %@: %@
[DEBUG] extracted metadata for %@: %@
[WARNING] can't unlink original item at %@
[WARNING] can't find relpath for %@ %{errno}d
[DEBUG] 
%llx getting move status to reparent %@ to %@
sync-down/periodic-sync
[DEBUG] 
%llx scheduling sync down for %@
[DEBUG] container-metadata appears to be out of sync in the periodic check, forcing sync
[DEBUG] zone health appears to be out of sync in the periodic check, forcing sync
[DEBUG] side-car appears to be out of sync in the periodic check, forcing sync
[DEBUG] Not considering %@ for periodic sync because it is blocked from sync
[DEBUG] %@ appears to be out of sync in the periodic check, forcing sync
[CRIT] Assertion failed: self.group
[DEBUG] 
%llx completed fetching changed zone
zones: %@
[CRIT] UNREACHABLE: No error found
[ERROR] can't fetch all changed zones: %@
[WARNING] There was a partial failure error when fetching all the zone, syncing down the failed zones: %@
error:%@
[NOTICE] scheduled a %s periodic sync
[DEBUG] Running operation to fetch %@: %@
[CRIT] Assertion failed: self.wantsContent
[CRIT] Assertion failed: _flags.startDownload
[CRIT] Assertion failed: _flags.isFault || _flags.startDownload
[DEBUG] We need to create the zone health zone on %@ - %@
[ERROR] Failed reporting zone health on %@ - %@
[DEBUG] finished reporting zone health: %@, op: %@
[WARNING] not updating zone health state because we think we are less broken than the server does
[CRIT] Assertion failed: report.state != BRCZoneHealthStateHealthy
[DEBUG] No zone health errors to report
[CRIT] UNREACHABLE: no BRCPackageItem should be a Tombstone
[DEBUG] aggregate size is %@ for documentID:%u
[CRIT] UNREACHABLE: wrong number of items in package
[DEBUG] Learning signature for rank %ld, signature:%@, asset %@
[CRIT] Assertion failed: cpi.signature
[DEBUG] Failing updates of signatures for item %@ because pkg item with rank %lu changed
[CRIT] UNREACHABLE: updating asset signature should work
[NOTICE] Ignoring tombstone pkg item %@
[CRIT] UNREACHABLE: should never attempt to save tombstones to db
[CRIT] Assertion failed: doInsert != nil
[NOTICE] Overriding an already declared item %@
[DEBUG] saved item %@ to DB
[CRIT] UNREACHABLE: saving package items should really always work
[DEBUG] Updating dirty status to %@ for %@
[ERROR] Could not delete package size aggregate entry for document %u: %@
[DEBUG] removed %lld items in pkg:%u
[CRIT] Assertion failed: relpath.isPackageRoot || relpath.isInPackage
[DEBUG] failed opening %@
[DEBUG] updating package snapshot at %@
[DEBUG] ignoring excluded package item at %@
[ERROR] can't snapshot package item at %@: %s
[WARNING] Package items are not supposed to have documentID, but %@ does, cleaning up!
[CRIT] UNREACHABLE: Failed to deallocate documentID at %@: %@
[CRIT] Assertion failed: relpath.isDocument
[DEBUG] 
%llx diffing package documentID:%u at %@
[CRIT] Assertion failed: relpath.isInPackage || relpath.isPackageRoot
[DEBUG] no package item for documentID:%u at '%@' already gone from disk
[DEBUG] no package item for documentID:%u at '%@', will be scanned
[DEBUG] unable to reopen path for documentID:%u at '%@'
[DEBUG] %@ doesn't match path %@
[DEBUG] %@ matches path %@
[DEBUG] can't read package item at %@: %s - not matching %@
[DEBUG] %s at '%@' in package with documentID:%u is missing in snapshot
    %@
[DEBUG] %s at '%@' in package with documentID:%u is missing in snapshot and on disk
    %@
[DEBUG] %s at '%@' in package with documentID:%u doesn't match
    %@
    %@
[ERROR] Failed iterating with directory enumerator at path %@: (%@)
[DEBUG] package snapshot matches
[CRIT] Assertion failed: relpathInPackage.isInPackage
[CRIT] Assertion failed: _suspendCount >= 0
[CRIT] Assertion failed: scheduler
[CRIT] UNREACHABLE: %@ was deallocated without being closed
[DEBUG] 
%llx Uploader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] 
%llx Downloader: preparing next batch for %@ (max-count:%ld size:%@ priority:%ld)
[DEBUG] Cancelling discretionary operation %@ to make room for a non discretionary operation %@
[DEBUG] Blocking discretionary op %@ on %@
[CRIT] Assertion failed: database
[DEBUG] scheduling %@ on %@
[CRIT] UNREACHABLE: missing group for %@
[CRIT] UNREACHABLE: Exception %@ was raised while trying to enqueue %@
[CRIT] Assertion failed: _isCancelled
[DEBUG] beginning forced foreground for %@ for %.1fs
[DEBUG] forced foreground grace period over for %@
[CRIT] Assertion failed: self->_foregroundState == BRCContainerForegroundStateForcedForeground
[CRIT] UNREACHABLE: there should be no timer created
[DEBUG] beginning foreground grace period for %@ from %@ for %.1fs
[DEBUG] grace period over for %@ %@
[DEBUG] Cancelling foreground grace timer for %@ because we're now foreground again
[DEBUG] fetched quota %llu - %@
[CRIT] UNREACHABLE: itemID %@ has no share name
[CRIT] UNREACHABLE: No share options set on an item which is clearly shared
[ERROR] Couldn't find root share for %@
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_DIRECTORY || _st.type == BRC_ITEM_TYPE_FS_ROOT
[CRIT] Assertion failed: appLibrary.isiCloudDesktopAppLibrary
[CRIT] UNREACHABLE: there is still a fsroot item!
[DEBUG] item isn't a directory anymore
[CRIT] UNREACHABLE: Can't find clientZone for zoneID %@
[CRIT] Assertion failed: self.isLost
[CRIT] Assertion failed: _st.type == BRC_ITEM_TYPE_FS_ROOT || _orig.st.type == BRC_ITEM_TYPE_FS_ROOT
[CRIT] Assertion failed: [db isBatchSuspended]
[DEBUG] Inserting tombstone for alias %@ which is pending target
[CRIT] Assertion failed: sqlite3_value_int(argv[0]) == BRC_ITEM_STATE_TOMBSTONE
[CRIT] UNREACHABLE: a task tracker is required to download a directory
[CRIT] UNREACHABLE: asShareableItem called on a non-shareable item
[DEBUG] trying to reparent to %@, which is a descendent of myself (%@)
[ERROR] Default value %@ is malformed, using %@
[ERROR] Invalid user defaults: %@, using %@
[CRIT] Assertion failed: !_userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx defaults changed
[CRIT] Assertion failed: ![clientZoneIdentifier isEqualToString:kBRCGlobalUserDefaultsKey]
[CRIT] Assertion failed: clientZoneIdentifier && _userDefaultsCache[kBRCGlobalUserDefaultsKey]
[DEBUG] 
%llx config: initial load
[DEBUG] config: not updating the configuration, waiting for next activity callback
[DEBUG] 
%llx config: it's activity time
[DEBUG] 
%llx config: download task finished %@, plist %@
[ERROR] config: session %@ become invalid: %@
[ERROR] config: can't download task %@%@: %@
[DEBUG] config: download finished for %@
[ERROR] failed parsing plist at %@: %@
[DEBUG] Server configuration changed to etag %@
[DEBUG] config: Loaded server configuration from %@
[DEBUG] 
%llx config: asynchronously loading %@
[NOTICE] loading iCloud Drive configuration from disk
[NOTICE] downloading iCloud Drive configuration
[DEBUG] scheduling config download %@
[DEBUG] Loaded cached server configuration %@
[WARNING] Cannot decode configuration plist from the database
[ERROR] Can't save the config plist
[DEBUG] server default for %@: %@
[DEBUG] user default for %@: %@
[CRIT] UNREACHABLE: no version for key: %@
[CRIT] Assertion failed: perVersionDict
[CRIT] Assertion failed: min < max
[CRIT] Assertion failed: min <= def
[CRIT] Assertion failed: def <= max
[ERROR] invalid user default for %@: %@ range:[%d,%d]; using default:%d
[ERROR] invalid user default for %@: %@ range:[%lld,%lld]; using default:%lld
[ERROR] invalid user default for %@: %@ range:[%f,%f]; using default:%f
[ERROR] invalid user default for %@: %@; using default:%s
[ERROR] invalid user default for %@.%@: %@; using default:%@
[DEBUG] We are not blacklisted from %@
[DEBUG] We are not blacklisted from %@ chaining because we are in carry
[DEBUG] We are not blacklisted from %@ because we are on an internal build
[DEBUG] We are not blacklisted from %@ because we are on an internal build and in carry
[DEBUG] We are blacklisted from %@ because %d < %d and %d
[CRIT] Assertion failed: [error intValue] < BRCProblemTypeMaxValue
[CRIT] Assertion failed: defaultValues[key] != nil
[ERROR] invalid user default %@; using:%@
[CRIT] Assertion failed: _item
[CRIT] UNREACHABLE: there should be a logical path for %@
[CRIT] UNREACHABLE: asked the parent of a root item
[ERROR] no parent for %@
[DEBUG] Located by staged fileID at a live path
[DEBUG] sanitized server filename to %@ for %@
[ERROR] parent %@ exists, but failed resolving child %@ %{errno}d
[CRIT] UNREACHABLE: failed resolving child %{errno}d
[DEBUG] Destroying anchor %@
[DEBUG] Destroying anchor %@, databaseBasePath: %@, UUID: %@
[DEBUG] Anchoring %@ at %@ (db at %@)
[ERROR] Unable to serialize property list - %@
[DEBUG] 
%llx account properties changed
[DEBUG] forcing refresh of cellular switch
[DEBUG] 
%llx checking if cellular is enabled for D&D
[DEBUG] cellular is %@ for D&D
[CRIT] Assertion failed: item.st.iWorkShareable
sharing/iWork-publishing
[CRIT] UNREACHABLE: No sharing info and no error
[ERROR] Failed sharing %@ - %@
[DEBUG] %@ was shared
[CRIT] Assertion failed: self->_forPublish
[ERROR] Failed unsharing %@ - %@
[DEBUG] %@ was unshared
[CRIT] Assertion failed: !self->_forPublish
sync-down
[ERROR] Failed to fetch pending change state - %@
[INFO] 
%llx starting fetch record changes operation for %@ from token %@
[INFO] 
%llx got a record in operation %@
[DEBUG] record changed: %@
[CRIT] UNREACHABLE: got a nil record and recordID
[CRIT] Assertion failed: !record || record.etag != nil
[WARNING] got a record we're not interested in: '%@'
[DEBUG] ignoring root record named: %@
[DEBUG] ignoring app library record named: %@
[CRIT] Assertion failed: ![deletedShareRecordIDs containsObject:recordID]
[DEBUG] 
%llx got a deletion in operation %@
[INFO] record was deleted: %@
[CRIT] Assertion failed: subResourcesFetchOp.recordsByID[recordID] == nil
[DEBUG] 
%llx received updated server change token %@ client change token %@ in operation %@ status %ld
[CRIT] UNREACHABLE: broken structure in op %@ (records: %ld edited, %ld deleted)  change token %@
[DEBUG] 
%llx fetch changes completion for zone in operation %@
[DEBUG] 
%llx fetch changes completed for operation %@
[CRIT] Assertion failed: subResourcesFetchOp.recordsByID.count == 0
[ERROR] sync-down failed for %@: %@
[DEBUG] success
[DEBUG] ignoring zone not found error, because we're syncing down for the first time
[DEBUG] can't register pushes: %@
[ERROR] can't create zone or register pushes: %@
[DEBUG] 
%llx Sync: fetching record changes for %@
[DEBUG] 
%llx refetching installed apps list
[DEBUG] forced a refetch of the list of apps
[DEBUG] 
%llx start monitoring cloud apps
[DEBUG] 
%llx asked appIDs for %@
[DEBUG] 
%llx asked containerIDs for %@
[DEBUG] 
%llx asked appIDs
[DEBUG] Checksumming R/W mmaped file at %@
[WARNING] Checksumming failed at %@: %@
[DEBUG] Forcing idle for item we need to download for CZM processing %@
[DEBUG] Item bounced back to the same filename
[DEBUG] Generated bounce name: %@ for %@
[DEBUG] Generated bounce name: %@ for %@ in %d
[ERROR] openat(%d, %@) %{errno}d
[DEBUG] Cannot rename to %@ because it is unprocessed yet
[DEBUG] Very weird, we have missing fsevents on multiple levels of the hierarchy, lets rescan everything
[DEBUG] Marking parent item %@ as lost and clearing the generation ID so we are sure to scan it
[DEBUG] missing item outside of the scope.  Faking fsevent
[DEBUG] On disk item %@ can't sync so treating it as idle
[DEBUG] Apply Changes[%lld]: postponing rank (clashes with an unprocessed item)
[DEBUG] Cannot rename to %@ because it's a non idle fault
[CRIT] Assertion failed: newLogicalName && ![origLogicalName isEqualToString:newLogicalName]
[CRIT] Assertion failed: item.st.stagedFileID != nil
[ERROR] Failed to move the existing fault to old version stage for bounce
[CRIT] UNREACHABLE: Failed to transfer docID to staged item
[CRIT] UNREACHABLE: Failed to move from fault stage to live %@
[DEBUG] Successfully bounced item %@
[CRIT] UNREACHABLE: giving up bouncing %@
[ERROR] Failed rename for bouncing %@ %{errno}d
[DEBUG] Successfully bounced path %@
[ERROR] can't bounce %@ %{errno}d
[NOTICE] Failed to bounce transmogrifiable %@
[NOTICE] Bounced transmogrifiable %@ to %@
[CRIT] API MISUSE: unknown namespace
[CRIT] API MISUSE: never move a reserved item aside
[DEBUG] moving aside missing item %@
[CRIT] Assertion failed: dir.isDirectory
[CRIT] Assertion failed: dirpath.exists
[CRIT] Assertion failed: !dirpath.isDocument
[ERROR] failed opening %@ for scanning %{errno}d
[CRIT] UNREACHABLE: the dirpath is already open, so -openDirectoryForScan should work
[DEBUG] excluded child %d: %@
under directory: %@
[DEBUG] child disappeared: %@
under directory:   %@
[ERROR] can't resolve child: %@
under directory:     %@
for directory item:  %@
 %{errno}d
[DEBUG] can't delete directory %@
at %@
because of child %@
[DEBUG] removing empty directory  %@
[DEBUG] rmdirat(%d, '%@') failed %{errno}d
[DEBUG] removing %@ and its %d excluded children
[DEBUG] Item isn't idle
[DEBUG] Item %@ staged fileID hasn't been flushed yet
[CRIT] UNREACHABLE: Stage tampering - item %@ is no longer staged
[CRIT] UNREACHABLE: Stage tampering - item %@ was edited in stage (%u != %u)
[WARNING] we probably shouldn't have asked coordination in the first place (reserved:%s document:%s additions:%s)
[CRIT] Assertion failed: li.isDocument && !li.isReserved
[ERROR] Item has no desired version set: %@
[CRIT] UNREACHABLE: we shouldn't have asked coordination in the first place
[DEBUG] staged version is stale:
staged: %@
server: %@
diffs:  %@
[WARNING] Moving item to genstore as a readonly edit for %@
[DEBUG] server item is dead, nothing to do for namespace '%s'
[DEBUG] Only applying content diffs on %@
[DEBUG] nothing to do for namespace '%s'
[DEBUG] 
%llx Trying to update pending-update item
local  item: %@
server item: %@
path       : %@
diffs      : %@
[DEBUG] Item is pending-rename to %@
[DEBUG] Learning that server bounced the item in the same way we did
[DEBUG] Cannot update pending-rename item because we don't hold coordination at the destination
[DEBUG] can't update path match in namespace '%s'
[WARNING] the staged fileID isn't yet flushed
[WARNING] nothing to do at that path, will need a new coordination
[CRIT] Assertion failed: [li diffAgainstOriginalItem] == 0
[WARNING] Failed to resolve bounced path %@
[WARNING] Bouncing the source item because it's a shared to me top level item to %@
[DEBUG] Item changed during apply to upload a readonly edit which is now readwrite
[DEBUG] inode doesn't match upload error inode so this must simply be a remote edit being applied
[ERROR] Failed to move item to the genstore for readonly edit %@
[ERROR] Failed to move %@ to graveyard: %@
[ERROR] Failed to unstage %@ [%@] to %@: %@
[DEBUG] renamed from %@ (%@)
        to %@ (%@)
[DEBUG] updated %@
[ERROR] failed renaming to %@ (name:'%@') %{errno}d
[DEBUG] renamed from %@ (name:'%@')
        to %@ (name:'%@')
[DEBUG] Item updated successfully: %@
[DEBUG] 
%llx rewriting all aliases pointing to %@
[WARNING] Applying readonly edit to move to trash for %@
[DEBUG] Found existing folder which already has trash bookmark set
[DEBUG] Existing folder doesn't have the trash bookmark set, trying the next path (%@ vs %@)
[CRIT] UNREACHABLE: Can't find root item for %@
[ERROR] Failed to open the trash URL to set the recovery xattr at %@ %{errno}d
[ERROR] Failed to set the recovery xattr at %@ %{errno}d
[DEBUG] 
%llx Trying to delete pending-delete item
local  item: %@
server item: %@
path       : %@
[WARNING] Shared to me item isn't idle but continuing with deletion anyway
[ERROR] failed removing fault at '%@' %{errno}d
[DEBUG] Trashed item which has diffs to upload %@
[WARNING] failed moving to graveyard with error %@: %@
[WARNING] Can't remove an non-existant path for %@
[WARNING] failed removing dir at '%@': %@
[DEBUG] deleted %@
[WARNING] there is a download error, marking item applied and waiting for subsequent updates
[CRIT] UNREACHABLE: desired version should have been marked live earlier (markLiveAsFault)
[CRIT] UNREACHABLE: We should have applied the content if the staged fileID was flushed for %@
[CRIT] UNREACHABLE: We don't have anything to download for %@, why do we need to apply still?
[DEBUG] 
%llx did apply changes for %@
[CRIT] UNREACHABLE: Can't compose absolute path for %@ and filename %@ because path.absolutePath is nil
[CRIT] UNREACHABLE: Can't compose absolute path for %@ and filename %@
[DEBUG] item application status
 applied: %s
   thumbnail: %s
       fault: %s
     content: %s
   structure: %s
      losers: %s
  desired: %@
  current: %@
   server: %@
[DEBUG] Not fully applied: wantsThumb:%@ wantsFault:%@ wantsContent:%@
[CRIT] Assertion failed: desiredVersion.wantsContent || desiredVersion.wantsThumbnail
[DEBUG] thumbnail is not applied
[CRIT] Assertion failed: !thumbnailApplied
[DEBUG] losers are not applied
[CRIT] Assertion failed: !losersApplied
[DEBUG] content not applied
[CRIT] Assertion failed: !contentApplied
[DEBUG] forcing sending update notification because we updated an addition
[DEBUG] Apply Changes[%lld]: %@ state becomes %s
[DEBUG] Inserting a tombstone for the alias of %@ if necessary
[DEBUG] we still have unapplied changes:
  client item: %@
  server item: %@
  diffs: %@
[DEBUG] Found loser (sending didGainVersion %@)
[DEBUG] Removed loser (sending didLoseVersion %@)
[ERROR] Unable to stage directory: %@
[ERROR] Unable to stage symlink: %@
[WARNING] Can't find addition for %@, clearing upload error
[WARNING] Found readonly edit we need to make live: %@
[DEBUG] Successfully restored readonly edit creating version with existing edit %@
[WARNING] Overriding etag to original value %@ for %@
[ERROR] Failed to restore readonly edit - %@
[WARNING] Retry later, the alias is lost
[DEBUG] unable to relocate %@: %{errno}d
[DEBUG] unable to rename because alias has local unprocessed rename
[DEBUG] Accepting Structural Etag update for %@
[DEBUG] Remove rank for alias with no real changes: %@
[CRIT] Assertion failed: parentItem
[DEBUG] unable to relocate parent of %@: %{errno}d
[DEBUG] Reparented alias from %@ to %@
[DEBUG] unable to rename alias %{errno}d
[DEBUG] syncing down shared database because %@ points to an unknown container
[DEBUG] Target %@ doesn't exist in %scontainer %@, postponing rank: %lld
[DEBUG] Target %@ is in the same app library as %@ postponing rank: %lld
[DEBUG] Failed to make the bookmark live: %@
[DEBUG] Item %s successfully: %@
[DEBUG] unable to delete alias %{errno}d
[DEBUG] Item deleted successfully: %@
[DEBUG] 
%llx Apply Changes[%lld]: %s item: %@
 diffs: %@
[CRIT] Assertion failed: li || si
[CRIT] UNREACHABLE: no client zone when applying %@ and %@
[DEBUG] Don't suspend delete of shared to me item %@
[DEBUG] Suspending rank for item which needs an OOB sync ack %@
[DEBUG] Not suspending download of an item that needs CZM processing %@
[DEBUG] Forcing deletion of item dead in both client and server truth %@
[DEBUG] Suspending rank for item with conflicts: %@%s
[DEBUG] Learning sharing options on local item %@ from %@
[DEBUG] Learning structure etag on item with only side car diffs %@
[CRIT] UNREACHABLE: client zone %@ forgot to sync up!
[DEBUG] Dead item doesn't need any action
[DEBUG] Apply Changes[%lld]: postponing rank (missing parent)%@
[DEBUG] Apply Changes[%lld]: postponing rank (ongoing cross-zone migration)
[DEBUG] Remove rank for item with no real changes: %@
[DEBUG] Found clashing reserved item, probably pending rename, bouncing it
[CRIT] Assertion failed: bounceNumber
[CRIT] Assertion failed: [bounce isEqualToString:clash.st.filename]
[DEBUG] Found a freshly scanned item from an initial scan that path matches: %@
[DEBUG] Suspending rank since freshly scanned means either same content or conflict: %@
[WARNING] Found directory %@ that has a package name, bounced name to %@
[WARNING] No alias pointing to new item shared container, forcing sync down on private container
[DEBUG] Created reservation for %@ item: %@
[DEBUG] Not requesting rename on %@ where we're only applying content diffs
[WARNING] Rejected item was revived.  Marking sync as idle to apply server version for %@
[WARNING] Renaming %@ to %@ which has a package name
[CRIT] Assertion failed: dv
[DEBUG] Retrying item since we can't resolve its destination path: %@
[CRIT] UNREACHABLE: dst %@ isn't equal to computed %@
[DEBUG] the fs root was remotely deleted, we need to recreate it and reupload it
[DEBUG] Apply Changes[%lld]: postponing rank (live child)
[DEBUG] Marking item unknown to server %@ as rejected
[CRIT] Assertion failed: !li.isDead
[DEBUG] Retrying item since we can't resolve its live path: %@
[DEBUG] ignoring dst url because it is the same as the item url
[WARNING] Retrying item because we are trying to rename it into itself: %@ '%@' vs '%@'
[WARNING] Reserved item needs rename %@.  Re-staging to make live again
[DEBUG] found item needing %s:
  client item: %@
  server item: %@
  src path   : %@
  dst path   : %@
  diffs      : %@
[DEBUG] found item needing %s:
  client item: %@
  server item: %@
  path       : %@
  diffs      : %@
[DEBUG] Ignoring destination part of coordination: failed resolving %@
[DEBUG] Ignoring source part of coordination: failed resolving %@
[DEBUG] Ignoring coordination: failed resolving %@
[DEBUG] granting cross-zone coordination request: moving a shared document
[DEBUG] Ignoring destination part of coordination: URLs don't point to the same container: %@ != %@
[DEBUG] 
%llx acquired coordination for (writing%@%@)%@%@%@%@
source lookup: %@
destination lookup: %@
[DEBUG] we just freed %@ when applying changes: scheduling download throttles
[DEBUG] 
%llx fixing up items
[DEBUG] Will acknowledge the last sync down again for %@ (server:%lld, client:%lld)
[CRIT] Assertion failed: requestID <= currentRequestID || currentRequestID == 0
[DEBUG] 
%llx Acknowledge the last sync down again for %@
[DEBUG] 
%llx Fixing up bounced and staged items
[DEBUG] fixing up %@ by marking bounce finished
[DEBUG] fixing up %@ by marking bounce failed
[CRIT] UNREACHABLE: %@ is missing a sync up throttle
[CRIT] UNREACHABLE: %@ has a corrupt upload throttle
[CRIT] UNREACHABLE: side car forgot to schedule sync up!
[CRIT] Assertion failed: db && db.serialQueue
[CRIT] Assertion failed: suspendCount >= 0
sharing/copy-web-auth-token
[ERROR] failed fetching webauth token for %@: %@
[CRIT] Assertion failed: item.serverZone.isSharedZone
[CRIT] UNREACHABLE: reset needed for %@ because the hierarchy is deeper than %u under %@ when looking for %@
[DEBUG] %@: moved %lld throttles from %@ to %@
[CRIT] Assertion failed: ![errorString isEqualToString:@"CKErrorDomain.2"]
[CRIT] UNREACHABLE: error string is not a string value %@
[DEBUG] 
%llx scheduling xattr fetch
fetch-record-subresources
[CRIT] Assertion failed: !_isDoneFetchingRecords
[DEBUG] we need to fetch the xattr
[DEBUG] finished record fetcher
[CRIT] Assertion failed: _recordsWithXattrsToFetch.count == 0
[CRIT] Assertion failed: _recordsWithXattrsToFetch.count
[DEBUG] No xattrs to fetch
[DEBUG] 
%llx fetching %lu xattrs
[DEBUG] 
%llx running the xattr fetch operation
[DEBUG] 
%llx fetched the xattrs for %@
[ERROR] failed to fetch xattr assets for %@: %@
[DEBUG] failed to fetch xattr assets for %@: %@
[CRIT] UNREACHABLE: Received %lu xattr records instead of expected %lu records for %@
[ERROR] Failed to store xattr for signature: %@
[DEBUG] Saved xattr for signature: %@
[CRIT] UNREACHABLE: Unable to save xattrs in the database: %@
[DEBUG] resuming %@
[DEBUG] suspending %@
[CRIT] UNREACHABLE: Invalid components count. It should either be an absolute path or prefixed with file provider id
[ERROR] this method is deprecated
[DEBUG] 
%llx new presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs == nil
[DEBUG] not doing anything since we're logged out
[DEBUG] 
%llx removed presenter of '%@': %@ (%@)
[CRIT] Assertion failed: presentersIDs.count == 1
[CRIT] Assertion failed: [presentersIDs containsObject:filePresenterID]
[DEBUG] '%@' moved to '%@', by %@
[DEBUG] returning purgeable info from cache
purgeableSpaceByUrgency:%@
nonPurgeableSpace:%@
[WARNING] could not retrieve cached purgeable space
[DEBUG] 
%llx recomputing purgeable space for all urgencies
[DEBUG] reclaimable size from db is %@
[DEBUG] reclaimable size from stage is %@
[CRIT] UNREACHABLE: purgeable size is greater than non purgeable size (%lld > %lld)
[DEBUG] computed purgable space by urgency: %@
[DEBUG] not account for local document because optimize storage is set to off
[INFO] Incremental vacuuming %@ took %f seconds reclaimed %@ (size reduction %.2f percent)
[DEBUG] no need to evict, amount requested is %@
[DEBUG] evicted %@ from stage
[WARNING] Can't evict %@: %@
[ERROR] Timed out waiting for eviction!
[DEBUG] not evicting document because optimize storage is off
[DEBUG] evicted %@ from stage and containers
[DEBUG] Purged %@ when asked to purge %@ for urgency %d
[DEBUG] Periodicly reclaimed %@
[DEBUG] non-purgeable space was updated to %@
[CRIT] UNREACHABLE: Couldn't fetch from the db
[DEBUG] 
%llx considering eviction for %@
[DEBUG] %@ isn't automatically evictable because has a pending read
[DEBUG] %@ isn't automatically evictable because has a registered file presenters
[DEBUG] not requesting space because we already have enough (available:%@ > required:%@)
[NOTICE] evicting for storage optimization
[CRIT] Assertion failed: [serverZone isKindOfClass:[BRCSharedServerZone class]]
[CRIT] UNREACHABLE: there is already a share acceptation running for that itemID; %@
[CRIT] Assertion failed: item.isShareAcceptationFault
[CRIT] Assertion failed: volume
[DEBUG] root:%@ can't be opened %{errno}d
[NOTICE] root:'%@' is on device: %@
[WARNING] root %@ changed ino from %llu to %llu
[DEBUG] opened root %@
[DEBUG] device:%u changed uuid from %@ to %@ - falling back to full scan latency:%f
[DEBUG] starting fsevents on device:%u uuid:%@ latency:%f
[DEBUG] resuming fsevents on device:%u uuid:%@ latency:%f from id:%llu
[ERROR] device:%u changed uuid from %{public}@ to %{public}@ - falling back to full scan latency:%f
[ERROR] FSEventStreamCreateRelativeToDevice failed %{errno}d
[DEBUG] 
%llx initial full scan of root:'%@' current-id:%llu
[DEBUG] 
%llx Start monitoring root at %@
[DEBUG] setting rendez-vous:{%@} current:{%@}
[ERROR] failed creating '%@' %{errno}d
[ERROR] failed deleting '%@' %{errno}d
[ERROR] failed generating fsevent for rendez-voud %{errno}d
[DEBUG] signaling rendez-vous:{%@} current:{%@}
[DEBUG] Already need deep scan.  Dropping all incoming events
[DEBUG] Incoming events need deep scan.  Dropping all existing events
[CRIT] Assertion failed: _fseventsToProcess.count < _maxFSEventQueueSize
[WARNING] We've reached the fsevent processing cap. Trying to coalesce pkg level events
[DEBUG] Coalescing event at %@ to pkg root at %@
[WARNING] We still have too many events in the queue, blocking until events are flushed
[WARNING] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s fsevents id wrapped
[WARNING] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s user dropped fsevents
[WARNING] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s dropped fsevents
[CRIT] UNREACHABLE: We should try our best to avoid dropping fsevents
[NOTICE] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s done processing history
[DEBUG] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s ignored (own event)
[DEBUG] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s ignored %{errno}d
[NOTICE] fsevent:%u/%u path:'%@' flags:%@ id:%llu%s root needs deep-scan
[ERROR] can't stat root at '%@' after fsevent %{errno}d
[CRIT] the root changed fileID
  from %@
    to deviceID:%u fileID:%llu mode:%c%c%c%c%c%c%c%c%c%c nlink:%u uid:%u gid:%u atime:%lu mtime:%lu ctime:%lu size:%llu flags:0x%x
[ERROR] ubd is still running
[INFO] 
%llx fsevent:%u/%u path:'%@' flags:%@ id:%llu%s %@
[DEBUG] 
%llx closing the %@
[DEBUG] resetting the %@ because of %@
[DEBUG] 
%llx reset: drained all fsevents from the old stream
[DEBUG] creating the new stream
[DEBUG] suspending - suspendCount:%d->%d
[DEBUG] resuming - suspendCount:%d->%d
[ERROR] failed starting fsevent stream %{errno}d
[DEBUG] draining %lu fsevents
[DEBUG] Pretending excluded path is OwnEvent %@
[DEBUG] [%@] has been initialized
[DEBUG] [%@] has been invalidated
[DEBUG] [%@] has been reset
[DEBUG] reachability flags: %x
[NOTICE] Network really becomes %sreachable
[NOTICE] Power level really becomes %s
[DEBUG] disk %@ has %senough space now
[CRIT] Assertion failed: deviceID != 0
[CRIT] Assertion failed: _memoryNotificationEventSource == NULL
[DEBUG] Memory warning received
[DEBUG] not monitoring %d because BKS doesn't know its bundleID
[DEBUG] 
%llx received a notif for %@ from BKS: %@
[DEBUG] Received an app install notification
[DEBUG] Power level is now %s
[ERROR] fsctl(dev=%d) failed %{errno}d
[DEBUG] pending migrations: %@
[DEBUG] Ignoring share alias migration key for %@ because the user default is no
[DEBUG] pending migration for %@: %@ from cursor:%@
[DEBUG] no pending migration for %@
[CRIT] UNREACHABLE: unknown migration completed for container %@
[ERROR] can't open %lld to set metadata for %lld %{errno}d
[ERROR] can't open live path %lld to set metadata %{errno}d
[DEBUG] 
%llx fixing up staged item %@
[DEBUG] staged file ID is in the graveyard, start over
[DEBUG] item is no longer in stage %@
[DEBUG] 
%llx live file ID was swapped and is now in the stage, moving to the graveyard
[ERROR] Can't resolve path %@ %{errno}d
[WARNING] We have a conflicting item %@ which needs to get bounced away
[WARNING] Clearning staged item with zero generationID for item %@
[CRIT] UNREACHABLE: item %@ was edited in stage (generationID = %lu)
[DEBUG] reserved item is still staged for creation
[DEBUG] item is still staged for update
[DEBUG] item is still staged but already moved to graveyard, making it reserved
[CRIT] Assertion failed: self.hasPid
[CRIT] Assertion failed: _hasAuditToken
[DEBUG] %@ is restricted from sync (TCC)
[DEBUG] %@ is restricted from sync (MC)
[CRIT] UNREACHABLE: Copying share for item %@ that does not have a server zone
[CRIT] UNREACHABLE: Item's %@ server zone %@ is missing sync context while coping share
[WARNING] Fetching the root share object for shared to me child item %@
sharing/copy-share
[CRIT] UNREACHABLE: Can't find root itemID %@
[CRIT] UNREACHABLE: Can't find URL for root itemID %@
[WARNING] No sharing identity on %@
[WARNING] No base token on %@
[DEBUG] Sync: blacklist %@ because it needs a newer OS to sync up
[DEBUG] Sync: blacklist %@ and all dependents because %llu nsecs to retry
[DEBUG] marking needs-upgrade %@ and its descendants
[WARNING] item with shareID %@ is moving into a shared parent %@%s
[DEBUG] Just learning share property changes from %@
[DEBUG] We need to unshare %@
[CRIT] UNREACHABLE: Unexpected item %@. Ignoring
[DEBUG] Sync: blacklist %@ for item share-within-share processing
[DEBUG] Sync: blacklist %@ because it is moving into a share and has shared children
[WARNING] Unsharing turd folder share %@ because it now has shared children
[DEBUG] Sync: blacklist %@ because it needs pcs chaining
[WARNING] Parent item needs to be revived to sync up %@
[DEBUG] Not waiting for deletes because of a default
[WARNING] Sync: blacklist %@ until the delete of its child
[DEBUG] Sync: blacklist %@ because it's an unresolved path-match with %@
[DEBUG] Sync: blacklist %@ because we have a lost item at the same path in the server truth - %@
[WARNING] max depth %u reached at %@
[DEBUG] Sync: blacklist %@ because it's lost
[DEBUG] Sync: blacklist %@ because it's already being processed for CZM
[CRIT] UNREACHABLE: reset needed for %@ because of orphan %@
[CRIT] Assertion failed: n
[DEBUG] Embargoing item %@: it has %@ unsynced children
[DEBUG] Item %@ is embargoed: %@ unsynced children
[DEBUG] Item %@ is un-embargoed
[DEBUG] Embargoed item %@ has now %@ unreturned dead children left
[DEBUG] item %@ isn't embargoed
[DEBUG] blacklist all children deletes when leaving top level folder share %@
[CRIT] Assertion failed: item.isDead
[DEBUG] blacklisting %@ and its descendants
[DEBUG] Sync: enumerating documents needing sync up
[DEBUG] Sync: enumerating live or new directories
[DEBUG] Sync: enumerating tombstones
[DEBUG] preparing to sync up %@
sync-up/container-metadata
[DEBUG] no records to save
[DEBUG] preparing to send %lu records
[DEBUG] completed sync up for %lu records: %@
[NOTICE] saved %lu containers metadata in the cloud
[DEBUG] adding sub-operation to save the records: %@
[DEBUG] 
%llx Sync: syncing up container metadata
non-local-versions
[DEBUG] 
%llx Fetching thumbnail for non-local version %@ etag %@
[DEBUG] 
%llx Received non local thumbnail record: %@ result: %@
[CRIT] UNREACHABLE: CK sent us no results and no error
[CRIT] UNREACHABLE: CK sent a bogus ETag: %s != %s
[CRIT] UNREACHABLE: CK couldn't fetch the thumbnail and set no error
[DEBUG] Successfully added thumbnail to version at %@
[ERROR] Failed to attach thumbnail to version: %@
[DEBUG] 
%llx Got %lu versions for %@ (recordID:%@ %@)
[DEBUG] Considering etag %@ %@
[DEBUG] Skipping current version
[ERROR] Unable to deserialize record: %@
[DEBUG] The version is already cached locally, skip it
[ERROR] Version is lacking a name
[ERROR] Unable to create fault for '%@': %@
[WARNING] User has no formatted name
[DEBUG] sending %@ at '%@'
[DEBUG] Thumbnail is already present, not downloading twice
[DEBUG] completed fetching non-local versions of %@
[DEBUG] 
%llx Getting versions for %@
[DEBUG] scheduling operation %@
QHg:
OfflineInitialization
BRCBookmarkAdditions
BRFieldCKInfo
NSCopying
BRCSideCarInfo
BRCVolume
BRCSideCarSyncDownOperation
BRCOperationSubclass
NSObject
BRCURLToItemLookup
NSSecureCoding
NSCoding
BRCDownloadTrackers
BRCPQLConnection
_BRCOperation
_BRCFrameworkOperation
BRCancellable
BRCSharedDatabaseSyncOperation
BRCNotificationAdditions
BRCNotification
BRFieldFinderTags
BRCAdditions
BRCProgress
BRCSharedToMeTopLevel
BRCDaemonContainerHelper
BRContainerHelper
BRCDatabaseNeedsReset
BRCDatabaseFromTheFutureException
0 1@
BRCDatabaseManager
BRCAccountOnlinePerformer
BRCReachabilityDelegate
BRCAccountMigrator
BRCAccountMigrationChecker
BRCAccountHandler
MCProfileConnectionObserver
BRCFinderBookmarkItem
BRCAliasItem
BRCAnalyticsReporter
BRCEventMetric
BRCFSEventToSyncUpEvent
BRCUserDownloadEvent
BRCMetricEndpoint
BRCCKMetricEndpoint
BRCTransferFailureReport
BRCSyncHealthReport
BRDiskCheckerServiceProtocol
BRCSyncConsistencyReport
BRCExtensionErrorPayload
BRCSharingFetchUserRecordIDOperation
BRCZoneHealthCheckOperation
BRCStatInfo
BRCVersion
BRCSignatureAdditions
BRFieldPkgItem
BRCNotificationManager
BRCModule
BRCLifeCycle
BRCRelativePath
BRCAutoBugCaptureReporter
BRCMinHeap
NSFastEnumeration
BRCChecksummingOutputStream
BRCSideCarSyncUpOperation
BRCAccountWaitOperation
AppTelemetryInvestigation
AppTelemetryDriveTelemetryExtension
BRCReachabilityObserver
BRCEvictItemOperation
BRItemNotificationReceiving
BRCThrottle
BRCFSSchedulerBase
BRCDataOrDocsScopeGatherer
BRCNotificationPipe
IPCs
BRItemNotificationSending
BRCUserNotification
BRCUserNotifier
BRCBookmark
BRCShareAcceptWaiterInfo
BRCDaemon
NSXPCListenerDelegate
BRCAccountHandlerDelegate
BRCProtocolBufferAdditions
PQLValuable
PQLBindable
BRCApplyJobIdentifier
BRCApplyScheduler
BRCSuspendable
BRCSyncThrottle
BRCDatabaseBackupManager
BRCALRowID
BRCAppLibrary
BRCForegroundClient
BRCRetryCounter
BRCThrottleBase
BRCDownloadJobIdentifier
BRCJobIdentifying
BRCJobsMatching
BRCFSDownloaderBatchEnumerator
BRCFSDownloader
BRCDumpContext
BRCShareAcceptationFault
BRCZoneReset
BRCZoneMigration
BRCLocalStatInfo
BRCLocalItem
BRCSyncThrottleItemProtocol
BRCItem
BRCStageAdditions
BRCContainerScheduler
APSConnectionDelegate
BRCClientZoneDelegate
BRCAppLibraryDelegate
BRCFetchiWorkSharingInfoOperation
BRCLocalVersion
BRCDocumentItem
BRCTopLevelShareable
BRCFileCoordinatorContext
BRCFileCoordinator
BRCContainerMetadataSyncDownAdditions
BRCContainerMetadataSyncDownOperation
BRCUpload
BRCTransfer
BRCUploadBatchOperation
BRCServerZone
BRCZone
BRCDatabaseBackupStorage
CKConversions
BRCItemAdditions
BRCSerializationAdditions
BRCContainerMetadataAdditions
BRCZoneHealthAdditions
BRCWorkAround
BRCSharingAdditions
BRCSyncUpOperation
BRCSharingAcceptFlowOperation
LSOpenResourceOperationDelegate
BRAdditions
PathResolution
BRCSyncOperationThrottle
BRCSyncBudgetThrottle
BRCSyncOperationBackoffRatio
BRiWorkSharingInfo
DatabaseMigrationHelpers
BRCItemID_v9
BRCClientZone
BRCPersistedState
BRFieldXattr
BRCCryptographicAdditions
BRCLazyPackage
BRCAcceptShareOperation
AppTelemetryTelemetryMessage
BRCPrivateClientZone
_BRCTransferInfo
_BRCUploadInfo
_BRCDownloadInfo
BRCGlobalProgress
BRCSyncUpOperationBuilder
BRCClientRanksPersistedState
BRCServerStatInfo
BRCServerItem
BRCPathToItemLookup
BRCDaemonSyncedRootURLCache
BRSyncedRootURLCache
BRCItemID
BRCAddition
BRCPackageManifestReader
BRCPackageManifestWriter
BRCPackageChecksummer
SchedulingAdditions
BRCItemTransmogrifier
BRCContainerFindByName
BRCDatabaseRestoreManager
BRCMigrationQueryOperation
Daemon
BRCFileProvidingRequestOperation
BRCDownloadTracking
BRCSharingModifyShareOperation
BRCSharingSaveShareOperation
BRCSharingDestroyShareOperation
BRCSharingLookupParticipantsOperation
BRCSharingModifyAccessOperation
BRCSharingCopyParticipantTokenOperation
BRCSharingPCSChainFolderOperation
BRCSharingCopyShareURLOperation
BRCSharingCopyShortTokenOperation
BRCShareDeleteInfo
BRCSharingProcessFolderSubitemsOperation
BRCTransferStream
BRCSharingCopyAccessTokenOperation
BRFieldXattrBlob
BRCSymlinkItem
BRCCreateZoneAndSubscribeOperation
BRCZonePurgeOperation
BRCStagePersistedState
BRCStageRegistry
BRCLowDiskDelegate
BRCVersionsFileProvider
BRCPackageAdditions
BRCRecentsChangeToken
BRCRecentsEnumeratorBatch
BRCRecentsEnumerator
BRCDownload
Downloads
BRCDownloadThumbnail
BRCDownloadThumbnailsBatchOperation
BRCDownloadContent
BRCDownloadContentsBatchOperation
BRCDownloadVersion
BRCDownloadVersionsBatchOperation
BRCZoneRootItem
BRCFSRooted
BRCThrottler
BRCPrivateServerZone
BRCSharedServerZone
BRCDatabaseBackupRecord
BRCSyncUpScheduler
BRCFSUploader
BRCHalfChainInfo
BRCPCSChainAdditions
BRCPCSChainInfo
BRCPCSChainBatchInfo
BRCPCSChainBreadthEnumerator
BRCPCSChainEnumerator
BRCPCSChainingOperation
BRFieldPkgLocalItem
BRCItemGlobalID
BRCCrossZoneMoveExtension
BRCMigrateZonePCSOperation
BRCAccountSession
BRCCloudDocsAppsObserver
BRBundleServiceProtocol
BRCTransferBatchOperation
BRCDumper
BRCProblem
BRCProblemReport
BRCServerZoneHealthState
BRCQuarantine
BRCLazyXattrsCollection
BRCFileUnlinker
BRCTreeEnumerator
BRCUploadAllFilesTrackerOperation
BRCAllItemsDidUploadTracker
BRCShareURL
brc_task_tracker
BRCFSReader
BRCFSEventsDelegate
BRCUncancellableBlockOperation
BRCPendingChangesStream
BRFieldUserIdentity
AppTelemetryTimeSeriesEvent
BRCSharedServerItem
BRCUbiquitousAttributes
BRCFairScheduler
BRCFairSource
BRCAggregateOperation
BRCContainerMetadataSyncPersistedState
BRCZoneHealthSyncPersistedState
BRCSideCarSyncPersistedState
BRCCountedSet
BRCDirectoryBreadthEnumerator
BRCDirectoryEnumerator
BRCAsyncDirectoryEnumerator
BRCXPCClient
BRCProcessMonitorDelegate
BRCNotificationPipeDelegate
BRCXPCTokenClient
BRTokenProtocol
BRFileCoordinationProvider
BRCXPCRegularIPCsClient
BRProtocol
CKXPCShareDaemon
BRCPeriodicSyncOperation
BRCDesiredVersion
BRCZoneHealthReportOperation
BRCPackageItem
BRCZoneRowID
BRCDeadlineSource
BRCDeadlineScheduler
BRCSyncContext
BRCFetchQuotaOperation
BRCShareIDAdditions
BRCDirectoryItem
BRCSyncOperationThrottleParams
BRCUserDefaultsManager
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
BRCUserDefaults
BRCItemToPathLookup
BRCContainerCellularSettings
BRCiWorkPublishingOperation
BRCSyncDownOperation
BRCErrorGrouping
BRFieldPkgHeader
BRCTermDumper
BRCCloudDocsAppsMonitor
BRCAppListMonitorDelegate
BRCGenerationID
Bouncing
BRCFSWriter
BRCSharingCopyWebAuthTokenOperation
ItemFetching
BRCFSTransferScheduler
BRCFetchRecordSubResourcesOperation
BRCFileProvider
NSFileProvider
BRCDiskSpaceReclaimer
BRCSharedClientZone
BRCFSEventsPersistedState
BRCFSEvent
BRCFSEventsMonitor
BRCClientState
BRCSystemResourcesManager
BRReachabilityObserver
BRCCoreAnalyticsReporter
BRCServerChangeState
BRCServerPersistedState
BRCClientPrivilegesDescriptor
BRCSharingCopyShareOperation
BRCSyncUpEnumerator
BRCPkgItemAdditions
BRCContainerMetadataSyncUpAdditions
BRCContainerMetadataSyncUpOperation
BRCNonLocalVersionsSender
BRNonLocalVersionSending
BRCItemDBRowIDJobIdentifier
BRCIntAndZoneJobIdentifier
BRCItemDBRowIDAndZoneJobIdentifier
setSession:
dbRowID
setObject:forKeyedSubscript:
isSharedZone
asSharedZone
mangledID
zoneName
objectForKeyedSubscript:
associateWithServerZone:offline:
addOfflineServerZone:
addOfflineClientZone:
addOfflineAppLibrary:
stringWithFormat:
brc_SHA1WithSalt:
stringByAppendingPathComponent:
bookmarkDataWithItemResolutionString:serverZoneName:ownerName:accountID:salted:
description
dictionaryRepresentation
dictionary
numberWithBool:
setObject:forKey:
setEtag:
setEtagBeforeCrossZoneMove:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setKnownToServer:
setHasKnownToServer:
hasKnownToServer
setWasCached:
setHasWasCached:
hasWasCached
hasEtag
hasEtagBeforeCrossZoneMove
readFrom:
writeTo:
copyTo:
mergeFrom:
knownToServer
wasCached
etag
etagBeforeCrossZoneMove
.cxx_destruct
_etag
_etagBeforeCrossZoneMove
_knownToServer
_wasCached
_has
TB,N
TB,N,V_knownToServer
TB,N,V_wasCached
TB,R,N
T@"NSString",&,N,V_etag
T@"NSString",&,N,V_etagBeforeCrossZoneMove
initWithCapacity:
appendFormat:
descriptionWithContext:
debugDescription
hasfieldsToSync
ckInfo
setCkInfo:
favoriteRank
setFavoriteRank:
lastUsedTime
setLastUsedTime:
finderTags
setFinderTags:
_ckInfo
_favoriteRank
_lastUsedTime
_finderTags
T@"BRFieldCKInfo",&,N,V_ckInfo
Tq,N,V_lastUsedTime
Tq,N,V_favoriteRank
T@"NSData",&,N,V_finderTags
deviceID
absolutePath
performOnOpenFileDescriptor:error:
br_errorWithPOSIXCode:
defaultManager
mountPath
attributesOfFileSystemForPath:error:
setUpForRelPath:session:error:
fsTypeName
freeSize
totalSize
isCaseSensitive
isIgnoringOwnership
hasRenameExcl
hasRenameSwap
hasCloning
_stfs
_isCaseSensitive
_isIgnoringOwnership
_hasRenameExcl
_hasRenameSwap
_hasCloning
_deviceID
Ti,R,N,V_deviceID
TB,R,N,V_isCaseSensitive
TB,R,N,V_isIgnoringOwnership
TB,R,N,V_hasRenameSwap
TB,R,N,V_hasRenameExcl
TB,R,N,V_hasCloning
T@"NSString",R,N
T@"NSNumber",R,N
sideCarSyncContext
initWithName:syncContext:
initWithZoneName:ownerName:
session
initWithSession:zoneID:
completedWithResult:error:
_createSyncDownOperation
setCreateZoneAndSubscribeCompletionBlock:
addSubOperation:
length
bytes
serverDB
countByEnumeratingWithState:objects:count:
recordID
brc_itemIDWithSession:
deserializeSideCarInfo:error:
numberWithLongLong:
locateSideCarServerZone:shareRecordName:withSession:
recordName
execute:
changes
addObject:
locateSideCarServerZone:withSession:
count
allocateRanksWhenCaughtUp:
saveServerZoneToDB:
serverState
nextRank
performWithFlags:action:
clientDB
containerScheduler
sideCarSyncPersistedState
requestID
itemsWithSideCarInFlightDiffsEnumerator
markLatestSyncRequestAcknowledgedInZone:
markLatestSyncRequestFailedInZone:
saveToDBForServerEdit:keepAliases:
updateWithServerChangeToken:requestID:
applyScheduler
clientZone
currentRequestID
didSyncDownZone:requestID:upToRank:caughtUpWithServer:
defaultsForSideCar
setPreviousServerChangeToken:
maxRecordCountInFetchRecordsOperation
setResultsLimit:
desiredKeysWithMask:
setDesiredKeys:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setShouldFetchAssetContents:
shouldFetchAllChanges
setFetchAllChanges:
recordType
isEqualToString:
containsObject:
removeObject:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
allValues
_saveChangedRecords:deletedRecords:serverChangeToken:clientChangeToken:
removeAllObjects
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
_createZone
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
TQ,R
T#,R
T@"NSString",R,C
main
shouldRetryForError:
initWithSession:changeToken:
createActivity
_serverChangeToken
encodeInt32:forKey:
encodeObject:forKey:
encodeInt64:forKey:
decodeInt32ForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
path
stringByAbbreviatingWithTildeInPath
itemID
debugItemIDString
appendString:
initWithURL:allowAppLibraryRoot:session:db:
stringByDeletingLastPathComponent
lastPathComponent
br_isSideFaultName
isFileReferenceURL
initWithURL:allowAppLibraryRoot:session:
resolveParentAndKeepOpenMustExist:errcode:
relpath
type
resolvedOpenRelpathForPath:mustExist:allowResolveInPkg:errcode:
exists
isUnixDir
close
appLibrary
defaultClientZone
fetchZoneRootItemInDB:
fetchRootItemInDB:
fileID
globalItemByFileID:db:
pathWithChildAtPath:
initWithAbsolutePath:session:
resolveAndKeepOpenMustExist:error:
diffAgainstServerItem:
parentItem
filename
itemByParentID:andPhysicalName:db:
isFault
isReserved
serverItemByItemID:db:
refreshByPathDiffs
_fetchPathMatch
refreshFromPathMustExist:
isDocument
initWithRelativePath:db:
documentID
itemByDocumentID:db:
itemByFileID:db:
refreshByIDDiffs
_fetchIDMatch
_fetchRelPath
_fetchFaultedMatch
faultByParentID:andLogicalName:db:
br_sideFaultName
globalItemByDocumentID:db:
asDocument
refreshFaultedDiffs
reservedItemByParentID:andLogicalName:db:
_fetchReservedPathMatch
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithURL:session:
resolveAndKeepOpenWithError:
closePaths
byPathMatch
byPathLocalItem
byPathRelpath
byPathServerItem
byPathDiffs
clearByPathItem
byIDMatch
byIDLocalItem
byIDServerItem
byIDDiffs
clearByIDItem
faultedMatch
faultedRelpath
faultedServerItem
faultedLocalItem
faultedDiffs
clearFaultedItem
pathType
reservedMatch
reservedLocalItem
reservedServerItem
clearReservedItem
parentRelpath
parentPath
_session
_hasFetched
__relpath
_allowAppLibraryRoot
_url
_parentRelpath
_parentItem
_filename
_parentPath
_byIDLocalItem
_byIDServerItem
_byIDDiffs
_byPathLocalItem
_byPathServerItem
_byPathDiffs
_faultedLocalItem
_faultedServerItem
_faultedRelpath
_faultedDiffs
_reservedLocalItem
_reservedServerItem
T@"BRCPQLConnection",R,N,V_db
T@"NSURL",R,N,V_url
T{?=@@@@Q},R,N
T@"BRCLocalItem",R,N,V_byIDLocalItem
T@"BRCServerItem",R,N,V_byIDServerItem
T@"BRCRelativePath",R,N
TQ,R,N,V_byIDDiffs
T@"BRCLocalItem",R,N,V_byPathLocalItem
T@"BRCServerItem",R,N,V_byPathServerItem
TQ,R,N,V_byPathDiffs
T@"BRCDocumentItem",R,N,V_faultedLocalItem
T@"BRCServerItem",R,N,V_faultedServerItem
T@"BRCRelativePath",R,N,V_faultedRelpath
TQ,R,N,V_faultedDiffs
T@"BRCLocalItem",R,N,V_reservedLocalItem
T@"BRCServerItem",R,N,V_reservedServerItem
T@"BRCRelativePath",R,N,V_parentRelpath
T@"BRCLocalItem",R,N,V_parentItem
T@"NSString",R,N,V_filename
T@"NSString",R,N,V_parentPath
TS,R,N
strongToStrongObjectsMapTable
objectForKey:
removeObjectForKey:
orig
copy
downloadTrackedForItemWithDocID:didFinishWithError:
assertOnQueue
allKeys
intValue
pendingDownloadItemWithDocumentID:
desiredVersion
size
initWithSession:
addDownloadTracker:forItemWithDocID:
removeDownloadTracker:
document:didCompleteDownloadWithError:
spaceRequiredForTrackers
hasPendingTrackerForDocumentID:
_trackersByDocID
_docIDsByTracker
initWithLabel:dbCorruptionHandler:
_setErrorHandlerWithDBCorruptionHandler:
_setLockedHandler
setLabel:
defaultsForMangledID:
dbTraced
setTraced:
setCrashIfUsedAfterClose:
code
UTF8String
setSqliteErrorHandler:
currentOperationDuration
setLockedHandler:
openAtURL:withFlags:error:
setupPragmas
lastError
brc_close
profilingHook
stringWithUTF8String:
stringByAppendingString:
setProfilingHook:
initWithFormat:
executeRaw:
isInTransaction
flush
forceBatchStart
fetch:args:
fetchObjectOfClass:sql:args:
execute:args:
sqliteErrorHandler
serialQueue
_shouldFlushWithChangeCount:
useBatchingOnTargetQueue:withPolicyHandler:
close:
numberWithSQL:
integerValue
dbAutovacuumRatio
dbAutovacuumBatchSize
autovacuumableSpaceInBytes
sizeInBytes
needsAutovacuum
incrementalVacuum:
manager
connectedToPowerSource
autovacuumIfNeeded
profilingEnabled
setProfilingEnabled:
attachDBAtPath:as:error:
flushToMakeEditsVisibleToIPCReaders
fetchWithSlowStatementRadar:sql:
fetchWithSlowStatementRadar:objectOfClass:sql:
executeWithExpectedIndex:sql:
executeWithSlowStatementRadar:sql:
executeWithErrorHandler:sql:
disableProfilingForQueriesInBlock:
usePacedBatchingOnTargetQueue:withInterval:changeCount:
vmStepsExecuted
isReadonly
_batchingPacer
_changeCount
_flushInterval
_flushImmediately
_autovacuumInProgress
_changesOverride
_isReadonly
_vmStepsExecuted
TQ,R,N,V_vmStepsExecuted
lockedHandler
T@?,C,D,N
TB,R,N,V_isReadonly
string
rawInjection:length:
fetch:
next
stringAtIndex:
initWithUUIDBytes:
raise:format:
setName:
date
operationFailureThrottle
setQualityOfService:
initWithName:syncContext:group:
dealloc
qualityOfService
isCancelled
highlightedString:type:context:
isExecuting
isFinished
nowDateFromContext:
stringFromOperationUUID:context:
name
subclassableDescriptionWithContext:
stateWithContext:
timeIntervalSinceDate:
stringFromInterval:context:
usesBackgroundSession
stringFromDueDate:allowsPast:context:
stringFromError:context:
dependencies
willChangeValueForKey:
didChangeValueForKey:
errorWithDomain:code:userInfo:
finishWithResult:error:
_finishIfCancelled
mainBlock
setExecuting:
setupIfNeeded
removeDependency:
operationThrottle
incrementRetryCount:
_main
br_suggestedRetryTimeInterval
throttleHashFormat:
nsecsToNextRetry:now:increment:
nonDiscretionary
maxBackoffToRetryUserInitiated
distantFuture
_executeWithPreviousError:
dateWithTimeIntervalSinceNow:
callbackQueue
group
setGroup:
addOperation:
finishIfCancelled
_scheduleExecutionWithPreviousError:
cancel
brc_isUserInitiatedRetriable
brc_isRetriable
setFinished:
brc_isBlacklistError
_completedWithResult:error:
isTelemetryReportingEnabled
analyticsReporter
telemetryHeaderSupportedClasses
clientTruthWorkloop
syncTelemetryEventsToSend
operationID
configuration
additionalRequestHTTPHeaders
mutableCopy
base64EncodedStringWithOptions:
setAdditionalRequestHTTPHeaders:
container
options
setCaptureResponseHTTPHeaders:
responseHTTPHeaders
setNumberStyle:
numberFromString:
updateCurrentTelemetryToken:
setRequestCompletedBlock:
addDependency:
queuePriority
setQueuePriority:
UUIDString
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
_setTelemetryHeaderOnCKOpIfNecessary:
completionBlock
associateWithCompletedOperation:
setCompletionBlock:
setNonDiscretionary:
addOperation:allowsCellularAccess:
addSubOperation:overrideContext:allowsCellularAccess:
initWithName:
isConcurrent
error
schedule
start
associateCKOperationsToEventMetric:
setOperationThrottle:
setOperationFailureThrottle:
setMainBlock:
finishBlock
setFinishBlock:
logSections
startDate
syncContext
_syncContext
_operationUUID
_internalQueue
_executionTransaction
_startDate
_finishDate
_lastTryDate
_nextTryDate
_lastError
_throttleHash
_retryTimer
_group
_Activity
_associatedEventMetrics
_finished
_nonDiscretionary
_callbackQueue
_operationThrottle
_operationFailureThrottle
_mainBlock
_finishBlock
_logSections
_operationGroup
executing
TB,N,GisExecuting
finished
TB,N,GisFinished,V_finished
TB,N,V_nonDiscretionary
T@"NSUUID",R,N
T@"NSDate",R,N,V_startDate
T@"BRCSyncContext",R,N,V_syncContext
T@"CKOperationGroup",&,N,V_operationGroup
T@"NSError",R,N,V_lastError
TQ,R,N,V_logSections
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
T@"BRCThrottle",N,V_operationThrottle
T@"BRCThrottle",N,V_operationFailureThrottle
T@?,C,N,V_mainBlock
T@?,C,N,V_finishBlock
invalidate
remoteObjectProxyWithErrorHandler:
setRemoteOperationProxy:userInfo:
setRemoteClientProxy:
descriptionAdditionalStringWithContext:
remoteClientProxy
ignoreMissingRemoteClientProxy
setIgnoreMissingRemoteClientProxy:
_startedFinish
_ignoreMissingRemoteClientProxy
_remoteClientProxy
T@"NSObject<BROperationClient>",&,N,V_remoteClientProxy
TB,N,V_ignoreMissingRemoteClientProxy
shareDBSyncCompletionBlock
boolValue
setShareDBSyncCompletionBlock:
ownerName
userKeyForName:db:
createUserKeyForName:
groupInTransaction:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
brc_cloudKitErrorForSubscriptionID:
brc_containsCloudKitInternalErrorCode:
setModifySubscriptionsCompletionBlock:
changeToken
initWithPreviousServerChangeToken:
queue
setCallbackQueue:
sharedDBSyncDownBatchRecordsCount
array
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
initWithRecordZoneID:
getOrCreateSharedZones:
scheduleSyncDown
updateWithServerChangeToken:clientRequestID:syncDownStatus:
numberWithInt:
_performAfterAddingOwnerKeysForZoneIDs:block:
setFetchDatabaseChangesCompletionBlock:
_performFetchChangedZones
_performAfterRegisteringForPushes:
initWithSyncContext:changeState:group:
_changeState
_shareDBSyncCompletionBlock
T@?,C,N,V_shareDBSyncCompletionBlock
isFinderAlias
modificationTime
numberWithLong:
isSymLink
appLibraryID
faultDisplayName
fileObjectID
parentFileObjectID
setAttribute:forKey:
isFile
birthTime
initWithRelPath:error:
allObjects
componentsJoinedByString:
initWithFileID:
isBRAlias
isAlmostDead
itemGlobalID
itemParentGlobalID
logicalName
isInDocumentScope
isInDataScope
isInTrashScope
parentClientZone
fromReadOnlyDB
isFSRoot
sharingOptions
brc_fetchShareIDWithSharedItem:
brc_shareItemID
itemByItemID:db:
folderID
parentFileID
unsignedLongLongValue
root
br_pathWithFileSystemRepresentation:
initWithData:
tagsCount
tags
mode
birthtime
isUserVisible
creatorRowID
nameComponentsForKey:db:
uploadStatus
isDead
digestDescription
isShareAcceptationFault
isKnownByServer
ownerKey
currentVersion
lastEditorRowID
isEqualToNumber:
physicalName
isHiddenExt
wantsContent
editedSinceShared
mtime
isFinderBookmark
liveConflictLoserEtags
fsDownloader
isDownloadingItem:
fsUploader
isUploadingItem:
downloadStatus
downloadError
brc_wrappedError
uploadError
isDownloadRequestedForThumbnail
isDownloadRequested
isDirectory
syncUpError
asDirectory
isSharedByMeOrContainsSharedByMeItem
isSharedToMeOrContainsSharedToMeItem
childItemCount
numberWithUnsignedInteger:
isLost
notificationFromItem:relpath:
isZoneRoot
asBRAlias
initWithAliasItem:itemDiffs:
initWithLocalItem:itemDiffs:
changedAtRelativePath:scanPackage:
stagedFileID
stagedGenerationID
generationID
fsGenerationID
longValue
longLongValue
volume
targetItemID
targetClientZone
asShareableItem
targetAppLibrary
_addAliasDecoration:
isEqualToItemGlobalID:
isEqualToFileObjectID:
merge:
unionSet:
fileURLWithPath:
URLByAppendingPathComponent:
isDocumentsFolder
notificationGatheredFromItem:
notificationWithAliasItem:targetItemNotification:
subclassDescription
oldParentFileObjectID
classForCoder
setNumberAttribute:forKey:
notificationByStrippingSharingInfoIfNeeded
canMerge:
generateLogicalExtension:physicalExtension:
parentGlobalID
oldParentFileID
parentGlobalIDs
setParentGlobalIDs:
appLibraryIDsWithReverseAliases
setAppLibraryIDsWithReverseAliases:
oldAppLibraryID
aliasSourceAppLibraryID
unsaltedBookmarkData
setUnsaltedBookmarkData:
_isInDocumentScope
_isInDataScope
_isInTrashScope
_itemGlobalID
_parentGlobalID
_oldParentFileID
_parentGlobalIDs
_appLibraryIDsWithReverseAliases
_appLibrary
_oldAppLibraryID
_aliasSourceAppLibraryID
_unsaltedBookmarkData
T@"BRCAppLibrary",R,N,V_appLibrary
T@"NSString",R,N,V_aliasSourceAppLibraryID
T@"BRCItemGlobalID",R,N,V_itemGlobalID
T@"BRCItemGlobalID",R,N,V_parentGlobalID
TQ,R,N,V_oldParentFileID
T@"BRFileObjectID",R,N
T@"NSString",R,N,V_oldAppLibraryID
T@"NSSet",&,N,V_parentGlobalIDs
T@"NSMutableSet",&,N,V_appLibraryIDsWithReverseAliases
T@"NSString",&,N,V_unsaltedBookmarkData
T@"NSURL",R,D,N
TB,R,N,V_isInDocumentScope
TB,R,N,V_isInDataScope
TB,R,N,V_isInTrashScope
brc_issueSandboxExtensionOfClass:error:
objectAtIndex:
addTags:
clearTags
tagsAtIndex:
tagsType
setTags:
_tags
T@"NSMutableArray",&,N,V_tags
_publish
_unpublish
isIndeterminate
isPaused
fractionCompleted
completedUnitCount
totalUnitCount
brc_publish
brc_unpublish
brc_dumpDescription
setCompletedUnitCount:
enumerateKeysAndObjectsUsingBlock:
_progressForDocument:group:sizeInfo:
globalProgress
addProgress:forDocument:inGroup:
initWithParent:userInfo:
initWithItem:
coordinatedWriteURL
initWithGroup:parentFileIDs:session:
setTotalUnitCount:
setKind:
setUserInfoObject:forKey:
URLByDeletingLastPathComponent
URLByAppendingPathComponent:isDirectory:
setCancellable:
getPromisedItemResourceValue:forKey:error:
bundleForClass:
setLocalizedDescription:
taskTracker
itemByRowID:
evictInTask:options:error:
setCancellationHandler:
reverseAliasEnumerator
addAliasItem:
aliasTargetContainerString
byFileSystemID
resolveMustExist:error:
physicalURL
userInfo
getResourceValue:forKey:error:
isCancellable
cancellationHandler
downloadProgressForDocument:sizeInfo:
uploadProgressForDocument:sizeInfo:
isPublished
parentFileIDs
_progressByAliasContainerID
_published
_parentFileIDs
T@"NSArray",R,N,V_parentFileIDs
TB,R,N,V_published
isSharedToMeTopLevelItem
diffAgainst:
derivedAliasItemIDWithOwnerName:
serverAliasItemForSharedItem:inZone:
structureRecordIDForItemType:zone:aliasTargetZoneIsShared:
isPrivateZone
sharedAliasItemID
diffAgainstOriginalItem
itemIDString
accountID
asPrivateClientZone
serverAliasByUnsaltedBookmarkData:
initWithRecordType:recordID:
parentID
fillStructureRecord:inZone:itemID:ckInfo:parentID:targetItemID:targetZone:diffs:isFolderShare:beingDeadInServerTruth:shouldPCSChainStatus:
serializeFilename:forCreation:setExtension:inSharedAlias:
serializeFinderTags:forCreation:
serializeStructuralPluginHints:
itemByItemID:
newLocalItemWithServerZone:dbRowID:
setItemScope:
saveToDB
markDead
markNeedsUploadOrSyncingUpWithAliasTarget:
groupInBatch:
isBatchSuspended
serverZoneByRowID:
insertTombstoneAliasRecordInZone:
localAliasForSharedItem:inZone:
markNeedsDeleteForRescheduleOfItem:
diffAgainstServerAliasItem:
structureRecordIDInZone:
structureRecordBeingDeadInServerTruth:shouldPCSChainStatus:inZone:
updateParentZoneRowID:
setWithCapacity:
setWithArray:
addObjectsFromArray:
daemon
containerMetadata
cloudSyncTCCDisabledForContainerMeta:
setIsCloudSyncTCCDisabled:
enumerateAppLibraries:
identifier
bundleIdentifiers
syncedFolderTypeForURL:
brc_errorItemNotFound:
br_isExcludedWithMaximumDepth:
br_isInSyncedLocation
isSharedToMeChildItem
isSharedToMe
isSharedByMe
isEqualToClientZone:
hasShareIDAndIsOwnedByMe
isOwnedByMe
possiblyContainsSharedItem
br_capabilityToMoveFromLookup:toNewParent:session:error:
canFetchAllContainersByID
fetchAllContainersByIDWithError:
fetchContainerForURL:
br_capabilityToMoveFromURL:toNewParent:error:
itemIDForURL:error:
_disabledBundleIDs
_knownBundleIDs
newConnectionWithLabel:readonly:error:
readOnlyWorkloop
useSerialQueueWithTarget:
fileUnlinker
appSupportDirPath
renameAndUnlinkInBackgroundItemAtPath:
dbBecameCorrupted
setStatementCacheMaxCount:
setupDatabase
serverTruthWorkloop
openForDumping
newConnection:
statementCacheMaxCountForServerTruth
statementCacheMaxCountForClientTruth
dbProfiled
fileSystemRepresentation
_openConnection:databaseName:baseURL:readonly:error:
_registerDynamicDBFunctions:error:
setSynchronousMode:
_registerStaticDBFunctions:error:
registerFunction:nArgs:handler:error:
containsIndex:
newFromSqliteValue:
initWithData:encoding:
dataAtIndex:
isRootItemIDWithSQLiteValue:
registerFunction:nArgs:handler:
isDocumentsItemIDWithSQLiteValue:
isSharedZoneRootItemIDWithSQLiteValue:
notificationManager
queueUpdateForItemAtRowID:
loadFromClientStateInSession:
allocateNotifRank
_openConnection:databaseName:readonly:error:
_setupConnection:readonly:error:
br_errorFromErrno
removeItemAtURL:error:
plist
setNeedsSave:
lastInsertedRowID
setDbRowID:
numberAtIndex:
zoneRowID
initWithAppLibraryName:
unarchivedObjectOfClasses:atIndex:
initWithMangledID:dbRowID:zoneRowID:db:plist:session:initialCreation:createdRootOnDisk:createdCZMMoved:rootFileID:
_createAppLibrary:
newAppLibraryFromPQLResultSet:error:
enumerateObjects:
initWithMangledID:dbRowID:db:plist:session:initialCreation:
newSharedClientZoneFromPQLResultSet:error:
initWithMangledID:dbRowID:plist:session:
newSharedServerZoneFromPQLResultSet:error:
fetchObject:sql:
newPrivateClientZoneFromPQLResultSet:error:
newPrivateServerZoneFromPQLResultSet:error:
newLocalItemFromPQLResultSet:db:error:
deviceKeyForName:db:
fetchObjectOfClass:sql:
userIdentityForKey:db:
nameComponents
br_formattedName
owner
userIdentity
userRecordID
userIdentityForName:db:
initWithCKUserIdentity:
_setUserIdentity:forName:
stringWithSQL:
unknownPersonNameComponents
_privateClientZonesEnumerator:
state
_forDBUpgrade_setStateBits:clearStateBits:
saveClientZoneToDB:
_sharedClientZonesEnumerator:
userVersion
unsignedIntAtIndex:
br_errorWithPOSIXCode:description:
nameWithString:
_registerLastBootIfNeeded:table:cleanTelemetryIfNeeded:
unsignedLongLongAtIndex:
_stepBackupDetector:newState:error:
_clearNeedsUpgradeErrors:brVersion:
initWithObjects:
_classesForClientState
initWithDictionary:
needsSave
enumerateServerZones:
saveAppLibraryToDB:
stageRegistry
willFlushAllStagedFileIDs
setPreFlushHook:
nextNotifRank
flushUpdatesWithRank:
flushAppliedTombstones
enumerateClientZones:
recentsEnumerator
maxNotifRankWasFlushed
setPostFlushHook:
autoRollbackHandler
domain
restart
setAutoRollbackHandler:
sqliteCacheSize
sqliteCacheSpill
dbBatchDelay
dbBatchSize
unarchivedObjectOfClass:atIndex:
saveToDB:
loadCachedServerConfigFromDB:
openAndValidateDatabase:serverTruth:session:baseURL:skipBackupDetection:error:
_openConnection:serverTruth:databaseName:baseURL:initialVersion:lastCurrentVersion:error:
_validateDatabase:baseURL:session:serverTruth:initialVersion:lastCurrentVersion:error:
_checkIntegrity:serverTruth:session:skipBackupDetection:error:
unsignedIntValue
dbHandle
setUserVersion:
openAndValidateDatabase:serverTruth:error:
_startWatcher
_finishClientTruthConnectionSetupWithError:
_finishServerTruthConnectionSetupWithError:
enableDatabaseProfilingForDB:
stopDBWatcher
highlightedString:type:
writeLineWithFormat:
isSyncBlockedBecauseAppNotInstalled
isSyncBlockedBecauseOSNeedsUpgrade
_dumpClientZoneBlockedState:toContext:
pushIndentation
serverZone
dumpStatusToContext:error:
popIndentation
appLibraries
asSharedClientZone
_sharedServerZoneByName:ownerName:db:
_privateServerZoneByName:db:
associateWithServerZone:
dumpActivityToContext:includeExpensiveActivity:error:
dumpTablesToContext:includeAllItems:error:
disableDatabaseProfilingForDB:
fileDescriptor
setDateStyle:
setTimeStyle:
initWithFile:db:
setLiveDaemon:
setOnlyActiveStuff:
setTaskTracker:
clientZonesMatchingSearchString:error:
_dumpClientZoneStatus:toContext:error:
upgradeOfflineDB:serverTruth:session:error:
_sharedServerZonesEnumerator:
_privateServerZonesEnumerator:
_appLibrariesEnumerator:
associateWithClientZone:
liveDaemon
stringFromDate:
br_realpath
startupDate
timeIntervalSinceNow
intAtIndex:
dateWithTimeIntervalSince1970:
longAtIndex:
fp_obfuscatedFilename
objectOfClass:atIndex:
dumpToContext:includeAllItems:db:
_dumpClientZone:toContext:includeAllItems:error:
dumpSession:toContext:db:error:
dumpXPCClientsToContext:
dumpMiscOperationsToContext:
versionsProvider
dumpToContext:
cloudDocsAppsMonitor
setDumpTrackedPendingDownloads:
backupToURL:progress:
databaseID
clientState
readOnlyDB
expensiveReadOnlyDB
_setupBackupDetector:error:
preventDatabaseFromBeingReused
createServerZone:
deleteServerZone:
_enumerateAppLibraryRowIDs:usingBlock:
_reserveRowIDForLibrary:
_deleteAppLibrary:
_createPrivateAppLibrary:
_createSharedAppLibrary:
_createClientZone:
_deleteClientZone:
_privateClientZoneByName:db:
_privateClientZoneByID:db:
stagedItemsEnumerator
foldersNeedingTransmogrifyEnumerator
bouncedItemsEnumerator
itemsNeedingIndexingEnumeratorFromNotifRank:batchSize:
createDeviceKeyForNameInServerDB:
userIdentityForKey:
learnOwnerIdentityForShare:forceUpdate:
userNameForKey:db:
openDBWithError:
closeDBs
dumpStatusToFileHandle:zoneName:tracker:error:
initializeOfflineDatabaseWhileUpgrading:error:
dumpDatabaseToFileHandle:zoneName:includeAllItems:tracker:error:
dumpFileCoordinationInfoToFileHandle:error:
backupDatabaseToURL:error:
accountStatisticsWithDB:
sessionForBackingUpDatabasesAtURL:
sessionForDumpingDatabasesAtURL:
sessionForCheckingInconsistencies
nameComponentsForName:db:
T@"BRCClientState",R,N
T@"BRCServerPersistedState",R,N
TQ,R,N
T@"BRCPQLConnection",R,N
T@"NSObject<OS_dispatch_workloop>",R,D,N
_key
reset
scheduleNextEvent
addPerformer:
migrationThrottleParams
perform
initWithName:throttleParameters:queue:handler:
resume
addReachabilityObserver:
removeReachabilityObserver:
removePerformer:
networkReachabilityChanged:
networkReachabilityFlagsChanged:
initWithAccountID:
resumeAndAutoClose
_close
_accountID
_queue
_throttler
accountHandler
setMigrationStatus:forDSID:shouldUpdateAccount:completion:
br_appleAccountWithPersonID:
initWithAccount:
status
isNetworkReachable
performRequestWithHandler:
sharedConnection
addObserver:
removeObserver:
allApplicationIdentifiers
isCloudSyncAllowed:
accountIDPath
stringWithContentsOfFile:encoding:error:
dirPathForSyncedFolderType:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:encoding:error:
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:ignoredTopics:opportunisticTopics:
shutdown
dbAccountID
mobileDocsAccountID
primaryiCloudAccount
isEnabledForDataclass:
br_dsid
br_isEnabledForCloudDocs
_cleanupPushAndActivitiesStatesWhenNoSessionExists
setDBAccountID:
reloadSyncedFolderPoliciesDisableiCloudDesktop:
initWithAccountID:salt:
destroyLocalDataWaitingForFilesToBeUnlinked:completionBlock:
_loadCurrentOnDiskAccountSessionWithError:
fsReader
fsEventsMonitors
isInInitialState
logoutTimeout
destroyLocalDataWithPristineContainerIDs:
__itemAtURL:didDisconnectWithPurposeID:
jetsamCloudDocsApps
suspend
writingIntentWithURL:options:
enumerateSupportedFolderTypes:
__destroySessionWithIntents:
coordinateAccessWithIntents:queue:byAccessor:
reloadSyncedFolderPolicies
ubiquityTokenSalt
setLoggedOutError:
openWithError:
reason
br_errorWithDomain:code:description:
brc_isOutOfSpaceError
setDoesNotHaveEnoughDiskSpaceToBeFunctional:
closeAndResetLocalState
newDBResetEventWithError:description:
submitSyncTelemetryEvent:
_destroyCurrentSessionSynchronously
delegate
accountHandler:willChangeSessionFrom:
_createCurrentAccountSessionWithID:error:
_migrateAccountIfNecessaryForAccountID:
accountHandler:didChangeSessionTo:
br_primaryAppleAccount
destroyLocalData
_handleAccountWillChange
destroyCurrentAccountSynchronously
_handleAccountDidChange
_updateAccountToAccountID:
br_isCloudDocsMigrated
br_setCloudDocsMigrated:
saveVerifiedAccount:withCompletionHandler:
br_isCloudDocsMigrationComplete
br_setCloudDocsMigrationComplete:
setSyncPolicy:forSyncedFolderType:
brc_libnotifyPerUserNotificationName
unsignedIntegerValue
numberWithInteger:
primaryiCloudAccountID
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
startAndLoadCurrentAccountSynchronously
destroyCurrentSessionSynchronously
createCurrentAccountSessionWithID:error:
markMigrationCompletedForDSID:
syncPolicyforSyncedFolderType:
setDelegate:
pushWorkloop
_currentAccountID
_migrationStatusSetterQueue
_hasSetMigrationComplete
_syncPolicyByFolderType
_delegate
_pushWorkloop
T@"<BRCAccountHandlerDelegate>",W,N,V_delegate
T@"BRCAccountSession",R,N,V_session
T@"NSObject<OS_dispatch_workloop>",R,N,V_pushWorkloop
setCookieStorage:
asFinderBookmark
isShareableItem
_aliasTargetMangledID
appLibraryByMangledID:
clientZoneByMangledID:
_aliasTargetItemID
_updateAliasTarget:
xattrSignature
trashPutBackPath
trashPutBackParentID
aliasTarget
processingStamp
stagedFileIDForDB
rawBouncedLogicalName
itemScope
tmpBouncedNo
_insertInDB:dbRowID:
_updateInDB:diffs:
_markNeedsSyncingUp
initWithFileID:session:
isEqualToAppLibrary:
targetMovedToThisAppLibrary
initWithTarget:owningAppLibrary:path:session:
resolveWithError:
markLostClearGenerationID:backoffMode:
writeUnderParent:name:error:
updateFromFSAtPath:
aliasItemID
isEqualToItemID:
resolveClashOfAlias:atPath:withAlias:atPath:
wasMovedToCloudDocs
learnItemID:serverItem:path:markLost:
learnTarget:
rewriteOrDeleteAliasOnDiskWithTarget:
performOnOpenParentFileDescriptor:error:
markNeedsUploadOrSyncingUp
_removeAliasAndMarkDead
targetDocument
startDownloadInTask:options:error:
updateXattrInfoFromPath:error:
updateOnDiskWithAliasTarget:forServerEdit:
targetMovedToTrashOrDeleted
T@"BRCAliasItem",R,N
T@"BRCDirectoryItem",R,D,N
T@"BRCDocumentItem",R,D,N
T@"BRCAppLibrary",R,N
T@"BRCClientZone",R,N
T@"BRCItemID",R,N
analyticsReportXPCActivity
generateReportWithSession:
uploadMetricsReport:
telemetryErrorEvents
appTelemetryGatherXPCActivity
_gatherAppTelemetryEventsWithActivity:
hasActiveWorkGroup
telemetryApplySchedulerTimeout
cloudDocsClientZone
rootItemID
telemetryRetryCountForPermenentFailure
newPermanentlyInconsistentEventWithZoneMangledID:
_handleApplySchedulerTimeoutWithActivity:
telemetryMinRowID
setTelemetryMinRowID:
_reportSyncUpBackoffInfo
shareChangedDuringCheckWithSession:
telemetryEvent
generateReportForSharedFolder:completionHandler:
_waitForApplySchedulerToBeIdleWithCompletion:
clientZones
syncUpBackoffRatio
newSyncUpBackoffRatioEventWithRatio:zoneMangledID:
resetSyncUpBackoffRatio
syncUpBackoffDelay
newSyncUpBackoffDelayEventWithBackoff:zoneMangledID:
submitEventMetric:
associatedAppTelemetryEvent
_forgetEventMetrics:
firstObject
eventName
removeObjectsInArray:
eventMetricTimeout
startTime
_cleanupTimedOutEventMetrics:
_withEventMetricsOfKind:accessor:
syncErrors:
objectAtIndexedSubscript:
genID
removeObjectAtIndex:
initWithEventName:
setStartTime:
setFileID:
setGenID:
setOperationID:
setIsRecursiveDownload:
setIsDownloadingForBackup:
docIDs
dropAllSyncTelemetryEvents
telemetryToken
setTelemetryToken:
dequeueSyncTelemetryEvents
telemetryEventReportBatchSize
addEvents:
setToken:
eventsCount
_fetchTelemetryEventCountOrAdd:
data
token
telemetryEventQueueSize
telemetryEventDisabledMessages
telemetryEventQueueReductionAmount
newDroppedEventWithCount:
newAppTelemetryMetricEvent:
shouldReportTelemetryEvents
forgetEventMetric:
createFSEventToSyncUpEventForFileID:genID:
lookupFSEventToSyncUpEventByFileID:genID:accessor:
lookupFSEventToSyncUpEventByItemID:accessor:
createUserDownloadEventForOperationID:isRecursive:isForBackup:
lookupUserDownloadEventByOperationID:accessor:
lookupUserDownloadEventByDocID:accessor:
currentTelemetryToken
deleteMissingErrorThrottles
didApplyItemInsideSharedItemID:
_telemetryEventCount
_waitOnIdleQueue
_metricEndpoint
_eventsByKind
_syncHealthReport
_currentTelemetryItemGlobalID
_currentTelemetryToken
_lastSentTelemetryEvents
_syncTelemetryState
duration
subDescription
additionalPayload
endTime
setEndTime:
isCKMetric
setIsCKMetric:
associatedCKEventMetricIfAvailable
_isCKMetric
_eventName
_startTime
_endTime
_associatedCKEventMetricIfAvailable
T@"NSString",R,N,V_eventName
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
TB,N,V_isCKMetric
T@"CKEventMetric",R,N,V_associatedCKEventMetricIfAvailable
numberWithUnsignedLongLong:
newFSEventToSyncUpEventWithDuration:
setItemID:
setMtime:
contentSize
setContentSize:
isPackage
setIsPackage:
syncUpBatchSize
setSyncUpBatchSize:
_isPackage
_genID
_fileID
_itemID
_mtime
_contentSize
_syncUpBatchSize
TQ,N,V_fileID
TI,N,V_genID
T@"BRCItemID",&,N,V_itemID
TQ,N,V_mtime
TB,N,V_isPackage
TQ,N,V_syncUpBatchSize
TQ,N,V_contentSize
newUserDownloadEventWithDuration:
setDocIDs:
didSucceed
setDidSucceed:
isDownloadingForBackup
isRecursiveDownload
itemCount
setItemCount:
totalContentSize
setTotalContentSize:
_didSucceed
_isDownloadingForBackup
_isRecursiveDownload
_operationID
_docIDs
_itemCount
_totalContentSize
T@"NSUUID",&,N,V_operationID
T@"NSMutableSet",&,N,V_docIDs
TB,N,V_didSucceed
TB,N,V_isDownloadingForBackup
TB,N,V_isRecursiveDownload
TQ,N,V_itemCount
TQ,N,V_totalContentSize
initWithEventName:atTime:
defaultSyncContext
ckContainer
numberWithUnsignedInt:
distantPast
brc_cloudKitErrorMessage
isEqualToTransferFailureReport:
initWithError:
encounteredErrorWithPCSState:privateDB:atDate:
lastFailureDate
privateDBErrorCountByPCSState
shareDBErrorCountByPCSState
_privateDBErrorCountByPCSState
_shareDBErrorCountByPCSState
_error
_lastFailureDate
T@"NSError",R,N,V_error
T@"NSDate",R,N,V_lastFailureDate
T@"NSDictionary",R,N,V_privateDBErrorCountByPCSState
T@"NSDictionary",R,N,V_shareDBErrorCountByPCSState
rampNumberWithSession:
isSyncBlocked
syncUpAnalyticsError
syncDownAnalyticsError
internalZoneSyncDownAnalyticsErrors
internalZoneSyncUpAnalyticsErrors
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
longLongAtIndex:
_injectionForAnalyticsServiceCode:
initWithDomain:code:userInfo:
dateFromString:
member:
_fillTransferFailure:withRowID:atDate:session:
delayForStuckThrottle
doubleAtIndex:
readerRetryCountForFailure
getRampNumberForSession:
dictionaryForErrorsByZone:wantPrivateZone:
isPCSChained
newCASyncUpZoneErrorEventWithError:pcsChained:zoneMangledID:
newCASyncDownErrorEventWithError:pcsChained:zoneMangledID:
newCAUploadErrorEventWithError:pcsChained:sharedZone:count:
newCADownloadErrorEventWithError:pcsChained:sharedZone:count:
newCASyncUpItemErrorEventWithError:pcsChained:sharedZone:count:
removeObjectsInRange:
newCASyncUpZoneErrorCountEventWithCount:
newCASyncDownErrorCountEventWithCount:
newCASyncUpItemErrorCountEventWithCount:
newCAUploadErrorCountEventWithCount:
newCADownloadErrorCountEventWithCount:
newCATotalErrorCountEventWithCount:
totalZoneCount
blockedZonesCount
totalItemsCount
syncUpErrorsByMangledID
syncDownErrorsByMangledID
syncUpFailures
uploadFailures
downloadFailures
dsid
rampNumber
_syncUpErrorsByMangledID
_syncDownErrorsByMangledID
_dsid
_rampNumber
_syncUpFailures
_uploadFailures
_downloadFailures
_totalZoneCount
_blockedZonesCount
_totalItemsCount
TQ,R,N,V_totalZoneCount
TQ,R,N,V_blockedZonesCount
TQ,R,N,V_totalItemsCount
T@"NSDictionary",R,N,V_syncUpErrorsByMangledID
T@"NSDictionary",R,N,V_syncDownErrorsByMangledID
T@"NSSet",R,N,V_syncUpFailures
T@"NSSet",R,N,V_uploadFailures
T@"NSSet",R,N,V_downloadFailures
T@"NSString",R,N,V_dsid
T@"NSString",R,N,V_rampNumber
T@"NSArray",R,N
brc_errorItemChanged
incrementErrorRetryCountWithSession:
fp_obfuscatedPath
wasAbleToRun
itemByItemGlobalID:
containsPendingUploadOrSyncUp
brc_errorNotInCloud:
coordinatedReadURL
initWithURL:
serverItemByItemID:
serverMetrics
recursiveChildCount
possiblyContainsSharedToMeItem
_finishReport:session:completionHandler:
initWithServiceName:
checkRecursiveChildItemCountFromURL:withReply:
interfaceWithProtocol:
setRemoteObjectInterface:
remoteObjectInterface
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
newShareAliasInSharedFolderEventWithZoneMangledID:
newFolderSharingCountMismatchEventWithCount:zoneMangledID:
itemCountDifference
zoneMangledID
_failureRetryCount
_fileURL
_containsSharedToMeItem
_wasAbleToRun
_itemCountDifference
_zoneMangledID
Tq,R,N,V_itemCountDifference
TB,R,N,V_wasAbleToRun
T@"BRMangledID",R,N,V_zoneMangledID
setMinimumOSName:
setRecordId:
hasMinimumOSName
hasRecordId
minimumOSName
recordId
_minimumOSName
_recordId
T@"NSString",&,N,V_minimumOSName
T@"NSString",&,N,V_recordId
br_sharingMisc
fetchCurrentUserRecordOperation
setFetchRecordsCompletionBlock:
initWithSyncContext:
zoneHealthSyncContext
brc_isResetError
keyEnumerator
getOrCreateAppLibraryAndPrivateZonesIfNecessary:
objectEnumerator
initWithRecord:
privateClientZoneByID:
initWithCKInfo:state:
syncedDownZoneHealthState:
zoneHealthWasReset
receivedUpdatedZoneHealthServerChangeToken:requestID:
finishedZoneHealthSyncDownWithRequestID:error:
brc_zoneHealthZoneID
zoneHealthSyncDownBatchRecordsCount
initWithRecordZoneIDs:optionsByRecordZoneID:
setConfiguration:
setSourceApplicationBundleIdentifier:
receivedUpdatedServerChangeToken:requestID:
brc_isCloudKitErrorImplyingZoneNeedsCreation
completedZoneHealthSyncDownWithRequestID:error:
_changeToken
_recordsByID
_deletedRecordIds
initWithAliasTargetContainerString:
initWithUUIDString:
br_isPackageRoot
br_representableDirectoryName
iworkShareableExtensions
br_pathExtension
lowercaseString
stringFromItemID:context:
brc_hexadecimalString
deleteCharactersInRange:
descriptionWithContext:origName:
boolAtIndex:
decodeBoolForKey:
encodeBool:forKey:
checkStateWithItemID:logToFile:
initWithStatInfo:
br_displayFilenameWithExtensionHidden:
representableName
iWorkShareable
initFromResultSet:pos:
check:logToFile:
isExecutable
isWritable
displayName
isEtagEqual:
setCreatorRowID:
setState:
setType:
setMode:
setBirthtime:
setParentID:
setHiddenExt:
setXattrSignature:
lazyXattr
setLazyXattr:
setLogicalName:
setTrashPutBackPath:
setTrashPutBackParentID:
_parentID
_state
_type
_mode
_birthtime
_logicalName
_aliasTarget
_hiddenExt
_xattrSignature
_lazyXattr
_trashPutBackPath
_trashPutBackParentID
_creatorRowID
T@"BRCItemID",&,N,V_parentID
Tc,N,V_state
Tc,N,V_type
Tc,N,V_mode
T@"NSString",&,N,V_logicalName
Tq,N,V_birthtime
hiddenExt
TB,N,GisHiddenExt,V_hiddenExt
T@"NSData",&,N,V_xattrSignature
T@"BRMangledID",R,N
T@"NSString",R,N,V_aliasTarget
T@"NSData",&,N,V_lazyXattr
T@"NSString",&,N,V_trashPutBackPath
T@"BRCItemID",&,N,V_trashPutBackParentID
T@"BRCUserRowID",&,N,V_creatorRowID
_hasLastEditorDeviceRowID
_hasLastEditorRowID
lastEditorDeviceRowID
lastEditorUserIdentityWithDB:
stringFromByteCount:context:
brc_signatureIsPendingPlaceHolder
br_qtnFlags
brc_signatureIsPackage
decodeObjectOfClasses:forKey:
initWithVersion:
replaceOccurrencesOfString:withString:options:range:
originalPOSIXName
UTIForExtension:
minFileSizeForThumbnailTransfer
canMostRecentClientsGenerateThumbnailsForUTI:
setLastEditorDeviceRowID:
setLastEditorRowID:
lastEditorDeviceDisplayNameWithDB:
lastEditorDisplayNameWithDB:
displayNameWithoutExtension:
hasThumbnail
additionNameForItemID:zoneID:
isSmallAndMostRecentClientsGenerateThumbnails
setOriginalPOSIXName:
setSize:
thumbnailSize
setThumbnailSize:
thumbnailSignature
setThumbnailSignature:
contentSignature
setContentSignature:
conflictLoserEtags
setConflictLoserEtags:
setEditedSinceShared:
lastEditorDeviceOrUserRowID
setLastEditorDeviceOrUserRowID:
lastEditorDeviceName
setLastEditorDeviceName:
quarantineInfo
setQuarantineInfo:
_originalPOSIXName
_size
_thumbnailSize
_thumbnailSignature
_contentSignature
_quarantineInfo
_conflictLoserEtags
_editedSinceShared
_lastEditorDeviceOrUserRowID
_lastEditorDeviceName
Tq,N,V_mtime
T@"NSString",&,N,V_originalPOSIXName
Tq,N,V_size
Tq,N,V_thumbnailSize
T@"NSData",&,N,V_quarantineInfo
T@"NSData",&,N,V_contentSignature
T@"NSData",&,N,V_thumbnailSignature
T@"NSSet",&,N,V_conflictLoserEtags
T@"NSNumber",&,N,V_lastEditorDeviceOrUserRowID
T@"NSNumber",&,N
T@"NSString",&,N,V_lastEditorDeviceName
T@"BRCUserRowID",&,N
T@"NSNumber",&,N,V_editedSinceShared
isValidSignature:
brc_hexadecimalStringWithBytes:length:
updateWithBytes:length:
dataByFinishingSignature
brc_signatureIsValid
brc_signature
brc_pendingPlaceholderForPackage:
T@"NSData",R,N
initWithBytes:length:
setPath:
setSymlinkContent:
setSignature:
typeAsString:
StringAsType:
hasPath
setHasMtime:
hasMtime
setIsWritable:
setHasIsWritable:
hasIsWritable
setIsExecutable:
setHasIsExecutable:
hasIsExecutable
hasSymlinkContent
hasQuarantineInfo
hasSignature
setXattrIndex:
setHasXattrIndex:
hasXattrIndex
symlinkContent
signature
xattrIndex
_xattrIndex
_path
_signature
_symlinkContent
_isExecutable
_isWritable
Ti,N,V_type
T@"NSString",&,N,V_path
TB,N,V_isWritable
TB,N,V_isExecutable
T@"NSString",&,N,V_symlinkContent
T@"NSData",&,N,V_signature
Tq,N,V_xattrIndex
weakObjectsHashTable
weakToStrongObjectsMapTable
registerQueryWithAliases:isRecursive:
unregisterQueryWithAliases:isRecursive:
initWithDocIDNumber:
unregisterPipeAsWatcher:
initWithXPCReceiver:client:manager:startingRank:
initWithReceiver:manager:startingRank:
processProgressUpdates:
addNotification:asDead:
brc_sharedProviderManager
signalEnumeratorForContainerItemIdentifier:completionHandler:
processUpdates:withRank:
triggerNotificationIfNeeded
_queueAdditionalUpdates
_dispatchUpdatesToPipesWithRank:
invalidateIfWatchingAppLibraryIDs:
invalidateReceiverIfWatchingAppLibraryIDs:
initWithAccountSession:
hasActiveAliasWatchers
registerAppLibraries:forFlags:
unregisterAppLibraries:forFlags:
hasWatcherForDocumentID:
registerPipe:asWatcherForFileObjectID:
getPipeWithXPCReceiver:client:reply:
pipeWithReceiver:
queueProgressUpdates:
queueUpdate:
fetchLastFlushedRankWithReply:
invalidatePipesWatchingAppLibraryIDs:
pipeDelegateInvalidated:
invalidatePipeReceiversWatchingAppLibraryIDs:completionBlock:
_pipes
_cacheQueue
_notifs
_transferCache
_client
_activeAliasQueries
_additionalUpdatesItemRowID
_previousMaxRank
_watchersByFileObjectID
_fileObjectIDByWatcher
_isCancelled
TB,R,N,V_isCancelled
br_isAbsolutePath
br_pathRelativeToPath:
roots
mangledIDString
_initWithPath:relativeToRoot:
initWithFileID:root:session:
isInPackage
isPackageRoot
isRoot
basePath
logicalURLWithLogicalName:
isResolved
relativePath
initWithDocID:
initWithRelativePath:
isFileWithFinderInfoAliasBit
br_isInPackage
br_pathOfPackageRoot
br_pathRelativeToPackageRoot
pathOfPackageRoot
resolvePathAdditionalMetadata:appLibrary:
setAppLibrary:
_shouldKeepBasePathOpenWithoutOpenedFD
_resolveRootWhenExists:
_fixupRelativePath
_resolvePathTypeAndContainer
initWithRelpath:
br_fileSystemRepresentation
pathComponents
reverseObjectEnumerator
lastObject
removeLastObject
_shouldKeepBasePathOpen
_resolveBasePath:
_resolveWhenExists
_resolveWhenDoesntExist
brc_isBlacklistedPackageExtension
pathRelativeToPackageRoot
_resolveSymlinkRelativeTo:path:
compare:options:
maxRelativePathDepth
shouldFixupBundleBitOnPackages
extensionsSkippingBundleBitFixup
resolveAndKeepOpenMustExist:allowResolveInPkg:error:
_resolveAndKeepOpenMustExist:allowResolveInPkg:error:
pathRelativeToRoot
isEqualToRelativePath:
maxXattrBlobSize
loadXattrsFromFD:withMaximumSize:error:
decodeBytesForKey:returnedLength:
decodeIntegerForKey:
encodeBytes:length:
encodeInteger:forKey:
locateByFileID:session:
initWithRootPath:session:
initWithPath:appLibrary:
logicalURL
isBundle
isExcluded
hardlinkCount
isHiddenExtension
isHiddenFile
isBusy
fileType
hasFinderTags
refreshPathTypeAndContainer
flock:
bookmark
xattrs
sharedItemBookmark
parentHash
_roots
_absolutePath
_relativePath
_basePath
_bookmark
_generationID
_finderInfo
_nlink
_parentFileID
_documentID
_fsGenerationID
_flags
_itemScope
_isExcluded
_isInPackage
_isBundle
_isPackageRoot
_readFault
_hasFinderTags
_isBusy
_hasFinderInfoAliasBit
_isBRAlias
_qtnResolved
_xattrsResolved
_sharedBookmarkResolved
_openRefCount
_mutex
_xattrs
_sharedItemBookmark
T@"BRCAppLibrary",&,N,V_appLibrary
TS,N,V_type
TC,N,V_itemScope
TI,R,N
Ti,R,N
Tq,R,N
T@"BRCGenerationID",R,N
T@"NSURL",R,N
T@"BRCBookmark",R,N
T@"NSData",R,N,V_quarantineInfo
T@"NSData",R,N,V_xattrs
T@"NSString",R,N,V_sharedItemBookmark
captureLogsForOperationType:ofSubtype:forError:
_moveDown:index:
_moveUp:index:
_moveUpOrDown:index:
_shrink
initWithComparator:
check
removeFirstObject
firstObjectWeightChanged
objectWeightChanged:
_array
_comparator
_mutation
_objects
_count
TQ,R,N,V_count
dataWithBytes:length:
initWithTag:
checksummingOutputStreamWithTag:
hasSpaceAvailable
open
streamStatus
write:maxLength:
_ctx
_sig
_isOpen
initWithRecordsToSave:recordIDsToDelete:
setRecordIDsToDeleteToEtags:
setClientChangeTokenData:
_markItemsFailedSync
_syncUpRecordBatchWithModifiedRecords:deletedRecordIDs:recordIDToZoneMap:requestID:
learnCKInfosFromSavedRecords:isOutOfBandModifyRecords:
setModifyRecordsCompletionBlock:
prepareForSyncUpSideCarZone
didMarkSyncIdleForServerRank:zone:
_itemsNeedingSyncUpEnumerator
maxRecordCountInModifyRecordsOperation
nextObject
sideCarInfo
localDiffs
fakeSyncForItem:itemRank:
sideCarRecordID
sideCarRecordNameWithZone:
baseSideCarRecord
useShareReferenceOnSideCar
initWithRecordID:action:
serializeSideCarInfo:filenameExtension:diffs:deadInServerTruth:
allocateNextRequestID
shouldPerformAnotherBatch
_shouldPerformAnotherBatch
_accountChangeHandler
stringFromErrorString:context:
descriptionForCKAccountStatus:dumpContext:
accountStatusWithCompletionHandler:
defaultCenter
_accountDidChange
addObserver:selector:name:object:
removeObserver:name:object:
initWithCKContainer:
_source
_ckContainer
_lastAccountStatus
_resumed
setZoneName:
setErrorDomain:
setErrorDescription:
setLastStep:
setReason:
setOperationType:
_errorCode
_errorDescription
_errorDomain
_lastStep
_operationType
_reason
_zoneName
_hasForegroundClients
_isPCSChained
_sharedZone
hasZoneName
sharedZone
setSharedZone:
setHasSharedZone:
hasSharedZone
hasErrorDomain
errorDomain
errorCode
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDescription
hasLastStep
lastStep
hasItemID
hasReason
hasOperationType
operationType
setHasNonDiscretionary:
hasNonDiscretionary
hasForegroundClients
setHasForegroundClients:
setHasHasForegroundClients:
hasHasForegroundClients
setIsPCSChained:
setHasIsPCSChained:
hasIsPCSChained
T@"NSData",&,N
T@"NSString",&,N
Tq,N
startObservingNetworkReachabilityChanges
stopObservingNetworkReachabilityChanges
networkReachabilityDidChangeHandler
setNetworkReachabilityDidChangeHandler:
_networkReachabilityDidChangeHandler
T@?,C,N,V_networkReachabilityDidChangeHandler
br_logout
watchItemInProcessAtURL:options:gatherReply:
attributeForKey:
receiveUpdates:logicalExtensions:physicalExtensions:reply:
receiveProgressUpdates:reply:
initWithSession:url:
evictionCompletionBlock
setEvictionCompletionBlock:
_section
_tracker
_pipe
_isFinished
_evictionCompletionBlock
T@?,C,V_evictionCompletionBlock
stringFromThrottleState:context:
hasWorkGroup
closed
postNotificationName:object:
defaultScheduler
initWithScheduler:name:
setWorkloop:
setEventHandler:
signal
matchingJobsWhereSQLClause
onlyActiveStuff
nowFromContext:
stringFromDueStamp:allowsPast:context:
descriptionForJobsMatching:ordering:additionalColumns:additionalValuesHandler:context:
unsignedLongAtIndex:
describeInBuffer:aggregateOfJobsMatching:context:
computeStamps:forJobID:throttle:shouldBackoff:
signalWithDeadline:
columns
columnsValues
jobsDescription
nsecsToNextRetry:retryCount:now:
nsecsBeforeForgettingCounter
updateStamps:throttle:now:
setState:forJobsMatching:
hasActiveWork
hasWork
setHasWork:
setHasActiveWork:
performFirstSchedulingAfterStartupInDB:
canScheduleMoreJobs
checkIfHasWork
setHasWorkGroup:
setHasActiveWorkGroup:
initWithSession:name:tableName:
canRetryJobWithID:
haveActiveJobsMatching:
jobStateFor:
descriptionForJobsMatching:context:
aggregateDescriptionForJobsMatching:context:
postponeJobID:withThrottle:
insertOrUpdateJobID:throttle:withState:insertedSQLColumn:insertedSQLValues:updatedSQLValues:
rescheduleSuspendedJobsMatching:inState:
setState:forJobID:
deleteJobsMatching:
resetBackoffForJobWithID:
deleteExpiredJobs
recoverAndReportMissingJobs
scheduleWithBatchSize:whereSQLClause:columns:actionHandler:
tableName
_schedulerSource
_schedulerWorkloop
_name
_firstSchedulingAfterStartupDone
_hasActiveWork
_hasWork
_hasWorkGroup
_hasActiveWorkGroup
_tableName
TB,N,V_hasWork
TB,N,V_hasActiveWork
T@"NSObject<OS_dispatch_group>",&,V_hasWorkGroup
T@"NSObject<OS_dispatch_group>",&,V_hasActiveWorkGroup
T@"PQLNameInjection",R,V_tableName
T@"NSString",R,V_name
done
logName
itemsEnumeratorChildOf:withDeadItems:rankMin:rankMax:count:db:
itemByItemGlobalID:db:
itemsEnumeratorWithRankMin:rankMax:namePrefix:withDeadItems:shouldIncludeFolders:shouldIncludeOnlyFolders:shouldIncludeDocumentsScope:shouldIncludeDataScope:shouldIncludeExternalScope:shouldIncludeTrashScope:count:db:
notifsRank
rowNumber
gatherWithBatchSize:completion:
_popGatherReply
addDequeueCallback:
initWithNotificationPipe:appLibraries:startingRank:maxRank:withDeadItems:gatherReply:
gatheredChildrenItemGlobalID
setGatheredChildrenItemGlobalID:
_gatherReply
_gatheringAppLibraries
_gatheringRankMin
_gatheringRankMax
_lastSentRank
_gatheringNamePrefix
_includesDeadItems
_gatheredChildrenItemGlobalID
T@"BRCItemGlobalID",&,N,V_gatheredChildrenItemGlobalID
watchedAncestorFilenameToItem
watchedAncestorFileObjectID
notificationPipe:willObserveAppLibrary:
isSandboxed
hasPrivateSharingInterfaceEntitlement
_initWithManager:startingRank:
connection
watchedAncestorItemGlobalID
br_isEqualToStringForHFS:isCaseSensitive:
setWatchedAncestorFilenameToItem:
setWatchedAncestorFileObjectID:
_registerAsWatcherIfNeeded
setOldWatchedAncestorItemGlobalID:
setWatchedAncestorItemGlobalID:
oldWatchedAncestorItemGlobalID
includesDataScope
isDocumentScopePublic
br_downloadStatus
diffs
intersectSet:
appLibraryByID:
aliasByUnsaltedBookmarkData:
_prepareForSecondGatherWithRank:
_addIntraContainerUpdatesFromInterContainerUpdate:toArray:
_isInterestingUpdate:
_gatherIfNeededAndFlushAsync
_flushProgressUpdates
isFolderOrAliasID
_processProgressUpdates:
notifBatchSize
dictionaryWithCapacity:
arrayWithCapacity:
containerItemForContainer:withDocumentsItem:
processDequeueCallbacks
dequeue:block:
notifOverflowLimit
notifGatherUpTo
__flush
notificationPipe:didObserveAppLibrary:
initWithArray:
watchItemAtURL:lookup:options:gatherReply:
intersectsSet:
_stopWatchingItems
watchScopes:trustedAppLibraryIDs:gatherReply:
_receiver
_boostReply
_oldWatchedAncestorItemGlobalID
_watchedAncestorItemGlobalID
_watchedAncestorFileObjectID
_watchedAncestorFilenameToItem
_gatherer
_gatherGroup
_hasUpdatesInFlight
_volumeIsCaseSensitive
_pendingProgressUpdatesByID
_hasProgressUpdatesInFlight
_watchItemOptions
_watchKind
_watchNamePrefix
_watchForBundleID
_externalAppLibraries
_watchedAppLibraries
_watchedAppLibraryIDs
_watchedAppLibrariesFlags
_initialGatherMaxRank
_secondaryGatherMaxRank
_manager
T@"BRCItemGlobalID",&,V_oldWatchedAncestorItemGlobalID
T@"BRCItemGlobalID",&,V_watchedAncestorItemGlobalID
T@"BRFileObjectID",&,V_watchedAncestorFileObjectID
T@"NSString",&,V_watchedAncestorFilenameToItem
T@"BRCNotificationManager",R,N,V_manager
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<BRCNotificationPipeDelegate>",W,N,V_delegate
watchScopes:appLibraryIDs:gatherReply:
entitledAppLibraryIDs
isDocumentID
globalItemByDocumentID:
fseventAtPath:flags:options:unresolvedLastPathComponent:
_triggerImmediateReadOfDocumentIfNeeded
watchItemAtURL:options:gatherReply:
watchItemsNamesPrefixedBy:inScopes:appLibraryIDs:gatherReply:
watchScopes:gatherReply:
boostPriority:
brc_booleanValueForKey:
_removeSubscriber:
isInSyncBubble
_displayDialogWithType:dict:options:userReplyBlock:
_logWrapUserReplyBlock:
_hideCurrentDialog
_updateDialogWithType:dict:userReplyBlock:
_localizationKey:forTypeOfShare:
share
brc_sharedRootDisplayName
hasSuffix:
substringToIndex:
brc_fixDocumentExtensionIfNeededForShareURL:
localizedStringFromPersonNameComponents:style:options:
ownerIdentity
isFolderShare
brc_applicationName
_localizationKeyForOS:
_localizationKey:forOSAndTypeOfShare:
publicPermission
_displayDialogWithType:dict:userReplyBlock:
fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:
brc_errorInvalidParameter:value:
moveToFront
showJoinDialogForShareMetadata:session:reply:
showErrorSignInToiCloudForShareMetadata:reply:
showErrorTurnOniCloudDriveForShareMetadata:reply:
showErrorInstallNativeAppForShareMetadata:reply:
showErrorNativeAppDisabledByProfileForShareMetadata:reply:
showErrorReasonUnknownForShareMetadata:reply:
showErrorDeviceOfflineForShareMetadata:reply:
showErrorServerNotReachableForShareMetadata:reply:
showErrorItemUnavailableOrAccessRestrictedForShareMetadata:reply:
showErrorParticipantLimitReachedForShareMetadata:reply:
showErrorDocumentsAppNotVisibleForShareURL:reply:
_updateDialogWithType:dict:
_cfUserNotification
_displaySource
_nextDisplayBeginTime
_progressSubscriber
_dialogInfo
_computeSignature:
bookmarkDataWithContentsOfURL:error:
_validateSignatureWithFd:
unlinkAliasAtPath:
resourceValuesForKeys:fromBookmarkData:
hasPrefix:
substringFromIndex:
parseBookmarkData:inAccountSession:docID:itemID:mangledID:unsaltedBookmarkData:error:
rangeOfString:
initWithMangledString:
itemByDocumentID:
bookmarkData
lookupForRelativePath:
bookmarkDataWithRelativePath:serverZone:
br_preCacheBookmarkData:versionEtag:
bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:
_resolveTargetWithError:
_resolveDataWithError:
writeBookmarkData:toURL:options:error:
UUID
createName
containsItemID
targetServerZone
target
_bookmarkData
_target
_targetServerZone
_targetRelpath
_targetResolved
_dataResolved
_containsItemID
T@"BRCServerZone",R,N
T@"BRCLocalItem",R,N
waiterBlocks
_waiterBlocks
T@"NSMutableArray",R,N,V_waiterBlocks
handleExitSignal:
_initSignals
_setupVNodeRapidAging
serviceListener
anonymousListener
stringWithContentsOfURL:encoding:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:encoding:error:
setResourceValue:forKey:error:
minimumDiskSpaceRequiredToBeFunctional
_loadAccountIfNeeded
_resumeAccount
recursivelySizeDirectoryAtPath:
cacheDirPath
setUpSandbox
mainBundle
bundleIdentifier
initWithMachServiceName:
_haveRequiredKernelFeatures
checkEnoughDiskSpaceToBeFunctional
stringFromByteCount:showActualByteCount:suffix:context:
localeDidChange
loadAccount
_setupCacheDelete
_startXPCListeners
_startupAndLoadAccount
_finishStartup
setSkipOpenInApp:
wrapperWithURL:readonly:error:
initWithVolume:
initWithConnection:
setExportedInterface:
waitOnAccountResumedQueue
auditToken
initWithAuditToken:
setPrivilegesDescriptor:
setExportedObject:
dieOnInvalidate
setInterruptionHandler:
setInvalidationHandler:
endpoint
validateItemsLoggingToFile:db:
validateStructureLoggingToFile:db:
exitWithCode:
utiCacheSize
setCountLimit:
null
isDaemonRunning
listener:shouldAcceptNewConnection:
setIsInSyncBubble:
loggedOutError
waitForConfiguration
setUpAnonymousListener
loadAndResumeAccount
_shouldCacheDeleteForVolume:
nonPurgeableSizeGivenPurgeableSize:
_setDoneXpcActivity:description:
registerShareAcceptOperation:forURL:
registerWaiterBlock:forShareURL:
setDirPath:forSyncedFolderType:
selfCheck:
suspendIPCAcceptation
resumeIPCAcceptation
logsDirPath
setLogsDirPath:
setAppSupportDirPath:
setCacheDirPath:
containerClass
setContainerClass:
disableAccountChangesHandling
setDisableAccountChangesHandling:
disableAppsChangesHandling
setDisableAppsChangesHandling:
forceIsGreedyState
setForceIsGreedyState:
doesNotHaveEnoughDiskSpaceToBeFunctional
_sigIntSrc
_sigQuitSrc
_sigTermSrc
_xpcListener
_tokenListener
_unitTestMode
_hasNotEnoughDiskSpaceToBeFunctional
_accountHandler
_xpcListenersReadyQueue
_accountReadyQueue
_accountResumedQueue
_startupQueue
_serverAvailabilityNotifyToken
_accountLoaderQueue
_dirPaths
_versionsProvider
_shareAcceptOperationsByToken
_shareAcceptWaitersByToken
_acceptWaiterTimer
_shareAcceptQueue
_disableAccountChangesHandling
_disableAppsChangesHandling
_logsDirPath
_appSupportDirPath
_cacheDirPath
_containerClass
_loggedOutError
_ubiquityTokenSalt
_forceIsGreedyState
_startupDate
TB,N,V_disableAccountChangesHandling
TB,N,V_disableAppsChangesHandling
TQ,N,V_forceIsGreedyState
T@"NSString",&,N,V_logsDirPath
T@"NSString",&,N,V_appSupportDirPath
T@"NSString",&,N,V_cacheDirPath
T@"BRCAccountHandler",R,N,V_accountHandler
T@"BRCAccountSession",&,N,V_session
T@"NSError",&,N,V_loggedOutError
T@"NSXPCListenerEndpoint",R,N
T@"NSString",R,N,V_ubiquityTokenSalt
T@"NSDate",R,N,V_startupDate
TB,N,V_hasNotEnoughDiskSpaceToBeFunctional
T#,&,N,V_containerClass
T@"BRCVersionsFileProvider",R,N,V_versionsProvider
br_isCocoaErrorCode:
sqliteBind:index:
newFromSqliteStatement:atIndex:
initWithIntID:zoneRowID:
intID
initWithRank:zoneRowID:
rank
rejectedRowID
serverItemRank
_setState:andApplyKind:forJobID:
metadataSyncContext
applyThrottle
formatInjection:
_rescheduleRank:inState:forZone:
shouldFixupTargetCZMAliases
brc_stringByBackslashEscapingCharactersInString:
_fixupCZMAliasTargetWithAlias:target:
writerApplyBatchSize
_scheduleApplyJobWithID:zone:applyKind:
_handleWatchingFaults
fsWriter
serverItemByRank:
isRejected
isCoordinationPendingForItem:
applyChangesForServerItem:localItem:rank:zone:activity:hasFinished:
hasCompletedInitialSyncDownOnce
applyCountToSignalFaultsLive
minusSet:
signalFaultingWatchersWithError:
writerMaxConcurrentIOs
totalCount
_writeCoordinationCount
serverRankByItemID:
lastInsertedRank
changeState
lastSyncDownDate
didSyncDownRequestID:maxApplyRank:caughtUpWithServer:syncDownDate:
isLive
markRejectedItemRemotelyRevived
createApplyJobFromServerItem:localItem:state:kind:
newMissingApplyJobEventWithNumberMissing:
descriptionForServerItem:context:
descriptionForRejectedItem:context:
setState:forServerItem:localItem:
setState:forRank:zoneRowID:
setState:andApplyKind:forServerItem:localItem:
setState:andApplyKind:forRank:zoneRowID:
resetBackoffForServerItem:
didCreateMissingParentID:zone:
didReparentOrKillItemID:parentItemID:zone:
didCompleteCrossZoneMigrationForAppLibrary:
rescheduleMissingTargetAliasesWithTarget:
repopulateJobsForZone:
monitorFaultingForZone:
stopMonitoringFaultingForZone:
startWriteCoordinationInAppLibrary:
endWriteCoordinationInAppLibrary:rowID:
_coordinatedWriters
_clientZonesWatchingFaults
_applyCountReachedMax
evaluateWithObject:
throttleHashWithItemID:
_validateThrottleParams:
initWithName:andParameters:
predicateWithFormat:
matchesItem:nsecsToRetry:now:
predicate
setPredicate:
_predicate
T@"NSPredicate",&,N,V_predicate
setResourceValues:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
desiredBackupDataDirectoryForUserURL:
destinationDirectory
fileExistsAtPath:
databaseURL
initWithDatabaseURL:
initWithRelativePath:fileID:docID:genCount:isDirectory:
addRecord:
enumerateRootURL:usingBlock:error:
flushAndClose
enumerateURL:rootURL:usingBlock:error:
urlPropertiesToFetch
resourceValuesForKeys:error:
initWithUserURL:outputUserURL:
backUpWithCompletionBlock:
cleanOnDisk
userURL
setUserURL:
outputUserURL
setOutputUserURL:
setDestinationDirectory:
_userURL
_outputUserURL
_destinationDirectory
T@"NSURL",&,N,V_userURL
T@"NSURL",&,N,V_outputUserURL
T@"NSURL",&,N,V_destinationDirectory
isDesktopAppLibrary
isDocumentsAppLibrary
isCloudDocsAppLibrary
fsEventsMonitor
fsEventsMonitorForAppLibraryID:
initFileURLWithPath:isDirectory:
isPrivate
appLibraryOrZoneName
updateWithPlist:
containerForMangledID:
_updateIsInCloudDocsZone
setIsInInitialState:
scheduleDeepScanWithReason:
associateWithClientZone:offline:
removeForegroundClient:
addForegroundClient:
addAppLibrary:offline:
cancelFileCoordinators
forgetWatchedLockedFileIDsForAppLibrary:
unscheduleAppLibraryForLostScan:
fetchRootItem
_activateState:origState:
isiCloudDesktopAppLibrary
scheduleAppLibraryForLostScan:
scheduleSyncUp
hasOptimizeStorageEnabled
postContainerListUpdateNotification
zoneDidChangeMovedToCloudDocsState
enumerateSharedClientZones:
recomputeAppSyncBlockStateForPrivateClientZone:
shouldEvictUploadedItems
shouldAppLibraryBeGreedy
hasUbiquityClientsConnected
isGreedy
isEqualToMangledID:
isForeground
hasActiveQueries
hasActiveRecursiveQueries
hasActiveAliasQueries
containerMetadataNeedsSyncUp
containerMetadataEtag
shortDescription
_unwrappedDescriptionWithContext:
forRead
startReadCoordinationInAppLibrary:
freeFileCoordinationSlotsAfterDelayForRead:
endReadCoordinationInAppLibrary:
initWithSession:forRead:doneHandler:
setIsUpdateForReconnecting:
readerIOsCancelDelay
writerIOsCancelDelay
cancelAfterDelay:
setStateBits:
readerLostItemBackoff
markChildLostBackoff
unsignedLongValue
readerMarkChildrenLostBatchSize
isNonDesktopRoot
integerAtIndex:
markChildrenLostForItemID:inZone:fileID:startingFromRow:hasMoreWork:
continueMarkingChildrenLostInZone:
clearStateBits:
setRootFileID:
needsSyncUp
hasDeadChildren
hasInitialFaultsLive
hasInitialFaultsEverLive
accessTimeDeltaForUrgency:
computeDocumentEvictableSizeUsageWithLowTimeDelta:medTimeDelta:highTimeDelta:db:reply:
timeIntervalSince1970
minAutomaticallyEvictableFilesize
computeEvictableBatchSize
computeDocumentEvictableSizesForLowTime:medTime:highTime:lowSize:medSize:highSize:minRowID:minSize:batchSize:injection:db:reply:
_resolveTargetSharedClientZonesWhenBecameForeground
transferSyncContext
_removeAllTargetSharedServerZonesWhenNoLongerForeground
metadataSyncContextIfExists
transferSyncContextIfExists
foregroundClients
_targetSharedServerZonesEnumerator
hasFetchedInitialApps
shouldSyncMangledID:
transferSyncContextForMangledID:createIfNeeded:
transferSyncContextForMangledID:
didReceiveHandoffRequest
_addTargetSharedServerZone:
isStillTargetingSharedServerZone:
itemIDByRowID:db:
itemByRowID:db:
_aliasAppLibraryTargetSQLPrefix
errorWithSqliteCode:andMessage:
setLastError:
object:
notifyClient:whenFaultingIsDone:
initAsDocumentsWithAppLibraryRowID:
_initAsLibraryRootWithAppLibraryRowID:
initWithZoneRootItemID:session:
initWithZoneRowID:itemID:
createAppLibraryOnDisk:createdRoot:createdDocuments:rootFileID:
documentsFolderItemID
scanContainerDocumentsIfNeeded:
isCloudDocsZone
setIsInCloudDocsZone:
didChangeSyncStatusForContainerMetadataForContainer:
documentsPath
brc_errorNoDocumentAtURL:underlyingPOSIXError:
anyReverseAliasInAppLibrary:
fseventAtPath:flags:
postContainerStatusChangeNotificationWithID:key:value:
syncedFolderType
supportsSpotlightIndexing
addClientUsingUbiquity:
removeClientUsingUbiquity:
activate
didUpdateDocumentScopePublic
enumerateUserVisibleChildrenOfItemGlobalID:sortOrder:offset:limit:db:
enumerateUserVisibleChildrenDirectoriesOfItemGlobalID:db:
cancelWriteCoordinatorForItem:
coordinatorForItem:forRead:
deepScanStamp
allocateLostStampAddingBackoff:
markChildrenLostForItemID:inZone:fileID:
fsrootDidMoveToPath:
didFindLostItem:oldAppLibrary:
didRemoveDocumentsFolder
didCreateDocumentScopedItem
didCreateDataScopedItem
hasDocumentsOrDirectory
hasUbiquitousDocuments
hasLocalChanges
documentSizeUsageWithDB:
computeDocumentEvictableSizeUsageWithDB:reply:
documentCountWithDB:
integrityCheckBoosting
recomputeShouldEvictState
_addTargetSharedServerZoneForSharedItem:
_removeTargetSharedServerZoneIfNecessary:
itemIDByRowID:
liveAliasesEnumeratorTargetingThisAppLibrary
containerMetadataFilledWithTCCInfo
shouldSaveContainerMetadataServerside
rootItemGlobalID
recreateDocumentsFolderIfNeeded
setContainerMetadataEtag:
setContainerMetadataNeedsSyncUp:
scheduleContainerMetadataSyncUp
createAliasWithTarget:parentPath:forceReparent:error:
setIsOverQuota:
tracker
maxLostStamp
setMaxLostStamp:
setZoneRowID:
setGenerationID:
setDeepScanStamp:
setDefaultClientZone:
containerMetadataSyncRequestID
setContainerMetadataSyncRequestID:
rootQuotaUsage
setRootQuotaUsage:
_activeQueries
_activeRecursiveQueries
_maxLostStamp
_deepScanStamp
_deepScanReason
_pendingFileCoordinators
_XPCClientsUsingUbiquity
_mangledID
_defaultClientZone
_activated
_targetSharedServerZones
_foregroundClients
_needsSave
_containerMetadataNeedsSyncUp
_dbRowID
_zoneRowID
_appLibraryID
_containerMetadata
_containerMetadataEtag
_containerMetadataSyncRequestID
_rootQuotaUsage
T@"NSNumber",&,N,V_fileID
T@"NSNumber",&,N,V_generationID
T@"NSNumber",&,N,V_deepScanStamp
T@"BRCPrivateClientZone",W,N,V_defaultClientZone
T@"<BRCAppLibraryDelegate>",&,N,V_delegate
T@"brc_task_tracker",R,N,V_tracker
T@"NSString",R,N,V_appLibraryID
T@"BRMangledID",R,N,V_mangledID
T@"BRCFSEventsMonitor",R,N
T@"BRCALRowID",&,N,V_dbRowID
T@"BRCZoneRowID",&,N,V_zoneRowID
TB,N,V_needsSave
T@"BRCSyncContext",R,N
T@"NSMutableDictionary",R,N
TI,R,N,V_state
Tq,N,V_maxLostStamp
T@"BRContainer",R,N,V_containerMetadata
T@"NSString",&,N,V_containerMetadataEtag
TB,N,V_containerMetadataNeedsSyncUp
TQ,N,V_containerMetadataSyncRequestID
T@"NSNumber",&,N,V_rootQuotaUsage
incrementRetry
initWithThrottleHash:
retryCount
latestRetry
throttleHash
_scheduled
_retryCount
_latestRetry
TI,R,N,V_retryCount
Tq,R,N,V_latestRetry
Tq,R,N,V_throttleHash
doubleValue
retryBackoff:
isBlocking
_initialRetryCount
_finalRetryCount
_maximumElementCount
_minimumNsecsBetweenRetries
_maximumNsecsBetweenRetries
_nsecsBeforeForgettingCounter
T@"NSString",R,N,V_name
Tq,R,N,V_nsecsBeforeForgettingCounter
_cleanupStaleCounters:
throttleHashBytes:length:
_retryCounters
_retryHeap
isEqualToDownloadJobIdentifier:
initWithDBRowID:etag:kind:
itemDBRowID
kind
_kind
_itemDBRowID
TQ,R,N,V_itemDBRowID
T@"NSString",R,N,V_etag
Ti,R,N,V_kind
contextIdentifier
initWithSyncContext:kind:now:retryQueueKick:
nextDocumentItem
stageID
_now
_retryQueueKick
initWithWorkloop:name:
initWithName:fairScheduler:
setCoalescingLeeway:
downloadSizeRefreshInterval
willScheduleDocumentForDownload:
transferID
uuidAtIndex:
appLibraryByRowID:
transferContextForServerZone:appLibrary:
downloadStream
progressForTransferID:operationID:
syncContextUsedForTransfers
diskReclaimer
accessTimestampForDocument:
downloadThrottle
forceSchedulingPendingInteractiveTransfers
setTrackChanges:
cleanupStagedDownloadWithID:forItemID:
requiresTwoPhase
learnStagedInfoFromDownloadStageID:error:
setDownloadError:
handleZoneLevelErrorIfNeeded:
brc_errorWithDomain:code:underlyingError:
brc_isCloudKitCancellationError
_bumpThrottleForDownload:throttle:
downloadRetryCountForFailure
_reportDownloadErrorForDocument:error:
brc_isCloudKitAssetFileModified
progress
downloadWillRetryProgressMaxCount
setProgressPublished:
updateDownloadThrottleForDocument:toState:
brc_isCloudKitUnknownItemError
handleUnknownItemError
_clearDownloadErrorForDocument:
record
_sanitizeRecord:
diskSpaceRequiredToReturnToGreedyState
cancelTransferID:operationID:
popDownloadedBlockForItemID:
_cancelJobs:state:
_finishDownloadCleanup:
addAliasItem:toTransferWithID:operationID:
_hasLosersToDelete:serverItem:
shouldHaveThumbnail
shouldTransferThumbnail
lookupForItem:
thumbnailChangedForItem:relpath:url:error:
noteCloudDocsDownloadedFileAtURL:completionHandler:
createURLForDownloadWithStageID:name:
setItemClass:
initWithPBItem:forLocalItem:
saveToDBWithSession:
cancelAndCleanupItemDownload:kind:
latestVersion
_createDownloadingJobForItem:state:kind:etag:userInitiated:
shouldScheduleLosersEvictionForItem:
permanentStorageForItemAtURL:allocateIfNone:error:
removeAllAdditionsForNamespaces:completionHandler:
setLiveConflictLoserEtags:
isSubsetOfSet:
resolvedConflictLoserEtags
cancelAndCleanupItemDownload:kind:etag:
rescheduleJobsPendingWinnerForItem:
setWithSet:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
brc_parseMangledID:itemID:etag:session:
_br_markResolvedWithError:
scheduleLosersDownloadForItem:serverItem:purgeStaleEntries:applySchedulerState:
liveThumbnailSignature
removeAdditionsOnURL:error:
learnThumbnailSignatureFromLiveVersion:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withDocumentAtURL:error:
__itemAtURL:didChangeWithPurposeID:
readerScanBatchSize
itemsCount
_finishedDownload:syncContext:operationID:error:
setPerDownloadCompletionBlock:
initWithDocument:stageID:etag:
br_downloadThumbnails
addDownload:
_willDownload:operationID:
addBatchOperation:
allSyncContexts
inFlightSize
defaults
minimumDiskSpaceRequiredToDownload
minimumDiskSpaceRequiredToDownloadUserInitiated
availableDiskSpace
downloadTrackers
requestPurgeSpace
initWithDocument:stageID:
setProgress:
br_downloadUserInitiated
br_downloadOpportunistic
br_downloadOptimizeStorageOff
br_downloadUpdatedDocuments
_postponeLoserForWinner:etag:
initWithSyncContext:forNonLocalVersion:
addIndex:
initWithDocument:stageID:etag:isLoser:
storage
gsError
br_downloadConflictingVersions
unsignedIntegerAtIndex:
_sendThumbnailsBatch:sizeHint:maxRecordsCount:
_sendContentsBatch:sizeHint:maxRecordsCount:
_sendLosersBatch:sizeHint:maxRecordsCount:
_transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:
brc_telemetryReportableErrorWithRecordName:
scheduleContentDownloadForItem:serverItem:userInitiated:
newMissingDownloaderJobEventWithNumberMissing:
deleteDownloadingJobForItem:
descriptionForItem:context:
_appLibraryForDownload:kind:operationID:
rescheduleJobsPendingInitialSyncInZone:
rescheduleJobsForPendingDiskSpaceWithAvailableSpace:
cancelAndCleanupItemDownloads:
addAliasItem:toDownloadingItem:
updateContentDownloadForMetaOnlyChange:fromEtag:toEtag:
sizeOfActiveDownloads
hasAdditionsToApplyForItem:serverItem:
makeContentLive:
evictLosersOnItem:atURL:applySchedulerState:
applyLosersToItem:serverItem:atURL:applySchedulerState:addedLosers:removedLosers:
hasThumbnailToApplyForItem:
scheduleThumbnailDownloadForItem:serverItem:applySchedulerState:
applyThumbnailToItem:serverItem:atURL:applySchedulerState:
transferStreamOfSyncContext:didBecomeReadyWithMaxRecordsCount:sizeHint:priority:completionBlock:
downloadsDeadlineScheduler
_fairScheduler
_activeDownloadsSize
_lastDownloadRefresh
_activeDownloadSizeRefreshInterval
_willRetryOperationProgress
_downloadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_downloadsDeadlineScheduler
compare:
stringFromItemAsString:context:
stringFromCount:showActualCount:suffix:isByteCount:context:
initWithFd:forceColor:
initWithFormat:arguments:
componentsSeparatedByString:
startStringForFgColor:bgColor:attr:
stringForReset
stringFromCount:context:
initWithDumper:
indentationBaseString
setIndentationBaseString:
dumpTrackedPendingDownloads
_indentation
_dumper
_nowDate
_liveDaemon
_onlyActiveStuff
_dumpTrackedPendingDownloads
_indentationBaseString
_taskTracker
T@"PQLConnection",R,N,V_db
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},R,N,V_fp
T@"NSString",&,N,V_indentationBaseString
TB,N,V_liveDaemon
TB,N,V_onlyActiveStuff
TB,N,V_dumpTrackedPendingDownloads
T@"brc_task_tracker",&,N,V_taskTracker
stringWithCapacity:
initAsShareAcceptFaultWithName:mode:
initForPackage:
applyMetadataOnFileID:liveFD:sharingOptions:
_markLiveFromStageAsType:
stageFaultForCreation:name:size:isPackage:
renameAndUnlinkInBackgroundItemAtRelpath:
initWithFilename:itemID:appLibrary:clientZone:sharingOptions:
asShareAcceptationFault
markLiveFromStageAsShareAcceptationFault
stageShareAcceptationFaultWithName:
deleteShareAcceptationFault
resetQueue
scheduleReset:completionHandler:
defaultAppLibrary
clearSyncStateBits:
_cancelAllOperationsForReset
waitUntilFinished
sharedAppLibraryResetThrottle
appLibraryResetThrottle
_reset:completionHandler:
_finishedReset:completionHandler:
_performResetAndWantsUnlink:clientTruthBlock:completionBlock:
_performAfterResetServerAndClientTruthsAndUnlinkData:
_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:
aliasDeletionBatchSize
appLibraryAliasRemovalThrottle
_removeTargetedAliasesWithCompletionBlock:
performWithFlags:action:whenFlushed:
resetServerTruth
destroyPendingChangesDBOnQueue:
syncUpScheduler
supportsKeepingClientItemsDuringReset
allItems
resetAfterSyncJobsDeletion
markItemForgottenByServer
markForceRejected
asSharedToMeTopLevelItem
markForceNeedsSyncUp
_mkdirAppLibraryIfNeeded:
itemsParentedToThisZoneButLivingInAnOtherZone
clearProblemReport
setUnderlyingQueue:
setPurposeIdentifier:
appLibraryIDs
retainAccess
renameAndUnlinkInBackgroundItemAt:path:
__itemAtURL:didDisappearWithPurposeID:
releaseAccess:
_performAfterResetServerAndClientSharedTruthsAndUnlinkData:
_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:
deleteAllContentsOnServerWithCompletionBlock:
uploadStream
operations
_removeAllShareAcceptanceBlocks
dropIndexForClientZone:
syncState
willInitialSyncDownForClientZone:
scheduleResetServerAndClientTruthsForReason:
cancelReset
scheduleReset:
forceMoveToCloudDocs
scheduleMoveToCloudDocs
shouldAutoMigrateToCloudDocs
serverZoneIsCreated
scheduleZoneMovesToCloudDocs:
fileURLWithPathComponents:
writeToURL:atomically:
stringByAppendingPathExtension:
br_stringByDeletingPathBounceNo:andPathExtension:
stringValue
br_representableHFSFileNameWithBase:suffix:extension:makeDotFile:
lostStamp
updateFromFSAtPath:itemID:parentGlobalID:isPackageFault:readonlyShareChild:
setFilename:
initWithLocalStatInfo:
setFilename:forcePhysicalName:forceBouncedLogicalName:serverName:
brc_representableHFSFileNameWithSuffix:addedExtension:makeDotFile:
_finderTagsFromRelativePath:
_modeFromRelativePath:isPackageFault:
br_getTagNames:error:
_updateMetadataFromFSAtPath:itemID:parentGlobalID:isPackageFault:readonlyShareChild:
_markDead
initWithFSGenerationID:
logicalNameWithoutLocalBounce
initWithRelativePath:itemID:parentGlobalID:
_setParentID:
_setItemScope:
_setCKInfo:
_markClearedFromStage
_moveItemAsideWithUUIDString
_generatedBouncedLogicalFilenameWithBounceNumber:
_migrateTmpBouncedNameToLocalName
_bouncePhysicalNameToRepresentableName
_clearBouncedName
diffAgainstLocalInfo:
updateFilenameFromPath:
updateLocationAndMetaFromFSAtPath:itemID:parentGlobalID:isPackageFault:readonlyShareChild:
_markReserved
_markAlmostDead
updateAsAppLibraryRoot:
_markDeadAsSharedTopLevelItemWithDocumentsItemID:
_markFound
_markLostAddingBackoffWithMode:appLibrary:
_markStagedWithFileID:generationID:documentID:
_updateStatMeta:
_markLiveFromStageAsFault:
_clearFileID
_clearGenerationID
setRawBouncedLogicalName:
_processingStamp
_bouncedLogicalName
_stagedGenerationID
_stagedFileID
_physicalName
_tmpBouncedNo
T@"NSString",&,N,V_bouncedLogicalName
T@"NSNumber",R,N,V_documentID
T@"NSNumber",R,N,V_fileID
T@"BRCGenerationID",R,N,V_generationID
T@"NSNumber",R,N,V_stagedFileID
TI,R,N,V_stagedGenerationID
T@"NSString",R,N,V_physicalName
T@"NSNumber",R,N,V_tmpBouncedNo
T@"NSNumber",R,N,V_processingStamp
isKnownByServerOrInFlight
checkIsInDocumentsScopeWithParent:
documentsItemIDWithAppLibraryRowID:
globalID:isStrictChildOfGlobalID:
parentItemOnFS
maxSyncPathDepth
_refreshAppLibraryFromParent
isItemInSyncUpAndInFlight:
itemIDWithSQL:
isShared
isDirectoryWithPackageName
br_stringByDeletingPathBounceNo:
parentItemIDOnFS
parentZoneOnFS
_initWithRelativePath:parentGlobalID:
isOnDisk
_updatePropagatedInfoFromFSAtPath:
_initWithLocalItem:
_initFromPQLResultSet:session:db:error:
_initAsZoneRootWithZoneRowID:
itemTypeByItemID:db:
parentsOfCZMFaults
stripBirthtimeFromSyncUpMaskOnDocuments
createSyncUpJobForItem:inZone:
markLostWhenReplacedByItem:
maskForDiffsToSyncUpForZone:sideCarZone:whenClearing:
unsaltedBookmarkDataWithItemResolutionString:serverZone:
createSyncUpJob
deleteSyncUpJobsForItem:
_syncZoneRowIDs
isItemInSyncUpAndInFlight:inZone:
finishSyncUpForItem:inZone:success:
syncUpState
_updateAppLibraryPristineStatesAfterMarkingDead
_updateAppLibraryPristineStatesAfterCreationOrUpdate
_updateSyncUpSchedulerWithDiffs:
_updateSharedZoneBoostingWithDiffs:
wasMarkedDead
deleteReadingJobForItem:
deleteUploadingJobForItem:
needsInsert
needsOSUpgradeToSyncUp
_isInterestingUpdateForNotifs
_ascendItemHierarchyWithBlock:
insertObject:atIndex:
appLibraryRowID
setOfAppLibraryIDsWithReverseAliases
setOfParentIDs
_sendNotificationIfNeededWithDiffs:regather:
osNameRequiredToSync
osNameNeededToSyncUp
isIdleOrRejected
isDeadOrMissingInServerTruth
inFlightDiffsForItem:
markLostWithoutBackoff
_isInterestingUpdateForNotifsWithDiffs:
metadataSyncUpMask
_deleteFromDB:keepAliases:
allocateItemRowID
br_syncDownInitial
scheduleSyncDownForSideCarWithGroup:
_hasFieldChangesNotDiffed
forgetWatchedLockedFileID:
_cheapCheckSavingItem
_isIndexable
fileObjectID:isNoLongerIndexableForNotifRank:itemIsLive:
serverAliasItemForSharedItem:db:
diffAgainstLocalItem:
loadXattrsFromFD:structuralBlob:contentBlob:localBlob:withMaximumSize:error:
sharedClientZoneByMangledID:
initWithString:libraryRowID:sharedZoneRowID:
updateFromFSAtPath:parentGlobalID:
_computedUserVisibleStatusAtPath:
computeItemModeFromStatInfo:isPackage:
applySharingReadonlyACLsToFD:statInfo:version:clientZone:sharingOptions:
markForceUpload
applyLocalEditIfNecessaryToURL:forItem:serverItem:forDelete:error:
markRemovedFromFilesystemForServerEdit:
_checkZoneUpdateFromFSAtPath:parentGlobalID:
_checkForSharedToMeItemInTrashWithPath:
_isReadonlyShareChild
fieldsToMoveOutOfTrashMask
needsReading
isEqualToFSGenerationID:
_contentXattrsHaveChangedAtRelativeAPath:
forceNeedsSyncUpWithoutDiffs
scheduleSyncUpForSideCar
updateStructuralCKInfoFromServerItem:
updateVersionMetadataFromServerItem:preventVersionDiffs:
scheduleSyncDownForOOBModifyRecordsAck
isReadAndUploaded
prepareItemForSyncUp:inFlightDiffs:inZone:
isItemPendingSyncUp:
changeItemIDOnUnknownItem
scheduleSyncDownFirst
moveAsideLocally
markNeedsReading
_markLostWhenReplacedByItem:backoffMode:
clearFromStage
parentItemIDInZone
moveFromStageToGraveyard:forItemID:
brc_errorCompatibilityIssue
characterAtIndex:
newItemWithPath:parentGlobalID:
extension
validateLoggingToFile:
isTopLevelSharedItem
isChildSharedItem
setSharingOptions:
T@"BRCItemGlobalID",R,N
T@"BRCStatInfo",R,N
T@"BRCUserRowID",R,N
T@"BRCAccountSession",R,N
TQ,N
asFSRoot
asSymlink
isFromInitialScan
isInDocumentOrTrashScope
serverPathMatchItemID
physicalNameNeedsRename
inheritOSUpgradeNeededFromItem:
markNeedsOSUpgradeToSyncUpWithName:
_initWithServerItem:dbRowID:
initFromPQLResultSet:error:
initFromPQLResultSet:session:db:error:
fetchParentFileIDs
markForceNotify
scanParentDirectory
updateLocationAndMetaFromFSAtPath:parentGlobalID:
prepareForSyncUpInZone:
markLatestSyncRequestRejectedInZone:
markFound
markReserved
markNeedsDeleteWhenAlreadyDeadInServerTruth
markRenamedUsingServerItem:toRelpath:logicalName:filename:origLogicalNameBeforeBounce:forContentApplyOnly:
markStagedWithFileID:generationID:
markStagedWithFileID:generationID:documentID:
updateStatMetadataFromServerItem:
updateItemMetadataFromServerItem:appliedSharingPermission:
computedDestinationFilenameFromServerItem:
markLiveFromStageWithPath:
markMetadataLive
beginBounceAndSaveToDBWithBounceNumber:
markBounceFinished
markBounceFailed
bounceReservedItemWithBounceNumber:
bouncePhysicalNameToRepresentableName
bounceSourceItemWithServerLogicalName:bounceNumber:
needsUpload
_serverZone
_clientZone
_parentZoneRowID
_ownerKey
_syncUpState
_orig
_localDiffs
_minimumSupportedOSRowID
_isUserVisible
_notifsRank
_sharingOptions
_sideCarCKInfo
_knownByServer
_serverPathMatchID
_resolvedPath
_forceDelete
_forceDeletedAlready
_forceNotif
T@"BRCDirectoryItem",R,N
T@"BRCDocumentItem",R,N
T@"BRCDirectoryItem<BRCFSRooted>",R,N
T@"BRCSymlinkItem",R,N
T@"BRCFinderBookmarkItem",R,N
T@"BRCShareAcceptationFault",R,N
T@"BRCLocalItem<BRCTopLevelShareable>",R,N
T@"BRCLocalItem<BRCSharedToMeTopLevel>",R,N
T@"BRCItemID",R,N,V_itemID
T@"BRCLocalItem",R,N,V_orig
TQ,R,N,V_dbRowID
TB,R,N,V_isUserVisible
TC,R,N
T@"NSMutableSet",R,N
T@"BRCLocalStatInfo",R,N,V_st
TI,R,N,V_syncUpState
TQ,R,N,V_localDiffs
TQ,R,N,V_notifsRank
T@"NSError",R,N
T@"NSString",R,N,V_path
T@"BRCUserRowID",R,N,V_ownerKey
T@"BRCServerZone",R,N,V_serverZone
T@"BRCClientZone",R,N,V_clientZone
TQ,N,V_sharingOptions
initWithFD:sizeLimit:syncable:error:
xattrNamesCount
xattrNamesBegin
structuralXattrNamesCount
structuralXattrNamesBegin
contentXattrNamesCount
contentXattrNamesBegin
value
applyToFileDescriptor:error:
removeXattrsOnFD:includingContentRelated:error:
br_isPOSIXErrorCode:
initWithBytes:length:encoding:
setValue:
writeData:forTag:
fairClientDBScheduler
syncUpThrottle
minWait
updateForTime:
availableBudgetWithDefaults:
syncUpMinimalBudget
nextDateWithBudgetWithDefaults:
setComputeNextAdmissibleDateForScheduling:
_newSyncDeadlineSourceWithName:
_syncScheduleForContainersMetadata
containerMetadataMangledID
initWithMangledID:isSyncDown:
_syncScheduleForSharedDatabase
sharedDatabaseMangledID
_syncScheduleForZoneHealth
zoneHealthMangledID
_scheduleCrossZoneMovePCSPrep
_syncScheduleForSideCar
sideCarMangledID
initWithName:scheduler:
_updatePushTopicsRegistration
needsContainerMetadataSyncDown
needsSharedDBSyncDown
zoneHealthNeedsSyncUp
enumeratePrivateClientZones:
needsSyncDown
needsSync
forcedSyncXPCActivity
br_syncDownPeriodic
schedulePeriodicSyncIfNecessaryInGroup:
workloop
syncDeadlineSource
_unscheduleClientZone:
setServerConfigurationURL:whenLoaded:
_scheduleUpdatePushTopicsRegistration
periodicSyncTimeInterval
serverChangeToken
initWithContainerScheduler:metadataChangeToken:zoneHealthChangeToken:sideCarChangeToken:
scheduleSyncDownForSharedDatabaseImmediately:
serverConfigurationURL
URLWithString:
isFileURL
saveServerConfigToDB:
userDefaultsChanged
syncContextDidBecomeForeground:
syncContextDidBecomeBackground:
markAccountMigrationComplete
setNeedsContainerMetadataSyncDown:
setCkGroup:
sharedDbSyncDownCoalesceNanoseconds
setNeedsSharedDBSyncDown:
setNeedsSyncDown:
setNeedsSync:
setNeedsPCSMigration:
scheduleIfPossibleWithCurrentTimestamp:signalSourceIfFailed:description:
br_syncDownAppLibraryMetadata
initWithSession:state:
br_syncUpAppLibraryMetadata
ckGroup
syncClientZoneThrottle
syncClientZoneErrorThrottle
brc_containerResetErrorForSharedZone:resetReason:
newZoneResetEventWithZoneMangledID:lastSyncDate:error:errorDescription:
containerMetadataWasReset
updateForError:
shouldFetchAnotherBatch
setHasCaughtUpAtLeastOnce:
sharedMetadataSyncContext
sharedDatabaseChangeState
br_syncUpAndDownShareDB
br_syncUpZoneHealth
br_syncDownZoneHealth
br_syncDown
br_syncUp
sideCarZoneWasReset
nextTry
isSyncDown
isPowerOK
hasEnoughSpaceForDevice:
stringByAppendingFormat:
uppercaseString
quotaAvailableForOwner:
currentDevice
debugDescriptionWithDefaults:
isDefaultOwnerOutOfQuota
_printSyncErrorIfNecessaryWithThrottle:context:error:now:
PCSMigrationComplete
fetchAccountWaitOperationWithAccountReady:
syncedDownZoneHealthRequestID:
delay
syncDownDelayForFailure
initWithError:pcsChained:
defaultsForMetadataContainer
defaultsForSharedZone
syncUpDelayForFailure
shouldPerformPCSMigration
br_zoneConsolidation
object
forceRefetchAppList
accountWaitOperation
serverPreferredPushEnvironmentWithCompletionHandler:
topic
publicToken
br_syncDownPushTriggered
scheduleSyncDownForContainerMetadataWithGroup:
scheduleSyncDownForZoneHealthWithGroup:
scheduleSyncDownWithGroup:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
didChangeSyncStatusForZoneHealthForContainer:
didInitialSyncDownForClientZone:
closeContainers
setup
redoZonePCSPreperation
receivedUpdatedSideCarServerChangeToken:requestID:
refreshPushRegistrationAfterAppsListChanged
notifyAfterNextZoneHealthSyncDown:
initialSyncDownGroup
syncGroup
syncUpBudget
syncScheduler
containerMetadataPersistedState
zoneHealthSyncPersistedState
_containerMetadataSyncSource
_sharedDatabaseSyncSource
_zoneHealthSyncSource
_sideCarSyncSource
_pushSource
_environmentName
_pushToken
_pushConnection
_containerMetadataPersistedState
_containerMetadataSyncState
_containerMetadataSyncOperation
_containerMetadataSyncDownThrottle
_containerMetadataSyncUpThrottle
_lastContainerMetadataSyncDownError
_lastContainerMetadataSyncUpError
_sharedDBSyncState
_sharedDatabaseSyncOperation
_sharedDatabaseSyncDownThrottle
_lastSharedDatabaseSyncDownError
_zoneHealthPersistedState
_zoneHealthSyncState
_zoneHealthSyncOperation
_zoneHealthSyncDownThrottle
_zoneHealthSyncUpThrottle
_lastZoneHealthSyncDownError
_lastZoneHealthSyncUpError
_sideCarSyncPersistedState
_sideCarSyncState
_sideCarSyncOperation
_sideCarSyncDownThrottle
_sideCarSyncUpThrottle
_lastSideCarSyncDownError
_lastSideCarSyncUpError
_periodicSyncOperation
_lastPeriodicSyncDate
_migrateZonePCSOperation
_migrateZonePCSSource
_nextZoneHealthSyncDownBarriers
_initialSyncDownGroup
_syncGroup
_syncUpBudget
_syncScheduler
T@"NSObject<OS_dispatch_group>",R,N,V_initialSyncDownGroup
T@"NSObject<OS_dispatch_group>",R,N,V_syncGroup
T@"BRCSyncBudgetThrottle",R,N,V_syncUpBudget
T@"BRCDeadlineScheduler",R,N,V_syncScheduler
T@"BRCContainerMetadataSyncPersistedState",R,N,V_containerMetadataPersistedState
T@"BRCZoneHealthSyncPersistedState",R,N,V_zoneHealthPersistedState
T@"BRCSideCarSyncPersistedState",R,N,V_sideCarSyncPersistedState
currentUserRecordName
contentsRecordID
initWithRecordIDs:
initWithDocumentItem:
setRecordID:
_recordID
T@"CKRecordID",&,N,V_recordID
brc_fakeRecordWithErrorMarkerFor20716676
_clearSignatures:isPackage:
initWithLocalVersion:
aggregatePackageSizeForPackageID:session:
updateLocationAndMetaFromFSAtPath:updateFilename:filenameOverride:
archivedDataWithRootObject:requiringSecureCoding:error:
isPackageObj
sizeObj
diffAgainstLocalVersion:
initWithServerVersion:
shouldRecreateUploadJobGivenDiffs:
isMissingUploadsWithDiffs:
updateFromFSAtPath:filenameOverride:
uploadedAssets
setUploadedAssets:
setUploadError:
_uploadedAssets
_uploadError
T@"CKRecord",&,N,V_uploadedAssets
T@"NSError",&,N,V_uploadError
initWithAliasUUID:
nonEvictableExtensions
nonAutoEvictableExtensions
autoEvictableUTIs
nonAutoEvictableUTIs
isDocumentAutomaticallyEvictableWithExtension:
isEvictable
hasLocalContent
isDocumentAutomaticallyEvictableWithName:
nonEvictablePathComponents
isCloudSyncTCCDisabled
shouldBeGreedyExtensions
shouldDocumentBeGreedyWithName:
maximumDocumentAgeToBeGreedy
blacklistedThumbnailExtensions
wantsContentForThumbnail
queryItemStatus
unsaltedBookmarkDataWithRelativePath:serverZone:
reverseAliasEnumeratorWithUnsaltedBookmarkData:session:
anyReverseAliasWithUnsaltedBookmarkData:inAppLibrary:
enumerateObjectsOfClass:
wantsThumbnail
_filenameOverrideForPath:
_updateLiveConflictLoserFromFSAtPath:
reverseAliasEnumeratorWithRelativePath:
makeSideFaultInStageGatherFileID:generationID:documentID:properties:inAppLibrary:forCreation:error:
updateDesiredVersionWithServerItem:diffs:options:needsSave:
isEqualToData:
zoneID
contentsRecordIDInZoneID:
reportProblemWithType:recordName:
serverName
updateContentsCKInfoAndDeviceIDFromServerItem:
initWithServerVersion:serverName:
setOptions:
stageFaultForCreation:serverItem:
didFlushStagedFileID:
br_isCloudDocsErrorCode:
isEqualToGenerationID:orSignature:
packageChangedAtRelativePath:
removeLiveConflictLoserEtag:
addResolvedConflictLoserEtag:
markLiveAsFault
clearVersionSignatures:isPackage:
cancelAndCleanupItemUpload:
setState:forItem:
uploadItem:
createReadingJobForItem:state:
brc_isCloudKitOutOfQuota
conflictLoserState
shouldAutomaticallyDownloadThumbnail
documentWasCreated:
_updateReadThrottleIfNeededForRowID:forCreation:
_updateRecursivePropertiesInDB:dbRowID:diffs:
_nukePackageItemsFromDB:
_updateUploadJobIfNeededWithDiffs:
documentWasUpdated:diffs:
didUpdateDocument:
_needsSyncBubbleRecomputeForError:origError:
recomputeAllItemsDidUploadState
brc_isEverRetriable
documentWasDeleted:
didDeleteDocument:
popOnDiskBlockForItemID:
updateDesiredVersionWithServerItem:options:needsSave:
userInitiated
anyReverseAliasInAppLibrary:toRelativePath:
isAutomaticallyEvictable
isVisibleIniCloudDrive
shouldBeGreedy
clearDesiredVersion
forceiWorkConflictEtag:
forceVersionConflictByClearkingCKInfo
forceiWorkSharingInfoResend
appDidResolveConflictLoserWithEtag:
markUploadedWithRecord:
markOverQuotaWithError:
contentRecordNeedsForceAllFieldsWhenDeadInServerTruth:
setLiveThumbnailSignature:
_currentVersion
_desiredVersion
_liveConflictLoserEtags
_resolvedConflictLoserEtags
_shouldAutomaticallyDownloadThumbnail
_liveThumbnailSignature
T@"BRCAliasItem",R,D,N
T@"BRCLocalVersion",R,N,V_currentVersion
T@"BRCDesiredVersion",R,N,V_desiredVersion
T@"NSSet",&,N,V_liveConflictLoserEtags
T@"NSSet",R,N,V_resolvedConflictLoserEtags
T@"NSDictionary",R,N
TB,R,N,V_shouldAutomaticallyDownloadThumbnail
T@"NSData",&,N,V_liveThumbnailSignature
T@"NSString",R,D,N
setTracker:
setQueue:
setStartTracingCode:
setEndTracingCode:
initWithTracker:queue:startCode:endCode:
sections
setSections:
startTracingCode
endTracingCode
_startTracingCode
_endTracingCode
_sections
T@"brc_task_tracker",&,N,V_tracker
TQ,N,V_sections
Ti,N,V_startTracingCode
Ti,N,V_endTracingCode
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
_willRequestCoordinationWithContext:url1:url2:
_didObtainCoordination:context:url1:url2:handler:fcHandler:error:
__coordinateReadingItemAtURL:options:purposeID:byAccessor:
__coordinateWritingItemAtURL:options:purposeID:byAccessor:
br_isInTrash
__coordinateWritingItemAtURL:options:writingItemAtURL:options:purposeID:byAccessor:
__itemAtURL:didReconnectWithPurposeID:
br_addPhysicalProperty
__itemAtURL:didMoveToURL:purposeID:
itemDidChangeAtPath:logicalFilename:
itemDidAppearAtPath:logicalFilename:
itemDidDisappearAtPath:logicalFilename:
itemAtPath:origLogicalName:didBounceToNewLogicalName:
itemAtPath:logicalFilename:didMoveToPath:logicalFilename:hasContentUpdate:
scheduleReadOfItemAtURL:queue:taskTracker:accessor:
scheduleDeleteOfItemAtURL:queue:taskTracker:accessor:
scheduleUpdateOfItemAtURL:queue:taskTracker:accessor:
scheduleRenameOfItemAtURL:toItemAtURL:contentUpdate:queue:taskTracker:accessor:
isUpdateForReconnecting
_startStamp
_url1
_url2
_timer
_doneHandler
_cancelled
_isUpdateForReconnecting
_forRead
TB,N,V_isUpdateForReconnecting
TB,R,N,V_forRead
brc_containerMetadataPropertiesData
brc_containerMetadataIconPaths
updateMetadataWithRecordData:iconPaths:
recordChangeTag
_updateContainerMetadataFromRecord:stripIcons:
hasCaughtUpAtLeastOnce
brc_containerMetadataZoneID
setOptimisticSubscribe:
arrayByAddingObject:
modifiedByDevice
validateContainerID:
getOrCreateAppLibraryAndPrivateZonesIfNecessary:appLibraryExists:
propertyListWithData:options:format:error:
isDocumentScopePublicWithProperties:mangledID:
brc_containerMetadataIconNames
hasIconWithName:
brc_cloudKitErrorForZone:
arrayWithObjects:
setRecordIDsToVersionETags:
newMissingAssetContentEventWithRecordID:
setPerRecordCompletionBlock:
recomputeAppSyncBlockState
skipContainerRecordsWithMissingAssets
brc_checkErrorsFromCloudKit:
_completedWithServerChangeToken:requestID:
performAfterFetchingAssetContents:
performAfterFetchingRecordChanges:
performAfterCreatingZoneIfNeeded:
_recordIDsForDesiredAssets
_desiredKeysForDesiredAssets
_recordIDsToVersionETagsForDesiredAssets
_containerIDsUpdated
_shouldFetchAnotherBatch
TB,R,N,V_shouldFetchAnotherBatch
progressPublished
secondaryRecordID
doneSize
setDoneSize:
setRecord:
secondaryRecord
setSecondaryRecord:
T@"CKRecordID",R,N
T@"BRCProgress",R,N
T@"CKRecord",&,N
initWithDocument:stageID:transferSize:
throttleID
_throttleID
_totalSize
_stageID
_progressPublished
_record
_doneSize
_progress
Tq,R,N,V_throttleID
T@"NSString",R,N,V_stageID
TQ,R,N,V_totalSize
T@"BRCProgress",R,N,V_progress
TB,N,V_progressPublished
TQ,N,V_doneSize
T@"CKRecord",&,N,V_record
uploadsDeadlineScheduler
addTransfer:
perUploadCompletionBlock
_uploadRecordsByID:
createCloudKitZoneWithGroup:completion:
setShouldOnlySaveAssetContent:
setSavePolicy:
setAtomic:
setProgress:forRecordID:
setPerRecordProgressBlock:
serverZoneByName:ownerName:
shouldRecreateServerZoneAfterError:
finishedTransferForRecord:recordID:error:
setPerUploadCompletionBlock:
initWithSyncContext:clientZone:
addItem:stageID:record:transferSize:
sendTransferCompletionCallBack:error:
mainWithTransfers:
actionPrettyName
_perUploadCompletionBlock
T@?,C,V_perUploadCompletionBlock
metadataSyncContextForMangledID:
clientRequestID
lastSyncDownStatus
setLastSyncDownDate:
setLastSyncDownStatus:
setChangeToken:
setClientRequestID:
pendingFetchRecordDirExistsInStageWithStartingChangeToken:recordZoneID:
initWithServerZone:
fileURL
dataWithContentsOfURL:
localizedDescription
deserializeFolderSharingOptions:
isSharedZoneRoot
parent
hasChainPCS
newChainedDirectoryMissingChainPCSEventWithZoneMangledID:itemIDString:
quotaUsed
sharedByMeRecursiveCount
sharedAliasRecursiveCount
childCount
modificationDate
br_nameIsRepresentableOnHFS
deserializeFilename:basename:bounceno:extension:userInfo:error:
lastModifiedUserRecordID
br_emptyFilenameAlternativeName
_saveItemID:stat:serverMetrics:record:origName:base:no:ext:
brc_itemIDWithSession:error:
deserializeStatInfo:serverMetrics:itemID:session:error:
_saveItemID:stat:serverMetrics:record:error:
deserializeVersion:fakeStatInfo:clientZone:error:
deserializeiWorkSharingOptions:error:
creatorUserRecordID
brc_lastModifiedUserRecordNameWithCurrentUserRecordName:personNameComponents:
setNameComponents:
brc_isForcedPackageExtension
brc_addForcedPackageExtension:
_saveItemID:version:record:iWorkSharingOptions:
deserializeSymlinkTarget:error:
deserializeAliasInfo:serverZone:error:
currentUserParticipant
deserializeSharingOptions:error:
_saveEditedDirOrDocStructureRecord:error:
_saveEditedAliasRecord:zonesNeedingAllocRanks:error:
_saveEditedSymlinkRecord:error:
_saveEditedFinderBookmarkRecord:error:
_saveEditedDocumentContentRecord:error:
_saveEditedShareRecord:error:
_saveEditedRecord:zonesNeedingAllocRanks:error:
_reportCantSaveProblem:record:
enumerateRecordsOfType:block:
_markItemDeadForRecordID:
_markShareIDDead:
_structurePrefixForType:
charAtIndex:
handleBrokenStructure
_recoverFromCorruptShareOptionsWithItemType:itemID:parentID:sharingOptions:
setNextRank:
destroyDatabase
fetchTokenState:
saveEditedRecords:deletedRecordIDs:deletedShareIDs:serverChangeToken:clientChangeToken:syncStatus:
privateServerZoneByID:
canSaveRecordsDirectlyForDeltaSync
_saveInconsistentStateWithRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:syncStatus:
_savePendingChangesEditedStructureRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:
_savePendingChangesDeletedRecordIDsIgnoringRecordIDs:
_saveEditedStructureRecords:zonesNeedingAllocRanks:
_saveDeletedRecordIDs:
_savePendingChangesEditedContentRecordsIgnoringRecordIDs:zonesNeedingAllocRanks:
_saveEditedContentRecords:zonesNeedingAllocRanks:
_savePendingChangesSharesIgnoringRecordIDs:zonesNeedingAllocRanks:
_saveEditedShareRecords:deletedShareRecordIDs:zonesNeedingAllocRanks:
postNotificationName:object:userInfo:
activated
_collectTombstoneForRank:
enumerateIndexesUsingBlock:
didGCTombstoneRanks:
forgetChangeTokens
forgetClientRequestID
resetServerTruthAndDestroyZone:
_crossZoneMoveDocumentsToZone:
performBlock:whileRemovingPrivateClientZone:
destroyDatabaseOnQueue:
newServerItemFromPQLResultSet:error:
T@"BRCZoneRowID",&,N
asPrivateZone
activateWithClientZone:offline:
deactivateFromClientZone
hasXattrWithSignature:
storeXattr:
xattrForSignature:
didSyncDownRequestID:serverChangeToken:editedRecords:deletedRecordIDs:deletedShareRecordIDs:movedZoneNames:allocRankZones:syncStatus:savedDirectly:
collectTombstoneRanks:
deleteAllContentsOperation
saveQueryRecords:
itemsEnumeratorWithDB:
directDirectoryChildItemIDsOfParentEnumerator:
pendingChanges
_metadataSyncContext
_pendingChanges
T@"BRCServerChangeState",R,V_changeState
T@"NSString",R,N,V_zoneName
T@"CKRecordZoneID",R,N
T@"BRCPendingChangesStream",R,N,V_pendingChanges
T@"BRCZoneRowID",&,N,V_dbRowID
setUpDatabaseWithError:
useBatchingWithDelay:changeCount:
docID
genCount
database
makeNextFlushFullSync
initWithPQLResultSet:
backupManifestEnumerator:
populateNewColumnsInDatabase:forRecord:basePath:
docIDForURL:
setForeignKeys:enabled:
negateIDs:
updateIDs:
clearStagedIDs:
fixUpBackupDetector:
fixUpClientState:
attachedDatabaseURL
rootID
setRootID:
populateNewColumnsWithBasePath:
attachDatabase:error:
updateAttachedDatabase
setDatabase:
setDatabaseURL:
setUrlPropertiesToFetch:
setAttachedDatabaseURL:
_database
_databaseURL
_urlPropertiesToFetch
_attachedDatabaseURL
T@"NSURL",&,N,V_databaseURL
T@"PQLConnection",&,N,V_database
T@"NSArray",&,N,V_urlPropertiesToFetch
T@"NSURL",&,N,V_attachedDatabaseURL
initWithRecordName:zoneID:
_directoryRecordNameWithSession:
directoryReferenceInZone:action:
directoryStructureRecordIDInZone:
documentStructureRecordIDInZoneID:
validatingDirectoryReferenceInZone:
pcsChainParentReferenceInZone:
pcsChainDocumentStructureReferenceInZoneID:
sideCarRecordIDWithZone:
baseContentsRecord
structureRecordID
baseStructureRecord
serializeStatInfo:diffs:stageID:deadInServerTruth:shouldPCSChainStatus:
pluginFields
setPluginFields:
structureRecordBeingDeadInServerTruth:stageID:shouldPCSChainStatus:
setParent:
brc_SHA256
targetReferenceWithItemID:targetZone:isFolderShare:
serializeSystemFields:
folderRootStructureRecord
unarchivedObjectOfClass:fromData:error:
brc_isAppLibraryRootRecordID
brc_isAppLibraryDocumentsRecordID
_itemIDWithLibraryRowID:session:
sharedServerZoneRowIDsByOwnerNamePrefix:
brc_appLibraryRootZoneName
brc_appLibraryDocumentsZoneName
brc_isZoneRootRecordID
brc_itemIDOfTargetWithLibraryRowID:session:
brc_itemType
encryptedValuesByKey
_deserializeValue:forKey:encrypted:expectClass:allowNil:errorDescription:
getOrReserveLibraryRowIDForLibrary:
_deserializeRootSharingOptions:
creationDate
setQuotaUsed:
setRecursiveChildCount:
setSharedByMeRecursiveCount:
setSharedAliasRecursiveCount:
setChildCount:
brc_currentUserOwnsLastEditorDeviceWithSession:
brc_lastEditorDeviceName
permission
aliasTargetClientZone
_locateSideCarServerZone:withShareAliasReference:withSession:
serverZoneByMangledID:
setCKInfoFieldsInRecord:
useFailIfOutdatedForResets
fakeEtagForFailIfOutdated
serializeFilename:forCreation:setExtension:
dataUsingEncoding:
stringByReplacingOccurrencesOfString:withString:
serializeFilename:forCreation:
pcsChainStateForItem:
setWantsChainPCS:
createURLForUploadWithStageID:name:
writeToURL:options:error:
initWithFileURL:
symlinkTarget
initShareIDWithShareableItem:
setShare:
forceFailIfExistOnRevival
_createAppLibraryIfNecessary:session:
serializeVersion:diffs:deadInServerTruth:
processAppLibraryDataWithMovedZoneNames:serverZone:
recordsToIgnoreOnSyncDown
containerID
brc_sharedRootExtension
iWorkShareableExtensions
baseToken
JSONObjectWithData:options:error:
setFamilyName:
setGivenName:
isDesktopMangledID
isDocumentsMangledID
numberWithUnsignedShort:
setBaseToken:
setRoutingKey:
setMutableEncryptedPublicSharingKeyData:
brc_isInterestingRecordForSyncDown
brc_oplockMergeEtag
brc_updateDroppedReason
brc_safeToGetURL
sanitizeShortTokenFields
rootDirectoryRecordForZoneID:
rootAppLibraryRecordForAppLibraryID:zoneID:
copyDataRepresentation
iconURLs
checkResourceIsReachableAndReturnError:
brc_containerMetadataRecordWithContainer:
_brc_isOwner
participants
initWithRecordType:
brc_isfakeRecordWithErrorMarkerFor20716676
brc_stringByDeletingPathExtension
fragment
brc_mangledNameFromURLFragment:
brc_sharedLinkDisplayName
brc_updateWithLogicalName:isFolder:
_initWithProviderIdentifier:
isSyncBlockedOrBrokenStructure
clearSyncUpError
initWithClientZone:
batchSize
associateSyncUpStageID:withOperation:
setOp:
setDefaults:
addItem:
itemNeedingPCSChaining
itemsNeedingUnshare
retryAfter
nextSyncUpRequestID
destroyiWorkShares
initWithZone:
prepareWithMaxCost:retryAfter:
removeDB
initWithRootItem:appLibrary:
setShouldFillBatch:
postponeSyncUpForItem:inZone:
setPcsChainCompletionBlock:
_performPCSChainOperationIfNecessaryWithCompletion:
setRecordsToSave:
setRecordIDsToDelete:
setPluginFieldsForRecordDeletesByID:
setConflictLosersToResolveByRecordID:
skipPerItemSyncUpThrottling
brc_isStaleRecordUpdateError
brc_containsCloudKitErrorCode:
brc_isCloudKitErrorRequiringAssetReupload
brc_isCloudKitErrorUnsupportedOSForItemAndGetMinimumSupported:
brc_isCloudKitErrorChainedToNewParent:
brc_isIndividualItemBlacklistError
setState:forItem:zone:
brc_isCloudKitPCSChainingError
pcsChainState
brc_isCloudKitAtomicFailure
ownerDidReceiveOutOfQuotaError:
scheduleQuotaFetchIfNeededForOwner:
setShouldFetchAssetContent:
setPublicPermission:
removeParticipant:
_performModifyRecordsOrPCSChainOperationWithCompletion:
performShareUpdate:
_scheduleShareUpdateAndModifyRecordsAndZoneCreationOperation
_performShareUpdateAndModifyRecordsWithCompletion:
mutableEncryptedPublicSharingKeyData
initShareIDWithRecordID:serverZone:
publicSharingIdentity
routingKey
_recordIsIWorkShareable:
_setSharingFieldsOnContentRecord:withProtectionData:baseToken:routingKey:forceOverwrite:
getNewWebSharingIdentityDataWithCompletionHandler:
_performUpdateSharingProtectionDataIfNecessary:
syncUpOperationForZone:maxCost:retryAfter:
recordsToSave
packagesInFlight
setPackagesInFlight:
createdAppLibraryNames
deletedRecordIDs
setDeletedRecordIDs:
iworkUnsharedShareIDs
setIworkUnsharedShareIDs:
renamedShareIDsToNames
setRenamedShareIDsToNames:
recordsNeedingNewSharingProtectionInfo
setRecordsNeedingNewSharingProtectionInfo:
recordsNeedingUpdatedSharingProtectionInfo
setRecordsNeedingUpdatedSharingProtectionInfo:
recordIDsToDeleteToEtags
pluginFieldsForRecordDeletesByID
setItemNeedingPCSChaining:
conflictLosersToResolveByRecordID
setStageID:
syncUpCompletionBlock
setSyncUpCompletionBlock:
cost
setServerZone:
encounteredErrorOnPCSChainedItem
_requestID
_encounteredErrorOnPCSChainedItem
_cost
_recordsToSave
_packagesInFlight
_createdAppLibraryNames
_deletedRecordIDs
_iworkUnsharedShareIDs
_renamedShareIDsToNames
_recordsNeedingNewSharingProtectionInfo
_recordsNeedingUpdatedSharingProtectionInfo
_recordIDsToDeleteToEtags
_pluginFieldsForRecordDeletesByID
_itemNeedingPCSChaining
_conflictLosersToResolveByRecordID
_syncUpCompletionBlock
T@"BRCServerZone",&,N,V_serverZone
T@"NSMutableArray",&,N,V_packagesInFlight
T@"NSMutableArray",&,N,V_recordsToSave
T@"NSMutableOrderedSet",&,N,V_deletedRecordIDs
T@"NSMutableArray",&,N,V_iworkUnsharedShareIDs
T@"NSMutableDictionary",&,N,V_renamedShareIDsToNames
T@"NSMutableArray",&,N,V_recordsNeedingNewSharingProtectionInfo
T@"NSMutableArray",&,N,V_recordsNeedingUpdatedSharingProtectionInfo
T@"BRCLocalItem",&,N,V_itemNeedingPCSChaining
T@"NSMutableDictionary",&,N,V_recordIDsToDeleteToEtags
T@"NSMutableDictionary",&,N,V_pluginFieldsForRecordDeletesByID
T@"NSMutableDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSString",&,N,V_stageID
Tf,R,N,V_cost
T@"NSMutableArray",R,N,V_createdAppLibraryNames
T@?,C,N,V_syncUpCompletionBlock
TB,R,N,V_encounteredErrorOnPCSChainedItem
syncUpRetryCountForFailure
_stepNameAtIndex:withPrefix:
_isFolderShare
_isiWorkShare
_activateSharedZoneIfNeeded
_openShareURLInWebBrowser:withReason:
_isOwner
_runningShareIDs
userNotificationClass
_isAppInstalled
_isFolderSharingSupported
_isUserSignedInToiCloudDrive
_showSharingJoinDialog
_parseShareMetadata
_openiWorkAppPreemptively
_waitForSharedItemToSyncDownOnOwner
_waitForSharedItemToBeOnDiskOnOwner
_acceptShareURL
_waitForSharedItemToSyncDownOnRecipient
_waitForSharedItemToBeOnDiskOnRecipient
_locateSharedItemOnDisk
_openSharedItemIfStillNeeded
_endAcceptationFlow
_isAccountRestricted
_createSideFaultOnDisk
_checkIfShouldWaitUntilDownloadCompletion
_openSharedSideFaultFile
_prepareToDownloadSharedDocument
_performNextStep
methodForSelector:
_performNextStepInQueue
indexOfObject:
_jumpToSelectorInQueue:
participantType
participantStatus
sharedItemHierarchyIDs
_isLinkInsideFolderShare
_isDocumentLinkInsideFolderShare
brc_applicationContainerID
_showGenericErrorAndFinish:
isBlacklistedFromFolderSharing
_isiWorkLinkInsideFolderShare
brc_applicationBundleID
bundleProxyForIdentifier:
bundleURL
_openAppStoreForShareURL:
brc_errorNoSuitableClientApp
entitlements
_openiCloudSettings
brc_errorLoggedOut
brc_errorDriveDisabledOrAppLibraryDisabled
br_isManagedAppleID
_isOwnerOrShareAlreadyAccepted
brc_errorOperationCancelled
fallbackAppLibraryForClientZone:extension:
defaultWorkspace
openApplicationWithBundleID:
performBlock:whenSyncDownCompletesLookingForItemID:
performBlock:whenItemWithIDIsOnDisk:
_captureOpenInfoFromDocument:
participantPermission
byPath
computeSourceBounceNumberIfNecessaryWithLookup:localItem:serverItem:
moveFromStage:toPath:fileName:error:
_jumpToSelector:
br_errorWithDomain:code:userInfo:description:
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:
applicationProxyForIdentifier:
isInstalled
initWithURL:resolvingAgainstBaseURL:
setScheme:
openSensitiveURL:withOptions:error:
_openSharedSideFaultFileWithAppID:
_openDocumentInDocumentsAppIfInstalled:
initWithShareMetadata:syncContext:
addAcceptOperation:forItemID:
brc_errorAcceptAlreadyInProgressForURL:
setAcceptShareCompletionBlock:
openSensitiveURL:withOptions:
componentsWithURL:resolvingAgainstBaseURL:
query
setQuery:
setFragment:
openURL:withOptions:
openResourceOperation:didFinishCopyingResource:
openResourceOperationDidComplete:
openResourceOperation:didFailWithError:
initWithShareMetadata:client:session:
moveDialogToFront
_isDirectoryLinkInsideFolderShare
skipOpenInApp
_userNotification
_acceptationFlow
_stepIndex
_shareURL
_shareID
_shareMetadata
_linkItemID
_rootItemID
_needsZoneAndAppLibraryActivation
_liveFileURL
_rootFilename
_linkFilename
_xpcClient
_skipOpenInApp
TB,N,V_skipOpenInApp
aa_primaryAppleAccount
aa_appleAccountWithPersonID:
aa_personID
propertiesForDataclass:
setProperties:forDataclass:
br_isEnabledForiCloudDesktop
aa_isUsingCloudDocs
aa_firstName
aa_lastName
aa_displayName
aa_isManagedAppleID
aa_isPrimaryAccount
br_isiCloudAccount
br_isPrimaryAccount
accountType
aa_setUsesCloudDocs:
aa_setCloudDocsMigrationComplete:
aa_isCloudDocsMigrationComplete
br_setEnabledForiCloudDesktop:
br_isEnabledForDesktopSync
br_isEnabledForUbiquity
br_firstName
br_lastName
br_displayName
br_isPrimaryiCloudAccount
newTelemetryEventInZoneWithMangledID:fromError:errorDescription:itemIDString:
setTimestamp:
setInvestigation:
telemetryErrorDescriptionMaxLength
newTelemetryEventInZoneWithMangledID:
setIdentifier:
setMagnitudeFloat:
setMagnitudeInt:
setMagnitudeBool:
benignTelemetryErrorDescriptions
setMagnitudeDouble:
investigation
newMissingPushEventWithNumberOutOfSync:
newTestMetricEventWithMagnitude:
newMissingSyncUpJobEventWithNumberMissing:
newMissingUploaderJobEventWithNumberMissing:
newMissingReaderJobEventWithNumberMissing:
newCorruptPackageDownloadEventWithZoneMangledID:error:itemIDString:
newFolderSharePCSChainingEventWithTime:zoneMangledID:itemIDString:error:errorDescription:
newShareAcceptationEventWithLastStep:zoneMangledID:itemIDString:error:
newSyncBoostingProblemCountWithProblemCount:
validateMangledIDString:
hasRootForSyncedFolderType:
rootForSyncedFolderType:
_resolvePathInMobileDocsRoot:appLibrary:
resolvedOpenRelpathForPath:mustExist:errcode:
skipSyncUpThrottlingOnBatchFailures
brc_isCloudKitErrorRequiringSkipThrottling
brc_syncOperationErrorKind
decodeDoubleForKey:
decodeIntForKey:
encodeDouble:forKey:
encodeInt:forKey:
inactivityKickbackDelay
inactivityKickbackRatio
ratioOnSuccess
maxWait
updateAfterSchedulingTaskWithMinimumDelay:
ratioOnQuotaErrorClear
ratioOnFailure
updateAfterSchedulingTask
updateForClearingOutOfQuota
clear
setMangledID:
lastErrorKind
_isSyncDown
_lastErrorKind
_delay
_nextTry
Td,R,N,V_delay
Td,R,N,V_nextTry
TB,R,N,V_isSyncDown
Ti,R,N,V_lastErrorKind
T@"BRMangledID",&,N,V_mangledID
encodeBytes:length:forKey:
lastDay
syncUpDailyBudget
_timeToLoseAmount:count:
lastHour
syncUpHourlyBudget
lastMinute
syncUpMinutelyBudget
consume:
_values
Tf,R,N
backoffRatio
newSyncOperationWithError:
_totalSyncOperations
_failedSyncOperations
syncDownThrottle
_options
Tc,R,N,V_options
_old_privateAppLibraryByZoneName:db:
_appLibraryEnumeratorForZoneRowID:db:
initWithUUID:
initWithRootObject:
initWithUUIDObject:
_initAsLibraryRootWithAppLibraryRowID:enclosureUUID:
_appLibraryRowID
_uuid
nameWithPrefix:suffix:
setWithObjects:
initWithBytesNoCopy:length:freeWhenDone:
initForReadingFromData:error:
initRequiringSecureCoding:
encodedData
migrateStageToVersion2_0WithSession:
containersRepositoryURL
numberWithUnsignedLong:
migrateItemIDsToVersion5WithDB:serverTruth:
migrateItemIDsToVersion8WithDB:serverTruth:
br_representableHFSFileNameWithNumber:addedExtension:makeDotFile:
migrateItemIDsToVersion11WithDB:serverTruth:
substringWithRange:
folderSharesMigrationKey
initiateMigrationQueryForMangledIDs:key:
folderShareAliasesMigrationKey
uploadRetryCountForFailure
zoneHealthState
documentSharesMigrationKey
modifyRecordsCountMultiplicativeDecrease
modifyRecordsCountAdditiveIncreaseFraction
_recreateSyncBudgetsAndThrottlesIfNeeded
_startSync
setSyncStateBits:
scheduleResetServerAndClientTruthsForReason:completionHandler:
brc_isCloudKitErrorUnsupportedOSForZoneAndGetMinimumSupported:
brc_isCloudKitErrorZoneMigrated
brc_isCloudKitErrorNeedsPCSPrep
itemCountPendingUploadOrSyncUpAndReturnError:
sizeOfItemsNeedingSyncUpOrUploadAndReturnError:
clientZone:didFinishUploadingAllItemsWithError:
disconnectNSMDQListenerAsync
didUpdateClientZone:
xattrForSignature:db:
serverItemByParentID:andLogicalName:db:
itemByParentID:andLogicalName:db:
faultByParentID:andPhysicalName:db:
existsByParentID:andCaseInsensitiveLogicalName:db:
_enumerateFaultsWithBlock:rowID:batchSize:
_faultsEnumeratorFromRow:batchSize:
_createCloudKitZoneWithGroup:completion:
removeSyncDownDependency:
migrationQueryKeyForMangledID:continuationCursor:
initWithServerZone:migrationKey:continuationCursor:
hasHighPriorityWatchers
_syncUpOfRecords:createdAppLibraryNames:didFinishWithError:errorWasOnPCSChainedItem:
syncDownImmediately
itemsWithInFlightDiffsEnumerator
_markRequestIDAcked
_increaseSyncUpBatchSizeAfterSuccess
_decreaseSyncUpBatchSizeAfterError
brc_isCloudKitErrorRequiringAssetRescan
brc_isCloudKitErrorSafeToSyncUpWithoutSyncDown
_markLatestSyncRequestFailed
finishedSyncingUpItem:withOutOfQuotaError:
syncThrottles
brc_errorSyncBlocked
onlyTreatCaughtUpAsConsistent
removeObjectsForKeys:
_fixupMissingCrossMovedItems
serverItemByParentID:andLogicalName:
markMovedToCloudDocsZone
removeAppLibrary:
_hasAllItemsDidUploadHandlers
_allItemsDidUploadWithError:
removeIndexes:
initWithIndex:
_dumpItemsToContext:includeAllItems:error:
anyObject
serverRankByItemID:db:
serverItemByRowID:db:
documentItemByItemID:db:
directoryOrRootItemIDByFileID:db:
existsByItemID:db:
_removeOnDiskBlockToPerformForItemID:
_removeDownloadedBlockToPerformForItemID:
_prepareForForegroundSyncDown
_appendToString:descriptionOfFieldNamed:inResultSet:pos:containsSize:context:
_dumpRecursivePropertiesOfItemByRowID:context:depth:
thumbnailsOperationsByID
dumpMigrationQueriesForMangledID:
forceSyncOverride
isApplicationInstalledForContainerID:
_finishedProcessingItemThatMovedToThisZone:
_removeItemFromCZMProcessingIfNotAssociated:
timeoutForCZMProcessing
containsFault
performBlock:whenItemWithIDIsDownloaded:
enumerateSideFaultsUnderParent:db:block:
_refreshItemFromDB:
_removeItemAndProcess:
_startDownloadingItemIfNecessary:
relpathOfFSEvent
registerAllItemsDidUploadTracker:
unregisterAllItemsDidUploadTracker:
itemByFileID:
itemByParentID:andLogicalName:
itemByParentID:andPhysicalName:
reservedItemByParentID:andLogicalName:
faultByParentID:andLogicalName:
faultByParentID:andPhysicalName:
existsByParentID:andCaseInsensitiveLogicalName:
documentsNotIdleEnumeratorWithDB:
enumerateFaultsAsyncWithBlock:batchSize:
didClearOutOfQuota
addSyncDownDependency:
resetSyncBudgetAndThrottle
notifyClient:afterNextSyncDown:
syncDownOperation:didFinishWithError:status:
handleRootRecordDeletion
didApplyTombstoneForRank:
_resetItemsTable
serverItemByRowID:
documentItemByItemID:
directoryOrRootItemIDByFileID:
existsByItemID:
_cancelSyncDownFromDBCorruption
removeItemOnDiskBlock:
removeItemIsDownloadedBlock:
removeSyncDownForItemIDBlock:
itemMovedIntoShareInThisZone:associatedItemID:
itemCrossZoneMoved:withLookup:
waitForCrossZoneMoveProcessingWithCompletion:
lastAttemptedSyncDownDate
setLastAttemptedSyncDownDate:
itemIDsBlockedFromSyncForCZMProcessing
_ownerName
_isInitialCreation
_readerThrottle
_createZoneOperation
_createZoneQueue
_zoneCreationCompletionBlocks
_syncUpRetryAfter
_syncState
_syncUpOperation
_lastSyncUpError
_lastSyncUpErrorWasOnChainedItem
_syncDownOperation
_syncDeadlineSourceResumer
_lastSyncDownError
_syncUpThrottle
_syncUpBackoffRatio
_syncDownThrottle
_syncDeadlineSource
_appliedTombstoneRanks
_lastInsertedRank
_lastSyncDownDate
_lastAttemptedSyncDownDate
_resetTimer
_syncDownBlockToPerformForBookmarkData
_shouldShowiCloudDriveAppInstallationNotification
_itemIDsBlockedFromSyncForCZMProcessing
_itemsBlockedByAssociationForCZMProcessing
_blocksWaitingOnCrossZoneMoveProcessing
_onDiskBlockToPerformForItemID
_downloadedBlockToPerformForItemID
_syncDownBlockToPerformForItemID
_parentsOfCZMFaults
_nextSyncDownBarriers
_currentSyncDownBarriers
_hasWorkDidUpdateObserver
_nextIdleHandlers
_syncDownGroup
_syncDownDependencies
_allItemsDidUploadTrackers
_syncUpBatchSizeMultiplier
_syncThrottles
_osNameRequiredToSync
T@"NSDate",&,N,V_lastAttemptedSyncDownDate
T@"<BRCClientZoneDelegate>",&,N,V_delegate
T@"brc_task_tracker",R,N,V_taskTracker
T@"NSString",R,N,V_osNameRequiredToSync
TB,R,N,V_activated
TQ,R,N,V_requestID
TI,R
T@"NSArray",R,N,V_syncThrottles
T@"BRCDeadlineSource",R,N,V_syncDeadlineSource
Tq,R,N,V_lastInsertedRank
T@"NSSet",R,N,V_itemIDsBlockedFromSyncForCZMProcessing
T@"NSDictionary",R,N,V_parentsOfCZMFaults
loadFromClientStateInSession:options:
assertQueue
assertionQueue
setAssertionQueue:
_assertionQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_assertionQueue
_value
T@"NSString",&,N,V_name
T@"NSData",&,N,V_value
brc_SHA256WithSalt:
packageWithError:
anchorAtURL:error:
beginTransaction
endTransaction
initWithRegistry:stageID:name:
addItem:error:
closeAndReturn
_registry
_package
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
acceptShareCompletionBlock
_acceptShareCompletionBlock
T@?,C,N,V_acceptShareCompletionBlock
clearEvents
eventsAtIndex:
eventsType
setHasToken:
hasToken
events
setEvents:
_token
_events
T@"NSMutableArray",&,N,V_events
TQ,N,V_token
weakToWeakObjectsMapTable
addProblemWithType:recordName:
setPendingRequestID:
setNeedsSyncUp:
pendingRequestID
arrayWithObject:
healthZoneMaxNumberOfResets
healthZoneTimeIntervalForMaxNumberOfResets
shouldResetAfterFixingState
resetFrequencyIsTooHigh
privateServerZone
deleteAllContentsOperationLastError
_checkResultSetIsEmpty:logToFile:reason:result:
hasDefaultAppLibrary
registerPCSChainingOperation:
pcsChainOperationForItemID:
addAppLibrary:
prepareProblemReportForSyncWithRequestID:
performBlock:whenSyncDownCompletesLookingForAliasWithBookmarkData:
removeSyncDownForAliasData:
_syncBarriers
_zoneHealthState
_problemReport
_lastResets
_faultsLiveBarriers
_appLibraries
_defaultAppLibrary
_pcsChainFolderOperations
TB,R,D,N
T@"BRCPrivateServerZone",R,N
T@"BRCAppLibrary",R,N,V_defaultAppLibrary
T@"NSSet",R,N,V_appLibraries
T@"NSSet",R,N
T@"BRCServerZoneHealthState",R,N,V_zoneHealthState
mobileDocumentsURL
localizedAdditionalDescription
sumOfCompletedUnitCountDelta
sumOfTotalUnitCountDelta
setSumOfCompletedUnitCountDelta:
setSumOfTotalUnitCountDelta:
versionSizes
updateUnitCount
updateLocalizedDescriptionWithOptions:
copyProgressInfoToProgress:options:
verifyFutureProgressIsNotFinished
childProgresses
previousUnitCounts
_versionSizes
_childProgresses
_previousUnitCounts
Tq,N,VsumOfCompletedUnitCountDelta
Tq,N,VsumOfTotalUnitCountDelta
T@"NSMutableDictionary",R,N,V_versionSizes
T@"NSMutableDictionary",R,N,V_childProgresses
T@"NSMutableDictionary",R,N,V_previousUnitCounts
outOfQuotaDocIDs
setLocalizedAdditionalDescription:
allUploadsPendingQuota
_outOfQuotaDocIDs
T@"NSMutableSet",R,N,V_outOfQuotaDocIDs
previousCompletedUnitCount
setPreviousCompletedUnitCount:
previousTotalUnitCount
setPreviousTotalUnitCount:
resumeUnitCounts
_resumeUnitCounts
Tq,N,VpreviousCompletedUnitCount
Tq,N,VpreviousTotalUnitCount
T@"NSMutableDictionary",R,N,V_resumeUnitCounts
_updateGlobalProgress
_destroyDownloadWithReason:
_destroyUploadWithReason:
shortValue
_stopObservingProgress:
observeValueForKeyPath:ofObject:change:context:
intervalToWaitBeforeShowingAdditionalDescription
_updateAppLibraryID:
_cancelDownloadForDocumentID:destroyIfLast:willRetryTransfer:
_createDownloadMetadataWithCompletedUnitCount:totalUnitCount:
_updateDocument:
_deleteDocument:reason:
_cancelUploadForDocumentID:inState:willRetryTransfer:
numberWithChar:
_startObservingProgress:
_cancelUploadForDocumentID:inState:willRetryTransfer:pendingQuota:
dumpDictionary:withMaxCount:toContext:
_keyPathsToObserve
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_createNewGlobalProgressInGroup:completedUnitCount:totalUnitCount:
_destroyProgressInGroup:reason:
minimalSizeToShowAdditionalDescription
_resumeProgressForAnotherOperationIfNeeded
valueForKeyPath:
_createNewIndeterminateGlobalProgress
_cancelUploadForDocumentID:inState:
_createUploadMetadataWithCompletedUnitCount:totalUnitCount:
_cancelDownloadForDocumentID:
resumeProgressForZones:
clearOutOfQuotaState
stopPublishingProgress
updateUploadThrottleForDocument:toState:
_lazyInitDone
_updatePacer
_operationTimer
_operationTimerSuspendCount
_showExtendedInfo
_networkReachable
_globalProgress
_appLibrariesNotLive
_uploads
_downloads
T@"BRCAccountSession",R,W,N,V_session
optimisticallyPCSChainWithSession:
optimisticallyPCSChainDuringResetWithSession:
should2PhasePCSChain
parentIDHasLiveUnchainedChildren:
fakeSyncForItem:serverItem:inZone:
addDeletionOfRecordID:ckInfo:
syncUpStructureDeleteCost
addEditOfDocument:
shouldPCSChainStatusForItem:
syncUpInitialItemCost
syncUpStructureEditCost
syncUpStructureCreateCost
syncUpDocumentDeleteCost
isCloudDocsMangledID
inFlightDiffsForItem:zoneRowID:
brc_errorItemIneligibleFromSyncForInode:
handleEditOfSharedItem:
handleDeletionOfSharedItem:
addDeletionOfItem:
syncUpDataDeleteCost
earliestUploadReceiptExpiration
uploadReceiptExpiration
syncUpDocumentEditCost
syncUpDataEditCost
syncUpDocumentCreateCost
syncUpDataCreateCost
prepareAppLibraryRootSyncUpForItem:
checkIfSyncAllowedInSharedZoneForItem:
preventRecordSyncWithoutDiffs
addDeletionOfSharedTopLevelItem:
addDeletionOfFinderBookmark:
addDeletionOfDocument:
addDeletionOfDirectory:
addDeletionOfAlias:
addEditOfSharedTopLevelItem:
addEditOfFinderBookmark:
addEditOfSymlink:
addEditOfDirectory:
_fullyChainedParentIDWhitelist
_halfChainedParentIDWhitelist
_defaults
T@"BRCSyncUpOperation",&,N,V_op
T@"BRCUserDefaults",&,N,V_defaults
nextItemRowID
setNextNotifRank:
nextPackageItemRank
allocatePackageItemRank
setNextPackageItemRank:
_nextItemRowID
_nextNotifRank
_nextPackageItemRank
_telemetryMinRowID
_telemetryToken
T@"BRCItemID",&,D,N
parentItemIDOnServer
initWithServerItem:
asSharedItem
aliasDerivedStructure
initFromPQLResultSet:serverZone:error:
appLibraryForRootItem
parentLocalItemOnFS
aliasTargetAppLibrary
aliasTargetItemID
originalName
directoryMtime
_zone
_needsInsert
_pcsChainState
_symlinkTarget
_originalName
_rank
_latestVersion
_serverMetrics
_directoryMtime
T@"BRCSharedServerItem",R,N
Tq,R,N,V_rank
T@"NSString",R,N,V_originalName
T@"BRCServerStatInfo",R,N,V_st
T@"BRCVersion",R,N,V_latestVersion
T@"BRServerMetrics",R,N,V_serverMetrics
T@"NSString",R,N,V_symlinkTarget
Tq,R,N,V_directoryMtime
_fetchByFileID:
_fetchByDocumentID:
_byPathWithLastPathComponent:
_fetchByPath
_resolveClientZoneWhileFetchingFileID:fetchindDocID:
_shareIDMatchesParent:
_fetchClientZone
byDocumentIDGlobally
byFileIDGlobally
setByFileID:
setByDocumentID:
byFileID
byDocumentID
serverByPath
byPathWithLastPathComponent:
relpathOfItem
_pathOfItem
_relpathOfFSEvent
_matchByFileID
_matchByDocumentID
_matchByPath
_serverByPath
_packageItem
_matchByFileIDGlobally
_matchByDocumentIDGlobally
_fetched
T@"BRCRelativePath",R,N,V_pathOfItem
T@"BRCRelativePath",R,N,V_relpathOfFSEvent
T@"BRCLocalItem",&,N
T@"BRCLocalItem",R,&
T@"BRCDocumentItem",&,N
T@"BRCDocumentItem",R,&
T@"BRCServerItem",R,N
syncedRootURLs
getCString:maxLength:encoding:
parseMangledItemIDString:mangledID:etag:session:
sharedZoneRowID
itemUUIDString
zoneUniqueItemIDStringWithSession:
initWithItemID:
Tr*,R,N
T@"BRCALRowID",R,N
T@"BRCZoneRowID",R,N
classOfNextMessage
setClassOfNextMessage:
initWithStream:
nextMessage
version
streamError
inputStreamWithURL:
initWithInputStream:
initWithDeviceID:fileID:
br_pathWithDeviceID:fileID:
inputStreamWithFileAtPath:
itemClass
initWithAsset:
_stream
_reader
T#,N
outputStreamWithURL:append:
initWithOutputStream:
setVersion:
writeMessage:
_handleStreamError
_applyQuarantineMetadataWithManifestItem:fd:
_computedFileModeForPackageItem:
stageInPackageFileUmask
_packageItem:matchesMode:
_applyFileMetadataWithManifestItem:packageRootFD:
copyPackageFileWithPackageFd:toStageFd:relpath:
stageInPackageDirectoryUmask
_applyDirectoryMetadataWithManifestItem:packageRootFD:
itemAtIndex:
_stageExistingPackageItem:withLiveFd:stageFd:
dataWithContentsOfURL:options:error:
setXattrs:
setItem:
addLocalItem:
initWithZone:stageID:url:
stagePackageWithReader:package:xattrsPackage:stageItemURL:livefd:recordName:
_writer
setMaxConcurrentOperationCount:
initWithDirectoryItem:
addOperation:forItem:
removeOperationsForItemGlobalID:
_finishDirectoryToPackageTransmogrification:relpath:
addCompletionCallback:
addMiscOperation:
_renameDelayForZone:
_renameItem:
_scheduleRenameAfter:onQueue:
_renameItems
scheduleDirectoryToPackageTransmogrification:absolutePath:
scheduleBouncedDirectoryRename:
_pendingRenamesTimer
_pendingRenames
_pendingTransmogirifcations
initWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
sortUsingComparator:
_clientZonesMatchingSearchString:
brc_errorClientZoneNotFound:
brc_errorAppLibraryNotFound:
_appLibrariesMatchingSearchString:
singleClientZoneMatchingSearchString:error:
appLibrariesMatchingSearchString:error:
singleAppLibraryMatchingSearchString:error:
initWithUserURL:
restoreWithCompletionBlock:
clientDatabaseURL
setClientDatabaseURL:
_clientDatabaseURL
T@"NSURL",&,N,V_clientDatabaseURL
br_osUpgradeMigration
migrationQueryForMangledID:key:didUpdateWithCursor:
arrayByAddingObjectsFromArray:
_saveFetchedRecords:cursor:error:
maxRecordCountInQuerySharedRecordsOperation
initWithCursor:
initWithQuery:
setZoneID:
setFetchAllResults:
setRecordFetchedBlock:
setQueryCompletionBlock:
setQueryCursorFetchedBlock:
initWithRecordType:predicate:
_performQuery:recordFetchedBlock:cursorUpdatedBlock:desiredKeys:completion:
initShareIDWithItemID:zoneID:
_updatedContinuationCursor:fetchedRecords:error:
_performAfterQueryingForShareIDsOfFolders:completion:
_performAfterQueryingForShareAliasesWithCompletion:
allMigrationKeysOrdered
_migrationKey
_continuationCursor
_shareIDsToFetch
isOverQuota
currentStatus
lastServerUpdate
initWithName:session:readingOptions:
_detachAllTrackedDocID:error:
_finishAfterWaitingForDocumentsWithID:error:
isForBackup
didAccessDocument:
wantsCurrentVersion
setCompletionHandler:
brc_errorNotOnDisk:
_provideDocument:
enumerateBelow:appLibrary:handler:
isRecursive
_provideDirectoryRecursively:
_provideURL
_provideItem
trackedDocIDs
initWithURL:readingOptions:client:session:
setIsRecursive:
setIsForBackup:
setWantsCurrentVersion:
_directoryItem
_treeEnumerator
_trackedDocIDs
_docIDsToCancel
_callbacks
_lastDownloadError
_isStillEnumeratingDirectory
_isMonitoringReachability
_appLibrariesMonitored
_isRecursive
_isForBackup
_wantsCurrentVersion
TB,N,V_isRecursive
TB,N,V_isForBackup
TB,N,V_wantsCurrentVersion
role
encryptedPublicSharingKey
brc_errorPermissionError:
setPublicSharingIdentity:
displayedHostname
setDisplayedHostname:
setWantsPublicSharingKey:
_performAfterCopyingPublicSharingKeyWithRecordID:completion:
brc_cloudKitErrorForRecordID:
_shouldFetchSharingIdentity:
_performAfterGettingPublicSharingKeyForRecord:completion:
_performAfterFetchingiWorkRoutingTokenIfNecessary:completion:
_performAfterFetchingiWorkSharingIdentityOnItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnDocumentItem:wantRoutingKey:completion:
_performAfterFetchingSharingIdentityOnDirectoryItem:wantRoutingKey:completion:
_performAfterPreparingSharingIdentityIfNecessaryWhenWantRoutingKey:completion:
initWithName:zone:share:
_updateDBAndSyncDownIfNeededWithShare:recordsToLearnCKInfo:
performAfterPreparingSharingIdentityIfNecessary:
_share
_sharingIdentityPreparedRecord
isKnownToServer
brc_errorItemNotShareable
brc_errorItemAlreadyPartOfAShare
preventSharingFolderWithPendingDelete
containsPendingDeleteDocuments
brc_errorItemInTrash
performAfterUnsharingParentShareTurdIfNecessary:
initWithShare:zone:
shareID
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
initWithUserIdentities:session:
_userIdentities
_shareParticipants
initWithRecordIDsToGrantAccess:recordIDsToRevokeAccess:
setRecordAccessGrantedBlock:
setRecordAccessCompletionBlock:
initWithItem:allowAccess:
_document
_allowAccess
_accessToken
_referenceIdentifier
initWithShareIDs:
setBaseTokensByShareID:
setChildRecordIDsByShareID:
setShareParticipantKeyFetchedBlock:
setShareParticipantKeyCompletionBlock:
_fetchBaseTokenWithCompletion:
_contentRecordID
_participantKey
_baseToken
_iWorkShareable
_isChildOfShare
_performPCSChainBatch
_serverItem
_chainedRecordsCount
ckContainerID
CKAssignToContainerWithID:
_completedWithURL:error:
initWithShare:zone:appName:
_appName
initWithRootRecord:shareID:
shortToken
initWithShareID:emptyRecord:
emptyRecord
_emptyRecord
T@"CKRecordID",R,N,V_shareID
T@"CKRecord",R,N,V_emptyRecord
deleteShareIDBatchCount
subarrayWithRange:
removeSharedSubitemsWithCompletion:
brc_errorFolderHasSharedSubitemsWithSharedByMeURLs:sharedToMeURLs:
parseUnsaltedBookmarkData:itemID:mangledID:error:
enumerateItemsWithShareIDUnderParent:block:
_completeAfterProcessingClientTruthIfNecessaryWithError:
_completeAfterProcessingServerTruthIfNecessaryWithError:
processServerTruthWithCompletion:
processClientTruthWithCompletion:
initWithItem:processType:maxSubitemsToFail:
computeURLForItemID:rootURL:
_rowID
_processType
_batchSize
_failedSubitemsLeft
_sharedClientSubitems
_aliasItemsToDelete
_shareIDsToDelete
_rootClientZone
_isFSRoot
_alreadyHasShareID
_schedule
uploadBatchCount
_scheduleOneBatchWithQoS:
_setReachedCap:
_evaluateCap
setDidProgressBlock:
availableDiskSpaceDidChange
_addBatchOperation:
transferQueueTransferBudget
cancelTransferID:
addAliasItem:toTransferWithID:
progressForTransferID:
initWithSyncContext:name:scheduler:
startSchedulingMultipleItemsInteractively
endSchedulingMultipleItemsInteractively
streamDidBecomeReadyToTransferRecords
setStreamDidBecomeReadyToTransferRecords:
maxCountOfBatchesInFlight
setMaxCountOfBatchesInFlight:
_nextFire
_inFlightOpByID
_schedulingSource
_transferWorkloop
_inFlightSize
_transferBatchRequestWaiter
_isWaitingForTransferBatch
_hasReachedCap
_multipleItemsInteractiveSchedulingCount
_streamDidBecomeReadyToTransferRecords
_maxCountOfBatchesInFlight
T@?,C,N,V_streamDidBecomeReadyToTransferRecords
TQ,N,V_maxCountOfBatchesInFlight
T@"NSArray",R
TQ,R,N,V_inFlightSize
setShareID:
brc_errorDocumentIsNotSharedAtURL:
T@"CKRecordID",&,N,V_shareID
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
addXattrs:
xattrsCount
clearXattrs
xattrsAtIndex:
xattrsType
T@"NSMutableArray",&,N,V_xattrs
readTargetFromRelativePathAndSyncUp:
T@"BRCDirectoryItem<BRCFSRooted>",R,D,N
_registerSubscriptionForZoneID:isOptimisticSubscribe:
_createZoneWithZoneID:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithZoneID:subscriptionID:
optimisticSubscribe
subscriptionOnly
setSubscriptionOnly:
createZoneAndSubscribeCompletionBlock
createdZone
_zoneID
_optimisticSubscribe
_subscriptionOnly
_createZoneAndSubscribeCompletionBlock
_createdZone
TB,N,V_subscriptionOnly
TB,N,V_optimisticSubscribe
T@?,C,N,V_createZoneAndSubscribeCompletionBlock
T@"CKRecordZone",R,N,V_createdZone
setMarkZonesAsUserPurged:
initWithLatestGCStartTime:
timeSinceLatestGCStartTime
_latestGCStartTime
_performInStageDirectory:block:
_fileIDMightHaveBeenUnlocked:
globalItemByFileID:
_openStageDirectory:
nonLocalFaultURLForAdditionName:
applyMetadataOnFileDescriptor:liveFileDescriptor:itemID:clientZone:statInfo:version:sharingOptions:
_watchLockedRelpath:
_pathInStage:index:generationID:
_flockToMakeLiveAtPath:error:
stageFSRootUmask
stageDirectoryUmask
stageFileUmask
maxPreservedXattrBlobSize
cleanupStagedSyncUpWithID:
_anchorNameForChangeToken:recordZoneID:
fileURLWithPath:isDirectory:
destroyAnchorAndPackageAnchoredAtURL:
_graveyardAt:path:forItemID:
minFileSizeForGraveyard
garbageCollectSpace:
purgeGraveyardSpace:withUrgency:
_purgeSpaceUnderQueue:withUrgency:
graveyardAgeDeltaInLowUrgency
graveyardAgeDeltaInMedUrgency
clientPackageDatabaseDirectory
anchorExistsForArchiverInfo:
gcPackagesInDirectory:dbInUseBlock:
garbageCollectPackages
enumeratePrivateServerZones:
_updatePersistedStateWithLatestGCStartTime:
removeLowDiskObserver:forDevice:
addLowDiskObserver:forDevice:
stageGCXPCActivity
lowDiskStatusChangedForDevice:hasEnoughSpace:
makeDirectoryInStageGatherFileID:generationID:error:
makeSymlinkWithTarget:inStageGatherFileID:generationID:error:
makeNonLocalVersionSideFaultWithAdditionName:clientZone:statInfo:version:sharingOptions:error:
makeItemLive:fromStage:bySwappingWith:fileName:error:
makePendingFetchRecordDirWithStartingChangeToken:recordZoneID:
cleanupStagedUploadWithID:
associateDownloadStageID:withOperation:
rememberStagedDownloadWithID:gatherFileID:generationID:documentID:appLibrary:error:
moveOldVersionFromPath:error:
moveToGraveyardFromPath:forItemID:error:
existsInStage:generationID:
existsInOldVersionStageOrGraveyard:
transferDocumentID:fromOldVersionStage:toStage:
purgeSpace:withUrgency:
purgableSpace
disarmLockedTestTimer
_stageDirectoryPath
_stageDirectoryFileID
_unflushedStagedFileIDs
_activeUploadStageIDs
_activeDownloadStageIDs
_watchedLockedFileIDs
_lockedTestTimer
_flushingQueue
_persistedState
_lowDiskSpace
dataWithPropertyList:format:options:error:
initWithURL:name:
brc_parseAdditionFilename:mangledID:itemID:etag:session:
additionWithName:inNameSpace:error:
prettyNameForFilePresenterID:
addReaderID:completionHandler:
cancelReaderID:
_fileReactorID
_physicalURLForURL:
_provideItemAtURL:toReaderWithID:completionHandler:
_cancelProvidingItemAtURL:toReaderWithID:
_operationsByName
arrayWithContentsOfFile:
blacklistedPackageExtensions
brc_loadForcedPackageExtensions
packageExtensionPlistWriteInterval
writeToFile:atomically:
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
dictionaryWithContentsOfFile:
pathWithComponents:
getBytes:length:
setNotifRank:
setDatabaseID:
changeTokenFromData:
toData
notifRank
_notifRank
_databaseID
TQ,N,V_notifRank
TQ,N,V_databaseID
orderedSet
setRank:
addIndexOfItem:
addDeletionOfFileObjectID:rank:
batchCount
listItems:
_toIndexItems
_deletedItemIDs
_observer
TQ,N,V_rank
isIndexingAvailable
initWithName:protectionClass:
deleteAllSearchableItemsWithCompletionHandler:
rawID
_signalActiveSetDidChange
fileProviderManager
_readyForIndexingWithAckedRank:
changeTokenForNotifRank:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
_deleteAllRanks
_deletedDocIdResultSetFromNotifRank:batchSize:
garbageCollectRanksPreceding:
_handleResetForRowID:notifRank:completionHandler:
_enumerateChangesFromChangeToken:limit:completion:
recentsEnumeratorPacerInterval
_activeSetDidChange
dropLegacyCoreSpotlightIndexIfNeededWithCompletionHandler:
dropRecentsForSession:completionHandler:
enumerateChangesFromChangeToken:limit:completion:
_pacer
_readyForIndexing
_flushedNotifRank
T@"CKRecordID",R,N,V_recordID
pendingGroup
fetchOperationForTransfers:traceCode:
moveItemAtURL:toURL:error:
_stageWithSession:error:
perDownloadCompletionBlock
transferredObjectsPrettyName
_perDownloadCompletionBlock
T@?,C,V_perDownloadCompletionBlock
_prepareSecondStageWithSession:manifest:package:error:
_stageWithSession:manifest:package:xattrsPackage:error:
liveItemIsPackage
liveDocumentID
desiredIndices
liveFileID
_liveFileID
_liveDocumentID
_liveItemIsPackage
_isFinderBookmark
_requiresTwoPhase
_desiredIndices
TB,R,N,V_liveItemIsPackage
TI,R,N,V_liveDocumentID
TQ,R,N,V_liveFileID
T@"NSIndexSet",R,N,V_desiredIndices
TB,R,N,V_requiresTwoPhase
T@"BRCProgress",&,D,N
setDesiredPackageFileIndices:
_stageContentWithSession:error:
associateThumbnailImagesDictionary:serializedQuickLookMetadata:withImmutableDocument:atURL:error:
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
_stageWithSession:creationInfo:error:
isLoser
_secondaryRecordID
_secondaryRecord
_isLoser
_storage
_gsError
_docID
T@"GSPermanentStorage",R,N,V_storage
T@"BRCProgress",&,N
T@"NSError",R,N,V_gsError
TB,R,N,V_isLoser
T@"NSNumber",R,N,V_docID
createAdditionStagedAtURL:creationInfo:completionHandler:
_readers
parentItemID
_throttle
br_purge
itemByParentID:andName:
_deleteAllContentsOperation
_deleteAllContentsOperationLastError
T@"BRCZonePurgeOperation",R,N
T@"BRCPrivateClientZone",R,N
_propagateDeleteToChildrenOfItemID:
_propagateFolderDeletesToTheirChildren
T@"BRCSharedClientZone",R,N
setRelativePath:
setDocID:
setGenCount:
setIsDirectory:
_isDirectory
_genCount
T@"NSString",&,N,V_relativePath
T@"NSNumber",&,N,V_docID
TI,N,V_genCount
TB,N,V_isDirectory
uploadThrottle
_scheduleSyncUpJob:
_clearSyncUpErrorForItem:
perItemSyncUpThrottle
initWithItemDBRowID:zoneRowID:
thumbnailTransferQueueWidth
transferQueueMinBatchSize
quotaFetchPacerDelay
_scheduleQuotaFetchForDefaultOwner
_globalQuotaStateUpdateForDefaultOwner
_scheduleRetries
setState:forUploadJobID:zone:
uploadMaxInPkgFileSize
uploadMaxFileSize
largestPackageItemSizeInDocumentID:session:
brc_errorDocumentWithFilename:size:isTooLargeToUpload:
scheduleQuotaStateUpdateForOwner:
_thumbnailOperationForItemRowID:
_cancelJobsMatching:
_buildItemTooLargeErrorIfNeeded:syncContext:
hasItemsOverQuotaForOwner:
setIsDefaultOwnerOutOfQuota:forceSignalContainers:
_computeRecordForJobID:item:syncContext:
_thumbnailOperationsMax
packageItemsForItem:order:
initWithDeviceID:fileID:generationID:
setPackageIndex:
pathInPackage
setItemTypeHint:
updateWithPkgItem:
_updatePackageRecord:item:stageID:error:
thumbnailImagesDictionary
copyItemAtURL:toURL:error:
serializedQuickLookMetadataDictionary
_reportUploadErrorForDocument:error:
_handleFileModifiedError:forItem:
_documentItemForJobID:stageID:
_updateRecord:item:syncContext:thumbnailOperation:stageID:
initWithDocumentAtURL:
_updateJobID:setStageID:operationID:
_updateRecord:jobID:syncContext:thumbnailOperation:stageID:
_doneFetchingThumbnailForJobID:
_startFetchThumbnail:jobID:
packageWithPackage:error:
updateSignaturesForFilesInItem:fromCKPackage:error:
_duplicatePackage:stageID:stageName:error:
_finishPackageUploadWithRecord:item:stageID:error:
uploadFileModifiedThrottle
_clearUploadErrorForDocument:
_documentItemForJobID:operationID:
_finishedUploadingItem:record:jobID:stageID:syncContext:error:
_minBatchSize
_willAttemptJobID:throttle:operationID:
br_upload
setIsDefaultOwnerOutOfQuota:
_rescheduleJobsOutOfQuotaForDefaultOwnerWithAvailableSize:
br_quotaUpdateUploader
_setQuotaAvailableForDefaultOwner:
setFetchUserQuotaCompletionBlock:
descriptionForJobID:context:
deleteJobsForZone:
addAliasItem:toUploadingItem:
setState:forJobID:zone:
boostDocID:item:
removeBoostedDocID:
hasItemsOverQuotaInZone:
forceScheduleQuotaFetchForOwner:
_thumbnailsOperations
_boostedDocIDs
_stampForDocID
_retryQueueSource
_thumbnailQueue
_quotaPacer
_globalQuotaStateUpdatePacer
_prepareReachedMax
_isDefaultOwnerOutOfQuota
_uploadsDeadlineScheduler
T@"BRCDeadlineScheduler",R,N,V_uploadsDeadlineScheduler
T@"NSDictionary",R,N,V_thumbnailsOperations
TB,N,V_isDefaultOwnerOutOfQuota
initWithItemDBRowID:
initWithRecord:ckInfo:
T@"BRFieldCKInfo",R,N,V_ckInfo
pcsChainShareAliases
initWithItemID:parentID:structuralCKInfo:contentCKInfo:itemType:aliasTargetZoneIsShared:chainState:
unchainedItemInfoInServerTruthEnumeratorParentedTo:
itemType
structuralCKInfo
contentCKInfo
chainState
aliasTargetZoneIsShared
_itemType
_aliasTargetZoneIsShared
_chainState
_structuralCKInfo
_contentCKInfo
T@"BRCItemID",R,N,V_parentID
T@"BRFieldCKInfo",R,N,V_structuralCKInfo
T@"BRFieldCKInfo",R,N,V_contentCKInfo
Tc,R,N,V_itemType
TI,R,N,V_chainState
TB,R,N,V_aliasTargetZoneIsShared
_chainPreppedRecordToParent:
setObject:atIndexedSubscript:
protectionData
initWithAppLibrary:
containsRecordInfo:
prepareFirstPhaseRecordBatch
addFullyChainedRecordInfo:
chainPreparedRecordBatch:
chainedRecordsCount
recordsForFirstPhase
recordsForSecondPhase
halfChainedRecordMap
_fullyChainRecordBatch
_fullyChainRecordInfoMap
_halfChainedRecordMap
_alreadyHalfChainedRecords
_recordsForFirstPhase
_should2PhasePCSChain
T@"NSDictionary",R,N,V_halfChainedRecordMap
initWithPCSChainInfo:clientZone:
chainInfo
_chainInfo
_enumerator
pcsChainingMaxPathDepth
brc_errorFolderHierarchyTooDeep
_maxPathDepth
_stack
pcsChainingBatchSize
brc_isRetriableForPCSChaining
_sendRecordBatch:recursed:completion:
_sendRecordBatch:completion:
_buildRecordListWithCompletion:
_chainRecords
pcsChainCompletionBlock
shouldFillBatch
_rootItem
_completed
_tryCount
_syncDownBeforeRetry
_shouldFillBatch
_pcsChainCompletionBlock
T@?,C,N,V_pcsChainCompletionBlock
TB,N,V_shouldFillBatch
brc_iWorkPathExtensions
setHasGenerationID:
hasGenerationID
setHasSize:
hasSize
hasXattrs
item
_item
T@"BRFieldPkgItem",&,N,V_item
Tq,N,V_fileID
TI,N,V_generationID
T@"NSData",&,N,V_xattrs
itemGlobalIDFromLocalItem:
T@"BRCZoneRowID",R,N,V_zoneRowID
shouldPreparePCSMigration
blacklistPCSPrep
fetchAllRecordZonesOperation
_createCloudDocsZone:
setFetchRecordZonesCompletionBlock:
initWithSourceZoneIDs:targetZone:
setAggregateZonePCSCompletionBlock:
_fetchZonesNeedingMigration:
_interestingZoneIDs
wait
host
carryPartitions
_setupSharedPackageExtensionsPlist
packageExtensions
attributesOfItemAtPath:error:
filePosixPermissions
appLibraryScanThrottleParams
appLibraryResetThrottleParams
sharedAppLibraryResetThrottleParams
appLibraryAliasRemovalThrottleParams
lostItemThrottleParams
operationFailureThrottleParams
syncClientZoneThrottleParams
syncClientZoneErrorThrottleParams
_createAccountSupportPathIfNeeded:protectParent:
invalidateCachedURLProperties
_setupThrottles
createRootForSyncedFolderType:
setRoot:forSyncedFolderType:
_enumerateAccountHandlerSupportedFolderTypes:
createFSEventsMonitorForSyncedFolderType:
setFSEventsMonitor:forSyncedFolderType:
spotlightIndexingEnabled
_createAppLibraryRootsIfNeededWithError:
createAppLibrariesIfNeededWithError:
cloudDocsMangledID
diskSpaceCheckInterval
availableDiskSpaceUsingCache:schedulingPendingDiskItemsIfNeeded:
_createAppLibraryRootIfNeededAtPath:error:
aggressivelyPCSChainWithSession:
br_aggressiveChaining
_pcsChainAllItemsWithActivity:
dbIntegrityCheckApplyJobs
dbIntegrityCheckSyncUpJobs
dbIntegrityCheckDownloadJobs
dbIntegrityCheckUploadJobs
dbIntegrityCheckReaderJobs
_recoverAndReportBoosting
transmogrifyXPCActivity
itemTransmogrifier
aggressivePCSChainActivity
dbIntegrityCheckXPCActivity
_recoverAndReportMissingJobs
fixupItemsAtStartup
_registerBackgroundXPCActivities
privateCloudDatabase
operationQueue
sessionZombiesEnabled
closeXPCClientsSync
_unloadClientZones
turnObjectIntoZombie:
excludedFilenamesWorthPreserving
excludedExtensionsWorthPreserving
br_isExternalDocumentReference
br_isExcludedButPreservedAtLogOutWithFilenames:extensions:
br_isDocumentTooLargeForUpload:maxUploadDocumentSize:
_recursivelyPrepareFolderForLogOutAtURL:pruneEmptyFolders:pruneEmptyTopLevelFolder:maxDepth:
destroyLocalDataWaitingForFilesToBeUnlinked:pristineContainerIDs:completionBlock:
forcePurgeWithCompletionBlock:
containsString:
__registerServerZone:clientZone:appLibrary:isShared:
_shouldPrivateAppLibraryBeCZMMoved:
__getOrCreateServerZone:
__getOrCreateClientZone:withServerZone:alreadyExists:
__getOrCreateAppLibrary:rowID:createOnDisk:alreadyExists:withClientZone:createCZMMoved:
_getOrCreateAppLibraryAndPrivateZonesIfNecessary:creationFlags:
fetchUserRecordIDWithCompletionHandler:
hasFSEventsMonitorForSyncedFolderType:
enumerateFileTypesWithFilterBlock:enumerationBlock:
applySyncPolicy:forSyncedFolderType:isInitialCreation:error:
versionNumberForBundleIdentifier:
initWithXPCObject:
updateMetadataWithExtractorProperties:iconPaths:bundleID:
setBoolResult:error:
extractMetadataForContainerID:bundleID:minimumBundleVersion:reply:
result
enumerateObjectsUsingBlock:
standardUserDefaults
setOptimizeStorageEnabled:
synchronize
shouldSessionBeGreedy
maximumAccountSizeToBeAlwaysGreedy
accountSize
minimumDiskSpaceRequiredToBeGreedy
relativeDiskSpaceRequiredToReturnToGreedyState
startDownloadsForGreediness
enableSyncforSyncedFolderType:isInitialCreation:error:
disableSyncforSyncedFolderType:isInitialCreation:error:
_loadClientZonesFromDisk
fsEventsMonitorForSyncedFolderType:
openWithRoot:isImmutableRoot:volume:error:
removeRootForSyncedFolderType:
removeFSEventsMonitorForSyncedFolderType:
initWithAccountSession:name:
setDB:
cloudDocsAppsListDidChange:
registerClient:
unregisterClient:
icloudAccountIsInCarry
resetThrottles
sharedServerZoneByMangledID:
destroySharedClientZone:
availableDiskSpaceUsingCache:
computeTotalLiveDocumentSizeWithDb:
computeTotalEvictableSizeWithAccessLowTimeDelta:medTimeDelta:highTimeDelta:db:reply:
_setRootPathXattrValue:forRootPath:error:
_getRootPathXattrValue:forRootPath:error:
removeDesktopSymlink:andDocumentsSymlink:
_recreateSymlinkIfNecessaryForDocumentsPath:folderName:destinationPath:
recreateDesktopSymlinksIfNecessary
shouldPathBeDesktopSymlink:
userNotification
appLibraryScanThrottle
lostItemThrottle
_syncContexts
_defaultScheduler
_dbURL
_dbWatcher
_dbWatcherQueue
_dbCorruptionQueue
_clientTruthWorkloop
_serverTruthWorkloop
_readOnlyWorkloop
_cloudDocsFD
_dbProfilingHook
_miscOperations
_clientDB
_serverDB
_readOnlyDB
_expensiveReadOnlyDB
_clientState
_serverState
_zonesLock
_libraryRowIDsByMangledID
_appLibrariesByRowID
_serverZonesByZoneRowID
_sharedServerZonesByMangledID
_sharedClientZonesByMangledID
_privateServerZonesByID
_privateClientZonesByID
_xpcClients
_lastDiskSpaceCheckTime
_availableDiskSpace
_totalDiskSpace
_isGreedy
_zonesCreationLock
_reschedulePendingDiskItemsPacer
_updateDiskSpacePacer
_accountIsReady
_accountWaitOperation
_isDBOpened
_isInCarry
_rootsByFolderType
_fsEventsMonitors
_containerScheduler
_applyScheduler
_fairClientDBScheduler
_volume
_fsReader
_fsUploader
_fsDownloader
_syncUpScheduler
_fsWriter
_downloadTrackers
_notificationManager
_stageRegistry
_diskReclaimer
_recentsEnumerator
_appLibraryScanThrottle
_appLibraryResetThrottle
_sharedAppLibraryResetThrottle
_appLibraryAliasRemovalThrottle
_lostItemThrottle
_syncClientZoneThrottle
_syncClientZoneErrorThrottle
_resetQueue
_itemTransmogrifier
_analyticsReporter
T@"NSString",R,N,V_accountID
T@"BRCGlobalProgress",R,N,V_globalProgress
T@"BRCDeadlineScheduler",R,N,V_defaultScheduler
T@"BRCApplyScheduler",R,N,V_applyScheduler
T@"BRCContainerScheduler",R,N,V_containerScheduler
T@"BRCFairScheduler",R,N,V_fairClientDBScheduler
T@"BRCFSReader",R,N,V_fsReader
T@"BRCFSUploader",R,N,V_fsUploader
T@"BRCFSDownloader",R,N,V_fsDownloader
T@"BRCSyncUpScheduler",R,N,V_syncUpScheduler
T@"BRCFSWriter",R,N,V_fsWriter
T@"BRCVolume",R,N,V_volume
T@"BRCDownloadTrackers",R,N,V_downloadTrackers
T@"BRCItemTransmogrifier",R,N,V_itemTransmogrifier
T@"BRCAnalyticsReporter",R,N,V_analyticsReporter
T@"BRCNotificationManager",R,N,V_notificationManager
T@"BRCStageRegistry",R,N,V_stageRegistry
T@"BRCDiskSpaceReclaimer",R,N,V_diskReclaimer
T@"BRCUserNotification",R,N,V_userNotification
T@"BRCRecentsEnumerator",R,N,V_recentsEnumerator
T@"BRCAccountWaitOperation",R,N
T@"BRCThrottle",R,N,V_appLibraryScanThrottle
T@"BRCThrottle",R,N,V_appLibraryResetThrottle
T@"BRCThrottle",R,N,V_sharedAppLibraryResetThrottle
T@"BRCThrottle",R,N,V_appLibraryAliasRemovalThrottle
T@"BRCThrottle",R,N,V_lostItemThrottle
T@"BRCThrottle",R,N,V_operationFailureThrottle
T@"BRCThrottle",R,N,V_syncClientZoneThrottle
T@"BRCThrottle",R,N,V_syncClientZoneErrorThrottle
T@"NSObject<OS_dispatch_queue>",R,N,V_resetQueue
_addTransfer:
_finishedTransfer:error:
_cancelTransferID:
_setProgress:forTransfer:
sendBatchProgressedCallback
_finishedTransferForRecord:recordID:error:
setTotalSize:
didProgressBlock
_entriesByRecordID
_entriesBySecondaryRecordID
_entriesByTransferID
_itemsCount
_didProgressBlock
_pendingGroup
T@?,C,V_didProgressBlock
TQ,V_totalSize
TQ,V_doneSize
T@"NSObject<OS_dispatch_group>",R,N,V_pendingGroup
startFgColor:bgColor:attr:
write:
startFgColor:attr:
startBgColor:attr:
startFgColor:
startBgColor:
startAttributes:
changeFgColor:
changeBgColor:
changeAttributes:
_bookmarkDataWithItemResolutionString:serverZone:salted:
itemResolutionString
bookmarkDataWithItemResolutionString:serverZone:
itemResolutionStringWithRelativePath:
brc_errorAccountMismatch
initWithProblem:
zoneHealthReportedRecordNamesCount
setByAddingObjectsFromSet:
initWithType:recordName:
mergeWithProblem:
effectedRecordNames
_effectedRecordNames
Ti,R,N,V_type
T@"NSSet",R,N,V_effectedRecordNames
healthErrorsToReport
initWithProblemReport:
_priorityForProblemType:
_effectiveProblemType
_zoneStateForProblemType:
_addProblem:
effectiveProblemMessage
healthErrorsForReset
_problems
_needsSyncUp
_pendingRequestID
Ti,R,N,V_state
T@"NSNumber",&,N,V_pendingRequestID
TB,N,V_needsSyncUp
initWithServerZoneHealthState:
stringWithCString:encoding:
brc_fileURLWithFileDescriptor:
ignoredQuarantineMask
initWithLength:
mutableBytes
xattrNamesListBegin
xattrNamesListEnd
valueForKey:
xattrNamesEnd
structuralXattrNamesEnd
contentXattrNamesEnd
getXattrValue:error:
clearCache
_xattrNamesList
_xattrNamesData
_xattrCount
_contentXattrCount
_sizeLimit
_cacheSize
_cachedXattrs
_purge
_cachePurgeSource
_unlinkRootPath
_scheduleAsync
_doneWithError:
treeEnumeratorBatchSize
_iterate:
firstIndex
removeIndex:
__iterate:
_visitNewParent
initWithSession:tracker:
initWithSession:group:
completionHandler
_handler
_seen
_toVisit
_strongSelf
_completionHandler
T@?,C,N,V_completionHandler
initWithSession:appLibraries:
_zonesStillUploading
_hiddenZoneWithError
_perContainerIDError
stringByRemovingPercentEncoding
capitalizedString
additionURLForName:storagePrefix:inConflictNamespace:
label
cancelled
markPathMatchLostIfLocationDoesntMatch:
handleReservedPathMatchesIfNeeded
matchLookupItemsWithDisk
readerThrottle
readerMaxConcurrentIOs
_readCoordinationCount
_scheduleCoordinatedReadForItem:path:
readUnderCoordinationAtURL:
_scheduleReadJobWithID:
updateSnapshotAtPath:error:
readUnderCoordinationWithLookup:
lookupAndReadItemUnderCoordinationAtURL:
bouncePath:forItemConflictingWithAnFSRoot:
fseventAtPath:flags:unresolvedLastPathComponent:
fseventOnRoot:flags:
fseventOnContainer:flags:
rootPath
fseventOnDeadPath:item:
updateLookupAfterHandlingPathMatchWithFSRoot:relpath:
fseventOnSymlink:flags:lookup:
fseventOnAlias:flags:lookup:
fseventOnDocument:flags:options:lookup:unresolvedLastPathComponent:
fseventOnDirectory:flags:lookup:
_cancelScan
fseventRecursiveAtRoot:withReason:
needsLookupReloadAfterHandlingCrossZoneMoveWithItem:relpath:
_createSharedZoneIfNecessaryWithLookup:
itemForCreatedDocumentsDirectory:appLibrary:path:
_refaultItem:withFaultPath:
readerPackageProcessingDelay
_delayJobID:by:
_attemptSchedulingCoordinatedReadForItem:path:
fseventOnDocument:flags:options:lookup:
_fseventOnDocument:flags:options:item:lookup:unresolvedLastPathComponent:
lostScanDeepScanFirstThreshold
_backoffBeforeProcessingLostItemWithStamp:appLibrary:
_fetchNextLostItemID:parentID:appLibraryRowID:tooManyScans:stamp:
fileSystemIDMayStillExist
_resolveDocumentID:zone:
_processDeadItem:
_processLostItem:resolvedToPath:
_scanDirectory:atPath:lookup:
_didResolvedDocumentID:fileID:zone:
clientZonesChildrenNeedingSyncUpAreIn
markChildrenLost
_scanDone:atPath:lookup:
_slowScanDirectoryAtPath:
_startScanOfRelpath:
caseInsensitiveCompare:
_finishCurrentRelpathScan
initForEnumeratingBelow:recursive:batchSize:targetQueue:
_finishedScanWithError:
scheduleWithProcessBlock:completion:
_nextLostItemIDWithBackoff:appLibrary:now:
_processLostItem:
_startScanOfRegularAppLibrary:
_lostScanSchedule
resetWithReason:
fseventOnDocument:flags:lookup:
fseventOnURL:dbFlags:
lostScanGroup
_coordinatedReaders
_readerCountReachedMax
_currentScan
_lostSet
_lostScanSource
_lostScanDelay
_lostScanDelaySection
_lostScanGroup
T@"NSObject<OS_dispatch_group>",R,N,V_lostScanGroup
_dbBecameCorrupted
_openDB
_createSchemaIfNecessary
useSerialQueue
_recordTypeFromRecordID:isShare:isDelete:
_destroyDatabase
saveError
_startingChangeToken
setSerializedNameComponents:
hasSerializedNameComponents
serializedNameComponents
_serializedNameComponents
T@"NSData",&,N,V_serializedNameComponents
clearOneofValuesForMagnitude
numberWithFloat:
numberWithDouble:
setHasMagnitudeFloat:
hasMagnitudeFloat
setHasMagnitudeDouble:
hasMagnitudeDouble
setHasMagnitudeInt:
hasMagnitudeInt
setHasMagnitudeBool:
hasMagnitudeBool
magnitude
setMagnitude:
setHasMagnitude:
hasMagnitude
magnitudeAsString:
StringAsMagnitude:
setHasTimestamp:
hasTimestamp
hasInvestigation
magnitudeFloat
magnitudeDouble
magnitudeInt
magnitudeBool
timestamp
_magnitudeDouble
_timestamp
_identifier
_investigation
_magnitude
_magnitudeFloat
_magnitudeInt
_magnitudeBool
TI,N,V_identifier
Tf,N,V_magnitudeFloat
Td,N,V_magnitudeDouble
Ti,N,V_magnitudeInt
TB,N,V_magnitudeBool
Ti,N,V_magnitude
TQ,N,V_timestamp
T@"AppTelemetryInvestigation",&,N,V_investigation
fallbackParentAppLibraryOnFS
fallbackParentItemIDOnFS
serverAliasItemForSharedItem:
fallbackParentServerItemOnFS
fallbackParentItemOnFS
parentItemIDOnFSInDB:
brc_attributesValues:lookup:
pointerValue
valueWithPointer:
nameComponentsAcceptUnknownUser:
_brc_isCloudKitErrorCode:
_brc_isCloudKitInternalErrorCode:
_brc_cloudKitInternalWithErrorCode:
br_cloudKitErrorForIdentifier:
_brc_isCloudKitPluginErrorCode:
_brc_cloudKitPluginErrorPayload
_brc_isCloudKitInternalErrorSafeToSyncUpWithoutSyncDown
isSqliteErrorCode:
_brc_isCloudKitZoneNotFoundError
_brc_isCloudKitZoneUserDeletedError
brc_strippedError
brc_description
brc_isBatchRequestFailed
brc_isCloudKitErrorZoneUndergoingMigration
brc_isCloudKitPCSDecryptionFailure
brc_daemonAccessDisabledError
initialize
sourceForBitIndex:
_runEventHandler
unregisterSources
addSource:
signalSourceForBitIndex:
_workloop
_maxRegistedSourceBit
_lastVisitedBit
_sourceForBitIndex
T@"NSObject<OS_dispatch_workloop>",R,N
eventHandler
_schedulerBitIndex
_scheduler
_suspendCount
_signaled
_eventHandler
T@"NSObject<OS_dispatch_workloop>",&,N,V_workloop
T@?,C,N,V_eventHandler
wrapperOperationCompletionHandler
setWrapperOperationCompletionHandler:
initWithSyncContext:subOperations:
_subOperations
_resultDictionary
_wrapperOperationCompletionHandler
T@?,C,N,V_wrapperOperationCompletionHandler
_needsContainerMetadataSyncDown
_needsSharedDBSyncDown
_hasCaughtUpAtLeastOnce
_ckGroup
T@"NSDate",R,N,V_lastSyncDownDate
T@"CKServerChangeToken",R,N,V_serverChangeToken
TB,N,V_needsContainerMetadataSyncDown
TB,N,V_needsSharedDBSyncDown
TB,N,V_hasCaughtUpAtLeastOnce
T@"CKOperationGroup",&,N,V_ckGroup
initWithZoneHealthState:
_needsSyncDown
T@"NSDate",R,V_lastSyncDownDate
TB,N,V_needsSyncDown
_needsSync
TB,N,V_needsSync
_totalCount
initWithParentPath:error:
nextObjectWithIsDir:error:
_dir
initForEnumeratingBelow:recursive:error:
_recursive
_err
_targetQueue
_rootPath
T@"BRCRelativePath",R,N,V_rootPath
setUserInfo:
processIdentifier
isUsingUbiquity
_stopMonitoringProcess
cancelAllOperations
waitUntilAllOperationsAreFinished
bundleID
_isAutomationEntitled
process:didBecomeForeground:
addProcessMonitor:forProcessID:
_startMonitoringProcessIfNeeded
removeProcessMonitor:
brc_errorDaemonShouldBeLoggedOut
_hasPrivateIPCEntitlementForSelector:error:
_isAppLibraryProxyEntitled
cloudEnabledStatus
_hasAccessToAppLibraryID:error:
_canCreateAppLibraryWithID:error:
_isAppLibraryProxyWithError:
brc_errorPathOutsideAnyCloudDocsAppLibraryAtURL:
accessLogicalOrPhysicalURL:accessKind:dbAccessKind:asynchronously:handler:
_entitlementBooleanValueForKey:
cloudEnabledStatusForSession:
_entitlementValueForKey:ofClass:
valueForEntitlement:
defaultAppLibraryID
isProxyEntitled
isAutomationEntitled
isSharingPrivateInterfaceEntitled
applicationIdentifier
_auditURL:
canAccessPath:accessKind:
br_mightBeBRAlias
allowReadOnlyDBInIPC
canAccessLogicalOrPhysicalURL:accessKind:
br_containerID
brc_errorDocumentAtURL:isNotExternalToAppLibrary:
_createBookmarkWithTarget:targetPath:parentPath:aliasName:error:
_startDownloadItemsAtURLs:pos:options:error:reply:
_setupAppLibrary:error:
canAccessPhysicalURL:
issueContainerExtensionForURL:error:
initWithNonSandboxedAppWithAppLibraryIDs:bundleID:auditToken:
shareAcceptOperationForItemID:
defaultMangledID
_auditedURLFromPath:
_addExternalDocumentReferenceTo:underParent:forceReparent:reply:
_setupAppLibraryAndZoneWithID:recreateDocumentsIfNeeded:reply:
setupNonSandboxedAccessForUbiquityContainers:forBundleID:
_sharingOperationItemFromLookup:url:allowDirectory:error:
_startSharingOperationAfterAcceptation:client:item:
clientPriviledgesDescriptor
setClientPriviledgesDescriptor:
setIsUsingUbiquity:
_clientPriviledgesDescriptor
_operationQueue
_clientPid
_dieOnInvalidate
_isForeground
_invalidated
_isUsingUbiquity
_connection
T@"BRCClientPrivilegesDescriptor",&,N,V_clientPriviledgesDescriptor
TB,N,V_isUsingUbiquity
T@"NSXPCConnection",R,W,N,V_connection
TB,R,N,V_dieOnInvalidate
prepareFileProvidersWithReply:
currentAccountCopyTokenWithBundleID:version:reply:
getPrimaryiCloudAccountStatus:
getContainerURLForID:recreateDocumentsIfNeeded:reply:
brc_errorNoAppLibraryForBundle:
containerItemForContainer:withDocumentsItem:zoneRowID:
_nonSandboxedAttributesToStrip
_updateDirectoryMtime:onDisk:
senderWithLookup:client:XPCReceiver:error:
setIncludeCachedVersions:
localizedName
documentsURL
applicationProxyForIdentifier:placeholder:
defaultTimeDeltaForEviction
defaultOnDiskAccessTimeDefaultForEviction
performOptimizeStorageWithTimeDelta:onDiskAccessTimeDelta:error:
containerIDsForApplicationIdentifier:
brc_errorUnknownKey:
_loggedInUserPropertyValuesForKeys:error:
t_setMobileDocumentsURL:
br_zoneHealthSimulation
forceSyncContainerID:reply:
fileObjectIDWithString:
signalAfterCurrentFSEvent:
_unregisterPrematurely
brc_addPartialError:forURL:toError:
currentCalendar
components:fromDate:toDate:options:
rangeOfUnit:inUnit:forDate:
timeIntervalSinceReferenceDate
startOfDayForDate:
currentLocale
dateFormatFromTemplate:options:locale:
minFetchQuotaInterval
_enumerateContainersForEnumerationWithDB:handler:
maxFolderEnumerationDepth
_enumerateFoldersWithParent:depth:session:db:handler:
br_publishingRequest
setFileNamesByAssetFieldNames:
publishURLTimeout
setRequestedTTL:
setURLOptions:
downloadURL
downloadURLExpiration
setPublishAssetCompletionBlock:
setAssetPublishedBlock:
initWithDocumentItem:forPublish:readonly:
isSharingProxyEntitled
brc_errorDocumentIsNoLongerSharedAtURL:
values
initWithSyncContext:ckContainerID:
canFetchUserQuota
br_quotaUpdateXPC
br_fetchIdentityXPC
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
isFolderSharingProxyEntitled
deleteShareOnEmptySave
isCurrentUser
startOperation:toUnshareShare:forceDelete:reply:
reportXPCErrorOnPCSChain
copyShareIDsBatchSize
_presentAcceptDialogsWithMetadata:reply:
presentAcceptDialogsForShareMetadata:reply:
trashURL
br_logicalURL
br_movePromisedItemAtURL:toURL:error:
br_physicalURL
excludedFilenamesWorthWarningAtLogout
overwriteDocumentAccessTime:atime:
updateCloudEnabledStatus
br_externalDocumentPropertiesWithError:
br_URLByResolvingInProcessExternalDocumentReferenceWithProperties:
handleCloudKitShareMetadata:completionHandler:
willAcceptShareAtURL:
setupInstanceWithDict:reply:
resetBudgets:reply:
dumpDatabaseTo:containerID:includeAllItems:reply:
dumpCoordinationInfoTo:reply:
performSelfCheck:reply:
printStatus:containerID:reply:
gatherInformationForPath:reply:
simulateHealthIssueWithContainer:status:brokenStructure:reply:
healthStatusStringForContainer:reply:
zoneNameForContainer:reply:
forceSyncWithBarrierContainerID:timeout:reply:
forceSyncZoneHealthWithBarrierWithTimeout:reply:
iWorkForceSyncContainerID:ownedByMe:reply:
computePurgeableSpaceForAllUrgenciesWithReply:
purgeAmount:withUrgency:reply:
reclaimAmount:withUrgency:reply:
dropSpotlightIndexWithReply:
readerThrottleBackoffForDocumentAtPath:containerID:reply:
waitForFileSystemChangeProcessingWithReply:
launchTelemetryConsistencyChecksAtURL:reply:
createContainerWithID:ownerName:reply:
getContainersByID:
getContainerForURL:reply:
checkinAskClientIfUsingUbiquity:
presyncContainerWithID:reply:
getContainerURLForID:reply:
getContainerURLForID:forProcess:reply:
updateContainerMetadataForID:
deleteAllContentsOfContainerID:onClient:onServer:wait:reply:
registerInitialSyncBarrierForID:reply:
startDownloadItemsAtURLs:options:reply:
startOperation:toDownloadItemAtURL:readingOptions:wantsCurrentVersion:reply:
evictItemAtURL:options:reply:
thumbnailChangedForItemAtURL:reply:
getQueryItemForURL:reply:
updateItemFromURL:reply:
getAttributeValues:forItemAtURL:reply:
getItemUpdateSenderWithReceiver:reply:
getNonLocalVersionSenderWithReceiver:documentURL:includeCachedVersions:reply:
getTotalApplicationDocumentUsageWithReply:
getApplicationDocumentUsageInfoForBundleID:withReply:
hasOptimizeStorageWithReply:
setStorageOpimizationEnabled:reply:
getEvictableSpaceWithReply:
evictOldDocumentsWithReply:
iCloudDesktopSettingsChangedWithAttributes:reply:
didReceiveHandoffRequestForBundleID:reply:
getLoggedInUserPropertyValuesForKeys:reply:
addExternalDocumentReferenceTo:inContainer:underParent:reply:
resolveConflictWithName:atURL:reply:
currentAccountCreateWithID:reply:
currentAccountLogoutWithReply:
getContainersNeedingUpload:
setMigrationStatus:forDSID:shouldUpdateAccount:reply:
getMigrationStatusForPrimaryiCloudAccount:
jetsamCloudDocsAppsWithReply:
getBookmarkDataForURL:onlyAllowItemKnowByServer:allowAccessByBundleID:reply:
resolveBookmarkDataToURL:reply:
resolveFileObjectIDsToContentRecordIDs:reply:
resolveFileObjectIDToURL:reply:
getBackReferencingContainerIDsForURLs:reply:
getPublishedURLForItemAtURL:forStreaming:requestedTTL:reply:
forceConflictForURL:bookmarkData:forcedEtag:reply:
getApplicationStatus:
getApplicationStatusForProcess:reply:
getLastSyncDateWithReply:
getLocalizedLastSyncWithReply:
getContainerStatusWithID:reply:
getContainerLastServerUpdateWithID:reply:
getIsContainerWithIDOverQuota:reply:
currentNotifRankWithReply:
enumerateItemsInFolder:sortOrder:offset:limit:completion:
enumerateAllFoldersWithSortOrder:offset:limit:completion:
enumerateWorkingSetChangesFromChangeToken:limit:completion:
setiWorkPublishingInfoAtURL:publish:readonly:reply:
getiWorkPublishingInfoAtURL:reply:
getiWorkPublishingBadgingStatusAtURL:reply:
getiWorkNeedsShareMigrateAtURL:reply:
startOperation:toCopySharingInfoAtURL:reply:
startOperation:toCopySharingWebAuthTokenForContainerID:reply:
startOperation:toCopySharingAccessToken:reply:
startOperation:toCopyDocumentURLForRecordID:syncIfNeeded:reply:
startOperation:toCopyAvailableQuotaWithReply:
startOperation:toUploadAllFilesInContainer:reply:
startOperation:toPrepFolderForSharingAt:reply:
startOperation:toProcessSubitemsAtURL:maxSubsharesFailures:processType:reply:
startOperation:toEvictItemAtURL:reply:
startOperation:toAcceptShareLink:skipAcceptDialogs:reply:
copyCurrentUserIdentifierWithReply:
copyCurrentUserNameAndEmailWithReply:
copyCurrentUserNameAndDisplayHandleWithReply:
createSharingInfoForURL:reply:
startOperation:toSaveSharingInfo:reply:
startOperation:toLookupShareParticipants:reply:
startOperation:toModifyRecordAccessAtURL:allowAccess:reply:
startOperation:toCopyParticipantTokenAtURL:reply:
startOperation:toCopyShortTokenAtURL:reply:
startOperation:toCopyEtagAtURL:reply:
startOperation:toCopyShareInfoAtURL:reply:
copyBulkShareIDsAtURLs:reply:
startOperation:toCopyShareURLForShare:appName:reply:
getCreatorNameComponentsForURL:reply:
removeItemFromDisk:reply:
trashItemAtURL:reply:
boostFilePresenterAtURL:reply:
overwriteAccessTimeForItemAtURL:atime:reply:
currentSyncedRootURLsWithReply:
updatePrivilegesDescriptor
refreshSharingStateForItemIdentifier:reply:
moveBRSecurityBookmarkAtURL:toURL:reply:
capabilityWhenTryingToReparentItemAtURL:toNewParent:reply:
checkIfItemIsShareableWithInode:reply:
getShareOptionsOfItemIdentifier:reply:
getURLForItemIdentifier:reply:
lookupExcludedFilenamesForLogoutWithReply:
lookupExcludedExtensionsForLogoutWithReply:
lookupMinFileSizeForThumbnailTransferWithReply:
_t_getEntitlementsForBundleID:reply:
_t_getEntitledContainerIDsForBundleID:reply:
_t_extractMetadataForAllContainersWithReply:
scheduleDeepScanForContainer:reply:
localizedStringForKey:value:table:
currentServerChangeToken
initWithRecordZoneIDs:
setAllowsCellularAccess:
scheduleSyncDownIfNeededForZoneID:zoneIfAny:
allowsCellularAccess
scheduler
metadataChangeToken
zoneHealthChangeToken
sideCarChangeToken
_metadataChangeToken
_zoneHealthChangeToken
_sideCarChangeToken
T@"BRCContainerScheduler",R,N,V_scheduler
T@"CKServerChangeToken",R,N,V_metadataChangeToken
T@"CKServerChangeToken",R,N,V_zoneHealthChangeToken
T@"CKServerChangeToken",R,N,V_sideCarChangeToken
initWithDesiredVersion:
isStillValidForEtag:
_downloadError
_serverName
T@"NSError",&,N,V_downloadError
T@"NSString",R,N,V_serverName
TI,N
_reportRecords:requestID:
initFromPQLResultSet:session:error:
packageItemWithDocumentID:relativePath:session:
packageItemsForDocumentID:order:session:
initWithRelativePath:markDirty:
deallocateDocumentIDOfItemAtURL:error:
_deleteSnapshotAtPath:error:
_rescanDirectoryInPackage:error:
packageItemForRelpath:
changedAtRelpath:
setDirty:session:
assetRank
packageDocumentID
_isDirty
_assetRank
_packageID
_pathInPackage
TQ,R,N,V_packageID
TQ,R,N,V_fileID
T@"NSString",R,N,V_pathInPackage
Tq,R,N,V_assetRank
Tq,R,N,V_mtime
Tq,R,N,V_size
Tc,R,N,V_mode
fairScheduler
addSource:deadline:
willRunEvenHandler
runEventHandler
_deadline
_setupTimerRequiredForDeadline:now:
runDeadlineSource:completionHandler:
coalescingLeeway
computeNextAdmissibleDateForScheduling
_minHeap
_leeway
_lastSchedule
_isResumed
_computeNextAdmissibleDateForScheduling
T@"BRCFairScheduler",R,N,V_fairScheduler
Tq,N,V_leeway
T@?,C,N,V_computeNextAdmissibleDateForScheduling
_contextIdentifierForMangledID:metadata:
readerThrottleParams
applyThrottleParams
downloadThrottleParams
uploadThrottleParams
uploadFileModifiedThrottleParams
perItemSyncUpThrottleParams
uploadBatchRecordsCount
downloadBatchCount
downloadBatchRecordsCount
initWithContainerIdentifier:environment:
initWithContainerID:options:
setSourceApplicationSecondaryIdentifier:
sharedCloudDatabase
preventConcurrentModifyRecordsOperations
containerCellularSettings
isCellularEnabled
addOperation:allowsCellularAccess:nonDiscretionary:
nsurlsessiondEnabled
setContainer:
discretionaryNetworkBehavior
_preventConcurrentModifyRecordsOperations:nonDiscretionary:
_notifyFrameworkContainersMonitorWithState:
_notifyContainerBeingNowForeground
notifyDuetFromAccessByBundleID:
br_syncDownAppLaunch
_armForegroundGraceTimerForClientDescription:
foregroundGracePeriod
metadataContextIdentifierForMangledID:
transferContextIdentifierForMangledID:
initWithSession:contextIdentifier:isShared:
addOperation:nonDiscretionary:
waitForAllOperations
forceContainerForegroundForDuration:
_contextIdentifier
_isShared
_notifyTokenForFramework
_lastForegroundClientDescription
_dateWhenLastForegroundClientLeft
_timerForGraceForegroundPeriod
_timerForForcedForegroundPeriod
_foregroundStateQueue
_foregroundState
_nonDiscretionaryModifyOperations
_discretionaryModifyOperations
_applyThrottle
_downloadThrottle
_uploadThrottle
_uploadFileModifiedThrottle
_perItemSyncUpThrottle
_uploadStream
_downloadStream
T@"NSString",R,N,V_contextIdentifier
T@"BRCUserDefaults",R,N
TB,R,N,V_isShared
T@"CKContainer",R,N
T@"CKContainerID",R,N
T@"BRCTransferStream",R,N,V_uploadStream
T@"BRCTransferStream",R,N,V_downloadStream
T@"BRCThrottleBase",R,N,V_readerThrottle
T@"BRCThrottleBase",R,N,V_applyThrottle
T@"BRCThrottleBase",R,N,V_uploadThrottle
T@"BRCThrottleBase",R,N,V_uploadFileModifiedThrottle
T@"BRCThrottleBase",R,N,V_perItemSyncUpThrottle
T@"BRCThrottleBase",R,N,V_downloadThrottle
_syncContextForContextIdentifier:isShared:createIfNeeded:
initShareIDWithRecordID:zoneID:session:
brc_shareZoneName
hasPendingLostChildren
_markChildrenLostForDeadParent
hasLostChildren
_markLostDirectoryAsAlmostDead
_repopulateRecursivePropertiesOnDocumentsDirectoryIfNecessary
_updateRecursiveProperties
_retryPostponedIfNeededForDiffs:
_insertRecursiveProperties
possiblyContainsSharedByMeItem
containsOverQuotaItems
containsPendingDownload
transformIntoFSRoot
hasLiveChildren
doubleForKey:inParams:defaults:
setupWithParams:defaults:
paramsToDictionary
initWithParams:defaults:
setMinWait:
setMaxWait:
setRatioOnSuccess:
setRatioOnFailure:
setRatioOnQuotaErrorClear:
setInactivityKickbackDelay:
setInactivityKickbackRatio:
Td,N,VminWait
Td,N,VmaxWait
Td,N,VratioOnSuccess
Td,N,VratioOnQuotaErrorClear
Td,N,VratioOnFailure
Td,N,VinactivityKickbackDelay
Td,N,VinactivityKickbackRatio
initAsGlobalWithServerConfiguration:
_prepopulateGlobalUserDefaults
addObserverForName:object:queue:usingBlock:
initWithServerConfiguration:globalUserDefaults:clientZoneIdentifier:
_loadServerConfigurationDictionary
configurationUpdateXPCActivity
_setServerConfigurationURL:whenLoaded:
_parsePlistWithURL:
originalRequest
currentRequest
backgroundSessionConfigurationWithIdentifier:
setHTTPCookieStorage:
setURLCredentialStorage:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
downloadTaskWithURL:
addOperationWithBlock:
_reset
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
defaultsForIdentifier:
_loadCachedServerConfigurationDictionaryFromDB:
_saveServerConfigurationDictionaryToDB:
_serverConfigurationURL
_serverConfigurationDict
_userDefaultsCache
_configurationPlistDidUpdateBlock
_downloadQueue
_urlSession
_defaultsDidChangeNotificationObserver
_userDefaultsManager
_serverDefaultForKey:
dictionaryForKey:
objectForKey:inheritFromGlobal:validateWithBlock:
_loadObjectForKey:inheritFromGlobal:validateWithBlock:
floatValue
floatForKey:inheritFromGlobal:min:max:byDefault:
stringForKey:inheritFromGlobal:byDefault:
boolForKey:inheritFromGlobal:byDefault:
indexSetForKey:inheritFromGlobal:byDefault:
brc_decodeIndexStringToIndexSet
dictionaryWithDictionary:
unsignedLongLongForKey:min:max:byDefault:
boolForKey:byDefault:
unsignedIntForKey:min:max:byDefault:
floatForKey:min:max:byDefault:
_extensionSetForKey:startingWithExtensions:
_UTISetFor:startingWithExtensions:
intForKey:min:max:byDefault:
_umaskForKey:
xpcActivityDictionaryForKey:byDefault:
doubleForKey:min:max:byDefault:
_defaultSyncUpDailyBudget
_defaultSyncUpHourlyBudget
_defaultSyncUpMinutelyBudget
defaultExcludedFilenamesWorthWarningAtLogout
defaultExcludedFilenamesWorthPreserving
defaultExcludedExtensionsWorthPreserving
_shouldRampForKey:session:
stringForKey:byDefault:
indexSetForKey:byDefault:
_healthErrorSetForKey:byDefault:
maxRecordCountInClientZoneModifyRecordsOperation
availableQuotaComfortSize
appsFetchPacerDelay
skipServerSideThrottling
maxTotalFilesCount
maxNumberOfFilesInAFolder
systemReachabilityLatency
systemPowerLatency
systemLowDiskLatency
fseventsLatency
fseventsResetBackoff
fseventQueueBufferSize
fseventProcessBatchSize
transferQueueMinConcurrentOperations
transferQueueMaxConcurrentOperations
cacheDeletePushXPCActivity
forceForegroundGracePeriod
forceBatchFailureWhenReceivingAssetTokenExpiration
accessTimeDeltaInLowUrgency
accessTimeDeltaInMedUrgency
accessTimeDeltaInHighUrgency
accessTimeDeltaInVeryHighUrgency
onDiskAccessTimeDeltaInLowUrgency
onDiskAccessTimeDeltaInMedUrgency
onDiskAccessTimeDeltaInHighUrgency
onDiskAccessTimeDeltaInVeryHighUrgency
purgePacerInterval
dbReclaimableSpaceThreshold
cacheDeleteRecomputeInterval
activeDownloadSizeRefreshInterval
shouldDisplayUploadNotification
recentsEnumeratorBatchSize
recentsEnumeratorMaxHierarchyDepth
recentsEnumeratorFailureThrottleParams
documentAccessHighPriorityInterval
maxFolderEnumerationCount
powerLogReportInterval
shouldReportAllPerItemFailures
applyRetryCountForFailure
shouldMigrateFetchShareAliases
_globalUserDefault
_serverContainerConfigurationDict
_cache
_clientZoneIdentifier
T@"NSObject<OS_xpc_object>",R,N
Td,R,N
T@"BRCSyncOperationThrottleParams",R,N
Tc,R,N
T@"NSIndexSet",R,N
initWithServerItem:cleanupFaults:
_fetchParent
computeLogicalPath:physicalPath:isDirectory:
_fetchByDocumentID
_fetchByFileID
lookupForServerItem:cleanupFaults:
coordinatedURLAppLibrary
_fileSystemIDMayStillExist
_cleanupFaults
dictionaryWithContentsOfURL:
destroyClientPackageWithDatabaseBasePath:UUID:
databaseBasePath
absoluteString
setArchiverInfo:error:
_notifAccountStore
mainQueue
sharedManager
primaryAccount
useCellularForDataclass:
_isCellularEnabledForDocumentsAndData
_accountDidChangeNotificationObserver
unsignedCharValue
initWithRecordIDsToWebShare:recordIDsToUnshare:
_updateItemAfterShareCompleted
setWebShareRecordsCompletionBlock:
setRecordSharedBlock:
setRecordUnsharedBlock:
setRecordIDsToShareReadWrite:
_recordIDs
_forPublish
_readonly
_sharingInfo
setShouldReportAllPerItemFailures:
startWithParentOperation:
setPerRecordChangeCompletionBlock:
recordsByID
removeRecordByID:
recordZoneChangesStatusByZoneID
waitUntilRecordsAreFetched
removeAllRecords
fetchAllChanges
stop
handleZoneNotFoundIfSyncingDownForTheFirstTime:
_performAfterFetchingRecordChanges:
_startSyncDown
_startCreateZoneAndSubscriptionAndSyncDown
_editedAndDeletedRecordsCount
isEqualToErrorGrouping:
TB,R,N,V_isPCSChained
_version
Ti,N,V_version
T@"NSPersonNameComponents",&,N
setupPagerForFd:
_startInCString:fgColor:bgColor:attr:
cursorGotoLineStart
forgetRemainingSpace
puts:len:
_putsAndCrop:len:
puts:
execPagerOnFileFd:
startPager
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorUp:
cursorDown:
cursorRight:
cursorLeft:
startNewLine
endLine
remainingSpace
put:
isatty
useColor
supportsEscapeSequences
_file
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isatty
_useColor
_supportsEscapeSequences
TB,R,N,V_isatty
TB,R,N,V_supportsEscapeSequences
TB,R,N,V_useColor
br_downloadThumbnailsUserInitiated
br_zoneConsolidationManual
br_fetchNonLocalVersions
enumerateBundlesOfType:block:
addAppListObserver:
applicationIdentifiersForContainerID:
_refetchApps
_start
_cloudDocsAppLibrariesByAppID
_appIDsByAppLibraryID
_observers
_refetchPacer
_fetchInstalledAppsQueue
_hasFetchedInitialApps
generationIDString
signatureWithFileDescriptor:error:
initWithSignature:length:
T@"NSData",R,N,V_signature
_shouldForceApplyForItem:
bouncePathMatch:toApplyServerItem:clientZone:
_isPathMatchIdle:
_generateGentlePhysicalBounceNameForPathMatch:dirfd:existingSourceLogicalName:lastBounceNo:
tryToDeleteItemInNamespace:
_moveMissingItemAsideInNamespace:
_computeURLMatchWithLookup:localItem:serverItem:bounceNamespace:applyNamespace:urlMatch:
_shouldBounceSourceItemWithLookup:localItem:serverItem:bounceNamespace:urlMatch:
bouncePathMatchesForLookup:toApplyServerItem:clientZone:
_clearNamespace:
__itemAtURL:didGainVersionWithClientID:name:purposeID:
_pathMatchInNamespace:
_canUpdatePathMatch:hasAdditionsToApply:
didApplyChangesAtPath:filename:li:si:
_bounceBouncesHiddenByFault:
_bouncePathMatchIfNecessaryWithLookup:localItem:serverItem:bounceNamespace:applyNamespace:
copyItemAtURLToGenstore:forItem:error:
trashItemIfNecessary:atURL:error:
_removeDirectory:atPath:error:
_applyOrDownloadThumbnailIfNecessary:si:url:updatedAddition:applySchedulerState:
_appliedOrDownloadContentIfNecessary:si:applySchedulerState:
_applyOrEvictLosersIfNecessary:si:url:addedLosers:removedLosers:updatedAddition:applySchedulerState:
nameSpace
__itemAtURL:didLoseVersionWithClientID:name:purposeID:
tryToUpdateItemInNamespace:withDstLookup:
replaceDocumentWithContentsOfAddition:preservingCurrentVersionWithCreationInfo:createdAddition:error:
_applyChangesForServerAlias:localAlias:jobID:zone:diffs:
_stageCreationOfDirectory:
_stageCreationOfSymlink:
writeUnderCoordinationFromURL:toURL:canDelete:
_writeUnderCoordinationFromURL:toURL:canDelete:
hasNeverSyncedDown
mangledIDIsPendingMigration:
removeAllShareAcceptationSidefaults
fixupStagedItemAtStartup
_serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
containerWithIdentifier:
setFetchWebAuthTokenCompletionBlock:
setCkContainerID:
_ckContainerID
T@"NSString",&,N,V_ckContainerID
serverAliasItemForSharedItem:inZone:db:
moveAppLibraryTransfers:toAppLibrary:
_scheduleXattrFetch
stopWithError:
_recordsWithXattrsToFetch
_recordsBeingFetchedGroup
_xattrFetchingSource
_isDoneFetchingRecords
T@"NSDictionary",R,N,V_recordsByID
_addFileProvider:
_removeFileProvider:
_keyForURL:
_registerPresenterForItemAtURL:key:name:session:
_unregisterPresenterForKey:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:didGainPresenterWithID:
_provideItemAtURL:completionHandler:
_providedItemsURL
_providedItemsOperationQueue
_getPhysicalURLForURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
T@"NSURL",R,C
T@"NSOperationQueue",R
_keyForURL:andID:
_pathForKey:
_presentersIDsByKey
_privQueue
_processIdentifierForID:
_requestPurgeSpace
_dbAutovacuumableSpaceInBytes:
_doIncrementalVacuum:amount:
_dbSizeInBytes:
_fullVacuumIfPossible:
_asyncAutovacuumIfNeeds:
_enumerateItemsForEvictSyncWithBlock:withUrgency:
_vacuumDB:amount:withUrgency:
_updateNonPurgeableCachedSizeForDocument:
documentUpdateEvictability:
_updateNonPurgeableCachedSizeByAddingBytes:
onDiskAccessTimeDeltaForUrgency:
_enumerateItemsForEvictSyncWithBlock:withTimeDelta:onDiskAccessTimeDelta:
simpleUrgencyForCacheDeleteUrgency:
urgencyForCacheDeleteUrgency:
cachedPurgeableSpaceForAllUrgencies:nonPurgeableSpace:error:
periodicReclaimSpace
documentWasAccessedRecently:
cachedPurgeableSpaceForUrgency:
_isClosed
_computingPurgable
_purgePacer
shareAcceptationSidefaultEnumerator
_shareAcceptationByItemID
T@"BRCSharedServerZone",R,N
latestEventID
streamUUID
initWithLatestEventID:streamUUID:rootID:
setLatestEventID:
setStreamUUID:
_streamUUID
_latestEventID
_rootID
T@"NSUUID",&,N,V_streamUUID
TQ,N,V_latestEventID
TQ,N,V_rootID
initWithPath:flags:eventID:
flags
setFlags:
eventID
_eventID
TI,N,V_flags
TQ,R,N,V_eventID
_updatePersistedStateWithState:
fseventOnRootWithEventID:andReason:
setUpRoot:isImmutableRoot:volume:error:
setUpStreamSynchronously:reason:error:
_queueEvents:markSelfEncountered:
processFseventBatch
fseventAtPath:withFlags:andID:eventIndex:eventCount:initialScan:
resetWithReason:dropFSEventID:
didProcessEventID:
stopWatcher
_cancel
volumeIsCaseSensitive
openWithRoot:volume:error:
queueEvents:markSelfEncountered:
flushStream
_resetCount
_devicePath
_rootVnodeWatcher
_streamQueue
_historicalEventSource
_processQueue
_fseventsProcessSource
_fseventsToProcess
_maxFSEventQueueSize
_fseventProcessBatchSize
_hasMarkSelf
_rendezVous
_semaphore
_drainEvents
_root
T@"<BRCFSEventsDelegate>",W,V_delegate
T@"PQLConnection",&,N,SsetDB:,V_db
T@"BRCRelativePath",R,N,V_root
_dict
_initReachability
_initPowerManager
_initLowDiskManager
_initLowMemory
_initProcessObservers
_initAppListObservers
_initXPCFSEvents
_invalidateReachability
_invalidatePowerManager
_invalidateLowDiskManager
_invalidateLowMemory
_invalidateProcessObservers
_invalidateAppListObservers
_resetReachability
_resetPowerManager
_resetLowDiskManager
_setReachabilityFlagsWithCoalescing:
sharedReachabilityMonitor
_setReachabilityFlags:
__resetReachability
isNetworkReachableForFlags:
_setPowerLevelWithCoalescing:
_setPowerLevel:
powerLevelChanged:
_processLowDiskNotification:
_didReceiveMemoryWarning
didReceiveMemoryWarning
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
updateInterestedBundleIDs:
setHandler:
applicationInfoForPID:completion:
_invalidateProcessMonitorObject:
_createMonitoringObjectForProcessID:observer:
reachabilityMonitor:didChangeReachabilityStatusTo:
reachabilityMonitor:didChangeReachabilityFlagsTo:
reachabilityFlags
addPowerObserver:
removePowerObserver:
addLowMemoryObserver:
removeLowMemoryObserver:
removeAppListObserver:
_notificationQueue
_reachabilityObservers
_reachabilityMonitor
_reachabilityFlags
_reachabilityFlagsTimer
_powerObservers
_powerNotifyToken
_powerLevelOK
_powerLevelOKTimer
_connectedToPowerSource
_connectedToPowerSourceCheckedDate
_lowDiskSet
_lowDiskDict
_lowDiskSource
_lowDiskTimer
_lowMemoryObservers
_memoryNotificationEventSource
_memoryNotificationCoalescePacer
_processObservers
_appListObservers
uploadSyncErrorsAsIndividualEvents:syncType:totalItemsCount:zoneType:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:
uploadLoadErrorsAsIndividualEvents:syncType:totalItemsCount:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:
sendTelemetryEvent:withReport:
telemetryDictionaryToUploadForError:errorMessage:count:syncType:totalItemsCount:zoneType:zoneCountsOnly:isFolderSharingEnabled:dsid:rampNumber:lastFailureDate:pcsState:
initWithServerSyncState:
_lastSyncDownStatus
_clientRequestID
T@"NSDate",&,V_lastSyncDownDate
Tq,N,V_lastSyncDownStatus
T@"CKServerChangeToken",&,N,V_changeToken
TQ,N,V_clientRequestID
initWithState:
setSharedDatabaseChangeState:
minLastUsedTime
setMinLastUsedTime:
_pendingMigrations
_nextRank
_sharedDatabaseChangeState
_minLastUsedTime
T@"NSDate",&,N,V_lastSyncDownDate
Tq,N,V_nextRank
T@"BRCServerChangeState",&,V_sharedDatabaseChangeState
TQ,N,V_minLastUsedTime
_finishSetupWithClientContainerIDs:
_isNonSandboxedForAuditToken:
hasAuditToken
hasPid
_computeCloudEnabledStatusWithoutLogOutStatus
isAllowedToAccessAnyCloudService
isNonAppSandboxed
_debugIdentifier
_cloudEnabledStatusWithoutLogOutStatus
_canGetApplicationInfo
_isNonAppSandboxed
_isAllowedToAccessAnyCloudService
_isProxyEntitled
_isSharingProxyEntitled
_isFolderSharingProxyEntitled
_isSharingPrivateInterfaceEntitled
_hasAuditToken
_applicationIdentifier
_appLibraryIDs
_defaultAppLibraryID
_auditToken
T@"NSString",R,N,V_applicationIdentifier
TB,R,N,V_isNonAppSandboxed
TB,R,N,V_isAllowedToAccessAnyCloudService
TB,R,N,V_isProxyEntitled
TB,R,N,V_isSharingProxyEntitled
TB,R,N,V_isFolderSharingProxyEntitled
TB,R,N,V_isSharingPrivateInterfaceEntitled
TB,R,N,V_isAutomationEntitled
T@"NSSet",R,N,V_appLibraryIDs
T@"NSString",R,N,V_defaultAppLibraryID
TB,R,N,V_hasAuditToken
T{?=[8I]},R,N,V_auditToken
brc_errorDocumentIsNotShared
fetchRootURLIfNecessaryAndFinishWithShare:
recordIDNeedingFetch
setRecordIDNeedingFetch:
rootItemIDToLookup
setRootItemIDToLookup:
setClientZone:
_recordIDNeedingFetch
_rootItemIDToLookup
T@"BRCItemID",&,N,V_rootItemIDToLookup
T@"BRCClientZone",&,N,V_clientZone
T@"CKRecordID",&,N,V_recordIDNeedingFetch
_blackListDescendantStack:parentItem:andAddToSet:descendantBlock:
_blackListDescendantStack:parentItem:andAddToSet:
_handleSharedItemWhichMovedToNewShare:rootItem:
_blackListDescendantStackAndItemIfThrottledOrNeedsOSUpgrade:now:
isBlackListed:
_checkForSharesWithinSharesWithItem:
_checkIfShouldDedicateOpToPCSChainingItem:
_checkIfShouldBlacklistForPathMatch:
handleItemForOSUpgrade:parentItemID:
_handlePendingShareItemWithPendingDeleteChildren:
_checkIfParentNeedsRevivalWithParentItem:
_nextLiveItem
_nextTombstone
_documentsOrAliasesNeedingSyncUpEnumerator
_liveDirectoriesNeedingSyncUpEnumerator
_tombstoneLeavesNeedingSyncUpEnumerator
chainedParentIDWhitelist
_maxDepth
_whitelist
_itemIDsLostOrThrottled
_itemIDsNeedingOSUpgrade
_tombstonesEmbargo
_returned
_stage
_retryAfter
_chainedParentIDWhitelist
_itemsNeedingUnshare
TI,R,N,V_batchSize
TQ,R,N,V_retryAfter
T@"BRCLocalItem",R,N,V_itemNeedingPCSChaining
T@"NSMutableSet",R,N,V_chainedParentIDWhitelist
T@"NSMutableArray",R,N,V_itemsNeedingUnshare
initWithPkgItem:
_containerMetadataRecordsToSaveWithBatchSize:requestID:
performAfterSavingRecords:
TB,R,N,V_shouldPerformAnotherBatch
initWithDocument:serverItem:relpath:client:XPCReceiver:error:
storagePrefixForFileDescriptor:error:
newThumbnailForVersionWithEtag:
hasThumbnailOnImmutableDocumentAtURL:
newCachedVersionAtURL:size:etag:hasThumbnail:displayName:lastEditorDeviceName:lastEditorNameComponents:modificationDate:
newFaultVersionAtURL:faultURL:faultExtension:etag:hasThumbnail:displayName:lastEditorDeviceName:lastEditorNameComponents:modificationDate:
_fetchThumbnailOperationForVersionRecord:physicalURL:
setFetchRecordVersionsProgressBlock:
versionsDone
setFetchRecordVersionsCompletionBlock:
blockOperationWithBlock:
_depsTrackingOperation
_fetchVersionsOperationWithDepsOp:
includeCachedVersions
_currentEtag
_storagePathPrefix
_reply
_includeCachedVersions
_logicalURL
_physicalURL
T@"NSURL",R,N,V_logicalURL
T@"NSURL",R,N,V_physicalURL
TB,N,V_includeCachedVersions
listNonLocalVersionsWithReply:
isEqualToItemDBRowIDIdentifier:
Tq,R,N,V_itemDBRowID
isEqualToIntAndZoneJobIdentifier:
_intID
Tq,R,N,V_intID
v24@0:8@16
@52@0:8@16@24@32@40B48
@24@0:8^{_NSZone=}16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
Q16@0:8
v16@0:8
@"NSString"
{?="knownToServer"b1"wasCached"b1}
@24@0:8@16
q16@0:8
v24@0:8q16
@"BRFieldCKInfo"
@"NSData"
B40@0:8@16@24^@32
i16@0:8
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_flags_ext"I"f_reserved"[7I]}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"NSError"16
@32@0:8@16@24
v48@0:8@16@24@32@40
@"CKServerChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@36@0:8@16B24@28
@44@0:8@16B24@28@36
B24@0:8^@16
B28@0:8B16^i20
{?=@@@@Q}16@0:8
S16@0:8
@"BRCAccountSession"
(?=""{?="parentItem"b1"relpath"b1"pathMatch"b1"faultedMatch"b1"byIDMatch"b1"reservedMatch"b1"parentPath"b1}"value"I)
@"BRCRelativePath"
@"BRCPQLConnection"
@"NSURL"
@"BRCLocalItem"
@"BRCServerItem"
@"BRCDocumentItem"
v32@0:8@16@24
@"NSMutableDictionary"
@"NSMapTable"
@32@0:8@16@?24
v24@0:8@?16
B36@0:8@16i24^@28
@40@0:8@16#24@32
B32@0:8@16@24
B32@0:8@?16@24
B20@0:8i16
v36@0:8@16d24i32
@"br_pacer"
@40@0:8@16@24@32
v40@0:8@16@24@32
@?16@0:8
@"BRCSyncContext"
[16C]
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"NSDate"
@"NSError"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_os_activity>"
@"NSMutableArray"
@"BRCThrottle"
@"CKOperationGroup"
@"NSObject<BROperationClient>"
v32@0:8@16@?24
@"BRCServerChangeState"
@32@0:8@16^@24
@32@0:8@16Q24
@"BRCItemGlobalID"
@"NSSet"
@"NSMutableSet"
@"BRCAppLibrary"
@24@0:8Q16
@36@0:8@16c24@28
@36@0:8c16@20@28
@"NSArray"
Q24@0:8@16
@32@0:8B16C20@24
@24@0:8^@16
S40@0:8@16@24^@32
@"NSDictionary"24@0:8^@16
@"BRContainer"24@0:8@"NSURL"16
S40@0:8@"NSURL"16@"NSURL"24^@32
@"NSString"32@0:8@"NSURL"16^@24
S48@0:8@16@24@32^@40
B44@0:8@16@24B32^@36
B32@0:8@16^@24
B36@0:8@16B24^@28
@36@0:8@16B24^@28
B32@0:8^{backup_detector=QQQ}16^@24
B56@0:8{backup_detector=QQQ}16^{backup_detector=QQQ}40^@48
@32@0:8Q16Q24
@20@0:8I16
v28@0:8@16B24
B48@0:8@16@24@32^@40
B28@0:8B16^@20
B52@0:8@16@24B32@36^@44
B52@0:8@16@24@32B40^@44
v36@0:8@16@24B32
B48@0:8@16B24@28B36^@40
B56@0:8@16B24@28@36B44^@48
B68@0:8@16B24@28@36^I44^I52^@60
B60@0:8@16@24@32B40I44I48^@52
B44@0:8@16B24@28^@36
v20@0:8I16
@"BRCThrottler"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v40@0:8c16@20B28@?32
q24@0:8Q16
v32@0:8q16Q24
@"<BRCAccountHandlerDelegate>"
@"NSObject<OS_dispatch_workloop>"
B28@0:8@16B24
B32@0:8@16Q24
B40@0:8@16Q24^@32
v28@0:8Q16I24
v36@0:8Q16I24@?28
v32@0:8@16B24B28
@"BRCMetricEndpoint"
@"BRCSyncHealthReport"
@"NSNumber"
d16@0:8
@"CKEventMetric"
v24@0:8Q16
I16@0:8
@"BRCItemID"
@"NSUUID"
v32@0:8I16B20@24
v48@0:8@16Q24@32@40
@20@0:8i16
v32@0:8@"NSURL"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@16@24@?32
@"BRMangledID"
v32@0:8@16Q24
v32@0:8Q16@24
@28@0:8@16i24
B32@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24
c16@0:8
v20@0:8c16
@"BRCUserRowID"
@20@0:8B16
i24@0:8@16
v20@0:8i16
{?="mtime"b1"xattrIndex"b1"isExecutable"b1"isWritable"b1}
@24@0:8@"BRCAccountSession"16
@"BRCClientRanksPersistedState"
@"NSHashTable"
@"BRNotificationQueue"
@"BRCXPCClient"
i32@0:8Q16@24
@32@0:8Q16@24
@40@0:8Q16@24@32
C16@0:8
i20@0:8B16
B20@0:8B16
i28@0:8i16@20
B32@0:8B16B20^i24
B32@0:8@?16^i24
v20@0:8S16
v20@0:8C16
@"BRCBookmark"
@"BRCGenerationID"
[32C]
{timespec="tv_sec"q"tv_nsec"q}
{brc_mutex="pthread"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@24@0:8@?16
@20@0:8C16
q32@0:8r*16Q24
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
[21C]
v48@0:8@16@24@32Q40
@32@0:8q16@24
@"CKContainer"
{?="errorCode"b1"hasForegroundClients"b1"isPCSChained"b1"nonDiscretionary"b1"sharedZone"b1}
v48@0:8@16@24@32@?40
v48@0:8@"NSArray"16@"NSDictionary"24@"NSDictionary"32@?<v@?>40
v32@0:8@"NSArray"16@?<v@?>24
@"brc_task_tracker"
@"BRCNotificationPipe"
@28@0:8i16@20
@56@0:8@16@24@32@?40@48
Q32@0:8@16@24
{brc_job_update=iq}60@0:8@16@24i32@36@44@52
v28@0:8@16i24
q40@0:8^{throttle_stamps=Iiqqq}16@24q32
v44@0:8^{throttle_stamps=Iiqqq}16@24@32B40
B28@0:8i16@20
v44@0:8i16@20@28@?36
@"BRCDeadlineSource"
@"PQLNameInjection"
@60@0:8@16@24Q32Q40B48@?52
v32@0:8q16@?24
@48@0:8@16@24@32Q40
@40@0:8@16@24Q32
v36@0:8S16@20@?28
v44@0:8@16@24S32@?36
v36@0:8@16S24@?28
@"<BRItemNotificationReceiving>"
@"BRFileObjectID"
@"BRCDataOrDocsScopeGatherer"
@"BRCNotificationManager"
@"<BRCNotificationPipeDelegate>"
v44@0:8@16S24@28@?36
v28@0:8S16@?20
v24@0:8@?<v@?>16
v36@0:8S16@"NSArray"20@?<v@?@"NSError">28
v28@0:8S16@?<v@?@"NSError">20
v44@0:8@"NSString"16S24@"NSArray"28@?<v@?@"NSError">36
v36@0:8@"NSURL"16S24@?<v@?@"NSError">28
v40@0:8@"CKShareMetadata"16@"BRCAccountSession"24@?<v@?B@"NSError">32
v32@0:8@"CKShareMetadata"16@?<v@?BB@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?>24
v32@0:8@"CKShareMetadata"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?>24
v40@0:8Q16@24@?32
@?24@0:8@?16
v48@0:8Q16@24@32@?40
^{__CFUserNotification=}
^{__CFRunLoopSource=}
v24@0:8[32C]16
i20@0:8i16
@48@0:8@16@24@32@40
@40@0:8@16@24^@32
@"BRCServerZone"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"BRCAccountHandler"16@"BRCAccountSession"24
Q24@0:8Q16
v32@0:8@?16@24
B24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
v24@0:8#16
@"NSXPCListener"
@"BRCAccountHandler"
@"BRCVersionsFileProvider"
@"NSOperationQueue"
v28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@28@0:8^{sqlite3_stmt=}16i24
v36@0:8i16@20@28
v36@0:8i16q20@28
v32@0:8i16I20@24
v40@0:8i16I20@24@32
v40@0:8i16I20q24@32
v40@0:8@16@24i32I36
v36@0:8q16i24@28
v32@0:8q16@24
v36@0:8@16@24I32
v32@0:8@16q24
v44@0:8@16Q24q32B40
@"BRCCountedSet"
B40@0:8@16^Q24Q32
@"NSPredicate"
B40@0:8@16@?24^@32
B48@0:8@16@24@?32^@40
v24@0:8B16B20
@84@0:8@16@24@32@40@48@56B64B68B72@76
I24@0:8I16I20
B20@0:8I16
@84@0:8Q16Q24@32B40B44B48B52B56B60B64Q68@76
@60@0:8@16B24Q28Q36Q44@52
@52@0:8@16C24Q28Q36@44
@28@0:8@16B24
Q20@0:8B16
B56@0:8@16@24@32Q40^B48
B40@0:8@16@24@32
q24@0:8@16
v56@0:8d16d24d32@40@?48
@44@0:8@16@24B32^@36
@"BRCPrivateClientZone"
@"<BRCAppLibraryDelegate>"
@"BRCALRowID"
@"BRCZoneRowID"
@"BRContainer"
@24@0:8q16
q20@0:8I16
q40@0:8q16^I24q32
q32@0:8^v16Q24
q36@0:8q16q24B32
@"BRCMinHeap"
@"PQLFormatInjection"16@0:8
@"PQLRawInjection"16@0:8
@36@0:8Q16@24i32
@44@0:8@16i24q28^q36
@"PQLResultSet"
v44@0:8@16i24i28@32B40
@36@0:8@16i24@28
v36@0:8@16i24@28
v40@0:8@16@24^i32
v44@0:8@16@24B32^i36
B64@0:8@16@24@32^i40@48@56
B48@0:8@16@24@32^i40
v40@0:8@16q24Q32
v48@0:8@16Q24Q32q40
v56@0:8@16Q24Q32q40@?48
@"BRCFairScheduler"
@"BRCDeadlineScheduler"
@40@0:8@16q24@32
@32@0:8[16C]16@24
@36@0:8q16B24@28
@32@0:8d16@24
@48@0:8q16B24@28B36@40
@44@0:8q16B24@28@36
@32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
@32@0:8@16q24
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
@"BRCDumper"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
@"PQLConnection"
@56@0:8@16@24@32@40Q48
v32@0:8Q16@?24
v36@0:8B16@?20@?28
c28@0:8@16B24
@28@0:8@16c24
v48@0:8@16@24@32B40B44
v28@0:8C16@20
v36@0:8@16I24@28
@"BRCItemID"16@0:8
@"BRCItemGlobalID"16@0:8
@"BRCStatInfo"16@0:8
@"BRCUserRowID"16@0:8
@"BRCAccountSession"16@0:8
@"BRCServerZone"16@0:8
@"BRCClientZone"16@0:8
@48@0:8@16@24@32^@40
Q32@0:8@16B24B28
B24@0:8Q16
v28@0:8Q16B24
B24@0:8B16B20
v44@0:8@16@24@32B40
v28@0:8@16C24
v24@0:8B16C20
v60@0:8@16@24@32@40@48B56
v32@0:8Q16I24I28
@"BRCClientZone"
@"BRCLocalStatInfo"
B28@0:8i16^@20
@36@0:8i16Q20^@28
B60@0:8i16^@20^@28^@36Q44^@52
B32@0:8i16B20^@24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"BRCClientZone"16
v24@0:8@"BRCAppLibrary"16
v48@0:8@16@24@32q40
v36@0:8@16B24@28
@"BRCFairSource"
@"APSConnection"
@"BRCContainerMetadataSyncPersistedState"
@"_BRCOperation<BRCOperationSubclass>"
@"BRCSyncOperationThrottle"
@"BRCZoneHealthSyncPersistedState"
@"BRCSideCarSyncPersistedState"
@"BRCMigrateZonePCSOperation"
@"BRCSyncBudgetThrottle"
@"CKRecordID"
@"CKRecord"
v40@0:8B16@20@28B36
v28@0:8B16@20
i36@0:8@16I24^B28
i44@0:8@16Q24I32^B36
v40@0:8@16Q24Q32
@"BRCLocalVersion"
@"BRCDesiredVersion"
@40@0:8@16@24i32i36
v52@0:8@16@24@32@40B48
@36@0:8@16B24@?28
v24@0:8d16
v72@0:8@16@24@32@40@?48@?56@64
v60@0:8@16@24B32@36@44@?52
@"CKRecordID"16@0:8
@"NSNumber"16@0:8
@"BRCProgress"16@0:8
@"CKRecord"16@0:8
v24@0:8@"CKRecord"16
@"BRCProgress"
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24
B36@0:8@"BRCDumpContext"16B24^@28
B32@0:8@"BRCDumpContext"16^@24
B32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@"PQLConnection"24
@"BRCZoneRowID"16@0:8
v24@0:8@"BRCZoneRowID"16
@"BRCPQLConnection"16@0:8
@"NSMutableDictionary"16@0:8
B80@0:8@16@24@32@40@48@56@64@72
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32Q40
@20@0:8c16
B44@0:8c16@20@28Q36
Q64@0:8Q16@24@32@40@48q56
Q88@0:8Q16@24@32@40@48@56^@64q72^B80
@"BRCPendingChangesStream"
@32@0:8c16@20B28
@32@0:8B16@20C28
@36@0:8@16@24B32
v92@0:8@16@24@32@40@48@56@64Q72B80B84C88
B32@0:8^@16@24
B56@0:8^@16@24B32#36B44^@48
B64@0:8^@16^@24^@32^@40@48^@56
B40@0:8^@16@24^@32
v24@0:8^Q16
B32@0:8^Q16^@24
B56@0:8^@16^@24@32@40^@48
B32@0:8^@16^@24
B48@0:8^@16^@24@32^@40
B40@0:8^@16@24@32
B40@0:8^@16^@24@32
v36@0:8@16B24B28B32
v48@0:8@16Q24@32B40C44
v36@0:8@16Q24B32
v44@0:8@16@24Q32B40
@20@0:8S16
@36@0:8@16f24^Q28
B28@0:8f16^Q20
B24@0:8@?16
f16@0:8
@"NSMutableOrderedSet"
v32@0:8@"NSOperation"16@"NSURL"24
v24@0:8@"NSOperation"16
v32@0:8@"NSOperation"16@"NSError"24
v24@0:8:16
@"<BRCUserNotifier>"
@"CKShareMetadata"
@28@0:8f16@20
@56@0:8d16@24@32@40@48
@24@0:8d16
@36@0:8@16B24B28i32
@36@0:8@16B24^i28
@40@0:8@16B24B28^i32
v32@0:8@16^@24
i32@0:8@16^@24
v20@0:8f16
d24@0:8f16i20
d24@0:8@16
f24@0:8@16
[8f]
@24@0:8r*16
@24@0:8^{RootItemObject=C(?=II)}16
@24@0:8^{_UUIDItemObject_OLD=CI[16C]}16
@60@0:8@16@24@32@40@48B56
v24@0:8I16I20
@28@0:8I16@20
v32@0:8@?16Q24
v40@0:8@?16Q24Q32
v40@0:8@16@24q32
v44@0:8Q16q24B32@36
q32@0:8@16@24
c32@0:8@16@24
@?24@0:8@16
v60@0:8@16@24@32^i40B48@52
v36@0:8Q16@24i32
@"<BRCClientZoneDelegate>"
@"BRCThrottleBase"
@"BRCCreateZoneAndSubscribeOperation"
@"BRCSyncUpOperation"
@"BRCSyncDownOperation"
@"BRCSyncOperationBackoffRatio"
@"NSMutableIndexSet"
@"<NSObject>"
@32@0:8r*16Q24
@"BRCStageRegistry"
@"CKPackage"
{?="token"b1}
v28@0:8i16@20
v48@0:8@16^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}24@32^B40
@"BRCServerZoneHealthState"
@"BRCProblemReport"
v28@0:8@16c24
v48@0:8@16@24@32^v40
v36@0:8@16@24c32
v40@0:8@16Q24@32
v40@0:8@16q24q32
v32@0:8q16q24
v28@0:8@16I24
v32@0:8@16I24B28
v36@0:8@16I24B28B32
@"_BRCUploadInfo"
@"_BRCDownloadInfo"
C24@0:8@16
f32@0:8@16@24
f40@0:8@16@24@32
@"BRCUserDefaults"
@"BRCServerStatInfo"
@"BRCVersion"
@"BRServerMetrics"
@24@0:8B16B20
@"BRCPackageItem"
{?="byFileID"b1"byDocumentID"b1"byPath"b1"parentItem"b1"serverItem"b1"serverByPath"b1"packageItem"b1"clientZone"b1}
@"NSArray"16@0:8
B24@0:8^{sqlite3_value=}16
@48@0:8@16^@24^@32@40
r*16@0:8
@28@0:8i16Q20
@"NSInputStream"
@"PBMessageStreamReader"
B28@0:8@16S24
S24@0:8@16
B32@0:8@16i24i28
B60@0:8@16@24@32@40i48@52
@"PBMessageStreamWriter"
@"NSOutputStream"
@"BRCChecksummingOutputStream"
B40@0:8q16@24@32
v32@0:8d16@24
v56@0:8@16@?24@?32@40@?48
v28@0:8B16@?20
@"CKQueryCursor"
v32@0:8@"NSNumber"16@"NSError"24
@48@0:8@16Q24@32@40
@"BRCDirectoryItem"
@"BRCTreeEnumerator"
v36@0:8@16B24@?28
@"CKShare"
@40@0:8@16Q24Q32
d32@0:8@16@24
@"CKRecordZoneID"
@"CKRecordZone"
@"BRCPrivateServerZone"
B52@0:8i16@20@28@36Q44
S28@0:8@16B24
v24@0:8i16B20
i20@0:8C16
i28@0:8C16@?20
B40@0:8^Q16^I24^@32
B48@0:8@16^Q24^I32^@40
@64@0:8@16@24@32@40Q48^@56
B68@0:8^Q16^I24^I32@40@48B56^@60
B32@0:8i16i20@24
@40@0:8Q16^C24^I32
B56@0:8@16Q24@32@40^@48
B48@0:8Q16@24@32^@40
v64@0:8i16i20@24@32@40@48Q56
B64@0:8@16^Q24^I32^I40@48^@56
B36@0:8i16@20@28
B32@0:8Q16@24
B32@0:8Q16^I24
B36@0:8I16Q20Q28
q28@0:8q16i24
q24@0:8q16
[7@"NSString"]
[7Q]
@"BRCStagePersistedState"
@"<NSFileProviderEnumerationObserver>"
v40@0:8q16Q24@?32
v40@0:8@16Q24@?32
@"NSIndexSet"
@44@0:8@16@24@32B40
@40@0:8@16^@24^@32
@"GSPermanentStorage"
@"BRCLocalItem"16@0:8
@48@0:8@16@24@32@?40
@"BRCZonePurgeOperation"
@48@0:8@16@24@32I40B44
Q36@0:8@16@24B32
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
I24@0:8@16
@60@0:8@16@24@32@40c48B52I56
@"BRCPCSChainInfo"
@"PQLResultSet<PQLEnumeration>"
@"BRFieldPkgItem"
{?="size"b1"generationID"b1}
v24@0:8@"NSDictionary"16
@24@0:8^B16
B40@0:8@16B24B28Q32
v36@0:8B16@20@?28
@40@0:8@16@24^B32
@56@0:8@16@24B32^B36@44B52
@32@0:8@16^I24
@32@0:8@16^B24
v32@0:8@?16@?24
B48@0:8@16^B24^B32^Q40
Q24@0:8B16B20
v112@0:8Q16Q24Q32Q40Q48Q56Q64Q72Q80@88@96@?104
B44@0:8q16Q24B32^@36
B36@0:8Q16B24^@28
@"BRCClientState"
@"BRCServerPersistedState"
@"BRCGlobalProgress"
@"BRCAccountWaitOperation"
@"BRCContainerScheduler"
@"BRCApplyScheduler"
@"BRCVolume"
@"BRCFSReader"
@"BRCFSUploader"
@"BRCFSDownloader"
@"BRCSyncUpScheduler"
@"BRCFSWriter"
@"BRCDownloadTrackers"
@"BRCUserNotification"
@"BRCDiskSpaceReclaimer"
@"BRCRecentsEnumerator"
@"BRCItemTransmogrifier"
@"BRCAnalyticsReporter"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">40
v24@0:8r*16
v28@0:8i16i20i24
@28@0:8i16i20i24
v24@0:8i16i20
B48@0:8@16^@24^@32^@40
B72@0:8@16@24^@32^@40^@48^@56^@64
r^*16@0:8
@40@0:8i16q20B28^@32
@"NSMutableData"
v32@0:8@"BRCClientZone"16@"NSError"24
B44@0:8@16i24@?28^@36
B48@0:8^@16^@24^@32@40
B56@0:8@16^@24^@32^@40@48
v24@0:8^{?=@@@@Q}16
v44@0:8@16I24Q28@36
v44@0:8@"BRCRelativePath"16I24Q28@"NSString"36
v36@0:8@"BRCRelativePath"16I24@"NSString"28
v28@0:8@"BRCRelativePath"16I24
v32@0:8@"BRCRelativePath"16@"NSString"24
v32@0:8@16d24
v60@0:8@16I24Q28@36@44@52
v52@0:8@16I24Q28@36@44
Q32@0:8Q16@24
B56@0:8^@16^@24^@32^B40^q48
@40@0:8^q16^@24q32
v28@0:8I16@20
v36@0:8I16Q20@28
@"BRCAsyncDirectoryEnumerator"
B32@0:8q16@?24
q32@0:8@16B24B28
B64@0:8@16@24@32@40q48q56
@"AppTelemetryInvestigation"
{?="magnitudeDouble"b1"timestamp"b1"magnitude"b1"magnitudeFloat"b1"magnitudeInt"b1"magnitudeBool"b1}
Q28@0:8B16^@20
B24@0:8q16
@32@0:8@16^i24
@32@0:8^B16^i24
^{?=iqq*iqqi{_opaque_pthread_mutex_t=q[56c]}^{_telldir}}
@44@0:8@16B24q28@36
v32@0:8@"BRCNotificationPipe"16@"BRCAppLibrary"24
B32@0:8:16^@24
@32@0:8@16#24
B32@0:8r*16q24
B32@0:8@16q24
v52@0:8@16q24q32B40@?44
@56@0:8@16@24@32@40^@48
v44@0:8@16@24B32@?36
v56@0:8@16Q24Q32@40@?48
@"BRCClientPrivilegesDescriptor"
@"NSCountedSet"
{?="val"[8I]}
@"NSXPCConnection"
v24@0:8@?<v@?@"NSError">16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv24@0:8@16
v32@0:8@"CKShareMetadata"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
v36@0:8q16i24@?28
Vv20@0:8B16
v64@0:8@16{?=[8I]}24@?56
v44@0:8@16B24B28B32@?36
v52@0:8@16@24Q32B40@?44
v44@0:8@16B24@28@?36
v44@0:8@16B24Q28@?36
v56@0:8{?=[8I]}16@?48
v52@0:8@16C24Q28Q36@?44
v44@0:8C16Q20Q28@?36
v40@0:8@16B24B28@?32
v56@0:8@16@24Q32Q40@?48
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v44@0:8@"NSFileHandle"16@"NSString"24B32@?<v@?B@"NSError">36
v32@0:8@"NSFileHandle"16@?<v@?B@"NSError">24
v40@0:8@"NSFileHandle"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSDictionary"@"NSNumber"@"NSError">16
v36@0:8q16i24@?<v@?q>28
v40@0:8@"NSString"16@"NSString"24@?<v@?d@"NSError">32
v32@0:8@"NSURL"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"BRContainer"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">28
v64@0:8@"NSString"16{?=[8I]}24@?<v@?@"NSURL"@"NSData"@"NSString"@"NSError">56
Vv24@0:8@"NSString"16
v44@0:8@"NSString"16B24B28B32@?<v@?@"NSError">36
v40@0:8@"NSArray"16Q24@?<v@?@"NSError">32
v52@0:8@"NSObject<BROperationClient>"16@"NSURL"24Q32B40@?<v@?@"NSError">44
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"BRQueryItem"@"NSError">24
v40@0:8@"NSArray"16@"NSURL"24@?<v@?@"NSMutableDictionary"@"NSError">32
v32@0:8@"<BRItemNotificationReceiving>"16@?<v@?@"<BRItemNotificationSending><NSXPCProxyCreating>"@"NSDictionary"@"NSError">24
v44@0:8@"<BRNonLocalVersionReceiving>"16@"NSURL"24B32@?<v@?@"<BRNonLocalVersionSending>"@"NSURL"@"NSError">36
v24@0:8@?<v@?B@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSURL"16@"NSString"24@"NSURL"32@?<v@?@"NSURL"@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">40
v40@0:8@"NSString"16@"NSURL"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v40@0:8c16@"NSString"20B28@?<v@?@"NSError">32
v24@0:8@?<v@?c@"NSError">16
v44@0:8@"NSURL"16B24@"NSString"28@?<v@?@"NSString"@"NSString"@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v32@0:8@"BRFileObjectID"16@?<v@?@"NSURL"@"NSData"@"NSURL"@"NSData"@"NSError">24
v44@0:8@"NSURL"16B24Q28@?<v@?@"NSURL"@"NSDate"@"NSError">36
v48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v56@0:8{?=[8I]}16@?<v@?c@"NSError">48
v24@0:8@?<v@?@"NSDate"@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?I@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDate"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSNumber"@"NSError">24
v52@0:8@"BRFileObjectID"16C24Q28Q36@?<v@?@"NSArray"Q@"NSError">44
v44@0:8C16Q20Q28@?<v@?@"NSArray"Q@"NSError">36
v40@0:8@"NSData"16Q24@?<v@?@"NSArray"@"NSArray"@"NSData"@"NSError">32
v40@0:8@"NSURL"16B24B28@?<v@?@"NSError">32
v32@0:8@"NSURL"16@?<v@?BB@"NSString"@"NSError">24
v32@0:8@"NSURL"16@?<v@?i@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"CKShare"@"NSURL"@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSData"@"NSString"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"CKRecordID"24B32@?<v@?@"FPSandboxingURLWrapper"@"NSError">36
v32@0:8@"NSObject<BROperationClient>"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSError">32
v56@0:8@"NSObject<BROperationClient>"16@"NSURL"24Q32Q40@?<v@?@"NSError">48
v44@0:8@"NSObject<BROperationClient>"16@"NSURL"24B32@?<v@?@"FPSandboxingURLWrapper"@"NSError">36
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSError">16
v32@0:8@"NSURL"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"NSObject<BROperationClient>"16@"CKShare"24@?<v@?@"CKShare"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"CKShare"24B32@?<v@?@"NSError">36
v40@0:8@"NSObject<BROperationClient>"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
v44@0:8@"NSObject<BROperationClient>"16@"NSURL"24B32@?<v@?@"NSData"@"NSString"@"NSError">36
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSString"@"NSString"@"NSError">32
v40@0:8@"NSObject<BROperationClient>"16@"NSURL"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSObject<BROperationClient>"16@"CKShare"24@"NSString"32@?<v@?@"CKShare"@"NSURL"@"NSError">40
v32@0:8@"NSURL"16@?<v@?@"NSPersonNameComponents"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?S@"NSError">32
v32@0:8Q16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?BBB@"NSString"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
B56@0:8@16Q24@32@40@?48
(?="value"I""{?="isFault"b1"startDownload"b1"wantsThumbnail"b1"userInitiated"b1"wantsContentForThumbnail"b1})
@36@0:8I16@20@28
q28@0:8I16@20
@36@0:8I16Q20@28
B28@0:8B16@20
B32@0:8q16q24
@"BRCTransferStream"
@32@0:8@16B24B28
d40@0:8@16@24@32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@16@24q32q40
v40@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24@"NSURL"32
v56@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionDownloadTask"24q32q40
@"NSDictionary"
@"NSURLSession"
i36@0:8@16i24i28i32
I36@0:8@16I24I28I32
Q48@0:8@16Q24Q32Q40
f40@0:8@16B24f28f32f36
f36@0:8@16f24f28f32
d48@0:8@16d24d32d40
B32@0:8@16B24B28
B40@0:8^@16^@24^B32
{?="byFileID"b1"byDocumentID"b1"byPath"b1"parent"b1}
@24@0:8i16B20
Q36@0:8[256c]16i24i28i32
v32@0:8r*16Q24
@32@0:8r^v16Q24
@44@0:8r^{?=@@@@Q}16i24@28^Q36
B40@0:8r^{?=@@@@Q}16@24@32
i56@0:8@16@24@32C40C44^{?=@@@@Q}48
B52@0:8@16@24@32C40^{?=@@@@Q}44
Q40@0:8@16@24@32
B24@0:8r^{?=@@@@Q}16
{?=@@@@Q}20@0:8C16
B28@0:8r^{?=@@@@Q}16B24
B48@0:8@16@24@32C40C44
B20@0:8C16
B56@0:8@16@24@32^B40^i48
B72@0:8@16@24@32@40@48^B56^i64
B40@0:8@16@24^i32
v56@0:8@16@24q32@40Q48
v64@0:8@16@24q32@40@48^B56
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
d20@0:8i16
v40@0:8^@16^@24^@32
q32@0:8@16q24
q36@0:8@16q24i32
v40@0:8@?16d24d32
v28@0:8@?16i24
q20@0:8i16
B40@0:8d16d24^@32
@40@0:8Q16@24Q32
@36@0:8@16I24Q28
B36@0:8B16@20^@28
v48@0:8@16I24Q28I36I40B44
@"BRCFSEventsPersistedState"
^{__FSEventStream=}
@"NSObject<OS_dispatch_semaphore>"
@"<BRCFSEventsDelegate>"
v28@0:8@"BRReachabilityMonitor"16B24
v28@0:8@"BRReachabilityMonitor"16I24
@"BRReachabilityMonitor"
@104@0:8@16@24@32@40@48@56B64B68@72@80@88@96
B72@0:8@16@24Q32@40B48B52@56@64
B64@0:8@16@24Q32B40B44@48@56
B40@0:8@16Q24q32
v40@0:8Q16Q24Q32
B48@0:8{?=[8I]}16
@48@0:8{?=[8I]}16
@64@0:8@16@24{?=[8I]}32
{?=[8I]}16@0:8
c24@0:8@16
@64@0:8@16@24@32@40@48^@56
@"<BRNonLocalVersionReceiving>"
@"BRCStatInfo"
@"NSObject<GSAdditionStoring>"
@Jz-
 \z-
MbP?
333333
