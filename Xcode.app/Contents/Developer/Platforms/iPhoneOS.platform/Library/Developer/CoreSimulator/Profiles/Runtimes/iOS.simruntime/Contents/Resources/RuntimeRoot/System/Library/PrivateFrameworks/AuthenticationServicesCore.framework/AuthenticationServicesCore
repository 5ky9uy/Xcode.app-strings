credentialID
v8@?0
com.apple.AuthenticationServicesCore.AuthorizationError
Too many NFC devices found. Please present only one NFC device.
Found no credentials on this device.
The operation cannot be completed.
Unrecognized PIN code. Please try again.
Your security key is temporarily locked. Please remove it and try again.
Too many invalid PIN attempts. Your security key must be reset.
requestTypes
appName
appIdentifier
bundleIdentifier
teamIdentifier
associatedDomains
iconData
iconScale
proxiedOriginDeviceName
linkedOnOrAfterIOS15Aligned
relyingPartyIdentifier
platformCredentialCreationOptions
securityKeyCredentialCreationOptions
platformCredentialAssertionOptions
securityKeyCredentialAssertionOptions
appleIDAuthorizationRequest
com.apple.AuthenticationServicesCore.ASFeatureManager
authenticatorData
signature
userHandle
rawClientDataJSON
Authorization
User
IdentityToken
State
ASCAuthorizationPresentationContextData
com.apple.authentication-services-core.authorization-presenter-client
loginChoices
serviceName
destinationSiteForCrossSiteAssertion
isProxiedRequestKey
platformUserVerificationPreference
cableAuthenticatorURL
isCABLEAuthenticatorRequest
shouldRequireCABLEAuthenticatorConsent
q24@?0@"<ASCLoginChoiceProtocol>"8@"<ASCLoginChoiceProtocol>"16
B16@?0@"<ASCLoginChoiceProtocol>"8
DeviceClassNumber
name
displayName
registrationRequestIndicator
attestationObject
user
password
site
date
appleIDLoginChoiceUser
AuthenticationServicesAgent
Failed to acquire remote object proxy.
challenge
clientDataHash
userName
userIdentifier
userDisplayName
supportedAlgorithmIdentifiers
userVerificationPreference
attestationPreference
extensions
shouldRequireResidentKey
excludedCredentials
appID
isGoogleLegacyAppIDSupport
com.apple.AuthenticationServicesCore.AuthorizationClearanceQueue
com.apple.AuthenticationServicesCore.AuthorizationTrafficQueue
No application identifier specified for authorization request.
Request already in progress for specified application identifier.
syncingPlatformAuthenticatorEnabled
com.apple.Preferences
v12@?0B8
_securityagent
com.apple.AuthenticationServicesCore.AuthenticationServicesAgent
com.apple.authentication-services-core.allow-authentication-request-proxying
com.apple.authentication-services.allow-authentication-request-any-rpid
com.apple.developer.applesignin
com.apple.authkit.client.owner
com.apple.authkit.client.internal
com.apple.authkit.client.private
com.apple.AuthenticationServicesCore.caBLEAuthenticator
com.apple.authentication-services-core.open-cable-url
v24@?0@"ASCCredentialRequestContext"8@"NSError"16
In order to sign in with or save a passkey, you must enable the syncing platform authenticator in Settings > Developer, after attaching your device to Xcode.
com.apple.Safari
Syncing platform authenticator must be enabled to register a platform public key credential; this can be enabled in Settings > Developer.
Traffic controller denied request.
No credentials available for login.
v20@?0B8@"NSError"12
v24@?0q8@"NSError"16
Cannot perform platform public key credential request because neither passcode nor biometrics are set up on device
Simulator requires enrolled biometrics to use platform public key credentials. This can be set up in the Features menu.
Client is missing required entitlement
Invalid request: missing caBLE URL
v24@?0@"<ASCCredentialProtocol>"8@"NSError"16
v16@?0@"NSArray"8
Client does not have entitlement for using proxied credential request context.
B16@?0@"_SWCServiceDetails"8
Application with identifier %@ is not associated with domain %@
success
com.apple.BarcodeScanner
com.apple.camera
com.apple.springboard
com.apple.authentication-services-core.authentication-services-view-service-client
AuthenticationServicesUI
credentialKind
allowedCredentials
ASViewServiceViewController
com.apple.AuthenticationServicesUI
com.apple.AuthenticationServicesCore.AuthorizationPresenterInvalidationQueue
com.apple.AuthenticationServicesCore.AuthorizationPresenterInterfaceUpdateQueue
Invalid request: 0 login choices
Registration requests cannot be used with other types of requests.
passwordLoginChoiceUsername
passwordLoginChoiceSite
externalPasswordIdentity
providerBundleIdentifier
qrCodeURL
com.apple.passkeys.relay
idle
allocatingServer
listeningForRelayPush
performingInitialHandshake
connectionEstablished
type
transports
bluetoothNotReady
bluetoothOnAndIdle
waitingForBluetoothPowerOn
listeningForBluetoothAdvertisement
openingWebSocket
listeningForPostHandshakeMessage
UNSPECIFIED
SUCCESS
BAD_REQUEST
INTERNAL_ERROR
NOT_FOUND
request_uuid
allocation_request
state_delete_request
CableRequest.AllocationRequest
tunnel_id
use_state_assisted
CableRequest.StateDeleteRequest
contact_id
status
allocation_response
state_delete_response
RESPONSE_STATUS_UNSPECIFIED
RATE_LIMITED
CableResponse.AllocationResponse
routing_id
encoded_domain
CableResponse.StateDeleteResponse
qr_assisted
state_assisted
relay_ips
CableRelayConnectionRequest.QRAssisted
CableRelayConnectionRequest.StateAssisted
client_payload
connection
access_token
_TtP26AuthenticationServicesCore21ASCABLEClientDelegate_
@24@0:8Q16
v24@0:8@16
v24@0:8@"_TtC26AuthenticationServicesCore13ASCABLEClient"16
ASCCredentialProtocol
NSObject
q16@0:8
#16@0:8
@24@0:8:16
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
NSSecureCoding
supportsSecureCoding
TB,N,R
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
Found caBLE advertisement of unexpected size: %ld
Could not decode caBLE server URL
caBLEv2 tunnel server domain
abcdefghijklmnopqrstuvwxyz234567
Found unknown reserved caBLE URL: %hu
publicKeyCredentialParameters
_TtC26AuthenticationServicesCore11ASWebSocket
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
isConnected
urlSession
webSocketTask
connectionCompletionHandler
overrideDomainForServerTrust
Socket connected with protocol: %s
Ignoring disconnection after socket closed.
Socket unexpectedly disconnected
Receive error: %@
Received response with unknown type
Sec-WebSocket-Protocol
Asked to close socket
AuthenticationServicesCore.ASWebSocket
Using default behavior.
AuthenticationMethod is not ServerTrust. Using default behavior.
No serverTrust found. Using default behavior.
Could not update policies for serverTrust: %d
Overridden sectrust is NOT valid: %s
Overriden trust is valid
Received server challenge
Could not connect: %s
Opened socket
Send error: %@
NSURLSessionWebSocketDelegate
v48@0:8@16@24q32@40
v40@0:8@"NSURLSession"16@"NSURLSessionWebSocketTask"24@"NSString"32
v48@0:8@"NSURLSession"16@"NSURLSessionWebSocketTask"24q32@"NSData"40
NSURLSessionTaskDelegate
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
NSURLSessionDelegate
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
B24@0:8@16
AuthenticationServicesCore.ASCABLEAuthenticator.AuthenticatorError
Transaction failed: %s
Received credential with unexpected type: %s
Could encode ctap response: %s
Could not send ctap response without a valid socket
Received getAssertion response to non-getAssertion command
AuthenticationServicesCore.ASCABLEAuthenticator
init()
_TtC26AuthenticationServicesCore20ASCABLEAuthenticator
@32@0:8@16^@24
v24@0:8@?16
v32@0:8@16@24
v16@0:8
cryptographyManager
bluetoothAdvertiser
advertisement
apsConnection
apsWrapper
completionHandler
currentCTAPCommand
_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper
authenticator
Authenticator is nil.
Unexpectedly received push without a valid advertisement
Push unexpectedly had nil message
Could not read protobuf payload
Could not decode push protobuf: %s
Could not read IP address for relay
Could not read access token for relay
Received relay push
Received public push token
Could not parse CTAP command: %s
Could not complete command without completionHandler
Could not decrypt caBLE message: %s
Unexpectedly received caBLE update message from client. Ignoring.
Received shutdown message from client
Could not encode postHandshake message: %s
Could not send postHandshake without a valid socket
Changing caBLE authenticator state from %s to %s
Tried to perform Noise handshake without an advertisement.
Noise handshake failed: %s
Finishing handshake
Received handshake
/cable/connect/device/
Could not determine relay URL
Connecting to relay at %s, headers: %s
Client was deinitialized while waiting for initial connection.
Received socket connection with unexpected protocol: %s
Authenticator opened socket connection.
v16@?0@"NSError"8
Starting Bluetooth advertisement
Started advertising
Could not begin advertising: %@
Networking error: %s
Unexpectedly received string frame: %s
Unexpectedly received socket message while in state %s
caBLE transaction failed: %@
Could not encode allocation request: %s
com.apple.passkeys.allocator
Could not encode protobuf message
Could not retrieve shared FTMessageDelivery_APS
v40@?0@"IDSBaseMessage"8@"NSError"16q24@"NSDictionary"32
Requesting server allocation with tunnelID "%s"
Received unexpected resultCode from server: %ld, %s
Received unexpected response from server: %s, %s
Could not decode allocation server response: %s
Allocation server returned error: %ld
Couldn't decode allocation response
Received invalid encodedDomain: %u
Allocated relay with routingID: "%s"
Received server allocation response
Could not decode caBLE url: %@
APSConnectionDelegate
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
authenticatorGetInfoResponse
AuthenticationServicesCore/ASCABLEQRCode.swift
knownTunnelServerDomainCount
supportsStateAssistedTransactions
credentialPublicKey
AuthenticationServicesCore.ASCABLEClient.ClientError
%@ changed state to %ld
AuthenticationServicesCore.ASCABLEClient
_TtC26AuthenticationServicesCore13ASCABLEClient
@16@0:8
@24@0:8@16
v40@0:8q16@24@?32
qrCodeStruct
delegate
bluetoothManager
currentRelyingPartyIdentifier
currentOperationType
clientDataJSON
webSocket
authenticatorAdvertisement
currentState
T@"NSURL",N,R
Unexpectedly received authenticator response without a relying party identifier.
Could not decode authenticator response: %@
Received error from authenticator: %hhu
Unexpectedly finished a transaction without a completion handler.
Transaction succeeded.
Could not encrypt shutdown message
Could not understand caBLE message: %s
Received unsupported caBLE update message. Dropping.
Missing clientDataJSON or current operation type
Unexpectedly received shutdown from authenticator.
Unexpectedly received posthandshake message without a valid websocket.
Unexpectedly received postHandshake message without a current operation.
Delegate no longer exists.
Could not decode post handshake message: %@
Noise handshake failed: %@
Unexpectedly tried to perform initial handshake without an advertisement
Unexpectedly tried to perform initial handshake without web socket
Failed to generate initial Noise handshake: %@
Networking error: %@
Found unexpected advertisement.
Found advertisemnt without caBLE UUID.
Could not decrypt caBLE advertisement.
Could not get URL from advertisement.
Connecting to relay at %s
Central manager discovered peripheral: %@
Changing caBLE client state from %s to %s
CBCentralManagerDelegate
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
@32@0:8:16@24
com.apple.AuthenticationServicesCore
<AllocationResponse: routingID: 
; encodedDomain: 
Allocation response is missing routingID: %s
Allocation response is missing domain: %s
_TtC26AuthenticationServicesCore26ASCABLECryptographyManager
qrSymmetricKey
qrPrivateKey
qrPublicKey
eidAESKey
eidHMACKey
tunnelID
noiseManager
noiseTransportCipher
AuthenticationServicesCore/ASCABLECryptographyManager.swift
Fatal error
Could not encrypte caBLE advertisement.
AES decryption of advertisement: %d
Could not decrypt caBLE advertisement of incorrect size: %ld
caBLE HMAC tag mismatch. Expected %s got %s.
attestationFormat
attestationStatement
numberOfCredentials
Unable to fetch bundle record for app identifier on credential request context with error: %{public}@
Local Auth returned error when checking biometric auth availability: %{public}@
No biometrics available
Local Auth returned error when checking password auth availability: %{public}@
Cannot evaluate biometrics: %{public}@
Remote proxy object error handler invoked with error: %{public}@
Failed to acquire remote object proxy.
Connection to agent service interrupted with error: %{public}@
Open caBLE URL: %{private}@, sourceApplication: %@
Client asked to cancel request.
Exactly one of clientDataHash or challenge must be non-nil
Could not fetch bundle identifier for client process.
Skipping iCloud Keychain check in Simulator.
Syncing platform authenticator enabled: %d
Synchronously fetching syncing platform authenticator state.
Toggling alternate credential store: %d
Cleared credential store.
Initializing ASCAgent %{public}p.
Could not perform authorization: %{public}@
Attempted to perform caBLE transaction with passkeys disabled.
%{public}@
Client is not properly entitled for this request. Rejecting.
Client does not have necessary entitlements to access Sign in with Apple credentials.
Unable to fetch client bundle identifier.
Device not configured for platform public key requests: %{public}@
Client is missing required entitlement open caBLE URLs
Completed request for %{private}@
Failed to get application bundle identifier with error: %{public}@
Cannot perform AuthKit authorization due to error: %{public}@
Client is making proxied credential request but is not entitled to do so.
Allowing proxied request.
Allowing request from web browser.
Could not find a credential for the user's login choice.
caBLE client already started
Starting caBLE client
Unexpectedly received PIN callback.
Starting caBLE authentication
Failed to create caBLE authenticator: %{public}@
Could not authenticator: agent no longer exists.
Failed to start caBLE authenticator: %{public}@
Could not prepare for caBLE authorization: agent no longer exists.
Failed to prepare for caBLE authorization: %{public}@
Finishing caBLE transaction: %{public}@
Received unexpected error: %ld
Completing authorization: %p %{public}@ %{public}@
Received internal cancel. Dropping.
Dealloc for %{public}p. Cancelling any outstanding requests.
Found unexpected value for credential kind: %ld
Failed to get context data for presentation with error: %{private}@
Asked to present unsupported error: %{public}@.
Asked to display error with unrecognized code: %ld
Invalid process tried to connect to AuthenticationServicesAgent acting as AuthenticationServicesUI.
Failed to connect client process to AuthenticationServices view service
Alert handle deactivated.
Alert handle deactivated by new request.
Alert handle invalidated with error: %{public}@
CableRelayConnectionRequest
CableRelayConnectionResponse
CableRelayPushMessage
__C_Synthesized
ASCAuthorizationError
CFError
NCFErrorRef
AuthChallengeDisposition
NNSURLSessionAuthChallengeDisposition
OneOf_Message
OneOf_Response
OneOf_Request
AuthenticationServicesCore
RelayRequestResponseStatus
CableRequest
AllocationRequest
StateDeleteRequest
CableResponse
ResponseStatus
StateDeleteResponse
QRAssisted
StateAssisted
AllocationResponse
Code
NASCAuthorizationError
ASCABLEAdvertisement
ASCTAPCommand
ASCTAPCommandDecodingError
ASCABLEMessageDecodingError
ASCTAPAuthenticatorGetAssertionCommand
ASCTAPAuthenticatorMakeCredentialCommand
CodingKeys
N@ASWebSocketDelegate
ASWebSocket
SocketError
ASCABLEAuthenticator
AuthenticatorError
APSWrapper
CABLEState
CBORDataCodable
ASCABLEPostHandshakeMessage
CodingKeys
ASCABLEQRCode
URLError
CodingKeys
ASCTAPPublicKeyCredentialEntity
ASCTAPPublicKeyCredentialDescriptor
DecodingError
ASCTAPCredentialData
ASCTAPUserEntity
ASCTAPAuthData
CodingKeys
ASCTAPPublicKeyCredentialParameters
ASCTAPRelyingPartyEntity
Flags
ASCABLEClient
ClientError
OperationType
CABLEState
ASCABLECryptographyManager
authData
public-key
ASCTAPResponseMessage
ASCTAPAuthenticatorMakeCredentialResponse
DecodingError
ASCTAPAuthenticatorGetAssertionResponse
CodingKeys
ASCTAPGetInfoResponse
CodingKeys
$ss12CaseIterableP
ySi_
Sg_ABt
_AAt
Sg_ABt
_AAt
Sg_ABt
_AAt
Sg_ABt
SaySSG
SbSg
So7NSErrorC
$sSY
$s10Foundation21_BridgedStoredNSErrorP
$s10Foundation18_ErrorCodeProtocolP
ySJG
SDySSSbGSg
SDySSSbG
$s26AuthenticationServicesCore19ASWebSocketDelegateP
So8NSObjectC
_pSgXw
So12NSURLSessionC
So25NSURLSessionWebSocketTaskC
ySSSgcSg
SSSg
SgXw
ScPSg
So16NSURLSessionTaskC
So28NSURLAuthenticationChallengeC
So15NSURLCredentialCSgIeyByy_
IeghH_
ytIeghHr_
So27ASCCredentialRequestContextCSgSo7NSErrorCSgIeyByy_
So12CBAdvertiserC
So13APSConnectionC
ySo27ASCCredentialRequestContextCSg_
_pSgtcSg
SgXw
_pSg
_A13At
ypSg
ySSG
ySS_SbtG
ySS_SStG
SSSgIegg_Sg
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
$s26AuthenticationServicesCore15CBORDataCodableP
SiSg
ySiG
$s26AuthenticationServicesCore31ASCTAPPublicKeyCredentialEntityP
SaySSGSg
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
So21ASCCredentialProtocol_pSgSo7NSErrorCSgIeyByy_
$s26AuthenticationServicesCore21ASCABLEClientDelegateP
26AuthenticationServicesCore21ASCABLEClientDelegate_pSgXw
So16CBCentralManagerC
ySo21ASCCredentialProtocol_pSg_
_pSgtcSg
ySo8NSNumberCG
ySo32ASCPublicKeyCredentialDescriptorCG
SDySo6CBUUIDC
SgXw
ySSypG
SS_ypt
ySo6CBUUIDCG
8readData_
GSg7streamst
_AAt
ySWG
$s26AuthenticationServicesCore21ASCTAPResponseMessageP
ySo4CBORC_ACtG
ySo4CBORCACG
ySSSbG
yS2SG
SuSg
SaySuGSg
SaySuG
AllCases
unknownFields
_routingID
_encodedDomain
_contactID
_connection
_accessToken
_status
_requestUuid
_clientPayload
_tunnelID
message
relayIps
_useStateAssisted
request
allocationRequest
stateDeleteRequest
allocationResponse
stateDeleteResponse
qrAssisted
stateAssisted
_nsError
unspecified
success
badRequest
internalError
notFound
response
rateLimited
RawValue
Code
_ErrorType
flags
nonce
routingID
tunnelServerURL
rawData
makeCredential
getAssertion
clientDataHash
relyingParty
user
publicKeyCredentialParameters
options
relyingPartyID
allowList
unknownMessageType
missingMessageType
unknownCommandSpecifier
missingCommandSpecifier
RawValue
delegate
isConnected
urlSession
webSocketTask
connectionCompletionHandler
overrideDomainForServerTrust
unknown
RawValue
cryptographyManager
bluetoothAdvertiser
advertisement
webSocket
apsConnection
apsWrapper
completionHandler
currentCTAPCommand
currentState
authenticator
idle
allocatingServer
listeningForRelayPush
performingInitialHandshake
connectionEstablished
padding
authenticatorGetInfoResponse
RawValue
publicKey
symmetricKey
knownTunnelServerDomainCount
currentTime
supportsStateAssistedTransactions
invalidLength
RawValue
rpIDHash
flags
counter
attestedCredentialData
extensions
name
displayName
aaguid
credentialID
credentialPublicKey
invalidLength
missingCredentialData
type
transports
rawValue
algorithm
ArrayLiteralElement
RawValue
Element
RawValue
qrCodeStruct
delegate
bluetoothManager
cryptographyManager
currentRelyingPartyIdentifier
currentOperationType
clientDataJSON
webSocket
authenticatorAdvertisement
completionHandler
currentState
bluetoothNotReady
bluetoothOnAndIdle
waitingForBluetoothPowerOn
listeningForBluetoothAdvertisement
openingWebSocket
performingInitialHandshake
listeningForPostHandshakeMessage
connectionEstablished
qrSymmetricKey
qrPrivateKey
qrPublicKey
eidAESKey
eidHMACKey
tunnelID
noiseManager
noiseTransportCipher
attestationFormat
authData
attestationStatement
credential
signature
user
numberOfCredentials
userSelected
missingKey
missingTopLevelDictionary
RawValue
versions
extensions
aaguid
options
maxMessageSize
pinProtocols
RawValue
ASCPublicKeyCredentialDescriptor
NSSecureCoding
NSCoding
ASCAuthorizationPresenterHostProtocol
NSObject
ASCAuthorizationPresenterHostInterface
ASCCredentialRequestContext
ASCAgentListener
NSXPCListenerDelegate
ASFeatureManager
ACMonitoredAccountStoreDelegateProtocol
ASCSecurityKeyPublicKeyCredentialAssertion
ASCCredentialProtocol
ASCAppleIDCredential
ASCAuthorizationPresentationContext
_ASDevice
ASCPlatformPublicKeyCredentialLoginChoice
ASCLoginChoiceProtocol
ASCSecurityKeyPublicKeyCredentialRegistration
ASCPasswordCredential
ASCAgentProtocol
ASCAgentInterface
ASCAppleIDLoginChoice
ASCPlatformPublicKeyCredentialRegistration
ASCAgentProxy
ASCPublicKeyCredentialCreationOptions
ASCWebAuthenticationExtensionsClientInputs
NSCopying
ASCPlatformPublicKeyCredentialAssertion
ASCAuthorizationTrafficController
ASCWebKitSPISupport
ASCAgent
_TtP26AuthenticationServicesCore21ASCABLEClientDelegate_
ASPublicKeyCredentialManagerDelegate
ASCAuthorizationPresenterDelegate
ASCViewServiceProtocol
ASCViewServiceInterface
ASCSecurityKeyPublicKeyCredentialLoginChoice
ASCPublicKeyCredentialAssertionOptions
ASCAuthorizationPresenter
SBSRemoteAlertHandleObserver
ASCPasswordLoginChoice
ASCABLELoginChoice
init
copy
credentialID
transports
initWithCredentialID:transports:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
.cxx_destruct
_credentialID
_transports
T@"NSData",R,N,V_credentialID
T@"NSArray",R,N,V_transports
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
presentError:forService:completionHandler:
updateInterfaceWithLoginChoices:
presentPINEntryInterface
updateInterfaceForUserVisibleError:
presentAuthorizationWithContext:completionHandler:
authorizationRequestInitiatedWithLoginChoice:authenticatedContext:completionHandler:
authorizationRequestFinishedWithCredential:error:completionHandler:
validateUserEnteredPIN:completionHandler:
initializeClientToViewServiceConnection
startCABLEAuthenticationWithCompletionHandler:
cableClientWillConnect
cableClientWillAuthenticate
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
setByAddingObject:
xpcInterface
canEvaluatePolicy:error:
biometryType
numberWithUnsignedInteger:
encodeBool:forKey:
unsignedIntegerValue
decodeBoolForKey:
length
shouldUseAlternateCredentialStore
initWithRequestTypes:
isProxiedRequest
setProxiedOriginDeviceName:
removePasskeyRequestsIfNecessary
requestTypes
relyingPartyIdentifier
setRelyingPartyIdentifier:
platformKeyCredentialCreationOptions
setPlatformKeyCredentialCreationOptions:
securityKeyCredentialCreationOptions
setSecurityKeyCredentialCreationOptions:
platformKeyCredentialAssertionOptions
setPlatformKeyCredentialAssertionOptions:
securityKeyCredentialAssertionOptions
setSecurityKeyCredentialAssertionOptions:
appleIDAuthorizationRequest
setAppleIDAuthorizationRequest:
proxiedAppName
setProxiedAppName:
proxiedAppIdentifier
setProxiedAppIdentifier:
proxiedBundleIdentifier
setProxiedBundleIdentifier:
proxiedTeamIdentifier
setProxiedTeamIdentifier:
proxiedAssociatedDomains
setProxiedAssociatedDomains:
proxiedIconData
setProxiedIconData:
proxiedIconScale
setProxiedIconScale:
proxiedOriginDeviceName
isClientLinkedOnOrAfterIOS15Aligned
isCABLEAuthenticatorRequest
setIsCABLEAuthenticatorRequest:
_isClientLinkedOnOrAfterIOS15Aligned
_isCABLEAuthenticatorRequest
_requestTypes
_relyingPartyIdentifier
_platformKeyCredentialCreationOptions
_securityKeyCredentialCreationOptions
_platformKeyCredentialAssertionOptions
_securityKeyCredentialAssertionOptions
_appleIDAuthorizationRequest
_proxiedAppName
_proxiedAppIdentifier
_proxiedBundleIdentifier
_proxiedTeamIdentifier
_proxiedAssociatedDomains
_proxiedIconData
_proxiedIconScale
_proxiedOriginDeviceName
T@"NSString",C,N,V_proxiedAppName
T@"NSString",C,N,V_proxiedAppIdentifier
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_proxiedTeamIdentifier
T@"NSArray",C,N,V_proxiedAssociatedDomains
T@"NSData",C,N,V_proxiedIconData
T@"NSNumber",C,N,V_proxiedIconScale
T@"NSString",C,N,V_proxiedOriginDeviceName
TB,R,N,V_isClientLinkedOnOrAfterIOS15Aligned
TB,N,V_isCABLEAuthenticatorRequest
TQ,R,N,V_requestTypes
T@"NSString",C,N,V_relyingPartyIdentifier
T@"ASCPublicKeyCredentialCreationOptions",&,N,V_platformKeyCredentialCreationOptions
T@"ASCPublicKeyCredentialCreationOptions",&,N,V_securityKeyCredentialCreationOptions
T@"ASCPublicKeyCredentialAssertionOptions",&,N,V_platformKeyCredentialAssertionOptions
T@"ASCPublicKeyCredentialAssertionOptions",&,N,V_securityKeyCredentialAssertionOptions
T@"AKAuthorizationRequest",&,N,V_appleIDAuthorizationRequest
TB,R,N
initWithMachServiceName:
setDelegate:
resume
setExportedInterface:
sharedInstance
initWithTrafficController:connection:publicKeyCredentialManager:
setExportedObject:
listener:shouldAcceptNewConnection:
initWithPublicKeyCredentialManager:
_listener
_publicKeyCredentialManager
initWithAccountTypes:delegate:
registerSynchronouslyWithError:
aa_primaryAppleAccount
_updateAccountOnInternalQueue:
aa_altDSID
isEqualToString:
_updateKeychainSyncingStatusOnInternalQueue
setContext:
setAltDSID:
initWithContextData:
sharedManager
accountWasAdded:
accountWasModified:
accountWasRemoved:
accountCredentialChanged:
T@"ASFeatureManager",R,N
_internalQueue
_accountStore
_keychainClique
_primaryAppleAccountAltDSID
initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:
authenticatorData
signature
userHandle
rawClientDataJSON
_authenticatorData
_signature
_userHandle
_rawClientDataJSON
T@"NSData",R,C,N,V_credentialID
T@"NSString",R,C,N,V_relyingPartyIdentifier
T@"NSData",R,C,N,V_authenticatorData
T@"NSData",R,C,N,V_signature
T@"NSData",R,C,N,V_userHandle
T@"NSData",R,C,N,V_rawClientDataJSON
credential
userIdentifier
identityToken
state
initWithUser:identityToken:state:
initWithAuthorization:
authorization
user
_authorization
_user
_identityToken
_state
T@"AKAuthorization",R,N,V_authorization
T@"NSString",R,C,N,V_user
T@"NSData",R,C,N,V_identityToken
T@"NSString",R,C,N,V_state
initWithRequestContext:appIdentifier:shouldUseRelyingPartyForServiceName:
bundleRecordWithApplicationIdentifier:error:
safari_privacyPreservingDescription
bundleIdentifier
teamIdentifier
localizedName
userVerificationPreference
destinationSiteForCrossSiteAssertion
safari_insertObject:inSortedOrderUsingComparator:
mutableCopy
sortUsingComparator:
loginChoiceKind
isExternal
safari_containsObjectPassingTest:
safari_filterObjectsUsingBlock:
initWithRequestContext:appIdentifier:
initWithCABLEAuthenticatorURL:shouldRequireConsent:
addLoginChoice:
updateLoginChoices:
isRegistrationRequest
isCombinedPublicKeyCredentialRegistrationRequest
hasExternalPasswords
primaryLoginChoices
otherLoginChoices
localAccountLoginChoices
appIdentifier
loginChoices
serviceName
setServiceName:
setDestinationSiteForCrossSiteAssertion:
setIsProxiedRequest:
platformUserVerificationPreference
cableAuthenticatorURL
shouldRequireCABLEAuthenticatorConsent
_loginChoices
_isProxiedRequest
_shouldRequireCABLEAuthenticatorConsent
_appIdentifier
_bundleIdentifier
_teamIdentifier
_serviceName
_destinationSiteForCrossSiteAssertion
_platformUserVerificationPreference
_cableAuthenticatorURL
T@"NSString",R,C,N,V_appIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_teamIdentifier
T@"NSArray",R,C,N,V_loginChoices
T@"NSString",C,N,V_serviceName
T@"NSString",C,N,V_destinationSiteForCrossSiteAssertion
TB,N,V_isProxiedRequest
T@"NSString",R,C,N,V_platformUserVerificationPreference
T@"NSArray",R,N
T@"NSURL",R,N,V_cableAuthenticatorURL
TB,R,N,V_isCABLEAuthenticatorRequest
TB,R,N,V_shouldRequireCABLEAuthenticatorConsent
compare:
credentialKind
currentDevice
userInterfaceIdiom
domain
code
isPad
isBiometricAuthenticationAvailable
shouldRequireLocalAuthenticationForPasswords
shouldRequireLocalAuthenticationForPlatformCredentials
isCABLEClient
Tq,R
userName
userDisplayName
_initAsRegistrationChoice:withName:displayName:userHandle:relyingPartyIdentifier:
isEqualToData:
numberWithBool:
boolValue
TQ,R,N
initRegistrationChoiceWithOptions:
initWithName:displayName:userHandle:
initWithName:displayName:userHandle:relyingPartyIdentifier:
name
displayName
_isRegistrationRequest
_name
_displayName
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_displayName
TB,R,N,V_isRegistrationRequest
initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:
attestationObject
_attestationObject
T@"NSData",R,C,N,V_attestationObject
password
site
creationDate
initWithUser:password:site:creationDate:
_password
_site
_creationDate
T@"NSString",R,N,V_user
T@"NSString",R,N,V_password
T@"NSString",R,N,V_site
T@"NSDate",R,N,V_creationDate
performAuthorizationRequestsForContext:withCompletionHandler:
cancelCurrentRequest
clearAllPlatformPublicKeyCredentialsWithCompletionHandler:
getShouldUseAlternateCredentialStoreWithCompletionHandler:
openCABLEURL:fromSourceApplication:withCompletionHandler:
initWithUser:
initWithMachServiceName:options:
_setUpConnection:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
invalidate
dealloc
remoteObjectProxyWithErrorHandler:
safari_errorWithDomain:code:privacyPreservingDescription:
_remoteObjectProxyWithErrorHandler:
_proxy
reconnectIfNecessary
_connection
challenge
setChallenge:
clientDataHash
setClientDataHash:
setUserName:
setUserIdentifier:
setUserDisplayName:
supportedAlgorithmIdentifiers
setSupportedAlgorithmIdentifiers:
setUserVerificationPreference:
attestationPreference
setAttestationPreference:
extensions
setExtensions:
shouldRequireResidentKey
setShouldRequireResidentKey:
excludedCredentials
setExcludedCredentials:
_shouldRequireResidentKey
_challenge
_clientDataHash
_userName
_userIdentifier
_userDisplayName
_supportedAlgorithmIdentifiers
_userVerificationPreference
_attestationPreference
_extensions
_excludedCredentials
T@"NSData",C,N,V_challenge
T@"NSData",C,N,V_clientDataHash
T@"NSString",C,N,V_userName
T@"NSData",C,N,V_userIdentifier
T@"NSString",C,N,V_userDisplayName
T@"NSArray",C,N,V_supportedAlgorithmIdentifiers
T@"NSString",C,N,V_userVerificationPreference
T@"NSString",C,N,V_attestationPreference
T@"ASCWebAuthenticationExtensionsClientInputs",C,N,V_extensions
TB,N,V_shouldRequireResidentKey
T@"NSArray",C,N,V_excludedCredentials
initWithAppID:isGoogleLegacyAppIDSupport:
appID
isGoogleLegacyAppIDSupport
setAppID:
setIsGoogleLegacyAppIDSupport:
_isGoogleLegacyAppIDSupport
_appID
T@"NSString",C,N,V_appID
TB,N,V_isGoogleLegacyAppIDSupport
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
containsObject:
addObject:
removeObject:
beginAuthorizationForApplicationIdentifier:withClearanceHandler:
endAuthorizationForAppIdentifier:clearanceHandler:
cancelAuthorizationForAppIdentifierIfNecessary:
_appsWithActiveRequests
_clearanceQueue
_trafficQueue
safari_browserDefaults
boolForKey:
setBool:forKey:
setShouldUseAlternateCredentialStore:
resetCredentialStore
TB,N
mainBundle
safari_isSafariFamilyApplicationBundle
currentConnection
_presentAuthorizationRequestWithContext:completionHandler:
_prepareForAuthorizationRequestsForContext:clientConnection:withPresentationHandler:
hasRunningPublicKeyCredentialOperation
cancelCurrentOperationIfNecessaryWithOverrideError:
_authorizationCompletedWithCredential:error:
_isAuthenticationConfiguredForPlatformPublicKeyRequestWithError:
safari_applicationRecordForConnectedProcess
applicationIdentifier
_isClientWithApplicationIdentifier:properlyEntitledForRequestContext:error:
_configureAppleIDCredentialwithCompletionHandler:
_configurePasswordCredentialsWithCompletionHandler:
array
_configurePublicKeyCredentialsWithAssertionOptions:completionHandler:
setDelegateCancellingCurrentOperation:
beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:
_hasSignInOptionsForRequestTypes:
localizedStringWithFormat:
_credentialRequestedForPasswordLoginChoice:completionHandler:
_credentialRequestedForPlatformLoginChoice:authenticatedContext:
_credentialRequestedForSecurityKeyLoginChoice:
_credentialRequestedForCABLELoginChoice:
setHandler:
_clientHasNecessaryAuthKitEntitlements
_bundleIDfromAppID:
_performAuthKitAuthorizationValidation
getCredentialStateForClientID:completion:
clearAllCredentials
auditToken
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
getCredentialsForAppWithAppID:completionHandler:
beginAssertionsWithOptions:
_allAvailableLoginChoicesForRequestContext:
countByEnumeratingWithState:objects:count:
primaryAuthKitAccount
username
formattedUsernameFromUsername:
initWithUsername:site:externalCredentialIdentity:
externalCredential
count
addObjectsFromArray:
initAssertionPlaceholderChoice
_shouldAddCABLEChoiceForRequestContext:
initWithDelegate:
qrCodeURL
initWithQRCodeURL:
_configureLoginChoicesForPresentationContext:withRequestContext:
_hasAnyCredentialsAvailableForRequestTypes:
_clientHasAuthKitDeveloperEntitlement
_clientIsAuthKitOwner
_clientIsInternalAuthKit
_clientIsPrivateAuthKit
valueForEntitlement:
firstObject
safari_bundleIdentifierFromApplicationIdentifier:
setAuthkitAccount:
setAuthorizationRequest:
canPerformAuthorizationRequest:error:
_isClientEntitledWebBrowser
initWithServiceType:applicationIdentifier:domain:
serviceDetailsWithServiceSpecifier:error:
isApproved
stringWithFormat:
userSelectedLoginChoice:authenticatedContext:completionHandler:
createNewPlatformCredentialWithOptions:authenticatedContext:
assertUsingPlatformCredentialForLoginChoice:authenticatedContext:
assertUsingSecurityKeyCredentialForLoginChoice:
performAuthenticationOperation:forRelyingPartyIdentifier:completionHandler:
initWithCaBLEURL:error:
finishTransactionWithCredential:error:
startWithCompletionHandler:
dismiss
cancelIfNecessary
encodeMakeCredentialCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCTAPCommandForAuthenticatorWithUserVerificationAvailability:
encodeMakeCredentialCTAPCommandForAuthenticatorWithUserVerificationAvailability:
cableClientWillConnect:
cableClientWillAuthenticate:
didFetchPlatformLoginChoices:
didFetchSecurityKeyLoginChoices:
didCompleteRegistrationWithCredential:error:
didCompleteAssertionWithCredential:error:
requestPINWithRemainingRetries:completionHandler:
didReceiveError:
authorizationPresenter:credentialRequestedForLoginChoice:authenticatedContext:completionHandler:
authorizationPresenter:validateUserEnteredPIN:completionHandler:
authorizationPresenter:startCABLEAuthenticationWithCompletionHandler:
_authorizationTrafficController
_existingAppleIDCredentialAvailableForLogIn
_passwordCredentials
_requestContext
_clientApplicationIdentifier
_requestPresenter
_authorizationCompletionHandler
_platformLoginChoices
_securityKeyLoginChoices
_didLoadPlatformCredentialsCallback
_userEnteredPINCallback
_pinResultCallback
_cableClient
_didStartCABLEClient
_cableAuthenticationURL
_cableAuthenticator
dismissWithError:
_initWithKind:name:displayName:userHandle:
numberWithInteger:
integerValue
initRegistrationChoice
_credentialKind
Tq,R,N,V_credentialKind
decodeIntegerForKey:
encodeInteger:forKey:
initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:
initWithKind:relyingPartyIdentifier:clientDataHash:userVerificationPreference:allowedCredentials:
allowedCredentials
_allowedCredentials
TQ,R,N,V_credentialKind
T@"NSData",R,C,N,V_challenge
T@"NSString",R,C,N,V_userVerificationPreference
T@"NSArray",R,C,N,V_allowedCredentials
_isPresentationContextValid:error:
archivedDataWithRootObject:requiringSecureCoding:error:
anonymousListener
initWithServiceName:viewControllerClassName:
endpoint
_endpoint
setXpcEndpoint:
setUserInfo:
newHandleWithDefinition:configurationContext:
registerObserver:
addObserver:
activateWithContext:
_performQueuedUpdatesIfNecessary
_invalidateWithError:
_isErrorDueToNewAlertHandleRequest:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
delegate
_remoteListener
_credentialResultHandler
_remoteAlertHandle
_invalidationQueue
_viewServiceConnection
_viewServiceProxy
_interfaceUpdateQueue
_loginChoicesForQueuedUpdate
_hasQueuedPINEntryInterfaceRequest
_hasQueuedCABLEClientWillConnectRequest
_hasQueuedCABLEClientWillAuthenticateRequest
_delegate
T@"<ASCAuthorizationPresenterDelegate>",W,N,V_delegate
owningExtensionState
credentialIdentityStoreIdentifier
externalCredentialIdentity
providerBundleIdentifier
_username
_externalCredentialIdentity
_providerBundleIdentifier
T@"NSString",R,C,N,V_username
T@"NSString",R,C,N,V_site
external
TB,R,N,GisExternal
T@"SFPasswordCredentialIdentity",R,N,V_externalCredentialIdentity
T@"NSString",R,C,N,V_providerBundleIdentifier
_qrCodeURL
T@"NSURL",R,C,N,V_qrCodeURL
URLSession:webSocketTask:didOpenWithProtocol:
URLSession:task:didCompleteWithError:
URLSession:task:didReceiveChallenge:completionHandler:
sharedSession
webSocketTaskWithRequest:
cancelWithCloseCode:reason:
protectionSpace
authenticationMethod
serverTrust
initWithTrust:
URLSession:webSocketTask:didCloseWithCode:reason:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
connection:didReceivePublicToken:
connection:didReceiveIncomingMessage:
userInfo
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
ephemeralSessionConfiguration
sessionWithConfiguration:
setFidoPayloadData:
activateWithCompletion:
initWithPushTopic:protoData:
setCompletionBlock:
sendMessage:
protoResponse
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
centralManagerDidUpdateState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
stopScan
first
second
UUIDWithData:
scanForPeripheralsWithServices:options:
centralManager:willRestoreState:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
cborWithUTF8String:
cborWithData:
decodeFromData:
cborWithDictionary:
dictionary
cborWithInteger:
string
data
initWithBase64EncodedString:options:
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@16@0:8
v16@0:8
@"NSData"
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@"NSError"16@"NSString"24@?<v@?>32
v24@0:8@"NSArray"16
v24@0:8@"NSError"16
v32@0:8@"ASCAuthorizationPresentationContext"16@?<v@?@"<ASCCredentialProtocol>"@"NSError">24
v40@0:8@"<ASCLoginChoiceProtocol>"16@"LAContext"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v40@0:8@"<ASCCredentialProtocol>"16@"NSError"24@?<v@?>32
v32@0:8@"NSString"16@?<v@?@"<ASCCredentialProtocol>"@"NSError">24
v24@0:8@?<v@?@"ASCAuthorizationPresentationContext"@"NSError">16
@24@0:8Q16
v20@0:8B16
@"NSString"
@"ASCPublicKeyCredentialCreationOptions"
@"ASCPublicKeyCredentialAssertionOptions"
@"AKAuthorizationRequest"
@"NSNumber"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"<ASPublicKeyCredentialManagerInterface>"
v24@0:8@"ACAccount"16
@"NSObject<OS_dispatch_queue>"
@"ACMonitoredAccountStore"
@"OTClique"
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24@32
@"AKAuthorization"
@36@0:8@16@24B32
@28@0:8@16B24
@"NSMutableArray"
@"NSURL"
q16@0:8
@52@0:8B16@20@28@36@44
@48@0:8@16@24@32@40
@"NSDate"
v32@0:8@"ASCCredentialRequestContext"16@?<v@?@"<ASCCredentialProtocol>"@"NSError">24
v24@0:8@?<v@?>16
v24@0:8@?<v@?B>16
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
@24@0:8@?16
@"NSXPCConnection"
@"ASCWebAuthenticationExtensionsClientInputs"
@"NSMutableSet"
@"WBSPair"24@0:8Q16
v24@0:8@"_TtC26AuthenticationServicesCore13ASCABLEClient"16
v32@0:8@16@24
v32@0:8Q16@?24
v24@0:8q16
v32@0:8@"<ASCCredentialProtocol>"16@"NSError"24
v32@0:8Q16@?<v@?@"NSString">24
v48@0:8@16@24@32@?40
v48@0:8@"ASCAuthorizationPresenter"16@"<ASCLoginChoiceProtocol>"24@"LAContext"32@?<v@?@"<ASCCredentialProtocol>"@"NSError">40
v40@0:8@"ASCAuthorizationPresenter"16@"NSString"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v32@0:8@"ASCAuthorizationPresenter"16@?<v@?@"ASCAuthorizationPresentationContext"@"NSError">24
B24@0:8^@16
B24@0:8Q16
B40@0:8@16@24^@32
@"ASCAuthorizationTrafficController"
@"ASCCredentialRequestContext"
@"ASCAuthorizationPresenter"
@"_TtC26AuthenticationServicesCore13ASCABLEClient"
@"_TtC26AuthenticationServicesCore20ASCABLEAuthenticator"
@48@0:8q16@24@32@40
@56@0:8Q16@24@32@40@48
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
B32@0:8@16^@24
@"SBSRemoteAlertHandle"
@"<ASCViewServiceProtocol>"
@"<ASCAuthorizationPresenterDelegate>"
q24@0:8@16
@"SFPasswordCredentialIdentity"
.com
.org
.net
.info
FIDO_2_0
,)72R<
fido.cable
fido.cable
credentialID
v8@?0
com.apple.AuthenticationServicesCore.AuthorizationError
Too many NFC devices found. Please present only one NFC device.
Found no credentials on this device.
The operation cannot be completed.
Unrecognized PIN code. Please try again.
Your security key is temporarily locked. Please remove it and try again.
Too many invalid PIN attempts. Your security key must be reset.
requestTypes
appName
appIdentifier
bundleIdentifier
teamIdentifier
associatedDomains
iconData
iconScale
proxiedOriginDeviceName
linkedOnOrAfterIOS15Aligned
relyingPartyIdentifier
platformCredentialCreationOptions
securityKeyCredentialCreationOptions
platformCredentialAssertionOptions
securityKeyCredentialAssertionOptions
appleIDAuthorizationRequest
com.apple.AuthenticationServicesCore.ASFeatureManager
authenticatorData
signature
userHandle
rawClientDataJSON
Authorization
User
IdentityToken
State
ASCAuthorizationPresentationContextData
com.apple.authentication-services-core.authorization-presenter-client
loginChoices
serviceName
destinationSiteForCrossSiteAssertion
isProxiedRequestKey
platformUserVerificationPreference
cableAuthenticatorURL
isCABLEAuthenticatorRequest
shouldRequireCABLEAuthenticatorConsent
q24@?0@"<ASCLoginChoiceProtocol>"8@"<ASCLoginChoiceProtocol>"16
B16@?0@"<ASCLoginChoiceProtocol>"8
DeviceClassNumber
name
displayName
registrationRequestIndicator
attestationObject
user
password
site
date
appleIDLoginChoiceUser
AuthenticationServicesAgent
Failed to acquire remote object proxy.
challenge
clientDataHash
userName
userIdentifier
userDisplayName
supportedAlgorithmIdentifiers
userVerificationPreference
attestationPreference
extensions
shouldRequireResidentKey
excludedCredentials
appID
isGoogleLegacyAppIDSupport
com.apple.AuthenticationServicesCore.AuthorizationClearanceQueue
com.apple.AuthenticationServicesCore.AuthorizationTrafficQueue
No application identifier specified for authorization request.
Request already in progress for specified application identifier.
syncingPlatformAuthenticatorEnabled
com.apple.Preferences
v12@?0B8
_securityagent
com.apple.AuthenticationServicesCore.AuthenticationServicesAgent
com.apple.authentication-services-core.allow-authentication-request-proxying
com.apple.authentication-services.allow-authentication-request-any-rpid
com.apple.developer.applesignin
com.apple.authkit.client.owner
com.apple.authkit.client.internal
com.apple.authkit.client.private
com.apple.AuthenticationServicesCore.caBLEAuthenticator
com.apple.authentication-services-core.open-cable-url
v24@?0@"ASCCredentialRequestContext"8@"NSError"16
In order to sign in with or save a passkey, you must enable the syncing platform authenticator in Settings > Developer, after attaching your device to Xcode.
com.apple.Safari
Syncing platform authenticator must be enabled to register a platform public key credential; this can be enabled in Settings > Developer.
Traffic controller denied request.
No credentials available for login.
v20@?0B8@"NSError"12
v24@?0q8@"NSError"16
Cannot perform platform public key credential request because neither passcode nor biometrics are set up on device
Simulator requires enrolled biometrics to use platform public key credentials. This can be set up in the Features menu.
Client is missing required entitlement
Invalid request: missing caBLE URL
v24@?0@"<ASCCredentialProtocol>"8@"NSError"16
v16@?0@"NSArray"8
Client does not have entitlement for using proxied credential request context.
B16@?0@"_SWCServiceDetails"8
Application with identifier %@ is not associated with domain %@
success
com.apple.BarcodeScanner
com.apple.camera
com.apple.springboard
com.apple.authentication-services-core.authentication-services-view-service-client
AuthenticationServicesUI
credentialKind
allowedCredentials
ASViewServiceViewController
com.apple.AuthenticationServicesUI
com.apple.AuthenticationServicesCore.AuthorizationPresenterInvalidationQueue
com.apple.AuthenticationServicesCore.AuthorizationPresenterInterfaceUpdateQueue
Invalid request: 0 login choices
Registration requests cannot be used with other types of requests.
passwordLoginChoiceUsername
passwordLoginChoiceSite
externalPasswordIdentity
providerBundleIdentifier
qrCodeURL
com.apple.passkeys.relay
idle
allocatingServer
listeningForRelayPush
performingInitialHandshake
connectionEstablished
type
transports
bluetoothNotReady
bluetoothOnAndIdle
waitingForBluetoothPowerOn
listeningForBluetoothAdvertisement
openingWebSocket
listeningForPostHandshakeMessage
UNSPECIFIED
SUCCESS
BAD_REQUEST
INTERNAL_ERROR
NOT_FOUND
request_uuid
allocation_request
state_delete_request
CableRequest.AllocationRequest
tunnel_id
use_state_assisted
CableRequest.StateDeleteRequest
contact_id
status
allocation_response
state_delete_response
RESPONSE_STATUS_UNSPECIFIED
RATE_LIMITED
CableResponse.AllocationResponse
routing_id
encoded_domain
CableResponse.StateDeleteResponse
qr_assisted
state_assisted
relay_ips
CableRelayConnectionRequest.QRAssisted
CableRelayConnectionRequest.StateAssisted
client_payload
connection
access_token
_TtP26AuthenticationServicesCore21ASCABLEClientDelegate_
@24@0:8Q16
v24@0:8@16
v24@0:8@"_TtC26AuthenticationServicesCore13ASCABLEClient"16
ASCCredentialProtocol
NSObject
q16@0:8
#16@0:8
@24@0:8:16
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
NSSecureCoding
supportsSecureCoding
TB,N,R
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
Found caBLE advertisement of unexpected size: %ld
Could not decode caBLE server URL
caBLEv2 tunnel server domain
abcdefghijklmnopqrstuvwxyz234567
Found unknown reserved caBLE URL: %hu
publicKeyCredentialParameters
_TtC26AuthenticationServicesCore11ASWebSocket
v40@0:8@16@24@32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
isConnected
urlSession
webSocketTask
connectionCompletionHandler
overrideDomainForServerTrust
Socket connected with protocol: %s
Ignoring disconnection after socket closed.
Socket unexpectedly disconnected
Receive error: %@
Received response with unknown type
Sec-WebSocket-Protocol
Asked to close socket
AuthenticationServicesCore.ASWebSocket
Using default behavior.
AuthenticationMethod is not ServerTrust. Using default behavior.
No serverTrust found. Using default behavior.
Could not update policies for serverTrust: %d
Overridden sectrust is NOT valid: %s
Overriden trust is valid
Received server challenge
Could not connect: %s
Opened socket
Send error: %@
NSURLSessionWebSocketDelegate
v48@0:8@16@24q32@40
v40@0:8@"NSURLSession"16@"NSURLSessionWebSocketTask"24@"NSString"32
v48@0:8@"NSURLSession"16@"NSURLSessionWebSocketTask"24q32@"NSData"40
NSURLSessionTaskDelegate
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
NSURLSessionDelegate
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
B24@0:8@16
AuthenticationServicesCore.ASCABLEAuthenticator.AuthenticatorError
Transaction failed: %s
Received credential with unexpected type: %s
Could encode ctap response: %s
Could not send ctap response without a valid socket
Received getAssertion response to non-getAssertion command
AuthenticationServicesCore.ASCABLEAuthenticator
init()
_TtC26AuthenticationServicesCore20ASCABLEAuthenticator
@32@0:8@16^@24
v24@0:8@?16
v32@0:8@16@24
v16@0:8
cryptographyManager
bluetoothAdvertiser
advertisement
apsConnection
apsWrapper
completionHandler
currentCTAPCommand
_TtCC26AuthenticationServicesCore20ASCABLEAuthenticatorP33_84AFAA0745E7F5997DD6543D9C2808DD10APSWrapper
authenticator
Authenticator is nil.
Unexpectedly received push without a valid advertisement
Push unexpectedly had nil message
Could not read protobuf payload
Could not decode push protobuf: %s
Could not read IP address for relay
Could not read access token for relay
Received relay push
Received public push token
Could not parse CTAP command: %s
Could not complete command without completionHandler
Could not decrypt caBLE message: %s
Unexpectedly received caBLE update message from client. Ignoring.
Received shutdown message from client
Could not encode postHandshake message: %s
Could not send postHandshake without a valid socket
Changing caBLE authenticator state from %s to %s
Tried to perform Noise handshake without an advertisement.
Noise handshake failed: %s
Finishing handshake
Received handshake
/cable/connect/device/
Could not determine relay URL
Connecting to relay at %s, headers: %s
Client was deinitialized while waiting for initial connection.
Received socket connection with unexpected protocol: %s
Authenticator opened socket connection.
v16@?0@"NSError"8
Starting Bluetooth advertisement
Started advertising
Could not begin advertising: %@
Networking error: %s
Unexpectedly received string frame: %s
Unexpectedly received socket message while in state %s
caBLE transaction failed: %@
Could not encode allocation request: %s
com.apple.passkeys.allocator
Could not encode protobuf message
Could not retrieve shared FTMessageDelivery_APS
v40@?0@"IDSBaseMessage"8@"NSError"16q24@"NSDictionary"32
Requesting server allocation with tunnelID "%s"
Received unexpected resultCode from server: %ld, %s
Received unexpected response from server: %s, %s
Could not decode allocation server response: %s
Allocation server returned error: %ld
Couldn't decode allocation response
Received invalid encodedDomain: %u
Allocated relay with routingID: "%s"
Received server allocation response
Could not decode caBLE url: %@
APSConnectionDelegate
v48@0:8@16@24@32@40
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
authenticatorGetInfoResponse
AuthenticationServicesCore/ASCABLEQRCode.swift
knownTunnelServerDomainCount
supportsStateAssistedTransactions
credentialPublicKey
AuthenticationServicesCore.ASCABLEClient.ClientError
%@ changed state to %ld
AuthenticationServicesCore.ASCABLEClient
_TtC26AuthenticationServicesCore13ASCABLEClient
@16@0:8
@24@0:8@16
v40@0:8q16@24@?32
qrCodeStruct
delegate
bluetoothManager
currentRelyingPartyIdentifier
currentOperationType
clientDataJSON
webSocket
authenticatorAdvertisement
currentState
T@"NSURL",N,R
Unexpectedly received authenticator response without a relying party identifier.
Could not decode authenticator response: %@
Received error from authenticator: %hhu
Unexpectedly finished a transaction without a completion handler.
Transaction succeeded.
Could not encrypt shutdown message
Could not understand caBLE message: %s
Received unsupported caBLE update message. Dropping.
Missing clientDataJSON or current operation type
Unexpectedly received shutdown from authenticator.
Unexpectedly received posthandshake message without a valid websocket.
Unexpectedly received postHandshake message without a current operation.
Delegate no longer exists.
Could not decode post handshake message: %@
Noise handshake failed: %@
Unexpectedly tried to perform initial handshake without an advertisement
Unexpectedly tried to perform initial handshake without web socket
Failed to generate initial Noise handshake: %@
Networking error: %@
Found unexpected advertisement.
Found advertisemnt without caBLE UUID.
Could not decrypt caBLE advertisement.
Could not get URL from advertisement.
Connecting to relay at %s
Central manager discovered peripheral: %@
Changing caBLE client state from %s to %s
CBCentralManagerDelegate
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
@32@0:8:16@24
com.apple.AuthenticationServicesCore
<AllocationResponse: routingID: 
; encodedDomain: 
Allocation response is missing routingID: %s
Allocation response is missing domain: %s
_TtC26AuthenticationServicesCore26ASCABLECryptographyManager
qrSymmetricKey
qrPrivateKey
qrPublicKey
eidAESKey
eidHMACKey
tunnelID
noiseManager
noiseTransportCipher
AuthenticationServicesCore/ASCABLECryptographyManager.swift
Fatal error
Could not encrypte caBLE advertisement.
AES decryption of advertisement: %d
Could not decrypt caBLE advertisement of incorrect size: %ld
caBLE HMAC tag mismatch. Expected %s got %s.
attestationFormat
attestationStatement
numberOfCredentials
CableRelayConnectionRequest
CableRelayConnectionResponse
CableRelayPushMessage
__C_Synthesized
ASCAuthorizationError
CFError
NCFErrorRef
AuthChallengeDisposition
NNSURLSessionAuthChallengeDisposition
OneOf_Message
OneOf_Response
OneOf_Request
AuthenticationServicesCore
RelayRequestResponseStatus
CableRequest
AllocationRequest
StateDeleteRequest
CableResponse
ResponseStatus
StateDeleteResponse
QRAssisted
StateAssisted
AllocationResponse
Code
NASCAuthorizationError
ASCABLEAdvertisement
ASCTAPCommand
ASCTAPCommandDecodingError
ASCABLEMessageDecodingError
ASCTAPAuthenticatorGetAssertionCommand
ASCTAPAuthenticatorMakeCredentialCommand
CodingKeys
ASWebSocketDelegate
ASWebSocket
SocketError
ASCABLEAuthenticator
AuthenticatorError
APSWrapper
CABLEState
CBORDataCodable
ASCABLEPostHandshakeMessage
CodingKeys
ASCABLEQRCode
URLError
CodingKeys
ASCTAPPublicKeyCredentialEntity
ASCTAPPublicKeyCredentialDescriptor
DecodingError
ASCTAPCredentialData
ASCTAPUserEntity
ASCTAPAuthData
CodingKeys
ASCTAPPublicKeyCredentialParameters
ASCTAPRelyingPartyEntity
Flags
4;B4
 $+/
ASCABLEClient
ClientError
OperationType
CABLEState
ASCABLECryptographyManager
authData
public-key
ASCTAPResponseMessage
ASCTAPAuthenticatorMakeCredentialResponse
DecodingError
ASCTAPAuthenticatorGetAssertionResponse
CodingKeys
ASCTAPGetInfoResponse
CodingKeys
Unable to fetch bundle record for app identifier on credential request context with error: %{public}@
Local Auth returned error when checking biometric auth availability: %{public}@
No biometrics available
Local Auth returned error when checking password auth availability: %{public}@
Cannot evaluate biometrics: %{public}@
Remote proxy object error handler invoked with error: %{public}@
Failed to acquire remote object proxy.
Connection to agent service interrupted with error: %{public}@
Open caBLE URL: %{private}@, sourceApplication: %@
Client asked to cancel request.
Exactly one of clientDataHash or challenge must be non-nil
Could not fetch bundle identifier for client process.
Skipping iCloud Keychain check in Simulator.
Syncing platform authenticator enabled: %d
Synchronously fetching syncing platform authenticator state.
Toggling alternate credential store: %d
Cleared credential store.
Initializing ASCAgent %{public}p.
Could not perform authorization: %{public}@
Attempted to perform caBLE transaction with passkeys disabled.
%{public}@
Client is not properly entitled for this request. Rejecting.
Client does not have necessary entitlements to access Sign in with Apple credentials.
Unable to fetch client bundle identifier.
Device not configured for platform public key requests: %{public}@
Client is missing required entitlement open caBLE URLs
Completed request for %{private}@
Failed to get application bundle identifier with error: %{public}@
Cannot perform AuthKit authorization due to error: %{public}@
Client is making proxied credential request but is not entitled to do so.
Allowing proxied request.
Allowing request from web browser.
Could not find a credential for the user's login choice.
caBLE client already started
Starting caBLE client
Unexpectedly received PIN callback.
Starting caBLE authentication
Failed to create caBLE authenticator: %{public}@
Could not authenticator: agent no longer exists.
Failed to start caBLE authenticator: %{public}@
Could not prepare for caBLE authorization: agent no longer exists.
Failed to prepare for caBLE authorization: %{public}@
Finishing caBLE transaction: %{public}@
Received unexpected error: %ld
Completing authorization: %p %{public}@ %{public}@
Received internal cancel. Dropping.
Dealloc for %{public}p. Cancelling any outstanding requests.
Found unexpected value for credential kind: %ld
Failed to get context data for presentation with error: %{private}@
Asked to present unsupported error: %{public}@.
Asked to display error with unrecognized code: %ld
Invalid process tried to connect to AuthenticationServicesAgent acting as AuthenticationServicesUI.
Failed to connect client process to AuthenticationServices view service
Alert handle deactivated.
Alert handle deactivated by new request.
Alert handle invalidated with error: %{public}@
$ss12CaseIterableP
ySi_
Sg_ABt
_AAt
Sg_ABt
_AAt
Sg_ABt
_AAt
Sg_ABt
SaySSG
SbSg
So7NSErrorC
$sSY
$s10Foundation21_BridgedStoredNSErrorP
$s10Foundation18_ErrorCodeProtocolP
ySJG
SDySSSbGSg
SDySSSbG
$s26AuthenticationServicesCore19ASWebSocketDelegateP
So8NSObjectC
_pSgXw
So12NSURLSessionC
So25NSURLSessionWebSocketTaskC
ySSSgcSg
SSSg
SgXw
ScPSg
So16NSURLSessionTaskC
So28NSURLAuthenticationChallengeC
So15NSURLCredentialCSgIeyByy_
IeghH_
ytIeghHr_
So27ASCCredentialRequestContextCSgSo7NSErrorCSgIeyByy_
So12CBAdvertiserC
So13APSConnectionC
ySo27ASCCredentialRequestContextCSg_
_pSgtcSg
SgXw
_pSg
_A13At
ypSg
ySSG
ySS_SbtG
ySS_SStG
SSSgIegg_Sg
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
$s26AuthenticationServicesCore15CBORDataCodableP
SiSg
ySiG
$s26AuthenticationServicesCore31ASCTAPPublicKeyCredentialEntityP
SaySSGSg
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
So21ASCCredentialProtocol_pSgSo7NSErrorCSgIeyByy_
$s26AuthenticationServicesCore21ASCABLEClientDelegateP
26AuthenticationServicesCore21ASCABLEClientDelegate_pSgXw
So16CBCentralManagerC
ySo21ASCCredentialProtocol_pSg_
_pSgtcSg
ySo8NSNumberCG
ySo32ASCPublicKeyCredentialDescriptorCG
SDySo6CBUUIDC
SgXw
ySSypG
SS_ypt
ySo6CBUUIDCG
8readData_
GSg7streamst
_AAt
ySWG
$s26AuthenticationServicesCore21ASCTAPResponseMessageP
ySo4CBORC_ACtG
ySo4CBORCACG
ySSSbG
yS2SG
SuSg
SaySuGSg
SaySuG
AllCases
unknownFields
_routingID
_encodedDomain
_contactID
_connection
_accessToken
_status
_requestUuid
_clientPayload
_tunnelID
message
relayIps
_useStateAssisted
request
allocationRequest
stateDeleteRequest
allocationResponse
stateDeleteResponse
qrAssisted
stateAssisted
_nsError
unspecified
success
badRequest
internalError
notFound
response
rateLimited
RawValue
Code
_ErrorType
flags
nonce
routingID
tunnelServerURL
rawData
makeCredential
getAssertion
clientDataHash
relyingParty
user
publicKeyCredentialParameters
options
relyingPartyID
allowList
unknownMessageType
missingMessageType
unknownCommandSpecifier
missingCommandSpecifier
RawValue
delegate
isConnected
urlSession
webSocketTask
connectionCompletionHandler
overrideDomainForServerTrust
unknown
RawValue
cryptographyManager
bluetoothAdvertiser
advertisement
webSocket
apsConnection
apsWrapper
completionHandler
currentCTAPCommand
currentState
authenticator
idle
allocatingServer
listeningForRelayPush
performingInitialHandshake
connectionEstablished
padding
authenticatorGetInfoResponse
RawValue
publicKey
symmetricKey
knownTunnelServerDomainCount
currentTime
supportsStateAssistedTransactions
invalidLength
RawValue
rpIDHash
flags
counter
attestedCredentialData
extensions
name
displayName
aaguid
credentialID
credentialPublicKey
invalidLength
missingCredentialData
type
transports
rawValue
algorithm
ArrayLiteralElement
RawValue
Element
RawValue
qrCodeStruct
delegate
bluetoothManager
cryptographyManager
currentRelyingPartyIdentifier
currentOperationType
clientDataJSON
webSocket
authenticatorAdvertisement
completionHandler
currentState
bluetoothNotReady
bluetoothOnAndIdle
waitingForBluetoothPowerOn
listeningForBluetoothAdvertisement
openingWebSocket
performingInitialHandshake
listeningForPostHandshakeMessage
connectionEstablished
qrSymmetricKey
qrPrivateKey
qrPublicKey
eidAESKey
eidHMACKey
tunnelID
noiseManager
noiseTransportCipher
attestationFormat
authData
attestationStatement
credential
signature
user
numberOfCredentials
userSelected
missingKey
missingTopLevelDictionary
RawValue
versions
extensions
aaguid
options
maxMessageSize
pinProtocols
RawValue
ASCPublicKeyCredentialDescriptor
NSSecureCoding
NSCoding
ASCAuthorizationPresenterHostProtocol
NSObject
ASCAuthorizationPresenterHostInterface
ASCCredentialRequestContext
ASCAgentListener
NSXPCListenerDelegate
ASFeatureManager
ACMonitoredAccountStoreDelegateProtocol
ASCSecurityKeyPublicKeyCredentialAssertion
ASCCredentialProtocol
ASCAppleIDCredential
ASCAuthorizationPresentationContext
_ASDevice
ASCPlatformPublicKeyCredentialLoginChoice
ASCLoginChoiceProtocol
ASCSecurityKeyPublicKeyCredentialRegistration
ASCPasswordCredential
ASCAgentProtocol
ASCAgentInterface
ASCAppleIDLoginChoice
ASCPlatformPublicKeyCredentialRegistration
ASCAgentProxy
ASCPublicKeyCredentialCreationOptions
ASCWebAuthenticationExtensionsClientInputs
NSCopying
ASCPlatformPublicKeyCredentialAssertion
ASCAuthorizationTrafficController
ASCWebKitSPISupport
ASCAgent
_TtP26AuthenticationServicesCore21ASCABLEClientDelegate_
ASPublicKeyCredentialManagerDelegate
ASCAuthorizationPresenterDelegate
ASCViewServiceProtocol
ASCViewServiceInterface
ASCSecurityKeyPublicKeyCredentialLoginChoice
ASCPublicKeyCredentialAssertionOptions
ASCAuthorizationPresenter
SBSRemoteAlertHandleObserver
ASCPasswordLoginChoice
ASCABLELoginChoice
init
copy
credentialID
transports
initWithCredentialID:transports:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
.cxx_destruct
_credentialID
_transports
T@"NSData",R,N,V_credentialID
T@"NSArray",R,N,V_transports
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
presentError:forService:completionHandler:
updateInterfaceWithLoginChoices:
presentPINEntryInterface
updateInterfaceForUserVisibleError:
presentAuthorizationWithContext:completionHandler:
authorizationRequestInitiatedWithLoginChoice:authenticatedContext:completionHandler:
authorizationRequestFinishedWithCredential:error:completionHandler:
validateUserEnteredPIN:completionHandler:
initializeClientToViewServiceConnection
startCABLEAuthenticationWithCompletionHandler:
cableClientWillConnect
cableClientWillAuthenticate
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
setByAddingObject:
xpcInterface
canEvaluatePolicy:error:
biometryType
numberWithUnsignedInteger:
encodeBool:forKey:
unsignedIntegerValue
decodeBoolForKey:
length
shouldUseAlternateCredentialStore
initWithRequestTypes:
isProxiedRequest
setProxiedOriginDeviceName:
removePasskeyRequestsIfNecessary
requestTypes
relyingPartyIdentifier
setRelyingPartyIdentifier:
platformKeyCredentialCreationOptions
setPlatformKeyCredentialCreationOptions:
securityKeyCredentialCreationOptions
setSecurityKeyCredentialCreationOptions:
platformKeyCredentialAssertionOptions
setPlatformKeyCredentialAssertionOptions:
securityKeyCredentialAssertionOptions
setSecurityKeyCredentialAssertionOptions:
appleIDAuthorizationRequest
setAppleIDAuthorizationRequest:
proxiedAppName
setProxiedAppName:
proxiedAppIdentifier
setProxiedAppIdentifier:
proxiedBundleIdentifier
setProxiedBundleIdentifier:
proxiedTeamIdentifier
setProxiedTeamIdentifier:
proxiedAssociatedDomains
setProxiedAssociatedDomains:
proxiedIconData
setProxiedIconData:
proxiedIconScale
setProxiedIconScale:
proxiedOriginDeviceName
isClientLinkedOnOrAfterIOS15Aligned
isCABLEAuthenticatorRequest
setIsCABLEAuthenticatorRequest:
_isClientLinkedOnOrAfterIOS15Aligned
_isCABLEAuthenticatorRequest
_requestTypes
_relyingPartyIdentifier
_platformKeyCredentialCreationOptions
_securityKeyCredentialCreationOptions
_platformKeyCredentialAssertionOptions
_securityKeyCredentialAssertionOptions
_appleIDAuthorizationRequest
_proxiedAppName
_proxiedAppIdentifier
_proxiedBundleIdentifier
_proxiedTeamIdentifier
_proxiedAssociatedDomains
_proxiedIconData
_proxiedIconScale
_proxiedOriginDeviceName
T@"NSString",C,N,V_proxiedAppName
T@"NSString",C,N,V_proxiedAppIdentifier
T@"NSString",C,N,V_proxiedBundleIdentifier
T@"NSString",C,N,V_proxiedTeamIdentifier
T@"NSArray",C,N,V_proxiedAssociatedDomains
T@"NSData",C,N,V_proxiedIconData
T@"NSNumber",C,N,V_proxiedIconScale
T@"NSString",C,N,V_proxiedOriginDeviceName
TB,R,N,V_isClientLinkedOnOrAfterIOS15Aligned
TB,N,V_isCABLEAuthenticatorRequest
TQ,R,N,V_requestTypes
T@"NSString",C,N,V_relyingPartyIdentifier
T@"ASCPublicKeyCredentialCreationOptions",&,N,V_platformKeyCredentialCreationOptions
T@"ASCPublicKeyCredentialCreationOptions",&,N,V_securityKeyCredentialCreationOptions
T@"ASCPublicKeyCredentialAssertionOptions",&,N,V_platformKeyCredentialAssertionOptions
T@"ASCPublicKeyCredentialAssertionOptions",&,N,V_securityKeyCredentialAssertionOptions
T@"AKAuthorizationRequest",&,N,V_appleIDAuthorizationRequest
TB,R,N
initWithMachServiceName:
setDelegate:
resume
setExportedInterface:
sharedInstance
initWithTrafficController:connection:publicKeyCredentialManager:
setExportedObject:
listener:shouldAcceptNewConnection:
initWithPublicKeyCredentialManager:
_listener
_publicKeyCredentialManager
initWithAccountTypes:delegate:
registerSynchronouslyWithError:
aa_primaryAppleAccount
_updateAccountOnInternalQueue:
aa_altDSID
isEqualToString:
_updateKeychainSyncingStatusOnInternalQueue
setContext:
setAltDSID:
initWithContextData:
sharedManager
accountWasAdded:
accountWasModified:
accountWasRemoved:
accountCredentialChanged:
T@"ASFeatureManager",R,N
_internalQueue
_accountStore
_keychainClique
_primaryAppleAccountAltDSID
initWithRelyingPartyIdentifier:authenticatorData:signature:userHandle:rawClientDataJSON:credentialID:
authenticatorData
signature
userHandle
rawClientDataJSON
_authenticatorData
_signature
_userHandle
_rawClientDataJSON
T@"NSData",R,C,N,V_credentialID
T@"NSString",R,C,N,V_relyingPartyIdentifier
T@"NSData",R,C,N,V_authenticatorData
T@"NSData",R,C,N,V_signature
T@"NSData",R,C,N,V_userHandle
T@"NSData",R,C,N,V_rawClientDataJSON
credential
userIdentifier
identityToken
state
initWithUser:identityToken:state:
initWithAuthorization:
authorization
user
_authorization
_user
_identityToken
_state
T@"AKAuthorization",R,N,V_authorization
T@"NSString",R,C,N,V_user
T@"NSData",R,C,N,V_identityToken
T@"NSString",R,C,N,V_state
initWithRequestContext:appIdentifier:shouldUseRelyingPartyForServiceName:
bundleRecordWithApplicationIdentifier:error:
safari_privacyPreservingDescription
bundleIdentifier
teamIdentifier
localizedName
userVerificationPreference
destinationSiteForCrossSiteAssertion
safari_insertObject:inSortedOrderUsingComparator:
mutableCopy
sortUsingComparator:
loginChoiceKind
isExternal
safari_containsObjectPassingTest:
safari_filterObjectsUsingBlock:
initWithRequestContext:appIdentifier:
initWithCABLEAuthenticatorURL:shouldRequireConsent:
addLoginChoice:
updateLoginChoices:
isRegistrationRequest
isCombinedPublicKeyCredentialRegistrationRequest
hasExternalPasswords
primaryLoginChoices
otherLoginChoices
localAccountLoginChoices
appIdentifier
loginChoices
serviceName
setServiceName:
setDestinationSiteForCrossSiteAssertion:
setIsProxiedRequest:
platformUserVerificationPreference
cableAuthenticatorURL
shouldRequireCABLEAuthenticatorConsent
_loginChoices
_isProxiedRequest
_shouldRequireCABLEAuthenticatorConsent
_appIdentifier
_bundleIdentifier
_teamIdentifier
_serviceName
_destinationSiteForCrossSiteAssertion
_platformUserVerificationPreference
_cableAuthenticatorURL
T@"NSString",R,C,N,V_appIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_teamIdentifier
T@"NSArray",R,C,N,V_loginChoices
T@"NSString",C,N,V_serviceName
T@"NSString",C,N,V_destinationSiteForCrossSiteAssertion
TB,N,V_isProxiedRequest
T@"NSString",R,C,N,V_platformUserVerificationPreference
T@"NSArray",R,N
T@"NSURL",R,N,V_cableAuthenticatorURL
TB,R,N,V_isCABLEAuthenticatorRequest
TB,R,N,V_shouldRequireCABLEAuthenticatorConsent
compare:
credentialKind
currentDevice
userInterfaceIdiom
domain
code
isPad
isBiometricAuthenticationAvailable
shouldRequireLocalAuthenticationForPasswords
shouldRequireLocalAuthenticationForPlatformCredentials
isCABLEClient
Tq,R
userName
userDisplayName
_initAsRegistrationChoice:withName:displayName:userHandle:relyingPartyIdentifier:
isEqualToData:
numberWithBool:
boolValue
TQ,R,N
initRegistrationChoiceWithOptions:
initWithName:displayName:userHandle:
initWithName:displayName:userHandle:relyingPartyIdentifier:
name
displayName
_isRegistrationRequest
_name
_displayName
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_displayName
TB,R,N,V_isRegistrationRequest
initWithRelyingPartyIdentifier:attestationObject:rawClientDataJSON:credentialID:
attestationObject
_attestationObject
T@"NSData",R,C,N,V_attestationObject
password
site
creationDate
initWithUser:password:site:creationDate:
_password
_site
_creationDate
T@"NSString",R,N,V_user
T@"NSString",R,N,V_password
T@"NSString",R,N,V_site
T@"NSDate",R,N,V_creationDate
performAuthorizationRequestsForContext:withCompletionHandler:
cancelCurrentRequest
clearAllPlatformPublicKeyCredentialsWithCompletionHandler:
getShouldUseAlternateCredentialStoreWithCompletionHandler:
openCABLEURL:fromSourceApplication:withCompletionHandler:
initWithUser:
initWithMachServiceName:options:
_setUpConnection:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
invalidate
dealloc
remoteObjectProxyWithErrorHandler:
safari_errorWithDomain:code:privacyPreservingDescription:
_remoteObjectProxyWithErrorHandler:
_proxy
reconnectIfNecessary
_connection
challenge
setChallenge:
clientDataHash
setClientDataHash:
setUserName:
setUserIdentifier:
setUserDisplayName:
supportedAlgorithmIdentifiers
setSupportedAlgorithmIdentifiers:
setUserVerificationPreference:
attestationPreference
setAttestationPreference:
extensions
setExtensions:
shouldRequireResidentKey
setShouldRequireResidentKey:
excludedCredentials
setExcludedCredentials:
_shouldRequireResidentKey
_challenge
_clientDataHash
_userName
_userIdentifier
_userDisplayName
_supportedAlgorithmIdentifiers
_userVerificationPreference
_attestationPreference
_extensions
_excludedCredentials
T@"NSData",C,N,V_challenge
T@"NSData",C,N,V_clientDataHash
T@"NSString",C,N,V_userName
T@"NSData",C,N,V_userIdentifier
T@"NSString",C,N,V_userDisplayName
T@"NSArray",C,N,V_supportedAlgorithmIdentifiers
T@"NSString",C,N,V_userVerificationPreference
T@"NSString",C,N,V_attestationPreference
T@"ASCWebAuthenticationExtensionsClientInputs",C,N,V_extensions
TB,N,V_shouldRequireResidentKey
T@"NSArray",C,N,V_excludedCredentials
initWithAppID:isGoogleLegacyAppIDSupport:
appID
isGoogleLegacyAppIDSupport
setAppID:
setIsGoogleLegacyAppIDSupport:
_isGoogleLegacyAppIDSupport
_appID
T@"NSString",C,N,V_appID
TB,N,V_isGoogleLegacyAppIDSupport
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
containsObject:
addObject:
removeObject:
beginAuthorizationForApplicationIdentifier:withClearanceHandler:
endAuthorizationForAppIdentifier:clearanceHandler:
cancelAuthorizationForAppIdentifierIfNecessary:
_appsWithActiveRequests
_clearanceQueue
_trafficQueue
safari_browserDefaults
boolForKey:
setBool:forKey:
setShouldUseAlternateCredentialStore:
resetCredentialStore
TB,N
mainBundle
safari_isSafariFamilyApplicationBundle
currentConnection
_presentAuthorizationRequestWithContext:completionHandler:
_prepareForAuthorizationRequestsForContext:clientConnection:withPresentationHandler:
hasRunningPublicKeyCredentialOperation
cancelCurrentOperationIfNecessaryWithOverrideError:
_authorizationCompletedWithCredential:error:
_isAuthenticationConfiguredForPlatformPublicKeyRequestWithError:
safari_applicationRecordForConnectedProcess
applicationIdentifier
_isClientWithApplicationIdentifier:properlyEntitledForRequestContext:error:
_configureAppleIDCredentialwithCompletionHandler:
_configurePasswordCredentialsWithCompletionHandler:
array
_configurePublicKeyCredentialsWithAssertionOptions:completionHandler:
setDelegateCancellingCurrentOperation:
beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:
_hasSignInOptionsForRequestTypes:
localizedStringWithFormat:
_credentialRequestedForPasswordLoginChoice:completionHandler:
_credentialRequestedForPlatformLoginChoice:authenticatedContext:
_credentialRequestedForSecurityKeyLoginChoice:
_credentialRequestedForCABLELoginChoice:
setHandler:
_clientHasNecessaryAuthKitEntitlements
_bundleIDfromAppID:
_performAuthKitAuthorizationValidation
getCredentialStateForClientID:completion:
clearAllCredentials
auditToken
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
getCredentialsForAppWithAppID:completionHandler:
beginAssertionsWithOptions:
_allAvailableLoginChoicesForRequestContext:
countByEnumeratingWithState:objects:count:
primaryAuthKitAccount
username
formattedUsernameFromUsername:
initWithUsername:site:externalCredentialIdentity:
externalCredential
count
addObjectsFromArray:
initAssertionPlaceholderChoice
_shouldAddCABLEChoiceForRequestContext:
initWithDelegate:
qrCodeURL
initWithQRCodeURL:
_configureLoginChoicesForPresentationContext:withRequestContext:
_hasAnyCredentialsAvailableForRequestTypes:
_clientHasAuthKitDeveloperEntitlement
_clientIsAuthKitOwner
_clientIsInternalAuthKit
_clientIsPrivateAuthKit
valueForEntitlement:
firstObject
safari_bundleIdentifierFromApplicationIdentifier:
setAuthkitAccount:
setAuthorizationRequest:
canPerformAuthorizationRequest:error:
_isClientEntitledWebBrowser
initWithServiceType:applicationIdentifier:domain:
serviceDetailsWithServiceSpecifier:error:
isApproved
stringWithFormat:
userSelectedLoginChoice:authenticatedContext:completionHandler:
createNewPlatformCredentialWithOptions:authenticatedContext:
assertUsingPlatformCredentialForLoginChoice:authenticatedContext:
assertUsingSecurityKeyCredentialForLoginChoice:
performAuthenticationOperation:forRelyingPartyIdentifier:completionHandler:
initWithCaBLEURL:error:
finishTransactionWithCredential:error:
startWithCompletionHandler:
dismiss
cancelIfNecessary
encodeMakeCredentialCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCommandWithOptions:authenticatorUserVerificationAvailability:
encodeGetAssertionCTAPCommandForAuthenticatorWithUserVerificationAvailability:
encodeMakeCredentialCTAPCommandForAuthenticatorWithUserVerificationAvailability:
cableClientWillConnect:
cableClientWillAuthenticate:
didFetchPlatformLoginChoices:
didFetchSecurityKeyLoginChoices:
didCompleteRegistrationWithCredential:error:
didCompleteAssertionWithCredential:error:
requestPINWithRemainingRetries:completionHandler:
didReceiveError:
authorizationPresenter:credentialRequestedForLoginChoice:authenticatedContext:completionHandler:
authorizationPresenter:validateUserEnteredPIN:completionHandler:
authorizationPresenter:startCABLEAuthenticationWithCompletionHandler:
_authorizationTrafficController
_existingAppleIDCredentialAvailableForLogIn
_passwordCredentials
_requestContext
_clientApplicationIdentifier
_requestPresenter
_authorizationCompletionHandler
_platformLoginChoices
_securityKeyLoginChoices
_didLoadPlatformCredentialsCallback
_userEnteredPINCallback
_pinResultCallback
_cableClient
_didStartCABLEClient
_cableAuthenticationURL
_cableAuthenticator
dismissWithError:
_initWithKind:name:displayName:userHandle:
numberWithInteger:
integerValue
initRegistrationChoice
_credentialKind
Tq,R,N,V_credentialKind
decodeIntegerForKey:
encodeInteger:forKey:
initWithKind:relyingPartyIdentifier:challenge:userVerificationPreference:allowedCredentials:
initWithKind:relyingPartyIdentifier:clientDataHash:userVerificationPreference:allowedCredentials:
allowedCredentials
_allowedCredentials
TQ,R,N,V_credentialKind
T@"NSData",R,C,N,V_challenge
T@"NSString",R,C,N,V_userVerificationPreference
T@"NSArray",R,C,N,V_allowedCredentials
_isPresentationContextValid:error:
archivedDataWithRootObject:requiringSecureCoding:error:
anonymousListener
initWithServiceName:viewControllerClassName:
endpoint
_endpoint
setXpcEndpoint:
setUserInfo:
newHandleWithDefinition:configurationContext:
registerObserver:
addObserver:
activateWithContext:
_performQueuedUpdatesIfNecessary
_invalidateWithError:
_isErrorDueToNewAlertHandleRequest:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
delegate
_remoteListener
_credentialResultHandler
_remoteAlertHandle
_invalidationQueue
_viewServiceConnection
_viewServiceProxy
_interfaceUpdateQueue
_loginChoicesForQueuedUpdate
_hasQueuedPINEntryInterfaceRequest
_hasQueuedCABLEClientWillConnectRequest
_hasQueuedCABLEClientWillAuthenticateRequest
_delegate
T@"<ASCAuthorizationPresenterDelegate>",W,N,V_delegate
owningExtensionState
credentialIdentityStoreIdentifier
externalCredentialIdentity
providerBundleIdentifier
_username
_externalCredentialIdentity
_providerBundleIdentifier
T@"NSString",R,C,N,V_username
T@"NSString",R,C,N,V_site
external
TB,R,N,GisExternal
T@"SFPasswordCredentialIdentity",R,N,V_externalCredentialIdentity
T@"NSString",R,C,N,V_providerBundleIdentifier
_qrCodeURL
T@"NSURL",R,C,N,V_qrCodeURL
URLSession:webSocketTask:didOpenWithProtocol:
URLSession:task:didCompleteWithError:
URLSession:task:didReceiveChallenge:completionHandler:
sharedSession
webSocketTaskWithRequest:
cancelWithCloseCode:reason:
protectionSpace
authenticationMethod
serverTrust
initWithTrust:
URLSession:webSocketTask:didCloseWithCode:reason:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
connection:didReceivePublicToken:
connection:didReceiveIncomingMessage:
userInfo
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
ephemeralSessionConfiguration
sessionWithConfiguration:
setFidoPayloadData:
activateWithCompletion:
initWithPushTopic:protoData:
setCompletionBlock:
sendMessage:
protoResponse
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
centralManagerDidUpdateState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
stopScan
first
second
UUIDWithData:
scanForPeripheralsWithServices:options:
centralManager:willRestoreState:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
cborWithUTF8String:
cborWithData:
decodeFromData:
cborWithDictionary:
dictionary
cborWithInteger:
string
data
initWithBase64EncodedString:options:
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
@24@0:8^{_NSZone=}16
@16@0:8
v16@0:8
@"NSData"
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@"NSError"16@"NSString"24@?<v@?>32
v24@0:8@"NSArray"16
v24@0:8@"NSError"16
v32@0:8@"ASCAuthorizationPresentationContext"16@?<v@?@"<ASCCredentialProtocol>"@"NSError">24
v40@0:8@"<ASCLoginChoiceProtocol>"16@"LAContext"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v40@0:8@"<ASCCredentialProtocol>"16@"NSError"24@?<v@?>32
v32@0:8@"NSString"16@?<v@?@"<ASCCredentialProtocol>"@"NSError">24
v24@0:8@?<v@?@"ASCAuthorizationPresentationContext"@"NSError">16
@24@0:8Q16
v20@0:8B16
@"NSString"
@"ASCPublicKeyCredentialCreationOptions"
@"ASCPublicKeyCredentialAssertionOptions"
@"AKAuthorizationRequest"
@"NSNumber"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"<ASPublicKeyCredentialManagerInterface>"
v24@0:8@"ACAccount"16
@"NSObject<OS_dispatch_queue>"
@"ACMonitoredAccountStore"
@"OTClique"
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24@32
@"AKAuthorization"
@36@0:8@16@24B32
@28@0:8@16B24
@"NSMutableArray"
@"NSURL"
q16@0:8
@52@0:8B16@20@28@36@44
@48@0:8@16@24@32@40
@"NSDate"
v32@0:8@"ASCCredentialRequestContext"16@?<v@?@"<ASCCredentialProtocol>"@"NSError">24
v24@0:8@?<v@?>16
v24@0:8@?<v@?B>16
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
@24@0:8@?16
@"NSXPCConnection"
@"ASCWebAuthenticationExtensionsClientInputs"
@"NSMutableSet"
@"WBSPair"24@0:8Q16
v24@0:8@"_TtC26AuthenticationServicesCore13ASCABLEClient"16
v32@0:8@16@24
v32@0:8Q16@?24
v24@0:8q16
v32@0:8@"<ASCCredentialProtocol>"16@"NSError"24
v32@0:8Q16@?<v@?@"NSString">24
v48@0:8@16@24@32@?40
v48@0:8@"ASCAuthorizationPresenter"16@"<ASCLoginChoiceProtocol>"24@"LAContext"32@?<v@?@"<ASCCredentialProtocol>"@"NSError">40
v40@0:8@"ASCAuthorizationPresenter"16@"NSString"24@?<v@?@"<ASCCredentialProtocol>"@"NSError">32
v32@0:8@"ASCAuthorizationPresenter"16@?<v@?@"ASCAuthorizationPresentationContext"@"NSError">24
B24@0:8^@16
B24@0:8Q16
B40@0:8@16@24^@32
@"ASCAuthorizationTrafficController"
@"ASCCredentialRequestContext"
@"ASCAuthorizationPresenter"
@"_TtC26AuthenticationServicesCore13ASCABLEClient"
@"_TtC26AuthenticationServicesCore20ASCABLEAuthenticator"
@48@0:8q16@24@32@40
@56@0:8Q16@24@32@40@48
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
B32@0:8@16^@24
@"SBSRemoteAlertHandle"
@"<ASCViewServiceProtocol>"
@"<ASCAuthorizationPresenterDelegate>"
q24@0:8@16
@"SFPasswordCredentialIdentity"
.com
.org
.net
.info
FIDO_2_0
,)72R<
fido.cable
fido.cable
