T@"NSString",&,N,V_calendarName
CalDAVSubscribedCalendarsKey
T@"SubCalAccount",&,N,V_account
T#,R
T@"<SubCalICSDataCallbackActor>",W,N,V_callbackTarget
_createCalendar
T@"<SubCalWebcalHandlerConsumer>",W,N,V_consumer
_prepareForSave
T@"DATrustHandler",R,N
_setLastRefreshDate:inCalendar:
T@"EKEventStore",R,N,V_eventStore
account
T@"NSObject<OS_dispatch_queue>",R,N,V_actorQueue
backgroundActor
T@"NSString",&,N,V_calendarExternalId
clearTmpICSData
T@"NSString",&,N,V_colorString
containsObject:
T@"NSString",&,N,V_password
dealloc
T@"NSString",&,N,V_username
initWithFormat:
T@"NSString",C,N,V_migrateCalendarExternalID
interfaceWentUp
T@"NSString",C,N,V_urlString
isProxy
T@"NSString",R,N
modTagForSubCal
T@"SubCalICSDataActor",&,N,V_backgroundActor
processICSData:
TB,N,V_allowInsecureConnection
renewCredential
TB,N,V_clearChanges
saveAccountPropertiesWithError:
TB,N,V_haveShownSubscribeAlert
setIsHolidaySubscribedCalendar:
TB,N,V_holdingGateKeeperLock
setStripAlarms:
TB,N,V_isHolidaySubscribedCalendar
shouldSubscribeThroughMobileCal
TB,N,V_isSyncedHolidayCalendar
startMonitoring
TB,N,V_removeAttachments
subscriptionURL
TB,N,V_usingTmpICSData
usingTmpICSData
.cxx_destruct
T@"NSURL",&,N,V_subscriptionURL
ICSStringWithOptions:
TB,N,V_updateCalendarProperties
T@"<SubCalDaemonAccountDelegate>",W,N,V_delegate
_callbackTarget
T@"<SubCalRefreshTaskDelegate>",&,N,V_delegate
_gatherExistingEventsInCalendar:uidToEventMap:uidToExternalIDs:
T@"CalDAVCalendarSearchTask",&,N,V_searchTask
_reallyRefresh:
T@"EKCalendar",R,N,V_calendar
_showAuthPrompt
T@"NSData",&,N,V_tmpICSData
allKeys
T@"NSString",&,N,V_accountId
calendarWithExternalIdentifier:
T@"NSString",&,N,V_changeTrackingId
commit:
T@"NSString",&,N,V_migrateCalendarExternalID
containsString:
T@"NSString",&,N,V_sourceExternalId
identityPersist
T@"NSString",C,N,V_calendarExternalId
initWithString:
T@"NSString",C,N,V_sourceExternalId
isAuthenticated
T@"NSString",R,C
lowercaseString
T@"NSTimer",&,N,V_refreshTimer
payloadAsString
T@"SubCalURLRequest",&,N,V_request
release
TB,N,V_canTryHTTP
request
TB,N,V_forceRefresh
setColorString:
TB,N,V_haveTriedHTTP
setRefreshDate:
TB,N,V_isChinaHolidayCalendar
shouldRefreshSubCalForCalendar:
TB,N,V_isSpinning
startConnection
TB,N,V_removeAlarms
subcalAccountID
TB,N,V_shouldCancel
userAgentHeader
TB,N,V_waitingForGateKeeper
TB,R,N,V_clearChanges
TB,R,N,V_forcedRefresh
TB,R,N,V_removeAlarms
TB,R,N,V_removeAttachments
TI,N,V_numProgressCallbacks
TQ,R
Td,N,V_timestamp
Ti,N,V_calendarId
URLWithString:
_account
_accountId
_acquireGatekeeperLockAndPerformBlock:
_actorQueue
_allowInsecureConnection
_backgroundActor
_beginAccountSetupWithSubscriptionAtHost:
_calendar
_calendarExistsOnParent
_calendarExternalId
_calendarId
_calendarName
_canTryHTTP
_changeTrackingId
_clearChanges
_colorString
_consumer
_createCalendarInStore:needsCommit:
_delegate
_dropGateKeeperAndUpdateSubscribedCalendarWithDataFromNetwork
_eventStore
_existingAccountLikeAccount:
_fetchUpdatedSubscriptionURL
_finishWithErrorAfterLoadingURL:
_forceRefresh
_forcedRefresh
_gatherAddedEventsFromDocument:existingEventExternalIDs:existingEventUIDs:eventsToRemove:
_handleCalendarSearchResults:
_hasCorrectLocaleInCalendar:
_haveShownSubscribeAlert
_haveTriedHTTP
_holdingGateKeeperLock
_holidayCalendarInEventStore:
_initializeCalendarDatabase
_internalProcessICSData:
_isChinaHolidayCalendar
_isHolidaySubscribedCalendar
_isSpinning
_isSyncedHolidayCalendar
_lastRefreshDate
_lastRefreshDateInCalendar:
_localeDidChange:
_lockedPrepareToPerformBlock:
_makeBackgroundActor
_migrateCalendarExternalID
_newAccountWithHost:
_numProgressCallbacks
_password
_processICSData:
_processICSDataFromFile:
_processICSDataHoldingGatekeeperLock:
_processICSDocument:icsData:calendar:digest:
_reallyProcessICSData:withCalendar:withDigest:
_reallyRemoveHolidaySubscribedCalendar
_receiveAuthPrompt:notification:
_receiveInvalidAccount:
_receiveSubscribeAccount:
_receiveWhereTo:
_refresh:
_refreshTimer
_refreshTimerFired:
_removeAlarms
_removeAttachments
_removeHolidaySubscribedCalendar
_request
_saveAccount
_saveHolidayCalMetadata
_searchTask
_sendResultToCallbackActor:
_setCurrentLanguageAndLocaleInCalendar:
_setSpinning:
_shouldCancel
_showInvalidAccount
_showMatchingAccountAlertForAccount:
_showSSLFailureAlert
_showSubscribeAccount
_showWhereTo
_sourceExternalId
_sslFailureAlertReceived:
_subscriptionURL
_syncEndedWithError:
_syncStarted
_tearDownRefreshTimer
_tellConsumerWereFinished
_timestamp
_tmpICSData
_unregisterForNotifications
_updateCalendarProperties
_updateSubCalWithICSDocument:data:calendar:digest:error:
_updateSubscribedCalendarWithTmpICSData:
_urlString
_username
_usingTmpICSData
_waitingForGateKeeper
absoluteString
account:isValid:validationError:
accountDescription
accountDidCompleteRefresh:withError:
accountID
accountId
accountTypeWithAccountTypeIdentifier:
actorQueue
addObject:
addObserver:selector:name:object:
addPendingAccountSetup
addTimer:forMode:
additionalHeaderValues
allObjects
allTasks
allowInsecureConnection
appendString:
array
arrayWithObjects:count:
autorelease
autoupdatingCurrentLocale
backingAccountInfo
calDAVURLPath
calendar
calendarDescription
calendarExternalId
calendarId
calendarName
calendarWithExternalID:
callbackTarget
canTryHTTP
cancel
cancelAllTasks
changeTrackingID
changeTrackingId
checkValidityOnAccountStore:withConsumer:inQueue:
claimedOwnershipOfDataclasses:
class
clearChanges
clientCertificateInfoProvider
clientToken
clientTokenRequestedByServer
code
colorString
colorStringRaw
commitWithRollback:
compare:options:
compare:options:range:
componentForKey:
componentKeys
componentOccurrencesForKey:
componentsWithURL:resolvingAgainstBaseURL:
conformsToProtocol:
consumer
copy
copyStorageSession
count
countByEnumeratingWithState:objects:count:
currentHandler
customConnectionProperties
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_removeSlashIfNeeded
date
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultCenter
defaultManager
defaultWorkspace
delegate
delegateDidCompleteRefresh:
description
dictionaryWithExternalRepresentationData:
dictionaryWithObject:forKey:
distantPast
domain
doubleValue
dropAssertionsAndRenewCredentialsInQueue:withHandler:
error
errorWithDomain:code:userInfo:
eventStore
eventStoreWithClientId:
eventsMatchingPredicate:
externalID
externalIDForICSEvent:
externalModificationTag
externalRepresentation
externalRepresentationDataWithDictionary:
fetchInterval
filePath
finishWithError:
finished
forceRefresh
forcedRefresh
getAppleIDSession
getDAAccount
handleAuthenticateAgainstProtectionSpace:
handleCertificateError:
handleFailureInMethod:object:file:lineNumber:description:
handleShouldUseCredentialStorage
handleTrustChallenge:completionHandler:
handleTrustChallenge:forSubCalURLRequest:
handleTrustChallenge:forSubCalURLRequest:completionHandler:
handleTrustChallenge:forTask:
handleTrustChallenge:forTask:completionHandler:
handleWebcalURL:
handleWebcalURLString:withConsumer:
hasPrefix:
hasSubscribedCalendarAtURL:
hash
haveShownSubscribeAlert
haveTriedHTTP
holdingGateKeeperLock
holidayCalendarRefreshInterval
holidayCalendarURL
host
ical_digest
icsString
identifier
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
init
initWithAccount:
initWithAccountType:
initWithArray:
initWithBackingAccountInfo:
initWithCapacity:
initWithContentsOfMappedFile:
initWithData:options:error:
initWithEKOptions:
initWithLanguages:location:calendarType:url:
initWithSourceId:calendarId:migrateCalendarExternalID:changeTrackingID:removeAlarms:removeAttachments:forcedRefresh:clearChanges:callbackTarget:
initWithURL:wasUserRequested:
initializeCalendarWithExternalId:inSource:needsSave:error:
initializeSourceWithExternalId:inStore:needsSave:error:
intValue
interfaceWentDown
invalidate
isBadPasswordError:
isChinaHolidayCalendar
isEqual:
isEqualToData:
isEqualToSet:
isEqualToString:
isHolidaySubscribedCalendar
isKindOfClass:
isManagedCalendar
isMemberOfClass:
isMonitoring
isShutdown
isSpinning
isSubCalAuthError
isSubCalReachabilityError
isSubCalURLString
isSubscribedHolidayCalendar
isSyncedHolidayCalendar
language
lastHolidayLanguageFromDictionary:
lastHolidayRegionFromDictionary:
lastSyncTitle
length
mainRunLoop
markChangedObjectIDsConsumedUpToToken:
migrateCalendarExternalID
migrationVersion
monitorFoldersWithIDs:
mutableCopy
noteFailedNetworkRequest
noteFailedNetworkRequestForTask:
noteFailedProtocolRequest
noteFailedProtocolRequestForTask:
noteHomeSetOnDifferentHost:
noteSuccessfulRequestWithNumDownloadedElements:
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteTimeSpentInNetworking:
noteTimeSpentInNetworking:forTask:
numProgressCallbacks
numberWithDouble:
numberWithUnsignedInteger:
oauthInfoProvider
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
objectID
observeReachabilityWithBlock:
onBehalfOfBundleIdentifier
openSensitiveURL:withOptions:
operationToOpenResource:usingApplication:userInfo:
originalItem
outstandingSetupRequests
parentAccount
password
performDelegateCallbackWithError:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
performTask
port
predicateForEventsInSubscribedCalendar:
preferredLanguages
principalPath
principalURL
processICSDataAtPath:removeFileWhenDone:
promptUserForNewCoreDAVPasswordWithCompletionBlock:
publicDescription
pushDisabled
quickValidate:
rangeOfString:
rank
recurrence_id
refreshAllCalendars:
refreshCollections:withReason:
refreshTimer
region
registerAccount:forOperationWithName:
registerDelegate:
registerWaiter:forDataclassLocks:completionHandler:
relativePath
relinquishLocksForWaiter:dataclasses:moreComing:
removeAlarms
removeAttachments
removeCalendar:commit:error:
removeEvent:span:commit:error:
removeItemAtPath:error:
removeObject:
removeObjectsInArray:
removeObserver:name:object:
removePendingAccountSetup
removeServerRefreshRelatedPropertiesForSelfAndAllEventsSaveAndCommitWithError:
requestAgentStopMonitoringWithCompletionBlock:
respondsToSelector:
retain
retainCount
rowID
saveAccountProperties
saveCalendar:commit:error:
saveSource:commit:error:
saveTmpICSData
saveXpcActivity:
scheduleIdentifier
scheme
searchTask
self
serverComplianceClasses
serverRoot
serverTokenRegistrationURL
setAccount:
setAccountDescription:
setAccountId:
setAccountInfoProvider:
setAllowInsecureConnection:
setAuthenticated:
setBackgroundActor:
setCalendarExternalId:
setCalendarId:
setCalendarName:
setCallbackTarget:
setCanTryHTTP:
setChangeTrackingId:
setChinaHolidayCalendar:
setClearChanges:
setColorStringRaw:
setCompletionBlock:
setComponents:options:
setConsumer:
setDelegate:
setDigest:
setEnabled:forDADataclass:
setExternalID:
setExternalModificationTag:
setExternalRepresentation:
setForceRefresh:
setHaveShownSubscribeAlert:
setHaveTriedHTTP:
setHoldingGateKeeperLock:
setHost:
setIsChinaHolidayCalendar:
setIsMonitoring:
setIsSpinning:
setIsSyncedHolidayCalendar:
setLastHolidayLanguage:inDictionary:
setLastHolidayRegion:inDictionary:
setLastSyncTitle:
setLocale:
setMigrateCalendarExternalID:
setMigrationVersion:
setNumProgressCallbacks:
setObject:forKeyedSubscript:
setPassword:
setPort:
setPrincipalPath:
setRefreshTimer:
setRemoveAlarms:
setRemoveAttachments:
setRequest:
setScheme:
setSearchTask:
setShouldCancel:
setSourceExternalId:
setStatusReport:
setStripAttachments:
setSubCalHandlers:
setSubcalAccountID:
setSubcalURL:
setSubscribedHolidayCalendar:
setSubscriptionURL:
setSyncWhenReachable:
setSyncedHolidayCalendar:
setTimestamp:
setTitle:
setTmpICSData:
setUpdateCalendarProperties:
setUrlString:
setUseFileCache:
setUseSSL:
setUsername:
setUsingTmpICSData:
setWaitingForGateKeeper:
setWasUserInitiated:
sharedBabysitter
sharedGateKeeper
sharedManager
sharedRunLoop
shouldCancel
shouldCompressRequests
shouldFailAllTasks
shouldForceHTTPS
shouldHandleHTTPCookiesForURL:
shouldRemoveAlarms
shouldRemoveAttachments
shouldRetryUnauthorizedTask:
shouldSendClientInfoHeaderForURL:
shouldTryRenewingCredential
shouldTurnModalOnBadPassword
shouldUseOpportunisticSockets
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
sourceExternalId
sourceWithExternalID:
start
stateString
statusReport
stopMonitoringFolders
stopObservingReachability
stringByReplacingPercentEscapesUsingEncoding:
stringWithFormat:
stripAlarms
stripAttachments
subCalHandlers
subCalICSDataActor:completedWithError:
subCalRefreshTask:didRedirectToURL:
subCalRefreshTask:finishedWithError:
subCalRefreshTask:needsUsernamePasswordForHost:continuation:
subCalURLRequest:didRedirectToURL:
subCalURLRequest:finishedWithData:error:
subCalURLRequest:updatedData:
subCalURLRequestNeedsUsernameAndPasswordForHost:continuation:
subCalWebcalHandlerFinishedSetup:
subcalURL
submitIndependentTask:
submitQueuedTask:
subscriptionURLToUse
superclass
syncEndedForCalendarWithExternalID:sourceExternalID:withError:
syncFolderIDs:forDataclasses:isUserRequested:
syncStartedForCalendarWithExternalID:sourceExternalID:
synchronouslyCancel
taskManager
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timerWithTimeInterval:target:selector:userInfo:repeats:
timestamp
title
tmpICSData
transactionId
trustHandler
uniqueID
unlocalizedTitle
unregisterAccount:forOperationWithName:
unregisterDelegate:
unregisterWaiterForDataclassLocks:
updateCalendarProperties
updateSubscribedCalendarRefreshDateOnly
urlString
urlsToResults
useSSL
user
username
value
waiterID
waitingForGateKeeper
wasUserInitiated
watchedCollections
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
willFinish
x_apple_language
x_apple_region
zone
SubCalRefreshTask.m
We should never process ICS Data while waiting on a previous processICSData call
Error Code
SubCalRefresh
v20@?0q8B16
v8@?0
https
WTF? don't try and make a new request before cleaning up the old one
com.apple.dataaccessd-%@
.icloud.com/holidays/cn_zh.ics
v24@?0q8@"NSError"16
SubCalICSDataActorErrorDomain
com.apple.dataaccess.subcal.actor
%@-%@
%@/%@
calshow:%d
v24@?0^{__CFUserNotification=}8Q16
Validated
Could not validate
v24@?0@"NSArray"8@"NSError"16
calsubcal:
Holiday
Holiday account
current region = %@
current language = %@
subscribed path = %@
Can't find source with id %@: %@
Migrated calendar already exists when migrating from external ID %@ to external ID %@. Using the existing migrated calendar
Updating calendar properties for calendar with id %@ even though we weren't asked to because we created the calendar.
Failed to save source to event store with error: %@
Failed to save calendar to event store with error: %@
Failed to initialize the calendar database: %@
DATransaction starting, ID: %@
Grabbing gatekeeper lock before processing the data for the subscribed calendar at %@
%@ (%@) got my lock for dataclasses 0x%lx
Got lock for %ld something other than events?!
%@ Aborting processing subcal data because this task is already finished
Relinquishing locks now
%@ aborted locks for dataclasses 0x%lx
New account! attempting to create calendar from tmp ics data
Refresh failed using https; replacing error %@ with kSubCalInsecureConnectionNotAllowed.
Failed to save refresh date for calendar: %@
Couldn't find calendar for account %{public}@ to save refresh date
Waiting for ICS data actor to tear down...
Data actor queue is clean. Continuing with teardown
The babysitter put us in timeout. Failing this sync
Error processing tmp ics data %@
Telling springboard to set the spinner to %@ for identifier %@
Finished telling springboard to set the spinner to %@ for identifier %@
%@ asked to start monitoring
%@ asked to stop monitoring
Ignoring refresh for calendar %@ because it is managed by a CalDAV server
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account %@ couldn't reach the server. Monitoring for reachability.
Ignoring request, already refreshing account with ID %@
The parent account doesn't know about the subscribed calendar at %@ (account %@). Skipping refresh.
Refreshing Subscribed Calendar account with ID %{public}@
Should Refresh SubCal For Calendar: %@, color: %{public}@
Error: Could not save calendar when removing externalModificationTag and related properties. Error: %{public}@
Error: Could not save calendar when setting migrationVersion. Error: %{public}@
Refresh completed for account with ID %{public}@ with error %@
The server for account "%@" (%{public}@) returned a 410 status code, which means this calendar is gone gone gone. Disabling calendars for this account.
Got a bad password error; marking account ad unauthenticated: "%@" (%{public}@)
Refresh completed for account with ID %{public}@
Account "%@" (%{public}@) successfully refreshed using https; updating the account
Account "%@" (%{public}@) was marked as unauthenticated but refreshed successfully. Marking it as authenticated.
Account "%@" (%{public}@) was redirected to "%@"
Refreshing all calendars
%@ asked to monitor these folders: %@
%@ asked to stop monitoring folders
Beginning import into calendar %@ (%{public}@). Will add/update %lu events and delete %lu events.
Importing subscribed calendar events failed
Error removing event (summary=%@, externalID=%{public}@ uniqueID=%{public}@): %@
Error committing removal batch: %@
Saving timestamp %@ as external tag
Dropping detached occurrence of %{public}@ without recurrence id
Failed to init ICS document with given data. Error: %@
Processing ics calendar
Did not get a valid ics calendar
Done processing ics data, error: %@
%@ processing data of length %lu
Can't find source with id %@
Empty digest for calendar with id %@
Can't find calendar with external id %@
Digests are the same, not saving to db
==== SubCal: Starting processing ICS Data. Size of Data %{public}@ Bytes ====
==== SubCal: Finished processing ICS Data. CPU Time - [%{public}@secs] Size of Data %{public}@ Bytes ====
Migrating calendar externalID from %@ to %@
Error saving subscription calendar with updated refresh date (and possibly migrated ID)
Initiating EKEvent Store commit
Error committing the event store.
EKEventStore commit success.
Empty icsData passed to SubCalICSDataActor
Processing mmapped file %@
Error cleaning up file at %@
Actor queue is clear
Finished Out of band setup
User chose to go to mobile cal
User chose to stay here
%@ saving account
Failed to save subscribed calendar account: %@
Error committing EKEventStore: %@
Error initializing the EKSource with externalId: %@. Error: %@
Error saving source: %@
Error initializing the EKCalendar with externalId: %@. Error: %@
Error saving calendar: %@
Why was SubCalWebcalHandler given locks for 0x%lx ?
User chose to subscribe to new account
User chose not to subscribe to new account
User responded to invalid account alert
User chose not to input auth for account
%@ account for host %@ %@
User chose to try connecting without SSL
User chose not to try connecting without SSL
Ignoring webcal setup of outstanding URL %@
Could not retrieve Language or Region for the Holiday Calendar AccountID %{public}@ with Subscription-URL %{public}@
Language mismatch. currentLanguage = %@ | existingLanguage = %@
Region mismatch. currentRegion = %@ | existingRegion = %@
Removing nil calendar in _reallyRemoveHolidaySubscribedCalendar
Could not remove calendar from store. Error: %@
DATransaction starting, ID: %{public}@
Couldn't get a gatekeeper lock in order to remove the holiday subscribed calendar.
Found the following holiday calendars: %{public}@.
Searching for a calendar that matches %{public}@/%{public}@
Removing %{public}@, since our locale is %{public}@
Matching subscription URL found at %{public}@
Couldn't find any matching subscription calendars. Removing the one we have
Error when saving holiday calendar account properties. Error = %@
Couldn't find a holiday calendar URL. Cleaning up.
Fetching an updated subscription URL from %{public}@. Current locale is %{public}@ and language is %{public}@. Request is %{public}@
Error fetching subscribed holiday calendars. Giving up for now. %@
The existing calendar has the correct locale. Continuing with our refresh
Skipping holiday calendar refresh because we last refreshed it at %{public}@, less than our refresh interval of %f
Couldn't get a gatekeeper lock in order to refresh the holiday subscribed calendar.
Setting last holiday calendar refresh time to %{public}@
Saving current locale (%{public}@) and language (%{public}@)
Holiday Calendar not found in _saveHolidayCalMetadata:
Event Store commit failed with error: %@
Couldn't get a gatekeeper lock in order to save the last holiday calendar refresh date.
Refresh timer fired.
The current locale changed. Refreshing our holiday calendar
SubCalRefreshTask
SubCalURLRequestDelegate
NSObject
SubCalICSDataCallbackActor
DADataclassLockWatcher
DABabysittable
SubCalExtras
SubCalAgent
DARefreshManagerDelegate
SubCalDaemonAccountDelegate
SubCalDaemonAccount
SubCalICSDataActor
SubCalWebcalHandler
DAValidityCheckConsumer
HolidayCalDaemonAccount
CoreDAVAccountInfoProvider
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24@?<v@?q@"NSURLCredential">32
v40@0:8@"SubCalURLRequest"16@"NSData"24@"NSError"32
v32@0:8@"SubCalURLRequest"16@"NSData"24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString">24
v32@0:8@"SubCalURLRequest"16@"NSURL"24
v32@0:8@"SubCalICSDataActor"16@"NSError"24
v16@0:8
v24@0:8@?16
v24@0:8@16
v20@0:8B16
d16@0:8
v24@0:8d16
@"<SubCalRefreshTaskDelegate>"
@"NSURL"
@"NSString"
@"NSData"
@"SubCalICSDataActor"
@"SubCalURLRequest"
v28@0:8@16i24
q16@0:8
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v32@0:8@"SubCalDaemonAccount"16@"NSError"24
v36@0:8@16q24B32
@"<SubCalDaemonAccountDelegate>"
@24@0:8@16
@72@0:8@16@24@32@40B48B52B56B60@64
B56@0:8@16@24@32@40^@48
v40@0:8@16^@24^@32
@48@0:8@16@24@32^@40
@48@0:8@16@24@32@40
@40@0:8@16@24@32
v28@0:8@16B24
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@"<SubCalICSDataCallbackActor>"
@"EKEventStore"
@"EKCalendar"
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v24@0:8Q16
v32@0:8@16^B24
v32@0:8Q16^{__CFUserNotification=}24
i16@0:8
v20@0:8i16
@"SubCalAccount"
@"<SubCalWebcalHandlerConsumer>"
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
@"NSDate"
@"NSTimer"
@"CalDAVCalendarSearchTask"
T@"NSString",&,N,V_calendarName
CalDAVSubscribedCalendarsKey
T@"SubCalAccount",&,N,V_account
T#,R
T@"<SubCalICSDataCallbackActor>",W,N,V_callbackTarget
_createCalendar
T@"<SubCalWebcalHandlerConsumer>",W,N,V_consumer
_prepareForSave
T@"DATrustHandler",R,N
_setLastRefreshDate:inCalendar:
T@"EKEventStore",R,N,V_eventStore
account
T@"NSObject<OS_dispatch_queue>",R,N,V_actorQueue
backgroundActor
T@"NSString",&,N,V_calendarExternalId
clearTmpICSData
T@"NSString",&,N,V_colorString
containsObject:
T@"NSString",&,N,V_password
dealloc
T@"NSString",&,N,V_username
initWithFormat:
T@"NSString",C,N,V_migrateCalendarExternalID
interfaceWentUp
T@"NSString",C,N,V_urlString
isProxy
T@"NSString",R,N
modTagForSubCal
T@"SubCalICSDataActor",&,N,V_backgroundActor
processICSData:
TB,N,V_allowInsecureConnection
renewCredential
TB,N,V_clearChanges
saveAccountPropertiesWithError:
TB,N,V_haveShownSubscribeAlert
setIsHolidaySubscribedCalendar:
TB,N,V_holdingGateKeeperLock
setStripAlarms:
TB,N,V_isHolidaySubscribedCalendar
shouldSubscribeThroughMobileCal
TB,N,V_isSyncedHolidayCalendar
startMonitoring
TB,N,V_removeAttachments
subscriptionURL
TB,N,V_usingTmpICSData
usingTmpICSData
.cxx_destruct
T@"NSURL",&,N,V_subscriptionURL
ICSStringWithOptions:
TB,N,V_updateCalendarProperties
T@"<SubCalDaemonAccountDelegate>",W,N,V_delegate
_callbackTarget
T@"<SubCalRefreshTaskDelegate>",&,N,V_delegate
_gatherExistingEventsInCalendar:uidToEventMap:uidToExternalIDs:
T@"CalDAVCalendarSearchTask",&,N,V_searchTask
_reallyRefresh:
T@"EKCalendar",R,N,V_calendar
_showAuthPrompt
T@"NSData",&,N,V_tmpICSData
allKeys
T@"NSString",&,N,V_accountId
calendarWithExternalIdentifier:
T@"NSString",&,N,V_changeTrackingId
commit:
T@"NSString",&,N,V_migrateCalendarExternalID
containsString:
T@"NSString",&,N,V_sourceExternalId
identityPersist
T@"NSString",C,N,V_calendarExternalId
initWithString:
T@"NSString",C,N,V_sourceExternalId
isAuthenticated
T@"NSString",R,C
lowercaseString
T@"NSTimer",&,N,V_refreshTimer
payloadAsString
T@"SubCalURLRequest",&,N,V_request
release
TB,N,V_canTryHTTP
request
TB,N,V_forceRefresh
setColorString:
TB,N,V_haveTriedHTTP
setRefreshDate:
TB,N,V_isChinaHolidayCalendar
shouldRefreshSubCalForCalendar:
TB,N,V_isSpinning
startConnection
TB,N,V_removeAlarms
subcalAccountID
TB,N,V_shouldCancel
userAgentHeader
TB,N,V_waitingForGateKeeper
TB,R,N,V_clearChanges
TB,R,N,V_forcedRefresh
TB,R,N,V_removeAlarms
TB,R,N,V_removeAttachments
TI,N,V_numProgressCallbacks
TQ,R
Td,N,V_timestamp
Ti,N,V_calendarId
URLWithString:
_account
_accountId
_acquireGatekeeperLockAndPerformBlock:
_actorQueue
_allowInsecureConnection
_backgroundActor
_beginAccountSetupWithSubscriptionAtHost:
_calendar
_calendarExistsOnParent
_calendarExternalId
_calendarId
_calendarName
_canTryHTTP
_changeTrackingId
_clearChanges
_colorString
_consumer
_createCalendarInStore:needsCommit:
_delegate
_dropGateKeeperAndUpdateSubscribedCalendarWithDataFromNetwork
_eventStore
_existingAccountLikeAccount:
_fetchUpdatedSubscriptionURL
_finishWithErrorAfterLoadingURL:
_forceRefresh
_forcedRefresh
_gatherAddedEventsFromDocument:existingEventExternalIDs:existingEventUIDs:eventsToRemove:
_handleCalendarSearchResults:
_hasCorrectLocaleInCalendar:
_haveShownSubscribeAlert
_haveTriedHTTP
_holdingGateKeeperLock
_holidayCalendarInEventStore:
_initializeCalendarDatabase
_internalProcessICSData:
_isChinaHolidayCalendar
_isHolidaySubscribedCalendar
_isSpinning
_isSyncedHolidayCalendar
_lastRefreshDate
_lastRefreshDateInCalendar:
_localeDidChange:
_lockedPrepareToPerformBlock:
_makeBackgroundActor
_migrateCalendarExternalID
_newAccountWithHost:
_numProgressCallbacks
_password
_processICSData:
_processICSDataFromFile:
_processICSDataHoldingGatekeeperLock:
_processICSDocument:icsData:calendar:digest:
_reallyProcessICSData:withCalendar:withDigest:
_reallyRemoveHolidaySubscribedCalendar
_receiveAuthPrompt:notification:
_receiveInvalidAccount:
_receiveSubscribeAccount:
_receiveWhereTo:
_refresh:
_refreshTimer
_refreshTimerFired:
_removeAlarms
_removeAttachments
_removeHolidaySubscribedCalendar
_request
_saveAccount
_saveHolidayCalMetadata
_searchTask
_sendResultToCallbackActor:
_setCurrentLanguageAndLocaleInCalendar:
_setSpinning:
_shouldCancel
_showInvalidAccount
_showMatchingAccountAlertForAccount:
_showSSLFailureAlert
_showSubscribeAccount
_showWhereTo
_sourceExternalId
_sslFailureAlertReceived:
_subscriptionURL
_syncEndedWithError:
_syncStarted
_tearDownRefreshTimer
_tellConsumerWereFinished
_timestamp
_tmpICSData
_unregisterForNotifications
_updateCalendarProperties
_updateSubCalWithICSDocument:data:calendar:digest:error:
_updateSubscribedCalendarWithTmpICSData:
_urlString
_username
_usingTmpICSData
_waitingForGateKeeper
absoluteString
account:isValid:validationError:
accountDescription
accountDidCompleteRefresh:withError:
accountID
accountId
accountTypeWithAccountTypeIdentifier:
actorQueue
addObject:
addObserver:selector:name:object:
addPendingAccountSetup
addTimer:forMode:
additionalHeaderValues
allObjects
allTasks
allowInsecureConnection
appendString:
array
arrayWithObjects:count:
autorelease
autoupdatingCurrentLocale
backingAccountInfo
calDAVURLPath
calendar
calendarDescription
calendarExternalId
calendarId
calendarName
calendarWithExternalID:
callbackTarget
canTryHTTP
cancel
cancelAllTasks
changeTrackingID
changeTrackingId
checkValidityOnAccountStore:withConsumer:inQueue:
claimedOwnershipOfDataclasses:
class
clearChanges
clientCertificateInfoProvider
clientToken
clientTokenRequestedByServer
code
colorString
colorStringRaw
commitWithRollback:
compare:options:
compare:options:range:
componentForKey:
componentKeys
componentOccurrencesForKey:
componentsWithURL:resolvingAgainstBaseURL:
conformsToProtocol:
consumer
copy
copyStorageSession
count
countByEnumeratingWithState:objects:count:
currentHandler
customConnectionProperties
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_removeSlashIfNeeded
date
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultCenter
defaultManager
defaultWorkspace
delegate
delegateDidCompleteRefresh:
description
dictionaryWithExternalRepresentationData:
dictionaryWithObject:forKey:
distantPast
domain
doubleValue
dropAssertionsAndRenewCredentialsInQueue:withHandler:
error
errorWithDomain:code:userInfo:
eventStore
eventStoreWithClientId:
eventsMatchingPredicate:
externalID
externalIDForICSEvent:
externalModificationTag
externalRepresentation
externalRepresentationDataWithDictionary:
fetchInterval
filePath
finishWithError:
finished
forceRefresh
forcedRefresh
getAppleIDSession
getDAAccount
handleAuthenticateAgainstProtectionSpace:
handleCertificateError:
handleFailureInMethod:object:file:lineNumber:description:
handleShouldUseCredentialStorage
handleTrustChallenge:completionHandler:
handleTrustChallenge:forSubCalURLRequest:
handleTrustChallenge:forSubCalURLRequest:completionHandler:
handleTrustChallenge:forTask:
handleTrustChallenge:forTask:completionHandler:
handleWebcalURL:
handleWebcalURLString:withConsumer:
hasPrefix:
hasSubscribedCalendarAtURL:
hash
haveShownSubscribeAlert
haveTriedHTTP
holdingGateKeeperLock
holidayCalendarRefreshInterval
holidayCalendarURL
host
ical_digest
icsString
identifier
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
init
initWithAccount:
initWithAccountType:
initWithArray:
initWithBackingAccountInfo:
initWithCapacity:
initWithContentsOfMappedFile:
initWithData:options:error:
initWithEKOptions:
initWithLanguages:location:calendarType:url:
initWithSourceId:calendarId:migrateCalendarExternalID:changeTrackingID:removeAlarms:removeAttachments:forcedRefresh:clearChanges:callbackTarget:
initWithURL:wasUserRequested:
initializeCalendarWithExternalId:inSource:needsSave:error:
initializeSourceWithExternalId:inStore:needsSave:error:
intValue
interfaceWentDown
invalidate
isBadPasswordError:
isChinaHolidayCalendar
isEqual:
isEqualToData:
isEqualToSet:
isEqualToString:
isHolidaySubscribedCalendar
isKindOfClass:
isManagedCalendar
isMemberOfClass:
isMonitoring
isShutdown
isSpinning
isSubCalAuthError
isSubCalReachabilityError
isSubCalURLString
isSubscribedHolidayCalendar
isSyncedHolidayCalendar
language
lastHolidayLanguageFromDictionary:
lastHolidayRegionFromDictionary:
lastSyncTitle
length
mainRunLoop
markChangedObjectIDsConsumedUpToToken:
migrateCalendarExternalID
migrationVersion
monitorFoldersWithIDs:
mutableCopy
noteFailedNetworkRequest
noteFailedNetworkRequestForTask:
noteFailedProtocolRequest
noteFailedProtocolRequestForTask:
noteHomeSetOnDifferentHost:
noteSuccessfulRequestWithNumDownloadedElements:
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteTimeSpentInNetworking:
noteTimeSpentInNetworking:forTask:
numProgressCallbacks
numberWithDouble:
numberWithUnsignedInteger:
oauthInfoProvider
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
objectID
observeReachabilityWithBlock:
onBehalfOfBundleIdentifier
openSensitiveURL:withOptions:
operationToOpenResource:usingApplication:userInfo:
originalItem
outstandingSetupRequests
parentAccount
password
performDelegateCallbackWithError:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
performTask
port
predicateForEventsInSubscribedCalendar:
preferredLanguages
principalPath
principalURL
processICSDataAtPath:removeFileWhenDone:
promptUserForNewCoreDAVPasswordWithCompletionBlock:
publicDescription
pushDisabled
quickValidate:
rangeOfString:
rank
recurrence_id
refreshAllCalendars:
refreshCollections:withReason:
refreshTimer
region
registerAccount:forOperationWithName:
registerDelegate:
registerWaiter:forDataclassLocks:completionHandler:
relativePath
relinquishLocksForWaiter:dataclasses:moreComing:
removeAlarms
removeAttachments
removeCalendar:commit:error:
removeEvent:span:commit:error:
removeItemAtPath:error:
removeObject:
removeObjectsInArray:
removeObserver:name:object:
removePendingAccountSetup
removeServerRefreshRelatedPropertiesForSelfAndAllEventsSaveAndCommitWithError:
requestAgentStopMonitoringWithCompletionBlock:
respondsToSelector:
retain
retainCount
rowID
saveAccountProperties
saveCalendar:commit:error:
saveSource:commit:error:
saveTmpICSData
saveXpcActivity:
scheduleIdentifier
scheme
searchTask
self
serverComplianceClasses
serverRoot
serverTokenRegistrationURL
setAccount:
setAccountDescription:
setAccountId:
setAccountInfoProvider:
setAllowInsecureConnection:
setAuthenticated:
setBackgroundActor:
setCalendarExternalId:
setCalendarId:
setCalendarName:
setCallbackTarget:
setCanTryHTTP:
setChangeTrackingId:
setChinaHolidayCalendar:
setClearChanges:
setColorStringRaw:
setCompletionBlock:
setComponents:options:
setConsumer:
setDelegate:
setDigest:
setEnabled:forDADataclass:
setExternalID:
setExternalModificationTag:
setExternalRepresentation:
setForceRefresh:
setHaveShownSubscribeAlert:
setHaveTriedHTTP:
setHoldingGateKeeperLock:
setHost:
setIsChinaHolidayCalendar:
setIsMonitoring:
setIsSpinning:
setIsSyncedHolidayCalendar:
setLastHolidayLanguage:inDictionary:
setLastHolidayRegion:inDictionary:
setLastSyncTitle:
setLocale:
setMigrateCalendarExternalID:
setMigrationVersion:
setNumProgressCallbacks:
setObject:forKeyedSubscript:
setPassword:
setPort:
setPrincipalPath:
setRefreshTimer:
setRemoveAlarms:
setRemoveAttachments:
setRequest:
setScheme:
setSearchTask:
setShouldCancel:
setSourceExternalId:
setStatusReport:
setStripAttachments:
setSubCalHandlers:
setSubcalAccountID:
setSubcalURL:
setSubscribedHolidayCalendar:
setSubscriptionURL:
setSyncWhenReachable:
setSyncedHolidayCalendar:
setTimestamp:
setTitle:
setTmpICSData:
setUpdateCalendarProperties:
setUrlString:
setUseFileCache:
setUseSSL:
setUsername:
setUsingTmpICSData:
setWaitingForGateKeeper:
setWasUserInitiated:
sharedBabysitter
sharedGateKeeper
sharedManager
sharedRunLoop
shouldCancel
shouldCompressRequests
shouldFailAllTasks
shouldForceHTTPS
shouldHandleHTTPCookiesForURL:
shouldRemoveAlarms
shouldRemoveAttachments
shouldRetryUnauthorizedTask:
shouldSendClientInfoHeaderForURL:
shouldTryRenewingCredential
shouldTurnModalOnBadPassword
shouldUseOpportunisticSockets
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
sourceExternalId
sourceWithExternalID:
start
stateString
statusReport
stopMonitoringFolders
stopObservingReachability
stringByReplacingPercentEscapesUsingEncoding:
stringWithFormat:
stripAlarms
stripAttachments
subCalHandlers
subCalICSDataActor:completedWithError:
subCalRefreshTask:didRedirectToURL:
subCalRefreshTask:finishedWithError:
subCalRefreshTask:needsUsernamePasswordForHost:continuation:
subCalURLRequest:didRedirectToURL:
subCalURLRequest:finishedWithData:error:
subCalURLRequest:updatedData:
subCalURLRequestNeedsUsernameAndPasswordForHost:continuation:
subCalWebcalHandlerFinishedSetup:
subcalURL
submitIndependentTask:
submitQueuedTask:
subscriptionURLToUse
superclass
syncEndedForCalendarWithExternalID:sourceExternalID:withError:
syncFolderIDs:forDataclasses:isUserRequested:
syncStartedForCalendarWithExternalID:sourceExternalID:
synchronouslyCancel
taskManager
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
timerWithTimeInterval:target:selector:userInfo:repeats:
timestamp
title
tmpICSData
transactionId
trustHandler
uniqueID
unlocalizedTitle
unregisterAccount:forOperationWithName:
unregisterDelegate:
unregisterWaiterForDataclassLocks:
updateCalendarProperties
updateSubscribedCalendarRefreshDateOnly
urlString
urlsToResults
useSSL
user
username
value
waiterID
waitingForGateKeeper
wasUserInitiated
watchedCollections
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
willFinish
x_apple_language
x_apple_region
zone
SubCalRefreshTask.m
We should never process ICS Data while waiting on a previous processICSData call
Error Code
SubCalRefresh
v20@?0q8B16
v8@?0
https
WTF? don't try and make a new request before cleaning up the old one
com.apple.dataaccessd-%@
.icloud.com/holidays/cn_zh.ics
v24@?0q8@"NSError"16
SubCalICSDataActorErrorDomain
com.apple.dataaccess.subcal.actor
%@-%@
%@/%@
calshow:%d
v24@?0^{__CFUserNotification=}8Q16
Validated
Could not validate
v24@?0@"NSArray"8@"NSError"16
calsubcal:
Holiday
Holiday account
current region = %@
current language = %@
subscribed path = %@
Can't find source with id %@: %@
Migrated calendar already exists when migrating from external ID %@ to external ID %@. Using the existing migrated calendar
Updating calendar properties for calendar with id %@ even though we weren't asked to because we created the calendar.
Failed to save source to event store with error: %@
Failed to save calendar to event store with error: %@
Failed to initialize the calendar database: %@
DATransaction starting, ID: %@
Grabbing gatekeeper lock before processing the data for the subscribed calendar at %@
%@ (%@) got my lock for dataclasses 0x%lx
Got lock for %ld something other than events?!
%@ Aborting processing subcal data because this task is already finished
Relinquishing locks now
%@ aborted locks for dataclasses 0x%lx
New account! attempting to create calendar from tmp ics data
Refresh failed using https; replacing error %@ with kSubCalInsecureConnectionNotAllowed.
Failed to save refresh date for calendar: %@
Couldn't find calendar for account %{public}@ to save refresh date
Waiting for ICS data actor to tear down...
Data actor queue is clean. Continuing with teardown
The babysitter put us in timeout. Failing this sync
Error processing tmp ics data %@
Telling springboard to set the spinner to %@ for identifier %@
Finished telling springboard to set the spinner to %@ for identifier %@
%@ asked to start monitoring
%@ asked to stop monitoring
Ignoring refresh for calendar %@ because it is managed by a CalDAV server
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account %@ couldn't reach the server. Monitoring for reachability.
Ignoring request, already refreshing account with ID %@
The parent account doesn't know about the subscribed calendar at %@ (account %@). Skipping refresh.
Refreshing Subscribed Calendar account with ID %{public}@
Should Refresh SubCal For Calendar: %@, color: %{public}@
Error: Could not save calendar when removing externalModificationTag and related properties. Error: %{public}@
Error: Could not save calendar when setting migrationVersion. Error: %{public}@
Refresh completed for account with ID %{public}@ with error %@
The server for account "%@" (%{public}@) returned a 410 status code, which means this calendar is gone gone gone. Disabling calendars for this account.
Got a bad password error; marking account ad unauthenticated: "%@" (%{public}@)
Refresh completed for account with ID %{public}@
Account "%@" (%{public}@) successfully refreshed using https; updating the account
Account "%@" (%{public}@) was marked as unauthenticated but refreshed successfully. Marking it as authenticated.
Account "%@" (%{public}@) was redirected to "%@"
Refreshing all calendars
%@ asked to monitor these folders: %@
%@ asked to stop monitoring folders
Beginning import into calendar %@ (%{public}@). Will add/update %lu events and delete %lu events.
Importing subscribed calendar events failed
Error removing event (summary=%@, externalID=%{public}@ uniqueID=%{public}@): %@
Error committing removal batch: %@
Saving timestamp %@ as external tag
Dropping detached occurrence of %{public}@ without recurrence id
Failed to init ICS document with given data. Error: %@
Processing ics calendar
Did not get a valid ics calendar
Done processing ics data, error: %@
%@ processing data of length %lu
Can't find source with id %@
Empty digest for calendar with id %@
Can't find calendar with external id %@
Digests are the same, not saving to db
==== SubCal: Starting processing ICS Data. Size of Data %{public}@ Bytes ====
==== SubCal: Finished processing ICS Data. CPU Time - [%{public}@secs] Size of Data %{public}@ Bytes ====
Migrating calendar externalID from %@ to %@
Error saving subscription calendar with updated refresh date (and possibly migrated ID)
Initiating EKEvent Store commit
Error committing the event store.
EKEventStore commit success.
Empty icsData passed to SubCalICSDataActor
Processing mmapped file %@
Error cleaning up file at %@
Actor queue is clear
Finished Out of band setup
User chose to go to mobile cal
User chose to stay here
%@ saving account
Failed to save subscribed calendar account: %@
Error committing EKEventStore: %@
Error initializing the EKSource with externalId: %@. Error: %@
Error saving source: %@
Error initializing the EKCalendar with externalId: %@. Error: %@
Error saving calendar: %@
Why was SubCalWebcalHandler given locks for 0x%lx ?
User chose to subscribe to new account
User chose not to subscribe to new account
User responded to invalid account alert
User chose not to input auth for account
%@ account for host %@ %@
User chose to try connecting without SSL
User chose not to try connecting without SSL
Ignoring webcal setup of outstanding URL %@
Could not retrieve Language or Region for the Holiday Calendar AccountID %{public}@ with Subscription-URL %{public}@
Language mismatch. currentLanguage = %@ | existingLanguage = %@
Region mismatch. currentRegion = %@ | existingRegion = %@
Removing nil calendar in _reallyRemoveHolidaySubscribedCalendar
Could not remove calendar from store. Error: %@
DATransaction starting, ID: %{public}@
Couldn't get a gatekeeper lock in order to remove the holiday subscribed calendar.
Found the following holiday calendars: %{public}@.
Searching for a calendar that matches %{public}@/%{public}@
Removing %{public}@, since our locale is %{public}@
Matching subscription URL found at %{public}@
Couldn't find any matching subscription calendars. Removing the one we have
Error when saving holiday calendar account properties. Error = %@
Couldn't find a holiday calendar URL. Cleaning up.
Fetching an updated subscription URL from %{public}@. Current locale is %{public}@ and language is %{public}@. Request is %{public}@
Error fetching subscribed holiday calendars. Giving up for now. %@
The existing calendar has the correct locale. Continuing with our refresh
Skipping holiday calendar refresh because we last refreshed it at %{public}@, less than our refresh interval of %f
Couldn't get a gatekeeper lock in order to refresh the holiday subscribed calendar.
Setting last holiday calendar refresh time to %{public}@
Saving current locale (%{public}@) and language (%{public}@)
Holiday Calendar not found in _saveHolidayCalMetadata:
Event Store commit failed with error: %@
Couldn't get a gatekeeper lock in order to save the last holiday calendar refresh date.
Refresh timer fired.
The current locale changed. Refreshing our holiday calendar
SubCalRefreshTask
SubCalURLRequestDelegate
NSObject
SubCalICSDataCallbackActor
DADataclassLockWatcher
DABabysittable
SubCalExtras
SubCalAgent
DARefreshManagerDelegate
SubCalDaemonAccountDelegate
SubCalDaemonAccount
SubCalICSDataActor
SubCalWebcalHandler
DAValidityCheckConsumer
HolidayCalDaemonAccount
CoreDAVAccountInfoProvider
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24@?<v@?q@"NSURLCredential">32
v40@0:8@"SubCalURLRequest"16@"NSData"24@"NSError"32
v32@0:8@"SubCalURLRequest"16@"NSData"24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString">24
v32@0:8@"SubCalURLRequest"16@"NSURL"24
v32@0:8@"SubCalICSDataActor"16@"NSError"24
v16@0:8
v24@0:8@?16
v24@0:8@16
v20@0:8B16
d16@0:8
v24@0:8d16
@"<SubCalRefreshTaskDelegate>"
@"NSURL"
@"NSString"
@"NSData"
@"SubCalICSDataActor"
@"SubCalURLRequest"
v28@0:8@16i24
q16@0:8
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v32@0:8@"SubCalDaemonAccount"16@"NSError"24
v36@0:8@16q24B32
@"<SubCalDaemonAccountDelegate>"
@24@0:8@16
@72@0:8@16@24@32@40B48B52B56B60@64
B56@0:8@16@24@32@40^@48
v40@0:8@16^@24^@32
@48@0:8@16@24@32^@40
@48@0:8@16@24@32@40
@40@0:8@16@24@32
v28@0:8@16B24
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@"<SubCalICSDataCallbackActor>"
@"EKEventStore"
@"EKCalendar"
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v24@0:8Q16
v32@0:8@16^B24
v32@0:8Q16^{__CFUserNotification=}24
i16@0:8
v20@0:8i16
@"SubCalAccount"
@"<SubCalWebcalHandlerConsumer>"
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
@"NSDate"
@"NSTimer"
@"CalDAVCalendarSearchTask"
