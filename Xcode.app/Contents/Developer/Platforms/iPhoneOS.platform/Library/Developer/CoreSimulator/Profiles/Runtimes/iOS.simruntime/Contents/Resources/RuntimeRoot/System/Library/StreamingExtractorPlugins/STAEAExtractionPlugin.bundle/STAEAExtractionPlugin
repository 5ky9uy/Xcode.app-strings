@(#)PROGRAM:STAEAExtractionPlugin  PROJECT:StreamingExtractor-1
STExtractorError
[%s:%d][%s] %@
STCreateErrorWithInfo
v8@?0
com.apple.StreamingExtractor
AAError
aaError: 0x%x - %@
STAEAExtractorPlugin
-[STAEAExtractor initWithOptions:delegate:]
[_symmetricDecryptionKey isKindOfClass:[NSData class]]
/Library/Caches/com.apple.xbs/Sources/StreamingExtractor_Sim/AEAExtractionPlugin/STAEAExtractorPlugin.m
[_asymmetricDecryptionKey isKindOfClass:[NSData class]]
[_signingPublicKey isKindOfClass:[NSData class]]
[_sourceDirectory isKindOfClass:[NSString class]]
[_sourceDirectorySandboxExtension isKindOfClass:[NSString class]]
[_archiveID isKindOfClass:[NSData class]]
-[STAEAExtractor aeaContextCallback:]
context != NULL
No AEA context and archiveID is required. Likely an incorrectly formatted archive.
result == 0
Failed to get archive identifier from extractor context - identifier is required
[self.archiveID isEqualToData:identifierData]
Archive identifier mismatch.  Archive: %@ - Expected: %@
No AEA context and decryption key was provided. Archive is not encrypted.
result != -1
Failed to set encryption key on extractor context
Archive is not signed - signing key was provided and is required
AEAProfileGetSignatureMode(profile) != AEA_CONTEXT_SIGNATURE_NONE
Archive is not signed - signing key was provided
Failed to set signing key on extractor context
-[STAEAExtractor prepareForExtractionToPath:withCompletionBlock:]
_extractor != nil
Couldn't create extractor
self.sandboxToken != -1
Couldn't acquire sandbox extension: %s (%d)
ret == 0
Couldn't set input directory "%@", returned %d
Couldn't set extractor context callback, returned %d
Couldn't set extractor progress callback, returned %d
Couldn't set extractor entry message callback, returned %d
Couldn't set extractor progress arg, returned %d
-[STAEAExtractor supplyBytes:withCompletionBlock:]
self.error == nil
_extractor != NULL
Extractor is NULL
-[STAEAExtractor supplyBytes:withCompletionBlock:]_block_invoke
AAAssetExtractorWrite returned %ld
v40@?0r^v8{_NSRange=QQ}16^B32
-[STAEAExtractor suspendStreamWithCompletionBlock:]
(ret == 0) || (ret == 1)
failed to suspend stream: %d
No extractor to suspend
-[STAEAExtractor finishStreamWithCompletionBlock:]
Extraction not complete (%d)
Couldn't destroy extractor (%d)
-[STAEAExtractor terminateStreamWithError:completionBlock:]
STAEAContextCallback
arg != NULL
STAEAExtractorSymmetricEncryptionKey<Private>
STAEAExtractorAsymmetricDecryptionKey<Private>
STAEAExtractorSigningPublicKey<Private>
STAEAExtractorSourceDirectory
STAEAExtractorArchiveID
STAEAExtractorSourceDirectorySandboxExtension<Private>
_offset
T#,R
isProxy
T@"NSData",R,N,V_archiveID
release
T@"NSData",R,N,V_signingPublicKey
sourceDirectorySandboxExtension
.cxx_destruct
dealloc
T@"<STExtractionPluginDelegate>",W,N,V_delegate
options
T@"NSData",R,N,V_asymmetricDecryptionKey
sourceDirectory
T@"NSData",R,N,V_symmetricDecryptionKey
T@"NSDictionary",R,N,V_options
T@"NSError",&,N,V_error
T@"NSString",R,C
T@"NSString",R,N,V_sourceDirectory
T@"NSString",R,N,V_sourceDirectorySandboxExtension
TC,N,V_isComplete
TQ,N,V_sandboxToken
TQ,R
TQ,R,N
UTF8String
UUID
UUIDString
_archiveID
_asymmetricDecryptionKey
_delegate
_error
_extractor
_isComplete
_options
_path
_sandboxToken
_session
_signingPublicKey
_sourceDirectory
_sourceDirectorySandboxExtension
_symmetricDecryptionKey
aeaContextCallback:
archiveID
asymmetricDecryptionKey
autorelease
bytes
class
conformsToProtocol:
copy
dataWithBytesNoCopy:length:freeWhenDone:
debugDescription
delegate
description
dictionaryWithCapacity:
enumerateByteRangesUsingBlock:
error
errorWithDomain:code:userInfo:
extractionCompleteAtArchivePath:
extractionMemoryFootprint
extractionProgress:
finishStreamWithCompletionBlock:
hash
init
initWithOptions:delegate:
invalidate
isComplete
isEqual:
isEqualToData:
isKindOfClass:
isMemberOfClass:
length
mutableCopy
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
prepareForExtractionToPath:withCompletionBlock:
processEntryMessage:path:data:
respondsToSelector:
retain
retainCount
sandboxToken
self
sessionID
setDelegate:
setError:
setExtractionProgress:
setIsComplete:
setObject:forKey:
setSandboxToken:
signingPublicKey
stringWithFormat:
superclass
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
symmetricDecryptionKey
terminateStreamWithError:completionBlock:
zone
%{public}s: Error [%s:%d][%s]: %@ - %ld - %@ %@
%{public}s: Initializing extractor
[%@] %{public}s: new AEA extractor
%{public}s: %s: AssertMacros: %s, %s file: %s, line: %d
[%@] %{public}s: Setting asymmetric key on AEA context (%lu bytes)
[%@] %{public}s: Setting symmetric key on AEA context (%lu bytes)
[%@] %{public}s: Preparing to extract to %@
[%@] %{public}s: starting extraction offset: %llu
[%@] %{public}s: Received %zu bytes for extraction, offset %lld
[%@] %{public}s: Extracting %zu bytes, offset %lld
[%@] %{public}s: AAAssetExtractorWrite returned %ld
[%@] %{public}s: AAAssetExtractor indicated the stream is complete, but there are %ld more bytes to write
[%@] %{public}s: AAAssetExtractorWrite wrote %ld bytes which brings it to %zu out of %zu
[%@] %{public}s: Suspending extraction
[%@] %{public}s: Calling AAAssetExtractorDestroy()
[%@] %{public}s: successfully suspended stream with offset: %llu
[%@] %{public}s: AAAssetExtractorDestroy() was successful but stream was not suspended (offset: %llu) - stream was already complete
[%@] %{public}s: No extractor to suspend
[%@] %{public}s: Finishing extraction
[%@] %{public}s: AAAssetExtractorDestroy returned %d 
[%@] %{public}s: Terminating extraction (%@)
[%@] %{public}s: Calling AAAssetExtractorDestroy
[%@] %{public}s: AAAssetExtractorDestroy returned %d
STAEAExtractor
STExtractionPlugin
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
v32@0:8@16@?24
v24@0:8@?16
v16@0:8
@32@0:8@"NSDictionary"16@"<STExtractionPluginDelegate>"24
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
i20@0:8f16
i24@0:8^{AEAContext_impl=}16
i36@0:8I16r*20^v28
v24@0:8@16
C16@0:8
v20@0:8C16
v24@0:8Q16
^{AAAssetExtractor_impl=}
@"NSString"
@"NSDictionary"
@"<STExtractionPluginDelegate>"
@"NSData"
@"NSError"
@(#)PROGRAM:STAEAExtractionPlugin  PROJECT:StreamingExtractor-1
STExtractorError
[%s:%d][%s] %@
STCreateErrorWithInfo
v8@?0
com.apple.StreamingExtractor
AAError
aaError: 0x%x - %@
STAEAExtractorPlugin
-[STAEAExtractor initWithOptions:delegate:]
[_symmetricDecryptionKey isKindOfClass:[NSData class]]
/Library/Caches/com.apple.xbs/Sources/StreamingExtractor_Sim/AEAExtractionPlugin/STAEAExtractorPlugin.m
[_asymmetricDecryptionKey isKindOfClass:[NSData class]]
[_signingPublicKey isKindOfClass:[NSData class]]
[_sourceDirectory isKindOfClass:[NSString class]]
[_sourceDirectorySandboxExtension isKindOfClass:[NSString class]]
[_archiveID isKindOfClass:[NSData class]]
-[STAEAExtractor aeaContextCallback:]
context != NULL
No AEA context and archiveID is required. Likely an incorrectly formatted archive.
result == 0
Failed to get archive identifier from extractor context - identifier is required
[self.archiveID isEqualToData:identifierData]
Archive identifier mismatch.  Archive: %@ - Expected: %@
No AEA context and decryption key was provided. Archive is not encrypted.
result != -1
Failed to set encryption key on extractor context
Archive is not signed - signing key was provided and is required
AEAProfileGetSignatureMode(profile) != AEA_CONTEXT_SIGNATURE_NONE
Archive is not signed - signing key was provided
Failed to set signing key on extractor context
-[STAEAExtractor prepareForExtractionToPath:withCompletionBlock:]
_extractor != nil
Couldn't create extractor
self.sandboxToken != -1
Couldn't acquire sandbox extension: %s (%d)
ret == 0
Couldn't set input directory "%@", returned %d
Couldn't set extractor context callback, returned %d
Couldn't set extractor progress callback, returned %d
Couldn't set extractor entry message callback, returned %d
Couldn't set extractor progress arg, returned %d
-[STAEAExtractor supplyBytes:withCompletionBlock:]
self.error == nil
_extractor != NULL
Extractor is NULL
-[STAEAExtractor supplyBytes:withCompletionBlock:]_block_invoke
AAAssetExtractorWrite returned %ld
v40@?0r^v8{_NSRange=QQ}16^B32
-[STAEAExtractor suspendStreamWithCompletionBlock:]
(ret == 0) || (ret == 1)
failed to suspend stream: %d
No extractor to suspend
-[STAEAExtractor finishStreamWithCompletionBlock:]
Extraction not complete (%d)
Couldn't destroy extractor (%d)
-[STAEAExtractor terminateStreamWithError:completionBlock:]
STAEAContextCallback
arg != NULL
STAEAExtractorSymmetricEncryptionKey<Private>
STAEAExtractorAsymmetricDecryptionKey<Private>
STAEAExtractorSigningPublicKey<Private>
STAEAExtractorSourceDirectory
STAEAExtractorArchiveID
STAEAExtractorSourceDirectorySandboxExtension<Private>
%{public}s: Error [%s:%d][%s]: %@ - %ld - %@ %@
%{public}s: Initializing extractor
[%@] %{public}s: new AEA extractor
%{public}s: %s: AssertMacros: %s, %s file: %s, line: %d
[%@] %{public}s: Setting asymmetric key on AEA context (%lu bytes)
[%@] %{public}s: Setting symmetric key on AEA context (%lu bytes)
[%@] %{public}s: Preparing to extract to %@
[%@] %{public}s: starting extraction offset: %llu
[%@] %{public}s: Received %zu bytes for extraction, offset %lld
[%@] %{public}s: Extracting %zu bytes, offset %lld
[%@] %{public}s: AAAssetExtractorWrite returned %ld
[%@] %{public}s: AAAssetExtractor indicated the stream is complete, but there are %ld more bytes to write
[%@] %{public}s: AAAssetExtractorWrite wrote %ld bytes which brings it to %zu out of %zu
[%@] %{public}s: Suspending extraction
[%@] %{public}s: Calling AAAssetExtractorDestroy()
[%@] %{public}s: successfully suspended stream with offset: %llu
[%@] %{public}s: AAAssetExtractorDestroy() was successful but stream was not suspended (offset: %llu) - stream was already complete
[%@] %{public}s: No extractor to suspend
[%@] %{public}s: Finishing extraction
[%@] %{public}s: AAAssetExtractorDestroy returned %d 
[%@] %{public}s: Terminating extraction (%@)
[%@] %{public}s: Calling AAAssetExtractorDestroy
[%@] %{public}s: AAAssetExtractorDestroy returned %d
_offset
T#,R
isProxy
T@"NSData",R,N,V_archiveID
release
T@"NSData",R,N,V_signingPublicKey
sourceDirectorySandboxExtension
.cxx_destruct
dealloc
T@"<STExtractionPluginDelegate>",W,N,V_delegate
options
T@"NSData",R,N,V_asymmetricDecryptionKey
sourceDirectory
T@"NSData",R,N,V_symmetricDecryptionKey
T@"NSDictionary",R,N,V_options
T@"NSError",&,N,V_error
T@"NSString",R,C
T@"NSString",R,N,V_sourceDirectory
T@"NSString",R,N,V_sourceDirectorySandboxExtension
TC,N,V_isComplete
TQ,N,V_sandboxToken
TQ,R
TQ,R,N
UTF8String
UUID
UUIDString
_archiveID
_asymmetricDecryptionKey
_delegate
_error
_extractor
_isComplete
_options
_path
_sandboxToken
_session
_signingPublicKey
_sourceDirectory
_sourceDirectorySandboxExtension
_symmetricDecryptionKey
aeaContextCallback:
archiveID
asymmetricDecryptionKey
autorelease
bytes
class
conformsToProtocol:
copy
dataWithBytesNoCopy:length:freeWhenDone:
debugDescription
delegate
description
dictionaryWithCapacity:
enumerateByteRangesUsingBlock:
error
errorWithDomain:code:userInfo:
extractionCompleteAtArchivePath:
extractionMemoryFootprint
extractionProgress:
finishStreamWithCompletionBlock:
hash
init
initWithOptions:delegate:
invalidate
isComplete
isEqual:
isEqualToData:
isKindOfClass:
isMemberOfClass:
length
mutableCopy
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
prepareForExtractionToPath:withCompletionBlock:
processEntryMessage:path:data:
respondsToSelector:
retain
retainCount
sandboxToken
self
sessionID
setDelegate:
setError:
setExtractionProgress:
setIsComplete:
setObject:forKey:
setSandboxToken:
signingPublicKey
stringWithFormat:
superclass
supplyBytes:withCompletionBlock:
suspendStreamWithCompletionBlock:
symmetricDecryptionKey
terminateStreamWithError:completionBlock:
zone
STAEAExtractor
STExtractionPlugin
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
v32@0:8@16@?24
v24@0:8@?16
v16@0:8
@32@0:8@"NSDictionary"16@"<STExtractionPluginDelegate>"24
v32@0:8@"NSString"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSError"16@?<v@?@"NSError">24
i20@0:8f16
i24@0:8^{AEAContext_impl=}16
i36@0:8I16r*20^v28
v24@0:8@16
C16@0:8
v20@0:8C16
v24@0:8Q16
^{AAAssetExtractor_impl=}
@"NSString"
@"NSDictionary"
@"<STExtractionPluginDelegate>"
@"NSData"
@"NSError"
