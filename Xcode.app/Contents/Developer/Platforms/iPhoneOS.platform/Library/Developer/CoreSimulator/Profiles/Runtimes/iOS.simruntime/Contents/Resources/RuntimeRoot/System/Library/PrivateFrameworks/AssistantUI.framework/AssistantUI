%s Updating scene with frame: %@, interfaceOrientation: %zd
%s #sceneHosting Error requesting scene: %@ 
%s #sceneHosting Completed scene request with presenter %@ for scene (ID: %@) %@
%s #sceneHosting calling completion block for startHostingSceneForConfiguration
%s #siriHID Starting HID deferrals and resuming until asked to pause again: %@
%s #siriHID Invalidating HID deferrals and pausing until asked to start again
%s #sceneHosting Expected scene's settings to be UIMutableApplicationSceneSettings, but they weren't {actualClass: %@}
%s #sceneHosting Updating safe area insets {newSafeAreaInsets: %@}
%s #sceneHosting Updating safe area insets {sceneInsets: %@}
%s #siriHID viewDidMoveToWindow:shouldAppearOrDisappear: %d
%s #siriHID _shouldDeferHIDEventsForMode returned false for current deferral mode: %zd
%s #siriHID skipping deferral of HID events until un-paused
%s #siriHID invalidating defer HID events assertion
%s #siriHID Started defering HID events to Siri.app
%s #siriHID Skipped defering HID events because of an invalid contextID (%u) or clientContextID (%u)
%s #siriHID sceneDidUpdateClientSettings
%s Marking voicemail as played %@
%s Unsupported result %li
%s AFUISiriView's mode set to SiriUIViewModeCarPlay. This should use AFUISiriCarPlayView instead
%s AFUISiriView's mode set to SiriUIViewModeCompact. This should use AFUISiriViewCompact instead
%s Not showing voiceActivationMaskView for mode - %@
%s Not dismissing lock view since we're at first unlock stage
%s Error deleting & disabling Cloud sync: %@
%s %@
%s #xpcSiriApp Asked to invalidate XPC connection to Siri.app
%s #xpcSiriApp Setting up new XPC connection to Siri.app
%s error talking to remote proxy: %@
%s #xpcSiriApp %@
%s #xpcSiriApp resuming connection after startHostingSceneForConfiguration
%s #xpcSiriApp expectingInvalidation=%i reason=%@ explanation=%@
%s AFUIRemoteViewController's view did appear
%s Unable to perform operation on session delegate: %{public}@
%s #activation %@
%s #activation dismissal requested %@
%s Unable to update service view controller with new presentation identifier %@: %{public}@
%s Unable to notify service view controller about updated frontMostAppOrientation: %{public}@
%s Unable to notify service view controller about willActivate: %{public}@
%s Unable to notify service view controller about didActivate: %{public}@
%s Unable to set service view controller request options %{public}@: %{public}@
%s Unable to instruct service view controller to preloadPresentationBundleWithIdentifier: "%{public}@", error: %{public}@
%s Unable to instruct service view controller to preloadPluginBundles, error: %{public}@
%s Unable to instruct service view controller to show the presentation "%{public}@": %{public}@
%s Unable to notify service view controller about didDeactivate: %{public}@
%s Unable to notify service view controller about didReceiveOrbViewTapToCancelRequest: %{public}@
%s Unable to notify service view controller about showing passcode unlock: %{public}@
%s Unable to notify service view controller about will hide passcode unlock: %{public}@
%s Unable to notify service view controller about did hide passcode unlock: %{public}@
%s Unable to notify service view controller about starting text request: %{public}@
%s Type2Siri: Unable to notify service view controller about keyboard info: %{public}@
%s Unable to set service view controller's status bar frame: %{public}@
%s Unable to set service view controller's status view height: %{public}@
%s #compact Unable to set service view controller's bottom content inset: %{public}@
%s Unable to set session of service view controller: %{public}@
%s Unable to send help action: %{public}@
%s Unable to report bug: %{public}@
%s Unable to send bug button long press: %{public}@
%s Unable to send short tap action: %{public}@
%s Unable to notify service view controller about hostApplicationWillResignActive: %{public}@
%s Unable to notify service view controller about hostApplicationWillEnterForeground: %{public}@
%s Unable to notify service view controller about hostApplicationDidBecomeActive: %{public}@
%s Unable to notify service view controller about setWaitingForTelephonyToStart: %{public}@
%s Unable to check if there is content at point: %@
%s Unable to notify service view controller about siriWillBeginTearDownForDismissalReason:%lu error:%@
%s Unable to notify service view controller about presentationStateUpdatedFromPresentationState:toPresentationState: %{public}@
%s Unable to notify service view controller about emitUIStateTransitionForSiriDismissal:%d: %{public}@
%s Unable to notify service view controller about emitInstrumentationEvent: %{public}@
%s Unable to notify service view controller about didSuccessfullyHandleCommandsInDelayedActionCommand : %{public}@
%s Unable to notify service view controller about takeScreenhot: %{public}@
%s #session AFConnection was still alive when AFUISiriSession was being deallocated. Cleaning up the connection
%s The AFConnection for this session (%@) has been invalidated.
%s  from state %@; to state %@; event %@
%s  from state %@; event %@
ThinkingStateTransition
%s #tts AudioSession Handler:%@ audioSessionID:%u
%s #tts #carPlay AudioSession CarPlay
%s #tts AudioSession
%s #instrumentation New Turn %@ <-> Old Turn %@ 
%s #instrumentation New Turn %@ 
%s #instrumentation %@ in turn %@: 
%s Error fetching accounts: %@
%s #instrumentation Specified turn %@ to final options %@
%s #activation #carPlay activating requested direct action via Native Siri Kit. SASRequestOptions: %@, SAStartLocalRequest: %@
%s #activation #carPlay activating requested direct action via Legacy. SASRequestOptions: %@
%s #activation #carPlay activating requested direct action with no direct action specified. SASRequestOptions: %@
%s #activation #carPlay unable to handle direct action request options: %@
%s Skipping activation. Invalid request options provided for SASRequestSourceTesting: %@
%s Unexpected request source %@
%s no bulletin in request options. Exiting.
%s TTS was cancelled, ignoring as it is most likely due to Siri invocation during readout.
%s No network. Not starting the request
%s Device not unlocked since boot. Not starting the request
%s %@ not starting a new request because its delegate vetoed with nil request options
%s #modes Sending modes configuration : %@
%s Received Command: %@ aceId: %@
%s %@ may be a part of a multi turn request.
%s %@ indicates end of a multi turn request.
%s AFUISiriSession received unexpected command: %{public}@.%{public}@
%s Delegate is handling it - responds to shouldNonLocalDelegateHandlePunchouts: %@
%s Local delegate is handling it.
%s error:%@ requestClass:%@
%s #PhoneCallAudioSessionHandler Extending the audio session for imminent phone call
%s #PhoneCallAudioSessionHandler: shouldExtendAudioSessionForImminentPhoneCall: %@, suppressAudioInterruptedNotificationFlag: %@
%s #PhoneCallAudioSessionHandler startPlaybackDidFail: Telling SiriPresentationViewController to stop extending the audio session
%s #tts 1 _delegate:%@ audioSessionID:%u
%s #phatic 8
%s #phatic 1
%s #phatic 1 Fail: type = %tu
%s #phatic 2
%s #phatic 3 audioSessionCompletion:%@
%s #phatic 4 %@
%s #phatic 9 success:%i
%s #audioInterruption audio session interruption began userInfo: %{public}@
%s #audioInterruption audio session interruption ended shouldResume: %{public, bool}d userInfo: %{public}@
%s couldn't find a speech request dispatch group
%s #instrumentation Setting Request turn identifier %@
%s Not transitioning to AFUISiriSessionEventRequestFinished for temporary command : %@
%s #userAttention Attention was lost for event: %@
%s #userAttention Attention was gained for event: %@
%s #activation requestInfo: %@, context: %@
%s %zd
%s Updating announcement requests permitted by presentation: %{BOOL}d
%s Lock state while handling unlockDevice command = %zd
%s Sending ace command of class %@ expects a turn identifier, but one isn't provided.
%s Sending ace command of class %@ with a turn identifier is unsupported. Dropping turn identifier.
%s reason %zd
%s #modes Creating modes configuration with heuristics related to RequestOptions: %@
%s #modes Updating modes configuration with heuristics related to RequestOptions: %@
%s Unhandled direct action event: %li
%s #sceneHosting Initializing AFUISceneConfiguration with null bounds, falling back to displayConfiguration's bounds: %@
%s #sceneHosting Initializing AFUISceneConfiguration using bounds: %@
%s unknown invalidation reason: %li
%s #sceneHosting Overriding bounds for TV: %@
%s #sceneHosting Starting scene update for %@ with configuration %@
%s #sceneHosting Starting scene request for %@ with configuration %@
%s #sceneHosting FBApplicationUpdateScenesTransaction failed with error: %@
%s #sceneHosting FBApplicationUpdateScenesTransaction succeeded
%s #sceneHosting started FBApplicationUpdateScenesTransaction transaction
%s #sceneHosting updating scene (%@) with configuration %@
%s #sceneHosting went to update scene, but no scene exists and no transaction is running. Nothing to update
%s #sceneHosting Reached timeout, cancelling scene loading
%s #xpcSiriApp #sceneHosting %@: %@
%s #sceneHosting scene: %@
%s #sceneHosting prewarming assertion acquired %{bool}i
%s No transition is defined from state %{public}ld for event %{public}@. Let's not change state, then.
%s #noisy entered _cacheFileQueue
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s #noisy exited _cacheFileQueue
%s Can't remove %@: %@
%s Handle guide update with command: %@
%s Guide update completed successfully
%s Guide update failed
%s Unexpected response for guide update: %@
%s Guide update succeeded
%s Guide update failed with error: %@
%s Can't retrieve file attributes for %{public}@: %{public}@
%s Can't update last checked date for cached guide at %{public}@: %{public}@
%s Cached guide language code: %@ does not match current language code: %@, ignoring cache
%s Can't load aceObject dictionary at: %@, %@
%s Guide cache file not found at: %@
%s unhandled siri session state: %@. Falling back to SUICOrbViewModeOff
%s Attached debug log: %@
%s %{public}@ unable to read defaults from %{public}@: %{public}@
%s %{public}@ unable to parse defaults property list at %{public}@: %{public}@
%s Device unlock failed, unable to present debug controller
%s Unable to open URL: %{public}@
%s Device unlock failed unable to open URL: %{public}@
%s Device unlock failed unable to open internal view controller
%s Failed to serialize current conversation: %@
%s Enqueue delayed action command: %@, delay: %f, commands: %@
%s Enqueue dismissal action command: %@, commands: %@
%s Invalidating assertion: %@ for delayed action command: %@
%s Invalidating delayed action timer with userInfo: %@
%s Performing delayed action command: %@ with commands: %@
%s Received response for delayed command: %@, response: %@
%s Delayed command succeeded: %@
%s Delayed command failed: %@ with error: %@
%s #dismissal: updating taps and pans should dismiss Siri for state:%@ siriIsIdleAndQuiet:%@ dimmingLayerVisible:%@
%s #dismissal: updating taps and pans should dismiss Siri for state:%@ siriIsIdleAndQuiet:%@
%s #dismissal: updating taps and pans should dismmiss for dimming layer change:%@ sessiontState:%@
%s #dismissal Not updating tap pan dismissal policy on phone, feature flag not enabled.
%s #dismissal: cancelling pending tap/pan dismissal policy update. Scheduling new update with delay:%@ shouldDismiss:%@
%s Unknown distance unit %{public}@; returning full unit as abbreviation
%s Discarding AMS Lookup Result due to block deallocation.
%s Error performing AMS Lookup: %@
%s Error performing AMS Lookup - item not found
%s Unsupported AFUIStarkBackgroundViewMode value: %lu, returning back nil.
%s Unsupported SASRequestSource value: %lu, returning back AFUIStarkBackgroundViewModeSmall.
%s Failed to log 'disambiguation selected' event with selected ace id: %@
%s Playing audio from %@: %@
%s Failed to set audio active: %@
%s Unable to set audio category: %@
%s Failed to create AVAudioPlayer: %@
%s %@ did finish playing %@
%s Error setting the AVAudioSession to inactive: %@
%s Timed out waiting for remote view controller to connect.
%s #myriadUI Not showing the status bar as voiceActivationMaskView is visible
%s #activation animated disappearance finished: %@
%s #myriadUI Requesting show - voiceActivationMaskView
%s AFUISiriViewController's view did appear
%s %@ previousCount:%zd newCount:%zd transitioning:%@ newState:%@
%s skipping the startHosting request as there is already one pending
%s skipping the startHosting request, remoteViewController already loaded
%s transitioning _remoteViewController connectionState to pending
%s Creating remote scene viewController
%s Display Configuration was nil - falling back to _carScreen
%s Display Configuration was nil - falling back to mainScreen
%s Using displayConfiguration: %@
%s %{public}@ unable to obtain remote view controller: %{public}@
%s Remote Scene Controller did succeed in hosting scene
%s transitioning _remoteViewController connectionState to loaded
%s AFUISiriViewController deallocated before -[AFUISiriRemoteSceneViewController startHostingSceneForConfiguration:] completionBlock could run.
%s #punchout #activation dismissal requested %@
%s #carPlay #punchout Setting fullscreen background with a foreground inactive scene. Reactivating scene and requesting presentation.
%s _setStatusViewHidden: %@
%s Type2Siri: keyboard enabled %@=>%@, minimized %@=>%@ firstResponder %@=>%@
%s  sessionState: %@
%s Old trigger released
%s Starting new request with trigger
%s Trigger released
%s Dismissed siri for unlock result: %lu dismissal result: %d
%s Cannot present unlock screen. Sending SiriUIUnlockResultFailure to completion handler.
%s  %@Current view cannot show passcode unlock flow.
%s Passcode unlock screen for handoff authentication.
%s Passcode unlock screen for cold boot authentication.
%s #carDnd setting carDNDActive to %@
%s %@ not starting request because delegate returned nil requestOptions
%s Launched into listening mode. Setting recording start time to: %@
%{public, signpost.description:begin_time}llu
buttonLaunch
voiceUILaunch
%s Not launching into listening mode. Setting recording start time back to nil.
%s In HTTMode %d, Current options %@, source %ld
%s Stopping recording on hold to talk request canIgnoreHoldToTalkThreshold %@, holdToTalkThresholdElapsed %@, isInitialSpeechRequest %@
%s Recording start time was not set
%s Recording has not started on the audio route
%s Button up time: %f
%s Start recording to button up time: %f
%s Manual endpointing threshold: %f
%s Entering HTT mode
%s Transitioning to Automatic Endpointing
%s Transitioning to HTT mode
%s Exiting HTT mode
%s Trigger target did release
%s Starting request with trigger %@
%s Adding trigger target
%s #cancellationReason: endForReason %@
%s #activation
%s skipped logging event %@
%s logging event %@
%s #activation: trying to change session state while processing an app launch
%s Session released from AFUISiriViewController
%s Speech recording began on audio route: %@
%s Audio route changed to BluetoothHFP
%s Recording start time is not set
%s Recording start time should be updated
%s Updating recording start time to: %@
%s shouldNonLocalDelegateHandlePunchouts isVisible: %@
%s #myriadUI Requesting hide - voiceActivationMaskView
%s #OrbUIInteraction Mic Button Tapped State %@
%s #OrbUIInteraction Mic Button Held State %@
%s #orbAnimation _ignoreSiriSessionUpdates: %@
%s #orbAnimation old state: %@ | new  state:  %@
%s #compact Blur Visibility changed to %@
%s Format string: %@ has external domains: %d
%s Malformed parse for format string: %@
%s #carPlay changing from %@ to %@
%s #carPlay backgroundViewMode should never be set to AFUIStarkBackgroundViewModeUnset
%s from state %ld; event %@
%s Enabling assistant and starting Siri
%s Later Tapped, dismissing
%s Running Command ---> %{public}@
%s Failed to spawn %{public}s: %{public}s
%s Couldn't get modification date for log at %{public}@: %{public}@
%s Unable to get %{public}@ for file at %{public}@: %{public}@
%s #carPlay requesting CarPlay's status bar to %@ overriden
-[AFUISceneHostingViewController _updateSceneSettingsToSize:interfaceOrientation:withAnimationSettings:animationFence:]
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
AFUISceneHostingViewController.m
Invalid parameter not satisfying: %@
configuration
completionBlock
-[AFUISceneHostingViewController startHostingSceneForConfiguration:withCompletionBlock:]_block_invoke
#sceneHosting scene mismatch : old=%@ new=%@
PresentationManager-Scene%@
v16@?0@"UIMutableScenePresentationContext"8
v24@?0@"FBScene"8@"NSError"16
-[AFUISceneHostingViewController startDeferringHIDEventsIfNeeded]
-[AFUISceneHostingViewController invalidateAndPauseDeferringHIDEvents]
-[AFUISceneHostingViewController _updateSceneUIApplicationSceneSettingsWithBlock:]_block_invoke
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"UIMutableApplicationSceneSettings"8
-[AFUISceneHostingViewController _updateSceneSafeAreaInsets]_block_invoke
-[AFUISceneHostingViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[AFUISceneHostingViewController _updateDeferralChainWithWindow:]
launching Siri.app
-[AFUISceneHostingViewController sceneController:sceneWasInvalidated:forReason:]
Scene was invalidated - scene=%@
-[AFUISceneHostingViewController sceneController:sceneDidUpdateClientSettings:]
/AppleInternal/Library/Assistant/UIPlugins/Debug.siriUIBundle
AFUIDebugController
AFUIInternalDebugController
-[AFUIVoicemailPlayer _updateVoicemailPlayedState:finished:]
VMVoicemailManager
Class getVMVoicemailManagerClass(void)_block_invoke
AFUIVoicemailPlayer.m
Unable to find class %s
v8@?0
void *VisualVoicemailLibrary(void)
AFUIBulletinReadoutResultUnknown
AFUIBulletinReadoutResultSuccess
AFUIBulletinReadoutResultSynthesisFailed
AFUIBulletinReadoutResultSynthesisCancelled
AFUIBulletinReadoutResultNothingToSpeak
AFUIBulletinReadoutResultGetName
-[AFUISiriView _updateSiriStatusViewForMode:]
-[AFUISiriView setFlamesViewDeferred:]
-[AFUISiriView setVoiceActivationMaskViewVisible:]
v12@?0B8
v16@?0@"UIImage"8
radarBug
DnDwDSiri
position.y
opacity
Animation Group
-[AFUISiriView siriDidActivateFromSource:]
com.apple.siri
DISABLE_AND_DELETE
DISABLE_AND_DELETE_FOOTER
DISABLE_AND_DELETE_PROMPT_TITLE_MULTI_USER
DISABLE_AND_DELETE_PROMPT_MULTI_USER
DISABLE_AND_DELETE_PROMPT_CANCEL_MULTI_USER
DISABLE_AND_DELETE_PROMPT_TITLE
DISABLE_AND_DELETE_PROMPT
DISABLE_AND_DELETE_PROMPT_OK
DISABLE_AND_DELETE_PROMPT_CANCEL
v16@?0@"NSError"8
-[AFUICloudStorageViewController _disableAndDeleteCloudSync]_block_invoke
STStorageAppHeaderCell
Class getSTStorageAppHeaderCellClass(void)_block_invoke
AFUICloudStorageViewController.m
void *StorageSettingsLibrary(void)
Disable
ImageItemProvider Downloader
-[AFUISiriRemoteSceneViewController init]
-[AFUISiriRemoteSceneViewController invalidate]
-[AFUISiriRemoteSceneViewController _connection]
com.apple.siri.app
-[AFUISiriRemoteSceneViewController serviceViewControllerProxyWithErrorHandler:]_block_invoke
Connection to Siri.app was invalidated pid=%d _remoteConnection=%@
-[AFUISiriRemoteSceneViewController _invalidated]
Connection to Siri.app was interrupted pid=%d _remoteConnection=%@
-[AFUISiriRemoteSceneViewController _interrupted]
-[AFUISiriRemoteSceneViewController startHostingSceneForConfiguration:withCompletionBlock:]_block_invoke_2
v20@?0B8@"NSError"12
-[AFUISiriRemoteSceneViewController _handleInvalidationForReason:explanation:]_block_invoke
-[AFUISiriRemoteSceneViewController viewDidAppear:]
-[AFUISiriRemoteSceneViewController viewDidDisappear:]
-[AFUISiriRemoteSceneViewController sessionDelegate]_block_invoke
-[AFUISiriRemoteSceneViewController serviceRequestsDismissalWithUserInfo:withReason:]
-[AFUISiriRemoteSceneViewController serviceViewControllerRequestsDismissalWithDismissalReason:completion:]
-[AFUISiriRemoteSceneViewController updateToPresentationWithIdentifier:presentationProperties:animated:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController updateRemoteSceneWithFrontMostAppInterfaceOrientation:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillActivateFromSource:]_block_invoke
-[AFUISiriRemoteSceneViewController siriDidActivateFromSource:]_block_invoke
-[AFUISiriRemoteSceneViewController setRequestOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController preloadPresentationBundleWithIdentifier:]_block_invoke
-[AFUISiriRemoteSceneViewController preloadPluginBundles]_block_invoke
-[AFUISiriRemoteSceneViewController showPresentationWithIdentifier:properties:lockState:]_block_invoke
Invalidating because [AFUISiriRemoteSceneViewController siriDidDeactivate]
-[AFUISiriRemoteSceneViewController siriDidDeactivate]_block_invoke_2
-[AFUISiriRemoteSceneViewController didReceiveOrbViewTapToCancelRequest]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillShowPasscodeUnlockAndCancelRequest:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillHidePasscodeUnlockForResult:]_block_invoke
-[AFUISiriRemoteSceneViewController siriDidHidePasscodeUnlock]_block_invoke
-[AFUISiriRemoteSceneViewController startRequestForText:]_block_invoke
-[AFUISiriRemoteSceneViewController siriKeyboardViewDidChange:]_block_invoke
-[AFUISiriRemoteSceneViewController setStatusBarFrame:]_block_invoke
-[AFUISiriRemoteSceneViewController setStatusViewHeight:]_block_invoke
-[AFUISiriRemoteSceneViewController setBottomContentInset:]_block_invoke
-[AFUISiriRemoteSceneViewController setSession:]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveHelpAction]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveReportBugAction]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveBugButtonLongPress]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveShortTapActionWithRequestOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController applicationWillResignActive]_block_invoke
-[AFUISiriRemoteSceneViewController applicationWillEnterForeground]_block_invoke
-[AFUISiriRemoteSceneViewController applicationDidBecomeActive]_block_invoke
-[AFUISiriRemoteSceneViewController setWaitingForTelephonyToStart:]_block_invoke
-[AFUISiriRemoteSceneViewController hasContentAtPoint:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillBeginTearDownForDismissalReason:withOriginalDismissalOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController presentationStateUpdatedFromPresentationState:toPresentationState:]_block_invoke
-[AFUISiriRemoteSceneViewController emitUIStateTransitionForSiriDismissalWithDismissalReason:]_block_invoke
-[AFUISiriRemoteSceneViewController emitInstrumentationEvent:]_block_invoke
-[AFUISiriRemoteSceneViewController emitInstrumentationEvent:atTime:]_block_invoke
-[AFUISiriRemoteSceneViewController didSuccessfullyHandleCommandsInDelayedActionCommand:]_block_invoke
-[AFUISiriRemoteSceneViewController takeScreenshotWithCompletion:]_block_invoke
-[AFUISiriRemoteSceneViewController dealloc]
com.apple.LocalAuthentication.ui.presented
com.apple.siri.internal
ModeOverride
AFUISiriSession.m
Session must have a delegate queue
-[AFUISiriSession dealloc]
v16@?0@"<AFUISiriSessionDelegate>"8
-[AFUISiriSession _connection]
-[AFUISiriSession stateMachine:didTransitionFromState:forEvent:eventTimeStamp:]
-[AFUISiriSession _performTransitionForEvent:eventTimeStamp:]
-[AFUISiriSession launchedIntoListeningAtTime:]
-[AFUISiriSession forceAudioSessionActiveWithCompletion:]_block_invoke
Success
v20@?0I8@"NSError"12
-[AFUISiriSession forceAudioSessionActiveWithCompletion:]
-[AFUISiriSession _startRequestWithFinalOptions:completion:]
ResponseFramework
Enabled
-[AFUISiriSession _startRequestWithFinalOptions:completion:]_block_invoke
v24@?0@"NSArray"8@"NSError"16
Unable to handle direct action request options
Unexpected UI request options.
-[AFUISiriSession _startRequestForReadoutOfBulletin:]
-[AFUISiriSession _startRequestForReadoutOfBulletin:]_block_invoke_3
v16@?0Q8
Completion block of start request was dropped.
-[AFUISiriSession startRequestWithOptions:completion:]
No network.
Device not unlocked since boot.
-[AFUISiriSession startRequestWithOptions:completion:]_block_invoke
Session delegate vetoed.
v16@?0@"SASRequestOptions"8
v16@?0@"<AFModesConfigurationMutating>"8
-[AFUISiriSession assistantConnectionRequestWillStart:]
v16@?0@"AceObject<SAAceCommand>"8
refId
-[AFUISiriSession assistantConnection:receivedCommand:completion:]
-[AFUISiriSession assistantConnection:receivedCommand:completion:]_block_invoke_2
-[AFUISiriSession _performPunchoutCommand:delegate:completion:]
-[AFUISiriSession assistantConnection:didFinishAcousticIDRequestWithSuccess:]
-[AFUISiriSession assistantConnection:requestFailedWithError:requestClass:]
-[AFUISiriSession assistantConnectionRequestFinished:]
-[AFUISiriSession assistantConnection:willProcessStartPlayback:intent:completion:]
-[AFUISiriSession assistantConnection:startPlaybackDidFail:]
-[AFUISiriSession assistantConnection:didChangeAudioSessionID:]_block_invoke
-[AFUISiriSession assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:]_block_invoke
-[AFUISiriSession assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:]
Unsupported Two-Shot prompt type %ld.
-[AFUISiriSession _playPhaticWithCompletion:]
-[AFUISiriSession _playPhaticWithCompletion:]_block_invoke
success
Failed to play phatic prompt.
-[AFUISiriSession assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:]_block_invoke_2
-[AFUISiriSession assistantConnectionAudioSessionDidBeginInterruption:userInfo:]
-[AFUISiriSession assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:]
v16@?0@"<AFSpeechRecordingAlertBehaviorMutating>"8
v16@?0@"<AFSpeechRecordingAlertPolicyMutating>"8
dictionary
v16@?0@"NSArray"8
-[AFUISiriSession _startSpeechRequestWithSpeechRequestOptions:isInitialBringUp:completion:]
No speech request ispatch group.
No AFConnection.
AFConnection is already recording.
-[AFUISiriSession requestDidPresentViewForUICommand:]
-[AFUISiriSession didLoseAttentionWithEvent:]
-[AFUISiriSession didGainAttentionWithEvent:]
-[AFUISiriSession _startLegacyDirectActionRequestWithInfo:context:completion:]
-[AFUISiriSession _startContinuityRequestWithInfo:completion:]
-[AFUISiriSession _startRequestWithInfo:completion:]
-[AFUISiriSession startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:machAbsoluteTime:]
v16@?0q8
-[AFUISiriSession clearContext]
-[AFUISiriSession resetContextTypes:]
-[AFUISiriSession setAnnouncementRequestsPermittedByPresentationWhileActive:]
-[AFUISiriSession _handleUnlockDeviceCommand:completion:]
-[AFUISiriSession _performAceCommand:turnIdentifier:machAbsoluteTime:conflictHandler:]
Core duet logging queue
-[AFUISiriSession end]
-[AFUISiriSession endForReason:]
-[AFUISiriSession _updateActiveAccount:]_block_invoke
-[AFUISiriSession _updateModesHeuristicsForRequestOptions:]
-[AFUISiriSession _updateCarPlayInvocationContext:fromDirectActionEvent:appBundleIdentifier:]
NSString *getPKDarwinNotificationEventInAppPresented(void)
PKDarwinNotificationEventInAppPresented
void *PassKitCoreLibrary(void)
INStartCallIntent
Class getINStartCallIntentClass(void)_block_invoke
void *IntentsLibrary(void)
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
void *CoreDuetLibrary(void)
BOOL soft_BYSetupAssistantHasCompletedInitialRun(void)
AFUISiriLanguage.m
BYSetupAssistantHasCompletedInitialRun
void *SetupAssistantLibrary(void)
AFUISceneConfiguration.m
displayConfiguration
-[AFUISceneConfiguration _initWithInitialBounds:displayConfiguration:]
AFUISceneInvalidationReasonUnknown
AFUISceneInvalidationReasonSiriDidDeactivate
AFUISceneInvalidationReasonDealloc
AFUISceneInvalidationReasonDisplayIdentityChanged
AFUISceneInvalidationReasonXpcInterrupted
AFUISceneInvalidationReasonXpcInvalidated
+[AFUISceneConfiguration stringForInvalidationReason:]
-[AFUISceneConfiguration _setupPlatformSpecificDefaultSettings]
, foreground: %@, bounds: %@, safeAreaInsets: %@, deactivationReasonMask: %@
AFUISiriSessionEventDirectRequestBegan
AFUISiriSessionEventSpeechRecordingBegan
AFUISiriSessionEventSpeechRecordingEnded
AFUISiriSessionEventSpeechRecordingCancelled
AFUISiriSessionEventSpeechRecordingFailed
AFUISiriSessionEventRequestCancelled
AFUISiriSessionEventRequestFinished
AFUISiriSessionEventRequestFailed
AFUISiriSessionEventCommandStarted
AFUISiriSessionEventZeroLatencyLaunch
yyyy
AFUISceneController(%p): <Transaction: %@
Scene (sceneID: %@, sceneState: %zd) (%@)>
#sceneHosting Invalidating scene because [AFUISceneController dealloc]
AFUISceneController.m
#sceneHosting Request is not allowed when we already have a scene or in flight request : scene=%@ createTransaction=%@
#sceneHosting Invalidating scene because displayIdentity changed from "%@" to "%@" for _scene:%@
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]
SiriHostedScene-%@-%@
@"FBProcessExecutionContext"8@?0
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]_block_invoke
-[AFUISceneController updateSceneViewWithConfiguration:]
-[AFUISceneController sceneLoadingTimeOutDidOccur]
timeout
-[AFUISceneController invalidateSceneForReason:explanation:]
deactivating
#sceneHosting createTransaction should be gone by now ; %@
-[AFUISceneController sceneDidInvalidate:]
siri prewarming
-[AFUISceneController transaction:didLaunchProcess:]_block_invoke
AFUIStateMachine.m
initialState != NSNotFound
-[AFUIStateMachine _endStateNumberFromDictionary:forEvent:]
var/mobile/Library/Caches/com.apple.siri.SiriGuideUpdateCache.plist
com.apple.siri.AFUIGuideCacheManager
AppleKeyboardsPreferencesChangedNotification
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]_block_invoke
-[AFUIGuideCacheManager _clearCachedGuide]
-[AFUIGuideCacheManager _clearCachedGuide]_block_invoke
-[AFUIGuideCacheManager _checkGuideUpdateUsingAFClientLiteWithTag:]_block_invoke
v16@?0@"SABaseCommand"8
-[AFUIGuideCacheManager _shouldCheckForUpdateAtDate:lastAppUpdateTime:]_block_invoke
-[AFUIGuideCacheManager _updateLastCheckedWithDate:]_block_invoke
-[AFUIGuideCacheManager _cachedGuideUpdate]_block_invoke
-[AFUIGuideCacheManager _aceObjectDictionaryAtFilepath:]
AFUIPresentationPropertiesRequestSourceKey
AFUIPresentationPropertiesShouldSuppressErrorTTSKey
car.fill
com.apple.AssistantUIFramework
com.apple.siri.assistantUI.LanguageCodeDidChangeNotification
+[AFUIUtilities orbViewModeForSiriSessionState:]
https://
.siri.apple.com
%@ (%@)
(%@)
Library
Assistant
PreviousConversation
_DidShowEmergencyCallViewNotification
_WillLeaveEmergencyCallViewNotification
BOOL AFUIGraphicalFloatsEqualForScale(CGFloat, CGFloat, CGFloat)
AFUIUtilities.m
AFUIGraphicalFloatsEqualForScale cannot compute equivalence for scale of 0
ComponentName
ComponentVersion
ComponentID
Title
Description
Classification
Reproducibility
Screenshot
Attachments
Keywords
DeviceIDs
tap-to-radar
Serious Bug
I Didn't Try
v32@?0@"AFAccount"8Q16^B24
image/png
-[AFUITapToRadarManager attachData:name:mimeType:]
-[AFUITapToRadarManager attachFileAtPath:image:]
Please describe the bug you encountered:
- Hostname: %@
en-US
- Siri language: %@
- Context Collector: 
- Context Collectors: 
  %@
v32@?0@"NSString"8Q16^B24
 "%@"
com.apple.SiriViewService
-[AFUIPreferences initWithDefaultsAtURL:]
SiriUI
siri_ttr
-[AFUIBugReportPresenter _requestToPresentDebugController:]_block_invoke
-[AFUIBugReportPresenter _requestToOpenURL:]_block_invoke_2
-[AFUIBugReportPresenter _requestToOpenURL:]_block_invoke
-[AFUIBugReportPresenter _requestToPresentInternalDebugController:]_block_invoke_2
-[AFUIBugReportPresenter _conversationDataFromConversation:]
Siri Debug
v16@?0@"UIAlertAction"8
File a radar
Siri Internal Settings
Internal Debug UI
Cancel
prefs:root=INTERNAL_SETTINGS&path=Siri
Would you like to attach a screenshot ?
v32@?0@8Q16^B24
-[AFUIDelayedActionCommandCache enqueueDelayedActionCommand:completion:]
SiriDelayedActionCommandAssertion-%@
-[AFUIDelayedActionCommandCache cancelDelayedActionWithDelayedActionCancelCommand:completion:]
-[AFUIDelayedActionCommandCache _performDelayedActionCommandTimerAction:]
-[AFUIDelayedActionCommandCache invalidatePendingCommands]
-[AFUIDelayedActionCommandCache _invalidateDelayedActionTimer:withKey:]
-[AFUIDelayedActionCommandCache performDismissalCommands]
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]_block_invoke_2
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]_block_invoke
v32@?0@"<SAClientBoundCommand>"8Q16^B24
-[AFUISiriTapPanDismissalPolicyManager idleAndQuietDidChange:forSessionState:dimmingLayerVisible:]
-[AFUISiriTapPanDismissalPolicyManager idleAndQuietDidChange:forSessionState:]
-[AFUISiriTapPanDismissalPolicyManager dimmingLayerVisibilityDidChange:forSessionState:]
AFUISiriTapPanDismissalPolicyManager.m
Can't perform policy updates for iPad from a different device class
-[AFUISiriTapPanDismissalPolicyManager _dismissalPolicyForPassThroughUnlessDimmed:forSessionState:]
-[AFUISiriTapPanDismissalPolicyManager _setShouldDismissForTapsAndPans:shouldDelayDelegateUpdate:]
#TRUNCATED
SiriUserUtteranceKeyboardInitiated
@{tts#
\pause=500\}
_DKLocationApplicationActivityMetadataKey-phoneNumber
com.apple.siri.businessLocation
/app/locationActivity
AFUIStoreServicesData
RegionalBehaviorGB18030
location-reminders
DeviceSupportsNavigation
CellularTelephonyCapability
FEET_ABBREVIATION
Localizable
MILES_ABBREVIATION
METERS_ABBREVIATION
KILOMETERS_ABBREVIATION
-[SADistance(AssistantUIAdditions) afui_abbreviatedUnit]
-[SAUIAppPunchOut(AssistantUIAdditions) afui_populateStoreServicesData:]_block_invoke_2
-[SAUIAppPunchOut(AssistantUIAdditions) afui_populateStoreServicesData:]_block_invoke
v24@?0@"AMSLookupResult"8@"NSError"16
PUNCHOUT_FAILURE_FOR_APP
SPEAKABLE_PUNCHOUT_FAILURE_FOR_APP
PUNCHOUT_FAILURE_GENERIC
PUNCHOUT_APP_NOT_AVAILABLE_IN_STOREFRONT
SPEAKABLE_PUNCHOUT_APP_NOT_AVAILABLE_IN_STOREFRONT
INSTALL_APP_BUTTON_TITLE
%@://%@
com.apple.siri.CarDisplay
com.apple.siri.CarDisplay.UIFree
com.apple.MobileSMS
com.apple.mobilePhone
AFUIStarkBackgroundViewModeUnset
AFUIStarkBackgroundViewModeSmall
AFUIStarkBackgroundViewModeFullScreen
AFUIStarkBackgroundViewModeFullScreenSystem
AFUIStarkBackgroundViewModeGetName
+[AFUIStarkUtilities backgroundViewModeForRequestSource:directActionEvent:]
/System/Library/Assistant/DebugOverrides.plist
dashBoardPasscodeBackground
d16@?0d8
-[AFUIDisambiguationAnalyticsManager logDisambiguationItemSelected:]
manual
type
aceId
title
@"NSDictionary"8@?0
@unionOfArrays.self
com.apple.siri.Compact
-[AFUIAudioPlayer startPlaying]
AFUIAudioPlayer.m
This method should be overwritten by child class!
-[AFUIAudioPlayer audioPlayerDidFinishPlaying:successfully:]
com.apple.siri.EyesFree
SpeechRecognition
UUID
VIEWMODE
SESSIONID
-[AFUISiriViewController initWithConnection:configuration:requestSource:displayConfiguration:]
Siri Remote View Controller Message Queue
B12@?0B8
-[AFUISiriViewController initWithConnection:configuration:requestSource:displayConfiguration:]_block_invoke
persistent_phone
-[AFUISiriViewController dealloc]
-[AFUISiriViewController requestStatusBarVisible:animated:completion:]
AFUISiriViewController.m
%@ can only be used on the main thread
-[AFUISiriViewController enterUITrackingMode]
-[AFUISiriViewController exitUITrackingMode]
-[AFUISiriViewController proximityStatusChanged:]
-[AFUISiriViewController animatedAppearanceWithFactory:completion:]
-[AFUISiriViewController animatedDisappearanceWithFactory:completion:]
-[AFUISiriViewController animatedDisappearanceWithFactory:completion:]_block_invoke
-[AFUISiriViewController setFluidDismissalState:]
-[AFUISiriViewController loadView]
com.apple.siri.ui.begin
com.apple.siri.ui.end
-[AFUISiriViewController viewWillAppear:]
-[AFUISiriViewController viewDidAppear:]
-[AFUISiriViewController viewWillDisappear:]
-[AFUISiriViewController viewDidDisappear:]
-[AFUISiriViewController _setVoiceTriggerEnabled:]
Disabled
No change
-[AFUISiriViewController _presentRemoteViewController]
-[AFUISiriViewController _presentRemoteViewController]_block_invoke
-[AFUISiriViewController siriRemoteViewControllerDidFinishDismissing:]
-[AFUISiriViewController dismissSiriRemoteViewController:userInfo:withReason:]
-[AFUISiriViewController siriRemoteViewController:setCarDisplaySnippetMode:]
-[AFUISiriViewController siriRemoteViewController:requestsDismissalWithReason:withCompletion:]
-[AFUISiriViewController _setStatusViewHidden:]
-[AFUISiriViewController _setShowKeyboardIfTextInputEnabled:minimized:]
requestSource
-[AFUISiriViewController _handleMicButtonTapFromSource:]
Unknown Siri status session state %ld
-[AFUISiriViewController _handleMicButtonLongPressBeganFromSource:]
-[AFUISiriViewController _handleMicButtonLongPressEndedFromSource:]
ASSISTANT_UNLOCK_TITLE
-[AFUISiriViewController _handlePasscodeUnlockAndCancelRequest:dismissOnFailure:withCompletion:]_block_invoke
-[AFUISiriViewController showPasscodeUnlockScreenForRequest:unlockCompletion:]
ASSISTANT_REMOTE_AUTHENTICATION_TITLE
ASSISTANT_REMOTE_AUTHENTICATION_SUBTITLE
ASSISTANT_FIRST_UNLOCK_TITLE
-[AFUISiriViewController siriDidDeactivate]
-[AFUISiriViewController setCarDNDActive:]
-[AFUISiriViewController startRequestWithOptions:completion:]
No UI request options.
triggerEndMachTime
-[AFUISiriViewController handleViewFullyRevealed]
-[AFUISiriViewController _holdToTalkTriggerDidReleaseFromSource:]
-[AFUISiriViewController _holdToTalkThresholdHasElapsed]
-[AFUISiriViewController _enterHoldToTalkMode]
-[AFUISiriViewController _transitionToAutomaticEndpointMode]
-[AFUISiriViewController _transitionToManualEndpointMode]
-[AFUISiriViewController _exitHoldToTalkMode]
-[AFUISiriViewController _activationTriggerDidRelease:]
-[AFUISiriViewController startRequestWithActivationTrigger:completion:]
-[AFUISiriViewController endSession]
-[AFUISiriViewController siriSession:willProcessAppLaunchWithBundleIdentifier:]
-[AFUISiriViewController siriSession:failedToLaunchAppWithBundleIdentifier:]
-[AFUISiriViewController siriSession:didChangeToState:event:machAbsoluteTransitionTime:]
-[AFUISiriViewController siriSessionWillEnd:]
-[AFUISiriViewController siriSessionDidEnd:]
-[AFUISiriViewController siriSession:speechRecordingDidBeginOnAVRecordRoute:]
-[AFUISiriViewController shouldNonLocalDelegateHandlePunchouts]
-[AFUISiriViewController hideVoiceActivationMaskViewIfNecessary]_block_invoke
NSString *getSSScreenshotsDisplayModeWillChangeToFullscreenNotificationName(void)
SSScreenshotsDisplayModeWillChangeToFullscreenNotificationName
void *ScreenshotServicesLibrary(void)
/siri/ui
_PSSiriNLLogger
Class get_PSSiriNLLoggerClass(void)_block_invoke
void *PeopleSuggesterLibrary(void)
backgroundColor
-[AFUISiriCompactView _micButtonTapped:]
-[AFUISiriCompactView _micButtonHeld:]
-[AFUISiriCompactView animateOrbViewDismissalWithCompletion:]
-[AFUISiriCompactView setSiriSessionState:]
-[AFUISiriCompactView backgroundBlurViewController:didSetBlurVisibilityTo:]
visible
not visible
-[AFSpeakableUtteranceParser(AssistantUIAdditions) afui_hasExternalDomainsForStringWithFormat:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
+[AFSpeakableUtteranceParser(AssistantUIAdditions) _domainsForStringWithFormat:]
-[AFUISiriCarPlayBackgroundView setBackgroundViewMode:]
-[AFUISiriCarPlayBackgroundView _updateViewsForVisibility:backgroundViewMode:]
-[AFUINetworkAvailabilityStateMachine _performTransitionForEvent:]
SRSiriAvailabilityEventConnectionAvailable
SRSiriAvailabilityEventConnectionOffline
SRSiriAvailabilityEventNotUnlocked
v32@?0@"UIImage"8@"UIImage"16@"SAUIAppPunchOut"24
com.apple.siri.DebugErrorDomain
auraLight
@"UIColor"16@?0@"UITraitCollection"8
application/x-gzip
application/octet-stream
ASSISTANT_ALERT_TITLE
ASSISTANT_ALERT_TEXT
ASSISTANT_ALERT_DISMISS
com.apple.siri.siri_enabled_from_siri_setup
-[AFUISiriSetupViewController _continueWithLanguageCode:commitLanguageCodeToPreferences:]
-[AFUISiriSetupViewController _laterTapped:]
BYFlowSkipController
Class getBYFlowSkipControllerClass(void)_block_invoke
AFUISiriSetupViewController.m
NSString *getBYFlowSkipIdentifierSiri(void)
BYFlowSkipIdentifierSiri
Siri log manager queue
text/*
siri_view_hierarchy_description.txt
v16@?0@"NSString"8
siri-card
^%@-
SpeechLogs
.*\.spx$
audio/speex
.*\.opx$
audio/opus
.*\.wav$
audio/wav
VoiceTrigger
audio
.*\.log$
/bin/cp %@ %@
.*\.*$
/bin/cp -r %@ %@
/var/mobile/Library/VoiceTrigger/SAT
/SAT
/usr/local/bin/codecctl AppleCS42L71Audio dump
/codec_dump.txt
/usr/sbin/ioreg -c com_apple_audio_IOBorealisOwl -r -w 0
/IOBorealisOwl_dump.txt
/usr/local/bin/boreaowlctl --dump-fw
/boreaowlctl_dump.txt
/usr/sbin/ioreg -c AppleEmbeddedAudioDevice -r -w 0
/AppleEmbeddedAudioDevice_dump.txt
voicetrigger.tar.gz
VoiceServices
+[AFUIDebugLogManager executeSystemCommand:stdoutTo:]
application/x-plist
^%@_.*\.log$
text/plain
-[AFUIDebugLogManager _captureLogsAtURL:logName:sinceTime:pattern:mimeType:completion:]_block_invoke_2
B24@?0@"NSURL"8@"NSDictionary"16
%@-latest
/usr/bin/tar czf %@ -C %@ %@
Unable to archive directory.
ArchiveCommand
application/x-gtar
/var/mobile/Library/Logs/CrashReporter
-[AFUIDebugLogManager _contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:]_block_invoke
q24@?0@"NSURL"8@"NSURL"16
CardLogs
-[AFUISiriCarPlayView _orbTappedWithGestureRecognizer:]
-[AFUISiriCarPlayView _orbHeldWithGestureRecognizer:]
-[AFUISiriCarPlayView backgroundView:requestsCarPlayStatusBarOverride:animationSettings:]
NOT BE
:@ffffff
?333333
@333333
softlink:r:path:/System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
softlink:r:path:/System/Library/PrivateFrameworks/StorageSettings.framework/StorageSettings
softlink:o:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
softlink:o:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:o:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
softlink:r:path:/System/Library/PrivateFrameworks/ScreenshotServices.framework/ScreenshotServices
softlink:r:path:/System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester
softlink:r:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
AFUISceneHostingViewController
AFUISceneControllerDelegate
NSObject
VSAdditions
AFUIModalTextViewController
AFUIVoicemailPlayer
AFUISiriView
SiriUISiriStatusViewDelegate
AFUISiriContent
AFUISiriRemoteViewHosting
AFUICloudStorageViewController
AFUITouchPassThroughView
AFUIRemoteImageRepresentation
NSItemProviderWriting
AFUIViewControllerHosting
AFUISiriRemoteSceneViewController
SiriUIPresentationRemoteControlling
AFUIViewControllerServing
AFUISiriSessionDelegate
AFUISiriSessionListener
AFUISiriSession
AFAssistantUIService
AFSpeechDelegate
SRUIFStateMachineDelegate
AFUISiriLanguage
AFUISiriViewBuilder
AFUISceneConfiguration
NSCopying
AFUISiriRemoteContainerView
AFUITTRController
AssistantUIAdditions
AFUISceneController
FBSceneObserver
FBApplicationUpdateScenesTransactionObserver
BSTransactionObserver
_AFUIDataStoringShim
AFUIDataStoring
AFUIStateMachine
AFUIGuideCacheManager
AFUISceneSpecification
AFUIStarkSceneSpecification
AFUISceneClientSettings
AFUIMutableSceneClientSettings
AFUISiriEyesFreeView
AFUIUtilities
AFUITapToRadarManager
AFUIBugReporting
AFUIPreferences
AFUIBugReportPresenter
AFUIDebugControllerDelegate
AFUIInternalDebugControllerDelegate
AFUIBugReportPresenting
_AFUIAssertingDelayedActionCommand
AFUIDelayedActionCommandCache
AFUISiriTapPanDismissalPolicyManager
SiriUI
KeyboardInitiated
SARecordActivity
AFUIStarkUtilities
AFUIPasscodeBlurView
AFUIDisambiguationAnalyticsManager
AFUITestInput
AFUIAudioPlayer
AVAudioPlayerDelegate
AFUISiriViewController
AFUINetworkAvailabilityStateMachineDelegate
AFUISiriRemoteSceneViewControllerDataSource
AFUISiriRemoteSceneViewControllerDelegate
AFUISiriViewDelegate
AFUISiriContentDelegate
AFUISiriCompactViewDelegate
SiriUIAudioRoutePickerControllerDelegate
AFUISiriSessionLocalDataSource
AFUISiriSessionLocalDelegate
AFUISiriViewDataSource
SiriUIKeyboardViewDelegate
AFUISiriTapPanDismissalPolicyManagerDelegate
SRUIFDelayedActionCommandCacheDelegate
A!!g
AFUIAudioMessagePlayer
AFUISiriCompactDimmingView
AFUISiriCompactView
UIGestureRecognizerDelegate
SiriUIBackgroundBlurViewControllerDelegate
SUICOrbViewControlling
AFUISiriCarPlayBackgroundView
AFUINetworkAvailabilityStateMachine
RadiosPreferencesDelegate
AFUIImageResource
AFUIDebugError
AFUISiriCarPlayFullScreenBackgroundView
AFUIDebugLog
AFUISiriSetupViewController
UIAdaptivePresentationControllerDelegate
AFUIDebugLogManager
AFUISiriCarPlayView
AFUISiriCarPlayBackgroundViewDelegate
init
_commonInit
initWithCoder:
setDelegate:
viewWillAppear:
sharedApplication
activeInterfaceOrientation
scene
settings
isForeground
setAnimationFence:
setAnimationSettings:
isUISubclass
setInterfaceOrientation:
setFrame:
updateSettingsWithTransitionBlock:
updateRemoteSceneWithFrontMostAppInterfaceOrientation:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
preferredDeferralMode
traitCollection
userInterfaceStyle
setUserInterfaceStyle:
localizedDescription
presentation
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setScene:
uiPresentationManager
identifier
stringWithFormat:
createPresenterWithIdentifier:
setAppearanceStyle:
setPresentedLayerTypes:
modifyPresentationContext:
setPresentation:
activate
presentationView
contentState
_transitionContentsWithView:forContentState:
requestSceneViewWithConfiguration:completionBlock:
_audioCategoriesDisablingVolumeHUDDidChangeTo:
deactivate
stopHostingScene
invalidateSceneForReason:explanation:
superview
view
window
_updateDeferralChainWithWindow:
invalidate
updateSceneViewWithConfiguration:
removeFromSuperview
bounds
addSubview:
updateSettingsWithBlock:
traitCollectionDidChange:
_updateSceneUIApplicationSceneSettingsWithBlock:
effectiveSafeAreaInsets
setSafeAreaInsetsPortrait:
safeAreaInsetsPortrait
viewSafeAreaInsetsDidChange
_updateSceneSafeAreaInsets
safeAreaInsetsAreSuspended
suspendedSafeAreaInsets
safeAreaInsets
setSuspendedSafeAreaInsets:
setSafeAreaInsetsAreSuspended:
configuration
deactivationReasonMask
isSceneActive
updateSceneDeactivationReasonMask:
copy
setDeactivationReasonMask:
updateSceneWithConfiguration:
viewWillTransitionToSize:withTransitionCoordinator:
containerView
_toWindowOrientation
transitionDuration
settingsWithDuration:
windowScene
_synchronizedDrawingFence
_updateSceneSettingsToSize:interfaceOrientation:withAnimationSettings:animationFence:
animateAlongsideTransition:completion:
viewWillLayoutSubviews
_shouldDeferHIDEventsForMode
uiClientSettings
_contextId
clientWindowContextID
tokenForIdentifierOfCAContext:
setDisplay:
setToken:
keyboardFocusEnvironment
setEnvironment:
clientProcess
setPid:
sharedInstance
deferEventsMatchingPredicate:toTarget:withReason:
isValid
_handleSceneDidActivateWithIdentifier:
_handleInvalidationForReason:explanation:
audioCategoriesDisablingVolumeHUD
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sceneConfigurationForDelegate
sceneController:sceneContentStateDidChange:
sceneController:willInvalidateScene:forReason:
sceneController:sceneWasInvalidated:forReason:
sceneController:sceneDidUpdateClientSettings:
startHostingSceneForConfiguration:withCompletionBlock:
isHostingScene
isDeferringHIDEvents
startDeferringHIDEventsIfNeeded
invalidateAndPauseDeferringHIDEvents
setWindowSceneHostingView:
setInFluidDismissal:
reactivateScene
deactivateScene
viewDidMoveToWindow:shouldAppearOrDisappear:
_hasScene
deferralMode
isInFluidDismissal
sceneController
setSceneController:
windowSceneHostingView
predicateInvalidationHandler
setPredicateInvalidationHandler:
pauseDeferrals
setPauseDeferrals:
currentOrientation
setCurrentOrientation:
currentFrame
setCurrentFrame:
setEffectiveSafeAreaInsets:
.cxx_destruct
_inFluidDismissal
_pauseDeferrals
_safeAreaInsetsAreSuspended
_deferralMode
_configuration
_sceneController
_windowSceneHostingView
_presentation
_scene
_predicateInvalidationHandler
_currentOrientation
_currentFrame
_effectiveSafeAreaInsets
_suspendedSafeAreaInsets
T@"AFUISceneController",&,N,V_sceneController
T@"UIView",&,N,V_windowSceneHostingView
T@"<UIScenePresenter>",&,N,V_presentation
T@"FBScene",&,N,V_scene
T@"<BSInvalidatable>",&,N,V_predicateInvalidationHandler
TB,N,V_pauseDeferrals
Tq,N,V_currentOrientation
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_currentFrame
TB,N,V_safeAreaInsetsAreSuspended
T{UIEdgeInsets=dddd},N,V_effectiveSafeAreaInsets
T{UIEdgeInsets=dddd},N,V_suspendedSafeAreaInsets
Tq,R,N,V_deferralMode
T@"AFUISceneConfiguration",R,N,V_configuration
inFluidDismissal
TB,N,GisInFluidDismissal,V_inFluidDismissal
gender
footprint
VSSpeechGender
VSSpeechFootprint
isCustom
isBuiltInVoice
languages
languageCode
containsObject:
contentVersion
isEqualToNumber:
masteredVersion
isEqualToString:
isMatchForVoiceAsset:
setTitle:
donePressed
initWithBarButtonSystemItem:target:action:
navigationItem
setRightBarButtonItem:
initWithFrame:
setText:
preferredFontForTextStyle:
setFont:
setEditable:
setTextContainerInset:
setContentOffset:
setView:
initWithRootViewController:
setModalPresentationStyle:
presentViewController:animated:completion:
parentViewController
dismissViewControllerAnimated:completion:
initWithTitleText:andBodyText:
loadView
presentFromParentViewController:
_bodyText
initWithPath:
load
setPlaybackCommand:
_setVoicemailObject:
_audioURL
URLByDeletingPathExtension
lastPathComponent
integerValue
_voicemailManager
_voicemailID
voicemailWithIdentifier:
duration
currentTime
_voicemailObject
markVoicemailAsRead:
playbackCommand
voiceMailId
_updateVoicemailPlayedState:finished:
audioPlayerDidFinishPlaying:successfully:
_audioCategory
_audioOptions
voicemailObject
T@"VMVoicemail",&,N,G_voicemailObject,S_setVoicemailObject:,V_voicemailObject
siriViewMode
_setupContentViews
_updateSiriStatusViewForMode:
_wantsBackdropView:
initWithPrivateStyle:
_reducesMotionEffects
setUsesZoom
frame
layer
setAllowsGroupOpacity:
_destroyAssistantVersionLabelIfNecessary
setNeedsLayout
setFlamesViewDeferred:
sizeToFit
setDisabledMicOpacity:
_updateControlsAppearance
availabilityState
_configureEyesFreeLogo
effectWithStyle:
effectForBlurEffect:
initWithEffect:
siriui_lightWeightFontWithSize:
setCustomView:
defaultCenter
removeObserver:name:object:
dealloc
layoutSubviews
_remoteContentViewFrame
_lockViewFrame
setFlamesViewWidth:
_statusViewContainerFrame
_buttonInset
sizeThatFits:
statusViewHeight
setHitTestEdgeInsets:
_layoutReportBugButton
isHidden
safeAreaInsetsDidChange
_setSafeAreaInsetsSuspended:
_animateView:fromYPosition:toYPosition:fade:completion:
_animateButtonsHidden:
setMode:
setAlpha:
_isTextInputEnabled
setHidden:
_setupButtonsIfNecessary
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
setUserInteractionEnabled:
paused
setPaused:
setInUITrackingMode:
setupOrbIfNeeded
fadeOutCurrentAura
reloadData
userAccountCountForSiriView:
assistantVersionForSiriView:
activeAccountForSiriView:
length
_createAssistantVersionLabelIfNecessary
transitionToPrivateStyle:
dimBackdropSettings
transitionToSettings:
setShouldRasterizeEffectsView:
settingsForPrivateStyle:
setBlurRadius:
setScale:
_placeRemoteContentView
insertSubview:aboveSubview:
flamesContainerView
insertSubview:belowSubview:
insertSubview:below:
_setupVoiceActivationMaskView
setStatusViewHidden:
animateWithDuration:animations:completion:
blackColor
setBackgroundColor:
setBackdropVisible:
forceMicVisible:
_audioRouteButtonTapped:
addTarget:action:forControlEvents:
_setTouchInsets:
insertSubview:above:
_showsReportBugButton
animateWithDuration:animations:
setBluetoothOn:
delegate
siriViewDidReceiveAudioRouteAction:
sharedPreferences
debugButtonIsEnabled
showsHoldToTalkIndicator
_createReportBugButtonWithTemplateImage:andConfigureWithHoldToTalkState:
_loadReportBugButtonTemplateImageInBackgroundWithCompletion:
_configureReportBugButtonWithHoldToTalkState:
buttonWithImageTemplate:style:
_reportBugButtonTapped
_reportBugButtonLongPressed
initWithTarget:action:
addGestureRecognizer:
_shouldIndicateHoldToTalkMode
colorWithRed:green:blue:alpha:
colorWithAlphaComponent:
siriui_transparantButtonColor
siriui_transparantHighlightedButtonColor
setDefaultColorForTemplate:
setHighlightColorForTemplate:
bundleWithPath:
imageNamed:inBundle:
imageWithRenderingMode:
siriViewDidReceiveReportBugAction:
siriViewDidReceiveBugButtonLongPress:
setEnabled:
buttonWithHelpImageMask
_helpButtonTapped:
siriViewDidReceiveHelpAction:
_helpButtonIsVisible
setEmphasized:
pulse
alpha
siriui_platterVibrancyEffect
bundleForClass:
mainScreen
imageNamed:inBundle:compatibleWithTraitCollection:
whiteColor
_flatImageWithColor:
initWithImage:
begin
setCompletionBlock:
setKeyPath:
numberWithDouble:
setFromValue:
setToValue:
setMass:
setStiffness:
setDamping:
addObject:
numberWithInt:
setRemovedOnCompletion:
defaultTimingFunction
setTimingFunction:
defaultAnimationDuration
setDuration:
setBeginTime:
setFillMode:
setAnimations:
addAnimation:forKey:
commit
floatValue
setOpacity:
setAnchorPoint:
setPosition:
audioRecordingPowerLevelForSiriView:
siriViewDidRecieveStatusViewTappedAction:
siriViewDidRecieveStatusViewHoldDidBeginAction:
siriViewDidRecieveStatusViewHoldDidEndAction:
siriViewShouldSupportTextInput:
siriView:didReceiveSiriActivationMessageWithSource:
foregroundContainerView
audioLevelForSiriStatusView:
siriStatusViewWasTapped:
siriStatusViewHoldDidBegin:
siriStatusViewHoldDidEnd:
safeAreaInsetsForSiriStatusView:
remoteContentView
setRemoteContentView:
T@"UIView",&,N
siriSessionState
setSiriSessionState:
mode
showPasscodeUnlockWithStatusText:subtitle:completionHandler:unlockCompletionHandler:
setVoiceActivationMaskViewVisible:
setAuxiliaryViewsHidden:animated:
setSiriContentDelegate:
setContentViewsAlpha:
setRequestHandlingStatus:
Tq,N
initWithFrame:configuration:
setDisabled:
setStatusViewUserInteractionEnabled:
flamesViewPaused
setFlamesViewPaused:
teardownStatusView
setDataSource:
backgroundBlurView
setBackdropShouldRasterize:
updateForPercentageRevealed:
setShowAudioRoutePicker:
setAudioRoutePickerBluetoothOn:
_preferencesDidChange:
configureReportBugButtonToShowHoldToTalkState:
setBugReportingAvailable:
_configureHelpButton
setHelpButtonEmphasized:
setHelpButtonDeferred:
pulseHelpButton
cancelShowingPasscodeUnlock
siriDidActivateFromSource:
dataSource
disabled
foregroundView
_backdropView
_backdropViewVisible
_safeAreaInsetsSuspended
_dimmingAndLockContainer
_statusViewContainer
_audioRoutePickerButton
_helpButton
_reportBugButton
_voiceActivationMaskView
_lockContainerView
_inShowUnlockViewAnimation
_inHideUnlockViewAnimation
_remoteContentViewHidden
_lockViewHidden
_flamesViewDeferred
_helpButtonDeferred
_statusViewHidden
_flamesViewPaused
_keepStatusViewHidden
_eyesFreeEffectView
_eyesFreeLogoView
_assistantVersionLabel
_assistantVersionVisualEffectView
_foregroundView
_foregroundContainerView
_backgroundBlurView
_siriSessionState
_mode
_statusViewHeight
_siriStatusView
_disabled
_remoteContentView
_dataSource
_delegate
T@"<AFUISiriViewDataSource>",W,N,V_dataSource
T@"<AFUISiriViewDelegate>",W,N,V_delegate
TB,N,V_disabled
T@"UIView",R,N,V_foregroundView
T@"UIView",R,N,V_foregroundContainerView
T@"_UIBackdropView",R,N
Td,R,N
Tq,N,V_siriSessionState
Tq,N,V_mode
T@"UIView",&,N,V_remoteContentView
viewDidLoad
didReceiveMemoryWarning
specifierForAppIdentifier:
setVersionLabelEnabled:
groupSpecifierWithID:
setProperty:forKey:
handleDisableAndDeleteButtonPress
deleteButtonSpecifierWithName:target:action:
confirmDisableForMultiUserVoiceIdentification
confirmDisable
fetchMultiUserVoiceIdentificationSetting:
dictionaryWithObjects:forKeys:count:
setupWithDictionary:
setTarget:
setConfirmationAction:
showConfirmationViewForSpecifier:
_disableAndDeleteCloudSync
disableAndDeleteCloudSyncWithCompletion:
specifiers
_settings
localizedStringForKey:value:table:
hitTest:withEvent:
arrayWithObjects:count:
dataWithContentsOfURL:options:error:
writableTypeIdentifiersForItemProvider
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
itemProviderVisibilityForRepresentationWithTypeIdentifier:
T@"NSArray",R,C,N
initWithImageURL:
imageURL
setImageURL:
image
setImage:
_queue
_imageURL
_image
T@"NSURL",C,N,V_imageURL
T@"UIImage",&,N,V_image
initWithMachServiceName:options:
_invalidated
setInvalidationHandler:
_interrupted
setInterruptionHandler:
remoteObjectInterface
setRemoteObjectInterface:
exportedInterface
setExportedInterface:
setExportedObject:
_setQueue:
serviceRequestsActivationSourceWithReplyHandler:
serviceRequestsDismissalWithUserInfo:withReason:
serviceStartGuidedAccess
serviceBulletinWithIdentifier:replyHandler:
serviceStartRequestWithOptions:
serviceUserRelevantEventDidOccur
siriIdleAndQuietStatusDidChange:
setFullScreenDimmingLayerVisible:animated:
setCarDisplaySnippetMode:
setStatusViewDisabled:
serviceWillPresentViewControllerWithStatusBarStyle:
serviceDidPresentViewControllerWithStatusBarStyle:
serviceWillDismissViewControllerWithStatusBarStyle:
serviceDidDismissViewControllerWithStatusBarStyle:
setStatusBarHidden:animated:
setStatusBarHidden:animated:completion:
getScreenshotWithReplyHandler:
handlePasscodeUnlockWithCompletion:
serviceDidPresentUserInterface
serviceDidPresentConversationFromBreadcrumb
serviceDidDetectMicButtonTap
serviceDidDetectMicButtonLongPressBegan
serviceDidDetectMicButtonLongPressEnded
servicePresentationDidChangePeekMode:
serviceDidEnterUITrackingMode
serviceDidExitUITrackingMode
serviceDidDetectAudioRoutePickerTap
serviceViewControllerRequestsKeyboardWithCompletion:
serviceDidRequestKeyboard:minimized:
serviceDidRequestKeyboard:
serviceDidResetTextInput
serviceWillBeginEditing
serviceDidEndEditing
serviceRequestsHIDEventDefferal
serviceCancelHIDEventDefferal
serviceDidRequestCurrentTextInput:
serviceViewControllerRequestsPresentation:
serviceViewControllerRequestsDismissalWithDismissalReason:completion:
openURL:bundleId:inPlace:completion:
servicePresentedIntentWithBundleId:
serviceDidPresentBugReporter
serviceDidDismissBugReporter
setTypeToSiriViewHidden:
setShouldDismissForTapOutsideContent:
setShouldDismissForTapsOutsideContent:
setShouldDismissForSwipesOutsideContent:
requestHostBlurVisible:reason:fence:
presentationDidPresentKeyboard
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
_connection
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
processIdentifier
initWithFormat:
resume
stringForInvalidationReason:
siriRemoteViewControllerDidFinishDismissing:
siriRemoteViewController:invalidatedForReason:explanation:
isEqualToArray:
siriRemoteViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriRemoteViewController:sceneDidActivateWithIdentifier:
viewDidAppear:
viewDidDisappear:
serviceViewControllerProxyWithErrorHandler:
siriRemoteViewControllerRequestsActivationSource:
dismissSiriRemoteViewController:userInfo:withReason:
startGuidedAccessForRemoteViewController:
siriRemoteViewController:bulletinWithIdentifier:
siriRemoteViewController:startRequestWithOptions:
userRelevantEventDidOccurInSiriRemoteViewController:
siriRemoteViewController:didRequestCurrentTextInputWithReplyHandler:
siriRemoteViewController:siriIdleAndQuietStatusDidChange:
siriRemoteViewController:setStatusViewHidden:
siriRemoteViewController:setTypeToSiriViewHidden:
siriRemoteViewController:setFullScreenDimmingLayerVisible:animated:
siriRemoteViewController:setCarDisplaySnippetMode:
siriRemoteViewController:setStatusViewDisabled:
siriRemoteViewController:setStatusViewUserInteractionEnabled:
siriRemoteViewController:willPresentViewControllerWithStatusBarStyle:
siriRemoteViewController:didPresentViewControllerWithStatusBarStyle:
siriRemoteViewController:willDismissViewControllerWithStatusBarStyle:
siriRemoteViewController:didDismissViewControllerWithStatusBarStyle:
siriRemoteViewController:setStatusBarHidden:animated:
siriRemoteViewController:setStatusBarHidden:animated:completion:
siriRemoteViewController:setHelpButtonEmphasized:
siriRemoteViewController:setBugReportingAvailable:
siriRemoteViewController:setRequestHandlingStatus:
imageWithCGImage:
siriRemoteViewController:handlePasscodeUnlockWithCompletion:
siriRemoteViewControllerPulseHelpButton:
siriRemoteViewController:didRequestKeyboard:
siriRemoteViewController:didRequestKeyboard:minimized:
siriRemoteViewControllerDidResetTextInput:
siriRemoteViewController:requestsKeyboardWithCompletion:
siriRemoteViewControllerWillBeginEditing:
siriRemoteViewControllerDidEndEditing:
siriRemoteViewControllerRequestsHIDEventDefferal:
siriRemoteViewControllerCancelHIDEventDefferal:
siriRemoteViewControllerDidEnterUITrackingMode:
siriRemoteViewControllerDidExitUITrackingMode:
siriRemoteViewControllerDidPresentUserInterface:
siriRemoteViewControllerDidDetectMicButtonTap:
siriRemoteViewControllerDidDetectMicButtonLongPressBegan:
siriRemoteViewControllerDidDetectMicButtonLongPressEnded:
siriRemoteViewController:didChangePresentationPeekMode:
siriRemoteViewControllerDidPresentConversationFromBreadcrumb:
siriRemoteViewControllerDidDetectAudioRoutePickerTap:
siriRemoteViewController:requestsPresentation:
siriRemoteViewController:requestsDismissalWithReason:withCompletion:
siriRemoteViewController:presentedIntentWithBundleId:
requestBlurVisible:reason:fence:
siriRemoteViewControllerDidPresentKeyboard:
updateToPresentationWithIdentifier:presentationProperties:animated:completion:
setHostFrontMostAppOrientation:
_frontMostAppOrientation
siriWillActivateFromSource:
setRequestOptions:
preloadPresentationBundleWithIdentifier:
preloadPluginBundles
showPresentationWithIdentifier:properties:lockState:
siriRemoteViewControllerDidDeactivateScene:
siriDidDeactivateWithCompletion:
didReceiveOrbViewTapToCancelRequest
siriWillShowPasscodeUnlockAndCancelRequest:
siriWillHidePasscodeUnlockForResult:
siriDidHidePasscodeUnlock
startRequestForText:
siriKeyboardViewDidChange:
valueWithCGRect:
setStatusBarFrameValue:
setStatusViewHeightNumber:
setBottomContentInset:
setSession:
didReceiveHelpAction
didReceiveReportBugAction
didReceiveBugButtonLongPress
didReceiveShortTapActionWIthRequestOptions:
hostApplicationWillResignActive
hostApplicationWillEnterForeground
hostApplicationDidBecomeActive
setWaitingForTelephonyToStart:
valueWithCGPoint:
hasContentAtPoint:completion:
siriWillBeginTearDownForDismissalReason:withOriginalDismissalOptions:
hostApplicationPresentationStateUpdatedFromPresentationState:toPresentationState:
hostApplicationRequestsEmitUIStateTransitionForSiriDismissalWithReason:
hostApplicationRequestsEmitInstrumentationEvent:
hostApplicationRequestsEmitInstrumentationEvent:atTime:
hostApplicationDidSuccessfullyHandleCommandsInDelayedActionCommand:
hostApplicationRequestsScreenshotWithCompletion:
serviceViewControllerProxy
sessionDelegate
siriDidDeactivate
siriWillShowPasscodeUnlock
setStatusBarFrame:
setStatusViewHeight:
didReceiveShortTapActionWithRequestOptions:
applicationWillResignActive
applicationWillEnterForeground
applicationDidBecomeActive
presentationStateUpdatedFromPresentationState:toPresentationState:
emitUIStateTransitionForSiriDismissalWithDismissalReason:
emitInstrumentationEvent:
emitInstrumentationEvent:atTime:
didSuccessfullyHandleCommandsInDelayedActionCommand:
takeScreenshotWithCompletion:
_canShowWhileLocked
viewServiceApplicationInfo
remoteConnection
setRemoteConnection:
_connectionHasBeenResumed
_audioCategoriesDisablingVolumeHUD
_expectingInvalidation
_viewServiceApplicationInfo
_remoteConnection
T@"NSXPCConnection",&,N,V_remoteConnection
T@"<AFUISiriRemoteSceneViewControllerDataSource>",W,N,V_dataSource
T@"<AFUISiriRemoteSceneViewControllerDelegate>",W,N,V_delegate
T@"AFApplicationInfo",R,N,V_viewServiceApplicationInfo
siriSessionDidInitializeSessionInfo:
siriSessionDidUpdateSessionInfo:
siriSessionDidFinishRequestWithError:
siriSessionResultForAceCommand:completion:
siriSessionDidTransitionFromState:toState:event:machAbsoluteTransitionTime:
siriSessionDidStartNewTurn:
siriSessionDidStartNewTurn:associatedLaunchStartContext:machAbsoluteTime:
siriSessionRequestsInstrumentingMessage:machAbsoluteTime:
siriSessionWillStartRequestWithOptions:completion:
siriSessionWillStartRequest
siriSessionWillCancelRequest
siriSessionWillStartUIRequestWithText:completionHandler:
siriSessionAudioRecordingDidChangePowerLevel:
siriSessionDidStartAcousticIDRequest
siriSessionDidFinishAcousticIDRequestWithSuccess:
siriSessionDidChangeNetworkAvailability
siriSessionDidChangeLockState:
siriSessionOpenURL:completionHandler:
siriSessionRequestsDismissalForReason:
siriSessionWantsToCacheImage:
siriSessionIsPresentingLocalAuthenticationUI
siriSessionIsPresentingApplePaySheet
siriSessionGetRequestContextWithCompletionHandler:
siriSessionDidDetectMusic
siriSessionDidDetectSpeechStartpoint
siriSessionDidUpdateAudioSessionID:
siriSessionDidReceiveAudioSessionInterruptionBeganWithUserInfo:machAbsoluteTime:
siriSessionRequestsPlayPhaticWithCompletion:
siriSessionDidReceiveSpeechRecognizedCommand:
siriSessionDidReceiveSpeechPartialResultCommand:
siriSessionDidRecognizedAdditionalSpeechInterpretation:refId:
siriSessionDidUpdateRecognitionWithPhrases:utterances:refId:
siriSessionDidReceiveAddViewsCommand:completion:
siriSessionDidReceiveAddDialogsCommand:completion:
siriSessionDidReceiveOpenLinkCommand:completion:
siriSessionDidReceiveClearScreenCommand:completion:
siriSessionDidReceivePlayVoicemailCommand:completion:
siriSessionDidReceiveSmsPlayAudioCommand:completion:
siriSessionDidReceivePlayNotificationSound:completion:
siriSessionDidReceiveSayItCommand:completion:
siriSessionDidReceiveRepeatItCommand:completion:
siriSessionDidReceiveShowHelpCommand:completion:
siriSessionDidReceiveUpdateViewsCommand:completion:
siriSessionDidReceiveAppPunchOutCommand:completion:
siriSessionDidReceiveCloseAssistantCommand:completion:
siriSessionDidReceiveListenForPronunciationCommand:completion:
siriSessionDidReceiveGetResponseAlternativesPlaybackCommand:completion:
siriSessionDidReceiveSetSuggestedUtterancesCommand:completion:
siriSessionDidReceiveSAUIChangePrimaryUtteranceCommand:completion:
siriSessionDidReceiveSAUIShowFullScreenEffectCommand:completion:
siriSessionDidReceiveSAUIShowSpeechAlternativesCommand:completion:
siriSessionDidReceiveSAUIShowRequestHandlingStatusCommand:completion:
siriSessionDidReceiveSetUIGuidedAccessCommand:completion:
siriSessionDidReceiveHideSiriOverlayCommand:completion:
siriSessionDidReceiveGuideUpdateCommand:completion:
siriSessionDidReceiveAddContentToViewCommand:completion:
siriSessionDidReceiveShowNextCardCommand:completion:
siriSessionDidReceivePreSynthesizeTTSCommand:completion:
siriSessionDidReceiveDisambiguationItemSelected:
siriSessionDidReceivePlayContentCommand:completion:
siriSessionDidReceiveLaunchTVRemoteCommand:completion:
siriSessionDidReceiveExtendCurrentTTSCommand:completion:
siriSessionDidReceivePaginateListCommand:completion:
siriSessionDidReceiveShowNextSnippetCommand:completion:
siriSessionDidReceiveUpdateVisualResponseSnippetCommand:completion:
siriSessionDidReceiveSnippetConfigurationRequestCommand:completion:
siriSessionDidReceiveRevealRecognizedSpeechCommand:completion:
siriSessionSpeechRecordingDidChangeAVRecordRoute:
siriSessionSpeechRecordingDidEnd
siriSessionSpeechRecordingDidCancel
siriSessionSpeechRecordingDidFailWithError:
siriSessionWillShowAudioRoutePicker
siriSessionWillDismissAudioRoutePicker
siriSessionWillProcessAceCommand:
siriSessionRequestsReadoutOfBulletin:completion:
setDeviceInStarkMode:
setCarDNDActive:
setLockState:
setAnnouncementRequestsPermittedByPresentationWhileActive:
preheat
forceAudioSessionActive
forceAudioSessionActiveWithCompletion:
forceAudioSessionInactive
resumeInterruptedAudioPlaybackIfNeeded
clearContext
resetContextTypes:
rollbackClearContext
setAlertContext
setApplicationContext
startRequestWithOptions:
startRequestWithOptions:completion:
stopRequestWithOptions:
updateRequestOptions:
launchedIntoListeningAtTime:
endForReason:
telephonyRequestCompleted
stopRecordingSpeech
cancelSpeechRequest
startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:machAbsoluteTime:
performAceCommand:turnIdentifier:machAbsoluteTime:
siriUIDidPresentDynamicSnippetWithInfo:
resultDidChangeForAceCommand:
resultDidChangeForAceCommand:completion:
requestDidPresentViewForUICommand:
requestDidPresentViewForErrorCommand:
recordUIMetrics:
recordRequestMetricEvent:withTimestamp:
recordMetricsContext:forDisambiguatedAppWIthBundleIdentifier:
audioRoutePickerWillShow
audioRoutePickerWillDismiss
speechSynthesisDidFinish:
speechSynthesisDidUpdatePowerLevelTo:
didGainAttentionWithEvent:
didLoseAttentionWithEvent:
notifyStateManagerPresentationTransitionBegan
notifyStateManagerPresentationTransitionEnded
notifyStateManagerSpeakingBegan
notifyStateManagerSpeakingEnded
notifyStateManagerTransactionBegan
notifyStateManagerTransactionEnded
setInterface:forSelector:argumentIndex:ofReply:
setWithObjects:
setSpeechDelegate:
_siriNetworkAvailabilityDidChange:
addObserver:selector:name:object:
sharedManager
invalidateClient:
_discardConnectionForReason:
removeObserver:
_performBlockWithDelegate:
initWithInitialState:
addTransitionFromState:toState:forEvent:
_stateMachine
state
stateMachine:didTransitionFromState:forEvent:eventTimeStamp:
_state
siriSession:didChangeToState:event:machAbsoluteTransitionTime:
_performTransitionForEvent:eventTimeStamp:
performTransitionForEvent:eventTimeStamp:
preheatWithStyle:
initWithActivationEvent:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
forceAudioSessionActiveWithOptions:reason:completion:
understandingOnDeviceAssetsAvailable
isAvailable
isNetworkAvailable
beginMonitoringAvailability
localDataSource
_invocationEventForRequestOptions:localDataSource:
invocationSource
previousTurnIdentifier
newTurnBasedContextWithPreviousTurnID:
turnIdentifier
latestStoredTurn
sharedAnalytics
newTurnBasedInstrumentationContext
_setInstrumentationTurnContext:
_instrumentationTurnContext
formattedText
emitInstrumentation:machAbsoluteTime:
timestamp
instrumentationEvents
countByEnumeratingWithState:objects:count:
_updateModesHeuristicsForRequestOptions:
_shouldFetchActiveAccount
activeAccount
isActive
count
_updateActiveAccount:withNumberOfActiveAccounts:
fetchAccountsWithCompletion:
requestInfo
setTurnIdentifier:
requestSource
startLocalRequest
_startRequestWithInfo:completion:
legacyDirectActionIdentifier
directActionApplicationContext
_startLegacyDirectActionRequestWithInfo:context:completion:
bulletin
_startRequestForReadoutOfBulletin:
errorWithCode:description:underlyingError:
speechRequestOptions
isInitialBringUp
_startSpeechRequestWithSpeechRequestOptions:isInitialBringUp:completion:
_startSpeechRequestWithOptions:completion:
text
_startRequestWithText:completion:
speechFileURL
_startSpeechRequestWithSpeechFileAtURL:completion:
inputType
continuityInfo
_startContinuityRequestWithInfo:completion:
isPronunciationRequest
pronunciationContext
_startSpeechPronunciationRequestWithContext:options:completion:
_performTransitionForEvent:
initWithBlock:defaultValue:
_discardCurrentSpeechGroup
invokeWithValue:
_setCurrentSpeechRequestGroup:
_currentSpeechRequestGroup
_startRequestWithFinalOptions:completion:
_preparedSpeechRequestWithRequestOptions:
stopSpeechWithOptions:
updateSpeechOptions:
showServerOnUI
isPPTAvailable
_modeOverrideValue
setModeOverrideValue:
mutatedCopyWithMutator:
setModesConfiguration:
refId
views
arrayWithCapacity:
dictionary
setObject:forKey:
initWithDictionary:
encodedClassName
safeWrapResponseCompletion:
aceId
_setRefIdForAllViewsInAddViews:
af_dialogPhase
isPossiblyPartOfMultiTurnRequest
adviseSessionArbiterToContinueWithPreviousWinner:
isCompletionDialogPhase
isErrorDialogPhase
isConfirmedDialogPhase
immersiveExperience
siriSessionImmersiveExperienceRequested
_afui_usefulUserResultType
willPresentUsefulUserResultWithType:forCommand:
siriSessionDidReceiveDelayedActionCancelCommand:completion:
siriSessionDidReceiveDelayedActionCommand:completion:
siriSessionDidReceiveTakeScreenshotCommand:completion:
siriSessionDidReceiveSetUpdateMaskCommand:completion:
_handleUnlockDeviceCommand:completion:
_handleUnlockDeviceWithWatchCommand:completion:
_handleRequestUpdateViewsCommand:completion:
_performPunchoutCommand:delegate:completion:
groupIdentifier
shouldNonLocalDelegateHandlePunchouts
numberWithBool:
setRefId:
handlePunchoutCommand:completion:
_requestDidFinishWithError:
siriSessionShouldExtendAudioSessionForImminentPhoneCall
siriSessionShouldEndExtendAudioSessionForImminentPhoneCall
version
_updateAssistantVersion:
siriSession:willProcessAppLaunchWithBundleIdentifier:
siriSession:failedToLaunchAppWithBundleIdentifier:
setAssistantVersionAndGenerateLightweightInfo:
initWithBlock:
_playPhaticWithCompletion:
siriSessionRecordingPreparationHasFinished:
_continuePendingSpeechRequest
_requestContextWithCompletion:
siriSession:speechRecordingDidBeginOnAVRecordRoute:
localDelegate
recordingPowerLevel
isRecording
_requestWillStart
activationEvent
setSuppressStartAlert:
setActivationEvent:
setIsEyesFree:
serverCommandId
setServerCommandId:
setActivationEventTime:
buttonDownTimestamp
setHomeButtonDownEventTime:
expectedTimestamp
setExpectedActivationEventTime:
setIsInitialBringUp:
activationDeviceIdentifier
setActivationDeviceIdentifier:
useAutomaticEndpointing
setEndpointerOperationMode:
useStreamingDictation
setUseStreamingDictation:
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
acousticIdEnabled
setAcousticIdEnabled:
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
setSpeechSynthesisRecord:
presentationMode
setPresentationMode:
startRecordingSoundId
_startingRecordingAlertPolicyForSoundID:
setRecordingAlertPolicy:
setBeepSoundID:
newWithBuilder:
setStartingAlertBehavior:
valueForKey:
setOrderedContext:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
startSpeechRequestWithSpeechFileAtURL:
startSpeechPronunciationRequestWithOptions:pronunciationContext:
stopSpeech
_hasActiveRequest
rollbackRequest
cancelRequest
temporary
deserializationDuration
initWithOriginalCommandId:category:duration:
underlyingConnection
recordRequestMetric:withTimestamp:
sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
siriSessionAudioOutputDidChangePowerLevel:
_updateModesConfigurationForAttentionType:value:
_populateModesConfiguration:attentionType:value:
setFaceDetected:
setTouchScreenDetected:
setButtonPressDetected:
beginPresentationTransition
endPresentationTransition
beginSpeakingForClient:
endSpeakingForClient:
beginTransaction
endTransaction
setDirectActionApplicationContexts:
setApplicationContextForDirectAction:
startRequestWithInfo:
_startRequestWithBlock:
startContinuationRequestWithUserInfo:
startRequestWithText:
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:
setInvocationSource:
lockStateForSiriSession:
setIsDeviceLocked:
bulletinsForSiriSession:
setAlertContextWithBulletins:
contextAppInfosForSiriSession:
starkAppBundleIdentifierContextForSiriSession:
addObjectsFromArray:
directActionApplicationContexts
currentCarPlaySupportedOEMAppIDListForSiriSession:
sessionDelegateContext
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
siriSessionDidResetContext:
setIsDeviceInStarkMode:
setLockState:screenLocked:
successCommands
cancellationCommands
failureCommands
_performAceCommands:
siriSession:didReceiveDeviceUnlockRequestAndCancelRequest:withCompletion:
_performAceCommand:forRequestUpdateViewsCommand:afterDelay:
_performAceCommand:turnIdentifier:machAbsoluteTime:conflictHandler:
timeInSeconds
doubleValue
commands
_aceObjectExpectsTurnIdentifierWhenSendingCommand:
sendGenericAceCommand:turnIdentifier:conflictHandler:
siriServiceStream
name
UUID
UUIDString
removeObject:
siriSessionWillEnd:
siriSessionDidEnd:
cancelRequestForReason:
endSession
averagePower
_updateActiveAccount:
setActiveAccountAndGenerateLightweightInfo:
setUserAccountCountGenerateLightweightInfo:
isForEyesFree
isForBluetoothCar
isForUIFree
setIsUIFree:
isForCarDND
setIsForCarDND:
isVoiceTriggerRequest
setIsVoiceTriggerRequest:
isConnectedToCarPlay
setIsConnectedToCarPlay:
isInAutoPrompt
setIsSiriAutoPrompt:
isRequestMadeWithPhysicalDeviceInteraction
setIsRequestMadeWithPhysicalDeviceInteraction:
userTypedInSiri
setUserTypedInSiri:
getDeviceOrientation:
setDeviceOrientation:
recentButtonPressActivityDetected:
recentTouchScreenActivityDetected:
sharedSystemState
deviceScreenIsOn
setIsDeviceScreenON:
deviceLiftToWake
setLiftToWakeDetected:
initWithSuiteName:
stringForKey:
lowercaseString
_mapInvocationSource:
isForStark
directActionEvent
appBundleIdentifier
_updateCarPlayInvocationContext:fromDirectActionEvent:appBundleIdentifier:
carPlayEnhancedVoiceTriggerModeForSiriSession:
_mapEnhancedCarPlayTriggerMode:
setEnhancedVoiceTriggerMode:
setCarPlayInvocationContext:
tvRemoteType
_invocationContextFromTVRemoteType:
setTvRemoteInvocationContext:
longPressBehavior
setHardwareButtonLongPressBehavior:
setHardwareButtonInvocationContext:
setDirectAction:
setBundleID:
setRemoteType:
beginMonitoringSiriAvailability
effectiveCoreLocationBundle
assistantConnectionRequestWillStart:
assistantConnectionDismissAssistant:
assistantConnection:dismissAssistantWithReason:
assistantConnectionRequestFinished:
assistantConnection:receivedCommand:completion:
assistantConnection:requestFailedWithError:requestClass:
assistantConnection:openURL:completion:
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidBeginInterruption:userInfo:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:didHandleQuickStopWithAction:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnectionDidChangeAudioRecordingPower:
assistantConnection:speechRecognitionDidFail:
assistantConnection:speechRecognized:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
stateMachine:didTransitionFromState:forEvent:
stateMachine:descriptionForEvent:
initWithConnection:delegateQueue:
setLocalDataSource:
assistantConnection:didLoadAssistant:
isPreventingActivationGesture
isListening
_localAuthenticationUIPresented
_applePaySheetPresented
settingsConnectionDidChangeActiveAccount:
setLocalDelegate:
isEyesFree
setEyesFree:
isProcessingAcousticIdRequest
siriSessionInfo
setSiriSessionInfo:
setSessionDelegateContext:
_delegateQueue
_currentRequestDidPresent
_lastSpeechSynthesisRecord
_speechRequestGroupGraveyard
_continuePendingRequest
_sendContextBeforeContinuingSpeechRequest
_settingsConnection
_isDeviceInStarkMode
_clientStateManager
_modesConfiguration
_thinkingIntervalID
_eyesFree
_isProcessingAcousticIdRequest
_localDataSource
_localDelegate
_siriSessionInfo
_sessionDelegateContext
_directActionApplicationContexts
T@"NSArray",&,N,V_sessionDelegateContext
T@"NSArray",&,N,V_directActionApplicationContexts
connection
T@"AFConnection",R,N,G_connection
currentSpeechRequestGroup
T@"NSObject<OS_dispatch_group>",&,N,G_currentSpeechRequestGroup,S_setCurrentSpeechRequestGroup:,V_currentSpeechRequestGroup
instrumentationTurnContext
T@"AFAnalyticsTurnBasedInstrumentationContext",&,N,G_instrumentationTurnContext,S_setInstrumentationTurnContext:,V_instrumentationTurnContext
T@"<AFUISiriSessionDelegate>",&,N,V_delegate
T@"<AFUISiriSessionLocalDataSource>",W,N,V_localDataSource
T@"<AFUISiriSessionLocalDelegate>",W,N,V_localDelegate
eyesFree
TB,N,GisEyesFree,V_eyesFree
TB,R,N,V_isProcessingAcousticIdRequest
T@"SRUIFSiriSessionInfo",&,N,V_siriSessionInfo
dryRun
isReflectionDialogPhase
_computeSpokenLanguageCode
_spokenLanguageDidChange:
_currentLocaleDidChange:
initWithDelegate:
_updateSpokenLanguageCode
_setSpokenLanguageCode:
siriLanguageSpokenLanguageCodeDidChange:
bestSupportedLanguageCodeForLanguageCode:
_setupAssistantHasCompletedInitialRunAvailable
spokenLanguageCode
setupAssistantHasCompletedInitialRunChecked
setSetupAssistantHasCompletedInitialRunChecked:
setSetupAssistantHasCompletedInitialRunAvailable:
_setupAssistantHasCompletedInitialRunChecked
_spokenLanguageCode
T@"<AFUISiriLanguageDelegate>",R,W,N,G_delegate,V_delegate
T@"NSString",C,N,S_setSpokenLanguageCode:,V_spokenLanguageCode
TB,N,V_setupAssistantHasCompletedInitialRunChecked
setupAssistantHasCompletedInitialRunAvailable
TB,N,G_setupAssistantHasCompletedInitialRunAvailable,V_setupAssistantHasCompletedInitialRunAvailable
allowResizingBetweenModes
_carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation:
initWithFrame:eyesFreeMode:
initWithFrame:compactViewDelegate:
carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation:
buildSiriViewForFrame:configuration:dataSource:delegate:siriContentDelegate:
mainConfiguration
defaultSiriSceneConfigurationWithInitialBounds:onDisplay:
_setupPlatformSpecificDefaultSettings
isCarDisplay
specification
initWithSpecification:
configureMutableSceneSettings:
_applicationKeyWindow
interfaceOrientation
currentDevice
userInterfaceIdiom
setForeground:
setDisplayConfiguration:
setLevel:
setDeviceOrientationEventsEnabled:
setDeactivationReasons:
_initWithInitialBounds:displayConfiguration:
setLaunchIntent:
setPreferredDeferralMode:
setSceneLoadingTimeOutDuration:
setCancelSceneLoadingAfterTimeout:
setSceneParameters:
setInitialSafeAreaInsets:
stringByAppendingFormat:
copyWithZone:
sceneParameters
foreground
launchIntent
cancelSceneLoadingAfterTimeout
sceneLoadingTimeOutDuration
initialBounds
initialSafeAreaInsets
setBounds:
_displayConfiguration
_foreground
_cancelSceneLoadingAfterTimeout
_launchIntent
_preferredDeferralMode
_sceneLoadingTimeOutDuration
_sceneParameters
_userInterfaceStyle
_deactivationReasonMask
_initialBounds
_initialSafeAreaInsets
_bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_bounds
TB,N,V_foreground
Tq,N,V_launchIntent
Tq,N,V_preferredDeferralMode
TB,N,V_cancelSceneLoadingAfterTimeout
Td,N,V_sceneLoadingTimeOutDuration
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialBounds
T{UIEdgeInsets=dddd},N,V_initialSafeAreaInsets
T@"FBSSceneParameters",C,N,V_sceneParameters
Tq,N,V_userInterfaceStyle
TQ,N,V_deactivationReasonMask
_afui_dateStringUsingCurrentLocaleFromTemplate:
currentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
stringFromDate:
afui_longYearString
cancelSceneLoadingTimeOut
displayIdentity
_recordSceneCreateBegin
startSceneLoadingTimeOutTimerWithDuration:
identityForEmbeddedApplicationIdentifier:
initWithProcessIdentity:executionContextProvider:
identityForIdentifier:workspaceIdentifier:
updateSceneWithIdentity:parameters:transitionContext:
sceneWithIdentifier:
updateUISettingsWithBlock:
addObserver:
_recordSceneCreateEnd
error
setWaitsForSceneCommits:
isRunning
failWithReason:
sceneLoadingTimeOutDidOccur
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
destroyScene:withTransitionContext:
initWithPID:flags:reason:name:withHandler:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
transactionWillBegin:
transactionDidBegin:
transactionDidFinishWork:
transactionDidComplete:
transaction:willLaunchProcess:
transaction:didLaunchProcess:
transaction:didCreateScene:
transaction:willUpdateScene:
transaction:willCommitSceneUpdate:
transaction:didCommitSceneUpdate:
_currentConfiguration
_createTransaction
_backgroundRunningAssertion
_pendingConfigurationToApply
_sceneForeground
_invalidationReason
T@"<AFUISceneControllerDelegate>",W,N,V_delegate
setImage:forKey:
imageForKey:
setImageData:
scale
setImageData:forKey:
imageDataForKey:
imageData
initWithData:scale:
propertyListRepresentation
initWithPropertyListRepresentation:
afui_dataStoringShim
_setState:
_endStatesByEventByStartState
numberWithInteger:
objectForKey:
_descriptionForEvent:
_endStateNumberFromDictionary:forEvent:
_setState:forEvent:
performTransitionForEvent:
setEndStatesByEventByStartState:
Tq,N,S_setState:,V_state
endStatesByEventByStartState
T@"NSMutableDictionary",&,N,G_endStatesByEventByStartState,V_endStatesByEventByStartState
T@"<AFUIStateMachineDelegate>",W,N,V_delegate
_cachedGuideUpdate
guideTag
guideSnippet
suggestedUtterances
date
_shouldCheckForUpdateAtDate:lastAppUpdateTime:
_updateLastCheckedWithDate:
dataWithPropertyList:format:options:error:
_pathForCachedGuideUpdate
writeToFile:options:error:
defaultManager
removeItemAtPath:error:
setCurrentGuideTag:
afui_guideCheckSupportedFeatures
setSupportedFeatures:
updateCacheWithGuideUpdate:completion:
updateLastCheckedDate
handleCommand:commandHandler:completion:
cachedGuideTag
_checkGuideUpdateUsingAFClientLiteWithTag:
attributesOfItemAtPath:error:
dateByAddingTimeInterval:
compare:
setAttributes:ofItemAtPath:error:
_aceObjectDictionaryAtFilepath:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
cachedGuideSnippet
cachedSuggestedUtterances
shouldCheckForUpdateWithLastAppUpdateTime:
_clearCachedGuide
checkGuideUpdate
_cacheFileQueue
_isCheckingGuideUpdate
T@"NSNumber",R,N
T@"SAGuidanceGuideSnippet",R,N
T@"SAGuidanceSuggestedUtterances",R,N
clientSettingsClass
transitionContextClass
otherSettings
objectForSetting:
intValue
initWithSettings:
TI,R,N
mutableCopyWithZone:
numberWithUnsignedInt:
setObject:forSetting:
setClientWindowContextID:
TI,N
grayColor
redColor
yellowColor
greenColor
_configureEyesFreePresentation:
backdropView
systemImageNamed:
setContentMode:
setVisible:
eyesFreeMode
_eyesFreeMode
Tq,R,N,V_eyesFreeMode
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
_performWithoutRetargetingAnimations:
parsedUtteranceFromText:context:spekableObjectProviding:
siriXDebugStatusEnabled
animateUsingSpringWithStiffness:damping:animations:
parsedUtteranceFromText:context:
orbViewModeForSiriSessionState:
shouldShowSiriXIndicator
bundleWithIdentifier:
characterDirectionForLanguage:
assistantLanguageForceRTL
_assistantUILocalizedStringForKey:value:table:language:
preferredLanguages
objectAtIndex:
assistantUILocalizedStringForKey:value:table:
_assistantUIlocalizationArrayForLanguageCode:
_assistantUIStringForKey:value:table:localizationLanguageCode:
localizations
arrayWithObject:
bundleIdentifier
assistantLanguageIsRTL
assistantUILocale
assistantUILocalizedStringFromSiriLanguageForKey:table:
assistantUILocalizedStringFromSystemLanguageForKey:table:
assistantUILocalizedStringForKey:table:
afui_assistantUIFrameworkBundle
cardSections
nextCard
setCardSectionId:
setResultIdentifier:
dictionaryRepresentation
afui_hasContentEqualTo:
afui_isRemoteHeadsetActivation
afui_isRemoteVoiceActivation
originalRequestOptions
afui_isTVFollowUpHearstActivation
rangeOfString:
substringToIndex:
label
hostname
substringFromIndex:
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:isDirectory:
settlingDuration
accounts
enumerateObjectsUsingBlock:
setHostname:
_setDefaultParameterValues
setScheme:
setPercentEncodedHost:
componentsJoinedByString:
stringValue
initWithName:value:
setQueryItems:
bugReporter:openURL:
setValue:forKey:
URLWithString:
URLByAppendingPathComponent:
absoluteString
attachFileAtPath:image:
_attachmentPaths
appendFormat:
_hostname
_siriLanguage
_lastUserText
canReportBugs
composeBugReport
setSiriLanguage:
setLastUserText:
setIncludeSysdiagnosesFromDevices:
setContextCollectorsInfo:
setKeywordIdentifiers:
maximumAttachmentSize
attachData:name:mimeType:
setComponentName:componentVersion:componentID:
setEmailGroup:
T@"<AFUIBugReportingDelegate>",W,N
setDescription:
_contextCollectorsInfo
_tapToRadarParameters
setTapToRadarParameters:
setAttachmentPaths:
T@"NSString",C,N,G_hostname,V_hostname
lastUserText
T@"NSString",C,N,G_lastUserText,V_lastUserText
siriLanguage
T@"NSString",C,N,G_siriLanguage,V_siriLanguage
contextCollectorsInfo
T@"NSArray",C,N,G_contextCollectorsInfo,V_contextCollectorsInfo
tapToRadarParameters
T@"NSMutableDictionary",&,N,G_tapToRadarParameters,V_tapToRadarParameters
attachmentPaths
T@"NSMutableArray",&,N,G_attachmentPaths,V_attachmentPaths
T@"<AFUIBugReportingDelegate>",W,N,V_delegate
registerDefaults:
URLForResource:withExtension:
initWithDefaultsAtURL:
integerForKey:
doubleForKey:
boolForKey:
preferences:didChangeValueForKey:
setInteger:forKey:
_mutateValueForKey:block:
setDouble:forKey:
setBool:forKey:
synchronize
initWithDefaultsResource:withExtension:inBundle:
_userDefaults
T@"<AFUIPreferencesDelegate>",W,N,V_delegate
_requestToPresentDebugController:
_alertControllerWithActionTypes:
_requestToPresentAlertController:
_dismissViewControllerAnimated:
dismiss
_setPresentedTTRController:
bugReportPresenter:requestsToPresentViewController:
bugReportPresenter:setStatusViewHidden:
_debugControllerPresentationWillStart
_captureViewHierarchyDescriptionForController:
bugReportPresenterRequestsActiveConversation:
_utterancesFromConversation:
lastObject
_conversationDataFromConversation:
_logTime
_debugControllerPresentationDidEnd
presentWithActivationTime:utterances:conversation:completion:
presentWithActivationTime:lastUserText:conversation:completion:
_requestDeviceUnlockWithSuccessCompletion:withErrorCompletion:
_setPresentedAlertController:
bugReportPresenter:requestsToOpenURL:withCompletion:
bugReportPresenter:requestsToHandlePasscodeUnlockWithCompletion:
setViewHierarchyDescription:
bugReportPresenterRequestsPresentingView:
recursiveDescription
numberOfChildrenForItemAtIndexPath:
indexPathWithIndex:
itemAtIndexPath:
type
aceObject
af_bestTextInterpretation
bugReportPresenterRequestsLastPresentationTime:
alertControllerWithTitle:message:preferredStyle:
_actionForAlertAction:
addAction:
_actionTitleForAlertAction:
_actionStyleForAlertAction:
_actionClickedForAction:withActionType:
actionWithTitle:style:handler:
_requestToOpenURL:
_requestToPresentInternalDebugController:
bugReportPresenter:setBugReportingAvailable:
bugReportPresenter:requestsToPerformAceCommand:
bugReportPresenterShouldPromptUserForScreenshotPermission:
_confirmationAlertControllerWithTitle:onConfirmation:
_requestToPresentViewController:
bugReportPresenter:requestsToTakeScreenshotWithCompletion:
bugReportPresenterRequestsBugReportPrefixForTitle:
bugReportPresenterRequestsBugReportKeywordIdentifiers:
_dismissInternalDebugController
debugController:stateDidChangeWithAddViews:
debugController:requestsPermissionToScreenshot:
debugController:utterances:openTTR:
debugController:requestsScreenShotWithCompletion:
debugController:openURL:
debugControllerRequestsBugReportPrefixForTitle:
debugControllerRequestsBugReportKeywordIdentifiers:
internalDebugControllerWantsDismissViewController
hasContentAtPoint:
_ttrController
presentedAlertController
presentedTTRController
_internalDebugController
_debugController
_presentedAlertController
_presentedTTRController
T@"UIAlertController",&,N,S_setPresentedAlertController:,V_presentedAlertController
T@"UIViewController",&,N,S_setPresentedTTRController:,V_presentedTTRController
T@"<AFUIBugReportPresentingDelegate>",W,V_delegate
setObject:atIndexedSubscript:
afui_arrayByMappingWithBlock:
currentCalendar
components:fromDate:
year
month
_afui_isSameDayAsDate:
setDay:
dateByAddingComponents:toDate:options:
afui_isToday
afui_isTomorrow
initWithCommand:assertion:
command
assertion
_command
_assertion
T@"SAUIDelayedActionCommand",R,N,V_command
T@"BKSProcessAssertion",R,N,V_assertion
invalidatePendingCommands
timerValue
processInfo
_performDelayedActionCommandTimerAction:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
delayedActionAceId
_invalidateDelayedActionTimer:withKey:
removeObjectForKey:
userInfo
_performCommandsWithDelayedActionCommand:
allKeys
_commandHandler
enqueueDelayedActionCommand:completion:
cancelDelayedActionWithDelayedActionCancelCommand:completion:
performDismissalCommands
_delayedActionTimersByIdentifier
_dismissalDelayedActionCommandsByIdentifier
_setDismissalPolicy:
_setShouldDismissForTapsAndPans:
_setDelegate:
_setIdleAndQuiet:
_dismissalPolicy
_dismissalPolicyForPassThroughAlways:forSessionState:
_dimmingLayerVisible
_dismissalPolicyForPassThroughUnlessDimmed:forSessionState:
_setDimmingLayerVisible:
_updateDelegateOfPolicyChange
_setShouldDismissForTapsAndPans:shouldDelayDelegateUpdate:
_shouldDismissForTapsAndPans
tapPanDismissalPolicyManager:dismissalPolicyDidChange:
initWithPolicy:delegate:
idleAndQuietDidChange:forSessionState:dimmingLayerVisible:
idleAndQuietDidChange:forSessionState:
dimmingLayerVisibilityDidChange:forSessionState:
_idleAndQuiet
shouldDismissForTapsAndPans
TB,N,G_shouldDismissForTapsAndPans,S_setShouldDismissForTapsAndPans:,V_shouldDismissForTapsAndPans
idleAndQuiet
TB,N,G_idleAndQuiet,S_setIdleAndQuiet:,V_idleAndQuiet
dimmingLayerVisible
TB,N,G_dimmingLayerVisible,S_setDimmingLayerVisible:,V_dimmingLayerVisible
dismissalPolicy
Tq,N,G_dismissalPolicy,S_setDismissalPolicy:,V_dismissalPolicy
T@"<AFUISiriTapPanDismissalPolicyManagerDelegate>",W,N,G_delegate,S_setDelegate:,V_delegate
afui_insertionContext
dialogIdentifier
timeZoneId
timeZoneWithName:
afui_timeZone
unit
value
afui_metersValue
afui_abbreviatedUnit
afui_compare:
bundleId
bagKeySet
bagSubProfile
bagSubProfileVersion
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
initWithBag:caller:keyProfile:
performLookupWithBundleIdentifiers:itemIdentifiers:
allItems
firstObject
appDisplayName
displayName
setAppDisplayName:
appStoreUri
productPageURL
setAppStoreUri:
addFinishBlock:
setSpeakableText:
setAceId:
setDialogPhase:
setViews:
_afui_installAppPunchout
afui_populateStoreServicesData:
setAppAvailableInStorefront:
setPunchOutUri:
setCommands:
afui_punchOutFailureViews
afui_punchOutAppNotAvailableViews
afui_getInstallAppPunchoutWithCompletion:
scheme
setBundleId:
afui_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:
propertyForKey:
boolValue
setAfui_KeyboardInitiated:
afui_isKeyboardInitiated
afui_keyboardInitiated
TB,N,Gafui_isKeyboardInitiated,SsetAfui_KeyboardInitiated:
setType:
phoneNumber
setMetadata:
setVisibility:
setStreamType:
setActivity:
donateActivityCommand
object
selectionResponse
selectionText
setSelectionText:
afui_appInfo
afui_setSelectionTextWithDisambiguationList:
shouldShowHeaderForDirectActionEvent:
isRequestForAnnounceNotification:
isRequestForMessageReadBannerTap:
uiPresentationIdentifier
backgroundViewModeForRequestSource:directActionEvent:
shouldStartNewRequest:duringCurrentRequest:
shouldPresentForNewRequest:duringCurrentRequest:
isRequestForAnnnounceNotificationServerCommand:
dictionaryWithContentsOfFile:
materialViewWithRecipeNamed:inBundle:configuration:initialWeighting:scaleAdjustment:
setShouldCrossfade:
setAllowsGroupBlending:
colorWithWhite:alpha:
filterWithType:
setCompositingFilter:
_setPlusDBackgroundColorWithWeighting:
materialView
setMaterialView:
lightenSourceOverView
setLightenSourceOverView:
plusDView
setPlusDView:
_materialView
_lightenSourceOverView
_plusDView
T@"MTMaterialView",&,N,V_materialView
T@"UIView",&,N,V_lightenSourceOverView
T@"UIView",&,N,V_plusDView
selectedAceId
_listItemMatchingAceId:
disambiguationAssistance
af_saveItemSelection:forType:
_logDisambiguationSelectedEventWithListItem:
_allListItems
sruif_appInfo
metricsContext
_recordSASMetrics:withSelectedBundleId:originalCommandId:
title
logEventWithType:contextProvider:
appIdentifyingInfo
sruif_bundleId
listItems
valueForKeyPath:
logDisambiguationItemSelected:
logDisambiguationDismissedEvent
setListItems:
setDisambiguationAssistance:
_listItems
_disambiguationAssistance
T@"<AFUIDisambiguationAnalyticsManagerDataSource>",W,N,V_dataSource
T@"NSArray",&,N,V_listItems
T@"<AFDisambiguationAssistance>",&,N,V_disambiguationAssistance
initWithRequestSource:uiPresentationIdentifier:
_baseRequestOptions
_initWithRequestOptions:
setSpeechFileURL:
initWithText:
initWithRecordedSpeechURL:
requestOptions
_requestOptions
T@"SASRequestOptions",R,N,V_requestOptions
setActive:error:
setCategory:withOptions:error:
initWithContentsOfURL:error:
_setPlayer:
_player
prepareToPlay
setCurrentTime:
play
audioPlayer:didFinishPlayback:
audioPlayerStartPlaying:
stop
deactivateAudioSessionOnPlaybackFinished
setActive:withOptions:error:
voicemailPlayer
audioMessagePlayer
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
startPlaying
stopPlaying
setDeactivateAudioSessionOnPlaybackFinished:
conversationItemIdentifier
setConversationItemIdentifier:
_deactivateAudioSessionOnPlaybackFinished
_playbackCommand
_conversationItemIdentifier
player
T@"AVAudioPlayer",&,N,G_player,S_setPlayer:,V_player
T@"<AFUIAudioPlayerDelegate>",W,N,V_delegate
T@"AceObject",&,N,V_playbackCommand
TB,N,V_deactivateAudioSessionOnPlaybackFinished
T@"NSUUID",W,N,V_conversationItemIdentifier
initWithConnection:configuration:requestSource:
initWithConnection:configuration:requestSource:displayConfiguration:
initWithNibName:bundle:
_statusBarFrameDidChange:
_applicationWillResignActive:
_applicationWillEnterForeground:
_applicationDidBecomeActive:
_willEnterFullScreenScreenshotMode:
_suspendRemoteViewControllerDispatchQueue
_beginDelayingPresentation:cancellationHandler:
_resumeRemoteViewControllerDispatchQueue
_session
statusBarEnabled
viewMode
_compactSiriView
shouldRequestStatusBar
_showStatusBarAnimated:completion:
_hideStatusBarAnimated:completion:
preferredContentSize
setPreferredContentSize:
isMainThread
_fullSiriView
_siriView
currentSource
_carPlaySiriView
resetOrbViewToSiriSessionState
updateBackgroundVisibility:
animateWithFactory:actions:completion:
_setFullScreenDimmingLayerVisible:animated:
_orbViewControllingView
animateOrbViewToOffWithCompletion:
updateBackgroundViewMode:
requestStatusBarVisible:animated:completion:
_remoteViewController
_enqueueRemoteViewControllerMessageBlock:
_thresholdForBarSwipeDismissal
contentRect
_setInFluidDismissal:
dismissSiriViewController:withReason:
contentWeighting
setTransform:
setCenter:
backgroundWeighting
logEventWithType:context:
performWithoutAnimation:
_siriRemoteViewControllerIsEditing
_currentSessionAvailabilityState
initWithFlamesViewFidelity:isSystemHostedPresentation:allowResizingBetweenModes:siriViewMode:
isSystemHostedPresentation
_isDeviceScreenOn
isDeviceInStarkMode
_shouldShowVoiceActivationMaskViewWithSiriView:requestSource:screenOff:connectedToCarPlay:
_showVoiceActivationMaskView:
requestStatusBarVisible:
siriViewController:voiceActivationMaskViewIsVisible:
_statusBar
_statusBarFrame
getStatusBarOverrideData
setLocalDataOverrides:
_setStatusBar:
setEdgeAntialiasingMask:
requestStyle:
bringSubviewToFront:
_referenceBounds
statusBar
defaultHeight
supportedInterfaceOrientations
setObject:forKeyedSubscript:
addEntriesFromDictionary:
_triggerPeopleSuggesterLogging
logPeopleSuggesterDataWithSessionId:
_recordUIAppearance
_sendBeginAppearanceTransitionIfReadyAnimated:
_keyboardDidShowNotification:
_keyboardDidHideNotification:
CGRectValue
_keyboardInfoFromNotification:
heightForWidthSizeClass:
_sendEndAppearanceTransitionIfReady
siriViewControllerDidChangeVisibility:
_updateAudioRoutePicker
systemUptime
_setViewDidAppearTime:
viewWillDisappear:
_setShowKeyboardIfTextInputEnabled:
isShowingPicker
cancelPickerAnimated:
beginAppearanceTransition:animated:
endAppearanceTransition
_setHasCalledBeginAppearanceTransition:
_setHasCalledEndAppearanceTransition:
_removeStatusBar
_recordUIDismissal
didMoveToParentViewController:
_informRemoteViewControllerOfParentIfNecessary
_presentRemoteViewController
screen
displayConfiguration
_carScreen
safeAreaInsetsForSceneCreationInSiriViewController:
siriViewController:didEncounterUnexpectedError:
isBeingPresented
addChildViewController:
_endDelayingPresentation
containsView:
isDescendantOfView:
convertRect:toView:
setDockFrame:
setStatusBarEnabled:
setShouldPassTouchesThroughToSpringBoard:
setShareHomeGesture:
siriViewController:updateHomeAffordanceForBlurVisibilty:
_hasCalledBeginAppearanceTransition
_hasCalledEndAppearanceTransition
siriViewController:bulletinWithIdentifier:
lockStateForSiriViewController:
siriViewControllerDidFinishDismissing:
errorWithDomain:code:userInfo:
resetGestureBehaviors
siriViewControllerDidPresentKeyboard:
startGuidedAccessForSiriViewController:
userRelevantEventDidOccurInSiriViewController:
textField
siriViewController:siriIdleAndQuietStatusDidChange:
_setStatusViewHidden:
_setTypeToSiriViewHidden:
requestStyle:animated:
willChangeValueForKey:
didChangeValueForKey:
_updateInterfaceOrientationAnimated:
lockStateForSiriRemoteViewController:
siriViewController:willStartTest:
siriViewController:didFinishTest:
siriViewController:failTest:withReason:
enterUITrackingMode
exitUITrackingMode
_isInitialSpeechRequest
currentRequestOptions
_setShowKeyboardIfTextInputEnabled:minimized:
_setPunchingOut:
_handleMicButtonTapFromSource:
_handleMicButtonLongPressBeganFromSource:
_handleMicButtonLongPressEndedFromSource:
siriViewController:didChangePresentationPeekMode:
_didDetectAudioRoutePickerTap
_setSiriRemoteViewControllerIsEditing:
isInHardwareKeyboardMode
_deactivateReachability
siriViewController:requestsPresentation:
siriViewController:requestsDismissalWithReason:withCompletion:
siriViewController:presentedIntentWithBundleId:
siriViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriViewController:sceneDidActivateWithIdentifier:
siriViewControllerDidDeactivateScene:
siriViewController:didHideStatusView:
resignFirstResponder
becomeFirstResponder
firstResponder
isFirstResponder
_handleReportBugAction
_handleHelpAction
_handleReportBugLongPressAction
_uiPresentationIdentifier
siriViewControllerSpeechRequestStartedFromSiriOrb
_informRemoteViewControllerOfOrbViewTapToCancelRequest
siriViewControllerSpeechRequestCancelledFromSiriOrb
initWithRequestOptions:updateHandle:
startRequestWithActivationTrigger:
handlePasscodeUnlockAndCancelRequest:withCompletion:
_handlePasscodeUnlockAndCancelRequest:dismissOnFailure:withCompletion:
requiresUserInteraction
handoffOriginDeviceName
defrost
willPresentUI
_setVoiceTriggerEnabled:
_handleSiriDidActivateFromSource:
_viewDidAppearTime
didDismissUI
_systemState
updateIfNeededWithSystemState:
siriViewController:willStartRequestWithOptions:
predictedRecordRouteIsZLL
_setRecordingStartedTimeValue:
_setCurrentRequestOptions:
voiceTriggerEventInfo
unsignedLongLongValue
siriViewController:didReceiveButtonUpWithRequestOptions:
_updateRemoteViewControllerStateForAppearance
isBlurViewVisible
_isInHoldToTalkMode
_currentRequestOptions
_canIgnoreHoldToTalkThreshold
_holdToTalkThresholdHasElapsed
setInitialBringUp:
_delayForHoldToTalkStopRequestsWithSource:
_stopRequestWithOptions:afterDelay:
_transitionToAutomaticEndpointMode
isATVRemotePTTEligible
_transitionToManualEndpointMode
siriViewControllerShouldSupportTextInput:
isTVPushToTalkEnabled
_recordingStartedTimeValue
_manualEndpointingThreshold
_setInHoldToTalkMode:
setUseAutomaticEndpointing:
_exitHoldToTalkMode
_enterHoldToTalkMode
manualEndpointingThreshold
removeTriggerTarget:
options
_holdToTalkTriggerDidReleaseFromSource:
startRequestWithActivationTrigger:completion:
_activationTriggerDidRelease:
addTriggerTarget:action:
inputAccessoryView
siriViewControllerShouldEndSession:
siriViewController:attemptUnlockWithPassword:
assistantVersion
userAccountCount
_routePickerController
showPickerFromViewController:animated:
initWithCategory:mode:delegate:
refreshRoutes
hasRoutesToPick
_setShowAudioRoutePicker:
bluetoothIsPicked
_setAudioRoutePickerBluetoothOn:
orientation
getDeviceEngagementEvents:forDeviceEngagementTimeWindow:
bulletinsForSiriViewController:
contextAppInfosForSiriViewController:
currentCarPlaySupportedOEMAppsForSiriViewController:
starkAppBundleIdentifierContextForSiriViewController:
carPlayEnhancedVoiceTriggerMode
siriViewController:willProcessAppLaunchWithBundleIdentifier:
siriViewController:failedToLaunchAppWithBundleIdentifier:
setInputPowerLevel:
setOutputPowerLevel:
setSkipLoggingListeningEventForLaunchIntoListening:
logEventWithType:machAbsoluteTime:context:
siriViewControllerDidChangeToListeningMode:
presentRemoteViewControllerIfNecessary
siriViewControllerSessionDidResetContext:
siriViewController:didEndSession:
_presentDeferredFlamesViewIfNecessary
siriViewController:didCompleteRequestWithError:
isVisible
launchOptions
punchOutUri
shouldHideSiri
setDisableUpdateMask:
_donateUIDismissalToBiome:
animateOrbViewDismissalWithCompletion:
_updateSiriAvailability:
siriRemoteViewController:willStartTest:
siriRemoteViewController:didFinishTest:
siriRemoteViewController:failTest:withReason:
siriView:attemptUnlockWithPassword:
siriContentDidReceiveOrbTappedAction:
siriContentDidReceiveOrbHoldDidBeginAction:
siriContentDidReceiveOrbHoldDidEndAction:
siriContentDidReceiveReportBugAction:
siriContentDidReceiveReportBugLongPress:
compactView:bottomContentInsetDidChange:
compactView:blurVisibilityDidChange:
routePickerController:hasRoutesToPick:
routePickerControllerPickedNewRoute:isBluetooth:
routePickerControllerWillShow:
routePickerControllerWillDismiss:
siriSession:didReceiveDeviceUnlockRequestWithCompletion:
keyboardView:didReceiveText:
keyboardViewDidReceiveHelpButtonAction:
keyboardViewDidReceiveReportBugAction:
keyboardViewDidReceiveBugButtonLongPress:
keyboardViewDidReceiveAudioRouteAction:
commandCache:didSuccessfullyHandleCommandsInDelayedActionCommand:
initWithConnection:configuration:
setReceivedIncomingPhoneCall:
setHostedPresentationFrame:
proximityStatusChanged:
cancelSpeechRecordingIfNecessary
animatedAppearanceWithFactory:completion:
animatedDisappearanceWithFactory:completion:
setFluidDismissalState:
canBecomeFirstResponder
setInputAccessoryView:
keyboardAppearance
childViewControllerForHomeIndicatorAutoHidden
shouldAutomaticallyForwardAppearanceMethods
showPasscodeUnlockScreenForRequest:unlockCompletion:
updateContexts:
setAnnouncementRequestsPermittedWhilePresentationActive:
setSiriRequestCancellationReason:
didReceiveButtonUpWithRequestOptions:
handleViewFullyRevealed
shortTapActionWithRequestOptions:
tvRemoteSentButtonDownWhileListening
_recordingStartedOnRoute
_setRecordingStartedOnRoute:
emitUIStateTransitionForSiriDismissalWithReason:
hideVoiceActivationMaskViewIfNecessary
animateOrbViewDismissalIfNecessaryWithCompletion:
announcementRequestsPermittedWhilePresentationActive
setDirectActionEvent:
carDNDActive
receivedIncomingPhoneCall
turnsOnScreenOnAppearance
setTurnsOnScreenOnAppearance:
showsStatusBar
setShowsStatusBar:
_remoteViewControllerDispatchQueue
routePickerController
setRoutePickerController:
isViewDisappearing
setViewDisappearing:
_isPunchingOut
hostedPresentationFrame
skipLoggingListeningEventForLaunchIntoListening
_active
_remoteViewControllerDispatchQueueSuspended
_vtEnabledCount
_currentRequestSource
_triggerUpdater
_delayedActionCommandCache
_siriSessionWantsToEnd
_uiAppearanceUUIDString
_uiAppearanceRecordQueue
_presentedConversationFromBreadcrumb
_inputAccessoryView
_keyboardInfo
_unlockScreenVisible
_statusViewWasHiddenBeforeEditingStarted
_remoteViewControllerIsPresenting
_hostingConnectionState
_dismissalUserInfo
_shouldShowVoiceActivationMaskView
_statusBarDeferralState
_requestCancellationReason
_requestedBlurVisible
_networkAvailabilityStateMachine
_isProcessingAppLaunch
_hasDonatedDismissalToBiome
_tapPanDismissalPolicyManager
_immersiveExperienceOn
_launchSignpostID
_currentDisplayConfiguration
_visible
_deviceIsInStarkMode
_announcementRequestsPermittedWhilePresentationActive
_carDNDActive
_receivedIncomingPhoneCall
_turnsOnScreenOnAppearance
_showsStatusBar
_statusBarEnabled
_inHoldToTalkMode
_viewDisappearing
_punchingOut
_skipLoggingListeningEventForLaunchIntoListening
_directActionEvent
_hostedPresentationFrame
session
T@"AFUISiriSession",R,N,G_session,V_session
remoteViewController
T@"AFUISiriRemoteSceneViewController",R,N,G_remoteViewController,V_remoteViewController
remoteViewControllerDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,G_remoteViewControllerDispatchQueue,V_remoteViewControllerDispatchQueue
hasCalledBeginAppearanceTransition
TB,N,G_hasCalledBeginAppearanceTransition,S_setHasCalledBeginAppearanceTransition:,V_hasCalledBeginAppearanceTransition
hasCalledEndAppearanceTransition
TB,N,G_hasCalledEndAppearanceTransition,S_setHasCalledEndAppearanceTransition:,V_hasCalledEndAppearanceTransition
T@"SiriUIAudioRoutePickerController",&,N,V_routePickerController
T@"UIStatusBar",&,N,G_statusBar,S_setStatusBar:,V_statusBar
inHoldToTalkMode
TB,N,G_isInHoldToTalkMode,S_setInHoldToTalkMode:,V_inHoldToTalkMode
T@"SASRequestOptions",C,N,G_currentRequestOptions,S_setCurrentRequestOptions:,V_currentRequestOptions
recordingStartedTimeValue
T@"NSNumber",&,N,G_recordingStartedTimeValue,S_setRecordingStartedTimeValue:,V_recordingStartedTimeValue
viewDidAppearTime
Td,N,G_viewDidAppearTime,S_setViewDidAppearTime:,V_viewDidAppearTime
viewDisappearing
TB,N,GisViewDisappearing,V_viewDisappearing
siriRemoteViewControllerIsEditing
TB,N,G_siriRemoteViewControllerIsEditing,S_setSiriRemoteViewControllerIsEditing:,V_siriRemoteViewControllerIsEditing
punchingOut
TB,N,G_isPunchingOut,S_setPunchingOut:,V_punchingOut
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_hostedPresentationFrame
statusViewHidden
TB,N,G_statusViewHidden,S_setStatusViewHidden:,V_statusViewHidden
TB,N,V_skipLoggingListeningEventForLaunchIntoListening
T@"<AFUISiriViewControllerDataSource>",W,N,V_dataSource
T@"<AFUISiriViewControllerDelegate>",W,N,V_delegate
visible
TB,N,GisVisible,V_visible
deviceIsInStarkMode
TB,N,GisDeviceInStarkMode,SsetDeviceInStarkMode:,V_deviceIsInStarkMode
TB,N,V_announcementRequestsPermittedWhilePresentationActive
Tq,N,V_directActionEvent
TB,N,V_carDNDActive
TB,N,V_receivedIncomingPhoneCall
TB,N,V_turnsOnScreenOnAppearance
TB,N,V_showsStatusBar
TB,N,V_statusBarEnabled
TB,R,N
T@"UIView<AFUISiriRemoteViewHosting>",&,D,N
userContext
keyPathForSiriActiveStatus
eventStreamWithName:
eventWithStream:startDate:endDate:identifierStringValue:metadata:
knowledgeStore
saveObjects:error:
siriUIStream
source
objectForKeyedSubscript:
hasSuffix:
timeIntervalSinceReferenceDate
initWithSessionID:UUID:viewMode:dismissalReason:starting:absoluteTimeStamp:
sendEvent:
audioPlayer:audioURLForCommand:
setOpaque:
clearColor
_dimmingViewColor
animation
backgroundColor
setVisible:animated:
_setupBugReportButtonIfNeeded
_setUpEyesFreePresentation:
_orbViewContainerFrame
_originXForOrbContainer
setAllowsHitTesting:
setHitTestsAsOpaque:
_micButtonTapped:
_micButtonHeld:
setMinimumPressDuration:
_synchronizeDrawingWithFence:
requestBackgroundBlurVisible:forReason:
_shouldShowBugReportButton
_constructAndAddBugReportButtonWithImage:
systemDarkGrayTintColor
setCornerRadius:
setTranslatesAutoresizingMaskIntoConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setActive:
_constructAndAddSiriXIndicator
animateToOffWithCompletion:
convertRect:fromView:
layoutIfNeeded
setPowerLevel:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
backgroundBlurViewController:didSetBlurVisibilityTo:
_orbViewContainer
_orbView
_touchInputView
_longPressRecognizer
_dimmingBackdropView
_siriContentDelegate
_compactViewDelegate
_dockFrame
_siriXIndicator
_eyesFreeView
_blurringAndLockContainer
_fullScreenBlurViewController
_auxiliaryViewsHidden
_ignoreSiriSessionUpdates
_blurViewVisible
blurViewVisible
TB,R,N,GisBlurViewVisible,V_blurViewVisible
requestStatusBar
TB,R,N,GshouldRequestStatusBar
initWithLocaleIdentifier:
initWithLocale:
_domainsForStringWithFormat:
_builtInDomains
isSubsetOfSet:
handleTTSCodes
handlesFunctions
initWithString:
appendString:
enumerateSubstringsInRange:options:usingBlock:
afui_hasExternalDomainsForStringWithFormat:
afui_speakableUtteranceParserForCurrentLanguage
tableBackgroundColor
topAnchor
constraintEqualToAnchor:
leadingAnchor
trailingAnchor
bottomAnchor
arrayWithArray:
activateConstraints:
backgroundViewMode
_animateBackgroundsWithVisibility:backgroundViewMode:
_updateViewsForVisibility:backgroundViewMode:
_updateCarPlayStatusBarForVisibility:backgroundViewMode:
updateVisibility:
settingsWithMass:stiffness:damping:
backgroundView:requestsCarPlayStatusBarOverride:animationSettings:
setBackgroundViewMode:
_fullScreenBackgroundView
_systemBackgroundView
_backgroundViewMode
Tq,N,V_backgroundViewMode
siriNetworkAvailabilityDidChange
airplaneModeChanged
radioPreferences
setRadioPreferences:
stateMachine
setStateMachine:
_radioPreferences
T@"<AFUINetworkAvailabilityStateMachineDelegate>",W,N,V_delegate
T@"RadiosPreferences",&,N,V_radioPreferences
T@"SRUIFStateMachine",&,N,V_stateMachine
imageResourceFromKey:pressedKey:punchOut:
setLocalResourceBundle:
setLocalResourceName:
setLocalPressedResourceName:
setLocalPunchOut:
appIconMap
appIcon
resourceUrl
scaleFactor
pixelWidth
pixelHeight
setRemoteURL:
setRemoteScale:
setRemotePressedURL:
setRemotePressedScale:
setLogoSize:
setRemotePunchOut:
localResourceName
_fetchRemoteResourcesWithCompletion:
_fetchLocalResourcesWithCompletion:
remoteURL
_imageInLocalResourceBundleNamed:
size
localPressedResourceName
localPunchOut
localResourceBundle
_deviceSpecificImageNamed:inBundle:
remotePressedURL
remotePunchOut
sharedURLSession
imageTaskWithHTTPGetRequest:client:completionHandler:
imageResourceWithAppPunchOut:
imageResourceWithLocalResourceName:pressedResourceName:localPunchOut:bundle:
getLogoWithCompletion:
logoSize
remoteScale
remotePressedScale
_localResourceName
_localPressedResourceName
_localPunchOut
_localResourceBundle
_remoteURL
_remotePressedURL
_remotePunchOut
_remoteScale
_remotePressedScale
_logoSize
T@"NSString",C,N,V_localResourceName
T@"NSString",C,N,V_localPressedResourceName
T@"SAUIAppPunchOut",&,N,V_localPunchOut
T@"NSBundle",&,N,V_localResourceBundle
T@"NSURL",C,N,V_remoteURL
T@"NSURL",C,N,V_remotePressedURL
T@"SAUIAppPunchOut",&,N,V_remotePunchOut
Td,N,V_remoteScale
Td,N,V_remotePressedScale
T{CGSize=dd},N,V_logoSize
initWithCode:userInfo:
initWithDomain:code:userInfo:
debugErrorWithCode:userInfo:
_setupAuraBackdropViews
pathForResource:ofType:
imageWithContentsOfFile:
colorWithDynamicProvider:
array
colorEffectSaturate:
effectWithBlurRadius:
setBackgroundEffects:
_backgroundView
_auraView
_effectView
initWithData:mimeType:name:attemptCompression:
sruif_dataByCompressingWithGzip
stringByAppendingPathExtension:
logWithData:mimeType:name:attemptCompression:
data
mimeType
_data
_mimeType
_name
T@"NSData",R,C,N,V_data
T@"NSString",R,C,N,V_mimeType
T@"NSString",R,C,N,V_name
setAutoresizingMask:
navigationController
navigationBar
_setHidesShadow:
setBackgroundImage:forBarMetrics:
dismissSiriSetupViewController:
siriSetupView
updateHomeGestureSharingForSiriSetup:
_continueWithLanguageCode:commitLanguageCodeToPreferences:
setLanguageCode:
setAssistantIsEnabled:
didCompleteFlow:
openSiriRequestedBySiriSetupViewController:
disableSiriActivationRequestedBySiriSetupViewController:
assistantIsEnabled
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
setLastTimeShown:
_continueTapped:
_laterTapped:
lastTimeShown
setSiriSetupView:
_contentView
_selectedRecognitionLanguageCode
_lastTimeShown
_siriSetupView
T@"<AFUISiriSetupViewControllerDelegate>",W,N,V_delegate
TB,N,V_lastTimeShown
T@"UIView",&,N,V_siriSetupView
dataUsingEncoding:
keyWindow
_siriCardLogDirectoryURL
_captureLogsAtURL:logName:sinceTime:pattern:mimeType:completion:
_siriLogDirectoryURL
_captureLogsInDirectoryAtURL:matchingPattern:withMimeType:attemptCompression:limit:error:
_uniqueTemporaryFileURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
path
_baseLogDirectoryURL
_contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:
subarrayWithRange:
executeSystemCommand:stdoutTo:
stringByAppendingString:
_archiveLogDirectoryAtURL:name:error:
URLByDeletingLastPathComponent
removeItemAtURL:error:
componentsSeparatedByString:
cStringUsingEncoding:
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
getResourceValue:forKey:error:
timeIntervalSinceDate:
predicateWithBlock:
filteredArrayUsingPredicate:
URLByAppendingPathExtension:
initWithContentsOfURL:options:error:
regularExpressionWithPattern:options:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
numberOfMatchesInString:options:range:
sortedArrayUsingComparator:
fileURLWithPath:
captureViewHierarchyLogWithDefaultViewHierarchy:completion:
captureCardLogsSinceTime:completion:
captureSiriSpeechLogsWithCompletion:
captureSiriVoiceTriggerLogsWithCompletion:
captureSiriTTSAudioWithCompletion:
capturePreviousConversationWithCompletion:
_captureLogsAtURL:logName:sinceTime:completion:
_captureFileAtURL:completion:
queue
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
baseLogDirectoryURL
T@"NSURL",R,C,N,G_baseLogDirectoryURL
siriLogDirectoryURL
T@"NSURL",R,C,N,G_siriLogDirectoryURL
constraints
deactivateConstraints:
updateOrbViewState
initForSiriPresentation
acquireWithAnimationSettings:
reliquishWithAnimationSettings:
_orbHeldWithGestureRecognizer:
_orbTappedWithGestureRecognizer:
requireGestureRecognizerToFail:
safeAreaLayoutGuide
constraintEqualToAnchor:constant:
centerXAnchor
widthAnchor
constraintEqualToConstant:
heightAnchor
centerYAnchor
orbViewRectInCarplayView
siriXIndicatorView
_orbContainerView
_statusBarStyleAssertion
_siriXIndicatorView
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24Q32
@"AFUISceneConfiguration"16@0:8
v32@0:8@"AFUISceneController"16@"FBScene"24
v40@0:8@"AFUISceneController"16@"FBScene"24Q32
v32@0:8@"AFUISceneController"16@"AFUISceneClientSettings"24
@24@0:8@16
v16@0:8
v20@0:8B16
v56@0:8{CGSize=dd}16q32@40@48
v24@0:8q16
v32@0:8@16@?24
v32@0:8Q16@24
v24@0:8@16
v32@0:8@16q24
v24@0:8@?16
{UIEdgeInsets=dddd}16@0:8
v24@0:8Q16
v28@0:8@16B24
v40@0:8{CGSize=dd}16@32
q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{UIEdgeInsets=dddd}16
@"AFUISceneConfiguration"
@"AFUISceneController"
@"UIView"
@"<UIScenePresenter>"
@"FBScene"
@"<BSInvalidatable>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@32@0:8@16@24
@"NSString"
@"VMVoicemailManager"
@"VMVoicemail"
v56@0:8@16d24d32q40@?48
f24@0:8@16
{UIEdgeInsets=dddd}24@0:8@16
f24@0:8@"SiriUISiriStatusView"16
v24@0:8@"SiriUISiriStatusView"16
{UIEdgeInsets=dddd}24@0:8@"SiriUISiriStatusView"16
@"UIView"16@0:8
v24@0:8@"UIView"16
v48@0:8@16@24@?32@?40
v24@0:8B16B20
v24@0:8d16
v48@0:8@"NSString"16@"NSString"24@?<v@?B>32@?<v@?q>40
v24@0:8@"<AFUISiriContentDelegate>"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
B24@0:8q16
d16@0:8
@"_UIBackdropView"
@"SiriUIAudioRoutePickerButton"
@"SiriUIHelpButton"
@"SiriUIContentButton"
@"SiriUIConfiguration"
@"SiriUIVisualEffectView"
@"UIImageView"
@"UILabel"
@"UIView<SiriUISiriStatusViewProtocol>"
@"<AFUISiriViewDataSource>"
@"<AFUISiriViewDelegate>"
@"AFSettingsConnection"
@40@0:8{CGPoint=dd}16@32
@32@0:8@16@?24
q24@0:8@16
@"NSProgress"32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
@"NSArray"16@0:8
q24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"UIImage"
v32@0:8@16Q24
v32@0:8B16B20@?24
v32@0:8Q16@?24
v44@0:8@16@24B32@?36
v36@0:8B16q20@28
v24@0:8@?<v@?q>16
v32@0:8@"NSDictionary"16Q24
v32@0:8@"NSString"16@?<v@?@"AFBulletin">24
v24@0:8@"SASRequestOptions"16
v32@0:8B16B20@?<v@?B>24
v24@0:8@?<v@?@"NSData">16
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSString">16
v32@0:8Q16@?<v@?B>24
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?B>36
v24@0:8@"NSString"16
v36@0:8B16q20@"BKSAnimationFenceHandle"28
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?B>36
@24@0:8@?16
v24@0:8^{?=BBB{CGRect={CGPoint=dd}{CGSize=dd}}d}16
v40@0:8{CGPoint=dd}16@?32
v32@0:8q16q24
v20@0:8i16
@"NSArray"
@"<AFUISiriRemoteSceneViewControllerDataSource>"
@"<AFUISiriRemoteSceneViewControllerDelegate>"
@"AFApplicationInfo"
@"NSXPCConnection"
v24@0:8@"SRUIFSiriSessionInfo"16
v24@0:8@"NSError"16
v48@0:8q16q24q32d40
v40@0:8@16@24d32
v32@0:8@16d24
v20@0:8f16
v20@0:8I16
v40@0:8@16@24@32
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?q>24
v24@0:8@"AFAnalyticsTurnBasedInstrumentationContext"16
v40@0:8@"AFAnalyticsTurnBasedInstrumentationContext"16@"PBCodable"24d32
v32@0:8@"PBCodable"16d24
v32@0:8@"SASRequestOptions"16@?<v@?@"SASRequestOptions">24
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?B>24
v24@0:8@"INImage"16
v24@0:8@?<v@?@"NSArray">16
v24@0:8@"SASSpeechRecognized"16
v24@0:8@"SASSpeechPartialResult"16
v32@0:8@"AFSpeechInterpretation"16@"NSString"24
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"SAUIAddViews"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAddDialogs"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIOpenLink"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIClearScreen"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAPhonePlayVoiceMail"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SASmsPlayAudio"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIPlayNotificationSound"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISayIt"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIRepeatIt"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowHelp"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIUpdateViews"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAppPunchOut"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUICloseAssistant"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIListenForPronunciation"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIGetResponseAlternativesPlayback"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISetSuggestedUtterances"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIChangePrimaryUtterance"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowFullScreenEffect"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowSpeechAlternatives"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowRequestHandlingStatus"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SASettingSetUIGuidedAccess"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIHideSiriOverlay"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAGuidanceGuideUpdate"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAddContentToView"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SACardShowNextCard"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAPreSynthesizeTTS"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"SAUIDisambiguationItemSelected"16
v32@0:8@"SAVCSPlayContent"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUILaunchTVRemote"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIExtendCurrentTTS"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIPaginateList"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIVisualResponseShowNextSnippet"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIUpdateVisualResponseSnippet"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISnippetDisplayConfigurationRequest"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIRevealRecognizedSpeech"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"AceObject<SAAceCommand>"16
v32@0:8@"AFBulletin"16@?<v@?Q>24
v24@0:8@"NSValue"16
v24@0:8@"NSNumber"16
v40@0:8@"NSString"16@"NSDictionary"24Q32
v24@0:8@?<v@?>16
v24@0:8@"<AFUISiriSession>"16
v24@0:8@"PBCodable"16
v32@0:8@"PBCodable"16Q24
v32@0:8@"NSValue"16@?<v@?B>24
v32@0:8Q16@"SiriDismissalOptions"24
v24@0:8@"SAUIDelayedActionCommand"16
v56@0:8@16@24@32@40d48
v24@0:8@?<v@?I@"NSError">16
v32@0:8@"SASRequestOptions"16@?<v@?@"NSError">24
v56@0:8@"NSString"16@24@"AFUserUtteranceSelectionResults"32@"NSUUID"40d48
v40@0:8@"AceObject<SAAceCommand>"16@"NSUUID"24d32
v24@0:8@"NSDictionary"16
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"SABaseClientBoundCommand"16
v24@0:8@"AFMetrics"16
v32@0:8@"NSString"16d24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@"AFSpeechSynthesisRecord"16
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v28@0:8@16I24
v36@0:8@16B24@28
v48@0:8@16q24@32@?40
v24@0:8@"AFConnection"16
v32@0:8@"AFConnection"16q24
v40@0:8@"AFConnection"16@"AceObject<SAAceCommand>"24@?<v@?@"AceObject<SAAceCommand>">32
v40@0:8@"AFConnection"16@"NSError"24@"NSString"32
v40@0:8@"AFConnection"16@"NSURL"24@?<v@?B>32
v48@0:8@"AFConnection"16@"NSString"24@"NSURL"32@?<v@?B>40
v28@0:8@"AFConnection"16B24
v28@0:8@"AFConnection"16I24
v32@0:8@"AFConnection"16@"NSDictionary"24
v36@0:8@"AFConnection"16B24@"NSDictionary"28
v40@0:8@"AFConnection"16@"NSDictionary"24@"NSURL"32
v32@0:8@"AFConnection"16@"INImage"24
v32@0:8@"AFConnection"16@"NSString"24
v40@0:8@"AFConnection"16@"NSString"24@"NSError"32
v40@0:8@"AFConnection"16@"NSString"24@?<v@?B>32
v40@0:8@"AFConnection"16@"AFRequestInfo"24@?<v@?B>32
v32@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24
v40@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@"AFConnection"16Q24
v48@0:8@"AFConnection"16q24@"INIntent"32@?<v@?BB>40
v36@0:8@16@24I32
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
v32@0:8@"AFConnection"16@"AFXPCWrapper"24
v36@0:8@"AFConnection"16@"NSString"24I32
v40@0:8@"AFConnection"16q24@?<v@?dd@"NSError">32
v32@0:8@"AFConnection"16@"NSError"24
v32@0:8@"AFConnection"16@"SASSpeechRecognized"24
v32@0:8@"AFConnection"16@"SASSpeechPartialResult"24
v40@0:8@"AFConnection"16@"AFSpeechInterpretation"24@"NSString"32
v48@0:8@"AFConnection"16@"NSArray"24@"NSArray"32@"NSString"40
v40@0:8@16q24q32
@32@0:8@16q24
v48@0:8@16q24q32d40
v40@0:8@"SRUIFStateMachine"16q24q32
@"NSString"32@0:8@"SRUIFStateMachine"16q24
v48@0:8@"SRUIFStateMachine"16q24q32d40
v32@0:8q16d24
@?24@0:8@?16
v36@0:8@16B24@?28
v28@0:8Q16B24
v36@0:8@16Q24B32
v48@0:8@16@24d32@?40
f16@0:8
i24@0:8q16
v40@0:8@16q24@32
@24@0:8Q16
@"SRUIFStateMachine"
@"AFSpeechSynthesisRecord"
@"NSMutableSet"
@"AFConnection"
@"AFSiriClientStateManager"
@"AFModesConfiguration"
@"<AFUISiriSessionDelegate>"
@"<AFUISiriSessionLocalDataSource>"
@"<AFUISiriSessionLocalDelegate>"
@"SRUIFSiriSessionInfo"
@"NSObject<OS_dispatch_group>"
@"AFAnalyticsTurnBasedInstrumentationContext"
@"<AFUISiriLanguageDelegate>"
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64@72
@24@0:8^{_NSZone=}16
@"FBSDisplayConfiguration"
@"FBSSceneParameters"
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v24@0:8@"BSTransaction"16
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBApplicationProcess"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBScene"24
@"FBApplicationUpdateScenesTransaction"
@"BKSProcessAssertion"
@"<AFUISceneControllerDelegate>"
v32@0:8@"UIImage"16@"NSString"24
@"UIImage"24@0:8@"NSString"16
@24@0:8q16
v40@0:8q16q24q32
@"<AFUIStateMachineDelegate>"
@"NSMutableDictionary"
B32@0:8@16@24
@"SAGuidanceGuideUpdate"
I16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"SiriUIBackgroundBlurView"
v40@0:8d16d24@?32
q24@0:8q16
@40@0:8@16@24@32
@48@0:8@16@24@32@40
v24@0:8@"NSArray"16
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v28@0:8@"NSString"16B24
@"<AFUIBugReportingDelegate>"16@0:8
v24@0:8@"<AFUIBugReportingDelegate>"16
v40@0:8@"NSString"16@"NSString"24@"NSNumber"32
@"<AFUIBugReportingDelegate>"
@"NSMutableArray"
d24@0:8@16
v32@0:8q16@24
v32@0:8d16@24
v28@0:8B16@20
@"NSUserDefaults"
@"<AFUIPreferencesDelegate>"
v32@0:8@"<AFUIDebugControlling>"16@"SAUIAddViews"24
v32@0:8@"<AFUIDebugControlling>"16@?<v@?B>24
v40@0:8@"<AFUIDebugControlling>"16@"NSArray"24@?<v@?^B>32
v32@0:8@"<AFUIDebugControlling>"16@?<v@?@"UIImage">24
v32@0:8@"<AFUIDebugControlling>"16@"NSURL"24
@"NSString"24@0:8@"<AFUIDebugControlling>"16
@"NSArray"24@0:8@"<AFUIDebugControlling>"16
B32@0:8{CGPoint=dd}16
@24@0:8@"<AFUIBugReportPresentingDelegate>"16
v32@0:8@?16@?24
@"UIViewController<AFUIInternalDebugControlling>"
@"<AFUIDebugControlling>"
@"<AFUIBugReportPresentingDelegate>"
@"UIAlertController"
@"UIViewController"
@"SAUIDelayedActionCommand"
@32@0:8q16@24
v32@0:8B16q20B28
v28@0:8B16q20
@"<AFUISiriTapPanDismissalPolicyManagerDelegate>"
q32@0:8q16q24
@"MTMaterialView"
@"<AFUIDisambiguationAnalyticsManagerDataSource>"
@"<AFDisambiguationAssistance>"
@"SASRequestOptions"
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@"<AFUIAudioPlayerDelegate>"
@"AceObject"
@"NSUUID"
@"AVAudioPlayer"
Q24@0:8@16
@"AFBulletin"32@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24
Q24@0:8@"AFUISiriRemoteSceneViewController"16
v40@0:8@16Q24@32
v32@0:8@16B24B28
v40@0:8@16B24B28@?32
v40@0:8@16Q24@?32
v40@0:8@"AFUISiriRemoteSceneViewController"16Q24@"NSString"32
v40@0:8@"AFUISiriRemoteSceneViewController"16@"NSDictionary"24Q32
q24@0:8@"AFUISiriRemoteSceneViewController"16
v24@0:8@"AFUISiriRemoteSceneViewController"16
v32@0:8@"AFUISiriRemoteSceneViewController"16@"SASRequestOptions"24
v28@0:8@"AFUISiriRemoteSceneViewController"16B24
v32@0:8@"AFUISiriRemoteSceneViewController"16B24B28
v32@0:8@"AFUISiriRemoteSceneViewController"16q24
v40@0:8@"AFUISiriRemoteSceneViewController"16B24B28@?<v@?B>32
v32@0:8@"AFUISiriRemoteSceneViewController"16Q24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?q>24
v32@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24
v40@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24@"NSString"32
v32@0:8@"AFUISiriRemoteSceneViewController"16@"NSArray"24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?@"NSString">24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?B>24
v40@0:8@"AFUISiriRemoteSceneViewController"16Q24@?<v@?B>32
f24@0:8@"AFUISiriView"16
v24@0:8@"AFUISiriView"16
B32@0:8@"AFUISiriView"16@"NSString"24
v32@0:8@"AFUISiriView"16q24
B24@0:8@"AFUISiriView"16
v24@0:8@"<AFUISiriContent>"16
B32@0:8@"UIView<AFUISiriContent>"16@"NSString"24
v32@0:8@"AFUISiriCompactView"16d24
v28@0:8@"AFUISiriCompactView"16B24
v28@0:8@"SiriUIAudioRoutePickerController"16B24
v24@0:8@"SiriUIAudioRoutePickerController"16
q24@0:8@"AFUISiriSession"16
B24@0:8@"AFUISiriSession"16
@"NSArray"24@0:8@"AFUISiriSession"16
Q24@0:8@"AFUISiriSession"16
v48@0:8@"AFUISiriSession"16q24q32d40
v36@0:8@"AFUISiriSession"16B24@?<v@?q>28
v32@0:8@"AFUISiriSession"16@?<v@?q>24
v24@0:8@"AFUISiriSession"16
v32@0:8@"SAUIDelayedActionCommand"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIDelayedActionCancelCommand"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"AFUISiriSession"16@"NSString"24
v32@0:8@"SAUITakeScreenshot"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISetUpdateMask"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAppPunchOut"16@?<v@?B>24
@"NSString"24@0:8@"AFUISiriView"16
@"AFAccount"24@0:8@"AFUISiriView"16
q24@0:8@"AFUISiriView"16
v32@0:8@"SiriUIKeyboardView"16@"NSString"24
v24@0:8@"SiriUIKeyboardView"16
v28@0:8@"AFUISiriTapPanDismissalPolicyManager"16B24
v32@0:8@"SRUIFDelayedActionCommandCache"16@"SAUIDelayedActionCommand"24
@40@0:8@16@24q32
@48@0:8@16@24q32@40
B40@0:8@16q24B32B36
v28@0:8B16@?20
{?=BBB{CGRect={CGPoint=dd}{CGSize=dd}}d}24@0:8@16
d24@0:8q16
@"SRUIFDelayedActionCommandCache"
@"SiriUIKeyboardView"
{?="enabled"B"minimized"B"hasBeenShown"B"keyboardFrame"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"keyboardHeight"d}
@"NSDictionary"
@"AFUINetworkAvailabilityStateMachine"
@"AFUISiriTapPanDismissalPolicyManager"
@"<AFUISiriViewControllerDataSource>"
@"<AFUISiriViewControllerDelegate>"
@"AFUISiriSession"
@"AFUISiriRemoteSceneViewController"
@"SiriUIAudioRoutePickerController"
@"UIStatusBar"
@"NSNumber"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v28@0:8@"SiriUIBackgroundBlurViewController"16B24
@"SUICOrbView"
@"UILongPressGestureRecognizer"
@"AFUISiriCompactDimmingView"
@"<AFUISiriContentDelegate>"
@"<AFUISiriCompactViewDelegate>"
@"AFUISiriEyesFreeView"
@"SiriUIBackgroundBlurViewController"
@"AFUISiriCarPlayFullScreenBackgroundView"
@"<AFUISiriCarPlayBackgroundViewDelegate>"
@"<AFUINetworkAvailabilityStateMachineDelegate>"
@"RadiosPreferences"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"SAUIAppPunchOut"
@"NSBundle"
{CGSize="width"d"height"d}
@"UIVisualEffectView"
@44@0:8@16@24@32B40
@"NSData"
q32@0:8@16@24
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
@"<AFUISiriSetupViewControllerDelegate>"
i32@0:8@16@24
v32@0:8d16@?24
v64@0:8@16@24d32@40@48@?56
@40@0:8@16@24^@32
@60@0:8@16@24@32B40q44^@52
@48@0:8@16@24@32^@40
v36@0:8@"AFUISiriCarPlayBackgroundView"16B24@"BSAnimationSettings"28
@"AFUISiriCarPlayBackgroundView"
@"CRSUIStatusBarStyleAssertion"
?ffffff
?333333
&&&&&
!&&&&#
 @333333
%s Updating scene with frame: %@, interfaceOrientation: %zd
%s #sceneHosting Error requesting scene: %@ 
%s #sceneHosting Completed scene request with presenter %@ for scene (ID: %@) %@
%s #sceneHosting calling completion block for startHostingSceneForConfiguration
%s #siriHID Starting HID deferrals and resuming until asked to pause again: %@
%s #siriHID Invalidating HID deferrals and pausing until asked to start again
%s #sceneHosting Expected scene's settings to be UIMutableApplicationSceneSettings, but they weren't {actualClass: %@}
%s #sceneHosting Updating safe area insets {newSafeAreaInsets: %@}
%s #sceneHosting Updating safe area insets {sceneInsets: %@}
%s #siriHID viewDidMoveToWindow:shouldAppearOrDisappear: %d
%s #siriHID _shouldDeferHIDEventsForMode returned false for current deferral mode: %zd
%s #siriHID skipping deferral of HID events until un-paused
%s #siriHID invalidating defer HID events assertion
%s #siriHID Started defering HID events to Siri.app
%s #siriHID Skipped defering HID events because of an invalid contextID (%u) or clientContextID (%u)
%s #siriHID sceneDidUpdateClientSettings
%s Marking voicemail as played %@
%s Unsupported result %li
%s AFUISiriView's mode set to SiriUIViewModeCarPlay. This should use AFUISiriCarPlayView instead
%s AFUISiriView's mode set to SiriUIViewModeCompact. This should use AFUISiriViewCompact instead
%s %@
%s Not showing voiceActivationMaskView for mode - %@
%s Not dismissing lock view since we're at first unlock stage
%s Error deleting & disabling Cloud sync: %@
%s #xpcSiriApp Asked to invalidate XPC connection to Siri.app
%s #xpcSiriApp Setting up new XPC connection to Siri.app
%s error talking to remote proxy: %@
%s #xpcSiriApp %@
%s #xpcSiriApp resuming connection after startHostingSceneForConfiguration
%s #xpcSiriApp expectingInvalidation=%i reason=%@ explanation=%@
%s AFUIRemoteViewController's view did appear
%s Unable to perform operation on session delegate: %{public}@
%s #activation %@
%s #activation dismissal requested %@
%s Unable to update service view controller with new presentation identifier %@: %{public}@
%s Unable to notify service view controller about updated frontMostAppOrientation: %{public}@
%s Unable to notify service view controller about willActivate: %{public}@
%s Unable to notify service view controller about didActivate: %{public}@
%s Unable to set service view controller request options %{public}@: %{public}@
%s Unable to instruct service view controller to preloadPresentationBundleWithIdentifier: "%{public}@", error: %{public}@
%s Unable to instruct service view controller to preloadPluginBundles, error: %{public}@
%s Unable to instruct service view controller to show the presentation "%{public}@": %{public}@
%s Unable to notify service view controller about didDeactivate: %{public}@
%s Unable to notify service view controller about didReceiveOrbViewTapToCancelRequest: %{public}@
%s Unable to notify service view controller about showing passcode unlock: %{public}@
%s Unable to notify service view controller about will hide passcode unlock: %{public}@
%s Unable to notify service view controller about did hide passcode unlock: %{public}@
%s Unable to notify service view controller about starting text request: %{public}@
%s Type2Siri: Unable to notify service view controller about keyboard info: %{public}@
%s Unable to set service view controller's status bar frame: %{public}@
%s Unable to set service view controller's status view height: %{public}@
%s #compact Unable to set service view controller's bottom content inset: %{public}@
%s Unable to set session of service view controller: %{public}@
%s Unable to send help action: %{public}@
%s Unable to report bug: %{public}@
%s Unable to send bug button long press: %{public}@
%s Unable to send short tap action: %{public}@
%s Unable to notify service view controller about hostApplicationWillResignActive: %{public}@
%s Unable to notify service view controller about hostApplicationWillEnterForeground: %{public}@
%s Unable to notify service view controller about hostApplicationDidBecomeActive: %{public}@
%s Unable to notify service view controller about setWaitingForTelephonyToStart: %{public}@
%s Unable to check if there is content at point: %@
%s Unable to notify service view controller about siriWillBeginTearDownForDismissalReason:%lu error:%@
%s Unable to notify service view controller about presentationStateUpdatedFromPresentationState:toPresentationState: %{public}@
%s Unable to notify service view controller about emitUIStateTransitionForSiriDismissal:%d: %{public}@
%s Unable to notify service view controller about emitInstrumentationEvent: %{public}@
%s Unable to notify service view controller about didSuccessfullyHandleCommandsInDelayedActionCommand : %{public}@
%s Unable to notify service view controller about takeScreenhot: %{public}@
%s #session AFConnection was still alive when AFUISiriSession was being deallocated. Cleaning up the connection
%s The AFConnection for this session (%@) has been invalidated.
%s  from state %@; to state %@; event %@
%s  from state %@; event %@
ThinkingStateTransition
%s #tts AudioSession Handler:%@ audioSessionID:%u
%s #tts #carPlay AudioSession CarPlay
%s #tts AudioSession
%s #instrumentation New Turn %@ <-> Old Turn %@ 
%s #instrumentation New Turn %@ 
%s #instrumentation %@ in turn %@: 
%s Error fetching accounts: %@
%s #instrumentation Specified turn %@ to final options %@
%s #activation #carPlay activating requested direct action via Native Siri Kit. SASRequestOptions: %@, SAStartLocalRequest: %@
%s #activation #carPlay activating requested direct action via Legacy. SASRequestOptions: %@
%s #activation #carPlay activating requested direct action with no direct action specified. SASRequestOptions: %@
%s #activation #carPlay unable to handle direct action request options: %@
%s Skipping activation. Invalid request options provided for SASRequestSourceTesting: %@
%s Unexpected request source %@
%s no bulletin in request options. Exiting.
%s TTS was cancelled, ignoring as it is most likely due to Siri invocation during readout.
%s No network. Not starting the request
%s Device not unlocked since boot. Not starting the request
%s %@ not starting a new request because its delegate vetoed with nil request options
%s #modes Sending modes configuration : %@
%s Received Command: %@ aceId: %@
%s %@ may be a part of a multi turn request.
%s %@ indicates end of a multi turn request.
%s AFUISiriSession received unexpected command: %{public}@.%{public}@
%s Delegate is handling it - responds to shouldNonLocalDelegateHandlePunchouts: %@
%s Local delegate is handling it.
%s error:%@ requestClass:%@
%s #PhoneCallAudioSessionHandler Extending the audio session for imminent phone call
%s #PhoneCallAudioSessionHandler: shouldExtendAudioSessionForImminentPhoneCall: %@, suppressAudioInterruptedNotificationFlag: %@
%s #PhoneCallAudioSessionHandler startPlaybackDidFail: Telling SiriPresentationViewController to stop extending the audio session
%s #tts 1 _delegate:%@ audioSessionID:%u
%s #phatic 8
%s #phatic 1
%s #phatic 1 Fail: type = %tu
%s #phatic 2
%s #phatic 3 audioSessionCompletion:%@
%s #phatic 4 %@
%s #phatic 9 success:%i
%s #audioInterruption audio session interruption began userInfo: %{public}@
%s #audioInterruption audio session interruption ended shouldResume: %{public, bool}d userInfo: %{public}@
%s couldn't find a speech request dispatch group
%s #instrumentation Setting Request turn identifier %@
%s Not transitioning to AFUISiriSessionEventRequestFinished for temporary command : %@
%s #userAttention Attention was lost for event: %@
%s #userAttention Attention was gained for event: %@
%s #activation requestInfo: %@, context: %@
%s %zd
%s Updating announcement requests permitted by presentation: %{BOOL}d
%s Lock state while handling unlockDevice command = %zd
%s Sending ace command of class %@ expects a turn identifier, but one isn't provided.
%s Sending ace command of class %@ with a turn identifier is unsupported. Dropping turn identifier.
%s reason %zd
%s #modes Creating modes configuration with heuristics related to RequestOptions: %@
%s #modes Updating modes configuration with heuristics related to RequestOptions: %@
%s Unhandled direct action event: %li
%s #sceneHosting Initializing AFUISceneConfiguration with null bounds, falling back to displayConfiguration's bounds: %@
%s #sceneHosting Initializing AFUISceneConfiguration using bounds: %@
%s unknown invalidation reason: %li
%s #sceneHosting Overriding bounds for TV: %@
%s #sceneHosting Starting scene update for %@ with configuration %@
%s #sceneHosting Starting scene request for %@ with configuration %@
%s #sceneHosting FBApplicationUpdateScenesTransaction failed with error: %@
%s #sceneHosting FBApplicationUpdateScenesTransaction succeeded
%s #sceneHosting started FBApplicationUpdateScenesTransaction transaction
%s #sceneHosting updating scene (%@) with configuration %@
%s #sceneHosting went to update scene, but no scene exists and no transaction is running. Nothing to update
%s #sceneHosting Reached timeout, cancelling scene loading
%s #xpcSiriApp #sceneHosting %@: %@
%s #sceneHosting scene: %@
%s #sceneHosting prewarming assertion acquired %{bool}i
%s No transition is defined from state %{public}ld for event %{public}@. Let's not change state, then.
%s #noisy entered _cacheFileQueue
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s #noisy exited _cacheFileQueue
%s Can't remove %@: %@
%s Handle guide update with command: %@
%s Guide update completed successfully
%s Guide update failed
%s Unexpected response for guide update: %@
%s Guide update succeeded
%s Guide update failed with error: %@
%s Can't retrieve file attributes for %{public}@: %{public}@
%s Can't update last checked date for cached guide at %{public}@: %{public}@
%s Cached guide language code: %@ does not match current language code: %@, ignoring cache
%s Can't load aceObject dictionary at: %@, %@
%s Guide cache file not found at: %@
%s unhandled siri session state: %@. Falling back to SUICOrbViewModeOff
%s Attached debug log: %@
%s %{public}@ unable to read defaults from %{public}@: %{public}@
%s %{public}@ unable to parse defaults property list at %{public}@: %{public}@
%s Device unlock failed, unable to present debug controller
%s Unable to open URL: %{public}@
%s Device unlock failed unable to open URL: %{public}@
%s Device unlock failed unable to open internal view controller
%s Failed to serialize current conversation: %@
%s Enqueue delayed action command: %@, delay: %f, commands: %@
%s Enqueue dismissal action command: %@, commands: %@
%s Invalidating assertion: %@ for delayed action command: %@
%s Invalidating delayed action timer with userInfo: %@
%s Performing delayed action command: %@ with commands: %@
%s Received response for delayed command: %@, response: %@
%s Delayed command succeeded: %@
%s Delayed command failed: %@ with error: %@
%s #dismissal: updating taps and pans should dismiss Siri for state:%@ siriIsIdleAndQuiet:%@ dimmingLayerVisible:%@
%s #dismissal: updating taps and pans should dismiss Siri for state:%@ siriIsIdleAndQuiet:%@
%s #dismissal: updating taps and pans should dismmiss for dimming layer change:%@ sessiontState:%@
%s #dismissal Not updating tap pan dismissal policy on phone, feature flag not enabled.
%s #dismissal: cancelling pending tap/pan dismissal policy update. Scheduling new update with delay:%@ shouldDismiss:%@
%s Unknown distance unit %{public}@; returning full unit as abbreviation
%s Discarding AMS Lookup Result due to block deallocation.
%s Error performing AMS Lookup: %@
%s Error performing AMS Lookup - item not found
%s Unsupported AFUIStarkBackgroundViewMode value: %lu, returning back nil.
%s Unsupported SASRequestSource value: %lu, returning back AFUIStarkBackgroundViewModeSmall.
%s Failed to log 'disambiguation selected' event with selected ace id: %@
%s Playing audio from %@: %@
%s Failed to set audio active: %@
%s Unable to set audio category: %@
%s Failed to create AVAudioPlayer: %@
%s %@ did finish playing %@
%s Error setting the AVAudioSession to inactive: %@
%s Timed out waiting for remote view controller to connect.
%s #myriadUI Not showing the status bar as voiceActivationMaskView is visible
%s #activation animated disappearance finished: %@
%s #myriadUI Requesting show - voiceActivationMaskView
%s AFUISiriViewController's view did appear
%s %@ previousCount:%zd newCount:%zd transitioning:%@ newState:%@
%s skipping the startHosting request as there is already one pending
%s skipping the startHosting request, remoteViewController already loaded
%s transitioning _remoteViewController connectionState to pending
%s Creating remote scene viewController
%s Display Configuration was nil - falling back to _carScreen
%s Display Configuration was nil - falling back to mainScreen
%s Using displayConfiguration: %@
%s %{public}@ unable to obtain remote view controller: %{public}@
%s Remote Scene Controller did succeed in hosting scene
%s transitioning _remoteViewController connectionState to loaded
%s AFUISiriViewController deallocated before -[AFUISiriRemoteSceneViewController startHostingSceneForConfiguration:] completionBlock could run.
%s #punchout #activation dismissal requested %@
%s #carPlay #punchout Setting fullscreen background with a foreground inactive scene. Reactivating scene and requesting presentation.
%s _setStatusViewHidden: %@
%s Type2Siri: keyboard enabled %@=>%@, minimized %@=>%@ firstResponder %@=>%@
%s  sessionState: %@
%s Old trigger released
%s Starting new request with trigger
%s Trigger released
%s Dismissed siri for unlock result: %lu dismissal result: %d
%s Cannot present unlock screen. Sending SiriUIUnlockResultFailure to completion handler.
%s  %@Current view cannot show passcode unlock flow.
%s Passcode unlock screen for handoff authentication.
%s Passcode unlock screen for cold boot authentication.
%s #carDnd setting carDNDActive to %@
%s %@ not starting request because delegate returned nil requestOptions
%s Launched into listening mode. Setting recording start time to: %@
%{public, signpost.description:begin_time}llu
voiceUILaunch
buttonLaunch
%s Not launching into listening mode. Setting recording start time back to nil.
%s In HTTMode %d, Current options %@, source %ld
%s Stopping recording on hold to talk request canIgnoreHoldToTalkThreshold %@, holdToTalkThresholdElapsed %@, isInitialSpeechRequest %@
%s Recording start time was not set
%s Recording has not started on the audio route
%s Button up time: %f
%s Start recording to button up time: %f
%s Manual endpointing threshold: %f
%s Entering HTT mode
%s Transitioning to Automatic Endpointing
%s Transitioning to HTT mode
%s Exiting HTT mode
%s Trigger target did release
%s Starting request with trigger %@
%s Adding trigger target
%s #cancellationReason: endForReason %@
%s #activation
%s skipped logging event %@
%s logging event %@
%s #activation: trying to change session state while processing an app launch
%s Session released from AFUISiriViewController
%s Speech recording began on audio route: %@
%s Audio route changed to BluetoothHFP
%s Recording start time is not set
%s Recording start time should be updated
%s Updating recording start time to: %@
%s shouldNonLocalDelegateHandlePunchouts isVisible: %@
%s #myriadUI Requesting hide - voiceActivationMaskView
%s #OrbUIInteraction Mic Button Tapped State %@
%s #OrbUIInteraction Mic Button Held State %@
%s #orbAnimation _ignoreSiriSessionUpdates: %@
%s #orbAnimation old state: %@ | new  state:  %@
%s #compact Blur Visibility changed to %@
%s Format string: %@ has external domains: %d
%s Malformed parse for format string: %@
%s #carPlay changing from %@ to %@
%s #carPlay backgroundViewMode should never be set to AFUIStarkBackgroundViewModeUnset
%s from state %ld; event %@
%s Enabling assistant and starting Siri
%s Later Tapped, dismissing
%s Running Command ---> %{public}@
%s Failed to spawn %{public}s: %{public}s
%s Couldn't get modification date for log at %{public}@: %{public}@
%s Unable to get %{public}@ for file at %{public}@: %{public}@
%s #carPlay requesting CarPlay's status bar to %@ overriden
-[AFUISceneHostingViewController _updateSceneSettingsToSize:interfaceOrientation:withAnimationSettings:animationFence:]
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
AFUISceneHostingViewController.m
Invalid parameter not satisfying: %@
configuration
completionBlock
-[AFUISceneHostingViewController startHostingSceneForConfiguration:withCompletionBlock:]_block_invoke
#sceneHosting scene mismatch : old=%@ new=%@
PresentationManager-Scene%@
v16@?0@"UIMutableScenePresentationContext"8
v24@?0@"FBScene"8@"NSError"16
-[AFUISceneHostingViewController startDeferringHIDEventsIfNeeded]
-[AFUISceneHostingViewController invalidateAndPauseDeferringHIDEvents]
-[AFUISceneHostingViewController _updateSceneUIApplicationSceneSettingsWithBlock:]_block_invoke
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"UIMutableApplicationSceneSettings"8
-[AFUISceneHostingViewController _updateSceneSafeAreaInsets]_block_invoke
-[AFUISceneHostingViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[AFUISceneHostingViewController _updateDeferralChainWithWindow:]
launching Siri.app
-[AFUISceneHostingViewController sceneController:sceneWasInvalidated:forReason:]
Scene was invalidated - scene=%@
-[AFUISceneHostingViewController sceneController:sceneDidUpdateClientSettings:]
/AppleInternal/Library/Assistant/UIPlugins/Debug.siriUIBundle
AFUIDebugController
AFUIInternalDebugController
-[AFUIVoicemailPlayer _updateVoicemailPlayedState:finished:]
VMVoicemailManager
Class getVMVoicemailManagerClass(void)_block_invoke
AFUIVoicemailPlayer.m
Unable to find class %s
v8@?0
void *VisualVoicemailLibrary(void)
AFUIBulletinReadoutResultUnknown
AFUIBulletinReadoutResultSuccess
AFUIBulletinReadoutResultSynthesisFailed
AFUIBulletinReadoutResultSynthesisCancelled
AFUIBulletinReadoutResultNothingToSpeak
AFUIBulletinReadoutResultGetName
-[AFUISiriView _updateSiriStatusViewForMode:]
-[AFUISiriView setFlamesViewDeferred:]
-[AFUISiriView setVoiceActivationMaskViewVisible:]
v12@?0B8
v16@?0@"UIImage"8
radarBug
DnDwDSiri
position.y
opacity
Animation Group
-[AFUISiriView siriDidActivateFromSource:]
com.apple.siri
DISABLE_AND_DELETE
DISABLE_AND_DELETE_FOOTER
DISABLE_AND_DELETE_PROMPT_TITLE_MULTI_USER
DISABLE_AND_DELETE_PROMPT_MULTI_USER
DISABLE_AND_DELETE_PROMPT_CANCEL_MULTI_USER
DISABLE_AND_DELETE_PROMPT_TITLE
DISABLE_AND_DELETE_PROMPT
DISABLE_AND_DELETE_PROMPT_OK
DISABLE_AND_DELETE_PROMPT_CANCEL
v16@?0@"NSError"8
-[AFUICloudStorageViewController _disableAndDeleteCloudSync]_block_invoke
STStorageAppHeaderCell
Class getSTStorageAppHeaderCellClass(void)_block_invoke
AFUICloudStorageViewController.m
void *StorageSettingsLibrary(void)
Disable
ImageItemProvider Downloader
-[AFUISiriRemoteSceneViewController init]
-[AFUISiriRemoteSceneViewController invalidate]
-[AFUISiriRemoteSceneViewController _connection]
com.apple.siri.app
-[AFUISiriRemoteSceneViewController serviceViewControllerProxyWithErrorHandler:]_block_invoke
Connection to Siri.app was invalidated pid=%d _remoteConnection=%@
-[AFUISiriRemoteSceneViewController _invalidated]
Connection to Siri.app was interrupted pid=%d _remoteConnection=%@
-[AFUISiriRemoteSceneViewController _interrupted]
-[AFUISiriRemoteSceneViewController startHostingSceneForConfiguration:withCompletionBlock:]_block_invoke_2
v20@?0B8@"NSError"12
-[AFUISiriRemoteSceneViewController _handleInvalidationForReason:explanation:]_block_invoke
-[AFUISiriRemoteSceneViewController viewDidAppear:]
-[AFUISiriRemoteSceneViewController viewDidDisappear:]
-[AFUISiriRemoteSceneViewController sessionDelegate]_block_invoke
-[AFUISiriRemoteSceneViewController serviceRequestsDismissalWithUserInfo:withReason:]
-[AFUISiriRemoteSceneViewController serviceViewControllerRequestsDismissalWithDismissalReason:completion:]
-[AFUISiriRemoteSceneViewController updateToPresentationWithIdentifier:presentationProperties:animated:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController updateRemoteSceneWithFrontMostAppInterfaceOrientation:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillActivateFromSource:]_block_invoke
-[AFUISiriRemoteSceneViewController siriDidActivateFromSource:]_block_invoke
-[AFUISiriRemoteSceneViewController setRequestOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController preloadPresentationBundleWithIdentifier:]_block_invoke
-[AFUISiriRemoteSceneViewController preloadPluginBundles]_block_invoke
-[AFUISiriRemoteSceneViewController showPresentationWithIdentifier:properties:lockState:]_block_invoke
Invalidating because [AFUISiriRemoteSceneViewController siriDidDeactivate]
-[AFUISiriRemoteSceneViewController siriDidDeactivate]_block_invoke_2
-[AFUISiriRemoteSceneViewController didReceiveOrbViewTapToCancelRequest]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillShowPasscodeUnlockAndCancelRequest:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillHidePasscodeUnlockForResult:]_block_invoke
-[AFUISiriRemoteSceneViewController siriDidHidePasscodeUnlock]_block_invoke
-[AFUISiriRemoteSceneViewController startRequestForText:]_block_invoke
-[AFUISiriRemoteSceneViewController siriKeyboardViewDidChange:]_block_invoke
-[AFUISiriRemoteSceneViewController setStatusBarFrame:]_block_invoke
-[AFUISiriRemoteSceneViewController setStatusViewHeight:]_block_invoke
-[AFUISiriRemoteSceneViewController setBottomContentInset:]_block_invoke
-[AFUISiriRemoteSceneViewController setSession:]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveHelpAction]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveReportBugAction]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveBugButtonLongPress]_block_invoke
-[AFUISiriRemoteSceneViewController didReceiveShortTapActionWithRequestOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController applicationWillResignActive]_block_invoke
-[AFUISiriRemoteSceneViewController applicationWillEnterForeground]_block_invoke
-[AFUISiriRemoteSceneViewController applicationDidBecomeActive]_block_invoke
-[AFUISiriRemoteSceneViewController setWaitingForTelephonyToStart:]_block_invoke
-[AFUISiriRemoteSceneViewController hasContentAtPoint:completion:]_block_invoke
-[AFUISiriRemoteSceneViewController siriWillBeginTearDownForDismissalReason:withOriginalDismissalOptions:]_block_invoke
-[AFUISiriRemoteSceneViewController presentationStateUpdatedFromPresentationState:toPresentationState:]_block_invoke
-[AFUISiriRemoteSceneViewController emitUIStateTransitionForSiriDismissalWithDismissalReason:]_block_invoke
-[AFUISiriRemoteSceneViewController emitInstrumentationEvent:]_block_invoke
-[AFUISiriRemoteSceneViewController emitInstrumentationEvent:atTime:]_block_invoke
-[AFUISiriRemoteSceneViewController didSuccessfullyHandleCommandsInDelayedActionCommand:]_block_invoke
-[AFUISiriRemoteSceneViewController takeScreenshotWithCompletion:]_block_invoke
-[AFUISiriRemoteSceneViewController dealloc]
com.apple.LocalAuthentication.ui.presented
com.apple.siri.internal
ModeOverride
AFUISiriSession.m
Session must have a delegate queue
-[AFUISiriSession dealloc]
v16@?0@"<AFUISiriSessionDelegate>"8
-[AFUISiriSession _connection]
-[AFUISiriSession stateMachine:didTransitionFromState:forEvent:eventTimeStamp:]
-[AFUISiriSession _performTransitionForEvent:eventTimeStamp:]
-[AFUISiriSession launchedIntoListeningAtTime:]
-[AFUISiriSession forceAudioSessionActiveWithCompletion:]_block_invoke
Success
v20@?0I8@"NSError"12
-[AFUISiriSession forceAudioSessionActiveWithCompletion:]
-[AFUISiriSession _startRequestWithFinalOptions:completion:]
ResponseFramework
Enabled
-[AFUISiriSession _startRequestWithFinalOptions:completion:]_block_invoke_2
v24@?0@"NSArray"8@"NSError"16
Unable to handle direct action request options
Unexpected UI request options.
-[AFUISiriSession _startRequestForReadoutOfBulletin:]
-[AFUISiriSession _startRequestForReadoutOfBulletin:]_block_invoke_3
v16@?0Q8
Completion block of start request was dropped.
-[AFUISiriSession startRequestWithOptions:completion:]
No network.
Device not unlocked since boot.
-[AFUISiriSession startRequestWithOptions:completion:]_block_invoke
Session delegate vetoed.
v16@?0@"SASRequestOptions"8
v16@?0@"<AFModesConfigurationMutating>"8
-[AFUISiriSession assistantConnectionRequestWillStart:]
v16@?0@"AceObject<SAAceCommand>"8
refId
-[AFUISiriSession assistantConnection:receivedCommand:completion:]
-[AFUISiriSession assistantConnection:receivedCommand:completion:]_block_invoke_2
-[AFUISiriSession _performPunchoutCommand:delegate:completion:]
-[AFUISiriSession assistantConnection:didFinishAcousticIDRequestWithSuccess:]
-[AFUISiriSession assistantConnection:requestFailedWithError:requestClass:]
-[AFUISiriSession assistantConnectionRequestFinished:]
-[AFUISiriSession assistantConnection:willProcessStartPlayback:intent:completion:]
-[AFUISiriSession assistantConnection:startPlaybackDidFail:]
-[AFUISiriSession assistantConnection:didChangeAudioSessionID:]_block_invoke
-[AFUISiriSession assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:]_block_invoke
-[AFUISiriSession assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:]
Unsupported Two-Shot prompt type %ld.
-[AFUISiriSession _playPhaticWithCompletion:]
-[AFUISiriSession _playPhaticWithCompletion:]_block_invoke
success
Failed to play phatic prompt.
-[AFUISiriSession assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:]_block_invoke_2
-[AFUISiriSession assistantConnectionAudioSessionDidBeginInterruption:userInfo:]
-[AFUISiriSession assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:]
v16@?0@"<AFSpeechRecordingAlertBehaviorMutating>"8
v16@?0@"<AFSpeechRecordingAlertPolicyMutating>"8
dictionary
v16@?0@"NSArray"8
-[AFUISiriSession _startSpeechRequestWithSpeechRequestOptions:isInitialBringUp:completion:]
No speech request ispatch group.
No AFConnection.
AFConnection is already recording.
-[AFUISiriSession requestDidPresentViewForUICommand:]
-[AFUISiriSession didLoseAttentionWithEvent:]
-[AFUISiriSession didGainAttentionWithEvent:]
-[AFUISiriSession _startLegacyDirectActionRequestWithInfo:context:completion:]
-[AFUISiriSession _startContinuityRequestWithInfo:completion:]
-[AFUISiriSession _startRequestWithInfo:completion:]
-[AFUISiriSession startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:machAbsoluteTime:]
v16@?0q8
-[AFUISiriSession clearContext]
-[AFUISiriSession resetContextTypes:]
-[AFUISiriSession setAnnouncementRequestsPermittedByPresentationWhileActive:]
-[AFUISiriSession _handleUnlockDeviceCommand:completion:]
-[AFUISiriSession _performAceCommand:turnIdentifier:machAbsoluteTime:conflictHandler:]
Core duet logging queue
-[AFUISiriSession end]
-[AFUISiriSession endForReason:]
-[AFUISiriSession _updateActiveAccount:]_block_invoke
-[AFUISiriSession _updateModesHeuristicsForRequestOptions:]
-[AFUISiriSession _updateCarPlayInvocationContext:fromDirectActionEvent:appBundleIdentifier:]
NSString *getPKDarwinNotificationEventInAppPresented(void)
PKDarwinNotificationEventInAppPresented
void *PassKitCoreLibrary(void)
INStartCallIntent
Class getINStartCallIntentClass(void)_block_invoke
void *IntentsLibrary(void)
_DKSystemEventStreams
Class get_DKSystemEventStreamsClass(void)_block_invoke
void *CoreDuetLibrary(void)
BOOL soft_BYSetupAssistantHasCompletedInitialRun(void)
AFUISiriLanguage.m
BYSetupAssistantHasCompletedInitialRun
void *SetupAssistantLibrary(void)
AFUISceneConfiguration.m
displayConfiguration
-[AFUISceneConfiguration _initWithInitialBounds:displayConfiguration:]
AFUISceneInvalidationReasonUnknown
AFUISceneInvalidationReasonSiriDidDeactivate
AFUISceneInvalidationReasonDealloc
AFUISceneInvalidationReasonDisplayIdentityChanged
AFUISceneInvalidationReasonXpcInterrupted
AFUISceneInvalidationReasonXpcInvalidated
+[AFUISceneConfiguration stringForInvalidationReason:]
-[AFUISceneConfiguration _setupPlatformSpecificDefaultSettings]
, foreground: %@, bounds: %@, safeAreaInsets: %@, deactivationReasonMask: %@
AFUISiriSessionEventDirectRequestBegan
AFUISiriSessionEventSpeechRecordingBegan
AFUISiriSessionEventSpeechRecordingEnded
AFUISiriSessionEventSpeechRecordingCancelled
AFUISiriSessionEventSpeechRecordingFailed
AFUISiriSessionEventRequestCancelled
AFUISiriSessionEventRequestFinished
AFUISiriSessionEventRequestFailed
AFUISiriSessionEventCommandStarted
AFUISiriSessionEventZeroLatencyLaunch
yyyy
AFUISceneController(%p): <Transaction: %@
Scene (sceneID: %@, sceneState: %zd) (%@)>
#sceneHosting Invalidating scene because [AFUISceneController dealloc]
AFUISceneController.m
#sceneHosting Request is not allowed when we already have a scene or in flight request : scene=%@ createTransaction=%@
#sceneHosting Invalidating scene because displayIdentity changed from "%@" to "%@" for _scene:%@
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]
SiriHostedScene-%@-%@
@"FBProcessExecutionContext"8@?0
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]_block_invoke_2
-[AFUISceneController requestSceneViewWithConfiguration:completionBlock:]_block_invoke
-[AFUISceneController updateSceneViewWithConfiguration:]
-[AFUISceneController sceneLoadingTimeOutDidOccur]
timeout
-[AFUISceneController invalidateSceneForReason:explanation:]
deactivating
#sceneHosting createTransaction should be gone by now ; %@
-[AFUISceneController sceneDidInvalidate:]
siri prewarming
-[AFUISceneController transaction:didLaunchProcess:]_block_invoke
AFUIStateMachine.m
initialState != NSNotFound
-[AFUIStateMachine _endStateNumberFromDictionary:forEvent:]
var/mobile/Library/Caches/com.apple.siri.SiriGuideUpdateCache.plist
com.apple.siri.AFUIGuideCacheManager
AppleKeyboardsPreferencesChangedNotification
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]_block_invoke
-[AFUIGuideCacheManager updateCacheWithGuideUpdate:completion:]_block_invoke_2
-[AFUIGuideCacheManager _clearCachedGuide]
-[AFUIGuideCacheManager _clearCachedGuide]_block_invoke
-[AFUIGuideCacheManager _checkGuideUpdateUsingAFClientLiteWithTag:]_block_invoke
v16@?0@"SABaseCommand"8
-[AFUIGuideCacheManager _shouldCheckForUpdateAtDate:lastAppUpdateTime:]_block_invoke
-[AFUIGuideCacheManager _updateLastCheckedWithDate:]_block_invoke
-[AFUIGuideCacheManager _cachedGuideUpdate]_block_invoke
-[AFUIGuideCacheManager _aceObjectDictionaryAtFilepath:]
AFUIPresentationPropertiesRequestSourceKey
AFUIPresentationPropertiesShouldSuppressErrorTTSKey
car.fill
com.apple.AssistantUIFramework
com.apple.siri.assistantUI.LanguageCodeDidChangeNotification
+[AFUIUtilities orbViewModeForSiriSessionState:]
https://
.siri.apple.com
%@ (%@)
(%@)
Library
Assistant
PreviousConversation
_DidShowEmergencyCallViewNotification
_WillLeaveEmergencyCallViewNotification
BOOL AFUIGraphicalFloatsEqualForScale(CGFloat, CGFloat, CGFloat)
AFUIUtilities.m
AFUIGraphicalFloatsEqualForScale cannot compute equivalence for scale of 0
ComponentName
ComponentVersion
ComponentID
Title
Description
Classification
Reproducibility
Screenshot
Attachments
Keywords
DeviceIDs
tap-to-radar
Serious Bug
I Didn't Try
v32@?0@"AFAccount"8Q16^B24
image/png
-[AFUITapToRadarManager attachData:name:mimeType:]
-[AFUITapToRadarManager attachFileAtPath:image:]
Please describe the bug you encountered:
- Hostname: %@
en-US
- Siri language: %@
- Context Collector: 
- Context Collectors: 
  %@
v32@?0@"NSString"8Q16^B24
 "%@"
com.apple.SiriViewService
-[AFUIPreferences initWithDefaultsAtURL:]
SiriUI
siri_ttr
-[AFUIBugReportPresenter _requestToPresentDebugController:]_block_invoke_4
-[AFUIBugReportPresenter _requestToOpenURL:]_block_invoke_2
-[AFUIBugReportPresenter _requestToOpenURL:]_block_invoke
-[AFUIBugReportPresenter _requestToPresentInternalDebugController:]_block_invoke_2
-[AFUIBugReportPresenter _conversationDataFromConversation:]
Siri Debug
v16@?0@"UIAlertAction"8
File a radar
Siri Internal Settings
Internal Debug UI
Cancel
prefs:root=INTERNAL_SETTINGS&path=Siri
Would you like to attach a screenshot ?
v32@?0@8Q16^B24
-[AFUIDelayedActionCommandCache enqueueDelayedActionCommand:completion:]
SiriDelayedActionCommandAssertion-%@
-[AFUIDelayedActionCommandCache cancelDelayedActionWithDelayedActionCancelCommand:completion:]
-[AFUIDelayedActionCommandCache _performDelayedActionCommandTimerAction:]
-[AFUIDelayedActionCommandCache invalidatePendingCommands]
-[AFUIDelayedActionCommandCache _invalidateDelayedActionTimer:withKey:]
-[AFUIDelayedActionCommandCache performDismissalCommands]
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]_block_invoke_2
-[AFUIDelayedActionCommandCache _performCommandsWithDelayedActionCommand:]_block_invoke
v32@?0@"<SAClientBoundCommand>"8Q16^B24
-[AFUISiriTapPanDismissalPolicyManager idleAndQuietDidChange:forSessionState:dimmingLayerVisible:]
-[AFUISiriTapPanDismissalPolicyManager idleAndQuietDidChange:forSessionState:]
-[AFUISiriTapPanDismissalPolicyManager dimmingLayerVisibilityDidChange:forSessionState:]
AFUISiriTapPanDismissalPolicyManager.m
Can't perform policy updates for iPad from a different device class
-[AFUISiriTapPanDismissalPolicyManager _dismissalPolicyForPassThroughUnlessDimmed:forSessionState:]
-[AFUISiriTapPanDismissalPolicyManager _setShouldDismissForTapsAndPans:shouldDelayDelegateUpdate:]
#TRUNCATED
SiriUserUtteranceKeyboardInitiated
@{tts#
\pause=500\}
_DKLocationApplicationActivityMetadataKey-phoneNumber
com.apple.siri.businessLocation
/app/locationActivity
AFUIStoreServicesData
RegionalBehaviorGB18030
location-reminders
DeviceSupportsNavigation
CellularTelephonyCapability
FEET_ABBREVIATION
Localizable
MILES_ABBREVIATION
METERS_ABBREVIATION
KILOMETERS_ABBREVIATION
-[SADistance(AssistantUIAdditions) afui_abbreviatedUnit]
-[SAUIAppPunchOut(AssistantUIAdditions) afui_populateStoreServicesData:]_block_invoke_2
-[SAUIAppPunchOut(AssistantUIAdditions) afui_populateStoreServicesData:]_block_invoke
v24@?0@"AMSLookupResult"8@"NSError"16
PUNCHOUT_FAILURE_FOR_APP
SPEAKABLE_PUNCHOUT_FAILURE_FOR_APP
PUNCHOUT_FAILURE_GENERIC
PUNCHOUT_APP_NOT_AVAILABLE_IN_STOREFRONT
SPEAKABLE_PUNCHOUT_APP_NOT_AVAILABLE_IN_STOREFRONT
INSTALL_APP_BUTTON_TITLE
%@://%@
com.apple.siri.CarDisplay
com.apple.siri.CarDisplay.UIFree
com.apple.MobileSMS
com.apple.mobilePhone
AFUIStarkBackgroundViewModeUnset
AFUIStarkBackgroundViewModeSmall
AFUIStarkBackgroundViewModeFullScreen
AFUIStarkBackgroundViewModeFullScreenSystem
AFUIStarkBackgroundViewModeGetName
+[AFUIStarkUtilities backgroundViewModeForRequestSource:directActionEvent:]
/System/Library/Assistant/DebugOverrides.plist
dashBoardPasscodeBackground
d16@?0d8
-[AFUIDisambiguationAnalyticsManager logDisambiguationItemSelected:]
manual
type
aceId
title
@"NSDictionary"8@?0
@unionOfArrays.self
com.apple.siri.Compact
-[AFUIAudioPlayer startPlaying]
AFUIAudioPlayer.m
This method should be overwritten by child class!
-[AFUIAudioPlayer audioPlayerDidFinishPlaying:successfully:]
com.apple.siri.EyesFree
SpeechRecognition
UUID
VIEWMODE
SESSIONID
-[AFUISiriViewController initWithConnection:configuration:requestSource:displayConfiguration:]
Siri Remote View Controller Message Queue
B12@?0B8
-[AFUISiriViewController initWithConnection:configuration:requestSource:displayConfiguration:]_block_invoke
persistent_phone
-[AFUISiriViewController dealloc]
-[AFUISiriViewController requestStatusBarVisible:animated:completion:]
AFUISiriViewController.m
%@ can only be used on the main thread
-[AFUISiriViewController enterUITrackingMode]
-[AFUISiriViewController exitUITrackingMode]
-[AFUISiriViewController proximityStatusChanged:]
-[AFUISiriViewController animatedAppearanceWithFactory:completion:]
-[AFUISiriViewController animatedDisappearanceWithFactory:completion:]
-[AFUISiriViewController animatedDisappearanceWithFactory:completion:]_block_invoke_2
-[AFUISiriViewController setFluidDismissalState:]
-[AFUISiriViewController loadView]
com.apple.siri.ui.begin
com.apple.siri.ui.end
-[AFUISiriViewController viewWillAppear:]
-[AFUISiriViewController viewDidAppear:]
-[AFUISiriViewController viewWillDisappear:]
-[AFUISiriViewController viewDidDisappear:]
-[AFUISiriViewController _setVoiceTriggerEnabled:]
Disabled
No change
-[AFUISiriViewController _presentRemoteViewController]
-[AFUISiriViewController _presentRemoteViewController]_block_invoke
-[AFUISiriViewController siriRemoteViewControllerDidFinishDismissing:]
-[AFUISiriViewController dismissSiriRemoteViewController:userInfo:withReason:]
-[AFUISiriViewController siriRemoteViewController:setCarDisplaySnippetMode:]
-[AFUISiriViewController siriRemoteViewController:requestsDismissalWithReason:withCompletion:]
-[AFUISiriViewController _setStatusViewHidden:]
-[AFUISiriViewController _setShowKeyboardIfTextInputEnabled:minimized:]
requestSource
-[AFUISiriViewController _handleMicButtonTapFromSource:]
Unknown Siri status session state %ld
-[AFUISiriViewController _handleMicButtonLongPressBeganFromSource:]
-[AFUISiriViewController _handleMicButtonLongPressEndedFromSource:]
ASSISTANT_UNLOCK_TITLE
-[AFUISiriViewController _handlePasscodeUnlockAndCancelRequest:dismissOnFailure:withCompletion:]_block_invoke_6
-[AFUISiriViewController _handlePasscodeUnlockAndCancelRequest:dismissOnFailure:withCompletion:]_block_invoke
-[AFUISiriViewController showPasscodeUnlockScreenForRequest:unlockCompletion:]
ASSISTANT_REMOTE_AUTHENTICATION_TITLE
ASSISTANT_REMOTE_AUTHENTICATION_SUBTITLE
ASSISTANT_FIRST_UNLOCK_TITLE
-[AFUISiriViewController siriDidDeactivate]
-[AFUISiriViewController setCarDNDActive:]
-[AFUISiriViewController startRequestWithOptions:completion:]
No UI request options.
triggerEndMachTime
-[AFUISiriViewController handleViewFullyRevealed]
-[AFUISiriViewController _holdToTalkTriggerDidReleaseFromSource:]
-[AFUISiriViewController _holdToTalkThresholdHasElapsed]
-[AFUISiriViewController _enterHoldToTalkMode]
-[AFUISiriViewController _transitionToAutomaticEndpointMode]
-[AFUISiriViewController _transitionToManualEndpointMode]
-[AFUISiriViewController _exitHoldToTalkMode]
-[AFUISiriViewController _activationTriggerDidRelease:]
-[AFUISiriViewController startRequestWithActivationTrigger:completion:]
-[AFUISiriViewController endSession]
-[AFUISiriViewController siriSession:willProcessAppLaunchWithBundleIdentifier:]
-[AFUISiriViewController siriSession:failedToLaunchAppWithBundleIdentifier:]
-[AFUISiriViewController siriSession:didChangeToState:event:machAbsoluteTransitionTime:]
-[AFUISiriViewController siriSessionWillEnd:]
-[AFUISiriViewController siriSessionDidEnd:]
-[AFUISiriViewController siriSession:speechRecordingDidBeginOnAVRecordRoute:]
-[AFUISiriViewController shouldNonLocalDelegateHandlePunchouts]
-[AFUISiriViewController hideVoiceActivationMaskViewIfNecessary]_block_invoke
NSString *getSSScreenshotsDisplayModeWillChangeToFullscreenNotificationName(void)
SSScreenshotsDisplayModeWillChangeToFullscreenNotificationName
void *ScreenshotServicesLibrary(void)
/siri/ui
_PSSiriNLLogger
Class get_PSSiriNLLoggerClass(void)_block_invoke
void *PeopleSuggesterLibrary(void)
backgroundColor
-[AFUISiriCompactView _micButtonTapped:]
-[AFUISiriCompactView _micButtonHeld:]
-[AFUISiriCompactView animateOrbViewDismissalWithCompletion:]
-[AFUISiriCompactView setSiriSessionState:]
-[AFUISiriCompactView backgroundBlurViewController:didSetBlurVisibilityTo:]
visible
not visible
-[AFSpeakableUtteranceParser(AssistantUIAdditions) afui_hasExternalDomainsForStringWithFormat:]
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
+[AFSpeakableUtteranceParser(AssistantUIAdditions) _domainsForStringWithFormat:]
-[AFUISiriCarPlayBackgroundView setBackgroundViewMode:]
-[AFUISiriCarPlayBackgroundView _updateViewsForVisibility:backgroundViewMode:]
-[AFUINetworkAvailabilityStateMachine _performTransitionForEvent:]
SRSiriAvailabilityEventConnectionAvailable
SRSiriAvailabilityEventConnectionOffline
SRSiriAvailabilityEventNotUnlocked
v32@?0@"UIImage"8@"UIImage"16@"SAUIAppPunchOut"24
com.apple.siri.DebugErrorDomain
auraLight
@"UIColor"16@?0@"UITraitCollection"8
application/x-gzip
application/octet-stream
ASSISTANT_ALERT_TITLE
ASSISTANT_ALERT_TEXT
ASSISTANT_ALERT_DISMISS
com.apple.siri.siri_enabled_from_siri_setup
-[AFUISiriSetupViewController _continueWithLanguageCode:commitLanguageCodeToPreferences:]
-[AFUISiriSetupViewController _laterTapped:]
BYFlowSkipController
Class getBYFlowSkipControllerClass(void)_block_invoke
AFUISiriSetupViewController.m
NSString *getBYFlowSkipIdentifierSiri(void)
BYFlowSkipIdentifierSiri
Siri log manager queue
text/*
siri_view_hierarchy_description.txt
v16@?0@"NSString"8
siri-card
^%@-
SpeechLogs
.*\.spx$
audio/speex
.*\.opx$
audio/opus
.*\.wav$
audio/wav
VoiceTrigger
audio
.*\.log$
/bin/cp %@ %@
.*\.*$
/bin/cp -r %@ %@
/var/mobile/Library/VoiceTrigger/SAT
/SAT
/usr/local/bin/codecctl AppleCS42L71Audio dump
/codec_dump.txt
/usr/sbin/ioreg -c com_apple_audio_IOBorealisOwl -r -w 0
/IOBorealisOwl_dump.txt
/usr/local/bin/boreaowlctl --dump-fw
/boreaowlctl_dump.txt
/usr/sbin/ioreg -c AppleEmbeddedAudioDevice -r -w 0
/AppleEmbeddedAudioDevice_dump.txt
voicetrigger.tar.gz
VoiceServices
+[AFUIDebugLogManager executeSystemCommand:stdoutTo:]
application/x-plist
^%@_.*\.log$
text/plain
-[AFUIDebugLogManager _captureLogsAtURL:logName:sinceTime:pattern:mimeType:completion:]_block_invoke_2
B24@?0@"NSURL"8@"NSDictionary"16
%@-latest
/usr/bin/tar czf %@ -C %@ %@
Unable to archive directory.
ArchiveCommand
application/x-gtar
/var/mobile/Library/Logs/CrashReporter
-[AFUIDebugLogManager _contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:]_block_invoke
q24@?0@"NSURL"8@"NSURL"16
CardLogs
-[AFUISiriCarPlayView _orbTappedWithGestureRecognizer:]
-[AFUISiriCarPlayView _orbHeldWithGestureRecognizer:]
-[AFUISiriCarPlayView backgroundView:requestsCarPlayStatusBarOverride:animationSettings:]
NOT BE
softlink:r:path:/System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
softlink:r:path:/System/Library/PrivateFrameworks/StorageSettings.framework/StorageSettings
softlink:o:path:/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
softlink:o:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
softlink:o:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
softlink:r:path:/System/Library/PrivateFrameworks/ScreenshotServices.framework/ScreenshotServices
softlink:r:path:/System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester
softlink:r:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
AFUISceneHostingViewController
AFUISceneControllerDelegate
NSObject
VSAdditions
AFUIModalTextViewController
AFUIVoicemailPlayer
AFUISiriView
SiriUISiriStatusViewDelegate
AFUISiriContent
AFUISiriRemoteViewHosting
AFUICloudStorageViewController
AFUITouchPassThroughView
AFUIRemoteImageRepresentation
NSItemProviderWriting
AFUIViewControllerHosting
AFUISiriRemoteSceneViewController
SiriUIPresentationRemoteControlling
AFUIViewControllerServing
AFUISiriSessionDelegate
AFUISiriSessionListener
AFUISiriSession
AFAssistantUIService
AFSpeechDelegate
SRUIFStateMachineDelegate
AFUISiriLanguage
AFUISiriViewBuilder
AFUISceneConfiguration
NSCopying
AFUISiriRemoteContainerView
AFUITTRController
AssistantUIAdditions
AFUISceneController
FBSceneObserver
FBApplicationUpdateScenesTransactionObserver
BSTransactionObserver
_AFUIDataStoringShim
AFUIDataStoring
AFUIStateMachine
AFUIGuideCacheManager
AFUISceneSpecification
AFUIStarkSceneSpecification
AFUISceneClientSettings
AFUIMutableSceneClientSettings
AFUISiriEyesFreeView
AFUIUtilities
AFUITapToRadarManager
AFUIBugReporting
AFUIPreferences
AFUIBugReportPresenter
AFUIDebugControllerDelegate
AFUIInternalDebugControllerDelegate
AFUIBugReportPresenting
_AFUIAssertingDelayedActionCommand
AFUIDelayedActionCommandCache
AFUISiriTapPanDismissalPolicyManager
SiriUI
KeyboardInitiated
SARecordActivity
AFUIStarkUtilities
AFUIPasscodeBlurView
AFUIDisambiguationAnalyticsManager
AFUITestInput
AFUIAudioPlayer
AVAudioPlayerDelegate
AFUISiriViewController
AFUINetworkAvailabilityStateMachineDelegate
AFUISiriRemoteSceneViewControllerDataSource
AFUISiriRemoteSceneViewControllerDelegate
AFUISiriViewDelegate
AFUISiriContentDelegate
AFUISiriCompactViewDelegate
SiriUIAudioRoutePickerControllerDelegate
AFUISiriSessionLocalDataSource
AFUISiriSessionLocalDelegate
AFUISiriViewDataSource
SiriUIKeyboardViewDelegate
AFUISiriTapPanDismissalPolicyManagerDelegate
SRUIFDelayedActionCommandCacheDelegate
A!!g
AFUIAudioMessagePlayer
AFUISiriCompactDimmingView
AFUISiriCompactView
UIGestureRecognizerDelegate
SiriUIBackgroundBlurViewControllerDelegate
SUICOrbViewControlling
AFUISiriCarPlayBackgroundView
AFUINetworkAvailabilityStateMachine
RadiosPreferencesDelegate
AFUIImageResource
AFUIDebugError
AFUISiriCarPlayFullScreenBackgroundView
AFUIDebugLog
AFUISiriSetupViewController
UIAdaptivePresentationControllerDelegate
AFUIDebugLogManager
AFUISiriCarPlayView
AFUISiriCarPlayBackgroundViewDelegate
buttonDownTimestamp
convertRect:toView:
adviseSessionArbiterToContinueWithPreviousWinner:
setCustomView:
doubleValue
setLocalDataOverrides:
prepareToPlay
bugReportPresenter:requestsToHandlePasscodeUnlockWithCompletion:
convertRect:fromView:
homeButtonUpFromBeep
interfaceWithProtocol:
tableBackgroundColor
addTriggerTarget:action:
setCurrentTime:
bringSubviewToFront:
URLByAppendingPathComponent:isDirectory:
yellowColor
setLiftToWakeDetected:
interfaceOrientation
_endDelayingPresentation
continuityInfo
systemUptime
displayName
setCurrentGuideTag:
heightForWidthSizeClass:
year
setLevel:
contextAppInfosForSiriViewController:
setCornerRadius:
integerValue
systemImageNamed:
displayIdentity
heightAnchor
addTarget:action:forControlEvents:
bottomAnchor
writeToFile:options:error:
scaleFactor
preheatWithStyle:
systemDarkGrayTintColor
displayConfiguration
setLanguageCode:
load
addSubview:
hasSuffix:
boolValue
windowScene
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
siriViewControllerShouldSupportTextInput:
intValue
scale
addObserver:selector:name:object:
hasRoutesToPick
setContentOffset:
preferredLanguages
setKeyPath:
window
saveObjects:error:
siriViewControllerShouldEndSession:
dismissSiriViewController:withReason:
contentWeighting
setStartingAlertBehavior:
instrumentationEvents
setContentMode:
addObserver:
length
bluetoothIsPicked
setIsVoiceTriggerRequest:
willPresentUsefulUserResultWithType:forCommand:
preferredFontForTextStyle:
siriViewControllerSessionDidResetContext:
setSpeechSynthesisRecord:
dismissSiriSetupViewController:
insertSubview:belowSubview:
contentVersion
addObjectsFromArray:
willPresentUI
legacyDirectActionIdentifier
setConfirmationAction:
handoffOriginDeviceName
setIsUIFree:
blackColor
safeAreaLayoutGuide
leadingAnchor
setSpeechFileURL:
insertSubview:below:
contentState
setCompositingFilter:
handlesFunctions
addObject:
superview
willChangeValueForKey:
preferredContentSize
bestSupportedLanguageCodeForLanguageCode:
setIsSiriAutoPrompt:
contentRect
setSpeechDelegate:
insertSubview:aboveSubview:
safeAreaInsetsPortrait
widthAnchor
suggestedUtterances
setCompletionBlock:
addGestureRecognizer:
handleTTSCodes
setIsRequestMadeWithPhysicalDeviceInteraction:
beginTransaction
containsView:
safeAreaInsetsForSceneCreationInSiriViewController:
layoutIfNeeded
setSpeakableText:
insertSubview:above:
setCommands:
addFinishBlock:
predictedRecordRouteIsZLL
siriLanguageSpokenLanguageCodeDidChange:
successCommands
beginSpeakingForClient:
setIsInitialBringUp:
whiteColor
siriViewControllerDidChangeVisibility:
inputType
containsObject:
addEntriesFromDictionary:
substringToIndex:
predicateWithBlock:
setClasses:forSelector:argumentIndex:ofReply:
layer
setIsForCarDND:
beginPresentationTransition
voicemailWithIdentifier:
disableSiriActivationRequestedBySiriSetupViewController:
containerView
_dimmingViewColor
addChildViewController:
voiceTriggerEventInfo
setCenter:
substringFromIndex:
setIsEyesFree:
beginMonitoringAvailability
constraints
subarrayWithRange:
initWithTarget:action:
launchOptions
setCategory:withOptions:error:
beginAppearanceTransition:animated:
disableAndDeleteCloudSyncWithCompletion:
addAnimation:forKey:
play
setIsDeviceScreenON:
voiceMailId
handleFailureInMethod:object:file:lineNumber:description:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
siriViewController:willStartRequestWithOptions:
rollbackRequest
addAction:
setCardSectionId:
pixelWidth
stringWithUTF8String:
_performWithoutRetargetingAnimations:
setIsDeviceLocked:
views
begin
handleFailureInFunction:file:lineNumber:description:
constraintEqualToConstant:
initWithString:
siriViewController:willProcessAppLaunchWithBundleIdentifier:
_deviceSpecificImageNamed:inBundle:
setShouldRasterizeEffectsView:
setCarPlayInvocationContext:
latestStoredTurn
pixelHeight
stringWithFormat:
activeInterfaceOrientation
becomeFirstResponder
handleCommand:commandHandler:completion:
setIsDeviceInStarkMode:
constraintEqualToAnchor:constant:
siriViewController:voiceActivationMaskViewIsVisible:
initWithSpecification:
stringValue
directActionApplicationContext
bagSubProfileVersion
lastPathComponent
guideTag
setIsConnectedToCarPlay:
constraintEqualToAnchor:
siriViewController:updateHomeAffordanceForBlurVisibilty:
initWithSettings:
resume
lastObject
stringFromDate:
activeAccount
phoneNumber
bagSubProfile
guideSnippet
setInvocationSource:
initWithSessionID:UUID:viewMode:dismissalReason:starting:absoluteTimeStamp:
siriViewController:siriIdleAndQuietStatusDidChange:
setButtonPressDetected:
performWithoutAnimation:
activationEvent
languages
bagKeySet
setInvalidationHandler:
groupSpecifierWithID:
resourceUrl
initWithRootViewController:
setBundleId:
bagForProfile:profileVersion:
activationDeviceIdentifier
languageCode
groupIdentifier
version
performTransitionForEvent:eventTimeStamp:
setInterruptionHandler:
resignFirstResponder
stringByAppendingString:
initWithRequestSource:uiPresentationIdentifier:
setShouldCrossfade:
activateConstraints:
label
setBundleID:
backgroundWeighting
greenColor
valueWithCGRect:
setInterfaceOrientation:
initWithRequestOptions:updateHandle:
stringByAppendingPathExtension:
knowledgeStore
showsHoldToTalkIndicator
activate
grayColor
performSelector:withObject:afterDelay:
valueWithCGPoint:
setInterface:forSelector:argumentIndex:ofReply:
initWithPropertyListRepresentation:
_deactivateReachability
actionWithTitle:style:handler:
stringByAppendingPathComponent:
showServerOnUI
keyboardFocusEnvironment
getStatusBarOverrideData
valueForKeyPath:
performLookupWithBundleIdentifiers:itemIdentifiers:
componentsSeparatedByString:
siriViewController:failedToLaunchAppWithBundleIdentifier:
acquireWithAnimationSettings:
initWithProcessIdentity:executionContextProvider:
setServerCommandId:
keyWindow
stringByAppendingFormat:
getResourceValue:forKey:error:
valueForKey:
requiresUserInteraction
keyPathForSiriActiveStatus
setSelectionText:
componentsJoinedByString:
initWithPrivateStyle:
showPickerFromViewController:animated:
acousticIdEnabled
stopSpeechWithOptions:
setBlurRadius:
backgroundColor
value
requireGestureRecognizerToFail:
components:fromDate:
setScheme:
itemAtIndexPath:
aceObject
getDeviceEngagementEvents:forDeviceEngagementTimeWindow:
stopSpeech
setBluetoothOn:
setInitialBringUp:
userTypedInSiri
paused
requestStyle:animated:
compare:
initWithPath:
isVoiceTriggerRequest
aceId
pathForResource:ofType:
showConfirmationViewForSpecifier:
setBeginTime:
userRelevantEventDidOccurInSiriViewController:
gender
siriViewController:didHideStatusView:
requestStyle:
initWithPID:flags:reason:name:withHandler:
path
accounts
setBeepSoundID:
averagePower
frame
initWithOriginalCommandId:category:duration:
shouldShowHeaderForDirectActionEvent:
parsedUtteranceFromText:context:spekableObjectProviding:
absoluteString
isValid
setImageData:forKey:
formattedText
initWithName:value:
commit
setScale:
setBackgroundImage:forBarMetrics:
didDismissUI
stop
isUISubclass
setImageData:
userInterfaceIdiom
parentViewController
didCompleteFlow:
siriViewController:didEncounterUnexpectedError:
commands
setBackgroundEffects:
requestSource
initWithMachServiceName:options:
setSafeAreaInsetsPortrait:
isTVPushToTalkEnabled
URLWithString:
userInfo
otherSettings
initWithLocaleIdentifier:
shouldHideSiri
_setTouchInsets:
didChangeValueForKey:
isSystemHostedPresentation
userContext
setBackgroundColor:
_contextId
originalRequestOptions
initWithLocale:
siriViewController:didChangePresentationPeekMode:
colorWithWhite:alpha:
requestInfo
setRightBarButtonItem:
sharedURLSession
isSubsetOfSet:
orientation
dictionaryWithObjects:forKeys:count:
audioPlayerStartPlaying:
setHomeButtonUpFromBeep:
forceMicVisible:
siriViewController:bulletinWithIdentifier:
setResultIdentifier:
colorWithRed:green:blue:alpha:
isShowingPicker
dictionaryWithContentsOfFile:
sharedSystemState
userAccountCount
audioPlayer:didFinishPlayback:
setHomeButtonDownEventTime:
colorWithDynamicProvider:
requestBackgroundBlurVisible:forReason:
siriViewController:attemptUnlockWithPassword:
initWithImage:
URLByAppendingPathComponent:
dictionaryRepresentation
setHitTestsAsOpaque:
sharedPreferences
audioPlayer:audioURLForCommand:
options
useStreamingDictation
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
removeTriggerTarget:
setAutoresizingMask:
colorWithAlphaComponent:
isRunning
useAutomaticEndpointing
dictionary
forceAudioSessionActiveWithOptions:reason:completion:
setHitTestEdgeInsets:
audioCategoriesDisablingVolumeHUD
colorEffectSaturate:
siriUIStream
setRemovedOnCompletion:
removeObserver:name:object:
dialogIdentifier
isRequestMadeWithPhysicalDeviceInteraction
openSiriRequestedBySiriSetupViewController:
sharedInstance
attributesOfItemAtPath:error:
setHighlightColorForTemplate:
removeObserver:
setAttributes:ofItemAtPath:error:
deviceScreenIsOn
startSpeechRequestWithSpeechFileAtURL:
sharedApplication
objectForSetting:
updateUISettingsWithBlock:
setHidden:
removeObjectForKey:
setRemoteType:
clientProcess
deviceLiftToWake
startSpeechPronunciationRequestWithOptions:pronunciationContext:
setAssistantVersionAndGenerateLightweightInfo:
objectForKeyedSubscript:
sharedAnalytics
footprint
removeObject:
setAssistantIsEnabled:
initWithFormat:
destroyScene:withTransitionContext:
assistantVersion
isReflectionDialogPhase
setupWithDictionary:
updateSpeechOptions:
floatValue
removeItemAtURL:error:
clearColor
startRequestWithText:
initWithFlamesViewFidelity:isSystemHostedPresentation:allowResizingBetweenModes:siriViewMode:
deserializationDuration
isRecording
objectAtIndex:
setHardwareButtonLongPressBehavior:
flamesContainerView
updateSettingsWithTransitionBlock:
removeItemAtPath:error:
initWithEffect:
settlingDuration
firstResponder
isPronunciationRequest
object
setHardwareButtonInvocationContext:
updateSettingsWithBlock:
characterDirectionForLanguage:
settingsWithMass:stiffness:damping:
initWithDictionary:
removeFromSuperview
deleteButtonSpecifierWithName:target:action:
setAppearanceStyle:
numberWithUnsignedInt:
updateSceneWithIdentity:parameters:transitionContext:
firstObject
centerYAnchor
setRemoteObjectInterface:
setAppStoreUri:
filteredArrayUsingPredicate:
settingsWithDuration:
startRequestWithInfo:
assistantLanguageForceRTL
numberWithInteger:
setFromValue:
centerXAnchor
setAppDisplayName:
delayedActionAceId
startRequestWithCorrectedText:forSpeechIdentifier:userSelectionResults:turnIdentifier:
isPossiblyPartOfMultiTurnRequest
assistantIsEnabled
settingsForPrivateStyle:
filterWithType:
numberWithInt:
setFrame:
cardSections
initWithData:scale:
setReleaseAudioSessionOnRecordingCompletion:
setAppAvailableInStorefront:
settings
fileURLWithPath:isDirectory:
siriServiceStream
numberWithDouble:
setRefId:
remoteObjectProxyWithErrorHandler:
_setQueue:
fileURLWithPath:
isNetworkAvailable
setWithObjects:
deferEventsMatchingPredicate:toTarget:withReason:
numberWithBool:
arrayWithObjects:count:
setFont:
initWithContentsOfURL:options:error:
carPlayEnhancedVoiceTriggerMode
_updateInterfaceOrientationAnimated:
setRecordingAlertPolicy:
remoteObjectProxy
isMainThread
numberOfMatchesInString:options:range:
setWithArray:
defaultTimingFunction
setAnimations:
arrayWithObject:
fetchMultiUserVoiceIdentificationSetting:
setFlamesViewWidth:
initWithContentsOfURL:error:
setQueryItems:
carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation:
_carScreen
setWaitsForSceneCommits:
startRecordingSoundId
setAnimationSettings:
numberOfChildrenForItemAtIndexPath:
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
arrayWithCapacity:
setPunchOutUri:
cancellationCommands
defaultManager
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
arrayWithArray:
setAnimationFence:
fetchAccountsWithCompletion:
reliquishWithAnimationSettings:
isInHardwareKeyboardMode
setProperty:forKey:
defaultHeight
array
startLocalRequest
setAnchorPoint:
updateIfNeededWithSystemState:
failureCommands
setFillMode:
releaseAudioSessionOnRecordingCompletion
setPresentedLayerTypes:
isInAutoPrompt
setAlpha:
defaultCenter
nextCard
failWithReason:
setFaceDetected:
URLByDeletingPathExtension
regularExpressionWithPattern:options:error:
setPresentationMode:
setAllowsHitTesting:
startGuidedAccessForSiriViewController:
defaultAnimationDuration
isHidden
newWithBuilder:
registerDefaults:
setVisibility:
isForeground
setAllowsGroupOpacity:
newTurnBasedInstrumentationContext
setExportedObject:
initWithCategory:mode:delegate:
registerBagKeySet:forProfile:profileVersion:
cancelRequestForReason:
setAllowsGroupBlending:
appendString:
setViews:
isForUIFree
newTurnBasedContextWithPreviousTurnID:
setExportedInterface:
refreshRoutes
setPreferredContentSize:
cancelRequest
initWithBlock:defaultValue:
isForStark
setAlertContextWithBulletins:
startContinuationRequestWithUserInfo:
debugButtonIsEnabled
unsignedLongLongValue
appendFormat:
expectedTimestamp
_setHidesShadow:
setExpectedActivationEventTime:
navigationItem
setPowerLevel:
CGRectValue
cancelPreviousPerformRequestsWithTarget:selector:object:
initWithBlock:
refId
isForEyesFree
navigationController
setView:
appStoreUri
unit
setEnvironment:
cancelPickerAnimated:
redColor
setPosition:
initWithBarButtonSystemItem:target:action:
setActivity:
isForCarDND
setVersionLabelEnabled:
navigationBar
appIdentifyingInfo
setEnhancedVoiceTriggerMode:
understandingOnDeviceAssetsAvailable
initWithBag:caller:keyProfile:
deactivateConstraints:
recursiveDescription
setPid:
sruif_dataByCompressingWithGzip
_beginDelayingPresentation:cancellationHandler:
appIconMap
setValue:forKey:
isForBluetoothCar
setActiveAccountAndGenerateLightweightInfo:
eventWithStream:startDate:endDate:identifierStringValue:metadata:
setEndpointerOperationMode:
setPercentEncodedHost:
isFirstResponder
initWithActivationEvent:
setActive:withOptions:error:
appIcon
sruif_bundleId
setUsesZoom
eventStreamWithName:
mutatedCopyWithMutator:
setEnabled:
uiPresentationManager
initForSiriPresentation
cStringUsingEncoding:
setPaused:
setActive:error:
errorWithDomain:code:userInfo:
setUserTypedInSiri:
deactivate
uiPresentationIdentifier
appDisplayName
month
URLByAppendingPathExtension:
setEmphasized:
setActive:
indexPathWithIndex:
buttonWithImageTemplate:style:
isErrorDialogPhase
speechRequestOptions
appBundleIdentifier
errorWithCode:description:underlyingError:
setEditable:
modifyPresentationContext:
uiClientSettings
recordRequestMetric:withTimestamp:
setOrderedContext:
immersiveExperience
buttonWithHelpImageMask
dateFormatFromTemplate:options:locale:
setActivationEventTime:
speechFileURL
animation
setUserInteractionEnabled:
isEqualToString:
setEdgeAntialiasingMask:
type
error
setOpaque:
imageWithRenderingMode:
bugReportPresenter:requestsToOpenURL:withCompletion:
dateByAddingTimeInterval:
setUserAccountCountGenerateLightweightInfo:
setActivationEvent:
animateWithFactory:actions:completion:
specifierForAppIdentifier:
isEqualToNumber:
_toWindowOrientation
metricsContext
tvRemoteType
imageWithContentsOfFile:
setDuration:
URLForResource:withExtension:
bundleWithPath:
setOpacity:
dateByAddingComponents:toDate:options:
specification
enumerateSubstringsInRange:options:usingBlock:
isEqualToArray:
setActivationDeviceIdentifier:
setUseStreamingDictation:
materialViewWithRecipeNamed:inBundle:configuration:initialWeighting:scaleAdjustment:
turnIdentifier
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
bundleWithIdentifier:
source
setObject:forSetting:
imageWithCGImage:
setUseAutomaticEndpointing:
date
setAcousticIdEnabled:
enumerateObjectsUsingBlock:
animateWithDuration:animations:completion:
transitionToSettings:
masteredVersion
imageTaskWithHTTPGetRequest:client:completionHandler:
setObject:forKeyedSubscript:
sortedArrayUsingComparator:
rangeOfString:
bundleIdentifier
setType:
setAceId:
dataWithPropertyList:format:options:error:
_synchronizedDrawingFence
setDisplayConfiguration:
animateWithDuration:animations:
transitionToPrivateStyle:
markVoicemailAsRead:
punchOutUri
_synchronizeDrawingWithFence:
bundleId
isDescendantOfView:
setTvRemoteInvocationContext:
dataWithContentsOfURL:options:error:
sizeToFit
manualEndpointingThreshold
setDisplay:
transitionDuration
setObject:atIndexedSubscript:
bundleForClass:
imageNamed:inBundle:compatibleWithTraitCollection:
dataWithContentsOfFile:
animateToOffWithCompletion:
setTurnIdentifier:
sizeThatFits:
isCustom
endTransaction
mainScreen
setDisabledMicOpacity:
traitCollection
bulletinsForSiriViewController:
pulse
imageNamed:inBundle:
setNeedsLayout
dataUsingEncoding:
size
setTranslatesAutoresizingMaskIntoConstraints:
trailingAnchor
isConnectedToCarPlay
mainConfiguration
endSpeakingForClient:
propertyListWithData:options:format:error:
imageDataForKey:
setModesConfiguration:
setTransform:
_applicationKeyWindow
serverCommandId
topAnchor
isConfirmedDialogPhase
siriui_transparantHighlightedButtonColor
setDisableUpdateMask:
lowercaseString
URLByDeletingLastPathComponent
propertyListRepresentation
imageData
sendGenericAceCommand:turnIdentifier:conflictHandler:
setModeOverrideValue:
bulletin
setTouchScreenDetected:
isCompletionDialogPhase
siriui_transparantButtonColor
currentTime
longPressBehavior
endPresentationTransition
tokenForIdentifierOfCAContext:
animateAlongsideTransition:completion:
propertyForKey:
isCarDisplay
sendFeedbackToAppPreferencesPredictorForMetricsContext:selectedBundleId:
siriui_platterVibrancyEffect
setToken:
title
setDirectAction:
alpha
bugReporter:openURL:
identityForIdentifier:workspaceIdentifier:
sendEvent:
pronunciationContext
setModalPresentationStyle:
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
setToValue:
siriui_lightWeightFontWithSize:
isBuiltInVoice
endAppearanceTransition
logPeopleSuggesterDataWithSessionId:
setDialogPhase:
allowResizingBetweenModes
timestamp
setMinimumPressDuration:
productPageURL
bugReportPresenterShouldPromptUserForScreenshotPermission:
identityForEmbeddedApplicationIdentifier:
selectionText
siriXDebugStatusEnabled
currentLocale
logEventWithType:machAbsoluteTime:context:
allKeys
timerValue
setDeviceOrientationEventsEnabled:
encodedClassName
setMetadata:
processInfo
bugReportPresenterRequestsPresentingView:
identifier
isBeingPresented
selectionResponse
setTimingFunction:
currentHandler
logEventWithType:contextProvider:
allItems
timeZoneWithName:
setDeviceOrientation:
bugReportPresenterRequestsLastPresentationTime:
processIdentifier
setMass:
selectedAceId
currentDevice
isAvailable
setTextContainerInset:
logEventWithType:context:
timeZoneId
alertControllerWithTitle:message:preferredStyle:
bugReportPresenterRequestsBugReportPrefixForTitle:
previousTurnIdentifier
screen
isActive
timeIntervalSinceReferenceDate
setText:
lockStateForSiriViewController:
bugReportPresenterRequestsBugReportKeywordIdentifiers:
setLockState:screenLocked:
isATVRemotePTTEligible
presentationView
scheme
timeIntervalSinceDate:
setTarget:
emitInstrumentation:machAbsoluteTime:
_frontMostAppOrientation
setDefaultColorForTemplate:
bugReportPresenterRequestsActiveConversation:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
currentCalendar
invokeWithValue:
setDeactivationReasons:
timeInSeconds
_flatImageWithColor:
bugReportPresenter:setStatusViewHidden:
presentationMode
sceneWithIdentifier:
setSuppressStartAlert:
invocationSource
textField
siriViewMode
createPresenterWithIdentifier:
UUID
localizedStringForKey:value:table:
effectWithStyle:
bugReportPresenter:setBugReportingAvailable:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
setSupportedFeatures:
effectWithBlurRadius:
setDay:
text
localizedDescription
bugReportPresenter:requestsToTakeScreenshotWithCompletion:
setStreamType:
presentWithActivationTime:utterances:conversation:completion:
countByEnumeratingWithState:objects:count:
af_saveItemSelection:forType:
localizations
setDateFormat:
temporary
effectForBlurEffect:
presentWithActivationTime:lastUserText:conversation:completion:
bugReportPresenter:requestsToPresentViewController:
count
invalidateClient:
setStiffness:
_referenceBounds
af_dialogPhase
duration
bugReportPresenter:requestsToPerformAceCommand:
UUIDString
presentViewController:animated:completion:
copy
af_bestTextInterpretation
dryRun
setDamping:
init
initWithCoder:
viewWillAppear:
traitCollectionDidChange:
viewSafeAreaInsetsDidChange
viewWillTransitionToSize:withTransitionCoordinator:
viewWillLayoutSubviews
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sceneConfigurationForDelegate
sceneController:sceneContentStateDidChange:
sceneController:willInvalidateScene:forReason:
sceneController:sceneWasInvalidated:forReason:
sceneController:sceneDidUpdateClientSettings:
_commonInit
_updateSceneSettingsToSize:interfaceOrientation:withAnimationSettings:animationFence:
updateRemoteSceneWithFrontMostAppInterfaceOrientation:
startHostingSceneForConfiguration:withCompletionBlock:
stopHostingScene
invalidateSceneForReason:explanation:
isHostingScene
isDeferringHIDEvents
startDeferringHIDEventsIfNeeded
invalidateAndPauseDeferringHIDEvents
updateSceneWithConfiguration:
_transitionContentsWithView:forContentState:
setWindowSceneHostingView:
_updateSceneUIApplicationSceneSettingsWithBlock:
_updateSceneSafeAreaInsets
effectiveSafeAreaInsets
setSafeAreaInsetsAreSuspended:
setInFluidDismissal:
_handleInvalidationForReason:explanation:
_audioCategoriesDisablingVolumeHUDDidChangeTo:
_handleSceneDidActivateWithIdentifier:
isSceneActive
reactivateScene
deactivateScene
updateSceneDeactivationReasonMask:
viewDidMoveToWindow:shouldAppearOrDisappear:
_shouldDeferHIDEventsForMode
_updateDeferralChainWithWindow:
_hasScene
deferralMode
configuration
isInFluidDismissal
sceneController
setSceneController:
windowSceneHostingView
presentation
setPresentation:
scene
setScene:
predicateInvalidationHandler
setPredicateInvalidationHandler:
pauseDeferrals
setPauseDeferrals:
currentOrientation
setCurrentOrientation:
currentFrame
setCurrentFrame:
safeAreaInsetsAreSuspended
setEffectiveSafeAreaInsets:
suspendedSafeAreaInsets
setSuspendedSafeAreaInsets:
.cxx_destruct
_inFluidDismissal
_pauseDeferrals
_safeAreaInsetsAreSuspended
_deferralMode
_configuration
_sceneController
_windowSceneHostingView
_presentation
_scene
_predicateInvalidationHandler
_currentOrientation
_currentFrame
_effectiveSafeAreaInsets
_suspendedSafeAreaInsets
T@"AFUISceneController",&,N,V_sceneController
T@"UIView",&,N,V_windowSceneHostingView
T@"<UIScenePresenter>",&,N,V_presentation
T@"FBScene",&,N,V_scene
T@"<BSInvalidatable>",&,N,V_predicateInvalidationHandler
TB,N,V_pauseDeferrals
Tq,N,V_currentOrientation
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_currentFrame
TB,N,V_safeAreaInsetsAreSuspended
T{UIEdgeInsets=dddd},N,V_effectiveSafeAreaInsets
T{UIEdgeInsets=dddd},N,V_suspendedSafeAreaInsets
Tq,R,N,V_deferralMode
T@"AFUISceneConfiguration",R,N,V_configuration
inFluidDismissal
TB,N,GisInFluidDismissal,V_inFluidDismissal
VSSpeechGender
VSSpeechFootprint
isMatchForVoiceAsset:
donePressed
initWithTitleText:andBodyText:
loadView
presentFromParentViewController:
_bodyText
setPlaybackCommand:
audioPlayerDidFinishPlaying:successfully:
_voicemailManager
_voicemailID
_voicemailObject
_updateVoicemailPlayedState:finished:
_audioURL
_audioCategory
_audioOptions
_setVoicemailObject:
voicemailObject
T@"VMVoicemail",&,N,G_voicemailObject,S_setVoicemailObject:,V_voicemailObject
initWithFrame:
dealloc
layoutSubviews
safeAreaInsets
_audioRouteButtonTapped:
_reportBugButtonTapped
_reportBugButtonLongPressed
_helpButtonTapped:
_animateView:fromYPosition:toYPosition:fade:completion:
audioLevelForSiriStatusView:
siriStatusViewWasTapped:
siriStatusViewHoldDidBegin:
siriStatusViewHoldDidEnd:
safeAreaInsetsForSiriStatusView:
remoteContentView
setRemoteContentView:
T@"UIView",&,N
siriSessionState
setSiriSessionState:
mode
setMode:
showPasscodeUnlockWithStatusText:subtitle:completionHandler:unlockCompletionHandler:
setVoiceActivationMaskViewVisible:
setAuxiliaryViewsHidden:animated:
setSiriContentDelegate:
setContentViewsAlpha:
setRequestHandlingStatus:
Tq,N
initWithFrame:configuration:
_setupContentViews
_reducesMotionEffects
_updateSiriStatusViewForMode:
_setupButtonsIfNecessary
_createAssistantVersionLabelIfNecessary
_destroyAssistantVersionLabelIfNecessary
_wantsBackdropView:
_layoutReportBugButton
statusViewHeight
safeAreaInsetsDidChange
_setSafeAreaInsetsSuspended:
setDisabled:
setStatusViewHidden:
_updateControlsAppearance
_animateButtonsHidden:
setStatusViewUserInteractionEnabled:
setFlamesViewDeferred:
flamesViewPaused
setFlamesViewPaused:
teardownStatusView
setInUITrackingMode:
setupOrbIfNeeded
fadeOutCurrentAura
setDataSource:
reloadData
backgroundBlurView
setBackdropVisible:
setBackdropShouldRasterize:
dimBackdropSettings
_placeRemoteContentView
_setupVoiceActivationMaskView
_remoteContentViewFrame
updateForPercentageRevealed:
_lockViewFrame
_statusViewContainerFrame
_buttonInset
setShowAudioRoutePicker:
setAudioRoutePickerBluetoothOn:
_preferencesDidChange:
_showsReportBugButton
_shouldIndicateHoldToTalkMode
configureReportBugButtonToShowHoldToTalkState:
_createReportBugButtonWithTemplateImage:andConfigureWithHoldToTalkState:
_configureReportBugButtonWithHoldToTalkState:
_loadReportBugButtonTemplateImageInBackgroundWithCompletion:
setBugReportingAvailable:
_configureHelpButton
setHelpButtonEmphasized:
setHelpButtonDeferred:
pulseHelpButton
_helpButtonIsVisible
_configureEyesFreeLogo
cancelShowingPasscodeUnlock
_isTextInputEnabled
siriDidActivateFromSource:
dataSource
delegate
setDelegate:
disabled
foregroundView
foregroundContainerView
_backdropView
_backdropViewVisible
_safeAreaInsetsSuspended
_dimmingAndLockContainer
_statusViewContainer
_audioRoutePickerButton
_helpButton
_reportBugButton
_voiceActivationMaskView
_lockContainerView
_inShowUnlockViewAnimation
_inHideUnlockViewAnimation
_remoteContentViewHidden
_lockViewHidden
_flamesViewDeferred
_helpButtonDeferred
_statusViewHidden
_flamesViewPaused
_keepStatusViewHidden
_eyesFreeEffectView
_eyesFreeLogoView
_assistantVersionLabel
_assistantVersionVisualEffectView
_foregroundView
_foregroundContainerView
_backgroundBlurView
_siriSessionState
_mode
_statusViewHeight
_siriStatusView
_disabled
_remoteContentView
_dataSource
_delegate
T@"<AFUISiriViewDataSource>",W,N,V_dataSource
T@"<AFUISiriViewDelegate>",W,N,V_delegate
TB,N,V_disabled
T@"UIView",R,N,V_foregroundView
T@"UIView",R,N,V_foregroundContainerView
T@"_UIBackdropView",R,N
Td,R,N
Tq,N,V_siriSessionState
Tq,N,V_mode
T@"UIView",&,N,V_remoteContentView
viewDidLoad
didReceiveMemoryWarning
handleDisableAndDeleteButtonPress
confirmDisable
_disableAndDeleteCloudSync
specifiers
confirmDisableForMultiUserVoiceIdentification
_settings
hitTest:withEvent:
writableTypeIdentifiersForItemProvider
loadDataWithTypeIdentifier:forItemProviderCompletionHandler:
itemProviderVisibilityForRepresentationWithTypeIdentifier:
T@"NSArray",R,C,N
initWithImageURL:
imageURL
setImageURL:
image
setImage:
_queue
_imageURL
_image
T@"NSURL",C,N,V_imageURL
T@"UIImage",&,N,V_image
serviceRequestsActivationSourceWithReplyHandler:
serviceRequestsDismissalWithUserInfo:withReason:
serviceStartGuidedAccess
serviceBulletinWithIdentifier:replyHandler:
serviceStartRequestWithOptions:
serviceUserRelevantEventDidOccur
siriIdleAndQuietStatusDidChange:
setFullScreenDimmingLayerVisible:animated:
setCarDisplaySnippetMode:
setStatusViewDisabled:
serviceWillPresentViewControllerWithStatusBarStyle:
serviceDidPresentViewControllerWithStatusBarStyle:
serviceWillDismissViewControllerWithStatusBarStyle:
serviceDidDismissViewControllerWithStatusBarStyle:
setStatusBarHidden:animated:
setStatusBarHidden:animated:completion:
getScreenshotWithReplyHandler:
handlePasscodeUnlockWithCompletion:
serviceDidPresentUserInterface
serviceDidPresentConversationFromBreadcrumb
serviceDidDetectMicButtonTap
serviceDidDetectMicButtonLongPressBegan
serviceDidDetectMicButtonLongPressEnded
servicePresentationDidChangePeekMode:
serviceDidEnterUITrackingMode
serviceDidExitUITrackingMode
serviceDidDetectAudioRoutePickerTap
serviceViewControllerRequestsKeyboardWithCompletion:
serviceDidRequestKeyboard:minimized:
serviceDidRequestKeyboard:
serviceDidResetTextInput
serviceWillBeginEditing
serviceDidEndEditing
serviceRequestsHIDEventDefferal
serviceCancelHIDEventDefferal
serviceDidRequestCurrentTextInput:
serviceViewControllerRequestsPresentation:
serviceViewControllerRequestsDismissalWithDismissalReason:completion:
openURL:bundleId:inPlace:completion:
servicePresentedIntentWithBundleId:
serviceDidPresentBugReporter
serviceDidDismissBugReporter
setTypeToSiriViewHidden:
setShouldDismissForTapOutsideContent:
setShouldDismissForTapsOutsideContent:
setShouldDismissForSwipesOutsideContent:
requestHostBlurVisible:reason:fence:
presentationDidPresentKeyboard
siriRemoteViewController:sceneDidActivateWithIdentifier:
viewDidAppear:
viewDidDisappear:
siriRemoteViewControllerDidPresentKeyboard:
siriRemoteViewControllerDidDeactivateScene:
exportedInterface
remoteObjectInterface
updateToPresentationWithIdentifier:presentationProperties:animated:completion:
invalidate
_connection
serviceViewControllerProxy
serviceViewControllerProxyWithErrorHandler:
_invalidated
_interrupted
sessionDelegate
siriWillActivateFromSource:
setRequestOptions:
preloadPresentationBundleWithIdentifier:
preloadPluginBundles
showPresentationWithIdentifier:properties:lockState:
siriDidDeactivate
didReceiveOrbViewTapToCancelRequest
siriWillShowPasscodeUnlock
siriWillShowPasscodeUnlockAndCancelRequest:
siriWillHidePasscodeUnlockForResult:
siriDidHidePasscodeUnlock
startRequestForText:
siriKeyboardViewDidChange:
setStatusBarFrame:
setStatusViewHeight:
setBottomContentInset:
setSession:
didReceiveHelpAction
didReceiveReportBugAction
didReceiveBugButtonLongPress
didReceiveShortTapActionWithRequestOptions:
applicationWillResignActive
applicationWillEnterForeground
applicationDidBecomeActive
setWaitingForTelephonyToStart:
hasContentAtPoint:completion:
siriWillBeginTearDownForDismissalReason:withOriginalDismissalOptions:
presentationStateUpdatedFromPresentationState:toPresentationState:
emitUIStateTransitionForSiriDismissalWithDismissalReason:
emitInstrumentationEvent:
emitInstrumentationEvent:atTime:
didSuccessfullyHandleCommandsInDelayedActionCommand:
takeScreenshotWithCompletion:
_canShowWhileLocked
viewServiceApplicationInfo
remoteConnection
setRemoteConnection:
_connectionHasBeenResumed
_audioCategoriesDisablingVolumeHUD
_expectingInvalidation
_viewServiceApplicationInfo
_remoteConnection
T@"NSXPCConnection",&,N,V_remoteConnection
T@"<AFUISiriRemoteSceneViewControllerDataSource>",W,N,V_dataSource
T@"<AFUISiriRemoteSceneViewControllerDelegate>",W,N,V_delegate
T@"AFApplicationInfo",R,N,V_viewServiceApplicationInfo
siriSessionDidInitializeSessionInfo:
siriSessionDidUpdateSessionInfo:
siriSessionDidFinishRequestWithError:
siriSessionResultForAceCommand:completion:
siriSessionDidTransitionFromState:toState:event:machAbsoluteTransitionTime:
siriSessionDidStartNewTurn:
siriSessionDidStartNewTurn:associatedLaunchStartContext:machAbsoluteTime:
siriSessionRequestsInstrumentingMessage:machAbsoluteTime:
siriSessionWillStartRequestWithOptions:completion:
siriSessionWillStartRequest
siriSessionWillCancelRequest
siriSessionWillStartUIRequestWithText:completionHandler:
siriSessionAudioRecordingDidChangePowerLevel:
siriSessionDidStartAcousticIDRequest
siriSessionDidFinishAcousticIDRequestWithSuccess:
siriSessionDidChangeNetworkAvailability
siriSessionDidChangeLockState:
siriSessionOpenURL:completionHandler:
siriSessionRequestsDismissalForReason:
siriSessionWantsToCacheImage:
siriSessionIsPresentingLocalAuthenticationUI
siriSessionIsPresentingApplePaySheet
siriSessionGetRequestContextWithCompletionHandler:
siriSessionDidDetectMusic
siriSessionDidDetectSpeechStartpoint
siriSessionDidUpdateAudioSessionID:
siriSessionDidReceiveAudioSessionInterruptionBeganWithUserInfo:machAbsoluteTime:
siriSessionRequestsPlayPhaticWithCompletion:
siriSessionDidReceiveSpeechRecognizedCommand:
siriSessionDidReceiveSpeechPartialResultCommand:
siriSessionDidRecognizedAdditionalSpeechInterpretation:refId:
siriSessionDidUpdateRecognitionWithPhrases:utterances:refId:
siriSessionDidReceiveAddViewsCommand:completion:
siriSessionDidReceiveAddDialogsCommand:completion:
siriSessionDidReceiveOpenLinkCommand:completion:
siriSessionDidReceiveClearScreenCommand:completion:
siriSessionDidReceivePlayVoicemailCommand:completion:
siriSessionDidReceiveSmsPlayAudioCommand:completion:
siriSessionDidReceivePlayNotificationSound:completion:
siriSessionDidReceiveSayItCommand:completion:
siriSessionDidReceiveRepeatItCommand:completion:
siriSessionDidReceiveShowHelpCommand:completion:
siriSessionDidReceiveUpdateViewsCommand:completion:
siriSessionDidReceiveAppPunchOutCommand:completion:
siriSessionDidReceiveCloseAssistantCommand:completion:
siriSessionDidReceiveListenForPronunciationCommand:completion:
siriSessionDidReceiveGetResponseAlternativesPlaybackCommand:completion:
siriSessionDidReceiveSetSuggestedUtterancesCommand:completion:
siriSessionDidReceiveSAUIChangePrimaryUtteranceCommand:completion:
siriSessionDidReceiveSAUIShowFullScreenEffectCommand:completion:
siriSessionDidReceiveSAUIShowSpeechAlternativesCommand:completion:
siriSessionDidReceiveSAUIShowRequestHandlingStatusCommand:completion:
siriSessionDidReceiveSetUIGuidedAccessCommand:completion:
siriSessionDidReceiveHideSiriOverlayCommand:completion:
siriSessionDidReceiveGuideUpdateCommand:completion:
siriSessionDidReceiveAddContentToViewCommand:completion:
siriSessionDidReceiveShowNextCardCommand:completion:
siriSessionDidReceivePreSynthesizeTTSCommand:completion:
siriSessionDidReceiveDisambiguationItemSelected:
siriSessionDidReceivePlayContentCommand:completion:
siriSessionDidReceiveLaunchTVRemoteCommand:completion:
siriSessionDidReceiveExtendCurrentTTSCommand:completion:
siriSessionDidReceivePaginateListCommand:completion:
siriSessionDidReceiveShowNextSnippetCommand:completion:
siriSessionDidReceiveUpdateVisualResponseSnippetCommand:completion:
siriSessionDidReceiveSnippetConfigurationRequestCommand:completion:
siriSessionDidReceiveRevealRecognizedSpeechCommand:completion:
siriSessionSpeechRecordingDidChangeAVRecordRoute:
siriSessionSpeechRecordingDidEnd
siriSessionSpeechRecordingDidCancel
siriSessionSpeechRecordingDidFailWithError:
siriSessionWillShowAudioRoutePicker
siriSessionWillDismissAudioRoutePicker
siriSessionWillProcessAceCommand:
siriSessionRequestsReadoutOfBulletin:completion:
setHostFrontMostAppOrientation:
setStatusBarFrameValue:
setStatusViewHeightNumber:
siriDidDeactivateWithCompletion:
didReceiveShortTapActionWIthRequestOptions:
hostApplicationWillResignActive
hostApplicationWillEnterForeground
hostApplicationDidBecomeActive
hostApplicationRequestsEmitUIStateTransitionForSiriDismissalWithReason:
hostApplicationRequestsEmitInstrumentationEvent:
hostApplicationRequestsEmitInstrumentationEvent:atTime:
hostApplicationRequestsScreenshotWithCompletion:
hostApplicationPresentationStateUpdatedFromPresentationState:toPresentationState:
hostApplicationDidSuccessfullyHandleCommandsInDelayedActionCommand:
setDeviceInStarkMode:
setCarDNDActive:
setLockState:
setAnnouncementRequestsPermittedByPresentationWhileActive:
preheat
forceAudioSessionActive
forceAudioSessionActiveWithCompletion:
forceAudioSessionInactive
resumeInterruptedAudioPlaybackIfNeeded
clearContext
resetContextTypes:
rollbackClearContext
setAlertContext
setApplicationContext
startRequestWithOptions:
startRequestWithOptions:completion:
stopRequestWithOptions:
updateRequestOptions:
launchedIntoListeningAtTime:
endForReason:
telephonyRequestCompleted
stopRecordingSpeech
cancelSpeechRequest
startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:machAbsoluteTime:
performAceCommand:turnIdentifier:machAbsoluteTime:
siriUIDidPresentDynamicSnippetWithInfo:
resultDidChangeForAceCommand:
resultDidChangeForAceCommand:completion:
requestDidPresentViewForUICommand:
requestDidPresentViewForErrorCommand:
recordUIMetrics:
recordRequestMetricEvent:withTimestamp:
recordMetricsContext:forDisambiguatedAppWIthBundleIdentifier:
audioRoutePickerWillShow
audioRoutePickerWillDismiss
speechSynthesisDidFinish:
speechSynthesisDidUpdatePowerLevelTo:
didGainAttentionWithEvent:
didLoseAttentionWithEvent:
notifyStateManagerPresentationTransitionBegan
notifyStateManagerPresentationTransitionEnded
notifyStateManagerSpeakingBegan
notifyStateManagerSpeakingEnded
notifyStateManagerTransactionBegan
notifyStateManagerTransactionEnded
_siriNetworkAvailabilityDidChange:
shouldNonLocalDelegateHandlePunchouts
availabilityState
beginMonitoringSiriAvailability
effectiveCoreLocationBundle
assistantConnectionRequestWillStart:
assistantConnectionDismissAssistant:
assistantConnection:dismissAssistantWithReason:
assistantConnectionRequestFinished:
assistantConnection:receivedCommand:completion:
assistantConnection:requestFailedWithError:requestClass:
assistantConnection:openURL:completion:
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidBeginInterruption:userInfo:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:didHandleQuickStopWithAction:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnectionDidChangeAudioRecordingPower:
assistantConnection:speechRecognitionDidFail:
assistantConnection:speechRecognized:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
stateMachine:didTransitionFromState:forEvent:
stateMachine:descriptionForEvent:
stateMachine:didTransitionFromState:forEvent:eventTimeStamp:
initWithConnection:delegateQueue:
_stateMachine
_state
_performTransitionForEvent:
_performTransitionForEvent:eventTimeStamp:
_performBlockWithDelegate:
setLocalDataSource:
_startRequestWithFinalOptions:completion:
_startRequestForReadoutOfBulletin:
_continuePendingSpeechRequest
_shouldFetchActiveAccount
safeWrapResponseCompletion:
_setRefIdForAllViewsInAddViews:
_performPunchoutCommand:delegate:completion:
_requestDidFinishWithError:
assistantConnection:didLoadAssistant:
_updateAssistantVersion:
_playPhaticWithCompletion:
_requestWillStart
_startRequestWithBlock:
_hasActiveRequest
_preparedSpeechRequestWithRequestOptions:
_startingRecordingAlertPolicyForSoundID:
_requestContextWithCompletion:
_startSpeechRequestWithOptions:completion:
_startSpeechRequestWithSpeechRequestOptions:isInitialBringUp:completion:
_startSpeechRequestWithSpeechFileAtURL:completion:
_startSpeechPronunciationRequestWithContext:options:completion:
_updateModesConfigurationForAttentionType:value:
_populateModesConfiguration:attentionType:value:
_startLegacyDirectActionRequestWithInfo:context:completion:
_startContinuityRequestWithInfo:completion:
_startRequestWithInfo:completion:
_startRequestWithText:completion:
setApplicationContextForDirectAction:
_handleUnlockDeviceCommand:completion:
_handleUnlockDeviceWithWatchCommand:completion:
_performAceCommand:forRequestUpdateViewsCommand:afterDelay:
_handleRequestUpdateViewsCommand:completion:
_performAceCommands:
_performAceCommand:turnIdentifier:machAbsoluteTime:conflictHandler:
_aceObjectExpectsTurnIdentifierWhenSendingCommand:
_discardCurrentSpeechGroup
_discardConnectionForReason:
isPreventingActivationGesture
isListening
recordingPowerLevel
underlyingConnection
_localAuthenticationUIPresented
_applePaySheetPresented
settingsConnectionDidChangeActiveAccount:
_updateActiveAccount:
_updateActiveAccount:withNumberOfActiveAccounts:
_updateModesHeuristicsForRequestOptions:
_modeOverrideValue
_invocationEventForRequestOptions:localDataSource:
_mapInvocationSource:
_updateCarPlayInvocationContext:fromDirectActionEvent:appBundleIdentifier:
_invocationContextFromTVRemoteType:
_mapEnhancedCarPlayTriggerMode:
localDataSource
localDelegate
setLocalDelegate:
isEyesFree
setEyesFree:
isProcessingAcousticIdRequest
siriSessionInfo
setSiriSessionInfo:
sessionDelegateContext
setSessionDelegateContext:
directActionApplicationContexts
setDirectActionApplicationContexts:
_currentSpeechRequestGroup
_setCurrentSpeechRequestGroup:
_instrumentationTurnContext
_setInstrumentationTurnContext:
_delegateQueue
_currentRequestDidPresent
_lastSpeechSynthesisRecord
_speechRequestGroupGraveyard
_continuePendingRequest
_sendContextBeforeContinuingSpeechRequest
_settingsConnection
_isDeviceInStarkMode
_clientStateManager
_modesConfiguration
_thinkingIntervalID
_eyesFree
_isProcessingAcousticIdRequest
_localDataSource
_localDelegate
_siriSessionInfo
_sessionDelegateContext
_directActionApplicationContexts
T@"NSArray",&,N,V_sessionDelegateContext
T@"NSArray",&,N,V_directActionApplicationContexts
connection
T@"AFConnection",R,N,G_connection
currentSpeechRequestGroup
T@"NSObject<OS_dispatch_group>",&,N,G_currentSpeechRequestGroup,S_setCurrentSpeechRequestGroup:,V_currentSpeechRequestGroup
instrumentationTurnContext
T@"AFAnalyticsTurnBasedInstrumentationContext",&,N,G_instrumentationTurnContext,S_setInstrumentationTurnContext:,V_instrumentationTurnContext
T@"<AFUISiriSessionDelegate>",&,N,V_delegate
T@"<AFUISiriSessionLocalDataSource>",W,N,V_localDataSource
T@"<AFUISiriSessionLocalDelegate>",W,N,V_localDelegate
eyesFree
TB,N,GisEyesFree,V_eyesFree
TB,R,N,V_isProcessingAcousticIdRequest
T@"SRUIFSiriSessionInfo",&,N,V_siriSessionInfo
_afui_usefulUserResultType
_spokenLanguageDidChange:
_currentLocaleDidChange:
initWithDelegate:
_updateSpokenLanguageCode
_setSpokenLanguageCode:
_setupAssistantHasCompletedInitialRunAvailable
_computeSpokenLanguageCode
spokenLanguageCode
setupAssistantHasCompletedInitialRunChecked
setSetupAssistantHasCompletedInitialRunChecked:
setSetupAssistantHasCompletedInitialRunAvailable:
_setupAssistantHasCompletedInitialRunChecked
_spokenLanguageCode
T@"<AFUISiriLanguageDelegate>",R,W,N,G_delegate,V_delegate
T@"NSString",C,N,S_setSpokenLanguageCode:,V_spokenLanguageCode
TB,N,V_setupAssistantHasCompletedInitialRunChecked
setupAssistantHasCompletedInitialRunAvailable
TB,N,G_setupAssistantHasCompletedInitialRunAvailable,V_setupAssistantHasCompletedInitialRunAvailable
buildSiriViewForFrame:configuration:dataSource:delegate:siriContentDelegate:
_carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation:
stringForInvalidationReason:
defaultSiriSceneConfigurationWithInitialBounds:onDisplay:
copyWithZone:
_initWithInitialBounds:displayConfiguration:
sceneParameters
configureMutableSceneSettings:
_setupPlatformSpecificDefaultSettings
foreground
setForeground:
launchIntent
setLaunchIntent:
preferredDeferralMode
setPreferredDeferralMode:
cancelSceneLoadingAfterTimeout
setCancelSceneLoadingAfterTimeout:
sceneLoadingTimeOutDuration
setSceneLoadingTimeOutDuration:
initialBounds
initialSafeAreaInsets
setInitialSafeAreaInsets:
setSceneParameters:
userInterfaceStyle
setUserInterfaceStyle:
deactivationReasonMask
setDeactivationReasonMask:
bounds
setBounds:
_displayConfiguration
_foreground
_cancelSceneLoadingAfterTimeout
_launchIntent
_preferredDeferralMode
_sceneLoadingTimeOutDuration
_sceneParameters
_userInterfaceStyle
_deactivationReasonMask
_initialBounds
_initialSafeAreaInsets
_bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_bounds
TB,N,V_foreground
Tq,N,V_launchIntent
Tq,N,V_preferredDeferralMode
TB,N,V_cancelSceneLoadingAfterTimeout
Td,N,V_sceneLoadingTimeOutDuration
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialBounds
T{UIEdgeInsets=dddd},N,V_initialSafeAreaInsets
T@"FBSSceneParameters",C,N,V_sceneParameters
Tq,N,V_userInterfaceStyle
TQ,N,V_deactivationReasonMask
afui_longYearString
_afui_dateStringUsingCurrentLocaleFromTemplate:
sceneLoadingTimeOutDidOccur
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
transactionWillBegin:
transactionDidBegin:
transactionDidFinishWork:
transactionDidComplete:
transaction:willLaunchProcess:
transaction:didLaunchProcess:
transaction:didCreateScene:
transaction:willUpdateScene:
transaction:willCommitSceneUpdate:
transaction:didCommitSceneUpdate:
requestSceneViewWithConfiguration:completionBlock:
updateSceneViewWithConfiguration:
startSceneLoadingTimeOutTimerWithDuration:
cancelSceneLoadingTimeOut
_currentConfiguration
_recordSceneCreateBegin
_recordSceneCreateEnd
_createTransaction
_backgroundRunningAssertion
_pendingConfigurationToApply
_sceneForeground
_invalidationReason
T@"<AFUISceneControllerDelegate>",W,N,V_delegate
setImage:forKey:
imageForKey:
afui_dataStoringShim
initWithInitialState:
_setState:forEvent:
_descriptionForEvent:
addTransitionFromState:toState:forEvent:
_endStateNumberFromDictionary:forEvent:
performTransitionForEvent:
state
_setState:
_endStatesByEventByStartState
setEndStatesByEventByStartState:
Tq,N,S_setState:,V_state
endStatesByEventByStartState
T@"NSMutableDictionary",&,N,G_endStatesByEventByStartState,V_endStatesByEventByStartState
T@"<AFUIStateMachineDelegate>",W,N,V_delegate
sharedManager
cachedGuideTag
cachedGuideSnippet
cachedSuggestedUtterances
shouldCheckForUpdateWithLastAppUpdateTime:
updateLastCheckedDate
updateCacheWithGuideUpdate:completion:
_clearCachedGuide
_checkGuideUpdateUsingAFClientLiteWithTag:
checkGuideUpdate
_shouldCheckForUpdateAtDate:lastAppUpdateTime:
_updateLastCheckedWithDate:
_pathForCachedGuideUpdate
_cachedGuideUpdate
_aceObjectDictionaryAtFilepath:
_cacheFileQueue
_isCheckingGuideUpdate
T@"NSNumber",R,N
T@"SAGuidanceGuideSnippet",R,N
T@"SAGuidanceSuggestedUtterances",R,N
clientSettingsClass
transitionContextClass
clientWindowContextID
TI,R,N
mutableCopyWithZone:
setClientWindowContextID:
TI,N
initWithFrame:eyesFreeMode:
_configureEyesFreePresentation:
backdropView
eyesFreeMode
_eyesFreeMode
Tq,R,N,V_eyesFreeMode
animateUsingSpringWithStiffness:damping:animations:
parsedUtteranceFromText:context:
orbViewModeForSiriSessionState:
shouldShowSiriXIndicator
assistantLanguageIsRTL
assistantUILocale
assistantUILocalizedStringFromSiriLanguageForKey:table:
assistantUILocalizedStringFromSystemLanguageForKey:table:
assistantUILocalizedStringForKey:table:
assistantUILocalizedStringForKey:value:table:
_assistantUILocalizedStringForKey:value:table:language:
_assistantUIlocalizationArrayForLanguageCode:
_assistantUIStringForKey:value:table:localizationLanguageCode:
afui_assistantUIFrameworkBundle
afui_hasContentEqualTo:
afui_isRemoteHeadsetActivation
afui_isRemoteVoiceActivation
afui_isTVFollowUpHearstActivation
canReportBugs
composeBugReport
setTitle:
setHostname:
setSiriLanguage:
setLastUserText:
setIncludeSysdiagnosesFromDevices:
setContextCollectorsInfo:
setKeywordIdentifiers:
maximumAttachmentSize
attachData:name:mimeType:
attachFileAtPath:image:
setComponentName:componentVersion:componentID:
setEmailGroup:
T@"<AFUIBugReportingDelegate>",W,N
setDescription:
_setDefaultParameterValues
_attachmentPaths
_hostname
_lastUserText
_siriLanguage
_contextCollectorsInfo
_tapToRadarParameters
setTapToRadarParameters:
setAttachmentPaths:
hostname
T@"NSString",C,N,G_hostname,V_hostname
lastUserText
T@"NSString",C,N,G_lastUserText,V_lastUserText
siriLanguage
T@"NSString",C,N,G_siriLanguage,V_siriLanguage
contextCollectorsInfo
T@"NSArray",C,N,G_contextCollectorsInfo,V_contextCollectorsInfo
tapToRadarParameters
T@"NSMutableDictionary",&,N,G_tapToRadarParameters,V_tapToRadarParameters
attachmentPaths
T@"NSMutableArray",&,N,G_attachmentPaths,V_attachmentPaths
T@"<AFUIBugReportingDelegate>",W,N,V_delegate
preferences:didChangeValueForKey:
initWithSuiteName:
initWithDefaultsAtURL:
initWithDefaultsResource:withExtension:inBundle:
integerForKey:
doubleForKey:
boolForKey:
stringForKey:
objectForKey:
_mutateValueForKey:block:
setInteger:forKey:
setDouble:forKey:
setBool:forKey:
setObject:forKey:
synchronize
_userDefaults
T@"<AFUIPreferencesDelegate>",W,N,V_delegate
setViewHierarchyDescription:
debugController:stateDidChangeWithAddViews:
debugController:requestsPermissionToScreenshot:
debugController:utterances:openTTR:
debugController:requestsScreenShotWithCompletion:
debugController:openURL:
debugControllerRequestsBugReportPrefixForTitle:
debugControllerRequestsBugReportKeywordIdentifiers:
internalDebugControllerWantsDismissViewController
hasContentAtPoint:
dismiss
_requestToPresentViewController:
_requestToPresentDebugController:
_requestToPresentAlertController:
_requestToOpenURL:
_requestToPresentInternalDebugController:
_requestDeviceUnlockWithSuccessCompletion:withErrorCompletion:
_dismissInternalDebugController
_dismissViewControllerAnimated:
_captureViewHierarchyDescriptionForController:
_utterancesFromConversation:
_conversationDataFromConversation:
_logTime
_ttrController
_alertControllerWithActionTypes:
_actionForAlertAction:
_actionTitleForAlertAction:
_actionStyleForAlertAction:
_actionClickedForAction:withActionType:
_confirmationAlertControllerWithTitle:onConfirmation:
_debugControllerPresentationWillStart
_debugControllerPresentationDidEnd
presentedAlertController
_setPresentedAlertController:
presentedTTRController
_setPresentedTTRController:
_internalDebugController
_debugController
_presentedAlertController
_presentedTTRController
T@"UIAlertController",&,N,S_setPresentedAlertController:,V_presentedAlertController
T@"UIViewController",&,N,S_setPresentedTTRController:,V_presentedTTRController
T@"<AFUIBugReportPresentingDelegate>",W,V_delegate
afui_arrayByMappingWithBlock:
_afui_isSameDayAsDate:
afui_isToday
afui_isTomorrow
initWithCommand:assertion:
command
assertion
_command
_assertion
T@"SAUIDelayedActionCommand",R,N,V_command
T@"BKSProcessAssertion",R,N,V_assertion
_performDelayedActionCommandTimerAction:
enqueueDelayedActionCommand:completion:
cancelDelayedActionWithDelayedActionCancelCommand:completion:
invalidatePendingCommands
_invalidateDelayedActionTimer:withKey:
performDismissalCommands
_commandHandler
_performCommandsWithDelayedActionCommand:
_delayedActionTimersByIdentifier
_dismissalDelayedActionCommandsByIdentifier
_updateDelegateOfPolicyChange
initWithPolicy:delegate:
idleAndQuietDidChange:forSessionState:dimmingLayerVisible:
idleAndQuietDidChange:forSessionState:
dimmingLayerVisibilityDidChange:forSessionState:
_dismissalPolicyForPassThroughAlways:forSessionState:
_dismissalPolicyForPassThroughUnlessDimmed:forSessionState:
_setShouldDismissForTapsAndPans:shouldDelayDelegateUpdate:
_shouldDismissForTapsAndPans
_setShouldDismissForTapsAndPans:
_idleAndQuiet
_setIdleAndQuiet:
_dimmingLayerVisible
_setDimmingLayerVisible:
_dismissalPolicy
_setDismissalPolicy:
_setDelegate:
shouldDismissForTapsAndPans
TB,N,G_shouldDismissForTapsAndPans,S_setShouldDismissForTapsAndPans:,V_shouldDismissForTapsAndPans
idleAndQuiet
TB,N,G_idleAndQuiet,S_setIdleAndQuiet:,V_idleAndQuiet
dimmingLayerVisible
TB,N,G_dimmingLayerVisible,S_setDimmingLayerVisible:,V_dimmingLayerVisible
dismissalPolicy
Tq,N,G_dismissalPolicy,S_setDismissalPolicy:,V_dismissalPolicy
T@"<AFUISiriTapPanDismissalPolicyManagerDelegate>",W,N,G_delegate,S_setDelegate:,V_delegate
afui_insertionContext
afui_guideCheckSupportedFeatures
afui_timeZone
afui_abbreviatedUnit
afui_metersValue
afui_compare:
afui_populateStoreServicesData:
afui_punchOutFailureViews
afui_punchOutAppNotAvailableViews
afui_getInstallAppPunchoutWithCompletion:
_afui_installAppPunchout
afui_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:
setAfui_KeyboardInitiated:
afui_isKeyboardInitiated
afui_keyboardInitiated
TB,N,Gafui_isKeyboardInitiated,SsetAfui_KeyboardInitiated:
donateActivityCommand
afui_appInfo
afui_setSelectionTextWithDisambiguationList:
backgroundViewModeForRequestSource:directActionEvent:
shouldStartNewRequest:duringCurrentRequest:
shouldPresentForNewRequest:duringCurrentRequest:
isRequestForMessageReadBannerTap:
isRequestForAnnounceNotification:
isRequestForAnnnounceNotificationServerCommand:
_setPlusDBackgroundColorWithWeighting:
materialView
setMaterialView:
lightenSourceOverView
setLightenSourceOverView:
plusDView
setPlusDView:
_materialView
_lightenSourceOverView
_plusDView
T@"MTMaterialView",&,N,V_materialView
T@"UIView",&,N,V_lightenSourceOverView
T@"UIView",&,N,V_plusDView
sruif_appInfo
logDisambiguationItemSelected:
logDisambiguationDismissedEvent
_logDisambiguationSelectedEventWithListItem:
_listItemMatchingAceId:
_allListItems
_recordSASMetrics:withSelectedBundleId:originalCommandId:
listItems
setListItems:
disambiguationAssistance
setDisambiguationAssistance:
_listItems
_disambiguationAssistance
T@"<AFUIDisambiguationAnalyticsManagerDataSource>",W,N,V_dataSource
T@"NSArray",&,N,V_listItems
T@"<AFDisambiguationAssistance>",&,N,V_disambiguationAssistance
_baseRequestOptions
_initWithRequestOptions:
initWithText:
initWithRecordedSpeechURL:
requestOptions
_requestOptions
T@"SASRequestOptions",R,N,V_requestOptions
voicemailPlayer
audioMessagePlayer
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
startPlaying
stopPlaying
_setPlayer:
playbackCommand
deactivateAudioSessionOnPlaybackFinished
setDeactivateAudioSessionOnPlaybackFinished:
conversationItemIdentifier
setConversationItemIdentifier:
_player
_deactivateAudioSessionOnPlaybackFinished
_playbackCommand
_conversationItemIdentifier
player
T@"AVAudioPlayer",&,N,G_player,S_setPlayer:,V_player
T@"<AFUIAudioPlayerDelegate>",W,N,V_delegate
T@"AceObject",&,N,V_playbackCommand
TB,N,V_deactivateAudioSessionOnPlaybackFinished
T@"NSUUID",W,N,V_conversationItemIdentifier
initWithNibName:bundle:
_statusBarFrameDidChange:
_applicationWillResignActive:
_applicationWillEnterForeground:
_applicationDidBecomeActive:
_willEnterFullScreenScreenshotMode:
_keyboardDidShowNotification:
_keyboardDidHideNotification:
viewWillDisappear:
didMoveToParentViewController:
dismissViewControllerAnimated:completion:
setShouldPassTouchesThroughToSpringBoard:
setShareHomeGesture:
siriViewControllerDidFinishDismissing:
resetGestureBehaviors
siriViewControllerDidPresentKeyboard:
supportedInterfaceOrientations
siriViewController:willStartTest:
siriViewController:didFinishTest:
siriViewController:failTest:withReason:
siriViewController:requestsPresentation:
siriViewController:requestsDismissalWithReason:withCompletion:
siriViewController:presentedIntentWithBundleId:
siriViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriViewController:sceneDidActivateWithIdentifier:
siriViewControllerDidDeactivateScene:
siriViewControllerSpeechRequestStartedFromSiriOrb
siriViewControllerSpeechRequestCancelledFromSiriOrb
siriViewController:didReceiveButtonUpWithRequestOptions:
_activationTriggerDidRelease:
currentCarPlaySupportedOEMAppsForSiriViewController:
starkAppBundleIdentifierContextForSiriViewController:
siriViewControllerDidChangeToListeningMode:
siriViewController:didEndSession:
siriViewController:didCompleteRequestWithError:
siriSessionShouldExtendAudioSessionForImminentPhoneCall
siriSessionShouldEndExtendAudioSessionForImminentPhoneCall
animateOrbViewToOffWithCompletion:
_updateSiriAvailability:
siriRemoteViewController:bulletinWithIdentifier:
lockStateForSiriRemoteViewController:
siriRemoteViewController:invalidatedForReason:explanation:
dismissSiriRemoteViewController:userInfo:withReason:
siriRemoteViewControllerRequestsActivationSource:
startGuidedAccessForRemoteViewController:
siriRemoteViewController:startRequestWithOptions:
userRelevantEventDidOccurInSiriRemoteViewController:
siriRemoteViewController:siriIdleAndQuietStatusDidChange:
siriRemoteViewController:setStatusViewHidden:
siriRemoteViewController:setTypeToSiriViewHidden:
siriRemoteViewController:setFullScreenDimmingLayerVisible:animated:
siriRemoteViewController:setCarDisplaySnippetMode:
siriRemoteViewController:setStatusViewUserInteractionEnabled:
siriRemoteViewController:setStatusViewDisabled:
siriRemoteViewController:setStatusBarHidden:animated:
siriRemoteViewController:setStatusBarHidden:animated:completion:
siriRemoteViewController:willPresentViewControllerWithStatusBarStyle:
siriRemoteViewController:didPresentViewControllerWithStatusBarStyle:
siriRemoteViewController:willDismissViewControllerWithStatusBarStyle:
siriRemoteViewController:didDismissViewControllerWithStatusBarStyle:
siriRemoteViewController:setHelpButtonEmphasized:
siriRemoteViewController:setBugReportingAvailable:
siriRemoteViewController:setRequestHandlingStatus:
siriRemoteViewController:handlePasscodeUnlockWithCompletion:
siriRemoteViewController:willStartTest:
siriRemoteViewController:didFinishTest:
siriRemoteViewController:failTest:withReason:
siriRemoteViewControllerDidPresentUserInterface:
siriRemoteViewControllerPulseHelpButton:
siriRemoteViewControllerDidDetectMicButtonTap:
siriRemoteViewControllerDidDetectMicButtonLongPressBegan:
siriRemoteViewControllerDidDetectMicButtonLongPressEnded:
siriRemoteViewController:didChangePresentationPeekMode:
siriRemoteViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriRemoteViewControllerDidPresentConversationFromBreadcrumb:
siriRemoteViewControllerDidEnterUITrackingMode:
siriRemoteViewControllerDidExitUITrackingMode:
siriRemoteViewControllerDidDetectAudioRoutePickerTap:
siriRemoteViewController:didRequestKeyboard:
siriRemoteViewController:didRequestKeyboard:minimized:
siriRemoteViewControllerDidResetTextInput:
siriRemoteViewControllerRequestsHIDEventDefferal:
siriRemoteViewControllerCancelHIDEventDefferal:
siriRemoteViewControllerWillBeginEditing:
siriRemoteViewControllerDidEndEditing:
siriRemoteViewController:didRequestCurrentTextInputWithReplyHandler:
siriRemoteViewController:requestsKeyboardWithCompletion:
siriRemoteViewController:requestsPresentation:
siriRemoteViewController:requestsDismissalWithReason:withCompletion:
siriRemoteViewControllerDidFinishDismissing:
siriRemoteViewController:presentedIntentWithBundleId:
requestBlurVisible:reason:fence:
audioRecordingPowerLevelForSiriView:
siriViewDidRecieveStatusViewTappedAction:
siriViewDidRecieveStatusViewHoldDidBeginAction:
siriViewDidRecieveStatusViewHoldDidEndAction:
siriViewDidReceiveReportBugAction:
siriViewDidReceiveBugButtonLongPress:
siriViewDidReceiveHelpAction:
siriViewDidReceiveAudioRouteAction:
siriView:attemptUnlockWithPassword:
siriView:didReceiveSiriActivationMessageWithSource:
siriViewShouldSupportTextInput:
siriContentDidReceiveOrbTappedAction:
siriContentDidReceiveOrbHoldDidBeginAction:
siriContentDidReceiveOrbHoldDidEndAction:
siriContentDidReceiveReportBugAction:
siriContentDidReceiveReportBugLongPress:
compactView:bottomContentInsetDidChange:
compactView:blurVisibilityDidChange:
routePickerController:hasRoutesToPick:
routePickerControllerPickedNewRoute:isBluetooth:
routePickerControllerWillShow:
routePickerControllerWillDismiss:
getDeviceOrientation:
recentButtonPressActivityDetected:
recentTouchScreenActivityDetected:
bulletinsForSiriSession:
contextAppInfosForSiriSession:
currentCarPlaySupportedOEMAppIDListForSiriSession:
starkAppBundleIdentifierContextForSiriSession:
lockStateForSiriSession:
carPlayEnhancedVoiceTriggerModeForSiriSession:
isPPTAvailable
siriSession:didChangeToState:event:machAbsoluteTransitionTime:
siriSession:didReceiveDeviceUnlockRequestAndCancelRequest:withCompletion:
siriSession:didReceiveDeviceUnlockRequestWithCompletion:
siriSessionRecordingPreparationHasFinished:
siriSessionDidReceiveDelayedActionCommand:completion:
siriSessionDidReceiveDelayedActionCancelCommand:completion:
siriSessionDidResetContext:
siriSessionWillEnd:
siriSessionDidEnd:
siriSession:willProcessAppLaunchWithBundleIdentifier:
siriSession:failedToLaunchAppWithBundleIdentifier:
siriSession:speechRecordingDidBeginOnAVRecordRoute:
siriSessionAudioOutputDidChangePowerLevel:
siriSessionImmersiveExperienceRequested
siriSessionDidReceiveTakeScreenshotCommand:completion:
siriSessionDidReceiveSetUpdateMaskCommand:completion:
handlePunchoutCommand:completion:
assistantVersionForSiriView:
activeAccountForSiriView:
userAccountCountForSiriView:
keyboardView:didReceiveText:
keyboardViewDidReceiveHelpButtonAction:
keyboardViewDidReceiveReportBugAction:
keyboardViewDidReceiveBugButtonLongPress:
keyboardViewDidReceiveAudioRouteAction:
tapPanDismissalPolicyManager:dismissalPolicyDidChange:
commandCache:didSuccessfullyHandleCommandsInDelayedActionCommand:
initWithConnection:configuration:
initWithConnection:configuration:requestSource:
initWithConnection:configuration:requestSource:displayConfiguration:
viewMode
setReceivedIncomingPhoneCall:
_setPunchingOut:
requestStatusBarVisible:animated:completion:
setHostedPresentationFrame:
enterUITrackingMode
exitUITrackingMode
proximityStatusChanged:
cancelSpeechRecordingIfNecessary
animatedAppearanceWithFactory:completion:
animatedDisappearanceWithFactory:completion:
requestStatusBarVisible:
_setInFluidDismissal:
setFluidDismissalState:
canBecomeFirstResponder
inputAccessoryView
setInputAccessoryView:
keyboardAppearance
_shouldShowVoiceActivationMaskViewWithSiriView:requestSource:screenOff:connectedToCarPlay:
_showVoiceActivationMaskView:
_siriView
_showStatusBarAnimated:completion:
_hideStatusBarAnimated:completion:
_removeStatusBar
_statusBarFrame
_recordUIAppearance
_recordUIDismissal
_donateUIDismissalToBiome:
_triggerPeopleSuggesterLogging
_keyboardInfoFromNotification:
isInitialBringUp
childViewControllerForHomeIndicatorAutoHidden
_setVoiceTriggerEnabled:
presentRemoteViewControllerIfNecessary
_presentRemoteViewController
_informRemoteViewControllerOfParentIfNecessary
setDockFrame:
_presentDeferredFlamesViewIfNecessary
shouldAutomaticallyForwardAppearanceMethods
_sendBeginAppearanceTransitionIfReadyAnimated:
_sendEndAppearanceTransitionIfReady
_enqueueRemoteViewControllerMessageBlock:
_setFullScreenDimmingLayerVisible:animated:
_setStatusViewHidden:
_setTypeToSiriViewHidden:
_setShowKeyboardIfTextInputEnabled:
_setShowKeyboardIfTextInputEnabled:minimized:
_thresholdForBarSwipeDismissal
_handleMicButtonTapFromSource:
_informRemoteViewControllerOfOrbViewTapToCancelRequest
_handleMicButtonLongPressBeganFromSource:
_handleMicButtonLongPressEndedFromSource:
_handleSiriDidActivateFromSource:
handlePasscodeUnlockAndCancelRequest:withCompletion:
_handlePasscodeUnlockAndCancelRequest:dismissOnFailure:withCompletion:
showPasscodeUnlockScreenForRequest:unlockCompletion:
defrost
currentSource
updateContexts:
setAnnouncementRequestsPermittedWhilePresentationActive:
setSiriRequestCancellationReason:
didReceiveButtonUpWithRequestOptions:
currentRequestOptions
_setCurrentRequestOptions:
_updateRemoteViewControllerStateForAppearance
handleViewFullyRevealed
shortTapActionWithRequestOptions:
_holdToTalkTriggerDidReleaseFromSource:
tvRemoteSentButtonDownWhileListening
_delayForHoldToTalkStopRequestsWithSource:
_uiPresentationIdentifier
_canIgnoreHoldToTalkThreshold
_isInitialSpeechRequest
_holdToTalkThresholdHasElapsed
_enterHoldToTalkMode
_transitionToAutomaticEndpointMode
_transitionToManualEndpointMode
_exitHoldToTalkMode
_manualEndpointingThreshold
startRequestWithActivationTrigger:
startRequestWithActivationTrigger:completion:
_stopRequestWithOptions:afterDelay:
endSession
_suspendRemoteViewControllerDispatchQueue
_resumeRemoteViewControllerDispatchQueue
_handleReportBugAction
_handleReportBugLongPressAction
_handleHelpAction
_setShowAudioRoutePicker:
_setAudioRoutePickerBluetoothOn:
_didDetectAudioRoutePickerTap
_routePickerController
_updateAudioRoutePicker
_recordingStartedOnRoute
_setRecordingStartedOnRoute:
_currentSessionAvailabilityState
_isDeviceScreenOn
_systemState
emitUIStateTransitionForSiriDismissalWithReason:
hideVoiceActivationMaskViewIfNecessary
animateOrbViewDismissalIfNecessaryWithCompletion:
_fullSiriView
_compactSiriView
_carPlaySiriView
_orbViewControllingView
isVisible
setVisible:
isDeviceInStarkMode
announcementRequestsPermittedWhilePresentationActive
directActionEvent
setDirectActionEvent:
carDNDActive
receivedIncomingPhoneCall
turnsOnScreenOnAppearance
setTurnsOnScreenOnAppearance:
showsStatusBar
setShowsStatusBar:
statusBarEnabled
setStatusBarEnabled:
_session
_remoteViewController
_remoteViewControllerDispatchQueue
_hasCalledBeginAppearanceTransition
_setHasCalledBeginAppearanceTransition:
_hasCalledEndAppearanceTransition
_setHasCalledEndAppearanceTransition:
routePickerController
setRoutePickerController:
_statusBar
_setStatusBar:
_isInHoldToTalkMode
_setInHoldToTalkMode:
_currentRequestOptions
_recordingStartedTimeValue
_setRecordingStartedTimeValue:
_viewDidAppearTime
_setViewDidAppearTime:
isViewDisappearing
setViewDisappearing:
_siriRemoteViewControllerIsEditing
_setSiriRemoteViewControllerIsEditing:
_isPunchingOut
hostedPresentationFrame
skipLoggingListeningEventForLaunchIntoListening
setSkipLoggingListeningEventForLaunchIntoListening:
_active
_remoteViewControllerDispatchQueueSuspended
_vtEnabledCount
_currentRequestSource
_triggerUpdater
_delayedActionCommandCache
_siriSessionWantsToEnd
_uiAppearanceUUIDString
_uiAppearanceRecordQueue
_presentedConversationFromBreadcrumb
_inputAccessoryView
_keyboardInfo
_unlockScreenVisible
_statusViewWasHiddenBeforeEditingStarted
_remoteViewControllerIsPresenting
_hostingConnectionState
_dismissalUserInfo
_shouldShowVoiceActivationMaskView
_statusBarDeferralState
_requestCancellationReason
_requestedBlurVisible
_networkAvailabilityStateMachine
_isProcessingAppLaunch
_hasDonatedDismissalToBiome
_tapPanDismissalPolicyManager
_immersiveExperienceOn
_launchSignpostID
_currentDisplayConfiguration
_visible
_deviceIsInStarkMode
_announcementRequestsPermittedWhilePresentationActive
_carDNDActive
_receivedIncomingPhoneCall
_turnsOnScreenOnAppearance
_showsStatusBar
_statusBarEnabled
_inHoldToTalkMode
_viewDisappearing
_punchingOut
_skipLoggingListeningEventForLaunchIntoListening
_directActionEvent
_hostedPresentationFrame
session
T@"AFUISiriSession",R,N,G_session,V_session
remoteViewController
T@"AFUISiriRemoteSceneViewController",R,N,G_remoteViewController,V_remoteViewController
remoteViewControllerDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,G_remoteViewControllerDispatchQueue,V_remoteViewControllerDispatchQueue
hasCalledBeginAppearanceTransition
TB,N,G_hasCalledBeginAppearanceTransition,S_setHasCalledBeginAppearanceTransition:,V_hasCalledBeginAppearanceTransition
hasCalledEndAppearanceTransition
TB,N,G_hasCalledEndAppearanceTransition,S_setHasCalledEndAppearanceTransition:,V_hasCalledEndAppearanceTransition
T@"SiriUIAudioRoutePickerController",&,N,V_routePickerController
statusBar
T@"UIStatusBar",&,N,G_statusBar,S_setStatusBar:,V_statusBar
inHoldToTalkMode
TB,N,G_isInHoldToTalkMode,S_setInHoldToTalkMode:,V_inHoldToTalkMode
T@"SASRequestOptions",C,N,G_currentRequestOptions,S_setCurrentRequestOptions:,V_currentRequestOptions
recordingStartedTimeValue
T@"NSNumber",&,N,G_recordingStartedTimeValue,S_setRecordingStartedTimeValue:,V_recordingStartedTimeValue
viewDidAppearTime
Td,N,G_viewDidAppearTime,S_setViewDidAppearTime:,V_viewDidAppearTime
viewDisappearing
TB,N,GisViewDisappearing,V_viewDisappearing
siriRemoteViewControllerIsEditing
TB,N,G_siriRemoteViewControllerIsEditing,S_setSiriRemoteViewControllerIsEditing:,V_siriRemoteViewControllerIsEditing
punchingOut
TB,N,G_isPunchingOut,S_setPunchingOut:,V_punchingOut
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_hostedPresentationFrame
statusViewHidden
TB,N,G_statusViewHidden,S_setStatusViewHidden:,V_statusViewHidden
TB,N,V_skipLoggingListeningEventForLaunchIntoListening
T@"<AFUISiriViewControllerDataSource>",W,N,V_dataSource
T@"<AFUISiriViewControllerDelegate>",W,N,V_delegate
visible
TB,N,GisVisible,V_visible
deviceIsInStarkMode
TB,N,GisDeviceInStarkMode,SsetDeviceInStarkMode:,V_deviceIsInStarkMode
TB,N,V_announcementRequestsPermittedWhilePresentationActive
Tq,N,V_directActionEvent
TB,N,V_carDNDActive
TB,N,V_receivedIncomingPhoneCall
TB,N,V_turnsOnScreenOnAppearance
TB,N,V_showsStatusBar
TB,N,V_statusBarEnabled
TB,R,N
view
T@"UIView<AFUISiriRemoteViewHosting>",&,D,N
setVisible:animated:
_micButtonTapped:
_micButtonHeld:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
backgroundBlurViewController:didSetBlurVisibilityTo:
setInputPowerLevel:
setOutputPowerLevel:
initWithFrame:compactViewDelegate:
shouldRequestStatusBar
_originXForOrbContainer
_setupBugReportButtonIfNeeded
_constructAndAddBugReportButtonWithImage:
_shouldShowBugReportButton
_constructAndAddSiriXIndicator
animateOrbViewDismissalWithCompletion:
_orbViewContainerFrame
_setUpEyesFreePresentation:
isBlurViewVisible
_orbViewContainer
_orbView
_touchInputView
_longPressRecognizer
_dimmingBackdropView
_siriContentDelegate
_compactViewDelegate
_dockFrame
_siriXIndicator
_eyesFreeView
_blurringAndLockContainer
_fullScreenBlurViewController
_auxiliaryViewsHidden
_ignoreSiriSessionUpdates
_blurViewVisible
blurViewVisible
TB,R,N,GisBlurViewVisible,V_blurViewVisible
requestStatusBar
TB,R,N,GshouldRequestStatusBar
afui_hasExternalDomainsForStringWithFormat:
_builtInDomains
afui_speakableUtteranceParserForCurrentLanguage
_domainsForStringWithFormat:
setBackgroundViewMode:
_animateBackgroundsWithVisibility:backgroundViewMode:
_updateViewsForVisibility:backgroundViewMode:
_updateCarPlayStatusBarForVisibility:backgroundViewMode:
backgroundViewMode
_fullScreenBackgroundView
_systemBackgroundView
_backgroundViewMode
Tq,N,V_backgroundViewMode
airplaneModeChanged
siriNetworkAvailabilityDidChange
radioPreferences
setRadioPreferences:
stateMachine
setStateMachine:
_radioPreferences
T@"<AFUINetworkAvailabilityStateMachineDelegate>",W,N,V_delegate
T@"RadiosPreferences",&,N,V_radioPreferences
T@"SRUIFStateMachine",&,N,V_stateMachine
imageResourceWithAppPunchOut:
imageResourceWithLocalResourceName:pressedResourceName:localPunchOut:bundle:
imageResourceFromKey:pressedKey:punchOut:
getLogoWithCompletion:
logoSize
_fetchLocalResourcesWithCompletion:
_imageInLocalResourceBundleNamed:
_fetchRemoteResourcesWithCompletion:
localResourceName
setLocalResourceName:
localPressedResourceName
setLocalPressedResourceName:
localPunchOut
setLocalPunchOut:
localResourceBundle
setLocalResourceBundle:
remoteURL
setRemoteURL:
remotePressedURL
setRemotePressedURL:
remotePunchOut
setRemotePunchOut:
remoteScale
setRemoteScale:
remotePressedScale
setRemotePressedScale:
setLogoSize:
_localResourceName
_localPressedResourceName
_localPunchOut
_localResourceBundle
_remoteURL
_remotePressedURL
_remotePunchOut
_remoteScale
_remotePressedScale
_logoSize
T@"NSString",C,N,V_localResourceName
T@"NSString",C,N,V_localPressedResourceName
T@"SAUIAppPunchOut",&,N,V_localPunchOut
T@"NSBundle",&,N,V_localResourceBundle
T@"NSURL",C,N,V_remoteURL
T@"NSURL",C,N,V_remotePressedURL
T@"SAUIAppPunchOut",&,N,V_remotePunchOut
Td,N,V_remoteScale
Td,N,V_remotePressedScale
T{CGSize=dd},N,V_logoSize
initWithDomain:code:userInfo:
debugErrorWithCode:userInfo:
initWithCode:userInfo:
_setupAuraBackdropViews
updateVisibility:
_backgroundView
_auraView
_effectView
logWithData:mimeType:name:attemptCompression:
initWithData:mimeType:name:attemptCompression:
data
mimeType
name
_data
_mimeType
_name
T@"NSData",R,C,N,V_data
T@"NSString",R,C,N,V_mimeType
T@"NSString",R,C,N,V_name
updateHomeGestureSharingForSiriSetup:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
setLastTimeShown:
_continueTapped:
_continueWithLanguageCode:commitLanguageCodeToPreferences:
_laterTapped:
lastTimeShown
siriSetupView
setSiriSetupView:
_contentView
_selectedRecognitionLanguageCode
_lastTimeShown
_siriSetupView
T@"<AFUISiriSetupViewControllerDelegate>",W,N,V_delegate
TB,N,V_lastTimeShown
T@"UIView",&,N,V_siriSetupView
executeSystemCommand:stdoutTo:
captureViewHierarchyLogWithDefaultViewHierarchy:completion:
captureCardLogsSinceTime:completion:
captureSiriSpeechLogsWithCompletion:
captureSiriVoiceTriggerLogsWithCompletion:
captureSiriTTSAudioWithCompletion:
capturePreviousConversationWithCompletion:
_captureLogsAtURL:logName:sinceTime:completion:
_captureLogsAtURL:logName:sinceTime:pattern:mimeType:completion:
_captureFileAtURL:completion:
_archiveLogDirectoryAtURL:name:error:
_baseLogDirectoryURL
_captureLogsInDirectoryAtURL:matchingPattern:withMimeType:attemptCompression:limit:error:
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
_contentsOfDirectoryAtURL:matchingPattern:sortedByDateWithResourceKey:error:
_siriLogDirectoryURL
_siriCardLogDirectoryURL
_uniqueTemporaryFileURL
queue
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
baseLogDirectoryURL
T@"NSURL",R,C,N,G_baseLogDirectoryURL
siriLogDirectoryURL
T@"NSURL",R,C,N,G_siriLogDirectoryURL
_orbHeldWithGestureRecognizer:
_orbTappedWithGestureRecognizer:
backgroundView:requestsCarPlayStatusBarOverride:animationSettings:
updateBackgroundViewMode:
updateBackgroundVisibility:
orbViewRectInCarplayView
siriXIndicatorView
resetOrbViewToSiriSessionState
updateOrbViewState
_orbContainerView
_statusBarStyleAssertion
_siriXIndicatorView
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24Q32
@"AFUISceneConfiguration"16@0:8
v32@0:8@"AFUISceneController"16@"FBScene"24
v40@0:8@"AFUISceneController"16@"FBScene"24Q32
v32@0:8@"AFUISceneController"16@"AFUISceneClientSettings"24
@24@0:8@16
v16@0:8
v20@0:8B16
v56@0:8{CGSize=dd}16q32@40@48
v24@0:8q16
v32@0:8@16@?24
v32@0:8Q16@24
v24@0:8@16
v32@0:8@16q24
v24@0:8@?16
{UIEdgeInsets=dddd}16@0:8
v24@0:8Q16
v28@0:8@16B24
v40@0:8{CGSize=dd}16@32
q16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{UIEdgeInsets=dddd}16
@"AFUISceneConfiguration"
@"AFUISceneController"
@"UIView"
@"<UIScenePresenter>"
@"FBScene"
@"<BSInvalidatable>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@32@0:8@16@24
@"NSString"
@"VMVoicemailManager"
@"VMVoicemail"
v56@0:8@16d24d32q40@?48
f24@0:8@16
{UIEdgeInsets=dddd}24@0:8@16
f24@0:8@"SiriUISiriStatusView"16
v24@0:8@"SiriUISiriStatusView"16
{UIEdgeInsets=dddd}24@0:8@"SiriUISiriStatusView"16
@"UIView"16@0:8
v24@0:8@"UIView"16
v48@0:8@16@24@?32@?40
v24@0:8B16B20
v24@0:8d16
v48@0:8@"NSString"16@"NSString"24@?<v@?B>32@?<v@?q>40
v24@0:8@"<AFUISiriContentDelegate>"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
B24@0:8q16
d16@0:8
@"_UIBackdropView"
@"SiriUIAudioRoutePickerButton"
@"SiriUIHelpButton"
@"SiriUIContentButton"
@"SiriUIConfiguration"
@"SiriUIVisualEffectView"
@"UIImageView"
@"UILabel"
@"UIView<SiriUISiriStatusViewProtocol>"
@"<AFUISiriViewDataSource>"
@"<AFUISiriViewDelegate>"
@"AFSettingsConnection"
@40@0:8{CGPoint=dd}16@32
@32@0:8@16@?24
q24@0:8@16
@"NSProgress"32@0:8@"NSString"16@?<v@?@"NSData"@"NSError">24
@"NSArray"16@0:8
q24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"NSURL"
@"UIImage"
v32@0:8@16Q24
v32@0:8B16B20@?24
v32@0:8Q16@?24
v44@0:8@16@24B32@?36
v36@0:8B16q20@28
v24@0:8@?<v@?q>16
v32@0:8@"NSDictionary"16Q24
v32@0:8@"NSString"16@?<v@?@"AFBulletin">24
v24@0:8@"SASRequestOptions"16
v32@0:8B16B20@?<v@?B>24
v24@0:8@?<v@?@"NSData">16
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSString">16
v32@0:8Q16@?<v@?B>24
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?B>36
v24@0:8@"NSString"16
v36@0:8B16q20@"BKSAnimationFenceHandle"28
v44@0:8@"NSString"16@"NSDictionary"24B32@?<v@?B>36
@24@0:8@?16
v24@0:8^{?=BBB{CGRect={CGPoint=dd}{CGSize=dd}}d}16
v40@0:8{CGPoint=dd}16@?32
v32@0:8q16q24
v20@0:8i16
@"NSArray"
@"<AFUISiriRemoteSceneViewControllerDataSource>"
@"<AFUISiriRemoteSceneViewControllerDelegate>"
@"AFApplicationInfo"
@"NSXPCConnection"
v24@0:8@"SRUIFSiriSessionInfo"16
v24@0:8@"NSError"16
v48@0:8q16q24q32d40
v40@0:8@16@24d32
v32@0:8@16d24
v20@0:8f16
v20@0:8I16
v40@0:8@16@24@32
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?q>24
v24@0:8@"AFAnalyticsTurnBasedInstrumentationContext"16
v40@0:8@"AFAnalyticsTurnBasedInstrumentationContext"16@"PBCodable"24d32
v32@0:8@"PBCodable"16d24
v32@0:8@"SASRequestOptions"16@?<v@?@"SASRequestOptions">24
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8@"NSURL"16@?<v@?B>24
v24@0:8@"INImage"16
v24@0:8@?<v@?@"NSArray">16
v24@0:8@"SASSpeechRecognized"16
v24@0:8@"SASSpeechPartialResult"16
v32@0:8@"AFSpeechInterpretation"16@"NSString"24
v40@0:8@"NSArray"16@"NSArray"24@"NSString"32
v32@0:8@"SAUIAddViews"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAddDialogs"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIOpenLink"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIClearScreen"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAPhonePlayVoiceMail"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SASmsPlayAudio"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIPlayNotificationSound"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISayIt"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIRepeatIt"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowHelp"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIUpdateViews"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAppPunchOut"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUICloseAssistant"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIListenForPronunciation"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIGetResponseAlternativesPlayback"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISetSuggestedUtterances"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIChangePrimaryUtterance"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowFullScreenEffect"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowSpeechAlternatives"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIShowRequestHandlingStatus"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SASettingSetUIGuidedAccess"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIHideSiriOverlay"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAGuidanceGuideUpdate"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAddContentToView"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SACardShowNextCard"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAPreSynthesizeTTS"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"SAUIDisambiguationItemSelected"16
v32@0:8@"SAVCSPlayContent"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUILaunchTVRemote"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIExtendCurrentTTS"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIPaginateList"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIVisualResponseShowNextSnippet"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIUpdateVisualResponseSnippet"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISnippetDisplayConfigurationRequest"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIRevealRecognizedSpeech"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"AceObject<SAAceCommand>"16
v32@0:8@"AFBulletin"16@?<v@?Q>24
v24@0:8@"NSValue"16
v24@0:8@"NSNumber"16
v40@0:8@"NSString"16@"NSDictionary"24Q32
v24@0:8@?<v@?>16
v24@0:8@"<AFUISiriSession>"16
v24@0:8@"PBCodable"16
v32@0:8@"PBCodable"16Q24
v32@0:8@"NSValue"16@?<v@?B>24
v32@0:8Q16@"SiriDismissalOptions"24
v24@0:8@"SAUIDelayedActionCommand"16
v56@0:8@16@24@32@40d48
v24@0:8@?<v@?I@"NSError">16
v32@0:8@"SASRequestOptions"16@?<v@?@"NSError">24
v56@0:8@"NSString"16@24@"AFUserUtteranceSelectionResults"32@"NSUUID"40d48
v40@0:8@"AceObject<SAAceCommand>"16@"NSUUID"24d32
v24@0:8@"NSDictionary"16
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>">24
v24@0:8@"SABaseClientBoundCommand"16
v24@0:8@"AFMetrics"16
v32@0:8@"NSString"16d24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@"AFSpeechSynthesisRecord"16
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v28@0:8@16I24
v36@0:8@16B24@28
v48@0:8@16q24@32@?40
v24@0:8@"AFConnection"16
v32@0:8@"AFConnection"16q24
v40@0:8@"AFConnection"16@"AceObject<SAAceCommand>"24@?<v@?@"AceObject<SAAceCommand>">32
v40@0:8@"AFConnection"16@"NSError"24@"NSString"32
v40@0:8@"AFConnection"16@"NSURL"24@?<v@?B>32
v48@0:8@"AFConnection"16@"NSString"24@"NSURL"32@?<v@?B>40
v28@0:8@"AFConnection"16B24
v28@0:8@"AFConnection"16I24
v32@0:8@"AFConnection"16@"NSDictionary"24
v36@0:8@"AFConnection"16B24@"NSDictionary"28
v40@0:8@"AFConnection"16@"NSDictionary"24@"NSURL"32
v32@0:8@"AFConnection"16@"INImage"24
v32@0:8@"AFConnection"16@"NSString"24
v40@0:8@"AFConnection"16@"NSString"24@"NSError"32
v40@0:8@"AFConnection"16@"NSString"24@?<v@?B>32
v40@0:8@"AFConnection"16@"AFRequestInfo"24@?<v@?B>32
v32@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24
v40@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@"AFConnection"16Q24
v48@0:8@"AFConnection"16q24@"INIntent"32@?<v@?BB>40
v36@0:8@16@24I32
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
v32@0:8@"AFConnection"16@"AFXPCWrapper"24
v36@0:8@"AFConnection"16@"NSString"24I32
v40@0:8@"AFConnection"16q24@?<v@?dd@"NSError">32
v32@0:8@"AFConnection"16@"NSError"24
v32@0:8@"AFConnection"16@"SASSpeechRecognized"24
v32@0:8@"AFConnection"16@"SASSpeechPartialResult"24
v40@0:8@"AFConnection"16@"AFSpeechInterpretation"24@"NSString"32
v48@0:8@"AFConnection"16@"NSArray"24@"NSArray"32@"NSString"40
v40@0:8@16q24q32
@32@0:8@16q24
v48@0:8@16q24q32d40
v40@0:8@"SRUIFStateMachine"16q24q32
@"NSString"32@0:8@"SRUIFStateMachine"16q24
v48@0:8@"SRUIFStateMachine"16q24q32d40
v32@0:8q16d24
@?24@0:8@?16
v36@0:8@16B24@?28
v28@0:8Q16B24
v36@0:8@16Q24B32
v48@0:8@16@24d32@?40
f16@0:8
i24@0:8q16
v40@0:8@16q24@32
@24@0:8Q16
@"SRUIFStateMachine"
@"AFSpeechSynthesisRecord"
@"NSMutableSet"
@"AFConnection"
@"AFSiriClientStateManager"
@"AFModesConfiguration"
@"<AFUISiriSessionDelegate>"
@"<AFUISiriSessionLocalDataSource>"
@"<AFUISiriSessionLocalDelegate>"
@"SRUIFSiriSessionInfo"
@"NSObject<OS_dispatch_group>"
@"AFAnalyticsTurnBasedInstrumentationContext"
@"<AFUISiriLanguageDelegate>"
@80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56@64@72
@24@0:8^{_NSZone=}16
@"FBSDisplayConfiguration"
@"FBSSceneParameters"
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v24@0:8@"BSTransaction"16
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBApplicationProcess"24
v32@0:8@"FBApplicationUpdateScenesTransaction"16@"FBScene"24
@"FBApplicationUpdateScenesTransaction"
@"BKSProcessAssertion"
@"<AFUISceneControllerDelegate>"
v32@0:8@"UIImage"16@"NSString"24
@"UIImage"24@0:8@"NSString"16
@24@0:8q16
v40@0:8q16q24q32
@"<AFUIStateMachineDelegate>"
@"NSMutableDictionary"
B32@0:8@16@24
@"SAGuidanceGuideUpdate"
I16@0:8
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"SiriUIBackgroundBlurView"
v40@0:8d16d24@?32
q24@0:8q16
@40@0:8@16@24@32
@48@0:8@16@24@32@40
v24@0:8@"NSArray"16
v40@0:8@"NSData"16@"NSString"24@"NSString"32
v28@0:8@"NSString"16B24
@"<AFUIBugReportingDelegate>"16@0:8
v24@0:8@"<AFUIBugReportingDelegate>"16
v40@0:8@"NSString"16@"NSString"24@"NSNumber"32
@"<AFUIBugReportingDelegate>"
@"NSMutableArray"
d24@0:8@16
v32@0:8q16@24
v32@0:8d16@24
v28@0:8B16@20
@"NSUserDefaults"
@"<AFUIPreferencesDelegate>"
v32@0:8@"<AFUIDebugControlling>"16@"SAUIAddViews"24
v32@0:8@"<AFUIDebugControlling>"16@?<v@?B>24
v40@0:8@"<AFUIDebugControlling>"16@"NSArray"24@?<v@?^B>32
v32@0:8@"<AFUIDebugControlling>"16@?<v@?@"UIImage">24
v32@0:8@"<AFUIDebugControlling>"16@"NSURL"24
@"NSString"24@0:8@"<AFUIDebugControlling>"16
@"NSArray"24@0:8@"<AFUIDebugControlling>"16
B32@0:8{CGPoint=dd}16
@24@0:8@"<AFUIBugReportPresentingDelegate>"16
v32@0:8@?16@?24
@"UIViewController<AFUIInternalDebugControlling>"
@"<AFUIDebugControlling>"
@"<AFUIBugReportPresentingDelegate>"
@"UIAlertController"
@"UIViewController"
@"SAUIDelayedActionCommand"
@32@0:8q16@24
v32@0:8B16q20B28
v28@0:8B16q20
@"<AFUISiriTapPanDismissalPolicyManagerDelegate>"
q32@0:8q16q24
@"MTMaterialView"
@"<AFUIDisambiguationAnalyticsManagerDataSource>"
@"<AFDisambiguationAssistance>"
@"SASRequestOptions"
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@"<AFUIAudioPlayerDelegate>"
@"AceObject"
@"NSUUID"
@"AVAudioPlayer"
Q24@0:8@16
@"AFBulletin"32@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24
Q24@0:8@"AFUISiriRemoteSceneViewController"16
v40@0:8@16Q24@32
v32@0:8@16B24B28
v40@0:8@16B24B28@?32
v40@0:8@16Q24@?32
v40@0:8@"AFUISiriRemoteSceneViewController"16Q24@"NSString"32
v40@0:8@"AFUISiriRemoteSceneViewController"16@"NSDictionary"24Q32
q24@0:8@"AFUISiriRemoteSceneViewController"16
v24@0:8@"AFUISiriRemoteSceneViewController"16
v32@0:8@"AFUISiriRemoteSceneViewController"16@"SASRequestOptions"24
v28@0:8@"AFUISiriRemoteSceneViewController"16B24
v32@0:8@"AFUISiriRemoteSceneViewController"16B24B28
v32@0:8@"AFUISiriRemoteSceneViewController"16q24
v40@0:8@"AFUISiriRemoteSceneViewController"16B24B28@?<v@?B>32
v32@0:8@"AFUISiriRemoteSceneViewController"16Q24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?q>24
v32@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24
v40@0:8@"AFUISiriRemoteSceneViewController"16@"NSString"24@"NSString"32
v32@0:8@"AFUISiriRemoteSceneViewController"16@"NSArray"24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?@"NSString">24
v32@0:8@"AFUISiriRemoteSceneViewController"16@?<v@?B>24
v40@0:8@"AFUISiriRemoteSceneViewController"16Q24@?<v@?B>32
f24@0:8@"AFUISiriView"16
v24@0:8@"AFUISiriView"16
B32@0:8@"AFUISiriView"16@"NSString"24
v32@0:8@"AFUISiriView"16q24
B24@0:8@"AFUISiriView"16
v24@0:8@"<AFUISiriContent>"16
B32@0:8@"UIView<AFUISiriContent>"16@"NSString"24
v32@0:8@"AFUISiriCompactView"16d24
v28@0:8@"AFUISiriCompactView"16B24
v28@0:8@"SiriUIAudioRoutePickerController"16B24
v24@0:8@"SiriUIAudioRoutePickerController"16
q24@0:8@"AFUISiriSession"16
B24@0:8@"AFUISiriSession"16
@"NSArray"24@0:8@"AFUISiriSession"16
Q24@0:8@"AFUISiriSession"16
v48@0:8@"AFUISiriSession"16q24q32d40
v36@0:8@"AFUISiriSession"16B24@?<v@?q>28
v32@0:8@"AFUISiriSession"16@?<v@?q>24
v24@0:8@"AFUISiriSession"16
v32@0:8@"SAUIDelayedActionCommand"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIDelayedActionCancelCommand"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"AFUISiriSession"16@"NSString"24
v32@0:8@"SAUITakeScreenshot"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUISetUpdateMask"16@?<v@?@"AceObject<SAAceCommand>">24
v32@0:8@"SAUIAppPunchOut"16@?<v@?B>24
@"NSString"24@0:8@"AFUISiriView"16
@"AFAccount"24@0:8@"AFUISiriView"16
q24@0:8@"AFUISiriView"16
v32@0:8@"SiriUIKeyboardView"16@"NSString"24
v24@0:8@"SiriUIKeyboardView"16
v28@0:8@"AFUISiriTapPanDismissalPolicyManager"16B24
v32@0:8@"SRUIFDelayedActionCommandCache"16@"SAUIDelayedActionCommand"24
@40@0:8@16@24q32
@48@0:8@16@24q32@40
B40@0:8@16q24B32B36
v28@0:8B16@?20
{?=BBB{CGRect={CGPoint=dd}{CGSize=dd}}d}24@0:8@16
d24@0:8q16
@"SRUIFDelayedActionCommandCache"
@"SiriUIKeyboardView"
{?="enabled"B"minimized"B"hasBeenShown"B"keyboardFrame"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"keyboardHeight"d}
@"NSDictionary"
@"AFUINetworkAvailabilityStateMachine"
@"AFUISiriTapPanDismissalPolicyManager"
@"<AFUISiriViewControllerDataSource>"
@"<AFUISiriViewControllerDelegate>"
@"AFUISiriSession"
@"AFUISiriRemoteSceneViewController"
@"SiriUIAudioRoutePickerController"
@"UIStatusBar"
@"NSNumber"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v28@0:8@"SiriUIBackgroundBlurViewController"16B24
@"SUICOrbView"
@"UILongPressGestureRecognizer"
@"AFUISiriCompactDimmingView"
@"<AFUISiriContentDelegate>"
@"<AFUISiriCompactViewDelegate>"
@"AFUISiriEyesFreeView"
@"SiriUIBackgroundBlurViewController"
@"AFUISiriCarPlayFullScreenBackgroundView"
@"<AFUISiriCarPlayBackgroundViewDelegate>"
@"<AFUINetworkAvailabilityStateMachineDelegate>"
@"RadiosPreferences"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"SAUIAppPunchOut"
@"NSBundle"
{CGSize="width"d"height"d}
@"UIVisualEffectView"
@44@0:8@16@24@32B40
@"NSData"
q32@0:8@16@24
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
@"<AFUISiriSetupViewControllerDelegate>"
i32@0:8@16@24
v32@0:8d16@?24
v64@0:8@16@24d32@40@48@?56
@40@0:8@16@24^@32
@60@0:8@16@24@32B40q44^@52
@48@0:8@16@24@32^@40
v36@0:8@"AFUISiriCarPlayBackgroundView"16B24@"BSAnimationSettings"28
@"AFUISiriCarPlayBackgroundView"
@"CRSUIStatusBarStyleAssertion"
