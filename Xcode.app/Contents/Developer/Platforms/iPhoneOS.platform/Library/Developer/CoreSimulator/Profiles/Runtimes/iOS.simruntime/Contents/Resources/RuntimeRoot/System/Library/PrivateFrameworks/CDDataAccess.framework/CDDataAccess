DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountPrincipalPath
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountDoNotSaveReason
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
DAAccount.m
We shouldn't be resetting our account id, ever
com.apple.caldavsyncd-%@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
https
http
v8@?0
v24@?0@"ACAccount"8@"NSError"16
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
v20@?0B8@"NSError"12
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
Account class %@ MUST implement %s
v24@?0q8@"NSError"16
com.apple.dataaccess.DATransactionMonitorQueue
DATransactionMonitor.m
Transaction count becomes negative, %d
DAReListenForAccounts
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
AccountInfo.plist
DAAccountLoader.m
Could not find the frameworks directory for bundle %@
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
unknown
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
ASChangedCollectionLeaf
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
DARStatus
DAABLegacyContainer cannot update CNSaveRequest
DAABLegacyContainer does not support asContainer
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
com.apple.dataaccess.accountmonitor
DataAccess-
unit-test
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
%@ maxSize %d, bodyFormat %d
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
%@ message "%@", fromFolder "%@", toFolder "%@"
%@ messageID "%@", attachmentName "%@"
%@ subject "%@"
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
%@ emailAddresses %@
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"8@?0
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
DAUtils.m
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
iOS/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.MobileAddressBook
com.apple.mobilephone
com.apple.mobilecal
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
@?/:
%%0.%lud
%@://%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/Reminders/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
ASAccountActor.m
Must be called on subclass: %s
ASConcreteAccountActor
DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
%@: waiter %@ wants dataclasses %lx
DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
DAUserNotificationUtilities.m
Invalid parameter not satisfying: %@
notification != nil
completionBlock != nil
runLoop != nil
Already waiting on this notification %p
accountWithExternalIdentifier: is abstract
allAccounts: is abstract
accountForContainerWithIdentifier: is abstract
.me.com
.icloud.com
v24@?0@8^B16
v12@?0i8
com.apple.dataaccess.trustChallengeQueue
Not 
v12@?0B8
DAABLegacyAccount cannot update CNSaveRequest
com.apple.dataaccess.DATrafficQueue
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
DALogLevel
DAContactsContainer does not support asSource
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
RestrictionTimeoutDate
NumFailures
yyyy-MM-dd HH:mm:ss Z
com.apple.remindd.babysitter
BuildVersion
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
DABabysitter.m
Use the shared babysitter, jerk.
refreshingWaiters
failedWaiters
restrictedWaiters
DAAccount %p is going away...
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Changing Host From %@ to %@
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Crednetials for Backing Account %@
Account Store Returned A %@ OAuth-token From Crednetials Object %@ AccountID: %@
Saving account "%@" (%@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Setting identity certificate. Managed by profile? %@
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity for account %@
XPC: Increment XPC activity continue count to %d for account %@
XPC: Decrement XPC activity continue count to %d for account %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Transaction count is initialized to %d
DATransactionMonitor: xpc_transaction_begin INIT {name: com.apple.remindd.dataaccess.transactions}
Transaction count is incremented to %d
DATransactionMonitor: xpc_transaction_end RELEASE {name: com.apple.remindd.dataaccess.transactions}
Transaction count is decremented to %d
Remaining transactions: %@
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
Failed to load account bundle {error: %@}
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
Unknown DAItemChangeType %ld
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retreive password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Delay pending search for %f seconds
Delay new search for %f seconds
Search requested on account %@, which does not support it
%s unhandled dataclass %lx
Could not convert ACAccount (%@) to DAAccount
Could not load ACAccounts due to Account Error %@
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
DATaskManager: Task manager %@ is being deallocated. Ending XPC transaction
DATaskManager: Task manager %@ is being deallocated. Ending XPC activity
Exclusive task %@ submitted, to front: %d
DATaskManager: Begin an xpc transaction due to exclusive task
DATaskManager: DATransaction starting, ID: %@
DATaskManager: Retain an xpc activity due to exclusive task for account %@
Independent task %@ submitted
DATaskManager: Begin an xpc transaction due to independent task
DATaskManager: Retain an xpc activity due to independent task for account %@
Queued task %@ submitted
DATaskManager: Begin an xpc transaction due to queued task
DATaskManager: Retain an xpc activity due to queued task for account %@
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
DATaskManager: Task manager %@ is being shut down. Ending XPC transaction
DATaskManager: Task manager %@ is being shut down. Releasing XPC activity
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
DATaskManager: Task manager %@ has finally drained its queue. Ending XPC transaction %@
DATaskManager: Task manager %@ has finally drained its queue. Releasing XPC activity %@
Task manager %@ has finally drained its queue. Reset automatic fetching state
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account %@
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Aborting locks for dataclasses %lx to %@
DALocalDBGateKeeper notifyWaiters
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
Couldn't schedule response for notification %@
No completion block for notification %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
Babysitter: Noting that waiter %{public}@ failed %d times for operation %{public}@
===================
Babysitter: Account with ID %{public}@ had previously failed %d times and is from now restricted until it stops crashing. Please file a bug for any remindd crashes you find. (Timeout: %{public}@)
===================
===================
Babysitter: Waiter with ID %{public}@ had crashed %d times. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned. (Timeout: %{public}@)
===================
Babysitter: Restricted accounts are: %{public}@
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %{public}@ another try. Let's hope it doesn't crash this time.
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
EventsFolderItemsSyncContext
EventsSupport
DATransactionMonitor
ChillOutARC
MailFolder
MailFolderSupport
InvitationSupport
DAAccountLoader
DAAccountClassNames
DAAction
NSSecureCoding
NSCoding
DAMoveAction
DAResponse
DAABLegacyContainer
DAContainer
DACardDAVRecord
NSObject
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Searching
SearchSubclassing
DAContactsBasedAccount
DAContactsAccount
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DAPowerAssertionManager
ASAccountActor
ASAccountActorMessages
DADataHandler
DARunLoopRegistry
DAWaiterWrapper
DALocalDBGateKeeper
_DAContactsAccountContactsProvider
DATransaction
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DAContactsAccountProvider
DATrustHandler
DAABLegacyAccount
DATrafficLogger
DAContactsContainer
DABabysitter
DABabysitterRegistrationToken
DAActivity
_DAContactsAccountABLegacyProvider
CDVIsSafeRedirectForRequestURL:
CDVRawPath
T@"DAMailMessage",&,N,V_message
DAExtendedDescription
T@"NSArray",R,N
DAMergeOverrideDictionary:
T@"NSString",&,N,V_buildVersion
DARequestByApplyingStorageSession:
TB,N,V_claimedOwnershipOfEvents
T#,R
Ti,N,V_changeId
T@"<DADataclassLockWatcher>",&,N,V_waiter
_attachmentName
T@"<DATask>",&,N,V_activeModalTask
_emailAddresses
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
_itemChangeType
T@"<DATrustHandlerDelegate>",W,N,V_delegate
_mergedFreeBusy
T@"CNAccount",R,N,V_account
_pendingQueries
T@"CNMutableContainer",R,N,V_mutableContainer
_source
T@"DAMessageMoveRequest",&,N,V_origRequest
_status
T@"DATaskManager",R,N,V_taskManager
_waiter
T@"NSArray",&,N,V_emailAddresses
activeModalTask
T@"NSCountedSet",&,N,V_heldAsideContexts
allKeys
T@"NSData",R,C,N
T@"NSDate",&,N,V_lastQueryStartedTime
bundleWithPath:
T@"NSDictionary",R,N
clientAccountClassForACAccount:
T@"NSMapTable",&,N,V_contextToGroupIdentifier
constraintsPath
T@"NSMapTable",&,N,V_groupIdentifierToContexts
context
T@"NSMutableArray",&,N,V_mQueuedTasks
customSignature
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
daemonAccountClassForACAccount:
T@"NSMutableArray",&,N,V_transactions
enabled
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
externalSyncTag
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
giveAccountWithIDAnotherChance:
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
handler
T@"NSMutableDictionary",&,N,V_l_refreshingWaiters
initWithFormat:
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
isAuthenticated
T@"NSMutableSet",&,N,V_heldIndependentTasks
isDraft
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
isGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
isProxy
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
loadKeychainInformationsForURL:
T@"NSSet",R,N
lowercaseString
T@"NSString",&,N,V_agentClassName
markedAsDefault
T@"NSString",&,N,V_daemonAccountClassName
message
T@"NSString",&,N,V_filename
numberWithBool:
T@"NSString",&,N,V_sourceContainerId
parentMailboxID
T@"NSString",&,N,V_unitTestHackRunLoopMode
protectionSpace
T@"NSString",C,N,V_attachmentName
release
T@"NSString",C,N,V_destID
resumeMonitoringFoldersWithIDs:
T@"NSString",C,N,V_folderName
sentItemsFolder
T@"NSString",C,N,V_groupIdentifier
setAccountType:
T@"NSString",C,N,V_message
setDisplayName:
T@"NSString",C,N,V_parentFolderID
setOrigRequest:
T@"NSString",C,N,V_serverID
setTaskManager:
T@"NSString",C,N,V_sourceID
shareResponseFinishedWithError:
T@"NSString",R,C
stringByAppendingPathComponent:
T@"NSString",R,N
stringFromDate:
T@"NSString",R,N,V_transactionId
syncTag
T@"NSTimer",&,N,V_userInitiatedSyncTimer
updateExistingAccountProperties
T@"NSURL",C,N
T@,&,N,V_context
.cxx_destruct
CDVObjectForKeyCaseInsensitive:
DACompactDescription
T@"NSArray",C,N
DAManagedDefaultForKey:
T@"NSCountedSet",&,N,V_contexts
DAObjectForKeyCaseInsensitive:
T@,&,N,V_forwardedAttendeeUUIDs
OAuth2Token
TQ,N,V_offFlags
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
_agentClassName
T@"<DATask>",&,N,V_activeExclusiveTask
_destID
T@"<DATask>",&,N,V_activeQueuedTask
_hasTasksIndicatingARunningSync
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
_longID
T@"ACAccount",R,N,V_backingAccountInfo
_parentFolderID
T@"CNContactStore",R,N,V_contactStore
_scheduleSelector:withArgument:
T@"DAAccount",W,N,V_account
_sourceServerId
T@"DAStatusReport",&,N,V_statusReport
_storageSession
T@"DATrustHandler",&,N,V_trustHandler
account
T@"NSArray",R,N,V_appIdsForPasswordPrompt
addClientToken:
T@"NSData",&,N
arrayWithArray:
T@"NSDate",&,N,V_endTime
bundleForClass:
T@"NSDate",&,N,V_startTime
cancelTask:withUnderlyingError:
T@"NSHashTable",&,N,V_accounts
closeDBAndSave:
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
containsObject:
T@"NSMutableArray",&,N,V_eventsWaiters
countForObject:
T@"NSMutableArray",&,N,V_pendingQueries
da_URLWithScheme:host:port:uri:
T@"NSMutableArray",&,N,V_queuedModalTasks
dealloc
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
endTime
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
flagged
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
groupIdentifier
T@"NSMutableDictionary",&,N,V_l_failedWaiters
identityPersist
T@"NSMutableDictionary",&,N,V_l_restrictedWaiters
initWithStatus:sourceID:destID:
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
isCalDAVAccount
T@"NSMutableSet",&,N,V_independentTasks
isGoogleAccount
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
isLocal
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
l_failedWaiters
T@"NSRunLoop",R,N
localizedInvalidPasswordMessage
T@"NSString",&,N,V_accountClassName
markForDeletion
T@"NSString",&,N,V_clientAccountClassName
maxSize
T@"NSString",&,N,V_destinationContainerId
monitorAccount:
T@"NSString",&,N,V_mergedFreeBusy
onFlags
T@"NSString",&,N,V_sourceServerId
preview
T@"NSString",C,N
protocolVersion
T@"NSString",C,N,V_changeTrackingID
replyTo
T@"NSString",C,N,V_folderID
saveFetchingAutomaticallyState:
T@"NSString",C,N,V_fromFolder
T@"NSString",C,N,V_longID
setDataclasses:
T@"NSString",C,N,V_messageID
setHaveWarnedAboutCert:forHost:
T@"NSString",C,N,V_powerAssertionGroupID
setRequestType:
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
setWithObjects:
T@"NSString",C,N,V_toFolder
startup
T@"NSString",R,C,N
stringByAppendingPathExtension:
T@"NSString",R,N,V_label
subject
T@"NSTimer",&,N,V_managerIdleTimer
unregisterBlock
T@"NSTimer",&,N,V_xpcTransactionTimer
uppercaseString
T@,&,N,S_setChangedItem:,V_changedItem
userAgentHeader
T@,&,N,V_forwardedAttendees
T@,&,N,V_instanceId
T@,&,N,V_serverId
T@?,C,N,V_completionHandler
T@?,C,N,V_handler
T@?,C,N,V_unregisterBlock
TB,N
TB,N,V_hasRemoteChanges
TB,N,V_isDefault
TB,N,V_isValidating
TB,N,V_markedAsDefault
TB,N,V_markedForDeletion
TB,N,V_retrieveAvailablilty
TB,N,V_retrieveCertificates
TB,N,V_send
TB,N,V_shouldUseOpportunisticSockets
TB,N,V_wasUserInitiated
TB,R
TB,R,N
TB,R,N,V_shouldFailAllTasks
TQ,N,V_itemChangeType
TQ,N,V_onFlags
TQ,R
T^v,N,V_container
T^v,R,N,V_account
T^v,R,N,V_addressBook
T^v,R,N,V_source
Ti,N,SsetDAAccountVersion:
Ti,N,V_bodyFormat
Ti,N,V_calAlarmChangeId
Ti,N,V_calAttachmentChangeId
Ti,N,V_calAttendeeChangeId
Ti,N,V_calEventChangeId
Ti,N,V_calRecurrenceChangeId
Ti,N,V_highestSequenceNumber
Ti,N,V_maxSize
Ti,N,V_requestType
Ti,N,V_state
Ti,N,V_status
Ti,N,V_transactionCount
Ti,R,N
Ti,R,N,V_waiterNum
Tq,N
Tq,N,V_availabilityStatus
Tq,N,V_certificatesStatus
Tq,N,V_dataclass
Tq,N,V_dataclasses
Tq,N,V_status
Tq,R,N
T{os_unfair_lock_s=I},R,N,V_lock
URLByRemovingLastPathComponent
URLWithString:
URLWithString:relativeToURL:
URLWithUsername:
URLWithUsername:withPassword:
URLWithoutUsername
UTF8String
_CFURLRequest
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
_DACopyMutableQueryForAccountWithPersistentUUID:
_abortWaiterForWrappers:
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
_account
_accountClassName
_accountPasswordChanged
_accounts
_accountsQueue
_actionForTrust:host:service:
_activeExclusiveTask
_activeModalTask
_activeQueuedTask
_addAccountInfo:forFrameworkNamed:
_addressBook
_appIdsForPasswordPrompt
_availabilityStatus
_backingAccountInfo
_bodyFormat
_buildVersion
_calAlarmChangeId
_calAttachmentChangeId
_calAttendeeChangeId
_calEventChangeId
_calRecurrenceChangeId
_callbackQueue
_canWakenWaiter:
_cancelTasksWithReason:
_certificatesStatus
_changeId
_changeTrackingID
_changedItem
_claimedOwnershipOfEvents
_clearUserInitiatedSyncTimer
_clientAccountClassName
_clientToken
_completionHandler
_consumers
_contactStore
_container
_context
_contextToGroupIdentifier
_contextToPowerAssertionRef
_contexts
_continueCount
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
_daActivity
_daKeychainAccessibilityForSecAccessibility:
_daemonAccountClassName
_daemonDiedNotification:
_dataclass
_dataclassPropertyURLsByDataclass
_dataclasses
_delegate
_dequeueQuery
_destinationContainerId
_diagnosticReportWithWaiterID:failureCount:
_endTime
_endXpcTransaction
_ensureCustomLogFile
_eventsLockHolder
_eventsWaiters
_filename
_findPrivateFrameworks
_folderHierarchyChanged
_folderID
_folderName
_folderUpdatedNotification:
_foldersThatExternalClientsCareAboutChanged
_forwardedAttendeeUUIDs
_forwardedAttendees
_fromFolder
_groupIdentifier
_groupIdentifierToContexts
_handler
_hasInitted
_hasRemoteChanges
_hasTasksForcingNetworkConnection
_haveWarnedAboutCertDict
_heldAsideContexts
_heldAsideGroupIdentifiers
_heldIndependentTasks
_highestSequenceNumber
_incrementRefreshCountForWaiterID:operationName:
_independentTasks
_init
_initWithCFURLRequest:
_instanceId
_isDefault
_isFetchingAutomatically
_isIdentityManagedByProfile
_isValidating
_l_decrementRefreshCountForWaiter:forOperationWithName:
_l_decrementRefreshCountForWaiterID:operationName:
_l_failedWaiters
_l_giveAccountWithIDAnotherChance:
_l_incrementRefreshCountForWaiterID:operationName:
_l_refreshingWaiters
_l_reloadBabysitterWaitersWithRefreshingWaitersPrefs:failedWaitersPrefs:restrictedWaitersPrefs:
_l_restrictedWaiters
_label
_lastQueryStartedTime
_leafAccountTypes
_loadFrameworkAtSubpath:
_lock
_logSyncEnd
_mQueuedTasks
_mResolvedEmailToX509Certs
_makeStateTransition
_managerIdleTimer
_markedAsDefault
_markedForDeletion
_maxSize
_message
_messageID
_modalHeldActiveQueuedTask
_modalHeldIndependentTasks
_mutableContainer
_newASPolicyKeyNotification:
_notifyWaitersForDataclasses:
_offFlags
_onFlags
_origRequest
_pendingQueryQueue
_performTask:
_populateVersionDescriptions
_populatedStringDictionaryWithWaitersDictionary:
_powerAssertionGroupID
_queuedExclusiveTasks
_queuedModalTasks
_reactivateHeldTasks
_reallyCancelAllSearchQueries
_reallyCancelPendingSearchQuery:
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_registerWaiter:forDataclassLocks:preempt:completionHandler:
_releaseAssertionForContext:
_releasePowerAssertionForTask:
_reloadBabysitterProperties
_requestCancelTasksWithReason:
_requestType
_retainAssertionForContext:
_retainPowerAssertionForTask:
_retrieveAvailablilty
_retrieveCertificates
_schedulePerformTask:
_scheduleStartModal:
_secAccessibilityForDAKeychainAccessibility:
_send
_sendAllClearNotifications
_serverID
_serverId
_serverSuffixesToAlwaysFail
_setChangedItem:
_setPersistentUUID:
_setUnitTestHackRunLoopMode:
_shouldFailAllTasks
_shouldUseOpportunisticSockets
_sourceApplicationBundleIdentifier
_sourceContainerId
_sourceID
_startModal:
_startTime
_state
_statusReport
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
_taskManager
_toFolder
_transaction
_transactionCount
_transactionId
_transactionMonitorDelegate
_transactions
_trustHandler
_unitTestHackRunLoopMode
_unregisterBlock
_useFakeDescriptions
_useOpportunisticSocketsAgain
_userInitiatedSyncTimer
_version
_waiterIDsExpectingEventsLock
_waiterNum
_wasUserInitiated
_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
_xpcActivity
_xpcTransactionTimer
aa_isSuspended
absoluteString
absoluteURL
acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToAccountFrameworkSubpath
acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
account:isValid:validationError:
accountBoolPropertyForKey:
accountClassForACAccount:
accountClassName
accountContainsEmailAddress:
accountDescription
accountDidChangeFromOldAccountInfo:
accountForContainerWithIdentifier:
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountID
accountIdentifier
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
accountIntPropertyForKey:
accountPersistentUUID
accountPropertyForKey:
accountShouldContinue:
accountType
accountTypeIdentifier
accountTypeWithAccountTypeIdentifier:
accountTypeWithIdentifier:completion:
accountWithExternalIdentifier:createIfNecessary:
accountWithIDShouldContinue:
accountWithIdentifier:
accountWithIdentifier:completion:
accounts
accountsMatchingPredicate:error:
accountsQueue
accountsWithAccountType:
accountsWithAccountType:completion:
accountsWithAccountTypeIdentifiers:error:
actionForTrust:forHost:andService:
activeExclusiveTask
activeQueuedTask
addAccount:
addCert:forEmailAddress:
addObject:
addObjectsFromArray:
addTimer:forMode:
addToCoreDAVLoggingDelegates
addUsernameToURL:
additionalHeaderValues
addressBook
agentClassForACAccount:
agentClassName
allAccounts
allObjects
allTasks
allValues
allowTrust:forHost:service:
allowsKeyedCoding
appIdsForPasswordPrompt
appendBytes:length:
appendData:
appendFormat:
appendString:
arePropertiesReadonly
array
arrayWithObjects:count:
asContainer
asSource
attachmentName
attachments
autodiscoverAccountConfigurationWithConsumer:
autorelease
availabilityStatus
babysitterEnabled
backingAccountInfo
beginDownloadingAttachmentWithUUID:consumer:
body
bodyFormat
bodySize
bodyTruncated
bodyType
boolForKey:
boolValue
buildVersion
bytes
cTag
calAlarmChangeId
calAttachmentChangeId
calAttendeeChangeId
calEventChangeId
calRecurrenceChangeId
calendarAvailabilityRequestFinishedWithError:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
callbackQueue
canAccessCredentialsWithAccessibility:
cancelAllSearchQueries
cancelAllTasks
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownloadingInstance:error:
cancelPreviousPerformRequestsWithTarget:
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelSearchQuery:
cancelShareResponseInstance:error:
cancelTask:
cancelTaskWithID:
cancelTaskWithReason:underlyingError:
cancelTasksDueToOnPowerMode
caseInsensitiveCompare:
certificatesStatus
changeId
changeTrackingID
changedItem
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
checkValidityOnAccountStore:withConsumer:
checkValidityOnAccountStore:withConsumer:inQueue:
claimedOwnershipOfDataclasses:
claimedOwnershipOfEvents
class
cleanupAccountFiles
clientAccountClassName
clientID
clientToken
clientTokenRequestedByServer
code
completionHandler
conformsToProtocol:
consumer
consumerForTask:
contactStore
container
contentsOfDirectoryAtPath:error:
contextToGroupIdentifier
contextToPowerAssertionRef
contexts
continueWithoutCredentialForAuthenticationChallenge:
conversationId
conversationIndex
copy
copyLocalObjectFromId:
copyOfAllLocalObjectsInContainer
copyStorageSession
count
countByEnumeratingWithState:objects:count:
credential
credentialItemForKey:
credentialProtectionPolicy
credentialType
currentHandler
currentMode
currentRunLoop
customConnectionProperties
daAccountSubclassWithBackingAccountInfo:
daAccountVersion
da_URLWithDirtyString:
da_URLWithScheme:host:user:port:uri:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_accounts
da_accountsEnabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:outError:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
da_appendSlashIfNeeded
da_classicPortForScheme:
da_dataWithHexString:
da_dataWithHexString:stringIsUppercase:
da_hasPrefixCaseInsensitive:
da_hexString
da_isEqualToDAVURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_loadDAAccountsEnabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_loadDAAccountsWithCompletion:
da_lowercaseHexStringWithoutSpaces
da_new64ByteGUID
da_newGUID
da_pathWithoutTrailingRemovingSlash
da_performSelectorThatDoesntAffectRetainCount:withObject:
da_rawPath
da_removeSlashIfNeeded
da_stringByAddingPercentEscapesForUsername
da_stringByRemovingPercentEscapesForUsername
da_stringByURLEscapingPathComponent
da_trimWhiteSpace
da_uppercaseHexStringWithoutSpaces
da_urlByRemovingUsername
da_urlBySettingHost:
da_urlBySettingHost:keepUsername:
da_urlBySettingPath:
da_urlBySettingPath:keepUsername:
da_urlBySettingPort:
da_urlBySettingPort:keepUsername:
da_urlBySettingScheme:
da_urlBySettingScheme:keepUsername:
da_urlBySettingUsername:
da_urlForLogging
daemonAccountClassName
daemonAppropriateAccountClassForACAccount:
dataUsingEncoding:
dataWithJSONObject:options:error:
dataclass
dataclassProperties
dataclassPropertyURLsByDataclass
dataclasses
date
dateWithCalendarFormat:timeZone:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeIntForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrementTransactionCountForTransaction:
decrementXpcActivityContinueCount
defaultContainerIdentifierForDADataclass:
defaultEventsFolder
defaultManager
defaultTrustManager
delegate
deleteContainer:
deletedItemsFolder
description
destID
destinationContainerId
deviceType
dictionary
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
didFinishAllXPCTransactions
discoverInitialPropertiesWithConsumer:
displayAccount
displayName
displayTo
distantPast
domain
domainOnly
doubleValue
downloadFinishedError:
draftsFolder
drainContainer
drainSuperfluousChanges
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dropPowerAssertionsForGroupIdentifier:
emailAddress
emailAddresses
enabledDataclasses
enabledDataclassesBitmask
enabledForAnyDADataclasses:
enabledForDADataclass:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedHeaders
encryptionIdentityPersistentReference
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
eventsFolders
eventsLockHolder
eventsWaiters
exceptionWithName:reason:userInfo:
exceptionsDict
exceptionsForDigest:
externalIdentifier
externalIdentifierString
externalModificationTag
externalSyncData
fileSystemRepresentation
filename
firstObject
flaggedIsSet
folderID
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
folderIDsThatExternalClientsCareAboutWithTag:
folderName
foldersTag
forwardedAttendeeUUIDs
forwardedAttendees
from
fromFolder
generatesBulletins
getAppleIDSession
getCFRunLoop
getDAExceptionObjectWithLocalItem:originalEvent:account:
getDAObjectWithLocalItem:serverId:account:
getFetchingAutomaticallyState
getIdFromLocalObject:
getPendingQueryQueue
groupIdentifierToContexts
guessPasswordForURL:
handleCertificateError:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleTrust:forHost:forAccount:withCompletionBlock:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
handleValidationError:completion:
hasPrefix:
hasRemoteChanges
hasSuffix:
hasXpcActivity
hash
haveWarnedAboutCert:forHost:
haveWarnedAboutCertDict
heldAsideContexts
heldAsideGroupIdentifiers
heldIndependentTasks
highestSequenceNumber
host
hostFromDataclassPropertiesForDataclass:
iOSLegacyIdentifier
identifier
importance
inboxFolder
incrementTransactionCountForTransaction:
incrementXpcActivityContinueCount
independentTasks
infoDictionary
ingestBackingAccountInfoProperties
init
initMoveRequestWithMessage:fromFolder:toFolder:
initRequestForBodyFormat:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestWithMessageID:
initRequestWithSetFlags:unsetFlags:message:
initWithABAccout:
initWithABSource:
initWithAccount:
initWithAddressBook:
initWithAttachmentName:andMessageServerID:
initWithBackingAccountInfo:
initWithBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCNContainer:
initWithCapacity:
initWithCoder:
initWithContactStore:
initWithContainer:changeTrackingID:
initWithDAAccount:
initWithData:encoding:
initWithDelegate:
initWithDictionary:copyItems:
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
initWithExternalIdentifier:
initWithFilename:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
initWithItemChangeType:changedItem:serverId:status:
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
initWithLabel:
initWithObjects:
initWithPassword:
initWithPath:
initWithRequestType:message:send:
initWithTrust:
insertObject:atIndex:
insertString:atIndex:
instanceID
instanceId
intValue
integerValue
invalidate
isAccount
isActiveSyncAccount
isAppleInternalInstall
isCalDAVChildAccount
isCardDAVAccount
isChildAccount
isContact
isContainer
isContentReadonly
isDefault
isDisabled
isEnabledForDataclass:
isEnabledToSyncDataclass:
isEqual:
isEqualToAccount:
isEqualToString:
isHotmailAccount
isInHoldingPattern
isKindOfClass:
isLDAPAccount
isMemberOfClass:
isSearchContainer
isShutdown
isSubscribedCalendarAccount
isValidating
itemChangeType
keychainAccessibilityType
l_refreshingWaiters
l_restrictedWaiters
label
lastObject
lastQueryStartedTime
lastVerb
legacyIdentifier
length
loadAndReturnError:
loadDaemonBundleForACAccountType:
loadFrameworkForACAccountType:
localizedIdenticalAccountFailureMessage
lock
logICSMessage:atLevel:
logSnippet:
longID
mQueuedTasks
mResolvedEmailToX509Certs
mailNumberOfPastDaysToSync
mailboxID
mailboxes
mainRunLoop
managerIdleTimer
mapTableWithStrongToStrongObjects
markAsDefault
markedForDeletion
meContactidentifier
meIdentifier
meetingRequestIsActionable
meetingRequestMetaData
meetingRequestUUID
mergedFreeBusy
messageClass
messageID
migratePasswordForAccount:
modalHeldActiveQueuedTask
modalHeldIndependentTasks
monitorFolderWithID:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
monitorFoldersWithIDs:
monitoredAccounts
mutableContainer
mutableCopy
name
newDataHandlerForDataclass:container:changeTrackingID:
nextObject
null
numberWithDouble:
numberWithInt:
numberWithInteger:
oauth2Token
oauthInfoProvider
oauthToken
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
offFlags
onBehalfOfBundleIdentifier
oneshotListOfAccountIDs
openAuthenticationURL:forAccount:shouldConfirm:completion:
openDB
origRequest
parentAccount
parentAccountIdentifier
parentFolderID
password
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
passwordWithExpected:
path
pendingQueries
pendingQueryQueue
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performFolderChange:isUserRequested:
performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMoveRequests:consumer:
performResolveRecipientsRequest:consumer:
performSearchQuery:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
performTask
persistentUUID
port
portFromDataclassPropertiesForDataclass:
powerAssertionGroupID
powerAssertionRetainCount:
predicateForAccountForContainerWithIdentifier:
predicateForAccountWithExternalIdentifier:
principalPath
principalURL
privateFrameworksPath
processInfo
processName
promptForAllCerts
providerWithAddressBook:
providerWithContactStore:
query
queuedExclusiveTasks
queuedModalTasks
queuedTasks
rangeOfString:options:
rawTrustResultForSSLTrust:hostname:service:
reacquireClientRestrictions:
read
readIsSet
reattainPowerAssertionsForGroupIdentifier:
reattemptInvitationLinkageForMetaData:inFolderWithId:
registerAccount:forOperationWithName:
registerForInterrogationWithBlock:
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
registerWithiCalendar
relativePath
releasePowerAssertion:
relinquishLocksForWaiter:dataclasses:moreComing:
reload
remoteID
removeAccount:
removeAccountPropertyForKey:
removeAllObjects
removeClientCertificateData
removeConsumerForTask:
removeDBSyncData
removeFromCoreDAVLoggingDelegates
removeItemAtPath:error:
removeKeychainInformationsForURL:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePasswordForAccount:withPersistentUUID:
removeXpcActivity
renewCredentialsForAccount:force:reason:completion:
replaceOccurrencesOfString:withString:options:range:
reportShareRequestAsJunkForCalendar:consumer:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
requestCancelTaskWithReason:
requestType
resetAccountID
resetCertWarnings
resetStatusReport
resolvedEmailToX509Certs
respondToShareRequestForCalendar:withResponse:consumer:
respondsToSelector:
restrictions
retain
retainCount
retainPowerAssertion:withGroupIdentifier:
retrieveAvailablilty
retrieveCertificates
rfc822Data
saveAccountProperties
saveAccountPropertiesWithCompletionHandler:
saveContainer
saveKeychainInformationsForURL:andPassword:withAccessibility:
saveModifiedPropertiesOnBackingAccount
saveVerifiedAccount:withCompletionHandler:
saveXpcActivity:
scheduleIdentifier
scheme
searchQueriesRunning
searchQuery:finishedWithError:
self
send
sendEmailsForCalEvents:consumer:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
sender
server
serverComplianceClasses
serverID
serverId
serverRoot
serverTrust
setAcAccountTypeToAccountDaemonBundleSubpath:
setAcAccountTypeToAccountFrameworkSubpath:
setAcAccountTypeToClassNames:
setAcParentAccountTypeToChildAccountTypes:
setAccount:
setAccountBoolProperty:forKey:
setAccountClassName:
setAccountDescription:
setAccountIdentifier:
setAccountIntProperty:forKey:
setAccountProperty:forKey:
setAccounts:
setAccountsQueue:
setActiveExclusiveTask:
setActiveModalTask:
setActiveQueuedTask:
setAddressList:forKey:
setAddressListForBcc:
setAddressListForCc:
setAddressListForSender:
setAddressListForTo:
setAgentClassName:
setArePropertiesReadonly:
setAttachmentName:
setAuthenticated:
setAvailabilityStatus:
setBodyFormat:
setBuildVersion:
setCTag:
setCalAlarmChangeId:
setCalAttachmentChangeId:
setCalAttendeeChangeId:
setCalEventChangeId:
setCalRecurrenceChangeId:
setCallbackQueue:
setCertificatesStatus:
setChangeId:
setChangeTrackingID:
setClaimedOwnershipOfEvents:
setClientAccountClassName:
setCompletionHandler:
setConnectionDisplayName:
setConstraintsPath:
setConsumer:forTask:
setContainer:
setContentReadonly:
setContext:
setContextToGroupIdentifier:
setContextToPowerAssertionRef:
setContexts:
setCredential:
setCustomSignature:
setDAAccountVersion:
setDaemonAccountClassName:
setDataclass:
setDataclassPropertyURLsByDataclass:
setDateFormat:
setDelegate:
setDestID:
setDestinationContainerId:
setEmailAddress:
setEmailAddresses:
setEnabled:forDADataclass:
setEnabled:forDataclass:
setEncryptionIdentityPersistentReference:
setEndTime:
setEventsLockHolder:
setEventsWaiters:
setExceptions:forDigest:
setExternalIdentifier:
setExternalModificationTag:
setExternalSyncData:
setExternalSyncTag:
setFilename:
setFolderID:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
setFolderName:
setForwardedAttendeeUUIDs:
setForwardedAttendees:
setFromFolder:
setGeneratesBulletins:
setGroupIdentifier:
setGroupIdentifierToContexts:
setHandler:
setHasRemoteChanges:
setHaveWarnedAboutCertDict:
setHeader:forKey:
setHeldAsideContexts:
setHeldAsideGroupIdentifiers:
setHeldIndependentTasks:
setHighestSequenceNumber:
setHost:
setIdentityCertificatePersistentID:managedByProfile:
setIndependentTasks:
setInstanceId:
setIsDefault:
setIsValidating:
setItemChangeType:
setL_failedWaiters:
setL_refreshingWaiters:
setL_restrictedWaiters:
setLastQueryStartedTime:
setLongID:
setMQueuedTasks:
setMResolvedEmailToX509Certs:
setMailNumberOfPastDaysToSync:
setManagerIdleTimer:
setMarkedAsDefault:
setMarkedForDeletion:
setMaxSize:
setMeContactIdentifier:
setMeIdentifier:
setMergedFreeBusy:
setMessage:
setMessageID:
setModalHeldActiveQueuedTask:
setModalHeldIndependentTasks:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOffFlags:
setOnFlags:
setParentFolderID:
setPassword:
setPassword:forAccount:withPersistentUUID:withAccessibility:
setPendingQueries:
setPendingQueryQueue:
setPersistentUUID:
setPort:
setPowerAssertionGroupID:
setPrincipalPath:
setPrincipalURL:
setProtocolVersion:
setQueuedExclusiveTasks:
setQueuedModalTasks:
setRestrictions:
setRetrieveAvailablilty:
setRetrieveCertificates:
setSend:
setServerID:
setServerId:
setService:
setShouldDoInitialAutodiscovery:
setShouldUseOpportunisticSockets:
setSigningIdentityPersistentReference:
setSourceApplicationBundleIdentifier:
setSourceContainerId:
setSourceID:
setSourceServerId:
setStartTime:
setState:
setStatus:
setStatusReport:
setSyncData:
setSyncTag:
setSyncingAllowed:
setToFolder:
setTransactionCount:
setTransactionMonitorDelegate:
setTransactions:
setTrust:
setTrustHandler:
setType:
setUnitTestHackRunLoopMode:
setUnregisterBlock:
setUseSSL:
setUser:
setUserInfo:forClientUUID:
setUserInitiatedSyncTimer:
setUsername:
setValue:forKey:
setWaiter:
setWaiterIDsExpectingEventsLock:
setWasUserInitiated:
setWithObject:
setXpcTransactionTimer:
sharedBabysitter
sharedConnection
sharedGateKeeper
sharedInstance
sharedKeychain
sharedLogger
sharedManager
sharedMonitor
sharedPowerAssertionManager
sharedRunLoop
sharedTransactionMonitor
shouldAutodiscoverAccountProperties
shouldCancelTaskDueToOnPowerFetchMode
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldForceNetworking
shouldHoldPowerAssertion
shouldRemoveDBSyncDataOnAccountChange
shouldUseOpportunisticSockets
showPromptWithOptions:responseBlock:
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
shutdown
signingIdentityPersistentReference
slurpAndRemoveLookasideFile:prefixString:suffixString:
smimeType
source
sourceApplicationBundleIdentifier
sourceContainerId
sourceID
sourceServerId
spinnerIdentifiers
standardUserDefaults
startModal
startTime
state
stateString
status
statusReport
statusReportWithCompletionBlock:
stopMonitoringAllFolders
stopMonitoringFolderWithID:
stopMonitoringFolders
stopMonitoringFoldersForUpdates:
stopMonitoringFoldersWithIDs:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByTrimmingCharactersInSet:
stringByURLQuoting
stringForItemChangeType:
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
submitExclusiveTask:
submitExclusiveTask:toFrontOfQueue:
submitIndependentTask:
submitQueuedTask:
substringFromIndex:
substringToIndex:
superclass
supportsAuthentication
supportsConversations
supportsDraftFolderSync
supportsEmailFlagging
supportsMailboxSearch
supportsSecureCoding
supportsSmartForwardReply
supportsUniqueServerId
suspendMonitoringFoldersWithIDs:
syncData
syncStoreIdentifier
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
systemTimeZone
takeValuesFromModifiedAccount:
taskDidFinish:
taskEndModal:
taskIsModal:
taskManager
taskManagerDidAddTask:
taskManagerWillRemoveTask:
taskRequestModal:
tearDown
threadTopic
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
toFolder
tokenByRegisteringAccount:forOperationWithName:
transactionCount
transactionId
transactionMonitorDelegate
transactions
trustHandler
type
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
unitTestHackRunLoopMode
unmonitorAccount:
unregisterAccount:forOperationWithName:
unregisterWaiterForDataclassLocks:
updateContainer:
updateSaveRequest:
upgradeAccount
urlFromDataclassPropertiesForDataclass:
useCredential:forAuthenticationChallenge:
useSSL
useSSLFromDataclassPropertiesForDataclass:
user
userAgent
userInfo
userInitiatedSyncTimer
username
usernameWithoutDomain
vendDaemons:
verbIsSet
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
waiter
waiterID
waiterIDsExpectingEventsLock
waiterNum
wasUserInitiated
weakObjectsHashTable
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
whitespaceAndNewlineCharacterSet
wipeServerIds
writeToFile:atomically:
xpcTransactionTimer
zone
@24@0:8@16
v16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@16@0:8
v24@0:8@16
B24@0:8@16
v28@0:8B16@20
B24@0:8q16
v28@0:8B16q20
q16@0:8
v32@0:8@16@24
i24@0:8@16
v28@0:8i16@20
@20@0:8B16
q24@0:8@16
v20@0:8B16
Vv24@0:8@16
v24@0:8q16
v40@0:8@16@24@32
@24@0:8q16
v24@0:8@?16
v28@0:8@16B24
^{__CFData=}24@0:8@16
v32@0:8^{__CFData=}16@24
^{__CFURLStorageSession=}16@0:8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
B32@0:8@16@?24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v68@0:8@16@24@32@40B48B52B56@60
B32@0:8@16@24
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@40@0:8@16q24@32
@"<DATransactionMonitorDelegate>"
v32@0:8:16@24
@40@0:8@16@24^@32
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@48@0:8Q16@24@32@40
@24@0:8Q16
Q16@0:8
v24@0:8Q16
@56@0:8Q16@24@32@40@48
@48@0:8Q16@24@32q40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
^v16@0:8
v24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CNContainer"16@0:8
@24@0:8^v16
@"NSHashTable"
B20@0:8i16
^v20@0:8i16
i24@0:8^v16
^{__CFDictionary=}24@0:8@16
^{__CFDictionary=}28@0:8@16i24
@36@0:8@16i24B28B32
B44@0:8@16@24@32i40
B36@0:8@16@24i32
@40@0:8Q16Q24@32
@24@0:8i16i20
@32@0:8i16@20i28
@48@0:8i16@20@28@36i44
@40@0:8@16@24@32
@32@0:8i16@20B28
@"DAMailMessage"
@36@0:8i16@20@28
@"DAMessageMoveRequest"
@48@0:8@16B24B28@32@40
@"CNAccount"
v44@0:8@16q24B32@?36
v32@0:8q16@?24
v40@0:8@16q24@?32
@32@0:8@16^@24
@32@0:8@16q24
v48@0:8:16@24d32@40
@28@0:8@16B24
@52@0:8@16@24@32i40@44
@44@0:8@16@24i32@36
@24@0:8^{__CFURLStorageSession=}16
@"DATransaction"
@"DAActivity"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
v24@0:8#16
Q24@0:8@16
@"NSCountedSet"
Vv20@0:8i16
Vv20@0:8B16
Vv28@0:8@16B24
@24@0:8^@16
@32@0:8q16^@24
B40@0:8@16@24@32
i92@0:8@16@24i32@36@44@52@60B68B72@76@84
i52@0:8@16@24@32B40@44
i56@0:8@16@24@32B40B44@48
i32@0:8@16@24
Vv24@0:8@"DASearchQuery"16
@"NSArray"16@0:8
Vv24@0:8@"NSData"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSArray"16
Vv28@0:8@"NSArray"16B24
@"NSSet"24@0:8^@16
@"NSSet"32@0:8q16^@24
B40@0:8@"NSSet"16@"NSSet"24@"NSString"32
i92@0:8@"NSData"16@"NSString"24i32@"NSString"36@"NSString"44@"NSString"52@"NSString"60B68B72@"<DAMessageSendConsumer>"76@84
i52@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i52@0:8@"NSArray"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i56@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i56@0:8@"NSArray"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i32@0:8@"NSArray"16@"<DAMessageMoveRequestConsumer>"24
i32@0:8@"DAMessageFetchAttachmentRequest"16@"<DAMessageFetchAttachmentConsumer>"24
i32@0:8@"NSArray"16@"<DAMailboxFetchSearchResultConsumer>"24
i32@0:8@"DAResolveRecipientsRequest"16@"<DAResolveRecipientsConsumer>"24
v28@0:8@"DAFolderChange"16B24
@"DAFolder"16@0:8
B32@0:8@"NSData"16@"NSString"24
@"NSString"40@0:8@"NSData"16@"NSString"24^@32
Vv24@0:8@"NSNotification"16
@40@0:8q16^v24@32
@32@0:8^v16@24
v24@0:8^v16
B20@0:8B16
@40@0:8^v16@24@32
@?16@0:8
@"<DADataclassLockWatcher>"
v36@0:8@16q24B32
@"CNContactStore"
v56@0:8^{__CFUserNotification=}16@24@32@40@?48
v32@0:8@16q24
v32@0:8@"NSString"16q24
i40@0:8^{__SecTrust=}16@24@32
v48@0:8^{__SecTrust=}16@24@32@?40
B40@0:8@16@24@?32
@"<DATrustHandlerDelegate>"
@"CNMutableContainer"
v28@0:8@16i24
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8@?16
,8ENw
DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountPrincipalPath
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountDoNotSaveReason
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
DAAccount.m
We shouldn't be resetting our account id, ever
com.apple.caldavsyncd-%@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
https
http
v8@?0
v24@?0@"ACAccount"8@"NSError"16
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
v20@?0B8@"NSError"12
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
Account class %@ MUST implement %s
v24@?0q8@"NSError"16
com.apple.dataaccess.DATransactionMonitorQueue
DATransactionMonitor.m
Transaction count becomes negative, %d
DAReListenForAccounts
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
AccountInfo.plist
DAAccountLoader.m
Could not find the frameworks directory for bundle %@
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
unknown
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
ASChangedCollectionLeaf
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
DARStatus
DAABLegacyContainer cannot update CNSaveRequest
DAABLegacyContainer does not support asContainer
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
com.apple.dataaccess.accountmonitor
DataAccess-
unit-test
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
%@ maxSize %d, bodyFormat %d
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
%@ message "%@", fromFolder "%@", toFolder "%@"
%@ messageID "%@", attachmentName "%@"
%@ subject "%@"
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
%@ emailAddresses %@
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"8@?0
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
DAUtils.m
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
iOS/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.MobileAddressBook
com.apple.mobilephone
com.apple.mobilecal
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
@?/:
%%0.%lud
%@://%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/Reminders/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
ASAccountActor.m
Must be called on subclass: %s
ASConcreteAccountActor
DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
%@: waiter %@ wants dataclasses %lx
DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
DAUserNotificationUtilities.m
Invalid parameter not satisfying: %@
notification != nil
completionBlock != nil
runLoop != nil
Already waiting on this notification %p
accountWithExternalIdentifier: is abstract
allAccounts: is abstract
accountForContainerWithIdentifier: is abstract
.me.com
.icloud.com
v24@?0@8^B16
v12@?0i8
com.apple.dataaccess.trustChallengeQueue
Not 
v12@?0B8
DAABLegacyAccount cannot update CNSaveRequest
com.apple.dataaccess.DATrafficQueue
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
DALogLevel
DAContactsContainer does not support asSource
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
RestrictionTimeoutDate
NumFailures
yyyy-MM-dd HH:mm:ss Z
com.apple.remindd.babysitter
BuildVersion
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
DABabysitter.m
Use the shared babysitter, jerk.
refreshingWaiters
failedWaiters
restrictedWaiters
DAAccount %p is going away...
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Changing Host From %@ to %@
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Crednetials for Backing Account %@
Account Store Returned A %@ OAuth-token From Crednetials Object %@ AccountID: %@
Saving account "%@" (%@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Setting identity certificate. Managed by profile? %@
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity for account %@
XPC: Increment XPC activity continue count to %d for account %@
XPC: Decrement XPC activity continue count to %d for account %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Transaction count is initialized to %d
DATransactionMonitor: xpc_transaction_begin INIT {name: com.apple.remindd.dataaccess.transactions}
Transaction count is incremented to %d
DATransactionMonitor: xpc_transaction_end RELEASE {name: com.apple.remindd.dataaccess.transactions}
Transaction count is decremented to %d
Remaining transactions: %@
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
Failed to load account bundle {error: %@}
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
Unknown DAItemChangeType %ld
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retreive password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Delay pending search for %f seconds
Delay new search for %f seconds
Search requested on account %@, which does not support it
%s unhandled dataclass %lx
Could not convert ACAccount (%@) to DAAccount
Could not load ACAccounts due to Account Error %@
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
DATaskManager: Task manager %@ is being deallocated. Ending XPC transaction
DATaskManager: Task manager %@ is being deallocated. Ending XPC activity
Exclusive task %@ submitted, to front: %d
DATaskManager: Begin an xpc transaction due to exclusive task
DATaskManager: DATransaction starting, ID: %@
DATaskManager: Retain an xpc activity due to exclusive task for account %@
Independent task %@ submitted
DATaskManager: Begin an xpc transaction due to independent task
DATaskManager: Retain an xpc activity due to independent task for account %@
Queued task %@ submitted
DATaskManager: Begin an xpc transaction due to queued task
DATaskManager: Retain an xpc activity due to queued task for account %@
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
DATaskManager: Task manager %@ is being shut down. Ending XPC transaction
DATaskManager: Task manager %@ is being shut down. Releasing XPC activity
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
DATaskManager: Task manager %@ has finally drained its queue. Ending XPC transaction %@
DATaskManager: Task manager %@ has finally drained its queue. Releasing XPC activity %@
Task manager %@ has finally drained its queue. Reset automatic fetching state
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account %@
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Aborting locks for dataclasses %lx to %@
DALocalDBGateKeeper notifyWaiters
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
Couldn't schedule response for notification %@
No completion block for notification %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
Babysitter: Noting that waiter %{public}@ failed %d times for operation %{public}@
===================
Babysitter: Account with ID %{public}@ had previously failed %d times and is from now restricted until it stops crashing. Please file a bug for any remindd crashes you find. (Timeout: %{public}@)
===================
===================
Babysitter: Waiter with ID %{public}@ had crashed %d times. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned. (Timeout: %{public}@)
===================
Babysitter: Restricted accounts are: %{public}@
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %{public}@ another try. Let's hope it doesn't crash this time.
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
EventsFolderItemsSyncContext
EventsSupport
DATransactionMonitor
ChillOutARC
MailFolder
MailFolderSupport
InvitationSupport
DAAccountLoader
DAAccountClassNames
DAAction
NSSecureCoding
NSCoding
DAMoveAction
DAResponse
DAABLegacyContainer
DAContainer
DACardDAVRecord
NSObject
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Searching
SearchSubclassing
DAContactsBasedAccount
DAContactsAccount
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DAPowerAssertionManager
ASAccountActor
ASAccountActorMessages
DADataHandler
DARunLoopRegistry
DAWaiterWrapper
DALocalDBGateKeeper
_DAContactsAccountContactsProvider
DATransaction
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DAContactsAccountProvider
DATrustHandler
DAABLegacyAccount
DATrafficLogger
DAContactsContainer
DABabysitter
DABabysitterRegistrationToken
DAActivity
_DAContactsAccountABLegacyProvider
CDVIsSafeRedirectForRequestURL:
CDVRawPath
T@"DAMailMessage",&,N,V_message
DAExtendedDescription
T@"NSArray",R,N
DAMergeOverrideDictionary:
T@"NSString",&,N,V_buildVersion
DARequestByApplyingStorageSession:
TB,N,V_claimedOwnershipOfEvents
T#,R
Ti,N,V_changeId
T@"<DADataclassLockWatcher>",&,N,V_waiter
_attachmentName
T@"<DATask>",&,N,V_activeModalTask
_emailAddresses
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
_itemChangeType
T@"<DATrustHandlerDelegate>",W,N,V_delegate
_mergedFreeBusy
T@"CNAccount",R,N,V_account
_pendingQueries
T@"CNMutableContainer",R,N,V_mutableContainer
_source
T@"DAMessageMoveRequest",&,N,V_origRequest
_status
T@"DATaskManager",R,N,V_taskManager
_waiter
T@"NSArray",&,N,V_emailAddresses
activeModalTask
T@"NSCountedSet",&,N,V_heldAsideContexts
allKeys
T@"NSData",R,C,N
T@"NSDate",&,N,V_lastQueryStartedTime
bundleWithPath:
T@"NSDictionary",R,N
clientAccountClassForACAccount:
T@"NSMapTable",&,N,V_contextToGroupIdentifier
constraintsPath
T@"NSMapTable",&,N,V_groupIdentifierToContexts
context
T@"NSMutableArray",&,N,V_mQueuedTasks
customSignature
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
daemonAccountClassForACAccount:
T@"NSMutableArray",&,N,V_transactions
enabled
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
externalSyncTag
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
giveAccountWithIDAnotherChance:
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
handler
T@"NSMutableDictionary",&,N,V_l_refreshingWaiters
initWithFormat:
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
isAuthenticated
T@"NSMutableSet",&,N,V_heldIndependentTasks
isDraft
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
isGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
isProxy
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
loadKeychainInformationsForURL:
T@"NSSet",R,N
lowercaseString
T@"NSString",&,N,V_agentClassName
markedAsDefault
T@"NSString",&,N,V_daemonAccountClassName
message
T@"NSString",&,N,V_filename
numberWithBool:
T@"NSString",&,N,V_sourceContainerId
parentMailboxID
T@"NSString",&,N,V_unitTestHackRunLoopMode
protectionSpace
T@"NSString",C,N,V_attachmentName
release
T@"NSString",C,N,V_destID
resumeMonitoringFoldersWithIDs:
T@"NSString",C,N,V_folderName
sentItemsFolder
T@"NSString",C,N,V_groupIdentifier
setAccountType:
T@"NSString",C,N,V_message
setDisplayName:
T@"NSString",C,N,V_parentFolderID
setOrigRequest:
T@"NSString",C,N,V_serverID
setTaskManager:
T@"NSString",C,N,V_sourceID
shareResponseFinishedWithError:
T@"NSString",R,C
stringByAppendingPathComponent:
T@"NSString",R,N
stringFromDate:
T@"NSString",R,N,V_transactionId
syncTag
T@"NSTimer",&,N,V_userInitiatedSyncTimer
updateExistingAccountProperties
T@"NSURL",C,N
T@,&,N,V_context
.cxx_destruct
CDVObjectForKeyCaseInsensitive:
DACompactDescription
T@"NSArray",C,N
DAManagedDefaultForKey:
T@"NSCountedSet",&,N,V_contexts
DAObjectForKeyCaseInsensitive:
T@,&,N,V_forwardedAttendeeUUIDs
OAuth2Token
TQ,N,V_offFlags
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
_agentClassName
T@"<DATask>",&,N,V_activeExclusiveTask
_destID
T@"<DATask>",&,N,V_activeQueuedTask
_hasTasksIndicatingARunningSync
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
_longID
T@"ACAccount",R,N,V_backingAccountInfo
_parentFolderID
T@"CNContactStore",R,N,V_contactStore
_scheduleSelector:withArgument:
T@"DAAccount",W,N,V_account
_sourceServerId
T@"DAStatusReport",&,N,V_statusReport
_storageSession
T@"DATrustHandler",&,N,V_trustHandler
account
T@"NSArray",R,N,V_appIdsForPasswordPrompt
addClientToken:
T@"NSData",&,N
arrayWithArray:
T@"NSDate",&,N,V_endTime
bundleForClass:
T@"NSDate",&,N,V_startTime
cancelTask:withUnderlyingError:
T@"NSHashTable",&,N,V_accounts
closeDBAndSave:
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
containsObject:
T@"NSMutableArray",&,N,V_eventsWaiters
countForObject:
T@"NSMutableArray",&,N,V_pendingQueries
da_URLWithScheme:host:port:uri:
T@"NSMutableArray",&,N,V_queuedModalTasks
dealloc
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
endTime
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
flagged
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
groupIdentifier
T@"NSMutableDictionary",&,N,V_l_failedWaiters
identityPersist
T@"NSMutableDictionary",&,N,V_l_restrictedWaiters
initWithStatus:sourceID:destID:
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
isCalDAVAccount
T@"NSMutableSet",&,N,V_independentTasks
isGoogleAccount
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
isLocal
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
l_failedWaiters
T@"NSRunLoop",R,N
localizedInvalidPasswordMessage
T@"NSString",&,N,V_accountClassName
markForDeletion
T@"NSString",&,N,V_clientAccountClassName
maxSize
T@"NSString",&,N,V_destinationContainerId
monitorAccount:
T@"NSString",&,N,V_mergedFreeBusy
onFlags
T@"NSString",&,N,V_sourceServerId
preview
T@"NSString",C,N
protocolVersion
T@"NSString",C,N,V_changeTrackingID
replyTo
T@"NSString",C,N,V_folderID
saveFetchingAutomaticallyState:
T@"NSString",C,N,V_fromFolder
T@"NSString",C,N,V_longID
setDataclasses:
T@"NSString",C,N,V_messageID
setHaveWarnedAboutCert:forHost:
T@"NSString",C,N,V_powerAssertionGroupID
setRequestType:
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
setWithObjects:
T@"NSString",C,N,V_toFolder
startup
T@"NSString",R,C,N
stringByAppendingPathExtension:
T@"NSString",R,N,V_label
subject
T@"NSTimer",&,N,V_managerIdleTimer
unregisterBlock
T@"NSTimer",&,N,V_xpcTransactionTimer
uppercaseString
T@,&,N,S_setChangedItem:,V_changedItem
userAgentHeader
T@,&,N,V_forwardedAttendees
T@,&,N,V_instanceId
T@,&,N,V_serverId
T@?,C,N,V_completionHandler
T@?,C,N,V_handler
T@?,C,N,V_unregisterBlock
TB,N
TB,N,V_hasRemoteChanges
TB,N,V_isDefault
TB,N,V_isValidating
TB,N,V_markedAsDefault
TB,N,V_markedForDeletion
TB,N,V_retrieveAvailablilty
TB,N,V_retrieveCertificates
TB,N,V_send
TB,N,V_shouldUseOpportunisticSockets
TB,N,V_wasUserInitiated
TB,R
TB,R,N
TB,R,N,V_shouldFailAllTasks
TQ,N,V_itemChangeType
TQ,N,V_onFlags
TQ,R
T^v,N,V_container
T^v,R,N,V_account
T^v,R,N,V_addressBook
T^v,R,N,V_source
Ti,N,SsetDAAccountVersion:
Ti,N,V_bodyFormat
Ti,N,V_calAlarmChangeId
Ti,N,V_calAttachmentChangeId
Ti,N,V_calAttendeeChangeId
Ti,N,V_calEventChangeId
Ti,N,V_calRecurrenceChangeId
Ti,N,V_highestSequenceNumber
Ti,N,V_maxSize
Ti,N,V_requestType
Ti,N,V_state
Ti,N,V_status
Ti,N,V_transactionCount
Ti,R,N
Ti,R,N,V_waiterNum
Tq,N
Tq,N,V_availabilityStatus
Tq,N,V_certificatesStatus
Tq,N,V_dataclass
Tq,N,V_dataclasses
Tq,N,V_status
Tq,R,N
T{os_unfair_lock_s=I},R,N,V_lock
URLByRemovingLastPathComponent
URLWithString:
URLWithString:relativeToURL:
URLWithUsername:
URLWithUsername:withPassword:
URLWithoutUsername
UTF8String
_CFURLRequest
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
_DACopyMutableQueryForAccountWithPersistentUUID:
_abortWaiterForWrappers:
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
_account
_accountClassName
_accountPasswordChanged
_accounts
_accountsQueue
_actionForTrust:host:service:
_activeExclusiveTask
_activeModalTask
_activeQueuedTask
_addAccountInfo:forFrameworkNamed:
_addressBook
_appIdsForPasswordPrompt
_availabilityStatus
_backingAccountInfo
_bodyFormat
_buildVersion
_calAlarmChangeId
_calAttachmentChangeId
_calAttendeeChangeId
_calEventChangeId
_calRecurrenceChangeId
_callbackQueue
_canWakenWaiter:
_cancelTasksWithReason:
_certificatesStatus
_changeId
_changeTrackingID
_changedItem
_claimedOwnershipOfEvents
_clearUserInitiatedSyncTimer
_clientAccountClassName
_clientToken
_completionHandler
_consumers
_contactStore
_container
_context
_contextToGroupIdentifier
_contextToPowerAssertionRef
_contexts
_continueCount
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
_daActivity
_daKeychainAccessibilityForSecAccessibility:
_daemonAccountClassName
_daemonDiedNotification:
_dataclass
_dataclassPropertyURLsByDataclass
_dataclasses
_delegate
_dequeueQuery
_destinationContainerId
_diagnosticReportWithWaiterID:failureCount:
_endTime
_endXpcTransaction
_ensureCustomLogFile
_eventsLockHolder
_eventsWaiters
_filename
_findPrivateFrameworks
_folderHierarchyChanged
_folderID
_folderName
_folderUpdatedNotification:
_foldersThatExternalClientsCareAboutChanged
_forwardedAttendeeUUIDs
_forwardedAttendees
_fromFolder
_groupIdentifier
_groupIdentifierToContexts
_handler
_hasInitted
_hasRemoteChanges
_hasTasksForcingNetworkConnection
_haveWarnedAboutCertDict
_heldAsideContexts
_heldAsideGroupIdentifiers
_heldIndependentTasks
_highestSequenceNumber
_incrementRefreshCountForWaiterID:operationName:
_independentTasks
_init
_initWithCFURLRequest:
_instanceId
_isDefault
_isFetchingAutomatically
_isIdentityManagedByProfile
_isValidating
_l_decrementRefreshCountForWaiter:forOperationWithName:
_l_decrementRefreshCountForWaiterID:operationName:
_l_failedWaiters
_l_giveAccountWithIDAnotherChance:
_l_incrementRefreshCountForWaiterID:operationName:
_l_refreshingWaiters
_l_reloadBabysitterWaitersWithRefreshingWaitersPrefs:failedWaitersPrefs:restrictedWaitersPrefs:
_l_restrictedWaiters
_label
_lastQueryStartedTime
_leafAccountTypes
_loadFrameworkAtSubpath:
_lock
_logSyncEnd
_mQueuedTasks
_mResolvedEmailToX509Certs
_makeStateTransition
_managerIdleTimer
_markedAsDefault
_markedForDeletion
_maxSize
_message
_messageID
_modalHeldActiveQueuedTask
_modalHeldIndependentTasks
_mutableContainer
_newASPolicyKeyNotification:
_notifyWaitersForDataclasses:
_offFlags
_onFlags
_origRequest
_pendingQueryQueue
_performTask:
_populateVersionDescriptions
_populatedStringDictionaryWithWaitersDictionary:
_powerAssertionGroupID
_queuedExclusiveTasks
_queuedModalTasks
_reactivateHeldTasks
_reallyCancelAllSearchQueries
_reallyCancelPendingSearchQuery:
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_registerWaiter:forDataclassLocks:preempt:completionHandler:
_releaseAssertionForContext:
_releasePowerAssertionForTask:
_reloadBabysitterProperties
_requestCancelTasksWithReason:
_requestType
_retainAssertionForContext:
_retainPowerAssertionForTask:
_retrieveAvailablilty
_retrieveCertificates
_schedulePerformTask:
_scheduleStartModal:
_secAccessibilityForDAKeychainAccessibility:
_send
_sendAllClearNotifications
_serverID
_serverId
_serverSuffixesToAlwaysFail
_setChangedItem:
_setPersistentUUID:
_setUnitTestHackRunLoopMode:
_shouldFailAllTasks
_shouldUseOpportunisticSockets
_sourceApplicationBundleIdentifier
_sourceContainerId
_sourceID
_startModal:
_startTime
_state
_statusReport
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
_taskManager
_toFolder
_transaction
_transactionCount
_transactionId
_transactionMonitorDelegate
_transactions
_trustHandler
_unitTestHackRunLoopMode
_unregisterBlock
_useFakeDescriptions
_useOpportunisticSocketsAgain
_userInitiatedSyncTimer
_version
_waiterIDsExpectingEventsLock
_waiterNum
_wasUserInitiated
_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
_xpcActivity
_xpcTransactionTimer
aa_isSuspended
absoluteString
absoluteURL
acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToAccountFrameworkSubpath
acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
account:isValid:validationError:
accountBoolPropertyForKey:
accountClassForACAccount:
accountClassName
accountContainsEmailAddress:
accountDescription
accountDidChangeFromOldAccountInfo:
accountForContainerWithIdentifier:
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountID
accountIdentifier
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
accountIntPropertyForKey:
accountPersistentUUID
accountPropertyForKey:
accountShouldContinue:
accountType
accountTypeIdentifier
accountTypeWithAccountTypeIdentifier:
accountTypeWithIdentifier:completion:
accountWithExternalIdentifier:createIfNecessary:
accountWithIDShouldContinue:
accountWithIdentifier:
accountWithIdentifier:completion:
accounts
accountsMatchingPredicate:error:
accountsQueue
accountsWithAccountType:
accountsWithAccountType:completion:
accountsWithAccountTypeIdentifiers:error:
actionForTrust:forHost:andService:
activeExclusiveTask
activeQueuedTask
addAccount:
addCert:forEmailAddress:
addObject:
addObjectsFromArray:
addTimer:forMode:
addToCoreDAVLoggingDelegates
addUsernameToURL:
additionalHeaderValues
addressBook
agentClassForACAccount:
agentClassName
allAccounts
allObjects
allTasks
allValues
allowTrust:forHost:service:
allowsKeyedCoding
appIdsForPasswordPrompt
appendBytes:length:
appendData:
appendFormat:
appendString:
arePropertiesReadonly
array
arrayWithObjects:count:
asContainer
asSource
attachmentName
attachments
autodiscoverAccountConfigurationWithConsumer:
autorelease
availabilityStatus
babysitterEnabled
backingAccountInfo
beginDownloadingAttachmentWithUUID:consumer:
body
bodyFormat
bodySize
bodyTruncated
bodyType
boolForKey:
boolValue
buildVersion
bytes
cTag
calAlarmChangeId
calAttachmentChangeId
calAttendeeChangeId
calEventChangeId
calRecurrenceChangeId
calendarAvailabilityRequestFinishedWithError:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
callbackQueue
canAccessCredentialsWithAccessibility:
cancelAllSearchQueries
cancelAllTasks
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownloadingInstance:error:
cancelPreviousPerformRequestsWithTarget:
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelSearchQuery:
cancelShareResponseInstance:error:
cancelTask:
cancelTaskWithID:
cancelTaskWithReason:underlyingError:
cancelTasksDueToOnPowerMode
caseInsensitiveCompare:
certificatesStatus
changeId
changeTrackingID
changedItem
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
checkValidityOnAccountStore:withConsumer:
checkValidityOnAccountStore:withConsumer:inQueue:
claimedOwnershipOfDataclasses:
claimedOwnershipOfEvents
class
cleanupAccountFiles
clientAccountClassName
clientID
clientToken
clientTokenRequestedByServer
code
completionHandler
conformsToProtocol:
consumer
consumerForTask:
contactStore
container
contentsOfDirectoryAtPath:error:
contextToGroupIdentifier
contextToPowerAssertionRef
contexts
continueWithoutCredentialForAuthenticationChallenge:
conversationId
conversationIndex
copy
copyLocalObjectFromId:
copyOfAllLocalObjectsInContainer
copyStorageSession
count
countByEnumeratingWithState:objects:count:
credential
credentialItemForKey:
credentialProtectionPolicy
credentialType
currentHandler
currentMode
currentRunLoop
customConnectionProperties
daAccountSubclassWithBackingAccountInfo:
daAccountVersion
da_URLWithDirtyString:
da_URLWithScheme:host:user:port:uri:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_accounts
da_accountsEnabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:outError:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
da_appendSlashIfNeeded
da_classicPortForScheme:
da_dataWithHexString:
da_dataWithHexString:stringIsUppercase:
da_hasPrefixCaseInsensitive:
da_hexString
da_isEqualToDAVURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_loadDAAccountsEnabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_loadDAAccountsWithCompletion:
da_lowercaseHexStringWithoutSpaces
da_new64ByteGUID
da_newGUID
da_pathWithoutTrailingRemovingSlash
da_performSelectorThatDoesntAffectRetainCount:withObject:
da_rawPath
da_removeSlashIfNeeded
da_stringByAddingPercentEscapesForUsername
da_stringByRemovingPercentEscapesForUsername
da_stringByURLEscapingPathComponent
da_trimWhiteSpace
da_uppercaseHexStringWithoutSpaces
da_urlByRemovingUsername
da_urlBySettingHost:
da_urlBySettingHost:keepUsername:
da_urlBySettingPath:
da_urlBySettingPath:keepUsername:
da_urlBySettingPort:
da_urlBySettingPort:keepUsername:
da_urlBySettingScheme:
da_urlBySettingScheme:keepUsername:
da_urlBySettingUsername:
da_urlForLogging
daemonAccountClassName
daemonAppropriateAccountClassForACAccount:
dataUsingEncoding:
dataWithJSONObject:options:error:
dataclass
dataclassProperties
dataclassPropertyURLsByDataclass
dataclasses
date
dateWithCalendarFormat:timeZone:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeIntForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrementTransactionCountForTransaction:
decrementXpcActivityContinueCount
defaultContainerIdentifierForDADataclass:
defaultEventsFolder
defaultManager
defaultTrustManager
delegate
deleteContainer:
deletedItemsFolder
description
destID
destinationContainerId
deviceType
dictionary
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
didFinishAllXPCTransactions
discoverInitialPropertiesWithConsumer:
displayAccount
displayName
displayTo
distantPast
domain
domainOnly
doubleValue
downloadFinishedError:
draftsFolder
drainContainer
drainSuperfluousChanges
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dropPowerAssertionsForGroupIdentifier:
emailAddress
emailAddresses
enabledDataclasses
enabledDataclassesBitmask
enabledForAnyDADataclasses:
enabledForDADataclass:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedHeaders
encryptionIdentityPersistentReference
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
eventsFolders
eventsLockHolder
eventsWaiters
exceptionWithName:reason:userInfo:
exceptionsDict
exceptionsForDigest:
externalIdentifier
externalIdentifierString
externalModificationTag
externalSyncData
fileSystemRepresentation
filename
firstObject
flaggedIsSet
folderID
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
folderIDsThatExternalClientsCareAboutWithTag:
folderName
foldersTag
forwardedAttendeeUUIDs
forwardedAttendees
from
fromFolder
generatesBulletins
getAppleIDSession
getCFRunLoop
getDAExceptionObjectWithLocalItem:originalEvent:account:
getDAObjectWithLocalItem:serverId:account:
getFetchingAutomaticallyState
getIdFromLocalObject:
getPendingQueryQueue
groupIdentifierToContexts
guessPasswordForURL:
handleCertificateError:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleTrust:forHost:forAccount:withCompletionBlock:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
handleValidationError:completion:
hasPrefix:
hasRemoteChanges
hasSuffix:
hasXpcActivity
hash
haveWarnedAboutCert:forHost:
haveWarnedAboutCertDict
heldAsideContexts
heldAsideGroupIdentifiers
heldIndependentTasks
highestSequenceNumber
host
hostFromDataclassPropertiesForDataclass:
iOSLegacyIdentifier
identifier
importance
inboxFolder
incrementTransactionCountForTransaction:
incrementXpcActivityContinueCount
independentTasks
infoDictionary
ingestBackingAccountInfoProperties
init
initMoveRequestWithMessage:fromFolder:toFolder:
initRequestForBodyFormat:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestWithMessageID:
initRequestWithSetFlags:unsetFlags:message:
initWithABAccout:
initWithABSource:
initWithAccount:
initWithAddressBook:
initWithAttachmentName:andMessageServerID:
initWithBackingAccountInfo:
initWithBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCNContainer:
initWithCapacity:
initWithCoder:
initWithContactStore:
initWithContainer:changeTrackingID:
initWithDAAccount:
initWithData:encoding:
initWithDelegate:
initWithDictionary:copyItems:
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
initWithExternalIdentifier:
initWithFilename:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
initWithItemChangeType:changedItem:serverId:status:
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
initWithLabel:
initWithObjects:
initWithPassword:
initWithPath:
initWithRequestType:message:send:
initWithTrust:
insertObject:atIndex:
insertString:atIndex:
instanceID
instanceId
intValue
integerValue
invalidate
isAccount
isActiveSyncAccount
isAppleInternalInstall
isCalDAVChildAccount
isCardDAVAccount
isChildAccount
isContact
isContainer
isContentReadonly
isDefault
isDisabled
isEnabledForDataclass:
isEnabledToSyncDataclass:
isEqual:
isEqualToAccount:
isEqualToString:
isHotmailAccount
isInHoldingPattern
isKindOfClass:
isLDAPAccount
isMemberOfClass:
isSearchContainer
isShutdown
isSubscribedCalendarAccount
isValidating
itemChangeType
keychainAccessibilityType
l_refreshingWaiters
l_restrictedWaiters
label
lastObject
lastQueryStartedTime
lastVerb
legacyIdentifier
length
loadAndReturnError:
loadDaemonBundleForACAccountType:
loadFrameworkForACAccountType:
localizedIdenticalAccountFailureMessage
lock
logICSMessage:atLevel:
logSnippet:
longID
mQueuedTasks
mResolvedEmailToX509Certs
mailNumberOfPastDaysToSync
mailboxID
mailboxes
mainRunLoop
managerIdleTimer
mapTableWithStrongToStrongObjects
markAsDefault
markedForDeletion
meContactidentifier
meIdentifier
meetingRequestIsActionable
meetingRequestMetaData
meetingRequestUUID
mergedFreeBusy
messageClass
messageID
migratePasswordForAccount:
modalHeldActiveQueuedTask
modalHeldIndependentTasks
monitorFolderWithID:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
monitorFoldersWithIDs:
monitoredAccounts
mutableContainer
mutableCopy
name
newDataHandlerForDataclass:container:changeTrackingID:
nextObject
null
numberWithDouble:
numberWithInt:
numberWithInteger:
oauth2Token
oauthInfoProvider
oauthToken
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
offFlags
onBehalfOfBundleIdentifier
oneshotListOfAccountIDs
openAuthenticationURL:forAccount:shouldConfirm:completion:
openDB
origRequest
parentAccount
parentAccountIdentifier
parentFolderID
password
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
passwordWithExpected:
path
pendingQueries
pendingQueryQueue
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performFolderChange:isUserRequested:
performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMoveRequests:consumer:
performResolveRecipientsRequest:consumer:
performSearchQuery:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
performTask
persistentUUID
port
portFromDataclassPropertiesForDataclass:
powerAssertionGroupID
powerAssertionRetainCount:
predicateForAccountForContainerWithIdentifier:
predicateForAccountWithExternalIdentifier:
principalPath
principalURL
privateFrameworksPath
processInfo
processName
promptForAllCerts
providerWithAddressBook:
providerWithContactStore:
query
queuedExclusiveTasks
queuedModalTasks
queuedTasks
rangeOfString:options:
rawTrustResultForSSLTrust:hostname:service:
reacquireClientRestrictions:
read
readIsSet
reattainPowerAssertionsForGroupIdentifier:
reattemptInvitationLinkageForMetaData:inFolderWithId:
registerAccount:forOperationWithName:
registerForInterrogationWithBlock:
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
registerWithiCalendar
relativePath
releasePowerAssertion:
relinquishLocksForWaiter:dataclasses:moreComing:
reload
remoteID
removeAccount:
removeAccountPropertyForKey:
removeAllObjects
removeClientCertificateData
removeConsumerForTask:
removeDBSyncData
removeFromCoreDAVLoggingDelegates
removeItemAtPath:error:
removeKeychainInformationsForURL:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removePasswordForAccount:withPersistentUUID:
removeXpcActivity
renewCredentialsForAccount:force:reason:completion:
replaceOccurrencesOfString:withString:options:range:
reportShareRequestAsJunkForCalendar:consumer:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
requestCancelTaskWithReason:
requestType
resetAccountID
resetCertWarnings
resetStatusReport
resolvedEmailToX509Certs
respondToShareRequestForCalendar:withResponse:consumer:
respondsToSelector:
restrictions
retain
retainCount
retainPowerAssertion:withGroupIdentifier:
retrieveAvailablilty
retrieveCertificates
rfc822Data
saveAccountProperties
saveAccountPropertiesWithCompletionHandler:
saveContainer
saveKeychainInformationsForURL:andPassword:withAccessibility:
saveModifiedPropertiesOnBackingAccount
saveVerifiedAccount:withCompletionHandler:
saveXpcActivity:
scheduleIdentifier
scheme
searchQueriesRunning
searchQuery:finishedWithError:
self
send
sendEmailsForCalEvents:consumer:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
sender
server
serverComplianceClasses
serverID
serverId
serverRoot
serverTrust
setAcAccountTypeToAccountDaemonBundleSubpath:
setAcAccountTypeToAccountFrameworkSubpath:
setAcAccountTypeToClassNames:
setAcParentAccountTypeToChildAccountTypes:
setAccount:
setAccountBoolProperty:forKey:
setAccountClassName:
setAccountDescription:
setAccountIdentifier:
setAccountIntProperty:forKey:
setAccountProperty:forKey:
setAccounts:
setAccountsQueue:
setActiveExclusiveTask:
setActiveModalTask:
setActiveQueuedTask:
setAddressList:forKey:
setAddressListForBcc:
setAddressListForCc:
setAddressListForSender:
setAddressListForTo:
setAgentClassName:
setArePropertiesReadonly:
setAttachmentName:
setAuthenticated:
setAvailabilityStatus:
setBodyFormat:
setBuildVersion:
setCTag:
setCalAlarmChangeId:
setCalAttachmentChangeId:
setCalAttendeeChangeId:
setCalEventChangeId:
setCalRecurrenceChangeId:
setCallbackQueue:
setCertificatesStatus:
setChangeId:
setChangeTrackingID:
setClaimedOwnershipOfEvents:
setClientAccountClassName:
setCompletionHandler:
setConnectionDisplayName:
setConstraintsPath:
setConsumer:forTask:
setContainer:
setContentReadonly:
setContext:
setContextToGroupIdentifier:
setContextToPowerAssertionRef:
setContexts:
setCredential:
setCustomSignature:
setDAAccountVersion:
setDaemonAccountClassName:
setDataclass:
setDataclassPropertyURLsByDataclass:
setDateFormat:
setDelegate:
setDestID:
setDestinationContainerId:
setEmailAddress:
setEmailAddresses:
setEnabled:forDADataclass:
setEnabled:forDataclass:
setEncryptionIdentityPersistentReference:
setEndTime:
setEventsLockHolder:
setEventsWaiters:
setExceptions:forDigest:
setExternalIdentifier:
setExternalModificationTag:
setExternalSyncData:
setExternalSyncTag:
setFilename:
setFolderID:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
setFolderName:
setForwardedAttendeeUUIDs:
setForwardedAttendees:
setFromFolder:
setGeneratesBulletins:
setGroupIdentifier:
setGroupIdentifierToContexts:
setHandler:
setHasRemoteChanges:
setHaveWarnedAboutCertDict:
setHeader:forKey:
setHeldAsideContexts:
setHeldAsideGroupIdentifiers:
setHeldIndependentTasks:
setHighestSequenceNumber:
setHost:
setIdentityCertificatePersistentID:managedByProfile:
setIndependentTasks:
setInstanceId:
setIsDefault:
setIsValidating:
setItemChangeType:
setL_failedWaiters:
setL_refreshingWaiters:
setL_restrictedWaiters:
setLastQueryStartedTime:
setLongID:
setMQueuedTasks:
setMResolvedEmailToX509Certs:
setMailNumberOfPastDaysToSync:
setManagerIdleTimer:
setMarkedAsDefault:
setMarkedForDeletion:
setMaxSize:
setMeContactIdentifier:
setMeIdentifier:
setMergedFreeBusy:
setMessage:
setMessageID:
setModalHeldActiveQueuedTask:
setModalHeldIndependentTasks:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setOffFlags:
setOnFlags:
setParentFolderID:
setPassword:
setPassword:forAccount:withPersistentUUID:withAccessibility:
setPendingQueries:
setPendingQueryQueue:
setPersistentUUID:
setPort:
setPowerAssertionGroupID:
setPrincipalPath:
setPrincipalURL:
setProtocolVersion:
setQueuedExclusiveTasks:
setQueuedModalTasks:
setRestrictions:
setRetrieveAvailablilty:
setRetrieveCertificates:
setSend:
setServerID:
setServerId:
setService:
setShouldDoInitialAutodiscovery:
setShouldUseOpportunisticSockets:
setSigningIdentityPersistentReference:
setSourceApplicationBundleIdentifier:
setSourceContainerId:
setSourceID:
setSourceServerId:
setStartTime:
setState:
setStatus:
setStatusReport:
setSyncData:
setSyncTag:
setSyncingAllowed:
setToFolder:
setTransactionCount:
setTransactionMonitorDelegate:
setTransactions:
setTrust:
setTrustHandler:
setType:
setUnitTestHackRunLoopMode:
setUnregisterBlock:
setUseSSL:
setUser:
setUserInfo:forClientUUID:
setUserInitiatedSyncTimer:
setUsername:
setValue:forKey:
setWaiter:
setWaiterIDsExpectingEventsLock:
setWasUserInitiated:
setWithObject:
setXpcTransactionTimer:
sharedBabysitter
sharedConnection
sharedGateKeeper
sharedInstance
sharedKeychain
sharedLogger
sharedManager
sharedMonitor
sharedPowerAssertionManager
sharedRunLoop
sharedTransactionMonitor
shouldAutodiscoverAccountProperties
shouldCancelTaskDueToOnPowerFetchMode
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldForceNetworking
shouldHoldPowerAssertion
shouldRemoveDBSyncDataOnAccountChange
shouldUseOpportunisticSockets
showPromptWithOptions:responseBlock:
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
shutdown
signingIdentityPersistentReference
slurpAndRemoveLookasideFile:prefixString:suffixString:
smimeType
source
sourceApplicationBundleIdentifier
sourceContainerId
sourceID
sourceServerId
spinnerIdentifiers
standardUserDefaults
startModal
startTime
state
stateString
status
statusReport
statusReportWithCompletionBlock:
stopMonitoringAllFolders
stopMonitoringFolderWithID:
stopMonitoringFolders
stopMonitoringFoldersForUpdates:
stopMonitoringFoldersWithIDs:
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByTrimmingCharactersInSet:
stringByURLQuoting
stringForItemChangeType:
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
submitExclusiveTask:
submitExclusiveTask:toFrontOfQueue:
submitIndependentTask:
submitQueuedTask:
substringFromIndex:
substringToIndex:
superclass
supportsAuthentication
supportsConversations
supportsDraftFolderSync
supportsEmailFlagging
supportsMailboxSearch
supportsSecureCoding
supportsSmartForwardReply
supportsUniqueServerId
suspendMonitoringFoldersWithIDs:
syncData
syncStoreIdentifier
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
systemTimeZone
takeValuesFromModifiedAccount:
taskDidFinish:
taskEndModal:
taskIsModal:
taskManager
taskManagerDidAddTask:
taskManagerWillRemoveTask:
taskRequestModal:
tearDown
threadTopic
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
toFolder
tokenByRegisteringAccount:forOperationWithName:
transactionCount
transactionId
transactionMonitorDelegate
transactions
trustHandler
type
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
unitTestHackRunLoopMode
unmonitorAccount:
unregisterAccount:forOperationWithName:
unregisterWaiterForDataclassLocks:
updateContainer:
updateSaveRequest:
upgradeAccount
urlFromDataclassPropertiesForDataclass:
useCredential:forAuthenticationChallenge:
useSSL
useSSLFromDataclassPropertiesForDataclass:
user
userAgent
userInfo
userInitiatedSyncTimer
username
usernameWithoutDomain
vendDaemons:
verbIsSet
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
waiter
waiterID
waiterIDsExpectingEventsLock
waiterNum
wasUserInitiated
weakObjectsHashTable
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
whitespaceAndNewlineCharacterSet
wipeServerIds
writeToFile:atomically:
xpcTransactionTimer
zone
@24@0:8@16
v16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@16@0:8
v24@0:8@16
B24@0:8@16
v28@0:8B16@20
B24@0:8q16
v28@0:8B16q20
q16@0:8
v32@0:8@16@24
i24@0:8@16
v28@0:8i16@20
@20@0:8B16
q24@0:8@16
v20@0:8B16
Vv24@0:8@16
v24@0:8q16
v40@0:8@16@24@32
@24@0:8q16
v24@0:8@?16
v28@0:8@16B24
^{__CFData=}24@0:8@16
v32@0:8^{__CFData=}16@24
^{__CFURLStorageSession=}16@0:8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
B32@0:8@16@?24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v68@0:8@16@24@32@40B48B52B56@60
B32@0:8@16@24
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@40@0:8@16q24@32
@"<DATransactionMonitorDelegate>"
v32@0:8:16@24
@40@0:8@16@24^@32
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@48@0:8Q16@24@32@40
@24@0:8Q16
Q16@0:8
v24@0:8Q16
@56@0:8Q16@24@32@40@48
@48@0:8Q16@24@32q40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
^v16@0:8
v24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CNContainer"16@0:8
@24@0:8^v16
@"NSHashTable"
B20@0:8i16
^v20@0:8i16
i24@0:8^v16
^{__CFDictionary=}24@0:8@16
^{__CFDictionary=}28@0:8@16i24
@36@0:8@16i24B28B32
B44@0:8@16@24@32i40
B36@0:8@16@24i32
@40@0:8Q16Q24@32
@24@0:8i16i20
@32@0:8i16@20i28
@48@0:8i16@20@28@36i44
@40@0:8@16@24@32
@32@0:8i16@20B28
@"DAMailMessage"
@36@0:8i16@20@28
@"DAMessageMoveRequest"
@48@0:8@16B24B28@32@40
@"CNAccount"
v44@0:8@16q24B32@?36
v32@0:8q16@?24
v40@0:8@16q24@?32
@32@0:8@16^@24
@32@0:8@16q24
v48@0:8:16@24d32@40
@28@0:8@16B24
@52@0:8@16@24@32i40@44
@44@0:8@16@24i32@36
@24@0:8^{__CFURLStorageSession=}16
@"DATransaction"
@"DAActivity"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
v24@0:8#16
Q24@0:8@16
@"NSCountedSet"
Vv20@0:8i16
Vv20@0:8B16
Vv28@0:8@16B24
@24@0:8^@16
@32@0:8q16^@24
B40@0:8@16@24@32
i92@0:8@16@24i32@36@44@52@60B68B72@76@84
i52@0:8@16@24@32B40@44
i56@0:8@16@24@32B40B44@48
i32@0:8@16@24
Vv24@0:8@"DASearchQuery"16
@"NSArray"16@0:8
Vv24@0:8@"NSData"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSArray"16
Vv28@0:8@"NSArray"16B24
@"NSSet"24@0:8^@16
@"NSSet"32@0:8q16^@24
B40@0:8@"NSSet"16@"NSSet"24@"NSString"32
i92@0:8@"NSData"16@"NSString"24i32@"NSString"36@"NSString"44@"NSString"52@"NSString"60B68B72@"<DAMessageSendConsumer>"76@84
i52@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i52@0:8@"NSArray"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i56@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i56@0:8@"NSArray"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i32@0:8@"NSArray"16@"<DAMessageMoveRequestConsumer>"24
i32@0:8@"DAMessageFetchAttachmentRequest"16@"<DAMessageFetchAttachmentConsumer>"24
i32@0:8@"NSArray"16@"<DAMailboxFetchSearchResultConsumer>"24
i32@0:8@"DAResolveRecipientsRequest"16@"<DAResolveRecipientsConsumer>"24
v28@0:8@"DAFolderChange"16B24
@"DAFolder"16@0:8
B32@0:8@"NSData"16@"NSString"24
@"NSString"40@0:8@"NSData"16@"NSString"24^@32
Vv24@0:8@"NSNotification"16
@40@0:8q16^v24@32
@32@0:8^v16@24
v24@0:8^v16
B20@0:8B16
@40@0:8^v16@24@32
@?16@0:8
@"<DADataclassLockWatcher>"
v36@0:8@16q24B32
@"CNContactStore"
v56@0:8^{__CFUserNotification=}16@24@32@40@?48
v32@0:8@16q24
v32@0:8@"NSString"16q24
i40@0:8^{__SecTrust=}16@24@32
v48@0:8^{__SecTrust=}16@24@32@?40
B40@0:8@16@24@?32
@"<DATrustHandlerDelegate>"
@"CNMutableContainer"
v28@0:8@16i24
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8@?16
