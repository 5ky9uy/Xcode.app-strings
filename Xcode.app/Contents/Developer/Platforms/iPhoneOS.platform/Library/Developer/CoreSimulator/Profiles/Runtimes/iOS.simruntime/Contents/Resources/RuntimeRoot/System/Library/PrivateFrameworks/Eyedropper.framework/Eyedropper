@(#)PROGRAM:Eyedropper  PROJECT:eyedropper-1
?ffffff
>@333333
?333333
@333333
?ffffff
{EDColor=ddd}
com.apple.uikit.eyedropperd.service
v8@?0
com.apple.springboard.lockstate
v12@?0i8
v16@?0@"<EDServerClient>"8
Eyedropper hovering over color
RGB value is R: %.2f., G: %.2f., B: %.2f.
{CGRect={CGPoint=dd}{CGSize=dd}}
r^v32@?0{CGSize=dd}8@"NSDictionary"24
CenterView
q24@?0@"NSValue"8@"NSValue"16
EDColor
EDServiceServer
NSObject
EDServerClient
EDAppDelegate
EDLensViewDelegate
FBSSceneDelegate
NSXPCListenerDelegate
EDWindowTrackingDelegate
UIApplicationDelegate
EDGridView
UIDragInteractionDelegate
EDLensView
UIPointerInteractionDelegate
EDWindow
EDColorAnalyzer
EDWindowRootViewController
value:withObjCType:
getValue:
colorValue
valueWithColor:
_mainScene
setDelegate:
mainScreen
bounds
initWithFrame:
lensView
setTrackingDelegate:
makeKeyAndVisible
initWithMachServiceName:
array
resume
_performBlockAfterCATransactionCommits:
lockStateChanged
cancelShowingEyeDropper
setHidden:
root
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
beginShowingEyeDropper
floatEyeDropper
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
eyedropperDidSelectColor:
eyedropperDidFloat
eyedropperDidDismiss
setRemoteObjectInterface:
addObject:
invalidate
setInterruptionHandler:
removeObject:
setInvalidationHandler:
countByEnumeratingWithState:objects:count:
remoteObjectProxy
_scheduleSceneEventResponseForScene:withResponseBlock:
persistentlyHidePointerAssertionForReason:
setFloatingMode:
_contextId
initWithContextID:displayUUID:identifier:policy:
sharedInstance
requestGlobalMouseEventsForDisplay:targetContextID:
hideSystemPointer:
dismiss
_enumerateRemoteClientsUsingBlock:
timeIntervalSinceReferenceDate
updateCenterOffsetAtTouchDown:
presentAtLocation:
window
layer
setHitTestsAsOpaque:
lastPosition
anyObject
locationInView:
isMovingWithPan
updateLensViewWithEvent:
lensView:didSelectColor:
lensViewDidDismiss:
scene:didUpdateWithDiff:transitionContext:completion:
scene:didReceiveActions:
listener:shouldAcceptNewConnection:
trackedTouchesBegan:
trackedTouchesMoved:
trackedTouchesCancelled:
trackedTouchesEnded:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
setWindow:
T@"UIWindow",&,N
.cxx_destruct
_serviceListener
_window
_liveConnections
_notifyTokenLocked
_touchStream
_mousePointerServiceAssertion
_isFloating
_lastPresentationLocation
_lastDismissedTime
_pointerClientController
_hidePointerAssertion
init
whiteColor
setNeedsDisplay
CGColor
initWithWithCellCount:
setStrokeColor:
drawRect:
strokeColor
_cellCount
_strokeColor
T@"UIColor",&,N,V_strokeColor
dragItemsForInteraction:
view
backgroundColor
colorWithCGColor:
stringRepresentation
initWithObject:
initWithItemProvider:
arrayWithObjects:count:
dragInteraction:itemsForBeginningSession:
dragInteraction:itemsForAddingToSession:withTouchAtPoint:
dragInteraction:previewForLiftingItem:session:
dragInteraction:willAnimateLiftWithAnimator:session:
dragInteraction:sessionWillBegin:
dragInteraction:sessionAllowsMoveOperation:
dragInteraction:sessionIsRestrictedToDraggingApplication:
dragInteraction:prefersFullSizePreviewsForSession:
dragInteraction:sessionDidMove:
dragInteraction:session:willEndWithOperation:
dragInteraction:session:didEndWithOperation:
dragInteraction:sessionDidTransferItems:
dragInteraction:sessionForAddingItems:withTouchAtPoint:
dragInteraction:session:willAddItems:forInteraction:
dragInteraction:previewForCancellingItem:withDefault:
dragInteraction:item:willAnimateCancelWithAnimator:
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
updateLensState:
blackColor
setShadowColor:
setShadowOpacity:
setShadowRadius:
setShadowOffset:
setDisableUpdateMask:
clearColor
setBackgroundColor:
setBorderColor:
setBorderWidth:
setUserInteractionEnabled:
addSubview:
setClipsToBounds:
setMagnificationFilter:
_setContinuousCornerRadius:
_displayLinkFired
displayLinkWithTarget:selector:
mainRunLoop
addToRunLoop:forMode:
setPaused:
tappedCenter:
initWithTarget:action:
addGestureRecognizer:
initWithDelegate:
addInteraction:
setFrame:
setCornerRadius:
borderWidth
center
setCenter:
colorWithWhite:alpha:
layoutSubviews
_layoutStaticElements
setAlpha:
stringWithFormat:
floatingMode
convertPoint:fromView:
size
updateLocation:
setNeedsLayout
layoutIfNeeded
scale
delegate
_animateUsingSpringWithTension:friction:interactive:animations:completion:
presentationLayer
frame
gamut
numberWithInteger:
numberWithDouble:
valueWithBytes:objCType:
dictionaryWithObjects:forKeys:count:
setContents:
colorAtCenterOfSurface:offset:
superview
regionWithRect:identifier:
hiddenPointerStyle
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
_lensViewLocalCenter
accessibilityLabel
accessibilityValue
accessibilityTraits
isAccessibilityElement
setInterfaceOrientation:
_isScreenScaleEven
_lensPosition
pointInside:withEvent:
interfaceOrientation
setLastPosition:
_hoverColorCenterView
_hoverColorRingView
_gridView
_screenshotSurfaceView
_ringBorderView
_lensState
_displayLink
_colorAnalyzer
_hoverColor
_hoverColorBrightness
_centerOffsetAtTouchDown
_pointerInteraction
_floatingMode
_interfaceOrientation
_delegate
_lastPosition
T@"<EDLensViewDelegate>",W,N,V_delegate
Tq,N,V_interfaceOrientation
TB,N,V_floatingMode
T{CGPoint=dd},N,V_lastPosition
TB,R,N
setWindowLevel:
_setWindowControlsStatusBarOrientation:
setRootViewController:
_setRotatableViewOrientation:duration:
isHidden
alpha
hitTest:withEvent:
trackingDelegate
_isSecure
_canBecomeKeyWindow
_preventsRootPresentationController
_shouldControlAutorotation
_shouldAutorotateToInterfaceOrientation:
handleStatusBarChangeFromHeight:toHeight:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
setRoot:
_root
_trackingDelegate
T@"EDWindowRootViewController",&,N,V_root
T@"<EDWindowTrackingDelegate>",W,N,V_trackingDelegate
removeAllObjects
colorsInSurface:offset:clipToCircle:clipedToRect:
kmeansForColors:clusters:
addObjectsFromArray:
removeSimilarColors:minDistance:
mutableCopy
count
objectAtIndexedSubscript:
arrayWithArray:
kmeansColorsForColors:clusters:
objectForKeyedSubscript:
getRandomColors:from:
kmeansShouldStopWithPreviousColors:newColors:iterations:
setObject:forKeyedSubscript:
allValues
firstObject
sortedArrayUsingComparator:
isEqualToArray:
copy
integerValue
removeObjectAtIndex:
allObjects
clearCache
colorsSuggestionsForSurface:maxSuggestions:clipToCircle:clipedToRect:
_cache
initWithNibName:bundle:
_setIgnoreAppSupportedOrientations:
viewDidLoad
getRotationContentSettings:forWindow:
supportedInterfaceOrientations
_canShowWhileLocked
setLensView:
_lensView
T@"EDLensView",&,N,V_lensView
{EDColor=ddd}16@0:8
@40@0:8{EDColor=ddd}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8@16
v24@0:8@"UIColor"16
v32@0:8@16@24
v32@0:8@"EDLensView"16@"UIColor"24
v24@0:8@"EDLensView"16
v48@0:8@16@24@32@?40
v48@0:8@"FBSScene"16@"FBSSceneSettingsDiff"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceSceneUpdateResponse">40
v32@0:8@"FBSScene"16@"NSSet"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSSet"16
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v24@0:8@?16
v20@0:8B16
@"NSXPCListener"
@"EDWindow"
@"NSMutableArray"
@"BKSTouchStream"
@"<BSInvalidatable>"
{CGPoint="x"d"y"d}
@"PSPointerClientController"
@24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIColor"
@48@0:8@16@24{CGPoint=dd}32
@24@0:8@16
v40@0:8@16@24Q32
v48@0:8@16@24@32@40
@"NSArray"32@0:8@"UIDragInteraction"16@"<UIDragSession>"24
@"UITargetedDragPreview"40@0:8@"UIDragInteraction"16@"UIDragItem"24@"<UIDragSession>"32
v40@0:8@"UIDragInteraction"16@"<UIDragAnimating>"24@"<UIDragSession>"32
v32@0:8@"UIDragInteraction"16@"<UIDragSession>"24
B32@0:8@"UIDragInteraction"16@"<UIDragSession>"24
v40@0:8@"UIDragInteraction"16@"<UIDragSession>"24Q32
@"NSArray"48@0:8@"UIDragInteraction"16@"<UIDragSession>"24{CGPoint=dd}32
@"<UIDragSession>"48@0:8@"UIDragInteraction"16@"NSArray"24{CGPoint=dd}32
v48@0:8@"UIDragInteraction"16@"<UIDragSession>"24@"NSArray"32@"UIDragInteraction"40
@"UITargetedDragPreview"40@0:8@"UIDragInteraction"16@"UIDragItem"24@"UITargetedDragPreview"32
v40@0:8@"UIDragInteraction"16@"UIDragItem"24@"<UIDragAnimating>"32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8q16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
q16@0:8
B40@0:8{CGPoint=dd}16@32
@"UIView"
@"EDGridView"
@"CADisplayLink"
@"EDColorAnalyzer"
{EDColor="r"d"g"d"b"d}
@"UIPointerInteraction"
@"<EDLensViewDelegate>"
B24@0:8q16
v32@0:8d16d24
@40@0:8{CGPoint=dd}16@32
@"EDWindowRootViewController"
@"<EDWindowTrackingDelegate>"
@68@0:8^{__IOSurface=}16q24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
@32@0:8@16d24
@32@0:8@16q24
B40@0:8@16@24q32
@76@0:8^{__IOSurface=}16{CGPoint=dd}24B40{CGRect={CGPoint=dd}{CGSize=dd}}44
@40@0:8^{__IOSurface=}16{CGPoint=dd}24
@32@0:8q16@24
@"NSMutableDictionary"
v32@0:8^{?=BBBBBdi}16@24
@"EDLensView"
@(#)PROGRAM:Eyedropper  PROJECT:eyedropper-1
?ffffff
?333333
@333333
@333333
?ffffff
{EDColor=ddd}
com.apple.uikit.eyedropperd.service
v8@?0
com.apple.springboard.lockstate
v12@?0i8
v16@?0@"<EDServerClient>"8
Eyedropper hovering over color
RGB value is R: %.2f., G: %.2f., B: %.2f.
{CGRect={CGPoint=dd}{CGSize=dd}}
r^v32@?0{CGSize=dd}8@"NSDictionary"24
CenterView
q24@?0@"NSValue"8@"NSValue"16
EDColor
EDServiceServer
NSObject
EDServerClient
EDAppDelegate
EDLensViewDelegate
FBSSceneDelegate
NSXPCListenerDelegate
EDWindowTrackingDelegate
UIApplicationDelegate
EDGridView
UIDragInteractionDelegate
EDLensView
UIPointerInteractionDelegate
EDWindow
EDColorAnalyzer
EDWindowRootViewController
bounds
setNeedsLayout
setHitTestsAsOpaque:
_setRotatableViewOrientation:duration:
setUserInteractionEnabled:
stringRepresentation
_setContinuousCornerRadius:
initWithMachServiceName:
hiddenPointerStyle
removeObjectAtIndex:
setCenter:
numberWithInteger:
addToRunLoop:forMode:
addGestureRecognizer:
view
sortedArrayUsingComparator:
scale
array
interfaceWithProtocol:
borderWidth
setShadowColor:
setDisableUpdateMask:
mainRunLoop
frame
clearColor
numberWithDouble:
layoutIfNeeded
integerValue
setHidden:
_performBlockAfterCATransactionCommits:
colorWithWhite:alpha:
setFrame:
setBorderWidth:
addSubview:
setRootViewController:
center
initWithItemProvider:
setNeedsDisplay
anyObject
addObjectsFromArray:
removeObject:
blackColor
mutableCopy
countByEnumeratingWithState:objects:count:
valueWithBytes:objCType:
CGColor
getValue:
size
isHidden
count
setBorderColor:
setMagnificationFilter:
removeAllObjects
colorWithRed:green:blue:alpha:
layer
alpha
firstObject
backgroundColor
setCornerRadius:
setRemoteObjectInterface:
resume
initWithDelegate:
timeIntervalSinceReferenceDate
locationInView:
colorWithCGColor:
_contextId
copy
setShadowRadius:
displayLinkWithTarget:selector:
getRed:green:blue:alpha:
sharedInstance
allValues
persistentlyHidePointerAssertionForReason:
addObject:
superview
isEqualToArray:
value:withObjCType:
setInvalidationHandler:
setBackgroundColor:
setContents:
objectForKeyedSubscript:
_setIgnoreAppSupportedOrientations:
setPaused:
initWithTarget:action:
remoteObjectProxy
setShadowOpacity:
allObjects
arrayWithObjects:count:
setExportedObject:
setWindowLevel:
setObject:forKeyedSubscript:
makeKeyAndVisible
requestGlobalMouseEventsForDisplay:targetContextID:
_setWindowControlsStatusBarOrientation:
regionWithRect:identifier:
objectAtIndexedSubscript:
setAlpha:
arrayWithArray:
setInterruptionHandler:
initWithContextID:displayUUID:identifier:policy:
convertPoint:fromView:
stringWithFormat:
presentationLayer
setClipsToBounds:
initWithObject:
whiteColor
_scheduleSceneEventResponseForScene:withResponseBlock:
dictionaryWithObjects:forKeys:count:
gamut
_mainScene
setShadowOffset:
addInteraction:
_animateUsingSpringWithTension:friction:interactive:animations:completion:
invalidate
setExportedInterface:
mainScreen
colorValue
valueWithColor:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
beginShowingEyeDropper
cancelShowingEyeDropper
floatEyeDropper
eyedropperDidSelectColor:
eyedropperDidFloat
eyedropperDidDismiss
lensView:didSelectColor:
lensViewDidDismiss:
scene:didUpdateWithDiff:transitionContext:completion:
scene:didReceiveActions:
listener:shouldAcceptNewConnection:
trackedTouchesBegan:
trackedTouchesMoved:
trackedTouchesCancelled:
trackedTouchesEnded:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
lockStateChanged
lensView
_enumerateRemoteClientsUsingBlock:
hideSystemPointer:
.cxx_destruct
_serviceListener
_window
_liveConnections
_notifyTokenLocked
_touchStream
_mousePointerServiceAssertion
_isFloating
_lastPresentationLocation
_lastDismissedTime
_pointerClientController
_hidePointerAssertion
init
initWithWithCellCount:
setStrokeColor:
drawRect:
strokeColor
_cellCount
_strokeColor
T@"UIColor",&,N,V_strokeColor
dragInteraction:itemsForBeginningSession:
dragInteraction:itemsForAddingToSession:withTouchAtPoint:
dragItemsForInteraction:
dragInteraction:previewForLiftingItem:session:
dragInteraction:willAnimateLiftWithAnimator:session:
dragInteraction:sessionWillBegin:
dragInteraction:sessionAllowsMoveOperation:
dragInteraction:sessionIsRestrictedToDraggingApplication:
dragInteraction:prefersFullSizePreviewsForSession:
dragInteraction:sessionDidMove:
dragInteraction:session:willEndWithOperation:
dragInteraction:session:didEndWithOperation:
dragInteraction:sessionDidTransferItems:
dragInteraction:sessionForAddingItems:withTouchAtPoint:
dragInteraction:session:willAddItems:forInteraction:
dragInteraction:previewForCancellingItem:withDefault:
dragInteraction:item:willAnimateCancelWithAnimator:
initWithFrame:
_displayLinkFired
tappedCenter:
layoutSubviews
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
_layoutStaticElements
updateLensState:
_lensViewLocalCenter
accessibilityLabel
accessibilityValue
accessibilityTraits
isAccessibilityElement
setInterfaceOrientation:
updateCenterOffsetAtTouchDown:
presentAtLocation:
updateLocation:
dismiss
updateLensViewWithEvent:
isMovingWithPan
_isScreenScaleEven
_lensPosition
pointInside:withEvent:
interfaceOrientation
delegate
setDelegate:
floatingMode
setFloatingMode:
lastPosition
setLastPosition:
_hoverColorCenterView
_hoverColorRingView
_gridView
_screenshotSurfaceView
_ringBorderView
_lensState
_displayLink
_colorAnalyzer
_hoverColor
_hoverColorBrightness
_centerOffsetAtTouchDown
_pointerInteraction
_floatingMode
_interfaceOrientation
_delegate
_lastPosition
T@"<EDLensViewDelegate>",W,N,V_delegate
Tq,N,V_interfaceOrientation
TB,N,V_floatingMode
T{CGPoint=dd},N,V_lastPosition
TB,R,N
hitTest:withEvent:
_isSecure
_canBecomeKeyWindow
_preventsRootPresentationController
_shouldControlAutorotation
_shouldAutorotateToInterfaceOrientation:
handleStatusBarChangeFromHeight:toHeight:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
root
setRoot:
trackingDelegate
setTrackingDelegate:
_root
_trackingDelegate
T@"EDWindowRootViewController",&,N,V_root
T@"<EDWindowTrackingDelegate>",W,N,V_trackingDelegate
clearCache
colorsSuggestionsForSurface:maxSuggestions:clipToCircle:clipedToRect:
removeSimilarColors:minDistance:
kmeansForColors:clusters:
kmeansColorsForColors:clusters:
kmeansShouldStopWithPreviousColors:newColors:iterations:
colorsInSurface:offset:clipToCircle:clipedToRect:
colorAtCenterOfSurface:offset:
getRandomColors:from:
_cache
initWithNibName:bundle:
viewDidLoad
getRotationContentSettings:forWindow:
supportedInterfaceOrientations
_canShowWhileLocked
setLensView:
_lensView
T@"EDLensView",&,N,V_lensView
{EDColor=ddd}16@0:8
@40@0:8{EDColor=ddd}16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8@16
v24@0:8@"UIColor"16
v32@0:8@16@24
v32@0:8@"EDLensView"16@"UIColor"24
v24@0:8@"EDLensView"16
v48@0:8@16@24@32@?40
v48@0:8@"FBSScene"16@"FBSSceneSettingsDiff"24@"FBSSceneTransitionContext"32@?<v@?@"FBSWorkspaceSceneUpdateResponse">40
v32@0:8@"FBSScene"16@"NSSet"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSSet"16
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v24@0:8@?16
v20@0:8B16
@"NSXPCListener"
@"EDWindow"
@"NSMutableArray"
@"BKSTouchStream"
@"<BSInvalidatable>"
{CGPoint="x"d"y"d}
@"PSPointerClientController"
@24@0:8q16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIColor"
@48@0:8@16@24{CGPoint=dd}32
@24@0:8@16
v40@0:8@16@24Q32
v48@0:8@16@24@32@40
@"NSArray"32@0:8@"UIDragInteraction"16@"<UIDragSession>"24
@"UITargetedDragPreview"40@0:8@"UIDragInteraction"16@"UIDragItem"24@"<UIDragSession>"32
v40@0:8@"UIDragInteraction"16@"<UIDragAnimating>"24@"<UIDragSession>"32
v32@0:8@"UIDragInteraction"16@"<UIDragSession>"24
B32@0:8@"UIDragInteraction"16@"<UIDragSession>"24
v40@0:8@"UIDragInteraction"16@"<UIDragSession>"24Q32
@"NSArray"48@0:8@"UIDragInteraction"16@"<UIDragSession>"24{CGPoint=dd}32
@"<UIDragSession>"48@0:8@"UIDragInteraction"16@"NSArray"24{CGPoint=dd}32
v48@0:8@"UIDragInteraction"16@"<UIDragSession>"24@"NSArray"32@"UIDragInteraction"40
@"UITargetedDragPreview"40@0:8@"UIDragInteraction"16@"UIDragItem"24@"UITargetedDragPreview"32
v40@0:8@"UIDragInteraction"16@"UIDragItem"24@"<UIDragAnimating>"32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8q16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
q16@0:8
B40@0:8{CGPoint=dd}16@32
@"UIView"
@"EDGridView"
@"CADisplayLink"
@"EDColorAnalyzer"
{EDColor="r"d"g"d"b"d}
@"UIPointerInteraction"
@"<EDLensViewDelegate>"
B24@0:8q16
v32@0:8d16d24
@40@0:8{CGPoint=dd}16@32
@"EDWindowRootViewController"
@"<EDWindowTrackingDelegate>"
@68@0:8^{__IOSurface=}16q24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
@32@0:8@16d24
@32@0:8@16q24
B40@0:8@16@24q32
@76@0:8^{__IOSurface=}16{CGPoint=dd}24B40{CGRect={CGPoint=dd}{CGSize=dd}}44
@40@0:8^{__IOSurface=}16{CGPoint=dd}24
@32@0:8q16@24
@"NSMutableDictionary"
v32@0:8^{?=BBBBBdi}16@24
@"EDLensView"
