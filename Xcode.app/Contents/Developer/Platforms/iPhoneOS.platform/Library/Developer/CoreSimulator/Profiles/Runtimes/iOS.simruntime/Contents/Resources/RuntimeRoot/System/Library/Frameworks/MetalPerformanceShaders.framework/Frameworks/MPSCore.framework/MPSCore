library not found at "%s"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/MPSDeviceComputePipelineState.mm
default
MetalPerformanceShaders internal error: library "%s" not found
/System/Library/Frameworks/MetalPerformanceShaders.framework/
%s/%s.metallib
device:     %p "%@"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
[%@ %@] error: dimension index (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Types/MPSNDArray.mm
[%@ %@] error: subRange.start (%lu) is not less than length of dimension[%lu] (%u)
[%@ %@] error: the range subRange.start + subRange.length does not fit in dimension[%lu] (%u)
[%@ %@] error: dimension index 1 (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
[%@ %@] error: dimension index 2 (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
[%@ %@] Error: number of dimensions (%lu) may not exceed 16
numElements == numElementsBefore failed for the reshape operations
dataType
TI,N,V_dataType
numberOfDimensions
TQ,N,V_numberOfDimensions
v16@?0@"<MTLCommandBuffer>"8
User memory error: The MPSImage default allocator belongs to MPS and should not be released by you.
supportsSecureCoding
TB,R
[%@ %@] Error dimension index (%lu) too large
[%@ %@] Error: -init is not a supported method for this object
[%@ %@] Error: descriptor may not be nil
[%@ %@] Error: product of dimension sizes > 2**31
[%@ %@] Error: number of dimensions is greater than 16
[%@ %@] Error: slice larger than index dimension
[%@ %@] Error: dimension order out of bounds
[%@ %@] Error: slice offset out of bounds
[%@, %@] Error: buffer may not be nil
[%@, %@] Error: buffer is not large enough. Must be %lu bytes
descriptor is NULL.
Requested matrix has a different number of elements.
reshapeNDArrayData
copyNDArrayData
Flattening export only available for dimensions >= 2.
Flattening export requested but not possible due to non-zero offsets.
copyNDArrayFromImage
copyNDArrayToImage
NDArray: importDataWithCommandBuffer %@ rank is %d, should be 4 or less
NDArray: importDataWithCommandBuffer %@ array is too large - fcOffset = %d, fcCopySize = %d, image FCs = %d
NDArray: importDataWithCommandBuffer %@ array is too large - xOffset = %d, xCopySize = %d, image width = %d
NDArray: importDataWithCommandBuffer %@ array is too large - yOffset = %d, yCopySize = %d, image height = %d
NDArray: importDataWithCommandBuffer %@ array is too large - batch copySize = %d, batchSize = %d
Array: %s
- dimensionLengths        = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- sliceLengths            = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- sliceOffsets            = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- dimensionOrder          = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- transposed sliceLengths = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
label
T@"NSString",C,V_label
TI,R,N,V_dataType
dataTypeSize
TQ,R,N
TQ,R,N,V_numberOfDimensions
device
T@"<MTLDevice>",R,&,N
parent
T@"MPSNDArray",R,&,N,V_parent
[%@ initWithBuffer:descriptor:] buffer may not be nil.
[%@ initWithCommandBuffer:descriptor:] descriptor may not be nil.
MPSTemporaryNDArray %p  invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
readCount
TQ,N,V_readCount
_MPSCommandBufferRetainListKey
%2.2x 
%4.4x 
%8.8d 
%16.10f 
%24.14f 
/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/vImage
/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/vecLib
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
vImageConvert_PlanarFtoPlanar16F
vImageConvert_Planar16FtoPlanarF
vImagePermuteChannels_ARGB8888
Error: could not find vImage.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/Float2Half.mm
vImageByteSwap_Planar16U
hw.optional.f16c
Cannot directly initialize MPSParallelScan. Use one of the sub-classes of MPSParallelScan.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSParallelPrimitives/Kernels/MPSParallelScan.mm
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeInt32
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeUInt32
[%@ initWithDevice:sourceDataType:destinationDataType:] invalid sourceDataType
[%@ initWithCoder:device:] Failed: unsupported file version.
[%@ encodeToCommandBuffer... sourceBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationBuffer may not be NULL]
sourceDataType
TI,R,N,V_sourceDataType
destinationDataType
TI,R,N,V_destinationDataType
fill_scan_lookback_status_buffer
single_pass_scan_int8_int32
single_pass_scan_int16_int32
single_pass_scan_int32_int32
MPSParallelScan.sourceDataType
MPSParallelScan.destinationDataType
MPSParallelScan.op
MPSParallelScan.kernelID
rows
TQ,N,V_rows
columns
TQ,N,V_columns
matrices
TQ,R,N,V_matrices
rowBytes
TQ,N,V_rowBytes
matrixBytes
TQ,R,N,V_matrixBytes
length
TQ,N,V_length
vectors
TQ,R,N,V_vectors
vectorBytes
TQ,R,N,V_vectorBytes
Metal Performance Shaders: you may not initialize a %@ with -init
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Types/MPSMatrix.mm
[%@ initWithBuffer:descriptor:] descriptor may not be nil.
[%@ initWithBuffer:descriptor:] not enough rowBytes for all the columns.
[%@ initWithBuffer:descriptor:] rowBytes is not a multiple of the element size.
[%@ initWithBuffer:descriptor:] buffer is too small (%lu) for matrix size (%lu bytes)
[%@ initWithBuffer:offset:descriptor:] buffer is too small (%lu) for matrix size (%lu bytes) and offset(%lu bytes)
[%@ initWithDevice: %p descriptor:] device is not supported: %@
Returning nil.
Rows:  
Columns:
Matrices:
rowBytes:
matrixBytes:
MPSMatrix %p Cannot export to MPSNDArray: The matrices are not packed. matrixBytes = %lu but rows*rowBytes = %lu.
TQ,R,N,V_rows
TQ,R,N,V_columns
TQ,R,N,V_rowBytes
data
T@"<MTLBuffer>",R,N
[%@ temporaryMatrixWithCommandBuffer:matrixDescriptor:] device is not supported: %@
Returning nil.
MPSTemporaryMatrix %p Cannot export to MPSNDArray: The matrices are not packed. matrixBytes = %lu but rows*rowBytes = %lu.
MPSTemporaryMatrix %p  invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
[%@ initWithDescriptor:device:] descriptor may not be nil.
[%@ initWithDescriptor:device:] not enough vectorBytes for each vector.
[%@ initWithDescriptor:device:] vectorBytes is not a multiple of the element size.
[%@ initWithBuffer:length:dataType] buffer may not be nil.
[%@ initWithBuffer: %p] device is not supported: %@
Returning nil.
[%@ initWithBuffer:length:dataType] buffer is too small (%lu) for vector size (%lu bytes)
[%@ initWithBuffer:descriptor:] not enough vectorBytes for each vector.
[%@ initWithBuffer:descriptor:] vectorBytes is not a multiple of the element size.
[%@ initWithBuffer:offset:descriptor] buffer is too small (%lu) for vector size (%lu bytes) and offset (%lu bytes)
TQ,R,N,V_length
[%@ initWithCommandBuffer:descriptor:] not enough vectorBytes for each vector.
[%@ initWithCommandBuffer:descriptor:] vectorBytes is not a multiple of the element size.
[%@ initWithCommandBuffer: %p] device is not supported: %@
Returning nil.
T@"NSString",C
T@"<MTLDevice>",R
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
T@"<MTLHeap>",R
heapOffset
allocatedSize
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
buffer
T@"<MTLBuffer>",R
bufferOffset
bufferBytesPerRow
iosurface
T^{__IOSurface=},R
iosurfacePlane
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
framebufferOnly
TB,R,GisFramebufferOnly
allowGPUOptimizedContents
swizzle
T{?=CCCC},R,N
[%@ initWithResource:] Error: resource is neither a MTLTexture or a MTLBuffer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/MPSState.mm
MPSState %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
%@ %p "%@" invalid operation: Adjusting read count on a non-temporary state.
%@ %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
readCount: %lu
isTemporary: %s
resource count: %lu
resources:
[%lu] texture %@
[%lu] buffer  %@
[%lu] <unknown resource format %u>
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.  They are GPU private and not readable on CPU.
[%@ textureInfoAtIndex] Error: index is too large
[%@ textureInfoAtIndex] Error: resource at index %lu is not a texture
[%@ bufferSizeAtIndex] Error: index is too large
[%@ bufferSizeAtIndex] Error: resource at index %lu is not a buffer
resourceCount
TQ,R,N,V_resourceCount
isTemporary
TB,R,N
resource
T@"<MTLResource>",R,&,N
Error: attempted to resurrect or overrelease a state with readcount 0,
MPSStateBatchIncrementReadCount() Error: attempted to adjust readcount of object with count of %lu by %ld,
MPSImageBatchSynchronize(): Error: image[%lu] is a temporary image and can not be read on the CPU.
[%d] texture %@
[%d] buffer: size = %lu
%@%@
[%@ resource] Internal error: unhandled resource type
/BuildRoot/Library/Caches/com.apple.xbs/Binaries/MetalImage_Sim/install/Symbols/BuiltProducts/MPSCore.framework/PrivateHeaders/Internal/MPSStateInternal.h
Error: %p is not a MTLBuffer or a MTLTexture
Cannot directly initialize MPSParallelSort. Use one of the sub-classes of MPSParallelSort.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSParallelPrimitives/Kernels/MPSParallelSort.mm
[%@ initWithDevice:keyPairDataType:valuePairDataType:] invalid keyPairDataType
[%@ initWithDevice:keyPairDataType:valuePairDataType:] invalid valuePairDataType
[%@ encodeToCommandBuffer... sourceKeyBuffer may not be NULL]
[%@ encodeToCommandBuffer... sourceValueBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationKeyBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationValueBuffer may not be NULL]
keyPairDataType
TI,R,N,V_keyPairDataType
valuePairDataType
TI,R,N,V_valuePairDataType
compute_histogram_bins_uint32
scatter_results_uint32
scatter_key_value_results_uint32
MPSParallelSort.keyPairDataType
MPSParallelSort.valuePairDataType
MPSParallelSort.op
MPSCommandBufferImageCache
Error: command buffer exited with error status, but did not provide an error message.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: command buffer exited with error status.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: 
[%@ initWithCommandBuffer:computeEncoder: commandBuffer may not be nil
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/MPSCommandBufferImageCache.mm
commandQueue
T@"<MTLCommandQueue>",R
retainedReferences
kernelStartTime
Td,R
kernelEndTime
GPUStartTime
GPUEndTime
status
error
T@"NSError",R
[%@ initWithCommandBuffer:computeEncoder: commandBuffer does not conform to the MTLCommandBuffer protocol
MPS internal error: attempted to make a new heap for a command buffer that already has one
cache frame %lu:
probable %s leak: %p (label=%s)
Internal error: MPSCommandBufferImageCache destroyed while %lu MTLResources still outstanding. MTLResources might be leaked.
Internal error: Failed to clean up command buffer image cache frame list.
commandBuffer: %@
%lu MTLResources. %lu frames.
commandBuffer: %@
commandBuffer
T@"<MTLCommandBuffer>",R,N,V_cmdBuffer
batchSizeHint
TQ,N,V_batchSize
heapProvider
T@"<MPSHeapProvider>",&,N,V_heapProvider
MPSKernel: out of memory
Internal error: the popped cache frame wasn't the top of the stack
Internal error: Released a texture with no current cache frame.
Internal error: Released a texture not in current cache frame.
Attempted to create a temp texture using a non-writable MTLPixelFormat (%lu)
Failed to allocate temp texture descriptor for format %lu
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture storage mode must be MTLResourceStorageModePrivate.
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture descriptor.usage must be at least MTLTextureUsageShaderRead | MTLTextureUsageShaderWrite.
Failed to allocate private MTLTexture for format %s
Failed to allocate private MTLBuffer for size %lu
MPSGetTemporaryTextureFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempTexture() instead. Otherwise we may leak.
MPSGetTemporaryTextureFromCommandBufferCache: MTLPixelFormat (%lu) for descriptor is unsupported.
MPSGetTemporaryTextureFromCommandBufferCache: temp texture formats must be writable.
MPSImage internal error: attempted to resurrect dead image backing store.
MPSAutoTexture::AllocateTexture Is missing its texture descriptor
MPS internal error: ReleaseTemporaryTexture() called on non-temporary texture
(texture not yet allocated)
device: %@
descriptor:  %@
MPSMatrix internal error: attempted to create 0 sized object.
MPSGetTemporaryBufferFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempBuffer() instead. Otherwise we may leak.
Attempted to init a MPSMatrix twice?
MPS internal error: attempted to release a temporary buffer for a MPSMatrix?
buffer (not yet allocated)
size = %lu
device: %p
MPSCommandBufferImageCache internal error:  cache over popped
Failed to allocate TextureNode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Types/MPSImage.mm
MTLTextureUsageShaderRead
MTLTextureUsageShaderWrite
MTLTextureUsageRenderTarget
MTLTextureUsagePixelFormatView
MTLTextureUsageUnknown
%@ | %s
MPSImageFeatureChannelsInterleavedPerPixel
MPSImageFeatureChannelsInterleavedPerArraySlice
MTLStorageModeShared
MTLStorageModeManaged
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLCPUCacheModeDefaultCache
MTLCPUCacheModeWriteCombined
width:             %lu
height:            %lu
featureChannels:   %lu
number of Images:  %lu
channel format:    %s
featureChanLayout: %s
cache mode:        %s
storage mode:      %s
usage:             %@
featureChannelsLayout
TQ,N,V_featureChannelsLayout
TQ,N,V_width
TQ,N,V_height
featureChannels
TQ,N,V_featureChannels
numberOfImages
TQ,N,V_numberOfImages
channelFormat
TQ,N,V_channelFormat
TQ,N,V_cpuCacheMode
TQ,N,V_storageMode
TQ,N,V_usage
[%@ initWithDescriptor:featureChannels:onDevice:] descriptor may not be nil.
[%@ initWithDescriptor:featureChannels:onDevice:] device may not be nil.
array length must be multiple of (featureChannels+3)/4
[%@ initWithTexture:] textureType (%s) is unknown to MPS or has 0 color channels.
[%@ initWithTexture:] Texture pixel format doesnt match number of feature channels.
[%@ initWithTexture:] Texture pixel format doesn't match number of feature channels.
[%@ initWithDevice:] texture may not be nil.
[%@ initWithDevice:] device may not be nil.
Texture array length must be multiple of number of slices %lu needed to hold %lu feature channels
[%@ initWithDevice:imageDescriptor:] descriptor may not be nil.
[%@ initWithDevice:imageDescriptor:] width must be >= 1 .
[%@ initWithDevice:imageDescriptor:] height must be >= 1 .
[%@ initWithDevice:imageDescriptor:] feature channels must be >=1 .
[%@ initWithDevice:imageDescriptor:] number of images must be >= 1 .
[%@ initWithDevice:imageDescriptor:] descriptor.channelFormat may not be MPSImageFeatureChannelFormatNone
[%@ initWithParentImage:sliceRange:featureChannels:] Error: self and parent must belong to the same class.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: This method only works on images that are interleaved per texel.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: feature channels may not be zero.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: %lu feature channels is %lu slices. That doesn't divide evenly into sliceRange.length = %lu.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: parent image has readCount of 0
sub-image of %p %@
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.length must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: This method only works on images with a .numberOfImages = 1. Please make a sub-batch first.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location (%lu) does not fall within the number of feature channels in the image (%lu)
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location is larger than the number of feature channels in the image.
[%@ subImageWithFeatureChannelRange:] Error: The feature channel range {%lu, %lu} would result in a image with no texels.
[%@ subImageWithRange:] Error: The subRange.location is larger than the number of images in the image.
%@ "%@"
device: %p "%@"
width: %lu
height: %lu
featureChannelsPerImage: %lu
numberOfImages: %lu
MTLPixelFormat: %s
feature channel format: %s
parent:  %p
texture: %p
<Err: temporary images are unavailable for display. Contents are usually heavily aliased.>
<Err: texture backing store has not been materialized yet. Nothing to see here...>
<Err: can't display bfloat16 images>
vImageBuffer_Init
vImageCreateCGImageFromBuffer
CGColorSpaceRelease
CGImageRelease
CGColorSpaceCreateDeviceGray
<Err: unable to transcode texture to CGImage>
UIImage
[%@ initWithDevice:] feature channels for monochrome MTLPixelFormats must be 1.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatR{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] %lu channel MTLTextureFormats must have %lu feature channels.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRG{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] feature channels must be >=3 .
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] invalid texture format %lu.
[%@ %@] Error: the image texture you are reading from is uninitialized.
This typically means that nothing has written to it yet, and its contents are currently undefined.
Perhaps you meant to call writeBytes:... instead?%@
[%@ initWithDevice:] invalid region, region is bigger than imageSize
[%@ initWithDevice:] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ %@] Probable error: both region.origin.z and imageIndex are non-zero.
These two parameters are redundant with one another. Historically, region.origin.z was ignored. Please use one or the other, not both
[%@ %@] invalid region, range of images exceeds images in MPSImage
[%@ initWithDevice:] invalid featureChannelInfo, more feature channels %lu copied than available from offset %lu.
[%@ initWithDevice:] internal allocation error.
sizeOfOneFeatureChannelData
[%@ writeBytes:..] invalid region, region is bigger than imageSize
[%@ writeBytes:...] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ writeBytes:...] invalid featureChannelInfo, .numberOfFeatureChannelsToReadWrite : %lu not non-negative and multiple of 4 (unless .numberOfFeatureChannelsToReadWrite is allChannels)
[%@ %@] Probable error: both region.origin.z and imageIndex are non-zero. These two parameters are redundant with one another. Historically, region.origin.z was ignored. Please use one or the other, not both
[%@ writeBytes:...] invalid featureChannelInfo: more feature channels %lu copied than available from offset %lu.
[%@ writeBytes:...] internal allocation error.
-[MPSImage writeBytes:dataLayout:bytesPerColumn:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:]
TQ,R,N,V_featureChannelsLayout
TQ,R,N,V_width
TQ,R,N,V_height
TQ,R,N,V_featureChannels
TQ,R,N,V_numberOfImages
precision
featureChannelFormat
TQ,R,N,V_featureChannelFormat
pixelSize
texture
T@"<MTLTexture>",R,N
T@"MPSImage",R,&,N,V_parent
[%@ initWithDevice:] width must be >= 1 .
[%@ initWithDevice:] height must be >= 1 .
[%@ initWithDevice:] feature channels must be >=1 .
[%@ initWithDevice:] number of images must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] pixel format (%lu) is unknown / unsupported.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] commandBuffer may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.width must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.height must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.arrayLength must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] error: descriptor storageMode must be MTLStorageModePrivate.
[%@ prefetchStorageWithCommandBuffer:imageDescriptorList:] Error: the descriptor must be configured with MTLStorageModePrivate
[%@ setPurgeableState:] error: changing purgeable state on a MPSCNNTemporaryImage will result in undefined behavior.  The memory is owned and managed by the framework.
MPSTemporaryImage %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
Error: attempted to decrement readCount when already 0.
If you need to read from a MPSTemporaryImage more than once, set the readCount to indicate how many times it will be read.
Please see the header comments about the MPSTemporaryImage.readCount property for more information.
Error: attempted to decrement readCount on a non-temporary image.
Error: attempted to resurrect or overrelease a object with readcount 0,
Error: attempted to increment readcount by %ld on object with readCount %lu:
MPSTemporaryImage %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
readCount: %lu
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.
They are GPU private and not readable on CPU.
[%@ %@] Error: you may not call readBytes: on a temporary image.
It shares memory with other images and buffers and is only valid in
a narrow time window on the GPU.
The storage is at minimum freed
when the command buffer completes or more likely reused by other
objects well before that happens. This call occurs at CPU time and
is by definition outside the window when the contents of the image are valid.
[%@ %@] Error: you may not call writeBytes:... on a temporary image.
It shares memory with other images and buffers and is only valid in
a narrow time window on the GPU.
The storage is at minimum freed
when the command buffer completes or more likely reused by other
objects well before that happens. The storage is not valid before the
command buffer runs. This call occurs at CPU time and is by definition
outside the window when the contents of the image are valid.
MPSImageFeatureChannelFormatNone
MPSImageFeatureChannelFormatUnorm8
MPSImageFeatureChannelFormatUnorm16
MPSImageFeatureChannelFormatFloat16
MPSImageFeatureChannelFormatFloat32
MPSImageFeatureChannelFormatBFloat16
<invalid format
[%@ initWithDevice:] invalid MTLPixelFormat %lu.
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) must be a unorm, snorm or float format
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) is not a writable format but marked MTLTextureUsageShaderWrite
[%@ initWithDevice:] MPSImage.width must be > 0. (If created with a MTLTexture, MTLTexture.width > ((featureChannels+3)/4).)
Error: This MPSImage (%lu slices) would exceed the maximum allowed number of slices in a Metal texture array (%lu slices).
[%@ initWithDevice:] BGRA MPSImages may be no more than 4 channels.  Requested: %lu
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float}.
vImageConvert_ARGB8888toPlanar8
vImageConvert_ARGB16UtoPlanar16U
vImageConvert_ARGBFFFFtoPlanarF
HWCtoRaw
outputBuffer != NULL
vImageConvert_Planar8toARGB8888
vImageConvert_Planar16UtoARGB16U
vImageConvert_PlanarFtoARGBFFFF
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Filters/MPSKernel.mm
[%s initWithDevice: %p] device is not supported: %s
Returning nil.
[%@ copyWithZone:device:] device may not be nil.
[%s copyWithZone:device: %p] device is not supported: %s
Returning nil.
MPSKernelOptionsNone
MPSKernelOptionsSkipAPIValidation
MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsInsertDebugGroupsMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerboseMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
<invalid options list>
%@ "%@"
device:        %p
options:       %s
concurrent:    %s
[%@ initWithCoder:device] Error: file version too new to decode.
enableConcurrency
TB,N,V_enableConcurrency
fileVersion
T(?=I{?=b8b8b16}),N,V_fileVersion
options
TQ,N,V_options
MPS_LOG_INFO
MPSKernel._fileVersion
MPSKernel._options
MPSKernel._tuningParams
MPSKernel._maxTuningParams
MPSKernel._label
MPSKernel.originalDevice
MPSKernel.tableOptions
MPSKernel.enableConcurrency
distributionType
TQ,N,V_distributionType
minimum
Tf,N,V_minimum
maximum
Tf,N,V_maximum
mean
Tf,N,V_mean
standardDeviation
Tf,N,V_standardDeviation
Cannot directly initialize MPSParallelRandom. Use one of the sub-classes of MPSParallelRandom.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSParallelPrimitives/Kernels/MPSParallelRandom.mm
[%@ encode...] Error: commandBuffer may not be nil]
[%@ encode...] Error: destination may not be nil
[%@ encode...] Error: Number of requested results (%lu) is too large to fit in the destination image (%p) at the specified offset (%lu).
[%@ encode...] Error: The default distribution requires a data type of MPSDataTypeUInt32.
[%@ encode...] Error: Uniform distribution requires a data type of MPSDataTypeFloat32.
newBufferWithLength returned nil.
mtgp32SetState
mtgp32
MTGP32 shader only supports threadgroup sizes of 128 or 256.
kMPSParallelRandomDataTypeKey
kMPSParallelRandomDistributionKey
kMPSParallelRandomGeneratorKey
kMPSParallelRandomStateArrayKey
kMPSParallelRandomParameterShift1ArrayKey
kMPSParallelRandomParameterShift2ArrayKey
kMPSParallelRandomParameterMRArrayKey
kMPSParallelRandomParameterMTArrayKey
kMPSParallelRandomParameterMArrayKey
kMPSParallelRandomParameterStateIdxArrayKey
[%@ encode...] Error: Number of requested results (%lu) must be a multiple of 4.
[%@ encode...] Error: Destination buffer offset (%lu) must be a multiple of 4.
philox
kMPSParallelRandomCountersArrayKey
MPS Internal error: overriding feature channel format currently only supported for bfloat16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/MPSDevicePixeInfo.mm
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSParallelPrimitives/Kernels/MPSParallelReduce.mm
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeFloat32
fill_reduce_lookback_status_buffer
reduce_add_int8_int32
reduce_add_int16_int32
reduce_add_int32_int32
reduce_add_half_float
reduce_add_float_float
reduce_min_int8_int32
reduce_min_int16_int32
reduce_min_int32_int32
reduce_min_half_float
reduce_min_float_float
reduce_max_int8_int32
reduce_max_int16_int32
reduce_max_int32_int32
reduce_max_half_float
reduce_max_float_float
reduce_arg_minmax_int8_int32
reduce_arg_minmax_int16_int32
reduce_arg_minmax_int32_int32
reduce_arg_minmax_half_int32
reduce_arg_minmax_float_int32
MPSParallelReduce.sourceDataType
MPSParallelReduce.destinationDataType
MPSParallelReduce.op
MPSParallelReduce.kernelID
MPSParallelReduce.argkernelID
MPSDisableExternalImplementationsSPI() error:  Unable to find MPSDevice for MTLDevice: %p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/MPSDevice.mm
Error: MPS does not support the iOS simulator.
MetalPerformanceShaders global queue
Library ID %lu not initialized yet. Skipping...
Testing library: %lu
Failed to create state: %@
kMPSReturnSuccess
kMPSReturnOutOfMemory
kMPSReturnSourceInvalid
kMPSReturnSourceSizeInvalid
kMPSReturnSourceFormatInvalid
kMPSReturnDestinationInvalid
kMPSReturnDestinationSizeInvalid
kMPSReturnDestinationFormatInvalid
kMPSReturnBufferInvalid
kMPSReturnBufferSizeInvalid
kMPSReturnKernelSizeInvalid
kMPSReturnKernelValuesInvalid
kMPSReturnOptionsInvalid
kMPSReturnDeviceMismatch
kMPSReturnDeviceUnsupported
kMPSReturnOffsetInvalid
kMPSReturnClipRectInvalid
kMPSReturnEncoderInvalid
kMPSReturnCanNotOperateInPlace
kMPSReturnInternalError
kMPSReturnInvalidOperation
kMPSReturnCommandBufferInvalid
kMPSReturnInvalidMPSImageFormat
kMPSReturnInvalidMPSImageDimension
kMPSReturnUnsupportedMPSImageFeatureChannelFormat
kMPSReturnEdgeModeInvalid
kMPSReturnInvalidCNNTexture
kMPSReturnStrideInPixelsInvalid
kMPSReturnOperationNotSupportedByPlugin
kMPSReturnDescriptorInvalid
kMPSReturnEncodingInvalid
kMPSReturnInvalidState
<invalid MPSReturn code>
latency1
scheduleOption
latency2
latency_code_motion
MPSLibrary::MPSKey_Create internal error: Unable to get MPS kernel %@.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/MPSLibrary.mm
MPSKernel MTLComputePipelineStateCache unable to load function %@.
%@: %@
com.apple.metal.MPS.%@-%@.textureTypes
com.apple.metal.MPS.%@-%@.userConstant
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
v24@?0@"<MTLFunction>"8@"NSError"16
MPS internal error on MTLLibrary %p: invalid kernelID %u
MPS internal error on MTLLibrary %p: kernelInfo[%u].kernelName uninitialized
MPS internal error: could not create specialized function with name %@
MPS compilation error:  failed to create MTLComputePipelineState for function: %@
MPS internal error: unable to acquire rwlock for reading: %d
MPS internal error: unable to acquire rwlock for writing: %d
[%@ initWithBuffer:offset:] buffer may not be nil.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MetalImage_Sim/MetalImage-122.0.41/MPSCore/Utility/MPSPredicate.mm
[%@ initWithBuffer:offset:] offset:(%lu) not multiple of 4.
[%@ initWithBuffer:offset:] offset:(%lu) is too large for buffer size: (%lu)
[%@ initWithBuffer:offset:] device: %@ does not support predication.
buffer:             %@
offset:            %lu
[%@ initWithDevice:] Failed to allocate buffer.
predicateBuffer
T@"<MTLBuffer>",R,&,N,V_predicateBuffer
predicateOffset
TQ,R,N,V_predicateOffset
[%@ dispatchThreads:threadsPerThreadgroup:] Not supported with predicate.
dispatchType
computeCommandEncoder
T@"<MTLComputeCommandEncoder>",R,N,V_originalCommandEncoder
Error: command buffer already committed.  State: %lu
T@"<MTLCommandBuffer>",R,&,N,V_commandBuffer
rootCommandBuffer
T@"<MTLCommandBuffer>",R,&,N
predicate
T@"MPSPredicate",&,N,V_predicate
T@"<MPSHeapProvider>",&,N
predicate_dispatch_buffer
copy_float
copy_float_2darray
copy_uint
copy_uint_2darray
copy_int
copy_int_2darray
copy_float_generic
@(#)PROGRAM:MPSCore  PROJECT:MPS-1
MPSExternalPluginBase
NSObject
MPSNDArrayDescriptor
MPSNDArrayDefaultAllocator
MPSNDArrayAllocator
NSSecureCoding
NSCoding
NSCopying
MPSNDArray
MPSTemporaryNDArrayDefaultAllocator
MPSTemporaryNDArray
MPSParallelScan
MPSParallelExclusiveScan
MPSParallelInclusiveScan
MPSMatrixDescriptor
MPSVectorDescriptor
MPSMatrix
MPSTemporaryMatrix
MPSVector
MPSTemporaryVector
MPSStateResourceList
MTLTexture
MTLResource
MTLBuffer
MPSState
MPSParallelSort
MPSParallelRadixSort
MTLCommandBuffer
MPSCommandBufferImageCache
MPSKeyedUnarchiver
MPSDeviceProvider
MPSImageDefaultAllocator
MPSImageAllocator
MPSTemporaryImageDefaultAllocator
MPSImageDescriptor
MPSImage
MPSTemporaryImage
MPSVirtualImage
MPSKernel
MPSParallelRandomDistributionDescriptor
MPSParallelRandom
MPSParallelRandomMTGP32
MPSParallelRandomPhilox
MPSParallelReduce
MPSParallelReduceSum
MPSParallelReduceMin
MPSParallelReduceMax
MPSParallelReduceArgMin
MPSParallelReduceArgMax
MPSPredicate
MPSPredicatedCommandEncoder
MTLComputeCommandEncoder
MTLCommandEncoder
MPSCommandBuffer
stringWithCString:encoding:
newLibraryWithFile:error:
setLabel:
doesNotRecognizeSelector:
init
debugDescription
name
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
initWithDevice:
device
maxBatchSize
_self
_device
buffer
bufferOffset
bufferBytesPerRow
size
newHeapWithDescriptor:
setSize:
setStorageMode:
setCpuCacheMode:
setPurgeableState:
initWithDataType:dimensions:sizes:
alloc
count
objectAtIndexedSubscript:
unsignedIntegerValue
dealloc
descriptorWithDataType:dimensionCount:dimensionSizes:
descriptorWithDataType:shape:
descriptorWithDataType:dimensionSizes:
lengthOfDimension:
setLengthOfDimension:atIndex:
sliceRangeForDimension:
sliceDimension:withSubrange:
transposeDimension:withDimension:
dimensionOrder
reshapeWithShape:
reshapeWithDimensionCount:dimensionSizes:
dataType
setDataType:
numberOfDimensions
setNumberOfDimensions:
_dimensionLengths
_sliceOffsets
_sliceLengths
_dimensionOrder
_numberOfDimensions
_dataType
_child
_parent
_transitionOp
defaultAllocator
initWithDevice:descriptor:
addCompletedHandler:
newBufferWithLength:options:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
copyWithZone:
arrayForCommandBuffer:arrayDescriptor:kernel:
bufferForCommandBuffer:size:options:kernel:
freeBuffer:forCommandBuffer:
_dealloc_ok
exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:
libraryInfo
length
columns
rows
matrices
data
initWithBuffer:descriptor:
rowBytes
contents
temporaryNDArrayWithCommandBuffer:descriptor:
makeStrideBytesInArray:
encodeCopyWithCommandBuffer:toBuffer:destinationDataType:destinationOffsetBytes:destinationStrideBytes:
retainedReferences
encodeReshapedMatrixWithCommandBuffer:toBuffer:destinationDataType:destinationOffsetBytes:destinationRowBytes:destinationColumns:destinationRows:
matrixBytes
exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
threadExecutionWidth
computeCommandEncoder
setComputePipelineState:
setBuffer:offset:atIndex:
setBytes:length:atIndex:
dispatchThreadgroups:threadsPerThreadgroup:
endEncoding
makeStrideBytes
featureChannels
width
height
texture
arrayLength
setTexture:atIndex:
copyDataWithCommandBuffer:images:offset:imageToArray:
label
UTF8String
readBytes:strideBytes:
dataTypeSize
descriptor
dataWithCommandBuffer:
initWithDevice:matrix:
initWithDevice:scalar:
resourceSize
arrayViewWithCommandBuffer:descriptor:aliasing:
matrixWithCommandBuffer:descriptor:aliasing:
encodeReshapedBatchWithCommandBuffer:toBuffer:destinationDataType:destinationOffsetBytes:destinationRowBytes:destinationColumns:destinationRows:
importDataWithCommandBuffer:fromBuffer:sourceDataType:offset:rowStrides:
exportDataWithCommandBuffer:toImages:offset:
importDataWithCommandBuffer:fromImages:offset:
writeBytes:strideBytes:
synchronizeOnCommandBuffer:
offset
printNDArray
.cxx_destruct
.cxx_construct
parent
_label
_buffer
_offset
_rowBytes
_library
initWithCommandBuffer:descriptor:
setReadCount:
readCount
_readCount
textureType
addObject:
userDictionary
objectForKey:
setObject:forKey:
removeObjectForKey:
initPrivateWithDevice:
initWithCoder:device:
decodeInt32ForKey:
encodeInt32:forKey:
copyWithZone:device:
maxTotalThreadsPerThreadgroup
setThreadgroupMemoryLength:atIndex:
initWithDevice:sourceDataType:destinationDataType:
initWithDevice:sourceDataType:destinationDataType:scanOp:
encodeToCommandBuffer:sourceBuffer:sourceOffset:destinationBuffer:destinationOffset:numEntries:
sourceDataType
destinationDataType
_kernelID
_sourceDataType
_destinationDataType
_scanOp
setConstantValue:type:atIndex:
newFunctionWithName:constantValues:completionHandler:
computeCommandEncoderWithDispatchType:
stringByAppendingString:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setMinFilter:
setMagFilter:
setNormalizedCoordinates:
setMipFilter:
newSamplerStateWithDescriptor:
rowBytesForColumns:dataType:
rowBytesFromColumns:dataType:
matrixDescriptorWithDimensions:columns:rowBytes:dataType:
matrixDescriptorWithRows:columns:rowBytes:dataType:
matrixDescriptorWithRows:columns:matrices:rowBytes:matrixBytes:dataType:
setRows:
setColumns:
setRowBytes:
_rows
_columns
_matrices
_matrixBytes
vectorDescriptorWithLength:vectors:vectorBytes:dataType:
vectorBytesForLength:dataType:
vectorDescriptorWithLength:dataType:
setLength:
vectors
vectorBytes
_length
_vectors
_vectorBytes
initPrivateWithDescriptor:device:
canAliasWithNDArrayDescriptor:
initWithBuffer:offset:descriptor:
doesAliasWithNDArray:
ndArrayWithCommandBuffer:descriptor:aliasing:
initWithCommandBuffer:matrixDescriptor:
temporaryMatrixWithCommandBuffer:matrixDescriptor:
prefetchStorageWithCommandBuffer:matrixDescriptorList:
initWithBuffer:length:dataType:
temporaryVectorWithCommandBuffer:descriptor:
prefetchStorageWithCommandBuffer:descriptorList:
resourceList
appendTexture:
appendBuffer:
appendTexture:format:
resourceListWithTextureDescriptors:
resourceListWithBufferSizes:
_list
makeAliasable
isAliasable
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
heapOffset
allocatedSize
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
iosurface
iosurfacePlane
pixelFormat
depth
mipmapLevelCount
sampleCount
usage
isFramebufferOnly
allowGPUOptimizedContents
swizzle
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
initWithResource:
temporaryStateWithCommandBuffer:
temporaryStateWithCommandBuffer:bufferSize:
temporaryStateWithCommandBuffer:textureDescriptor:
temporaryStateWithCommandBuffer:resourceList:
resource
isTemporary
initWithResources:
initWithDevice:bufferSize:
initWithDevice:textureDescriptor:
initWithDevice:resourceList:
resourceTypeAtIndex:
destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:
textureInfoAtIndex:
bufferSizeAtIndex:
resourceAtIndex:allocateMemory:
resourceCount
_resources
_resourceCount
_flags
_updatedAlready
getObjects:range:
initWithDevice:keyPairDataType:valuePairDataType:
initWithDevice:keyPairDataType:valuePairDataType:sortOp:
encodeToCommandBuffer:sourceKeyBuffer:sourceKeyOffset:sourceValueBuffer:sourceValueOffset:destinationKeyBuffer:destinationKeyOffset:destinationValueBuffer:destinationValueOffset:numEntries:
keyPairDataType
valuePairDataType
dataTypeSizeInBytes
_sortOp
_exclusiveScanKernel
_keyPairDataType
_valuePairDataType
status
error
cStringUsingEncoding:
localizedFailureReason
localizedDescription
enqueue
commit
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
presentDrawable:afterMinimumDuration:
waitUntilScheduled
waitUntilCompleted
blitCommandEncoder
renderCommandEncoderWithDescriptor:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
commandQueue
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
addHandlerToCommandBuffer:
retireHeap:cacheDelay:
initWithCommandBuffer:
newHeapBlock:
releaseHeapBlock:heapProvider:
commandBuffer
batchSizeHint
setBatchSizeHint:
heapProvider
setHeapProvider:
_cmdBuffer
_debugMode
_freeList
_frameList
_retainedResources
_userCacheFrame
_minimumBin
_batchSize
_needsRetain
_totalAllocationBytes
_cacheDelay
_commandBufferCount
_heapProvider
_isMPSCommandBuffer
setPixelFormat:
setWidth:
setHeight:
setArrayLength:
setTextureType:
setUsage:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newTextureWithDescriptor:
maxAvailableSizeWithAlignment:
heapBufferSizeAndAlignWithLength:options:
initForReadingFromData:device:error:
decodeTopLevelObjectOfClasses:forKey:error:
initWithObjects:count:
unarchivedObjectOfClasses:fromData:device:error:
initForReadingFromData:error:
unarchivedObjectOfClass:fromData:device:error:
unarchiveObjectWithData:device:
unarchiveTopLevelObjectWithData:device:error:
unarchiveObjectWithFile:device:
mpsMTLDevice
initForReadingWithData:device:
initWithDevice:imageDescriptor:
featureChannelsLayout
numberOfImages
imageForCommandBuffer:imageDescriptor:kernel:
setNumberOfImages:
batchRepresentation
arrayWithObjects:count:
imageBatchForCommandBuffer:imageDescriptor:kernel:count:
temporaryImageWithCommandBuffer:imageDescriptor:
imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:
imageDescriptorWithChannelFormat:width:height:featureChannels:
newTextureDescriptor
debugQuickLookObject
setFeatureChannels:
setFeatureChannelsLayout:
channelFormat
setChannelFormat:
_width
_height
_featureChannels
_numberOfImages
_channelFormat
_cacheMode
_storageMode
_usage
_featureChannelsLayout
_featureChannelFormat
_cpuCacheMode
initWithTexture:featureChannels:featureChannelsLayout:
initWithDescriptor:featureChannels:featureChannelsLayout:featureChannelFormat:onDevice:
initWithFormat:
initWithParentImage:sliceRange:featureChannels:
arrayWithObject:
batchRepresentationWithSubRange:
arrayWithCapacity:
setObject:atIndexedSubscript:
imageWithCGImage:
getPixelChannelSize
readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerColumn:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
precision
pixelSize
initWithTexture:featureChannels:
subImageWithFeatureChannelRange:
writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:imageIndex:
writeBytes:dataLayout:imageIndex:
featureChannelFormat
_textureType
_pixelInfo
_texture
temporaryImageWithCommandBuffer:textureDescriptor:featureChannels:
allObjects
temporaryImageWithCommandBuffer:textureDescriptor:
prefetchStorageWithCommandBuffer:imageDescriptorList:
sharedInitWithDevice:
allocWithZone:
encodeInt64:forKey:
encodeObject:forKey:
encodeBool:forKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
isEqualToString:
disableConcurrentEncoder
options
setOptions:
fileVersion
setFileVersion:
enableConcurrency
setEnableConcurrency:
_options
_enableConcurrency
_allowedOptions
_tuningParams
_maxTuningParams
_fileVersion
_privateOptions
uniformDistributionDescriptorWithMinimum:maximum:
defaultDistributionDescriptor
distributionType
setDistributionType:
minimum
setMinimum:
maximum
setMaximum:
mean
setMean:
standardDeviation
setStandardDeviation:
_minimum
_maximum
_mean
_standardDeviation
_distributionType
initWithDevice:destinationDataType:generatorType:distributionDescriptor:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:destinationBuffer:destinationOffset:numEntries:
_generatorType
initWithDevice:destinationDataType:seed:distributionDescriptor:
initWithDevice:destinationDataType:seed:
resetSeedOnCommandBuffer:seed:
synchronizeStateOnCommandBuffer:
_state
_pShift1
_pShift2
_pMR
_pMT
_pStateIdx
_bernoulliParameter
_uniformMin
_uniformMax
_counters
_seed
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
minimumLinearTextureAlignmentForPixelFormat:
initWithDevice:sourceDataType:destinationDataType:reduceOp:
_argkernelID
_reduceOp
newCommandQueue
isSubclassOfClass:
heapTextureSizeAndAlignWithDescriptor:
dictionary
setObject:forKeyedSubscript:
setComputeFunction:
setDriverCompilerOptions:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
userInfo
mainBundle
bundleIdentifier
newComputePipelineStateWithDescriptor:options:completionHandler:
newFunctionWithName:constantValues:error:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithDescriptor:error:
initWithBuffer:offset:
predicateWithBuffer:offset:
predicateBuffer
predicateOffset
_predicateBuffer
_predicateOffset
initWithMPSCommandBuffer:commandEncoder:mpsDevice:
predicate
dispatchThreads:threadsPerThreadgroup:
dispatchBufferWithOffset:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
setBuffers:offsets:withRange:
setBufferOffset:atIndex:
predicatedEncoderWithMPSCommandBuffer:commandEncoder:mpsDevice:
insertDebugSignpost:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setImageblockWidth:height:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
updateFence:
waitForFence:
useResource:usage:
useResources:count:usage:
useHeap:
useHeaps:count:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:
memoryBarrierWithResources:count:
dispatchType
forwardingTargetForSelector:
_owningMPSCommandBuffer
_originalCommandEncoder
_mpsDevice
_userBoundPipelineState
_userBinding1
_userBinding2
_userBinding3
commandBufferWithCommandBuffer:
rootCommandBuffer
commitAndContinue
commandBufferWithUnretainedReferences
commandBufferFromCommandQueue:
prefetchHeapForWorkloadSize:
setPredicate:
_currentDispatchBuffer
_offsetToCurrentFree
_predicate
_commandBuffer
maxThreadsPerThreadgroup
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"<MTLDevice>"16
@"<MTLDevice>"16@0:8
@"MPSExternalPluginBase"
@"<MTLDevice>"
@36@0:8I16Q20^Q28
@28@0:8I16@20
@28@0:8I16Q20
Q24@0:8Q16
v32@0:8Q16Q24
{MPSDimensionSlice=QQ}24@0:8Q16
v40@0:8Q16{MPSDimensionSlice=QQ}24
16@0:8
@92@0:8I16Q2028
v24@0:8@16
v32@0:8Q16^Q24
v16@0:8
I16@0:8
v20@0:8I16
v24@0:8Q16
@"MPSNDArrayDescriptor"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@40@0:8@16@24@32
@"MPSNDArray"40@0:8@"<MTLCommandBuffer>"16@"MPSNDArrayDescriptor"24@"MPSKernel"32
@48@0:8@16Q24Q32@40
v32@0:8@16@24
r^{MPSLibraryInfo=iI*{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}}16@0:8
@32@0:8@16@24
@32@0:8@16d24
@40@0:8@16@24Q32
v52@0:8@16@24I32Q36^q44
v68@0:8@16@24I32Q36Q44Q52Q60
v76@0:8@16@24I32Q36^q44^Q52Q60Q68
v60@0:8@16^{NSArray=#}24{MPSImageCoordinate=QQQ}32B56
v56@0:8@16^{NSArray=#}24{MPSImageCoordinate=QQQ}32
v24@0:8^q16
v32@0:8^v16^q24
@"NSString"
^{MPSDevice=^^?^{MPSDevice}@^{MPSDeviceFreeList}{atomic<MTLLibraryNode *>=A^{MTLLibraryNode}}[2[2[2{atomic<void *>=A^v}]]][563{MPSPixelCapabilities=b1b1b1b1b1b2b1b8}]{atomic<void *>=A^v}Ii{MPSGPUInfo=b8b8b8b16b4b20}[106{atomic<MPSLibrary *>=A^{MPSLibrary}}]}
@"MPSNDArray"
{MPSAutoBuffer="_buffer"{atomic<void *>="__a_"A^v}"_requestedSize"Q"_device"@"<MTLDevice>""_cache"@"MPSCommandBufferImageCache""_resourceSize"{?="size"Q"align"Q}}
^{MPSLibrary=@^{atomic<MPSKey_data *>}Q(?=^{MPSDeviceSpecificInfo}^{MPSDeviceBehaviors})Q[64^{MPSKey_data}]{_opaque_pthread_rwlock_t=q[192c]}^{?}}
@32@0:8@16I24I28
@36@0:8@16I24I28i32
@32@0:8^{_NSZone=}16@24
v64@0:8@16@24Q32@40Q48Q56
Q28@0:8Q16I24
@44@0:8Q16Q24Q32I40
@60@0:8Q16Q24Q32Q40Q48I56
@28@0:8Q16I24
@32@0:8@16^{MPSDevice=^^?^{MPSDevice}@^{MPSDeviceFreeList}{atomic<MTLLibraryNode *>=A^{MTLLibraryNode}}[2[2[2{atomic<void *>=A^v}]]][563{MPSPixelCapabilities=b1b1b1b1b1b2b1b8}]{atomic<void *>=A^v}Ii{MPSGPUInfo=b8b8b8b16b4b20}[106{atomic<MPSLibrary *>=A^{MPSLibrary}}]}24
@40@0:8@16Q24@32
@36@0:8@16Q24I32
@24@0:8Q16
v32@0:8@16Q24
^{ResourceListNode=^^?^{ResourceListNode}}
v24@0:8@"NSString"16
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
^v16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@32@0:8@16Q24
@48@0:8@16@24@32@40
{MPSStateTextureInfo=QQQQQQQ[4Q]}24@0:8Q16
@28@0:8Q16B24
^{MPSStateResource=S(?={MPSAutoTexture={atomic<id<MTLTexture> >=A@}{?=QQ}Q{MPSPixelInfo=b10b6b4b4b4b4b8b1b1b1b1b1b1b1b1b1b6b4b3b2}(?={?=^{MPSAutoTexture}II}{?=@(?={?=^{MPSDevice}}{?=@})})CC}{MPSAutoBuffer={atomic<void *>=A^v}Q@@{?=QQ}})}
v96@0:8@16@24Q32@40Q48@56Q64@72Q80Q88
@"MPSParallelExclusiveScan"
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLCommandQueue>"16@0:8
@"NSError"16@0:8
@"<MTLCommandBuffer>"
[65^{HeapNode}]
^{CacheFrame=^{CacheFrame}^{ResourceNode}^{HeapNodeBlock}}
^{ResourceNode=^{ResourceNode}@}
^{MPSAutoCache=@@^{CacheFrame}}
{atomic<long>="__a_"Aq}
@"<MPSHeapProvider>"
@48@0:8@16@24@32^@40
@48@0:8#16@24@32^@40
@40@0:8@16@24^@32
^{NSArray=#}48@0:8@16@24@32Q40
@"MPSImage"40@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32
^{NSArray=#}48@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32Q40
@48@0:8Q16Q24Q32Q40
@64@0:8Q16Q24Q32Q40Q48Q56
@56@0:8@16Q24Q32Q40@48
@48@0:8@16{_NSRange=QQ}24Q40
@32@0:8{_NSRange=QQ}16
^{NSArray=#}16@0:8
^{NSArray=#}32@0:8{_NSRange=QQ}16
v120@0:8^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v112@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v120@0:8r^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v128@0:8r^v16Q24Q32Q40Q48{?={?=QQQ}{?=QQQ}}56{?=QQ}104Q120
v112@0:8r^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v40@0:8^v16Q24Q32
v40@0:8r^v16Q24Q32
{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"featureChannelFormat"b3"_padding"b2}
@"MPSImage"
{MPSAutoTexture="_texture"{atomic<id<MTLTexture> >="__a_"A@}"_resourceSize"{?="size"Q"align"Q}"_rowBytes"Q"_pixelInfo"{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"featureChannelFormat"b3"_padding"b2}""(?="_subTex"{?="parent"^{MPSAutoTexture}"subRangeStart"I"subRangeSize"I}""{?="_descriptor"@"MTLTextureDescriptor"""(?="_tex"{?="device"^{MPSDevice}}"_temporary"{?="cache"@"MPSCommandBufferImageCache"})})"_type"C"_twiddled"C}
(?=I{?=b8b8b16})16@0:8
v20@0:8(?=I{?=b8b8b16})16
v20@0:8B16
(?="bits"I""{?="mpsKernelVersion"b8"intermediateObjectVersion"b8"version"b16})
@24@0:8f16f20
f16@0:8
v20@0:8f16
@40@0:8@16I24i28@32
v56@0:8@16@24@32Q40Q48
v48@0:8@16@24Q32Q40
@44@0:8@16I24Q28@36
@36@0:8@16I24Q28
@"<MTLBuffer>"
@40@0:8@16@24^{MPSDevice=^^?^{MPSDevice}@^{MPSDeviceFreeList}{atomic<MTLLibraryNode *>=A^{MTLLibraryNode}}[2[2[2{atomic<void *>=A^v}]]][563{MPSPixelCapabilities=b1b1b1b1b1b2b1b8}]{atomic<void *>=A^v}Ii{MPSGPUInfo=b8b8b8b16b4b20}[106{atomic<MPSLibrary *>=A^{MPSLibrary}}]}32
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8r^@16Q24Q32
v32@0:8r^@16Q24
v40@0:8@16@24Q32
v24@0:8@"<MTLComputePipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v24@0:8@"<MTLFence>"16
v32@0:8@"<MTLResource>"16Q24
v24@0:8@"<MTLHeap>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
@"MPSCommandBuffer"
@"<MTLComputeCommandEncoder>"
@"<MTLComputePipelineState>"
{UserBufferBindingData_s="userBoundBuffer"@"<MTLBuffer>""userBoundBuffer_set"B"userBoundBytes"^v"userBoundBytes_length"Q"userBoundBytes_set"B"userBoundOffset"Q}
@24@0:8^Q16
@"MPSPredicate"
h<(Rdn
[z`-
>e&6<
U_*1
H{e;
G,kv'z{
