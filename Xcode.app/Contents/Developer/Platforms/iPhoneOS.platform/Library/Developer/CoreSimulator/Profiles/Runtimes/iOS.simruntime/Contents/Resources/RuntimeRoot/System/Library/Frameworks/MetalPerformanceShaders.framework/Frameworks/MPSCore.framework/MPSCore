@(#)PROGRAM:MPSCore  PROJECT:MPS-1
St20bad_array_new_length
St9exception
St11logic_error
St12out_of_range
St12length_error
St9bad_alloc
v16@?0@"<MTLCommandBuffer>"8
_MPSCommandBufferEncoderIDListKey
com.apple.MetalPerformanceShaders
MetalPerformanceShaders
prefix
Primary
Secondary
Tertiary
Quaternary
Quinary
Error: Invalid KernelDAG, Number of core ops in the DAG should always be 1
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSKernelDAG.mm
DAGS {
read
read_
OUTPUT(
) : FUNCTION(
), INPUT(0), INPUT(1), INPUT(2);
DAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
Error getting visible function: 
 %s %s
ALWAYS_INLINE;
prefixDAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
writeTexture2d
write
NODE(Node_value)
postfix
NODE(
), INPUT(0), INPUT(1), 
postfixDAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
accum
accum_
Accumulate
postfixAccumDAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
OUTPUT(Node_
NODE(Node_
 : FUNCTION(
), INPUT(0), INPUT(1), NODE(Node_
readTexture2d
constant
), NODE(Node_
getCoord_
 : FUNCTION(getCoord_
cast
matrixMultiply
exponent
exponentBase2
exponentBase10
logarithm
logarithmBase2
logarithmBase10
square
squareRoot
reverseSquareRoot
reciprocal
absolute
negative
signOp
signbitOp
ceilOp
floorOp
roundOp
rintOp
sinOp
cosOp
tanOp
sinhOp
coshOp
tanhOp
asinOp
acosOp
atanOp
asinhOp
acoshOp
atanhOp
notOp
isInfinite
isFinite
isNaN
broadcast
bitwiseNOT
bitwisePopcount
realPartOp
imagPartOp
conjugateOp
absSquareOp
extractCoordVal_
flipCoord_
flipCoord4Axes
shiftData
minus_
shiftData4Axes
sliceOp
padOp
invStrideOp
strideOp
strideGradOp
bandPartOp
depthToSpace2d
spaceToDepth2d
batchToSpace3d
spaceToBatch3d
intAddition
addition
subtraction
multiplication
division
modulo
power
minimum
maximum
isEqual
isNotEqual
lessThan
lessThanEqualTo
greaterThan
greaterThanEqualTo
nand
xnor
atan2
bitwiseAND
bitwiseOR
bitwiseXOR
bitwiseLeftShift
bitwiseRightShift
complexCreate
complexScale
select
clamp
NODE(Node_0)
COREOP:
vector
Failed to stich function with error: %s
stichedFunction is not a visible function!
_u16
_i16
_u64
_i64
_2xu8
_2xi8
_2xu16
_2xi16
_2xu
_2xi
_2xu64
_2xi64
_2xf
_2xcf
_3xu8
_3xi8
_3xu16
_3xi16
_3xu
_3xi
_3xu64
_3xi64
_3xf
_3xcf
_4xu8
_4xi8
_4xu16
_4xi16
_4xu
_4xi
_4xu64
_4xi64
_4xf
_4xcf
unable to get function %s
), INPUT(0), INPUT(1), INPUT(2), INPUT(3);
), INPUT(0), INPUT(1), INPUT(2), INPUT(3), INPUT(4);
extractCoordSize
), NODE(Node_0);
setupCoordSizeSrc
setupCoordSizeDst
OUTPUT(Node_value) : FUNCTION(
NODE(Node_value) : FUNCTION(
extractValueCoord
extractValue
%016llx
basic_string
unnamed
MPSDataTypeInvalid
MPSDataTypeFloat32
MPSDataTypeFloat16
MPSDataTypeComplexFloat32
MPSDataTypeComplexFloat16
MPSDataTypeInt8
MPSDataTypeInt16
MPSDataTypeInt32
MPSDataTypeInt64
MPSDataTypeUInt8
MPSDataTypeUInt16
MPSDataTypeUInt32
MPSDataTypeUInt64
MPSDataTypeUnorm1
MPSDataTypeUnorm8
invalid
Failed to load library at "%s" error: "%s
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSDeviceComputePipelineState.mm
v8@?0
default
MetalPerformanceShaders internal error: library "%s" not found
/System/Library/Frameworks/MetalPerformanceShaders.framework
%s/Frameworks/%s.framework
/System/Cryptexes/OS
library bundle is nil for identifier %s
metallib
metallib not found: %s.metallib for identifier %s, %@
com.apple.MetalPerformanceShaders.MPSCore
MPSCore
com.apple.MetalPerformanceShaders.MPSNeuralNetwork
MPSNeuralNetwork
com.apple.MetalPerformanceShaders.MPSImage
MPSImage
com.apple.MetalPerformanceShaders.MPSMatrix
MPSMatrix
com.apple.MetalPerformanceShaders.MPSRayIntersector
MPSRayIntersector
com.apple.MetalPerformanceShaders.MPSNDArray
MPSNDArray
device:     %p "%@"
[%@ %@] error: dimension index (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Types/MPSNDArray.mm
[%@ %@] error: subRange.start (%lu) is not less than length of dimension[%lu] (%u)
[%@ %@] error: the range subRange.start + subRange.length does not fit in dimension[%lu] (%u)
[%@ %@] error: dimension index 1 (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
[%@ %@] error: dimension index 2 (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
[%@ %@] error: dimensionOrder must have all the dimension indices in [0, numberOfDimensions) present.
[%@ %@] Error: number of dimensions (%lu) may not exceed 16
numElements == numElementsBefore failed for the reshape operations
User memory error: The MPSImage default allocator belongs to MPS and should not be released by you.
_isTemporary was not correctly set
[%@ %@] Error dimension index (%lu) too large
[%@ %@] Error: -init is not a supported method for this object
[%@ %@] Error: descriptor may not be nil
[%@ %@] Error: NDArray dimension length > INT_MAX
[%@ %@] Error: total bytes of NDArray > 2**32
[%@ %@] Error: number of dimensions is greater than 16
[%@ %@] Error: dimension order out of bounds
[%@ %@] Error: slice offset out of bounds
[%@, %@] Error: buffer may not be nil
[%@, %@] Error: buffer is not large enough. Must be %lu bytes
When providing a destination NDArray aliasing is not allowed.
descriptor is NULL.
Requested matrix has a different number of elements.
NDArrayReshapeBatch
reshapeNDArrayData
NDArrayReshapeMatrix
NDArrayCopy
copyNDArrayData
Flattening export only available for dimensions >= 2.
NDArrayExport
Flattening export requested but not possible due to non-zero offsets.
NDArrayImport
copyNDArrayFromImage
copyNDArrayToImage
NDArray: importDataWithCommandBuffer %@ rank is %d, should be 4 or less
NDArray: importDataWithCommandBuffer %@ array is too large - fcOffset = %d, fcCopySize = %d, image FCs = %d
NDArray: importDataWithCommandBuffer %@ array is too large - xOffset = %d, xCopySize = %d, image width = %d
NDArray: importDataWithCommandBuffer %@ array is too large - yOffset = %d, yCopySize = %d, image height = %d
NDArray: importDataWithCommandBuffer %@ array is too large - batch copySize = %d, batchSize = %d
NDArrayCopyImage
void* src = [srcBuffer contents]; failed, probably private memory
MPSDataTypeFloatBit
MPSDataTypeComplexBit
MPSDataTypeSignedBit
MPSDataTypeNormalizedBit
MPSDataTypeBool
<Unknown datatype>
Array: %@
Rank: %d
Device: %@
MTLBuffer: %p
IOSurfaceBacked: %s
- dimensionLengths        = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- sliceLengths            = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- sliceOffsets            = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- dimensionOrder          = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- transposed sliceLengths = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- rowBytes                = %zu
MPSTemporaryNDArray underlying memory is already released as readCount is 0
MPSTemporaryNDArray readCount = %lu
MPSTemporaryNDArray underlying memory is already released as commandBuffer is completed
MPSTemporaryNDArray underlying memory is not yet allocated, it is usually allocated lazily just before a kernel writes to it
Underlying buffer missing
Checking temporaries is not supported
invalid _dataType for error checking
[%@ initWithBuffer:descriptor:] buffer may not be nil.
[%@ initWithCommandBuffer:descriptor:] descriptor may not be nil.
MPSTemporaryNDArray %p  invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
%@Temporary Array - readCount = %lu
MPS internal error: attempted to decrement readCount when already 0
%lu : %f(%a) *%f(%a) (
%f, %.3f ulps)
 - maxAbsErr(%lld) = %e, maxULPErr(%lld) = %f -> maxRelError = %f,   PSNR = %f
_MPSCommandBufferRetainListKey
%3.3d 
%2.2x 
%4.4x 
%5.5d 
0x%8.8x 
%10.10d 
%16llu 
%16lli 
%16.10f 
%24.14f 
(%16.10f, %16.10f) 
(%24.14f, %24.14f) 
/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/vImage
/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/vecLib
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
vImageConvert_PlanarFtoPlanar16F
vImageConvert_Planar16FtoPlanarF
vImagePermuteChannels_ARGB8888
Error: could not find vImage.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/Float2Half.mm
vImageByteSwap_Planar16U
hw.optional.f16c
Single pass is not guaranteed to work. Please use MPSParallelScanMultiPass
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelScan.mm
Cannot directly initialize MPSParallelScan. Use one of the sub-classes of MPSParallelScan.
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeInt32
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeUInt32
[%@ initWithDevice:sourceDataType:destinationDataType:] invalid sourceDataType
MPS_SINGLE_PASS_SPINLOCK_SCAN
[%@ initWithCoder:device:] Failed: unsupported file version.
[%@ encodeToCommandBuffer... sourceBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationBuffer may not be NULL]
MPSParallelScan.sourceDataType
MPSParallelScan.destinationDataType
MPSParallelScan.op
MPSParallelScan.kernelID
MPSParallelScan.scanImpl
MPSParallelScan.useSpinLock
fill_scan_lookback_status_buffer
single_pass_scan_int8_int32
single_pass_scan_int16_int32
single_pass_scan_int32_int32
single_pass_scan_int32_int32_multi
add_preceeding_tg_sums
teeny_tiny_one
parallelScanInt32Int32_substractLastValue
Metal Performance Shaders: you may not initialize a %@ with -init
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Types/MPSMatrix.mm
[%@ initWithBuffer:descriptor:] descriptor may not be nil.
[%@ initWithBuffer:descriptor:] not enough rowBytes for all the columns.
[%@ initWithBuffer:descriptor:] rowBytes is not a multiple of the element size.
[%@ initWithBuffer:descriptor:] buffer is too small (%lu) for matrix size (%lu bytes)
[%@ initWithDevice: %p descriptor:] device is not supported: %@
Returning nil.
Rows:  
Columns:
Matrices:
rowBytes:
matrixBytes:
MPSMatrix %p Cannot export to MPSNDArray: The matrices are not packed. matrixBytes = %lu but rows*rowBytes = %lu.
[%@ temporaryMatrixWithCommandBuffer:matrixDescriptor:] device is not supported: %@
Returning nil.
MPSTemporaryMatrix %p  invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
[%@ initWithDescriptor:device:] descriptor may not be nil.
[%@ initWithDescriptor:device:] not enough vectorBytes for each vector.
[%@ initWithDescriptor:device:] vectorBytes is not a multiple of the element size.
[%@ initWithBuffer:length:dataType] buffer may not be nil.
[%@ initWithBuffer: %p] device is not supported: %@
Returning nil.
[%@ initWithBuffer:length:dataType] buffer is too small (%lu) for vector size (%lu bytes)
[%@ initWithBuffer:descriptor:] not enough vectorBytes for each vector.
[%@ initWithBuffer:descriptor:] vectorBytes is not a multiple of the element size.
[%@ initWithBuffer:offset:descriptor] buffer is too small (%lu) for vector size (%lu bytes) and offset (%lu bytes)
[%@ initWithCommandBuffer:descriptor:] not enough vectorBytes for each vector.
[%@ initWithCommandBuffer:descriptor:] vectorBytes is not a multiple of the element size.
[%@ initWithCommandBuffer: %p] device is not supported: %@
Returning nil.
[%@ initWithResource:] Error: resource is neither a MTLTexture or a MTLBuffer
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/MPSState.mm
MPSState %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
%@ %p "%@" invalid operation: Adjusting read count on a non-temporary state.
%@ %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
readCount: %lu
isTemporary: %s
resource count: %lu
resources:
[%lu] texture %@
[%lu] buffer  %@
[%lu] <unknown resource format %u>
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.  They are GPU private and not readable on CPU.
[%@ textureInfoAtIndex] Error: index is too large
[%@ textureInfoAtIndex] Error: resource at index %lu is not a texture
[%@ bufferSizeAtIndex] Error: index is too large
[%@ bufferSizeAtIndex] Error: resource at index %lu is not a buffer
Error: attempted to resurrect or overrelease a state with readcount 0,
MPSStateBatchIncrementReadCount() Error: attempted to adjust readcount of object with count of %lu by %ld,
MPSImageBatchSynchronize(): Error: image[%lu] is a temporary image and can not be read on the CPU.
[%d] texture %@
[%d] buffer: size = %lu
%@%@
[%@ resource] Internal error: unhandled resource type
/Library/Caches/com.apple.xbs/Binaries/MetalPerformanceShaders_Sim/install/Symbols/BuiltProducts/MPSCore.framework/PrivateHeaders/Internal/MPSStateInternal.h
Error: %p is not a MTLBuffer or a MTLTexture
Cannot directly initialize MPSParallelSort. Use one of the sub-classes of MPSParallelSort.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelSort.mm
[%@ initWithDevice:keyPairDataType:valuePairDataType:] invalid keyPairDataType
[%@ initWithDevice:keyPairDataType:valuePairDataType:] invalid valuePairDataType
[%@ encodeToCommandBuffer... sourceKeyBuffer may not be NULL]
[%@ encodeToCommandBuffer... sourceValueBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationKeyBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationValueBuffer may not be NULL]
compute_histogram_bins_uint32
scatter_results_uint32
scatter_key_value_results_uint32
MPSParallelSort.keyPairDataType
MPSParallelSort.valuePairDataType
MPSParallelSort.op
MPSCommandBufferImageCache
Error: command buffer exited with error status, but did not provide an error message.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: command buffer exited with error status.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: 
[%@ initWithCommandBuffer:computeEncoder: commandBuffer may not be nil
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSCommandBufferImageCache.mm
[%@ initWithCommandBuffer:computeEncoder: commandBuffer does not conform to the MTLCommandBuffer protocol
MPS internal error: attempted to make a new heap for a command buffer that already has one
cache frame %lu:
probable %s leak: %p (label=%s)
Internal error: MPSCommandBufferImageCache destroyed while %lu MTLResources still outstanding. MTLResources might be leaked.
Internal error: Failed to clean up command buffer image cache frame list.
commandBuffer: %@
%lu MTLResources. %lu frames.
commandBuffer: %@
%lu heap blocks allocated for %lu bytes. %lu MTLResources. %lu frames.
commandBuffer: %@
MPSKernel: out of memory
Internal error: the popped cache frame wasn't the top of the stack
Internal error: Released a texture with no current cache frame.
Internal error: Released a texture not in current cache frame.
Attempted to create a temp texture using a non-writable MTLPixelFormat (%lu)
Failed to allocate temp texture descriptor for format %lu
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture storage mode must be MTLResourceStorageModePrivate.
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture descriptor.usage must be at least MTLTextureUsageShaderRead | MTLTextureUsageShaderWrite.
Failed to allocate private MTLTexture for format %s
Failed to allocate private MTLBuffer for size %lu
MPSGetTemporaryTextureFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempTexture() instead. Otherwise we may leak.
MPSGetTemporaryTextureFromCommandBufferCache: MTLPixelFormat (%lu) for descriptor is unsupported.
MPSGetTemporaryTextureFromCommandBufferCache: temp texture formats must be writable.
MPSImage internal error: attempted to resurrect dead image backing store.
MPSAutoTexture::AllocateTexture Is missing its texture descriptor
MPS internal error: ReleaseTemporaryTexture() called on non-temporary texture
(texture not yet allocated)
device: %@
descriptor:  %@
MPSMatrix internal error: attempted to create 0 sized object.
MPSGetTemporaryBufferFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempBuffer() instead. Otherwise we may leak.
Attempted to init a MPSMatrix twice?
MPS internal error: attempted to release a temporary buffer for a MPSMatrix?
buffer (not yet allocated)
size = %lu
device: %p
MPSCommandBufferImageCache internal error:  cache over popped
Failed to allocate TextureNode
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Types/MPSImage.mm
MTLTextureUsageShaderRead
MTLTextureUsageShaderWrite
MTLTextureUsageRenderTarget
MTLTextureUsagePixelFormatView
MTLTextureUsageUnknown
%@ | %s
MPSImageFeatureChannelsInterleavedPerPixel
MPSImageFeatureChannelsInterleavedPerArraySlice
MTLStorageModeShared
MTLStorageModeManaged
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLCPUCacheModeDefaultCache
MTLCPUCacheModeWriteCombined
width:             %lu
height:            %lu
featureChannels:   %lu
number of Images:  %lu
channel format:    %s
featureChanLayout: %s
cache mode:        %s
storage mode:      %s
usage:             %@
[%@ initWithDescriptor:featureChannels:onDevice:] descriptor may not be nil.
[%@ initWithDescriptor:featureChannels:onDevice:] device may not be nil.
array length must be multiple of (featureChannels+3)/4
[%@ initWithTexture:] textureType (%s) is unknown to MPS or has 0 color channels.
[%@ initWithTexture:] Texture pixel format doesnt match number of feature channels.
[%@ initWithTexture:] Texture pixel format doesn't match number of feature channels.
[%@ initWithDevice:] texture may not be nil.
[%@ initWithDevice:] device may not be nil.
Texture array length must be multiple of number of slices %lu needed to hold %lu feature channels
[%@ initWithDevice:imageDescriptor:] descriptor may not be nil.
[%@ initWithDevice:imageDescriptor:] width must be >= 1 .
[%@ initWithDevice:imageDescriptor:] height must be >= 1 .
[%@ initWithDevice:imageDescriptor:] feature channels must be >=1 .
[%@ initWithDevice:imageDescriptor:] number of images must be >= 1 .
[%@ initWithDevice:imageDescriptor:] descriptor.channelFormat may not be MPSImageFeatureChannelFormatNone
[%@ initWithParentImage:sliceRange:featureChannels:] Error: self and parent must belong to the same class.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: This method only works on images that are interleaved per texel.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: feature channels may not be zero.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: %lu feature channels is %lu slices. That doesn't divide evenly into sliceRange.length = %lu.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: parent image has readCount of 0
sub-image of %p %@
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.length must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: This method only works on images with a .numberOfImages = 1. Please make a sub-batch first.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location (%lu) does not fall within the number of feature channels in the image (%lu)
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location is larger than the number of feature channels in the image.
[%@ subImageWithFeatureChannelRange:] Error: The feature channel range {%lu, %lu} would result in a image with no texels.
[%@ subImageWithRange:] Error: The subRange.location is larger than the number of images in the image.
%@ "%@"
device: %p "%@"
width: %lu
height: %lu
featureChannelsPerImage: %lu
numberOfImages: %lu
MTLPixelFormat: %s
feature channel format: %s
parent:  %p
texture: %p
<Err: temporary images are unavailable for display. Contents are usually heavily aliased.>
<Err: texture backing store has not been materialized yet. Nothing to see here...>
<Err: can't display bfloat16 images>
vImageBuffer_Init
vImageCreateCGImageFromBuffer
CGColorSpaceRelease
CGImageRelease
CGColorSpaceCreateDeviceGray
<Err: unable to transcode texture to CGImage>
UIImage
[%@ initWithDevice:] feature channels for monochrome MTLPixelFormats must be 1.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatR{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] %lu channel MTLTextureFormats must have %lu feature channels.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRG{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] feature channels must be >=3 .
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] invalid texture format %lu.
[%@ %@] Error: the image texture you are reading from is uninitialized.
This typically means that nothing has written to it yet, and its contents are currently undefined.
Perhaps you meant to call writeBytes:... instead?%@
[%@ initWithDevice:] invalid region, region is bigger than imageSize
[%@ initWithDevice:] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ %@] Probable error: both region.origin.z and imageIndex are non-zero.
These two parameters are redundant with one another. Historically, region.origin.z was ignored. Please use one or the other, not both
[%@ %@] invalid region, range of images exceeds images in MPSImage
[%@ initWithDevice:] invalid featureChannelInfo, more feature channels %lu copied than available from offset %lu.
[%@ initWithDevice:] internal allocation error.
[%@ writeBytes:..] invalid region, region is bigger than imageSize
[%@ writeBytes:...] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ writeBytes:...] invalid featureChannelInfo, .numberOfFeatureChannelsToReadWrite : %lu not non-negative and multiple of 4 (unless .numberOfFeatureChannelsToReadWrite is allChannels)
[%@ %@] Probable error: both region.origin.z and imageIndex are non-zero. These two parameters are redundant with one another. Historically, region.origin.z was ignored. Please use one or the other, not both
[%@ writeBytes:...] invalid featureChannelInfo: more feature channels %lu copied than available from offset %lu.
[%@ writeBytes:...] internal allocation error.
[%@ initWithDevice:] width must be >= 1 .
[%@ initWithDevice:] height must be >= 1 .
[%@ initWithDevice:] feature channels must be >=1 .
[%@ initWithDevice:] number of images must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] pixel format (%lu) is unknown / unsupported.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] commandBuffer may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.width must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.height must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.arrayLength must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] error: descriptor storageMode must be MTLStorageModePrivate.
[%@ prefetchStorageWithCommandBuffer:imageDescriptorList:] Error: the descriptor must be configured with MTLStorageModePrivate
[%@ setPurgeableState:] error: changing purgeable state on a MPSCNNTemporaryImage will result in undefined behavior.  The memory is owned and managed by the framework.
MPSTemporaryImage %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
Error: attempted to decrement readCount when already 0.
If you need to read from a MPSTemporaryImage more than once, set the readCount to indicate how many times it will be read.
Please see the header comments about the MPSTemporaryImage.readCount property for more information.
Error: attempted to decrement readCount on a non-temporary image.
Error: attempted to resurrect or overrelease a object with readcount 0,
Error: attempted to increment readcount by %ld on object with readCount %lu:
MPSTemporaryImage %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
readCount: %lu
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.
They are GPU private and not readable on CPU.
[%@ %@] Error: you may not call readBytes: on a temporary image.
It shares memory with other images and buffers and is only valid in
a narrow time window on the GPU.
The storage is at minimum freed
when the command buffer completes or more likely reused by other
objects well before that happens. This call occurs at CPU time and
is by definition outside the window when the contents of the image are valid.
[%@ %@] Error: you may not call writeBytes:... on a temporary image.
It shares memory with other images and buffers and is only valid in
a narrow time window on the GPU.
The storage is at minimum freed
when the command buffer completes or more likely reused by other
objects well before that happens. The storage is not valid before the
command buffer runs. This call occurs at CPU time and is by definition
outside the window when the contents of the image are valid.
MPSImageFeatureChannelFormatNone
MPSImageFeatureChannelFormatUnorm8
MPSImageFeatureChannelFormatUnorm16
MPSImageFeatureChannelFormatFloat16
MPSImageFeatureChannelFormatFloat32
MPSImageFeatureChannelFormatBFloat16
<invalid format
[%@ initWithDevice:] invalid MTLPixelFormat %lu.
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) must be a unorm, snorm or float format
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) is not a writable format but marked MTLTextureUsageShaderWrite
[%@ initWithDevice:] MPSImage.width must be > 0. (If created with a MTLTexture, MTLTexture.width > ((featureChannels+3)/4).)
Error: This MPSImage (%lu slices) would exceed the maximum allowed number of slices in a Metal texture array (%lu slices).
[%@ initWithDevice:] BGRA MPSImages may be no more than 4 channels.  Requested: %lu
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float}.
vImageConvert_ARGB8888toPlanar8
vImageConvert_ARGB16UtoPlanar16U
vImageConvert_ARGBFFFFtoPlanarF
vImageConvert_Planar8toARGB8888
vImageConvert_Planar16UtoARGB16U
vImageConvert_PlanarFtoARGBFFFF
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Filters/MPSKernel.mm
[%@ initWithDevice:] Failed to get MPSDevice.
[%s initWithDevice: %p] device is not supported: %s
Returning nil.
[%@ copyWithZone:device:] device may not be nil.
[%s copyWithZone:device: %p] device is not supported: %s
Returning nil.
MPSKernelOptionsNone
MPSKernelOptionsSkipAPIValidation
MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsInsertDebugGroupsMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerboseMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
<invalid options list>
%@ "%@"
device:        %p
options:       %s
concurrent:    %s
[%@ initWithCoder:device] Error: file version too new to decode.
MPS_LOG_INFO
MPSKernel._fileVersion
MPSKernel._options
MPSKernel._verbosityLevel
MPSKernel._tuningParams
MPSKernel._maxTuningParams
MPSKernel._label
MPSKernel.originalDevice
MPSKernel.tableOptions
MPSKernel.enableConcurrency
Cannot directly initialize MPSParallelRandom. Use one of the sub-classes of MPSParallelRandom.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelRandom.mm
[%@ encode...] Error: commandBuffer may not be nil]
[%@ encode...] Error: destination may not be nil
[%@ encode...] Error: Number of requested results (%lu) is too large to fit in the destination image (%p) at the specified offset (%lu).
[%@ encode...] Error: The default distribution requires a data type of MPSDataTypeUInt32.
[%@ encode...] Error: Uniform distribution requires a data type of MPSDataTypeFloat32.
newBufferWithLength returned nil.
mtgp32SetState
mtgp32
MTGP32 shader only supports threadgroup sizes of 128 or 256.
kMPSParallelRandomDataTypeKey
kMPSParallelRandomDistributionKey
kMPSParallelRandomGeneratorKey
kMPSParallelRandomMTGP32StateStateArrayKey
kMPSParallelRandomMTGP32StateParameterShift1ArrayKey
kMPSParallelRandomMTGP32StateParameterShift2ArrayKey
kMPSParallelRandomMTGP32StateParameterMRArrayKey
kMPSParallelRandomMTGP32StateParameterMTArrayKey
kMPSParallelRandomMTGP32StateParameterMArrayKey
kMPSParallelRandomMTGP32StateParameterStateIdxArrayKey
kMPSParallelRandomStateArrayKey
kMPSParallelRandomParameterShift1ArrayKey
kMPSParallelRandomParameterShift2ArrayKey
kMPSParallelRandomParameterMRArrayKey
kMPSParallelRandomParameterMTArrayKey
kMPSParallelRandomParameterMArrayKey
kMPSParallelRandomParameterStateIdxArrayKey
[%@ encode...] Error: Number of requested results (%lu) must be a multiple of 4.
[%@ encode...] Error: Destination buffer offset (%lu) must be a multiple of 4.
philox
kMPSParallelRandomCountersArrayKey
MPS Internal error: overriding feature channel format currently only supported for bfloat16
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSDevicePixeInfo.mm
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelReduce.mm
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeFloat32
reduce_add_int8_int32
reduce_add_int16_int32
reduce_add_int32_int32
reduce_add_half_float
reduce_add_float_float
reduce_min_int8_int32
reduce_min_int16_int32
reduce_min_int32_int32
reduce_min_half_float
reduce_min_float_float
reduce_max_int8_int32
reduce_max_int16_int32
reduce_max_int32_int32
reduce_max_half_float
reduce_max_float_float
reduce_arg_minmax_int8_int32
reduce_arg_minmax_int16_int32
reduce_arg_minmax_int32_int32
reduce_arg_minmax_half_int32
reduce_arg_minmax_float_int32
reduce_multiple_passes_float
fill_reduce_lookback_status_buffer_Apple
reduce_multiple_passes_float_Apple
fill_reduce_lookback_status_buffer_MAC
reduce_multiple_passes_float_MAC
MPSParallelReduce.sourceDataType
MPSParallelReduce.destinationDataType
MPSParallelReduce.op
MPSParallelReduce.kernelID
MPSParallelReduce.argkernelID
MPSDisableExternalImplementationsSPI() error:  Unable to find MPSDevice for MTLDevice: %p
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSDevice.mm
MPSDevice.librarySerialQueue
MetalPerformanceShaders global queue
Library ID %lu not initialized yet. Skipping...
Testing library: %lu
Failed to create state: %@
Testing library functions with function constants
MPS_DISABLE_ALL_PLUGINS
MPS_ALLOW_ALL_PLUGINS
MPS_ENABLE_GEMM_PLUGIN
Testing library functions without function constants..
kMPSReturnSuccess
kMPSReturnOutOfMemory
kMPSReturnSourceInvalid
kMPSReturnSourceSizeInvalid
kMPSReturnSourceFormatInvalid
kMPSReturnDestinationInvalid
kMPSReturnDestinationSizeInvalid
kMPSReturnDestinationFormatInvalid
kMPSReturnBufferInvalid
kMPSReturnBufferSizeInvalid
kMPSReturnKernelSizeInvalid
kMPSReturnKernelValuesInvalid
kMPSReturnOptionsInvalid
kMPSReturnDeviceMismatch
kMPSReturnDeviceUnsupported
kMPSReturnOffsetInvalid
kMPSReturnClipRectInvalid
kMPSReturnEncoderInvalid
kMPSReturnCanNotOperateInPlace
kMPSReturnInternalError
kMPSReturnInvalidOperation
kMPSReturnCommandBufferInvalid
kMPSReturnInvalidMPSImageFormat
kMPSReturnInvalidMPSImageDimension
kMPSReturnUnsupportedMPSImageFeatureChannelFormat
kMPSReturnEdgeModeInvalid
kMPSReturnInvalidCNNTexture
kMPSReturnStrideInPixelsInvalid
kMPSReturnOperationNotSupportedByPlugin
kMPSReturnDescriptorInvalid
kMPSReturnEncodingInvalid
kMPSReturnInvalidState
<invalid MPSReturn code>
latency1
scheduleOption
latency2
latency_code_motion
func%llu_%s
MPSLibrary::MPSKey_Create internal error: Unable to get MPS kernel %@. Error: %@
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSLibrary.mm
MPSKernel MTLComputePipelineStateCache unable to load function %@.
%@: %@
Cached MTLComputePipelineState missing.
MPS internal error on MTLLibrary %p: invalid kernelID %u
MPS internal error on MTLLibrary %p: kernelInfo[%u].kernelName uninitialized
com.apple.MPS.MPSLibrary.preheat
MPS internal error: could not create specialized function with name %@
MPS compilation error:  failed to create MTLComputePipelineState for function: %@
MPS internal error: unable to acquire rwlock for reading: %d
MPS internal error: unable to acquire rwlock for writing: %d
MPS_GRAPH_CAPTURE_OUTPUT_FOLDER
_hash%llu
_userInfo%llu
_kernelID%u
_texT%llu
_bS%llu
_uC%llu
_ndC%llu
_ndS%llu
_imgLC%llu
_ndLH%llu_%llu_%llu_%llu
MPS_SHADER_PROFILING
[%@ initWithBuffer:offset:] buffer may not be nil.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSPredicate.mm
[%@ initWithBuffer:offset:] offset:(%lu) not multiple of 4.
[%@ initWithBuffer:offset:] offset:(%lu) is too large for buffer size: (%lu)
[%@ initWithBuffer:offset:] device: %@ does not support predication.
buffer:             %@
offset:            %lu
[%@ initWithDevice:] Failed to allocate buffer.
[%@ dispatchThreads:threadsPerThreadgroup:] Not supported with predicate.
Error: command buffer already committed.  State: %lu
predicate_dispatch_buffer
copy_float
copy_float_2darray
copy_uint
copy_uint_2darray
copy_int
copy_int_2darray
copy_float_generic
PipelineState: %p threads:{%lu,%lu,%lu} threadGroups:{%lu,%lu,%lu}
MPSKernelDispatch
PipelineState: %p %@
MPSCompilation
MPSComputeEncoder
MTLComputeCommandEncoder
MTLCommandEncoder
NSObject
MPSKernelDAGObject
MPSExternalPluginBase
MPSNDArrayDescriptor
MPSNDArrayDefaultAllocator
MPSNDArrayAllocator
NSSecureCoding
NSCoding
NSCopying
MPSNDArray
MPSTemporaryNDArrayDefaultAllocator
MPSTemporaryNDArray
MPSParallelScan
MPSParallelExclusiveScan
MPSParallelInclusiveScan
MPSMatrixDescriptor
MPSVectorDescriptor
MPSMatrix
MPSTemporaryMatrix
MPSVector
MPSTemporaryVector
MPSStateResourceList
MTLTexture
MTLResource
MTLBuffer
MPSState
MPSParallelSort
MPSParallelRadixSort
MTLCommandBuffer
MPSCommandBufferImageCache
MPSKeyedUnarchiver
MPSDeviceProvider
MPSImageDefaultAllocator
MPSImageAllocator
MPSTemporaryImageDefaultAllocator
MPSImageDescriptor
MPSImage
MPSTemporaryImage
MPSVirtualImage
MPSKernel
MPSParallelRandomDistributionDescriptor
MPSParallelRandom
MPSParallelRandomMTGP32State
MPSParallelRandomMTGP32
MPSParallelRandomPhilox
MPSParallelReduce
MPSParallelReduceSum
MPSParallelReduceMin
MPSParallelReduceMax
MPSParallelReduceArgMin
MPSParallelReduceArgMax
MPSPredicate
MPSPredicatedCommandEncoder
MPSCommandBuffer
MPSWorkloadStatistics
T@"<MTLHeap>",R
.cxx_destruct
TQ,N,V_rowBytes
GPUStartTime
TQ,R,N,V_height
T(?=I{?=b8b8b16}),N,V_fileVersion
TQ,R,N,V_offset
T@"<MPSHeapProvider>",&,N
_buffer
T@"<MTLBuffer>",R
_dimensionOrder
T@"<MTLBuffer>",R,N
_length
T@"<MTLCommandBuffer>",R,&,N,V_commandBuffer
_offset
T@"<MTLCommandQueue>",R
_parent
T@"<MTLDevice>",R
_scanOp
T@"<MTLDevice>",R,D
_sortOp
T@"<MTLResource>",R
_updatedAlready
T@"<MTLTexture>",R
_verbosityLevel
T@"MPSImage",R,&,N,V_parent
columns
T@"MPSPredicate",&,N,V_predicate
compressionType
T@"NSString",C
dealloc
T@"NSString",C,V_label
enqueue
TB,N,V_enableConcurrency
finalOp
TB,R
initWithBuffer:length:dataType:
TB,R,N
initWithDevice:destinationDataType:seed:distributionDescriptor:
TI,R,N,V_destinationDataType
initWithFormat:
TI,R,N,V_sourceDataType
kernelStartTime
TQ,N,V_batchSize
maximum
TQ,N,V_columns
TQ,N,V_distributionType
newComputePipelineStateWithDescriptor:options:reflection:error:
TQ,N,V_featureChannelsLayout
predicateBuffer
TQ,N,V_length
predicatedEncoderWithMPSCommandBuffer:commandEncoder:mpsDevice:
TQ,N,V_numberOfImages
release
TQ,N,V_readCount
resourceOptions
TQ,N,V_storageMode
setFileVersion:
TQ,N,V_width
setStorageMode:
TQ,R,D
setThreadgroupMemoryBytesWrite:
TQ,R,N,V_columns
swizzle
TQ,R,N,V_featureChannels
texture
TQ,R,N,V_matrices
unarchiveObjectWithFile:device:
TQ,R,N,V_numberOfDimensions
vectors
.cxx_construct
TI,N,V_dataType
GPUEndTime
TQ,N,V_scanImpl
T#,R
TQ,R,N,V_length
T,R,N,V_sha256
_allowedOptions
T@"<MPSHeapProvider>",&,N,V_heapProvider
_device
T@"<MTLBuffer>",R,&,N,V_predicateBuffer
_height
T@"<MTLCommandBuffer>",R,&,N
_numberOfImages
T@"<MTLCommandBuffer>",R,N,V_cmdBuffer
T@"<MTLComputeCommandEncoder>",R,N,V_originalCommandEncoder
_privateOptions
T@"<MTLDevice>",R,&,N
_sha256
T@"<MTLLogContainer>",R
_sourceDataType
T@"<MTLResource>",R,&,N
_userCacheFrame
T@"<MTLTexture>",R,N
arrayWithArray:
T@"MPSNDArray",R,&,N,V_parent
commandBufferWithCommandBuffer:
T@"NSError",R
computeFunction
T@"NSString",C,D
didModifyRange:
T@"NSString",R,C
featureChannels
TB,N,V_preferPackedRows
framebufferOnly
TB,R,GisFramebufferOnly
initWithDevice:
TI,R,N,V_dataType
initWithDevice:imageDescriptor:
TI,R,N,V_keyPairDataType
isProxy
TI,R,N,V_valuePairDataType
keyPairDataType
TQ,N,V_channelFormat
minimum
TQ,N,V_cpuCacheMode
newCommandQueue
TQ,N,V_featureChannels
options
TQ,N,V_height
predicateOffset
TQ,N,V_numberOfDimensions
pushDebugGroup:
TQ,N,V_options
resourceAtIndex:allocateMemory:
TQ,N,V_rows
setArrayLength:
TQ,N,V_usage
setPixelFormat:
TQ,R
setTextureType:
TQ,R,N
supportsFamily:
TQ,R,N,V_featureChannelFormat
tailSizeInBytes
TQ,R,N,V_featureChannelsLayout
unarchiveObjectWithData:device:
TQ,R,N,V_matrixBytes
useHeaps:count:
TQ,R,N,V_numberOfImages
TQ,R,N,V_predicateOffset
TQ,R,N,V_resourceCount
TQ,R,N,V_rowBytes
TQ,R,N,V_rows
TQ,R,N,V_vectorBytes
TQ,R,N,V_vectors
TQ,R,N,V_width
T^v,R,N,V_finalOp
T^v,R,N,V_kernelDAG
T^{__IOSurface=},R
Td,N,V_deviceMemoryBytesRead
Td,N,V_deviceMemoryBytesWrite
Td,N,V_float16Ops
Td,N,V_float32Ops
Td,N,V_integerOps
Td,N,V_threadgroupMemoryBytesRead
Td,N,V_threadgroupMemoryBytesWrite
Td,R
Tf,N,V_maximum
Tf,N,V_mean
Tf,N,V_minimum
Tf,N,V_standardDeviation
Tq,R
T{?=CCCC},R,N
T{MPSCommandBufferDescriptor=QQ},V_mpsCommandBufferDescriptor
T{MTLResourceID=Q},R
UTF8String
_argkernelID
_batchSize
_bernoulliParameter
_cacheDelay
_cacheMode
_channelFormat
_child
_childRefCount
_cmdBuffer
_columns
_commandBuffer
_commandBufferCount
_counters
_cpuCacheMode
_currentDispatchBuffer
_dataType
_dealloc_ok
_debugMode
_destinationDataType
_deviceMemoryBytesRead
_deviceMemoryBytesWrite
_dimensionLengths
_distributionType
_enableConcurrency
_encoder
_exclusiveScanKernel
_featureChannelFormat
_featureChannels
_featureChannelsLayout
_fileVersion
_finalOp
_flags
_float16Ops
_float32Ops
_frameList
_freeList
_functionNames
_functions
_generatorType
_heapProvider
_integerOps
_iosurface
_isMPSCommandBuffer
_isTemporary
_keepSubDAGArray
_kernelDAG
_kernelDAGSharedPtr
_kernelID
_keyPairDataType
_label
_labelHash
_library
_list
_matrices
_matrixBytes
_maxTuningParams
_maximum
_mean
_minimum
_minimumBin
_mpsCommandBufferDescriptor
_mpsDevice
_needsRetain
_normalMean
_normalStandardDeviation
_numberOfDimensions
_offsetToCurrentFree
_options
_originalCommandEncoder
_owningMPSCommandBuffer
_pMR
_pMT
_pShift1
_pShift2
_pStateIdx
_pixelInfo
_predicate
_predicateBuffer
_predicateOffset
_preferPackedRows
_readCount
_reduceOp
_resourceCount
_resources
_retainedResources
_rowBytes
_rows
_scanImpl
_seed
_self
_sliceLengths
_sliceOffsets
_standardDeviation
_state
_stateParams
_stitchedFunctions
_storageMode
_texture
_textureType
_threadgroupMemoryBytesRead
_threadgroupMemoryBytesWrite
_totalAllocationBytes
_transitionOp
_tuningParams
_uniformMax
_uniformMin
_usage
_useSpinLockVersion
_userBinding1
_userBinding2
_userBinding3
_userBoundPipelineState
_valuePairDataType
_vectorBytes
_vectors
_width
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
addCompletedHandler:
addDebugMarker:range:
addHandlerToCommandBuffer:
addObject:
addScheduledHandler:
allObjects
allValues
allocWithZone:
allocatedSize
allowGPUOptimizedContents
appendBuffer:
appendTexture:
appendTexture:format:
array
arrayForCommandBuffer:arrayDescriptor:kernel:
arrayLength
arrayViewWithCommandBuffer:computeEncoder:descriptor:destinationArray:aliasing:
arrayViewWithCommandBuffer:descriptor:aliasing:
arrayViewWithCommandBuffer:descriptor:destinationArray:aliasing:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
autorelease
batchRepresentation
batchRepresentationWithSubRange:
batchSizeHint
bitcodeData
blitCommandEncoder
blitCommandEncoderWithDescriptor:
buffer
bufferBytesPerRow
bufferForCommandBuffer:size:options:kernel:
bufferOffset
bufferSizeAtIndex:
bundlePath
bundleWithIdentifier:
bundleWithURL:
cStringUsingEncoding:
canAliasWithNDArrayDescriptor:
channelFormat
checkNDArray:nativeUlps:absoluteErr:
checkNDArray:nativeUlps:absoluteErr:PSNR:
class
commandBuffer
commandBufferFromCommandQueue:
commandBufferWithUnretainedReferences
commandQueue
commit
commitAndContinue
computeCommandEncoder
computeCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
conformsToProtocol:
contents
copy
copyDataWithCommandBuffer:images:offset:imageToArray:
copyWithZone:
copyWithZone:device:
count
countByEnumeratingWithState:objects:count:
cpuCacheMode
data
dataType
dataTypeSize
dataTypeSizeInBytes
dataWithCommandBuffer:
debugDescription
debugQuickLookObject
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeInt32ForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeTopLevelObjectOfClasses:forKey:error:
defaultAllocator
defaultDistributionDescriptor
depth
description
descriptor
descriptorWithDataType:dimensionCount:dimensionSizes:
descriptorWithDataType:dimensionSizes:
descriptorWithDataType:shape:
destinationDataType
destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:
device
deviceMemoryBytesRead
deviceMemoryBytesWrite
dictionary
dimensionOrder
disableConcurrentEncoder
dispatchBufferWithOffset:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchType
distributionType
doesAliasWithNDArray:
doesNotRecognizeSelector:
enableConcurrency
encodeBool:forKey:
encodeBytes:length:forKey:
encodeCopyWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:destinationOffsetBytes:destinationStrideBytes:
encodeInt32:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeReshapedBatchWithCommandBuffer:toBuffer:destinationDataType:destinationOffsetBytes:destinationRowBytes:destinationColumns:destinationRows:
encodeReshapedMatrixWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:destinationOffsetBytes:destinationRowBytes:destinationColumns:destinationRows:
encodeSignalEvent:value:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:stride:
encodeToCommandBuffer:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:destinationBuffer:destinationOffset:numEntries:stride:
encodeToCommandBuffer:sourceBuffer:sourceOffset:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:sourceKeyBuffer:sourceKeyOffset:sourceValueBuffer:sourceValueOffset:destinationKeyBuffer:destinationKeyOffset:destinationValueBuffer:destinationValueOffset:numEntries:
encodeWaitForEvent:value:
encodeWithCoder:
endEncoding
error
errorOptions
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
executeCommandsInBuffer:withRange:
exportDataWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:
exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
exportDataWithCommandBuffer:toImages:offset:
exportState
featureChannelFormat
featureChannelsLayout
fileURLWithPath:isDirectory:
fileVersion
firstMipmapInTail
float16Ops
float32Ops
forwardingTargetForSelector:
freeBuffer:forCommandBuffer:
functionConstantsDictionary
functionDescriptor
functionType
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getObjects:range:
getPixelChannelSize
getShape
getShapeVector
getStitchedFunctions:
globalTraceObjectID
gpuAddress
gpuCoreCount
gpuResourceID
graph
hasPostfixFunction
hash
hazardTrackingMode
heap
heapBufferSizeAndAlignWithLength:options:
heapOffset
heapProvider
heapTextureSizeAndAlignWithDescriptor:
height
imageBatchForCommandBuffer:imageDescriptor:kernel:count:
imageDescriptorWithChannelFormat:width:height:featureChannels:
imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:
imageForCommandBuffer:imageDescriptor:kernel:
imageWithCGImage:
importDataWithCommandBuffer:fromBuffer:sourceDataType:offset:rowStrides:
importDataWithCommandBuffer:fromImages:offset:
init
initForReadingFromData:device:error:
initForReadingFromData:error:
initForReadingWithData:device:
initPrivateWithDescriptor:device:
initPrivateWithDevice:
initWithBuffer:descriptor:
initWithBuffer:offset:
initWithBuffer:offset:descriptor:
initWithCapacity:
initWithCoder:
initWithCoder:device:
initWithCommandBuffer:
initWithCommandBuffer:descriptor:
initWithCommandBuffer:descriptor:buffer:
initWithCommandBuffer:matrixDescriptor:
initWithCommandBuffer:withDispatchType:
initWithDataType:dimensions:sizes:
initWithDescriptor:featureChannels:featureChannelsLayout:featureChannelFormat:onDevice:
initWithDevice:bufferSize:
initWithDevice:descriptor:
initWithDevice:destinationDataType:generatorType:distributionDescriptor:
initWithDevice:destinationDataType:seed:
initWithDevice:destinationDataType:state:distributionDescriptor:
initWithDevice:keyPairDataType:valuePairDataType:
initWithDevice:keyPairDataType:valuePairDataType:sortOp:
initWithDevice:matrix:
initWithDevice:resourceList:
initWithDevice:scalar:
initWithDevice:sourceDataType:destinationDataType:
initWithDevice:sourceDataType:destinationDataType:reduceOp:
initWithDevice:sourceDataType:destinationDataType:scanOp:
initWithDevice:textureDescriptor:
initWithKernelDAG:finalOp:
initWithMPSCommandBuffer:commandEncoder:mpsDevice:
initWithObjects:count:
initWithParentImage:sliceRange:featureChannels:
initWithResource:
initWithResources:
initWithSeed:
initWithTexture:featureChannels:
initWithTexture:featureChannels:featureChannelsLayout:
inputTensorAtIndex:
insertDebugSignpost:
integerOps
iosurface
iosurfacePlane
isAliasable
isEqual:
isEqualToString:
isFramebufferOnly
isKindOfClass:
isMemberOfClass:
isSparse
isSubclassOfClass:
isTemporary
kernelEndTime
label
length
lengthOfDimension:
libraryInfo:
localizedDescription
localizedFailureReason
logs
makeAliasable
makeStrideBytesInArray:
matrices
matrixBytes
matrixDescriptorWithDimensions:columns:rowBytes:dataType:
matrixDescriptorWithRows:columns:matrices:rowBytes:matrixBytes:dataType:
matrixDescriptorWithRows:columns:rowBytes:dataType:
matrixWithCommandBuffer:descriptor:aliasing:
maxAvailableSizeWithAlignment:
maxBatchSize
maxComputeThreadgroupMemory
maxTextureLayers
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
mean
memoryBarrierWithResources:count:
memoryBarrierWithScope:
minimumLinearTextureAlignmentForPixelFormat:
mipmapLevelCount
mpsCommandBufferDescriptor
mpsMTLDevice
name
ndArrayWithCommandBuffer:descriptor:aliasing:
newBufferWithLength:options:
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithFunction:error:
newFunctionWithDescriptor:error:
newFunctionWithName:
newFunctionWithName:constantValues:error:
newHeapBlock:protections:
newHeapWithDescriptor:
newLibraryWithDAG:functions:error:
newLibraryWithFile:error:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newSamplerStateWithDescriptor:
newTextureDescriptor
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureWithDescriptor:
newTextureWithDescriptor:offset:bytesPerRow:
normalDistributionDescriptorWithMean:standardDeviation:
normalDistributionDescriptorWithMean:standardDeviation:minimum:maximum:
numberOfDimensions
numberOfImages
numberOfInputTensors
numberOfOutputTensors
numberWithInteger:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKey:
offset
originalObject
outputTensorAtIndex:
parallelRenderCommandEncoderWithDescriptor:
parent
parentRelativeLevel
parentRelativeSlice
parentTexture
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permuteWithDimensionOrder:
pixelFormat
pixelSize
popDebugGroup
precision
predicate
predicateWithBuffer:offset:
preferPackedRows
prefetchHeapForWorkloadSize:
prefetchStorageWithCommandBuffer:descriptorList:
prefetchStorageWithCommandBuffer:imageDescriptorList:
prefetchStorageWithCommandBuffer:matrixDescriptorList:
presentDrawable:
presentDrawable:atTime:
printNDArray
printNDArrayToFile:
protectionOptions
readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:imageIndex:
readBytes:strideBytes:
readCount
reinitializeDistributionDescriptor:
releaseHeapBlock:heapProvider:
removeAllDebugMarkers
removeObjectForKey:
renderCommandEncoderWithDescriptor:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
resetSeedOnCommandBuffer:seed:
reshapeWithDimensionCount:dimensionSizes:
reshapeWithShape:
resource
resourceCount
resourceList
resourceListWithBufferSizes:
resourceListWithTextureDescriptors:
resourceSize
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
resourceTypeAtIndex:
respondsToSelector:
retain
retainCount
retainedReferences
retireHeap:cacheDelay:
rootCommandBuffer
rootResource
rowBytes
rowBytesForColumns:dataType:
rowBytesFromColumns:dataType:
rows
safeArrayViewWithCommandBuffer:computeEncoder:descriptor:aliasing:
safeArrayViewWithCommandBuffer:descriptor:aliasing:
sampleCount
sampleCountersInBuffer:atSampleIndex:withBarrier:
scanImpl
self
setAccelerationStructure:atBufferIndex:
setBatchSizeHint:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setChannelFormat:
setColumns:
setComputeFunction:
setComputePipelineState:
setConstantValue:type:atIndex:
setConstantValues:
setCpuCacheMode:
setDataType:
setDeviceMemoryBytesRead:
setDeviceMemoryBytesWrite:
setDistributionType:
setDriverCompilerOptions:
setEnableConcurrency:
setFeatureChannels:
setFeatureChannelsLayout:
setFloat16Ops:
setFloat32Ops:
setHeapProvider:
setHeight:
setImageblockWidth:height:
setIntegerOps:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setLabel:
setLength:
setLengthOfDimension:atIndex:
setLinkedFunctions:
setMagFilter:
setMaximum:
setMean:
setMinFilter:
setMinimum:
setMipFilter:
setMpsCommandBufferDescriptor:
setName:
setNormalizedCoordinates:
setNumberOfDimensions:
setNumberOfImages:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setPredicate:
setPreferPackedRows:
setPrivateFunctions:
setPurgeableState:
setRAddressMode:
setReadCount:
setResourceOptions:
setRowBytes:
setRows:
setSAddressMode:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:withRange:
setScanImpl:
setSize:
setSpecializedName:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setStandardDeviation:
setTAddressMode:
setTexture:atIndex:
setTextureWriteRoundingMode:
setTextures:withRange:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setThreadgroupMemoryBytesRead:
setThreadgroupMemoryLength:atIndex:
setUsage:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setWidth:
sharedInitWithDevice:
size
sliceDimension:withSubrange:
sliceRangeForDimension:
sourceDataType
standardDeviation
status
storageMode
stringByAppendingFormat:
stringByAppendingString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subImageWithFeatureChannelRange:
superclass
supports32BitFloatFiltering
supportsArrayOfTextures
supportsCommandBufferJump
supportsFloat16BCubicFiltering
supportsLinearTextureFromSharedBuffer
supportsNorm16BCubicFiltering
supportsQuadShufflesAndBroadcast
supportsReadWriteTextureArgumentsTier2
supportsSIMDReduction
supportsSIMDShuffleAndFill
supportsSIMDShufflesAndBroadcast
supportsSecureCoding
supportsTextureWriteRoundingMode:
synchronizeOnCommandBuffer:
synchronizeStateOnCommandBuffer:
temporaryArrayViewWithCommandBuffer:computeEncoder:descriptor:aliasing:
temporaryArrayViewWithCommandBuffer:descriptor:aliasing:
temporaryImageWithCommandBuffer:imageDescriptor:
temporaryImageWithCommandBuffer:textureDescriptor:
temporaryImageWithCommandBuffer:textureDescriptor:featureChannels:
temporaryMatrixWithCommandBuffer:matrixDescriptor:
temporaryNDArrayWithCommandBuffer:descriptor:
temporaryStateWithCommandBuffer:
temporaryStateWithCommandBuffer:bufferSize:
temporaryStateWithCommandBuffer:resourceList:
temporaryStateWithCommandBuffer:textureDescriptor:
temporaryVectorWithCommandBuffer:descriptor:
textureInfoAtIndex:
textureType
threadExecutionWidth
threadgroupMemoryBytesRead
threadgroupMemoryBytesWrite
transposeDimension:withDimension:
unarchiveTopLevelObjectWithData:device:error:
unarchivedObjectOfClass:fromData:device:error:
unarchivedObjectOfClasses:fromData:device:error:
uniformDistributionDescriptorWithMinimum:maximum:
unsignedIntegerValue
updateFence:
usage
useHeap:
useResource:usage:
useResources:count:usage:
userDictionary
userInfo
valuePairDataType
vectorBytes
vectorBytesForLength:dataType:
vectorDescriptorWithLength:dataType:
vectorDescriptorWithLength:vectors:vectorBytes:dataType:
waitForFence:
waitUntilCompleted
waitUntilScheduled
width
writeBytes:dataLayout:bytesPerColumn:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:imageIndex:
writeBytes:strideBytes:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8@16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v32@0:8Q16Q24
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8r^@16Q24Q32
v32@0:8r^@16Q24
v40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24Q32
v24@0:8Q16
v36@0:8@16Q24B32
v24@0:8@"<MTLComputePipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v24@0:8@"<MTLFence>"16
v32@0:8@"<MTLResource>"16Q24
v24@0:8@"<MTLHeap>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
@32@0:8@16Q24
@"<MTLComputeCommandEncoder>"
@"<MTLComputePipelineState>"
r^v24@0:8Q16
@32@0:8^v16^v24
@24@0:8@16
^v16@0:8
16@0:8
{shared_ptr<MPSKernelDAG>="__ptr_"^{MPSKernelDAG}"__cntrl_"^{__shared_weak_count}}
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
[5B]
@24@0:8@"<MTLDevice>"16
@"MPSExternalPluginBase"
@"<MTLDevice>"
@36@0:8I16Q20^Q28
@28@0:8I16@20
@28@0:8I16Q20
Q24@0:8Q16
{MPSDimensionSlice=QQ}24@0:8Q16
v40@0:8Q16{MPSDimensionSlice=QQ}24
v24@0:8^Q16
@92@0:8I16Q2028
{unique_ptr<const std::vector<long>, std::default_delete<const std::vector<long>>>={__compressed_pair<const std::vector<long> *, std::default_delete<const std::vector<long>>>=^v}}16@0:8
v32@0:8Q16^Q24
I16@0:8
v20@0:8I16
v20@0:8B16
@"MPSNDArrayDescriptor"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@40@0:8@16@24@32
@"MPSNDArray"40@0:8@"<MTLCommandBuffer>"16@"MPSNDArrayDescriptor"24@"MPSKernel"32
@48@0:8@16Q24Q32@40
v32@0:8@16@24
r^{MPSLibraryInfo=iI*^?{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}}24@0:8^v16
@32@0:8@16@24
@32@0:8@16d24
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
v48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
v52@0:8@16@24I32Q36^q44
v68@0:8@16@24I32Q36Q44Q52Q60
v76@0:8@16@24@32I40Q44Q52Q60Q68
v60@0:8@16@24@32I40Q44^q52
v76@0:8@16@24I32Q36^q44^Q52Q60Q68
v84@0:8@16@24@32I40Q44^q52^Q60Q68Q76
v60@0:8@16@24{MPSImageCoordinate=QQQ}32B56
v56@0:8@16@24{MPSImageCoordinate=QQQ}32
v24@0:8^q16
v32@0:8^v16^q24
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
@32@0:8r^f16f24f28
@36@0:8r^f16f24f28f32
@"NSString"
@"MPSNDArray"
{MPSAutoBuffer="_buffer"{atomic<void *>="__a_"{__cxx_atomic_impl<void *, std::__cxx_atomic_base_impl<void *>>="__a_value"A^v}}"_requestedSize"Q"_device"@"<MTLDevice>""_cache"@"MPSCommandBufferImageCache""_resourceSize"{?="size"Q"align"Q}}
^{__IOSurface=}
@"<MTLCommandBuffer>"
@32@0:8@16I24I28
@36@0:8@16I24I28i32
@32@0:8^{_NSZone=}16@24
v64@0:8@16@24Q32@40Q48Q56
Q28@0:8Q16I24
@44@0:8Q16Q24Q32I40
@60@0:8Q16Q24Q32Q40Q48I56
@28@0:8Q16I24
@32@0:8@16^v24
@40@0:8@16Q24@32
@36@0:8@16Q24I32
@24@0:8Q16
^{ResourceListNode=^^?^{ResourceListNode}}
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
q16@0:8
{MTLResourceID=Q}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16@24@32@40
{MPSStateTextureInfo=QQQQQQQ[4Q]}24@0:8Q16
@28@0:8Q16B24
v96@0:8@16@24Q32@40Q48@56Q64@72Q80Q88
@"MPSParallelExclusiveScan"
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLCommandQueue>"16@0:8
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
@32@0:8Q16Q24
[65^{HeapNode}]
^{CacheFrame=^{CacheFrame}^{ResourceNode}^{HeapNodeBlock}}
^{ResourceNode=^{ResourceNode}@}
^{MPSAutoCache=@@^{CacheFrame}}
{atomic<long>="__a_"{__cxx_atomic_impl<long, std::__cxx_atomic_base_impl<long>>="__a_value"Aq}}
@"<MPSHeapProvider>"
@48@0:8@16@24@32^@40
@48@0:8#16@24@32^@40
@40@0:8@16@24^@32
@"MPSImage"40@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32
@"NSArray"48@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32Q40
@48@0:8Q16Q24Q32Q40
@64@0:8Q16Q24Q32Q40Q48Q56
@56@0:8@16Q24Q32Q40@48
@48@0:8@16{_NSRange=QQ}24Q40
@32@0:8{_NSRange=QQ}16
v120@0:8^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v112@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v120@0:8r^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v128@0:8r^v16Q24Q32Q40Q48{?={?=QQQ}{?=QQQ}}56{?=QQ}104Q120
v112@0:8r^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v40@0:8^v16Q24Q32
{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"featureChannelFormat"b3"_padding"b2}
@"MPSImage"
{MPSAutoTexture="_texture"{atomic<id<MTLTexture>>="__a_"{__cxx_atomic_impl<id<MTLTexture>, std::__cxx_atomic_base_impl<id<MTLTexture>>>="__a_value"A@}}"_resourceSize"{?="size"Q"align"Q}"_rowBytes"Q"_pixelInfo"{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"featureChannelFormat"b3"_padding"b2}""(?="_subTex"{?="parent"^{MPSAutoTexture}"subRangeStart"I"subRangeSize"I}""{?="_descriptor"@"MTLTextureDescriptor"""(?="_tex"{?="device"^{MPSDevice}}"_temporary"{?="cache"@"MPSCommandBufferImageCache"})})"_type"C"_twiddled"C}
(?=I{?=b8b8b16})16@0:8
v20@0:8(?=I{?=b8b8b16})16
(?="bits"I""{?="mpsKernelVersion"b8"intermediateObjectVersion"b8"version"b16})
@24@0:8f16f20
@32@0:8f16f20f24f28
f16@0:8
v20@0:8f16
@40@0:8@16I24i28@32
v56@0:8@16@24@32Q40Q48
v60@0:8@16@24@32Q40Q48I56
v48@0:8@16@24Q32Q40
v52@0:8@16@24Q32Q40I48
{?="shift1"^I"shift2"^I"mR"^"mT"^"M"^I"stateIdx"^I"maxGenerators"I}
@44@0:8@16I24Q28@36
@36@0:8@16I24Q28
@44@0:8@16I24@28@36
@"<MTLBuffer>"
@40@0:8@16@24^v32
@"MPSCommandBuffer"
{UserBufferBindingData_s="userBoundBuffer"@"<MTLBuffer>""userBoundBuffer_set"B"userBoundBytes"^v"userBoundBytes_length"Q"userBoundBytes_set"B"userBoundOffset"Q}
@24@0:8^Q16
{MPSCommandBufferDescriptor=QQ}16@0:8
v32@0:8{MPSCommandBufferDescriptor=QQ}16
@"MPSPredicate"
{MPSCommandBufferDescriptor="encoderCount"Q"producedValues"Q}
v24@0:8d16
h<(Rdn
[z`-
>e&6<
U_*1
H{e;
G,kv'z{
@(#)PROGRAM:MPSCore  PROJECT:MPS-1
St20bad_array_new_length
St9exception
St11logic_error
St12out_of_range
St12length_error
St9bad_alloc
v16@?0@"<MTLCommandBuffer>"8
_MPSCommandBufferEncoderIDListKey
com.apple.MetalPerformanceShaders
MetalPerformanceShaders
prefix
Primary
Secondary
Tertiary
Quaternary
Quinary
Error: Invalid KernelDAG, Number of core ops in the DAG should always be 1
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSKernelDAG.mm
DAGS {
read
read_
OUTPUT(
) : FUNCTION(
), INPUT(0), INPUT(1), INPUT(2);
DAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
Error getting visible function: 
 %s %s
ALWAYS_INLINE;
prefixDAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
writeTexture2d
write
NODE(Node_value)
postfix
NODE(
), INPUT(0), INPUT(1), 
postfixDAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
accum
accum_
Accumulate
postfixAccumDAG string has been copied unnecessarily. Reserved capacity (%lu) doesn't match final capacity (%lu).
OUTPUT(Node_
NODE(Node_
 : FUNCTION(
), INPUT(0), INPUT(1), NODE(Node_
readTexture2d
constant
), NODE(Node_
getCoord_
 : FUNCTION(getCoord_
cast
matrixMultiply
exponent
exponentBase2
exponentBase10
logarithm
logarithmBase2
logarithmBase10
square
squareRoot
reverseSquareRoot
reciprocal
absolute
negative
signOp
signbitOp
ceilOp
floorOp
roundOp
rintOp
sinOp
cosOp
tanOp
sinhOp
coshOp
tanhOp
asinOp
acosOp
atanOp
asinhOp
acoshOp
atanhOp
notOp
isInfinite
isFinite
isNaN
broadcast
bitwiseNOT
bitwisePopcount
realPartOp
imagPartOp
conjugateOp
absSquareOp
extractCoordVal_
flipCoord_
flipCoord4Axes
shiftData
minus_
shiftData4Axes
sliceOp
padOp
invStrideOp
strideOp
strideGradOp
bandPartOp
depthToSpace2d
spaceToDepth2d
batchToSpace3d
spaceToBatch3d
intAddition
addition
subtraction
multiplication
division
modulo
power
minimum
maximum
isEqual
isNotEqual
lessThan
lessThanEqualTo
greaterThan
greaterThanEqualTo
nand
xnor
atan2
bitwiseAND
bitwiseOR
bitwiseXOR
bitwiseLeftShift
bitwiseRightShift
complexCreate
complexScale
select
clamp
NODE(Node_0)
COREOP:
vector
Failed to stich function with error: %s
stichedFunction is not a visible function!
_u16
_i16
_u64
_i64
_2xu8
_2xi8
_2xu16
_2xi16
_2xu
_2xi
_2xu64
_2xi64
_2xf
_2xcf
_3xu8
_3xi8
_3xu16
_3xi16
_3xu
_3xi
_3xu64
_3xi64
_3xf
_3xcf
_4xu8
_4xi8
_4xu16
_4xi16
_4xu
_4xi
_4xu64
_4xi64
_4xf
_4xcf
unable to get function %s
), INPUT(0), INPUT(1), INPUT(2), INPUT(3);
), INPUT(0), INPUT(1), INPUT(2), INPUT(3), INPUT(4);
extractCoordSize
), NODE(Node_0);
setupCoordSizeSrc
setupCoordSizeDst
OUTPUT(Node_value) : FUNCTION(
NODE(Node_value) : FUNCTION(
extractValueCoord
extractValue
%016llx
basic_string
unnamed
MPSDataTypeInvalid
MPSDataTypeFloat32
MPSDataTypeFloat16
MPSDataTypeComplexFloat32
MPSDataTypeComplexFloat16
MPSDataTypeInt8
MPSDataTypeInt16
MPSDataTypeInt32
MPSDataTypeInt64
MPSDataTypeUInt8
MPSDataTypeUInt16
MPSDataTypeUInt32
MPSDataTypeUInt64
MPSDataTypeUnorm1
MPSDataTypeUnorm8
invalid
Failed to load library at "%s" error: "%s
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSDeviceComputePipelineState.mm
v8@?0
default
MetalPerformanceShaders internal error: library "%s" not found
/System/Library/Frameworks/MetalPerformanceShaders.framework
%s/Frameworks/%s.framework
/System/Cryptexes/OS
library bundle is nil for identifier %s
metallib
metallib not found: %s.metallib for identifier %s, %@
com.apple.MetalPerformanceShaders.MPSCore
MPSCore
com.apple.MetalPerformanceShaders.MPSNeuralNetwork
MPSNeuralNetwork
com.apple.MetalPerformanceShaders.MPSImage
MPSImage
com.apple.MetalPerformanceShaders.MPSMatrix
MPSMatrix
com.apple.MetalPerformanceShaders.MPSRayIntersector
MPSRayIntersector
com.apple.MetalPerformanceShaders.MPSNDArray
MPSNDArray
device:     %p "%@"
[%@ %@] error: dimension index (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Types/MPSNDArray.mm
[%@ %@] error: subRange.start (%lu) is not less than length of dimension[%lu] (%u)
[%@ %@] error: the range subRange.start + subRange.length does not fit in dimension[%lu] (%u)
[%@ %@] error: dimension index 1 (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
[%@ %@] error: dimension index 2 (%lu) not within number of dimensions (%lu)
Dimension indices are 0-based
[%@ %@] error: dimensionOrder must have all the dimension indices in [0, numberOfDimensions) present.
[%@ %@] Error: number of dimensions (%lu) may not exceed 16
numElements == numElementsBefore failed for the reshape operations
User memory error: The MPSImage default allocator belongs to MPS and should not be released by you.
_isTemporary was not correctly set
[%@ %@] Error dimension index (%lu) too large
[%@ %@] Error: -init is not a supported method for this object
[%@ %@] Error: descriptor may not be nil
[%@ %@] Error: NDArray dimension length > INT_MAX
[%@ %@] Error: total bytes of NDArray > 2**32
[%@ %@] Error: number of dimensions is greater than 16
[%@ %@] Error: dimension order out of bounds
[%@ %@] Error: slice offset out of bounds
[%@, %@] Error: buffer may not be nil
[%@, %@] Error: buffer is not large enough. Must be %lu bytes
When providing a destination NDArray aliasing is not allowed.
descriptor is NULL.
Requested matrix has a different number of elements.
NDArrayReshapeBatch
reshapeNDArrayData
NDArrayReshapeMatrix
NDArrayCopy
copyNDArrayData
Flattening export only available for dimensions >= 2.
NDArrayExport
Flattening export requested but not possible due to non-zero offsets.
NDArrayImport
copyNDArrayFromImage
copyNDArrayToImage
NDArray: importDataWithCommandBuffer %@ rank is %d, should be 4 or less
NDArray: importDataWithCommandBuffer %@ array is too large - fcOffset = %d, fcCopySize = %d, image FCs = %d
NDArray: importDataWithCommandBuffer %@ array is too large - xOffset = %d, xCopySize = %d, image width = %d
NDArray: importDataWithCommandBuffer %@ array is too large - yOffset = %d, yCopySize = %d, image height = %d
NDArray: importDataWithCommandBuffer %@ array is too large - batch copySize = %d, batchSize = %d
NDArrayCopyImage
void* src = [srcBuffer contents]; failed, probably private memory
MPSDataTypeFloatBit
MPSDataTypeComplexBit
MPSDataTypeSignedBit
MPSDataTypeNormalizedBit
MPSDataTypeBool
<Unknown datatype>
Array: %@
Rank: %d
Device: %@
MTLBuffer: %p
IOSurfaceBacked: %s
- dimensionLengths        = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- sliceLengths            = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- sliceOffsets            = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- dimensionOrder          = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- transposed sliceLengths = [ %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d ]
- rowBytes                = %zu
MPSTemporaryNDArray underlying memory is already released as readCount is 0
MPSTemporaryNDArray readCount = %lu
MPSTemporaryNDArray underlying memory is already released as commandBuffer is completed
MPSTemporaryNDArray underlying memory is not yet allocated, it is usually allocated lazily just before a kernel writes to it
Underlying buffer missing
Checking temporaries is not supported
invalid _dataType for error checking
[%@ initWithBuffer:descriptor:] buffer may not be nil.
[%@ initWithCommandBuffer:descriptor:] descriptor may not be nil.
MPSTemporaryNDArray %p  invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
%@Temporary Array - readCount = %lu
MPS internal error: attempted to decrement readCount when already 0
%lu : %f(%a) *%f(%a) (
%f, %.3f ulps)
 - maxAbsErr(%lld) = %e, maxULPErr(%lld) = %f -> maxRelError = %f,   PSNR = %f
_MPSCommandBufferRetainListKey
%3.3d 
%2.2x 
%4.4x 
%5.5d 
0x%8.8x 
%10.10d 
%16llu 
%16lli 
%16.10f 
%24.14f 
(%16.10f, %16.10f) 
(%24.14f, %24.14f) 
/System/Library/Frameworks/Accelerate.framework/Frameworks/vImage.framework/vImage
/System/Library/Frameworks/Accelerate.framework/Frameworks/vecLib.framework/vecLib
/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
vImageConvert_PlanarFtoPlanar16F
vImageConvert_Planar16FtoPlanarF
vImagePermuteChannels_ARGB8888
Error: could not find vImage.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/Float2Half.mm
vImageByteSwap_Planar16U
Single pass is not guaranteed to work. Please use MPSParallelScanMultiPass
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelScan.mm
Cannot directly initialize MPSParallelScan. Use one of the sub-classes of MPSParallelScan.
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeInt32
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeUInt32
[%@ initWithDevice:sourceDataType:destinationDataType:] invalid sourceDataType
MPS_SINGLE_PASS_SPINLOCK_SCAN
[%@ initWithCoder:device:] Failed: unsupported file version.
[%@ encodeToCommandBuffer... sourceBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationBuffer may not be NULL]
MPSParallelScan.sourceDataType
MPSParallelScan.destinationDataType
MPSParallelScan.op
MPSParallelScan.kernelID
MPSParallelScan.scanImpl
MPSParallelScan.useSpinLock
fill_scan_lookback_status_buffer
single_pass_scan_int8_int32
single_pass_scan_int16_int32
single_pass_scan_int32_int32
single_pass_scan_int32_int32_multi
add_preceeding_tg_sums
teeny_tiny_one
parallelScanInt32Int32_substractLastValue
Metal Performance Shaders: you may not initialize a %@ with -init
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Types/MPSMatrix.mm
[%@ initWithBuffer:descriptor:] descriptor may not be nil.
[%@ initWithBuffer:descriptor:] not enough rowBytes for all the columns.
[%@ initWithBuffer:descriptor:] rowBytes is not a multiple of the element size.
[%@ initWithBuffer:descriptor:] buffer is too small (%lu) for matrix size (%lu bytes)
[%@ initWithDevice: %p descriptor:] device is not supported: %@
Returning nil.
Rows:  
Columns:
Matrices:
rowBytes:
matrixBytes:
MPSMatrix %p Cannot export to MPSNDArray: The matrices are not packed. matrixBytes = %lu but rows*rowBytes = %lu.
[%@ temporaryMatrixWithCommandBuffer:matrixDescriptor:] device is not supported: %@
Returning nil.
MPSTemporaryMatrix %p  invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
[%@ initWithDescriptor:device:] descriptor may not be nil.
[%@ initWithDescriptor:device:] not enough vectorBytes for each vector.
[%@ initWithDescriptor:device:] vectorBytes is not a multiple of the element size.
[%@ initWithBuffer:length:dataType] buffer may not be nil.
[%@ initWithBuffer: %p] device is not supported: %@
Returning nil.
[%@ initWithBuffer:length:dataType] buffer is too small (%lu) for vector size (%lu bytes)
[%@ initWithBuffer:descriptor:] not enough vectorBytes for each vector.
[%@ initWithBuffer:descriptor:] vectorBytes is not a multiple of the element size.
[%@ initWithBuffer:offset:descriptor] buffer is too small (%lu) for vector size (%lu bytes) and offset (%lu bytes)
[%@ initWithCommandBuffer:descriptor:] not enough vectorBytes for each vector.
[%@ initWithCommandBuffer:descriptor:] vectorBytes is not a multiple of the element size.
[%@ initWithCommandBuffer: %p] device is not supported: %@
Returning nil.
[%@ initWithResource:] Error: resource is neither a MTLTexture or a MTLBuffer
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/MPSState.mm
MPSState %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
%@ %p "%@" invalid operation: Adjusting read count on a non-temporary state.
%@ %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
readCount: %lu
isTemporary: %s
resource count: %lu
resources:
[%lu] texture %@
[%lu] buffer  %@
[%lu] <unknown resource format %u>
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.  They are GPU private and not readable on CPU.
[%@ textureInfoAtIndex] Error: index is too large
[%@ textureInfoAtIndex] Error: resource at index %lu is not a texture
[%@ bufferSizeAtIndex] Error: index is too large
[%@ bufferSizeAtIndex] Error: resource at index %lu is not a buffer
Error: attempted to resurrect or overrelease a state with readcount 0,
MPSStateBatchIncrementReadCount() Error: attempted to adjust readcount of object with count of %lu by %ld,
MPSImageBatchSynchronize(): Error: image[%lu] is a temporary image and can not be read on the CPU.
[%d] texture %@
[%d] buffer: size = %lu
%@%@
[%@ resource] Internal error: unhandled resource type
/Library/Caches/com.apple.xbs/Binaries/MetalPerformanceShaders_Sim/install/Symbols/BuiltProducts/MPSCore.framework/PrivateHeaders/Internal/MPSStateInternal.h
Error: %p is not a MTLBuffer or a MTLTexture
Cannot directly initialize MPSParallelSort. Use one of the sub-classes of MPSParallelSort.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelSort.mm
[%@ initWithDevice:keyPairDataType:valuePairDataType:] invalid keyPairDataType
[%@ initWithDevice:keyPairDataType:valuePairDataType:] invalid valuePairDataType
[%@ encodeToCommandBuffer... sourceKeyBuffer may not be NULL]
[%@ encodeToCommandBuffer... sourceValueBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationKeyBuffer may not be NULL]
[%@ encodeToCommandBuffer... destinationValueBuffer may not be NULL]
compute_histogram_bins_uint32
scatter_results_uint32
scatter_key_value_results_uint32
MPSParallelSort.keyPairDataType
MPSParallelSort.valuePairDataType
MPSParallelSort.op
MPSCommandBufferImageCache
Error: command buffer exited with error status, but did not provide an error message.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: command buffer exited with error status.
The Metal Performance Shaders operations encoded on it may not have completed.
Error: 
[%@ initWithCommandBuffer:computeEncoder: commandBuffer may not be nil
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSCommandBufferImageCache.mm
[%@ initWithCommandBuffer:computeEncoder: commandBuffer does not conform to the MTLCommandBuffer protocol
MPS internal error: attempted to make a new heap for a command buffer that already has one
cache frame %lu:
probable %s leak: %p (label=%s)
Internal error: MPSCommandBufferImageCache destroyed while %lu MTLResources still outstanding. MTLResources might be leaked.
Internal error: Failed to clean up command buffer image cache frame list.
commandBuffer: %@
%lu MTLResources. %lu frames.
commandBuffer: %@
%lu heap blocks allocated for %lu bytes. %lu MTLResources. %lu frames.
commandBuffer: %@
MPSKernel: out of memory
Internal error: the popped cache frame wasn't the top of the stack
Internal error: Released a texture with no current cache frame.
Internal error: Released a texture not in current cache frame.
Attempted to create a temp texture using a non-writable MTLPixelFormat (%lu)
Failed to allocate temp texture descriptor for format %lu
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture storage mode must be MTLResourceStorageModePrivate.
MetalPerformanceShaders.framework internal error: MPSAutoCache::GetTempTexture descriptor.usage must be at least MTLTextureUsageShaderRead | MTLTextureUsageShaderWrite.
Failed to allocate private MTLTexture for format %s
Failed to allocate private MTLBuffer for size %lu
MPSGetTemporaryTextureFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempTexture() instead. Otherwise we may leak.
MPSGetTemporaryTextureFromCommandBufferCache: MTLPixelFormat (%lu) for descriptor is unsupported.
MPSGetTemporaryTextureFromCommandBufferCache: temp texture formats must be writable.
MPSImage internal error: attempted to resurrect dead image backing store.
MPSAutoTexture::AllocateTexture Is missing its texture descriptor
MPS internal error: ReleaseTemporaryTexture() called on non-temporary texture
(texture not yet allocated)
device: %@
descriptor:  %@
MPSMatrix internal error: attempted to create 0 sized object.
MPSGetTemporaryBufferFromCommandBufferCache called from within an existing cache frame. Please use MPSAutoCache::GetTempBuffer() instead. Otherwise we may leak.
Attempted to init a MPSMatrix twice?
MPS internal error: attempted to release a temporary buffer for a MPSMatrix?
buffer (not yet allocated)
size = %lu
device: %p
MPSCommandBufferImageCache internal error:  cache over popped
Failed to allocate TextureNode
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Types/MPSImage.mm
MTLTextureUsageShaderRead
MTLTextureUsageShaderWrite
MTLTextureUsageRenderTarget
MTLTextureUsagePixelFormatView
MTLTextureUsageUnknown
%@ | %s
MPSImageFeatureChannelsInterleavedPerPixel
MPSImageFeatureChannelsInterleavedPerArraySlice
MTLStorageModeShared
MTLStorageModeManaged
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLCPUCacheModeDefaultCache
MTLCPUCacheModeWriteCombined
width:             %lu
height:            %lu
featureChannels:   %lu
number of Images:  %lu
channel format:    %s
featureChanLayout: %s
cache mode:        %s
storage mode:      %s
usage:             %@
[%@ initWithDescriptor:featureChannels:onDevice:] descriptor may not be nil.
[%@ initWithDescriptor:featureChannels:onDevice:] device may not be nil.
array length must be multiple of (featureChannels+3)/4
[%@ initWithTexture:] textureType (%s) is unknown to MPS or has 0 color channels.
[%@ initWithTexture:] Texture pixel format doesnt match number of feature channels.
[%@ initWithTexture:] Texture pixel format doesn't match number of feature channels.
[%@ initWithDevice:] texture may not be nil.
[%@ initWithDevice:] device may not be nil.
Texture array length must be multiple of number of slices %lu needed to hold %lu feature channels
[%@ initWithDevice:imageDescriptor:] descriptor may not be nil.
[%@ initWithDevice:imageDescriptor:] width must be >= 1 .
[%@ initWithDevice:imageDescriptor:] height must be >= 1 .
[%@ initWithDevice:imageDescriptor:] feature channels must be >=1 .
[%@ initWithDevice:imageDescriptor:] number of images must be >= 1 .
[%@ initWithDevice:imageDescriptor:] descriptor.channelFormat may not be MPSImageFeatureChannelFormatNone
[%@ initWithParentImage:sliceRange:featureChannels:] Error: self and parent must belong to the same class.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: This method only works on images that are interleaved per texel.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: feature channels may not be zero.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: %lu feature channels is %lu slices. That doesn't divide evenly into sliceRange.length = %lu.
[%@ initWithParentImage:sliceRange:featureChannels:] Error: parent image has readCount of 0
sub-image of %p %@
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.length must be divisible by 4.
Please use the slice operator for other cases.
[%@ subImageWithFeatureChannelRange:] Error: This method only works on images with a .numberOfImages = 1. Please make a sub-batch first.
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location (%lu) does not fall within the number of feature channels in the image (%lu)
[%@ subImageWithFeatureChannelRange:] Error: The featureChannelRange.location is larger than the number of feature channels in the image.
[%@ subImageWithFeatureChannelRange:] Error: The feature channel range {%lu, %lu} would result in a image with no texels.
[%@ subImageWithRange:] Error: The subRange.location is larger than the number of images in the image.
%@ "%@"
device: %p "%@"
width: %lu
height: %lu
featureChannelsPerImage: %lu
numberOfImages: %lu
MTLPixelFormat: %s
feature channel format: %s
parent:  %p
texture: %p
<Err: temporary images are unavailable for display. Contents are usually heavily aliased.>
<Err: texture backing store has not been materialized yet. Nothing to see here...>
<Err: can't display bfloat16 images>
vImageBuffer_Init
vImageCreateCGImageFromBuffer
CGColorSpaceRelease
CGImageRelease
CGColorSpaceCreateDeviceGray
<Err: unable to transcode texture to CGImage>
UIImage
[%@ initWithDevice:] feature channels for monochrome MTLPixelFormats must be 1.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatR{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] %lu channel MTLTextureFormats must have %lu feature channels.
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRG{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] feature channels must be >=3 .
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float} or MTLPixelFormatBGRA8Unorm
[%@ initWithDevice:] invalid texture format %lu.
[%@ %@] Error: the image texture you are reading from is uninitialized.
This typically means that nothing has written to it yet, and its contents are currently undefined.
Perhaps you meant to call writeBytes:... instead?%@
[%@ initWithDevice:] invalid region, region is bigger than imageSize
[%@ initWithDevice:] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ %@] Probable error: both region.origin.z and imageIndex are non-zero.
These two parameters are redundant with one another. Historically, region.origin.z was ignored. Please use one or the other, not both
[%@ %@] invalid region, range of images exceeds images in MPSImage
[%@ initWithDevice:] invalid featureChannelInfo, more feature channels %lu copied than available from offset %lu.
[%@ initWithDevice:] internal allocation error.
[%@ writeBytes:..] invalid region, region is bigger than imageSize
[%@ writeBytes:...] invalid featureChannelInfo, .featureChannelOffset : %lu not non-negative and multiple of 4
[%@ writeBytes:...] invalid featureChannelInfo, .numberOfFeatureChannelsToReadWrite : %lu not non-negative and multiple of 4 (unless .numberOfFeatureChannelsToReadWrite is allChannels)
[%@ %@] Probable error: both region.origin.z and imageIndex are non-zero. These two parameters are redundant with one another. Historically, region.origin.z was ignored. Please use one or the other, not both
[%@ writeBytes:...] invalid featureChannelInfo: more feature channels %lu copied than available from offset %lu.
[%@ writeBytes:...] internal allocation error.
[%@ initWithDevice:] width must be >= 1 .
[%@ initWithDevice:] height must be >= 1 .
[%@ initWithDevice:] feature channels must be >=1 .
[%@ initWithDevice:] number of images must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] pixel format (%lu) is unknown / unsupported.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] commandBuffer may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor may not be nil.
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.width must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.height must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] descriptor.arrayLength must be >= 1 .
[%@ temporaryImageWithCommandBuffer:textureDescriptor:] error: descriptor storageMode must be MTLStorageModePrivate.
[%@ prefetchStorageWithCommandBuffer:imageDescriptorList:] Error: the descriptor must be configured with MTLStorageModePrivate
[%@ setPurgeableState:] error: changing purgeable state on a MPSCNNTemporaryImage will result in undefined behavior.  The memory is owned and managed by the framework.
MPSTemporaryImage %p "%@" invalid operation: The read count was 0, meaning that the internal storage has already been released. It can not be raised to %lu again.
Error: attempted to decrement readCount when already 0.
If you need to read from a MPSTemporaryImage more than once, set the readCount to indicate how many times it will be read.
Please see the header comments about the MPSTemporaryImage.readCount property for more information.
Error: attempted to decrement readCount on a non-temporary image.
Error: attempted to resurrect or overrelease a object with readcount 0,
Error: attempted to increment readcount by %ld on object with readCount %lu:
MPSTemporaryImage %p "%@" was released before its readCount was zero.
This implies the internal storage was not released prompty after last usage.
To cause the internal storage to be released, set the readCount correctly or manually set readCount to 0 immediately after last use.
readCount: %lu
[%@ synchronizeOnCommandBuffer:] Error: can not synchronize a temporary MPS resource.
They are GPU private and not readable on CPU.
[%@ %@] Error: you may not call readBytes: on a temporary image.
It shares memory with other images and buffers and is only valid in
a narrow time window on the GPU.
The storage is at minimum freed
when the command buffer completes or more likely reused by other
objects well before that happens. This call occurs at CPU time and
is by definition outside the window when the contents of the image are valid.
[%@ %@] Error: you may not call writeBytes:... on a temporary image.
It shares memory with other images and buffers and is only valid in
a narrow time window on the GPU.
The storage is at minimum freed
when the command buffer completes or more likely reused by other
objects well before that happens. The storage is not valid before the
command buffer runs. This call occurs at CPU time and is by definition
outside the window when the contents of the image are valid.
MPSImageFeatureChannelFormatNone
MPSImageFeatureChannelFormatUnorm8
MPSImageFeatureChannelFormatUnorm16
MPSImageFeatureChannelFormatFloat16
MPSImageFeatureChannelFormatFloat32
MPSImageFeatureChannelFormatBFloat16
<invalid format
[%@ initWithDevice:] invalid MTLPixelFormat %lu.
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) must be a unorm, snorm or float format
MTLTextureUsageShaderWrite texture (MTLPixelFormat = %lu) is not a writable format but marked MTLTextureUsageShaderWrite
[%@ initWithDevice:] MPSImage.width must be > 0. (If created with a MTLTexture, MTLTexture.width > ((featureChannels+3)/4).)
Error: This MPSImage (%lu slices) would exceed the maximum allowed number of slices in a Metal texture array (%lu slices).
[%@ initWithDevice:] BGRA MPSImages may be no more than 4 channels.  Requested: %lu
[%@ initWithDevice:] %lu channel MTLTextureFormats must be MTLPixelFormatRGBA{8Unorm/16Unorm/16Float/32Float}.
vImageConvert_ARGB8888toPlanar8
vImageConvert_ARGB16UtoPlanar16U
vImageConvert_ARGBFFFFtoPlanarF
vImageConvert_Planar8toARGB8888
vImageConvert_Planar16UtoARGB16U
vImageConvert_PlanarFtoARGBFFFF
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Filters/MPSKernel.mm
[%@ initWithDevice:] Failed to get MPSDevice.
[%s initWithDevice: %p] device is not supported: %s
Returning nil.
[%@ copyWithZone:device:] device may not be nil.
[%s copyWithZone:device: %p] device is not supported: %s
Returning nil.
MPSKernelOptionsNone
MPSKernelOptionsSkipAPIValidation
MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision
MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling
MPSKernelOptionsInsertDebugGroupsMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups
MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsVerbose
MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerboseMPSKernelOptionsSkipAPIValidation | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
MPSKernelOptionsSkipAPIValidation | MPSKernelOptionsAllowReducedPrecision | MPSKernelOptionsDisableInternalTiling | MPSKernelOptionsInsertDebugGroups | MPSKernelOptionsVerbose
<invalid options list>
%@ "%@"
device:        %p
options:       %s
concurrent:    %s
[%@ initWithCoder:device] Error: file version too new to decode.
MPS_LOG_INFO
MPSKernel._fileVersion
MPSKernel._options
MPSKernel._verbosityLevel
MPSKernel._tuningParams
MPSKernel._maxTuningParams
MPSKernel._label
MPSKernel.originalDevice
MPSKernel.tableOptions
MPSKernel.enableConcurrency
Cannot directly initialize MPSParallelRandom. Use one of the sub-classes of MPSParallelRandom.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelRandom.mm
[%@ encode...] Error: commandBuffer may not be nil]
[%@ encode...] Error: destination may not be nil
[%@ encode...] Error: Number of requested results (%lu) is too large to fit in the destination image (%p) at the specified offset (%lu).
[%@ encode...] Error: The default distribution requires a data type of MPSDataTypeUInt32.
[%@ encode...] Error: Uniform distribution requires a data type of MPSDataTypeFloat32.
newBufferWithLength returned nil.
mtgp32SetState
mtgp32
MTGP32 shader only supports threadgroup sizes of 128 or 256.
kMPSParallelRandomDataTypeKey
kMPSParallelRandomDistributionKey
kMPSParallelRandomGeneratorKey
kMPSParallelRandomMTGP32StateStateArrayKey
kMPSParallelRandomMTGP32StateParameterShift1ArrayKey
kMPSParallelRandomMTGP32StateParameterShift2ArrayKey
kMPSParallelRandomMTGP32StateParameterMRArrayKey
kMPSParallelRandomMTGP32StateParameterMTArrayKey
kMPSParallelRandomMTGP32StateParameterMArrayKey
kMPSParallelRandomMTGP32StateParameterStateIdxArrayKey
kMPSParallelRandomStateArrayKey
kMPSParallelRandomParameterShift1ArrayKey
kMPSParallelRandomParameterShift2ArrayKey
kMPSParallelRandomParameterMRArrayKey
kMPSParallelRandomParameterMTArrayKey
kMPSParallelRandomParameterMArrayKey
kMPSParallelRandomParameterStateIdxArrayKey
[%@ encode...] Error: Number of requested results (%lu) must be a multiple of 4.
[%@ encode...] Error: Destination buffer offset (%lu) must be a multiple of 4.
philox
kMPSParallelRandomCountersArrayKey
MPS Internal error: overriding feature channel format currently only supported for bfloat16
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSDevicePixeInfo.mm
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSParallelPrimitives/Kernels/MPSParallelReduce.mm
[%@ initWithDevice:sourceDataType:destinationDataType:] destinationDataType must be MPSDataTypeFloat32
reduce_add_int8_int32
reduce_add_int16_int32
reduce_add_int32_int32
reduce_add_half_float
reduce_add_float_float
reduce_min_int8_int32
reduce_min_int16_int32
reduce_min_int32_int32
reduce_min_half_float
reduce_min_float_float
reduce_max_int8_int32
reduce_max_int16_int32
reduce_max_int32_int32
reduce_max_half_float
reduce_max_float_float
reduce_arg_minmax_int8_int32
reduce_arg_minmax_int16_int32
reduce_arg_minmax_int32_int32
reduce_arg_minmax_half_int32
reduce_arg_minmax_float_int32
reduce_multiple_passes_float
fill_reduce_lookback_status_buffer_Apple
reduce_multiple_passes_float_Apple
fill_reduce_lookback_status_buffer_MAC
reduce_multiple_passes_float_MAC
MPSParallelReduce.sourceDataType
MPSParallelReduce.destinationDataType
MPSParallelReduce.op
MPSParallelReduce.kernelID
MPSParallelReduce.argkernelID
MPSDisableExternalImplementationsSPI() error:  Unable to find MPSDevice for MTLDevice: %p
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSDevice.mm
MPSDevice.librarySerialQueue
MetalPerformanceShaders global queue
Library ID %lu not initialized yet. Skipping...
Testing library: %lu
Failed to create state: %@
Testing library functions with function constants
MPS_DISABLE_ALL_PLUGINS
MPS_ALLOW_ALL_PLUGINS
MPS_ENABLE_GEMM_PLUGIN
Testing library functions without function constants..
kMPSReturnSuccess
kMPSReturnOutOfMemory
kMPSReturnSourceInvalid
kMPSReturnSourceSizeInvalid
kMPSReturnSourceFormatInvalid
kMPSReturnDestinationInvalid
kMPSReturnDestinationSizeInvalid
kMPSReturnDestinationFormatInvalid
kMPSReturnBufferInvalid
kMPSReturnBufferSizeInvalid
kMPSReturnKernelSizeInvalid
kMPSReturnKernelValuesInvalid
kMPSReturnOptionsInvalid
kMPSReturnDeviceMismatch
kMPSReturnDeviceUnsupported
kMPSReturnOffsetInvalid
kMPSReturnClipRectInvalid
kMPSReturnEncoderInvalid
kMPSReturnCanNotOperateInPlace
kMPSReturnInternalError
kMPSReturnInvalidOperation
kMPSReturnCommandBufferInvalid
kMPSReturnInvalidMPSImageFormat
kMPSReturnInvalidMPSImageDimension
kMPSReturnUnsupportedMPSImageFeatureChannelFormat
kMPSReturnEdgeModeInvalid
kMPSReturnInvalidCNNTexture
kMPSReturnStrideInPixelsInvalid
kMPSReturnOperationNotSupportedByPlugin
kMPSReturnDescriptorInvalid
kMPSReturnEncodingInvalid
kMPSReturnInvalidState
<invalid MPSReturn code>
latency1
scheduleOption
latency2
latency_code_motion
func%llu_%s
MPSLibrary::MPSKey_Create internal error: Unable to get MPS kernel %@. Error: %@
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSLibrary.mm
MPSKernel MTLComputePipelineStateCache unable to load function %@.
%@: %@
Cached MTLComputePipelineState missing.
MPS internal error on MTLLibrary %p: invalid kernelID %u
MPS internal error on MTLLibrary %p: kernelInfo[%u].kernelName uninitialized
com.apple.MPS.MPSLibrary.preheat
MPS internal error: could not create specialized function with name %@
MPS compilation error:  failed to create MTLComputePipelineState for function: %@
MPS internal error: unable to acquire rwlock for reading: %d
MPS internal error: unable to acquire rwlock for writing: %d
MPS_GRAPH_CAPTURE_OUTPUT_FOLDER
_hash%llu
_userInfo%llu
_kernelID%u
_texT%llu
_bS%llu
_uC%llu
_ndC%llu
_ndS%llu
_imgLC%llu
_ndLH%llu_%llu_%llu_%llu
MPS_SHADER_PROFILING
[%@ initWithBuffer:offset:] buffer may not be nil.
/Library/Caches/com.apple.xbs/Sources/MetalPerformanceShaders_Sim/MPSCore/Utility/MPSPredicate.mm
[%@ initWithBuffer:offset:] offset:(%lu) not multiple of 4.
[%@ initWithBuffer:offset:] offset:(%lu) is too large for buffer size: (%lu)
[%@ initWithBuffer:offset:] device: %@ does not support predication.
buffer:             %@
offset:            %lu
[%@ initWithDevice:] Failed to allocate buffer.
[%@ dispatchThreads:threadsPerThreadgroup:] Not supported with predicate.
Error: command buffer already committed.  State: %lu
predicate_dispatch_buffer
copy_float
copy_float_2darray
copy_uint
copy_uint_2darray
copy_int
copy_int_2darray
copy_float_generic
PipelineState: %p threads:{%lu,%lu,%lu} threadGroups:{%lu,%lu,%lu}
MPSKernelDispatch
PipelineState: %p %@
MPSCompilation
MPSComputeEncoder
MTLComputeCommandEncoder
MTLCommandEncoder
NSObject
MPSKernelDAGObject
MPSExternalPluginBase
MPSNDArrayDescriptor
MPSNDArrayDefaultAllocator
MPSNDArrayAllocator
NSSecureCoding
NSCoding
NSCopying
MPSNDArray
MPSTemporaryNDArrayDefaultAllocator
MPSTemporaryNDArray
MPSParallelScan
MPSParallelExclusiveScan
MPSParallelInclusiveScan
MPSMatrixDescriptor
MPSVectorDescriptor
MPSMatrix
MPSTemporaryMatrix
MPSVector
MPSTemporaryVector
MPSStateResourceList
MTLTexture
MTLResource
MTLBuffer
MPSState
MPSParallelSort
MPSParallelRadixSort
MTLCommandBuffer
MPSCommandBufferImageCache
MPSKeyedUnarchiver
MPSDeviceProvider
MPSImageDefaultAllocator
MPSImageAllocator
MPSTemporaryImageDefaultAllocator
MPSImageDescriptor
MPSImage
MPSTemporaryImage
MPSVirtualImage
MPSKernel
MPSParallelRandomDistributionDescriptor
MPSParallelRandom
MPSParallelRandomMTGP32State
MPSParallelRandomMTGP32
MPSParallelRandomPhilox
MPSParallelReduce
MPSParallelReduceSum
MPSParallelReduceMin
MPSParallelReduceMax
MPSParallelReduceArgMin
MPSParallelReduceArgMax
MPSPredicate
MPSPredicatedCommandEncoder
MPSCommandBuffer
MPSWorkloadStatistics
T@"<MTLHeap>",R
.cxx_destruct
TQ,N,V_rowBytes
GPUStartTime
TQ,R,N,V_height
T(?=I{?=b8b8b16}),N,V_fileVersion
TQ,R,N,V_offset
T@"<MPSHeapProvider>",&,N
_buffer
T@"<MTLBuffer>",R
_dimensionOrder
T@"<MTLBuffer>",R,N
_length
T@"<MTLCommandBuffer>",R,&,N,V_commandBuffer
_offset
T@"<MTLCommandQueue>",R
_parent
T@"<MTLDevice>",R
_scanOp
T@"<MTLDevice>",R,D
_sortOp
T@"<MTLResource>",R
_updatedAlready
T@"<MTLTexture>",R
_verbosityLevel
T@"MPSImage",R,&,N,V_parent
columns
T@"MPSPredicate",&,N,V_predicate
compressionType
T@"NSString",C
dealloc
T@"NSString",C,V_label
enqueue
TB,N,V_enableConcurrency
finalOp
TB,R
initWithBuffer:length:dataType:
TB,R,N
initWithDevice:destinationDataType:seed:distributionDescriptor:
TI,R,N,V_destinationDataType
initWithFormat:
TI,R,N,V_sourceDataType
kernelStartTime
TQ,N,V_batchSize
maximum
TQ,N,V_columns
TQ,N,V_distributionType
newComputePipelineStateWithDescriptor:options:reflection:error:
TQ,N,V_featureChannelsLayout
predicateBuffer
TQ,N,V_length
predicatedEncoderWithMPSCommandBuffer:commandEncoder:mpsDevice:
TQ,N,V_numberOfImages
release
TQ,N,V_readCount
resourceOptions
TQ,N,V_storageMode
setFileVersion:
TQ,N,V_width
setStorageMode:
TQ,R,D
setThreadgroupMemoryBytesWrite:
TQ,R,N,V_columns
swizzle
TQ,R,N,V_featureChannels
texture
TQ,R,N,V_matrices
unarchiveObjectWithFile:device:
TQ,R,N,V_numberOfDimensions
vectors
.cxx_construct
TI,N,V_dataType
GPUEndTime
TQ,N,V_scanImpl
T#,R
TQ,R,N,V_length
T,R,N,V_sha256
_allowedOptions
T@"<MPSHeapProvider>",&,N,V_heapProvider
_device
T@"<MTLBuffer>",R,&,N,V_predicateBuffer
_height
T@"<MTLCommandBuffer>",R,&,N
_numberOfImages
T@"<MTLCommandBuffer>",R,N,V_cmdBuffer
T@"<MTLComputeCommandEncoder>",R,N,V_originalCommandEncoder
_privateOptions
T@"<MTLDevice>",R,&,N
_sha256
T@"<MTLLogContainer>",R
_sourceDataType
T@"<MTLResource>",R,&,N
_userCacheFrame
T@"<MTLTexture>",R,N
arrayWithArray:
T@"MPSNDArray",R,&,N,V_parent
commandBufferWithCommandBuffer:
T@"NSError",R
computeFunction
T@"NSString",C,D
didModifyRange:
T@"NSString",R,C
featureChannels
TB,N,V_preferPackedRows
framebufferOnly
TB,R,GisFramebufferOnly
initWithDevice:
TI,R,N,V_dataType
initWithDevice:imageDescriptor:
TI,R,N,V_keyPairDataType
isProxy
TI,R,N,V_valuePairDataType
keyPairDataType
TQ,N,V_channelFormat
minimum
TQ,N,V_cpuCacheMode
newCommandQueue
TQ,N,V_featureChannels
options
TQ,N,V_height
predicateOffset
TQ,N,V_numberOfDimensions
pushDebugGroup:
TQ,N,V_options
resourceAtIndex:allocateMemory:
TQ,N,V_rows
setArrayLength:
TQ,N,V_usage
setPixelFormat:
TQ,R
setTextureType:
TQ,R,N
supportsFamily:
TQ,R,N,V_featureChannelFormat
tailSizeInBytes
TQ,R,N,V_featureChannelsLayout
unarchiveObjectWithData:device:
TQ,R,N,V_matrixBytes
useHeaps:count:
TQ,R,N,V_numberOfImages
TQ,R,N,V_predicateOffset
TQ,R,N,V_resourceCount
TQ,R,N,V_rowBytes
TQ,R,N,V_rows
TQ,R,N,V_vectorBytes
TQ,R,N,V_vectors
TQ,R,N,V_width
T^v,R,N,V_finalOp
T^v,R,N,V_kernelDAG
T^{__IOSurface=},R
Td,N,V_deviceMemoryBytesRead
Td,N,V_deviceMemoryBytesWrite
Td,N,V_float16Ops
Td,N,V_float32Ops
Td,N,V_integerOps
Td,N,V_threadgroupMemoryBytesRead
Td,N,V_threadgroupMemoryBytesWrite
Td,R
Tf,N,V_maximum
Tf,N,V_mean
Tf,N,V_minimum
Tf,N,V_standardDeviation
Tq,R
T{?=CCCC},R,N
T{MPSCommandBufferDescriptor=QQ},V_mpsCommandBufferDescriptor
T{MTLResourceID=Q},R
UTF8String
_argkernelID
_batchSize
_bernoulliParameter
_cacheDelay
_cacheMode
_channelFormat
_child
_childRefCount
_cmdBuffer
_columns
_commandBuffer
_commandBufferCount
_counters
_cpuCacheMode
_currentDispatchBuffer
_dataType
_dealloc_ok
_debugMode
_destinationDataType
_deviceMemoryBytesRead
_deviceMemoryBytesWrite
_dimensionLengths
_distributionType
_enableConcurrency
_encoder
_exclusiveScanKernel
_featureChannelFormat
_featureChannels
_featureChannelsLayout
_fileVersion
_finalOp
_flags
_float16Ops
_float32Ops
_frameList
_freeList
_functionNames
_functions
_generatorType
_heapProvider
_integerOps
_iosurface
_isMPSCommandBuffer
_isTemporary
_keepSubDAGArray
_kernelDAG
_kernelDAGSharedPtr
_kernelID
_keyPairDataType
_label
_labelHash
_library
_list
_matrices
_matrixBytes
_maxTuningParams
_maximum
_mean
_minimum
_minimumBin
_mpsCommandBufferDescriptor
_mpsDevice
_needsRetain
_normalMean
_normalStandardDeviation
_numberOfDimensions
_offsetToCurrentFree
_options
_originalCommandEncoder
_owningMPSCommandBuffer
_pMR
_pMT
_pShift1
_pShift2
_pStateIdx
_pixelInfo
_predicate
_predicateBuffer
_predicateOffset
_preferPackedRows
_readCount
_reduceOp
_resourceCount
_resources
_retainedResources
_rowBytes
_rows
_scanImpl
_seed
_self
_sliceLengths
_sliceOffsets
_standardDeviation
_state
_stateParams
_stitchedFunctions
_storageMode
_texture
_textureType
_threadgroupMemoryBytesRead
_threadgroupMemoryBytesWrite
_totalAllocationBytes
_transitionOp
_tuningParams
_uniformMax
_uniformMin
_usage
_useSpinLockVersion
_userBinding1
_userBinding2
_userBinding3
_userBoundPipelineState
_valuePairDataType
_vectorBytes
_vectors
_width
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
addCompletedHandler:
addDebugMarker:range:
addHandlerToCommandBuffer:
addObject:
addScheduledHandler:
allObjects
allValues
allocWithZone:
allocatedSize
allowGPUOptimizedContents
appendBuffer:
appendTexture:
appendTexture:format:
array
arrayForCommandBuffer:arrayDescriptor:kernel:
arrayLength
arrayViewWithCommandBuffer:computeEncoder:descriptor:destinationArray:aliasing:
arrayViewWithCommandBuffer:descriptor:aliasing:
arrayViewWithCommandBuffer:descriptor:destinationArray:aliasing:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
autorelease
batchRepresentation
batchRepresentationWithSubRange:
batchSizeHint
bitcodeData
blitCommandEncoder
blitCommandEncoderWithDescriptor:
buffer
bufferBytesPerRow
bufferForCommandBuffer:size:options:kernel:
bufferOffset
bufferSizeAtIndex:
bundlePath
bundleWithIdentifier:
bundleWithURL:
cStringUsingEncoding:
canAliasWithNDArrayDescriptor:
channelFormat
checkNDArray:nativeUlps:absoluteErr:
checkNDArray:nativeUlps:absoluteErr:PSNR:
class
commandBuffer
commandBufferFromCommandQueue:
commandBufferWithUnretainedReferences
commandQueue
commit
commitAndContinue
computeCommandEncoder
computeCommandEncoderWithDescriptor:
computeCommandEncoderWithDispatchType:
conformsToProtocol:
contents
copy
copyDataWithCommandBuffer:images:offset:imageToArray:
copyWithZone:
copyWithZone:device:
count
countByEnumeratingWithState:objects:count:
cpuCacheMode
data
dataType
dataTypeSize
dataTypeSizeInBytes
dataWithCommandBuffer:
debugDescription
debugQuickLookObject
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeInt32ForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeTopLevelObjectOfClasses:forKey:error:
defaultAllocator
defaultDistributionDescriptor
depth
description
descriptor
descriptorWithDataType:dimensionCount:dimensionSizes:
descriptorWithDataType:dimensionSizes:
descriptorWithDataType:shape:
destinationDataType
destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:
device
deviceMemoryBytesRead
deviceMemoryBytesWrite
dictionary
dimensionOrder
disableConcurrentEncoder
dispatchBufferWithOffset:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchType
distributionType
doesAliasWithNDArray:
doesNotRecognizeSelector:
enableConcurrency
encodeBool:forKey:
encodeBytes:length:forKey:
encodeCopyWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:destinationOffsetBytes:destinationStrideBytes:
encodeInt32:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeReshapedBatchWithCommandBuffer:toBuffer:destinationDataType:destinationOffsetBytes:destinationRowBytes:destinationColumns:destinationRows:
encodeReshapedMatrixWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:destinationOffsetBytes:destinationRowBytes:destinationColumns:destinationRows:
encodeSignalEvent:value:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:computeEncoder:destinationBuffer:destinationOffset:numEntries:stride:
encodeToCommandBuffer:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:destinationBuffer:destinationOffset:numEntries:stride:
encodeToCommandBuffer:sourceBuffer:sourceOffset:destinationBuffer:destinationOffset:numEntries:
encodeToCommandBuffer:sourceKeyBuffer:sourceKeyOffset:sourceValueBuffer:sourceValueOffset:destinationKeyBuffer:destinationKeyOffset:destinationValueBuffer:destinationValueOffset:numEntries:
encodeWaitForEvent:value:
encodeWithCoder:
endEncoding
error
errorOptions
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
executeCommandsInBuffer:withRange:
exportDataWithCommandBuffer:computeEncoder:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:
exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:lengths:numLengths:flatteningLevel:
exportDataWithCommandBuffer:toImages:offset:
exportState
featureChannelFormat
featureChannelsLayout
fileURLWithPath:isDirectory:
fileVersion
firstMipmapInTail
float16Ops
float32Ops
forwardingTargetForSelector:
freeBuffer:forCommandBuffer:
functionConstantsDictionary
functionDescriptor
functionType
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
getObjects:range:
getPixelChannelSize
getShape
getShapeVector
getStitchedFunctions:
globalTraceObjectID
gpuAddress
gpuCoreCount
gpuResourceID
graph
hasPostfixFunction
hash
hazardTrackingMode
heap
heapBufferSizeAndAlignWithLength:options:
heapOffset
heapProvider
heapTextureSizeAndAlignWithDescriptor:
height
imageBatchForCommandBuffer:imageDescriptor:kernel:count:
imageDescriptorWithChannelFormat:width:height:featureChannels:
imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:
imageForCommandBuffer:imageDescriptor:kernel:
imageWithCGImage:
importDataWithCommandBuffer:fromBuffer:sourceDataType:offset:rowStrides:
importDataWithCommandBuffer:fromImages:offset:
init
initForReadingFromData:device:error:
initForReadingFromData:error:
initForReadingWithData:device:
initPrivateWithDescriptor:device:
initPrivateWithDevice:
initWithBuffer:descriptor:
initWithBuffer:offset:
initWithBuffer:offset:descriptor:
initWithCapacity:
initWithCoder:
initWithCoder:device:
initWithCommandBuffer:
initWithCommandBuffer:descriptor:
initWithCommandBuffer:descriptor:buffer:
initWithCommandBuffer:matrixDescriptor:
initWithCommandBuffer:withDispatchType:
initWithDataType:dimensions:sizes:
initWithDescriptor:featureChannels:featureChannelsLayout:featureChannelFormat:onDevice:
initWithDevice:bufferSize:
initWithDevice:descriptor:
initWithDevice:destinationDataType:generatorType:distributionDescriptor:
initWithDevice:destinationDataType:seed:
initWithDevice:destinationDataType:state:distributionDescriptor:
initWithDevice:keyPairDataType:valuePairDataType:
initWithDevice:keyPairDataType:valuePairDataType:sortOp:
initWithDevice:matrix:
initWithDevice:resourceList:
initWithDevice:scalar:
initWithDevice:sourceDataType:destinationDataType:
initWithDevice:sourceDataType:destinationDataType:reduceOp:
initWithDevice:sourceDataType:destinationDataType:scanOp:
initWithDevice:textureDescriptor:
initWithKernelDAG:finalOp:
initWithMPSCommandBuffer:commandEncoder:mpsDevice:
initWithObjects:count:
initWithParentImage:sliceRange:featureChannels:
initWithResource:
initWithResources:
initWithSeed:
initWithTexture:featureChannels:
initWithTexture:featureChannels:featureChannelsLayout:
inputTensorAtIndex:
insertDebugSignpost:
integerOps
iosurface
iosurfacePlane
isAliasable
isEqual:
isEqualToString:
isFramebufferOnly
isKindOfClass:
isMemberOfClass:
isSparse
isTemporary
kernelEndTime
label
length
lengthOfDimension:
libraryInfo:
localizedDescription
localizedFailureReason
logs
makeAliasable
makeStrideBytesInArray:
matrices
matrixBytes
matrixDescriptorWithDimensions:columns:rowBytes:dataType:
matrixDescriptorWithRows:columns:matrices:rowBytes:matrixBytes:dataType:
matrixDescriptorWithRows:columns:rowBytes:dataType:
matrixWithCommandBuffer:descriptor:aliasing:
maxAvailableSizeWithAlignment:
maxBatchSize
maxComputeThreadgroupMemory
maxTextureLayers
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
mean
memoryBarrierWithResources:count:
memoryBarrierWithScope:
minimumLinearTextureAlignmentForPixelFormat:
mipmapLevelCount
mpsCommandBufferDescriptor
mpsMTLDevice
name
ndArrayWithCommandBuffer:descriptor:aliasing:
newBufferWithLength:options:
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithFunction:error:
newFunctionWithDescriptor:error:
newFunctionWithName:
newFunctionWithName:constantValues:error:
newHeapBlock:protections:
newHeapWithDescriptor:
newLibraryWithDAG:functions:error:
newLibraryWithFile:error:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newSamplerStateWithDescriptor:
newTextureDescriptor
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureWithDescriptor:
newTextureWithDescriptor:offset:bytesPerRow:
normalDistributionDescriptorWithMean:standardDeviation:
normalDistributionDescriptorWithMean:standardDeviation:minimum:maximum:
numberOfDimensions
numberOfImages
numberOfInputTensors
numberOfOutputTensors
numberWithInteger:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
objectForKey:
offset
originalObject
outputTensorAtIndex:
parallelRenderCommandEncoderWithDescriptor:
parent
parentRelativeLevel
parentRelativeSlice
parentTexture
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permuteWithDimensionOrder:
pixelFormat
pixelSize
popDebugGroup
precision
predicate
predicateWithBuffer:offset:
preferPackedRows
prefetchHeapForWorkloadSize:
prefetchStorageWithCommandBuffer:descriptorList:
prefetchStorageWithCommandBuffer:imageDescriptorList:
prefetchStorageWithCommandBuffer:matrixDescriptorList:
presentDrawable:
presentDrawable:atTime:
printNDArray
printNDArrayToFile:
protectionOptions
readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
readBytes:dataLayout:imageIndex:
readBytes:strideBytes:
readCount
reinitializeDistributionDescriptor:
releaseHeapBlock:heapProvider:
removeAllDebugMarkers
removeObjectForKey:
renderCommandEncoderWithDescriptor:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
resetSeedOnCommandBuffer:seed:
reshapeWithDimensionCount:dimensionSizes:
reshapeWithShape:
resource
resourceCount
resourceList
resourceListWithBufferSizes:
resourceListWithTextureDescriptors:
resourceSize
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
resourceTypeAtIndex:
respondsToSelector:
retain
retainCount
retainedReferences
retireHeap:cacheDelay:
rootCommandBuffer
rootResource
rowBytes
rowBytesForColumns:dataType:
rowBytesFromColumns:dataType:
rows
safeArrayViewWithCommandBuffer:computeEncoder:descriptor:aliasing:
safeArrayViewWithCommandBuffer:descriptor:aliasing:
sampleCount
sampleCountersInBuffer:atSampleIndex:withBarrier:
scanImpl
self
setAccelerationStructure:atBufferIndex:
setBatchSizeHint:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setChannelFormat:
setColumns:
setComputeFunction:
setComputePipelineState:
setConstantValue:type:atIndex:
setConstantValues:
setCpuCacheMode:
setDataType:
setDeviceMemoryBytesRead:
setDeviceMemoryBytesWrite:
setDistributionType:
setDriverCompilerOptions:
setEnableConcurrency:
setFeatureChannels:
setFeatureChannelsLayout:
setFloat16Ops:
setFloat32Ops:
setHeapProvider:
setHeight:
setImageblockWidth:height:
setIntegerOps:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setLabel:
setLength:
setLengthOfDimension:atIndex:
setLinkedFunctions:
setMagFilter:
setMaximum:
setMean:
setMinFilter:
setMinimum:
setMipFilter:
setMpsCommandBufferDescriptor:
setName:
setNormalizedCoordinates:
setNumberOfDimensions:
setNumberOfImages:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOptions:
setPredicate:
setPreferPackedRows:
setPrivateFunctions:
setPurgeableState:
setRAddressMode:
setReadCount:
setResourceOptions:
setRowBytes:
setRows:
setSAddressMode:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:withRange:
setScanImpl:
setSize:
setSpecializedName:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setStandardDeviation:
setTAddressMode:
setTexture:atIndex:
setTextureWriteRoundingMode:
setTextures:withRange:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setThreadgroupMemoryBytesRead:
setThreadgroupMemoryLength:atIndex:
setUsage:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setWidth:
sharedInitWithDevice:
size
sliceDimension:withSubrange:
sliceRangeForDimension:
sourceDataType
standardDeviation
status
storageMode
stringByAppendingFormat:
stringByAppendingString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
subImageWithFeatureChannelRange:
superclass
supports32BitFloatFiltering
supportsArrayOfTextures
supportsCommandBufferJump
supportsFloat16BCubicFiltering
supportsLinearTextureFromSharedBuffer
supportsNorm16BCubicFiltering
supportsQuadShufflesAndBroadcast
supportsReadWriteTextureArgumentsTier2
supportsSIMDReduction
supportsSIMDShuffleAndFill
supportsSIMDShufflesAndBroadcast
supportsSecureCoding
supportsTextureWriteRoundingMode:
synchronizeOnCommandBuffer:
synchronizeStateOnCommandBuffer:
temporaryArrayViewWithCommandBuffer:computeEncoder:descriptor:aliasing:
temporaryArrayViewWithCommandBuffer:descriptor:aliasing:
temporaryImageWithCommandBuffer:imageDescriptor:
temporaryImageWithCommandBuffer:textureDescriptor:
temporaryImageWithCommandBuffer:textureDescriptor:featureChannels:
temporaryMatrixWithCommandBuffer:matrixDescriptor:
temporaryNDArrayWithCommandBuffer:descriptor:
temporaryStateWithCommandBuffer:
temporaryStateWithCommandBuffer:bufferSize:
temporaryStateWithCommandBuffer:resourceList:
temporaryStateWithCommandBuffer:textureDescriptor:
temporaryVectorWithCommandBuffer:descriptor:
textureInfoAtIndex:
textureType
threadExecutionWidth
threadgroupMemoryBytesRead
threadgroupMemoryBytesWrite
transposeDimension:withDimension:
unarchiveTopLevelObjectWithData:device:error:
unarchivedObjectOfClass:fromData:device:error:
unarchivedObjectOfClasses:fromData:device:error:
uniformDistributionDescriptorWithMinimum:maximum:
unsignedIntegerValue
updateFence:
usage
useHeap:
useResource:usage:
useResources:count:usage:
userDictionary
userInfo
valuePairDataType
vectorBytes
vectorBytesForLength:dataType:
vectorDescriptorWithLength:dataType:
vectorDescriptorWithLength:vectors:vectorBytes:dataType:
waitForFence:
waitUntilCompleted
waitUntilScheduled
width
writeBytes:dataLayout:bytesPerColumn:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:
writeBytes:dataLayout:imageIndex:
writeBytes:strideBytes:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8@16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v32@0:8Q16Q24
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8r^@16Q24Q32
v32@0:8r^@16Q24
v40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24Q32
v24@0:8Q16
v36@0:8@16Q24B32
v24@0:8@"<MTLComputePipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v24@0:8@"<MTLFence>"16
v32@0:8@"<MTLResource>"16Q24
v24@0:8@"<MTLHeap>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
@32@0:8@16Q24
@"<MTLComputeCommandEncoder>"
@"<MTLComputePipelineState>"
r^v24@0:8Q16
@32@0:8^v16^v24
@24@0:8@16
^v16@0:8
16@0:8
{shared_ptr<MPSKernelDAG>="__ptr_"^{MPSKernelDAG}"__cntrl_"^{__shared_weak_count}}
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
[5B]
@24@0:8@"<MTLDevice>"16
@"MPSExternalPluginBase"
@"<MTLDevice>"
@36@0:8I16Q20^Q28
@28@0:8I16@20
@28@0:8I16Q20
Q24@0:8Q16
{MPSDimensionSlice=QQ}24@0:8Q16
v40@0:8Q16{MPSDimensionSlice=QQ}24
v24@0:8^Q16
@92@0:8I16Q2028
{unique_ptr<const std::vector<long>, std::default_delete<const std::vector<long>>>={__compressed_pair<const std::vector<long> *, std::default_delete<const std::vector<long>>>=^v}}16@0:8
v32@0:8Q16^Q24
I16@0:8
v20@0:8I16
v20@0:8B16
@"MPSNDArrayDescriptor"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@40@0:8@16@24@32
@"MPSNDArray"40@0:8@"<MTLCommandBuffer>"16@"MPSNDArrayDescriptor"24@"MPSKernel"32
@48@0:8@16Q24Q32@40
v32@0:8@16@24
r^{MPSLibraryInfo=iI*^?{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}{MPSDeviceSpecificInfo=^{MPSKernelInfo}^?Q}}24@0:8^v16
@32@0:8@16@24
@32@0:8@16d24
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
v48@0:8@16@24@32Q40
@56@0:8@16@24@32@40Q48
v52@0:8@16@24I32Q36^q44
v68@0:8@16@24I32Q36Q44Q52Q60
v76@0:8@16@24@32I40Q44Q52Q60Q68
v60@0:8@16@24@32I40Q44^q52
v76@0:8@16@24I32Q36^q44^Q52Q60Q68
v84@0:8@16@24@32I40Q44^q52^Q60Q68Q76
v60@0:8@16@24{MPSImageCoordinate=QQQ}32B56
v56@0:8@16@24{MPSImageCoordinate=QQQ}32
v24@0:8^q16
v32@0:8^v16^q24
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
@32@0:8r^f16f24f28
@36@0:8r^f16f24f28f32
@"NSString"
@"MPSNDArray"
{MPSAutoBuffer="_buffer"{atomic<void *>="__a_"{__cxx_atomic_impl<void *, std::__cxx_atomic_base_impl<void *>>="__a_value"A^v}}"_requestedSize"Q"_device"@"<MTLDevice>""_cache"@"MPSCommandBufferImageCache""_resourceSize"{?="size"Q"align"Q}}
^{__IOSurface=}
@"<MTLCommandBuffer>"
@32@0:8@16I24I28
@36@0:8@16I24I28i32
@32@0:8^{_NSZone=}16@24
v64@0:8@16@24Q32@40Q48Q56
Q28@0:8Q16I24
@44@0:8Q16Q24Q32I40
@60@0:8Q16Q24Q32Q40Q48I56
@28@0:8Q16I24
@32@0:8@16^v24
@40@0:8@16Q24@32
@36@0:8@16Q24I32
@24@0:8Q16
^{ResourceListNode=^^?^{ResourceListNode}}
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
q16@0:8
{MTLResourceID=Q}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@48@0:8@16@24@32@40
{MPSStateTextureInfo=QQQQQQQ[4Q]}24@0:8Q16
@28@0:8Q16B24
v96@0:8@16@24Q32@40Q48@56Q64@72Q80Q88
@"MPSParallelExclusiveScan"
v24@0:8@?16
v32@0:8@16d24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLCommandQueue>"16@0:8
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
@32@0:8Q16Q24
[65^{HeapNode}]
^{CacheFrame=^{CacheFrame}^{ResourceNode}^{HeapNodeBlock}}
^{ResourceNode=^{ResourceNode}@}
^{MPSAutoCache=@@^{CacheFrame}}
{atomic<long>="__a_"{__cxx_atomic_impl<long, std::__cxx_atomic_base_impl<long>>="__a_value"Aq}}
@"<MPSHeapProvider>"
@48@0:8@16@24@32^@40
@48@0:8#16@24@32^@40
@40@0:8@16@24^@32
@"MPSImage"40@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32
@"NSArray"48@0:8@"<MTLCommandBuffer>"16@"MPSImageDescriptor"24@"MPSKernel"32Q40
@48@0:8Q16Q24Q32Q40
@64@0:8Q16Q24Q32Q40Q48Q56
@56@0:8@16Q24Q32Q40@48
@48@0:8@16{_NSRange=QQ}24Q40
@32@0:8{_NSRange=QQ}16
v120@0:8^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v112@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v120@0:8r^v16Q24Q32Q40{?={?=QQQ}{?=QQQ}}48{?=QQ}96Q112
v128@0:8r^v16Q24Q32Q40Q48{?={?=QQQ}{?=QQQ}}56{?=QQ}104Q120
v112@0:8r^v16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=QQ}88Q104
v40@0:8^v16Q24Q32
{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"featureChannelFormat"b3"_padding"b2}
@"MPSImage"
{MPSAutoTexture="_texture"{atomic<id<MTLTexture>>="__a_"{__cxx_atomic_impl<id<MTLTexture>, std::__cxx_atomic_base_impl<id<MTLTexture>>>="__a_value"A@}}"_resourceSize"{?="size"Q"align"Q}"_rowBytes"Q"_pixelInfo"{MPSPixelInfo="pixelFormat"b10"chunkSize"b6"chunkWidth"b4"chunkHeight"b4"pixelStyle"b4"colorModel"b4"bitDepth"b8"isSigned"b1"isClamped"b1"isInteger"b1"canFilter"b1"canRender"b1"canWrite"b1"canMultisample"b1"isSupported"b1"isCompressed"b1"chunkSizePlane2"b6"log2MinAlignment"b4"featureChannelFormat"b3"_padding"b2}""(?="_subTex"{?="parent"^{MPSAutoTexture}"subRangeStart"I"subRangeSize"I}""{?="_descriptor"@"MTLTextureDescriptor"""(?="_tex"{?="device"^{MPSDevice}}"_temporary"{?="cache"@"MPSCommandBufferImageCache"})})"_type"C"_twiddled"C}
(?=I{?=b8b8b16})16@0:8
v20@0:8(?=I{?=b8b8b16})16
(?="bits"I""{?="mpsKernelVersion"b8"intermediateObjectVersion"b8"version"b16})
@24@0:8f16f20
@32@0:8f16f20f24f28
f16@0:8
v20@0:8f16
@40@0:8@16I24i28@32
v56@0:8@16@24@32Q40Q48
v60@0:8@16@24@32Q40Q48I56
v48@0:8@16@24Q32Q40
v52@0:8@16@24Q32Q40I48
{?="shift1"^I"shift2"^I"mR"^"mT"^"M"^I"stateIdx"^I"maxGenerators"I}
@44@0:8@16I24Q28@36
@36@0:8@16I24Q28
@44@0:8@16I24@28@36
@"<MTLBuffer>"
@40@0:8@16@24^v32
@"MPSCommandBuffer"
{UserBufferBindingData_s="userBoundBuffer"@"<MTLBuffer>""userBoundBuffer_set"B"userBoundBytes"^v"userBoundBytes_length"Q"userBoundBytes_set"B"userBoundOffset"Q}
@24@0:8^Q16
{MPSCommandBufferDescriptor=QQ}16@0:8
v32@0:8{MPSCommandBufferDescriptor=QQ}16
@"MPSPredicate"
{MPSCommandBufferDescriptor="encoderCount"Q"producedValues"Q}
v24@0:8d16
h<(Rdn
[z`-
>e&6<
U_*1
H{e;
G,kv'z{
