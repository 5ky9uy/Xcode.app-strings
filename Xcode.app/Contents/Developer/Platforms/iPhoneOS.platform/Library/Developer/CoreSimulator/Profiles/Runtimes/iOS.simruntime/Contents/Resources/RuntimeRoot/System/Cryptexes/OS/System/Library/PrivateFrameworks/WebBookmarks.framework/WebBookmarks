webBookmarksMetaDataDidChangeNotification
com.apple.WebBookmarks.MetaDataDidChangeNotification
DeviceUUID
com.apple.WebBookmarkDeviceIdentifier.%p
v8@?0
v12@?0B8
<%@: %p' _UUID = %@
Modify (isMove: YES)
Modify (isMove: NO)
Delete
Title
IsSelectedFavoritesFolder
DateAdded
DateLastViewed
ImageURL
PreviewText
LastSelectedTab
BackgroundImage
IsPinned
Folder
Leaf
, Changed Attributes: %@
<BAChangeRecord: %p, Type: %@, Bookmark Type: %@, Bookmark ID: %d, Bookmark Sync Server ID: %@%@>
data
UndefinedDeviceClass
DeviceClassNumber
iPhone
iPad
v32@?0@"NSString"8Q16^B24
Type
605.2.2
606.1.16
-[WebBookmarkCloudKitSyncCollection dealloc]
-[WebBookmarkProductionSafariCloudKitSyncTabCollection dealloc]
<%s %p; localID: %d; serverID: %@; item: %p>
BAFolder
BABookmark
<%@: %p, type: %@, store owner: %@>
-[WBBookmarkDBAccess copyDeviceIdentifier]
-[WBBookmarkDBAccess resetDeviceIdentifier]
WebBookmarkDatabaseCreate
com.apple.dataaccess
BADatabaseOpen
BADatabaseSave
BADatabaseClose
BADatabaseCopySyncData
(null)
BADatabaseSetSyncData
BADatabaseClearAllSyncData
BADatabaseCopyChanges
BADatabaseClearChangesForToken
BADatabaseRemoveItemWithServerId
BADatabaseBeginMergingChanges
BADatabaseFinishMergingChanges
BAItemCopyServerId
BAItemSetServerId
BAItemCopyParentServerId
BAItemCopySyncKey
BAItemSetSyncKey
BAItemCopySyncData
BAItemSetSyncData
BAChangeGetChangeType
BAChangeCopyChangedItem
BAChangeCopyServerId
BAChangeIsMove
CKBAChangeGetItemType
CKBAChangeGetFolder
CKBAChangeGetBookmarkType
CKBABookmarkTypeForBookmark
CKBADatabasePerformMaintenanceAfterVersion
CKBADatabaseGetLocalCloudKitMigrationState
CKBADatabaseSetLocalCloudKitMigrationState
CKBADatabaseCopyAccountHash
CKBADatabaseSetAccountHash
CKBADatabaseCopyChangeToken
CKBADatabaseCopyItemWithLocalID
CKBADatabaseCopyLocalIDsInFolderWithLocalID
CKBADatabaseCopyItemWithServerId
CKBADatabaseAddItemUnderFolderWithServerId
saveBookmarkUnderFolderWithServerId
CKBADatabasePerformDeduplication
CKBADatabaseCopyServerIdsInFolderWithServerId
CKBADatabaseSetChildrenOrderForFolderWithServerId
@"NSString"16@?0@"NSString"8
CKBADatabaseCopyServerIdInFolderBeforeServerId
CKBADatabaseCopyServerIdInFolderAfterServerId
CKBADatabaseCopyFirstServerIdInFolderWithServerId
CKBADatabaseCopyLastServerIdInFolderWithServerId
CKBAItemGetItemType
CKBAItemGetIsInFolderWithServerSyncId
CKBAItemIsEqualToItem
CKBAFolderGetFolderType
CKBADatabaseCreateFolder
CKBABookmarkGetBookmarkType
CKBADatabaseCreateBookmark
CKBAChangeGetWasBookmarkMoved
CKBAChangeCopyDeletedBookmarkSyncData
CKBAChangeSetDeletedBookmarkSyncData
CKBAChangeCopyModifiedAttributes
CKBAItemCopyAttributes
CKBAItemSetModifiedAttributes
CKBAItemCopyValueForKey
CKBADatabaseClearAllLocalBookmarksForAutomatedTesting
com.apple.WebBookmarks.WBTabGroupSyncAgentProxy.%@.%p._syncObserverQueue
v20@?0B8@"NSError"12
v28@?0B8@"NSArray"12@"NSError"20
v16@?0@"NSError"8
v16@?0@"<WBTabGroupSyncAgentSyncObserver>"8
EncodedCKRecordSystemFields
Generations
ModifiedAttributeMask
ExtraPositionData
Position
MinimumAPIVersion
Deleted
ParentRecordID
AuxiliaryRecords
IsDeletedRecordZone
ShareRecord
default
ParentAndPosition
IsTabGroup
HasUserDefinedPreviewText
v16@?0@"NSString"8
CloudBookmarkPosition
CloudBookmarkPositionSortValue
CloudBookmarkSyncData
CloudBookmarkGeneration
@"<NSSecureCoding>"32@?0@"NSString"8@"CKRecord"16^B24
@"CKRecordID"16@?0@"CKRecord"8
Address
Pinned
<%@: %p; title: %@, address: %@, pinned: %@>
<%@: %p; title hash: %zu, address hash: %zu, pinned: %@>
com.apple.WebBookmarks.TabGroupSyncAgent.ErrorDomain
Failed to open database
The feature is disabled
Failed to acquire the lock on the database
Error: domain=%@, code=%ld
B16@?0@"WebBookmark"8
Local
Private
@"WBMutableTab"16@?0@"NSOrderedCollectionChange"8
v16@?0@"NSMutableArray"8
@"NSOrderedCollectionChange"16@?0@"NSOrderedCollectionChange"8
@"WBMutableTab"16@?0@"WBTab"8
@"NSString"16@?0@"WBMutableTab"8
BookmarkID
ParentID
AssociatedBookmarkID
SpecialFolderID
AssociatedBookmark
ModifiedAttributes
Bookmarks
@"WebBookmark"16@?0@"NSDictionary"8
dictionaryRepresentationForInMemoryChangeTracking
Modify
Move
Reorder
Replace
<%@: %p; type = %@; bookmark = %d %@; parent = %d; associated bookmark = %d;>
pinned
privatePinned
recentlyClosed
TopScopedBookmarkList
TopScopedBookmarkList_
16.0
614.1.25.0.9
614.1.25.0.1
DatabaseContainsShareRecord
614.2
com.apple.WebBookmarks.SafariTabs.lock
TabChanges.plist
CREATE TABLE IF NOT EXISTS windows (id INTEGER PRIMARY KEY,active_tab_group_id INTEGER DEFAULT NULL,date_closed REAL DEFAULT NULL,extra_attributes BLOB DEFAULT NULL,is_last_session INTEGER DEFAULT 0,local_tab_group_id INTEGER DEFAULT NULL,private_tab_group_id INTEGER DEFAULT NULL,scene_id TEXT DEFAULT NULL,uuid TEXT NOT NULL UNIQUE,FOREIGN KEY (active_tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE SET NULL,FOREIGN KEY (local_tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (private_tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE)
CREATE INDEX IF NOT EXISTS uuid_index ON windows (uuid)
CREATE TABLE IF NOT EXISTS windows_tab_groups (id INTEGER PRIMARY KEY,active_tab_id INTEGER DEFAULT NULL,tab_group_id INTEGER NOT NULL,window_id INTEGER NOT NULL,FOREIGN KEY (active_tab_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (window_id) REFERENCES windows (id) ON UPDATE CASCADE ON DELETE CASCADE,UNIQUE (tab_group_id, window_id))
CREATE INDEX IF NOT EXISTS window_index ON windows_tab_groups (window_id)
WHERE local_tab_group_id = 0 OR local_tab_group_id IS NULL OR private_tab_group_id = 0 OR private_tab_group_id IS NULL
WHERE local_tab_group_id IN (SELECT windows.local_tab_group_id FROM windows LEFT JOIN bookmarks ON windows.local_tab_group_id = bookmarks.id WHERE bookmarks.id IS NULL)
WHERE private_tab_group_id IN (SELECT windows.private_tab_group_id FROM windows LEFT JOIN bookmarks ON windows.private_tab_group_id = bookmarks.id WHERE bookmarks.id IS NULL)
B8@?0
@"NSArray"16@?0@"WBMutableTabGroup"8
UPDATE windows SET is_last_session = 1 WHERE uuid = %@
BEGIN
PRAGMA user_version = 44
PRAGMA user_version = 45
SELECT id, uuid FROM windows %@
Failed to fetch windows
DELETE FROM windows %@
Failed to delete windows
syncable = 0 AND parent IN (SELECT id FROM bookmarks WHERE parent = 0 AND syncable = 1 AND type = 1 AND subtype = 0 AND hidden = 0 AND special_id = 0)
parent = 0 AND syncable = 1 AND type = 1 AND subtype = 0 AND hidden = 0 AND special_id = 0
order_index ASC
q24@?0@"WebBookmark"8@"WebBookmark"16
serverID
v24@?0@"WebBookmark"8^B16
@"CKRecordID"16@?0@"WebBookmark"8
@"WBBookmarkDatabaseSyncData"16@?0@"WBBookmarkDatabaseSyncData"8
@"WBTab"16@?0@"WebBookmark"8
B16@?0@"WBMutableTab"8
'%@'
@"WBWindow"16@?0@"WebBookmark"8
WHERE uuid = %@
SELECT windows.id FROM windows WHERE windows.uuid = ?
Failed to fetch window id
SELECT tab_bookmarks.external_uuid, tab_group_bookmarks.external_uuid FROM bookmarks AS tab_bookmarks INNER JOIN windows_tab_groups ON tab_bookmarks.id = windows_tab_groups.active_tab_id INNER JOIN bookmarks AS tab_group_bookmarks ON windows_tab_groups.tab_group_id = tab_group_bookmarks.id WHERE windows_tab_groups.window_id = ?
Failed to fetch active tabs
SELECT bookmarks.external_uuid, windows.local_tab_group_id, windows.private_tab_group_id, windows.scene_id, windows.uuid, windows.id, windows.extra_attributes FROM windows INNER JOIN bookmarks ON windows.active_tab_group_id = bookmarks.id %@
Failed to fetch window states
WHERE windows.date_closed = (SELECT MAX(date_closed) from windows)
WHERE windows.is_last_session = 1
WHERE windows.date_closed > 0
WHERE windows.date_closed IS NULL
bookmark
B16@?0@"WBTabGroup"8
INSERT INTO windows (active_tab_group_id, date_closed, extra_attributes, is_last_session, local_tab_group_id, private_tab_group_id, scene_id, uuid) VALUES (?, ?, ?, 1, ?, ?, ?, ?) ON CONFLICT (uuid) DO UPDATE SET active_tab_group_id = excluded.active_tab_group_id, date_closed = excluded.date_closed, extra_attributes = excluded.extra_attributes, local_tab_group_id = excluded.local_tab_group_id, private_tab_group_id = excluded.private_tab_group_id, is_last_session = 1
Failed to add a window
INSERT INTO windows_tab_groups (active_tab_id, tab_group_id, window_id) VALUES (?, ?, ?) ON CONFLICT (tab_group_id, window_id) DO UPDATE SET active_tab_id = excluded.active_tab_id
Failed to add an active tab
v32@?0@"NSString"8@"NSString"16^B24
WHERE is_last_session = 0
DELETE FROM bookmarks WHERE syncable = 0 AND (parent != 0 OR external_uuid NOT IN (%@))
Failed to delete all tabs
@"NSNumber"16@?0@"WBTab"8
UPDATE bookmarks SET date_closed = %f WHERE id in (%@)
Failed to update tab close date
@"NSString"16@?0@"WBWindowState"8
UPDATE windows SET is_last_session = CASE WHEN uuid in (%@) THEN 1 ELSE 0 END
Failed to update last session
Windows
SELECT sync_data FROM bookmarks WHERE parent = ? AND server_id IS NOT NULL
Shared Tab Groups are not supported
https://www.icloud.com/%@/unsupported-safari-version
%@TabGroupTab_%@
server_id LIKE '%@%%'
PinnedTabs
PrivatePinnedTabs
WindowStatesKey
<%@: %p; pinnedTabs = %zu; privatePinnedTabs = %zu; windows = %zu>
ROLLBACK
COMMIT
BEGIN DEFERRED
SELECT NULL FROM bookmarks
apple-internal-install
BEGIN IMMEDIATE
com.apple.MobileSafari.StopSyncing
Changes
FileURL
com.apple.WebBookmarks.WebBookmarkChangeSet.%p
B16@?0@"WebBookmarkChange"8
v20@?0@"NSMutableDictionary"8i16
v16@?0@"NSMutableDictionary"8
@"NSDictionary"16@?0@"WebBookmarkChange"8
WBErrorDomain
Misuse of WBReadingList interface. Use class method defaultReadingList.
com.apple.WebBookmarks.AddToReadingListQueue
com.apple.bookmarks.SelectedFavoritesFolder
PinnedTitle
PinnedAddress
ReadStatusGeneration
DeviceIdentifier
BackgroundImageModifiedState
%@ %d (%d)
 '%@' [%@] [%@]
B16@?0@"NSMutableDictionary"8
v40@?0@"WBSCRDTField"8@"WBSCRDTField"16Q24^B32
tabGroupUUID
privateBrowsing
local
shared
Start page title for new tab
<%@: %p; tabGroupUUID = %@; title = %@; url = %@; uuid = %@>
<%@: %p; uuid = %@>
DidDownloadIconsNotification
BookmarkIdentifier
com.apple.WebBookmarks.SQLiteError
com.apple.WebBookmarks.DidVacuumDatabaseNotification
WebBookmarksFolderContentsDidChangeNotification
WebBookmarksTabFolderContentsDidChangeNotification
WebBookmarksDidReloadNotification
WebBookmarksSpecialFoldersDidChangeNotification
WebBookmarksChangedFolderID
com.apple.bookmarks.OmitFromUI
_DatabaseResetReason
com.apple.bookmarks.IsBuiltinBookmark
com.apple.bookmarks.IsBuiltinDeviceBookmark
com.apple.bookmarks.IsCarrierBookmark
LocalURL
LocalTitle
nonGlobalStartPageBackgroundImageDidChangeRemotelyNotification
backgroundImageIdentifier
com.apple.webbookmarksd.readingListfetching
com.apple.WebBookmarks.webbookmarksd
WebBookmarksDataclassDidChangeNotification
WebBookmarksResetCloudHistoryAccount
ComputerAnchorKey
BASyncData
LastSyncedRecordGeneration
_FavoritesFolderID
BookmarksBar
BookmarksMenu
com.apple.ReadingList
com.apple.WebFilterWhiteList
com.apple.FrequentlyVisitedSites
_ck_local_migration_state_
AccountHash
WebBookmarksDetectedLocalMigrationStateTransitionNotification
fromMigrationState
toMigrationState
DAVHomeURL
BookmarkImages
com.apple.WebBookmarks.WebBookmarkCollection
DebugForceMigrationFromSafariVersionKey
Bookmarks.db
SafariTabs.db
DebugSafariTabs.db
corrupted
%@.corrupted
-journal
-wal
-shm
PRAGMA journal_mode = wal
:memory:
SELECT * FROM bookmarks LIMIT 1
Database failed full integrity check.
PRAGMA foreign_keys = ON
PRAGMA auto_vacuum = INCREMENTAL
SELECT name from sqlite_master where type = 'table'
bookmarks
generations
sync_properties
bookmark_title_words
folder_ancestors
PRAGMA integrity_check(1)
Bookmarks.plist
Bookmarks.plist.anchor.plist
bookmarkChanges.plist
Library/Caches
com.apple.mobilesafari
ReadingListArchives
UPDATE bookmarks SET archive_status = ? WHERE archive_status = ? OR archive_status = ?
PendingBookmarkChanges.plist
UPDATE bookmarks SET archive_status = ? WHERE parent = ? AND id IN (%@)
parent = %d AND deleted = 0 AND (archive_status = %zd OR archive_status = %zd)
UPDATE bookmarks SET archive_status = %zd WHERE %@
web_filter_status = %zd
UPDATE bookmarks SET web_filter_status = ? WHERE parent = ? AND deleted = 0 AND web_filter_status != ?
PRAGMA freelist_count
PRAGMA page_count
PRAGMA incremental_vacuum(256)
VACUUM
PRAGMA wal_checkpoint(TRUNCATE)
parent = %d AND deleted = 0 AND read = 1 AND (archive_status = %zd OR archive_status = %zd)
Trying to edit bookmarks without first obtaining the bookmarks database file lock.
Safari
id = %d AND deleted = 0
external_uuid = ? AND deleted = 0
SELECT external_uuid FROM bookmarks WHERE deleted = 0 AND external_uuid IN (
SELECT id FROM bookmarks WHERE parent = ? AND type = 1 AND title = ? AND deleted = 0
parent = ? AND title = ? AND deleted = 0 ORDER BY order_index
parent = %d AND type = 1 AND deleted = 0 AND hidden = 0 AND hidden_ancestor_count = 0 ORDER BY order_index
SELECT COUNT(*) FROM bookmarks WHERE parent = ? AND type = 0 AND hidden = 0
SELECT parent, count(*) FROM bookmarks WHERE (parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) AND hidden = 0 AND type = 0) GROUP BY parent
SELECT order_index FROM bookmarks WHERE id = %d
SELECT parent FROM bookmarks WHERE id = %d
SELECT modified_attributes FROM bookmarks WHERE id = %d
SELECT id FROM bookmarks WHERE external_uuid = '%@'
SELECT external_uuid FROM bookmarks WHERE parent = %d ORDER BY order_index ASC
SELECT id FROM bookmarks WHERE special_id = %d
SELECT id FROM bookmarks WHERE special_id = %d AND deleted = 0
web_filter_status != %zd
read = 0 AND 
parent = %d AND deleted = 0
 AND %@
order_index DESC
SELECT COUNT(*) FROM bookmarks WHERE special_id == 0 AND id != 0 AND deleted = 0;
http
https
fetched_icon = 0 AND (url LIKE 'http:%%' OR url LIKE 'https:%%') AND parent IN (%@)
UPDATE bookmarks SET fetched_icon = 0 WHERE parent IN (%@)
UPDATE bookmarks SET icon = NULL, fetched_icon = 0 WHERE parent IN (%@)
Trying to save bookmarks without first obtaining the bookmarks database file lock.
Trying to save a bookmark without first obtaining the bookmarks database file lock.
UPDATE bookmarks SET order_index = order_index + 1 WHERE order_index < ? AND order_index >= ? AND parent = ?
UPDATE bookmarks SET order_index = order_index - 1 WHERE order_index > ? AND order_index <= ? AND parent = ?
UPDATE bookmarks SET order_index = ?1, dav_generation = ?2%@ WHERE id = ?3
, modified_attributes = modified_attributes | ?4
B16@?0@"NSString"8
@"NSNumber"16@?0@"WebBookmark"8
v32@?0@"WebBookmark"8Q16^B24
SELECT id, parent, num_children, (SELECT COUNT(*) FROM bookmarks AS child_bookmark WHERE child_bookmark.parent = parent_bookmark.id AND hidden = 0) AS real_num_children FROM bookmarks AS parent_bookmark WHERE num_children != real_num_children
UPDATE bookmarks SET num_children = ? WHERE id = ?
DISTINCT url
SELECT %s FROM bookmarks WHERE type = 0 AND url >= ? AND url < ? AND deleted = 0 LIMIT ?
SELECT %s FROM bookmarks WHERE type = 0 AND deleted = 0 LIMIT ?
SELECT id, title, url FROM bookmarks WHERE type = 0 AND deleted = 0
AND parent = %d
AND hidden = 0 AND hidden_ancestor_count = 0
SELECT %@ FROM bookmarks INNER JOIN bookmark_title_words ON bookmarks.id = bookmark_title_words.bookmark_id WHERE bookmark_title_words.word LIKE ? AND type = 0 AND deleted = 0 AND web_filter_status != %zd AND title IS NOT NULL AND url IS NOT NULL AND url != "" %@
PRAGMA case_sensitive_like = true
@"WebBookmark"8@?0
v32@?0@"NSString"8@"NSString"16^{BookmarkSQLStatement=^^?^{sqlite3_stmt}BBi}24
SELECT %@ FROM bookmarks WHERE url LIKE ? AND type = 0 AND deleted = 0 AND web_filter_status != %zd AND title IS NOT NULL AND url IS NOT NULL %@
PRAGMA case_sensitive_like = false
 AND (archive_status = %zd OR archive_status = %zd)
deleted = 0 AND parent = ? AND web_filter_status != ? AND title IS NOT NULL AND url IS NOT NULL%@ ORDER BY order_index DESC LIMIT ?
SELECT %@ FROM bookmarks INNER JOIN bookmark_title_words ON bookmarks.id = bookmark_title_words.bookmark_id WHERE bookmark_title_words.word LIKE ? AND %@
SELECT %@ FROM bookmarks WHERE url LIKE ? AND %@
SELECT COUNT(*) FROM bookmarks WHERE order_index < ? AND parent = ? AND (read = 0 AND deleted = 0 AND id NOT IN (%@))
SELECT id FROM bookmarks WHERE parent = %d AND deleted = 0 AND web_filter_status = %zd ORDER BY order_index DESC LIMIT %d
id IN (%@) AND 
archive_status IN (%zd,%zd,%zd)
archive_status IN (%zd,%zd)
(%@)
(%@) AND (locally_added = 1 OR read = 0)
(%@) AND locally_added = 1
 ORDER BY archive_status ASC, read ASC, locally_added DESC, order_index DESC
 LIMIT 1
read ASC, order_index DESC
syncable = 0 AND parent = 0
com.apple.Bookmarks.lock
SELECT MAX(order_index) + 1 FROM bookmarks WHERE special_id != 0
SELECT COUNT(*), MAX(order_index) FROM bookmarks WHERE parent = ? AND deleted = 0 AND syncable = 1
special_id = ? AND deleted = 0
%@%%
url LIKE ? AND deleted = 0 AND parent = ? LIMIT 1
url = ? AND deleted = 0 AND parent = ? ORDER BY last_modified ASC LIMIT 1
type = 1 AND title = ? AND parent = ? AND deleted = 0 %@
AND server_id IS NULL
type = 0 AND url = ?1 AND parent = ?2 AND deleted = 0 AND server_id IS NULL
type = 0 AND title = ?3 AND url = ?1 AND parent = ?2 AND deleted = 0
PRAGMA user_version
PRAGMA user_version = %d
CREATE TABLE generations (generation INTEGER NOT NULL)
INSERT INTO generations (generation) VALUES (1)
CREATE TABLE sync_properties (key TEXT NOT NULL, value TEXT NOT NULL)
CREATE INDEX sync_properties_key_index ON sync_properties (key)
INSERT INTO sync_properties (key, value) VALUES ('_dav_generation', 1)
INSERT INTO bookmarks (id, special_id, parent, type, order_index, num_children, editable, deletable, title, external_uuid) VALUES (1, 1, 0, 1, 0, 0, 0, 0, 'BookmarksBar', '%@')
UPDATE bookmarks SET num_children = 1 WHERE id = 0
DROP TABLE IF EXISTS participant_presence
CREATE TABLE participant_presence (id INTEGER PRIMARY KEY, participant_id TEXT, tab_group_server_id TEXT, tab_server_id TEXT, UNIQUE(participant_id))
SELECT tab_group_server_id, tab_server_id FROM participant_presence WHERE participant_id = ?
SELECT tab_server_id FROM participant_presence WHERE participant_id = ? AND tab_group_server_id = ?
DELETE FROM participant_presence WHERE participant_id = ?
INSERT INTO participant_presence (participant_id, tab_group_server_id, tab_server_id) VALUES (?, ?, ?)
DELETE FROM participant_presence WHERE participant_id = ? AND tab_group_server_id = ?
DELETE FROM participant_presence WHERE tab_group_server_id NOT IN (SELECT server_id FROM bookmarks WHERE type = 1 AND subtype = 0) OR tab_server_id NOT IN (SELECT server_id FROM bookmarks WHERE type = 0 AND subtype = 0)
SELECT bookmarks.external_uuid FROM bookmarks INNER JOIN participant_presence ON bookmarks.server_id = participant_presence.tab_server_id WHERE participant_id = ? AND tab_group_server_id = ?
SELECT participant_id FROM participant_presence WHERE tab_group_server_id = ?
SELECT participant_id FROM participant_presence WHERE tab_server_id = ?
DROP TABLE IF EXISTS bookmark_title_words
CREATE TABLE bookmark_title_words (id INTEGER PRIMARY KEY AUTOINCREMENT, bookmark_id INTEGER NOT NULL CONSTRAINT fk_bookmark_id REFERENCES bookmarks(id) ON DELETE CASCADE, word TEXT, word_index INTEGER)
CREATE TRIGGER fkd_bookmark_title_words_bookmark_id BEFORE DELETE ON bookmarks      FOR EACH ROW BEGIN DELETE FROM bookmark_title_words WHERE bookmark_id = OLD.id;      END;
CREATE INDEX title_word_index ON bookmark_title_words(word)
CREATE INDEX title_bookmark_id_index ON bookmark_title_words(bookmark_id)
DROP TABLE IF EXISTS bookmarks
CREATE TABLE bookmarks (id INTEGER PRIMARY KEY AUTOINCREMENT,special_id INTEGER DEFAULT 0,parent INTEGER, type INTEGER,title TEXT,url TEXT COLLATE NOCASE,num_children INTEGER DEFAULT 0,editable INTEGER DEFAULT 1,deletable INTEGER DEFAULT 1,hidden INTEGER DEFAULT 0,hidden_ancestor_count INTEGER DEFAULT 0,order_index INTEGER NOT NULL,external_uuid TEXT UNIQUE,read INTEGER DEFAULT NULL,last_modified REAL DEFAULT NULL,server_id TEXT, sync_key TEXT,sync_data BLOB,added INTEGER DEFAULT 1,deleted INTEGER DEFAULT 0,extra_attributes BLOB DEFAULT NULL,local_attributes BLOB DEFAULT NULL,fetched_icon BOOL DEFAULT 0, icon BLOB DEFAULT NULL,dav_generation INTEGER DEFAULT 0,locally_added BOOL DEFAULT 0,archive_status INTEGER DEFAULT 0,syncable BOOL DEFAULT 1,web_filter_status INTEGER DEFAULT 0, modified_attributes UNSIGNED BIG INT DEFAULT 0, date_closed REAL DEFAULT NULL, last_selected_child INTEGER DEFAULT NULL, subtype INTEGER DEFAULT 0, FOREIGN KEY (last_selected_child) REFERENCES bookmarks (id) ON DELETE SET NULL)
CREATE INDEX special_id_index ON bookmarks (special_id)
CREATE INDEX autocomplete_index ON bookmarks (url)
CREATE INDEX folder_list_index ON bookmarks (parent, type, order_index)
CREATE INDEX group_index ON bookmarks (parent, order_index)
CREATE INDEX sync_index ON bookmarks (external_uuid)
CREATE INDEX server_id_index ON bookmarks(server_id)
CREATE INDEX dav_generation_index ON bookmarks(dav_generation)
CREATE INDEX reading_list_index ON bookmarks (parent, deleted, web_filter_status, order_index DESC)
INSERT INTO bookmarks (id, type, order_index, num_children, title, external_uuid) VALUES (0, 1, 0, 0, 'Root', 'Root')
ALTER TABLE bookmarks ADD COLUMN special_id INTEGER DEFAULT 0
UPDATE bookmarks SET title = 'Root', external_uuid = 'Root' WHERE id = 0
UPDATE bookmarks SET special_id = 1 WHERE id = 1
UPDATE bookmarks SET special_id = 2 WHERE id = 2
PRAGMA user_version = 1
CREATE TABLE bookmark_title_words (id INTEGER PRIMARY KEY, bookmark_id INTEGER NOT NULL CONSTRAINT fk_bookmark_id REFERENCES bookmarks(id) ON DELETE CASCADE, word TEXT, word_index INTEGER)
CREATE TRIGGER fkd_bookmark_title_words_bookmark_id BEFORE DELETE ON bookmarks         FOR EACH ROW BEGIN DELETE FROM bookmark_title_words WHERE bookmark_id = OLD.id;         END;
PRAGMA user_version = 3
ALTER TABLE bookmarks ADD COLUMN server_id TEXT
ALTER TABLE bookmarks ADD COLUMN sync_key TEXT
ALTER TABLE bookmarks ADD COLUMN sync_data BLOB
PRAGMA user_version = 4
SELECT count(*) FROM sync_properties WHERE key = '_dav_generation'
ALTER TABLE bookmarks ADD COLUMN deleted INTEGER DEFAULT 0
ALTER TABLE bookmarks ADD COLUMN dav_generation INTEGER DEFAULT 0
PRAGMA user_version = 5
PRAGMA user_version = 6
CREATE TABLE folder_ancestors (id INTEGER PRIMARY KEY, folder_id INTEGER NOT NULL CONSTRAINT fk_ancestors_folder_id REFERENCES bookmarks(id) ON DELETE CASCADE, ancestor_id INTEGER NOT NULL)
CREATE TRIGGER fkd_ancestors_folder_id BEFORE DELETE ON bookmarks FOR EACH ROW BEGIN DELETE FROM folder_ancestors WHERE folder_id = OLD.id; END;
CREATE INDEX ancestor_folder_id_index on folder_ancestors(folder_id)
CREATE INDEX ancestor_ancestor_id_index on folder_ancestors(ancestor_id)
PRAGMA user_version = 7
ALTER TABLE bookmarks ADD COLUMN extra_attributes BLOB DEFAULT NULL
PRAGMA user_version = 8
DROP INDEX IF EXISTS deleted_index
DROP INDEX IF EXISTS autocomplete_index
CREATE INDEX autocomplete_index ON bookmarks(url)
PRAGMA user_version = 9
ALTER TABLE bookmarks ADD COLUMN hidden INTEGER DEFAULT 0
PRAGMA user_version = 10
ALTER TABLE bookmarks ADD COLUMN hidden_ancestor_count INTEGER DEFAULT 0
PRAGMA user_version = 11
ALTER TABLE bookmarks ADD COLUMN read INTEGER DEFAULT NULL
ALTER TABLE bookmarks ADD COLUMN last_modified REAL DEFAULT NULL
PRAGMA user_version = 14
SELECT id FROM bookmarks WHERE special_id = 3
UPDATE bookmarks SET read = 0 WHERE read IS NULL and parent = ?
PRAGMA user_version = 15
CREATE INDEX title_word_bookmark_id_index ON bookmark_title_words(bookmark_id)
PRAGMA user_version = 16
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS count_bookmarks WHERE count_bookmarks.parent = bookmarks.id AND hidden = 0) WHERE type = 1
PRAGMA user_version = 19
SELECT count(*) FROM bookmarks WHERE parent = ? AND deleted = 0
UPDATE bookmarks SET order_index = ? - order_index - 1 WHERE parent = ?
PRAGMA user_version = 21
ALTER TABLE bookmarks ADD COLUMN icon BLOB DEFAULT NULL
ALTER TABLE bookmarks ADD COLUMN fetched_icon BOOL DEFAULT 0
SELECT id, extra_attributes FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET icon = ?, fetched_icon = ?, extra_attributes = ?, dav_generation = ? WHERE id = ?
PRAGMA user_version = 22
DELETE FROM sync_properties WHERE key = '_dav_generation'
INSERT INTO sync_properties (key, value) VALUES ('_dav_generation', ?)
PRAGMA user_version = 23
ALTER TABLE bookmarks ADD COLUMN added INTEGER DEFAULT 1
UPDATE bookmarks SET added = 0 WHERE server_id IS NOT NULL
PRAGMA user_version = 24
ALTER TABLE bookmarks ADD COLUMN archived_offline BOOL DEFAULT 0
ALTER TABLE bookmarks ADD COLUMN last_archived REAL DEFAULT NULL
PRAGMA user_version = 25
PRAGMA user_version = 26
PRAGMA user_version = 27
PRAGMA user_version = 28
ALTER TABLE bookmarks ADD COLUMN locally_added BOOL DEFAULT 0
PRAGMA user_version = 29
ALTER TABLE bookmarks ADD COLUMN local_attributes BLOB DEFAULT NULL
SELECT id, extra_attributes, last_archived FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET extra_attributes = ?, local_attributes = ?, dav_generation = ? WHERE id = ?
ALTER TABLE bookmarks DROP COLUMN last_archived
PRAGMA user_version = 30
ALTER TABLE bookmarks ADD COLUMN archive_status INTEGER DEFAULT 0
UPDATE bookmarks SET archive_status = archived_offline
UPDATE bookmarks SET archived_offline = NULL
UPDATE bookmarks SET last_archived = NULL
PRAGMA user_version = 31
PRAGMA user_version = 32
UPDATE bookmarks SET fetched_icon = 0, icon = NULL WHERE parent = (SELECT id FROM bookmarks WHERE special_id = 3)
PRAGMA user_version = 33
ALTER TABLE bookmarks ADD COLUMN syncable BOOL DEFAULT 1
PRAGMA user_version = 34
UPDATE bookmarks SET archive_status = 0 WHERE archive_status IS NULL
PRAGMA user_version = 35
ALTER TABLE bookmarks ADD COLUMN web_filter_status INTEGER DEFAULT 0
PRAGMA user_version = 36
PRAGMA user_version = 37
PRAGMA user_version = 38
ALTER TABLE bookmarks ADD COLUMN modified_attributes UNSIGNED BIG INT DEFAULT 0
PRAGMA user_version = 39
DELETE FROM bookmark_title_words WHERE bookmark_id NOT IN (SELECT id FROM bookmarks)
DELETE FROM folder_ancestors WHERE folder_id NOT IN (SELECT id FROM bookmarks)
ALTER TABLE bookmarks ADD COLUMN date_closed REAL DEFAULT NULL
PRAGMA user_version = 41
ALTER TABLE bookmarks ADD COLUMN last_selected_child INTEGER DEFAULT NULL
ALTER TABLE bookmarks ADD FOREIGN KEY (last_selected_child) REFERENCES bookmarks (id) ON DELETE SET NULL
PRAGMA user_version = 42
PRAGMA user_version = 43
ALTER TABLE bookmarks ADD COLUMN subtype INTEGER DEFAULT 0
PRAGMA user_version = 46
PRAGMA user_version = 47
DROP TABLE IF EXISTS participants
PRAGMA user_version = 48
deleted = 1
@"WBBookmarkSyncData"16@?0@"WBBookmarkSyncData"8
PRAGMA user_version = 49
PRAGMA user_version = 50
id NOT IN (SELECT MIN(id) FROM bookmarks GROUP BY external_uuid)
UPDATE bookmarks SET external_uuid = '%@' WHERE id = %d
CREATE UNIQUE INDEX IF NOT EXISTS unique_uuid ON bookmarks(external_uuid)
PRAGMA user_version = 51
SELECT id, local_attributes, icon FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET local_attributes = ?, icon = ? WHERE id = ?
SELECT %@, %s FROM bookmarks
SELECT COUNT(*) FROM bookmarks WHERE special_id = 1
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = 0
INSERT INTO bookmarks (special_id, parent, type, order_index, editable, deletable, title, external_uuid) VALUES (1, 0, 1, 0, 0, 0, 'BookmarksBar', '')
UPDATE bookmarks SET num_children = num_children + 1 WHERE id = 0
newestLaunchedSafariVersion
newestLaunchedOSVersion
DELETE FROM bookmarks WHERE special_id = %d
AND hidden = 0 AND id != %d AND (num_children > 0 OR special_id != %d)
SELECT count(*) FROM bookmarks WHERE %@
SELECT id FROM bookmarks WHERE %@
SELECT %@ FROM bookmarks WHERE %@
SELECT COUNT(*) from folder_ancestors WHERE folder_id = ? AND ancestor_id = ?
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = ? AND order_index >= ?
UPDATE bookmarks SET parent = ?1, order_index = ?2,%@%@ icon = NULL, fetched_icon = 0 WHERE id = ?3
 modified_attributes = modified_attributes | ?4,
 dav_generation = ?5,
UPDATE bookmarks SET order_index = (order_index - 1) WHERE parent = ? AND order_index > ?
SELECT id FROM bookmarks WHERE server_id = ? AND deleted = 1
INSERT INTO bookmarks (order_index, deleted, added, parent, server_id, dav_generation%@) VALUES (0, 1, 0, -1, ?, ?%@)
, sync_data
DELETE FROM bookmarks WHERE deleted = 1
DELETE FROM bookmarks WHERE deleted = 1 AND dav_generation <= %zu
DELETE FROM bookmarks WHERE deleted = 1 AND id = %d
UPDATE bookmarks SET added = 1, server_id = NULL, sync_key = NULL, sync_data = NULL WHERE parent IN (select folder_id from folder_ancestors where ancestor_id = ?) OR parent = ? OR id = ?
UPDATE bookmarks SET server_id = NULL, sync_key = NULL, sync_data = NULL
UPDATE generations SET generation = 0
UPDATE bookmarks SET dav_generation = ? WHERE id = ?
UPDATE bookmarks SET added = 1
UPDATE bookmarks SET order_index = (order_index - 1) WHERE parent = %d AND order_index > %d
DELETE FROM bookmarks WHERE parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) OR parent = ?%@
 OR id = ?
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = %d AND order_index >= %d
SELECT (hidden + hidden_ancestor_count) FROM bookmarks WHERE id = ?
INSERT INTO bookmarks (title, url, parent, type, external_uuid, order_index, extra_attributes, fetched_icon, icon, locally_added, archive_status, web_filter_status, hidden_ancestor_count, editable, local_attributes, syncable, dav_generation, last_selected_child, subtype) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SELECT count(*) FROM Bookmarks WHERE special_id = %u
Recovered
UPDATE bookmarks SET title = ?1, url = ?2, extra_attributes = ?3, local_attributes = ?11, fetched_icon = ?4, icon = ?5, locally_added = ?10, archive_status = ?8, web_filter_status = ?12, last_selected_child = ?14%@%@ WHERE id = ?6
, dav_generation = ?7
, modified_attributes = ?13
UPDATE bookmarks SET hidden = ? WHERE id = ?
UPDATE bookmarks SET last_modified = ?, read = ? WHERE id = ?
UPDATE bookmarks SET special_id = %u, editable = 0, deletable = 0 WHERE id = %u
UPDATE bookmarks SET num_children = num_children - 1 WHERE id = %d
UPDATE bookmarks SET num_children = num_children + 1 WHERE id = %d
SELECT server_id FROM bookmarks WHERE id = ?
deleted = 0 AND
SELECT id FROM bookmarks WHERE %@ %@ ORDER BY server_id ASC
rtrim(server_id, '/') LIKE ?
server_id = ?
%%%@
%@ %@ ORDER BY server_id ASC
UPDATE bookmarks SET server_id = ? WHERE id = ?
SELECT parent, order_index FROM bookmarks WHERE server_id = ? AND deleted = 0
SELECT special_id FROM bookmarks WHERE id = ? AND deleted = 0
SELECT server_id, %@(order_index) FROM bookmarks WHERE parent = ? AND order_index %@ ? AND server_id IS NOT NULL AND deleted = 0
SELECT id, special_id FROM bookmarks WHERE server_id = ? AND deleted = 0
SELECT %@(order_index), server_id FROM bookmarks WHERE parent = ? AND server_id IS NOT NULL
BookmarksSyncMetadata.plist
SafariTabsSyncMetadata.plist
UPDATE bookmarks SET sync_key = ? WHERE id = ?
UPDATE bookmarks SET sync_data = ? WHERE id = ?
SELECT sync_key FROM bookmarks WHERE server_id = ? AND deleted = 0 ORDER BY server_id ASC
SELECT sync_key FROM bookmarks WHERE deleted = 0 AND rtrim(server_id, '/') LIKE ? ORDER BY server_id ASC
SELECT server_id from bookmarks where parent = ? AND deleted = 0
SELECT server_id FROM bookmarks WHERE parent = ? AND deleted = 0 AND order_index = ?
UPDATE bookmarks SET order_index = ? WHERE id = ?
SAVEPOINT bookmarksdav_order
RELEASE SAVEPOINT bookmarksdav_order
ROLLBACK TRANSACTION TO SAVEPOINT bookmarksdav_order
SELECT ancestor_id from folder_ancestors WHERE folder_id = ?
DELETE FROM folder_ancestors WHERE folder_id IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) OR folder_id = ?;
DELETE FROM bookmark_title_words WHERE bookmark_id = %d
INSERT INTO bookmark_title_words (bookmark_id, word, word_index) VALUES (?, ?, ?)
SELECT id, title FROM bookmarks where type = 0 AND deleted = 0
UPDATE generations SET generation = generation + 1
SELECT %@ %@
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE bookmarks.id != 0 AND added = 1 AND syncable = 1 GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE added = 1 AND id != 0 AND type = 0 AND syncable = 1
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE dav_generation > %ld AND deleted = 0 AND added = 0 AND bookmarks.id != 0 AND syncable = 1 AND (modified_attributes & %llu) == %llu GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE dav_generation > %ld AND deleted = 0 AND added = 0 AND id != 0 AND syncable = 1 AND modified_attributes != 0 AND ((modified_attributes & %llu) != %llu OR type = 0)
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE dav_generation = %ld AND deleted = 0 AND added = 0 AND bookmarks.id != 0 AND syncable = 1 AND (modified_attributes & %llu) == %llu GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE dav_generation = %ld AND deleted = 0 AND added = 0 AND id != 0 AND syncable = 1 AND ((modified_attributes & %llu) != %llu OR type = 0)
FROM bookmarks WHERE deleted = 1 AND server_id IS NOT NULL AND syncable = 1
SELECT %@, added, deleted, dav_generation FROM bookmarks WHERE id != 0 AND syncable = 1 AND dav_generation > %ld AND (added = 1 OR deleted = 1 OR modified_attributes != 0) ORDER BY dav_generation ASC LIMIT 1
SELECT bookmarks.server_id FROM bookmarks INNER JOIN folder_ancestors ON bookmarks.id = folder_ancestors.folder_id WHERE bookmarks.id IN (SELECT ancestor_id FROM folder_ancestors WHERE folder_id = %u) GROUP BY folder_id HAVING COUNT(*) == 1
UPDATE bookmarks SET added = 0, modified_attributes = 0 WHERE added != 0 OR modified_attributes != 0
UPDATE bookmarks SET added = 0, modified_attributes = 0 WHERE dav_generation <= %zu AND (added != 0 OR modified_attributes != 0)
UPDATE bookmarks SET added = 0 WHERE id = %d
UPDATE bookmarks SET added = 0, modified_attributes = 0 WHERE id = %d
UPDATE bookmarks SET added = ? WHERE id = ?
SELECT value from sync_properties WHERE key = '_dav_generation'
SELECT value from sync_properties WHERE key = '%@'
INSERT INTO sync_properties (key, value) VALUES ('%@', %zd)
UPDATE sync_properties SET value = %zd WHERE key = '%@'
UPDATE sync_properties SET value = value + 1 WHERE key = '_dav_generation'
com.apple.bookmarks.BookmarksFileChanged
SELECT id FROM bookmarks WHERE special_id = ?
UPDATE bookmarks SET num_children = 0 WHERE id = %d
not null
null
SELECT id, URL FROM bookmarks WHERE type = 0 AND deleted = 0
UPDATE bookmarks SET URL = ? WHERE id = ?
address
pageTitle
bookmarkPath
title = ? AND parent = 0 AND deleted = 0 ORDER BY order_index ASC
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS count_bookmarks WHERE count_bookmarks.parent = %d) WHERE (bookmarks.id = %d AND bookmarks.num_children < 0)
DROP TABLE IF EXISTS folder_ancestors
DROP TRIGGER IF EXISTS fkd_ancestors_folder_id
CREATE TABLE folder_ancestors (id INTEGER PRIMARY KEY AUTOINCREMENT, folder_id INTEGER NOT NULL CONSTRAINT fk_ancestors_folder_id REFERENCES bookmarks(id) ON DELETE CASCADE, ancestor_id INTEGER NOT NULL)
INSERT INTO folder_ancestors (folder_id, ancestor_id) VALUES (?, ?)
SELECT id FROM bookmarks WHERE parent = ? AND type = 1 AND deleted = 0
UPDATE bookmarks SET hidden_ancestor_count = hidden_ancestor_count + ? WHERE parent IN (SELECT folder_id from folder_ancestors WHERE ancestor_id = ?) OR parent = ?
 LIMIT ? OFFSET ?
SELECT parent, count(*) AS identical_bookmarks FROM bookmarks GROUP BY parent, type, title, url HAVING identical_bookmarks > 1
@"WebBookmark"16@?0@"WebBookmark"8
DELETE FROM bookmarks WHERE id = ?
SELECT num_children FROM bookmarks WHERE id = ?
UPDATE bookmarks SET parent = ?1, order_index = order_index + ?2%@ WHERE parent = ?3
, modified_attributes = modified_attributes | ?4, dav_generation = ?5
UPDATE bookmarks SET num_children = num_children + (SELECT num_children FROM bookmarks WHERE id = ?) WHERE id = ?
DELETE FROM folder_ancestors
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS b WHERE b.parent = ? AND b.hidden = 0) WHERE id = ? AND type = 1
parent = ?%@%@
 AND type = 1
 AND hidden = 0
DELETE FROM sync_properties WHERE key != ? AND key LIKE ?
SELECT id from bookmarks where parent = ? AND deleted = 0 AND syncable = 1
SELECT sync_data, order_index FROM bookmarks WHERE special_id = 0 AND syncable = 1 AND deleted = 0 AND parent = ? AND id != ? ORDER BY order_index DESC
SELECT sync_data FROM bookmarks WHERE special_id = 0 AND syncable = 1 AND deleted = 0 AND parent = ? AND order_index < ? ORDER BY order_index DESC
SELECT sync_data FROM bookmarks WHERE special_id = 0 AND syncable = 1 AND deleted = 0 AND parent = ? AND order_index > ? ORDER BY order_index ASC
v32@?0@"NSNumber"8@"NSString"16^B24
ParentFolder
SELECT sync_data FROM bookmarks WHERE id = ?
SELECT sync_data FROM bookmarks WHERE server_id = ?
UPDATE bookmarks SET sync_data = ? WHERE server_id = ?
B16@?0@"WBSCRDTPositionSortValue"8
@"WBSCRDTPositionSortValue"16@?0@"WBSCRDTPositionSortValue"8
com.apple.WebBookmarks.bookmarksCollectionQueue
com.apple.WebBookmarks.titleWordTokenizerAccess
DeviceClass
com.apple.WebBookmarks.WebBookmarkCollection_Sync
com.apple.WebBookmarks.ErrorDomain
WebBookmarkTypeList
WebBookmarkTypeLeaf
WebBookmarkType
title
URIDictionary
URLString
Children
WebBookmarkUUID
SELECT type, title, url, id, external_uuid FROM bookmarks WHERE parent = ? AND deleted = 0 AND hidden = 0 AND syncable = 1 ORDER BY order_index
SELECT type, title, url, id, external_uuid FROM bookmarks WHERE id = 0
UPDATE bookmarks SET special_id = 1, editable = 0, deletable = 0 WHERE id = (SELECT id FROM bookmarks WHERE title = 'BookmarksBar' AND parent = 0 ORDER BY id ASC LIMIT 1);
UPDATE bookmarks SET special_id = 2, editable = 0, deletable = 0 WHERE id = (SELECT id FROM bookmarks WHERE title = 'BookmarksMenu' AND parent = 0 ORDER BY id ASC LIMIT 1);
DELETE FROM bookmarks WHERE id != 0 AND syncable = 1
DELETE FROM bookmarks WHERE id != 0 AND hidden = 0 AND hidden_ancestor_count = 0 AND syncable = 1
SELECT generation FROM generations
SELECT COUNT(*) FROM sync_properties WHERE key = ?
DELETE FROM sync_properties WHERE key = ?
UPDATE sync_properties SET value = ? WHERE key = ?
INSERT INTO sync_properties (value, key) VALUES (?, ?)
SELECT value FROM sync_properties WHERE key = ?
SAVEPOINT sync
RELEASE SAVEPOINT sync
ROLLBACK TRANSACTION TO SAVEPOINT sync
special_id == 0 AND id != 0 AND deleted = 0
SQLiteResult
come.apple.WebBookmarks.syncLockQueue
dateClosed
extraAttributes
identifier
localTabGroup
privateTabGroup
sceneID
tabGroupsToActiveTabs
<%@: %p; activeTabGroupUUID = %@; identifier = %d; sceneID = %@; uuid = %@>
com.apple.WebBookmarks
History (bookmark proxy)
Reading List
Allowed Sites
Favorites
Bookmarks Menu
WBWebFilterSettingsDidChange
com.apple.ManagedConfiguration.webContentFilterChanged
WFUserSettings
Class getWFUserSettingsClass(void)_block_invoke
WBWebFilterSettings.m
Unable to find class %s
void *WebContentAnalysisLibrary(void)
TIWordTokenizer
AND hidden = 0
 AND hidden_ancestor_count = 0
parent = %d
OR parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = %d)
AND type = %d
AND subtype = %ld
(%@ %@) %@ %@ %@
%%%@%%
%@ AND %@
%@ ORDER BY %@
<%@:%p; customQuery = %@; query = "%@"; orderBy = "%@"; titleWordPrefixes = %@>
SELECT COUNT(*) FROM bookmarks WHERE %@
SELECT num_children FROM bookmarks WHERE id = %d
id NOT IN (%@)
id IN (%@)
%@ LIMIT ? OFFSET ?
((%@) OR url LIKE ?)
id IN (SELECT bookmark_id FROM bookmark_title_words WHERE word GLOB ?)
 AND id IN (SELECT bookmark_id FROM bookmark_title_words WHERE word GLOB ?)
(%@ AND %@) OR %@
(%@) OR %@
(%@ AND %@)
B32@?0@"NSString"8Q16^B24
hasMigrated
com.apple.WebBookmarks.WBTabCollection
mutableCopy
B16@?0@"<WBBookmarkRepresentable>"8
@"WebBookmark"16@?0@"<WBBookmarkRepresentable>"8
@"<WBBookmarkRepresentable>"16@?0@"WebBookmark"8
@"NSArray"8@?0
parent = 0 AND syncable = 1 AND type = 1 AND hidden = 0 AND special_id = 0
@"WBMutableTabGroup"16@?0@"WebBookmark"8
@"NSString"8@?0
@"WBMutableTab"8@?0
B16@?0@"WBTab"8
v32@?0@"WBMutableTab"8Q16^B24
@"WebBookmarkList"8@?0
%@ %@
scoped
non-scoped
folder
@"CKRecordID"8@?0
v16@?0@"_WBShareParticipantData"8
com.apple.WebBookmarks.WBTabCollection.databaseQueue.%p
@"WebBookmark"16@?0@"WBTab"8
com.apple.WebBookmarks.WebBookmarkReadonlyCollection.%@.%p.%@
InternalQueue
Attributes
GenerationKey
bookmarks.icon
bookmarks.type
bookmarks.title
bookmarks.url
bookmarks.id
bookmarks.editable
bookmarks.deletable
bookmarks.hidden
bookmarks.parent
bookmarks.order_index
bookmarks.external_uuid
bookmarks.special_id
bookmarks.server_id
bookmarks.sync_key
bookmarks.sync_data
bookmarks.extra_attributes
bookmarks.local_attributes
bookmarks.fetched_icon
bookmarks.locally_added
bookmarks.archive_status
bookmarks.syncable
bookmarks.web_filter_status
bookmarks.modified_attributes
bookmarks.last_selected_child
bookmarks.subtype
AND hidden = 0 
AND type = 1 
AND type = 0 
SELECT %@ FROM bookmarks WHERE parent = ? %@%@ORDER BY order_index ASC
bookmarks.read, bookmarks.deleted
IsFolder
UUID
IsEditable
IsDeletable
IsHidden
IsSyncable
IsLocallyAdded
SpecialID
OrderIndex
IsInserted
NeedsSyncUpdate
UsedForInMemoryChangeTracking
ServerID
Sync
SyncData
FetchedIconData
ArchiveStatus
WebFilterStatus
ExtraAttributes
LocalAttributes
LastSelectedChildID
SyncPosition
CollectionType
Subtype
v24@?0@"WebBookmark"8@"NSNumber"16
TitleAndIdentityHash
TitleURLAndIdentityHash
B16@?0@"WBSCRDTField"8
WebsiteDataRecordDomain
WebsiteDataRecordUsage
Library/Preferences/com.apple.mobilesafari
Library/Safari
/var/mobile/Library/Safari/SafariTabsPPT.db
Tabs
Default
Debug Safari
Production Safari
Safari Technology Preview
Safari Automation
BookmarkSync
CloudBookmarks
Cycler
DataMigration
ReadingList
ReadingListIcons
TabGroup
WebsiteData
WebBookmarkServer
CloudSettings
/file
Reader.webarchive
Page.webarchive
ReadingListArchiveStatusPending
ReadingListArchiveStatusCompleted
ReadingListArchiveStatusStandaloneMediaFile
ReadingListArchiveStatusRecoverableError
ReadingListArchiveStatusNonRecoverableError
ReadingListArchiveStatusOutsideFetchWindow
ReadingListArchiveStatusShouldArchive
DateLastFetched
ReadingListIconURL
DateLastArchived
NextPageURLs
LocalPreviewText
ReadingListIconUUID
HasFetchedMetadata
Icon
DateLastFetchedIcon
@"NSDate"16@?0@"WebBookmark"8
v24@?0@"WebBookmark"8@"NSDate"16
@"NSString"16@?0@"WebBookmark"8
v24@?0@"WebBookmark"8@"NSString"16
SafariDebugOverrideLaunchMode
lastSelectedTabUUID
tabs
type
B32@?0@"WBTab"8Q16^B24
@"NSString"16@?0@"WBTab"8
@"WBMutableTab"16@?0@"NSDictionary"8
dictionaryRepresentation
<html><body>
<h>%@</h>
<ul>
<li><a href='%@'>%@</a></li>
</ul>
</body></html>
@"NSUUID"16@?0@"WBMutableTab"8
v32@?0@"WBTab"8Q16^B24
<%@: %p; identifier = %d; syncable = %@; title = %@; kind = %ld; numberOfTabs = %zu; uuid = %@>
<%@: %p; identifier = %d; syncable = %@; kind = %ld; numberOfTabs = %zu; uuid = %@>
com.apple.mobilesafari.WebBoomarks.migration.markReadingListItemsForWebContentFilterTime
com.apple.mobilesafari.WebBoomarks.migration.vacuumTime
v32@?0@"WBReusableTabEntry"8Q16^B24
reusableTabManagerCleanupDelaySeconds
reusableTabManagerMaxAgeSeconds
LastChangeID
DidNotSaveRecordsAfterMigration
RecordZoneIDsToLastServerChangeTokens
LastPrivateDatabaseServerChangeToken
LastSharedDatabaseServerChangeToken
RecordZoneIDsToHashGenerators
RecordIDsToRefresh
AuxiliaryRecordIDsToDelete
CloudBookmarkDatabaseSyncData
tab-group-container-bookmark
tab-group-container-bookmark-uuid
local and remote
v16@?0@"NSTimer"8
v16@?0q8
v16@?0@"WBMutableTabGroup"8
v16@?0@"WBMutableTab"8
B16@?0@"NSNotification"8
B32@?0@"WBTabGroup"8Q16^B24
v32@?0@"WBTabGroup"8Q16^B24
Parent
<%@: %p; parent ID: %d, position: %@>
v24@?0@"WebBookmarksXPCConnection"8@"NSObject<OS_xpc_object>"16
com.apple.SafariTabGroupSync.SyncDidFinish
syncResult
com.apple.WebBookmarks.WBTabGroupManager.%@.%p.%@
v24@?0@"NSArray"8@"NSArray"16
B16@?0@"WBMutableTabGroup"8
@"NSMutableArray"24@?0@"WBMutableTabGroup"8@"NSMutableArray"16
uuid
q24@?0@"<WBBookmarkRepresentable>"8@"<WBBookmarkRepresentable>"16
v32@?0@"NSString"8@"NSMutableArray"16^B24
v24@?0@"CKShare"8@"NSError"16
com.apple.safarifetcherd
AddToReadingList
ClearAllCloudTabDevices
ClearCloudTabsForCurrentDevice
DidToggleCloudTabs
RegisterForReadingListFetcherUpdates
StartReadingListFetcher
UnregisterForReadingListFetcherUpdates
DidFinishFetching
DidUpdateProgress
DidStartFetchingItem
DidStopFetchingItem
ClearAllReadingListArchives
ClearReadingListArchive
GetSafariWebDatabaseUsage
DeleteSafariWebSecurityOrigin
DeleteAllSafariWebSecurityOrigins
DeleteSafariPersistentURLCacheStorage
GetSafariDataUsageSummary
ClearHSTSSuperCookies
ClearAllSafariHistory
ScheduleBookmarksDatabaseMaintenanceTask
ScheduleBookmarksDatabaseMigrationTask
ClientBundleID
Enabled
Item
Progress
TerminateAfterUpdating
DataUsageSize
WebsiteDataAllRecords
WebsiteDataRecord
MessageReceivedAcknowledgement
PasswordIconsCleanup
Window
http:
https:
B24@?0Q8@"NSObject<OS_xpc_object>"16
v24@?0@"NSObject<OS_xpc_object>"8@"NSError"16
WebBookmarksXPCConnectionErrorDomain
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.WebBookmarks.WebBookmarksXPCConnectionQueue
_name
version
com.apple.SecondaryBookmarks.lock
%@.db
com.apple.WebBookmarks.WBSettingsTaskHandler.%p
Received a vnode event for bookmarks metadata file
Posted bookmarks metadata file changed notification
Error reading bookmarks metadata file with code: %zd
Read device identifier: %{private}@ from bookmarks metadata file, readonly: %d
Failed to write bookmarks metadata file to %{public}@
Received bookmarks metadata file change distributed notification
Posting bookmarks metadata file change distributed notification
Removing Safari's background image failed with error: %@.
Removing Safari's background image was successful.
Failed to copy the background image over. Error: %{public}@
Received a Per-Site Settings push notification from CloudKit.
Received a %{public}@ Per-Site Setting from CloudKit that is unrecognized to this device.
Received a %{public}@ Per-Site Setting from CloudKit that is not applicable to this device.
Successfully updated WBSPerSitePreferencesSQLiteStore in response to a push notification from CloudKit.
Save with record name %{public}@ in WBSPerSitePreferencesSQLiteStore did finish with success: %{public}@
Failed to update WBSPerSitePreferencesSQLiteStore after a push notification from CloudKit.
Will retry operation in 30 seconds due to a failure to update WBSPerSitePreferencesSQLiteStore.
Attempting to remove Safari's background image directory.
Removing Safari's background image directory failed with error: %@.
Removing Safari's background image directory was successful.
-> %s(database: %{public}@)
@@ %s: Unlocking bookmark database
@@ %s: Unlocking tabs database
## %s(deviceIdentifier: %@)
<- %s -> Return value redacted
-> %s()
<- %s -> database: NULL due to failure to obtain lock
@@ %s: Did successfully lock database
<- %s -> database: NULL due to failure to allocate WebBookmarkCollection
<- %s -> database: NULL due to not running in data access process with DAV enabled
<- %s -> database: %{public}@
-> %s(database: %{public}@, shouldSave: %d)
<- %s -> Return data of size: %{public}@
-> %s(database: %{public}@, data size: %{public}@)
<- %s -> %{public}@, %{public}@
-> %s(database: %{public}@, %{public}@)
XX %s: Client passed us a change token that does not match the current generation
XX %s: Could not clear the current change list
XX %s: Client requested that we remove the root folder
XX %s: Client requested that we remove item with server ID "%{public}@" but it does not exist
Deleting bookmark with ID %d and serverID %{public}@ from parent with ID %d
-> %s(item: %{public}@)
<- %s -> %{public}@
-> %s(item: %{public}@, %{public}@)
<- %s -> syncKey: %{public}@
-> %s(item: %{public}@, syncKey: %{public}@)
-> %s(item: %{public}@, data of size: %{public}@)
-> %s(change: %{public}@)
<- %s -> (null)
-> %s(%{public}@)
-> %s(folder: %{public}@)
-> %s(bookmark: %{public}@)
<- %s -> CKBABookmarkTypeReadingListItem
<- %s -> CKBABookmarkTypeTabGroupScopedBookmark
<- %s -> CKBABookmarkTypeRegular
-> %s(database: %{public}@, start version: %{public}@)
<- %s -> %s
<- %s -> %lld
-> %s(database: %{public}@, migration state: %lld)
-> %s(database: %{public}@, account hash: %{public}@)
XX %s: CKBALocalID is an instance of %{public}@
XX %s: Client requested server IDs of children of local ID "%{public}@" but it does not exist or is not a folder!
-> %s(database: %{public}@, item: %{public}@, parentSyncServerId: %{public}@)
@@ %s: Parent server ID %{public}@ does not point to any item in the local database
Item was merged with %{private}@
@@ %s: Record %{public}@ was insert in parent record with server ID %{public}@
@@ %s: Record %{public}@ did move to parent record with server ID %{public}@
@@ %s: Record %{public}@ is already inside parent record with server ID %{public}@
-> %s(database: %{public}@, mode: %ld)
-> %s(database: %{public}@, %{public}@, %{public}@)
-> %s(database: %{public}@, request before targetItemId: %{public}@)
-> %s(database: %{public}@, request after targetItemId: %{public}@)
-> %s(database: %{public}@, folderServerId: %{public}@)
<- %s -> %ld
-> %s(item: %{public}@, parentRecordName: %@)
<- %s -> NO
<- %s -> YES
-> %s(item1: %{public}@, item2: %{public}@)
<- %s -> %d
-> %s(database: %{public}@, folder type: %lld)
-> %s(database: %{public}@, bookmark type: %lld)
<- %s -> syncData %p of size: %ld
-> %s(change: %{public}@, syncData %p of size: %zd)
XX %s: Cannot set the sync data of a change that is not a Delete. Change type = %d, inserted = %d
XX %s: Cannot update the sync data of a Delete change that does exist in the database
## %s(%@)
## %s(attributes: %@)
@@ %s: Set title to value of length: %{public}@
@@ %s: Set title to value of length: (null)
@@ %s: Set last selected child ID to value of length: %{public}@
@@ %s: Set last selected child ID to null
<- %s
@@ %s: Set URL to value of length: %{public}@
@@ %s: Set URL to value of length: (null)
-> %s(item: %{public}@, key: %{public}@)
## %s(value: %@)
<- %s -> Return value redacted; length: %{public}@
Connection to TabGroups sync agent was interrupted
Connection to TabGroups sync agent was invalidated
Failed to reconnect too many times to sync agent since %{public}@, stopping.
Will attempt to add sync observer again after connection ended
Will attempt to reconnect after %ld retries since %{public}@
Failed to decode _WBBookmarkSyncDataForPositionDecoding with exception: %{public}@
Failed to decode WBBookmarkSyncData with exception: %{public}@
Inserting %zu tabs
Tab marked as added: %{public}@
%zu tabs deleted
Removing tab %{public}@
Reordering tab %{public}@ after tab %{public}@
Clearing deleted tabs
Deleting windows with condition: %@
Delete invalid window %lli %@
Delete window %lli %@
%i windows deleted using condition: %@
Attempting to fix local bookmarks in syncable folders
Attempting to regenerate sync positions
Retrieving shared tab groups with missing CKShare records
Failed to retrieve CKShare records to refresh
Did finish retrieving shared tab groups with missing CKShare records
Finding any locally saved CKShare to enable presence
Failed to check locally saved CKShare records
Did finish looking for locally saved CKShare to enable presence
Fixing local bookmarks in syncable folders.
Failed to save updated syncable bookmark
Failed to delete local bookmark in syncable folder
Successfully fixed local bookmarks in syncable folders.
Will begin regenerating sync positions
Setting position of tab group %{public}@ to position: %{public}@
Failed to save generated position for record %{public}@
Failed to reset order_index values during position generation
Setting position of record %{public}@ to position: %{public}@
Setting position failed for bookmark %{public}@
Did finish regenerating sync positions, success: %d
Collecting tab groups that might be shared and missing a CKShare
TabGroup with recordID %{public}@ is potentially missing its CKShare record
%@ with result: %d error: %{public}@
Setting active tab on window state
Active tab set on window state
Window state local tab group count: %zu
Skipped window state from DB due to missing tab group.
Fetched %zu window states with filter
Saving window state as bookmark
Unable to move tab group to window folder
tabBookmarks count: %zu
Unable to save local tab group when saving window
Could not save window state as bookmark
Attempted to save a nil window state
Failed to save local tab group while trying to save window state
Failed to save private tab group while trying to save window state
Attempted to delete a nil window state
Detected orphaned TopScopedBookmarkList %d that belongs to Tab Group %d(%{private}@).
Tab Group %d(%{private}@) does not have a scoped bookmark folder.
Prepare statement failed (%i)
WebBookmarks could not start a deferred transaction; sleeping and trying again later
WebBookmarks still could not start a deferred transaction; sleeping longer
WebBookmarks could not start a deferred transaction; bailing. Error was: %{public}s
WebBookmarks could not start a deferred transaction; bailing. Result code was: %d
WebBookmarks could not start an immediate transaction; sleeping.
WebBookmarks could not start an immediate transaction; sleeping longer.
WebBookmarks could not start an immediate transaction; bailing. Error was: %{public}s
WebBookmarks could not start an immediate transaction; bailing. Result code was: %d
Updating changes from in memory identifier %ld to database identifier %ld
Error converting in-memory changes into plist data: %@{public}
Failed to persist in-memory bookmarks changes plist: %{public}@
Error converting plist data to dictionary: %{public}@
Persisted bookmark changes plist is corrupted
Cannot create a Reading List item. URLs must begin with http or https.
Not automatically closable because the tab is syncable.
Not automatically closable because tab is pinned.
Not automatically closable because lastViewedTime is unknown.
Tab is automatically closable because it is blank.
Tab is automatically closable because lastVisitTime is beyond threshold from user preference.
Not automatically closable because its lastVisitTime does not cross threshold.
Failed to open Bookmarks database. Acquired sync lock: %d, error: %{public}@.
Couldn't create bookmarks database at %{public}@
Refusing to remove corrupted bookmarks database at %{public}@: The path appears to be a directory.
Refusing to remove corrupted bookmarks database at %{public}@: The file is not named %{public}@.
Still could not open bookmarks database: %{public}@
Could not open bookmarks database: %{public}@
Removing corrupted bookmarks database %{public}@
Corrupted bookmarks saved as %{public}@
Also removed the journal file %{public}@.
Failed to remove the journal file at %{public}@.
Also removed the wal file %{public}@.
Failed to remove the wal file %{public}@.
Also removed the shm file %{public}@.
Failed to remove the shm file %{public}@.
Could not remove bookmarks database %{public}@
A table is missing from bookmarks database. The database is corrupt.
Table %{public}@ is missing from bookmarks database
Skipping integrity check because database is busy or locked (sqlite code = %d)
sqlite3_prepare_v2 failed for integrity_check with error code %d
sqlite3_step failed for integrity_check with error code %d
sqlite integrity_check returned a NULL pointer
Failed to migrate from bookmarks plist at path %{public}@ sync anchor plist path %{public}@
Unable to initialize WebBookmarkCollection. Nil was returned from +initSafariBookmarkCollectionCheckingIntegrity:
Starting to migrate and clean up Reading List archives
Failed to migrate Reading List archives; couldn't reset record status.
Failed to migrate Reading List archives; couldn't update record status to "pending" (error code = %d)
Failed to remove Reading List archive directory %{public}@: %{public}@
Failed to get list of archive directories: %{public}@
Failed to remove Reading List archive directory with UUID %{public}@: %{public}@
Failed to remove reading list archive at path %{public}@: %{public}@
Migrating Reading List web filter status
Starting to mark all Reading List items as allowed by Web Content Filter
Finished marking all Reading List items as allowed by Web Content Filter
Failed to mark all Reading List items as allowed by Web Content Filter with result code: %i
Read Safari bookmarks
Could not apply in-memory changes to database
Could not open a write transaction
Failed to save bookmark with UUID %{public}@: %{public}@
Failed to save bookmark %{public}@: Write transaction isn't valid
_saveBookmark:withSpecialID:updateGenerationIfNeeded: failed
Starting Reading List fetcher when saving bookmark with UUID %{public}@
No BookmarkImages directory exists, but bookmark had an icon UUID
Failed to delete bookmark icon: %{public}@
Deleted bookmark icon successfully
Moving bookmark with identifier %ld and parent ID %d to folder with identifier %ld
Moving bookmark with ID %d and parent ID %d to index %d
Reordering bookmark %{public}@ after bookmark %{public}@
Reordering bookmark %{public}@ to index %d
Failed to acquire lock when saving offline Reading List archive
Saving offline Reading List archive for bookmark with UUID %{public}@
Creating a directory for Reading List icons failed: %{public}@
Saving Reading List icon failed: %{public}@
Saving a bookmark failed
Saving a previously deleted bookmark failed
Moving bookmark %d to folder %d failed
Update %zu bookmarks with folder ID %d. There are %zu current bookmarks, and %zu will be deleted
Failed to save bookmark during update with error: %@
Failed to save and move bookmark during update with error: %@
Failed to reorder bookmark during update with error: %@
Number of children mismatch detected for bookmark with id: %d, parent: %d, expected number of children: %d, actual: %d
Could not fix number of children of folder with id: %d, error: %d, %{public}s
Failed to create a fresh database because we failed to lock sync
Got nil local attributes dictionary: %{public}@
Got nil reading list attributes dictionary, creating one
Bookmarks database appears to have skipped migration steps. Rerunning migration.
Warning: The web bookmarks database has a greater version number than expected. Restoring a database from a newer version is not supported.
Failed to migrate schema because we failed to lock sync
Couldn't get current version of bookmarks database.
Failed to import bookmarks with plist path %{public}@
Failed to remove old bookmarks plist at path %{public}@. Error: %{public}@
Failed to remove bookmarks sync anchor plist at path %{public}@. Error: %{public}@
Warning: The web bookmarks database was used on a more recent %{public}@ version than the current one. Restoring a database from a newer version is not supported.
Failed to perform Safari version upgrades because we failed to lock sync
Moving bookmark %{public}@ to parent %d and order index %d
Cannot insert bookmark with local ID %d into itself
Cannot insert bookmark with ID %d into parent with ID %d since it is a descendent
Could not move record %{public}@ with localID: %d, server ID: %{public}@, to parent %d, error: %d
Could not reorder records in previous parent %d, error: %d
Failed to clear local bookmark tombstones
Failed to clear sync server ids. Sqlite error: %d
Clearing all sync data, likely because the user is logging out
Failed to reset bookmarks generation. Sqlite error: %d
Failed to reset sync data of bookmark %{public}@
Failed to reset generation of bookmark %{public}@
Failed to mark bookmrks as added during clearing sync data. Sqlite error: %d
Deleted bookmark with ID %d from parent with ID %d
Could not delete records recursively starting with localID: %d, error: %d
Inserting bookmark tombstones recursively exceeded a depth of 100
Fetched %zu children in folder %{public}@ while inserting tombstones
Error reading bookmark attributes: %{public}@
Cannot save bookmark: failed to update order index of bookmarks during insertion (%i)
Cannot save bookmark: failed to get hidden ancestor count (%i)
Could not insert record with server ID: %{public}@ into parent with ID: %d, error: %d
Refusing to save a bookmark with no address
Crashing since we can't save a bookmark with no address. Please file a bug.
Failed to save bookmark %{public}@: Invalid parentID %d
Could not update cached child count for parent ID %d in direction: %d, error: %d
Could not get bookmark ID with server ID %{public}@ with prepare result %d
Did not find any bookmarks with server ID %{public}@
Safari directory is currently inaccessible
Could not delete ancestor table entries for record %d, error: %d
Failed to increment bookmarks generation. Sqlite error: %d
Handling bookmarks metadata file change notification
WebBookmarks sync is not posting a change notification because the collection is not dirty
%{public}@ Please file a bug citing the following caller:
Failed to merge bookmarks with dictionary. Bookmarks dictionary is %{public}@
Could not insert ancestor table entry %{public}@ for bookmark %d, error: %d
Could not recursively update ancestor table entries for bookmark %d, error: %d
Applying in-memory delete change for %{public}@
Applying in-memory add change for %{public}@
Applying in-memory modify change for %{public}@ from %{public}@
Applying in-memory move change for %{public}@
Applying in-memory reorder change for %{public}@ after %{public}@
Applying in-memory replace change for %zu bookmarks in folder %d
Adding bookmark in memory with identifier %ld to folder with identifier %ld
Device identifier is empty
Looking up migration state for device identifier %{private}@
Local migration state read from database %{public}@
Failed to save local migration state %{public}@ to database
Failed to delete local migration state from sync properties. Sqlite error: %d
Generating position for order index %d in folder id %d
Generating position for bookmark %{public}@
Clearing sync data because the user has reset the iCloud Keychain.
Error fixing recovered bookmark: %{public}@
Received com.apple.bookmarks.BookmarksFileChanged
Failed to mark special bookmarks. Sqlite error: %d
Failed to delete existing bokmarks as part of merging with new set of bookmarks. SQlite error: %d
Failed to build the database with new set of bookmarks during bookmark merge
Failed to calculate cached children count during bookmark merge. Sqlite error: %d
Failed to restore missing special bookmarks during bookmark merge
Failed to rebuild ancestor table during bookmark merge
Failed to set sync properties value for key %{private}@. Sqlite error: %d
Failed to set sync data for key %{public}@. Sqlite error: %d
Bookmarks failed to begin sync transaction with result code: %i. SQL Error: %{public}s
Bookmarks failed to begin sync transaction with result code: %i
%{public}@
Failed to open bookmarks sync lock file at: %{public}s
Process %{public}@ did fail to acquire lock: %{public}@ (%d)
Process %{public}@ did acquire lock: %{public}@
Postponing unlockSync. The process %{public}@ has requested to hold the lock
Process %{public}@ did release lock: %{public}@
Attempting to unlock sync since last requestor has unheld the lock in process %{public}@
Setting sync notification type: %ld
Request sync client trigger sync
Requesting a CloudKit bookmarks sync due to local changes
Could not construct WFUserSettings. Default values will be used
num_children for bookmark %i has an invalid value %i
Retrying to fetch count without using num_children %i
Unable to instantiate tab collection because the specified collection type is not of tabs
Failed to instantiate tab collection because we failed to lock sync
Failed to instantiate tab collection because the underlying collection failed to set up
Skipping item %{private}@ because underlying bookmark is nil
Update %zu pinned tabs and %zu private pinned tabs
Not updating tab %{public}@ in tab group %{public}@ because they are different types
Could not load a scoped bookmark folder with the id(%d) of a %@.
Could not filter scoped bookmark folder with the id(%d) of a %@.
Could not load a scoped bookmark with uuid(%{public}@) of a %@.
Error reading bookmark extra attributes: %{public}@
Error reading bookmark local attributes: %{public}@
Setting bookmark with identifier %d as its own parent
Setting bookmark identifier to its parent identifier %ld
Setting ReadingList item bookmark archive status to %{public}@ for bookmark with UUID %{public}@
Error calculating directory size getting directory subpaths for offline reading list item at path: %{public}@
Failed to delete %{public}@: %{public}@
Deleted %{public}@ as a result of deleting the bookmark
setShouldArchive: setting ReadingList item bookmark archive status to ReadingListArchiveStatusShouldArchive for bookmark with UUID %{public}@
setShouldArchive: setting ReadingList item bookmark archive status to ReadingListArchiveStatusPending for bookmark with UUID %{public}@
Detected duplicated tabs: %@
All tabs: %@
Trying to create WBBookmarkDatabaseSyncData from data of size %lu
Successfully created WBBookmarkDatabaseSyncData
Failed to create WBBookmarkDatabaseSyncData with exception: %{public}@
Writing sync data of size %lu to database
Created Tab Cycler test target with tab collection: %@
Clearing %@ tab groups
Failed to acquire tab collection lock after backing off to a %f second wait. Giving up.
Failed to acquire tab collection lock. Retrying after %f seconds.
Triggering tab group sync
Sync agent reset sync data. Triggering another sync.
Sync finished but local migration has not completed. Waiting for migration to complete.
Sync agent finished syncing
Timed out waiting for sync agent to finish syncing
Beginning to observe Tab Group updates
Timed out while waiting for Tab Group updates
Received notification of Tab Group updates
Expected tab groups after update but none were found. Continuing to wait.
Filtering tab %{public}@ because it was removed
Items do not have sync positions: %{public}@, %{public}@
Item does not have a sync position %{public}@
Moving tab group %{public}@ after tab group %{public}@
Not moving tab group %{public}@ because it no longer exists
Not removing tab group %{public}@ because it no longer exists
Removing tab group %{public}@
Updating tab group with uuid %{public}@
Not updating tab group with uuid %{public}@ because it does not exist.
Updating tabs with uuid %{public}@
Not updating tab with uuid %{public}@ because it does not exist.
Updating tab %{public}@
Moving %zu tabs to tab group %{public}@
Moving tab with no tab group
Updating tabs in tab group with uuid %{public}@
Not updating tabs because the tab group with uuid %{public}@ does not exist.
Aborted inserting non-scoped bookmark into a scoped folder.
Failed to insert scoped bookmark into parent(%d) after anchor(%d).
Failed to reorder scoped bookmark(%d) behind anchor(%d).
Failed to update scoped bookmark(%d).
Failed to delete scoped bookmark(%d).
Could not load scoped bookmark folder(%d) when notifying changes.
Did successfully join share %{public}@
Failed to join shared tab group %{public}@ with error: %{public}@
Did successfully begin sharing tab group with UUID: %{public}@, share: %{public}@
Failed to begin sharing tab group with UUID: %{public}@, error: %{public}@
Tab group sync did finish
Reloading tab groups from database
Unable to read tab group changes after sync because the database cannot be opened
Sending XPC message to delete all Website data
Error encountered while delivering XPC message to delete all website data. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete all website data
Error encountered while delivering XPC message to delete individual website data. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete individual website data
Error encountered while delivering XPC message to delete persistent URL cache storage. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete persistent URL cache storage
Error encountered while delivering XPC message to delete Safari's history. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete Safari's history
WBDatabaseLockAcquisitor: releasing database lock
WBDatabaseLockAcquisitor: successfully acquired database lock
WBDatabaseLockAcquisitor: failed to acquire database lock
WebBookmarksXPCConnection: No handler registered for the message %{public}s.
Ignoring incoming message because the message is nil.
Ignoring incoming message because the message type is %{public}s
Not queueing settings task with type %ld since one has already been scheduled.
Attempting to perform a webbookmarksd settings task while there is no current task set
Dropping settings task with type %ld because maximum retry count exceeded
Performing settings task with type: %ld
Skipping task with type %ld due to incorrect arguments
Marking current task with type %ld as finished. Attempting next available task
Successfully performed settings task with type: %ld
Settings task with type %ld finished with a non-xpc error %{public}@
Received error while performing settings task with type: %ld, error: %{public}@
Adopting other tab's local title and URL
Using tab's local title and URL
softlink:o:path:/System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
softlink:o:path:/System/Library/PrivateFrameworks/TextInput.framework/TextInput
WebBookmarkDeviceIdentifier
WBChangeRecord
WBSettingsSyncEngineAccess
WBSSettingsSyncEngineAccess
NSObject
WebBookmarkCloudKitSyncCollection
WebBookmarkProductionSafariCloudKitSyncTabCollection
BABookmarkItem
WBBookmarkDBAccess
WBSBookmarkDBAccess
WBTabGroupSyncAgentProtocol
WBTabGroupSyncAgentProxy
WBTabGroupSyncAgentSyncObserver
WBSDeallocationSentinelObserver
WBTabGroupSyncAgentProxyProtocol
WBTabGroupManagerObserver
WBBookmarkSyncData
NSCopying
NSSecureCoding
NSCoding
_WBBookmarkSyncDataForPositionDecoding
WBBookmarkLabel
WBNSErrorExtras
WebBookmarkInMemoryChangeFilterUnreadOnly
WebBookmarkInMemoryChangeFilter
WBMutableTabGroup
WBDuplicateBookmarkGroup
WebBookmarkChange
WBChange
WBSerializable
WebBookmarkTabCollection
WebBookmarkDebugSafariTabCollection
WebBookmarkProductionSafariTabCollection
WBBrowserState
WebBookmarkChangeSet
CloudTabServices
WBReadingListPrivate
WBReadingList
WBTabGroupSyncAgent
WebBookmark
WBBookmarkRepresentable
WBTab
NSMutableCopying
WebBookmarkCollection
WBDatabaseLockAcquisitorDelegate
WBBookmarkProvider
Sync
WebBookmarkCollectionSyncFlags
WebBookmarksExtras
WBWindowState
WebBookmarkList
Internal
WBReadonlyTabCollection
WBStateProvider
WBTabProvider
WBWebFilterSettings
WebBookmarkTitleWordTokenizer
WebBookmarkListQuery
_WBShareParticipantData
WBTabCollection
WBTabProvider_Internal
WebBookmarkReadonlyCollection
WBWebsiteDataRecord
WBCollectionConfiguration
WBBookmarksDatabaseHealthInformation
ReadingList
ReadingListArchives
ReadingListInternal
WBSettingsTask
WBFeatureManager
WBTabGroup
WBReusableTabEntry
WBReusableTabManager
NSCacheDelegate
WBBookmarkDatabaseSyncData
WBTabCyclerCommandHandler
WBSCyclerTestTarget
_WBTabCyclerTabGroupUpdateObserver
WBBookmarkLocation
SafariFetcherServerProxy
WebBookmarksXPCConnectionDelegate
WBTabGroupManager
WBSCRDTPositionGeneratorDelegate
WBWindow
WBNSDictionaryExtras
WebBookmarksSettingsGateway
WBDatabaseLockAcquisitor
WebBookmarksXPCConnection
WebBookmarksXPCListener
WBLocalTabAttributes
WBInMemoryChangeFilterVisible
WebBookmarkSecondaryCollection
WBSettingsTaskHandler
WBMutableTab
T@"NSArray",R,N
.cxx_destruct
T@"NSSet",R,C,N
T#,R,N,G_tabClass,V_tabClass
T@"NSURL",R,C,N
T@"<WBReusableTab>",R,N,V_reusableTab
TB,D,N,GisLocal
T@"<WebBookmarkInMemoryChangeFilter>",&,N,V_inMemoryFilter
TB,R,N,GisDisplayingStandaloneImage,V_displayingStandaloneImage
T@"<WebBookmarksXPCConnectionDelegate>",W,N,V_delegate
TB,R,N,GisNamed
T@"CKRecordID",C,N,V_parentRecordID
_activeTabGroup
T@"CKServerChangeToken",C,N,V_lastSharedDatabaseServerChangeToken
_collectionType
T@"NSArray",C,D,N
_createParticipantPresenceTable
T@"NSArray",C,N,V_participants
T@"NSArray",C,N,V_privatePinnedTabs
_deleteTabGroup:leaveTombstone:
T@"NSArray",C,N,V_windows
_domain
T@"NSArray",R,C,N,V_ancestorTabUUIDs
_folder
T@"NSArray",R,C,N,V_tabs
_handleMessage:
T@"NSData",C,N
_hidden
T@"NSData",R,C,N
_inMemoryFilter
T@"NSDate",&,N
_localTabGroups
T@"NSDate",R,C,N,V_dateClosed
_markWindowStatesAsLastSession:
T@"NSDate",R,N,V_dateCreated
_mutableTabBeforeIndex:inGroup:
T@"NSDictionary",C,N,V_extraAttributes
_parentRecordID
T@"NSDictionary",R,C,N
_pinned
T@"NSMutableSet",R,N,V_lockSyncHoldRequestorPointers
_reorderBookmark:afterBookmark:
T@"NSNumber",C,N,GisSelectedFavoritesFolder
_resetBookmark:
T@"NSObject<OS_xpc_object>",R,C,N
_setID:
T@"NSSet",C,N,V_activeParticipantIDs
_setTitle:forTabWithUUID:reply:
T@"NSSet",C,N,V_recordIDsToRefresh
_string
T@"NSString",C,N
_syncAgentProxy
T@"NSString",C,N,V_creationDeviceIdentifier
_tableExpressionForArchiveMode:
T@"NSString",C,N,V_sceneID
addReusableTab:
T@"NSString",R,C
address
T@"NSString",R,C,N,V_UUID
associatedIndex
T@"NSString",R,C,N,V_databasePath
bookmarkIDsModifiedInMemoryPassingFilterFromChangeSet:inFolder:
T@"NSString",R,C,N,V_lastSelectedTabUUID
changes
T@"NSString",R,C,N,V_tabGroupUUID
createBookmarkListWithTitle:inListWithIdentifier:atIndex:reply:
T@"NSString",R,C,N,V_uuid
dateLastFetched
T@"NSString",R,N,V_windowUUID
debugTabCollectionConfiguration
T@"NSURL",R,C,N,V_fileURL
deleteTabGroup:
T@"NSUUID",R,N
deviceIdentifierForCloudKitWithCollectionType:generateIfNeeded:
T@"WBBookmarkSyncData",R,N
differenceFromList:withOptions:
T@"WBCollectionConfiguration",R,N,V_configuration
extraAttributes
T@"WBLocalTabAttributes",&,D,N
fetchedIconData
T@"WBMutableTabGroup",R,N,V_localTabGroup
foundDuplicates
T@"WBReadingList",R,N
initFolderWithParentID:subtype:deviceIdentifier:collectionType:
T@"WBSCRDTField",R,N
initWithFormat:
T@"WBSCRDTGeneration",R,N
initWithTitle:deviceIdentifier:
T@"WBSCRDTPosition",C,D,N
initWithType:websiteDataRecord:
T@"WBSCRDTPosition",R,C,N
isBlank
T@"WBSCRDTPosition",R,N,V_position
isEqualToArray:
T@"WBTabCollection",&,N,V_tabCollection
isMuted
T@"WBTabGroup",&,N,V_activeTabGroup
isPrivateWindow
T@"WBTabGroupSyncAgentProxy",R,N
isShowingReader
T@"WBWebsiteDataRecord",R,N,V_websiteDataRecord
isValid
T@"WFUserSettings",R,N
localAttributes
T@"WebBookmark",&,N,V_bookmark
merging
T@"WebBookmark",R,N,V_bookmark
needsSyncUpdate
T@"WebBookmarkChangeSet",R,N
numberWithBool:
T@"WebBookmarkCollection",R,N,V_collection
pinnedPageTitle
T@"WebBookmarkList",R,C,N
privateTabGroup
T@"WebBookmarkTabCollection",R,N,V_collection
release
T@?,C,N,V_finishBackgroundTaskAssertionBlock
restrictionType
T@?,R,C,N
safari_filterObjectsUsingBlock:
TB,D,N,GisPrivateBrowsing
saveBookmarks:postNotification:
TB,D,N,GisSyncable
TB,D,N,GwasModified
setBool:forKey:
TB,N
setDeletedTabs:
TB,N,GhasCompletedMigration
setLocalAttributesValue:forKey:
TB,N,GisReadOnly,V_readOnly
setShareRecord:
TB,N,V_fetchedIconData
setUrl:
TB,N,V_needsSyncUpdate
specialFolderID
TB,N,V_postSyncNotificationWhenUnlocking
stringByAppendingPathExtension:
TB,N,V_unlockSyncRequested
subfoldersOfID:
TB,R,D,N
syncDataForKey:
TB,R,N,G_isMutable,V_isMutable
tabGroupManager
TB,R,N,GisCustomQuery,V_customQuery
unholdLockSync:
TB,R,N,GisEditable,V_editable
wb_objectOfType:forKey:isValid:
TB,R,N,GisFullArchiveAvailable
webFilterStatus
TB,R,N,GisHidden,V_hidden
windows
.cxx_construct
T@"NSError",R,N
T#,R
T@"NSURL",C,D,N
T@"<WBDatabaseLockAcquisitorDelegate>",W,N,V_delegate
T@"NSURL",R,C,N,V_pinnedPageURL
T@"<WBTabGroupSyncAgentProtocol>",&,N,V_syncAgentProxy
TB,R,N,GisDeletable,V_deletable
T@"<WebBookmarksClientDelegateProtocol>",W,N,V_delegate
TB,R,N,GisLocal
T@"CKRecord",C,N,V_record
Ti,N,V_parentID
T@"CKServerChangeToken",C,N,V_lastPrivateDatabaseServerChangeToken
_cacheTabGroup:
T@"CKShare",C,N,V_shareRecord
_createIfNeeded
T@"NSArray",C,N,V_bookmarks
_dateAddedField
T@"NSArray",C,N,V_pinnedTabs
_deleteBookmark:leaveTombstone:
T@"NSArray",C,N,V_windowStates
_didFinishSetup
T@"NSArray",R,C,N
_fetchBookmarkIDsInFolder:onlyFolders:includingHiddenBookmarks:
T@"NSArray",R,C,N,V_overflowRemoteTabs
_folderIDToAddedChildrenChanges
T@"NSArray",R,D,N
_hasShareRecord
T@"NSData",C,N,V_iconData
T@"NSData",R,C,N,V_sessionStateData
_isSelectedFavoritesFolderField
T@"NSDate",&,N,V_dateClosed
_locale
T@"NSDate",R,C,N,V_lastVisitTime
_migrateWindow:
T@"NSDictionary",C,N
_openedFromLink
T@"NSDictionary",C,N,V_tabGroupsToActiveTabs
_pendingCleanup
T@"NSDictionary",R,C,N,V_queuedNavigation
_record
T@"NSNumber",C,N
_reorderTabGroup:afterTabGroup:
T@"NSNumber",R,C,N
_rootFolderHiddenChildrenClause
T@"NSObject<OS_xpc_object>",R,N,V_connection
_setOrderIndex:
T@"NSSet",C,N,V_auxiliaryRecordIDsToDelete
_shared
T@"NSString",C,D,N
_stringForType:
T@"NSString",C,N,V_activeTabGroupUUID
_syncStateField
T@"NSString",C,N,V_deviceIdentifier
_uuidToTabCache
T@"NSString",C,N,V_serverID
addedBookmarksInBookmarkFolder:
T@"NSString",R,C,N
allTabs
T@"NSString",R,C,N,V_address
bookmarkAtPath:
T@"NSString",R,C,N,V_domain
bookmarkWithID:
T@"NSString",R,C,N,V_pinnedPageTitle
containsObject:
T@"NSString",R,C,N,V_title
createBookmarkWithTitle:url:inListWithIdentifier:atIndex:reply:
T@"NSString",R,N
dealloc
T@"NSURL",C,N
deleteBookmark:
T@"NSURL",R,N
deleted
T@"WBBookmarkDatabaseSyncData",R,C,N
didNotSaveRecordsAfterMigration
T@"WBBrowserState",R,N
emptyChangeSetCompletionHandler
T@"WBFeatureManager",R,N
favoritesFolder
T@"WBLocalTabAttributes",R,N
fileURL
T@"WBMutableTabGroup",R,N,V_privateTabGroup
iconURLProvider
T@"WBReusableTabManager",R,N
initWithDictionaryRepresentation:localTabGroup:privateTabGroup:
T@"WBSCRDTGeneration",&,N
initWithTitle:address:parentID:deviceIdentifier:collectionType:
T@"WBSCRDTPosition",&,N,V_position
initWithTitle:uniqueIdentifier:
T@"WBSCRDTPosition",C,N
insertTabs:inTabGroup:afterTab:
T@"WBSCRDTPosition",R,C,N,V_position
isEmpty
T@"WBTab",R,N
isLocal
T@"WBTabCollection",R,N,V_tabCollection
isNamed
T@"WBTabGroupManager",R,N,V_tabGroupManager
isProxy
T@"WBWebFilterSettings",R,N
isTabSuspended:
T@"WBWindowState",R,N
labelWithTitle:
T@"WebBookmark",&,N
mergeWithField:
T@"WebBookmark",R,N
moveBookmark:fromIndex:toIndex:
T@"WebBookmark",R,N,V_originalBookmark
T@"WebBookmarkCollection",R,N
numberWithLong:
T@"WebBookmarkList",&,N,V_shadowBookmarkList
privateBrowsing
T@"WebBookmarkList",R,N
recordIDForTab:
T@?,C,D,N
removeTabGroup:
T@?,C,N,V_startBackgroundTaskAssertionBlock
safari_boolForKey:defaultValue:
TB,D,N,GisHidden
saveAndMoveBookmark:toFolderID:
TB,D,N,GisShared
sceneID
TB,D,N,GwasAdded
setAddress:incrementGeneration:
TB,D,N,GwasMoved
setDay:
TB,N,G_listensForMetaDataChangeNotification,S_setListensForMetaDataChangeNotification:,V_listensForMetaDataChangeNotification
setExtraAttributesValue:forKey:
TB,N,GisAddedLocally
setPreviewText:
TB,N,V_didNotSaveRecordsAfterMigration
setSyncableURL:
TB,N,V_isDeletingRecordZone
setWithObjects:
TB,N,V_newlyCreated
stringByAppendingPathComponent:
TB,N,V_skipsExternalNotifications
stringByResolvingSymlinksInPath
TB,R
subtype
TB,R,N
syncKey
TB,R,N,GhasCompletedMigration
topLevelDuplicateBookmarksCount
TB,R,N,GisDeleted
TB,R,N,GisFolder,V_folder
wb_privacyPreservingDescription
TB,R,N,GisHidden
windowWithUUID:
TB,R,N,GisInserted
TB,R,N,GisInserted,V_inserted
TB,R,N,GisLocal,V_local
TB,R,N,GisMerging
TB,R,N,GisOfflineReadingListAvailable,V_offlineReadingListAvailable
TB,R,N,GisPersistent
TB,R,N,GisPinnable
TB,R,N,GisPinned,V_pinned
TB,R,N,GisPrivateBrowsing
TB,R,N,GisPrivateBrowsing,V_privateBrowsing
TB,R,N,GisShared
TB,R,N,GisShared,V_shared
TB,R,N,GisShowingReader,V_showingReader
TB,R,N,GisSyncable
TB,R,N,GisSyncable,V_syncable
TB,R,N,GisTransactionCurrentlyActive
TB,R,N,GisWebFilterEnabled
TB,R,N,GwasAdded,V_added
TB,R,N,GwasModified,V_modified
TB,R,N,GwasMoved,V_moved
TB,R,N,GwasOpenedFromLink,V_openedFromLink
TB,R,N,V_createIfNeeded
TB,R,N,V_favoritesFolderSelectionShouldSync
TB,R,N,V_foundDuplicates
TB,R,N,V_hasShareRecord
TB,R,N,V_isDisposable
TB,R,N,V_isMuted
TB,R,N,V_isPinned
TB,R,N,V_isReadonly
TB,R,N,V_isSafeToLoadWebPage
TB,R,N,V_syncAllowed
TI,R,N
TQ,N
TQ,N,V_maximumTabsPerGroup
TQ,N,V_maximumTabsPerTabGroup
TQ,N,V_minimumAPIVersion
TQ,N,V_minimumSyncAPIVersion
TQ,N,V_modifiedAttributeMask
TQ,N,V_modifiedAttributes
TQ,N,V_usage
TQ,R
TQ,R,N
TQ,R,N,V_allDuplicateBookmarksCount
TQ,R,N,V_tabIndex
TQ,R,N,V_topLevelDuplicateBookmarksCount
Td,R,N,V_readerViewTopScrollOffset
Ti,D,N
Ti,N
Ti,N,V_associatedBookmarkID
Ti,N,V_bookmarkID
Ti,N,V_identifier
Ti,N,V_specialFolderID
Ti,N,V_syncLockFileDescriptor
Ti,R,N
Ti,R,N,V_changeType
Ti,R,N,V_folderID
Ti,R,N,V_id
Ti,R,N,V_parentID
Ti,R,N,V_readingListBookmarkID
Ti,R,N,V_specialID
Tq,D,N
Tq,N
Tq,N,V_kind
Tq,N,V_state
Tq,N,V_storeOwner
Tq,N,V_syncNotificationType
Tq,R,N
Tq,R,N,V_accessLevel
Tq,R,N,V_changeType
Tq,R,N,V_collectionType
Tq,R,N,V_localRecordGeneration
Tq,R,N,V_storeOwner
Tq,R,N,V_subtype
Tq,R,N,V_taskType
URLByDeletingLastPathComponent
URLWithString:
UTF8String
UUID
UUIDString
XPCDictionaryRepresentation
_UUID
_accessLevel
_activeParticipantIDs
_activeParticipantsFromParticipantData:
_activeTabGroupUUID
_addActiveTabsToWindowState:
_addBookmarkWithTitle:address:parentID:orderIndex:isFolder:externalUUID:associatedBookmark:updateParentChildCount:updateAncestorEntries:incrementGenerations:
_addBookmarksForReadingListMatchStatement:normalizedQuery:toArray:maxResults:
_addChange:
_addChildrenOfID:toCollection:recursive:error:
_addReadingListItemWithURL:title:previewText:
_addTabUUIDsFromGroup:toSet:
_added
_addedLocally
_address
_addressFromURL:
_allDuplicateBookmarksCount
_allowedSiteBookmarkWithTitle:address:
_ancestorTabUUIDs
_appendDuplicateBookmarkGroupsInBookmarks:toGroups:considerBookmarksWithSyncDataAsUnique:davHomePath:
_applyInMemoryChange:fromChangeSet:updatedBookmarks:
_applyInMemoryChanges:postChangeNotification:
_archiveStatus
_arrayForDifferenceCalculation
_associatedBookmarkID
_associatedIDToChanges
_attemptCurrentTask
_attemptToLockSyncAndNotifyDelegateOnFailure:
_attributesForField:
_auxiliaryRecordIDsToDelete
_auxiliaryRecords
_backgroundImageModifiedField
_backgroundTaskAssertionToken
_bookmark
_bookmark:hasCurrentDAVHomePath:
_bookmark:hasPriorityOverBookmarkForDeduplication:prioritizeBookmarksWithSyncData:davHomePath:
_bookmark:isDuplicateOfBookmark:
_bookmarkAtIndex:paginate:
_bookmarkCount
_bookmarkDictionaryForSqliteRow:recursive:error:
_bookmarkHasSyncedToServer:
_bookmarkID
_bookmarkIDToChanges
_bookmarkUUIDsInFolderWithID:
_bookmarks
_bookmarksForTabs:
_bookmarksForTabs:syncable:
_bookmarksFromItems:
_bookmarksFromStatementSelectingIDs:withQuery:
_bookmarksIDsFromBookmarks:fromChangeSet:withFilter:
_cachedImmutableTabs
_cachedPinnedTabsFolderID
_cachedPrivatePinnedTabsFolderID
_cachedWBSyncData
_cancelMonitoringMetaDataFile
_changeType
_changeTypeDescription
_changedAttributeDescription
_changes
_checkDatabaseIntegrity
_childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:
_childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:countShouldUseNumChildrenIfPossible:
_childrenOfParentBookmarkAreUnsyncable:
_cleanUp
_cleanupTimer
_clearAllSyncData
_clearAllSyncKeys
_clearAllTombstones
_clearAllTombstonesDuringOrBeforeLocalRecordGeneration:
_clearAndCreateAncestorTable
_clearAndCreateBookmarksTables
_clearAndCreateBookmarksTitleWordTable
_clearCachedFavoritesFolderIdentifier
_clearChangeList
_clearLocalTabGroupsRetryTimer
_clearLocalTabGroupsWithCompletionHandler:
_clearLocalTabGroupsWithCompletionHandler:retryCooldown:
_clearRemoteTabGroupsWithCompletionHandler:
_clearSyncDataAfterICloudKeychainReset
_clearSyncKeysUnderBookmarkID:isFolder:
_clearTitleWordsForBookmarkID:
_clearTombstoneForBookmark:
_clientConnections
_cloudKitLocalMigrationState
_cloudKitSyncMetadataFileNameWithCollectionType:
_coalesceChangesForChangeIfNeeded:
_collectChangesOfType:withClause:intoArray:
_collection
_collectionWithConfiguration:checkIntegrity:
_commonInit
_configuration
_connection
_connectionQueue
_copyWithZone:isMutable:
_countShouldUseNumChildrenIfPossible
_createDatabaseQueue
_createFreshDatabase
_createInMemoryChangeSet
_createOrLoadMetaData
_createRecoveredBookmarksFolderIfNeeded
_createSchema
_createSpecialFolderWithIDIfNeeded:
_createSpecialTabsFolderWithUUIDIfNeeded:
_createSpecialTabsFolderWithUUIDIfNeeded:withParentID:
_createTopScopedBookmarkListForTabGroup:
_creationDeviceIdentifier
_cullReadingListBookmarksList:toSize:
_currentRetryCount
_currentTask
_currentTaskAttemptDidFinishWithError:
_currentTransaction
_customQuery
_cyclerRepresentationOfTab:
_cyclerRepresentationOfTabGroup:
_databaseLockAcquisitor
_databasePath
_databaseQueue
_databaseTitleForSpecialID:
_dateClosed
_dateCreated
_dateLastViewedField
_deduplicateBookmarksForBookmarkDAVWithHomeURL:
_deduplicateBookmarksForSyncingAndTrackChanges:considerBookmarksWithSyncDataAsUnique:
_deduplicateBookmarksWithRootFolder:depth:trackChanges:considerBookmarksWithSyncDataAsUnique:davHomeURL:
_defaultDatabaseFileNameForConfiguration:
_delegate
_deletable
_deleteAllLocalTabsAndGroups
_deleteAllWindowStates
_deleteAncestorTableEntriesForBookmarkID:
_deleteAndRebuildAncestorTableRecords
_deleteBookmark:leaveTombstone:insertTombstoneBlock:
_deleteBookmark:postChangeNotification:forApplyingInMemoryChanges:
_deleteBookmarkInMemory:
_deleteBookmarks:leaveTombstone:
_deleteIconForBookmark:
_deleteItems:leaveTombstones:
_deleteMatchingWindows:logAsError:
_deleteRecursively:descendantsOnly:
_deleteSyncPropertyForKey:
_deleteTab:reply:
_deleteTabGroup:reply:
_deleteWindowState:
_deleteWindowState:forApplyingInMemoryChanges:
_deleteWindowsNotInLastSession
_deletedTabs
_descriptionForScopedBookmark:
_deviceClass
_deviceIdentifier
_deviceIdentifierForCloudKitWithCollectionType:
_didNotSaveRecordsAfterMigration
_didRemoveTabGroups:updateTabGroups:
_didUpdateStartPageBackgroundImageVisibilityWithRecord:
_dirty
_displayTitleProvider
_displayingStandaloneImage
_dupicateBookmarks
_dupicateBookmarksToKeep
_editable
_enableAutoVacuum
_enableForeignKeys
_encounteredErrorWhileObtainingUUID
_enqueueTask:
_ensureFolderChildrenCount:
_entitlementLookupCache
_enumerateBookmarksForMatchStatement:normalizedQuery:usingBlock:
_enumerateContentsOfBookmarkFolder:includingSubfolders:usingBlock:
_enumerateSyncObserversUsingBlock:
_errorForMostRecentSQLiteError
_errorForMostRecentSQLiteErrorWithErrorCode:
_executeSQL:
_executeSQLWithCString:
_extraAttributes
_extraPositionData
_fastFetchBookmarksInBookmarkFolder:includingHiddenBookmarks:
_fastFetchBookmarksInBookmarkFolder:includingInMemoryChanges:
_fastFetchBookmarksInBookmarkFolder:options:offset:limit:
_fastFetchBookmarksInBookmarkFolder:options:offset:limit:includingInMemoryChanges:
_favoritesFolderIdentifier
_favoritesFolderSelectionShouldSync
_fetchedIconData
_fieldWithValue:generationKey:modifiedAttributes:syncData:
_fieldWithValueProvider:valueUpdater:generationKey:modifiedAttributes:syncData:
_fieldsForAttributes:
_fieldsWriteLock
_fileMonitor
_fileURL
_filterBookmarks:
_finalizeStatementIfNotNull:
_finishBackgroundTaskAssertionBlock
_finishCurrentTask
_firstBookmarkWithURLMatchingString:prefixMatch:inParent:
_firstOrLastServerIDInFolderWithServerID:isFirst:
_firstReconnectionAttemptDate
_firstServerIDInFolderWithServerID:
_fixLastSelectedTabIfNeeded
_fixLocalBookmarksInSyncableFolders
_folderContentsDidChangeNotificationName
_folderID
_folderIDToChildrenChanges
_folderIDToDeletedChildrenChanges
_folderIDToModifiedChildrenChanges
_folderIDToReorderedChildrenChanges
_foundDuplicates
_generateNewServerIDForBookmark:
_generatePositionForTabGroup:afterTabGroup:
_generateServerIdIfNeededForTabGroup:
_generateServerIdIfNeededForTabGroupBookmark:
_generateSyncPositionForOrderIndex:inFolderWithID:direction:
_generations
_handleIncomingConnection:
_handler
_iconData
_iconURLField
_identifier
_importBookmarksPlist:
_importSyncAnchorPlist:
_inMemoryAddedChildrenCountForBookmarkFolder:collection:skipCountingBookmarksThatAreDeletedInMemory:
_inMemoryChangeSet
_includeDescendantsAsChildren
_includeHidden
_incrementGeneration
_incrementRecordGeneration
_indexAllTitleWords
_indexBookmarkID:title:
_init
_initForCopy
_initWithDomain:
_initWithDomain:usage:
_insertAncestorTableEntriesForBookmarkID:withAncestorIDs:
_insertAncestorTableEntriesForBookmarkID:withParentID:
_insertBookmark:afterBookmark:inFolderWithID:
_insertItems:inParentWithID:afterItem:
_insertItemsIntoPlace:inParentWithID:
_insertTabGroup:afterTabGroup:isMove:
_insertTombsonesRecursivelyForRootFolder:insertTombstoneBlock:
_insertTombsonesRecursivelyHelperCurrentDepth:folder:insertTombstoneBlock:
_insertTombstoneWithServerID:syncData:
_inserted
_intFromExecutingSQL:
_internalQueue
_isDatabaseWriteAllowed
_isDeletingRecordZone
_isDisposable
_isKnownPerSiteSetting:
_isLockedSync
_isMutable
_isMuted
_isPinned
_isReadonly
_isSafeToLoadWebPage
_isShowBackgroundImageEnabled
_isTombstoneWithServerID:
_itemSyncPositionComparator
_kind
_labelField
_labelGenerationKey
_lastBookmarkIDForAddingInMemoryBookmark
_lastChangeID
_lastObservedLocalMigrationState
_lastPrivateDatabaseServerChangeToken
_lastSelectedChildField
_lastSelectedTabUUID
_lastServerIDInFolderWithServerID:
_lastSessionBrowserState
_lastSharedDatabaseServerChangeToken
_lastVisitTime
_lazyStartPageSectionsManager
_listOfScopedBookmarkFoldersInTabGroup:
_listQueryType
_listenerConnection
_listensForMetaDataChangeNotification
_loadBookmarksForDifferenceFromList:
_local
_localAttributes
_localRecordGeneration
_localTabGroup
_localTabGroupsByUUID
_localTabsByUUID
_locationField
_lock
_lockAcquired
_lockSync
_lockSyncHoldRequestorPointers
_logErrorWithMessage:result:
_markBookmarkID:added:
_markBookmarkID:withSpecialID:
_markSpecialBookmarks
_markTabsClosed:
_maxRetryCount
_maximumTabsPerGroup
_maximumTabsPerTabGroup
_mergeBookmark:withOriginalBookmark:prioritizeOriginalBookmarkAttributes:generateChangesIfNeeded:
_mergeBookmarkIntoPersistedBookmark:forAttributes:
_mergeCandidateBookmarkWithTitle:address:parent:mergeMode:
_mergeCandidateFolderWithTitle:parent:mergeMode:
_mergeChildrenOfID:referencingBase:error:
_mergeFields:withFields:forBookmark:
_mergeMode
_messageHandlers
_metaDataDidChange:
_metaDataFileChanged:
_migrateBookmarksPlist:syncAnchorPlist:
_migrateSchemaVersion0ToVersion1
_migrateSchemaVersion10ToVersion11
_migrateSchemaVersion11And12And13ToVersion14
_migrateSchemaVersion14ToVersion15
_migrateSchemaVersion15ToVersion16
_migrateSchemaVersion16AndVersion17AndVersion18ToVersion19
_migrateSchemaVersion19And20ToVersion21
_migrateSchemaVersion1And2ToVersion3
_migrateSchemaVersion21ToVersion22
_migrateSchemaVersion22ToVersion23
_migrateSchemaVersion23ToVersion24
_migrateSchemaVersion24ToVersion25
_migrateSchemaVersion25ToVersion26
_migrateSchemaVersion26ToVersion27
_migrateSchemaVersion27ToVersion28
_migrateSchemaVersion28ToVersion29
_migrateSchemaVersion29ToVersion30
_migrateSchemaVersion30ToVersion31
_migrateSchemaVersion31ToVersion32
_migrateSchemaVersion32ToVersion33
_migrateSchemaVersion33ToVersion34
_migrateSchemaVersion34ToVersion35
_migrateSchemaVersion35ToVersion36
_migrateSchemaVersion36ToVersion37
_migrateSchemaVersion37ToVersion38
_migrateSchemaVersion38ToVersion39
_migrateSchemaVersion39Or40ToVersion41
_migrateSchemaVersion3ToVersion4
_migrateSchemaVersion41ToVersion42
_migrateSchemaVersion42ToVersion43
_migrateSchemaVersion43ToVersion44
_migrateSchemaVersion44ToVersion45
_migrateSchemaVersion45ToVersion46
_migrateSchemaVersion46ToVersion47
_migrateSchemaVersion47ToVersion48
_migrateSchemaVersion48ToVersion49
_migrateSchemaVersion49ToVersion50
_migrateSchemaVersion4ToVersion5
_migrateSchemaVersion50ToVersion51
_migrateSchemaVersion5ToVersion6
_migrateSchemaVersion6ToVersion7
_migrateSchemaVersion7ToVersion8
_migrateSchemaVersion8ToVersion9
_migrateSchemaVersion9ToVersion10
_migrateToCurrentSchema
_migrateWindowState:
_minimumAPIVersion
_minimumSyncAPIVersion
_minimumSyncAPIVersionField
_modified
_modifiedAttributeMask
_modifiedAttributes
_modifyExtraReadingListAttributes:
_modifyLocalReadingListAttributes:
_moveBookmark:fromIndex:toIndex:
_moveBookmark:toFolderWithID:
_moveBookmark:toFolderWithID:detectCycles:
_moveBookmark:toFolderWithID:orderIndex:detectCycles:incrementGeneration:shouldMerge:generateSyncPositionIfNeeded:
_moveBookmarkAtIndex:toIndex:
_moved
_needsDeduplicationForBookmarkDAVWithHomeURL:
_needsSyncUpdate
_newlyCreated
_nextInMemoryPositionChangeID
_normalizeDatabaseURLs
_normalizeSearchString:
_normalizeUserTypedString:
_notifyScopedBookmarkChangesInFolderWithID:
_numberOfReconnectionAttempts
_observers
_offlineReadingListAvailable
_openDatabaseAtPath:checkIntegrity:error:
_orderBy
_orderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:
_orderIndex
_orderIndexForBookmarkInsertedIntoParent:insertAtBeginning:
_orderedWhereClauseForArchiveMode:
_orderedWhereClauseForArchiveMode:automaticArchivingEnabled:
_originalBookmark
_overflowRemoteTabs
_parentID
_parentIdentifiersOfBookmarksNeedingIcons
_participantDataForTab:
_participants
_perSitePreferencesStore
_performMergeForTabGroups:resultHandler:
_performNextTask
_performOSVersionUpgradesFromPreviousVersion:
_performSafariVersionUpgradesFromPreviousVersion:
_performWithMutableTabs:
_pinnedPageTitle
_pinnedPageURL
_pinnedTabs
_plistURL
_position
_positionAfterBookmark:
_positionAfterOrderIndex:inFolderWithID:
_positionBeforeBookmark:
_positionBeforeOrderIndex:inFolderWithID:
_positionGenerator
_postBookmarksChangedSyncNotification
_postBookmarksChangedSyncNotificationOnSyncQueue
_postBookmarksDidReloadNotification
_postBookmarksDidReloadNotificationAndStartReadingListFetcherIfChangesWereMade
_postBookmarksFolderContentsDidChangeNotification:
_postBookmarksSpecialFoldersDidChangeNotification
_postSyncNotificationWhenUnlocking
_postWebBookmarkMetaDataChangeDistributedNotification:
_prefixSearch:usingColumns:maxCount:
_preparePrefixesFromNormalizedString:
_previewTextField
_primaryBookmarkCount
_primaryCollection
_primaryRecordZoneID
_private
_privateBrowsing
_privatePinnedTabs
_privateTabGroup
_query
_queryWithOrderBy
_queue
_queuedNavigation
_rangeOfNextToken
_readOnly
_readPersistedChanges
_readPropertiesOfBookmark:
_readerViewTopScrollOffset
_readingListBookmarkID
_readingListItemsWhere:filteredBy:withInMemoryFilter:
_readingListPropertyNamed:
_rebuildAncestorTable
_recalculateCachedChildrenCountAndOrderIndices
_recentlyAddedTabGroupsAwaitingFirstStartPage
_recordIDsToRefresh
_recordZoneIDsToHashGenerators
_recordZoneIDsToLastServerChangeTokens
_referenceToTabWithUUID:
_regenerateSyncPositionsIfNeeded
_registerForSyncBookmarksFileChangedNotification
_reindexBookmarkID:title:
_reloadTabGroupsWithResultHandler:
_remoteObjectProxy
_removeAllChanges
_removeChange:
_removeCorruptedBookmarksDatabaseAtPath:
_removeDirectoryAtPath:
_removePlaceholderTabGroupRecordsOnUpgrade
_removedTabGroupsByUUID
_removedTabsByUUID
_reorderBookmark:toIndex:
_reorderBookmark:toIndex:generateSyncPositionIfNeeded:
_reorderBookmarkIntoPlace:
_reorderItem:afterItem:
_reorderItemIntoPlace:
_rerunMigrationsIfNecessary
_restoreBookmarkBarIfMissing
_restoreMissingSpecialBookmarksWithChangeNotification:
_restoreOrMergeAllowedSitesFolderAndContentsWithWebFilterAllowedSites:ensureChildCount:postChangeNotification:
_restoreOrMergeReadingListFolderWithChangeNotification:
_resumeMonitoringMetaDataFile
_retryCount
_retryTimerFired:
_reusableTab
_reusing
_reverseOrderIndex:
_rootBookmark
_rootServerIDForRecordZoneID:
_safariFetcherServerProxy
_saveActiveTabID:inTabGroupWithID:windowID:
_saveAndMoveBookmark:toFolderID:
_saveAndMoveBookmark:toFolderID:orderIndex:
_saveAndMoveBookmarks:toFolderID:
_saveBookmark:startReadingListFetcher:forApplyingInMemoryChanges:
_saveBookmark:withSpecialID:updateGenerationIfNeeded:
_saveBrowserState:
_saveItem:
_saveItems:
_saveTabGroupRecordsWithMissingCKShareRecord
_saveWindowState:
_saveWindowState:activeTabGroupID:localTabGroupID:privateTabGroupID:
_saveWindowState:forApplyingInMemoryChanges:
_sceneID
_scheduleCleanup
_selectBookmarksWhere:
_selectBookmarksWhere:returnType:
_serialQueue
_serverConnection
_serverID
_serverIDAfterServerID:
_serverIDAtOrderIndex:inFolderWithServerID:
_serverIDBeforeServerID:
_serverIDForBookmarkID:
_serverIDForBookmarkID:generateIfNeeded:
_serverIDOfSiblingBookmarkWithServerID:immediatelyBeforeOrAfter:
_sessionStateData
_setHidden:
_setInserted:
_setListensForMetaDataChangeNotification:
_setLocalURLString:
_setMergeMode:
_setModifiedAttributesIfSupported
_setParentID:
_setParentID:incrementGeneration:
_setPropertiesFromTabGroup:
_setSyncData:cachedWBSyncData:
_setSyncData:forBookmark:
_setSyncKey:forBookmark:
_setSyncNotificationType:
_setSyncable:
_setTitle:forTabGroupWithUUID:reply:
_setUUID:
_setUpConnection
_setUpConnectionIfNeeded
_setUpFieldsWithLabel:lastSelectedChild:location:syncData:
_setUpSyncObserverIfNeeded
_setUpWithPlistURL:readOnly:queue:
_setUsedForInMemoryChangeTracking:
_settingForValue:
_settingsGateway
_setupCompletionHandler
_setupFinished
_setupInMemoryChangeSet
_setupWithPath:checkIntegrity:
_setupWithPath:migratingBookmarksPlist:syncAnchorPlist:checkIntegrity:
_shadowBookmarkList
_shareRecord
_shareRecordForTabGroup:
_shouldAttemptToReconnect
_shouldEnqueueTask:
_showingReader
_simulateCrashWithDescription:
_sizeForFileOrDirectory:withAttributes:
_skipOffset
_skipsExternalNotifications
_specialFolderID
_specialID
_specialIDForBookmarkBeingSaved:
_specialIDForBookmarkTitle:
_specialTabFolderUUIDs
_specialTabFolderUUIDsForQueries
_specialTabsWithUUID:
_sqliteInConditionForInMemoryModifiedBookmarksInFolder:collection:
_sqliteNotInConditionForInMemoryModifiedAndDeleted:bookmarksInFolder:collection:
_sqliteStatementWithQuery:
_sqliteStatementWithQuery:runInBlock:
_startBackgroundTaskAssertionBlock
_startMonitoringSyncStatusWithCompletionHandler:
_startMonitoringTabGroupUpdateExpectingMigration:completionHandler:
_startOfUnclassifiedRangeBeforeNextToken
_startPageSectionOrder
_startReadingListFetcher
_startTimerWithTimeout:retryInterval:
_state
_stopTimer
_storeOwner
_stringForReadingListArchiveStatus:
_stringLength
_subtype
_syncAdd:toParent:withOrderIndex:error:
_syncAgentDidLaunch:
_syncAgentNotificationObserver
_syncAllowed
_syncData
_syncDataBlobForBookmarkServerID:
_syncDataForBookmarkID:
_syncDataForBookmarkServerID:
_syncFlags
_syncKey
_syncKeysForServerIDs:
_syncLockFileDescriptor
_syncLockFileName
_syncNotificationType
_syncObserverQueue
_syncObservers
_syncPropertyExistsForKey:
_syncSetString:forKey:updatedExistingKey:
_syncType
_syncable
_syncableTabGroupsByUUID
_syncableTabsByUUID
_tabBeforeIndex:inGroup:
_tabCacheForTabGroup:
_tabClass
_tabCollection
_tabGroupBeforeIndex:
_tabGroupCacheForTabGroup:
_tabGroupManager
_tabGroupSyncDidFinish:
_tabGroupUUID
_tabGroupUpdateObserver
_tabGroupWithID:
_tabGroupWithIdentifier:
_tabGroupWithUUID:
_tabGroups
_tabGroupsToActiveTabs
_tabIndex
_tabWithIdentifier:
_tabWithUUID:
_tabs
_tabsByUUID
_taskType
_tasks
_test_preventPeriodicallyApplyingInMemoryChangesToDatabase
_timeout
_timeoutTimer
_timer
_title
_titleWordPrefixes
_titleWordPrefixesForInMemoryFiltering
_topLevelDuplicateBookmarksCount
_topScopedBookmarkListForTabGroup:onQueue:
_topScopedBookmarkListServerIdForTabGroup:
_trackChangesInMemoryIfDatabaseWriteIsNotAllowed
_triggerTabGroupSync
_trimmedPreviewText:
_trimmedTitle:
_uncacheTab:
_uncacheTabGroup:
_uniqueExternalUUID
_unlockSync
_unlockSyncRequested
_unsafeOpenDatabaseAtPath:checkIntegrity:error:
_unsafeOrderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:
_updateBookmarkSyncPositionIfNeeded:
_updateBookmarkWithURL:shouldSync:
_updateBookmarks:inFolderWithID:
_updateCachedChildCountForParentID:inDirection:
_updateCachedImmutableTabsIfNeeded
_updateDatabaseIfNewerOSVersionWasLaunched
_updateDatabaseIfNewerSafariVersionWasLaunched
_updateDatabaseIfNewerVersion:wasLaunchedForSyncStringKey:upgradeSelector:versionType:
_updateExtraAttributeValuesUsingBlock:
_updateExtraAttributesUsingBlock:
_updateHiddenAncestorCountForBookmarksUnderFolderID:addingOffset:
_updateItems:inParentWithID:
_updatePerSiteSettingsWithRecord:
_updatePerSiteSettingsWithRecord:completionHandler:
_updatePinnedTabs:privatePinnedTabs:
_updatePositionsForTabsInTabGroup:
_updateStartPageBackgroundImageWithRecord:
_updateStartPageSectionOrder:
_updateStartPageSectionVisibilityWithIdentifier:record:
_updateSyncNotificationType
_updateTabLookupTable
_updateToAccessLevel:
_urlFilter
_usage
_usedForInMemoryChangeTracking
_userSettings
_userVersion
_usesCloudKit
_uuid
_uuidForQueries:
_verifyAllTablesExist:
_waitForTabGroups
_wb_stringByDeletingTrailingSlash
_wb_stringByStandardizingDAVServerID
_wb_userVisibleString
_webBookmarkCollectionClass
_webBookmarks_hasCaseInsensitivePrefix:
_webBookmarks_isHTTPFamilyURL
_webFilterStatus
_web_bestURLForUserTypedString
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
_web_pathWithUniqueFilenameForPath:
_web_possibleURLPrefixesForUserTypedString
_web_removeFileOnlyAtPath:
_websiteDataRecord
_windowIDForUUID:
_windowStates
_windowStatesWithFilter:
_windowUUID
_windowWithBookmark:
_windows
_wordTokenizer
absoluteString
acceptShareForURL:invitationTokenData:completionHandler:
acceptanceStatus
accessLevel
accountHash
acquireLockWithTimeout:
acquireLockWithTimeout:retryInterval:
activeParticipantIDs
activeParticipantsDidUpdateInTabGroupWithUUID:
activeParticipantsDidUpdateInTabWithUUID:
activeParticipantsInTab:
activeParticipantsInTabGroup:
activeParticipantsInTabGroupWithServerID:
activeParticipantsInTabWithServerID:
activeTabGroup
activeTabGroupUUID
activeTabUUIDForTabGroupWithUUID:
addBookmarkInMemory:toFolderWithID:
addChange:
addChanges:
addCharactersInRange:
addChild:
addDuplicateBookmark:replaceOriginal:
addDuplicateBookmarkToKeep:
addEntriesFromDictionary:
addIndex:
addItem:underFolderWithServerId:database:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addReadingListItemWithURL:title:previewText:error:
addSyncObserver:
addTabGroupObserver:
addTimer:forMode:
added
addedLocally
adoptAttributesFromTab:
advanceToNextToken
allDuplicateBookmarksCount
allGroupsTabsUUIDs
allKeysForObject:
allObjects
allSections
allSyncingAttributesForBookmark:
allValues
allocWithZone:
allowsScopedBookmarksInTabGroup:
ancestorTabUUIDs
appendFormat:
appendString:
appendTabs:
applicationProxyForIdentifier:placeholder:
applyInMemoryChanges:
applyInMemoryChangesToDatabase
applyModificationsToBookmark:
applyModificationsToBookmarks:
archiveSize
archiveStatus
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingDifference:
arrayForKey:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
associatedBookmarkID
attributesMarkedAsModified:
attributesMarkedAsModify:
attributesOfItemAtPath:error:
autorelease
auxiliaryRecordForKey:
auxiliaryRecordIDs
auxiliaryRecordIDsToDelete
backgroundImageAppearanceIsLight
backgroundImageExists
backgroundImageGeneration
backgroundImageModifiedState
backgroundImageModifiedStateProvider
backgroundImageModifiedStateUpdater
beginMergingChangesWithDatabase:
beginSharingTabGroupWithUUID:completionHandler:
beginSyncTransaction
bookmark
bookmarkAddChangeWithBookmark:
bookmarkArray
bookmarkArrayRequestingCount:
bookmarkAtIndex:
bookmarkContainsLeafBookmark:
bookmarkCount
bookmarkID
bookmarkIDForServerID:excludeDeletedBookmarks:
bookmarkIDWithSpecialID:
bookmarkIDsModifiedInMemoryNotPassingFilterFromChangeSet:inFolder:
bookmarkImagesDirectoryPath
bookmarkIsAddedInMemory:
bookmarkIsFavoritesFolder:
bookmarkIsFrequentlyVisitedSite:
bookmarkIsInFavoritesFolder:
bookmarkModifyChangeWithBookmark:
bookmarkRequiresParent:
bookmarkType
bookmarkTypeForChange:
bookmarkTypeWithBookmark:
bookmarkWithID:includingInMemoryChanges:
bookmarkWithServerID:excludeDeletedBookmarks:
bookmarkWithSpecialID:
bookmarkWithUUID:
bookmarks
bookmarksAfterReplayingChangesToBookmarks:inFolderWithID:
bookmarksBarBookmark
bookmarksBarList
bookmarksDictionary
bookmarksInCollection:fromIndex:toIndex:
bookmarksMatchingString:
bookmarksNeedingIcons
bookmarksServerProxy:didStartFetchingReadingListItem:
bookmarksServerProxy:didStopFetchingReadingListItem:
bookmarksServerProxy:didUpdateReadingListFetchingProgress:
bookmarksServerProxyDidFinishFetching:
boolForKey:
boolValue
browserState
bundleIdentifier
bytes
cStringUsingEncoding:
cache:willEvictObject:
callStackSymbols
canCloseAutomaticallyForInterval:
canSetPinned
changeID
changeIsDAVMoveChange:
changeIsMoveChange:
changeList
changeType
changeTypeForChange:
changeWithObject:type:index:
characterAtIndex:
checkResourceIsReachableAndReturnError:
ckShortDescription
class
cleanUpReadingListArchives
cleanUpRedundantPreviewText
clearAllCKRecords
clearAllCloudTabDevices
clearAllGenerationsExceptState
clearAllLastServerChangeTokens
clearAllPageZoomSyncData
clearAllReadingListArchives
clearAllSafariHistoryWithCompletionHandler:
clearAllSyncData
clearAllSyncDataWithDatabase:
clearArchive
clearArchiveSynchronously
clearBookmarksWithOptions:completionHandler:
clearCarrierBookmarks
clearChangesDuringOrBeforeLocalRecordGeneration:
clearChangesForBookmark:
clearChangesForChangeRecords:lastSyncedRecordGeneration:
clearChangesWithChangeToken:database:
clearDeletedTabs
clearDeviceIdentifierWithPlistURL:
clearFrequentlyVisitedSitesFolder
clearModifiedAttributes
clearReadingListArchiveWithUUID:
clearSyncDataAfterICloudKeychainReset
clearTabs
clearTabsForCurrentDevice
clearlAllLocalBookmarksForAutomatedTestingWithDatabase:
closeDatabase:shouldSave:
closeWindowState:
code
collection
collectionType
collectionWithConfiguration:
commitSyncTransaction
compare:
compare:options:
completedMigration
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsWithString:
configuration
conformsToProtocol:
connection
connection:didCloseWithError:
containsCKShareRecord
containsOnlyStockBookmarks
contentFilterListsAllowURL:
contentFilterOverridesEnabled
contentsOfDirectoryAtPath:error:
copy
copyAccountHashWithDatabase:
copyAttributesWithItem:
copyChangeTokenWithDatabase:
copyChangedItemWithChange:
copyChangesWithDatabase:changeToken:
copyDeletedBookmarkSyncDataWithChange:
copyDeviceIdentifier
copyFirstServerIdInFolderWithServerId:database:
copyItemAtURL:toURL:error:
copyItemWithLocalID:database:
copyItemWithServerId:database:
copyLastServerIdInFolderWithServerId:database:
copyLocalIDsInFolderWithLocalID:database:
copyModifiedAttributesWithChange:
copyParentServerIdWithItem:
copySaveURLForAssetWithKey:item:
copyServerIdInFolderAfterServerId:database:
copyServerIdInFolderBeforeServerId:database:
copyServerIdWithChange:
copyServerIdWithItem:
copyServerIdsInFolderWithServerId:database:
copySyncDataWithDatabase:
copySyncDataWithItem:
copySyncKeyWithItem:
copyValueForKey:item:
copyWithValueSource:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countInCollection:
countReadingListBookmarksNeedingArchiveInMode:
countReadingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:
createBookmarkWithType:database:
createDatabase
createDatabaseWithoutLock
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFolderWithType:database:
createIfNeeded
createLegacyPlaceholderTabGroupBookmarksForSharedTabGroup:
createTopScopedBookmarkListIfNeededForTabGroup:
createWindowsTabGroupsTable
createWindowsTable
creationDeviceIdentifier
currentDeviceIdentifier
currentHandler
currentRecordGeneration
currentTabServerIDPresenceForParticipant:getTabGroupServerID:
currentTabServerIDPresenceForParticipant:inTabGroupWithServerID:
customQuery
customUnifiedFieldText
dataContainerURL
dataRepresentation
dataWithBytes:length:
dataWithContentsOfURL:options:error:
dataWithPropertyList:format:options:error:
databaseHealthInformation
databaseLockAcquisitor:acquiredLock:
databasePath
databasePathForConfiguration:
databaseSyncData
databaseSyncDataInDatabase:databaseAccessor:
databaseSyncDataWithContentsOfData:
date
dateAdded
dateAddedProvider
dateAddedUpdater
dateByAddingComponents:toDate:options:
dateClosed
dateCreated
dateLastArchived
dateLastViewed
dateLastViewedProvider
dateLastViewedUpdater
dateWithTimeIntervalSince1970:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
deduplicateBookmarks
deduplicateBookmarksWithRootFolder:depth:
defaultCenter
defaultDatabaseURL
defaultManager
defaultReadingList
delegate
deletable
deleteAllFavoriteIcons
deleteAllLocalSavedState
deleteAllSafariSecurityOriginsWithCompletionHandler:
deleteAllWindowStates
deleteAllWindows
deleteArchiveForReadingListBookmarkWithID:
deleteBackgroundImageDirectory
deleteBookmark:leaveTombstone:
deleteBookmark:postChangeNotification:
deleteBookmarkInMemory:
deleteBookmarkWithIdentifier:reply:
deleteBookmarks:postChangeNotification:
deleteBookmarksInMemory:inFolder:
deleteChangeWithBookmark:
deleteItems:leaveTombstones:
deleteItems:leaveTombstones:completionHandler:
deleteSafariPersistentURLCacheStorageWithCompletionHandler:
deleteSafariWebsiteDataRecord:completionHandler:
deleteScopedBookmarkWithUUID:
deleteScopedBookmarkWithUUID:completionHandler:
deleteTabs:
deleteWindowState:
deleteWindowStates:
deleteWindowStates:completionHandler:
deletedBookmarkIDsInBookmarkFolder:
deletedTabs
descendantsOfBookmarkFolder:
description
descriptionPreservingPrivacy:
detectDuplicatedTabs
deviceIdentifier
deviceIdentifierForPositionGenerator:
dictionary
dictionaryRepresentation
dictionaryRepresentationForInMemoryChangeTracking
dictionaryWithContentsOfFile:
dictionaryWithContentsOfURL:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
didAddTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeBackgroundImageInSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeScopedFavoritesInSharedTabGroupWithUUID:byParticipantWithRecordID:
didDeleteRemoteRecordWithID:
didFetchRecentlyAcceptedSharedTabGroupWithUUID:acceptedShareDate:
didFinishFetching
didInsertIntoTabGroup:
didNavigateInTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didReceiveRemoteCloudSettingsUpdateWithRecord:
didRemoveFromTabGroup
didRemoveTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didStartFetchingReadingListItemWithMessage:
didStopFetchingReadingListItemWithMessage:
didToggleCloudTabs:
didToggleCloudTabs:terminateAfterUpdating:
didUpdateProgressWithMessage:
differenceByTransformingChangesWithBlock:
differenceFromArray:
differenceFromArray:withOptions:
disableSuddenTerminationForPendingChanges
displayTitle
displayTitleProvider
displayingStandaloneImage
distantFuture
domain
doubleValue
duplicate
duplicates
duplicatesToKeep
editable
emptyCompletionHandler
emptyTabsUUIDSet
enabledSectionIdentifiers
encodeBool:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedBookmarkSyncData
encodedData
encodedDatabaseSyncData
encounteredErrorWhileObtainingUUID
enqueueTask:
enumerateBookmarks:andReadingListItems:matchingString:usingBlock:
enumerateDescendantsOfBookmark:usingBlock:
enumerateDescendantsOfBookmarkID:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateReusableTabs:
enumeratorAtPath:
ephemeralTabGroupManager
error
errorWithDomain:code:userInfo:
evictFromTabReuse
exceptionWithName:reason:userInfo:
exchangeOriginalBookmarkWithBookmark:
fastFetchBookmarksInBookmarkList:
favoritesFolderList
favoritesFolderSelectionShouldSync
fetchTopLevelBookmarkList:
fieldForAttribute:
fields
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSize
fileSystemRepresentation
fileType
fileURLWithPath:
finishBackgroundTaskAssertionBlock
finishDecoding
finishMergingChangesWithDatabase:
first
firstObject
firstReadingListBookmarkNeedingArchiveInMode:
firstReadingListBookmarkNeedingArchiveInMode:automaticArchivingEnabled:
firstReadingListBookmarkWithURLMatchingString:prefixMatch:
fixCachedNumberOfChildrenIfNeeded
fixRecoveredBookmarksIfNeeded
floatForKey:
folder
folderHasReplaceChange:
folderID
folderType
folderTypeForChange:
folderTypeWithFolder:
formUnionWithCharacterSet:
frequentlyVisitedSitesFolder
frequentlyVisitedSitesFolderBookmarkID
frequentlyVisitedSitesFolderCreatingIfNeeded:
frequentlyVisitedSitesFolderCreatingIfNeeded:postChangeNotification:
frequentlyVisitedSitesList
fullArchiveAvailable
generatePositionBeforeFirstRecordInParentWithServerID:
generatePositionsForChildRecordNamesGroupedByParentFolders:
generateSyncPositionForBookmark:
generation
generationForKey:
generationKeyForField:
getActiveParticipantsInTab:completionHandler:
getSafariDataUsageByteCountWithCompletionHandler:
getSafariWebDataUsageWithCompletion:
handleFailureInFunction:file:lineNumber:description:
hasBoolEntitlement:
hasCompletedMigration
hasFetchedMetadata
hasGenerationForKey:
hasInMemoryChanges
hasPrefix:
hasSameKindAsTabGroup:
hasShareRecord
hasSuffix:
hash
hashGeneratorForRecordZoneID:
hidden
holdLockSync:
host
htmlString
iconData
iconURLUpdater
identifier
identifierOfBookmarkWithUUID:
inMemoryBookmarkCollectionConfiguration
inMemoryChangeSet
inMemoryChangesFileURL
inMemoryFilter
inMemoryTabCollectionConfiguration
incrementGenerationForKey:withDeviceIdentifier:
incrementGenerationIfNeeded
incrementKey:
incrementalVacuumIfNeeded
incrementedGenerationWithDeviceIdentifier:
index
indexOfObject:
indexOfObjectPassingTest:
indexOfReadingListBookmark:countingOnlyUnread:
indexSet
indexesOfObjectsPassingTest:
init
initBuiltinBookmarkWithTitle:address:
initBuiltinDeviceBookmarkWithTitle:address:
initCarrierBookmarkWithTitle:address:
initClientForMachService:
initFolderWithParentID:collectionType:
initFolderWithParentID:deviceIdentifier:collectionType:
initForReadingFromData:error:
initFrequentlyVisitedSiteWithWebBookmark:title:
initListenerForMachService:
initReadingListBookmarkWithTitle:address:previewText:
initReadonlySafariBookmarkCollection
initRequiringSecureCoding:
initSecondarySafariBookmarkCollectionWithName:
initWhiteListBookmarkWithTitle:address:
initWithArray:
initWithArray:copyItems:
initWithBookmark:
initWithBookmark:activeTabGroup:localTabGroup:privateTabGroup:
initWithBookmark:bookmarkID:parentID:associatedBookmarkID:changeType:
initWithBookmark:bookmarkID:parentID:changeType:
initWithBookmark:lastSelectedTabUUID:
initWithBookmark:lastSelectedTabUUID:kind:
initWithBookmark:tabs:lastSelectedTabUUID:
initWithBookmarkCollection:bookmark:
initWithBookmarkCollection:bookmark:changeType:localRecordGeneration:
initWithBookmarkID:parentID:associatedBookmarkID:changeType:
initWithBookmarkID:parentID:changeType:
initWithBookmarks:parentID:changeType:
initWithBookmarks:parentID:specialFolderID:changeType:
initWithBookmarks:specialFolderID:changeType:
initWithBookmarksWhere:folderID:orderBy:usingFilter:
initWithBookmarksWhere:orderBy:usingFilter:
initWithBytes:length:
initWithCString:encoding:
initWithCalendarIdentifier:
initWithCoder:
initWithCollection:
initWithCollectionType:
initWithCollectionType:databasePath:readonly:
initWithCollectionType:databasePath:readonly:createIfNeeded:
initWithCollectionType:storeOwner:
initWithConfiguration:
initWithConfiguration:checkIntegrity:
initWithConfiguration:openDatabase:
initWithConfiguration:openDatabase:checkIntegrity:
initWithConnection:
initWithDataRepresentation:relativeToURL:
initWithDatabaseURL:
initWithDelegate:
initWithDeviceIdentifier:
initWithDeviceIdentifier:generation:
initWithDictionary:copyItems:
initWithDictionaryRepresentation:
initWithDictionaryRepresentationForInMemoryChangeTracking:
initWithDomain:code:userInfo:
initWithFileURL:
initWithFileURL:readPersistedChanges:
initWithFolderID:inCollection:usingFilter:options:
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
initWithLastVisitTime:sessionStateData:ancestorTabUUIDs:displayingStandaloneImage:readerViewTopScrollOffset:readingListBookmarkID:openedFromLink:showingReader:queuedNavigation:
initWithMachServiceName:options:
initWithNotificationName:
initWithObjects:forKeys:
initWithOriginalBookmark:
initWithParentID:position:
initWithPath:migratingBookmarksPlist:syncAnchorPlist:
initWithPinnedTabs:privatePinnedTabs:windowStates:
initWithPinnedTabs:privatePinnedTabs:windows:
initWithPlistURL:readOnly:
initWithQuery:skipOffset:collection:
initWithQuery:skipOffset:collection:queue:
initWithRecordName:zoneID:
initWithReusableTab:
initWithSQLiteStatement:deviceIdentifier:collectionType:
initWithSQLiteStatement:deviceIdentifier:hasIcon:collectionType:
initWithSortValues:
initWithSyncAllowed:
initWithTabCollection:
initWithTabGroupManager:
initWithTabGroupManager:handler:
initWithTitle:address:collectionType:
initWithTitle:address:parentID:collectionType:
initWithTitle:address:parentID:folder:deviceIdentifier:collectionType:
initWithTitle:address:parentID:subtype:deviceIdentifier:collectionType:
initWithTitle:address:pinned:
initWithTitle:url:deviceIdentifier:
initWithTitle:uuid:deviceIdentifier:
initWithTopLevelDuplicateBookmarksCount:allDuplicateBookmarksCount:
initWithURL:title:uniqueIdentifier:
initWithUTF8String:
initWithUUID:
initWithUUID:activeTabGroup:localTabGroup:privateTabGroup:sceneID:
initWithUUID:activeTabGroupUUID:localTabGroup:privateTabGroup:sceneID:windowID:
initWithUUID:deviceIdentifier:
initWithUUID:deviceIdentifier:lastVisitTime:
initWithUUID:sceneID:
initWithUUID:title:url:deviceIdentifier:
initWithUUID:title:url:deviceIdentifier:lastVisitTime:
initWithUUID:title:url:pinned:pinnedTitle:pinnedURL:localAttributes:deviceIdentifier:
initWithUUIDString:
initWithUserName:
initWithValue:generation:deviceIdentifier:
initWithValueSource:valueProvider:valueUpdater:generation:deviceIdentifier:
initWithVersion:safeToLoadWebPage:lastVisitTime:sessionStateData:ancestorTabUUIDs:dateClosed:tabIndex:windowUUID:disposable:pinned:pinnedPageURL:pinnedPageTitle:muted:queuedNavigation:displayingStandaloneImage:readerViewTopScrollOffset:readingListBookmarkID:openedFromLink:showingReader:
initWithWebBookmarkCollectionClass:
initialize
insertItems:inParent:afterItem:completionHandler:
insertItems:inParentWithID:afterItem:
insertItems:inParentWithID:afterItem:completionHandler:
insertItemsIntoPlace:inParent:completionHandler:
insertItemsIntoPlace:inParentWithID:completionHandler:
insertObject:atIndex:
insertScopedBookmark:inScopedBookmarkFolderWithID:afterBookmarkWithUUID:
insertString:atIndex:
insertTab:inTabGroup:afterTab:
insertTabGroup:afterTabGroup:
insertTabs:afterTab:
inserted
insertions
intValue
integerForKey:
integerValue
interfaceWithProtocol:
invalidate
isAddedLocally
isBookmarkDeleted:
isBookmarkVisible:
isBookmarksBarFolder
isBookmarksMenuFolder
isBuiltinBookmark
isCurrentUser
isCustomQuery
isCustomizationSyncEnabled
isDeletable
isDeleted
isDeletingRecordZone
isDisplayingStandaloneImage
isDisposable
isEditable
isEphemeralMultiUser
isEqual:
isEqualToBookmark:
isEqualToDictionary:
isEqualToString:
isFavoritesBarHidden
isFolder
isFrequentlyVisitedSitesFolder
isFullArchiveAvailable
isHidden
isIdentical:
isInMemoryDatabase
isInserted
isKindOfClass:
isLockedSync
isMarkedAsRead
isMemberOfClass:
isMerging
isMinimized
isMutable
isOfflineReadingListAvailable
isPerSiteSettingSyncEnabled
isPersistent
isPinnable
isPinned
isPopupWindow
isPrivateBrowsing
isReadOnly
isReadableFileAtPath:
isReadingListFolder
isReadingListItem
isReadonly
isSafeToLoadWebPage
isSelectedFavoritesFolder
isSelectedFavoritesFolderProvider
isShared
isStartPageSettingSyncEnabled
isSyncAllowed
isSyncable
isTabBarHidden
isTransactionCurrentlyActive
isWebFilterAllowedSitesFolder
isWebFilterEnabled
item:isEqualToItem:
item:isInFolderWithServerSyncId:
itemType
itemTypeForChange:
itemTypeWithItem:
itemsInParentWithID:ofType:
kind
labelField
labelWithAddress:
labelWithPinned:
lastClosedWindowState
lastObject
lastPathComponent
lastPinnedTab
lastPrivateDatabaseServerChangeToken
lastReadGeneration
lastSelectedChildID
lastSelectedTabUUID
lastServerChangeTokenForRecordZoneID:
lastSessionBrowserState
lastSessionWindowStates
lastSharedDatabaseServerChangeToken
lastSyncedRecordGeneration
lastVisitTime
leafChildCountForBookmarksInFolderWithID:
leafChildCountForFoldersInFolderWithID:
length
listWithID:
listWithID:skipOffset:
listWithID:skipOffset:includeHidden:
listWithID:skipOffset:includeHidden:includeDescendantsAsChildren:filteredUsingString:
listWithSpecialID:
listensForMetaDataChangeNotification
local
localAttributesWithLastVisitTime:
localCloudKitMigrationState:
localMigrationState
localPreviewText
localRecordGeneration
localTabGroup
localTitle
localURL
localeSettingsChanged
localizedTitle
locationField
locationWithParentID:
locationWithPosition:
lockFields
lockSync
lockSyncHoldRequestorPointers
logRegulatoryBookmarksRead
longCharacterIsMember:
macZoomPreferences
mainBundle
mainRunLoop
maintainsSyncMetadata
makeObjectsPerformSelector:
markAllFavoritesAsNeedingIcons
markArchivedReadingListItemsAsNonRecoverable
markAsRead
markAttributesAsModified:
markBackgroundImageAsModified
markChildrenInFolderAsRead:
markClean
markSpecial:
markWebContentFilterAllowsAllReadingListItems
maximumTabsPerGroup
maximumTabsPerTabGroup
mergeAttributes:withBookmark:
mergeWithBookmark:
mergeWithBookmarksDictionary:clearHidden:clearSyncData:error:
mergeWithBookmarksDictionary:clearHidden:error:
mergeWithTab:
mergeWithTabGroup:
messageWithName:
methodForSelector:
migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory
minimumAPIVersion
minimumSyncAPIVersion
modified
modifiedAttributeMask
modifiedAttributes
modifiedAttributesOfBookmark:
modifiedAttributesToFieldNames
modifiedBookmarksInBookmarkFolder:
modifiedFields
modifiedSyncingAttributesForBookmark:
modifyBookmarkInMemory:
moveBookmark:toFolderWithID:
moveBookmark:toFolderWithID:orderIndex:
moveBookmarkInMemory:toFolderWithID:
moveBookmarkWithIdentifier:intoListWithIdentifier:atIndex:reply:
moveChangeWithBookmark:toFolderWithID:
moveItemAtPath:toPath:error:
movePresenceForParticipantToTabWithUUID:
moveTabGroup:afterTabGroup:
moveTabs:toTabGroup:afterTab:withoutPersistingTabGroupsWithUUIDStrings:
moved
mutableCopy
mutableCopyWithZone:
mutableDuplicate
mutableTabGroupWithUUID:
mutableTabGroups
mutableTabWithUUID:
mutableTabsForTabGroup:
name
named
needsSecureDelete
newlyCreated
nextBookmarkIDForAddingBookmarkInMemory
nextChangeAfterLocalRecordGeneration:
nextChangeID
nextChangeIDForPositionInPositionGenerator:
nextDatabaseSyncChangeID
nextPageURLs
notifyForSaveOfAssetWithKey:item:
null
numberOfAddedBookmarksInBookmarkFolder:
numberOfReorderedBookmarksInBookmarkFolder:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
observeTabGroupManager:waitForTabGroups:handler:
offlineArchiveDirectoryPath
offlineReadingListAvailable
omitFromUI
openDatabase:
openedFromLink
orderIndex
orderIndexOfBookmark:
orderIndexOfBookmark:withSyncPosition:inFolderWithID:
orderedSet
orderedSetWithArray:
originalBookmark
overflowRemoteTabs
pageZoomSyncDataForRecordName:
parentID
parentIdentifier
parentIdentifierOfBookmarkWithID:
parentRecordID
participants
participants:didJoinSharedTabGroupWithUUID:
participants:didLeaveSharedTabGroupWithUUID:
path
performDatabaseUpdatesWithTransaction:applyInMemoryChanges:secureDelete:
performDatabaseUpdatesWithTransaction:secureDelete:
performDeduplicationWithDatabase:mode:
performMaintenance
performMaintenanceOnDatabase:afterVersion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithFieldsWriteLock:
persistChangesWithCompletion:
persistent
pinnable
pinned
pinnedAddress
pinnedPageURL
pinnedTabWithTitle:url:deviceIdentifier:
pinnedTabs
pinnedTabsFolderID
pinnedTitle
pinnedURL
position
positionBetweenPosition:andPosition:withDeviceIdentifier:changeID:
positionDictionaryRepresentation
positionForBookmarkWithRecordName:
positionFromContentsOfData:
positionGenerator:positionForRecordName:
positionGenerator:recordNameOfBookmarksAfterRecordWithName:
positionGenerator:recordNameOfBookmarksBeforeRecordWithName:
positionSortValueWithChangeID:
postBookmarksDidReloadNotification
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
postSyncNotificationWhenUnlocking
pptTabCollectionConfiguration
prefersSidebarVisible
presenceTabUUIDForParticipant:inTabGroup:
presenceTabUUIDForParticipant:inTabGroupWithServerID:
previewText
previewTextProvider
previewTextUpdater
privacyPreservingDescription
privatePinnedTabs
privatePinnedTabsFolderID
processInfo
propertyListWithData:options:format:error:
punctuationCharacterSet
purge:
purgeableReadingListItems
purgeableSpace
queuedNavigation
rangeOfString:options:
readOnly
readerViewTopScrollOffset
readingListArchivesDirectoryPath
readingListArchivesDiskUsage
readingListBookmarkID
readingListBookmarksMatchingString:maxResults:onlyArchivedBookmarks:
readingListBookmarksNeedingArchiveInMode:
readingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:
readingListFolder
readingListFolderBookmarkID
readingListIconURL
readingListIconUUID
readingListWithUnreadOnly:
readingListWithUnreadOnly:filteredUsingString:
readonlySafariBookmarkCollectionConfiguration
readonlySafariTabCollectionConfiguration
recentlyAddedTabGroupIsAwaitingFirstStartPage:
recentlyAddedTabGroupsAwaitingFirstStartPage
recentlyClosedTabList
recentlyClosedTabs
recentlyClosedWindowStates
record
recordID
recordIDsToRefresh
recordName
recordZoneIDsToHashGenerators
registerWindowState:
releaseLock
reloadItems:
reloadSettings
reloadTabGroupsFromDatabaseWithCompletionHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removals
removeActiveTabUUIDForTabGroupWithUUID:
removeAllActiveTabUUIDs
removeAllChanges
removeAllDuplicates
removeAllObjects
removeChange:
removeItemAtPath:error:
removeItemAtURL:error:
removeItemWithServerId:database:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsForKeys:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:name:object:
removePersistedInMemoryBookmarkChangesFile
removePreferenceValueWithRecordName:completionHandler:
removePresenceForParticipant:inTabGroupWithServerID:
removeSyncObserver:
removeTab:
removeTabGroupObserver:
removeUnusedPresenceRecords
reorderBookmark:toIndex:
reorderBookmarkInMemory:afterBookmark:
reorderChangeWithBookmark:afterBookmark:
reorderItem:afterItem:
reorderItem:afterItem:completionHandler:
reorderItemIntoPlace:completionHandler:
reorderList:moveBookmarkAtIndex:toIndex:
reorderScopedBookmarkWithUUID:afterBookmarkWithUUID:notify:
reorderTab:afterTab:
replaceBookmarksInMemory:inFolderWithID:
replaceChangeWithBookmarks:inFolderWithID:
replaceChangeWithBookmarks:inFolderWithSpecialID:
replaceCharactersInRange:withString:
replayChangesOnBookmark:
representativeURL
resetDeviceIdentifier
resetDeviceIdentifierForCloudKitWithCollectionType:
respondsToSelector:
restoreOrMergeAllowedSitesFolderAndContentsWithChangeNotification:
resume
retain
retainCount
reusableTab
reuseTabForUUID:
reverseObjectEnumerator
rollOutLastReadingListItem
rollOutReadingListItemIfNeededToMakeRoomForOneNewItem
rollbackSyncTransaction
rollingListOfArchivedReadingListItems
rollingReadingListMaximumCount
rootBookmark
rootList
safariBookmarkCollection
safariBookmarkCollectionConfiguration
safariDirectoryPath
safariTabCollectionConfiguration
safari_allObjectsPassTest:
safari_arrayContainingObjectsOfClass:forKey:
safari_arrayForKey:
safari_arrayWithArray:copyAction:
safari_arrayWithObjectsUnlessNil:
safari_bestURLForUserTypedString
safari_bookmarksRecordZoneID
safari_boolForKey:
safari_browserDefaults
safari_containsObjectPassingTest:
safari_dataForKey:
safari_dateForKey:
safari_dictionaryByMergingWithDictionary:
safari_dictionaryForKey:
safari_encodedSystemFieldsData
safari_encryptedValues
safari_ensureDirectoryExists:
safari_enumerateZippedValuesWithArray:withBlock:
safari_firstObjectPassingTest:
safari_initWithEncodedRecordData:
safari_insertObject:afterObject:
safari_insertObjects:afterObject:
safari_isCloudBackgroundImageRecord
safari_isCloudPerSiteSettingRecord
safari_isCloudSettingRecord
safari_isEmpty
safari_isHTTPFamilyURL
safari_isSafariFamilyApplicationBundle
safari_isSpecialFolderRecordName
safari_isVersionStringBetweenVersionString:andVersionString:
safari_isVersionStringGreaterThanVersionString:
safari_lastObjectPassingTest:
safari_longestIncreasingSubsequenceUsingValues:
safari_mapAndFilterKeysAndObjectsUsingBlock:
safari_mapAndFilterObjectsUsingBlock:
safari_mapObjectsUsingBlock:
safari_normalizedVersion
safari_numberForKey:
safari_objectAfter:
safari_objectBefore:
safari_operatingSystemVersionString
safari_originalDataAsString
safari_privacyPreservingDescription
safari_reduceObjectsWithInitialValue:usingBlock:
safari_removeDeallocationSentinelForObserver:
safari_safariCoreBundle
safari_setByApplyingBlock:
safari_setDeallocationSentinelForObserver:
safari_splitArrayUsingCondition:
safari_startPageBackgroundImageFileURL
safari_startPageBackgroundImageFileURLForIdentifier:
safari_startPageBackgroundImageFolderURL
safari_stringByRedactingBookmarkDAVServerID
safari_stringForKey:
safari_systemFieldsEncoder
safari_tabGroupRootRecordName
safari_tabGroupsRecordZoneID
saveArchiveForReadingListBookmarkWithID:
saveArchivesForReadingListBookmarks:
saveBackupOfDatabase:withName:
saveBookmark:
saveBookmark:incrementGenerations:
saveBookmark:startReadingListFetcher:
saveBrowserState:
saveBrowserState:completionHandler:
saveDatabase:
saveDatabaseSyncData:
saveIconWithData:urlString:forBookmark:
saveItem:
saveItem:completionHandler:
savePerSiteSettingCloudKitRecordToDisk:completionHandler:
saveTabGroup:
saveWindow:
saveWindowState:
saveWindowState:completionHandler:
scheduleBookmarksDatabaseMaintenance
scheduleBookmarksDatabaseMigrationTask
scheduleHSTSSuperCookieCleanup
schedulePasswordIconsCleanup
scheduleSyncIfNeeded
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scopedBookmarkListWithID:
scopedBookmarkListWithID:filteredUsingString:
scopedBookmarkWithUUID:
second
secondaryZoneNameForBookmark:
sectionIdentifiers
selectedFavoritesFolder
selectedFavoritesFolderUpdater
self
sendMessage:
sendMessage:withReplyHandler:
sentinelDidDeallocateWithContext:
serverID
serverIDsInFolderWithServerID:excludeDeletedBookmarks:
sessionStateData
setAccountHash:database:
setActiveParticipantIDs:
setActiveTabGroup:
setActiveTabGroupUUID:
setActiveTabUUID:forTabGroupWithUUID:
setAdded:
setAddedLocally:
setAddress:
setArchiveStatus:
setAssociatedBookmarkID:
setAuxiliaryRecord:forKey:
setAuxiliaryRecordIDsToDelete:
setBackgroundImageModifiedState:
setBookmark:
setBookmarkID:
setBookmarks:
setChildrenOrder:forFolderWithServerId:database:
setClass:forClassName:
setClasses:forSelector:argumentIndex:ofReply:
setCompletedMigration:
setContainsCKShareRecord:
setCountLimit:
setCreationDeviceIdentifier:
setDateAdded:
setDateClosed:
setDateLastArchived:
setDateLastFetched:
setDateLastViewed:
setDefaultValue:forPreference:completionHandler:
setDelegate:
setDeletedBookmarkSyncData:change:
setDeviceIdentifier:
setDidNotSaveRecordsAfterMigration:
setDisplayTitleProvider:
setExtraAttributes:
setFavoritesFolder:localOnly:
setFavoritesFolderIdentifier:postChangeNotification:
setFetchedIconData:
setFinishBackgroundTaskAssertionBlock:
setGeneration:
setGeneration:forKey:
setHandler:
setHandler:forMessageNamed:
setHasFetchedMetadata:
setHashGenerator:forRecordZoneID:
setHidden:
setIconData:
setIdentifier:
setInMemoryFilter:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setIsDeletingRecordZone:
setKind:
setLastPrivateDatabaseServerChangeToken:
setLastReadGeneration:
setLastSelectedChildID:
setLastSelectedTabUUID:
setLastServerChangeToken:forRecordZoneID:
setLastSharedDatabaseServerChangeToken:
setLastSyncedRecordGeneration:
setLocal:
setLocalAttributes:
setLocalCloudKitMigrationState:database:
setLocalMigrationState:generateDeviceIdentifierIfNeeded:
setLocalPreviewText:
setLocalTitle:
setLocalURL:
setMaximumTabsPerGroup:
setMaximumTabsPerTabGroup:
setMessageHandlers:
setMinimumAPIVersion:
setMinimumSyncAPIVersion:
setModified:
setModifiedAttributeMask:
setModifiedAttributes:
setModifiedAttributes:item:
setMoved:
setNeedsSyncUpdate:
setNewlyCreated:
setNextPageURLs:
setNotificationHandler:
setObject:forKey:
setObject:forKeyedSubscript:
setOrderIndex:
setPageZoomSyncData:forRecordName:completionHandler:
setParentID:
setParentRecordID:
setParticipants:
setPinned:title:address:
setPinned:title:url:
setPinnedTabs:
setPosition:
setPositionDictionaryRepresentation:
setPostSyncNotificationWhenUnlocking:
setPrefersSidebarVisible:
setPresenceInTabWithServerID:tabGroupWithServerID:forParticipant:
setPrivateBrowsing:
setPrivatePinnedTabs:
setReadOnly:
setReadingListIconURL:
setReadingListIconUUID:
setRecord:
setRecordIDsToRefresh:
setRemoteObjectInterface:
setRepresentation
setSceneID:
setSectionIdentifier:enabled:
setSectionsIdentifiers:enabledIndexes:
setSelectedFavoritesFolder:
setServerID:
setServerID:forBookmark:
setServerId:item:
setShadowBookmarkList:
setShared:
setShouldArchive:
setShouldIncrementGeneration:
setSkipsExternalNotifications:
setSpecialFolderID:
setStartBackgroundTaskAssertionBlock:
setState:
setStoreOwner:
setString:
setString:withSearchRange:
setSubtype:
setSyncAgentProxy:
setSyncData:
setSyncData:database:
setSyncData:forKey:
setSyncData:item:
setSyncKey:
setSyncKey:item:
setSyncLockFileDescriptor:
setSyncNotificationType:
setSyncPosition:
setSyncPosition:incrementGeneration:
setSyncState:
setSyncable:
setSyncableTitle:
setTabCollection:
setTabGroupUUID:
setTabGroupsToActiveTabs:
setTabs:
setTimeoutHandler:
setTitle:
setTitle:forBookmarkWithIdentifier:reply:
setTitle:incrementGeneration:
setTitle:previewText:dateLastFetched:
setURL:forBookmarkWithIdentifier:reply:
setURL:shouldSync:
setUnlockSyncRequested:
setUsage:
setValue:
setValue:forKey:
setValue:forScalarKey:
setValue:incrementGenerationIfNeeded:
setValue:ofPreference:forDomain:withTimestamp:completionHandler:
setWebFilterStatus:
setWindowStates:
setWindows:
setWithArray:
shadowBookmarkList
share
shareDidUpdateForTabGroupWithUUID:
shareRecord
shareRecordForTabGroup:
shareRecordForTabGroup:completionHandler:
shared
sharedAggregateDictionary
sharedConnection
sharedFeatureManager
sharedManager
sharedProxy
sharedWebFilterSettings
shortTypeDescription
shouldArchive
shouldFetchIconForBookmark:
shouldIncludeBookmarkAddedInMemory:
shouldReattemptArchiveWithAutomaticArchivingEnabled:
shouldSync
shouldUpdatePresence
showingReader
skipsExternalNotifications
sortUsingComparator:
sortValues
sortedArrayUsingComparator:
specialID
startBackgroundTaskAssertionBlock
startObserving
startPageSectionsManager
startPageTabWithDeviceIdentifier:
startReadingListFetcher
state
stopObservingChanges
storeOwner
string
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringForKey:
stringValue
stringWithCapacity:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
strongToStrongObjectsMapTable
subarrayWithRange:
subpathsOfDirectoryAtPath:error:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
supportsTabGroupFavorites
supportsURL:
syncAgentProxy
syncAllowed
syncBookmarksWithCompletionHandler:
syncData
syncDataForBookmark:
syncDataForBookmarkID:
syncDataWithContentsOfData:
syncEnabled
syncLockFileDescriptor
syncNotificationType
syncPosition
syncSetString:forKey:
syncSettingsUpDictionary
syncState
syncStringForKey:
syncable
syncableBookmarksIDsInFolderWithBookmarkID:
syncableTitle
syncableURL
tabClass
tabCollection
tabGroupForBookmark:
tabGroupHasDisplayedStartPage:
tabGroupManager:activeParticipantsDidUpdateInTabGroupWithUUID:
tabGroupManager:activeParticipantsDidUpdateInTabWithUUID:
tabGroupManager:didPerformBlockUpdatesForTabGroupWithUUID:
tabGroupManager:didRemoveTabGroupWithUUID:
tabGroupManager:didUpdateScopedBookmarkList:
tabGroupManager:didUpdateTabGroupWithUUID:
tabGroupManager:didUpdateTabWithUUID:userDriven:
tabGroupManager:didUpdateTabsInTabGroupWithUUID:
tabGroupManager:willPerformBlockUpdatesForTabGroupWithUUID:
tabGroupManager:willReplaceTabWithUUID:withTabWithUUID:
tabGroupManagerDidFinishSetup:
tabGroupManagerDidUpdateSyncableContent:
tabGroupManagerDidUpdateTabGroups:
tabGroupMatchingShare:
tabGroupMatchingShare:inTabGroups:
tabGroupUUID
tabGroupUUIDForServerID:
tabGroupWithUUID:
tabGroups
tabGroupsToActiveTabs
tabIndex
tabUUIDForServerID:
tabWithUUID:
tabs
tabsAreIdentical:
tabsForTabGroup:
tabsForTabGroupBookmark:
tabsUUIDSet
taskForDeletingIndividualWebsiteDataWithRecord:
taskType
taskWithType:
test_restoreMissingSpecialBookmarks
timeIntervalSince1970
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timerWithTimeInterval:repeats:block:
title
topScopedBookmarkListForTabGroup:
transactionCurrentlyActive
truncateToNumberOfTabs:
truncateWAL
unlockFields
unlockSync
unlockSyncAsynchronously
unlockSyncRequested
unsignedIntValue
unsignedIntegerValue
updateAccountHash:
updateActiveTabGroup
updateAddChangesWithInMemoryBookmarkID:toDatabaseGeneratedID:
updateBookmarks:inFolderWithID:secureDelete:
updateChangeAfterUpdatingInMemoryID:withDatabaseID:
updateContainsCKShareRecord
updateDatabaseSyncDataUsingBlock:
updateGenerationsInSyncData:forAttributes:
updateItems:inParentWithID:
updateItems:inParentWithID:completionHandler:
updateLastSelectedTab
updateReadingListWebFilterStatusForUnsetItemsOnly:
updateScopedBookmarkWithUUID:title:address:
updateSelectedFavoritesFolderWithBookmarkID:wasFavoritesFolder:isFavoritesFolder:
updateSyncDataForBookmark:usingBlock:
updateSyncDataForBookmarkWithRecordName:excludeDeletedBookmarks:usingBlock:
updateTabGroupWithUUID:persist:usingBlock:
updateTabWithUUID:persist:notify:usingBlock:
updateTabs:inTabGroup:
updateTabsInTabGroup:completionHandler:
updateTabsInTabGroupWithUUID:persist:usingBlock:
usage
userDidAcceptCloudKitShareWithMetadata:completionHandler:
userDidUpdateBookmarkDatabase
userIdentity
userInfo
userRecordID
userSettings
usesAllowedSitesOnly
usesGlobalPinnedTabs
uuid
vacuum
validBookmarkUUIDsFromUUIDs:
value
valueForKey:
valueWithPointer:
waitForPendingChanges
waitForSetupWithCompletionHandler:
waitWithTimeout:
wasAdded
wasModified
wasMoved
wasOpenedFromLink
wbSyncData
wb_URLForKey:isValid:
wb_arrayForKey:isValid:
wb_bestURLForUserTypedString
wb_boolForKey:
wb_databaseOpenError
wb_dateForKey:isValid:
wb_dictionaryForKey:isValid:
wb_featureDisabledError
wb_lockError
wb_numberForKey:
wb_numberForKey:isValid:
wb_stringByRedactingBookmarkDAVServerID
wb_stringForKey:isValid:
weakObjectsHashTable
webFilterAllowedSites
webFilterAllowedSitesFolder
webFilterAllowedSitesFolderBookmarkID
webFilterEnabled
webarchivePathForNextPageURL:
webarchivePathInReaderForm:fileExists:
websiteDataRecord
websiteDataRecordFromXPCDictionary:
websiteDataRecordWithDomain:
whiteListAllowedSites
whiteListEnabled
whitespaceAndNewlineCharacterSet
windowStateWithUUID:
windowStates
windowUUID
windowsFolderSpecialID
writeToDatabase:databaseAccessor:
writeToFile:atomically:
writeToFile:options:error:
writeToURL:atomically:
writeToURL:options:error:
zone
zoneID
v24@0:8@16
@28@0:8@16B24
v36@0:8@16B24@28
v16@0:8
v20@0:8B16
@16@0:8
B16@0:8
@"NSURL"
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@44@0:8@16@24i32q36
i16@0:8
q16@0:8
@"WebBookmarkCollection"
@"WebBookmark"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v40@0:8@16@24@?32
v24@0:8@"CKRecord"16
v24@0:8@"CKRecordID"16
@"NSArray"16@0:8
@"NSData"24@0:8@"NSString"16
v40@0:8@"NSData"16@"NSString"24@?<v@?B>32
q24@0:8@16
v32@0:8@16@24
v32@0:8@16@?24
@"WBSStartPageSectionManager"
@32@0:8@16@24
r^v16@0:8
v24@0:8r^v16
v28@0:8r^v16B24
r^{__CFData=}24@0:8r^v16
v32@0:8r^{__CFData=}16r^v24
r^{__CFArray=}32@0:8r^v16r^^v24
v32@0:8r^v16r^v24
v32@0:8r^{__CFString=}16r^v24
r^{__CFString=}24@0:8r^v16
i24@0:8r^v16
r^v24@0:8r^v16
B24@0:8r^v16
q24@0:8r^v16
B32@0:8r^v16@24
v32@0:8r^v16@24
v32@0:8q16r^v24
@24@0:8r^v16
v32@0:8@16r^v24
r^v32@0:8@16r^v24
@32@0:8@16r^v24
B40@0:8r^v16@24r^v32
v32@0:8r^v16q24
v40@0:8@16@24r^v32
B32@0:8r^v16r^v24
r^v32@0:8q16r^v24
B32@0:8r^v16@"NSString"24
v32@0:8r^v16@"NSString"24
@"NSData"24@0:8r^v16
v32@0:8@"NSData"16r^v24
@"NSSet"32@0:8@16r^v24
r^v32@0:8@"NSString"16r^v24
B40@0:8r^v16@"NSString"24r^v32
@"NSSet"32@0:8@"NSString"16r^v24
v40@0:8@"NSArray"16@"NSString"24r^v32
@"NSString"32@0:8@"NSString"16r^v24
@"NSDictionary"24@0:8r^v16
v32@0:8@"NSDictionary"16r^v24
@32@0:8@"NSString"16r^v24
@"NSURL"32@0:8@"NSString"16r^v24
v32@0:8@"NSString"16r^v24
@24@0:8q16
@32@0:8q16q24
v24@0:8^v16
v28@0:8^v16B24
r^{__CFData=}24@0:8^v16
v32@0:8^{__CFData=}16^v24
r^{__CFArray=}32@0:8^v16r^^v24
v32@0:8^v16^v24
v32@0:8^{__CFString=}16^v24
r^{__CFString=}24@0:8^v16
i24@0:8^v16
r^v24@0:8^v16
B24@0:8^v16
q24@0:8^v16
B32@0:8^v16@24
v32@0:8^v16@24
v32@0:8q16^v24
@24@0:8^v16
v32@0:8@16^v24
r^v32@0:8@16^v24
@32@0:8@16^v24
B40@0:8^v16@24^v32
v32@0:8^v16q24
v40@0:8@16@24^v32
B32@0:8^v16^v24
r^v32@0:8q16^v24
v24@0:8@"<WBTabGroupSyncAgentSyncObserver>"16
v32@0:8@"CKShareMetadata"16@?<v@?@"CKShare"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"NSURL"16@"NSData"24@?<v@?@"CKShare"@"NSError">32
v24@0:8@"NSString"16
v48@0:8@16@24@32@40
v32@0:8@"NSSet"16@"NSString"24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"CKRecordID"40
v32@0:8@"NSString"16@"CKRecordID"24
v32@0:8@"NSString"16@"NSDate"24
v36@0:8@16@24B32
v40@0:8@16@24@32
v24@0:8@"WBTabGroupManager"16
v32@0:8@"WBTabGroupManager"16@"NSString"24
v36@0:8@"WBTabGroupManager"16@"NSString"24B32
v32@0:8@"WBTabGroupManager"16@"WebBookmarkList"24
v40@0:8@"WBTabGroupManager"16@"NSString"24@"NSString"32
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSXPCConnection"
@"NSHashTable"
@"NSDate"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8q16
v24@0:8Q16
@"NSMutableDictionary"
@"NSDictionary"
@"CKRecord"
@"WBSCRDTPosition"
@"CKRecordID"
@"CKShare"
@36@0:8@16@24B32
@20@0:8B16
@"NSString"
@28@0:8@16i24
@"NSArray"28@0:8@"WebBookmarkChangeSet"16i24
B24@0:8@"WebBookmark"16
@40@0:8@16@24@?32
@40@0:8@16@24@32
v20@0:8i16
v28@0:8@16B24
@"NSMutableArray"
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
v24@0:8i16i20
@36@0:8@16i24q28
@40@0:8@16i24i28q32
@32@0:8i16i20q24
@36@0:8i16i20i24q28
@44@0:8@16i24i28i32q36
B24@0:8Q16
@"NSArray"
B20@0:8B16
B28@0:8@16B24
@20@0:8i16
v28@0:8@16i24
i24@0:8@16
B36@0:8@16i24i28i32
B28@0:8i16i20i24
B20@0:8i16
Q20@0:8i16
@"NSMutableOrderedSet"
v24@0:8B16B20
@"WebBookmarksXPCConnection"
B48@0:8@16@24@32^@40
@"WBReadingListPrivate"
@"WBCollectionConfiguration"
@"WBTabCollection"
@24@0:8@"WebBookmark"16
@"WebBookmark"16@0:8
v24@0:8@"WebBookmark"16
@40@0:8@16@24q32
@60@0:8@16@24i32q36@44q52
@52@0:8@16@24i32@36q44
@56@0:8@16@24i32B36@40q48
@44@0:8i16q20@28q36
@28@0:8i16q20
@36@0:8i16@20q28
I16@0:8
v36@0:8B16@20@28
@24@0:8Q16
v32@0:8@16Q24
q40@0:8@16@24@32
q32@0:8Q16@24
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"NSData"
@"WBBookmarkSyncData"
@"WBSCRDTField"
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@76@0:8@16@24@32B40@44@52@60@68
B24@0:8d16
@28@0:8q16B24
v28@0:8@"WBDatabaseLockAcquisitor"16B24
v40@0:8B16B20@24@?32
@28@0:8B16@20
@32@0:8@16I24B28
v40@0:8B16B20@"NSString"24@?<v@?@"NSString"@"NSString"@?<@"WebBookmark"@?>>32
@"NSArray"24@0:8@"NSString"16
@"WebBookmarkList"28@0:8B16@"NSString"20
@"NSArray"32@0:8@"NSString"16I24B28
@"WebBookmark"20@0:8i16
@"WBBookmarksDatabaseHealthInformation"16@0:8
@"NSDictionary"20@0:8i16
B36@0:8@16B24^@28
B24@0:8^i16
B44@0:8@16@24@32B40
Q24@0:8Q16
B28@0:8@?16B24
B32@0:8@?16B24B28
@24@0:8i16B20
I24@0:8@16
i20@0:8i16
Q24@0:8@16
@24@0:8i16I20
@28@0:8i16I20B24
@40@0:8i16I20B24B28@32
B32@0:8@16B24B28
B28@0:8@16i24
B32@0:8@16I24I28
B32@0:8@16@24
B28@0:8@16I24
B32@0:8@16I24B28
B32@0:8@16i24I28
B32@0:8@16i24B28
^{sqlite3_stmt=}36@0:8@16r*24I32
@32@0:8r*16@24
v44@0:8@16@24@32i40
Q28@0:8@16B24
Q28@0:8q16B24
Q24@0:8q16
I24@0:8i16B20
@32@0:8@16B24i28
@32@0:8@16^@24
B40@0:8@16@24@32
B48@0:8@16@24:32@40
^{sqlite3_stmt=}24@0:8@16
^{sqlite3_stmt=}32@0:8@16q24
i24@0:8^{sqlite3_stmt=}16
i32@0:8@16@?24
i24@0:8r*16
B48@0:8@16i24I28B32B36B40B44
B24@0:8q16
B24@0:8i16B20
B36@0:8@16B24@?28
B32@0:8@16@?24
B40@0:8Q16@24@?32
B72@0:8@16@24i32I36B40@44@52B60B64B68
q32@0:8@16Q24
B24@0:8i16i20
i28@0:8@16B24
@28@0:8I16@20
B36@0:8@16@24B32
v24@0:8^{__CFString=}16
B28@0:8i16@20
v36@0:8i16@20@28
B32@0:8@16q24
v24@0:8i16B20
@24@0:8B16B20
v32@0:8@16B24B28
@36@0:8i16Q20i28i32
@40@0:8i16Q20i28i32B36
v32@0:8i16B20@?24
B28@0:8i16Q20
B24@0:8B16B20
B44@0:8i16Q20B28B32@36
B44@0:8@16@24B32@36
v44@0:8@16@24B32@36
@28@0:8i16B20B24
B40@0:8@16@24B32B36
v28@0:8i16B20B24
B28@0:8q16B24
I36@0:8@16@24i32
@24@0:8I16i20
@32@0:8I16i20q24
B24@0:8@?16
v28@0:8i16@?20
^{sqlite3=}
^{__CFLocale=}
@"WebBookmarkTitleWordTokenizer"
@"SafariFetcherServerProxy"
@"WBDatabaseLockAcquisitor"
{unique_ptr<WebBookmarks::BookmarkSQLWriteTransaction, std::default_delete<WebBookmarks::BookmarkSQLWriteTransaction>>="__ptr_"{__compressed_pair<WebBookmarks::BookmarkSQLWriteTransaction *, std::default_delete<WebBookmarks::BookmarkSQLWriteTransaction>>="__value_"^{BookmarkSQLWriteTransaction}}}
@36@0:8^{sqlite3_stmt=}16B24^@28
B40@0:8i16@20B28^@32
B40@0:8@16i24I28^@32
B36@0:8i16@20^@28
B40@0:8@16B24B28^@32
B40@0:8@16@24^B32
@"NSMutableSet"
@60@0:8@16@24@32@40@48i56
@"WBMutableTabGroup"
@20@0:8I16
@24@0:8I16B20
@32@0:8@16Q24
@"WebBookmarkListQuery"
@"WebBookmarkList"
@36@0:8@16I24@28
@44@0:8@16I24@28@36
v24@0:8I16I20
I20@0:8I16
@"NSArray"24@0:8@"WBTabGroup"16
@"WBTabGroup"24@0:8@"NSString"16
@"WBTab"24@0:8@"NSString"16
@"WBWindow"24@0:8@"NSString"16
@"WBWindowState"24@0:8@"NSString"16
@"WBBrowserState"16@0:8
@"WFUserSettings"
{_NSRange=QQ}16@0:8
@"TIWordTokenizer"
{_NSRange="location"Q"length"Q}
@44@0:8i16@20@28Q36
@44@0:8@16i24@28@36
i32@0:8@16B24B28
i32@0:8i16@20B28
@32@0:8B16i20@24
@28@0:8i16@20
@32@0:8@16I24I28
@"<WebBookmarkInMemoryChangeFilter>"
@"NSSet"
@"WBMutableTabGroup"24@0:8@"NSString"16
@"WBMutableTab"24@0:8@"NSString"16
@32@0:8@16B24B28
B36@0:8@16I24@28
v44@0:8@16I24@28@?36
v48@0:8@16@24@32@?40
v36@0:8@16I24@?28
v36@0:8@16B24@?28
@28@0:8I16#20
B36@0:8@16@24i32
@"WebBookmarkTabCollection"
@40@0:8^{sqlite3_stmt=}16@24q32
@44@0:8^{sqlite3_stmt=}16@24B32q36
v20@0:8I16
@48@0:8@16@24Q32@40
@56@0:8@?16@?24@32Q40@48
v44@0:8@16i24@28@36
@36@0:8q16@24B32
@40@0:8q16@24B32B36
@32@0:8Q16Q24
@28@0:8B16^B20
Q32@0:8@16@24
@32@0:8q16@24
@"WBWebsiteDataRecord"
@28@0:8^{_NSZone=}16B24
@"<WBReusableTab>"
v32@0:8@"NSCache"16@24
@"NSCache"
@"NSTimer"
@32@0:8^v16@24
@"CKServerChangeToken"
v32@0:8Q16@?24
v56@0:8@16@24@32Q40@?48
v48@0:8@16@24Q32@?40
v24@0:8@?<v@?@"WBSCyclerItemListRepresentation">16
v32@0:8Q16@?<v@?B>24
v56@0:8@"NSString"16@"NSURL"24@"NSString"32Q40@?<v@?B>48
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?B>40
v32@0:8@"NSString"16@?<v@?B>24
v40@0:8@"NSString"16@"NSString"24@?<v@?B>32
v40@0:8@"NSURL"16@"NSString"24@?<v@?B>32
v24@0:8@?<v@?q>16
v32@0:8@?16d24
v28@0:8B16@?20
@32@0:8Q16@24
@"_WBTabCyclerTabGroupUpdateObserver"
@"WBSDistributedNotificationObserver"
@"WBTabGroupManager"
@36@0:8@16B24@?28
@32@0:8@16@?24
v32@0:8@"WebBookmarksXPCConnection"16@"NSObject<OS_xpc_object>"24
@"<WebBookmarksClientDelegateProtocol>"
@"NSString"24@0:8@"WBSCRDTPositionGenerator"16
q24@0:8@"WBSCRDTPositionGenerator"16
@"WBSCRDTPosition"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@"NSString"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@40@0:8@16B24B28@?32
v36@0:8@16i24@28
@"WBSCRDTPositionGenerator"
@"<WBTabGroupSyncAgentProtocol>"
@"WBTabGroup"
@32@0:8@16^B24
@40@0:8#16@24^B32
@24@0:8#16
v24@0:8d16
v32@0:8d16d24
@"<WBDatabaseLockAcquisitorDelegate>"
@24@0:8r*16
v32@0:8@?16r*24
@"NSObject<OS_xpc_object>"
@"<WebBookmarksXPCConnectionDelegate>"
@72@0:8@16@24@32B40d44i52B56B60@64
@136@0:8q16B24@28@36@44@52Q60@68B76B80@84@92B100@104B112d116i124B128B132
d16@0:8
@"WBSettingsTask"
@"WebBookmarksSettingsGateway"
!#%%%')+++--/13579;=?ACEGIKMOQSSUWY[]_aceg
webBookmarksMetaDataDidChangeNotification
com.apple.WebBookmarks.MetaDataDidChangeNotification
DeviceUUID
com.apple.WebBookmarkDeviceIdentifier.%p
v8@?0
v12@?0B8
<%@: %p' _UUID = %@
Modify (isMove: YES)
Modify (isMove: NO)
Delete
Title
IsSelectedFavoritesFolder
DateAdded
DateLastViewed
ImageURL
PreviewText
LastSelectedTab
BackgroundImage
IsPinned
Folder
Leaf
, Changed Attributes: %@
<BAChangeRecord: %p, Type: %@, Bookmark Type: %@, Bookmark ID: %d, Bookmark Sync Server ID: %@%@>
data
UndefinedDeviceClass
DeviceClassNumber
iPhone
iPad
v32@?0@"NSString"8Q16^B24
Type
605.2.2
606.1.16
-[WebBookmarkCloudKitSyncCollection dealloc]
-[WebBookmarkProductionSafariCloudKitSyncTabCollection dealloc]
<%s %p; localID: %d; serverID: %@; item: %p>
BAFolder
BABookmark
<%@: %p, type: %@, store owner: %@>
-[WBBookmarkDBAccess copyDeviceIdentifier]
-[WBBookmarkDBAccess resetDeviceIdentifier]
WebBookmarkDatabaseCreate
com.apple.dataaccess
BADatabaseOpen
BADatabaseSave
BADatabaseClose
BADatabaseCopySyncData
(null)
BADatabaseSetSyncData
BADatabaseClearAllSyncData
BADatabaseCopyChanges
BADatabaseClearChangesForToken
BADatabaseRemoveItemWithServerId
BADatabaseBeginMergingChanges
BADatabaseFinishMergingChanges
BAItemCopyServerId
BAItemSetServerId
BAItemCopyParentServerId
BAItemCopySyncKey
BAItemSetSyncKey
BAItemCopySyncData
BAItemSetSyncData
BAChangeGetChangeType
BAChangeCopyChangedItem
BAChangeCopyServerId
BAChangeIsMove
CKBAChangeGetItemType
CKBAChangeGetFolder
CKBAChangeGetBookmarkType
CKBABookmarkTypeForBookmark
CKBADatabasePerformMaintenanceAfterVersion
CKBADatabaseGetLocalCloudKitMigrationState
CKBADatabaseSetLocalCloudKitMigrationState
CKBADatabaseCopyAccountHash
CKBADatabaseSetAccountHash
CKBADatabaseCopyChangeToken
CKBADatabaseCopyItemWithLocalID
CKBADatabaseCopyLocalIDsInFolderWithLocalID
CKBADatabaseCopyItemWithServerId
CKBADatabaseAddItemUnderFolderWithServerId
saveBookmarkUnderFolderWithServerId
CKBADatabasePerformDeduplication
CKBADatabaseCopyServerIdsInFolderWithServerId
CKBADatabaseSetChildrenOrderForFolderWithServerId
@"NSString"16@?0@"NSString"8
CKBADatabaseCopyServerIdInFolderBeforeServerId
CKBADatabaseCopyServerIdInFolderAfterServerId
CKBADatabaseCopyFirstServerIdInFolderWithServerId
CKBADatabaseCopyLastServerIdInFolderWithServerId
CKBAItemGetItemType
CKBAItemGetIsInFolderWithServerSyncId
CKBAItemIsEqualToItem
CKBAFolderGetFolderType
CKBADatabaseCreateFolder
CKBABookmarkGetBookmarkType
CKBADatabaseCreateBookmark
CKBAChangeGetWasBookmarkMoved
CKBAChangeCopyDeletedBookmarkSyncData
CKBAChangeSetDeletedBookmarkSyncData
CKBAChangeCopyModifiedAttributes
CKBAItemCopyAttributes
CKBAItemSetModifiedAttributes
CKBAItemCopyValueForKey
CKBADatabaseClearAllLocalBookmarksForAutomatedTesting
com.apple.WebBookmarks.WBTabGroupSyncAgentProxy.%@.%p._syncObserverQueue
v20@?0B8@"NSError"12
v28@?0B8@"NSArray"12@"NSError"20
v16@?0@"NSError"8
v16@?0@"<WBTabGroupSyncAgentSyncObserver>"8
EncodedCKRecordSystemFields
Generations
ModifiedAttributeMask
ExtraPositionData
Position
MinimumAPIVersion
Deleted
ParentRecordID
AuxiliaryRecords
IsDeletedRecordZone
ShareRecord
default
ParentAndPosition
IsTabGroup
HasUserDefinedPreviewText
v16@?0@"NSString"8
CloudBookmarkPosition
CloudBookmarkPositionSortValue
CloudBookmarkSyncData
CloudBookmarkGeneration
@"<NSSecureCoding>"32@?0@"NSString"8@"CKRecord"16^B24
@"CKRecordID"16@?0@"CKRecord"8
Address
Pinned
<%@: %p; title: %@, address: %@, pinned: %@>
<%@: %p; title hash: %zu, address hash: %zu, pinned: %@>
com.apple.WebBookmarks.TabGroupSyncAgent.ErrorDomain
Failed to open database
The feature is disabled
Failed to acquire the lock on the database
Error: domain=%@, code=%ld
B16@?0@"WebBookmark"8
Local
Private
@"WBMutableTab"16@?0@"NSOrderedCollectionChange"8
v16@?0@"NSMutableArray"8
@"NSOrderedCollectionChange"16@?0@"NSOrderedCollectionChange"8
@"WBMutableTab"16@?0@"WBTab"8
@"NSString"16@?0@"WBMutableTab"8
BookmarkID
ParentID
AssociatedBookmarkID
SpecialFolderID
AssociatedBookmark
ModifiedAttributes
Bookmarks
@"WebBookmark"16@?0@"NSDictionary"8
dictionaryRepresentationForInMemoryChangeTracking
Modify
Move
Reorder
Replace
<%@: %p; type = %@; bookmark = %d %@; parent = %d; associated bookmark = %d;>
pinned
privatePinned
recentlyClosed
TopScopedBookmarkList
TopScopedBookmarkList_
16.0
614.1.25.0.9
614.1.25.0.1
DatabaseContainsShareRecord
614.2
com.apple.WebBookmarks.SafariTabs.lock
TabChanges.plist
CREATE TABLE IF NOT EXISTS windows (id INTEGER PRIMARY KEY,active_tab_group_id INTEGER DEFAULT NULL,date_closed REAL DEFAULT NULL,extra_attributes BLOB DEFAULT NULL,is_last_session INTEGER DEFAULT 0,local_tab_group_id INTEGER DEFAULT NULL,private_tab_group_id INTEGER DEFAULT NULL,scene_id TEXT DEFAULT NULL,uuid TEXT NOT NULL UNIQUE,FOREIGN KEY (active_tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE SET NULL,FOREIGN KEY (local_tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (private_tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE)
CREATE INDEX IF NOT EXISTS uuid_index ON windows (uuid)
CREATE TABLE IF NOT EXISTS windows_tab_groups (id INTEGER PRIMARY KEY,active_tab_id INTEGER DEFAULT NULL,tab_group_id INTEGER NOT NULL,window_id INTEGER NOT NULL,FOREIGN KEY (active_tab_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (tab_group_id) REFERENCES bookmarks (id) ON UPDATE CASCADE ON DELETE CASCADE,FOREIGN KEY (window_id) REFERENCES windows (id) ON UPDATE CASCADE ON DELETE CASCADE,UNIQUE (tab_group_id, window_id))
CREATE INDEX IF NOT EXISTS window_index ON windows_tab_groups (window_id)
WHERE local_tab_group_id = 0 OR local_tab_group_id IS NULL OR private_tab_group_id = 0 OR private_tab_group_id IS NULL
WHERE local_tab_group_id IN (SELECT windows.local_tab_group_id FROM windows LEFT JOIN bookmarks ON windows.local_tab_group_id = bookmarks.id WHERE bookmarks.id IS NULL)
WHERE private_tab_group_id IN (SELECT windows.private_tab_group_id FROM windows LEFT JOIN bookmarks ON windows.private_tab_group_id = bookmarks.id WHERE bookmarks.id IS NULL)
B8@?0
@"NSArray"16@?0@"WBMutableTabGroup"8
UPDATE windows SET is_last_session = 1 WHERE uuid = %@
BEGIN
PRAGMA user_version = 44
PRAGMA user_version = 45
SELECT id, uuid FROM windows %@
Failed to fetch windows
DELETE FROM windows %@
Failed to delete windows
syncable = 0 AND parent IN (SELECT id FROM bookmarks WHERE parent = 0 AND syncable = 1 AND type = 1 AND subtype = 0 AND hidden = 0 AND special_id = 0)
parent = 0 AND syncable = 1 AND type = 1 AND subtype = 0 AND hidden = 0 AND special_id = 0
order_index ASC
q24@?0@"WebBookmark"8@"WebBookmark"16
serverID
v24@?0@"WebBookmark"8^B16
@"CKRecordID"16@?0@"WebBookmark"8
@"WBBookmarkDatabaseSyncData"16@?0@"WBBookmarkDatabaseSyncData"8
@"WBTab"16@?0@"WebBookmark"8
B16@?0@"WBMutableTab"8
'%@'
@"WBWindow"16@?0@"WebBookmark"8
WHERE uuid = %@
SELECT windows.id FROM windows WHERE windows.uuid = ?
Failed to fetch window id
SELECT tab_bookmarks.external_uuid, tab_group_bookmarks.external_uuid FROM bookmarks AS tab_bookmarks INNER JOIN windows_tab_groups ON tab_bookmarks.id = windows_tab_groups.active_tab_id INNER JOIN bookmarks AS tab_group_bookmarks ON windows_tab_groups.tab_group_id = tab_group_bookmarks.id WHERE windows_tab_groups.window_id = ?
Failed to fetch active tabs
SELECT bookmarks.external_uuid, windows.local_tab_group_id, windows.private_tab_group_id, windows.scene_id, windows.uuid, windows.id, windows.extra_attributes FROM windows INNER JOIN bookmarks ON windows.active_tab_group_id = bookmarks.id %@
Failed to fetch window states
WHERE windows.date_closed = (SELECT MAX(date_closed) from windows)
WHERE windows.is_last_session = 1
WHERE windows.date_closed > 0
WHERE windows.date_closed IS NULL
bookmark
B16@?0@"WBTabGroup"8
INSERT INTO windows (active_tab_group_id, date_closed, extra_attributes, is_last_session, local_tab_group_id, private_tab_group_id, scene_id, uuid) VALUES (?, ?, ?, 1, ?, ?, ?, ?) ON CONFLICT (uuid) DO UPDATE SET active_tab_group_id = excluded.active_tab_group_id, date_closed = excluded.date_closed, extra_attributes = excluded.extra_attributes, local_tab_group_id = excluded.local_tab_group_id, private_tab_group_id = excluded.private_tab_group_id, is_last_session = 1
Failed to add a window
INSERT INTO windows_tab_groups (active_tab_id, tab_group_id, window_id) VALUES (?, ?, ?) ON CONFLICT (tab_group_id, window_id) DO UPDATE SET active_tab_id = excluded.active_tab_id
Failed to add an active tab
v32@?0@"NSString"8@"NSString"16^B24
WHERE is_last_session = 0
DELETE FROM bookmarks WHERE syncable = 0 AND (parent != 0 OR external_uuid NOT IN (%@))
Failed to delete all tabs
@"NSNumber"16@?0@"WBTab"8
UPDATE bookmarks SET date_closed = %f WHERE id in (%@)
Failed to update tab close date
@"NSString"16@?0@"WBWindowState"8
UPDATE windows SET is_last_session = CASE WHEN uuid in (%@) THEN 1 ELSE 0 END
Failed to update last session
Windows
SELECT sync_data FROM bookmarks WHERE parent = ? AND server_id IS NOT NULL
Shared Tab Groups are not supported
https://www.icloud.com/%@/unsupported-safari-version
%@TabGroupTab_%@
server_id LIKE '%@%%'
PinnedTabs
PrivatePinnedTabs
WindowStatesKey
<%@: %p; pinnedTabs = %zu; privatePinnedTabs = %zu; windows = %zu>
ROLLBACK
COMMIT
BEGIN DEFERRED
SELECT NULL FROM bookmarks
apple-internal-install
BEGIN IMMEDIATE
com.apple.MobileSafari.StopSyncing
Changes
FileURL
com.apple.WebBookmarks.WebBookmarkChangeSet.%p
B16@?0@"WebBookmarkChange"8
v20@?0@"NSMutableDictionary"8i16
v16@?0@"NSMutableDictionary"8
@"NSDictionary"16@?0@"WebBookmarkChange"8
WBErrorDomain
Misuse of WBReadingList interface. Use class method defaultReadingList.
com.apple.WebBookmarks.AddToReadingListQueue
com.apple.bookmarks.SelectedFavoritesFolder
PinnedTitle
PinnedAddress
ReadStatusGeneration
DeviceIdentifier
BackgroundImageModifiedState
%@ %d (%d)
 '%@' [%@] [%@]
B16@?0@"NSMutableDictionary"8
v40@?0@"WBSCRDTField"8@"WBSCRDTField"16Q24^B32
tabGroupUUID
privateBrowsing
local
shared
Start page title for new tab
<%@: %p; tabGroupUUID = %@; title = %@; url = %@; uuid = %@>
<%@: %p; uuid = %@>
DidDownloadIconsNotification
BookmarkIdentifier
com.apple.WebBookmarks.SQLiteError
com.apple.WebBookmarks.DidVacuumDatabaseNotification
WebBookmarksFolderContentsDidChangeNotification
WebBookmarksTabFolderContentsDidChangeNotification
WebBookmarksDidReloadNotification
WebBookmarksSpecialFoldersDidChangeNotification
WebBookmarksChangedFolderID
com.apple.bookmarks.OmitFromUI
_DatabaseResetReason
com.apple.bookmarks.IsBuiltinBookmark
com.apple.bookmarks.IsBuiltinDeviceBookmark
com.apple.bookmarks.IsCarrierBookmark
LocalURL
LocalTitle
nonGlobalStartPageBackgroundImageDidChangeRemotelyNotification
backgroundImageIdentifier
com.apple.webbookmarksd.readingListfetching
com.apple.WebBookmarks.webbookmarksd
WebBookmarksDataclassDidChangeNotification
WebBookmarksResetCloudHistoryAccount
ComputerAnchorKey
BASyncData
LastSyncedRecordGeneration
_FavoritesFolderID
BookmarksBar
BookmarksMenu
com.apple.ReadingList
com.apple.WebFilterWhiteList
com.apple.FrequentlyVisitedSites
_ck_local_migration_state_
AccountHash
WebBookmarksDetectedLocalMigrationStateTransitionNotification
fromMigrationState
toMigrationState
DAVHomeURL
BookmarkImages
com.apple.WebBookmarks.WebBookmarkCollection
DebugForceMigrationFromSafariVersionKey
Bookmarks.db
SafariTabs.db
DebugSafariTabs.db
corrupted
%@.corrupted
-journal
-wal
-shm
PRAGMA journal_mode = wal
:memory:
SELECT * FROM bookmarks LIMIT 1
Database failed full integrity check.
PRAGMA foreign_keys = ON
PRAGMA auto_vacuum = INCREMENTAL
SELECT name from sqlite_master where type = 'table'
bookmarks
generations
sync_properties
bookmark_title_words
folder_ancestors
PRAGMA integrity_check(1)
Bookmarks.plist
Bookmarks.plist.anchor.plist
bookmarkChanges.plist
Library/Caches
com.apple.mobilesafari
ReadingListArchives
UPDATE bookmarks SET archive_status = ? WHERE archive_status = ? OR archive_status = ?
PendingBookmarkChanges.plist
UPDATE bookmarks SET archive_status = ? WHERE parent = ? AND id IN (%@)
parent = %d AND deleted = 0 AND (archive_status = %zd OR archive_status = %zd)
UPDATE bookmarks SET archive_status = %zd WHERE %@
web_filter_status = %zd
UPDATE bookmarks SET web_filter_status = ? WHERE parent = ? AND deleted = 0 AND web_filter_status != ?
PRAGMA freelist_count
PRAGMA page_count
PRAGMA incremental_vacuum(256)
VACUUM
PRAGMA wal_checkpoint(TRUNCATE)
parent = %d AND deleted = 0 AND read = 1 AND (archive_status = %zd OR archive_status = %zd)
Trying to edit bookmarks without first obtaining the bookmarks database file lock.
Safari
id = %d AND deleted = 0
external_uuid = ? AND deleted = 0
SELECT external_uuid FROM bookmarks WHERE deleted = 0 AND external_uuid IN (
SELECT id FROM bookmarks WHERE parent = ? AND type = 1 AND title = ? AND deleted = 0
parent = ? AND title = ? AND deleted = 0 ORDER BY order_index
parent = %d AND type = 1 AND deleted = 0 AND hidden = 0 AND hidden_ancestor_count = 0 ORDER BY order_index
SELECT COUNT(*) FROM bookmarks WHERE parent = ? AND type = 0 AND hidden = 0
SELECT parent, count(*) FROM bookmarks WHERE (parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) AND hidden = 0 AND type = 0) GROUP BY parent
SELECT order_index FROM bookmarks WHERE id = %d
SELECT parent FROM bookmarks WHERE id = %d
SELECT modified_attributes FROM bookmarks WHERE id = %d
SELECT id FROM bookmarks WHERE external_uuid = '%@'
SELECT external_uuid FROM bookmarks WHERE parent = %d ORDER BY order_index ASC
SELECT id FROM bookmarks WHERE special_id = %d
SELECT id FROM bookmarks WHERE special_id = %d AND deleted = 0
web_filter_status != %zd
read = 0 AND 
parent = %d AND deleted = 0
 AND %@
order_index DESC
SELECT COUNT(*) FROM bookmarks WHERE special_id == 0 AND id != 0 AND deleted = 0;
http
https
fetched_icon = 0 AND (url LIKE 'http:%%' OR url LIKE 'https:%%') AND parent IN (%@)
UPDATE bookmarks SET fetched_icon = 0 WHERE parent IN (%@)
UPDATE bookmarks SET icon = NULL, fetched_icon = 0 WHERE parent IN (%@)
Trying to save bookmarks without first obtaining the bookmarks database file lock.
Trying to save a bookmark without first obtaining the bookmarks database file lock.
UPDATE bookmarks SET order_index = order_index + 1 WHERE order_index < ? AND order_index >= ? AND parent = ?
UPDATE bookmarks SET order_index = order_index - 1 WHERE order_index > ? AND order_index <= ? AND parent = ?
UPDATE bookmarks SET order_index = ?1, dav_generation = ?2%@ WHERE id = ?3
, modified_attributes = modified_attributes | ?4
B16@?0@"NSString"8
@"NSNumber"16@?0@"WebBookmark"8
v32@?0@"WebBookmark"8Q16^B24
SELECT id, parent, num_children, (SELECT COUNT(*) FROM bookmarks AS child_bookmark WHERE child_bookmark.parent = parent_bookmark.id AND hidden = 0) AS real_num_children FROM bookmarks AS parent_bookmark WHERE num_children != real_num_children
UPDATE bookmarks SET num_children = ? WHERE id = ?
DISTINCT url
SELECT %s FROM bookmarks WHERE type = 0 AND url >= ? AND url < ? AND deleted = 0 LIMIT ?
SELECT %s FROM bookmarks WHERE type = 0 AND deleted = 0 LIMIT ?
SELECT id, title, url FROM bookmarks WHERE type = 0 AND deleted = 0
AND parent = %d
AND hidden = 0 AND hidden_ancestor_count = 0
SELECT %@ FROM bookmarks INNER JOIN bookmark_title_words ON bookmarks.id = bookmark_title_words.bookmark_id WHERE bookmark_title_words.word LIKE ? AND type = 0 AND deleted = 0 AND web_filter_status != %zd AND title IS NOT NULL AND url IS NOT NULL AND url != "" %@
PRAGMA case_sensitive_like = true
@"WebBookmark"8@?0
v32@?0@"NSString"8@"NSString"16^{BookmarkSQLStatement=^^?^{sqlite3_stmt}BBi}24
SELECT %@ FROM bookmarks WHERE url LIKE ? AND type = 0 AND deleted = 0 AND web_filter_status != %zd AND title IS NOT NULL AND url IS NOT NULL %@
PRAGMA case_sensitive_like = false
 AND (archive_status = %zd OR archive_status = %zd)
deleted = 0 AND parent = ? AND web_filter_status != ? AND title IS NOT NULL AND url IS NOT NULL%@ ORDER BY order_index DESC LIMIT ?
SELECT %@ FROM bookmarks INNER JOIN bookmark_title_words ON bookmarks.id = bookmark_title_words.bookmark_id WHERE bookmark_title_words.word LIKE ? AND %@
SELECT %@ FROM bookmarks WHERE url LIKE ? AND %@
SELECT COUNT(*) FROM bookmarks WHERE order_index < ? AND parent = ? AND (read = 0 AND deleted = 0 AND id NOT IN (%@))
SELECT id FROM bookmarks WHERE parent = %d AND deleted = 0 AND web_filter_status = %zd ORDER BY order_index DESC LIMIT %d
id IN (%@) AND 
archive_status IN (%zd,%zd,%zd)
archive_status IN (%zd,%zd)
(%@)
(%@) AND (locally_added = 1 OR read = 0)
(%@) AND locally_added = 1
 ORDER BY archive_status ASC, read ASC, locally_added DESC, order_index DESC
 LIMIT 1
read ASC, order_index DESC
syncable = 0 AND parent = 0
com.apple.Bookmarks.lock
SELECT MAX(order_index) + 1 FROM bookmarks WHERE special_id != 0
SELECT COUNT(*), MAX(order_index) FROM bookmarks WHERE parent = ? AND deleted = 0 AND syncable = 1
special_id = ? AND deleted = 0
%@%%
url LIKE ? AND deleted = 0 AND parent = ? LIMIT 1
url = ? AND deleted = 0 AND parent = ? ORDER BY last_modified ASC LIMIT 1
type = 1 AND title = ? AND parent = ? AND deleted = 0 %@
AND server_id IS NULL
type = 0 AND url = ?1 AND parent = ?2 AND deleted = 0 AND server_id IS NULL
type = 0 AND title = ?3 AND url = ?1 AND parent = ?2 AND deleted = 0
PRAGMA user_version
PRAGMA user_version = %d
CREATE TABLE generations (generation INTEGER NOT NULL)
INSERT INTO generations (generation) VALUES (1)
CREATE TABLE sync_properties (key TEXT NOT NULL, value TEXT NOT NULL)
CREATE INDEX sync_properties_key_index ON sync_properties (key)
INSERT INTO sync_properties (key, value) VALUES ('_dav_generation', 1)
INSERT INTO bookmarks (id, special_id, parent, type, order_index, num_children, editable, deletable, title, external_uuid) VALUES (1, 1, 0, 1, 0, 0, 0, 0, 'BookmarksBar', '%@')
UPDATE bookmarks SET num_children = 1 WHERE id = 0
DROP TABLE IF EXISTS participant_presence
CREATE TABLE participant_presence (id INTEGER PRIMARY KEY, participant_id TEXT, tab_group_server_id TEXT, tab_server_id TEXT, UNIQUE(participant_id))
SELECT tab_group_server_id, tab_server_id FROM participant_presence WHERE participant_id = ?
SELECT tab_server_id FROM participant_presence WHERE participant_id = ? AND tab_group_server_id = ?
DELETE FROM participant_presence WHERE participant_id = ?
INSERT INTO participant_presence (participant_id, tab_group_server_id, tab_server_id) VALUES (?, ?, ?)
DELETE FROM participant_presence WHERE participant_id = ? AND tab_group_server_id = ?
DELETE FROM participant_presence WHERE tab_group_server_id NOT IN (SELECT server_id FROM bookmarks WHERE type = 1 AND subtype = 0) OR tab_server_id NOT IN (SELECT server_id FROM bookmarks WHERE type = 0 AND subtype = 0)
SELECT bookmarks.external_uuid FROM bookmarks INNER JOIN participant_presence ON bookmarks.server_id = participant_presence.tab_server_id WHERE participant_id = ? AND tab_group_server_id = ?
SELECT participant_id FROM participant_presence WHERE tab_group_server_id = ?
SELECT participant_id FROM participant_presence WHERE tab_server_id = ?
DROP TABLE IF EXISTS bookmark_title_words
CREATE TABLE bookmark_title_words (id INTEGER PRIMARY KEY AUTOINCREMENT, bookmark_id INTEGER NOT NULL CONSTRAINT fk_bookmark_id REFERENCES bookmarks(id) ON DELETE CASCADE, word TEXT, word_index INTEGER)
CREATE TRIGGER fkd_bookmark_title_words_bookmark_id BEFORE DELETE ON bookmarks      FOR EACH ROW BEGIN DELETE FROM bookmark_title_words WHERE bookmark_id = OLD.id;      END;
CREATE INDEX title_word_index ON bookmark_title_words(word)
CREATE INDEX title_bookmark_id_index ON bookmark_title_words(bookmark_id)
DROP TABLE IF EXISTS bookmarks
CREATE TABLE bookmarks (id INTEGER PRIMARY KEY AUTOINCREMENT,special_id INTEGER DEFAULT 0,parent INTEGER, type INTEGER,title TEXT,url TEXT COLLATE NOCASE,num_children INTEGER DEFAULT 0,editable INTEGER DEFAULT 1,deletable INTEGER DEFAULT 1,hidden INTEGER DEFAULT 0,hidden_ancestor_count INTEGER DEFAULT 0,order_index INTEGER NOT NULL,external_uuid TEXT UNIQUE,read INTEGER DEFAULT NULL,last_modified REAL DEFAULT NULL,server_id TEXT, sync_key TEXT,sync_data BLOB,added INTEGER DEFAULT 1,deleted INTEGER DEFAULT 0,extra_attributes BLOB DEFAULT NULL,local_attributes BLOB DEFAULT NULL,fetched_icon BOOL DEFAULT 0, icon BLOB DEFAULT NULL,dav_generation INTEGER DEFAULT 0,locally_added BOOL DEFAULT 0,archive_status INTEGER DEFAULT 0,syncable BOOL DEFAULT 1,web_filter_status INTEGER DEFAULT 0, modified_attributes UNSIGNED BIG INT DEFAULT 0, date_closed REAL DEFAULT NULL, last_selected_child INTEGER DEFAULT NULL, subtype INTEGER DEFAULT 0, FOREIGN KEY (last_selected_child) REFERENCES bookmarks (id) ON DELETE SET NULL)
CREATE INDEX special_id_index ON bookmarks (special_id)
CREATE INDEX autocomplete_index ON bookmarks (url)
CREATE INDEX folder_list_index ON bookmarks (parent, type, order_index)
CREATE INDEX group_index ON bookmarks (parent, order_index)
CREATE INDEX sync_index ON bookmarks (external_uuid)
CREATE INDEX server_id_index ON bookmarks(server_id)
CREATE INDEX dav_generation_index ON bookmarks(dav_generation)
CREATE INDEX reading_list_index ON bookmarks (parent, deleted, web_filter_status, order_index DESC)
INSERT INTO bookmarks (id, type, order_index, num_children, title, external_uuid) VALUES (0, 1, 0, 0, 'Root', 'Root')
ALTER TABLE bookmarks ADD COLUMN special_id INTEGER DEFAULT 0
UPDATE bookmarks SET title = 'Root', external_uuid = 'Root' WHERE id = 0
UPDATE bookmarks SET special_id = 1 WHERE id = 1
UPDATE bookmarks SET special_id = 2 WHERE id = 2
PRAGMA user_version = 1
CREATE TABLE bookmark_title_words (id INTEGER PRIMARY KEY, bookmark_id INTEGER NOT NULL CONSTRAINT fk_bookmark_id REFERENCES bookmarks(id) ON DELETE CASCADE, word TEXT, word_index INTEGER)
CREATE TRIGGER fkd_bookmark_title_words_bookmark_id BEFORE DELETE ON bookmarks         FOR EACH ROW BEGIN DELETE FROM bookmark_title_words WHERE bookmark_id = OLD.id;         END;
PRAGMA user_version = 3
ALTER TABLE bookmarks ADD COLUMN server_id TEXT
ALTER TABLE bookmarks ADD COLUMN sync_key TEXT
ALTER TABLE bookmarks ADD COLUMN sync_data BLOB
PRAGMA user_version = 4
SELECT count(*) FROM sync_properties WHERE key = '_dav_generation'
ALTER TABLE bookmarks ADD COLUMN deleted INTEGER DEFAULT 0
ALTER TABLE bookmarks ADD COLUMN dav_generation INTEGER DEFAULT 0
PRAGMA user_version = 5
PRAGMA user_version = 6
CREATE TABLE folder_ancestors (id INTEGER PRIMARY KEY, folder_id INTEGER NOT NULL CONSTRAINT fk_ancestors_folder_id REFERENCES bookmarks(id) ON DELETE CASCADE, ancestor_id INTEGER NOT NULL)
CREATE TRIGGER fkd_ancestors_folder_id BEFORE DELETE ON bookmarks FOR EACH ROW BEGIN DELETE FROM folder_ancestors WHERE folder_id = OLD.id; END;
CREATE INDEX ancestor_folder_id_index on folder_ancestors(folder_id)
CREATE INDEX ancestor_ancestor_id_index on folder_ancestors(ancestor_id)
PRAGMA user_version = 7
ALTER TABLE bookmarks ADD COLUMN extra_attributes BLOB DEFAULT NULL
PRAGMA user_version = 8
DROP INDEX IF EXISTS deleted_index
DROP INDEX IF EXISTS autocomplete_index
CREATE INDEX autocomplete_index ON bookmarks(url)
PRAGMA user_version = 9
ALTER TABLE bookmarks ADD COLUMN hidden INTEGER DEFAULT 0
PRAGMA user_version = 10
ALTER TABLE bookmarks ADD COLUMN hidden_ancestor_count INTEGER DEFAULT 0
PRAGMA user_version = 11
ALTER TABLE bookmarks ADD COLUMN read INTEGER DEFAULT NULL
ALTER TABLE bookmarks ADD COLUMN last_modified REAL DEFAULT NULL
PRAGMA user_version = 14
SELECT id FROM bookmarks WHERE special_id = 3
UPDATE bookmarks SET read = 0 WHERE read IS NULL and parent = ?
PRAGMA user_version = 15
CREATE INDEX title_word_bookmark_id_index ON bookmark_title_words(bookmark_id)
PRAGMA user_version = 16
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS count_bookmarks WHERE count_bookmarks.parent = bookmarks.id AND hidden = 0) WHERE type = 1
PRAGMA user_version = 19
SELECT count(*) FROM bookmarks WHERE parent = ? AND deleted = 0
UPDATE bookmarks SET order_index = ? - order_index - 1 WHERE parent = ?
PRAGMA user_version = 21
ALTER TABLE bookmarks ADD COLUMN icon BLOB DEFAULT NULL
ALTER TABLE bookmarks ADD COLUMN fetched_icon BOOL DEFAULT 0
SELECT id, extra_attributes FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET icon = ?, fetched_icon = ?, extra_attributes = ?, dav_generation = ? WHERE id = ?
PRAGMA user_version = 22
DELETE FROM sync_properties WHERE key = '_dav_generation'
INSERT INTO sync_properties (key, value) VALUES ('_dav_generation', ?)
PRAGMA user_version = 23
ALTER TABLE bookmarks ADD COLUMN added INTEGER DEFAULT 1
UPDATE bookmarks SET added = 0 WHERE server_id IS NOT NULL
PRAGMA user_version = 24
ALTER TABLE bookmarks ADD COLUMN archived_offline BOOL DEFAULT 0
ALTER TABLE bookmarks ADD COLUMN last_archived REAL DEFAULT NULL
PRAGMA user_version = 25
PRAGMA user_version = 26
PRAGMA user_version = 27
PRAGMA user_version = 28
ALTER TABLE bookmarks ADD COLUMN locally_added BOOL DEFAULT 0
PRAGMA user_version = 29
ALTER TABLE bookmarks ADD COLUMN local_attributes BLOB DEFAULT NULL
SELECT id, extra_attributes, last_archived FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET extra_attributes = ?, local_attributes = ?, dav_generation = ? WHERE id = ?
ALTER TABLE bookmarks DROP COLUMN last_archived
PRAGMA user_version = 30
ALTER TABLE bookmarks ADD COLUMN archive_status INTEGER DEFAULT 0
UPDATE bookmarks SET archive_status = archived_offline
UPDATE bookmarks SET archived_offline = NULL
UPDATE bookmarks SET last_archived = NULL
PRAGMA user_version = 31
PRAGMA user_version = 32
UPDATE bookmarks SET fetched_icon = 0, icon = NULL WHERE parent = (SELECT id FROM bookmarks WHERE special_id = 3)
PRAGMA user_version = 33
ALTER TABLE bookmarks ADD COLUMN syncable BOOL DEFAULT 1
PRAGMA user_version = 34
UPDATE bookmarks SET archive_status = 0 WHERE archive_status IS NULL
PRAGMA user_version = 35
ALTER TABLE bookmarks ADD COLUMN web_filter_status INTEGER DEFAULT 0
PRAGMA user_version = 36
PRAGMA user_version = 37
PRAGMA user_version = 38
ALTER TABLE bookmarks ADD COLUMN modified_attributes UNSIGNED BIG INT DEFAULT 0
PRAGMA user_version = 39
DELETE FROM bookmark_title_words WHERE bookmark_id NOT IN (SELECT id FROM bookmarks)
DELETE FROM folder_ancestors WHERE folder_id NOT IN (SELECT id FROM bookmarks)
ALTER TABLE bookmarks ADD COLUMN date_closed REAL DEFAULT NULL
PRAGMA user_version = 41
ALTER TABLE bookmarks ADD COLUMN last_selected_child INTEGER DEFAULT NULL
ALTER TABLE bookmarks ADD FOREIGN KEY (last_selected_child) REFERENCES bookmarks (id) ON DELETE SET NULL
PRAGMA user_version = 42
PRAGMA user_version = 43
ALTER TABLE bookmarks ADD COLUMN subtype INTEGER DEFAULT 0
PRAGMA user_version = 46
PRAGMA user_version = 47
DROP TABLE IF EXISTS participants
PRAGMA user_version = 48
deleted = 1
@"WBBookmarkSyncData"16@?0@"WBBookmarkSyncData"8
PRAGMA user_version = 49
PRAGMA user_version = 50
id NOT IN (SELECT MIN(id) FROM bookmarks GROUP BY external_uuid)
UPDATE bookmarks SET external_uuid = '%@' WHERE id = %d
CREATE UNIQUE INDEX IF NOT EXISTS unique_uuid ON bookmarks(external_uuid)
PRAGMA user_version = 51
SELECT id, local_attributes, icon FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET local_attributes = ?, icon = ? WHERE id = ?
SELECT %@, %s FROM bookmarks
SELECT COUNT(*) FROM bookmarks WHERE special_id = 1
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = 0
INSERT INTO bookmarks (special_id, parent, type, order_index, editable, deletable, title, external_uuid) VALUES (1, 0, 1, 0, 0, 0, 'BookmarksBar', '')
UPDATE bookmarks SET num_children = num_children + 1 WHERE id = 0
newestLaunchedSafariVersion
newestLaunchedOSVersion
DELETE FROM bookmarks WHERE special_id = %d
AND hidden = 0 AND id != %d AND (num_children > 0 OR special_id != %d)
SELECT count(*) FROM bookmarks WHERE %@
SELECT id FROM bookmarks WHERE %@
SELECT %@ FROM bookmarks WHERE %@
SELECT COUNT(*) from folder_ancestors WHERE folder_id = ? AND ancestor_id = ?
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = ? AND order_index >= ?
UPDATE bookmarks SET parent = ?1, order_index = ?2,%@%@ icon = NULL, fetched_icon = 0 WHERE id = ?3
 modified_attributes = modified_attributes | ?4,
 dav_generation = ?5,
UPDATE bookmarks SET order_index = (order_index - 1) WHERE parent = ? AND order_index > ?
SELECT id FROM bookmarks WHERE server_id = ? AND deleted = 1
INSERT INTO bookmarks (order_index, deleted, added, parent, server_id, dav_generation%@) VALUES (0, 1, 0, -1, ?, ?%@)
, sync_data
DELETE FROM bookmarks WHERE deleted = 1
DELETE FROM bookmarks WHERE deleted = 1 AND dav_generation <= %zu
DELETE FROM bookmarks WHERE deleted = 1 AND id = %d
UPDATE bookmarks SET added = 1, server_id = NULL, sync_key = NULL, sync_data = NULL WHERE parent IN (select folder_id from folder_ancestors where ancestor_id = ?) OR parent = ? OR id = ?
UPDATE bookmarks SET server_id = NULL, sync_key = NULL, sync_data = NULL
UPDATE generations SET generation = 0
UPDATE bookmarks SET dav_generation = ? WHERE id = ?
UPDATE bookmarks SET added = 1
UPDATE bookmarks SET order_index = (order_index - 1) WHERE parent = %d AND order_index > %d
DELETE FROM bookmarks WHERE parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) OR parent = ?%@
 OR id = ?
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = %d AND order_index >= %d
SELECT (hidden + hidden_ancestor_count) FROM bookmarks WHERE id = ?
INSERT INTO bookmarks (title, url, parent, type, external_uuid, order_index, extra_attributes, fetched_icon, icon, locally_added, archive_status, web_filter_status, hidden_ancestor_count, editable, local_attributes, syncable, dav_generation, last_selected_child, subtype) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SELECT count(*) FROM Bookmarks WHERE special_id = %u
Recovered
UPDATE bookmarks SET title = ?1, url = ?2, extra_attributes = ?3, local_attributes = ?11, fetched_icon = ?4, icon = ?5, locally_added = ?10, archive_status = ?8, web_filter_status = ?12, last_selected_child = ?14%@%@ WHERE id = ?6
, dav_generation = ?7
, modified_attributes = ?13
UPDATE bookmarks SET hidden = ? WHERE id = ?
UPDATE bookmarks SET last_modified = ?, read = ? WHERE id = ?
UPDATE bookmarks SET special_id = %u, editable = 0, deletable = 0 WHERE id = %u
UPDATE bookmarks SET num_children = num_children - 1 WHERE id = %d
UPDATE bookmarks SET num_children = num_children + 1 WHERE id = %d
SELECT server_id FROM bookmarks WHERE id = ?
deleted = 0 AND
SELECT id FROM bookmarks WHERE %@ %@ ORDER BY server_id ASC
rtrim(server_id, '/') LIKE ?
server_id = ?
%%%@
%@ %@ ORDER BY server_id ASC
UPDATE bookmarks SET server_id = ? WHERE id = ?
SELECT parent, order_index FROM bookmarks WHERE server_id = ? AND deleted = 0
SELECT special_id FROM bookmarks WHERE id = ? AND deleted = 0
SELECT server_id, %@(order_index) FROM bookmarks WHERE parent = ? AND order_index %@ ? AND server_id IS NOT NULL AND deleted = 0
SELECT id, special_id FROM bookmarks WHERE server_id = ? AND deleted = 0
SELECT %@(order_index), server_id FROM bookmarks WHERE parent = ? AND server_id IS NOT NULL
BookmarksSyncMetadata.plist
SafariTabsSyncMetadata.plist
UPDATE bookmarks SET sync_key = ? WHERE id = ?
UPDATE bookmarks SET sync_data = ? WHERE id = ?
SELECT sync_key FROM bookmarks WHERE server_id = ? AND deleted = 0 ORDER BY server_id ASC
SELECT sync_key FROM bookmarks WHERE deleted = 0 AND rtrim(server_id, '/') LIKE ? ORDER BY server_id ASC
SELECT server_id from bookmarks where parent = ? AND deleted = 0
SELECT server_id FROM bookmarks WHERE parent = ? AND deleted = 0 AND order_index = ?
UPDATE bookmarks SET order_index = ? WHERE id = ?
SAVEPOINT bookmarksdav_order
RELEASE SAVEPOINT bookmarksdav_order
ROLLBACK TRANSACTION TO SAVEPOINT bookmarksdav_order
SELECT ancestor_id from folder_ancestors WHERE folder_id = ?
DELETE FROM folder_ancestors WHERE folder_id IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) OR folder_id = ?;
DELETE FROM bookmark_title_words WHERE bookmark_id = %d
INSERT INTO bookmark_title_words (bookmark_id, word, word_index) VALUES (?, ?, ?)
SELECT id, title FROM bookmarks where type = 0 AND deleted = 0
UPDATE generations SET generation = generation + 1
SELECT %@ %@
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE bookmarks.id != 0 AND added = 1 AND syncable = 1 GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE added = 1 AND id != 0 AND type = 0 AND syncable = 1
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE dav_generation > %ld AND deleted = 0 AND added = 0 AND bookmarks.id != 0 AND syncable = 1 AND (modified_attributes & %llu) == %llu GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE dav_generation > %ld AND deleted = 0 AND added = 0 AND id != 0 AND syncable = 1 AND modified_attributes != 0 AND ((modified_attributes & %llu) != %llu OR type = 0)
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE dav_generation = %ld AND deleted = 0 AND added = 0 AND bookmarks.id != 0 AND syncable = 1 AND (modified_attributes & %llu) == %llu GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE dav_generation = %ld AND deleted = 0 AND added = 0 AND id != 0 AND syncable = 1 AND ((modified_attributes & %llu) != %llu OR type = 0)
FROM bookmarks WHERE deleted = 1 AND server_id IS NOT NULL AND syncable = 1
SELECT %@, added, deleted, dav_generation FROM bookmarks WHERE id != 0 AND syncable = 1 AND dav_generation > %ld AND (added = 1 OR deleted = 1 OR modified_attributes != 0) ORDER BY dav_generation ASC LIMIT 1
SELECT bookmarks.server_id FROM bookmarks INNER JOIN folder_ancestors ON bookmarks.id = folder_ancestors.folder_id WHERE bookmarks.id IN (SELECT ancestor_id FROM folder_ancestors WHERE folder_id = %u) GROUP BY folder_id HAVING COUNT(*) == 1
UPDATE bookmarks SET added = 0, modified_attributes = 0 WHERE added != 0 OR modified_attributes != 0
UPDATE bookmarks SET added = 0, modified_attributes = 0 WHERE dav_generation <= %zu AND (added != 0 OR modified_attributes != 0)
UPDATE bookmarks SET added = 0 WHERE id = %d
UPDATE bookmarks SET added = 0, modified_attributes = 0 WHERE id = %d
UPDATE bookmarks SET added = ? WHERE id = ?
SELECT value from sync_properties WHERE key = '_dav_generation'
SELECT value from sync_properties WHERE key = '%@'
INSERT INTO sync_properties (key, value) VALUES ('%@', %zd)
UPDATE sync_properties SET value = %zd WHERE key = '%@'
UPDATE sync_properties SET value = value + 1 WHERE key = '_dav_generation'
com.apple.bookmarks.BookmarksFileChanged
SELECT id FROM bookmarks WHERE special_id = ?
UPDATE bookmarks SET num_children = 0 WHERE id = %d
not null
null
SELECT id, URL FROM bookmarks WHERE type = 0 AND deleted = 0
UPDATE bookmarks SET URL = ? WHERE id = ?
address
pageTitle
bookmarkPath
title = ? AND parent = 0 AND deleted = 0 ORDER BY order_index ASC
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS count_bookmarks WHERE count_bookmarks.parent = %d) WHERE (bookmarks.id = %d AND bookmarks.num_children < 0)
DROP TABLE IF EXISTS folder_ancestors
DROP TRIGGER IF EXISTS fkd_ancestors_folder_id
CREATE TABLE folder_ancestors (id INTEGER PRIMARY KEY AUTOINCREMENT, folder_id INTEGER NOT NULL CONSTRAINT fk_ancestors_folder_id REFERENCES bookmarks(id) ON DELETE CASCADE, ancestor_id INTEGER NOT NULL)
INSERT INTO folder_ancestors (folder_id, ancestor_id) VALUES (?, ?)
SELECT id FROM bookmarks WHERE parent = ? AND type = 1 AND deleted = 0
UPDATE bookmarks SET hidden_ancestor_count = hidden_ancestor_count + ? WHERE parent IN (SELECT folder_id from folder_ancestors WHERE ancestor_id = ?) OR parent = ?
 LIMIT ? OFFSET ?
SELECT parent, count(*) AS identical_bookmarks FROM bookmarks GROUP BY parent, type, title, url HAVING identical_bookmarks > 1
@"WebBookmark"16@?0@"WebBookmark"8
DELETE FROM bookmarks WHERE id = ?
SELECT num_children FROM bookmarks WHERE id = ?
UPDATE bookmarks SET parent = ?1, order_index = order_index + ?2%@ WHERE parent = ?3
, modified_attributes = modified_attributes | ?4, dav_generation = ?5
UPDATE bookmarks SET num_children = num_children + (SELECT num_children FROM bookmarks WHERE id = ?) WHERE id = ?
DELETE FROM folder_ancestors
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS b WHERE b.parent = ? AND b.hidden = 0) WHERE id = ? AND type = 1
parent = ?%@%@
 AND type = 1
 AND hidden = 0
DELETE FROM sync_properties WHERE key != ? AND key LIKE ?
SELECT id from bookmarks where parent = ? AND deleted = 0 AND syncable = 1
SELECT sync_data, order_index FROM bookmarks WHERE special_id = 0 AND syncable = 1 AND deleted = 0 AND parent = ? AND id != ? ORDER BY order_index DESC
SELECT sync_data FROM bookmarks WHERE special_id = 0 AND syncable = 1 AND deleted = 0 AND parent = ? AND order_index < ? ORDER BY order_index DESC
SELECT sync_data FROM bookmarks WHERE special_id = 0 AND syncable = 1 AND deleted = 0 AND parent = ? AND order_index > ? ORDER BY order_index ASC
v32@?0@"NSNumber"8@"NSString"16^B24
ParentFolder
SELECT sync_data FROM bookmarks WHERE id = ?
SELECT sync_data FROM bookmarks WHERE server_id = ?
UPDATE bookmarks SET sync_data = ? WHERE server_id = ?
B16@?0@"WBSCRDTPositionSortValue"8
@"WBSCRDTPositionSortValue"16@?0@"WBSCRDTPositionSortValue"8
com.apple.WebBookmarks.bookmarksCollectionQueue
com.apple.WebBookmarks.titleWordTokenizerAccess
DeviceClass
com.apple.WebBookmarks.WebBookmarkCollection_Sync
com.apple.WebBookmarks.ErrorDomain
WebBookmarkTypeList
WebBookmarkTypeLeaf
WebBookmarkType
title
URIDictionary
URLString
Children
WebBookmarkUUID
SELECT type, title, url, id, external_uuid FROM bookmarks WHERE parent = ? AND deleted = 0 AND hidden = 0 AND syncable = 1 ORDER BY order_index
SELECT type, title, url, id, external_uuid FROM bookmarks WHERE id = 0
UPDATE bookmarks SET special_id = 1, editable = 0, deletable = 0 WHERE id = (SELECT id FROM bookmarks WHERE title = 'BookmarksBar' AND parent = 0 ORDER BY id ASC LIMIT 1);
UPDATE bookmarks SET special_id = 2, editable = 0, deletable = 0 WHERE id = (SELECT id FROM bookmarks WHERE title = 'BookmarksMenu' AND parent = 0 ORDER BY id ASC LIMIT 1);
DELETE FROM bookmarks WHERE id != 0 AND syncable = 1
DELETE FROM bookmarks WHERE id != 0 AND hidden = 0 AND hidden_ancestor_count = 0 AND syncable = 1
SELECT generation FROM generations
SELECT COUNT(*) FROM sync_properties WHERE key = ?
DELETE FROM sync_properties WHERE key = ?
UPDATE sync_properties SET value = ? WHERE key = ?
INSERT INTO sync_properties (value, key) VALUES (?, ?)
SELECT value FROM sync_properties WHERE key = ?
SAVEPOINT sync
RELEASE SAVEPOINT sync
ROLLBACK TRANSACTION TO SAVEPOINT sync
special_id == 0 AND id != 0 AND deleted = 0
SQLiteResult
come.apple.WebBookmarks.syncLockQueue
dateClosed
extraAttributes
identifier
localTabGroup
privateTabGroup
sceneID
tabGroupsToActiveTabs
<%@: %p; activeTabGroupUUID = %@; identifier = %d; sceneID = %@; uuid = %@>
com.apple.WebBookmarks
History (bookmark proxy)
Reading List
Allowed Sites
Favorites
Bookmarks Menu
WBWebFilterSettingsDidChange
com.apple.ManagedConfiguration.webContentFilterChanged
WFUserSettings
Class getWFUserSettingsClass(void)_block_invoke
WBWebFilterSettings.m
Unable to find class %s
void *WebContentAnalysisLibrary(void)
TIWordTokenizer
AND hidden = 0
 AND hidden_ancestor_count = 0
parent = %d
OR parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = %d)
AND type = %d
AND subtype = %ld
(%@ %@) %@ %@ %@
%%%@%%
%@ AND %@
%@ ORDER BY %@
<%@:%p; customQuery = %@; query = "%@"; orderBy = "%@"; titleWordPrefixes = %@>
SELECT COUNT(*) FROM bookmarks WHERE %@
SELECT num_children FROM bookmarks WHERE id = %d
id NOT IN (%@)
id IN (%@)
%@ LIMIT ? OFFSET ?
((%@) OR url LIKE ?)
id IN (SELECT bookmark_id FROM bookmark_title_words WHERE word GLOB ?)
 AND id IN (SELECT bookmark_id FROM bookmark_title_words WHERE word GLOB ?)
(%@ AND %@) OR %@
(%@) OR %@
(%@ AND %@)
B32@?0@"NSString"8Q16^B24
hasMigrated
com.apple.WebBookmarks.WBTabCollection
mutableCopy
B16@?0@"<WBBookmarkRepresentable>"8
@"WebBookmark"16@?0@"<WBBookmarkRepresentable>"8
@"<WBBookmarkRepresentable>"16@?0@"WebBookmark"8
@"NSArray"8@?0
parent = 0 AND syncable = 1 AND type = 1 AND hidden = 0 AND special_id = 0
@"WBMutableTabGroup"16@?0@"WebBookmark"8
@"NSString"8@?0
@"WBMutableTab"8@?0
B16@?0@"WBTab"8
v32@?0@"WBMutableTab"8Q16^B24
@"WebBookmarkList"8@?0
%@ %@
scoped
non-scoped
folder
@"CKRecordID"8@?0
v16@?0@"_WBShareParticipantData"8
com.apple.WebBookmarks.WBTabCollection.databaseQueue.%p
@"WebBookmark"16@?0@"WBTab"8
com.apple.WebBookmarks.WebBookmarkReadonlyCollection.%@.%p.%@
InternalQueue
Attributes
GenerationKey
bookmarks.icon
bookmarks.type
bookmarks.title
bookmarks.url
bookmarks.id
bookmarks.editable
bookmarks.deletable
bookmarks.hidden
bookmarks.parent
bookmarks.order_index
bookmarks.external_uuid
bookmarks.special_id
bookmarks.server_id
bookmarks.sync_key
bookmarks.sync_data
bookmarks.extra_attributes
bookmarks.local_attributes
bookmarks.fetched_icon
bookmarks.locally_added
bookmarks.archive_status
bookmarks.syncable
bookmarks.web_filter_status
bookmarks.modified_attributes
bookmarks.last_selected_child
bookmarks.subtype
AND hidden = 0 
AND type = 1 
AND type = 0 
SELECT %@ FROM bookmarks WHERE parent = ? %@%@ORDER BY order_index ASC
bookmarks.read, bookmarks.deleted
IsFolder
UUID
IsEditable
IsDeletable
IsHidden
IsSyncable
IsLocallyAdded
SpecialID
OrderIndex
IsInserted
NeedsSyncUpdate
UsedForInMemoryChangeTracking
ServerID
Sync
SyncData
FetchedIconData
ArchiveStatus
WebFilterStatus
ExtraAttributes
LocalAttributes
LastSelectedChildID
SyncPosition
CollectionType
Subtype
v24@?0@"WebBookmark"8@"NSNumber"16
TitleAndIdentityHash
TitleURLAndIdentityHash
B16@?0@"WBSCRDTField"8
WebsiteDataRecordDomain
WebsiteDataRecordUsage
Library/Preferences/com.apple.mobilesafari
Library/Safari
/var/mobile/Library/Safari/SafariTabsPPT.db
Tabs
Default
Debug Safari
Production Safari
Safari Technology Preview
Safari Automation
BookmarkSync
CloudBookmarks
Cycler
DataMigration
ReadingList
ReadingListIcons
TabGroup
WebsiteData
WebBookmarkServer
CloudSettings
/file
Reader.webarchive
Page.webarchive
ReadingListArchiveStatusPending
ReadingListArchiveStatusCompleted
ReadingListArchiveStatusStandaloneMediaFile
ReadingListArchiveStatusRecoverableError
ReadingListArchiveStatusNonRecoverableError
ReadingListArchiveStatusOutsideFetchWindow
ReadingListArchiveStatusShouldArchive
DateLastFetched
ReadingListIconURL
DateLastArchived
NextPageURLs
LocalPreviewText
ReadingListIconUUID
HasFetchedMetadata
Icon
DateLastFetchedIcon
@"NSDate"16@?0@"WebBookmark"8
v24@?0@"WebBookmark"8@"NSDate"16
@"NSString"16@?0@"WebBookmark"8
v24@?0@"WebBookmark"8@"NSString"16
SafariDebugOverrideLaunchMode
lastSelectedTabUUID
tabs
type
B32@?0@"WBTab"8Q16^B24
@"NSString"16@?0@"WBTab"8
@"WBMutableTab"16@?0@"NSDictionary"8
dictionaryRepresentation
<html><body>
<h>%@</h>
<ul>
<li><a href='%@'>%@</a></li>
</ul>
</body></html>
@"NSUUID"16@?0@"WBMutableTab"8
v32@?0@"WBTab"8Q16^B24
<%@: %p; identifier = %d; syncable = %@; title = %@; kind = %ld; numberOfTabs = %zu; uuid = %@>
<%@: %p; identifier = %d; syncable = %@; kind = %ld; numberOfTabs = %zu; uuid = %@>
com.apple.mobilesafari.WebBoomarks.migration.markReadingListItemsForWebContentFilterTime
com.apple.mobilesafari.WebBoomarks.migration.vacuumTime
v32@?0@"WBReusableTabEntry"8Q16^B24
reusableTabManagerCleanupDelaySeconds
reusableTabManagerMaxAgeSeconds
LastChangeID
DidNotSaveRecordsAfterMigration
RecordZoneIDsToLastServerChangeTokens
LastPrivateDatabaseServerChangeToken
LastSharedDatabaseServerChangeToken
RecordZoneIDsToHashGenerators
RecordIDsToRefresh
AuxiliaryRecordIDsToDelete
CloudBookmarkDatabaseSyncData
tab-group-container-bookmark
tab-group-container-bookmark-uuid
local and remote
v16@?0@"NSTimer"8
v16@?0q8
v16@?0@"WBMutableTabGroup"8
v16@?0@"WBMutableTab"8
B16@?0@"NSNotification"8
B32@?0@"WBTabGroup"8Q16^B24
v32@?0@"WBTabGroup"8Q16^B24
Parent
<%@: %p; parent ID: %d, position: %@>
v24@?0@"WebBookmarksXPCConnection"8@"NSObject<OS_xpc_object>"16
com.apple.SafariTabGroupSync.SyncDidFinish
syncResult
com.apple.WebBookmarks.WBTabGroupManager.%@.%p.%@
v24@?0@"NSArray"8@"NSArray"16
B16@?0@"WBMutableTabGroup"8
@"NSMutableArray"24@?0@"WBMutableTabGroup"8@"NSMutableArray"16
uuid
q24@?0@"<WBBookmarkRepresentable>"8@"<WBBookmarkRepresentable>"16
v32@?0@"NSString"8@"NSMutableArray"16^B24
v24@?0@"CKShare"8@"NSError"16
com.apple.safarifetcherd
AddToReadingList
ClearAllCloudTabDevices
ClearCloudTabsForCurrentDevice
DidToggleCloudTabs
RegisterForReadingListFetcherUpdates
StartReadingListFetcher
UnregisterForReadingListFetcherUpdates
DidFinishFetching
DidUpdateProgress
DidStartFetchingItem
DidStopFetchingItem
ClearAllReadingListArchives
ClearReadingListArchive
GetSafariWebDatabaseUsage
DeleteSafariWebSecurityOrigin
DeleteAllSafariWebSecurityOrigins
DeleteSafariPersistentURLCacheStorage
GetSafariDataUsageSummary
ClearHSTSSuperCookies
ClearAllSafariHistory
ScheduleBookmarksDatabaseMaintenanceTask
ScheduleBookmarksDatabaseMigrationTask
ClientBundleID
Enabled
Item
Progress
TerminateAfterUpdating
DataUsageSize
WebsiteDataAllRecords
WebsiteDataRecord
MessageReceivedAcknowledgement
PasswordIconsCleanup
Window
http:
https:
B24@?0Q8@"NSObject<OS_xpc_object>"16
v24@?0@"NSObject<OS_xpc_object>"8@"NSError"16
WebBookmarksXPCConnectionErrorDomain
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.WebBookmarks.WebBookmarksXPCConnectionQueue
_name
version
com.apple.SecondaryBookmarks.lock
%@.db
com.apple.WebBookmarks.WBSettingsTaskHandler.%p
Received a vnode event for bookmarks metadata file
Posted bookmarks metadata file changed notification
Error reading bookmarks metadata file with code: %zd
Read device identifier: %{private}@ from bookmarks metadata file, readonly: %d
Failed to write bookmarks metadata file to %{public}@
Received bookmarks metadata file change distributed notification
Posting bookmarks metadata file change distributed notification
Removing Safari's background image failed with error: %@.
Removing Safari's background image was successful.
Failed to copy the background image over. Error: %{public}@
Received a Per-Site Settings push notification from CloudKit.
Received a %{public}@ Per-Site Setting from CloudKit that is unrecognized to this device.
Received a %{public}@ Per-Site Setting from CloudKit that is not applicable to this device.
Successfully updated WBSPerSitePreferencesSQLiteStore in response to a push notification from CloudKit.
Save with record name %{public}@ in WBSPerSitePreferencesSQLiteStore did finish with success: %{public}@
Failed to update WBSPerSitePreferencesSQLiteStore after a push notification from CloudKit.
Will retry operation in 30 seconds due to a failure to update WBSPerSitePreferencesSQLiteStore.
Attempting to remove Safari's background image directory.
Removing Safari's background image directory failed with error: %@.
Removing Safari's background image directory was successful.
-> %s(database: %{public}@)
@@ %s: Unlocking bookmark database
<- %s
@@ %s: Unlocking tabs database
## %s(deviceIdentifier: %@)
<- %s -> Return value redacted
-> %s()
<- %s -> database: NULL due to failure to obtain lock
@@ %s: Did successfully lock database
<- %s -> database: NULL due to failure to allocate WebBookmarkCollection
<- %s -> database: NULL due to not running in data access process with DAV enabled
<- %s -> database: %{public}@
-> %s(database: %{public}@, shouldSave: %d)
<- %s -> Return data of size: %{public}@
-> %s(database: %{public}@, data size: %{public}@)
<- %s -> %{public}@, %{public}@
-> %s(database: %{public}@, %{public}@)
XX %s: Client passed us a change token that does not match the current generation
XX %s: Could not clear the current change list
XX %s: Client requested that we remove the root folder
XX %s: Client requested that we remove item with server ID "%{public}@" but it does not exist
Deleting bookmark with ID %d and serverID %{public}@ from parent with ID %d
-> %s(item: %{public}@)
<- %s -> %{public}@
-> %s(item: %{public}@, %{public}@)
<- %s -> syncKey: %{public}@
-> %s(item: %{public}@, syncKey: %{public}@)
-> %s(item: %{public}@, data of size: %{public}@)
-> %s(change: %{public}@)
<- %s -> %d
<- %s -> (null)
-> %s(%{public}@)
<- %s -> %ld
-> %s(folder: %{public}@)
-> %s(bookmark: %{public}@)
<- %s -> CKBABookmarkTypeReadingListItem
<- %s -> CKBABookmarkTypeTabGroupScopedBookmark
<- %s -> CKBABookmarkTypeRegular
-> %s(database: %{public}@, start version: %{public}@)
<- %s -> %s
<- %s -> %lld
-> %s(database: %{public}@, migration state: %lld)
-> %s(database: %{public}@, account hash: %{public}@)
XX %s: CKBALocalID is an instance of %{public}@
XX %s: Client requested server IDs of children of local ID "%{public}@" but it does not exist or is not a folder!
-> %s(database: %{public}@, item: %{public}@, parentSyncServerId: %{public}@)
@@ %s: Parent server ID %{public}@ does not point to any item in the local database
Item was merged with %{private}@
@@ %s: Record %{public}@ was insert in parent record with server ID %{public}@
@@ %s: Record %{public}@ did move to parent record with server ID %{public}@
@@ %s: Record %{public}@ is already inside parent record with server ID %{public}@
-> %s(database: %{public}@, mode: %ld)
-> %s(database: %{public}@, %{public}@, %{public}@)
-> %s(database: %{public}@, request before targetItemId: %{public}@)
-> %s(database: %{public}@, request after targetItemId: %{public}@)
-> %s(database: %{public}@, folderServerId: %{public}@)
-> %s(item: %{public}@, parentRecordName: %@)
<- %s -> YES
<- %s -> NO
-> %s(item1: %{public}@, item2: %{public}@)
-> %s(database: %{public}@, folder type: %lld)
-> %s(database: %{public}@, bookmark type: %lld)
<- %s -> syncData %p of size: %ld
-> %s(change: %{public}@, syncData %p of size: %zd)
XX %s: Cannot set the sync data of a change that is not a Delete. Change type = %d, inserted = %d
XX %s: Cannot update the sync data of a Delete change that does exist in the database
## %s(%@)
## %s(attributes: %@)
@@ %s: Set title to value of length: %{public}@
@@ %s: Set title to value of length: (null)
@@ %s: Set last selected child ID to value of length: %{public}@
@@ %s: Set last selected child ID to null
@@ %s: Set URL to value of length: %{public}@
@@ %s: Set URL to value of length: (null)
-> %s(item: %{public}@, key: %{public}@)
## %s(value: %@)
<- %s -> Return value redacted; length: %{public}@
Connection to TabGroups sync agent was interrupted
Connection to TabGroups sync agent was invalidated
Failed to reconnect too many times to sync agent since %{public}@, stopping.
Will attempt to add sync observer again after connection ended
Will attempt to reconnect after %ld retries since %{public}@
Failed to decode _WBBookmarkSyncDataForPositionDecoding with exception: %{public}@
Failed to decode WBBookmarkSyncData with exception: %{public}@
Inserting %zu tabs
Tab marked as added: %{public}@
%zu tabs deleted
Removing tab %{public}@
Reordering tab %{public}@ after tab %{public}@
Clearing deleted tabs
Deleting windows with condition: %@
Delete invalid window %lli %@
Delete window %lli %@
%i windows deleted using condition: %@
Attempting to fix local bookmarks in syncable folders
Attempting to regenerate sync positions
Retrieving shared tab groups with missing CKShare records
Failed to retrieve CKShare records to refresh
Did finish retrieving shared tab groups with missing CKShare records
Finding any locally saved CKShare to enable presence
Failed to check locally saved CKShare records
Did finish looking for locally saved CKShare to enable presence
Fixing local bookmarks in syncable folders.
Failed to save updated syncable bookmark
Failed to delete local bookmark in syncable folder
Successfully fixed local bookmarks in syncable folders.
Will begin regenerating sync positions
Setting position of tab group %{public}@ to position: %{public}@
Failed to save generated position for record %{public}@
Failed to reset order_index values during position generation
Setting position of record %{public}@ to position: %{public}@
Setting position failed for bookmark %{public}@
Did finish regenerating sync positions, success: %d
Collecting tab groups that might be shared and missing a CKShare
TabGroup with recordID %{public}@ is potentially missing its CKShare record
%@ with result: %d error: %{public}@
Setting active tab on window state
Active tab set on window state
Window state local tab group count: %zu
Skipped window state from DB due to missing tab group.
Fetched %zu window states with filter
Saving window state as bookmark
Unable to move tab group to window folder
tabBookmarks count: %zu
Unable to save local tab group when saving window
Could not save window state as bookmark
Attempted to save a nil window state
Failed to save local tab group while trying to save window state
Failed to save private tab group while trying to save window state
Attempted to delete a nil window state
Detected orphaned TopScopedBookmarkList %d that belongs to Tab Group %d(%{private}@).
Tab Group %d(%{private}@) does not have a scoped bookmark folder.
Prepare statement failed (%i)
WebBookmarks could not start a deferred transaction; sleeping and trying again later
WebBookmarks still could not start a deferred transaction; sleeping longer
WebBookmarks could not start a deferred transaction; bailing. Error was: %{public}s
WebBookmarks could not start a deferred transaction; bailing. Result code was: %d
%{public}@
WebBookmarks could not start an immediate transaction; sleeping.
WebBookmarks could not start an immediate transaction; sleeping longer.
WebBookmarks could not start an immediate transaction; bailing. Error was: %{public}s
WebBookmarks could not start an immediate transaction; bailing. Result code was: %d
Updating changes from in memory identifier %ld to database identifier %ld
Error converting in-memory changes into plist data: %@{public}
Failed to persist in-memory bookmarks changes plist: %{public}@
Error converting plist data to dictionary: %{public}@
Persisted bookmark changes plist is corrupted
Cannot create a Reading List item. URLs must begin with http or https.
Not automatically closable because the tab is syncable.
Not automatically closable because tab is pinned.
Not automatically closable because lastViewedTime is unknown.
Tab is automatically closable because it is blank.
Tab is automatically closable because lastVisitTime is beyond threshold from user preference.
Not automatically closable because its lastVisitTime does not cross threshold.
Failed to open Bookmarks database. Acquired sync lock: %d, error: %{public}@.
Couldn't create bookmarks database at %{public}@
Refusing to remove corrupted bookmarks database at %{public}@: The path appears to be a directory.
Refusing to remove corrupted bookmarks database at %{public}@: The file is not named %{public}@.
Still could not open bookmarks database: %{public}@
Could not open bookmarks database: %{public}@
Removing corrupted bookmarks database %{public}@
Corrupted bookmarks saved as %{public}@
Also removed the journal file %{public}@.
Failed to remove the journal file at %{public}@.
Also removed the wal file %{public}@.
Failed to remove the wal file %{public}@.
Also removed the shm file %{public}@.
Failed to remove the shm file %{public}@.
Could not remove bookmarks database %{public}@
A table is missing from bookmarks database. The database is corrupt.
Table %{public}@ is missing from bookmarks database
Skipping integrity check because database is busy or locked (sqlite code = %d)
sqlite3_prepare_v2 failed for integrity_check with error code %d
sqlite3_step failed for integrity_check with error code %d
sqlite integrity_check returned a NULL pointer
Failed to migrate from bookmarks plist at path %{public}@ sync anchor plist path %{public}@
Unable to initialize WebBookmarkCollection. Nil was returned from +initSafariBookmarkCollectionCheckingIntegrity:
Starting to migrate and clean up Reading List archives
Failed to migrate Reading List archives; couldn't reset record status.
Failed to migrate Reading List archives; couldn't update record status to "pending" (error code = %d)
Failed to remove Reading List archive directory %{public}@: %{public}@
Failed to get list of archive directories: %{public}@
Failed to remove Reading List archive directory with UUID %{public}@: %{public}@
Failed to remove reading list archive at path %{public}@: %{public}@
Migrating Reading List web filter status
Starting to mark all Reading List items as allowed by Web Content Filter
Finished marking all Reading List items as allowed by Web Content Filter
Failed to mark all Reading List items as allowed by Web Content Filter with result code: %i
Read Safari bookmarks
Could not apply in-memory changes to database
Could not open a write transaction
Failed to save bookmark with UUID %{public}@: %{public}@
Failed to save bookmark %{public}@: Write transaction isn't valid
_saveBookmark:withSpecialID:updateGenerationIfNeeded: failed
Starting Reading List fetcher when saving bookmark with UUID %{public}@
No BookmarkImages directory exists, but bookmark had an icon UUID
Failed to delete bookmark icon: %{public}@
Deleted bookmark icon successfully
Moving bookmark with identifier %ld and parent ID %d to folder with identifier %ld
Moving bookmark with ID %d and parent ID %d to index %d
Reordering bookmark %{public}@ after bookmark %{public}@
Reordering bookmark %{public}@ to index %d
Failed to acquire lock when saving offline Reading List archive
Saving offline Reading List archive for bookmark with UUID %{public}@
Creating a directory for Reading List icons failed: %{public}@
Saving Reading List icon failed: %{public}@
Saving a bookmark failed
Saving a previously deleted bookmark failed
Moving bookmark %d to folder %d failed
Update %zu bookmarks with folder ID %d. There are %zu current bookmarks, and %zu will be deleted
Failed to save bookmark during update with error: %@
Failed to save and move bookmark during update with error: %@
Failed to reorder bookmark during update with error: %@
Number of children mismatch detected for bookmark with id: %d, parent: %d, expected number of children: %d, actual: %d
Could not fix number of children of folder with id: %d, error: %d, %{public}s
Failed to create a fresh database because we failed to lock sync
Got nil local attributes dictionary: %{public}@
Got nil reading list attributes dictionary, creating one
Bookmarks database appears to have skipped migration steps. Rerunning migration.
Warning: The web bookmarks database has a greater version number than expected. Restoring a database from a newer version is not supported.
Failed to migrate schema because we failed to lock sync
Couldn't get current version of bookmarks database.
Failed to import bookmarks with plist path %{public}@
Failed to remove old bookmarks plist at path %{public}@. Error: %{public}@
Failed to remove bookmarks sync anchor plist at path %{public}@. Error: %{public}@
Warning: The web bookmarks database was used on a more recent %{public}@ version than the current one. Restoring a database from a newer version is not supported.
Failed to perform Safari version upgrades because we failed to lock sync
Moving bookmark %{public}@ to parent %d and order index %d
Cannot insert bookmark with local ID %d into itself
Cannot insert bookmark with ID %d into parent with ID %d since it is a descendent
Could not move record %{public}@ with localID: %d, server ID: %{public}@, to parent %d, error: %d
Could not reorder records in previous parent %d, error: %d
Failed to clear local bookmark tombstones
Failed to clear sync server ids. Sqlite error: %d
Clearing all sync data, likely because the user is logging out
Failed to reset bookmarks generation. Sqlite error: %d
Failed to reset sync data of bookmark %{public}@
Failed to reset generation of bookmark %{public}@
Failed to mark bookmrks as added during clearing sync data. Sqlite error: %d
Deleted bookmark with ID %d from parent with ID %d
Could not delete records recursively starting with localID: %d, error: %d
Inserting bookmark tombstones recursively exceeded a depth of 100
Fetched %zu children in folder %{public}@ while inserting tombstones
Error reading bookmark attributes: %{public}@
Cannot save bookmark: failed to update order index of bookmarks during insertion (%i)
Cannot save bookmark: failed to get hidden ancestor count (%i)
Could not insert record with server ID: %{public}@ into parent with ID: %d, error: %d
Refusing to save a bookmark with no address
Crashing since we can't save a bookmark with no address. Please file a bug.
Failed to save bookmark %{public}@: Invalid parentID %d
Could not update cached child count for parent ID %d in direction: %d, error: %d
Could not get bookmark ID with server ID %{public}@ with prepare result %d
Did not find any bookmarks with server ID %{public}@
Safari directory is currently inaccessible
Could not delete ancestor table entries for record %d, error: %d
Failed to increment bookmarks generation. Sqlite error: %d
Handling bookmarks metadata file change notification
WebBookmarks sync is not posting a change notification because the collection is not dirty
%{public}@ Please file a bug citing the following caller:
Failed to merge bookmarks with dictionary. Bookmarks dictionary is %{public}@
Could not insert ancestor table entry %{public}@ for bookmark %d, error: %d
Could not recursively update ancestor table entries for bookmark %d, error: %d
Applying in-memory delete change for %{public}@
Applying in-memory add change for %{public}@
Applying in-memory modify change for %{public}@ from %{public}@
Applying in-memory move change for %{public}@
Applying in-memory reorder change for %{public}@ after %{public}@
Applying in-memory replace change for %zu bookmarks in folder %d
Adding bookmark in memory with identifier %ld to folder with identifier %ld
Device identifier is empty
Looking up migration state for device identifier %{private}@
Local migration state read from database %{public}@
Failed to save local migration state %{public}@ to database
Failed to delete local migration state from sync properties. Sqlite error: %d
Generating position for order index %d in folder id %d
Generating position for bookmark %{public}@
Clearing sync data because the user has reset the iCloud Keychain.
Error fixing recovered bookmark: %{public}@
Received com.apple.bookmarks.BookmarksFileChanged
Failed to mark special bookmarks. Sqlite error: %d
Failed to delete existing bokmarks as part of merging with new set of bookmarks. SQlite error: %d
Failed to build the database with new set of bookmarks during bookmark merge
Failed to calculate cached children count during bookmark merge. Sqlite error: %d
Failed to restore missing special bookmarks during bookmark merge
Failed to rebuild ancestor table during bookmark merge
Failed to set sync properties value for key %{private}@. Sqlite error: %d
Failed to set sync data for key %{public}@. Sqlite error: %d
Bookmarks failed to begin sync transaction with result code: %i. SQL Error: %{public}s
Bookmarks failed to begin sync transaction with result code: %i
Failed to open bookmarks sync lock file at: %{public}s
Process %{public}@ did fail to acquire lock: %{public}@ (%d)
Process %{public}@ did acquire lock: %{public}@
Postponing unlockSync. The process %{public}@ has requested to hold the lock
Process %{public}@ did release lock: %{public}@
Attempting to unlock sync since last requestor has unheld the lock in process %{public}@
Setting sync notification type: %ld
Request sync client trigger sync
Requesting a CloudKit bookmarks sync due to local changes
Could not construct WFUserSettings. Default values will be used
num_children for bookmark %i has an invalid value %i
Retrying to fetch count without using num_children %i
Unable to instantiate tab collection because the specified collection type is not of tabs
Failed to instantiate tab collection because we failed to lock sync
Failed to instantiate tab collection because the underlying collection failed to set up
Skipping item %{private}@ because underlying bookmark is nil
Update %zu pinned tabs and %zu private pinned tabs
Not updating tab %{public}@ in tab group %{public}@ because they are different types
Could not load a scoped bookmark folder with the id(%d) of a %@.
Could not filter scoped bookmark folder with the id(%d) of a %@.
Could not load a scoped bookmark with uuid(%{public}@) of a %@.
Error reading bookmark extra attributes: %{public}@
Error reading bookmark local attributes: %{public}@
Setting bookmark with identifier %d as its own parent
Setting bookmark identifier to its parent identifier %ld
Setting ReadingList item bookmark archive status to %{public}@ for bookmark with UUID %{public}@
Error calculating directory size getting directory subpaths for offline reading list item at path: %{public}@
Failed to delete %{public}@: %{public}@
Deleted %{public}@ as a result of deleting the bookmark
setShouldArchive: setting ReadingList item bookmark archive status to ReadingListArchiveStatusShouldArchive for bookmark with UUID %{public}@
setShouldArchive: setting ReadingList item bookmark archive status to ReadingListArchiveStatusPending for bookmark with UUID %{public}@
Detected duplicated tabs: %@
All tabs: %@
Trying to create WBBookmarkDatabaseSyncData from data of size %lu
Successfully created WBBookmarkDatabaseSyncData
Failed to create WBBookmarkDatabaseSyncData with exception: %{public}@
Writing sync data of size %lu to database
Created Tab Cycler test target with tab collection: %@
Clearing %@ tab groups
Failed to acquire tab collection lock after backing off to a %f second wait. Giving up.
Failed to acquire tab collection lock. Retrying after %f seconds.
Triggering tab group sync
Sync agent reset sync data. Triggering another sync.
Sync finished but local migration has not completed. Waiting for migration to complete.
Sync agent finished syncing
Timed out waiting for sync agent to finish syncing
Beginning to observe Tab Group updates
Timed out while waiting for Tab Group updates
Received notification of Tab Group updates
Expected tab groups after update but none were found. Continuing to wait.
Filtering tab %{public}@ because it was removed
Items do not have sync positions: %{public}@, %{public}@
Item does not have a sync position %{public}@
Moving tab group %{public}@ after tab group %{public}@
Not moving tab group %{public}@ because it no longer exists
Not removing tab group %{public}@ because it no longer exists
Removing tab group %{public}@
Updating tab group with uuid %{public}@
Not updating tab group with uuid %{public}@ because it does not exist.
Updating tabs with uuid %{public}@
Not updating tab with uuid %{public}@ because it does not exist.
Updating tab %{public}@
Moving %zu tabs to tab group %{public}@
Moving tab with no tab group
Updating tabs in tab group with uuid %{public}@
Not updating tabs because the tab group with uuid %{public}@ does not exist.
Aborted inserting non-scoped bookmark into a scoped folder.
Failed to insert scoped bookmark into parent(%d) after anchor(%d).
Failed to reorder scoped bookmark(%d) behind anchor(%d).
Failed to update scoped bookmark(%d).
Failed to delete scoped bookmark(%d).
Could not load scoped bookmark folder(%d) when notifying changes.
Did successfully join share %{public}@
Failed to join shared tab group %{public}@ with error: %{public}@
Did successfully begin sharing tab group with UUID: %{public}@, share: %{public}@
Failed to begin sharing tab group with UUID: %{public}@, error: %{public}@
Tab group sync did finish
Reloading tab groups from database
Unable to read tab group changes after sync because the database cannot be opened
Sending XPC message to delete all Website data
Error encountered while delivering XPC message to delete all website data. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete all website data
Error encountered while delivering XPC message to delete individual website data. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete individual website data
Error encountered while delivering XPC message to delete persistent URL cache storage. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete persistent URL cache storage
Error encountered while delivering XPC message to delete Safari's history. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete Safari's history
WBDatabaseLockAcquisitor: releasing database lock
WBDatabaseLockAcquisitor: successfully acquired database lock
WBDatabaseLockAcquisitor: failed to acquire database lock
WebBookmarksXPCConnection: No handler registered for the message %{public}s.
Ignoring incoming message because the message is nil.
Ignoring incoming message because the message type is %{public}s
Not queueing settings task with type %ld since one has already been scheduled.
Attempting to perform a webbookmarksd settings task while there is no current task set
Dropping settings task with type %ld because maximum retry count exceeded
Performing settings task with type: %ld
Skipping task with type %ld due to incorrect arguments
Marking current task with type %ld as finished. Attempting next available task
Successfully performed settings task with type: %ld
Settings task with type %ld finished with a non-xpc error %{public}@
Received error while performing settings task with type: %ld, error: %{public}@
Adopting other tab's local title and URL
Using tab's local title and URL
Dp
softlink:o:path:/System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
softlink:o:path:/System/Library/PrivateFrameworks/TextInput.framework/TextInput
WebBookmarkDeviceIdentifier
WBChangeRecord
WBSettingsSyncEngineAccess
WBSSettingsSyncEngineAccess
NSObject
WebBookmarkCloudKitSyncCollection
WebBookmarkProductionSafariCloudKitSyncTabCollection
BABookmarkItem
WBBookmarkDBAccess
WBSBookmarkDBAccess
WBTabGroupSyncAgentProtocol
WBTabGroupSyncAgentProxy
WBTabGroupSyncAgentSyncObserver
WBSDeallocationSentinelObserver
WBTabGroupSyncAgentProxyProtocol
WBTabGroupManagerObserver
WBBookmarkSyncData
NSCopying
NSSecureCoding
NSCoding
_WBBookmarkSyncDataForPositionDecoding
WBBookmarkLabel
WBNSErrorExtras
WebBookmarkInMemoryChangeFilterUnreadOnly
WebBookmarkInMemoryChangeFilter
WBMutableTabGroup
WBDuplicateBookmarkGroup
WebBookmarkChange
WBChange
WBSerializable
WebBookmarkTabCollection
WebBookmarkDebugSafariTabCollection
WebBookmarkProductionSafariTabCollection
WBBrowserState
WebBookmarkChangeSet
CloudTabServices
WBReadingListPrivate
WBReadingList
WBTabGroupSyncAgent
WebBookmark
WBBookmarkRepresentable
WBTab
NSMutableCopying
WebBookmarkCollection
WBDatabaseLockAcquisitorDelegate
WBBookmarkProvider
Sync
WebBookmarkCollectionSyncFlags
WebBookmarksExtras
WBWindowState
WebBookmarkList
Internal
WBReadonlyTabCollection
WBStateProvider
WBTabProvider
WBWebFilterSettings
WebBookmarkTitleWordTokenizer
WebBookmarkListQuery
_WBShareParticipantData
WBTabCollection
WBTabProvider_Internal
WebBookmarkReadonlyCollection
WBWebsiteDataRecord
WBCollectionConfiguration
WBBookmarksDatabaseHealthInformation
ReadingList
ReadingListArchives
ReadingListInternal
WBSettingsTask
WBFeatureManager
WBTabGroup
WBReusableTabEntry
WBReusableTabManager
NSCacheDelegate
WBBookmarkDatabaseSyncData
WBTabCyclerCommandHandler
WBSCyclerTestTarget
_WBTabCyclerTabGroupUpdateObserver
WBBookmarkLocation
SafariFetcherServerProxy
WebBookmarksXPCConnectionDelegate
WBTabGroupManager
WBSCRDTPositionGeneratorDelegate
WBWindow
WBNSDictionaryExtras
WebBookmarksSettingsGateway
WBDatabaseLockAcquisitor
WebBookmarksXPCConnection
WebBookmarksXPCListener
WBLocalTabAttributes
WBInMemoryChangeFilterVisible
WebBookmarkSecondaryCollection
WBSettingsTaskHandler
WBMutableTab
T@"NSArray",R,N
.cxx_destruct
T@"NSSet",R,C,N
T#,R,N,G_tabClass,V_tabClass
T@"NSURL",R,C,N
T@"<WBReusableTab>",R,N,V_reusableTab
TB,D,N,GisLocal
T@"<WebBookmarkInMemoryChangeFilter>",&,N,V_inMemoryFilter
TB,R,N,GisDisplayingStandaloneImage,V_displayingStandaloneImage
T@"<WebBookmarksXPCConnectionDelegate>",W,N,V_delegate
TB,R,N,GisNamed
T@"CKRecordID",C,N,V_parentRecordID
_activeTabGroup
T@"CKServerChangeToken",C,N,V_lastSharedDatabaseServerChangeToken
_collectionType
T@"NSArray",C,D,N
_createParticipantPresenceTable
T@"NSArray",C,N,V_participants
T@"NSArray",C,N,V_privatePinnedTabs
_deleteTabGroup:leaveTombstone:
T@"NSArray",C,N,V_windows
_domain
T@"NSArray",R,C,N,V_ancestorTabUUIDs
_folder
T@"NSArray",R,C,N,V_tabs
_handleMessage:
T@"NSData",C,N
_hidden
T@"NSData",R,C,N
_inMemoryFilter
T@"NSDate",&,N
_localTabGroups
T@"NSDate",R,C,N,V_dateClosed
_markWindowStatesAsLastSession:
T@"NSDate",R,N,V_dateCreated
_mutableTabBeforeIndex:inGroup:
T@"NSDictionary",C,N,V_extraAttributes
_parentRecordID
T@"NSDictionary",R,C,N
_pinned
T@"NSMutableSet",R,N,V_lockSyncHoldRequestorPointers
_reorderBookmark:afterBookmark:
T@"NSNumber",C,N,GisSelectedFavoritesFolder
_resetBookmark:
T@"NSObject<OS_xpc_object>",R,C,N
_setID:
T@"NSSet",C,N,V_activeParticipantIDs
_setTitle:forTabWithUUID:reply:
T@"NSSet",C,N,V_recordIDsToRefresh
_string
T@"NSString",C,N
_syncAgentProxy
T@"NSString",C,N,V_creationDeviceIdentifier
_tableExpressionForArchiveMode:
T@"NSString",C,N,V_sceneID
addReusableTab:
T@"NSString",R,C
address
T@"NSString",R,C,N,V_UUID
associatedIndex
T@"NSString",R,C,N,V_databasePath
bookmarkIDsModifiedInMemoryPassingFilterFromChangeSet:inFolder:
T@"NSString",R,C,N,V_lastSelectedTabUUID
changes
T@"NSString",R,C,N,V_tabGroupUUID
createBookmarkListWithTitle:inListWithIdentifier:atIndex:reply:
T@"NSString",R,C,N,V_uuid
dateLastFetched
T@"NSString",R,N,V_windowUUID
debugTabCollectionConfiguration
T@"NSURL",R,C,N,V_fileURL
deleteTabGroup:
T@"NSUUID",R,N
deviceIdentifierForCloudKitWithCollectionType:generateIfNeeded:
T@"WBBookmarkSyncData",R,N
differenceFromList:withOptions:
T@"WBCollectionConfiguration",R,N,V_configuration
extraAttributes
T@"WBLocalTabAttributes",&,D,N
fetchedIconData
T@"WBMutableTabGroup",R,N,V_localTabGroup
foundDuplicates
T@"WBReadingList",R,N
initFolderWithParentID:subtype:deviceIdentifier:collectionType:
T@"WBSCRDTField",R,N
initWithFormat:
T@"WBSCRDTGeneration",R,N
initWithTitle:deviceIdentifier:
T@"WBSCRDTPosition",C,D,N
initWithType:websiteDataRecord:
T@"WBSCRDTPosition",R,C,N
isBlank
T@"WBSCRDTPosition",R,N,V_position
isEqualToArray:
T@"WBTabCollection",&,N,V_tabCollection
isMuted
T@"WBTabGroup",&,N,V_activeTabGroup
isPrivateWindow
T@"WBTabGroupSyncAgentProxy",R,N
isShowingReader
T@"WBWebsiteDataRecord",R,N,V_websiteDataRecord
isValid
T@"WFUserSettings",R,N
localAttributes
T@"WebBookmark",&,N,V_bookmark
merging
T@"WebBookmark",R,N,V_bookmark
needsSyncUpdate
T@"WebBookmarkChangeSet",R,N
numberWithBool:
T@"WebBookmarkCollection",R,N,V_collection
pinnedPageTitle
T@"WebBookmarkList",R,C,N
privateTabGroup
T@"WebBookmarkTabCollection",R,N,V_collection
release
T@?,C,N,V_finishBackgroundTaskAssertionBlock
restrictionType
T@?,R,C,N
safari_filterObjectsUsingBlock:
TB,D,N,GisPrivateBrowsing
saveBookmarks:postNotification:
TB,D,N,GisSyncable
TB,D,N,GwasModified
setBool:forKey:
TB,N
setDeletedTabs:
TB,N,GhasCompletedMigration
setLocalAttributesValue:forKey:
TB,N,GisReadOnly,V_readOnly
setShareRecord:
TB,N,V_fetchedIconData
setUrl:
TB,N,V_needsSyncUpdate
specialFolderID
TB,N,V_postSyncNotificationWhenUnlocking
stringByAppendingPathExtension:
TB,N,V_unlockSyncRequested
subfoldersOfID:
TB,R,D,N
syncDataForKey:
TB,R,N,G_isMutable,V_isMutable
tabGroupManager
TB,R,N,GisCustomQuery,V_customQuery
unholdLockSync:
TB,R,N,GisEditable,V_editable
wb_objectOfType:forKey:isValid:
TB,R,N,GisFullArchiveAvailable
webFilterStatus
TB,R,N,GisHidden,V_hidden
windows
.cxx_construct
T@"NSError",R,N
T#,R
T@"NSURL",C,D,N
T@"<WBDatabaseLockAcquisitorDelegate>",W,N,V_delegate
T@"NSURL",R,C,N,V_pinnedPageURL
T@"<WBTabGroupSyncAgentProtocol>",&,N,V_syncAgentProxy
TB,R,N,GisDeletable,V_deletable
T@"<WebBookmarksClientDelegateProtocol>",W,N,V_delegate
TB,R,N,GisLocal
T@"CKRecord",C,N,V_record
Ti,N,V_parentID
T@"CKServerChangeToken",C,N,V_lastPrivateDatabaseServerChangeToken
_cacheTabGroup:
T@"CKShare",C,N,V_shareRecord
_createIfNeeded
T@"NSArray",C,N,V_bookmarks
_dateAddedField
T@"NSArray",C,N,V_pinnedTabs
_deleteBookmark:leaveTombstone:
T@"NSArray",C,N,V_windowStates
_didFinishSetup
T@"NSArray",R,C,N
_fetchBookmarkIDsInFolder:onlyFolders:includingHiddenBookmarks:
T@"NSArray",R,C,N,V_overflowRemoteTabs
_folderIDToAddedChildrenChanges
T@"NSArray",R,D,N
_hasShareRecord
T@"NSData",C,N,V_iconData
T@"NSData",R,C,N,V_sessionStateData
_isSelectedFavoritesFolderField
T@"NSDate",&,N,V_dateClosed
_locale
T@"NSDate",R,C,N,V_lastVisitTime
_migrateWindow:
T@"NSDictionary",C,N
_openedFromLink
T@"NSDictionary",C,N,V_tabGroupsToActiveTabs
_pendingCleanup
T@"NSDictionary",R,C,N,V_queuedNavigation
_record
T@"NSNumber",C,N
_reorderTabGroup:afterTabGroup:
T@"NSNumber",R,C,N
_rootFolderHiddenChildrenClause
T@"NSObject<OS_xpc_object>",R,N,V_connection
_setOrderIndex:
T@"NSSet",C,N,V_auxiliaryRecordIDsToDelete
_shared
T@"NSString",C,D,N
_stringForType:
T@"NSString",C,N,V_activeTabGroupUUID
_syncStateField
T@"NSString",C,N,V_deviceIdentifier
_uuidToTabCache
T@"NSString",C,N,V_serverID
addedBookmarksInBookmarkFolder:
T@"NSString",R,C,N
allTabs
T@"NSString",R,C,N,V_address
bookmarkAtPath:
T@"NSString",R,C,N,V_domain
bookmarkWithID:
T@"NSString",R,C,N,V_pinnedPageTitle
containsObject:
T@"NSString",R,C,N,V_title
createBookmarkWithTitle:url:inListWithIdentifier:atIndex:reply:
T@"NSString",R,N
dealloc
T@"NSURL",C,N
deleteBookmark:
T@"NSURL",R,N
deleted
T@"WBBookmarkDatabaseSyncData",R,C,N
didNotSaveRecordsAfterMigration
T@"WBBrowserState",R,N
emptyChangeSetCompletionHandler
T@"WBFeatureManager",R,N
favoritesFolder
T@"WBLocalTabAttributes",R,N
fileURL
T@"WBMutableTabGroup",R,N,V_privateTabGroup
iconURLProvider
T@"WBReusableTabManager",R,N
initWithDictionaryRepresentation:localTabGroup:privateTabGroup:
T@"WBSCRDTGeneration",&,N
initWithTitle:address:parentID:deviceIdentifier:collectionType:
T@"WBSCRDTPosition",&,N,V_position
initWithTitle:uniqueIdentifier:
T@"WBSCRDTPosition",C,N
insertTabs:inTabGroup:afterTab:
T@"WBSCRDTPosition",R,C,N,V_position
isEmpty
T@"WBTab",R,N
isLocal
T@"WBTabCollection",R,N,V_tabCollection
isNamed
T@"WBTabGroupManager",R,N,V_tabGroupManager
isProxy
T@"WBWebFilterSettings",R,N
isTabSuspended:
T@"WBWindowState",R,N
labelWithTitle:
T@"WebBookmark",&,N
mergeWithField:
T@"WebBookmark",R,N
moveBookmark:fromIndex:toIndex:
T@"WebBookmark",R,N,V_originalBookmark
T@"WebBookmarkCollection",R,N
numberWithLong:
T@"WebBookmarkList",&,N,V_shadowBookmarkList
privateBrowsing
T@"WebBookmarkList",R,N
recordIDForTab:
T@?,C,D,N
removeTabGroup:
T@?,C,N,V_startBackgroundTaskAssertionBlock
safari_boolForKey:defaultValue:
TB,D,N,GisHidden
saveAndMoveBookmark:toFolderID:
TB,D,N,GisShared
sceneID
TB,D,N,GwasAdded
setAddress:incrementGeneration:
TB,D,N,GwasMoved
setDay:
TB,N,G_listensForMetaDataChangeNotification,S_setListensForMetaDataChangeNotification:,V_listensForMetaDataChangeNotification
setExtraAttributesValue:forKey:
TB,N,GisAddedLocally
setPreviewText:
TB,N,V_didNotSaveRecordsAfterMigration
setSyncableURL:
TB,N,V_isDeletingRecordZone
setWithObjects:
TB,N,V_newlyCreated
stringByAppendingPathComponent:
TB,N,V_skipsExternalNotifications
stringByResolvingSymlinksInPath
TB,R
subtype
TB,R,N
syncKey
TB,R,N,GhasCompletedMigration
topLevelDuplicateBookmarksCount
TB,R,N,GisDeleted
TB,R,N,GisFolder,V_folder
wb_privacyPreservingDescription
TB,R,N,GisHidden
windowWithUUID:
TB,R,N,GisInserted
TB,R,N,GisInserted,V_inserted
TB,R,N,GisLocal,V_local
TB,R,N,GisMerging
TB,R,N,GisOfflineReadingListAvailable,V_offlineReadingListAvailable
TB,R,N,GisPersistent
TB,R,N,GisPinnable
TB,R,N,GisPinned,V_pinned
TB,R,N,GisPrivateBrowsing
TB,R,N,GisPrivateBrowsing,V_privateBrowsing
TB,R,N,GisShared
TB,R,N,GisShared,V_shared
TB,R,N,GisShowingReader,V_showingReader
TB,R,N,GisSyncable
TB,R,N,GisSyncable,V_syncable
TB,R,N,GisTransactionCurrentlyActive
TB,R,N,GisWebFilterEnabled
TB,R,N,GwasAdded,V_added
TB,R,N,GwasModified,V_modified
TB,R,N,GwasMoved,V_moved
TB,R,N,GwasOpenedFromLink,V_openedFromLink
TB,R,N,V_createIfNeeded
TB,R,N,V_favoritesFolderSelectionShouldSync
TB,R,N,V_foundDuplicates
TB,R,N,V_hasShareRecord
TB,R,N,V_isDisposable
TB,R,N,V_isMuted
TB,R,N,V_isPinned
TB,R,N,V_isReadonly
TB,R,N,V_isSafeToLoadWebPage
TB,R,N,V_syncAllowed
TI,R,N
TQ,N
TQ,N,V_maximumTabsPerGroup
TQ,N,V_maximumTabsPerTabGroup
TQ,N,V_minimumAPIVersion
TQ,N,V_minimumSyncAPIVersion
TQ,N,V_modifiedAttributeMask
TQ,N,V_modifiedAttributes
TQ,N,V_usage
TQ,R
TQ,R,N
TQ,R,N,V_allDuplicateBookmarksCount
TQ,R,N,V_tabIndex
TQ,R,N,V_topLevelDuplicateBookmarksCount
Td,R,N,V_readerViewTopScrollOffset
Ti,D,N
Ti,N
Ti,N,V_associatedBookmarkID
Ti,N,V_bookmarkID
Ti,N,V_identifier
Ti,N,V_specialFolderID
Ti,N,V_syncLockFileDescriptor
Ti,R,N
Ti,R,N,V_changeType
Ti,R,N,V_folderID
Ti,R,N,V_id
Ti,R,N,V_parentID
Ti,R,N,V_readingListBookmarkID
Ti,R,N,V_specialID
Tq,D,N
Tq,N
Tq,N,V_kind
Tq,N,V_state
Tq,N,V_storeOwner
Tq,N,V_syncNotificationType
Tq,R,N
Tq,R,N,V_accessLevel
Tq,R,N,V_changeType
Tq,R,N,V_collectionType
Tq,R,N,V_localRecordGeneration
Tq,R,N,V_storeOwner
Tq,R,N,V_subtype
Tq,R,N,V_taskType
URLByDeletingLastPathComponent
URLWithString:
UTF8String
UUID
UUIDString
XPCDictionaryRepresentation
_UUID
_accessLevel
_activeParticipantIDs
_activeParticipantsFromParticipantData:
_activeTabGroupUUID
_addActiveTabsToWindowState:
_addBookmarkWithTitle:address:parentID:orderIndex:isFolder:externalUUID:associatedBookmark:updateParentChildCount:updateAncestorEntries:incrementGenerations:
_addBookmarksForReadingListMatchStatement:normalizedQuery:toArray:maxResults:
_addChange:
_addChildrenOfID:toCollection:recursive:error:
_addReadingListItemWithURL:title:previewText:
_addTabUUIDsFromGroup:toSet:
_added
_addedLocally
_address
_addressFromURL:
_allDuplicateBookmarksCount
_allowedSiteBookmarkWithTitle:address:
_ancestorTabUUIDs
_appendDuplicateBookmarkGroupsInBookmarks:toGroups:considerBookmarksWithSyncDataAsUnique:davHomePath:
_applyInMemoryChange:fromChangeSet:updatedBookmarks:
_applyInMemoryChanges:postChangeNotification:
_archiveStatus
_arrayForDifferenceCalculation
_associatedBookmarkID
_associatedIDToChanges
_attemptCurrentTask
_attemptToLockSyncAndNotifyDelegateOnFailure:
_attributesForField:
_auxiliaryRecordIDsToDelete
_auxiliaryRecords
_backgroundImageModifiedField
_backgroundTaskAssertionToken
_bookmark
_bookmark:hasCurrentDAVHomePath:
_bookmark:hasPriorityOverBookmarkForDeduplication:prioritizeBookmarksWithSyncData:davHomePath:
_bookmark:isDuplicateOfBookmark:
_bookmarkAtIndex:paginate:
_bookmarkCount
_bookmarkDictionaryForSqliteRow:recursive:error:
_bookmarkHasSyncedToServer:
_bookmarkID
_bookmarkIDToChanges
_bookmarkUUIDsInFolderWithID:
_bookmarks
_bookmarksForTabs:
_bookmarksForTabs:syncable:
_bookmarksFromItems:
_bookmarksFromStatementSelectingIDs:withQuery:
_bookmarksIDsFromBookmarks:fromChangeSet:withFilter:
_cachedImmutableTabs
_cachedPinnedTabsFolderID
_cachedPrivatePinnedTabsFolderID
_cachedWBSyncData
_cancelMonitoringMetaDataFile
_changeType
_changeTypeDescription
_changedAttributeDescription
_changes
_checkDatabaseIntegrity
_childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:
_childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:countShouldUseNumChildrenIfPossible:
_childrenOfParentBookmarkAreUnsyncable:
_cleanUp
_cleanupTimer
_clearAllSyncData
_clearAllSyncKeys
_clearAllTombstones
_clearAllTombstonesDuringOrBeforeLocalRecordGeneration:
_clearAndCreateAncestorTable
_clearAndCreateBookmarksTables
_clearAndCreateBookmarksTitleWordTable
_clearCachedFavoritesFolderIdentifier
_clearChangeList
_clearLocalTabGroupsRetryTimer
_clearLocalTabGroupsWithCompletionHandler:
_clearLocalTabGroupsWithCompletionHandler:retryCooldown:
_clearRemoteTabGroupsWithCompletionHandler:
_clearSyncDataAfterICloudKeychainReset
_clearSyncKeysUnderBookmarkID:isFolder:
_clearTitleWordsForBookmarkID:
_clearTombstoneForBookmark:
_clientConnections
_cloudKitLocalMigrationState
_cloudKitSyncMetadataFileNameWithCollectionType:
_coalesceChangesForChangeIfNeeded:
_collectChangesOfType:withClause:intoArray:
_collection
_collectionWithConfiguration:checkIntegrity:
_commonInit
_configuration
_connection
_connectionQueue
_copyWithZone:isMutable:
_countShouldUseNumChildrenIfPossible
_createDatabaseQueue
_createFreshDatabase
_createInMemoryChangeSet
_createOrLoadMetaData
_createRecoveredBookmarksFolderIfNeeded
_createSchema
_createSpecialFolderWithIDIfNeeded:
_createSpecialTabsFolderWithUUIDIfNeeded:
_createSpecialTabsFolderWithUUIDIfNeeded:withParentID:
_createTopScopedBookmarkListForTabGroup:
_creationDeviceIdentifier
_cullReadingListBookmarksList:toSize:
_currentRetryCount
_currentTask
_currentTaskAttemptDidFinishWithError:
_currentTransaction
_customQuery
_cyclerRepresentationOfTab:
_cyclerRepresentationOfTabGroup:
_databaseLockAcquisitor
_databasePath
_databaseQueue
_databaseTitleForSpecialID:
_dateClosed
_dateCreated
_dateLastViewedField
_deduplicateBookmarksForBookmarkDAVWithHomeURL:
_deduplicateBookmarksForSyncingAndTrackChanges:considerBookmarksWithSyncDataAsUnique:
_deduplicateBookmarksWithRootFolder:depth:trackChanges:considerBookmarksWithSyncDataAsUnique:davHomeURL:
_defaultDatabaseFileNameForConfiguration:
_delegate
_deletable
_deleteAllLocalTabsAndGroups
_deleteAllWindowStates
_deleteAncestorTableEntriesForBookmarkID:
_deleteAndRebuildAncestorTableRecords
_deleteBookmark:leaveTombstone:insertTombstoneBlock:
_deleteBookmark:postChangeNotification:forApplyingInMemoryChanges:
_deleteBookmarkInMemory:
_deleteBookmarks:leaveTombstone:
_deleteIconForBookmark:
_deleteItems:leaveTombstones:
_deleteMatchingWindows:logAsError:
_deleteRecursively:descendantsOnly:
_deleteSyncPropertyForKey:
_deleteTab:reply:
_deleteTabGroup:reply:
_deleteWindowState:
_deleteWindowState:forApplyingInMemoryChanges:
_deleteWindowsNotInLastSession
_deletedTabs
_descriptionForScopedBookmark:
_deviceClass
_deviceIdentifier
_deviceIdentifierForCloudKitWithCollectionType:
_didNotSaveRecordsAfterMigration
_didRemoveTabGroups:updateTabGroups:
_didUpdateStartPageBackgroundImageVisibilityWithRecord:
_dirty
_displayTitleProvider
_displayingStandaloneImage
_dupicateBookmarks
_dupicateBookmarksToKeep
_editable
_enableAutoVacuum
_enableForeignKeys
_encounteredErrorWhileObtainingUUID
_enqueueTask:
_ensureFolderChildrenCount:
_entitlementLookupCache
_enumerateBookmarksForMatchStatement:normalizedQuery:usingBlock:
_enumerateContentsOfBookmarkFolder:includingSubfolders:usingBlock:
_enumerateSyncObserversUsingBlock:
_errorForMostRecentSQLiteError
_errorForMostRecentSQLiteErrorWithErrorCode:
_executeSQL:
_executeSQLWithCString:
_extraAttributes
_extraPositionData
_fastFetchBookmarksInBookmarkFolder:includingHiddenBookmarks:
_fastFetchBookmarksInBookmarkFolder:includingInMemoryChanges:
_fastFetchBookmarksInBookmarkFolder:options:offset:limit:
_fastFetchBookmarksInBookmarkFolder:options:offset:limit:includingInMemoryChanges:
_favoritesFolderIdentifier
_favoritesFolderSelectionShouldSync
_fetchedIconData
_fieldWithValue:generationKey:modifiedAttributes:syncData:
_fieldWithValueProvider:valueUpdater:generationKey:modifiedAttributes:syncData:
_fieldsForAttributes:
_fieldsWriteLock
_fileMonitor
_fileURL
_filterBookmarks:
_finalizeStatementIfNotNull:
_finishBackgroundTaskAssertionBlock
_finishCurrentTask
_firstBookmarkWithURLMatchingString:prefixMatch:inParent:
_firstOrLastServerIDInFolderWithServerID:isFirst:
_firstReconnectionAttemptDate
_firstServerIDInFolderWithServerID:
_fixLastSelectedTabIfNeeded
_fixLocalBookmarksInSyncableFolders
_folderContentsDidChangeNotificationName
_folderID
_folderIDToChildrenChanges
_folderIDToDeletedChildrenChanges
_folderIDToModifiedChildrenChanges
_folderIDToReorderedChildrenChanges
_foundDuplicates
_generateNewServerIDForBookmark:
_generatePositionForTabGroup:afterTabGroup:
_generateServerIdIfNeededForTabGroup:
_generateServerIdIfNeededForTabGroupBookmark:
_generateSyncPositionForOrderIndex:inFolderWithID:direction:
_generations
_handleIncomingConnection:
_handler
_iconData
_iconURLField
_identifier
_importBookmarksPlist:
_importSyncAnchorPlist:
_inMemoryAddedChildrenCountForBookmarkFolder:collection:skipCountingBookmarksThatAreDeletedInMemory:
_inMemoryChangeSet
_includeDescendantsAsChildren
_includeHidden
_incrementGeneration
_incrementRecordGeneration
_indexAllTitleWords
_indexBookmarkID:title:
_init
_initForCopy
_initWithDomain:
_initWithDomain:usage:
_insertAncestorTableEntriesForBookmarkID:withAncestorIDs:
_insertAncestorTableEntriesForBookmarkID:withParentID:
_insertBookmark:afterBookmark:inFolderWithID:
_insertItems:inParentWithID:afterItem:
_insertItemsIntoPlace:inParentWithID:
_insertTabGroup:afterTabGroup:isMove:
_insertTombsonesRecursivelyForRootFolder:insertTombstoneBlock:
_insertTombsonesRecursivelyHelperCurrentDepth:folder:insertTombstoneBlock:
_insertTombstoneWithServerID:syncData:
_inserted
_intFromExecutingSQL:
_internalQueue
_isDatabaseWriteAllowed
_isDeletingRecordZone
_isDisposable
_isKnownPerSiteSetting:
_isLockedSync
_isMutable
_isMuted
_isPinned
_isReadonly
_isSafeToLoadWebPage
_isShowBackgroundImageEnabled
_isTombstoneWithServerID:
_itemSyncPositionComparator
_kind
_labelField
_labelGenerationKey
_lastBookmarkIDForAddingInMemoryBookmark
_lastChangeID
_lastObservedLocalMigrationState
_lastPrivateDatabaseServerChangeToken
_lastSelectedChildField
_lastSelectedTabUUID
_lastServerIDInFolderWithServerID:
_lastSessionBrowserState
_lastSharedDatabaseServerChangeToken
_lastVisitTime
_lazyStartPageSectionsManager
_listOfScopedBookmarkFoldersInTabGroup:
_listQueryType
_listenerConnection
_listensForMetaDataChangeNotification
_loadBookmarksForDifferenceFromList:
_local
_localAttributes
_localRecordGeneration
_localTabGroup
_localTabGroupsByUUID
_localTabsByUUID
_locationField
_lock
_lockAcquired
_lockSync
_lockSyncHoldRequestorPointers
_logErrorWithMessage:result:
_markBookmarkID:added:
_markBookmarkID:withSpecialID:
_markSpecialBookmarks
_markTabsClosed:
_maxRetryCount
_maximumTabsPerGroup
_maximumTabsPerTabGroup
_mergeBookmark:withOriginalBookmark:prioritizeOriginalBookmarkAttributes:generateChangesIfNeeded:
_mergeBookmarkIntoPersistedBookmark:forAttributes:
_mergeCandidateBookmarkWithTitle:address:parent:mergeMode:
_mergeCandidateFolderWithTitle:parent:mergeMode:
_mergeChildrenOfID:referencingBase:error:
_mergeFields:withFields:forBookmark:
_mergeMode
_messageHandlers
_metaDataDidChange:
_metaDataFileChanged:
_migrateBookmarksPlist:syncAnchorPlist:
_migrateSchemaVersion0ToVersion1
_migrateSchemaVersion10ToVersion11
_migrateSchemaVersion11And12And13ToVersion14
_migrateSchemaVersion14ToVersion15
_migrateSchemaVersion15ToVersion16
_migrateSchemaVersion16AndVersion17AndVersion18ToVersion19
_migrateSchemaVersion19And20ToVersion21
_migrateSchemaVersion1And2ToVersion3
_migrateSchemaVersion21ToVersion22
_migrateSchemaVersion22ToVersion23
_migrateSchemaVersion23ToVersion24
_migrateSchemaVersion24ToVersion25
_migrateSchemaVersion25ToVersion26
_migrateSchemaVersion26ToVersion27
_migrateSchemaVersion27ToVersion28
_migrateSchemaVersion28ToVersion29
_migrateSchemaVersion29ToVersion30
_migrateSchemaVersion30ToVersion31
_migrateSchemaVersion31ToVersion32
_migrateSchemaVersion32ToVersion33
_migrateSchemaVersion33ToVersion34
_migrateSchemaVersion34ToVersion35
_migrateSchemaVersion35ToVersion36
_migrateSchemaVersion36ToVersion37
_migrateSchemaVersion37ToVersion38
_migrateSchemaVersion38ToVersion39
_migrateSchemaVersion39Or40ToVersion41
_migrateSchemaVersion3ToVersion4
_migrateSchemaVersion41ToVersion42
_migrateSchemaVersion42ToVersion43
_migrateSchemaVersion43ToVersion44
_migrateSchemaVersion44ToVersion45
_migrateSchemaVersion45ToVersion46
_migrateSchemaVersion46ToVersion47
_migrateSchemaVersion47ToVersion48
_migrateSchemaVersion48ToVersion49
_migrateSchemaVersion49ToVersion50
_migrateSchemaVersion4ToVersion5
_migrateSchemaVersion50ToVersion51
_migrateSchemaVersion5ToVersion6
_migrateSchemaVersion6ToVersion7
_migrateSchemaVersion7ToVersion8
_migrateSchemaVersion8ToVersion9
_migrateSchemaVersion9ToVersion10
_migrateToCurrentSchema
_migrateWindowState:
_minimumAPIVersion
_minimumSyncAPIVersion
_minimumSyncAPIVersionField
_modified
_modifiedAttributeMask
_modifiedAttributes
_modifyExtraReadingListAttributes:
_modifyLocalReadingListAttributes:
_moveBookmark:fromIndex:toIndex:
_moveBookmark:toFolderWithID:
_moveBookmark:toFolderWithID:detectCycles:
_moveBookmark:toFolderWithID:orderIndex:detectCycles:incrementGeneration:shouldMerge:generateSyncPositionIfNeeded:
_moveBookmarkAtIndex:toIndex:
_moved
_needsDeduplicationForBookmarkDAVWithHomeURL:
_needsSyncUpdate
_newlyCreated
_nextInMemoryPositionChangeID
_normalizeDatabaseURLs
_normalizeSearchString:
_normalizeUserTypedString:
_notifyScopedBookmarkChangesInFolderWithID:
_numberOfReconnectionAttempts
_observers
_offlineReadingListAvailable
_openDatabaseAtPath:checkIntegrity:error:
_orderBy
_orderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:
_orderIndex
_orderIndexForBookmarkInsertedIntoParent:insertAtBeginning:
_orderedWhereClauseForArchiveMode:
_orderedWhereClauseForArchiveMode:automaticArchivingEnabled:
_originalBookmark
_overflowRemoteTabs
_parentID
_parentIdentifiersOfBookmarksNeedingIcons
_participantDataForTab:
_participants
_perSitePreferencesStore
_performMergeForTabGroups:resultHandler:
_performNextTask
_performOSVersionUpgradesFromPreviousVersion:
_performSafariVersionUpgradesFromPreviousVersion:
_performWithMutableTabs:
_pinnedPageTitle
_pinnedPageURL
_pinnedTabs
_plistURL
_position
_positionAfterBookmark:
_positionAfterOrderIndex:inFolderWithID:
_positionBeforeBookmark:
_positionBeforeOrderIndex:inFolderWithID:
_positionGenerator
_postBookmarksChangedSyncNotification
_postBookmarksChangedSyncNotificationOnSyncQueue
_postBookmarksDidReloadNotification
_postBookmarksDidReloadNotificationAndStartReadingListFetcherIfChangesWereMade
_postBookmarksFolderContentsDidChangeNotification:
_postBookmarksSpecialFoldersDidChangeNotification
_postSyncNotificationWhenUnlocking
_postWebBookmarkMetaDataChangeDistributedNotification:
_prefixSearch:usingColumns:maxCount:
_preparePrefixesFromNormalizedString:
_previewTextField
_primaryBookmarkCount
_primaryCollection
_primaryRecordZoneID
_private
_privateBrowsing
_privatePinnedTabs
_privateTabGroup
_query
_queryWithOrderBy
_queue
_queuedNavigation
_rangeOfNextToken
_readOnly
_readPersistedChanges
_readPropertiesOfBookmark:
_readerViewTopScrollOffset
_readingListBookmarkID
_readingListItemsWhere:filteredBy:withInMemoryFilter:
_readingListPropertyNamed:
_rebuildAncestorTable
_recalculateCachedChildrenCountAndOrderIndices
_recentlyAddedTabGroupsAwaitingFirstStartPage
_recordIDsToRefresh
_recordZoneIDsToHashGenerators
_recordZoneIDsToLastServerChangeTokens
_referenceToTabWithUUID:
_regenerateSyncPositionsIfNeeded
_registerForSyncBookmarksFileChangedNotification
_reindexBookmarkID:title:
_reloadTabGroupsWithResultHandler:
_remoteObjectProxy
_removeAllChanges
_removeChange:
_removeCorruptedBookmarksDatabaseAtPath:
_removeDirectoryAtPath:
_removePlaceholderTabGroupRecordsOnUpgrade
_removedTabGroupsByUUID
_removedTabsByUUID
_reorderBookmark:toIndex:
_reorderBookmark:toIndex:generateSyncPositionIfNeeded:
_reorderBookmarkIntoPlace:
_reorderItem:afterItem:
_reorderItemIntoPlace:
_rerunMigrationsIfNecessary
_restoreBookmarkBarIfMissing
_restoreMissingSpecialBookmarksWithChangeNotification:
_restoreOrMergeAllowedSitesFolderAndContentsWithWebFilterAllowedSites:ensureChildCount:postChangeNotification:
_restoreOrMergeReadingListFolderWithChangeNotification:
_resumeMonitoringMetaDataFile
_retryCount
_retryTimerFired:
_reusableTab
_reusing
_reverseOrderIndex:
_rootBookmark
_rootServerIDForRecordZoneID:
_safariFetcherServerProxy
_saveActiveTabID:inTabGroupWithID:windowID:
_saveAndMoveBookmark:toFolderID:
_saveAndMoveBookmark:toFolderID:orderIndex:
_saveAndMoveBookmarks:toFolderID:
_saveBookmark:startReadingListFetcher:forApplyingInMemoryChanges:
_saveBookmark:withSpecialID:updateGenerationIfNeeded:
_saveBrowserState:
_saveItem:
_saveItems:
_saveTabGroupRecordsWithMissingCKShareRecord
_saveWindowState:
_saveWindowState:activeTabGroupID:localTabGroupID:privateTabGroupID:
_saveWindowState:forApplyingInMemoryChanges:
_sceneID
_scheduleCleanup
_selectBookmarksWhere:
_selectBookmarksWhere:returnType:
_serialQueue
_serverConnection
_serverID
_serverIDAfterServerID:
_serverIDAtOrderIndex:inFolderWithServerID:
_serverIDBeforeServerID:
_serverIDForBookmarkID:
_serverIDForBookmarkID:generateIfNeeded:
_serverIDOfSiblingBookmarkWithServerID:immediatelyBeforeOrAfter:
_sessionStateData
_setHidden:
_setInserted:
_setListensForMetaDataChangeNotification:
_setLocalURLString:
_setMergeMode:
_setModifiedAttributesIfSupported
_setParentID:
_setParentID:incrementGeneration:
_setPropertiesFromTabGroup:
_setSyncData:cachedWBSyncData:
_setSyncData:forBookmark:
_setSyncKey:forBookmark:
_setSyncNotificationType:
_setSyncable:
_setTitle:forTabGroupWithUUID:reply:
_setUUID:
_setUpConnection
_setUpConnectionIfNeeded
_setUpFieldsWithLabel:lastSelectedChild:location:syncData:
_setUpSyncObserverIfNeeded
_setUpWithPlistURL:readOnly:queue:
_setUsedForInMemoryChangeTracking:
_settingForValue:
_settingsGateway
_setupCompletionHandler
_setupFinished
_setupInMemoryChangeSet
_setupWithPath:checkIntegrity:
_setupWithPath:migratingBookmarksPlist:syncAnchorPlist:checkIntegrity:
_shadowBookmarkList
_shareRecord
_shareRecordForTabGroup:
_shouldAttemptToReconnect
_shouldEnqueueTask:
_showingReader
_simulateCrashWithDescription:
_sizeForFileOrDirectory:withAttributes:
_skipOffset
_skipsExternalNotifications
_specialFolderID
_specialID
_specialIDForBookmarkBeingSaved:
_specialIDForBookmarkTitle:
_specialTabFolderUUIDs
_specialTabFolderUUIDsForQueries
_specialTabsWithUUID:
_sqliteInConditionForInMemoryModifiedBookmarksInFolder:collection:
_sqliteNotInConditionForInMemoryModifiedAndDeleted:bookmarksInFolder:collection:
_sqliteStatementWithQuery:
_sqliteStatementWithQuery:runInBlock:
_startBackgroundTaskAssertionBlock
_startMonitoringSyncStatusWithCompletionHandler:
_startMonitoringTabGroupUpdateExpectingMigration:completionHandler:
_startOfUnclassifiedRangeBeforeNextToken
_startPageSectionOrder
_startReadingListFetcher
_startTimerWithTimeout:retryInterval:
_state
_stopTimer
_storeOwner
_stringForReadingListArchiveStatus:
_stringLength
_subtype
_syncAdd:toParent:withOrderIndex:error:
_syncAgentDidLaunch:
_syncAgentNotificationObserver
_syncAllowed
_syncData
_syncDataBlobForBookmarkServerID:
_syncDataForBookmarkID:
_syncDataForBookmarkServerID:
_syncFlags
_syncKey
_syncKeysForServerIDs:
_syncLockFileDescriptor
_syncLockFileName
_syncNotificationType
_syncObserverQueue
_syncObservers
_syncPropertyExistsForKey:
_syncSetString:forKey:updatedExistingKey:
_syncType
_syncable
_syncableTabGroupsByUUID
_syncableTabsByUUID
_tabBeforeIndex:inGroup:
_tabCacheForTabGroup:
_tabClass
_tabCollection
_tabGroupBeforeIndex:
_tabGroupCacheForTabGroup:
_tabGroupManager
_tabGroupSyncDidFinish:
_tabGroupUUID
_tabGroupUpdateObserver
_tabGroupWithID:
_tabGroupWithIdentifier:
_tabGroupWithUUID:
_tabGroups
_tabGroupsToActiveTabs
_tabIndex
_tabWithIdentifier:
_tabWithUUID:
_tabs
_tabsByUUID
_taskType
_tasks
_test_preventPeriodicallyApplyingInMemoryChangesToDatabase
_timeout
_timeoutTimer
_timer
_title
_titleWordPrefixes
_titleWordPrefixesForInMemoryFiltering
_topLevelDuplicateBookmarksCount
_topScopedBookmarkListForTabGroup:onQueue:
_topScopedBookmarkListServerIdForTabGroup:
_trackChangesInMemoryIfDatabaseWriteIsNotAllowed
_triggerTabGroupSync
_trimmedPreviewText:
_trimmedTitle:
_uncacheTab:
_uncacheTabGroup:
_uniqueExternalUUID
_unlockSync
_unlockSyncRequested
_unsafeOpenDatabaseAtPath:checkIntegrity:error:
_unsafeOrderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:
_updateBookmarkSyncPositionIfNeeded:
_updateBookmarkWithURL:shouldSync:
_updateBookmarks:inFolderWithID:
_updateCachedChildCountForParentID:inDirection:
_updateCachedImmutableTabsIfNeeded
_updateDatabaseIfNewerOSVersionWasLaunched
_updateDatabaseIfNewerSafariVersionWasLaunched
_updateDatabaseIfNewerVersion:wasLaunchedForSyncStringKey:upgradeSelector:versionType:
_updateExtraAttributeValuesUsingBlock:
_updateExtraAttributesUsingBlock:
_updateHiddenAncestorCountForBookmarksUnderFolderID:addingOffset:
_updateItems:inParentWithID:
_updatePerSiteSettingsWithRecord:
_updatePerSiteSettingsWithRecord:completionHandler:
_updatePinnedTabs:privatePinnedTabs:
_updatePositionsForTabsInTabGroup:
_updateStartPageBackgroundImageWithRecord:
_updateStartPageSectionOrder:
_updateStartPageSectionVisibilityWithIdentifier:record:
_updateSyncNotificationType
_updateTabLookupTable
_updateToAccessLevel:
_urlFilter
_usage
_usedForInMemoryChangeTracking
_userSettings
_userVersion
_usesCloudKit
_uuid
_uuidForQueries:
_verifyAllTablesExist:
_waitForTabGroups
_wb_stringByDeletingTrailingSlash
_wb_stringByStandardizingDAVServerID
_wb_userVisibleString
_webBookmarkCollectionClass
_webBookmarks_hasCaseInsensitivePrefix:
_webBookmarks_isHTTPFamilyURL
_webFilterStatus
_web_bestURLForUserTypedString
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
_web_pathWithUniqueFilenameForPath:
_web_possibleURLPrefixesForUserTypedString
_web_removeFileOnlyAtPath:
_websiteDataRecord
_windowIDForUUID:
_windowStates
_windowStatesWithFilter:
_windowUUID
_windowWithBookmark:
_windows
_wordTokenizer
absoluteString
acceptShareForURL:invitationTokenData:completionHandler:
acceptanceStatus
accessLevel
accountHash
acquireLockWithTimeout:
acquireLockWithTimeout:retryInterval:
activeParticipantIDs
activeParticipantsDidUpdateInTabGroupWithUUID:
activeParticipantsDidUpdateInTabWithUUID:
activeParticipantsInTab:
activeParticipantsInTabGroup:
activeParticipantsInTabGroupWithServerID:
activeParticipantsInTabWithServerID:
activeTabGroup
activeTabGroupUUID
activeTabUUIDForTabGroupWithUUID:
addBookmarkInMemory:toFolderWithID:
addChange:
addChanges:
addCharactersInRange:
addChild:
addDuplicateBookmark:replaceOriginal:
addDuplicateBookmarkToKeep:
addEntriesFromDictionary:
addIndex:
addItem:underFolderWithServerId:database:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addReadingListItemWithURL:title:previewText:error:
addSyncObserver:
addTabGroupObserver:
addTimer:forMode:
added
addedLocally
adoptAttributesFromTab:
advanceToNextToken
allDuplicateBookmarksCount
allGroupsTabsUUIDs
allKeysForObject:
allObjects
allSections
allSyncingAttributesForBookmark:
allValues
allocWithZone:
allowsScopedBookmarksInTabGroup:
ancestorTabUUIDs
appendFormat:
appendString:
appendTabs:
applicationProxyForIdentifier:placeholder:
applyInMemoryChanges:
applyInMemoryChangesToDatabase
applyModificationsToBookmark:
applyModificationsToBookmarks:
archiveSize
archiveStatus
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayByApplyingDifference:
arrayForKey:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
associatedBookmarkID
attributesMarkedAsModified:
attributesMarkedAsModify:
attributesOfItemAtPath:error:
autorelease
auxiliaryRecordForKey:
auxiliaryRecordIDs
auxiliaryRecordIDsToDelete
backgroundImageAppearanceIsLight
backgroundImageExists
backgroundImageGeneration
backgroundImageModifiedState
backgroundImageModifiedStateProvider
backgroundImageModifiedStateUpdater
beginMergingChangesWithDatabase:
beginSharingTabGroupWithUUID:completionHandler:
beginSyncTransaction
bookmark
bookmarkAddChangeWithBookmark:
bookmarkArray
bookmarkArrayRequestingCount:
bookmarkAtIndex:
bookmarkContainsLeafBookmark:
bookmarkCount
bookmarkID
bookmarkIDForServerID:excludeDeletedBookmarks:
bookmarkIDWithSpecialID:
bookmarkIDsModifiedInMemoryNotPassingFilterFromChangeSet:inFolder:
bookmarkImagesDirectoryPath
bookmarkIsAddedInMemory:
bookmarkIsFavoritesFolder:
bookmarkIsFrequentlyVisitedSite:
bookmarkIsInFavoritesFolder:
bookmarkModifyChangeWithBookmark:
bookmarkRequiresParent:
bookmarkType
bookmarkTypeForChange:
bookmarkTypeWithBookmark:
bookmarkWithID:includingInMemoryChanges:
bookmarkWithServerID:excludeDeletedBookmarks:
bookmarkWithSpecialID:
bookmarkWithUUID:
bookmarks
bookmarksAfterReplayingChangesToBookmarks:inFolderWithID:
bookmarksBarBookmark
bookmarksBarList
bookmarksDictionary
bookmarksInCollection:fromIndex:toIndex:
bookmarksMatchingString:
bookmarksNeedingIcons
bookmarksServerProxy:didStartFetchingReadingListItem:
bookmarksServerProxy:didStopFetchingReadingListItem:
bookmarksServerProxy:didUpdateReadingListFetchingProgress:
bookmarksServerProxyDidFinishFetching:
boolForKey:
boolValue
browserState
bundleIdentifier
bytes
cStringUsingEncoding:
cache:willEvictObject:
callStackSymbols
canCloseAutomaticallyForInterval:
canSetPinned
changeID
changeIsDAVMoveChange:
changeIsMoveChange:
changeList
changeType
changeTypeForChange:
changeWithObject:type:index:
characterAtIndex:
checkResourceIsReachableAndReturnError:
ckShortDescription
class
cleanUpReadingListArchives
cleanUpRedundantPreviewText
clearAllCKRecords
clearAllCloudTabDevices
clearAllGenerationsExceptState
clearAllLastServerChangeTokens
clearAllPageZoomSyncData
clearAllReadingListArchives
clearAllSafariHistoryWithCompletionHandler:
clearAllSyncData
clearAllSyncDataWithDatabase:
clearArchive
clearArchiveSynchronously
clearBookmarksWithOptions:completionHandler:
clearCarrierBookmarks
clearChangesDuringOrBeforeLocalRecordGeneration:
clearChangesForBookmark:
clearChangesForChangeRecords:lastSyncedRecordGeneration:
clearChangesWithChangeToken:database:
clearDeletedTabs
clearDeviceIdentifierWithPlistURL:
clearFrequentlyVisitedSitesFolder
clearModifiedAttributes
clearReadingListArchiveWithUUID:
clearSyncDataAfterICloudKeychainReset
clearTabs
clearTabsForCurrentDevice
clearlAllLocalBookmarksForAutomatedTestingWithDatabase:
closeDatabase:shouldSave:
closeWindowState:
code
collection
collectionType
collectionWithConfiguration:
commitSyncTransaction
compare:
compare:options:
completedMigration
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsWithString:
configuration
conformsToProtocol:
connection
connection:didCloseWithError:
containsCKShareRecord
containsOnlyStockBookmarks
contentFilterListsAllowURL:
contentFilterOverridesEnabled
contentsOfDirectoryAtPath:error:
copy
copyAccountHashWithDatabase:
copyAttributesWithItem:
copyChangeTokenWithDatabase:
copyChangedItemWithChange:
copyChangesWithDatabase:changeToken:
copyDeletedBookmarkSyncDataWithChange:
copyDeviceIdentifier
copyFirstServerIdInFolderWithServerId:database:
copyItemAtURL:toURL:error:
copyItemWithLocalID:database:
copyItemWithServerId:database:
copyLastServerIdInFolderWithServerId:database:
copyLocalIDsInFolderWithLocalID:database:
copyModifiedAttributesWithChange:
copyParentServerIdWithItem:
copySaveURLForAssetWithKey:item:
copyServerIdInFolderAfterServerId:database:
copyServerIdInFolderBeforeServerId:database:
copyServerIdWithChange:
copyServerIdWithItem:
copyServerIdsInFolderWithServerId:database:
copySyncDataWithDatabase:
copySyncDataWithItem:
copySyncKeyWithItem:
copyValueForKey:item:
copyWithValueSource:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countInCollection:
countReadingListBookmarksNeedingArchiveInMode:
countReadingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:
createBookmarkWithType:database:
createDatabase
createDatabaseWithoutLock
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createFolderWithType:database:
createIfNeeded
createLegacyPlaceholderTabGroupBookmarksForSharedTabGroup:
createTopScopedBookmarkListIfNeededForTabGroup:
createWindowsTabGroupsTable
createWindowsTable
creationDeviceIdentifier
currentDeviceIdentifier
currentHandler
currentRecordGeneration
currentTabServerIDPresenceForParticipant:getTabGroupServerID:
currentTabServerIDPresenceForParticipant:inTabGroupWithServerID:
customQuery
customUnifiedFieldText
dataContainerURL
dataRepresentation
dataWithBytes:length:
dataWithContentsOfURL:options:error:
dataWithPropertyList:format:options:error:
databaseHealthInformation
databaseLockAcquisitor:acquiredLock:
databasePath
databasePathForConfiguration:
databaseSyncData
databaseSyncDataInDatabase:databaseAccessor:
databaseSyncDataWithContentsOfData:
date
dateAdded
dateAddedProvider
dateAddedUpdater
dateByAddingComponents:toDate:options:
dateClosed
dateCreated
dateLastArchived
dateLastViewed
dateLastViewedProvider
dateLastViewedUpdater
dateWithTimeIntervalSince1970:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
deduplicateBookmarks
deduplicateBookmarksWithRootFolder:depth:
defaultCenter
defaultDatabaseURL
defaultManager
defaultReadingList
delegate
deletable
deleteAllFavoriteIcons
deleteAllLocalSavedState
deleteAllSafariSecurityOriginsWithCompletionHandler:
deleteAllWindowStates
deleteAllWindows
deleteArchiveForReadingListBookmarkWithID:
deleteBackgroundImageDirectory
deleteBookmark:leaveTombstone:
deleteBookmark:postChangeNotification:
deleteBookmarkInMemory:
deleteBookmarkWithIdentifier:reply:
deleteBookmarks:postChangeNotification:
deleteBookmarksInMemory:inFolder:
deleteChangeWithBookmark:
deleteItems:leaveTombstones:
deleteItems:leaveTombstones:completionHandler:
deleteSafariPersistentURLCacheStorageWithCompletionHandler:
deleteSafariWebsiteDataRecord:completionHandler:
deleteScopedBookmarkWithUUID:
deleteScopedBookmarkWithUUID:completionHandler:
deleteTabs:
deleteWindowState:
deleteWindowStates:
deleteWindowStates:completionHandler:
deletedBookmarkIDsInBookmarkFolder:
deletedTabs
descendantsOfBookmarkFolder:
description
descriptionPreservingPrivacy:
detectDuplicatedTabs
deviceIdentifier
deviceIdentifierForPositionGenerator:
dictionary
dictionaryRepresentation
dictionaryRepresentationForInMemoryChangeTracking
dictionaryWithContentsOfFile:
dictionaryWithContentsOfURL:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
dictionaryWithObjects:forKeys:count:
didAddTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeBackgroundImageInSharedTabGroupWithUUID:byParticipantWithRecordID:
didChangeScopedFavoritesInSharedTabGroupWithUUID:byParticipantWithRecordID:
didDeleteRemoteRecordWithID:
didFetchRecentlyAcceptedSharedTabGroupWithUUID:acceptedShareDate:
didFinishFetching
didInsertIntoTabGroup:
didNavigateInTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didReceiveRemoteCloudSettingsUpdateWithRecord:
didRemoveFromTabGroup
didRemoveTabWithUUID:title:inSharedTabGroupWithUUID:byParticipantWithRecordID:
didStartFetchingReadingListItemWithMessage:
didStopFetchingReadingListItemWithMessage:
didToggleCloudTabs:
didToggleCloudTabs:terminateAfterUpdating:
didUpdateProgressWithMessage:
differenceByTransformingChangesWithBlock:
differenceFromArray:
differenceFromArray:withOptions:
disableSuddenTerminationForPendingChanges
displayTitle
displayTitleProvider
displayingStandaloneImage
distantFuture
domain
doubleValue
duplicate
duplicates
duplicatesToKeep
editable
emptyCompletionHandler
emptyTabsUUIDSet
enabledSectionIdentifiers
encodeBool:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedBookmarkSyncData
encodedData
encodedDatabaseSyncData
encounteredErrorWhileObtainingUUID
enqueueTask:
enumerateBookmarks:andReadingListItems:matchingString:usingBlock:
enumerateDescendantsOfBookmark:usingBlock:
enumerateDescendantsOfBookmarkID:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateReusableTabs:
enumeratorAtPath:
ephemeralTabGroupManager
error
errorWithDomain:code:userInfo:
evictFromTabReuse
exceptionWithName:reason:userInfo:
exchangeOriginalBookmarkWithBookmark:
fastFetchBookmarksInBookmarkList:
favoritesFolderList
favoritesFolderSelectionShouldSync
fetchTopLevelBookmarkList:
fieldForAttribute:
fields
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSize
fileSystemRepresentation
fileType
fileURLWithPath:
finishBackgroundTaskAssertionBlock
finishDecoding
finishMergingChangesWithDatabase:
first
firstObject
firstReadingListBookmarkNeedingArchiveInMode:
firstReadingListBookmarkNeedingArchiveInMode:automaticArchivingEnabled:
firstReadingListBookmarkWithURLMatchingString:prefixMatch:
fixCachedNumberOfChildrenIfNeeded
fixRecoveredBookmarksIfNeeded
floatForKey:
folder
folderHasReplaceChange:
folderID
folderType
folderTypeForChange:
folderTypeWithFolder:
formUnionWithCharacterSet:
frequentlyVisitedSitesFolder
frequentlyVisitedSitesFolderBookmarkID
frequentlyVisitedSitesFolderCreatingIfNeeded:
frequentlyVisitedSitesFolderCreatingIfNeeded:postChangeNotification:
frequentlyVisitedSitesList
fullArchiveAvailable
generatePositionBeforeFirstRecordInParentWithServerID:
generatePositionsForChildRecordNamesGroupedByParentFolders:
generateSyncPositionForBookmark:
generation
generationForKey:
generationKeyForField:
getActiveParticipantsInTab:completionHandler:
getSafariDataUsageByteCountWithCompletionHandler:
getSafariWebDataUsageWithCompletion:
handleFailureInFunction:file:lineNumber:description:
hasBoolEntitlement:
hasCompletedMigration
hasFetchedMetadata
hasGenerationForKey:
hasInMemoryChanges
hasPrefix:
hasSameKindAsTabGroup:
hasShareRecord
hasSuffix:
hash
hashGeneratorForRecordZoneID:
hidden
holdLockSync:
host
htmlString
iconData
iconURLUpdater
identifier
identifierOfBookmarkWithUUID:
inMemoryBookmarkCollectionConfiguration
inMemoryChangeSet
inMemoryChangesFileURL
inMemoryFilter
inMemoryTabCollectionConfiguration
incrementGenerationForKey:withDeviceIdentifier:
incrementGenerationIfNeeded
incrementalVacuumIfNeeded
incrementedGenerationWithDeviceIdentifier:
index
indexOfObject:
indexOfObjectPassingTest:
indexOfReadingListBookmark:countingOnlyUnread:
indexSet
indexesOfObjectsPassingTest:
init
initBuiltinBookmarkWithTitle:address:
initBuiltinDeviceBookmarkWithTitle:address:
initCarrierBookmarkWithTitle:address:
initClientForMachService:
initFolderWithParentID:collectionType:
initFolderWithParentID:deviceIdentifier:collectionType:
initForReadingFromData:error:
initFrequentlyVisitedSiteWithWebBookmark:title:
initListenerForMachService:
initReadingListBookmarkWithTitle:address:previewText:
initReadonlySafariBookmarkCollection
initRequiringSecureCoding:
initSecondarySafariBookmarkCollectionWithName:
initWhiteListBookmarkWithTitle:address:
initWithArray:
initWithArray:copyItems:
initWithBookmark:
initWithBookmark:activeTabGroup:localTabGroup:privateTabGroup:
initWithBookmark:bookmarkID:parentID:associatedBookmarkID:changeType:
initWithBookmark:bookmarkID:parentID:changeType:
initWithBookmark:lastSelectedTabUUID:
initWithBookmark:lastSelectedTabUUID:kind:
initWithBookmark:tabs:lastSelectedTabUUID:
initWithBookmarkCollection:bookmark:
initWithBookmarkCollection:bookmark:changeType:localRecordGeneration:
initWithBookmarkID:parentID:associatedBookmarkID:changeType:
initWithBookmarkID:parentID:changeType:
initWithBookmarks:parentID:changeType:
initWithBookmarks:parentID:specialFolderID:changeType:
initWithBookmarks:specialFolderID:changeType:
initWithBookmarksWhere:folderID:orderBy:usingFilter:
initWithBookmarksWhere:orderBy:usingFilter:
initWithBytes:length:
initWithCString:encoding:
initWithCalendarIdentifier:
initWithCoder:
initWithCollection:
initWithCollectionType:
initWithCollectionType:databasePath:readonly:
initWithCollectionType:databasePath:readonly:createIfNeeded:
initWithCollectionType:storeOwner:
initWithConfiguration:
initWithConfiguration:checkIntegrity:
initWithConfiguration:openDatabase:
initWithConfiguration:openDatabase:checkIntegrity:
initWithConnection:
initWithDataRepresentation:relativeToURL:
initWithDatabaseURL:
initWithDelegate:
initWithDeviceIdentifier:
initWithDeviceIdentifier:generation:
initWithDictionary:copyItems:
initWithDictionaryRepresentation:
initWithDictionaryRepresentationForInMemoryChangeTracking:
initWithDomain:code:userInfo:
initWithFileURL:
initWithFileURL:readPersistedChanges:
initWithFolderID:inCollection:usingFilter:options:
initWithInsertIndexes:insertedObjects:removeIndexes:removedObjects:
initWithLastVisitTime:sessionStateData:ancestorTabUUIDs:displayingStandaloneImage:readerViewTopScrollOffset:readingListBookmarkID:openedFromLink:showingReader:queuedNavigation:
initWithMachServiceName:options:
initWithNotificationName:
initWithObjects:forKeys:
initWithOriginalBookmark:
initWithParentID:position:
initWithPath:migratingBookmarksPlist:syncAnchorPlist:
initWithPinnedTabs:privatePinnedTabs:windowStates:
initWithPinnedTabs:privatePinnedTabs:windows:
initWithPlistURL:readOnly:
initWithQuery:skipOffset:collection:
initWithQuery:skipOffset:collection:queue:
initWithRecordName:zoneID:
initWithReusableTab:
initWithSQLiteStatement:deviceIdentifier:collectionType:
initWithSQLiteStatement:deviceIdentifier:hasIcon:collectionType:
initWithSortValues:
initWithSyncAllowed:
initWithTabCollection:
initWithTabGroupManager:
initWithTabGroupManager:handler:
initWithTitle:address:collectionType:
initWithTitle:address:parentID:collectionType:
initWithTitle:address:parentID:folder:deviceIdentifier:collectionType:
initWithTitle:address:parentID:subtype:deviceIdentifier:collectionType:
initWithTitle:address:pinned:
initWithTitle:url:deviceIdentifier:
initWithTitle:uuid:deviceIdentifier:
initWithTopLevelDuplicateBookmarksCount:allDuplicateBookmarksCount:
initWithURL:title:uniqueIdentifier:
initWithUTF8String:
initWithUUID:
initWithUUID:activeTabGroup:localTabGroup:privateTabGroup:sceneID:
initWithUUID:activeTabGroupUUID:localTabGroup:privateTabGroup:sceneID:windowID:
initWithUUID:deviceIdentifier:
initWithUUID:deviceIdentifier:lastVisitTime:
initWithUUID:sceneID:
initWithUUID:title:url:deviceIdentifier:
initWithUUID:title:url:deviceIdentifier:lastVisitTime:
initWithUUID:title:url:pinned:pinnedTitle:pinnedURL:localAttributes:deviceIdentifier:
initWithUUIDString:
initWithUserName:
initWithValue:generation:deviceIdentifier:
initWithValueSource:valueProvider:valueUpdater:generation:deviceIdentifier:
initWithVersion:safeToLoadWebPage:lastVisitTime:sessionStateData:ancestorTabUUIDs:dateClosed:tabIndex:windowUUID:disposable:pinned:pinnedPageURL:pinnedPageTitle:muted:queuedNavigation:displayingStandaloneImage:readerViewTopScrollOffset:readingListBookmarkID:openedFromLink:showingReader:
initWithWebBookmarkCollectionClass:
initialize
insertItems:inParent:afterItem:completionHandler:
insertItems:inParentWithID:afterItem:
insertItems:inParentWithID:afterItem:completionHandler:
insertItemsIntoPlace:inParent:completionHandler:
insertItemsIntoPlace:inParentWithID:completionHandler:
insertObject:atIndex:
insertScopedBookmark:inScopedBookmarkFolderWithID:afterBookmarkWithUUID:
insertString:atIndex:
insertTab:inTabGroup:afterTab:
insertTabGroup:afterTabGroup:
insertTabs:afterTab:
inserted
insertions
intValue
integerForKey:
integerValue
interfaceWithProtocol:
invalidate
isAddedLocally
isBookmarkDeleted:
isBookmarkVisible:
isBookmarksBarFolder
isBookmarksMenuFolder
isBuiltinBookmark
isCurrentUser
isCustomQuery
isCustomizationSyncEnabled
isDeletable
isDeleted
isDeletingRecordZone
isDisplayingStandaloneImage
isDisposable
isEditable
isEphemeralMultiUser
isEqual:
isEqualToBookmark:
isEqualToDictionary:
isEqualToString:
isFavoritesBarHidden
isFolder
isFrequentlyVisitedSitesFolder
isFullArchiveAvailable
isHidden
isIdentical:
isInMemoryDatabase
isInserted
isKindOfClass:
isLockedSync
isMarkedAsRead
isMemberOfClass:
isMerging
isMinimized
isMutable
isOfflineReadingListAvailable
isPerSiteSettingSyncEnabled
isPersistent
isPinnable
isPinned
isPopupWindow
isPrivateBrowsing
isReadOnly
isReadableFileAtPath:
isReadingListFolder
isReadingListItem
isReadonly
isSafeToLoadWebPage
isSelectedFavoritesFolder
isSelectedFavoritesFolderProvider
isShared
isStartPageSettingSyncEnabled
isSyncAllowed
isSyncable
isTabBarHidden
isTransactionCurrentlyActive
isWebFilterAllowedSitesFolder
isWebFilterEnabled
item:isEqualToItem:
item:isInFolderWithServerSyncId:
itemType
itemTypeForChange:
itemTypeWithItem:
itemsInParentWithID:ofType:
kind
labelField
labelWithAddress:
labelWithPinned:
lastClosedWindowState
lastObject
lastPathComponent
lastPinnedTab
lastPrivateDatabaseServerChangeToken
lastReadGeneration
lastSelectedChildID
lastSelectedTabUUID
lastServerChangeTokenForRecordZoneID:
lastSessionBrowserState
lastSessionWindowStates
lastSharedDatabaseServerChangeToken
lastSyncedRecordGeneration
lastVisitTime
leafChildCountForBookmarksInFolderWithID:
leafChildCountForFoldersInFolderWithID:
length
listWithID:
listWithID:skipOffset:
listWithID:skipOffset:includeHidden:
listWithID:skipOffset:includeHidden:includeDescendantsAsChildren:filteredUsingString:
listWithSpecialID:
listensForMetaDataChangeNotification
local
localAttributesWithLastVisitTime:
localCloudKitMigrationState:
localMigrationState
localPreviewText
localRecordGeneration
localTabGroup
localTitle
localURL
localeSettingsChanged
localizedTitle
locationField
locationWithParentID:
locationWithPosition:
lockFields
lockSync
lockSyncHoldRequestorPointers
logRegulatoryBookmarksRead
longCharacterIsMember:
macZoomPreferences
mainBundle
mainRunLoop
maintainsSyncMetadata
makeObjectsPerformSelector:
markAllFavoritesAsNeedingIcons
markArchivedReadingListItemsAsNonRecoverable
markAsRead
markAttributesAsModified:
markBackgroundImageAsModified
markChildrenInFolderAsRead:
markClean
markSpecial:
markWebContentFilterAllowsAllReadingListItems
maximumTabsPerGroup
maximumTabsPerTabGroup
mergeAttributes:withBookmark:
mergeWithBookmark:
mergeWithBookmarksDictionary:clearHidden:clearSyncData:error:
mergeWithBookmarksDictionary:clearHidden:error:
mergeWithTab:
mergeWithTabGroup:
messageWithName:
methodForSelector:
migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory
minimumAPIVersion
minimumSyncAPIVersion
modified
modifiedAttributeMask
modifiedAttributes
modifiedAttributesOfBookmark:
modifiedAttributesToFieldNames
modifiedBookmarksInBookmarkFolder:
modifiedFields
modifiedSyncingAttributesForBookmark:
modifyBookmarkInMemory:
moveBookmark:toFolderWithID:
moveBookmark:toFolderWithID:orderIndex:
moveBookmarkInMemory:toFolderWithID:
moveBookmarkWithIdentifier:intoListWithIdentifier:atIndex:reply:
moveChangeWithBookmark:toFolderWithID:
moveItemAtPath:toPath:error:
movePresenceForParticipantToTabWithUUID:
moveTabGroup:afterTabGroup:
moveTabs:toTabGroup:afterTab:withoutPersistingTabGroupsWithUUIDStrings:
moved
mutableCopy
mutableCopyWithZone:
mutableDuplicate
mutableTabGroupWithUUID:
mutableTabGroups
mutableTabWithUUID:
mutableTabsForTabGroup:
name
named
needsSecureDelete
newlyCreated
nextBookmarkIDForAddingBookmarkInMemory
nextChangeAfterLocalRecordGeneration:
nextChangeID
nextChangeIDForPositionInPositionGenerator:
nextDatabaseSyncChangeID
nextPageURLs
notifyForSaveOfAssetWithKey:item:
null
numberOfAddedBookmarksInBookmarkFolder:
numberOfReorderedBookmarksInBookmarkFolder:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
observeTabGroupManager:waitForTabGroups:handler:
offlineArchiveDirectoryPath
offlineReadingListAvailable
omitFromUI
openDatabase:
openedFromLink
orderIndex
orderIndexOfBookmark:
orderIndexOfBookmark:withSyncPosition:inFolderWithID:
orderedSet
orderedSetWithArray:
originalBookmark
overflowRemoteTabs
pageZoomSyncDataForRecordName:
parentID
parentIdentifier
parentIdentifierOfBookmarkWithID:
parentRecordID
participants
participants:didJoinSharedTabGroupWithUUID:
participants:didLeaveSharedTabGroupWithUUID:
path
performDatabaseUpdatesWithTransaction:applyInMemoryChanges:secureDelete:
performDatabaseUpdatesWithTransaction:secureDelete:
performDeduplicationWithDatabase:mode:
performMaintenance
performMaintenanceOnDatabase:afterVersion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithFieldsWriteLock:
persistChangesWithCompletion:
persistent
pinnable
pinned
pinnedAddress
pinnedPageURL
pinnedTabWithTitle:url:deviceIdentifier:
pinnedTabs
pinnedTabsFolderID
pinnedTitle
pinnedURL
position
positionBetweenPosition:andPosition:withDeviceIdentifier:changeID:
positionDictionaryRepresentation
positionForBookmarkWithRecordName:
positionFromContentsOfData:
positionGenerator:positionForRecordName:
positionGenerator:recordNameOfBookmarksAfterRecordWithName:
positionGenerator:recordNameOfBookmarksBeforeRecordWithName:
positionSortValueWithChangeID:
postBookmarksDidReloadNotification
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
postSyncNotificationWhenUnlocking
pptTabCollectionConfiguration
prefersSidebarVisible
presenceTabUUIDForParticipant:inTabGroup:
presenceTabUUIDForParticipant:inTabGroupWithServerID:
previewText
previewTextProvider
previewTextUpdater
privacyPreservingDescription
privatePinnedTabs
privatePinnedTabsFolderID
processInfo
propertyListWithData:options:format:error:
punctuationCharacterSet
purge:
purgeableReadingListItems
purgeableSpace
queuedNavigation
rangeOfString:options:
readOnly
readerViewTopScrollOffset
readingListArchivesDirectoryPath
readingListArchivesDiskUsage
readingListBookmarkID
readingListBookmarksMatchingString:maxResults:onlyArchivedBookmarks:
readingListBookmarksNeedingArchiveInMode:
readingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:
readingListFolder
readingListFolderBookmarkID
readingListIconURL
readingListIconUUID
readingListWithUnreadOnly:
readingListWithUnreadOnly:filteredUsingString:
readonlySafariBookmarkCollectionConfiguration
readonlySafariTabCollectionConfiguration
recentlyAddedTabGroupIsAwaitingFirstStartPage:
recentlyAddedTabGroupsAwaitingFirstStartPage
recentlyClosedTabList
recentlyClosedTabs
recentlyClosedWindowStates
record
recordID
recordIDsToRefresh
recordName
recordZoneIDsToHashGenerators
registerWindowState:
releaseLock
reloadItems:
reloadSettings
reloadTabGroupsFromDatabaseWithCompletionHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
removals
removeActiveTabUUIDForTabGroupWithUUID:
removeAllActiveTabUUIDs
removeAllChanges
removeAllDuplicates
removeAllObjects
removeChange:
removeItemAtPath:error:
removeItemAtURL:error:
removeItemWithServerId:database:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectsAtIndexes:
removeObjectsForKeys:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:name:object:
removePersistedInMemoryBookmarkChangesFile
removePreferenceValueWithRecordName:completionHandler:
removePresenceForParticipant:inTabGroupWithServerID:
removeSyncObserver:
removeTab:
removeTabGroupObserver:
removeUnusedPresenceRecords
reorderBookmark:toIndex:
reorderBookmarkInMemory:afterBookmark:
reorderChangeWithBookmark:afterBookmark:
reorderItem:afterItem:
reorderItem:afterItem:completionHandler:
reorderItemIntoPlace:completionHandler:
reorderList:moveBookmarkAtIndex:toIndex:
reorderScopedBookmarkWithUUID:afterBookmarkWithUUID:notify:
reorderTab:afterTab:
replaceBookmarksInMemory:inFolderWithID:
replaceChangeWithBookmarks:inFolderWithID:
replaceChangeWithBookmarks:inFolderWithSpecialID:
replaceCharactersInRange:withString:
replayChangesOnBookmark:
representativeURL
resetDeviceIdentifier
resetDeviceIdentifierForCloudKitWithCollectionType:
respondsToSelector:
restoreOrMergeAllowedSitesFolderAndContentsWithChangeNotification:
resume
retain
retainCount
reusableTab
reuseTabForUUID:
reverseObjectEnumerator
rollOutLastReadingListItem
rollOutReadingListItemIfNeededToMakeRoomForOneNewItem
rollbackSyncTransaction
rollingListOfArchivedReadingListItems
rollingReadingListMaximumCount
rootBookmark
rootList
safariBookmarkCollection
safariBookmarkCollectionConfiguration
safariDirectoryPath
safariTabCollectionConfiguration
safari_allObjectsPassTest:
safari_arrayContainingObjectsOfClass:forKey:
safari_arrayForKey:
safari_arrayWithArray:copyAction:
safari_arrayWithObjectsUnlessNil:
safari_bestURLForUserTypedString
safari_bookmarksRecordZoneID
safari_boolForKey:
safari_browserDefaults
safari_containsObjectPassingTest:
safari_dataForKey:
safari_dateForKey:
safari_dictionaryByMergingWithDictionary:
safari_dictionaryForKey:
safari_encodedSystemFieldsData
safari_encryptedValues
safari_ensureDirectoryExists:
safari_enumerateZippedValuesWithArray:withBlock:
safari_firstObjectPassingTest:
safari_initWithEncodedRecordData:
safari_insertObject:afterObject:
safari_insertObjects:afterObject:
safari_isCloudBackgroundImageRecord
safari_isCloudPerSiteSettingRecord
safari_isCloudSettingRecord
safari_isEmpty
safari_isHTTPFamilyURL
safari_isSafariFamilyApplicationBundle
safari_isSpecialFolderRecordName
safari_isVersionStringBetweenVersionString:andVersionString:
safari_isVersionStringGreaterThanVersionString:
safari_lastObjectPassingTest:
safari_longestIncreasingSubsequenceUsingValues:
safari_mapAndFilterKeysAndObjectsUsingBlock:
safari_mapAndFilterObjectsUsingBlock:
safari_mapObjectsUsingBlock:
safari_normalizedVersion
safari_numberForKey:
safari_objectAfter:
safari_objectBefore:
safari_operatingSystemVersionString
safari_originalDataAsString
safari_privacyPreservingDescription
safari_reduceObjectsWithInitialValue:usingBlock:
safari_removeDeallocationSentinelForObserver:
safari_safariCoreBundle
safari_setByApplyingBlock:
safari_setDeallocationSentinelForObserver:
safari_splitArrayUsingCondition:
safari_startPageBackgroundImageFileURL
safari_startPageBackgroundImageFileURLForIdentifier:
safari_startPageBackgroundImageFolderURL
safari_stringByRedactingBookmarkDAVServerID
safari_stringForKey:
safari_systemFieldsEncoder
safari_tabGroupRootRecordName
safari_tabGroupsRecordZoneID
saveArchiveForReadingListBookmarkWithID:
saveArchivesForReadingListBookmarks:
saveBackupOfDatabase:withName:
saveBookmark:
saveBookmark:incrementGenerations:
saveBookmark:startReadingListFetcher:
saveBrowserState:
saveBrowserState:completionHandler:
saveDatabase:
saveDatabaseSyncData:
saveIconWithData:urlString:forBookmark:
saveItem:
saveItem:completionHandler:
savePerSiteSettingCloudKitRecordToDisk:completionHandler:
saveTabGroup:
saveWindow:
saveWindowState:
saveWindowState:completionHandler:
scheduleBookmarksDatabaseMaintenance
scheduleBookmarksDatabaseMigrationTask
scheduleHSTSSuperCookieCleanup
schedulePasswordIconsCleanup
scheduleSyncIfNeeded
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scopedBookmarkListWithID:
scopedBookmarkListWithID:filteredUsingString:
scopedBookmarkWithUUID:
second
secondaryZoneNameForBookmark:
sectionIdentifiers
selectedFavoritesFolder
selectedFavoritesFolderUpdater
self
sendMessage:
sendMessage:withReplyHandler:
sentinelDidDeallocateWithContext:
serverID
serverIDsInFolderWithServerID:excludeDeletedBookmarks:
sessionStateData
setAccountHash:database:
setActiveParticipantIDs:
setActiveTabGroup:
setActiveTabGroupUUID:
setActiveTabUUID:forTabGroupWithUUID:
setAdded:
setAddedLocally:
setAddress:
setArchiveStatus:
setAssociatedBookmarkID:
setAuxiliaryRecord:forKey:
setAuxiliaryRecordIDsToDelete:
setBackgroundImageModifiedState:
setBookmark:
setBookmarkID:
setBookmarks:
setChildrenOrder:forFolderWithServerId:database:
setClass:forClassName:
setClasses:forSelector:argumentIndex:ofReply:
setCompletedMigration:
setContainsCKShareRecord:
setCountLimit:
setCreationDeviceIdentifier:
setDateAdded:
setDateClosed:
setDateLastArchived:
setDateLastFetched:
setDateLastViewed:
setDefaultValue:forPreference:completionHandler:
setDelegate:
setDeletedBookmarkSyncData:change:
setDeviceIdentifier:
setDidNotSaveRecordsAfterMigration:
setDisplayTitleProvider:
setExtraAttributes:
setFavoritesFolder:localOnly:
setFavoritesFolderIdentifier:postChangeNotification:
setFetchedIconData:
setFinishBackgroundTaskAssertionBlock:
setGeneration:
setGeneration:forKey:
setHandler:
setHandler:forMessageNamed:
setHasFetchedMetadata:
setHashGenerator:forRecordZoneID:
setHidden:
setIconData:
setIdentifier:
setInMemoryFilter:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setIsDeletingRecordZone:
setKind:
setLastPrivateDatabaseServerChangeToken:
setLastReadGeneration:
setLastSelectedChildID:
setLastSelectedTabUUID:
setLastServerChangeToken:forRecordZoneID:
setLastSharedDatabaseServerChangeToken:
setLastSyncedRecordGeneration:
setLocal:
setLocalAttributes:
setLocalCloudKitMigrationState:database:
setLocalMigrationState:generateDeviceIdentifierIfNeeded:
setLocalPreviewText:
setLocalTitle:
setLocalURL:
setMaximumTabsPerGroup:
setMaximumTabsPerTabGroup:
setMessageHandlers:
setMinimumAPIVersion:
setMinimumSyncAPIVersion:
setModified:
setModifiedAttributeMask:
setModifiedAttributes:
setModifiedAttributes:item:
setMoved:
setNeedsSyncUpdate:
setNewlyCreated:
setNextPageURLs:
setNotificationHandler:
setObject:forKey:
setObject:forKeyedSubscript:
setOrderIndex:
setPageZoomSyncData:forRecordName:completionHandler:
setParentID:
setParentRecordID:
setParticipants:
setPinned:title:address:
setPinned:title:url:
setPinnedTabs:
setPosition:
setPositionDictionaryRepresentation:
setPostSyncNotificationWhenUnlocking:
setPrefersSidebarVisible:
setPresenceInTabWithServerID:tabGroupWithServerID:forParticipant:
setPrivateBrowsing:
setPrivatePinnedTabs:
setReadOnly:
setReadingListIconURL:
setReadingListIconUUID:
setRecord:
setRecordIDsToRefresh:
setRemoteObjectInterface:
setRepresentation
setSceneID:
setSectionIdentifier:enabled:
setSectionsIdentifiers:enabledIndexes:
setSelectedFavoritesFolder:
setServerID:
setServerID:forBookmark:
setServerId:item:
setShadowBookmarkList:
setShared:
setShouldArchive:
setShouldIncrementGeneration:
setSkipsExternalNotifications:
setSpecialFolderID:
setStartBackgroundTaskAssertionBlock:
setState:
setStoreOwner:
setString:
setString:withSearchRange:
setSubtype:
setSyncAgentProxy:
setSyncData:
setSyncData:database:
setSyncData:forKey:
setSyncData:item:
setSyncKey:
setSyncKey:item:
setSyncLockFileDescriptor:
setSyncNotificationType:
setSyncPosition:
setSyncPosition:incrementGeneration:
setSyncState:
setSyncable:
setSyncableTitle:
setTabCollection:
setTabGroupUUID:
setTabGroupsToActiveTabs:
setTabs:
setTimeoutHandler:
setTitle:
setTitle:forBookmarkWithIdentifier:reply:
setTitle:incrementGeneration:
setTitle:previewText:dateLastFetched:
setURL:forBookmarkWithIdentifier:reply:
setURL:shouldSync:
setUnlockSyncRequested:
setUsage:
setValue:
setValue:forKey:
setValue:forScalarKey:
setValue:incrementGenerationIfNeeded:
setValue:ofPreference:forDomain:withTimestamp:completionHandler:
setWebFilterStatus:
setWindowStates:
setWindows:
setWithArray:
shadowBookmarkList
share
shareDidUpdateForTabGroupWithUUID:
shareRecord
shareRecordForTabGroup:
shareRecordForTabGroup:completionHandler:
shared
sharedAggregateDictionary
sharedConnection
sharedFeatureManager
sharedManager
sharedProxy
sharedWebFilterSettings
shortTypeDescription
shouldArchive
shouldFetchIconForBookmark:
shouldIncludeBookmarkAddedInMemory:
shouldReattemptArchiveWithAutomaticArchivingEnabled:
shouldSync
shouldUpdatePresence
showingReader
skipsExternalNotifications
sortUsingComparator:
sortValues
sortedArrayUsingComparator:
specialID
startBackgroundTaskAssertionBlock
startObserving
startPageSectionsManager
startPageTabWithDeviceIdentifier:
startReadingListFetcher
state
stopObservingChanges
storeOwner
string
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringForKey:
stringValue
stringWithCapacity:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
strongToStrongObjectsMapTable
subarrayWithRange:
subpathsOfDirectoryAtPath:error:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
supportsTabGroupFavorites
supportsURL:
syncAgentProxy
syncAllowed
syncBookmarksWithCompletionHandler:
syncData
syncDataForBookmark:
syncDataForBookmarkID:
syncDataWithContentsOfData:
syncEnabled
syncLockFileDescriptor
syncNotificationType
syncPosition
syncSetString:forKey:
syncSettingsUpDictionary
syncState
syncStringForKey:
syncable
syncableBookmarksIDsInFolderWithBookmarkID:
syncableTitle
syncableURL
tabClass
tabCollection
tabGroupForBookmark:
tabGroupHasDisplayedStartPage:
tabGroupManager:activeParticipantsDidUpdateInTabGroupWithUUID:
tabGroupManager:activeParticipantsDidUpdateInTabWithUUID:
tabGroupManager:didPerformBlockUpdatesForTabGroupWithUUID:
tabGroupManager:didRemoveTabGroupWithUUID:
tabGroupManager:didUpdateScopedBookmarkList:
tabGroupManager:didUpdateTabGroupWithUUID:
tabGroupManager:didUpdateTabWithUUID:userDriven:
tabGroupManager:didUpdateTabsInTabGroupWithUUID:
tabGroupManager:willPerformBlockUpdatesForTabGroupWithUUID:
tabGroupManager:willReplaceTabWithUUID:withTabWithUUID:
tabGroupManagerDidFinishSetup:
tabGroupManagerDidUpdateSyncableContent:
tabGroupManagerDidUpdateTabGroups:
tabGroupMatchingShare:
tabGroupMatchingShare:inTabGroups:
tabGroupUUID
tabGroupUUIDForServerID:
tabGroupWithUUID:
tabGroups
tabGroupsToActiveTabs
tabIndex
tabUUIDForServerID:
tabWithUUID:
tabs
tabsAreIdentical:
tabsForTabGroup:
tabsForTabGroupBookmark:
tabsUUIDSet
taskForDeletingIndividualWebsiteDataWithRecord:
taskType
taskWithType:
test_restoreMissingSpecialBookmarks
timeIntervalSince1970
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timerWithTimeInterval:repeats:block:
title
topScopedBookmarkListForTabGroup:
transactionCurrentlyActive
truncateToNumberOfTabs:
truncateWAL
unlockFields
unlockSync
unlockSyncAsynchronously
unlockSyncRequested
unsignedIntValue
unsignedIntegerValue
updateAccountHash:
updateActiveTabGroup
updateAddChangesWithInMemoryBookmarkID:toDatabaseGeneratedID:
updateBookmarks:inFolderWithID:secureDelete:
updateChangeAfterUpdatingInMemoryID:withDatabaseID:
updateContainsCKShareRecord
updateDatabaseSyncDataUsingBlock:
updateGenerationsInSyncData:forAttributes:
updateItems:inParentWithID:
updateItems:inParentWithID:completionHandler:
updateLastSelectedTab
updateReadingListWebFilterStatusForUnsetItemsOnly:
updateScopedBookmarkWithUUID:title:address:
updateSelectedFavoritesFolderWithBookmarkID:wasFavoritesFolder:isFavoritesFolder:
updateSyncDataForBookmark:usingBlock:
updateSyncDataForBookmarkWithRecordName:excludeDeletedBookmarks:usingBlock:
updateTabGroupWithUUID:persist:usingBlock:
updateTabWithUUID:persist:notify:usingBlock:
updateTabs:inTabGroup:
updateTabsInTabGroup:completionHandler:
updateTabsInTabGroupWithUUID:persist:usingBlock:
usage
userDidAcceptCloudKitShareWithMetadata:completionHandler:
userDidUpdateBookmarkDatabase
userIdentity
userInfo
userRecordID
userSettings
usesAllowedSitesOnly
usesGlobalPinnedTabs
uuid
vacuum
validBookmarkUUIDsFromUUIDs:
value
valueForKey:
valueWithPointer:
waitForPendingChanges
waitForSetupWithCompletionHandler:
waitWithTimeout:
wasAdded
wasModified
wasMoved
wasOpenedFromLink
wbSyncData
wb_URLForKey:isValid:
wb_arrayForKey:isValid:
wb_bestURLForUserTypedString
wb_boolForKey:
wb_databaseOpenError
wb_dateForKey:isValid:
wb_dictionaryForKey:isValid:
wb_featureDisabledError
wb_lockError
wb_numberForKey:
wb_numberForKey:isValid:
wb_stringByRedactingBookmarkDAVServerID
wb_stringForKey:isValid:
weakObjectsHashTable
webFilterAllowedSites
webFilterAllowedSitesFolder
webFilterAllowedSitesFolderBookmarkID
webFilterEnabled
webarchivePathForNextPageURL:
webarchivePathInReaderForm:fileExists:
websiteDataRecord
websiteDataRecordFromXPCDictionary:
websiteDataRecordWithDomain:
whiteListAllowedSites
whiteListEnabled
whitespaceAndNewlineCharacterSet
windowStateWithUUID:
windowStates
windowUUID
windowsFolderSpecialID
writeToDatabase:databaseAccessor:
writeToFile:atomically:
writeToFile:options:error:
writeToURL:atomically:
writeToURL:options:error:
zone
zoneID
v24@0:8@16
@28@0:8@16B24
v36@0:8@16B24@28
v16@0:8
v20@0:8B16
@16@0:8
B16@0:8
@"NSURL"
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@44@0:8@16@24i32q36
i16@0:8
q16@0:8
@"WebBookmarkCollection"
@"WebBookmark"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v40@0:8@16@24@?32
v24@0:8@"CKRecord"16
v24@0:8@"CKRecordID"16
@"NSArray"16@0:8
@"NSData"24@0:8@"NSString"16
v40@0:8@"NSData"16@"NSString"24@?<v@?B>32
q24@0:8@16
v32@0:8@16@24
v32@0:8@16@?24
@"WBSStartPageSectionManager"
@32@0:8@16@24
r^v16@0:8
v24@0:8r^v16
v28@0:8r^v16B24
r^{__CFData=}24@0:8r^v16
v32@0:8r^{__CFData=}16r^v24
r^{__CFArray=}32@0:8r^v16r^^v24
v32@0:8r^v16r^v24
v32@0:8r^{__CFString=}16r^v24
r^{__CFString=}24@0:8r^v16
i24@0:8r^v16
r^v24@0:8r^v16
B24@0:8r^v16
q24@0:8r^v16
B32@0:8r^v16@24
v32@0:8r^v16@24
v32@0:8q16r^v24
@24@0:8r^v16
v32@0:8@16r^v24
r^v32@0:8@16r^v24
@32@0:8@16r^v24
B40@0:8r^v16@24r^v32
v32@0:8r^v16q24
v40@0:8@16@24r^v32
B32@0:8r^v16r^v24
r^v32@0:8q16r^v24
B32@0:8r^v16@"NSString"24
v32@0:8r^v16@"NSString"24
@"NSData"24@0:8r^v16
v32@0:8@"NSData"16r^v24
@"NSSet"32@0:8@16r^v24
r^v32@0:8@"NSString"16r^v24
B40@0:8r^v16@"NSString"24r^v32
@"NSSet"32@0:8@"NSString"16r^v24
v40@0:8@"NSArray"16@"NSString"24r^v32
@"NSString"32@0:8@"NSString"16r^v24
@"NSDictionary"24@0:8r^v16
v32@0:8@"NSDictionary"16r^v24
@32@0:8@"NSString"16r^v24
@"NSURL"32@0:8@"NSString"16r^v24
v32@0:8@"NSString"16r^v24
@24@0:8q16
@32@0:8q16q24
v24@0:8^v16
v28@0:8^v16B24
r^{__CFData=}24@0:8^v16
v32@0:8^{__CFData=}16^v24
r^{__CFArray=}32@0:8^v16r^^v24
v32@0:8^v16^v24
v32@0:8^{__CFString=}16^v24
r^{__CFString=}24@0:8^v16
i24@0:8^v16
r^v24@0:8^v16
B24@0:8^v16
q24@0:8^v16
B32@0:8^v16@24
v32@0:8^v16@24
v32@0:8q16^v24
@24@0:8^v16
v32@0:8@16^v24
r^v32@0:8@16^v24
@32@0:8@16^v24
B40@0:8^v16@24^v32
v32@0:8^v16q24
v40@0:8@16@24^v32
B32@0:8^v16^v24
r^v32@0:8q16^v24
v24@0:8@"<WBTabGroupSyncAgentSyncObserver>"16
v32@0:8@"CKShareMetadata"16@?<v@?@"CKShare"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"NSURL"16@"NSData"24@?<v@?@"CKShare"@"NSError">32
v24@0:8@"NSString"16
v48@0:8@16@24@32@40
v32@0:8@"NSSet"16@"NSString"24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"CKRecordID"40
v32@0:8@"NSString"16@"CKRecordID"24
v32@0:8@"NSString"16@"NSDate"24
v36@0:8@16@24B32
v40@0:8@16@24@32
v24@0:8@"WBTabGroupManager"16
v32@0:8@"WBTabGroupManager"16@"NSString"24
v36@0:8@"WBTabGroupManager"16@"NSString"24B32
v32@0:8@"WBTabGroupManager"16@"WebBookmarkList"24
v40@0:8@"WBTabGroupManager"16@"NSString"24@"NSString"32
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSXPCConnection"
@"NSHashTable"
@"NSDate"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8q16
v24@0:8Q16
@"NSMutableDictionary"
@"NSDictionary"
@"CKRecord"
@"WBSCRDTPosition"
@"CKRecordID"
@"CKShare"
@36@0:8@16@24B32
@20@0:8B16
@"NSString"
@28@0:8@16i24
@"NSArray"28@0:8@"WebBookmarkChangeSet"16i24
B24@0:8@"WebBookmark"16
@40@0:8@16@24@?32
@40@0:8@16@24@32
v20@0:8i16
v28@0:8@16B24
@"NSMutableArray"
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
v24@0:8i16i20
@36@0:8@16i24q28
@40@0:8@16i24i28q32
@32@0:8i16i20q24
@36@0:8i16i20i24q28
@44@0:8@16i24i28i32q36
B24@0:8Q16
@"NSArray"
B20@0:8B16
B28@0:8@16B24
@20@0:8i16
v28@0:8@16i24
i24@0:8@16
B36@0:8@16i24i28i32
B28@0:8i16i20i24
B20@0:8i16
Q20@0:8i16
@"NSMutableOrderedSet"
v24@0:8B16B20
@"WebBookmarksXPCConnection"
B48@0:8@16@24@32^@40
@"WBReadingListPrivate"
@"WBCollectionConfiguration"
@"WBTabCollection"
@24@0:8@"WebBookmark"16
@"WebBookmark"16@0:8
v24@0:8@"WebBookmark"16
@40@0:8@16@24q32
@60@0:8@16@24i32q36@44q52
@52@0:8@16@24i32@36q44
@56@0:8@16@24i32B36@40q48
@44@0:8i16q20@28q36
@28@0:8i16q20
@36@0:8i16@20q28
I16@0:8
v36@0:8B16@20@28
@24@0:8Q16
v32@0:8@16Q24
q40@0:8@16@24@32
q32@0:8Q16@24
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"NSData"
@"WBBookmarkSyncData"
@"WBSCRDTField"
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@76@0:8@16@24@32B40@44@52@60@68
B24@0:8d16
@28@0:8q16B24
v28@0:8@"WBDatabaseLockAcquisitor"16B24
v40@0:8B16B20@24@?32
@28@0:8B16@20
@32@0:8@16I24B28
v40@0:8B16B20@"NSString"24@?<v@?@"NSString"@"NSString"@?<@"WebBookmark"@?>>32
@"NSArray"24@0:8@"NSString"16
@"WebBookmarkList"28@0:8B16@"NSString"20
@"NSArray"32@0:8@"NSString"16I24B28
@"WebBookmark"20@0:8i16
@"WBBookmarksDatabaseHealthInformation"16@0:8
@"NSDictionary"20@0:8i16
B36@0:8@16B24^@28
B24@0:8^i16
B44@0:8@16@24@32B40
Q24@0:8Q16
B28@0:8@?16B24
B32@0:8@?16B24B28
@24@0:8i16B20
I24@0:8@16
i20@0:8i16
Q24@0:8@16
@24@0:8i16I20
@28@0:8i16I20B24
@40@0:8i16I20B24B28@32
B32@0:8@16B24B28
B28@0:8@16i24
B32@0:8@16I24I28
B32@0:8@16@24
B28@0:8@16I24
B32@0:8@16I24B28
B32@0:8@16i24I28
B32@0:8@16i24B28
^{sqlite3_stmt=}36@0:8@16r*24I32
@32@0:8r*16@24
v44@0:8@16@24@32i40
Q28@0:8@16B24
Q28@0:8q16B24
Q24@0:8q16
I24@0:8i16B20
@32@0:8@16B24i28
@32@0:8@16^@24
B40@0:8@16@24@32
B48@0:8@16@24:32@40
^{sqlite3_stmt=}24@0:8@16
^{sqlite3_stmt=}32@0:8@16q24
i24@0:8^{sqlite3_stmt=}16
i32@0:8@16@?24
i24@0:8r*16
B48@0:8@16i24I28B32B36B40B44
B24@0:8q16
B24@0:8i16B20
B36@0:8@16B24@?28
B32@0:8@16@?24
B40@0:8Q16@24@?32
B72@0:8@16@24i32I36B40@44@52B60B64B68
q32@0:8@16Q24
B24@0:8i16i20
i28@0:8@16B24
@28@0:8I16@20
B36@0:8@16@24B32
v24@0:8^{__CFString=}16
B28@0:8i16@20
v36@0:8i16@20@28
B32@0:8@16q24
v24@0:8i16B20
@24@0:8B16B20
v32@0:8@16B24B28
@36@0:8i16Q20i28i32
@40@0:8i16Q20i28i32B36
v32@0:8i16B20@?24
B28@0:8i16Q20
B24@0:8B16B20
B44@0:8i16Q20B28B32@36
B44@0:8@16@24B32@36
v44@0:8@16@24B32@36
@28@0:8i16B20B24
B40@0:8@16@24B32B36
v28@0:8i16B20B24
B28@0:8q16B24
I36@0:8@16@24i32
@24@0:8I16i20
@32@0:8I16i20q24
B24@0:8@?16
v28@0:8i16@?20
^{sqlite3=}
^{__CFLocale=}
@"WebBookmarkTitleWordTokenizer"
@"SafariFetcherServerProxy"
@"WBDatabaseLockAcquisitor"
{unique_ptr<WebBookmarks::BookmarkSQLWriteTransaction, std::default_delete<WebBookmarks::BookmarkSQLWriteTransaction>>="__ptr_"{__compressed_pair<WebBookmarks::BookmarkSQLWriteTransaction *, std::default_delete<WebBookmarks::BookmarkSQLWriteTransaction>>="__value_"^{BookmarkSQLWriteTransaction}}}
@36@0:8^{sqlite3_stmt=}16B24^@28
B40@0:8i16@20B28^@32
B40@0:8@16i24I28^@32
B36@0:8i16@20^@28
B40@0:8@16B24B28^@32
B40@0:8@16@24^B32
@"NSMutableSet"
@60@0:8@16@24@32@40@48i56
@"WBMutableTabGroup"
@20@0:8I16
@24@0:8I16B20
@32@0:8@16Q24
@"WebBookmarkListQuery"
@"WebBookmarkList"
@36@0:8@16I24@28
@44@0:8@16I24@28@36
v24@0:8I16I20
I20@0:8I16
@"NSArray"24@0:8@"WBTabGroup"16
@"WBTabGroup"24@0:8@"NSString"16
@"WBTab"24@0:8@"NSString"16
@"WBWindow"24@0:8@"NSString"16
@"WBWindowState"24@0:8@"NSString"16
@"WBBrowserState"16@0:8
@"WFUserSettings"
{_NSRange=QQ}16@0:8
@"TIWordTokenizer"
{_NSRange="location"Q"length"Q}
@44@0:8i16@20@28Q36
@44@0:8@16i24@28@36
i32@0:8@16B24B28
i32@0:8i16@20B28
@32@0:8B16i20@24
@28@0:8i16@20
@32@0:8@16I24I28
@"<WebBookmarkInMemoryChangeFilter>"
@"NSSet"
@"WBMutableTabGroup"24@0:8@"NSString"16
@"WBMutableTab"24@0:8@"NSString"16
@32@0:8@16B24B28
B36@0:8@16I24@28
v44@0:8@16I24@28@?36
v48@0:8@16@24@32@?40
v36@0:8@16I24@?28
v36@0:8@16B24@?28
@28@0:8I16#20
B36@0:8@16@24i32
@"WebBookmarkTabCollection"
@40@0:8^{sqlite3_stmt=}16@24q32
@44@0:8^{sqlite3_stmt=}16@24B32q36
v20@0:8I16
@48@0:8@16@24Q32@40
@56@0:8@?16@?24@32Q40@48
v44@0:8@16i24@28@36
@36@0:8q16@24B32
@40@0:8q16@24B32B36
@32@0:8Q16Q24
@28@0:8B16^B20
Q32@0:8@16@24
@32@0:8q16@24
@"WBWebsiteDataRecord"
@28@0:8^{_NSZone=}16B24
@"<WBReusableTab>"
v32@0:8@"NSCache"16@24
@"NSCache"
@"NSTimer"
@32@0:8^v16@24
@"CKServerChangeToken"
v32@0:8Q16@?24
v56@0:8@16@24@32Q40@?48
v48@0:8@16@24Q32@?40
v24@0:8@?<v@?@"WBSCyclerItemListRepresentation">16
v32@0:8Q16@?<v@?B>24
v56@0:8@"NSString"16@"NSURL"24@"NSString"32Q40@?<v@?B>48
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?B>40
v32@0:8@"NSString"16@?<v@?B>24
v40@0:8@"NSString"16@"NSString"24@?<v@?B>32
v40@0:8@"NSURL"16@"NSString"24@?<v@?B>32
v24@0:8@?<v@?q>16
v32@0:8@?16d24
v28@0:8B16@?20
@32@0:8Q16@24
@"_WBTabCyclerTabGroupUpdateObserver"
@"WBSDistributedNotificationObserver"
@"WBTabGroupManager"
@36@0:8@16B24@?28
@32@0:8@16@?24
v32@0:8@"WebBookmarksXPCConnection"16@"NSObject<OS_xpc_object>"24
@"<WebBookmarksClientDelegateProtocol>"
@"NSString"24@0:8@"WBSCRDTPositionGenerator"16
q24@0:8@"WBSCRDTPositionGenerator"16
@"WBSCRDTPosition"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@"NSString"32@0:8@"WBSCRDTPositionGenerator"16@"NSString"24
@40@0:8@16B24B28@?32
v36@0:8@16i24@28
@"WBSCRDTPositionGenerator"
@"<WBTabGroupSyncAgentProtocol>"
@"WBTabGroup"
@32@0:8@16^B24
@40@0:8#16@24^B32
@24@0:8#16
v24@0:8d16
v32@0:8d16d24
@"<WBDatabaseLockAcquisitorDelegate>"
@24@0:8r*16
v32@0:8@?16r*24
@"NSObject<OS_xpc_object>"
@"<WebBookmarksXPCConnectionDelegate>"
@72@0:8@16@24@32B40d44i52B56B60@64
@136@0:8q16B24@28@36@44@52Q60@68B76B80@84@92B100@104B112d116i124B128B132
d16@0:8
@"WBSettingsTask"
@"WebBookmarksSettingsGateway"
