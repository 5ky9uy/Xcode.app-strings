{"access_token":{"xms_cc":{"values":["cp1"]}}}
access_token
xms_cc
client_id
code
scope
authorization_code
grant_type
redirect_uri
code_verifier
claims
refresh_token
%@=%@
POST
application/x-www-form-urlencoded
Content-Type
error
error_description
id_token
expires_in
preferred_username
email
https
/Microsoft-Server-ActiveSync
Bearer
Authorization
Www-Authenticate
authorization_uri
/common/v2.0/.well-known/openid-configuration
error_code
token_endpoint
authorization_endpoint
jwks_uri
issuer
S256
plain
Attempting
Pending
Successful
Failure
Permanent Failure
None
https://login.live.com/oauth20_token.srf
response_type=code
client_id=%@
grant_type=%@
password
scope=%@
username=%@
password=%@
/common
/organizations
/consumers
response_type
username
http
91:ef870.a438-57cd.99ce-3b3543e71d71
g8e99a:6.0:9:-53g5.8bf4-79:72c8bc433
EAS.AccessAsUser.All
openid
offline_access
wl.activesync
OpenID
Profile
https://outlook.office.com/IMAP.AccessAsUser.All
https://outlook.office.com/SMTP.Send
User.Read
Mail.ReadWrite
urn:ietf:wg:oauth:2.0:oob
%@://%@
oauth-redirect
DAEASOAuthJWTValidator.m
DAEASOAuthJWTValidator cannot be initialized with this method.
DAEASOAuthJWTValidator cannot be initialized with nil idToken
9188040d-6c67-4c5b-b112-36a304b66dad
{tenantid}
keys
%@.%@
RS256
https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize/
https://login.microsoftonline.com/consumers/oauth2/v2.0/token
Outlook
authCode
accessToken
refreshToken
displayName
oauthURI
tokenRequestURI
jwksURI
jwksData
v8@?0
v48@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSError"40
v24@?0@"NSData"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSError"32
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Could not validate the id_token received from the server
Server failed to exchange auth code for tokens, with status code %@ and error message %@
v2.0
Exchange
https://configuration.apple.com/configurations/internetservices/exchangesync/oauth-migration-configuration.plist
DAEASRenewCredentialsShouldTriggerMigrationKey
com.apple.exchangesyncd.ROPCMigration
com.apple.exchangesync.DAEASOAuthMigrationActivity
iOSExchangeAccountAuthMigrationEnabled-v2
iOSExchangeAccountAuthMigrationDisallowedDomains
iOSExchangeAccountAuthMigrationDisallowedHosts
migrationEnabled
disallowedDomains
disallowedHosts
v36@?0B8@"NSArray"12@"NSArray"20@"NSError"28
ExchangeAccountEnableMigration
ExchangeAccountDisableMigration
accountIdentifier
migrationStatus
accountIsExchangeBasic
@"NSDictionary"8@?0
Not basic account
Disallowed domain
Disallowed host
Managed account
Recent attempt
Interaction pending
Status unfavorable
v24@?0q8@"NSError"16
Skipped: %@
v16@?0@?<v@?q>8
com.apple.exchangesyncexpress.framework.EASOAuthService
v24@?0@"<NSCopying>"8@"NSError"16
v32@?0@"<NSCopying>"8@"NSArray"16@?<v@?>24
description
oauthAccountType
authURI
easEndPoint
claimsChallenge
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
H:|[serviceView]|
serviceView
V:|[serviceView]|
v24@?0@"<NSSecureCoding>"8@"NSError"16
DAEASOAuthWebViewController.m
We have used these objects to fetch and verify the tokens, neither of these should be empty
v20@?0B8@"NSError"12
HOTMAIL_EMAIL_MISMATCH_TITLE
EASOAuthSupport
HOTMAIL_EMAIL_MISMATCH_MESSAGE
HOTMAIL_EMAIL_MISMATCH_OK
SIGN_IN_ERROR_TITLE
SIGN_IN_ERROR_MESSAGE_NO_CONNECTION
SIGN_IN_ERROR_OK
redirect_uri=%@
ui_locales=%@
display=%@
state=%@
code_challenge=%@
code_challenge_method=%@
login_hint=%@
%@?%@
state
DAEASOAuthOAuth2TokenResponse initWithData: %lu length urlResponse: %@ error: %@
DAEASOAuthOAuth2TokenResponse httpResponse status code %ld
DAEASOAuthTokenResponse response JSON data does not represent NSDictionary. Game over. %@
DAEASOAuthTokenResponse received an error: %{public}@ %@
DAEASOAuthOAuth2TokenResponse response JSON data does not represent NSDictionary.
DAEASOAuthOAuth2TokenResponse response is not NSHTTPURLResponse. Game over.
Can Not Retrieve E-mail address from DAEASOAuthTokenResponse response.
ESExchangeEmptyBearerResponse httpResponse status code %ld
ESExchangeEmptyBearerResponse response is not an NSHTTPURLResponse.
DAEASOpenIDMetadataResponse httpResponse status code %ld
DAEASOpenIDMetadataResponse Exception processing JSON %@
DAEASOpenIDMetadataResponse received an error: %@ %@
DAEASOpenIDMetadataResponse response token_endpoint: %@, authorization_endpoint: %@, jwks_uri: %@, issuer: %@
DAEASOpenIDMetadataResponse response JSON data does not represent NSDictionary.
DAEASOpenIDMetadataResponse response is not NSHTTPURLResponse. Game over.
DAEASOAuthTokenRefreshResponse initWithData: (length: %lu, responseError: %@)
DAEASOAuthTokenRefreshResponse httpResponse status code %ld
DAEASOAuthTokenRefreshResponse received an error: %{public}@ %@
DAEASOAuthTokenRefreshResponse response JSON data does not represent NSDictionary. Game over.
DAEASOAuthTokenRefreshResponse response is not NSHTTPURLResponse. Game over.
DAEASOAuthJWTValidator Error separating idToken components: %@ %lu
DAEASOAuthJWTValidator Error parsing JWT header: %@ %@
DAEASOAuthJWTValidator Error parsing JWT payload: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, nil params %@ %@ %@
DAEASOAuthJWTValidator idToken could not be validated, invalid signature
DAEASOAuthJWTValidator idToken could not be validated, payload didn't contain the required key: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, issuer mismatch: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, audience mismatch: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, nbf validation failed: %f %f
DAEASOAuthJWTValidator idToken could not be validated, exp validation failed: %f %f
DAEASOAuthJWTValidator signature could not be validated, keys not found %@ %@ %@ %@
DAEASOAuthJWTValidator SecCertificateCreateWithData not invoked with invalid param: %@ 
DAEASOAuthJWTValidator SecKeyVerifySignature not invoked with invalid params: %@ %@ %@
DAEASOAuthJWTValidator Error occurred while verifying signature: %@ %@ %@
DAEASOAuthJWTValidator signature could not be validated: %@ %@
DAEASOAuthJWTValidator cannot base64URLDecode: %@
DAEASOAuthJWTValidator cannot base64URLEncode: %@
DAEASOAuthFlowController shouldHideWebViewForLoadWithRequest: waiting for authentication code from page reload URL
Exchange Hotmail OAuth:Failed with error %@, error_description %@
Exchange Hotmail OAuth: Found an Auth Code String
Exchange Hotmail OAuth:Completed Fetching Tokens
Exchange Hotmail OAuth:Completed Fetching Tokens With Error %{public}@
Exchange Hotmail OAuth:Failed with authCode %@, state %@ self.state %@
Cannot exchange auth code for tokens. self.oauthURI is nil.
Cannot exchange auth code for tokens. jwksURI is nil.
DAEASOAuthFlowController couldn't retrieve OpenID metadata from URI: %@ Error: %@
DAEASOAuthFlowController couldn't retrieve JWKS data from URI: %@ Error: %@
EAS OAuth: Received Tokens
DAEASOAuthFlowController: Sending request: %@ %@
DAEASOAuthMigrationActivity: Could not retrieve configuration. Error: %@. Data: %@
DAEASOAuthMigrationActivity: Unable to decode configuration data. Error: %@
DAEASOAuthMigrationActivity: Invalid configuration data: %@
DAEASOAuthMigrationActivity: Configuration set to: %@
profileMigrationEnabled: YES
profileMigrationEnabled: NO
profileMigrationDisabled: YES
profileMigrationDisabled: NO
_isExchangeBasicAccount: Account %@ is a basic exchange account? %@
In %s: No because it ends with %{public}@ domain (consumer account).
In %s: No because the host is %{public}@ (consumer account).
In %s: No because it is being managed.
In %s: No because last attempt was very recent: %@).
In %s: No because migration status is %@.
DAEASOAuthMigrationActivity: Starting.
DAEASOAuthMigrationActivity: Profile says we should not proceed, exiting.
DAEASOAuthMigrationActivity: Calling renewCredentialsForAccount for account: %@.
DAEASOAuthMigrationActivity: Finished calling renewCredentialsForAccount for account: %@.
DAEASOAuthMigrationActivity: Finished.
DAEASOAuthMigrationActivity: Deferred.
DAEASOAuthWebViewController Client did not pass a presentationBlock to the init method. Your presentation animation will probably look horrible. Please pass a presentationBlock.
DAEASOAuthWebViewController got extension %@
DAEASOAuthWebViewController extension requestCancellationBlock requestIdentifier %@ error %@
DAEASOAuthWebViewController extension _requestPostCompletionBlockWithItems requestIdentifier %@ items %@
DAEASOAuthWebViewController initializing for description %@ username %@
DAEASOAuthWebViewController finished instantiate remote view controller %@ error %@ extension request identifier %@
DAEASOAuthWebViewController did loadItemForTypeIdentifier for response, got error %@
Unable to decode response: %@
DAEASOAuthWebViewController did loadItemForTypeIdentifier for response, got invalid response %@
DAEASOAuthWebViewController will save account with new credential
DAEASOAuthWebViewController did save account with success %d error %@
DAEASOAuthWebViewController will dismiss
DAEASOAuthWebViewController did dismiss
Hotmail Auth URL ---
 %@ 
Extracted auth code from request URL
Extracted state from request URL
Extracted error - %@ from request URL - %@ 
Extracted error_description - %@ from request URL - %@ 
DAEASOAuthTokenRequest
DAEASOAuthTokenResponse
ESExchangeEmptyBearerRequest
ESExchangeEmptyBearerResponse
DAEASOpenIDMetadataRequest
DAEASOpenIDMetadataResponse
DAEASOAuthPKCEChallenge
AccountMigration
DAEASOAuthMigrationRequest
DAEASExchangeOAuthMigrationRequest
DAEASOAuthTokenRefreshResponse
DAEASOAuthIdentity
DAOAuthSafariViewController
DAEASOAuthClient
DAEASOAuthJWTValidator
DAEASOAuthFlowController
SL_OOPAuthFlowDelegate
UIWebViewDelegate
NSObject
DAExchangeOAuthFlowController
DAEASOAuthMigrationActivity
DAEASOAuthWebViewController
DAEASOAuthRequest
T@"NSData",&,N,V_decodedPayload
HTTPBody
T@"NSString",&,N,V_rawSignature
T#,R
T@"NSString",R,N,V_errorMessage
T@"NSBackgroundActivityScheduler",&,N,V_scheduler
T@"NSData",&,N,V_decodedSignature
_issuer
T@"NSData",C,N,V_jwksData
authURI
T@"NSDictionary",R,N,V_data
bundleForClass:
T@"NSError",R,N,V_error
claimsValueWithClaimsChallenge:
T@"NSString",&,N,V_codeChallenge
idToken
T@"NSString",&,N,V_jwksURI
initWithString:
T@"NSString",&,N,V_rawPayload
jwksURI
T@"NSString",&,N,V_tokenRequestURI
migrationStatus
T@"NSString",C,N,V_clientID
personalAccount
T@"NSString",C,N,V_easEndPoint
requestWithURL:
T@"NSString",C,N,V_jwksURI
setAccessToken:
T@"NSString",C,N,V_redirectURI
setDisplayName:
T@"NSString",C,N,V_username
setRedirectURI:
T@"NSString",R,N,V_accessToken
setWithObjects:
T@"NSString",R,N,V_authorizationURI
user_id
T@"NSString",R,N,V_idToken
.cxx_destruct
T@"NSString",&,N,V_codeVerifier
JSONObjectWithData:options:error:
T@"NSString",C,N,V_refreshToken
T@"DAEASOAuthPKCEChallenge",&,N,V_challenge
T@"NSString",R,N,V_refreshToken
T@"NSData",&,N,V_decodedHeader
_decodedPayload
T@"NSData",&,N,V_jwksData
allKeys
T@"NSDate",R,N,V_expiryDate
base64EncodedStringWithOptions:
T@"NSDictionary",R,N,V_responseBody
claimsChallenge
T@"NSString",&,N,V_claimsChallenge
dataWithLength:
T@"NSString",&,N,V_issuer
initWithData:urlResponse:error:
T@"NSString",&,N,V_rawHeader
isProxy
T@"NSString",&,N,V_state
lowercaseString
T@"NSString",C,N,V_accessToken
newCodeVerifier
T@"NSString",C,N,V_displayName
release
T@"NSString",C,N,V_issuer
scopeForUpgradingFromBasicCreds
T@"NSString",C,N,V_oauthURI
setCachePolicy:
T@"NSString",C,N,V_tokenRequestURI
setEasEndPoint:
T@"NSString",R,C
setViewServiceTerminationBlock:
T@"NSString",R,N,V_authURI
tokenRequestURI
T@"NSString",R,N,V_errorName
willMoveToParentViewController:
T@"NSString",R,N,V_issuer
T@"NSString",R,N,V_jwksURI
T@"NSString",R,N,V_tokenRequestURI
T@"NSString",R,N,V_user_id
T@,&,N,V_headerJSONObject
T@,&,N,V_payloadJSONObject
T@?,C,N,V_completion
TQ,N,V_oauthType
TQ,R
Tq,N,V_codeChallengeMethod
Tq,R,N,V_statusCode
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
URLWithString:
UTF8String
UUIDString
_accessToken
_account
_accountDescription
_accountStore
_authURI
_authorizationURI
_challenge
_claimsChallenge
_clientID
_codeChallenge
_codeChallengeMethod
_codeVerifier
_commonInitializationWithAccount:accountStore:username:accountDescription:presentationBlock:
_completion
_data
_decodedHeader
_decodedSignature
_defaultScopeWithDomainForOAuthType:
_defaultScopeWithoutDomainForOAuthType:forToken:
_didInstantiateRemoteViewController
_dismissAndCompleteWithIdentity:error:extensionCompletion:
_displayName
_easEndPoint
_error
_errorMessage
_errorName
_exchangeAuthCode:codeVerifier:claims:forTokensAndUsernameWithCompletion:
_exchangeAuthCode:codeVerifier:claims:forTokensWithCompletion:
_expiryDate
_extension
_extensionCancellationError
_extensionRequestDidCancelWithError:
_extensionRequestDidComplete
_extensionRequestDidCompleteWithTokens:extensionCompletion:
_headerJSONObject
_idToken
_isExchangeBasicAccount:
_isFirstTimeSetup
_jwksData
_jwksURI
_migrateExchangeAccountToOAuthDecision:disallowedDomains:disallowedHosts:
_migrationDecisionString:
_oauthType
_oauthURI
_payloadJSONObject
_presentationBlock
_rawHeader
_rawPayload
_rawSignature
_redirectURI
_refreshToken
_responseBody
_retrieveMigrationStatusFromConfigurationURI:withCompletion:
_scheduler
_sendAnalyticsForMigratingAccount:withStatus:
_serverMigrationStatus
_serviceViewController
_setNonAppInitiated:
_signatureValid:
_state
_statusCode
_tokenRequestURI
_triggerAccountMigration
_urlRequestForOAuthTokenFromAuthCode:codeVerifier:claims:
_urlRequestForTokenRequestURI:params:clientID:
_user_id
_username
absoluteString
accessToken
accountDescription
accountType
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
activateConstraints:
addChildViewController:
addObject:
addObjectsFromArray:
addSubview:
arrayByAddingObject:
arrayWithObjects:count:
attachments
authCodeFromRequest:
authURLForUsername:
authURLForUsername:originalAuthURL:
authorizationURI
autorelease
base64URLDecode:
base64URLEncode:
boolValue
bringSubviewToFront:
bundleIdentifier
bytes
caseInsensitiveCompare:
challenge
class
clearColor
clientID
clientIDForOAuthType:
clientRedirect
clientRedirectForOAuthType:
code
codeChallenge
codeChallengeFromVerifier:withCodeChallengeMethod:
codeChallengeMethod
codeVerifier
compare:options:
completion
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
conformsToProtocol:
constraintsWithVisualFormat:options:metrics:views:
convertToString:
copy
count
countByEnumeratingWithState:objects:count:
credentialForAccount:clientID:error:
currentHandler
currentLocale
data
dataTaskWithRequest:completionHandler:
dataUsingEncoding:
dataWithBytes:length:
dataWithJSONObject:options:error:
date
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
debugDescription
decodedHeader
decodedPayload
decodedSignature
defaultScopeForOAuthType:withResourceIdentifier:
defaultScopeForOAuthType:withResourceIdentifier:forToken:
description
dictionaryRepresentation
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didMoveToParentViewController:
dismissViewControllerAnimated:completion:
displayName
domain
doubleValue
easEndPoint
emptyBearerRequestForHost:
ephemeralSessionConfiguration
error
errorDescriptionFromRequest:
errorDomainFromRequest:
errorMessage
errorName
errorWithDomain:code:userInfo:
exchangeAuthCode:codeVerifier:claims:forTokensAndUsernameWithCompletion:
exchangeAuthCode:codeVerifier:claims:withCompletion:
expiryDate
extensionWithIdentifier:error:
firstObject
handleFailureInMethod:object:file:lineNumber:description:
hasPrefix:
hasSuffix:
hash
headerJSONObject
host
idTokenValidWithJWKS:withAudience:withIssuer:
identifier
init
initWithAccount:accountStore:authURI:accountType:userName:accountDescription:isFirstTimeSetup:presentationBlock:
initWithAccount:accountStore:presentationBlock:
initWithAccountDescription:presentationBlock:
initWithArray:
initWithAuthURI:easEndPoint:username:claims:
initWithBase64EncodedString:options:
initWithBool:
initWithCapacity:
initWithCodeChallengeMethod:
initWithData:encoding:
initWithDomain:code:userInfo:
initWithIdToken:
initWithIdentifier:
initWithName:value:
initWithNibName:bundle:
initWithOAuth2Token:refreshToken:expiryDate:
initWithOAuthType:authURI:username:claims:
initWithTimeIntervalSinceNow:
initWithURL:
initWithURL:configuration:
initialRedirectURL
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
integerValue
invalidate
invalidateActivity
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
issuer
jwksData
lastPathComponent
length
loadItemForTypeIdentifier:options:completionHandler:
loadView
localizedStringForKey:value:table:
mainBundle
managingOwnerIdentifier
mf_isLegalEmailAddress
migrationStatusString
mutableBytes
mutableCopy
name
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
oauthRefreshToken
oauthTokenRefreshRequestForTokenRequestURI:clientID:scope:refreshToken:claims:
oauthType
oauthURI
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
openIDrequestURLFor:
password
path
payloadJSONObject
percentEncodedQuery
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
presentInternetOfflineError
presentUsernameMismatchAlert
presentingViewController
profileMigrationDisabled
profileMigrationEnabled
propertyListWithData:options:format:error:
queryItems
rangeOfString:
rawHeader
rawPayload
rawSignature
redirectURI
refreshToken
reload
renewCredentialsForAccount:options:completion:
requestForAuthURL:
requestForURL:
respondsToSelector:
responseBody
resume
retain
retainCount
retrieveJWKSDataFromURI:withCompletion:
retrieveOpenIDMetadataFromURI:withCompletion:
safariViewControllerWithURL:
saveAccount:withCompletionHandler:
scheduleActivity
scheduleWithBlock:
scheduler
scheme
self
sessionWithConfiguration:
setAuthFlowCompletion:
setBackgroundColor:
setChallenge:
setClaimsChallenge:
setClientID:
setCodeChallenge:
setCodeChallengeMethod:
setCodeVerifier:
setCompletion:
setCredential:
setDecodedHeader:
setDecodedPayload:
setDecodedSignature:
setDismissButtonStyle:
setEntersReaderIfAvailable:
setHTTPBody:
setHTTPMethod:
setHeaderJSONObject:
setHost:
setInterval:
setIssuer:
setJwksData:
setJwksURI:
setMigrationStatus:
setModalPresentationStyle:
setNeedsLayout
setOauthType:
setOauthURI:
setObject:forKeyedSubscript:
setOpaque:
setPath:
setPayloadJSONObject:
setQualityOfService:
setQueryItems:
setRawHeader:
setRawPayload:
setRawSignature:
setRefreshToken:
setRepeats:
setRequestCancellationBlock:
setScheduler:
setScheme:
setState:
setTokenRequestURI:
setTolerance:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInfo:
setUsername:
setValue:forHTTPHeaderField:
setValue:forKey:
set_requestPostCompletionBlockWithItems:
shouldDefer
shouldHideWebViewForLoadWithRequest:
sortedArrayUsingSelector:
standardUserDefaults
state
stateFromRequest:
statusCode
string
stringByAddingPercentEscapesUsingEncoding:
stringByAppendingString:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithFormat:
stringWithUTF8String:
superclass
timeIntervalSince1970
timeIntervalSinceNow
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
upgradeAuthorizationEndpoint:
upgradeTokenEndpoint:
urlForOAuthURI:clientID:redirectURI:scope:username:state:codeChallenge:codeChallengeMethod:
urlPageWillContainAuthorizationCode:
urlRequestForOAuthTokenFromUsername:password:scope:
urlRequestForOAuthTokenFromUsername:tokenRequestURI:password:scope:
urlRequestForTokenRequestURI:clientID:redirectURI:authCode:scope:codeVerifier:claims:
username
usernameFromJWTToken:
value
valueForHTTPHeaderField:
valueForKey:
view
webView:didFailLoadWithError:
webView:shouldStartLoadWithRequest:navigationType:
webViewDidFinishLoad:
webViewDidFinishLoadWithPageTitleSupplier:
webViewDidStartLoad:
whitespaceCharacterSet
zone
@24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@56@0:8@16@24@32@40@48
@40@0:8@16@24@32
q16@0:8
@16@0:8
v16@0:8
@"NSDictionary"
@"NSString"
@"NSDate"
@"NSError"
@24@0:8q16
@32@0:8@16q24
v24@0:8q16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@48@0:8@16@24@32@40
@"NSData"
@24@0:8Q16
@28@0:8Q16B24
@32@0:8Q16@24
@36@0:8Q16@24B32
B16@0:8
B40@0:8@16@24@32
B24@0:8@16
v24@0:8@?16
@"NSString"16@0:8
v24@0:8@?<v@?B@"NSDictionary"@"NSError">16
@"NSURL"24@0:8@"NSString"16
@"NSMutableURLRequest"24@0:8@"NSURL"16
B24@0:8@"NSURLRequest"16
v24@0:8@?<v@?@?<v@?@"NSString">>16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
B40@0:8@16@24q32
v32@0:8@16@24
B40@0:8@"UIWebView"16@"NSURLRequest"24q32
v24@0:8@"UIWebView"16
v32@0:8@"UIWebView"16@"NSError"24
@48@0:8Q16@24@32@40
@32@0:8@16@24
v48@0:8@16@24@32@?40
v32@0:8@16@?24
@"DAEASOAuthPKCEChallenge"
Q40@0:8@16@24@32
@?16@0:8
@"NSBackgroundActivityScheduler"
@32@0:8@16@?24
@40@0:8@16@24@?32
@76@0:8@16@24@32Q40@48@56B64@?68
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
@"ACAccount"
@"ACAccountStore"
@"UIViewController"
@"NSExtension"
@80@0:8@16@24@32@40@48@56@64q72
{"access_token":{"xms_cc":{"values":["cp1"]}}}
access_token
xms_cc
client_id
code
scope
authorization_code
grant_type
redirect_uri
code_verifier
claims
refresh_token
%@=%@
POST
application/x-www-form-urlencoded
Content-Type
error
error_description
id_token
expires_in
preferred_username
email
https
/Microsoft-Server-ActiveSync
Bearer
Authorization
Www-Authenticate
authorization_uri
/common/v2.0/.well-known/openid-configuration
error_code
token_endpoint
authorization_endpoint
jwks_uri
issuer
S256
plain
Attempting
Pending
Successful
Failure
Permanent Failure
None
https://login.live.com/oauth20_token.srf
response_type=code
client_id=%@
grant_type=%@
password
scope=%@
username=%@
password=%@
/common
/organizations
/consumers
response_type
username
http
91:ef870.a438-57cd.99ce-3b3543e71d71
g8e99a:6.0:9:-53g5.8bf4-79:72c8bc433
EAS.AccessAsUser.All
openid
offline_access
wl.activesync
OpenID
Profile
https://outlook.office.com/IMAP.AccessAsUser.All
https://outlook.office.com/SMTP.Send
User.Read
Mail.ReadWrite
urn:ietf:wg:oauth:2.0:oob
%@://%@
oauth-redirect
DAEASOAuthJWTValidator.m
DAEASOAuthJWTValidator cannot be initialized with this method.
DAEASOAuthJWTValidator cannot be initialized with nil idToken
9188040d-6c67-4c5b-b112-36a304b66dad
{tenantid}
keys
%@.%@
RS256
https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize/
https://login.microsoftonline.com/consumers/oauth2/v2.0/token
Outlook
authCode
accessToken
refreshToken
displayName
oauthURI
tokenRequestURI
jwksURI
jwksData
v8@?0
v48@?0@"NSString"8@"NSString"16@"NSString"24@"NSString"32@"NSError"40
v24@?0@"NSData"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSError"32
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Could not validate the id_token received from the server
Server failed to exchange auth code for tokens, with status code %@ and error message %@
v2.0
Exchange
https://configuration.apple.com/configurations/internetservices/exchangesync/oauth-migration-configuration.plist
DAEASRenewCredentialsShouldTriggerMigrationKey
com.apple.exchangesyncd.ROPCMigration
com.apple.exchangesync.DAEASOAuthMigrationActivity
iOSExchangeAccountAuthMigrationEnabled-v2
iOSExchangeAccountAuthMigrationDisallowedDomains
iOSExchangeAccountAuthMigrationDisallowedHosts
migrationEnabled
disallowedDomains
disallowedHosts
v36@?0B8@"NSArray"12@"NSArray"20@"NSError"28
ExchangeAccountEnableMigration
ExchangeAccountDisableMigration
accountIdentifier
migrationStatus
accountIsExchangeBasic
@"NSDictionary"8@?0
Not basic account
Disallowed domain
Disallowed host
Managed account
Recent attempt
Interaction pending
Status unfavorable
v24@?0q8@"NSError"16
Skipped: %@
v16@?0@?<v@?q>8
com.apple.exchangesyncexpress.framework.EASOAuthService
v24@?0@"<NSCopying>"8@"NSError"16
v32@?0@"<NSCopying>"8@"NSArray"16@?<v@?>24
description
oauthAccountType
authURI
easEndPoint
claimsChallenge
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
H:|[serviceView]|
serviceView
V:|[serviceView]|
v24@?0@"<NSSecureCoding>"8@"NSError"16
DAEASOAuthWebViewController.m
We have used these objects to fetch and verify the tokens, neither of these should be empty
v20@?0B8@"NSError"12
HOTMAIL_EMAIL_MISMATCH_TITLE
EASOAuthSupport
HOTMAIL_EMAIL_MISMATCH_MESSAGE
HOTMAIL_EMAIL_MISMATCH_OK
SIGN_IN_ERROR_TITLE
SIGN_IN_ERROR_MESSAGE_NO_CONNECTION
SIGN_IN_ERROR_OK
redirect_uri=%@
ui_locales=%@
display=%@
state=%@
code_challenge=%@
code_challenge_method=%@
login_hint=%@
%@?%@
state
DAEASOAuthOAuth2TokenResponse initWithData: %lu length urlResponse: %@ error: %@
DAEASOAuthOAuth2TokenResponse httpResponse status code %ld
DAEASOAuthTokenResponse response JSON data does not represent NSDictionary. Game over. %@
DAEASOAuthTokenResponse received an error: %{public}@ %@
DAEASOAuthOAuth2TokenResponse response JSON data does not represent NSDictionary.
DAEASOAuthOAuth2TokenResponse response is not NSHTTPURLResponse. Game over.
Can Not Retrieve E-mail address from DAEASOAuthTokenResponse response.
ESExchangeEmptyBearerResponse httpResponse status code %ld
ESExchangeEmptyBearerResponse response is not an NSHTTPURLResponse.
DAEASOpenIDMetadataResponse httpResponse status code %ld
DAEASOpenIDMetadataResponse Exception processing JSON %@
DAEASOpenIDMetadataResponse received an error: %@ %@
DAEASOpenIDMetadataResponse response token_endpoint: %@, authorization_endpoint: %@, jwks_uri: %@, issuer: %@
DAEASOpenIDMetadataResponse response JSON data does not represent NSDictionary.
DAEASOpenIDMetadataResponse response is not NSHTTPURLResponse. Game over.
DAEASOAuthTokenRefreshResponse initWithData: (length: %lu, responseError: %@)
DAEASOAuthTokenRefreshResponse httpResponse status code %ld
DAEASOAuthTokenRefreshResponse received an error: %{public}@ %@
DAEASOAuthTokenRefreshResponse response JSON data does not represent NSDictionary. Game over.
DAEASOAuthTokenRefreshResponse response is not NSHTTPURLResponse. Game over.
DAEASOAuthJWTValidator Error separating idToken components: %@ %lu
DAEASOAuthJWTValidator Error parsing JWT header: %@ %@
DAEASOAuthJWTValidator Error parsing JWT payload: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, nil params %@ %@ %@
DAEASOAuthJWTValidator idToken could not be validated, invalid signature
DAEASOAuthJWTValidator idToken could not be validated, payload didn't contain the required key: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, issuer mismatch: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, audience mismatch: %@ %@
DAEASOAuthJWTValidator idToken could not be validated, nbf validation failed: %f %f
DAEASOAuthJWTValidator idToken could not be validated, exp validation failed: %f %f
DAEASOAuthJWTValidator signature could not be validated, keys not found %@ %@ %@ %@
DAEASOAuthJWTValidator SecCertificateCreateWithData not invoked with invalid param: %@ 
DAEASOAuthJWTValidator SecKeyVerifySignature not invoked with invalid params: %@ %@ %@
DAEASOAuthJWTValidator Error occurred while verifying signature: %@ %@ %@
DAEASOAuthJWTValidator signature could not be validated: %@ %@
DAEASOAuthJWTValidator cannot base64URLDecode: %@
DAEASOAuthJWTValidator cannot base64URLEncode: %@
DAEASOAuthFlowController shouldHideWebViewForLoadWithRequest: waiting for authentication code from page reload URL
Exchange Hotmail OAuth:Failed with error %@, error_description %@
Exchange Hotmail OAuth: Found an Auth Code String
Exchange Hotmail OAuth:Completed Fetching Tokens
Exchange Hotmail OAuth:Completed Fetching Tokens With Error %{public}@
Exchange Hotmail OAuth:Failed with authCode %@, state %@ self.state %@
Cannot exchange auth code for tokens. self.oauthURI is nil.
Cannot exchange auth code for tokens. jwksURI is nil.
DAEASOAuthFlowController couldn't retrieve OpenID metadata from URI: %@ Error: %@
DAEASOAuthFlowController couldn't retrieve JWKS data from URI: %@ Error: %@
EAS OAuth: Received Tokens
DAEASOAuthFlowController: Sending request: %@ %@
DAEASOAuthMigrationActivity: Could not retrieve configuration. Error: %@. Data: %@
DAEASOAuthMigrationActivity: Unable to decode configuration data. Error: %@
DAEASOAuthMigrationActivity: Invalid configuration data: %@
DAEASOAuthMigrationActivity: Configuration set to: %@
profileMigrationEnabled: YES
profileMigrationEnabled: NO
profileMigrationDisabled: YES
profileMigrationDisabled: NO
_isExchangeBasicAccount: Account %@ is a basic exchange account? %@
In %s: No because it ends with %{public}@ domain (consumer account).
In %s: No because the host is %{public}@ (consumer account).
In %s: No because it is being managed.
In %s: No because last attempt was very recent: %@).
In %s: No because migration status is %@.
DAEASOAuthMigrationActivity: Starting.
DAEASOAuthMigrationActivity: Profile says we should not proceed, exiting.
DAEASOAuthMigrationActivity: Calling renewCredentialsForAccount for account: %@.
DAEASOAuthMigrationActivity: Finished calling renewCredentialsForAccount for account: %@.
DAEASOAuthMigrationActivity: Finished.
DAEASOAuthMigrationActivity: Deferred.
DAEASOAuthWebViewController Client did not pass a presentationBlock to the init method. Your presentation animation will probably look horrible. Please pass a presentationBlock.
DAEASOAuthWebViewController got extension %@
DAEASOAuthWebViewController extension requestCancellationBlock requestIdentifier %@ error %@
DAEASOAuthWebViewController extension _requestPostCompletionBlockWithItems requestIdentifier %@ items %@
DAEASOAuthWebViewController initializing for description %@ username %@
DAEASOAuthWebViewController finished instantiate remote view controller %@ error %@ extension request identifier %@
DAEASOAuthWebViewController did loadItemForTypeIdentifier for response, got error %@
Unable to decode response: %@
DAEASOAuthWebViewController did loadItemForTypeIdentifier for response, got invalid response %@
DAEASOAuthWebViewController will save account with new credential
DAEASOAuthWebViewController did save account with success %d error %@
DAEASOAuthWebViewController will dismiss
DAEASOAuthWebViewController did dismiss
Hotmail Auth URL ---
 %@ 
Extracted auth code from request URL
Extracted state from request URL
Extracted error - %@ from request URL - %@ 
Extracted error_description - %@ from request URL - %@ 
DAEASOAuthTokenRequest
DAEASOAuthTokenResponse
ESExchangeEmptyBearerRequest
ESExchangeEmptyBearerResponse
DAEASOpenIDMetadataRequest
DAEASOpenIDMetadataResponse
DAEASOAuthPKCEChallenge
AccountMigration
DAEASOAuthMigrationRequest
DAEASExchangeOAuthMigrationRequest
DAEASOAuthTokenRefreshResponse
DAEASOAuthIdentity
DAOAuthSafariViewController
DAEASOAuthClient
DAEASOAuthJWTValidator
DAEASOAuthFlowController
SL_OOPAuthFlowDelegate
UIWebViewDelegate
NSObject
DAExchangeOAuthFlowController
DAEASOAuthMigrationActivity
DAEASOAuthWebViewController
DAEASOAuthRequest
T@"NSData",&,N,V_decodedPayload
HTTPBody
T@"NSString",&,N,V_rawSignature
T#,R
T@"NSString",R,N,V_errorMessage
T@"NSBackgroundActivityScheduler",&,N,V_scheduler
T@"NSData",&,N,V_decodedSignature
_issuer
T@"NSData",C,N,V_jwksData
authURI
T@"NSDictionary",R,N,V_data
bundleForClass:
T@"NSError",R,N,V_error
claimsValueWithClaimsChallenge:
T@"NSString",&,N,V_codeChallenge
idToken
T@"NSString",&,N,V_jwksURI
initWithString:
T@"NSString",&,N,V_rawPayload
jwksURI
T@"NSString",&,N,V_tokenRequestURI
migrationStatus
T@"NSString",C,N,V_clientID
personalAccount
T@"NSString",C,N,V_easEndPoint
requestWithURL:
T@"NSString",C,N,V_jwksURI
setAccessToken:
T@"NSString",C,N,V_redirectURI
setDisplayName:
T@"NSString",C,N,V_username
setRedirectURI:
T@"NSString",R,N,V_accessToken
setWithObjects:
T@"NSString",R,N,V_authorizationURI
user_id
T@"NSString",R,N,V_idToken
.cxx_destruct
T@"NSString",&,N,V_codeVerifier
JSONObjectWithData:options:error:
T@"NSString",C,N,V_refreshToken
T@"DAEASOAuthPKCEChallenge",&,N,V_challenge
T@"NSString",R,N,V_refreshToken
T@"NSData",&,N,V_decodedHeader
_decodedPayload
T@"NSData",&,N,V_jwksData
allKeys
T@"NSDate",R,N,V_expiryDate
base64EncodedStringWithOptions:
T@"NSDictionary",R,N,V_responseBody
claimsChallenge
T@"NSString",&,N,V_claimsChallenge
dataWithLength:
T@"NSString",&,N,V_issuer
initWithData:urlResponse:error:
T@"NSString",&,N,V_rawHeader
isProxy
T@"NSString",&,N,V_state
lowercaseString
T@"NSString",C,N,V_accessToken
newCodeVerifier
T@"NSString",C,N,V_displayName
release
T@"NSString",C,N,V_issuer
scopeForUpgradingFromBasicCreds
T@"NSString",C,N,V_oauthURI
setCachePolicy:
T@"NSString",C,N,V_tokenRequestURI
setEasEndPoint:
T@"NSString",R,C
setViewServiceTerminationBlock:
T@"NSString",R,N,V_authURI
tokenRequestURI
T@"NSString",R,N,V_errorName
willMoveToParentViewController:
T@"NSString",R,N,V_issuer
T@"NSString",R,N,V_jwksURI
T@"NSString",R,N,V_tokenRequestURI
T@"NSString",R,N,V_user_id
T@,&,N,V_headerJSONObject
T@,&,N,V_payloadJSONObject
T@?,C,N,V_completion
TQ,N,V_oauthType
TQ,R
Tq,N,V_codeChallengeMethod
Tq,R,N,V_statusCode
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
URLWithString:
UTF8String
UUIDString
_accessToken
_account
_accountDescription
_accountStore
_authURI
_authorizationURI
_challenge
_claimsChallenge
_clientID
_codeChallenge
_codeChallengeMethod
_codeVerifier
_commonInitializationWithAccount:accountStore:username:accountDescription:presentationBlock:
_completion
_data
_decodedHeader
_decodedSignature
_defaultScopeWithDomainForOAuthType:
_defaultScopeWithoutDomainForOAuthType:forToken:
_didInstantiateRemoteViewController
_dismissAndCompleteWithIdentity:error:extensionCompletion:
_displayName
_easEndPoint
_error
_errorMessage
_errorName
_exchangeAuthCode:codeVerifier:claims:forTokensAndUsernameWithCompletion:
_exchangeAuthCode:codeVerifier:claims:forTokensWithCompletion:
_expiryDate
_extension
_extensionCancellationError
_extensionRequestDidCancelWithError:
_extensionRequestDidComplete
_extensionRequestDidCompleteWithTokens:extensionCompletion:
_headerJSONObject
_idToken
_isExchangeBasicAccount:
_isFirstTimeSetup
_jwksData
_jwksURI
_migrateExchangeAccountToOAuthDecision:disallowedDomains:disallowedHosts:
_migrationDecisionString:
_oauthType
_oauthURI
_payloadJSONObject
_presentationBlock
_rawHeader
_rawPayload
_rawSignature
_redirectURI
_refreshToken
_responseBody
_retrieveMigrationStatusFromConfigurationURI:withCompletion:
_scheduler
_sendAnalyticsForMigratingAccount:withStatus:
_serverMigrationStatus
_serviceViewController
_setNonAppInitiated:
_signatureValid:
_state
_statusCode
_tokenRequestURI
_triggerAccountMigration
_urlRequestForOAuthTokenFromAuthCode:codeVerifier:claims:
_urlRequestForTokenRequestURI:params:clientID:
_user_id
_username
absoluteString
accessToken
accountDescription
accountType
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
activateConstraints:
addChildViewController:
addObject:
addObjectsFromArray:
addSubview:
arrayByAddingObject:
arrayWithObjects:count:
attachments
authCodeFromRequest:
authURLForUsername:
authURLForUsername:originalAuthURL:
authorizationURI
autorelease
base64URLDecode:
base64URLEncode:
boolValue
bringSubviewToFront:
bundleIdentifier
bytes
caseInsensitiveCompare:
challenge
class
clearColor
clientID
clientIDForOAuthType:
clientRedirect
clientRedirectForOAuthType:
code
codeChallenge
codeChallengeFromVerifier:withCodeChallengeMethod:
codeChallengeMethod
codeVerifier
compare:options:
completion
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
conformsToProtocol:
constraintsWithVisualFormat:options:metrics:views:
convertToString:
copy
count
countByEnumeratingWithState:objects:count:
credentialForAccount:clientID:error:
currentHandler
currentLocale
data
dataTaskWithRequest:completionHandler:
dataUsingEncoding:
dataWithBytes:length:
dataWithJSONObject:options:error:
date
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
debugDescription
decodedHeader
decodedPayload
decodedSignature
defaultScopeForOAuthType:withResourceIdentifier:
defaultScopeForOAuthType:withResourceIdentifier:forToken:
description
dictionaryRepresentation
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didMoveToParentViewController:
dismissViewControllerAnimated:completion:
displayName
domain
doubleValue
easEndPoint
emptyBearerRequestForHost:
ephemeralSessionConfiguration
error
errorDescriptionFromRequest:
errorDomainFromRequest:
errorMessage
errorName
errorWithDomain:code:userInfo:
exchangeAuthCode:codeVerifier:claims:forTokensAndUsernameWithCompletion:
exchangeAuthCode:codeVerifier:claims:withCompletion:
expiryDate
extensionWithIdentifier:error:
firstObject
handleFailureInMethod:object:file:lineNumber:description:
hasPrefix:
hasSuffix:
hash
headerJSONObject
host
idTokenValidWithJWKS:withAudience:withIssuer:
identifier
init
initWithAccount:accountStore:authURI:accountType:userName:accountDescription:isFirstTimeSetup:presentationBlock:
initWithAccount:accountStore:presentationBlock:
initWithAccountDescription:presentationBlock:
initWithArray:
initWithAuthURI:easEndPoint:username:claims:
initWithBase64EncodedString:options:
initWithBool:
initWithCapacity:
initWithCodeChallengeMethod:
initWithData:encoding:
initWithDomain:code:userInfo:
initWithIdToken:
initWithIdentifier:
initWithName:value:
initWithNibName:bundle:
initWithOAuth2Token:refreshToken:expiryDate:
initWithOAuthType:authURI:username:claims:
initWithTimeIntervalSinceNow:
initWithURL:
initWithURL:configuration:
initialRedirectURL
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
integerValue
invalidate
invalidateActivity
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
issuer
jwksData
lastPathComponent
length
loadItemForTypeIdentifier:options:completionHandler:
loadView
localizedStringForKey:value:table:
mainBundle
managingOwnerIdentifier
mf_isLegalEmailAddress
migrationStatusString
mutableBytes
mutableCopy
name
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
oauthRefreshToken
oauthTokenRefreshRequestForTokenRequestURI:clientID:scope:refreshToken:claims:
oauthType
oauthURI
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
openIDrequestURLFor:
password
path
payloadJSONObject
percentEncodedQuery
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
presentInternetOfflineError
presentUsernameMismatchAlert
presentingViewController
profileMigrationDisabled
profileMigrationEnabled
propertyListWithData:options:format:error:
queryItems
rangeOfString:
rawHeader
rawPayload
rawSignature
redirectURI
refreshToken
reload
renewCredentialsForAccount:options:completion:
requestForAuthURL:
requestForURL:
respondsToSelector:
responseBody
resume
retain
retainCount
retrieveJWKSDataFromURI:withCompletion:
retrieveOpenIDMetadataFromURI:withCompletion:
safariViewControllerWithURL:
saveAccount:withCompletionHandler:
scheduleActivity
scheduleWithBlock:
scheduler
scheme
self
sessionWithConfiguration:
setAuthFlowCompletion:
setBackgroundColor:
setChallenge:
setClaimsChallenge:
setClientID:
setCodeChallenge:
setCodeChallengeMethod:
setCodeVerifier:
setCompletion:
setCredential:
setDecodedHeader:
setDecodedPayload:
setDecodedSignature:
setDismissButtonStyle:
setEntersReaderIfAvailable:
setHTTPBody:
setHTTPMethod:
setHeaderJSONObject:
setHost:
setInterval:
setIssuer:
setJwksData:
setJwksURI:
setMigrationStatus:
setModalPresentationStyle:
setNeedsLayout
setOauthType:
setOauthURI:
setObject:forKeyedSubscript:
setOpaque:
setPath:
setPayloadJSONObject:
setQualityOfService:
setQueryItems:
setRawHeader:
setRawPayload:
setRawSignature:
setRefreshToken:
setRepeats:
setRequestCancellationBlock:
setScheduler:
setScheme:
setState:
setTokenRequestURI:
setTolerance:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInfo:
setUsername:
setValue:forHTTPHeaderField:
setValue:forKey:
set_requestPostCompletionBlockWithItems:
shouldDefer
shouldHideWebViewForLoadWithRequest:
sortedArrayUsingSelector:
standardUserDefaults
state
stateFromRequest:
statusCode
string
stringByAddingPercentEscapesUsingEncoding:
stringByAppendingString:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringWithFormat:
stringWithUTF8String:
superclass
timeIntervalSince1970
timeIntervalSinceNow
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
upgradeAuthorizationEndpoint:
upgradeTokenEndpoint:
urlForOAuthURI:clientID:redirectURI:scope:username:state:codeChallenge:codeChallengeMethod:
urlPageWillContainAuthorizationCode:
urlRequestForOAuthTokenFromUsername:password:scope:
urlRequestForOAuthTokenFromUsername:tokenRequestURI:password:scope:
urlRequestForTokenRequestURI:clientID:redirectURI:authCode:scope:codeVerifier:claims:
username
usernameFromJWTToken:
value
valueForHTTPHeaderField:
valueForKey:
view
webView:didFailLoadWithError:
webView:shouldStartLoadWithRequest:navigationType:
webViewDidFinishLoad:
webViewDidFinishLoadWithPageTitleSupplier:
webViewDidStartLoad:
whitespaceCharacterSet
zone
@24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@56@0:8@16@24@32@40@48
@40@0:8@16@24@32
q16@0:8
@16@0:8
v16@0:8
@"NSDictionary"
@"NSString"
@"NSDate"
@"NSError"
@24@0:8q16
@32@0:8@16q24
v24@0:8q16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@48@0:8@16@24@32@40
@"NSData"
@24@0:8Q16
@28@0:8Q16B24
@32@0:8Q16@24
@36@0:8Q16@24B32
B16@0:8
B40@0:8@16@24@32
B24@0:8@16
v24@0:8@?16
@"NSString"16@0:8
v24@0:8@?<v@?B@"NSDictionary"@"NSError">16
@"NSURL"24@0:8@"NSString"16
@"NSMutableURLRequest"24@0:8@"NSURL"16
B24@0:8@"NSURLRequest"16
v24@0:8@?<v@?@?<v@?@"NSString">>16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
B40@0:8@16@24q32
v32@0:8@16@24
B40@0:8@"UIWebView"16@"NSURLRequest"24q32
v24@0:8@"UIWebView"16
v32@0:8@"UIWebView"16@"NSError"24
@48@0:8Q16@24@32@40
@32@0:8@16@24
v48@0:8@16@24@32@?40
v32@0:8@16@?24
@"DAEASOAuthPKCEChallenge"
Q40@0:8@16@24@32
@?16@0:8
@"NSBackgroundActivityScheduler"
@32@0:8@16@?24
@40@0:8@16@24@?32
@76@0:8@16@24@32Q40@48@56B64@?68
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
@"ACAccount"
@"ACAccountStore"
@"UIViewController"
@"NSExtension"
@80@0:8@16@24@32@40@48@56@64q72
