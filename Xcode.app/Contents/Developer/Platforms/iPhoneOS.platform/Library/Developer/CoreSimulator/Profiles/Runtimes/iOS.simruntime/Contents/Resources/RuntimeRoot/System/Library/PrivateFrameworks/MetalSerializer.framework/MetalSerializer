InvalidCommand
Size of command smaller than expected
Insufficient bytes left in iterator
Got invalid buffer for ref(%d)
Got invalid texture for ref(%d)
Invalid buffer range
UnrecognizedCommand
Unrecognized command at offset
v8@?0
ObjectRef generation queue
index creation queue
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSerializer newSharedTextureWithDescriptor:allocator:]
Shared texture feature not available in simulator
-[MTLSerializer newSharedTextureWithHandle:]
Size of command larger than expected
Attempting to draw with nil pipeline state
Attempting to do indexed draw with nil index buffer
Attempting to do indexed draw with nil control point index buffer
Attempting to do indirect draw with nil indirect buffer
Invalid render target index
Invalid depth stencil state
Command is longer than expected
Invalid buffer count
Too many buffers specified
Invalid buffer index
Invalid sampler count
Too many samplers specified
Invalid texture count
Too many textures specified
Invalid render pipeline state
Invalid viewport count
Too many scissor rects specified
Too many viewports specified
Too many resources specified
Invalid clip plane index
Invalid sampler index
Invalid viewport index
Invalid attachment index
UnexpectedCommand
Expected a render pass descriptor command
Invalid primitive type
CommandQueue
Function
ComputePipelineState
RenderPipelineState
Buffer
Texture
SamplerState
DepthStencilState
Fence
ArgumentBufferLayout
ArgumentEncoder
Heap
Event
InvalidReference
Invalid resource reference, %d
com.apple.gpusw.MTLDeserializer
deserializer
com.apple.gpusw.MTLDeserializerSubmissionQueue
com.apple.gpusw.MTLDeserializerCompletionQueue
IOSurface validation failed
v24@?0@"<MTLSharedEvent>"8Q16
InvalidEncoder
Encoder type doesn't match for continuation
InvalidContinuation
Previous stage didn't specify continuation
Invalid encoder type
v40@?0d8d16Q24Q32
v16@?0@"<MTLCommandBuffer>"8
Invalid %@ reference, %d, object already exists
Invalid %@ reference, %d
Unexpected error
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
Not supported
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
Not implemented
-[MTLSerializerRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setAlphaTestReferenceValue:]
-[MTLSerializerRenderCommandEncoder setPointSize:]
-[MTLSerializerRenderCommandEncoder setClipPlane:p2:p3:p4:atIndex:]
-[MTLSerializerRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setViewportTransformEnabled:]
-[MTLSerializerRenderCommandEncoder setProvokingVertexMode:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:index:]
-[MTLSerializerRenderCommandEncoder setTriangleFrontFillMode:backFillMode:]
-[MTLSerializerRenderCommandEncoder setTransformFeedbackState:]
-[MTLSerializerRenderCommandEncoder setDepthCleared]
-[MTLSerializerRenderCommandEncoder setStencilCleared]
-[MTLSerializerRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:]
-[MTLSerializerRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
-[MTLSerializerRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]
Attempting to dispatch without pipeline set
Invalid compute pipeline state
Invalid indirect buffer
Invalid indirect buffer offset
Invalid threadgroup memory size index
-[MTLSerializerBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
-[MTLSerializerBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
InvalidReadException
end of read past end of buffer
InvalidLengthException
new length is longer than existing length
InvalidAdvanceException
end of advance past end of buffer
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:withRange:]
-[MTLSerializerComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
Expected Header of %llu bytes but received only %llu bytes
Expected at least %llu bytes but received only %llu bytes
Expected Cmd ID %u but received Cmd Id %u
Failed to create pipeline
Unexpected type for unique identifier: %d
Non zero plane in non-planar IOSurface
Descriptor row bytes (%zu) > IOSurface row bytes (%zu)
Invalid row byte alignment (%zx) vs (%llx)
Overflow in IOSurface validation
Descriptor height*arrayLength (%llu) > IOSurface height (%zu)
Pixel format bytes per pixel doesn't match IOSurface bytes per pixel
cannot be mipmapped, mipmapLevelCount (%lu) disallowed
must have depth == 1, depth (%lu) disallowed
must be of type MTLTextureType2D, linear MTLTextureType2DArray or MTLTextureTypeTextureBuffer, textureType (%u) disallowed
MTLDeserializerBlitDecoder
MTLDeserializerDecoder
NSObject
DefaultObjectRefAllocator
MTLSerializerObjectRefAllocator
MTLSerializer
MTLDeserializerEventDecoder
MTLDeserializerRenderDecoder
MTLSerializerParallelRenderCommandEncoder
MTLParallelRenderCommandEncoderSPI
MTLCommandEncoderSPI
MTLCommandEncoder
MTLParallelRenderCommandEncoder
_MTLDeserializerHashObjectDelegate
MTLDeserializationContext
MTLDeserializerObjectDelegate
_MTLDeserializerObjectMapObjectDelegate
_MTLDeserializer
MTLDeserializer
MTLSerializerRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
MTLDeserializerComputeDecoder
MTLSerializerBlitCommandEncoder
MTLBlitCommandEncoderSPI
MTLBlitCommandEncoder
MTLSerializerCommandEncoder
MTLByteIterator
MTLSerializerComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
TB,VneedsWrites
GPUStartTime
_device
T@"<MTLDevice>",R
_fences
T@"MTLSerializer",R,V_serializer
_reflectionSerializationVersion
T@"NSString",R,C
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
TB,R
buffers
TB,R,V_generateResourceRefs
dealloc
TC,R
decodeSetSamplers:withIterator:
TQ,R,V_dispatchType
decodeSetViewport:withIterator:
TQ,V_reflectionSerializationVersion
decodeUpdateFence:withIterator:
_argumentBufferLayoutMap
deleteResource:
_argumentEncoderMap
depthAttachment
_bufferMap
encodeStartElse
_commandBufferIndex
fragmentBuffers
_commandQueues
getType
_computePipelineMap
heapRef
_depthStencilMap
isProxy
_deserializerGeneratesResourceRefs
newCommandQueue
_encoders
pushDebugGroup:
_encodersSize
registerBuffer:
_eventNotifications
releaseArgumentBufferLayoutRef:
_fenceMap
releaseHeapRef:
_functions
setArrayLength:
_generator
setDepthCleared
_heaps
setLodMinClamp:
_objectIndex
setNeedsWrites:
_renderPipelineMap
setPixelFormat:
_resourceMapQueue
setScissorRect:
_samplers
setTextureType:
_serializer
setTileSamplerStates:withRange:
_textureMap
setVisibilityResultMode:offset:
addCompletedHandler:
synchronizeTexture:slice:level:
addResourceReference:isWrite:
useHeap:stages:
addSplitHandler:
writeDescriptor
GPUEndTime
TQ,R,VtileWidth
T#,R
_events
T@"<MTLDevice>",R,Vdevice
_objectDelegate
T@"NSString",C
_resourcesDirty
backFaceStencil
TB,R,N,V_deserializerGeneratesResourceRefs
completionQueue
TB,VseparateCommits
decodeSetCullMode:withIterator:
TQ,R
decodeSetTextures:withIterator:
TQ,R,VtileHeight
decodeSignalEvent:withIterator:
UTF8String
deleteCommandQueueForReference:
_argumentBufferLayouts
deleteSamplerStateForReference:
_argumentEncoders
depthStencilRef
_buffers
enqueue
_commandQueueMap
getArgumentEncoderForReference:
_computePipeline
heapMaxAvailableSizeWithAlignment:serializedDataSize:allocator:
_computePipelines
initWithDevice:
_depthStencils
kernelStartTime
_dispatchType
newComputePipelineStateWithDescriptor:options:reflection:error:
_encodersCount
readBytes:into:
_eventMap
release
_features
releaseComputePipelineStateRef:
_functionMap
separateCommits
_generateResourceRefs
setBorderColor:
_heapMap
setLodMaxClamp:
_maxColorAttachmentIndex
setMeshSamplerStates:withRange:
_pipelineState
setObjectBuffer:offset:atIndex:
_renderPipelines
setSampleCount:
_samplerMap
setStoreAction:
_serialQueue
setThreadgroupDistributionMode:
_supportsCorrectBaseVertex
setVertexBuffer:offset:atIndex:
_textures
submissionQueue
addRenderTargetReferences
texture
addScheduledHandler:
useHeaps:count:
addStateReference:
advance:
alignment
allocateObjectRef
allocateOperationBytes:
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
argumentBufferLayoutConstantAtIndex:serializedDataSize:allocator:
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
argumentEncoderConstantAtIndex:serializedDataSize:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
argumentEncoderSetValues:serializedDataSize:allocator:
arrayLength
autorelease
beginContinuation
beginSegment:
blitCommandEncoder
blitEncoder
buffer
bufferGPUAddress:allocator:
bufferGPUAddress:serializedDataSize:allocator:
bufferLayoutMatchesFrontEndLayout
bufferRef
bytesLeft
calculateOffsetToRegion:level:slice:
class
clearColor
clearDepth
clearStencil
code
colorAttachments
commandBuffer
commandQueue
commit
computeCommandEncoder
computeEncoder
computeInfo:serializedDataSize:allocator:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
conformsToProtocol:
constantDataAtIndex:
constantOffsetAtIndex:
contents
copy
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
count
countByEnumeratingWithState:objects:count:
currentAllocatedSize
currentOffset
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
debugDescription
decodeBarrierResources:withIterator:
decodeBarrierScope:withIterator:
decodeBlitUpdateFence:withIterator:
decodeBlitWaitForFence:withIterator:
decodeCopyFromBufferToBuffer:withIterator:
decodeCopyFromBufferToTexture:withIterator:
decodeCopyFromTextureToBuffer:withIterator:
decodeCopyFromTextureToTexture:withIterator:
decodeCopyFromTextureToTextureWithNumSliceLevel:withIterator:
decodeCopyFromTextureToTextureWithOptions:withIterator:
decodeDispatchThreadgroups:withIterator:
decodeDispatchThreadgroupsIndirect:withIterator:
decodeDispatchThreads:withIterator:
decodeDrawIndexedInstancedBasePrimitives16:withIterator:
decodeDrawIndexedInstancedBasePrimitives16_2:withIterator:
decodeDrawIndexedInstancedBasePrimitives64:withIterator:
decodeDrawIndexedInstancedBasePrimitives64_2:withIterator:
decodeDrawIndexedInstancedPrimitives16:withIterator:
decodeDrawIndexedInstancedPrimitives64:withIterator:
decodeDrawIndexedPatches16:withIterator:
decodeDrawIndexedPatches64:withIterator:
decodeDrawIndexedPatchesIndirect:withIterator:
decodeDrawIndexedPrimitives16:withIterator:
decodeDrawIndexedPrimitives64:withIterator:
decodeDrawIndexedPrimitivesIndirect:withIterator:
decodeDrawInstancedBasePrimitives16:withIterator:
decodeDrawInstancedBasePrimitives64:withIterator:
decodeDrawInstancedPrimitives16:withIterator:
decodeDrawInstancedPrimitives64:withIterator:
decodeDrawPatches16:withIterator:
decodeDrawPatches64:withIterator:
decodeDrawPatchesIndirect:withIterator:
decodeDrawPrimitives16:withIterator:
decodeDrawPrimitives64:withIterator:
decodeDrawPrimitivesIndirect:withIterator:
decodeExecuteCommandsInBuffer:withIterator:
decodeExecuteCommandsInBufferRanged:withIterator:
decodeFillBuffer:withIterator:
decodeGenerateMipmaps:withIterator:
decodeOptimize:withIterator:
decodeOptimizeImage:withIterator:
decodeRenderBarrierResources:withIterator:
decodeRenderBarrierScope:withIterator:
decodeRenderUpdateFence:withIterator:
decodeRenderWaitForFence:withIterator:
decodeSegmentWithHeader:withIterator:withDecoder:into:
decodeSegments:lengths:count:into:
decodeSetAlphaTestReferenceValue:withIterator:
decodeSetBlendColor:withIterator:
decodeSetBufferOffset:withIterator:
decodeSetBuffers:withIterator:
decodeSetClipPlane:withIterator:
decodeSetColorResolveTexture:withIterator:
decodeSetColorStoreAction:withIterator:
decodeSetColorStoreActionOptions:withIterator:
decodeSetDepthBias:withIterator:
decodeSetDepthCleared:withIterator:
decodeSetDepthClipMode:withIterator:
decodeSetDepthResolveTexture:withIterator:
decodeSetDepthStencilState:withIterator:
decodeSetDepthStoreAction:withIterator:
decodeSetDepthStoreActionOptions:withIterator:
decodeSetFragmentBufferOffset:withIterator:
decodeSetFragmentBuffers:withIterator:
decodeSetFragmentSamplerState:withIterator:
decodeSetFragmentSamplerStates:withIterator:
decodeSetFragmentSamplerStatesLODClamp:withIterator:
decodeSetFragmentTextures:withIterator:
decodeSetFrontFacingWinding:withIterator:
decodeSetLineWidth:withIterator:
decodeSetPipelineState:withIterator:
decodeSetPointSize:withIterator:
decodeSetPrimitiveRestartIndexEnabled:withIterator:
decodeSetProvokingVertexMode:withIterator:
decodeSetRenderPipelineState:withIterator:
decodeSetSamplersLODClamp:withIterator:
decodeSetScissorRect:withIterator:
decodeSetScissorRects:withIterator:
decodeSetStageInRegion:withIterator:
decodeSetStageInRegionIndirect:withIterator:
decodeSetStencilCleared:withIterator:
decodeSetStencilRef:withIterator:
decodeSetStencilResolveTexture:withIterator:
decodeSetStencilStoreAction:withIterator:
decodeSetStencilStoreActionOptions:withIterator:
decodeSetTesselationFactorBuffer:withIterator:
decodeSetTesselationFactorScale:withIterator:
decodeSetThreadgroupMemoryLength:withIterator:
decodeSetTransformFeedbackState:withIterator:
decodeSetTriangleFillMode:withIterator:
decodeSetTriangleFillModeFrontBack:withIterator:
decodeSetVertexBufferOffset:withIterator:
decodeSetVertexBuffers:withIterator:
decodeSetVertexSamplerState:withIterator:
decodeSetVertexSamplerStates:withIterator:
decodeSetVertexSamplerStatesLODClamp:withIterator:
decodeSetVertexTextures:withIterator:
decodeSetViewportTransformEnabled:withIterator:
decodeSetViewports:withIterator:
decodeSetVisibilityResultMode:withIterator:
decodeSynchronizeResource:withIterator:
decodeSynchronizeTextureImage:withIterator:
decodeTextureBarrier:withIterator:
decodeUseHeaps:withIterator:
decodeUseHeapsWithStages:withIterator:
decodeUseResources:withIterator:
decodeUseResourcesWithStages:withIterator:
decodeWaitForEvent:withIterator:
decodeWaitForEventTimeout:withIterator:
decodeWaitForFence:withIterator:
decodeWithHeader:withIterator:
deleteArgumentBufferLayoutForReference:
deleteArgumentBufferLayoutRef:allocator:
deleteArgumentEncoderForReference:
deleteArgumentEncoderRef:allocator:
deleteBufferForReference:
deleteBufferRef:allocator:
deleteCommandQueueRef:allocator:
deleteComputePipelineStateForReference:
deleteComputePipelineStateRef:allocator:
deleteDepthStencilStateForReference:
deleteDepthStencilStateRef:allocator:
deleteEventForReference:
deleteEventRef:allocator:
deleteFenceForReference:
deleteFenceRef:allocator:
deleteFunctionForReference:
deleteFunctionRef:allocator:
deleteHeapForReference:
deleteHeapRef:allocator:
deleteObjectWithSerializedData:serializedDataSize:
deleteRenderPipelineStateForReference:
deleteRenderPipelineStateRef:allocator:
deleteResourceForReference:
deleteSamplerStateRef:allocator:
deleteTextureForReference:
deleteTextureRef:allocator:
depth
depthPlane
depthResolveFilter
depthStencilPrivate
depthStencilState
description
descriptorPrivate
deserializer
deserializerGeneratesResourceRefs
device
didModifyRange:buffer:
didModifyRange:serializedDataSize:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchThreadsPerTile:
dispatchThreadsPerTile:inRegion:
dispatchThreadsPerTile:inRegion:withRenderTargetArrayIndex:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
dispatchType
doResourcesAlias:serializedDataSize:allocator:
doesAliasAllResources:count:
doesAliasAnyResources:count:
doesAliasResources:count:all:resource:allocator:
doesNotRecognizeSelector:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
enableNullBufferBinds:
encodeEndDoWhile:offset:comparison:referenceValue:
encodeEndIf
encodeEndWhile
encodeSignalEvent:value:
encodeStartDoWhile
encodeStartIf:offset:comparison:referenceValue:
encodeStartWhile:offset:comparison:referenceValue:
encodeWaitForEvent:value:
encodeWaitForEvent:value:timeout:
encodedLength
endEncoding
endEncodingAndRetrieveProgramAddressTable
error
eventListener
exceptionWithName:reason:userInfo:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
executeCommandsInBuffer:withRange:
fault
fenceRef
fillBuffer:range:pattern4:
fillBuffer:range:value:
fillTexture:level:slice:region:bytes:length:
fillTexture:level:slice:region:color:
fillTexture:level:slice:region:color:pixelFormat:
fixStoreActions:
flushWrites
forceLoadActions
forceStoreActionsForPosition:
fragmentSamplers
fragmentTextures
frontFaceStencil
functionNames
functionWithFunctionRef:
generateMipmapsForTexture:
generateResourceRefs
getArgumentBufferLayoutForReference:
getBufferBytes:alignment:buffer:offset:
getBufferForReference:
getBufferForReferenceNonNull:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:dataSize:command:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
getCommandBufferBytes:
getCommandBytes:forCommand:
getCommandBytesRetry:forCommand:
getCommandQueueForReference:
getComputeInfoWithAllocator:
getComputePipelineStateForReference:
getDepthStencilStateForReference:
getEventForReference:
getFenceForReference:
getFunctionForReference:
getHeapForReference:
getRenderPipelineStateForReference:
getResourceForReference:
getSamplerStateForReference:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
getTextureForReference:
getTextureForReferenceNonNull:
getWritableInfo:buffers:texturesArrayLength:textures:
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
gpuAddress
hadSplit
handleNewObjectReplyData:replyDataSize:
handleNewObjectReplyData:replyDataSize:errorMessage:
handleSplits
hash
heapBufferSizeAndAlign:serializedDataSize:allocator:
heapBufferSizeAndAlignWithLength:options:
heapBufferSizeAndAlignWithLength:options:allocator:
heapTextureSizeAndAlign:serializedDataSize:allocator:
heapTextureSizeAndAlignWithDescriptor:
heapTextureSizeAndAlignWithDescriptor:allocator:
height
indirectCommandBufferRef
init
initWithBuffer:withLength:
initWithCommandBuffer:
initWithCommandBuffer:descriptor:
initWithCommandBuffer:descriptor:serializer:
initWithCommandBuffer:dispatchType:
initWithCommandBuffer:renderPassDescriptor:
initWithCommandBuffer:renderPassDescriptor:serializer:
initWithCommandBuffer:serializer:
initWithDeserializer:commandBuffer:
initWithDevice:deserializerGeneratesResourceRefs:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:generateResourceRefs:
initWithDevice:generateResourceRefs:objectDelegate:createQueues:
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:deserializerVersion:
insertDebugSignpost:
invalidateCompressedTexture:
invalidateCompressedTexture:slice:level:
iosurfaceReadOnlyTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
isEqual:
isKindOfClass:
isMemberOfClass:
isMemorylessRender
iteratorForBuffer:withLength:
kernelEndTime
label
length
level
loadAction
makeAliasable
makeAliasableResource:allocator:
makeAliasiableResource:serializedDataSize:allocator:
maxAvailableSizeWithAlignment:
maxAvailableSizeWithAlignment:heap:allocator:
maxComputeBuffers
maxComputeLocalMemorySizes
maxComputeSamplers
maxComputeTextures
maxFragmentBuffers
maxFragmentSamplers
maxFragmentTextures
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
maxVertexBuffers
maxVertexSamplers
maxVertexTextures
maxViewportCount
memoryBarrierNotificationWithResources:count:
memoryBarrierNotificationWithScope:
memoryBarrierWithResources:count:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithScope:
memoryBarrierWithScope:afterStages:beforeStages:
merge:
minimumLinearTextureAlignment:serializedDataSize:allocator:
minimumLinearTextureAlignmentForPixelFormat:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignment:serializedDataSize:allocator:
minimumTextureBufferAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:allocator:
mipmapLevelCount
needsWrites
newArgumentBufferLayoutRef
newArgumentBufferLayoutWithStructType:allocator:
newArgumentBufferLayoutWithStructType:serializedDataSize:allocator:
newArgumentEncoderRef
newArgumentEncoderWithBufferLayout:serializedDataSize:allocator:
newArgumentEncoderWithLayout:
newArgumentEncoderWithLayout:allocator:
newBufferRef
newBufferWithHeap:allocator:
newBufferWithLength:options:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newBufferWithLength:options:offset:
newCommandBufferRef
newCommandQueueRef
newComputePipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineStateRef
newComputePipelineStateWithDescriptor:serializedDataSize:allocator:
newComputePipelineStateWithSerializedDescriptor:allocator:
newDepthStencilStateRef
newDepthStencilStateWithDescriptor:
newDepthStencilStateWithDescriptor:allocator:
newDescriptor:
newDescriptorFromVersion1:withIterator:
newEventRef
newFence
newFence:allocator:
newFenceRef
newFenceWithAllocator:
newFunctionRef
newFunctionWithIR:
newFunctionWithName:
newFunctionWithSerializedMetallib:commandData:commandDataSize:overrideTargetTriple:allocator:
newHeapRef
newHeapWithDescriptor:
newHeapWithDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newIndirectArgumentBufferLayoutWithStructType:
newKernelDebugInfo
newLibraryWithData:error:
newNotificationRef
newObjectCommandWithSerializedData:serializedDataSize:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newRenderPipelineStateRef
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:serializedDataSize:allocator:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newSamplerStateRef
newSamplerStateWithDescriptor:
newSamplerStateWithDescriptor:allocator:
newSharedEvent
newSharedEvent:allocator:
newSharedEventWithAllocator:
newSharedEventWithEventPort:label:serializedData:serializedDataSize:allocator:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:
newSharedEventWithMachPort:allocator:
newSharedTextureWithDescriptor:allocator:
newSharedTextureWithHandle:
newStructTypeWithSerializedData:
newTextureRef
newTextureViewWithBuffer:allocator:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:allocator:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newTextureViewWithSwizzle:allocator:
newTextureViewWithTextureType:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTextureWithDescriptor:
newTextureWithDescriptor:allocator:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:offset:bytesPerRow:
newTextureWithHeap:allocator:
newTextureWithIOSurface:serializedData:serializedDataSize:allocator:
newTiledTextureViewWithBuffer:allocator:
newTiledTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
notifyListener:atValue:block:
notifyListenerForEventRef:atValue:allocator:
notifyListenerForEventWithSerializedData:serializedDataSize:block:allocator:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
operationWithSerializedData:serializedDataSize:
operationWithSerializedData:serializedDataSize:allocator:
optimize:slice:level:withCommand:
optimize:withCommand:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeIndirectCommandBuffer:withRange:
optimizeReset:withRange:withCommand:
payloadFromReplyData:replyDataSize:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipelineRef
pipelineState
pixelFormat
popDebugGroup
readCommand:withIterator:expectedSize:into:
readVariableCommand:withIterator:maxExpectedSize:into:
reflectionSerializationVersion
registerArgumentBufferLayoutForReference:argumentBufferLayout:
registerArgumentEncoderForReference:argumentEncoder:
registerBufferForReference:buffer:
registerCommandQueue:
registerCommandQueueForReference:commandQueue:
registerComputePipelineStateForReference:computePipeline:
registerDepthStencilStateForReference:depthStencil:
registerEventForReference:event:
registerFenceForReference:fence:
registerFunctionForReference:function:
registerHeapForReference:heap:
registerRenderPipelineStateForReference:renderPipeline:
registerSamplerStateForReference:sampler:
registerTextureForReference:texture:
releaseArgumentEncoderRef:
releaseBufferRef:
releaseCommandBufferRef:
releaseCommandQueueRef:
releaseDepthStencilStateRef:
releaseEventRef:
releaseFenceRef:
releaseFunctionRef:
releaseNotificationRef:
releaseObjectRef:
releaseRenderPipelineStateRef:
releaseSamplerStateRef:
releaseTextureRef:
removeAllObjects
removeObjectForKey:
renderCommandEncoder
renderCommandEncoderWithDescriptor:
renderEncoder
renderPassCommand
renderPassDescriptor
renderTargetArrayLength
renderTargetHeight
renderTargetWidth
replaceRegion:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
resetCommandsInBuffer:withRange:
resetTextureAccessCounters:region:mipLevel:slice:
resolveCounters:inRange:destinationBuffer:destinationOffset:
resolveDepthPlane
resolveLevel
resolveSlice
resolveTexture
respondsToSelector:
retain
retainCount
rotation
sampleCountersInBuffer:atSampleIndex:withBarrier:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
samplerRef
samplers
self
serializeStructType:version:
serializer
serializerResourceRef
setAccelerationStructure:atBufferIndex:
setAllowGPUOptimizedContents:
setAlphaTestReferenceValue:
setArgumentBuffer:offset:
setBlendColorRed:green:blue:alpha:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBuffers:offsets:withRange:withCommand:array:rangeMax:
setBytes:length:atIndex:
setBytes:length:atIndex:withCommand:array:rangeMax:
setClearColor:
setClearDepth:
setClearStencil:
setClipPlane:p2:p3:p4:atIndex:
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setCommandDataCorruptModeSPI:
setCompareFunction:
setComputePipelineState:
setCullMode:
setDepth:
setDepthBias:slopeScale:clamp:
setDepthClipMode:
setDepthClipModeSPI:
setDepthCompareFunction:
setDepthFailureOperation:
setDepthPlane:
setDepthResolveFilter:
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setDepthStencilPassOperation:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setDepthWriteEnabled:
setDispatchType:
setEncoderPosition:
setFragmentAccelerationStructure:atBufferIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentBytes:length:atIndex:
setFragmentIntersectionFunctionTable:atBufferIndex:
setFragmentIntersectionFunctionTables:withBufferRange:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:withRange:
setFragmentTexture:atIndex:
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setFragmentTextures:withRange:
setFragmentVisibleFunctionTable:atBufferIndex:
setFragmentVisibleFunctionTables:withBufferRange:
setFramebufferOnly:
setFrontFacingWinding:
setHeight:
setImageblockWidth:height:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setIsDrawable:
setLabel:
setLevel:
setLineWidth:
setLoadAction:
setLodAverage:
setMagFilter:
setMaxAnisotropy:
setMeshAccelerationStructure:atBufferIndex:
setMeshBuffer:offset:atIndex:
setMeshBufferOffset:atIndex:
setMeshBuffers:offsets:withRange:
setMeshBytes:length:atIndex:
setMeshIntersectionFunctionTable:atBufferIndex:
setMeshIntersectionFunctionTables:withBufferRange:
setMeshSamplerState:atIndex:
setMeshSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setMeshSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setMeshTexture:atIndex:
setMeshTextures:withRange:
setMeshVisibleFunctionTable:atBufferIndex:
setMeshVisibleFunctionTables:withBufferRange:
setMinFilter:
setMipFilter:
setMipmapLevelCount:
setNormalizedCoordinates:
setObject:forKey:
setObjectAccelerationStructure:atBufferIndex:
setObjectBufferOffset:atIndex:
setObjectBuffers:offsets:withRange:
setObjectBytes:length:atIndex:
setObjectIntersectionFunctionTable:atBufferIndex:
setObjectIntersectionFunctionTables:withBufferRange:
setObjectSamplerState:atIndex:
setObjectSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setObjectSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setObjectSamplerStates:withRange:
setObjectTexture:atIndex:
setObjectTextures:withRange:
setObjectThreadgroupMemoryLength:atIndex:
setObjectVisibleFunctionTable:atBufferIndex:
setObjectVisibleFunctionTables:withBufferRange:
setOverrideTriple:
setPointSize:
setPrimitiveRestartEnabled:
setPrimitiveRestartEnabled:index:
setProtectionOptions:
setProvokingVertexMode:
setRAddressMode:
setReadMask:
setReflectionSerializationVersion:
setRenderPipelineState:
setRenderTargetArrayLength:
setRenderTargetHeight:
setRenderTargetWidth:
setResolveDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveTexture:
setResourceIndex:
setResourceOptions:
setRotation:
setSAddressMode:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:withCommand:array:rangeMax:
setSamplerStates:withRange:
setSamplerStates:withRange:withCommand:array:rangeMax:
setScissorRects:count:
setSeparateCommits:
setSignaledValue:
setSize:
setSlice:
setSplitHandler:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setStencilCleared
setStencilCompareFunction:
setStencilFailureOperation:
setStencilFrontReferenceValue:backReferenceValue:
setStencilReferenceValue:
setStencilResolveFilter:
setStencilResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
setStencilStoreAction:
setStencilStoreActionOptions:
setStoreActionOptions:
setSupportArgumentBuffers:
setTAddressMode:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
setTexture:
setTexture:atIndex:
setTextures:withRange:
setTextures:withRange:withCommand:array:rangeMax:
setThreadgroupDistributionModeWithClusterGroupIndex:
setThreadgroupMemoryLength:atIndex:
setThreadgroupMemoryLength:offset:atIndex:
setThreadgroupPackingDisabled:
setTileAccelerationStructure:atBufferIndex:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileBytes:length:atIndex:
setTileIntersectionFunctionTable:atBufferIndex:
setTileIntersectionFunctionTables:withBufferRange:
setTileSamplerState:atIndex:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileVisibleFunctionTable:atBufferIndex:
setTileVisibleFunctionTables:withBufferRange:
setTransformFeedbackState:
setTriangleFillMode:
setTriangleFrontFillMode:backFillMode:
setType:
setUsage:
setVertexAccelerationStructure:atBufferIndex:
setVertexAmplificationCount:viewMappings:
setVertexAmplificationMode:value:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexBytes:length:atIndex:
setVertexIntersectionFunctionTable:atBufferIndex:
setVertexIntersectionFunctionTables:withBufferRange:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexVisibleFunctionTable:atBufferIndex:
setVertexVisibleFunctionTables:withBufferRange:
setViewport:
setViewportTransformEnabled:
setViewports:count:
setVisibilityResultBuffer:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setWidth:
setWriteMask:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventSetSignaledValue:serializedDataSize:allocator:
sharedEventSignaledValue:serializedDataSize:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventWaitSignaledValue:serializedDataSize:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
signaledValue
size
sizeInfoForHeap:allocator:
sizeInfoForHeap:serializedDataSize:allocator:
slice
split
splitHandlers
staticThreadgroupMemoryLength
status
stencilAttachment
stencilPrivate
stencilResolveFilter
storeAction
storeActionOptions
stream
stringWithFormat:
stringWithUTF8String:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
submitCommandSegmentsTimed:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
superclass
supportsCorrectBaseVertex
supportsOpenGL
synchronizeResource:
tessellationFactorBuffer
textureBarrier
textureRef
textureType
textures
threadExecutionWidth
tileHeight
tileWidth
truncateTo:
type
uniqueIdentifier
uniqueIdentifier:serializedDataSize:allocator:
uniqueIdentifierForComputePipelineState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForTexture:allocator:
updateFence:
updateFence:afterStages:
useHeap:
useHeaps:count:stages:
useResource:usage:
useResource:usage:stages:
useResourceGroup:usage:
useResourceGroup:usage:stages:
useResources:count:usage:
useResources:count:usage:stages:
usedSize
userInfo
vertexBuffers
vertexSamplers
vertexTextures
visibilityResultBuffer
waitForFence:
waitForFence:beforeStages:
waitUntilSignaledValue:timeoutMS:
width
writeSegmentHeader:continuation:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8^{?=ICCC}16@24
v16@0:8
C16@0:8
v32@0:8^{?=ICCC}16@"MTLByteIterator"24
@32@0:8@16@24
v48@0:8^{?=II}16@24Q32^v40
@20@0:8I16
v32@0:8^{?=II}16@24
@"_MTLDeserializer"
@"<MTLBlitCommandEncoderSPI>"
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24B32I36
@36@0:8@16@24B32
@32@0:8@16B24I28
@28@0:8@16B24
@24@0:8@16
v28@0:8I16@20
Q88@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80
v128@0:8*16*24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104Q112@120
@40@0:8{_NSRange=QQ}16@32
@112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88@96^Q104
^v120@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88Q96@104@112
I40@0:8Q16@24@32
I52@0:8@16@24Q32B40@44
I60@0:8Q16Q24@32Q40B48@52
I80@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48@64@72
I84@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64@68@76
I24@0:8@16
I32@0:8@16@24
I28@0:8I16@20
v36@0:8Q16I24@28
v40@0:8Q16I24I28@32
v32@0:8@16@24
v32@0:8Q16@24
v24@0:8@16
v40@0:8Q16@24@32
v44@0:8@16Q24I32@36
v60@0:8r^@16r^Q24{_NSRange=QQ}32I48@52
I36@0:8I16Q20@28
v44@0:8Q16Q24I32@36
v52@0:8r^@16{_NSRange=QQ}24I40@44
v40@0:8Q16Q24@32
v52@0:8r^@16Q24B32@36@44
I56@0:8@16@24Q32Q40@48
I40@0:8@16Q24@32
I40@0:8r^v16Q24^@32
I32@0:8r^v16Q24
I48@0:8r^v16Q24^{?=SIQ}32^@40
r*32@0:8r*16Q24
v24@0:8Q16
@"<MTLDevice>"
@"<MTLSerializerObjectRefAllocator>"
{MTLSerializerFeatures="supportsGenerateResourceRefs"B"supportsReflectionSerializationVersion"B"supportsSharedTextures"B"supportsScripts"B"supportsOpenGL"B"supportsIOSurfaceTextureWithRotation"B"supportsCorrectBaseVertex"B"supportsCorrectSwizzleChannels"B}
@"<MTLCommandBuffer>"
@32@0:8^{?=II}16@24
@"<MTLRenderCommandEncoderSPI>"
@"<MTLRenderPipelineState>"
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLProgramAddressTable>"16@0:8
v32@0:8Q16Q24
@"<MTLRenderCommandEncoder>"16@0:8
v20@0:8B16
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLRenderCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8@16@24@32
@"MTLSerializer"
@24@0:8Q16
@"<MTLFunction>"24@0:8Q16
I28@0:8I16@"<MTLCommandQueue>"20
@"<MTLCommandQueue>"20@0:8I16
I28@0:8I16@"<MTLFunction>"20
@"<MTLFunction>"20@0:8I16
I28@0:8I16@"<MTLComputePipelineState>"20
@"<MTLComputePipelineState>"20@0:8I16
I28@0:8I16@"<MTLRenderPipelineState>"20
@"<MTLRenderPipelineState>"20@0:8I16
I28@0:8I16@"<MTLBuffer>"20
@"<MTLBuffer>"20@0:8I16
I28@0:8I16@"<MTLTexture>"20
@"<MTLTexture>"20@0:8I16
I28@0:8I16@"<MTLSamplerState>"20
@"<MTLSamplerState>"20@0:8I16
I28@0:8I16@"<MTLDepthStencilState>"20
@"<MTLDepthStencilState>"20@0:8I16
I28@0:8I16@"<MTLFence>"20
@"<MTLFence>"20@0:8I16
I28@0:8I16@"_MTLIndirectArgumentBufferLayout"20
@"_MTLIndirectArgumentBufferLayout"20@0:8I16
I28@0:8I16@"<MTLArgumentEncoder>"20
@"<MTLArgumentEncoder>"20@0:8I16
I28@0:8I16@"<MTLHeap>"20
@"<MTLHeap>"20@0:8I16
I28@0:8I16@"<MTLEvent>"20
@"<MTLEvent>"20@0:8I16
@"<MTLResource>"20@0:8I16
@"NSMutableDictionary"
@32@0:8r*16Q24
v48@0:8r*16Q24@?32@40
B32@0:8r*16Q24
B40@0:8r*16Q24@32
v32@0:8r*16Q24
v48@0:8^{__IOSurface=}16r*24Q32@40
v52@0:8I16@20r*28Q36@44
v40@0:8^v16Q24r^{?=II}32
v56@0:8^^v16^Q24Q32@?40@?48
v60@0:8^^v16^Q24Q32@?40@?48I56
v48@0:8^^v16^Q24Q32@40
B56@0:8@16r*24Q32@40@48
I24@0:8@"<MTLBuffer>"16
I24@0:8@"<MTLCommandQueue>"16
@"NSObject<OS_dispatch_data>"32@0:8r*16Q24
v48@0:8r*16Q24@?<v@?I>32@"<MTLDeserializerAllocator>"40
B40@0:8r*16Q24@"<MTLDeserializerAllocator>"32
v48@0:8^{__IOSurface=}16r*24Q32@"<MTLDeserializerAllocator>"40
v52@0:8I16@"NSString"20r*28Q36@"<MTLDeserializerAllocator>"44
v56@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48
v60@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48I56
v60@0:8^^v16^Q24Q32@?<v@?ddQQ>40@?<v@?ddQQ>48I56
v48@0:8^^v16^Q24Q32@"<MTLCommandBuffer>"40
B56@0:8@"NSObject<OS_dispatch_data>"16r*24Q32@"NSString"40@"<MTLDeserializerAllocator>"48
@40@0:8@16B24@28B36
@24@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16
B32@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
@24@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16
B32@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16@24
@24@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16
B32@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16@24
@24@0:8^{?=I{?=QSCC}}16
B32@0:8^{?=I{?=QSCC}}16@24
B32@0:8^{?=II{?=b4b1b1b1b1b8b16IIISSSSQ}b1b31Q}16@24
B32@0:8^{?=IIQQSb1b16}16@24
B40@0:8^{?=I}16Q24@32
B40@0:8^{?=IQ}16Q24@32
B40@0:8^{?=II}16Q24@32
B40@0:8^{?=Ii}16Q24@32
B40@0:8^{?=IIQ}16Q24@32
B40@0:8^{?=Ib1b31I[0I]}16Q24@32
B40@0:8^{?=IQQ}16Q24@32
B40@0:8^{?=IC{?=QQ}}16Q24@32
B40@0:8^{?={?=b4b1b1b1b1b8b16IIISSSSQ}}16Q24@32
B40@0:8^{?=QS}16Q24@32
B32@0:8^{?=IIS}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}CCCC}16@24
B32@0:8^{?=IIQQ{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
B32@0:8^{?=I}16@24
B32@0:8^{?=IQQ}16Q24
@24@0:8r^{?=II}16
@48@0:8^{?=ICCC}16@24@32@40
@"<MTLCommandQueue>"
@"<MTLDeserializerObjectDelegate>"
@"MTLSharedEventListener"
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v24@0:8I16I20
v88@0:8{?=QQQ}16{?=QQQ}40{?=QQQ}64
v80@0:8@16Q24{?=QQQ}32{?=QQQ}56
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v40@0:8r^@16Q24Q32
v48@0:8r^@16Q24Q32Q40
v32@0:8r^@16Q24
v40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24Q32
v36@0:8@16Q24B32
v24@0:8@"<MTLRenderPipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v24@0:8@"<MTLDepthStencilState>"16
v80@0:8@"<MTLBuffer>"16Q24{?=QQQ}32{?=QQQ}56
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v32@0:8@"<MTLResource>"16Q24
v40@0:8@"<MTLResource>"16Q24Q32
v24@0:8@"<MTLHeap>"16
v32@0:8@"<MTLHeap>"16Q24
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v24@0:8@?16
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v88@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40
v92@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40I88
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
v40@0:8@"<MTLResourceGroupSPI>"16Q24Q32
@"NSMutableArray"
@"MTLRenderPassDescriptor"
@"<MTLSerializerRenderPipelineState>"
@"<MTLSerializerDepthStencilState>"
[31@"<MTLSerializerBuffer>"]
[128@"<MTLSerializerTexture>"]
[16@"<MTLSerializerSamplerState>"]
@"<MTLSerializerBuffer>"
@"<MTLComputeCommandEncoderSPI>"
@"<MTLComputePipelineState>"
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@16{_NSRange=QQ}24@40Q48
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v44@0:8@16{_NSRange=QQ}24I40
v104@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v144@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112Q136
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24I40
v104@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v28@0:8@16I24
v44@0:8@16Q24Q32I40
v64@0:8r^@16r^Q24{_NSRange=QQ}32I48^@52I60
v56@0:8r^v16Q24Q32I40^@44I52
v56@0:8r^@16{_NSRange=QQ}24I40^@44I52
v72@0:8r^@16r^f24r^f32{_NSRange=QQ}40I56^@60I68
v24@0:8C16B20
^v28@0:8Q16I24
@"<MTLSerializerCommandStream>"
@32@0:8^v16Q24
v32@0:8Q16^v24
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v24@0:8@"<MTLComputePipelineState>"16
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v24@0:8q16
B44@0:8@16Q24Q32I40
@"NSData"16@0:8
v32@0:8@"<MTLResourceGroupSPI>"16Q24
B44@0:8@"<MTLBuffer>"16Q24Q32I40
v44@0:8@"<MTLBuffer>"16Q24Q32I40
@32@0:8@16Q24
@"<MTLSerializerComputePipelineState>"
DDDD
!&+05:?
EO;Y"T
InvalidCommand
Size of command smaller than expected
Insufficient bytes left in iterator
Got invalid buffer for ref(%d)
Got invalid texture for ref(%d)
Invalid buffer range
UnrecognizedCommand
Unrecognized command at offset
v8@?0
ObjectRef generation queue
index creation queue
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSerializer newSharedTextureWithDescriptor:allocator:]
Shared texture feature not available in simulator
-[MTLSerializer newSharedTextureWithHandle:]
Size of command larger than expected
Attempting to draw with nil pipeline state
Attempting to do indexed draw with nil index buffer
Attempting to do indexed draw with nil control point index buffer
Attempting to do indirect draw with nil indirect buffer
Invalid render target index
Invalid depth stencil state
Command is longer than expected
Invalid buffer count
Too many buffers specified
Invalid buffer index
Invalid sampler count
Too many samplers specified
Invalid texture count
Too many textures specified
Invalid render pipeline state
Invalid viewport count
Too many scissor rects specified
Too many viewports specified
Too many resources specified
Invalid clip plane index
Invalid sampler index
Invalid viewport index
Invalid attachment index
UnexpectedCommand
Expected a render pass descriptor command
Invalid primitive type
CommandQueue
Function
ComputePipelineState
RenderPipelineState
Buffer
Texture
SamplerState
DepthStencilState
Fence
ArgumentBufferLayout
ArgumentEncoder
Heap
Event
InvalidReference
Invalid resource reference, %d
com.apple.gpusw.MTLDeserializer
deserializer
com.apple.gpusw.MTLDeserializerSubmissionQueue
com.apple.gpusw.MTLDeserializerCompletionQueue
IOSurface validation failed
v24@?0@"<MTLSharedEvent>"8Q16
InvalidEncoder
Encoder type doesn't match for continuation
InvalidContinuation
Previous stage didn't specify continuation
Invalid encoder type
v40@?0d8d16Q24Q32
v16@?0@"<MTLCommandBuffer>"8
Invalid %@ reference, %d, object already exists
Invalid %@ reference, %d
Unexpected error
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
Not supported
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
Not implemented
-[MTLSerializerRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setAlphaTestReferenceValue:]
-[MTLSerializerRenderCommandEncoder setPointSize:]
-[MTLSerializerRenderCommandEncoder setClipPlane:p2:p3:p4:atIndex:]
-[MTLSerializerRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setViewportTransformEnabled:]
-[MTLSerializerRenderCommandEncoder setProvokingVertexMode:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:index:]
-[MTLSerializerRenderCommandEncoder setTriangleFrontFillMode:backFillMode:]
-[MTLSerializerRenderCommandEncoder setTransformFeedbackState:]
-[MTLSerializerRenderCommandEncoder setDepthCleared]
-[MTLSerializerRenderCommandEncoder setStencilCleared]
-[MTLSerializerRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:]
-[MTLSerializerRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
-[MTLSerializerRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]
Attempting to dispatch without pipeline set
Invalid compute pipeline state
Invalid indirect buffer
Invalid indirect buffer offset
Invalid threadgroup memory size index
-[MTLSerializerBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
-[MTLSerializerBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
InvalidReadException
end of read past end of buffer
InvalidLengthException
new length is longer than existing length
InvalidAdvanceException
end of advance past end of buffer
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:withRange:]
-[MTLSerializerComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
Expected Header of %llu bytes but received only %llu bytes
Expected at least %llu bytes but received only %llu bytes
Expected Cmd ID %u but received Cmd Id %u
Failed to create pipeline
Unexpected type for unique identifier: %d
Non zero plane in non-planar IOSurface
Descriptor row bytes (%zu) > IOSurface row bytes (%zu)
Invalid row byte alignment (%zx) vs (%llx)
Overflow in IOSurface validation
Descriptor height*arrayLength (%llu) > IOSurface height (%zu)
Pixel format bytes per pixel doesn't match IOSurface bytes per pixel
cannot be mipmapped, mipmapLevelCount (%lu) disallowed
must have depth == 1, depth (%lu) disallowed
must be of type MTLTextureType2D, linear MTLTextureType2DArray or MTLTextureTypeTextureBuffer, textureType (%u) disallowed
MTLDeserializerBlitDecoder
MTLDeserializerDecoder
NSObject
DefaultObjectRefAllocator
MTLSerializerObjectRefAllocator
MTLSerializer
MTLDeserializerEventDecoder
MTLDeserializerRenderDecoder
MTLSerializerParallelRenderCommandEncoder
MTLParallelRenderCommandEncoderSPI
MTLCommandEncoderSPI
MTLCommandEncoder
MTLParallelRenderCommandEncoder
_MTLDeserializerHashObjectDelegate
MTLDeserializationContext
MTLDeserializerObjectDelegate
_MTLDeserializerObjectMapObjectDelegate
_MTLDeserializer
MTLDeserializer
MTLSerializerRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
MTLDeserializerComputeDecoder
MTLSerializerBlitCommandEncoder
MTLBlitCommandEncoderSPI
MTLBlitCommandEncoder
MTLSerializerCommandEncoder
MTLByteIterator
MTLSerializerComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
TB,VneedsWrites
GPUStartTime
_device
T@"<MTLDevice>",R
_fences
T@"MTLSerializer",R,V_serializer
_reflectionSerializationVersion
T@"NSString",R,C
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
TB,R
buffers
TB,R,V_generateResourceRefs
dealloc
TC,R
decodeSetSamplers:withIterator:
TQ,R,V_dispatchType
decodeSetViewport:withIterator:
TQ,V_reflectionSerializationVersion
decodeUpdateFence:withIterator:
_argumentBufferLayoutMap
deleteResource:
_argumentEncoderMap
depthAttachment
_bufferMap
encodeStartElse
_commandBufferIndex
fragmentBuffers
_commandQueues
getType
_computePipelineMap
heapRef
_depthStencilMap
isProxy
_deserializerGeneratesResourceRefs
newCommandQueue
_encoders
pushDebugGroup:
_encodersSize
registerBuffer:
_eventNotifications
releaseArgumentBufferLayoutRef:
_fenceMap
releaseHeapRef:
_functions
setArrayLength:
_generator
setDepthCleared
_heaps
setLodMinClamp:
_objectIndex
setNeedsWrites:
_renderPipelineMap
setPixelFormat:
_resourceMapQueue
setScissorRect:
_samplers
setTextureType:
_serializer
setTileSamplerStates:withRange:
_textureMap
setVisibilityResultMode:offset:
addCompletedHandler:
synchronizeTexture:slice:level:
addResourceReference:isWrite:
useHeap:stages:
addSplitHandler:
writeDescriptor
GPUEndTime
TQ,R,VtileWidth
T#,R
_events
T@"<MTLDevice>",R,Vdevice
_objectDelegate
T@"NSString",C
_resourcesDirty
backFaceStencil
TB,R,N,V_deserializerGeneratesResourceRefs
completionQueue
TB,VseparateCommits
decodeSetCullMode:withIterator:
TQ,R
decodeSetTextures:withIterator:
TQ,R,VtileHeight
decodeSignalEvent:withIterator:
UTF8String
deleteCommandQueueForReference:
_argumentBufferLayouts
deleteSamplerStateForReference:
_argumentEncoders
depthStencilRef
_buffers
enqueue
_commandQueueMap
getArgumentEncoderForReference:
_computePipeline
heapMaxAvailableSizeWithAlignment:serializedDataSize:allocator:
_computePipelines
initWithDevice:
_depthStencils
kernelStartTime
_dispatchType
newComputePipelineStateWithDescriptor:options:reflection:error:
_encodersCount
readBytes:into:
_eventMap
release
_features
releaseComputePipelineStateRef:
_functionMap
separateCommits
_generateResourceRefs
setBorderColor:
_heapMap
setLodMaxClamp:
_maxColorAttachmentIndex
setMeshSamplerStates:withRange:
_pipelineState
setObjectBuffer:offset:atIndex:
_renderPipelines
setSampleCount:
_samplerMap
setStoreAction:
_serialQueue
setThreadgroupDistributionMode:
_supportsCorrectBaseVertex
setVertexBuffer:offset:atIndex:
_textures
submissionQueue
addRenderTargetReferences
texture
addScheduledHandler:
useHeaps:count:
addStateReference:
advance:
alignment
allocateObjectRef
allocateOperationBytes:
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
argumentBufferLayoutConstantAtIndex:serializedDataSize:allocator:
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
argumentEncoderConstantAtIndex:serializedDataSize:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
argumentEncoderSetValues:serializedDataSize:allocator:
arrayLength
autorelease
beginContinuation
beginSegment:
blitCommandEncoder
blitEncoder
buffer
bufferGPUAddress:allocator:
bufferGPUAddress:serializedDataSize:allocator:
bufferLayoutMatchesFrontEndLayout
bufferRef
bytesLeft
class
clearColor
clearDepth
clearStencil
code
colorAttachments
commandBuffer
commandQueue
commit
computeCommandEncoder
computeEncoder
computeInfo:serializedDataSize:allocator:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
conformsToProtocol:
constantDataAtIndex:
constantOffsetAtIndex:
contents
copy
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
count
countByEnumeratingWithState:objects:count:
currentAllocatedSize
currentOffset
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
debugDescription
decodeBarrierResources:withIterator:
decodeBarrierScope:withIterator:
decodeBlitUpdateFence:withIterator:
decodeBlitWaitForFence:withIterator:
decodeCopyFromBufferToBuffer:withIterator:
decodeCopyFromBufferToTexture:withIterator:
decodeCopyFromTextureToBuffer:withIterator:
decodeCopyFromTextureToTexture:withIterator:
decodeCopyFromTextureToTextureWithNumSliceLevel:withIterator:
decodeCopyFromTextureToTextureWithOptions:withIterator:
decodeDispatchThreadgroups:withIterator:
decodeDispatchThreadgroupsIndirect:withIterator:
decodeDispatchThreads:withIterator:
decodeDrawIndexedInstancedBasePrimitives16:withIterator:
decodeDrawIndexedInstancedBasePrimitives16_2:withIterator:
decodeDrawIndexedInstancedBasePrimitives64:withIterator:
decodeDrawIndexedInstancedBasePrimitives64_2:withIterator:
decodeDrawIndexedInstancedPrimitives16:withIterator:
decodeDrawIndexedInstancedPrimitives64:withIterator:
decodeDrawIndexedPatches16:withIterator:
decodeDrawIndexedPatches64:withIterator:
decodeDrawIndexedPatchesIndirect:withIterator:
decodeDrawIndexedPrimitives16:withIterator:
decodeDrawIndexedPrimitives64:withIterator:
decodeDrawIndexedPrimitivesIndirect:withIterator:
decodeDrawInstancedBasePrimitives16:withIterator:
decodeDrawInstancedBasePrimitives64:withIterator:
decodeDrawInstancedPrimitives16:withIterator:
decodeDrawInstancedPrimitives64:withIterator:
decodeDrawPatches16:withIterator:
decodeDrawPatches64:withIterator:
decodeDrawPatchesIndirect:withIterator:
decodeDrawPrimitives16:withIterator:
decodeDrawPrimitives64:withIterator:
decodeDrawPrimitivesIndirect:withIterator:
decodeExecuteCommandsInBuffer:withIterator:
decodeExecuteCommandsInBufferRanged:withIterator:
decodeFillBuffer:withIterator:
decodeGenerateMipmaps:withIterator:
decodeOptimize:withIterator:
decodeOptimizeImage:withIterator:
decodeRenderBarrierResources:withIterator:
decodeRenderBarrierScope:withIterator:
decodeRenderUpdateFence:withIterator:
decodeRenderWaitForFence:withIterator:
decodeSegmentWithHeader:withIterator:withDecoder:into:
decodeSegments:lengths:count:into:
decodeSetAlphaTestReferenceValue:withIterator:
decodeSetBlendColor:withIterator:
decodeSetBufferOffset:withIterator:
decodeSetBuffers:withIterator:
decodeSetClipPlane:withIterator:
decodeSetColorResolveTexture:withIterator:
decodeSetColorStoreAction:withIterator:
decodeSetColorStoreActionOptions:withIterator:
decodeSetDepthBias:withIterator:
decodeSetDepthCleared:withIterator:
decodeSetDepthClipMode:withIterator:
decodeSetDepthResolveTexture:withIterator:
decodeSetDepthStencilState:withIterator:
decodeSetDepthStoreAction:withIterator:
decodeSetDepthStoreActionOptions:withIterator:
decodeSetFragmentBufferOffset:withIterator:
decodeSetFragmentBuffers:withIterator:
decodeSetFragmentSamplerState:withIterator:
decodeSetFragmentSamplerStates:withIterator:
decodeSetFragmentSamplerStatesLODClamp:withIterator:
decodeSetFragmentTextures:withIterator:
decodeSetFrontFacingWinding:withIterator:
decodeSetLineWidth:withIterator:
decodeSetPipelineState:withIterator:
decodeSetPointSize:withIterator:
decodeSetPrimitiveRestartIndexEnabled:withIterator:
decodeSetProvokingVertexMode:withIterator:
decodeSetRenderPipelineState:withIterator:
decodeSetSamplersLODClamp:withIterator:
decodeSetScissorRect:withIterator:
decodeSetScissorRects:withIterator:
decodeSetStageInRegion:withIterator:
decodeSetStageInRegionIndirect:withIterator:
decodeSetStencilCleared:withIterator:
decodeSetStencilRef:withIterator:
decodeSetStencilResolveTexture:withIterator:
decodeSetStencilStoreAction:withIterator:
decodeSetStencilStoreActionOptions:withIterator:
decodeSetTesselationFactorBuffer:withIterator:
decodeSetTesselationFactorScale:withIterator:
decodeSetThreadgroupMemoryLength:withIterator:
decodeSetTransformFeedbackState:withIterator:
decodeSetTriangleFillMode:withIterator:
decodeSetTriangleFillModeFrontBack:withIterator:
decodeSetVertexBufferOffset:withIterator:
decodeSetVertexBuffers:withIterator:
decodeSetVertexSamplerState:withIterator:
decodeSetVertexSamplerStates:withIterator:
decodeSetVertexSamplerStatesLODClamp:withIterator:
decodeSetVertexTextures:withIterator:
decodeSetViewportTransformEnabled:withIterator:
decodeSetViewports:withIterator:
decodeSetVisibilityResultMode:withIterator:
decodeSynchronizeResource:withIterator:
decodeSynchronizeTextureImage:withIterator:
decodeTextureBarrier:withIterator:
decodeUseHeaps:withIterator:
decodeUseHeapsWithStages:withIterator:
decodeUseResources:withIterator:
decodeUseResourcesWithStages:withIterator:
decodeWaitForEvent:withIterator:
decodeWaitForEventTimeout:withIterator:
decodeWaitForFence:withIterator:
decodeWithHeader:withIterator:
deleteArgumentBufferLayoutForReference:
deleteArgumentBufferLayoutRef:allocator:
deleteArgumentEncoderForReference:
deleteArgumentEncoderRef:allocator:
deleteBufferForReference:
deleteBufferRef:allocator:
deleteCommandQueueRef:allocator:
deleteComputePipelineStateForReference:
deleteComputePipelineStateRef:allocator:
deleteDepthStencilStateForReference:
deleteDepthStencilStateRef:allocator:
deleteEventForReference:
deleteEventRef:allocator:
deleteFenceForReference:
deleteFenceRef:allocator:
deleteFunctionForReference:
deleteFunctionRef:allocator:
deleteHeapForReference:
deleteHeapRef:allocator:
deleteObjectWithSerializedData:serializedDataSize:
deleteRenderPipelineStateForReference:
deleteRenderPipelineStateRef:allocator:
deleteResourceForReference:
deleteSamplerStateRef:allocator:
deleteTextureForReference:
deleteTextureRef:allocator:
depth
depthPlane
depthResolveFilter
depthStencilPrivate
depthStencilState
description
descriptorPrivate
deserializer
deserializerGeneratesResourceRefs
device
didModifyRange:buffer:
didModifyRange:serializedDataSize:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchThreadsPerTile:
dispatchThreadsPerTile:inRegion:
dispatchThreadsPerTile:inRegion:withRenderTargetArrayIndex:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
dispatchType
doResourcesAlias:serializedDataSize:allocator:
doesAliasAllResources:count:
doesAliasAnyResources:count:
doesAliasResources:count:all:resource:allocator:
doesNotRecognizeSelector:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
enableNullBufferBinds:
encodeEndDoWhile:offset:comparison:referenceValue:
encodeEndIf
encodeEndWhile
encodeSignalEvent:value:
encodeStartDoWhile
encodeStartIf:offset:comparison:referenceValue:
encodeStartWhile:offset:comparison:referenceValue:
encodeWaitForEvent:value:
encodeWaitForEvent:value:timeout:
encodedLength
endEncoding
endEncodingAndRetrieveProgramAddressTable
error
eventListener
exceptionWithName:reason:userInfo:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
executeCommandsInBuffer:withRange:
fault
fenceRef
fillBuffer:range:pattern4:
fillBuffer:range:value:
fillTexture:level:slice:region:bytes:length:
fillTexture:level:slice:region:color:
fillTexture:level:slice:region:color:pixelFormat:
fixStoreActions:
flushWrites
forceLoadActions
forceStoreActionsForPosition:
fragmentSamplers
fragmentTextures
frontFaceStencil
functionNames
functionWithFunctionRef:
generateMipmapsForTexture:
generateResourceRefs
getArgumentBufferLayoutForReference:
getBufferBytes:alignment:buffer:offset:
getBufferForReference:
getBufferForReferenceNonNull:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:dataSize:command:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
getCommandBufferBytes:
getCommandBytes:forCommand:
getCommandBytesRetry:forCommand:
getCommandQueueForReference:
getComputeInfoWithAllocator:
getComputePipelineStateForReference:
getDepthStencilStateForReference:
getEventForReference:
getFenceForReference:
getFunctionForReference:
getHeapForReference:
getRenderPipelineStateForReference:
getResourceForReference:
getSamplerStateForReference:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
getTextureForReference:
getTextureForReferenceNonNull:
getWritableInfo:buffers:texturesArrayLength:textures:
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
gpuAddress
hadSplit
handleNewObjectReplyData:replyDataSize:
handleNewObjectReplyData:replyDataSize:errorMessage:
handleSplits
hash
heapBufferSizeAndAlign:serializedDataSize:allocator:
heapBufferSizeAndAlignWithLength:options:
heapBufferSizeAndAlignWithLength:options:allocator:
heapTextureSizeAndAlign:serializedDataSize:allocator:
heapTextureSizeAndAlignWithDescriptor:
heapTextureSizeAndAlignWithDescriptor:allocator:
height
indirectCommandBufferRef
init
initWithBuffer:withLength:
initWithCommandBuffer:
initWithCommandBuffer:descriptor:
initWithCommandBuffer:descriptor:serializer:
initWithCommandBuffer:dispatchType:
initWithCommandBuffer:renderPassDescriptor:
initWithCommandBuffer:renderPassDescriptor:serializer:
initWithCommandBuffer:serializer:
initWithDeserializer:commandBuffer:
initWithDevice:deserializerGeneratesResourceRefs:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:generateResourceRefs:
initWithDevice:generateResourceRefs:objectDelegate:createQueues:
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:deserializerVersion:
insertDebugSignpost:
invalidateCompressedTexture:
invalidateCompressedTexture:slice:level:
iosurfaceReadOnlyTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
isEqual:
isKindOfClass:
isMemberOfClass:
isMemorylessRender
iteratorForBuffer:withLength:
kernelEndTime
label
length
level
loadAction
makeAliasable
makeAliasableResource:allocator:
makeAliasiableResource:serializedDataSize:allocator:
maxAvailableSizeWithAlignment:
maxAvailableSizeWithAlignment:heap:allocator:
maxComputeBuffers
maxComputeLocalMemorySizes
maxComputeSamplers
maxComputeTextures
maxFragmentBuffers
maxFragmentSamplers
maxFragmentTextures
maxThreadgroupMemoryLength
maxThreadsPerThreadgroup
maxTotalThreadsPerThreadgroup
maxVertexBuffers
maxVertexSamplers
maxVertexTextures
maxViewportCount
memoryBarrierNotificationWithResources:count:
memoryBarrierNotificationWithScope:
memoryBarrierWithResources:count:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithScope:
memoryBarrierWithScope:afterStages:beforeStages:
merge:
minimumLinearTextureAlignment:serializedDataSize:allocator:
minimumLinearTextureAlignmentForPixelFormat:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignment:serializedDataSize:allocator:
minimumTextureBufferAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:allocator:
mipmapLevelCount
needsWrites
newArgumentBufferLayoutRef
newArgumentBufferLayoutWithStructType:allocator:
newArgumentBufferLayoutWithStructType:serializedDataSize:allocator:
newArgumentEncoderRef
newArgumentEncoderWithBufferLayout:serializedDataSize:allocator:
newArgumentEncoderWithLayout:
newArgumentEncoderWithLayout:allocator:
newBufferRef
newBufferWithHeap:allocator:
newBufferWithLength:options:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newBufferWithLength:options:offset:
newCommandBufferRef
newCommandQueueRef
newComputePipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineStateRef
newComputePipelineStateWithDescriptor:serializedDataSize:allocator:
newComputePipelineStateWithSerializedDescriptor:allocator:
newDepthStencilStateRef
newDepthStencilStateWithDescriptor:
newDepthStencilStateWithDescriptor:allocator:
newDescriptor:
newDescriptorFromVersion1:withIterator:
newEventRef
newFence
newFence:allocator:
newFenceRef
newFenceWithAllocator:
newFunctionRef
newFunctionWithIR:
newFunctionWithName:
newFunctionWithSerializedMetallib:commandData:commandDataSize:overrideTargetTriple:allocator:
newHeapRef
newHeapWithDescriptor:
newHeapWithDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newIndirectArgumentBufferLayoutWithStructType:
newKernelDebugInfo
newLibraryWithData:error:
newNotificationRef
newObjectCommandWithSerializedData:serializedDataSize:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newRenderPipelineStateRef
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:serializedDataSize:allocator:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newSamplerStateRef
newSamplerStateWithDescriptor:
newSamplerStateWithDescriptor:allocator:
newSharedEvent
newSharedEvent:allocator:
newSharedEventWithAllocator:
newSharedEventWithEventPort:label:serializedData:serializedDataSize:allocator:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:
newSharedEventWithMachPort:allocator:
newSharedTextureWithDescriptor:allocator:
newSharedTextureWithHandle:
newStructTypeWithSerializedData:
newTextureRef
newTextureViewWithBuffer:allocator:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:allocator:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newTextureViewWithSwizzle:allocator:
newTextureViewWithTextureType:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTextureWithDescriptor:
newTextureWithDescriptor:allocator:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:offset:bytesPerRow:
newTextureWithHeap:allocator:
newTextureWithIOSurface:serializedData:serializedDataSize:allocator:
newTiledTextureViewWithBuffer:allocator:
newTiledTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
notifyListener:atValue:block:
notifyListenerForEventRef:atValue:allocator:
notifyListenerForEventWithSerializedData:serializedDataSize:block:allocator:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
operationWithSerializedData:serializedDataSize:
operationWithSerializedData:serializedDataSize:allocator:
optimize:slice:level:withCommand:
optimize:withCommand:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeIndirectCommandBuffer:withRange:
optimizeReset:withRange:withCommand:
payloadFromReplyData:replyDataSize:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pipelineRef
pipelineState
pixelFormat
popDebugGroup
readCommand:withIterator:expectedSize:into:
readVariableCommand:withIterator:maxExpectedSize:into:
reflectionSerializationVersion
registerArgumentBufferLayoutForReference:argumentBufferLayout:
registerArgumentEncoderForReference:argumentEncoder:
registerBufferForReference:buffer:
registerCommandQueue:
registerCommandQueueForReference:commandQueue:
registerComputePipelineStateForReference:computePipeline:
registerDepthStencilStateForReference:depthStencil:
registerEventForReference:event:
registerFenceForReference:fence:
registerFunctionForReference:function:
registerHeapForReference:heap:
registerRenderPipelineStateForReference:renderPipeline:
registerSamplerStateForReference:sampler:
registerTextureForReference:texture:
releaseArgumentEncoderRef:
releaseBufferRef:
releaseCommandBufferRef:
releaseCommandQueueRef:
releaseDepthStencilStateRef:
releaseEventRef:
releaseFenceRef:
releaseFunctionRef:
releaseNotificationRef:
releaseObjectRef:
releaseRenderPipelineStateRef:
releaseSamplerStateRef:
releaseTextureRef:
removeAllObjects
removeObjectForKey:
renderCommandEncoder
renderCommandEncoderWithDescriptor:
renderEncoder
renderPassCommand
renderPassDescriptor
renderTargetArrayLength
renderTargetHeight
renderTargetWidth
replaceRegion:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
resetCommandsInBuffer:withRange:
resetTextureAccessCounters:region:mipLevel:slice:
resolveCounters:inRange:destinationBuffer:destinationOffset:
resolveDepthPlane
resolveLevel
resolveSlice
resolveTexture
respondsToSelector:
retain
retainCount
rotation
sampleCountersInBuffer:atSampleIndex:withBarrier:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
samplerRef
samplers
self
serializeStructType:version:
serializer
serializerResourceRef
setAccelerationStructure:atBufferIndex:
setAllowGPUOptimizedContents:
setAlphaTestReferenceValue:
setArgumentBuffer:offset:
setBlendColorRed:green:blue:alpha:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBuffers:offsets:withRange:withCommand:array:rangeMax:
setBytes:length:atIndex:
setBytes:length:atIndex:withCommand:array:rangeMax:
setClearColor:
setClearDepth:
setClearStencil:
setClipPlane:p2:p3:p4:atIndex:
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setCommandDataCorruptModeSPI:
setCompareFunction:
setComputePipelineState:
setCullMode:
setDepth:
setDepthBias:slopeScale:clamp:
setDepthClipMode:
setDepthClipModeSPI:
setDepthCompareFunction:
setDepthFailureOperation:
setDepthPlane:
setDepthResolveFilter:
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setDepthStencilPassOperation:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setDepthWriteEnabled:
setDispatchType:
setEncoderPosition:
setFragmentAccelerationStructure:atBufferIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentBytes:length:atIndex:
setFragmentIntersectionFunctionTable:atBufferIndex:
setFragmentIntersectionFunctionTables:withBufferRange:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:withRange:
setFragmentTexture:atIndex:
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setFragmentTextures:withRange:
setFragmentVisibleFunctionTable:atBufferIndex:
setFragmentVisibleFunctionTables:withBufferRange:
setFramebufferOnly:
setFrontFacingWinding:
setHeight:
setImageblockWidth:height:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setIsDrawable:
setLabel:
setLevel:
setLineWidth:
setLoadAction:
setLodAverage:
setMagFilter:
setMaxAnisotropy:
setMeshAccelerationStructure:atBufferIndex:
setMeshBuffer:offset:atIndex:
setMeshBufferOffset:atIndex:
setMeshBuffers:offsets:withRange:
setMeshBytes:length:atIndex:
setMeshIntersectionFunctionTable:atBufferIndex:
setMeshIntersectionFunctionTables:withBufferRange:
setMeshSamplerState:atIndex:
setMeshSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setMeshSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setMeshTexture:atIndex:
setMeshTextures:withRange:
setMeshVisibleFunctionTable:atBufferIndex:
setMeshVisibleFunctionTables:withBufferRange:
setMinFilter:
setMipFilter:
setMipmapLevelCount:
setNormalizedCoordinates:
setObject:forKey:
setObjectAccelerationStructure:atBufferIndex:
setObjectBufferOffset:atIndex:
setObjectBuffers:offsets:withRange:
setObjectBytes:length:atIndex:
setObjectIntersectionFunctionTable:atBufferIndex:
setObjectIntersectionFunctionTables:withBufferRange:
setObjectSamplerState:atIndex:
setObjectSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setObjectSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setObjectSamplerStates:withRange:
setObjectTexture:atIndex:
setObjectTextures:withRange:
setObjectThreadgroupMemoryLength:atIndex:
setObjectVisibleFunctionTable:atBufferIndex:
setObjectVisibleFunctionTables:withBufferRange:
setOverrideTriple:
setPointSize:
setPrimitiveRestartEnabled:
setPrimitiveRestartEnabled:index:
setProtectionOptions:
setProvokingVertexMode:
setRAddressMode:
setReadMask:
setReflectionSerializationVersion:
setRenderPipelineState:
setRenderTargetArrayLength:
setRenderTargetHeight:
setRenderTargetWidth:
setResolveDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveTexture:
setResourceIndex:
setResourceOptions:
setRotation:
setSAddressMode:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:withCommand:array:rangeMax:
setSamplerStates:withRange:
setSamplerStates:withRange:withCommand:array:rangeMax:
setScissorRects:count:
setSeparateCommits:
setSignaledValue:
setSize:
setSlice:
setSplitHandler:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setStencilCleared
setStencilCompareFunction:
setStencilFailureOperation:
setStencilFrontReferenceValue:backReferenceValue:
setStencilReferenceValue:
setStencilResolveFilter:
setStencilResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
setStencilStoreAction:
setStencilStoreActionOptions:
setStoreActionOptions:
setSupportArgumentBuffers:
setTAddressMode:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
setTexture:
setTexture:atIndex:
setTextures:withRange:
setTextures:withRange:withCommand:array:rangeMax:
setThreadgroupDistributionModeWithClusterGroupIndex:
setThreadgroupMemoryLength:atIndex:
setThreadgroupMemoryLength:offset:atIndex:
setThreadgroupPackingDisabled:
setTileAccelerationStructure:atBufferIndex:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileBytes:length:atIndex:
setTileIntersectionFunctionTable:atBufferIndex:
setTileIntersectionFunctionTables:withBufferRange:
setTileSamplerState:atIndex:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileVisibleFunctionTable:atBufferIndex:
setTileVisibleFunctionTables:withBufferRange:
setTransformFeedbackState:
setTriangleFillMode:
setTriangleFrontFillMode:backFillMode:
setType:
setUsage:
setVertexAccelerationStructure:atBufferIndex:
setVertexAmplificationCount:viewMappings:
setVertexAmplificationMode:value:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexBytes:length:atIndex:
setVertexIntersectionFunctionTable:atBufferIndex:
setVertexIntersectionFunctionTables:withBufferRange:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexVisibleFunctionTable:atBufferIndex:
setVertexVisibleFunctionTables:withBufferRange:
setViewport:
setViewportTransformEnabled:
setViewports:count:
setVisibilityResultBuffer:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setWidth:
setWriteMask:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventSetSignaledValue:serializedDataSize:allocator:
sharedEventSignaledValue:serializedDataSize:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventWaitSignaledValue:serializedDataSize:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
signaledValue
size
sizeInfoForHeap:allocator:
sizeInfoForHeap:serializedDataSize:allocator:
slice
split
splitHandlers
staticThreadgroupMemoryLength
status
stencilAttachment
stencilPrivate
stencilResolveFilter
storeAction
storeActionOptions
stream
stringWithFormat:
stringWithUTF8String:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
submitCommandSegmentsTimed:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
superclass
supportsCorrectBaseVertex
supportsOpenGL
synchronizeResource:
tessellationFactorBuffer
textureBarrier
textureRef
textureType
textures
threadExecutionWidth
tileHeight
tileWidth
truncateTo:
type
uniqueIdentifier
uniqueIdentifier:serializedDataSize:allocator:
uniqueIdentifierForComputePipelineState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForTexture:allocator:
updateFence:
updateFence:afterStages:
useHeap:
useHeaps:count:stages:
useResource:usage:
useResource:usage:stages:
useResourceGroup:usage:
useResourceGroup:usage:stages:
useResources:count:usage:
useResources:count:usage:stages:
usedSize
userInfo
vertexBuffers
vertexSamplers
vertexTextures
visibilityResultBuffer
waitForFence:
waitForFence:beforeStages:
waitUntilSignaledValue:timeoutMS:
width
writeSegmentHeader:continuation:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8^{?=ICCC}16@24
v16@0:8
C16@0:8
v32@0:8^{?=ICCC}16@"MTLByteIterator"24
@32@0:8@16@24
v48@0:8^{?=II}16@24Q32^v40
@20@0:8I16
v32@0:8^{?=II}16@24
@"_MTLDeserializer"
@"<MTLBlitCommandEncoderSPI>"
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24B32I36
@36@0:8@16@24B32
@32@0:8@16B24I28
@28@0:8@16B24
@24@0:8@16
v28@0:8I16@20
Q88@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80
v128@0:8*16*24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104Q112@120
@40@0:8{_NSRange=QQ}16@32
@112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88@96^Q104
^v120@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88Q96@104@112
I40@0:8Q16@24@32
I52@0:8@16@24Q32B40@44
I60@0:8Q16Q24@32Q40B48@52
I80@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48@64@72
I84@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64@68@76
I24@0:8@16
I32@0:8@16@24
I28@0:8I16@20
v36@0:8Q16I24@28
v40@0:8Q16I24I28@32
v32@0:8@16@24
v32@0:8Q16@24
v24@0:8@16
v40@0:8Q16@24@32
v44@0:8@16Q24I32@36
v60@0:8r^@16r^Q24{_NSRange=QQ}32I48@52
I36@0:8I16Q20@28
v44@0:8Q16Q24I32@36
v52@0:8r^@16{_NSRange=QQ}24I40@44
v40@0:8Q16Q24@32
v52@0:8r^@16Q24B32@36@44
I56@0:8@16@24Q32Q40@48
I40@0:8@16Q24@32
I40@0:8r^v16Q24^@32
I32@0:8r^v16Q24
I48@0:8r^v16Q24^{?=SIQ}32^@40
r*32@0:8r*16Q24
v24@0:8Q16
@"<MTLDevice>"
@"<MTLSerializerObjectRefAllocator>"
{MTLSerializerFeatures="supportsGenerateResourceRefs"B"supportsReflectionSerializationVersion"B"supportsSharedTextures"B"supportsScripts"B"supportsOpenGL"B"supportsIOSurfaceTextureWithRotation"B"supportsCorrectBaseVertex"B"supportsCorrectSwizzleChannels"B}
@"<MTLCommandBuffer>"
@32@0:8^{?=II}16@24
@"<MTLRenderCommandEncoderSPI>"
@"<MTLRenderPipelineState>"
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLProgramAddressTable>"16@0:8
v32@0:8Q16Q24
@"<MTLRenderCommandEncoder>"16@0:8
v20@0:8B16
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLRenderCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8@16@24@32
@"MTLSerializer"
@24@0:8Q16
@"<MTLFunction>"24@0:8Q16
I28@0:8I16@"<MTLCommandQueue>"20
@"<MTLCommandQueue>"20@0:8I16
I28@0:8I16@"<MTLFunction>"20
@"<MTLFunction>"20@0:8I16
I28@0:8I16@"<MTLComputePipelineState>"20
@"<MTLComputePipelineState>"20@0:8I16
I28@0:8I16@"<MTLRenderPipelineState>"20
@"<MTLRenderPipelineState>"20@0:8I16
I28@0:8I16@"<MTLBuffer>"20
@"<MTLBuffer>"20@0:8I16
I28@0:8I16@"<MTLTexture>"20
@"<MTLTexture>"20@0:8I16
I28@0:8I16@"<MTLSamplerState>"20
@"<MTLSamplerState>"20@0:8I16
I28@0:8I16@"<MTLDepthStencilState>"20
@"<MTLDepthStencilState>"20@0:8I16
I28@0:8I16@"<MTLFence>"20
@"<MTLFence>"20@0:8I16
I28@0:8I16@"_MTLIndirectArgumentBufferLayout"20
@"_MTLIndirectArgumentBufferLayout"20@0:8I16
I28@0:8I16@"<MTLArgumentEncoder>"20
@"<MTLArgumentEncoder>"20@0:8I16
I28@0:8I16@"<MTLHeap>"20
@"<MTLHeap>"20@0:8I16
I28@0:8I16@"<MTLEvent>"20
@"<MTLEvent>"20@0:8I16
@"<MTLResource>"20@0:8I16
@"NSMutableDictionary"
@32@0:8r*16Q24
v48@0:8r*16Q24@?32@40
B32@0:8r*16Q24
B40@0:8r*16Q24@32
v32@0:8r*16Q24
v48@0:8^{__IOSurface=}16r*24Q32@40
v52@0:8I16@20r*28Q36@44
v40@0:8^v16Q24r^{?=II}32
v56@0:8^^v16^Q24Q32@?40@?48
v60@0:8^^v16^Q24Q32@?40@?48I56
v48@0:8^^v16^Q24Q32@40
B56@0:8@16r*24Q32@40@48
I24@0:8@"<MTLBuffer>"16
I24@0:8@"<MTLCommandQueue>"16
@"NSObject<OS_dispatch_data>"32@0:8r*16Q24
v48@0:8r*16Q24@?<v@?I>32@"<MTLDeserializerAllocator>"40
B40@0:8r*16Q24@"<MTLDeserializerAllocator>"32
v48@0:8^{__IOSurface=}16r*24Q32@"<MTLDeserializerAllocator>"40
v52@0:8I16@"NSString"20r*28Q36@"<MTLDeserializerAllocator>"44
v56@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48
v60@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48I56
v60@0:8^^v16^Q24Q32@?<v@?ddQQ>40@?<v@?ddQQ>48I56
v48@0:8^^v16^Q24Q32@"<MTLCommandBuffer>"40
B56@0:8@"NSObject<OS_dispatch_data>"16r*24Q32@"NSString"40@"<MTLDeserializerAllocator>"48
@40@0:8@16B24@28B36
@24@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16
B32@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
@24@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16
B32@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16@24
@24@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16
B32@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16@24
@24@0:8^{?=I{?=QSCC}}16
B32@0:8^{?=I{?=QSCC}}16@24
B32@0:8^{?=II{?=b4b1b1b1b1b8b16IIISSSSQ}b1b31Q}16@24
B32@0:8^{?=IIQQSb1b16}16@24
B40@0:8^{?=I}16Q24@32
B40@0:8^{?=IQ}16Q24@32
B40@0:8^{?=II}16Q24@32
B40@0:8^{?=Ii}16Q24@32
B40@0:8^{?=IIQ}16Q24@32
B40@0:8^{?=Ib1b31I[0I]}16Q24@32
B40@0:8^{?=IQQ}16Q24@32
B40@0:8^{?=IC{?=QQ}}16Q24@32
B40@0:8^{?={?=b4b1b1b1b1b8b16IIISSSSQ}}16Q24@32
B40@0:8^{?=QS}16Q24@32
B32@0:8^{?=IIS}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}CCCC}16@24
B32@0:8^{?=IIQQ{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
B32@0:8^{?=I}16@24
B32@0:8^{?=IQQ}16Q24
@24@0:8r^{?=II}16
@48@0:8^{?=ICCC}16@24@32@40
@"<MTLCommandQueue>"
@"<MTLDeserializerObjectDelegate>"
@"MTLSharedEventListener"
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v24@0:8I16I20
v88@0:8{?=QQQ}16{?=QQQ}40{?=QQQ}64
v80@0:8@16Q24{?=QQQ}32{?=QQQ}56
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v40@0:8r^@16Q24Q32
v48@0:8r^@16Q24Q32Q40
v32@0:8r^@16Q24
v40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24Q32
v36@0:8@16Q24B32
v24@0:8@"<MTLRenderPipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v24@0:8@"<MTLDepthStencilState>"16
v80@0:8@"<MTLBuffer>"16Q24{?=QQQ}32{?=QQQ}56
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v32@0:8@"<MTLResource>"16Q24
v40@0:8@"<MTLResource>"16Q24Q32
v24@0:8@"<MTLHeap>"16
v32@0:8@"<MTLHeap>"16Q24
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v24@0:8@?16
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v88@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40
v92@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40I88
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
v40@0:8@"<MTLResourceGroupSPI>"16Q24Q32
@"NSMutableArray"
@"MTLRenderPassDescriptor"
@"<MTLSerializerRenderPipelineState>"
@"<MTLSerializerDepthStencilState>"
[31@"<MTLSerializerBuffer>"]
[128@"<MTLSerializerTexture>"]
[16@"<MTLSerializerSamplerState>"]
@"<MTLSerializerBuffer>"
@"<MTLComputeCommandEncoderSPI>"
@"<MTLComputePipelineState>"
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@16{_NSRange=QQ}24@40Q48
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v44@0:8@16{_NSRange=QQ}24I40
v104@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v144@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112Q136
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24I40
v104@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v28@0:8@16I24
v44@0:8@16Q24Q32I40
v64@0:8r^@16r^Q24{_NSRange=QQ}32I48^@52I60
v56@0:8r^v16Q24Q32I40^@44I52
v56@0:8r^@16{_NSRange=QQ}24I40^@44I52
v72@0:8r^@16r^f24r^f32{_NSRange=QQ}40I56^@60I68
v24@0:8C16B20
^v28@0:8Q16I24
@"<MTLSerializerCommandStream>"
@32@0:8^v16Q24
v32@0:8Q16^v24
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v24@0:8@"<MTLComputePipelineState>"16
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v24@0:8q16
B44@0:8@16Q24Q32I40
@"NSData"16@0:8
v32@0:8@"<MTLResourceGroupSPI>"16Q24
B44@0:8@"<MTLBuffer>"16Q24Q32I40
v44@0:8@"<MTLBuffer>"16Q24Q32I40
@32@0:8@16Q24
@"<MTLSerializerComputePipelineState>"
