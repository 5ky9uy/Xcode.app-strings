InvalidCommand
Size of command smaller than expected
Insufficient bytes left in iterator
Got invalid buffer for ref(%d)
Got invalid texture for ref(%d)
Invalid buffer range
UnrecognizedCommand
Unrecognized command at offset
v8@?0
ObjectRef generation queue
index creation queue
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSerializer newSharedTextureWithDescriptor:allocator:]
Shared texture feature not available in simulator
-[MTLSerializer newSharedTextureWithHandle:]
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Size of command larger than expected
Attempting to draw with nil pipeline state
Attempting to do indexed draw with nil index buffer
Attempting to do indexed draw with nil control point index buffer
Attempting to do indirect draw with nil indirect buffer
Invalid render target index
Invalid depth stencil state
Command is longer than expected
Invalid buffer count
Too many buffers specified
Invalid buffer index
Invalid sampler count
Too many samplers specified
Invalid texture count
Too many textures specified
Invalid render pipeline state
Invalid viewport count
Too many scissor rects specified
Too many viewports specified
Too many resources specified
Invalid clip plane index
Invalid sampler index
Invalid viewport index
Invalid attachment index
UnexpectedCommand
Expected a render pass descriptor command
Invalid primitive type
CommandQueue
Function
ComputePipelineState
RenderPipelineState
Buffer
Texture
SamplerState
DepthStencilState
Fence
ArgumentBufferLayout
ArgumentEncoder
Heap
Event
InvalidReference
Invalid resource reference, %d
com.apple.gpusw.MTLDeserializer
deserializer
com.apple.gpusw.MTLDeserializerSubmissionQueue
com.apple.gpusw.MTLDeserializerCompletionQueue
v24@?0@"<MTLSharedEvent>"8Q16
InvalidEncoder
Encoder type doesn't match for continuation
InvalidContinuation
Previous stage didn't specify continuation
Invalid encoder type
v40@?0d8d16Q24Q32
v16@?0@"<MTLCommandBuffer>"8
Invalid %@ reference, %d, object already exists
Invalid %@ reference, %d
Unexpected error
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
Not supported
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
Not implemented
-[MTLSerializerRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setAlphaTestReferenceValue:]
-[MTLSerializerRenderCommandEncoder setPointSize:]
-[MTLSerializerRenderCommandEncoder setClipPlane:p2:p3:p4:atIndex:]
-[MTLSerializerRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setViewportTransformEnabled:]
-[MTLSerializerRenderCommandEncoder setProvokingVertexMode:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:index:]
-[MTLSerializerRenderCommandEncoder setTriangleFrontFillMode:backFillMode:]
-[MTLSerializerRenderCommandEncoder setTransformFeedbackState:]
-[MTLSerializerRenderCommandEncoder setDepthCleared]
-[MTLSerializerRenderCommandEncoder setStencilCleared]
-[MTLSerializerRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:]
-[MTLSerializerRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
-[MTLSerializerRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]
Attempting to dispatch without pipeline set
Invalid compute pipeline state
Invalid indirect buffer
Invalid indirect buffer offset
Invalid threadgroup memory size index
-[MTLSerializerBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
-[MTLSerializerBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
InvalidReadException
end of read past end of buffer
InvalidLengthException
new length is longer than existing length
InvalidAdvanceException
end of advance past end of buffer
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:withRange:]
-[MTLSerializerComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
Expected Header of %llu bytes but received only %llu bytes
Expected at least %llu bytes but received only %llu bytes
Expected Cmd ID %u but received Cmd Id %u
Failed to create pipeline
Unexpected type for unique identifier: %d
MTLDeserializerBlitDecoder
MTLDeserializerDecoder
NSObject
DefaultObjectRefAllocator
MTLSerializerObjectRefAllocator
MTLSerializer
MTLDeserializerEventDecoder
MTLDeserializerRenderDecoder
MTLSerializerParallelRenderCommandEncoder
MTLParallelRenderCommandEncoderSPI
MTLCommandEncoderSPI
MTLCommandEncoder
MTLParallelRenderCommandEncoder
_MTLDeserializerHashObjectDelegate
MTLDeserializationContext
MTLDeserializerObjectDelegate
_MTLDeserializerObjectMapObjectDelegate
_MTLDeserializer
MTLDeserializer
MTLSerializerRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
MTLDeserializerComputeDecoder
MTLSerializerBlitCommandEncoder
MTLBlitCommandEncoderSPI
MTLBlitCommandEncoder
MTLSerializerCommandEncoder
MTLByteIterator
MTLSerializerComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
init
blitCommandEncoder
dealloc
exceptionWithName:reason:userInfo:
bytesLeft
readBytes:into:
advance:
getBufferForReference:
stringWithFormat:
getTextureForReference:
readCommand:withIterator:expectedSize:into:
getBufferForReferenceNonNull:
getTextureForReferenceNonNull:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
length
fillBuffer:range:value:
generateMipmapsForTexture:
optimizeContentsForCPUAccess:
optimizeContentsForGPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:slice:level:
getFenceForReference:
updateFence:
waitForFence:
decodeCopyFromBufferToTexture:withIterator:
decodeCopyFromBufferToBuffer:withIterator:
decodeCopyFromTextureToBuffer:withIterator:
decodeCopyFromTextureToTexture:withIterator:
decodeCopyFromTextureToTextureWithOptions:withIterator:
decodeFillBuffer:withIterator:
decodeGenerateMipmaps:withIterator:
decodeOptimize:withIterator:
decodeOptimizeImage:withIterator:
decodeBlitUpdateFence:withIterator:
decodeBlitWaitForFence:withIterator:
decodeCopyFromTextureToTextureWithNumSliceLevel:withIterator:
endEncoding
fault
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
decodeWithHeader:withIterator:
type
TC,R
initWithDeserializer:commandBuffer:
decodeSynchronizeResource:withIterator:
decodeSynchronizeTextureImage:withIterator:
deserializer
blitEncoder
allocateObjectRef
releaseObjectRef:
_generator
_serialQueue
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
allocateOperationBytes:
newTextureRef
newSamplerStateRef
newDepthStencilStateRef
pixelFormat
bufferRef
textureRef
heapRef
newBufferRef
newFenceRef
newEventRef
serializeStructType:version:
newArgumentBufferLayoutRef
newArgumentEncoderRef
samplerRef
pipelineRef
newNotificationRef
serializerResourceRef
newFunctionRef
newRenderPipelineStateRef
newComputePipelineStateRef
rotation
newHeapRef
descriptorPrivate
stringWithUTF8String:
handleNewObjectReplyData:replyDataSize:errorMessage:
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:
initWithDevice:deserializerGeneratesResourceRefs:
initWithDevice:
releaseBufferRef:
deleteBufferRef:allocator:
releaseTextureRef:
deleteTextureRef:allocator:
releaseDepthStencilStateRef:
deleteDepthStencilStateRef:allocator:
releaseSamplerStateRef:
deleteSamplerStateRef:allocator:
releaseFunctionRef:
deleteFunctionRef:allocator:
releaseComputePipelineStateRef:
deleteComputePipelineStateRef:allocator:
releaseRenderPipelineStateRef:
deleteRenderPipelineStateRef:allocator:
releaseFenceRef:
deleteFenceRef:allocator:
releaseArgumentBufferLayoutRef:
deleteArgumentBufferLayoutRef:allocator:
releaseArgumentEncoderRef:
deleteArgumentEncoderRef:allocator:
releaseHeapRef:
deleteHeapRef:allocator:
releaseEventRef:
deleteEventRef:allocator:
newCommandQueueRef
releaseCommandQueueRef:
deleteCommandQueueRef:allocator:
newCommandBufferRef
releaseCommandBufferRef:
releaseNotificationRef:
newTextureWithDescriptor:
newSamplerStateWithDescriptor:
newDepthStencilStateWithDescriptor:
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
didModifyRange:buffer:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newFenceWithAllocator:
newSharedEventWithAllocator:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:allocator:
newArgumentBufferLayoutWithStructType:allocator:
newArgumentEncoderWithLayout:allocator:
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
sizeInfoForHeap:allocator:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:allocator:
getComputeInfoWithAllocator:
maxAvailableSizeWithAlignment:heap:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
bufferGPUAddress:allocator:
uniqueIdentifierForTexture:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForComputePipelineState:allocator:
notifyListenerForEventRef:atValue:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
heapTextureSizeAndAlignWithDescriptor:allocator:
heapBufferSizeAndAlignWithLength:options:allocator:
makeAliasableResource:allocator:
doesAliasResources:count:all:resource:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTiledTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newSharedTextureWithDescriptor:allocator:
newSharedTextureWithHandle:
newFunctionWithIR:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newComputePipelineStateWithSerializedDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newTextureWithDescriptor:allocator:
newDepthStencilStateWithDescriptor:allocator:
newSamplerStateWithDescriptor:allocator:
newHeapWithDescriptor:allocator:
handleNewObjectReplyData:replyDataSize:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
payloadFromReplyData:replyDataSize:
supportsOpenGL
supportsCorrectBaseVertex
deserializerGeneratesResourceRefs
reflectionSerializationVersion
setReflectionSerializationVersion:
_device
_objectIndex
_commandBufferIndex
_eventNotifications
_deserializerGeneratesResourceRefs
_reflectionSerializationVersion
_features
TB,R,N,V_deserializerGeneratesResourceRefs
TQ,V_reflectionSerializationVersion
TB,R
depthStencilPrivate
stencilPrivate
getEventForReference:
encodeSignalEvent:value:
encodeWaitForEvent:value:
encodeWaitForEvent:value:timeout:
decodeSignalEvent:withIterator:
decodeWaitForEvent:withIterator:
decodeWaitForEventTimeout:withIterator:
commandBuffer
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
updateFence:afterStages:
waitForFence:beforeStages:
setBlendColorRed:green:blue:alpha:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
getDepthStencilStateForReference:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setCullMode:
setDepthBias:slopeScale:clamp:
setDepthClipModeSPI:
readVariableCommand:withIterator:maxExpectedSize:into:
device
maxFragmentBuffers
setFragmentBuffers:offsets:withRange:
setFragmentBufferOffset:atIndex:
maxFragmentSamplers
getSamplerStateForReference:
setFragmentSamplerStates:withRange:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
maxFragmentTextures
setFragmentTextures:withRange:
setFrontFacingWinding:
getRenderPipelineStateForReference:
setRenderPipelineState:
setScissorRect:
maxViewportCount
setScissorRects:count:
setStencilFrontReferenceValue:backReferenceValue:
setStencilStoreAction:
setStencilStoreActionOptions:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
setTriangleFillMode:
maxVertexBuffers
setVertexBuffers:offsets:withRange:
setVertexBufferOffset:atIndex:
maxVertexSamplers
setVertexSamplerStates:withRange:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
maxVertexTextures
setVertexTextures:withRange:
setViewport:
setViewports:count:
setVisibilityResultMode:offset:
getHeapForReference:
useHeaps:count:
useHeaps:count:stages:
getResourceForReference:
useResources:count:usage:
useResources:count:usage:stages:
setLineWidth:
setAlphaTestReferenceValue:
setPointSize:
setClipPlane:p2:p3:p4:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setViewportTransformEnabled:
setProvokingVertexMode:
setPrimitiveRestartEnabled:index:
setTriangleFrontFillMode:backFillMode:
setTransformFeedbackState:
setDepthCleared
setStencilCleared
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
depthAttachment
setTexture:
setResolveTexture:
setLevel:
setSlice:
setDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveDepthPlane:
setLoadAction:
setStoreAction:
setStoreActionOptions:
setClearDepth:
setDepthResolveFilter:
stencilAttachment
setClearStencil:
setStencilResolveFilter:
colorAttachments
objectAtIndexedSubscript:
setClearColor:
setVisibilityResultBuffer:
setRenderTargetArrayLength:
setRenderTargetWidth:
setRenderTargetHeight:
newDescriptorFromVersion1:withIterator:
newDescriptor:
renderCommandEncoderWithDescriptor:
decodeDrawPrimitives64:withIterator:
decodeDrawPrimitives16:withIterator:
decodeDrawInstancedPrimitives64:withIterator:
decodeDrawInstancedPrimitives16:withIterator:
decodeDrawInstancedBasePrimitives64:withIterator:
decodeDrawInstancedBasePrimitives16:withIterator:
decodeDrawIndexedPrimitives64:withIterator:
decodeDrawIndexedPrimitives16:withIterator:
decodeDrawIndexedInstancedPrimitives64:withIterator:
decodeDrawIndexedInstancedPrimitives16:withIterator:
decodeDrawIndexedInstancedBasePrimitives64:withIterator:
decodeDrawIndexedInstancedBasePrimitives16:withIterator:
decodeDrawPatches64:withIterator:
decodeDrawPatches16:withIterator:
decodeDrawIndexedPatches64:withIterator:
decodeDrawIndexedPatches16:withIterator:
decodeDrawPrimitivesIndirect:withIterator:
decodeDrawIndexedPrimitivesIndirect:withIterator:
decodeDrawPatchesIndirect:withIterator:
decodeDrawIndexedPatchesIndirect:withIterator:
decodeExecuteCommandsInBuffer:withIterator:
decodeExecuteCommandsInBufferRanged:withIterator:
decodeRenderBarrierResources:withIterator:
decodeRenderBarrierScope:withIterator:
decodeRenderUpdateFence:withIterator:
decodeRenderWaitForFence:withIterator:
decodeSetBlendColor:withIterator:
decodeSetColorStoreAction:withIterator:
decodeSetColorStoreActionOptions:withIterator:
decodeSetDepthStencilState:withIterator:
decodeSetDepthStoreAction:withIterator:
decodeSetCullMode:withIterator:
decodeSetDepthBias:withIterator:
decodeSetDepthClipMode:withIterator:
decodeSetFragmentBuffers:withIterator:
decodeSetFragmentBufferOffset:withIterator:
decodeSetFragmentSamplerStates:withIterator:
decodeSetFragmentSamplerStatesLODClamp:withIterator:
decodeSetFragmentTextures:withIterator:
decodeSetFrontFacingWinding:withIterator:
decodeSetRenderPipelineState:withIterator:
decodeSetScissorRect:withIterator:
decodeSetScissorRects:withIterator:
decodeSetStencilRef:withIterator:
decodeSetStencilStoreActionOptions:withIterator:
decodeSetTesselationFactorBuffer:withIterator:
decodeSetTesselationFactorScale:withIterator:
decodeSetTriangleFillMode:withIterator:
decodeSetVertexBuffers:withIterator:
decodeSetVertexBufferOffset:withIterator:
decodeSetVertexSamplerStates:withIterator:
decodeSetVertexSamplerStatesLODClamp:withIterator:
decodeSetVertexTextures:withIterator:
decodeSetViewport:withIterator:
decodeSetViewports:withIterator:
decodeSetVisibilityResultMode:withIterator:
decodeTextureBarrier:withIterator:
decodeUseHeaps:withIterator:
decodeUseHeapsWithStages:withIterator:
decodeUseResources:withIterator:
decodeSetLineWidth:withIterator:
decodeUseResourcesWithStages:withIterator:
decodeDrawIndexedInstancedBasePrimitives64_2:withIterator:
decodeDrawIndexedInstancedBasePrimitives16_2:withIterator:
decodeSetAlphaTestReferenceValue:withIterator:
decodeSetPointSize:withIterator:
decodeSetClipPlane:withIterator:
decodeSetVertexSamplerState:withIterator:
decodeSetFragmentSamplerState:withIterator:
decodeSetViewportTransformEnabled:withIterator:
decodeSetProvokingVertexMode:withIterator:
decodeSetPrimitiveRestartIndexEnabled:withIterator:
decodeSetTriangleFillModeFrontBack:withIterator:
decodeSetTransformFeedbackState:withIterator:
decodeSetDepthCleared:withIterator:
decodeSetStencilCleared:withIterator:
decodeSetColorResolveTexture:withIterator:
decodeSetDepthResolveTexture:withIterator:
decodeSetStencilResolveTexture:withIterator:
decodeSetDepthStoreActionOptions:withIterator:
decodeSetStencilStoreAction:withIterator:
renderEncoder
_pipelineState
_maxColorAttachmentIndex
initWithCommandBuffer:renderPassDescriptor:serializer:
initWithCommandBuffer:renderPassDescriptor:
merge:
renderCommandEncoder
setEncoderPosition:
fixStoreActions:
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
label
setLabel:
T@"<MTLDevice>",R
T@"NSString",C
endEncodingAndRetrieveProgramAddressTable
separateCommits
setSeparateCommits:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
serializer
_encodersSize
_encodersCount
_encoders
_serializer
T@"MTLSerializer",R,V_serializer
TB,VseparateCommits
calculateOffsetToRegion:level:slice:
width
height
depth
contents
removeAllObjects
numberWithUnsignedInt:
objectForKey:
removeObjectForKey:
getFunctionForReference:
functionWithFunctionRef:
registerCommandQueueForReference:commandQueue:
getCommandQueueForReference:
deleteCommandQueueForReference:
registerFunctionForReference:function:
deleteFunctionForReference:
registerComputePipelineStateForReference:computePipeline:
getComputePipelineStateForReference:
deleteComputePipelineStateForReference:
registerRenderPipelineStateForReference:renderPipeline:
deleteRenderPipelineStateForReference:
registerBufferForReference:buffer:
deleteBufferForReference:
registerTextureForReference:texture:
deleteTextureForReference:
registerSamplerStateForReference:sampler:
deleteSamplerStateForReference:
registerDepthStencilStateForReference:depthStencil:
deleteDepthStencilStateForReference:
registerFenceForReference:fence:
deleteFenceForReference:
registerArgumentBufferLayoutForReference:argumentBufferLayout:
getArgumentBufferLayoutForReference:
deleteArgumentBufferLayoutForReference:
registerArgumentEncoderForReference:argumentEncoder:
getArgumentEncoderForReference:
deleteArgumentEncoderForReference:
registerHeapForReference:heap:
deleteHeapForReference:
registerEventForReference:event:
deleteEventForReference:
deleteResourceForReference:
_commandQueues
_functions
_computePipelines
_renderPipelines
_buffers
_textures
_samplers
_depthStencils
_fences
_argumentBufferLayouts
_argumentEncoders
_heaps
_events
_commandQueueMap
_functionMap
_computePipelineMap
_renderPipelineMap
_bufferMap
_textureMap
_samplerMap
_depthStencilMap
_fenceMap
_argumentBufferLayoutMap
_argumentEncoderMap
_heapMap
_eventMap
_resourceMapQueue
newCommandQueue
initWithDevice:generateResourceRefs:objectDelegate:createQueues:
initWithDevice:generateResourceRefs:
setTextureType:
setFramebufferOnly:
setIsDrawable:
setAllowGPUOptimizedContents:
setWidth:
setHeight:
setDepth:
setMipmapLevelCount:
setSampleCount:
setArrayLength:
setUsage:
setPixelFormat:
setResourceOptions:
setProtectionOptions:
setMinFilter:
setMagFilter:
setLodAverage:
setCompareFunction:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setMipFilter:
setMaxAnisotropy:
setNormalizedCoordinates:
setSupportArgumentBuffers:
setLodMinClamp:
setLodMaxClamp:
setResourceIndex:
setBorderColor:
setDepthCompareFunction:
setDepthWriteEnabled:
frontFaceStencil
backFaceStencil
setSize:
setType:
newHeapWithDescriptor:
newTextureWithDescriptor:offset:
newBufferWithLength:options:offset:
newBufferWithLength:options:
size
usedSize
currentAllocatedSize
gpuAddress
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
maxThreadsPerThreadgroup
maxThreadgroupMemoryLength
maxAvailableSizeWithAlignment:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineStateWithDescriptor:options:reflection:error:
maxTotalThreadsPerThreadgroup
threadExecutionWidth
staticThreadgroupMemoryLength
uniqueIdentifier
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newStructTypeWithSerializedData:
newIndirectArgumentBufferLayoutWithStructType:
bufferLayoutMatchesFrontEndLayout
alignment
encodedLength
newArgumentEncoderWithLayout:
constantOffsetAtIndex:
constantDataAtIndex:
doesAliasAllResources:count:
doesAliasAnyResources:count:
signaledValue
setSignaledValue:
waitUntilSignaledValue:timeoutMS:
setArgumentBuffer:offset:
setBuffers:offsets:withRange:
setTextures:withRange:
setSamplerStates:withRange:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
makeAliasable
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureWithDescriptor:offset:bytesPerRow:
newLibraryWithData:error:
setOverrideTriple:
functionNames
count
newFunctionWithName:
newFence
newSharedEvent
newSharedEventWithMachPort:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
didModifyRange:serializedDataSize:
newTextureViewWithPixelFormat:allocator:
newTextureViewWithTextureType:allocator:
newTextureViewWithSwizzle:allocator:
newTextureViewWithBuffer:allocator:
newTextureWithHeap:allocator:
newBufferWithHeap:allocator:
newComputePipelineStateWithDescriptor:serializedDataSize:allocator:
newFence:allocator:
newSharedEvent:allocator:
newRenderPipelineStateWithDescriptor:serializedDataSize:allocator:
newArgumentBufferLayoutWithStructType:serializedDataSize:allocator:
newArgumentEncoderWithBufferLayout:serializedDataSize:allocator:
argumentBufferLayoutConstantAtIndex:serializedDataSize:allocator:
argumentEncoderConstantAtIndex:serializedDataSize:allocator:
argumentEncoderSetValues:serializedDataSize:allocator:
heapTextureSizeAndAlign:serializedDataSize:allocator:
heapBufferSizeAndAlign:serializedDataSize:allocator:
makeAliasiableResource:serializedDataSize:allocator:
doResourcesAlias:serializedDataSize:allocator:
sharedEventSignaledValue:serializedDataSize:allocator:
sharedEventSetSignaledValue:serializedDataSize:allocator:
sharedEventWaitSignaledValue:serializedDataSize:allocator:
sizeInfoForHeap:serializedDataSize:allocator:
heapMaxAvailableSizeWithAlignment:serializedDataSize:allocator:
minimumLinearTextureAlignment:serializedDataSize:allocator:
minimumTextureBufferAlignment:serializedDataSize:allocator:
newTiledTextureViewWithBuffer:allocator:
computeInfo:serializedDataSize:allocator:
bufferGPUAddress:serializedDataSize:allocator:
uniqueIdentifier:serializedDataSize:allocator:
setRotation:
newTextureWithDescriptor:iosurface:plane:
notifyListener:atValue:block:
replaceRegion:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
submitCommandSegmentsTimed:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
enqueue
kernelStartTime
kernelEndTime
status
error
code
addScheduledHandler:
GPUStartTime
GPUEndTime
addCompletedHandler:
decodeSegments:lengths:count:into:
commit
iteratorForBuffer:withLength:
truncateTo:
decodeSegmentWithHeader:withIterator:withDecoder:into:
registerBuffer:
registerCommandQueue:
newObjectCommandWithSerializedData:serializedDataSize:
notifyListenerForEventWithSerializedData:serializedDataSize:block:allocator:
operationWithSerializedData:serializedDataSize:
operationWithSerializedData:serializedDataSize:allocator:
deleteResource:
deleteObjectWithSerializedData:serializedDataSize:
newTextureWithIOSurface:serializedData:serializedDataSize:allocator:
newSharedEventWithEventPort:label:serializedData:serializedDataSize:allocator:
getBytes:dataSize:command:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:
newFunctionWithSerializedMetallib:commandData:commandDataSize:overrideTargetTriple:allocator:
generateResourceRefs
submissionQueue
completionQueue
commandQueue
_objectDelegate
eventListener
_generateResourceRefs
T@"<MTLDevice>",R,Vdevice
TB,R,V_generateResourceRefs
setObject:forKey:
setStencilCompareFunction:
setStencilFailureOperation:
setDepthFailureOperation:
setDepthStencilPassOperation:
setReadMask:
setWriteMask:
userInfo
objectForKeyedSubscript:
UTF8String
countByEnumeratingWithState:objects:count:
initWithCommandBuffer:descriptor:serializer:
initWithCommandBuffer:serializer:
split
setSplitHandler:
copy
writeSegmentHeader:continuation:
writeDescriptor
addRenderTargetReferences
getCommandBytes:forCommand:
texture
resolveTexture
level
slice
depthPlane
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
clearDepth
depthResolveFilter
clearStencil
stencilResolveFilter
clearColor
visibilityResultBuffer
renderTargetArrayLength
renderTargetWidth
renderTargetHeight
addResourceReference:isWrite:
addStateReference:
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
handleSplits
flushWrites
indirectCommandBufferRef
getCommandBytesRetry:forCommand:
fenceRef
depthStencilRef
setBuffers:offsets:withRange:withCommand:array:rangeMax:
setBytes:length:atIndex:withCommand:array:rangeMax:
setSamplerStates:withRange:withCommand:array:rangeMax:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:withCommand:array:rangeMax:
setTextures:withRange:withCommand:array:rangeMax:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
doesNotRecognizeSelector:
forceStoreActionsForPosition:
forceLoadActions
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexTexture:atIndex:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexVisibleFunctionTable:atBufferIndex:
setVertexVisibleFunctionTables:withBufferRange:
setVertexIntersectionFunctionTable:atBufferIndex:
setVertexIntersectionFunctionTables:withBufferRange:
setVertexAccelerationStructure:atBufferIndex:
setVertexAmplificationCount:viewMappings:
setDepthClipMode:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentVisibleFunctionTable:atBufferIndex:
setFragmentVisibleFunctionTables:withBufferRange:
setFragmentIntersectionFunctionTable:atBufferIndex:
setFragmentIntersectionFunctionTables:withBufferRange:
setFragmentAccelerationStructure:atBufferIndex:
setStencilReferenceValue:
setObjectBytes:length:atIndex:
setObjectBuffer:offset:atIndex:
setObjectBufferOffset:atIndex:
setObjectBuffers:offsets:withRange:
setObjectTexture:atIndex:
setObjectTextures:withRange:
setObjectSamplerState:atIndex:
setObjectSamplerStates:withRange:
setObjectSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setObjectSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setObjectThreadgroupMemoryLength:atIndex:
setMeshBytes:length:atIndex:
setMeshBuffer:offset:atIndex:
setMeshBufferOffset:atIndex:
setMeshBuffers:offsets:withRange:
setMeshTexture:atIndex:
setMeshTextures:withRange:
setMeshSamplerState:atIndex:
setMeshSamplerStates:withRange:
setMeshSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setMeshSamplerStates:lodMinClamps:lodMaxClamps:withRange:
drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
textureBarrier
setTileBytes:length:atIndex:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileSamplerState:atIndex:
setTileSamplerStates:withRange:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileVisibleFunctionTable:atBufferIndex:
setTileVisibleFunctionTables:withBufferRange:
setTileIntersectionFunctionTable:atBufferIndex:
setTileIntersectionFunctionTables:withBufferRange:
setTileAccelerationStructure:atBufferIndex:
dispatchThreadsPerTile:
setThreadgroupMemoryLength:offset:atIndex:
useResource:usage:
useResource:usage:stages:
useHeap:
useHeap:stages:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:afterStages:beforeStages:
memoryBarrierWithResources:count:afterStages:beforeStages:
sampleCountersInBuffer:atSampleIndex:withBarrier:
tileWidth
tileHeight
addSplitHandler:
isMemorylessRender
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setVertexAmplificationMode:value:
setObjectVisibleFunctionTable:atBufferIndex:
setObjectVisibleFunctionTables:withBufferRange:
setMeshVisibleFunctionTable:atBufferIndex:
setMeshVisibleFunctionTables:withBufferRange:
setCommandDataCorruptModeSPI:
setPrimitiveRestartEnabled:
setColorResolveTexture:slice:depthPlane:level:atIndex:
setDepthResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:
dispatchThreadsPerTile:inRegion:
dispatchThreadsPerTile:inRegion:withRenderTargetArrayIndex:
useResourceGroup:usage:stages:
setObjectIntersectionFunctionTable:atBufferIndex:
setObjectIntersectionFunctionTables:withBufferRange:
setObjectAccelerationStructure:atBufferIndex:
setMeshIntersectionFunctionTable:atBufferIndex:
setMeshIntersectionFunctionTables:withBufferRange:
setMeshAccelerationStructure:atBufferIndex:
initWithCommandBuffer:descriptor:
beginSegment:
getType
needsWrites
setNeedsWrites:
splitHandlers
renderPassDescriptor
hadSplit
pipelineState
depthStencilState
fragmentBuffers
fragmentTextures
fragmentSamplers
vertexBuffers
vertexTextures
vertexSamplers
tessellationFactorBuffer
renderPassCommand
_resourcesDirty
_supportsCorrectBaseVertex
TB,VneedsWrites
TQ,R,VtileWidth
TQ,R,VtileHeight
computeCommandEncoder
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
maxComputeBuffers
maxComputeSamplers
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
maxComputeTextures
setBufferOffset:atIndex:
setComputePipelineState:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
maxComputeLocalMemorySizes
setThreadgroupMemoryLength:atIndex:
memoryBarrierWithScope:
memoryBarrierWithResources:count:
decodeDispatchThreadgroups:withIterator:
decodeDispatchThreadgroupsIndirect:withIterator:
decodeDispatchThreads:withIterator:
decodeSetBuffers:withIterator:
decodeSetSamplers:withIterator:
decodeSetSamplersLODClamp:withIterator:
decodeSetTextures:withIterator:
decodeSetBufferOffset:withIterator:
decodeSetPipelineState:withIterator:
decodeSetStageInRegion:withIterator:
decodeSetStageInRegionIndirect:withIterator:
decodeSetThreadgroupMemoryLength:withIterator:
decodeUpdateFence:withIterator:
decodeWaitForFence:withIterator:
decodeBarrierScope:withIterator:
decodeBarrierResources:withIterator:
computeEncoder
_computePipeline
optimize:withCommand:
optimize:slice:level:withCommand:
optimizeReset:withRange:withCommand:
mipmapLevelCount
arrayLength
textureType
synchronizeResource:
synchronizeTexture:slice:level:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:toTexture:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
resetTextureAccessCounters:region:mipLevel:slice:
resetCommandsInBuffer:withRange:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
optimizeIndirectCommandBuffer:withRange:
resolveCounters:inRange:destinationBuffer:destinationOffset:
invalidateCompressedTexture:
invalidateCompressedTexture:slice:level:
fillBuffer:range:pattern4:
fillTexture:level:slice:region:bytes:length:
fillTexture:level:slice:region:color:
fillTexture:level:slice:region:color:pixelFormat:
initWithCommandBuffer:
getBufferBytes:alignment:buffer:offset:
getCommandBufferBytes:
beginContinuation
stream
initWithBuffer:withLength:
buffer
currentOffset
setDispatchType:
dispatchType
getWritableInfo:buffers:texturesArrayLength:textures:
memoryBarrierNotificationWithResources:count:
memoryBarrierNotificationWithScope:
setBytes:length:atIndex:
setBuffer:offset:atIndex:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setAccelerationStructure:atBufferIndex:
setTexture:atIndex:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setImageblockWidth:height:
newKernelDebugInfo
setThreadgroupPackingDisabled:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
enableNullBufferBinds:
useResourceGroup:usage:
encodeStartDoWhile
encodeEndDoWhile:offset:comparison:referenceValue:
encodeStartWhile:offset:comparison:referenceValue:
encodeEndWhile
encodeStartIf:offset:comparison:referenceValue:
encodeStartElse
encodeEndIf
initWithCommandBuffer:dispatchType:
buffers
textures
samplers
_dispatchType
TQ,R,V_dispatchType
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8^{?=ICCC}16@24
v16@0:8
C16@0:8
v32@0:8^{?=ICCC}16@"MTLByteIterator"24
@32@0:8@16@24
v48@0:8^{?=II}16@24Q32^v40
@20@0:8I16
v32@0:8^{?=II}16@24
@"_MTLDeserializer"
@"<MTLBlitCommandEncoderSPI>"
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24B32I36
@36@0:8@16@24B32
@32@0:8@16B24I28
@28@0:8@16B24
@24@0:8@16
v28@0:8I16@20
Q88@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80
v128@0:8*16*24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104Q112@120
@40@0:8{_NSRange=QQ}16@32
@112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88@96^Q104
^v120@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88Q96@104@112
I40@0:8Q16@24@32
I52@0:8@16@24Q32B40@44
I60@0:8Q16Q24@32Q40B48@52
I80@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48@64@72
I84@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64@68@76
I24@0:8@16
I32@0:8@16@24
I28@0:8I16@20
v36@0:8Q16I24@28
v40@0:8Q16I24I28@32
v32@0:8@16@24
v32@0:8Q16@24
v24@0:8@16
v40@0:8Q16@24@32
v44@0:8@16Q24I32@36
v60@0:8r^@16r^Q24{_NSRange=QQ}32I48@52
I36@0:8I16Q20@28
v44@0:8Q16Q24I32@36
v52@0:8r^@16{_NSRange=QQ}24I40@44
v40@0:8Q16Q24@32
v52@0:8r^@16Q24B32@36@44
I56@0:8@16@24Q32Q40@48
I40@0:8@16Q24@32
I40@0:8r^v16Q24^@32
I32@0:8r^v16Q24
I48@0:8r^v16Q24^{?=SIQ}32^@40
r*32@0:8r*16Q24
v24@0:8Q16
@"<MTLDevice>"
@"<MTLSerializerObjectRefAllocator>"
{MTLSerializerFeatures="supportsGenerateResourceRefs"B"supportsReflectionSerializationVersion"B"supportsSharedTextures"B"supportsScripts"B"supportsOpenGL"B"supportsIOSurfaceTextureWithRotation"B"supportsCorrectBaseVertex"B"supportsCorrectSwizzleChannels"B}
@"<MTLCommandBuffer>"
@32@0:8^{?=II}16@24
@"<MTLRenderCommandEncoderSPI>"
@"<MTLRenderPipelineState>"
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLProgramAddressTable>"16@0:8
v32@0:8Q16Q24
@"<MTLRenderCommandEncoder>"16@0:8
v20@0:8B16
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLRenderCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8@16@24@32
@"MTLSerializer"
@24@0:8Q16
@"<MTLFunction>"24@0:8Q16
I28@0:8I16@"<MTLCommandQueue>"20
@"<MTLCommandQueue>"20@0:8I16
I28@0:8I16@"<MTLFunction>"20
@"<MTLFunction>"20@0:8I16
I28@0:8I16@"<MTLComputePipelineState>"20
@"<MTLComputePipelineState>"20@0:8I16
I28@0:8I16@"<MTLRenderPipelineState>"20
@"<MTLRenderPipelineState>"20@0:8I16
I28@0:8I16@"<MTLBuffer>"20
@"<MTLBuffer>"20@0:8I16
I28@0:8I16@"<MTLTexture>"20
@"<MTLTexture>"20@0:8I16
I28@0:8I16@"<MTLSamplerState>"20
@"<MTLSamplerState>"20@0:8I16
I28@0:8I16@"<MTLDepthStencilState>"20
@"<MTLDepthStencilState>"20@0:8I16
I28@0:8I16@"<MTLFence>"20
@"<MTLFence>"20@0:8I16
I28@0:8I16@"_MTLIndirectArgumentBufferLayout"20
@"_MTLIndirectArgumentBufferLayout"20@0:8I16
I28@0:8I16@"<MTLArgumentEncoder>"20
@"<MTLArgumentEncoder>"20@0:8I16
I28@0:8I16@"<MTLHeap>"20
@"<MTLHeap>"20@0:8I16
I28@0:8I16@"<MTLEvent>"20
@"<MTLEvent>"20@0:8I16
@"<MTLResource>"20@0:8I16
@"NSMutableDictionary"
@32@0:8r*16Q24
v48@0:8r*16Q24@?32@40
B32@0:8r*16Q24
B40@0:8r*16Q24@32
v32@0:8r*16Q24
v48@0:8^{__IOSurface=}16r*24Q32@40
v52@0:8I16@20r*28Q36@44
v40@0:8^v16Q24r^{?=II}32
v56@0:8^^v16^Q24Q32@?40@?48
v60@0:8^^v16^Q24Q32@?40@?48I56
v48@0:8^^v16^Q24Q32@40
B56@0:8@16r*24Q32@40@48
I24@0:8@"<MTLBuffer>"16
I24@0:8@"<MTLCommandQueue>"16
@"NSObject<OS_dispatch_data>"32@0:8r*16Q24
v48@0:8r*16Q24@?<v@?I>32@"<MTLDeserializerAllocator>"40
B40@0:8r*16Q24@"<MTLDeserializerAllocator>"32
v48@0:8^{__IOSurface=}16r*24Q32@"<MTLDeserializerAllocator>"40
v52@0:8I16@"NSString"20r*28Q36@"<MTLDeserializerAllocator>"44
v56@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48
v60@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48I56
v60@0:8^^v16^Q24Q32@?<v@?ddQQ>40@?<v@?ddQQ>48I56
v48@0:8^^v16^Q24Q32@"<MTLCommandBuffer>"40
B56@0:8@"NSObject<OS_dispatch_data>"16r*24Q32@"NSString"40@"<MTLDeserializerAllocator>"48
@40@0:8@16B24@28B36
@24@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16
B32@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
@24@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16
B32@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16@24
@24@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16
B32@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16@24
@24@0:8^{?=I{?=QSCC}}16
B32@0:8^{?=I{?=QSCC}}16@24
B32@0:8^{?=II{?=b4b1b1b1b1b8b16IIISSSSQ}b1b31Q}16@24
B32@0:8^{?=IIQQSb1b16}16@24
B40@0:8^{?=I}16Q24@32
B40@0:8^{?=IQ}16Q24@32
B40@0:8^{?=II}16Q24@32
B40@0:8^{?=Ii}16Q24@32
B40@0:8^{?=IIQ}16Q24@32
B40@0:8^{?=Ib1b31I[0I]}16Q24@32
B40@0:8^{?=IQQ}16Q24@32
B40@0:8^{?=IC{?=QQ}}16Q24@32
B40@0:8^{?={?=b4b1b1b1b1b8b16IIISSSSQ}}16Q24@32
B40@0:8^{?=QS}16Q24@32
B32@0:8^{?=IIS}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}CCCC}16@24
B32@0:8^{?=IIQQ{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
B32@0:8^{?=I}16@24
B32@0:8^{?=IQQ}16Q24
@24@0:8r^{?=II}16
@48@0:8^{?=ICCC}16@24@32@40
@"<MTLCommandQueue>"
@"<MTLDeserializerObjectDelegate>"
@"MTLSharedEventListener"
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v24@0:8I16I20
v88@0:8{?=QQQ}16{?=QQQ}40{?=QQQ}64
v80@0:8@16Q24{?=QQQ}32{?=QQQ}56
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v40@0:8r^@16Q24Q32
v48@0:8r^@16Q24Q32Q40
v32@0:8r^@16Q24
v40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24Q32
v36@0:8@16Q24B32
v24@0:8@"<MTLRenderPipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v24@0:8@"<MTLDepthStencilState>"16
v80@0:8@"<MTLBuffer>"16Q24{?=QQQ}32{?=QQQ}56
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v32@0:8@"<MTLResource>"16Q24
v40@0:8@"<MTLResource>"16Q24Q32
v24@0:8@"<MTLHeap>"16
v32@0:8@"<MTLHeap>"16Q24
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v24@0:8@?16
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v88@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40
v92@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40I88
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
v40@0:8@"<MTLResourceGroupSPI>"16Q24Q32
@"NSMutableArray"
@"MTLRenderPassDescriptor"
@"<MTLSerializerRenderPipelineState>"
@"<MTLSerializerDepthStencilState>"
[31@"<MTLSerializerBuffer>"]
[128@"<MTLSerializerTexture>"]
[16@"<MTLSerializerSamplerState>"]
@"<MTLSerializerBuffer>"
@"<MTLComputeCommandEncoderSPI>"
@"<MTLComputePipelineState>"
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@16{_NSRange=QQ}24@40Q48
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v44@0:8@16{_NSRange=QQ}24I40
v104@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v144@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112Q136
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24I40
v104@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v28@0:8@16I24
v44@0:8@16Q24Q32I40
v64@0:8r^@16r^Q24{_NSRange=QQ}32I48^@52I60
v56@0:8r^v16Q24Q32I40^@44I52
v56@0:8r^@16{_NSRange=QQ}24I40^@44I52
v72@0:8r^@16r^f24r^f32{_NSRange=QQ}40I56^@60I68
v24@0:8C16B20
^v28@0:8Q16I24
@"<MTLSerializerCommandStream>"
@32@0:8^v16Q24
v32@0:8Q16^v24
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v24@0:8@"<MTLComputePipelineState>"16
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
B44@0:8@16Q24Q32I40
@"NSData"16@0:8
v32@0:8@"<MTLResourceGroupSPI>"16Q24
B44@0:8@"<MTLBuffer>"16Q24Q32I40
v44@0:8@"<MTLBuffer>"16Q24Q32I40
@32@0:8@16Q24
@"<MTLSerializerComputePipelineState>"
DDDD
!&+05:?
EO;Y"T
InvalidCommand
Size of command smaller than expected
Insufficient bytes left in iterator
Got invalid buffer for ref(%d)
Got invalid texture for ref(%d)
Invalid buffer range
UnrecognizedCommand
Unrecognized command at offset
v8@?0
ObjectRef generation queue
index creation queue
UseSimulatorSharedTextures
com.apple.Metal
-[MTLSerializer newSharedTextureWithDescriptor:allocator:]
Shared texture feature not available in simulator
-[MTLSerializer newSharedTextureWithHandle:]
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Size of command larger than expected
Attempting to draw with nil pipeline state
Attempting to do indexed draw with nil index buffer
Attempting to do indexed draw with nil control point index buffer
Attempting to do indirect draw with nil indirect buffer
Invalid render target index
Invalid depth stencil state
Command is longer than expected
Invalid buffer count
Too many buffers specified
Invalid buffer index
Invalid sampler count
Too many samplers specified
Invalid texture count
Too many textures specified
Invalid render pipeline state
Invalid viewport count
Too many scissor rects specified
Too many viewports specified
Too many resources specified
Invalid clip plane index
Invalid sampler index
Invalid viewport index
Invalid attachment index
UnexpectedCommand
Expected a render pass descriptor command
Invalid primitive type
CommandQueue
Function
ComputePipelineState
RenderPipelineState
Buffer
Texture
SamplerState
DepthStencilState
Fence
ArgumentBufferLayout
ArgumentEncoder
Heap
Event
InvalidReference
Invalid resource reference, %d
com.apple.gpusw.MTLDeserializer
deserializer
com.apple.gpusw.MTLDeserializerSubmissionQueue
com.apple.gpusw.MTLDeserializerCompletionQueue
v24@?0@"<MTLSharedEvent>"8Q16
InvalidEncoder
Encoder type doesn't match for continuation
InvalidContinuation
Previous stage didn't specify continuation
Invalid encoder type
v40@?0d8d16Q24Q32
v16@?0@"<MTLCommandBuffer>"8
Invalid %@ reference, %d, object already exists
Invalid %@ reference, %d
Unexpected error
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTable:atBufferIndex:]
Not supported
-[MTLSerializerRenderCommandEncoder setVertexVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshVisibleFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setVertexIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setVertexAccelerationStructure:atBufferIndex:]
Not implemented
-[MTLSerializerRenderCommandEncoder setFragmentAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setTileAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setObjectIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setObjectAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setMeshIntersectionFunctionTables:withBufferRange:]
-[MTLSerializerRenderCommandEncoder setMeshAccelerationStructure:atBufferIndex:]
-[MTLSerializerRenderCommandEncoder setAlphaTestReferenceValue:]
-[MTLSerializerRenderCommandEncoder setPointSize:]
-[MTLSerializerRenderCommandEncoder setClipPlane:p2:p3:p4:atIndex:]
-[MTLSerializerRenderCommandEncoder setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:]
-[MTLSerializerRenderCommandEncoder setViewportTransformEnabled:]
-[MTLSerializerRenderCommandEncoder setProvokingVertexMode:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:]
-[MTLSerializerRenderCommandEncoder setPrimitiveRestartEnabled:index:]
-[MTLSerializerRenderCommandEncoder setTriangleFrontFillMode:backFillMode:]
-[MTLSerializerRenderCommandEncoder setTransformFeedbackState:]
-[MTLSerializerRenderCommandEncoder setDepthCleared]
-[MTLSerializerRenderCommandEncoder setStencilCleared]
-[MTLSerializerRenderCommandEncoder setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:]
-[MTLSerializerRenderCommandEncoder setDepthResolveTexture:slice:depthPlane:level:yInvert:]
-[MTLSerializerRenderCommandEncoder setStencilResolveTexture:slice:depthPlane:level:yInvert:]
Attempting to dispatch without pipeline set
Invalid compute pipeline state
Invalid indirect buffer
Invalid indirect buffer offset
Invalid threadgroup memory size index
-[MTLSerializerBlitCommandEncoder getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:]
-[MTLSerializerBlitCommandEncoder resetTextureAccessCounters:region:mipLevel:slice:]
InvalidReadException
end of read past end of buffer
InvalidLengthException
new length is longer than existing length
InvalidAdvanceException
end of advance past end of buffer
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:]
-[MTLSerializerComputeCommandEncoder executeCommandsInBuffer:withRange:]
-[MTLSerializerComputeCommandEncoder setAccelerationStructure:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setVisibleFunctionTables:withBufferRange:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTable:atBufferIndex:]
-[MTLSerializerComputeCommandEncoder setIntersectionFunctionTables:withBufferRange:]
Expected Header of %llu bytes but received only %llu bytes
Expected at least %llu bytes but received only %llu bytes
Expected Cmd ID %u but received Cmd Id %u
Failed to create pipeline
Unexpected type for unique identifier: %d
MTLDeserializerBlitDecoder
MTLDeserializerDecoder
NSObject
DefaultObjectRefAllocator
MTLSerializerObjectRefAllocator
MTLSerializer
MTLDeserializerEventDecoder
MTLDeserializerRenderDecoder
MTLSerializerParallelRenderCommandEncoder
MTLParallelRenderCommandEncoderSPI
MTLCommandEncoderSPI
MTLCommandEncoder
MTLParallelRenderCommandEncoder
_MTLDeserializerHashObjectDelegate
MTLDeserializationContext
MTLDeserializerObjectDelegate
_MTLDeserializerObjectMapObjectDelegate
_MTLDeserializer
MTLDeserializer
MTLSerializerRenderCommandEncoder
MTLRenderCommandEncoderSPI
MTLRenderCommandEncoder
MTLDeserializerComputeDecoder
MTLSerializerBlitCommandEncoder
MTLBlitCommandEncoderSPI
MTLBlitCommandEncoder
MTLSerializerCommandEncoder
MTLByteIterator
MTLSerializerComputeCommandEncoder
MTLComputeCommandEncoderSPI
MTLComputeCommandEncoder
GPUEndTime
width
waitUntilSignaledValue:timeoutMS:
visibilityResultBuffer
userInfo
usedSize
uniqueIdentifier
threadExecutionWidth
textureType
textureRef
texture
stringWithUTF8String:
stringWithFormat:
storeActionOptions
storeAction
stencilResolveFilter
stencilPrivate
stencilAttachment
status
staticThreadgroupMemoryLength
slice
size
signaledValue
setWriteMask:
setWidth:
setVisibilityResultBuffer:
setUsage:
setType:
setTextureType:
setTexture:
setTAddressMode:
setSupportArgumentBuffers:
setStoreActionOptions:
setStoreAction:
setStencilResolveFilter:
setStencilFailureOperation:
setStencilCompareFunction:
setSplitHandler:
setSlice:
setSize:
setSignaledValue:
setSampleCount:
setSAddressMode:
setRotation:
setResourceOptions:
setResourceIndex:
setResolveTexture:
setResolveSlice:
setResolveLevel:
setResolveDepthPlane:
setRenderTargetWidth:
setRenderTargetHeight:
setRenderTargetArrayLength:
setReadMask:
setRAddressMode:
setProtectionOptions:
setPixelFormat:
setOverrideTriple:
setObject:forKey:
setNormalizedCoordinates:
setMipmapLevelCount:
setMipFilter:
setMinFilter:
setMaxAnisotropy:
setMagFilter:
setLodMinClamp:
setLodMaxClamp:
setLodAverage:
setLoadAction:
setLevel:
setIsDrawable:
setHeight:
setFramebufferOnly:
setDispatchType:
setDepthWriteEnabled:
setDepthStencilPassOperation:
setDepthResolveFilter:
setDepthPlane:
setDepthFailureOperation:
setDepthCompareFunction:
setDepth:
setCompareFunction:
setClearStencil:
setClearDepth:
setClearColor:
setBorderColor:
setArrayLength:
setArgumentBuffer:offset:
setAllowGPUOptimizedContents:
serializerResourceRef
serializeStructType:version:
samplerRef
rotation
resolveTexture
resolveSlice
resolveLevel
resolveDepthPlane
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
renderTargetWidth
renderTargetHeight
renderTargetArrayLength
renderCommandEncoderWithDescriptor:
removeObjectForKey:
removeAllObjects
pixelFormat
pipelineRef
objectForKeyedSubscript:
objectForKey:
objectAtIndexedSubscript:
numberWithUnsignedInt:
notifyListener:atValue:block:
newTextureWithDescriptor:offset:bytesPerRow:
newTextureWithDescriptor:offset:
newTextureWithDescriptor:iosurface:plane:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:
newStructTypeWithSerializedData:
newSharedEventWithMachPort:
newSharedEvent
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newLibraryWithData:error:
newIndirectArgumentBufferLayoutWithStructType:
newFunctionWithName:
newFence
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
newCommandQueue
newBufferWithLength:options:offset:
newBufferWithLength:options:
newArgumentEncoderWithLayout:
mipmapLevelCount
minimumTextureBufferAlignmentForPixelFormat:
minimumLinearTextureAlignmentForPixelFormat:
maxViewportCount
maxVertexTextures
maxVertexSamplers
maxVertexBuffers
maxTotalThreadsPerThreadgroup
maxThreadsPerThreadgroup
maxThreadgroupMemoryLength
maxFragmentTextures
maxFragmentSamplers
maxFragmentBuffers
maxComputeTextures
maxComputeSamplers
maxComputeLocalMemorySizes
maxComputeBuffers
maxAvailableSizeWithAlignment:
makeAliasable
loadAction
level
kernelStartTime
kernelEndTime
indirectCommandBufferRef
height
heapTextureSizeAndAlignWithDescriptor:
heapRef
heapBufferSizeAndAlignWithLength:options:
gpuAddress
getWritableInfo:vtxBuffers:vtxTexturesArrayLength:vtxTextures:frgBuffersLength:frgBuffers:frgTexturesArrayLength:frgTextures:
getWritableInfo:buffers:texturesArrayLength:textures:
getCommandBufferBytes:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBufferBytes:alignment:buffer:offset:
functionNames
frontFaceStencil
fenceRef
exceptionWithName:reason:userInfo:
error
enqueue
encodedLength
encodeWaitForEvent:value:timeout:
encodeWaitForEvent:value:
encodeSignalEvent:value:
doesNotRecognizeSelector:
doesAliasAnyResources:count:
doesAliasAllResources:count:
descriptorPrivate
depthStencilRef
depthStencilPrivate
depthResolveFilter
depthPlane
depthAttachment
depth
currentAllocatedSize
countByEnumeratingWithState:objects:count:
count
copy
contents
constantOffsetAtIndex:
constantDataAtIndex:
computeCommandEncoder
commit
colorAttachments
code
clearStencil
clearDepth
clearColor
bufferRef
bufferLayoutMatchesFrontEndLayout
blitCommandEncoder
beginContinuation
backFaceStencil
arrayLength
allocateOperationBytes:
alignment
addStateReference:
addScheduledHandler:
addCompletedHandler:
addResourceReference:isWrite:
GPUStartTime
UTF8String
init
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
decodeWithHeader:withIterator:
fault
type
TC,R
initWithDeserializer:commandBuffer:
readCommand:withIterator:expectedSize:into:
getBufferForReferenceNonNull:
getTextureForReferenceNonNull:
decodeCopyFromBufferToTexture:withIterator:
decodeCopyFromBufferToBuffer:withIterator:
decodeCopyFromTextureToBuffer:withIterator:
decodeCopyFromTextureToTexture:withIterator:
decodeCopyFromTextureToTextureWithNumSliceLevel:withIterator:
decodeCopyFromTextureToTextureWithOptions:withIterator:
decodeFillBuffer:withIterator:
decodeGenerateMipmaps:withIterator:
decodeOptimize:withIterator:
decodeOptimizeImage:withIterator:
decodeSynchronizeResource:withIterator:
decodeSynchronizeTextureImage:withIterator:
decodeBlitUpdateFence:withIterator:
decodeBlitWaitForFence:withIterator:
deserializer
blitEncoder
allocateObjectRef
releaseObjectRef:
_generator
_serialQueue
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:objectRefAllocator:deserializerGeneratesResourceRefs:
initWithDevice:deserializerGeneratesResourceRefs:deserializerVersion:
initWithDevice:deserializerGeneratesResourceRefs:
initWithDevice:
newBufferRef
releaseBufferRef:
deleteBufferRef:allocator:
newTextureRef
releaseTextureRef:
deleteTextureRef:allocator:
newDepthStencilStateRef
releaseDepthStencilStateRef:
deleteDepthStencilStateRef:allocator:
newSamplerStateRef
releaseSamplerStateRef:
deleteSamplerStateRef:allocator:
newFunctionRef
releaseFunctionRef:
deleteFunctionRef:allocator:
newComputePipelineStateRef
releaseComputePipelineStateRef:
deleteComputePipelineStateRef:allocator:
newRenderPipelineStateRef
releaseRenderPipelineStateRef:
deleteRenderPipelineStateRef:allocator:
newFenceRef
releaseFenceRef:
deleteFenceRef:allocator:
newArgumentBufferLayoutRef
releaseArgumentBufferLayoutRef:
deleteArgumentBufferLayoutRef:allocator:
newArgumentEncoderRef
releaseArgumentEncoderRef:
deleteArgumentEncoderRef:allocator:
newHeapRef
releaseHeapRef:
deleteHeapRef:allocator:
newEventRef
releaseEventRef:
deleteEventRef:allocator:
newCommandQueueRef
releaseCommandQueueRef:
deleteCommandQueueRef:allocator:
newCommandBufferRef
releaseCommandBufferRef:
newNotificationRef
releaseNotificationRef:
newTextureWithDescriptor:
newSamplerStateWithDescriptor:
newDepthStencilStateWithDescriptor:
dataSizeForRegion:pixelFormat:bytesPerRow:bytesPerImage:
copyImageBytesFromSource:toDestination:dataSize:region:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:
didModifyRange:buffer:
getBytesFromRegion:bytesPerRow:bytesPerImage:mipmapLevel:slice:texture:outDataSize:
replaceRegion:mipmapLevel:slice:dataSize:bytesPerRow:bytesPerImage:texture:allocator:
newTextureViewWithPixelFormat:baseTexture:allocator:
newTextureWithDescriptor:heap:offset:useOffset:allocator:
newBufferWithLength:options:heap:offset:useOffset:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:baseTexture:allocator:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:baseTexture:allocator:
newFenceWithAllocator:
newSharedEventWithAllocator:
newSharedEventWithHandle:allocator:
newSharedEventWithMachPort:allocator:
newArgumentBufferLayoutWithStructType:allocator:
newArgumentEncoderWithLayout:allocator:
argumentBufferLayoutConstantAtIndex:layoutRef:allocator:
argumentEncoderConstantAtIndex:encoderRef:bufferRef:allocator:
sizeInfoForHeap:allocator:
minimumLinearTextureAlignmentForPixelFormat:allocator:
minimumTextureBufferAlignmentForPixelFormat:allocator:
getComputeInfoWithAllocator:
maxAvailableSizeWithAlignment:heap:allocator:
argumentEncoderSetArgumentBuffer:offset:encoderRef:allocator:
argumentEncoderSetBuffers:offsets:withRange:encoderRef:allocator:
bufferGPUAddress:allocator:
uniqueIdentifierForTexture:allocator:
uniqueIdentifierForSamplerState:allocator:
uniqueIdentifierForRenderPipelineState:allocator:
uniqueIdentifierForComputePipelineState:allocator:
notifyListenerForEventRef:atValue:allocator:
sharedEventSignaledValueForEventRef:allocator:
sharedEventSetSignaledValue:eventRef:allocator:
sharedEventWaitSignaledValue:timeoutMS:eventRef:allocator:
argumentEncoderSetTextures:withRange:encoderRef:allocator:
argumentEncoderSetSamplerStates:withRange:encoderRef:allocator:
heapTextureSizeAndAlignWithDescriptor:allocator:
heapBufferSizeAndAlignWithLength:options:allocator:
makeAliasableResource:allocator:
doesAliasResources:count:all:resource:allocator:
newTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newTiledTextureWithBuffer:descriptor:offset:bytesPerRow:allocator:
newSharedTextureWithDescriptor:allocator:
newSharedTextureWithHandle:
newFunctionWithIR:
newRenderPipelineStateWithSerializedDescriptor:allocator:
newComputePipelineStateWithSerializedDescriptor:allocator:
newIOSurfaceTextureWithDescriptor:plane:allocator:
newTextureWithDescriptor:allocator:
newDepthStencilStateWithDescriptor:allocator:
newSamplerStateWithDescriptor:allocator:
newHeapWithDescriptor:allocator:
handleNewObjectReplyData:replyDataSize:errorMessage:
handleNewObjectReplyData:replyDataSize:
computePipelineWithReplyData:replyDataSize:pipelineInfo:errorMessage:
payloadFromReplyData:replyDataSize:
supportsOpenGL
supportsCorrectBaseVertex
deserializerGeneratesResourceRefs
reflectionSerializationVersion
setReflectionSerializationVersion:
_device
_objectIndex
_commandBufferIndex
_eventNotifications
_deserializerGeneratesResourceRefs
_reflectionSerializationVersion
_features
TB,R,N,V_deserializerGeneratesResourceRefs
TQ,V_reflectionSerializationVersion
TB,R
decodeSignalEvent:withIterator:
decodeWaitForEvent:withIterator:
decodeWaitForEventTimeout:withIterator:
commandBuffer
readVariableCommand:withIterator:maxExpectedSize:into:
decodeDrawPrimitives64:withIterator:
decodeDrawPrimitives16:withIterator:
decodeDrawInstancedPrimitives64:withIterator:
decodeDrawInstancedPrimitives16:withIterator:
decodeDrawInstancedBasePrimitives64:withIterator:
decodeDrawInstancedBasePrimitives16:withIterator:
decodeDrawIndexedPrimitives64:withIterator:
decodeDrawIndexedPrimitives16:withIterator:
decodeDrawIndexedInstancedPrimitives64:withIterator:
decodeDrawIndexedInstancedPrimitives16:withIterator:
decodeDrawIndexedInstancedBasePrimitives64:withIterator:
decodeDrawIndexedInstancedBasePrimitives16:withIterator:
decodeDrawIndexedInstancedBasePrimitives64_2:withIterator:
decodeDrawIndexedInstancedBasePrimitives16_2:withIterator:
decodeDrawPatches64:withIterator:
decodeDrawPatches16:withIterator:
decodeDrawIndexedPatches64:withIterator:
decodeDrawIndexedPatches16:withIterator:
decodeDrawPrimitivesIndirect:withIterator:
decodeDrawIndexedPrimitivesIndirect:withIterator:
decodeDrawPatchesIndirect:withIterator:
decodeDrawIndexedPatchesIndirect:withIterator:
decodeExecuteCommandsInBuffer:withIterator:
decodeExecuteCommandsInBufferRanged:withIterator:
decodeRenderBarrierResources:withIterator:
decodeRenderBarrierScope:withIterator:
decodeRenderUpdateFence:withIterator:
decodeRenderWaitForFence:withIterator:
decodeSetBlendColor:withIterator:
decodeSetColorStoreAction:withIterator:
decodeSetColorStoreActionOptions:withIterator:
decodeSetDepthStencilState:withIterator:
decodeSetDepthStoreAction:withIterator:
decodeSetDepthStoreActionOptions:withIterator:
decodeSetCullMode:withIterator:
decodeSetDepthBias:withIterator:
decodeSetDepthClipMode:withIterator:
decodeSetFragmentBuffers:withIterator:
decodeSetFragmentBufferOffset:withIterator:
decodeSetFragmentSamplerStates:withIterator:
decodeSetFragmentSamplerStatesLODClamp:withIterator:
decodeSetFragmentTextures:withIterator:
decodeSetFrontFacingWinding:withIterator:
decodeSetRenderPipelineState:withIterator:
decodeSetScissorRect:withIterator:
decodeSetScissorRects:withIterator:
decodeSetStencilRef:withIterator:
decodeSetStencilStoreAction:withIterator:
decodeSetStencilStoreActionOptions:withIterator:
decodeSetTesselationFactorBuffer:withIterator:
decodeSetTesselationFactorScale:withIterator:
decodeSetTriangleFillMode:withIterator:
decodeSetVertexBuffers:withIterator:
decodeSetVertexBufferOffset:withIterator:
decodeSetVertexSamplerStates:withIterator:
decodeSetVertexSamplerStatesLODClamp:withIterator:
decodeSetVertexTextures:withIterator:
decodeSetViewport:withIterator:
decodeSetViewports:withIterator:
decodeSetVisibilityResultMode:withIterator:
decodeTextureBarrier:withIterator:
decodeUseHeaps:withIterator:
decodeUseHeapsWithStages:withIterator:
decodeUseResources:withIterator:
decodeUseResourcesWithStages:withIterator:
decodeSetLineWidth:withIterator:
decodeSetAlphaTestReferenceValue:withIterator:
decodeSetPointSize:withIterator:
decodeSetClipPlane:withIterator:
decodeSetVertexSamplerState:withIterator:
decodeSetFragmentSamplerState:withIterator:
decodeSetViewportTransformEnabled:withIterator:
decodeSetProvokingVertexMode:withIterator:
decodeSetPrimitiveRestartIndexEnabled:withIterator:
decodeSetTriangleFillModeFrontBack:withIterator:
decodeSetTransformFeedbackState:withIterator:
decodeSetDepthCleared:withIterator:
decodeSetStencilCleared:withIterator:
decodeSetColorResolveTexture:withIterator:
decodeSetDepthResolveTexture:withIterator:
decodeSetStencilResolveTexture:withIterator:
newDescriptorFromVersion1:withIterator:
newDescriptor:
renderEncoder
_pipelineState
_maxColorAttachmentIndex
initWithCommandBuffer:renderPassDescriptor:
merge:
renderCommandEncoder
endEncoding
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
device
label
setLabel:
T@"<MTLDevice>",R
T@"NSString",C
endEncodingAndRetrieveProgramAddressTable
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
separateCommits
setSeparateCommits:
sampledRenderCommandEncoderWithProgramInfoBuffer:capacity:
initWithCommandBuffer:renderPassDescriptor:serializer:
serializer
_encodersSize
_encodersCount
_encoders
_serializer
T@"MTLSerializer",R,V_serializer
TB,VseparateCommits
functionWithFunctionRef:
registerCommandQueueForReference:commandQueue:
getCommandQueueForReference:
deleteCommandQueueForReference:
registerFunctionForReference:function:
getFunctionForReference:
deleteFunctionForReference:
registerComputePipelineStateForReference:computePipeline:
getComputePipelineStateForReference:
deleteComputePipelineStateForReference:
registerRenderPipelineStateForReference:renderPipeline:
getRenderPipelineStateForReference:
deleteRenderPipelineStateForReference:
registerBufferForReference:buffer:
getBufferForReference:
deleteBufferForReference:
registerTextureForReference:texture:
getTextureForReference:
deleteTextureForReference:
registerSamplerStateForReference:sampler:
getSamplerStateForReference:
deleteSamplerStateForReference:
registerDepthStencilStateForReference:depthStencil:
getDepthStencilStateForReference:
deleteDepthStencilStateForReference:
registerFenceForReference:fence:
getFenceForReference:
deleteFenceForReference:
registerArgumentBufferLayoutForReference:argumentBufferLayout:
getArgumentBufferLayoutForReference:
deleteArgumentBufferLayoutForReference:
registerArgumentEncoderForReference:argumentEncoder:
getArgumentEncoderForReference:
deleteArgumentEncoderForReference:
registerHeapForReference:heap:
getHeapForReference:
deleteHeapForReference:
registerEventForReference:event:
getEventForReference:
deleteEventForReference:
getResourceForReference:
deleteResourceForReference:
_commandQueues
_functions
_computePipelines
_renderPipelines
_buffers
_textures
_samplers
_depthStencils
_fences
_argumentBufferLayouts
_argumentEncoders
_heaps
_events
_commandQueueMap
_functionMap
_computePipelineMap
_renderPipelineMap
_bufferMap
_textureMap
_samplerMap
_depthStencilMap
_fenceMap
_argumentBufferLayoutMap
_argumentEncoderMap
_heapMap
_eventMap
_resourceMapQueue
registerBuffer:
registerCommandQueue:
newObjectCommandWithSerializedData:serializedDataSize:
notifyListenerForEventWithSerializedData:serializedDataSize:block:allocator:
operationWithSerializedData:serializedDataSize:
operationWithSerializedData:serializedDataSize:allocator:
deleteResource:
deleteObjectWithSerializedData:serializedDataSize:
newTextureWithIOSurface:serializedData:serializedDataSize:allocator:
newSharedEventWithEventPort:label:serializedData:serializedDataSize:allocator:
getBytes:dataSize:command:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:
submitCommandSegments:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
submitCommandSegmentsTimed:lengths:count:submissionCompleted:commandBufferCompleted:commandQueueRef:
decodeSegments:lengths:count:into:
newFunctionWithSerializedMetallib:commandData:commandDataSize:overrideTargetTriple:allocator:
generateResourceRefs
initWithDevice:generateResourceRefs:objectDelegate:createQueues:
initWithDevice:generateResourceRefs:
newHeapWithDescriptor:
newTextureWithHeap:allocator:
newBufferWithHeap:allocator:
sizeInfoForHeap:serializedDataSize:allocator:
bufferGPUAddress:serializedDataSize:allocator:
minimumLinearTextureAlignment:serializedDataSize:allocator:
minimumTextureBufferAlignment:serializedDataSize:allocator:
computeInfo:serializedDataSize:allocator:
heapMaxAvailableSizeWithAlignment:serializedDataSize:allocator:
newComputePipelineStateWithDescriptor:serializedDataSize:allocator:
uniqueIdentifier:serializedDataSize:allocator:
newRenderPipelineStateWithDescriptor:serializedDataSize:allocator:
newArgumentBufferLayoutWithStructType:serializedDataSize:allocator:
newArgumentEncoderWithBufferLayout:serializedDataSize:allocator:
argumentBufferLayoutConstantAtIndex:serializedDataSize:allocator:
argumentEncoderConstantAtIndex:serializedDataSize:allocator:
doResourcesAlias:serializedDataSize:allocator:
sharedEventSignaledValue:serializedDataSize:allocator:
sharedEventSetSignaledValue:serializedDataSize:allocator:
sharedEventWaitSignaledValue:serializedDataSize:allocator:
argumentEncoderSetValues:serializedDataSize:allocator:
heapTextureSizeAndAlign:serializedDataSize:allocator:
heapBufferSizeAndAlign:serializedDataSize:allocator:
makeAliasiableResource:serializedDataSize:allocator:
newTextureViewWithPixelFormat:allocator:
newTextureViewWithTextureType:allocator:
newTextureViewWithSwizzle:allocator:
newTextureViewWithBuffer:allocator:
newTiledTextureViewWithBuffer:allocator:
newFence:allocator:
newSharedEvent:allocator:
didModifyRange:serializedDataSize:
replaceRegion:
decodeSegmentWithHeader:withIterator:withDecoder:into:
submissionQueue
completionQueue
commandQueue
_objectDelegate
eventListener
_generateResourceRefs
T@"<MTLDevice>",R,Vdevice
TB,R,V_generateResourceRefs
initWithCommandBuffer:serializer:
setRenderPipelineState:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexSamplerState:atIndex:
setVertexSamplerStates:withRange:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexVisibleFunctionTable:atBufferIndex:
setVertexVisibleFunctionTables:withBufferRange:
setVertexIntersectionFunctionTable:atBufferIndex:
setVertexIntersectionFunctionTables:withBufferRange:
setVertexAccelerationStructure:atBufferIndex:
setViewport:
setViewports:count:
setFrontFacingWinding:
setVertexAmplificationCount:viewMappings:
setCullMode:
setDepthClipMode:
setDepthBias:slopeScale:clamp:
setScissorRect:
setScissorRects:count:
setTriangleFillMode:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentTexture:atIndex:
setFragmentTextures:withRange:
setFragmentSamplerState:atIndex:
setFragmentSamplerStates:withRange:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentVisibleFunctionTable:atBufferIndex:
setFragmentVisibleFunctionTables:withBufferRange:
setFragmentIntersectionFunctionTable:atBufferIndex:
setFragmentIntersectionFunctionTables:withBufferRange:
setFragmentAccelerationStructure:atBufferIndex:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setStencilReferenceValue:
setStencilFrontReferenceValue:backReferenceValue:
setVisibilityResultMode:offset:
setObjectBytes:length:atIndex:
setObjectBuffer:offset:atIndex:
setObjectBufferOffset:atIndex:
setObjectBuffers:offsets:withRange:
setObjectTexture:atIndex:
setObjectTextures:withRange:
setObjectSamplerState:atIndex:
setObjectSamplerStates:withRange:
setObjectSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setObjectSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setObjectThreadgroupMemoryLength:atIndex:
setMeshBytes:length:atIndex:
setMeshBuffer:offset:atIndex:
setMeshBufferOffset:atIndex:
setMeshBuffers:offsets:withRange:
setMeshTexture:atIndex:
setMeshTextures:withRange:
setMeshSamplerState:atIndex:
setMeshSamplerStates:withRange:
setMeshSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setMeshSamplerStates:lodMinClamps:lodMaxClamps:withRange:
drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawMeshThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
setTileBytes:length:atIndex:
setTileBuffer:offset:atIndex:
setTileBufferOffset:atIndex:
setTileBuffers:offsets:withRange:
setTileTexture:atIndex:
setTileTextures:withRange:
setTileSamplerState:atIndex:
setTileSamplerStates:withRange:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTileVisibleFunctionTable:atBufferIndex:
setTileVisibleFunctionTables:withBufferRange:
setTileIntersectionFunctionTable:atBufferIndex:
setTileIntersectionFunctionTables:withBufferRange:
setTileAccelerationStructure:atBufferIndex:
dispatchThreadsPerTile:
setThreadgroupMemoryLength:offset:atIndex:
useResource:usage:
useResources:count:usage:
useResource:usage:stages:
useResources:count:usage:stages:
useHeap:
useHeaps:count:
useHeap:stages:
useHeaps:count:stages:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:afterStages:beforeStages:
memoryBarrierWithResources:count:afterStages:beforeStages:
sampleCountersInBuffer:atSampleIndex:withBarrier:
tileWidth
tileHeight
setDepthClipModeSPI:
setLineWidth:
addSplitHandler:
isMemorylessRender
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setVertexAmplificationMode:value:
setObjectVisibleFunctionTable:atBufferIndex:
setObjectVisibleFunctionTables:withBufferRange:
setMeshVisibleFunctionTable:atBufferIndex:
setMeshVisibleFunctionTables:withBufferRange:
setCommandDataCorruptModeSPI:
setAlphaTestReferenceValue:
setPointSize:
setClipPlane:p2:p3:p4:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:lodBias:atIndex:
setViewportTransformEnabled:
setProvokingVertexMode:
setPrimitiveRestartEnabled:
setPrimitiveRestartEnabled:index:
setTriangleFrontFillMode:backFillMode:
setTransformFeedbackState:
setDepthCleared
setStencilCleared
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setStencilResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
dispatchThreadsPerTile:inRegion:
dispatchThreadsPerTile:inRegion:withRenderTargetArrayIndex:
useResourceGroup:usage:stages:
setObjectIntersectionFunctionTable:atBufferIndex:
setObjectIntersectionFunctionTables:withBufferRange:
setObjectAccelerationStructure:atBufferIndex:
setMeshIntersectionFunctionTable:atBufferIndex:
setMeshIntersectionFunctionTables:withBufferRange:
setMeshAccelerationStructure:atBufferIndex:
split
initWithCommandBuffer:descriptor:
initWithCommandBuffer:descriptor:serializer:
writeDescriptor
beginSegment:
addRenderTargetReferences
handleSplits
flushWrites
getType
fixStoreActions:
forceStoreActionsForPosition:
forceLoadActions
setEncoderPosition:
needsWrites
setNeedsWrites:
splitHandlers
renderPassDescriptor
hadSplit
pipelineState
depthStencilState
fragmentBuffers
fragmentTextures
fragmentSamplers
vertexBuffers
vertexTextures
vertexSamplers
tessellationFactorBuffer
renderPassCommand
_resourcesDirty
_supportsCorrectBaseVertex
TB,VneedsWrites
TQ,R,VtileWidth
TQ,R,VtileHeight
decodeDispatchThreadgroups:withIterator:
decodeDispatchThreadgroupsIndirect:withIterator:
decodeDispatchThreads:withIterator:
decodeSetBuffers:withIterator:
decodeSetSamplers:withIterator:
decodeSetSamplersLODClamp:withIterator:
decodeSetTextures:withIterator:
decodeSetBufferOffset:withIterator:
decodeSetPipelineState:withIterator:
decodeSetStageInRegion:withIterator:
decodeSetStageInRegionIndirect:withIterator:
decodeSetThreadgroupMemoryLength:withIterator:
decodeUpdateFence:withIterator:
decodeWaitForFence:withIterator:
decodeBarrierScope:withIterator:
decodeBarrierResources:withIterator:
computeEncoder
_computePipeline
synchronizeResource:
synchronizeTexture:slice:level:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
generateMipmapsForTexture:
fillBuffer:range:value:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
updateFence:
waitForFence:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
resetTextureAccessCounters:region:mipLevel:slice:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
resetCommandsInBuffer:withRange:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
optimizeIndirectCommandBuffer:withRange:
resolveCounters:inRange:destinationBuffer:destinationOffset:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
invalidateCompressedTexture:
invalidateCompressedTexture:slice:level:
fillBuffer:range:pattern4:
fillTexture:level:slice:region:bytes:length:
fillTexture:level:slice:region:color:
fillTexture:level:slice:region:color:pixelFormat:
initWithCommandBuffer:
optimize:withCommand:
optimize:slice:level:withCommand:
optimizeReset:withRange:withCommand:
setBuffers:offsets:withRange:withCommand:array:rangeMax:
setBytes:length:atIndex:withCommand:array:rangeMax:
setSamplerStates:withRange:withCommand:array:rangeMax:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:withCommand:array:rangeMax:
setTextures:withRange:withCommand:array:rangeMax:
writeSegmentHeader:continuation:
getCommandBytes:forCommand:
getCommandBytesRetry:forCommand:
stream
iteratorForBuffer:withLength:
initWithBuffer:withLength:
readBytes:into:
truncateTo:
bytesLeft
advance:
buffer
currentOffset
length
memoryBarrierNotificationWithResources:count:
memoryBarrierNotificationWithScope:
setComputePipelineState:
setBytes:length:atIndex:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setAccelerationStructure:atBufferIndex:
setTexture:atIndex:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setThreadgroupMemoryLength:atIndex:
setImageblockWidth:height:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
memoryBarrierWithScope:
memoryBarrierWithResources:count:
dispatchType
newKernelDebugInfo
setThreadgroupPackingDisabled:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
enableNullBufferBinds:
useResourceGroup:usage:
encodeStartDoWhile
encodeEndDoWhile:offset:comparison:referenceValue:
encodeStartWhile:offset:comparison:referenceValue:
encodeEndWhile
encodeStartIf:offset:comparison:referenceValue:
encodeStartElse
encodeEndIf
initWithCommandBuffer:dispatchType:
buffers
textures
samplers
_dispatchType
TQ,R,V_dispatchType
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8^{?=ICCC}16@24
v16@0:8
C16@0:8
v32@0:8^{?=ICCC}16@"MTLByteIterator"24
@32@0:8@16@24
v48@0:8^{?=II}16@24Q32^v40
@20@0:8I16
v32@0:8^{?=II}16@24
@"_MTLDeserializer"
@"<MTLBlitCommandEncoderSPI>"
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24B32I36
@36@0:8@16@24B32
@32@0:8@16B24I28
@28@0:8@16B24
@24@0:8@16
v28@0:8I16@20
Q88@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80
v128@0:8*16*24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96Q104Q112@120
@40@0:8{_NSRange=QQ}16@32
@112@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88@96^Q104
^v120@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72Q80Q88Q96@104@112
I40@0:8Q16@24@32
I52@0:8@16@24Q32B40@44
I60@0:8Q16Q24@32Q40B48@52
I80@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48@64@72
I84@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64@68@76
I24@0:8@16
I32@0:8@16@24
I28@0:8I16@20
v36@0:8Q16I24@28
v40@0:8Q16I24I28@32
v32@0:8@16@24
v32@0:8Q16@24
v24@0:8@16
v40@0:8Q16@24@32
v44@0:8@16Q24I32@36
v60@0:8r^@16r^Q24{_NSRange=QQ}32I48@52
I36@0:8I16Q20@28
v44@0:8Q16Q24I32@36
v52@0:8r^@16{_NSRange=QQ}24I40@44
v40@0:8Q16Q24@32
v52@0:8r^@16Q24B32@36@44
I56@0:8@16@24Q32Q40@48
I40@0:8@16Q24@32
I40@0:8r^v16Q24^@32
I32@0:8r^v16Q24
I48@0:8r^v16Q24^{?=SIQ}32^@40
r*32@0:8r*16Q24
v24@0:8Q16
@"<MTLDevice>"
@"<MTLSerializerObjectRefAllocator>"
{MTLSerializerFeatures="supportsGenerateResourceRefs"B"supportsReflectionSerializationVersion"B"supportsSharedTextures"B"supportsScripts"B"supportsOpenGL"B"supportsIOSurfaceTextureWithRotation"B"supportsCorrectBaseVertex"B"supportsCorrectSwizzleChannels"B}
@"<MTLCommandBuffer>"
@32@0:8^{?=II}16@24
@"<MTLRenderCommandEncoderSPI>"
@"<MTLRenderPipelineState>"
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLProgramAddressTable>"16@0:8
v32@0:8Q16Q24
@"<MTLRenderCommandEncoder>"16@0:8
v20@0:8B16
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLRenderCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8@16@24@32
@"MTLSerializer"
@24@0:8Q16
@"<MTLFunction>"24@0:8Q16
I28@0:8I16@"<MTLCommandQueue>"20
@"<MTLCommandQueue>"20@0:8I16
I28@0:8I16@"<MTLFunction>"20
@"<MTLFunction>"20@0:8I16
I28@0:8I16@"<MTLComputePipelineState>"20
@"<MTLComputePipelineState>"20@0:8I16
I28@0:8I16@"<MTLRenderPipelineState>"20
@"<MTLRenderPipelineState>"20@0:8I16
I28@0:8I16@"<MTLBuffer>"20
@"<MTLBuffer>"20@0:8I16
I28@0:8I16@"<MTLTexture>"20
@"<MTLTexture>"20@0:8I16
I28@0:8I16@"<MTLSamplerState>"20
@"<MTLSamplerState>"20@0:8I16
I28@0:8I16@"<MTLDepthStencilState>"20
@"<MTLDepthStencilState>"20@0:8I16
I28@0:8I16@"<MTLFence>"20
@"<MTLFence>"20@0:8I16
I28@0:8I16@"_MTLIndirectArgumentBufferLayout"20
@"_MTLIndirectArgumentBufferLayout"20@0:8I16
I28@0:8I16@"<MTLArgumentEncoder>"20
@"<MTLArgumentEncoder>"20@0:8I16
I28@0:8I16@"<MTLHeap>"20
@"<MTLHeap>"20@0:8I16
I28@0:8I16@"<MTLEvent>"20
@"<MTLEvent>"20@0:8I16
@"<MTLResource>"20@0:8I16
@"NSMutableDictionary"
@32@0:8r*16Q24
v48@0:8r*16Q24@?32@40
B32@0:8r*16Q24
B40@0:8r*16Q24@32
v32@0:8r*16Q24
v48@0:8^{__IOSurface=}16r*24Q32@40
v52@0:8I16@20r*28Q36@44
v40@0:8^v16Q24r^{?=II}32
v56@0:8^^v16^Q24Q32@?40@?48
v60@0:8^^v16^Q24Q32@?40@?48I56
v48@0:8^^v16^Q24Q32@40
B56@0:8@16r*24Q32@40@48
I24@0:8@"<MTLBuffer>"16
I24@0:8@"<MTLCommandQueue>"16
@"NSObject<OS_dispatch_data>"32@0:8r*16Q24
v48@0:8r*16Q24@?<v@?I>32@"<MTLDeserializerAllocator>"40
B40@0:8r*16Q24@"<MTLDeserializerAllocator>"32
v48@0:8^{__IOSurface=}16r*24Q32@"<MTLDeserializerAllocator>"40
v52@0:8I16@"NSString"20r*28Q36@"<MTLDeserializerAllocator>"44
v56@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48
v60@0:8^^v16^Q24Q32@?<v@?>40@?<v@?>48I56
v60@0:8^^v16^Q24Q32@?<v@?ddQQ>40@?<v@?ddQQ>48I56
v48@0:8^^v16^Q24Q32@"<MTLCommandBuffer>"40
B56@0:8@"NSObject<OS_dispatch_data>"16r*24Q32@"NSString"40@"<MTLDeserializerAllocator>"48
@40@0:8@16B24@28B36
@24@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16
B32@0:8^{?=I{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
@24@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16
B32@0:8^{?=I{?=b2b2b1b3b4b4b4b4b2b5b1b1b3b28ffQ}}16@24
@24@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16
B32@0:8^{?=I{?=b3b1b1b1b26{?=b3b3b3b3b20II}{?=b3b3b3b3b20II}}}16@24
@24@0:8^{?=I{?=QSCC}}16
B32@0:8^{?=I{?=QSCC}}16@24
B32@0:8^{?=II{?=b4b1b1b1b1b8b16IIISSSSQ}b1b31Q}16@24
B32@0:8^{?=IIQQSb1b16}16@24
B40@0:8^{?=I}16Q24@32
B40@0:8^{?=IQ}16Q24@32
B40@0:8^{?=II}16Q24@32
B40@0:8^{?=Ii}16Q24@32
B40@0:8^{?=IIQ}16Q24@32
B40@0:8^{?=Ib1b31I[0I]}16Q24@32
B40@0:8^{?=IQQ}16Q24@32
B40@0:8^{?=IC{?=QQ}}16Q24@32
B40@0:8^{?={?=b4b1b1b1b1b8b16IIISSSSQ}}16Q24@32
B40@0:8^{?=QS}16Q24@32
B32@0:8^{?=IIS}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}}16@24
B32@0:8^{?=IISS{?=QQ}{?=QQ}CCCC}16@24
B32@0:8^{?=IIQQ{?=b4b1b1b1b1b8b16IIISSSSQ}}16@24
B32@0:8^{?=I}16@24
B32@0:8^{?=IQQ}16Q24
@24@0:8r^{?=II}16
@48@0:8^{?=ICCC}16@24@32@40
@"<MTLCommandQueue>"
@"<MTLDeserializerObjectDelegate>"
@"MTLSharedEventListener"
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v24@0:8I16I20
v88@0:8{?=QQQ}16{?=QQQ}40{?=QQQ}64
v80@0:8@16Q24{?=QQQ}32{?=QQQ}56
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v40@0:8r^@16Q24Q32
v48@0:8r^@16Q24Q32Q40
v32@0:8r^@16Q24
v40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24Q32
v36@0:8@16Q24B32
v24@0:8@"<MTLRenderPipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v24@0:8@"<MTLDepthStencilState>"16
v80@0:8@"<MTLBuffer>"16Q24{?=QQQ}32{?=QQQ}56
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v32@0:8@"<MTLResource>"16Q24
v40@0:8@"<MTLResource>"16Q24Q32
v24@0:8@"<MTLHeap>"16
v32@0:8@"<MTLHeap>"16Q24
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v36@0:8@"<MTLCounterSampleBuffer>"16Q24B32
v24@0:8@?16
v48@0:8@16Q24@32Q40
v40@0:8f16f20f24f28Q32
v44@0:8@16f24f28f32Q36
v28@0:8B16Q20
v56@0:8@16Q24Q32Q40Q48
v60@0:8@16Q24Q32Q40B48Q52
v48@0:8@16Q24Q32Q40
v52@0:8@16Q24Q32Q40B48
v88@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40
v92@0:8{?=QQQ}16{?={?=QQQ}{?=QQQ}}40I88
v24@0:8@?<v@?@"<MTLRenderCommandEncoderSPI>"Q>16
v48@0:8@"<MTLTexture>"16Q24@"<MTLSamplerState>"32Q40
v44@0:8@"<MTLSamplerState>"16f24f28f32Q36
v56@0:8@"<MTLTexture>"16Q24Q32Q40Q48
v60@0:8@"<MTLTexture>"16Q24Q32Q40B48Q52
v48@0:8@"<MTLTexture>"16Q24Q32Q40
v52@0:8@"<MTLTexture>"16Q24Q32Q40B48
v40@0:8@"<MTLResourceGroupSPI>"16Q24Q32
@"NSMutableArray"
@"MTLRenderPassDescriptor"
@"<MTLSerializerRenderPipelineState>"
@"<MTLSerializerDepthStencilState>"
[31@"<MTLSerializerBuffer>"]
[128@"<MTLSerializerTexture>"]
[16@"<MTLSerializerSamplerState>"]
@"<MTLSerializerBuffer>"
@"<MTLComputeCommandEncoderSPI>"
@"<MTLComputePipelineState>"
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v56@0:8@16Q24@32Q40Q48
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@16{_NSRange=QQ}24@40Q48
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80B88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v144@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112Q136
v44@0:8@16{_NSRange=QQ}24I40
v104@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v144@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112Q136
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24I40
v104@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40r^v88Q96
v120@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88
v128@0:8@"<MTLTexture>"16Q24Q32{?={?=QQQ}{?=QQQ}}40{?=dddd}88Q120
v28@0:8@16I24
v44@0:8@16Q24Q32I40
v64@0:8r^@16r^Q24{_NSRange=QQ}32I48^@52I60
v56@0:8r^v16Q24Q32I40^@44I52
v56@0:8r^@16{_NSRange=QQ}24I40^@44I52
v72@0:8r^@16r^f24r^f32{_NSRange=QQ}40I56^@60I68
v24@0:8C16B20
^v28@0:8Q16I24
@"<MTLSerializerCommandStream>"
@32@0:8^v16Q24
v32@0:8Q16^v24
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v24@0:8@"<MTLComputePipelineState>"16
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
B44@0:8@16Q24Q32I40
@"NSData"16@0:8
v32@0:8@"<MTLResourceGroupSPI>"16Q24
B44@0:8@"<MTLBuffer>"16Q24Q32I40
v44@0:8@"<MTLBuffer>"16Q24Q32I40
@32@0:8@16Q24
@"<MTLSerializerComputePipelineState>"
