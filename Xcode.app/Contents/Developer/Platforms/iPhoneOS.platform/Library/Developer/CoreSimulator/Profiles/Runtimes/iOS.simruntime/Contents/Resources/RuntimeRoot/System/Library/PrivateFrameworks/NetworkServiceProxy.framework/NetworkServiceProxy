@(#)PROGRAM:NetworkServiceProxy  PROJECT:NetworkServiceProxy-1
!$'*-
.A13NPFrameStream
11FrameStream
N6Socket6ErrorsE
6Writer
&&&&
N3Log6StderrE
N3Log8AppenderE
N3Log8DateTimeE
N3Log9FormatterE
3Log
10BufferPool
11PendingPool
6Socket
6Reader
15NPTuscanyClient
6Client
N6Crypto7SessionE
N5Frame4AEADE
13PendingStream
N3AIO5EventE
8Transfer
6Buffer
7Pending
23NPTuscanyLoopbackClient
9AddressV4
7Address
N6Client5HelloE
8Datagram
N6Client5QueryE
 #&),/258;>ADGJMPSVY\_behknqtwz}
kESSRTT
kESSIsSelected
kESSRank
kESSSelectedEdgeLabel
kESSAlpha
kESSWindowSize
kESSRTTSamples
kESSRewardSamples
kESSRewardSampleMean
kESSSelectionCount
kESSGoodness
kESSFairness
kESSPolicyMetric
kESSTrialCount
kESSLastUsedTimestamp
kESSNoRTTCount
(alpha %f windowSize %ld, trialCount %ld, signature %@, interfaceType %@, edgeAttributesDict %@
networkSignature
interfaceType
alpha
windowSize
trialCount
edgeAttributesDict
@sum.self
not 
v32@?0@8@16^B24
dpuuid
eidx
appRule
label
bundle
ExecutablePath
edgeSet
edges
com.apple.NetworkServiceProxy
Who<3LovesYaBaby
v8@?0
ivIu8YTDnBSrYv/SN4G8Ag
ProductVersion
ProductType
0123456789bcdefghjkmnpqrstuvwxyz
Host
Accept
Accept-Language
Accept-Encoding
br, gzip, deflate
keep-alive
Connection
AppleLanguages
ru-ru
state
v24@?0@"NSArray"8@"NSError"16
v16@?0@"NSError"8
configuration
signature
certificates
algorithm
UNKNOWN
ECDSA_SHA256
(unknown: %i)
nsp.loopback
B16@?0@"NSObject<OS_nw_frame>"8
version
enabled
disableUntil
authInfo
policyTierMap
proxies
pathWeights
resolvers
maxTokenNum
fallbackPathWeights
regionId
NetworkServiceProxy
TokenAgent
should
should not
v32@?0@"NSDictionary"8@"NSString"16@"NSURL"24
unknown
timeout
complete
fallback
parse_error
net_result
response
answers
questions
alternate
direct
Tunnel
Direct
BestEdge
BestEdgeRTT
BestEdgeProbedRTT
NextBestEdge
NextBestEdgeRTT
v24@?0@"NSDictionary"8@"NSError"16
<unknown>
v16@?0@"NSArray"8
Edge Selection: best edge <%@, rtt %lu, probed rtt %lu> next best edge <%@, rtt %lu> trialCount %ld
bestEdge
bestEdgeRTT
bestEdgeProbedRTT
nextBestEdge
nextBestEdgeRTT
status
nsp.direct
tier
policy
FREE
SUBSCRIBER
EncodedData
-[NSPPrivacyProxyNetworkRegistration initWithAgentUUID:agentDescription:delegate:]
B16@?0@"NEFileHandle"8
com.apple.networkserviceproxy.reportErrorForAgent
-[NSPPrivacyProxyNetworkRegistration resetProxyAgent]
MultiHop
-[NSPPrivacyProxyMultiHopNetworkRegistration setProxyAgentConfiguration:secondProxyHopURL:firstProxyHopKeyArray:secondProxyHopKeyArray:ingressTokenAgentUUID:egressTokenAgentUUID:fallbackAgentUUID:shouldFailOpen:allowGeohash:]
proxy-authorization
PrivacyToken token=
sec-ch-geohash
SingleHop
-[NSPPrivacyProxySingleHopNetworkRegistration setProxyAgentConfiguration:proxyKeyArray:tokenAgentUUID:fallbackAgentUUID:shouldFailOpen:]
MultiHopFallback
-[NSPPrivacyProxyMultiHopFallbackNetworkRegistration setProxyAgentConfiguration:secondProxyHopURL:firstProxyHopKeyArray:secondProxyHopKeyArray:ingressTokenAgentUUID:egressTokenAgentUUID:shouldFailOpen:allowGeohash:]
SingleHopFallback
-[NSPPrivacyProxySingleHopFallbackNetworkRegistration setProxyAgentConfiguration:proxyKeyArray:tokenAgentUUID:shouldFailOpen:]
Wi-Fi
Cellular
Wired
Virtual
%s@%s
default_signature
Signature
InterfaceType
HasIPv6
tuscany
expired
trying tuscany
trying direct
PathType
FallbackReasonNumber
FallbackReason
connection problem
service problem
insufficient metadata
network incompatible
none
FallbackCategory
FallbackDelay
Primary
Secondary
Tertiary
EdgeType
EdgeAddress
tunnelFirstTxByteTimestamp
IsMultipath
SubflowCount
ConnectedSubflowCount
IsTFOProbeSucceeded
PrimarySubflowInterface
SwitchCounts
ConnectionDelay
FirstTxByteDelay
TimeToFirstByte
ConnectionError
TxBytes
TxPackets
RxBytes
RxPackets
Resend
TCPMetrics
TimeSinceLastUsage
TFOSucceeded
TimingIntervals
Failed to create JSON data from the %s: %s
%s are not a valid JSON object
_tcp
Other
EnableNSP
ModifyParametersBegin
ModifyParametersEnd
ProtocolCreateBegin
ProtocolCreateEnd
AddInputHandlerBegin
AddInputHandlerEnd
Connect
InitialData
TunnelStart
TunnelConnected
HelloAck
FirstDataReceived
FirstDataNotified
FirstDataDelivered
Unknown
NetworkServiceProxy internal queue
%02x
(%@): %@
yMdHm
com.apple.networkserviceproxy
NSPTrueClientIPAddress
Invalid
Good
Poor
Minimally Viable
%@ (%d)
handleReadData_block_invoke
stream_nw.mm
m_headerReadCount < sizeof(m_currentHeader)
FailedToCreateIncomingFrame
InvalidLengthForIncomingFrame
data
hello
hack
request
exception
rekey
capacity
advertise
ping
trace
<<<<<<<<< kevent setup failed (%d: %s) >>>>>>>>>>
tarpit escapee
peer closed
hangup
Socket.get
invalid header
[%d] incoming <%s:%d>
[%d] blocked
[%d] writable
[%d] %s (%s)
error
[%d] readable (%s)
info
out of buffers
[%d] exception '%s' on channel %d
busy
offline
orphaned
interrupt
session
[%d] sending hack (time %d)
idx (%lu) is out of range (%lu)
conditions
SAFARI_UNENCRYPTED
SAFARI_DNS
SAFARI_TRACKER
MAIL_TRACKER
SAFARI_ALL
SAFARI_HTTP
ANY_UNENCRYPTED
ANY_DNS
ANY_KNOWN_TRACKER
ANY_APP_TRACKER
NEWS_URL_RESOLUTION
EXPOSURE_NOTIFICATIONS
PrivacyProxyCaptiveProbe
http://netcts.cdn-apple.com
<HTML><HEAD><TITLE>Success</TITLE></HEAD><BODY>Success</BODY></HTML>
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Location
-iOS
privacyProxyErrorDomain
NSPServerClient queue
v16@?0@"NSObject<OS_xpc_object>"8
NSPServerCommandType
NSPServerConfiguration
NSPServerErrorString
IPC failed
NSPServerEdgeSetIdentifier
NSPServerWaldoInfos
NSPServerWaldoInfo
NSPServerAppLabel
NSPServerAppRules
NSPServerAppRule
NSPServerResponseData
MessageResult
RequestLog
NSPServerUsageData
NSPServerSigningIdentifier
NSPServerLatitude
NSPServerLongtitude
NSPServerTimestamp
NSPServerEndpoint
NSPServerWaldoState
NSPServerTelemetryService
NSPServerTelemetryURL
NSPServerTestLatencyMap
NSPServerCommandResult
privacyProxyEnabled
configServer
configFetchEnabled
userTier
ingoreInvalidCerts
configFetchDate
proxyTraffic
cloudSubscriptionCheckEnabled
v16@?0@"NSPConfiguration"8
invalid config dictionary
authURL
authType
proxyHop
proxyURL
proxyKeyInfo
tokenKeyInfo
supportsFallback
vendor
tcpProxyFqdn
weight
dohURL
obliviousDoHConfig
NSPServerPrivacyProxyConfigDictionary
NSPServerPrivacyProxyURL
+[NSPServerClient getErrorFromDict:]
NSPServerErrorCode
Enabled
Disabled
NSPServerPrivacyProxyEnabled
NSPServerPrivacyProxyServiceStatus
NSPServerPrivacyProxyServiceStatusTimeline
NSPServerPrivacyProxyNetworkStatus
NSPServerPrivacyProxyUserTier
NSPServerPrivacyProxyTrafficMask
NSPServerPrivacyProxyTraffic
NSPServerPrivacyProxyEffectiveUserTier
NSPServerPrivacyProxyPolicy
NSPServerLocationMonitorInterval
NSPServerPrivacyProxyInfo
NSPServerPrivacyProxyGeohashSharingEnabled
NSPServerPrivacyProxyAccountType
NSPServerPrivacyProxyRTCReportType
NSPServerPrivacyProxyRTCReportErrorCode
NSPServerPrivacyProxyRTCReportURL
ANISETTE
BAA_ANISETTE
INGRESS_ONLY
EGRESS_ONLY
POST %@ HTTP/1.1
Host: %@
Content-Length: %lu
GET %@ HTTP/1.1
Host: %@
B24@?0@8@"NSDictionary"16
Content-Length
%@ %@ %u %u %u %u %u
name
type
resource
CNAME
INFO
MBOX
MEXG
AAAA
format
server
nxdomain
noimpl
refused
reserved
com.apple.nsp
@"NSDictionary"8@?0
com.apple.nsp.configuration
-[NSPConfigurationFetchAnalytics configFetchURLToIndex]
https://mask-api.icloud.com/v1/fetchConfigFile
https://mask-api.icloud.com/v1_1/fetchConfigFile
https://mask-api.icloud.com/v1_2/fetchConfigFile
https://mask-api.icloud.com/v1_3/fetchConfigFile
https://mask-api.icloud.com/v1_4/fetchConfigFile
ConfigurationFetchPath
HTTPCode
NSURLErrorCode
RequestedServerUUID
Latency
com.apple.nsp.tokenFetch
ProxyURL
ProxyVendor
TierType
AuthenticationType
RequestedTokenCount
ActivatedTokenCount
com.apple.nsp.configurationStats
ConfigurationVersion
ConfigurationEnabled
TokenFetchEnabled
SafariUnencryptedEnabled
SafariDNSEnabled
SafariTrackersEnabled
SafariAllEnabled
SafariHTTPEnabled
MailTrackersEnabled
UnencryptedEnabled
DNSEnabled
KnownTrackersEnabled
AppTrackersEnabled
NewsURLResolutionEnabled
ExposureNotificationsEnabled
com.apple.nsp.serviceStatusStats
ServiceStatusDisabledCount
ServiceStatusActiveCount
ServiceStatusOutageCount
ServiceStatusFraudAlertCount
ServiceStatusUnsupportedRegionCount
ServiceStatusSystemIncompatibleCount
ServiceStatusSubscriberUnsupportedRegionCount
com.apple.nsp.networkStatusStats
NetworkStatusStatsWiFiBlockedCount
NetworkStatusStatsWiFiDisabledCount
NetworkStatusStatsWiFiActiveCount
NetworkStatusStatsCellBlockedCount
NetworkStatusStatsCellDisabledCount
NetworkStatusStatsCellActiveCount
NetworkStatusStatsWiredBlockedCount
NetworkStatusStatsWiredDisabledCount
NetworkStatusStatsWiredActiveCount
com.apple.nsp.deviceIdentityStats
Success
ErrorDomain
ErrorCode
com.apple.nsp.proxyAgentStats
IngressProxyTokensAdded
EgressProxyTokensAdded
IngressProxyLowWaterMarkEventHitCount
EgressProxyLowWaterMarkEventHitCount
/System/Library/PrivateFrameworks/NetworkServiceProxy.framework
/System/Library/PrivateFrameworks/UIKitCore.framework
UIDevice
NSPResourcesGetUIDeviceClass
Network Status
Network Status Start Time
Network Status End Time
PrivacyProxyNetworkStatusTimeNetworkStatus
PrivacyProxyNetworkStatusTimeNetworkStartTime
PrivacyProxyNetworkStatusTimeNetworkEndTime
Service Status
Service Status Timeline
Network Status Timeline
ServiceStatus
DiskVersion
Generation
ServiceStatusTimeline
NetworkStatusTimeline
NSPServiceStatusManagerInfo
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/INTERNET_PRIVACY
com.apple.networkserviceproxy.privacy-proxy-service-status-changed
RECOVERED_TITLE
RECOVERED
OUTAGE_WARNING_TITLE
OUTAGE_WARNING
FRAUD_WARNING_TITLE
FRAUD_WARNING
REGION_WARNING_TITLE
REGION_WARNING
INCOMPATIBILE_WARNING_TITLE
INCOMPATIBILE_WARNING
-[NSPServiceStatusManager setNetworkStatusOnTimeline:]
WARNING_TITLE
WIFI_WARNING
USE_WITHOUT_PROXY
USE_OTHER_NETWORK
prefs:root=WIFI
v12@?0B8
CELLULAR_WARNING
CELLULAR_SETTINGS
prefs:root=MOBILE_DATA_SETTINGS_ID&path=CELLULAR_DATA_OPTIONS
tuscanyClientGetDataSize
NPTuscanyClient.mm
dataLen > sizeof(Frame::Header)
NPTuscanyClient
%d-%.2d-%.2d %.2d:%.2d:%.2d,%.3d %s.%s: 
<log message too large>
push (invalid link)
fatal: %s
read
buffer.h
"unexpected Splicing call"==0
Socket.connect
Socket.set
Socket.bind
Socket.listen
encrypt
crypto.h
plainsz + skpsz <= sizeof(pt)
decrypt
!_decsz || plainsz + decsz <= sizeof(pt)
dtor
[%d] wrote %ld of <%s:%ld>
unhandled %d bytes on channel %d
fatal
unhandled ack on channel %d
unhandled hack
unhandled ping
unhandled request for %llx with %d bytes on channel %d
unhandled exception '%s' on channel %d
connected
TunnelDisposed
decrypt failed
unsupported cmd
inbound
ack.bytes >= 0
failed to encrypt
[%d] queued <%s:%ld>
append (invalid link)
TunnelStartFailed
HelloFrameFailed
v32@?0r^v8{_NSRange=QQ}16
v40@?0r^v8{_NSRange=QQ}16^B32
FailedToCreateDataFrame
can't create Hello
invalid rekey
populating (ch %d, len %ld)
udp writing %ld bytes
Socket.open
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
tunnel
direct connection
NoFallbackReason
connection
peer_address
interface
ttfb
ttfr
rttvar
resend
subflows
switches
mptcp
exceptions
build
device
source
B24@?0C8S12r^v16
Device Identity Fetch Date
DeviceIdentityFetchDate
DeviceIdentityInfo
baaSignature
leafCertificate
intermediateCertificate
InternalError
AverageSampleSize
AverageSamples
%lu | 
avg = %lu
-[NPEdgeLatency initWithProbeEndpoint:probeTFO:]
NPEdgeLatency.m
[probeEndpoint isKindOfClass:[NWAddressEndpoint class]]
ProbeEndpoint
ProbeTFO
CreationDate
ProbeCount
IFType
EdgeIndex
RTTAverage
RTTAverageObserved
PassedReprobeThreshold
TFOStatus
ProbeTFONoCookie
IPv4
IPv6
Failed
Succeeded
TFO %@
NoCookie
Cookie
Edge %lu(%@) RTT %lu
 (%@)
 (observed %@)
 (passed reprobe threshold)
 (%@ %@)
-[NPEdgeLatency measureLatencyWithTimeout:completionHandler:]
self.probeConnection == nil
v24@?0@"NSData"8@"NSError"16
dictionary parameter is not a dictionary: %@
%@ is not a string: %@
EnableOptIn
%@ is not a number: %@
EnableOptInPerTask
DisableDivertDNS
EnableDivertDNSOnly
NoDNSDelegation
service
UseCustomProtocol
UseLocalFlowDivert
EnableDirectRace
ComposeInitialData
matchDomains
%@ is not an array: %@
%@ does not contain string: %@
matchEffectiveApplications
%@ does not contain dictionary: %@
matchEffectiveAppSigningIdentifier
matchEffectiveAppPath
%@ does not contain dictionary with App signing identifier, designated requirement or path: %@
locationBundlePath
DisableFallback
EnableDirectMultipath
EnableDirectTFO
EnableDirectExtendedValidation
DirectTLSPorts
%@ contains a non-number: %@
FallbackBufferLimit
%@ must be a positive number or 0: %@
FallbackCountBeforeImmediateFallback
ProxyEvaluationPath
%@ is not a string: %@
timer
%@ is not a number: %@
%@ must be a positive number or 0: %@
idle
transport
notfocookie
rwnd
must-tfo
enable
ratio
%@ must be a number between 0.0 and 1.0 inclusive
interval
telemetry
com.apple.assistantd
ace.siri.apple.com
Failed to connect to networkserviceproxy
ServiceID
enable-ratio
telemetry-ratio
configID
enableCheckDate
disabledByRatio
appRuleUpdateHash
pathType
fallbackReason
fallbackCategory
fallbackDelay
edgeType
edgeAddress
isMultipath
multipathSubflowCountKey
multipathConnectedSubflowCountKey
multipathPrimarySubflowInterfaceIndex
multipathSubflowSwitchCounts
TCPInfo
firstTxByteTimeStamp
firstTxByteDelay
connectionDelay
IPType
timeIntervalSinceLastUsage
timeToFirstByte
tunnelConnectionError
isTFOProbeSucceeded
initialBytesLeftOver
rxPackets
rxBytes
txPackets
txBytes
retransmitBytes
retransmitPackets
minimumRTT
Network Unavailable
Server Unreachable
Send Failure
Response Timeout
Connection Reset
Connection Refused
Connection Aborted
Server Busy
Server Session Expired
Server Session Orphaned
Server Session Interrupt
Server Service Offline
Server Version Mismatch
Null Data From Tunnel
Tunnel Flow Timeout
No Day Pass
Exceeded Fallback Limit
No Day Pass due to Waldo Request Failure
No Day Pass due to Day Pass Request Failure
No Network Latency Derivation
No Network Latency Derivation due to Interface Change
No Network Latency Derivation due no network path
No Network Latency Derivation due all probes timed out on Wi-Fi
TFO is required but TFO is not available
No initial data provided
TFO failed
Connection failed, see tunnelConnectionError
Edge DNS resolution failed
Failed to create incoming frame
Incoming frame has invalid length
Tunnel disposed
Failed to create Hello frame
Failed to start the Tuscany connection
All day passes expired
Failed to get session counter
Failed to create data frame
Duplicate tunnel
No Network Latency Derivation because networkserviceproxy died
No Network Latency Derivation all probes timed out on cellular
No Network Latency Derivation all probes timed out on other
No Network Latency Derivation all probes timed out, no network interface
No Network Latency Derivation and signature limit reached
No Network Latency Derivation, first edge set not yet probed
No Network Latency Derivation, new edge set not yet probed
No Day Pass due to connection error
NPAppProxyFlowBridge queue
com.apple.networkserviceproxy.network-transaction
v12@?0i8
v16@?0@"NSObject<OS_nw_error>"8
v24@?0^@8I16i20
v36@?0@"NSObject<OS_dispatch_data>"8@"NSObject<OS_nw_content_context>"16B24@"NSObject<OS_nw_error>"28
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
com.apple.networkserviceproxy.flowdivert
v20@?0i8@"NSObject<OS_nw_error>"12
com.apple.iCloud.FollowUp
RegionID
+[PrivacyProxyClient getStatus:completionHandler:]
v20@?0B8@"NSError"12
+[PrivacyProxyClient getServiceStatus:completionHandler:]
v24@?0@"PrivacyProxyServiceStatus"8@"NSError"16
+[PrivacyProxyClient getServiceStatusTimeline:completionHandler:]
+[PrivacyProxyClient reportWiFiNetworkStatus:networkName:queue:completionHandler:]
+[PrivacyProxyClient reportCellularNetworkStatus:networkName:queue:completionHandler:]
+[PrivacyProxyClient getUserTier:completionHandler:]
v24@?0Q8@"NSError"16
+[PrivacyProxyClient getTrafficState:completionandler:]
+[PrivacyProxyClient getGeohashSharingPreference:completionHandler:]
+[PrivacyProxyClient getPrivacyProxyAccountType:completionHandler:]
+[PrivacyProxyClient getEffectiveUserTier:completionHandler:]
v28@?0^{__SecTrust=}8B16^{__CFError=}20
Conditions
com.apple.WebKit.InAppBrowser
com.apple.WebSheet
/usr/libexec/captiveagent
/usr/libexec/configd
com.apple.mobilesafari
com.apple.safari.peertopeer
com.apple.news
com.apple.news.urlresolution
com.apple.exposurenotification.sensitive
com.apple.SafariTechnologyPreview
com.apple.mobilemail
com.apple.nsp.proxyAgentProbe
Large
normal close
v28@?0Q8@"NSString"16B24
tokenKeyID
unactivatedTokenList
Anisette
+[NSPAnisette addAuthenticationInformationToRequest:tokenActivationQuery:completionHandler:]
+[NSPBAA addAuthenticationInformationToRequest:tokenActivationQuery:completionHandler:]
v28@?0B8^{__SecKey=}12@"NSArray"20
BAA_Anisette
+[NSPBAA_Anisette addAuthenticationInformationToRequest:tokenActivationQuery:completionHandler:]
v16@?0B8i12
baaParameters
tokenInfo
tokenExpiryTimestamp
activatedTokenList
Latitude
Longtitude
Timestamp
<%f, %f> %@
FailedToGetSessionCounter
1.1.1.1@5223,11:11:11:11:11:11:11:11@5223
%@-%@
%@ TrustEstablishment
[%@]
https://%@:%@/tuscany/daypass/2
X-Timeout
X-MaxFrame
X-Host
X-RTT
v24@?0@"NSURLResponse"8@"NSData"16
v20@?0@"NSError"8B16
DayPassEndpoint
Endpoint
DayPassData
DayPassUUID
DayPassHardExpiry
DayPassCreationDate
CurrentOnRampMaxFrameBytes
CurrentOnRampRTT
DayPassFailed
DayPassError
[%@ tuscany: %@ maxframe: %lu rtt: %lu %@ creation: %@ hard: %f tfoStatus: %ld]
 (daypass failed, error %d)
dayPassEndpoint
tuscanyEndpoint
dayPassUUID
dayPassOriginAddress
dayPassHostID
dayPassPortID
dayPassCreation
maxframe
dayPassHardExpiry
SignatureLastVisited
NetworkLastUsed
EdgeSelection
EdgeLatencies
CurrentLatencyMap
ProbeRateLimit
LastFailureReason
LastFallbackReason
isProbeInProgress
Name
OnRampEndpoint
OnRampList
CurrentOnRampIndexList
Distance
LastUsed
SavedEndpoint
%@ probe: %@
 onRamps: %@ currOnRamp: %ld 
B32@?0Q8@"NSNumber"16@"NPTuscanyOnRamp"24
 distance: %f, location: %@
 lastUsed: %@
5223
-[NPTuscanyEdge linkWithOnRampsRetainMissingAddressFamilies:]
NPWaldo.m
parentWaldo != nil
Waldo reprocess queue
host
host-prepend-label
leafOID
revocationFailClosed
daypass
retry
expiry
request-timeout
constraint
LatencyDerivationEnabled
useGeoFromServer
EdgeFairnessFactor
LatencyFactorX
LatencyFactorA
LatencyFactorB
LocationCheckInterval
LocationToleranceDistance
LocationTTL
ProbePause
ProbeNoTFOCookie
ProbeTimeout
ViewCount
ConnectionIdleTimeoutMaximum
NetworkSignatureLimit
ObservedRTTSampleSize
ReprocessSamplingInterval
ReprocessSampleSize
EdgeSelectionEnabled
EdgeSelectionAlpha
EdgeSelectionWindowSize
EnableIPv6
TFOLeeway
where
probe
hosts
com.apple.networkserviceproxy.waldoResolve
v16@?0B8B12
v20@?0Q8B16
Identifier
timestamp
waldoHostname
EdgeList
CurrentEdgeIndex
retryPause
NetworkInformation
DayPassExpiry
EnableLatencyDerivation
ObservedRTTSampleSizeKey
ReprocessSamplingIntervalKey
ReprocessSampleSizeKey
ViewSize
RequireTFO
CachedLocation
LocationCheckTimestamp
DayPassHostname
DayPassEV
TelemetryURL
TelemetryService
UseGeoFromServer
edgeSelectionEnabled
edgeSelectionAlpha
edgeSelectionWindowSize
allOnRamps
edgesGeneration
usedEdgesGeneration
waldoUpdateHash
New keybag does not have any keys, re-pushing current keybag with TFO disabled and updated generation
identifier = %@, currentEdgeIndex = %ld, retryPause = %@, probePause = %@, probeTFO = %@, probeNoTFOCookie = %@ enableLatencyDerivation = %@, latencyFactorX = %@, latencyFactorA = %@, latencyFactorB = %@, edgeFairnessFactor = %@, locationCheckInterval = %@, locationToleranceDistance = %@, locationTTL = %@, viewSize = %@, daypassRequestTimeout = %@, daypassSoftExpiry = %@, generation = %u, cachedLocation = %@, locationCheckTimestamp %@, useGeoFromServer %@, enableIPv6 %@, requireTFO %@
Edges (ordered by distance if available) :
Edges (current network RTT order):
%@.%@
com.apple.NetworkServiceProxy.WaldoInfo
waldo
pushCurrentDayPassesToKernel setting keybag in kernel
incomplete
re-probing
 refreshing day passes
com.apple.networkserviceproxy.waldoReprocess
v24@?0@"NSArray"8q16
com.apple.networkserviceproxy.waldoReprocessAdHoc
v16@?0q8
<TFO %d, NoCookie %d>
<inactive>
(observed %@)
    %s(%s) rtt %lu (%s) %s %s (%s) %s %s
null
(passed reprobe threshold)
%@:    %s(%@) rtt %lu (%@) %@ %@ (%@) %@ %@
%@(%@):%lu %@ | 
%@(%@):(%@) %@ %@ | 
com.apple.networkserviceproxy.waldoRefreshDayPasses
v20@?0B8B12B16
Current Network Signature %s
Latency results for network signature %s:
None
RTTAverageObservedLast
LastVisited
%@:%@
distance
samples
probes
idleSeconds
q24@?0@8@16
Token Count
Expiration date
tokenArray
tokenExpirationDate
Proxy URL
Proxy tokens count
Proxy token Agent UUID
-[NSPProxyTokenInfo initWithDelegate:proxyInfo:path:subscriber:useDefaultInterface:]
com.apple.networkserviceproxy.tokenManagerRetry
proxyInfo
proxyTokenAgentUUID
proxyTokenFetchRetryAttempt
proxyTokenFetchRetryOnNetworkChange
proxyTokenFetchRetryDate
proxyTokenUseDefaultInterface
proxyTokenSubscriber
proxyTokenReportTokenFetchOutage
com.apple.networkserviceproxy.tokenManagerRefreshPool
-[NSPProxyTokenInfo cacheTokens:expirationTime:]
com.apple.networkserviceproxy.checkCachedTokenCount
com.apple.networkserviceproxy.tokenManagerPathChange
Retry-After
com.apple.networkserviceproxy.tokenFetchFailureWithHttpStatusCode
-[NSPProxyTokenInfo requestTokensWithCompletionHandler:]
com.apple.networkserviceproxy.tokenRateLimited
com.apple.networkserviceproxy.tokenInfoInvalid
X-Apple-Client-Action
Switch-Proxy
com.apple.networkserviceproxy.switchProxy
v44@?0B8@"NSHTTPURLResponse"12@"NSError"20@"NSArray"28@"NSDate"36
com.apple.NetworkServiceProxy.ProxyToken
Network Characteristics
Proxy success
Ingress proxy connection timeout
Ingress proxy connection refused
Ingress proxy connection host down
Ingress proxy connection host unreachable
Ingress proxy connection error
Ingress proxy server DNS error
Ingress proxy server DNS timeout
Egress proxy connection error
Origin proxy connection error
ProxyAgentNetworkStatisticsNetworkCharacteristics
ProxyAgentNetworkStatisticsSuccess
ProxyAgentNetworkStatisticsIngressConnectionTimeout
ProxyAgentNetworkStatisticsIngressConnectionRefused
ProxyAgentNetworkStatisticsIngressHostDown
ProxyAgentNetworkStatisticsIngressHostUnreachable
ProxyAgentNetworkStatisticsIngressConnectionError
ProxyAgentNetworkStatisticsIngressDNSBlocked
ProxyAgentNetworkStatisticsIngressDNSTimeoutError
ProxyAgentNetworkStatisticsEgressConnectionError
ProxyAgentNetworkStatisticsOriginConnectionError
-[NSPProxyPath initWithDelegate:ingressProxy:egressProxy:proxyPathWeight:allowFallback:allowFailOpen:geohashSharingEnabled:networkCharacteristics:]
Ingress proxy
Egress proxy
Allow fallback
Allow fail open
Geohash Sharing Enabled
Single hop statistics
Multi hop statistics
proxyPathIngressProxy
proxyPathEgressProxy
proxyPathWeight
proxyPathAllowFallback
proxyPathAllowFailOpen
proxyPathGeohashSharingEnabled
proxyPathSingleHopAgentStatistics
proxyPathMultipleHopAgentStatistics
-[NSPProxyPath setupSingleHopProxyRegistrations]
NSPPrivacyProxyAgentManager.m
-[NSPProxyPath setupMultiHopProxyRegistrations]
-[NSPProxyPath resetSingleHopProxyAgent]
-[NSPProxyPath resetMultiHopProxyAgent]
-[NSPProxyPath proxyPathIsValid:proxyPathList:]
-[NSPProxyPath matchIngress:]
-[NSPProxyPath matchEgress:]
-[NSPQuicProxyPath setupSingleHopProxyRegistrations]
-[NSPQuicProxyPath setupMultiHopProxyRegistrations]
-[NSPQuicProxyPath resetSingleHopProxyAgent]
-[NSPQuicProxyPath resetMultiHopProxyAgent]
-[NSPFallbackProxyPath setupSingleHopProxyRegistrations]
-[NSPFallbackProxyPath setupMultiHopProxyRegistrations]
-[NSPFallbackProxyPath resetSingleHopProxyAgent]
-[NSPFallbackProxyPath resetMultiHopProxyAgent]
-[NSPCandidateProxyPath initWithIngressProxy:egressProxy:proxyPathWeight:]
candidateProxyPathIngressProxy
candidateProxyPathEgressProxy
candidateProxyPathWeight
-[NSPCandidateProxyPath matchIngress:]
-[NSPCandidateProxyPath matchEgress:]
Probe
Probing active
Probe count
Probe success count
Probe failed count
proberName
proberProxy
proberProbeCount
proberProbeConnectionTimeout
proberProbeActiveCount
proberProbeOnNetworkChange
proberLinkQuality
proberNextProbeDate
proberProbeSuccessCount
proberProbeFailedCount
com.apple.networkserviceproxy.setupProbeTimerFired
com.apple.networkserviceproxy.agentProbeTimerFired
com.apple.networkserviceproxy.probeFailedReport
com.apple.networkserviceproxy.probeSuccessReport
com.apple.networkserviceproxy.sendProbe
com.apple.networkserviceproxy.probePathChange
+[NSPPrivacyProxyAgentManager proxyMatch:proxy2:]
+[NSPPrivacyProxyAgentManager proxiesMatch:proxyPathList:ingressProxy:egressProxy:pathWeight:supportsFallback:]
+[NSPPrivacyProxyAgentManager proxyMatchProxyInfoArray:proxy:]
Quic proxy path
Fallback proxy path
Candidate quic proxy path
Candidate fallback proxy path
Proxy path enumerator
Fallback proxy path enumerator
Token issuance restricted
Override preferred proxy
Network proxies rotated
Network fallback proxies rotated
Proxies rotated
Proxy path prober
Direct path prober
proxyAgentProxyArray
proxyAgentProxyPathList
proxyAgentFallbackProxyPathList
proxyAgentOverridePreferredProxy
proxyAgentQuicProxyPath
proxyAgentFallbackProxyPath
proxyAgentCandidateQuicProxyPath
proxyAgentCandidateFallbackProxyPath
proxyAgentProxyTokenInfoArray
proxyAgentTokenIssuanceRestrictedUntilDate
proxyAgentLastPathUnsatisfiedDate
proxyAgentLastPrimaryInterfaceChangeDate
proxyAgentNetworkCharacteristics
proxyAgentUseDefaultInterface
proxyAgentSubscriber
proxyAgentGeohashSharingEnabled
proxyAgentNetworkProxiesRotated
proxyAgentNetworkFallbackProxiesRotated
proxyAgentProxiesRotated
proxyAgentProxyPathProber
proxyAgentDirectPathProber
com.apple.networkserviceproxy.privacy-proxy-path-changed
NSPProxyPathRestoreIntervalSeconds
NSPPreferredProxy
ConfiguredProxies
OverridePreferredProxy
com.apple.networkserviceproxy.tokenIssuanceTimerFired
-[NSPPrivacyProxyAgentManager alternateEgressProxyExists:proxyPathEnumerator:]
-[NSPPrivacyProxyAgentManager proxyPathWithIngressProxyURL:egressProxyURL:]
-[NSPPrivacyProxyAgentManager fallbackProxyPathWithIngressProxyURL:egressProxyURL:]
-[NSPPrivacyProxyAgentManager getProxyTokenInfoForProxyInfo:]
-[NSPPrivacyProxyAgentManager setupQuicProxyPath]
IngressProxyURL
EgressProxyURL
com.apple.networkserviceproxy.refreshProxyInfo
-[NSPPrivacyProxyAgentManager setupCandidateQuicProxyPath]
succesfully
failed
-[NSPPrivacyProxyAgentManager setupFallbackProxyPath]
IngressFallbackProxyURL
EgressFallbackProxyURL
-[NSPPrivacyProxyAgentManager setupCandidateFallbackProxyPath]
-[NSPPrivacyProxyAgentManager updateProxyInfo:proxyPathList:fallbackProxyPathList:]
-[NSPPrivacyProxyAgentManager tokenLowWaterMarkReached:]
-[NSPPrivacyProxyAgentManager tokenAdded:]
-[NSPPrivacyProxyAgentManager tokenFetchOutage:]
-[NSPPrivacyProxyAgentManager switchProxy:]
-[NSPPrivacyProxyAgentManager tokenInfoInvalid:]
-[NSPPrivacyProxyAgentManager tokenRateLimited:untilDate:]
com.apple.networkserviceproxy.tokenIssuanceLimitReached
-[NSPPrivacyProxyAgentManager mergeTokenStats:]
private_relay_proxy_connection_timed_out
private_relay_proxy_down
private_relay_proxy_unreachable
private_relay_proxy_refused_connection
private_relay_proxy_returned_unknown_error
private_relay_proxy_no_reply_before_connection_closed
private_relay_proxy_returned_4XX_HTTP_error
private_relay_proxy_returned_5XX_HTTP_error
egress_private_relay_proxy_no_reply_before_connection_closed
egress_private_relay_proxy_returned_4XX_HTTP_error
private_relay_ODoH_server_authentication_failure
private_relay_ODoH_server_bad_message
Mosaic
eventType
counter
value
privacy_proxy_quic_proxy_failure
privacy_proxy_fallback_proxy_failure
privacy_proxy_odoh_failure
privacy_proxy_token_fetch_failure
privacy_proxy_configuration_fetch_failure
privacy_proxy_unknown_failure
label_privacy-proxy-report-reason-code
label_privacy-proxy-report-reason-description
label_privacy-proxy-report-time
label_privacy-proxy-ingress-proxy
label_privacy-proxy-egress-proxy
label_privacy-proxy-odoh-resolver
label_privacy-proxy-token-fetch-failure-proxy
label_privacy-proxy-token-fetch-server
privacy-proxy-quic-proxy-failure
privacy-proxy-fallback-proxy-failure
privacy-proxy-odoh-failure
privacy-proxy-token-fetch-failure
privacy-proxy-configuration-fetch-failure
privacy-proxy-unknown-failure
network-service-proxy
com.apple.networkserviceproxy.proxyConnectivityCheck
Proxy
com.apple.networkserviceproxy.probeSuccess
-[NSPPrivacyProxyAgentManager copyProxyInfo:]
NSPProxyAgentManagerAuxilaryData
Version
NSPProxyAgentManagerPreferences
com.apple.networkserviceproxy.setUserEventAgentTokenFetchParameters
TokenFetchDate
TokenFetchOnNetworkChange
MessageResponse
com.apple.networkserviceproxy.setUserEventAgentProberParameters
ProxyPathProber
ProxyPathProbeOnNetworkChange
DirectPathProber
DirectPathProbeOnNetworkChange
signatureAlgorithm
NSPSignatureInfo
Safari Unencrypted
Safari DNS
Safari Trackers
Safari All
Safari HTTP
Mail Trackers
Any Unencrypted
Any DNS
Known Trackers
Any App Trackers
News URL Resolution
Exposure Notifications
Free
Subscriber
Configuration Version
User Tier
Configuration Server
Resurrection Date
Config Server Enabled
Waldo Request timeout
Ignore Invalid Certs
Proxy configuration
ETag
Proxy Traffic
Configuration Fetch Date
Cloud Subscription Check Enabled
Proxy Account Type
resurrectionDate
Etag
ProxyTrafficState
PrivacyProxyConfigurationFetchDate
GeohashSharingEnabled
PrivacyProxyConfigurationServerEnabled
PrivacyProxyConfigurationServerHost
UserTier
ProxyAccountType
NSPDefaults
/System/Library/NetworkServiceProxy
diskVersion
appRules
PrivacyProxyConfigurationServerPort
PrivacyProxyConfigurationServerPath
urlRequestTimeout
waldoLeafOID
waldoRevocationFailClosed
persist-metrics
ProxyConfiguration
IgnoreInvalidCerts
CloudSubscriptionCheckEnabled
B16@?0@"NPWaldo"8
global
kill
apps
edgeSets
com.apple.NetworkServiceProxy.Configuration
PrivacyProxy
https://%@/%@
https://%@:%@/%@
mask-api.icloud.com
+[NSPConfiguration validatePrivacyProxyConfiguration:]
https
http
+[NSPConfiguration validateSignature:publicKey:signedData:]
networkserviceproxy
1.2.840.113635.100.6.2.17
1.2.840.113635.100.12.22
NSPConfiguration
Active
Blocked
Loopback
Network Type
Network Name
PrivacyProxyNetworkStatus
PrivacyProxyNetworkType
PrivacyProxyNetworkName
Service Outage
Fraud Alert
Unsupported Region
System Incompatible
Subscriber Unsupported Region
Network Statuses
Details
PrivacyProxyServiceStatus
PrivacyProxyNetworkStatuses
PrivacyProxyDetails
Service Status Start Time
Service Status End Time
PrivacyProxyServiceStatusStartDate
PrivacyProxyServiceStatusEndDate
Ingress proxy URL
Egress proxy URL
Cached ingress token Count
Cached egress token Count
Ingress agent token Count
Egress agent token Count
Ingress agent low water mark
Egress agent low water mark
Cache egress low water mark
Cache ingress low water mark
Ingress fallback proxy URL
Egress fallback proxy URL
Cached ingress fallback token Count
Cached egress fallback token Count
Ingress fallback agent token Count
Egress fallback agent token Count
Ingress fallback agent low water mark
Egress fallback agent low water mark
Cache egress fallback low water mark
Cache ingress fallback low water mark
Requested token count
Unactivated token count
Activated token count
Device identity validated count
Anisette validated count
Proxy token fetch success count
Proxy token fetch failed count
Proxy token consumed count
Proxy token expired count
Proxy agent low water mark hit count
Proxy cache low water mark hit count
Bad tokens count
Missing tokens count
Configuration fetch success count
Configurtion fetch failed count
PrivacyProxyInfoIngressProxyURL
PrivacyProxyInfoEngressProxyURL
PrivacyProxyInfoCachedIngressTokenCount
PrivacyProxyInfoCachedEgressTokenCount
PrivacyProxyInfoIngressAgentTokenCount
PrivacyProxyInfoEgressAgentTokenCount
PrivacyProxyInfoIngressAgentLowWaterMark
PrivacyProxyInfoEgressAgentLowWaterMark
PrivacyProxyInfoCacheEgressLowWaterMark
PrivacyProxyInfoCacheIngressLowWaterMark
PrivacyProxyInfoIngressFallbackProxyURL
PrivacyProxyInfoEngressFallbackProxyURL
PrivacyProxyInfoCachedIngressFallbackTokenCount
PrivacyProxyInfoCachedEgressFallbackTokenCount
PrivacyProxyInfoIngressFallbackAgentTokenCount
PrivacyProxyInfoEgressFallbackAgentTokenCount
PrivacyProxyInfoIngressFallbackAgentLowWaterMark
PrivacyProxyInfoEgressFallbackAgentLowWaterMark
PrivacyProxyInfoCacheEgressFallbackLowWaterMark
PrivacyProxyInfoCacheIngressFallbackLowWaterMark
PrivacyProxyInfoDeviceValidationCount
PrivacyProxyInfoAnisetteValidationCount
PrivacyProxyInfoRequestedTokenCount
PrivacyProxyInfoUnactivatedTokenCount
PrivacyProxyInfoActivatedTokenCount
PrivacyProxyInfoProxyTokenFetchSuccessCount
PrivacyProxyInfoProxyTokenFetchFailedCount
PrivacyProxyInfoProxyTokenConsumedCount
PrivacyProxyInfoProxyTokenExpiredCount
PrivacyProxyInfoProxyAgentLowWaterMarkHitCount
PrivacyProxyInfoProxyCacheLowWaterMarkHitCount
PrivacyProxyInfoBadTokensCount
PrivacyProxyInfoMissingTokensCount
PrivacyProxyInfoNetworkProxiesRotated
PrivacyProxyInfoNetworkFallbackProxiesRotated
PrivacyProxyInfoProxiesRotated
PrivacyProxyInfoConfigFetchSuccessCount
PrivacyProxyInfoConfigFetchFailedCount
path
Got a new keybag from the kernel
NSPManager change handler queue
com.apple.nsputil
loopback
127.0.0.1
latencyMap
addressFamily
TFONoCookie
rtts
probeAddress
fetchDaypass
Will
Will not
-[NSPPrivacyProxyTokenRegistration initWithAgentUUID:agentDescription:delegate:]
-[NSPPrivacyProxyTokenRegistration addToken:]
com.apple.networkserviceproxy.tokenLowWaterMarkReachedForAgent
-[NSPPrivacyProxyTokenRegistration registerTokenAgent:]
Privacy Token Manager
-[NSPPrivacyTokenManager updateTokenFetchURL:authenticationType:ignoreInvalidCerts:]
PrivacyProxyTokenFetch
-[NSPPrivacyTokenManager generateRandomTokens:]
-[NSPPrivacyTokenManager generateTokensUsingTokenBlinder:tokenCount:]
-[NSPPrivacyTokenManager fetchPrivacyTokensOnInterface:tierType:proxyURL:tokenVendor:tokenIssuancePublicKey:tokenCount:completionHandler:]
POST
<%@> <%@;%@;%@;internal>
<%@> <%@;%@;%@>
X-Mask-Client-Info
X-Mask-User-Tier
True-Client-Ip
x-apple-request-uuid
v36@?0B8@"NSError"12@"NSHTTPURLResponse"20@"NSData"28
-[NSPPrivacyTokenManager fetchRequest:requestType:session:completionHandler:]
-[NSPPrivacyTokenManager copyTokenInfo:]
ESS: EdgeSelection object initialized with alpha: %f, windowsize: %ld, trial count: %ld, edgeAttributesDict: %@ (%@ %@)
ESS: Failed updating attributes for edge: %@, RTT: %f, rank: %ld (%@ %@)
ESS: (%@training) Received new RTT for edge: %@, RTT: %f, reward: %.15f, reward mean: %.15f (%@ %@)
ESS: Setting fairness for edge: %@, rank: %ld, fairness: %.15f (%@ %@)
ESS: Computing metric for edge: %@, reward mean: %.15f, trial: %ld, fairness: %.15f, goodness: %.15f, selections: %ld, metric: %.15f (%@ %@)
ESS: Updated attributes for edge: %@, attributes: %@ (%@ %@)
ESS: Returning selected edge: %@, last RTT: %f (%@ %@)
ESS: Queried attributes for edge: %@, attributes: %@ (%@ %@)
ESS: Attributes queried for null edge (%@ %@)
NSP is disabled because the current network has proxies
NSP is disabled by the current configuration
Setting service name to %@ (%llu)
Failed to get the signing identifier, cannot set the current location
Failed to set the NSP configuration: dictionary is missing the %@ key
Failed to get the current process' signing identifier
Failed to get the current process' path: %s
Failed to set the NSP configuration: %@ key is not a dictionary
Invalid edge set, disabling app rule
Invalid endpoints passed to NetworkServiceProxySetRemoteEndpointsForSessionTask: %@
Failed to create meta-data from properties in NetworkServiceProxySetRemoteEndpointsForSessionTask
Address (%@) in address map for hostname %@ is not a string
Set of addresses in address map for hostname %@ is not an NSSet: (%@)
Hostname (%@) in addressMap parameter is not a string
Failed to create meta-data from properties in NetworkServiceProxySetRemoteEndpointMapForSessionTask
Geohash length is too big (%lu), maximum is 12
Failed to allocate %lu bytes for the geohash
Invalid character in geohash %@: %c
Received data is less than an RTT-frame: %lu
Failed to obtain the signing identifier: %@
Failed to obtain the signing identifier
Failed to create a SecTask for self
Failed to derive the request Host: header
Flow %llu (%llu) starting direct session to %@
Flow %llu (%llu) Sending %lu bytes of data on the direct session
Flow %llu (%llu) failed to send %lu bytes of data on the direct session: %@
Flow %llu (%llu) Saving %lu bytes of data for the direct session
Flow %llu (%llu) ran over the limit (%@) on saved data (%u), disabling fallback
Flow %llu (%llu) direct session is now ready
Flow %llu (%llu) direct session failed
Flow %llu (%llu) direct session is now cancelled
Failed to register the np_tunnel_flow protocol
Deallocating loopback connection
Maximum frame count (%u) and/or maximum byte count (%u) is 0
No input data currently available
Not enough data available to meet the required minimum
Failed to parse a DNS response from the tunnel
Received DNS response %ld from the tunnel
Failed to parse a DNS response from the direct connection
Received DNS response %ld from the direct connection
DNS Flow %llu (%llu): %@ send data to client
Flow %llu (%llu) tunnel DNS response timer fired
Flow %llu (%llu) tunnel and direct DNS results known, checking if telemetry should be reported
Flow %llu (%llu) not reporting telemetry because the tunnel is not connected
Flow %llu (%llu) configured telemetry ratio is 0
Flow %llu (%llu) random telemety ratio did not fall within configured ratio (%f)
Flow %llu (%llu) reporting telemetry
Flow %llu (%llu) %@ won: skip cleanup of losing connection
DNS Flow %llu (%llu) received %lu bytes from the app
Flow %llu (%llu) received query %ld
Flow %llu (%llu) failed to parse the DNS query
Edge selection get edge, failed get min with error: %@ (%@ %@)
Edge selection get edge, failed get min, no result dictionary (%@ %@)
Edge selection get edge, failed get min, no selected edge / rtt: %@ (%@ %@)
Edge selection get edge: next best edge %@ Last RTT %lu (%@ %@)
Edge selection train, no edge data (%@ %@)
Edge selection train with edge data %@ (%@ %@)
Edge selection train failed for edge data %@, error: %@ (%@ %@)
Edge selection update, current best edge %@, avg RTT: %ld (%@ %@)
Edge selection update, edge %@ is already being probed currently, skip probe (%@ %@)
Failed edge selection update, edge %@ does not match any edge in edge list (%@ %@)
Edge %@ does not match current best edge, should probe (%@ %@)
Edge selection update, best edge matched (%@ last RTT %lu, current RTT %lu) (%@ %@)
Edge selection update, reprocess probe pending, skip probe for %@ (rank %lu, index %lu) (%@ %@)
Edge selection update, skip probe for %@ because the probe date (%@) has not passed (%@ %@)
Edge selection update, best edge mismatched (%@ RTT %lu, ES %@ last RTT %lu, current RTT %lu) (%@ %@)
Edge selection probe skipped, no edge for index %lu
Edge selection update, probing %@ (rank %lu, index %lu) (%@ %@)
Edge selection probe, got sorted result for %@ (%@ %@)
Edge selection probe, sorted result count (%lu) != %lu (%@ %@)
Created direct flow with identifier %@
Failed to create properties dictionary from flow metadata
Direct flow has no metadata
Tuscany endpoint resolve custom endpoint %@
%s called with null agentUUID
%s called with null agentDescription
%s called with null _proxyConfigAgent
%s called with null _proxyConfigAgentRegistration
Looking for existing proxy agent registration for %@
Found existing proxy registration for %@
Received error for %@ agent
%s called with null self.proxyConfigAgentRegistration
%s called with null self.proxyConfigAgent
Updated %@ proxy agent (%@)
Registered %@ proxy agent (%@)
Un-registering proxy agent with UUID %@
%s called with null firstHopProxyURL
%s called with null secondHopProxyURL
%s called with null ingressTokenAgentUUID
%s called with null egressTokenAgentUUID
%s called with null firstHopProxyEndpoint
%s called with null secondHopProxyEndpoint
%s called with null firstHopProxy
%s called with null secondHopProxy
%s called with null proxyHopArray
%s called with null self.proxyConfiguration
%s called with null proxyURL
%s called with null tokenAgentUUID
%s called with null proxyHopEndpoint
%s called with null proxyHop
SecItemCopyMatching returned %d for %@
Failed to save %@ to the keychain: %d
Failed to delete %@ from the keychain: %d
Failed to create an nw_interface object with interface index %d
Failed to get the interface name from %@
Invalid host specification: %@
SecRandomCopyBytes failed
Random ratio %f
Failed to get the timebase info
Current time before valid time
Current time after valid time
Certificate not valid before yr %d, mon %d, days %d, hours %d, min %d
Certificate not valid after yr %d, mon %d, days %d, hours %d, min %d
Detected true client ip address in preferences file: %{public}@
Read the header of a %u byte packet
Failed to allocate %u bytes to hold the current packet
Read part of a header (%lu bytes)
Received frame is too long (%lu)
Read an entire %u byte packet
Read part of a packet (%lu bytes)
[bytes = %lu, frames = %lu, last frame = %lu, partial frames = %lu, partial headers = %lu]
[%d] dispose ('%s') :: queue=%u
[%d] dispose ('%s')
[%d] sending ack(%d) on channel %d
[%d] sending eof on channel %d
%@ reporting captive probe result
%@ failed to perform captive probe, error: %@
%@ failed to receive expected response from the captive probe server
%@ aborting captive probe
%@ HTTP response has status code: [%ld]
%@ HTTP response has 'Location' header
%@ received HTTP redirect from the network
Got an error on the XPC connection: %s
Failed to create an XPC connection to %s
Requesting fetch configuration
Requesting set configuration
Requesting fetch edge set for %@
Requesting set edge set for %@
Requesting fetch app rule for %@:
Requesting set app rule for %@
Requesting establish trust with edge set %@
Requesting waldo refresh
got reply for waldo refresh
Reporting usage
Failed to serialize the usage report
Requesting set latitude and longitude
Requesting current state for %@
Requesting set test latency map
get privacy proxy configuration called
Requesting set proxy configuration
Failed to set the NSP configuration: configuration parameter is invalid
Failed to get XPC connection
converting privacy proxy configuration data into dictionary
override preferred proxy called
override preferred resolver called
%s called with null dict
Setting privacy proxy %@
Requesting get privacy proxy status
Requesting get privacy proxy service status
Requesting get privacy proxy service status timeline
Reporting privacy proxy service status
Reporting privacy proxy network status
Setting user tier for privacy proxy %@
Get user tier
Setting privacy proxy traffic state for traffic type %llu: %llu
Get privacy proxy traffic state
Get effective user tier
fetching privacy proxy policy data
setting privacy proxy policy
removing privacy proxy policy
merging privacy proxy policy with proxy traffic state
getting location authorization status
setting location monitor time interval
starting location monitor
stopping location monitor
Get privacy proxy info
Set Geohash sharing preference
Get Geohash sharing preference
Get Privacy Proxy account type
send RTC report
SecRandomCopyBytes failed: %s
Posting %lu bytes of data to %@
Flow %llu (%llu) received %lu bytes of HTTP response
Failed to parse RR name
Failed to parse RR type
Failed to parse RR class
Failed to parse RR TTL
Failed to parse RR length
Failed to parse RR A address
Failed to parse RR AAAA address
Failed to parse RR CNAME
Failed to parse RR NS
Failed to parse RR PTR
Failed to parse RR SOA main name
Failed to parse RR SOA responsible name
Failed to parse RR SOA serial number
Failed to parse RR SOA refresh interval
Failed to parse RR SOA retry interval
Failed to parse RR SOA expire interval
Failed to parse RR SOA minimum TTL
Failed to parse RR TXT
Failed to parse DNS packet identifier
Failed to parse DNS packet flags
Failed to parse DNS packet query count
Failed to parse DNS packet answer count
Failed to parse DNS packet authority count
Failed to parse DNS packet additional record count
Failed to parse DNS packet query %u name
Failed to parse DNS packet query %u type
Failed to parse DNS packet query %u class
Failed to allocate a query object for query %u
Failed to parse answer %u
Failed to parse authority %u
Failed to parse additional record %u
%s called with null self.configFetchURL
%s: bundle %@ class %@
[super init] failed
no saved status manager info
Failed to create a decoder for the NSP status manager info: %@
Failed to decode NSP status manager info
Saved disk version of status manager info (%ld) does not match latest supported version (%ld)
NSKeyedArchiver initialize failed
Failed to write nsp service status manager info to preference file
Saved status manager info to preference file
Failed to remove status manager info from preference file
Removed status manager info from preference file
Failed to open %@
Setting service status %@, previous service status %@
Current status %@ ignore new service status %@
Posted notification "%@"
Failed to post notification "%@": %@
%s called with null networkStatus
Wi-Fi network %@ is active
Wi-Fi network %@ is disabled
Wi-Fi network %@ is blocked
Cellular network %@ is active
Cellular network %@ is disabled
Cellular network %@ is blocked
Interface %@ (%@) is active
Interface %@ (%@) is disabled
Interface %@ (%@) is blocked
%@: Dispose called with error: %s
%@: Received a 0-byte data frame for channel %u
%@: Received a %d-byte data frame for channel %u
%@: Received a %u-byte ack for channel %u
%@: Received Hello ack with timestamp: %u
%@: Received ping response with RTT %u us, variation %u us
%@: Received geohash %@ from ping response
%@: Received exception on %u: %d (%s)
Flow %llu (%llu) sending %lu bytes of data through the tunnel
%@: DayPass session count = %u, addr = %s, age = %f
%@: DayPass session count = %u, hostid = %u, portid = %u, age = %f
%@: DayPass shared MAC %s
%@: No DayPass available, cannot establish tunnel connection
%@: Flow %llu (%llu) initial data did not entirely fit in the Hello/Request frame, %lu bytes left over
Flow %llu (%llu) Received %lu bytes from %s
Flow %llu (%llu) Received first data from %s
Flow %llu (%llu) dropping %lu bytes of data from %s
Fallback timeout %ld
Flow %llu (%llu) fallback timer fired
Flow %llu (%llu) Received ack for %lu bytes, window size is now %lu
Flow %llu (%llu) closed with fallback reason: %@
Flow %llu (%llu) setting final connection info
Flow %llu (%llu) closed from tunnel and has no direct connection, closing the flow
Flow %llu (%llu) closed from tunnel with error %d (%s)
Flow %llu (%llu) closed from direct connection and has no tunnel, closing the flow
Telemetry ratio is 0.0, not sending telemetry
Flow %llu (%llu) is falling back with no fallback reason
Failed to decode the replacement address map: %@
Failed to decode the direct endpoint: %@
Failed to encode replacement address map: %@
Failed to encode replacement endpoint: %@
Failed to write device identity info to preference file
Saved device identity info to preference file
Failed to remove device identity info from preference file
Removed device identity info from preference file
no saved device identity info
Failed to create a decoder for the device identity info: %@
Failed to decode device identity info
Saved disk version of device identity info (%ld) does not match latest supported version (%ld)
Device identity would be fetched on %@
Failed to write device identity info to file
deferring fetching device identity until %@
Failed to log %@ event
Logged %@ event
Got Test RTT %lu
Probing %@ %@
RTT probe timeout for %@
%@: Failed to write byte for RTT probe (%@), %@
%@: Discard RTT of %lu (%@), reprobe due to lost packets
%@: Got RTT of %lu (%@)
%@: Failed to read frame for RTT probe (%@), %@
%@: Probe connection connected over %@
%@: Failed to read byte for RTT probe (%@), %@
Failed to create a NSPAppRule from a dictionary: %@
Invalid %@: %@
Failed to create the XPC connection to the server
Updating existing configuration agent
Looking for existing config agent registration with configuration ID %@
Creating a new config agent configuration identifier: %@
Re-using existing network agent registration file handle
Set config agent UUID: %@
Setting up new network agent registration
Created a new config agent UUID: %@
Failed to register configuration network agent
Failed to open flow %lu: %@
Bridge %lu: failed to write to the nw_connection: %s
Bridge %lu: got EOF or error (%s) from reading from the connection
Bridge %lu: failed to write to the client: %@
Bridge %lu: got EOF or error (%@) from reading from the flow
Already have outstanding notification %@, cannot show an additional one
No outstanding notification, we are now the current notification %@
CFUserNotificationCreate failed with error %d, cancelling
Failed to post new user notification: current notification in progress
No flow ID available, failed to create a flow
Flow %llu is connecting with endpoint %s
Flow %llu has initial data or TFO is enabled, waiting for output
Flow %llu has no initial data
Flow %llu notifying input protocol of error: %s
Flow %llu notifying input protocol that input is finished
Flow %llu is now connected
Flow %llu Maximum frame count (%u) and/or maximum byte count (%u) is 0
Flow %llu no input data currently available
Available input data (%lu bytes) is smaller than minimum bytes requested (%u bytes)
Flow %llu notifying input protocol that input is finished after all pending data read
Flow %llu app read %u bytes
Failed to create an output buffer
Flow %llu discarding %u bytes
Flow %llu (%llu) received EOF from the app
%s called with null queue
%s called with null completionHandler
%s called with null networkName
Received an authentication challenge for %@, serverTrust = %p
Failed to create an array to hold policies
Creating a pinning policy with name %@, hostname %@, and leaf OID %@
Failed to create a pinning policy from name %@, hostname %@, and OID %@
Creating a server trust policy with hostname %@
Failed to create a SSL policy from hostname %@
Creating a policy to require revocation check success
Failed to create a revocation policy
Failed to set the trust policies for %@: %d
SecTrustEvaluateAsyncWithError success
Got trust result info for %@: %@
%@ TLS certificate failed extended validation
Failed to get validation results for %@ TLS certificate
Extended validation for %@ is not enabled
%@ TLS certificate failed validation with result %d
SecTrustEvaluateAsyncWithError failed with %@
Ignoring invalid %@ TLS cert
SecTrustEvaluateAsync returned an error: %d
Mach-O UUID for process PID=%d is %@
%@ UUIDs for %@ - %@
%@ failed to get UUIDs for WebSheet/CNA
%@ failed to get UUIDs for captiveagent
%@ failed to get UUIDs for configd
%@ failed to create "ANY DNS" policies
%@ failed to create "Safari DNS" policies
%@ failed to create "ANY KNOWN TRACKER" policies
%@ failed to create "Safari KNOWN TRACKER" policies
%@ failed to create "ANY UNENCRYPTED" policies
%@ failed to create "Safari UNENCRYPTED" policies
%@ failed to create "Safari All" policies
%@ failed to create "Safari HTTP" policies
%@ adding self removal policy using uuid: %@
%@ failed to create self removal policy
%@ unable to install policies for '%@' as it is not installed
%@ failed to create "SafariTechnologyPreview KNOWN TRACKER" policies
%@ failed to create "SafariTechnologyPreview UNENCRYPTED" policies
%@ failed to create "SafariTechnologyPreview All" policies
%@ failed to create "SafariTechnologyPreview HTTP" policies
%@ Safari App Bundle Mach-O UUIDs to install: %@
%@ failed to create "Safari App Bundles KNOWN TRACKER" policies
%@ failed to create "Safari App Bundles UNENCRYPTED" policies
%@ failed to create "Safari App Bundles All" policies
%@ failed to create "Safari App Bundles HTTP" policies
%@ adding probe policy using uuid: %@
%@ failed to create probe policy
    %s
%@: Tuscany connection is now connected
%@: Usage timer fired
%@: Tuscany connection is now disconnected
%@: Tunnel connection disconnected with error: %d (%s)
%@: Reading between %lu and %lu bytes from the tunnel connection
%@: Failed to handle data read from the tunnel connection
%@: Received EOF on the tunnel connection
%@: Got an error while writing to the tunnel connection: %d (%s)
%@: writeInitialData called but no initial data is available
%@: Opening Tuscany connection to %s, TFO enabled = %d MPTCP enabled = %d, No TFO cookie = %d, No Delay = %d
%@: Connection timer fired
%@: Cancelling the Tuscany connection
%@: No UDP endpoint available, not racing UDP
%@: Racing UDP to %s
%@: Got an error on the UDP session: %d:%d
%@: Got an error while writing the UDP datagram: %s
%@: Reporting usage with fallback reason: %@
%@: sendData (size %lu): first request
%@: Received ping RTT of %lu
%@: NSPFlowDivertProvider: starting with options %@
%@: NSPFlowDivertProvider: stopping with reason %ld
Failed to create flow properties from the connection metadata
Got connection info for flow %lu
Failed to get connection info for flow %lu
%s called with null urlRequest
%s called with null tokenActivationQuery
Fetched device identity certificate successfully
failed to fetch leaf certificate data
failed to fetch intermediate certificate data
failed to sign data with error %@
Failed to fetch device identity certificate
Device does not support BAA
Authentication fallback
Failed to register the np_tunnel protocol
Failed to register parameter modifier function
%@: Ran out of flow identifiers
Flow %llu (%llu) added to tunnel %@
%@: No more flows, setting the idle timer to fire in %@ seconds
%@: Idle timer fired, cancelling the tunnel
%@: No more flows, cancelling the tunnel
Flow %llu removed from tunnel %@
%@: TTFB: %f TTFR: %f ConnectionDelay: %f
%@: Cannot start the connection, no output handler available
%@: write called while not connected
%@: Failed to set data in frame
%@: Failed to claim %u bytes
%@: Did not write any bytes to a frame
%@: Failed to use %u frames
%@: read called after the connection was torn down
%@: Tearing down output handler
No tunnel found for protocol %s
%@: Ignoring extra disconnected callback
Existing tunnel state is %ld, isCancelled = %d
Endpoint (%p) or parameters (%p) is nil, cannot modify parameters
Flow %llu is disconnecting
Flow %llu creating input frames
Flow %llu creating output frames for %u bytes
%@: Re-using existing key network agent registration file handle for %@
%@: Failed to dup the key network agent registration file descriptor: %s
%@: Setting up new key network agent registration for %@
%@: Registered key agent with UUID %@
%@: Failed to register key agent with UUID %@
%@: Un-registering key agent with UUID %@
%@: Got session counter %llu for day pass %@ from the kernel
%@: Got session counter 0 for day pass %@ from the kernel
No info in key
Failed to get the day pass length from the key info
Failed to get the day pass bytes from the key info
Failed to get the max frame size from the key info
Failed to get the tfostatus from the key info
Failed to get the creation date from the key info
Failed to get the hard expiry from the key info
No endpoint data in key
Failed to create a tuscany endpoint from endpoint data from key
%@: Using session counter %u
Setting SNI to %@
Setting stream properties to %@
%@: Failed to get a hostname from the day pass endpoint %@
%@: No need to unsynthesize addresses, no IPv6 address
%@: Cannot unsynthesize addresses, no path
%@: No need to unsynthesize addresses, no prefixes
%@: Unsynthesized %@ to %@
%@: Unsynthesized result %@
%@: resolving %@
Resolved %@ to %@
Cannot link with onramps because the onramp endpoint is not a list of addresses
%@: Invalid expiry minutes: %@
%@: Invalid expiry: %@
%@: Edge specification is not a dictionary
%@: Label is not a string
%@: Probe hosts is not an array
%@: Edge onramp list is not a non-empty array
%@: Probe endpoint (%@) and onRampEndpoint (%@) types do not match
%@: Probe endpoint (%@) is a hostname and does not match the onramp endpoint (%@)
%@: Probe endpoint (%@) does not equal onramp endpoint (%@)
%@: Missing edge latitude / longtitude: %@
%@: Invalid edge latitude %@, longtitude %@
host is not a string
Failed to create an endpoint from string: %@
A hostname endpoint was specified and it is not the only endpoint
Re-resolving edge hostnames
%@: Creating a new keybag agent
%@: Updating existing keybag agent with UUID %@
%@: Looking for keybag agent registration with configuration ID %@
%@: Re-using existing keybag network agent registration file handle
%@: Failed to dup the keybag network agent registration file descriptor: %s
%@: Re-set UUID for keybag agent: %@
%@: Failed to set the registered network agent for %@
%@: Setting current keybag to keybag obtained from the kernel
%@: New keybag does not have any keys, re-pushing current keybag with TFO disabled and updated generation
%@: Pushing %u [%@] [%u session counter]
Failed to update the keybag network agent
%@: Setting up new keybag network agent registration
%@: Created new UUID for keybag agent: %@
%@: Failed to register keybag network agent
%@: Failed to create a decoder: %@
%@: Failed to decode from the keychain
%@: Loaded Waldo from keychain
%@: No Waldo info in the keychain
%@: Saving Waldo info to keychain: %@
%@: Failed to resolve while establishing trust
%@: Day Pass refresh failed
Failed to create a keybag
%@: Stored network signature count (%lu) exceeded max (%d), aging %ld network signature
%@: Aging out network signature %@ (%@)
%@: Failed to check latency completeness, no signature
%@: No latencies for network %@
%@: %@ latencies for network %@
%@: Usage report keybag generation (%u) != current keybag generation (%u), ignoring report
%@: Latency information incomplete for the current network, re-probing
%@: Invalidating day pass %@
%@: Change in observed RTT, %s%s
%@: client reports that TFO failed, marking TFO as failed for current latency map where address family = %d
%@: usage update contains fallback reason %ld (%@), un-resolving edges
%@: resolution failed while handling a usage update
%@: Location condition changed, re-evaluate view
%@: Not re-probing, check for day pass refresh
%@: One or more day passes has expired, refreshing
%@: Pushing keybag to the kernel
%@: Waldo info setting current network characteristics to %@
%@: Cancelling probe
Edge selection initialize, no current network characteristics
Edge selection initialize failed for %@ (%@)
Edge selection update, no current network characteristics
Edge selection update, no edge selection
%@: Latency derivation is disabled, not probing
%@: No current network characteristics, not probing
%@: No network signature available, cannot probe
%@: No network info available for the current network signature, cannot probe
%@: Skipping re-probing of edges because the re-probe date (%@) has not passed
%@: Re-probe date (%@) has passed, re-probing edges
%@: Skip RTT reprocess, no usable network path
%@: Network signature has changed since probing was initiated, not probing
%@: no probe endpoints to probe
%@: probing latency list starting at %luth sample: %@
Found complete latency for %@ <%@, sample size %lu>
Found incomplete latency for %@ <%@, sample size %lu>
Latency not found for %@ %@
%@: skipping edge %lu because it has a un-resolved probe endpoint %@
%@: Reprocessing has been aborted
%@: Reprocessing due to reprocess sampling timer
%@: Failed to measure RTT
%@: Skip re-processing latency to %@ with current connection observed RTT %lu
%@: Skip re-processing latency because the latency factors are invalid (A = %f, B = %f, X = %f)
%@: Re-processing latency to %@ with current connection observed RTT %lu (avg RTT %lu)
%@: Skip re-processing latency due to insufficient observed RTT samples
%@: Checking to see if new minimum latency to %@ (%lu) is less than its current latency (%lu) divided by %f
%@: Edge %@ observed RTT has passed reprobe threshold
%@: Re-measuring latency due to all top edge observed RTTs exceeded threshold
%@: Checking to see if new minimum latency to %@ (%lu) is greater than %f times the latency to %@ (rtt %lu) (index %lu)
%@: Checking to see if new minimum latency to %@ (%lu) is less than the latency to %@ (rtt %lu) divided by %f (index %lu)
%@: Re-sorting edge latencies and rebuilding the latency map for the current network signature
%@: Skip Measuring RTT to edge %@ (current latency %@) at %luth round
%@: Measuring RTT to edge %@ (current latency %@) at %luth round
%@: RTT probe to %@ was aborted
%@: Current RTT average is %lu for edge %@, (RTT samples: %@)
%@: No network signature available
%@: No network characteristics available
%@: probing completed for %@ but latency map is empty, un-resolving edges
%@: Merged current edge list: 
%@: No edges available, not fetching day passes
%@: No latency map available, not fetching day passes
%@: No valid day passes after a day pass refresh
%@: Using best edge %ld
%@: Failed to fetch a Day Pass for edge %ld: edge is nil
%@: Failed to fetch a Day Pass for edge %ld: latency is nil
%@: Current day pass for edge %ld %@ has not soft expired, sticking with the current onramp
%@: Failed to fetch a Day Pass for Edge: %ld %@, next onramp is nil
%@: Skip, pending for previous day pass response for edge %ld %@ %@
%@: Skipping Day Pass fetch for %@ because the retry date has not passed
%@: Fetching a new Day Pass for Edge: %ld %@, (onRamp: %ld %@)
%@: Current Network Signature %@
%@: Latency results for network signature %@:
%@: Removing stale key %@
%@: While cleaning up stale keys, failed to register key agent with UUID %@
%@: While cleaning up stale keys, failed to dup the agent registration file descriptor for agent with UUID %@
%@: Sending onRamp with %@ %@ <TFOStatus: %@> to the kernel
%@: Skipping onRamp with %@ <TFOStatus: %@> because it does not have a Tuscany endpoint with address family %@
%@: Sending day pass UUID %@, counter %u to the kernel
Overriding TFO status to %ld
%@: %s:
%@:   %u. [%@] [%lu info bytes] [%u session counter]
%@:  Current index: %u
%@:  Fallback Reason: %ld
%@:  Generation: %u
%@:  TFO status override: %ld
%@ NSPFlowDivert is already started, ignoring start request
%@: NSPFlowDivert starting with options: %@
%@ Creating a new flow divert control socket
%@: NSPFlowDivert: Failed to create a flow divert control socket
Creating a new policy session
%@: NSPFlowDivert: Adding policy: %@
%@: flow divert provider failed to start with error: %@
%@: flow divert provider started successfully
%@: NSPFlowDivert: resetPolicies failed
%@: didFailWithError called with: %@
reset token fetch timer
Dealloc: 
Proxy Token Info : %@:%@
%s called with null delegate
%s called with null proxyInfo
%s called with null path
self.tokenCount < tokenInfo.tokens.count for %@
Cleaned up %lu expired tokens for %@
Proxy %@, hit low water mark
%s called with null (tokens.count > 0)
Cache %lu tokens for proxy %@, expiration %@
adding %lu tokens to token agent[%@]
Retry fetching tokens for %@[%@] on network change
Failed to fetch tokens for %@[%@] after %u attempts
Retry: fetching token for %@[%@] after %lu seconds
Token fetch retry timer fired
%s called with null self.proxyInfo
token fetch request for %@[%@] is already pending
token fetch request for %@[%@] has a pending timer
deferring token fetch for %@[%@], path is not satisfied
ignoring token fetch for %@[%@], token count %lu
Fetch tokens for %@[%@] on %@
Token fetch successful for %@[%@]
Token fetch failed for %@[%@] with too many requests
Token fetch failed for %@[%@] with %lu
Received switch proxy from server for %@[%@]
Failed to convert from PID (%d) to process name
Received error (%d) from %s for %@ agent
archivedDataWithRootObject for token info list failed with error: %@
Saving proxy tokens for %@ in the keychain
unarchivedObjectOfClass for token info list failed with error: %@
Received %lu tokens from keychain for %@
Removing proxy tokens for %@ from keychain
%s called with null ingressProxy
%s called with null egressProxy
%s called with null proxyTokenInfo
%s called with null self.ingressProxy
%s called with null self.egressProxy
proxy path: network signature changed
Received error (%d) from %s for %@ agent on interface %@
ignore error, network signature does not match
%s called with null self.singleHopRegistration
%s called with null self.multiHopRegistration
unknown link quality value %d
Dealloc %@ prober
Probe[%@] failed %u attempts
Retry Probe[%@] after %lu seconds
Probe retry timer fired
previous probe[%@] is already pending
deferring probe[%@], path is not satisfied
[%@] send probe[%lu] over %@ with link quality %@
Probe[%@] failed with error %@
Probe[%@] failed to receive expected response
Probe[%@] received response %ld
Reset probe[%@] timer
Retry probing[%@] on network change
%s called with null proxy1
%s called with null proxy2
%s called with null proxy1.proxyURL
%s called with null proxy2.proxyURL
%s called with null proxy1.proxyKeyInfos
%s called with null proxy2.proxyKeyInfos
%s called with null proxy1.tokenKeyInfo
%s called with null proxy2.tokenKeyInfo
%s called with null proxyInfoArray
%s called with null matchIngressProxy
%s called with null matchEgressProxy
%s called with null (proxyPath.proxiesCount == MAX_PROXIES_ON_PATH)
%s called with null matchProxy
Dealloc: 
Proxy Agent Manager: %@
Detected proxy path restore interval in preferences file: %{public}@
Detected preferred proxy in preferences file: %{public}@
Failed to create a decoder for the NSP proxy agent manager: %@
Failed to decode the NSP proxy token info from the keychain
proxy agent: network signature changed
Removing proxy info keychain
Token issuance limit timer fired
%s called with null (proxyTokenInfo.proxyInfo.proxyHop == NSPPrivacyProxyProxyInfo_ProxyHop_EGRESS_ONLY)
remove %@ from proxy path enumerator
%s called with null ingressProxyURL
%s called with null egressProxyURL
Proxy path enumerator restore timer fired
%s called with null self.candidateQuicProxyPath
%s called with null ingressProxyInfo
%s called with null egressProxyInfo
%s called with null ingressProxyTokenInfo
%s called with null egressProxyTokenInfo
Setting candidate proxy path (%@[%@]-%@[%@])
Setting quic proxy path (%@[%@]-%@[%@])
Token for Quic[%@] fetch %@
%s called with null self.candidateFallbackProxyPath
no available fallback proxy path
%s called with null ingressFallbackProxyInfo
%s called with null egressFallbackProxyInfo
%s called with null ingressFallbackProxyTokenInfo
%s called with null egressFallbackProxyTokenInfo
Setting candidate fallback proxy path (%@[%@]-%@[%@])
Setting fallback proxy path (%@[%@]-%@[%@])
Token for Fallback[%@] fetched %@
%s called with null (proxyInfoArray.count > 0)
%s called with null proxyPathList
deferring setting up of proxy agent until %@
Quic proxy path (%@-%@) is not valid
Fallback proxy path (%@-%@) is not valid
Candidate Quic proxy path (%@-%@) is not valid
Candidate Fallback proxy path (%@-%@) is not valid
%@: token cache low water mark hit
Token for %@ fetched %@
%@: tokens added
Setting quic proxy path (%@-%@)
Setting fallback proxy path (%@-%@)
%@: tokens fetch outage
ignoring token fetch outage, path status %ld last path unsatisfied date %@, last interface change date %@
%@: switch proxy
%@: token info invalid
%@: token rate limited for %f
Received RTC report request for type: %ld, errorcode: %d
failed to create RTC report payload for type [%ld], error code [%d]
failed to send RTC report type: %ld error: %@
sent RTC report %@
quic proxy path, multi hop agent registered
fallback proxy path, multi hop agent registered
quic proxy path, single hop agent registered
fallback proxy path, single hop agent registered
quic proxy path, multihop agent unregistered
fallback proxy path, multihop agent unregistered
quic proxy path, single hop agent unregistered
fallback proxy path, single hop agent unregistered
ignoring connection timeout error, path status %ld link quality %@ reporting interface %@ primary interface %@ last path unsatisfied date %@, last interface change date %@
ignoring connection error, path status %ld link quality %@ reporting interface %@ primary interface %@ last path unsatisfied date %@, last interface change date %@
ignoring connection refused error, path status %ld reporting interface %@ primary interface %@ last path unsatisfied date %@, last interface change date %@
ignoring DNS timeout error, path status %ld link quality %@ reporting interface %@ primary interface %@ last path unsatisfied date %@, last interface change date %@
ignoring dns blocked error, path status %ld reporting interface %@ primary interface %@ last path unsatisfied date %@, last interface change date %@
Quic proxy multihop path is reporting egress proxy error
Fallback proxy multihop path is reporting error
Proxy path probe successful
Direct path probe successful %lu times
Updating userevent agent data
remove userevent agent data
archivedDataWithRootObject failed with error: %@
Failed to write configured proxies to preference file
Saved proxy agent information to preference file
no saved proxy agent data
saved version %lu does not match current version %u
Failed to remove proxy agent data from preference file
Removed proxy agent info from preference file
Failed to write nsp signature info to preference file
Saved signature info to preference file
Failed to remove signature info from preference file
Removed signature info to preference file
no saved signature info
Failed to create a decoder for the NSP signature info: %@
Failed to decode NSP signature info
Failed to read a rule dictionary from %@: %@
Failed to open an input stream for %@: %@
Failed to create a stream for %@
Failed to read the contents of %@: %@
Failed to create a decoder for the NSP configuration: %@
Failed to decode the NSP configuration from the keychain
Saved disk version of configuration (%ld) does not match latest supported version (%ld)
No Waldo info in the keychain
Failed to update the network agent for %@
First launch after boot, incrementing session counters
%s called with null configuration
Configuration version %u not supported
Configuration has bad authentication type: %@
Bad authentication url format %@
Invalid policy tier count %lu
bad policy tier type %@
configuration should contain policies for both tiers
bad configuration need atleast two proxies
proxy hop at %lu has invalid hop type %@
Bad proxy url format %@
Proxy %@ needs proxy keys
proxy key info for index %lu is nil for proxy %@
token issuance key is nil for proxy %@
configuratio should contain both ingress and egress proxy
configuration should contain atleast one proxy path weight
Bad proxy count for path weight at index %lu
Bad proxy index %u at path weight index %lu
first proxy index in path weight should be ingress only
second proxy index in path weight should be egress only
Bad path weight at index %lu
Bad fallback proxy count for path weight at index %lu
Bad fallback proxy index %u at path weight index %lu
first fallback proxy index in path weight should be ingress only
ingress fallback proxy does not have fallback capability for index %u at path weight index %lu
second fallback proxy index in path weight should be egress only
egress fallback proxy does not have fallback capability for index %u at path weight index %lu
Bad resolver url format %@
%s called with null signatureInfo
%s called with null publicKey
%s called with null signedData
validate signature, bad signature algorithm: %lu
SecCertificateCreateWithData failed
Certificate Properties:
Certificate did not fall within valid dates
No valid certificates to verify signed configuration
SecPolicyCreateApplePinned failed for %@ host
SecTrustCreateWithCertificates failed
Validated configuration %@
Ignoring Certificate validation for Signed configuration
Configuration Signature validated
Configuration Signature failed validation
Failed to write nsp configuration to preference file
Saved configuration to preference file
no saved configuration
Failed to decode the NSP configuration
Failed to create a decoder for the network status %@
Failed to create a decoder for the service status %@
Failed to advance by %lu bytes from offset %lu
Failed to follow pointer %u bytes from offset %lu
Failed to parse 2nd label length byte at offset %lu
Failed to parse %u label bytes at offset %lu
Failed to parse 1st label length byte at offset %lu
Failed to create a decoder for the proxy info %@
Failed to post telemetry data
Failed to create telemetry JSON: %@
Waiting for %u tunnels to close
No open tunnels, not waiting
All agents matched, not updating from new agents
Got config agent with UUID %@
Got keybag agent with UUID %@
Setting up local flow divert for %@
NSP flow divert stopped (%@)
Failed to find a matching app rule
Created new flow %u
Failed to create a new flow
No flow properties available, failed to create a new flow
Added tunnel %@ using key %@
Removed tunnel %@
Tunnel count is now %u
All tunnels closed, calling cancellation handler
Tunnel %@ is ready
Flow %llu fell back with reason: %@
Failed to create a NWHostEndpoint from address %@ port %@
Failed to create a NPTunnelTuscanyEndpoint from endpoints
Failed to get the port string from the endpoint
Replaced endpoint %s with endpoints %@
Failed to create a nw_protocol_transform
NSP setting up flow %u
Setting up loopback transform
Fallback limit (%lu) exceeded, falling back
Flow %u no usable Day Pass available, falling back
Flow %u using service ID %llu
Sending usage data
The new NSP configuration does not differ from the current configuration, not updating the configuration
NSP is currently disabled and the new app rule does not enable it, not updating the configuration
Using test latency map data for locally: %@
%@ fetch day pass from network
Cleared test latency map
didStartWithError called with: %@
didFailWithError with error: %@
%s called with null _tokenAgent
%s called with null _tokenAgentRegistration
%s called with null token
Token low water mark hit for %@ agent
%s called with null self.tokenAgentRegistration
%s called with null self.tokenAgent
Updated %@ token agent (%@)
Registered %@ token agent (%@)
Un-registering token agent with UUID %@
%s called with null tokenFetchURL
%s called with null (authenticationType != NSPPrivacyProxyAuthenticationInfo_AuthenticationType_UNKNOWN)
updating token fetch url %@ authentication type %@
invalid authentication type %d
Dealloc: %@
%s called with null (tokenCount > 0)
generate tokens: SecRandomCopyBytes failed
%s called with null tokenBlinder
tokenWaitingActivationWithContent failed with error %@
%s called with null waitingActivation
activateTokenWithServerResponse failed with error %@
%s called with null tokenIssuancePublicKey
RSABSSATokenBlinder initWithPublicKey failed with error %@ for %@
%s called with null (tokenWaitingActivationList.count > 0)
generated %lu unactivated tokens for %@
activated %lu tokens for %@
%@ add authentication information to request failed
%s called with null request
Sending request for %@
Received error %@ for %@
Received HTTP response code %ld for %@ with request UUID %@
EdgeSelection
NSSecureCoding
NSCoding
NPUsageReport
NPTunnelFlowUDP
NSPPrivacyProxySignedConfiguration
NSCopying
NPTuscanyLoopbackConnection
NPTunnelTuscanyLoopback
NSPPrivacyProxyConfiguration
NSPPrivacyProxyConfigAgent
NWNetworkAgent
NSPPrivacyProxyTokenAgent
NPTunnelFlowDNS
NPEdgeSelection
NPResolver
NPDirectFlow
NSPPrivacyProxyPolicyTierMap
NPTunnelTuscanyEndpoint
NSPPrivacyProxyNetworkRegistration
NSPPrivacyProxyConfigAgentDelegate
NSObject
NSPPrivacyProxyMultiHopNetworkRegistration
NSPPrivacyProxySingleHopNetworkRegistration
NSPPrivacyProxyMultiHopFallbackNetworkRegistration
NSPPrivacyProxySingleHopFallbackNetworkRegistration
NPUtilities
NSPPrivacyProxyPolicy
NSPCaptiveWiFiHandler
NSURLSessionTaskDelegate
NSURLSessionDelegate
PlatformSpecific
NSPServerClient
NSPServerCommands
NPTunnelFlowHTTP
NSPDNSResourceRecord
NSPDNSQuery
NSPDNSPacket
NSPProxyAnalytics
NSPConfigurationFetchAnalytics
NSPTokenFetchAnalytics
NSPConfigurationStats
NSPServiceStatusStats
NSPNetworkStatusStats
NSPDeviceIdentityStats
NSPProxyAgentStats
PrivacyProxyNetworkStatusTime
NSPServiceStatusManager
NSPPrivacyProxyResolverInfo
NPTunnelFlow
NPFlowProperties
NSPDeviceIdentityCertificate
NSPPrivacyProxyBAAValidation
NSPNetworkAgent
NSPKeyNetworkAgent
NPDiagnosticReport
NPAverage
NPEdgeLatency
NSPAppRule
NSPPrivacyProxyProxyPathWeight
NSPConnectionInfo
NPAppProxyFlowBridge
NSPUserNotification
NPTunnelFlowProtocol
PrivacyProxyClient
NSPPrivacyProxyPolicySerialization
NPTunnelTuscany
NSPFlowDivertProvider
NSPControlConnection
NSPPrivacyProxyTokenInfo
NSPAnisette
NSPAuthentication
NSPBAA
NSPBAA_Anisette
NSPPrivacyProxyTokenActivationQuery
NSPPrivacyProxyTokenActivationResponse
NSPPrivacyProxyProxyInfo
NPTunnel
NPLocation
NPTuscanyOnRamp
NPNetworkInfo
NPTuscanyEdge
NPWaldo
NPKey
NPKeyBag
NSPFlowDivert
NSPTLV
NSPToken
NSPProxyTokenInfo
NSPPrivacyProxyTokenRegistrationDelegate
NSPProxyAgentNetworkStatistics
NSPProxyPath
NSPPrivacyProxyNetworkRegistrationDelegate
NSPQuicProxyPath
NSPFallbackProxyPath
NSPCandidateProxyPath
NSPCandidateQuicProxyPath
NSPCandidateFallbackProxyPath
NSPProber
NSPPrivacyProxyAgentManager
NSPProxyTokenDelegate
NSPProxyPathDelegate
NSPProberDelegate
NSPConfigurationSignatureInfo
NSPConfiguration
PrivacyProxyNetworkStatus
PrivacyProxyServiceStatus
PrivacyProxyServiceStatusTime
NSPByteParser
PrivacyProxyInfo
NPTunnelFlowTelemetry
NSPManager
NPTunnelDelegate
NEAppProxyProviderContainerDelegate
NSPPrivacyProxyAuthenticationInfo
NSPPrivacyProxyTokenRegistration
NSPPrivacyProxyTokenAgentDelegate
NSPPrivacyTokenManager
alpha
windowSize
trialCount
networkSignature
interfaceType
edgeAttributesDict
appendFormat:
init
objectForKeyedSubscript:
doubleValue
integerValue
dictionary
decodeObjectOfClass:forKey:
decodeDoubleForKey:
decodeIntegerForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
unsignedIntegerValue
errorWithDomain:code:userInfo:
array
boolValue
intValue
_stochasticRewardFromRTT:
count
removeObjectAtIndex:
numberWithDouble:
addObject:
valueForKeyPath:
numberWithInteger:
numberWithUnsignedInteger:
date
dictionaryWithObjectsAndKeys:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
lastObject
setTrialCount:
null
dictionaryWithObjects:forKeys:count:
isEqualToString:
setObject:forKeyedSubscript:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
description
initWithNetworkSignature:interfaceType:modelParams:
trainEdgeSelectionModel:reply:
getMinimumLatencyEdge:
getAttributesForEdge:reply:
setNetworkSignature:
setInterfaceType:
setAlpha:
setWindowSize:
setEdgeAttributesDict:
.cxx_destruct
_networkSignature
_interfaceType
_trialCount
_alpha
_windowSize
_edgeAttributesDict
T@"NSMutableDictionary",&,N,V_edgeAttributesDict
T@"NSData",&,N,V_networkSignature
T@"NSNumber",&,N,V_interfaceType
Tq,N,V_trialCount
Td,N,V_alpha
Tq,N,V_windowSize
decodeIntForKey:
decodeInt32ForKey:
encodeInt:forKey:
encodeInt32:forKey:
initWithSigningIdentifier:fallbackReason:
signingIdentifier
fallbackReason
dayPassUUID
setDayPassUUID:
setRtt:
geohash
setGeohash:
addressFamily
setAddressFamily:
edgeIndex
setEdgeIndex:
keybagGeneration
setKeybagGeneration:
waldoTimestamp
setWaldoTimestamp:
_addressFamily
_edgeIndex
_keybagGeneration
_waldoTimestamp
_signingIdentifier
_fallbackReason
_dayPassUUID
_rtt
_geohash
T@"NSString",R,N,V_signingIdentifier
Tq,R,N,V_fallbackReason
T@"NSUUID",&,N,V_dayPassUUID
TQ,N,V_rtt
T@"NSString",&,N,V_geohash
TC,N,V_addressFamily
TI,N,V_edgeIndex
TI,N,V_keybagGeneration
TI,N,V_waldoTimestamp
sharedManager
currentNetworkHasProxies
isEnabled
initializeProtocol
initWithTLVData:
copyTLVData
_TCPConnectionMetadata
setServiceID:
serviceID
timestamps
setTimestamps:
set_TCPConnectionMetadata:
setFallbackTimeout:
setCurrentLatitude:longitude:timestamp:forClient:
mutableCopy
stringWithUTF8String:
removeObjectForKey:
initFromDictionary:
matchSigningIdentifier
initWithIdentifier:timestamp:fromDictionary:source:
setEnabled:
requireTFO
setRequireTFO:
setEnableNSP:
_preconnect
originalRequest
setRequestData:
UTF8String
initWithBytesNoCopy:length:freeWhenDone:
bytes
length
initWithHosts:
hosts
setReplacementEndpoint:
countByEnumeratingWithState:objects:count:
setReplacementAddressMap:
isEqual:
objectForKey:
initWithCallbackQueue:
initWithCString:encoding:
start
_CFURLRequest
allHTTPHeaderFields
host
objectAtIndexedSubscript:
replaceOccurrencesOfString:withString:options:range:
lowercaseString
initWithTunnel:appRule:inputProtocol:extraProperties:
directEndpoint
state
firstTxByteTimestamp
setFirstPacketDate:
handleAppData:
sendDataOnDirectSession:
isDirectConnectionViable
remoteEndpoint
hashKey
identifier
initWithEndpoint:parameters:
setDirectSession:
directSession
addObserver:forKeyPath:options:context:
setIsDirectConnectionViable:
cancel
setSavedDirectData:
tunnel
parameters
sendDataToClient:fromTunnel:
code
closeFromDirectConnectionWithError:
handleIncomingData:andError:
setReadHandler:maxDatagrams:
readDataFromClient
writeDatagram:completionHandler:
enableDirectRace
fallbackDisabled
savedDirectData
initWithObjects:
savedDataSize
appRule
fallbackBufferLimit
setSavedDataSize:
setFallbackDisabled:
startHandlingIncomingData
removeObserver:forKeyPath:context:
observeValueForKeyPath:ofObject:change:context:
startDirectConnection
stopDirectConnection
firstPacketDate
_savedDirectData
_savedDataSize
_directSession
_firstPacketDate
_remoteEndpoint
T@"NSMutableArray",&,V_savedDirectData
TQ,V_savedDataSize
T@"NWUDPSession",&,V_directSession
T@"NSDate",&,V_firstPacketDate
T@"NWEndpoint",R,V_remoteEndpoint
removeAllObjects
objectAtIndex:
dictionaryRepresentation
stringWithFormat:
setConfiguration:
setSignature:
certificatesCount
clearCertificates
certificatesAtIndex:
addCertificates:
allocWithZone:
copyWithZone:
isMemberOfClass:
mergeFrom:
certificatesType
algorithm
setAlgorithm:
setHasAlgorithm:
hasAlgorithm
algorithmAsString:
StringAsAlgorithm:
copyTo:
configuration
signature
certificates
setCertificates:
_algorithm
_certificates
_configuration
_signature
_has
T@"NSPPrivacyProxyConfiguration",&,N,V_configuration
T@"NSData",&,N,V_signature
T@"NSMutableArray",&,N,V_certificates
TB,N
Ti,N,V_algorithm
dealloc
currentBlobSizeIndex
setCurrentBlobSizeIndex:
protocol
waitingForOutput
setWaitingForOutput:
handleDetachedFromProtocol
addOutputFramesToArray:maximumBytes:minimumBytes:maximumFrameCount:
addInputFramesToArray:maximumBytes:minimumBytes:maximumFrameCount:
handleOutputFrame:
notifyInputHandler
_blobSizes
_protocol
_currentInputFrames
_waitingForOutput
_currentBlobSizeIndex
T^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v},R
TQ,V_currentBlobSizeIndex
TB,V_waitingForOutput
initWithEndpoint:parameters:appRule:flowProperties:onRamp:delegate:
initialWindowSize
window
setClientRef:
setFlow:
addNewFlow:
removeFlow:
maxFrameSize
clientRef
flow
write:
connectionState
setConnectionState:
destroyConnection
createTuscanyClient
dayPassSessionCounter
currentMTU
selectBestEdge
startConnectionTimer
cancelConnectionTimer
cancelConnection
sendUsageReportWithRTT:geohash:fallbackReason:
pingWithCompletionHandler:
setWindow:
_window
_flow
T^v,V_window
T@"NPTunnelFlow",&,V_flow
numberWithUnsignedInt:
numberWithBool:
numberWithUnsignedLongLong:
initWithCapacity:
setAuthInfo:
policyTierMapsCount
clearPolicyTierMaps
policyTierMapAtIndex:
addPolicyTierMap:
proxiesCount
clearProxies
proxiesAtIndex:
addProxies:
pathWeightsCount
clearPathWeights
pathWeightsAtIndex:
addPathWeights:
resolversCount
clearResolvers
resolversAtIndex:
addResolvers:
fallbackPathWeightsCount
clearFallbackPathWeights
fallbackPathWeightsAtIndex:
addFallbackPathWeights:
setRegionId:
policyTierMapType
proxiesType
pathWeightsType
resolversType
fallbackPathWeightsType
setHasEnabled:
hasEnabled
setDisableUntil:
setHasDisableUntil:
hasDisableUntil
hasRegionId
data
version
setVersion:
enabled
disableUntil
authInfo
policyTierMaps
setPolicyTierMaps:
proxies
setProxies:
pathWeights
setPathWeights:
resolvers
setResolvers:
maxTokenNum
setMaxTokenNum:
fallbackPathWeights
setFallbackPathWeights:
regionId
_disableUntil
_authInfo
_fallbackPathWeights
_maxTokenNum
_pathWeights
_policyTierMaps
_proxies
_regionId
_resolvers
_version
_enabled
TI,N,V_version
TB,N,V_enabled
TQ,N,V_disableUntil
T@"NSPPrivacyProxyAuthenticationInfo",&,N,V_authInfo
T@"NSMutableArray",&,N,V_policyTierMaps
T@"NSMutableArray",&,N,V_proxies
T@"NSMutableArray",&,N,V_pathWeights
T@"NSMutableArray",&,N,V_resolvers
TI,N,V_maxTokenNum
T@"NSMutableArray",&,N,V_fallbackPathWeights
TB,R,N
T@"NSString",&,N,V_regionId
setActive:
setKernelActivated:
setUserActivated:
setVoluntary:
setAgentUUID:
setAgentDescription:
proxyConfiguration
setProxyConfiguration:
delegate
reportErrorForAgent:error:withOptions:
agentDomain
agentType
agentFromData:
copyAgentData
agentDescription
agentUUID
isActive
isKernelActivated
isUserActivated
isVoluntary
startAgentWithOptions:
assertAgentWithOptions:
unassertAgentWithOptions:
reportError:withOptions:
tokenLowWaterMarkReached
requestNexusWithOptions:
closeNexusWithOptions:
isSpecificUseOnly
setSpecificUseOnly:
isNetworkProvider
setNetworkProvider:
isNexusProvider
setNexusProvider:
supportsListenRequests
setSupportsListenRequests:
supportsBrowseRequests
setSupportsBrowseRequests:
supportsResolveRequests
setSupportsResolveRequests:
requiresAssert
setRequiresAssert:
updateClientsImmediately
setUpdateClientsImmediately:
T@"NSString",C,N
T@"NSUUID",C,N
active
TB,N,GisActive
kernelActivated
TB,N,GisKernelActivated
userActivated
TB,N,GisUserActivated
voluntary
TB,N,GisVoluntary
specificUseOnly
TB,N,GisSpecificUseOnly
networkProvider
TB,N,GisNetworkProvider
nexusProvider
TB,N,GisNexusProvider
initWithDelegate:uuid:agentDesc:
setDelegate:
_proxyConfiguration
_delegate
T@"NSObject<NSPPrivacyProxyConfigAgentDelegate>",W,V_delegate
T@"NSObject<OS_nw_proxy_config>",&,V_proxyConfiguration
T@"NSString",C,N,VagentDescription
T@"NSUUID",C,N,VagentUUID
TB,N,GisActive,Vactive
TB,N,GisKernelActivated,VkernelActivated
TB,N,GisUserActivated,VuserActivated
TB,N,GisVoluntary,Vvoluntary
tokenLowWaterMarkReachedForAgent:
T@"NSObject<NSPPrivacyProxyTokenAgentDelegate>",W,V_delegate
shouldSendDataToClient:fromTunnel:
tunnelResult
initFromData:
setTunnelDNSResponse:
tunnelDNSResponse
setTunnelResult:
query
tunnelResponseTimer
setTunnelResponseTimer:
directResult
setDirectDNSResponse:
directDNSResponse
setDirectResult:
checkAndReportTelemetry
closeFromTunnel
hasFlow:
closeFlow:
handleTunnelCanHandleMoreData
telemetryReported
telemetryRatio
setTelemetryReported:
isConnectionAlive
rollDiceWithSuccessRatio:
addDNSInfoToTelemetry:
reportTelemetry:withService:url:
createTelemetryDataWithCompletionHandler:
resultToString:
responseCodeString
answers
copyStateDictionary
timestamp
timeIntervalSinceDate:
initWithDouble:
queries
createStateDictionaryWithResult:response:
setQuery:
handleTunnelConnected
cleanupLosingConnection:
_telemetryReported
_query
_tunnelResult
_tunnelDNSResponse
_directResult
_directDNSResponse
_tunnelResponseTimer
T@"NSPDNSPacket",&,V_query
Tq,V_tunnelResult
T@"NSPDNSPacket",&,V_tunnelDNSResponse
Tq,V_directResult
T@"NSPDNSPacket",&,V_directDNSResponse
T^v,V_tunnelResponseTimer
TB,V_telemetryReported
bestEdge
bestEdgeRTT
bestEdgeProbedRTT
nextBestEdge
nextBestEdgeRTT
edgeSelectionAlpha
edgeSelectionWindowSize
trainEdgeSelection:edgeRank:rtt:
setNextBestEdge:
setNextBestEdgeRTT:
waldoInfo
setShouldSave:
saveToKeychain
numberWithUnsignedLong:
currentEdgeList
edges
label
roundTripAverageObserved
average
getBestEdgeFromEdgeSelection
probePending
currentEdgeIndex
shouldProbeForEdgeSelection:edgeRank:edgeIndex:bestEdgeLabel:
setBestEdge:
setBestEdgeRTT:
setBestEdgeProbedRTT:
reprocessPending
probeDate
compare:
setProbePending:
probePause
initWithTimeIntervalSinceNow:
setProbeDate:
logEdgeList:debug:toStdout:
roundTripTime
reprocessAdHocWithEdgeIndex:completionHandler:
initWithWaldo:signature:interfaceType:
updateEdgeSelection:
copyEdgeSelectionTelemetry
setWaldoInfo:
_waldoInfo
_bestEdge
_bestEdgeRTT
_bestEdgeProbedRTT
_nextBestEdge
_nextBestEdgeRTT
_probeDate
T@"NSString",&,V_bestEdge
TQ,V_bestEdgeRTT
TQ,V_bestEdgeProbedRTT
T@"NSString",&,V_nextBestEdge
TQ,V_nextBestEdgeRTT
T@"NSDate",&,V_probeDate
T@"NPWaldo",W,N,V_waldoInfo
status
setResolveCompletionHandler:
setResolveTimer:
resolveTimer
resolveCompletionHandler
resolveWithCompletionHandler:
_resolveCompletionHandler
_resolveTimer
T@?,C,V_resolveCompletionHandler
T@"NSObject<OS_dispatch_source>",&,V_resolveTimer
flowIdentifier
connectionInfo
setConnectionInfo:forIdentifier:
getConnectionInfoForIdentifier:
setConnectionInfo:
fillOutConnectionInfo:withPath:interface:remoteEndpoint:parameters:outputHandler:
setPathType:
connectionStartDate
startDate
setConnectionDelay:
setFirstTxByteTimeStamp:
setFirstTxByteDelay:
initWithParameters:
createConnectionInfo
setConnectionStartDate:
setFirstTxByteTimestamp:
_identifier
_connectionInfo
_startDate
_connectionStartDate
_firstTxByteTimestamp
T@"NSNumber",R,V_identifier
T@"NSPConnectionInfo",&,V_connectionInfo
T@"NSDate",R,V_startDate
T@"NSDate",&,V_connectionStartDate
T@"NSDate",&,V_firstTxByteTimestamp
setPolicy:
tierAsString:
StringAsTier:
tier
setTier:
policy
_policy
_tier
Ti,N,V_tier
T@"NSPPrivacyProxyPolicy",&,N,V_policy
encodeHosts:
initWithEncodedData:
endpointWithAddress:
addressData
appendData:
initWithString:
hostname
endpointWithHostname:port:
initWithArray:
endpointType
supportsResolverCallback
encodedData
resolveEndpointWithCompletionHandler:
copyHostsWithPort:
hostsData
_hosts
_hostsData
T@"NSData",R,V_hostsData
T@"NSArray",R,V_hosts
initWithNetworkAgentClass:
sharedMaintainer
sessionType
iterateFileHandlesWithBlock:
agentFlags
handle
fileDescriptor
setRegisteredNetworkAgent:fileDescriptor:
proxyConfigAgent
proxyConfigAgentRegistration
isRegistered
reportErrorForNetworkRegistration:error:withOptions:
initWithNetworkAgentRegistration:sessionType:configurationIdentifier:agentUUID:name:
setAgentFlags:
setFileHandle:matchingPredicate:
removeFileHandleMatchingPredicate:
commit
updateNetworkAgent:
registerNetworkAgent:
resetProxyConfigAgentFileHandle
unregisterNetworkAgent
resetError
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithAgentUUID:agentDescription:delegate:
networkRegistrationDescription
resetProxyAgent
teardownProxyAgent
setProxyConfigAgent:
setProxyConfigAgentRegistration:
_proxyConfigAgent
_proxyConfigAgentRegistration
T@"<NSPPrivacyProxyNetworkRegistrationDelegate>",W,V_delegate
T@"NSPPrivacyProxyConfigAgent",&,N,V_proxyConfigAgent
T@"NWNetworkAgentRegistration",&,N,V_proxyConfigAgentRegistration
T@"NSObject<OS_nw_proxy_config>",&,N,V_proxyConfiguration
getUUIDBytes:
initWithAgentUUID:delegate:
setProxyAgentConfiguration:secondProxyHopURL:firstProxyHopKeyArray:secondProxyHopKeyArray:ingressTokenAgentUUID:egressTokenAgentUUID:fallbackAgentUUID:shouldFailOpen:allowGeohash:
setProxyAgentConfiguration:proxyKeyArray:tokenAgentUUID:fallbackAgentUUID:shouldFailOpen:
setProxyAgentConfiguration:secondProxyHopURL:firstProxyHopKeyArray:secondProxyHopKeyArray:ingressTokenAgentUUID:egressTokenAgentUUID:shouldFailOpen:allowGeohash:
setProxyAgentConfiguration:proxyKeyArray:tokenAgentUUID:shouldFailOpen:
type
initWithFormat:
setEdgeAddress:
protocolTypeFromPath:endpoint:
setIPType:
interfaceTypeOfInterface:
setInterfaceName:
initWithBytes:length:
numberWithUnsignedShort:
setMultipathSubflowSwitchCounts:
setMultipathSubflowCount:
setMultipathConnectedSubflowCount:
setMultipathPrimarySubflowInterfaceIndex:
setIsMultipath:
interfaceName
initWithBytesNoCopy:length:
setTCPInfo:
setMinimumRTT:
setTFOSucceeded:
TCPInfo
stringByReplacingOccurrencesOfString:withString:options:range:
componentsSeparatedByString:
endpointFromString:defaultPortString:
interface
appendBytes:length:
pathType
getFallbackReasonDescription:
fallbackReasonCategory
fallbackDelay
edgeType
edgeAddress
firstTxByteTimeStamp
isMultipath
multipathSubflowCount
multipathConnectedSubflowCount
isTFOProbeSucceeded
multipathPrimarySubflowInterfaceIndex
multipathSubflowSwitchCounts
connectionDelay
firstTxByteDelay
timeToFirstByte
tunnelConnectionError
timeIntervalSinceLastUsage
TFOSucceeded
timingIntervals
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
stripWhitespace:
stringByAppendingFormat:
endpointWithName:type:domain:
address
hashObject:withClassPrefixWhitelist:
initWithUTF8String:
getInterfaceTypeString:
copyDataHexString:
copyDataFromKeychainWithIdentifier:accountName:
saveDataToKeychain:withIdentifier:accountName:
removeDataFromKeychainWithIdentifier:
removeDataFromKeychainWithIdentifier:accountName:
copyItemIdentifiersFromKeychainWithAccountName:
interfaceTypeOfNWInterface:
getInterfaceName:
hasPacketDrop:
hexDumpBytes:length:
parseXTimeout:hardTTLInSeconds:
parseXHost:
parseXRTT:
copyCurrentNetworkCharacteristicsForPath:
connectionInfoToDict:dictionary:
printDictionaryAsJson:debugName:
compareAddressEndpoints:endpoint2:addressOnly:
timestampIdentifierToName:
getHashForObject:
copyNetworkDescription:
certificateDateIsValid:
postNotification:value:
copyTrueClientIPAddressFromPreferences
stringFromLinkQualityValue:
setFallbackReason:
logInternalError:context:
exceptionWithName:reason:userInfo:
raise
arrayWithCapacity:
conditionsCount
clearConditions
conditionsAtIndex:
addConditions:
conditions
setConditions:count:
conditionsAsString:
StringAsConditions:
_conditions
TQ,R,N
T^i,R,N
isRunning
setup:completionHandler:
ephemeralSessionConfiguration
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
setSessionDescription:
invalidateAndCancel
cleanup
URLWithString:
requestWithURL:cachePolicy:timeoutInterval:
setBoundInterfaceIdentifier:
urlSession
domain
report:
statusCode
isHTTPResponseStatusCodeOK:
dataTaskWithRequest:completionHandler:
resume
finishTasksAndInvalidate
allHeaderFields
transactionMetrics
response
isHTTPResponseStatusCodeRedirect:
sharedHandler
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
evaluate:completionHandler:
abort
setUrlSession:
operationQueue
setOperationQueue:
dataTask
setDataTask:
completionHandler
setCompletionHandler:
setIsRunning:
_isRunning
_interfaceName
_urlSession
_operationQueue
_dataTask
_completionHandler
T@"NSString",&,N,V_interfaceName
T@"NSURLSession",&,N,V_urlSession
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSURLSessionDataTask",&,N,V_dataTask
T@?,C,N,V_completionHandler
TB,N,V_isRunning
stringByAppendingString:
objectForPlatformSpecificKey:
connection
queue
setConnection:
getConnection
propertyListWithData:options:format:error:
archivedDataWithRootObject:requiringSecureCoding:error:
timeIntervalSince1970
dictionaryWithDictionary:
setValue:forKey:
configServerHost
configServerEnabled
userTier
ignoreInvalidCerts
configurationFetchDate
localizedStringFromDate:dateStyle:timeStyle:
proxyTrafficState
proxyTrafficStateToString:
cloudSubscriptionCheckEnabled
fetchCurrentConfigurationWithCompletionHandler:
unsignedIntValue
unsignedLongValue
setAuthURL:
setAuthType:
setProxyHop:
setProxyURL:
addProxyKeyInfo:
setTokenKeyInfo:
setSupportsFallback:
setVendor:
setTcpProxyFqdn:
setWeight:
setDohURL:
setObliviousDoHConfig:
getErrorFromDict:
initWithDomain:code:userInfo:
dataWithBytes:length:
initWithData:
serialize
setCurrentConfiguration:withCompletionHandler:
fetchEdgeSetForIdentifier:completionHandler:
setEdgeSet:forIdentifier:completionHandler:
fetchAppRuleForLabel:completionHandler:
setAppRule:forLabel:completionHandler:
establishTrustWithEdgeSetForIdentifier:completionHandler:
refreshWaldoNowWithCompletionHandler:
reportUsage:fromClient:
fetchStateForClient:withPeerEndpoint:completionHandler:
setTestLatencyMap:completionHandler:
getPrivacyProxyConfiguration:
setPrivacyProxyConfiguration:completionHandler:
convertPrivacyProxyConfigurationWithCompletionHandler:completionHandler:
setPrivacyProxyStatus:completionHandler:
getPrivacyProxyStatusWithCompletionHandler:
getPrivacyProxyServiceStatusWithCompletionHandler:
getPrivacyProxyServiceStatusTimelineWithCompletionHandler:
reportPrivacyProxyServiceStatus:completionHandler:
reportPrivacyProxyNetworkStatus:completionHandler:
setPrivacyProxyUserTier:completionHandler:
getPrivacyProxyUserTierWithCompletionHandler:
setPrivacyProxyTrafficState:proxyTraffic:completionHandler:
getPrivacyProxyTrafficStateWithCompletionHandler:
getPrivacyProxyPolicyWithCompletionHandler:
setPrivacyProxyPolicy:completionHandler:
removePrivacyProxyPolicy
mergePrivacyProxyPolicy:
locationAuthorizationStatusWithCompletionHandler:
setLocationMonitorInterval:
startLocationMonitor
stopLocationMonitor
getPrivacyProxyInfoWithCompletionHandler:
overridePreferredProxy:completionHandler:
overridePreferredResolver:completionHandler:
setGeohashSharingPreference:completionHandler:
getGeohashSharingPreferenceWithCompletionHandler:
getPrivacyProxyAccountTypeWithCompletionHandler:
getPrivacyProxyEffectiveUserTierWithCompletionHandler:
sendRTCReport:errorCode:url:completionHandler:
lock
_queue
_connection
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"NSObject<OS_xpc_object>",&,N,V_connection
unarchivedObjectOfClasses:fromData:error:
initWithTunnel:appRule:hashKey:extraFlowProperties:
path
postCompletionHandler
setPostCompletionHandler:
dataUsingEncoding:
responseData
setResponseData:
receivedHeaders
rangeOfData:options:range:
subdataWithRange:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
predicateWithBlock:
filteredArrayUsingPredicate:
setResponseSuccess:
indexOfObject:
setResponseContentLength:
replaceBytesInRange:withBytes:length:
setReceivedHeaders:
responseContentLength
responseSuccess
initWithTunnel:URL:extraFlowProperties:
postData:withCompletionHandler:
closeClientFlowWithError:
isClientFlowClosed
setUrl:
_receivedHeaders
_responseSuccess
_responseData
_url
_postCompletionHandler
_responseContentLength
T@?,C,V_postCompletionHandler
TB,V_receivedHeaders
T@"NSNumber",&,V_responseContentLength
TB,V_responseSuccess
T@"NSMutableData",&,V_responseData
T@"NSURL",&,V_url
parseDomainName
parse16Bits:
parse32Bits:
parseAddressWithFamily:
parseBytes:
initWithBytes:length:encoding:
resourceString
timeToLive
initWithUnsignedInteger:
name
typeToString:
initWithObjectsAndKeys:
initFromByteParser:
recordClass
dataLength
_type
_name
_recordClass
_timeToLive
_dataLength
_resourceString
Tq,R,V_type
T@"NSString",R,V_name
Tq,R,V_recordClass
TQ,R,V_timeToLive
TQ,R,V_dataLength
T@"NSString",R,V_resourceString
recordType
initWithName:recordType:recordClass:
_recordType
Tq,R,V_recordType
responseCode
messageType
opCode
isAuthoritativeAnswer
isTruncated
isRecursionDesired
isRecursionAvailable
authorities
additionalRecords
_isAuthoritativeAnswer
_isTruncated
_isRecursionDesired
_isRecursionAvailable
_timestamp
_messageType
_opCode
_responseCode
_queries
_answers
_authorities
_additionalRecords
_data
T@"NSData",R,V_data
Tq,R,V_identifier
T@"NSDate",R,V_timestamp
Tq,R,V_messageType
Tq,R,V_opCode
TB,R,V_isAuthoritativeAnswer
TB,R,V_isTruncated
TB,R,V_isRecursionDesired
TB,R,V_isRecursionAvailable
Tq,R,V_responseCode
T@"NSString",R
T@"NSArray",R,V_queries
T@"NSArray",R,V_answers
T@"NSArray",R,V_authorities
T@"NSArray",R,V_additionalRecords
eventName
analyticsDict
sendAnalytics
configFetchURL
configFetchURLToIndex
httpCode
nsurlErrorCode
requestedServerUUID
latency
setConfigFetchURL:
setHttpCode:
setNsurlErrorCode:
setRequestedServerUUID:
setLatency:
_configFetchURL
_httpCode
_nsurlErrorCode
_requestedServerUUID
_latency
T@"NSString",&,N,V_configFetchURL
Tq,N,V_httpCode
Tq,N,V_nsurlErrorCode
T@"NSString",&,N,V_requestedServerUUID
Td,N,V_latency
proxyURL
proxyVendor
tierType
authenticationType
requestedTokenCount
activatedCount
setProxyVendor:
setTierType:
setAuthenticationType:
setRequestedTokenCount:
setActivatedCount:
_proxyURL
_proxyVendor
_tierType
_authenticationType
_requestedTokenCount
_activatedCount
T@"NSString",&,N,V_proxyURL
T@"NSString",&,N,V_proxyVendor
T@"NSString",&,N,V_tierType
T@"NSString",&,N,V_authenticationType
T@"NSString",N,V_requestedServerUUID
TQ,N,V_requestedTokenCount
TQ,N,V_activatedCount
configurationVersion
configurationEnabled
tokenFetchEnabled
safariUnencryptedEnabled
safariDNSEnabled
safariTrackersEnabled
safariAllEnabled
safariHTTPEnabled
mailTrackersEnabled
unencryptedEnabled
dnsEnabled
knownTrackersEnabled
appTrackersEnabled
newsURLResolutionEnabled
exposureNotificationsEnabled
setConfigurationVersion:
setConfigurationEnabled:
setTokenFetchEnabled:
setSafariUnencryptedEnabled:
setSafariDNSEnabled:
setSafariTrackersEnabled:
setSafariAllEnabled:
setSafariHTTPEnabled:
setMailTrackersEnabled:
setUnencryptedEnabled:
setDnsEnabled:
setKnownTrackersEnabled:
setAppTrackersEnabled:
setNewsURLResolutionEnabled:
setExposureNotificationsEnabled:
_configurationEnabled
_tokenFetchEnabled
_safariUnencryptedEnabled
_safariDNSEnabled
_safariTrackersEnabled
_safariAllEnabled
_safariHTTPEnabled
_mailTrackersEnabled
_unencryptedEnabled
_dnsEnabled
_knownTrackersEnabled
_appTrackersEnabled
_newsURLResolutionEnabled
_exposureNotificationsEnabled
_configurationVersion
TQ,N,V_configurationVersion
TB,N,V_configurationEnabled
TB,N,V_tokenFetchEnabled
TB,N,V_safariUnencryptedEnabled
TB,N,V_safariDNSEnabled
TB,N,V_safariTrackersEnabled
TB,N,V_safariAllEnabled
TB,N,V_safariHTTPEnabled
TB,N,V_mailTrackersEnabled
TB,N,V_unencryptedEnabled
TB,N,V_dnsEnabled
TB,N,V_knownTrackersEnabled
TB,N,V_appTrackersEnabled
TB,N,V_newsURLResolutionEnabled
TB,N,V_exposureNotificationsEnabled
serviceStatusDisabledCount
serviceStatusActiveCount
serviceStatusOutageCount
serviceStatusFraudAlertCount
serviceStatusUnsupportedRegionCount
serviceStatusSystemIncompatibleCount
serviceStatusSubscriberUnsupportedRegionCount
setServiceStatusDisabledCount:
setServiceStatusActiveCount:
setServiceStatusOutageCount:
setServiceStatusFraudAlertCount:
setServiceStatusUnsupportedRegionCount:
setServiceStatusSystemIncompatibleCount:
setServiceStatusSubscriberUnsupportedRegionCount:
_serviceStatusDisabledCount
_serviceStatusActiveCount
_serviceStatusOutageCount
_serviceStatusFraudAlertCount
_serviceStatusUnsupportedRegionCount
_serviceStatusSystemIncompatibleCount
_serviceStatusSubscriberUnsupportedRegionCount
TQ,N,V_serviceStatusDisabledCount
TQ,N,V_serviceStatusActiveCount
TQ,N,V_serviceStatusOutageCount
TQ,N,V_serviceStatusFraudAlertCount
TQ,N,V_serviceStatusUnsupportedRegionCount
TQ,N,V_serviceStatusSystemIncompatibleCount
TQ,N,V_serviceStatusSubscriberUnsupportedRegionCount
wifiStatusBlockedCount
wifiStatusDisabledCount
wifiStatusActiveCount
cellStatusBlockedCount
cellStatusDisabledCount
cellStatusActiveCount
wiredStatusBlockedCount
wiredStatusDisabledCount
wiredStatusActiveCount
setWifiStatusBlockedCount:
setWifiStatusDisabledCount:
setWifiStatusActiveCount:
setCellStatusBlockedCount:
setCellStatusDisabledCount:
setCellStatusActiveCount:
setWiredStatusBlockedCount:
setWiredStatusDisabledCount:
setWiredStatusActiveCount:
_wifiStatusBlockedCount
_wifiStatusDisabledCount
_wifiStatusActiveCount
_cellStatusBlockedCount
_cellStatusDisabledCount
_cellStatusActiveCount
_wiredStatusBlockedCount
_wiredStatusDisabledCount
_wiredStatusActiveCount
TQ,N,V_wifiStatusBlockedCount
TQ,N,V_wifiStatusDisabledCount
TQ,N,V_wifiStatusActiveCount
TQ,N,V_cellStatusBlockedCount
TQ,N,V_cellStatusDisabledCount
TQ,N,V_cellStatusActiveCount
TQ,N,V_wiredStatusBlockedCount
TQ,N,V_wiredStatusDisabledCount
TQ,N,V_wiredStatusActiveCount
success
errorDomain
errorCode
setSuccess:
setErrorDomain:
setErrorCode:
_success
_errorDomain
_errorCode
TB,N,V_success
T@"NSString",&,N,V_errorDomain
Tq,N,V_errorCode
ingressProxyTokensAdded
egressProxyTokensAdded
ingressProxyLowWaterMarkHitCount
egressProxyLowWaterMarkHitCount
setIngressProxyTokensAdded:
setEgressProxyTokensAdded:
setIngressProxyLowWaterMarkHitCount:
setEgressProxyLowWaterMarkHitCount:
_ingressProxyTokensAdded
_egressProxyTokensAdded
_ingressProxyLowWaterMarkHitCount
_egressProxyLowWaterMarkHitCount
TQ,N,V_ingressProxyTokensAdded
TQ,N,V_egressProxyTokensAdded
TQ,N,V_ingressProxyLowWaterMarkHitCount
TQ,N,V_egressProxyLowWaterMarkHitCount
copy
standardUserDefaults
arrayForKey:
localizations
preferredLocalizationsFromArray:forPreferences:
firstObject
modelSpecificLocalizedStringKeyForKey:
URLForResource:withExtension:
initWithPath:
defaultManager
fileExistsAtPath:isDirectory:
bundleWithPath:
load
classNamed:
networkStatus
appendPrettyObject:withName:andIndent:options:
networkStatusStartTime
networkStatusEndTime
descriptionWithIndent:options:
setNetworkStatus:
setNetworkStatusStartTime:
setNetworkStatusEndTime:
_networkStatus
_networkStatusStartTime
_networkStatusEndTime
T@"PrivacyProxyNetworkStatus",&,N,V_networkStatus
T@"NSDate",&,N,V_networkStatusStartTime
T@"NSDate",&,N,V_networkStatusEndTime
serviceStatus
serviceStatusTimeline
networkStatusTimeline
diagnostics
diskVersion
generation
setGeneration:
setServiceStatus:
setServiceStatusTimeline:
setNetworkStatusTimeline:
decodeInt64ForKey:
decodeArrayOfObjectsOfClass:forKey:
arrayWithArray:
encodeInt64:forKey:
setNetworkStatuses:
setDetails:
setServiceStatusOnTimeline:
initWithSubscriber:delegate:
initForReadingFromData:error:
initRequiringSecureCoding:
subscriber
serviceStatusEndTime
networkType
defaultWorkspace
openSensitiveURL:withOptions:
setSubscriber:
setServiceStatusEndTime:
removeObject:
setServiceStatusStartTime:
saveToPreferences
serviceStatusString:
postNotification
showNotificationWithHeader:message:actionURL:callbackQueue:callbackHandler:
reportServiceStatus:title:message:serviceStatusDetails:
removeObjectsInArray:
networkStatuses
networkName
setNetworkType:
setNetworkName:
setNetworkStatusOnTimeline:
updateNetworkStatus:type:name:
userNotification
disableWiFiNetwork:
initAndShowAlertWithHeader:message:alternateMessage:defaultMessage:iconName:noBoldDefault:callbackQueue:callbackHandler:
setUserNotification:
disableCellularNetwork:
disableInterface:displayName:type:
removeFromPreferences
initFromPreferencesWithSubscriber:delegate:
publishDailyServiceStatus
publishDailyNetworkStatus
openiCloudSettings
handleTierChange:
reportServiceActive
reportServiceDisabled
reportServiceOutage
reportFraudAlert
reportUnsupportedRegion:
reportSubscriberUnsupportedRegion:
reportSystemIncompatibility
clearNetworkStatusForType:
reportActiveOnWiFiName:
reportDisabledOnWiFiName:
reportBlockedOnWiFiName:
reportActiveOnCellularName:
reportDisabledOnCellularName:
reportBlockedOnCellularName:
reportActiveOnInterfaceName:displayName:type:
reportDisabledOnInterfaceName:displayName:type:
reportBlockedOnInterfaceName:displayName:type:
_subscriber
_serviceStatus
_serviceStatusTimeline
_diskVersion
_generation
_userNotification
_networkStatusTimeline
T@"NSObject<NSPServiceStatusManagerDelegate>",W,V_delegate
Tq,R,V_diskVersion
TQ,N,V_generation
T@"PrivacyProxyServiceStatus",&,V_serviceStatus
T@"NSPUserNotification",&,V_userNotification
T@"NSMutableArray",&,V_serviceStatusTimeline
T@"NSMutableArray",&,V_networkStatusTimeline
TB,V_subscriber
hasDohURL
hasObliviousDoHConfig
setHasWeight:
hasWeight
dohURL
obliviousDoHConfig
weight
_dohURL
_obliviousDoHConfig
_weight
T@"NSString",&,N,V_dohURL
T@"NSData",&,N,V_obliviousDoHConfig
TI,N,V_weight
handleFlowClosed:withFallbackReason:
sendData:toClientFlow:
increaseWindowSizeForFlow:byBytes:
handleHelloAck:
handlePingResponseRTT:geohash:
flowIsFirstFlow:
extraFlowProperties
dayPassCreationDate
timeIntervalSinceNow
setInitialBytesLeftOver:
enumerateByteRangesUsingBlock:
isBestEffort
disableFallback
shouldComposeInitialData
copyConnectionInfo
acknowledgeData:sentToFlow:
sendData:forFlow:
fallbackTimeout
handleFlowUsedTunnel
handleFallbackForFlow:
fallbackReasonToErrno:
closeWithError:
error
processConnectionInfo:
createFallbackConnectionInfoWithFallbackReason:
disconnectedByApp
setTunnelConnectionError:
setFallbackDelay:
setIsTFOProbeSucceeded:
timeToFirstRequest
exceptions
combineStateInfo:andConnectionInfo:
initWithTunnel:service:postURL:
reportTelemetry:
increaseWindowSize:
handleTunnelDisconnected
setAppData:
appData
reportMetrics
handleTunnelReadyForData
setIdentifier:
initialBytesLeftOver
setDisconnectedByApp:
shouldComposeIntialData
setShouldComposeIntialData:
savedData
setSavedData:
fallbackTimer
setFallbackTimer:
telemetryTimer
setTelemetryTimer:
_hasTunnel
_tunnelError
_isDirectConnectionViable
_fallbackDisabled
_enableDirectRace
_disconnectedByApp
_shouldComposeIntialData
_hashKey
_tunnel
_state
_appRule
_extraFlowProperties
_initialBytesLeftOver
_savedData
_fallbackTimer
_telemetryTimer
_fallbackDelay
T@"NSObject<OS_dispatch_data>",&,N,V_savedData
T^v,N,V_fallbackTimer
T^v,N,V_telemetryTimer
Td,N,V_fallbackDelay
TQ,R,N,V_hashKey
TQ,N,V_identifier
T@"NPTunnel",R,N,V_tunnel
Tq,R,N,V_state
T@"NSPAppRule",R,N,V_appRule
T@"NPFlowProperties",R,N,V_extraFlowProperties
Tq,N
T@"NSDate",&,N,V_firstTxByteTimestamp
T@"NSDate",R,N,V_startDate
T^v,R,N,V_window
TQ,N,V_initialBytesLeftOver
TB,N,V_isDirectConnectionViable
TB,N,V_fallbackDisabled
TB,R,N,V_enableDirectRace
TB,N,V_disconnectedByApp
TB,N,V_shouldComposeIntialData
unarchivedObjectOfClass:fromData:error:
enumerateTLVsUsingBlock:
appendType:length:value:
replacementEndpoint
replacementAddressMap
enableNSP
isLoopback
setIsLoopback:
disableIdleTimeout
setDisableIdleTimeout:
setFlowIdentifier:
requestData
dataMode
setDataMode:
setDirectEndpoint:
flags
setFlags:
_flowIdentifier
_dataMode
_flags
_serviceID
_fallbackTimeout
_requestData
_replacementEndpoint
_replacementAddressMap
_directEndpoint
_timestamps
TI,N,V_flags
TQ,N,V_serviceID
TI,N,V_flowIdentifier
Td,N,V_fallbackTimeout
T@"NSData",&,N,V_requestData
T@"NPTunnelTuscanyEndpoint",&,N,V_replacementEndpoint
T@"NSDictionary",&,N,V_replacementAddressMap
Ti,N,V_dataMode
T@"NWEndpoint",&,N,V_directEndpoint
T^Q,N,V_timestamps
deviceIdentityFetchDate
setDeviceIdentityFetchDate:
initFromPreferences
setDay:
currentCalendar
dateByAddingComponents:toDate:options:
setIgnoreExistingKeychainIdentity:
deviceSupportsDeviceIdentityWithSerialNumber
sharedDeviceIdentity
generateDeviceIdentityFetchDate
resetDeviceIdentityInfo
deviceIdentityAuthenticationFailed
fetchDeviceIdentityCertificate:
ignoreExistingKeychainIdentity
_ignoreExistingKeychainIdentity
_deviceIdentityFetchDate
TB,N,V_ignoreExistingKeychainIdentity
T@"NSDate",&,N,V_deviceIdentityFetchDate
setBaaSignature:
setLeafCertificate:
setIntermediateCertificate:
baaSignature
leafCertificate
intermediateCertificate
_baaSignature
_intermediateCertificate
_leafCertificate
T@"NSData",&,N,V_baaSignature
T@"NSData",&,N,V_leafCertificate
T@"NSData",&,N,V_intermediateCertificate
useCustomProtocol
useLocalFlowDivert
keybag
setAgentData:
agentData
initFromTLVs:
setAppRule:
setKeybag:
parseAgentData
_dataDigest
_keybag
_agentData
T@"NSData",&,V_agentData
T@"NSPConfiguration",&,V_configuration
T@"NSPAppRule",&,V_appRule
T@"NSData",&,V_keybag
logNSPDiagnosticReport:event:context:
initWithSampleSize:
setSamples:
size
samples
setSize:
addObjectsFromArray:
addSample:
addSamples:
isLastValid
isAnyValid
shortDescription
_size
_samples
T@"NSMutableArray",&,V_samples
TQ,V_size
decodeBoolForKey:
initWithProbeEndpoint:probeTFO:
roundTripAverage
passedReprobeThreshold
encodeBool:forKey:
creationDate
probeCount
probeEndpoint
TFOStatus
probeTFO
probeNoTFOCookie
setRoundTripTime:
setRoundTripAverage:
setRoundTripAverageObserved:
setPassedReprobeThreshold:
setCreationDate:
setProbeCount:
setTFOStatus:
setProbeTFO:
setProbeEndpoint:
setProbeNoTFOCookie:
connectionParametersString
TFOStatusString
useTestLatencyMap
getTestLatencyRTT:parameters:
addRoundTripSample:
probeConnection
setCurrentTimeout:
setNeedReprobe:
unsignedLongLongValue
setEnableTFO:
setEnableTFONoCookie:
setInitialDataPayload:
setProbeTimer:
probeTimer
fillTestLatency
setProbeCompletionHandler:
setProbeConnection:
setIsObserving:
reprobeCount
setReprobeCount:
readMinimumLength:maximumLength:completionHandler:
write:completionHandler:
connectedPath
enableTFO
pingPong
isObserving
probeCompletionHandler
needReprobe
currentTimeout
measureLatencyWithTimeout:completionHandler:
isMatched:parameters:
addRoundTripSamples:
getRoundTripSample:
addRoundTripSampleObserved:
addressFamilyString
isTFOEnabled
isMatched:
isComplete:
_probeTFO
_probeNoTFOCookie
_passedReprobeThreshold
_needReprobe
_isObserving
_probeEndpoint
_roundTripTime
_roundTripAverage
_roundTripAverageObserved
_TFOStatus
_probeCount
_creationDate
_reprobeCount
_probeTimer
_probeConnection
_probeCompletionHandler
_currentTimeout
Tq,V_reprobeCount
T@"NSObject<OS_dispatch_source>",&,V_probeTimer
T@"NWTCPConnection",&,V_probeConnection
T@?,C,V_probeCompletionHandler
T@"NSNumber",&,V_currentTimeout
TB,V_needReprobe
TB,V_isObserving
TQ,V_edgeIndex
T@"NWEndpoint",&,V_probeEndpoint
TQ,V_roundTripTime
T@"NPAverage",&,V_roundTripAverage
T@"NPAverage",&,V_roundTripAverageObserved
T@"NSNumber",&,V_addressFamily
Tq,V_interfaceType
TB,V_probeTFO
TB,V_probeNoTFOCookie
Tq,V_TFOStatus
Tq,V_probeCount
T@"NSDate",&,V_creationDate
TB,V_passedReprobeThreshold
stringWithString:
validateRuleDictionary:
initWithSigningIdentifier:
setMatchPath:
setMatchAccountIdentifiers:
setNoDivertDNS:
setObject:atIndexedSubscript:
setMatchDomains:
divertDNSOnly
noDNSDelegation
enableDirectMultipath
enableDirectExtendedValidation
directTLSPorts
enableDirectTFO
fallbackCountBeforeImmediateFallback
proxyEvaluationPath
connectionTimeout
connectionIdleTimeout
enableNoTFOCookie
enableMultipath
enableUDPRace
enableRatio
reenableInterval
enableOptInPerTask
matchEffectiveApplications
locationBundlePath
updateHash
matchAccountIdentifiers
matchPath
matchDomains
noDivertDNS
edgeSetIdentifier
setDisableFallback:
setEnableDirectMultipath:
setEnableDirectTFO:
setEnableDirectExtendedValidation:
setDirectTLSPorts:
setDivertDNSOnly:
setNoDNSDelegation:
setFallbackBufferLimit:
setFallbackCountBeforeImmediateFallback:
setProxyEvaluationPath:
setUseCustomProtocol:
setUseLocalFlowDivert:
setEnableDirectRace:
setShouldComposeInitialData:
setLabel:
setEdgeSetIdentifier:
setConnectionTimeout:
setConnectionIdleTimeout:
setEnableNoTFOCookie:
setEnableMultipath:
setEnableUDPRace:
setEnableRatio:
setReenableInterval:
setTelemetryRatio:
setConfigurationIdentifier:
setEnableOptInPerTask:
setMatchEffectiveApplications:
setEnableCheckDate:
setDisabledByRatio:
setLocationBundlePath:
setInitialWindowSize:
setUpdateHash:
copyUUIDsForSigningIdentifier:executablePath:
effectiveApplication:
accountIdentifier:
domain:
copyExecutableConditions
numberWithInt:
initWithUnsignedLongLong:
initWithUnsignedInt:
initWithUUIDBytes:
configurationIdentifier
UUID
initWithNetworkAgentRegistration:sessionType:configurationIdentifier:agentUUID:
loadAppRules:withCompletionHandler:
saveWithCompletionHandler:
copyAccountIdentifierConditions
copyMatchDomainConditions
copyMatchEffectiveApplicationConditions
merge:
updateNetworkAgent
teardownNetworkAgent
defaults
setDefaults:
agent
setAgent:
agentRegistration
setAgentRegistration:
enableCheckDate
disabledByRatio
_disabledByRatio
_disableFallback
_enableDirectMultipath
_enableDirectTFO
_enableDirectExtendedValidation
_directTLSPorts
_divertDNSOnly
_noDNSDelegation
_fallbackBufferLimit
_fallbackCountBeforeImmediateFallback
_proxyEvaluationPath
_useCustomProtocol
_useLocalFlowDivert
_label
_edgeSetIdentifier
_connectionTimeout
_connectionIdleTimeout
_enableMultipath
_enableTFO
_requireTFO
_enableNoTFOCookie
_enableUDPRace
_enableRatio
_reenableInterval
_telemetryRatio
_shouldComposeInitialData
_enableOptInPerTask
_matchEffectiveApplications
_locationBundlePath
_initialWindowSize
_defaults
_agent
_agentRegistration
_configurationIdentifier
_enableCheckDate
_updateHash
T@"NSPAppRule",&,N,V_defaults
T@"NSPNetworkAgent",&,N,V_agent
T@"NWNetworkAgentRegistration",&,N,V_agentRegistration
T@"NSUUID",&,N,V_configurationIdentifier
T@"NSDate",&,N,V_enableCheckDate
TB,N,V_disabledByRatio
T@"NSData",&,N,V_updateHash
T@"NSNumber",C,N,V_disableFallback
T@"NSNumber",C,N,V_enableDirectMultipath
T@"NSNumber",C,N,V_enableDirectTFO
T@"NSNumber",C,N,V_enableDirectExtendedValidation
T@"NSArray",C,N,V_directTLSPorts
T@"NSNumber",C,N,V_divertDNSOnly
T@"NSNumber",C,N,V_noDNSDelegation
T@"NSNumber",C,N,V_serviceID
T@"NSNumber",C,N,V_enabled
T@"NSNumber",C,N,V_fallbackTimeout
T@"NSNumber",C,N,V_fallbackBufferLimit
T@"NSNumber",C,N,V_fallbackCountBeforeImmediateFallback
T@"NSString",C,N,V_proxyEvaluationPath
T@"NSNumber",C,N,V_useCustomProtocol
T@"NSNumber",C,N,V_useLocalFlowDivert
T@"NSNumber",C,N,V_enableDirectRace
T@"NSString",C,N,V_label
T@"NSString",C,N,V_edgeSetIdentifier
T@"NSNumber",C,N,V_connectionTimeout
T@"NSNumber",C,N,V_connectionIdleTimeout
T@"NSNumber",C,N,V_enableMultipath
T@"NSNumber",C,N,V_enableTFO
T@"NSNumber",C,N,V_requireTFO
T@"NSNumber",C,N,V_enableNoTFOCookie
T@"NSNumber",C,N,V_enableUDPRace
T@"NSNumber",C,N,V_enableRatio
T@"NSNumber",C,N,V_reenableInterval
T@"NSNumber",C,N,V_telemetryRatio
T@"NSNumber",C,N,V_shouldComposeInitialData
T@"NSNumber",C,N,V_enableOptInPerTask
T@"NSArray",C,N,V_matchEffectiveApplications
T@"NSString",C,N,V_locationBundlePath
T@"NSNumber",C,N,V_initialWindowSize
setProxies:count:
T^I,R,N
IPType
initWithInteger:
initWithBool:
initWithDictionary:
minimumRTT
shouldMoveToNextEdgeForFallbackReason:
shouldResolveForFallbackReason:
copyDictionary
timingIntervalAtIndex:forKey:
setEdgeType:
setTimeIntervalSinceLastUsage:
setTimeToFirstByte:
setExceptions:
setTimingIntervals:
_isMultipath
_TFOSucceeded
_isTFOProbeSucceeded
_pathType
_fallbackReasonCategory
_edgeType
_edgeAddress
_multipathSubflowCount
_multipathConnectedSubflowCount
_multipathPrimarySubflowInterfaceIndex
_multipathSubflowSwitchCounts
_TCPInfo
_firstTxByteTimeStamp
_firstTxByteDelay
_connectionDelay
_IPType
_minimumRTT
_timeIntervalSinceLastUsage
_timeToFirstByte
_tunnelConnectionError
_exceptions
_timingIntervals
Tq,N,V_pathType
Tq,N,V_edgeType
T@"NSString",&,N,V_edgeAddress
TB,N,V_isMultipath
TQ,N,V_multipathSubflowCount
TQ,N,V_multipathConnectedSubflowCount
TQ,N,V_multipathPrimarySubflowInterfaceIndex
T@"NSDictionary",&,N,V_multipathSubflowSwitchCounts
T@"NSDictionary",&,N,V_TCPInfo
T@"NSDate",&,N,V_firstTxByteTimeStamp
Td,N,V_firstTxByteDelay
Td,N,V_connectionDelay
TB,N,V_TFOSucceeded
Tq,N,V_IPType
Tq,N,V_interfaceType
TQ,N,V_minimumRTT
Td,N,V_timeIntervalSinceLastUsage
T@"NSDictionary",&,N,V_exceptions
T@"NSArray",&,N,V_timingIntervals
Td,N,V_timeToFirstByte
Tq,N,V_tunnelConnectionError
TB,N,V_isTFOProbeSucceeded
Tq,R,N,V_fallbackReasonCategory
setRemoteEndpoint:
startConnection
openWithLocalEndpoint:completionHandler:
setNetworkTransaction:
readDataFromConnection
currentState
readMultipleFromClient
initWithObjects:count:
readMultipleFromConnection
writeDatagrams:sentByEndpoints:completionHandler:
writeData:withCompletionHandler:
writeMultipleToConnection:count:
readDatagramsWithCompletionHandler:
writeDataToConnection:
readDataWithCompletionHandler:
metaData
sourceAppAuditToken
remoteHostname
port
copyCEndpoint
connectionError
closeWriteWithError:
closeReadWithError:
setConnectionError:
setCurrentState:
startSendReceiveLoop
initWithAppProxyFlow:
setQueue:
networkTransaction
_currentState
_connectionError
_networkTransaction
T@"NEAppProxyFlow",&,V_flow
T@"NWEndpoint",&,V_remoteEndpoint
T@"NSObject<OS_nw_connection>",&,V_connection
T@"NSError",&,V_connectionError
Ti,V_currentState
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSObject<OS_os_transaction>",&,N,V_networkTransaction
initWithBundleIdentifier:
removeAllDeliveredNotifications
setTitle:
setBody:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
setShouldSuppressScreenLightUp:
setDefaultActionURL:
UUIDString
requestWithIdentifier:content:trigger:destinations:
addNotificationRequest:withCompletionHandler:
setNotification:
notification
postNotificationWithCallbackQueue:callbackHandler:
notificationSource
setCallback:
setCallbackQueue:
setNotificationSource:
executeOnMainLoop:
callbackQueue
callback
cancelCurrentNotificationWithDefaultResponse:queue:completionHandler:
_notification
_notificationSource
_callbackQueue
_callback
T@,&,V_notification
T@,&,V_notificationSource
T@"NSObject<OS_dispatch_queue>",&,V_callbackQueue
T@?,C,N,V_callback
notifyClientConnected
maxDataSendSizeForFlow:
addBufferToFrameArray:bufferSize:
isReadyForData
dropInputProtocol
connect
disconnect
addInputFramesToArray:limitMinimumBytes:limitMaximumBytes:limitMaximumFrames:
addOutputFramesToArray:limitMinimumBytes:limitMaximumBytes:limitMaximumFrames:
handleOutputFrame:send:
inputProtocol
_disconnectedByTunnel
_inputBuffer
_discardFirstData
_connectedOnTunnelReadyForData
_connectedOnInitialData
_inputProtocol
T^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v},R,N,V_inputProtocol
TB,R,N,V_waitingForOutput
getServerConnection
initWithStatus:type:name:
setEnabled:queue:completionHandler:
getStatus:completionHandler:
getServiceStatus:completionHandler:
getServiceStatusTimeline:completionHandler:
reportWiFiNetworkStatus:networkName:queue:completionHandler:
reportCellularNetworkStatus:networkName:queue:completionHandler:
setUserTier:queue:completionHandler:
getUserTier:completionHandler:
setTrafficState:proxyTraffic:queue:completionHandler:
getTrafficState:completionandler:
setGeohashSharingPreference:queue:completionHandler:
getGeohashSharingPreference:completionHandler:
getPrivacyProxyAccountType:completionHandler:
getEffectiveUserTier:completionHandler:
sessionDescription
protectionSpace
serverTrust
leafOID
validationHostname
revocationFailClosed
enableExtendedValidation
credentialForTrust:
setValidationHostname:
setEnableExtendedValidation:
setIgnoreInvalidCerts:
setLeafOID:
setRevocationFailClosed:
_enableExtendedValidation
_ignoreInvalidCerts
_revocationFailClosed
_validationHostname
_leafOID
T@"NSString",&,V_validationHostname
TB,V_enableExtendedValidation
TB,V_ignoreInvalidCerts
T@"NSString",&,V_leafOID
TB,V_revocationFailClosed
schemeUsingPort:
ipProtocol:
allInterfaces
uid:
initWithOrder:result:conditions:
skipWithOrder:
machoUUIDFromSigningID:
createPolicyWithOrder:policyResult:machOUUID:remotePort:protocol:otherPolicyConditions:uidRequired:
arrayWithObjects:count:
netAgentUUID:
fallbackTraffic
addDNSPolicyWithOrder:toArray:machOUUID:
clientFlags:
setNegative:
platformBinary
copyUUIDsForExecutable:
createDNSPolicies:ingressProxyURL:
createTrackerPolicies:webContent:machOUUIDs:
createUnencryptedPolicies:machOUUIDs:
createAllPolicies:machOUUIDs:exceptionAccount:
createHTTPPolicies:skipUnencrypted:machOUUIDs:
createAccountIDBasedPolicies:accountIdentifier:platformBinary:uidRequired:
localNetworks
requiredAgentDomain:agentType:
multiHopProxyAgentUUID
routeRuleWithAction:forType:
setNetworkAgentUUID:
routeRules:
routeRuleWithAction:forNetworkAgent:
controlUnit
setControlUnit:
allowsUnsafeSocketAccess
usesModernNetworkAPI
machoUUIDFromPID:
createRemovalPoliciesForCaptivePlugins:
createRemovalPoliciesForSystemComponents
policyMaskFromProxyPolicy:
createPoliciesFromPolicyMask:flowDivertHandle:ingressProxyURL:captivePluginBundleIDs:
routeRuleWithAction:forInterfaceName:
setWithArray:
initWithSet:
minusSet:
safariBundleMachOUUIDsToInstall:
allObjects
protoBufWithPropertyList:
propertyListWithProtoBuf:
policiesWithProtoBuf:flowDivertHandle:ingressProxyURL:captivePluginBundleIDs:
policyExceptionsForWiFi:cellular:interfaceNames:
policiesForSafariTechnologyPreview:
policiesForSafariAppBundles:safariBundleMachOUUIDs:
policiesForMailApp:
probePolicies
handleConnected
handleConnectionError
setTimeToFirstRequest:
handleDisconnected
flows
setError:
readMinimumLength:maximumLength:
canHandleMoreData
handleCanHandleMoreData
dayPass
initWithEndpoint:parameters:appRule:flowProperties:delegate:
isFirstTunnel
endpoint
sendDataOnUDPSession:
setIsCancelled:
tunnel:flowDidFallbackWithReason:
sendUsageReport:
setIgnoreWaldoTimestamp:
outputInterface
currentEdgeType
handleReady
getNextSessionCounter
handleInputAvailable
handleReadData:
handleEOF
handleDataWrittenWithError:
writeInitialData
allocateFlowID
ignoreWaldoTimestamp
pendingPingCompletionHandler
setPendingPingCompletionHandler:
setIsFirstTunnel:
_nextFlowID
_UDPSession
_connectionTimer
_shouldReportUsage
_pingTimer
_usageReportTimer
_onRamp
_ignoreWaldoTimestamp
_isFirstTunnel
_clientRef
_pendingPingCompletionHandler
T@?,C,N,V_pendingPingCompletionHandler
TB,N,V_isFirstTunnel
TI,R,N
T^v,N,V_clientRef
Tq,R,N
TB,N,V_ignoreWaldoTimestamp
T@"NSDate",R,N
setManager:
manager
stopWithCompletionHandler:
startProxyWithOptions:completionHandler:
stopProxyWithReason:completionHandler:
handleNewFlow:
_manager
T@"NSPManager",&,V_manager
propertyForKey:
initFromMetadata:
metadata
initFromStream:
initFromTask:
initFromConnection:
initFromNWConnection:
fetchConnectionInfoWithCompletionHandler:
TQ,R,V_flowIdentifier
setTokenKeyID:
unactivatedTokenListsCount
clearUnactivatedTokenLists
unactivatedTokenListAtIndex:
addUnactivatedTokenList:
unactivatedTokenListType
hasVendor
tokenKeyID
unactivatedTokenLists
setUnactivatedTokenLists:
vendor
_tokenKeyID
_unactivatedTokenLists
_vendor
T@"NSData",&,N,V_tokenKeyID
T@"NSMutableArray",&,N,V_unactivatedTokenLists
T@"NSData",R,N,V_data
T@"NSString",&,N,V_vendor
ak_addAnisetteHeaders
ak_addClientInfoHeader
ak_addDeviceUDIDHeader
addAuthenticationInformationToRequest:tokenActivationQuery:completionHandler:
authenticationFailure
tokenInfo
setBaaParameters:
setTokenInfo:
authTypeAsString:
StringAsAuthType:
hasBaaParameters
authType
baaParameters
_authType
_baaParameters
_tokenInfo
Ti,N,V_authType
T@"NSPPrivacyProxyBAAValidation",&,N,V_baaParameters
T@"NSPPrivacyProxyTokenInfo",&,N,V_tokenInfo
activatedTokenListsCount
clearActivatedTokenLists
activatedTokenListAtIndex:
addActivatedTokenList:
activatedTokenListType
setTokenExpiryTimestamp:
setHasTokenExpiryTimestamp:
hasTokenExpiryTimestamp
tokenExpiryTimestamp
activatedTokenLists
setActivatedTokenLists:
_tokenExpiryTimestamp
_activatedTokenLists
TQ,N,V_tokenExpiryTimestamp
T@"NSMutableArray",&,N,V_activatedTokenLists
proxyKeyInfosCount
clearProxyKeyInfos
proxyKeyInfoAtIndex:
proxyKeyInfoType
proxyHopAsString:
StringAsProxyHop:
setHasSupportsFallback:
hasSupportsFallback
hasTcpProxyFqdn
proxyHop
proxyKeyInfos
setProxyKeyInfos:
tokenKeyInfo
supportsFallback
tcpProxyFqdn
_proxyHop
_proxyKeyInfos
_tcpProxyFqdn
_tokenKeyInfo
_supportsFallback
Ti,N,V_proxyHop
T@"NSMutableArray",&,N,V_proxyKeyInfos
T@"NSData",&,N,V_tokenKeyInfo
TB,N,V_supportsFallback
T@"NSString",&,N,V_tcpProxyFqdn
startIdleTimer
teardownOutputHandler
tunnelDidConnect:
allKeys
tunnelIsReady:
tunnelDidCancel:
handleConnectionIsDisconnected
handleOutputAvailable
localEndpoint
setLocalEndpoint:
setPath:
isCancelled
setEof:
handledDisconnected
setHandledDisconnected:
_idleTimer
_isCancelled
_isReadyForData
_eof
_handledDisconnected
_disableIdleTimeout
_error
_parameters
_endpoint
_localEndpoint
_path
_flows
_timeToFirstRequest
_connectionState
TB,N,V_eof
T@"NSObject<OS_nw_endpoint>",&,N,V_localEndpoint
T@"NSObject<OS_nw_path>",&,N,V_path
TB,N,V_handledDisconnected
TB,N,V_disableIdleTimeout
Tq,N,V_connectionState
T@"NSDate",&,N,V_connectionStartDate
Ti,N,V_error
Tq,N,V_fallbackReason
Td,N,V_timeToFirstRequest
TB,N,V_isCancelled
T@"NSUUID",R,N,V_identifier
T^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v},R,N
T@"NSObject<OS_nw_parameters>",R,N,V_parameters
T@"NSObject<OS_nw_endpoint>",R,N,V_endpoint
T@"NSObject<OS_nw_interface>",R,N
T@"<NPTunnelDelegate>",R,W,N,V_delegate
T@"NSMutableDictionary",R,N,V_flows
T^Q,R,N,V_timestamps
TB,R,N,V_isTFOProbeSucceeded
TB,R,N,V_isReadyForData
instantiateFlowWithTunnel:inputProtocol:
instantiateTunnelWithEndpoint:parameters:
createTransformsForEndpoint:parameters:
initWithLatitude:longtitude:timestamp:
latitude
longtitude
setLatitude:
setLongtitude:
setTimestamp:
isValid
_latitude
_longtitude
Td,V_latitude
Td,V_longtitude
T@"NSDate",&,N,V_timestamp
isDayPassExpired
parentWaldo
session_counter
setUseCount:
updateSessionCounterFromKernel
useCount
setDayPassSessionCounter:
tuscanyEndpoint
info
copyValue:ofSize:fromOffset:base:totalLength:
setDayPass:
initWithTimeIntervalSince1970:
setTuscanyEndpoint:
uuid
useNetworkAgent:returnUseCount:
dayPassSession
setDayPassSession:
setParentWaldo:
retryDate
useTestDaypass
setRetryDate:
dateByAddingTimeInterval:
dayPassRequestTimeout
setTimeoutIntervalForResource:
dayPassEnableSessionTicket
set_allowsTLSSessionTickets:
dayPassExtendedValidation
dayPassLeafOID
dayPassRevocationFailClosed
dayPassHostnamePrependLabel
dayPassHostname
set_socketStreamProperties:
set_allowsTCPFastOpen:
mainQueue
daypassEndpoint
dayPassPort
fillTestDaypass
invalidateDayPass
waldo:fetchDayPassForURL:ifExpired:session:dataHandler:completionHandler:
dayPassHardExpiry
dayPassFailed
isDayPassPastExpiry:
unregisterAgent
getBytes:length:
initWithEndpoint:
registerAgentWithKey:
getTuscanyEndpoint:
initWithKey:
resetParentWaldo:
dayPassRefreshAllowed
refreshDayPassWithWaldoDelegate:softExpiry:retryInterval:edge:completionHandler:
descriptionDictionary
setDayPassCreationDate:
setDayPassHardExpiry:
setDayPassFailed:
dayPassPending
setDayPassPending:
_dayPassFailed
_dayPassPending
_tuscanyEndpoint
_dayPass
_maxFrameSize
_currentEdgeType
_dayPassCreationDate
_daypassEndpoint
_retryDate
_dayPassHardExpiry
_parentWaldo
_dayPassSession
T@"NWEndpoint",R,V_daypassEndpoint
T@"NPTunnelTuscanyEndpoint",&,V_tuscanyEndpoint
T@"NSDate",&,V_retryDate
T@"NSUUID",&,V_dayPassUUID
T@"NSData",&,V_dayPass
T@"NSDate",&,V_dayPassCreationDate
Td,V_dayPassHardExpiry
T@"NWNetworkAgentRegistration",&,V_agentRegistration
T@"NSPKeyNetworkAgent",&,V_agent
T@"NPWaldo",W,V_parentWaldo
TB,V_dayPassFailed
T@"NSURLSession",&,V_dayPassSession
TB,V_dayPassPending
TQ,R,V_maxFrameSize
TQ,R,V_rtt
Tq,R,V_currentEdgeType
Ti,V_error
T@"NSDictionary",R
failureReasonToFallbackReason:
lastVisited
lastUsed
edgeSelection
edgeLatencies
probeRateLimit
lastFallbackReason
isProbeInProgress
currentLatencyMap
sortedArrayUsingComparator:
setEdgeLatencies:
isLatency:qualifiedForLatencyMap:parameters:requireUniqueEdges:
setCurrentLatencyMap:
replaceObjectAtIndex:withObject:
unsignedCharValue
compareLastVisited:
lastVisitedDesc
lastUsedDesc
resortEdgeLatenciesUsingComparator:
rebuildLatencyMapWithViewSize:edgeCount:parameters:
mergeNewLatencies:usingComparator:
handleTFOFailedForAddressFamily:
setLastVisited:
setLastUsed:
setLastFallbackReason:
hasIPv6
setHasIPv6:
setProbeRateLimit:
setEdgeSelection:
setIsProbeInProgress:
_hasIPv6
_isProbeInProgress
_lastVisited
_lastUsed
_lastFallbackReason
_edgeLatencies
_currentLatencyMap
_probeRateLimit
_edgeSelection
T@"NSArray",&,V_edgeLatencies
T@"NSArray",&,V_currentLatencyMap
T@"NSDate",&,V_probeRateLimit
T@"NPEdgeSelection",&,V_edgeSelection
TB,V_isProbeInProgress
T@"NSDate",&,N,V_lastVisited
T@"NSDate",&,N,V_lastUsed
T@"NSString",R,N
Tq,V_lastFallbackReason
TB,V_hasIPv6
initWithLabel:index:onRampEndpoint:probeEndpoint:location:
index
onRampLists
currentOnRampIndexList
onRampEndpoint
location
distance
savedEndpoint
iterateOnRampsForAddressFamily:withBlock:
getOnRamp:addressFamily:
onRampForIndex:
setCurrentOnRampIndexList:
currentIndex:
sharedDefaultEvaluator
interfaceIndex
reResolve
setReResolve:
isIPv6Enabled
setAllowUnusableAddresses:
setRequiredAddressFamily:
setSavedEndpoint:
resolvedEndpointArray
unsynthesizeAddresses:
getPortFromEndpoint:defaultPort:
setOnRampLists:
allOnRamps
setAllOnRamps:
getCurrentOnRamp:
nextOnRampForLatency:outIndex:
setCurrentIndex:addressFamily:
compareByDistance:
linkWithOnRampsRetainMissingAddressFamilies:
setIndex:
setDistance:
_probePending
_reResolve
_index
_location
_distance
_onRampLists
_currentOnRampIndexList
_onRampEndpoint
_savedEndpoint
T@"NSDictionary",&,V_onRampLists
T@"NSDictionary",&,V_currentOnRampIndexList
T@"NWEndpoint",R,V_probeEndpoint
T@"NWEndpoint",R,V_onRampEndpoint
T@"NSDate",&,V_lastUsed
T@"NWEndpoint",&,V_savedEndpoint
TB,V_reResolve
T@"NSString",R,V_label
TQ,V_index
T@"NPLocation",R,V_location
Td,V_distance
TB,V_probePending
createEndpointFromHostList:defaultPortString:allowIPv6:
currentNetworkInfo
networkInformation
containsObject:
rebuildLatencyMapAllSignatures:
linkAllSignatures:
linkLatenciesAllSignatures:
indexOfBestEdge
setCurrentEdgeIndex:
setEdges:
source
retryPause
probeTimeout
dayPassSoftExpiry
enableLatencyDerivation
latencyFactorX
latencyFactorA
latencyFactorB
edgeFairnessFactor
observedRTTSampleSize
signatureLimit
reprocessSamplingInterval
reprocessSampleSize
viewSize
connectionIdleTimeoutMaximum
locationCheckInterval
locationToleranceDistance
locationTTL
cachedLocation
locationCheckTimestamp
telemetryURL
telemetryService
useGeohashFromServer
edgeSelectionEnabled
enableIPv6
TFOLeeway
edgesGeneration
usedEdgesGeneration
setRetryPause:
setProbePause:
setProbeTimeout:
setDayPassRequestTimeout:
setDayPassSoftExpiry:
setEnableLatencyDerivation:
setLatencyFactorX:
setLatencyFactorA:
setLatencyFactorB:
setEdgeFairnessFactor:
setObservedRTTSampleSize:
setReprocessSamplingInterval:
setReprocessSampleSize:
setViewSize:
setLocationCheckInterval:
setLocationToleranceDistance:
setLocationTTL:
setDayPassHostname:
setDayPassHostnamePrependLabel:
setDayPassExtendedValidation:
setDayPassEnableSessionTicket:
setDayPassLeafOID:
setDayPassRevocationFailClosed:
setTag:
setTelemetryURL:
setTelemetryService:
setUseGeohashFromServer:
setEdgeSelectionEnabled:
setEdgeSelectionAlpha:
setEdgeSelectionWindowSize:
setEnableIPv6:
setTFOLeeway:
initWithArray:copyItems:
setEdgesGeneration:
setUsedEdgesGeneration:
setSignatureLimit:
setConnectionIdleTimeoutMaximum:
setAccount:
networkAgentsOfType:
removeIPv6Keys
keys
setTFOStatusOverride:
logWithMessage:identifier:
waldoNeedsPolicyReset
edgeCount
edgeAtIndex:
shouldSave
waldoDidSaveToKeychain:
ageOutLatencyMap
defaultConfiguration
edgeSets
locationManager
shouldCheckLocation
isLatenciesCompleteForNetwork:
refreshDayPassesWithCompletionHandler:
pushKeybagToKernel
reprocessWithCompletionHandler:
sortEdgesByDistanceWithCompletionHandler:
pushKeybagToKernelCanReuse:
dayPassFetchCount
initWithOnRamps:currentNetworkInfo:currentEdgeIndex:currentEdgeList:generation:identifier:updateHash:
updateNetworkAgentWithKeybag:networkInfo:
keysSortedByValueUsingSelector:
isEndpointProbed:parameters:latencies:checkSampleSize:incompleteLatency:
cleanupStaleKeys
setCurrentGeohash:
reprocessWithNewRTT:reProbe:
shouldPerformDayPassRefresh
updateMetaDataNeedProbe:refresh:push:minRTT:
setNetworkInformation:
cancelProbes
timestampNetworkSignature:
setReprocessCancelled:
reprocessSamplingTimer
setReprocessSamplingTimer:
mergeEdgeList:forNetworkSignature:
loadObservedRTTSamples:
waldo:didFinishProbingWithSuccess:
reprocessEdgeAtIndex:networkSignature:completionHandler:
latencyComparator
reprocessQueue
hasNetworkPath
createEdgeLatenciesToProbeWithEdgeIndex:startSampleCount:
setReprocessPending:
reprocessLatencies:sampleCount:completionHandler:
probeSize
waldo:didFinishSampleProbingWithSuccess:
reprocessCancelled
getFallbackReasonForLatencies:
startProbingEdges:atIndex:doneCount:sampleCount:completionHandler:
validateEdgeList:
currentPath
currentEdge
resortEdgeListForCurrentNetworkSignature
resetTestLatencyMapIndex:
waldoRequiresTFO:
getDayPassRTT
copyEdgeList:
copyEdgeListRTTAverage:observed:shortDescription:
initWithTimeInterval:sinceDate:
laterDate:
link
merge:missingSettingsOnly:
initFromKeychainWithIdentifier:
removeFromKeychain
establishTrustWithCompletionHandler:
pushKeybagToKernelUpdateGeneration:
removeDayPassesFromKernel
handleUsageReport:
setCurrentNetworkCharacteristics:
getCurrentNetworkInterfaceType
initializeEdgeSelection
shouldFetchWaldo
hasEdges
logLatencyInfoToStdout:logAll:logEdgeSelection:
copyLatencyInfoDictionary:copyAll:
expirationDate
currentNetworkLastUsed
edgeContainingOnRamp:
copyStateIncludeDistance:
incrementSessionCounters
setDayPassPort:
setHostname:
setCachedLocation:
setLocationCheckTimestamp:
locationExpiration
setLocationExpiration:
setLocationManager:
daypassRefreshInProgress
setDaypassRefreshInProgress:
currentEdges
nextEdge
_currentNetworkCharacteristics
_edges
_allOnRamps
_shouldSave
_reprocessPending
_daypassRefreshInProgress
_reprocessCancelled
_source
_dayPassHostname
_dayPassHostnamePrependLabel
_dayPassPort
_dayPassRequestTimeout
_dayPassLeafOID
_dayPassRevocationFailClosed
_dayPassExtendedValidation
_dayPassEnableSessionTicket
_dayPassSoftExpiry
_enableLatencyDerivation
_latencyFactorA
_latencyFactorB
_latencyFactorX
_edgeFairnessFactor
_locationCheckInterval
_locationTTL
_locationToleranceDistance
_viewSize
_probePause
_probeTimeout
_retryPause
_signatureLimit
_observedRTTSampleSize
_reprocessSamplingInterval
_reprocessSampleSize
_connectionIdleTimeoutMaximum
_tag
_telemetryURL
_telemetryService
_useGeohashFromServer
_edgeSelectionEnabled
_edgeSelectionAlpha
_edgeSelectionWindowSize
_enableIPv6
_TFOLeeway
_edgesGeneration
_usedEdgesGeneration
_currentEdgeIndex
_hostname
_cachedLocation
_locationCheckTimestamp
_locationExpiration
_locationManager
_networkInformation
_currentEdges
_nextEdge
_reprocessSamplingTimer
_reprocessQueue
T@"NSMutableDictionary",&,V_networkInformation
T@"NSArray",&
TB,V_daypassRefreshInProgress
T@"NSArray",R,V_currentEdges
Tq,V_currentEdgeIndex
T@"NPTuscanyEdge",R,V_nextEdge
T@"NSArray",R
TB,V_reprocessCancelled
TI,V_generation
T@"NSObject<OS_dispatch_source>",&,V_reprocessSamplingTimer
T@"NSUUID",&,V_configurationIdentifier
T@"NSObject<OS_dispatch_queue>",R,V_reprocessQueue
T@?,R
T@"NSData",&,V_updateHash
T@"NSString",R,V_identifier
Tq,R,V_source
T@"NSNumber",C,V_timestamp
T@"NSNumber",C,V_version
T@"NSString",C,V_dayPassHostname
T@"NSNumber",C,V_dayPassHostnamePrependLabel
T@"NSNumber",C,V_dayPassPort
T@"NSNumber",C,V_dayPassRequestTimeout
T@"NSString",C,V_dayPassLeafOID
T@"NSNumber",C,V_dayPassRevocationFailClosed
T@"NSNumber",C,V_dayPassExtendedValidation
T@"NSNumber",C,V_dayPassEnableSessionTicket
T@"NSArray",C,V_dayPassSoftExpiry
T@"NSNumber",C,V_enableLatencyDerivation
T@"NSNumber",C,V_latencyFactorA
T@"NSNumber",C,V_latencyFactorB
T@"NSNumber",C,V_latencyFactorX
T@"NSNumber",C,V_edgeFairnessFactor
T@"NSNumber",C,V_locationCheckInterval
T@"NSNumber",C,V_locationTTL
T@"NSNumber",C,V_locationToleranceDistance
T@"NSNumber",C,V_viewSize
T@"NSNumber",C,V_probePause
T@"NSNumber",C,V_probeTFO
T@"NSNumber",C,V_probeNoTFOCookie
T@"NSNumber",C,V_probeTimeout
T@"NSNumber",C,V_retryPause
T@"NSNumber",C,V_signatureLimit
T@"NSNumber",C,V_observedRTTSampleSize
T@"NSNumber",C,V_reprocessSamplingInterval
T@"NSNumber",C,V_reprocessSampleSize
T@"NSNumber",C,V_connectionIdleTimeoutMaximum
T@"NSString",C,V_tag
T@"NSURL",C,V_telemetryURL
T@"NSString",C,V_telemetryService
T@"NSNumber",C,V_useGeohashFromServer
T@"NSNumber",C,V_edgeSelectionEnabled
T@"NSNumber",C,V_edgeSelectionAlpha
T@"NSNumber",C,V_edgeSelectionWindowSize
T@"NSNumber",C,V_enableIPv6
T@"NSArray",C
T@"NSNumber",C,V_requireTFO
T@"NSNumber",C,V_TFOLeeway
T@"NSNumber",C,V_edgesGeneration
T@"NSNumber",C,V_usedEdgesGeneration
T@"NPTuscanyEdge",R
Tq,R
T@"NSDate",R
T@"NSString",&,N,V_hostname
T@"<NPWaldoDelegate>",W,V_delegate
TB,V_shouldSave
T@"NPLocation",&,N,V_cachedLocation
T@"NSDate",&,N,V_locationCheckTimestamp
T@"NSDate",&,N,V_locationExpiration
T@"NPWaldo",&,N,V_defaults
T@"NPKeyBag",&,N,V_keybag
T@"NPWaldoLocationManager",&,N,V_locationManager
TB,V_reprocessPending
agentForKey
setSession_counter:
setInfo:
setUuid:
_session_counter
_info
_uuid
TI,V_session_counter
T@"NSData",&,N,V_info
T@"NSUUID",&,N,V_uuid
TI,V_flags
T@"NSPNetworkAgent",R
timeIntervalSinceReferenceDate
evaluateWithObject:
TFOStatusOverride
initWithTimeIntervalSinceReferenceDate:
isEqualToData:
endpointWithCEndpoint:
onRampMap
onRampList
createOnRamps
copyUsableOnRamps:requireTFO:
moveToNextOnRamp
timeSinceLastUsed
updateHashMatchesEdgeSet:
getOnRampForEndpoint:
moveToOnRamp:
setKeys:
lastUsedTimestamp
setLastUsedTimestamp:
setOnRampMap:
setOnRampList:
validOnRampPredicate
setValidOnRampPredicate:
validOnRampWithTFOPredicate
setValidOnRampWithTFOPredicate:
_keys
_TFOStatusOverride
_lastUsedTimestamp
_onRampMap
_onRampList
_validOnRampPredicate
_validOnRampWithTFOPredicate
T@"NSDictionary",&,V_onRampMap
T@"NSArray",&,V_onRampList
T@"NSPredicate",&,V_validOnRampPredicate
T@"NSPredicate",&,V_validOnRampWithTFOPredicate
T@"NSArray",&,N,V_keys
TI,V_index
Tq,V_fallbackReason
TI,N,V_generation
Tq,N,V_TFOStatusOverride
Td,N,V_lastUsedTimestamp
Td,R
initWithDelegate:providerClass:
started
setStarted:
flowDivertControlHandle
createFlowDivertSocketHandle
setFlowDivertControlHandle:
setInitialFlowDivertControlSocket:
startWithOptions:completionHandler:
stop
initFlowDivertControlSocketDisableAppMap:
setShouldResetPolicies:
setPriority:
setPolicySession:
policySession
addPolicy:
getAgentResults:
destroyFlowDivertSocketHandles
teardown
shouldResetPolicies
resetPolicies:
initWithDelegate:providerClass:configuration:
createPolicySession
destroyPolicySession
shouldInstallFlowDivert:
getAgentResultsForSelf
getExecutableConditions:
getEffectiveAppRules:
addPoliciesForDivertDNSOnly:domainConditions:divertResult:
addPoliciesForAgent:conditions:
didStartWithError:
didFailWithError:
_shouldResetPolicies
_started
_flowDivertControlHandle
_policySession
T@"NEPolicySession",&,V_policySession
TB,V_started
TB,V_shouldResetPolicies
T@"NSPConfiguration",&,N,V_configuration
T@"NEFlowDivertFileHandle",&,N,V_flowDivertControlHandle
tokens
appendPrettyInt:withName:andIndent:options:
setTokens:
setExpirationDate:
initWithExpirationDate:
_tokens
_expirationDate
T@"NSMutableArray",&,N,V_tokens
T@"NSDate",&,N,V_expirationDate
proxyInfo
tokenCount
tokenAgentUUID
tokenFetchRetryTimer
setTokenFetchRetryTimer:
setTokenFetchRetryAttempt:
setTokenFetchRetryOnNetworkChange:
setTokenRequestPending:
setTokenFetchRetryDate:
updateUserEventAgentData
setUserEventAgentTokenFetchParameters
resetPendingFetches
mergeTokenStats:
tokenRegistration
teardownTokenAgent
ingressTokenAgentUUID
setTokenFetchRetryInterval:
requestTokensWithCompletionHandler:
tokensFromKeychain
addTokensToAgent
tokenFetchRetryAttempt
tokenFetchRetryOnNetworkChange
tokenFetchRetryDate
useDefaultInterface
reportTokenFetchOutage
setProxyInfo:
tokenInfoList
setTokenInfoList:
setTokenCount:
setTokenRegistration:
setTokenAgentUUID:
tokenPath
setTokenPath:
tokenRequestPending
setUseDefaultInterface:
setReportTokenFetchOutage:
tokenFetchSuccessCount
setTokenFetchSuccessCount:
tokenConsumedCount
setTokenConsumedCount:
tokenExpiredCount
setTokenExpiredCount:
tokenFetchFailedCount
setTokenFetchFailedCount:
agentLowWaterMarkHitCount
setAgentLowWaterMarkHitCount:
cacheLowWaterMarkHitCount
setCacheLowWaterMarkHitCount:
badTokenCount
setBadTokenCount:
missingTokenCount
setMissingTokenCount:
tokenLowWaterMarkReached:
registerTokenAgent:
removeExpiredTokens
addToken:
retryNetworkFetch
dateWithTimeIntervalSinceNow:
numberFromString:
tokenFetchOutage:
networkInterface
sharedTokenManager
cacheTokens:expirationTime:
tokenAdded:
checkCachedTokenCount
retryIntervalFromHTTPResponse:
tokenRateLimited:untilDate:
tokenInfoInvalid:
switchProxy:
tokenFetchFailureWithHttpStatusCode:error:
reportTokenFetchFailure:statusCode:
fetchPrivacyTokensOnInterface:tierType:proxyURL:tokenVendor:tokenIssuancePublicKey:tokenCount:completionHandler:
pathForClientID:
flushTokens
reportErrorForTokenRegistration:error:withOptions:
initWithDelegate:proxyInfo:path:subscriber:useDefaultInterface:
setup
refreshTokenPool:
handlePathChange:
tokenFetchActive
_tokenRequestPending
_tokenFetchRetryOnNetworkChange
_useDefaultInterface
_reportTokenFetchOutage
_proxyInfo
_tokenInfoList
_tokenCount
_tokenRegistration
_tokenAgentUUID
_tokenPath
_tokenFetchRetryTimer
_tokenFetchRetryAttempt
_tokenFetchRetryDate
_tokenFetchSuccessCount
_tokenConsumedCount
_tokenExpiredCount
_tokenFetchFailedCount
_agentLowWaterMarkHitCount
_cacheLowWaterMarkHitCount
_badTokenCount
_missingTokenCount
T@"<NSPProxyTokenDelegate>",W,V_delegate
T@"NSPPrivacyProxyProxyInfo",&,N,V_proxyInfo
T@"NSMutableArray",&,N,V_tokenInfoList
TQ,N,V_tokenCount
T@"NSPPrivacyProxyTokenRegistration",&,N,V_tokenRegistration
T@"NSUUID",&,N,V_tokenAgentUUID
T@"NWPath",&,N,V_tokenPath
TB,N,V_tokenRequestPending
T@"NSObject<OS_dispatch_source>",&,N,V_tokenFetchRetryTimer
TQ,N,V_tokenFetchRetryAttempt
TB,N,V_tokenFetchRetryOnNetworkChange
T@"NSDate",&,N,V_tokenFetchRetryDate
TB,N,V_useDefaultInterface
TB,N,V_subscriber
TB,N,V_reportTokenFetchOutage
TQ,N,V_tokenFetchSuccessCount
TQ,N,V_tokenConsumedCount
TQ,N,V_tokenExpiredCount
TQ,N,V_tokenFetchFailedCount
TQ,N,V_agentLowWaterMarkHitCount
TQ,N,V_cacheLowWaterMarkHitCount
TQ,N,V_badTokenCount
TQ,N,V_missingTokenCount
networkCharacteristics
proxyConnectionSuccess
ingressProxyConnectionTimeout
ingressProxyConnectionRefused
ingressProxyConnectionHostDown
ingressProxyConnectionHostUnreachable
ingressProxyConnectionError
ingressProxyConnectionDNSBlocked
ingressProxyConnectionDNSTimeout
egressProxyConnectionError
originProxyConnectionError
setNetworkCharacteristics:
setProxyConnectionSuccess:
setIngressProxyConnectionTimeout:
setIngressProxyConnectionRefused:
setIngressProxyConnectionHostDown:
setIngressProxyConnectionHostUnreachable:
setIngressProxyConnectionError:
setIngressProxyConnectionDNSBlocked:
setIngressProxyConnectionDNSTimeout:
setEgressProxyConnectionError:
setOriginProxyConnectionError:
resetStats
_networkCharacteristics
_proxyConnectionSuccess
_ingressProxyConnectionTimeout
_ingressProxyConnectionRefused
_ingressProxyConnectionHostDown
_ingressProxyConnectionHostUnreachable
_ingressProxyConnectionError
_ingressProxyConnectionDNSTimeout
_ingressProxyConnectionDNSBlocked
_egressProxyConnectionError
_originProxyConnectionError
T@"NSDictionary",&,N,V_networkCharacteristics
TQ,N,V_proxyConnectionSuccess
TQ,N,V_ingressProxyConnectionTimeout
TQ,N,V_ingressProxyConnectionRefused
TQ,N,V_ingressProxyConnectionHostDown
TQ,N,V_ingressProxyConnectionHostUnreachable
TQ,N,V_ingressProxyConnectionError
TQ,N,V_ingressProxyConnectionDNSTimeout
TQ,N,V_ingressProxyConnectionDNSBlocked
TQ,N,V_egressProxyConnectionError
TQ,N,V_originProxyConnectionError
ingressProxy
egressProxy
allowFallback
appendPrettyBOOL:withName:andIndent:options:
allowFailOpen
geohashSharingEnabled
networkSingleHopAgentStatistics
networkMultiHopAgentStatistics
proxyPathWeight
setIngressProxy:
setEgressProxy:
setProxyPathWeight:
setAllowFailOpen:
setAllowFallback:
setGeohashSharingEnabled:
singleHopRegistered
setSingleHopRegistered:
multiHopRegistered
setMultiHopRegistered:
singleHopRegistration
setSingleHopRegistration:
multiHopRegistration
setMultiHopRegistration:
setNetworkSingleHopAgentStatistics:
setNetworkMultiHopAgentStatistics:
resetSingleHopProxyAgent
resetMultiHopProxyAgent
reportProxySuccessOnInterface:
reportProxyError:interface:proxyPath:
singleHopAgentUnregistered:
multiHopAgentUnregistered:
initWithDelegate:ingressProxy:egressProxy:proxyPathWeight:allowFallback:allowFailOpen:geohashSharingEnabled:networkCharacteristics:
setupSingleHopProxyRegistrations
setupMultiHopProxyRegistrations
isMultiHopRegistered
isSingleHopRegistered
updateIngressProxy:egressProxy:proxyPathWeight:
enableFailOpen:
updateGeohashSharing:
proxyPathIsValid:proxyPathList:
matchIngress:
matchEgress:
handleNetworkCharacteristicsChange:
_allowFallback
_allowFailOpen
_singleHopRegistered
_multiHopRegistered
_geohashSharingEnabled
_ingressProxy
_egressProxy
_proxyPathWeight
_singleHopRegistration
_multiHopRegistration
_networkSingleHopAgentStatistics
_networkMultiHopAgentStatistics
T@"<NSPProxyPathDelegate>",W,V_delegate
T@"NSPProxyTokenInfo",&,N,V_ingressProxy
T@"NSPProxyTokenInfo",&,N,V_egressProxy
TQ,N,V_proxyPathWeight
TB,N,V_allowFallback
TB,N,V_allowFailOpen
TB,N,V_singleHopRegistered
TB,N,V_multiHopRegistered
TB,N,V_geohashSharingEnabled
T@"NSPPrivacyProxyNetworkRegistration",&,N,V_singleHopRegistration
T@"NSPPrivacyProxyNetworkRegistration",&,N,V_multiHopRegistration
T@"NSPProxyAgentNetworkStatistics",&,N,V_networkSingleHopAgentStatistics
T@"NSPProxyAgentNetworkStatistics",&,N,V_networkMultiHopAgentStatistics
singleHopProxyAgentUUID
singleHopFallbackProxyAgentUUID
singleHopAgentRegistered:
multiHopFallbackProxyAgentUUID
multiHopAgentRegistered:
proxiesMatch:proxyPathList:ingressProxy:egressProxy:pathWeight:supportsFallback:
enableFallback:
initWithIngressProxy:egressProxy:proxyPathWeight:
proxyPathReady
probingActive
probeSuccessCount
probeFailedCount
proxyProber
probeConnectionTimeout
probeOnNetworkChange
linkQuality
nextProbeDate
setName:
setProxyProber:
probeSession
setProbeSession:
probeRetryTimer
setProbeRetryTimer:
setProbeConnectionTimeout:
setProbingActive:
setProbeOnNetworkChange:
setLinkQuality:
setNextProbeDate:
setProbeSuccessCount:
setProbeFailedCount:
set_sourceApplicationSecondaryIdentifier:
setProbeRetryTimerWithRetryInterval:
sendProbe:
setUserEventAgentProberParameters
probeFailed:
probeSuccess:
probeFailed
probeSuccess
setProbeParametersForLinkQuality
initWithDelegate:probeName:linkQuality:path:proxyProber:
startProbing
handleLinkQualityChange:
_probingActive
_probeOnNetworkChange
_proxyProber
_linkQuality
_probeSession
_probeRetryTimer
_probeConnectionTimeout
_nextProbeDate
_probeSuccessCount
_probeFailedCount
T@"<NSPProberDelegate>",W,V_delegate
T@"NSString",&,N,V_name
T@"NSURLSession",&,N,V_probeSession
T@"NSObject<OS_dispatch_source>",&,N,V_probeRetryTimer
TQ,N,V_probeCount
TQ,N,V_probeConnectionTimeout
TB,N,V_probingActive
TB,N,V_probeOnNetworkChange
Ti,N,V_linkQuality
T@"NSDate",&,N,V_nextProbeDate
T@"NWPath",&,N,V_path
TB,N,V_probePending
TQ,N,V_probeSuccessCount
TQ,N,V_probeFailedCount
TB,N,V_proxyProber
isEqualToArray:
proxyMatch:proxy2:
proxyTokenInfoArray
quicProxyPath
fallbackProxyPath
candidateQuicProxyPath
candidateFallbackProxyPath
proxyPathCustomEnumerator
fallbackProxyPathCustomEnumerator
tokenIssuanceRestrictedUntilDate
overridePreferredProxy
networkProxiesRotated
networkFallbackProxiesRotated
proxiesRotated
proxyPathProber
directPathProber
proxyArray
proxyPathList
fallbackProxyPathList
lastPathUnsatisfiedDate
lastPrimaryInterfaceChangedDate
setProxyArray:
setProxyPathList:
setProxyPathCustomEnumerator:
setFallbackProxyPathList:
setFallbackProxyPathCustomEnumerator:
setOverridePreferredProxy:
setQuicProxyPath:
setFallbackProxyPath:
setCandidateQuicProxyPath:
setCandidateFallbackProxyPath:
setProxyTokenInfoArray:
setTokenIssuanceRestrictedUntilDate:
tokenIssuanceRestrictedUntilTimer
setTokenIssuanceRestrictedUntilTimer:
setLastPathUnsatisfiedDate:
setLastPrimaryInterfaceChangedDate:
proxyConnectivityCheckActive
setProxyConnectivityCheckActive:
setNetworkProxiesRotated:
setNetworkFallbackProxiesRotated:
setProxiesRotated:
proxyPathEnumeratorRestoreTimer
setProxyPathEnumeratorRestoreTimer:
setProxyPathProber:
setDirectPathProber:
removeProxyInfoFromKeychain
removeUserEventAgentData
multiHopProxyAgentRegistered:
singleHopProxyAgentRegistered:
multiHopFallbackProxyAgentRegistered:
singleHopFallbackProxyAgentRegistered:
copyUserEventAgentData
copyProxyPathRestoreIntervalFromPreferences
copyFromPreferences
copyPreferredProxyFromPreferences
setTokenIssuanceLimitInterval:
setProxyPathEnumeratorRestoreTimerInterval
updateGeohashSharingPreference:
setupCandidateQuicProxyPath
setupCandidateFallbackProxyPath
updateProxyInfo:proxyPathList:fallbackProxyPathList:
alternateEgressProxyExists:proxyPathEnumerator:
nextProxyPath:
proxyPathRestoreIntervalSec
pruneProxyTokenInfoArray
checkTokenFetchOutage
savedConfiguredProxies
proxyPathWithIngressProxyURL:egressProxyURL:
nextProxyPathWithOverride
refreshProxyInfo
getProxyTokenInfoForProxyInfo:
setupQuicProxyPath
fallbackProxyPathWithIngressProxyURL:egressProxyURL:
nextFallbackProxyPathWithOverride
setupFallbackProxyPath
updateProxyTokenInfoArray:
tokenFetchOutage
removeProxyURLFromProxyEnumerator:
removeProxyURLFromFallbackProxyEnumerator:
tokenIssuanceLimitReached
failureReasonCodeFromErrorCode:
failureReasonDescriptionFromReasonCode:
hostAndPortFromURL:
tokenFetchURL
createRTCReportPayloadWithCategory:errorCode:url:
servicenameFromFailureType:
sendOneMessageWithSessionInfo:userInfo:category:type:payload:error:
reportPrivacyProxySuccessOnInterface:
checkPrivacyProxyConnectivityOnInterface:proxyConnectivityCheckType:completionHandler:
startProxyOutageProbing
checkProxyConnectivityOnInterface:proxyConnectivityCheckType:
connectionTimeoutProxyPath:interface:
connectionRefusedProxyPath:interface:
dnsTimeoutProxyPath:interface:
dnsBlockedProxyPath:interface:errorCode:
egressProxyErrorProxyPath:interface:errorCode:
connectionErrorsProxyPath:interface:errorCode:
sendRTCReportWithFailureType:errorCode:url:
proberInterface
proxyConnectivityActive
setProberInterface:
setIngressProxyURL:
setEgressProxyURL:
setCachedIngressToken:
setCachedEgressToken:
setIngressAgentTokens:
setEgressAgentTokens:
setCacheIngressLowWaterMark:
setCacheEgressLowWaterMark:
setIngressAgentLowWaterMark:
setEgressAgentLowWaterMark:
setIngressFallbackProxyURL:
setEgressFallbackProxyURL:
setCachedIngressFallbackToken:
setCachedEgressFallbackToken:
setIngressFallbackAgentTokens:
setEgressFallbackAgentTokens:
setCacheIngressFallbackLowWaterMark:
setCacheEgressFallbackLowWaterMark:
setIngressFallbackAgentLowWaterMark:
setEgressFallbackAgentLowWaterMark:
proxyTokenFetchSuccessCount
setProxyTokenFetchSuccessCount:
proxyTokenFetchFailedCount
setProxyTokenFetchFailedCount:
proxyTokenConsumedCount
setProxyTokenConsumedCount:
proxyTokenExpiredCount
setProxyTokenExpiredCount:
proxyAgentLowWaterMarkHitCount
setProxyAgentLowWaterMarkHitCount:
proxyCacheLowWaterMarkHitCount
setProxyCacheLowWaterMarkHitCount:
setAuxiliaryData:forKey:
copyAuxiliaryDataForKey:
proxyMatchProxyInfoArray:proxy:
initWithDelegate:
setupWithPath:subscriber:geohashSharingEnabled:linkQuality:
handleConfigChange
resetProxyErrors
useDefaultNetworkInterface:
overridePreferredProxy:
isMultiHopProxyAgentRegistered
isSingleHopProxyAgentRegistered
isMultiHopFallbackProxyAgentRegistered
isSingleHopFallbackProxyAgentRegistered
ingressProxyURL
copyProxyInfo:
setSavedConfiguredProxies:
setProxyPathRestoreIntervalSec:
_proxyConnectivityCheckActive
_tokenIssuanceRestrictedUntilDate
_proxyArray
_proxyPathList
_proxyPathCustomEnumerator
_fallbackProxyPathList
_fallbackProxyPathCustomEnumerator
_overridePreferredProxy
_savedConfiguredProxies
_proxyPathEnumeratorRestoreTimer
_proxyPathRestoreIntervalSec
_quicProxyPath
_fallbackProxyPath
_candidateQuicProxyPath
_candidateFallbackProxyPath
_proxyPathProber
_directPathProber
_proberInterface
_proxyTokenInfoArray
_tokenIssuanceRestrictedUntilTimer
_lastPathUnsatisfiedDate
_lastPrimaryInterfaceChangedDate
_networkProxiesRotated
_networkFallbackProxiesRotated
_proxiesRotated
T@"<NSPPrivacyProxyAgentManagerDelegate>",W,V_delegate
T@"NSArray",&,N,V_proxyArray
T@"NSArray",&,N,V_proxyPathList
T@"NSMutableArray",&,N,V_proxyPathCustomEnumerator
T@"NSArray",&,N,V_fallbackProxyPathList
T@"NSMutableArray",&,N,V_fallbackProxyPathCustomEnumerator
T@"NSString",&,N,V_overridePreferredProxy
T@"NSMutableDictionary",&,N,V_savedConfiguredProxies
T@"NSObject<OS_dispatch_source>",&,N,V_proxyPathEnumeratorRestoreTimer
TQ,N,V_proxyPathRestoreIntervalSec
T@"NSPQuicProxyPath",&,N,V_quicProxyPath
T@"NSPFallbackProxyPath",&,N,V_fallbackProxyPath
T@"NSPCandidateQuicProxyPath",&,N,V_candidateQuicProxyPath
T@"NSPCandidateFallbackProxyPath",&,N,V_candidateFallbackProxyPath
T@"NSPProber",&,N,V_proxyPathProber
T@"NSPProber",&,N,V_directPathProber
T@"NWInterface",&,N,V_proberInterface
T@"NSMutableArray",&,N,V_proxyTokenInfoArray
T@"NSDate",&,N,V_tokenIssuanceRestrictedUntilDate
T@"NSObject<OS_dispatch_source>",&,N,V_tokenIssuanceRestrictedUntilTimer
T@"NSDate",&,N,V_lastPathUnsatisfiedDate
T@"NSDate",&,N,V_lastPrimaryInterfaceChangedDate
TB,N,V_proxyConnectivityCheckActive
TQ,N,V_networkProxiesRotated
TQ,N,V_networkFallbackProxiesRotated
TQ,N,V_proxiesRotated
signatureAlgorithm
setSignatureAlgorithm:
_signatureAlgorithm
T@"NSArray",&,N,V_certificates
TQ,N,V_signatureAlgorithm
resurrectionDate
urlRequestTimeout
etag
geohashSharingEnabledStatus
proxyAccountType
proxyAccountTypeToString:
objectForInfoDictionaryKey:
initWithTimestamp:fromDictionary:waldoSource:
loadBuiltinAppRulesFromDisk
setAppRules:
contentsOfDirectoryAtPath:error:
inputStreamWithFileAtPath:
open
streamError
propertyListWithStream:options:format:error:
setEdgeSets:
close
appRules
configServerPath
waldoLeafOID
waldoRevocationFailClosed
persistMetrics
setResurrectionDate:
setConfigServerPath:
setUrlRequestTimeout:
setWaldoLeafOID:
setWaldoRevocationFailClosed:
setConfigServerEnabled:
initWithDictionary:copyItems:
setPersistMetrics:
setUserTier:
setProxyTrafficState:
setEtag:
setConfigurationFetchDate:
setCloudSubscriptionCheckEnabled:
setGeohashSharingEnabledStatus:
setProxyAccountType:
setConfigServerHost:
configServerPort
setConfigServerPort:
enumerateEdgeSetsWithBlock:
addEntriesFromDictionary:
_socketStreamProperties
privacyProxyURLSession
setPrivacyProxyURLSession:
setupNSURLSession
earlierDate:
isDead
getEdgeSetForAppRule:
authURL
scheme
validateSignature:publicKey:signedData:
validatePrivacyProxyConfiguration:
verifyConfigurationSignature:configuration:host:validateCert:completionHandler:
initFromKeychain
copyAgentResultsForAppRule:
updateNetworkAgents
earliestEnableCheckDate
evaluateEnableRatios
dayPassExpirationDate
createConfigFetchURLWithDomain:timestamp:
getEdgeSetForSigningIdentifier:
getCurrentKeyBagForAppRule:
resetStaleEdgeSets
incrementSessionCountersOnFirstLaunch
_configServerHost
_etag
_resurrectionDate
_appRules
_configServerEnabled
_configServerPort
_configServerPath
_urlRequestTimeout
_waldoLeafOID
_waldoRevocationFailClosed
_privacyProxyURLSession
_edgeSets
_persistMetrics
_userTier
_proxyTrafficState
_configurationFetchDate
_cloudSubscriptionCheckEnabled
_geohashSharingEnabledStatus
_proxyAccountType
T@"NSNumber",&,V_version
T@"NSPConfiguration",&,V_defaults
T@"NSNumber",C,V_enabled
T@"NSString",C,V_etag
T@"NSDate",C,V_resurrectionDate
T@"NSArray",C,V_appRules
T@"NSNumber",C,V_configServerEnabled
T@"NSString",C
T@"NSNumber",C,V_configServerPort
T@"NSString",C,V_configServerPath
T@"NSNumber",C,V_urlRequestTimeout
T@"NSString",C,V_waldoLeafOID
T@"NSNumber",C,V_waldoRevocationFailClosed
T@"NSURLSession",&,N,V_privacyProxyURLSession
T@"NSDictionary",&,N,V_edgeSets
T@"NSNumber",C,V_persistMetrics
T@"NSPPrivacyProxyConfiguration",C,V_proxyConfiguration
T@"NSNumber",C,N,V_userTier
T@"NSNumber",C,V_proxyTrafficState
T@"NSDate",C,V_configurationFetchDate
T@"NSNumber",C,V_cloudSubscriptionCheckEnabled
T@"NSNumber",&,N,V_geohashSharingEnabledStatus
T@"NSNumber",&,N,V_proxyAccountType
networkStatusString
networkTypeString
_networkType
_networkName
TQ,V_networkStatus
Ti,V_networkType
T@"NSString",&,V_networkName
details
_networkStatuses
_details
TQ,V_serviceStatus
T@"NSArray",&,V_networkStatuses
T@"NSDictionary",&,V_details
serviceStatusStartTime
_serviceStatusStartTime
_serviceStatusEndTime
T@"NSDate",&,V_serviceStatusStartTime
T@"NSDate",&,V_serviceStatusEndTime
cursor
offset
setOffset:
setCursor:
parse8Bits:
advanceBy:andCopyTo:
_bytes
_cursor
_offset
Tr*,R,V_bytes
Tr*,V_cursor
TQ,V_offset
egressProxyURL
cachedIngressToken
cachedEgressToken
ingressAgentTokens
egressAgentTokens
ingressAgentLowWaterMark
egressAgentLowWaterMark
cacheEgressLowWaterMark
cacheIngressLowWaterMark
ingressFallbackProxyURL
egressFallbackProxyURL
cachedIngressFallbackToken
cachedEgressFallbackToken
ingressFallbackAgentTokens
egressFallbackAgentTokens
ingressFallbackAgentLowWaterMark
egressFallbackAgentLowWaterMark
cacheEgressFallbackLowWaterMark
cacheIngressFallbackLowWaterMark
unactivatedTokenCount
activatedTokenCount
deviceIdentityValidationCount
anisetteValidationCount
configFetchedSuccessCount
configFetchedFailedCount
setDeviceIdentityValidationCount:
setAnisetteValidationCount:
setUnactivatedTokenCount:
setActivatedTokenCount:
setConfigFetchedSuccessCount:
setConfigFetchedFailedCount:
_egressProxyURL
_ingressProxyURL
_cachedEgressToken
_cachedIngressToken
_ingressAgentTokens
_egressAgentTokens
_ingressAgentLowWaterMark
_egressAgentLowWaterMark
_cacheEgressLowWaterMark
_cacheIngressLowWaterMark
_egressFallbackProxyURL
_ingressFallbackProxyURL
_cachedEgressFallbackToken
_cachedIngressFallbackToken
_ingressFallbackAgentTokens
_egressFallbackAgentTokens
_ingressFallbackAgentLowWaterMark
_egressFallbackAgentLowWaterMark
_cacheEgressFallbackLowWaterMark
_cacheIngressFallbackLowWaterMark
_deviceIdentityValidationCount
_anisetteValidationCount
_unactivatedTokenCount
_activatedTokenCount
_proxyTokenFetchSuccessCount
_proxyTokenFetchFailedCount
_proxyTokenConsumedCount
_proxyTokenExpiredCount
_proxyAgentLowWaterMarkHitCount
_proxyCacheLowWaterMarkHitCount
_configFetchedSuccessCount
_configFetchedFailedCount
T@"NSString",&,N,V_egressProxyURL
T@"NSString",&,N,V_ingressProxyURL
TQ,N,V_cachedEgressToken
TQ,N,V_cachedIngressToken
TQ,N,V_ingressAgentTokens
TQ,N,V_egressAgentTokens
TQ,N,V_ingressAgentLowWaterMark
TQ,N,V_egressAgentLowWaterMark
TQ,N,V_cacheEgressLowWaterMark
TQ,N,V_cacheIngressLowWaterMark
T@"NSString",&,N,V_egressFallbackProxyURL
T@"NSString",&,N,V_ingressFallbackProxyURL
TQ,N,V_cachedEgressFallbackToken
TQ,N,V_cachedIngressFallbackToken
TQ,N,V_ingressFallbackAgentTokens
TQ,N,V_egressFallbackAgentTokens
TQ,N,V_ingressFallbackAgentLowWaterMark
TQ,N,V_egressFallbackAgentLowWaterMark
TQ,N,V_cacheEgressFallbackLowWaterMark
TQ,N,V_cacheIngressFallbackLowWaterMark
TQ,N,V_deviceIdentityValidationCount
TQ,N,V_anisetteValidationCount
TQ,N,V_unactivatedTokenCount
TQ,N,V_activatedTokenCount
TQ,N,V_proxyTokenFetchSuccessCount
TQ,N,V_proxyTokenFetchFailedCount
TQ,N,V_proxyTokenConsumedCount
TQ,N,V_proxyTokenExpiredCount
TQ,N,V_proxyAgentLowWaterMarkHitCount
TQ,N,V_proxyCacheLowWaterMarkHitCount
TQ,N,V_configFetchedSuccessCount
TQ,N,V_configFetchedFailedCount
setMatchingAppRule:
createAppRuleMapWithRules:
matchingAppRule
flowDivert
setFlowDivert:
changeHandler
handlePolicyUpdate
inUseKeybag
tunnelConnectedHandler
setTunnelConnectedHandler:
connectionInfoSetHandler
createReplacementEndpointForEndpoint:properties:
getAppRuleMatchingParameters:flowProperties:
setInUseKeybag:
handleUsageReport:fromClient:
copyStateForClient:withPeerEndpoint:outWaldoInfo:
usesNetworkAgentType:
proxySettings
buildTestLatencyMap:
container:didStartWithError:
container:didFailWithError:
container:didRequestFlowDivertControlSocketWithCompletionHandler:
container:didSetTunnelConfiguration:completionHandler:
waitForTunnelsToCancelWithCompletionHandler:
startWithConfiguration:appRules:delegate:
shouldSetConfigurationToAppRule:edgeSet:
ingestTestLatencyMap:local:completionHandler:
pathEvaluator
setChangeHandler:
setConnectionInfoSetHandler:
policyEvaluator
flowInfoMap
setFlowInfoMap:
currentAgents
setCurrentAgents:
fallbackCounts
knownFlows
pendingCancellationHandler
setPendingCancellationHandler:
testLatencyMap
setTestLatencyMap:
testFetchDaypass
setTestFetchDaypass:
testLatencyMapIndex
setTestLatencyMapIndex:
nextFlowID
setNextFlowID:
tunnelCount
setTunnelCount:
currentTunnelEndpoint
setCurrentTunnelEndpoint:
_testFetchDaypass
_tunnelCount
_pathEvaluator
_changeHandler
_connectionInfoSetHandler
_tunnelConnectedHandler
_policyEvaluator
_inUseKeybag
_flowDivert
_flowInfoMap
_currentAgents
_fallbackCounts
_matchingAppRule
_knownFlows
_pendingCancellationHandler
_testLatencyMap
_testLatencyMapIndex
_currentTunnelEndpoint
T@"NWPathEvaluator",R,N,V_policyEvaluator
T@"NSDictionary",&,V_appRules
T@"NPKeyBag",&,V_keybag
T@"NPKeyBag",&,V_inUseKeybag
T@"NSPFlowDivert",&,V_flowDivert
T@"NSMutableDictionary",&,N,V_flowInfoMap
TB,N,V_isObserving
T@"NSArray",&,N,V_currentAgents
T@"NSMutableDictionary",R,N,V_fallbackCounts
T@"<NSPManagerDelegate>",W,N,V_delegate
T@"NSPAppRule",&,V_matchingAppRule
T@"NSMutableArray",R,N,V_knownFlows
T@?,C,N,V_pendingCancellationHandler
T@"NSArray",&,V_testLatencyMap
TB,V_testFetchDaypass
TQ,V_testLatencyMapIndex
TI,N,V_nextFlowID
TI,N,V_tunnelCount
T@"NSObject<OS_nw_endpoint>",&,N,V_currentTunnelEndpoint
T@"NWPathEvaluator",R,N,V_pathEvaluator
T@?,C,N,V_changeHandler
T@?,C,N,V_connectionInfoSetHandler
T@?,C,N,V_tunnelConnectedHandler
TB,V_disableIdleTimeout
setHasAuthType:
hasAuthType
_authURL
T@"NSString",&,N,V_authURL
tokenAgentRegistration
tokenAgent
setLowWaterMark:
resetTokenAgentFileHandle
setTokenAgent:
setTokenAgentRegistration:
_tokenAgent
_tokenAgentRegistration
T@"<NSPPrivacyProxyTokenRegistrationDelegate>",W,V_delegate
T@"NSPPrivacyProxyTokenAgent",&,N,V_tokenAgent
T@"NWNetworkAgentRegistration",&,N,V_tokenAgentRegistration
setTrueClientIPAddress:
setTimeoutIntervalForRequest:
tokenFetchURLSession
setTokenFetchURLSession:
tokenWaitingActivationWithContent:error:
activateTokenWithServerResponse:error:
keyId
tokenContent
totalRequestedTokenCount
setTotalRequestedTokenCount:
initWithPublicKey:error:
generateTokensUsingTokenBlinder:tokenCount:
totalUnactivatedTokenCount
setTotalUnactivatedTokenCount:
blindedMessage
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
trueClientIPAddress
authenticationClass
setHTTPBody:
activateTokens:unactivatedListFromServer:
dateWithTimeIntervalSince1970:
totalActivatedTokenCount
setTotalActivatedTokenCount:
fetchRequest:requestType:session:completionHandler:
updateTokenFetchURL:authenticationType:ignoreInvalidCerts:
generateRandomTokens:
copyTokenInfo:
setAuthenticationClass:
setTokenFetchURL:
_authenticationClass
_tokenFetchURL
_tokenFetchURLSession
_totalRequestedTokenCount
_totalUnactivatedTokenCount
_totalActivatedTokenCount
_trueClientIPAddress
T#,N,V_authenticationClass
T@"NSString",&,N,V_tokenFetchURL
T@"NSURLSession",&,N,V_tokenFetchURLSession
TQ,N,V_totalRequestedTokenCount
TQ,N,V_totalUnactivatedTokenCount
TQ,N,V_totalActivatedTokenCount
T@"NSString",&,N,V_trueClientIPAddress
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
@40@0:8@16@24@32
v32@0:8@16@?24
v24@0:8@?16
d24@0:8d16
q16@0:8
v24@0:8q16
d16@0:8
v24@0:8d16
v16@0:8
@"NSData"
@"NSNumber"
@"NSMutableDictionary"
@32@0:8@16q24
Q16@0:8
v24@0:8Q16
C16@0:8
v20@0:8C16
I16@0:8
v20@0:8I16
@"NSString"
@"NSUUID"
@48@0:8@16@24^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v}32@40
v32@0:8@16@24
v48@0:8@16@24@32^v40
@"NSMutableArray"
@"NWUDPSession"
@"NSDate"
@"NWEndpoint"
#16@0:8
@24@0:8^{_NSZone=}16
@24@0:8Q16
i16@0:8
v20@0:8i16
v20@0:8B16
@20@0:8i16
i24@0:8@16
B24@0:8@16
@"NSPPrivacyProxyConfiguration"
{?="algorithm"b1}
^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v}16@0:8
I36@0:8^{nw_frame_array_s=^{nw_frame}^^{nw_frame}}16I24I28I32
[4Q]
{nw_protocol="flow_id"[16C]"identifier"^{nw_protocol_identifier}"callbacks"^{nw_protocol_callbacks}"output_handler"^{nw_protocol}"handle"^v"default_input_handler"^{nw_protocol}"output_handler_context"^v}
{nw_frame_array_s="tqh_first"^{nw_frame}"tqh_last"^^{nw_frame}}
@64@0:8@16@24@32@40@48@56
v40@0:8Q16@24q32
^v16@0:8
v24@0:8^v16
@"NPTunnelFlow"
@"NSPPrivacyProxyAuthenticationInfo"
{?="disableUntil"b1"enabled"b1}
B28@0:8i16@20
@"NSData"16@0:8
@"NSString"16@0:8
v24@0:8@"NSString"16
@"NSUUID"16@0:8
v24@0:8@"NSUUID"16
@24@0:8@"NSData"16
B24@0:8@"NSDictionary"16
v24@0:8@"NSDictionary"16
B28@0:8i16@"NSDictionary"20
@"NSObject<OS_nw_proxy_config>"
@"NSObject<NSPPrivacyProxyConfigAgentDelegate>"
@"NSObject<NSPPrivacyProxyTokenAgentDelegate>"
B28@0:8@16B24
v28@0:8@16B24
@24@0:8q16
@32@0:8q16@24
@"NSPDNSPacket"
v40@0:8@16Q24Q32
B48@0:8@16^q24^q32^@40
@"NPWaldo"
@?16@0:8
@"NSObject<OS_dispatch_source>"
@"NSPConnectionInfo"
@"NSPPrivacyProxyPolicy"
@"NSArray"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
v36@0:8@16i24@28
v36@0:8@"NSPPrivacyProxyConfigAgent"16i24@"NSDictionary"28
@"<NSPPrivacyProxyNetworkRegistrationDelegate>"
@"NSPPrivacyProxyConfigAgent"
@"NWNetworkAgentRegistration"
@32@0:8@16@24
B80@0:8@16@24@32@40@48@56@64B72B76
B52@0:8@16@24@32@40B48
B72@0:8@16@24@32@40@48@56B64B68
B44@0:8@16@24@32B40
v40@0:8@16@24@32
q24@0:8@16
q32@0:8@16@24
v64@0:8@16@24@32@40@48^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v}56
@32@0:8r^v16Q24
v32@0:8@16^d24
Q24@0:8@16
B32@0:8@16@24
B36@0:8@16@24B32
q24@0:8^{__SecCertificate=}16
v32@0:8@16Q24
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
B32@0:8@16@?24
B24@0:8q16
@"NSURLSession"
@"NSOperationQueue"
@"NSURLSessionDataTask"
v48@0:8d16d24@32@40
v28@0:8B16@?20
v32@0:8Q16@?24
v40@0:8Q16Q24@?32
v48@0:8q16q24@32@?40
v24@0:8@?<v@?@"NSPConfiguration">16
v32@0:8@"NSPConfiguration"16@?<v@?@"NSString">24
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v40@0:8@"NPWaldo"16@"NSString"24@?<v@?@"NSString">32
v40@0:8@"NSPAppRule"16@"NSString"24@?<v@?@"NSString">32
v32@0:8@"NSString"16@?<v@?@"NSString">24
v24@0:8@?<v@?B@"NSString">16
v32@0:8@"NPUsageReport"16@"NSString"24
v48@0:8d16d24@"NSDate"32@"NSString"40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSDictionary"@"NSString"@"NSURL">32
v32@0:8@"NSDictionary"16@?<v@?B>24
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v32@0:8@"NSData"16@?<v@?@"NSDictionary"@"NSError">24
v28@0:8B16@?<v@?@"NSError">20
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"PrivacyProxyServiceStatus"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"PrivacyProxyNetworkStatus"16@?<v@?@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v40@0:8Q16Q24@?<v@?@"NSError">32
v32@0:8@"NSData"16@?<v@?B>24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"PrivacyProxyInfo"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v48@0:8q16q24@"NSString"32@?<v@?@"NSError">40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_xpc_object>"
@"NSMutableData"
@"NSURL"
@40@0:8@16q24q32
@28@0:8i16Q20
@"PrivacyProxyNetworkStatus"
@28@0:8B16@20
v48@0:8Q16@24@32@40
B36@0:8Q16i24@28
v36@0:8@16@24i32
@"PrivacyProxyServiceStatus"
@"NSObject<NSPServiceStatusManagerDelegate>"
@"NSPUserNotification"
{?="weight"b1}
@48@0:8@16@24Q32@40
@"NPTunnel"
@"NSPAppRule"
@"NPFlowProperties"
@"NSObject<OS_dispatch_data>"
^Q16@0:8
v24@0:8^Q16
@"NPTunnelTuscanyEndpoint"
@"NSDictionary"
[32C]
@"NSPConfiguration"
B40@0:8@16@24@32
@28@0:8@16B24
Q24@0:8Q16
B32@0:8@16^{networkParameters=BB}24
B20@0:8B16
@"NPAverage"
@"NWTCPConnection"
@"NSPNetworkAgent"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
i24@0:8q16
@32@0:8Q16@24
v28@0:8^@16I24
@"NEAppProxyFlow"
@"NSObject<OS_nw_connection>"
@"NSError"
@"NSObject<OS_os_transaction>"
v36@0:8B16@20@?28
@76@0:8@16@24@32@40@48B56@60@?68
B32@0:8^{nw_frame_array_s=^{nw_frame}^^{nw_frame}}16Q24
^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v}
v44@0:8B16@20@28@?36
v40@0:8Q16@24@?32
v48@0:8Q16Q24@32@?40
@56@0:8I16@20@28S36S40@44B52
@36@0:8@16B24@28
v36@0:8I16@20@28
@40@0:8@16@24B32B36
@44@0:8i16@20@28@36
@48@0:8@16@24@32@40
@32@0:8B16B20@24
v24@0:8^{nw_frame_array_s=^{nw_frame}^^{nw_frame}}16
v32@0:8Q16@24
@"NPTuscanyOnRamp"
v32@0:8q16@?24
@"NSPManager"
v40@0:8@"NSMutableURLRequest"16@"NSPPrivacyProxyTokenActivationQuery"24@?<v@?Bi>32
@"NSPPrivacyProxyBAAValidation"
@"NSPPrivacyProxyTokenInfo"
{?="tokenExpiryTimestamp"b1}
{?="supportsFallback"b1}
@56@0:8@16@24@32@40@48
B24@0:8Q16
@32@0:8Q16q24
v32@0:8Q16Q24
@"NSObject<OS_nw_parameters>"
@"NSObject<OS_nw_endpoint>"
@"NSObject<OS_nw_path>"
@"<NPTunnelDelegate>"
@40@0:8d16d24@32
I44@0:8^v16I24I28r*32I40
v56@0:8@16d24d32@40@?48
B24@0:8d16
@"NSPKeyNetworkAgent"
q20@0:8I16
B44@0:8@16@24^{networkParameters=BB}32B40
v40@0:8@16Q24^{networkParameters=BB}32
@"NPEdgeSelection"
@56@0:8@16Q24@32@40@48
@32@0:8@16^q24
v32@0:8q16@24
@"NPLocation"
@36@0:8@16@24B32
@48@0:8@16@24@32q40
v36@0:8B16B20B24Q28
B52@0:8@16^{networkParameters=BB}24@32B40^@44
@32@0:8Q16^Q24
v40@0:8@16Q24@?32
B32@0:8Q16^B24
v56@0:8@16Q24Q32Q40@?48
v32@0:8@16B24B28
@32@0:8@16B24B28
v28@0:8B16B20B24
@24@0:8B16B20
@20@0:8B16
@"<NPWaldoDelegate>"
@"NPKeyBag"
@"NPWaldoLocationManager"
@"NPTuscanyEdge"
@68@0:8@16@24q32@40I48@52@60
@"NSPredicate"
@40@0:8@16#24@32
@"NEFlowDivertFileHandle"
@"NEPolicySession"
v32@0:8C16S20r^v24
v36@0:8@"NSPPrivacyProxyTokenRegistration"16i24@"NSDictionary"28
@48@0:8@16@24@32B40B44
d24@0:8@16
@"<NSPProxyTokenDelegate>"
@"NSPPrivacyProxyProxyInfo"
@"NSPPrivacyProxyTokenRegistration"
@"NWPath"
v36@0:8@"NSPPrivacyProxyNetworkRegistration"16i24@"NSDictionary"28
@68@0:8@16@24@32Q40B48B52B56@60
v40@0:8@16@24Q32
@"<NSPProxyPathDelegate>"
@"NSPProxyTokenInfo"
@"NSPPrivacyProxyNetworkRegistration"
@"NSPProxyAgentNetworkStatistics"
@40@0:8@16@24Q32
@48@0:8@16@24i32@36B44
@"<NSPProberDelegate>"
B60@0:8@16@24@32@40Q48B56
v32@0:8@16d24
v32@0:8@16q24
v24@0:8@"NSPProxyTokenInfo"16
v32@0:8@"NSPProxyTokenInfo"16d24
v32@0:8@"NSString"16q24
v36@0:8i16@20@28
v24@0:8@"NSPProxyPath"16
v24@0:8@"NWInterface"16
v36@0:8i16@"NWInterface"20@"NSPProxyPath"28
v24@0:8@"NSPProber"16
v36@0:8@16B24B28i32
q20@0:8i16
@36@0:8q16i24@28
v36@0:8q16i24@28
@"<NSPPrivacyProxyAgentManagerDelegate>"
@"NSPQuicProxyPath"
@"NSPFallbackProxyPath"
@"NSPCandidateQuicProxyPath"
@"NSPCandidateFallbackProxyPath"
@"NSPProber"
@"NWInterface"
B40@0:8@16^{__SecKey=}24@32
v52@0:8@16@24@32B40@?44
@40@0:8@16@24q32
@36@0:8Q16i24@28
B32@0:8Q16^v24
C24@0:8^B16
S24@0:8^B16
I24@0:8^B16
r*24@0:8Q16
@20@0:8C16
r*16@0:8
v24@0:8r*16
v24@0:8@"NPTunnel"16
v32@0:8@"NPTunnel"16q24
v32@0:8@"NEAppProxyProviderContainer"16@"NSError"24
v32@0:8@"NEAppProxyProviderContainer"16@?<v@?@"NSFileHandle">24
v40@0:8@"NEAppProxyProviderContainer"16@"NETunnelNetworkSettings"24@?<v@?@"NSError">32
@32@0:8@16^{nw_protocol=[16C]^{nw_protocol_identifier}^{nw_protocol_callbacks}^{nw_protocol}^v^{nw_protocol}^v}24
v36@0:8@16B24@?28
Q32@0:8@16^{networkParameters=BB}24
@"NWPathEvaluator"
@"NSPFlowDivert"
@"<NSPManagerDelegate>"
{?="authType"b1}
v24@0:8@"NSPPrivacyProxyTokenAgent"16
v36@0:8@"NSPPrivacyProxyTokenAgent"16i24@"NSDictionary"28
@"<NSPPrivacyProxyTokenRegistrationDelegate>"
@"NSPPrivacyProxyTokenAgent"
B32@0:8@16i24B28
@32@0:8@16Q24
v72@0:8@16@24@32@40@48Q56@?64
v44@0:8@16i24@28@?36
v24@0:8#16
0123456789abcdef
"3DUfw
3"3DUfw
U"3DUfw
