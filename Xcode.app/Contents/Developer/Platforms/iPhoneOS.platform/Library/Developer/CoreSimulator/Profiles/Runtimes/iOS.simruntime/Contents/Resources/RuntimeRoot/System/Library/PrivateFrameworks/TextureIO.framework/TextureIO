@(#)PROGRAM:TextureIO  PROJECT:TextureIO-3.10.10
)@)\
?333333
KTX 11
Unsupported filter
Mipmap Generation of 3D textures not suppoted
Cannot scale image with pixel format
newScaledImageWithLancosFilter
TXRDataScaler.m
!"Unrecognized scale filter"
!"VImage scale error"
newScaledImageWithBoxFilter
!"TODO:Box filter needs implementation"
TXRErrorDomain
TXRErrorKey
-[TXRTexture initWithData:bufferAllocator:options:error:]
TXRTexture.m
!"TODO: Must Implement"
TXRTexture can only export to the KTX texture fil format
Range Location must be an index of an existing mipmap level
-[TXRTexture copyWithPixelFormat:options:bufferAllocator:]
Could not find resource %@ at specified location.
com.apple.txrtextureloaderfileio
TXRFileDataSourceProvider.m
!"TODO: Must be able to return error to dipatching thread"
v8@?0
-[TXRFileDataSourceProvider initWithData:bufferAllocator:options:error:]_block_invoke
-[TXRFileDataSourceProvider _parseData:bufferAllocator:options:error:]
!"Unhandled fileType"
RGBFloat32ToShareExponent32
TXRFloatConvert.h
maxm <= MAX_RGB9E5_MANTISSA
rm <= MAX_RGB9E5_MANTISSA
gm <= MAX_RGB9E5_MANTISSA
bm <= MAX_RGB9E5_MANTISSA
info
properties
levels
fixed
level-mode
+[TXRAssetCatalogParser exportSetConfig:face:directoryPath:error:]
TXRAssetCatalogParser.m
!"TODO: Iterate through MipFileAttributes list"
!"TODO: Iterate through all mipmaps of given face output images and write stuff"
none
level-0
 face-%d
.png
.jpg
filename
mipmap-level
base
%@/%@
%@/%@.cubetextureset
%@/%@.textureset
%@/Contents.json
Unexpected format of Contents.json
Value of properties key is not an object
textures
Value of textures key is not an array
Could not create folder hierarchy for texture name
Could not create Content.json for hierarchy of texture name
interpretation
non-premultiplied-colors
+[TXRAssetCatalogParser exportSet:location:error:]
TXRAssetInterpretationData == set.interpretation
data
bottom-left
origin
Inconsistant set specifed.  Some mipmapsets specified are cubemap textures while other mipmapsets are 2D textures
Universal
universal
iPhone
iphone
iPad
ipad
Apple TV
CarPlay
Metal 1v2
metal1v2
Metal 2v2
metal2v2
Metal 3v1
metal3v1
Metal 3v2
metal3v2
1 GB
2 GB
3 GB
4 GB
sRGB
r-8-unorm
rg-8-unorm
rgba-8-unorm
rgba-8-unorm-sRGB
r-16-float
rg-16-float
rgba-16-float
rgb-10-extended-range-sRGB
astc-4x4
astc-4x4-sRGB
astc-8x8
astc-8x8-sRGB
idiom
!"Invalid face index"
cube-face
memory
graphics-feature-set
color-space
scale
pixel-format
.mipmapset
version
author
TextureIO
Image decoding failed
+[TXRParserImageIO determineColorSpaceClass:displayGamut:options:]
TXRParserImageIO.m
!"Unhandled color space handling option"
+[TXRParserImageIO decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:]
!"Invalid TXROriginOperation"
Could retrieve image data from CGImageRef
!"Unhandled vertical flipping case for 1 component pixels"
!"Unhandled vertical flipping case for 2 component pixels"
!"TODO: must handle vertical flipping for 3 component pixels"
!"Unhandled vertical flipping case for 4 component pixels"
Unable to vertically flip image
!"Unhandled horizontal flipping case for 1 component pixels"
!"Unhandled horizontal flipping case for 2 component pixels"
!"TODO: must handle horizontal flipping for 3 component pixels"
!"Unhandled horizontal flipping case for 4 component pixels"
Unable to horizontally flip image
!"Unhandled rotation case for 1 component pixels"
!"Unhandled rotation case for 2 component pixels"
!"TODO: must handle rotation for 3 component pixels"
!"Unhandled rotation case for 4 component pixels"
Could not create CG Image with URL
Could not create CG Destination Image with URL
Cannot create CGImage with given colorSpace.  ColorModel of colorSpace must be Monochrome or RGB 
!"Unhandled or compressed format"
componentsPerPixel
!"Unhandled format"
The config being added is a cubemap but configs already in set are not.  The two types cannot be mixed
The config being added is a not a cubemap but configs already in set are.  The two types cannot be mixed
compressedFormatInfo
!"Unhandled compressed format"
Only little endian KTX files are supported
Could not determine format from KTX header
com.apple.txrtextureloaderparser
Apple TextureIO
TextureIO major verison
TextureIO minor verison
Cannot create file at %@
Invalid TXRTexture object: Level 0 has %d array elments but level %d has %d elements
TXRFormatInfoFuncs.h
pixelBytes
Cannot decompress from specified format
+[TXRDataConverter newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:]
TXRDataConverter.m
!"Couldn't create decoder"
!"Unhandled source format during compression"
Cannot compress to specified format
!"Couldn't create encoder"
convertToFloat4Slow
!"Unhandled Format"
convertFromFloat4Slow
TXROptions
NSCopying
TXRDefaultBufferMap
TXRBufferMap
NSObject
TXRDefaultBuffer
TXRBuffer
TXRDefaultBufferAllocator
TXRBufferAllocator
TXRDataScaler
TXRImage
TXRArrayElement
TXRMipmapLevel
TXRTexture
TXRDeferredImageInfo
TXRDeferredElementInfo
TXRDeferredMipmapInfo
TXRDeferredTextureInfo
TXRFileDataSourceProvider
TXRDataSourceProvider
TXRAssetCatalogParser
TXRParserImageIO
TXRParser
TXRImageInfo
TXRTextureInfo
TXRAssetCatalogFileAttributes
TXRAssetCatalogMipFileAttributes
TXRAssetCatalogConfig
TXRAssetCatalogSet
TXRPixelFormatInfo
TXRParserKTX
TXRDataConverter
TXRImageIndependent
T^v,R,N
JSONObjectWithStream:options:error:
_interpretation
T,N,V_dimensions
_offset
T@"<TXRBuffer>",&,N,V_buffer
_parser
T@"NSArray",R
configs
T@"NSArray",R,V_configs
dealloc
T@"NSError",&,V_error
deferredProvide
T@"NSMutableArray",R,N,V_elements
initWithFormat:
T@"NSMutableArray",R,N,V_mipmaps
initWithString:
T@"NSString",C,N,V_name
isETC2:
T@"TXRAssetCatalogFileAttributes",&,N,V_baseFileAttributes
isProxy
T@"TXRTexture",R,N,V_texture
T@"TXRTextureInfo",R,N
newCGImageWithColorSpace:error:
TB,N,V_cubemap
release
TB,N,V_multiplyAlpha
setBytesPerRow:
TC,N,V_exifOrientation
setScaleFactor:
TQ,N,V_alphaInfo
texture
.cxx_destruct
_buffer
T#,R
_memory
T,R,N,V_dimensions
_origin
T@"<TXRBuffer>",R,V_buffer
addFileAttributesForLevel:face:
T@"NSArray",R,N,V_mipmapLevels
cubemap
T@"NSArray",R,V_faces
decodeCGImage:desiredPixelFormat:bufferAllocator:options:error:
T@"NSError",R,V_error
exifOrientation
T@"NSMutableArray",R,N,V_faces
initWithLength:
T@"NSSet",R,N,V_fileAttributesList
isASTC:
T@"NSString",R,C
isGammaEncoded:
T@"TXRImageInfo",&,N,V_info
isSRGB:
T@"TXRTextureInfo",&,N,V_info
mipmaps
T@"TXRTextureInfo",R,N,V_textureInfo
originOperation
TB,N,V_cubemapFromVerticallyStackedImage
setArrayLength:
TB,R,N,V_cubemap
setPixelFormat:
TQ,N
specifyAllFaces
TQ,N,V_arrayLength
TQ,N,V_bytesPerImage
TQ,N,V_bytesPerRow
TQ,N,V_colorSpaceHandling
TQ,N,V_displayColorSpace
TQ,N,V_fileFormat
TQ,N,V_graphicsFeatureSet
TQ,N,V_idiom
TQ,N,V_interpretation
TQ,N,V_level
TQ,N,V_memory
TQ,N,V_mipmapLevelCount
TQ,N,V_mipmapOption
TQ,N,V_offset
TQ,N,V_origin
TQ,N,V_originOperation
TQ,N,V_pixelFormat
TQ,N,V_scaleFactor
TQ,R
TQ,R,N,V_alphaInfo
TQ,R,N,V_pixelFormat
TQ,R,V_offset
T^{CGColorSpace=},N
_alphaInfo
_arrayLength
_baseFileAttributes
_bufferAllocator
_bytes
_bytesOfKeyValueData
_bytesPerImage
_bytesPerRow
_colorSpace
_colorSpaceHandling
_configs
_cubemap
_cubemapFromVerticallyStackedImage
_data
_dataSourceProvider
_deferredTextureInfo
_determineFileType:
_dimensions
_displayColorSpace
_element
_elements
_error
_exifOrientation
_face
_faces
_fileAttributesList
_fileFormat
_fileIOQueue
_graphicsFeatureSet
_idiom
_imageInfo
_info
_infoLoaded
_internalSizedFormatLookup
_isCompressed
_level
_mipmapLevelCount
_mipmapLevels
_mipmapOption
_mipmaps
_multiplyAlpha
_name
_originOperation
_parseData:bufferAllocator:options:error:
_parserQueue
_pixelFormat
_scaleFactor
_shouldFlipVertically
_texture
_textureInfo
absoluteString
addConfig:error:
addFileAttributesForLevel:
addFileAttributesForLevel:face:fileFormat:colorSpace:exifOrientation:
addFileAttributesForLevel:fileFormat:colorSpace:exifOrientation:
addObject:
allocWithZone:
alphaInfo
appendString:
arrayLength
autorelease
baseFileAttributes
buffer
bytes
bytesPerImage
bytesPerRow
caseInsensitiveCompare:
checkResourceIsReachableAndReturnError:
class
close
colorSpace
colorSpaceHandling
componentsPerPixel:
componentsSeparatedByString:
conformsToProtocol:
copyWithPixelFormat:options:bufferAllocator:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
cubemapFromVerticallyStackedImage
debugDescription
decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:
defaultManager
description
determineColorSpaceClass:displayGamut:options:
determineFormatFromType:format:internalFormat:baseInternalFormat:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dimensions
displayColorSpace
doesSpecifyAllFaces
elements
error
exportAtLocation:error:
exportImage:url:uttype:colorSpace:orientation:error:
exportSet:location:error:
exportSetConfig:face:directoryPath:error:
exportTexture:url:error:
exportToAssetCatalogWithName:location:error:
exportToURL:error:
exportToURL:uttype:error:
face
faces
fileAttributesList
fileExistsAtPath:isDirectory:
fileFormat
fileSystemRepresentation
fileURLWithPath:
generateMipmapsForRange:filter:error:
getBytes:length:
graphicsFeatureSet
handlesData:
hasAlpha:
hash
idiom
info
init
initAsCubemap:
initAsLevel:arrayLength:cubemap:dataSourceProvider:
initAsLevel:dimensions:pixelFormat:alphaInfo:arrayLength:cubemap:bufferAllocator:
initAsLevel:element:cubemap:dataSourceProvider:
initAsLevel:element:dimensions:pixelFormat:alphaInfo:cubemap:bufferAllocator:
initAsLevel:element:face:dataSourceProvider:
initFileURLWithPath:isDirectory:
initForBuffer:withBytes:
initToFileAtPath:append:
initWithArrayLength:cubemap:
initWithBytes:length:
initWithBytesPerRow:bytesPerImage:buffer:offset:
initWithCGImage:bufferAllocator:options:error:
initWithCGImage:pixelFormat:bufferAllocator:options:error:
initWithCapacity:
initWithContentsOfURL:bufferAllocator:options:error:
initWithContentsOfURL:options:error:
initWithData:bufferAllocator:options:error:
initWithData:zone:
initWithDataSourceProvider:
initWithDictionary:
initWithDimensions:pixelFormat:alphaInfo:bufferAllocator:
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
initWithDimensions:pixelFormat:alphaInfo:mipmapLevelCount:arrayLength:cubemap:bufferAllocator:
initWithDomain:code:userInfo:
initWithFileAtPath:
initWithImage:dimensions:pixelFormat:
initWithImage:dimensions:pixelFormat:alphaInfo:
initWithMipmapLevelCount:arrayLength:cubemap:
initWithName:
initWithTexture:
initWithURL:bufferAllocator:options:error:
initWithUnsignedChar:
integerValue
interpretation
isBC1to5:
isBC6to7:
isCompressed:
isEqual:
isFloat:
isInteger:
isKindOfClass:
isMemberOfClass:
isPVRTC:
lastPathComponent
level
memory
mipmapLevelCount
mipmapLevels
mipmapOption
multiplyAlpha
mutableBytes
name
newBufferWithBytesNoCopy:length:deallocNotification:error:
newBufferWithLength:
newCGImageFromImage:colorSpace:error:
newImageFromSourceImage:bufferAllocattor:filter:error:
newImageFromSourceImage:newPixelFormat:bufferAllocator:gammaDegamma:error:
newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:
newImageFromSourceImage:scaledDimensions:bufferAllocattor:filter:error:
newPixelFormatSetForCGImage:displayGamut:options:
nextObject
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectEnumerator
objectForKeyedSubscript:
offset
open
origin
packedMemoryLayoutForFormat:dimensions:
parseData:bufferAllocator:options:error:
parseImageData:WithOptions:bufferAllocator:
parsedImageAtLevel:element:face:
pathExtension
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelBytes:
pixelFormat
provideImageInfoAtLevel:element:face:
provideTextureInfo
reformat:gammaDegamma:bufferAllocator:error:
removeObject:
removeObjectForKey:
respondsToSelector:
retain
retainCount
scaleFactor
self
setAlphaInfo:
setBaseFileAttributes:
setBuffer:
setBytesPerImage:
setColorSpace:
setColorSpaceHandling:
setCubemap:
setCubemapFromVerticallyStackedImage:
setDimensions:
setDisplayColorSpace:
setError:
setExifOrientation:
setFace:
setFileFormat:
setGraphicsFeatureSet:
setIdiom:
setImage:atElement:atFace:
setImage:atFace:
setInfo:
setInterpretation:
setLevel:
setMemory:
setMipmapLevelCount:
setMipmapOption:
setMultiplyAlpha:
setName:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setOffset:
setOrigin:
setOriginOperation:
setString:
signalLoaded
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
superclass
textureInfo
writeJSONObject:toStream:options:error:
zone
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
Q16@0:8
v24@0:8Q16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^v16@0:8
@32@0:8@16^v24
v16@0:8
@"TXRDefaultBuffer"
@"<TXRBufferMap>"16@0:8
@32@0:8@16^{_NSZone=}24
@32@0:8^v16Q24
@24@0:8Q16
@"NSMutableData"
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
@48@0:8@16@24Q32^@40
@64@0:8@1624@40Q48^@56
@48@0:8Q16Q24@32Q40
@48@0:8Q16Q24Q32@40
@"<TXRBuffer>"
@"NSError"
@"<TXRDataSourceProvider>"
@44@0:8Q16Q24B32@36
@76@0:8Q16Q2432Q48Q56B64@68
v32@0:8@16Q24
@"NSMutableArray"
@76@0:8Q1624Q40Q48Q56B64@68
v40@0:8@16Q24Q32
@24@0:8@16
@48@0:8@16@24@32^@40
@76@0:816Q32Q40Q48Q56B64@68
@40@0:8@16@24^@32
B32@0:8@16^@24
v44@0:8Q16B24@28^@36
v48@0:8{_NSRange=QQ}16Q32^@40
@40@0:8Q16@24@32
16@0:8
@"<TXRBufferAllocator>"
v24@0:8@16
@"NSObject<OS_dispatch_semaphore>"
@"TXRImageInfo"
@20@0:8B16
@28@0:8Q16B24
@36@0:8Q16Q24B32
@"TXRTextureInfo"
@40@0:8Q16Q24Q32
@"TXRImageInfo"40@0:8Q16Q24Q32
@"TXRTextureInfo"16@0:8
Q24@0:8@16
v48@0:8@16@24@32^@40
@"NSObject<OS_dispatch_queue>"
@"<TXRParser>"
B44@0:8@16I24@28^@36
i40@0:8^{CGImage=}16Q24@32
@56@0:8^{CGImage=}16Q24@32@40^@48
B40@0:8@16@24^@32
B60@0:8@16@24r^{__CFString=}32^{CGColorSpace=}40C48^@52
^{CGImage=}40@0:8@16^{CGColorSpace=}24^@32
B48@0:8@16@24@32^@40
B48@0:8@"NSData"16@"<TXRBufferAllocator>"24@"TXROptions"32^@40
B24@0:8@"NSData"16
v32@0:816
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
C16@0:8
v20@0:8C16
^{CGColorSpace=}
v32@0:8Q16Q24
v44@0:8Q16Q24^{CGColorSpace=}32C40
v52@0:8Q16Q24Q32^{CGColorSpace=}40C48
@"TXRTexture"
@"TXRAssetCatalogFileAttributes"
@"NSMutableSet"
@32@0:8@16^@24
@"NSString"
C24@0:8Q16
B24@0:8Q16
{TXRImageMemoryLayout=QQ}40@0:8Q1624
v40@0:8@16@24@32
Q32@0:8I16I20I24I28
@"NSDictionary"
@"TXRDeferredTextureInfo"
@56@0:8@16Q24@32B40B44^@48
@52@0:8@16Q24@32B40^@44
@40@0:8^{CGImage=}16Q24@32
@56@0:8@1624Q40Q48
@48@0:8@1624Q40
@80@0:816Q32Q40Q48Q56@64Q72
@48@0:8^{CGImage=}16@24@32^@40
@56@0:816Q32Q40@48
B40@0:8@16r^{__CFString=}24^@32
^{CGImage=}32@0:8^{CGColorSpace=}16^@24
@(#)PROGRAM:TextureIO  PROJECT:TextureIO-3.10.10
)@)\
?333333
@"R
V<V
#WYW
PQ$$$$$$$PQ
E[p[
9CwC
,?p?
7Q8m
:5;!
<?u?
Ovvvvvvv%PbP
1ZeZ
?<|<
=V=E
=M=-
1)2e2
1@1}1
.Q.
*cVc
Ogxg
G/}/
:+w+
@@q@
7>p>
=I=z=
.?_?
_]`y
"IXI
cDd7
GhH!I
kcAd
IJzJ
>7}7
6wdw
8/a/
AGwG
`aa<
<LaL=
 JHJ
@JqJ
55{5
<KjK
b[ci
cUdL
$aZa
+*g*
A)~)
11k1
($)D)
93^3
Bdnd
%P%n%
H+g+
77h7
4@4q4
5JaJ
%6V6
ZZZZHH
ZZZZZZ
ZZZZZZ99HH99HHZZHZHZ
HHHHZZ
#'Z*.147;?BFZZZ
#'Z*.147;?BF
KTX 11
'nttttttttnnnnnttttt]t]]]]tttt]]]]]ttttt]]]]ttttttttt
tttt
tttt
ttttt
tttttttt
tttttttttkkkttttktkkkktttttttmmmtttttttttttttttttttttttttttttttttttttttttttt
iiiiBB
iiiiii
iiiiiiAABBAABBiiBiBi
BBBBii
 )41i8
<?".
&iii
 )41i8
<?".
Unsupported filter
Mipmap Generation of 3D textures not suppoted
Cannot scale image with pixel format
newScaledImageWithLancosFilter
TXRDataScaler.m
!"Unrecognized scale filter"
!"VImage scale error"
newScaledImageWithBoxFilter
!"TODO:Box filter needs implementation"
TXRErrorDomain
TXRErrorKey
-[TXRTexture initWithData:bufferAllocator:options:error:]
TXRTexture.m
!"TODO: Must Implement"
TXRTexture can only export to the KTX texture fil format
Range Location must be an index of an existing mipmap level
-[TXRTexture copyWithPixelFormat:options:bufferAllocator:]
Could not find resource %@ at specified location.
com.apple.txrtextureloaderfileio
TXRFileDataSourceProvider.m
!"TODO: Must be able to return error to dipatching thread"
v8@?0
-[TXRFileDataSourceProvider initWithData:bufferAllocator:options:error:]_block_invoke
-[TXRFileDataSourceProvider _parseData:bufferAllocator:options:error:]
!"Unhandled fileType"
RGBFloat32ToShareExponent32
TXRFloatConvert.h
maxm <= MAX_RGB9E5_MANTISSA
rm <= MAX_RGB9E5_MANTISSA
gm <= MAX_RGB9E5_MANTISSA
bm <= MAX_RGB9E5_MANTISSA
info
properties
levels
fixed
level-mode
+[TXRAssetCatalogParser exportSetConfig:face:directoryPath:error:]
TXRAssetCatalogParser.m
!"TODO: Iterate through MipFileAttributes list"
!"TODO: Iterate through all mipmaps of given face output images and write stuff"
none
level-0
 face-%d
.png
.jpg
filename
mipmap-level
base
%@/%@
%@/%@.cubetextureset
%@/%@.textureset
%@/Contents.json
Unexpected format of Contents.json
Value of properties key is not an object
textures
Value of textures key is not an array
Could not create folder hierarchy for texture name
Could not create Content.json for hierarchy of texture name
interpretation
non-premultiplied-colors
+[TXRAssetCatalogParser exportSet:location:error:]
TXRAssetInterpretationData == set.interpretation
data
bottom-left
origin
Inconsistant set specifed.  Some mipmapsets specified are cubemap textures while other mipmapsets are 2D textures
Universal
universal
iPhone
iphone
iPad
ipad
Apple TV
CarPlay
Metal 1v2
metal1v2
Metal 2v2
metal2v2
Metal 3v1
metal3v1
Metal 3v2
metal3v2
1 GB
2 GB
3 GB
4 GB
sRGB
r-8-unorm
rg-8-unorm
rgba-8-unorm
rgba-8-unorm-sRGB
r-16-float
rg-16-float
rgba-16-float
rgb-10-extended-range-sRGB
astc-4x4
astc-4x4-sRGB
astc-8x8
astc-8x8-sRGB
idiom
!"Invalid face index"
cube-face
memory
graphics-feature-set
color-space
scale
pixel-format
.mipmapset
version
author
TextureIO
Image decoding failed
+[TXRParserImageIO determineColorSpaceClass:displayGamut:options:]
TXRParserImageIO.m
!"Unhandled color space handling option"
+[TXRParserImageIO decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:]
!"Invalid TXROriginOperation"
Could retrieve image data from CGImageRef
!"Unhandled vertical flipping case for 1 component pixels"
!"Unhandled vertical flipping case for 2 component pixels"
!"TODO: must handle vertical flipping for 3 component pixels"
!"Unhandled vertical flipping case for 4 component pixels"
Unable to vertically flip image
!"Unhandled horizontal flipping case for 1 component pixels"
!"Unhandled horizontal flipping case for 2 component pixels"
!"TODO: must handle horizontal flipping for 3 component pixels"
!"Unhandled horizontal flipping case for 4 component pixels"
Unable to horizontally flip image
!"Unhandled rotation case for 1 component pixels"
!"Unhandled rotation case for 2 component pixels"
!"TODO: must handle rotation for 3 component pixels"
!"Unhandled rotation case for 4 component pixels"
Could not create CG Image with URL
Could not create CG Destination Image with URL
Cannot create CGImage with given colorSpace.  ColorModel of colorSpace must be Monochrome or RGB 
pixelBytes
TXRFormatInfoFuncs.h
!"Unhandled or compressed format"
componentsPerPixel
!"Unhandled format"
The config being added is a cubemap but configs already in set are not.  The two types cannot be mixed
The config being added is a not a cubemap but configs already in set are.  The two types cannot be mixed
compressedFormatInfo
!"Unhandled compressed format"
Only little endian KTX files are supported
Could not determine format from KTX header
com.apple.txrtextureloaderparser
KTXorientation
S=r,T=d,R=i
File Origin
Apple TextureIO
TextureIO major verison
TextureIO minor verison
Cannot create file at %@
Invalid TXRTexture object: Level 0 has %d array elments but level %d has %d elements
Cannot decompress from specified format
+[TXRDataConverter newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:]
TXRDataConverter.m
!"Couldn't create decoder"
!"Unhandled source format during compression"
Cannot compress to specified format
!"Couldn't create encoder"
convertToFloat4Slow
!"Unhandled Format"
convertFromFloat4Slow
TXROptions
NSCopying
TXRDefaultBufferMap
TXRBufferMap
NSObject
TXRDefaultBuffer
TXRBuffer
TXRDefaultBufferAllocator
TXRBufferAllocator
TXRDataScaler
TXRImage
TXRArrayElement
TXRMipmapLevel
TXRTexture
TXRDeferredImageInfo
TXRDeferredElementInfo
TXRDeferredMipmapInfo
TXRDeferredTextureInfo
TXRFileDataSourceProvider
TXRDataSourceProvider
TXRAssetCatalogParser
TXRParserImageIO
TXRParser
TXRImageInfo
TXRTextureInfo
TXRAssetCatalogFileAttributes
TXRAssetCatalogMipFileAttributes
TXRAssetCatalogConfig
TXRAssetCatalogSet
TXRPixelFormatInfo
TXRParserKTX
TXRDataConverter
TXRImageIndependent
T^v,R,N
JSONObjectWithStream:options:error:
_interpretation
T,N,V_dimensions
_offset
T@"<TXRBuffer>",&,N,V_buffer
_parser
T@"NSArray",R
configs
T@"NSArray",R,V_configs
dealloc
T@"NSError",&,V_error
deferredProvide
T@"NSMutableArray",R,N,V_elements
initWithFormat:
T@"NSMutableArray",R,N,V_mipmaps
initWithString:
T@"NSString",C,N,V_name
isETC2:
T@"TXRAssetCatalogFileAttributes",&,N,V_baseFileAttributes
isProxy
T@"TXRTexture",R,N,V_texture
T@"TXRTextureInfo",R,N
newCGImageWithColorSpace:error:
TB,N,V_cubemap
release
TB,N,V_multiplyAlpha
setBytesPerRow:
TC,N,V_exifOrientation
setScaleFactor:
TQ,N,V_alphaInfo
texture
.cxx_destruct
_buffer
T#,R
_memory
T,R,N,V_dimensions
_origin
T@"<TXRBuffer>",R,V_buffer
addFileAttributesForLevel:face:
T@"NSArray",R,N,V_mipmapLevels
cubemap
T@"NSArray",R,V_faces
decodeCGImage:desiredPixelFormat:bufferAllocator:options:error:
T@"NSError",R,V_error
exifOrientation
T@"NSMutableArray",R,N,V_faces
initWithLength:
T@"NSSet",R,N,V_fileAttributesList
isASTC:
T@"NSString",R,C
isGammaEncoded:
T@"TXRImageInfo",&,N,V_info
isSRGB:
T@"TXRTextureInfo",&,N,V_info
mipmaps
T@"TXRTextureInfo",R,N,V_textureInfo
originOperation
TB,N,V_cubemapFromVerticallyStackedImage
setArrayLength:
TB,R,N,V_cubemap
setPixelFormat:
TQ,N
specifyAllFaces
TQ,N,V_arrayLength
TQ,N,V_bytesPerImage
TQ,N,V_bytesPerRow
TQ,N,V_colorSpaceHandling
TQ,N,V_displayColorSpace
TQ,N,V_fileFormat
TQ,N,V_graphicsFeatureSet
TQ,N,V_idiom
TQ,N,V_interpretation
TQ,N,V_level
TQ,N,V_memory
TQ,N,V_mipmapLevelCount
TQ,N,V_mipmapOption
TQ,N,V_offset
TQ,N,V_origin
TQ,N,V_originOperation
TQ,N,V_pixelFormat
TQ,N,V_scaleFactor
TQ,R
TQ,R,N,V_alphaInfo
TQ,R,N,V_pixelFormat
TQ,R,V_offset
T^{CGColorSpace=},N
_alphaInfo
_arrayLength
_baseFileAttributes
_bufferAllocator
_bytes
_bytesOfKeyValueData
_bytesPerImage
_bytesPerRow
_colorSpace
_colorSpaceHandling
_configs
_cubemap
_cubemapFromVerticallyStackedImage
_data
_dataSourceProvider
_deferredTextureInfo
_determineFileType:
_dimensions
_displayColorSpace
_element
_elements
_error
_exifOrientation
_face
_faces
_fileAttributesList
_fileFormat
_fileIOQueue
_graphicsFeatureSet
_idiom
_imageInfo
_info
_infoLoaded
_internalSizedFormatLookup
_isCompressed
_level
_mipmapLevelCount
_mipmapLevels
_mipmapOption
_mipmaps
_multiplyAlpha
_name
_originOperation
_parseData:bufferAllocator:options:error:
_parserQueue
_pixelFormat
_scaleFactor
_shouldFlipVertically
_texture
_textureInfo
absoluteString
addConfig:error:
addFileAttributesForLevel:
addFileAttributesForLevel:face:fileFormat:colorSpace:exifOrientation:
addFileAttributesForLevel:fileFormat:colorSpace:exifOrientation:
addObject:
allocWithZone:
alphaInfo
appendString:
arrayLength
autorelease
baseFileAttributes
buffer
bytes
bytesPerImage
bytesPerRow
caseInsensitiveCompare:
checkResourceIsReachableAndReturnError:
class
close
colorSpace
colorSpaceHandling
componentsPerPixel:
componentsSeparatedByString:
conformsToProtocol:
copyWithPixelFormat:options:bufferAllocator:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
cubemapFromVerticallyStackedImage
debugDescription
decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:
defaultManager
description
determineColorSpaceClass:displayGamut:options:
determineFormatFromType:format:internalFormat:baseInternalFormat:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dimensions
displayColorSpace
doesSpecifyAllFaces
elements
error
exportAtLocation:error:
exportImage:url:uttype:colorSpace:orientation:error:
exportSet:location:error:
exportSetConfig:face:directoryPath:error:
exportTexture:url:error:
exportToAssetCatalogWithName:location:error:
exportToURL:error:
exportToURL:uttype:error:
face
faces
fileAttributesList
fileExistsAtPath:isDirectory:
fileFormat
fileSystemRepresentation
fileURLWithPath:
generateMipmapsForRange:filter:error:
getBytes:length:
graphicsFeatureSet
handlesData:
hasAlpha:
hash
idiom
info
init
initAsCubemap:
initAsLevel:arrayLength:cubemap:dataSourceProvider:
initAsLevel:dimensions:pixelFormat:alphaInfo:arrayLength:cubemap:bufferAllocator:
initAsLevel:element:cubemap:dataSourceProvider:
initAsLevel:element:dimensions:pixelFormat:alphaInfo:cubemap:bufferAllocator:
initAsLevel:element:face:dataSourceProvider:
initFileURLWithPath:isDirectory:
initForBuffer:withBytes:
initToFileAtPath:append:
initWithArrayLength:cubemap:
initWithBytes:length:
initWithBytesPerRow:bytesPerImage:buffer:offset:
initWithCGImage:bufferAllocator:options:error:
initWithCGImage:pixelFormat:bufferAllocator:options:error:
initWithCapacity:
initWithContentsOfURL:bufferAllocator:options:error:
initWithContentsOfURL:options:error:
initWithData:bufferAllocator:options:error:
initWithData:zone:
initWithDataSourceProvider:
initWithDictionary:
initWithDimensions:pixelFormat:alphaInfo:bufferAllocator:
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
initWithDimensions:pixelFormat:alphaInfo:mipmapLevelCount:arrayLength:cubemap:bufferAllocator:
initWithDomain:code:userInfo:
initWithFileAtPath:
initWithImage:dimensions:pixelFormat:
initWithImage:dimensions:pixelFormat:alphaInfo:
initWithMipmapLevelCount:arrayLength:cubemap:
initWithName:
initWithTexture:
initWithURL:bufferAllocator:options:error:
initWithUnsignedChar:
integerValue
interpretation
isBC1to5:
isBC6to7:
isCompressed:
isEqual:
isFloat:
isInteger:
isKindOfClass:
isMemberOfClass:
isPVRTC:
lastPathComponent
level
memory
mipmapLevelCount
mipmapLevels
mipmapOption
multiplyAlpha
mutableBytes
name
newBufferWithBytesNoCopy:length:deallocNotification:error:
newBufferWithLength:
newCGImageFromImage:colorSpace:error:
newImageFromSourceImage:bufferAllocattor:filter:error:
newImageFromSourceImage:newPixelFormat:bufferAllocator:gammaDegamma:error:
newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:
newImageFromSourceImage:scaledDimensions:bufferAllocattor:filter:error:
newPixelFormatSetForCGImage:displayGamut:options:
nextObject
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectEnumerator
objectForKeyedSubscript:
offset
open
origin
packedMemoryLayoutForFormat:dimensions:
parseData:bufferAllocator:options:error:
parseImageData:WithOptions:bufferAllocator:
parsedImageAtLevel:element:face:
pathExtension
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pixelBytes:
pixelFormat
provideImageInfoAtLevel:element:face:
provideTextureInfo
reformat:gammaDegamma:bufferAllocator:error:
removeObject:
removeObjectForKey:
respondsToSelector:
retain
retainCount
scaleFactor
self
setAlphaInfo:
setBaseFileAttributes:
setBuffer:
setBytesPerImage:
setColorSpace:
setColorSpaceHandling:
setCubemap:
setCubemapFromVerticallyStackedImage:
setDimensions:
setDisplayColorSpace:
setError:
setExifOrientation:
setFace:
setFileFormat:
setGraphicsFeatureSet:
setIdiom:
setImage:atElement:atFace:
setImage:atFace:
setInfo:
setInterpretation:
setLevel:
setMemory:
setMipmapLevelCount:
setMipmapOption:
setMultiplyAlpha:
setName:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setOffset:
setOrigin:
setOriginOperation:
setString:
signalLoaded
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
superclass
textureInfo
writeJSONObject:toStream:options:error:
zone
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
Q16@0:8
v24@0:8Q16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^v16@0:8
@32@0:8@16^v24
v16@0:8
@"TXRDefaultBuffer"
@"<TXRBufferMap>"16@0:8
@32@0:8@16^{_NSZone=}24
@32@0:8^v16Q24
@24@0:8Q16
@"NSMutableData"
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
@48@0:8@16@24Q32^@40
@64@0:8@1624@40Q48^@56
@48@0:8Q16Q24@32Q40
@48@0:8Q16Q24Q32@40
@"<TXRBuffer>"
@"NSError"
@"<TXRDataSourceProvider>"
@44@0:8Q16Q24B32@36
@76@0:8Q16Q2432Q48Q56B64@68
v32@0:8@16Q24
@"NSMutableArray"
@76@0:8Q1624Q40Q48Q56B64@68
v40@0:8@16Q24Q32
@24@0:8@16
@48@0:8@16@24@32^@40
@76@0:816Q32Q40Q48Q56B64@68
@40@0:8@16@24^@32
B32@0:8@16^@24
v44@0:8Q16B24@28^@36
v48@0:8{_NSRange=QQ}16Q32^@40
@40@0:8Q16@24@32
16@0:8
@"<TXRBufferAllocator>"
v24@0:8@16
@"NSObject<OS_dispatch_semaphore>"
@"TXRImageInfo"
@20@0:8B16
@28@0:8Q16B24
@36@0:8Q16Q24B32
@"TXRTextureInfo"
@40@0:8Q16Q24Q32
@"TXRImageInfo"40@0:8Q16Q24Q32
@"TXRTextureInfo"16@0:8
Q24@0:8@16
v48@0:8@16@24@32^@40
@"NSObject<OS_dispatch_queue>"
@"<TXRParser>"
B44@0:8@16I24@28^@36
i40@0:8^{CGImage=}16Q24@32
@56@0:8^{CGImage=}16Q24@32@40^@48
B40@0:8@16@24^@32
B60@0:8@16@24r^{__CFString=}32^{CGColorSpace=}40C48^@52
^{CGImage=}40@0:8@16^{CGColorSpace=}24^@32
B48@0:8@16@24@32^@40
B48@0:8@"NSData"16@"<TXRBufferAllocator>"24@"TXROptions"32^@40
B24@0:8@"NSData"16
v32@0:816
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
C16@0:8
v20@0:8C16
^{CGColorSpace=}
v32@0:8Q16Q24
v44@0:8Q16Q24^{CGColorSpace=}32C40
v52@0:8Q16Q24Q32^{CGColorSpace=}40C48
@"TXRTexture"
@"TXRAssetCatalogFileAttributes"
@"NSMutableSet"
@32@0:8@16^@24
@"NSString"
C24@0:8Q16
B24@0:8Q16
{TXRImageMemoryLayout=QQ}40@0:8Q1624
v40@0:8@16@24@32
Q32@0:8I16I20I24I28
@"NSDictionary"
@"TXRDeferredTextureInfo"
@56@0:8@16Q24@32B40B44^@48
@52@0:8@16Q24@32B40^@44
@40@0:8^{CGImage=}16Q24@32
@56@0:8@1624Q40Q48
@48@0:8@1624Q40
@80@0:816Q32Q40Q48Q56@64Q72
@48@0:8^{CGImage=}16@24@32^@40
@56@0:816Q32Q40@48
B40@0:8@16r^{__CFString=}24^@32
^{CGImage=}32@0:8^{CGColorSpace=}16^@24
