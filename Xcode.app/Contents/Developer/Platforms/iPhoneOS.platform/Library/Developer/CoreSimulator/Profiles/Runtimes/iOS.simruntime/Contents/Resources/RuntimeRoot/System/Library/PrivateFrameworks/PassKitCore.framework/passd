defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
currentRunLoop
archivedDataWithRootObject:requiringSecureCoding:error:
null
initWithObjects:
unarchivedObjectOfClasses:fromData:error:
_predicateForEngagementMessagesWithPassQualifier:
_predicateForActiveEngagementMessagesWithPassQualifier:
_predicateForCheckingRelevantDate:
arrayWithObjects:count:
predicateMatchingAllPredicates:
_engagementMessagesInDatabase:matchingPredicate:
_predicateForEngagementMessageIdentifier:
anyInDatabase:predicate:
setMessageOrder
queryWithDatabase:predicate:orderingProperties:
init
initWithPersistentID:inDatabase:
engagementMessage
addObject:
enumeratePersistentIDsAndProperties:usingBlock:
copy
identifier
engagementMessageWithIdentifier:inDatabase:
alloc
initWithEngagementMessage:messageOrder:inDatabase:
setMessageOrder:
updateWithEngagementMessage:
_dictWithPropertiesForEngagementMessage:
initWithPropertyValues:inDatabase:
setAction:
_propertySettersForEngagementMessage
allKeys
countByEnumeratingWithState:objects:count:
isEqualToString:
objectForKey:
initWithStartDate:endDate:
setRelevantDateRange:
getValuesForProperties:withApplier:
setValuesWithDictionary:
queryWithDatabase:predicate:
deleteAllEntities
doesNotContainPredicateWithProperty:values:
truePredicate
deleteFromDatabase
predicateWithProperty:equalToValue:
numberWithInteger:
isNullPredicateWithProperty:
predicateWithProperty:lessThanOrEqualToValue:
predicateMatchingAnyPredicates:
predicateWithProperty:greaterThanOrEqualToValue:
setIdentifier:
integerValue
setVersion:
setRuleIdentifier:
setOsVersionRange:
setPassQualifier:
setTitleKey:
setMessageKey:
action
setType:
setIconURLs:
setActionInfo:
setStatus:
setViewCount:
boolValue
setReportIdentifier:
setMaxViewCount:
dictionaryWithObjects:forKeys:count:
dictionary
setObjectOrNull:forKey:
version
setInteger:forKey:
ruleIdentifier
osVersionRange
passQualifier
titleKey
messageKey
type
iconURLs
actionInfo
status
relevantDateRange
startDate
endDate
viewCount
canReportIdentifier
setBool:forKey:
maxViewCount
applyPropertySetters:toObject:withProperties:values:
databaseTable
engagementMessagesForPassQualifier:active:relevantDate:inDatabase:
insertOrUpdateEngagementMessage:messageOrder:inDatabase:
updateEngagementMessage:inDatabase:
deleteEngagementMessageWithIdentifier:inDatabase:
deleteEngagementMessagesNotIncludingIdentifiers:inDatabase:
deleteAllEngagementMessagesInDatabase:
messageOrder
_messageOrder
initWithMachServiceName:
setDelegate:
resume
initWithDelegate:
initWithFieldDetector:notificationStreamManager:assertionManager:
registerConsumer:
sharedInstance
mainInitializationRequestingUpdatedCriteria:
start
stringByAppendingPathComponent:
fileURLWithPath:
databaseExistsAtURL:
removeLastEventIdentifier
initWithURL:delegate:
sharedSecureElement
setSecureElementSessionPrelude:
setSecureElementSessionPostlude:
initWithArchiveFileURL:databaseManager:assertionManager:delegate:
setDatabaseManager:
setUsageNotificationServer:
initWithDatabaseManager:notificationManager:assertionManager:secureElement:remoteInterfacePresenter:
registerObserver:
setExpressPassManager:
initWithDatabaseManager:notificationManager:expressPassManager:secureElement:transactionProcessor:delegate:
addDelegate:
setDataSource:
initWithPushNotificationManager:
initWithDelegate:cloudStoreCoordinatorDelegate:
initWithPushNotificationManager:databaseManager:passStore:userNotificationManager:assertionManager:cloudStoreCoordinatorDelegate:idsManager:
sharedWebService
initWithPushNotificationManager:paymentWebService:assertionManager:userNotificationManager:dataSource:passStore:
initWithPushNotificationManager:paymentWebServiceCoordinator:databaseManager:userNotificationManager:
setAccountManager:
initWithAccountManager:notificationStreamManager:userNotificationManager:databaseManager:paymentWebServiceCoordinator:peerPaymentWebServiceCoordinator:
initWithAccountManager:
initWithPushNotificationManager:paymentWebServiceCoordinator:databaseManager:accountManager:
initWithApplyManager:userNotificationManager:databaseManager:paymentWebServiceCoordinator:
initWithDataSource:transactionProcessor:paymentWebServiceCoordinator:accountManager:
setApplePayContainer:
initWithDataSource:passManager:
setPassContainer:
shouldSyncTransactionsToCloudStore
scheduleTransactionDeviceDataSyncBackgroundActivity
initWithPaymentWebServiceCoordinator:peerPaymentWebServiceCoordinator:
setDeviceRegistrationServiceCoordinator:
setCloudStoreCoordinator:
setCloudStoreNotificationCoordinator:
initWithPushNotificationManager:databaseManager:userNotificationManager:paymentTransactionProcessor:
initWithDatabaseManager:notificationManager:delegate:
setRemoteInterfacePresenter:
initWithPushNotificationManager:databaseManager:cardFileManager:
initWithDatabaseManager:transactionProcessor:webServiceCoordinator:
initWithDatabaseManager:
initWithDatabaseManager:expressPassManager:fieldDetector:assertionManager:delegate:
initWithPaymentWebService:databaseManager:assertionManager:
initWithDatabaseManager:accountManager:peerPaymentWebServiceCoordinator:paymentWebServiceCoordinator:
initWithDatabaseManager:paymentWebServiceCoordinator:ruleManager:accountManager:peerPaymentWebServiceCoordinator:userNotificationManager:delegate:
initWithWebService:notificationStreamManager:cardFileManager:
initWithPaymentWebServiceCoordinator:databaseManager:expressPassManager:notificationManager:assertionManager:passUpgradeController:
initWithPaymentWebServiceCoordinator:notificationManager:userNotificationManager:databaseManager:upgradeController:
passUniqueIDs
initWithArray:
verifyIntegrity
startObservingEvents
startObservingUbiquityEvents
connect
protectedDataAvailable
nukeTasks
startUbiquity
startExpressModes
initWithStreamName:
updateWalletBadgeCount
recalculateNotificationNames
updateContactlessPassesAvailability
updateDefaultPaymentPassIfNeeded
passExistsWithPassType:
scheduleConsistencyCheckIfNecessary
registerNetworkDefaultsForAppID:
_updateQuickActions
addObserver:selector:name:object:
_validateSecureElementAccesssPolicyForExpectedViolation:withCompletion:
_resetupServices
_performOnceAfterBootWork
scheduleDeviceCheckInIfNecessary
updateWebServiceConfigurationWithCompletion:
_logStatsIfNecessary
updateWalletVisibility
sharedPeerPaymentWebService
needsRegistration
_supportsAccounts
fetchNeededAssetsForThisDeviceWithPreferredFeatures:
removeDelegate:
removeObserver:
dealloc
processIdentifier
_listener:shouldAcceptNewConnection:
setRemoteObjectInterface:
setExportedInterface:
initWithConnection:
setExportedObject:
clearConnectionReference
_removePassLibrary:connection:
setInvalidationHandler:
raise:format:
setInterruptionHandler:
_addPassLibrary:connection:
_removePaymentService:connection:
_addPaymentService:connection:
removeListenerEndpointsForProcessIdentifier:
_removeInAppPaymentService:connection:
_addInAppPaymentService:connection:
_removePaymentContinuityService:connection:
_addPaymentContinuityService:connection:
_removeTrustedDeviceEnrollmentInfoProvider:connection:
_addTrustedDeviceEnrollmentInfoProvider:connection:
_removePeerPaymentService:connection:
_addPeerPaymentService:connection:
_removeCloudStoreService:connection:
_addCloudStoreService:connection:
_removeRegistrationService:connection:
_addRegistrationService:connection:
_removeAccountService:connection:
_addAccountService:connection:
_removeDiscoveryService:connection:
_addDiscoveryService:connection:
_setupPassLibrary:
_setupPaymentService:
_setupInAppPaymentService:
_setupPaymentContinuityService:
_setupPeerPaymentService:
_setupCloudStoreService:
_setupRegistrationService:
_setupTrustedDeviceEnrollmentInfoProvider:
passType
uniqueID
setIsCloudKitArchived:
paymentPass
secureElementIdentifiers
primaryPaymentApplicationForSecureElementIdentifiers:
dpanIdentifier
paymentApplicationWithDPANIdentifier:
state
paymentType
stringByAppendingFormat:
transactionServiceURL
messageServiceURL
stateAsString
date
hasLocationRelevancyInfo
isExpired
relevantDate
isRelevantDateOld
requestWhenInUseAuthorizationIfNeeded
passExistsWithUniqueID:
updatePass:source:
passWithUniqueIdentifier:
_sendPassUpdated:
insertPass:source:
_sendPassAdded:
passAdded:
indexPasses:completion:
settingEnabled:forPassWithUniqueIdentifier:
initWithPassDiff:
setReissueBannerOnUpdate:
insertUserNotification:
recomputeRelevantPassesWithSearchMode:
sanitizeAvailableWhileLocked
issuePaymentPassStateChangeNotificationForPaymentPass:fromState:toState:
rescheduleCommutePlanRenewalReminderForPass:
prepareToDeletePassWithUniqueIdentifier:
removeUserNotificationsForPassUniqueIdentifier:
removeNotificationAssetsForPassWithUniqueIdentifier:
passWillBeRemoved:withDiagnosticReason:
devicePaymentApplications
applicationIdentifier
count
markAppletsWithIdentifiersForDeletion:completion:
removeObject:
deletePassWithUniqueIdentifier:
applePayContainer
passDidDisappear:
processPaymentApplicationsUpdateFromPriorPaymentApplications:toPaymentApplications:forPassUniqueIdentifier:
clearDefaultPaymentPassIfNeeded
resetExpressPasses
passRemoved:
_sendPassRemoved:
deleteIndexEntriesForPassesWithUniqueIDs:completion:
_applyNewCatalogOfRecord:source:
uniqueIDIsRevoked:
updateRevocationStatus:forUniqueID:
scheduleImmediateRevocationCheck
registerDatabaseObject:
postNotificationName:object:userInfo:
numberWithUnsignedInteger:
_restoreDatabaseIntegrity
passes
_catalogOfRecord
secureElementIdentifier
indexOfObject:
objectsPassingTest:
deviceContactlessPaymentApplications
defaultPaymentApplicationForPassUniqueIdentifier:
devicePrimaryContactlessPaymentApplication
contactlessPriority
setDefaultPaymentApplication:forPassUniqueIdentifier:
canSyncTransactionFromCloudKitForPassUniqueIdentifier:
fetchAndStoreRecordsForPaymentPassWithUniqueIdentifier:completion:
hasAssociatedPeerPaymentAccount
_paymentServices
sendPaymentPassWithUniqueIdentifier:didReceiveTransaction:
enumerateObjectsUsingBlock:
updateReasonIsInitialDownload
deviceScoreIdentifiersRequired
deviceScoreIdentifiersSubmitted
sendDeviceScoreIdentifier
requestDeviceScoreIdentifier
serviceIdentifier
length
containsObject:
setDeviceScoreIdentifiersSubmitted:
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:withInsertionMode:performTruncation:
submitDeviceScoreIdentifiersForTransaction:completion:
transactionType
recomputeCategoryVisualizationMagnitudesForPassUniqueID:withStyle:
initWithPaymentTransaction:forPassUniqueIdentifier:
notificationIdentifier
unansweredQuestions
originatedByDevice
accountIdentifier
setAccountSuspended:
accountWithIdentifier:completion:
removeUserNotification:
userNotificationWithIdentifier:completion:
associatedPassUniqueID
transactionStatusChangedDate
timeIntervalSinceNow
_shouldDisplayNotificationForManuallyAcceptedPeerPaymentTransaction:
peerPaymentStatus
peerPaymentType
_shouldCreateNotificationForTransactionUpdateReasons:notificationTypeDescription:
transactionSource
transactionStatus
_scheduleOrCancelReminderNotificationsForPendingTransaction:forPassUniqueIdentifier:
currentBalance
_scheduleOrCancelBalanceReminderNotificationIfNecessaryForPassUniqueIdentifier:balance:transaction:
accountWithCompletion:
suppressBehavior
referenceIdentifier
items
anyObject
transactionIdentifiers
rewardsAddedIdentifiers
setSuppressBehavior:
insertOrUpdatePaymentTransaction:withOriginDeviceID:forPassUniqueIdentifier:paymentApplication:withInsertionMode:performTruncation:
eventWithIdentifier:completion:
associatedAccountServiceAccountIdentifier
hasNotificationServiceData
amount
zero
isEqualToNumber:
redemptionAccountEventWithTransactionIdentifier:
redemptionType
setRedemptionType:
_shouldDeleteNotificationForTransaction:
notificationIdentifierForPaymentTransaction:
removeUserNotificationWithIdentifier:
sendPaymentPassWithUniqueIdentifier:didUpdateCategoryVisualizationWithStyle:
transactionDate
timeIntervalSinceDate:
removeUserNotificationsForPassUniqueIdentifier:ofType:
dateByAddingTimeInterval:
firstObject
updateWithNewBalance:andNewReminderDate:
initWithPassUniqueIdentifier:currentBalance:reminderDate:
userNotificationsForPassUniqueIdentifier:ofType:completion:
initWithPaymentTransaction:forPassUniqueIdentifier:reminderPeriod:
sendPaymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
sendPaymentPassWithUniqueIdentifier:didReceiveMessage:
sendPaymentPassWithUniqueIdentifier:didReceiveBalanceUpdate:
sendPaymentPassWithUniqueIdentifier:didEnableTransactionService:
sendPaymentPassWithUniqueIdentifier:didEnableMessageService:
sendPassWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
setObject:forKey:
sendPaymentPassWithUniqueIdentifier:didUpdateWithTransitProperties:
enrouteTransitTypes
lastObject
paymentTransaction
transitType
invalidateTransitBalance
balanceReminderThresholdForBalanceIdentifier:withPassUniqueIdentifier:
isEnabled
threshold
transitBalanceCurrencyCode
transitBalance
compare:
initWithCurrentBalance:balanceCurrency:reminderAmount:reminderCurrency:passUniqueIdentifier:balanceIdentifier:
updateBalanceAmount:currency:
updateReminderAmount:currency:
passesOfType:
deleteCardWithUniqueID:forReason:withDiagnosticReason:
noteAccountDeletionWithCompletion:
deleteSharedWebServiceWithDiagnosticReason:
setPaymentWebService:
markAllAppletsForDeletionWithExternalAuthorization:completion:
_migrateOsloKeychain
performMigration
migrateObjectSettings
_migrateSecureElementPrimaryRegionTopic
_cleanupSecureElementIfNeeded
sharedConnection
setBoolValue:forSetting:
numberOfRealPasses
introduceMissingUniqueID
introduceExtraneousUniqueID
introduceDuplicateUniqueID
supportsOnlyTransit
isAccessPass
localizedDescription
stringWithFormat:
initWithMessage:forPassUniqueIdentifier:
setNotificationIdentifier:
setSuppressionBehavior:
hasAnyMessagesForPassWithUniqueIdentifier:
allMessagesForPassWithUniqueIdentifier:
predicateWithFormat:
filteredSetUsingPredicate:
UUID
UUIDString
setServiceIdentifier:
setMessageType:
setMessageDate:
setContent:
dateWithDaysFromNow:
setExpirationDate:
setArchived:
insertOrUpdatePaymentMessage:forPassUniqueIdentifier:paymentApplication:performTruncation:
archiveMessageWithIdentifier:
commutePlanRenewalReminderTimeIntervalForPassWithUniqueID:
initWithExpirationDate:passUniqueIdentifier:
setDate:
checkForNotification
postUpgradedPassNotificationForMarket:pass:
fieldProperties
remoteInterfaceOfTypeIsActive:
_sendRelevantPassesChanged
addListenerEndpoint:forHostIdentifier:processIdentifier:
takeListenerEndpointForHostIdentifier:
requestForIdentifier:
presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
setNotificationNames:forStream:
lostModeIsActive
allPaymentApplications
initiateDevicePassesDownload
initiateLostModeExitAuthWithCompletion:
sharedWebServiceContext
setConfigurationDate:
updateSharedWebServiceContext:
notePasscodeChanged
transactionWithServiceIdentifier:
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:withInsertionMode:performTruncation:
fullyProcessed
enRoute
transitStateWithPassUniqueIdentifier:paymentApplication:
initWithPaymentTransaction:forPassUniqueIdentifier:paymentApplication:
_shouldCreateMerchantTransactionNotificationForTransaction:paymentPass:
isActive
paymentTransactionUpdated:forPassUniqueIdentifier:
suppressNotifications
redemptionEvent
updateReasons
updateReasonsDescription
allObjects
devicePrimaryInAppPaymentApplication
supportsInAppPayment
availableNetworks
setWithArray:
passesForInAppPaymentOnNetworks:issuerCountryCodes:paymentApplicationStates:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
serialNumber
associatedPassSerialNumber
passTypeIdentifier
associatedPassTypeIdentifier
paymentSetupFeaturesWithCompletion:
canPresentRemoteInterfaceOfType:error:
isInFailForward
configuration
constraintsWithAspectFillToSize:
setOutputScale:
frontFaceImage
resizedImageWithConstraints:
imageRef
presentSetupApplePayAlert:
promptDetailsForVirtualCard:showNotification:
assertionsOfType:
sendDidUpdateDefaultPaymentPassWithUniqueIdentifier:
updateRegistrationForTriggerEvents
_discoveryServices
sendDiscoveryArticleLayoutsUpdated:
sendDiscoveryEngagementMessagesUpdated
incrementMissingRemoteAssetsPersistentStoreItemDownloadRetriesCountWithUniqueID:
insertOrReplaceMissingRemoteAssetsPersistentStoreItemWithUniqueID:
missingRemoteAssetsPersistentStoreItemsCountWithMaximumDownloadRetriesCount:
missingRemoteAssetsPersistentStoreItemsWithMaximumDownloadRetriesCount:
removeMissingRemoteAssetsPersistentStoreItemWithUniqueID:
willSanitizePasses
_passLibraries
effectiveCatalog
sendPassAdded:catalog:
_performLibraryAction:withPassLibraries:
handlePassLibraryChangedWithPassUniqueIdentifier:
UTF8String
sendEvent:
sendPassUpdated:catalog:
sendPassRemoved:catalog:
sendCatalogChanged:
postNotificationName:object:
setSecureElement:
setCardFileManager:
setUserNotificationManager:
setWebServicesCoordinator:
setPaymentWebServicesCoordinator:
setRelevantPassProvider:
setIdsManager:
setSpotlightIndexer:
setExpressUpgradeController:
setPeerPaymentWebServicesCoordinator:
setPaymentTransactionProcessor:
setPaymentWebServiceCoordinator:
setNotificationServiceCoordinator:
setTransitStateManager:
setDefaultPassManager:
setPushNotificationManager:
setDevicePasscodeManager:
setApplyManager:
setFieldDetector:
setPeerPaymentWebServiceCoordinator:
_setupAccountService:
_setupDiscoveryService:
setDiscoveryManager:
setRuleManager:
array
currentRelevantPassInfo
objectForKeyedSubscript:
_shortcutItemForPassUniqueIdentifier:
passUniqueIdentifierForMostRecentVisibleTransaction
_shortcutIconWithName:
setIcon:
setLocalizedTitle:
setUserInfo:
paymentSetupSupportedInRegion
activationState
initWithType:
updateDynamicApplicationShortcutItems:forBundleIdentifier:
invalidate
pathForResource:ofType:
dataWithContentsOfFile:
initWithImageData:dataType:isTemplate:
applyCatalogOfRecord:
isEquivalentToCatalog:
_sendCatalogChanged:
computeExtraneousUniqueIDs:missingUniqueIDs:
objectWithUniqueID:
catalogOfRecord
intValue
initWithIdentifier:accessGroup:serviceName:type:
primaryAccountIdentifier
resetKeychainItem
defaults
migrateToSyncable
numberWithInt:
defaultShippingAddress
contactWithCleanedUpDistrict
setDefaultShippingAddress:
defaultBillingAddressForPaymentPass:
setDefaultBillingAddress:forPaymentPass:
initWithMessage:
ownerUserUUID
initWithTitle:message:
removePassesOfType:withDiagnosticReason:
ownershipStateForUserUUID:
isOwnable
_logSecureElementOwnershipStateKeys:
pairingStateWithCompletion:
primaryRegion
trustedServiceManagerPushTopic
primaryRegionTopic
TSMURLStringByPushTopic
setRegistrationInformation:primaryRegionTopic:
lifecycleState
isLocked
allAppletsWithCompletion:
standardUserDefaults
_timeSinceDateStoredInUserDefault:
_logStats
_sendFailForwardNotification
updateAllExpressTransitAppletStates
cardType
passUniqueIdentifier
notificationServiceOfType:forPassWithUniqueIdentifier:
requestUpdatesFromNotificationService:passUniqueIdenitifer:forceUpdate:
expressPassesInformationWithHandler:
numberWithBool:
setObject:forKeyedSubscript:
URLWithString:
defaultWorkspace
openURL:
presentNotificationWithParameters:responseHandler:
defaultManager
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
shouldWritePass:source:error:
passWritten:source:withDiff:
passWithUniqueIdentifierWillDisappear:forReason:withDiagnosticReason:
passWithUniqueIdentifierDidDisappear:forReason:withDiagnosticReason:
cardFileManager:didUpdateRemoteAssetsForPassWithUniqueID:
catalogOfRecordWritten:source:
notePassWithUniqueID:isRevoked:
nukeStuff
migrateData
introduceDatabaseIntegrityProblem
checkForTransitNotification
trueUniqueIDs
readTrueUniqueIDs:
mutateTrueUniqueIDs:
storedPasses
noteLockScreenSettingsChangedForPassWithUniqueIdentifier:
noteAutomaticallyPresentSettingsChangedForPassWithUniqueIdentifier:
noteSettingsChangedForPassWithUniqueIdentifier:newSettings:
handleDatabaseIntegrityProblem
paymentPass:didUpdatePaymentApplications:toPaymentApplications:
paymentPassWithUniqueIdentifier:didReceiveMessage:
paymentPassWithUniqueIdentifier:didReceiveTransaction:
paymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
paymentPassWithUniqueIdentifier:didReceiveBalanceUpdate:
paymentPassWithUniqueIdentifier:didEnableMessageService:
paymentPassWithUniqueIdentifier:didEnableTransactionService:
passWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
paymentPassWithUniqueIdentifier:didUpdateFromTransitProperties:toTransitProperties:
paymentPassWithUniqueIdentifier:didUpdateDefaultPaymentApplication:
paymentPassWithUniqueIdentifier:didRecomputeCategoryVisualizationMagnitudes:withStyle:
shouldRecomputeRelevantPassesWithSearchMode:
relevantPassProviderDidChangeCurrentRelevantPasses:
expressPassManager:didUpdateExpressPassesInformation:
expressPassManager:willProcessPaymentApplicationsUpdateFromPriorPaymentApplications:toPaymentApplications:forPassUniqueIdentifier:
expressPassManager:didFinishExpressTransactionWithState:
handleContinuityPaymentBulletinActionWithIdentifier:manager:
createCurrentNotificationRegistrationState
handleNotificationWithName:event:forStream:
secureElement:deletionOfAppletsDidUpdateToProgress:
secureElement:deletionOfAppletsDidFinishWithSuccess:
secureElementDidEnterRestrictedMode:
secureElementDidLeaveRestrictedMode:
secureElementPairingDidChangeForReason:
inAppPaymentService:registerPaymentListenerEndpoint:forHostIdentifier:processIdentifier:completion:
inAppPaymentService:retrievePaymentListenerEndpointForHostIdentifier:completion:
paymentTransactionUpdated:forPassUniqueIdentifier:paymentApplication:
paymentTransactionProcessorDidActivate:
paymentTransactionProcessorDidDeactivate:
fieldDetectorShouldProcessFieldEvents:
didReceiveRemotePaymentRequest:
didReceivePaymentHostUpdate:forRemotePaymentRequest:
didReceivePaymentClientUpdate:forRemotePaymentRequest:
didReceivePayment:forRemotePaymentRequest:
didReceivePaymentResult:forRemotePaymentRequest:
didReceiveCancellationForRemotePaymentRequest:
didReceiveSetupRequest:
didReceivePromptForVirtualCard:showNotification:
managerDevicesDidChange:
managerAccountsDidChange:
paymentPassesForContinuityDiscovery:
defaultPaymentPassForContinuityDiscovery:
continuityDisabledByUser:
deviceAvailableForContinuityPayments:
webServiceConfigurationForContinuityPayments:
thumbnailImageForPassIdentifier:size:manager:
accountForPaymentPass:manager:completion:
supportedPaymentSetupFeatures:completion:
listener:shouldAcceptNewConnection:
expressModeStateController:requestsEnableExpressMode:
defaultDiscoveryManager:sendDiscoveryArticleLayoutsUpdated:
sendDiscoveryEngagementMessagesUpdatedToDefaultDiscoveryManager:
defaultPassManager:didUpdateDefaultPaymentPassWithUniqueIdentifier:
defaultPassManager:didUpdateContactlessPassesAvailability:visibility:payment:
_peerPaymentServices
_cloudStoreServices
_registrationServices
.cxx_destruct
_initializationState
_fileProtectionState
_iCloudRestoreState
_installedPassesQueue
_installedPassUniqueIDs
_cardFileManager
_databaseManager
_userNotificationManager
_pushNotificationManager
_secureElement
_fieldDetector
_assertionManager
_paymentTransactionProcessor
_notificationServicesCoordinator
_paymentWebServiceCoordinator
_peerPaymentWebServiceCoordinator
_applyManager
_accountManager
_accountNotificationController
_accountAdStatusChangesObserver
_applyNotificationController
_discoveryManager
_ruleManager
_cloudStoreCoordinator
_deviceRegistrationServiceCoordinator
_paymentHostEndpointRegistry
_notificationStreamManager
_webServicesCoordinator
_usageNotificationServer
_idsManager
_relevantPassProvider
_remoteInterfacePresenter
_expressPassManager
_transitStateManager
_spotlightIndexer
_defaultPassManager
_devicePasscodeManager
_transitNotificationService
_passUpgradeController
_transitUpgradeController
_merchantProcessingService
_inAppPaymentServices
_paymentContinuityServices
_trustedDeviceEnrollmentInfoProviders
_accountServices
_mobileAssetManager
_transactionDeviceScoreSubmissionsInProgess
_passKitEventPublisher
archiveAtPath:
archiveContext:
archiveBackgroundContext:
initWithQueue:
_queue
canPromptForAuth
setCanPromptForAuth:
completionHandlers
setCompletionHandlers:
cancelled
setCancelled:
_canPromptForAuth
_cancelled
_identifier
_completionHandlers
setPaymentServicesDelegate:
contextWithArchive:
localTargetDevice
initWithContext:targetDevice:archiver:
pk_weakObjectsHashTableUsingPointerPersonality
paymentSetupProductConfigurations
stringWithUTF8String:
dateWithTimeIntervalSinceNow:
scheduleConsistencyCheck:pluggedIn:
_queue_updateWebServiceConfigurationWithCompletion:
needsConfiguration
configurePaymentServiceWithCompletion:
context
sessionConfiguration
URLCache
removeAllCachedResponses
removeAllObjects
unscheduleDeviceCheckIn
invalidateBackgroundSession
unregisterDeviceWithCompletion:
diagnosticSessionWithReason:sessionHandler:
unregisterConsumer:
deviceID
callStackSymbols
pushToken
setContext:
setPushToken:
recalculatePushTopics
backgroundDownloadRemotePassAssets:cloudStoreCoordinatorDelegate:
_queue_setupBackgroundWebServiceWithCompletion:
submitVerificationCode:verificationData:forPass:completion:
secureElementID
isCheckingConsistencyForSecureElementID:
initWithPaymentWebService:delegate:cloudStoreCoordinatorDelegate:
startWithCompletion:
backgroundDownloadPassesSinceLastUpdatedTag:
merchant
hexEncoding
_processValueAddedServiceTransaction:
stringByAppendingString:
priorityActivityCriteriaWithStartDate:
setRequireNetworkConnectivity:
regions
applyServicePushTopic
enumerateKeysAndObjectsUsingBlock:
accountServicePushTopic
setHasSecureElement:
hasRemoteDevices
setHasRemoteDevices:
remoteDevices
canMakePayments
setCanMakeRemotePayments:
setInFailForward:
isWalletRestricted
setState:
_queue_handlePaymentSetupFeatureFetchCompleted:
targetDevice
supportedFeatureIdentifiersWithPaymentWebService:
regionCode
shouldPaymentSetupFeaturesUseStrictProductsCheckForRegion:
feature
pk_containsObjectPassingTest:
featureIdentifier
accountsForProvisioningWithCompletion:
cachedPaymentSetupProductsWithCompletion:
_validatePreconditionsWithCompletion:
userNotificationPushTopic
deviceCheckInPushTopic
productsPushTopic
_performNotificationActionWithUserInfo:
_queue_cancelAllDeviceCheckInTasks
setOutstandingCheckInAction:
setLastDeviceCheckInBuildVersion:
_queue_enqueueDeviceCheckInTask:
_queue_markProductsDirty
_queue_updateProductsWithCompletion:
_fetchPassesIfNecessaryForPushTopic:
primaryBrokerURL
_queue_registerDeviceAtBrokerURL:completion:
initWithPaymentPass:
deprovisionForRequest:completion:
removeVerificationRequestRecordForUniqueID:
primaryPaymentApplicationForPassUniqueIdentifier:
appletWithIdentifier:completion:
paymentWebService:didDownloadPass:cloudStoreCoordinatorDelegate:
backgroundDownloadRemotePassAssets:forSuffixesAndScreenScales:cloudStoreCoordinatorDelegate:
paymentWebServiceCoordinator:didDownloadPass:
reloadDisplayProfileOfType:
_handleDownloadedPass:
paymentWebServiceCoordinator:didDownloadPassRemoteAssets:
backgroundDownloadWithPassTypeIdentifier:serialNumber:
paymentWebServiceCoordinator:didDownloadSerialNumbersForInstalledPasses:inRegion:
paymentWebServiceCoordinatorBackgroundSessionDidBecomeInvalid:
stop
initWithPaymentPass:verificationChannel:identifier:
startObservingVerificationSourceWithTimeout:
registerDeviceAtBrokerURL:consistencyData:completion:
_queue_automaticDeviceCheckInRequiredForRegion:
_queue_deviceCheckInRepeatInterval
_queue_scheduleDeviceCheckInWithStartTimeOffset:repeatInterval:randomizeTimes:
_queue_unscheduleDeviceCheckIn
setRepeating:
setRepeatInterval:
setReason:
lastDeviceCheckInBuildVersion
compare:options:
deviceCheckInIntervalForRegion:
_performDeviceCheckInTask:
_queue_completeDeviceCheckInTask:success:error:
deviceCheckInDisabledForRegion:
outstandingCheckInAction
_queue_handleCheckInForRegion:action:completion:
_queue_checkContextForDeviceCheckInAuthRequirment:completion:
errorWithDomain:code:userInfo:
_renewAppleAccountWithCompletionHandler:
_handleDeviceCheckInAction:region:completion:
deviceCheckInDeviceCheckInForRegion:completion:
brokerURL
addDiagnosticReason:
removeDiagnosticReason:
domain
code
updateRegistrationDataAtBrokerURL:completion:
pass
postNotificationName:object:userInfo:deliverImmediately:
downloadRemoteAssetsWithCompletion:
_scheduleVerificationCheckForPass:onDate:
hasPrefix:
TSMPushTopics
queueConnectionToServerWithPushTopic:
deviceSpecificPaymentApplications
shouldStartConsistencyCheck
setConsistencyCheckBackoffLevel:
setRequireMainsPower:
performConsistencyCheck
substringFromIndex:
valueAddedServiceTransactionWithIdentifier:
_checkVerificationStatusForUniqueID:
_queue_coeleaseDeviceCheckInCompletion:
organizationName
maintenanceActivityCriteriaWithStartDate:
initWithValueAddedServiceTransaction:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
dataAccessor
fileURL
removeItemAtURL:error:
copyItemAtURL:toURL:error:
initWithMerchantIdentifier:localizedPassDescription:passUniqueIdentifier:
valueAddedMerchantWasPresented:
downloadPassWithCompletion:
downloadMerchantPayloadWithCompletion:
PKStringForKey:
setRequestID:
_userNotificationFromResponse:
performNotificationActionRequest:completion:
requestID
setCustomActionRoute:
setByAddingObject:
pk_setByRemovingObject:
backgroundDownloadPassesForPushTopic:sinceLastUpdatedTag:
getHasBackgroundDownloadTaskPassesForPushTopic:completion:
writePass:completion:
startBackgroundURLSessionWithIdentifier:context:backgroundDelegate:completion:
_resetSupportInRegionCache
dirtyStateIdentifier
_queue_handleProductsResponse:error:priorDirtyStateIdentifier:completionBlocks:
performProductActionRequest:completion:
setDirtyStateIdentifier:
setPaymentSetupProductConfigurations:
_queue_performNextProductsUpdate
_queue_updateProductsWithCompletionBlocks:
setIgnoreCache:
availableProductsWithRequest:completion:
_queue_processPaymentSetupProductsResponse:priorDirtyStateIdentifier:
availableProducts
objectAtIndex:
productIdentifier
removeObjectAtIndex:
setLastUpdated:
_queue_notifcationForNewProduct:oldProduct:
_queue_removeNotificationForProduct:
objectAtIndexedSubscript:
pushNotificationTopics
handlePushNotificationForTopic:userInfo:
applyPushNotificationToken:
receivedXPCEvent:forEventStream:
handleInsertionForPaymentPass:
handleDeletionForPassTypeIdentifier:serialNumber:
paymentWebService:didDownloadPass:
paymentWebService:didDownloadPassRemoteAssets:completion:
paymentWebService:didDownloadSerialNumbersForInstalledPasses:inRegion:
paymentWebServiceBackgroundSessionDidBecomeInvalid:
paymentWebService:deviceCheckInReturnedAction:success:region:identifier:
verificationObserver:didObserveVerificationCode:
verificationObserverDidTimeout:
deleteCardsWithAIDs:
synchronizeWithTSM
didDownloadPaymentPass:
secureElementApplets
paymentApplications
paymentPasses
interestedInAssertionOfType:
allowAcquisitionOfAssertionOfType:
assertionManager:didAcquireAssertion:
assertionManager:didInvalidateAssertion:
performScheduledActivityWithIdentifier:activityCriteria:
performScheduledActivityWithIdentifier:activityCriteria:activityContext:
unregisterObserver:
performHandlerOnSharedWebServiceQueue:
submitVerificationCode:verificationData:forPass:handler:
initiateConsistencyCheck
processValueAddedServiceTransaction:
applyServicePushTopics
accountServicePushTopics
paymentHardwareStatusWithCompletion:
startBackgroundVerificationObserverForPass:verificationMethod:
performPrimaryRegionRegistrationForced:completion:
scheduleDeviceCheckInWithStartTimeOffset:
performDeviceCheckInWithCompletion:
setDeviceCheckInContextBuildVersion:outstandingAction:forRegion:
noteAccountChanged
productsWithCompletion:
removeProductsCache
accountManager
deviceRegistrationServiceCoordinator
_passStore
_sharedWebService
_archiver
_verificationObserver
_cloudStoreCoordinatorDelegate
_sharedWebServiceQueue
_replyQueue
_observers
_paymentSetupProductConfigurations
_pendingProductsUpdateBlocks
_isUpdatingProducts
_deviceCheckInTasks
_deviceCheckInRunning
_isFetchingPaymentSetupFeatures
_pendingPaymentSetupFeatureBlocks
_init
_managerForEventStream:
objectEnumerator
beginEventDelivery
registerObserver:forEventStream:withReplyQueue:
registerObserver:withReplyQueue:
initWithEventStream:startedPaused:
eventStreamManager
registerForLaunchEvents
pauseEventDelivery
registerObserver:forEventStream:
unregisterObserver:forEventStream:
_pauseCounter
_streamToStreamManagerMap
_stateQueue
observer
setObserver:
replyQueue
setReplyQueue:
_observer
_deliverEvents:eventsWerePreviouslyDeferred:
lock
unlock
addIndex:
removeObjectsAtIndexes:
addObjectsFromArray:
_deliverEvent:toObservers:withGroup:
_eventStream
_observersLock
_pendingEvents
_eventQueue
_propertyValuesForMagnitude:
_predicateForPID:
_predicateForPassUniqueID:
_magnitudesMatchingQuery:
initWithMagnitude:inDatabase:
bucket
_predicateForPassUniqueID:bucket:
updateWithMagnitude:
insertMagnitude:inDatabase:
_propertySetters
_predicateForBucket:
magnitude
numberWithDouble:
setPassUniqueIdentifier:
setBucket:
doubleValue
setMagnitude:
anyInDatabase:withPID:
magnitudesForPassUniqueIdentifier:inDatabase:
insertOrUpdateMagnitude:inDatabase:
deleteAnyInDatabase:forPassUniqueID:
passesAllAccess
paymentAllAccess
pointerValue
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
_sanitizePassIfNeeded:
setWithObject:
catalogChanged:withNewPasses:
_entitledForObject:forActions:
passUpdated:
_entitlementFilteredPasses:
registrationIsSupportedInCurrentRegionWithWebService:completion:
sendSetupRequest:appDisplayName:completion:
featuresAllAccess
signedFields
signature
originatingURL
_isConfigurationValid:
supportedSetupFeatures
allValues
paymentSetupFeatures
openPaymentUIWithCompletion:
presentPaymentSetupRequest:orientation:completion:
presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:handler:
paymentPresentation
_entitledForPassType:uniqueIdentifier:actions:
presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:completion:
isPeerPaymentRequest
isDisbursementPaymentRequest
requestType
setWithObjects:
supportedNetworks
merchantCapabilities
host
supportedCountries
mutableCopy
ingestedDate
sortUsingComparator:
_passesWithSupportedNetworks:merchantCapabilities:webDomain:issuerCountryCodes:paymentApplicationStates:handler:
peerPaymentAccount
passWithPassTypeID:serialNumber:
passSerialNumber
getCatalog:passes:ofPassTypes:limitResults:
_sanitizePasses:
writeCatalogOfRecord:source:
notifyPassUsed:fromSource:
_paymentPassesForNetworks:capabilities:issuerCountryCodes:webPayment:paymentApplicationStates:withHandler:
_hasPassesWithSupportedNetworks:merchantCapabilities:webDomain:issuerCountryCodes:paymentApplicationStates:handler:
_hasPaymentPassesForNetworks:capabilities:paymentApplicationStates:
accountsWithCompletion:
inAppPayments
supportsWebPayments
inAppPaymentsPrivate
passExistsForNonWebInAppPaymentOnNetworks:withCapabilities:paymentApplicationStates:
_inAppPrivateLabelPaymentPassesForWebDomain:issuerCountryCodes:paymentApplicationStates:
unionSet:
_inAppPrivateLabelPaymentPassesForApplicationIdentifier:issuerCountryCodes:paymentApplicationStates:
passesForWebPaymentOnNetworks:withCapabilities:webService:issuerCountryCodes:paymentApplicationStates:
passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:paymentApplicationStates:
remoteProcessApplicationIdentifier
remoteProcessIdentifier
_filteredPasses:forApplicationIdentifier:
_filteredPasses:forWebDomain:
arrayWithCapacity:
passUniqueIdentifiersForFieldProperties:withExpressPassManager:completion:
passesEnabledForValuedAddedServicesWithAutomaticSelection:
associatedWebDomains
associatedApplicationIdentifiers
_countPassesOfType:handler:
countPassesOfType:
expressPassesInformationWithCardType:handler:
appletDataFormat
pk_objectsPassingTest:
passPropertiesForPass:
isEnRoute
sortedArrayUsingComparator:
pk_deviceLanguage
initWithType:preferredLanguage:
supportedProvisioningMethods
supportsDevice:
paymentOptions
supportedTransitNetworkIdentifiers
isWalletVisible
partnerName
initWithIdentifier:localizedDisplayName:purchaseURL:supportedTransitNetworkIdentifiers:
safelyAddObject:
transitNetworkIdentifiers
cost
isTransitPass
isContactlessPaymentSupportedForTransitNetworks:
_transitDCIMessage:completion:
_transitTopUpMessage:passes:completion:
getPassesOfType:handler:
localizedDisplayName
purchaseURL
initWithIdentifier:message:actionTitle:actionURL:iconType:userInfo:
maxNotificationCount
setMaxNotificationCount:
hasAttemptedDefaultPassExpressUpgrade
isPassUpgradeableForExpress:
setHasDoneExpressUpgrade:
upgradePass:completionHandler:
defaultPaymentPassWithHandler:
supportedTransitPartnersForDigitalIssuance:
isRemotePass
transitProperties
currency
displayableTransitBalance
addValueURL
passURL
expressTransitPassWithHandler:
getPassWithUniqueID:handler:
passWithPrimaryAccountIdentifier:
passWithPaymentApplication:
isDeletingAllApplets
archiveData
dataForBundleResourceNamed:withExtension:
dataForBundleResources:
setHour:
currentCalendar
dateByAddingComponents:toDate:options:
candidatePassesOfStyle:activatingBetweenStart:end:
initWithCapacity:
embeddedLocations
CLLocation
distanceFromLocation:
hasEqualCoordinatesToLocation:
dictionaryWithCapacity:
classForPassType:
defaultSettings
settingsForPass:
manifestHash
initWithData:warnings:orError:
passExistsWithPassTypeID:serialNumber:
writeCard:source:error:
_entitledForUniqueID:forActions:
fetchContentForUniqueID:withCompletion:
containedImageSet
purge
getImageSetContainerForUniqueID:ofType:displayProfile:suffix:handler:
fetchImageSetContainerForUniqueID:ofType:withDisplayProfile:suffix:completion:
updateSettings:forObjectWithUniqueIdentifier:
noteObjectSharedWithUniqueID:
initWithData:error:
passesAddSilently
_addPasses:withHandler:
valueWithPointer:
updatePassWithUniqueIdentifier:handler:
personalizePassWithUniqueIdentifier:contact:personalizationToken:requiredPersonalizationFields:personalizationSource:handler:
hasCandidatePasses
supportsDisbursements
stage
contactlessInterfaceDidPresentFromSource:
contactlessInterfaceDidDismissFromSource:
sanitizePaymentApplications
teamID
associatedPassTypeIdentifiers
_entitledForPassTypeID:teamID:associatedPassTypeIdentifiers:associatedApplicationIdentifiers:forActions:
getPassTypeID:teamID:associatedPassTypeIdentifiers:associatedApplicationIdentifiers:forUniqueID:
passTypeIDs
teamIDs
intersectsSet:
applicationID
settings
_writePass:error:
_writePass:withSettings:error:
updateSettings:forPassWithUniqueIdentifier:
primaryPassDiff
restartUbiquity
removePassesOfType:withDiagnosticReason:handler:
deleteAllLocalDefaults
deleteAllLocalKeychainOwnershipTokens
shuffle:
initWithTitle:message:forPassUniqueIdentifier:
scheduledNotificationDescriptions
deleteAndRecreateDatabase
nukeCards
removeAllUserNotifications
removeAllPreferences
forceImmediateRevocationCheck
indexAllPassesWithCompletion:
indexPassesWithUniqueIDs:completion:
deleteIndexEntriesForAllPassesWithCompletion:
serviceResumed
serviceSuspended
replacePassWithPassData:handler:
addPassesWithData:handler:
removePassWithUniqueID:diagnosticReason:handler:
removePassesWithUniqueIDs:diagnosticReason:handler:
getPassesAndCatalogOfPassTypes:limitResults:withHandler:
getPassesWithHandler:
getManifestHashAndSettingsForPassTypeID:serialNumber:handler:
getPassWithPassTypeID:serialNumber:handler:
getContentForUniqueID:handler:
getImageSetForUniqueID:ofType:displayProfile:suffix:handler:
getDataForBundleResourceNamed:withExtension:objectUniqueIdentifier:handler:
getArchivedObjectWithUniqueID:handler:
isPaymentPassActivationAvailableWithHandler:
submitVerificationCode:verificationData:forPassWithUniqueID:handler:
hasPassesOfType:handler:
canAddPassesOfType:handler:
countPassesOfType:handler:
canAddFelicaPassWithHandler:
sortedTransitPassesForAppletDataFormat:handler:
transitMessageForRouteInfo:handler:
passWithFPANIdentifier:handler:
passWithDPANIdentifier:handler:
migrateDataWithHandler:
peerPaymentPassUniqueIDWithHandler:
supportsDisbursements:
postUpgradedPassNotificationForMarket:passUniqueID:
hasInAppPaymentPassesForNetworks:capabilities:issuerCountryCodes:withHandler:
inAppPaymentPassesForNetworks:capabilities:issuerCountryCodes:withHandler:
inAppPrivateLabelPaymentPassesForApplicationIdentifier:issuerCountryCodes:withHandler:
hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:issuerCountryCodes:withHandler:
inAppPrivateLabelPaymentPassesForWebDomain:issuerCountryCodes:withHandler:
hasInAppPrivateLabelPaymentPassesForWebDomain:issuerCountryCodes:withHandler:
canPresentPaymentRequest:completion:
hasPassesWithSupportedNetworks:merchantCapabilities:webDomain:completion:
openDigitalIssuanceUIForIdentifier:withCompletion:
openWalletUIWithRelevantPass:
presentContactlessInterfaceForDefaultPassFromSource:handler:
getPassesWithUniqueIdentifiers:handler:
getPassUniqueIdentifiersForFieldProperties:handler:
updateSettings:forObjectWithUniqueID:
rescheduleCommutePlanRenewalReminderForPassWithUniqueID:
updateObjectWithUniqueIdentifier:handler:
noteAccountChangedWithHandler:
noteAccountDeletedWithHandler:
removeAllScheduledActivities
nukeDatabaseAndExit
shuffleGroups:
issueWalletUserNotificationWithTitle:message:forPassUniqueIdentifier:customActionRoute:
pendingUserNotificationsWithCompletion:
sendUserEditedCatalog:
logDelayExitReasons
fetchHasCandidatePasses:
fetchCurrentRelevantPassInfo:
getRouteRelevantPassesForLocation:handler:
getDiffForPassUpdateUserNotificationWithIdentifier:handler:
enabledValueAddedServicePassesWithHandler:
isRemovingPassesOfType:handler:
isPassbookVisibleWithHandler:
spotlightReindexAllPassesWithCompletion:
spotlightReindexPassesWithUniqueIDs:completion:
spotlightDeleteIndexEntriesForAllPassesWithCompletion:
getDataForBundleResources:objectUniqueIdentifier:handler:
paymentSetupFeaturesForConfiguration:completion:
secureElement
paymentWebServicesCoordinator
webServicesCoordinator
cardFileManager
databaseManager
expressPassManager
userNotificationManager
relevantPassProvider
usageNotificationServer
remoteInterfacePresenter
idsManager
spotlightIndexer
expressUpgradeController
delegate
_whitelist
_userNotifications
_paymentWebServicesCoordinator
_expressUpgradeController
_delegate
initMissingRemoteAssetsItemWithUniqueID:inDatabase:
_predicateForMaximumRetriesCount:
countInDatabase:predicate:
_propertySettersForItem
executeSQL:
_predicateForUniqueID:
numberWithUnsignedLongLong:
setUniqueID:
unsignedIntegerValue
setDownloadRetriesCount:
insertOrReplaceMissingRemoteAssetsItemForUniqueID:inDataBase:
itemsCountInDataBase:withMaximumDownloadRetriesCount:
itemsInDataBase:withMaximumDownloadRetriesCount:
incrementDownloadRetriesCountForUniqueID:inDataBase:
removeMissingRemoteAssetsItemForUniqueID:inDataBase:
associationPropertyForEntityClass:
numberWithLongLong:
offerTermsIdentifier
expiryDate
creditLimit
stringValue
annualFee
aprForPurchase
currencyCode
initWithFeatureApplicationOfferDetails:forApplicationPID:inDatabase:
_predicateForApplicationPID:
featureApplicationOfferDetails
updateWithFeatureApplicationOfferDetails:
insertFeatureApplicationOfferDetails:forApplicationPID:inDatabase:
setOfferTermsIdentifier:
setExpiryDate:
decimalNumberWithString:
setCreditLimit:
setAnnualFee:
setAprForPurchase:
setCurrencyCode:
_propertySettersForFeatureApplicationOfferDetails
deleteFeatureApplicationOfferDetailsForApplicationPID:inDatabase:
featureApplicationOfferDetailsForApplicationPID:inDatabase:
updateFeatureApplicationOfferDetails:forApplicationPID:inDatabase:
longLongValue
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:database:
performTransactionWithBlock:
databasePropertyToSetClientProperty:
databaseValueForProperty:clientValue:
joinClauseForProperty:
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
initWithFormat:
statementHasRowAfterStepping:
prepareStatementForSQL:cache:usingBlock:
initWithString:
disambiguatedSQLForProperty:
appendString:
initWithObjectsAndKeys:
statementDidFinishAfterStepping:
valuesforProperties:
getObjects:range:
duplicateEntityAssigningNewPersistentID:
existsInDatabase
columnNamesForTable:
primaryKeyColumnNameForTable:
componentsJoinedByString:
database
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
copyDatabaseDictionaryToSetClientDictionary:
databasePropertyToGetClientProperty:
valueForProperty:
setValue:forProperty:
setExternalValuesWithDictionary:
valueForExternalProperty:
duplicateEntity
persistentID
_database
_persistentID
_predicateForAccountRewardsPID:
insertIdentifiers:forAccountRewardsPID:inDatabase:
identifiersWithAccountRewardsPID:inDatabase:
deleteIdentifiersWithAccountRewardsPID:inDatabase:
_predicateForEventPID:
rewards
currencyAmount
statusCode
updatePaymentTransactionRewards:forAccountRewardsPID:inDatabase:
_propertySettersForAccountRewards
setCurrencyAmount:
setTransactionIdentifiers:
setRewardsAddedIdentifiers:
paymentTransactionRewardsInDatabase:forAccountRewardsPID:
setRewards:
notANumber
initWithAmount:currency:
anyInDatabase:withReferenceIdentifier:
anyInDatabase:withServiceIdentifier:
setStatusCode:
rewardsWithEventPID:inDatabase:
insertRewards:forEventPID:inDatabase:
deleteRewardsWithEventPID:inDatabase:
setNotificationServicesDelegate:
initWithDelegate:archiveName:
nukeArchive
notificationServices
passesForNotificationService:
updateNotificationService:
_updateRegistrationStatusForPass:notificationService:requestedRegistrationStatus:refreshRegistrationIfPossible:
notificationServicesForPushTopic:
getUpdatesTaskWithNotificationService:
performTask:
notificationServiceIsEnabledForAnyPasses:
pushTopic
_updateRegistrationStatusForPass:notificationService:requestedRegistrationStatus:refreshRegistrationIfPossible:requestUpdateWhenAlreadyRegistered:
matchesNotificationService:
serviceType
supportsDPANNotifications
supportsFPANNotifications
requestedStatus
_registrationTaskSucceeded:withAuthenticationToken:
_notificationUpdatesTaskSucceeded:withResult:
_invokeAndClearHandlerForTask:withResult:
notificationService
_performRegistrationTaskForPaymentApplication:notificationService:completionTask:
registrationStatusForNotificationServiceType:passUniqueIdentifier:
lastUpdatedDateForNotificationServiceType:passUniqueIdentifier:
lastUpdatedTagForNotificationServiceType:passUniqueIdentifier:
getSpecificUpdatesTaskWithNotificationService:dpanIdentifier:lastUpdatedTag:
pertainsToNotificationService:andDPANIdentifier:
containsTaskPassingTest:
shouldIgnoreTransactionUpdatesSwitch
_performRegistrationForPassUniqueIdentifier:paymentApplication:notificationService:isInitialRegistration:
_cancelAllTasksForPaymentApplication:notificationService:
_performDeregistrationForPassUniqueIdentifier:paymentApplication:notificationService:
_clearStoredDataForPassUniqueIdentifier:notificationService:
setInitialUpdatesTask:
paymentApplicationsForNotificationService:
isAuxiliary
dataWithJSONObject:options:error:
SHA256Hash
certificates
base64EncodedStringWithOptions:
certificateVersion
registerTaskWithNotificationService:registrationData:signature:certificates:certificateVersion:dpanIdentifier:completionTask:
registerTaskWithNotificationService:registrationData:signature:certificates:certificateVersion:completionTask:
signChallenge:signatureEntanglementMode:completion:
signChallenge:forPaymentApplication:withCompletion:
deregisterTaskWithNotificationService:dpanIdentifier:
updateRegistrationStatus:forNotificationServiceType:passUniqueIdentifier:
updateAuthenticationToken:forNotificationService:
setAuthenticationToken:
_recalculatePushTopics
updateLastUpdatedDate:forNotificationServiceType:passUniqueIdentifier:
updateLastUpdatedTag:forNotificationServiceType:passUniqueIdentifier:
setLastUpdatedTag:
setLastUpdatedDate:
deleteAllTransactionsFromPaymentPassWithUniqueIdentifier:
deleteAllPaymentBalancesForPassUniqueIdentifier:
deleteAllMessagesFromPaymentPassWithUniqueIdentifier:
completionTask
authenticationToken
appLaunchToken
lastUpdatedTag
notifications
balances
passUniqueIdentifierWithPaymentApplication:
updateLastUpdatedDate:forNotificationService:
updateLastUpdatedTag:forNotificationService:
updateAppLaunchToken:forNotificationService:
passUniqueIdentifierWithPrimaryAccountIdentifier:
paymentNetworkIdentifier
countForObject:
isInitialUpdatesTask
_processTransactionDictionary:forPassUniqueIdentifier:paymentApplication:performTruncation:isInitialUpdate:
_processMessageDictionary:forPassUniqueIdentifier:paymentApplication:performTruncation:
initWithDictionary:
_validateBalanceResult:
paymentBalancesForPassUniqueIdentifier:
sendLowBalanceNotificationIfNecessaryForUpdatedBalances:startingBalances:passUniqueIdentifier:
updatePaymentBalances:forPassUniqueIdentifier:
value
sendLowBalanceNotificationForBalance:withReminder:passUniqueIdentifier:
updateLowBalanceNotificationForBalance:withPassUniqueIdentifier:
removeLowBalanceNotificationForBalance:withPassUniqueIdentifier:
balanceIdentifier
lastUpdateDate
setLastUpdateDate:
paymentTransactionWithSource:dictionary:hasNotificationServiceData:
addUpdateReasons:
processPaymentTransaction:forPassUniqueIdentifier:paymentApplication:
paymentMessageWithDictionary:
pertainsToNotificationService:
cancelTasksPassingTest:
removeObjectForKey:
task:gotResult:
task:willRetryAfterMinimumDelay:
taskSucceeded:
taskFailed:
task:encounteredError:
task:encounteredWarnings:
taskRequestedReauthentication:
handlePushEnabledForPass:withNotificationService:
handlePushDisabledForPass:withNotificationService:
handleInsertionOfPass:withNotificationService:
handleDeletionOfPass:withNotificationService:
handleUpdateOfPass:toPass:oldNotificationService:newNotificationService:
requestUpdatesFromNotificationService:passUniqueIdenitifer:
_pushTopics
_taskManager
_taskToHandlerMap
valueForKey:
copyWithZone:
bindToStatement:bindingIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
_property
predicateWithProperty:value:comparisonType:
objCType
bytes
comparisonType
forceFalse
_comparisonTypeFormat
predicateWithProperty:notEqualToValue:
predicateWithProperty:greaterThanValue:
predicateWithProperty:lessThanValue:
predicateWithProperty:bitwiseAndValue:
predicateWithProperty:bitwiseNotAndValue:
_comparisonType
_value
_forceFalse
bindToSelectStatement:bindingIndex:
isNegative
values
query
stringWithString:
arrayWithObjects:
copySelectSQLWithProperties:
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
queryProperty
_negative
_query
_queryProperty
_values
matchesNull
isNotNullPredicateWithProperty:
_matchesNull
booleanValue
falsePredicate
_booleanValue
predicateWithProperty:values:comparisonType:
predicateWithProperty:equalToValues:
negatedPredicate:
predicates
predicateWithProperty:notEqualToValues:
_unary
_trueIfNoPredicates
_combinationOperation
_predicates
appendFormat:
predicateWithAssociatedEntityClass:
_associatedEntityClass
_associatedPredicate
predicateWithProperty:matchingPattern:
pattern
predicateWithProperty:havingPrefix:
predicateWithProperty:havingSuffix:
_pattern
predicate
limitCount
initWithLongLong:
enumeratePersistentIDsUsingBlock:
entityClass
_newSelectSQLWithProperties:columns:
setOrderingDirections:
setOrderingProperties:
_newSelectSQLWithProperties:
initWithDatabase:descriptor:
copyEntityIdentifiers
countOfEntities
createTemporaryTableWithName:properties:
queryDescriptor
_descriptor
allocWithZone:
setEntityClass:
setLimitCount:
orderingDirections
orderingProperties
setPredicate:
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
arrayWithObject:
_aggregateValueForProperty:function:predicate:database:
queryWithDatabase:predicate:orderingProperties:orderingDirections:
queryWithDatabase:predicate:orderingProperties:orderingDirections:limit:
maxValueForProperty:predicate:database:
minValueForProperty:predicate:database:
setLongLong:forKey:
groupingID
expirationDate
sequenceCounter
isVoided
hasStoredValue
liveRenderedBackground
supportsCategoryVisualization
userInfo
isValidJSONObject:
sharingMethod
sharingURL
sharingText
displayProfile
backgroundColor
string
secondaryBackgroundColor
foregroundColor
labelColor
stripColor
passStyle
tallCode
hasBackgroundImage
hasStripImage
isCloudKitArchived
primaryAccountNumberSuffix
sanitizedPrimaryAccountNumber
supportsDefaultCardSelection
supportsSerialNumberBasedProvisioning
requiresTransferSerialNumberBasedProvisioning
isPaymentOptionSelectable
isCobranded
issuerCountryCode
_insertionDictionaryWithPass:passType:
updateWithPass:webService:transactionSevice:messageService:
initWithPass:passType:webService:transactionService:messageService:inDatabase:
_updateDictionaryWithPass:
_updateWithWebService:
_updateWithTransactionService:
_updateWithMessageService:
updateLocationsWithPass:
embeddedBeacons
updateWithBeacons:
nfcPayload
updateWithNFCPayload:
updateWithAssociatedPassTypeIdentifiers:
updateWithPaymentApplications:
updateWithAssociatedApplicationIdentifiers:
updateWithAssociatedWebDomains:
localLocationsURL
anyInDatabase:withURL:
queryWithDatabase:passPID:locationSourcePID:
insertLocationSourceWithURL:forPass:type:inDatabase:
insertLocations:forSource:inDatabase:
deleteEntitiesForPass:inDatabase:
insertNFCPayload:forPass:inDatabase:
insertBeacons:forPass:inDatabase:
updatePaymentApplications:forPass:inDatabase:
passTransactionService
insertPassNotificationServiceWithNotificationService:inDatabase:
_updateWithPassTransactionService:
updateWithNotificationService:
passMessageService
_updateWithPassMessageService:
insertAssociatedApplicationIdentifiers:forPass:inDatabase:
insertAssociatedPassTypeIdentifiers:forPass:inDatabase:
insertAssociatedWebDomains:forPass:inDatabase:
predicateForValidStyle
_propertiesForPass
_realPassInDatabase:withProperties:values:pID:
_realPassesInDatabase:predicate:orderedBy:
_realPass
_propertySettersForUpdateContext
_propertySettersForGroupingProfile
associatedPassTypeIdentifiersInDatabase:forPass:
associatedApplicationIdentifiersInDatabase:forPass:
dateWithTimeIntervalSinceReferenceDate:
predicateForPersistentID:
predicateForUniqueID:
predicateForPassType:
predicateForWebService:
predicateForGroup:
_predicateForSerialNumber:
predicateForNotificationService:
predicateForPaymentApplicationIdentifier:withSecureElementIdentifier:
predicateForPaymentApplicationIdentifier:withSecureElementIdentifiers:
predicateForPrimaryAccountIdentifier:
predicateForAssociatedAccountIdentifier:
_predicateForIsCloudKitArchived:
passesInDatabase:matchingPredicate:
queryWithDatabase:passPID:
deleteAnyInDatabase:forPassIdentifier:
setPassType:
_propertySettersForPass
_propertySettersForDisplayProfile
setDisplayProfile:
locationsInDatabase:forPassPID:withSourceType:
setEmbeddedLocations:
beaconsInDatabase:forPassPID:
setEmbeddedBeacons:
anyInDatabase:forPassPID:
setNFCPayload:
associatedPassTypeIdentifiersInDatabase:forPassPID:
setAssociatedPassTypeIdentifiers:
paymentApplicationsInDatabase:forPassPID:
setPaymentApplications:
associatedApplicationIdentifiersInDatabase:forPassPID:
setAssociatedApplicationIdentifiers:
associatedWebDomainsInDatabase:forPassPID:
setAssociatedWebDomains:
setPassTypeIdentifier:
setTeamID:
setSerialNumber:
setSequenceCounter:
setOrganizationName:
setRelevantDate:
setVoided:
setWebServiceURL:
JSONObjectWithData:options:error:
setManifestHash:
setShareCount:
setSharingMethod:
setSharingURL:
setSharingText:
setIngestedDate:
setModifiedDate:
setRevoked:
setHasStoredValue:
setLiveRenderedBackground:
setSupportsCategoryVisualization:
setCardType:
setPrimaryAccountIdentifier:
setPrimaryAccountNumberSuffix:
setSanitizedPrimaryAccountNumber:
setSupportsDPANNotifications:
setSupportsFPANNotifications:
setSupportsDefaultCardSelection:
setSupportsSerialNumberBasedProvisioning:
setRequiresTransferSerialNumberBasedProvisioning:
setHasAssociatedPeerPaymentAccount:
setAssociatedAccountServiceAccountIdentifier:
setPaymentOptionSelectable:
setCobranded:
setIssuerCountryCode:
setPassStyle:
setBackgroundColor:
setSecondaryBackgroundColor:
setForegroundColor:
setLabelColor:
setStripColor:
setTallCode:
setHasBackgroundImage:
setHasStripImage:
setLastModifiedTag:
setLastModifiedDate:
setLastModifiedSource:
setPassTypeID:
setGroupingID:
setNFCEnabled:
insertPass:withPassType:webService:transactionService:messageService:inDatabase:
passUniqueIDsInDatabase:matchingPredicate:
enumerateUpdateContextsForQuery:withHandler:
enumerateOrganizationNamesForQuery:withHandler:
enumeratePassesAndGroupingProfilesForQuery:withHandler:
anyInDatabase:withPersistentID:
anyInDatabase:withUniqueID:
anyInDatabase:withPassType:
anyInDatabase:withWebService:
anyInDatabase:withGroup:
anyInDatabase:withPassType:serialNumber:
anyInDatabase:withWebService:serialNumber:
anyInDatabase:withNotificationService:
anyInDatabase:withApplicationIdentifier:secureElementIdentifier:
anyInDatabase:withApplicationIdentifier:secureElementIdentifiers:
anyInDatabase:withPrimaryAccountIdentifier:
anyInDatabase:withAssociatedAccountIdentifier:
passesInDatabase:isCloudKitArchived:
queryWithDatabase:passType:
queryWithDatabase:group:
predicateForHasAnyWebService
predicateForPaymentCardType:
predicateForPassTypeIdentifierHash:
predicateForAssociatedPassTypeIdentifierHash:
predicateForPaymentApplicationSecureElementIdentifiers:
predicateForPaymentApplicationSecureElementIdentifier:
predicateForPaymentApplicationState:
predicateForPaymentApplicationSupportInAppPayment:
predicateForPaymentApplicationNetworks:
predicateForPaymentApplicationAppletDataFormatPrefix:
predicateForPaymentType:
predicateForTCIs:
predicateForStyle:
predicateForIssuerCountryCodes:
updateWithPushRegistrationStatus:date:
updateWithLastModifiedTag:
updateWithLastModifiedSource:
updateBackgroundColorWithPass:
updateTallCodeValueWithPass:
updateWithDefaultPaymentApplication:
updateWithAssociatedAccountIdentifier:
updateWithGroup:
updateWithRevocationStatus:
updateContext
groupingProfile
passFlavor
webService
transactionService
messageService
passNotificationServiceForType:
group
defaultPaymentApplication
revoked
associatedAccountIdentifier
getPushRegistrationStatus:date:
setSecureElementIdentifier:
paymentApplicationIdentifier
setPaymentApplicationIdentifier:
expressState
setExpressState:
forceTransactionGeneration
setForceTransactionGeneration:
setTransactionDate:
recoverMissingTransactions
setRecoverMissingTransactions:
_forceTransactionGeneration
_recoverMissingTransactions
_passUniqueIdentifier
_secureElementIdentifier
_paymentApplicationIdentifier
_expressState
_transactionDate
_queueTransitStateFetchRequest:
_ingestAppletStateHistory:withTransactionDate:forceTransactionGeneration:recoverMissingTransactions:forPaymentApplication:withPassUniqueIdentifier:skipQueuedRequestSanitization:expressTransactionState:
isBlacklisted
isParsedTransitApplication
receivedEvents
needsStationProcessing
_resolveStationCodesForAppletState:paymentApplication:passUniqueIdentifier:
updateTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:forceTransactionGeneration:recoverMissingTransactions:completion:
indexesOfObjectsPassingTest:
decodeHexadecimal
felicaState
greenCarOriginStationCode
greenCarDestinationStationCode
shinkansenOriginStationCode
shinkansenDestinationStationCode
shinkansenSecondaryOriginStationCode
shinkansenSecondaryDestinationStationCode
setStationCodes:
stationCodeProvider
setSourceIdentifier:
_setExternalTransitLookupParameters:
initWithRequest:
_mapkit_underlyingGEOError
mapItems
_externalTransitStationCode
name
updateTransitAppletStateWithStationNames:forPaymentApplication:withPassUniqueIdentifier:
startWithCompletionHandler:
_handleSEEventFromTSMForAID:
passWithPaymentApplicationIdentifier:secureElementIdentifiers:
supportsTransit
fetchAndCacheTransitStateForPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
devicePrimaryPaymentApplication
supportsSuica
minusSet:
processTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:expressTransactionState:
updateTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:
transitAppletStateWithPassUniqueIdentifier:paymentApplication:completion:
_notificationManager
_transactionProcessor
_accessQueue
_processingTransitRequests
_transitRequests
_predicateForPaymentApplicationPID:
_transitNetworkIdentifiersInDatabase:forPredicate:
_predicateForPaymentApplication:
initWithTransitNetworkIdentifier:networkOrder:forPaymentApplication:database:
transitNetworkIdentifiersInDatabase:forPaymentApplicationPID:
deleteEntitiesInDatabase:forPaymentApplication:
insertTransitNetworkIdentifiers:withPaymentApplication:inDatabase:
_predicateForAccountPID:
accountAdditionalPushTopics
account
extendedAccount
payments
initWithAccountAdditionalPushTopics:forAccountPID:inDatabase:
updateWithAccountAdditionalPushTopics:
insertAccountAdditionalPushTopics:forAccountPID:inDatabase:
setAccount:
setExtendedAccount:
setPayments:
_propertySettersForAccountAdditionalPushTopics
accountAdditionalPushTopicsForAccountPID:inDatabase:
deleteAccountAdditionalPushTopicsForAccountPID:inDatabase:
updateAccountAdditionalPushTopics:forAccountPID:inDatabase:
latitude
initWithDouble:
longitude
altitude
maxDistance
hasAltitude
relevantText
insertIndexedLocationWithLatitude:longitude:forLocation:database:
initWithLocation:source:inDatabase:
_propertySettersForLocation
_predicateForPassPID:
_predicateForPass:
_locationsInDatabase:matchingPredicate:
_predicateForLocationSourcePID:
_predicateForLocationSource:
_predicateForSourceType:
setLatitude:
setLongitude:
setMaxDistance:
setAltitude:
setName:
setRelevantText:
locationsInDatabase:forPass:
locationsInDatabase:forPassPID:
locationsInDatabase:forLocationSource:
locationsInDatabase:forLocationSourcePID:
queryWithDatabase:locationSourcePID:
_predicateForBalanceReminder:passIdentifier:
balanceReminderInDatabase:forQuery:
_predicateForPassWithUniqueIdentifier:
_predicateForBalanceReminder:passPID:
updateWithBalanceReminder:
initWithBalanceReminder:forBalanceIdentifier:pass:database:
setThreshold:
setEnabled:
balanceReminderInDatabase:forBalanceIdentifier:passIdentifier:
insertOrUpdateBalanceReminder:forBalanceIdentifier:pass:database:
balanceReminder
initWithIdentifier:
_clearLocationSearchTimer
_clearBeaconSearchTimer
initWithEffectiveBundle:
authorizationStatusForBundle:
_startCardSearchUpdatingWithCachedProximity:refreshingProximity:searchMode:
resetSystemTimeZone
_startCardSearchUpdatingWithCachedProximity:refreshingProximity:
requestWhenInUseAuthorization
_relevantCardExpirationTimerFired
_tearDownExitFenceTimerFired
_clearPersistedProximityInfo
updateTypeFromCachedProximity:refreshingProximity:searchMode:
_reallyStartCardSearchUpdatingWithCachedProximity:refreshingProximity:searchMode:
isAnyRemoteInterfaceActive
_addDateRelevantAndLocationPendingCardsForStyle:locationAvailable:
_loadPersistedLocationInfoIfNecessary
_updateAndSendRelevantCards
_startLocationSearchIfNecessaryWithSearchMode:
_startBeaconSearchIfNecessary
hasLocationsForPassWithUniqueID:
setEndDate:
horizontalAccuracy
coordinate
initWithCenter:radius:identifier:
startMonitoringForRegion:
initWithUUID:identifier:
setStartDate:
monitoredRegions
stopMonitoringForRegion:
_proxPendingPassExistsWithLocation
_isDoingLocationSearch
setDesiredAccuracy:
location
_handleNewLocation:forceAcceptance:from:
startUpdatingLocation
_beginLocationSearchTimeout
_locationIsNewEnoughAndHasGoodAccuracy:
_stopLocationSearch
stopUpdatingLocation
_isDoingBeaconSearch
_proxPendingPassExistsWithBeacon
startRangingBeaconsSatisfyingConstraint:
_beginBeaconSearchTimer
_stopBeaconSearch
stopRangingBeaconsSatisfyingConstraint:
_handleNewBeacons:
unlocatedCandidatePassesOfStyle:activatingBetweenStart:end:
locatedCandidatePassesOfStyle:activatingBetweenStart:end:
locatedDatelessCandidatePassesOfStyle:
style
_groupForPass:inGroups:
addPass:forDate:
addPass:forLocation:
addPass:forBeacon:
_unscheduleEagerRecalculation
_insertPass:intoGroups:forDate:
locationsByUniqueIDInBoundingBoxOfRegion:
_findMatchingLocation:beacon:forPass:passStyleRadius:usingNearbyLocations:
_insertPass:intoGroups:forLocation:
_insertPass:intoGroups:forBeacon:
proximityUUID
_sendGroups:
_shouldScheduleEagerRecalculation
_scheduleEagerRecalculationWithPasses:fenceLocation:minRadius:beaconUUIDs:
locationsForUniqueID:
major
unsignedShortValue
minor
proximityUUIDAsString
effectiveBoolValueForSetting:
sortedPasses
seedPass
titleText
iconData
bodyText
initWithIdentifier:categoryIdentifier:iconData:title:subtitle:body:requiresPasscode:bundleName:userInfo:
setCardItems:
handleSignificantTimeChangedEvent
timestamp
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_relevancySerialQueue
_startedObservingEvents
_pendingUpdates
_proximityManager
_authorizationStatus
_backingManager
_passbookAuthorizationStatus
_lastLocation
_roughLocation
_locationSearchStartDate
_locationSearchTimeout
_locationSearchState
_locationSearchMode
_lastBeacons
_beaconSearchTimeout
_beaconSearchState
_lastBacklightLevel
_dateRelevantCards
_proxPendingCards
_cardItemsController
_currentRelevantPassInfo
notificationIconImage
dataWithCGImage:
_dateText
_addPass:
_addPass:withRelevantText:
localizedString:
_seedPass
_passes
_relevantDate
_relevantText
dataWithContentsOfFile:options:error:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
finishDecoding
writeToFile:atomically:
decodeTopLevelObjectOfClasses:forKey:error:
PKDateForKey:
PKArrayContaining:forKey:
isToday
isTomorrow
isYesterday
setDateStyle:
setTimeStyle:
setDoesRelativeDateFormatting:
stringFromDate:
pk_uppercaseFirstStringForPreferredLocale
_propertySettersForAccount
rule
_predicateForRuleIdentifier:
ruleWithIdentifier:inDatabase:
initWithRule:inDatabase:
updateWithRule:
predicateFormat
parsePredicateFormat
setPredicateFormat:
rulesInDatabase:
insertOrUpdateRule:inDatabase:
deleteRuleWithIdentifier:inDatabase:
deleteRulesNotIncludingIdentifiers:inDatabase:
deleteAllRulesInDatabase:
hasDoneExpressUpgrade
_upgradeRequestForPass:
recordExpressUpgradeAttemptStatus:
_upgradePaymentPass:withRequest:completionHandler:
fromDeviceVersion
upgradeRequests
minimumOSVersion
initWithMinimumVersion:maximumVersion:
versionMeetsRequirements:deviceClass:
paymentApplicationIdentifiers
technologyTypes
supportsExpressForAutomaticSelectionTechnologyType:
invalidateAssertionOfType:withIdentifier:handler:
initForPaymentPass:withTechologyTest:
setExpressWithPassInformation:credential:completion:
requestPassUpgrade:pass:completion:
acquireAssertionOfType:withIdentifier:reason:handler:
setCustomActionVerb:
upgradeWithCompletionHandler:
sendUpgradeNotificationForPass:afterDelay:
virtualCardStatusUpdate
reason
updatedVirtualCards
insertVirtualCards:forVirtualCardStatusUpdatePID:inDatabase:
_propertySettersForAccountVirtualCardStatusUpdate
virtualCardsForVirtualCardStatusUpdatePID:inDatabase:
setUpdatedVirtualCards:
deleteVirtualCardsForVirtualCardStatusUpdatePID:inDatabase:
virtualCardStatusUpdatesWithEventPID:inDatabase:
insertVirtualCardStatusUpdate:forEventPID:inDatabase:
deleteVirtualCardStatusUpdatesWithEventPID:inDatabase:
initWithDelegate:cloudStoreCoordinatorDelegate:maximumDownloadRetries:atURL:
setRequireScreenSleep:
_queue_evaluateDownloadMissingAssetsActivity
_ubiquityManager
restart
_objectURLForUniqueID:
_queue_passUniqueIDs
_passIfExistsWithUniqueID:error:
_deletePossibleInvalidCardWithUniqueID:
catalogWithContentsOfURL:nonUbiquitousCatalogURL:
_queueContentFromObjectURL:
path
fileExistsAtPath:
_queue_imageSetContainerForUniqueID:ofType:withDisplayProfile:suffix:
_queue_cancelOutstansingAssetsDownloadsForPassWithUniqueID:
_queue_writeCard:diff:error:
_queue_evaluateMissingRemoteAssetsForPass:
updateUbiquitousPass:
_checkRevocationStatusForPass:withCompletion:
writeToURL:nonUbiquitousCatalogURL:atomically:
updateUbiquitousCatalog:
prepareToRemoveUbiquitousPassWithUniqueID:
_queue_deleteCardWithUniqueID:
_queue_removePendingMissingRemoteAssetsDownloadForPassWithUniqueID:
removeUbiquitousPassWithUniqueID:completed:
initWithFileURL:error:processingQueue:
setDataAccessor:
_performRevocationCheckActivity
_performCacheMaintenanceActivity
downloadMissingAassetsWithCompletion:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
pathExtension
URLByResolvingSymlinksInPath
_cacheURLForUniqueID:
_recursivelyCheckRevocationStatusForPassUniqueIdentifiers:
revocationStatusWithCompletion:
_queue_cardWithUniqueID:error:
initWithFileURL:validate:warnings:orError:
contentWithFileURL:
createXPCContainerForImageSetWithType:displayProfile:screenScale:screenSize:suffix:fileURL:cacheURL:
isEqualToData:
moveItemAtURL:toURL:error:
initWithFileURL:error:
diff:
updateImageSetForURL:withCacheURL:
initWithURL:options:error:
serializedRepresentation
stringByAppendingPathExtension:
deleteCardWithUniqueID:diagnosticReason:
existingCardUniqueIDs
existingCardWithUniqueID:
ubiquitousCardDidChange:
ubiquitousCardWithUniqueIDRemoved:
existingCatalog
localNonUbiquitousCatalogURL
ubiquitousCatalogDidChange:
_queue_updateCacheForObjectWithUniqueID:
serializedFileWrapperFromPassURL:
_cardsURL
_outstandingMissingRemoteAssetsUniqueIDs
_hasInProgressMissingRemoteAssetsUniqueIDs
_maximumDownloadRetries
remoteAssetsDownloaded
_queue_downloadMissingAssetsWithCompletion:
_queue_downloadRemoteAssetsForPassWithUniqueIdentifer:completion:
pk_enumerateObjectsOnQueue:usingAsynchronousBlock:completion:
initWithFileURL:queue:
pendingRemoteAssetsItems
addRemoteAssetData:forManifestItem:error:
remoteURL
downloadRemoteAssetItem:withCloudStoreCoordinatorDelegate:shouldWriteData:completion:
stringByDeletingPathExtension
initWithDomain:code:userInfo:
initWithAccountManager:databaseManager:peerPaymentWebServiceCoordinator:paymentWebServiceCoordinator:
hasAnyTransactions
_defaultCreditAccountAccountStatement
rewardsLifetime
_defaultCreditAccountCreditAccountDetails
physicalCards
virtualCards
_defaultCreditAccountAccountSummary
requiresDebtCollectionNotices
balanceStatus
cyclesPastDue
availableCredit
supportsShowNotifications
transactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:
_hasDefaultCreditAccountTransactionOfTransactionSourceType:
creditDetails
createdDate
_prefetchDataSources:completion:
defaultAccountForFeature:completion:
hasPaymentTransactionForPassUniqueIdentifier:withTransactionSource:
accountSummary
currentStatement
currentRegion
isApplePayActive
hasDefaultCreditAccount
defaultCreditAccountLifetimeRewards
defaultCreditAccountHasPhysicalCard
defaultCreditAccountHasVirtualCard
defaultCreditAccountRequiresDebtCollectionNotices
defaultCreditAccountBalanceStatus
defaultCreditAccountCyclesPastDue
defaultCreditAccountAvailableCredit
defaultCreditAccountSupportsShowNotifications
defaultCreditAccountPassIsDefault
availableKeys
deviceLanguage
defaultCreditAccountSetupFeatureState
defaultCreditAccountState
defaultCreditAccountDaysSinceLastTransaction
defaultCreditAccountHasInStoreTransaction
defaultCreditAccountHasInAppTransaction
defaultCreditAccountHasWebTransaction
defaultCreditAccountHasVirtualCardTransaction
defaultCreditAccountHasPhysicalCardTransaction
defaultCreditAccountDaysSinceCreatedDate
hasPeerPaymentAccount
peerPaymentAccountState
peerPaymentAccountStage
peerPaymentAccountHasTransaction
peerPaymentAccountHasBalance
preflightForKeys:completion:
_prefetchedAccounts
_prefetchedDefaultCreditAccount
_defaultPassUniqueIdentifier
_daysSinceLastTransaction
_prefetchedPeerPaymentAccount
_prefetchedSetupFeatures
_hasQueriedApplePayActive
_isApplePayActive
_hasQueriedDefaultCreditAccountInStoreTransaction
_hasDefaultCreditAccountInStoreTransaction
_hasQueriedDefaultCreditAccountInAppTransaction
_hasDefaultCreditAccountInAppTransaction
_hasQueriedDefaultCreditAccountWebTransaction
_hasDefaultCreditAccountWebTransaction
_hasQueriedDefaultCreditAccountVirtualCardTransaction
_hasDefaultCreditAccountVirtualCardTransaction
_hasQueriedDefaultCreditAccountPhysicalCardTransaction
_hasDefaultCreditAccountPhysicalCardTransaction
_hasQueriedPeerPaymentTransaction
_hasPeerPaymentTransaction
_predicateForTransactionServiceIdentifier:
_paymentsFromQuery:
_predicateForTransactionReferenceIdentifier:
_predicateForAccountIdentifier:
_predicateForScheduledPaymentsWithAccountIdentifier:
_predicateForFailedRecurringPaymentsWithAccountIdentifier:
payment
_commonInitWithPayment:accountIdentifier:
clientReferenceIdentifier
paymentDate
paymentStatusDate
fundingSource
accountSuffix
fundingDetails
scheduleDetails
preset
frequency
scheduledDay
scheduledDate
paymentTermsIdentifier
setFundingSource:
setScheduleDetails:
_propertySettersForAccountPayment
setFundingDetails:
_propertySetterForFundingDetailsName
setReferenceIdentifier:
setClientReferenceIdentifier:
setPaymentDate:
setPaymentStatusDate:
setAccountSuffix:
setFrequency:
setScheduledDay:
setPreset:
setScheduledDate:
setPaymentTermsIdentifier:
paymentsForTransactionServiceIdentifier:inDatabase:
paymentsForTransactionReferenceIdentifier:inDatabase:
paymentsWithEventPID:inDatabase:
paymentsWithAccountIdentifier:inDatabase:
scheduledPaymentsWithAccountIdentifier:inDatabase:
failedRecurringPaymentsWithAccountIdentifier:inDatabase:
insertPayment:forEventPID:accountIdentifier:inDatabase:
insertScheduledPayment:accountIdentifier:inDatabase:
deletePaymentWithEventPID:inDatabase:
deleteScheduledPaymentsWithAccountIdentifier:inDatabase:
_predicateForIdentifier:
initWithPushTopic:serviceType:serviceURL:registrationURL:deviceIdentifier:inDatabase:
_predicateForPushTopic:
_predicateForServiceURL:
_predicateForRegistrationURL:
_predicateForNoRegistrationURL
_predicateForServiceType:
_notificationServicesInDatabase:matchingPredicate:
_propertySettersForPaymentTransaction
lastUpdatedDate
lastUpdatedTagDate
setPushTopic:
setServiceType:
setServiceURL:
setRegistrationURL:
setAppLaunchToken:
setDeviceIdentifier:
setLastUpdatedTagDate:
insertNotificationServiceWithPushTopic:serviceType:serviceURL:registrationURL:deviceIdentifier:inDatabase:
anyInDatabase:withPushTopic:
anyInDatabase:withServiceURL:registrationURL:
anyInDatabase:withPushTopic:serviceType:serviceURL:registrationURL:
notificationServicesInDatabase:
notificationServicesInDatabase:withPushTopic:
notificationServicesInDatabase:withPushTopic:serviceType:serviceURL:registrationURL:
_predicateForNotificationServicePID:
updateWithPushToken:
updateWithAuthenticationToken:
updateWithAppLaunchToken:
updateWithLastUpdatedDate:
updateWithLastUpdatedTag:
archive
_createDatabaseAtURL:
anyInDatabase:withPassTypeID:
_predicateForType:
_registeredPasses:
_validPassPredicate
pk_arrayByApplyingBlock:
_passesFilteredByAutomaticallyPresentPassEnabled:
settingEnabled:forObject:
settingEnabled:forObjectWithUniqueIdentifier:defaultSettings:
_locatedPredicate
_candidatePassesOfStyle:activatingBetweenStart:end:furtherPredicate:
_unlocatedPredicate
_locatedCandidatePassesOfStyle:matchingFurtherPredicate:
locationsByPassUniqueIDWithBoundingBox:inDatabase:
_databaseWebService:
_registeredPass:
_paymentNetworkIdentifiersForPaymentNetworks:
dbPeerPaymentAccount
peerPaymentPassShouldNotBeAcceptedForAccount:
initWithSet:
deviceInAppPaymentApplications
acceptedForNonWebPaymentWithSupportedNetworkIdentifiers:merchantCapabilities:paymentMode:paymentApplicationStates:
_transitPredicate
predicateForState:
predicateForSecureElementIdentifiers:
predicateForSupportInAppPayment:
predicateForNetworks:
predicateForPassWithUniqueIdentifier:
predicateForPaymentMethodType:
acceptedForWebPaymentWithSupportedNetworkIdentifiers:merchantCapabilities:paymentMode:webService:paymentApplicationStates:
_passWithApplicationIdentifier:secureElementIdentifier:
_passWithPaymentApplication:
paymentTransactionsInDatabase:originatedOnDevice:forPassUniqueIdentifier:
_updateCloudStoreWithTransactions:passUniqueIdentifier:
_trimCatalog:andBuildPassPredicate:
_predicateForPassTypes:
groups
removeLastObject
uniqueIDs
_passTypeForPass:
_webServiceForPass:passType:
paymentApplicationsForPassUniqueIdentifier:
_transactionServiceForPass:
_messageServiceForPass:
_applyDemoPaymentApplicationToPass:
_applyDemoPaymentTransactionsToPass:
_applyDemoFelicaAppletStateToPass:
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
adjustGroupsAfterAddingPass:
handleInsertion:authToken:webService:pushEnabled:source:
settingEnabled:forDatabasePass:
_deleteNotificationServiceIfOrphaned:
adjustGroupsAfterUpdatingPass:oldGroupingProfile:
updateWithLastDeletionDate:
_deleteWebServiceIfOrphaned:
handleModification:webService:pushEnabled:source:
adjustGroupsBeforeRemovingPass:
handleDeletion:authToken:webService:pushEnabled:
passTypeID
deleteAccountEventsForAccountIdentifier:
removeSettingsForObjectWithUniqueIdentifier:
removeAllPreferencesForPassWithUniqueID:
_deletePassTypeIfOrphaned:
closeDatabase
invalidateServerChangeTokens
deleteDatabase
anyInDatabase:withIdentifier:
passUniqueIndentifier
canSyncTransactionToCloudKitWithBackingData:passUniqueIdentifier:serviceIdentifier:
removeItemsWithRecordNames:itemType:completion:
messagesInDatabase:withIdentifier:
settingsForObject:
_migrateObjectSettingsWithSafeHavenArchiveURL:
archiveWithURL:
uniqueIdentifiers
removeSafehavenArchive
updateSettings:forObject:
handlePushEnabled:authToken:webService:
handlePushDisabled:authToken:webService:
numberWithLong:
updateWithWebService:
lastDeletionDate
tagLastUpdateDate
webServicesInDatabase:matchingPredicate:
webServicesInDatabase:withPassType:
_predicateMatchingPassesForWebService:
lastPushDate
frequencyScore
updateLastPushDate:
updateFrequencyScore:
updateLastUpdateDate:
_databaseNotificationService:
paymentApplicationsInDatabase:forNotificationService:
predicateForDPANIdentifier:
paymentApplication
anyInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
paymentApplicationsInDatabase:forPassUniqueIdentifier:secureElementIdentifiers:
predicateForPrimaryPaymentApplication:
paymentApplicationsInDatabase:
paymentApplicationsInDatabase:forSecureElementIdentifiers:
registrationStatus
updateWithRegistrationStatus:
anyInDatabase:withPaymentApplicationPID:
transitAppletState
setShinkansenOriginStationString:
setShinkansenDestinationStationString:
setShinkansenSecondaryOriginStationString:
setShinkansenSecondaryDestinationStationString:
setGreenCarOriginStationString:
setGreenCarDestinationStationString:
setNeedsStationProcessing:
updateWithAppletState:
transitPassPropertiesWithPaymentApplication:
felicaHistory
processUpdateWithAppletHistory:concreteTransactions:ephemeralTransaction:
historySequenceNumber
insertFelicaTransitAppletState:forPaymentApplicationPID:inDatabase:
insertTransitAppletState:forPaymentApplicationPID:inDatabase:
setTransactionStatus:
paymentTransactionIdentifier
setPaymentTransactionIdentifier:
paymentTransactionWithSource:
setTransactionType:
setTransitType:
setOriginatedByDevice:
appletCurrencyCode
setStationCodeProvider:
setShouldSuppressDate:
effectiveContactlessPaymentApplicationState
serviceProviderSupportedNetworks
serviceProviderCapabilities
passesForNonWebInAppPaymentOnNetworks:withCapabilities:issuerCountryCodes:
availableFrom
availableUntil
peerPaymentMemo
setPeerPaymentMemo:
_insertOrUpdatePaymentTransaction:withOriginDeviceID:forPassUniqueIdentifier:paymentApplication:withInsertionMode:performTruncation:
setPeerPaymentMessageReceivedDate:
updateWithMerchant:
anyInDatabase:withServiceIdentifier:forPassWithUniqueIdentifier:
updateWithPaymentMessage:
messageDate
numberOfPaymentMessagesInDatabase:forPassUniqueIdentifier:newerThanDate:
isValid
insertPaymentMessage:withPaymentPass:paymentApplication:inDatabase:
truncateEntitiesForPass:inDatabase:toCount:
paymentMessage
insertPaymentBalance:withPaymentPass:inDatabase:
anyInDatabase:withIdentifier:forPassWithUniqueIdentifier:
paymentBalance
paymentBalancesInDatabase:forPassWithUniqueIdentifier:
paymentHash
hasTransactionSource
_updateCameExclusivelyFromCloudStore:
anyInDatabase:withPaymentHash:withTransactionSource:withNotificationServiceData:forPassWithUniqueIdentifier:
supportsFuzzyMatching
closestTransactionInDatabase:fromTransaction:forPassUniqueIdentifier:
mapsMerchant
mapsBrand
hasCloudArchivableDeviceData
isCloudArchivableDeviceDataEqual:
updateWithPaymentTransaction:
numberOfPaymentTransactionsInDatabase:forPassUniqueIdentifier:withNotificationServiceData:newerThanDate:
insertPaymentTransaction:withPaymentPass:paymentApplication:inDatabase:
archiveMessagesOfType:forPass:inDatabase:
truncateEntitiesForPass:withNotificationServiceData:inDatabase:toCount:
_affectedTransactionsFromTransaction:passUniqueIdentifier:updatedMerchant:updatedBrand:
closestPendingTransactionInDatabase:fromTransactionDate:withNotificationServiceData:forMerchantName:passWithUniqueIdentifier:
replaceWithPaymentTransaction:
paymentTransactionsInDatabase:matchingMapsMerchantIdentifier:forPassUniqueIdentifier:
paymentTransactionsInDatabase:matchingMapsBrandIdentifier:forPassUniqueIdentifier:
removeMapsDataForIssueReportIdentifier:
paymentTransactionsInDatabase:isCloudKitArchived:
paymentTransactionsRequiringReviewInDatabase:forAccountIdentifier:
paymentTransactionFeesInDatabase:forPaymentTransaction:
paymentTransactionFeesInDatabase:forPaymentTransactionIdentifier:
insertOrUpdateValueAddedMerchant:
valueAddedMerchant
setMerchant:
updateWithValueAddedServiceTransaction:paymentTransaction:
insertValueAddedServiceTransaction:withPass:paymentTransaction:valueAddedMerchant:inDatabase:
valueAddedServiceTransaction
valueAddedServiceTransactionsInDatabase:forPassUniqueIdentifier:limit:
valueAddedServiceTransactionsInDatabase:forPaymentTransaction:
updateWithValueAddedMerchant:
insertValueAddedMerchant:inDatabase:
timesPresented
setTimesPresented:
anyInDatabase:forPassWithUniqueIdentifier:
hasAnyTransactionsInDatabase:
paymentMessagesInDatabase:forPaymentPassUniqueIdentifier:
paymentTransactionsInDatabase:forPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:ordereredByDate:limit:
paymentTransactionsInDatabase:matchingPeerPaymentCounterpartHandle:forPassUniqueIdentifier:withTransactionSource:withBackingData:limit:
paymentTransactionsInDatabase:matchingMerchantMapsMUID:forPassUniqueIdentifier:withTransactionSource:withBackingData:limit:
paymentTransactionsInDatabase:matchingMerchant:forPassUniqueIdentifier:withTransactionSource:withBackingData:limit:
paymentTransactionsInDatabase:withMerchantCategory:forPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:
paymentTransactionsInDatabase:withTransactionType:forPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:
approvedPaymentTransactionsInDatabase:forPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:ordereredByDate:limit:
pendingPaymentTransactionsInDatabase:forPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:ordereredByDate:limit:
associatedAccountIdentifierForPassWithUniqueIdentifier:
accountWithIdentifier:
dateWithTimeIntervalSince1970:
closestStartOfYearFromDate:
closestStartOfMonthFromDate:
nextStartOfYearFromDate:
setTransactionCount:
setTotalAmount:
components:fromDate:
dateFromComponents:
initWithCalendarIdentifier:
nextDateAfterDate:matchingUnit:value:options:
paymentTransactionsInDatabase:withTransactionSource:withBackingData:limit:
transactionsRequiringMerchantCleanupInDatabase:forPassUniqueIdentifier:withLastReprocessingDateBeforeDate:transactionDateWithinWindow:
hasPaymentTransactionInDatabase:forPassUniqueIdentifier:withTransactionSource:
mapsMerchantsInDatabase:
mostRecentActiveTransactionInDatabase:
anyInDatabase:
updateWithPeerPaymentAccount:
insertPeerPaymentAccount:inDatabase:
createGroupsIfNecessary
setPassLibraryMachServiceName:
setDeviceName:
setRemotePass:
applySettingsToObject:
_registerPasses:
insertPassTypeWithPassTypeID:teamID:inDatabase:
webServiceURL
anyInDatabase:withPassType:serviceURL:
insertWebServiceWithPassType:serviceURL:inDatabase:
transactionServiceRegistrationURL
transactionPushTopic
_deviceIdentifierForExistingServiceURL:registrationURL:
messagePushTopic
deviceIdentifier
setWithCapacity:
_predicateForStyle:
serviceURL
registrationURL
initWithDatabaseURL:
createSchemaInDatabase:
paymentApplicationsForSecureElementIdentifiers:
setDPANSuffix:
setSupportsInAppPayment:
setSupportsContactlessPayment:
setDPANIdentifier:
setApplicationIdentifier:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
dataWithContentsOfURL:
setPhoneNumber:
setURL:
initWithLatitude:longitude:
setLocation:
setCategory:
setDetailedCategory:
setHeroImageURL:
setHeroImageAttributionName:
setLogoURL:
setRawName:
setMapsMerchant:
setMapsBrand:
setCity:
filteredArrayUsingPredicate:
dateWithDaysBeforeNow:
setAmount:
setPaymentHash:
setHasNotificationServiceData:
setProcessedForLocation:
setProcessedForStations:
setProcessedForMerchantCleanup:
setTechnologyType:
setPeerPaymentType:
setPeerPaymentStatus:
setPeerPaymentCounterpartHandle:
city
setLocality:
setAdministrativeArea:
dictionaryWithContentsOfFile:
initWithDictionary:source:
updateTransitAppletStateWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:forceTransactionGeneration:completion:
hasBackingData
cloudStoreSpecificKeysForItem:
updateCloudStoreWithLocalItems:recordSpecificKeys:completion:
featureApplicationsInDatabase:
featureApplicationWithIdentifier:inDatabase:
featureApplication
insertOrUpdateFeatureApplication:inDatabase:
deleteFeatureApplicationsNotIncludingIdentifiers:inDatabase:
deleteFeatureApplicationWithIdentifier:inDatabase:
deleteAllFeatureApplicationsInDatabase:
accountsInDatabase:
accountWithIdentifier:inDatabase:
accountWithVirtualCardIdentifier:inDatabase:
accountWithPhysicalCardIdentifier:inDatabase:
insertOrUpdateAccount:inDatabase:
deleteAccountsNotIncludingIdentifiers:inDatabase:
deleteAccountWithIdentifier:inDatabase:
deleteAllAccountsInDatabase:
arrayByAddingObjectsFromArray:
insertOrUpdateAccountEvent:inDatabase:
accountEventWithIdentifier:inDatabase:
event
redemptionAccountEventWithRewardsAddedIdentifier:inDatabase:
redemptionAccountEventWithTransactionIdentifier:inDatabase:
successfulRedemptionEventsToPeerPaymentForAccountIdentifier:inDatabase:
accountEventsForAccountIdentifier:types:startDate:endDate:ordereredByDate:limit:inDatabase:
accountEventsWithAccountIdentifier:inDatabase:
deleteAccountEventWithIdentifier:inDatabase:
deleteAccountEventsForAccountIdentifier:inDatabase:
creditAccountStatementsForAccountIdentifier:inDatabase:
creditAccountStatementsWithIdentifier:withAccountIdentifier:inDatabase:
updateWithCreditAccountStatement:
insertCreditAccountStatement:withAccountIdentifier:inDatabase:
lastRedemptionEventToPeerPaymentForAccountIdentifier:inDatabase:
deleteVirtualCardEncryptedDataForAccount:inDatabase:
balanceSummary
pendingPurchases
decimalNumberByAdding:
category
paymentTransactionsInDatabase:forPassUniqueIdentifier:withRedemptionType:startDate:endDate:
rewardsTotalAmount
rewardsItems
pk_negativeValue
_startOfTimeBlockForUnit:inCalendar:fromDate:forward:
setTransactions:
transactions
arrayByAddingObject:
totalAmount
setTransactionSource:
setRewardsTotalAmount:
setRewardsTotalCurrencyCode:
initWithRewardsItems:
billPaymentSelectedSuggestedAmountsWithStatementIdenfitier:accountIdentifier:inDatabase:
billPaymentSelectedSuggestedAmountsWithAccountIdentifier:withStartDate:endDate:inDatabase:
itemsInDatabase:
itemsWithRelevantDate:inDatabase:
activeItemsWithRelevantDate:inDatabase:
activeItemsRequiringBadgingForRelevantDate:inDatabase:
activeItemRequiringBadgeExistsForRelevantDate:inDatabase:
activeItemIdentifiersWithRelevantDate:inDatabase:
nonTerminalItemIdentifiersInDatabase:
itemWithIdentifier:inDatabase:
item
insertOrUpdateItem:itemOrder:inDatabase:
deleteItemsNotIncludingIdentifiers:inDatabase:
discoveryItemWithIdentifier:
updateWithDiscoveryItem:
setDiscoveryItems:
discoveryItems
updateForRuleResult:
updateItem:inDatabse:
deleteItemWithIdentifier:inDatabase:
deleteAllItemsInDatabase:
engagementMessageWithIdentifier:
updateWithDiscoveryEngagementMessage:
updateEngagementMessages:
engagementMessages
paymentSetupProductConfigurationsInDatabase:
paymentSetupProductConfigurationWithIdentifier:inDatabase:
paymentSetupProductConfiguration
insertOrUpdatePaymentSetupProductConfiguration:inDatabase:
deletePaymentSetupProductConfigurationsNotIncludingIdentifiers:inDatabase:
deletePaymentSetupProductConfigurationWithIdentifier:inDatabase:
deleteAllPaymentSetupProductConfigurationsInDatabase:
paymentTransactionsForCloudKitArchivedState:
transactionWithTransactionIdentifier:
transactionWithReferenceIdentifier:
passUniqueIdentifierForTransactionWithIdentifier:
passUniqueIdentifierForTransactionWithServiceIdentifier:
passUniqueIdentifierWithAssociatedAccountIdentifier:
accountEventWithIdentifier:
insertOrUpdateAccountEvent:
syncOriginatingTransactionsToCloudStore
passesForCloudKitArchivedState:
insertOrUpdatePeerPaymentAccount:
removePeerPaymentAccount
initWithURL:
hasAnyPasses
uniqueIDForPassWithPassTypeID:serialNumber:
numberOfPassesOfType:
numberOfPaymentPassesWithState:secureElementIdentifiers:
passesWithPassTypeID:
passesWithPassTypeIdentifierHash:
passesWithPassTypeIdentifierHashes:automaticSelectionOnly:
passesWithPassTypeIdentifierHash:andAssociatedPassTypeIdentifierHash:
locatedCandidatePassesOfStyle:
locatedCandidatePassesOfStyle:filteringOutPasses:
passesForWebService:
passesForPaymentType:
contactlessAccessPaymentPassesWithTCI:
paymentPassesWithIssuerCountryCodes:
transitPasses
passesForWebPaymentOnNetworks:withCapabilities:webService:issuerCountryCodes:
paymentPassesWithAssociatedPassTypeIdentifierHashes:automaticSelectionOnly:
passWithPaymentApplicationIdentifier:
passUniqueIdentifierWithPaymentApplicationIdentifier:
updateModifiedSource:forUniqueID:
deletePaymentTransactionWithIdentifier:forPassWithUniqueIdentifier:
settingEnabled:forPass:
updateSettings:forPass:
_setObjectSettingsManager:
getRegistrationStatus:date:forSerialNumber:webService:
updateRegistrationStatus:date:forSerialNumber:webService:
updateLastModifiedTag:forSerialNumber:webService:
updateWebService:
lastDeletionDateForWebService:
lastUpdatedTagForWebService:
tagLastUpdateDateForWebService:
updateLastDeletionDate:forWebService:
updateLastUpdatedTag:forWebService:
webServices
webServicesForPassTypeID:
pushEnabledPassTypeIDs
hasPushEnabledPassesForWebService:
getWebService:updateContext:forPassWithUniqueID:
passUpdateContextForSerialNumber:webService:
webServiceForPass:
getLastPushDate:lastUpdateDate:frequencyScore:forPassTypeID:
updateLastPushDate:frequencyScore:forPassTypeID:
updateLastUpdateDate:forPassTypeID:
enumeratePassUpdateContextsForWebService:withHandler:
enumerateOrganizationNamesForPassTypeID:withHandler:
paymentApplicationWithPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
transactionServiceForPaymentApplication:
messageServiceForPaymentApplication:
canPerformAction:forPassWithUniqueIdentifier:
updatePeerPaymentMemo:forTransactionWithServiceIdentifier:
updatePeerPaymentMessageReceivedDate:forTransactionWithServiceIdentifier:
updateMerchant:forTransaction:passUniqueIdentifier:
paymentBalanceWithIdentifier:forPassUniqueIdentifier:
truncatePaymentBalancesForPassUniqueIdentifier:toMaximumEntityCount:
setBalanceReminder:forBalanceIdentifier:withPassUniqueIdentifier:
removeMapsDataForTransactionWithIdentifier:forPassUniqueIdentifier:issueReportIdentifier:
transactionsRequiringReviewForAccountWithIdentifier:
paymentTransactionFeesForPaymentTransaction:
paymentTransactionFeesForPaymentTransactionIdentifier:
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:
valueAddedServiceTransactionsForPassWithUniqueIdentifier:limit:
valueAddedServiceTransactionsForPaymentTransaction:
valueAddedMerchantWithIdentifier:
hasAnyTransactionsForPassWithUniqueIdentifier:
messagesForPassWithUniqueIdentifier:
transactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:ordereredByDate:limit:
transactionsForPassWithUniqueIdentifier:withPeerPaymentCounterpartHandle:withTransactionSource:withBackingData:limit:
transactionsForPassWithUniqueIdentifier:withMapsIdentifier:withTransactionSource:withBackingData:limit:
transactionsForPassWithUniqueIdentifier:matchingMerchant:withTransactionSource:withBackingData:limit:
transactionsForPassWithUniqueIdentifier:merchantCategory:withTransactionSource:withBackingData:startDate:endDate:limit:
transactionsForPassWithUniqueIdentifier:withTransactionType:withTransactionSource:withBackingData:startDate:endDate:limit:
approvedTransactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:ordereredByDate:limit:
pendingTransactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:ordereredByDate:limit:
transactionCountByPeriodForPassWithUniqueIdentifier:withTransactionSource:withBackingData:calendar:calendarUnit:includePurchaseTotal:
transactionsWithTransactionSource:withBackingData:limit:
transactionsRequiringMerchantCleanupForPassUniqueIdentifier:withLastReprocessingDateBeforeDate:transactionDateWithinWindow:
mapsMerchants
featureApplications
featureApplicationWithIdentifier:
setFeatureApplications:
insertOrUpdateFeatureApplication:
deleteFeatureApplicationWithIdentifier:
deleteAllFeatureApplications
accounts
accountWithVirtualCardIdentifier:
accountWithPhysicalCardIdentifier:
setAccounts:
insertOrUpdateAccount:
deleteAccountWithIdentifier:
deleteAllAccounts
setScheduledPayments:forAccount:
scheduledPaymentsWithAccountIdentifier:includeFailedRecurringPayments:
accountEventExistsWithIdentifier:
redemptionAccountEventWithRewardsAddedIdentifier:
successfulRedemptionEventsToPeerPaymentForAccountIdentifier:
accountEventsForAccountIdentifier:types:startDate:endDate:ordereredByDate:limit:
accountEventsForAccountIdentifier:
deleteAccountEventWithIdentifier:
creditAccountStatementsForAccountIdentifier:
insertOrUpdateCreditStatements:forAccountIdentifier:
lastRedemptionEventToPeerPaymentForAccountIdentifier:
deleteVirtualCardEncryptedDataForAccount:
categoryVisualizationMagnitudesForPassUniqueID:
cashbackByPeriodFromPassUniqueIdentifier:withStartDate:endDate:calendar:calendarUnit:type:
billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:withStatementIdentifier:
billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:withStartDate:endDate:
discoveryItemsForRelevantDate:
activeDiscoveryItemsForRelevantDate:
activeDiscoveryItemsRequiringBadgeForRelevantDate:
activeDiscoveryItemRequiringBadgeExistsForRelevantDate:
activeDiscoveryItemIdentifiersForRelevantDate:
nonTerminalDiscoveryItemIdentifiers
updateDiscoveryItemsWithRemoteItems:
updateDiscoveryItemsWithRuleResults:
updateDiscoveryItem:
deleteDiscoveryItemWithIdentifier:
deleteAllDiscoveryItems
rules
ruleWithIdentifier:
insertOrUpdateRule:
updateRules:
deleteRuleWithIdentifier:
deleteAllRules
engagementMessagesForRelevantDate:
engagementMessagesForPassQualifier:relevantDate:active:
updateEngagementMessagesWithRemoteMessages:
updateEngagementMessagesForRuleResults:
updateEngagementMessage:
deleteEngagementMessageWithIdentifier:
deleteAllEngagementMessages
paymentSetupProductConfigurationWithIdentifier:
insertOrUpdatePaymentSetupProductConfiguration:
deletePaymentSetupProductConfigurationWithIdentifier:
deleteAllPaymentSetupProductConfigurations
webServicesDelegate
setWebServicesDelegate:
cloudStoreCoordinator
objectSettingsManager
setObjectSettingsManager:
paymentServicesDelegate
notificationServicesDelegate
setShouldSyncTransactionsToCloudStore:
_databaseURL
_paymentTransactionUpdateQueue
_delegateQueue
_shouldSyncTransactionsToCloudStore
_webServicesDelegate
_objectSettingsManager
_paymentServicesDelegate
_notificationServicesDelegate
rewardsBalance
remainingMinimumPayment
remainingStatementBalance
pastDueAmount
autoPayEnabled
inGrace
lastPaymentDate
paymentDueDate
unpostedInterest
unpostedInterestTimestamp
chargeOffPreventionAmount
insertAccountBalanceSummary:forCreditAccountSummaryPID:inDatabase:
insertCreditAccountStatement:forCreditAccountSummaryPID:inDatabase:
initWithCreditAccountSummary:forCreditAccountDetailsPID:inDatabase:
_predicateForCreditAccountDetailsPID:
deleteCreditAccountBalanceSummaryForCreditAccountSummaryPID:inDatabase:
deleteCreditAccountStatementForCreditAccountSummaryPID:inDatabase:
creditAccountSummary
updateWithCreditAccountSummary:
insertAccountSummary:forCreditAccountDetailsPID:inDatabase:
updateCreditAccountBalanceSummary:forCreditAccountSummaryPID:inDatabase:
updateCreditAccountStatement:forCreditAccountSummaryPID:inDatabase:
setAvailableCredit:
setCurrentBalance:
setRewardsBalance:
setRemainingStatementBalance:
setRemainingMinimumPayment:
setPastDueAmount:
setAutoPayEnabled:
setRequiresDebtCollectionNotices:
setBalanceStatus:
setCyclesPastDue:
setLastPaymentDate:
setPaymentDueDate:
setUnpostedInterest:
setUnpostedInterestTimestamp:
setInGrace:
setChargeOffPreventionAmount:
_propertySettersForCreditAccountSummary
creditAccountBalanceSummaryForCreditAccountSummaryPID:inDatabase:
setBalanceSummary:
creditAccountStatementForCreditAccountSummaryPID:inDatabase:
setCurrentStatement:
deleteCreditAccountSummaryForCreditAccountDetailsPID:inDatabase:
creditAccountSummaryForCreditAccountDetailsPID:inDatabase:
updateCreditAccountSummary:forCreditAccountDetailsPID:inDatabase:
expressInformation
setExpressInformation:
credential
setCredential:
completion
setCompletion:
cardTypeToRemove
setCardTypeToRemove:
cardTypeRemovalCompletion
setCardTypeRemovalCompletion:
_expressInformation
_credential
_completion
_cardTypeToRemove
_cardTypeRemovalCompletion
_accessObserversWithHandler:
supportsOptionalAuthentication
expressMode
supportsExpress
technologyType
enumerateCriteriaWithHandler:
_conflictingExpressPassIdentifiersForPassInformation:withState:completion:
_queueExpressMutationRequest:
removeExpressPassWithUniqueIdentifier:completion:
_persistTargetExpressState:
_executeExpressMutationCompletions:
setProcessing:
setReceivedEvents:
_presentExpressRemoteAlert
componentsSeparatedByString:
cStringUsingEncoding:
_updateContactlessInterfaceSuppression:
stopExpressModes
sanitizeExpressPasses
expressPassInformationForMode:withHandler:
expressPassInformationWithPassUniqueIdentifier:handler:
expressPassesInformationWithAutomaticSelectionTechnologyType:handler:
conflictingExpressPassIdentifiersForPassInformation:withCompletion:
conflictingExpressPassIdentifiersForPassInformation:withReferenceExpressState:completion:
removeExpressPassesWithCardType:completion:
outstandingExpressTransactionStateWithHandler:
_expressModesEnableable
_expressModesEnabled
_expressModesNeedUpdate
_contactlessInterfaceSuppressed
_outstandingExpressType
_outstandingExpressTypeProcessing
_outstandingExpressApplicationIdentifier
_outstandingExpressInformation
_lastReceivedExpressTransactionEvents
_notificationManagerLock
_notificationRegistrationState
_lockoutStateChangedNotifyToken
_authenticationLockedOut
populateDictionary:forStatement:
openingDate
closingDate
statementBalance
minimumDue
purchases
feesCharged
interestCharged
balanceTransfers
paymentsAndCredits
credits
rewardsEarned
rewardsRedeemed
rewardsYTD
initWithCreditAccountStatement:forCreditAccountSummaryPID:inDatabase:
_predicateForCreditAccountSummaryPID:
creditAccountStatement
initWithCreditAccountStatement:forEventPID:withAccountIdentifier:inDatabase:
initWithCreditAccountStatement:withAccountIdentifier:inDatabase:
setOpeningDate:
setClosingDate:
setStatementBalance:
setMinimumDue:
setPurchases:
setFeesCharged:
setInterestCharged:
setBalanceTransfers:
setPaymentsAndCredits:
setCredits:
setRewardsEarned:
setRewardsRedeemed:
setRewardsYTD:
setRewardsLifetime:
_propertySettersForCreditAccountStatement
insertCreditAccountStatement:forEventPID:withAccountIdentifier:inDatabase:
deleteCreditAccountStatementForEventPID:inDatabase:
creditAccountStatementsWithEventPID:inDatabase:
terminalType
TCIs
technology
merchantIdentifiers
valueAddedServiceMode
supportsExpressForAutomaticSelectionTechnologyType:byHardware:
insertObject:atIndex:
_predicateForPaymentAutomaticSelectionCriterionPID:
_predicateForIsPrimary:
_TCIsInDatabase:withPredicate:
initWithTCI:primary:forPaymentAutomaticSelectionCriterionPID:database:
primaryTCIsInDatabase:forPaymentAutomaticSelectionCriterionPID:
TCIsInDatabase:forPaymentAutomaticSelectionCriterionPID:
deleteEntitiesInDatabase:forPaymentAutomaticSelectionCriterionPID:
insertPrimaryTCIs:TCIs:withPaymentAutomaticSelectionCriterion:inDatabase:
_unarchiveTasks
_tryToDequeueTasks
_releasePowerAssertion
_enqueueTask:
cancel
_deactivateTask:
_activateOrScheduleEligibleTasksWithNetworkConnectivity:
coalescesWithTaskSubclass:
actionForInactiveTask:
replaceObjectAtIndex:withObject:
mergeWithNewerTask:
actionForActiveTask:
_renewScheduledTask:
_dequeueTask:
_archiveTasks
setNextStartDate:
resetBackoff
setManager:
pk_arrayByRemovingObjectsInArray:
nextStartDate
_activateTask:
_createPowerAssertion
start:
PKArrayForKey:
unarchivedObjectOfClass:fromData:error:
backoffComplete
nextBackoffInterval
incrementBackoff
canRequestReauthentication
setCanRequestReauthentication:
taskChangedState:
taskFailedForAuthentication:
_enqueuedTasks
_scheduledTasks
_activeTasks
_archivePath
_scheduledActivityClientIdentifier
_powerAssertionName
_powerAssertionIdentifier
_archivePending
setCreationDate:
performStart:
performCancel
numberOfBackoffLevels
backoffLevels
performReset
decodeBoolForKey:
decodeIntegerForKey:
encodeObject:forKey:
creationDate
encodeBool:forKey:
encodeInteger:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
deliverResult:
deliverResult:forSubtask:
reportStateChange
reportError:
reportError:forSubtask:
reportWarnings:
reportWarnings:forSubtask:
succeed
fail
failForAuthentication
manager
setIsValid:
_started
_canceled
_nextBackoffLevel
_nextBackoffIteration
_canRequestReauthentication
_isValid
_manager
_creationDate
_nextStartDate
_destroyConnectionManager
_startConnection:
_handleConnectionSuccessWithResponse:data:
setSuccessHandler:
_handleConnectionFailureWithError:
setFailureHandler:
request
setAllowsCellularAccess:
setAllowsAnyHTTPSCertificate:forHost:
setRequest:
handleResponse:data:
handleError:
_connectionManager
defaultSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
_sendFailure:
invalidateAndCancel
protectionSpace
realm
protocol
authenticationMethod
proposedCredential
HTTPBody
inputStreamWithData:
_sendSuccess
setLength:
initWithLength:
appendData:
initWithFormat:arguments:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
successHandler
failureHandler
_urlSession
_task
_data
_response
_successHandler
_failureHandler
_request
initializeConfigurationDefaults
taskWithWebService:updateContext:source:
setUserRequested:
taskWithWebService:updateContext:contact:personalizationToken:requiredPersonalizationFields:personalizationSource:
generateNewDeviceIdentifier
_cancelAllTasksForPassTypeIdentifier:serialNumber:
_registerWithSerialNumber:authToken:webService:
unregisterTaskWithWebService:serialNumber:authToken:
_cancelAutomaticUpdateTasksForPassTypeIdentifier:serialNumber:
_cancelWhatChangedTasksForPassTypeIdentifier:
adjustStateForIncomingPushNotification:andComputeNextUpdateDate:
_scheduleUpdateForPassTypeIdentifier:afterDate:
_getSerialNumbersTask:gotResult:
_getPassTask:gotResult:
_personalizePassTask:gotResult:
source
_registrationTaskSucceeded:
_whatChangedTaskSucceeded:
reportAbandonedTask:passTypeID:
reportError:webService:logToService:
reportWarnings:webService:logToService:
_updatePassTypeIdentifier:
registerTaskWithWebService:serialNumber:authToken:
taskWithWebService:lastUpdatedTag:tagLastUpdateDate:
gotUpdates
subtasks
reportPushWithNoSerialNumbersFromTasks:
serialNumbers
reportMissingTagWithRequestedSerialNumbers:forWebService:
reportUnmodifiedTag:withRequestedSerialNumbers:forWebService:
setServerRequested:
reportUpdateRequestForNonPushEnabledSerialNumber:forWebService:
lastModifiedTag
serverRequested
reportUnchangedPassForServerRequestedUpdateTask:
reportIgnoredIfModifiedSince:forSerialNumber:webService:
lastModified
reportMissingLastModifiedForSerialNumber:webService:
personalizationToken
encodedSignature
personalizationSource
pertainsToPassTypeIdentifier:serialNumber:
userRequested
taskWithPassTypeIdentifier:subtasks:
initialize
taskManager
setMaxConcurrentOperationCount:
_handleUbiquityIdentityChanged:
removeObserver:name:object:
removeFilePresenter:
cancelAllOperations
_startWithToken:
aa_primaryAppleAccount
enabledDataclasses
ubiquityIdentityToken
URLForUbiquityContainerIdentifier:
isUbiquitousItemAtURL:
setUbiquitousURL:
_queue_startAlreadyUbiquitous
_queue_startNotYetUbiquitousWithDestinationURL:
startDownloadingUbiquitousItemAtURL:error:
_queue_removeFromFilePresenter
ubiquitousURL
evictUbiquitousItemAtURL:error:
initWithFilePresenter:
passWillBeDeleted:
_urlForCardWithUniqueID:relativeToDirectoryURL:
coordinateWritingItemAtURL:options:error:byAccessor:
_urlForCatalogRelativeToDirectoryURL:
coordinateReadingItemAtURL:options:error:byAccessor:
_queue_addToFilePresenter
_queue_mergeUbiquityWithLocalStore
setUbiquitous:itemAtURL:destinationURL:error:
coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:
removeObjectsInArray:
_queue_copyPassesFromUbiquityToLocalStore:
_queue_copyPassesFromLocalStoreToUbiquity:
_queue_comparePassesAndTakeNewerVersion:
_queue_compareCatalogsAndTakeNewerVersion
_attemptCoordinatedReadWithoutChangesAtURL:withAccessor:
getResourceValue:forKey:error:
modificationDate
isNewerThanCatalog:
_queue_copyCatalogToUbiquity:
_queue_copyCatalogToLocalStore:
addFilePresenter:
_queue_addedToFilePresenter
_queue_resolveURLIfNecessary:fileCoordinator:
unresolvedConflictVersionsOfItemAtURL:
replaceItemAtURL:options:error:
setResolved:
_queue_resolveURLIfNecessary:
URLByDeletingLastPathComponent
URLByDeletingPathExtension
_queue_handlePassUpdate:
_queue_handleCatalogUpdate
presentedItemURL
presentedItemOperationQueue
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
presentedItemDidChange
presentedItemDidChangeUbiquityAttributes:
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
setLastPresentedItemEventIdentifier:
lastPresentedItemEventIdentifier
_operationQueue
_filesModified
_filesToWrite
_filesToDelete
_ubiquityState
_ubiquityStartToken
_addedToFilePresenter
_ubiquitousURL
serializedFileWrapper
initWithSerializedRepresentation:
writeToURL:options:originalContentsURL:error:
unsignedLongLongValue
contextWithPassUniqueIdentifier:fieldProperties:source:
_fieldProperties
_source
newHandleWithDefinition:configurationContext:
addObserver:
activateWithContext:
initWithSBSDefinition:SBSConfigurationContext:SBSActivationContext:interfaceType:replyQueue:
startWithObserver:completion:
setActive:
addInvalidationAction:
interfaceType
SBSHandle
activationHandler
setActivationHandler:
deactivationHandler
setDeactivationHandler:
willStartHandler
setWillStartHandler:
didEndHandler
setDidEndHandler:
active
_lock
_SBSDefinition
_SBSConfigurationContext
_SBSActivationContext
_completionHandler
_invalidationActions
_invalidated
_registeredObserver
_active
_interfaceType
_SBSHandle
_activationHandler
_deactivationHandler
_willStartHandler
_didEndHandler
initWithBundleIDs:states:
setHandler:
contactlessPassesAvailableDidChange
_updateCanBoostPassbookUIServiceState:
_updatePassbookUIBoostState
shouldIgnore
_presentContactlessInterfaceWithContext:completion:
_requestPasscodeUnlock
setActivatingForSiri:
processHandleForNSXPCConnection:
initWithTargetProcess:
setShouldDismissOnUILock:
setPresentationTarget:
addAlertHandle:
_presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
absoluteString
_presentSetupAlertWithParameters:defaultResponseHandler:
_clearPassbookUIServiceLaunchAssertion
applicationStateForApplication:
initAndWaitUntilSessionUpdated
currentSession
transportType
_canPresentContactlessInterfaceWithContext:hasExplicitlyRequestedPass:handle:
_acquireBiometricUnlockSuppressionAssertionWithReason:handler:
_createContactlessInterfaceRemoteAlertHandleWithContext:completion:
numberWithUnsignedChar:
archivedSessionTokenForSubject:
error
_userInfoForContactlessInterfaceWithContext:completion:
acquireUnlockSuppressionAssertionForReason:completion:
_beginBoostingPassbookUIServiceIfNecessary
_endBoostingPassbookUIServiceIfNecessary
_beginDelayingIdleExitIfPossible
_createPassbookUIServiceBoostAssertion
_createPassbookUIServiceLaunchAssertionForContext:
_endDelayingIdleExitIfPossible
_clearPassbookUIServiceBoostAssertion
initWithBundleIdentifier:flags:reason:name:withHandler:
alertHandleFromSBSHandle:remove:
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
fieldDetectorDidEnterField:withProperties:
fieldDetectorDidExitField:
presentInAppPaymentInterfaceWithPaymentRequest:forNSXPCConnection:hostApplicationName:hostApplicationIdentifier:hostBundleIdentifier:hostIdentifier:hostTeamID:orientation:completion:
presentIdentityVerificationFlowWithResponseData:orientation:completion:
presentRegistrationFlowWithAccount:amount:state:senderAddress:orientation:completion:
presentPeerPaymentTermsAndConditionsWithTermsURL:termsIdentifier:passUniqueID:orientation:completion:
passbookUIServiceDidLaunch
fieldDetector
notificationStreamManager
assertionManager
_protectedDataAvailable
_presenterSerialQueue
_activeInterfacesLock
_setupAlertIsActive
_delayingIdleExit
_lostModeActive
_alertHandles
_passbookUIServiceCanBoost
_passbookUIServiceBoosted
_passbookUIServiceBoostContext
_passbookUIServiceLaunchAssertionContext
_passbookUIServiceLaunchAssertion
_passbookUIServiceBoostAssertion
_applicationStateMonitor
initWithServiceName:viewControllerClassName:
initWithAccount:inDatabase:
updateWithAccount:
stateReason
blockNotifications
accessLevel
accountStateDirty
lastUpdated
accountBaseURL
additionalPushTopics
supportedFeatures
setWithSet:
updateCreditAccountFeatureDescriptors:forAccountPID:inDatabase:
details
insertCreditAccountDetails:forAccountPID:inDatabase:
_predicateForVirtualCardIdentifier:
_predicateForPhysicalCardIdentifier:
updateCreditAccountDetails:forAccountPID:inDatabase:
deleteCreditAccountDetailsForAccountPID:inDatabase:
deleteCreditAccountFeatureDescriptorsForAccountPID:inDatabase:
setAdditionalPushTopics:
creditAccountDetailsForAccountPID:inDatabase:
setDetails:
creditAccountFeatureDescriptorsForAccountPID:inDatabase:
setSupportedFeatures:
deleteVirtualCardEncryptedDataForAccountPID:inDatabase:
deleteAccountEventsForAccountPID:inDatabase:
setStateReason:
setBlockNotifications:
setAccessLevel:
setAccountIdentifier:
setFeature:
setAccountStateDirty:
setAccountBaseURL:
initWithWebService:addPaymentPassToLibrary:
appletsDidUpdate
aprForPurchases
initWithCreditAccountRates:forCreditAccountDetailsPID:inDatabase:
initWithCreditAccountRates:forCreditTermsUpdatePID:inDatabase:
_predicateForCreditTermsUpdatePID:
creditAccountRates
updateWithCreditAccountRates:
insertAccountRates:forCreditAccountDetailsPID:inDatabase:
setAprForPurchases:
_propertySettersForCreditAccountRates
insertAccountRates:forCreditTermsUpdatePID:inDatabase:
deleteCreditAccountRatesForCreditAccountDetailsPID:inDatabase:
deleteCreditAccountRatesForCreditTermsUpdatePID:inDatabase:
creditAccountRatesForCreditAccountDetailsPID:inDatabase:
creditAccountRatesForCreditTermsUpdatePID:inDatabase:
updateCreditAccountRates:forCreditAccountDetailsPID:inDatabase:
_predicateForActiveItems
_predicateForShouldBadge
_predicateForViewCount:
_predicateForNonTerminalItems
_predicateForItemIdentifier:
initWithItem:itemOrder:inDatabase:
setItemOrder:
updateWithItem:
triggers
layoutBundleURL
supportedLocalizations
shouldBadge
setTriggers:
setLayoutBundleURL:
setSupportedLocalizations:
setShouldBadge:
setItemOrder
itemOrder
_itemOrder
maximumBalance
_passPersistentIDForPeerPaymentAccount:database:
countryCode
identityVerificationRequired
isAccountStateDirty
proactiveFetchPeriod
setDouble:forKey:
termsAcceptanceRequired
termsIdentifier
termsURL
associatedPassURL
pendingPaymentCount
identityVerificationForDisbursementsRequired
supportedFeatureDescriptors
insertFeatureDescriptors:forPeerPaymentAccountPID:inDatabase:
deleteFeatureDescriptorsForPeerPaymentAccountPID:inDatabase:
_propertySettersForPeerPaymentAccount
featureDescriptorsForPeerPaymentAccountPID:inDatabase:
setSupportedFeatureDescriptors:
initWithPeerPaymentAccount:inDatabase:
setStage:
setCountryCode:
setMaximumBalance:
setIdentityVerificationRequired:
setTermsAcceptanceRequired:
setProactiveFetchPeriod:
setTermsIdentifier:
setTermsURL:
setAssociatedPassURL:
setAssociatedPassSerialNumber:
setAssociatedPassTypeIdentifier:
setPendingPaymentCount:
setIdentityVerificationForDisbursementsRequired:
dispatchAccountRequestBlock:errorBlock:
accountsWithPassLocallyProvisionedWithCompletion:
accountWithVirtualCardIdentifier:completion:
accountForPassWithUniqueID:completion:
updateMockAccountWithAccount:completion:
deleteAccountWithIdentifier:completion:
deleteLocalAccountWithIdentifier:completion:
termsWithIdentifier:accepted:withAccountIdentifier:completion:
performAccountAction:withAccountIdentifier:completion:
preferencesForAccountWithIdentifier:completion:
updatePreferences:forAccountWithIdentifier:completion:
updateAccountWithIdentifier:extended:completion:
updateAccountsWithCompletion:
userInfoForAccountIdentifier:forceFetch:completion:
updateUserInfoForAccountIdentifier:contact:completion:
eventsForAccountIdentifier:completion:
eventsForAccountIdentifier:types:startDate:endDate:ordereredByDate:limit:completion:
deleteEventsWithAccountIdentifier:completion:
deleteEventWithIdentifier:completion:
insertEvents:completion:
creditStatementsForAccountIdentifier:completion:
lastRedemptionEventToPeerPaymentForAccountIdentifier:completion:
createVirtualCard:forAccountIdentifier:completion:
performVirtualCardAction:forVirtualCardIdentifier:forAccountIdentifier:completion:
updateVirtualCardsWithAccountIdentifier:completion:
cardCredentialsForVirtualCard:authorization:completion:
noteVirtualCardAutoFilledBySafari:completion:
fetchKeychainCredentialForVirtualCardIdentifier:forAccountIdentifier:completion:
queryKeychainForVirtualCards:
keychainCardCredentials
writeKeychainVirtualCardToKeychain
beginPhysicalCardRequestWithOrder:forAccountWithIdentifier:deviceMetadata:completion:
completePhysicalCardRequest:withSignature:completion:
beginPhysicalCardAction:onPhysicalCardWithIdentifier:forAccountWithIdentifier:deviceMetadata:completion:
completePhysicalCardActionRequest:withSignature:completion:
activatePhysicalCardWithActivationCode:completion:
inactivePhysicalCardForFeatureIdentifier:completion:
activatePhysicalCardWithIdentifier:activationCode:completion:
billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:withStatementIdentifier:completion:
billPaymentSelectedSuggestedAmountDataEventsForAccountIdentifier:withStartDate:endDate:completion:
updateScheduledPaymentsWithAccount:completion:
scheduledPaymentsWithAccountIdentifier:includeFailedRecurringPayments:allowFetchFromServer:completion:
accountAdded:
accountRemoved:
accountChanged:
statementsChangedForAccountIdentifier:
scheduledPaymentsChangedForAccountIdentifier:
accountManager:didAddAccount:
accountManager:didRemoveAccount:
accountManager:didUpdateAccount:oldAccount:
accountManager:didAddAccountEvent:
accountManager:didUpdateAccountEvent:
accountManager:didRemoveAccountEvent:
accountManager:didSetScheduledPayments:forAccountIdentifier:
accountManager:statementsChangedForAccountIdentifier:
accountManager:scheduledPaymentsChangedForAccountIdentifier:
inactivatePhysicalCardForFeatureIdentifier:completion:
noteAccountDeletedWithCompletion:
eventsForAccountIdentifier:types:startDate:endDate:orderedByDate:limit:completion:
insertEvents:withAccountidentifier:completion:
virtualCardsInKeychainWithCompletion:
writeVirtualCardToKeychain:completion:
_entitledForAccountUse
_secureElementAvailable
downloadRetriesCount
_uniqueID
_downloadRetriesCount
_insertionDictionaryWithPassType:serviceURL:
initWithPassType:serviceURL:inDatabase:
_updateDictionaryWithWebService:
_propertySettersForWebService
_predicateForPassType:
_predicateForPassType:serviceURL:
setTeamIdentifier:
virtualCard
setVirtualCard:
authorization
setAuthorization:
_virtualCard
_authorization
isTerminalState
_mockAccountInitialState
arrayWithArray:
accountServiceURL
hasAccounts
_updatePushTopics
_paymentWebServiceContextChanged
insertOrReplaceAccount:extended:deleteSensitiveData:completion:
_processAddedAccounts:
_processDeletedAccounts:
_processChangedAccounts:
postAccountChangedNotification
_queue_mergeAccounts:
_queueIndexOfAccountWithIdentifier:
supportsExtendedFetch
setPhysicalCards:
setVirtualCards:
deleteAllLocalKeychainVirtualCards
deleteKeyWithIdentifier:
invalidateSession
startApplePayTrustSessionWithCompletion:
deleteAccountsWithCompletion:
_queue_deleteAccounts
keychainVirtualCard
deleteKeychainVirtualCard
isEqualToSet:
hasSensitiveCredentials
supportsLocalStorage
notificationIdentifierForDate:
firstDailyCash
hasRedemptions
dailyCashNotificationForDate:accountIdentifier:amount:isFirstDailyCash:completion:
isDate:equalToDate:toUnitGranularity:
month
year
isDateInToday:
isDateInYesterday:
isDateInTomorrow:
initWithAmount:periodAmount:date:firstDailyCash:hasRedemptions:forPassUniqueIdentifier:
setFirstDailyCash:
setCreatedDate:
timeZoneWithName:
setProductTimeZone:
setNameOnCard:
setFPANSuffix:
setCardholderName:
setExpiration:
setPendingPurchases:
setMinimumAmount:
setMaximumAmount:
setMerchantIdentifier:
setSupportedNetworks:
setMerchantCapabilities:
setPaymentFundingSourceTypes:
setPaymentFrequencies:
setAccountSummary:
setRates:
fetchAllVirtualCardsForAccountIdentifier:completion:
deleteVirtualCardEncryptedDataForAccountIdentifier:completion:
provisioningAllowed
setKeychainCardCredentials:
setDisplayName:
setRequiresAuthentication:
queuePerformNextAccountsUpdate
_updateAccountsWithCompletionBlocks:
accountsAreInDirtyStateWithCompletion:
accountsWithRequest:completion:
performDeviceRegistrationForReason:action:forceRegister:completion:
queuePerformNextAccountUpdateWithIdentifier:extended:
_updateAccountWithIdentifier:extended:completionBlocks:
setBaseURL:
setExtended:
accountIsInDirtyStateWithIdentifier:completion:
accountWithRequest:completion:
deleteAccountWithRequest:completion:
accountActionWithRequest:completion:
setTermsAccepted:
accountTermsWithRequest:completion:
setPreferences:
preferences
accountPreferencesWithRequest:completion:
defaultBillingAddressForPrimaryAccountIdentifier:
_cacheKeyForUserInfoWithAccountIdentifier:
_fetchUserInfoForAccountIdentifier:completion:
setContact:
setDefaultBillingAddress:forPrimaryAccountIdentifier:
accountUpdateUserInfoWithRequest:completion:
accountUserInfoWithRequest:completion:
setGivenName:
setFamilyName:
setStreet:
setCountry:
setPostalCode:
labeledValueWithLabel:value:
setPostalAddresses:
_processRewardsRedemptionEvent:
_processRewardsAddedEvent:
_processUserInfoUpdateEvent:
_processPaymentFailed:
_processVirtualCardStatusUpdateEvent:
updatedDate
displayName
_shouldDownloadStatementsForAccountIdentifier:
_cacheKeyForStatementsWithAccountIdentifier:
_downloadStatementsForAccountIdentifier:withCompletion:
statements
accountStatementsWithRequest:completion:
canDecryptBAAEncryptedData
setEncryptionFields:
addOrUpdateVirtualCard:
createVirtualCardWithRequest:completion:
prepareCertificateWithQueue:completion:
setVirtualCardIdentifier:
removeVirtualCard:
virtualCardActionWithRequest:completion:
setAction:withQueue:completion:
virtualCardListWithRequest:completion:
_queueDecryptionRequest:
_executeDecryptionRequests
virtualCardWithIdentifier:
virtualCardLegacyCredentialsWithRequest:completion:
prepareOneTimeCertificateWithQueue:completion:
initWithAccountIdentifier:virtualCardIdentifier:forPassUniqueIdentifier:
setEncryptedData:
setEphemeralPublicKey:
setLastAutoFilledBySafari:
setOrder:
setDeviceMetadata:
manifestHashWithReferenceIdentifier:
nonce
initWithKeyIdentifier:manifestHash:nonce:
_handlePhysicalCardRequestResponse:forAccountIdentifier:completion:
requestPhysicalCardWithRequest:completion:
initWithApplePayTrustProtocol:
setSignature:
applePayTrustSignatureRequestWithRequest:completion:
physicalCard
addOrUpdatePhysicalCard:
updatedPhysicalCards
setPhysicalCardIdentifier:
_handlePhysicalCardActionResponse:forAccountIdentifier:completion:
physicalCardActionWithRequest:completion:
containsString:
componentsWithString:
queryItems
initWithActionType:
setActivationCode:
_shouldDownloadScheduledPaymentsForAccountIdentifier:
_cacheKeyForScheduledPaymentsWithAccountIdentifier:
paymentsWithRequest:account:completion:
mergeAccounts:completion:
updateAccount:completion:
updateAccountWithIdentifier:completion:
_shouldFetchUpdatedUserInfo:
_accounts
_accountServiceURL
_hasAccounts
_accountServicePushNotificationTopics
_additionalPushNotificationTopics
_isUpdatingAccounts
_pendingAccountsUpdateBlocks
_processingVirtualCardDecryptionRequest
_decryptionRequests
_accountsBeingUpdated
_pendingAccountUpdateBlocks
_extendedAccountsBeingUpdated
_pendingExtendedAccountUpdateBlocks
_lockObservers
_workQueue
_lockPushTopics
preventAutomaticDismissal
notificationType
decodeObjectOfClasses:forKey:
customActionRoute
customActionQueryParameters
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
customActionVerb
URLQueryAllowedCharacterSet
setDefaultActionURL:
customActionTitle
setDefaultActionTitle:
soundWithAlertType:
setSound:
allowPresentationOverPass
allowReinsertionAfterDismissal
supportsCoalescing
initWithNotificationIdentifier:forPassUniqueIdentifier:
coalesceWithExistingUserNotification:
notificationContentWithDataSource:
insertionRequirements
setInsertionRequirements:
suppressionBehavior
setAllowPresentationOverPass:
reissueBannerOnUpdate
isSuppressed
setSuppressed:
playsSound
setPlaysSound:
setCustomActionQueryParameters:
setCustomActionTitle:
_allowPresentationOverPass
_reissueBannerOnUpdate
_suppressed
_playsSound
_insertionRequirements
_suppressionBehavior
_notificationIdentifier
_date
_customActionRoute
_customActionVerb
_customActionQueryParameters
_customActionTitle
_initWithTitle:message:forPassUniqueIdentifier:hashComponents:
setTitle:
setBody:
title
message
_title
_message
merchantIdentifier
_merchantIdentifier
passUniqueID
passManifestHash
hunkCount
passDiffs
anyKey
getHunkForKey:oldValue:newValue:message:
setPassUniqueID:
setPassManifestHash:
addHunkWithKey:oldValue:newValue:message:
enumerateHunks:
removeHunkForKey:
localizedDescriptionForDiff:
setScheme:
setHost:
setPath:
_passDiffs
hasAssociatedPaymentApplication
notificationCenterTitle
caseInsensitiveCompare:
secondaryFundingSourceType
secondaryFundingSourceDescription
_locationString
setSubtitle:
_amountString
displayLocation
formattedBalanceAdjustmentAmount
pk_uppercaseStringForPreferredLocale
_paymentTransaction
decimalNumberWithMantissa:exponent:isNegative:
decimalNumberByMultiplyingBy:
_zeroValueTitleStringForTransitSubtype:
_amountTitleStringForSubtype:amountString:
balance
shouldSuppressNoChargeAmount
formattedTransitTransactionMessage:
_titleString
_messageStringWithPass:
_transitBalance
_transitBalanceCurrencyCode
setShouldHideDate:
fileURLForAsset:passUniqueIdentifier:
attachmentWithIdentifier:URL:options:error:
setAttachments:
setShouldPreventNotificationDismissalAfterDefaultAction:
croppedImageWithInsets:
imageData
thumbnailImageForSizeContraints:dataSource:
_messageString
currentBalanceAmount
currentBalanceCurrency
reminderAmount
reminderCurrency
_currentBalanceAmount
_currentBalanceCurrency
_reminderAmount
_reminderCurrency
_balanceIdentifier
localizedStringFromDate:dateStyle:timeStyle:
_expirationDate
_peerPaymentNotificationType
initWithPaymentTransaction:forPassUniqueIdentifier:notificationIdentifier:
peerPaymentCounterpartHandle
requiredContactKeys
initWithContactStore:keysToFetch:
contactForHandle:
displayNameForCounterpartHandle:contact:
_formattedCounterpartName
subtotalCurrencyAmount
minimalFormattedStringValue
reminderPeriod
_reminderPeriod
transactionDeclinedReason
formattedStringValue
_currentBalance
initWithPassUniqueIdentifier:accountState:featureIdentifier:requiresDebtCollectionNotices:
accountState
_requiresDebtCollectionNotices
_accountState
_featureIdentifier
_messageStringForPayment:account:reminderOffset:
setLocalizedDateFormatFromTemplate:
initWithAccount:payment:reminderOffset:
messageString
_messageStringForAccount:amount:reminderOffset:fireDate:
isDate:inSameDayAsDate:
initWithAccount:estimatedRemainingMinimumPayment:reminderOffset:
useGenericMessaging
setPreventAutomaticDismissal:
_useGenericMessaging
_preventAutomaticDismissal
activityIdentifier
shouldShowNotification
_subtitleString
blockNotification
latestOrderActivity
activity
shippingStatus
activityType
openDate
estimatedDeliveryDate
formattedEstimatedDeliveryDate
initWithPassUniqueIdentifier:accountEvent:featureIdentifier:requiresDebtCollectionNotices:
accountEvent
_accountEvent
questions
questionIsValid
question
accountSuspended
_accountSuspended
_question
totalSpending
summaryType
summaryUnit
initWithSpendingSummary:currentBalance:forPassUniqueIdentifier:
rewardsAccrued
_totalSpending
_rewardsAccrued
_summaryType
initWithPassUniqueIdentifier:
dateComponents
periodAmount
_hasRedemptions
_firstDailyCash
_dateComponents
_amount
_periodAmount
_notificationIdentifierForAccountIdentifier:virtualCardIdentifier:
virtualCardIdentifier
_accountIdentifier
_virtualCardIdentifier
dateByAddingUnit:value:toDate:options:
teamIdentifier
_passTypeIdentifier
_teamIdentifier
_serviceURL
_pushToken
_deviceIdentifier
lastModifiedDate
lastModifiedSource
_serialNumber
_authenticationToken
_lastModifiedTag
_lastModifiedDate
_lastModifiedSource
_manifestHash
_expressModesInDatabase:forPredicate:
initWithExpressMode:forPaymentApplication:database:
expressModesInDatabase:forPaymentApplication:
expressModesInDatabase:forPaymentApplicationPID:
insertExpressModes:withPaymentApplication:inDatabase:
notification
actionIdentifier
userNotificationCenterDidUpdate:
content
initWithBundleIdentifier:
_notificationCategories
setNotificationCategories:
setWantsNotificationResponsesDelivered
promoteSuppressedUserNotificationsIfPossible
userNotificationCenterShouldSuppressUserNotifications:
_updateUserNotification:shouldSuppress:
_activeUserNotificationsSortedByDateAscending:
_removeUserNotificationsWithIdentifiers:
_addUserNotification:shouldSuppress:
_synchronizeDeliveredNotificationsWithCompletion:
authorizationStatus
alertStyle
notificationCenterSetting
lockScreenSetting
getNotificationSettingsWithCompletionHandler:
setOptions:
setHiddenPreviewsBodyPlaceholder:
setListPriority:
_headerTitleForNotification:
setHeader:
setCategoryIdentifier:
iconAtPath:
setThreadIdentifier:
addEntriesFromDictionary:
requestWithIdentifier:content:trigger:destinations:
_notificationRequestForUserNotification:shouldInterrupt:
subarrayWithRange:
addNotificationRequest:withCompletionHandler:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
removeObjectsForKeys:
removeDeliveredNotificationsWithIdentifiers:
getDeliveredNotificationsWithCompletionHandler:
alertNotificationsEnabled:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
existingLocalNotifications
processingQueue
setProcessingQueue:
iconStore
setIconStore:
_internalNotificationCenter
_registeredCategories
_processingQueue
_iconStore
initWithNotificationServicePID:inDatabase:
queryWithDatabase:transactionServicePID:
handleEventWithAction:token:descriptor:
publisher
setPublisher:
streamName
setStreamName:
queue
setQueue:
pendingSendEvents
setPendingSendEvents:
tokens
setTokens:
receivedInitialBarrier
setReceivedInitialBarrier:
_receivedInitialBarrier
_publisher
_streamName
_pendingSendEvents
_tokens
_archiveUserNotifications
dataWithContentsOfURL:options:error:
containsValueForKey:
decodeTopLevelObjectOfClass:forKey:error:
_notificationRequirementsAreSatisfied:
_removeScheduledActivitiesForPassUniqueIdentifier:ofType:
_removeScheduledActivitiesForPassUniqueIdentifier:
removeAssetsForPassUniqueIdentifier:
_badgeCount
setBadgeValue:
sortUsingDescriptors:
body
initRequiringSecureCoding:
finishEncoding
encodedData
writeToURL:atomically:
scheduledNotificationActivitiesForPassUniqueIdentifier:ofType:
_archiveFileURL
_notificationCenter
_archiveSemaphore
_userNotificationManagerQueue
dataUsingEncoding:
_insertionDictionaryWithPassTypeID:teamID:
initWithPassTypeID:teamID:inDatabase:
_passTypeIDPredicate:
_passTypeIdentifierHashPredicate:
anyInDatabase:withPassTypeIdentifierHash:
identifierHash
updateIdentifierHash
notificationNamesForStream:
_notificationNameMapping
pk_weakPointerPersonalityToStrongObjectsMapTable
_updateConsumers:requiresRegistration:
_scheduleEventStreamRegistrationUpdateWhileInternalQueue:
_unregisterConsumer:
_queue_updateEventStreamRegistration
_queue_updateEventStreamRegistrationForStream:
_queue_startObservingNotification:forStream:
_queue_stopObservingNotification:forStream:
_notificationNameKeyForStream:
_notificationStreamNameForStream:
_group
_internalSerialQueue
_consumerLock
_consumers
_consumerRegistrationState
_needsRegistrationUpdate
_registeredNotificationNames
servicingEvent
reasonCode
_propertySettersForAccountServicing
setActivityType:
setActivityIdentifier:
setReasonCode:
setOpenDate:
servicingEventsWithEventPID:inDatabase:
insertServicingEvent:forEventPID:inDatabase:
deleteServicingEventWithEventPID:inDatabase:
initWithFelicaTransitAppletState:forPaymentApplicationPID:inDatabase:
_valuesDictionaryForAppletState:
isShinkansenTicketActive
isBalanceAllowedForCommute
isLowBalanceNotificationEnabled
isGreenCarTicketUsed
shinkansenValidityStartDate
shinkansenValidityTerm
shinkansenOriginStationString
shinkansenDestinationStationString
shinkansenDepartureTime
shinkansenArrivalTime
shinkansenTrainName
shinkansenCarNumber
shinkansenSeatRow
shinkansenSeatNumber
shinkansenSecondaryOriginStationString
shinkansenSecondaryDestinationStationString
shinkansenSecondaryDepartureTime
shinkansenSecondaryArrivalTime
shinkansenSecondaryTrainName
shinkansenSecondaryCarNumber
shinkansenSecondarySeatRow
shinkansenSecondarySeatNumber
greenCarOriginStationString
greenCarDestinationStationString
greenCarValidityStartDate
hasGreenCarTicket
hasShinkansenTicket
setShinkansenTicketActive:
setBalanceAllowedForCommute:
setLowBalanceNotificationEnabled:
setGreenCarTicketUsed:
setHistorySequenceNumber:
setBalance:
setBlacklisted:
setShinkansenValidityStartDate:
setShinkansenValidityTerm:
setShinkansenOriginStationCode:
setShinkansenDestinationStationCode:
setShinkansenDepartureTime:
setShinkansenArrivalTime:
setShinkansenTrainName:
setShinkansenCarNumber:
setShinkansenSeatRow:
setShinkansenSeatNumber:
setShinkansenSecondaryOriginStationCode:
setShinkansenSecondaryDestinationStationCode:
setShinkansenSecondaryDepartureTime:
setShinkansenSecondaryArrivalTime:
setShinkansenSecondaryTrainName:
setShinkansenSecondaryCarNumber:
setShinkansenSecondarySeatRow:
setShinkansenSecondarySeatNumber:
setGreenCarOriginStationCode:
setGreenCarDestinationStationCode:
setGreenCarValidityStartDate:
setHasGreenCarTicket:
setHasShinkansenTicket:
setEnrouteTransitTypes:
deleteEntitiesForPaymentApplicationPID:inDatabase:
felicaTransitAppletStateInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
isEntitledForPaymentRequest:
developerTeamID
connection
_hasValidSecureElement
inAppPaymentServicesURL
paymentServicesURLForRegion:
initWithMerchantIdentifier:domainName:
_urlRequestWithServiceURL:
set_sourceApplicationSecondaryIdentifier:
sessionWithConfiguration:
sharedSession
initWithData:
isRegistered
dataTaskWithRequest:completionHandler:
AMPCardEnrollment
_paymentServicesMerchantURLForAPIType:
paymentServicesMerchantURL
paymentServicesMerchantURLForRegion:
URLByAppendingPathComponent:
_cardsAvailableForAMPWithCountryCode:
_AMPEnrollmentAccountStatus
initWithCardData:brokerURL:paymentServicesURL:error:
cardInfoForMerchantIdentifier:completion:
data
merchantSessionIdentifier
ampEnrollmentPinning
setCertificates:
setEnrollmentSignature:
setMerchantSession:
setWrappedPayment:
setPass:
setPaymentApplication:
setApplicationData:
initWithToken:
completeSessionWithRequest:completion:
ams_sharedAccountStore
ams_activeiTunesAccount
ams_activeiCloudAccount
presentInAppPaymentInterfaceWithPaymentRequest:forHostIdentifier:orientation:handler:
registerPaymentListenerEndpoint:forHostIdentifier:handler:
retrievePaymentListenerEndpointForHostIdentifier:handler:
merchantStatusCheck:merchantDomain:sourceApplicationSecondaryIdentifier:handler:
paymentServicesMerchantURLForAPIType:handler:
secureElementStatusWithCompletion:
cardsAvailableForAMPWithCountryCode:completion:
cardDataForMerchantIdentifier:countryCode:completion:
enrollPaymentPassWithUniqueIdentifier:merchantSession:completion:
paymentWebServiceCoordinator
distantFuture
distantPast
endpointComponents
URLPathAllowedCharacterSet
queryFields
method
setHTTPMethod:
setHTTPShouldHandleCookies:
setCachePolicy:
headerFields
setValue:forHTTPHeaderField:
bodyDictionary
setHTTPBody:
initWithWebService:
reportAuthenticationFailure
reportUnexpectedResponseCode:
reportNSURLConnectionError:
reportMalformedResponseError:
_webService
_taskWithWebService:serialNumber:authToken:requestedStatus:
initWithWebService:serialNumber:authToken:requestedStatus:
dictionaryWithObject:forKey:
isSubclassOfClass:
_matchesRegistrationTask:
_matchesPersonalizePassTask:
setRequestedStatus:
_requestedStatus
initWithWebService:lastUpdatedTag:tagLastUpdateDate:
_resultFromResponseData:
_matchesGetSerialNumbersTask:
setSerialNumbers:
setTagLastUpdateDate:
_lastUpdatedTag
_tagLastUpdateDate
_serialNumbers
initWithWebService:updateContext:source:
pk_valueForHTTPHeaderField:
setLastModified:
_matchesGetPassTask:
_userRequested
_serverRequested
_context
_pass
_lastModified
initWithWebService:updateContext:contact:personalizationToken:requiredPersonalizationFields:personalizationSource:
contact
stringFromPersonNameComponents:
safelySetObject:forKey:
givenName
familyName
postalAddress
ISOCountryCode
suggestedCountryCode
postalCode
emailAddress
phoneNumber
digits
initWithSignatureData:
requiredPersonalizationFields
_contact
_personalizationToken
_requiredPersonalizationFields
_personalizationSource
_encodedSignature
initWithWebService:logs:
logs
_matchesLogTask:
_hasRoomForAdditionalLogs
setLogs:
taskWithWebService:error:
taskWithWebService:warnings:
_logs
setDateFormat:
_resurfaceRecentNotificationsAndPromote:
_recomputeSummaryNotificationsForPassUniqueIdentifier:
_resurfaceRecentNotificationsForAccount:andPromote:
_notificationForAccountEvent:account:
previousStartOfWeekFromDate:
nextStartOfWeekFromDate:
component:fromDate:
summaryWithTransactions:currency:type:startDate:endDate:lastSummary:
previousStartOfMonthFromDate:
_recomputePaymentNotificationsForScheduledPayments:account:
_notificationForAccountEvent:withManager:completion:
isRecurring
_upcomingScheduledPaymentNotificationsForPayment:account:
decimalNumberBySubtracting:
_paymentDueNotificationsForAccount:estimatedRemainingMinimumPayment:
_webServiceCoordinator
inAppPINRequiredAmount
dpanSuffix
sanitizedDPAN
supportsContactlessPayment
requiresDeferredAuthorization
inAppPINRequiredCurrency
inAppPriority
supportsInstantFundsIn
_predicateForPersistentID:
_predicateForApplicationIdentifier:secureElementIdentifier:
_predicateForApplicationIdentifier:secureElementIdentifiers:
_predicateForPassUniqueIdentifier:applicationIdentifier:secureElementIdentifier:
_paymentApplicationsInDatabase:matchingPredicate:
predicateForSecureElementIdentifier:
_paymentApplicationsInDatabase:matchingPredicate:withJoinKeys:
_propertySettersForPaymentApplication
setSupportedExpressModes:
criteriaInDatabase:forPaymentApplicationPID:
setAutomaticSelectionCriteria:
setSupportedTransitNetworkIdentifiers:
setTransitProperties:
updateWithPaymentApplication:
initWithPaymentApplication:pass:inDatabase:
supportedExpressModes
automaticSelectionCriteria
insertCriteria:withPaymentApplication:inDatabase:
suspendedReason
_updateExpressModes:
updateAutomaticSelectionCriteria:
updateTransitNetworkIdentifiers:
setSanitizedDPAN:
setSuspendedReason:
setSupportsOptionalAuthentication:
setAppletDataFormat:
setAppletCurrencyCode:
setRequiresDeferredAuthorization:
setPaymentNetworkIdentifier:
setInAppPINRequiredAmount:
setInAppPINRequiredCurrency:
setAuxiliary:
setPaymentType:
setContactlessPriority:
setInAppPriority:
setSupportsInstantFundsIn:
paymentApplicationsInDatabase:forPass:
paymentApplicationsInDatabase:forSecureElementIdentifier:
primaryPaymentApplicationsInDatabase:forSecureElementIdentifiers:
passPID
_initWithPassTypeIdentifier:subtasks:
_commonInit
_addTask:
setByAddingObjectsFromArray:
_matchesTask:
_updateForTaskDeactivation:
_pendingTasks
_completedTasks
_gotUpdates
_serviceType
_registrationURL
_pushTopic
_appLaunchToken
_lastUpdatedDate
_lastUpdatedTagDate
taskType
matchesTask:
initWithNotificationService:
setNotificationService:
_notificationService
_taskType
initWithNotificationService:registrationData:signature:certificates:certificateVersion:requestedStatus:completionTask:
registrationData
setSupportsLegacyFormats:
certificateOfType:
_authenticationTokenFromResponseData:
deregisterTaskWithNotificationService:
setRegistrationData:
setCompletionTask:
setCertificateVersion:
_registrationData
_signature
_certificates
_completionTask
_certificateVersion
initWithNotificationService:registrationData:signature:certificates:certificateVersion:dpanIdentifier:requestedStatus:completionTask:
_dpanIdentifier
setNotifications:
setBalances:
_notifications
_balances
dictionaryWithDictionary:
initWithData:encoding:
_initialUpdatesTask
initWithNotificationService:dpanIdentifier:lastUpdatedTag:
applyServiceURL
hasApplications
applicationState
_processAddedApplications:
_processDeletedApplications:
_processChangedApplications:
_queue_mergeApplications:
_queue_indexOfApplicationWithIdentifier:
_concludeIDVSessionIfNeededForFeatureApplication:
deleteApplicationsWithCompletion:
_queue_deleteApplications
applyManager:didAddApplication:
applyManager:didUpdateApplication:oldApplication:
applyManager:didRemoveApplication:
applicationStateDirty
setApplicationStateDirty:
insertOrReplaceApplication:completion:
_queue_performNextApplicationsUpdate
_queue_updateApplicationsWithCompletionBlocks:
applicationsWithCompletion:
applicationsAreInDirtyStateWithCompletion:
allFeatureApplications
applicationsWithRequest:completion:
queuePerformNextApplicationUpdateWithIdentifier:
_updateApplicationWithIdentifier:completionBlocks:
applicationWithIdentifier:completion:
applicationBaseURL
applicationIsInDirtyStateWithIdentifier:completion:
applyWithRequest:completion:
updateApplicationsWithCompletion:
_handleApplyResponse:error:completion:
submitDocumentsWithRequest:completion:
submitTermsWithRequest:completion:
deleteLocalApplicationWithIdentifier:completion:
deleteApplicationWithRequest:completion:
mergeApplications:completion:
updateApplication:completion:
updateApplicationWithIdentifier:completion:
submitApplyRequest:completion:
submitDocumentRequest:completion:
submitTermsRequest:completion:
submitDeleteRequest:completion:
_pushNotificationTopics
_hasApplications
_applications
_applyServiceURL
_isUpdatingApplications
_pendingApplicationsUpdateBlocks
_applicationsBeingUpdated
_pendingApplicationUpdateBlocks
messageType
allowDeepLink
initWithPaymentMessage:paymentPass:paymentApplication:inDatabase:
_predicateForPaymentPass:
_predicateForMessageType:
_predicateForServiceIdentifier:
_paymentMessagesInDatabase:matchingPredicate:
_predicateForMessageDateNewerThanDate:
isArchived
_propertySettersForPaymentMessage
setAllowDeepLink:
setHasAssociatedPaymentApplication:
_predicateForNonExpiredMessages
_shippingUpdatesWithQuery:
physicalCardIdentifier
localizedDeliveryExceptionReason
trackingNumber
shippingCompany
_propertySettersForAccountPhysicalCardShippingUpdate
setDay:
setMonth:
setYear:
setEstimatedDeliveryDate:
physicalCardShippingUpdate
setShippingStatus:
setLocalizedDeliveryExceptionReason:
setTrackingNumber:
setShippingCompany:
setTimestamp:
physicalCardShippingUpdatesWithEventPID:inDatabase:
physicalCardShippingUpdatesForPhysicalCardWithIdentifier:inDatabase:
insertPhysicalCardShippingUpdate:forEventPID:inDatabase:
deletePhysicalCardShippingUpdatesWithEventPID:inDatabase:
featureApplicationAdded:
featureApplicationRemoved:
featureApplicationChanged:
paymentConfiguration
updateDefaultPaymentPassIdentifier:
initForExpressMode:withPassUniqueIdentifier:paymentApplicationIdentifier:
transactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:completion:
_requestUpdatesForPassUniqueIdentifier:
peerPaymentAllAccess
didSucceed
merchantURL
scheme
initializeSecureElementQueuingServerConnection:withCompletion:
SEPPairingInfoWithCompletion:
simulatePushForTopic:
availableForAutomaticPresentationUsingVASContext
availableForAutomaticPresentationUsingBeaconContext
setAnswers:
setTransactionIdentifier:
answeredQuestion:
accountTransactionAnswerWithRequest:completion:
requestUpdatesForPassUniqueIdentifier:
initWithOwnershipToken:identifier:
ownershipToken
initWithDisbursementSource:disbursementTarget:teamIdentifier:bundleIdentifier:
disbursementVoucherWithRequest:certificates:completion:
enforceUpgradedPasscodePolicyWithCompletion:
paymentDeviceDidEnterFieldWithProperties:
paymentDeviceDidExitField
didUpdateDefaultPaymentPassWithUniqueIdentifier:
paymentPassWithUniqueIdentifier:didUpdateWithTransitPassProperties:
paymentPassWithUniqueIdentifier:didUpdateCategoryVisualizationWithStyle:
setSharedPaymentWebServiceContext:handler:
sharedPaymentWebServiceContextWithHandler:
setDefaultPaymentPassUniqueIdentifier:handler:
defaultPaymentPassUniqueIdentifier:
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:completion:
transactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:completion:
transactionCountByPeriodForPassWithUniqueIdentifier:withTransactionSource:withBackingData:calendar:unit:includePurchaseTotal:completion:
cashbackByPeriodFromPassUniqueIdentifier:withStartDate:endDate:calendar:calendarUnit:type:completion:
transactionsWithTransactionSource:withBackingData:limit:completion:
transactionsForPaymentPassWithUniqueIdentifier:withPeerPaymentCounterpartHandle:withTransactionSource:withBackingData:limit:completion:
transactionsForPaymentPassWithUniqueIdentifier:withMapsIdentifier:withTransactionSource:withBackingData:limit:completion:
transactionsForPaymentPassWithUniqueIdentifier:matchingMerchant:withTransactionSource:withBackingData:limit:completion:
transactionsForPaymentPassWithuniqueIdentifier:withMerchantCategory:withTransactionSource:withBackingData:startDate:endDate:limit:completion:
transactionsForPaymentPassWithUniqueIdentifier:withTransactionType:withTransactionSource:withBackingData:startDate:endDate:limit:completion:
approvedTransactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:completion:
pendingTransactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:completion:
transactionWithTransactionIdentifier:completion:
transactionWithServiceIdentifier:completion:
transactionWithReferenceIdentifier:completion:
passUniqueIdentifierForTransactionWithIdentifier:completion:
passUniqueIdentifierForTransactionWithServiceIdentifier:completion:
mapsMerchantsWithCompletion:
initializeSecureElementIfNecessaryWithHandler:
initializeSecureElement:
downloadAllPaymentPassesWithHandler:
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:handler:
removeMapsDataForTransactionWithIdentifier:forPassUniqueIdentifier:issueReportIdentifier:completion:
disbursementVoucherWithDisbursementSource:disbursementTarget:bundleIdentifier:teamIdentifier:completion:
featureApplicationsWithCompletion:
featureApplicationsForProvisioningWithCompletion:
featureApplicationWithIdentifier:completion:
submitTransactionAnswerForTransaction:questionType:answer:completion:
transactionsRequiringReviewForAccountWithIdentifier:completion:
categoryVisualizationMagnitudesForPassUniqueID:completion:
recomputeCategoryVisualizationMangitudesForPassUniqueID:style:
storePassOwnershipToken:withIdentifier:
passOwnershipTokenWithIdentifier:completion:
paymentDeviceFieldPropertiesWithHandler:
defaultPaymentPassIngestionSpecificIdentifier:
setDefaultExpressFelicaTransitPassIdentifier:withCredential:completion:
simulateDefaultExpressTransitPassIdentifier:forExpressMode:handler:
transactionsAppLaunchTokenForPassWithUniqueIdentifier:handler:
messagesAppLaunchTokenForPassWithUniqueIdentifier:handler:
submitVerificationCode:verificationData:forDPANIdentifier:handler:
valueAddedServiceTransactionsForPassWithUniqueIdentifier:limit:handler:
valueAddedServiceTransactionsForPaymentTransaction:handler:
valueAddedServiceTransactionWithIdentifier:handler:
messagesForPaymentPassWithUniqueIdentifier:handler:
balancesForPaymentPassWithUniqueIdentifier:handler:
balanceReminderThresholdForBalanceIdentifier:withPassUniqueIdentifier:handler:
setBalanceReminder:forBalanceIdentifier:withPassUniqueIdentifier:handler:
deletePaymentTransactionWithIdentifier:forPassWithUniqueIdentifier:handler:
deleteAllTransactionsForPaymentPassWithUniqueIdentifier:handler:
deleteAllMessagesForPaymentPassWithUniqueIdentifier:handler:
archiveMessageWithIdentifier:handler:
processTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:expressTransactionState:
transitStateWithPassUniqueIdentifier:paymentApplication:handler:
outstandingExpressTransactionState:
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:handler:
setDefaultPaymentApplication:forPassUniqueIdentifier:handler:
defaultPaymentApplicationForPassUniqueIdentifier:handler:
simulatePaymentPushTopic:handler:
consistencyCheckWithHandler:
scheduleSetupReminders:
scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:
passbookUIServiceDidLaunch:
notificationServiceCoordinator
cloudStoreNotificationCoordinator
peerPaymentWebServicesCoordinator
paymentTransactionProcessor
transitStateManager
defaultPassManager
pushNotificationManager
devicePasscodeManager
applyManager
_notificationServiceCoordinator
_cloudStoreNotificationCoordinator
_peerPaymentWebServicesCoordinator
_paymentTransactionIdentifier
_transitAppletState
registerDefaults:
_zeroIntervalForPassTypeID:
_updatedFrequencyScoreForScore:lastPushDate:zeroInterval:
_rateLimitLevelForFrequencyScore:
reportPushRateLimitLevel:forPassTypeID:
_presentUnregistrationAlertForPassTypeID:
_nextUpdateDateWithLastUpdateDate:rateLimitLevel:
_aggdLogTaskErrorCode:passTypeID:
_aggdLogWebServiceErrorCode:passTypeID:
_userNotificationParametersForPassTypeID:
resetPushFrequencyStateForPassTypeID:
_unregisterPassesOfType:
doubleForKey:
reportUnchangedPassForPersonalizationTask:
_aggdLogTaskWarningCode:passTypeID:
_typePredicate:
_namePredicate:
_tableNamePredicate:
anyInDatabase:withType:name:
anyInDatabase:withType:tableName:
queryWithDatabase:type:
queryWithDatabase:type:tableName:
queryWithDatabase:types:tableName:
entitesMatchingQuery:
tableName
exponent
isCurrency
decimalNumberByMultiplyingByPowerOf10:
isPrimary
localizedTitle
initWithPaymentBalance:paymentPass:inDatabase:
_propertySettersForPaymentBalance
_postProcessValue:
setLocalizedDescription:
setExponent:
setValue:
setIsPrimary:
initWithInteger:
countInDatabase:forPassWithUniqueIdentifier:
isPrimaryBalance
_predicateForAccountEventTypes:
_predicateForStartDate:
_predicateForEndDate:
_predicateForEventTypes:
_predicateForTransactionIdentifier:
_predicateForSuccessfulRedemption
_predicateForRewardsAddedIdentifier:
_predicateForRedemptionToPeerPayment
_predicateForServicingActivityIdentifier:
_predicateForBillPaymentSelectedSuggestedAmountStatementIdenfitier:
_predicateForBillPaymentSelectedSuggestedAmountStartDate:
_predicateForBillPaymentSelectedSuggestedAmountEndDate:
initWithAccountEvent:inDatabase:
updateWithAccountEvent:
insertItemsFromEvent:forPersistentID:accountIdentifier:inDatabase:
insertPaymentReminder:forEventPID:inDatabase:
insertCreditTermsUpdate:forEventPID:inDatabase:
insertPhysicalCardStatusUpdate:forEventPID:inDatabase:
insertBillPaymentSelectedSuggestedAmountData:forEventPID:inDatabase:
insertUserInfoUpdate:forEventPID:inDatabase:
insertAssistanceProgramMessage:forEventPID:inDatabase:
deletePaymentReminderWithEventPID:inDatabase:
deleteCreditTermsUpdatesWithEventPID:inDatabase:
deletePhysicalCardStatusUpdatesWithEventPID:inDatabase:
deleteBillPaymentSelectedSuggestedAmountDataPID:inDatabase:
deleteUserInfoUpdatePID:inDatabase:
deleteAssistanceProgramMessagePID:inDatabase:
_propertySettersForAccountEvent
setItems:
paymentRemindersWithEventPID:inDatabase:
creditTermsUpdatesWithEventPID:inDatabase:
physicalCardStatusUpdatesWithEventPID:inDatabase:
billPaymentSelectedSuggestedAmountDataWithEventPID:inDatabase:
userInfoUpdatesWithEventPID:inDatabase:
assistanceProgramMessagesWithEventPID:inDatabase:
setBlockNotification:
servicingAccountEventsWithTransactionIdentifier:accountIdentifier:inDatabase:
isFileURL
fileSystemRepresentation
_resetAndReopenDatabaseWithPath:
_stepStatement:hasRow:didFinish:
_accessDatabaseUsingBlock:
_statementForSQL:cache:
SQLToAddColumnWithSQL:toTableNamed:
alterTable:removeColumns:renameColumns:
tableWithSQL:
removeColumn:
columnNames
renameColumn:to:
setTableName:
creationSQL
SQLToInsertColumnNames:fromTableNamed:intoTableNamed:
SQLToDropTableNamed:
SQLToRenameTable:to:
accessDatabaseUsingBlock:
setUserVersion:
userVersion
addColumnInTable:columnSQL:
removeColumnInTable:name:
renameColumnInTable:oldName:newName:
dropTable:
renameTable:newName:
insertColumns:fromTableNamed:toTableNamed:
tableNames
typeForColumn:inTable:
_isInTransaction
_dispatchQueue
_statementCache
timeIntervalSinceReferenceDate
initWithUTF8String:
initWithBytes:length:
encryptionPublicKeyData
initWithNFCPayload:pass:inDatabase:
_propertySettersForNFC
setMessage:
setEncryptionPublicKeyData:
initWithTransitAppletState:forPaymentApplicationPID:inDatabase:
loyaltyBalance
setLoyaltyBalance:
setCurrency:
transitAppletStateInDatabase:withPassUniqueIdentifier:secureElementIdentifier:paymentApplicationIdentifier:
_propertyValuesForMapsMerchant:
_mapsMerchantsMatchingQuery:
_predicateForPIDs:
initWithMapsMerchant:inDatabase:
setUnsignedLongLong:forKey:
resultProviderIdentifier
locationLatitude
locationLongitude
heroImageURL
detailedCategory
businessChatURL
heroImageAttributionName
stylingInfo
setResultProviderIdentifier:
setLocationLatitude:
setLocationLongitude:
setPostalAddress:
setBusinessChatURL:
setStylingInfo:
associateMapsMerchantsToPaymentTransactions:inDatabase:
insertMapsMerchant:inDatabase:
updateWithMapsMerchant:
_filePathForAssetType:passUniqueIdentifier:
_assetExists:passUniqueIdentifier:
_imageForAssetType:passUniqueIdentifier:
_storeImage:assetType:passUniqueIdentifier:
_removeAssetsForPassUniqueIdentifier:
fileExistsAtPath:isDirectory:
createFileAtPath:contents:attributes:
constraintsWithAspectFitToSize:
resizedImage:
_fileManager
initWithWebDomain:pass:inDatabase:
_propertySettersForAssociatedWebDomain
_associatedWebDomainsInDatabase:matchingPredicate:
setString:
associatedWebDomainsInDatabase:forPass:
paymentReminder
_propertySettersForAccountPaymentReminder
_startLocationMonitoring
_shouldScheduleNotificationActivity:
_upgradeNotificationForMarket:pass:completion:
_shouldListenForDeviceLockTriggerEvents
marketsURL
markets
_shouldSendNotificationForTransitMarket:
paymentMarketsConfigurationWithURL:forDeviceClass:version:completion:
region
expressCredentialTypes
contextMeetsMarketGeoNotificationThresholdForRegion:paymentNetwork:
marketGeoRegionNotificationSendLimitForRegion:
dictionaryForKey:
deviceRegion
cellularNetworkRegion
_existingTransitPassesForMarket:
_incrementSentCountForMarket:
marketGeoRegionNotificationHourForRegion:
nextDateAfterDate:matchingHour:minute:second:options:
marketGeoRegionNotificationTimeRangeForRegion:
unsignedIntValue
scheduledTimerWithTimeInterval:repeats:block:
_multipleProductsNotificationForMarket:completion:
_productNotificationMessageForMarket:product:completion:
bundleWithURL:
fetchAssetsForMarketWithIdentifier:userInitiated:completionHandler:
credentialType
transitNetworkIdentifier
pathWithComponents:
expressTransitNetworks
_supportsTransitNetworks:
marketsForLocation:ofType:
_transitProducts:forMarket:
_expressUpgradeableOpenLoopPassesForMarket:
_postNotificationForMarkets:transitProducts:upgradeableOpenLoopPasses:completion:
closedLoopExpressCredentialTypes
provisioningMethodTypes
setTransitMarket:
setCredentialType:
setTransitNetworkIdentifier:
openLoopExpressCredentialTypes
_canUpgradeDefaultPaymentCard
_nextNotificationDate
_notificationConfiguration
_upgradeController
_locationManager
_locationTimer
_lastCheckDate
_monitoringLocation
_upgradePending
_registeredForImmediateTriggerEvents
transitMarket
_transitMarket
_displayName
_credentialType
_transitNetworkIdentifier
validatePredicate:allowedKeys:error:
usedKeys
evaluateWithObject:
updateWithRules:
evaluateRulesWithIdentifiers:completion:
rulesWithCompletion:
insertRule:
terminalApplicationVersion
terminalMode
initWithValueAddedServiceTransaction:pass:paymentTransaction:valueAddedMerchant:inDatabase:
_predicateForPaymentTransaction:
_predicateForMerchantPID:
_valueAddedServiceTransactionsWithQuery:
_propertySettersForValueAddedServiceTransaction
setMerchantURL:
setDidSucceed:
setTerminalApplicationVersion:
setTerminalMode:
deleteEntitiesForPaymentTransaction:inDatabase:
initWithPassTypeIdentifier:pass:inDatabase:
_propertySettersForAssociatedPassTypeIdentifier
_associatedPassTypeIdentifiersInDatabase:matchingPredicate:
notificationForNewApplication:oldApplication:
_queue_removeNotificationForApplicationIdentifier:
setMinute:
setSecond:
localTimeZone
setTimeZone:
_acceptReminderIdentifierForApplicationIdentifier:
_expiryReminderIdentifierForApplicationIdentifier:
applyServiceLocalizationBundleForfeatureIdentifier:
_queue_notificationForNewApplication:oldApplication:localizationBundle:
applicationStateReason
_cutomRouteForFeatureIdentifier:
_acceptReminderNotificationDate
applicationOfferDetails
isEqualToDate:
_expiryReminderNotificationDateFromExpiryDate:
discoveryArticleLayoutsUpdated:
discoveryEngagementMessagesUpdated
discoveryArticleLayoutsWithCompletion:
dispatchDiscoveryRequestBlock:errorBlock:
discoveryArticleLayoutForItemWithIdentifier:completion:
discoveryManager
updateDiscoveryItemWithIdentifier:forAction:completion:
updateDiscoveryManifestWithCompletion:
discoveryItemsWithCompletion:
insertDiscoveryItems:discoveryArticleLayouts:completion:
processDiscoveryItemsAndMessagesWithCompletion:
discoveryEngagementMessagesForPassUniqueIdentifier:active:completion:
updateDiscoveryEngagementMessageWithIdentifier:forAction:completion:
insertDiscoveryEngagementMessages:completion:
removeDiscoveryMessageWithIdentifier:completion:
displayedDiscoveryEngagementMessageWithIdentifier:
displayedDiscoveryItemWithIdentifier:
displayedDiscoveryEngagementMessageWithIdentifier:completion:
displayedDiscoveryItemWithIdentifier:completion:
insertRule:completion:
deleteRuleWithIdentifier:completion:
ruleManager
_entitledForDiscoveryUse
_initWithTableSQL:
_columnNamed:
SQLParsingScannerWithSQL:
scanTableSQLPreambleAndTableName:
scanTableSQLColumns:constraints:
_indexOfColumnNamed:
_columns
_tableConstraints
_tableName
qualifiers
setQualifiers:
_name
_qualifiers
scannerWithString:
setCaseSensitive:
whitespaceAndNewlineCharacterSet
setCharactersToBeSkipped:
scanString:intoString:
_scanSQLiteIdentifierIntoString:
_scanTableSQLColumn:
_scanTableSQLConstraint:
isAtEnd
scanLocation
setScanLocation:
_scanUpToTopLevelDelimiters:intoString:
_scanThroughQuoteWithDelimiter:appendToString:
_scanSQLiteIdentifierCharactersIntoString:
addCharactersInString:
scanCharactersFromSet:intoString:
characterSetWithCharactersInString:
formUnionWithCharacterSet:
scanUpToCharactersFromSet:intoString:
characterAtIndex:
characterIsMember:
_scanBalancedSubstringFromCharacter:appendToString:
stringWithCharacters:length:
scanUpToString:intoString:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
substringWithRange:
uppercaseString
_logControllerState
_registerForExpressAvailabilityChanges
_unregisterForExpressAvailabilityChanges
expressPassInformation
isInLostMode
_requestEnableExpressMode:
isExpressModeAllowed
lastSuggestedExpressState
setLastSuggestedExpressState:
setExpressModeAllowed:
initWithExpressPassInformation:inLostMode:
setExpressPassInformation:
setInLostMode:
_inLostMode
_expressPassInformation
_expressModeAllowed
_lastSuggestedExpressState
cancelRemotePaymentRequest:completion:
discoverRemoteDevicesWithProximity:
sendRemotePaymentRequest:completion:
sendPayment:forRemotePaymentRequest:completion:
sendPaymentHostUpdate:forRemotePaymentRequest:completion:
sendPaymentClientUpdate:forRemotePaymentRequest:completion:
sendPaymentResult:forRemotePaymentRequest:completion:
sendPaymentResult:forRemotePaymentRequest:handler:
requestInstrumentThumbnail:forRemoteDevice:size:completion:
didReceiveUpdatedPaymentDevices:
updatePaymentDevicesWithHandler:
sendRemotePaymentRequest:handler:
sendPaymentHostUpdate:forRemotePaymentRequest:handler:
sendPaymentClientUpdate:forRemotePaymentRequest:handler:
sendPayment:forRemotePaymentRequest:handler:
requestInstrumentThumbnail:forRemoteDevice:size:handler:
presentContinuityPaymentInterfaceWithRequestIdentifier:handler:
cancelRemotePaymentRequest:handler:
hasRemoteDevicesWithHandler:
canMakePaymentsWithRemoteDevicesWithHandler:
fetchRemoteDevicesWithHandler:
sendPaymentSetupRequest:appDisplayName:handler:
sendPaymentStatus:forRemotePaymentRequest:handler:
promptDetailsForVirtualCard:showNotification:handler:
_requests
initWithBeacon:pass:inDatabase:
_propertySettersForBeacon
_beaconsInDatabase:matchingPredicate:
setProximityUUIDWithString:
setMajor:
setMinor:
beaconsInDatabase:forPass:
frontFaceImageURL
nameOnCard
FPANSuffix
orderActivity
insertPhysicalCardOrderActivityEvents:forPhysicalCardPID:inDatabase:
initWithPhysicalCard:forCreditAccountDetailsPID:inDatabase:
initWithPhysicalCard:forPhysicalCardStatusUpdatePID:inDatabase:
updateWithPhysicalCard:
updateActivityEvents:forPhysicalCardPID:inDatabase:
_predicateForPhysicalCardStatusUpdatePID:
deleteActivityEventsForPhysicalCardPID:inDatabase:
_physicalCardsWithQuery:
_propertySettersForPhysicalCard
physicalCardOrderActivityEventsForPhysicalCardPID:inDatabase:
setOrderActivity:
setShippingActivity:
setFrontFaceImageURL:
insertPhysicalCards:forCreditAccountDetailsPID:inDatabase:
insertPhysicalCards:forPhysicalCardStatusUpdatePID:inDatabase:
updatePhysicalCards:forCreditAccountDetailsPID:inDatabase:
deletePhysicalCardsForCreditAccountDetailsPID:inDatabase:
deletePhysicalCardsForPhysicalCardStatusUpdatePID:inDatabase:
physicalCardsForCreditAccountDetailsPID:inDatabase:
physicalCardsForPhysicalCardStatusUpdatePID:inDatabase:
initWithActivityEvent:forPhysicalCardPID:inDatabase:
_predicateForPhysicalCardPID:
_activityEventsWithQuery:
_propertySettersForActivityEvent
setActivity:
updateWithActivityEvent:
activityEvent
usedPassFromSource:withTypeIdentifier:info:
usedPaymentPassWithUniqueIdentifier:transactionIdentifier:info:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
_predicateForProductIdentifier:
initWithPaymentSetupProductConfiguration:inDatabase:
updateWithPaymentSetupProductConfiguration:
_propertySettersForPaymentSetupProductConfiguration
setProductIdentifier:
setPartnerIdentifier:
setFeatureIdentifier:
physicalCardStatusUpdate
_propertySettersForAccountPhysicalCardStatusUpdate
setUpdatedPhysicalCards:
initWithValueAddedMerchant:inDatabase:
_propertySettersForValueAddedMerchant
hasValidNFCPayload
_setContactlessPassesAvailability:visibility:forPayment:
_queue_identifyDefaultPaymentPassWithCurrentDefaultPaymentPassUniqueIdentifier:
_presentDefaultPaymentPassUpdateNotification:
setPersistentFieldDetectionEnabled:
resourceURL
_shouldUpdateContactlessPassesAvailibility
_isUpdatingContactlessPassesAvailibility
_contactlessPassesLock
productTimeZone
rates
insertOrUpdateVirtualCards:forCreditAccountDetailsPID:inDatabase:
initWithCreditAccountDetails:forAccountPID:inDatabase:
deleteVirtualCardEncryptedDataForCreditAccountDetailsPID:inDatabase:
deleteVirtualCardsForCreditAccountDetailsPID:inDatabase:
creditAccountDetails
updateWithCreditAccountDetails:
_propertySettersForCreditAccountDetails
virtualCardsForCreditAccountDetailsPID:inDatabase:
_migrateDatabase:fromUserVersion:
_migratePassSettingsFromDatabase:
initWithDatabase:
_migrateFrom8075To8076:context:
_migrateFrom8076To8300:context:
_migrateFrom8300To8301:context:
_migrateFrom8301To8302:context:
_migrateFrom8302To8303:context:
_migrateFrom8303To8304:context:
_migrateFrom8304To8305:context:
_migrateFrom8305To9000:context:
_migrateFrom9000To9001:context:
_migrateFrom9001To9002:context:
_migrateFrom9002To9003:context:
_migrateFrom9003To9004:context:
_migrateFrom9004To9005:context:
_migrateFrom9005To9006:context:
_migrateFrom9006To9007:context:
_migrateFrom9007To9008:context:
_migrateFrom9008To9009:context:
_migrateFrom9009To9010:context:
_migrateFrom9010To9011:context:
_migrateFrom9011To9012:context:
_migrateFrom9012To9013:context:
_migrateFrom9013To9014:context:
_migrateFrom9014To9015:context:
_migrateFrom9015To9016:context:
_migrateFrom9016To9017:context:
_migrateFrom9017To9018:context:
_migrateFrom9018To9200:context:
_migrateFrom9200To9300:context:
_migrateFrom9300To10000:context:
_migrateFrom10000To10001:context:
_migrateFrom10001To10002:context:
_migrateFrom10002To10003:context:
_migrateFrom10003To10004:context:
_migrateFrom10004To10005:context:
_migrateFrom10005To10006:context:
_migrateFrom10006To10007:context:
_migrateFrom10007To10008:context:
_migrateFrom10008To10009:context:
_migrateFrom10009To10010:context:
_migrateFrom10010To10011:context:
_migrateFrom10011To10012:context:
_migrateFrom10012To10013:context:
_migrateFrom10013To10014:context:
_migrateFrom10014To10015:context:
_migrateFrom10015To10016:context:
_migrateFrom10016To10200:context:
_migrateFrom10200To10300:context:
_migrateFrom10300To11000:context:
_migrateFrom11000To11001:context:
_migrateFrom11001To11002:context:
_migrateFrom11002To11003:context:
_migrateFrom11003To11004:context:
_migrateFrom11004To11005:context:
_migrateFrom11005To11006:context:
_migrateFrom11006To11007:context:
_migrateFrom11007To11008:context:
_migrateFrom11008To11009:context:
_migrateFrom11009To11010:context:
_migrateFrom11010To11011:context:
_migrateFrom11011To11012:context:
_migrateFrom11012To11013:context:
_migrateFrom11013To11014:context:
_migrateFrom11014To11015:context:
_migrateFrom11015To11016:context:
_migrateFrom11016To11017:context:
_migrateFrom11017To11018:context:
_migrateFrom11018To11019:context:
_migrateFrom11019To11020:context:
_migrateFrom11020To11021:context:
_migrateFrom11021To11022:context:
_migrateFrom11022To11100:context:
_migrateFrom11100To11200:context:
_migrateFrom11200To11201:context:
_migrateFrom11201To11300:context:
_migrateFrom11300To11301:context:
_migrateFrom11301To11302:context:
_migrateFrom11302To11303:context:
_migrateFrom11303To12000:context:
_migrateFrom12000To12001:context:
_migrateFrom12001To12002:context:
_migrateFrom12002To12003:context:
_migrateFrom12003To12004:context:
_migrateFrom12004To12005:context:
_migrateFrom12005To12006:context:
_migrateFrom12006To12007:context:
_migrateFrom12007To12008:context:
_migrateFrom12008To12009:context:
_migrateFrom12009To12010:context:
_migrateFrom12010To12011:context:
_migrateFrom12011To12012:context:
_migrateFrom12012To12013:context:
_migrateFrom12013To12014:context:
_migrateFrom12014To12015:context:
_migrateFrom12015To12016:context:
_migrateFrom12016To12017:context:
_migrateFrom12017To12018:context:
_migrateFrom12018To12019:context:
_migrateFrom12019To12020:context:
_migrateFrom12020To12021:context:
_migrateFrom12021To12022:context:
_migrateFrom12022To12023:context:
_migrateFrom12023To12024:context:
_migrateFrom12024To12025:context:
_migrateFrom12025To12026:context:
_migrateFrom12026To12027:context:
_migrateFrom12027To12028:context:
_migrateFrom12028To12029:context:
_migrateFrom12029To12030:context:
_migrateFrom12030To12031:context:
_migrateFrom12031To12032:context:
_migrateFrom12032To12033:context:
_migrateFrom12033To12034:context:
_migrateFrom12034To12035:context:
_migrateFrom12035To12036:context:
_migrateFrom12036To12037:context:
_migrateFrom12037To12038:context:
_migrateFrom12038To12039:context:
_migrateFrom12039To12040:context:
_migrateFrom12040To12041:context:
_migrateFrom12041To12042:context:
_migrateFrom12042To12043:context:
_migrateFrom12043To12044:context:
_migrateFrom12044To12045:context:
_migrateFrom12045To12046:context:
_migrateFrom12046To12047:context:
_migrateFrom12047To12048:context:
_migrateFrom12048To12049:context:
_migrateFrom12049To12050:context:
_migrateFrom12050To12051:context:
_migrateFrom12051To12052:context:
_migrateFrom12052To12053:context:
_migrateFrom12053To12054:context:
_migrateFrom12054To12055:context:
_migrateFrom12055To12056:context:
_migrateFrom12056To12057:context:
_migrateFrom12057To12058:context:
_migrateFrom12058To12059:context:
_migrateFrom12059To12060:context:
_migrateFrom12060To12061:context:
_migrateFrom12061To12062:context:
_migrateFrom12062To12063:context:
_migrateFrom12063To12064:context:
_migrateFrom12064To12065:context:
_migrateFrom12065To12066:context:
_migrateFrom12066To12067:context:
_migrateFrom12067To12068:context:
_migrateFrom12068To12069:context:
_migrateFrom12069To12070:context:
_migrateFrom12070To12071:context:
_migrateFrom12071To12072:context:
_migrateFrom12072To12073:context:
_migrateFrom12073To12074:context:
_migrateFrom12074To12075:context:
_migrateFrom12075To12076:context:
_migrateFrom12076To12077:context:
_migrateFrom12077To12078:context:
_migrateFrom12078To12079:context:
_migrateFrom12079To12080:context:
_migrateFrom12080To12081:context:
_migrateFrom12081To12082:context:
_migrateWhitneyFrom1To2:context:
_migrateFrom12083To12084:context:
_migrateFrom12084To12085:context:
_migrateFrom12085To12086:context:
_migrateFrom12086To12087:context:
_migrateFrom12087To12088:context:
_migrateFrom12088To12089:context:
_migrateFrom12089To12090:context:
_migrateFrom12090To12091:context:
_migrateFrom12091To12092:context:
_migrateFrom12092To12093:context:
_migrateFrom12093To12094:context:
_migrateFrom12094To12095:context:
_migrateFrom12095To12096:context:
_migrateWhitneyFrom2To3:context:
_migrateFrom12097To12098:context:
_migrateFrom12XXXTo13000:context:
_migrateFrom13000To13001:context:
_migrateFrom13001To13002:context:
_migrateFrom13002To13003:context:
_migrateFrom13003To13004:context:
_migrateWhitneyFrom3To4:context:
_migrateFrom13005To13006:context:
_migrateFrom13006To13007:context:
hasDatabasePopulationOperations
performDatabasePopulationOperationsWithPasses:
performPostMigrationOperations
updateSettings:forObjectWithUniqueIdentifier:defaultSettings:
addDatabasePopulationOperation:
PKBoolForKey:
addPaymentApplicationRegeneration
isNFCEnabled
unsignedLongValue
addAutomaticSelectionCriteriaRegeneration
lowBalanceReminderAmountForPassWithUniqueID:
initWithThreshold:isEnabled:
addPostMigrationOperation:
initWithPaymentApplicationDictionary:auxiliaryApplication:
_databasePopulationOperations
_postMigrationOperations
_willRegenerateAutomaticSelectionCriteria
_willRegeneratePaymentApplications
_insertPass:
_applyCatalog:
_removePass:fromGroup:
_removeGroup:
automaticGroupWithGroupingProfile:
updateWithAutomaticGroup:
_insertPass:groupingProfile:
_validateDefaultPaymentPassOrdering
groupID
setIsUbiquitous:
setGroupID:
_moveGroup:toIndex:
_groupAtOrAfterIndex:bestMatchingUniqueIDs:
_fixDuplicateGroupsAtIndex:preservingGroupPID:maximumNumberOfGroups:
_insertPass:groupingProfile:insertNewGroupAfter:
_firstGroupMatchingProfile:
_addPass:toGroup:
insertAutomaticGroup:inDatabase:
order
_predicateForGroupingID:
_predicateForDate:leeway:
_firstGroupMatchingPredicate:
automaticGroup
minDate
maxDate
_groupWithPersistentID:
updateWithOrder:
addPassWithGroupingProfile:
_firstGroupMatchingGroup:
_mergeGroup:intoGroup:
setMinDate:
setMaxDate:
_canAcceptDate:withLeeway:
_dateIsAcceptable:
_nfcEnabled
_passTypeID
_groupingID
_passStyle
_minDate
_maxDate
_ingestedDate
initWithApplicationIdentifier:pass:inDatabase:
_propertySettersForAssociatedApplicationIdentifier
_associatedApplicationIdentifiersInDatabase:matchingPredicate:
creditTermsUpdate
requestIdentifier
adverseActionContentIdentifier
initiator
_propertySettersForAccountCreditTermsUpdate
setRequestIdentifier:
setAdverseActionContentIdentifier:
setInitiator:
transaction
setTransaction:
_transaction
numberOfDaysBetweenMapsReprocessingForRegion:
_processingItemsForScheduledActivity
_logScheduledActivityWithItems:
_processItem:
fileHandleForUpdatingAtPath:
seekToEndOfFile
writeData:
closeFile
processedForMerchantCleanup
_waitTime
_currentPasscodeMeetsUpgradedPasscodePolicy:
_enforceUpgradedPasscodePolicy:
_removeUpgradedPasscodePolicyIfNecessary
removeUpgradedPasscodePolicyIfNecessaryWithCompletion:
isChinaRegionIdentifier:
MCSetBoolRestriction:value:
MCSetValueRestriction:value:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
isPasscodeCompliantWithNamedPolicy:outError:
_paymentWebService
_internalQueue
_hasActivePasscodeUpgradeFlow
initWithFeatureDescriptor:forPeerPaymentAccountPID:inDatabase:
_predicateForPeerPaymentAccountPID:
_peerPaymentAccountFeatureDescriptorsWithQuery:
minimumAmount
maximumAmount
feePercentage
minimumFee
maximumFee
_propertySettersForPeerPaymentAccountFeatureDescriptor
setFeePercentage:
setMinimumFee:
setMaximumFee:
peerPaymentAccountFeatureDescriptor
assistanceProgramMessage
pastDue
_propertySettersForAssistanceProgramMessage
setPastDue:
_updateDictionaryWithAutomaticGroup:
_propertySettersForAutomaticGroup
initWithLocationURL:type:inDatabase:
insertPassLocationSourceWithPass:locationSource:inDatabase:
locationSourcePIDPredicate:
urlPredicate:
anyInDatabase:withLocationSourcePID:
initWithCreditAccountBalanceSummary:forCreditAccountSummaryPID:inDatabase:
creditAccountBalanceSummary
updateWithCreditAccountBalanceSummary:
_propertySettersForCreditAccountBalanceSummary
isIndexingAvailable
initWithName:protectionClass:bundleIdentifier:
setIndexDelegate:
deleteAllSearchableItemsWithCompletionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
_indexPasses:completion:
getBytes:length:
beginIndexBatch
dataWithBytes:length:
endIndexBatchWithClientState:completionHandler:
fetchLastClientStateWithCompletionHandler:
searchableItemForPass:
indexSearchableItems:completionHandler:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
indexAccessQueue
setIndexAccessQueue:
index
setIndex:
_indexAccessQueue
_index
fees
_predicateForFeeWithIdentifier:
updateWithPaymentTransactionFeeItem:
initWithPaymentTransactionFeeItem:paymentTransaction:inDatabase:
_predicateForPaymentTransactionPID:
_paymentTransactionFeesInDatabase:matchingPredicate:
_feesFromFeeItems:
_predicateForPaymentTransactionIdentifier:
_predicateForPaymentTransactionPIDs:
_propertySettersForPaymentTransactionFeeItem
initWithFeeItems:
setFees:
_paymentTransactionFeesWithQuery:
setLocalizedDisplayName:
updatePaymentTransactionFees:forPaymentTransaction:inDatabase:
deleteEntitiesForPaymentTransactionPID:inDatabase:
associateFeesToPaymentTransactions:inDatabase:
feeItem
_propertyValuesForMapsBrand:
_mapsBrandsMatchingQuery:
initWithMapsBrand:inDatabase:
logoURL
mapsBrandsInDatabase:
associateMapsBrandsToPaymentTransactions:inDatabase:
insertMapsBrand:inDatabase:
updateWithMapsBrand:
_criteriaInDatabase:forPredicate:
_propertySettersForCriterion
setPrimaryTCIs:
setTCIs:
initWithCriterion:forPaymentApplication:database:
primaryTCIs
mask
setMask:
setSupportsExpress:
criteriaInDatabase:forPaymentApplication:
cardholderName
encryptedData
ephemeralPublicKey
expiration
lastAutoFilledBySafari
virtualCardForIdentifier:inDatabase:
initWithVirtualCard:forCreditAccountDetailsPID:inDatabase:
updateWithVirtualCard:
removeVirtualCardEncryptedData
_propertySettersForVirtualCard
_predicateForVirtualCardStatusUpdatePID:
initWithVirtualCard:forVirtualCardStatusUpdatePID:inDatabase:
initWithBase64EncodedString:options:
setSupportsLocalStorage:
insertOrUpdateVirtualCard:forCreditAccountDetailsPID:inDatabase:
trustedDeviceEnrollmentInfo
trustedDeviceEnrollmentInfoForWebService:
localTrustedDeviceEnrollmentSignatureWithAccountDSID:sessionData:handler:
remoteTrustedDeviceEnrollmentSignatureWithAccountDSID:sessionData:handler:
paymentWebService:signData:signatureEntanglementMode:withCompletionHandler:
deviceUDID
trustedDeviceEnrollmentInfoWithHandler:
trustedDeviceEnrollmentSignatureForDevice:accountDSID:sessionData:handler:
_creditAccountFeatureDescriptorsWithQuery:
paymentFundingSourceTypes
paymentFrequencies
paymentPresets
fundingSourceTermsIdentifier
_predicateForFeatureIdentifier:
updateWithCreditFeatureDescriptor:
initWithCreditAccountFeatureDescriptor:forAccountPID:inDatabase:
_propertySettersForCreditAccountFeatureDescriptor
setPaymentPresets:
setFundingSourceTermsIdentifier:
creditAccountFeatureDescriptor
initWithObjectSettings:
settingsForObjectWithUniqueIdentifier:defaultSettings:
_requestArchiveToDisk
hasSettingsForObjectWithUniqueIdentifier:
_objectSettings
_needsArchive
_defaultSettingsForObjectClass:
setSettings:
dictionaryWithContentsOfURL:
_defaultSettingsForDatabasePass:
settingsForDatabasePass:
updateSettings:forDatabasePass:
userInfoUpdate
_propertySettersForUserInfoUpdate
setUpdatedDate:
discoveryManifestURLForRegion:
_startup
_queue_processDiscoveryItemsAndMessagesWithCompletion:
_queue_shouldUpdateDiscoveryManifestWithCompletion:
_filterItemsForViewCount:
setForItem:
localizeWithBundle:
_articleLayoutForDiscoveryItem:completion:
updatedStatusForAction:
isTerminalStatus
_updateDiscoveryItemStatusDefaults
_currentMessagesBundleVersion
_filterEngagementMessagesForViewCount:
_updateDiscoveryEngagementMessageStatusDefaults
incrementViewCount
_shouldUpdateDiscoveryManifestWithCompletion:
_queue_updateWithServerDiscoveryItems:
_cleanArticleLayoutsDirectories
_updateDiscoveryItemStatusDefaultsForUpdatedItems:
_deleteMessagesBundle
_updateDiscoveryEngagementMessageStatusDefaultsForUpdatedMessages:
_queue_updateWithServerEngagementMessages:
_fetchDiscoverManifestWithCompletion:
manifest
_queue_processDiscoveryManifest:completion:
discoveryManifestWithCompletion:
_filterRulesForOSVersion:
_filterDiscoveryItemsForOSVersion:
messagesMetadata
messagesBundleURL
_discoveryMessageManifestFromBundle:withError:
_filterEngagementMessagesForOSVersion:
_fetchAndWriteBundleFromRemoteBundleURL:toLocalBundleURL:processTempBundle:completion:
_restoreDiscoveryItemStatusFromDefaultsIfNecessaryWithServerItems:
_restoreDiscoveryEngagementMessageStatusFromDefaultsIfNecessaryWithServerMessages:
_updateBadgeCountForUpdatedDiscoveryItems:previousDiscoveryItems:
_callDelegateWithUpdatedDiscoveryItems:engagementMessages:
_discoveryArticleLayoutFromBundleForDiscoveryItem:error:
_fetchAndWriteBundleForDiscoveryItem:completion:
open
close
discoveryBundleForURL:completion:
osVersionRequirementRange
longValue
peerPaymentWebServiceCoordinator:didUpdateAccount:oldAccount:
_processDiscoveryManifest:completion:
_discoveryManifestURL
_isUpdatingDiscoveryManifest
_shouldRestoreDiscoveryItemsStatusFromDefaults
_shouldRestoreDiscoveryMessagesStatusFromDefaults
_discoveryArticleLayoutOverrides
_engagementMessageOverrides
URLForResource:withExtension:
unzipStream:toPath:completionHandler:
initWithPassPID:locationSourcePID:inDatabase:
passPIDPredicate:
declinedTermsIdentifier
initWithFeatureApplicationDeclineDetails:forApplicationPID:inDatabase:
featureApplicationDeclineDetails
updateWithFeatureApplicationDeclineDetails:
insertFeatureApplicationDeclineDetails:forApplicationPID:inDatabase:
setDeclinedTermsIdentifier:
_propertySettersForFeatureApplicationDeclineDetails
deleteFeatureApplicationDeclineDetailsForApplicationPID:inDatabase:
featureApplicationDeclineDetailsForApplicationPID:inDatabase:
updateFeatureApplicationDeclineDetails:forApplicationPID:inDatabase:
billPaymentSelectedSuggestedAmountData
transactionAmount
statementIdentifier
suggestedAmountCategory
_propertySettersForBillPaymentSelectedSuggestedAmountData
setStatementIdentifier:
setTransactionAmount:
setSuggestedAmountCategory:
predicateForStatementIdentifier:
propertySettersForLocation
initWithLatitude:longitude:forLocation:database:
insertLocation:forUniqueID:
answered
answeredOnThisDevice
_predicateForQuestionWithType:
updateWithPaymentTransactionQuestion:
initWithPaymentTransactionQuestion:paymentTransaction:inDatabase:
_paymentTransactionQuestionsInDatabase:matchingPredicate:
_propertySettersForPaymentTransactionQuestion
setQuestions:
_paymentTransactionQuestionsWithQuery:
setAnswered:
setAnsweredOnThisDevice:
updatePaymentTransactionQuestions:forPaymentTransaction:inDatabase:
paymentTransactionQuestionsInDatabase:forPaymentTransaction:
paymentTransactionQuestionsInDatabase:forPaymentTransactionIdentifier:
associateQuestionsToPaymentTransactions:inDatabase:
initWithValid:usedKeys:
_valid
_usedKeys
initWithPredicate:allowedKeys:
validateWithError:
acceptVisitor:flags:
expressionType
keyPath
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
_validated
_allowedKeys
_error
_locationsByUniqueID
eligibleValue
eligibleValueUnit
initWithPaymentTransactionRewardsItem:paymentTransaction:inDatabase:
deleteEntitiesForAccountRewardsPID:inDatabase:
initWithPaymentTransactionRewardsItem:accountRewardsPID:inDatabase:
_paymentTransactionRewardsInDatabase:matchingPredicate:
_rewardsFromRewardsItems:
_propertySettersForPaymentTransactionRewardItem
_paymentTransactionRewardsWithQuery:
setEligibleValue:
setEligibleValueUnit:
updatePaymentTransactionRewards:forPaymentTransaction:inDatabase:
paymentTransactionRewardsInDatabase:forPaymentTransaction:
paymentTransactionRewardsInDatabase:forPaymentTransactionIdentifier:
associateRewardsToPaymentTransactions:inDatabase:
_predicateForRewardWithIdentifier:
updateWithPaymentTransactionRewardItem:
subtotalAmount
locationDate
locality
administrativeArea
timeZone
locationAltitude
locationHorizontalAccuracy
locationVerticalAccuracy
processedForLocation
requiresMerchantReprocessing
lastMerchantReprocessingDate
processedForStations
transitModifiers
startStationCode
startStation
startStationLatitude
startStationLongitude
endStationCode
endStation
endStationLatitude
endStationLongitude
shouldSuppressDate
rawName
industryCategory
industryCode
rawCANL
rawCity
rawCountry
rawState
cleanConfidenceLevel
adamIdentifier
originURL
webMerchantIdentifier
webMerchantName
fallbackcategory
fallbackDetailedCategory
useRawMerchantData
adjustmentType
peerPaymentMessageReceivedDate
foreignExchangeInformation
destinationCurrencyAmount
exchangeRate
primaryFundingSourceAmount
primaryFundingSourceCurrencyCode
secondaryFundingSourceAmount
secondaryFundingSourceCurrencyCode
secondaryFundingSourceNetwork
secondaryFundingSourceDPANSuffix
secondaryFundingSourceFPANIdentifier
merchantProvidedDescription
rewardsTotalCurrencyCode
rewardsEligibilityReason
lifecycleIdentifier
authNetworkData
clearingNetworkData
cardIdentifier
cardNumberSuffix
adjustmentTypeReason
issueReportIdentifier
metadata
updateWithPaymentTransactionFees:
updateWithPaymentTransactionRewards:
updateWithPaymentTransactionQuestions:
initWithPaymentTransaction:paymentPass:paymentApplication:inDatabase:
_predicateForWithNotificationServiceData:
_predicateForMapsMerchantPID:
_predicateForMapsBrandPID:
_predicateForReferenceIdentifier:
_predicateForWithBackingData:
_predicateForWithTransactionSource:excludeCardType:
_predicateForPaymentHash:
_predicateForTransactionDate:withinWindow:
_paymentTransactionsWithQuery:
_predicateForTransactionStatus:
_predicateForMerchantName:
_closestTransactionInDatabase:withTransactionDate:withinWindow:passWithUniqueIdentifier:additionalPredicates:
_predicateForSuppressFromUI:
_predicateForPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:
_predicateForStartStatusChangedDate:
_predicateForEndStatusChangedDate:
_predicateForPeerPaymentCounterpartHandle:
_predicateForMapsBrandIdentifier:
_predicateForMapsIdentifier:
_predicateForMerchantRawName:
_predicateForMapsMerchantName:
_predicateForMapsBrandName:
_predicateForMapsBrandCategory:
_predicateForMapsMerchantCategory:
_predicateForFallbackCategory:
_predicateForTransactionType:
_predicateForRedemptionStartDate:
_predicateForRedemptionEndDate:
_predicateForRedemptionType:
_predicateForUnansweredQuestions
_predicateForOriginatedOnDevice:
_predicateForTransactionDateNewerThanDate:
_predicateForTransactionSource:
_predicateForRequiresMerchantReprocessing:
_predicateForNoMapsMatch
_predicateForLastMerchantReprocessingDateBeforeDate:
_hasValidMerchantData
setForeignExchangeInformation:
setServicingEvents:
setRedemptionEvent:
_propertySettersForMerchant
categoryForIndustryCode:
setFallbackcategory:
_propertySettersForForeignExchangeInformation
setDestinationCurrencyAmount:
merchantFromProperties:values:
foreignExchangeInformationFromProperties:values:
setTransactionStatusChangedDate:
setTransactionDeclinedReason:
setSubtotalAmount:
setLocationDate:
setLocationAltitude:
setLocationHorizontalAccuracy:
setLocationVerticalAccuracy:
setRequiresMerchantReprocessing:
setLastMerchantReprocessingDate:
setTransitModifiers:
setEnRoute:
setStartStationCode:
setStartStation:
setStartStationLatitude:
setStartStationLongitude:
setEndStationCode:
setEndStation:
setEndStationLatitude:
setEndStationLongitude:
setAdjustmentType:
setPrimaryFundingSourceAmount:
setPrimaryFundingSourceCurrencyCode:
setSecondaryFundingSourceAmount:
setSecondaryFundingSourceCurrencyCode:
setSecondaryFundingSourceNetwork:
setSecondaryFundingSourceDPANSuffix:
setSecondaryFundingSourceFPANIdentifier:
setSecondaryFundingSourceDescription:
setSecondaryFundingSourceType:
setRequestDeviceScoreIdentifier:
setSendDeviceScoreIdentifier:
setDeviceScoreIdentifiersRequired:
setMerchantProvidedDescription:
setMetadata:
setIssueReportIdentifier:
setRewardsEligibilityReason:
setLifecycleIdentifier:
setAuthNetworkData:
setClearingNetworkData:
setCardIdentifier:
setCardNumberSuffix:
setAdjustmentTypeReason:
setSuppressNotifications:
setIndustryCategory:
setIndustryCode:
setRawCANL:
setRawCity:
setRawState:
setRawCountry:
setZip:
setCleanConfidenceLevel:
setAdamIdentifier:
setOriginURL:
setWebMerchantIdentifier:
setWebMerchantName:
setFallbackDetailedCategory:
setUseRawMerchantData:
setExchangeRate:
countInDatabase:forPassUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:
_paymentTransactionsInDatabase:matchingPredicate:
mapsMerchantIdentifier
substringToIndex:
_predicateForFeatureApplicationIdentifier:
initWithFeatureApplication:inDatabase:
updateWithFeatureApplication:
applicationTermsIdentifier
businessChatIdentifier
coreIDVServiceProviderName
declineDetails
_propertySettersForFeatureApplication
setApplicationOfferDetails:
setDeclineDetails:
setApplicationBaseURL:
setApplicationState:
setApplicationStateReason:
setApplicationTermsIdentifier:
setBusinessChatIdentifier:
setCoreIDVServiceProviderName:
v16@?0@"NSNotification"8
papaya
v48@?0q8@"NSArray"16^@24Q32^B40
v24@?0@"NSArray"8^@16
v24@?0@"PKDiscoveryEngagementMessage"8@16
v24@?0@"DiscoveryEngagementMessage"8@16
messageOrder
Tq,N,V_messageOrder
com.apple.passd.secureElement.session
v8@?0
com.apple.passd.xpcListener
com.apple.passd.installedPasses
com.apple.passd
UserNotifications.archive
com.apple.passd.matching
v12@?0B8
Unexpected interruption on passLibrary connection
Unexpected interruption on paymentService connection
Unexpected interruption on inAppPaymentService connection
Unexpected interruption on PDTrustedDeviceEnrollmentInfoProvider connection
Unexpected interruption on peerPaymentService connection
Unexpected interruption on cloudStoreService connection
Unexpected interruption on registrationService connection
Unexpected interruption on accountService connection
Unexpected interruption on discoveryService connection
.%lu
v16@?0@"NSError"8
B24@?0@"PKPaymentApplication"8^B16
v24@?0@"PDPaymentService"8^B16
v20@?0B8@"NSError"12
v16@?0@"PKAccount"8
v16@?0@"PDUserNotification"8
expired peer payment send notification
rejected peer payment send notification
peer payment contactless transaction declined notification
v16@?0@"PKPeerPaymentAccount"8
v16@?0@"PKAccountEvent"8
success
manually accepted peer payment notification
v16@?0@"NSArray"8
TRANSIT_CARD_READY_TO_USE_FORMAT
GENERIC_READY_TO_USE_FORMAT
PAYMENT_READY_TO_USE_FORMAT
GENERIC_SUSPENDED_NOTIFICATION_FORMAT
PAYMENT_SUSPENDED_NOTIFICATION_FORMAT
GENERIC_REMOVED_NOTIFICATION_FORMAT
PAYMENT_REMOVED_NOTIFICATION_FORMAT
messageType == %d
merchant transaction notification
Transaction Processor
ingestedDate
v24@?0@8^B16
v16@?0@"PDPassLibrary"8
Name
LastTransaction
ORB_LAST_TRANSACTION
ORB_ADD_CARD
DefaultCard
RelevantPass
%@@%dx
PKBillingAddressKeychainKey
PKBillingAddressesKeychainKey
com.apple.PassbookUIService
PKShippingAddressKeychainKey
PKContactEmailKeychainKey
PKContactPhoneKeychainKey
PKContactNameKeychainKey
com.apple.passkit
Invalid SE-SEP Pairing
Passcode Disabled
SECURE_ELEMENT_ACCESS_VIOLATION_PASSCODE_MAC
Secure Element Ownership Lost
SECURE_ELEMENT_ACCESS_VIOLATION_OWNERSHIP_LOST_MESSAGE
SECURE_ELEMENT_ACCESS_VIOLATION_OWNERSHIP_LOST_TITLE_USER_FORMAT
SECURE_ELEMENT_ACCESS_VIOLATION_OWNERSHIP_LOST_TITLE_GENERIC
Automatic Login Enabled
SECURE_ELEMENT_ACCESS_VIOLATION_AUTOMATIC_LOGIN
Secure Element Hardware Changed
v24@?0Q8Q16
v16@?0Q8
passd-work.boot
v24@?0@"PKExpressPassInformation"8^B16
v16@?0@"NSSet"8
FAIL_FORWARD_BOOT_TITLE_IPAD
FAIL_FORWARD_BOOT_TITLE
FAIL_FORWARD_BOOT_MESSAGE_IPAD
FAIL_FORWARD_BOOT_MESSAGE
FAIL_FORWARD_LEARN_MORE_BUTTON
FAIL_FORWARD_DONE_BUTTON
v24@?0^{__CFUserNotification=}8Q16
passes19.sqlite
NotificationServiceTasks_v4.archive
NotificationServiceTasks_v5.archive
WebServiceTasks_v3.archive
WebServiceTasks_v4.archive
WebServiceTasks_v5.archive
bulletins.archive
BulletinManager.archive
paymentservice.archive
TransactionServiceTasks_v4.archive
LockStatus.plist
v32@?0@"NSString"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.passd.utility
PKSecureElementPairingStateUnknown
PKSecureElementPairingStatePaired
PKSecureElementPairingStateUnpaired
unknown
PDPaymentWebServiceCoordinator
ConsistencyCheck
VerificationCheck.
VASTransactionProcessor.
DeviceCheckIn
identifier
T@"NSUUID",&,V_identifier
canPromptForAuth
TB,V_canPromptForAuth
completionHandlers
T@"NSMutableArray",&,V_completionHandlers
cancelled
TB,V_cancelled
sharedWebServiceQueue
com.apple.passd.pdpaymentWebServiceCoordinator.reply
v24@?0Q8@"NSError"16
v16@?0@"PKWebService"8
-[PDPaymentWebServiceCoordinator updateSharedWebServiceContext:]_block_invoke
SubmitOTP
v32@?0Q8@"PKPaymentPass"16@"NSError"24
Consistency Check
v32@?0@"NSString"8@"PKPaymentWebServiceRegion"16^B24
B16@?0@"PKAccount"8
v24@?0@"NSArray"8@"NSArray"16
v24@?0@"PKPaymentAvailableProductsResponse"8@"NSError"16
v16@?0@"PKSecureElementApplet"8
%@-%@
passd
v32@?0Q8Q16@"NSError"24
Device Check In
Fetching config for device check in
AUTH_ERROR
v24@?0q8@"PKAppleAccountInformation"16
v16@?0q8
Performing device check in
v24@?0@"PKPaymentDeviceCheckInResponse"8@"NSError"16
Registering for device check in
Updating registration for device check in
Configuring web service for device check in
uniqueID
v24@?0B8f12@"NSError"16
paymentpass
v20@?0B8@"PKPass"12
v20@?0B8@"NSDictionary"12
action
requestId
v32@?0Q8@"PKPaymentNotificationActionResponse"16@"NSError"24
alert
loc-key
%@/%@
v20@?0B8@"NSDate"12
NEEDS_VERIFICATION_REMINDER_FORMAT
Web service downloaded pass
Perfoming action against payment setup product
v32@?0Q8@"PKPaymentAvailableProductsResponse"16@"NSError"24
Fetching Payment Setup Products
NOTIFY_ME_ALERT_AVAILABLE_TITLE
NOTIFY_ME_ALERT_AVAILABLE_MESSAGE
%@/%@/%@
sharedWebServiceContext
T@"PKPaymentWebServiceContext",R,N
accountManager
T@"PDAccountManager",&,N,V_accountManager
deviceRegistrationServiceCoordinator
T@"PDDeviceRegistrationServiceCoordinator",&,N,V_deviceRegistrationServiceCoordinator
com.apple.passd.xpcEventStreamsManager.state
com.apple.notifyd.matching
com.apple.distnoted.matching
com.apple.nsurlsessiond-events
observer
T@"<PDXPCEventStreamObserver>",W,N,V_observer
replyQueue
T@"NSObject<OS_dispatch_queue>",&,V_replyQueue
com.apple.passd.xpcEventStreamManager.event
com.apple.passd.xpcEventStreamManager.reply
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.passd.xpcEventStreamManager.deferredEventDelivery
com.apple.passd.xpcEventStreamManager.wake
guavas
v24@?0@"PKCategoryVisualizationMagnitude"8@16
GetPasses
GetPassesOfType
v20@?0i8@"NSError"12
-[PDPassLibrary presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:handler:]
v16@?0@"PKPaymentPass"8
q24@?0@"PKPaymentPass"8@"PKPaymentPass"16
GetPassesAndCatalog
B24@?0@8^B16
v20@?0B8@"NSArray"12
B24@?0@"PKPass"8^B16
B32@?0@"PKPaymentPass"8Q16^B24
shoebox://
prefs:root=PASSBOOK&path=
v16@?0@"PKMapsTransitMessage"8
B24@?0@"PKPaymentPass"8^B16
MAPS_BANNER_ADD_TRANSIT_CARD_TITLE_FORMAT
MAPS_BANNER_ADD_TRANSIT_CARD_TITLE
MAPS_BANNER_OPEN_WALLET_ACTION
MAPS_BANNER_UPGRADED_CARD_TITLE_FORMAT
shoebox://%@/%@/%@
MAPS_BANNER_LEARN_MORE_ACTION
v24@?0@"PKPaymentPass"8q16
MAPS_BANNER_LOW_BALANCE_FULL
MAPS_BANNER_LOW_BALANCE_AMOUNT_ONLY
MAPS_BANNER_LOW_BALANCE_NAME_ONLY
MAPS_BANNER_LOW_BALANCE_GENERIC
MAPS_BANNER_ADD_MONEY_ACTION
v16@?0@"PKPass"8
GetArchivedObject
q24@?0@"PKPass"8@"PKPass"16
GetContent
v16@?0@"PKContent"8
v16@?0@"PKImageSetXPCContainer"8
INGESTION_ADD
INGESTION_ADD_N
REVIEW_BUTTON_TITLE
INGESTION_CANCEL
ADD_PASSES_TITLE
IN_APP_PAYMENT_ERROR_NO_ENTITLEMENT_DISBURSEMENTS
v16@?0@"PDPassUpdateUserNotification"8
Account Deleted
secureElement
T@"PKSecureElement",&,N,V_secureElement
paymentWebServicesCoordinator
T@"PDPaymentWebServiceCoordinator",&,N,V_paymentWebServicesCoordinator
webServicesCoordinator
T@"PDWebServicesCoordinator",&,N,V_webServicesCoordinator
cardFileManager
T@"PDCardFileManager",&,N,V_cardFileManager
databaseManager
T@"PDDatabaseManager",&,N,V_databaseManager
expressPassManager
T@"PDExpressPassManager",&,N,V_expressPassManager
userNotificationManager
T@"PDUserNotificationManager",&,N,V_userNotificationManager
relevantPassProvider
T@"PDRelevantPassProvider",&,N,V_relevantPassProvider
usageNotificationServer
T@"PKUsageNotificationServer",&,N,V_usageNotificationServer
remoteInterfacePresenter
T@"PDRemoteInterfacePresenter",&,N,V_remoteInterfacePresenter
idsManager
T@"PKIDSManager",&,N,V_idsManager
spotlightIndexer
T@"PDSpotlightIndexer",&,N,V_spotlightIndexer
expressUpgradeController
T@"PDExpressTransitUpgradeController",&,N,V_expressUpgradeController
delegate
T@"<PDPassLibraryDelegate>",W,N,V_delegate
willSanitizePasses
TB,R,N
unique_id
download_retries_count
UPDATE %@ SET %@ = %@ + 1 WHERE %@ = '%@'
missing_remote_assets
v24@?0@"PDMissingRemoteAssetsPersistentStoreItem"8@16
v24@?0@"PKFeatureApplicationOfferDetails"8@16
ROWID
v32@?0@8@16^B24
B8@?0
+[%@ databaseTable] not implemented
%@.%@
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
v16@?0^{sqlite3_stmt=}8
SELECT 
 FROM 
 WHERE 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT INTO %@ (%@) SELECT 
 FROM %@ WHERE %@ = ?;
INSERT OR REPLACE INTO 
) VALUES (?
DELETE FROM %@ WHERE %@ = ?;
database
T@"SQLiteDatabase",R,N,V_database
persistentID
Tq,R,N,V_persistentID
existsInDatabase
cantaloupes
jackfruits
avocados
v24@?0@"PKAccountRewards"8@16
NotificationServiceTasks
v24@?0@"PKPass"8^B16
v24@?0@"PDNotificationService"8^B16
v32@?0@"NSError"8Q16^B24
B16@?0@8
pushToken
accountHash
v24@?0@"PKPaymentApplication"8^B16
dpanIdentifiers
v24@?0@"NSData"8@"PKSecureElementSignatureInfo"16
transactionDate
messageDate
dpanIdentifier
fpanIdentifier
v32@?0@"NSDictionary"8Q16^B24
Never Registered
Registered
Unregistered
invalidated
completion
property
T@"NSString",R,N,V_property
(%@ = ?)
(%@ != ?)
(%@ > ?)
(%@ >= ?)
(%@ < ?)
(%@ <= ?)
(%@ & ?)
(NOT %@ & ?)
comparisonType
Tq,R,N,V_comparisonType
value
T@,R,N,V_value
forceFalse
TB,R,N,V_forceFalse
 NOT IN (
 IN (
negative
TB,R,N,GisNegative,V_negative
query
T@"SQLiteQuery",R,N,V_query
queryProperty
T@"NSString",R,N,V_queryProperty
values
T@"NSArray",R,N,V_values
(%@ %@)
IS NULL
IS NOT NULL
matchesNull
TB,R,N,V_matchesNull
(%d)
booleanValue
TB,R,N,V_booleanValue
 AND 
 OR 
NOT 
predicates
T@"NSArray",R,N,V_predicates
((SELECT 1 FROM %@
 WHERE %@ = %@ LIMIT 1) IS NOT NULL)
 GLOB 
'%@'
T@"NSString",R,V_property
pattern
T@"NSString",R,V_pattern
DESC
v32@?0q8Q16^B24
CREATE TEMPORARY TABLE 
 AS 
T@"SQLiteDatabase",R
queryDescriptor
T@"SQLiteQueryDescriptor",R
countOfEntities
Tq,R
DISTINCT 
 FROM %@
 ORDER BY 
 LIMIT ?
entityClass
T#,N,V_entityClass
limitCount
Tq,N,V_limitCount
orderingDirections
T@"NSArray",C,N,V_orderingDirections
orderingProperties
T@"NSArray",C,N,V_orderingProperties
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
predicate
T@"SQLitePredicate",C,N,V_predicate
%@(%@)
serial_number
sequence_counter
authentication_token
organization_name
relevant_date
expiration_date
voided
revoked
has_stored_value
has_live_rendered_background
user_info
pass_flavor
card_type
primary_account_identifier
primary_account_suffix
sanitized_pan
supports_fpan_notifications
supports_dpan_notifications
supports_default_card_selection
supports_serial_number_based_provisioning
requires_transfer_serial_number_based_provisioning
payment_option_selectable
cobranded
issuer_country_code
has_associated_peer_payment_account
is_cloud_kit_archived
template
background_color
secondary_background_color
foreground_color
label_color
strip_color
tall_code
has_background_image
has_strip_image
manifest_hash
push_registration_status
push_registration_date
last_modified_tag
ingested_date
modified_date
modified_source
share_count
sharing_method
sharing_url
sharing_text
pass_type_pid
web_service_pid
pass_type.identifier
pass_type.identifier_hash
pass_type.team_identifier
web_service.service_url
associated_pass_type_identifier.identifier_hash
nfc.message
payment_application.aid
payment_application.seid
payment_application.state
payment_application.payment_network_identifier
payment_application.supports_in_app_payment
payment_application.payment_type
payment_application.applet_data_format
payment_automatic_selection_criterion_tci.tci
grouping_id
group_pid
pass_group.group_order
pass_transaction_service_pid
pass_message_service_pid
pass_default_payment_application_pid
pass_notification_service.notification_service_pid
pass
JOIN pass_type ON pass_type.pid = pass.pass_type_pid
LEFT OUTER JOIN web_service ON web_service.pid = pass.web_service_pid
JOIN pass_group ON pass_group.pid = pass.group_pid
JOIN payment_application ON payment_application.pass_pid = pass.pid
JOIN payment_automatic_selection_criterion ON payment_automatic_selection_criterion.payment_application_pid = payment_application.pid JOIN payment_automatic_selection_criterion_tci ON payment_automatic_selection_criterion_tci.payment_automatic_selection_criterion_pid = payment_automatic_selection_criterion.pid
JOIN pass_notification_service ON pass_notification_service.pid = pass_transaction_service_pid OR pass_notification_service.pid = pass_message_service_pid
LEFT OUTER JOIN nfc ON nfc.pass_pid = pass.pid
JOIN associated_pass_type_identifier ON associated_pass_type_identifier.pass_pid = pass.pid
v24@?0@"PKPass"8@16
v24@?0@"PKPassDisplayProfile"8@16
v24@?0@"PDPassUpdateContext"8@16
v24@?0@"PDPassGroupingProfile"8@16
com.apple.passd.felicaStateManager.session
passUniqueIdentifier
T@"NSString",C,N,V_passUniqueIdentifier
secureElementIdentifier
T@"NSString",C,N,V_secureElementIdentifier
paymentApplicationIdentifier
T@"NSString",C,N,V_paymentApplicationIdentifier
expressState
T@"PKExpressTransactionState",&,N,V_expressState
forceTransactionGeneration
TB,N,V_forceTransactionGeneration
T@"NSDate",C,N,V_transactionDate
recoverMissingTransactions
TB,N,V_recoverMissingTransactions
com.apple.passd.felicaStateManager
v24@?0@"NSArray"8@"PKTransitAppletState"16
B32@?0@"PDTransitStateFetchRequest"8Q16^B24
0000
v16@?0@"NSData"8
v24@?0@"MKLocalSearchResponse"8@"NSError"16
Object
UserInfo
T@"<PDTransitStateManagerDelegate>",W,N,V_delegate
_MKLocalSearchExternalTransitLookupParameters
/System/Library/Frameworks/MapKit.framework/MapKit
MKLocalSearchRequest
MKLocalSearch
payment_application_pid
network_order
payment_transit_network_identifier
plum
v24@?0@"PKAccountAdditionalPushTopics"8@16
latitude
longitude
max_distance
altitude
name
relevant_text
location_source_pid
pass.pid
location_source.type
pass_location_source.pass_pid
location
JOIN location_source ON location.location_source_pid = location_source.pid LEFT JOIN pass_location_source ON pass_location_source.location_source_pid = location_source.pid JOIN pass ON pass_location_source.pass_pid = pass.pid
JOIN location_source ON location.location_source_pid = location_source.pid LEFT JOIN pass_location_source ON pass_location_source.location_source_pid = location_source.pid 
location_index
location_pid
v24@?0@"PKLocation"8@16
pass_pid
balance_identifier
threshold
enabled
pass.unique_id
JOIN pass ON pass.pid = balance_reminder.pass_pid
balance_reminder
v24@?0@"PKPaymentBalanceReminder"8@16
PDRelevantPassProvider
RelevanceExpiration
RelevantTearDownFence
com.apple.passd.relevancy
passes
RelevantCardSetup
RelevantCardSearch
find relevant cards
passd-circular
passd-%@
opportunistic
eager
LocationSearch
CLLocationManager cache
Good enough
This will have to do
Expired Search Timer
BeaconSearch
%ld:%@
update relevant cards
nearby-pass-search
v32@?0@"CLBeacon"8Q16^B24
q24@?0@"PKBeacon"8@"PKBeacon"16
uniqueIDs
seedIndex
manifestHashes
useContactlessInterface
PassesLockScreenPlugin
_State
CLLocationManager Delegate
T@"<PDRelevantPassProviderDelegate>",W,N,V_delegate
currentRelevantPassInfo
T@"NSArray",R,N
NEARBY
LastLocation.archive
timestamp
beacons
LastBeacons.archive
predicate_format
v24@?0@"PKRule"8@16
rule
com.apple.passd.pdexpresstransitupgradecontroller.assertionqueue
Pass Upgrade Request
B16@?0q8
v20@?0B8@"NSSet"12
v24@?0@"NSError"8@"PKPaymentPass"16
TRANSIT_MARKET_NOTIFICATION_TITLE
TRANSIT_OPEN_LOOP_EXPRESS_MESSAGE_FORMAT
blueberries
v24@?0@"PKAccountVirtualCardStatusUpdate"8@16
PDCardFileManager
RevocationCheck
CacheMaintenance
PDCardFileManagerMissingRemoteAssetsClientActivityIdentifier
PDCardFileManagerMissingRemoteAssetsActivityIdentifier
com.apple.fsevents.matching
Card File Manager - Invalid Pass
GetImageSet
WrittenCardRevocationCheck
nukeCards
cache
archive
REVOKED
not revoked
v16@?0B8B12
Ubiquity
Downlad missing assets
v24@?0@"PDMissingRemoteAssetsPersistentStoreItem"8@?<v@?>16
v24@?0@"NSData"8@"NSError"16
v24@?0@"PKRemoteAssetManifestItem"8@?<v@?>16
cards-access-queue
BadLocalPasses
{Failed to create directory=%@}
currentRegion
deviceLanguage
isApplePayActive
defaultCreditAccountSetupFeatureState
hasDefaultCreditAccount
defaultCreditAccountState
defaultCreditAccountLifetimeRewards
defaultCreditAccountHasPhysicalCard
defaultCreditAccountHasVirtualCard
defaultCreditAccountRequiresDebtCollectionNotices
defaultCreditAccountBalanceStatus
defaultCreditAccountCyclesPastDue
defaultCreditAccountAvailableCredit
defaultCreditAccountSupportsShowNotifications
defaultCreditAccountPassIsDefault
defaultCreditAccountDaysSinceLastTransaction
defaultCreditAccountHasInStoreTransaction
defaultCreditAccountHasInAppTransaction
defaultCreditAccountHasWebTransaction
defaultCreditAccountHasVirtualCardTransaction
defaultCreditAccountHasPhysicalCardTransaction
defaultCreditAccountDaysSinceCreatedDate
hasPeerPaymentAccount
peerPaymentAccountState
peerPaymentAccountStage
peerPaymentAccountHasTransaction
peerPaymentAccountHasBalance
v32@?0@"PKPaymentSetupFeature"8Q16^B24
<%@: %p; 
%@: '%@'; 
%@: '%ld'; 
T@"NSString",R,N
applePayActive
TB,R,N,GisApplePayActive
Tq,R,N
T@"NSDecimalNumber",R,N
paymentDate
lychees
v24@?0@"PKAccountPayment"8@16
push_topic
push_token
service_type
service_url
registration_url
app_launch_token
device_identifier
last_updated_date
last_updated_tag
last_updated_tag_date
notification_service
v24@?0@"PDNotificationService"8@16
locality
currencyCode
amount
daysAgoOffset
category
locationLatitude
locationLongitude
com.apple.passd.databasemanager.paymenttransactions
com.apple.passd.databasemanager.delegate
@16@?0@"NSData"8
v24@?0@"NSString"8^B16
v32@?0@"NSData"8@"NSString"16^B24
isValid == YES
month
year
SELECT STRFTIME('%%s',DATETIME(transaction_date + %ld, 'unixepoch', 'localtime', 'start of %@')) as period, COUNT(*) FROM payment_transaction WHERE pass_pid = ? AND has_notification_service_data = 1 AND currency_code = ? AND ac != ? GROUP BY period ORDER BY period DESC
SELECT STRFTIME('%%s',DATETIME(transaction_date + %ld, 'unixepoch', 'localtime', 'start of %@')) as period, SUM(amount) FROM payment_transaction WHERE pass_pid = ? AND has_notification_service_data = 1 AND transaction_type = ? AND transaction_status IN (?, ?, ?) AND amount != ? AND amount != ? AND currency_code = ? GROUP BY period ORDER BY period DESC
q24@?0@"PKPaymentTransactionGroup"8@"PKPaymentTransactionGroup"16
Demo
StoreDemoTransactions
counterpartHandle
brand
merchant
source
city
state
phoneNumber
merchantURL
detailedCategory
heroImageURL
heroImageProvider
logoURL
v32@?0@"NSString"8@"NSDictionary"16^B24
serialNumber == %@
0000000000000000%016d
counterpartIdentifier
memo
type
merchantIdentifier
FelicaAppletHistory.plist
B32@?0@"PKPaymentTransaction"8Q16^B24
@"NSDictionary"16@?0@"PKPaymentTransaction"8
q24@?0@8@16
v32@?0@"PKDiscoveryItem"8Q16^B24
v32@?0@"PKDiscoveryEngagementMessage"8Q16^B24
cloudStoreCoordinator
T@"PDCloudStoreNotificationCoordinator",W,N,V_cloudStoreCoordinator
T@"SQLiteDatabase",R,&,N,V_database
objectSettingsManager
T@"PDObjectSettingsManager",&,N,V_objectSettingsManager
T@"<PDDatabaseManagerDelegate>",W,N,V_delegate
webServicesDelegate
T@"<PDDatabaseManagerWebServicesDelegate>",W,N,V_webServicesDelegate
paymentServicesDelegate
T@"<PDDatabaseManagerPaymentServicesDelegate>",W,N,V_paymentServicesDelegate
notificationServicesDelegate
T@"<PDDatabaseManagerNotificationServicesDelegate>",W,N,V_notificationServicesDelegate
shouldSyncTransactionsToCloudStore
TB,N,V_shouldSyncTransactionsToCloudStore
oranges
v24@?0@"PKCreditAccountSummary"8@16
expressInformation
T@"PKExpressPassInformation",&,N,V_expressInformation
credential
T@"NSData",C,N,V_credential
T@?,C,N,V_completion
cardTypeToRemove
Tq,N,V_cardTypeToRemove
cardTypeRemovalCompletion
T@?,C,N,V_cardTypeRemovalCompletion
com.apple.passd.expressPassManager
com.apple.passd.expressPassManager.reply
com.apple.BiometricKit.lockoutStateChanged
v12@?0i8
v16@?0@"<PDExpressPassManagerObserver>"8
v32@?0@"NSString"8@"PKExpressPassInformation"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
pineapples
v24@?0@"PKCreditAccountStatement"8@16
payment_automatic_selection_criterion_pid
is_primary
payment_automatic_selection_criterion_tci
PDNetworkTaskManagerActivateEligibleTasksActivityIdentifier
%@_v%lu
PDNetworkTaskManager.%@
v32@?0@"PDNetworkTask"8Q16^B24
ActiveTasks
AssertType
NetworkClientActive
AssertLevel
AssertName
TimeoutSeconds
Archive Tasks
scheduled
enqueued
PDTaskErrorDomain
PDTaskWarningDomain
nextStartDate
creationDate
canRequestReauthentication
nextBackoffLevel
nextBackoffIteration
supportsSecureCoding
TB,R
manager
T@"<PDNetworkTaskManagerProtocol>",N,V_manager
TB,N,V_canRequestReauthentication
isValid
TB,N,V_isValid
T@"NSDate",&,N,V_creationDate
T@"NSDate",&,N,V_nextStartDate
v24@?0@"NSHTTPURLResponse"8@"NSData"16
Connection received non-http URL response
Connection received response data in excess of %g megabyte limit
%@ encountered error: %@
%@ warning: %@
successHandler
T@?,C,V_successHandler
failureHandler
T@?,C,V_failureHandler
request
T@"NSURLRequest",&,N,V_request
PDWebServicesCoordinator
UpdatePassTypeIdentifier.
WebServiceTasks
v24@?0@"PDWebService"8^B16
v24@?0@"PDPassUpdateContext"8^B16
T@"PDDatabaseManager",R,N,V_databaseManager
taskManager
T@"PDNetworkTaskManager",R,N,V_taskManager
UbiquitousCards
CatalogOfRecord.plist
ubiquityManager
ubiquityManager.access
UbiquityStartup
is NOT
AddUbiquitousCard
v16@?0@"NSURL"8
RemoveUbiquitousCard
UpdateUbiquitousCatalog
v24@?0@"NSURL"8@"NSURL"16
UbiquityMerge
UbiquitySubItemChange
presentedItemURL
T@"NSURL",R,C
presentedItemOperationQueue
T@"NSOperationQueue",R,&
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
T@"NSSet",R
ubiquitousURL
T@"NSURL",&,V_ubiquitousURL
T@"<PDUbiquityManagerDelegate>",N,V_delegate
BadUbiquitousPasses
PDRemoteInterfacePresentationPreheat
T@"NSString",R,C,N,V_passUniqueIdentifier
fieldProperties
T@"PKFieldProperties",R,N,V_fieldProperties
Tq,R,N,V_source
<%@: %p; interface: %@; sbsHandle: %p>
interfaceType
TQ,R,N,V_interfaceType
SBSHandle
T@"SBSRemoteAlertHandle",R,N,V_SBSHandle
activationHandler
T@?,C,N,V_activationHandler
deactivationHandler
T@?,C,N,V_deactivationHandler
willStartHandler
T@?,C,N,V_willStartHandler
didEndHandler
T@?,C,N,V_didEndHandler
active
TB,N,V_active
com.apple.passd.remoteinterfacepresenter
v16@?0@"NSDictionary"8
Active
Inactive
paymentRequest
hostIdentifier
hostLocalizedAppName
hostBundleIdentifier
hostApplicationIdentifier
hostTeamID
PKPaymentAuthorizationRemoteAlertViewController
IN_APP_PAYMENT_ERROR_INTERFACE_ACTIVATION_FAILED
PKPeerPaymentIdentityVerificationRemoteAlertViewController
account
currency
senderAddress
PKPeerPaymentRegistrationRemoteAlertViewController
termsURL
termsIdentifier
passUniqueID
PKPeerPaymentTermsAndConditionsRemoteAlertViewController
REMOTE_SETUP_ALERT_BODY
REMOTE_SETUP_ALERT_BODY_NO_APP_NAME
REMOTE_SETUP_ALERT_TITLE
REMOTE_SETUP_ALERT_ADD
REMOTE_SETUP_ALERT_CLOSE
paymentSetupRequest
PKPaymentSetupRemoteAlertViewController
Setup Assistant has not completed
Interface is currently active
SpringBoard is not ready
Lost Mode is active
Protected Data is not available
Near Field Radio is not available
Secure Element does not exist
Contactless passes are not available
Wallet is not visible
Passbook is Foregrounded
Secure Element in fail forward
Device is locked
Cannot Present Remote Interface of type: %@ for the following reason(s): %@
contactless_interface
.%ld
Lockscreen Contactless Interface
v16@?0@"SBSAssertion"8
v20@?0B8@"PDRemoteAlertHandle"12
v12@?0C8
remotePaymentRequest
PKContinuityPaymentRemoteAlertViewController
Lockscreen Continuity Payment Interface
PKPaymentRemoteAlertViewController
Contactless Interface Presentation
v32@?0@"<PDRemoteInterfacePresenterObserver>"8Q16^B24
Payment Interface Launch Assertion
Payment Interface Boost Assertion
PreventUserIdleSystemSleep
Wallet Remote Interface
fieldDetector
T@"PKFieldDetector",R,N,V_fieldDetector
notificationStreamManager
T@"PDNotificationStreamManager",R,N,V_notificationStreamManager
assertionManager
T@"PDAssertionManager",R,N,V_assertionManager
T@"PDExpressPassManager",&,V_expressPassManager
PDRemoteInterfaceTypeContactless
PDRemoteInterfaceTypeInAppPayment
PDRemoteInterfaceTypeContinuityPayment
PDRemoteInterfaceTypeCardOnFilePayment
PDRemoteInterfaceTypePeerPaymentIdentityVerification
PDRemoteInterfaceTypePeerPaymentRegistration
PDRemoteInterfaceTypePeerPaymentTermsAndConditions
PDRemoteInterfaceTypePaymentSetup
com.apple.springboard.finishedstartup
BYSetupAssistantHasCompletedInitialRun
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
raspberries.b
blackberries.b
pears
JOIN clementines ON clementines.a = pears.pid JOIN raspberries ON raspberries.a = clementines.pid
JOIN clementines ON clementines.a = pears.pid JOIN blackberries ON blackberries.a = clementines.pid
v24@?0@"PKAccount"8@16
PassUpgradeAddPass
v24@?0@"PKPaymentPass"8@?<v@?@"NSError">16
PassUpgrade
cucumbers
v24@?0@"PKCreditAccountRates"8@16
version
status
rule_identifier
triggers
layout_url
supported_localizations
os_version_requirement_range
relevant_date_range_start_date
relevant_date_range_end_date
item_order
view_count
max_view_count
should_badge
discovery_item
v24@?0@"PKDiscoveryItem"8@16
v24@?0@"DiscoveryItem"8@16
itemOrder
TQ,N,V_itemOrder
stage
country_code
current_balance_amount
maximum_balance_amount
current_balance_currency
identity_verification_required
account_state_dirty
proactive_fetch_period
terms_acceptance_required
terms_identifier
terms_url
pending_payment_count
identity_verification_for_disbursements_required
associated_pass_url
associated_pass_serial_number
associated_pass_type_identifier
peer_payment_account
JOIN pass ON pass.pid = peer_payment_account.pass_pid
v24@?0@"PKPeerPaymentAccount"8@16
v24@?0@"NSSet"8@"NSError"16
-[PDAccountService virtualCardsInKeychainWithCompletion:]_block_invoke
-[PDAccountService virtualCardsInKeychainWithCompletion:]
-[PDAccountService writeVirtualCardToKeychain:completion:]
<%@:%p> uniqueID:%@ downloadRetriesCount:%lu
T@"NSString",C,N,V_uniqueID
downloadRetriesCount
TQ,N,V_downloadRetriesCount
last_deletion_date
tag_last_update_date
web_service
JOIN pass_type ON pass_type.pid = web_service.pass_type_pid
v24@?0@"PDWebService"8@16
1234567890
virtualCard
T@"PKVirtualCard",C,N,V_virtualCard
authorization
T@"NSData",C,N,V_authorization
com.apple.passd.accountmanager.work
com.apple.passd.accountmanager.reply
-[PDAccountManager _paymentWebServiceContextChanged]_block_invoke
v24@?0@"NSArray"8@"NSError"16
v16@?0@"PKApplePayTrustSession"8
v16@?0@"<PDAccountManagerObserver>"8
v24@?0@"CNContact"8@"NSError"16
v16@?0@"PDPassPaymentDailyDailyCashUserNotification"8
America/New_York
paymentpass.com.apple.wallet.dev
00001111122223333444332211113344321
John Appleseed
1234
03/24
10000.00
8317.45
1682.55
1243.45
25.00
5317.45
1576.16
10.00
20.00
.1824
0.01
100000
com.apple.creditservices
ACCOUNT_SERVICE_DISPLAY_NAME
v24@?0@"PKAccountWebServiceAccountsResponse"8@"NSError"16
v16@?0@"PKPaymentWebService"8
Missing Account URL/Topic
v24@?0@"PKAccountWebServiceAccountResponse"8@"NSError"16
v24@?0@"PKAccountWebServiceAccountDeleteResponse"8@"NSError"16
v24@?0@"PKAccountWebServiceTermsResponse"8@"NSError"16
v24@?0@"PKAccountWebServicePreferencesResponse"8@"NSError"16
v24@?0@"PKAccountWebServiceResponse"8@"NSError"16
v24@?0@"PKAccountWebServiceAccountUserInfoResponse"8@"NSError"16
John
Appleseed
1 Apple Park Way
Cupertino
95014
v24@?0@"PKAccountWebServiceStatementsResponse"8@"NSError"16
v24@?0@"PKAccountWebServiceVirtualCardResponse"8@"NSError"16
v16@?0@"PKPaymentHardwareStatus"8
v16@?0@"PKAccountWebServiceVirtualCardManageRequest"8
v24@?0@"PKAccountWebServiceVirtualCardListResponse"8@"NSError"16
v32@?0@"PKVirtualCard"8@"PKAccount"16@"NSError"24
v32@?0@"NSData"8^{__SecKey=}16@"NSError"24
v24@?0^{__SecKey=}8@"NSError"16
PDAccountManager could not save the virtual card's last AutoFilled date because no matching virtual card was found
v24@?0@"PKPhysicalCard"8@"PKAccount"16
v32@?0@"PKApplePayTrustHashResponse"8@"PKAccountWebServiceRequestPhysicalCardResponse"16@"NSError"24
v24@?0@"PKAccountWebServiceRequestPhysicalCardResponse"8@"NSError"16
v24@?0@"NSSet"8@"PKAccount"16
v32@?0@"PKApplePayTrustHashResponse"8@"PKAccountWebServicePhysicalCardActionResponse"16@"NSError"24
v24@?0@"PKAccountWebServicePhysicalCardActionResponse"8@"NSError"16
v16@?0@"PKPhysicalCard"8
wallet://activate/nfc
v48@?0@"PKApplePayTrustSignatureRequest"8@"PKAccountWebServicePhysicalCardActionRequest"16@"NSSet"24@"PKAccount"32@"NSError"40
v24@?0@"PKAccountWebServicePaymentsResponse"8@"NSError"16
com.apple.account.service
v32@?0@"NSString"8@"NSArray"16^B24
v24@?0@"PKAccount"8@"NSError"16
notificationIdentifier
customActionRoute
customActionQueryParameters
customActionTitle
date
insertionRequirements
suppressionBehavior
allowPresentationOverPass
reissueBannerOnUpdate
suppressed
playsSound
title
message
passDiffs
paymentTransaction
transitBalance
transitCurrencyCode
currentBalanceAmount
currentBalanceCurrency
reminderAmount
reminderCurrency
balanceIdentifier
expirationDate
currentBalance
paymentTransactionQuestion
accountEvent
accountFeatureIdentifier
spendingSummaryType
spendingRewards
spendingTotal
suspendedAccount
debtCollectionNotices
useGenericMessaging
accountState
messageString
preventAutomaticDismissal
components
periodAmount
firstDailCash
hasRedemptions
PDUserNotificationTypeWallet
PDUserNotificationTypeWalletValueAddedServiceTransaction
PDUserNotificationTypePassUpdate
PKPaymentTransactionNotificationCategory
PDUserNotificationTypePassTransitRelevancy
PDUserNotificationTypeAccountPaymentDue
[%@ Notification Identifier: %@, Pass Identifier: %@, Date: %@, Active: %@, Suppressed: %@, Suppression Behavior: %@]
prefs:root=PASSBOOK
%@%@%@
%@&path=%@%@
v32@?0@"NSString"8@"NSString"16^B24
valid
TB,R,N,GisValid
TB,N,GisActive,V_active
TB,N,GisSuppressed,V_suppressed
TQ,N,V_insertionRequirements
TQ,N,V_suppressionBehavior
TB,N,V_allowPresentationOverPass
TB,N,V_reissueBannerOnUpdate
notificationType
TQ,R,N
TB,N,V_playsSound
T@"NSString",R,N,V_passUniqueIdentifier
T@"NSString",C,N,V_notificationIdentifier
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_customActionRoute
customActionVerb
T@"NSString",C,N,V_customActionVerb
T@"NSDictionary",C,N,V_customActionQueryParameters
T@"NSString",C,N,V_customActionTitle
[%@ Title: %@, Message: %@]
T@"NSString",R,N,V_title
T@"NSString",R,N,V_message
VAS_PASS_ADD_UPGRADE_TITLE
VAS_PASS_ADD_UPGRADE_MESSAGE
T@"NSString",R,N,V_merchantIdentifier
%@-diff %@
v48@?0@"NSString"8@16@24@"NSString"32^B40
shoebox
primaryPassDiff
T@"PKDiff",R,N
T@"NSArray",R,N,V_passDiffs
PEER_PAYMENT_TRANSACTION_TRANSFER_TO_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_TRANSFER_TO_CARD_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_TRANSFER_TO_BANK_NOTIFICATION_TITLE
TRANSACTION_TYPE_FEE
TRANSACTION_TYPE_INTEREST_CHARGE
PAYMENT_TRANSACTION_REFUNDED
PAYMENT_TRANSACTION_DECLINED
PAYMENT_TRANSACTION_REFUND
T@"PKPaymentTransaction",R,N,V_paymentTransaction
TRANSIT_TRANSACTION_TITLE_METRO
TRANSIT_TRANSACTION_TITLE_LIGHT_RAIL
TRANSIT_TRANSACTION_TITLE_TRAIN
TRANSIT_TRANSACTION_TITLE_BUS
TRANSIT_TRANSACTION_TITLE_MAGLEV
TRANSIT_TRANSACTION_TITLE_TAXI
TRANSIT_TRANSACTION_TITLE_FERRY
TRANSIT_TRANSACTION_TITLE_BIKE
SHINKANSEN_TRANSACTION_NOTIFICATION_TITLE
GREEN_CAR_TRANSACTION_NOTIFICATION_TITLE
TRANSIT_TRANSACTION_TITLE_PURCHASE
TRANSIT_TRANSACTION_TITLE_REFUND
TRANSIT_TRANSACTION_TITLE_CARD_READ
TRANSIT_TRANSACTION_TITLE_TRANSIT
METRO_TRANSACTION_NOTIFICATION_TITLE_FORMAT
LIGHT_RAIL_TRANSACTION_NOTIFICATION_TITLE_FORMAT
TRAIN_TRANSACTION_NOTIFICATION_TITLE_FORMAT
BUS_TRANSACTION_NOTIFICATION_TITLE_FORMAT
MAGLEV_TRANSACTION_NOTIFICATION_TITLE_FORMAT
TAXI_TRANSACTION_NOTIFICATION_TITLE_FORMAT
FERRY_TRANSACTION_NOTIFICATION_TITLE_FORMAT
BIKE_TRANSACTION_NOTIFICATION_TITLE_FORMAT
SHINKANSEN_TRANSACTION_AMOUNT_NOTIFICATION_FORMAT
GREEN_CAR_TRANSACTION_AMOUNT_NOTIFICATION_FORMAT
DEPOSIT_TRANSACTION_NOTIFICATION_TITLE_FORMAT
WITHDRAWAL_TRANSACTION_NOTIFICATION_TITLE_FORMAT
REFUND_TRANSACTION_NOTIFICATION_TITLE_FORMAT
PURCHASE_TRANSACTION_NOTIFICATION_TITLE_FORMAT
TRANSIT_TRANSACTION_NOTIFICATION_TITLE_FORMAT
TRANSIT_ENROUTE_TRANSACTION_NOTIFICATION_TITLE
TRANSIT_NOTIFICATION_NEW_BALANCE_FORMAT
TRANSIT_NOTIFICATION_CURRENT_BALANCE_FORMAT
T@"NSDecimalNumber",R,N,V_transitBalance
transitBalanceCurrencyCode
T@"NSString",R,N,V_transitBalanceCurrencyCode
-LowBalance
LOW_BALANCE_REMINDER_NOTIFICATION_TITLE
LOW_BALANCE_REMINDER_NOTIFICATION_MESSAGE
T@"NSDecimalNumber",R,N,V_currentBalanceAmount
T@"NSString",R,N,V_currentBalanceCurrency
T@"NSDecimalNumber",R,N,V_reminderAmount
T@"NSString",R,N,V_reminderCurrency
T@"NSString",R,N,V_balanceIdentifier
-CommutePlanRenewal
COMMUTE_PLAN_RENEWAL_REMINDER_NOTIFICATION_TITLE
COMMUTE_PLAN_RENEWAL_REMINDER_NOTIFICATION_MESSAGE
T@"NSDate",R,N,V_expirationDate
%@-%@-%@
PEER_PAYMENT_TRANSACTION_ACCEPTED_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_ACCEPTED_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_EXPIRED_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_EXPIRED_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_REJECTED_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_REJECTED_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_ONE_HOUR_REMINDER_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_ONE_DAY_REMINDER_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_ONE_HOUR_REMINDER_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_ONE_DAY_REMINDER_NOTIFICATION_MESSAGE
reminderPeriod
TQ,R,N,V_reminderPeriod
PEER_PAYMENT_TRANSACTION_DECLINED_NOTIFICATION_TITLE
PEER_PAYMENT_TRANSACTION_DECLINED_WRONG_PIN_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_DECLINED_INSUFFICIENT_BALANCE_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_DECLINED_VERIFY_IDENTITY_NOTIFICATION_MESSAGE
PEER_PAYMENT_TRANSACTION_DECLINED_GENERIC_NOTIFICATION_MESSAGE
PDBalanceReminderUserNotification-%@
PEER_PAYMENT_BALANCE_REMINDER_NOTIFICATION_TITLE
PEER_PAYMENT_BALANCE_REMINDER_NOTIFICATION_MESSAGE
T@"PKCurrencyAmount",R,N,V_currentBalance
accountStateChange
ACCOUNT_NOTIFICATION_IMPORTANT_UPDATE_TITLE
ACCOUNT_NOTIFICATION_IMPORTANT_UPDATE_MESSAGE_IPAD
ACCOUNT_NOTIFICATION_IMPORTANT_UPDATE_MESSAGE
TQ,R,N,V_accountState
featureIdentifier
TQ,R,N,V_featureIdentifier
requiresDebtCollectionNotices
TB,R,N,V_requiresDebtCollectionNotices
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_TITLE
MMM d
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_REMAINING_MINIMUM_PAYMENT_TOMORROW_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_MINIMUM_PAYMENT_TOMORROW_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_REMAINING_MINIMUM_PAYMENT_7_DAYS_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_MINIMUM_PAYMENT_7_DAYS_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_REMAINING_STATEMENT_BALANCE_TOMORROW_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_STATEMENT_BALANCE_TOMORROW_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_REMAINING_STATEMENT_BALANCE_7_DAYS_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_STATEMENT_BALANCE_7_DAYS_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_DEFAULT_PAYMENT_TOMORROW_BODY_FORMAT
ACCOUNT_SERVICE_PAYMENT_SCHEDULED_NOTIFICATION_DEFAULT_PAYMENT_7_DAYS_BODY_FORMAT
T@"NSString",R,N,V_messageString
ACCOUNT_SERVICE_PAYMENT_GENERIC_ACCOUNT_STATUS_NOTIFICATION_TITLE
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_TITLE
ACCOUNT_SERVICE_PAYMENT_GENERIC_ACCOUNT_STATUS_NOTIFICATION_BODY_IPAD
ACCOUNT_SERVICE_PAYMENT_GENERIC_ACCOUNT_STATUS_NOTIFICATION_BODY
hh:mm a
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_TODAY_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_TOMORROW_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_TODAY_BODY_REVOLVER_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_TOMORROW_BODY_REVOLVER_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_1_DAY_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_1_DAY_BODY_REVOLVER_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_7_DAYS_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_MINIMUM_PAYMENT_7_DAYS_BODY_REVOLVER_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_TODAY_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_TODAY_BODY_REVOLVER_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_TOMORROW_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_TOMORROW_BODY_REVOLVER_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_1_DAY_BODY_TRANSACTOR_TEXT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_1_DAY_BODY_REVOLVER_TEXT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_7_DAYS_BODY_TRANSACTOR_FORMAT
ACCOUNT_SERVICE_PAYMENT_REMINDER_NOTIFICATION_STATEMENT_BALANCE_7_DAYS_BODY_REVOLVER_FORMAT
TB,R,N,V_useGenericMessaging
TB,N,V_preventAutomaticDismissal
ACCOUNT_NOTIFICATION_DISPUTE_UPDATE_TITLE
ACCOUNT_NOTIFICATION_PAYMENT_POSTED_TITLE
ACCOUNT_SERVICE_PHYSICAL_CARD_FIX_ADDRESS_EVENT
ACCOUNT_SERVICE_PHYSICAL_CARD_ERROR_EVENT
ACCOUNT_SERVICE_PHYSICAL_CARD_SHIPPED_EVENT
ACCOUNT_SERVICE_PHYSICAL_CARD_OUT_FOR_DELIVERY_EVENT
ACCOUNT_SERVICE_PHYSICAL_CARD_DELIVERED_EVENT
ACCOUNT_SERVICE_PHYSICAL_CARD_DELIVERY_EXCEPTION_EVENT
ACCOUNT_NOTIFICATION_DISPUTE_UPDATE_MESSAGE
ACCOUNT_NOTIFICATION_PAYMENT_POSTED_MESSAGE
ACCOUNT_NOTIFICATION_PAYMENT_POSTED_MESSAGE_NO_AMOUNT
ACCOUNT_SERVICE_PHYSICAL_CARD_FIX_ADDRESS_EVENT_DETAIL
ACCOUNT_SERVICE_PHYSICAL_CARD_GENERIC_ERROR_DETAIL
ACCOUNT_SERVICE_PHYSICAL_CARD_SHIPPED_EVENT_DETAIL
ACCOUNT_SERVICE_PHYSICAL_CARD_SHIPPED_EVENT_DETAIL_NO_DATE
ACCOUNT_SERVICE_PHYSICAL_CARD_DELIVERED_EVENT_DETAIL
ACCOUNT_SERVICE_PHYSICAL_CARD_OUT_FOR_DELIVERY_EVENT_DETAIL
ACCOUNT_SERVICE_PHYSICAL_CARD_DELIVERY_EXCEPTION_EVENT_DETAIL
T@"PKAccountEvent",R,N,V_accountEvent
fraud-%@
PAYMENT_TRANSACTION_QUESTION_NOTIFICATION_TITLE
PAYMENT_TRANSACTION_QUESTION_NOTIFICATION_MESSAGE_SUSPENDED
PAYMENT_TRANSACTION_QUESTION_NOTIFICATION_MESSAGE_ACTIVE
question
T@"PKPaymentTransactionQuestion",R,N,V_question
accountSuspended
TB,N,V_accountSuspended
spending-%lu-%lu
ACCOUNT_NOTIFICATION_SPENDING_SUMMARY_WEEK_MESSAGE
ACCOUNT_NOTIFICATION_SPENDING_SUMMARY_WEEK_MESSAGE_NO_REWARDS
ACCOUNT_NOTIFICATION_SPENDING_SUMMARY_MONTH_MESSAGE
ACCOUNT_NOTIFICATION_SPENDING_SUMMARY_MONTH_MESSAGE_NO_REWARDS
ACCOUNT_NOTIFICATION_SPENDING_SUMMARY_WEEK_TITLE
ACCOUNT_NOTIFICATION_SPENDING_SUMMARY_MONTH_TITLE
totalSpending
T@"PKCurrencyAmount",R,N,V_totalSpending
rewardsAccrued
T@"PKCurrencyAmount",R,N,V_rewardsAccrued
summaryType
TQ,R,N,V_summaryType
peerPaymentIdentityVerification
ACCOUNT_SERVICE_REWARDS_VERIFICATION_REQUIRED_TITLE
ACCOUNT_SERVICE_REWARDS_VERIFICATION_REQUIRED_MESSAGE
dailycash-%lu-%lu-%lu-%lu
ACCOUNT_SERVICE_DAILY_FIRST_DAILY_CASH_TITLE
ACCOUNT_SERVICE_DAILY_FIRST_DAILY_CASH_MESSAGE_APC
ACCOUNT_SERVICE_DAILY_FIRST_DAILY_CASH_MESSAGE
ACCOUNT_SERVICE_DAILY_DAILY_CASH_TITLE
MMMM
ACCOUNT_SERVICE_DAILY_DAILY_CASH_MESSAGE_MONTH
ACCOUNT_SERVICE_DAILY_DAILY_CASH_MESSAGE
dateComponents
T@"NSDateComponents",R,N,V_dateComponents
T@"PKCurrencyAmount",R,N,V_amount
T@"PKCurrencyAmount",R,N,V_periodAmount
TB,R,N,V_hasRedemptions
firstDailyCash
TB,N,V_firstDailyCash
%@-%@-promptDetailForVirtualCard
ACCOUNT_SERVICE_DIRECT_TO_VIRTUAL_CARD
accountIdentifier
T@"NSString",R,N,V_accountIdentifier
virtualCardIdentifier
T@"NSString",R,N,V_virtualCardIdentifier
PDUserNotificationSuppressionBehaviorIgnoreSuppression
PDUserNotificationSuppressionBehaviorPromoteWhenPossible
PDUserNotificationSuppressionBehaviorNeverPromote
ReminderOneHourAfter
ReminderOneDayBeforeExpiration
1-Day-Before
7-Days-Before
PaymentScheduled-%@-%@
Today
PaymentDue-%@-%@
PDWebServiceErrorDomain
<PassTypeID: %@> <URL: %@> <Push token: %@> <Device identifier: %@>
passTypeIdentifier
teamIdentifier
serviceURL
deviceIdentifier
T@"NSString",&,N,V_passTypeIdentifier
T@"NSString",&,N,V_teamIdentifier
T@"NSURL",&,N,V_serviceURL
T@"NSString",&,N,V_pushToken
T@"NSString",&,N,V_deviceIdentifier
serialNumber
authenticationToken
manifestHash
lastModifiedTag
lastModifiedDate
lastModifiedSource
Web service error for %@ (%@): %@
T@"NSString",&,N,V_passUniqueIdentifier
T@"NSString",&,N,V_serialNumber
T@"NSString",&,N,V_authenticationToken
T@"NSString",&,N,V_lastModifiedTag
T@"NSDate",&,N,V_lastModifiedDate
Tq,N,V_lastModifiedSource
T@"NSData",&,N,V_manifestHash
express_mode
payment_express_mode
userNotifications
v32@?0@"NSString"8@"PDUserNotification"16^B24
isActive == YES AND isSuppressed == YES AND suppressionBehavior == %ul
passUniqueIdentifier == %@ AND notificationType == %ul
@"NSString"16@?0@"PDUserNotification"8
passUniqueIdentifier == %@
v16@?0@"UNNotificationSettings"8
WALLET
TRANSACTION_USER_NOTIFICATION_TITLE_FORMAT
NOTIFICATION_SUMMARY_TRANSACTIONS
com.apple.Passbook
sectionInfo
sectionID
BLTWatchLegacyMap
5.9.9
@"NSString"16@?0@"UNNotification"8
isActive == YES
q24@?0@"PDUserNotification"8@"PDUserNotification"16
T@"<PDUserNotificationCenterDelegate>",W,N,V_delegate
processingQueue
T@"NSObject<OS_dispatch_queue>",N,V_processingQueue
iconStore
T@"PDUserNotificationIconStore",&,N,V_iconStore
existingLocalNotifications
T@"NSArray",R,C,N
PDUserNotificationCoalescingResultNone
PDUserNotificationCoalescingResultPartial
PDUserNotificationCoalescingResultComplete
PDUserNotificationTypeUnknown
PDUserNotificationTypePassPaymentTransaction
PDUserNotificationTypePassTransitTransaction
PDUserNotificationTypePassLowBalanceReminder
PDUserNotificationTypePassCommutePlanRenewalReminder
PDUserNotificationTypePeerPaymentTransactionAccepted
PDUserNotificationTypePeerPaymentTransactionExpired
PDUserNotificationTypePeerPaymentTransactionRejected
PDUserNotificationTypePeerPaymentTransactionReminder
PDUserNotificationTypePeerPaymentTransactionDeclined
PDUserNotificationTypePeerPaymentBalanceReminder
PDUserNotificationTypePassPaymentFraudTransaction
PDUserNotificationTypePassAccountEvent
PDUserNotificationTypePassSpendingSummary
PDUserNotificationTypePeerPaymentNeedsVerification
PDUserNotificationTypePassAccountState
PDUserNotificationTypeAccountPaymentScheduled
PDUserNotificationTypeDailyDailyCash
PDUserNotificationTypePromptForVirtualCardDetail
registration_status
notification_service_pid
pass_notification_service
v28@?0I8Q12@"NSObject<OS_xpc_object>"20
publisher
T@"NSObject<OS_xpc_event_publisher>",&,N,V_publisher
streamName
T@"NSString",&,N,V_streamName
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
pendingSendEvents
T@"NSMutableArray",&,N,V_pendingSendEvents
tokens
T@"NSMutableSet",&,N,V_tokens
receivedInitialBarrier
TB,N,V_receivedInitialBarrier
passUserNotificationCenters
walletUserNotificationCenter
PDWalletUserNotificationManager
com.apple.passd.usernotificationmanager
v32@?0@"NSString"8@"PDUserNotificationCenter"16^B24
v32@?0@"PDUserNotification"8Q16^B24
Notification: %@
Local fire date: %@
Title: %@
Body: %@
Archiving User Notifications
'Passes Exist'
'No Passes Exist'
'Payment Passes Exist'
'No Payment Passes Exist'
Demo Mode Active'
'No Demo Mode Active'
identifier_hash
team_identifier
last_push_date
last_update_date
push_frequency_score
pass.template
pass_type
JOIN pass ON pass_type.pid = pass.pass_type_pid
com.apple.passd.notificationmanager
Notification
tomatoes
v24@?0@"PKAccountServicingEvent"8@16
payment_transaction_identifier
shinkansen_ticket_active
balance_allowed_for_commute
low_balance_notification_enabled
green_car_ticket_used
history_sequence_number
balance
blacklisted
shinkansen_validity_start_date
shinkansen_validity_term
shinkansen_origin_station_code
shinkansen_destination_station_code
shinkansen_origin_station_string
shinkansen_destination_station_string
shinkansen_departure_time
shinkansen_arrival_time
shinkansen_train_name
shinkansen_car_number
shinkansen_seat_row
shinkansen_seat_number
shinkansen_secondary_origin_station_code
shinkansen_secondary_destination_station_code
shinkansen_secondary_origin_station_string
shinkansen_secondary_destination_station_string
shinkansen_secondary_departure_time
shinkansen_secondary_arrival_time
shinkansen_secondary_train_name
shinkansen_secondary_car_number
shinkansen_secondary_seat_row
shinkansen_secondary_seat_number
green_car_origin_station_code
green_car_destination_station_code
green_car_origin_station_string
green_car_destination_station_string
green_car_validity_start_date
has_green_car_ticket
has_shinkansen_ticket
needs_station_processing
payment_application.pid
en_route_flags
felica_transit_applet_state
JOIN payment_application ON felica_transit_applet_state.payment_application_pid = payment_application.pid 
JOIN pass ON pass.pid = payment_application.pass_pid 
v24@?0@"PKFelicaTransitAppletState"8@16
IN_APP_PAYMENT_ERROR_NO_ENTITLEMENT_FORMAT
v20@?0B8@"NSXPCListenerEndpoint"12
-[PDInAppPaymentService retrievePaymentListenerEndpointForHostIdentifier:handler:]
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v20@?0B8@"NSURL"12
-[PDInAppPaymentService paymentServicesMerchantURLForAPIType:handler:]
-[PDInAppPaymentService paymentHardwareStatusWithCompletion:]
-[PDInAppPaymentService cardsAvailableForAMPWithCountryCode:completion:]
This device is not currently eligible for enrollment.
v20@?0B8@"PKPayment"12
v32@?0@"NSError"8@"PKPaymentToken"16@"NSString"24
paymentWebServiceCoordinator
T@"PDPaymentWebServiceCoordinator",&,N,V_paymentWebServiceCoordinator
T@"<PDInAppPaymentServiceDelegate>",W,N,V_delegate
paymentSession
startSession
webService
%@%@=%@
Could not create json data for %@: %@
application/json
Content-Type
Authentication failure
Unexpected response code %d
Connection error
Server response was malformed
T@"PDWebService",R,N,V_webService
requestedStatus
POST
DELETE
devices
registrations
ApplePass %@
Authorization
%@ task (for device %@, pass type %@, serial number %@; with web service url %@)
Register
Unregister
TQ,N,V_requestedStatus
lastUpdatedTag
tagLastUpdateDate
passesUpdatedSince
Get serial #s task (for device %@, pass type %@, last updated %@; with web service url %@)
Missing response data
Top-level JSON object must be a dictionary (instead found a %@)
response
serialNumbers
lastUpdated
T@"NSString",&,N,V_lastUpdatedTag
T@"NSDate",&,N,V_tagLastUpdateDate
T@"NSArray",&,N,V_serialNumbers
context
userRequested
serverRequested
If-Modified-Since
Last-Modified
Get pass task (pass type %@, serial number %@, if-modified-since %@; with web service url %@)
Received invalid pass data
Requested pass of type %@, received pass of type %@
Requested serial number %@, received serial number %@
T@"PDPassUpdateContext",R,N,V_context
TB,N,V_userRequested
TB,N,V_serverRequested
T@"PKPass",&,N,V_pass
lastModified
T@"NSString",&,N,V_lastModified
contact
personalizationToken
requiredPersonalizationFields
personalizationSource
personalize
fullName
givenName
familyName
postalCode
ISOCountryCode
emailAddress
requiredPersonalizationInfo
Personalize pass task (pass type %@, serial number %@, if-modified-since %@; with web service url %@)
Received invalid personalizaiton token signature
T@"PKContact",R,N,V_contact
T@"NSString",R,N,V_personalizationToken
TQ,R,N,V_requiredPersonalizationFields
TQ,R,N,V_personalizationSource
encodedSignature
T@"NSString",R,&,N,V_encodedSignature
logs
Log task (pass type %@, web service url %@)
T@"NSArray",&,N,V_logs
yyyy-MM-dd HH:mm:ss Z
[%@] %@. This will be treated as an error in a future release.
[%@] %@
com.apple.passd.accountnotificationcontroller
B32@?0@"PKAccountPayment"8Q16^B24
q24@?0@"PKAccountPayment"8@"PKAccountPayment"16
v32@?0@"PKAccountPayment"8Q16^B24
seid
dpan_id
dpan_suffix
sanitized_dpan
suspended_reason
supports_contactless_payment
supports_in_app_payment
supports_optional_authentication
applet_data_format
applet_currency_code
requires_deferred_authorization
in_app_pin_required_amount
in_app_pin_required_currency
payment_network_identifier
display_name
auxiliary_application
payment_type
contactless_priority
in_app_priority
supports_instant_funds_in
notification_service.pid
payment_application
JOIN pass ON pass.pid = payment_application.pass_pid
JOIN pass ON pass.pid = payment_application.pass_pid JOIN pass_notification_service ON (pass_notification_service.pid = pass.pass_transaction_service_pid OR pass_notification_service.pid = pass.pass_message_service_pid)JOIN notification_service ON notification_service.pid = pass_notification_service.notification_service_pid
v24@?0@"PKPaymentApplication"8@16
'What changed?' task (%@)
pendingTasks
completedTasks
gotUpdates
T@"NSString",R,&,N,V_passTypeIdentifier
subtasks
T@"NSSet",R,&,N
TB,R,N,V_gotUpdates
Transaction
Message
Service Type: %@, Service URL: %@, Registration URL: %@
serviceType
registrationURL
pushTopic
appLaunchToken
lastUpdatedDate
lastUpdatedTagDate
TQ,N,V_serviceType
T@"NSURL",&,N,V_registrationURL
T@"NSString",&,N,V_pushTopic
T@"NSString",&,N,V_appLaunchToken
T@"NSDate",&,N,V_lastUpdatedDate
T@"NSDate",&,N,V_lastUpdatedTagDate
notificationService
Accept
Date
AuthenticationToken %@
T@"PDNotificationService",&,N,V_notificationService
taskType
Tq,R,N,V_taskType
registrationData
signature
certificates
completionTask
certificateVersion
casdCertificate
%@ %@ Task (Device ID: %@, Service URL: %@, Registration URL: %@)
Transactions
Messages
T@"NSString",&,N,V_registrationData
T@"NSString",&,N,V_signature
T@"NSDictionary",&,N,V_certificates
T@"PDNetworkConnectionTask",&,N,V_completionTask
TQ,N,V_certificateVersion
dpan
%@ %@ Task (Device ID: %@, DPAN ID: %@, Service URL: %@, Registration URL: %@)
T@"NSString",&,N,SsetDPANIdentifier:,V_dpanIdentifier
notifications
T@"NSArray",&,N,V_notifications
balances
T@"NSArray",&,N,V_balances
initialUpdatesTask
Accept-Language
transactions
messages
Get %@ Notifications Task (Device ID: %@, Service URL: %@, Registration URL: %@)
transactionDetails
balanceDetails
messageDetails
TB,N,GisInitialUpdatesTask,V_initialUpdatesTask
Get %@ Notifications Task (Device ID: %@, DPAN ID: %@, Service URL: %@, Registration URL: %@)
com.apple.passd.apply.manager
com.apple.passd.apply.reply
v16@?0@"<PDApplyManagerObserver>"8
v24@?0@"PKApplyWebServiceApplicationsResponse"8@"NSError"16
Missing Apply URL/Topic
v16@?0@"PKFeatureApplication"8
v24@?0@"PKApplyWebServiceApplyResponse"8@"NSError"16
-[PDApplyManager _paymentWebServiceContextChanged]_block_invoke
v24@?0@"PKApplyWebServiceApplicationDeleteResponse"8@"NSError"16
com.apple.apply.service
service_identifier
content
message_date
archived
message_type
allow_deep_link
payment_message
JOIN pass ON pass.pid = payment_message.pass_pid
v24@?0@"PKPaymentMessage"8@16
passionfruits
v24@?0@"PKAccountPhysicalCardShippingUpdate"8@16
-[PDPaymentService paymentDeviceFieldPropertiesWithHandler:]_block_invoke
-[PDPaymentService defaultPaymentPassUniqueIdentifier:]_block_invoke
-[PDPaymentService setDefaultPaymentPassUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService defaultPaymentPassIngestionSpecificIdentifier:]_block_invoke
-[PDPaymentService simulateDefaultExpressTransitPassIdentifier:forExpressMode:handler:]
-[PDPaymentService sharedPaymentWebServiceContextWithHandler:]_block_invoke
-[PDPaymentService setSharedPaymentWebServiceContext:handler:]_block_invoke
-[PDPaymentService transactionsAppLaunchTokenForPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService messagesAppLaunchTokenForPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService submitVerificationCode:verificationData:forDPANIdentifier:handler:]_block_invoke
-[PDPaymentService transactionCountByPeriodForPassWithUniqueIdentifier:withTransactionSource:withBackingData:calendar:unit:includePurchaseTotal:completion:]_block_invoke
-[PDPaymentService cashbackByPeriodFromPassUniqueIdentifier:withStartDate:endDate:calendar:calendarUnit:type:completion:]_block_invoke
-[PDPaymentService transactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:completion:]_block_invoke
-[PDPaymentService transactionsForPaymentPassWithUniqueIdentifier:withPeerPaymentCounterpartHandle:withTransactionSource:withBackingData:limit:completion:]_block_invoke
-[PDPaymentService transactionsForPaymentPassWithUniqueIdentifier:withMapsIdentifier:withTransactionSource:withBackingData:limit:completion:]_block_invoke
-[PDPaymentService transactionsForPaymentPassWithUniqueIdentifier:matchingMerchant:withTransactionSource:withBackingData:limit:completion:]_block_invoke
-[PDPaymentService transactionsForPaymentPassWithuniqueIdentifier:withMerchantCategory:withTransactionSource:withBackingData:startDate:endDate:limit:completion:]_block_invoke
-[PDPaymentService transactionsForPaymentPassWithUniqueIdentifier:withTransactionType:withTransactionSource:withBackingData:startDate:endDate:limit:completion:]_block_invoke
-[PDPaymentService approvedTransactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:completion:]_block_invoke
-[PDPaymentService pendingTransactionsForPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:limit:completion:]_block_invoke
-[PDPaymentService transactionsWithTransactionSource:withBackingData:limit:completion:]_block_invoke
-[PDPaymentService transactionWithTransactionIdentifier:completion:]_block_invoke
-[PDPaymentService transactionWithServiceIdentifier:completion:]_block_invoke
-[PDPaymentService transactionWithReferenceIdentifier:completion:]_block_invoke
-[PDPaymentService passUniqueIdentifierForTransactionWithIdentifier:completion:]_block_invoke
-[PDPaymentService passUniqueIdentifierForTransactionWithServiceIdentifier:completion:]_block_invoke
-[PDPaymentService mapsMerchantsWithCompletion:]_block_invoke
-[PDPaymentService valueAddedServiceTransactionsForPassWithUniqueIdentifier:limit:handler:]_block_invoke
-[PDPaymentService valueAddedServiceTransactionsForPaymentTransaction:handler:]_block_invoke
-[PDPaymentService valueAddedServiceTransactionWithIdentifier:handler:]_block_invoke
-[PDPaymentService messagesForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService balancesForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService balanceReminderThresholdForBalanceIdentifier:withPassUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService setBalanceReminder:forBalanceIdentifier:withPassUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService deletePaymentTransactionWithIdentifier:forPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService deleteAllTransactionsForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService deleteAllMessagesForPaymentPassWithUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService archiveMessageWithIdentifier:handler:]_block_invoke
-[PDPaymentService insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:handler:]_block_invoke
-[PDPaymentService removeMapsDataForTransactionWithIdentifier:forPassUniqueIdentifier:issueReportIdentifier:completion:]_block_invoke
-[PDPaymentService processTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:expressTransactionState:]
https
http
-[PDPaymentService insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:handler:]_block_invoke
-[PDPaymentService setDefaultPaymentApplication:forPassUniqueIdentifier:handler:]_block_invoke
-[PDPaymentService defaultPaymentApplicationForPassUniqueIdentifier:handler:]_block_invoke
v28@?0B8@"NSData"12@"NSData"20
-[PDPaymentService initializeSecureElementIfNecessaryWithHandler:]_block_invoke
-[PDPaymentService initializeSecureElement:]_block_invoke_2
-[PDPaymentService simulatePaymentPushTopic:handler:]_block_invoke
-[PDPaymentService downloadAllPaymentPassesWithHandler:]_block_invoke
-[PDPaymentService consistencyCheckWithHandler:]_block_invoke
SETUP_REMINDER_SUICA_MESSAGE
SETUP_REMINDER_MESSAGE
-[PDPaymentService scheduleSetupReminders:]_block_invoke
AUTOMATIC_PRESENTATION_AVAILABLE_MESSAGE
AUTOMATIC_PRESENTATION_AVAILABLE_ACTION
-[PDPaymentService scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:]
-[PDPaymentService passbookUIServiceDidLaunch:]
-[PDPaymentService featureApplicationsWithCompletion:]
-[PDPaymentService featureApplicationWithIdentifier:completion:]
-[PDPaymentService featureApplicationsForProvisioningWithCompletion:]
-[PDPaymentService submitApplyRequest:completion:]
-[PDPaymentService submitDocumentRequest:completion:]
-[PDPaymentService submitTermsRequest:completion:]
-[PDPaymentService submitDeleteRequest:completion:]
v24@?0@"PKAccountWebServiceAccountTransactionAnswerResponse"8@"NSError"16
-[PDPaymentService submitTransactionAnswerForTransaction:questionType:answer:completion:]
-[PDPaymentService categoryVisualizationMagnitudesForPassUniqueID:completion:]
-[PDPaymentService recomputeCategoryVisualizationMangitudesForPassUniqueID:style:]
-[PDPaymentService noteAccountDeletedWithCompletion:]
-[PDPaymentService performDeviceCheckInWithCompletion:]
-[PDPaymentService setDeviceCheckInContextBuildVersion:outstandingAction:forRegion:]
-[PDPaymentService storePassOwnershipToken:withIdentifier:]
-[PDPaymentService passOwnershipTokenWithIdentifier:completion:]
bundleIdentifier
teamid123
v24@?0@"PKDisbursementVoucher"8@"NSError"16
notificationServiceCoordinator
T@"PDNotificationServiceCoordinator",&,N,V_notificationServiceCoordinator
cloudStoreNotificationCoordinator
T@"PDCloudStoreNotificationCoordinator",&,N,V_cloudStoreNotificationCoordinator
peerPaymentWebServicesCoordinator
T@"PDPeerPaymentWebServiceCoordinator",&,N,V_peerPaymentWebServicesCoordinator
paymentTransactionProcessor
T@"PKPaymentTransactionProcessor",&,N,V_paymentTransactionProcessor
transitStateManager
T@"PDTransitStateManager",&,N,V_transitStateManager
T@"PKFieldDetector",&,N,V_fieldDetector
defaultPassManager
T@"PDDefaultPassManager",&,N,V_defaultPassManager
pushNotificationManager
T@"PDPushNotificationManager",&,N,V_pushNotificationManager
devicePasscodeManager
T@"PDDevicePasscodeManager",&,N,V_devicePasscodeManager
applyManager
T@"PDApplyManager",&,N,V_applyManager
paymentTransactionIdentifier
T@"NSString",N,V_paymentTransactionIdentifier
transitAppletState
T@"PKTransitAppletState",R,N,V_transitAppletState
PDWebServicesStandardZeroInterval
PDWebServicesMinimumZeroInterval
PDWebServicesMildRateLimitThreshold
PDWebServicesModerateRateLimitThreshold
PDWebServicesSevereRateLimitThreshold
PDWebServicesPushCutoffThreshold
PDWebServicesMildRateLimitInterval
PDWebServicesModerateRateLimitInterval
PDWebServicesSevereRateLimitInterval
Update requested for unregistered serial number %@
Response to 'What changed?' request included %d serial numbers but omitted a lastUpdated tag.
Response to 'What changed?' request included %d serial numbers but the lastUpdated tag (%@) remained the same.
Device received spurious push. Request for passesUpdatedSince '%@' returned no serial numbers. (Device = %@)
Server requested update to serial number '%@', but the pass was unchanged.
Server ignored the 'if-modified-since' header (%@) and returned the full unchanged pass data for serial number '%@'.
Server returned the pass data for serial number '%@' but did not provide a 'last-modified' header.
Personalization request was issued for serial number '%@', but the pass was unchanged.
CFUserNotification
OK_BUTTON_TITLE
REENABLE_BUTTON_TITLE
CUTOFF_MESSAGE_MORE_ORGANIZATIONS
CUTOFF_MESSAGE_TWO_ORGANIZATIONS
CUTOFF_MESSAGE_ONE_ORGANIZATION
tbl_name
table
index
trigger
sqlite_master
is_primary_balance
currency_code
exponent
localized_title
localized_description
payment_balance
JOIN pass ON pass.pid = payment_balance.pass_pid
v24@?0@"PKPaymentBalance"8@16
pears.a
jackfruits.a
jackfruits.b
cantaloupes.a
cantaloupes.b
tomatoes.f
tomatoes.j
avocados.a
avocados.f
avocados.e
starfruits.b
starfruits.c
grapes
JOIN pears ON pears.pid = grapes.a
JOIN jackfruits ON jackfruits.a = avocados.pid
JOIN cantaloupes ON cantaloupes.a = avocados.pid
JOIN avocados ON avocados.a = grapes.pid
JOIN tomatoes ON tomatoes.a = grapes.pid
JOIN starfruits ON starfruits.a = grapes.pid
v24@?0@"PKAccountEvent"8@16
Invalid database URL
PRAGMA cache_size=512;
com.apple.passd.SQLiteDatabase
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
PRAGMA user_version=%ld
PRAGMA user_version;
_temporary_for_table_alteration_
DROP TABLE %@
SELECT name FROM sqlite_master WHERE type='table';
PRAGMA TABLE_INFO(%@);
_PKSQLiteDispatchQueueTag
Failed to delete db handle %p!  SQLite error %i.
encryption_public_key
v24@?0@"PKNFCPayload"8@16
loyalty_balance
transit_applet_state
v24@?0@"PKTransitAppletState"8@16
result_provider_identifier
phone_number
location_latitude
location_longitude
postal_address
maps_merchant
v24@?0@"PKMapsMerchant"8@16
MKWalletMerchantStylingInfo
notificationIcon.png
frontFace.png
PDUserNotificationAssetTypeIcon
PDUserNotificationAssetTypeFrontFace
NotificationAssets
web_domain
associated_web_domain
v24@?0@"NSMutableString"8@16
rambutans
v24@?0@"PKAccountPaymentReminder"8@16
PDTransitMarketGeoNotificationSent
v16@?0@"PDWalletUserNotification"8
v24@?0@"PKPaymentMarket"8^B16
v24@?0@"PKPaymentMarketsConfiguration"8@"NSError"16
v24@?0@"NSNumber"8^B16
v16@?0@"NSTimer"8
v24@?0@"NSString"8@"NSString"16
TRANSIT_MARKET_NOTIFICATION_MULTIPLE_PRODUCTS_MESSAGE
TRANSIT_MARKET_GEO_NOTIFICATION_MESSAGE_MULTIPLE_PRODUCTS_MARKET_NONE
v24@?0@"NSURL"8@"NSError"16
TRANSIT_MARKET_NOTIFICATION_TRANSIT_PRODUCT_MESSAGE_FORMAT
TRANSIT_MARKET_GEO_NOTIFICATION_MESSAGE_TRANSIT_PRODUCT_MARKET_NONE_FORMAT
TRANSIT_MARKET_NOTIFICATION_OPEN_LOOP_EXPRESS_UPGRADE_TITLE
TRANSIT_MARKET_NOTIFICATION_OPEN_LOOP_EXPRESS_UPGRADE_MESSAGE_FORMAT
TRANSIT_OPEN_LOOP_EXPRESS_UPGRADE_NOTIFICATION_TITLE
TRANSIT_OPEN_LOOP_EXPRESS_UPGRADE_MESSAGE_MARKET_NONE_FORMAT
B32@?0@"PKPaymentSetupProduct"8Q16^B24
v32@?0@"PKPaymentSetupProductPaymentOption"8Q16^B24
v32@?0@"PKPaymentSetupProduct"8Q16^B24
B24@?0@"NSNumber"8^B16
transitMarket
T@"PKPaymentMarket",&,V_transitMarket
displayName
T@"NSString",C,V_displayName
credentialType
Tq,V_credentialType
transitNetworkIdentifier
T@"NSString",C,V_transitNetworkIdentifier
payment_transaction_pid
merchant_pid
merchant_url
successful
terminal_application_version
terminal_mode
transaction_date
value_added_service_transaction
JOIN pass ON pass.pid = value_added_service_transaction.pass_pid
v24@?0@"PKValueAddedServiceTransaction"8@16
com.apple.passd.applynotificationcontroller
%@-acceptReminder
%@-expiryReminder
APPLICATION_APPROVED_NOTIFICATION_TITLE
APPLICATION_APPROVED_NOTIFICATION_MESSAGE
APPLICATION_APPROVED_EXPIRING_NOTIFICATION_TITLE
APPLICATION_APPROVED_EXPIRING_NOTIFICATION_MESSAGE
APPLICATION_EXPIRED_NOTIFICATION_TITLE
APPLICATION_EXPIRED_NOTIFICATION_MESSAGE
APPLICATION_CARD_READY_NOTIFICATION_TITLE
APPLICATION_CARD_READY_NOTIFICATION_MESSAGE
APPLICATION_UPDATED_NOTIFICATION_TITLE
APPLICATION_UPDATED_NOTIFICATION_MESSAGE
APPLICATION_WITHDRAWN_NOTIFICATION_TITLE
APPLICATION_WITHDRAWN_NOTIFICATION_MESSAGE
APPLICATION_TERMINATED_NOTIFICATION_TITLE
APPLICATION_TERMINATED_NOTIFICATION_MESSAGE
v24@?0@"PKDiscoveryArticleLayout"8@"NSError"16
discoveryManager
T@"PDDiscoveryManager",&,N,V_discoveryManager
ruleManager
T@"PDRuleManager",&,N,V_ruleManager
CREATE TABLE %@ (%@)
INSERT INTO %@ SELECT %@ FROM %@
ALTER TABLE %@ ADD COLUMN %@
ALTER TABLE %@ RENAME TO %@
tableName
T@"NSString",C,N,V_tableName
%@ %@
[%@][%@]
T@"NSString",&,N,V_name
qualifiers
T@"NSString",&,N,V_qualifiers
CREATE
TABLE
"%@"
CONSTRAINT
PRIMARY
UNIQUE
CHECK
FOREIGN
com.apple.NanoPassbookEvents
allowed
not allowed
not 
expressModeAllowed
TQ,N,GisExpressModeAllowed,V_expressModeAllowed
lastSuggestedExpressState
TQ,N,V_lastSuggestedExpressState
expressPassInformation
T@"NSSet",&,N,V_expressPassInformation
inLostMode
TB,N,GisInLostMode,V_inLostMode
T@"<PDWatchExpressModeStateControllerDelegate>",W,N,V_delegate
Event
ExpressTransitAllowed
proximity_uuid
major
minor
beacon
v24@?0@"PKBeacon"8@16
blackberries
v24@?0@"PKPhysicalCard"8@16
pitayas
v24@?0@"PKPhysicalCardOrderActivityEvent"8@16
partner_identifier
feature_identifier
dirty_state_identifier
payment_setup_product_configurations
v24@?0@"PKPaymentSetupProductConfiguration"8@16
nectarines
v24@?0@"PKAccountPhysicalCardStatusUpdate"8@16
times_presented
value_added_merchant
v24@?0@"PKValueAddedMerchant"8@16
com.apple.passd.defaultPass.work
com.apple.passd.defaultPass.reply
DEFAULT_CARD_CHANGED_TITLE_FORMAT
DEFAULT_CARD_CHANGED_MESSAGE
DEFAULT_CARD_CHANGED_SETTINGS_BUTTON
DEFAULT_CARD_CHANGED_DISMISS_BUTTON
T@"<PDDefaultPassManagerDelegate>",W,N,V_delegate
clementines
v24@?0@"PKCreditAccountDetails"8@16
CREATE TABLE IF NOT EXISTS pass (pid INTEGER, unique_id TEXT NOT NULL, pass_type_pid INTEGER NOT NULL, serial_number TEXT NOT NULL, sequence_counter INTEGER, organization_name TEXT, relevant_date INTEGER, expiration_date INTEGER, voided INTEGER, user_info BLOB, template INTEGER, background_color TEXT, secondary_background_color TEXT, foreground_color TEXT, label_color TEXT, strip_color TEXT, tall_code INTEGER, has_background_image INTEGER, has_strip_image INTEGER, has_live_rendered_background INTEGER, manifest_hash BLOB, web_service_pid INTEGER, push_registration_status INTEGER, push_registration_date INTEGER, authentication_token TEXT, last_modified_tag TEXT, ingested_date INTEGER, modified_date INTEGER, modified_source INTEGER, grouping_id TEXT, group_pid INTEGER, revoked INTEGER, share_count INTEGER, pass_transaction_service_pid INTEGER, pass_message_service_pid INTEGER, pass_flavor INTEGER, card_type INTEGER, primary_account_identifier TEXT, primary_account_suffix TEXT, sanitized_pan TEXT, sharing_method INTEGER, sharing_url TEXT, sharing_text TEXT, supports_dpan_notifications INTEGER, supports_fpan_notifications INTEGER, supports_default_card_selection INTEGER, supports_serial_number_based_provisioning INTEGER, requires_transfer_serial_number_based_provisioning INTEGER, has_stored_value INTEGER, payment_option_selectable INTEGER, pass_default_payment_application_pid INTEGER, cobranded INTEGER, low_balance_reminder_amount INTEGER, low_balance_reminder_currency TEXT, commute_plan_renewal_reminder_time_interval INTEGER, issuer_country_code TEXT, has_associated_peer_payment_account INTEGER, is_cloud_kit_archived INTEGER,a TEXT,b INTEGER, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS pass_flavor_index ON pass (pass_flavor);
CREATE INDEX IF NOT EXISTS pass_unique_id_index ON pass (unique_id);
CREATE TABLE IF NOT EXISTS location_source (pid INTEGER, url TEXT NOT NULL, type INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_location_source (pid INTEGER, pass_pid INTEGER, location_source_pid INTEGER, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS pass_location_source_index ON pass_location_source (location_source_pid);
CREATE TABLE IF NOT EXISTS location (pid INTEGER, latitude REAL, longitude REAL, max_distance REAL, altitude REAL, name TEXT, relevant_text TEXT, location_source_pid INTEGER NOT NULL, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS location_source_index ON location (location_source_pid);
CREATE VIRTUAL TABLE location_index USING rtree(location_pid INTEGER, min_lat REAL, max_lat REAL, min_long REAL, max_long REAL);
CREATE TABLE IF NOT EXISTS beacon (pid INTEGER, proximity_uuid TEXT, major REAL, minor REAL, name TEXT, relevant_text TEXT, pass_pid INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, encryption_public_key TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_type (pid INTEGER, identifier TEXT NOT NULL, identifier_hash TEXT, team_identifier TEXT NOT NULL, last_push_date INTEGER, last_update_date INTEGER, push_frequency_score REAL, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS pass_type_identifier_hash_index ON pass_type (identifier_hash);
CREATE TABLE IF NOT EXISTS web_service (pid INTEGER, pass_type_pid INTEGER NOT NULL, service_url TEXT NOT NULL, push_token TEXT, device_identifier TEXT, last_updated_tag TEXT, tag_last_update_date INTEGER, last_deletion_date INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_group (pid INTEGER, group_order INTEGER, pass_type_id TEXT, pass_style INTEGER, grouping_id TEXT, minimum_date INTEGER, maximum_date INTEGER, ingested_date INTEGER, nfc_enabled INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_application (pid INTEGER, seid TEXT, aid TEXT, dpan_id TEXT, dpan_suffix TEXT, sanitized_dpan TEXT, fpan_id TEXT, fpan_suffix TEXT, state INTEGER, suspended_reason TEXT, supports_contactless_payment INTEGER, supports_in_app_payment INTEGER, supports_optional_authentication INTEGER, applet_data_format TEXT, applet_currency_code TEXT, payment_network_identifier INTEGER, pass_pid INTEGER, in_app_pin_required_amount INTEGER, in_app_pin_required_currency TEXT, display_name TEXT, auxiliary_application INTEGER,payment_type INTEGER, requires_deferred_authorization INTEGER, contactless_priority INTEGER, in_app_priority INTEGER, supports_instant_funds_in INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_express_mode (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, express_mode TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion (pid INTEGER, payment_application_pid INTEGER, type TEXT, mask BLOB, supports_express INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_tci (pid INTEGER, is_primary INTEGER, payment_automatic_selection_criterion_pid INTEGER, tci BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, history_sequence_number INTEGER, balance INTEGER, loyalty_balance INTEGER, currency TEXT, blacklisted INTEGER, needs_station_processing INTEGER, expiration_date INTEGER, en_route_flags BLOB, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS felica_transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, shinkansen_ticket_active INTEGER, balance_allowed_for_commute INTEGER, low_balance_notification_enabled INTEGER, green_car_ticket_used INTEGER, history_sequence_number INTEGER, balance INTEGER, blacklisted INTEGER, shinkansen_validity_start_date INTEGER, shinkansen_validity_term INTEGER, shinkansen_origin_station_code BLOB, shinkansen_destination_station_code BLOB, shinkansen_departure_time INTEGER, shinkansen_arrival_time INTEGER, shinkansen_train_name TEXT, shinkansen_car_number INTEGER, shinkansen_seat_row INTEGER, shinkansen_seat_number INTEGER, shinkansen_secondary_origin_station_code BLOB, shinkansen_secondary_destination_station_code BLOB, shinkansen_secondary_departure_time INTEGER, shinkansen_secondary_arrival_time INTEGER, shinkansen_secondary_train_name TEXT, shinkansen_secondary_car_number INTEGER, shinkansen_secondary_seat_row INTEGER, shinkansen_secondary_seat_number INTEGER, green_car_origin_station_code BLOB, green_car_destination_station_code BLOB, shinkansen_origin_station_string TEXT, shinkansen_destination_station_string TEXT, shinkansen_secondary_origin_station_string TEXT, shinkansen_secondary_destination_station_string TEXT, green_car_origin_station_string TEXT, green_car_destination_station_string TEXT, green_car_validity_start_date INTEGER, has_green_car_ticket INTEGER, has_shinkansen_ticket INTEGER, needs_station_processing INTEGER, en_route_flags BLOB, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS felica_transit_applet_state_payment_application_pid_index ON felica_transit_applet_state (payment_application_pid);
CREATE TABLE IF NOT EXISTS payment_transaction (pid INTEGER, pass_pid INTEGER NOT NULL, payment_application_pid INTEGER, identifier TEXT, service_identifier TEXT, payment_hash TEXT, payment_hash_component_1 TEXT, payment_hash_component_2 TEXT, currency_code TEXT, amount INTEGER, subtotal_amount INTEGER, locality TEXT, administrative_area TEXT, transaction_date INTEGER  NOT NULL, transaction_status_changed_date INTEGER, location_date INTEGER, location_latitude REAL, location_longitude REAL, location_altitude REAL, location_horizontal_accuracy REAL, location_vertical_accuracy REAL, start_station_code BLOB, start_station TEXT, start_station_latitude REAL, start_station_longitude REAL, end_station_code BLOB, end_station TEXT, end_station_latitude REAL, end_station_longitude REAL, transaction_status INTEGER, transaction_type INTEGER, transit_type INTEGER, transit_modifiers INTEGER, en_route INTEGER, station_code_provider TEXT, city_code INTEGER, technology_type INTEGER, transaction_source INTEGER, has_notification_service_data INTEGER, processed_for_location INTEGER, processed_for_merchant_cleanup INTEGER, requires_merchant_reprocessing INTEGER, last_merchant_reprocessing_date INTEGER, processed_for_stations INTEGER, merchant_name TEXT, merchant_raw_name TEXT, merchant_industry_category TEXT, merchant_industry_code INTEGER, peer_payment_type INTEGER,peer_payment_counterpart_handle TEXT,peer_payment_memo TEXT,peer_payment_message_received_date INTEGER,foreign_exchange_information_destination_currency_code TEXT,foreign_exchange_information_destination_amount INTEGER,foreign_exchange_information_exchange_rate TEXT,primary_funding_source_amount INTEGER,primary_funding_source_currency_code TEXT,secondary_funding_source_amount INTEGER,secondary_funding_source_currency_code TEXT,secondary_funding_source_network INTEGER,secondary_funding_source_dpan_suffix TEXT,secondary_funding_source_fpan_identifier TEXT,secondary_funding_source_description TEXT,secondary_funding_source_type INTEGER,request_device_score_identifier TEXT,send_device_score_identifier TEXT,device_score_identifiers_required INTEGER,device_score_identifiers_submitted INTEGER,merchant_provided_description TEXT,metadata TEXT,is_cloud_kit_archived INTEGER,expiration_date INTEGER,adjustment_type INTEGER,transaction_declined_reason INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l TEXT, m INTEGER, n INTEGER, o TEXT, should_suppress_date INTEGER, p TEXT, q INTEGER, r TEXT, s TEXT, t TEXT, maps_merchant_pid INTEGER, u INTEGER, v TEXT, w INTEGER, x INTEGER, y TEXT, ab TEXT, ac INTEGER, ad INTEGER, ae TEXT, af TEXT, ag TEXT, ah TEXT, use_raw_merchant_data INTEGER, issue_report_identifier TEXT, suppress_notifications INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_balance (pid INTEGER, pass_pid INTEGER NOT NULL, identifier TEXT, localized_title TEXT, localized_description TEXT, currency_code TEXT, exponent INTEGER, value INTEGER, is_primary_balance INTEGER, last_updated_date INTEGER NOT NULL, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_message (pid INTEGER, pass_pid INTEGER NOT NULL, payment_application_pid INTEGER, identifier TEXT, service_identifier TEXT, message_date INTEGER, expiration_date INTEGER, message_type INTEGER, archived INTEGER, content TEXT, allow_deep_link INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS notification_service (pid INTEGER, push_token TEXT, push_topic TEXT NOT NULL, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, device_identifier TEXT NOT NULL, authentication_token TEXT, app_launch_token TEXT, service_type INTEGER,service_url TEXT NOT NULL, registration_url TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pass_notification_service (pid INTEGER, last_updated_date INTEGER, last_updated_tag TEXT, last_updated_tag_date INTEGER, registration_status INTEGER, notification_service_pid INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS associated_app_identifier (pass_pid INTEGER, application_id TEXT, PRIMARY KEY (pass_pid, application_id));
CREATE TABLE IF NOT EXISTS associated_pass_type_identifier (pass_pid INTEGER, identifier TEXT, identifier_hash TEXT, PRIMARY KEY (pass_pid, identifier));
CREATE TABLE IF NOT EXISTS associated_web_domain (pass_pid INTEGER, web_domain TEXT, PRIMARY KEY (pass_pid, web_domain));
CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, merchant_pid INTEGER, identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS value_added_merchant (pid INTEGER, identifier TEXT, times_presented INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS peer_payment_account (pid INTEGER, pass_pid INTEGER, state INTEGER, stage INTEGER, country_code TEXT, current_balance_currency TEXT, current_balance_amount INTEGER, maximum_balance_amount INTEGER, identity_verification_required INTEGER, account_state_dirty INTEGER, last_updated_date INTEGER, proactive_fetch_period INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, associated_pass_url TEXT, associated_pass_serial_number TEXT, associated_pass_type_identifier TEXT, pending_payment_count INTEGER, identity_verification_for_disbursements_required INTEGER,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS peer_payment_account_feature_descriptor (pid INTEGER, identifier TEXT, peer_payment_account_pid INTEGER, minimum_amount INTEGER, maximum_amount INTEGER, supported_networks TEXT, merchant_identifier TEXT, merchant_capabilities INTEGER, fee_percentage INTEGER, minimum_fee INTEGER, maximum_fee INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_transaction_fee (pid INTEGER, identifier TEXT, payment_transaction_pid INTEGER, type INTEGER, amount INTEGER, currency TEXT, localized_display_name TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS apples (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pears (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h TEXT, i INTEGER, j INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS strawberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS clementines (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, m TEXT, n INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS cucumbers (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS oranges (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS bananas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pineapples (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, t TEXT, u INTEGER, v INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS blackberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h TEXT, i TEXT, j TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS grapes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, f INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS avocados (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS tomatoes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e INTEGER, f TEXT, g INTEGER, h TEXT, i INTEGER, j INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS mangos (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS lychees (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, p TEXT, q INTEGER, r INTEGER, s TEXT, t TEXT, u INTEGER, v TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS rambutans (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS watermelons (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d TEXT, e TEXT, f INTEGER, g TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS raspberries (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k INTEGER,l INTEGER,m INTEGER,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS nectarines (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS passionfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pitayas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS plum (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS maps_merchant (pid INTEGER, identifier INTEGER, result_provider_identifier INTEGER, name TEXT, phone_number TEXT, url TEXT, location_latitude REAL, location_longitude REAL, postal_address TEXT, a TEXT, c INTEGER, d TEXT, g BLOB, h TEXT, i TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_transit_network_identifier (pid INTEGER, payment_application_pid INTEGER, identifier TEXT, network_order INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS blueberries (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS plantains (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, g INTEGER, h TEXT, i TEXT, l BLOB, m TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS jackfruits (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS cantaloupes (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS guavas (pid INTEGER, a TEXT, b INTEGER, c REAL, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS balance_reminder (pid INTEGER, pass_pid INTEGER, balance_identifier TEXT, threshold TEXT, enabled INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS discovery_item (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, type INTEGER, rule_identifier TEXT, triggers BLOB, layout_url TEXT, supported_localizations BLOB, os_version_requirement_range BLOB, relevant_date_range_start_date INTEGER, relevant_date_range_end_date INTEGER, item_order INTEGER, view_count INTEGER, max_view_count INTEGER, should_badge INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS rule (pid INTEGER, identifier TEXT, predicate_format TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS durian (pid INTEGER, a TEXT, b TEXT, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k TEXT, l TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS fig (pid INTEGER, a INTEGER, b TEXT, c TEXT, d TEXT, e TEXT, f TEXT, g TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS prune (pid INTEGER, a INTEGER, b TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS starfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS papaya (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e BLOB, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k BLOB, l BLOB, m INTEGER, n INTEGER, o INTEGER, p INTEGER, q INTEGER, r INTEGER, s INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS coconuts (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS peaches (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS whitney (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT,f TEXT,g TEXT,PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS williamson (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS palisades (pid INTEGER, a TEXT NOT NULL UNIQUE, b TEXT NOT NULL, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS shasta (pid INTEGER, a TEXT NOT NULL UNIQUE, b INTEGER REFERENCES whitney(pid) ON DELETE CASCADE, c INTEGER DEFAULT 0, d TEXT NOT NULL, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS missing_remote_assets (pid INTEGER, unique_id TEXT NOT NULL UNIQUE, download_retries_count INTEGER DEFAULT 0, PRIMARY KEY (pid, download_retries_count));
CREATE TABLE IF NOT EXISTS payment_setup_product_configurations (pid INTEGER, identifier TEXT, partner_identifier TEXT, type INTEGER, state INTEGER, feature_identifier INTEGER, dirty_state_identifier TEXT, last_updated_date INTEGER, PRIMARY KEY (pid));
PRAGMA foreign_keys = ON;
show_in_lock_screen_setting
automatic_updates_setting
payment_transaction
location_date INTEGER
in_app_pin_required_amount INTEGER
in_app_pin_required_currency TEXT
raw_name TEXT
maps_name
short_name
sanitized_dpan TEXT
sanitized_pan TEXT
merchant_name TEXT
merchant_maps_name TEXT
merchant_raw_name TEXT
merchant_industry_category TEXT
merchant_industry_code INTEGER
merchant_phone_number TEXT
merchant_maps_identifier INTEGER
merchant_url TEXT
merchant_location_latitude REAL
merchant_location_longitude REAL
UPDATE payment_transaction SET merchant_name                  = (select merchant.name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_name             = (select merchant.maps_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_raw_name              = (select merchant.raw_name from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_category     = (select merchant.industry_category from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_industry_code         = (select merchant.industry_code from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_phone_number          = (select merchant.phone_number from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_maps_identifier       = (select merchant.maps_identifier from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_url                   = (select merchant.url from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_latitude     = (select merchant.location_latitude from merchant where merchant.pid = payment_transaction.merchant_pid), merchant_location_longitude    = (select merchant.location_longitude from merchant where merchant.pid = payment_transaction.merchant_pid) WHERE payment_transaction.merchant_pid != 0;
sequence_counter INTEGER
CREATE TABLE IF NOT EXISTS nfc (pid INTEGER, pass_pid INTEGER, message TEXT, requires_certificate INTEGER, encryption_public_key TEXT, PRIMARY KEY (pid));
identifier_hash TEXT
supports_dpan_notifications INTEGER
supports_fpan_notifications INTEGER
supports_default_card_selection INTEGER
merchant_result_provider_identifier INTEGER
display_name TEXT
auxiliary_application INTEGER
payment_type TEXT
pass_default_payment_application_pid INTEGER
payment_option_selectable INTEGER
transaction_id
transaction_identifier
transaction_id_component_1
transaction_identifier_component_1
transaction_id_component_2
transaction_identifier_component_2
processed_for_location INTEGER
identifier TEXT
SELECT pid FROM payment_transaction
UPDATE payment_transaction SET identifier = '%@', processed_for_location = '1' WHERE pid = '%@'
temp_payment_type INTEGER
SELECT pid, payment_type FROM payment_application
UPDATE payment_application SET temp_payment_type = %ld WHERE pid = %ld
temp_payment_type
pass_group
nfc_enabled INTEGER
CREATE TABLE IF NOT EXISTS value_added_service_transaction (pid INTEGER, pass_pid INTEGER, payment_transaction_pid INTEGER, identifier TEXT, merchant_identifier TEXT, merchant_url TEXT, successful INTEGER, terminal_application_version INTEGER, terminal_mode INTEGER, transaction_date INTEGER, PRIMARY KEY (pid));
encryption_public_key TEXT
UPDATE payment_transaction SET identifier = '%@' WHERE pid = '%@'
SELECT pid FROM payment_message
UPDATE payment_message SET identifier = '%@' WHERE pid = '%@'
suspended_reason TEXT
has_stored_value INTEGER
merchant_pid INTEGER
merchant_identifier
cobranded INTEGER
supports_serial_number_based_provisioning INTEGER
SELECT pid FROM pass;
DELETE FROM payment_transaction WHERE pass_pid = %ld AND NOT (transaction_sources & %ld) ORDER BY transaction_date DESC LIMIT 100000 OFFSET %ld;
has_background_image INTEGER
has_strip_image INTEGER
SELECT pid, background_hash, strip_hash FROM pass
UPDATE pass SET has_background_image = %d, has_strip_image = %d WHERE pid = %lld
icon_hash
logo_hash
thumbnail_hash
background_hash
strip_hash
payment_assets_hash
CREATE TABLE IF NOT EXISTS pass_properties (pid INTEGER, payment_application_pid INTEGER, property_type INTEGER, perito_moreno TEXT, franz_josef INTEGER, biafo TEXT, pasterze TEXT, lambert INTEGER, jostedal INTEGER, fox INTEGER, hubbard INTEGER, mendenhall TEXT, canada INTEGER, siachen INTEGER, portage TEXT, PRIMARY KEY (pid))
pass_properties
columbia TEXT
property_identifier TEXT
order_within_group
transaction_source INTEGER
has_notification_service_data INTEGER
UPDATE payment_transaction SET has_notification_service_data = 1 WHERE (transaction_sources & 2)
UPDATE payment_transaction SET transaction_source = 1            WHERE (transaction_sources & 1)
UPDATE payment_transaction SET transaction_source = 2            WHERE (transaction_sources & 4)
transaction_sources
CREATE TABLE IF NOT EXISTS _01 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));
CREATE INDEX IF NOT EXISTS _01_payment_application_pid_index ON _01 (payment_application_pid);
a INTEGER
b INTEGER
c TEXT
d INTEGER
e INTEGER
f TEXT
g INTEGER
h INTEGER
i TEXT
d BLOB
g BLOB
processed_for_A INTEGER
supports_A INTEGER
a TEXT
CREATE TABLE IF NOT EXISTS _02 (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE, a TEXT, PRIMARY KEY (pid));
requires_a_cup_of_tea INTEGER
f INTEGER
h BLOB
i INTEGER
j INTEGER
l TEXT
m INTEGER
n INTEGER
o BLOB
p BLOB
q TEXT
r TEXT
s TEXT
t TEXT
v INTEGER
w INTEGER
b TEXT
x INTEGER
k INTEGER
u INTEGER
expired
expires_on_next_transaction
archive_on_next_transaction
aa INTEGER
y INTEGER
z INTEGER
ab BLOB
ac BLOB
af INTEGER
ag INTEGER
ah TEXT
ai INTEGER
aj INTEGER
ak INTEGER
ad TEXT
ae TEXT
iad_reporting_identifier
low_balance_reminder_amount INTEGER
low_balance_reminder_currency TEXT
commute_plan_renewal_reminder_time_interval INTEGER
issuer_country_code TEXT
ocean INTEGER
wave TEXT
board TEXT
beach TEXT
metadata TEXT
is_cloud_kit_archived INTEGER
B24@?0@"NSString"8@"NSString"16
DROP INDEX IF EXISTS _01_payment_application_pid_index;
in_station
in_shinkansen_station
supports_A
processed_for_A
processed_for_stations
start_station_code
start_station
end_station_code
end_station
transit_type
transit_modifiers
en_route
station_code_provider
supports_S INTEGER
requires_certificate
CREATE TABLE IF NOT EXISTS peer_payment_account (pid INTEGER, identifier TEXT, pass_pid INTEGER, state INTEGER, current_balance_currency TEXT, current_balance_amount INTEGER, identity_verification_required INTEGER, terms_acceptance_required INTEGER, terms_identifier TEXT, terms_url TEXT, pass_serial_number TEXT, pass_type_id TEXT, PRIMARY KEY (pid));
subtotal_amount INTEGER
foreign_exchange_information_destination_currency_code TEXT
foreign_exchange_information_destination_amount INTEGER
foreign_exchange_information_exchange_rate TEXT
payment_hash
payment_hash_component_1
payment_hash_component_2
CREATE TABLE IF NOT EXISTS peer_payment_account_feature_descriptor (pid INTEGER, identifier TEXT, peer_payment_account_pid INTEGER, minimum_amount INTEGER, maximum_amount INTEGER, supported_networks TEXT, merchant_identifier TEXT, merchant_capabilities INTEGER, PRIMARY KEY (pid));
country_code TEXT
associated_pass_url TEXT
pass_serial_number
pass_type_id
merchant_postal_address TEXT
requires_deferred_authorization INTEGER
primary_funding_source_amount INTEGER
primary_funding_source_currency_code TEXT
secondary_funding_source_amount INTEGER
secondary_funding_source_currency_code TEXT
secondary_funding_source_network INTEGER
secondary_funding_source_dpan_suffix TEXT
secondary_funding_source_fpan_identifier TEXT
secondary_funding_source_description TEXT
supports_S
has_live_rendered_background INTEGER
wave
stage INTEGER
transaction_status_changed_date INTEGER
expiration_date INTEGER
requires_a_cup_of_tea
maximum_balance_amount INTEGER
adjustment_type INTEGER
request_device_score_identifier TEXT
send_device_score_identifier TEXT
device_score_identifiers_required INTEGER
device_score_identifiers_submitted INTEGER
account_state_dirty INTEGER
last_updated_date INTEGER
proactive_fetch_period INTEGER
CREATE TABLE IF NOT EXISTS transit_applet_state (pid INTEGER, payment_application_pid INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE ON CONFLICT REPLACE, payment_transaction_identifier TEXT, in_station INTEGER, history_sequence_number INTEGER, balance INTEGER, loyalty_balance INTEGER, currency TEXT, blacklisted INTEGER, needs_station_processing INTEGER, expiration_date INTEGER, PRIMARY KEY (pid));
transaction_declined_reason INTEGER
balance_allowed_for_commute INTEGER
low_balance_notification_enabled INTEGER
peer_payment_message_received_date INTEGER
ocean
peer_payment_type
board
peer_payment_counterpart_handle
beach
peer_payment_memo
CREATE TABLE IF NOT EXISTS apples (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));
c INTEGER
d TEXT
e TEXT
g TEXT
h TEXT
j TEXT
k TEXT
CREATE TABLE IF NOT EXISTS pears (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS strawberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e TEXT, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS clementines (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e INTEGER, f INTEGER, g TEXT, h TEXT, i TEXT, j TEXT, k TEXT, l INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS cucumbers (pid INTEGER, a INTEGER, b INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS oranges (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS bananas (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS pineapples (pid INTEGER, a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion (pid INTEGER, payment_application_pid INTEGER, type TEXT, supports_express INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS payment_automatic_selection_criterion_tci (pid INTEGER, payment_automatic_selection_criterion_pid INTEGER, tci BLOB, PRIMARY KEY (pid));
card_type INTEGER
secondary_background_color TEXT
pending_payment_count INTEGER
merchant_provided_description TEXT
en_route_flags BLOB
o TEXT
should_suppress_date INTEGER
p TEXT
q INTEGER
CREATE TABLE IF NOT EXISTS blackberries (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, PRIMARY KEY (pid));
l INTEGER
o INTEGER
p INTEGER
r INTEGER
start_station_latitude REAL
start_station_longitude REAL
end_station_latitude REAL
end_station_longitude REAL
contactless_priority INTEGER
in_app_priority INTEGER
strawberries
CREATE TABLE IF NOT EXISTS grapes (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, e INTEGER, PRIMARY KEY (pid));
s INTEGER
CREATE TABLE IF NOT EXISTS lychees (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f INTEGER, g INTEGER, h INTEGER, i INTEGER, j INTEGER, k INTEGER, l TEXT, m INTEGER, n TEXT, o TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS raspberries (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e TEXT, f INTEGER, g TEXT, h TEXT, PRIMARY KEY (pid));
t INTEGER
raspberries
secondary_funding_source_type INTEGER
UPDATE payment_transaction SET secondary_funding_source_type = 1 WHERE payment_transaction.transaction_type=5;
CREATE TABLE IF NOT EXISTS maps_merchant (pid INTEGER, identifier INTEGER, result_provider_identifier INTEGER, name TEXT, phone_number TEXT, url TEXT, location_latitude REAL, location_longitude REAL, postal_address TEXT, PRIMARY KEY (pid));
maps_merchant_pid INTEGER
INSERT INTO    maps_merchant (    identifier, result_provider_identifier, name, phone_number, url, location_latitude, location_longitude, postal_address ) SELECT    * FROM (    SELECT        pt.merchant_maps_identifier,       pt.merchant_result_provider_identifier,       pt.merchant_maps_name,       pt.merchant_phone_number,       pt.merchant_url,       pt.merchant_location_latitude,       pt.merchant_location_longitude,       pt.merchant_postal_address    FROM        payment_transaction AS pt    WHERE        (pt.merchant_maps_identifier IS NOT null AND pt.merchant_maps_identifier IS NOT 0)    ORDER BY        pt.transaction_date DESC ) AS sorted_merchants GROUP BY    sorted_merchants.merchant_maps_identifier
UPDATE    payment_transaction SET    maps_merchant_pid = (SELECT m.pid FROM maps_merchant AS m WHERE m.identifier = payment_transaction.merchant_maps_identifier) WHERE    payment_transaction.merchant_maps_identifier != 0
merchant_maps_name
merchant_phone_number
merchant_maps_identifier
merchant_result_provider_identifier
merchant_postal_address
merchant_location_latitude
merchant_location_longitude
CREATE TABLE IF NOT EXISTS payment_transit_network_identifier (pid INTEGER, payment_application_pid INTEGER, identifier TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS plantains (pid INTEGER, a INTEGER, b INTEGER, c TEXT, d TEXT, e TEXT, PRIMARY KEY (pid));
apples
v TEXT
payment_automatic_selection_criterion
mask BLOB
is_primary INTEGER
b BLOB
plantains
f BLOB
y TEXT
supports_instant_funds_in INTEGER
ab TEXT
ac INTEGER
ad INTEGER
network_order INTEGER
CREATE TABLE IF NOT EXISTS discovery_item (pid INTEGER, identifier TEXT, version INTEGER, status INTEGER, type INTEGER, rule_identifier TEXT, triggers BLOB, layout_url TEXT, supported_localizations BLOB, os_version_requirement_range BLOB, PRIMARY KEY (pid));
identity_verification_for_disbursements_required INTEGER
peer_payment_account_feature_descriptor
fee_percentage INTEGER
minimum_fee INTEGER
maximum_fee INTEGER
CREATE TABLE IF NOT EXISTS durian (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d INTEGER, e INTEGER, f TEXT, g INTEGER, h INTEGER, i INTEGER, j INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS fig (pid INTEGER, a INTEGER, b TEXT, c TEXT, d INTEGER, e INTEGER, f INTEGER, g TEXT, PRIMARY KEY (pid));
l BLOB
requires_clearing_merchant_cleanup INTEGER
CREATE TABLE IF NOT EXISTS papaya (pid INTEGER, a TEXT, b INTEGER, c INTEGER, d TEXT, e BLOB, f INTEGER, g TEXT, h TEXT, i TEXT, j INTEGER, k BLOB, l BLOB, m INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS whitney (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS passionfruits (pid INTEGER, a INTEGER, b TEXT, c INTEGER, d TEXT, e TEXT, f TEXT, g INTEGER, h INTEGER, PRIMARY KEY (pid));
DELETE FROM durian;
DELETE FROM fig;
DELETE FROM prune;
durian
ag TEXT
m TEXT
af TEXT
requires_merchant_reprocessing INTEGER
last_merchant_reprocessing_date INTEGER
requires_clearing_merchant_cleanup
whitney
relevant_date_range_start_date INTEGER
relevant_date_range_end_date INTEGER
item_order INTEGER
view_count INTEGER
max_view_count INTEGER
city_code INTEGER
should_badge INTEGER
bananas
use_raw_merchant_data INTEGER
issue_report_identifier TEXT
suppress_notifications INTEGER
registration_url TEXT
v32@?0@"Pass"8@"PDPassGroupingProfile"16^B24
Applying catalog of record
passTypeID
T@"NSString",C,N,V_passTypeID
groupingID
T@"NSString",C,N,V_groupingID
passStyle
Tq,N,V_passStyle
minDate
T@"NSDate",&,N,V_minDate
maxDate
T@"NSDate",&,N,V_maxDate
T@"NSDate",&,N,V_ingestedDate
nfcEnabled
TB,N,GisNFCEnabled,SsetNFCEnabled:,V_nfcEnabled
relevantDate
T@"NSDate",&,N,V_relevantDate
application_id
associated_app_identifier
watermelons
v24@?0@"PKAccountCreditTermsUpdate"8@16
%@ (%@)
PDLastLogDate
passes23.sqlite
SignificantTimeChangeNotification
com.apple.mobile.keybagd.first_unlock
com.apple.managedconfiguration.passcodechanged
PDWalletUserNotificationSetupApplePayReminder1
PDWalletUserNotificationSetupApplePayReminder2
PDWalletUserNotificationSecureElementAccessLost
PDWalletUserNotificationPassStateChanged
PDWalletUserNotificationPeerPaymentTransactionAccepted
PDWalletUserNotificationPeerPaymentTransactionExpired
PDWalletUserNotificationPeerPaymentTransactionDeclined
PDMapsMerchantProcessingServiceClientIdentifier
PDMapsMerchantProcessingActivityIdentifier
transaction
T@"PKPaymentTransaction",&,N,V_transaction
com.apple.passd.PDMapsMerchantProcessingService.work
MerchantReprocessingLogs.txt
%@ - Reprocessed %@ transactions
com.apple.passd.devicepasscodemanager.internal
com.apple.passd.devicepasscodemanager.reply
B16@?0@"PKPaymentPass"8
Enforcing
Unenforcing
peer_payment_account_pid
minimum_amount
maximum_amount
supported_networks
merchant_capabilities
fee_percentage
minimum_fee
maximum_fee
v24@?0@"PKPeerPaymentAccountFeatureDescriptor"8@16
coconuts
v24@?0@"PKAccountAssistanceProgramMessage"8@16
group_order
pass_style
minimum_date
maximum_date
nfc_enabled
v24@?0@"PDAutomaticGroup"8@16
location_source
v24@?0@"PKCreditAccountBalanceSummary"8@16
com.apple.passd.PDSpotlightIndexer.indexAccessQueue
com.apple.passd.PDSpotlightIndexer.replyQueue
indexAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_indexAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_replyQueue
T@"CSSearchableIndex",&,N,V_index
localized_display_name
payment_transaction.identifier
payment_transaction_fee
JOIN payment_transaction ON payment_transaction.pid = payment_transaction_fee.payment_transaction_pid
v24@?0@"PKPaymentTransactionFeeItem"8@16
v24@?0@"PKMapsBrand"8@16
mask
supports_express
v24@?0@"PKPassAutomaticSelectionCriterion"8@16
v24@?0@"PKVirtualCard"8@16
com.apple.passd.trusted-device-enrollment-info-provider
-[PDTrustedDeviceEnrollmentInfoProvider trustedDeviceEnrollmentInfoWithHandler:]
-[PDTrustedDeviceEnrollmentInfoProvider trustedDeviceEnrollmentSignatureForDevice:accountDSID:sessionData:handler:]
Missing entitlement for Trusted Device Enrollment info.
v32@?0@"NSData"8@"PKSecureElementSignatureInfo"16@"NSError"24
Error connecting to target device.
Error connecting to remote target device.
v24@?0@"PKCreditAccountFeatureDescriptor"8@16
com.apple.passd.PDObjectSettingsManager
Saving PKObject Settings
peaches
v24@?0@"PKAccountUserInfoUpdate"8@16
PDDiscoveryItemStatus
PDDiscoveryEngagementMessageStatus
Articles
pkarticle
pkmessage
com.apple.passd.discoverymanager.work
com.apple.passd.discoverymanager.reply
v24@?0@"PKDiscoveryManifestResponse"8@"NSError"16
v24@?0@"NSBundle"8^@16
v24@?0@"NSDictionary"8@"NSError"16
B24@?0@"NSURL"8@"NSError"16
v32@?0@8Q16^B24
layout
json
pass_location_source
prune
v24@?0@"PKFeatureApplicationDeclineDetails"8@16
starfruits
v24@?0@"PKBillPaymentSelectedSuggestedAmountData"8@16
min_lat
max_lat
min_long
max_long
location.latitude
location.longitude
location.max_distance
location.altitude
location.name
location.relevant_text
JOIN location ON location_index.location_pid = location.pid JOIN location_source ON location.location_source_pid = location_source.pid LEFT JOIN pass_location_source ON pass_location_source.location_source_pid = location_source.pid JOIN pass ON pass_location_source.pass_pid = pass.pid
mangos
JOIN payment_transaction ON payment_transaction.pid = mangos.a
v24@?0@"PKPaymentTransactionQuestion"8@16
TB,R,N,GisValid,V_valid
usedKeys
T@"NSSet",R,N,V_usedKeys
avocados.identifier
JOIN payment_transaction ON payment_transaction.pid = apples.b
JOIN avocados ON avocados.pid = apples.i
v24@?0@"PKPaymentTransactionRewardsItem"8@16
00000000000000000000000000000000
subtotal_amount
transaction_status_changed_date
administrative_area
transaction_status
transaction_type
technology_type
transaction_source
has_notification_service_data
transaction_declined_reason
location_date
location_altitude
location_horizontal_accuracy
location_vertical_accuracy
processed_for_location
processed_for_merchant_cleanup
requires_merchant_reprocessing
last_merchant_reprocessing_date
start_station_latitude
start_station_longitude
end_station_latitude
end_station_longitude
should_suppress_date
merchant_name
merchant_raw_name
merchant_industry_category
merchant_industry_code
maps_merchant_pid
use_raw_merchant_data
issue_report_identifier
adjustment_type
peer_payment_message_received_date
foreign_exchange_information_destination_currency_code
foreign_exchange_information_destination_amount
foreign_exchange_information_exchange_rate
primary_funding_source_amount
primary_funding_source_currency_code
secondary_funding_source_amount
secondary_funding_source_currency_code
secondary_funding_source_network
secondary_funding_source_dpan_suffix
secondary_funding_source_fpan_identifier
secondary_funding_source_description
secondary_funding_source_type
request_device_score_identifier
send_device_score_identifier
device_score_identifiers_required
device_score_identifiers_submitted
merchant_provided_description
metadata
maps_merchant.identifier
plantains.a
maps_merchant.name
plantains.c
mangos.d
mangos.c
maps_merchant.c
plantains.g
grapes.d
suppress_notifications
JOIN pass ON pass.pid = payment_transaction.pass_pid
LEFT JOIN maps_merchant on maps_merchant.pid = payment_transaction.maps_merchant_pid
LEFT JOIN plantains on plantains.pid = payment_transaction.u
LEFT JOIN mangos on mangos.a = payment_transaction.pid
JOIN cantaloupes on cantaloupes.b = payment_transaction.service_identifier JOIN avocados on cantaloupes.a = avocados.pid JOIN grapes on avocados.a = grapes.pid
v24@?0@"PKPaymentTransaction"8@16
v24@?0@"PKMerchant"8@16
v24@?0@"PKPaymentTransactionForeignExchangeInformation"8@16
v24@?0@"PKFeatureApplication"8@16
DiscoveryEngagementMessage
PDServer
PDCardFileManagerDelegate
PDMissingRemoteAssetsPersistentStore
NSObject
PDPassLibraryDelegate
PDDatabaseManagerDelegate
PDRelevantPassProviderDelegate
PDExpressPassManagerObserver
PDTransitStateManagerDelegate
PDUserNotificationManagerDelegate
PDNotificationStreamConsumer
PKSecureElementObserver
PDInAppPaymentServiceDelegate
PKPaymentTransactionProcessorDelegate
PKFieldDetectorDelegate
PKIDSManagerDelegate
PKIDSManagerDataSource
NSXPCListenerDelegate
PDWatchExpressModeStateControllerDelegate
PDDiscoveryManagerDelegate
PDDefaultPassManagerDelegate
PDPaymentWebServiceArchiver
PKPaymentWebServiceArchiver
PKWebServiceArchiver
PDDeviceCheckInTask
PDPaymentWebServiceCoordinator
PDPushNotificationConsumer
PDXPCEventStreamObserver
PDDatabaseManagerPaymentServicesDelegate
PKPaymentWebServiceBackgroundDelegate
PKPaymentVerificationObserverDelegate
PKSecureElementConsistencyCheckerDelegate
PDAssertionObserver
PDScheduledActivityClient
PDXPCEventStreamsManager
PDXPCEventStreamObserverEntry
PDXPCEventStreamManager
CategoryVisualizationMagnitude
PDPassLibrary
PDRemoteInterfacePresenterObserver
PDPassLibraryExtendedExportedInterface
PDPassLibraryInAppExportedInterface
PDPassLibraryExportedInterface
PDXPCServiceExportedInterface
MissingRemoteAssetsItem
FeatureApplicationOfferDetails
SQLiteEntity
AccountRewardsIdentifier
AccountRewardsTransactionIdentifier
AccountRewardsRewardsAddedIdentifier
AccountRewards
PDNotificationServiceCoordinator
PDNetworkTaskDelegate
PDDatabaseManagerNotificationServicesDelegate
SQLitePredicate
NSCopying
SQLitePropertyPredicate
SQLiteComparisonPredicate
SQLiteContainsPredicate
SQLiteNullPredicate
SQLiteBooleanPredicate
SQLiteCompoundPredicate
SQLiteHasAssociatedEntityPredicate
SQLiteStringGlobPredicate
SQLiteQuery
SQLiteQueryDescriptor
SQLiteQueryAdditions
Pass
PDTransitStateFetchRequest
PDTransitStateManager
PaymentTransitNetworkIdentifier
AccountAdditionalPushTopics
Location
BalanceReminder
PDRelevantPassProvider
CLLocationManagerDelegate
PDRelevantPassGroup
Rule
PDExpressTransitUpgradeController
AccountVirtualCardStatusUpdate
PDCardFileManager
PDWebServiceCoordinatorPassStore
PDUbiquityManagerDelegate
PDCloudStorePassManager
MissingRemoteAssetsManagment
PDUserEvaluationEnvironment
AccountPayment
NotificationService
PDDatabaseManager
PDCloudStoreDataSource
PDPeerPaymentWebServiceCoordinatorDataSource
CreditAccountSummary
PDExpressMutationRequest
PDExpressPassManager
CreditAccountStatement
FieldDetect
PaymentAutomaticSelectionTCI
PDNetworkTaskManager
PDNetworkTaskManagerProtocol
PDNetworkTask
NSSecureCoding
NSCoding
PDNetworkConnectionTask
PDSecureConnectionManager
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
PDWebServicesCoordinator
PDDatabaseManagerWebServicesDelegate
PDUbiquityManager
NSFilePresenter
PDContaclessRemoteInterfacePresentationContext
PDRemoteAlertHandle
PDRemoteInterfacePresenter
SBSRemoteAlertHandleObserver
PKFieldDetectorObserver
Account
PDPassUpgradeController
CreditAccountRates
DiscoveryItem
PeerPaymentAccount
PDAccountService
PDAccountManagerObserver
PDAccountServiceExportedInterface
PDMissingRemoteAssetsPersistentStoreItem
WebService
PDVirtualCardDecryptionRequest
PDAccountManager
PDUserNotification
PDWalletUserNotification
PDWalletValueAddedServiceTransactionUserNotification
PDPassUpdateUserNotification
PDPassPaymentTransactionUserNotification
PDPassTransitTransactionUserNotification
PDPassTransitRelevancyUserNotification
PDPassReminderUserNotification
PDPassLowBalanceReminderUserNotification
PDPassCommutePlanRenewalReminderUserNotification
PDPeerPaymentTransactionUserNotification
PDPeerPaymentTransactionAcceptedUserNotification
PDPeerPaymentTransactionExpiredUserNotification
PDPeerPaymentTransactionRejectedUserNotification
PDPeerPaymentTransactionReminderUserNotification
PDPeerPaymentTransactionDeclinedUserNotification
PDPeerPaymentBalanceReminderUserNotification
PDPassAccountStateChangeUserNotification
PDAccountPaymentScheduledUserNotification
PDAccountPaymentDueUserNotification
PDPassAccountEventUserNotification
PDPassPaymentFraudTransactionUserNotification
PDPassPaymentSpendingSummaryUserNotification
PDPeerPaymentNeedsVerificationUserNotification
PDPassPaymentDailyDailyCashUserNotification
PDAccountPromptForVirtualCardDetailNotification
PDWebService
PDPassUpdateContext
PaymentExpressMode
PDUserNotificationCenter
UNUserNotificationCenterDelegate
PassNotificationService
PDXPCEventPublisher
PDUserNotificationManager
PDUserNotificationCenterDelegate
PassType
PDNotificationStreamRegistrationState
PDNotificationStreamManager
AccountServicingEvent
FelicaTransitAppletState
PDInAppPaymentService
PDInAppPaymentServiceExportedInterface
PDAccountAdStatusChangesObserver
PDWebServiceConnectionTask
PDRegistrationTask
PDGetSerialNumbersTask
PDGetSerialNumbersResult
PDGetPassTask
PDGetPassResult
PDPersonalizePassTask
PDPersonalizePassResult
PDLogTask
PDAccountNotificationController
PaymentApplication
PDWhatChangedTask
PDNotificationService
PDNotificationServiceConnectionTask
PDNotificationServiceRegistrationTask
PDNotificationServiceSpecificRegistrationTask
PDNotificationServiceGetUpdatesResult
PDNotificationServiceGetUpdatesTask
PDNotificationServiceGetSpecificUpdatesTask
PDApplyManager
PaymentMessage
AccountPhysicalCardShippingUpdate
PDPaymentService
PDApplyManagerObserver
PDPaymentServiceExportedInterface
AppletState
ErrorDetection
SQLiteMetaEntity
PaymentBalance
AccountEvent
SQLiteDatabase
TransitAppletState
MapsMerchant
PDUserNotificationIconStore
AssociatedWebDomain
AccountPaymentReminder
PDTransitNotificationService
PDTransitNotificationProduct
TransitNetworks
PDRuleManager
ValueAddedServiceTransaction
AssociatedPassTypeIdentifier
PDApplyNotificationController
PDDiscoveryService
PDDiscoveryServiceExportedInterface
SQLiteTable
SQLiteTableColumn
SQLiteSQLParsingAdditions
PDWatchExpressModeStateController
PDContinuityPaymentService
PDContinuityPaymentServiceExportedInterface
Beacon
PhysicalCard
PhysicalCardOrderActivityEvent
PKUsageNotificationClientExportedInterface
PaymentSetupProductConfiguration
AccountPhysicalCardStatusUpdate
ValueAddedMerchant
PDDefaultPassManager
CreditAccountDetails
Schema
PDPostMigrationContext
Groups
PDAutomaticGroup
PDPassGroupingProfile
AssociatedApplicationIdentifier
AccountCreditTermsUpdate
PDMapsMerchantProcessingItem
PDMapsMerchantProcessingService
PDDevicePasscodeManager
PeerPaymentAccountFeatureDescriptor
AccountAssistanceProgramMessage
Group
LocationSource
CreditAccountBalanceSummary
PDSpotlightIndexer
CSSearchableIndexDelegate
PaymentTransactionFee
MapsBrand
PaymentAutomaticSelectionCriterion
VirtualCard
PDTrustedDeviceEnrollmentInfoProvider
PDTrustedDeviceEnrollmentInfoProviderExportedInterface
CreditAccountFeatureDescriptor
PDObjectSettingsManager
PKObjectAdditions
DatabasePassAdditions
AccountUserInfoUpdate
PDDiscoveryManager
PDPeerPaymentWebServiceCoordinatorObserver
PassLocationSource
FeatureApplicationDeclineDetails
AccountBillPaymentSelectedSuggestedAmountData
LocationIndex
PaymentTransactionQuestion
PDPredicateValidationResult
PDPredicateValidator
NSPredicateVisitor
PDLocationMap
PaymentTransactionReward
PaymentTransaction
FeatureApplication
@16@0:8
@48@0:8q16Q24@32@40
@32@0:8@16@24
@40@0:8@16Q24@32
v32@0:8@16@24
v24@0:8@16
@24@0:8@16
@24@0:8q16
B16@0:8
v16@0:8
q16@0:8
v24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Q24@0:8Q16
@24@0:8Q16
v24@0:8@"NSString"16
@"NSSet"24@0:8Q16
B40@0:8@16q24^@32
v40@0:8@16q24@32
v40@0:8@16Q24@32
v32@0:8@16q24
v28@0:8@16B24
B40@0:8@"PKPass"16q24^@32
v40@0:8@"PKPass"16q24@"PKDiff"32
v40@0:8@"NSString"16Q24@"NSString"32
v32@0:8@"PDCardFileManager"16@"NSString"24
v32@0:8@"PKCatalog"16q24
v28@0:8@"NSString"16B24
v32@0:8Q16@24
v32@0:8Q16@"NSString"24
v24@0:8@"PKPaymentPass"16
v32@0:8@"PKPaymentMarket"16@"PKPaymentPass"24
v24@0:8@?16
v32@0:8@16Q24
v40@0:8@16@24@32
v40@0:8@16@24q32
@"NSSet"16@0:8
v24@0:8@?<v@?@"NSSet">16
v24@0:8@?<v@?@"NSMutableSet">16
@"NSArray"16@0:8
@"PKCatalog"16@0:8
v24@0:8@"PKObject"16
v32@0:8@"NSString"16Q24
v40@0:8@"PKPaymentPass"16@"NSSet"24@"NSSet"32
v32@0:8@"NSString"16@"PKPaymentMessage"24
v32@0:8@"NSString"16@"PKPaymentTransaction"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16@"NSSet"24
v32@0:8@"NSString"16@"PKValueAddedServiceTransaction"24
v40@0:8@"NSString"16@"PKTransitPassProperties"24@"PKTransitPassProperties"32
v32@0:8@"NSString"16@"PKPaymentApplication"24
v40@0:8@"NSString"16@"NSSet"24q32
B24@0:8q16
v24@0:8@"PDRelevantPassProvider"16
v48@0:8@16@24@32@40
v32@0:8@"PDExpressPassManager"16@"NSSet"24
v48@0:8@"PDExpressPassManager"16@"NSSet"24@"NSSet"32@"NSString"40
v32@0:8@"PDExpressPassManager"16@"PKExpressTransactionState"24
v32@0:8@"NSString"16@"PDUserNotificationManager"24
@"PDNotificationStreamRegistrationState"16@0:8
v40@0:8@"NSString"16@"NSObject<OS_xpc_object>"24q32
v32@0:8@16d24
v24@0:8Q16
v32@0:8@"PKSecureElement"16d24
v28@0:8@"PKSecureElement"16B24
v24@0:8@"PKSecureElement"16
v52@0:8@16@24@32i40@?44
v40@0:8@16@24@?32
v52@0:8@"PDInAppPaymentService"16@"NSXPCListenerEndpoint"24@"NSString"32i40@?<v@?B>44
v40@0:8@"PDInAppPaymentService"16@"NSString"24@?<v@?B@"NSXPCListenerEndpoint">32
v40@0:8@"PKPaymentTransaction"16@"NSString"24@"PKPaymentApplication"32
v24@0:8@"PKPaymentTransactionProcessor"16
B24@0:8@"PKFieldDetector"16
v24@0:8@"PKRemotePaymentRequest"16
v32@0:8@"PKPaymentHostUpdate"16@"PKRemotePaymentRequest"24
v32@0:8@"PKPaymentClientUpdate"16@"PKRemotePaymentRequest"24
v32@0:8@"PKPayment"16@"PKRemotePaymentRequest"24
v32@0:8@"PKPaymentAuthorizationResult"16@"PKRemotePaymentRequest"24
v24@0:8@"PKIDSManager"16
^{CGImage=}48@0:8@16{CGSize=dd}24@40
v32@0:8@16@?24
@"NSArray"24@0:8@"PKIDSManager"16
@"PKPaymentPass"24@0:8@"PKIDSManager"16
B24@0:8@"PKIDSManager"16
@"PKPaymentWebServiceConfiguration"24@0:8@"PKIDSManager"16
^{CGImage=}48@0:8@"NSString"16{CGSize=dd}24@"PKIDSManager"40
v40@0:8@"PKPaymentPass"16@"PKIDSManager"24@?<v@?@"PKPeerPaymentAccount">32
v32@0:8@"PKIDSManager"16@?<v@?@"NSArray">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8@"PDWatchExpressModeStateController"16B24
v32@0:8@"PDDiscoveryManager"16@"NSArray"24
v24@0:8@"PDDiscoveryManager"16
v36@0:8@16B24B28B32
v32@0:8@"PDDefaultPassManager"16@"NSString"24
v36@0:8@"PDDefaultPassManager"16B24B28B32
v40@0:8@16q24q32
v32@0:8@?16@24
v32@0:8Q16@?24
d24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"PDCardFileManager"
@"PDDatabaseManager"
@"PDUserNotificationManager"
@"PDPushNotificationManager"
@"PKSecureElement"
@"PKFieldDetector"
@"PDAssertionManager"
@"PKPaymentTransactionProcessor"
@"PDNotificationServiceCoordinator"
@"PDPaymentWebServiceCoordinator"
@"PDPeerPaymentWebServiceCoordinator"
@"PDApplyManager"
@"PDAccountManager"
@"PDAccountNotificationController"
@"PDAccountAdStatusChangesObserver"
@"PDApplyNotificationController"
@"PDDiscoveryManager"
@"PDRuleManager"
@"PDCloudStoreNotificationCoordinator"
@"PDDeviceRegistrationServiceCoordinator"
@"PKPaymentHostEndpointRegistry"
@"PDNotificationStreamManager"
@"PDWebServicesCoordinator"
@"PKCatalog"
@"PKUsageNotificationServer"
@"PKIDSManager"
@"PDRelevantPassProvider"
@"PDRemoteInterfacePresenter"
@"PDExpressPassManager"
@"PDTransitStateManager"
@"PDSpotlightIndexer"
@"PDDefaultPassManager"
@"PDDevicePasscodeManager"
@"PDTransitNotificationService"
@"PDPassUpgradeController"
@"PDExpressTransitUpgradeController"
@"PDMapsMerchantProcessingService"
@"PKMobileAssetManager"
@"PDXPCEventPublisher"
v24@0:8@"PKWebServiceContext"16
v24@0:8@"PKPaymentWebServiceBackgroundContext"16
v20@0:8B16
@"NSUUID"
@"NSMutableArray"
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSObject<OS_xpc_object>"16@"NSString"24
v52@0:8@16q24B32@36@44
v32@0:8@"PKPaymentWebService"16@"PKPaymentPass"24
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?>32
v40@0:8@"PKPaymentWebService"16@"NSArray"24@"NSString"32
v24@0:8@"PKPaymentWebService"16
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@"<PKCloudStoreCoordinatorDelegate>"32
v52@0:8@"PKPaymentWebService"16q24B32@"NSString"36@"NSUUID"44
v32@0:8@"PKPaymentVerificationObserver"16@"NSString"24
v24@0:8@"PKPaymentVerificationObserver"16
v24@0:8@"NSArray"16
v28@0:8@"NSDate"16B24
B24@0:8Q16
v32@0:8@"PDAssertionManager"16@"PDAssertion"24
v32@0:8@"NSString"16@"PDScheduledActivityCriteria"24
v40@0:8@"NSString"16@"PDScheduledActivityCriteria"24@"<NSObject><NSSecureCoding>"32
@72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24@32@?40
v28@0:8B16@?20
v24@0:8d16
v36@0:8d16d24B32
d16@0:8
v36@0:8@16B24@28
v40@0:8@16q24@?32
v40@0:8q16@24@?32
@"<PDWebServiceCoordinatorPassStore>"
@"PKPaymentWebService"
@"PDPaymentWebServiceArchiver"
@"PKPaymentVerificationObserver"
@"<PKCloudStoreCoordinatorDelegate>"
@"NSHashTable"
@"NSMutableDictionary"
@"<PDXPCEventStreamObserver>"
@28@0:8@16B24
@"NSString"
@"NSLock"
@32@0:8@16q24
v36@0:8Q16B24@?28
v56@0:8@16q24@32@40@?48
v32@0:8@"NSData"16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?Q>24
v40@0:8@"NSString"16@"NSString"24@?<v@?>32
v40@0:8@"NSArray"16@"NSString"24@?<v@?>32
v36@0:8Q16B24@?<v@?@"NSSet"@"PKCatalog">28
v32@0:8Q16@?<v@?@"NSSet">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"Q>32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"PKPass">32
v32@0:8@"NSString"16@?<v@?@"PKPass">24
v32@0:8@"NSString"16@?<v@?@"PKContent">24
v56@0:8@"NSString"16q24@"PKDisplayProfile"32@"NSString"40@?<v@?@"PKImageSet">48
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSData">40
v32@0:8@"NSString"16@?<v@?@"NSData">24
v24@0:8@?<v@?B>16
v48@0:8@"NSString"16@"NSData"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8Q16@?<v@?B>24
v32@0:8Q16@?<v@?Q>24
v24@0:8@?<v@?@"PKPaymentPass">16
v24@0:8@?<v@?@"PKPass">16
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"PKMapsTransitRouteInfo"16@?<v@?@"PKMapsTransitMessage">24
v32@0:8@"NSString"16@?<v@?@"PKPaymentPass">24
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"PKPaymentMarket"16@"NSString"24
v48@0:8@16Q24@32@?40
v48@0:8@"NSSet"16Q24@"NSSet"32@?<v@?B>40
v48@0:8@"NSSet"16Q24@"NSSet"32@?<v@?@"NSSet">40
v40@0:8@"NSString"16@"NSSet"24@?<v@?@"NSSet">32
v40@0:8@"NSString"16@"NSSet"24@?<v@?B>32
v32@0:8@"PKPaymentRequest"16@?<v@?q@"NSString"@"NSError">24
v48@0:8@"NSSet"16Q24@"NSString"32@?<v@?B>40
v32@0:8q16@?24
v40@0:8Q16@24@?32
v64@0:8@16@24@32Q40Q48@?56
v20@0:8i16
v32@0:8@"NSString"16@?<v@?B>24
v32@0:8q16@?<v@?B>24
v40@0:8@"NSString"16q24@?<v@?B>32
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v32@0:8@"PKFieldProperties"16@?<v@?@"NSArray">24
v56@0:8@"NSString"16q24@"PKDisplayProfile"32@"NSString"40@?<v@?@"PKImageSetXPCContainer">48
v40@0:8Q16@"NSString"24@?<v@?>32
v64@0:8@"NSString"16@"PKContact"24@"NSString"32Q40Q48@?<v@?B>56
v32@0:8@"PKPass"16q24
v24@0:8@?<v@?>16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v24@0:8@"PKCatalog"16
v32@0:8@"CLLocation"16@?<v@?@"NSArray"@"NSDictionary">24
v32@0:8@"NSString"16@?<v@?@"PKDiff">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
v32@0:8@"PKPaymentSetupConfiguration"16@?<v@?@"NSArray">24
v40@0:8@"PKPaymentSetupRequest"16@"NSNumber"24@?<v@?B>32
@24@0:8@?16
v64@0:8@16Q24@32@40@48@?56
B40@0:8@16Q24@32
v60@0:8@16Q24@32B40@44@?52
@40@0:8@16@24@32
B32@0:8@16Q24
B40@0:8Q16@24Q32
B56@0:8@16@24@32@40Q48
B32@0:8@16^@24
B40@0:8@16Q24^@32
@"PKEntitlementWhitelist"
@"<PDPassLibraryDelegate>"
Q32@0:8@16Q24
@32@0:8@16Q24
@24@0:8#16
@40@0:8@16q24@32
v32@0:8q16@24
@32@0:8q16@24
v48@0:8@16@24@32^@40
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
@"NSArray"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"^@>24
@32@0:8@"NSString"16@24
@"NSString"24@0:8@"NSString"16
@"NSMutableDictionary"24@0:8@"NSDictionary"16
@"NSString"24@0:8#16
v48@0:8@"NSDictionary"16@24@"NSArray"32^@40
@"SQLiteDatabase"
v32@0:8@16@"NSError"24
v32@0:8@16@"NSArray"24
v32@0:8@"PKPass"16@"PDNotificationService"24
v48@0:8@"PKPass"16@"PKPass"24@"PDNotificationService"32@"PDNotificationService"40
@48@0:8@16@24@32@40
v36@0:8@16@24B32
v44@0:8@16@24Q32B40
v48@0:8@16@24Q32B40B44
v44@0:8@16@24@32B40
B48@0:8@16@24@32B40B44
B44@0:8@16@24@32B40
@"NSSet"
@"PDNetworkTaskManager"
@24@0:8^{_NSZone=}16
v32@0:8^{sqlite3_stmt=}16N^i24
@40@0:8@16@24q32
@"SQLiteQuery"
@"NSArray"
@"SQLitePredicate"
@"SQLiteQueryDescriptor"
v24@0:8#16
q32@0:8@16@24
@56@0:8@16@24@32@40q48
@64@0:8@16@24@32@40@48@56
@20@0:8B16
@48@0:8@16@24^@32q40
v32@0:8^Q16^@24
@"PKExpressTransactionState"
@"NSDate"
v56@0:8@16@24@32@40@48
v68@0:8@16@24B32B36@40@48B56@60
@"<PDTransitStateManagerDelegate>"
@48@0:8@16q24@32@40
@20@0:8i16
@36@0:8@16Q24i32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8B16B20
v32@0:8B16B20q24
q32@0:8B16B20q24
v44@0:8@16B24d28@36
B36@0:8@16B24@28
v28@0:8q16B24
B56@0:8^@16^@24@32d40@48
@"CLLocationManager"
@"CLLocation"
@"NSObject<OS_dispatch_source>"
@"SBSCardItemsController"
@"<PDRelevantPassProviderDelegate>"
@"PKPass"
v32@0:8@"PKPass"16@?<v@?B@"NSError">24
@"PKPass"24@0:8@"NSString"16
v24@0:8@"PKPass"16
@"NSURL"16@0:8
@48@0:8@16@24Q32@40
@32@0:8@16^@24
@40@0:8@16^@24^@32
@"PDUbiquityManager"
@"NSURL"
@"<PDCardFileManagerDelegate>"
@"PKAccount"
@"PKPeerPaymentAccount"
@64@0:8@16Q24@32@40@48@56
@56@0:8@16@24Q32@40@48
@52@0:8@16@24@32Q40B48
@60@0:8@16@24@32@40Q48B56
@"PKPaymentTransaction"52@0:8@"PKPaymentTransaction"16@"NSString"24@"PKPaymentApplication"32Q40B48
@"NSSet"20@0:8B16
@"PKPaymentTransaction"24@0:8@"NSString"16
@"PKAccount"24@0:8@"NSString"16
@"PKAccountEvent"24@0:8@"NSString"16
v24@0:8@"PKAccountEvent"16
v32@0:8@"NSString"16q24
B24@0:8@"NSString"16
@"PKPeerPaymentAccount"16@0:8
@"PKPaymentTransaction"60@0:8@"PKPaymentTransaction"16@"NSString"24@"NSString"32@"PKPaymentApplication"40Q48B56
@"PKPaymentApplication"24@0:8@"NSString"16
@"NSSet"24@0:8@"NSString"16
@"PKPeerPaymentAccount"24@0:8@"PKPeerPaymentAccount"16
Q24@0:8@16
Q32@0:8q16@24
@40@0:8q16@24@32
@48@0:8@16Q24@32@40
@56@0:8@16Q24@32@40@48
v44@0:8^@16^@24Q32B40
v32@0:8@16^@24
B32@0:8Q16@24
B48@0:8^Q16^@24@32@40
v48@0:8Q16@24@32@40
B40@0:8^@16^@24@32
B56@0:8^@16^@24^@32^@40@48
B48@0:8^@16^@24^d32@40
v40@0:8@16d24@32
v28@0:8B16@20
@32@0:8Q16@24
Q32@0:8Q16@24
v40@0:8Q16Q24@32
v60@0:8@16@24@32@40B48@?52
v64@0:8@16@24@32@40B48B52@?56
@44@0:8@16@24@32B40
B40@0:8@16@24@32
@40@0:8@16@24B32B36
@44@0:8@16@24Q32B40
@72@0:8@16Q24Q32@40@48q56q64
@56@0:8@16@24Q32Q40q48
@56@0:8@16Q24Q32Q40q48
@72@0:8@16q24Q32Q40@48@56q64
@48@0:8@16Q24Q32q40
@60@0:8@16Q24Q32@40Q48B56
@40@0:8Q16Q24q32
@40@0:8@16@24d32
v32@0:8^@16^@24
@48@0:8q16@24@32@40
@64@0:8@16@24@32@40q48Q56
@64@0:8@16@24@32@40Q48q56
@44@0:8Q16@24@32B40
@40@0:8q16@24Q32
@"<PDDatabaseManagerDelegate>"
@"<PDDatabaseManagerWebServicesDelegate>"
@"PDObjectSettingsManager"
@"<PDDatabaseManagerPaymentServicesDelegate>"
@"<PDDatabaseManagerNotificationServicesDelegate>"
@?16@0:8
@"PKExpressPassInformation"
@"NSData"
@56@0:8@16@24@32@40@48
v40@0:8@16^{NSDictionary=#}24@?32
^{NSDictionary=#}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"PDNotificationStreamRegistrationState"
@44@0:8@16B24q28@36
B24@0:8@?16
@"<PDNetworkTaskDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
q24@0:8@16
r^{?=Qd}16@0:8
@"<PDNetworkTaskManagerProtocol>"
@"PDSecureConnectionManager"
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"NSURLSession"
@"NSURLSessionTask"
@"NSMutableData"
@"NSHTTPURLResponse"
@"NSURLRequest"
v52@0:8@16@24@32B40q44
v44@0:8@16@24B32q36
v52@0:8@"NSString"16@"NSString"24@"PDWebService"32B40q44
v44@0:8@"NSString"16@"NSString"24@"PDWebService"32B40
v44@0:8@"NSString"16@"PDWebService"24B32q36
v40@0:8@"NSString"16@"NSString"24@"PDWebService"32
@"NSOperationQueue"16@0:8
v24@0:8@?<v@?@?<v@?>>16
v24@0:8@"NSURL"16
v24@0:8@"NSSet"16
v24@0:8@"NSFileVersion"16
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@"NSURL"24
v32@0:8@"NSURL"16@"NSFileVersion"24
v20@0:8I16
@"NSOperationQueue"
@"NSCountedSet"
@"<PDUbiquityManagerDelegate>"
@"PKFieldProperties"
@56@0:8@16@24@32Q40@48
@"SBSRemoteAlertDefinition"
@"SBSRemoteAlertConfigurationContext"
@"SBSRemoteAlertActivationContext"
@"<SBSRemoteAlertHandleObserver>"
@"SBSRemoteAlertHandle"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8@"PKFieldDetector"16@"PKFieldProperties"24
v24@0:8@"PKFieldDetector"16
v88@0:8@16@24@32@40@48@56@64@72@?80
v64@0:8@16@24Q32@40@48@?56
B32@0:8Q16^@24
@"BKSProcessAssertion"
@"BKSApplicationStateMonitor"
v32@0:8@"PDAccountManager"16@"PKAccount"24
v40@0:8@"PDAccountManager"16@"PKAccount"24@"PKAccount"32
v32@0:8@"PDAccountManager"16@"PKAccountEvent"24
v40@0:8@"PDAccountManager"16@"NSArray"24@"NSString"32
v32@0:8@"PDAccountManager"16@"NSString"24
v36@0:8@16B24@?28
v44@0:8@16B24@28@?36
v72@0:8@16@24@32@40q48Q56@?64
v48@0:8q16@24@32@?40
v40@0:8@16B24B28@?32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"PKAccount"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"PKAccount">24
v36@0:8@"NSString"16B24@?<v@?@"PKAccount"@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"PKAccount"16@?<v@?@"PKAccount">24
v32@0:8Q16@?<v@?@"PKAccount"@"NSError">24
v40@0:8@"PKAccountAction"16@"NSString"24@?<v@?@"PKAccount"@"NSError">32
v44@0:8@"NSString"16B24@"NSString"28@?<v@?@"NSError">36
v40@0:8@"PKAccountPreferences"16@"NSString"24@?<v@?@"PKAccountPreferences"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"PKAccountPreferences"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"CNContact"@"NSError">28
v40@0:8@"NSString"16@"CNContact"24@?<v@?@"CNContact"@"NSError">32
v48@0:8@"PKPhysicalCardOrder"16@"NSString"24@"PKPaymentDeviceMetadata"32@?<v@?@"PKApplePayTrustSignatureRequest"@"PKAccountWebServiceRequestPhysicalCardRequest"@"PKPhysicalCard"@"PKAccount"@"NSError">40
v40@0:8@"PKAccountWebServiceRequestPhysicalCardRequest"16@"PKApplePayTrustSignature"24@?<v@?@"PKPhysicalCard"@"PKAccount"@"NSError">32
v56@0:8@"PKPhysicalCardAction"16@"NSString"24@"NSString"32@"PKPaymentDeviceMetadata"40@?<v@?@"PKApplePayTrustSignatureRequest"@"PKAccountWebServicePhysicalCardActionRequest"@"NSSet"@"PKAccount"@"NSError">48
v40@0:8@"PKAccountWebServicePhysicalCardActionRequest"16@"PKApplePayTrustSignature"24@?<v@?@"NSSet"@"PKAccount"@"NSError">32
v32@0:8Q16@?<v@?@"PKPhysicalCard">24
v40@0:8@"NSString"16@"NSString"24@?<v@?q>32
v32@0:8@"NSString"16@?<v@?@"NSSet"@"NSError">24
v72@0:8@"NSString"16@"NSArray"24@"NSDate"32@"NSDate"40q48Q56@?<v@?@"NSArray"@"NSError">64
v40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"PKAccountEvent"@"NSError">24
v40@0:8q16@"NSString"24@?<v@?@"PKVirtualCard"@"PKAccount"@"NSError">32
v48@0:8q16@"NSString"24@"NSString"32@?<v@?@"PKVirtualCard"@"PKAccount"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"NSSet"@"PKAccount"@"NSError">24
v40@0:8@"PKVirtualCard"16@"NSData"24@?<v@?@"PKVirtualCardCredentials"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"PKVirtualCard"16@?<v@?>24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSString"16@"NSDate"24@"NSDate"32@?<v@?@"NSArray"@"NSError">40
v32@0:8@"PKAccount"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSString"16B24B28@?<v@?@"NSArray"@"NSError">32
v32@0:8@?16@?24
@"PKVirtualCard"
v52@0:8@16@24@32B40@?44
@"NSDictionary"
@"PKPaymentTransaction"
@"NSDecimalNumber"
@40@0:8@16@24Q32
@"PKCurrencyAmount"
@44@0:8@16Q24Q32B40
@"PKAccountEvent"
@"PKPaymentTransactionQuestion"
@56@0:8@16@24@32B40B44@48
@"NSDateComponents"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v40@0:8@16Q24@?32
@"UNUserNotificationCenter"
@"<PDUserNotificationCenterDelegate>"
@"PDUserNotificationIconStore"
v36@0:8I16Q20@28
@"NSObject<OS_xpc_event_publisher>"
B24@0:8@"PDUserNotificationCenter"16
v24@0:8@"PDUserNotificationCenter"16
@"PDUserNotificationCenter"
@"<PDUserNotificationManagerDelegate>"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_group>"
@"NSMapTable"
v48@0:8@"PKPaymentRequest"16@"NSString"24@"NSNumber"32@?<v@?B@"NSError">40
v40@0:8@"NSXPCListenerEndpoint"16@"NSString"24@?<v@?B>32
v32@0:8@"NSString"16@?<v@?B@"NSXPCListenerEndpoint">24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8Q16@?<v@?B@"NSURL">24
v24@0:8@?<v@?BQ>16
v24@0:8@?<v@?@"PKPaymentHardwareStatus">16
v32@0:8@"NSString"16@?<v@?q>24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"PKAMPCardRegistrationResponse">32
v40@0:8@"NSString"16@"PKPaymentMerchantSession"24@?<v@?B@"PKPayment">32
@"<PDInAppPaymentServiceDelegate>"
@"PDWebService"
@48@0:8@16@24@32Q40
@"PDPassUpdateContext"
@64@0:8@16@24@32@40Q48Q56
@"PKContact"
@"PDNotificationService"
@64@0:8@16@24@32@40Q48@56
@72@0:8@16@24@32@40Q48Q56@64
@"PDNetworkConnectionTask"
@72@0:8@16@24@32@40Q48@56@64
@80@0:8@16@24@32@40Q48@56Q64@72
v40@0:8Q16@24@32
Q40@0:8@16@24@32
v32@0:8@"PDApplyManager"16@"PKFeatureApplication"24
v40@0:8@"PDApplyManager"16@"PKFeatureApplication"24@"PKFeatureApplication"32
v56@0:8@16Q24Q32q40@?48
v72@0:8@16Q24Q32@40@48q56@?64
v80@0:8@16Q24Q32@40@48q56q64@?72
v68@0:8@16Q24Q32@40Q48B56@?60
v72@0:8@16@24@32@40Q48q56@?64
v48@0:8Q16Q24q32@?40
v64@0:8@16@24Q32Q40q48@?56
v64@0:8@16Q24Q32Q40q48@?56
v80@0:8@16q24Q32Q40@48@56q64@?72
v56@0:8Q16Q24@32@40@?48
v32@0:8@"PKPaymentWebServiceContext"16@?<v@?>24
v24@0:8@?<v@?@"PKPaymentWebServiceContext">16
v32@0:8@"NSString"16@?<v@?>24
v56@0:8@"NSString"16Q24Q32q40@?<v@?@"NSSet">48
v72@0:8@"NSString"16Q24Q32@"NSDate"40@"NSDate"48q56@?<v@?@"NSSet">64
v80@0:8@"NSString"16Q24Q32@"NSDate"40@"NSDate"48q56q64@?<v@?@"NSSet">72
v68@0:8@"NSString"16Q24Q32@"NSCalendar"40Q48B56@?<v@?@"NSArray">60
v72@0:8@"NSString"16@"NSDate"24@"NSDate"32@"NSCalendar"40Q48q56@?<v@?@"NSArray">64
v48@0:8Q16Q24q32@?<v@?@"NSSet">40
v64@0:8@"NSString"16@"NSString"24Q32Q40q48@?<v@?@"NSSet">56
v64@0:8@"NSString"16Q24Q32Q40q48@?<v@?@"NSSet">56
v64@0:8@"NSString"16@"PKMerchant"24Q32Q40q48@?<v@?@"NSSet">56
v80@0:8@"NSString"16q24Q32Q40@"NSDate"48@"NSDate"56q64@?<v@?@"NSSet">72
v32@0:8@"NSString"16@?<v@?@"PKPaymentTransaction">24
v32@0:8@"NSString"16@?<v@?@"NSString">24
v32@0:8@"NSString"16@?<v@?@"PKExpressPassInformation">24
v32@0:8q16@?<v@?@"NSSet">24
v40@0:8@"PKExpressPassInformation"16@"NSData"24@?<v@?B@"NSSet">32
v32@0:8@"PKExpressPassInformation"16@?<v@?@"NSSet">24
v40@0:8@"PKExpressPassInformation"16@"NSSet"24@?<v@?@"NSSet">32
v32@0:8q16@?<v@?B@"NSSet">24
v32@0:8@"NSString"16@?<v@?B@"NSSet">24
v24@0:8@?<v@?B@"NSData"@"NSData">16
v48@0:8@"PKPaymentTransaction"16@"NSString"24@"PKPaymentApplication"32@?<v@?@"PKPaymentTransaction">40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"PKPaymentTransaction">40
v56@0:8Q16Q24@"NSString"32@"NSString"40@?<v@?@"PKDisbursementVoucher">48
v32@0:8@"NSString"16@?<v@?@"PKFeatureApplication">24
v32@0:8@"PKApplyWebServiceApplyRequest"16@?<v@?@"PKApplyWebServiceApplyResponse"@"NSError">24
v32@0:8@"PKApplyWebServiceDocumentSubmissionRequest"16@?<v@?@"PKApplyWebServiceApplyResponse"@"NSError">24
v32@0:8@"PKApplyWebServiceTermsRequest"16@?<v@?@"PKApplyWebServiceApplyResponse"@"NSError">24
v32@0:8@"PKApplyWebServiceApplicationDeleteRequest"16@?<v@?@"NSError">24
v48@0:8@"NSString"16Q24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSString"16@?<v@?@"NSSet">24
v24@0:8@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">16
v32@0:8@"PKPaymentProductsActionRequest"16@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">24
v40@0:8@"NSString"16q24@"NSString"32
@"PKTransitAppletState"
d40@0:8d16@24d32
q24@0:8d16
@72@0:8@16@24@32@40q48Q56@64
Q32@0:8@16@24
v48@0:8@16q24@32@40
B24@0:8^{sqlite3_stmt=}16
v40@0:8^{sqlite3_stmt=}16^B24^B32
i24@0:8@16
^{sqlite3_stmt=}28@0:8@16B24
^{sqlite3=}
^{__CFDictionary=}
B40@0:8@16q24@32
B32@0:8q16@24
@"NSFileManager"
@"NSTimer"
@"PKPaymentMarket"
v40@0:8@"NSString"16q24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"PKDiscoveryArticleLayout"@"NSError">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSError">32
v40@0:8@"NSString"16Q24@?<v@?@"NSArray"@"NSError">32
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"PKRule"16@?<v@?@"NSError">24
v32@0:8@"NSSet"16@?<v@?@"NSDictionary"@"NSError">24
B24@0:8^@16
B32@0:8^@16^@24
B28@0:8S16@20
@"<PDWatchExpressModeStateControllerDelegate>"
v56@0:8@16@24{CGSize=dd}32@?48
v32@0:8@"PKRemotePaymentRequest"16@?<v@?@"NSError">24
v40@0:8@"PKPaymentHostUpdate"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v40@0:8@"PKPaymentClientUpdate"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v40@0:8@"PKPayment"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v40@0:8@"PKPaymentAuthorizationResult"16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v56@0:8@"PKRemotePaymentInstrument"16@"PKRemoteDevice"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v40@0:8@"PKRemoteDevice"16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"PKRemotePaymentRequest"24@?<v@?@"NSError">32
v36@0:8@"PKVirtualCard"16B24@?<v@?@"NSError">28
v40@0:8q16@24@32
v40@0:8q16@"NSString"24@"NSDictionary"32
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v28@0:8B16B20B24
@"<PDDefaultPassManagerDelegate>"
B32@0:8@16q24
v40@0:8Q16q24Q32
@32@0:8@16d24
B32@0:8@16d24
@44@0:8@16@24i32@36
@36@0:8@16i24@28
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@"CSSearchableIndex"
v48@0:8Q16@24@32@?40
v24@0:8@?<v@?@"PKTrustedDeviceEnrollmentInfo"@"PKTrustedDeviceEnrollmentInfo">16
v48@0:8Q16@"NSString"24@"NSData"32@?<v@?@"NSString"Q@"NSData"@"NSError">40
v40@0:8Q16@24Q32
Q24@0:8#16
v40@0:8@"PDPeerPaymentWebServiceCoordinator"16@"PKPeerPaymentAccount"24@"PKPeerPaymentAccount"32
v48@0:8@16@24@?32@?40
@"<PDDiscoveryManagerDelegate>"
@40@0:8@16Q24Q32
@40@0:8Q16Q24@32
@56@0:8{?=dddd}16@48
@28@0:8B16@20
@40@0:8@16@24^@32
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@24@0:8^@16
@"NSPredicate"
@"NSError"
v48@0:8@16Q24@32q40
@56@0:8@16@24Q32Q40@48
@56@0:8@16Q24Q32@40@48
@80@0:8@16@24Q32Q40@48@56q64q72
q64@0:8@16@24Q32Q40@48@56
@64@0:8@16@24@32Q40Q48q56
@64@0:8@16Q24@32Q40Q48q56
@80@0:8@16q24@32Q40Q48@56@64q72
@56@0:8@16@24q32@40@48
@36@0:8@16B24@28
Q48@0:8@16@24Q32@40
B40@0:8@16@24Q32
@48@0:8@16@24@32d40
@28@0:8Q16B24
@56@0:8@16@24d32@40@48
r@)\
MbP?
passd is starting up...
passd initialization: Previously initialized ignoring request
Updated file protection state : %d
Updated icloud restore state : %d
passd initialization: criteria satisfied
passd initialization: waiting for: iCloud restore complete: %d & File protection enabled: %d & Hardware check: %d
Adding connection from pid: %d passd is initalized
Adding connection from pid: %d passd is waiting for initalization. Performing best effort to initalize
PDPassLibrary (%p:%d): connection invalidated
PDPassLibrary (%p:%d): connection interrupted
PDPaymentService (%p:%d): connection invalidated
PDPaymentService (%p:%d): connection interrupted
PDInAppPaymentService (%p:%d): connection invalidated
PDInAppPaymentService (%p:%d): connection interrupted
PDContinuityPaymentService (%p:%d): connection invalidated
PDTrustedDeviceEnrollmentInfoProvider (%p:%d): connection invalidated
PDTrustedDeviceEnrollmentInfoProvider (%p:%d): connection interrupted
PDPeerPaymentService (%p:%d): connection invalidated
PDPeerPaymentService (%p:%d): connection interrupted
PDCloudStoreService (%p:%d): connection invalidated
PDCloudStoreService (%p:%d): connection interrupted
PDDeviceRegistrationService (%p:%d): connection invalidated
PDDeviceRegistrationService (%p:%d): connection interrupted
PDAccountService (%p:%d): connection invalidated
PDAccountService (%p:%d): connection interrupted
PDDiscoveryService (%p:%d): connection invalidated
PDDiscoveryService (%p:%d): connection interrupted
Old Payment Application State: %@
New Payment Application State: %@
Updating Pass: %@
Inserting Pass %@
Pass written. notificationsSuppressedForPass: %@
Could not delete spotlight index for pass %@ with error: %@
%@: received pass with uniqueID:%@ did update remote assets. sending notification
A payment application was added for pass with uniqueID %@
posting PKDistributedNotificationPaymentTransactionReceived
Submitting device score for transaction with service identifier %@
Updating local database after device submitted the device score identifiers.
Device score identifier submission failed with error: %@
Not submitting device score for transaction with service identifier %@, because another request is in progress.
Adding fraud user notification for transaction with a question %@
Adding user notification for accepted transaction %@
Adding user notification for expired transaction %@
Adding user notification for rejected transaction %@
Adding user notification for declined transaction %@
Not creating notification for transaction %@ because transaction status changed more than 1 day ago.
Transaction not suppressed with event: %@
Redemption event is of incorrect type: %@
Suppressing transaction for identifier: %@
Unsuppressing transaction for identifier: %@
Updating redemption type: %@ for transaction %@
Not displaying notification for approved peer payment transaction without a status changed and creation date. StatusChangedDate: %@ CreationDate: %@
Not displaying notification for approved peer payment transaction with a status changed date %.1f seconds after creation date. StatusChangedDate: %@ CreationDate: %@
Removing and suppressing future peer payment balance reminders
Scheduling/updating peer payment balance reminder
Adding user notification reminder for pending transaction %@
Inserting new lowBalance notification %@ for pass %@ because new balance dropped below threshold. (threshold %@, newBalance: %@, oldBalance: %@)
Dropping current lowBalance notifications for pass %@ because new balance became above threshold. (threshold %@, newBalance: %@)
Ignoring lowBalance evaluation for pass %@. (threshold %@, newBalance: %@, oldBalance: %@)
Migrating data...
registerPaymentListenerEndpoint saved listenerEndpoint: %@
takeListenerEndpointForHostIdentifier returns listenerEndpoint: %@
Received continuity notification
Presented continuity view
Keybag unlocked notification received
Processing Lost Mode Exit
Starting FMDFMIP lost mode exit.
Failed to un-suspend passes from Lost Mode. Asking server for latest versions. Error: %@
Completed FMDFMIP lost mode exit.
No Cards. Skipping Lost Mode Exit
Lost Mode Is Active
Transaction %@ was part of initial fetch, skip.
Found an existing active user notification for transaction. Updating contents but not re-rolling banner.
Creating new notification for transaction or update.
Found an existing user notification which should be removed
Found an existing, active user notification. Updating contents but not re-rolling banner.
Not creating notification for transaction update: %@
Not creating merchant transaction notification for transaction that requested suppress notifications
Not creating merchant transaction notification for peer payment transaction %@.
Not creating transaction notification for bill payment transaction %@.
Not creating merchant transaction notification for zero dollar amount transaction %@.
Not creating merchant transaction notification for transaction %@ because it does not have a transactionDate.
Not creating merchant transaction notification for transaction %@ because it has been more than 1 day since the transaction changed.
Not creating %{public}@ for transaction that did not have a relevant update reason set. Update Reasons: %{public}@. Transaction: %@
Not creating %{public}@ for transaction that was part of the initial cloudkit sync. Update Reasons: %{public}@. Transaction: %@
Not creating %{public}@ for transaction that was part of initial notificaiton service update. Update Reasons: %{public}@. Transaction: %@
Not creating %{public}@ for transaction that was reprocessed for merchant cleanup. Update Reasons: %{public}@. Transaction: %@
Received request for payment passes
Received request for thumbnail image for pass: %@
Database integrity problem found.
Database contained extraneous (or duplicate) Unique Identifier: %@
Database was missing uniqueID: %@
Migrating keychain to version 2
Migrating keychain to version 3. Inferring recents update
Migrating default shipping address
Migrating billing address for payment pass: %@
Adding service name to keychain items
Migrating keychain key: %@
Keychain migration complete
Validating Secure Element access policies...
REMOVING ALL PAYMENT PASSES DUE TO: %{public}@!
Secure Element access is unknown!
Secure Element Pairing State: %@
Secure Element access is valid.
Ignoring Secure Element Access Policy validation as there are no payment passes available.
Ignoring Secure Element Access Policy validation due to payment demo mode.
Checking migration of primary region topic
Updating secure element primaryRegionTopic to :%@
NO PAYMENT PASSES EXIST- ORPHANED APPLETS FOUND IN PAIRED SECURE ELEMENT! MARKING APPLETS FOR DELETION!
WARNING: orphaned locked applets detected in unpaired SE...performing temporary workaround.
Aggregate dictionary pass count log: %lu
Performing post-boot work
Secure element in fail-foward
Notifying user of fail-forward
notify'd! with %lu
Error: We don't support archiving nil contexts!
No consistency check scheduled... scheduling for %@
Configure payment session complete with error: %@
Deleting shared webservice
 (reason: '%@')
Recreating shared webservice
%s archiving context without deviceID: %@
Error: Refusing to update webservice context with nil.
Submitting verification code (%@) for pass (%@,%@)
Verification code accepted
Verification code FAILED
Consistency check already in progress...
Processing VAS Transaction for Merchant ID: %@
PDPaymentWebServiceCoordinator preparing payment setup features
Wallet is restricted, returning no supported features
Already Fetching supported features queueing reply
Error: Feature identifier: %@ could not be converted to setup type - skipping
Strict product check means feature identifier: %{public}@ is an unsupported setup feature
Product with feature identifier: %{public}@ is in state: %{public}@ - means is an unsupported setup feature
Returning payment setup features :%@ to completion handler count :%lu
Payment Web Service push topics: %@
Received push for push topic: %@ userInfo:%@
passd requesting device check in from push
Product update push received
Finished updating products for push
Applying push notification token: %@
New push token is different than current push token: %@
Reregistering with a new push token
Applied token: %@
Payment pass added. Checking if SE is already personalized
SE is already perso'd for %@:%@ aid: %@, fetching passes
SE is not personalized yet.
Comparing server's expectation of installed passes with local passes
%@:%@ not found in list of passes server expects to be on device for region %@. Redownloading
The broker is already registered
Registering with the broker at: %@
Finished registering with the broker with success %{public}@
passd cannot start device check in as we are not registered yet
Region: %@ requires device check in
No regions require device check in
Device check in already scheduled: %@
passd scheduling device check in: %@
Device check in required as no deviceCheckInPushTopic found in context
Device check in for region: %@ is required as %@ is not equal to %@
Device check in for region: %@ is not required as %@ is equal to %@
Unscheduling device check in
passd - perform device check in called
Device check in not running starting immediately
Device check in already running waiting
Performing device check in task
passd cannot start device check in as there is no context
Check in is disabled for: %@ - wait for next scheduled task run and check again
Region: %@ does not require device check in
Device check in task was cancelled - skipping context update
All device check in tasks are complete
Region: %@ requires user initalited device check in as it was waiting for auth
Requesting grand slam token renew for device check in
Grand slam token renew for device check in success
Grand slam token renew for device check in failed
passd found outstanding action to perform: %ld for region: %@
passd requesting device check in for region: %@
Device check in requested reregister for: %@
Device check in requested registration update for: %@
Device check in requested configuration update for: %@
Device check in requires auth for: %@
No action taken from device check in for: %@
Foreground application is observing for verification code
Background verification observer '%@' timed out
Device needs to register; we will not sync with TSM
Scheduling consistency check for %@
Ignoring request to schedule consistency check for %@
Handling Scheduled Activity: %@
Provisioning is in progress, rescheduling consistency check
Couldn't find VAS Transaction in our database
passd requesting device check in from scheduled activity
Scheduling verification check for %@ on %@
Couldn't copy the VAS pass to our cache
Did not find a localized key for this string not showing the message
No valid message found in response for requestID :%@
No requestID in response
Unsupported action found:%@ for requestID:%@
Fetching passes if necessary for push topic %@.
Not background downloading passes for push topic %@. Needs update: %@, last request date %@
Checking verification status for %@
Posting verification reminder notification for %@
Payment setup product configuration cache not yet populated
Payment setup product configuration cache is dity
Updating payment setup product configuration cache
Returning cached payment setup product configurations
Product Added: %@ state: %@
Product Deleted: %@ state: %@
Product Updated: %@ new state: %@ old state: %@
Could not identify feature identifer for product identifier: %@
Warning: Forcibly removing products cache
PDXPCEventStreamsManager: deferral count %{public}lu.
PDXPCEventStreamsManager: delivering deferred events for all streams.
PDXPCEventStreamManager: Registering for stream %{public}@.
PDXPCEventStreamManager (%{public}@): (deferred delivery) XPC wake for %s.
PDXPCEventStreamManager (%{public}@): XPC wake for %s.
PDXPCEventStreamManager (%{public}@): (deferred) XPC wake for %s.
%@: Relevant unique ID does not exist: %@
%@: Not entitled to perform
%@: Relevant unique ID not passed in
Not supported in region, not opening setup
PKPaymentSetupConfiguration cannot be processed
PDPassLibrary requesting payment setup features
Returning payment setup features from remote devices :%@
Not able to return payment setup features
Not able to present payment setup features
Client is not entitled for method: %s
Must have payment all access entitlement
Error: Unsupported payment request type being checked
Warning: %@ failed to determine remote application identifier for remote process with pid: %i
canAddPass: %{public}@ with maxCards: %ld, passCount: %ld - seAvailable: %{public}@, isInFailForward: %{public}@
Notice: not entitled for %@
passd was asked for the peer payment pass uniqueID by an unentitled process. Refusing.
TransitMessage: Transit messaging not supported for device
TransitMessage: Determining message for route with transit networks %@; cost %@
TransitMessage: No matching transit passes available, checking for DCI  or upgrade message
TransitMessage: Matching transit passes found
TransitMessage: Composing message for partner %@
TransitMessage: Checking for available open loop upgrades
TransitMessage: No default payment pass available
TransitMessage: Default pass is not supported for requested transit networks
TransitMessage: Default pass is not upgradeable for express
TransitMessage: Attempting to upgrade pass %@ 
TransitMessage: Composing message for upgraded pass %@
TransitMessage: No message because upgrade failed
TransitMessage: No message, upgradeable pass not found
TransitMessage: No message needed 
passd was asked to check for transit notifications by an unentitled process. Refusing.
TransitMessage could not find payment pass for uniqueID:%@. fail to post upgraded pass notification
passd was asked to post upgraded pass notification by an unentitled process. Refusing.
Notice: Didn't find a db pass with with type: %@ and serial number: %@. Falling back to default %{public}@ settings.
passd was asked to update settings for object by an unentitled process. Refusing.
passd was asked to reschedule commute plan renewal reminder by an unentitled process. Refusing.
Cannot add pass: pass cannot be instantiated from data.
passd was asked to migrate data by an unentitled process. Refusing.
passd checked if user supports disbursements by an unentitled process. Refusing.
Unable to write pass: %{public}@
passd was asked for a pass diff by an unentitled process. Refusing.
passd was notified that account was deleted by an unentitled process. Ignoring.
passd was asked to nuke its db and exit by an unentitled process. Refusing.
passd was asked to spotlight reindex by an unentitled process. Refusing.
passd was asked to spotlight delete index by an unentitled process. Refusing.
%@: Unrecognized client key: %@
Entity does not currently exist in the database. Returning new %{public}@ instance with pid: %lld.
Removing all notification service tasks
Processing Push for Topic: %@
Enabled Notification Services Push Topics: %@
%@ will retry after %g seconds
Re-Authenticating due to Request from Previous Task:%@
Restarting Registration Task for Pass: %@ Notification Service: [%@]
Received registration status update request for Pass with Unique Identifier: %@ with Notification Service: [%@] from: %@ to %@
Attempting to register Pass with Unique Identifier: %@ with Notification Service: [%@]
Signed Registration Data: %@
Failed to Generate Signed Registration Data!
Signing Registration Data: %@
Could not sign data with SE lookup via application ID, attempting again with default SE since *** IGNORING SIGNATURES ***
Attempting to de-register Pass with Unique Identifier: %@ with Notification Service: [%@]
Clearing stored state for Pass with Unique Identifier: %@ with Notification Service: [%@]
Performing Completion Task After Successful Registration: %@
Too many balances provided for pass, skipping
Balance's related pass could not be found
Balance missing identifier
Balance missing value
Balance missing lastUpdate, synthesizing
Cancelling All Tasks for Payment Application: [%@], Notification Service: [%@]
Processing Felica Applet State For Stations: %@
Stations Update Response: (%lu, %lu), Application: %@
An Error Occurred While Performing Stations Update (%@): %@
Received unhandled distributed notification name %@, object %@, userInfo %@
Handle SE Event From TSM for AID: %@.
PDTransitStateManager: %@ posseses applet data. Updating...
Recovering missed transactions for express transit pass with unique identifier: %@
Relevant cards expiration timer fired.
Tear down exit fence timer fired. Clearing persisted location and recomputing relevant cards.
Delaying relevance update %ld, %ld, %ld
Relevance update already pending for %ld, %ld, %ld
Delaying relevance update because an interface is active.
Scheduling Activity to to expire relevant passes at around %@
Too many beacons to fence each one separately; using region fence instead.
Monitoring circular region %@
Monitoring region with beacon UUID %@
Scheduling Activity to tear down exit fences at around %@
Unscheduling exit fences and background timers.
Stopped monitoring region %@.
Starting location search (%s)
   Cached location wasn't good enough, START SEARCHING with accuracy %f
Handling new location from '%@': %@
   Not good enough, we'll hold onto it and keep searching
   %@, stopping search
Stopping location search
Beginning location search timer with duration %g
Search timer expired. Using %@
Starting beacon search
Got beacons %@
Stopping beacon search
Beginning beacon search timer with duration %g
Beacon search timer fired; stopping beacon search.
Nearby pass locations: %@
   %@:%@ card location %@ MATCHES because %g meters away. r: %g
   %@:%@ card location %@ does NOT match because %g meters away. r: %g
   %@:%@ card closest location: %@ (%g meters away)
   %@:%@ card beacon %@ MATCHES - UUID: %@ Major: %@ Minor: %@
   %@:%@ card beacon %@ DOES NOT match - UUID: %@ Major: %@ Minor: %@
Sending cards to SB: %@
Exit fence triggered for region %{public}@.
Location manager ranging beacons failed with error: %@
Location manager failed with error: %@
Change detected %{public}@, Relevancy auth status: %ld, Passbook auth status: %ld
exception trying to read %@. The data should be discarded. %@
PDRelevantPassProvider: error trying to read %@. The data should be discarded. %@.
Marking express upgrade attempt status as %ld
User has no default payment pass, skipping upgrade.
Default pass has no express upgrade
Set default payment pass as express.
Failed to set default payment pass as express.
Failed to upgrade default payment pass to express: %@ %@
Pass ugprade failed because an assertion could not be acquired
Passbook is not available - sync disabled
Migrating extended attributes for %@...
Migrating image archive for %@...
Card file manager unable to instantiate object with unique ID %@
Skipping delete of missing object with uniqueID: %@ due to signature check being unreachable
Content for object with unique ID %@ unavailable at %@
CardFileManager unable to load content for uniqueID %@
CardFileManager is removing invalid pass with uniqueID %@
Failed to move invalid card for unique id %{public}@
Not saving card with unique ID %@. Error: %@
Nuking cards!
%@: requested to perform scheduled activity with identifier:%@
%@: Finished handle scheduled activity with identifier:%@
Unable to enumerate cards directory: %@
Unable to enumerate cache directory: %@
Unable to remove obsolte cache: %@
Removed obsolete cache: %@
Unable to remove cache directory: %@
Removed cache directory with no matching pass: %@
Revocation check for pass [%@] succeeded with result: %@
Certificate revoked for pass (%@)
Revocation check for pass [%@] failed
Failed to instantiate card from %@: %@
Existing pass sequence counter %lu is greater than incoming pass sequence counter %lu. Ignoring.
Card was removed: %@
Error removing card: %@
%@: requested to update cache for object with uniqueID:%@
%@: fail to load pass with UniqueID:%@ error:%@
card updated via ubiquity: %@
card update via ubiquity FAILED: %@
card NOT updated via ubiquity - manifest hashes are equivalent: %@
card removed via ubiquity: %@
catalog received via ubiquity
---> catalog updated
---> catalog not updated - equivalent to existing catalog
Received notification of filesystem change at watched URL.
%@: requested to evaluate Missing remote assets for pass:%@ with uniqueID:%@
%@: Pass with uniqueID:%@ has all remote assets downloaded:%d
%@: requested to cancel outstanding assets downloads for pass with unique ID:%@
%@: requested to remove pass unique ID:%@
%@: evaluate download missing assets activity
%@: found %lu passes with missing remote assets with maximum retries count:%lu
%@: Missing assets maintenance activity scheduled
%@: Missing assets maintenance exist, we don't need to schedule a new one
%@: Removed Missing assets maintenance activity
%@: requested download missing assets
%@: we have pending UniqueIDs to process.
%@: Will download remote missing assets from passes with uniqueIDs:%@
%@: did download remote assets:%d for pass with uniqueID:%@ is outstanding uniqueID:%d
%@: requested download missing assets for pass with uniqueID:%@
%@:pass with uniqueID:%@ is not part of the outstanding passes. will not download pending remote assets
%@: cound not find pass with uniqueID:%@ at URL:%@
%@:pass with uniqueID:%@ is not part of the outstanding passes. Ingnoting asset with remote URL:%@
%@:pass with uniqueID:%@ is not part of the outstanding passes. will not download asset with remote URL:%@
%@: Downloaded all %lu pending assets for pass with uniqueID:%@
%@: Downloaded %lu of %lu pending assets for pass with uniqueID:%@
%@: Fail to download all %lu pending assets for pass with uniqueID:%@
Unable to create directory %@: %@
Home directory does not exist, failed to create intermediaries: %@
Unable to move %@ due to previous error: %@
Searching for pass locations in region: %@
Bounding box: {%f, %f, %f, %f}
Syncing transactions %ld for pass uniqueID: %@. Transactions: %@
Deleted database
Recreated database
Error: Could not delete transaction with identifier :%@
Error: No transaction found with identifier :%@
Error: Failed to find a pass in database with unique identifier '%@'.
Performing migration for object settings with safehaven url %@
Migrating safe haven object settings for passes %@
Updating object settings for safe haven pass %@, to value %ld
Cannot migrate object settings for pass %@ because it doesnt exist in the database.
Completed migration for object settings
Inserting Applet State history sequence number: %@
Updating Applet State history sequence number: %@ -> %@
Replacing Ephemeral Transaction: %@
Inserting Ephemeral Transaction: %@
Removing Ephemeral Transaction: %@
Retaining Ephemeral Transaction: %@
Payment balances updated for pass that doesn't exist: %@
Matched Transaction to Transaction with Identifier: %@
Could Not Match Transaction on Identifier: %@
Matched Transaction to Transaction with Service Identifier: %@
Could Not Match Transaction on Service Identifier: %@
Matched Transaction to Transaction with Payment Hash: %@
Could Not Match Transaction on Payment Hash: %@
Fuzzy-Matched Transaction to Transaction with Identifier: %@
Updating Existing Transaction: %@ with Transaction: %@
Inserting New Transaction: %@
Resulting Transaction: %@
Should update cloud store: %@, hasCloudArchivableData: %@, hasCloudArchivableDataChanged: %@, updateCameExclusivelyFromCloudStore: %@
Soft-Matched Transaction to Transaction with Identifier: %@
Replacing Existing Transaction with Identifier: %@ with Transaction: %@
Removing Existing Transaction with Identifier: %@, serviceIdentifier: %@
Matched Peer Payment Account
Could Not Match Peer Payment Account
Inserting New Peer Payment Account
Removing peer payment account from database
Introducing duplicate uniqueID: %@
Introducing extraneous uniqueID: %@
Introducing missing uniqueID: %@
Missing or corrupt database. Recreating.
Unable to create database from scratch. Giving up.
Cannot update the cloud store with a nil transaction for passUniqueIdentifier %@
Transaction does not have rewardsTotalAmount
Transaction does not have a valid rewards event
PKExpressPassManager: device authentication is now locked out - disabling express mode.
PKExpressPassManager: device authentication is now available - enabling express mode.
PKExpressPassManager: device is in authentication lockout - disabling express mode.
PKExpressPassManager: %{public}@ called with invalid express information.
PKExpressPassManager: express configuration failed, resetting express state.
PKExpressPassManager: exited express mode.
PKExpressPassManager: exited express mode with no applet identified.
PKExpressPassManager: WARNING UNRECOGNIZED EXPRESS TYPE DETECTED: %{public}@! Please file a radar.
PKExpressPassManager: entered express mode but unable to identify applet.
PKExpressPassManager: WARNING EXPRESS APPLET USED DOES NOT MATCH EXPECTATION: EXPECTED: %{public}@ ACTUAL: %{public}@! Please file a radar.
PKExpressPassManager: received unknown distnoted notification: %@.
PKExpressPassManager: express transaction applet identified...attempting to present UI.
PKExpressPassManager: remote alert did not present - fall back to foreground app.
PKExpressPassManager: WARNING UNRECOGNIZED EXPRESS APPLET: %{public}@.
Canceling Task: %@
Letting Task Continue: %@
New task [%@] coalesces with enqueued task [%@]
New task [%@] supplants enqueued task [%@]
New task [%@] merges with enqueued task [%@]
New task [%@] enqueues behind enqueued task [%@]
New task [%@] is enqueues in font of enqueued task [%@]
New task [%@] is forced to drop by enqueued task [%@]
New task [%@] does not interact with any enqueued tasks
Enqueued task [%@] coalesces with scheduled task [%@]
Enqueued task [%@] coalesces with and renews scheduled task [%@]
Enqueued task [%@] supplants scheduled task [%@]
Enqueued task [%@] merges with scheduled task [%@]
Enqueued task [%@] does not interact with any scheduled tasks, dequeueing
Enqueued task [%@] should precede scheduled task [%@], dequeueing ASAP
Enqueued task [%@] is forced to drop by scheduled task [%@]
Enqueued task [%@] remains enqueued behind scheduled task [%@]
Scheduling Activate Tasks Activity with a start date of: %@
Activating task %@
Removing invalid task: %{public}@
Deactivating task %@
No tasks remain in %{public}@ %p
%{public}@ %p: remaining active tasks: %@
%{public}@ %p: Created power assertion: %@ (%d)
%{public}@ %p: Released power assertion: %@ (%d)
PDNetworkTask failed to archive with error: %@, task: %@
Unarchiving tasks...
     --> scheduled task: %@ (%@)
PDNetworkTaskmanager: error occurred while trying to unarchive scheduled task. The data will be discarded. %@.
     --> enqueued task: %@
PDNetworkTaskmanager: error occurred while trying to unarchive enqueued task. The data will be discarded. %@.
PDNetworkTaskmanager: unexpected class detected while trying to unarchive tasks - %{public}@. The data will be discarded.
Cannot start a task that is already started. Ignoring.
Cannot start a task that is canceled. Ignoring.
Canceled task cannot deliver result. Ignoring.
Canceled task cannot report state change. Ignoring.
Canceled task cannot report error. Ignoring.
Canceled task cannot report warnings. Ignoring.
Canceled task cannot succeed. Ignoring.
Canceled task cannot fail. Ignoring.
Session did become invalid with error %@
Received authentication challenge:
  ---->Protection Space: <Realm: %@, Host: %@, Protocol: %@, Method: %@>
  ---->Proposed Credential: %@
  Performing default handling.
Removing all web service tasks
%@ failed for good
Get serial numbers task completed with update tag %@, serial numbers %@
Get pass task succeeded (%@/%@) but pass did not change
Get pass task succeeded (%@/%@) but pass has been deleted, so ignoring result.
Rate limiting for %@ is in effect - deferring update until %@
Removing cached FSEventIdentifier
Starting ubiquity manager
Ubiquity switch: %@
Passbook switch: %@
Ubiquity is responding
%@ %@ ubiquitous
%@ did not become ubiquitous, abort
startDownloadingUbiquitousItemAtURL failed: %@
Ubiquity container does not exist or is not available (URL is nil)
Ubiquity failed to start or was stopped - performing clean up
Evicting ubiquity container
Restarting ubiquity manager
Invalid attempt to insert non-ubiquitous version of pass: %@
Aborting because there is a newer pending update for pass: %@
inserting ubiquitous version of pass: %@
Failed to recreate cards directory: %@
Pass %@ no longer exist, don't copy it
removing ubiquitous version of pass: %@
Failed to delete card: %@
updating ubiquitous version of catalog: %@
Ubiquity Identity changed.
Attempting coordinated read at URL %@
Coordinated read successful at URL %@
Coordinated read failed with error: %@
We need to merge because there is no cached FSEvent Identifier...
Detected FSEventDeviceUUID change, forcing event ID update
We need to do a ubiquity merge because the last FSEventStreamEventId we were told about is inconsistent with the current event ID...
We need to merge because Passbook sync was off but is now on...
Setting %@ to be ubiquitous with destination %@
Error making pre-ubiquitous URL ubiquitous: %@
Setting ubiquitous URL: %@
merging ubiquitous store and local store
local uniqueIDs: %@
ubiquitous uniqueIDs: %@
Done merging
Unable to read card ids: %@
Copying ubiquitous cards to local store:
Terminating copy of ubiquitous cards to local store.
Copying local cards to ubiquity:
Terminating copy of local cards to ubiquity.
Comparing ubiquitous cards to local cards:
%@ - card manifests are equivalent
%@ - card manifests differ
Terminating ubiquity to local comparison.
Local cards to update from ubiquity: %@
Ubiquity cards to update from local: %@
Comparing local and ubiquitous catalogs
Local: %@
Ubiquitous: %@
Taking local catalog.
Taking ubiquitous catalog.
Taking local catalog because there is no ubiquitous catalog: %@
Taking ubiquitous catalog because there is no local catalog: %@
coordinated read succeeded and ignored at: %@
coordinated read succeeded at: %@
valid card: %@
pass will be deleted so do not add it back: %@
invalid card: %@
card package missing, checking for fault at: %@
card package removed: %@
faulting in card package: %@
Copying ubiquitous catalog to local store: %@
Copying local catalog to ubiquity: %@
Registering as file presenter
Unable list files in ubiquitous directory: %@
Wrote winning version for %@: %@
Failed to write winning version for %@: %@
presentedItemDidGainVersion: %@
Marking new version as resolved.
Cards were moved to %@.
Stopping ubiquity.
presentedSubitemDidChangeAtURL: %@
Change at %@ is already enqueued
Ignoring subitem change at URL: %@ %@
Presented subitem not recognized; ignoring
Presented subitem not immediately contained by %@ directory; ignoring
presentedSubitemDidAppearAtURL: %@
Ignoring subitem did appear at URL: %@
accomodatePresentedSubitemDeletionAtURL: %@
copying %@ to %@
Failed to write pass: %@
returning last event identifier: %llu
persisting event identifier: %llu
PDRemoteAlertHandle (%p): %{public}@ created.
PDRemoteAlertHandle (%p): created SBSRemoteAlertHandle %p.
PDRemoteAlertHandle (%p): %{public}@ started.
PDRemoteAlertHandle (%p): %{public}@ activated.
PDRemoteAlertHandle (%p): %{public}@ deactivated.
PDRemoteAlertHandle (%p): invalidated.
Wallet UI process state change: %@
Remote Interface Presenter ignoring field with properties: %@, Lost Mode: %@
Peer Payment identity verification presented with success: %@
Peer Payment registration flow presented with success: %@
Peer Payment terms and confitions presented with success: %@
Already presenting a setup alert - ignoring
%{public}@
Preventing presentation of Remote Interface of type: PDRemoteInterfaceTypeContactless because passes are not visible and no explicit identifier is requested.
Preventing presentation of Remote Interface of type: PDRemoteInterfaceTypeContactless because assertions are currently suppressing the interface.
Preventing presentation of Remote Interface of type: PDRemoteInterfaceTypeContactless because of CarPlay.
Passbook UI Service State: %@
Attempting Activate Contactless Payment Interface for Pass: %@ or Field Properties: %@
Biometric Assertion Acquired
Contactless Interface Activation.
Contactless Interface Deactivation.
Requesting Passcode Unlock from SpringBoard
Unlock Complete
Payment Interface Launch Assertion Acquired
Payment Interface Launch Assertion Cleared
Payment Interface Boost Assertion Acquired
Payment Interface Boost Assertion Cleared
Unknown SBSRemoteAlertHandle %p activated.
Unknown SBSRemoteAlertHandle %p deactivated.
SBSRemoteAlertHandle %p invalidated with error %@.
Unknown SBSRemoteAlertHandle %p invalidated with error %@.
Descriptors did not match PKCreditAccountFeatureDescriptor class.
Details are not of class credit:%{public}@ , deleting exsiting details
Stopping delaying exit for pass upgrade %@
Already stopped delaying exit for pass upgrade %@
Timing out delaying exit for pass upgrade %@
Received unhandled stream type
Received unhandled distributed notification name %@
Client is not entitled for account service
Client is on unsupported hardware
Failed to retrieve virtual cards stored in keychain for method: %s
Writing virtual card to keychain for method: %s
Payment Web Service context changed in PDAccountManager
hasAccounts changed to %@
hasAccounts YES but no accounts on disk
%s previously had account URL now nil: %@
Account URL changed to %@
Account updated following context and account URL change
Finished refreshing BAA certs and keys
Failed to start Apple Pay Trust session for key deletion on iCloud log out.
Apple Pay Trust key deleted.
Updated user info for account %@ with error %@
Updated scheduled payments for account %@ with error %@
Account in terminal state: removing virtual card from Keychain
Reconciling deletion of virtual cards in keychain
Account does not have a createdDate
Statement does not have an openingDate
Statement does not have an paymentDueDate
Inserting scheduled payment educational message for %@
Pass removed: removing locally stored virtual cards on the associated account with identifier: %@
Skipping account update as its not supported by region
Account: %@ with state: %@ does not allow provisioning and will not be offered
Account: %@ with state: %@ is on device
Account: %@ with state: %@ is valid for provisioning
Account: %@ with state: %@ is not valid for provisioning
No account with identifier: %{public}@
No account with virtual card identifier: %{public}@
No account with accountIdentifier: %{public}@ for pass with uniqueID: %{public}@
Updating accounts
Could not update accounts with error %{public}@
Error: Accounts on disk but missing URL or push topic - forcing a re-register. FILE A RADAR !
Updating account with identifier %{public}@
Could not update account with error %{public}@
Delete account with identifier %{public}@
Updating account user info
Error updating user info %@
Event with missing account identifier
Not inserting account event %@ because pass is not present
Suppressing transaction from UI: %@
Disbursement has no associated transactions or added events: %@
No disbursement found for %@
Updating redemption type for transaction %@
Updating redemption type to %@ for event %@
User info event update received
User info event update deferred to next view of account details
Virtual card event update received of type: %@
New virtual card delivered, proactively fetching
Downloading statements for account %@
Error downloading statements for %@: %@
Manage virtual card response with: %@
Fetching virtual card failed, fallback to Keychain
Adding virtual card decryption request 
virtual card: %@
Fatal error: no reference key from Device Identity
Fatal error decrypting virtual card
Error: cannot serialize decrypted card data because it's not in JSON format: %@
Virtual card is already in Keychain, no need to fetch
Legacy credentials virtual card response with: %@
Virtual card used in Safari, last used date updated locally
No matching virtual card to update
Downloading scheduled payments for account %@
Updating scheduled payments for account identifier %@
Could not update scheduled payments with error %{public}@
Account push topics: %@
Received push for push topic: %@
Accounts updated following push notification
Updating payments %@ following push
Updating account %@ following push
Account %@ updated following push
Updating extended version of account %@ following push
Extended version of account %@ updated following push
Received push token %@
Ignoring evaluation of 'Upcoming Scheduled Payment' notification with fireDate: %@
Ignoring evaluation of payment due notification with nil fireDate
Ignoring evaluation of payment due notification with paymentDueDate: %@
Ignoring evaluation of payment due notification with nil account
Missing activity identifier in dispute %@
Preventing event notification, block: %@, update reasons %@
Cannot insert User Notification: %@ in Notification Center: %@ as it is not valid.
Attempting to coalesce User Notification: %@ with existing Notification Center: %@
Coalescing result: %@
Updating Suppressed User Notifications: %@ in Notification Center: %@
Removing User Notifications for Pass: %@ of type: %@ from Notification Center: %@
Removing User Notifications for Pass: %@ from Notification Center: %@
Removing all User Notifications from Notification Center: %@
Adding User Notification: %@ in Notification Center: %@
Cannot add User Notification: %@ in Notification Center: %@ due to notification age.
Updating User Notification: %@ in Notification Center: %@
Removing User Notifications: %@ from Notification Center: %@
Unexpected error from XPC event publisher for stream %{public}@: %s
XPC event publisher for stream %{public}@ received xpc event with action %d and token %llu: %s
XPC event publisher for stream %{public}@ received xpc event with action %d and token %llu
XPC event publisher for stream %{public}@ received initial barrier
XPC event publisher for stream %{public}@ sending xpc event %{public}@ to %u clients
Failed to send event to XPC event stream %{public}@ for token %@: %s
Have not received initial barrier; not sending %@
Scheduled activity missing context %@
PDUserNotificationManager: error trying to read %{public}@. The data will be discarded. %{public}@.
Scheduling Activity to insert User Notification: %@
Inserting User Notification: %@ into Wallet User Notification Center: %@
Updating badge count to %ld
Archiving User Notifications
Insertion Requirements (%@) failed for User Notification: %@
PDNotificationStreamManager (%{public}@): Resolved XPC wake to %@.
PDNotificationStreamManager (%{public}@): Observers existed to handle notification %@.
PDNotificationStreamManager (%{public}@): No observers existed to handle notification %@!
PDNotificationStreamManager (%{public}@): WARNING RECEIVED MALFORMED NOTIFICATION EVENT %@!
Performing merchantStatusCheck with URL: %@
source application secondary identifier set to %@
merchantStatusCheck failed: %@
paymentServicesMerchantURL vending URL: %@
Secure Element in fail forward
%s: %@
AMP card eligibility: %@
Generating %@ request with URL <%@>
Request contains header field <%@: %@>
Request contains body dictionary %@
%@ got response with code %ld
Missing current balance or currency code, not triggering summary notification
No notification for weekly summary
Ignoring weekly notification.
No notification for monthly summary
Resurfacing notifications for account %@
Removing notifications for account %@
Recomputing Payment Reminder and Payment Due Scheduled Notifications
Skipping 'Upcoming Scheduled Payment' notifications for payment without currencyAmount beyond paymentDueDate: %@
Scheduling 'Upcoming Scheduled Payment' notification for payment: %@
Skipping 'Payment Due'' notifications for account with supportsShowNotifications:%d, blockNotifications:%d
Scheduling 'Payment Reminder' notifications with minimumPaymentMet: %d, statementBalanceMet: %d, numPayments: %lu, estimatedRemainingMinimumPayment: %{private}@
Skipping 'Payment Reminder' notifications with minimumPaymentMet: %d, statementBalanceMet: %d, numPayments: %lu
Removing 'Upcoming Scheduled Payment' scheduled activity for notification: %@
Removing 'Payment Due' scheduled activity for notification: %@
Making active notification no longer sticky since it is no longer in the list of payment due notifications for tracking: %@
Skipping insertion of notification with past fire date since it no longer exists in the notification center: %@
Evaluation resulted in 'Payment Reminder' notifications: %@
Evaluation resulted in 'Payment Due' notifications: %@
Failed to delete obsolete payment applications for %@
Connection Error for Task: %@ (%@)
%@ Response: %@
No application with identifier: %{public}@
Skipping application update as its not supported by region
Updating applications
Could not update applications with error %{public}@
Error: Applications on disk but missing URL or push topic - forcing a re-register. FILE A RADAR !
Updating application with identifier %{public}@
Could not update application with error %{public}@
Payment Web Service context changed in PDApplyManager
hasApplications changed to %@
%s previously had apply URL now nil: %@
Apply URL changed to %@
Applications updated following context and account URL change with error: %{public}@ 
Apply push topics: %@
Applications updated following push notification with error: %{public}@ 
Verification code (%@) for DPAND (%@) provided by %@ (%d)
Inserting Payment Transaction via Payment Service: %@
Inserted Value Added Service Transaction: %@
Initializing Secure Element...
Force Initializing Secure Element...
Failed to store pass ownership token with identifier: %@ token: %@
Overriding bundleIdentifier and teamIdentifier because PKForceFakeDisbursement is enabled.
Error creating disbursement request for bundleIdentifier: %@, teamIdentifier: %@, and certificates: %@
Too many pushes too fast for %@ -- mild rate limiting will apply.
Too many pushes too fast for %@ -- moderate rate limiting will apply.
Too many pushes too fast for %@ -- severe rate limiting will apply.
Too many pushes too fast for %@ -- topic will be unregistered.
Something went wrong - cannot generate an alert message for a pass type (%{public}@) with no organization names.
Push interval %g min; zero interval = %g min; score delta = %g; new score = %g
Frequency score %g exceeds cutoff threshold %g
Frequency score %g exceeds severe rate limit threshold %g
Frequency score %g exceeds moderate rate limit threshold %g
Frequency score %g exceeds mild rate limit threshold %g
No account found when trying to insert event with id %@
Wrong class for PKAccountRewards item: %@
Wrong class for PKCreditAccountStatement item: %@
Wrong class for PKAccountServicingEvent item: %@
Wrong class for PKAccountPayment item: %@
Wrong class for PKAccountPaymentReminder item: %@
Wrong class for PKAccountCreditTerms item: %@
Wrong class for PKAccountPhysicalCardStatusUpdate item: %@
Wrong class for PKAccountPhysicalCardShippingUpdate item: %@
Wrong class for PKAccountVirtualCardStatusUpdate item: %@
Wrong class for PKBillPaymentSelectedSuggestedAmountData item: %@
Wrong class for AccountUserInfoUpdate item: %@
Wrong class for PKAccountAssistanceProgramMessage item: %@
%@: Could not open database, resetting: [%d, %@]
%@: Resetting after error: [%d, %@]
%@: Could not setup database: [%d, %@]
%@: Could not execute SQL: %@: [%d, %s]
%@: Step failed: %s: [%d, %s]
%@: Could not prepare statement: %@: [%d, %s]
SQLiteBindFoundationValueToStatement: Parameter (index %i) with value '%@' is of unsupported bind type '%{public}@'.
Error storing notification asset %@ for pass %@.
No image for notification asset %@ for pass %@.
%@: checking for market support in response to API
%@: requested post upgraded Pass Notification for market:%@ pass with uniqueID:%@
%@: missing transit Notification. fail to post pass upgraded notification for market:%@ pass with uniqueID:%@
%@: checking for market support due to lock status change
%@: registered for device lockstate event trigger
%@: not registered for device lockstate event trigger
%@: should not schedule notification because device is not supported
%@: should not send notification due to location authorization
%@: PKPassKitCoreBundle status %ld; PKPassRelevancyBundle status %ld
%@: should not send notification because we are already monitoring location
%@: should not send notification because a pass upgrade is already in progress
%@: should not check notification because we recently checked at %@
%@: should not send notification because region config is missing
%@: should not send notification because markets could not be loaded
%@: should not send notification due to notifications being disabled
%@: should not send notification because market is not transit
%@: should not send notification for %@ because it didn't meet threshold
%@: using notification send limit from config (%ld)
%@: should not send notification for %@ because already reached send limit (%ld)
%@: should not send notification for %@ because not in region
%@: should not send notification for %@ because we already have a pass
%@: discarding hour from config (%ld) because it is not in range
%@: started monitoring location
%@: stopped monitoring location due to timeout
%@: could not monitor location due to authorization
%@: upgrading open loop pass for express mode %@
%@: we couldn't creat pass upgrade notification title:%d messageFormat:%d passName:%d
%@: will create pass upgrade notification with market identifer:%@
%@: downloaded mobile asserts:%@ for market:%@ with error:%@
%@: did update location %@
%@: missing makets for location:%@
%@: failed to download market configurations (error: %@)
%@: no products available for location
%@: stopping location monitoring
%@: discarding location
%@: no upgradeable open loop passes because an upgrade has already been attempted
%@: no upgradeable open loop passes as there is not default pass
%@: no upgradeable open loop passes as the default pass cannot be found
%@: default payment pass  is not supported by the market expressCredentials %@
%@: Validating predicate failed for ruleIdentifier: %@ rule: %@ with error: %@
%@: Invalid predicate for ruleIdentifier: %@ rule: %@
%@: PDUserEvaluationEnvironment preflight error: %@
%@: PDUserEvaluationEnvironment preflight failed
%@: Predicate evaluation of rule: %@ threw exception: %@
Client is not entitled for discovery service
Registering for watch express availability changes
Unregistering for watch express availability changes
Express mode state: express mode is %s; device is %sin lost mode
Suggesting that express should be enabled
Suggesting that express should be disabled
Received XPC events stream handler callback for NanoPassbook event name %@ dict %@
Connection cleared, cancelling outstanding remote payment requests
Updating physical card with identifier: %@
Inserting physical card with identifier: %@
Default card was nil and no satisfactory payment pass could be found. No need to update.
Default card and new payment pass are the same. No need to update.
Updated Default Payment Pass to: %@, from: %@
Presenting notification for default payment pass update.
Setting default payment pass: %@
Supressing default pass change notification for pass: %@
Apple Cash found as automatic default card, attempting to update with another card if possible
Transit only card found as automatic default card, attempting to update with another card if possible
Default card does not support default card selection, attempting to update with another card if possible
Default card payment application is not personalized and it's not suspended or personalizing, attempting to update with another card if possible
Default card is valid. No need to update.
No default card, attempting to find a card if possible
Migrating Settings and recreating database...
Migrating database from user_version 8075 to 8076...
Migrating database from user_version 8076 to 8300
Migrating database from user_version 8300 to 8301
Migrating database from user_version 8301 to 8302
Migrating database from user_verion 8302 to 8303
Migrating database from user_verion 8303 to 8304
Migrating database from user_verion 8304 to 8305
Migrating database from user_version 8305 to 9000
Migrating database from user_verion 9000 to 9001
Migrating database from user_version 9001 to 9002
Migrating database from user_version 9002 to 9003
Migrating database from user_version 9003 to 9004
Migrating database from user_version 9004 to 9005
Migrating database from user_version 9005 to 9006
Migrating database from user_version 9006 to 9007
Migrating database from user_version 9007 to 9008
Migrating database from user_version 9008 to 9009
Migrating database from user_version 9009 to 9010
Migrating database from user_version 9010 to 9011
Migrating database from user_version 9011 to 9012
Migrating database from user_version 9012 to 9013
Migrating database from user_version 9013 to 9014
Migrating database from user_version 9014 to 9015
Migrating database from user_version 9015 to 9016
Migrating database from user_version 9016 to 9017
Migrating database from user_version 9017 to 9018
Migrating database from user_version 9018 to 9200
Migrating database from user_version 9200 to 9300
Migrating database from user_version 9300 to 10000
Migrating database from user_version 10000 to 10001
Migrating database from user_version 10001 to 10002
Migrating database from user_version 10002 to 10003
Migrating database from user_version 10003 to 10004
Migrating database from user_version 10004 to 10005
Migrating database from user_version 10005 to 10006
Migrating database from user_version 10006 to 10007
Migrating database from user_version 10007 to 10008
Migrating database from user_version 10008 to 10009
Migrating database from user_version 10009 to 10010
Migrating database from user_version 10010 to 10011
Migrating database from user_version 10011 to 10012
Migrating database from user_version 10012 to 10013
Migrating database from user_version 10013 to 10014
Migrating database from user_version 10014 to 10015
Migrating database from user_version 10015 to 10016
Migrating database from user_version 10016 to 10200
Migrating database from user_version 10200 to 10300
Migrating database from user_version 10300 to 11000
Migrating database from user_version 11000 to 11001
Migrating database from user_version 11001 to 11002
Migrating database from user_version 11002 to 11003
Migrating database from user_version 11003 to 11004
Migrating database from user_version 11004 to 11005
Migrating database from user_version 11005 to 11006
Migrating database from user_version 11006 to 11007
Migrating database from user_version 11007 to 11008
Migrating database from user_version 11008 to 11009
Migrating database from user_version 11009 to 11010
Migrating database from user_version 11010 to 11011
Migrating database from user_version 11011 to 11012
Migrating database from user_version 11012 to 11013
Migrating database from user_version 11013 to 11014
Migrating database from user_version 11014 to 11015
Migrating database from user_version 11015 to 11016
Migrating database from user_version 11016 to 11017
Migrating database from user_version 11017 to 11018
Migrating database from user_version 11018 to 11019
Migrating database from user_version 11019 to 11020
Migrating database from user_version 11020 to 11021
Migrating database from user_version 11021 to 11022
Migrating database from user_version 11022 to 11100
Migrating database from user_version 11100 to 11200
Migrating database from user_version 11200 to 11201
Migrating database from user_version 11201 to 11300
Migrating database from user_version 11300 to 11301
Migrating database from user_version 11301 to 11302
Migrating database from user_version 11302 to 11303
Migrating database from user_version 11303 to 12000
Migrating database from user_version 12000 to 12001
Migrating database from user_version 12001 to 12002
Migrating database from user_version 12002 to 12003
Migrating database from user_version 12003 to 12004
Migrating database from user_version 12004 to 12005
Migrating database from user_version 12005 to 12006
Migrating database from user_version 12006 to 12007
Migrating database from user_version 12007 to 12008
Migrating database from user_version 12008 to 12009
Migrating database from user_version 12009 to 12010
Migrating database from user_version 12010 to 12011
Migrating database from user_version 12011 to 12012
Migrating database from user_version 12012 to 12013
Migrating database from user_version 12013 to 12014
Migrating database from user_version 12014 to 12015
Migrating database from user_version 12015 to 12016
Migrating database from user_version 12016 to 12017
Migrating database from user_version 12017 to 12018
Migrating database from user_version 12018 to 12019
Migrating database from user_version 12019 to 12020
Migrating database from user_version 12020 to 12021
Migrating database from user_version 12021 to 12022
Migrating database from user_version 12022 to 12023
Migrating database from user_version 12023 to 12024
Migrating database from user_version 12024 to 12025
Migrating database from user_version 12025 to 12026
Migrating database from user_version 12026 to 12027
Migrating database from user_version 12027 to 12028
Migrating database from user_version 12028 to 12029
Migrating database from user_version 12029 to 12030
Migrating database from user_version 12030 to 12031
Migrating database from user_version 12031 to 12032
Migrating database from user_version 12032 to 12033
Migrating database from user_version 12033 to 12034
Migrating database from user_version 12034 to 12035
Migrating database from user_version 12035 to 12036
Migrating database from user_version 12036 to 12037
Migrating database from user_version 12037 to 12038
Migrating database from user_version 12038 to 12039
Migrating database from user_version 12039 to 12040
Migrating database from user_version 12040 to 12041
Migrating database from user_version 12041 to 12042
Migrating database from user_version 12042 to 12043
Migrating database from user_version 12043 to 12044
Migrating database from user_version 12044 to 12045
Migrating database from user_version 12045 to 12046
Migrating database from user_version 12046 to 12047
Migrating database from user_version 12047 to 12048
Migrating database from user_version 12048 to 12049
Migrating database from user_version 12049 to 12050
Migrating database from user_version 12050 to 12051
Migrating database from user_version 12051 to 12052
Migrating database from user_version 12052 to 12053
Migrating database from user_version 12053 to 12054
Migrating database from user_version 12054 to 12055
Migrating database from user_version 12055 to 12056
Migrating database from user_version 12056 to 12057
Migrating database from user_version 12057 to 12058
Migrating database from user_version 12058 to 12059
Migrating database from user_version 12059 to 12060
Migrating database from user_version 12060 to 12061
Migrating database from user_version 12061 to 12062
Migrating database from user_version 12062 to 12063
Migrating database from user_version 12063 to 12064
Migrating database from user_version 12064 to 12065
Migrating database from user_version 12065 to 12066
Migrating database from user_version 12066 to 12067
Migrating database from user_version 12067 to 12068
Migrating database from user_version 12068 to 12069
Migrating database from user_version 12069 to 12070
Migrating database from user_version 12070 to 12071
Migrating database from user_version 12071 to 12072
Migrating database from user_version 12072 to 12073
Migrating database from user_version 12073 to 12074
Migrating database from user_version 12074 to 12075
Migrating database from user_version 12075 to 12076
Migrating database from user_version 12076 to 12077
Migrating database from user_version 12077 to 12078
Migrating database from user_version 12078 to 12079
Migrating database from user_version 12079 to 12080
Migrating database from user_version 12080 to 12081
Migrating database from user_version 12081 to 12082
Migrating database from user_version 12082 to 12083
Migrating database from user_version 12083 to 12084
Migrating database from user_version 12084 to 12085
Migrating database from user_version 12085 to 12086
Migrating database from user_version 12086 to 12087
Migrating database from user_version 12087 to 12088
Migrating database from user_version 12088 to 12089
Migrating database from user_version 12089 to 12090
Migrating database from user_version 12090 to 12091
Migrating database from user_version 12091 to 12092
Migrating database from user_version 12092 to 12093
Migrating database from user_version 12093 to 12094
Migrating database from user_version 12094 to 12095
Migrating database from user_version 12095 to 12096
Migrating database from user_version 12096 to 12097
Migrating database from user_version 12097 to 12098
Migrating database from user_version 12098 to 13000
Migrating database from user_version 13000 to 13001
Migrating database from user_version 13001 to 13002
Migrating database from user_version 13002 to 13003
Migrating database from user_version 13003 to 13004
Migrating database from user_version 13004 to 13005
Migrating database from user_version 13005 to 13006
Unrecognized database version %ld
Finished migrating database
Unable to migrate database from version %ld
Migrating settings: %ld for Pass with unqiue identifier: %@
Updating transaction as redeemed for identifier: %@
Creating groups for %lu passes
Validate default pass ordering - default PID: %@
Error: Could not move nil group for pass: %{public}@ to index: %lu
Scheduling merchant reprocessing activity
Not scheduling merchant reprocessing activity because it's disabled in the config
Running maps reprocessing scheduled activity with %lu items
Update upgrade passcode policy enforcement failed with error: %@
Skip updating passcode policy due to active assertions
%@ upgraded passcode policy
Cannot delete index entries for all passes. Spotlight indexing is not available.
Cannot delete index entries for passes. Spotlight indexing is not available.
Cannot index all passes. Spotlight indexing is not available.
Cannot index passes. Spotlight indexing is not available.
Could not find pass to index with uniqueID: %@
Spotlight index migration skipped as spotlight indexing is not available.
Spotlight index performMigration begginging. Deleting existing index.
Spotlight index delete completed with error: %@. Beginning re-index of all passes.
Spotlight index performMigration completed with error: %@
Spotlight index performMigration saved new state %u with error: %@
Beginning spotlight index of %zd passes.
Spotlight index of passes completed with error %@.
Spotlight index reindexAllSearchableItems completed with error: %@
Spotlight index reindexAllSearchableItems saved new state %u with error: %@
Updating payment transaction fee with identifier: %@
Inserting payment transaction fee with identifier: %@
Failed to delete obsolete payment transcaction fees for %@
Updating virtual card with identifier: %@
Inserting virtual card with identifier: %@
Removing invalid leftover virtual cards for account
Updating old virtual card: %@
 with new virtual card: %@
Removing virtual card encrypted data from database
Updating feature descriptor with identifier: %@
Inserting feature descriptor with identifier: %@
Saving PKObject Settings
Error: PDObjectSettingsManager (PKObjectAdditions) Unknown default settings for object of class %{public}@.
Error: PDObjectSettingsManager (DatabasePassAdditions) expected parameter to be of type 'Pass'.
Updated Discovery Manifest for PDDiscoveryManager start up
Error - Update Discovery Manifest failed for PDDiscoveryManager start up
Discovery Manifest URL has changed from %@ to %@
Discovery Manifest updated
%@: Failed to get Discovery Article Layout for Discovery Item Identifier: %@ with error: %@
Failed to get requested article layout for item identifier %@ with error: %@
%@: No Discovery Item found for updateDiscoveryItemWithIdentifier: called with item identifier: %@ and action: %ld
Error processing Discovery Items afer pass added: %@
Error processing Discovery Items afer account added: %@
Error processing Discovery Items after account removed: %@
Error processing Discovery Items after Peer Payment Account updated: %@
Already updating Discovery Manifest...
Updating Discovery Manifest...
Fetching discovery manifest returned error: %@
Failed to load messages manifest bundle with error: %@
%@: Error evaluating rules for Discovery Items and Engagement Messages
Fetching messages bundle failed with error: %@
Trying to cache empty data
Attempting to cache nil data
Processing temp bundle failed with error: %@
Could not create directory at %@ with error: %@
Failed to copy discovery bundle to %@ with error: %@
Error deleting messages bundle: %@
Error encountered cleaning up discovery bundle: %{public}@
Couldn't remove stale discovery bundle due to error: %{public}@
Failed to delete obsolete payment transcaction questions for %@
Found %lu close transactions
Transactions matching on amount: %lu
Shortest interval for matched transaction %.2f
Picked transaction with matching amount and shortest interval
Picked transaction with shortest interval
Picked closest transaction with matching amount
Matched transaction time interval %.2f, same amount %{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391012</string>
<key>CFBundleDisplayName</key>
<string>passd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.passd</string>
<key>CFBundleName</key>
<string>passd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11L374m</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.0</string>
<key>DTSDKBuild</key>
<string>17A551</string>
<key>DTSDKName</key>
<string>iphonesimulator13.0.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L374m</string>
<key>MinimumOSVersion</key>
<string>13.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.passd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>Production</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.NPKCompanionAgent.client</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.appleidauthentication.defaultaccess</key>
<true/>
<key>com.apple.ap.adservicesd.statusconditionclient.allow_write</key>
<true/>
<key>com.apple.asd.allow</key>
<true/>
<key>com.apple.asd.client</key>
<string>2178910101</string>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.developer.apple-cash-disbursements</key>
<true/>
<key>com.apple.developer.icloud-container-development-container-identifiers</key>
<array>
<string>com.apple.pay</string>
<string>com.apple.shoebox</string>
<string>com.apple.passes</string>
</array>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.pay</string>
<string>com.apple.shoebox</string>
<string>com.apple.passes</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
<string>CloudDocuments</string>
</array>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.ranging</key>
<true/>
<key>com.apple.locationd.spectator</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.nanopassrenderingservice.client</key>
<true/>
<key>com.apple.nfcd.hwmanager</key>
<true/>
<key>com.apple.nfcd.trust</key>
<true/>
<key>com.apple.payment.presentation</key>
<true/>
<key>com.apple.private.CoreAuthentication.SPI</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>UniqueDeviceID</string>
<string>UniqueChipID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applesse.allow</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.WalletMobileAssets</string>
</array>
<key>com.apple.private.carkit</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.pay</key>
<string>com.apple.wallet.paymentservices2</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.bundleid</key>
<string>com.apple.Passbook</string>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.hsa-authentication-processing</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.applepay</string>
<string>com.apple.private.alloy.passbook.provisioning</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.applepay</string>
</array>
<key>com.apple.private.keychain.sysbound</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Passbook</string>
<string>com.apple.NanoPassbook</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.system-group-containers</key>
<array>
<string>systemgroup.com.apple.mobileactivationd</string>
</array>
<key>com.apple.seld.tsmmanager</key>
<true/>
<key>com.apple.seserviced.kmlXpcService</key>
<true/>
<key>com.apple.sharing.DeviceDiscovery</key>
<true/>
<key>com.apple.sharing.Services</key>
<array>
<string>com.apple.sharing.ApplePay</string>
</array>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.biometricUnlockSuppression</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.requestDeviceUnlock</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.PassbookUIService</string>
<string>com.apple.Passbook.PeerPayment</string>
</array>
</dict>
</plist>
