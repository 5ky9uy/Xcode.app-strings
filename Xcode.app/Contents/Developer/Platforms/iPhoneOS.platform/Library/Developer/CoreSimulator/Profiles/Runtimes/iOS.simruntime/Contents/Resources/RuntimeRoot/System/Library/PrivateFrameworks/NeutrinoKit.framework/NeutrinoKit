@(#)PROGRAM:NeutrinoKit  PROJECT:Neutrino-402.5.140
%@; zoomScale: %g
<%p %@> frame = %@, bounds = %@%@%@, isHidden = %@, position = %@, anchor = %@
sublayerTransform
transform
, %@ = {{%g, %g, %g, %g}, {%g, %g, %g, %g}, {%g, %g, %g, %g}, {%g, %g, %g, %g}}
status
externalPlaybackActive
currentItem
rate
We should have an AVPlayer object here
NUAVPlayerController.m
view with dolby metadata
view ignoring dolby metadata
debugTryDolbyInEdit
v32@?0@"AVPlayerItem"8Q16^B24
expected an AVQueuePlayer
readyForDisplay
-[NUMediaView _rendererDidFinishWithStatistics:]
v12@?0B8
PHLivePhotoView
-[NUMediaView convertViewRect:fromSpace:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-402.5.140/workspaces/neutrino/Kit/iOS/NUMediaView.m
Cannot establish a mapping from space %@ to space %@: %@
/Image
-[NUMediaView convertPoint:toNormalizedYDownSourceSpaceFromView:]
/masterSpace
Invalid masterSize
-[NUMediaView convertPoint:fromSpace:toView:]
-[NUMediaView convertPoint:fromView:toSpace:]
image:%@
transform:%@
{%.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g, %.15g}
anchorPoint:%@
contentScale:%f
bounds:%@
position:%@
delegate:%@
<%@ - name:%@
v24@?0@"<NUSurfaceTile>"8^B16
v40@?0{?={?=qq}{?=qq}}8
observer != nil
-[NUMediaViewRenderer removeObserver:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-402.5.140/workspaces/neutrino/Kit/Common/NUMediaViewRenderer.m
Invalid parameter not satisfying: %s
v16@?0@?<v@?>8
block != nil
-[NUMediaViewRenderer addPlaybackTimeObserver:]
-[NUMediaViewRenderer addExternalPlaybackObserver:]
-[NUMediaViewRenderer addPlaybackStateObserver:]
muted
V:|[v]|
H:|[v]|
setOverridePhoto:
videoComposition
videoAsset
setLivePhoto:
livePhoto
PHLivePhoto
NUMediaViewRenderer
v16@?0@"NUResponse"8
source
NUMediaViewRenderer-NUVideoRenderRequest
-[NUMediaViewRenderer _updateVideoWithResult:sourceChanged:]
We should have an initialized AV player controller
PXSubjectTrackingView-getUnadjustedImageSize
-[NUMediaViewRenderer cacheVideoRenderFilter]_block_invoke
Could not construct pipeline filter from source: %@
let output = input;
if (mediaComponentType == 'Video') {
    output = Cache(input, 'Video', {});
return output;
v12@?0f8
v16@?0q8
v32@?0{?=qiIq}8
NUMediaViewRenderer-LivePhotoClient
-[NUMediaViewRenderer _updateDisplayForMediaType:]
We must have a known display type
-[NUMediaViewRenderer _updateImageLayer:withRenderResponse:]
This code must be running on the main thread
NUMediaViewRenderer-roi
NUMediaViewRenderer-zoomedToFit
-[NUMediaViewRenderer _renderFinishedWithGeometry:layer:]
nil render layer
-[NUMediaViewRenderer updateComposition:]
Unknown mediaType for composition: %@
-[NUMediaViewRenderer init]
Initializer not available: -[%@ %@], use designated initializer instead.
View Controller Image Response
-[NUMediaViewRenderer(Private) _releaseAVObjects]
_releaseAVObjects should only be called when displaying video
NUTransitionAnimationKey
v8@?0
v24@?0@"CMDeviceMotion"8@"NSError"16
<%@:%p size=%gx%g scale=%g position:(%g,%g) anchor:(%g,%g)>
size.width > 0.0
-[NUViewport initWithSize:backingScaleFactor:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-402.5.140/workspaces/neutrino/Kit/Common/NUViewport.m
size.height > 0.0
factor > 0.0
-[NUViewport init]
<%@: %p> viewport=%@
viewport != nil
-[NUViewportRegionPolicy initWithViewport:]
/Library/Caches/com.apple.xbs/Sources/Photos_Sim/Photos-402.5.140/workspaces/neutrino/Kit/Common/NUViewportRegionPolicy.m
-[NUViewportRegionPolicy init]
<%p> seekToTime:%f toleranceBefore:%f toleranceAfter:%f forceSeek:%@
<%p> AVPlayerStatusUnknown
<%p> AVPlayerStatusReadyToPlay
<%p> AVPlayerStatusFailed with error %@
<%p> rate %g
<%p> status %d
<%p> kPlayerCurrentItemCtx
<%p> external playback active %d
Updated %lu items to %@
Failed to loop audio mix, error: %@
Failed to repeat video composition, error: %@
Failed to loop video composition %@
Failed to loop audio mix %@
Created 1 item to %@
Failed to create player item from asset: %@
<controller: %p> 
<controller: %p> %g %g
<controller: %p> %g
%s - setting scroll view content size: %@
%s - transitionTargetSize:%@
-[NUMediaView _transitionToInsets:] - insets: %@
-[NUMediaView _transitionToInsets:] - size: %@, offset: %@
-[NUMediaView _transitionToInsets:] - render view content size: %@
-[NUMediaView _updateContentInsets] on scrollview %p %@, content size = %@; internal edge insets: %@; center content: %d
-[NUMediaView setEdgeInsets:] - insets: %@
Continue: %{public}@
Fail: %{public}@
job: %{public}@
Trace:
%{public}@
Trace:
%{public}@
-[NUMediaView _imageSize]: %@
+[NUMediaView _proposedInsetsForInsets:contentSize:inFrame:centerContent:] - content is not centered, so returning input insets: %@
+[NUMediaView _proposedInsetsForInsets:contentSize:inFrame:centerContent:] - content is centered. input insets: %@  content size: %@ inFrame: %@ result insets: %@
targetRect: %@, clipRect: %@, dx = %f, dy = %f, dr = %f, dt= %f
Failed to update video composition: %{public}@
VideoCompositorScalePolicy: FIT scale policy fit to %f x %f
VideoCompositorScalePolicy: ZOOM scale policy zoomed to %f
Nil video asset received
Error loading LivePhoto: %{public}@
Error: %{public}@
Update Composition
renderedScale = %g, minimumScale = %g, maximumScale = %g
Waited for %0.1f ms
NUMediaViewRenderer: failed to create snapshot for videoView
-[NURenderView animationDidStop:finished:] - finished: %d shouldRemoveAnimation: %d
-[NURenderView animationDidStop:finished:] - removing transition
-[NURenderView renderFrameReachedTargetSize] - transitionInFlight: %d   has animation: %d   currentSize: %@
-[NURenderView renderFrameReachedTargetSize] - removing transition
NUScrollView
NeutrinoUIDebugging
_NUAVPlayerItemObservation
NUAVPlayerController
NUAVPlayerView
NUMediaView
NUAVPlayerViewDelegate
NSObject
NUAVPlayerControllerDelegate
NUTiledImageLayer
CALayerDelegate
NUTileLayer
NUMediaViewRenderer
NUMediaPlayer
NeutrinoAdditions
Private
_NUTiledROILayer
_NUTiledBackfillLayer
_NUContainerLayer
NURenderView
CAAnimationDelegate
NUDebugRenderView
NUViewGeometry
NUViewport
NSCopying
NUViewportRegionPolicy
NURegionPolicy
visibleRect
description
stringWithFormat:
contentOffset
contentSize
sublayerTransform
frame
bounds
isHidden
appendFormat:
sublayers
countByEnumeratingWithState:objects:count:
_nu_recursiveDescriptionWithLevel:result:
nu_layerRecursiveDescription
transform
T@"AVPlayerItem",&,N,V_playerItem
TB,N,V_registeredKVO
_registeredKVO
_playerItem
playerItem
setPlayerItem:
registeredKVO
setRegisteredKVO:
.cxx_destruct
T@"AVPlayer",&,N,V_player
Td,N,V_updateInterval
T@"AVAsset",R,N,V_videoAsset
T@"AVVideoComposition",R,N,V_videoComposition
T@"AVAudioMix",R,N,V_audioMix
T@"<NUAVPlayerControllerDelegate>",W,N,V_delegate
TB,N,V_loopsVideo
T{?=qiIq},R,N,V_currentSeekTime
TB,R,N
muted
TB,N,GisMuted,V_muted
T{?=qiIq},R,N
_playerTimeObserver
_observatory
_playerControllerKVOFlags
_playerItemObservations
_appliesPerFrameHDRDisplayMetadata
_loopsVideo
_muted
_player
_updateInterval
_videoAsset
_videoComposition
_audioMix
_delegate
_currentSeekTime
init
dealloc
prepareWithAVAsset:videoComposition:audioMix:loopsVideo:seekToTime:
_playerItemsWithVideoAsset:videoComposition:audioMix:loopsVideo:
_playerItemWithVideoAsset:videoComposition:audioMix:
_loopingPlayerItemWithVideoAsset:videoComposition:audioMix:
updateVideoComposition:
updateWithVideoPrepareNodeFromVideoComposition:
updateAudioMix:
updateAppliesPerFrameHDRDisplayMetadata:
observeValueForKeyPath:ofObject:change:context:
pause
play
setLoopsVideo:
setMuted:
currentlySeeking
seekForward
seekBack
seek:toleranceBefore:toleranceAfter:
seek:toleranceBefore:toleranceAfter:forceSeek:
seek:toleranceBefore:toleranceAfter:forceSeek:completionHandler:
step:
addPlaybackRateObserver:block:
_notifyPlaybackRateChange:
addPlaybackTimeObserver:block:
_notifyPlaybackTimeChange:
addPlayerStatusObserver:block:
_notifyPlayerStatusChange:
addExternalPlaybackObserver:block:
_notifyExternalPlaybackChange:
removeObserver:
_addTimeObserver
_effectiveTimeForTime:
currentTime
_removeTimeObserver
playerItemDidReachEnd:
_setRate:
_removePlayerKVO
_addPlayerKVO
_removePlayerItemKVO:
_removePlayerItemKVO:removeFromArray:
_addPlayerItemKVO:
player
setPlayer:
updateInterval
setUpdateInterval:
videoAsset
videoComposition
audioMix
delegate
setDelegate:
loopsVideo
currentSeekTime
isMuted
addObserver:selector:name:object:
defaultCenter
addObserver:forKeyPath:options:context:
addObject:
removeObject:
removeObserver:name:object:
removeObserver:forKeyPath:context:
setRate:
rate
duration
currentItem
removeTimeObserver:
addPeriodicTimeObserverForInterval:queue:usingBlock:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
notifyAllObserversForKey:withBlock:
addObserver:forKey:queue:block:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
cancelPendingSeeks
setActionAtItemEnd:
insertItem:afterItem:
removeAllItems
items
boolValue
seekToTime:completionHandler:
objectForKeyedSubscript:
floatValue
error
integerValue
objectForKey:
count
setAppliesPerFrameHDRDisplayMetadata:
boolForKey:
standardUserDefaults
setAudioMix:
repeatAudio:count:error:
setVideoRenderPrepareNode:
videoRenderPrepareNode
firstObject
instructions
setVideoComposition:
repeatVideoComposition:count:error:
repeatVideo:count:error:
setSeekingWaitsForVideoCompositionRendering:
playerItemWithAsset:
enumerateObjectsUsingBlock:
copy
arrayWithObjects:count:
removeItem:
setAudioSession:
setCategory:error:
auxiliarySession
initWithItems:
readyForDisplay
TB,N,GisReadyForDisplay,S_setReadyForDisplay:,V_readyForDisplay
T@"<NUAVPlayerViewDelegate>",W,N,V_delegate
_updateReadyForDisplayID
_observerDetached
_readyForDisplay
initWithFrame:
initWithCoder:
dispose
_updateReadyForDisplayWithID:
_setReadyForDisplay:
isReadyForDisplay
layer
layerClass
T{CGSize=dd},N,V__masterSizeWithoutGeometry
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cropRect
Td,N,V_angle
T@"NSArray",N
TB,N,V_centerContent
TB,N
TB,N,GisMuted
debugEnabled
TB,N,GisDebugEnabled,V_debugEnabled
TB,N,V_scrollUpdatesSuppressed
videoEnabled
TB,R,N,GisVideoEnabled
videoPlayerVisible
TB,R,N,GisVideoPlayerVisible,V_videoPlayerVisible
T@"<NUMediaViewDelegate>",W,N,V_delegate
T@"<NUMediaPlayer>",R
T@"NUComposition",C,N
T{UIEdgeInsets=dddd},N,V_edgeInsets
Td,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
_renderView
_scrollView
_renderer
_edgeInsets
_nuAVPlayerController
_playerView
_livePhotoView
_delegateFlags
_renderCoalescer
_transitionCount
_transitionTargetSize
_renderingCompletionBlock
_lastVideoPlayerVisibilityChangeWasAnimated
_centerContent
_debugEnabled
_scrollUpdatesSuppressed
_videoPlayerVisible
_angle
__masterSizeWithoutGeometry
_cropRect
playerViewReadyForDisplayDidChange:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
playerControllerIsReadyForPlayback:
playerControllerDidFinishPlaying:duration:
playerController:didUpdateElapsedTime:duration:
composition
setComposition:
didMoveToWindow
setZoomScale:
setZoomScaleToFit
zoomScale
setMaximumZoomScale:
maximumZoomScale
setMinimumZoomScale:
minimumZoomScale
setZoomScale:animated:
zoomToRect:animated:
isReady
_imageLayer
layoutSubviews
setAngle:
_imageSize
convertPointToImage:
convertPointFromImage:
convertRectToImage:
convertRectFromImage:
convertPoint:fromView:toSpace:
convertPoint:fromSpace:toView:
convertPoint:toNormalizedYDownSourceSpaceFromView:
convertNormalizedViewRect:fromSpace:
convertViewRect:fromSpace:
imageFrame
installRenderingCompletionBlock:
_setupViews
_edgeInsetsForContentSize:inFrame:
_edgeInsetsForContentSize:inFrame:alwaysCenterContent:
setEdgeInsets:
setCenterContent:
_updateContentInsets
viewForZoomingInScrollView:
scrollViewDidZoom:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewWillBeginDragging:
scrollViewDidScroll:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndDecelerating:
_updateRenderContentCoalesced:
_updateRenderContent
waitForRender
_beginTransition
_endTransition
_transitionToInsets:
_videoPlayerView
_videoPlayerViewWithoutControls
_videoPlayerController
_rendererDidCreateAVPlayerController:
_rendererDidFinishWithStatistics:
_rendererDidUpdateLivePhoto
_rendererDidStartPreparingVideo
_rendererDidFinishPreparingVideo
_livephotoPlaybackWillBegin
_livephotoPlaybackDidEnd
setLoopsVideoPlayback:
loopsVideoPlayback
_startVideoPlayback
_stopVideoPlayback
setVideoPlayerVisible:animated:
_geometry
_setLayerFilters:
setPipelineFilters:
pipelineFilters
_setPipelineFilters:shouldUpdateContent:
_withComposition:visitRenderClient:
setVideoEnabled:animated:
isVideoEnabled
_updateVideoPlayerAlpha:
_layerRecursiveDescription
_viewRecursiveDescription
snapshotImage
_releaseAVObjects
_didReleaseAVObjects
edgeInsets
_masterSizeWithoutGeometry
set_masterSizeWithoutGeometry:
cropRect
setCropRect:
angle
centerContent
isDebugEnabled
setDebugEnabled:
scrollUpdatesSuppressed
setScrollUpdatesSuppressed:
isVideoPlayerVisible
mediaViewIsReadyForVideoPlayback:
performWithoutAnimation:
setAlpha:
animateWithDuration:animations:
alpha
setFilters:
mediaViewDidEndLivePhotoPlayback:
mediaViewWillBeginLivePhotoPlayback:
mediaViewDidFinishPreparingVideo:
mediaViewDidStartPreparingVideo:
mediaViewDidUpdateLivePhoto:
mediaViewDidFinishRendering:
mediaViewDidFinishRendering:withStatistics:
setContentSize:
animateWithDuration:animations:completion:
removeFromSuperview
setBorderWidth:
setBorderColor:
CGColor
redColor
isViewDebugEnabled
cyanColor
functionWithName:
animationDuration
_proposedInsetsForInsets:contentSize:inFrame:centerContent:
convertRect:fromView:
window
coalesceBlock:
mediaViewDidEndZooming:
mediaViewDidScroll:
mediaViewWillBeginZooming:
mediaView:didZoom:
setContentInset:
contentInset
initWithDelay:
setUserInteractionEnabled:
setNeedsLayout
addSubview:
greenColor
whiteColor
setContentInsetAdjustmentBehavior:
setClipsToBounds:
setAlwaysBounceHorizontal:
setAlwaysBounceVertical:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setScrollEnabled:
setAutoresizingMask:
extent
transformPoint:
componentsJoinedByString:
callStackSymbols
transformWithSourceSpace:destinationSpace:error:
convertPoint:fromView:
setTransform:
displayWithIdentifier:
_displayID
currentPlatform
scale
screen
T@"<NUPurgeableTextureImage>",&,V__image
T@"NUImageGeometry",&,V__geometry
T@"NSMutableArray",&,V__tileLayers
T@"<NUTextureImage>",&
T@"NUImageGeometry",&
T^{CGColor=},&,V_debugColor
T{?=qq},N,V_validRegionInsets
_debugColor
__image
__geometry
__tileLayers
_validRegionInsets
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
layoutSublayers
image
setImage:
geometry
setGeometry:
nu_contentsAreFlipped
_updateSublayers
debugColor
setDebugColor:
validRegionInsets
setValidRegionInsets:
_image
set_image:
set_geometry:
_tileLayers
set_tileLayers:
null
appendString:
contentsScale
name
string
imageByCompositingOverImage:
imageByApplyingTransform:
initWithIOSurface:
contents
imageByCroppingToRect:
initWithColor:
readSurfaceRegion:withBlock:
enumerateRects:
addSublayer:
setAllowsEdgeAntialiasing:
setContents:
IOSurface
setContentsRect:
initWithImage:tile:
T{?={?=qq}{?=qq}},R,V_imageRect
T@"<NUPurgeableSurfaceImage>",R,V_image
_imageRect
imageRect
endAccessRegion:
beginAccessRegion:
regionByClippingToRect:
contentRect
surface
frameRect
CGColorSpace
isEmpty
regionByClippingToRegion:
regionByShrinkingBy:
validRegion
regionWithRect:
isGeometryFlipped
renderScale
removeAllObjects
removeFromSuperlayer
beginAccess
endAccess
setGeometryFlipped:
defaultActionForKey:
_videoEnabled
TB,N,G_isVideoEnabled,S_setVideoEnabled:,V__videoEnabled
T@"NSArray",R,C,N,V_previousPipelineFilters
T@"NUComposition",C,N,V_composition
T@"NUColorSpace",&,N,V_colorSpace
T@"NUPixelFormat",&,N,V_pixelFormat
T@"NUMediaView",R,W,N,V_mediaView
Td,N,V_backingScale
T@"NSArray",C,N,V_pipelineFilters
zoomedToFit
TB,R,N,GisZoomedToFit
Td,N,V_maximumZoomScale
TB,R
T@"NUAVPlayerController",R,N,V_nuAVPlayerController
TQ,N,V_displayType
TQ,R,N,V_computedDisplayType
T{CGSize=dd},N,V_overrideZoomToFitSize
Td,N,V_overrideZoomScale
Tq,R,N
T@"NSArray",R
Tq,N
_zoomClient
_backfillClient
_livePhotoClient
_videoClient
_currentVideoSourceAssetIdentifier
_livePhotoUpdateCoalescer
_videoUpdateCoalescer
_canRenderLoopingVideoLive
_playbackMode
_videoRenderInFlightCount
_renderGroup
_renderQueue
_zoomRenderResponse
_backfillRenderResponse
_lastZoomRect
_lastZoomScale
_lastZoomRenderTime
_lastZoomRenderStatistics
_lastBackfillRenderStatictics
_isPanning
_isZooming
__videoEnabled
_composition
_colorSpace
_pixelFormat
_mediaView
_backingScale
_pipelineFilters
_maximumZoomScale
_displayType
_computedDisplayType
_overrideZoomScale
_previousPipelineFilters
_overrideZoomToFitSize
seekToTime:
seekToTime:exact:
seekToTime:exact:forceSeek:
seekToTime:toleranceBefore:toleranceAfter:
seekToTime:toleranceBefore:toleranceAfter:forceSeek:
stepByCount:
addPlaybackStateObserver:
addPlaybackTimeObserver:
addExternalPlaybackObserver:
playbackState
mediaDuration
loadedTimeRanges
playbackRate
setPlaybackRate:
playbackMode
setPlaybackMode:
initWithMediaView:
newRenderRequestForComposition:scalePolicy:regionPolicy:
updateComposition:
beginPanning
endPanning
beginZooming
endZooming
_beginAnimating
_endAnimating
wait
pipelineFilersHaveChanged
isZoomedToFit
canRenderVideoLive
convertPoint:toImageFromView:
convertPoint:fromImageToView:
convertRect:toImageFromView:
convertRect:fromImageToView:
targetSize
_scrollBounds
_regionPolicyForZoomTargetRect:
_renderFinishedWithGeometry:layer:
_updateImageRenderForComposition:
_zoomRenderResponseHandler
_backfillRenderResponseHandler
_videoFrameImageRenderResponseHandler
_updateROILayerWithLatestRenderResponse
_updateBackfillLayerWithLatestRenderResponse
_updateROILayerWithRenderResponse:
_updateBackfillLayerWithRenderResponse:
_updateImageLayer:withRenderResponse:
renderClient
_updateDisplayForMediaType:
setDisplayType:
_setDisplayType:
_setupAVPlayerController
_playerStatusDidChange:
_tearDownAVPlayerController
cacheVideoRenderFilter
_updateVideoWithResult:sourceChanged:
_scalePolicyForVideoCompositionRender
_updateVideoComposition:
_updateVideoViewLayoutWithGeometry:
_coalesceUpdateVideoComposition:
_coalesceUpdateLivePhotoComposition:
_updateLivePhotoComposition:
_livePhotoFromResponse:
_updateLivePhotoWithResponse:
_zoomRenderRequestForComposition:
_targetZoomScale
_zoomTargetRect
_lastRenderDuration
_backfillRenderRequestForComposition:
_addFullExtentConstraintsForView:
_playbackStateFromPlayerStatus:rate:
_notifyPlaybackStateChange:
livePhotoView:willBeginPlaybackWithStyle:
livePhotoView:didEndPlaybackWithStyle:
livePhotoViewDidBeginScrubbing:
livePhotoViewDidEndScrubbing:
colorSpace
setColorSpace:
pixelFormat
setPixelFormat:
mediaView
backingScale
setBackingScale:
nuAVPlayerController
displayType
computedDisplayType
overrideZoomToFitSize
setOverrideZoomToFitSize:
overrideZoomScale
setOverrideZoomScale:
_isVideoEnabled
_setVideoEnabled:
previousPipelineFilters
setHidden:
addObserverForKey:queue:block:
setValue:forKey:
numberWithBool:
status
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
dictionaryWithObjects:forKeys:count:
setTranslatesAutoresizingMaskIntoConstraints:
initWithTargetSize:
totalDuration
initWithZoomFactor:
photo
_forceUpdateForNewVideoComposition:previousComposition:newAsset:previousAsset:isPlaying:
video
valueForKey:
initWithImage:uiOrientation:videoAsset:photoTime:asset:options:videoComposition:
photoTime
submitRequest:
setScalePolicy:
setName:
initWithComposition:
submitRequestForComposition:completion:
result:
setSampleMode:
arrayByAddingObject:
isEqualToString:
assetIdentifier
initWithName:
statistics
properties
submitSynchronous:
compositionInstructions:areEqualToCompositionInstructions:
avAsset
initWithScript:
initWithSource:
setCompletionBlock:
initWithName:responseQueue:
cancel
commit
setDisableActions:
begin
isMainThread
commitAndNotifyOnQueue:withBlock:
submitGenericRequest:completion:
mediaType
scaledSize
convertRect:toLayer:
convertRect:fromLayer:
convertPoint:toLayer:
convertPoint:fromLayer:
isEqualToArray:
setPriority:
initWithLevel:
setMediaType:
setTime:
setRegionPolicy:
supportsLiveVideoRendering
setShouldCoalesceUpdates:
renderSize
subviews
_recurseView:filter:
snapshotViewAfterScreenUpdates:
TB,N,V_debugMode
T@"NUImageGeometry",&,N
_backfillLayer
_roiLayer
_containerLayer
_transitionAnimationInFlight
_shouldRemoveAnimation
_geometryAnimationLayer
_debugMode
animationDidStart:
animationDidStop:finished:
inLiveResize
renderFrameReachedTargetSize
willMoveToWindow:
transitionToSize:duration:animationCurve:completion:
transitionToSize:offset:duration:animationCurve:completion:
debugMode
setDebugMode:
removeAnimationForKey:
animationForKey:
addAnimation:forKey:
setFillMode:
setRemovedOnCompletion:
setFromValue:
presentationLayer
setToValue:
valueWithCATransform3D:
setTimingFunction:
setDuration:
animationWithKeyPath:
mainScreen
setFrame:
setBounds:
yellowColor
setMasksToBounds:
_doubleTap
_showDebug
_motionManager
_debugToggle:
_orientWithX:andY:
_resetOrientation:
_startDeviceMotion
_stopDeviceMotion
_setupDeviceMotion
startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:
rotationRate
mainQueue
setDeviceMotionUpdateInterval:
isDeviceMotionAvailable
stopDeviceMotionUpdates
setShowsDeviceMovementDisplay:
setSublayerTransform:
setAnimationTimingFunction:
setAnimationDuration:
setZPosition:
state
addGestureRecognizer:
setNumberOfTouchesRequired:
initWithTarget:action:
T{CGSize=dd},N,V_imageSize
T{CGSize=dd},R,N
T{UIEdgeInsets=dddd},N,V_contentInsets
flipped
TB,N,GisFlipped,V_flipped
T{CGPoint=dd},N,V_origin
Td,N,V_maximumScale
_flipped
_maximumScale
_origin
_contentInsets
viewImageSize
imageBounds
proposedBoundsForBounds:inFrame:
insetBoundsForCrop:inBounds:inFrame:
contentInsetsWithScale:
boundingCropRect
imageSize
setImageSize:
contentInsets
setContentInsets:
isFlipped
setFlipped:
origin
setOrigin:
maximumScale
setMaximumScale:
T{CGSize=dd},R,N,V_size
Td,R,N,V_backingScaleFactor
T{CGSize=dd},R,D,N
T{CGPoint=dd},N,V_position
T{CGPoint=dd},R,D,N
T{CGPoint=dd},N,V_anchorPoint
_backingScaleFactor
_size
_position
_anchorPoint
copyWithZone:
initWithSize:
initWithSize:backingScaleFactor:
backingSize
backingPosition
size
backingScaleFactor
position
setPosition:
anchorPoint
setAnchorPoint:
allocWithZone:
_viewport
regionForGeometry:
initWithViewport:
scaledExtent
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@16@0:8
v32@0:8q16@24
@"AVPlayerItem"
v24@0:8@16
B16@0:8
v20@0:8B16
v16@0:8
@"NUObservatory"
{?="registeredPlayer"B}
@"NSMutableArray"
@"AVPlayer"
@"AVAsset"
@"AVVideoComposition"
@"AVAudioMix"
@"<NUAVPlayerControllerDelegate>"
{?="value"q"timescale"i"flags"I"epoch"q}
B68@0:8@16@24@32B40{?=qiIq}44
@44@0:8@16@24@32B40
@40@0:8@16@24@32
v48@0:8@16@24@32^v40
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v92@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64B88
v100@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64B88@?92
v24@0:8q16
v32@0:8@16@?24
v20@0:8f16
v40@0:8{?=qiIq}16
{?=qiIq}40@0:8{?=qiIq}16
{?=qiIq}16@0:8
v28@0:8@16B24
d16@0:8
v24@0:8d16
@"<NUAVPlayerViewDelegate>"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@24@0:8@16
v20@0:8Ai16
#16@0:8
@"NURenderView"
@"NUScrollView"
@"NUMediaViewRenderer"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@"NUAVPlayerController"
@"NUAVPlayerView"
@"UIView"
{?="hasDidFinishRendering"B"hasDidUpdateLivePhoto"B"hasDidFinishRenderingWithStatistics"B"hasDidZoom"B"hasDidScroll"B"hasWillBeginZooming"B"hasDidEndZooming"B"hasIsReadyForVideoPlayback"B"hasDidStartPreparingVideo"B"hasDidFinishPreparingVideo"B"hasWillBeginLivePhotoPlayback"B"hasDidEndLivePhotoPlayback"B}
@"NUCoalescer"
{CGSize="width"d"height"d}
@"<NUMediaViewDelegate>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8@"NUAVPlayerView"16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@"NUAVPlayerController"16
v32@0:8@"NUAVPlayerController"16d24
v40@0:8@"NUAVPlayerController"16d24d32
v32@0:8@16d24
v40@0:8@16d24d32
v28@0:8d16B24
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
{CGSize=dd}16@0:8
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}48@0:8{CGPoint=dd}16@32@40
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v24@0:8@?16
{UIEdgeInsets=dddd}64@0:8{CGSize=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
{UIEdgeInsets=dddd}68@0:8{CGSize=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32B64
v48@0:8{UIEdgeInsets=dddd}16
v32@0:8@16@24
v40@0:8@16@24d32
v24@0:8B16B20
{UIEdgeInsets=dddd}16@0:8
v32@0:8{CGSize=dd}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{UIEdgeInsets=dddd}100@0:8{UIEdgeInsets=dddd}16{CGSize=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64B96
^{CGColor=}
@"<NUPurgeableTextureImage>"
@"NUImageGeometry"
{?="x"q"y"q}
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
v32@0:8@16^{CGContext=}24
@32@0:8@16@24
^{CGColor=}16@0:8
v24@0:8^{CGColor=}16
{?=qq}16@0:8
v32@0:8{?=qq}16
@"<NUPurgeableSurfaceImage>"
{?="origin"{?="x"q"y"q}"size"{?="width"q"height"q}}
{?={?=qq}{?=qq}}16@0:8
@"NUSurfaceRenderClient"
@"NULivePhotoRenderClient"
@"NUVideoRenderClient"
@"NSString"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_queue>"
@"NUResponse"
@"<NURenderStatistics>"
@"NUComposition"
@"NUColorSpace"
@"NUPixelFormat"
@"NUMediaView"
@"NSArray"
v44@0:8{?=qiIq}16B40
v48@0:8{?=qiIq}16B40B44
@24@0:8@?<v@?@"<NUMediaPlayer>"q>16
@24@0:8@?<v@?@"<NUMediaPlayer>"{?=qiIq}>16
@24@0:8@?<v@?@"<NUMediaPlayer>"B>16
q16@0:8
@"NSArray"16@0:8
@24@0:8@?16
@?16@0:8
v24@0:8Q16
q28@0:8q16f24
v32@0:8@16q24
B52@0:8@16@24@32@40B48
@"NUTiledImageLayer"
@"_NUContainerLayer"
@"CALayer"
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v56@0:8{CGSize=dd}16d32@40@?48
v72@0:8{CGSize=dd}16{CGPoint=dd}32d48@56@?64
@"UILongPressGestureRecognizer"
@"CMMotionManager"
v32@0:8d16d24
{CGPoint="x"d"y"d}
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
{CGRect={CGPoint=dd}{CGSize=dd}}112@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48{CGRect={CGPoint=dd}{CGSize=dd}}80
{UIEdgeInsets=dddd}24@0:8d16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
@24@0:8^{_NSZone=}16
@32@0:8{CGSize=dd}16
@40@0:8{CGSize=dd}16d32
@"NUViewport"
@"NURegion"24@0:8@"NUImageGeometry"16
