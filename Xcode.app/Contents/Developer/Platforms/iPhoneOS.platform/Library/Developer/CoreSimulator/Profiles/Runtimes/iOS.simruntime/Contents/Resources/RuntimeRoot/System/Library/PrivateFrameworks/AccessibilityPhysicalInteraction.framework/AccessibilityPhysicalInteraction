@(#)PROGRAM:AccessibilityPhysicalInteraction  PROJECT:Accessibility-1
@333333
>u'@
MbP?
?333333
7@ffffff
?433333
9@es-8R
?es-8R
AXPIFingerEventSendingQueue
Transport
AXPIFingerTransport
PrimaryUsagePage
PrimaryUsage
Authenticated
Built-In
DisplayIntegrated
VendorID
ProductID
DeviceUsagePairs
DeviceUsagePage
DeviceUsage
displayUUID
v8@?0
v24@?0@"UISceneSession"8^B16
v32@?0@"NSNumber"8@"AXPIFingerEventTouchInfo"16^B24
AXPIEventSender-EventSendingQueue
AXPISystemActionHelperClientBackTap
AccessibilityPhysicalInteraction.accessibilityphysicalinteractionbundle
AXPISystemActionHelperSysdiagnoseCancelCountQueue
v24@?0@"AXSwitch"8^B16
v16@?0q8
com.apple.axpi.digital.crown.scroll.queue
v16@?0@"NSError"8
Received error from Speak This!: %@
REBOOT_ALERT_MESSAGE_TV
REBOOT_ALERT_CONFIRM
ALERT_CANCEL
ReportDescriptor
PressCountTrackingEnabled
PressCountDoublePressTimeout
PressCountTriplePressTimeout
LongPressTimeout
v16@?0^{__CFRunLoopTimer=}8
 - location: {%f, %f}, pressed: %i, selected: %i, force: %f, shape: %i
SuppressVisualsAssertion
v32@?0@"AXPIFingerModel"8Q16^B24
v32@?0@"NSNumber"8Q16^B24
v12@?0B8
AXPIStrings
strokeEnd
drawCircleAnimation
holdDurationProgressTrack
strokeColor
AXPIFingerView-SetSelected
v32@?0@"NSString"8Q16^B24
Activating detection mode on simulator not supported
NC is visible: %d
Unable to perform sysdiagnose because it was not supported on this platform.
Failed to create notification with error code: %i
Could not create _homeButtonUserDevice
_homeButtonUserDevice expectedly nil. Need to call warm
send home button state down: %d
Invalid system action requested: %@
AXPIFingerEventTouchInfo
AXPIFingerEventSender
HIDVirtualEventServiceDelegate
NSObject
AXPIEventSender
AXPISystemActionHelper
AXPIFingerUtilities
AXPIPinchChainView
AXPIFingerModel
AXPIFingerController
AXPIFingerModelDelegate
AXAssertionCoordinatorDelegate
AXPIPointSmoother
UIBezierPathFromFingerShape
AXPIFingerLayer
AXPIFingerView
CAAnimationDelegate
AXPIFingerSmallAppearance
AXPIFingerAppearanceDelegate
AXPIFingerLargeAppearance
AXPISystemPointerPreciseAppearance
AXPISystemPointerLargeAppearance
AXPIAdditions
AXPIFingerContainerView
_UILumaTrackingBackdropViewDelegate
normalizedLocation
setNormalizedLocation:
force
setForce:
_force
_normalizedLocation
T{CGPoint=dd},N,V_normalizedLocation
Td,N,V_force
initWithDisplayUUID:
init
numberWithUnsignedShort:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
mutableCopy
setObject:forKeyedSubscript:
setDelegate:
setCancelHandler:
setDispatchQueue:
activate
cancel
dealloc
_assignFingerIdentifiersToTouches:
performDownWithTouchesByFingerIdentifier:
_sendHandEvent:touchesByFingerIdentifier:
performMoveWithTouchesByFingerIdentifier:
performUpWithTouchesByFingerIdentifier:
count
sharedApplication
openSessions
scene
screen
displayConfiguration
hardwareIdentifier
displayUUID
isEqualToString:
enumerateObjectsUsingBlock:
mainScreen
setGenerationCount:
shouldAddRealEventFlag
additionalFlags
setAdditionalFlags:
properties
valueForKey:
boolValue
setIsBuiltIn:
setIsDisplayIntegrated:
newHIDEventRef
dispatchEvent:
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
numberWithUnsignedInteger:
objectForKeyedSubscript:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setProperty:forKey:forService:
propertyForKey:forService:
copyEventMatching:forService:
setOutputEvent:forService:
notification:withProperty:forService:
startNewGeneration
performDownWithTouches:
performMoveWithTouches:
performUpWithTouches:
performCancel
setShouldAddRealEventFlag:
senderID
setSenderID:
eventService
setEventService:
setProperties:
eventSendingQueue
setEventSendingQueue:
setDisplayUUID:
.cxx_destruct
_eventGenerationCount
_shouldAddRealEventFlag
_senderID
_eventService
_properties
_eventSendingQueue
_displayUUID
T@"HIDVirtualEventService",&,N,V_eventService
T@"NSDictionary",&,N,V_properties
T@"NSObject<OS_dispatch_queue>",&,N,V_eventSendingQueue
T@"NSString",&,N,V_displayUUID
TB,N,V_shouldAddRealEventFlag
TQ,N,V_senderID
touchRepresentationWithHandType:location:
array
unsignedIntegerValue
setPathIndex:
setPathIdentity:
scale
pixelSize
setPathLocation:
setPathMajorRadius:
setPathPressure:
setOrbValue:
setTransducerType:
setPathProximity:
addObject:
enumerateKeysAndObjectsUsingBlock:
handInfo
setPaths:
_referenceBounds
postHIDEventDirectly
normalizedEventRepresentation:scale:
server
postEvent:systemEvent:
sharedInstance
sendEventRepresentation:
sendIOHIDEventRef:
_ioSystemPostBackClient
numberWithBool:
setPostHIDEventDirectly:
defaultLocationsForNumberOfFingers:aroundPoint:withinBounds:
arrayWithCapacity:
_points:adjustedForBounds:
fingerModelForLocation:
location
laserEnabled
filterWithType:
setValue:forKey:
initWithDefaultValues
setDampingRatio:
setResponse:
defaultLocationsForNumberOfFingers:aroundPoint:
defaultPinchLocationsAroundPoint:withinBounds:
updateFirstLocation:secondLocation:forPinchWithRadiusDelta:angleDelta:
fingerModelsForPointStrings:
pointStringsForFingerModels:
fingerShapeForCorner:
pointerFiltersForLuminanceLevel:
pointerAnimationSettings
activateSiriFromClient:
openVoiceControl
pressHomeButtonDown
liftHomeButtonUp
_handleHomeButtonDispatch:
toggleReachability
armApplePay
notifyEvent:
toggleDock
isAppSwitcherVisible
dismissAppSwitcher
openAppSwitcher
toggleAppLibrary
toggleQuickNote
pressLockButtonDown
liftLockButtonUp
_sendButtonEvent:
pressVolumeDownButtonDown
liftVolumeDownButtonUp
pressVolumeUpButtonDown
liftVolumeUpButtonUp
pressTVMenuButtonDown
liftTVMenuButtonUp
_sendButtonEvent:postHIDEventDirectly:
pressTVSelectButtonDown
liftTVSelectButtonUp
toggleSpotlight
revealSpotlight
attemptToPresentNearbyDeviceControlPicker
toggleTorch
classicInvertColors
setClassicInvertColors:
setLastSmartInvertColorsEnablement:
zoomShouldShowSlug
setZoomShouldShowSlug:
assistiveTouchSwitches
source
_hasScreenSwitch
showAlert:withHandler:
toggleFullKeyboardAccess
turnDigitalCrown:
speakThisWithOptions:errorHandler:
_sendShakeEvent
setX:
setY:
setZ:
setType:
accelerometerRepresentation:
isGuidedAccessActive
takeScreenshot
isControlCenterVisible
showControlCenter:
isNotificationCenterVisible
showNotificationCenter:
toggleNotificationCenter
adjustSystemZoom:
_sendDeviceOrientationChange:
activateSOSMode
rebootDevice
dictionary
buttonRepresentationWithType:
setOrientation:
performActionForSystemAction:fromClient:
activateTripleClick
toggleAppSwitcher
toggleControlCenter
activateHomeButton
activateLockButton
isRingerSwitchOn
toggleRingerSwitch:
shake
toggleCommandAndControl
increaseVolume
decreaseVolume
confirmApplePay
hasPrefix:
stringWithFormat:
rangeOfString:
substringFromIndex:
sharedManager
shortcutForIdentifier:
performShortcut:
_performScrollAction:
_toggleAssistiveTouch
_toggleVoiceOver
_toggleClassicInvertColors
_toggleColorFilters
_toggleSmartInvert
_toggleZoom
_toggleZoomController
startMagnifier
_toggleSwitchControl
_toggleFullKeyboardAccess
_activateSpeakScreen
toggleNearbyDeviceControlPicker
activateDetectionMode
_openCamera
isOrientationLocked
setOrientationLocked:
activeApplicationOrientation
bounds
lineGestureBetweenPoints:duration:
performGesture:
activateSiri
activateVoiceControl
toggleMute
pressTVMenuButton
pressTVSelectButton
turnDigitalCrownFullRevolution:
rotatePortrait
rotateUpsideDown
rotateLeft
rotateRight
performSysdiagnoseWithStatusUpdateHandler:
_showAlertForReboot
warm
performActionForSystemAction:
_homeButtonUserDevice
_sysdiagnoseCancelCount
_sysdiagnoseCancelCountQueue
_fingerController
initWithFrame:
clearColor
setBackgroundColor:
setUserInteractionEnabled:
setNeedsDisplay
appearanceDelegate
fingerWidth
useSystemFilters
frame
fingerInnerRadius
strokeWidth
strokeOutlineWidth
showInnerCircle
strokeOutlineColor
CGColor
showFingerOutlines
isPressed
isSelected
selectedStrokeColor
deselectedStrokeColor
setStartPoint:
setEndPoint:
setPressed:
setSelected:
isUserInteractionEnabled
drawRect:
startPoint
endPoint
setAppearanceDelegate:
_pressed
_selected
_appearanceDelegate
_startPoint
_endPoint
T{CGPoint=dd},N,V_startPoint
T{CGPoint=dd},N,V_endPoint
pressed
TB,N,GisPressed,V_pressed
selected
TB,N,GisSelected,V_selected
T@"<AXPIFingerAppearanceDelegate>",W,N,V_appearanceDelegate
setLocation:
setShape:
delegate
didUpdatePressStateForFingerModel:
setPressed:sendDelegateCallback:
didUpdateSelectedStateForFingerModel:
didUpdateLocationForFingerModel:
didUpdateForceForFingerModel:
didUpdateShapeForFingerModel:
shape
stringByAppendingFormat:
updateWithPropertiesFromFingerModel:
_shape
_delegate
_location
T@"<AXPIFingerModelDelegate>",&,N,V_delegate
T{CGPoint=dd},N,V_location
TQ,N,V_shape
isPinchChainVisible
liftFingersUpAnimated:
_interruptGestureIfNeeded
enumerateFingersUsingBlock:
clearAllFingersAnimated:endPointForAnimation:
removeAllObjects
_showFingerModels:animated:startPointForAnimation:shouldShowPinchChain:shouldReuseFingers:
objectAtIndexedSubscript:
animateWithDuration:animations:
addObjectsFromArray:
showFingerModels:animated:startPointForAnimation:shouldShowPinchChain:
midpointForFingers
firstObject
lastObject
fixedReferenceWindow
window
convertPoint:toView:
convertPoint:toWindow:
fixedCoordinateSpace
convertPoint:toCoordinateSpace:
convertPoint:fromWindow:
convertPoint:fromView:
convertPoint:fromCoordinateSpace:
_sceneReferencePointFromFingerLocation:
fixedReferenceBounds
_eventTouchInfoForFingerLocation:force:
_eventTouchInfoForFinger:
setShouldAnimatePress:
indexOfObject:
updateWithFingerModel:forFingerAtIndex:
pressFingersDownAnimated:sendTouchEvents:
liftFingersUpAnimated:sendTouchEvents:
cancelCircularProgressAnimation
performCircularProgressAnimationOnFingersWithDuration:completion:
beginUpdates
endUpdates
_handleStartingFingersForGesture:animated:startPointForAnimation:midpoint:showFingers:
updateForLandscape:
numberOfEvents
fingerIdentifiersAtEventIndex:
containsObject:
pointForFingerIdentifier:atEventIndex:
arePointsDeviceRelative
_fingerLocationFromSceneReferencePoint:
_updateFinger:withIdentifier:atEventIndex:
showStartingFingersForGesture:animated:startPointForAnimation:
_showStartingFingersForGesture:animated:startPointForAnimation:
forceForFingerIdentifier:atEventIndex:
timeAtEventIndex:
currentRunLoop
dateWithTimeIntervalSinceNow:
runUntilDate:
performGesture:completion:
_performGesture:shouldShowFingers:completion:
_replayEventAtIndex:inGesture:allFingerIdentifiers:
_endGestureWithSuccess:
indexOfFingerAtPoint:
initWithIdentifier:delegate:
suppressVisualsAssertionCoodinator
acquireAssertionWithReason:
setShouldSuppressFingerVisuals:
pressFingersDownAnimated:
_pointStringsFromFingers
rectForFingersAtPoints:
animateToTapWithDuration:
_isInUpdateBlock
_touchInfosByIdentifierForPressedFingers
_sendMoveEventIfNeededForFingerModel:atIndex:
_fingerIdentifierForIndex:
initialize
assertionCoordinator:assertionsDidBecomeActive:
isPinchEnabled
numberOfFingers
showFingerModels:animated:startPointForAnimation:
showPinchFingersAnimated:midpoint:
resetPinchFingers
midpointOfStartingFingersForGesture:
showStartingFingersForGesture:
performWithoutPreparingGesture:completion:
cancelGesture
fingerModelAtPoint:
acquireAssertionToSuppressVisualsWithReason:
legacyPressFingersDown
legacyLiftFingersUp
moveFingersToPoints:
performDownAtPoint:
performMoveToPoint:
performUpAtPoint:
fingerContainerView
fingerModels
isPerformingGesture
setFixedReferenceWindow:
setFixedReferenceBounds:
_fingerContainerView
_fingerModels
_eventSender
_updateCount
_downInfosByIdentifier
_upInfosByIdentifier
_didMoveFingersDuringUpdate
_gestureCompletion
_isPerformingGesture
_suppressVisualsAssertionCoodinator
_fixedReferenceWindow
_fixedReferenceBounds
T@"AXAssertionCoordinator",R,N,V_suppressVisualsAssertionCoodinator
T@"UIView",R,N,V_fingerContainerView
TB,R,N
T@"NSArray",R,N,V_fingerModels
TQ,R,N
TB,N
TQ,N
TB,R,N,V_isPerformingGesture
T@"UIWindow",&,N,V_fixedReferenceWindow
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_fixedReferenceBounds
bundleForClass:
localizedStringForKey:value:table:
initWithCapacity:
updateFPS
pointBuffer
smoothingMaxDelta
subarrayWithRange:
_averagePointsInArray:
bufferSize
removeObjectsInRange:
removeObjectAtIndex:
shouldOffsetBufferPoints
_deltaForPoint:
valueWithPoint:
useWeightedMovingAverage
CGPointValue
rotatedScreenBounds
xOrder
xOffset
yOrder
yOffset
lowFPSDetectedCount
lastTimePointAdded
setFramesPerSecond:
setLastTimePointAdded:
framesPerSecond
setLowFPSDetectedCount:
addPoint:
point
removeAllPoints
setBufferSize:
setUseWeightedMovingAverage:
setSmoothingMaxDelta:
setShouldOffsetBufferPoints:
setXOrder:
setYOrder:
setXOffset:
setYOffset:
setPointBuffer:
_useWeightedMovingAverage
_shouldOffsetBufferPoints
_bufferSize
_smoothingMaxDelta
_xOrder
_yOrder
_xOffset
_yOffset
_pointBuffer
_framesPerSecond
_lastTimePointAdded
_lowFPSDetectedCount
T@"NSMutableArray",&,N,V_pointBuffer
TQ,N,V_framesPerSecond
TQ,N,V_lastTimePointAdded
TQ,N,V_lowFPSDetectedCount
T@"<AXPIPointSmootherClientDelegate>",W,N,V_delegate
T{CGPoint=dd},R,N
TB,N,V_useWeightedMovingAverage
TQ,N,V_bufferSize
Td,N,V_smoothingMaxDelta
TB,N,V_shouldOffsetBufferPoints
Td,N,V_xOrder
Td,N,V_yOrder
Td,N,V_xOffset
Td,N,V_yOffset
bezierPath
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
moveToPoint:
addLineToPoint:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
closePath
bezierPathForFingerShape:inRect:curveOnly:
deselectedFillColor
setFillColor:
initWithAppearanceDelegate:
outerFrame
_isSelected
_outerFrame
TB,N,GisSelected,V_isSelected
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_outerFrame
layer
initWithFrame:appearanceDelegate:
setClipsToBounds:
addSublayer:
setCursorLayer:
setStrokeColor:
setLineWidth:
setOuterStrokeTrackLayer:
setOuterStrokeLayer:
fingerInnerCircleInnerRadius
innerCircleStrokeWidth
bezierPathWithOvalInRect:
CGPath
setPath:
setLineJoin:
setInnerStrokeLayer:
_setPathForCurrentShape
outerStrokeTrackLayer
removeAllAnimations
outerStrokeLayer
innerStrokeLayer
removeFromSuperlayer
cursorLayer
setPressed:animated:
begin
setAnimationDuration:
commit
cancelExisingCircularProgressAnimation
setLastProgressCompletionBlock:
_createProgressLayerWithDuration:inRect:
setProgressLayer:
progressLayer
lastProgressCompletionBlock
setPosition:
setLineCap:
animationWithKeyPath:
setDuration:
numberWithInt:
setFromValue:
setToValue:
addAnimation:forKey:
pressedCircularProgressFillColor
circularProgressFillColor
setName:
setContentsScale:
setRemovedOnCompletion:
_iconScaleForForce:
setTransform:
layerClass
animationDidStart:
animationDidStop:finished:
backdropLayer
filterLayer
sizeThatFits:
pointInside:withEvent:
animateCircularProgressWithDuration:completion:
accessibilityIgnoresInvertColors
_cursorLayer
_outerStrokeTrackLayer
_outerStrokeLayer
_innerStrokeLayer
_progressLayer
_lastProgressCompletionBlock
T@"AXPIFingerLayer",&,N,V_cursorLayer
T@"CAShapeLayer",&,N,V_outerStrokeTrackLayer
T@"CAShapeLayer",&,N,V_outerStrokeLayer
T@"CAShapeLayer",&,N,V_innerStrokeLayer
T@"CAShapeLayer",&,N,V_progressLayer
T@?,C,N,V_lastProgressCompletionBlock
TB,N,GisSelected
colorWithWhite:alpha:
whiteColor
blackColor
selectedFillColor
pressedAlpha
pressedScale
unpressedAlpha
unpressedScale
colorWithRed:green:blue:alpha:
tapGestureAtPoint:isDoubleTap:numberOfFingers:
flickGestureAtPoint:angle:numberOfFingers:
lineGestureBetweenPoints:duration:numberOfFingers:
_tapGestureAtPoint:isDoubleTap:numberOfFingers:force:
valueWithCGPoint:
numberWithDouble:
addPointsByFingerIdentifier:forces:atTime:
holdGestureAtPoint:withDuration:numberOfFingers:
flickGestureStartingAtPoint:endingAtPoint:numberOfFingers:
lineGestureBetweenPoints:duration:numberOfFingers:initialHoldDuration:
objectAtIndex:
_addAllFingerPointsForPoint:numberOfFingers:toReplayableGesture:atTime:
_pinchGestureWithCenter:bounds:radiusDelta:angleDelta:startingWidth:
_addFingerPoints:toReplayableGesture:atTime:
tapGestureAtPoint:
flickGestureAtPoint:angle:
longPressGestureAtPoint:
scrollGestureFromPoint:toPoint:duration:
forceTouchGestureAtPoint:
pinchInGestureWithPoint:bounds:
pinchOutGestureWithPoint:bounds:
rotateRightGestureWithPoint:bounds:
rotateLeftGestureWithPoint:bounds:
initWithTransitionBoundaries:delegate:frame:
setPaused:
setHidden:
addSubview:
setAutoresizingMask:
shouldAnimatePress
removeFromSuperview
_updatePinchChainAppearance
_updateLumaMeasurementViewFrame
_updateSystemFiltersWithBackgroundLuminanceLevel:
setPressedState:animated:
shouldSuppressFingerVisuals
setAlpha:
setFrame:
copy
animateWithDuration:animations:completion:
setOpacity:
_animateUsingSpringBehavior:tracking:animations:completion:
_performWithoutRetargetingAnimations:
setFilters:
backgroundLumaView:didTransitionToLevel:
_fingerViews
_viewForAnimatingAlpha
_pinchChainView
_pointerLumaMeasurementView
_shouldAnimatePress
_shouldSuppressFingerVisuals
TB,N,V_shouldAnimatePress
TB,N,V_shouldSuppressFingerVisuals
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
{CGPoint="x"d"y"d}
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B40@0:8@16@24@32
@32@0:8@16@24
B32@0:8@16@24
v40@0:8q16@24@32
B40@0:8@16@"NSString"24@32
@32@0:8@"NSString"16@24
@"HIDEvent"32@0:8@"NSDictionary"16@24
B32@0:8@"HIDEvent"16@24
v40@0:8q16@"NSDictionary"24@32
@24@0:8@16
v16@0:8
v24@0:8@16
v28@0:8I16@20
v20@0:8B16
v24@0:8Q16
@"HIDVirtualEventService"
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSString"
v24@0:8^{__IOHIDEvent=}16
^{__IOHIDEventSystemClient=}
@40@0:8Q16{CGPoint=dd}24
@72@0:8Q16{CGPoint=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40
@64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
v48@0:8^{CGPoint=dd}16^{CGPoint=dd}24d32d40
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
Q24@0:8Q16
@24@0:8Q16
v24@0:8q16
v24@0:8@?16
v20@0:8I16
v24@0:8I16B20
v32@0:8@16@24
^{__IOHIDUserDevice=}
@"AXPIFingerController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<AXPIFingerAppearanceDelegate>"
@32@0:8{CGPoint=dd}16
v24@0:8B16B20
@"<AXPIFingerModelDelegate>"
v24@0:8@"AXPIFingerModel"16
v28@0:8@16B24
v28@0:8@"AXAssertionCoordinator"16B24
v36@0:8B16{CGPoint=dd}20
v44@0:8@16B24{CGPoint=dd}28
v52@0:8@16B24{CGPoint=dd}28B44B48
{CGPoint=dd}32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16d32
v32@0:8d16@?24
{CGPoint=dd}24@0:8@16
@44@0:8@16B24{CGPoint=dd}28
@56@0:8@16B24{CGPoint=dd}28^{CGPoint=dd}44B52
v40@0:8Q16@24@32
v32@0:8@16@?24
v36@0:8@16B24@?28
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"AXPIFingerContainerView"
@"NSMutableArray"
@"AXPIFingerEventSender"
@"NSMutableDictionary"
@"AXAssertionCoordinator"
@"UIWindow"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGSize=dd}32@0:8{CGPoint=dd}16
@"<AXPIPointSmootherClientDelegate>"
@60@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24B56
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGSize=dd}32@0:8{CGSize=dd}16
B40@0:8{CGPoint=dd}16@32
@56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
d24@0:8d16
@?16@0:8
@"AXPIFingerLayer"
@"CAShapeLayer"
@"UIColor"16@0:8
v40@0:8@16@24Q32
@32@0:8@16d24
@44@0:8{CGPoint=dd}16B32Q36
@52@0:8{CGPoint=dd}16B32Q36d44
@48@0:8{CGPoint=dd}16d32Q40
@56@0:8{CGPoint=dd}16{CGPoint=dd}32Q48
@40@0:8@16d24Q32
@48@0:8@16d24Q32d40
@56@0:8{CGPoint=dd}16{CGPoint=dd}32d48
@88@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32d64d72d80
v56@0:8{CGPoint=dd}16Q32@40d48
v40@0:8@16@24d32
v32@0:8@"_UILumaTrackingBackdropView"16Q24
v48@0:8@16B24{CGPoint=dd}28B44
Q32@0:8{CGPoint=dd}16
@"UIView"
@"AXPIPinchChainView"
@"_UILumaTrackingBackdropView"
@(#)PROGRAM:AccessibilityPhysicalInteraction  PROJECT:Accessibility-1
@333333
>u'@
MbP?
?333333
7@ffffff
?433333
?es-8R
?es-8R
AXPIFingerEventSendingQueue
Transport
AXPIFingerTransport
PrimaryUsagePage
PrimaryUsage
Authenticated
Built-In
DisplayIntegrated
VendorID
ProductID
DeviceUsagePairs
DeviceUsagePage
DeviceUsage
displayUUID
v8@?0
v24@?0@"UISceneSession"8^B16
v32@?0@"NSNumber"8@"AXPIFingerEventTouchInfo"16^B24
AXPIEventSender-EventSendingQueue
AXPISystemActionHelperClientBackTap
AccessibilityPhysicalInteraction.accessibilityphysicalinteractionbundle
AXPISystemActionHelperSysdiagnoseCancelCountQueue
v24@?0@"AXSwitch"8^B16
v16@?0q8
com.apple.axpi.digital.crown.scroll.queue
v16@?0@"NSError"8
Received error from Speak This!: %@
REBOOT_ALERT_MESSAGE_TV
REBOOT_ALERT_CONFIRM
ALERT_CANCEL
ReportDescriptor
PressCountTrackingEnabled
PressCountDoublePressTimeout
PressCountTriplePressTimeout
LongPressTimeout
v16@?0^{__CFRunLoopTimer=}8
 - location: {%f, %f}, pressed: %i, selected: %i, force: %f, shape: %i
SuppressVisualsAssertion
v32@?0@"AXPIFingerModel"8Q16^B24
v32@?0@"NSNumber"8Q16^B24
v12@?0B8
AXPIStrings
strokeEnd
drawCircleAnimation
holdDurationProgressTrack
strokeColor
AXPIFingerView-SetSelected
v32@?0@"NSString"8Q16^B24
Activating detection mode on simulator not supported
NC is visible: %d
Unable to perform sysdiagnose because it was not supported on this platform.
Failed to create notification with error code: %i
Could not create _homeButtonUserDevice
_homeButtonUserDevice expectedly nil. Need to call warm
send home button state down: %d
Invalid system action requested: %@
AXPIFingerEventTouchInfo
AXPIFingerEventSender
HIDVirtualEventServiceDelegate
NSObject
AXPIEventSender
AXPISystemActionHelper
AXPIFingerUtilities
AXPIPinchChainView
AXPIFingerModel
AXPIFingerController
AXPIFingerModelDelegate
AXAssertionCoordinatorDelegate
AXPIPointSmoother
UIBezierPathFromFingerShape
AXPIFingerLayer
AXPIFingerView
CAAnimationDelegate
AXPIFingerSmallAppearance
AXPIFingerAppearanceDelegate
AXPIFingerLargeAppearance
AXPISystemPointerPreciseAppearance
AXPISystemPointerLargeAppearance
AXPIAdditions
AXPIFingerContainerView
_UILumaTrackingBackdropViewDelegate
boolValue
setFrame:
setResponse:
initWithTransitionBoundaries:delegate:frame:
convertPoint:toCoordinateSpace:
sharedApplication
performShortcut:
setOrbValue:
additionalFlags
blackColor
stringWithFormat:
setRemovedOnCompletion:
numberWithBool:
initWithIdentifier:delegate:
convertPoint:fromWindow:
setOpacity:
addSubview:
stringByAppendingFormat:
bezierPathWithOvalInRect:
numberOfEvents
setFilters:
fixedCoordinateSpace
convertPoint:fromView:
addSublayer:
setObject:forKeyedSubscript:
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
firstObject
notifyEvent:
_referenceBounds
setFillColor:
convertPoint:fromCoordinateSpace:
setZoomShouldShowSlug:
addPointsByFingerIdentifier:forces:atTime:
layer
dictionaryWithObjects:forKeys:count:
screen
containsObject:
window
setZ:
addObjectsFromArray:
setNeedsDisplay
bezierPath
speakThisWithOptions:errorHandler:
dictionaryWithCapacity:
CGColor
whiteColor
normalizedEventRepresentation:scale:
scene
setDuration:
initWithDefaultValues
setName:
setY:
source
addObject:
dictionary
scale
commit
newHIDEventRef
valueWithPoint:
initWithCapacity:
setX:
setDispatchQueue:
addLineToPoint:
_performWithoutRetargetingAnimations:
lastObject
begin
runUntilDate:
valueWithCGPoint:
toggleFullKeyboardAccess
mutableCopy
colorWithWhite:alpha:
setValue:forKey:
addArcWithCenter:radius:startAngle:endAngle:clockwise:
setPosition:
moveToPoint:
colorWithRed:green:blue:alpha:
attemptToPresentNearbyDeviceControlPicker
indexOfObject:
setUserInteractionEnabled:
valueForKey:
setDampingRatio:
addAnimation:forKey:
setLineWidth:
setPaused:
showNotificationCenter:
fingerIdentifiersAtEventIndex:
assistiveTouchSwitches
closePath
setLineJoin:
setType:
removeObjectsInRange:
activeApplicationOrientation
filterWithType:
setTransform:
setPaths:
mainScreen
arrayWithObjects:count:
setContentsScale:
clearColor
setLineCap:
removeObjectAtIndex:
setPathProximity:
CGPath
arrayWithCapacity:
setTransducerType:
setClipsToBounds:
removeFromSuperview
postEvent:systemEvent:
setPathPressure:
array
enumerateObjectsUsingBlock:
setToValue:
hasPrefix:
classicInvertColors
setClassicInvertColors:
openVoiceControl
isOrientationLocked
showControlCenter:
setLastSmartInvertColorsEnablement:
removeFromSuperlayer
localizedStringForKey:value:table:
timeAtEventIndex:
setPathMajorRadius:
enumerateKeysAndObjectsUsingBlock:
setStrokeColor:
updateForLandscape:
hardwareIdentifier
openSessions
setCancelHandler:
dateWithTimeIntervalSinceNow:
isNotificationCenterVisible
showAlert:withHandler:
arePointsDeviceRelative
removeAllObjects
setPathLocation:
setBackgroundColor:
openAppSwitcher
handInfo
isGuidedAccessActive
setIsDisplayIntegrated:
removeAllAnimations
setAutoresizingMask:
setPathIndex:
_animateUsingSpringBehavior:tracking:animations:completion:
objectForKeyedSubscript:
animationWithKeyPath:
currentRunLoop
isEqualToString:
setIsBuiltIn:
setPathIdentity:
objectAtIndexedSubscript:
frame
unsignedIntegerValue
cancel
animateWithDuration:animations:completion:
pointForFingerIdentifier:atEventIndex:
setPath:
countByEnumeratingWithState:objects:count:
activate
CGPointValue
displayConfiguration
substringFromIndex:
objectAtIndex:
setAnimationDuration:
forceForFingerIdentifier:atEventIndex:
buttonRepresentationWithType:
setHidden:
acquireAssertionWithReason:
isControlCenterVisible
count
subarrayWithRange:
animateWithDuration:animations:
rangeOfString:
dispatchEvent:
setAlpha:
bundleForClass:
numberWithUnsignedShort:
copy
shortcutForIdentifier:
accelerometerRepresentation:
isAppSwitcherVisible
setGenerationCount:
pixelSize
dismissAppSwitcher
setAdditionalFlags:
numberWithUnsignedInteger:
setFromValue:
convertPoint:toWindow:
sharedManager
setOrientationLocked:
numberWithInt:
bounds
server
touchRepresentationWithHandType:location:
convertPoint:toView:
zoomShouldShowSlug
numberWithDouble:
setOrientation:
normalizedLocation
setNormalizedLocation:
force
setForce:
_force
_normalizedLocation
T{CGPoint=dd},N,V_normalizedLocation
Td,N,V_force
init
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setProperty:forKey:forService:
propertyForKey:forService:
copyEventMatching:forService:
setOutputEvent:forService:
notification:withProperty:forService:
initWithDisplayUUID:
startNewGeneration
performDownWithTouches:
performDownWithTouchesByFingerIdentifier:
performMoveWithTouches:
performMoveWithTouchesByFingerIdentifier:
performUpWithTouches:
performUpWithTouchesByFingerIdentifier:
performCancel
_sendHandEvent:touchesByFingerIdentifier:
_assignFingerIdentifiersToTouches:
shouldAddRealEventFlag
setShouldAddRealEventFlag:
senderID
setSenderID:
eventService
setEventService:
properties
setProperties:
eventSendingQueue
setEventSendingQueue:
displayUUID
setDisplayUUID:
.cxx_destruct
_eventGenerationCount
_shouldAddRealEventFlag
_senderID
_eventService
_properties
_eventSendingQueue
_displayUUID
T@"HIDVirtualEventService",&,N,V_eventService
T@"NSDictionary",&,N,V_properties
T@"NSObject<OS_dispatch_queue>",&,N,V_eventSendingQueue
T@"NSString",&,N,V_displayUUID
TB,N,V_shouldAddRealEventFlag
TQ,N,V_senderID
sharedInstance
sendEventRepresentation:
sendIOHIDEventRef:
_ioSystemPostBackClient
setPostHIDEventDirectly:
postHIDEventDirectly
defaultLocationsForNumberOfFingers:aroundPoint:
defaultLocationsForNumberOfFingers:aroundPoint:withinBounds:
defaultPinchLocationsAroundPoint:withinBounds:
updateFirstLocation:secondLocation:forPinchWithRadiusDelta:angleDelta:
fingerModelsForPointStrings:
pointStringsForFingerModels:
_points:adjustedForBounds:
fingerShapeForCorner:
laserEnabled
pointerFiltersForLuminanceLevel:
pointerAnimationSettings
activateSiri
activateSiriFromClient:
activateVoiceControl
activateHomeButton
pressHomeButtonDown
liftHomeButtonUp
toggleReachability
toggleCommandAndControl
armApplePay
confirmApplePay
toggleDock
isRingerSwitchOn
toggleAppSwitcher
toggleAppLibrary
toggleQuickNote
activateLockButton
pressLockButtonDown
liftLockButtonUp
toggleRingerSwitch:
toggleMute
decreaseVolume
increaseVolume
pressVolumeDownButtonDown
liftVolumeDownButtonUp
pressVolumeUpButtonDown
liftVolumeUpButtonUp
pressTVMenuButton
pressTVMenuButtonDown
liftTVMenuButtonUp
pressTVSelectButton
pressTVSelectButtonDown
liftTVSelectButtonUp
toggleSpotlight
revealSpotlight
toggleNearbyDeviceControlPicker
toggleTorch
_toggleClassicInvertColors
_toggleVoiceOver
_toggleSmartInvert
_toggleZoom
_toggleZoomController
startMagnifier
_hasScreenSwitch
_toggleSwitchControl
_toggleAssistiveTouch
_toggleFullKeyboardAccess
activateDetectionMode
_openCamera
_toggleColorFilters
turnDigitalCrown:
turnDigitalCrownFullRevolution:
_activateSpeakScreen
activateTripleClick
shake
_sendShakeEvent
takeScreenshot
toggleControlCenter
toggleNotificationCenter
adjustSystemZoom:
rotatePortrait
rotateUpsideDown
rotateLeft
rotateRight
activateSOSMode
rebootDevice
performSysdiagnoseWithStatusUpdateHandler:
_showAlertForReboot
warm
_handleHomeButtonDispatch:
_sendButtonEvent:
_sendButtonEvent:postHIDEventDirectly:
_sendDeviceOrientationChange:
performActionForSystemAction:
performActionForSystemAction:fromClient:
_performScrollAction:
_homeButtonUserDevice
_sysdiagnoseCancelCount
_sysdiagnoseCancelCountQueue
_fingerController
initWithFrame:
setStartPoint:
setEndPoint:
setPressed:
setSelected:
isUserInteractionEnabled
drawRect:
startPoint
endPoint
isPressed
isSelected
appearanceDelegate
setAppearanceDelegate:
_pressed
_selected
_appearanceDelegate
_startPoint
_endPoint
T{CGPoint=dd},N,V_startPoint
T{CGPoint=dd},N,V_endPoint
pressed
TB,N,GisPressed,V_pressed
selected
TB,N,GisSelected,V_selected
T@"<AXPIFingerAppearanceDelegate>",W,N,V_appearanceDelegate
fingerModelForLocation:
setPressed:sendDelegateCallback:
setLocation:
setShape:
updateWithPropertiesFromFingerModel:
location
shape
delegate
setDelegate:
_shape
_delegate
_location
T@"<AXPIFingerModelDelegate>",&,N,V_delegate
T{CGPoint=dd},N,V_location
TQ,N,V_shape
initialize
didUpdateLocationForFingerModel:
didUpdateForceForFingerModel:
didUpdatePressStateForFingerModel:
didUpdateSelectedStateForFingerModel:
didUpdateShapeForFingerModel:
assertionCoordinator:assertionsDidBecomeActive:
isPinchEnabled
numberOfFingers
clearAllFingersAnimated:endPointForAnimation:
showFingerModels:animated:startPointForAnimation:
_showFingerModels:animated:startPointForAnimation:shouldShowPinchChain:shouldReuseFingers:
showPinchFingersAnimated:midpoint:
resetPinchFingers
_sceneReferencePointFromFingerLocation:
_fingerLocationFromSceneReferencePoint:
_eventTouchInfoForFingerLocation:force:
_eventTouchInfoForFinger:
_touchInfosByIdentifierForPressedFingers
pressFingersDownAnimated:sendTouchEvents:
liftFingersUpAnimated:sendTouchEvents:
pressFingersDownAnimated:
liftFingersUpAnimated:
performCircularProgressAnimationOnFingersWithDuration:completion:
cancelCircularProgressAnimation
enumerateFingersUsingBlock:
midpointForFingers
midpointOfStartingFingersForGesture:
_showStartingFingersForGesture:animated:startPointForAnimation:
_handleStartingFingersForGesture:animated:startPointForAnimation:midpoint:showFingers:
showStartingFingersForGesture:
showStartingFingersForGesture:animated:startPointForAnimation:
_replayEventAtIndex:inGesture:allFingerIdentifiers:
performGesture:
performGesture:completion:
performWithoutPreparingGesture:completion:
_performGesture:shouldShowFingers:completion:
cancelGesture
_interruptGestureIfNeeded
_endGestureWithSuccess:
fingerModelAtPoint:
suppressVisualsAssertionCoodinator
acquireAssertionToSuppressVisualsWithReason:
_pointStringsFromFingers
legacyPressFingersDown
legacyLiftFingersUp
moveFingersToPoints:
rectForFingersAtPoints:
animateToTapWithDuration:
performDownAtPoint:
performMoveToPoint:
performUpAtPoint:
_sendMoveEventIfNeededForFingerModel:atIndex:
_fingerIdentifierForIndex:
_isInUpdateBlock
beginUpdates
endUpdates
fingerContainerView
fingerModels
isPerformingGesture
fixedReferenceWindow
setFixedReferenceWindow:
fixedReferenceBounds
setFixedReferenceBounds:
_fingerContainerView
_fingerModels
_eventSender
_updateCount
_downInfosByIdentifier
_upInfosByIdentifier
_didMoveFingersDuringUpdate
_gestureCompletion
_isPerformingGesture
_suppressVisualsAssertionCoodinator
_fixedReferenceWindow
_fixedReferenceBounds
T@"AXAssertionCoordinator",R,N,V_suppressVisualsAssertionCoodinator
T@"UIView",R,N,V_fingerContainerView
TB,R,N
T@"NSArray",R,N,V_fingerModels
TQ,R,N
TB,N
TQ,N
TB,R,N,V_isPerformingGesture
T@"UIWindow",&,N,V_fixedReferenceWindow
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_fixedReferenceBounds
rotatedScreenBounds
_averagePointsInArray:
addPoint:
point
_deltaForPoint:
removeAllPoints
bufferSize
updateFPS
setBufferSize:
useWeightedMovingAverage
setUseWeightedMovingAverage:
smoothingMaxDelta
setSmoothingMaxDelta:
shouldOffsetBufferPoints
setShouldOffsetBufferPoints:
xOrder
setXOrder:
yOrder
setYOrder:
xOffset
setXOffset:
yOffset
setYOffset:
pointBuffer
setPointBuffer:
framesPerSecond
setFramesPerSecond:
lastTimePointAdded
setLastTimePointAdded:
lowFPSDetectedCount
setLowFPSDetectedCount:
_useWeightedMovingAverage
_shouldOffsetBufferPoints
_bufferSize
_smoothingMaxDelta
_xOrder
_yOrder
_xOffset
_yOffset
_pointBuffer
_framesPerSecond
_lastTimePointAdded
_lowFPSDetectedCount
T@"NSMutableArray",&,N,V_pointBuffer
TQ,N,V_framesPerSecond
TQ,N,V_lastTimePointAdded
TQ,N,V_lowFPSDetectedCount
T@"<AXPIPointSmootherClientDelegate>",W,N,V_delegate
T{CGPoint=dd},R,N
TB,N,V_useWeightedMovingAverage
TQ,N,V_bufferSize
Td,N,V_smoothingMaxDelta
TB,N,V_shouldOffsetBufferPoints
Td,N,V_xOrder
Td,N,V_yOrder
Td,N,V_xOffset
Td,N,V_yOffset
bezierPathForFingerShape:inRect:curveOnly:
initWithAppearanceDelegate:
outerFrame
_isSelected
_outerFrame
TB,N,GisSelected,V_isSelected
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_outerFrame
layerClass
animationDidStart:
animationDidStop:finished:
backdropLayer
initWithFrame:appearanceDelegate:
filterLayer
sizeThatFits:
pointInside:withEvent:
setPressed:animated:
animateCircularProgressWithDuration:completion:
cancelExisingCircularProgressAnimation
_setPathForCurrentShape
_createProgressLayerWithDuration:inRect:
_iconScaleForForce:
accessibilityIgnoresInvertColors
cursorLayer
setCursorLayer:
outerStrokeTrackLayer
setOuterStrokeTrackLayer:
outerStrokeLayer
setOuterStrokeLayer:
innerStrokeLayer
setInnerStrokeLayer:
progressLayer
setProgressLayer:
lastProgressCompletionBlock
setLastProgressCompletionBlock:
_cursorLayer
_outerStrokeTrackLayer
_outerStrokeLayer
_innerStrokeLayer
_progressLayer
_lastProgressCompletionBlock
T@"AXPIFingerLayer",&,N,V_cursorLayer
T@"CAShapeLayer",&,N,V_outerStrokeTrackLayer
T@"CAShapeLayer",&,N,V_outerStrokeLayer
T@"CAShapeLayer",&,N,V_innerStrokeLayer
T@"CAShapeLayer",&,N,V_progressLayer
T@?,C,N,V_lastProgressCompletionBlock
TB,N,GisSelected
selectedFillColor
deselectedFillColor
selectedStrokeColor
deselectedStrokeColor
strokeOutlineColor
circularProgressFillColor
pressedCircularProgressFillColor
useSystemFilters
pressedAlpha
pressedScale
unpressedAlpha
unpressedScale
strokeWidth
strokeOutlineWidth
innerCircleStrokeWidth
showFingerOutlines
fingerInnerRadius
fingerInnerCircleInnerRadius
showInnerCircle
fingerWidth
_updateFinger:withIdentifier:atEventIndex:
tapGestureAtPoint:
flickGestureAtPoint:angle:
lineGestureBetweenPoints:duration:
tapGestureAtPoint:isDoubleTap:numberOfFingers:
_tapGestureAtPoint:isDoubleTap:numberOfFingers:force:
longPressGestureAtPoint:
holdGestureAtPoint:withDuration:numberOfFingers:
flickGestureAtPoint:angle:numberOfFingers:
flickGestureStartingAtPoint:endingAtPoint:numberOfFingers:
lineGestureBetweenPoints:duration:numberOfFingers:
lineGestureBetweenPoints:duration:numberOfFingers:initialHoldDuration:
scrollGestureFromPoint:toPoint:duration:
forceTouchGestureAtPoint:
pinchInGestureWithPoint:bounds:
pinchOutGestureWithPoint:bounds:
rotateRightGestureWithPoint:bounds:
rotateLeftGestureWithPoint:bounds:
_pinchGestureWithCenter:bounds:radiusDelta:angleDelta:startingWidth:
_addAllFingerPointsForPoint:numberOfFingers:toReplayableGesture:atTime:
_addFingerPoints:toReplayableGesture:atTime:
backgroundLumaView:didTransitionToLevel:
isPinchChainVisible
showFingerModels:animated:startPointForAnimation:shouldShowPinchChain:
setShouldSuppressFingerVisuals:
indexOfFingerAtPoint:
updateWithFingerModel:forFingerAtIndex:
setPressedState:animated:
_updateSystemFiltersWithBackgroundLuminanceLevel:
_updateLumaMeasurementViewFrame
_updatePinchChainAppearance
shouldAnimatePress
setShouldAnimatePress:
shouldSuppressFingerVisuals
_fingerViews
_viewForAnimatingAlpha
_pinchChainView
_pointerLumaMeasurementView
_shouldAnimatePress
_shouldSuppressFingerVisuals
TB,N,V_shouldAnimatePress
TB,N,V_shouldSuppressFingerVisuals
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
{CGPoint="x"d"y"d}
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B40@0:8@16@24@32
@32@0:8@16@24
B32@0:8@16@24
v40@0:8q16@24@32
B40@0:8@16@"NSString"24@32
@32@0:8@"NSString"16@24
@"HIDEvent"32@0:8@"NSDictionary"16@24
B32@0:8@"HIDEvent"16@24
v40@0:8q16@"NSDictionary"24@32
@24@0:8@16
v16@0:8
v24@0:8@16
v28@0:8I16@20
v20@0:8B16
v24@0:8Q16
@"HIDVirtualEventService"
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSString"
v24@0:8^{__IOHIDEvent=}16
^{__IOHIDEventSystemClient=}
@40@0:8Q16{CGPoint=dd}24
@72@0:8Q16{CGPoint=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40
@64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
v48@0:8^{CGPoint=dd}16^{CGPoint=dd}24d32d40
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
Q24@0:8Q16
@24@0:8Q16
v24@0:8q16
v24@0:8@?16
v20@0:8I16
v24@0:8I16B20
v32@0:8@16@24
^{__IOHIDUserDevice=}
@"AXPIFingerController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<AXPIFingerAppearanceDelegate>"
@32@0:8{CGPoint=dd}16
v24@0:8B16B20
@"<AXPIFingerModelDelegate>"
v24@0:8@"AXPIFingerModel"16
v28@0:8@16B24
v28@0:8@"AXAssertionCoordinator"16B24
v36@0:8B16{CGPoint=dd}20
v44@0:8@16B24{CGPoint=dd}28
v52@0:8@16B24{CGPoint=dd}28B44B48
{CGPoint=dd}32@0:8{CGPoint=dd}16
@40@0:8{CGPoint=dd}16d32
v32@0:8d16@?24
{CGPoint=dd}24@0:8@16
@44@0:8@16B24{CGPoint=dd}28
@56@0:8@16B24{CGPoint=dd}28^{CGPoint=dd}44B52
v40@0:8Q16@24@32
v32@0:8@16@?24
v36@0:8@16B24@?28
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"AXPIFingerContainerView"
@"NSMutableArray"
@"AXPIFingerEventSender"
@"NSMutableDictionary"
@"AXAssertionCoordinator"
@"UIWindow"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGSize=dd}32@0:8{CGPoint=dd}16
@"<AXPIPointSmootherClientDelegate>"
@60@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24B56
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGSize=dd}32@0:8{CGSize=dd}16
B40@0:8{CGPoint=dd}16@32
@56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
d24@0:8d16
@?16@0:8
@"AXPIFingerLayer"
@"CAShapeLayer"
@"UIColor"16@0:8
v40@0:8@16@24Q32
@32@0:8@16d24
@44@0:8{CGPoint=dd}16B32Q36
@52@0:8{CGPoint=dd}16B32Q36d44
@48@0:8{CGPoint=dd}16d32Q40
@56@0:8{CGPoint=dd}16{CGPoint=dd}32Q48
@40@0:8@16d24Q32
@48@0:8@16d24Q32d40
@56@0:8{CGPoint=dd}16{CGPoint=dd}32d48
@88@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32d64d72d80
v56@0:8{CGPoint=dd}16Q32@40d48
v40@0:8@16@24d32
v32@0:8@"_UILumaTrackingBackdropView"16Q24
v48@0:8@16B24{CGPoint=dd}28B44
Q32@0:8{CGPoint=dd}16
@"UIView"
@"AXPIPinchChainView"
@"_UILumaTrackingBackdropView"
