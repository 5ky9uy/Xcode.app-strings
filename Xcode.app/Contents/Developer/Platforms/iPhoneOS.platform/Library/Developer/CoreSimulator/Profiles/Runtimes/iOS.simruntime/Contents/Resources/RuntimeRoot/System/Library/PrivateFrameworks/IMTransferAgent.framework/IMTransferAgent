0E@(#)PROGRAM:IMTransferAgent  PROJECT:IMTransferAgent-1
command
file-data
topic
transfer-ID
file-name
sent-path
success
owner-id
signature
url-string-key
v8@?0
LocalAttachments
IMTransfer Agent IDS Interface starting
com.apple.private.alloy.idstransfers
Received Request to Remote Upload The Attachment
(Incremented) Transfer Count is now %d
(Decremented) Transfer Count is now %d
(Getter) Transfer Count is now %d
We Have No More Transfers Remaining, We will shut down in 10 seconds
Idle exiting, we're done here
RECEIVED Remote Attachment IDS Message
v32@?0Q8Q16Q24
Finished Uploading The Remote request file with SentPath: %@, Success: %@ Error: %@ OwnerID: %@ Signature: %@ RequestURLString: %@
v60@?0@"NSString"8B16@"NSError"20@"NSString"28@"NSString"36@"NSData"44@"NSString"52
 Found completion block for attachment
 No completion block for attachment found
 SENDING Remote Attachment IDS Message with content %@
Sending message to local account (identifier %@)  (error %@)  (messageDict %@) success: %@
incomingData on service %@, account %@ data %@ fromID %@ context %@
Unknown incoming IDS message for remote attachments with command %d, ignoring...
Sent message with identifier %@ success %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Warning, missing %@ to add to %s
dictionary
MMCS
Upload token handled response dictionary %@
owner
T@"NSString",C,V_owner
T@"NSData",C,V_signature
responseAuthToken
T@"NSString",C,V_responseAuthToken
responseRequestorID
T@"NSString",C,V_responseRequestorID
contentVersion
Tq,V_contentVersion
contentHeaders
T@"NSString",C,V_contentHeaders
authURLString
T@"NSString",C,V_authURLString
responseContentBody
T@"NSData",C,V_responseContentBody
responseContentVersion
Tq,V_responseContentVersion
length
T@"NSNumber",C,V_length
responseRequestURL
T@"NSString",C,V_responseRequestURL
contentBody
T@"NSData",C,V_contentBody
responseContentHeaders
T@"NSString",C,V_responseContentHeaders
pushToken
T@"NSData",C,N,VpushToken
sessionToken
T@"NSData",C,N,V_sessionToken
senderID
T@"NSString",C,N,V_senderID
destinationID
T@"NSString",C,N,V_destinationID
anonymousSenderID
T@"NSString",C,N,V_anonymousSenderID
icloud
mmcs-whitelist
Server bag does not have whitelisted urls. Resorting to defaults
Checking URL %@ with domains %@
URL is whitelisted %@
MMCS: Invalid URL %@
controller
T@"MMCSController",&,N,V_controller
MessageDelivery
Sending FTMessage: %@
send FTMessage: %@
    Delivered FTMessage: %@
    Result code: %d, errorType = %d
    Result dictionary: %@
    Error: %@
  Success: %@
Sending callback for FTMessage send
v40@?0@"IDSBaseMessage"8@"NSError"16q24@"NSDictionary"32
messageDelivery
T@"FTMessageDelivery",&,N,V_messageDelivery
com.apple.nickname
Transfer_Nicknames
Public Nickname retrival completed with error %@
Public nickname retrival errors %@
Public Nickname record found %@
Failed to generate preKey from data -- failed to fetch public nickname record {error: %@, recordID: %@}
Failed to create nickname from record {error: %@, preKey: %@, nicknameRecord: %@}
Transfer agent sending back nickname: %@
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@?<B@?>8
v24@?0@"CKRecordID"8@"NSError"16
creatorUserRecordID == %@
Nicknames
Querying for all record ids created by userRecordID %@
Got back records in zone %@ created by current user %@ error %@
v24@?0@"NSArray"8@"NSError"16
Client request to store new personal nickname %@ path%@
v44@?0B8@"IMNickname"12@"NSString"20@"NSData"28@"NSError"36
Failed to generate publicNicknameEncrytionPreKey -- saving public nickname failed {error: %@}
Failed to create public nickname record -- saving public nickname failed {error: %@, preKey: %@}
Nickname Upload
Nickname uploaded in time: %f
Encrypted Nickname stored in Public Database
Failed to update nickname with recordID: %@ with error: %@
Unable to store in Public Database, aborting fan out to other devices
v20@?0B8@"NSError"12
Client request to delete personal nickname with recordID
Going to delete recordIDs %@
Nickname Delete
Deleted nickname record in time: %f
Publishing Nickname to CloudKit Public DB with record %@
Deleting Nickname from CloudKit Public DB with recordID %@
Going to delete nicknames from public db %@ and save nickname to public db %@
Public Nickname with recordID Publish completed with error %@
We got an error modifying the record {record: %@ error: %@}
We should retry the ck operation %@
We should not retry the ck operation on this error %@
v12@?0B8
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
We got an unique index constraint violation, we should clear the existing records and then retry
We did not have success deleting the records, not retrying
We got a conflict error while trying to upload to CK, we should not overwrite the record %@
We got a server rejected request, this is unrecoverable so we shouldn't retry
Dispatching CloudKit operation with retry: %lu and retryInterval: %f
Failed CloudKit operation. Too many retries.
B8@?0
IMDCKDatabaseManager
Nicknames NOT enabled, returning nil public database
use-old-nickname-container
UseOldProfilesContainer
Server says to use new container? %@ {serverbagValue: %@ version: %@}
com.apple.internal.messages.memoji
com.apple.messages.profiles
**** Initializing dev nick name container with ID %@
Initializing production container %@
nickNameContainer
T@"CKContainer",R,N,V_nickNameContainer
Encryption
Request to encrypt data at url: %@
Request to decrypt data at url: %@  with key: %@
imsgNicknamePublicv2
IMNickname_CKRecord
Decrytion nickname record {record.allKeys: %@, preKey: %@}
Failed to get tag from record {error: %@, preKey: %@, record: %@}
Failed to decrypt nickname record {error: %@, preKey: %@, record: %@}
Failed to get target url for avatar image {error: %@, record: %@}
Failed to write image data {error: %@, avatarImageURL: %@, avatarData.length: %ld, record: %@}
Created nickname from record {nickname: %@, record.name: %@, record.allKeys: %@, preKey: %@}
Creating record from nickname {nickname: %@, preKey: %@}
Failed to create nicknameData -- Failed to create nickname public record {nickname: %@}
Missing nickname
Nickname has avatar data
Nickname doesn't have avatar data {nickname: %@}
Failed to encrypt nickname {error: %@, nickname: %@, preKey: %@}
Failed to create record from cipherFields {error: %@, cipherFields: %@, nickname: %@}
Failed to get target url for avatar image while updating nickname {error: %@, recordID: %@}
Failed to move image from %@ to %@ for recordID: %@
Failed to move item %@ to %@ with error %@
Failed to create target URL for nickname asset {error: %@, recordName: %@, fieldName: %@}
Writing nickname asset {targetURL: %@}
Failed to write nickname asset {error: %@, targetURL: %@, data.length: %ld}
Created record from dictionary {record.allKeys: %@, dictionary.allKeys: %@, assetFieldNames: %@}
Failed to create record from dictioanry {error: %@, dictioanry: %@}
Failed to create nickname assets directory {error: %@, url: %@}
Failed to get data from asset fileURL {error: %@, asset: %@, fieldName: %@}
Invalid type for nickname record field {fieldName: %@, value: %@}
Failed to create dictionary from record {error: %@, record: %@}
should-disallow-authget
Opting out of AuthGet due to server override.
IMTransferAgent
OptOutOfOptimizedDownloadPath
Opting out of AuthGet due to user default.
Setting default for opting out of AuthGet to %@. This may still be overridden by the server.
EnableOptimizedUploadPath
should-disallow-authput
Opting out of AuthPut due to server override.
OptOutOfOptimizedUploadPath
Opting out of AuthPut due to user default.
Setting default for opting out of AuthPut to %@. This may still be overridden by the server.
IMTransferAgentIDSInterface
IDSServiceDelegate
NSObject
FTiMessageRequestMMCSDownloadToken
NSCopying
FTiMessageRequestMMCSUploadToken
IMTransferAgentController
IMTransferAgentDeliveryController
IMTransferAgentNicknameController
IMTransferEncryptionController
IMNickname_CKRecord
IMTransferEncryptionHelpers
init
changeCurrentDirectoryPath:
initWithService:
addDelegate:queue:
removeDelegate:
dealloc
setObject:forKey:
_sendUploadRequest:topic:transferID:allowReauthorize:
dataWithContentsOfFile:
numberWithInteger:
dictionaryWithObjectsAndKeys:
_sendIDSMessage:
numberWithBool:
decrementTransferCount
incrementTransferCount
_dataForKey:
_stringForKey:
defaultManager
_randomTemporaryPathWithFileName:
writeToFile:atomically:
sharedInstance
_sendUploadResponse:success:error:ownerID:signature:requestURLString:transferID:
sendFilePath:topic:transferID:userInfo:progressBlock:completionBlock:
objectForKey:
boolValue
removeObjectForKey:
count
_CUTCopyGzippedData
setWithObject:
sendData:toDestinations:priority:options:identifier:error:
_CUTOptionallyDecompressData
unsignedIntValue
_handleUploadRequest:
_handleUploadResponse:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
isLocalDevicePresent
remoteUploadFileRequest:topic:transferID:completionBlock:
currentTransfers
localCompanionDevice
_idsService
_uniqueIDToTransferCompletionBlockMap
_numTransfers
lastObject
setTopic:
setWantsResponse:
copyWithZone:
owner
setOwner:
topic
responseAuthToken
setResponseAuthToken:
responseRequestorID
setResponseRequestorID:
signature
setSignature:
contentVersion
setContentVersion:
contentHeaders
setContentHeaders:
authURLString
setAuthURLString:
responseContentBody
setResponseContentBody:
addObject:
messageBody
mutableCopy
intValue
setResponseContentVersion:
responseContentVersion
length
numberWithUnsignedInteger:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
command
responseCommand
requiredKeys
handleResponseDictionary:
_owner
_responseAuthToken
_signature
_responseRequestorID
_contentVersion
_contentHeaders
_authURLString
_responseContentBody
_responseContentVersion
setResponseRequestURL:
setLength:
setContentBody:
setResponseContentHeaders:
setSenderID:
setDestinationID:
setAnonymousSenderID:
setSessionToken:
setPushToken:
responseRequestURL
contentBody
responseContentHeaders
senderID
destinationID
anonymousSenderID
sessionToken
pushToken
_length
_responseRequestURL
_contentBody
_responseContentHeaders
_sessionToken
_senderID
_destinationID
_anonymousSenderID
domain
isEqualToString:
code
setController:
_sendFilePath:topic:transferID:retryAttemptCount:userInfo:progressBlock:completionBlock:
cancelPutRequestID:
arrayWithObjects:count:
sharedInstanceForBagType:
_defaultMMCSWhiteList
countByEnumeratingWithState:objects:count:
__im_conformsToDomain:domainExtension:
_receiveFileTransfer:topic:path:requestURLString:ownerID:signature:allowReauthorize:fileSize:progressBlock:completionBlock:
_shouldRetryUploadGivenMMCSError:retryAttemptCount:
cancelSendTransferID:
_isWhiteListedURL:
receiveFileTransfer:topic:path:requestURLString:ownerID:signature:fileSize:progressBlock:completionBlock:
controller
_controller
APNSMessageDeliveryClass
alloc
setMaxConcurrentMessages:
setMessageDelivery:
setCompletionBlock:
sendMessage:
sendFTMessage:completionBlock:
messageDelivery
_messageDelivery
errorWithDomain:code:userInfo:
initWithRecordName:
arrayWithObject:
initWithRecordIDs:
_nickNameFetchConfiguration
setConfiguration:
userInfo
preKeyWithDataRepresentation:error:
nicknameFromPublicRecord:preKey:error:
setFetchRecordsCompletionBlock:
_nickNamePublicDB
addOperation:
performCloudKitOperation:withError:
_nickNameContainer
fetchUserRecordIDWithCompletionHandler:
predicateWithFormat:
initWithRecordType:predicate:
defaultRecordZone
zoneID
performQuery:inZoneWithID:completionHandler:
fetchCurrentUserForNicknameContainer:
avatar
imageFilePath
generatePreKeyWithError:
publicRecordForNicknameWithPreKey:error:
startTimingForKey:
stopTimingForKey:
totalTimeForKey:
recordID
updateNicknameWithRecordID:error:
recordName
dataRepresentation
_updateEncryptedPersonalNicknameToPublicCloudKitDBSavingRecord:deletingRecordID:withCompletionBlock:
arrayByApplyingSelector:
_updateEncryptedPersonalNicknameToPublicCloudKitDBSavingRecord:deletingRecordIDs:withCompletionBlock:
fetchAllNicknamesForCurrentUser:
array
initWithRecordsToSave:recordIDsToDelete:
_nickNameSaveConfiguration
_handleSaveNicknameError:withCompletionBlock:
setModifyRecordsCompletionBlock:
valueForKey:
allValues
deleteAllPersonalNicknamesWithCompletion:
cloudKitOperationWithRetryCount:withError:operation:
_retryIntervalForRetryCount:
ckQueue
addOperationWithBlock:
setQualityOfService:
setMaxConcurrentOperationCount:
publicCloudDatabase
nickNamePublicDatabase
setPreferAnonymousRequests:
unsignedIntegerValue
getBoolFromDomain:forKey:
_serverSaysToUseOldContainer
_nickNameContainerIdentifier
shouldUseDevNickNameContainer
initWithContainerIdentifier:environment:
setUseZoneWidePCS:
initWithContainerID:options:
lockdownManager
isInternalInstall
getNicknameWithRecordID:decryptionKey:completionBlock:
setPersonalNickname:oldRecordID:completionBlock:
.cxx_destruct
nickNameContainer
encryptURL:completionBlock:
decryptURL:key:outputFileName:completionBlock:
allKeys
tagWithStringRepresentation:error:
_dataDictionaryFromCKRecord:error:
decryptAndVerifyCipherFields:withPreKey:recordTagToVerify:error:
initWithPublicDictionaryRepresentationWithoutAvatar:
_assetTargetURLForRecordName:fieldName:error:
writeToURL:options:error:
initWithpublicDictionaryMetadataRepresentation:
path
setImageFilePath:
setAvatar:
setRecordID:
publicDictionaryRepresentationWithoutAvatar
publicDictionaryMetadataRepresentation
imageData
encryptAndTagPlainFields:withPreKey:returningRecordTag:error:
stringRepresentation
_CKRecordFromDictionary:recordName:assetFieldNames:error:
fileURLWithPath:
_moveAvatarImage:newURL:error:
fileExistsAtPath:
removeItemAtPath:error:
moveItemAtURL:toURL:error:
initWithRecordType:
containsObject:
initWithFileURL:
stringByExpandingTildeInPath
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
stringByAppendingFormat:
stringByReplacingOccurrencesOfString:withString:
URLByAppendingPathComponent:
initWithCapacity:
fileURL
dataWithContentsOfURL:options:error:
data
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v24@0:8@16
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v16@0:8
v48@0:8@16@24@32@?40
i16@0:8
v44@0:8@16@24@32B40
v68@0:8@16B24@28@36@44@52@60
@"IDSService"
@"NSMutableDictionary"
@24@0:8^{_NSZone=}16
q16@0:8
v24@0:8q16
@"NSString"
@"NSData"
@"NSNumber"
B32@0:8@16Q24
v72@0:8@16@24@32Q40@48@?56@?64
v64@0:8@16@24@32@40@?48@?56
v92@0:8@16@24@32@40@48@56B64Q68@?76@?84
v88@0:8@16@24@32@40@48@56Q64@?72@?80
@"MMCSController"
v32@0:8@16@?24
@"FTMessageDelivery"
v24@0:8@?16
v32@0:8@?16@24
v40@0:8Q16@24@?32
d24@0:8Q16
@"CKContainer"
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@40@0:8@16@24^@32
