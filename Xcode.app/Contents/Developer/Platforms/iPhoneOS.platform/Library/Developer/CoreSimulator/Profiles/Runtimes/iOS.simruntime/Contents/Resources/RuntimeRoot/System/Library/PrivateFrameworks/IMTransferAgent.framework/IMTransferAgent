@(#)PROGRAM:IMTransferAgent  PROJECT:IMTransferAgent-1
command
file-data
topic
transfer-ID
source-app-ID
file-name
sent-path
success
owner-id
signature
url-string-key
v8@?0
LocalAttachments
IMTransfer Agent IDS Interface starting
com.apple.private.alloy.idstransfers
Received Request to Remote Upload an Attachment at %@ sourceApp %@
(Incremented) Transfer Count is now %d
(Decremented) Transfer Count is now %d
(Getter) Transfer Count is now %d
Warning, missing %@ to add to %s
msgDict
We Have No More Transfers Remaining, We will shut down in 10 seconds
Idle exiting, we're done here
RECEIVED Remote Attachment IDS Message
v32@?0Q8Q16Q24
Finished Uploading The Remote request file with SentPath: %@, Success: %@ Error: %@ OwnerID: %@ Signature: %@ RequestURLString: %@
v60@?0@"NSString"8B16@"NSError"20@"NSString"28@"NSString"36@"NSData"44@"NSString"52
 Found completion block for attachment
 No completion block for attachment found
 SENDING Remote Attachment IDS Message with content %@
Sending message to local account (identifier %@)  (error %@)  (messageDict %@) success: %@
incomingData on service %@, account %@ data %@ fromID %@ context %@
Unknown incoming IDS message for remote attachments with command %d, ignoring...
Sent message with identifier %@ success %@
dictionary
MMCS
Upload token handled response dictionary %@
IMTransferAgentErrorDomain
We will not try to re-upload as the transfer was explicitly cancelled
Sent MMCS transfer progress updated to %0.02f  (%@)
v24@?0@"MMCSPutFile"8d16
Opting upload with GUID %@ out of optimized AuthPut flow.
File transfer upload failed! %@  Should retry: %@   Retries: %@  Max Retries: %d
Needs to reauthorize, will retry using that: %@
transfer %@ completionBlock called with putFile %@ sucess %@ shouldRetry %@ shouldReauthorize %@ error %@
v36@?0@"MMCSPutFile"8B16B20B24@"NSError"28
Upload-transfer-%@-mmcs-registration
Upload-transfer-%@-preauth
Upload-transfer-%@-mmcs-upload
Registered transfer %@
Made signature: %@
Tried to send Madrid AuthPut, but could not fetch content body for transfer: %@
Tried to send Madrid AuthPut, but could not fetch content header for transfer: %@
TransferID %@ Sending upload request: %@
  Cell Link Quality: %d
  WiFi Link Quality: %d
x-apple-mmcs-proto-version
Madrid responded with 'cV': %tu, but no protocol version was found in header: %@ (transfer: %@)
Madrid responded with 'cV': %tu, but no auth data was found in header: %@ (transfer: %@)
Madrid responded with 'cV': %tu, but we requested a 'cV': %tu (transfer: %@)
TransferID %@ Finished sending mmcs upload request: %@
    Auth token: %@
   Request URL: %@
      Owner ID: %@
http://%@
%@/%@
Request to send transfer: %@ %@   requestorID: %@  requestURL: %@  auth token: %@
Upload timing for transfer ID %@ %@
Finished upload request for files: %@  upload time was: %f  speed: %.0f kb/s
Failed upload request: %@   files: %@   upload time was: %f
v28@?0@"NSArray"8B16@"NSError"20
Failed sending mmcs upload request: %@
v32@?0@"IMTransferAgentDeliveryController"8@16B24I28
Failed registering transfer: %@
v12@?0B8
IMTransferAgent
local device: %@ file size: %lu
icloud
mmcs-whitelist
Server bag does not have allowlisted urls. Resorting to defaults
Checking URL %@ with domains %@
URL is allowlisted %@
MMCS: Invalid URL %@
MMCS failing transfer invalid url %@
Invalid url
Received MMCS transfer progress updated to %0.02f  (%@)
v24@?0@"MMCSGetFile"8d16
Created get file request: %@
Receiving file transfer complete: %@
Receiving file transfer failed: %@    error: %@
File transfer downloads failed!  Should retry: %@   Retries: %d  Max Retries: %d
Needs to re-authorize, will retry using that: %@
Re-registering files: %@
Getting transfers: %@
Finished download request for files: %@     retry: %d
Failed download request: %@   files: %@   retry: %d
v36@?0@"MMCSGetFile"8B16B20B24@"NSError"28
download-transfer-%@-mmcs-registration
download-transfer-%@-preauth
download-transfer-%@-mmcs-upload
Opting download with GUID %@ out of optimized AuthGet flow.
%@://%@
Sending Madrid AuthGet with content headers: %@ body:%@ for transfer: %@
Tried to send Madrid AuthGet, but could not fetch content header for transfer: %@
Madrid responded with 'cV': %tu, but no response body (transfer: %@)
Finished sending mmcs download request: %@
Request to receive transfer: %@  path: %@  auth token: %@  requestor ID: %@
Download timing for transfer ID%@ %@
Built download succeeded for files: %@
Finished download request for files: %@  download time was: %f  speed: %.0f kb/s
Failed downloading files: %@  error: %@  time was: %f
Failed sending mmcs download request: %@, error %u
MessageDelivery
Sending FTMessage: %@
send FTMessage: %@
    Delivered FTMessage: %@
    Result code: %d, errorType = %d
    Result dictionary: %@
    Error: %@
  Success: %@
Sending callback for FTMessage send
v40@?0@"IDSBaseMessage"8@"NSError"16q24@"NSDictionary"32
com.apple.nickname
description
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@?<B@?>8
v24@?0@"CKRecordID"8@"NSError"16
creatorUserRecordID == %@
v24@?0@"NSArray"8@"NSError"16
v44@?0B8@"IMNickname"12@"NSString"20@"NSData"28@"NSError"36
Nickname Upload
v20@?0B8@"NSError"12
Nickname Delete
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
B8@?0
use-old-nickname-container
UseOldProfilesContainer
com.apple.internal.messages.memoji
com.apple.messages.profiles
Encryption
Request to encrypt data at url: %@
Request to decrypt data at url: %@  with key: %@
imsgNicknamePublicv2
Missing fileURL for CKAsset {key: %@, value: %@}
Unexpected type for {key: %@, value: %@}
IMNickname CKRecord contains object for key '%@' but of unexpected type
IMNickname_CKRecord
Decrypting nickname record
Handing Nickname data to BlastDoor to defuse
Creating record from nickname {nickname: %@, preKey: %@}
Failed to create nicknameData -- Failed to create nickname public record {nickname: %@}
Missing nickname
Nickname has avatar data
Nickname doesn't have avatar data {nickname: %@}
Failed to encrypt nickname {error: %@, nickname: %@, preKey: %@}
Failed to create record from cipherFields {error: %@, cipherFields: %@, nickname: %@}
Failed to get target url for avatar image while updating nickname {error: %@, recordID: %@}
Failed to move image from %@ to %@ for recordID: %@
Failed to move item %@ to %@ with error %@
Failed to create target URL for nickname asset {error: %@, recordName: %@, fieldName: %@}
Writing nickname asset {targetURL: %@}
Failed to write nickname asset {error: %@, targetURL: %@, data.length: %ld}
Created record from dictionary {record.allKeys: %@, dictionary.allKeys: %@, assetFieldNames: %@}
Failed to create record from dictioanry {error: %@, dictioanry: %@}
Failed to create nickname assets directory {error: %@, url: %@}
should-disallow-authget
OptOutOfOptimizedDownloadPath
EnableOptimizedUploadPath
should-disallow-authput
OptOutOfOptimizedUploadPath
com.apple.madrid
/var/tmp/com.apple.messages
checking if transfer request is for Messages, topicIsMadrid: %@, receivePathPrefixIsMessages: %@
com.apple.messages.MMCSPreAuth
com.apple.messages.MMCSPutFile
com.apple.messages.MMCSGetFile
IMTransferAgentIDSInterface
IDSServiceDelegate
NSObject
FTiMessageRequestMMCSDownloadToken
NSCopying
FTiMessageRequestMMCSUploadToken
IMTransferAgentController
IMTransferAgentDeliveryController
IMTransferAgentNicknameController
IMTransferEncryptionController
IMNickname_CKRecord
IMTransferEncryptionHelpers
init
changeCurrentDirectoryPath:
initWithService:
addDelegate:queue:
removeDelegate:
dealloc
setObject:forKey:
_sendUploadRequest:topic:transferID:sourceAppID:allowReauthorize:
dataWithContentsOfFile:
_sendIDSMessage:topic:localPath:
numberWithBool:
decrementTransferCount
incrementTransferCount
_dataForKey:
_stringForKey:
defaultManager
_randomTemporaryPathWithFileName:
writeToFile:atomically:
sharedInstance
_sendUploadResponse:topic:success:error:ownerID:signature:requestURLString:transferID:
sendFilePath:topic:transferID:sourceAppID:userInfo:progressBlock:completionBlock:
objectForKey:
boolValue
removeObjectForKey:
count
_CUTCopyGzippedData
setWithObject:
sendData:toDestinations:priority:options:identifier:error:
lastPathComponent
_CUTOptionallyDecompressData
unsignedIntValue
_handleUploadRequest:
_handleUploadResponse:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
isLocalDevicePresent
remoteUploadFileRequest:topic:transferID:sourceAppID:completionBlock:
currentTransfers
localCompanionDevice
.cxx_destruct
_idsService
_uniqueIDToTransferCompletionBlockMap
_uniqueIDToFilePathMap
_numTransfers
lastObject
setTopic:
setWantsResponse:
copyWithZone:
owner
setOwner:
topic
responseAuthToken
setResponseAuthToken:
responseRequestorID
setResponseRequestorID:
signature
setSignature:
contentVersion
setContentVersion:
contentHeaders
setContentHeaders:
authURLString
setAuthURLString:
responseContentBody
setResponseContentBody:
addObject:
messageBody
mutableCopy
numberWithInteger:
intValue
setResponseContentVersion:
responseContentVersion
length
numberWithUnsignedInteger:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
command
responseCommand
requiredKeys
handleResponseDictionary:
_owner
_responseAuthToken
_signature
_responseRequestorID
_contentVersion
_contentHeaders
_authURLString
_responseContentBody
_responseContentVersion
T@"NSString",C,V_owner
T@"NSData",C,V_signature
T@"NSString",C,V_responseAuthToken
T@"NSString",C,V_responseRequestorID
Tq,V_contentVersion
T@"NSString",C,V_contentHeaders
T@"NSString",C,V_authURLString
T@"NSData",C,V_responseContentBody
Tq,V_responseContentVersion
setResponseRequestURL:
setLength:
setContentBody:
setResponseContentHeaders:
setSenderID:
setDestinationID:
setAnonymousSenderID:
setSessionToken:
setPushToken:
responseRequestURL
contentBody
responseContentHeaders
senderID
destinationID
anonymousSenderID
sessionToken
pushToken
_length
_responseRequestURL
_contentBody
_responseContentHeaders
_sessionToken
_senderID
_destinationID
_anonymousSenderID
T@"NSNumber",C,V_length
T@"NSString",C,V_responseRequestURL
T@"NSData",C,V_contentBody
T@"NSString",C,V_responseContentHeaders
T@"NSData",C,N,VpushToken
T@"NSData",C,N,V_sessionToken
T@"NSString",C,N,V_senderID
T@"NSString",C,N,V_destinationID
T@"NSString",C,N,V_anonymousSenderID
domain
isEqualToString:
code
setController:
stringGUID
setGuid:
stringByResolvingAndStandardizingPath
setLocalPath:
setEncryptionBehavior:
protocolFileSize
setProgressUpdateBlock:
guid
_shouldRetryUploadGivenMMCSError:retryAttemptCount:
_sendFilePath:topic:transferID:sourceAppID:retryAttemptCount:userInfo:progressBlock:completionBlock:
mmcsError
requestorID
requestURL
absoluteString
setCompletionBlock:
startTimingForKey:
stopTimingForKey:
numberWithUnsignedLongLong:
getContentHeadersAsString
authRequestData
valueForKey:
date
linkQualityValueForInterfaceType:
parseContentHeaderAsDictionary:treatValuesAsArrays:
objectForKeyedSubscript:
firstObject
setProtocolVersion:
protocolVersion
setAuthResponseData:
authResponseData
rangeOfString:
URLWithString:
setMMCSError:
timeIntervalSinceDate:
numberWithLong:
trackEvent:withDictionary:
numberWithDouble:
wiFiActiveAndReachable
numberWithInt:
objectAtIndexedSubscript:
completionBlock
unregisterFiles:
putFiles:requestURL:requestorID:transferID:sourceAppID:authToken:preauthenticate:completionBlock:
sendFTMessage:completionBlock:
registerFilesForUpload:withPreauthentication:completionBlock:
attributesOfItemAtPath:error:
longValue
cancelPutRequestID:
sharedInstanceForBagType:
_defaultMMCSAllowlist
countByEnumeratingWithState:objects:count:
__im_conformsToDomain:domainExtension:
_isAllowlistedURL:
errorWithDomain:code:userInfo:
setRequestURL:
setProtocolFileSize:
localPath
_receiveFileTransfer:topic:path:requestURLString:ownerID:signature:allowReauthorize:fileSize:sourceAppID:progressBlock:completionBlock:
authToken
getFiles:requestURL:requestorID:sourceAppID:authToken:completionBlock:
registerFilesForDownload:completionBlock:
scheme
host
setRequestorID:
setAuthToken:
defaultHFSFileManager
fileSize
cancelSendTransferID:
receiveFileTransfer:topic:path:requestURLString:ownerID:signature:fileSize:sourceAppID:progressBlock:completionBlock:
controller
_controller
T@"MMCSController",&,N,V_controller
APNSMessageDeliveryClass
setMaxConcurrentMessages:
setMessageDelivery:
sendMessage:
messageDelivery
_messageDelivery
T@"FTMessageDelivery",&,N,V_messageDelivery
supportsNameAndPhoto
initWithRecordName:
arrayWithObject:
initWithRecordIDs:
_nickNameFetchConfiguration
setConfiguration:
preKeyWithDataRepresentation:error:
nicknameFromPublicRecord:preKey:error:
setFetchRecordsCompletionBlock:
_nickNamePublicDB
addOperation:
performCloudKitOperation:withError:
_nickNameContainer
fetchUserRecordIDWithCompletionHandler:
predicateWithFormat:
initWithRecordType:predicate:
defaultRecordZone
zoneID
performQuery:inZoneWithID:completionHandler:
fetchCurrentUserForNicknameContainer:
generatePreKeyWithError:
publicRecordForNicknameWithPreKey:error:
recordID
updateNicknameWithRecordID:error:
recordName
dataRepresentation
_updateEncryptedPersonalNicknameToPublicCloudKitDBSavingRecord:deletingRecordID:withCompletionBlock:
arrayByApplyingSelector:
_updateEncryptedPersonalNicknameToPublicCloudKitDBSavingRecord:deletingRecordIDs:withCompletionBlock:
fetchAllNicknamesForCurrentUser:
array
initWithRecordsToSave:recordIDsToDelete:
_nickNameSaveConfiguration
_handleSaveNicknameError:withCompletionBlock:
setModifyRecordsCompletionBlock:
userInfo
allValues
arrayWithObjects:count:
deleteAllPersonalNicknamesWithCompletion:
cloudKitOperationWithRetryCount:withError:operation:
_retryIntervalForRetryCount:
ckQueue
addOperationWithBlock:
setQualityOfService:
setMaxConcurrentOperationCount:
publicCloudDatabase
nickNamePublicDatabase
setPreferAnonymousRequests:
unsignedIntegerValue
getBoolFromDomain:forKey:
_serverSaysToUseOldContainer
_nickNameContainerIdentifier
shouldUseDevNickNameContainer
initWithContainerIdentifier:environment:
setUseZoneWidePCS:
initWithContainerID:options:
lockdownManager
isInternalInstall
getNicknameWithRecordID:decryptionKey:completionBlock:
setPersonalNickname:oldRecordID:completionBlock:
nickNameContainer
T@"CKContainer",R,N,V_nickNameContainer
encryptURL:completionBlock:
decryptURL:key:outputFileName:completionBlock:
fileURL
dataWithContentsOfURL:options:error:
_blastdoorNicknameFromPublicRecord:preKey:error:
publicDictionaryRepresentationWithoutAvatar
dictionaryWithObjectsAndKeys:
avatar
publicDictionaryMetadataRepresentation
imageData
encryptAndTagPlainFields:withPreKey:returningRecordTag:error:
stringRepresentation
_CKRecordFromDictionary:recordName:assetFieldNames:error:
_assetTargetURLForRecordName:fieldName:error:
imageFilePath
imageName
fileURLWithPath:
_moveAvatarImage:newURL:error:
path
initWithImageName:imageFilePath:
setAvatar:
setRecordID:
fileExistsAtPath:
removeItemAtPath:error:
moveItemAtURL:toURL:error:
initWithRecordType:
allKeys
containsObject:
initWithImageName:imageData:imageFilePath:error:
initWithFileURL:
setItemTypeHint:
stringByExpandingTildeInPath
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
stringByAppendingFormat:
stringByReplacingOccurrencesOfString:withString:
URLByAppendingPathComponent:
dataFromCKRecord:forKey:error:
data
hasPrefix:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v24@0:8@16
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v16@0:8
v56@0:8@16@24@32@40@?48
i16@0:8
v52@0:8@16@24@32@40B48
v76@0:8@16@24B32@36@44@52@60@68
B40@0:8@16@24@32
@"IDSService"
@"NSMutableDictionary"
@24@0:8^{_NSZone=}16
q16@0:8
v24@0:8q16
@"NSString"
@"NSData"
@"NSNumber"
B32@0:8@16Q24
v80@0:8@16@24@32@40Q48@56@?64@?72
v72@0:8@16@24@32@40@48@?56@?64
v100@0:8@16@24@32@40@48@56B64Q68@76@?84@?92
v96@0:8@16@24@32@40@48@56Q64@72@?80@?88
@"MMCSController"
v32@0:8@16@?24
@"FTMessageDelivery"
v24@0:8@?16
v32@0:8@?16@24
v40@0:8Q16@24@?32
d24@0:8Q16
@"CKContainer"
v48@0:8@16@24@32@?40
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@40@0:8@16@24^@32
@(#)PROGRAM:IMTransferAgent  PROJECT:IMTransferAgent-1
command
file-data
topic
transfer-ID
source-app-ID
file-name
sent-path
success
owner-id
signature
url-string-key
v8@?0
LocalAttachments
IMTransfer Agent IDS Interface starting
com.apple.private.alloy.idstransfers
Received Request to Remote Upload an Attachment at %@ sourceApp %@
(Incremented) Transfer Count is now %d
(Decremented) Transfer Count is now %d
(Getter) Transfer Count is now %d
Warning, missing %@ to add to %s
msgDict
We Have No More Transfers Remaining, We will shut down in 10 seconds
Idle exiting, we're done here
RECEIVED Remote Attachment IDS Message
v32@?0Q8Q16Q24
Finished Uploading The Remote request file with SentPath: %@, Success: %@ Error: %@ OwnerID: %@ Signature: %@ RequestURLString: %@
v60@?0@"NSString"8B16@"NSError"20@"NSString"28@"NSString"36@"NSData"44@"NSString"52
 Found completion block for attachment
 No completion block for attachment found
 SENDING Remote Attachment IDS Message with content %@
Sending message to local account (identifier %@)  (error %@)  (messageDict %@) success: %@
incomingData on service %@, account %@ data %@ fromID %@ context %@
Unknown incoming IDS message for remote attachments with command %d, ignoring...
Sent message with identifier %@ success %@
dictionary
MMCS
Upload token handled response dictionary %@
IMTransferAgentErrorDomain
We will not try to re-upload as the transfer was explicitly cancelled
Sent MMCS transfer progress updated to %0.02f  (%@)
v24@?0@"MMCSPutFile"8d16
Opting upload with GUID %@ out of optimized AuthPut flow.
File transfer upload failed! %@  Should retry: %@   Retries: %@  Max Retries: %d
Needs to reauthorize, will retry using that: %@
transfer %@ completionBlock called with putFile %@ sucess %@ shouldRetry %@ shouldReauthorize %@ error %@
v36@?0@"MMCSPutFile"8B16B20B24@"NSError"28
Upload-transfer-%@-mmcs-registration
Upload-transfer-%@-preauth
Upload-transfer-%@-mmcs-upload
Registered transfer %@
Made signature: %@
Tried to send Madrid AuthPut, but could not fetch content body for transfer: %@
Tried to send Madrid AuthPut, but could not fetch content header for transfer: %@
TransferID %@ Sending upload request: %@
  Cell Link Quality: %d
  WiFi Link Quality: %d
x-apple-mmcs-proto-version
Madrid responded with 'cV': %tu, but no protocol version was found in header: %@ (transfer: %@)
Madrid responded with 'cV': %tu, but no auth data was found in header: %@ (transfer: %@)
Madrid responded with 'cV': %tu, but we requested a 'cV': %tu (transfer: %@)
TransferID %@ Finished sending mmcs upload request: %@
    Auth token: %@
   Request URL: %@
      Owner ID: %@
http://%@
%@/%@
Request to send transfer: %@ %@   requestorID: %@  requestURL: %@  auth token: %@
Upload timing for transfer ID %@ %@
Finished upload request for files: %@  upload time was: %f  speed: %.0f kb/s
Failed upload request: %@   files: %@   upload time was: %f
v28@?0@"NSArray"8B16@"NSError"20
Failed sending mmcs upload request: %@
v32@?0@"IMTransferAgentDeliveryController"8@16B24I28
Failed registering transfer: %@
v12@?0B8
IMTransferAgent
local device: %@ file size: %lu
icloud
mmcs-whitelist
Server bag does not have allowlisted urls. Resorting to defaults
Checking URL %@ with domains %@
URL is allowlisted %@
MMCS: Invalid URL %@
MMCS failing transfer invalid url %@
Invalid url
Received MMCS transfer progress updated to %0.02f  (%@)
v24@?0@"MMCSGetFile"8d16
Created get file request: %@
Receiving file transfer complete: %@
Receiving file transfer failed: %@    error: %@
File transfer downloads failed!  Should retry: %@   Retries: %d  Max Retries: %d
Needs to re-authorize, will retry using that: %@
Re-registering files: %@
Getting transfers: %@
Finished download request for files: %@     retry: %d
Failed download request: %@   files: %@   retry: %d
v36@?0@"MMCSGetFile"8B16B20B24@"NSError"28
download-transfer-%@-mmcs-registration
download-transfer-%@-preauth
download-transfer-%@-mmcs-upload
Opting download with GUID %@ out of optimized AuthGet flow.
%@://%@
Sending Madrid AuthGet with content headers: %@ body:%@ for transfer: %@
Tried to send Madrid AuthGet, but could not fetch content header for transfer: %@
Madrid responded with 'cV': %tu, but no response body (transfer: %@)
Finished sending mmcs download request: %@
Request to receive transfer: %@  path: %@  auth token: %@  requestor ID: %@
Download timing for transfer ID%@ %@
Built download succeeded for files: %@
Finished download request for files: %@  download time was: %f  speed: %.0f kb/s
Failed downloading files: %@  error: %@  time was: %f
Failed sending mmcs download request: %@, error %u
MessageDelivery
Sending FTMessage: %@
send FTMessage: %@
    Delivered FTMessage: %@
    Result code: %d, errorType = %d
    Result dictionary: %@
    Error: %@
  Success: %@
Sending callback for FTMessage send
v40@?0@"IDSBaseMessage"8@"NSError"16q24@"NSDictionary"32
com.apple.nickname
description
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@?<B@?>8
v24@?0@"CKRecordID"8@"NSError"16
creatorUserRecordID == %@
v24@?0@"NSArray"8@"NSError"16
v44@?0B8@"IMNickname"12@"NSString"20@"NSData"28@"NSError"36
Nickname Upload
v20@?0B8@"NSError"12
Nickname Delete
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
B8@?0
use-old-nickname-container
UseOldProfilesContainer
com.apple.internal.messages.memoji
com.apple.messages.profiles
Encryption
Request to encrypt data at url: %@
Request to decrypt data at url: %@  with key: %@
imsgNicknamePublicv2
Missing fileURL for CKAsset {key: %@, value: %@}
Unexpected type for {key: %@, value: %@}
IMNickname CKRecord contains object for key '%@' but of unexpected type
IMNickname_CKRecord
Decrypting nickname record
Handing Nickname data to BlastDoor to defuse
Creating record from nickname {nickname: %@, preKey: %@}
Failed to create nicknameData -- Failed to create nickname public record {nickname: %@}
Missing nickname
Nickname has avatar data
Nickname doesn't have avatar data {nickname: %@}
Failed to encrypt nickname {error: %@, nickname: %@, preKey: %@}
Failed to create record from cipherFields {error: %@, cipherFields: %@, nickname: %@}
Failed to get target url for avatar image while updating nickname {error: %@, recordID: %@}
Failed to move image from %@ to %@ for recordID: %@
Failed to move item %@ to %@ with error %@
Failed to create target URL for nickname asset {error: %@, recordName: %@, fieldName: %@}
Writing nickname asset {targetURL: %@}
Failed to write nickname asset {error: %@, targetURL: %@, data.length: %ld}
Created record from dictionary {record.allKeys: %@, dictionary.allKeys: %@, assetFieldNames: %@}
Failed to create record from dictioanry {error: %@, dictioanry: %@}
Failed to create nickname assets directory {error: %@, url: %@}
should-disallow-authget
OptOutOfOptimizedDownloadPath
EnableOptimizedUploadPath
should-disallow-authput
OptOutOfOptimizedUploadPath
com.apple.madrid
/var/tmp/com.apple.messages
checking if transfer request is for Messages, topicIsMadrid: %@, receivePathPrefixIsMessages: %@
com.apple.messages.MMCSPreAuth
com.apple.messages.MMCSPutFile
com.apple.messages.MMCSGetFile
IMTransferAgentIDSInterface
IDSServiceDelegate
NSObject
FTiMessageRequestMMCSDownloadToken
NSCopying
FTiMessageRequestMMCSUploadToken
IMTransferAgentController
IMTransferAgentDeliveryController
IMTransferAgentNicknameController
IMTransferEncryptionController
IMNickname_CKRecord
IMTransferEncryptionHelpers
numberWithInteger:
__im_conformsToDomain:domainExtension:
setMMCSError:
requestorID
supportsNameAndPhoto
writeToFile:atomically:
firstObject
putFiles:requestURL:requestorID:transferID:sourceAppID:authToken:preauthenticate:completionBlock:
authToken
imageName
setProtocolVersion:
domain
initWithRecordsToSave:recordIDsToDelete:
addOperationWithBlock:
containsObject:
numberWithInt:
date
fileURLWithPath:
_CUTOptionallyDecompressData
requestURL
setLocalPath:
setConfiguration:
localPath
wiFiActiveAndReachable
path
imageFilePath
dictionaryWithObjectsAndKeys:
dataWithContentsOfURL:options:error:
initWithRecordType:predicate:
setProtocolFileSize:
addOperation:
authResponseData
stringWithFormat:
sharedInstanceForBagType:
fileURL
numberWithDouble:
URLWithString:
_CUTCopyGzippedData
removeObjectForKey:
initWithRecordType:
completionBlock
valueForKey:
stringRepresentation
setCompletionBlock:
setItemTypeHint:
parseContentHeaderAsDictionary:treatValuesAsArrays:
authRequestData
removeItemAtPath:error:
sendData:toDestinations:priority:options:identifier:error:
setProgressUpdateBlock:
dictionaryWithObjects:forKeys:count:
imageData
setAvatar:
publicDictionaryRepresentationWithoutAvatar
numberWithBool:
dataWithContentsOfFile:
addObject:
userInfo
setPreferAnonymousRequests:
fileSize
linkQualityValueForInterfaceType:
initWithRecordName:
code
scheme
attributesOfItemAtPath:error:
dataRepresentation
stringGUID
fileExistsAtPath:
host
setGuid:
publicDictionaryMetadataRepresentation
removeDelegate:
addDelegate:queue:
setWithObject:
arrayWithObjects:count:
initWithRecordIDs:
objectForKeyedSubscript:
stringByResolvingAndStandardizingPath
hasPrefix:
data
unsignedIntegerValue
setFetchRecordsCompletionBlock:
publicCloudDatabase
stringByReplacingOccurrencesOfString:withString:
absoluteString
setWantsResponse:
initWithImageName:imageFilePath:
lastPathComponent
fetchUserRecordIDWithCompletionHandler:
setAuthToken:
setObject:forKey:
objectForKey:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
arrayWithObject:
APNSMessageDeliveryClass
setUseZoneWidePCS:
protocolVersion
guid
registerFilesForUpload:withPreauthentication:completionBlock:
setAuthResponseData:
mutableCopy
setEncryptionBehavior:
lastObject
stringByExpandingTildeInPath
unsignedIntValue
_randomTemporaryPathWithFileName:
initWithImageName:imageData:imageFilePath:error:
changeCurrentDirectoryPath:
setRequestorID:
setModifyRecordsCompletionBlock:
arrayByApplyingSelector:
defaultRecordZone
moveItemAtURL:toURL:error:
objectAtIndexedSubscript:
isInternalInstall
getFiles:requestURL:requestorID:sourceAppID:authToken:completionBlock:
registerFilesForDownload:completionBlock:
countByEnumeratingWithState:objects:count:
setTopic:
stringByAppendingFormat:
setRequestURL:
cancelPutRequestID:
initWithFileURL:
unregisterFiles:
protocolFileSize
array
URLByAppendingPathComponent:
numberWithUnsignedLongLong:
recordName
_dataForKey:
defaultManager
getContentHeadersAsString
setRecordID:
mmcsError
count
predicateWithFormat:
_stringForKey:
errorWithDomain:code:userInfo:
trackEvent:withDictionary:
initWithContainerIdentifier:environment:
boolValue
isEqualToString:
setMaxConcurrentOperationCount:
defaultHFSFileManager
stopTimingForKey:
getBoolFromDomain:forKey:
numberWithUnsignedInteger:
avatar
setQualityOfService:
preKeyWithDataRepresentation:error:
intValue
topic
initWithContainerID:options:
allValues
setMaxConcurrentMessages:
generatePreKeyWithError:
numberWithLong:
startTimingForKey:
zoneID
encryptAndTagPlainFields:withPreKey:returningRecordTag:error:
longValue
rangeOfString:
performQuery:inZoneWithID:completionHandler:
allKeys
sendMessage:
timeIntervalSinceDate:
initWithService:
init
dealloc
sharedInstance
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
isLocalDevicePresent
remoteUploadFileRequest:topic:transferID:sourceAppID:completionBlock:
incrementTransferCount
decrementTransferCount
currentTransfers
_sendUploadRequest:topic:transferID:sourceAppID:allowReauthorize:
_sendUploadResponse:topic:success:error:ownerID:signature:requestURLString:transferID:
_handleUploadRequest:
_handleUploadResponse:
_sendIDSMessage:topic:localPath:
localCompanionDevice
.cxx_destruct
_idsService
_uniqueIDToTransferCompletionBlockMap
_uniqueIDToFilePathMap
_numTransfers
copyWithZone:
messageBody
command
responseCommand
requiredKeys
handleResponseDictionary:
owner
setOwner:
responseAuthToken
setResponseAuthToken:
signature
setSignature:
responseRequestorID
setResponseRequestorID:
contentVersion
setContentVersion:
contentHeaders
setContentHeaders:
authURLString
setAuthURLString:
responseContentBody
setResponseContentBody:
responseContentVersion
setResponseContentVersion:
_owner
_responseAuthToken
_signature
_responseRequestorID
_contentVersion
_contentHeaders
_authURLString
_responseContentBody
_responseContentVersion
T@"NSString",C,V_owner
T@"NSData",C,V_signature
T@"NSString",C,V_responseAuthToken
T@"NSString",C,V_responseRequestorID
Tq,V_contentVersion
T@"NSString",C,V_contentHeaders
T@"NSString",C,V_authURLString
T@"NSData",C,V_responseContentBody
Tq,V_responseContentVersion
pushToken
setPushToken:
length
setLength:
responseRequestURL
setResponseRequestURL:
contentBody
setContentBody:
responseContentHeaders
setResponseContentHeaders:
sessionToken
setSessionToken:
senderID
setSenderID:
destinationID
setDestinationID:
anonymousSenderID
setAnonymousSenderID:
_length
_responseRequestURL
_contentBody
_responseContentHeaders
_sessionToken
_senderID
_destinationID
_anonymousSenderID
T@"NSNumber",C,V_length
T@"NSString",C,V_responseRequestURL
T@"NSData",C,V_contentBody
T@"NSString",C,V_responseContentHeaders
T@"NSData",C,N,VpushToken
T@"NSData",C,N,V_sessionToken
T@"NSString",C,N,V_senderID
T@"NSString",C,N,V_destinationID
T@"NSString",C,N,V_anonymousSenderID
_shouldRetryUploadGivenMMCSError:retryAttemptCount:
_sendFilePath:topic:transferID:sourceAppID:retryAttemptCount:userInfo:progressBlock:completionBlock:
sendFilePath:topic:transferID:sourceAppID:userInfo:progressBlock:completionBlock:
cancelSendTransferID:
_defaultMMCSAllowlist
_isAllowlistedURL:
_receiveFileTransfer:topic:path:requestURLString:ownerID:signature:allowReauthorize:fileSize:sourceAppID:progressBlock:completionBlock:
receiveFileTransfer:topic:path:requestURLString:ownerID:signature:fileSize:sourceAppID:progressBlock:completionBlock:
controller
setController:
_controller
T@"MMCSController",&,N,V_controller
sendFTMessage:completionBlock:
messageDelivery
setMessageDelivery:
_messageDelivery
T@"FTMessageDelivery",&,N,V_messageDelivery
recordID
ckQueue
getNicknameWithRecordID:decryptionKey:completionBlock:
fetchCurrentUserForNicknameContainer:
fetchAllNicknamesForCurrentUser:
setPersonalNickname:oldRecordID:completionBlock:
deleteAllPersonalNicknamesWithCompletion:
_updateEncryptedPersonalNicknameToPublicCloudKitDBSavingRecord:deletingRecordID:withCompletionBlock:
_updateEncryptedPersonalNicknameToPublicCloudKitDBSavingRecord:deletingRecordIDs:withCompletionBlock:
_handleSaveNicknameError:withCompletionBlock:
performCloudKitOperation:withError:
cloudKitOperationWithRetryCount:withError:operation:
nickNamePublicDatabase
_nickNamePublicDB
_nickNameSaveConfiguration
_nickNameFetchConfiguration
_retryIntervalForRetryCount:
_serverSaysToUseOldContainer
_nickNameContainerIdentifier
_nickNameContainer
shouldUseDevNickNameContainer
lockdownManager
nickNameContainer
T@"CKContainer",R,N,V_nickNameContainer
encryptURL:completionBlock:
decryptURL:key:outputFileName:completionBlock:
publicRecordForNicknameWithPreKey:error:
updateNicknameWithRecordID:error:
_moveAvatarImage:newURL:error:
_CKRecordFromDictionary:recordName:assetFieldNames:error:
dataFromCKRecord:forKey:error:
nicknameFromPublicRecord:preKey:error:
_blastdoorNicknameFromPublicRecord:preKey:error:
_assetTargetURLForRecordName:fieldName:error:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v24@0:8@16
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v16@0:8
v56@0:8@16@24@32@40@?48
i16@0:8
v52@0:8@16@24@32@40B48
v76@0:8@16@24B32@36@44@52@60@68
B40@0:8@16@24@32
@"IDSService"
@"NSMutableDictionary"
@24@0:8^{_NSZone=}16
q16@0:8
v24@0:8q16
@"NSString"
@"NSData"
@"NSNumber"
B32@0:8@16Q24
v80@0:8@16@24@32@40Q48@56@?64@?72
v72@0:8@16@24@32@40@48@?56@?64
v100@0:8@16@24@32@40@48@56B64Q68@76@?84@?92
v96@0:8@16@24@32@40@48@56Q64@72@?80@?88
@"MMCSController"
v32@0:8@16@?24
@"FTMessageDelivery"
v24@0:8@?16
v32@0:8@?16@24
v40@0:8Q16@24@?32
d24@0:8Q16
@"CKContainer"
v48@0:8@16@24@32@?40
@32@0:8@16^@24
B32@0:8@16^@24
B40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@40@0:8@16@24^@32
